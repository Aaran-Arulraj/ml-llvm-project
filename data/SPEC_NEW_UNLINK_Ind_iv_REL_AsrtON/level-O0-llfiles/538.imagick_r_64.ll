; ModuleID = 'magick/draw.c'
source_filename = "magick/draw.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct._DrawInfo = type { i8*, i8*, %struct._RectangleInfo, %struct._AffineMatrix, i32, %struct._PixelPacket, %struct._PixelPacket, double, %struct._GradientInfo, %struct._Image*, %struct._Image*, %struct._Image*, i32, i32, i32, i32, i32, i64, double, i32, i32, i8*, i64, i8*, i8*, i8*, i32, i32, i64, i8*, double, i8*, i32, %struct._PixelPacket, %struct._PixelPacket, i8*, double*, i8*, %struct._SegmentInfo, i32, i16, i32, %struct._ElementReference, i32, i64, double, double, double, i32 }
%struct._RectangleInfo = type { i64, i64, i64, i64 }
%struct._AffineMatrix = type { double, double, double, double, double, double }
%struct._GradientInfo = type { i32, %struct._RectangleInfo, %struct._SegmentInfo, %struct._StopInfo*, i64, i32, i32, i64, %struct._PointInfo, float }
%struct._StopInfo = type { %struct._MagickPixelPacket, float }
%struct._MagickPixelPacket = type { i32, i32, i32, double, i64, float, float, float, float, float }
%struct._PointInfo = type { double, double }
%struct._Image = type { i32, i32, i32, i64, i32, i32, i32, i64, i64, i64, i64, %struct._PixelPacket*, %struct._PixelPacket, %struct._PixelPacket, %struct._PixelPacket, double, %struct._ChromaticityInfo, i32, i8*, i32, i8*, i8*, i8*, i64, double, double, %struct._RectangleInfo, %struct._RectangleInfo, %struct._RectangleInfo, double, double, double, i32, i32, i32, i32, i32, i32, %struct._Image*, i64, i64, i64, i64, i64, i64, %struct._ErrorInfo, %struct._TimerInfo, i32 (i8*, i64, i64, i8*)*, i8*, i8*, i8*, %struct._Ascii85Info*, %struct._BlobInfo*, [4096 x i8], [4096 x i8], [4096 x i8], i64, i64, %struct._ExceptionInfo, i32, i64, %struct.SemaphoreInfo*, %struct._ProfileInfo, %struct._ProfileInfo, %struct._ProfileInfo*, i64, i64, %struct._Image*, %struct._Image*, %struct._Image*, i32, i32, %struct._PixelPacket, %struct._Image*, %struct._RectangleInfo, i8*, i8*, i32, i32, i64, i32, i64, i64, i32, i64 }
%struct._ChromaticityInfo = type { %struct._PrimaryInfo, %struct._PrimaryInfo, %struct._PrimaryInfo, %struct._PrimaryInfo }
%struct._PrimaryInfo = type { double, double, double }
%struct._ErrorInfo = type { double, double, double }
%struct._TimerInfo = type { %struct._Timer, %struct._Timer, i32, i64 }
%struct._Timer = type { double, double, double }
%struct._Ascii85Info = type opaque
%struct._BlobInfo = type opaque
%struct._ExceptionInfo = type { i32, i32, i8*, i8*, i8*, i32, %struct.SemaphoreInfo*, i64 }
%struct.SemaphoreInfo = type opaque
%struct._ProfileInfo = type { i8*, i64, i8*, i64 }
%struct._PixelPacket = type { i16, i16, i16, i16 }
%struct._SegmentInfo = type { double, double, double, double }
%struct._ElementReference = type { i8*, i32, %struct._GradientInfo, i64, %struct._ElementReference*, %struct._ElementReference* }
%struct._ImageInfo = type { i32, i32, i32, i32, i32, i32, i8*, i8*, i8*, i8*, i64, i64, i64, i32, i32, i32, i64, i8*, i8*, i8*, i8*, i8*, double, double, %struct._PixelPacket, %struct._PixelPacket, %struct._PixelPacket, i32, i32, i64, i32, i32, i32, i64, i32, i32, i8*, i8*, i32, %struct._Image*, i8*, i32 (i8*, i64, i64, i8*)*, i8*, i8*, i64 (%struct._Image*, i8*, i64)*, %struct._IO_FILE*, i8*, i64, [4096 x i8], [4096 x i8], [4096 x i8], [4096 x i8], i32, i8*, i64, i64, %struct._PixelPacket, i64, i32, %struct._PixelPacket, i8*, i32 }
%struct._CacheView = type opaque
%struct._PrimitiveInfo = type { %struct._PointInfo, i64, i32, i32, i8* }
%struct._PolygonInfo = type { %struct._EdgeInfo*, i64 }
%struct._EdgeInfo = type { %struct._SegmentInfo, double, %struct._PointInfo*, i64, i64, i32, i64 }
%struct._PathInfo = type { %struct._PointInfo, i32 }
%struct._LineSegment = type { double, double }

@.str = private unnamed_addr constant [14 x i8] c"magick/draw.c\00", align 1
@.str.1 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"MemoryAllocationFailed\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"`%s'\00", align 1
@.str.4 = private unnamed_addr constant [28 x i8] c"UnableToAllocateDashPattern\00", align 1
@.str.5 = private unnamed_addr constant [4 x i8] c"...\00", align 1
@.str.6 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.7 = private unnamed_addr constant [10 x i8] c"#00000000\00", align 1
@.str.8 = private unnamed_addr constant [20 x i8] c"\0Abegin clip-path %s\00", align 1
@.str.9 = private unnamed_addr constant [8 x i8] c"#ffffff\00", align 1
@.str.10 = private unnamed_addr constant [14 x i8] c"end clip-path\00", align 1
@.str.11 = private unnamed_addr constant [17 x i8] c"begin draw-image\00", align 1
@.str.12 = private unnamed_addr constant [4 x i8] c"MVG\00", align 1
@.str.13 = private unnamed_addr constant [8 x i8] c"#000000\00", align 1
@.str.14 = private unnamed_addr constant [7 x i8] c"affine\00", align 1
@.str.15 = private unnamed_addr constant [4 x i8] c"arc\00", align 1
@.str.16 = private unnamed_addr constant [7 x i8] c"bezier\00", align 1
@.str.17 = private unnamed_addr constant [13 x i8] c"border-color\00", align 1
@.str.18 = private unnamed_addr constant [10 x i8] c"clip-path\00", align 1
@.str.19 = private unnamed_addr constant [10 x i8] c"clip-rule\00", align 1
@.str.20 = private unnamed_addr constant [11 x i8] c"clip-units\00", align 1
@.str.21 = private unnamed_addr constant [7 x i8] c"circle\00", align 1
@.str.22 = private unnamed_addr constant [6 x i8] c"color\00", align 1
@.str.23 = private unnamed_addr constant [9 x i8] c"decorate\00", align 1
@.str.24 = private unnamed_addr constant [10 x i8] c"direction\00", align 1
@.str.25 = private unnamed_addr constant [8 x i8] c"ellipse\00", align 1
@.str.26 = private unnamed_addr constant [9 x i8] c"encoding\00", align 1
@.str.27 = private unnamed_addr constant [5 x i8] c"fill\00", align 1
@.str.28 = private unnamed_addr constant [13 x i8] c"fill-opacity\00", align 1
@.str.29 = private unnamed_addr constant [10 x i8] c"fill-rule\00", align 1
@.str.30 = private unnamed_addr constant [5 x i8] c"font\00", align 1
@.str.31 = private unnamed_addr constant [5 x i8] c"none\00", align 1
@.str.32 = private unnamed_addr constant [12 x i8] c"font-family\00", align 1
@.str.33 = private unnamed_addr constant [10 x i8] c"font-size\00", align 1
@.str.34 = private unnamed_addr constant [13 x i8] c"font-stretch\00", align 1
@.str.35 = private unnamed_addr constant [11 x i8] c"font-style\00", align 1
@.str.36 = private unnamed_addr constant [12 x i8] c"font-weight\00", align 1
@.str.37 = private unnamed_addr constant [4 x i8] c"all\00", align 1
@.str.38 = private unnamed_addr constant [5 x i8] c"bold\00", align 1
@.str.39 = private unnamed_addr constant [7 x i8] c"bolder\00", align 1
@.str.40 = private unnamed_addr constant [8 x i8] c"lighter\00", align 1
@.str.41 = private unnamed_addr constant [7 x i8] c"normal\00", align 1
@.str.42 = private unnamed_addr constant [15 x i8] c"gradient-units\00", align 1
@.str.43 = private unnamed_addr constant [8 x i8] c"gravity\00", align 1
@.str.44 = private unnamed_addr constant [6 x i8] c"image\00", align 1
@.str.45 = private unnamed_addr constant [18 x i8] c"interline-spacing\00", align 1
@.str.46 = private unnamed_addr constant [18 x i8] c"interword-spacing\00", align 1
@.str.47 = private unnamed_addr constant [8 x i8] c"kerning\00", align 1
@.str.48 = private unnamed_addr constant [5 x i8] c"line\00", align 1
@.str.49 = private unnamed_addr constant [6 x i8] c"matte\00", align 1
@.str.50 = private unnamed_addr constant [7 x i8] c"offset\00", align 1
@.str.51 = private unnamed_addr constant [8 x i8] c"opacity\00", align 1
@.str.52 = private unnamed_addr constant [5 x i8] c"path\00", align 1
@.str.53 = private unnamed_addr constant [6 x i8] c"point\00", align 1
@.str.54 = private unnamed_addr constant [9 x i8] c"polyline\00", align 1
@.str.55 = private unnamed_addr constant [8 x i8] c"polygon\00", align 1
@.str.56 = private unnamed_addr constant [4 x i8] c"pop\00", align 1
@.str.57 = private unnamed_addr constant [5 x i8] c"defs\00", align 1
@.str.58 = private unnamed_addr constant [9 x i8] c"gradient\00", align 1
@.str.59 = private unnamed_addr constant [16 x i8] c"graphic-context\00", align 1
@.str.60 = private unnamed_addr constant [32 x i8] c"UnbalancedGraphicContextPushPop\00", align 1
@.str.61 = private unnamed_addr constant [8 x i8] c"pattern\00", align 1
@.str.62 = private unnamed_addr constant [5 x i8] c"push\00", align 1
@.str.63 = private unnamed_addr constant [7 x i8] c"radial\00", align 1
@.str.64 = private unnamed_addr constant [12 x i8] c"%s-geometry\00", align 1
@.str.65 = private unnamed_addr constant [18 x i8] c"%gx%g%+.15g%+.15g\00", align 1
@.str.66 = private unnamed_addr constant [24 x i8] c"%.20gx%.20g%+.20g%+.20g\00", align 1
@.str.67 = private unnamed_addr constant [10 x i8] c"rectangle\00", align 1
@.str.68 = private unnamed_addr constant [7 x i8] c"rotate\00", align 1
@.str.69 = private unnamed_addr constant [15 x i8] c"roundRectangle\00", align 1
@.str.70 = private unnamed_addr constant [6 x i8] c"scale\00", align 1
@.str.71 = private unnamed_addr constant [6 x i8] c"skewX\00", align 1
@.str.72 = private unnamed_addr constant [6 x i8] c"skewY\00", align 1
@.str.73 = private unnamed_addr constant [11 x i8] c"stop-color\00", align 1
@.str.74 = private unnamed_addr constant [7 x i8] c"stroke\00", align 1
@.str.75 = private unnamed_addr constant [17 x i8] c"stroke-antialias\00", align 1
@.str.76 = private unnamed_addr constant [17 x i8] c"stroke-dasharray\00", align 1
@.str.77 = private unnamed_addr constant [18 x i8] c"stroke-dashoffset\00", align 1
@.str.78 = private unnamed_addr constant [15 x i8] c"stroke-linecap\00", align 1
@.str.79 = private unnamed_addr constant [16 x i8] c"stroke-linejoin\00", align 1
@.str.80 = private unnamed_addr constant [18 x i8] c"stroke-miterlimit\00", align 1
@.str.81 = private unnamed_addr constant [15 x i8] c"stroke-opacity\00", align 1
@.str.82 = private unnamed_addr constant [13 x i8] c"stroke-width\00", align 1
@.str.83 = private unnamed_addr constant [5 x i8] c"text\00", align 1
@.str.84 = private unnamed_addr constant [11 x i8] c"text-align\00", align 1
@.str.85 = private unnamed_addr constant [12 x i8] c"text-anchor\00", align 1
@.str.86 = private unnamed_addr constant [15 x i8] c"text-antialias\00", align 1
@.str.87 = private unnamed_addr constant [16 x i8] c"text-undercolor\00", align 1
@.str.88 = private unnamed_addr constant [10 x i8] c"translate\00", align 1
@.str.89 = private unnamed_addr constant [8 x i8] c"viewbox\00", align 1
@.str.90 = private unnamed_addr constant [7 x i8] c"  %.*s\00", align 1
@.str.91 = private unnamed_addr constant [25 x i8] c"TooManyBezierCoordinates\00", align 1
@.str.92 = private unnamed_addr constant [13 x i8] c"Render/Image\00", align 1
@.str.93 = private unnamed_addr constant [15 x i8] c"end draw-image\00", align 1
@.str.94 = private unnamed_addr constant [40 x i8] c"NonconformingDrawingPrimitiveDefinition\00", align 1
@.str.95 = private unnamed_addr constant [25 x i8] c"begin pattern-path %s %s\00", align 1
@.str.96 = private unnamed_addr constant [17 x i8] c"end pattern-path\00", align 1
@.str.97 = private unnamed_addr constant [23 x i8] c"  begin draw-primitive\00", align 1
@.str.98 = private unnamed_addr constant [30 x i8] c"    affine: %g %g %g %g %g %g\00", align 1
@.str.99 = private unnamed_addr constant [7 x i8] c"%+f%+f\00", align 1
@.str.100 = private unnamed_addr constant [6 x i8] c"data:\00", align 1
@.str.101 = private unnamed_addr constant [7 x i8] c"%gx%g!\00", align 1
@.str.102 = private unnamed_addr constant [21 x i8] c"  end draw-primitive\00", align 1
@.str.103 = private unnamed_addr constant [6 x i8] c"#000F\00", align 1
@.str.104 = private unnamed_addr constant [6 x i8] c"#FFF0\00", align 1
@.str.105 = private unnamed_addr constant [12 x i8] c"strokewidth\00", align 1
@.str.106 = private unnamed_addr constant [11 x i8] c"undercolor\00", align 1
@.str.107 = private unnamed_addr constant [6 x i8] c"%s/%s\00", align 1
@.str.108 = private unnamed_addr constant [8 x i8] c"replace\00", align 1
@.str.109 = private unnamed_addr constant [10 x i8] c"floodfill\00", align 1
@.str.110 = private unnamed_addr constant [13 x i8] c"filltoborder\00", align 1
@.str.111 = private unnamed_addr constant [6 x i8] c"reset\00", align 1
@.str.112 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@.str.113 = private unnamed_addr constant [30 x i8] c"PointPrimitive %.20g,%.20g %s\00", align 1
@.str.114 = private unnamed_addr constant [30 x i8] c"ColorPrimitive %.20g,%.20g %s\00", align 1
@.str.115 = private unnamed_addr constant [30 x i8] c"MattePrimitive %.20g,%.20g %s\00", align 1
@.str.116 = private unnamed_addr constant [26 x i8] c"TextPrimitive %.20g,%.20g\00", align 1
@.str.117 = private unnamed_addr constant [27 x i8] c"ImagePrimitive %.20g,%.20g\00", align 1
@.str.118 = private unnamed_addr constant [23 x i8] c"    begin open (%.20g)\00", align 1
@.str.119 = private unnamed_addr constant [25 x i8] c"      %.20g: %.18g,%.18g\00", align 1
@.str.120 = private unnamed_addr constant [31 x i8] c"      %.20g: %g %g (duplicate)\00", align 1
@.str.121 = private unnamed_addr constant [21 x i8] c"    end last (%.20g)\00", align 1
@.str.122 = private unnamed_addr constant [21 x i8] c"    end open (%.20g)\00", align 1
@.str.123 = private unnamed_addr constant [23 x i8] c"    begin draw-polygon\00", align 1
@.str.124 = private unnamed_addr constant [21 x i8] c"    end draw-polygon\00", align 1
@.str.125 = private unnamed_addr constant [22 x i8] c"    begin vector-path\00", align 1
@.str.126 = private unnamed_addr constant [15 x i8] c"      %g %g %s\00", align 1
@.str.127 = private unnamed_addr constant [17 x i8] c"moveto ghostline\00", align 1
@.str.128 = private unnamed_addr constant [12 x i8] c"moveto open\00", align 1
@.str.129 = private unnamed_addr constant [7 x i8] c"moveto\00", align 1
@.str.130 = private unnamed_addr constant [7 x i8] c"lineto\00", align 1
@.str.131 = private unnamed_addr constant [20 x i8] c"    end vector-path\00", align 1
@.str.132 = private unnamed_addr constant [22 x i8] c"    begin active-edge\00", align 1
@.str.133 = private unnamed_addr constant [18 x i8] c"      edge %.20g:\00", align 1
@.str.134 = private unnamed_addr constant [20 x i8] c"      direction: %s\00", align 1
@.str.135 = private unnamed_addr constant [5 x i8] c"down\00", align 1
@.str.136 = private unnamed_addr constant [3 x i8] c"up\00", align 1
@.str.137 = private unnamed_addr constant [20 x i8] c"      ghostline: %s\00", align 1
@.str.138 = private unnamed_addr constant [12 x i8] c"transparent\00", align 1
@.str.139 = private unnamed_addr constant [7 x i8] c"opaque\00", align 1
@.str.140 = private unnamed_addr constant [28 x i8] c"      bounds: %g %g - %g %g\00", align 1
@.str.141 = private unnamed_addr constant [14 x i8] c"        %g %g\00", align 1
@.str.142 = private unnamed_addr constant [20 x i8] c"    end active-edge\00", align 1
@.str.143 = private unnamed_addr constant [20 x i8] c"    begin draw-dash\00", align 1
@.str.144 = private unnamed_addr constant [18 x i8] c"    end draw-dash\00", align 1
@.str.145 = private unnamed_addr constant [30 x i8] c"    begin draw-stroke-polygon\00", align 1
@.str.146 = private unnamed_addr constant [28 x i8] c"    end draw-stroke-polygon\00", align 1
@.str.147 = private unnamed_addr constant [5 x i8] c"CcSs\00", align 1
@.str.148 = private unnamed_addr constant [5 x i8] c"QqTt\00", align 1
@stderr = external dso_local global %struct._IO_FILE*, align 8
@.str.149 = private unnamed_addr constant [30 x i8] c"attribute not recognized: %c\0A\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._DrawInfo* @AcquireDrawInfo() #0 !dbg !1233 {
entry:
  %draw_info = alloca %struct._DrawInfo*, align 8
  %message = alloca i8*, align 8
  %exception = alloca %struct._ExceptionInfo, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawInfo** %draw_info, metadata !1237, metadata !DIExpression()), !dbg !1238
  %call = call i8* @AcquireMagickMemory(i64 720) #11, !dbg !1239
  %0 = bitcast i8* %call to %struct._DrawInfo*, !dbg !1240
  store %struct._DrawInfo* %0, %struct._DrawInfo** %draw_info, align 8, !dbg !1241
  %1 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info, align 8, !dbg !1242
  %cmp = icmp eq %struct._DrawInfo* %1, null, !dbg !1244
  br i1 %cmp, label %if.then, label %if.end, !dbg !1245

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %message, metadata !1246, metadata !DIExpression()), !dbg !1248
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo* %exception, metadata !1249, metadata !DIExpression()), !dbg !1248
  call void @GetExceptionInfo(%struct._ExceptionInfo* %exception), !dbg !1248
  %call1 = call i32* @__errno_location() #12, !dbg !1248
  %2 = load i32, i32* %call1, align 4, !dbg !1248
  %call2 = call i8* @GetExceptionMessage(i32 %2), !dbg !1248
  store i8* %call2, i8** %message, align 8, !dbg !1248
  %3 = load i8*, i8** %message, align 8, !dbg !1248
  %call3 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %exception, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 213, i32 700, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* %3), !dbg !1248
  %4 = load i8*, i8** %message, align 8, !dbg !1248
  %call4 = call i8* @DestroyString(i8* %4), !dbg !1248
  store i8* %call4, i8** %message, align 8, !dbg !1248
  call void @CatchException(%struct._ExceptionInfo* %exception), !dbg !1248
  %call5 = call %struct._ExceptionInfo* @DestroyExceptionInfo(%struct._ExceptionInfo* %exception), !dbg !1248
  call void @MagickCoreTerminus(), !dbg !1248
  call void @_exit(i32 1) #13, !dbg !1248
  unreachable, !dbg !1248

if.end:                                           ; preds = %entry
  %5 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info, align 8, !dbg !1250
  call void @GetDrawInfo(%struct._ImageInfo* null, %struct._DrawInfo* %5), !dbg !1251
  %6 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info, align 8, !dbg !1252
  ret %struct._DrawInfo* %6, !dbg !1253
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: allocsize(0)
declare dso_local i8* @AcquireMagickMemory(i64) #2

declare dso_local void @GetExceptionInfo(%struct._ExceptionInfo*) #3

declare dso_local i8* @GetExceptionMessage(i32) #3

; Function Attrs: nounwind readnone
declare dso_local i32* @__errno_location() #4

declare dso_local i32 @ThrowMagickException(%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) #3

declare dso_local i8* @DestroyString(i8*) #3

declare dso_local void @CatchException(%struct._ExceptionInfo*) #3

declare dso_local %struct._ExceptionInfo* @DestroyExceptionInfo(%struct._ExceptionInfo*) #3

declare dso_local void @MagickCoreTerminus() #3

; Function Attrs: noreturn
declare dso_local void @_exit(i32) #5

; Function Attrs: noinline nounwind uwtable
define dso_local void @GetDrawInfo(%struct._ImageInfo* %image_info, %struct._DrawInfo* %draw_info) #0 !dbg !1254 {
entry:
  %image_info.addr = alloca %struct._ImageInfo*, align 8
  %draw_info.addr = alloca %struct._DrawInfo*, align 8
  %option = alloca i8*, align 8
  %exception = alloca %struct._ExceptionInfo*, align 8
  %clone_info = alloca %struct._ImageInfo*, align 8
  store %struct._ImageInfo* %image_info, %struct._ImageInfo** %image_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ImageInfo** %image_info.addr, metadata !1259, metadata !DIExpression()), !dbg !1260
  store %struct._DrawInfo* %draw_info, %struct._DrawInfo** %draw_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawInfo** %draw_info.addr, metadata !1261, metadata !DIExpression()), !dbg !1262
  call void @llvm.dbg.declare(metadata i8** %option, metadata !1263, metadata !DIExpression()), !dbg !1264
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception, metadata !1265, metadata !DIExpression()), !dbg !1267
  call void @llvm.dbg.declare(metadata %struct._ImageInfo** %clone_info, metadata !1268, metadata !DIExpression()), !dbg !1269
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4825, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i64 0, i64 0)), !dbg !1270
  %0 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1271
  %1 = bitcast %struct._DrawInfo* %0 to i8*, !dbg !1271
  %call1 = call i8* @ResetMagickMemory(i8* %1, i32 0, i64 720), !dbg !1272
  %2 = load %struct._ImageInfo*, %struct._ImageInfo** %image_info.addr, align 8, !dbg !1273
  %call2 = call %struct._ImageInfo* @CloneImageInfo(%struct._ImageInfo* %2), !dbg !1274
  store %struct._ImageInfo* %call2, %struct._ImageInfo** %clone_info, align 8, !dbg !1275
  %3 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1276
  %affine = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %3, i32 0, i32 3, !dbg !1277
  call void @GetAffineMatrix(%struct._AffineMatrix* %affine), !dbg !1278
  %call3 = call %struct._ExceptionInfo* @AcquireExceptionInfo(), !dbg !1279
  store %struct._ExceptionInfo* %call3, %struct._ExceptionInfo** %exception, align 8, !dbg !1280
  %4 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1281
  %fill = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %4, i32 0, i32 5, !dbg !1282
  %5 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !1283
  %call4 = call i32 @QueryColorDatabase(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.103, i64 0, i64 0), %struct._PixelPacket* %fill, %struct._ExceptionInfo* %5), !dbg !1284
  %6 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1285
  %stroke = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %6, i32 0, i32 6, !dbg !1286
  %7 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !1287
  %call5 = call i32 @QueryColorDatabase(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.104, i64 0, i64 0), %struct._PixelPacket* %stroke, %struct._ExceptionInfo* %7), !dbg !1288
  %8 = load %struct._ImageInfo*, %struct._ImageInfo** %clone_info, align 8, !dbg !1289
  %antialias = getelementptr inbounds %struct._ImageInfo, %struct._ImageInfo* %8, i32 0, i32 5, !dbg !1290
  %9 = load i32, i32* %antialias, align 4, !dbg !1290
  %10 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1291
  %stroke_antialias = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %10, i32 0, i32 12, !dbg !1292
  store i32 %9, i32* %stroke_antialias, align 8, !dbg !1293
  %11 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1294
  %stroke_width = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %11, i32 0, i32 7, !dbg !1295
  store double 1.000000e+00, double* %stroke_width, align 8, !dbg !1296
  %12 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1297
  %opacity = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %12, i32 0, i32 40, !dbg !1298
  store i16 0, i16* %opacity, align 4, !dbg !1299
  %13 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1300
  %fill_rule = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %13, i32 0, i32 14, !dbg !1301
  store i32 1, i32* %fill_rule, align 8, !dbg !1302
  %14 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1303
  %linecap = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %14, i32 0, i32 15, !dbg !1304
  store i32 1, i32* %linecap, align 4, !dbg !1305
  %15 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1306
  %linejoin = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %15, i32 0, i32 16, !dbg !1307
  store i32 1, i32* %linejoin, align 8, !dbg !1308
  %16 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1309
  %miterlimit = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %16, i32 0, i32 17, !dbg !1310
  store i64 10, i64* %miterlimit, align 8, !dbg !1311
  %17 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1312
  %decorate = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %17, i32 0, i32 19, !dbg !1313
  store i32 1, i32* %decorate, align 8, !dbg !1314
  %18 = load %struct._ImageInfo*, %struct._ImageInfo** %clone_info, align 8, !dbg !1315
  %font = getelementptr inbounds %struct._ImageInfo, %struct._ImageInfo* %18, i32 0, i32 19, !dbg !1317
  %19 = load i8*, i8** %font, align 8, !dbg !1317
  %cmp = icmp ne i8* %19, null, !dbg !1318
  br i1 %cmp, label %if.then, label %if.end, !dbg !1319

if.then:                                          ; preds = %entry
  %20 = load %struct._ImageInfo*, %struct._ImageInfo** %clone_info, align 8, !dbg !1320
  %font6 = getelementptr inbounds %struct._ImageInfo, %struct._ImageInfo* %20, i32 0, i32 19, !dbg !1321
  %21 = load i8*, i8** %font6, align 8, !dbg !1321
  %call7 = call i8* @AcquireString(i8* %21), !dbg !1322
  %22 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1323
  %font8 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %22, i32 0, i32 23, !dbg !1324
  store i8* %call7, i8** %font8, align 8, !dbg !1325
  br label %if.end, !dbg !1323

if.end:                                           ; preds = %if.then, %entry
  %23 = load %struct._ImageInfo*, %struct._ImageInfo** %clone_info, align 8, !dbg !1326
  %density = getelementptr inbounds %struct._ImageInfo, %struct._ImageInfo* %23, i32 0, i32 21, !dbg !1328
  %24 = load i8*, i8** %density, align 8, !dbg !1328
  %cmp9 = icmp ne i8* %24, null, !dbg !1329
  br i1 %cmp9, label %if.then10, label %if.end14, !dbg !1330

if.then10:                                        ; preds = %if.end
  %25 = load %struct._ImageInfo*, %struct._ImageInfo** %clone_info, align 8, !dbg !1331
  %density11 = getelementptr inbounds %struct._ImageInfo, %struct._ImageInfo* %25, i32 0, i32 21, !dbg !1332
  %26 = load i8*, i8** %density11, align 8, !dbg !1332
  %call12 = call i8* @AcquireString(i8* %26), !dbg !1333
  %27 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1334
  %density13 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %27, i32 0, i32 31, !dbg !1335
  store i8* %call12, i8** %density13, align 8, !dbg !1336
  br label %if.end14, !dbg !1334

if.end14:                                         ; preds = %if.then10, %if.end
  %28 = load %struct._ImageInfo*, %struct._ImageInfo** %clone_info, align 8, !dbg !1337
  %antialias15 = getelementptr inbounds %struct._ImageInfo, %struct._ImageInfo* %28, i32 0, i32 5, !dbg !1338
  %29 = load i32, i32* %antialias15, align 4, !dbg !1338
  %30 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1339
  %text_antialias = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %30, i32 0, i32 13, !dbg !1340
  store i32 %29, i32* %text_antialias, align 4, !dbg !1341
  %31 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1342
  %pointsize = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %31, i32 0, i32 30, !dbg !1343
  store double 1.200000e+01, double* %pointsize, align 8, !dbg !1344
  %32 = load %struct._ImageInfo*, %struct._ImageInfo** %clone_info, align 8, !dbg !1345
  %pointsize16 = getelementptr inbounds %struct._ImageInfo, %struct._ImageInfo* %32, i32 0, i32 22, !dbg !1347
  %33 = load double, double* %pointsize16, align 8, !dbg !1347
  %cmp17 = fcmp une double %33, 0.000000e+00, !dbg !1348
  br i1 %cmp17, label %if.then18, label %if.end21, !dbg !1349

if.then18:                                        ; preds = %if.end14
  %34 = load %struct._ImageInfo*, %struct._ImageInfo** %clone_info, align 8, !dbg !1350
  %pointsize19 = getelementptr inbounds %struct._ImageInfo, %struct._ImageInfo* %34, i32 0, i32 22, !dbg !1351
  %35 = load double, double* %pointsize19, align 8, !dbg !1351
  %36 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1352
  %pointsize20 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %36, i32 0, i32 30, !dbg !1353
  store double %35, double* %pointsize20, align 8, !dbg !1354
  br label %if.end21, !dbg !1352

if.end21:                                         ; preds = %if.then18, %if.end14
  %37 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1355
  %undercolor = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %37, i32 0, i32 33, !dbg !1356
  %opacity22 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %undercolor, i32 0, i32 3, !dbg !1357
  store i16 -1, i16* %opacity22, align 2, !dbg !1358
  %38 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1359
  %border_color = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %38, i32 0, i32 34, !dbg !1360
  %39 = load %struct._ImageInfo*, %struct._ImageInfo** %clone_info, align 8, !dbg !1361
  %border_color23 = getelementptr inbounds %struct._ImageInfo, %struct._ImageInfo* %39, i32 0, i32 25, !dbg !1362
  %40 = bitcast %struct._PixelPacket* %border_color to i8*, !dbg !1362
  %41 = bitcast %struct._PixelPacket* %border_color23 to i8*, !dbg !1362
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 8 %41, i64 8, i1 false), !dbg !1362
  %42 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1363
  %compose = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %42, i32 0, i32 20, !dbg !1364
  store i32 40, i32* %compose, align 4, !dbg !1365
  %43 = load %struct._ImageInfo*, %struct._ImageInfo** %clone_info, align 8, !dbg !1366
  %server_name = getelementptr inbounds %struct._ImageInfo, %struct._ImageInfo* %43, i32 0, i32 18, !dbg !1368
  %44 = load i8*, i8** %server_name, align 8, !dbg !1368
  %cmp24 = icmp ne i8* %44, null, !dbg !1369
  br i1 %cmp24, label %if.then25, label %if.end29, !dbg !1370

if.then25:                                        ; preds = %if.end21
  %45 = load %struct._ImageInfo*, %struct._ImageInfo** %clone_info, align 8, !dbg !1371
  %server_name26 = getelementptr inbounds %struct._ImageInfo, %struct._ImageInfo* %45, i32 0, i32 18, !dbg !1372
  %46 = load i8*, i8** %server_name26, align 8, !dbg !1372
  %call27 = call i8* @AcquireString(i8* %46), !dbg !1373
  %47 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1374
  %server_name28 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %47, i32 0, i32 35, !dbg !1375
  store i8* %call27, i8** %server_name28, align 8, !dbg !1376
  br label %if.end29, !dbg !1374

if.end29:                                         ; preds = %if.then25, %if.end21
  %48 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1377
  %render = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %48, i32 0, i32 41, !dbg !1378
  store i32 1, i32* %render, align 8, !dbg !1379
  %call30 = call i32 @IsEventLogging(), !dbg !1380
  %49 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1381
  %debug = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %49, i32 0, i32 43, !dbg !1382
  store i32 %call30, i32* %debug, align 8, !dbg !1383
  %50 = load %struct._ImageInfo*, %struct._ImageInfo** %clone_info, align 8, !dbg !1384
  %call31 = call i8* @GetImageOption(%struct._ImageInfo* %50, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.26, i64 0, i64 0)), !dbg !1385
  store i8* %call31, i8** %option, align 8, !dbg !1386
  %51 = load i8*, i8** %option, align 8, !dbg !1387
  %cmp32 = icmp ne i8* %51, null, !dbg !1389
  br i1 %cmp32, label %if.then33, label %if.end35, !dbg !1390

if.then33:                                        ; preds = %if.end29
  %52 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1391
  %encoding = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %52, i32 0, i32 29, !dbg !1392
  %53 = load i8*, i8** %option, align 8, !dbg !1393
  %call34 = call i8* @CloneString(i8** %encoding, i8* %53), !dbg !1394
  br label %if.end35, !dbg !1395

if.end35:                                         ; preds = %if.then33, %if.end29
  %54 = load %struct._ImageInfo*, %struct._ImageInfo** %clone_info, align 8, !dbg !1396
  %call36 = call i8* @GetImageOption(%struct._ImageInfo* %54, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.47, i64 0, i64 0)), !dbg !1397
  store i8* %call36, i8** %option, align 8, !dbg !1398
  %55 = load i8*, i8** %option, align 8, !dbg !1399
  %cmp37 = icmp ne i8* %55, null, !dbg !1401
  br i1 %cmp37, label %if.then38, label %if.end40, !dbg !1402

if.then38:                                        ; preds = %if.end35
  %56 = load i8*, i8** %option, align 8, !dbg !1403
  %call39 = call double @StringToDouble(i8* %56, i8** null), !dbg !1404
  %57 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1405
  %kerning = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %57, i32 0, i32 45, !dbg !1406
  store double %call39, double* %kerning, align 8, !dbg !1407
  br label %if.end40, !dbg !1405

if.end40:                                         ; preds = %if.then38, %if.end35
  %58 = load %struct._ImageInfo*, %struct._ImageInfo** %clone_info, align 8, !dbg !1408
  %call41 = call i8* @GetImageOption(%struct._ImageInfo* %58, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.45, i64 0, i64 0)), !dbg !1409
  store i8* %call41, i8** %option, align 8, !dbg !1410
  %59 = load i8*, i8** %option, align 8, !dbg !1411
  %cmp42 = icmp ne i8* %59, null, !dbg !1413
  br i1 %cmp42, label %if.then43, label %if.end45, !dbg !1414

if.then43:                                        ; preds = %if.end40
  %60 = load i8*, i8** %option, align 8, !dbg !1415
  %call44 = call double @StringToDouble(i8* %60, i8** null), !dbg !1416
  %61 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1417
  %interline_spacing = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %61, i32 0, i32 47, !dbg !1418
  store double %call44, double* %interline_spacing, align 8, !dbg !1419
  br label %if.end45, !dbg !1417

if.end45:                                         ; preds = %if.then43, %if.end40
  %62 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1420
  %direction = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %62, i32 0, i32 48, !dbg !1421
  store i32 0, i32* %direction, align 8, !dbg !1422
  %63 = load %struct._ImageInfo*, %struct._ImageInfo** %clone_info, align 8, !dbg !1423
  %call46 = call i8* @GetImageOption(%struct._ImageInfo* %63, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.46, i64 0, i64 0)), !dbg !1424
  store i8* %call46, i8** %option, align 8, !dbg !1425
  %64 = load i8*, i8** %option, align 8, !dbg !1426
  %cmp47 = icmp ne i8* %64, null, !dbg !1428
  br i1 %cmp47, label %if.then48, label %if.end50, !dbg !1429

if.then48:                                        ; preds = %if.end45
  %65 = load i8*, i8** %option, align 8, !dbg !1430
  %call49 = call double @StringToDouble(i8* %65, i8** null), !dbg !1431
  %66 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1432
  %interword_spacing = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %66, i32 0, i32 46, !dbg !1433
  store double %call49, double* %interword_spacing, align 8, !dbg !1434
  br label %if.end50, !dbg !1432

if.end50:                                         ; preds = %if.then48, %if.end45
  %67 = load %struct._ImageInfo*, %struct._ImageInfo** %clone_info, align 8, !dbg !1435
  %call51 = call i8* @GetImageOption(%struct._ImageInfo* %67, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.24, i64 0, i64 0)), !dbg !1436
  store i8* %call51, i8** %option, align 8, !dbg !1437
  %68 = load i8*, i8** %option, align 8, !dbg !1438
  %cmp52 = icmp ne i8* %68, null, !dbg !1440
  br i1 %cmp52, label %if.then53, label %if.end56, !dbg !1441

if.then53:                                        ; preds = %if.end50
  %69 = load i8*, i8** %option, align 8, !dbg !1442
  %call54 = call i64 @ParseCommandOption(i32 18, i32 0, i8* %69), !dbg !1443
  %conv = trunc i64 %call54 to i32, !dbg !1444
  %70 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1445
  %direction55 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %70, i32 0, i32 48, !dbg !1446
  store i32 %conv, i32* %direction55, align 8, !dbg !1447
  br label %if.end56, !dbg !1445

if.end56:                                         ; preds = %if.then53, %if.end50
  %71 = load %struct._ImageInfo*, %struct._ImageInfo** %clone_info, align 8, !dbg !1448
  %call57 = call i8* @GetImageOption(%struct._ImageInfo* %71, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.27, i64 0, i64 0)), !dbg !1449
  store i8* %call57, i8** %option, align 8, !dbg !1450
  %72 = load i8*, i8** %option, align 8, !dbg !1451
  %cmp58 = icmp ne i8* %72, null, !dbg !1453
  br i1 %cmp58, label %if.then60, label %if.end63, !dbg !1454

if.then60:                                        ; preds = %if.end56
  %73 = load i8*, i8** %option, align 8, !dbg !1455
  %74 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1456
  %fill61 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %74, i32 0, i32 5, !dbg !1457
  %75 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !1458
  %call62 = call i32 @QueryColorDatabase(i8* %73, %struct._PixelPacket* %fill61, %struct._ExceptionInfo* %75), !dbg !1459
  br label %if.end63, !dbg !1460

if.end63:                                         ; preds = %if.then60, %if.end56
  %76 = load %struct._ImageInfo*, %struct._ImageInfo** %clone_info, align 8, !dbg !1461
  %call64 = call i8* @GetImageOption(%struct._ImageInfo* %76, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.74, i64 0, i64 0)), !dbg !1462
  store i8* %call64, i8** %option, align 8, !dbg !1463
  %77 = load i8*, i8** %option, align 8, !dbg !1464
  %cmp65 = icmp ne i8* %77, null, !dbg !1466
  br i1 %cmp65, label %if.then67, label %if.end70, !dbg !1467

if.then67:                                        ; preds = %if.end63
  %78 = load i8*, i8** %option, align 8, !dbg !1468
  %79 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1469
  %stroke68 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %79, i32 0, i32 6, !dbg !1470
  %80 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !1471
  %call69 = call i32 @QueryColorDatabase(i8* %78, %struct._PixelPacket* %stroke68, %struct._ExceptionInfo* %80), !dbg !1472
  br label %if.end70, !dbg !1473

if.end70:                                         ; preds = %if.then67, %if.end63
  %81 = load %struct._ImageInfo*, %struct._ImageInfo** %clone_info, align 8, !dbg !1474
  %call71 = call i8* @GetImageOption(%struct._ImageInfo* %81, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.105, i64 0, i64 0)), !dbg !1475
  store i8* %call71, i8** %option, align 8, !dbg !1476
  %82 = load i8*, i8** %option, align 8, !dbg !1477
  %cmp72 = icmp ne i8* %82, null, !dbg !1479
  br i1 %cmp72, label %if.then74, label %if.end77, !dbg !1480

if.then74:                                        ; preds = %if.end70
  %83 = load i8*, i8** %option, align 8, !dbg !1481
  %call75 = call double @StringToDouble(i8* %83, i8** null), !dbg !1482
  %84 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1483
  %stroke_width76 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %84, i32 0, i32 7, !dbg !1484
  store double %call75, double* %stroke_width76, align 8, !dbg !1485
  br label %if.end77, !dbg !1483

if.end77:                                         ; preds = %if.then74, %if.end70
  %85 = load %struct._ImageInfo*, %struct._ImageInfo** %clone_info, align 8, !dbg !1486
  %call78 = call i8* @GetImageOption(%struct._ImageInfo* %85, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.106, i64 0, i64 0)), !dbg !1487
  store i8* %call78, i8** %option, align 8, !dbg !1488
  %86 = load i8*, i8** %option, align 8, !dbg !1489
  %cmp79 = icmp ne i8* %86, null, !dbg !1491
  br i1 %cmp79, label %if.then81, label %if.end84, !dbg !1492

if.then81:                                        ; preds = %if.end77
  %87 = load i8*, i8** %option, align 8, !dbg !1493
  %88 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1494
  %undercolor82 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %88, i32 0, i32 33, !dbg !1495
  %89 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !1496
  %call83 = call i32 @QueryColorDatabase(i8* %87, %struct._PixelPacket* %undercolor82, %struct._ExceptionInfo* %89), !dbg !1497
  br label %if.end84, !dbg !1498

if.end84:                                         ; preds = %if.then81, %if.end77
  %90 = load %struct._ImageInfo*, %struct._ImageInfo** %clone_info, align 8, !dbg !1499
  %call85 = call i8* @GetImageOption(%struct._ImageInfo* %90, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.43, i64 0, i64 0)), !dbg !1500
  store i8* %call85, i8** %option, align 8, !dbg !1501
  %91 = load i8*, i8** %option, align 8, !dbg !1502
  %cmp86 = icmp ne i8* %91, null, !dbg !1504
  br i1 %cmp86, label %if.then88, label %if.end91, !dbg !1505

if.then88:                                        ; preds = %if.end84
  %92 = load i8*, i8** %option, align 8, !dbg !1506
  %call89 = call i64 @ParseCommandOption(i32 30, i32 0, i8* %92), !dbg !1507
  %conv90 = trunc i64 %call89 to i32, !dbg !1508
  %93 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1509
  %gravity = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %93, i32 0, i32 4, !dbg !1510
  store i32 %conv90, i32* %gravity, align 8, !dbg !1511
  br label %if.end91, !dbg !1509

if.end91:                                         ; preds = %if.then88, %if.end84
  %94 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !1512
  %call92 = call %struct._ExceptionInfo* @DestroyExceptionInfo(%struct._ExceptionInfo* %94), !dbg !1513
  store %struct._ExceptionInfo* %call92, %struct._ExceptionInfo** %exception, align 8, !dbg !1514
  %95 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1515
  %signature = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %95, i32 0, i32 44, !dbg !1516
  store i64 2880220587, i64* %signature, align 8, !dbg !1517
  %96 = load %struct._ImageInfo*, %struct._ImageInfo** %clone_info, align 8, !dbg !1518
  %call93 = call %struct._ImageInfo* @DestroyImageInfo(%struct._ImageInfo* %96), !dbg !1519
  store %struct._ImageInfo* %call93, %struct._ImageInfo** %clone_info, align 8, !dbg !1520
  ret void, !dbg !1521
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._DrawInfo* @CloneDrawInfo(%struct._ImageInfo* %image_info, %struct._DrawInfo* %draw_info) #0 !dbg !1522 {
entry:
  %retval = alloca %struct._DrawInfo*, align 8
  %image_info.addr = alloca %struct._ImageInfo*, align 8
  %draw_info.addr = alloca %struct._DrawInfo*, align 8
  %clone_info = alloca %struct._DrawInfo*, align 8
  %message = alloca i8*, align 8
  %exception = alloca %struct._ExceptionInfo, align 8
  %x = alloca i64, align 8
  %message124 = alloca i8*, align 8
  %exception125 = alloca %struct._ExceptionInfo, align 8
  %number_stops = alloca i64, align 8
  %message150 = alloca i8*, align 8
  %exception151 = alloca %struct._ExceptionInfo, align 8
  store %struct._ImageInfo* %image_info, %struct._ImageInfo** %image_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ImageInfo** %image_info.addr, metadata !1527, metadata !DIExpression()), !dbg !1528
  store %struct._DrawInfo* %draw_info, %struct._DrawInfo** %draw_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawInfo** %draw_info.addr, metadata !1529, metadata !DIExpression()), !dbg !1530
  call void @llvm.dbg.declare(metadata %struct._DrawInfo** %clone_info, metadata !1531, metadata !DIExpression()), !dbg !1532
  %call = call i8* @AcquireMagickMemory(i64 720) #11, !dbg !1533
  %0 = bitcast i8* %call to %struct._DrawInfo*, !dbg !1534
  store %struct._DrawInfo* %0, %struct._DrawInfo** %clone_info, align 8, !dbg !1535
  %1 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info, align 8, !dbg !1536
  %cmp = icmp eq %struct._DrawInfo* %1, null, !dbg !1538
  br i1 %cmp, label %if.then, label %if.end, !dbg !1539

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8** %message, metadata !1540, metadata !DIExpression()), !dbg !1542
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo* %exception, metadata !1543, metadata !DIExpression()), !dbg !1542
  call void @GetExceptionInfo(%struct._ExceptionInfo* %exception), !dbg !1542
  %call1 = call i32* @__errno_location() #12, !dbg !1542
  %2 = load i32, i32* %call1, align 4, !dbg !1542
  %call2 = call i8* @GetExceptionMessage(i32 %2), !dbg !1542
  store i8* %call2, i8** %message, align 8, !dbg !1542
  %3 = load i8*, i8** %message, align 8, !dbg !1542
  %call3 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %exception, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 254, i32 700, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* %3), !dbg !1542
  %4 = load i8*, i8** %message, align 8, !dbg !1542
  %call4 = call i8* @DestroyString(i8* %4), !dbg !1542
  store i8* %call4, i8** %message, align 8, !dbg !1542
  call void @CatchException(%struct._ExceptionInfo* %exception), !dbg !1542
  %call5 = call %struct._ExceptionInfo* @DestroyExceptionInfo(%struct._ExceptionInfo* %exception), !dbg !1542
  call void @MagickCoreTerminus(), !dbg !1542
  call void @_exit(i32 1) #13, !dbg !1542
  unreachable, !dbg !1542

if.end:                                           ; preds = %entry
  %5 = load %struct._ImageInfo*, %struct._ImageInfo** %image_info.addr, align 8, !dbg !1544
  %6 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info, align 8, !dbg !1545
  call void @GetDrawInfo(%struct._ImageInfo* %5, %struct._DrawInfo* %6), !dbg !1546
  %7 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1547
  %cmp6 = icmp eq %struct._DrawInfo* %7, null, !dbg !1549
  br i1 %cmp6, label %if.then7, label %if.end8, !dbg !1550

if.then7:                                         ; preds = %if.end
  %8 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info, align 8, !dbg !1551
  store %struct._DrawInfo* %8, %struct._DrawInfo** %retval, align 8, !dbg !1552
  br label %return, !dbg !1552

if.end8:                                          ; preds = %if.end
  %9 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info, align 8, !dbg !1553
  %primitive = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %9, i32 0, i32 0, !dbg !1555
  %10 = load i8*, i8** %primitive, align 8, !dbg !1555
  %cmp9 = icmp ne i8* %10, null, !dbg !1556
  br i1 %cmp9, label %if.then10, label %if.end14, !dbg !1557

if.then10:                                        ; preds = %if.end8
  %11 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info, align 8, !dbg !1558
  %primitive11 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %11, i32 0, i32 0, !dbg !1559
  %12 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1560
  %primitive12 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %12, i32 0, i32 0, !dbg !1561
  %13 = load i8*, i8** %primitive12, align 8, !dbg !1561
  %call13 = call i8* @CloneString(i8** %primitive11, i8* %13), !dbg !1562
  br label %if.end14, !dbg !1563

if.end14:                                         ; preds = %if.then10, %if.end8
  %14 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1564
  %geometry = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %14, i32 0, i32 1, !dbg !1566
  %15 = load i8*, i8** %geometry, align 8, !dbg !1566
  %cmp15 = icmp ne i8* %15, null, !dbg !1567
  br i1 %cmp15, label %if.then16, label %if.end20, !dbg !1568

if.then16:                                        ; preds = %if.end14
  %16 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info, align 8, !dbg !1569
  %geometry17 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %16, i32 0, i32 1, !dbg !1570
  %17 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1571
  %geometry18 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %17, i32 0, i32 1, !dbg !1572
  %18 = load i8*, i8** %geometry18, align 8, !dbg !1572
  %call19 = call i8* @CloneString(i8** %geometry17, i8* %18), !dbg !1573
  br label %if.end20, !dbg !1574

if.end20:                                         ; preds = %if.then16, %if.end14
  %19 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info, align 8, !dbg !1575
  %viewbox = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %19, i32 0, i32 2, !dbg !1576
  %20 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1577
  %viewbox21 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %20, i32 0, i32 2, !dbg !1578
  %21 = bitcast %struct._RectangleInfo* %viewbox to i8*, !dbg !1578
  %22 = bitcast %struct._RectangleInfo* %viewbox21 to i8*, !dbg !1578
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 32, i1 false), !dbg !1578
  %23 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info, align 8, !dbg !1579
  %affine = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %23, i32 0, i32 3, !dbg !1580
  %24 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1581
  %affine22 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %24, i32 0, i32 3, !dbg !1582
  %25 = bitcast %struct._AffineMatrix* %affine to i8*, !dbg !1582
  %26 = bitcast %struct._AffineMatrix* %affine22 to i8*, !dbg !1582
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 48, i1 false), !dbg !1582
  %27 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1583
  %gravity = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %27, i32 0, i32 4, !dbg !1584
  %28 = load i32, i32* %gravity, align 8, !dbg !1584
  %29 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info, align 8, !dbg !1585
  %gravity23 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %29, i32 0, i32 4, !dbg !1586
  store i32 %28, i32* %gravity23, align 8, !dbg !1587
  %30 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info, align 8, !dbg !1588
  %fill = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %30, i32 0, i32 5, !dbg !1589
  %31 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1590
  %fill24 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %31, i32 0, i32 5, !dbg !1591
  %32 = bitcast %struct._PixelPacket* %fill to i8*, !dbg !1591
  %33 = bitcast %struct._PixelPacket* %fill24 to i8*, !dbg !1591
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %32, i8* align 4 %33, i64 8, i1 false), !dbg !1591
  %34 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info, align 8, !dbg !1592
  %stroke = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %34, i32 0, i32 6, !dbg !1593
  %35 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1594
  %stroke25 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %35, i32 0, i32 6, !dbg !1595
  %36 = bitcast %struct._PixelPacket* %stroke to i8*, !dbg !1595
  %37 = bitcast %struct._PixelPacket* %stroke25 to i8*, !dbg !1595
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %36, i8* align 4 %37, i64 8, i1 false), !dbg !1595
  %38 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1596
  %stroke_width = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %38, i32 0, i32 7, !dbg !1597
  %39 = load double, double* %stroke_width, align 8, !dbg !1597
  %40 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info, align 8, !dbg !1598
  %stroke_width26 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %40, i32 0, i32 7, !dbg !1599
  store double %39, double* %stroke_width26, align 8, !dbg !1600
  %41 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1601
  %fill_pattern = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %41, i32 0, i32 9, !dbg !1603
  %42 = load %struct._Image*, %struct._Image** %fill_pattern, align 8, !dbg !1603
  %cmp27 = icmp ne %struct._Image* %42, null, !dbg !1604
  br i1 %cmp27, label %if.then28, label %if.else, !dbg !1605

if.then28:                                        ; preds = %if.end20
  %43 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1606
  %fill_pattern29 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %43, i32 0, i32 9, !dbg !1607
  %44 = load %struct._Image*, %struct._Image** %fill_pattern29, align 8, !dbg !1607
  %45 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1608
  %fill_pattern30 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %45, i32 0, i32 9, !dbg !1609
  %46 = load %struct._Image*, %struct._Image** %fill_pattern30, align 8, !dbg !1609
  %exception31 = getelementptr inbounds %struct._Image, %struct._Image* %46, i32 0, i32 58, !dbg !1610
  %call32 = call %struct._Image* @CloneImage(%struct._Image* %44, i64 0, i64 0, i32 1, %struct._ExceptionInfo* %exception31), !dbg !1611
  %47 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info, align 8, !dbg !1612
  %fill_pattern33 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %47, i32 0, i32 9, !dbg !1613
  store %struct._Image* %call32, %struct._Image** %fill_pattern33, align 8, !dbg !1614
  br label %if.end42, !dbg !1612

if.else:                                          ; preds = %if.end20
  %48 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1615
  %tile = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %48, i32 0, i32 10, !dbg !1617
  %49 = load %struct._Image*, %struct._Image** %tile, align 8, !dbg !1617
  %cmp34 = icmp ne %struct._Image* %49, null, !dbg !1618
  br i1 %cmp34, label %if.then35, label %if.end41, !dbg !1619

if.then35:                                        ; preds = %if.else
  %50 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1620
  %tile36 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %50, i32 0, i32 10, !dbg !1621
  %51 = load %struct._Image*, %struct._Image** %tile36, align 8, !dbg !1621
  %52 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1622
  %tile37 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %52, i32 0, i32 10, !dbg !1623
  %53 = load %struct._Image*, %struct._Image** %tile37, align 8, !dbg !1623
  %exception38 = getelementptr inbounds %struct._Image, %struct._Image* %53, i32 0, i32 58, !dbg !1624
  %call39 = call %struct._Image* @CloneImage(%struct._Image* %51, i64 0, i64 0, i32 1, %struct._ExceptionInfo* %exception38), !dbg !1625
  %54 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info, align 8, !dbg !1626
  %fill_pattern40 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %54, i32 0, i32 9, !dbg !1627
  store %struct._Image* %call39, %struct._Image** %fill_pattern40, align 8, !dbg !1628
  br label %if.end41, !dbg !1626

if.end41:                                         ; preds = %if.then35, %if.else
  br label %if.end42

if.end42:                                         ; preds = %if.end41, %if.then28
  %call43 = call %struct._Image* @NewImageList(), !dbg !1629
  %55 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info, align 8, !dbg !1630
  %tile44 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %55, i32 0, i32 10, !dbg !1631
  store %struct._Image* %call43, %struct._Image** %tile44, align 8, !dbg !1632
  %56 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1633
  %stroke_pattern = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %56, i32 0, i32 11, !dbg !1635
  %57 = load %struct._Image*, %struct._Image** %stroke_pattern, align 8, !dbg !1635
  %cmp45 = icmp ne %struct._Image* %57, null, !dbg !1636
  br i1 %cmp45, label %if.then46, label %if.end52, !dbg !1637

if.then46:                                        ; preds = %if.end42
  %58 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1638
  %stroke_pattern47 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %58, i32 0, i32 11, !dbg !1639
  %59 = load %struct._Image*, %struct._Image** %stroke_pattern47, align 8, !dbg !1639
  %60 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1640
  %stroke_pattern48 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %60, i32 0, i32 11, !dbg !1641
  %61 = load %struct._Image*, %struct._Image** %stroke_pattern48, align 8, !dbg !1641
  %exception49 = getelementptr inbounds %struct._Image, %struct._Image* %61, i32 0, i32 58, !dbg !1642
  %call50 = call %struct._Image* @CloneImage(%struct._Image* %59, i64 0, i64 0, i32 1, %struct._ExceptionInfo* %exception49), !dbg !1643
  %62 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info, align 8, !dbg !1644
  %stroke_pattern51 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %62, i32 0, i32 11, !dbg !1645
  store %struct._Image* %call50, %struct._Image** %stroke_pattern51, align 8, !dbg !1646
  br label %if.end52, !dbg !1644

if.end52:                                         ; preds = %if.then46, %if.end42
  %63 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1647
  %stroke_antialias = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %63, i32 0, i32 12, !dbg !1648
  %64 = load i32, i32* %stroke_antialias, align 8, !dbg !1648
  %65 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info, align 8, !dbg !1649
  %stroke_antialias53 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %65, i32 0, i32 12, !dbg !1650
  store i32 %64, i32* %stroke_antialias53, align 8, !dbg !1651
  %66 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1652
  %text_antialias = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %66, i32 0, i32 13, !dbg !1653
  %67 = load i32, i32* %text_antialias, align 4, !dbg !1653
  %68 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info, align 8, !dbg !1654
  %text_antialias54 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %68, i32 0, i32 13, !dbg !1655
  store i32 %67, i32* %text_antialias54, align 4, !dbg !1656
  %69 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1657
  %fill_rule = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %69, i32 0, i32 14, !dbg !1658
  %70 = load i32, i32* %fill_rule, align 8, !dbg !1658
  %71 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info, align 8, !dbg !1659
  %fill_rule55 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %71, i32 0, i32 14, !dbg !1660
  store i32 %70, i32* %fill_rule55, align 8, !dbg !1661
  %72 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1662
  %linecap = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %72, i32 0, i32 15, !dbg !1663
  %73 = load i32, i32* %linecap, align 4, !dbg !1663
  %74 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info, align 8, !dbg !1664
  %linecap56 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %74, i32 0, i32 15, !dbg !1665
  store i32 %73, i32* %linecap56, align 4, !dbg !1666
  %75 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1667
  %linejoin = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %75, i32 0, i32 16, !dbg !1668
  %76 = load i32, i32* %linejoin, align 8, !dbg !1668
  %77 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info, align 8, !dbg !1669
  %linejoin57 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %77, i32 0, i32 16, !dbg !1670
  store i32 %76, i32* %linejoin57, align 8, !dbg !1671
  %78 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1672
  %miterlimit = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %78, i32 0, i32 17, !dbg !1673
  %79 = load i64, i64* %miterlimit, align 8, !dbg !1673
  %80 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info, align 8, !dbg !1674
  %miterlimit58 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %80, i32 0, i32 17, !dbg !1675
  store i64 %79, i64* %miterlimit58, align 8, !dbg !1676
  %81 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1677
  %dash_offset = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %81, i32 0, i32 18, !dbg !1678
  %82 = load double, double* %dash_offset, align 8, !dbg !1678
  %83 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info, align 8, !dbg !1679
  %dash_offset59 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %83, i32 0, i32 18, !dbg !1680
  store double %82, double* %dash_offset59, align 8, !dbg !1681
  %84 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1682
  %decorate = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %84, i32 0, i32 19, !dbg !1683
  %85 = load i32, i32* %decorate, align 8, !dbg !1683
  %86 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info, align 8, !dbg !1684
  %decorate60 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %86, i32 0, i32 19, !dbg !1685
  store i32 %85, i32* %decorate60, align 8, !dbg !1686
  %87 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1687
  %compose = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %87, i32 0, i32 20, !dbg !1688
  %88 = load i32, i32* %compose, align 4, !dbg !1688
  %89 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info, align 8, !dbg !1689
  %compose61 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %89, i32 0, i32 20, !dbg !1690
  store i32 %88, i32* %compose61, align 4, !dbg !1691
  %90 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1692
  %text = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %90, i32 0, i32 21, !dbg !1694
  %91 = load i8*, i8** %text, align 8, !dbg !1694
  %cmp62 = icmp ne i8* %91, null, !dbg !1695
  br i1 %cmp62, label %if.then63, label %if.end67, !dbg !1696

if.then63:                                        ; preds = %if.end52
  %92 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info, align 8, !dbg !1697
  %text64 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %92, i32 0, i32 21, !dbg !1698
  %93 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1699
  %text65 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %93, i32 0, i32 21, !dbg !1700
  %94 = load i8*, i8** %text65, align 8, !dbg !1700
  %call66 = call i8* @CloneString(i8** %text64, i8* %94), !dbg !1701
  br label %if.end67, !dbg !1702

if.end67:                                         ; preds = %if.then63, %if.end52
  %95 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1703
  %font = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %95, i32 0, i32 23, !dbg !1705
  %96 = load i8*, i8** %font, align 8, !dbg !1705
  %cmp68 = icmp ne i8* %96, null, !dbg !1706
  br i1 %cmp68, label %if.then69, label %if.end73, !dbg !1707

if.then69:                                        ; preds = %if.end67
  %97 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info, align 8, !dbg !1708
  %font70 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %97, i32 0, i32 23, !dbg !1709
  %98 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1710
  %font71 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %98, i32 0, i32 23, !dbg !1711
  %99 = load i8*, i8** %font71, align 8, !dbg !1711
  %call72 = call i8* @CloneString(i8** %font70, i8* %99), !dbg !1712
  br label %if.end73, !dbg !1713

if.end73:                                         ; preds = %if.then69, %if.end67
  %100 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1714
  %metrics = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %100, i32 0, i32 24, !dbg !1716
  %101 = load i8*, i8** %metrics, align 8, !dbg !1716
  %cmp74 = icmp ne i8* %101, null, !dbg !1717
  br i1 %cmp74, label %if.then75, label %if.end79, !dbg !1718

if.then75:                                        ; preds = %if.end73
  %102 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info, align 8, !dbg !1719
  %metrics76 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %102, i32 0, i32 24, !dbg !1720
  %103 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1721
  %metrics77 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %103, i32 0, i32 24, !dbg !1722
  %104 = load i8*, i8** %metrics77, align 8, !dbg !1722
  %call78 = call i8* @CloneString(i8** %metrics76, i8* %104), !dbg !1723
  br label %if.end79, !dbg !1724

if.end79:                                         ; preds = %if.then75, %if.end73
  %105 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1725
  %family = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %105, i32 0, i32 25, !dbg !1727
  %106 = load i8*, i8** %family, align 8, !dbg !1727
  %cmp80 = icmp ne i8* %106, null, !dbg !1728
  br i1 %cmp80, label %if.then81, label %if.end85, !dbg !1729

if.then81:                                        ; preds = %if.end79
  %107 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info, align 8, !dbg !1730
  %family82 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %107, i32 0, i32 25, !dbg !1731
  %108 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1732
  %family83 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %108, i32 0, i32 25, !dbg !1733
  %109 = load i8*, i8** %family83, align 8, !dbg !1733
  %call84 = call i8* @CloneString(i8** %family82, i8* %109), !dbg !1734
  br label %if.end85, !dbg !1735

if.end85:                                         ; preds = %if.then81, %if.end79
  %110 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1736
  %style = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %110, i32 0, i32 26, !dbg !1737
  %111 = load i32, i32* %style, align 8, !dbg !1737
  %112 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info, align 8, !dbg !1738
  %style86 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %112, i32 0, i32 26, !dbg !1739
  store i32 %111, i32* %style86, align 8, !dbg !1740
  %113 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1741
  %stretch = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %113, i32 0, i32 27, !dbg !1742
  %114 = load i32, i32* %stretch, align 4, !dbg !1742
  %115 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info, align 8, !dbg !1743
  %stretch87 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %115, i32 0, i32 27, !dbg !1744
  store i32 %114, i32* %stretch87, align 4, !dbg !1745
  %116 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1746
  %weight = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %116, i32 0, i32 28, !dbg !1747
  %117 = load i64, i64* %weight, align 8, !dbg !1747
  %118 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info, align 8, !dbg !1748
  %weight88 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %118, i32 0, i32 28, !dbg !1749
  store i64 %117, i64* %weight88, align 8, !dbg !1750
  %119 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1751
  %encoding = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %119, i32 0, i32 29, !dbg !1753
  %120 = load i8*, i8** %encoding, align 8, !dbg !1753
  %cmp89 = icmp ne i8* %120, null, !dbg !1754
  br i1 %cmp89, label %if.then90, label %if.end94, !dbg !1755

if.then90:                                        ; preds = %if.end85
  %121 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info, align 8, !dbg !1756
  %encoding91 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %121, i32 0, i32 29, !dbg !1757
  %122 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1758
  %encoding92 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %122, i32 0, i32 29, !dbg !1759
  %123 = load i8*, i8** %encoding92, align 8, !dbg !1759
  %call93 = call i8* @CloneString(i8** %encoding91, i8* %123), !dbg !1760
  br label %if.end94, !dbg !1761

if.end94:                                         ; preds = %if.then90, %if.end85
  %124 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1762
  %pointsize = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %124, i32 0, i32 30, !dbg !1763
  %125 = load double, double* %pointsize, align 8, !dbg !1763
  %126 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info, align 8, !dbg !1764
  %pointsize95 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %126, i32 0, i32 30, !dbg !1765
  store double %125, double* %pointsize95, align 8, !dbg !1766
  %127 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1767
  %kerning = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %127, i32 0, i32 45, !dbg !1768
  %128 = load double, double* %kerning, align 8, !dbg !1768
  %129 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info, align 8, !dbg !1769
  %kerning96 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %129, i32 0, i32 45, !dbg !1770
  store double %128, double* %kerning96, align 8, !dbg !1771
  %130 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1772
  %interline_spacing = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %130, i32 0, i32 47, !dbg !1773
  %131 = load double, double* %interline_spacing, align 8, !dbg !1773
  %132 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info, align 8, !dbg !1774
  %interline_spacing97 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %132, i32 0, i32 47, !dbg !1775
  store double %131, double* %interline_spacing97, align 8, !dbg !1776
  %133 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1777
  %interword_spacing = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %133, i32 0, i32 46, !dbg !1778
  %134 = load double, double* %interword_spacing, align 8, !dbg !1778
  %135 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info, align 8, !dbg !1779
  %interword_spacing98 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %135, i32 0, i32 46, !dbg !1780
  store double %134, double* %interword_spacing98, align 8, !dbg !1781
  %136 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1782
  %direction = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %136, i32 0, i32 48, !dbg !1783
  %137 = load i32, i32* %direction, align 8, !dbg !1783
  %138 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info, align 8, !dbg !1784
  %direction99 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %138, i32 0, i32 48, !dbg !1785
  store i32 %137, i32* %direction99, align 8, !dbg !1786
  %139 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1787
  %density = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %139, i32 0, i32 31, !dbg !1789
  %140 = load i8*, i8** %density, align 8, !dbg !1789
  %cmp100 = icmp ne i8* %140, null, !dbg !1790
  br i1 %cmp100, label %if.then101, label %if.end105, !dbg !1791

if.then101:                                       ; preds = %if.end94
  %141 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info, align 8, !dbg !1792
  %density102 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %141, i32 0, i32 31, !dbg !1793
  %142 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1794
  %density103 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %142, i32 0, i32 31, !dbg !1795
  %143 = load i8*, i8** %density103, align 8, !dbg !1795
  %call104 = call i8* @CloneString(i8** %density102, i8* %143), !dbg !1796
  br label %if.end105, !dbg !1797

if.end105:                                        ; preds = %if.then101, %if.end94
  %144 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1798
  %align = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %144, i32 0, i32 32, !dbg !1799
  %145 = load i32, i32* %align, align 8, !dbg !1799
  %146 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info, align 8, !dbg !1800
  %align106 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %146, i32 0, i32 32, !dbg !1801
  store i32 %145, i32* %align106, align 8, !dbg !1802
  %147 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info, align 8, !dbg !1803
  %undercolor = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %147, i32 0, i32 33, !dbg !1804
  %148 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1805
  %undercolor107 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %148, i32 0, i32 33, !dbg !1806
  %149 = bitcast %struct._PixelPacket* %undercolor to i8*, !dbg !1806
  %150 = bitcast %struct._PixelPacket* %undercolor107 to i8*, !dbg !1806
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %149, i8* align 4 %150, i64 8, i1 false), !dbg !1806
  %151 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info, align 8, !dbg !1807
  %border_color = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %151, i32 0, i32 34, !dbg !1808
  %152 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1809
  %border_color108 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %152, i32 0, i32 34, !dbg !1810
  %153 = bitcast %struct._PixelPacket* %border_color to i8*, !dbg !1810
  %154 = bitcast %struct._PixelPacket* %border_color108 to i8*, !dbg !1810
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %153, i8* align 4 %154, i64 8, i1 false), !dbg !1810
  %155 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1811
  %server_name = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %155, i32 0, i32 35, !dbg !1813
  %156 = load i8*, i8** %server_name, align 8, !dbg !1813
  %cmp109 = icmp ne i8* %156, null, !dbg !1814
  br i1 %cmp109, label %if.then110, label %if.end114, !dbg !1815

if.then110:                                       ; preds = %if.end105
  %157 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info, align 8, !dbg !1816
  %server_name111 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %157, i32 0, i32 35, !dbg !1817
  %158 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1818
  %server_name112 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %158, i32 0, i32 35, !dbg !1819
  %159 = load i8*, i8** %server_name112, align 8, !dbg !1819
  %call113 = call i8* @CloneString(i8** %server_name111, i8* %159), !dbg !1820
  br label %if.end114, !dbg !1821

if.end114:                                        ; preds = %if.then110, %if.end105
  %160 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1822
  %dash_pattern = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %160, i32 0, i32 36, !dbg !1824
  %161 = load double*, double** %dash_pattern, align 8, !dbg !1824
  %cmp115 = icmp ne double* %161, null, !dbg !1825
  br i1 %cmp115, label %if.then116, label %if.end136, !dbg !1826

if.then116:                                       ; preds = %if.end114
  call void @llvm.dbg.declare(metadata i64* %x, metadata !1827, metadata !DIExpression()), !dbg !1829
  store i64 0, i64* %x, align 8, !dbg !1830
  br label %for.cond, !dbg !1832

for.cond:                                         ; preds = %for.inc, %if.then116
  %162 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1833
  %dash_pattern117 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %162, i32 0, i32 36, !dbg !1835
  %163 = load double*, double** %dash_pattern117, align 8, !dbg !1835
  %164 = load i64, i64* %x, align 8, !dbg !1836
  %arrayidx = getelementptr inbounds double, double* %163, i64 %164, !dbg !1833
  %165 = load double, double* %arrayidx, align 8, !dbg !1833
  %cmp118 = fcmp une double %165, 0.000000e+00, !dbg !1837
  br i1 %cmp118, label %for.body, label %for.end, !dbg !1838

for.body:                                         ; preds = %for.cond
  br label %for.inc, !dbg !1838

for.inc:                                          ; preds = %for.body
  %166 = load i64, i64* %x, align 8, !dbg !1839
  %inc = add nsw i64 %166, 1, !dbg !1839
  store i64 %inc, i64* %x, align 8, !dbg !1839
  br label %for.cond, !dbg !1840, !llvm.loop !1841

for.end:                                          ; preds = %for.cond
  %167 = load i64, i64* %x, align 8, !dbg !1843
  %add = add i64 %167, 1, !dbg !1844
  %call119 = call i8* @AcquireQuantumMemory(i64 %add, i64 8) #14, !dbg !1845
  %168 = bitcast i8* %call119 to double*, !dbg !1846
  %169 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info, align 8, !dbg !1847
  %dash_pattern120 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %169, i32 0, i32 36, !dbg !1848
  store double* %168, double** %dash_pattern120, align 8, !dbg !1849
  %170 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info, align 8, !dbg !1850
  %dash_pattern121 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %170, i32 0, i32 36, !dbg !1852
  %171 = load double*, double** %dash_pattern121, align 8, !dbg !1852
  %cmp122 = icmp eq double* %171, null, !dbg !1853
  br i1 %cmp122, label %if.then123, label %if.end131, !dbg !1854

if.then123:                                       ; preds = %for.end
  call void @llvm.dbg.declare(metadata i8** %message124, metadata !1855, metadata !DIExpression()), !dbg !1857
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo* %exception125, metadata !1858, metadata !DIExpression()), !dbg !1857
  call void @GetExceptionInfo(%struct._ExceptionInfo* %exception125), !dbg !1857
  %call126 = call i32* @__errno_location() #12, !dbg !1857
  %172 = load i32, i32* %call126, align 4, !dbg !1857
  %call127 = call i8* @GetExceptionMessage(i32 %172), !dbg !1857
  store i8* %call127, i8** %message124, align 8, !dbg !1857
  %173 = load i8*, i8** %message124, align 8, !dbg !1857
  %call128 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %exception125, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 323, i32 700, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* %173), !dbg !1857
  %174 = load i8*, i8** %message124, align 8, !dbg !1857
  %call129 = call i8* @DestroyString(i8* %174), !dbg !1857
  store i8* %call129, i8** %message124, align 8, !dbg !1857
  call void @CatchException(%struct._ExceptionInfo* %exception125), !dbg !1857
  %call130 = call %struct._ExceptionInfo* @DestroyExceptionInfo(%struct._ExceptionInfo* %exception125), !dbg !1857
  call void @MagickCoreTerminus(), !dbg !1857
  call void @_exit(i32 1) #13, !dbg !1857
  unreachable, !dbg !1857

if.end131:                                        ; preds = %for.end
  %175 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info, align 8, !dbg !1859
  %dash_pattern132 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %175, i32 0, i32 36, !dbg !1860
  %176 = load double*, double** %dash_pattern132, align 8, !dbg !1860
  %177 = bitcast double* %176 to i8*, !dbg !1859
  %178 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1861
  %dash_pattern133 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %178, i32 0, i32 36, !dbg !1862
  %179 = load double*, double** %dash_pattern133, align 8, !dbg !1862
  %180 = bitcast double* %179 to i8*, !dbg !1861
  %181 = load i64, i64* %x, align 8, !dbg !1863
  %add134 = add nsw i64 %181, 1, !dbg !1864
  %mul = mul i64 %add134, 8, !dbg !1865
  %call135 = call i8* @CopyMagickMemory(i8* %177, i8* %180, i64 %mul), !dbg !1866
  br label %if.end136, !dbg !1867

if.end136:                                        ; preds = %if.end131, %if.end114
  %182 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info, align 8, !dbg !1868
  %gradient = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %182, i32 0, i32 8, !dbg !1869
  %183 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1870
  %gradient137 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %183, i32 0, i32 8, !dbg !1871
  %184 = bitcast %struct._GradientInfo* %gradient to i8*, !dbg !1871
  %185 = bitcast %struct._GradientInfo* %gradient137 to i8*, !dbg !1871
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %184, i8* align 8 %185, i64 128, i1 false), !dbg !1871
  %186 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1872
  %gradient138 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %186, i32 0, i32 8, !dbg !1874
  %stops = getelementptr inbounds %struct._GradientInfo, %struct._GradientInfo* %gradient138, i32 0, i32 3, !dbg !1875
  %187 = load %struct._StopInfo*, %struct._StopInfo** %stops, align 8, !dbg !1875
  %cmp139 = icmp ne %struct._StopInfo* %187, null, !dbg !1876
  br i1 %cmp139, label %if.then140, label %if.end164, !dbg !1877

if.then140:                                       ; preds = %if.end136
  call void @llvm.dbg.declare(metadata i64* %number_stops, metadata !1878, metadata !DIExpression()), !dbg !1880
  %188 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info, align 8, !dbg !1881
  %gradient141 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %188, i32 0, i32 8, !dbg !1882
  %number_stops142 = getelementptr inbounds %struct._GradientInfo, %struct._GradientInfo* %gradient141, i32 0, i32 4, !dbg !1883
  %189 = load i64, i64* %number_stops142, align 8, !dbg !1883
  store i64 %189, i64* %number_stops, align 8, !dbg !1884
  %190 = load i64, i64* %number_stops, align 8, !dbg !1885
  %call143 = call i8* @AcquireQuantumMemory(i64 %190, i64 64) #14, !dbg !1886
  %191 = bitcast i8* %call143 to %struct._StopInfo*, !dbg !1887
  %192 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info, align 8, !dbg !1888
  %gradient144 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %192, i32 0, i32 8, !dbg !1889
  %stops145 = getelementptr inbounds %struct._GradientInfo, %struct._GradientInfo* %gradient144, i32 0, i32 3, !dbg !1890
  store %struct._StopInfo* %191, %struct._StopInfo** %stops145, align 8, !dbg !1891
  %193 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info, align 8, !dbg !1892
  %gradient146 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %193, i32 0, i32 8, !dbg !1894
  %stops147 = getelementptr inbounds %struct._GradientInfo, %struct._GradientInfo* %gradient146, i32 0, i32 3, !dbg !1895
  %194 = load %struct._StopInfo*, %struct._StopInfo** %stops147, align 8, !dbg !1895
  %cmp148 = icmp eq %struct._StopInfo* %194, null, !dbg !1896
  br i1 %cmp148, label %if.then149, label %if.end157, !dbg !1897

if.then149:                                       ; preds = %if.then140
  call void @llvm.dbg.declare(metadata i8** %message150, metadata !1898, metadata !DIExpression()), !dbg !1900
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo* %exception151, metadata !1901, metadata !DIExpression()), !dbg !1900
  call void @GetExceptionInfo(%struct._ExceptionInfo* %exception151), !dbg !1900
  %call152 = call i32* @__errno_location() #12, !dbg !1900
  %195 = load i32, i32* %call152, align 4, !dbg !1900
  %call153 = call i8* @GetExceptionMessage(i32 %195), !dbg !1900
  store i8* %call153, i8** %message150, align 8, !dbg !1900
  %196 = load i8*, i8** %message150, align 8, !dbg !1900
  %call154 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %exception151, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 338, i32 700, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* %196), !dbg !1900
  %197 = load i8*, i8** %message150, align 8, !dbg !1900
  %call155 = call i8* @DestroyString(i8* %197), !dbg !1900
  store i8* %call155, i8** %message150, align 8, !dbg !1900
  call void @CatchException(%struct._ExceptionInfo* %exception151), !dbg !1900
  %call156 = call %struct._ExceptionInfo* @DestroyExceptionInfo(%struct._ExceptionInfo* %exception151), !dbg !1900
  call void @MagickCoreTerminus(), !dbg !1900
  call void @_exit(i32 1) #13, !dbg !1900
  unreachable, !dbg !1900

if.end157:                                        ; preds = %if.then140
  %198 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info, align 8, !dbg !1902
  %gradient158 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %198, i32 0, i32 8, !dbg !1903
  %stops159 = getelementptr inbounds %struct._GradientInfo, %struct._GradientInfo* %gradient158, i32 0, i32 3, !dbg !1904
  %199 = load %struct._StopInfo*, %struct._StopInfo** %stops159, align 8, !dbg !1904
  %200 = bitcast %struct._StopInfo* %199 to i8*, !dbg !1902
  %201 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1905
  %gradient160 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %201, i32 0, i32 8, !dbg !1906
  %stops161 = getelementptr inbounds %struct._GradientInfo, %struct._GradientInfo* %gradient160, i32 0, i32 3, !dbg !1907
  %202 = load %struct._StopInfo*, %struct._StopInfo** %stops161, align 8, !dbg !1907
  %203 = bitcast %struct._StopInfo* %202 to i8*, !dbg !1905
  %204 = load i64, i64* %number_stops, align 8, !dbg !1908
  %mul162 = mul i64 %204, 64, !dbg !1909
  %call163 = call i8* @CopyMagickMemory(i8* %200, i8* %203, i64 %mul162), !dbg !1910
  br label %if.end164, !dbg !1911

if.end164:                                        ; preds = %if.end157, %if.end136
  %205 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1912
  %clip_mask = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %205, i32 0, i32 37, !dbg !1914
  %206 = load i8*, i8** %clip_mask, align 8, !dbg !1914
  %cmp165 = icmp ne i8* %206, null, !dbg !1915
  br i1 %cmp165, label %if.then166, label %if.end170, !dbg !1916

if.then166:                                       ; preds = %if.end164
  %207 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info, align 8, !dbg !1917
  %clip_mask167 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %207, i32 0, i32 37, !dbg !1918
  %208 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1919
  %clip_mask168 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %208, i32 0, i32 37, !dbg !1920
  %209 = load i8*, i8** %clip_mask168, align 8, !dbg !1920
  %call169 = call i8* @CloneString(i8** %clip_mask167, i8* %209), !dbg !1921
  br label %if.end170, !dbg !1922

if.end170:                                        ; preds = %if.then166, %if.end164
  %210 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info, align 8, !dbg !1923
  %bounds = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %210, i32 0, i32 38, !dbg !1924
  %211 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1925
  %bounds171 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %211, i32 0, i32 38, !dbg !1926
  %212 = bitcast %struct._SegmentInfo* %bounds to i8*, !dbg !1926
  %213 = bitcast %struct._SegmentInfo* %bounds171 to i8*, !dbg !1926
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %212, i8* align 8 %213, i64 32, i1 false), !dbg !1926
  %214 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1927
  %clip_units = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %214, i32 0, i32 39, !dbg !1928
  %215 = load i32, i32* %clip_units, align 8, !dbg !1928
  %216 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info, align 8, !dbg !1929
  %clip_units172 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %216, i32 0, i32 39, !dbg !1930
  store i32 %215, i32* %clip_units172, align 8, !dbg !1931
  %217 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1932
  %render = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %217, i32 0, i32 41, !dbg !1933
  %218 = load i32, i32* %render, align 8, !dbg !1933
  %219 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info, align 8, !dbg !1934
  %render173 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %219, i32 0, i32 41, !dbg !1935
  store i32 %218, i32* %render173, align 8, !dbg !1936
  %220 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1937
  %opacity = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %220, i32 0, i32 40, !dbg !1938
  %221 = load i16, i16* %opacity, align 4, !dbg !1938
  %222 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info, align 8, !dbg !1939
  %opacity174 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %222, i32 0, i32 40, !dbg !1940
  store i16 %221, i16* %opacity174, align 4, !dbg !1941
  %223 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info, align 8, !dbg !1942
  %element_reference = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %223, i32 0, i32 42, !dbg !1943
  %224 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1944
  %element_reference175 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %224, i32 0, i32 42, !dbg !1945
  %225 = bitcast %struct._ElementReference* %element_reference to i8*, !dbg !1945
  %226 = bitcast %struct._ElementReference* %element_reference175 to i8*, !dbg !1945
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %225, i8* align 8 %226, i64 168, i1 false), !dbg !1945
  %call176 = call i32 @IsEventLogging(), !dbg !1946
  %227 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info, align 8, !dbg !1947
  %debug = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %227, i32 0, i32 43, !dbg !1948
  store i32 %call176, i32* %debug, align 8, !dbg !1949
  %228 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info, align 8, !dbg !1950
  store %struct._DrawInfo* %228, %struct._DrawInfo** %retval, align 8, !dbg !1951
  br label %return, !dbg !1951

return:                                           ; preds = %if.end170, %if.then7
  %229 = load %struct._DrawInfo*, %struct._DrawInfo** %retval, align 8, !dbg !1952
  ret %struct._DrawInfo* %229, !dbg !1952
}

declare dso_local i8* @CloneString(i8**, i8*) #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #6

declare dso_local %struct._Image* @CloneImage(%struct._Image*, i64, i64, i32, %struct._ExceptionInfo*) #3

declare dso_local %struct._Image* @NewImageList() #3

; Function Attrs: allocsize(0,1)
declare dso_local i8* @AcquireQuantumMemory(i64, i64) #7

declare dso_local i8* @CopyMagickMemory(i8*, i8*, i64) #3

declare dso_local i32 @IsEventLogging() #3

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._DrawInfo* @DestroyDrawInfo(%struct._DrawInfo* %draw_info) #0 !dbg !1953 {
entry:
  %draw_info.addr = alloca %struct._DrawInfo*, align 8
  store %struct._DrawInfo* %draw_info, %struct._DrawInfo** %draw_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawInfo** %draw_info.addr, metadata !1956, metadata !DIExpression()), !dbg !1957
  %0 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1958
  %debug = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %0, i32 0, i32 43, !dbg !1960
  %1 = load i32, i32* %debug, align 8, !dbg !1960
  %cmp = icmp ne i32 %1, 0, !dbg !1961
  br i1 %cmp, label %if.then, label %if.end, !dbg !1962

if.then:                                          ; preds = %entry
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 837, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i64 0, i64 0)), !dbg !1963
  br label %if.end, !dbg !1964

if.end:                                           ; preds = %if.then, %entry
  %2 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1965
  %primitive = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %2, i32 0, i32 0, !dbg !1967
  %3 = load i8*, i8** %primitive, align 8, !dbg !1967
  %cmp1 = icmp ne i8* %3, null, !dbg !1968
  br i1 %cmp1, label %if.then2, label %if.end6, !dbg !1969

if.then2:                                         ; preds = %if.end
  %4 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1970
  %primitive3 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %4, i32 0, i32 0, !dbg !1971
  %5 = load i8*, i8** %primitive3, align 8, !dbg !1971
  %call4 = call i8* @DestroyString(i8* %5), !dbg !1972
  %6 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1973
  %primitive5 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %6, i32 0, i32 0, !dbg !1974
  store i8* %call4, i8** %primitive5, align 8, !dbg !1975
  br label %if.end6, !dbg !1973

if.end6:                                          ; preds = %if.then2, %if.end
  %7 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1976
  %text = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %7, i32 0, i32 21, !dbg !1978
  %8 = load i8*, i8** %text, align 8, !dbg !1978
  %cmp7 = icmp ne i8* %8, null, !dbg !1979
  br i1 %cmp7, label %if.then8, label %if.end12, !dbg !1980

if.then8:                                         ; preds = %if.end6
  %9 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1981
  %text9 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %9, i32 0, i32 21, !dbg !1982
  %10 = load i8*, i8** %text9, align 8, !dbg !1982
  %call10 = call i8* @DestroyString(i8* %10), !dbg !1983
  %11 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1984
  %text11 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %11, i32 0, i32 21, !dbg !1985
  store i8* %call10, i8** %text11, align 8, !dbg !1986
  br label %if.end12, !dbg !1984

if.end12:                                         ; preds = %if.then8, %if.end6
  %12 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1987
  %geometry = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %12, i32 0, i32 1, !dbg !1989
  %13 = load i8*, i8** %geometry, align 8, !dbg !1989
  %cmp13 = icmp ne i8* %13, null, !dbg !1990
  br i1 %cmp13, label %if.then14, label %if.end18, !dbg !1991

if.then14:                                        ; preds = %if.end12
  %14 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1992
  %geometry15 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %14, i32 0, i32 1, !dbg !1993
  %15 = load i8*, i8** %geometry15, align 8, !dbg !1993
  %call16 = call i8* @DestroyString(i8* %15), !dbg !1994
  %16 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1995
  %geometry17 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %16, i32 0, i32 1, !dbg !1996
  store i8* %call16, i8** %geometry17, align 8, !dbg !1997
  br label %if.end18, !dbg !1995

if.end18:                                         ; preds = %if.then14, %if.end12
  %17 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !1998
  %tile = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %17, i32 0, i32 10, !dbg !2000
  %18 = load %struct._Image*, %struct._Image** %tile, align 8, !dbg !2000
  %cmp19 = icmp ne %struct._Image* %18, null, !dbg !2001
  br i1 %cmp19, label %if.then20, label %if.end24, !dbg !2002

if.then20:                                        ; preds = %if.end18
  %19 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !2003
  %tile21 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %19, i32 0, i32 10, !dbg !2004
  %20 = load %struct._Image*, %struct._Image** %tile21, align 8, !dbg !2004
  %call22 = call %struct._Image* @DestroyImage(%struct._Image* %20), !dbg !2005
  %21 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !2006
  %tile23 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %21, i32 0, i32 10, !dbg !2007
  store %struct._Image* %call22, %struct._Image** %tile23, align 8, !dbg !2008
  br label %if.end24, !dbg !2006

if.end24:                                         ; preds = %if.then20, %if.end18
  %22 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !2009
  %fill_pattern = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %22, i32 0, i32 9, !dbg !2011
  %23 = load %struct._Image*, %struct._Image** %fill_pattern, align 8, !dbg !2011
  %cmp25 = icmp ne %struct._Image* %23, null, !dbg !2012
  br i1 %cmp25, label %if.then26, label %if.end30, !dbg !2013

if.then26:                                        ; preds = %if.end24
  %24 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !2014
  %fill_pattern27 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %24, i32 0, i32 9, !dbg !2015
  %25 = load %struct._Image*, %struct._Image** %fill_pattern27, align 8, !dbg !2015
  %call28 = call %struct._Image* @DestroyImage(%struct._Image* %25), !dbg !2016
  %26 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !2017
  %fill_pattern29 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %26, i32 0, i32 9, !dbg !2018
  store %struct._Image* %call28, %struct._Image** %fill_pattern29, align 8, !dbg !2019
  br label %if.end30, !dbg !2017

if.end30:                                         ; preds = %if.then26, %if.end24
  %27 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !2020
  %stroke_pattern = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %27, i32 0, i32 11, !dbg !2022
  %28 = load %struct._Image*, %struct._Image** %stroke_pattern, align 8, !dbg !2022
  %cmp31 = icmp ne %struct._Image* %28, null, !dbg !2023
  br i1 %cmp31, label %if.then32, label %if.end36, !dbg !2024

if.then32:                                        ; preds = %if.end30
  %29 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !2025
  %stroke_pattern33 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %29, i32 0, i32 11, !dbg !2026
  %30 = load %struct._Image*, %struct._Image** %stroke_pattern33, align 8, !dbg !2026
  %call34 = call %struct._Image* @DestroyImage(%struct._Image* %30), !dbg !2027
  %31 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !2028
  %stroke_pattern35 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %31, i32 0, i32 11, !dbg !2029
  store %struct._Image* %call34, %struct._Image** %stroke_pattern35, align 8, !dbg !2030
  br label %if.end36, !dbg !2028

if.end36:                                         ; preds = %if.then32, %if.end30
  %32 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !2031
  %font = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %32, i32 0, i32 23, !dbg !2033
  %33 = load i8*, i8** %font, align 8, !dbg !2033
  %cmp37 = icmp ne i8* %33, null, !dbg !2034
  br i1 %cmp37, label %if.then38, label %if.end42, !dbg !2035

if.then38:                                        ; preds = %if.end36
  %34 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !2036
  %font39 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %34, i32 0, i32 23, !dbg !2037
  %35 = load i8*, i8** %font39, align 8, !dbg !2037
  %call40 = call i8* @DestroyString(i8* %35), !dbg !2038
  %36 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !2039
  %font41 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %36, i32 0, i32 23, !dbg !2040
  store i8* %call40, i8** %font41, align 8, !dbg !2041
  br label %if.end42, !dbg !2039

if.end42:                                         ; preds = %if.then38, %if.end36
  %37 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !2042
  %metrics = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %37, i32 0, i32 24, !dbg !2044
  %38 = load i8*, i8** %metrics, align 8, !dbg !2044
  %cmp43 = icmp ne i8* %38, null, !dbg !2045
  br i1 %cmp43, label %if.then44, label %if.end48, !dbg !2046

if.then44:                                        ; preds = %if.end42
  %39 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !2047
  %metrics45 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %39, i32 0, i32 24, !dbg !2048
  %40 = load i8*, i8** %metrics45, align 8, !dbg !2048
  %call46 = call i8* @DestroyString(i8* %40), !dbg !2049
  %41 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !2050
  %metrics47 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %41, i32 0, i32 24, !dbg !2051
  store i8* %call46, i8** %metrics47, align 8, !dbg !2052
  br label %if.end48, !dbg !2050

if.end48:                                         ; preds = %if.then44, %if.end42
  %42 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !2053
  %family = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %42, i32 0, i32 25, !dbg !2055
  %43 = load i8*, i8** %family, align 8, !dbg !2055
  %cmp49 = icmp ne i8* %43, null, !dbg !2056
  br i1 %cmp49, label %if.then50, label %if.end54, !dbg !2057

if.then50:                                        ; preds = %if.end48
  %44 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !2058
  %family51 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %44, i32 0, i32 25, !dbg !2059
  %45 = load i8*, i8** %family51, align 8, !dbg !2059
  %call52 = call i8* @DestroyString(i8* %45), !dbg !2060
  %46 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !2061
  %family53 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %46, i32 0, i32 25, !dbg !2062
  store i8* %call52, i8** %family53, align 8, !dbg !2063
  br label %if.end54, !dbg !2061

if.end54:                                         ; preds = %if.then50, %if.end48
  %47 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !2064
  %encoding = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %47, i32 0, i32 29, !dbg !2066
  %48 = load i8*, i8** %encoding, align 8, !dbg !2066
  %cmp55 = icmp ne i8* %48, null, !dbg !2067
  br i1 %cmp55, label %if.then56, label %if.end60, !dbg !2068

if.then56:                                        ; preds = %if.end54
  %49 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !2069
  %encoding57 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %49, i32 0, i32 29, !dbg !2070
  %50 = load i8*, i8** %encoding57, align 8, !dbg !2070
  %call58 = call i8* @DestroyString(i8* %50), !dbg !2071
  %51 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !2072
  %encoding59 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %51, i32 0, i32 29, !dbg !2073
  store i8* %call58, i8** %encoding59, align 8, !dbg !2074
  br label %if.end60, !dbg !2072

if.end60:                                         ; preds = %if.then56, %if.end54
  %52 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !2075
  %density = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %52, i32 0, i32 31, !dbg !2077
  %53 = load i8*, i8** %density, align 8, !dbg !2077
  %cmp61 = icmp ne i8* %53, null, !dbg !2078
  br i1 %cmp61, label %if.then62, label %if.end66, !dbg !2079

if.then62:                                        ; preds = %if.end60
  %54 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !2080
  %density63 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %54, i32 0, i32 31, !dbg !2081
  %55 = load i8*, i8** %density63, align 8, !dbg !2081
  %call64 = call i8* @DestroyString(i8* %55), !dbg !2082
  %56 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !2083
  %density65 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %56, i32 0, i32 31, !dbg !2084
  store i8* %call64, i8** %density65, align 8, !dbg !2085
  br label %if.end66, !dbg !2083

if.end66:                                         ; preds = %if.then62, %if.end60
  %57 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !2086
  %server_name = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %57, i32 0, i32 35, !dbg !2088
  %58 = load i8*, i8** %server_name, align 8, !dbg !2088
  %cmp67 = icmp ne i8* %58, null, !dbg !2089
  br i1 %cmp67, label %if.then68, label %if.end72, !dbg !2090

if.then68:                                        ; preds = %if.end66
  %59 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !2091
  %server_name69 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %59, i32 0, i32 35, !dbg !2092
  %60 = load i8*, i8** %server_name69, align 8, !dbg !2092
  %call70 = call i8* @RelinquishMagickMemory(i8* %60), !dbg !2093
  %61 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !2094
  %server_name71 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %61, i32 0, i32 35, !dbg !2095
  store i8* %call70, i8** %server_name71, align 8, !dbg !2096
  br label %if.end72, !dbg !2094

if.end72:                                         ; preds = %if.then68, %if.end66
  %62 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !2097
  %dash_pattern = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %62, i32 0, i32 36, !dbg !2099
  %63 = load double*, double** %dash_pattern, align 8, !dbg !2099
  %cmp73 = icmp ne double* %63, null, !dbg !2100
  br i1 %cmp73, label %if.then74, label %if.end78, !dbg !2101

if.then74:                                        ; preds = %if.end72
  %64 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !2102
  %dash_pattern75 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %64, i32 0, i32 36, !dbg !2103
  %65 = load double*, double** %dash_pattern75, align 8, !dbg !2103
  %66 = bitcast double* %65 to i8*, !dbg !2102
  %call76 = call i8* @RelinquishMagickMemory(i8* %66), !dbg !2104
  %67 = bitcast i8* %call76 to double*, !dbg !2105
  %68 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !2106
  %dash_pattern77 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %68, i32 0, i32 36, !dbg !2107
  store double* %67, double** %dash_pattern77, align 8, !dbg !2108
  br label %if.end78, !dbg !2106

if.end78:                                         ; preds = %if.then74, %if.end72
  %69 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !2109
  %gradient = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %69, i32 0, i32 8, !dbg !2111
  %stops = getelementptr inbounds %struct._GradientInfo, %struct._GradientInfo* %gradient, i32 0, i32 3, !dbg !2112
  %70 = load %struct._StopInfo*, %struct._StopInfo** %stops, align 8, !dbg !2112
  %cmp79 = icmp ne %struct._StopInfo* %70, null, !dbg !2113
  br i1 %cmp79, label %if.then80, label %if.end86, !dbg !2114

if.then80:                                        ; preds = %if.end78
  %71 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !2115
  %gradient81 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %71, i32 0, i32 8, !dbg !2116
  %stops82 = getelementptr inbounds %struct._GradientInfo, %struct._GradientInfo* %gradient81, i32 0, i32 3, !dbg !2117
  %72 = load %struct._StopInfo*, %struct._StopInfo** %stops82, align 8, !dbg !2117
  %73 = bitcast %struct._StopInfo* %72 to i8*, !dbg !2115
  %call83 = call i8* @RelinquishMagickMemory(i8* %73), !dbg !2118
  %74 = bitcast i8* %call83 to %struct._StopInfo*, !dbg !2119
  %75 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !2120
  %gradient84 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %75, i32 0, i32 8, !dbg !2121
  %stops85 = getelementptr inbounds %struct._GradientInfo, %struct._GradientInfo* %gradient84, i32 0, i32 3, !dbg !2122
  store %struct._StopInfo* %74, %struct._StopInfo** %stops85, align 8, !dbg !2123
  br label %if.end86, !dbg !2120

if.end86:                                         ; preds = %if.then80, %if.end78
  %76 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !2124
  %clip_mask = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %76, i32 0, i32 37, !dbg !2126
  %77 = load i8*, i8** %clip_mask, align 8, !dbg !2126
  %cmp87 = icmp ne i8* %77, null, !dbg !2127
  br i1 %cmp87, label %if.then88, label %if.end92, !dbg !2128

if.then88:                                        ; preds = %if.end86
  %78 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !2129
  %clip_mask89 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %78, i32 0, i32 37, !dbg !2130
  %79 = load i8*, i8** %clip_mask89, align 8, !dbg !2130
  %call90 = call i8* @DestroyString(i8* %79), !dbg !2131
  %80 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !2132
  %clip_mask91 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %80, i32 0, i32 37, !dbg !2133
  store i8* %call90, i8** %clip_mask91, align 8, !dbg !2134
  br label %if.end92, !dbg !2132

if.end92:                                         ; preds = %if.then88, %if.end86
  %81 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !2135
  %signature = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %81, i32 0, i32 44, !dbg !2136
  store i64 -2880220588, i64* %signature, align 8, !dbg !2137
  %82 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !2138
  %83 = bitcast %struct._DrawInfo* %82 to i8*, !dbg !2138
  %call93 = call i8* @RelinquishMagickMemory(i8* %83), !dbg !2139
  %84 = bitcast i8* %call93 to %struct._DrawInfo*, !dbg !2140
  store %struct._DrawInfo* %84, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !2141
  %85 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !2142
  ret %struct._DrawInfo* %85, !dbg !2143
}

declare dso_local i32 @LogMagickEvent(i32, i8*, i8*, i64, i8*, ...) #3

declare dso_local %struct._Image* @DestroyImage(%struct._Image*) #3

declare dso_local i8* @RelinquishMagickMemory(i8*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @DrawAffineImage(%struct._Image* %image, %struct._Image* %source, %struct._AffineMatrix* %affine) #0 !dbg !2144 {
entry:
  %retval = alloca i32, align 4
  %image.addr = alloca %struct._Image*, align 8
  %source.addr = alloca %struct._Image*, align 8
  %affine.addr = alloca %struct._AffineMatrix*, align 8
  %inverse_affine = alloca %struct._AffineMatrix, align 8
  %image_view = alloca %struct._CacheView*, align 8
  %source_view = alloca %struct._CacheView*, align 8
  %exception = alloca %struct._ExceptionInfo*, align 8
  %status = alloca i32, align 4
  %zero = alloca %struct._MagickPixelPacket, align 8
  %extent = alloca [4 x %struct._PointInfo], align 16
  %min = alloca %struct._PointInfo, align 8
  %max = alloca %struct._PointInfo, align 8
  %point = alloca %struct._PointInfo, align 8
  %i = alloca i64, align 8
  %edge = alloca %struct._SegmentInfo, align 8
  %start = alloca i64, align 8
  %stop = alloca i64, align 8
  %y = alloca i64, align 8
  %tmp = alloca %struct._AffineMatrix, align 8
  %composite = alloca %struct._MagickPixelPacket, align 8
  %pixel = alloca %struct._MagickPixelPacket, align 8
  %point122 = alloca %struct._PointInfo, align 8
  %indexes = alloca i16*, align 8
  %x123 = alloca i64, align 8
  %q = alloca %struct._PixelPacket*, align 8
  %inverse_edge = alloca %struct._SegmentInfo, align 8
  %x_offset = alloca i64, align 8
  %tmp124 = alloca %struct._SegmentInfo, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !2149, metadata !DIExpression()), !dbg !2150
  store %struct._Image* %source, %struct._Image** %source.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %source.addr, metadata !2151, metadata !DIExpression()), !dbg !2152
  store %struct._AffineMatrix* %affine, %struct._AffineMatrix** %affine.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._AffineMatrix** %affine.addr, metadata !2153, metadata !DIExpression()), !dbg !2154
  call void @llvm.dbg.declare(metadata %struct._AffineMatrix* %inverse_affine, metadata !2155, metadata !DIExpression()), !dbg !2156
  call void @llvm.dbg.declare(metadata %struct._CacheView** %image_view, metadata !2157, metadata !DIExpression()), !dbg !2161
  call void @llvm.dbg.declare(metadata %struct._CacheView** %source_view, metadata !2162, metadata !DIExpression()), !dbg !2163
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception, metadata !2164, metadata !DIExpression()), !dbg !2165
  call void @llvm.dbg.declare(metadata i32* %status, metadata !2166, metadata !DIExpression()), !dbg !2167
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket* %zero, metadata !2168, metadata !DIExpression()), !dbg !2169
  call void @llvm.dbg.declare(metadata [4 x %struct._PointInfo]* %extent, metadata !2170, metadata !DIExpression()), !dbg !2174
  call void @llvm.dbg.declare(metadata %struct._PointInfo* %min, metadata !2175, metadata !DIExpression()), !dbg !2176
  call void @llvm.dbg.declare(metadata %struct._PointInfo* %max, metadata !2177, metadata !DIExpression()), !dbg !2178
  call void @llvm.dbg.declare(metadata %struct._PointInfo* %point, metadata !2179, metadata !DIExpression()), !dbg !2180
  call void @llvm.dbg.declare(metadata i64* %i, metadata !2181, metadata !DIExpression()), !dbg !2182
  call void @llvm.dbg.declare(metadata %struct._SegmentInfo* %edge, metadata !2183, metadata !DIExpression()), !dbg !2184
  call void @llvm.dbg.declare(metadata i64* %start, metadata !2185, metadata !DIExpression()), !dbg !2186
  call void @llvm.dbg.declare(metadata i64* %stop, metadata !2187, metadata !DIExpression()), !dbg !2188
  call void @llvm.dbg.declare(metadata i64* %y, metadata !2189, metadata !DIExpression()), !dbg !2190
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2191
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !2193
  %1 = load i32, i32* %debug, align 8, !dbg !2193
  %cmp = icmp ne i32 %1, 0, !dbg !2194
  br i1 %cmp, label %if.then, label %if.end, !dbg !2195

if.then:                                          ; preds = %entry
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2196
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %2, i32 0, i32 53, !dbg !2197
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !2196
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1151, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i64 0, i64 0), i8* %arraydecay), !dbg !2198
  br label %if.end, !dbg !2199

if.end:                                           ; preds = %if.then, %entry
  %arrayidx = getelementptr inbounds [4 x %struct._PointInfo], [4 x %struct._PointInfo]* %extent, i64 0, i64 0, !dbg !2200
  %x = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx, i32 0, i32 0, !dbg !2201
  store double 0.000000e+00, double* %x, align 16, !dbg !2202
  %arrayidx1 = getelementptr inbounds [4 x %struct._PointInfo], [4 x %struct._PointInfo]* %extent, i64 0, i64 0, !dbg !2203
  %y2 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx1, i32 0, i32 1, !dbg !2204
  store double 0.000000e+00, double* %y2, align 8, !dbg !2205
  %3 = load %struct._Image*, %struct._Image** %source.addr, align 8, !dbg !2206
  %columns = getelementptr inbounds %struct._Image, %struct._Image* %3, i32 0, i32 7, !dbg !2207
  %4 = load i64, i64* %columns, align 8, !dbg !2207
  %conv = uitofp i64 %4 to double, !dbg !2208
  %sub = fsub double %conv, 1.000000e+00, !dbg !2209
  %arrayidx3 = getelementptr inbounds [4 x %struct._PointInfo], [4 x %struct._PointInfo]* %extent, i64 0, i64 1, !dbg !2210
  %x4 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx3, i32 0, i32 0, !dbg !2211
  store double %sub, double* %x4, align 16, !dbg !2212
  %arrayidx5 = getelementptr inbounds [4 x %struct._PointInfo], [4 x %struct._PointInfo]* %extent, i64 0, i64 1, !dbg !2213
  %y6 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx5, i32 0, i32 1, !dbg !2214
  store double 0.000000e+00, double* %y6, align 8, !dbg !2215
  %5 = load %struct._Image*, %struct._Image** %source.addr, align 8, !dbg !2216
  %columns7 = getelementptr inbounds %struct._Image, %struct._Image* %5, i32 0, i32 7, !dbg !2217
  %6 = load i64, i64* %columns7, align 8, !dbg !2217
  %conv8 = uitofp i64 %6 to double, !dbg !2218
  %sub9 = fsub double %conv8, 1.000000e+00, !dbg !2219
  %arrayidx10 = getelementptr inbounds [4 x %struct._PointInfo], [4 x %struct._PointInfo]* %extent, i64 0, i64 2, !dbg !2220
  %x11 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx10, i32 0, i32 0, !dbg !2221
  store double %sub9, double* %x11, align 16, !dbg !2222
  %7 = load %struct._Image*, %struct._Image** %source.addr, align 8, !dbg !2223
  %rows = getelementptr inbounds %struct._Image, %struct._Image* %7, i32 0, i32 8, !dbg !2224
  %8 = load i64, i64* %rows, align 8, !dbg !2224
  %conv12 = uitofp i64 %8 to double, !dbg !2225
  %sub13 = fsub double %conv12, 1.000000e+00, !dbg !2226
  %arrayidx14 = getelementptr inbounds [4 x %struct._PointInfo], [4 x %struct._PointInfo]* %extent, i64 0, i64 2, !dbg !2227
  %y15 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx14, i32 0, i32 1, !dbg !2228
  store double %sub13, double* %y15, align 8, !dbg !2229
  %arrayidx16 = getelementptr inbounds [4 x %struct._PointInfo], [4 x %struct._PointInfo]* %extent, i64 0, i64 3, !dbg !2230
  %x17 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx16, i32 0, i32 0, !dbg !2231
  store double 0.000000e+00, double* %x17, align 16, !dbg !2232
  %9 = load %struct._Image*, %struct._Image** %source.addr, align 8, !dbg !2233
  %rows18 = getelementptr inbounds %struct._Image, %struct._Image* %9, i32 0, i32 8, !dbg !2234
  %10 = load i64, i64* %rows18, align 8, !dbg !2234
  %conv19 = uitofp i64 %10 to double, !dbg !2235
  %sub20 = fsub double %conv19, 1.000000e+00, !dbg !2236
  %arrayidx21 = getelementptr inbounds [4 x %struct._PointInfo], [4 x %struct._PointInfo]* %extent, i64 0, i64 3, !dbg !2237
  %y22 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx21, i32 0, i32 1, !dbg !2238
  store double %sub20, double* %y22, align 8, !dbg !2239
  store i64 0, i64* %i, align 8, !dbg !2240
  br label %for.cond, !dbg !2242

for.cond:                                         ; preds = %for.inc, %if.end
  %11 = load i64, i64* %i, align 8, !dbg !2243
  %cmp23 = icmp slt i64 %11, 4, !dbg !2245
  br i1 %cmp23, label %for.body, label %for.end, !dbg !2246

for.body:                                         ; preds = %for.cond
  %12 = load i64, i64* %i, align 8, !dbg !2247
  %arrayidx25 = getelementptr inbounds [4 x %struct._PointInfo], [4 x %struct._PointInfo]* %extent, i64 0, i64 %12, !dbg !2249
  %13 = bitcast %struct._PointInfo* %point to i8*, !dbg !2249
  %14 = bitcast %struct._PointInfo* %arrayidx25 to i8*, !dbg !2249
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 16 %14, i64 16, i1 false), !dbg !2249
  %x26 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 0, !dbg !2250
  %15 = load double, double* %x26, align 8, !dbg !2250
  %16 = load %struct._AffineMatrix*, %struct._AffineMatrix** %affine.addr, align 8, !dbg !2251
  %sx = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %16, i32 0, i32 0, !dbg !2252
  %17 = load double, double* %sx, align 8, !dbg !2252
  %mul = fmul double %15, %17, !dbg !2253
  %y27 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 1, !dbg !2254
  %18 = load double, double* %y27, align 8, !dbg !2254
  %19 = load %struct._AffineMatrix*, %struct._AffineMatrix** %affine.addr, align 8, !dbg !2255
  %ry = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %19, i32 0, i32 2, !dbg !2256
  %20 = load double, double* %ry, align 8, !dbg !2256
  %mul28 = fmul double %18, %20, !dbg !2257
  %add = fadd double %mul, %mul28, !dbg !2258
  %21 = load %struct._AffineMatrix*, %struct._AffineMatrix** %affine.addr, align 8, !dbg !2259
  %tx = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %21, i32 0, i32 4, !dbg !2260
  %22 = load double, double* %tx, align 8, !dbg !2260
  %add29 = fadd double %add, %22, !dbg !2261
  %23 = load i64, i64* %i, align 8, !dbg !2262
  %arrayidx30 = getelementptr inbounds [4 x %struct._PointInfo], [4 x %struct._PointInfo]* %extent, i64 0, i64 %23, !dbg !2263
  %x31 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx30, i32 0, i32 0, !dbg !2264
  store double %add29, double* %x31, align 16, !dbg !2265
  %x32 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 0, !dbg !2266
  %24 = load double, double* %x32, align 8, !dbg !2266
  %25 = load %struct._AffineMatrix*, %struct._AffineMatrix** %affine.addr, align 8, !dbg !2267
  %rx = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %25, i32 0, i32 1, !dbg !2268
  %26 = load double, double* %rx, align 8, !dbg !2268
  %mul33 = fmul double %24, %26, !dbg !2269
  %y34 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 1, !dbg !2270
  %27 = load double, double* %y34, align 8, !dbg !2270
  %28 = load %struct._AffineMatrix*, %struct._AffineMatrix** %affine.addr, align 8, !dbg !2271
  %sy = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %28, i32 0, i32 3, !dbg !2272
  %29 = load double, double* %sy, align 8, !dbg !2272
  %mul35 = fmul double %27, %29, !dbg !2273
  %add36 = fadd double %mul33, %mul35, !dbg !2274
  %30 = load %struct._AffineMatrix*, %struct._AffineMatrix** %affine.addr, align 8, !dbg !2275
  %ty = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %30, i32 0, i32 5, !dbg !2276
  %31 = load double, double* %ty, align 8, !dbg !2276
  %add37 = fadd double %add36, %31, !dbg !2277
  %32 = load i64, i64* %i, align 8, !dbg !2278
  %arrayidx38 = getelementptr inbounds [4 x %struct._PointInfo], [4 x %struct._PointInfo]* %extent, i64 0, i64 %32, !dbg !2279
  %y39 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx38, i32 0, i32 1, !dbg !2280
  store double %add37, double* %y39, align 8, !dbg !2281
  br label %for.inc, !dbg !2282

for.inc:                                          ; preds = %for.body
  %33 = load i64, i64* %i, align 8, !dbg !2283
  %inc = add nsw i64 %33, 1, !dbg !2283
  store i64 %inc, i64* %i, align 8, !dbg !2283
  br label %for.cond, !dbg !2284, !llvm.loop !2285

for.end:                                          ; preds = %for.cond
  %arrayidx40 = getelementptr inbounds [4 x %struct._PointInfo], [4 x %struct._PointInfo]* %extent, i64 0, i64 0, !dbg !2287
  %34 = bitcast %struct._PointInfo* %min to i8*, !dbg !2287
  %35 = bitcast %struct._PointInfo* %arrayidx40 to i8*, !dbg !2287
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 16 %35, i64 16, i1 false), !dbg !2287
  %arrayidx41 = getelementptr inbounds [4 x %struct._PointInfo], [4 x %struct._PointInfo]* %extent, i64 0, i64 0, !dbg !2288
  %36 = bitcast %struct._PointInfo* %max to i8*, !dbg !2288
  %37 = bitcast %struct._PointInfo* %arrayidx41 to i8*, !dbg !2288
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 16 %37, i64 16, i1 false), !dbg !2288
  store i64 1, i64* %i, align 8, !dbg !2289
  br label %for.cond42, !dbg !2291

for.cond42:                                       ; preds = %for.inc86, %for.end
  %38 = load i64, i64* %i, align 8, !dbg !2292
  %cmp43 = icmp slt i64 %38, 4, !dbg !2294
  br i1 %cmp43, label %for.body45, label %for.end88, !dbg !2295

for.body45:                                       ; preds = %for.cond42
  %x46 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %min, i32 0, i32 0, !dbg !2296
  %39 = load double, double* %x46, align 8, !dbg !2296
  %40 = load i64, i64* %i, align 8, !dbg !2299
  %arrayidx47 = getelementptr inbounds [4 x %struct._PointInfo], [4 x %struct._PointInfo]* %extent, i64 0, i64 %40, !dbg !2300
  %x48 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx47, i32 0, i32 0, !dbg !2301
  %41 = load double, double* %x48, align 16, !dbg !2301
  %cmp49 = fcmp ogt double %39, %41, !dbg !2302
  br i1 %cmp49, label %if.then51, label %if.end55, !dbg !2303

if.then51:                                        ; preds = %for.body45
  %42 = load i64, i64* %i, align 8, !dbg !2304
  %arrayidx52 = getelementptr inbounds [4 x %struct._PointInfo], [4 x %struct._PointInfo]* %extent, i64 0, i64 %42, !dbg !2305
  %x53 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx52, i32 0, i32 0, !dbg !2306
  %43 = load double, double* %x53, align 16, !dbg !2306
  %x54 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %min, i32 0, i32 0, !dbg !2307
  store double %43, double* %x54, align 8, !dbg !2308
  br label %if.end55, !dbg !2309

if.end55:                                         ; preds = %if.then51, %for.body45
  %y56 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %min, i32 0, i32 1, !dbg !2310
  %44 = load double, double* %y56, align 8, !dbg !2310
  %45 = load i64, i64* %i, align 8, !dbg !2312
  %arrayidx57 = getelementptr inbounds [4 x %struct._PointInfo], [4 x %struct._PointInfo]* %extent, i64 0, i64 %45, !dbg !2313
  %y58 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx57, i32 0, i32 1, !dbg !2314
  %46 = load double, double* %y58, align 8, !dbg !2314
  %cmp59 = fcmp ogt double %44, %46, !dbg !2315
  br i1 %cmp59, label %if.then61, label %if.end65, !dbg !2316

if.then61:                                        ; preds = %if.end55
  %47 = load i64, i64* %i, align 8, !dbg !2317
  %arrayidx62 = getelementptr inbounds [4 x %struct._PointInfo], [4 x %struct._PointInfo]* %extent, i64 0, i64 %47, !dbg !2318
  %y63 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx62, i32 0, i32 1, !dbg !2319
  %48 = load double, double* %y63, align 8, !dbg !2319
  %y64 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %min, i32 0, i32 1, !dbg !2320
  store double %48, double* %y64, align 8, !dbg !2321
  br label %if.end65, !dbg !2322

if.end65:                                         ; preds = %if.then61, %if.end55
  %x66 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %max, i32 0, i32 0, !dbg !2323
  %49 = load double, double* %x66, align 8, !dbg !2323
  %50 = load i64, i64* %i, align 8, !dbg !2325
  %arrayidx67 = getelementptr inbounds [4 x %struct._PointInfo], [4 x %struct._PointInfo]* %extent, i64 0, i64 %50, !dbg !2326
  %x68 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx67, i32 0, i32 0, !dbg !2327
  %51 = load double, double* %x68, align 16, !dbg !2327
  %cmp69 = fcmp olt double %49, %51, !dbg !2328
  br i1 %cmp69, label %if.then71, label %if.end75, !dbg !2329

if.then71:                                        ; preds = %if.end65
  %52 = load i64, i64* %i, align 8, !dbg !2330
  %arrayidx72 = getelementptr inbounds [4 x %struct._PointInfo], [4 x %struct._PointInfo]* %extent, i64 0, i64 %52, !dbg !2331
  %x73 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx72, i32 0, i32 0, !dbg !2332
  %53 = load double, double* %x73, align 16, !dbg !2332
  %x74 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %max, i32 0, i32 0, !dbg !2333
  store double %53, double* %x74, align 8, !dbg !2334
  br label %if.end75, !dbg !2335

if.end75:                                         ; preds = %if.then71, %if.end65
  %y76 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %max, i32 0, i32 1, !dbg !2336
  %54 = load double, double* %y76, align 8, !dbg !2336
  %55 = load i64, i64* %i, align 8, !dbg !2338
  %arrayidx77 = getelementptr inbounds [4 x %struct._PointInfo], [4 x %struct._PointInfo]* %extent, i64 0, i64 %55, !dbg !2339
  %y78 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx77, i32 0, i32 1, !dbg !2340
  %56 = load double, double* %y78, align 8, !dbg !2340
  %cmp79 = fcmp olt double %54, %56, !dbg !2341
  br i1 %cmp79, label %if.then81, label %if.end85, !dbg !2342

if.then81:                                        ; preds = %if.end75
  %57 = load i64, i64* %i, align 8, !dbg !2343
  %arrayidx82 = getelementptr inbounds [4 x %struct._PointInfo], [4 x %struct._PointInfo]* %extent, i64 0, i64 %57, !dbg !2344
  %y83 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx82, i32 0, i32 1, !dbg !2345
  %58 = load double, double* %y83, align 8, !dbg !2345
  %y84 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %max, i32 0, i32 1, !dbg !2346
  store double %58, double* %y84, align 8, !dbg !2347
  br label %if.end85, !dbg !2348

if.end85:                                         ; preds = %if.then81, %if.end75
  br label %for.inc86, !dbg !2349

for.inc86:                                        ; preds = %if.end85
  %59 = load i64, i64* %i, align 8, !dbg !2350
  %inc87 = add nsw i64 %59, 1, !dbg !2350
  store i64 %inc87, i64* %i, align 8, !dbg !2350
  br label %for.cond42, !dbg !2351, !llvm.loop !2352

for.end88:                                        ; preds = %for.cond42
  %60 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2354
  %call89 = call i32 @SetImageStorageClass(%struct._Image* %60, i32 1), !dbg !2356
  %cmp90 = icmp eq i32 %call89, 0, !dbg !2357
  br i1 %cmp90, label %if.then92, label %if.end93, !dbg !2358

if.then92:                                        ; preds = %for.end88
  store i32 0, i32* %retval, align 4, !dbg !2359
  br label %return, !dbg !2359

if.end93:                                         ; preds = %for.end88
  store i32 1, i32* %status, align 4, !dbg !2360
  %x94 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %min, i32 0, i32 0, !dbg !2361
  %61 = load double, double* %x94, align 8, !dbg !2361
  %call95 = call double @MagickMax(double %61, double 0.000000e+00), !dbg !2362
  %x1 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %edge, i32 0, i32 0, !dbg !2363
  store double %call95, double* %x1, align 8, !dbg !2364
  %y96 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %min, i32 0, i32 1, !dbg !2365
  %62 = load double, double* %y96, align 8, !dbg !2365
  %call97 = call double @MagickMax(double %62, double 0.000000e+00), !dbg !2366
  %y1 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %edge, i32 0, i32 1, !dbg !2367
  store double %call97, double* %y1, align 8, !dbg !2368
  %x98 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %max, i32 0, i32 0, !dbg !2369
  %63 = load double, double* %x98, align 8, !dbg !2369
  %64 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2370
  %columns99 = getelementptr inbounds %struct._Image, %struct._Image* %64, i32 0, i32 7, !dbg !2371
  %65 = load i64, i64* %columns99, align 8, !dbg !2371
  %conv100 = uitofp i64 %65 to double, !dbg !2372
  %sub101 = fsub double %conv100, 1.000000e+00, !dbg !2373
  %call102 = call double @MagickMin(double %63, double %sub101), !dbg !2374
  %x2 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %edge, i32 0, i32 2, !dbg !2375
  store double %call102, double* %x2, align 8, !dbg !2376
  %y103 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %max, i32 0, i32 1, !dbg !2377
  %66 = load double, double* %y103, align 8, !dbg !2377
  %67 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2378
  %rows104 = getelementptr inbounds %struct._Image, %struct._Image* %67, i32 0, i32 8, !dbg !2379
  %68 = load i64, i64* %rows104, align 8, !dbg !2379
  %conv105 = uitofp i64 %68 to double, !dbg !2380
  %sub106 = fsub double %conv105, 1.000000e+00, !dbg !2381
  %call107 = call double @MagickMin(double %66, double %sub106), !dbg !2382
  %y2108 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %edge, i32 0, i32 3, !dbg !2383
  store double %call107, double* %y2108, align 8, !dbg !2384
  %69 = load %struct._AffineMatrix*, %struct._AffineMatrix** %affine.addr, align 8, !dbg !2385
  call void @InverseAffineMatrix(%struct._AffineMatrix* sret %tmp, %struct._AffineMatrix* %69), !dbg !2386
  %70 = bitcast %struct._AffineMatrix* %inverse_affine to i8*, !dbg !2386
  %71 = bitcast %struct._AffineMatrix* %tmp to i8*, !dbg !2386
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %70, i8* align 8 %71, i64 48, i1 false), !dbg !2386
  %72 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2387
  call void @GetMagickPixelPacket(%struct._Image* %72, %struct._MagickPixelPacket* %zero), !dbg !2388
  %73 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2389
  %exception109 = getelementptr inbounds %struct._Image, %struct._Image* %73, i32 0, i32 58, !dbg !2390
  store %struct._ExceptionInfo* %exception109, %struct._ExceptionInfo** %exception, align 8, !dbg !2391
  %y1110 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %edge, i32 0, i32 1, !dbg !2392
  %74 = load double, double* %y1110, align 8, !dbg !2392
  %sub111 = fsub double %74, 5.000000e-01, !dbg !2393
  %75 = call double @llvm.ceil.f64(double %sub111), !dbg !2394
  %conv112 = fptosi double %75 to i64, !dbg !2395
  store i64 %conv112, i64* %start, align 8, !dbg !2396
  %y2113 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %edge, i32 0, i32 3, !dbg !2397
  %76 = load double, double* %y2113, align 8, !dbg !2397
  %add114 = fadd double %76, 5.000000e-01, !dbg !2398
  %77 = call double @llvm.floor.f64(double %add114), !dbg !2399
  %conv115 = fptosi double %77 to i64, !dbg !2400
  store i64 %conv115, i64* %stop, align 8, !dbg !2401
  %78 = load %struct._Image*, %struct._Image** %source.addr, align 8, !dbg !2402
  %79 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !2403
  %call116 = call %struct._CacheView* @AcquireVirtualCacheView(%struct._Image* %78, %struct._ExceptionInfo* %79), !dbg !2404
  store %struct._CacheView* %call116, %struct._CacheView** %source_view, align 8, !dbg !2405
  %80 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2406
  %81 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !2407
  %call117 = call %struct._CacheView* @AcquireAuthenticCacheView(%struct._Image* %80, %struct._ExceptionInfo* %81), !dbg !2408
  store %struct._CacheView* %call117, %struct._CacheView** %image_view, align 8, !dbg !2409
  %82 = load i64, i64* %start, align 8, !dbg !2410
  store i64 %82, i64* %y, align 8, !dbg !2412
  br label %for.cond118, !dbg !2413

for.cond118:                                      ; preds = %for.inc192, %if.end93
  %83 = load i64, i64* %y, align 8, !dbg !2414
  %84 = load i64, i64* %stop, align 8, !dbg !2416
  %cmp119 = icmp sle i64 %83, %84, !dbg !2417
  br i1 %cmp119, label %for.body121, label %for.end194, !dbg !2418

for.body121:                                      ; preds = %for.cond118
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket* %composite, metadata !2419, metadata !DIExpression()), !dbg !2421
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket* %pixel, metadata !2422, metadata !DIExpression()), !dbg !2423
  call void @llvm.dbg.declare(metadata %struct._PointInfo* %point122, metadata !2424, metadata !DIExpression()), !dbg !2425
  call void @llvm.dbg.declare(metadata i16** %indexes, metadata !2426, metadata !DIExpression()), !dbg !2428
  call void @llvm.dbg.declare(metadata i64* %x123, metadata !2429, metadata !DIExpression()), !dbg !2430
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q, metadata !2431, metadata !DIExpression()), !dbg !2433
  call void @llvm.dbg.declare(metadata %struct._SegmentInfo* %inverse_edge, metadata !2434, metadata !DIExpression()), !dbg !2435
  call void @llvm.dbg.declare(metadata i64* %x_offset, metadata !2436, metadata !DIExpression()), !dbg !2437
  %85 = load %struct._Image*, %struct._Image** %source.addr, align 8, !dbg !2438
  %86 = load i64, i64* %y, align 8, !dbg !2439
  %conv125 = sitofp i64 %86 to double, !dbg !2440
  call void @AffineEdge(%struct._SegmentInfo* sret %tmp124, %struct._Image* %85, %struct._AffineMatrix* %inverse_affine, double %conv125, %struct._SegmentInfo* %edge), !dbg !2441
  %87 = bitcast %struct._SegmentInfo* %inverse_edge to i8*, !dbg !2441
  %88 = bitcast %struct._SegmentInfo* %tmp124 to i8*, !dbg !2441
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %87, i8* align 8 %88, i64 32, i1 false), !dbg !2441
  %x2126 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %inverse_edge, i32 0, i32 2, !dbg !2442
  %89 = load double, double* %x2126, align 8, !dbg !2442
  %x1127 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %inverse_edge, i32 0, i32 0, !dbg !2444
  %90 = load double, double* %x1127, align 8, !dbg !2444
  %cmp128 = fcmp olt double %89, %90, !dbg !2445
  br i1 %cmp128, label %if.then130, label %if.end131, !dbg !2446

if.then130:                                       ; preds = %for.body121
  br label %for.inc192, !dbg !2447

if.end131:                                        ; preds = %for.body121
  %91 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !2448
  %x1132 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %inverse_edge, i32 0, i32 0, !dbg !2449
  %92 = load double, double* %x1132, align 8, !dbg !2449
  %sub133 = fsub double %92, 5.000000e-01, !dbg !2450
  %93 = call double @llvm.ceil.f64(double %sub133), !dbg !2451
  %conv134 = fptosi double %93 to i64, !dbg !2452
  %94 = load i64, i64* %y, align 8, !dbg !2453
  %x2135 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %inverse_edge, i32 0, i32 2, !dbg !2454
  %95 = load double, double* %x2135, align 8, !dbg !2454
  %add136 = fadd double %95, 5.000000e-01, !dbg !2455
  %96 = call double @llvm.floor.f64(double %add136), !dbg !2456
  %x1137 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %inverse_edge, i32 0, i32 0, !dbg !2457
  %97 = load double, double* %x1137, align 8, !dbg !2457
  %sub138 = fsub double %97, 5.000000e-01, !dbg !2458
  %98 = call double @llvm.ceil.f64(double %sub138), !dbg !2459
  %sub139 = fsub double %96, %98, !dbg !2460
  %add140 = fadd double %sub139, 1.000000e+00, !dbg !2461
  %conv141 = fptoui double %add140 to i64, !dbg !2462
  %99 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !2463
  %call142 = call %struct._PixelPacket* @GetCacheViewAuthenticPixels(%struct._CacheView* %91, i64 %conv134, i64 %94, i64 %conv141, i64 1, %struct._ExceptionInfo* %99), !dbg !2464
  store %struct._PixelPacket* %call142, %struct._PixelPacket** %q, align 8, !dbg !2465
  %100 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !2466
  %cmp143 = icmp eq %struct._PixelPacket* %100, null, !dbg !2468
  br i1 %cmp143, label %if.then145, label %if.end146, !dbg !2469

if.then145:                                       ; preds = %if.end131
  br label %for.inc192, !dbg !2470

if.end146:                                        ; preds = %if.end131
  %101 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !2471
  %call147 = call i16* @GetCacheViewAuthenticIndexQueue(%struct._CacheView* %101), !dbg !2472
  store i16* %call147, i16** %indexes, align 8, !dbg !2473
  %102 = bitcast %struct._MagickPixelPacket* %pixel to i8*, !dbg !2474
  %103 = bitcast %struct._MagickPixelPacket* %zero to i8*, !dbg !2474
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %102, i8* align 8 %103, i64 56, i1 false), !dbg !2474
  %104 = bitcast %struct._MagickPixelPacket* %composite to i8*, !dbg !2475
  %105 = bitcast %struct._MagickPixelPacket* %zero to i8*, !dbg !2475
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %104, i8* align 8 %105, i64 56, i1 false), !dbg !2475
  store i64 0, i64* %x_offset, align 8, !dbg !2476
  %x1148 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %inverse_edge, i32 0, i32 0, !dbg !2477
  %106 = load double, double* %x1148, align 8, !dbg !2477
  %sub149 = fsub double %106, 5.000000e-01, !dbg !2479
  %107 = call double @llvm.ceil.f64(double %sub149), !dbg !2480
  %conv150 = fptosi double %107 to i64, !dbg !2481
  store i64 %conv150, i64* %x123, align 8, !dbg !2482
  br label %for.cond151, !dbg !2483

for.cond151:                                      ; preds = %for.inc184, %if.end146
  %108 = load i64, i64* %x123, align 8, !dbg !2484
  %x2152 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %inverse_edge, i32 0, i32 2, !dbg !2486
  %109 = load double, double* %x2152, align 8, !dbg !2486
  %add153 = fadd double %109, 5.000000e-01, !dbg !2487
  %110 = call double @llvm.floor.f64(double %add153), !dbg !2488
  %conv154 = fptosi double %110 to i64, !dbg !2489
  %cmp155 = icmp sle i64 %108, %conv154, !dbg !2490
  br i1 %cmp155, label %for.body157, label %for.end186, !dbg !2491

for.body157:                                      ; preds = %for.cond151
  %111 = load i64, i64* %x123, align 8, !dbg !2492
  %conv158 = sitofp i64 %111 to double, !dbg !2494
  %sx159 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %inverse_affine, i32 0, i32 0, !dbg !2495
  %112 = load double, double* %sx159, align 8, !dbg !2495
  %mul160 = fmul double %conv158, %112, !dbg !2496
  %113 = load i64, i64* %y, align 8, !dbg !2497
  %conv161 = sitofp i64 %113 to double, !dbg !2497
  %ry162 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %inverse_affine, i32 0, i32 2, !dbg !2498
  %114 = load double, double* %ry162, align 8, !dbg !2498
  %mul163 = fmul double %conv161, %114, !dbg !2499
  %add164 = fadd double %mul160, %mul163, !dbg !2500
  %tx165 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %inverse_affine, i32 0, i32 4, !dbg !2501
  %115 = load double, double* %tx165, align 8, !dbg !2501
  %add166 = fadd double %add164, %115, !dbg !2502
  %x167 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point122, i32 0, i32 0, !dbg !2503
  store double %add166, double* %x167, align 8, !dbg !2504
  %116 = load i64, i64* %x123, align 8, !dbg !2505
  %conv168 = sitofp i64 %116 to double, !dbg !2506
  %rx169 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %inverse_affine, i32 0, i32 1, !dbg !2507
  %117 = load double, double* %rx169, align 8, !dbg !2507
  %mul170 = fmul double %conv168, %117, !dbg !2508
  %118 = load i64, i64* %y, align 8, !dbg !2509
  %conv171 = sitofp i64 %118 to double, !dbg !2509
  %sy172 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %inverse_affine, i32 0, i32 3, !dbg !2510
  %119 = load double, double* %sy172, align 8, !dbg !2510
  %mul173 = fmul double %conv171, %119, !dbg !2511
  %add174 = fadd double %mul170, %mul173, !dbg !2512
  %ty175 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %inverse_affine, i32 0, i32 5, !dbg !2513
  %120 = load double, double* %ty175, align 8, !dbg !2513
  %add176 = fadd double %add174, %120, !dbg !2514
  %y177 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point122, i32 0, i32 1, !dbg !2515
  store double %add176, double* %y177, align 8, !dbg !2516
  %121 = load %struct._Image*, %struct._Image** %source.addr, align 8, !dbg !2517
  %122 = load %struct._CacheView*, %struct._CacheView** %source_view, align 8, !dbg !2518
  %x178 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point122, i32 0, i32 0, !dbg !2519
  %123 = load double, double* %x178, align 8, !dbg !2519
  %y179 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point122, i32 0, i32 1, !dbg !2520
  %124 = load double, double* %y179, align 8, !dbg !2520
  %125 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !2521
  %call180 = call i32 @InterpolateMagickPixelPacket(%struct._Image* %121, %struct._CacheView* %122, i32 0, double %123, double %124, %struct._MagickPixelPacket* %pixel, %struct._ExceptionInfo* %125), !dbg !2522
  %126 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2523
  %127 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !2524
  %128 = load i16*, i16** %indexes, align 8, !dbg !2525
  %129 = load i64, i64* %x_offset, align 8, !dbg !2526
  %add.ptr = getelementptr inbounds i16, i16* %128, i64 %129, !dbg !2527
  call void @SetMagickPixelPacket(%struct._Image* %126, %struct._PixelPacket* %127, i16* %add.ptr, %struct._MagickPixelPacket* %composite), !dbg !2528
  %opacity = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 8, !dbg !2529
  %130 = load float, float* %opacity, align 4, !dbg !2529
  %opacity181 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %composite, i32 0, i32 8, !dbg !2530
  %131 = load float, float* %opacity181, align 4, !dbg !2530
  call void @MagickPixelCompositeOver(%struct._MagickPixelPacket* %pixel, float %130, %struct._MagickPixelPacket* %composite, float %131, %struct._MagickPixelPacket* %composite), !dbg !2531
  %132 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2532
  %133 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !2533
  %134 = load i16*, i16** %indexes, align 8, !dbg !2534
  %135 = load i64, i64* %x_offset, align 8, !dbg !2535
  %add.ptr182 = getelementptr inbounds i16, i16* %134, i64 %135, !dbg !2536
  call void @SetPixelPacket(%struct._Image* %132, %struct._MagickPixelPacket* %composite, %struct._PixelPacket* %133, i16* %add.ptr182), !dbg !2537
  %136 = load i64, i64* %x_offset, align 8, !dbg !2538
  %inc183 = add nsw i64 %136, 1, !dbg !2538
  store i64 %inc183, i64* %x_offset, align 8, !dbg !2538
  %137 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !2539
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %137, i32 1, !dbg !2539
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %q, align 8, !dbg !2539
  br label %for.inc184, !dbg !2540

for.inc184:                                       ; preds = %for.body157
  %138 = load i64, i64* %x123, align 8, !dbg !2541
  %inc185 = add nsw i64 %138, 1, !dbg !2541
  store i64 %inc185, i64* %x123, align 8, !dbg !2541
  br label %for.cond151, !dbg !2542, !llvm.loop !2543

for.end186:                                       ; preds = %for.cond151
  %139 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !2545
  %140 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !2547
  %call187 = call i32 @SyncCacheViewAuthenticPixels(%struct._CacheView* %139, %struct._ExceptionInfo* %140), !dbg !2548
  %cmp188 = icmp eq i32 %call187, 0, !dbg !2549
  br i1 %cmp188, label %if.then190, label %if.end191, !dbg !2550

if.then190:                                       ; preds = %for.end186
  store i32 0, i32* %status, align 4, !dbg !2551
  br label %if.end191, !dbg !2552

if.end191:                                        ; preds = %if.then190, %for.end186
  br label %for.inc192, !dbg !2553

for.inc192:                                       ; preds = %if.end191, %if.then145, %if.then130
  %141 = load i64, i64* %y, align 8, !dbg !2554
  %inc193 = add nsw i64 %141, 1, !dbg !2554
  store i64 %inc193, i64* %y, align 8, !dbg !2554
  br label %for.cond118, !dbg !2555, !llvm.loop !2556

for.end194:                                       ; preds = %for.cond118
  %142 = load %struct._CacheView*, %struct._CacheView** %source_view, align 8, !dbg !2558
  %call195 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %142), !dbg !2559
  store %struct._CacheView* %call195, %struct._CacheView** %source_view, align 8, !dbg !2560
  %143 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !2561
  %call196 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %143), !dbg !2562
  store %struct._CacheView* %call196, %struct._CacheView** %image_view, align 8, !dbg !2563
  %144 = load i32, i32* %status, align 4, !dbg !2564
  store i32 %144, i32* %retval, align 4, !dbg !2565
  br label %return, !dbg !2565

return:                                           ; preds = %for.end194, %if.then92
  %145 = load i32, i32* %retval, align 4, !dbg !2566
  ret i32 %145, !dbg !2566
}

declare dso_local i32 @SetImageStorageClass(%struct._Image*, i32) #3

; Function Attrs: noinline nounwind uwtable
define internal double @MagickMax(double %x, double %y) #0 !dbg !2567 {
entry:
  %retval = alloca double, align 8
  %x.addr = alloca double, align 8
  %y.addr = alloca double, align 8
  store double %x, double* %x.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x.addr, metadata !2571, metadata !DIExpression()), !dbg !2572
  store double %y, double* %y.addr, align 8
  call void @llvm.dbg.declare(metadata double* %y.addr, metadata !2573, metadata !DIExpression()), !dbg !2574
  %0 = load double, double* %x.addr, align 8, !dbg !2575
  %1 = load double, double* %y.addr, align 8, !dbg !2577
  %cmp = fcmp ogt double %0, %1, !dbg !2578
  br i1 %cmp, label %if.then, label %if.end, !dbg !2579

if.then:                                          ; preds = %entry
  %2 = load double, double* %x.addr, align 8, !dbg !2580
  store double %2, double* %retval, align 8, !dbg !2581
  br label %return, !dbg !2581

if.end:                                           ; preds = %entry
  %3 = load double, double* %y.addr, align 8, !dbg !2582
  store double %3, double* %retval, align 8, !dbg !2583
  br label %return, !dbg !2583

return:                                           ; preds = %if.end, %if.then
  %4 = load double, double* %retval, align 8, !dbg !2584
  ret double %4, !dbg !2584
}

; Function Attrs: noinline nounwind uwtable
define internal double @MagickMin(double %x, double %y) #0 !dbg !2585 {
entry:
  %retval = alloca double, align 8
  %x.addr = alloca double, align 8
  %y.addr = alloca double, align 8
  store double %x, double* %x.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x.addr, metadata !2586, metadata !DIExpression()), !dbg !2587
  store double %y, double* %y.addr, align 8
  call void @llvm.dbg.declare(metadata double* %y.addr, metadata !2588, metadata !DIExpression()), !dbg !2589
  %0 = load double, double* %x.addr, align 8, !dbg !2590
  %1 = load double, double* %y.addr, align 8, !dbg !2592
  %cmp = fcmp olt double %0, %1, !dbg !2593
  br i1 %cmp, label %if.then, label %if.end, !dbg !2594

if.then:                                          ; preds = %entry
  %2 = load double, double* %x.addr, align 8, !dbg !2595
  store double %2, double* %retval, align 8, !dbg !2596
  br label %return, !dbg !2596

if.end:                                           ; preds = %entry
  %3 = load double, double* %y.addr, align 8, !dbg !2597
  store double %3, double* %retval, align 8, !dbg !2598
  br label %return, !dbg !2598

return:                                           ; preds = %if.end, %if.then
  %4 = load double, double* %retval, align 8, !dbg !2599
  ret double %4, !dbg !2599
}

; Function Attrs: noinline nounwind uwtable
define internal void @InverseAffineMatrix(%struct._AffineMatrix* noalias sret %agg.result, %struct._AffineMatrix* %affine) #0 !dbg !2600 {
entry:
  %affine.addr = alloca %struct._AffineMatrix*, align 8
  %determinant = alloca double, align 8
  store %struct._AffineMatrix* %affine, %struct._AffineMatrix** %affine.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._AffineMatrix** %affine.addr, metadata !2603, metadata !DIExpression()), !dbg !2604
  call void @llvm.dbg.declare(metadata %struct._AffineMatrix* %agg.result, metadata !2605, metadata !DIExpression()), !dbg !2606
  call void @llvm.dbg.declare(metadata double* %determinant, metadata !2607, metadata !DIExpression()), !dbg !2608
  %0 = load %struct._AffineMatrix*, %struct._AffineMatrix** %affine.addr, align 8, !dbg !2609
  %sx = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %0, i32 0, i32 0, !dbg !2610
  %1 = load double, double* %sx, align 8, !dbg !2610
  %2 = load %struct._AffineMatrix*, %struct._AffineMatrix** %affine.addr, align 8, !dbg !2611
  %sy = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %2, i32 0, i32 3, !dbg !2612
  %3 = load double, double* %sy, align 8, !dbg !2612
  %mul = fmul double %1, %3, !dbg !2613
  %4 = load %struct._AffineMatrix*, %struct._AffineMatrix** %affine.addr, align 8, !dbg !2614
  %rx = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %4, i32 0, i32 1, !dbg !2615
  %5 = load double, double* %rx, align 8, !dbg !2615
  %6 = load %struct._AffineMatrix*, %struct._AffineMatrix** %affine.addr, align 8, !dbg !2616
  %ry = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %6, i32 0, i32 2, !dbg !2617
  %7 = load double, double* %ry, align 8, !dbg !2617
  %mul1 = fmul double %5, %7, !dbg !2618
  %sub = fsub double %mul, %mul1, !dbg !2619
  %call = call double @PerceptibleReciprocal(double %sub), !dbg !2620
  store double %call, double* %determinant, align 8, !dbg !2621
  %8 = load double, double* %determinant, align 8, !dbg !2622
  %9 = load %struct._AffineMatrix*, %struct._AffineMatrix** %affine.addr, align 8, !dbg !2623
  %sy2 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %9, i32 0, i32 3, !dbg !2624
  %10 = load double, double* %sy2, align 8, !dbg !2624
  %mul3 = fmul double %8, %10, !dbg !2625
  %sx4 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %agg.result, i32 0, i32 0, !dbg !2626
  store double %mul3, double* %sx4, align 8, !dbg !2627
  %11 = load double, double* %determinant, align 8, !dbg !2628
  %12 = load %struct._AffineMatrix*, %struct._AffineMatrix** %affine.addr, align 8, !dbg !2629
  %rx5 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %12, i32 0, i32 1, !dbg !2630
  %13 = load double, double* %rx5, align 8, !dbg !2630
  %fneg = fneg double %13, !dbg !2631
  %mul6 = fmul double %11, %fneg, !dbg !2632
  %rx7 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %agg.result, i32 0, i32 1, !dbg !2633
  store double %mul6, double* %rx7, align 8, !dbg !2634
  %14 = load double, double* %determinant, align 8, !dbg !2635
  %15 = load %struct._AffineMatrix*, %struct._AffineMatrix** %affine.addr, align 8, !dbg !2636
  %ry8 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %15, i32 0, i32 2, !dbg !2637
  %16 = load double, double* %ry8, align 8, !dbg !2637
  %fneg9 = fneg double %16, !dbg !2638
  %mul10 = fmul double %14, %fneg9, !dbg !2639
  %ry11 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %agg.result, i32 0, i32 2, !dbg !2640
  store double %mul10, double* %ry11, align 8, !dbg !2641
  %17 = load double, double* %determinant, align 8, !dbg !2642
  %18 = load %struct._AffineMatrix*, %struct._AffineMatrix** %affine.addr, align 8, !dbg !2643
  %sx12 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %18, i32 0, i32 0, !dbg !2644
  %19 = load double, double* %sx12, align 8, !dbg !2644
  %mul13 = fmul double %17, %19, !dbg !2645
  %sy14 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %agg.result, i32 0, i32 3, !dbg !2646
  store double %mul13, double* %sy14, align 8, !dbg !2647
  %20 = load %struct._AffineMatrix*, %struct._AffineMatrix** %affine.addr, align 8, !dbg !2648
  %tx = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %20, i32 0, i32 4, !dbg !2649
  %21 = load double, double* %tx, align 8, !dbg !2649
  %fneg15 = fneg double %21, !dbg !2650
  %sx16 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %agg.result, i32 0, i32 0, !dbg !2651
  %22 = load double, double* %sx16, align 8, !dbg !2651
  %mul17 = fmul double %fneg15, %22, !dbg !2652
  %23 = load %struct._AffineMatrix*, %struct._AffineMatrix** %affine.addr, align 8, !dbg !2653
  %ty = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %23, i32 0, i32 5, !dbg !2654
  %24 = load double, double* %ty, align 8, !dbg !2654
  %ry18 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %agg.result, i32 0, i32 2, !dbg !2655
  %25 = load double, double* %ry18, align 8, !dbg !2655
  %mul19 = fmul double %24, %25, !dbg !2656
  %sub20 = fsub double %mul17, %mul19, !dbg !2657
  %tx21 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %agg.result, i32 0, i32 4, !dbg !2658
  store double %sub20, double* %tx21, align 8, !dbg !2659
  %26 = load %struct._AffineMatrix*, %struct._AffineMatrix** %affine.addr, align 8, !dbg !2660
  %tx22 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %26, i32 0, i32 4, !dbg !2661
  %27 = load double, double* %tx22, align 8, !dbg !2661
  %fneg23 = fneg double %27, !dbg !2662
  %rx24 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %agg.result, i32 0, i32 1, !dbg !2663
  %28 = load double, double* %rx24, align 8, !dbg !2663
  %mul25 = fmul double %fneg23, %28, !dbg !2664
  %29 = load %struct._AffineMatrix*, %struct._AffineMatrix** %affine.addr, align 8, !dbg !2665
  %ty26 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %29, i32 0, i32 5, !dbg !2666
  %30 = load double, double* %ty26, align 8, !dbg !2666
  %sy27 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %agg.result, i32 0, i32 3, !dbg !2667
  %31 = load double, double* %sy27, align 8, !dbg !2667
  %mul28 = fmul double %30, %31, !dbg !2668
  %sub29 = fsub double %mul25, %mul28, !dbg !2669
  %ty30 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %agg.result, i32 0, i32 5, !dbg !2670
  store double %sub29, double* %ty30, align 8, !dbg !2671
  ret void, !dbg !2672
}

declare dso_local void @GetMagickPixelPacket(%struct._Image*, %struct._MagickPixelPacket*) #3

; Function Attrs: nounwind readnone speculatable willreturn
declare double @llvm.ceil.f64(double) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare double @llvm.floor.f64(double) #1

declare dso_local %struct._CacheView* @AcquireVirtualCacheView(%struct._Image*, %struct._ExceptionInfo*) #3

declare dso_local %struct._CacheView* @AcquireAuthenticCacheView(%struct._Image*, %struct._ExceptionInfo*) #3

; Function Attrs: noinline nounwind uwtable
define internal void @AffineEdge(%struct._SegmentInfo* noalias sret %agg.result, %struct._Image* %image, %struct._AffineMatrix* %affine, double %y, %struct._SegmentInfo* %edge) #0 !dbg !2673 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %affine.addr = alloca %struct._AffineMatrix*, align 8
  %y.addr = alloca double, align 8
  %edge.addr = alloca %struct._SegmentInfo*, align 8
  %intercept = alloca double, align 8
  %z = alloca double, align 8
  %x = alloca double, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !2678, metadata !DIExpression()), !dbg !2679
  store %struct._AffineMatrix* %affine, %struct._AffineMatrix** %affine.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._AffineMatrix** %affine.addr, metadata !2680, metadata !DIExpression()), !dbg !2681
  store double %y, double* %y.addr, align 8
  call void @llvm.dbg.declare(metadata double* %y.addr, metadata !2682, metadata !DIExpression()), !dbg !2683
  store %struct._SegmentInfo* %edge, %struct._SegmentInfo** %edge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._SegmentInfo** %edge.addr, metadata !2684, metadata !DIExpression()), !dbg !2685
  call void @llvm.dbg.declare(metadata double* %intercept, metadata !2686, metadata !DIExpression()), !dbg !2687
  call void @llvm.dbg.declare(metadata double* %z, metadata !2688, metadata !DIExpression()), !dbg !2689
  call void @llvm.dbg.declare(metadata double* %x, metadata !2690, metadata !DIExpression()), !dbg !2691
  call void @llvm.dbg.declare(metadata %struct._SegmentInfo* %agg.result, metadata !2692, metadata !DIExpression()), !dbg !2693
  %0 = load %struct._SegmentInfo*, %struct._SegmentInfo** %edge.addr, align 8, !dbg !2694
  %x1 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %0, i32 0, i32 0, !dbg !2695
  %1 = load double, double* %x1, align 8, !dbg !2695
  %x11 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %agg.result, i32 0, i32 0, !dbg !2696
  store double %1, double* %x11, align 8, !dbg !2697
  %2 = load %struct._SegmentInfo*, %struct._SegmentInfo** %edge.addr, align 8, !dbg !2698
  %y1 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %2, i32 0, i32 1, !dbg !2699
  %3 = load double, double* %y1, align 8, !dbg !2699
  %y12 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %agg.result, i32 0, i32 1, !dbg !2700
  store double %3, double* %y12, align 8, !dbg !2701
  %4 = load %struct._SegmentInfo*, %struct._SegmentInfo** %edge.addr, align 8, !dbg !2702
  %x2 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %4, i32 0, i32 2, !dbg !2703
  %5 = load double, double* %x2, align 8, !dbg !2703
  %x23 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %agg.result, i32 0, i32 2, !dbg !2704
  store double %5, double* %x23, align 8, !dbg !2705
  %6 = load %struct._SegmentInfo*, %struct._SegmentInfo** %edge.addr, align 8, !dbg !2706
  %y2 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %6, i32 0, i32 3, !dbg !2707
  %7 = load double, double* %y2, align 8, !dbg !2707
  %y24 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %agg.result, i32 0, i32 3, !dbg !2708
  store double %7, double* %y24, align 8, !dbg !2709
  %8 = load %struct._AffineMatrix*, %struct._AffineMatrix** %affine.addr, align 8, !dbg !2710
  %ry = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %8, i32 0, i32 2, !dbg !2711
  %9 = load double, double* %ry, align 8, !dbg !2711
  %10 = load double, double* %y.addr, align 8, !dbg !2712
  %mul = fmul double %9, %10, !dbg !2713
  %11 = load %struct._AffineMatrix*, %struct._AffineMatrix** %affine.addr, align 8, !dbg !2714
  %tx = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %11, i32 0, i32 4, !dbg !2715
  %12 = load double, double* %tx, align 8, !dbg !2715
  %add = fadd double %mul, %12, !dbg !2716
  store double %add, double* %z, align 8, !dbg !2717
  %13 = load %struct._AffineMatrix*, %struct._AffineMatrix** %affine.addr, align 8, !dbg !2718
  %sx = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %13, i32 0, i32 0, !dbg !2720
  %14 = load double, double* %sx, align 8, !dbg !2720
  %cmp = fcmp oge double %14, 1.000000e-15, !dbg !2721
  br i1 %cmp, label %if.then, label %if.else, !dbg !2722

if.then:                                          ; preds = %entry
  %15 = load double, double* %z, align 8, !dbg !2723
  %fneg = fneg double %15, !dbg !2725
  %16 = load %struct._AffineMatrix*, %struct._AffineMatrix** %affine.addr, align 8, !dbg !2726
  %sx5 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %16, i32 0, i32 0, !dbg !2727
  %17 = load double, double* %sx5, align 8, !dbg !2727
  %div = fdiv double %fneg, %17, !dbg !2728
  store double %div, double* %intercept, align 8, !dbg !2729
  %18 = load double, double* %intercept, align 8, !dbg !2730
  store double %18, double* %x, align 8, !dbg !2731
  %19 = load double, double* %x, align 8, !dbg !2732
  %x16 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %agg.result, i32 0, i32 0, !dbg !2734
  %20 = load double, double* %x16, align 8, !dbg !2734
  %cmp7 = fcmp ogt double %19, %20, !dbg !2735
  br i1 %cmp7, label %if.then8, label %if.end, !dbg !2736

if.then8:                                         ; preds = %if.then
  %21 = load double, double* %x, align 8, !dbg !2737
  %x19 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %agg.result, i32 0, i32 0, !dbg !2738
  store double %21, double* %x19, align 8, !dbg !2739
  br label %if.end, !dbg !2740

if.end:                                           ; preds = %if.then8, %if.then
  %22 = load double, double* %z, align 8, !dbg !2741
  %fneg10 = fneg double %22, !dbg !2742
  %23 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2743
  %columns = getelementptr inbounds %struct._Image, %struct._Image* %23, i32 0, i32 7, !dbg !2744
  %24 = load i64, i64* %columns, align 8, !dbg !2744
  %conv = uitofp i64 %24 to double, !dbg !2745
  %add11 = fadd double %fneg10, %conv, !dbg !2746
  %25 = load %struct._AffineMatrix*, %struct._AffineMatrix** %affine.addr, align 8, !dbg !2747
  %sx12 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %25, i32 0, i32 0, !dbg !2748
  %26 = load double, double* %sx12, align 8, !dbg !2748
  %div13 = fdiv double %add11, %26, !dbg !2749
  store double %div13, double* %intercept, align 8, !dbg !2750
  %27 = load double, double* %intercept, align 8, !dbg !2751
  store double %27, double* %x, align 8, !dbg !2752
  %28 = load double, double* %x, align 8, !dbg !2753
  %x214 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %agg.result, i32 0, i32 2, !dbg !2755
  %29 = load double, double* %x214, align 8, !dbg !2755
  %cmp15 = fcmp olt double %28, %29, !dbg !2756
  br i1 %cmp15, label %if.then17, label %if.end19, !dbg !2757

if.then17:                                        ; preds = %if.end
  %30 = load double, double* %x, align 8, !dbg !2758
  %x218 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %agg.result, i32 0, i32 2, !dbg !2759
  store double %30, double* %x218, align 8, !dbg !2760
  br label %if.end19, !dbg !2761

if.end19:                                         ; preds = %if.then17, %if.end
  br label %if.end58, !dbg !2762

if.else:                                          ; preds = %entry
  %31 = load %struct._AffineMatrix*, %struct._AffineMatrix** %affine.addr, align 8, !dbg !2763
  %sx20 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %31, i32 0, i32 0, !dbg !2765
  %32 = load double, double* %sx20, align 8, !dbg !2765
  %cmp21 = fcmp olt double %32, -1.000000e-15, !dbg !2766
  br i1 %cmp21, label %if.then23, label %if.else45, !dbg !2767

if.then23:                                        ; preds = %if.else
  %33 = load double, double* %z, align 8, !dbg !2768
  %fneg24 = fneg double %33, !dbg !2770
  %34 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2771
  %columns25 = getelementptr inbounds %struct._Image, %struct._Image* %34, i32 0, i32 7, !dbg !2772
  %35 = load i64, i64* %columns25, align 8, !dbg !2772
  %conv26 = uitofp i64 %35 to double, !dbg !2773
  %add27 = fadd double %fneg24, %conv26, !dbg !2774
  %36 = load %struct._AffineMatrix*, %struct._AffineMatrix** %affine.addr, align 8, !dbg !2775
  %sx28 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %36, i32 0, i32 0, !dbg !2776
  %37 = load double, double* %sx28, align 8, !dbg !2776
  %div29 = fdiv double %add27, %37, !dbg !2777
  store double %div29, double* %intercept, align 8, !dbg !2778
  %38 = load double, double* %intercept, align 8, !dbg !2779
  store double %38, double* %x, align 8, !dbg !2780
  %39 = load double, double* %x, align 8, !dbg !2781
  %x130 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %agg.result, i32 0, i32 0, !dbg !2783
  %40 = load double, double* %x130, align 8, !dbg !2783
  %cmp31 = fcmp ogt double %39, %40, !dbg !2784
  br i1 %cmp31, label %if.then33, label %if.end35, !dbg !2785

if.then33:                                        ; preds = %if.then23
  %41 = load double, double* %x, align 8, !dbg !2786
  %x134 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %agg.result, i32 0, i32 0, !dbg !2787
  store double %41, double* %x134, align 8, !dbg !2788
  br label %if.end35, !dbg !2789

if.end35:                                         ; preds = %if.then33, %if.then23
  %42 = load double, double* %z, align 8, !dbg !2790
  %fneg36 = fneg double %42, !dbg !2791
  %43 = load %struct._AffineMatrix*, %struct._AffineMatrix** %affine.addr, align 8, !dbg !2792
  %sx37 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %43, i32 0, i32 0, !dbg !2793
  %44 = load double, double* %sx37, align 8, !dbg !2793
  %div38 = fdiv double %fneg36, %44, !dbg !2794
  store double %div38, double* %intercept, align 8, !dbg !2795
  %45 = load double, double* %intercept, align 8, !dbg !2796
  store double %45, double* %x, align 8, !dbg !2797
  %46 = load double, double* %x, align 8, !dbg !2798
  %x239 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %agg.result, i32 0, i32 2, !dbg !2800
  %47 = load double, double* %x239, align 8, !dbg !2800
  %cmp40 = fcmp olt double %46, %47, !dbg !2801
  br i1 %cmp40, label %if.then42, label %if.end44, !dbg !2802

if.then42:                                        ; preds = %if.end35
  %48 = load double, double* %x, align 8, !dbg !2803
  %x243 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %agg.result, i32 0, i32 2, !dbg !2804
  store double %48, double* %x243, align 8, !dbg !2805
  br label %if.end44, !dbg !2806

if.end44:                                         ; preds = %if.then42, %if.end35
  br label %if.end57, !dbg !2807

if.else45:                                        ; preds = %if.else
  %49 = load double, double* %z, align 8, !dbg !2808
  %cmp46 = fcmp olt double %49, 0.000000e+00, !dbg !2810
  br i1 %cmp46, label %if.then53, label %lor.lhs.false, !dbg !2811

lor.lhs.false:                                    ; preds = %if.else45
  %50 = load double, double* %z, align 8, !dbg !2812
  %add48 = fadd double %50, 5.000000e-01, !dbg !2813
  %51 = call double @llvm.floor.f64(double %add48), !dbg !2814
  %conv49 = fptoui double %51 to i64, !dbg !2815
  %52 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2816
  %columns50 = getelementptr inbounds %struct._Image, %struct._Image* %52, i32 0, i32 7, !dbg !2817
  %53 = load i64, i64* %columns50, align 8, !dbg !2817
  %cmp51 = icmp uge i64 %conv49, %53, !dbg !2818
  br i1 %cmp51, label %if.then53, label %if.end56, !dbg !2819

if.then53:                                        ; preds = %lor.lhs.false, %if.else45
  %54 = load %struct._SegmentInfo*, %struct._SegmentInfo** %edge.addr, align 8, !dbg !2820
  %x154 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %54, i32 0, i32 0, !dbg !2822
  %55 = load double, double* %x154, align 8, !dbg !2822
  %x255 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %agg.result, i32 0, i32 2, !dbg !2823
  store double %55, double* %x255, align 8, !dbg !2824
  br label %return, !dbg !2825

if.end56:                                         ; preds = %lor.lhs.false
  br label %if.end57

if.end57:                                         ; preds = %if.end56, %if.end44
  br label %if.end58

if.end58:                                         ; preds = %if.end57, %if.end19
  %56 = load %struct._AffineMatrix*, %struct._AffineMatrix** %affine.addr, align 8, !dbg !2826
  %sy = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %56, i32 0, i32 3, !dbg !2827
  %57 = load double, double* %sy, align 8, !dbg !2827
  %58 = load double, double* %y.addr, align 8, !dbg !2828
  %mul59 = fmul double %57, %58, !dbg !2829
  %59 = load %struct._AffineMatrix*, %struct._AffineMatrix** %affine.addr, align 8, !dbg !2830
  %ty = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %59, i32 0, i32 5, !dbg !2831
  %60 = load double, double* %ty, align 8, !dbg !2831
  %add60 = fadd double %mul59, %60, !dbg !2832
  store double %add60, double* %z, align 8, !dbg !2833
  %61 = load %struct._AffineMatrix*, %struct._AffineMatrix** %affine.addr, align 8, !dbg !2834
  %rx = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %61, i32 0, i32 1, !dbg !2836
  %62 = load double, double* %rx, align 8, !dbg !2836
  %cmp61 = fcmp oge double %62, 1.000000e-15, !dbg !2837
  br i1 %cmp61, label %if.then63, label %if.else84, !dbg !2838

if.then63:                                        ; preds = %if.end58
  %63 = load double, double* %z, align 8, !dbg !2839
  %fneg64 = fneg double %63, !dbg !2841
  %64 = load %struct._AffineMatrix*, %struct._AffineMatrix** %affine.addr, align 8, !dbg !2842
  %rx65 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %64, i32 0, i32 1, !dbg !2843
  %65 = load double, double* %rx65, align 8, !dbg !2843
  %div66 = fdiv double %fneg64, %65, !dbg !2844
  store double %div66, double* %intercept, align 8, !dbg !2845
  %66 = load double, double* %intercept, align 8, !dbg !2846
  store double %66, double* %x, align 8, !dbg !2847
  %67 = load double, double* %x, align 8, !dbg !2848
  %x167 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %agg.result, i32 0, i32 0, !dbg !2850
  %68 = load double, double* %x167, align 8, !dbg !2850
  %cmp68 = fcmp ogt double %67, %68, !dbg !2851
  br i1 %cmp68, label %if.then70, label %if.end72, !dbg !2852

if.then70:                                        ; preds = %if.then63
  %69 = load double, double* %x, align 8, !dbg !2853
  %x171 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %agg.result, i32 0, i32 0, !dbg !2854
  store double %69, double* %x171, align 8, !dbg !2855
  br label %if.end72, !dbg !2856

if.end72:                                         ; preds = %if.then70, %if.then63
  %70 = load double, double* %z, align 8, !dbg !2857
  %fneg73 = fneg double %70, !dbg !2858
  %71 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2859
  %rows = getelementptr inbounds %struct._Image, %struct._Image* %71, i32 0, i32 8, !dbg !2860
  %72 = load i64, i64* %rows, align 8, !dbg !2860
  %conv74 = uitofp i64 %72 to double, !dbg !2861
  %add75 = fadd double %fneg73, %conv74, !dbg !2862
  %73 = load %struct._AffineMatrix*, %struct._AffineMatrix** %affine.addr, align 8, !dbg !2863
  %rx76 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %73, i32 0, i32 1, !dbg !2864
  %74 = load double, double* %rx76, align 8, !dbg !2864
  %div77 = fdiv double %add75, %74, !dbg !2865
  store double %div77, double* %intercept, align 8, !dbg !2866
  %75 = load double, double* %intercept, align 8, !dbg !2867
  store double %75, double* %x, align 8, !dbg !2868
  %76 = load double, double* %x, align 8, !dbg !2869
  %x278 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %agg.result, i32 0, i32 2, !dbg !2871
  %77 = load double, double* %x278, align 8, !dbg !2871
  %cmp79 = fcmp olt double %76, %77, !dbg !2872
  br i1 %cmp79, label %if.then81, label %if.end83, !dbg !2873

if.then81:                                        ; preds = %if.end72
  %78 = load double, double* %x, align 8, !dbg !2874
  %x282 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %agg.result, i32 0, i32 2, !dbg !2875
  store double %78, double* %x282, align 8, !dbg !2876
  br label %if.end83, !dbg !2877

if.end83:                                         ; preds = %if.then81, %if.end72
  br label %if.end124, !dbg !2878

if.else84:                                        ; preds = %if.end58
  %79 = load %struct._AffineMatrix*, %struct._AffineMatrix** %affine.addr, align 8, !dbg !2879
  %rx85 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %79, i32 0, i32 1, !dbg !2881
  %80 = load double, double* %rx85, align 8, !dbg !2881
  %cmp86 = fcmp olt double %80, -1.000000e-15, !dbg !2882
  br i1 %cmp86, label %if.then88, label %if.else110, !dbg !2883

if.then88:                                        ; preds = %if.else84
  %81 = load double, double* %z, align 8, !dbg !2884
  %fneg89 = fneg double %81, !dbg !2886
  %82 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2887
  %rows90 = getelementptr inbounds %struct._Image, %struct._Image* %82, i32 0, i32 8, !dbg !2888
  %83 = load i64, i64* %rows90, align 8, !dbg !2888
  %conv91 = uitofp i64 %83 to double, !dbg !2889
  %add92 = fadd double %fneg89, %conv91, !dbg !2890
  %84 = load %struct._AffineMatrix*, %struct._AffineMatrix** %affine.addr, align 8, !dbg !2891
  %rx93 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %84, i32 0, i32 1, !dbg !2892
  %85 = load double, double* %rx93, align 8, !dbg !2892
  %div94 = fdiv double %add92, %85, !dbg !2893
  store double %div94, double* %intercept, align 8, !dbg !2894
  %86 = load double, double* %intercept, align 8, !dbg !2895
  store double %86, double* %x, align 8, !dbg !2896
  %87 = load double, double* %x, align 8, !dbg !2897
  %x195 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %agg.result, i32 0, i32 0, !dbg !2899
  %88 = load double, double* %x195, align 8, !dbg !2899
  %cmp96 = fcmp ogt double %87, %88, !dbg !2900
  br i1 %cmp96, label %if.then98, label %if.end100, !dbg !2901

if.then98:                                        ; preds = %if.then88
  %89 = load double, double* %x, align 8, !dbg !2902
  %x199 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %agg.result, i32 0, i32 0, !dbg !2903
  store double %89, double* %x199, align 8, !dbg !2904
  br label %if.end100, !dbg !2905

if.end100:                                        ; preds = %if.then98, %if.then88
  %90 = load double, double* %z, align 8, !dbg !2906
  %fneg101 = fneg double %90, !dbg !2907
  %91 = load %struct._AffineMatrix*, %struct._AffineMatrix** %affine.addr, align 8, !dbg !2908
  %rx102 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %91, i32 0, i32 1, !dbg !2909
  %92 = load double, double* %rx102, align 8, !dbg !2909
  %div103 = fdiv double %fneg101, %92, !dbg !2910
  store double %div103, double* %intercept, align 8, !dbg !2911
  %93 = load double, double* %intercept, align 8, !dbg !2912
  store double %93, double* %x, align 8, !dbg !2913
  %94 = load double, double* %x, align 8, !dbg !2914
  %x2104 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %agg.result, i32 0, i32 2, !dbg !2916
  %95 = load double, double* %x2104, align 8, !dbg !2916
  %cmp105 = fcmp olt double %94, %95, !dbg !2917
  br i1 %cmp105, label %if.then107, label %if.end109, !dbg !2918

if.then107:                                       ; preds = %if.end100
  %96 = load double, double* %x, align 8, !dbg !2919
  %x2108 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %agg.result, i32 0, i32 2, !dbg !2920
  store double %96, double* %x2108, align 8, !dbg !2921
  br label %if.end109, !dbg !2922

if.end109:                                        ; preds = %if.then107, %if.end100
  br label %if.end123, !dbg !2923

if.else110:                                       ; preds = %if.else84
  %97 = load double, double* %z, align 8, !dbg !2924
  %cmp111 = fcmp olt double %97, 0.000000e+00, !dbg !2926
  br i1 %cmp111, label %if.then119, label %lor.lhs.false113, !dbg !2927

lor.lhs.false113:                                 ; preds = %if.else110
  %98 = load double, double* %z, align 8, !dbg !2928
  %add114 = fadd double %98, 5.000000e-01, !dbg !2929
  %99 = call double @llvm.floor.f64(double %add114), !dbg !2930
  %conv115 = fptoui double %99 to i64, !dbg !2931
  %100 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2932
  %rows116 = getelementptr inbounds %struct._Image, %struct._Image* %100, i32 0, i32 8, !dbg !2933
  %101 = load i64, i64* %rows116, align 8, !dbg !2933
  %cmp117 = icmp uge i64 %conv115, %101, !dbg !2934
  br i1 %cmp117, label %if.then119, label %if.end122, !dbg !2935

if.then119:                                       ; preds = %lor.lhs.false113, %if.else110
  %102 = load %struct._SegmentInfo*, %struct._SegmentInfo** %edge.addr, align 8, !dbg !2936
  %x2120 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %102, i32 0, i32 2, !dbg !2938
  %103 = load double, double* %x2120, align 8, !dbg !2938
  %x2121 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %agg.result, i32 0, i32 2, !dbg !2939
  store double %103, double* %x2121, align 8, !dbg !2940
  br label %return, !dbg !2941

if.end122:                                        ; preds = %lor.lhs.false113
  br label %if.end123

if.end123:                                        ; preds = %if.end122, %if.end109
  br label %if.end124

if.end124:                                        ; preds = %if.end123, %if.end83
  br label %return, !dbg !2942

return:                                           ; preds = %if.end124, %if.then119, %if.then53
  ret void, !dbg !2943
}

declare dso_local %struct._PixelPacket* @GetCacheViewAuthenticPixels(%struct._CacheView*, i64, i64, i64, i64, %struct._ExceptionInfo*) #3

declare dso_local i16* @GetCacheViewAuthenticIndexQueue(%struct._CacheView*) #3

declare dso_local i32 @InterpolateMagickPixelPacket(%struct._Image*, %struct._CacheView*, i32, double, double, %struct._MagickPixelPacket*, %struct._ExceptionInfo*) #3

; Function Attrs: noinline nounwind uwtable
define internal void @SetMagickPixelPacket(%struct._Image* %image, %struct._PixelPacket* %color, i16* %index, %struct._MagickPixelPacket* %pixel) #0 !dbg !2944 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %color.addr = alloca %struct._PixelPacket*, align 8
  %index.addr = alloca i16*, align 8
  %pixel.addr = alloca %struct._MagickPixelPacket*, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !2951, metadata !DIExpression()), !dbg !2952
  store %struct._PixelPacket* %color, %struct._PixelPacket** %color.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %color.addr, metadata !2953, metadata !DIExpression()), !dbg !2954
  store i16* %index, i16** %index.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %index.addr, metadata !2955, metadata !DIExpression()), !dbg !2956
  store %struct._MagickPixelPacket* %pixel, %struct._MagickPixelPacket** %pixel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %pixel.addr, metadata !2957, metadata !DIExpression()), !dbg !2958
  %0 = load %struct._PixelPacket*, %struct._PixelPacket** %color.addr, align 8, !dbg !2959
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %0, i32 0, i32 2, !dbg !2959
  %1 = load i16, i16* %red, align 2, !dbg !2959
  %conv = uitofp i16 %1 to float, !dbg !2960
  %2 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !2961
  %red1 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %2, i32 0, i32 5, !dbg !2962
  store float %conv, float* %red1, align 8, !dbg !2963
  %3 = load %struct._PixelPacket*, %struct._PixelPacket** %color.addr, align 8, !dbg !2964
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %3, i32 0, i32 1, !dbg !2964
  %4 = load i16, i16* %green, align 2, !dbg !2964
  %conv2 = uitofp i16 %4 to float, !dbg !2965
  %5 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !2966
  %green3 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %5, i32 0, i32 6, !dbg !2967
  store float %conv2, float* %green3, align 4, !dbg !2968
  %6 = load %struct._PixelPacket*, %struct._PixelPacket** %color.addr, align 8, !dbg !2969
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %6, i32 0, i32 0, !dbg !2969
  %7 = load i16, i16* %blue, align 2, !dbg !2969
  %conv4 = uitofp i16 %7 to float, !dbg !2970
  %8 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !2971
  %blue5 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %8, i32 0, i32 7, !dbg !2972
  store float %conv4, float* %blue5, align 8, !dbg !2973
  %9 = load %struct._PixelPacket*, %struct._PixelPacket** %color.addr, align 8, !dbg !2974
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %9, i32 0, i32 3, !dbg !2974
  %10 = load i16, i16* %opacity, align 2, !dbg !2974
  %conv6 = uitofp i16 %10 to float, !dbg !2975
  %11 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !2976
  %opacity7 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %11, i32 0, i32 8, !dbg !2977
  store float %conv6, float* %opacity7, align 4, !dbg !2978
  %12 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2979
  %colorspace = getelementptr inbounds %struct._Image, %struct._Image* %12, i32 0, i32 1, !dbg !2981
  %13 = load i32, i32* %colorspace, align 4, !dbg !2981
  %cmp = icmp eq i32 %13, 12, !dbg !2982
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !2983

land.lhs.true:                                    ; preds = %entry
  %14 = load i16*, i16** %index.addr, align 8, !dbg !2984
  %cmp9 = icmp ne i16* %14, null, !dbg !2985
  br i1 %cmp9, label %if.then, label %if.end, !dbg !2986

if.then:                                          ; preds = %land.lhs.true
  %15 = load i16*, i16** %index.addr, align 8, !dbg !2987
  %cmp11 = icmp eq i16* %15, null, !dbg !2987
  br i1 %cmp11, label %cond.true, label %cond.false, !dbg !2987

cond.true:                                        ; preds = %if.then
  br label %cond.end, !dbg !2987

cond.false:                                       ; preds = %if.then
  %16 = load i16*, i16** %index.addr, align 8, !dbg !2987
  %17 = load i16, i16* %16, align 2, !dbg !2987
  %conv13 = zext i16 %17 to i32, !dbg !2987
  br label %cond.end, !dbg !2987

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %conv13, %cond.false ], !dbg !2987
  %conv14 = sitofp i32 %cond to float, !dbg !2988
  %18 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !2989
  %index15 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %18, i32 0, i32 9, !dbg !2990
  store float %conv14, float* %index15, align 8, !dbg !2991
  br label %if.end, !dbg !2989

if.end:                                           ; preds = %cond.end, %land.lhs.true, %entry
  ret void, !dbg !2992
}

; Function Attrs: noinline nounwind uwtable
define internal void @MagickPixelCompositeOver(%struct._MagickPixelPacket* %p, float %alpha, %struct._MagickPixelPacket* %q, float %beta, %struct._MagickPixelPacket* %composite) #0 !dbg !2993 {
entry:
  %p.addr = alloca %struct._MagickPixelPacket*, align 8
  %alpha.addr = alloca float, align 4
  %q.addr = alloca %struct._MagickPixelPacket*, align 8
  %beta.addr = alloca float, align 4
  %composite.addr = alloca %struct._MagickPixelPacket*, align 8
  %gamma = alloca double, align 8
  store %struct._MagickPixelPacket* %p, %struct._MagickPixelPacket** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %p.addr, metadata !3000, metadata !DIExpression()), !dbg !3001
  store float %alpha, float* %alpha.addr, align 4
  call void @llvm.dbg.declare(metadata float* %alpha.addr, metadata !3002, metadata !DIExpression()), !dbg !3003
  store %struct._MagickPixelPacket* %q, %struct._MagickPixelPacket** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %q.addr, metadata !3004, metadata !DIExpression()), !dbg !3005
  store float %beta, float* %beta.addr, align 4
  call void @llvm.dbg.declare(metadata float* %beta.addr, metadata !3006, metadata !DIExpression()), !dbg !3007
  store %struct._MagickPixelPacket* %composite, %struct._MagickPixelPacket** %composite.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %composite.addr, metadata !3008, metadata !DIExpression()), !dbg !3009
  call void @llvm.dbg.declare(metadata double* %gamma, metadata !3010, metadata !DIExpression()), !dbg !3011
  %0 = load float, float* %alpha.addr, align 4, !dbg !3012
  %cmp = fcmp oeq float %0, 0.000000e+00, !dbg !3014
  br i1 %cmp, label %if.then, label %if.end, !dbg !3015

if.then:                                          ; preds = %entry
  %1 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !3016
  %2 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !3018
  %3 = bitcast %struct._MagickPixelPacket* %1 to i8*, !dbg !3019
  %4 = bitcast %struct._MagickPixelPacket* %2 to i8*, !dbg !3019
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 56, i1 false), !dbg !3019
  br label %if.end37, !dbg !3020

if.end:                                           ; preds = %entry
  %5 = load float, float* %alpha.addr, align 4, !dbg !3021
  %conv = fpext float %5 to double, !dbg !3021
  %mul = fmul double 0x3DF0002000300040, %conv, !dbg !3022
  %6 = load float, float* %beta.addr, align 4, !dbg !3023
  %conv1 = fpext float %6 to double, !dbg !3023
  %mul2 = fmul double %mul, %conv1, !dbg !3024
  %sub = fsub double 1.000000e+00, %mul2, !dbg !3025
  store double %sub, double* %gamma, align 8, !dbg !3026
  %7 = load double, double* %gamma, align 8, !dbg !3027
  %cmp3 = fcmp olt double %7, 0.000000e+00, !dbg !3029
  br i1 %cmp3, label %if.then5, label %if.end6, !dbg !3030

if.then5:                                         ; preds = %if.end
  store double 0.000000e+00, double* %gamma, align 8, !dbg !3031
  br label %if.end6, !dbg !3032

if.end6:                                          ; preds = %if.then5, %if.end
  %8 = load double, double* %gamma, align 8, !dbg !3033
  %sub7 = fsub double 1.000000e+00, %8, !dbg !3034
  %mul8 = fmul double 6.553500e+04, %sub7, !dbg !3035
  %conv9 = fptrunc double %mul8 to float, !dbg !3036
  %9 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !3037
  %opacity = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %9, i32 0, i32 8, !dbg !3038
  store float %conv9, float* %opacity, align 4, !dbg !3039
  %10 = load double, double* %gamma, align 8, !dbg !3040
  %call = call double @PerceptibleReciprocal(double %10), !dbg !3041
  store double %call, double* %gamma, align 8, !dbg !3042
  %11 = load double, double* %gamma, align 8, !dbg !3043
  %12 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !3044
  %red = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %12, i32 0, i32 5, !dbg !3045
  %13 = load float, float* %red, align 8, !dbg !3045
  %14 = load float, float* %alpha.addr, align 4, !dbg !3046
  %15 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !3047
  %red10 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %15, i32 0, i32 5, !dbg !3048
  %16 = load float, float* %red10, align 8, !dbg !3048
  %17 = load float, float* %beta.addr, align 4, !dbg !3049
  %call11 = call float @MagickOver_(float %13, float %14, float %16, float %17), !dbg !3050
  %conv12 = fpext float %call11 to double, !dbg !3050
  %mul13 = fmul double %11, %conv12, !dbg !3051
  %conv14 = fptrunc double %mul13 to float, !dbg !3043
  %18 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !3052
  %red15 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %18, i32 0, i32 5, !dbg !3053
  store float %conv14, float* %red15, align 8, !dbg !3054
  %19 = load double, double* %gamma, align 8, !dbg !3055
  %20 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !3056
  %green = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %20, i32 0, i32 6, !dbg !3057
  %21 = load float, float* %green, align 4, !dbg !3057
  %22 = load float, float* %alpha.addr, align 4, !dbg !3058
  %23 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !3059
  %green16 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %23, i32 0, i32 6, !dbg !3060
  %24 = load float, float* %green16, align 4, !dbg !3060
  %25 = load float, float* %beta.addr, align 4, !dbg !3061
  %call17 = call float @MagickOver_(float %21, float %22, float %24, float %25), !dbg !3062
  %conv18 = fpext float %call17 to double, !dbg !3062
  %mul19 = fmul double %19, %conv18, !dbg !3063
  %conv20 = fptrunc double %mul19 to float, !dbg !3055
  %26 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !3064
  %green21 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %26, i32 0, i32 6, !dbg !3065
  store float %conv20, float* %green21, align 4, !dbg !3066
  %27 = load double, double* %gamma, align 8, !dbg !3067
  %28 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !3068
  %blue = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %28, i32 0, i32 7, !dbg !3069
  %29 = load float, float* %blue, align 8, !dbg !3069
  %30 = load float, float* %alpha.addr, align 4, !dbg !3070
  %31 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !3071
  %blue22 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %31, i32 0, i32 7, !dbg !3072
  %32 = load float, float* %blue22, align 8, !dbg !3072
  %33 = load float, float* %beta.addr, align 4, !dbg !3073
  %call23 = call float @MagickOver_(float %29, float %30, float %32, float %33), !dbg !3074
  %conv24 = fpext float %call23 to double, !dbg !3074
  %mul25 = fmul double %27, %conv24, !dbg !3075
  %conv26 = fptrunc double %mul25 to float, !dbg !3067
  %34 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !3076
  %blue27 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %34, i32 0, i32 7, !dbg !3077
  store float %conv26, float* %blue27, align 8, !dbg !3078
  %35 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !3079
  %colorspace = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %35, i32 0, i32 1, !dbg !3081
  %36 = load i32, i32* %colorspace, align 4, !dbg !3081
  %cmp28 = icmp eq i32 %36, 12, !dbg !3082
  br i1 %cmp28, label %if.then30, label %if.end37, !dbg !3083

if.then30:                                        ; preds = %if.end6
  %37 = load double, double* %gamma, align 8, !dbg !3084
  %38 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !3085
  %index = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %38, i32 0, i32 9, !dbg !3086
  %39 = load float, float* %index, align 8, !dbg !3086
  %40 = load float, float* %alpha.addr, align 4, !dbg !3087
  %41 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !3088
  %index31 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %41, i32 0, i32 9, !dbg !3089
  %42 = load float, float* %index31, align 8, !dbg !3089
  %43 = load float, float* %beta.addr, align 4, !dbg !3090
  %call32 = call float @MagickOver_(float %39, float %40, float %42, float %43), !dbg !3091
  %conv33 = fpext float %call32 to double, !dbg !3091
  %mul34 = fmul double %37, %conv33, !dbg !3092
  %conv35 = fptrunc double %mul34 to float, !dbg !3084
  %44 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !3093
  %index36 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %44, i32 0, i32 9, !dbg !3094
  store float %conv35, float* %index36, align 8, !dbg !3095
  br label %if.end37, !dbg !3093

if.end37:                                         ; preds = %if.then, %if.then30, %if.end6
  ret void, !dbg !3096
}

; Function Attrs: noinline nounwind uwtable
define internal void @SetPixelPacket(%struct._Image* %image, %struct._MagickPixelPacket* %pixel, %struct._PixelPacket* %color, i16* %index) #0 !dbg !3097 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %pixel.addr = alloca %struct._MagickPixelPacket*, align 8
  %color.addr = alloca %struct._PixelPacket*, align 8
  %index.addr = alloca i16*, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !3100, metadata !DIExpression()), !dbg !3101
  store %struct._MagickPixelPacket* %pixel, %struct._MagickPixelPacket** %pixel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %pixel.addr, metadata !3102, metadata !DIExpression()), !dbg !3103
  store %struct._PixelPacket* %color, %struct._PixelPacket** %color.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %color.addr, metadata !3104, metadata !DIExpression()), !dbg !3105
  store i16* %index, i16** %index.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %index.addr, metadata !3106, metadata !DIExpression()), !dbg !3107
  %0 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !3108
  %red = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %0, i32 0, i32 5, !dbg !3108
  %1 = load float, float* %red, align 8, !dbg !3108
  %call = call zeroext i16 @ClampToQuantum(float %1), !dbg !3108
  %2 = load %struct._PixelPacket*, %struct._PixelPacket** %color.addr, align 8, !dbg !3108
  %red1 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %2, i32 0, i32 2, !dbg !3108
  store i16 %call, i16* %red1, align 2, !dbg !3108
  %3 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !3109
  %green = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %3, i32 0, i32 6, !dbg !3109
  %4 = load float, float* %green, align 4, !dbg !3109
  %call2 = call zeroext i16 @ClampToQuantum(float %4), !dbg !3109
  %5 = load %struct._PixelPacket*, %struct._PixelPacket** %color.addr, align 8, !dbg !3109
  %green3 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %5, i32 0, i32 1, !dbg !3109
  store i16 %call2, i16* %green3, align 2, !dbg !3109
  %6 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !3110
  %blue = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %6, i32 0, i32 7, !dbg !3110
  %7 = load float, float* %blue, align 8, !dbg !3110
  %call4 = call zeroext i16 @ClampToQuantum(float %7), !dbg !3110
  %8 = load %struct._PixelPacket*, %struct._PixelPacket** %color.addr, align 8, !dbg !3110
  %blue5 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %8, i32 0, i32 0, !dbg !3110
  store i16 %call4, i16* %blue5, align 2, !dbg !3110
  %9 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !3111
  %opacity = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %9, i32 0, i32 8, !dbg !3111
  %10 = load float, float* %opacity, align 4, !dbg !3111
  %call6 = call zeroext i16 @ClampToQuantum(float %10), !dbg !3111
  %11 = load %struct._PixelPacket*, %struct._PixelPacket** %color.addr, align 8, !dbg !3111
  %opacity7 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %11, i32 0, i32 3, !dbg !3111
  store i16 %call6, i16* %opacity7, align 2, !dbg !3111
  %12 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3112
  %colorspace = getelementptr inbounds %struct._Image, %struct._Image* %12, i32 0, i32 1, !dbg !3114
  %13 = load i32, i32* %colorspace, align 4, !dbg !3114
  %cmp = icmp eq i32 %13, 12, !dbg !3115
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3116

lor.lhs.false:                                    ; preds = %entry
  %14 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3117
  %storage_class = getelementptr inbounds %struct._Image, %struct._Image* %14, i32 0, i32 0, !dbg !3118
  %15 = load i32, i32* %storage_class, align 8, !dbg !3118
  %cmp8 = icmp eq i32 %15, 2, !dbg !3119
  br i1 %cmp8, label %if.then, label %if.end13, !dbg !3120

if.then:                                          ; preds = %lor.lhs.false, %entry
  %16 = load i16*, i16** %index.addr, align 8, !dbg !3121
  %cmp9 = icmp ne i16* %16, null, !dbg !3121
  br i1 %cmp9, label %if.then10, label %if.end, !dbg !3124

if.then10:                                        ; preds = %if.then
  %17 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !3121
  %index11 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %17, i32 0, i32 9, !dbg !3121
  %18 = load float, float* %index11, align 8, !dbg !3121
  %call12 = call zeroext i16 @ClampToQuantum(float %18), !dbg !3121
  %19 = load i16*, i16** %index.addr, align 8, !dbg !3121
  store i16 %call12, i16* %19, align 2, !dbg !3121
  br label %if.end, !dbg !3121

if.end:                                           ; preds = %if.then10, %if.then
  br label %if.end13, !dbg !3124

if.end13:                                         ; preds = %if.end, %lor.lhs.false
  ret void, !dbg !3125
}

declare dso_local i32 @SyncCacheViewAuthenticPixels(%struct._CacheView*, %struct._ExceptionInfo*) #3

declare dso_local %struct._CacheView* @DestroyCacheView(%struct._CacheView*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @DrawClipPath(%struct._Image* %image, %struct._DrawInfo* %draw_info, i8* %name) #0 !dbg !3126 {
entry:
  %retval = alloca i32, align 4
  %image.addr = alloca %struct._Image*, align 8
  %draw_info.addr = alloca %struct._DrawInfo*, align 8
  %name.addr = alloca i8*, align 8
  %clip_mask = alloca [4096 x i8], align 16
  %value = alloca i8*, align 8
  %clone_info = alloca %struct._DrawInfo*, align 8
  %status = alloca i32, align 4
  %clip_mask11 = alloca %struct._Image*, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !3129, metadata !DIExpression()), !dbg !3130
  store %struct._DrawInfo* %draw_info, %struct._DrawInfo** %draw_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawInfo** %draw_info.addr, metadata !3131, metadata !DIExpression()), !dbg !3132
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !3133, metadata !DIExpression()), !dbg !3134
  call void @llvm.dbg.declare(metadata [4096 x i8]* %clip_mask, metadata !3135, metadata !DIExpression()), !dbg !3136
  call void @llvm.dbg.declare(metadata i8** %value, metadata !3137, metadata !DIExpression()), !dbg !3138
  call void @llvm.dbg.declare(metadata %struct._DrawInfo** %clone_info, metadata !3139, metadata !DIExpression()), !dbg !3140
  call void @llvm.dbg.declare(metadata i32* %status, metadata !3141, metadata !DIExpression()), !dbg !3143
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3144
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !3146
  %1 = load i32, i32* %debug, align 8, !dbg !3146
  %cmp = icmp ne i32 %1, 0, !dbg !3147
  br i1 %cmp, label %if.then, label %if.end, !dbg !3148

if.then:                                          ; preds = %entry
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3149
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %2, i32 0, i32 53, !dbg !3150
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !3149
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1447, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i64 0, i64 0), i8* %arraydecay), !dbg !3151
  br label %if.end, !dbg !3152

if.end:                                           ; preds = %if.then, %entry
  %arraydecay1 = getelementptr inbounds [4096 x i8], [4096 x i8]* %clip_mask, i64 0, i64 0, !dbg !3153
  %3 = load i8*, i8** %name.addr, align 8, !dbg !3154
  %call2 = call i64 (i8*, i64, i8*, ...) @FormatLocaleString(i8* %arraydecay1, i64 4096, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i64 0, i64 0), i8* %3), !dbg !3155
  %4 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3156
  %arraydecay3 = getelementptr inbounds [4096 x i8], [4096 x i8]* %clip_mask, i64 0, i64 0, !dbg !3157
  %call4 = call i8* @GetImageArtifact(%struct._Image* %4, i8* %arraydecay3), !dbg !3158
  store i8* %call4, i8** %value, align 8, !dbg !3159
  %5 = load i8*, i8** %value, align 8, !dbg !3160
  %cmp5 = icmp eq i8* %5, null, !dbg !3162
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !3163

if.then6:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !3164
  br label %return, !dbg !3164

if.end7:                                          ; preds = %if.end
  %6 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3165
  %clip_mask8 = getelementptr inbounds %struct._Image, %struct._Image* %6, i32 0, i32 38, !dbg !3167
  %7 = load %struct._Image*, %struct._Image** %clip_mask8, align 8, !dbg !3167
  %cmp9 = icmp eq %struct._Image* %7, null, !dbg !3168
  br i1 %cmp9, label %if.then10, label %if.end18, !dbg !3169

if.then10:                                        ; preds = %if.end7
  call void @llvm.dbg.declare(metadata %struct._Image** %clip_mask11, metadata !3170, metadata !DIExpression()), !dbg !3172
  %8 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3173
  %9 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3174
  %columns = getelementptr inbounds %struct._Image, %struct._Image* %9, i32 0, i32 7, !dbg !3175
  %10 = load i64, i64* %columns, align 8, !dbg !3175
  %11 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3176
  %rows = getelementptr inbounds %struct._Image, %struct._Image* %11, i32 0, i32 8, !dbg !3177
  %12 = load i64, i64* %rows, align 8, !dbg !3177
  %13 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3178
  %exception = getelementptr inbounds %struct._Image, %struct._Image* %13, i32 0, i32 58, !dbg !3179
  %call12 = call %struct._Image* @CloneImage(%struct._Image* %8, i64 %10, i64 %12, i32 1, %struct._ExceptionInfo* %exception), !dbg !3180
  store %struct._Image* %call12, %struct._Image** %clip_mask11, align 8, !dbg !3181
  %14 = load %struct._Image*, %struct._Image** %clip_mask11, align 8, !dbg !3182
  %cmp13 = icmp eq %struct._Image* %14, null, !dbg !3184
  br i1 %cmp13, label %if.then14, label %if.end15, !dbg !3185

if.then14:                                        ; preds = %if.then10
  store i32 0, i32* %retval, align 4, !dbg !3186
  br label %return, !dbg !3186

if.end15:                                         ; preds = %if.then10
  %15 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3187
  %16 = load %struct._Image*, %struct._Image** %clip_mask11, align 8, !dbg !3188
  %call16 = call i32 @SetImageClipMask(%struct._Image* %15, %struct._Image* %16), !dbg !3189
  %17 = load %struct._Image*, %struct._Image** %clip_mask11, align 8, !dbg !3190
  %call17 = call %struct._Image* @DestroyImage(%struct._Image* %17), !dbg !3191
  store %struct._Image* %call17, %struct._Image** %clip_mask11, align 8, !dbg !3192
  br label %if.end18, !dbg !3193

if.end18:                                         ; preds = %if.end15, %if.end7
  %18 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3194
  %clip_mask19 = getelementptr inbounds %struct._Image, %struct._Image* %18, i32 0, i32 38, !dbg !3195
  %19 = load %struct._Image*, %struct._Image** %clip_mask19, align 8, !dbg !3195
  %background_color = getelementptr inbounds %struct._Image, %struct._Image* %19, i32 0, i32 12, !dbg !3196
  %20 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3197
  %exception20 = getelementptr inbounds %struct._Image, %struct._Image* %20, i32 0, i32 58, !dbg !3198
  %call21 = call i32 @QueryColorDatabase(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.7, i64 0, i64 0), %struct._PixelPacket* %background_color, %struct._ExceptionInfo* %exception20), !dbg !3199
  %21 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3200
  %clip_mask22 = getelementptr inbounds %struct._Image, %struct._Image* %21, i32 0, i32 38, !dbg !3201
  %22 = load %struct._Image*, %struct._Image** %clip_mask22, align 8, !dbg !3201
  %background_color23 = getelementptr inbounds %struct._Image, %struct._Image* %22, i32 0, i32 12, !dbg !3202
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %background_color23, i32 0, i32 3, !dbg !3203
  store i16 -1, i16* %opacity, align 2, !dbg !3204
  %23 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3205
  %clip_mask24 = getelementptr inbounds %struct._Image, %struct._Image* %23, i32 0, i32 38, !dbg !3206
  %24 = load %struct._Image*, %struct._Image** %clip_mask24, align 8, !dbg !3206
  %call25 = call i32 @SetImageBackgroundColor(%struct._Image* %24), !dbg !3207
  %25 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3208
  %debug26 = getelementptr inbounds %struct._Image, %struct._Image* %25, i32 0, i32 59, !dbg !3210
  %26 = load i32, i32* %debug26, align 8, !dbg !3210
  %cmp27 = icmp ne i32 %26, 0, !dbg !3211
  br i1 %cmp27, label %if.then28, label %if.end31, !dbg !3212

if.then28:                                        ; preds = %if.end18
  %27 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !3213
  %clip_mask29 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %27, i32 0, i32 37, !dbg !3214
  %28 = load i8*, i8** %clip_mask29, align 8, !dbg !3214
  %call30 = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 128, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1470, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.8, i64 0, i64 0), i8* %28), !dbg !3215
  br label %if.end31, !dbg !3216

if.end31:                                         ; preds = %if.then28, %if.end18
  %29 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !3217
  %call32 = call %struct._DrawInfo* @CloneDrawInfo(%struct._ImageInfo* null, %struct._DrawInfo* %29), !dbg !3218
  store %struct._DrawInfo* %call32, %struct._DrawInfo** %clone_info, align 8, !dbg !3219
  %30 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info, align 8, !dbg !3220
  %primitive = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %30, i32 0, i32 0, !dbg !3221
  %31 = load i8*, i8** %value, align 8, !dbg !3222
  %call33 = call i8* @CloneString(i8** %primitive, i8* %31), !dbg !3223
  %32 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info, align 8, !dbg !3224
  %fill = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %32, i32 0, i32 5, !dbg !3225
  %33 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3226
  %exception34 = getelementptr inbounds %struct._Image, %struct._Image* %33, i32 0, i32 58, !dbg !3227
  %call35 = call i32 @QueryColorDatabase(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.9, i64 0, i64 0), %struct._PixelPacket* %fill, %struct._ExceptionInfo* %exception34), !dbg !3228
  %34 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info, align 8, !dbg !3229
  %clip_mask36 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %34, i32 0, i32 37, !dbg !3230
  store i8* null, i8** %clip_mask36, align 8, !dbg !3231
  %35 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3232
  %clip_mask37 = getelementptr inbounds %struct._Image, %struct._Image* %35, i32 0, i32 38, !dbg !3233
  %36 = load %struct._Image*, %struct._Image** %clip_mask37, align 8, !dbg !3233
  %37 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info, align 8, !dbg !3234
  %call38 = call i32 @DrawImage(%struct._Image* %36, %struct._DrawInfo* %37), !dbg !3235
  store i32 %call38, i32* %status, align 4, !dbg !3236
  %38 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3237
  %clip_mask39 = getelementptr inbounds %struct._Image, %struct._Image* %38, i32 0, i32 38, !dbg !3238
  %39 = load %struct._Image*, %struct._Image** %clip_mask39, align 8, !dbg !3238
  %call40 = call i32 @NegateImage(%struct._Image* %39, i32 0), !dbg !3239
  %40 = load i32, i32* %status, align 4, !dbg !3240
  %and = and i32 %40, %call40, !dbg !3240
  store i32 %and, i32* %status, align 4, !dbg !3240
  %41 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info, align 8, !dbg !3241
  %call41 = call %struct._DrawInfo* @DestroyDrawInfo(%struct._DrawInfo* %41), !dbg !3242
  store %struct._DrawInfo* %call41, %struct._DrawInfo** %clone_info, align 8, !dbg !3243
  %42 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3244
  %debug42 = getelementptr inbounds %struct._Image, %struct._Image* %42, i32 0, i32 59, !dbg !3246
  %43 = load i32, i32* %debug42, align 8, !dbg !3246
  %cmp43 = icmp ne i32 %43, 0, !dbg !3247
  br i1 %cmp43, label %if.then44, label %if.end46, !dbg !3248

if.then44:                                        ; preds = %if.end31
  %call45 = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 128, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1480, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.10, i64 0, i64 0)), !dbg !3249
  br label %if.end46, !dbg !3250

if.end46:                                         ; preds = %if.then44, %if.end31
  %44 = load i32, i32* %status, align 4, !dbg !3251
  %cmp47 = icmp ne i32 %44, 0, !dbg !3252
  %45 = zext i1 %cmp47 to i64, !dbg !3251
  %cond = select i1 %cmp47, i32 1, i32 0, !dbg !3251
  store i32 %cond, i32* %retval, align 4, !dbg !3253
  br label %return, !dbg !3253

return:                                           ; preds = %if.end46, %if.then14, %if.then6
  %46 = load i32, i32* %retval, align 4, !dbg !3254
  ret i32 %46, !dbg !3254
}

declare dso_local i64 @FormatLocaleString(i8*, i64, i8*, ...) #3

declare dso_local i8* @GetImageArtifact(%struct._Image*, i8*) #3

declare dso_local i32 @SetImageClipMask(%struct._Image*, %struct._Image*) #3

declare dso_local i32 @QueryColorDatabase(i8*, %struct._PixelPacket*, %struct._ExceptionInfo*) #3

declare dso_local i32 @SetImageBackgroundColor(%struct._Image*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @DrawImage(%struct._Image* %image, %struct._DrawInfo* %draw_info) #0 !dbg !3255 {
entry:
  %retval = alloca i32, align 4
  %image.addr = alloca %struct._Image*, align 8
  %draw_info.addr = alloca %struct._DrawInfo*, align 8
  %affine = alloca %struct._AffineMatrix, align 8
  %current = alloca %struct._AffineMatrix, align 8
  %key = alloca [8192 x i8], align 16
  %keyword = alloca [4096 x i8], align 16
  %geometry = alloca [4096 x i8], align 16
  %name = alloca [4096 x i8], align 16
  %pattern = alloca [4096 x i8], align 16
  %primitive = alloca i8*, align 8
  %token = alloca i8*, align 8
  %q = alloca i8*, align 8
  %angle = alloca double, align 8
  %factor = alloca double, align 8
  %primitive_extent = alloca double, align 8
  %graphic_context = alloca %struct._DrawInfo**, align 8
  %proceed = alloca i32, align 4
  %status = alloca i32, align 4
  %point = alloca %struct._PointInfo, align 8
  %start_color = alloca %struct._PixelPacket, align 2
  %primitive_info = alloca %struct._PrimitiveInfo*, align 8
  %primitive_type = alloca i32, align 4
  %p = alloca i8*, align 8
  %i = alloca i64, align 8
  %x = alloca i64, align 8
  %bounds = alloca %struct._SegmentInfo, align 8
  %length = alloca i64, align 8
  %number_points = alloca i64, align 8
  %j = alloca i64, align 8
  %k = alloca i64, align 8
  %n = alloca i64, align 8
  %fill_rule = alloca i64, align 8
  %clip_units = alloca i64, align 8
  %decorate = alloca i64, align 8
  %direction = alloca i64, align 8
  %pattern_info = alloca %struct._ImageInfo*, align 8
  %fill_rule352 = alloca i64, align 8
  %stretch = alloca i64, align 8
  %style = alloca i64, align 8
  %gravity = alloca i64, align 8
  %compose = alloca i64, align 8
  %name688 = alloca [4096 x i8], align 16
  %key717 = alloca [8192 x i8], align 16
  %name718 = alloca [4096 x i8], align 16
  %type = alloca [4096 x i8], align 16
  %segment = alloca %struct._SegmentInfo, align 8
  %bounds873 = alloca %struct._RectangleInfo, align 8
  %stop_color = alloca %struct._PixelPacket, align 2
  %pattern_info1080 = alloca %struct._ImageInfo*, align 8
  %p1124 = alloca i8*, align 8
  %linecap = alloca i64, align 8
  %linejoin = alloca i64, align 8
  %align = alloca i64, align 8
  %align1296 = alloca i64, align 8
  %s = alloca i8*, align 8
  %t = alloca i8*, align 8
  %value = alloca double, align 8
  %alpha = alloca double, align 8
  %beta = alloca double, align 8
  %radius = alloca double, align 8
  %method1827 = alloca i64, align 8
  %message = alloca i8*, align 8
  %exception1995 = alloca %struct._ExceptionInfo, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !3258, metadata !DIExpression()), !dbg !3259
  store %struct._DrawInfo* %draw_info, %struct._DrawInfo** %draw_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawInfo** %draw_info.addr, metadata !3260, metadata !DIExpression()), !dbg !3261
  call void @llvm.dbg.declare(metadata %struct._AffineMatrix* %affine, metadata !3262, metadata !DIExpression()), !dbg !3263
  call void @llvm.dbg.declare(metadata %struct._AffineMatrix* %current, metadata !3264, metadata !DIExpression()), !dbg !3265
  call void @llvm.dbg.declare(metadata [8192 x i8]* %key, metadata !3266, metadata !DIExpression()), !dbg !3270
  call void @llvm.dbg.declare(metadata [4096 x i8]* %keyword, metadata !3271, metadata !DIExpression()), !dbg !3272
  call void @llvm.dbg.declare(metadata [4096 x i8]* %geometry, metadata !3273, metadata !DIExpression()), !dbg !3274
  call void @llvm.dbg.declare(metadata [4096 x i8]* %name, metadata !3275, metadata !DIExpression()), !dbg !3276
  call void @llvm.dbg.declare(metadata [4096 x i8]* %pattern, metadata !3277, metadata !DIExpression()), !dbg !3278
  call void @llvm.dbg.declare(metadata i8** %primitive, metadata !3279, metadata !DIExpression()), !dbg !3280
  call void @llvm.dbg.declare(metadata i8** %token, metadata !3281, metadata !DIExpression()), !dbg !3282
  call void @llvm.dbg.declare(metadata i8** %q, metadata !3283, metadata !DIExpression()), !dbg !3284
  call void @llvm.dbg.declare(metadata double* %angle, metadata !3285, metadata !DIExpression()), !dbg !3286
  call void @llvm.dbg.declare(metadata double* %factor, metadata !3287, metadata !DIExpression()), !dbg !3288
  call void @llvm.dbg.declare(metadata double* %primitive_extent, metadata !3289, metadata !DIExpression()), !dbg !3290
  call void @llvm.dbg.declare(metadata %struct._DrawInfo*** %graphic_context, metadata !3291, metadata !DIExpression()), !dbg !3292
  call void @llvm.dbg.declare(metadata i32* %proceed, metadata !3293, metadata !DIExpression()), !dbg !3294
  call void @llvm.dbg.declare(metadata i32* %status, metadata !3295, metadata !DIExpression()), !dbg !3296
  call void @llvm.dbg.declare(metadata %struct._PointInfo* %point, metadata !3297, metadata !DIExpression()), !dbg !3298
  call void @llvm.dbg.declare(metadata %struct._PixelPacket* %start_color, metadata !3299, metadata !DIExpression()), !dbg !3300
  call void @llvm.dbg.declare(metadata %struct._PrimitiveInfo** %primitive_info, metadata !3301, metadata !DIExpression()), !dbg !3302
  call void @llvm.dbg.declare(metadata i32* %primitive_type, metadata !3303, metadata !DIExpression()), !dbg !3304
  call void @llvm.dbg.declare(metadata i8** %p, metadata !3305, metadata !DIExpression()), !dbg !3306
  call void @llvm.dbg.declare(metadata i64* %i, metadata !3307, metadata !DIExpression()), !dbg !3308
  call void @llvm.dbg.declare(metadata i64* %x, metadata !3309, metadata !DIExpression()), !dbg !3310
  call void @llvm.dbg.declare(metadata %struct._SegmentInfo* %bounds, metadata !3311, metadata !DIExpression()), !dbg !3312
  call void @llvm.dbg.declare(metadata i64* %length, metadata !3313, metadata !DIExpression()), !dbg !3314
  call void @llvm.dbg.declare(metadata i64* %number_points, metadata !3315, metadata !DIExpression()), !dbg !3316
  call void @llvm.dbg.declare(metadata i64* %j, metadata !3317, metadata !DIExpression()), !dbg !3318
  call void @llvm.dbg.declare(metadata i64* %k, metadata !3319, metadata !DIExpression()), !dbg !3320
  call void @llvm.dbg.declare(metadata i64* %n, metadata !3321, metadata !DIExpression()), !dbg !3322
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3323
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !3325
  %1 = load i32, i32* %debug, align 8, !dbg !3325
  %cmp = icmp ne i32 %1, 0, !dbg !3326
  br i1 %cmp, label %if.then, label %if.end, !dbg !3327

if.then:                                          ; preds = %entry
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3328
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %2, i32 0, i32 53, !dbg !3329
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !3328
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1775, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i64 0, i64 0), i8* %arraydecay), !dbg !3330
  br label %if.end, !dbg !3331

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3332
  %debug1 = getelementptr inbounds %struct._Image, %struct._Image* %3, i32 0, i32 59, !dbg !3334
  %4 = load i32, i32* %debug1, align 8, !dbg !3334
  %cmp2 = icmp ne i32 %4, 0, !dbg !3335
  br i1 %cmp2, label %if.then3, label %if.end5, !dbg !3336

if.then3:                                         ; preds = %if.end
  %call4 = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1779, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i64 0, i64 0)), !dbg !3337
  br label %if.end5, !dbg !3338

if.end5:                                          ; preds = %if.then3, %if.end
  %5 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !3339
  %primitive6 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %5, i32 0, i32 0, !dbg !3341
  %6 = load i8*, i8** %primitive6, align 8, !dbg !3341
  %cmp7 = icmp eq i8* %6, null, !dbg !3342
  br i1 %cmp7, label %if.then11, label %lor.lhs.false, !dbg !3343

lor.lhs.false:                                    ; preds = %if.end5
  %7 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !3344
  %primitive8 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %7, i32 0, i32 0, !dbg !3345
  %8 = load i8*, i8** %primitive8, align 8, !dbg !3345
  %9 = load i8, i8* %8, align 1, !dbg !3346
  %conv = sext i8 %9 to i32, !dbg !3346
  %cmp9 = icmp eq i32 %conv, 0, !dbg !3347
  br i1 %cmp9, label %if.then11, label %if.end12, !dbg !3348

if.then11:                                        ; preds = %lor.lhs.false, %if.end5
  store i32 0, i32* %retval, align 4, !dbg !3349
  br label %return, !dbg !3349

if.end12:                                         ; preds = %lor.lhs.false
  %10 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3350
  %debug13 = getelementptr inbounds %struct._Image, %struct._Image* %10, i32 0, i32 59, !dbg !3352
  %11 = load i32, i32* %debug13, align 8, !dbg !3352
  %cmp14 = icmp ne i32 %11, 0, !dbg !3353
  br i1 %cmp14, label %if.then16, label %if.end18, !dbg !3354

if.then16:                                        ; preds = %if.end12
  %call17 = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 128, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1784, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i64 0, i64 0)), !dbg !3355
  br label %if.end18, !dbg !3356

if.end18:                                         ; preds = %if.then16, %if.end12
  %12 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !3357
  %primitive19 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %12, i32 0, i32 0, !dbg !3359
  %13 = load i8*, i8** %primitive19, align 8, !dbg !3359
  %14 = load i8, i8* %13, align 1, !dbg !3360
  %conv20 = sext i8 %14 to i32, !dbg !3360
  %cmp21 = icmp ne i32 %conv20, 64, !dbg !3361
  br i1 %cmp21, label %if.then23, label %if.else, !dbg !3362

if.then23:                                        ; preds = %if.end18
  %15 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !3363
  %primitive24 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %15, i32 0, i32 0, !dbg !3364
  %16 = load i8*, i8** %primitive24, align 8, !dbg !3364
  %call25 = call i8* @AcquireString(i8* %16), !dbg !3365
  store i8* %call25, i8** %primitive, align 8, !dbg !3366
  br label %if.end28, !dbg !3367

if.else:                                          ; preds = %if.end18
  %17 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !3368
  %primitive26 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %17, i32 0, i32 0, !dbg !3369
  %18 = load i8*, i8** %primitive26, align 8, !dbg !3369
  %add.ptr = getelementptr inbounds i8, i8* %18, i64 1, !dbg !3370
  %19 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3371
  %exception = getelementptr inbounds %struct._Image, %struct._Image* %19, i32 0, i32 58, !dbg !3372
  %call27 = call i8* @FileToString(i8* %add.ptr, i64 -1, %struct._ExceptionInfo* %exception), !dbg !3373
  store i8* %call27, i8** %primitive, align 8, !dbg !3374
  br label %if.end28

if.end28:                                         ; preds = %if.else, %if.then23
  %20 = load i8*, i8** %primitive, align 8, !dbg !3375
  %cmp29 = icmp eq i8* %20, null, !dbg !3377
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !3378

if.then31:                                        ; preds = %if.end28
  store i32 0, i32* %retval, align 4, !dbg !3379
  br label %return, !dbg !3379

if.end32:                                         ; preds = %if.end28
  %21 = load i8*, i8** %primitive, align 8, !dbg !3380
  %call33 = call i64 @strlen(i8* %21) #15, !dbg !3381
  %conv34 = uitofp i64 %call33 to double, !dbg !3382
  store double %conv34, double* %primitive_extent, align 8, !dbg !3383
  %22 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3384
  %23 = load i8*, i8** %primitive, align 8, !dbg !3385
  %call35 = call i32 @SetImageArtifact(%struct._Image* %22, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12, i64 0, i64 0), i8* %23), !dbg !3386
  store i64 0, i64* %n, align 8, !dbg !3387
  %call36 = call i8* @AcquireMagickMemory(i64 8) #11, !dbg !3388
  %24 = bitcast i8* %call36 to %struct._DrawInfo**, !dbg !3389
  store %struct._DrawInfo** %24, %struct._DrawInfo*** %graphic_context, align 8, !dbg !3390
  %25 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !3391
  %cmp37 = icmp eq %struct._DrawInfo** %25, null, !dbg !3393
  br i1 %cmp37, label %if.then39, label %if.end49, !dbg !3394

if.then39:                                        ; preds = %if.end32
  %26 = load i8*, i8** %primitive, align 8, !dbg !3395
  %call40 = call i8* @DestroyString(i8* %26), !dbg !3397
  store i8* %call40, i8** %primitive, align 8, !dbg !3398
  %27 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3399
  %cmp41 = icmp ne %struct._Image* %27, null, !dbg !3399
  br i1 %cmp41, label %if.then43, label %if.end48, !dbg !3402

if.then43:                                        ; preds = %if.then39
  %28 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3399
  %exception44 = getelementptr inbounds %struct._Image, %struct._Image* %28, i32 0, i32 58, !dbg !3399
  %29 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3399
  %filename45 = getelementptr inbounds %struct._Image, %struct._Image* %29, i32 0, i32 53, !dbg !3399
  %arraydecay46 = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename45, i64 0, i64 0, !dbg !3399
  %call47 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %exception44, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1803, i32 400, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* %arraydecay46), !dbg !3399
  br label %if.end48, !dbg !3399

if.end48:                                         ; preds = %if.then43, %if.then39
  store i32 0, i32* %retval, align 4, !dbg !3402
  br label %return, !dbg !3402

if.end49:                                         ; preds = %if.end32
  store i64 6553, i64* %number_points, align 8, !dbg !3403
  %30 = load i64, i64* %number_points, align 8, !dbg !3404
  %call50 = call i8* @AcquireQuantumMemory(i64 %30, i64 40) #14, !dbg !3405
  %31 = bitcast i8* %call50 to %struct._PrimitiveInfo*, !dbg !3406
  store %struct._PrimitiveInfo* %31, %struct._PrimitiveInfo** %primitive_info, align 8, !dbg !3407
  %32 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info, align 8, !dbg !3408
  %cmp51 = icmp eq %struct._PrimitiveInfo* %32, null, !dbg !3410
  br i1 %cmp51, label %if.then53, label %if.end68, !dbg !3411

if.then53:                                        ; preds = %if.end49
  %33 = load i8*, i8** %primitive, align 8, !dbg !3412
  %call54 = call i8* @DestroyString(i8* %33), !dbg !3414
  store i8* %call54, i8** %primitive, align 8, !dbg !3415
  br label %for.cond, !dbg !3416

for.cond:                                         ; preds = %for.inc, %if.then53
  %34 = load i64, i64* %n, align 8, !dbg !3417
  %cmp55 = icmp sge i64 %34, 0, !dbg !3420
  br i1 %cmp55, label %for.body, label %for.end, !dbg !3421

for.body:                                         ; preds = %for.cond
  %35 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !3422
  %36 = load i64, i64* %n, align 8, !dbg !3423
  %arrayidx = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %35, i64 %36, !dbg !3422
  %37 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx, align 8, !dbg !3422
  %call57 = call %struct._DrawInfo* @DestroyDrawInfo(%struct._DrawInfo* %37), !dbg !3424
  %38 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !3425
  %39 = load i64, i64* %n, align 8, !dbg !3426
  %arrayidx58 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %38, i64 %39, !dbg !3425
  store %struct._DrawInfo* %call57, %struct._DrawInfo** %arrayidx58, align 8, !dbg !3427
  br label %for.inc, !dbg !3425

for.inc:                                          ; preds = %for.body
  %40 = load i64, i64* %n, align 8, !dbg !3428
  %dec = add nsw i64 %40, -1, !dbg !3428
  store i64 %dec, i64* %n, align 8, !dbg !3428
  br label %for.cond, !dbg !3429, !llvm.loop !3430

for.end:                                          ; preds = %for.cond
  %41 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !3432
  %42 = bitcast %struct._DrawInfo** %41 to i8*, !dbg !3432
  %call59 = call i8* @RelinquishMagickMemory(i8* %42), !dbg !3433
  %43 = bitcast i8* %call59 to %struct._DrawInfo**, !dbg !3434
  store %struct._DrawInfo** %43, %struct._DrawInfo*** %graphic_context, align 8, !dbg !3435
  %44 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3436
  %cmp60 = icmp ne %struct._Image* %44, null, !dbg !3436
  br i1 %cmp60, label %if.then62, label %if.end67, !dbg !3439

if.then62:                                        ; preds = %for.end
  %45 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3436
  %exception63 = getelementptr inbounds %struct._Image, %struct._Image* %45, i32 0, i32 58, !dbg !3436
  %46 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3436
  %filename64 = getelementptr inbounds %struct._Image, %struct._Image* %46, i32 0, i32 53, !dbg !3436
  %arraydecay65 = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename64, i64 0, i64 0, !dbg !3436
  %call66 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %exception63, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1815, i32 400, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* %arraydecay65), !dbg !3436
  br label %if.end67, !dbg !3436

if.end67:                                         ; preds = %if.then62, %for.end
  store i32 0, i32* %retval, align 4, !dbg !3439
  br label %return, !dbg !3439

if.end68:                                         ; preds = %if.end49
  %47 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !3440
  %call69 = call %struct._DrawInfo* @CloneDrawInfo(%struct._ImageInfo* null, %struct._DrawInfo* %47), !dbg !3441
  %48 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !3442
  %49 = load i64, i64* %n, align 8, !dbg !3443
  %arrayidx70 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %48, i64 %49, !dbg !3442
  store %struct._DrawInfo* %call69, %struct._DrawInfo** %arrayidx70, align 8, !dbg !3444
  %50 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !3445
  %51 = load i64, i64* %n, align 8, !dbg !3446
  %arrayidx71 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %50, i64 %51, !dbg !3445
  %52 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx71, align 8, !dbg !3445
  %viewbox = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %52, i32 0, i32 2, !dbg !3447
  %53 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3448
  %page = getelementptr inbounds %struct._Image, %struct._Image* %53, i32 0, i32 26, !dbg !3449
  %54 = bitcast %struct._RectangleInfo* %viewbox to i8*, !dbg !3449
  %55 = bitcast %struct._RectangleInfo* %page to i8*, !dbg !3449
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %54, i8* align 8 %55, i64 32, i1 false), !dbg !3449
  %56 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3450
  %page72 = getelementptr inbounds %struct._Image, %struct._Image* %56, i32 0, i32 26, !dbg !3452
  %width = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %page72, i32 0, i32 0, !dbg !3453
  %57 = load i64, i64* %width, align 8, !dbg !3453
  %cmp73 = icmp eq i64 %57, 0, !dbg !3454
  br i1 %cmp73, label %if.then79, label %lor.lhs.false75, !dbg !3455

lor.lhs.false75:                                  ; preds = %if.end68
  %58 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3456
  %page76 = getelementptr inbounds %struct._Image, %struct._Image* %58, i32 0, i32 26, !dbg !3457
  %height = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %page76, i32 0, i32 1, !dbg !3458
  %59 = load i64, i64* %height, align 8, !dbg !3458
  %cmp77 = icmp eq i64 %59, 0, !dbg !3459
  br i1 %cmp77, label %if.then79, label %if.end86, !dbg !3460

if.then79:                                        ; preds = %lor.lhs.false75, %if.end68
  %60 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3461
  %columns = getelementptr inbounds %struct._Image, %struct._Image* %60, i32 0, i32 7, !dbg !3463
  %61 = load i64, i64* %columns, align 8, !dbg !3463
  %62 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !3464
  %63 = load i64, i64* %n, align 8, !dbg !3465
  %arrayidx80 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %62, i64 %63, !dbg !3464
  %64 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx80, align 8, !dbg !3464
  %viewbox81 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %64, i32 0, i32 2, !dbg !3466
  %width82 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %viewbox81, i32 0, i32 0, !dbg !3467
  store i64 %61, i64* %width82, align 8, !dbg !3468
  %65 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3469
  %rows = getelementptr inbounds %struct._Image, %struct._Image* %65, i32 0, i32 8, !dbg !3470
  %66 = load i64, i64* %rows, align 8, !dbg !3470
  %67 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !3471
  %68 = load i64, i64* %n, align 8, !dbg !3472
  %arrayidx83 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %67, i64 %68, !dbg !3471
  %69 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx83, align 8, !dbg !3471
  %viewbox84 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %69, i32 0, i32 2, !dbg !3473
  %height85 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %viewbox84, i32 0, i32 1, !dbg !3474
  store i64 %66, i64* %height85, align 8, !dbg !3475
  br label %if.end86, !dbg !3476

if.end86:                                         ; preds = %if.then79, %lor.lhs.false75
  %70 = load i8*, i8** %primitive, align 8, !dbg !3477
  %call87 = call i8* @AcquireString(i8* %70), !dbg !3478
  store i8* %call87, i8** %token, align 8, !dbg !3479
  %71 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3480
  %exception88 = getelementptr inbounds %struct._Image, %struct._Image* %71, i32 0, i32 58, !dbg !3481
  %call89 = call i32 @QueryColorDatabase(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.13, i64 0, i64 0), %struct._PixelPacket* %start_color, %struct._ExceptionInfo* %exception88), !dbg !3482
  %72 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3483
  %call90 = call i32 @SetImageStorageClass(%struct._Image* %72, i32 1), !dbg !3485
  %cmp91 = icmp eq i32 %call90, 0, !dbg !3486
  br i1 %cmp91, label %if.then93, label %if.end94, !dbg !3487

if.then93:                                        ; preds = %if.end86
  store i32 0, i32* %retval, align 4, !dbg !3488
  br label %return, !dbg !3488

if.end94:                                         ; preds = %if.end86
  store i32 1, i32* %status, align 4, !dbg !3489
  %73 = load i8*, i8** %primitive, align 8, !dbg !3490
  store i8* %73, i8** %q, align 8, !dbg !3492
  br label %for.cond95, !dbg !3493

for.cond95:                                       ; preds = %if.end2055, %if.then1890, %if.end1492, %while.end, %if.end94
  %74 = load i8*, i8** %q, align 8, !dbg !3494
  %75 = load i8, i8* %74, align 1, !dbg !3496
  %conv96 = sext i8 %75 to i32, !dbg !3496
  %cmp97 = icmp ne i32 %conv96, 0, !dbg !3497
  br i1 %cmp97, label %for.body99, label %for.end2056, !dbg !3498

for.body99:                                       ; preds = %for.cond95
  %76 = load i8*, i8** %q, align 8, !dbg !3499
  %arraydecay100 = getelementptr inbounds [4096 x i8], [4096 x i8]* %keyword, i64 0, i64 0, !dbg !3501
  call void @GetMagickToken(i8* %76, i8** %q, i8* %arraydecay100), !dbg !3502
  %arraydecay101 = getelementptr inbounds [4096 x i8], [4096 x i8]* %keyword, i64 0, i64 0, !dbg !3503
  %77 = load i8, i8* %arraydecay101, align 16, !dbg !3503
  %conv102 = sext i8 %77 to i32, !dbg !3503
  %cmp103 = icmp eq i32 %conv102, 0, !dbg !3505
  br i1 %cmp103, label %if.then105, label %if.end106, !dbg !3506

if.then105:                                       ; preds = %for.body99
  br label %for.end2056, !dbg !3507

if.end106:                                        ; preds = %for.body99
  %arraydecay107 = getelementptr inbounds [4096 x i8], [4096 x i8]* %keyword, i64 0, i64 0, !dbg !3508
  %78 = load i8, i8* %arraydecay107, align 16, !dbg !3508
  %conv108 = sext i8 %78 to i32, !dbg !3508
  %cmp109 = icmp eq i32 %conv108, 35, !dbg !3510
  br i1 %cmp109, label %if.then111, label %if.end118, !dbg !3511

if.then111:                                       ; preds = %if.end106
  br label %while.cond, !dbg !3512

while.cond:                                       ; preds = %while.body, %if.then111
  %79 = load i8*, i8** %q, align 8, !dbg !3514
  %80 = load i8, i8* %79, align 1, !dbg !3515
  %conv112 = sext i8 %80 to i32, !dbg !3515
  %cmp113 = icmp ne i32 %conv112, 10, !dbg !3516
  br i1 %cmp113, label %land.rhs, label %land.end, !dbg !3517

land.rhs:                                         ; preds = %while.cond
  %81 = load i8*, i8** %q, align 8, !dbg !3518
  %82 = load i8, i8* %81, align 1, !dbg !3519
  %conv115 = sext i8 %82 to i32, !dbg !3519
  %cmp116 = icmp ne i32 %conv115, 0, !dbg !3520
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %83 = phi i1 [ false, %while.cond ], [ %cmp116, %land.rhs ], !dbg !3521
  br i1 %83, label %while.body, label %while.end, !dbg !3512

while.body:                                       ; preds = %land.end
  %84 = load i8*, i8** %q, align 8, !dbg !3522
  %incdec.ptr = getelementptr inbounds i8, i8* %84, i32 1, !dbg !3522
  store i8* %incdec.ptr, i8** %q, align 8, !dbg !3522
  br label %while.cond, !dbg !3512, !llvm.loop !3523

while.end:                                        ; preds = %land.end
  br label %for.cond95, !dbg !3524, !llvm.loop !3525

if.end118:                                        ; preds = %if.end106
  %85 = load i8*, i8** %q, align 8, !dbg !3527
  %arraydecay119 = getelementptr inbounds [4096 x i8], [4096 x i8]* %keyword, i64 0, i64 0, !dbg !3528
  %call120 = call i64 @strlen(i8* %arraydecay119) #15, !dbg !3529
  %idx.neg = sub i64 0, %call120, !dbg !3530
  %add.ptr121 = getelementptr inbounds i8, i8* %85, i64 %idx.neg, !dbg !3530
  %add.ptr122 = getelementptr inbounds i8, i8* %add.ptr121, i64 -1, !dbg !3531
  store i8* %add.ptr122, i8** %p, align 8, !dbg !3532
  store i32 0, i32* %primitive_type, align 4, !dbg !3533
  %86 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !3534
  %87 = load i64, i64* %n, align 8, !dbg !3535
  %arrayidx123 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %86, i64 %87, !dbg !3534
  %88 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx123, align 8, !dbg !3534
  %affine124 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %88, i32 0, i32 3, !dbg !3536
  %89 = bitcast %struct._AffineMatrix* %current to i8*, !dbg !3536
  %90 = bitcast %struct._AffineMatrix* %affine124 to i8*, !dbg !3536
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %89, i8* align 8 %90, i64 48, i1 false), !dbg !3536
  call void @GetAffineMatrix(%struct._AffineMatrix* %affine), !dbg !3537
  %arraydecay125 = getelementptr inbounds [4096 x i8], [4096 x i8]* %keyword, i64 0, i64 0, !dbg !3538
  %91 = load i8, i8* %arraydecay125, align 16, !dbg !3538
  %conv126 = sext i8 %91 to i32, !dbg !3538
  switch i32 %conv126, label %sw.default [
    i32 59, label %sw.bb
    i32 97, label %sw.bb127
    i32 65, label %sw.bb127
    i32 98, label %sw.bb171
    i32 66, label %sw.bb171
    i32 99, label %sw.bb187
    i32 67, label %sw.bb187
    i32 100, label %sw.bb252
    i32 68, label %sw.bb252
    i32 101, label %sw.bb282
    i32 69, label %sw.bb282
    i32 102, label %sw.bb297
    i32 70, label %sw.bb297
    i32 103, label %sw.bb480
    i32 71, label %sw.bb480
    i32 105, label %sw.bb501
    i32 73, label %sw.bb501
    i32 107, label %sw.bb532
    i32 75, label %sw.bb532
    i32 108, label %sw.bb541
    i32 76, label %sw.bb541
    i32 109, label %sw.bb548
    i32 77, label %sw.bb548
    i32 111, label %sw.bb555
    i32 79, label %sw.bb555
    i32 112, label %sw.bb596
    i32 80, label %sw.bb596
    i32 114, label %sw.bb975
    i32 82, label %sw.bb975
    i32 115, label %sw.bb1011
    i32 83, label %sw.bb1011
    i32 116, label %sw.bb1270
    i32 84, label %sw.bb1270
    i32 118, label %sw.bb1341
    i32 86, label %sw.bb1341
  ], !dbg !3539

sw.bb:                                            ; preds = %if.end118
  br label %sw.epilog, !dbg !3540

sw.bb127:                                         ; preds = %if.end118, %if.end118
  %arraydecay128 = getelementptr inbounds [4096 x i8], [4096 x i8]* %keyword, i64 0, i64 0, !dbg !3542
  %call129 = call i32 @LocaleCompare(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14, i64 0, i64 0), i8* %arraydecay128), !dbg !3545
  %cmp130 = icmp eq i32 %call129, 0, !dbg !3546
  br i1 %cmp130, label %if.then132, label %if.end164, !dbg !3547

if.then132:                                       ; preds = %sw.bb127
  %92 = load i8*, i8** %q, align 8, !dbg !3548
  %93 = load i8*, i8** %token, align 8, !dbg !3550
  call void @GetMagickToken(i8* %92, i8** %q, i8* %93), !dbg !3551
  %94 = load i8*, i8** %token, align 8, !dbg !3552
  %call133 = call double @StringToDouble(i8* %94, i8** null), !dbg !3553
  %sx = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %affine, i32 0, i32 0, !dbg !3554
  store double %call133, double* %sx, align 8, !dbg !3555
  %95 = load i8*, i8** %q, align 8, !dbg !3556
  %96 = load i8*, i8** %token, align 8, !dbg !3557
  call void @GetMagickToken(i8* %95, i8** %q, i8* %96), !dbg !3558
  %97 = load i8*, i8** %token, align 8, !dbg !3559
  %98 = load i8, i8* %97, align 1, !dbg !3561
  %conv134 = sext i8 %98 to i32, !dbg !3561
  %cmp135 = icmp eq i32 %conv134, 44, !dbg !3562
  br i1 %cmp135, label %if.then137, label %if.end138, !dbg !3563

if.then137:                                       ; preds = %if.then132
  %99 = load i8*, i8** %q, align 8, !dbg !3564
  %100 = load i8*, i8** %token, align 8, !dbg !3565
  call void @GetMagickToken(i8* %99, i8** %q, i8* %100), !dbg !3566
  br label %if.end138, !dbg !3566

if.end138:                                        ; preds = %if.then137, %if.then132
  %101 = load i8*, i8** %token, align 8, !dbg !3567
  %call139 = call double @StringToDouble(i8* %101, i8** null), !dbg !3568
  %rx = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %affine, i32 0, i32 1, !dbg !3569
  store double %call139, double* %rx, align 8, !dbg !3570
  %102 = load i8*, i8** %q, align 8, !dbg !3571
  %103 = load i8*, i8** %token, align 8, !dbg !3572
  call void @GetMagickToken(i8* %102, i8** %q, i8* %103), !dbg !3573
  %104 = load i8*, i8** %token, align 8, !dbg !3574
  %105 = load i8, i8* %104, align 1, !dbg !3576
  %conv140 = sext i8 %105 to i32, !dbg !3576
  %cmp141 = icmp eq i32 %conv140, 44, !dbg !3577
  br i1 %cmp141, label %if.then143, label %if.end144, !dbg !3578

if.then143:                                       ; preds = %if.end138
  %106 = load i8*, i8** %q, align 8, !dbg !3579
  %107 = load i8*, i8** %token, align 8, !dbg !3580
  call void @GetMagickToken(i8* %106, i8** %q, i8* %107), !dbg !3581
  br label %if.end144, !dbg !3581

if.end144:                                        ; preds = %if.then143, %if.end138
  %108 = load i8*, i8** %token, align 8, !dbg !3582
  %call145 = call double @StringToDouble(i8* %108, i8** null), !dbg !3583
  %ry = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %affine, i32 0, i32 2, !dbg !3584
  store double %call145, double* %ry, align 8, !dbg !3585
  %109 = load i8*, i8** %q, align 8, !dbg !3586
  %110 = load i8*, i8** %token, align 8, !dbg !3587
  call void @GetMagickToken(i8* %109, i8** %q, i8* %110), !dbg !3588
  %111 = load i8*, i8** %token, align 8, !dbg !3589
  %112 = load i8, i8* %111, align 1, !dbg !3591
  %conv146 = sext i8 %112 to i32, !dbg !3591
  %cmp147 = icmp eq i32 %conv146, 44, !dbg !3592
  br i1 %cmp147, label %if.then149, label %if.end150, !dbg !3593

if.then149:                                       ; preds = %if.end144
  %113 = load i8*, i8** %q, align 8, !dbg !3594
  %114 = load i8*, i8** %token, align 8, !dbg !3595
  call void @GetMagickToken(i8* %113, i8** %q, i8* %114), !dbg !3596
  br label %if.end150, !dbg !3596

if.end150:                                        ; preds = %if.then149, %if.end144
  %115 = load i8*, i8** %token, align 8, !dbg !3597
  %call151 = call double @StringToDouble(i8* %115, i8** null), !dbg !3598
  %sy = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %affine, i32 0, i32 3, !dbg !3599
  store double %call151, double* %sy, align 8, !dbg !3600
  %116 = load i8*, i8** %q, align 8, !dbg !3601
  %117 = load i8*, i8** %token, align 8, !dbg !3602
  call void @GetMagickToken(i8* %116, i8** %q, i8* %117), !dbg !3603
  %118 = load i8*, i8** %token, align 8, !dbg !3604
  %119 = load i8, i8* %118, align 1, !dbg !3606
  %conv152 = sext i8 %119 to i32, !dbg !3606
  %cmp153 = icmp eq i32 %conv152, 44, !dbg !3607
  br i1 %cmp153, label %if.then155, label %if.end156, !dbg !3608

if.then155:                                       ; preds = %if.end150
  %120 = load i8*, i8** %q, align 8, !dbg !3609
  %121 = load i8*, i8** %token, align 8, !dbg !3610
  call void @GetMagickToken(i8* %120, i8** %q, i8* %121), !dbg !3611
  br label %if.end156, !dbg !3611

if.end156:                                        ; preds = %if.then155, %if.end150
  %122 = load i8*, i8** %token, align 8, !dbg !3612
  %call157 = call double @StringToDouble(i8* %122, i8** null), !dbg !3613
  %tx = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %affine, i32 0, i32 4, !dbg !3614
  store double %call157, double* %tx, align 8, !dbg !3615
  %123 = load i8*, i8** %q, align 8, !dbg !3616
  %124 = load i8*, i8** %token, align 8, !dbg !3617
  call void @GetMagickToken(i8* %123, i8** %q, i8* %124), !dbg !3618
  %125 = load i8*, i8** %token, align 8, !dbg !3619
  %126 = load i8, i8* %125, align 1, !dbg !3621
  %conv158 = sext i8 %126 to i32, !dbg !3621
  %cmp159 = icmp eq i32 %conv158, 44, !dbg !3622
  br i1 %cmp159, label %if.then161, label %if.end162, !dbg !3623

if.then161:                                       ; preds = %if.end156
  %127 = load i8*, i8** %q, align 8, !dbg !3624
  %128 = load i8*, i8** %token, align 8, !dbg !3625
  call void @GetMagickToken(i8* %127, i8** %q, i8* %128), !dbg !3626
  br label %if.end162, !dbg !3626

if.end162:                                        ; preds = %if.then161, %if.end156
  %129 = load i8*, i8** %token, align 8, !dbg !3627
  %call163 = call double @StringToDouble(i8* %129, i8** null), !dbg !3628
  %ty = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %affine, i32 0, i32 5, !dbg !3629
  store double %call163, double* %ty, align 8, !dbg !3630
  br label %sw.epilog, !dbg !3631

if.end164:                                        ; preds = %sw.bb127
  %arraydecay165 = getelementptr inbounds [4096 x i8], [4096 x i8]* %keyword, i64 0, i64 0, !dbg !3632
  %call166 = call i32 @LocaleCompare(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.15, i64 0, i64 0), i8* %arraydecay165), !dbg !3634
  %cmp167 = icmp eq i32 %call166, 0, !dbg !3635
  br i1 %cmp167, label %if.then169, label %if.end170, !dbg !3636

if.then169:                                       ; preds = %if.end164
  store i32 5, i32* %primitive_type, align 4, !dbg !3637
  br label %sw.epilog, !dbg !3639

if.end170:                                        ; preds = %if.end164
  store i32 0, i32* %status, align 4, !dbg !3640
  br label %sw.epilog, !dbg !3641

sw.bb171:                                         ; preds = %if.end118, %if.end118
  %arraydecay172 = getelementptr inbounds [4096 x i8], [4096 x i8]* %keyword, i64 0, i64 0, !dbg !3642
  %call173 = call i32 @LocaleCompare(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.16, i64 0, i64 0), i8* %arraydecay172), !dbg !3645
  %cmp174 = icmp eq i32 %call173, 0, !dbg !3646
  br i1 %cmp174, label %if.then176, label %if.end177, !dbg !3647

if.then176:                                       ; preds = %sw.bb171
  store i32 10, i32* %primitive_type, align 4, !dbg !3648
  br label %sw.epilog, !dbg !3650

if.end177:                                        ; preds = %sw.bb171
  %arraydecay178 = getelementptr inbounds [4096 x i8], [4096 x i8]* %keyword, i64 0, i64 0, !dbg !3651
  %call179 = call i32 @LocaleCompare(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.17, i64 0, i64 0), i8* %arraydecay178), !dbg !3653
  %cmp180 = icmp eq i32 %call179, 0, !dbg !3654
  br i1 %cmp180, label %if.then182, label %if.end186, !dbg !3655

if.then182:                                       ; preds = %if.end177
  %130 = load i8*, i8** %q, align 8, !dbg !3656
  %131 = load i8*, i8** %token, align 8, !dbg !3658
  call void @GetMagickToken(i8* %130, i8** %q, i8* %131), !dbg !3659
  %132 = load i8*, i8** %token, align 8, !dbg !3660
  %133 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !3661
  %134 = load i64, i64* %n, align 8, !dbg !3662
  %arrayidx183 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %133, i64 %134, !dbg !3661
  %135 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx183, align 8, !dbg !3661
  %border_color = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %135, i32 0, i32 34, !dbg !3663
  %136 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3664
  %exception184 = getelementptr inbounds %struct._Image, %struct._Image* %136, i32 0, i32 58, !dbg !3665
  %call185 = call i32 @QueryColorDatabase(i8* %132, %struct._PixelPacket* %border_color, %struct._ExceptionInfo* %exception184), !dbg !3666
  br label %sw.epilog, !dbg !3667

if.end186:                                        ; preds = %if.end177
  store i32 0, i32* %status, align 4, !dbg !3668
  br label %sw.epilog, !dbg !3669

sw.bb187:                                         ; preds = %if.end118, %if.end118
  %arraydecay188 = getelementptr inbounds [4096 x i8], [4096 x i8]* %keyword, i64 0, i64 0, !dbg !3670
  %call189 = call i32 @LocaleCompare(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.18, i64 0, i64 0), i8* %arraydecay188), !dbg !3673
  %cmp190 = icmp eq i32 %call189, 0, !dbg !3674
  br i1 %cmp190, label %if.then192, label %if.end199, !dbg !3675

if.then192:                                       ; preds = %sw.bb187
  %137 = load i8*, i8** %q, align 8, !dbg !3676
  %138 = load i8*, i8** %token, align 8, !dbg !3678
  call void @GetMagickToken(i8* %137, i8** %q, i8* %138), !dbg !3679
  %139 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !3680
  %140 = load i64, i64* %n, align 8, !dbg !3681
  %arrayidx193 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %139, i64 %140, !dbg !3680
  %141 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx193, align 8, !dbg !3680
  %clip_mask = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %141, i32 0, i32 37, !dbg !3682
  %142 = load i8*, i8** %token, align 8, !dbg !3683
  %call194 = call i8* @CloneString(i8** %clip_mask, i8* %142), !dbg !3684
  %143 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3685
  %144 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !3686
  %145 = load i64, i64* %n, align 8, !dbg !3687
  %arrayidx195 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %144, i64 %145, !dbg !3686
  %146 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx195, align 8, !dbg !3686
  %147 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !3688
  %148 = load i64, i64* %n, align 8, !dbg !3689
  %arrayidx196 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %147, i64 %148, !dbg !3688
  %149 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx196, align 8, !dbg !3688
  %clip_mask197 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %149, i32 0, i32 37, !dbg !3690
  %150 = load i8*, i8** %clip_mask197, align 8, !dbg !3690
  %call198 = call i32 @DrawClipPath(%struct._Image* %143, %struct._DrawInfo* %146, i8* %150), !dbg !3691
  br label %sw.epilog, !dbg !3692

if.end199:                                        ; preds = %sw.bb187
  %arraydecay200 = getelementptr inbounds [4096 x i8], [4096 x i8]* %keyword, i64 0, i64 0, !dbg !3693
  %call201 = call i32 @LocaleCompare(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.19, i64 0, i64 0), i8* %arraydecay200), !dbg !3695
  %cmp202 = icmp eq i32 %call201, 0, !dbg !3696
  br i1 %cmp202, label %if.then204, label %if.end213, !dbg !3697

if.then204:                                       ; preds = %if.end199
  call void @llvm.dbg.declare(metadata i64* %fill_rule, metadata !3698, metadata !DIExpression()), !dbg !3700
  %151 = load i8*, i8** %q, align 8, !dbg !3701
  %152 = load i8*, i8** %token, align 8, !dbg !3702
  call void @GetMagickToken(i8* %151, i8** %q, i8* %152), !dbg !3703
  %153 = load i8*, i8** %token, align 8, !dbg !3704
  %call205 = call i64 @ParseCommandOption(i32 24, i32 0, i8* %153), !dbg !3705
  store i64 %call205, i64* %fill_rule, align 8, !dbg !3706
  %154 = load i64, i64* %fill_rule, align 8, !dbg !3707
  %cmp206 = icmp eq i64 %154, -1, !dbg !3709
  br i1 %cmp206, label %if.then208, label %if.end209, !dbg !3710

if.then208:                                       ; preds = %if.then204
  store i32 0, i32* %status, align 4, !dbg !3711
  br label %sw.epilog, !dbg !3713

if.end209:                                        ; preds = %if.then204
  %155 = load i64, i64* %fill_rule, align 8, !dbg !3714
  %conv210 = trunc i64 %155 to i32, !dbg !3715
  %156 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !3716
  %157 = load i64, i64* %n, align 8, !dbg !3717
  %arrayidx211 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %156, i64 %157, !dbg !3716
  %158 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx211, align 8, !dbg !3716
  %fill_rule212 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %158, i32 0, i32 14, !dbg !3718
  store i32 %conv210, i32* %fill_rule212, align 8, !dbg !3719
  br label %sw.epilog, !dbg !3720

if.end213:                                        ; preds = %if.end199
  %arraydecay214 = getelementptr inbounds [4096 x i8], [4096 x i8]* %keyword, i64 0, i64 0, !dbg !3721
  %call215 = call i32 @LocaleCompare(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20, i64 0, i64 0), i8* %arraydecay214), !dbg !3723
  %cmp216 = icmp eq i32 %call215, 0, !dbg !3724
  br i1 %cmp216, label %if.then218, label %if.end239, !dbg !3725

if.then218:                                       ; preds = %if.end213
  call void @llvm.dbg.declare(metadata i64* %clip_units, metadata !3726, metadata !DIExpression()), !dbg !3728
  %159 = load i8*, i8** %q, align 8, !dbg !3729
  %160 = load i8*, i8** %token, align 8, !dbg !3730
  call void @GetMagickToken(i8* %159, i8** %q, i8* %160), !dbg !3731
  %161 = load i8*, i8** %token, align 8, !dbg !3732
  %call219 = call i64 @ParseCommandOption(i32 6, i32 0, i8* %161), !dbg !3733
  store i64 %call219, i64* %clip_units, align 8, !dbg !3734
  %162 = load i64, i64* %clip_units, align 8, !dbg !3735
  %cmp220 = icmp eq i64 %162, -1, !dbg !3737
  br i1 %cmp220, label %if.then222, label %if.end223, !dbg !3738

if.then222:                                       ; preds = %if.then218
  store i32 0, i32* %status, align 4, !dbg !3739
  br label %sw.epilog, !dbg !3741

if.end223:                                        ; preds = %if.then218
  %163 = load i64, i64* %clip_units, align 8, !dbg !3742
  %conv224 = trunc i64 %163 to i32, !dbg !3743
  %164 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !3744
  %165 = load i64, i64* %n, align 8, !dbg !3745
  %arrayidx225 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %164, i64 %165, !dbg !3744
  %166 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx225, align 8, !dbg !3744
  %clip_units226 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %166, i32 0, i32 39, !dbg !3746
  store i32 %conv224, i32* %clip_units226, align 8, !dbg !3747
  %167 = load i64, i64* %clip_units, align 8, !dbg !3748
  %cmp227 = icmp eq i64 %167, 3, !dbg !3750
  br i1 %cmp227, label %if.then229, label %if.end238, !dbg !3751

if.then229:                                       ; preds = %if.end223
  call void @GetAffineMatrix(%struct._AffineMatrix* %current), !dbg !3752
  %168 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !3754
  %bounds230 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %168, i32 0, i32 38, !dbg !3755
  %x2 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds230, i32 0, i32 2, !dbg !3756
  %169 = load double, double* %x2, align 8, !dbg !3756
  %sx231 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %affine, i32 0, i32 0, !dbg !3757
  store double %169, double* %sx231, align 8, !dbg !3758
  %170 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !3759
  %bounds232 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %170, i32 0, i32 38, !dbg !3760
  %y2 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds232, i32 0, i32 3, !dbg !3761
  %171 = load double, double* %y2, align 8, !dbg !3761
  %sy233 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %affine, i32 0, i32 3, !dbg !3762
  store double %171, double* %sy233, align 8, !dbg !3763
  %172 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !3764
  %bounds234 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %172, i32 0, i32 38, !dbg !3765
  %x1 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds234, i32 0, i32 0, !dbg !3766
  %173 = load double, double* %x1, align 8, !dbg !3766
  %tx235 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %affine, i32 0, i32 4, !dbg !3767
  store double %173, double* %tx235, align 8, !dbg !3768
  %174 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !3769
  %bounds236 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %174, i32 0, i32 38, !dbg !3770
  %y1 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds236, i32 0, i32 1, !dbg !3771
  %175 = load double, double* %y1, align 8, !dbg !3771
  %ty237 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %affine, i32 0, i32 5, !dbg !3772
  store double %175, double* %ty237, align 8, !dbg !3773
  br label %sw.epilog, !dbg !3774

if.end238:                                        ; preds = %if.end223
  br label %sw.epilog, !dbg !3775

if.end239:                                        ; preds = %if.end213
  %arraydecay240 = getelementptr inbounds [4096 x i8], [4096 x i8]* %keyword, i64 0, i64 0, !dbg !3776
  %call241 = call i32 @LocaleCompare(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.21, i64 0, i64 0), i8* %arraydecay240), !dbg !3778
  %cmp242 = icmp eq i32 %call241, 0, !dbg !3779
  br i1 %cmp242, label %if.then244, label %if.end245, !dbg !3780

if.then244:                                       ; preds = %if.end239
  store i32 7, i32* %primitive_type, align 4, !dbg !3781
  br label %sw.epilog, !dbg !3783

if.end245:                                        ; preds = %if.end239
  %arraydecay246 = getelementptr inbounds [4096 x i8], [4096 x i8]* %keyword, i64 0, i64 0, !dbg !3784
  %call247 = call i32 @LocaleCompare(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.22, i64 0, i64 0), i8* %arraydecay246), !dbg !3786
  %cmp248 = icmp eq i32 %call247, 0, !dbg !3787
  br i1 %cmp248, label %if.then250, label %if.end251, !dbg !3788

if.then250:                                       ; preds = %if.end245
  store i32 11, i32* %primitive_type, align 4, !dbg !3789
  br label %sw.epilog, !dbg !3791

if.end251:                                        ; preds = %if.end245
  store i32 0, i32* %status, align 4, !dbg !3792
  br label %sw.epilog, !dbg !3793

sw.bb252:                                         ; preds = %if.end118, %if.end118
  %arraydecay253 = getelementptr inbounds [4096 x i8], [4096 x i8]* %keyword, i64 0, i64 0, !dbg !3794
  %call254 = call i32 @LocaleCompare(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.23, i64 0, i64 0), i8* %arraydecay253), !dbg !3797
  %cmp255 = icmp eq i32 %call254, 0, !dbg !3798
  br i1 %cmp255, label %if.then257, label %if.end266, !dbg !3799

if.then257:                                       ; preds = %sw.bb252
  call void @llvm.dbg.declare(metadata i64* %decorate, metadata !3800, metadata !DIExpression()), !dbg !3802
  %176 = load i8*, i8** %q, align 8, !dbg !3803
  %177 = load i8*, i8** %token, align 8, !dbg !3804
  call void @GetMagickToken(i8* %176, i8** %q, i8* %177), !dbg !3805
  %178 = load i8*, i8** %token, align 8, !dbg !3806
  %call258 = call i64 @ParseCommandOption(i32 16, i32 0, i8* %178), !dbg !3807
  store i64 %call258, i64* %decorate, align 8, !dbg !3808
  %179 = load i64, i64* %decorate, align 8, !dbg !3809
  %cmp259 = icmp eq i64 %179, -1, !dbg !3811
  br i1 %cmp259, label %if.then261, label %if.end262, !dbg !3812

if.then261:                                       ; preds = %if.then257
  store i32 0, i32* %status, align 4, !dbg !3813
  br label %sw.epilog, !dbg !3815

if.end262:                                        ; preds = %if.then257
  %180 = load i64, i64* %decorate, align 8, !dbg !3816
  %conv263 = trunc i64 %180 to i32, !dbg !3817
  %181 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !3818
  %182 = load i64, i64* %n, align 8, !dbg !3819
  %arrayidx264 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %181, i64 %182, !dbg !3818
  %183 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx264, align 8, !dbg !3818
  %decorate265 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %183, i32 0, i32 19, !dbg !3820
  store i32 %conv263, i32* %decorate265, align 8, !dbg !3821
  br label %sw.epilog, !dbg !3822

if.end266:                                        ; preds = %sw.bb252
  %arraydecay267 = getelementptr inbounds [4096 x i8], [4096 x i8]* %keyword, i64 0, i64 0, !dbg !3823
  %call268 = call i32 @LocaleCompare(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.24, i64 0, i64 0), i8* %arraydecay267), !dbg !3825
  %cmp269 = icmp eq i32 %call268, 0, !dbg !3826
  br i1 %cmp269, label %if.then271, label %if.end281, !dbg !3827

if.then271:                                       ; preds = %if.end266
  call void @llvm.dbg.declare(metadata i64* %direction, metadata !3828, metadata !DIExpression()), !dbg !3830
  %184 = load i8*, i8** %q, align 8, !dbg !3831
  %185 = load i8*, i8** %token, align 8, !dbg !3832
  call void @GetMagickToken(i8* %184, i8** %q, i8* %185), !dbg !3833
  %186 = load i8*, i8** %token, align 8, !dbg !3834
  %call272 = call i64 @ParseCommandOption(i32 18, i32 0, i8* %186), !dbg !3835
  store i64 %call272, i64* %direction, align 8, !dbg !3836
  %187 = load i64, i64* %direction, align 8, !dbg !3837
  %cmp273 = icmp eq i64 %187, -1, !dbg !3839
  br i1 %cmp273, label %if.then275, label %if.else276, !dbg !3840

if.then275:                                       ; preds = %if.then271
  store i32 0, i32* %status, align 4, !dbg !3841
  br label %if.end280, !dbg !3842

if.else276:                                       ; preds = %if.then271
  %188 = load i64, i64* %direction, align 8, !dbg !3843
  %conv277 = trunc i64 %188 to i32, !dbg !3844
  %189 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !3845
  %190 = load i64, i64* %n, align 8, !dbg !3846
  %arrayidx278 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %189, i64 %190, !dbg !3845
  %191 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx278, align 8, !dbg !3845
  %direction279 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %191, i32 0, i32 48, !dbg !3847
  store i32 %conv277, i32* %direction279, align 8, !dbg !3848
  br label %if.end280

if.end280:                                        ; preds = %if.else276, %if.then275
  br label %sw.epilog, !dbg !3849

if.end281:                                        ; preds = %if.end266
  store i32 0, i32* %status, align 4, !dbg !3850
  br label %sw.epilog, !dbg !3851

sw.bb282:                                         ; preds = %if.end118, %if.end118
  %arraydecay283 = getelementptr inbounds [4096 x i8], [4096 x i8]* %keyword, i64 0, i64 0, !dbg !3852
  %call284 = call i32 @LocaleCompare(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.25, i64 0, i64 0), i8* %arraydecay283), !dbg !3855
  %cmp285 = icmp eq i32 %call284, 0, !dbg !3856
  br i1 %cmp285, label %if.then287, label %if.end288, !dbg !3857

if.then287:                                       ; preds = %sw.bb282
  store i32 6, i32* %primitive_type, align 4, !dbg !3858
  br label %sw.epilog, !dbg !3860

if.end288:                                        ; preds = %sw.bb282
  %arraydecay289 = getelementptr inbounds [4096 x i8], [4096 x i8]* %keyword, i64 0, i64 0, !dbg !3861
  %call290 = call i32 @LocaleCompare(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.26, i64 0, i64 0), i8* %arraydecay289), !dbg !3863
  %cmp291 = icmp eq i32 %call290, 0, !dbg !3864
  br i1 %cmp291, label %if.then293, label %if.end296, !dbg !3865

if.then293:                                       ; preds = %if.end288
  %192 = load i8*, i8** %q, align 8, !dbg !3866
  %193 = load i8*, i8** %token, align 8, !dbg !3868
  call void @GetMagickToken(i8* %192, i8** %q, i8* %193), !dbg !3869
  %194 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !3870
  %195 = load i64, i64* %n, align 8, !dbg !3871
  %arrayidx294 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %194, i64 %195, !dbg !3870
  %196 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx294, align 8, !dbg !3870
  %encoding = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %196, i32 0, i32 29, !dbg !3872
  %197 = load i8*, i8** %token, align 8, !dbg !3873
  %call295 = call i8* @CloneString(i8** %encoding, i8* %197), !dbg !3874
  br label %sw.epilog, !dbg !3875

if.end296:                                        ; preds = %if.end288
  store i32 0, i32* %status, align 4, !dbg !3876
  br label %sw.epilog, !dbg !3877

sw.bb297:                                         ; preds = %if.end118, %if.end118
  %arraydecay298 = getelementptr inbounds [4096 x i8], [4096 x i8]* %keyword, i64 0, i64 0, !dbg !3878
  %call299 = call i32 @LocaleCompare(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.27, i64 0, i64 0), i8* %arraydecay298), !dbg !3881
  %cmp300 = icmp eq i32 %call299, 0, !dbg !3882
  br i1 %cmp300, label %if.then302, label %if.end331, !dbg !3883

if.then302:                                       ; preds = %sw.bb297
  %198 = load i8*, i8** %q, align 8, !dbg !3884
  %199 = load i8*, i8** %token, align 8, !dbg !3886
  call void @GetMagickToken(i8* %198, i8** %q, i8* %199), !dbg !3887
  %arraydecay303 = getelementptr inbounds [4096 x i8], [4096 x i8]* %pattern, i64 0, i64 0, !dbg !3888
  %200 = load i8*, i8** %token, align 8, !dbg !3889
  %call304 = call i64 (i8*, i64, i8*, ...) @FormatLocaleString(i8* %arraydecay303, i64 4096, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i64 0, i64 0), i8* %200), !dbg !3890
  %201 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3891
  %arraydecay305 = getelementptr inbounds [4096 x i8], [4096 x i8]* %pattern, i64 0, i64 0, !dbg !3893
  %call306 = call i8* @GetImageArtifact(%struct._Image* %201, i8* %arraydecay305), !dbg !3894
  %cmp307 = icmp ne i8* %call306, null, !dbg !3895
  br i1 %cmp307, label %if.then309, label %if.else312, !dbg !3896

if.then309:                                       ; preds = %if.then302
  %202 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3897
  %203 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !3898
  %204 = load i8*, i8** %token, align 8, !dbg !3899
  %205 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !3900
  %206 = load i64, i64* %n, align 8, !dbg !3901
  %arrayidx310 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %205, i64 %206, !dbg !3900
  %207 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx310, align 8, !dbg !3900
  %fill_pattern = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %207, i32 0, i32 9, !dbg !3902
  %call311 = call i32 @DrawPatternPath(%struct._Image* %202, %struct._DrawInfo* %203, i8* %204, %struct._Image** %fill_pattern), !dbg !3903
  br label %if.end330, !dbg !3904

if.else312:                                       ; preds = %if.then302
  %208 = load i8*, i8** %token, align 8, !dbg !3905
  %209 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !3907
  %210 = load i64, i64* %n, align 8, !dbg !3908
  %arrayidx313 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %209, i64 %210, !dbg !3907
  %211 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx313, align 8, !dbg !3907
  %fill = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %211, i32 0, i32 5, !dbg !3909
  %212 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3910
  %exception314 = getelementptr inbounds %struct._Image, %struct._Image* %212, i32 0, i32 58, !dbg !3911
  %call315 = call i32 @QueryColorDatabase(i8* %208, %struct._PixelPacket* %fill, %struct._ExceptionInfo* %exception314), !dbg !3912
  %213 = load i32, i32* %status, align 4, !dbg !3913
  %and = and i32 %213, %call315, !dbg !3913
  store i32 %and, i32* %status, align 4, !dbg !3913
  %214 = load i32, i32* %status, align 4, !dbg !3914
  %cmp316 = icmp eq i32 %214, 0, !dbg !3916
  br i1 %cmp316, label %if.then318, label %if.end329, !dbg !3917

if.then318:                                       ; preds = %if.else312
  call void @llvm.dbg.declare(metadata %struct._ImageInfo** %pattern_info, metadata !3918, metadata !DIExpression()), !dbg !3920
  %call319 = call %struct._ImageInfo* @AcquireImageInfo(), !dbg !3921
  store %struct._ImageInfo* %call319, %struct._ImageInfo** %pattern_info, align 8, !dbg !3922
  %215 = load %struct._ImageInfo*, %struct._ImageInfo** %pattern_info, align 8, !dbg !3923
  %filename320 = getelementptr inbounds %struct._ImageInfo, %struct._ImageInfo* %215, i32 0, i32 51, !dbg !3924
  %arraydecay321 = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename320, i64 0, i64 0, !dbg !3923
  %216 = load i8*, i8** %token, align 8, !dbg !3925
  %call322 = call i64 @CopyMagickString(i8* %arraydecay321, i8* %216, i64 4096), !dbg !3926
  %217 = load %struct._ImageInfo*, %struct._ImageInfo** %pattern_info, align 8, !dbg !3927
  %218 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3928
  %exception323 = getelementptr inbounds %struct._Image, %struct._Image* %218, i32 0, i32 58, !dbg !3929
  %call324 = call %struct._Image* @ReadImage(%struct._ImageInfo* %217, %struct._ExceptionInfo* %exception323), !dbg !3930
  %219 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !3931
  %220 = load i64, i64* %n, align 8, !dbg !3932
  %arrayidx325 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %219, i64 %220, !dbg !3931
  %221 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx325, align 8, !dbg !3931
  %fill_pattern326 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %221, i32 0, i32 9, !dbg !3933
  store %struct._Image* %call324, %struct._Image** %fill_pattern326, align 8, !dbg !3934
  %222 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3935
  %exception327 = getelementptr inbounds %struct._Image, %struct._Image* %222, i32 0, i32 58, !dbg !3936
  call void @CatchException(%struct._ExceptionInfo* %exception327), !dbg !3937
  %223 = load %struct._ImageInfo*, %struct._ImageInfo** %pattern_info, align 8, !dbg !3938
  %call328 = call %struct._ImageInfo* @DestroyImageInfo(%struct._ImageInfo* %223), !dbg !3939
  store %struct._ImageInfo* %call328, %struct._ImageInfo** %pattern_info, align 8, !dbg !3940
  br label %if.end329, !dbg !3941

if.end329:                                        ; preds = %if.then318, %if.else312
  br label %if.end330

if.end330:                                        ; preds = %if.end329, %if.then309
  br label %sw.epilog, !dbg !3942

if.end331:                                        ; preds = %sw.bb297
  %arraydecay332 = getelementptr inbounds [4096 x i8], [4096 x i8]* %keyword, i64 0, i64 0, !dbg !3943
  %call333 = call i32 @LocaleCompare(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.28, i64 0, i64 0), i8* %arraydecay332), !dbg !3945
  %cmp334 = icmp eq i32 %call333, 0, !dbg !3946
  br i1 %cmp334, label %if.then336, label %if.end346, !dbg !3947

if.then336:                                       ; preds = %if.end331
  %224 = load i8*, i8** %q, align 8, !dbg !3948
  %225 = load i8*, i8** %token, align 8, !dbg !3950
  call void @GetMagickToken(i8* %224, i8** %q, i8* %225), !dbg !3951
  %226 = load i8*, i8** %token, align 8, !dbg !3952
  %call337 = call i8* @strchr(i8* %226, i32 37) #15, !dbg !3953
  %cmp338 = icmp ne i8* %call337, null, !dbg !3954
  %227 = zext i1 %cmp338 to i64, !dbg !3953
  %cond = select i1 %cmp338, double 1.000000e-02, double 1.000000e+00, !dbg !3953
  store double %cond, double* %factor, align 8, !dbg !3955
  %228 = load double, double* %factor, align 8, !dbg !3956
  %229 = load i8*, i8** %token, align 8, !dbg !3957
  %call340 = call double @StringToDouble(i8* %229, i8** null), !dbg !3958
  %mul = fmul double %228, %call340, !dbg !3959
  %sub = fsub double 1.000000e+00, %mul, !dbg !3960
  %mul341 = fmul double 6.553500e+04, %sub, !dbg !3961
  %conv342 = fptrunc double %mul341 to float, !dbg !3962
  %call343 = call zeroext i16 @ClampToQuantum(float %conv342), !dbg !3963
  %230 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !3964
  %231 = load i64, i64* %n, align 8, !dbg !3965
  %arrayidx344 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %230, i64 %231, !dbg !3964
  %232 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx344, align 8, !dbg !3964
  %fill345 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %232, i32 0, i32 5, !dbg !3966
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %fill345, i32 0, i32 3, !dbg !3967
  store i16 %call343, i16* %opacity, align 2, !dbg !3968
  br label %sw.epilog, !dbg !3969

if.end346:                                        ; preds = %if.end331
  %arraydecay347 = getelementptr inbounds [4096 x i8], [4096 x i8]* %keyword, i64 0, i64 0, !dbg !3970
  %call348 = call i32 @LocaleCompare(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.29, i64 0, i64 0), i8* %arraydecay347), !dbg !3972
  %cmp349 = icmp eq i32 %call348, 0, !dbg !3973
  br i1 %cmp349, label %if.then351, label %if.end361, !dbg !3974

if.then351:                                       ; preds = %if.end346
  call void @llvm.dbg.declare(metadata i64* %fill_rule352, metadata !3975, metadata !DIExpression()), !dbg !3977
  %233 = load i8*, i8** %q, align 8, !dbg !3978
  %234 = load i8*, i8** %token, align 8, !dbg !3979
  call void @GetMagickToken(i8* %233, i8** %q, i8* %234), !dbg !3980
  %235 = load i8*, i8** %token, align 8, !dbg !3981
  %call353 = call i64 @ParseCommandOption(i32 24, i32 0, i8* %235), !dbg !3982
  store i64 %call353, i64* %fill_rule352, align 8, !dbg !3983
  %236 = load i64, i64* %fill_rule352, align 8, !dbg !3984
  %cmp354 = icmp eq i64 %236, -1, !dbg !3986
  br i1 %cmp354, label %if.then356, label %if.end357, !dbg !3987

if.then356:                                       ; preds = %if.then351
  store i32 0, i32* %status, align 4, !dbg !3988
  br label %sw.epilog, !dbg !3990

if.end357:                                        ; preds = %if.then351
  %237 = load i64, i64* %fill_rule352, align 8, !dbg !3991
  %conv358 = trunc i64 %237 to i32, !dbg !3992
  %238 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !3993
  %239 = load i64, i64* %n, align 8, !dbg !3994
  %arrayidx359 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %238, i64 %239, !dbg !3993
  %240 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx359, align 8, !dbg !3993
  %fill_rule360 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %240, i32 0, i32 14, !dbg !3995
  store i32 %conv358, i32* %fill_rule360, align 8, !dbg !3996
  br label %sw.epilog, !dbg !3997

if.end361:                                        ; preds = %if.end346
  %arraydecay362 = getelementptr inbounds [4096 x i8], [4096 x i8]* %keyword, i64 0, i64 0, !dbg !3998
  %call363 = call i32 @LocaleCompare(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.30, i64 0, i64 0), i8* %arraydecay362), !dbg !4000
  %cmp364 = icmp eq i32 %call363, 0, !dbg !4001
  br i1 %cmp364, label %if.then366, label %if.end379, !dbg !4002

if.then366:                                       ; preds = %if.end361
  %241 = load i8*, i8** %q, align 8, !dbg !4003
  %242 = load i8*, i8** %token, align 8, !dbg !4005
  call void @GetMagickToken(i8* %241, i8** %q, i8* %242), !dbg !4006
  %243 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !4007
  %244 = load i64, i64* %n, align 8, !dbg !4008
  %arrayidx367 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %243, i64 %244, !dbg !4007
  %245 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx367, align 8, !dbg !4007
  %font = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %245, i32 0, i32 23, !dbg !4009
  %246 = load i8*, i8** %token, align 8, !dbg !4010
  %call368 = call i8* @CloneString(i8** %font, i8* %246), !dbg !4011
  %247 = load i8*, i8** %token, align 8, !dbg !4012
  %call369 = call i32 @LocaleCompare(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.31, i64 0, i64 0), i8* %247), !dbg !4014
  %cmp370 = icmp eq i32 %call369, 0, !dbg !4015
  br i1 %cmp370, label %if.then372, label %if.end378, !dbg !4016

if.then372:                                       ; preds = %if.then366
  %248 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !4017
  %249 = load i64, i64* %n, align 8, !dbg !4018
  %arrayidx373 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %248, i64 %249, !dbg !4017
  %250 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx373, align 8, !dbg !4017
  %font374 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %250, i32 0, i32 23, !dbg !4019
  %251 = load i8*, i8** %font374, align 8, !dbg !4019
  %call375 = call i8* @RelinquishMagickMemory(i8* %251), !dbg !4020
  %252 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !4021
  %253 = load i64, i64* %n, align 8, !dbg !4022
  %arrayidx376 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %252, i64 %253, !dbg !4021
  %254 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx376, align 8, !dbg !4021
  %font377 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %254, i32 0, i32 23, !dbg !4023
  store i8* %call375, i8** %font377, align 8, !dbg !4024
  br label %if.end378, !dbg !4021

if.end378:                                        ; preds = %if.then372, %if.then366
  br label %sw.epilog, !dbg !4025

if.end379:                                        ; preds = %if.end361
  %arraydecay380 = getelementptr inbounds [4096 x i8], [4096 x i8]* %keyword, i64 0, i64 0, !dbg !4026
  %call381 = call i32 @LocaleCompare(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.32, i64 0, i64 0), i8* %arraydecay380), !dbg !4028
  %cmp382 = icmp eq i32 %call381, 0, !dbg !4029
  br i1 %cmp382, label %if.then384, label %if.end387, !dbg !4030

if.then384:                                       ; preds = %if.end379
  %255 = load i8*, i8** %q, align 8, !dbg !4031
  %256 = load i8*, i8** %token, align 8, !dbg !4033
  call void @GetMagickToken(i8* %255, i8** %q, i8* %256), !dbg !4034
  %257 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !4035
  %258 = load i64, i64* %n, align 8, !dbg !4036
  %arrayidx385 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %257, i64 %258, !dbg !4035
  %259 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx385, align 8, !dbg !4035
  %family = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %259, i32 0, i32 25, !dbg !4037
  %260 = load i8*, i8** %token, align 8, !dbg !4038
  %call386 = call i8* @CloneString(i8** %family, i8* %260), !dbg !4039
  br label %sw.epilog, !dbg !4040

if.end387:                                        ; preds = %if.end379
  %arraydecay388 = getelementptr inbounds [4096 x i8], [4096 x i8]* %keyword, i64 0, i64 0, !dbg !4041
  %call389 = call i32 @LocaleCompare(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.33, i64 0, i64 0), i8* %arraydecay388), !dbg !4043
  %cmp390 = icmp eq i32 %call389, 0, !dbg !4044
  br i1 %cmp390, label %if.then392, label %if.end395, !dbg !4045

if.then392:                                       ; preds = %if.end387
  %261 = load i8*, i8** %q, align 8, !dbg !4046
  %262 = load i8*, i8** %token, align 8, !dbg !4048
  call void @GetMagickToken(i8* %261, i8** %q, i8* %262), !dbg !4049
  %263 = load i8*, i8** %token, align 8, !dbg !4050
  %call393 = call double @StringToDouble(i8* %263, i8** null), !dbg !4051
  %264 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !4052
  %265 = load i64, i64* %n, align 8, !dbg !4053
  %arrayidx394 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %264, i64 %265, !dbg !4052
  %266 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx394, align 8, !dbg !4052
  %pointsize = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %266, i32 0, i32 30, !dbg !4054
  store double %call393, double* %pointsize, align 8, !dbg !4055
  br label %sw.epilog, !dbg !4056

if.end395:                                        ; preds = %if.end387
  %arraydecay396 = getelementptr inbounds [4096 x i8], [4096 x i8]* %keyword, i64 0, i64 0, !dbg !4057
  %call397 = call i32 @LocaleCompare(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.34, i64 0, i64 0), i8* %arraydecay396), !dbg !4059
  %cmp398 = icmp eq i32 %call397, 0, !dbg !4060
  br i1 %cmp398, label %if.then400, label %if.end409, !dbg !4061

if.then400:                                       ; preds = %if.end395
  call void @llvm.dbg.declare(metadata i64* %stretch, metadata !4062, metadata !DIExpression()), !dbg !4064
  %267 = load i8*, i8** %q, align 8, !dbg !4065
  %268 = load i8*, i8** %token, align 8, !dbg !4066
  call void @GetMagickToken(i8* %267, i8** %q, i8* %268), !dbg !4067
  %269 = load i8*, i8** %token, align 8, !dbg !4068
  %call401 = call i64 @ParseCommandOption(i32 63, i32 0, i8* %269), !dbg !4069
  store i64 %call401, i64* %stretch, align 8, !dbg !4070
  %270 = load i64, i64* %stretch, align 8, !dbg !4071
  %cmp402 = icmp eq i64 %270, -1, !dbg !4073
  br i1 %cmp402, label %if.then404, label %if.end405, !dbg !4074

if.then404:                                       ; preds = %if.then400
  store i32 0, i32* %status, align 4, !dbg !4075
  br label %sw.epilog, !dbg !4077

if.end405:                                        ; preds = %if.then400
  %271 = load i64, i64* %stretch, align 8, !dbg !4078
  %conv406 = trunc i64 %271 to i32, !dbg !4079
  %272 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !4080
  %273 = load i64, i64* %n, align 8, !dbg !4081
  %arrayidx407 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %272, i64 %273, !dbg !4080
  %274 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx407, align 8, !dbg !4080
  %stretch408 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %274, i32 0, i32 27, !dbg !4082
  store i32 %conv406, i32* %stretch408, align 4, !dbg !4083
  br label %sw.epilog, !dbg !4084

if.end409:                                        ; preds = %if.end395
  %arraydecay410 = getelementptr inbounds [4096 x i8], [4096 x i8]* %keyword, i64 0, i64 0, !dbg !4085
  %call411 = call i32 @LocaleCompare(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.35, i64 0, i64 0), i8* %arraydecay410), !dbg !4087
  %cmp412 = icmp eq i32 %call411, 0, !dbg !4088
  br i1 %cmp412, label %if.then414, label %if.end423, !dbg !4089

if.then414:                                       ; preds = %if.end409
  call void @llvm.dbg.declare(metadata i64* %style, metadata !4090, metadata !DIExpression()), !dbg !4092
  %275 = load i8*, i8** %q, align 8, !dbg !4093
  %276 = load i8*, i8** %token, align 8, !dbg !4094
  call void @GetMagickToken(i8* %275, i8** %q, i8* %276), !dbg !4095
  %277 = load i8*, i8** %token, align 8, !dbg !4096
  %call415 = call i64 @ParseCommandOption(i32 64, i32 0, i8* %277), !dbg !4097
  store i64 %call415, i64* %style, align 8, !dbg !4098
  %278 = load i64, i64* %style, align 8, !dbg !4099
  %cmp416 = icmp eq i64 %278, -1, !dbg !4101
  br i1 %cmp416, label %if.then418, label %if.end419, !dbg !4102

if.then418:                                       ; preds = %if.then414
  store i32 0, i32* %status, align 4, !dbg !4103
  br label %sw.epilog, !dbg !4105

if.end419:                                        ; preds = %if.then414
  %279 = load i64, i64* %style, align 8, !dbg !4106
  %conv420 = trunc i64 %279 to i32, !dbg !4107
  %280 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !4108
  %281 = load i64, i64* %n, align 8, !dbg !4109
  %arrayidx421 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %280, i64 %281, !dbg !4108
  %282 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx421, align 8, !dbg !4108
  %style422 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %282, i32 0, i32 26, !dbg !4110
  store i32 %conv420, i32* %style422, align 8, !dbg !4111
  br label %sw.epilog, !dbg !4112

if.end423:                                        ; preds = %if.end409
  %arraydecay424 = getelementptr inbounds [4096 x i8], [4096 x i8]* %keyword, i64 0, i64 0, !dbg !4113
  %call425 = call i32 @LocaleCompare(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.36, i64 0, i64 0), i8* %arraydecay424), !dbg !4115
  %cmp426 = icmp eq i32 %call425, 0, !dbg !4116
  br i1 %cmp426, label %if.then428, label %if.end479, !dbg !4117

if.then428:                                       ; preds = %if.end423
  %283 = load i8*, i8** %q, align 8, !dbg !4118
  %284 = load i8*, i8** %token, align 8, !dbg !4120
  call void @GetMagickToken(i8* %283, i8** %q, i8* %284), !dbg !4121
  %285 = load i8*, i8** %token, align 8, !dbg !4122
  %call429 = call i64 @StringToUnsignedLong(i8* %285), !dbg !4123
  %286 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !4124
  %287 = load i64, i64* %n, align 8, !dbg !4125
  %arrayidx430 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %286, i64 %287, !dbg !4124
  %288 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx430, align 8, !dbg !4124
  %weight = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %288, i32 0, i32 28, !dbg !4126
  store i64 %call429, i64* %weight, align 8, !dbg !4127
  %289 = load i8*, i8** %token, align 8, !dbg !4128
  %call431 = call i32 @LocaleCompare(i8* %289, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.37, i64 0, i64 0)), !dbg !4130
  %cmp432 = icmp eq i32 %call431, 0, !dbg !4131
  br i1 %cmp432, label %if.then434, label %if.end437, !dbg !4132

if.then434:                                       ; preds = %if.then428
  %290 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !4133
  %291 = load i64, i64* %n, align 8, !dbg !4134
  %arrayidx435 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %290, i64 %291, !dbg !4133
  %292 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx435, align 8, !dbg !4133
  %weight436 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %292, i32 0, i32 28, !dbg !4135
  store i64 0, i64* %weight436, align 8, !dbg !4136
  br label %if.end437, !dbg !4133

if.end437:                                        ; preds = %if.then434, %if.then428
  %293 = load i8*, i8** %token, align 8, !dbg !4137
  %call438 = call i32 @LocaleCompare(i8* %293, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.38, i64 0, i64 0)), !dbg !4139
  %cmp439 = icmp eq i32 %call438, 0, !dbg !4140
  br i1 %cmp439, label %if.then441, label %if.end444, !dbg !4141

if.then441:                                       ; preds = %if.end437
  %294 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !4142
  %295 = load i64, i64* %n, align 8, !dbg !4143
  %arrayidx442 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %294, i64 %295, !dbg !4142
  %296 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx442, align 8, !dbg !4142
  %weight443 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %296, i32 0, i32 28, !dbg !4144
  store i64 700, i64* %weight443, align 8, !dbg !4145
  br label %if.end444, !dbg !4142

if.end444:                                        ; preds = %if.then441, %if.end437
  %297 = load i8*, i8** %token, align 8, !dbg !4146
  %call445 = call i32 @LocaleCompare(i8* %297, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.39, i64 0, i64 0)), !dbg !4148
  %cmp446 = icmp eq i32 %call445, 0, !dbg !4149
  br i1 %cmp446, label %if.then448, label %if.end457, !dbg !4150

if.then448:                                       ; preds = %if.end444
  %298 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !4151
  %299 = load i64, i64* %n, align 8, !dbg !4153
  %arrayidx449 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %298, i64 %299, !dbg !4151
  %300 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx449, align 8, !dbg !4151
  %weight450 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %300, i32 0, i32 28, !dbg !4154
  %301 = load i64, i64* %weight450, align 8, !dbg !4154
  %cmp451 = icmp ule i64 %301, 800, !dbg !4155
  br i1 %cmp451, label %if.then453, label %if.end456, !dbg !4156

if.then453:                                       ; preds = %if.then448
  %302 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !4157
  %303 = load i64, i64* %n, align 8, !dbg !4158
  %arrayidx454 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %302, i64 %303, !dbg !4157
  %304 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx454, align 8, !dbg !4157
  %weight455 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %304, i32 0, i32 28, !dbg !4159
  %305 = load i64, i64* %weight455, align 8, !dbg !4160
  %add = add i64 %305, 100, !dbg !4160
  store i64 %add, i64* %weight455, align 8, !dbg !4160
  br label %if.end456, !dbg !4157

if.end456:                                        ; preds = %if.then453, %if.then448
  br label %if.end457, !dbg !4161

if.end457:                                        ; preds = %if.end456, %if.end444
  %306 = load i8*, i8** %token, align 8, !dbg !4162
  %call458 = call i32 @LocaleCompare(i8* %306, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.40, i64 0, i64 0)), !dbg !4164
  %cmp459 = icmp eq i32 %call458, 0, !dbg !4165
  br i1 %cmp459, label %if.then461, label %if.end471, !dbg !4166

if.then461:                                       ; preds = %if.end457
  %307 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !4167
  %308 = load i64, i64* %n, align 8, !dbg !4169
  %arrayidx462 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %307, i64 %308, !dbg !4167
  %309 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx462, align 8, !dbg !4167
  %weight463 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %309, i32 0, i32 28, !dbg !4170
  %310 = load i64, i64* %weight463, align 8, !dbg !4170
  %cmp464 = icmp uge i64 %310, 100, !dbg !4171
  br i1 %cmp464, label %if.then466, label %if.end470, !dbg !4172

if.then466:                                       ; preds = %if.then461
  %311 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !4173
  %312 = load i64, i64* %n, align 8, !dbg !4174
  %arrayidx467 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %311, i64 %312, !dbg !4173
  %313 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx467, align 8, !dbg !4173
  %weight468 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %313, i32 0, i32 28, !dbg !4175
  %314 = load i64, i64* %weight468, align 8, !dbg !4176
  %sub469 = sub i64 %314, 100, !dbg !4176
  store i64 %sub469, i64* %weight468, align 8, !dbg !4176
  br label %if.end470, !dbg !4173

if.end470:                                        ; preds = %if.then466, %if.then461
  br label %if.end471, !dbg !4177

if.end471:                                        ; preds = %if.end470, %if.end457
  %315 = load i8*, i8** %token, align 8, !dbg !4178
  %call472 = call i32 @LocaleCompare(i8* %315, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.41, i64 0, i64 0)), !dbg !4180
  %cmp473 = icmp eq i32 %call472, 0, !dbg !4181
  br i1 %cmp473, label %if.then475, label %if.end478, !dbg !4182

if.then475:                                       ; preds = %if.end471
  %316 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !4183
  %317 = load i64, i64* %n, align 8, !dbg !4184
  %arrayidx476 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %316, i64 %317, !dbg !4183
  %318 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx476, align 8, !dbg !4183
  %weight477 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %318, i32 0, i32 28, !dbg !4185
  store i64 400, i64* %weight477, align 8, !dbg !4186
  br label %if.end478, !dbg !4183

if.end478:                                        ; preds = %if.then475, %if.end471
  br label %sw.epilog, !dbg !4187

if.end479:                                        ; preds = %if.end423
  store i32 0, i32* %status, align 4, !dbg !4188
  br label %sw.epilog, !dbg !4189

sw.bb480:                                         ; preds = %if.end118, %if.end118
  %arraydecay481 = getelementptr inbounds [4096 x i8], [4096 x i8]* %keyword, i64 0, i64 0, !dbg !4190
  %call482 = call i32 @LocaleCompare(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.42, i64 0, i64 0), i8* %arraydecay481), !dbg !4193
  %cmp483 = icmp eq i32 %call482, 0, !dbg !4194
  br i1 %cmp483, label %if.then485, label %if.end486, !dbg !4195

if.then485:                                       ; preds = %sw.bb480
  %319 = load i8*, i8** %q, align 8, !dbg !4196
  %320 = load i8*, i8** %token, align 8, !dbg !4198
  call void @GetMagickToken(i8* %319, i8** %q, i8* %320), !dbg !4199
  br label %sw.epilog, !dbg !4200

if.end486:                                        ; preds = %sw.bb480
  %arraydecay487 = getelementptr inbounds [4096 x i8], [4096 x i8]* %keyword, i64 0, i64 0, !dbg !4201
  %call488 = call i32 @LocaleCompare(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.43, i64 0, i64 0), i8* %arraydecay487), !dbg !4203
  %cmp489 = icmp eq i32 %call488, 0, !dbg !4204
  br i1 %cmp489, label %if.then491, label %if.end500, !dbg !4205

if.then491:                                       ; preds = %if.end486
  call void @llvm.dbg.declare(metadata i64* %gravity, metadata !4206, metadata !DIExpression()), !dbg !4208
  %321 = load i8*, i8** %q, align 8, !dbg !4209
  %322 = load i8*, i8** %token, align 8, !dbg !4210
  call void @GetMagickToken(i8* %321, i8** %q, i8* %322), !dbg !4211
  %323 = load i8*, i8** %token, align 8, !dbg !4212
  %call492 = call i64 @ParseCommandOption(i32 30, i32 0, i8* %323), !dbg !4213
  store i64 %call492, i64* %gravity, align 8, !dbg !4214
  %324 = load i64, i64* %gravity, align 8, !dbg !4215
  %cmp493 = icmp eq i64 %324, -1, !dbg !4217
  br i1 %cmp493, label %if.then495, label %if.end496, !dbg !4218

if.then495:                                       ; preds = %if.then491
  store i32 0, i32* %status, align 4, !dbg !4219
  br label %sw.epilog, !dbg !4221

if.end496:                                        ; preds = %if.then491
  %325 = load i64, i64* %gravity, align 8, !dbg !4222
  %conv497 = trunc i64 %325 to i32, !dbg !4223
  %326 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !4224
  %327 = load i64, i64* %n, align 8, !dbg !4225
  %arrayidx498 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %326, i64 %327, !dbg !4224
  %328 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx498, align 8, !dbg !4224
  %gravity499 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %328, i32 0, i32 4, !dbg !4226
  store i32 %conv497, i32* %gravity499, align 8, !dbg !4227
  br label %sw.epilog, !dbg !4228

if.end500:                                        ; preds = %if.end486
  store i32 0, i32* %status, align 4, !dbg !4229
  br label %sw.epilog, !dbg !4230

sw.bb501:                                         ; preds = %if.end118, %if.end118
  %arraydecay502 = getelementptr inbounds [4096 x i8], [4096 x i8]* %keyword, i64 0, i64 0, !dbg !4231
  %call503 = call i32 @LocaleCompare(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.44, i64 0, i64 0), i8* %arraydecay502), !dbg !4234
  %cmp504 = icmp eq i32 %call503, 0, !dbg !4235
  br i1 %cmp504, label %if.then506, label %if.end515, !dbg !4236

if.then506:                                       ; preds = %sw.bb501
  call void @llvm.dbg.declare(metadata i64* %compose, metadata !4237, metadata !DIExpression()), !dbg !4239
  store i32 14, i32* %primitive_type, align 4, !dbg !4240
  %329 = load i8*, i8** %q, align 8, !dbg !4241
  %330 = load i8*, i8** %token, align 8, !dbg !4242
  call void @GetMagickToken(i8* %329, i8** %q, i8* %330), !dbg !4243
  %331 = load i8*, i8** %token, align 8, !dbg !4244
  %call507 = call i64 @ParseCommandOption(i32 11, i32 0, i8* %331), !dbg !4245
  store i64 %call507, i64* %compose, align 8, !dbg !4246
  %332 = load i64, i64* %compose, align 8, !dbg !4247
  %cmp508 = icmp eq i64 %332, -1, !dbg !4249
  br i1 %cmp508, label %if.then510, label %if.end511, !dbg !4250

if.then510:                                       ; preds = %if.then506
  store i32 0, i32* %status, align 4, !dbg !4251
  br label %sw.epilog, !dbg !4253

if.end511:                                        ; preds = %if.then506
  %333 = load i64, i64* %compose, align 8, !dbg !4254
  %conv512 = trunc i64 %333 to i32, !dbg !4255
  %334 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !4256
  %335 = load i64, i64* %n, align 8, !dbg !4257
  %arrayidx513 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %334, i64 %335, !dbg !4256
  %336 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx513, align 8, !dbg !4256
  %compose514 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %336, i32 0, i32 20, !dbg !4258
  store i32 %conv512, i32* %compose514, align 4, !dbg !4259
  br label %sw.epilog, !dbg !4260

if.end515:                                        ; preds = %sw.bb501
  %arraydecay516 = getelementptr inbounds [4096 x i8], [4096 x i8]* %keyword, i64 0, i64 0, !dbg !4261
  %call517 = call i32 @LocaleCompare(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.45, i64 0, i64 0), i8* %arraydecay516), !dbg !4263
  %cmp518 = icmp eq i32 %call517, 0, !dbg !4264
  br i1 %cmp518, label %if.then520, label %if.end523, !dbg !4265

if.then520:                                       ; preds = %if.end515
  %337 = load i8*, i8** %q, align 8, !dbg !4266
  %338 = load i8*, i8** %token, align 8, !dbg !4268
  call void @GetMagickToken(i8* %337, i8** %q, i8* %338), !dbg !4269
  %339 = load i8*, i8** %token, align 8, !dbg !4270
  %call521 = call double @StringToDouble(i8* %339, i8** null), !dbg !4271
  %340 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !4272
  %341 = load i64, i64* %n, align 8, !dbg !4273
  %arrayidx522 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %340, i64 %341, !dbg !4272
  %342 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx522, align 8, !dbg !4272
  %interline_spacing = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %342, i32 0, i32 47, !dbg !4274
  store double %call521, double* %interline_spacing, align 8, !dbg !4275
  br label %sw.epilog, !dbg !4276

if.end523:                                        ; preds = %if.end515
  %arraydecay524 = getelementptr inbounds [4096 x i8], [4096 x i8]* %keyword, i64 0, i64 0, !dbg !4277
  %call525 = call i32 @LocaleCompare(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.46, i64 0, i64 0), i8* %arraydecay524), !dbg !4279
  %cmp526 = icmp eq i32 %call525, 0, !dbg !4280
  br i1 %cmp526, label %if.then528, label %if.end531, !dbg !4281

if.then528:                                       ; preds = %if.end523
  %343 = load i8*, i8** %q, align 8, !dbg !4282
  %344 = load i8*, i8** %token, align 8, !dbg !4284
  call void @GetMagickToken(i8* %343, i8** %q, i8* %344), !dbg !4285
  %345 = load i8*, i8** %token, align 8, !dbg !4286
  %call529 = call double @StringToDouble(i8* %345, i8** null), !dbg !4287
  %346 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !4288
  %347 = load i64, i64* %n, align 8, !dbg !4289
  %arrayidx530 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %346, i64 %347, !dbg !4288
  %348 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx530, align 8, !dbg !4288
  %interword_spacing = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %348, i32 0, i32 46, !dbg !4290
  store double %call529, double* %interword_spacing, align 8, !dbg !4291
  br label %sw.epilog, !dbg !4292

if.end531:                                        ; preds = %if.end523
  store i32 0, i32* %status, align 4, !dbg !4293
  br label %sw.epilog, !dbg !4294

sw.bb532:                                         ; preds = %if.end118, %if.end118
  %arraydecay533 = getelementptr inbounds [4096 x i8], [4096 x i8]* %keyword, i64 0, i64 0, !dbg !4295
  %call534 = call i32 @LocaleCompare(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.47, i64 0, i64 0), i8* %arraydecay533), !dbg !4298
  %cmp535 = icmp eq i32 %call534, 0, !dbg !4299
  br i1 %cmp535, label %if.then537, label %if.end540, !dbg !4300

if.then537:                                       ; preds = %sw.bb532
  %349 = load i8*, i8** %q, align 8, !dbg !4301
  %350 = load i8*, i8** %token, align 8, !dbg !4303
  call void @GetMagickToken(i8* %349, i8** %q, i8* %350), !dbg !4304
  %351 = load i8*, i8** %token, align 8, !dbg !4305
  %call538 = call double @StringToDouble(i8* %351, i8** null), !dbg !4306
  %352 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !4307
  %353 = load i64, i64* %n, align 8, !dbg !4308
  %arrayidx539 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %352, i64 %353, !dbg !4307
  %354 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx539, align 8, !dbg !4307
  %kerning = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %354, i32 0, i32 45, !dbg !4309
  store double %call538, double* %kerning, align 8, !dbg !4310
  br label %sw.epilog, !dbg !4311

if.end540:                                        ; preds = %sw.bb532
  store i32 0, i32* %status, align 4, !dbg !4312
  br label %sw.epilog, !dbg !4313

sw.bb541:                                         ; preds = %if.end118, %if.end118
  %arraydecay542 = getelementptr inbounds [4096 x i8], [4096 x i8]* %keyword, i64 0, i64 0, !dbg !4314
  %call543 = call i32 @LocaleCompare(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.48, i64 0, i64 0), i8* %arraydecay542), !dbg !4317
  %cmp544 = icmp eq i32 %call543, 0, !dbg !4318
  br i1 %cmp544, label %if.then546, label %if.end547, !dbg !4319

if.then546:                                       ; preds = %sw.bb541
  store i32 2, i32* %primitive_type, align 4, !dbg !4320
  br label %sw.epilog, !dbg !4322

if.end547:                                        ; preds = %sw.bb541
  store i32 0, i32* %status, align 4, !dbg !4323
  br label %sw.epilog, !dbg !4324

sw.bb548:                                         ; preds = %if.end118, %if.end118
  %arraydecay549 = getelementptr inbounds [4096 x i8], [4096 x i8]* %keyword, i64 0, i64 0, !dbg !4325
  %call550 = call i32 @LocaleCompare(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.49, i64 0, i64 0), i8* %arraydecay549), !dbg !4328
  %cmp551 = icmp eq i32 %call550, 0, !dbg !4329
  br i1 %cmp551, label %if.then553, label %if.end554, !dbg !4330

if.then553:                                       ; preds = %sw.bb548
  store i32 12, i32* %primitive_type, align 4, !dbg !4331
  br label %sw.epilog, !dbg !4333

if.end554:                                        ; preds = %sw.bb548
  store i32 0, i32* %status, align 4, !dbg !4334
  br label %sw.epilog, !dbg !4335

sw.bb555:                                         ; preds = %if.end118, %if.end118
  %arraydecay556 = getelementptr inbounds [4096 x i8], [4096 x i8]* %keyword, i64 0, i64 0, !dbg !4336
  %call557 = call i32 @LocaleCompare(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.50, i64 0, i64 0), i8* %arraydecay556), !dbg !4339
  %cmp558 = icmp eq i32 %call557, 0, !dbg !4340
  br i1 %cmp558, label %if.then560, label %if.end561, !dbg !4341

if.then560:                                       ; preds = %sw.bb555
  %355 = load i8*, i8** %q, align 8, !dbg !4342
  %356 = load i8*, i8** %token, align 8, !dbg !4344
  call void @GetMagickToken(i8* %355, i8** %q, i8* %356), !dbg !4345
  br label %sw.epilog, !dbg !4346

if.end561:                                        ; preds = %sw.bb555
  %arraydecay562 = getelementptr inbounds [4096 x i8], [4096 x i8]* %keyword, i64 0, i64 0, !dbg !4347
  %call563 = call i32 @LocaleCompare(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.51, i64 0, i64 0), i8* %arraydecay562), !dbg !4349
  %cmp564 = icmp eq i32 %call563, 0, !dbg !4350
  br i1 %cmp564, label %if.then566, label %if.end595, !dbg !4351

if.then566:                                       ; preds = %if.end561
  %357 = load i8*, i8** %q, align 8, !dbg !4352
  %358 = load i8*, i8** %token, align 8, !dbg !4354
  call void @GetMagickToken(i8* %357, i8** %q, i8* %358), !dbg !4355
  %359 = load i8*, i8** %token, align 8, !dbg !4356
  %call567 = call i8* @strchr(i8* %359, i32 37) #15, !dbg !4357
  %cmp568 = icmp ne i8* %call567, null, !dbg !4358
  %360 = zext i1 %cmp568 to i64, !dbg !4357
  %cond570 = select i1 %cmp568, double 1.000000e-02, double 1.000000e+00, !dbg !4357
  store double %cond570, double* %factor, align 8, !dbg !4359
  %361 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !4360
  %362 = load i64, i64* %n, align 8, !dbg !4361
  %arrayidx571 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %361, i64 %362, !dbg !4360
  %363 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx571, align 8, !dbg !4360
  %opacity572 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %363, i32 0, i32 40, !dbg !4362
  %364 = load i16, i16* %opacity572, align 4, !dbg !4362
  %conv573 = zext i16 %364 to i32, !dbg !4360
  %conv574 = sitofp i32 %conv573 to double, !dbg !4360
  %mul575 = fmul double 0x3EF0001000100010, %conv574, !dbg !4363
  %sub576 = fsub double 1.000000e+00, %mul575, !dbg !4364
  %365 = load double, double* %factor, align 8, !dbg !4365
  %mul577 = fmul double %sub576, %365, !dbg !4366
  %366 = load i8*, i8** %token, align 8, !dbg !4367
  %call578 = call double @StringToDouble(i8* %366, i8** null), !dbg !4368
  %mul579 = fmul double %mul577, %call578, !dbg !4369
  %sub580 = fsub double 1.000000e+00, %mul579, !dbg !4370
  %mul581 = fmul double 6.553500e+04, %sub580, !dbg !4371
  %conv582 = fptrunc double %mul581 to float, !dbg !4372
  %call583 = call zeroext i16 @ClampToQuantum(float %conv582), !dbg !4373
  %367 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !4374
  %368 = load i64, i64* %n, align 8, !dbg !4375
  %arrayidx584 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %367, i64 %368, !dbg !4374
  %369 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx584, align 8, !dbg !4374
  %opacity585 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %369, i32 0, i32 40, !dbg !4376
  store i16 %call583, i16* %opacity585, align 4, !dbg !4377
  %370 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !4378
  %371 = load i64, i64* %n, align 8, !dbg !4379
  %arrayidx586 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %370, i64 %371, !dbg !4378
  %372 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx586, align 8, !dbg !4378
  %opacity587 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %372, i32 0, i32 40, !dbg !4380
  %373 = load i16, i16* %opacity587, align 4, !dbg !4380
  %374 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !4381
  %375 = load i64, i64* %n, align 8, !dbg !4382
  %arrayidx588 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %374, i64 %375, !dbg !4381
  %376 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx588, align 8, !dbg !4381
  %fill589 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %376, i32 0, i32 5, !dbg !4383
  %opacity590 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %fill589, i32 0, i32 3, !dbg !4384
  store i16 %373, i16* %opacity590, align 2, !dbg !4385
  %377 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !4386
  %378 = load i64, i64* %n, align 8, !dbg !4387
  %arrayidx591 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %377, i64 %378, !dbg !4386
  %379 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx591, align 8, !dbg !4386
  %opacity592 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %379, i32 0, i32 40, !dbg !4388
  %380 = load i16, i16* %opacity592, align 4, !dbg !4388
  %381 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !4389
  %382 = load i64, i64* %n, align 8, !dbg !4390
  %arrayidx593 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %381, i64 %382, !dbg !4389
  %383 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx593, align 8, !dbg !4389
  %stroke = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %383, i32 0, i32 6, !dbg !4391
  %opacity594 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %stroke, i32 0, i32 3, !dbg !4392
  store i16 %380, i16* %opacity594, align 2, !dbg !4393
  br label %sw.epilog, !dbg !4394

if.end595:                                        ; preds = %if.end561
  store i32 0, i32* %status, align 4, !dbg !4395
  br label %sw.epilog, !dbg !4396

sw.bb596:                                         ; preds = %if.end118, %if.end118
  %arraydecay597 = getelementptr inbounds [4096 x i8], [4096 x i8]* %keyword, i64 0, i64 0, !dbg !4397
  %call598 = call i32 @LocaleCompare(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.52, i64 0, i64 0), i8* %arraydecay597), !dbg !4400
  %cmp599 = icmp eq i32 %call598, 0, !dbg !4401
  br i1 %cmp599, label %if.then601, label %if.end602, !dbg !4402

if.then601:                                       ; preds = %sw.bb596
  store i32 15, i32* %primitive_type, align 4, !dbg !4403
  br label %sw.epilog, !dbg !4405

if.end602:                                        ; preds = %sw.bb596
  %arraydecay603 = getelementptr inbounds [4096 x i8], [4096 x i8]* %keyword, i64 0, i64 0, !dbg !4406
  %call604 = call i32 @LocaleCompare(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.53, i64 0, i64 0), i8* %arraydecay603), !dbg !4408
  %cmp605 = icmp eq i32 %call604, 0, !dbg !4409
  br i1 %cmp605, label %if.then607, label %if.end608, !dbg !4410

if.then607:                                       ; preds = %if.end602
  store i32 1, i32* %primitive_type, align 4, !dbg !4411
  br label %sw.epilog, !dbg !4413

if.end608:                                        ; preds = %if.end602
  %arraydecay609 = getelementptr inbounds [4096 x i8], [4096 x i8]* %keyword, i64 0, i64 0, !dbg !4414
  %call610 = call i32 @LocaleCompare(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.54, i64 0, i64 0), i8* %arraydecay609), !dbg !4416
  %cmp611 = icmp eq i32 %call610, 0, !dbg !4417
  br i1 %cmp611, label %if.then613, label %if.end614, !dbg !4418

if.then613:                                       ; preds = %if.end608
  store i32 8, i32* %primitive_type, align 4, !dbg !4419
  br label %sw.epilog, !dbg !4421

if.end614:                                        ; preds = %if.end608
  %arraydecay615 = getelementptr inbounds [4096 x i8], [4096 x i8]* %keyword, i64 0, i64 0, !dbg !4422
  %call616 = call i32 @LocaleCompare(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.55, i64 0, i64 0), i8* %arraydecay615), !dbg !4424
  %cmp617 = icmp eq i32 %call616, 0, !dbg !4425
  br i1 %cmp617, label %if.then619, label %if.end620, !dbg !4426

if.then619:                                       ; preds = %if.end614
  store i32 9, i32* %primitive_type, align 4, !dbg !4427
  br label %sw.epilog, !dbg !4429

if.end620:                                        ; preds = %if.end614
  %arraydecay621 = getelementptr inbounds [4096 x i8], [4096 x i8]* %keyword, i64 0, i64 0, !dbg !4430
  %call622 = call i32 @LocaleCompare(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.56, i64 0, i64 0), i8* %arraydecay621), !dbg !4432
  %cmp623 = icmp eq i32 %call622, 0, !dbg !4433
  br i1 %cmp623, label %if.then625, label %if.end678, !dbg !4434

if.then625:                                       ; preds = %if.end620
  %384 = load i8*, i8** %q, align 8, !dbg !4435
  %385 = load i8*, i8** %token, align 8, !dbg !4437
  call void @GetMagickToken(i8* %384, i8** %q, i8* %385), !dbg !4438
  %386 = load i8*, i8** %token, align 8, !dbg !4439
  %call626 = call i32 @LocaleCompare(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.18, i64 0, i64 0), i8* %386), !dbg !4441
  %cmp627 = icmp eq i32 %call626, 0, !dbg !4442
  br i1 %cmp627, label %if.then629, label %if.end630, !dbg !4443

if.then629:                                       ; preds = %if.then625
  br label %sw.epilog, !dbg !4444

if.end630:                                        ; preds = %if.then625
  %387 = load i8*, i8** %token, align 8, !dbg !4445
  %call631 = call i32 @LocaleCompare(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.57, i64 0, i64 0), i8* %387), !dbg !4447
  %cmp632 = icmp eq i32 %call631, 0, !dbg !4448
  br i1 %cmp632, label %if.then634, label %if.end635, !dbg !4449

if.then634:                                       ; preds = %if.end630
  br label %sw.epilog, !dbg !4450

if.end635:                                        ; preds = %if.end630
  %388 = load i8*, i8** %token, align 8, !dbg !4451
  %call636 = call i32 @LocaleCompare(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.58, i64 0, i64 0), i8* %388), !dbg !4453
  %cmp637 = icmp eq i32 %call636, 0, !dbg !4454
  br i1 %cmp637, label %if.then639, label %if.end640, !dbg !4455

if.then639:                                       ; preds = %if.end635
  br label %sw.epilog, !dbg !4456

if.end640:                                        ; preds = %if.end635
  %389 = load i8*, i8** %token, align 8, !dbg !4457
  %call641 = call i32 @LocaleCompare(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.59, i64 0, i64 0), i8* %389), !dbg !4459
  %cmp642 = icmp eq i32 %call641, 0, !dbg !4460
  br i1 %cmp642, label %if.then644, label %if.end672, !dbg !4461

if.then644:                                       ; preds = %if.end640
  %390 = load i64, i64* %n, align 8, !dbg !4462
  %cmp645 = icmp sle i64 %390, 0, !dbg !4465
  br i1 %cmp645, label %if.then647, label %if.end650, !dbg !4466

if.then647:                                       ; preds = %if.then644
  %391 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4467
  %exception648 = getelementptr inbounds %struct._Image, %struct._Image* %391, i32 0, i32 58, !dbg !4469
  %392 = load i8*, i8** %token, align 8, !dbg !4470
  %call649 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %exception648, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2311, i32 460, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.60, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* %392), !dbg !4471
  store i64 0, i64* %n, align 8, !dbg !4472
  br label %sw.epilog, !dbg !4473

if.end650:                                        ; preds = %if.then644
  %393 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !4474
  %394 = load i64, i64* %n, align 8, !dbg !4476
  %arrayidx651 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %393, i64 %394, !dbg !4474
  %395 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx651, align 8, !dbg !4474
  %clip_mask652 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %395, i32 0, i32 37, !dbg !4477
  %396 = load i8*, i8** %clip_mask652, align 8, !dbg !4477
  %cmp653 = icmp ne i8* %396, null, !dbg !4478
  br i1 %cmp653, label %if.then655, label %if.end667, !dbg !4479

if.then655:                                       ; preds = %if.end650
  %397 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !4480
  %398 = load i64, i64* %n, align 8, !dbg !4482
  %arrayidx656 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %397, i64 %398, !dbg !4480
  %399 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx656, align 8, !dbg !4480
  %clip_mask657 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %399, i32 0, i32 37, !dbg !4483
  %400 = load i8*, i8** %clip_mask657, align 8, !dbg !4483
  %401 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !4484
  %402 = load i64, i64* %n, align 8, !dbg !4485
  %sub658 = sub nsw i64 %402, 1, !dbg !4486
  %arrayidx659 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %401, i64 %sub658, !dbg !4484
  %403 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx659, align 8, !dbg !4484
  %clip_mask660 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %403, i32 0, i32 37, !dbg !4487
  %404 = load i8*, i8** %clip_mask660, align 8, !dbg !4487
  %call661 = call i32 @LocaleCompare(i8* %400, i8* %404), !dbg !4488
  %cmp662 = icmp ne i32 %call661, 0, !dbg !4489
  br i1 %cmp662, label %if.then664, label %if.end666, !dbg !4490

if.then664:                                       ; preds = %if.then655
  %405 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4491
  %call665 = call i32 @SetImageClipMask(%struct._Image* %405, %struct._Image* null), !dbg !4492
  br label %if.end666, !dbg !4493

if.end666:                                        ; preds = %if.then664, %if.then655
  br label %if.end667, !dbg !4494

if.end667:                                        ; preds = %if.end666, %if.end650
  %406 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !4495
  %407 = load i64, i64* %n, align 8, !dbg !4496
  %arrayidx668 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %406, i64 %407, !dbg !4495
  %408 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx668, align 8, !dbg !4495
  %call669 = call %struct._DrawInfo* @DestroyDrawInfo(%struct._DrawInfo* %408), !dbg !4497
  %409 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !4498
  %410 = load i64, i64* %n, align 8, !dbg !4499
  %arrayidx670 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %409, i64 %410, !dbg !4498
  store %struct._DrawInfo* %call669, %struct._DrawInfo** %arrayidx670, align 8, !dbg !4500
  %411 = load i64, i64* %n, align 8, !dbg !4501
  %dec671 = add nsw i64 %411, -1, !dbg !4501
  store i64 %dec671, i64* %n, align 8, !dbg !4501
  br label %sw.epilog, !dbg !4502

if.end672:                                        ; preds = %if.end640
  %412 = load i8*, i8** %token, align 8, !dbg !4503
  %call673 = call i32 @LocaleCompare(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.61, i64 0, i64 0), i8* %412), !dbg !4505
  %cmp674 = icmp eq i32 %call673, 0, !dbg !4506
  br i1 %cmp674, label %if.then676, label %if.end677, !dbg !4507

if.then676:                                       ; preds = %if.end672
  br label %sw.epilog, !dbg !4508

if.end677:                                        ; preds = %if.end672
  store i32 0, i32* %status, align 4, !dbg !4509
  br label %sw.epilog, !dbg !4510

if.end678:                                        ; preds = %if.end620
  %arraydecay679 = getelementptr inbounds [4096 x i8], [4096 x i8]* %keyword, i64 0, i64 0, !dbg !4511
  %call680 = call i32 @LocaleCompare(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.62, i64 0, i64 0), i8* %arraydecay679), !dbg !4513
  %cmp681 = icmp eq i32 %call680, 0, !dbg !4514
  br i1 %cmp681, label %if.then683, label %if.end974, !dbg !4515

if.then683:                                       ; preds = %if.end678
  %413 = load i8*, i8** %q, align 8, !dbg !4516
  %414 = load i8*, i8** %token, align 8, !dbg !4518
  call void @GetMagickToken(i8* %413, i8** %q, i8* %414), !dbg !4519
  %415 = load i8*, i8** %token, align 8, !dbg !4520
  %call684 = call i32 @LocaleCompare(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.18, i64 0, i64 0), i8* %415), !dbg !4522
  %cmp685 = icmp eq i32 %call684, 0, !dbg !4523
  br i1 %cmp685, label %if.then687, label %if.end712, !dbg !4524

if.then687:                                       ; preds = %if.then683
  call void @llvm.dbg.declare(metadata [4096 x i8]* %name688, metadata !4525, metadata !DIExpression()), !dbg !4527
  %416 = load i8*, i8** %q, align 8, !dbg !4528
  %417 = load i8*, i8** %token, align 8, !dbg !4529
  call void @GetMagickToken(i8* %416, i8** %q, i8* %417), !dbg !4530
  %arraydecay689 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name688, i64 0, i64 0, !dbg !4531
  %418 = load i8*, i8** %token, align 8, !dbg !4532
  %call690 = call i64 (i8*, i64, i8*, ...) @FormatLocaleString(i8* %arraydecay689, i64 4096, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i64 0, i64 0), i8* %418), !dbg !4533
  %419 = load i8*, i8** %q, align 8, !dbg !4534
  store i8* %419, i8** %p, align 8, !dbg !4536
  br label %for.cond691, !dbg !4537

for.cond691:                                      ; preds = %if.then704, %if.then699, %if.then687
  %420 = load i8*, i8** %q, align 8, !dbg !4538
  %421 = load i8, i8* %420, align 1, !dbg !4540
  %conv692 = sext i8 %421 to i32, !dbg !4540
  %cmp693 = icmp ne i32 %conv692, 0, !dbg !4541
  br i1 %cmp693, label %for.body695, label %for.end706, !dbg !4542

for.body695:                                      ; preds = %for.cond691
  %422 = load i8*, i8** %q, align 8, !dbg !4543
  %423 = load i8*, i8** %token, align 8, !dbg !4545
  call void @GetMagickToken(i8* %422, i8** %q, i8* %423), !dbg !4546
  %424 = load i8*, i8** %token, align 8, !dbg !4547
  %call696 = call i32 @LocaleCompare(i8* %424, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.56, i64 0, i64 0)), !dbg !4549
  %cmp697 = icmp ne i32 %call696, 0, !dbg !4550
  br i1 %cmp697, label %if.then699, label %if.end700, !dbg !4551

if.then699:                                       ; preds = %for.body695
  br label %for.cond691, !dbg !4552, !llvm.loop !4553

if.end700:                                        ; preds = %for.body695
  %425 = load i8*, i8** %q, align 8, !dbg !4555
  %426 = load i8*, i8** %token, align 8, !dbg !4556
  call void @GetMagickToken(i8* %425, i8** null, i8* %426), !dbg !4557
  %427 = load i8*, i8** %token, align 8, !dbg !4558
  %call701 = call i32 @LocaleCompare(i8* %427, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.18, i64 0, i64 0)), !dbg !4560
  %cmp702 = icmp ne i32 %call701, 0, !dbg !4561
  br i1 %cmp702, label %if.then704, label %if.end705, !dbg !4562

if.then704:                                       ; preds = %if.end700
  br label %for.cond691, !dbg !4563, !llvm.loop !4553

if.end705:                                        ; preds = %if.end700
  br label %for.end706, !dbg !4564

for.end706:                                       ; preds = %if.end705, %for.cond691
  %428 = load i8*, i8** %token, align 8, !dbg !4565
  %429 = load i8*, i8** %p, align 8, !dbg !4566
  %430 = load i8*, i8** %q, align 8, !dbg !4567
  %431 = load i8*, i8** %p, align 8, !dbg !4568
  %sub.ptr.lhs.cast = ptrtoint i8* %430 to i64, !dbg !4569
  %sub.ptr.rhs.cast = ptrtoint i8* %431 to i64, !dbg !4569
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !4569
  %sub707 = sub nsw i64 %sub.ptr.sub, 4, !dbg !4570
  %add708 = add nsw i64 %sub707, 1, !dbg !4571
  %call709 = call i64 @CopyMagickString(i8* %428, i8* %429, i64 %add708), !dbg !4572
  %432 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4573
  %arraydecay710 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name688, i64 0, i64 0, !dbg !4574
  %433 = load i8*, i8** %token, align 8, !dbg !4575
  %call711 = call i32 @SetImageArtifact(%struct._Image* %432, i8* %arraydecay710, i8* %433), !dbg !4576
  %434 = load i8*, i8** %q, align 8, !dbg !4577
  %435 = load i8*, i8** %token, align 8, !dbg !4578
  call void @GetMagickToken(i8* %434, i8** %q, i8* %435), !dbg !4579
  br label %sw.epilog, !dbg !4580

if.end712:                                        ; preds = %if.then683
  %436 = load i8*, i8** %token, align 8, !dbg !4581
  %call713 = call i32 @LocaleCompare(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.58, i64 0, i64 0), i8* %436), !dbg !4583
  %cmp714 = icmp eq i32 %call713, 0, !dbg !4584
  br i1 %cmp714, label %if.then716, label %if.end868, !dbg !4585

if.then716:                                       ; preds = %if.end712
  call void @llvm.dbg.declare(metadata [8192 x i8]* %key717, metadata !4586, metadata !DIExpression()), !dbg !4588
  call void @llvm.dbg.declare(metadata [4096 x i8]* %name718, metadata !4589, metadata !DIExpression()), !dbg !4590
  call void @llvm.dbg.declare(metadata [4096 x i8]* %type, metadata !4591, metadata !DIExpression()), !dbg !4592
  call void @llvm.dbg.declare(metadata %struct._SegmentInfo* %segment, metadata !4593, metadata !DIExpression()), !dbg !4594
  %437 = load i8*, i8** %q, align 8, !dbg !4595
  %438 = load i8*, i8** %token, align 8, !dbg !4596
  call void @GetMagickToken(i8* %437, i8** %q, i8* %438), !dbg !4597
  %arraydecay719 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name718, i64 0, i64 0, !dbg !4598
  %439 = load i8*, i8** %token, align 8, !dbg !4599
  %call720 = call i64 @CopyMagickString(i8* %arraydecay719, i8* %439, i64 4096), !dbg !4600
  %440 = load i8*, i8** %q, align 8, !dbg !4601
  %441 = load i8*, i8** %token, align 8, !dbg !4602
  call void @GetMagickToken(i8* %440, i8** %q, i8* %441), !dbg !4603
  %arraydecay721 = getelementptr inbounds [4096 x i8], [4096 x i8]* %type, i64 0, i64 0, !dbg !4604
  %442 = load i8*, i8** %token, align 8, !dbg !4605
  %call722 = call i64 @CopyMagickString(i8* %arraydecay721, i8* %442, i64 4096), !dbg !4606
  %443 = load i8*, i8** %q, align 8, !dbg !4607
  %444 = load i8*, i8** %token, align 8, !dbg !4608
  call void @GetMagickToken(i8* %443, i8** %q, i8* %444), !dbg !4609
  %445 = load i8*, i8** %token, align 8, !dbg !4610
  %call723 = call double @StringToDouble(i8* %445, i8** null), !dbg !4611
  %x1724 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %segment, i32 0, i32 0, !dbg !4612
  store double %call723, double* %x1724, align 8, !dbg !4613
  %446 = load i8*, i8** %q, align 8, !dbg !4614
  %447 = load i8*, i8** %token, align 8, !dbg !4615
  call void @GetMagickToken(i8* %446, i8** %q, i8* %447), !dbg !4616
  %448 = load i8*, i8** %token, align 8, !dbg !4617
  %449 = load i8, i8* %448, align 1, !dbg !4619
  %conv725 = sext i8 %449 to i32, !dbg !4619
  %cmp726 = icmp eq i32 %conv725, 44, !dbg !4620
  br i1 %cmp726, label %if.then728, label %if.end729, !dbg !4621

if.then728:                                       ; preds = %if.then716
  %450 = load i8*, i8** %q, align 8, !dbg !4622
  %451 = load i8*, i8** %token, align 8, !dbg !4623
  call void @GetMagickToken(i8* %450, i8** %q, i8* %451), !dbg !4624
  br label %if.end729, !dbg !4624

if.end729:                                        ; preds = %if.then728, %if.then716
  %452 = load i8*, i8** %token, align 8, !dbg !4625
  %call730 = call double @StringToDouble(i8* %452, i8** null), !dbg !4626
  %y1731 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %segment, i32 0, i32 1, !dbg !4627
  store double %call730, double* %y1731, align 8, !dbg !4628
  %453 = load i8*, i8** %q, align 8, !dbg !4629
  %454 = load i8*, i8** %token, align 8, !dbg !4630
  call void @GetMagickToken(i8* %453, i8** %q, i8* %454), !dbg !4631
  %455 = load i8*, i8** %token, align 8, !dbg !4632
  %456 = load i8, i8* %455, align 1, !dbg !4634
  %conv732 = sext i8 %456 to i32, !dbg !4634
  %cmp733 = icmp eq i32 %conv732, 44, !dbg !4635
  br i1 %cmp733, label %if.then735, label %if.end736, !dbg !4636

if.then735:                                       ; preds = %if.end729
  %457 = load i8*, i8** %q, align 8, !dbg !4637
  %458 = load i8*, i8** %token, align 8, !dbg !4638
  call void @GetMagickToken(i8* %457, i8** %q, i8* %458), !dbg !4639
  br label %if.end736, !dbg !4639

if.end736:                                        ; preds = %if.then735, %if.end729
  %459 = load i8*, i8** %token, align 8, !dbg !4640
  %call737 = call double @StringToDouble(i8* %459, i8** null), !dbg !4641
  %x2738 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %segment, i32 0, i32 2, !dbg !4642
  store double %call737, double* %x2738, align 8, !dbg !4643
  %460 = load i8*, i8** %q, align 8, !dbg !4644
  %461 = load i8*, i8** %token, align 8, !dbg !4645
  call void @GetMagickToken(i8* %460, i8** %q, i8* %461), !dbg !4646
  %462 = load i8*, i8** %token, align 8, !dbg !4647
  %463 = load i8, i8* %462, align 1, !dbg !4649
  %conv739 = sext i8 %463 to i32, !dbg !4649
  %cmp740 = icmp eq i32 %conv739, 44, !dbg !4650
  br i1 %cmp740, label %if.then742, label %if.end743, !dbg !4651

if.then742:                                       ; preds = %if.end736
  %464 = load i8*, i8** %q, align 8, !dbg !4652
  %465 = load i8*, i8** %token, align 8, !dbg !4653
  call void @GetMagickToken(i8* %464, i8** %q, i8* %465), !dbg !4654
  br label %if.end743, !dbg !4654

if.end743:                                        ; preds = %if.then742, %if.end736
  %466 = load i8*, i8** %token, align 8, !dbg !4655
  %call744 = call double @StringToDouble(i8* %466, i8** null), !dbg !4656
  %y2745 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %segment, i32 0, i32 3, !dbg !4657
  store double %call744, double* %y2745, align 8, !dbg !4658
  %arraydecay746 = getelementptr inbounds [4096 x i8], [4096 x i8]* %type, i64 0, i64 0, !dbg !4659
  %call747 = call i32 @LocaleCompare(i8* %arraydecay746, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.63, i64 0, i64 0)), !dbg !4661
  %cmp748 = icmp eq i32 %call747, 0, !dbg !4662
  br i1 %cmp748, label %if.then750, label %if.end756, !dbg !4663

if.then750:                                       ; preds = %if.end743
  %467 = load i8*, i8** %q, align 8, !dbg !4664
  %468 = load i8*, i8** %token, align 8, !dbg !4666
  call void @GetMagickToken(i8* %467, i8** %q, i8* %468), !dbg !4667
  %469 = load i8*, i8** %token, align 8, !dbg !4668
  %470 = load i8, i8* %469, align 1, !dbg !4670
  %conv751 = sext i8 %470 to i32, !dbg !4670
  %cmp752 = icmp eq i32 %conv751, 44, !dbg !4671
  br i1 %cmp752, label %if.then754, label %if.end755, !dbg !4672

if.then754:                                       ; preds = %if.then750
  %471 = load i8*, i8** %q, align 8, !dbg !4673
  %472 = load i8*, i8** %token, align 8, !dbg !4674
  call void @GetMagickToken(i8* %471, i8** %q, i8* %472), !dbg !4675
  br label %if.end755, !dbg !4675

if.end755:                                        ; preds = %if.then754, %if.then750
  br label %if.end756, !dbg !4676

if.end756:                                        ; preds = %if.end755, %if.end743
  %473 = load i8*, i8** %q, align 8, !dbg !4677
  store i8* %473, i8** %p, align 8, !dbg !4679
  br label %for.cond757, !dbg !4680

for.cond757:                                      ; preds = %if.then770, %if.then765, %if.end756
  %474 = load i8*, i8** %q, align 8, !dbg !4681
  %475 = load i8, i8* %474, align 1, !dbg !4683
  %conv758 = sext i8 %475 to i32, !dbg !4683
  %cmp759 = icmp ne i32 %conv758, 0, !dbg !4684
  br i1 %cmp759, label %for.body761, label %for.end772, !dbg !4685

for.body761:                                      ; preds = %for.cond757
  %476 = load i8*, i8** %q, align 8, !dbg !4686
  %477 = load i8*, i8** %token, align 8, !dbg !4688
  call void @GetMagickToken(i8* %476, i8** %q, i8* %477), !dbg !4689
  %478 = load i8*, i8** %token, align 8, !dbg !4690
  %call762 = call i32 @LocaleCompare(i8* %478, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.56, i64 0, i64 0)), !dbg !4692
  %cmp763 = icmp ne i32 %call762, 0, !dbg !4693
  br i1 %cmp763, label %if.then765, label %if.end766, !dbg !4694

if.then765:                                       ; preds = %for.body761
  br label %for.cond757, !dbg !4695, !llvm.loop !4696

if.end766:                                        ; preds = %for.body761
  %479 = load i8*, i8** %q, align 8, !dbg !4698
  %480 = load i8*, i8** %token, align 8, !dbg !4699
  call void @GetMagickToken(i8* %479, i8** null, i8* %480), !dbg !4700
  %481 = load i8*, i8** %token, align 8, !dbg !4701
  %call767 = call i32 @LocaleCompare(i8* %481, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.58, i64 0, i64 0)), !dbg !4703
  %cmp768 = icmp ne i32 %call767, 0, !dbg !4704
  br i1 %cmp768, label %if.then770, label %if.end771, !dbg !4705

if.then770:                                       ; preds = %if.end766
  br label %for.cond757, !dbg !4706, !llvm.loop !4696

if.end771:                                        ; preds = %if.end766
  br label %for.end772, !dbg !4707

for.end772:                                       ; preds = %if.end771, %for.cond757
  %482 = load i8*, i8** %token, align 8, !dbg !4708
  %483 = load i8*, i8** %p, align 8, !dbg !4709
  %484 = load i8*, i8** %q, align 8, !dbg !4710
  %485 = load i8*, i8** %p, align 8, !dbg !4711
  %sub.ptr.lhs.cast773 = ptrtoint i8* %484 to i64, !dbg !4712
  %sub.ptr.rhs.cast774 = ptrtoint i8* %485 to i64, !dbg !4712
  %sub.ptr.sub775 = sub i64 %sub.ptr.lhs.cast773, %sub.ptr.rhs.cast774, !dbg !4712
  %sub776 = sub nsw i64 %sub.ptr.sub775, 4, !dbg !4713
  %add777 = add nsw i64 %sub776, 1, !dbg !4714
  %call778 = call i64 @CopyMagickString(i8* %482, i8* %483, i64 %add777), !dbg !4715
  %486 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !4716
  %487 = load i64, i64* %n, align 8, !dbg !4717
  %arrayidx779 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %486, i64 %487, !dbg !4716
  %488 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx779, align 8, !dbg !4716
  %affine780 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %488, i32 0, i32 3, !dbg !4718
  %sx781 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %affine780, i32 0, i32 0, !dbg !4719
  %489 = load double, double* %sx781, align 8, !dbg !4719
  %x1782 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %segment, i32 0, i32 0, !dbg !4720
  %490 = load double, double* %x1782, align 8, !dbg !4720
  %mul783 = fmul double %489, %490, !dbg !4721
  %491 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !4722
  %492 = load i64, i64* %n, align 8, !dbg !4723
  %arrayidx784 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %491, i64 %492, !dbg !4722
  %493 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx784, align 8, !dbg !4722
  %affine785 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %493, i32 0, i32 3, !dbg !4724
  %ry786 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %affine785, i32 0, i32 2, !dbg !4725
  %494 = load double, double* %ry786, align 8, !dbg !4725
  %y1787 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %segment, i32 0, i32 1, !dbg !4726
  %495 = load double, double* %y1787, align 8, !dbg !4726
  %mul788 = fmul double %494, %495, !dbg !4727
  %add789 = fadd double %mul783, %mul788, !dbg !4728
  %496 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !4729
  %497 = load i64, i64* %n, align 8, !dbg !4730
  %arrayidx790 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %496, i64 %497, !dbg !4729
  %498 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx790, align 8, !dbg !4729
  %affine791 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %498, i32 0, i32 3, !dbg !4731
  %tx792 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %affine791, i32 0, i32 4, !dbg !4732
  %499 = load double, double* %tx792, align 8, !dbg !4732
  %add793 = fadd double %add789, %499, !dbg !4733
  %x1794 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds, i32 0, i32 0, !dbg !4734
  store double %add793, double* %x1794, align 8, !dbg !4735
  %500 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !4736
  %501 = load i64, i64* %n, align 8, !dbg !4737
  %arrayidx795 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %500, i64 %501, !dbg !4736
  %502 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx795, align 8, !dbg !4736
  %affine796 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %502, i32 0, i32 3, !dbg !4738
  %rx797 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %affine796, i32 0, i32 1, !dbg !4739
  %503 = load double, double* %rx797, align 8, !dbg !4739
  %x1798 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %segment, i32 0, i32 0, !dbg !4740
  %504 = load double, double* %x1798, align 8, !dbg !4740
  %mul799 = fmul double %503, %504, !dbg !4741
  %505 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !4742
  %506 = load i64, i64* %n, align 8, !dbg !4743
  %arrayidx800 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %505, i64 %506, !dbg !4742
  %507 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx800, align 8, !dbg !4742
  %affine801 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %507, i32 0, i32 3, !dbg !4744
  %sy802 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %affine801, i32 0, i32 3, !dbg !4745
  %508 = load double, double* %sy802, align 8, !dbg !4745
  %y1803 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %segment, i32 0, i32 1, !dbg !4746
  %509 = load double, double* %y1803, align 8, !dbg !4746
  %mul804 = fmul double %508, %509, !dbg !4747
  %add805 = fadd double %mul799, %mul804, !dbg !4748
  %510 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !4749
  %511 = load i64, i64* %n, align 8, !dbg !4750
  %arrayidx806 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %510, i64 %511, !dbg !4749
  %512 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx806, align 8, !dbg !4749
  %affine807 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %512, i32 0, i32 3, !dbg !4751
  %ty808 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %affine807, i32 0, i32 5, !dbg !4752
  %513 = load double, double* %ty808, align 8, !dbg !4752
  %add809 = fadd double %add805, %513, !dbg !4753
  %y1810 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds, i32 0, i32 1, !dbg !4754
  store double %add809, double* %y1810, align 8, !dbg !4755
  %514 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !4756
  %515 = load i64, i64* %n, align 8, !dbg !4757
  %arrayidx811 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %514, i64 %515, !dbg !4756
  %516 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx811, align 8, !dbg !4756
  %affine812 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %516, i32 0, i32 3, !dbg !4758
  %sx813 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %affine812, i32 0, i32 0, !dbg !4759
  %517 = load double, double* %sx813, align 8, !dbg !4759
  %x2814 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %segment, i32 0, i32 2, !dbg !4760
  %518 = load double, double* %x2814, align 8, !dbg !4760
  %mul815 = fmul double %517, %518, !dbg !4761
  %519 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !4762
  %520 = load i64, i64* %n, align 8, !dbg !4763
  %arrayidx816 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %519, i64 %520, !dbg !4762
  %521 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx816, align 8, !dbg !4762
  %affine817 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %521, i32 0, i32 3, !dbg !4764
  %ry818 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %affine817, i32 0, i32 2, !dbg !4765
  %522 = load double, double* %ry818, align 8, !dbg !4765
  %y2819 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %segment, i32 0, i32 3, !dbg !4766
  %523 = load double, double* %y2819, align 8, !dbg !4766
  %mul820 = fmul double %522, %523, !dbg !4767
  %add821 = fadd double %mul815, %mul820, !dbg !4768
  %524 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !4769
  %525 = load i64, i64* %n, align 8, !dbg !4770
  %arrayidx822 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %524, i64 %525, !dbg !4769
  %526 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx822, align 8, !dbg !4769
  %affine823 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %526, i32 0, i32 3, !dbg !4771
  %tx824 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %affine823, i32 0, i32 4, !dbg !4772
  %527 = load double, double* %tx824, align 8, !dbg !4772
  %add825 = fadd double %add821, %527, !dbg !4773
  %x2826 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds, i32 0, i32 2, !dbg !4774
  store double %add825, double* %x2826, align 8, !dbg !4775
  %528 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !4776
  %529 = load i64, i64* %n, align 8, !dbg !4777
  %arrayidx827 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %528, i64 %529, !dbg !4776
  %530 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx827, align 8, !dbg !4776
  %affine828 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %530, i32 0, i32 3, !dbg !4778
  %rx829 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %affine828, i32 0, i32 1, !dbg !4779
  %531 = load double, double* %rx829, align 8, !dbg !4779
  %x2830 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %segment, i32 0, i32 2, !dbg !4780
  %532 = load double, double* %x2830, align 8, !dbg !4780
  %mul831 = fmul double %531, %532, !dbg !4781
  %533 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !4782
  %534 = load i64, i64* %n, align 8, !dbg !4783
  %arrayidx832 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %533, i64 %534, !dbg !4782
  %535 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx832, align 8, !dbg !4782
  %affine833 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %535, i32 0, i32 3, !dbg !4784
  %sy834 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %affine833, i32 0, i32 3, !dbg !4785
  %536 = load double, double* %sy834, align 8, !dbg !4785
  %y2835 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %segment, i32 0, i32 3, !dbg !4786
  %537 = load double, double* %y2835, align 8, !dbg !4786
  %mul836 = fmul double %536, %537, !dbg !4787
  %add837 = fadd double %mul831, %mul836, !dbg !4788
  %538 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !4789
  %539 = load i64, i64* %n, align 8, !dbg !4790
  %arrayidx838 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %538, i64 %539, !dbg !4789
  %540 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx838, align 8, !dbg !4789
  %affine839 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %540, i32 0, i32 3, !dbg !4791
  %ty840 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %affine839, i32 0, i32 5, !dbg !4792
  %541 = load double, double* %ty840, align 8, !dbg !4792
  %add841 = fadd double %add837, %541, !dbg !4793
  %y2842 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds, i32 0, i32 3, !dbg !4794
  store double %add841, double* %y2842, align 8, !dbg !4795
  %arraydecay843 = getelementptr inbounds [8192 x i8], [8192 x i8]* %key717, i64 0, i64 0, !dbg !4796
  %arraydecay844 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name718, i64 0, i64 0, !dbg !4797
  %call845 = call i64 (i8*, i64, i8*, ...) @FormatLocaleString(i8* %arraydecay843, i64 4096, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i64 0, i64 0), i8* %arraydecay844), !dbg !4798
  %542 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4799
  %arraydecay846 = getelementptr inbounds [8192 x i8], [8192 x i8]* %key717, i64 0, i64 0, !dbg !4800
  %543 = load i8*, i8** %token, align 8, !dbg !4801
  %call847 = call i32 @SetImageArtifact(%struct._Image* %542, i8* %arraydecay846, i8* %543), !dbg !4802
  %arraydecay848 = getelementptr inbounds [8192 x i8], [8192 x i8]* %key717, i64 0, i64 0, !dbg !4803
  %arraydecay849 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name718, i64 0, i64 0, !dbg !4804
  %call850 = call i64 (i8*, i64, i8*, ...) @FormatLocaleString(i8* %arraydecay848, i64 4096, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.64, i64 0, i64 0), i8* %arraydecay849), !dbg !4805
  %arraydecay851 = getelementptr inbounds [4096 x i8], [4096 x i8]* %geometry, i64 0, i64 0, !dbg !4806
  %x2852 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds, i32 0, i32 2, !dbg !4807
  %544 = load double, double* %x2852, align 8, !dbg !4807
  %x1853 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds, i32 0, i32 0, !dbg !4808
  %545 = load double, double* %x1853, align 8, !dbg !4808
  %sub854 = fsub double %544, %545, !dbg !4809
  %add855 = fadd double %sub854, 1.000000e+00, !dbg !4810
  %546 = call double @llvm.fabs.f64(double %add855), !dbg !4811
  %call856 = call double @MagickMax(double %546, double 1.000000e+00), !dbg !4812
  %y2857 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds, i32 0, i32 3, !dbg !4813
  %547 = load double, double* %y2857, align 8, !dbg !4813
  %y1858 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds, i32 0, i32 1, !dbg !4814
  %548 = load double, double* %y1858, align 8, !dbg !4814
  %sub859 = fsub double %547, %548, !dbg !4815
  %add860 = fadd double %sub859, 1.000000e+00, !dbg !4816
  %549 = call double @llvm.fabs.f64(double %add860), !dbg !4817
  %call861 = call double @MagickMax(double %549, double 1.000000e+00), !dbg !4818
  %x1862 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds, i32 0, i32 0, !dbg !4819
  %550 = load double, double* %x1862, align 8, !dbg !4819
  %y1863 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds, i32 0, i32 1, !dbg !4820
  %551 = load double, double* %y1863, align 8, !dbg !4820
  %call864 = call i64 (i8*, i64, i8*, ...) @FormatLocaleString(i8* %arraydecay851, i64 4096, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.65, i64 0, i64 0), double %call856, double %call861, double %550, double %551), !dbg !4821
  %552 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4822
  %arraydecay865 = getelementptr inbounds [8192 x i8], [8192 x i8]* %key717, i64 0, i64 0, !dbg !4823
  %arraydecay866 = getelementptr inbounds [4096 x i8], [4096 x i8]* %geometry, i64 0, i64 0, !dbg !4824
  %call867 = call i32 @SetImageArtifact(%struct._Image* %552, i8* %arraydecay865, i8* %arraydecay866), !dbg !4825
  %553 = load i8*, i8** %q, align 8, !dbg !4826
  %554 = load i8*, i8** %token, align 8, !dbg !4827
  call void @GetMagickToken(i8* %553, i8** %q, i8* %554), !dbg !4828
  br label %sw.epilog, !dbg !4829

if.end868:                                        ; preds = %if.end712
  %555 = load i8*, i8** %token, align 8, !dbg !4830
  %call869 = call i32 @LocaleCompare(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.61, i64 0, i64 0), i8* %555), !dbg !4832
  %cmp870 = icmp eq i32 %call869, 0, !dbg !4833
  br i1 %cmp870, label %if.then872, label %if.end949, !dbg !4834

if.then872:                                       ; preds = %if.end868
  call void @llvm.dbg.declare(metadata %struct._RectangleInfo* %bounds873, metadata !4835, metadata !DIExpression()), !dbg !4837
  %556 = load i8*, i8** %q, align 8, !dbg !4838
  %557 = load i8*, i8** %token, align 8, !dbg !4839
  call void @GetMagickToken(i8* %556, i8** %q, i8* %557), !dbg !4840
  %arraydecay874 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !4841
  %558 = load i8*, i8** %token, align 8, !dbg !4842
  %call875 = call i64 @CopyMagickString(i8* %arraydecay874, i8* %558, i64 4096), !dbg !4843
  %559 = load i8*, i8** %q, align 8, !dbg !4844
  %560 = load i8*, i8** %token, align 8, !dbg !4845
  call void @GetMagickToken(i8* %559, i8** %q, i8* %560), !dbg !4846
  %561 = load i8*, i8** %token, align 8, !dbg !4847
  %call876 = call double @StringToDouble(i8* %561, i8** null), !dbg !4848
  %sub877 = fsub double %call876, 5.000000e-01, !dbg !4849
  %562 = call double @llvm.ceil.f64(double %sub877), !dbg !4850
  %conv878 = fptosi double %562 to i64, !dbg !4851
  %x879 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %bounds873, i32 0, i32 2, !dbg !4852
  store i64 %conv878, i64* %x879, align 8, !dbg !4853
  %563 = load i8*, i8** %q, align 8, !dbg !4854
  %564 = load i8*, i8** %token, align 8, !dbg !4855
  call void @GetMagickToken(i8* %563, i8** %q, i8* %564), !dbg !4856
  %565 = load i8*, i8** %token, align 8, !dbg !4857
  %566 = load i8, i8* %565, align 1, !dbg !4859
  %conv880 = sext i8 %566 to i32, !dbg !4859
  %cmp881 = icmp eq i32 %conv880, 44, !dbg !4860
  br i1 %cmp881, label %if.then883, label %if.end884, !dbg !4861

if.then883:                                       ; preds = %if.then872
  %567 = load i8*, i8** %q, align 8, !dbg !4862
  %568 = load i8*, i8** %token, align 8, !dbg !4863
  call void @GetMagickToken(i8* %567, i8** %q, i8* %568), !dbg !4864
  br label %if.end884, !dbg !4864

if.end884:                                        ; preds = %if.then883, %if.then872
  %569 = load i8*, i8** %token, align 8, !dbg !4865
  %call885 = call double @StringToDouble(i8* %569, i8** null), !dbg !4866
  %sub886 = fsub double %call885, 5.000000e-01, !dbg !4867
  %570 = call double @llvm.ceil.f64(double %sub886), !dbg !4868
  %conv887 = fptosi double %570 to i64, !dbg !4869
  %y = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %bounds873, i32 0, i32 3, !dbg !4870
  store i64 %conv887, i64* %y, align 8, !dbg !4871
  %571 = load i8*, i8** %q, align 8, !dbg !4872
  %572 = load i8*, i8** %token, align 8, !dbg !4873
  call void @GetMagickToken(i8* %571, i8** %q, i8* %572), !dbg !4874
  %573 = load i8*, i8** %token, align 8, !dbg !4875
  %574 = load i8, i8* %573, align 1, !dbg !4877
  %conv888 = sext i8 %574 to i32, !dbg !4877
  %cmp889 = icmp eq i32 %conv888, 44, !dbg !4878
  br i1 %cmp889, label %if.then891, label %if.end892, !dbg !4879

if.then891:                                       ; preds = %if.end884
  %575 = load i8*, i8** %q, align 8, !dbg !4880
  %576 = load i8*, i8** %token, align 8, !dbg !4881
  call void @GetMagickToken(i8* %575, i8** %q, i8* %576), !dbg !4882
  br label %if.end892, !dbg !4882

if.end892:                                        ; preds = %if.then891, %if.end884
  %577 = load i8*, i8** %token, align 8, !dbg !4883
  %call893 = call double @StringToDouble(i8* %577, i8** null), !dbg !4884
  %add894 = fadd double %call893, 5.000000e-01, !dbg !4885
  %578 = call double @llvm.floor.f64(double %add894), !dbg !4886
  %conv895 = fptoui double %578 to i64, !dbg !4887
  %width896 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %bounds873, i32 0, i32 0, !dbg !4888
  store i64 %conv895, i64* %width896, align 8, !dbg !4889
  %579 = load i8*, i8** %q, align 8, !dbg !4890
  %580 = load i8*, i8** %token, align 8, !dbg !4891
  call void @GetMagickToken(i8* %579, i8** %q, i8* %580), !dbg !4892
  %581 = load i8*, i8** %token, align 8, !dbg !4893
  %582 = load i8, i8* %581, align 1, !dbg !4895
  %conv897 = sext i8 %582 to i32, !dbg !4895
  %cmp898 = icmp eq i32 %conv897, 44, !dbg !4896
  br i1 %cmp898, label %if.then900, label %if.end901, !dbg !4897

if.then900:                                       ; preds = %if.end892
  %583 = load i8*, i8** %q, align 8, !dbg !4898
  %584 = load i8*, i8** %token, align 8, !dbg !4899
  call void @GetMagickToken(i8* %583, i8** %q, i8* %584), !dbg !4900
  br label %if.end901, !dbg !4900

if.end901:                                        ; preds = %if.then900, %if.end892
  %585 = load i8*, i8** %token, align 8, !dbg !4901
  %call902 = call double @StringToDouble(i8* %585, i8** null), !dbg !4902
  %add903 = fadd double %call902, 5.000000e-01, !dbg !4903
  %586 = call double @llvm.floor.f64(double %add903), !dbg !4904
  %conv904 = fptoui double %586 to i64, !dbg !4905
  %height905 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %bounds873, i32 0, i32 1, !dbg !4906
  store i64 %conv904, i64* %height905, align 8, !dbg !4907
  %587 = load i8*, i8** %q, align 8, !dbg !4908
  store i8* %587, i8** %p, align 8, !dbg !4910
  br label %for.cond906, !dbg !4911

for.cond906:                                      ; preds = %if.then919, %if.then914, %if.end901
  %588 = load i8*, i8** %q, align 8, !dbg !4912
  %589 = load i8, i8* %588, align 1, !dbg !4914
  %conv907 = sext i8 %589 to i32, !dbg !4914
  %cmp908 = icmp ne i32 %conv907, 0, !dbg !4915
  br i1 %cmp908, label %for.body910, label %for.end921, !dbg !4916

for.body910:                                      ; preds = %for.cond906
  %590 = load i8*, i8** %q, align 8, !dbg !4917
  %591 = load i8*, i8** %token, align 8, !dbg !4919
  call void @GetMagickToken(i8* %590, i8** %q, i8* %591), !dbg !4920
  %592 = load i8*, i8** %token, align 8, !dbg !4921
  %call911 = call i32 @LocaleCompare(i8* %592, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.56, i64 0, i64 0)), !dbg !4923
  %cmp912 = icmp ne i32 %call911, 0, !dbg !4924
  br i1 %cmp912, label %if.then914, label %if.end915, !dbg !4925

if.then914:                                       ; preds = %for.body910
  br label %for.cond906, !dbg !4926, !llvm.loop !4927

if.end915:                                        ; preds = %for.body910
  %593 = load i8*, i8** %q, align 8, !dbg !4929
  %594 = load i8*, i8** %token, align 8, !dbg !4930
  call void @GetMagickToken(i8* %593, i8** null, i8* %594), !dbg !4931
  %595 = load i8*, i8** %token, align 8, !dbg !4932
  %call916 = call i32 @LocaleCompare(i8* %595, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.61, i64 0, i64 0)), !dbg !4934
  %cmp917 = icmp ne i32 %call916, 0, !dbg !4935
  br i1 %cmp917, label %if.then919, label %if.end920, !dbg !4936

if.then919:                                       ; preds = %if.end915
  br label %for.cond906, !dbg !4937, !llvm.loop !4927

if.end920:                                        ; preds = %if.end915
  br label %for.end921, !dbg !4938

for.end921:                                       ; preds = %if.end920, %for.cond906
  %596 = load i8*, i8** %token, align 8, !dbg !4939
  %597 = load i8*, i8** %p, align 8, !dbg !4940
  %598 = load i8*, i8** %q, align 8, !dbg !4941
  %599 = load i8*, i8** %p, align 8, !dbg !4942
  %sub.ptr.lhs.cast922 = ptrtoint i8* %598 to i64, !dbg !4943
  %sub.ptr.rhs.cast923 = ptrtoint i8* %599 to i64, !dbg !4943
  %sub.ptr.sub924 = sub i64 %sub.ptr.lhs.cast922, %sub.ptr.rhs.cast923, !dbg !4943
  %sub925 = sub nsw i64 %sub.ptr.sub924, 4, !dbg !4944
  %add926 = add nsw i64 %sub925, 1, !dbg !4945
  %call927 = call i64 @CopyMagickString(i8* %596, i8* %597, i64 %add926), !dbg !4946
  %arraydecay928 = getelementptr inbounds [8192 x i8], [8192 x i8]* %key, i64 0, i64 0, !dbg !4947
  %arraydecay929 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !4948
  %call930 = call i64 (i8*, i64, i8*, ...) @FormatLocaleString(i8* %arraydecay928, i64 4096, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i64 0, i64 0), i8* %arraydecay929), !dbg !4949
  %600 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4950
  %arraydecay931 = getelementptr inbounds [8192 x i8], [8192 x i8]* %key, i64 0, i64 0, !dbg !4951
  %601 = load i8*, i8** %token, align 8, !dbg !4952
  %call932 = call i32 @SetImageArtifact(%struct._Image* %600, i8* %arraydecay931, i8* %601), !dbg !4953
  %arraydecay933 = getelementptr inbounds [8192 x i8], [8192 x i8]* %key, i64 0, i64 0, !dbg !4954
  %arraydecay934 = getelementptr inbounds [4096 x i8], [4096 x i8]* %name, i64 0, i64 0, !dbg !4955
  %call935 = call i64 (i8*, i64, i8*, ...) @FormatLocaleString(i8* %arraydecay933, i64 4096, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.64, i64 0, i64 0), i8* %arraydecay934), !dbg !4956
  %arraydecay936 = getelementptr inbounds [4096 x i8], [4096 x i8]* %geometry, i64 0, i64 0, !dbg !4957
  %width937 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %bounds873, i32 0, i32 0, !dbg !4958
  %602 = load i64, i64* %width937, align 8, !dbg !4958
  %conv938 = uitofp i64 %602 to double, !dbg !4959
  %height939 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %bounds873, i32 0, i32 1, !dbg !4960
  %603 = load i64, i64* %height939, align 8, !dbg !4960
  %conv940 = uitofp i64 %603 to double, !dbg !4961
  %x941 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %bounds873, i32 0, i32 2, !dbg !4962
  %604 = load i64, i64* %x941, align 8, !dbg !4962
  %conv942 = sitofp i64 %604 to double, !dbg !4963
  %y943 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %bounds873, i32 0, i32 3, !dbg !4964
  %605 = load i64, i64* %y943, align 8, !dbg !4964
  %conv944 = sitofp i64 %605 to double, !dbg !4965
  %call945 = call i64 (i8*, i64, i8*, ...) @FormatLocaleString(i8* %arraydecay936, i64 4096, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.66, i64 0, i64 0), double %conv938, double %conv940, double %conv942, double %conv944), !dbg !4966
  %606 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4967
  %arraydecay946 = getelementptr inbounds [8192 x i8], [8192 x i8]* %key, i64 0, i64 0, !dbg !4968
  %arraydecay947 = getelementptr inbounds [4096 x i8], [4096 x i8]* %geometry, i64 0, i64 0, !dbg !4969
  %call948 = call i32 @SetImageArtifact(%struct._Image* %606, i8* %arraydecay946, i8* %arraydecay947), !dbg !4970
  %607 = load i8*, i8** %q, align 8, !dbg !4971
  %608 = load i8*, i8** %token, align 8, !dbg !4972
  call void @GetMagickToken(i8* %607, i8** %q, i8* %608), !dbg !4973
  br label %sw.epilog, !dbg !4974

if.end949:                                        ; preds = %if.end868
  %609 = load i8*, i8** %token, align 8, !dbg !4975
  %call950 = call i32 @LocaleCompare(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.59, i64 0, i64 0), i8* %609), !dbg !4977
  %cmp951 = icmp eq i32 %call950, 0, !dbg !4978
  br i1 %cmp951, label %if.then953, label %if.end968, !dbg !4979

if.then953:                                       ; preds = %if.end949
  %610 = load i64, i64* %n, align 8, !dbg !4980
  %inc = add nsw i64 %610, 1, !dbg !4980
  store i64 %inc, i64* %n, align 8, !dbg !4980
  %611 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !4982
  %612 = bitcast %struct._DrawInfo** %611 to i8*, !dbg !4982
  %613 = load i64, i64* %n, align 8, !dbg !4983
  %add954 = add nsw i64 %613, 1, !dbg !4984
  %call955 = call i8* @ResizeQuantumMemory(i8* %612, i64 %add954, i64 8) #16, !dbg !4985
  %614 = bitcast i8* %call955 to %struct._DrawInfo**, !dbg !4986
  store %struct._DrawInfo** %614, %struct._DrawInfo*** %graphic_context, align 8, !dbg !4987
  %615 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !4988
  %cmp956 = icmp eq %struct._DrawInfo** %615, null, !dbg !4990
  br i1 %cmp956, label %if.then958, label %if.end963, !dbg !4991

if.then958:                                       ; preds = %if.then953
  %616 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4992
  %exception959 = getelementptr inbounds %struct._Image, %struct._Image* %616, i32 0, i32 58, !dbg !4994
  %617 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4995
  %filename960 = getelementptr inbounds %struct._Image, %struct._Image* %617, i32 0, i32 53, !dbg !4996
  %arraydecay961 = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename960, i64 0, i64 0, !dbg !4995
  %call962 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %exception959, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2477, i32 400, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* %arraydecay961), !dbg !4997
  br label %sw.epilog, !dbg !4998

if.end963:                                        ; preds = %if.then953
  %618 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !4999
  %619 = load i64, i64* %n, align 8, !dbg !5000
  %sub964 = sub nsw i64 %619, 1, !dbg !5001
  %arrayidx965 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %618, i64 %sub964, !dbg !4999
  %620 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx965, align 8, !dbg !4999
  %call966 = call %struct._DrawInfo* @CloneDrawInfo(%struct._ImageInfo* null, %struct._DrawInfo* %620), !dbg !5002
  %621 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !5003
  %622 = load i64, i64* %n, align 8, !dbg !5004
  %arrayidx967 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %621, i64 %622, !dbg !5003
  store %struct._DrawInfo* %call966, %struct._DrawInfo** %arrayidx967, align 8, !dbg !5005
  br label %sw.epilog, !dbg !5006

if.end968:                                        ; preds = %if.end949
  %623 = load i8*, i8** %token, align 8, !dbg !5007
  %call969 = call i32 @LocaleCompare(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.57, i64 0, i64 0), i8* %623), !dbg !5009
  %cmp970 = icmp eq i32 %call969, 0, !dbg !5010
  br i1 %cmp970, label %if.then972, label %if.end973, !dbg !5011

if.then972:                                       ; preds = %if.end968
  br label %sw.epilog, !dbg !5012

if.end973:                                        ; preds = %if.end968
  store i32 0, i32* %status, align 4, !dbg !5013
  br label %sw.epilog, !dbg !5014

if.end974:                                        ; preds = %if.end678
  store i32 0, i32* %status, align 4, !dbg !5015
  br label %sw.epilog, !dbg !5016

sw.bb975:                                         ; preds = %if.end118, %if.end118
  %arraydecay976 = getelementptr inbounds [4096 x i8], [4096 x i8]* %keyword, i64 0, i64 0, !dbg !5017
  %call977 = call i32 @LocaleCompare(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.67, i64 0, i64 0), i8* %arraydecay976), !dbg !5020
  %cmp978 = icmp eq i32 %call977, 0, !dbg !5021
  br i1 %cmp978, label %if.then980, label %if.end981, !dbg !5022

if.then980:                                       ; preds = %sw.bb975
  store i32 3, i32* %primitive_type, align 4, !dbg !5023
  br label %sw.epilog, !dbg !5025

if.end981:                                        ; preds = %sw.bb975
  %arraydecay982 = getelementptr inbounds [4096 x i8], [4096 x i8]* %keyword, i64 0, i64 0, !dbg !5026
  %call983 = call i32 @LocaleCompare(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.68, i64 0, i64 0), i8* %arraydecay982), !dbg !5028
  %cmp984 = icmp eq i32 %call983, 0, !dbg !5029
  br i1 %cmp984, label %if.then986, label %if.end1004, !dbg !5030

if.then986:                                       ; preds = %if.end981
  %624 = load i8*, i8** %q, align 8, !dbg !5031
  %625 = load i8*, i8** %token, align 8, !dbg !5033
  call void @GetMagickToken(i8* %624, i8** %q, i8* %625), !dbg !5034
  %626 = load i8*, i8** %token, align 8, !dbg !5035
  %call987 = call double @StringToDouble(i8* %626, i8** null), !dbg !5036
  store double %call987, double* %angle, align 8, !dbg !5037
  %627 = load double, double* %angle, align 8, !dbg !5038
  %call988 = call double @fmod(double %627, double 3.600000e+02) #17, !dbg !5039
  %call989 = call double @DegreesToRadians(double %call988), !dbg !5040
  %call990 = call double @cos(double %call989) #17, !dbg !5041
  %sx991 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %affine, i32 0, i32 0, !dbg !5042
  store double %call990, double* %sx991, align 8, !dbg !5043
  %628 = load double, double* %angle, align 8, !dbg !5044
  %call992 = call double @fmod(double %628, double 3.600000e+02) #17, !dbg !5045
  %call993 = call double @DegreesToRadians(double %call992), !dbg !5046
  %call994 = call double @sin(double %call993) #17, !dbg !5047
  %rx995 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %affine, i32 0, i32 1, !dbg !5048
  store double %call994, double* %rx995, align 8, !dbg !5049
  %629 = load double, double* %angle, align 8, !dbg !5050
  %call996 = call double @fmod(double %629, double 3.600000e+02) #17, !dbg !5051
  %call997 = call double @DegreesToRadians(double %call996), !dbg !5052
  %call998 = call double @sin(double %call997) #17, !dbg !5053
  %fneg = fneg double %call998, !dbg !5054
  %ry999 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %affine, i32 0, i32 2, !dbg !5055
  store double %fneg, double* %ry999, align 8, !dbg !5056
  %630 = load double, double* %angle, align 8, !dbg !5057
  %call1000 = call double @fmod(double %630, double 3.600000e+02) #17, !dbg !5058
  %call1001 = call double @DegreesToRadians(double %call1000), !dbg !5059
  %call1002 = call double @cos(double %call1001) #17, !dbg !5060
  %sy1003 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %affine, i32 0, i32 3, !dbg !5061
  store double %call1002, double* %sy1003, align 8, !dbg !5062
  br label %sw.epilog, !dbg !5063

if.end1004:                                       ; preds = %if.end981
  %arraydecay1005 = getelementptr inbounds [4096 x i8], [4096 x i8]* %keyword, i64 0, i64 0, !dbg !5064
  %call1006 = call i32 @LocaleCompare(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.69, i64 0, i64 0), i8* %arraydecay1005), !dbg !5066
  %cmp1007 = icmp eq i32 %call1006, 0, !dbg !5067
  br i1 %cmp1007, label %if.then1009, label %if.end1010, !dbg !5068

if.then1009:                                      ; preds = %if.end1004
  store i32 4, i32* %primitive_type, align 4, !dbg !5069
  br label %sw.epilog, !dbg !5071

if.end1010:                                       ; preds = %if.end1004
  store i32 0, i32* %status, align 4, !dbg !5072
  br label %sw.epilog, !dbg !5073

sw.bb1011:                                        ; preds = %if.end118, %if.end118
  %arraydecay1012 = getelementptr inbounds [4096 x i8], [4096 x i8]* %keyword, i64 0, i64 0, !dbg !5074
  %call1013 = call i32 @LocaleCompare(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.70, i64 0, i64 0), i8* %arraydecay1012), !dbg !5077
  %cmp1014 = icmp eq i32 %call1013, 0, !dbg !5078
  br i1 %cmp1014, label %if.then1016, label %if.end1026, !dbg !5079

if.then1016:                                      ; preds = %sw.bb1011
  %631 = load i8*, i8** %q, align 8, !dbg !5080
  %632 = load i8*, i8** %token, align 8, !dbg !5082
  call void @GetMagickToken(i8* %631, i8** %q, i8* %632), !dbg !5083
  %633 = load i8*, i8** %token, align 8, !dbg !5084
  %call1017 = call double @StringToDouble(i8* %633, i8** null), !dbg !5085
  %sx1018 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %affine, i32 0, i32 0, !dbg !5086
  store double %call1017, double* %sx1018, align 8, !dbg !5087
  %634 = load i8*, i8** %q, align 8, !dbg !5088
  %635 = load i8*, i8** %token, align 8, !dbg !5089
  call void @GetMagickToken(i8* %634, i8** %q, i8* %635), !dbg !5090
  %636 = load i8*, i8** %token, align 8, !dbg !5091
  %637 = load i8, i8* %636, align 1, !dbg !5093
  %conv1019 = sext i8 %637 to i32, !dbg !5093
  %cmp1020 = icmp eq i32 %conv1019, 44, !dbg !5094
  br i1 %cmp1020, label %if.then1022, label %if.end1023, !dbg !5095

if.then1022:                                      ; preds = %if.then1016
  %638 = load i8*, i8** %q, align 8, !dbg !5096
  %639 = load i8*, i8** %token, align 8, !dbg !5097
  call void @GetMagickToken(i8* %638, i8** %q, i8* %639), !dbg !5098
  br label %if.end1023, !dbg !5098

if.end1023:                                       ; preds = %if.then1022, %if.then1016
  %640 = load i8*, i8** %token, align 8, !dbg !5099
  %call1024 = call double @StringToDouble(i8* %640, i8** null), !dbg !5100
  %sy1025 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %affine, i32 0, i32 3, !dbg !5101
  store double %call1024, double* %sy1025, align 8, !dbg !5102
  br label %sw.epilog, !dbg !5103

if.end1026:                                       ; preds = %sw.bb1011
  %arraydecay1027 = getelementptr inbounds [4096 x i8], [4096 x i8]* %keyword, i64 0, i64 0, !dbg !5104
  %call1028 = call i32 @LocaleCompare(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.71, i64 0, i64 0), i8* %arraydecay1027), !dbg !5106
  %cmp1029 = icmp eq i32 %call1028, 0, !dbg !5107
  br i1 %cmp1029, label %if.then1031, label %if.end1036, !dbg !5108

if.then1031:                                      ; preds = %if.end1026
  %641 = load i8*, i8** %q, align 8, !dbg !5109
  %642 = load i8*, i8** %token, align 8, !dbg !5111
  call void @GetMagickToken(i8* %641, i8** %q, i8* %642), !dbg !5112
  %643 = load i8*, i8** %token, align 8, !dbg !5113
  %call1032 = call double @StringToDouble(i8* %643, i8** null), !dbg !5114
  store double %call1032, double* %angle, align 8, !dbg !5115
  %644 = load double, double* %angle, align 8, !dbg !5116
  %call1033 = call double @DegreesToRadians(double %644), !dbg !5117
  %call1034 = call double @sin(double %call1033) #17, !dbg !5118
  %ry1035 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %affine, i32 0, i32 2, !dbg !5119
  store double %call1034, double* %ry1035, align 8, !dbg !5120
  br label %sw.epilog, !dbg !5121

if.end1036:                                       ; preds = %if.end1026
  %arraydecay1037 = getelementptr inbounds [4096 x i8], [4096 x i8]* %keyword, i64 0, i64 0, !dbg !5122
  %call1038 = call i32 @LocaleCompare(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.72, i64 0, i64 0), i8* %arraydecay1037), !dbg !5124
  %cmp1039 = icmp eq i32 %call1038, 0, !dbg !5125
  br i1 %cmp1039, label %if.then1041, label %if.end1047, !dbg !5126

if.then1041:                                      ; preds = %if.end1036
  %645 = load i8*, i8** %q, align 8, !dbg !5127
  %646 = load i8*, i8** %token, align 8, !dbg !5129
  call void @GetMagickToken(i8* %645, i8** %q, i8* %646), !dbg !5130
  %647 = load i8*, i8** %token, align 8, !dbg !5131
  %call1042 = call double @StringToDouble(i8* %647, i8** null), !dbg !5132
  store double %call1042, double* %angle, align 8, !dbg !5133
  %648 = load double, double* %angle, align 8, !dbg !5134
  %call1043 = call double @DegreesToRadians(double %648), !dbg !5135
  %div = fdiv double %call1043, 2.000000e+00, !dbg !5136
  %call1044 = call double @tan(double %div) #17, !dbg !5137
  %fneg1045 = fneg double %call1044, !dbg !5138
  %rx1046 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %affine, i32 0, i32 1, !dbg !5139
  store double %fneg1045, double* %rx1046, align 8, !dbg !5140
  br label %sw.epilog, !dbg !5141

if.end1047:                                       ; preds = %if.end1036
  %arraydecay1048 = getelementptr inbounds [4096 x i8], [4096 x i8]* %keyword, i64 0, i64 0, !dbg !5142
  %call1049 = call i32 @LocaleCompare(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.73, i64 0, i64 0), i8* %arraydecay1048), !dbg !5144
  %cmp1050 = icmp eq i32 %call1049, 0, !dbg !5145
  br i1 %cmp1050, label %if.then1052, label %if.end1056, !dbg !5146

if.then1052:                                      ; preds = %if.end1047
  call void @llvm.dbg.declare(metadata %struct._PixelPacket* %stop_color, metadata !5147, metadata !DIExpression()), !dbg !5149
  %649 = load i8*, i8** %q, align 8, !dbg !5150
  %650 = load i8*, i8** %token, align 8, !dbg !5151
  call void @GetMagickToken(i8* %649, i8** %q, i8* %650), !dbg !5152
  %651 = load i8*, i8** %token, align 8, !dbg !5153
  %652 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5154
  %exception1053 = getelementptr inbounds %struct._Image, %struct._Image* %652, i32 0, i32 58, !dbg !5155
  %call1054 = call i32 @QueryColorDatabase(i8* %651, %struct._PixelPacket* %stop_color, %struct._ExceptionInfo* %exception1053), !dbg !5156
  %653 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5157
  %call1055 = call i32 @GradientImage(%struct._Image* %653, i32 1, i32 2, %struct._PixelPacket* %start_color, %struct._PixelPacket* %stop_color), !dbg !5158
  %654 = bitcast %struct._PixelPacket* %start_color to i8*, !dbg !5159
  %655 = bitcast %struct._PixelPacket* %stop_color to i8*, !dbg !5159
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %654, i8* align 2 %655, i64 8, i1 false), !dbg !5159
  %656 = load i8*, i8** %q, align 8, !dbg !5160
  %657 = load i8*, i8** %token, align 8, !dbg !5161
  call void @GetMagickToken(i8* %656, i8** %q, i8* %657), !dbg !5162
  br label %sw.epilog, !dbg !5163

if.end1056:                                       ; preds = %if.end1047
  %arraydecay1057 = getelementptr inbounds [4096 x i8], [4096 x i8]* %keyword, i64 0, i64 0, !dbg !5164
  %call1058 = call i32 @LocaleCompare(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.74, i64 0, i64 0), i8* %arraydecay1057), !dbg !5166
  %cmp1059 = icmp eq i32 %call1058, 0, !dbg !5167
  br i1 %cmp1059, label %if.then1061, label %if.end1093, !dbg !5168

if.then1061:                                      ; preds = %if.end1056
  %658 = load i8*, i8** %q, align 8, !dbg !5169
  %659 = load i8*, i8** %token, align 8, !dbg !5171
  call void @GetMagickToken(i8* %658, i8** %q, i8* %659), !dbg !5172
  %arraydecay1062 = getelementptr inbounds [4096 x i8], [4096 x i8]* %pattern, i64 0, i64 0, !dbg !5173
  %660 = load i8*, i8** %token, align 8, !dbg !5174
  %call1063 = call i64 (i8*, i64, i8*, ...) @FormatLocaleString(i8* %arraydecay1062, i64 4096, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i64 0, i64 0), i8* %660), !dbg !5175
  %661 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5176
  %arraydecay1064 = getelementptr inbounds [4096 x i8], [4096 x i8]* %pattern, i64 0, i64 0, !dbg !5178
  %call1065 = call i8* @GetImageArtifact(%struct._Image* %661, i8* %arraydecay1064), !dbg !5179
  %cmp1066 = icmp ne i8* %call1065, null, !dbg !5180
  br i1 %cmp1066, label %if.then1068, label %if.else1071, !dbg !5181

if.then1068:                                      ; preds = %if.then1061
  %662 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5182
  %663 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !5183
  %664 = load i8*, i8** %token, align 8, !dbg !5184
  %665 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !5185
  %666 = load i64, i64* %n, align 8, !dbg !5186
  %arrayidx1069 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %665, i64 %666, !dbg !5185
  %667 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx1069, align 8, !dbg !5185
  %stroke_pattern = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %667, i32 0, i32 11, !dbg !5187
  %call1070 = call i32 @DrawPatternPath(%struct._Image* %662, %struct._DrawInfo* %663, i8* %664, %struct._Image** %stroke_pattern), !dbg !5188
  br label %if.end1092, !dbg !5189

if.else1071:                                      ; preds = %if.then1061
  %668 = load i8*, i8** %token, align 8, !dbg !5190
  %669 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !5192
  %670 = load i64, i64* %n, align 8, !dbg !5193
  %arrayidx1072 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %669, i64 %670, !dbg !5192
  %671 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx1072, align 8, !dbg !5192
  %stroke1073 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %671, i32 0, i32 6, !dbg !5194
  %672 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5195
  %exception1074 = getelementptr inbounds %struct._Image, %struct._Image* %672, i32 0, i32 58, !dbg !5196
  %call1075 = call i32 @QueryColorDatabase(i8* %668, %struct._PixelPacket* %stroke1073, %struct._ExceptionInfo* %exception1074), !dbg !5197
  %673 = load i32, i32* %status, align 4, !dbg !5198
  %and1076 = and i32 %673, %call1075, !dbg !5198
  store i32 %and1076, i32* %status, align 4, !dbg !5198
  %674 = load i32, i32* %status, align 4, !dbg !5199
  %cmp1077 = icmp eq i32 %674, 0, !dbg !5201
  br i1 %cmp1077, label %if.then1079, label %if.end1091, !dbg !5202

if.then1079:                                      ; preds = %if.else1071
  call void @llvm.dbg.declare(metadata %struct._ImageInfo** %pattern_info1080, metadata !5203, metadata !DIExpression()), !dbg !5205
  %call1081 = call %struct._ImageInfo* @AcquireImageInfo(), !dbg !5206
  store %struct._ImageInfo* %call1081, %struct._ImageInfo** %pattern_info1080, align 8, !dbg !5207
  %675 = load %struct._ImageInfo*, %struct._ImageInfo** %pattern_info1080, align 8, !dbg !5208
  %filename1082 = getelementptr inbounds %struct._ImageInfo, %struct._ImageInfo* %675, i32 0, i32 51, !dbg !5209
  %arraydecay1083 = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename1082, i64 0, i64 0, !dbg !5208
  %676 = load i8*, i8** %token, align 8, !dbg !5210
  %call1084 = call i64 @CopyMagickString(i8* %arraydecay1083, i8* %676, i64 4096), !dbg !5211
  %677 = load %struct._ImageInfo*, %struct._ImageInfo** %pattern_info1080, align 8, !dbg !5212
  %678 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5213
  %exception1085 = getelementptr inbounds %struct._Image, %struct._Image* %678, i32 0, i32 58, !dbg !5214
  %call1086 = call %struct._Image* @ReadImage(%struct._ImageInfo* %677, %struct._ExceptionInfo* %exception1085), !dbg !5215
  %679 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !5216
  %680 = load i64, i64* %n, align 8, !dbg !5217
  %arrayidx1087 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %679, i64 %680, !dbg !5216
  %681 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx1087, align 8, !dbg !5216
  %stroke_pattern1088 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %681, i32 0, i32 11, !dbg !5218
  store %struct._Image* %call1086, %struct._Image** %stroke_pattern1088, align 8, !dbg !5219
  %682 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5220
  %exception1089 = getelementptr inbounds %struct._Image, %struct._Image* %682, i32 0, i32 58, !dbg !5221
  call void @CatchException(%struct._ExceptionInfo* %exception1089), !dbg !5222
  %683 = load %struct._ImageInfo*, %struct._ImageInfo** %pattern_info1080, align 8, !dbg !5223
  %call1090 = call %struct._ImageInfo* @DestroyImageInfo(%struct._ImageInfo* %683), !dbg !5224
  store %struct._ImageInfo* %call1090, %struct._ImageInfo** %pattern_info1080, align 8, !dbg !5225
  br label %if.end1091, !dbg !5226

if.end1091:                                       ; preds = %if.then1079, %if.else1071
  br label %if.end1092

if.end1092:                                       ; preds = %if.end1091, %if.then1068
  br label %sw.epilog, !dbg !5227

if.end1093:                                       ; preds = %if.end1056
  %arraydecay1094 = getelementptr inbounds [4096 x i8], [4096 x i8]* %keyword, i64 0, i64 0, !dbg !5228
  %call1095 = call i32 @LocaleCompare(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.75, i64 0, i64 0), i8* %arraydecay1094), !dbg !5230
  %cmp1096 = icmp eq i32 %call1095, 0, !dbg !5231
  br i1 %cmp1096, label %if.then1098, label %if.end1104, !dbg !5232

if.then1098:                                      ; preds = %if.end1093
  %684 = load i8*, i8** %q, align 8, !dbg !5233
  %685 = load i8*, i8** %token, align 8, !dbg !5235
  call void @GetMagickToken(i8* %684, i8** %q, i8* %685), !dbg !5236
  %686 = load i8*, i8** %token, align 8, !dbg !5237
  %call1099 = call i64 @StringToLong(i8* %686), !dbg !5238
  %cmp1100 = icmp ne i64 %call1099, 0, !dbg !5239
  %687 = zext i1 %cmp1100 to i64, !dbg !5238
  %cond1102 = select i1 %cmp1100, i32 1, i32 0, !dbg !5238
  %688 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !5240
  %689 = load i64, i64* %n, align 8, !dbg !5241
  %arrayidx1103 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %688, i64 %689, !dbg !5240
  %690 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx1103, align 8, !dbg !5240
  %stroke_antialias = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %690, i32 0, i32 12, !dbg !5242
  store i32 %cond1102, i32* %stroke_antialias, align 8, !dbg !5243
  br label %sw.epilog, !dbg !5244

if.end1104:                                       ; preds = %if.end1093
  %arraydecay1105 = getelementptr inbounds [4096 x i8], [4096 x i8]* %keyword, i64 0, i64 0, !dbg !5245
  %call1106 = call i32 @LocaleCompare(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.76, i64 0, i64 0), i8* %arraydecay1105), !dbg !5247
  %cmp1107 = icmp eq i32 %call1106, 0, !dbg !5248
  br i1 %cmp1107, label %if.then1109, label %if.end1198, !dbg !5249

if.then1109:                                      ; preds = %if.end1104
  %691 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !5250
  %692 = load i64, i64* %n, align 8, !dbg !5253
  %arrayidx1110 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %691, i64 %692, !dbg !5250
  %693 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx1110, align 8, !dbg !5250
  %dash_pattern = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %693, i32 0, i32 36, !dbg !5254
  %694 = load double*, double** %dash_pattern, align 8, !dbg !5254
  %cmp1111 = icmp ne double* %694, null, !dbg !5255
  br i1 %cmp1111, label %if.then1113, label %if.end1119, !dbg !5256

if.then1113:                                      ; preds = %if.then1109
  %695 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !5257
  %696 = load i64, i64* %n, align 8, !dbg !5258
  %arrayidx1114 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %695, i64 %696, !dbg !5257
  %697 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx1114, align 8, !dbg !5257
  %dash_pattern1115 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %697, i32 0, i32 36, !dbg !5259
  %698 = load double*, double** %dash_pattern1115, align 8, !dbg !5259
  %699 = bitcast double* %698 to i8*, !dbg !5257
  %call1116 = call i8* @RelinquishMagickMemory(i8* %699), !dbg !5260
  %700 = bitcast i8* %call1116 to double*, !dbg !5261
  %701 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !5262
  %702 = load i64, i64* %n, align 8, !dbg !5263
  %arrayidx1117 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %701, i64 %702, !dbg !5262
  %703 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx1117, align 8, !dbg !5262
  %dash_pattern1118 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %703, i32 0, i32 36, !dbg !5264
  store double* %700, double** %dash_pattern1118, align 8, !dbg !5265
  br label %if.end1119, !dbg !5262

if.end1119:                                       ; preds = %if.then1113, %if.then1109
  %704 = load i8*, i8** %q, align 8, !dbg !5266
  %call1120 = call i32 @IsPoint(i8* %704), !dbg !5268
  %cmp1121 = icmp ne i32 %call1120, 0, !dbg !5269
  br i1 %cmp1121, label %if.then1123, label %if.end1197, !dbg !5270

if.then1123:                                      ; preds = %if.end1119
  call void @llvm.dbg.declare(metadata i8** %p1124, metadata !5271, metadata !DIExpression()), !dbg !5273
  %705 = load i8*, i8** %q, align 8, !dbg !5274
  store i8* %705, i8** %p1124, align 8, !dbg !5275
  %706 = load i8*, i8** %p1124, align 8, !dbg !5276
  %707 = load i8*, i8** %token, align 8, !dbg !5277
  call void @GetMagickToken(i8* %706, i8** %p1124, i8* %707), !dbg !5278
  %708 = load i8*, i8** %token, align 8, !dbg !5279
  %709 = load i8, i8* %708, align 1, !dbg !5281
  %conv1125 = sext i8 %709 to i32, !dbg !5281
  %cmp1126 = icmp eq i32 %conv1125, 44, !dbg !5282
  br i1 %cmp1126, label %if.then1128, label %if.end1129, !dbg !5283

if.then1128:                                      ; preds = %if.then1123
  %710 = load i8*, i8** %p1124, align 8, !dbg !5284
  %711 = load i8*, i8** %token, align 8, !dbg !5285
  call void @GetMagickToken(i8* %710, i8** %p1124, i8* %711), !dbg !5286
  br label %if.end1129, !dbg !5286

if.end1129:                                       ; preds = %if.then1128, %if.then1123
  store i64 0, i64* %x, align 8, !dbg !5287
  br label %for.cond1130, !dbg !5289

for.cond1130:                                     ; preds = %for.inc1140, %if.end1129
  %712 = load i8*, i8** %token, align 8, !dbg !5290
  %call1131 = call i32 @IsPoint(i8* %712), !dbg !5292
  %cmp1132 = icmp ne i32 %call1131, 0, !dbg !5293
  br i1 %cmp1132, label %for.body1134, label %for.end1142, !dbg !5294

for.body1134:                                     ; preds = %for.cond1130
  %713 = load i8*, i8** %p1124, align 8, !dbg !5295
  %714 = load i8*, i8** %token, align 8, !dbg !5297
  call void @GetMagickToken(i8* %713, i8** %p1124, i8* %714), !dbg !5298
  %715 = load i8*, i8** %token, align 8, !dbg !5299
  %716 = load i8, i8* %715, align 1, !dbg !5301
  %conv1135 = sext i8 %716 to i32, !dbg !5301
  %cmp1136 = icmp eq i32 %conv1135, 44, !dbg !5302
  br i1 %cmp1136, label %if.then1138, label %if.end1139, !dbg !5303

if.then1138:                                      ; preds = %for.body1134
  %717 = load i8*, i8** %p1124, align 8, !dbg !5304
  %718 = load i8*, i8** %token, align 8, !dbg !5305
  call void @GetMagickToken(i8* %717, i8** %p1124, i8* %718), !dbg !5306
  br label %if.end1139, !dbg !5306

if.end1139:                                       ; preds = %if.then1138, %for.body1134
  br label %for.inc1140, !dbg !5307

for.inc1140:                                      ; preds = %if.end1139
  %719 = load i64, i64* %x, align 8, !dbg !5308
  %inc1141 = add nsw i64 %719, 1, !dbg !5308
  store i64 %inc1141, i64* %x, align 8, !dbg !5308
  br label %for.cond1130, !dbg !5309, !llvm.loop !5310

for.end1142:                                      ; preds = %for.cond1130
  %720 = load i64, i64* %x, align 8, !dbg !5312
  %mul1143 = mul i64 2, %720, !dbg !5313
  %add1144 = add i64 %mul1143, 1, !dbg !5314
  %call1145 = call i8* @AcquireQuantumMemory(i64 %add1144, i64 8) #14, !dbg !5315
  %721 = bitcast i8* %call1145 to double*, !dbg !5316
  %722 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !5317
  %723 = load i64, i64* %n, align 8, !dbg !5318
  %arrayidx1146 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %722, i64 %723, !dbg !5317
  %724 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx1146, align 8, !dbg !5317
  %dash_pattern1147 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %724, i32 0, i32 36, !dbg !5319
  store double* %721, double** %dash_pattern1147, align 8, !dbg !5320
  %725 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !5321
  %726 = load i64, i64* %n, align 8, !dbg !5323
  %arrayidx1148 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %725, i64 %726, !dbg !5321
  %727 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx1148, align 8, !dbg !5321
  %dash_pattern1149 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %727, i32 0, i32 36, !dbg !5324
  %728 = load double*, double** %dash_pattern1149, align 8, !dbg !5324
  %cmp1150 = icmp eq double* %728, null, !dbg !5325
  br i1 %cmp1150, label %if.then1152, label %if.end1157, !dbg !5326

if.then1152:                                      ; preds = %for.end1142
  %729 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5327
  %exception1153 = getelementptr inbounds %struct._Image, %struct._Image* %729, i32 0, i32 58, !dbg !5329
  %730 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5330
  %filename1154 = getelementptr inbounds %struct._Image, %struct._Image* %730, i32 0, i32 53, !dbg !5331
  %arraydecay1155 = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename1154, i64 0, i64 0, !dbg !5330
  %call1156 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %exception1153, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2619, i32 400, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* %arraydecay1155), !dbg !5332
  br label %sw.epilog, !dbg !5333

if.end1157:                                       ; preds = %for.end1142
  store i64 0, i64* %j, align 8, !dbg !5334
  br label %for.cond1158, !dbg !5336

for.cond1158:                                     ; preds = %for.inc1171, %if.end1157
  %731 = load i64, i64* %j, align 8, !dbg !5337
  %732 = load i64, i64* %x, align 8, !dbg !5339
  %cmp1159 = icmp slt i64 %731, %732, !dbg !5340
  br i1 %cmp1159, label %for.body1161, label %for.end1173, !dbg !5341

for.body1161:                                     ; preds = %for.cond1158
  %733 = load i8*, i8** %q, align 8, !dbg !5342
  %734 = load i8*, i8** %token, align 8, !dbg !5344
  call void @GetMagickToken(i8* %733, i8** %q, i8* %734), !dbg !5345
  %735 = load i8*, i8** %token, align 8, !dbg !5346
  %736 = load i8, i8* %735, align 1, !dbg !5348
  %conv1162 = sext i8 %736 to i32, !dbg !5348
  %cmp1163 = icmp eq i32 %conv1162, 44, !dbg !5349
  br i1 %cmp1163, label %if.then1165, label %if.end1166, !dbg !5350

if.then1165:                                      ; preds = %for.body1161
  %737 = load i8*, i8** %q, align 8, !dbg !5351
  %738 = load i8*, i8** %token, align 8, !dbg !5352
  call void @GetMagickToken(i8* %737, i8** %q, i8* %738), !dbg !5353
  br label %if.end1166, !dbg !5353

if.end1166:                                       ; preds = %if.then1165, %for.body1161
  %739 = load i8*, i8** %token, align 8, !dbg !5354
  %call1167 = call double @StringToDouble(i8* %739, i8** null), !dbg !5355
  %740 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !5356
  %741 = load i64, i64* %n, align 8, !dbg !5357
  %arrayidx1168 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %740, i64 %741, !dbg !5356
  %742 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx1168, align 8, !dbg !5356
  %dash_pattern1169 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %742, i32 0, i32 36, !dbg !5358
  %743 = load double*, double** %dash_pattern1169, align 8, !dbg !5358
  %744 = load i64, i64* %j, align 8, !dbg !5359
  %arrayidx1170 = getelementptr inbounds double, double* %743, i64 %744, !dbg !5356
  store double %call1167, double* %arrayidx1170, align 8, !dbg !5360
  br label %for.inc1171, !dbg !5361

for.inc1171:                                      ; preds = %if.end1166
  %745 = load i64, i64* %j, align 8, !dbg !5362
  %inc1172 = add nsw i64 %745, 1, !dbg !5362
  store i64 %inc1172, i64* %j, align 8, !dbg !5362
  br label %for.cond1158, !dbg !5363, !llvm.loop !5364

for.end1173:                                      ; preds = %for.cond1158
  %746 = load i64, i64* %x, align 8, !dbg !5366
  %and1174 = and i64 %746, 1, !dbg !5368
  %cmp1175 = icmp ne i64 %and1174, 0, !dbg !5369
  br i1 %cmp1175, label %if.then1177, label %if.end1193, !dbg !5370

if.then1177:                                      ; preds = %for.end1173
  br label %for.cond1178, !dbg !5371

for.cond1178:                                     ; preds = %for.inc1190, %if.then1177
  %747 = load i64, i64* %j, align 8, !dbg !5372
  %748 = load i64, i64* %x, align 8, !dbg !5375
  %mul1179 = mul nsw i64 2, %748, !dbg !5376
  %cmp1180 = icmp slt i64 %747, %mul1179, !dbg !5377
  br i1 %cmp1180, label %for.body1182, label %for.end1192, !dbg !5378

for.body1182:                                     ; preds = %for.cond1178
  %749 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !5379
  %750 = load i64, i64* %n, align 8, !dbg !5380
  %arrayidx1183 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %749, i64 %750, !dbg !5379
  %751 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx1183, align 8, !dbg !5379
  %dash_pattern1184 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %751, i32 0, i32 36, !dbg !5381
  %752 = load double*, double** %dash_pattern1184, align 8, !dbg !5381
  %753 = load i64, i64* %j, align 8, !dbg !5382
  %754 = load i64, i64* %x, align 8, !dbg !5383
  %sub1185 = sub nsw i64 %753, %754, !dbg !5384
  %arrayidx1186 = getelementptr inbounds double, double* %752, i64 %sub1185, !dbg !5379
  %755 = load double, double* %arrayidx1186, align 8, !dbg !5379
  %756 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !5385
  %757 = load i64, i64* %n, align 8, !dbg !5386
  %arrayidx1187 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %756, i64 %757, !dbg !5385
  %758 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx1187, align 8, !dbg !5385
  %dash_pattern1188 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %758, i32 0, i32 36, !dbg !5387
  %759 = load double*, double** %dash_pattern1188, align 8, !dbg !5387
  %760 = load i64, i64* %j, align 8, !dbg !5388
  %arrayidx1189 = getelementptr inbounds double, double* %759, i64 %760, !dbg !5385
  store double %755, double* %arrayidx1189, align 8, !dbg !5389
  br label %for.inc1190, !dbg !5385

for.inc1190:                                      ; preds = %for.body1182
  %761 = load i64, i64* %j, align 8, !dbg !5390
  %inc1191 = add nsw i64 %761, 1, !dbg !5390
  store i64 %inc1191, i64* %j, align 8, !dbg !5390
  br label %for.cond1178, !dbg !5391, !llvm.loop !5392

for.end1192:                                      ; preds = %for.cond1178
  br label %if.end1193, !dbg !5393

if.end1193:                                       ; preds = %for.end1192, %for.end1173
  %762 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !5394
  %763 = load i64, i64* %n, align 8, !dbg !5395
  %arrayidx1194 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %762, i64 %763, !dbg !5394
  %764 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx1194, align 8, !dbg !5394
  %dash_pattern1195 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %764, i32 0, i32 36, !dbg !5396
  %765 = load double*, double** %dash_pattern1195, align 8, !dbg !5396
  %766 = load i64, i64* %j, align 8, !dbg !5397
  %arrayidx1196 = getelementptr inbounds double, double* %765, i64 %766, !dbg !5394
  store double 0.000000e+00, double* %arrayidx1196, align 8, !dbg !5398
  br label %sw.epilog, !dbg !5399

if.end1197:                                       ; preds = %if.end1119
  %767 = load i8*, i8** %q, align 8, !dbg !5400
  %768 = load i8*, i8** %token, align 8, !dbg !5401
  call void @GetMagickToken(i8* %767, i8** %q, i8* %768), !dbg !5402
  br label %sw.epilog, !dbg !5403

if.end1198:                                       ; preds = %if.end1104
  %arraydecay1199 = getelementptr inbounds [4096 x i8], [4096 x i8]* %keyword, i64 0, i64 0, !dbg !5404
  %call1200 = call i32 @LocaleCompare(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.77, i64 0, i64 0), i8* %arraydecay1199), !dbg !5406
  %cmp1201 = icmp eq i32 %call1200, 0, !dbg !5407
  br i1 %cmp1201, label %if.then1203, label %if.end1206, !dbg !5408

if.then1203:                                      ; preds = %if.end1198
  %769 = load i8*, i8** %q, align 8, !dbg !5409
  %770 = load i8*, i8** %token, align 8, !dbg !5411
  call void @GetMagickToken(i8* %769, i8** %q, i8* %770), !dbg !5412
  %771 = load i8*, i8** %token, align 8, !dbg !5413
  %call1204 = call double @StringToDouble(i8* %771, i8** null), !dbg !5414
  %772 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !5415
  %773 = load i64, i64* %n, align 8, !dbg !5416
  %arrayidx1205 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %772, i64 %773, !dbg !5415
  %774 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx1205, align 8, !dbg !5415
  %dash_offset = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %774, i32 0, i32 18, !dbg !5417
  store double %call1204, double* %dash_offset, align 8, !dbg !5418
  br label %sw.epilog, !dbg !5419

if.end1206:                                       ; preds = %if.end1198
  %arraydecay1207 = getelementptr inbounds [4096 x i8], [4096 x i8]* %keyword, i64 0, i64 0, !dbg !5420
  %call1208 = call i32 @LocaleCompare(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.78, i64 0, i64 0), i8* %arraydecay1207), !dbg !5422
  %cmp1209 = icmp eq i32 %call1208, 0, !dbg !5423
  br i1 %cmp1209, label %if.then1211, label %if.end1220, !dbg !5424

if.then1211:                                      ; preds = %if.end1206
  call void @llvm.dbg.declare(metadata i64* %linecap, metadata !5425, metadata !DIExpression()), !dbg !5427
  %775 = load i8*, i8** %q, align 8, !dbg !5428
  %776 = load i8*, i8** %token, align 8, !dbg !5429
  call void @GetMagickToken(i8* %775, i8** %q, i8* %776), !dbg !5430
  %777 = load i8*, i8** %token, align 8, !dbg !5431
  %call1212 = call i64 @ParseCommandOption(i32 36, i32 0, i8* %777), !dbg !5432
  store i64 %call1212, i64* %linecap, align 8, !dbg !5433
  %778 = load i64, i64* %linecap, align 8, !dbg !5434
  %cmp1213 = icmp eq i64 %778, -1, !dbg !5436
  br i1 %cmp1213, label %if.then1215, label %if.end1216, !dbg !5437

if.then1215:                                      ; preds = %if.then1211
  store i32 0, i32* %status, align 4, !dbg !5438
  br label %sw.epilog, !dbg !5440

if.end1216:                                       ; preds = %if.then1211
  %779 = load i64, i64* %linecap, align 8, !dbg !5441
  %conv1217 = trunc i64 %779 to i32, !dbg !5442
  %780 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !5443
  %781 = load i64, i64* %n, align 8, !dbg !5444
  %arrayidx1218 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %780, i64 %781, !dbg !5443
  %782 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx1218, align 8, !dbg !5443
  %linecap1219 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %782, i32 0, i32 15, !dbg !5445
  store i32 %conv1217, i32* %linecap1219, align 4, !dbg !5446
  br label %sw.epilog, !dbg !5447

if.end1220:                                       ; preds = %if.end1206
  %arraydecay1221 = getelementptr inbounds [4096 x i8], [4096 x i8]* %keyword, i64 0, i64 0, !dbg !5448
  %call1222 = call i32 @LocaleCompare(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.79, i64 0, i64 0), i8* %arraydecay1221), !dbg !5450
  %cmp1223 = icmp eq i32 %call1222, 0, !dbg !5451
  br i1 %cmp1223, label %if.then1225, label %if.end1234, !dbg !5452

if.then1225:                                      ; preds = %if.end1220
  call void @llvm.dbg.declare(metadata i64* %linejoin, metadata !5453, metadata !DIExpression()), !dbg !5455
  %783 = load i8*, i8** %q, align 8, !dbg !5456
  %784 = load i8*, i8** %token, align 8, !dbg !5457
  call void @GetMagickToken(i8* %783, i8** %q, i8* %784), !dbg !5458
  %785 = load i8*, i8** %token, align 8, !dbg !5459
  %call1226 = call i64 @ParseCommandOption(i32 37, i32 0, i8* %785), !dbg !5460
  store i64 %call1226, i64* %linejoin, align 8, !dbg !5461
  %786 = load i64, i64* %linejoin, align 8, !dbg !5462
  %cmp1227 = icmp eq i64 %786, -1, !dbg !5464
  br i1 %cmp1227, label %if.then1229, label %if.end1230, !dbg !5465

if.then1229:                                      ; preds = %if.then1225
  store i32 0, i32* %status, align 4, !dbg !5466
  br label %sw.epilog, !dbg !5468

if.end1230:                                       ; preds = %if.then1225
  %787 = load i64, i64* %linejoin, align 8, !dbg !5469
  %conv1231 = trunc i64 %787 to i32, !dbg !5470
  %788 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !5471
  %789 = load i64, i64* %n, align 8, !dbg !5472
  %arrayidx1232 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %788, i64 %789, !dbg !5471
  %790 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx1232, align 8, !dbg !5471
  %linejoin1233 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %790, i32 0, i32 16, !dbg !5473
  store i32 %conv1231, i32* %linejoin1233, align 8, !dbg !5474
  br label %sw.epilog, !dbg !5475

if.end1234:                                       ; preds = %if.end1220
  %arraydecay1235 = getelementptr inbounds [4096 x i8], [4096 x i8]* %keyword, i64 0, i64 0, !dbg !5476
  %call1236 = call i32 @LocaleCompare(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.80, i64 0, i64 0), i8* %arraydecay1235), !dbg !5478
  %cmp1237 = icmp eq i32 %call1236, 0, !dbg !5479
  br i1 %cmp1237, label %if.then1239, label %if.end1242, !dbg !5480

if.then1239:                                      ; preds = %if.end1234
  %791 = load i8*, i8** %q, align 8, !dbg !5481
  %792 = load i8*, i8** %token, align 8, !dbg !5483
  call void @GetMagickToken(i8* %791, i8** %q, i8* %792), !dbg !5484
  %793 = load i8*, i8** %token, align 8, !dbg !5485
  %call1240 = call i64 @StringToUnsignedLong(i8* %793), !dbg !5486
  %794 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !5487
  %795 = load i64, i64* %n, align 8, !dbg !5488
  %arrayidx1241 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %794, i64 %795, !dbg !5487
  %796 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx1241, align 8, !dbg !5487
  %miterlimit = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %796, i32 0, i32 17, !dbg !5489
  store i64 %call1240, i64* %miterlimit, align 8, !dbg !5490
  br label %sw.epilog, !dbg !5491

if.end1242:                                       ; preds = %if.end1234
  %arraydecay1243 = getelementptr inbounds [4096 x i8], [4096 x i8]* %keyword, i64 0, i64 0, !dbg !5492
  %call1244 = call i32 @LocaleCompare(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.81, i64 0, i64 0), i8* %arraydecay1243), !dbg !5494
  %cmp1245 = icmp eq i32 %call1244, 0, !dbg !5495
  br i1 %cmp1245, label %if.then1247, label %if.end1261, !dbg !5496

if.then1247:                                      ; preds = %if.end1242
  %797 = load i8*, i8** %q, align 8, !dbg !5497
  %798 = load i8*, i8** %token, align 8, !dbg !5499
  call void @GetMagickToken(i8* %797, i8** %q, i8* %798), !dbg !5500
  %799 = load i8*, i8** %token, align 8, !dbg !5501
  %call1248 = call i8* @strchr(i8* %799, i32 37) #15, !dbg !5502
  %cmp1249 = icmp ne i8* %call1248, null, !dbg !5503
  %800 = zext i1 %cmp1249 to i64, !dbg !5502
  %cond1251 = select i1 %cmp1249, double 1.000000e-02, double 1.000000e+00, !dbg !5502
  store double %cond1251, double* %factor, align 8, !dbg !5504
  %801 = load double, double* %factor, align 8, !dbg !5505
  %802 = load i8*, i8** %token, align 8, !dbg !5506
  %call1252 = call double @StringToDouble(i8* %802, i8** null), !dbg !5507
  %mul1253 = fmul double %801, %call1252, !dbg !5508
  %sub1254 = fsub double 1.000000e+00, %mul1253, !dbg !5509
  %mul1255 = fmul double 6.553500e+04, %sub1254, !dbg !5510
  %conv1256 = fptrunc double %mul1255 to float, !dbg !5511
  %call1257 = call zeroext i16 @ClampToQuantum(float %conv1256), !dbg !5512
  %803 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !5513
  %804 = load i64, i64* %n, align 8, !dbg !5514
  %arrayidx1258 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %803, i64 %804, !dbg !5513
  %805 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx1258, align 8, !dbg !5513
  %stroke1259 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %805, i32 0, i32 6, !dbg !5515
  %opacity1260 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %stroke1259, i32 0, i32 3, !dbg !5516
  store i16 %call1257, i16* %opacity1260, align 2, !dbg !5517
  br label %sw.epilog, !dbg !5518

if.end1261:                                       ; preds = %if.end1242
  %arraydecay1262 = getelementptr inbounds [4096 x i8], [4096 x i8]* %keyword, i64 0, i64 0, !dbg !5519
  %call1263 = call i32 @LocaleCompare(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.82, i64 0, i64 0), i8* %arraydecay1262), !dbg !5521
  %cmp1264 = icmp eq i32 %call1263, 0, !dbg !5522
  br i1 %cmp1264, label %if.then1266, label %if.end1269, !dbg !5523

if.then1266:                                      ; preds = %if.end1261
  %806 = load i8*, i8** %q, align 8, !dbg !5524
  %807 = load i8*, i8** %token, align 8, !dbg !5526
  call void @GetMagickToken(i8* %806, i8** %q, i8* %807), !dbg !5527
  %808 = load i8*, i8** %token, align 8, !dbg !5528
  %call1267 = call double @StringToDouble(i8* %808, i8** null), !dbg !5529
  %809 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !5530
  %810 = load i64, i64* %n, align 8, !dbg !5531
  %arrayidx1268 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %809, i64 %810, !dbg !5530
  %811 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx1268, align 8, !dbg !5530
  %stroke_width = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %811, i32 0, i32 7, !dbg !5532
  store double %call1267, double* %stroke_width, align 8, !dbg !5533
  br label %sw.epilog, !dbg !5534

if.end1269:                                       ; preds = %if.end1261
  store i32 0, i32* %status, align 4, !dbg !5535
  br label %sw.epilog, !dbg !5536

sw.bb1270:                                        ; preds = %if.end118, %if.end118
  %arraydecay1271 = getelementptr inbounds [4096 x i8], [4096 x i8]* %keyword, i64 0, i64 0, !dbg !5537
  %call1272 = call i32 @LocaleCompare(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.83, i64 0, i64 0), i8* %arraydecay1271), !dbg !5540
  %cmp1273 = icmp eq i32 %call1272, 0, !dbg !5541
  br i1 %cmp1273, label %if.then1275, label %if.end1276, !dbg !5542

if.then1275:                                      ; preds = %sw.bb1270
  store i32 13, i32* %primitive_type, align 4, !dbg !5543
  br label %sw.epilog, !dbg !5545

if.end1276:                                       ; preds = %sw.bb1270
  %arraydecay1277 = getelementptr inbounds [4096 x i8], [4096 x i8]* %keyword, i64 0, i64 0, !dbg !5546
  %call1278 = call i32 @LocaleCompare(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.84, i64 0, i64 0), i8* %arraydecay1277), !dbg !5548
  %cmp1279 = icmp eq i32 %call1278, 0, !dbg !5549
  br i1 %cmp1279, label %if.then1281, label %if.end1290, !dbg !5550

if.then1281:                                      ; preds = %if.end1276
  call void @llvm.dbg.declare(metadata i64* %align, metadata !5551, metadata !DIExpression()), !dbg !5553
  %812 = load i8*, i8** %q, align 8, !dbg !5554
  %813 = load i8*, i8** %token, align 8, !dbg !5555
  call void @GetMagickToken(i8* %812, i8** %q, i8* %813), !dbg !5556
  %814 = load i8*, i8** %token, align 8, !dbg !5557
  %call1282 = call i64 @ParseCommandOption(i32 0, i32 0, i8* %814), !dbg !5558
  store i64 %call1282, i64* %align, align 8, !dbg !5559
  %815 = load i64, i64* %align, align 8, !dbg !5560
  %cmp1283 = icmp eq i64 %815, -1, !dbg !5562
  br i1 %cmp1283, label %if.then1285, label %if.end1286, !dbg !5563

if.then1285:                                      ; preds = %if.then1281
  store i32 0, i32* %status, align 4, !dbg !5564
  br label %sw.epilog, !dbg !5566

if.end1286:                                       ; preds = %if.then1281
  %816 = load i64, i64* %align, align 8, !dbg !5567
  %conv1287 = trunc i64 %816 to i32, !dbg !5568
  %817 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !5569
  %818 = load i64, i64* %n, align 8, !dbg !5570
  %arrayidx1288 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %817, i64 %818, !dbg !5569
  %819 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx1288, align 8, !dbg !5569
  %align1289 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %819, i32 0, i32 32, !dbg !5571
  store i32 %conv1287, i32* %align1289, align 8, !dbg !5572
  br label %sw.epilog, !dbg !5573

if.end1290:                                       ; preds = %if.end1276
  %arraydecay1291 = getelementptr inbounds [4096 x i8], [4096 x i8]* %keyword, i64 0, i64 0, !dbg !5574
  %call1292 = call i32 @LocaleCompare(i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.85, i64 0, i64 0), i8* %arraydecay1291), !dbg !5576
  %cmp1293 = icmp eq i32 %call1292, 0, !dbg !5577
  br i1 %cmp1293, label %if.then1295, label %if.end1305, !dbg !5578

if.then1295:                                      ; preds = %if.end1290
  call void @llvm.dbg.declare(metadata i64* %align1296, metadata !5579, metadata !DIExpression()), !dbg !5581
  %820 = load i8*, i8** %q, align 8, !dbg !5582
  %821 = load i8*, i8** %token, align 8, !dbg !5583
  call void @GetMagickToken(i8* %820, i8** %q, i8* %821), !dbg !5584
  %822 = load i8*, i8** %token, align 8, !dbg !5585
  %call1297 = call i64 @ParseCommandOption(i32 0, i32 0, i8* %822), !dbg !5586
  store i64 %call1297, i64* %align1296, align 8, !dbg !5587
  %823 = load i64, i64* %align1296, align 8, !dbg !5588
  %cmp1298 = icmp eq i64 %823, -1, !dbg !5590
  br i1 %cmp1298, label %if.then1300, label %if.end1301, !dbg !5591

if.then1300:                                      ; preds = %if.then1295
  store i32 0, i32* %status, align 4, !dbg !5592
  br label %sw.epilog, !dbg !5594

if.end1301:                                       ; preds = %if.then1295
  %824 = load i64, i64* %align1296, align 8, !dbg !5595
  %conv1302 = trunc i64 %824 to i32, !dbg !5596
  %825 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !5597
  %826 = load i64, i64* %n, align 8, !dbg !5598
  %arrayidx1303 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %825, i64 %826, !dbg !5597
  %827 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx1303, align 8, !dbg !5597
  %align1304 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %827, i32 0, i32 32, !dbg !5599
  store i32 %conv1302, i32* %align1304, align 8, !dbg !5600
  br label %sw.epilog, !dbg !5601

if.end1305:                                       ; preds = %if.end1290
  %arraydecay1306 = getelementptr inbounds [4096 x i8], [4096 x i8]* %keyword, i64 0, i64 0, !dbg !5602
  %call1307 = call i32 @LocaleCompare(i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.86, i64 0, i64 0), i8* %arraydecay1306), !dbg !5604
  %cmp1308 = icmp eq i32 %call1307, 0, !dbg !5605
  br i1 %cmp1308, label %if.then1310, label %if.end1316, !dbg !5606

if.then1310:                                      ; preds = %if.end1305
  %828 = load i8*, i8** %q, align 8, !dbg !5607
  %829 = load i8*, i8** %token, align 8, !dbg !5609
  call void @GetMagickToken(i8* %828, i8** %q, i8* %829), !dbg !5610
  %830 = load i8*, i8** %token, align 8, !dbg !5611
  %call1311 = call i64 @StringToLong(i8* %830), !dbg !5612
  %cmp1312 = icmp ne i64 %call1311, 0, !dbg !5613
  %831 = zext i1 %cmp1312 to i64, !dbg !5612
  %cond1314 = select i1 %cmp1312, i32 1, i32 0, !dbg !5612
  %832 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !5614
  %833 = load i64, i64* %n, align 8, !dbg !5615
  %arrayidx1315 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %832, i64 %833, !dbg !5614
  %834 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx1315, align 8, !dbg !5614
  %text_antialias = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %834, i32 0, i32 13, !dbg !5616
  store i32 %cond1314, i32* %text_antialias, align 4, !dbg !5617
  br label %sw.epilog, !dbg !5618

if.end1316:                                       ; preds = %if.end1305
  %arraydecay1317 = getelementptr inbounds [4096 x i8], [4096 x i8]* %keyword, i64 0, i64 0, !dbg !5619
  %call1318 = call i32 @LocaleCompare(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.87, i64 0, i64 0), i8* %arraydecay1317), !dbg !5621
  %cmp1319 = icmp eq i32 %call1318, 0, !dbg !5622
  br i1 %cmp1319, label %if.then1321, label %if.end1325, !dbg !5623

if.then1321:                                      ; preds = %if.end1316
  %835 = load i8*, i8** %q, align 8, !dbg !5624
  %836 = load i8*, i8** %token, align 8, !dbg !5626
  call void @GetMagickToken(i8* %835, i8** %q, i8* %836), !dbg !5627
  %837 = load i8*, i8** %token, align 8, !dbg !5628
  %838 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !5629
  %839 = load i64, i64* %n, align 8, !dbg !5630
  %arrayidx1322 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %838, i64 %839, !dbg !5629
  %840 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx1322, align 8, !dbg !5629
  %undercolor = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %840, i32 0, i32 33, !dbg !5631
  %841 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5632
  %exception1323 = getelementptr inbounds %struct._Image, %struct._Image* %841, i32 0, i32 58, !dbg !5633
  %call1324 = call i32 @QueryColorDatabase(i8* %837, %struct._PixelPacket* %undercolor, %struct._ExceptionInfo* %exception1323), !dbg !5634
  br label %sw.epilog, !dbg !5635

if.end1325:                                       ; preds = %if.end1316
  %arraydecay1326 = getelementptr inbounds [4096 x i8], [4096 x i8]* %keyword, i64 0, i64 0, !dbg !5636
  %call1327 = call i32 @LocaleCompare(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.88, i64 0, i64 0), i8* %arraydecay1326), !dbg !5638
  %cmp1328 = icmp eq i32 %call1327, 0, !dbg !5639
  br i1 %cmp1328, label %if.then1330, label %if.end1340, !dbg !5640

if.then1330:                                      ; preds = %if.end1325
  %842 = load i8*, i8** %q, align 8, !dbg !5641
  %843 = load i8*, i8** %token, align 8, !dbg !5643
  call void @GetMagickToken(i8* %842, i8** %q, i8* %843), !dbg !5644
  %844 = load i8*, i8** %token, align 8, !dbg !5645
  %call1331 = call double @StringToDouble(i8* %844, i8** null), !dbg !5646
  %tx1332 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %affine, i32 0, i32 4, !dbg !5647
  store double %call1331, double* %tx1332, align 8, !dbg !5648
  %845 = load i8*, i8** %q, align 8, !dbg !5649
  %846 = load i8*, i8** %token, align 8, !dbg !5650
  call void @GetMagickToken(i8* %845, i8** %q, i8* %846), !dbg !5651
  %847 = load i8*, i8** %token, align 8, !dbg !5652
  %848 = load i8, i8* %847, align 1, !dbg !5654
  %conv1333 = sext i8 %848 to i32, !dbg !5654
  %cmp1334 = icmp eq i32 %conv1333, 44, !dbg !5655
  br i1 %cmp1334, label %if.then1336, label %if.end1337, !dbg !5656

if.then1336:                                      ; preds = %if.then1330
  %849 = load i8*, i8** %q, align 8, !dbg !5657
  %850 = load i8*, i8** %token, align 8, !dbg !5658
  call void @GetMagickToken(i8* %849, i8** %q, i8* %850), !dbg !5659
  br label %if.end1337, !dbg !5659

if.end1337:                                       ; preds = %if.then1336, %if.then1330
  %851 = load i8*, i8** %token, align 8, !dbg !5660
  %call1338 = call double @StringToDouble(i8* %851, i8** null), !dbg !5661
  %ty1339 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %affine, i32 0, i32 5, !dbg !5662
  store double %call1338, double* %ty1339, align 8, !dbg !5663
  br label %sw.epilog, !dbg !5664

if.end1340:                                       ; preds = %if.end1325
  store i32 0, i32* %status, align 4, !dbg !5665
  br label %sw.epilog, !dbg !5666

sw.bb1341:                                        ; preds = %if.end118, %if.end118
  %arraydecay1342 = getelementptr inbounds [4096 x i8], [4096 x i8]* %keyword, i64 0, i64 0, !dbg !5667
  %call1343 = call i32 @LocaleCompare(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.89, i64 0, i64 0), i8* %arraydecay1342), !dbg !5670
  %cmp1344 = icmp eq i32 %call1343, 0, !dbg !5671
  br i1 %cmp1344, label %if.then1346, label %if.end1386, !dbg !5672

if.then1346:                                      ; preds = %sw.bb1341
  %852 = load i8*, i8** %q, align 8, !dbg !5673
  %853 = load i8*, i8** %token, align 8, !dbg !5675
  call void @GetMagickToken(i8* %852, i8** %q, i8* %853), !dbg !5676
  %854 = load i8*, i8** %token, align 8, !dbg !5677
  %call1347 = call double @StringToDouble(i8* %854, i8** null), !dbg !5678
  %sub1348 = fsub double %call1347, 5.000000e-01, !dbg !5679
  %855 = call double @llvm.ceil.f64(double %sub1348), !dbg !5680
  %conv1349 = fptosi double %855 to i64, !dbg !5681
  %856 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !5682
  %857 = load i64, i64* %n, align 8, !dbg !5683
  %arrayidx1350 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %856, i64 %857, !dbg !5682
  %858 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx1350, align 8, !dbg !5682
  %viewbox1351 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %858, i32 0, i32 2, !dbg !5684
  %x1352 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %viewbox1351, i32 0, i32 2, !dbg !5685
  store i64 %conv1349, i64* %x1352, align 8, !dbg !5686
  %859 = load i8*, i8** %q, align 8, !dbg !5687
  %860 = load i8*, i8** %token, align 8, !dbg !5688
  call void @GetMagickToken(i8* %859, i8** %q, i8* %860), !dbg !5689
  %861 = load i8*, i8** %token, align 8, !dbg !5690
  %862 = load i8, i8* %861, align 1, !dbg !5692
  %conv1353 = sext i8 %862 to i32, !dbg !5692
  %cmp1354 = icmp eq i32 %conv1353, 44, !dbg !5693
  br i1 %cmp1354, label %if.then1356, label %if.end1357, !dbg !5694

if.then1356:                                      ; preds = %if.then1346
  %863 = load i8*, i8** %q, align 8, !dbg !5695
  %864 = load i8*, i8** %token, align 8, !dbg !5696
  call void @GetMagickToken(i8* %863, i8** %q, i8* %864), !dbg !5697
  br label %if.end1357, !dbg !5697

if.end1357:                                       ; preds = %if.then1356, %if.then1346
  %865 = load i8*, i8** %token, align 8, !dbg !5698
  %call1358 = call double @StringToDouble(i8* %865, i8** null), !dbg !5699
  %sub1359 = fsub double %call1358, 5.000000e-01, !dbg !5700
  %866 = call double @llvm.ceil.f64(double %sub1359), !dbg !5701
  %conv1360 = fptosi double %866 to i64, !dbg !5702
  %867 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !5703
  %868 = load i64, i64* %n, align 8, !dbg !5704
  %arrayidx1361 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %867, i64 %868, !dbg !5703
  %869 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx1361, align 8, !dbg !5703
  %viewbox1362 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %869, i32 0, i32 2, !dbg !5705
  %y1363 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %viewbox1362, i32 0, i32 3, !dbg !5706
  store i64 %conv1360, i64* %y1363, align 8, !dbg !5707
  %870 = load i8*, i8** %q, align 8, !dbg !5708
  %871 = load i8*, i8** %token, align 8, !dbg !5709
  call void @GetMagickToken(i8* %870, i8** %q, i8* %871), !dbg !5710
  %872 = load i8*, i8** %token, align 8, !dbg !5711
  %873 = load i8, i8* %872, align 1, !dbg !5713
  %conv1364 = sext i8 %873 to i32, !dbg !5713
  %cmp1365 = icmp eq i32 %conv1364, 44, !dbg !5714
  br i1 %cmp1365, label %if.then1367, label %if.end1368, !dbg !5715

if.then1367:                                      ; preds = %if.end1357
  %874 = load i8*, i8** %q, align 8, !dbg !5716
  %875 = load i8*, i8** %token, align 8, !dbg !5717
  call void @GetMagickToken(i8* %874, i8** %q, i8* %875), !dbg !5718
  br label %if.end1368, !dbg !5718

if.end1368:                                       ; preds = %if.then1367, %if.end1357
  %876 = load i8*, i8** %token, align 8, !dbg !5719
  %call1369 = call double @StringToDouble(i8* %876, i8** null), !dbg !5720
  %add1370 = fadd double %call1369, 5.000000e-01, !dbg !5721
  %877 = call double @llvm.floor.f64(double %add1370), !dbg !5722
  %conv1371 = fptoui double %877 to i64, !dbg !5723
  %878 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !5724
  %879 = load i64, i64* %n, align 8, !dbg !5725
  %arrayidx1372 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %878, i64 %879, !dbg !5724
  %880 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx1372, align 8, !dbg !5724
  %viewbox1373 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %880, i32 0, i32 2, !dbg !5726
  %width1374 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %viewbox1373, i32 0, i32 0, !dbg !5727
  store i64 %conv1371, i64* %width1374, align 8, !dbg !5728
  %881 = load i8*, i8** %q, align 8, !dbg !5729
  %882 = load i8*, i8** %token, align 8, !dbg !5730
  call void @GetMagickToken(i8* %881, i8** %q, i8* %882), !dbg !5731
  %883 = load i8*, i8** %token, align 8, !dbg !5732
  %884 = load i8, i8* %883, align 1, !dbg !5734
  %conv1375 = sext i8 %884 to i32, !dbg !5734
  %cmp1376 = icmp eq i32 %conv1375, 44, !dbg !5735
  br i1 %cmp1376, label %if.then1378, label %if.end1379, !dbg !5736

if.then1378:                                      ; preds = %if.end1368
  %885 = load i8*, i8** %q, align 8, !dbg !5737
  %886 = load i8*, i8** %token, align 8, !dbg !5738
  call void @GetMagickToken(i8* %885, i8** %q, i8* %886), !dbg !5739
  br label %if.end1379, !dbg !5739

if.end1379:                                       ; preds = %if.then1378, %if.end1368
  %887 = load i8*, i8** %token, align 8, !dbg !5740
  %call1380 = call double @StringToDouble(i8* %887, i8** null), !dbg !5741
  %add1381 = fadd double %call1380, 5.000000e-01, !dbg !5742
  %888 = call double @llvm.floor.f64(double %add1381), !dbg !5743
  %conv1382 = fptoui double %888 to i64, !dbg !5744
  %889 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !5745
  %890 = load i64, i64* %n, align 8, !dbg !5746
  %arrayidx1383 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %889, i64 %890, !dbg !5745
  %891 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx1383, align 8, !dbg !5745
  %viewbox1384 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %891, i32 0, i32 2, !dbg !5747
  %height1385 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %viewbox1384, i32 0, i32 1, !dbg !5748
  store i64 %conv1382, i64* %height1385, align 8, !dbg !5749
  br label %sw.epilog, !dbg !5750

if.end1386:                                       ; preds = %sw.bb1341
  store i32 0, i32* %status, align 4, !dbg !5751
  br label %sw.epilog, !dbg !5752

sw.default:                                       ; preds = %if.end118
  store i32 0, i32* %status, align 4, !dbg !5753
  br label %sw.epilog, !dbg !5755

sw.epilog:                                        ; preds = %sw.default, %if.end1386, %if.end1379, %if.end1340, %if.end1337, %if.then1321, %if.then1310, %if.end1301, %if.then1300, %if.end1286, %if.then1285, %if.then1275, %if.end1269, %if.then1266, %if.then1247, %if.then1239, %if.end1230, %if.then1229, %if.end1216, %if.then1215, %if.then1203, %if.end1197, %if.end1193, %if.then1152, %if.then1098, %if.end1092, %if.then1052, %if.then1041, %if.then1031, %if.end1023, %if.end1010, %if.then1009, %if.then986, %if.then980, %if.end974, %if.end973, %if.then972, %if.end963, %if.then958, %for.end921, %for.end772, %for.end706, %if.end677, %if.then676, %if.end667, %if.then647, %if.then639, %if.then634, %if.then629, %if.then619, %if.then613, %if.then607, %if.then601, %if.end595, %if.then566, %if.then560, %if.end554, %if.then553, %if.end547, %if.then546, %if.end540, %if.then537, %if.end531, %if.then528, %if.then520, %if.end511, %if.then510, %if.end500, %if.end496, %if.then495, %if.then485, %if.end479, %if.end478, %if.end419, %if.then418, %if.end405, %if.then404, %if.then392, %if.then384, %if.end378, %if.end357, %if.then356, %if.then336, %if.end330, %if.end296, %if.then293, %if.then287, %if.end281, %if.end280, %if.end262, %if.then261, %if.end251, %if.then250, %if.then244, %if.end238, %if.then229, %if.then222, %if.end209, %if.then208, %if.then192, %if.end186, %if.then182, %if.then176, %if.end170, %if.then169, %if.end162, %sw.bb
  %892 = load i32, i32* %status, align 4, !dbg !5756
  %cmp1387 = icmp eq i32 %892, 0, !dbg !5758
  br i1 %cmp1387, label %if.then1389, label %if.end1390, !dbg !5759

if.then1389:                                      ; preds = %sw.epilog
  br label %for.end2056, !dbg !5760

if.end1390:                                       ; preds = %sw.epilog
  %sx1391 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %affine, i32 0, i32 0, !dbg !5761
  %893 = load double, double* %sx1391, align 8, !dbg !5761
  %cmp1392 = fcmp une double %893, 1.000000e+00, !dbg !5763
  br i1 %cmp1392, label %if.then1414, label %lor.lhs.false1394, !dbg !5764

lor.lhs.false1394:                                ; preds = %if.end1390
  %rx1395 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %affine, i32 0, i32 1, !dbg !5765
  %894 = load double, double* %rx1395, align 8, !dbg !5765
  %cmp1396 = fcmp une double %894, 0.000000e+00, !dbg !5766
  br i1 %cmp1396, label %if.then1414, label %lor.lhs.false1398, !dbg !5767

lor.lhs.false1398:                                ; preds = %lor.lhs.false1394
  %ry1399 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %affine, i32 0, i32 2, !dbg !5768
  %895 = load double, double* %ry1399, align 8, !dbg !5768
  %cmp1400 = fcmp une double %895, 0.000000e+00, !dbg !5769
  br i1 %cmp1400, label %if.then1414, label %lor.lhs.false1402, !dbg !5770

lor.lhs.false1402:                                ; preds = %lor.lhs.false1398
  %sy1403 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %affine, i32 0, i32 3, !dbg !5771
  %896 = load double, double* %sy1403, align 8, !dbg !5771
  %cmp1404 = fcmp une double %896, 1.000000e+00, !dbg !5772
  br i1 %cmp1404, label %if.then1414, label %lor.lhs.false1406, !dbg !5773

lor.lhs.false1406:                                ; preds = %lor.lhs.false1402
  %tx1407 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %affine, i32 0, i32 4, !dbg !5774
  %897 = load double, double* %tx1407, align 8, !dbg !5774
  %cmp1408 = fcmp une double %897, 0.000000e+00, !dbg !5775
  br i1 %cmp1408, label %if.then1414, label %lor.lhs.false1410, !dbg !5776

lor.lhs.false1410:                                ; preds = %lor.lhs.false1406
  %ty1411 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %affine, i32 0, i32 5, !dbg !5777
  %898 = load double, double* %ty1411, align 8, !dbg !5777
  %cmp1412 = fcmp une double %898, 0.000000e+00, !dbg !5778
  br i1 %cmp1412, label %if.then1414, label %if.end1479, !dbg !5779

if.then1414:                                      ; preds = %lor.lhs.false1410, %lor.lhs.false1406, %lor.lhs.false1402, %lor.lhs.false1398, %lor.lhs.false1394, %if.end1390
  %sx1415 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %current, i32 0, i32 0, !dbg !5780
  %899 = load double, double* %sx1415, align 8, !dbg !5780
  %sx1416 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %affine, i32 0, i32 0, !dbg !5782
  %900 = load double, double* %sx1416, align 8, !dbg !5782
  %mul1417 = fmul double %899, %900, !dbg !5783
  %ry1418 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %current, i32 0, i32 2, !dbg !5784
  %901 = load double, double* %ry1418, align 8, !dbg !5784
  %rx1419 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %affine, i32 0, i32 1, !dbg !5785
  %902 = load double, double* %rx1419, align 8, !dbg !5785
  %mul1420 = fmul double %901, %902, !dbg !5786
  %add1421 = fadd double %mul1417, %mul1420, !dbg !5787
  %903 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !5788
  %904 = load i64, i64* %n, align 8, !dbg !5789
  %arrayidx1422 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %903, i64 %904, !dbg !5788
  %905 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx1422, align 8, !dbg !5788
  %affine1423 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %905, i32 0, i32 3, !dbg !5790
  %sx1424 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %affine1423, i32 0, i32 0, !dbg !5791
  store double %add1421, double* %sx1424, align 8, !dbg !5792
  %rx1425 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %current, i32 0, i32 1, !dbg !5793
  %906 = load double, double* %rx1425, align 8, !dbg !5793
  %sx1426 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %affine, i32 0, i32 0, !dbg !5794
  %907 = load double, double* %sx1426, align 8, !dbg !5794
  %mul1427 = fmul double %906, %907, !dbg !5795
  %sy1428 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %current, i32 0, i32 3, !dbg !5796
  %908 = load double, double* %sy1428, align 8, !dbg !5796
  %rx1429 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %affine, i32 0, i32 1, !dbg !5797
  %909 = load double, double* %rx1429, align 8, !dbg !5797
  %mul1430 = fmul double %908, %909, !dbg !5798
  %add1431 = fadd double %mul1427, %mul1430, !dbg !5799
  %910 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !5800
  %911 = load i64, i64* %n, align 8, !dbg !5801
  %arrayidx1432 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %910, i64 %911, !dbg !5800
  %912 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx1432, align 8, !dbg !5800
  %affine1433 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %912, i32 0, i32 3, !dbg !5802
  %rx1434 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %affine1433, i32 0, i32 1, !dbg !5803
  store double %add1431, double* %rx1434, align 8, !dbg !5804
  %sx1435 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %current, i32 0, i32 0, !dbg !5805
  %913 = load double, double* %sx1435, align 8, !dbg !5805
  %ry1436 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %affine, i32 0, i32 2, !dbg !5806
  %914 = load double, double* %ry1436, align 8, !dbg !5806
  %mul1437 = fmul double %913, %914, !dbg !5807
  %ry1438 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %current, i32 0, i32 2, !dbg !5808
  %915 = load double, double* %ry1438, align 8, !dbg !5808
  %sy1439 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %affine, i32 0, i32 3, !dbg !5809
  %916 = load double, double* %sy1439, align 8, !dbg !5809
  %mul1440 = fmul double %915, %916, !dbg !5810
  %add1441 = fadd double %mul1437, %mul1440, !dbg !5811
  %917 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !5812
  %918 = load i64, i64* %n, align 8, !dbg !5813
  %arrayidx1442 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %917, i64 %918, !dbg !5812
  %919 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx1442, align 8, !dbg !5812
  %affine1443 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %919, i32 0, i32 3, !dbg !5814
  %ry1444 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %affine1443, i32 0, i32 2, !dbg !5815
  store double %add1441, double* %ry1444, align 8, !dbg !5816
  %rx1445 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %current, i32 0, i32 1, !dbg !5817
  %920 = load double, double* %rx1445, align 8, !dbg !5817
  %ry1446 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %affine, i32 0, i32 2, !dbg !5818
  %921 = load double, double* %ry1446, align 8, !dbg !5818
  %mul1447 = fmul double %920, %921, !dbg !5819
  %sy1448 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %current, i32 0, i32 3, !dbg !5820
  %922 = load double, double* %sy1448, align 8, !dbg !5820
  %sy1449 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %affine, i32 0, i32 3, !dbg !5821
  %923 = load double, double* %sy1449, align 8, !dbg !5821
  %mul1450 = fmul double %922, %923, !dbg !5822
  %add1451 = fadd double %mul1447, %mul1450, !dbg !5823
  %924 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !5824
  %925 = load i64, i64* %n, align 8, !dbg !5825
  %arrayidx1452 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %924, i64 %925, !dbg !5824
  %926 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx1452, align 8, !dbg !5824
  %affine1453 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %926, i32 0, i32 3, !dbg !5826
  %sy1454 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %affine1453, i32 0, i32 3, !dbg !5827
  store double %add1451, double* %sy1454, align 8, !dbg !5828
  %sx1455 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %current, i32 0, i32 0, !dbg !5829
  %927 = load double, double* %sx1455, align 8, !dbg !5829
  %tx1456 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %affine, i32 0, i32 4, !dbg !5830
  %928 = load double, double* %tx1456, align 8, !dbg !5830
  %mul1457 = fmul double %927, %928, !dbg !5831
  %ry1458 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %current, i32 0, i32 2, !dbg !5832
  %929 = load double, double* %ry1458, align 8, !dbg !5832
  %ty1459 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %affine, i32 0, i32 5, !dbg !5833
  %930 = load double, double* %ty1459, align 8, !dbg !5833
  %mul1460 = fmul double %929, %930, !dbg !5834
  %add1461 = fadd double %mul1457, %mul1460, !dbg !5835
  %tx1462 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %current, i32 0, i32 4, !dbg !5836
  %931 = load double, double* %tx1462, align 8, !dbg !5836
  %add1463 = fadd double %add1461, %931, !dbg !5837
  %932 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !5838
  %933 = load i64, i64* %n, align 8, !dbg !5839
  %arrayidx1464 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %932, i64 %933, !dbg !5838
  %934 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx1464, align 8, !dbg !5838
  %affine1465 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %934, i32 0, i32 3, !dbg !5840
  %tx1466 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %affine1465, i32 0, i32 4, !dbg !5841
  store double %add1463, double* %tx1466, align 8, !dbg !5842
  %rx1467 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %current, i32 0, i32 1, !dbg !5843
  %935 = load double, double* %rx1467, align 8, !dbg !5843
  %tx1468 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %affine, i32 0, i32 4, !dbg !5844
  %936 = load double, double* %tx1468, align 8, !dbg !5844
  %mul1469 = fmul double %935, %936, !dbg !5845
  %sy1470 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %current, i32 0, i32 3, !dbg !5846
  %937 = load double, double* %sy1470, align 8, !dbg !5846
  %ty1471 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %affine, i32 0, i32 5, !dbg !5847
  %938 = load double, double* %ty1471, align 8, !dbg !5847
  %mul1472 = fmul double %937, %938, !dbg !5848
  %add1473 = fadd double %mul1469, %mul1472, !dbg !5849
  %ty1474 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %current, i32 0, i32 5, !dbg !5850
  %939 = load double, double* %ty1474, align 8, !dbg !5850
  %add1475 = fadd double %add1473, %939, !dbg !5851
  %940 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !5852
  %941 = load i64, i64* %n, align 8, !dbg !5853
  %arrayidx1476 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %940, i64 %941, !dbg !5852
  %942 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx1476, align 8, !dbg !5852
  %affine1477 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %942, i32 0, i32 3, !dbg !5854
  %ty1478 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %affine1477, i32 0, i32 5, !dbg !5855
  store double %add1475, double* %ty1478, align 8, !dbg !5856
  br label %if.end1479, !dbg !5857

if.end1479:                                       ; preds = %if.then1414, %lor.lhs.false1410
  %943 = load i32, i32* %primitive_type, align 4, !dbg !5858
  %cmp1480 = icmp eq i32 %943, 0, !dbg !5860
  br i1 %cmp1480, label %if.then1482, label %if.end1493, !dbg !5861

if.then1482:                                      ; preds = %if.end1479
  %944 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5862
  %debug1483 = getelementptr inbounds %struct._Image, %struct._Image* %944, i32 0, i32 59, !dbg !5865
  %945 = load i32, i32* %debug1483, align 8, !dbg !5865
  %cmp1484 = icmp ne i32 %945, 0, !dbg !5866
  br i1 %cmp1484, label %if.then1486, label %if.end1492, !dbg !5867

if.then1486:                                      ; preds = %if.then1482
  %946 = load i8*, i8** %q, align 8, !dbg !5868
  %947 = load i8*, i8** %p, align 8, !dbg !5869
  %sub.ptr.lhs.cast1487 = ptrtoint i8* %946 to i64, !dbg !5870
  %sub.ptr.rhs.cast1488 = ptrtoint i8* %947 to i64, !dbg !5870
  %sub.ptr.sub1489 = sub i64 %sub.ptr.lhs.cast1487, %sub.ptr.rhs.cast1488, !dbg !5870
  %conv1490 = trunc i64 %sub.ptr.sub1489 to i32, !dbg !5871
  %948 = load i8*, i8** %p, align 8, !dbg !5872
  %call1491 = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 128, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2818, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.90, i64 0, i64 0), i32 %conv1490, i8* %948), !dbg !5873
  br label %if.end1492, !dbg !5874

if.end1492:                                       ; preds = %if.then1486, %if.then1482
  br label %for.cond95, !dbg !5875, !llvm.loop !3525

if.end1493:                                       ; preds = %if.end1479
  store i64 0, i64* %i, align 8, !dbg !5876
  store i64 0, i64* %j, align 8, !dbg !5877
  %949 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info, align 8, !dbg !5878
  %arrayidx1494 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %949, i64 0, !dbg !5878
  %point1495 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx1494, i32 0, i32 0, !dbg !5879
  %x1496 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point1495, i32 0, i32 0, !dbg !5880
  store double 0.000000e+00, double* %x1496, align 8, !dbg !5881
  %950 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info, align 8, !dbg !5882
  %arrayidx1497 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %950, i64 0, !dbg !5882
  %point1498 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx1497, i32 0, i32 0, !dbg !5883
  %y1499 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point1498, i32 0, i32 1, !dbg !5884
  store double 0.000000e+00, double* %y1499, align 8, !dbg !5885
  store i64 0, i64* %x, align 8, !dbg !5886
  br label %for.cond1500, !dbg !5888

for.cond1500:                                     ; preds = %for.inc1544, %if.end1493
  %951 = load i8*, i8** %q, align 8, !dbg !5889
  %952 = load i8, i8* %951, align 1, !dbg !5891
  %conv1501 = sext i8 %952 to i32, !dbg !5891
  %cmp1502 = icmp ne i32 %conv1501, 0, !dbg !5892
  br i1 %cmp1502, label %for.body1504, label %for.end1546, !dbg !5893

for.body1504:                                     ; preds = %for.cond1500
  %953 = load i8*, i8** %q, align 8, !dbg !5894
  %call1505 = call i32 @IsPoint(i8* %953), !dbg !5897
  %cmp1506 = icmp eq i32 %call1505, 0, !dbg !5898
  br i1 %cmp1506, label %if.then1508, label %if.end1509, !dbg !5899

if.then1508:                                      ; preds = %for.body1504
  br label %for.end1546, !dbg !5900

if.end1509:                                       ; preds = %for.body1504
  %954 = load i8*, i8** %q, align 8, !dbg !5901
  %955 = load i8*, i8** %token, align 8, !dbg !5902
  call void @GetMagickToken(i8* %954, i8** %q, i8* %955), !dbg !5903
  %956 = load i8*, i8** %token, align 8, !dbg !5904
  %call1510 = call double @StringToDouble(i8* %956, i8** null), !dbg !5905
  %x1511 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 0, !dbg !5906
  store double %call1510, double* %x1511, align 8, !dbg !5907
  %957 = load i8*, i8** %q, align 8, !dbg !5908
  %958 = load i8*, i8** %token, align 8, !dbg !5909
  call void @GetMagickToken(i8* %957, i8** %q, i8* %958), !dbg !5910
  %959 = load i8*, i8** %token, align 8, !dbg !5911
  %960 = load i8, i8* %959, align 1, !dbg !5913
  %conv1512 = sext i8 %960 to i32, !dbg !5913
  %cmp1513 = icmp eq i32 %conv1512, 44, !dbg !5914
  br i1 %cmp1513, label %if.then1515, label %if.end1516, !dbg !5915

if.then1515:                                      ; preds = %if.end1509
  %961 = load i8*, i8** %q, align 8, !dbg !5916
  %962 = load i8*, i8** %token, align 8, !dbg !5917
  call void @GetMagickToken(i8* %961, i8** %q, i8* %962), !dbg !5918
  br label %if.end1516, !dbg !5918

if.end1516:                                       ; preds = %if.then1515, %if.end1509
  %963 = load i8*, i8** %token, align 8, !dbg !5919
  %call1517 = call double @StringToDouble(i8* %963, i8** null), !dbg !5920
  %y1518 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 1, !dbg !5921
  store double %call1517, double* %y1518, align 8, !dbg !5922
  %964 = load i8*, i8** %q, align 8, !dbg !5923
  %965 = load i8*, i8** %token, align 8, !dbg !5924
  call void @GetMagickToken(i8* %964, i8** null, i8* %965), !dbg !5925
  %966 = load i8*, i8** %token, align 8, !dbg !5926
  %967 = load i8, i8* %966, align 1, !dbg !5928
  %conv1519 = sext i8 %967 to i32, !dbg !5928
  %cmp1520 = icmp eq i32 %conv1519, 44, !dbg !5929
  br i1 %cmp1520, label %if.then1522, label %if.end1523, !dbg !5930

if.then1522:                                      ; preds = %if.end1516
  %968 = load i8*, i8** %q, align 8, !dbg !5931
  %969 = load i8*, i8** %token, align 8, !dbg !5932
  call void @GetMagickToken(i8* %968, i8** %q, i8* %969), !dbg !5933
  br label %if.end1523, !dbg !5933

if.end1523:                                       ; preds = %if.then1522, %if.end1516
  %970 = load i32, i32* %primitive_type, align 4, !dbg !5934
  %971 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info, align 8, !dbg !5935
  %972 = load i64, i64* %i, align 8, !dbg !5936
  %arrayidx1524 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %971, i64 %972, !dbg !5935
  %primitive1525 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx1524, i32 0, i32 2, !dbg !5937
  store i32 %970, i32* %primitive1525, align 8, !dbg !5938
  %973 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info, align 8, !dbg !5939
  %974 = load i64, i64* %i, align 8, !dbg !5940
  %arrayidx1526 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %973, i64 %974, !dbg !5939
  %point1527 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx1526, i32 0, i32 0, !dbg !5941
  %975 = bitcast %struct._PointInfo* %point1527 to i8*, !dbg !5942
  %976 = bitcast %struct._PointInfo* %point to i8*, !dbg !5942
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %975, i8* align 8 %976, i64 16, i1 false), !dbg !5942
  %977 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info, align 8, !dbg !5943
  %978 = load i64, i64* %i, align 8, !dbg !5944
  %arrayidx1528 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %977, i64 %978, !dbg !5943
  %coordinates = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx1528, i32 0, i32 1, !dbg !5945
  store i64 0, i64* %coordinates, align 8, !dbg !5946
  %979 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info, align 8, !dbg !5947
  %980 = load i64, i64* %i, align 8, !dbg !5948
  %arrayidx1529 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %979, i64 %980, !dbg !5947
  %method = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx1529, i32 0, i32 3, !dbg !5949
  store i32 3, i32* %method, align 4, !dbg !5950
  %981 = load i64, i64* %i, align 8, !dbg !5951
  %inc1530 = add nsw i64 %981, 1, !dbg !5951
  store i64 %inc1530, i64* %i, align 8, !dbg !5951
  %982 = load i64, i64* %i, align 8, !dbg !5952
  %983 = load i64, i64* %number_points, align 8, !dbg !5954
  %cmp1531 = icmp slt i64 %982, %983, !dbg !5955
  br i1 %cmp1531, label %if.then1533, label %if.end1534, !dbg !5956

if.then1533:                                      ; preds = %if.end1523
  br label %for.inc1544, !dbg !5957

if.end1534:                                       ; preds = %if.end1523
  %984 = load i64, i64* %number_points, align 8, !dbg !5958
  %shl = shl i64 %984, 1, !dbg !5958
  store i64 %shl, i64* %number_points, align 8, !dbg !5958
  %985 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info, align 8, !dbg !5959
  %986 = bitcast %struct._PrimitiveInfo* %985 to i8*, !dbg !5959
  %987 = load i64, i64* %number_points, align 8, !dbg !5960
  %call1535 = call i8* @ResizeQuantumMemory(i8* %986, i64 %987, i64 40) #16, !dbg !5961
  %988 = bitcast i8* %call1535 to %struct._PrimitiveInfo*, !dbg !5962
  store %struct._PrimitiveInfo* %988, %struct._PrimitiveInfo** %primitive_info, align 8, !dbg !5963
  %989 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info, align 8, !dbg !5964
  %cmp1536 = icmp eq %struct._PrimitiveInfo* %989, null, !dbg !5966
  br i1 %cmp1536, label %if.then1538, label %if.end1543, !dbg !5967

if.then1538:                                      ; preds = %if.end1534
  %990 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5968
  %exception1539 = getelementptr inbounds %struct._Image, %struct._Image* %990, i32 0, i32 58, !dbg !5970
  %991 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5971
  %filename1540 = getelementptr inbounds %struct._Image, %struct._Image* %991, i32 0, i32 53, !dbg !5972
  %arraydecay1541 = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename1540, i64 0, i64 0, !dbg !5971
  %call1542 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %exception1539, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2857, i32 400, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* %arraydecay1541), !dbg !5973
  br label %for.end1546, !dbg !5974

if.end1543:                                       ; preds = %if.end1534
  br label %for.inc1544, !dbg !5975

for.inc1544:                                      ; preds = %if.end1543, %if.then1533
  %992 = load i64, i64* %x, align 8, !dbg !5976
  %inc1545 = add nsw i64 %992, 1, !dbg !5976
  store i64 %inc1545, i64* %x, align 8, !dbg !5976
  br label %for.cond1500, !dbg !5977, !llvm.loop !5978

for.end1546:                                      ; preds = %if.then1538, %if.then1508, %for.cond1500
  %993 = load i32, i32* %primitive_type, align 4, !dbg !5980
  %994 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info, align 8, !dbg !5981
  %995 = load i64, i64* %j, align 8, !dbg !5982
  %arrayidx1547 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %994, i64 %995, !dbg !5981
  %primitive1548 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx1547, i32 0, i32 2, !dbg !5983
  store i32 %993, i32* %primitive1548, align 8, !dbg !5984
  %996 = load i64, i64* %x, align 8, !dbg !5985
  %997 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info, align 8, !dbg !5986
  %998 = load i64, i64* %j, align 8, !dbg !5987
  %arrayidx1549 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %997, i64 %998, !dbg !5986
  %coordinates1550 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx1549, i32 0, i32 1, !dbg !5988
  store i64 %996, i64* %coordinates1550, align 8, !dbg !5989
  %999 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info, align 8, !dbg !5990
  %1000 = load i64, i64* %j, align 8, !dbg !5991
  %arrayidx1551 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %999, i64 %1000, !dbg !5990
  %method1552 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx1551, i32 0, i32 3, !dbg !5992
  store i32 3, i32* %method1552, align 4, !dbg !5993
  %1001 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info, align 8, !dbg !5994
  %1002 = load i64, i64* %j, align 8, !dbg !5995
  %arrayidx1553 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %1001, i64 %1002, !dbg !5994
  %text = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx1553, i32 0, i32 4, !dbg !5996
  store i8* null, i8** %text, align 8, !dbg !5997
  %1003 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info, align 8, !dbg !5998
  %1004 = load i64, i64* %j, align 8, !dbg !5999
  %arrayidx1554 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %1003, i64 %1004, !dbg !5998
  %point1555 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx1554, i32 0, i32 0, !dbg !6000
  %x1556 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point1555, i32 0, i32 0, !dbg !6001
  %1005 = load double, double* %x1556, align 8, !dbg !6001
  %x11557 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds, i32 0, i32 0, !dbg !6002
  store double %1005, double* %x11557, align 8, !dbg !6003
  %1006 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info, align 8, !dbg !6004
  %1007 = load i64, i64* %j, align 8, !dbg !6005
  %arrayidx1558 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %1006, i64 %1007, !dbg !6004
  %point1559 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx1558, i32 0, i32 0, !dbg !6006
  %y1560 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point1559, i32 0, i32 1, !dbg !6007
  %1008 = load double, double* %y1560, align 8, !dbg !6007
  %y11561 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds, i32 0, i32 1, !dbg !6008
  store double %1008, double* %y11561, align 8, !dbg !6009
  %1009 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info, align 8, !dbg !6010
  %1010 = load i64, i64* %j, align 8, !dbg !6011
  %arrayidx1562 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %1009, i64 %1010, !dbg !6010
  %point1563 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx1562, i32 0, i32 0, !dbg !6012
  %x1564 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point1563, i32 0, i32 0, !dbg !6013
  %1011 = load double, double* %x1564, align 8, !dbg !6013
  %x21565 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds, i32 0, i32 2, !dbg !6014
  store double %1011, double* %x21565, align 8, !dbg !6015
  %1012 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info, align 8, !dbg !6016
  %1013 = load i64, i64* %j, align 8, !dbg !6017
  %arrayidx1566 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %1012, i64 %1013, !dbg !6016
  %point1567 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx1566, i32 0, i32 0, !dbg !6018
  %y1568 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point1567, i32 0, i32 1, !dbg !6019
  %1014 = load double, double* %y1568, align 8, !dbg !6019
  %y21569 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds, i32 0, i32 3, !dbg !6020
  store double %1014, double* %y21569, align 8, !dbg !6021
  store i64 1, i64* %k, align 8, !dbg !6022
  br label %for.cond1570, !dbg !6024

for.cond1570:                                     ; preds = %for.inc1611, %for.end1546
  %1015 = load i64, i64* %k, align 8, !dbg !6025
  %1016 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info, align 8, !dbg !6027
  %1017 = load i64, i64* %j, align 8, !dbg !6028
  %arrayidx1571 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %1016, i64 %1017, !dbg !6027
  %coordinates1572 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx1571, i32 0, i32 1, !dbg !6029
  %1018 = load i64, i64* %coordinates1572, align 8, !dbg !6029
  %cmp1573 = icmp slt i64 %1015, %1018, !dbg !6030
  br i1 %cmp1573, label %for.body1575, label %for.end1613, !dbg !6031

for.body1575:                                     ; preds = %for.cond1570
  %1019 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info, align 8, !dbg !6032
  %1020 = load i64, i64* %j, align 8, !dbg !6034
  %1021 = load i64, i64* %k, align 8, !dbg !6035
  %add1576 = add nsw i64 %1020, %1021, !dbg !6036
  %arrayidx1577 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %1019, i64 %add1576, !dbg !6032
  %point1578 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx1577, i32 0, i32 0, !dbg !6037
  %1022 = bitcast %struct._PointInfo* %point to i8*, !dbg !6037
  %1023 = bitcast %struct._PointInfo* %point1578 to i8*, !dbg !6037
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1022, i8* align 8 %1023, i64 16, i1 false), !dbg !6037
  %x1579 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 0, !dbg !6038
  %1024 = load double, double* %x1579, align 8, !dbg !6038
  %x11580 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds, i32 0, i32 0, !dbg !6040
  %1025 = load double, double* %x11580, align 8, !dbg !6040
  %cmp1581 = fcmp olt double %1024, %1025, !dbg !6041
  br i1 %cmp1581, label %if.then1583, label %if.end1586, !dbg !6042

if.then1583:                                      ; preds = %for.body1575
  %x1584 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 0, !dbg !6043
  %1026 = load double, double* %x1584, align 8, !dbg !6043
  %x11585 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds, i32 0, i32 0, !dbg !6044
  store double %1026, double* %x11585, align 8, !dbg !6045
  br label %if.end1586, !dbg !6046

if.end1586:                                       ; preds = %if.then1583, %for.body1575
  %y1587 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 1, !dbg !6047
  %1027 = load double, double* %y1587, align 8, !dbg !6047
  %y11588 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds, i32 0, i32 1, !dbg !6049
  %1028 = load double, double* %y11588, align 8, !dbg !6049
  %cmp1589 = fcmp olt double %1027, %1028, !dbg !6050
  br i1 %cmp1589, label %if.then1591, label %if.end1594, !dbg !6051

if.then1591:                                      ; preds = %if.end1586
  %y1592 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 1, !dbg !6052
  %1029 = load double, double* %y1592, align 8, !dbg !6052
  %y11593 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds, i32 0, i32 1, !dbg !6053
  store double %1029, double* %y11593, align 8, !dbg !6054
  br label %if.end1594, !dbg !6055

if.end1594:                                       ; preds = %if.then1591, %if.end1586
  %x1595 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 0, !dbg !6056
  %1030 = load double, double* %x1595, align 8, !dbg !6056
  %x21596 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds, i32 0, i32 2, !dbg !6058
  %1031 = load double, double* %x21596, align 8, !dbg !6058
  %cmp1597 = fcmp ogt double %1030, %1031, !dbg !6059
  br i1 %cmp1597, label %if.then1599, label %if.end1602, !dbg !6060

if.then1599:                                      ; preds = %if.end1594
  %x1600 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 0, !dbg !6061
  %1032 = load double, double* %x1600, align 8, !dbg !6061
  %x21601 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds, i32 0, i32 2, !dbg !6062
  store double %1032, double* %x21601, align 8, !dbg !6063
  br label %if.end1602, !dbg !6064

if.end1602:                                       ; preds = %if.then1599, %if.end1594
  %y1603 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 1, !dbg !6065
  %1033 = load double, double* %y1603, align 8, !dbg !6065
  %y21604 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds, i32 0, i32 3, !dbg !6067
  %1034 = load double, double* %y21604, align 8, !dbg !6067
  %cmp1605 = fcmp ogt double %1033, %1034, !dbg !6068
  br i1 %cmp1605, label %if.then1607, label %if.end1610, !dbg !6069

if.then1607:                                      ; preds = %if.end1602
  %y1608 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 1, !dbg !6070
  %1035 = load double, double* %y1608, align 8, !dbg !6070
  %y21609 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds, i32 0, i32 3, !dbg !6071
  store double %1035, double* %y21609, align 8, !dbg !6072
  br label %if.end1610, !dbg !6073

if.end1610:                                       ; preds = %if.then1607, %if.end1602
  br label %for.inc1611, !dbg !6074

for.inc1611:                                      ; preds = %if.end1610
  %1036 = load i64, i64* %k, align 8, !dbg !6075
  %inc1612 = add nsw i64 %1036, 1, !dbg !6075
  store i64 %inc1612, i64* %k, align 8, !dbg !6075
  br label %for.cond1570, !dbg !6076, !llvm.loop !6077

for.end1613:                                      ; preds = %for.cond1570
  %1037 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info, align 8, !dbg !6079
  %1038 = load i64, i64* %j, align 8, !dbg !6080
  %arrayidx1614 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %1037, i64 %1038, !dbg !6079
  %coordinates1615 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx1614, i32 0, i32 1, !dbg !6081
  %1039 = load i64, i64* %coordinates1615, align 8, !dbg !6081
  store i64 %1039, i64* %length, align 8, !dbg !6082
  %1040 = load i32, i32* %primitive_type, align 4, !dbg !6083
  switch i32 %1040, label %sw.default1662 [
    i32 3, label %sw.bb1616
    i32 4, label %sw.bb1618
    i32 10, label %sw.bb1620
    i32 15, label %sw.bb1632
    i32 7, label %sw.bb1649
    i32 5, label %sw.bb1649
    i32 6, label %sw.bb1649
  ], !dbg !6084

sw.bb1616:                                        ; preds = %for.end1613
  %1041 = load i64, i64* %length, align 8, !dbg !6085
  %mul1617 = mul i64 %1041, 5, !dbg !6085
  store i64 %mul1617, i64* %length, align 8, !dbg !6085
  br label %sw.epilog1663, !dbg !6088

sw.bb1618:                                        ; preds = %for.end1613
  %1042 = load i64, i64* %length, align 8, !dbg !6089
  %mul1619 = mul i64 %1042, 1605, !dbg !6089
  store i64 %mul1619, i64* %length, align 8, !dbg !6089
  br label %sw.epilog1663, !dbg !6091

sw.bb1620:                                        ; preds = %for.end1613
  %1043 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info, align 8, !dbg !6092
  %1044 = load i64, i64* %j, align 8, !dbg !6095
  %arrayidx1621 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %1043, i64 %1044, !dbg !6092
  %coordinates1622 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx1621, i32 0, i32 1, !dbg !6096
  %1045 = load i64, i64* %coordinates1622, align 8, !dbg !6096
  %cmp1623 = icmp ugt i64 %1045, 107, !dbg !6097
  br i1 %cmp1623, label %if.then1625, label %if.end1628, !dbg !6098

if.then1625:                                      ; preds = %sw.bb1620
  %1046 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6099
  %exception1626 = getelementptr inbounds %struct._Image, %struct._Image* %1046, i32 0, i32 58, !dbg !6100
  %1047 = load i8*, i8** %token, align 8, !dbg !6101
  %call1627 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %exception1626, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2904, i32 460, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.91, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* %1047), !dbg !6102
  br label %if.end1628, !dbg !6103

if.end1628:                                       ; preds = %if.then1625, %sw.bb1620
  %1048 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info, align 8, !dbg !6104
  %1049 = load i64, i64* %j, align 8, !dbg !6105
  %arrayidx1629 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %1048, i64 %1049, !dbg !6104
  %coordinates1630 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx1629, i32 0, i32 1, !dbg !6106
  %1050 = load i64, i64* %coordinates1630, align 8, !dbg !6106
  %mul1631 = mul i64 200, %1050, !dbg !6107
  store i64 %mul1631, i64* %length, align 8, !dbg !6108
  br label %sw.epilog1663, !dbg !6109

sw.bb1632:                                        ; preds = %for.end1613
  call void @llvm.dbg.declare(metadata i8** %s, metadata !6110, metadata !DIExpression()), !dbg !6112
  call void @llvm.dbg.declare(metadata i8** %t, metadata !6113, metadata !DIExpression()), !dbg !6114
  %1051 = load i8*, i8** %q, align 8, !dbg !6115
  %1052 = load i8*, i8** %token, align 8, !dbg !6116
  call void @GetMagickToken(i8* %1051, i8** %q, i8* %1052), !dbg !6117
  store i64 1, i64* %length, align 8, !dbg !6118
  %1053 = load i8*, i8** %token, align 8, !dbg !6119
  store i8* %1053, i8** %t, align 8, !dbg !6120
  %1054 = load i8*, i8** %token, align 8, !dbg !6121
  store i8* %1054, i8** %s, align 8, !dbg !6123
  br label %for.cond1633, !dbg !6124

for.cond1633:                                     ; preds = %for.inc1645, %sw.bb1632
  %1055 = load i8*, i8** %s, align 8, !dbg !6125
  %1056 = load i8, i8* %1055, align 1, !dbg !6127
  %conv1634 = sext i8 %1056 to i32, !dbg !6127
  %cmp1635 = icmp ne i32 %conv1634, 0, !dbg !6128
  br i1 %cmp1635, label %for.body1637, label %for.end1646, !dbg !6129

for.body1637:                                     ; preds = %for.cond1633
  call void @llvm.dbg.declare(metadata double* %value, metadata !6130, metadata !DIExpression()), !dbg !6132
  %1057 = load i8*, i8** %s, align 8, !dbg !6133
  %call1638 = call double @StringToDouble(i8* %1057, i8** %t), !dbg !6134
  store double %call1638, double* %value, align 8, !dbg !6135
  %1058 = load double, double* %value, align 8, !dbg !6136
  %1059 = load i8*, i8** %s, align 8, !dbg !6137
  %1060 = load i8*, i8** %t, align 8, !dbg !6139
  %cmp1639 = icmp eq i8* %1059, %1060, !dbg !6140
  br i1 %cmp1639, label %if.then1641, label %if.end1643, !dbg !6141

if.then1641:                                      ; preds = %for.body1637
  %1061 = load i8*, i8** %t, align 8, !dbg !6142
  %incdec.ptr1642 = getelementptr inbounds i8, i8* %1061, i32 1, !dbg !6142
  store i8* %incdec.ptr1642, i8** %t, align 8, !dbg !6142
  br label %for.inc1645, !dbg !6144

if.end1643:                                       ; preds = %for.body1637
  %1062 = load i64, i64* %length, align 8, !dbg !6145
  %inc1644 = add i64 %1062, 1, !dbg !6145
  store i64 %inc1644, i64* %length, align 8, !dbg !6145
  br label %for.inc1645, !dbg !6146

for.inc1645:                                      ; preds = %if.end1643, %if.then1641
  %1063 = load i8*, i8** %t, align 8, !dbg !6147
  store i8* %1063, i8** %s, align 8, !dbg !6148
  br label %for.cond1633, !dbg !6149, !llvm.loop !6150

for.end1646:                                      ; preds = %for.cond1633
  %1064 = load i64, i64* %length, align 8, !dbg !6152
  %mul1647 = mul i64 %1064, 200, !dbg !6153
  %div1648 = udiv i64 %mul1647, 2, !dbg !6154
  store i64 %div1648, i64* %length, align 8, !dbg !6155
  br label %sw.epilog1663, !dbg !6156

sw.bb1649:                                        ; preds = %for.end1613, %for.end1613, %for.end1613
  call void @llvm.dbg.declare(metadata double* %alpha, metadata !6157, metadata !DIExpression()), !dbg !6159
  call void @llvm.dbg.declare(metadata double* %beta, metadata !6160, metadata !DIExpression()), !dbg !6161
  call void @llvm.dbg.declare(metadata double* %radius, metadata !6162, metadata !DIExpression()), !dbg !6163
  %x21650 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds, i32 0, i32 2, !dbg !6164
  %1065 = load double, double* %x21650, align 8, !dbg !6164
  %x11651 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds, i32 0, i32 0, !dbg !6165
  %1066 = load double, double* %x11651, align 8, !dbg !6165
  %sub1652 = fsub double %1065, %1066, !dbg !6166
  store double %sub1652, double* %alpha, align 8, !dbg !6167
  %y21653 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds, i32 0, i32 3, !dbg !6168
  %1067 = load double, double* %y21653, align 8, !dbg !6168
  %y11654 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds, i32 0, i32 1, !dbg !6169
  %1068 = load double, double* %y11654, align 8, !dbg !6169
  %sub1655 = fsub double %1067, %1068, !dbg !6170
  store double %sub1655, double* %beta, align 8, !dbg !6171
  %1069 = load double, double* %alpha, align 8, !dbg !6172
  %1070 = load double, double* %beta, align 8, !dbg !6173
  %call1656 = call double @hypot(double %1069, double %1070) #17, !dbg !6174
  store double %call1656, double* %radius, align 8, !dbg !6175
  %1071 = load double, double* %radius, align 8, !dbg !6176
  %mul1657 = fmul double 0x400921FB54442D18, %1071, !dbg !6177
  %1072 = call double @llvm.ceil.f64(double %mul1657), !dbg !6178
  %conv1658 = fptoui double %1072 to i64, !dbg !6179
  %mul1659 = mul i64 2, %conv1658, !dbg !6180
  %add1660 = add i64 %mul1659, 1200, !dbg !6181
  %add1661 = add i64 %add1660, 360, !dbg !6182
  store i64 %add1661, i64* %length, align 8, !dbg !6183
  br label %sw.epilog1663, !dbg !6184

sw.default1662:                                   ; preds = %for.end1613
  br label %sw.epilog1663, !dbg !6185

sw.epilog1663:                                    ; preds = %sw.default1662, %sw.bb1649, %for.end1646, %if.end1628, %sw.bb1618, %sw.bb1616
  %1073 = load i64, i64* %i, align 8, !dbg !6186
  %1074 = load i64, i64* %length, align 8, !dbg !6188
  %add1664 = add i64 %1073, %1074, !dbg !6189
  %1075 = load i64, i64* %number_points, align 8, !dbg !6190
  %cmp1665 = icmp uge i64 %add1664, %1075, !dbg !6191
  br i1 %cmp1665, label %if.then1667, label %if.end1679, !dbg !6192

if.then1667:                                      ; preds = %sw.epilog1663
  %1076 = load i64, i64* %length, align 8, !dbg !6193
  %add1668 = add i64 %1076, 1, !dbg !6195
  %1077 = load i64, i64* %number_points, align 8, !dbg !6196
  %add1669 = add i64 %1077, %add1668, !dbg !6196
  store i64 %add1669, i64* %number_points, align 8, !dbg !6196
  %1078 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info, align 8, !dbg !6197
  %1079 = bitcast %struct._PrimitiveInfo* %1078 to i8*, !dbg !6197
  %1080 = load i64, i64* %number_points, align 8, !dbg !6198
  %call1670 = call i8* @ResizeQuantumMemory(i8* %1079, i64 %1080, i64 40) #16, !dbg !6199
  %1081 = bitcast i8* %call1670 to %struct._PrimitiveInfo*, !dbg !6200
  store %struct._PrimitiveInfo* %1081, %struct._PrimitiveInfo** %primitive_info, align 8, !dbg !6201
  %1082 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info, align 8, !dbg !6202
  %cmp1671 = icmp eq %struct._PrimitiveInfo* %1082, null, !dbg !6204
  br i1 %cmp1671, label %if.then1673, label %if.end1678, !dbg !6205

if.then1673:                                      ; preds = %if.then1667
  %1083 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6206
  %exception1674 = getelementptr inbounds %struct._Image, %struct._Image* %1083, i32 0, i32 58, !dbg !6208
  %1084 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6209
  %filename1675 = getelementptr inbounds %struct._Image, %struct._Image* %1084, i32 0, i32 53, !dbg !6210
  %arraydecay1676 = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename1675, i64 0, i64 0, !dbg !6209
  %call1677 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %exception1674, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2963, i32 400, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* %arraydecay1676), !dbg !6211
  br label %for.end2056, !dbg !6212

if.end1678:                                       ; preds = %if.then1667
  br label %if.end1679, !dbg !6213

if.end1679:                                       ; preds = %if.end1678, %sw.epilog1663
  %1085 = load i32, i32* %primitive_type, align 4, !dbg !6214
  switch i32 %1085, label %sw.default1681 [
    i32 1, label %sw.bb1680
    i32 2, label %sw.bb1694
    i32 3, label %sw.bb1710
    i32 4, label %sw.bb1726
    i32 5, label %sw.bb1745
    i32 6, label %sw.bb1764
    i32 7, label %sw.bb1783
    i32 8, label %sw.bb1799
    i32 9, label %sw.bb1800
    i32 10, label %sw.bb1809
    i32 15, label %sw.bb1822
    i32 11, label %sw.bb1826
    i32 12, label %sw.bb1826
    i32 13, label %sw.bb1842
    i32 14, label %sw.bb1857
  ], !dbg !6215

sw.bb1680:                                        ; preds = %if.end1679
  br label %sw.default1681, !dbg !6216

sw.default1681:                                   ; preds = %if.end1679, %sw.bb1680
  %1086 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info, align 8, !dbg !6217
  %1087 = load i64, i64* %j, align 8, !dbg !6221
  %arrayidx1682 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %1086, i64 %1087, !dbg !6217
  %coordinates1683 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx1682, i32 0, i32 1, !dbg !6222
  %1088 = load i64, i64* %coordinates1683, align 8, !dbg !6222
  %cmp1684 = icmp ne i64 %1088, 1, !dbg !6223
  br i1 %cmp1684, label %if.then1686, label %if.end1687, !dbg !6224

if.then1686:                                      ; preds = %sw.default1681
  store i32 0, i32* %status, align 4, !dbg !6225
  br label %sw.epilog1867, !dbg !6227

if.end1687:                                       ; preds = %sw.default1681
  %1089 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info, align 8, !dbg !6228
  %1090 = load i64, i64* %j, align 8, !dbg !6229
  %add.ptr1688 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %1089, i64 %1090, !dbg !6230
  %1091 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info, align 8, !dbg !6231
  %1092 = load i64, i64* %j, align 8, !dbg !6232
  %arrayidx1689 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %1091, i64 %1092, !dbg !6231
  %point1690 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx1689, i32 0, i32 0, !dbg !6233
  %1093 = bitcast %struct._PointInfo* %point1690 to { double, double }*, !dbg !6234
  %1094 = getelementptr inbounds { double, double }, { double, double }* %1093, i32 0, i32 0, !dbg !6234
  %1095 = load double, double* %1094, align 8, !dbg !6234
  %1096 = getelementptr inbounds { double, double }, { double, double }* %1093, i32 0, i32 1, !dbg !6234
  %1097 = load double, double* %1096, align 8, !dbg !6234
  call void @TracePoint(%struct._PrimitiveInfo* %add.ptr1688, double %1095, double %1097), !dbg !6234
  %1098 = load i64, i64* %j, align 8, !dbg !6235
  %1099 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info, align 8, !dbg !6236
  %1100 = load i64, i64* %j, align 8, !dbg !6237
  %arrayidx1691 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %1099, i64 %1100, !dbg !6236
  %coordinates1692 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx1691, i32 0, i32 1, !dbg !6238
  %1101 = load i64, i64* %coordinates1692, align 8, !dbg !6238
  %add1693 = add i64 %1098, %1101, !dbg !6239
  store i64 %add1693, i64* %i, align 8, !dbg !6240
  br label %sw.epilog1867, !dbg !6241

sw.bb1694:                                        ; preds = %if.end1679
  %1102 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info, align 8, !dbg !6242
  %1103 = load i64, i64* %j, align 8, !dbg !6245
  %arrayidx1695 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %1102, i64 %1103, !dbg !6242
  %coordinates1696 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx1695, i32 0, i32 1, !dbg !6246
  %1104 = load i64, i64* %coordinates1696, align 8, !dbg !6246
  %cmp1697 = icmp ne i64 %1104, 2, !dbg !6247
  br i1 %cmp1697, label %if.then1699, label %if.end1700, !dbg !6248

if.then1699:                                      ; preds = %sw.bb1694
  store i32 0, i32* %status, align 4, !dbg !6249
  br label %sw.epilog1867, !dbg !6251

if.end1700:                                       ; preds = %sw.bb1694
  %1105 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info, align 8, !dbg !6252
  %1106 = load i64, i64* %j, align 8, !dbg !6253
  %add.ptr1701 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %1105, i64 %1106, !dbg !6254
  %1107 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info, align 8, !dbg !6255
  %1108 = load i64, i64* %j, align 8, !dbg !6256
  %arrayidx1702 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %1107, i64 %1108, !dbg !6255
  %point1703 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx1702, i32 0, i32 0, !dbg !6257
  %1109 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info, align 8, !dbg !6258
  %1110 = load i64, i64* %j, align 8, !dbg !6259
  %add1704 = add nsw i64 %1110, 1, !dbg !6260
  %arrayidx1705 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %1109, i64 %add1704, !dbg !6258
  %point1706 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx1705, i32 0, i32 0, !dbg !6261
  %1111 = bitcast %struct._PointInfo* %point1703 to { double, double }*, !dbg !6262
  %1112 = getelementptr inbounds { double, double }, { double, double }* %1111, i32 0, i32 0, !dbg !6262
  %1113 = load double, double* %1112, align 8, !dbg !6262
  %1114 = getelementptr inbounds { double, double }, { double, double }* %1111, i32 0, i32 1, !dbg !6262
  %1115 = load double, double* %1114, align 8, !dbg !6262
  %1116 = bitcast %struct._PointInfo* %point1706 to { double, double }*, !dbg !6262
  %1117 = getelementptr inbounds { double, double }, { double, double }* %1116, i32 0, i32 0, !dbg !6262
  %1118 = load double, double* %1117, align 8, !dbg !6262
  %1119 = getelementptr inbounds { double, double }, { double, double }* %1116, i32 0, i32 1, !dbg !6262
  %1120 = load double, double* %1119, align 8, !dbg !6262
  call void @TraceLine(%struct._PrimitiveInfo* %add.ptr1701, double %1113, double %1115, double %1118, double %1120), !dbg !6262
  %1121 = load i64, i64* %j, align 8, !dbg !6263
  %1122 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info, align 8, !dbg !6264
  %1123 = load i64, i64* %j, align 8, !dbg !6265
  %arrayidx1707 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %1122, i64 %1123, !dbg !6264
  %coordinates1708 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx1707, i32 0, i32 1, !dbg !6266
  %1124 = load i64, i64* %coordinates1708, align 8, !dbg !6266
  %add1709 = add i64 %1121, %1124, !dbg !6267
  store i64 %add1709, i64* %i, align 8, !dbg !6268
  br label %sw.epilog1867, !dbg !6269

sw.bb1710:                                        ; preds = %if.end1679
  %1125 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info, align 8, !dbg !6270
  %1126 = load i64, i64* %j, align 8, !dbg !6273
  %arrayidx1711 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %1125, i64 %1126, !dbg !6270
  %coordinates1712 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx1711, i32 0, i32 1, !dbg !6274
  %1127 = load i64, i64* %coordinates1712, align 8, !dbg !6274
  %cmp1713 = icmp ne i64 %1127, 2, !dbg !6275
  br i1 %cmp1713, label %if.then1715, label %if.end1716, !dbg !6276

if.then1715:                                      ; preds = %sw.bb1710
  store i32 0, i32* %status, align 4, !dbg !6277
  br label %sw.epilog1867, !dbg !6279

if.end1716:                                       ; preds = %sw.bb1710
  %1128 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info, align 8, !dbg !6280
  %1129 = load i64, i64* %j, align 8, !dbg !6281
  %add.ptr1717 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %1128, i64 %1129, !dbg !6282
  %1130 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info, align 8, !dbg !6283
  %1131 = load i64, i64* %j, align 8, !dbg !6284
  %arrayidx1718 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %1130, i64 %1131, !dbg !6283
  %point1719 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx1718, i32 0, i32 0, !dbg !6285
  %1132 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info, align 8, !dbg !6286
  %1133 = load i64, i64* %j, align 8, !dbg !6287
  %add1720 = add nsw i64 %1133, 1, !dbg !6288
  %arrayidx1721 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %1132, i64 %add1720, !dbg !6286
  %point1722 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx1721, i32 0, i32 0, !dbg !6289
  %1134 = bitcast %struct._PointInfo* %point1719 to { double, double }*, !dbg !6290
  %1135 = getelementptr inbounds { double, double }, { double, double }* %1134, i32 0, i32 0, !dbg !6290
  %1136 = load double, double* %1135, align 8, !dbg !6290
  %1137 = getelementptr inbounds { double, double }, { double, double }* %1134, i32 0, i32 1, !dbg !6290
  %1138 = load double, double* %1137, align 8, !dbg !6290
  %1139 = bitcast %struct._PointInfo* %point1722 to { double, double }*, !dbg !6290
  %1140 = getelementptr inbounds { double, double }, { double, double }* %1139, i32 0, i32 0, !dbg !6290
  %1141 = load double, double* %1140, align 8, !dbg !6290
  %1142 = getelementptr inbounds { double, double }, { double, double }* %1139, i32 0, i32 1, !dbg !6290
  %1143 = load double, double* %1142, align 8, !dbg !6290
  call void @TraceRectangle(%struct._PrimitiveInfo* %add.ptr1717, double %1136, double %1138, double %1141, double %1143), !dbg !6290
  %1144 = load i64, i64* %j, align 8, !dbg !6291
  %1145 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info, align 8, !dbg !6292
  %1146 = load i64, i64* %j, align 8, !dbg !6293
  %arrayidx1723 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %1145, i64 %1146, !dbg !6292
  %coordinates1724 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx1723, i32 0, i32 1, !dbg !6294
  %1147 = load i64, i64* %coordinates1724, align 8, !dbg !6294
  %add1725 = add i64 %1144, %1147, !dbg !6295
  store i64 %add1725, i64* %i, align 8, !dbg !6296
  br label %sw.epilog1867, !dbg !6297

sw.bb1726:                                        ; preds = %if.end1679
  %1148 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info, align 8, !dbg !6298
  %1149 = load i64, i64* %j, align 8, !dbg !6301
  %arrayidx1727 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %1148, i64 %1149, !dbg !6298
  %coordinates1728 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx1727, i32 0, i32 1, !dbg !6302
  %1150 = load i64, i64* %coordinates1728, align 8, !dbg !6302
  %cmp1729 = icmp ne i64 %1150, 3, !dbg !6303
  br i1 %cmp1729, label %if.then1731, label %if.end1732, !dbg !6304

if.then1731:                                      ; preds = %sw.bb1726
  store i32 0, i32* %status, align 4, !dbg !6305
  br label %sw.epilog1867, !dbg !6307

if.end1732:                                       ; preds = %sw.bb1726
  %1151 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info, align 8, !dbg !6308
  %1152 = load i64, i64* %j, align 8, !dbg !6309
  %add.ptr1733 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %1151, i64 %1152, !dbg !6310
  %1153 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info, align 8, !dbg !6311
  %1154 = load i64, i64* %j, align 8, !dbg !6312
  %arrayidx1734 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %1153, i64 %1154, !dbg !6311
  %point1735 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx1734, i32 0, i32 0, !dbg !6313
  %1155 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info, align 8, !dbg !6314
  %1156 = load i64, i64* %j, align 8, !dbg !6315
  %add1736 = add nsw i64 %1156, 1, !dbg !6316
  %arrayidx1737 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %1155, i64 %add1736, !dbg !6314
  %point1738 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx1737, i32 0, i32 0, !dbg !6317
  %1157 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info, align 8, !dbg !6318
  %1158 = load i64, i64* %j, align 8, !dbg !6319
  %add1739 = add nsw i64 %1158, 2, !dbg !6320
  %arrayidx1740 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %1157, i64 %add1739, !dbg !6318
  %point1741 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx1740, i32 0, i32 0, !dbg !6321
  %1159 = bitcast %struct._PointInfo* %point1735 to { double, double }*, !dbg !6322
  %1160 = getelementptr inbounds { double, double }, { double, double }* %1159, i32 0, i32 0, !dbg !6322
  %1161 = load double, double* %1160, align 8, !dbg !6322
  %1162 = getelementptr inbounds { double, double }, { double, double }* %1159, i32 0, i32 1, !dbg !6322
  %1163 = load double, double* %1162, align 8, !dbg !6322
  %1164 = bitcast %struct._PointInfo* %point1738 to { double, double }*, !dbg !6322
  %1165 = getelementptr inbounds { double, double }, { double, double }* %1164, i32 0, i32 0, !dbg !6322
  %1166 = load double, double* %1165, align 8, !dbg !6322
  %1167 = getelementptr inbounds { double, double }, { double, double }* %1164, i32 0, i32 1, !dbg !6322
  %1168 = load double, double* %1167, align 8, !dbg !6322
  %1169 = bitcast %struct._PointInfo* %point1741 to { double, double }*, !dbg !6322
  %1170 = getelementptr inbounds { double, double }, { double, double }* %1169, i32 0, i32 0, !dbg !6322
  %1171 = load double, double* %1170, align 8, !dbg !6322
  %1172 = getelementptr inbounds { double, double }, { double, double }* %1169, i32 0, i32 1, !dbg !6322
  %1173 = load double, double* %1172, align 8, !dbg !6322
  call void @TraceRoundRectangle(%struct._PrimitiveInfo* %add.ptr1733, double %1161, double %1163, double %1166, double %1168, double %1171, double %1173), !dbg !6322
  %1174 = load i64, i64* %j, align 8, !dbg !6323
  %1175 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info, align 8, !dbg !6324
  %1176 = load i64, i64* %j, align 8, !dbg !6325
  %arrayidx1742 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %1175, i64 %1176, !dbg !6324
  %coordinates1743 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx1742, i32 0, i32 1, !dbg !6326
  %1177 = load i64, i64* %coordinates1743, align 8, !dbg !6326
  %add1744 = add i64 %1174, %1177, !dbg !6327
  store i64 %add1744, i64* %i, align 8, !dbg !6328
  br label %sw.epilog1867, !dbg !6329

sw.bb1745:                                        ; preds = %if.end1679
  %1178 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info, align 8, !dbg !6330
  %1179 = load i64, i64* %j, align 8, !dbg !6333
  %arrayidx1746 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %1178, i64 %1179, !dbg !6330
  %coordinates1747 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx1746, i32 0, i32 1, !dbg !6334
  %1180 = load i64, i64* %coordinates1747, align 8, !dbg !6334
  %cmp1748 = icmp ne i64 %1180, 3, !dbg !6335
  br i1 %cmp1748, label %if.then1750, label %if.end1751, !dbg !6336

if.then1750:                                      ; preds = %sw.bb1745
  store i32 0, i32* %primitive_type, align 4, !dbg !6337
  br label %sw.epilog1867, !dbg !6339

if.end1751:                                       ; preds = %sw.bb1745
  %1181 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info, align 8, !dbg !6340
  %1182 = load i64, i64* %j, align 8, !dbg !6341
  %add.ptr1752 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %1181, i64 %1182, !dbg !6342
  %1183 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info, align 8, !dbg !6343
  %1184 = load i64, i64* %j, align 8, !dbg !6344
  %arrayidx1753 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %1183, i64 %1184, !dbg !6343
  %point1754 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx1753, i32 0, i32 0, !dbg !6345
  %1185 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info, align 8, !dbg !6346
  %1186 = load i64, i64* %j, align 8, !dbg !6347
  %add1755 = add nsw i64 %1186, 1, !dbg !6348
  %arrayidx1756 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %1185, i64 %add1755, !dbg !6346
  %point1757 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx1756, i32 0, i32 0, !dbg !6349
  %1187 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info, align 8, !dbg !6350
  %1188 = load i64, i64* %j, align 8, !dbg !6351
  %add1758 = add nsw i64 %1188, 2, !dbg !6352
  %arrayidx1759 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %1187, i64 %add1758, !dbg !6350
  %point1760 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx1759, i32 0, i32 0, !dbg !6353
  %1189 = bitcast %struct._PointInfo* %point1754 to { double, double }*, !dbg !6354
  %1190 = getelementptr inbounds { double, double }, { double, double }* %1189, i32 0, i32 0, !dbg !6354
  %1191 = load double, double* %1190, align 8, !dbg !6354
  %1192 = getelementptr inbounds { double, double }, { double, double }* %1189, i32 0, i32 1, !dbg !6354
  %1193 = load double, double* %1192, align 8, !dbg !6354
  %1194 = bitcast %struct._PointInfo* %point1757 to { double, double }*, !dbg !6354
  %1195 = getelementptr inbounds { double, double }, { double, double }* %1194, i32 0, i32 0, !dbg !6354
  %1196 = load double, double* %1195, align 8, !dbg !6354
  %1197 = getelementptr inbounds { double, double }, { double, double }* %1194, i32 0, i32 1, !dbg !6354
  %1198 = load double, double* %1197, align 8, !dbg !6354
  %1199 = bitcast %struct._PointInfo* %point1760 to { double, double }*, !dbg !6354
  %1200 = getelementptr inbounds { double, double }, { double, double }* %1199, i32 0, i32 0, !dbg !6354
  %1201 = load double, double* %1200, align 8, !dbg !6354
  %1202 = getelementptr inbounds { double, double }, { double, double }* %1199, i32 0, i32 1, !dbg !6354
  %1203 = load double, double* %1202, align 8, !dbg !6354
  call void @TraceArc(%struct._PrimitiveInfo* %add.ptr1752, double %1191, double %1193, double %1196, double %1198, double %1201, double %1203), !dbg !6354
  %1204 = load i64, i64* %j, align 8, !dbg !6355
  %1205 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info, align 8, !dbg !6356
  %1206 = load i64, i64* %j, align 8, !dbg !6357
  %arrayidx1761 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %1205, i64 %1206, !dbg !6356
  %coordinates1762 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx1761, i32 0, i32 1, !dbg !6358
  %1207 = load i64, i64* %coordinates1762, align 8, !dbg !6358
  %add1763 = add i64 %1204, %1207, !dbg !6359
  store i64 %add1763, i64* %i, align 8, !dbg !6360
  br label %sw.epilog1867, !dbg !6361

sw.bb1764:                                        ; preds = %if.end1679
  %1208 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info, align 8, !dbg !6362
  %1209 = load i64, i64* %j, align 8, !dbg !6365
  %arrayidx1765 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %1208, i64 %1209, !dbg !6362
  %coordinates1766 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx1765, i32 0, i32 1, !dbg !6366
  %1210 = load i64, i64* %coordinates1766, align 8, !dbg !6366
  %cmp1767 = icmp ne i64 %1210, 3, !dbg !6367
  br i1 %cmp1767, label %if.then1769, label %if.end1770, !dbg !6368

if.then1769:                                      ; preds = %sw.bb1764
  store i32 0, i32* %status, align 4, !dbg !6369
  br label %sw.epilog1867, !dbg !6371

if.end1770:                                       ; preds = %sw.bb1764
  %1211 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info, align 8, !dbg !6372
  %1212 = load i64, i64* %j, align 8, !dbg !6373
  %add.ptr1771 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %1211, i64 %1212, !dbg !6374
  %1213 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info, align 8, !dbg !6375
  %1214 = load i64, i64* %j, align 8, !dbg !6376
  %arrayidx1772 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %1213, i64 %1214, !dbg !6375
  %point1773 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx1772, i32 0, i32 0, !dbg !6377
  %1215 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info, align 8, !dbg !6378
  %1216 = load i64, i64* %j, align 8, !dbg !6379
  %add1774 = add nsw i64 %1216, 1, !dbg !6380
  %arrayidx1775 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %1215, i64 %add1774, !dbg !6378
  %point1776 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx1775, i32 0, i32 0, !dbg !6381
  %1217 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info, align 8, !dbg !6382
  %1218 = load i64, i64* %j, align 8, !dbg !6383
  %add1777 = add nsw i64 %1218, 2, !dbg !6384
  %arrayidx1778 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %1217, i64 %add1777, !dbg !6382
  %point1779 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx1778, i32 0, i32 0, !dbg !6385
  %1219 = bitcast %struct._PointInfo* %point1773 to { double, double }*, !dbg !6386
  %1220 = getelementptr inbounds { double, double }, { double, double }* %1219, i32 0, i32 0, !dbg !6386
  %1221 = load double, double* %1220, align 8, !dbg !6386
  %1222 = getelementptr inbounds { double, double }, { double, double }* %1219, i32 0, i32 1, !dbg !6386
  %1223 = load double, double* %1222, align 8, !dbg !6386
  %1224 = bitcast %struct._PointInfo* %point1776 to { double, double }*, !dbg !6386
  %1225 = getelementptr inbounds { double, double }, { double, double }* %1224, i32 0, i32 0, !dbg !6386
  %1226 = load double, double* %1225, align 8, !dbg !6386
  %1227 = getelementptr inbounds { double, double }, { double, double }* %1224, i32 0, i32 1, !dbg !6386
  %1228 = load double, double* %1227, align 8, !dbg !6386
  %1229 = bitcast %struct._PointInfo* %point1779 to { double, double }*, !dbg !6386
  %1230 = getelementptr inbounds { double, double }, { double, double }* %1229, i32 0, i32 0, !dbg !6386
  %1231 = load double, double* %1230, align 8, !dbg !6386
  %1232 = getelementptr inbounds { double, double }, { double, double }* %1229, i32 0, i32 1, !dbg !6386
  %1233 = load double, double* %1232, align 8, !dbg !6386
  call void @TraceEllipse(%struct._PrimitiveInfo* %add.ptr1771, double %1221, double %1223, double %1226, double %1228, double %1231, double %1233), !dbg !6386
  %1234 = load i64, i64* %j, align 8, !dbg !6387
  %1235 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info, align 8, !dbg !6388
  %1236 = load i64, i64* %j, align 8, !dbg !6389
  %arrayidx1780 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %1235, i64 %1236, !dbg !6388
  %coordinates1781 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx1780, i32 0, i32 1, !dbg !6390
  %1237 = load i64, i64* %coordinates1781, align 8, !dbg !6390
  %add1782 = add i64 %1234, %1237, !dbg !6391
  store i64 %add1782, i64* %i, align 8, !dbg !6392
  br label %sw.epilog1867, !dbg !6393

sw.bb1783:                                        ; preds = %if.end1679
  %1238 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info, align 8, !dbg !6394
  %1239 = load i64, i64* %j, align 8, !dbg !6397
  %arrayidx1784 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %1238, i64 %1239, !dbg !6394
  %coordinates1785 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx1784, i32 0, i32 1, !dbg !6398
  %1240 = load i64, i64* %coordinates1785, align 8, !dbg !6398
  %cmp1786 = icmp ne i64 %1240, 2, !dbg !6399
  br i1 %cmp1786, label %if.then1788, label %if.end1789, !dbg !6400

if.then1788:                                      ; preds = %sw.bb1783
  store i32 0, i32* %status, align 4, !dbg !6401
  br label %sw.epilog1867, !dbg !6403

if.end1789:                                       ; preds = %sw.bb1783
  %1241 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info, align 8, !dbg !6404
  %1242 = load i64, i64* %j, align 8, !dbg !6405
  %add.ptr1790 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %1241, i64 %1242, !dbg !6406
  %1243 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info, align 8, !dbg !6407
  %1244 = load i64, i64* %j, align 8, !dbg !6408
  %arrayidx1791 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %1243, i64 %1244, !dbg !6407
  %point1792 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx1791, i32 0, i32 0, !dbg !6409
  %1245 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info, align 8, !dbg !6410
  %1246 = load i64, i64* %j, align 8, !dbg !6411
  %add1793 = add nsw i64 %1246, 1, !dbg !6412
  %arrayidx1794 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %1245, i64 %add1793, !dbg !6410
  %point1795 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx1794, i32 0, i32 0, !dbg !6413
  %1247 = bitcast %struct._PointInfo* %point1792 to { double, double }*, !dbg !6414
  %1248 = getelementptr inbounds { double, double }, { double, double }* %1247, i32 0, i32 0, !dbg !6414
  %1249 = load double, double* %1248, align 8, !dbg !6414
  %1250 = getelementptr inbounds { double, double }, { double, double }* %1247, i32 0, i32 1, !dbg !6414
  %1251 = load double, double* %1250, align 8, !dbg !6414
  %1252 = bitcast %struct._PointInfo* %point1795 to { double, double }*, !dbg !6414
  %1253 = getelementptr inbounds { double, double }, { double, double }* %1252, i32 0, i32 0, !dbg !6414
  %1254 = load double, double* %1253, align 8, !dbg !6414
  %1255 = getelementptr inbounds { double, double }, { double, double }* %1252, i32 0, i32 1, !dbg !6414
  %1256 = load double, double* %1255, align 8, !dbg !6414
  call void @TraceCircle(%struct._PrimitiveInfo* %add.ptr1790, double %1249, double %1251, double %1254, double %1256), !dbg !6414
  %1257 = load i64, i64* %j, align 8, !dbg !6415
  %1258 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info, align 8, !dbg !6416
  %1259 = load i64, i64* %j, align 8, !dbg !6417
  %arrayidx1796 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %1258, i64 %1259, !dbg !6416
  %coordinates1797 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx1796, i32 0, i32 1, !dbg !6418
  %1260 = load i64, i64* %coordinates1797, align 8, !dbg !6418
  %add1798 = add i64 %1257, %1260, !dbg !6419
  store i64 %add1798, i64* %i, align 8, !dbg !6420
  br label %sw.epilog1867, !dbg !6421

sw.bb1799:                                        ; preds = %if.end1679
  br label %sw.epilog1867, !dbg !6422

sw.bb1800:                                        ; preds = %if.end1679
  %1261 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info, align 8, !dbg !6423
  %1262 = load i64, i64* %i, align 8, !dbg !6425
  %arrayidx1801 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %1261, i64 %1262, !dbg !6423
  %1263 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info, align 8, !dbg !6426
  %1264 = load i64, i64* %j, align 8, !dbg !6427
  %arrayidx1802 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %1263, i64 %1264, !dbg !6426
  %1265 = bitcast %struct._PrimitiveInfo* %arrayidx1801 to i8*, !dbg !6426
  %1266 = bitcast %struct._PrimitiveInfo* %arrayidx1802 to i8*, !dbg !6426
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1265, i8* align 8 %1266, i64 40, i1 false), !dbg !6426
  %1267 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info, align 8, !dbg !6428
  %1268 = load i64, i64* %i, align 8, !dbg !6429
  %arrayidx1803 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %1267, i64 %1268, !dbg !6428
  %coordinates1804 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx1803, i32 0, i32 1, !dbg !6430
  store i64 0, i64* %coordinates1804, align 8, !dbg !6431
  %1269 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info, align 8, !dbg !6432
  %1270 = load i64, i64* %j, align 8, !dbg !6433
  %arrayidx1805 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %1269, i64 %1270, !dbg !6432
  %coordinates1806 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx1805, i32 0, i32 1, !dbg !6434
  %1271 = load i64, i64* %coordinates1806, align 8, !dbg !6435
  %inc1807 = add i64 %1271, 1, !dbg !6435
  store i64 %inc1807, i64* %coordinates1806, align 8, !dbg !6435
  %1272 = load i64, i64* %i, align 8, !dbg !6436
  %inc1808 = add nsw i64 %1272, 1, !dbg !6436
  store i64 %inc1808, i64* %i, align 8, !dbg !6436
  br label %sw.epilog1867, !dbg !6437

sw.bb1809:                                        ; preds = %if.end1679
  %1273 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info, align 8, !dbg !6438
  %1274 = load i64, i64* %j, align 8, !dbg !6441
  %arrayidx1810 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %1273, i64 %1274, !dbg !6438
  %coordinates1811 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx1810, i32 0, i32 1, !dbg !6442
  %1275 = load i64, i64* %coordinates1811, align 8, !dbg !6442
  %cmp1812 = icmp ult i64 %1275, 3, !dbg !6443
  br i1 %cmp1812, label %if.then1814, label %if.end1815, !dbg !6444

if.then1814:                                      ; preds = %sw.bb1809
  store i32 0, i32* %status, align 4, !dbg !6445
  br label %sw.epilog1867, !dbg !6447

if.end1815:                                       ; preds = %sw.bb1809
  %1276 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info, align 8, !dbg !6448
  %1277 = load i64, i64* %j, align 8, !dbg !6449
  %add.ptr1816 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %1276, i64 %1277, !dbg !6450
  %1278 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info, align 8, !dbg !6451
  %1279 = load i64, i64* %j, align 8, !dbg !6452
  %arrayidx1817 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %1278, i64 %1279, !dbg !6451
  %coordinates1818 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx1817, i32 0, i32 1, !dbg !6453
  %1280 = load i64, i64* %coordinates1818, align 8, !dbg !6453
  call void @TraceBezier(%struct._PrimitiveInfo* %add.ptr1816, i64 %1280), !dbg !6454
  %1281 = load i64, i64* %j, align 8, !dbg !6455
  %1282 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info, align 8, !dbg !6456
  %1283 = load i64, i64* %j, align 8, !dbg !6457
  %arrayidx1819 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %1282, i64 %1283, !dbg !6456
  %coordinates1820 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx1819, i32 0, i32 1, !dbg !6458
  %1284 = load i64, i64* %coordinates1820, align 8, !dbg !6458
  %add1821 = add i64 %1281, %1284, !dbg !6459
  store i64 %add1821, i64* %i, align 8, !dbg !6460
  br label %sw.epilog1867, !dbg !6461

sw.bb1822:                                        ; preds = %if.end1679
  %1285 = load i64, i64* %j, align 8, !dbg !6462
  %1286 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info, align 8, !dbg !6464
  %1287 = load i64, i64* %j, align 8, !dbg !6465
  %add.ptr1823 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %1286, i64 %1287, !dbg !6466
  %1288 = load i8*, i8** %token, align 8, !dbg !6467
  %call1824 = call i64 @TracePath(%struct._PrimitiveInfo* %add.ptr1823, i8* %1288), !dbg !6468
  %add1825 = add i64 %1285, %call1824, !dbg !6469
  store i64 %add1825, i64* %i, align 8, !dbg !6470
  br label %sw.epilog1867, !dbg !6471

sw.bb1826:                                        ; preds = %if.end1679, %if.end1679
  call void @llvm.dbg.declare(metadata i64* %method1827, metadata !6472, metadata !DIExpression()), !dbg !6474
  %1289 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info, align 8, !dbg !6475
  %1290 = load i64, i64* %j, align 8, !dbg !6477
  %arrayidx1828 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %1289, i64 %1290, !dbg !6475
  %coordinates1829 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx1828, i32 0, i32 1, !dbg !6478
  %1291 = load i64, i64* %coordinates1829, align 8, !dbg !6478
  %cmp1830 = icmp ne i64 %1291, 1, !dbg !6479
  br i1 %cmp1830, label %if.then1832, label %if.end1833, !dbg !6480

if.then1832:                                      ; preds = %sw.bb1826
  store i32 0, i32* %status, align 4, !dbg !6481
  br label %sw.epilog1867, !dbg !6483

if.end1833:                                       ; preds = %sw.bb1826
  %1292 = load i8*, i8** %q, align 8, !dbg !6484
  %1293 = load i8*, i8** %token, align 8, !dbg !6485
  call void @GetMagickToken(i8* %1292, i8** %q, i8* %1293), !dbg !6486
  %1294 = load i8*, i8** %token, align 8, !dbg !6487
  %call1834 = call i64 @ParseCommandOption(i32 43, i32 0, i8* %1294), !dbg !6488
  store i64 %call1834, i64* %method1827, align 8, !dbg !6489
  %1295 = load i64, i64* %method1827, align 8, !dbg !6490
  %cmp1835 = icmp eq i64 %1295, -1, !dbg !6492
  br i1 %cmp1835, label %if.then1837, label %if.end1838, !dbg !6493

if.then1837:                                      ; preds = %if.end1833
  store i32 0, i32* %status, align 4, !dbg !6494
  br label %sw.epilog1867, !dbg !6496

if.end1838:                                       ; preds = %if.end1833
  %1296 = load i64, i64* %method1827, align 8, !dbg !6497
  %conv1839 = trunc i64 %1296 to i32, !dbg !6498
  %1297 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info, align 8, !dbg !6499
  %1298 = load i64, i64* %j, align 8, !dbg !6500
  %arrayidx1840 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %1297, i64 %1298, !dbg !6499
  %method1841 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx1840, i32 0, i32 3, !dbg !6501
  store i32 %conv1839, i32* %method1841, align 4, !dbg !6502
  br label %sw.epilog1867, !dbg !6503

sw.bb1842:                                        ; preds = %if.end1679
  %1299 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info, align 8, !dbg !6504
  %1300 = load i64, i64* %j, align 8, !dbg !6507
  %arrayidx1843 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %1299, i64 %1300, !dbg !6504
  %coordinates1844 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx1843, i32 0, i32 1, !dbg !6508
  %1301 = load i64, i64* %coordinates1844, align 8, !dbg !6508
  %cmp1845 = icmp ne i64 %1301, 1, !dbg !6509
  br i1 %cmp1845, label %if.then1847, label %if.end1848, !dbg !6510

if.then1847:                                      ; preds = %sw.bb1842
  store i32 0, i32* %status, align 4, !dbg !6511
  br label %sw.epilog1867, !dbg !6513

if.end1848:                                       ; preds = %sw.bb1842
  %1302 = load i8*, i8** %token, align 8, !dbg !6514
  %1303 = load i8, i8* %1302, align 1, !dbg !6516
  %conv1849 = sext i8 %1303 to i32, !dbg !6516
  %cmp1850 = icmp ne i32 %conv1849, 44, !dbg !6517
  br i1 %cmp1850, label %if.then1852, label %if.end1853, !dbg !6518

if.then1852:                                      ; preds = %if.end1848
  %1304 = load i8*, i8** %q, align 8, !dbg !6519
  %1305 = load i8*, i8** %token, align 8, !dbg !6520
  call void @GetMagickToken(i8* %1304, i8** %q, i8* %1305), !dbg !6521
  br label %if.end1853, !dbg !6521

if.end1853:                                       ; preds = %if.then1852, %if.end1848
  %1306 = load i8*, i8** %token, align 8, !dbg !6522
  %call1854 = call i8* @AcquireString(i8* %1306), !dbg !6523
  %1307 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info, align 8, !dbg !6524
  %1308 = load i64, i64* %j, align 8, !dbg !6525
  %arrayidx1855 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %1307, i64 %1308, !dbg !6524
  %text1856 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx1855, i32 0, i32 4, !dbg !6526
  store i8* %call1854, i8** %text1856, align 8, !dbg !6527
  br label %sw.epilog1867, !dbg !6528

sw.bb1857:                                        ; preds = %if.end1679
  %1309 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info, align 8, !dbg !6529
  %1310 = load i64, i64* %j, align 8, !dbg !6532
  %arrayidx1858 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %1309, i64 %1310, !dbg !6529
  %coordinates1859 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx1858, i32 0, i32 1, !dbg !6533
  %1311 = load i64, i64* %coordinates1859, align 8, !dbg !6533
  %cmp1860 = icmp ne i64 %1311, 2, !dbg !6534
  br i1 %cmp1860, label %if.then1862, label %if.end1863, !dbg !6535

if.then1862:                                      ; preds = %sw.bb1857
  store i32 0, i32* %status, align 4, !dbg !6536
  br label %sw.epilog1867, !dbg !6538

if.end1863:                                       ; preds = %sw.bb1857
  %1312 = load i8*, i8** %q, align 8, !dbg !6539
  %1313 = load i8*, i8** %token, align 8, !dbg !6540
  call void @GetMagickToken(i8* %1312, i8** %q, i8* %1313), !dbg !6541
  %1314 = load i8*, i8** %token, align 8, !dbg !6542
  %call1864 = call i8* @AcquireString(i8* %1314), !dbg !6543
  %1315 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info, align 8, !dbg !6544
  %1316 = load i64, i64* %j, align 8, !dbg !6545
  %arrayidx1865 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %1315, i64 %1316, !dbg !6544
  %text1866 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx1865, i32 0, i32 4, !dbg !6546
  store i8* %call1864, i8** %text1866, align 8, !dbg !6547
  br label %sw.epilog1867, !dbg !6548

sw.epilog1867:                                    ; preds = %if.end1863, %if.then1862, %if.end1853, %if.then1847, %if.end1838, %if.then1837, %if.then1832, %sw.bb1822, %if.end1815, %if.then1814, %sw.bb1800, %sw.bb1799, %if.end1789, %if.then1788, %if.end1770, %if.then1769, %if.end1751, %if.then1750, %if.end1732, %if.then1731, %if.end1716, %if.then1715, %if.end1700, %if.then1699, %if.end1687, %if.then1686
  %1317 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info, align 8, !dbg !6549
  %cmp1868 = icmp eq %struct._PrimitiveInfo* %1317, null, !dbg !6551
  br i1 %cmp1868, label %if.then1870, label %if.end1871, !dbg !6552

if.then1870:                                      ; preds = %sw.epilog1867
  br label %for.end2056, !dbg !6553

if.end1871:                                       ; preds = %sw.epilog1867
  %1318 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6554
  %debug1872 = getelementptr inbounds %struct._Image, %struct._Image* %1318, i32 0, i32 59, !dbg !6556
  %1319 = load i32, i32* %debug1872, align 8, !dbg !6556
  %cmp1873 = icmp ne i32 %1319, 0, !dbg !6557
  br i1 %cmp1873, label %if.then1875, label %if.end1881, !dbg !6558

if.then1875:                                      ; preds = %if.end1871
  %1320 = load i8*, i8** %q, align 8, !dbg !6559
  %1321 = load i8*, i8** %p, align 8, !dbg !6560
  %sub.ptr.lhs.cast1876 = ptrtoint i8* %1320 to i64, !dbg !6561
  %sub.ptr.rhs.cast1877 = ptrtoint i8* %1321 to i64, !dbg !6561
  %sub.ptr.sub1878 = sub i64 %sub.ptr.lhs.cast1876, %sub.ptr.rhs.cast1877, !dbg !6561
  %conv1879 = trunc i64 %sub.ptr.sub1878 to i32, !dbg !6562
  %1322 = load i8*, i8** %p, align 8, !dbg !6563
  %call1880 = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 128, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3129, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.90, i64 0, i64 0), i32 %conv1879, i8* %1322), !dbg !6564
  br label %if.end1881, !dbg !6565

if.end1881:                                       ; preds = %if.then1875, %if.end1871
  %1323 = load i32, i32* %status, align 4, !dbg !6566
  %cmp1882 = icmp eq i32 %1323, 0, !dbg !6568
  br i1 %cmp1882, label %if.then1884, label %if.end1885, !dbg !6569

if.then1884:                                      ; preds = %if.end1881
  br label %for.end2056, !dbg !6570

if.end1885:                                       ; preds = %if.end1881
  %1324 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info, align 8, !dbg !6571
  %1325 = load i64, i64* %i, align 8, !dbg !6572
  %arrayidx1886 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %1324, i64 %1325, !dbg !6571
  %primitive1887 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx1886, i32 0, i32 2, !dbg !6573
  store i32 0, i32* %primitive1887, align 8, !dbg !6574
  %1326 = load i64, i64* %i, align 8, !dbg !6575
  %cmp1888 = icmp eq i64 %1326, 0, !dbg !6577
  br i1 %cmp1888, label %if.then1890, label %if.end1891, !dbg !6578

if.then1890:                                      ; preds = %if.end1885
  br label %for.cond95, !dbg !6579, !llvm.loop !3525

if.end1891:                                       ; preds = %if.end1885
  store i64 0, i64* %i, align 8, !dbg !6580
  br label %for.cond1892, !dbg !6582

for.cond1892:                                     ; preds = %for.inc2002, %if.end1891
  %1327 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info, align 8, !dbg !6583
  %1328 = load i64, i64* %i, align 8, !dbg !6585
  %arrayidx1893 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %1327, i64 %1328, !dbg !6583
  %primitive1894 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx1893, i32 0, i32 2, !dbg !6586
  %1329 = load i32, i32* %primitive1894, align 8, !dbg !6586
  %cmp1895 = icmp ne i32 %1329, 0, !dbg !6587
  br i1 %cmp1895, label %for.body1897, label %for.end2004, !dbg !6588

for.body1897:                                     ; preds = %for.cond1892
  %1330 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info, align 8, !dbg !6589
  %1331 = load i64, i64* %i, align 8, !dbg !6591
  %arrayidx1898 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %1330, i64 %1331, !dbg !6589
  %point1899 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx1898, i32 0, i32 0, !dbg !6592
  %1332 = bitcast %struct._PointInfo* %point to i8*, !dbg !6592
  %1333 = bitcast %struct._PointInfo* %point1899 to i8*, !dbg !6592
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1332, i8* align 8 %1333, i64 16, i1 false), !dbg !6592
  %1334 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !6593
  %1335 = load i64, i64* %n, align 8, !dbg !6594
  %arrayidx1900 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %1334, i64 %1335, !dbg !6593
  %1336 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx1900, align 8, !dbg !6593
  %affine1901 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %1336, i32 0, i32 3, !dbg !6595
  %sx1902 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %affine1901, i32 0, i32 0, !dbg !6596
  %1337 = load double, double* %sx1902, align 8, !dbg !6596
  %x1903 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 0, !dbg !6597
  %1338 = load double, double* %x1903, align 8, !dbg !6597
  %mul1904 = fmul double %1337, %1338, !dbg !6598
  %1339 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !6599
  %1340 = load i64, i64* %n, align 8, !dbg !6600
  %arrayidx1905 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %1339, i64 %1340, !dbg !6599
  %1341 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx1905, align 8, !dbg !6599
  %affine1906 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %1341, i32 0, i32 3, !dbg !6601
  %ry1907 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %affine1906, i32 0, i32 2, !dbg !6602
  %1342 = load double, double* %ry1907, align 8, !dbg !6602
  %y1908 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 1, !dbg !6603
  %1343 = load double, double* %y1908, align 8, !dbg !6603
  %mul1909 = fmul double %1342, %1343, !dbg !6604
  %add1910 = fadd double %mul1904, %mul1909, !dbg !6605
  %1344 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !6606
  %1345 = load i64, i64* %n, align 8, !dbg !6607
  %arrayidx1911 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %1344, i64 %1345, !dbg !6606
  %1346 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx1911, align 8, !dbg !6606
  %affine1912 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %1346, i32 0, i32 3, !dbg !6608
  %tx1913 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %affine1912, i32 0, i32 4, !dbg !6609
  %1347 = load double, double* %tx1913, align 8, !dbg !6609
  %add1914 = fadd double %add1910, %1347, !dbg !6610
  %1348 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info, align 8, !dbg !6611
  %1349 = load i64, i64* %i, align 8, !dbg !6612
  %arrayidx1915 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %1348, i64 %1349, !dbg !6611
  %point1916 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx1915, i32 0, i32 0, !dbg !6613
  %x1917 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point1916, i32 0, i32 0, !dbg !6614
  store double %add1914, double* %x1917, align 8, !dbg !6615
  %1350 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !6616
  %1351 = load i64, i64* %n, align 8, !dbg !6617
  %arrayidx1918 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %1350, i64 %1351, !dbg !6616
  %1352 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx1918, align 8, !dbg !6616
  %affine1919 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %1352, i32 0, i32 3, !dbg !6618
  %rx1920 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %affine1919, i32 0, i32 1, !dbg !6619
  %1353 = load double, double* %rx1920, align 8, !dbg !6619
  %x1921 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 0, !dbg !6620
  %1354 = load double, double* %x1921, align 8, !dbg !6620
  %mul1922 = fmul double %1353, %1354, !dbg !6621
  %1355 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !6622
  %1356 = load i64, i64* %n, align 8, !dbg !6623
  %arrayidx1923 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %1355, i64 %1356, !dbg !6622
  %1357 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx1923, align 8, !dbg !6622
  %affine1924 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %1357, i32 0, i32 3, !dbg !6624
  %sy1925 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %affine1924, i32 0, i32 3, !dbg !6625
  %1358 = load double, double* %sy1925, align 8, !dbg !6625
  %y1926 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 1, !dbg !6626
  %1359 = load double, double* %y1926, align 8, !dbg !6626
  %mul1927 = fmul double %1358, %1359, !dbg !6627
  %add1928 = fadd double %mul1922, %mul1927, !dbg !6628
  %1360 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !6629
  %1361 = load i64, i64* %n, align 8, !dbg !6630
  %arrayidx1929 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %1360, i64 %1361, !dbg !6629
  %1362 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx1929, align 8, !dbg !6629
  %affine1930 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %1362, i32 0, i32 3, !dbg !6631
  %ty1931 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %affine1930, i32 0, i32 5, !dbg !6632
  %1363 = load double, double* %ty1931, align 8, !dbg !6632
  %add1932 = fadd double %add1928, %1363, !dbg !6633
  %1364 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info, align 8, !dbg !6634
  %1365 = load i64, i64* %i, align 8, !dbg !6635
  %arrayidx1933 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %1364, i64 %1365, !dbg !6634
  %point1934 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx1933, i32 0, i32 0, !dbg !6636
  %y1935 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point1934, i32 0, i32 1, !dbg !6637
  store double %add1932, double* %y1935, align 8, !dbg !6638
  %1366 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info, align 8, !dbg !6639
  %1367 = load i64, i64* %i, align 8, !dbg !6640
  %arrayidx1936 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %1366, i64 %1367, !dbg !6639
  %point1937 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx1936, i32 0, i32 0, !dbg !6641
  %1368 = bitcast %struct._PointInfo* %point to i8*, !dbg !6641
  %1369 = bitcast %struct._PointInfo* %point1937 to i8*, !dbg !6641
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1368, i8* align 8 %1369, i64 16, i1 false), !dbg !6641
  %x1938 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 0, !dbg !6642
  %1370 = load double, double* %x1938, align 8, !dbg !6642
  %1371 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !6644
  %1372 = load i64, i64* %n, align 8, !dbg !6645
  %arrayidx1939 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %1371, i64 %1372, !dbg !6644
  %1373 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx1939, align 8, !dbg !6644
  %bounds1940 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %1373, i32 0, i32 38, !dbg !6646
  %x11941 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds1940, i32 0, i32 0, !dbg !6647
  %1374 = load double, double* %x11941, align 8, !dbg !6647
  %cmp1942 = fcmp olt double %1370, %1374, !dbg !6648
  br i1 %cmp1942, label %if.then1944, label %if.end1949, !dbg !6649

if.then1944:                                      ; preds = %for.body1897
  %x1945 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 0, !dbg !6650
  %1375 = load double, double* %x1945, align 8, !dbg !6650
  %1376 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !6651
  %1377 = load i64, i64* %n, align 8, !dbg !6652
  %arrayidx1946 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %1376, i64 %1377, !dbg !6651
  %1378 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx1946, align 8, !dbg !6651
  %bounds1947 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %1378, i32 0, i32 38, !dbg !6653
  %x11948 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds1947, i32 0, i32 0, !dbg !6654
  store double %1375, double* %x11948, align 8, !dbg !6655
  br label %if.end1949, !dbg !6651

if.end1949:                                       ; preds = %if.then1944, %for.body1897
  %y1950 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 1, !dbg !6656
  %1379 = load double, double* %y1950, align 8, !dbg !6656
  %1380 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !6658
  %1381 = load i64, i64* %n, align 8, !dbg !6659
  %arrayidx1951 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %1380, i64 %1381, !dbg !6658
  %1382 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx1951, align 8, !dbg !6658
  %bounds1952 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %1382, i32 0, i32 38, !dbg !6660
  %y11953 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds1952, i32 0, i32 1, !dbg !6661
  %1383 = load double, double* %y11953, align 8, !dbg !6661
  %cmp1954 = fcmp olt double %1379, %1383, !dbg !6662
  br i1 %cmp1954, label %if.then1956, label %if.end1961, !dbg !6663

if.then1956:                                      ; preds = %if.end1949
  %y1957 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 1, !dbg !6664
  %1384 = load double, double* %y1957, align 8, !dbg !6664
  %1385 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !6665
  %1386 = load i64, i64* %n, align 8, !dbg !6666
  %arrayidx1958 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %1385, i64 %1386, !dbg !6665
  %1387 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx1958, align 8, !dbg !6665
  %bounds1959 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %1387, i32 0, i32 38, !dbg !6667
  %y11960 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds1959, i32 0, i32 1, !dbg !6668
  store double %1384, double* %y11960, align 8, !dbg !6669
  br label %if.end1961, !dbg !6665

if.end1961:                                       ; preds = %if.then1956, %if.end1949
  %x1962 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 0, !dbg !6670
  %1388 = load double, double* %x1962, align 8, !dbg !6670
  %1389 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !6672
  %1390 = load i64, i64* %n, align 8, !dbg !6673
  %arrayidx1963 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %1389, i64 %1390, !dbg !6672
  %1391 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx1963, align 8, !dbg !6672
  %bounds1964 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %1391, i32 0, i32 38, !dbg !6674
  %x21965 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds1964, i32 0, i32 2, !dbg !6675
  %1392 = load double, double* %x21965, align 8, !dbg !6675
  %cmp1966 = fcmp ogt double %1388, %1392, !dbg !6676
  br i1 %cmp1966, label %if.then1968, label %if.end1973, !dbg !6677

if.then1968:                                      ; preds = %if.end1961
  %x1969 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 0, !dbg !6678
  %1393 = load double, double* %x1969, align 8, !dbg !6678
  %1394 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !6679
  %1395 = load i64, i64* %n, align 8, !dbg !6680
  %arrayidx1970 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %1394, i64 %1395, !dbg !6679
  %1396 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx1970, align 8, !dbg !6679
  %bounds1971 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %1396, i32 0, i32 38, !dbg !6681
  %x21972 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds1971, i32 0, i32 2, !dbg !6682
  store double %1393, double* %x21972, align 8, !dbg !6683
  br label %if.end1973, !dbg !6679

if.end1973:                                       ; preds = %if.then1968, %if.end1961
  %y1974 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 1, !dbg !6684
  %1397 = load double, double* %y1974, align 8, !dbg !6684
  %1398 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !6686
  %1399 = load i64, i64* %n, align 8, !dbg !6687
  %arrayidx1975 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %1398, i64 %1399, !dbg !6686
  %1400 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx1975, align 8, !dbg !6686
  %bounds1976 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %1400, i32 0, i32 38, !dbg !6688
  %y21977 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds1976, i32 0, i32 3, !dbg !6689
  %1401 = load double, double* %y21977, align 8, !dbg !6689
  %cmp1978 = fcmp ogt double %1397, %1401, !dbg !6690
  br i1 %cmp1978, label %if.then1980, label %if.end1985, !dbg !6691

if.then1980:                                      ; preds = %if.end1973
  %y1981 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 1, !dbg !6692
  %1402 = load double, double* %y1981, align 8, !dbg !6692
  %1403 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !6693
  %1404 = load i64, i64* %n, align 8, !dbg !6694
  %arrayidx1982 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %1403, i64 %1404, !dbg !6693
  %1405 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx1982, align 8, !dbg !6693
  %bounds1983 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %1405, i32 0, i32 38, !dbg !6695
  %y21984 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds1983, i32 0, i32 3, !dbg !6696
  store double %1402, double* %y21984, align 8, !dbg !6697
  br label %if.end1985, !dbg !6693

if.end1985:                                       ; preds = %if.then1980, %if.end1973
  %1406 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info, align 8, !dbg !6698
  %1407 = load i64, i64* %i, align 8, !dbg !6700
  %arrayidx1986 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %1406, i64 %1407, !dbg !6698
  %primitive1987 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx1986, i32 0, i32 2, !dbg !6701
  %1408 = load i32, i32* %primitive1987, align 8, !dbg !6701
  %cmp1988 = icmp eq i32 %1408, 14, !dbg !6702
  br i1 %cmp1988, label %if.then1990, label %if.end1991, !dbg !6703

if.then1990:                                      ; preds = %if.end1985
  br label %for.end2004, !dbg !6704

if.end1991:                                       ; preds = %if.end1985
  %1409 = load i64, i64* %i, align 8, !dbg !6705
  %1410 = load i64, i64* %number_points, align 8, !dbg !6707
  %cmp1992 = icmp sge i64 %1409, %1410, !dbg !6708
  br i1 %cmp1992, label %if.then1994, label %if.end2001, !dbg !6709

if.then1994:                                      ; preds = %if.end1991
  call void @llvm.dbg.declare(metadata i8** %message, metadata !6710, metadata !DIExpression()), !dbg !6712
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo* %exception1995, metadata !6713, metadata !DIExpression()), !dbg !6712
  call void @GetExceptionInfo(%struct._ExceptionInfo* %exception1995), !dbg !6712
  %call1996 = call i32* @__errno_location() #12, !dbg !6712
  %1411 = load i32, i32* %call1996, align 4, !dbg !6712
  %call1997 = call i8* @GetExceptionMessage(i32 %1411), !dbg !6712
  store i8* %call1997, i8** %message, align 8, !dbg !6712
  %1412 = load i8*, i8** %message, align 8, !dbg !6712
  %call1998 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %exception1995, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3157, i32 700, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* %1412), !dbg !6712
  %1413 = load i8*, i8** %message, align 8, !dbg !6712
  %call1999 = call i8* @DestroyString(i8* %1413), !dbg !6712
  store i8* %call1999, i8** %message, align 8, !dbg !6712
  call void @CatchException(%struct._ExceptionInfo* %exception1995), !dbg !6712
  %call2000 = call %struct._ExceptionInfo* @DestroyExceptionInfo(%struct._ExceptionInfo* %exception1995), !dbg !6712
  call void @MagickCoreTerminus(), !dbg !6712
  call void @_exit(i32 1) #13, !dbg !6712
  unreachable, !dbg !6712

if.end2001:                                       ; preds = %if.end1991
  br label %for.inc2002, !dbg !6714

for.inc2002:                                      ; preds = %if.end2001
  %1414 = load i64, i64* %i, align 8, !dbg !6715
  %inc2003 = add nsw i64 %1414, 1, !dbg !6715
  store i64 %inc2003, i64* %i, align 8, !dbg !6715
  br label %for.cond1892, !dbg !6716, !llvm.loop !6717

for.end2004:                                      ; preds = %if.then1990, %for.cond1892
  %1415 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !6719
  %1416 = load i64, i64* %n, align 8, !dbg !6721
  %arrayidx2005 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %1415, i64 %1416, !dbg !6719
  %1417 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx2005, align 8, !dbg !6719
  %render = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %1417, i32 0, i32 41, !dbg !6722
  %1418 = load i32, i32* %render, align 8, !dbg !6722
  %cmp2006 = icmp ne i32 %1418, 0, !dbg !6723
  br i1 %cmp2006, label %if.then2008, label %if.end2034, !dbg !6724

if.then2008:                                      ; preds = %for.end2004
  %1419 = load i64, i64* %n, align 8, !dbg !6725
  %cmp2009 = icmp ne i64 %1419, 0, !dbg !6728
  br i1 %cmp2009, label %land.lhs.true, label %if.end2030, !dbg !6729

land.lhs.true:                                    ; preds = %if.then2008
  %1420 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !6730
  %1421 = load i64, i64* %n, align 8, !dbg !6731
  %arrayidx2011 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %1420, i64 %1421, !dbg !6730
  %1422 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx2011, align 8, !dbg !6730
  %clip_mask2012 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %1422, i32 0, i32 37, !dbg !6732
  %1423 = load i8*, i8** %clip_mask2012, align 8, !dbg !6732
  %cmp2013 = icmp ne i8* %1423, null, !dbg !6733
  br i1 %cmp2013, label %land.lhs.true2015, label %if.end2030, !dbg !6734

land.lhs.true2015:                                ; preds = %land.lhs.true
  %1424 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !6735
  %1425 = load i64, i64* %n, align 8, !dbg !6736
  %arrayidx2016 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %1424, i64 %1425, !dbg !6735
  %1426 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx2016, align 8, !dbg !6735
  %clip_mask2017 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %1426, i32 0, i32 37, !dbg !6737
  %1427 = load i8*, i8** %clip_mask2017, align 8, !dbg !6737
  %1428 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !6738
  %1429 = load i64, i64* %n, align 8, !dbg !6739
  %sub2018 = sub nsw i64 %1429, 1, !dbg !6740
  %arrayidx2019 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %1428, i64 %sub2018, !dbg !6738
  %1430 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx2019, align 8, !dbg !6738
  %clip_mask2020 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %1430, i32 0, i32 37, !dbg !6741
  %1431 = load i8*, i8** %clip_mask2020, align 8, !dbg !6741
  %call2021 = call i32 @LocaleCompare(i8* %1427, i8* %1431), !dbg !6742
  %cmp2022 = icmp ne i32 %call2021, 0, !dbg !6743
  br i1 %cmp2022, label %if.then2024, label %if.end2030, !dbg !6744

if.then2024:                                      ; preds = %land.lhs.true2015
  %1432 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6745
  %1433 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !6746
  %1434 = load i64, i64* %n, align 8, !dbg !6747
  %arrayidx2025 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %1433, i64 %1434, !dbg !6746
  %1435 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx2025, align 8, !dbg !6746
  %1436 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !6748
  %1437 = load i64, i64* %n, align 8, !dbg !6749
  %arrayidx2026 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %1436, i64 %1437, !dbg !6748
  %1438 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx2026, align 8, !dbg !6748
  %clip_mask2027 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %1438, i32 0, i32 37, !dbg !6750
  %1439 = load i8*, i8** %clip_mask2027, align 8, !dbg !6750
  %call2028 = call i32 @DrawClipPath(%struct._Image* %1432, %struct._DrawInfo* %1435, i8* %1439), !dbg !6751
  %1440 = load i32, i32* %status, align 4, !dbg !6752
  %and2029 = and i32 %1440, %call2028, !dbg !6752
  store i32 %and2029, i32* %status, align 4, !dbg !6752
  br label %if.end2030, !dbg !6753

if.end2030:                                       ; preds = %if.then2024, %land.lhs.true2015, %land.lhs.true, %if.then2008
  %1441 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6754
  %1442 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !6755
  %1443 = load i64, i64* %n, align 8, !dbg !6756
  %arrayidx2031 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %1442, i64 %1443, !dbg !6755
  %1444 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx2031, align 8, !dbg !6755
  %1445 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info, align 8, !dbg !6757
  %call2032 = call i32 @DrawPrimitive(%struct._Image* %1441, %struct._DrawInfo* %1444, %struct._PrimitiveInfo* %1445), !dbg !6758
  %1446 = load i32, i32* %status, align 4, !dbg !6759
  %and2033 = and i32 %1446, %call2032, !dbg !6759
  store i32 %and2033, i32* %status, align 4, !dbg !6759
  br label %if.end2034, !dbg !6760

if.end2034:                                       ; preds = %if.end2030, %for.end2004
  %1447 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info, align 8, !dbg !6761
  %text2035 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %1447, i32 0, i32 4, !dbg !6763
  %1448 = load i8*, i8** %text2035, align 8, !dbg !6763
  %cmp2036 = icmp ne i8* %1448, null, !dbg !6764
  br i1 %cmp2036, label %if.then2038, label %if.end2042, !dbg !6765

if.then2038:                                      ; preds = %if.end2034
  %1449 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info, align 8, !dbg !6766
  %text2039 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %1449, i32 0, i32 4, !dbg !6767
  %1450 = load i8*, i8** %text2039, align 8, !dbg !6767
  %call2040 = call i8* @RelinquishMagickMemory(i8* %1450), !dbg !6768
  %1451 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info, align 8, !dbg !6769
  %text2041 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %1451, i32 0, i32 4, !dbg !6770
  store i8* %call2040, i8** %text2041, align 8, !dbg !6771
  br label %if.end2042, !dbg !6769

if.end2042:                                       ; preds = %if.then2038, %if.end2034
  %1452 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6772
  %1453 = load i8*, i8** %q, align 8, !dbg !6773
  %1454 = load i8*, i8** %primitive, align 8, !dbg !6774
  %sub.ptr.lhs.cast2043 = ptrtoint i8* %1453 to i64, !dbg !6775
  %sub.ptr.rhs.cast2044 = ptrtoint i8* %1454 to i64, !dbg !6775
  %sub.ptr.sub2045 = sub i64 %sub.ptr.lhs.cast2043, %sub.ptr.rhs.cast2044, !dbg !6775
  %1455 = load double, double* %primitive_extent, align 8, !dbg !6776
  %conv2046 = fptoui double %1455 to i64, !dbg !6777
  %call2047 = call i32 @SetImageProgress(%struct._Image* %1452, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.92, i64 0, i64 0), i64 %sub.ptr.sub2045, i64 %conv2046), !dbg !6778
  store i32 %call2047, i32* %proceed, align 4, !dbg !6779
  %1456 = load i32, i32* %proceed, align 4, !dbg !6780
  %cmp2048 = icmp eq i32 %1456, 0, !dbg !6782
  br i1 %cmp2048, label %if.then2050, label %if.end2051, !dbg !6783

if.then2050:                                      ; preds = %if.end2042
  br label %for.end2056, !dbg !6784

if.end2051:                                       ; preds = %if.end2042
  %1457 = load i32, i32* %status, align 4, !dbg !6785
  %cmp2052 = icmp eq i32 %1457, 0, !dbg !6787
  br i1 %cmp2052, label %if.then2054, label %if.end2055, !dbg !6788

if.then2054:                                      ; preds = %if.end2051
  br label %for.end2056, !dbg !6789

if.end2055:                                       ; preds = %if.end2051
  br label %for.cond95, !dbg !6790, !llvm.loop !3525

for.end2056:                                      ; preds = %if.then2054, %if.then2050, %if.then1884, %if.then1870, %if.then1673, %if.then1389, %if.then105, %for.cond95
  %1458 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6791
  %debug2057 = getelementptr inbounds %struct._Image, %struct._Image* %1458, i32 0, i32 59, !dbg !6793
  %1459 = load i32, i32* %debug2057, align 8, !dbg !6793
  %cmp2058 = icmp ne i32 %1459, 0, !dbg !6794
  br i1 %cmp2058, label %if.then2060, label %if.end2062, !dbg !6795

if.then2060:                                      ; preds = %for.end2056
  %call2061 = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 128, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3179, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.93, i64 0, i64 0)), !dbg !6796
  br label %if.end2062, !dbg !6797

if.end2062:                                       ; preds = %if.then2060, %for.end2056
  %1460 = load i8*, i8** %token, align 8, !dbg !6798
  %call2063 = call i8* @DestroyString(i8* %1460), !dbg !6799
  store i8* %call2063, i8** %token, align 8, !dbg !6800
  %1461 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info, align 8, !dbg !6801
  %cmp2064 = icmp ne %struct._PrimitiveInfo* %1461, null, !dbg !6803
  br i1 %cmp2064, label %if.then2066, label %if.end2068, !dbg !6804

if.then2066:                                      ; preds = %if.end2062
  %1462 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info, align 8, !dbg !6805
  %1463 = bitcast %struct._PrimitiveInfo* %1462 to i8*, !dbg !6805
  %call2067 = call i8* @RelinquishMagickMemory(i8* %1463), !dbg !6806
  %1464 = bitcast i8* %call2067 to %struct._PrimitiveInfo*, !dbg !6807
  store %struct._PrimitiveInfo* %1464, %struct._PrimitiveInfo** %primitive_info, align 8, !dbg !6808
  br label %if.end2068, !dbg !6809

if.end2068:                                       ; preds = %if.then2066, %if.end2062
  %1465 = load i8*, i8** %primitive, align 8, !dbg !6810
  %call2069 = call i8* @DestroyString(i8* %1465), !dbg !6811
  store i8* %call2069, i8** %primitive, align 8, !dbg !6812
  br label %for.cond2070, !dbg !6813

for.cond2070:                                     ; preds = %for.inc2077, %if.end2068
  %1466 = load i64, i64* %n, align 8, !dbg !6814
  %cmp2071 = icmp sge i64 %1466, 0, !dbg !6817
  br i1 %cmp2071, label %for.body2073, label %for.end2079, !dbg !6818

for.body2073:                                     ; preds = %for.cond2070
  %1467 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !6819
  %1468 = load i64, i64* %n, align 8, !dbg !6820
  %arrayidx2074 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %1467, i64 %1468, !dbg !6819
  %1469 = load %struct._DrawInfo*, %struct._DrawInfo** %arrayidx2074, align 8, !dbg !6819
  %call2075 = call %struct._DrawInfo* @DestroyDrawInfo(%struct._DrawInfo* %1469), !dbg !6821
  %1470 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !6822
  %1471 = load i64, i64* %n, align 8, !dbg !6823
  %arrayidx2076 = getelementptr inbounds %struct._DrawInfo*, %struct._DrawInfo** %1470, i64 %1471, !dbg !6822
  store %struct._DrawInfo* %call2075, %struct._DrawInfo** %arrayidx2076, align 8, !dbg !6824
  br label %for.inc2077, !dbg !6822

for.inc2077:                                      ; preds = %for.body2073
  %1472 = load i64, i64* %n, align 8, !dbg !6825
  %dec2078 = add nsw i64 %1472, -1, !dbg !6825
  store i64 %dec2078, i64* %n, align 8, !dbg !6825
  br label %for.cond2070, !dbg !6826, !llvm.loop !6827

for.end2079:                                      ; preds = %for.cond2070
  %1473 = load %struct._DrawInfo**, %struct._DrawInfo*** %graphic_context, align 8, !dbg !6829
  %1474 = bitcast %struct._DrawInfo** %1473 to i8*, !dbg !6829
  %call2080 = call i8* @RelinquishMagickMemory(i8* %1474), !dbg !6830
  %1475 = bitcast i8* %call2080 to %struct._DrawInfo**, !dbg !6831
  store %struct._DrawInfo** %1475, %struct._DrawInfo*** %graphic_context, align 8, !dbg !6832
  %1476 = load i32, i32* %status, align 4, !dbg !6833
  %cmp2081 = icmp eq i32 %1476, 0, !dbg !6835
  br i1 %cmp2081, label %if.then2083, label %if.end2091, !dbg !6836

if.then2083:                                      ; preds = %for.end2079
  %1477 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6837
  %cmp2084 = icmp ne %struct._Image* %1477, null, !dbg !6837
  br i1 %cmp2084, label %if.then2086, label %if.end2090, !dbg !6840

if.then2086:                                      ; preds = %if.then2083
  %1478 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6837
  %exception2087 = getelementptr inbounds %struct._Image, %struct._Image* %1478, i32 0, i32 58, !dbg !6837
  %arraydecay2088 = getelementptr inbounds [4096 x i8], [4096 x i8]* %keyword, i64 0, i64 0, !dbg !6837
  %call2089 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %exception2087, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3192, i32 460, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.94, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* %arraydecay2088), !dbg !6837
  br label %if.end2090, !dbg !6837

if.end2090:                                       ; preds = %if.then2086, %if.then2083
  store i32 0, i32* %retval, align 4, !dbg !6840
  br label %return, !dbg !6840

if.end2091:                                       ; preds = %for.end2079
  %1479 = load i32, i32* %status, align 4, !dbg !6841
  %cmp2092 = icmp ne i32 %1479, 0, !dbg !6842
  %1480 = zext i1 %cmp2092 to i64, !dbg !6841
  %cond2094 = select i1 %cmp2092, i32 1, i32 0, !dbg !6841
  store i32 %cond2094, i32* %retval, align 4, !dbg !6843
  br label %return, !dbg !6843

return:                                           ; preds = %if.end2091, %if.end2090, %if.then93, %if.end67, %if.end48, %if.then31, %if.then11
  %1481 = load i32, i32* %retval, align 4, !dbg !6844
  ret i32 %1481, !dbg !6844
}

declare dso_local i32 @NegateImage(%struct._Image*, i32) #3

declare dso_local i8* @AcquireString(i8*) #3

declare dso_local i8* @FileToString(i8*, i64, %struct._ExceptionInfo*) #3

; Function Attrs: nounwind readonly
declare dso_local i64 @strlen(i8*) #8

declare dso_local i32 @SetImageArtifact(%struct._Image*, i8*, i8*) #3

declare dso_local void @GetMagickToken(i8*, i8**, i8*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @GetAffineMatrix(%struct._AffineMatrix* %affine_matrix) #0 !dbg !6845 {
entry:
  %affine_matrix.addr = alloca %struct._AffineMatrix*, align 8
  store %struct._AffineMatrix* %affine_matrix, %struct._AffineMatrix** %affine_matrix.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._AffineMatrix** %affine_matrix.addr, metadata !6849, metadata !DIExpression()), !dbg !6850
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4779, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i64 0, i64 0)), !dbg !6851
  %0 = load %struct._AffineMatrix*, %struct._AffineMatrix** %affine_matrix.addr, align 8, !dbg !6852
  %1 = bitcast %struct._AffineMatrix* %0 to i8*, !dbg !6852
  %call1 = call i8* @ResetMagickMemory(i8* %1, i32 0, i64 48), !dbg !6853
  %2 = load %struct._AffineMatrix*, %struct._AffineMatrix** %affine_matrix.addr, align 8, !dbg !6854
  %sx = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %2, i32 0, i32 0, !dbg !6855
  store double 1.000000e+00, double* %sx, align 8, !dbg !6856
  %3 = load %struct._AffineMatrix*, %struct._AffineMatrix** %affine_matrix.addr, align 8, !dbg !6857
  %sy = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %3, i32 0, i32 3, !dbg !6858
  store double 1.000000e+00, double* %sy, align 8, !dbg !6859
  ret void, !dbg !6860
}

declare dso_local i32 @LocaleCompare(i8*, i8*) #3

; Function Attrs: noinline nounwind uwtable
define internal double @StringToDouble(i8* noalias %string, i8** noalias %sentinal) #0 !dbg !6861 {
entry:
  %string.addr = alloca i8*, align 8
  %sentinal.addr = alloca i8**, align 8
  store i8* %string, i8** %string.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %string.addr, metadata !6867, metadata !DIExpression()), !dbg !6868
  store i8** %sentinal, i8*** %sentinal.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %sentinal.addr, metadata !6869, metadata !DIExpression()), !dbg !6870
  %0 = load i8*, i8** %string.addr, align 8, !dbg !6871
  %1 = load i8**, i8*** %sentinal.addr, align 8, !dbg !6872
  %call = call double @InterpretLocaleValue(i8* %0, i8** %1), !dbg !6873
  ret double %call, !dbg !6874
}

declare dso_local i64 @ParseCommandOption(i32, i32, i8*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @DrawPatternPath(%struct._Image* %image, %struct._DrawInfo* %draw_info, i8* %name, %struct._Image** %pattern) #0 !dbg !6875 {
entry:
  %retval = alloca i32, align 4
  %image.addr = alloca %struct._Image*, align 8
  %draw_info.addr = alloca %struct._DrawInfo*, align 8
  %name.addr = alloca i8*, align 8
  %pattern.addr = alloca %struct._Image**, align 8
  %property = alloca [4096 x i8], align 16
  %geometry = alloca i8*, align 8
  %path = alloca i8*, align 8
  %clone_info = alloca %struct._DrawInfo*, align 8
  %image_info = alloca %struct._ImageInfo*, align 8
  %status = alloca i32, align 4
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !6879, metadata !DIExpression()), !dbg !6880
  store %struct._DrawInfo* %draw_info, %struct._DrawInfo** %draw_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawInfo** %draw_info.addr, metadata !6881, metadata !DIExpression()), !dbg !6882
  store i8* %name, i8** %name.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %name.addr, metadata !6883, metadata !DIExpression()), !dbg !6884
  store %struct._Image** %pattern, %struct._Image*** %pattern.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image*** %pattern.addr, metadata !6885, metadata !DIExpression()), !dbg !6886
  call void @llvm.dbg.declare(metadata [4096 x i8]* %property, metadata !6887, metadata !DIExpression()), !dbg !6888
  call void @llvm.dbg.declare(metadata i8** %geometry, metadata !6889, metadata !DIExpression()), !dbg !6890
  call void @llvm.dbg.declare(metadata i8** %path, metadata !6891, metadata !DIExpression()), !dbg !6892
  call void @llvm.dbg.declare(metadata %struct._DrawInfo** %clone_info, metadata !6893, metadata !DIExpression()), !dbg !6894
  call void @llvm.dbg.declare(metadata %struct._ImageInfo** %image_info, metadata !6895, metadata !DIExpression()), !dbg !6896
  call void @llvm.dbg.declare(metadata i32* %status, metadata !6897, metadata !DIExpression()), !dbg !6898
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6899
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !6901
  %1 = load i32, i32* %debug, align 8, !dbg !6901
  %cmp = icmp ne i32 %1, 0, !dbg !6902
  br i1 %cmp, label %if.then, label %if.end, !dbg !6903

if.then:                                          ; preds = %entry
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6904
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %2, i32 0, i32 53, !dbg !6905
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !6904
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3567, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i64 0, i64 0), i8* %arraydecay), !dbg !6906
  br label %if.end, !dbg !6907

if.end:                                           ; preds = %if.then, %entry
  %arraydecay1 = getelementptr inbounds [4096 x i8], [4096 x i8]* %property, i64 0, i64 0, !dbg !6908
  %3 = load i8*, i8** %name.addr, align 8, !dbg !6909
  %call2 = call i64 (i8*, i64, i8*, ...) @FormatLocaleString(i8* %arraydecay1, i64 4096, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i64 0, i64 0), i8* %3), !dbg !6910
  %4 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6911
  %arraydecay3 = getelementptr inbounds [4096 x i8], [4096 x i8]* %property, i64 0, i64 0, !dbg !6912
  %call4 = call i8* @GetImageArtifact(%struct._Image* %4, i8* %arraydecay3), !dbg !6913
  store i8* %call4, i8** %path, align 8, !dbg !6914
  %5 = load i8*, i8** %path, align 8, !dbg !6915
  %cmp5 = icmp eq i8* %5, null, !dbg !6917
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !6918

if.then6:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !6919
  br label %return, !dbg !6919

if.end7:                                          ; preds = %if.end
  %arraydecay8 = getelementptr inbounds [4096 x i8], [4096 x i8]* %property, i64 0, i64 0, !dbg !6920
  %6 = load i8*, i8** %name.addr, align 8, !dbg !6921
  %call9 = call i64 (i8*, i64, i8*, ...) @FormatLocaleString(i8* %arraydecay8, i64 4096, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.64, i64 0, i64 0), i8* %6), !dbg !6922
  %7 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6923
  %arraydecay10 = getelementptr inbounds [4096 x i8], [4096 x i8]* %property, i64 0, i64 0, !dbg !6924
  %call11 = call i8* @GetImageArtifact(%struct._Image* %7, i8* %arraydecay10), !dbg !6925
  store i8* %call11, i8** %geometry, align 8, !dbg !6926
  %8 = load i8*, i8** %geometry, align 8, !dbg !6927
  %cmp12 = icmp eq i8* %8, null, !dbg !6929
  br i1 %cmp12, label %if.then13, label %if.end14, !dbg !6930

if.then13:                                        ; preds = %if.end7
  store i32 0, i32* %retval, align 4, !dbg !6931
  br label %return, !dbg !6931

if.end14:                                         ; preds = %if.end7
  %9 = load %struct._Image**, %struct._Image*** %pattern.addr, align 8, !dbg !6932
  %10 = load %struct._Image*, %struct._Image** %9, align 8, !dbg !6934
  %cmp15 = icmp ne %struct._Image* %10, null, !dbg !6935
  br i1 %cmp15, label %if.then16, label %if.end18, !dbg !6936

if.then16:                                        ; preds = %if.end14
  %11 = load %struct._Image**, %struct._Image*** %pattern.addr, align 8, !dbg !6937
  %12 = load %struct._Image*, %struct._Image** %11, align 8, !dbg !6938
  %call17 = call %struct._Image* @DestroyImage(%struct._Image* %12), !dbg !6939
  %13 = load %struct._Image**, %struct._Image*** %pattern.addr, align 8, !dbg !6940
  store %struct._Image* %call17, %struct._Image** %13, align 8, !dbg !6941
  br label %if.end18, !dbg !6942

if.end18:                                         ; preds = %if.then16, %if.end14
  %call19 = call %struct._ImageInfo* @AcquireImageInfo(), !dbg !6943
  store %struct._ImageInfo* %call19, %struct._ImageInfo** %image_info, align 8, !dbg !6944
  %14 = load i8*, i8** %geometry, align 8, !dbg !6945
  %call20 = call i8* @AcquireString(i8* %14), !dbg !6946
  %15 = load %struct._ImageInfo*, %struct._ImageInfo** %image_info, align 8, !dbg !6947
  %size = getelementptr inbounds %struct._ImageInfo, %struct._ImageInfo* %15, i32 0, i32 6, !dbg !6948
  store i8* %call20, i8** %size, align 8, !dbg !6949
  %16 = load %struct._ImageInfo*, %struct._ImageInfo** %image_info, align 8, !dbg !6950
  %call21 = call %struct._Image* @AcquireImage(%struct._ImageInfo* %16), !dbg !6951
  %17 = load %struct._Image**, %struct._Image*** %pattern.addr, align 8, !dbg !6952
  store %struct._Image* %call21, %struct._Image** %17, align 8, !dbg !6953
  %18 = load %struct._ImageInfo*, %struct._ImageInfo** %image_info, align 8, !dbg !6954
  %call22 = call %struct._ImageInfo* @DestroyImageInfo(%struct._ImageInfo* %18), !dbg !6955
  store %struct._ImageInfo* %call22, %struct._ImageInfo** %image_info, align 8, !dbg !6956
  %19 = load %struct._Image**, %struct._Image*** %pattern.addr, align 8, !dbg !6957
  %20 = load %struct._Image*, %struct._Image** %19, align 8, !dbg !6958
  %background_color = getelementptr inbounds %struct._Image, %struct._Image* %20, i32 0, i32 12, !dbg !6959
  %21 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6960
  %exception = getelementptr inbounds %struct._Image, %struct._Image* %21, i32 0, i32 58, !dbg !6961
  %call23 = call i32 @QueryColorDatabase(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.7, i64 0, i64 0), %struct._PixelPacket* %background_color, %struct._ExceptionInfo* %exception), !dbg !6962
  %22 = load %struct._Image**, %struct._Image*** %pattern.addr, align 8, !dbg !6963
  %23 = load %struct._Image*, %struct._Image** %22, align 8, !dbg !6964
  %call24 = call i32 @SetImageBackgroundColor(%struct._Image* %23), !dbg !6965
  %24 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6966
  %debug25 = getelementptr inbounds %struct._Image, %struct._Image* %24, i32 0, i32 59, !dbg !6968
  %25 = load i32, i32* %debug25, align 8, !dbg !6968
  %cmp26 = icmp ne i32 %25, 0, !dbg !6969
  br i1 %cmp26, label %if.then27, label %if.end29, !dbg !6970

if.then27:                                        ; preds = %if.end18
  %26 = load i8*, i8** %name.addr, align 8, !dbg !6971
  %27 = load i8*, i8** %geometry, align 8, !dbg !6972
  %call28 = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 128, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3588, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.95, i64 0, i64 0), i8* %26, i8* %27), !dbg !6973
  br label %if.end29, !dbg !6974

if.end29:                                         ; preds = %if.then27, %if.end18
  %28 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !6975
  %call30 = call %struct._DrawInfo* @CloneDrawInfo(%struct._ImageInfo* null, %struct._DrawInfo* %28), !dbg !6976
  store %struct._DrawInfo* %call30, %struct._DrawInfo** %clone_info, align 8, !dbg !6977
  %call31 = call %struct._Image* @NewImageList(), !dbg !6978
  %29 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info, align 8, !dbg !6979
  %fill_pattern = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %29, i32 0, i32 9, !dbg !6980
  store %struct._Image* %call31, %struct._Image** %fill_pattern, align 8, !dbg !6981
  %call32 = call %struct._Image* @NewImageList(), !dbg !6982
  %30 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info, align 8, !dbg !6983
  %stroke_pattern = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %30, i32 0, i32 11, !dbg !6984
  store %struct._Image* %call32, %struct._Image** %stroke_pattern, align 8, !dbg !6985
  %31 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info, align 8, !dbg !6986
  %primitive = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %31, i32 0, i32 0, !dbg !6987
  %32 = load i8*, i8** %path, align 8, !dbg !6988
  %call33 = call i8* @CloneString(i8** %primitive, i8* %32), !dbg !6989
  %33 = load %struct._Image**, %struct._Image*** %pattern.addr, align 8, !dbg !6990
  %34 = load %struct._Image*, %struct._Image** %33, align 8, !dbg !6991
  %35 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info, align 8, !dbg !6992
  %call34 = call i32 @DrawImage(%struct._Image* %34, %struct._DrawInfo* %35), !dbg !6993
  store i32 %call34, i32* %status, align 4, !dbg !6994
  %36 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info, align 8, !dbg !6995
  %call35 = call %struct._DrawInfo* @DestroyDrawInfo(%struct._DrawInfo* %36), !dbg !6996
  store %struct._DrawInfo* %call35, %struct._DrawInfo** %clone_info, align 8, !dbg !6997
  %37 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6998
  %debug36 = getelementptr inbounds %struct._Image, %struct._Image* %37, i32 0, i32 59, !dbg !7000
  %38 = load i32, i32* %debug36, align 8, !dbg !7000
  %cmp37 = icmp ne i32 %38, 0, !dbg !7001
  br i1 %cmp37, label %if.then38, label %if.end40, !dbg !7002

if.then38:                                        ; preds = %if.end29
  %call39 = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 128, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3597, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.96, i64 0, i64 0)), !dbg !7003
  br label %if.end40, !dbg !7004

if.end40:                                         ; preds = %if.then38, %if.end29
  %39 = load i32, i32* %status, align 4, !dbg !7005
  store i32 %39, i32* %retval, align 4, !dbg !7006
  br label %return, !dbg !7006

return:                                           ; preds = %if.end40, %if.then13, %if.then6
  %40 = load i32, i32* %retval, align 4, !dbg !7007
  ret i32 %40, !dbg !7007
}

declare dso_local %struct._ImageInfo* @AcquireImageInfo() #3

declare dso_local i64 @CopyMagickString(i8*, i8*, i64) #3

declare dso_local %struct._Image* @ReadImage(%struct._ImageInfo*, %struct._ExceptionInfo*) #3

declare dso_local %struct._ImageInfo* @DestroyImageInfo(%struct._ImageInfo*) #3

; Function Attrs: nounwind readonly
declare dso_local i8* @strchr(i8*, i32) #8

; Function Attrs: noinline nounwind uwtable
define internal zeroext i16 @ClampToQuantum(float %value) #0 !dbg !7008 {
entry:
  %retval = alloca i16, align 2
  %value.addr = alloca float, align 4
  store float %value, float* %value.addr, align 4
  call void @llvm.dbg.declare(metadata float* %value.addr, metadata !7011, metadata !DIExpression()), !dbg !7012
  %0 = load float, float* %value.addr, align 4, !dbg !7013
  %cmp = fcmp ole float %0, 0.000000e+00, !dbg !7015
  br i1 %cmp, label %if.then, label %if.end, !dbg !7016

if.then:                                          ; preds = %entry
  store i16 0, i16* %retval, align 2, !dbg !7017
  br label %return, !dbg !7017

if.end:                                           ; preds = %entry
  %1 = load float, float* %value.addr, align 4, !dbg !7018
  %cmp1 = fcmp oge float %1, 6.553500e+04, !dbg !7020
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !7021

if.then2:                                         ; preds = %if.end
  store i16 -1, i16* %retval, align 2, !dbg !7022
  br label %return, !dbg !7022

if.end3:                                          ; preds = %if.end
  %2 = load float, float* %value.addr, align 4, !dbg !7023
  %add = fadd float %2, 5.000000e-01, !dbg !7024
  %conv = fptoui float %add to i16, !dbg !7025
  store i16 %conv, i16* %retval, align 2, !dbg !7026
  br label %return, !dbg !7026

return:                                           ; preds = %if.end3, %if.then2, %if.then
  %3 = load i16, i16* %retval, align 2, !dbg !7027
  ret i16 %3, !dbg !7027
}

; Function Attrs: noinline nounwind uwtable
define internal i64 @StringToUnsignedLong(i8* noalias %value) #0 !dbg !7028 {
entry:
  %value.addr = alloca i8*, align 8
  store i8* %value, i8** %value.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %value.addr, metadata !7031, metadata !DIExpression()), !dbg !7032
  %0 = load i8*, i8** %value.addr, align 8, !dbg !7033
  %call = call i64 @strtoul(i8* %0, i8** null, i32 10) #17, !dbg !7034
  ret i64 %call, !dbg !7035
}

; Function Attrs: nounwind readnone speculatable willreturn
declare double @llvm.fabs.f64(double) #1

; Function Attrs: allocsize(1,2)
declare dso_local i8* @ResizeQuantumMemory(i8*, i64, i64) #9

; Function Attrs: nounwind
declare dso_local double @cos(double) #10

; Function Attrs: noinline nounwind uwtable
define internal double @DegreesToRadians(double %degrees) #0 !dbg !7036 {
entry:
  %degrees.addr = alloca double, align 8
  store double %degrees, double* %degrees.addr, align 8
  call void @llvm.dbg.declare(metadata double* %degrees.addr, metadata !7040, metadata !DIExpression()), !dbg !7041
  %0 = load double, double* %degrees.addr, align 8, !dbg !7042
  %mul = fmul double 0x400921FB54442D18, %0, !dbg !7043
  %div = fdiv double %mul, 1.800000e+02, !dbg !7044
  ret double %div, !dbg !7045
}

; Function Attrs: nounwind
declare dso_local double @fmod(double, double) #10

; Function Attrs: nounwind
declare dso_local double @sin(double) #10

; Function Attrs: nounwind
declare dso_local double @tan(double) #10

declare dso_local i32 @GradientImage(%struct._Image*, i32, i32, %struct._PixelPacket*, %struct._PixelPacket*) #3

; Function Attrs: noinline nounwind uwtable
define internal i64 @StringToLong(i8* noalias %value) #0 !dbg !7046 {
entry:
  %value.addr = alloca i8*, align 8
  store i8* %value, i8** %value.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %value.addr, metadata !7049, metadata !DIExpression()), !dbg !7050
  %0 = load i8*, i8** %value.addr, align 8, !dbg !7051
  %call = call i64 @strtol(i8* %0, i8** null, i32 10) #17, !dbg !7052
  ret i64 %call, !dbg !7053
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @IsPoint(i8* %point) #0 !dbg !7054 {
entry:
  %point.addr = alloca i8*, align 8
  %p = alloca i8*, align 8
  %value = alloca double, align 8
  store i8* %point, i8** %point.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %point.addr, metadata !7057, metadata !DIExpression()), !dbg !7058
  call void @llvm.dbg.declare(metadata i8** %p, metadata !7059, metadata !DIExpression()), !dbg !7060
  call void @llvm.dbg.declare(metadata double* %value, metadata !7061, metadata !DIExpression()), !dbg !7062
  %0 = load i8*, i8** %point.addr, align 8, !dbg !7063
  %call = call double @StringToDouble(i8* %0, i8** %p), !dbg !7064
  store double %call, double* %value, align 8, !dbg !7065
  %1 = load double, double* %value, align 8, !dbg !7066
  %cmp = fcmp oeq double %1, 0.000000e+00, !dbg !7067
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !7068

land.rhs:                                         ; preds = %entry
  %2 = load i8*, i8** %p, align 8, !dbg !7069
  %3 = load i8*, i8** %point.addr, align 8, !dbg !7070
  %cmp1 = icmp eq i8* %2, %3, !dbg !7071
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %4 = phi i1 [ false, %entry ], [ %cmp1, %land.rhs ], !dbg !7072
  %5 = zext i1 %4 to i64, !dbg !7073
  %cond = select i1 %4, i32 0, i32 1, !dbg !7073
  ret i32 %cond, !dbg !7074
}

; Function Attrs: nounwind
declare dso_local double @hypot(double, double) #10

; Function Attrs: noinline nounwind uwtable
define internal void @TracePoint(%struct._PrimitiveInfo* %primitive_info, double %point.coerce0, double %point.coerce1) #0 !dbg !7075 {
entry:
  %point = alloca %struct._PointInfo, align 8
  %primitive_info.addr = alloca %struct._PrimitiveInfo*, align 8
  %0 = bitcast %struct._PointInfo* %point to { double, double }*
  %1 = getelementptr inbounds { double, double }, { double, double }* %0, i32 0, i32 0
  store double %point.coerce0, double* %1, align 8
  %2 = getelementptr inbounds { double, double }, { double, double }* %0, i32 0, i32 1
  store double %point.coerce1, double* %2, align 8
  store %struct._PrimitiveInfo* %primitive_info, %struct._PrimitiveInfo** %primitive_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PrimitiveInfo** %primitive_info.addr, metadata !7079, metadata !DIExpression()), !dbg !7080
  call void @llvm.dbg.declare(metadata %struct._PointInfo* %point, metadata !7081, metadata !DIExpression()), !dbg !7082
  %3 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !7083
  %coordinates = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %3, i32 0, i32 1, !dbg !7084
  store i64 1, i64* %coordinates, align 8, !dbg !7085
  %4 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !7086
  %point1 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %4, i32 0, i32 0, !dbg !7087
  %5 = bitcast %struct._PointInfo* %point1 to i8*, !dbg !7088
  %6 = bitcast %struct._PointInfo* %point to i8*, !dbg !7088
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 16, i1 false), !dbg !7088
  ret void, !dbg !7089
}

; Function Attrs: noinline nounwind uwtable
define internal void @TraceLine(%struct._PrimitiveInfo* %primitive_info, double %start.coerce0, double %start.coerce1, double %end.coerce0, double %end.coerce1) #0 !dbg !7090 {
entry:
  %start = alloca %struct._PointInfo, align 8
  %end = alloca %struct._PointInfo, align 8
  %primitive_info.addr = alloca %struct._PrimitiveInfo*, align 8
  %0 = bitcast %struct._PointInfo* %start to { double, double }*
  %1 = getelementptr inbounds { double, double }, { double, double }* %0, i32 0, i32 0
  store double %start.coerce0, double* %1, align 8
  %2 = getelementptr inbounds { double, double }, { double, double }* %0, i32 0, i32 1
  store double %start.coerce1, double* %2, align 8
  %3 = bitcast %struct._PointInfo* %end to { double, double }*
  %4 = getelementptr inbounds { double, double }, { double, double }* %3, i32 0, i32 0
  store double %end.coerce0, double* %4, align 8
  %5 = getelementptr inbounds { double, double }, { double, double }* %3, i32 0, i32 1
  store double %end.coerce1, double* %5, align 8
  store %struct._PrimitiveInfo* %primitive_info, %struct._PrimitiveInfo** %primitive_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PrimitiveInfo** %primitive_info.addr, metadata !7093, metadata !DIExpression()), !dbg !7094
  call void @llvm.dbg.declare(metadata %struct._PointInfo* %start, metadata !7095, metadata !DIExpression()), !dbg !7096
  call void @llvm.dbg.declare(metadata %struct._PointInfo* %end, metadata !7097, metadata !DIExpression()), !dbg !7098
  %6 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !7099
  %7 = bitcast %struct._PointInfo* %start to { double, double }*, !dbg !7100
  %8 = getelementptr inbounds { double, double }, { double, double }* %7, i32 0, i32 0, !dbg !7100
  %9 = load double, double* %8, align 8, !dbg !7100
  %10 = getelementptr inbounds { double, double }, { double, double }* %7, i32 0, i32 1, !dbg !7100
  %11 = load double, double* %10, align 8, !dbg !7100
  call void @TracePoint(%struct._PrimitiveInfo* %6, double %9, double %11), !dbg !7100
  %x = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %start, i32 0, i32 0, !dbg !7101
  %12 = load double, double* %x, align 8, !dbg !7101
  %x1 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %end, i32 0, i32 0, !dbg !7103
  %13 = load double, double* %x1, align 8, !dbg !7103
  %sub = fsub double %12, %13, !dbg !7104
  %14 = call double @llvm.fabs.f64(double %sub), !dbg !7105
  %cmp = fcmp olt double %14, 1.000000e-15, !dbg !7106
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !7107

land.lhs.true:                                    ; preds = %entry
  %y = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %start, i32 0, i32 1, !dbg !7108
  %15 = load double, double* %y, align 8, !dbg !7108
  %y2 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %end, i32 0, i32 1, !dbg !7109
  %16 = load double, double* %y2, align 8, !dbg !7109
  %sub3 = fsub double %15, %16, !dbg !7110
  %17 = call double @llvm.fabs.f64(double %sub3), !dbg !7111
  %cmp4 = fcmp olt double %17, 1.000000e-15, !dbg !7112
  br i1 %cmp4, label %if.then, label %if.end, !dbg !7113

if.then:                                          ; preds = %land.lhs.true
  %18 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !7114
  %primitive = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %18, i32 0, i32 2, !dbg !7116
  store i32 1, i32* %primitive, align 8, !dbg !7117
  %19 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !7118
  %coordinates = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %19, i32 0, i32 1, !dbg !7119
  store i64 1, i64* %coordinates, align 8, !dbg !7120
  br label %return, !dbg !7121

if.end:                                           ; preds = %land.lhs.true, %entry
  %20 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !7122
  %add.ptr = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %20, i64 1, !dbg !7123
  %21 = bitcast %struct._PointInfo* %end to { double, double }*, !dbg !7124
  %22 = getelementptr inbounds { double, double }, { double, double }* %21, i32 0, i32 0, !dbg !7124
  %23 = load double, double* %22, align 8, !dbg !7124
  %24 = getelementptr inbounds { double, double }, { double, double }* %21, i32 0, i32 1, !dbg !7124
  %25 = load double, double* %24, align 8, !dbg !7124
  call void @TracePoint(%struct._PrimitiveInfo* %add.ptr, double %23, double %25), !dbg !7124
  %26 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !7125
  %primitive5 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %26, i32 0, i32 2, !dbg !7126
  %27 = load i32, i32* %primitive5, align 8, !dbg !7126
  %28 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !7127
  %add.ptr6 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %28, i64 1, !dbg !7128
  %primitive7 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %add.ptr6, i32 0, i32 2, !dbg !7129
  store i32 %27, i32* %primitive7, align 8, !dbg !7130
  %29 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !7131
  %coordinates8 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %29, i32 0, i32 1, !dbg !7132
  store i64 2, i64* %coordinates8, align 8, !dbg !7133
  br label %return, !dbg !7134

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !7134
}

; Function Attrs: noinline nounwind uwtable
define internal void @TraceRectangle(%struct._PrimitiveInfo* %primitive_info, double %start.coerce0, double %start.coerce1, double %end.coerce0, double %end.coerce1) #0 !dbg !7135 {
entry:
  %start = alloca %struct._PointInfo, align 8
  %end = alloca %struct._PointInfo, align 8
  %primitive_info.addr = alloca %struct._PrimitiveInfo*, align 8
  %point = alloca %struct._PointInfo, align 8
  %p = alloca %struct._PrimitiveInfo*, align 8
  %i = alloca i64, align 8
  %0 = bitcast %struct._PointInfo* %start to { double, double }*
  %1 = getelementptr inbounds { double, double }, { double, double }* %0, i32 0, i32 0
  store double %start.coerce0, double* %1, align 8
  %2 = getelementptr inbounds { double, double }, { double, double }* %0, i32 0, i32 1
  store double %start.coerce1, double* %2, align 8
  %3 = bitcast %struct._PointInfo* %end to { double, double }*
  %4 = getelementptr inbounds { double, double }, { double, double }* %3, i32 0, i32 0
  store double %end.coerce0, double* %4, align 8
  %5 = getelementptr inbounds { double, double }, { double, double }* %3, i32 0, i32 1
  store double %end.coerce1, double* %5, align 8
  store %struct._PrimitiveInfo* %primitive_info, %struct._PrimitiveInfo** %primitive_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PrimitiveInfo** %primitive_info.addr, metadata !7136, metadata !DIExpression()), !dbg !7137
  call void @llvm.dbg.declare(metadata %struct._PointInfo* %start, metadata !7138, metadata !DIExpression()), !dbg !7139
  call void @llvm.dbg.declare(metadata %struct._PointInfo* %end, metadata !7140, metadata !DIExpression()), !dbg !7141
  call void @llvm.dbg.declare(metadata %struct._PointInfo* %point, metadata !7142, metadata !DIExpression()), !dbg !7143
  call void @llvm.dbg.declare(metadata %struct._PrimitiveInfo** %p, metadata !7144, metadata !DIExpression()), !dbg !7145
  call void @llvm.dbg.declare(metadata i64* %i, metadata !7146, metadata !DIExpression()), !dbg !7147
  %6 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !7148
  store %struct._PrimitiveInfo* %6, %struct._PrimitiveInfo** %p, align 8, !dbg !7149
  %7 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %p, align 8, !dbg !7150
  %8 = bitcast %struct._PointInfo* %start to { double, double }*, !dbg !7151
  %9 = getelementptr inbounds { double, double }, { double, double }* %8, i32 0, i32 0, !dbg !7151
  %10 = load double, double* %9, align 8, !dbg !7151
  %11 = getelementptr inbounds { double, double }, { double, double }* %8, i32 0, i32 1, !dbg !7151
  %12 = load double, double* %11, align 8, !dbg !7151
  call void @TracePoint(%struct._PrimitiveInfo* %7, double %10, double %12), !dbg !7151
  %13 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %p, align 8, !dbg !7152
  %coordinates = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %13, i32 0, i32 1, !dbg !7153
  %14 = load i64, i64* %coordinates, align 8, !dbg !7153
  %15 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %p, align 8, !dbg !7154
  %add.ptr = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %15, i64 %14, !dbg !7154
  store %struct._PrimitiveInfo* %add.ptr, %struct._PrimitiveInfo** %p, align 8, !dbg !7154
  %x = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %start, i32 0, i32 0, !dbg !7155
  %16 = load double, double* %x, align 8, !dbg !7155
  %x1 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 0, !dbg !7156
  store double %16, double* %x1, align 8, !dbg !7157
  %y = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %end, i32 0, i32 1, !dbg !7158
  %17 = load double, double* %y, align 8, !dbg !7158
  %y2 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 1, !dbg !7159
  store double %17, double* %y2, align 8, !dbg !7160
  %18 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %p, align 8, !dbg !7161
  %19 = bitcast %struct._PointInfo* %point to { double, double }*, !dbg !7162
  %20 = getelementptr inbounds { double, double }, { double, double }* %19, i32 0, i32 0, !dbg !7162
  %21 = load double, double* %20, align 8, !dbg !7162
  %22 = getelementptr inbounds { double, double }, { double, double }* %19, i32 0, i32 1, !dbg !7162
  %23 = load double, double* %22, align 8, !dbg !7162
  call void @TracePoint(%struct._PrimitiveInfo* %18, double %21, double %23), !dbg !7162
  %24 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %p, align 8, !dbg !7163
  %coordinates3 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %24, i32 0, i32 1, !dbg !7164
  %25 = load i64, i64* %coordinates3, align 8, !dbg !7164
  %26 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %p, align 8, !dbg !7165
  %add.ptr4 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %26, i64 %25, !dbg !7165
  store %struct._PrimitiveInfo* %add.ptr4, %struct._PrimitiveInfo** %p, align 8, !dbg !7165
  %27 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %p, align 8, !dbg !7166
  %28 = bitcast %struct._PointInfo* %end to { double, double }*, !dbg !7167
  %29 = getelementptr inbounds { double, double }, { double, double }* %28, i32 0, i32 0, !dbg !7167
  %30 = load double, double* %29, align 8, !dbg !7167
  %31 = getelementptr inbounds { double, double }, { double, double }* %28, i32 0, i32 1, !dbg !7167
  %32 = load double, double* %31, align 8, !dbg !7167
  call void @TracePoint(%struct._PrimitiveInfo* %27, double %30, double %32), !dbg !7167
  %33 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %p, align 8, !dbg !7168
  %coordinates5 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %33, i32 0, i32 1, !dbg !7169
  %34 = load i64, i64* %coordinates5, align 8, !dbg !7169
  %35 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %p, align 8, !dbg !7170
  %add.ptr6 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %35, i64 %34, !dbg !7170
  store %struct._PrimitiveInfo* %add.ptr6, %struct._PrimitiveInfo** %p, align 8, !dbg !7170
  %x7 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %end, i32 0, i32 0, !dbg !7171
  %36 = load double, double* %x7, align 8, !dbg !7171
  %x8 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 0, !dbg !7172
  store double %36, double* %x8, align 8, !dbg !7173
  %y9 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %start, i32 0, i32 1, !dbg !7174
  %37 = load double, double* %y9, align 8, !dbg !7174
  %y10 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 1, !dbg !7175
  store double %37, double* %y10, align 8, !dbg !7176
  %38 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %p, align 8, !dbg !7177
  %39 = bitcast %struct._PointInfo* %point to { double, double }*, !dbg !7178
  %40 = getelementptr inbounds { double, double }, { double, double }* %39, i32 0, i32 0, !dbg !7178
  %41 = load double, double* %40, align 8, !dbg !7178
  %42 = getelementptr inbounds { double, double }, { double, double }* %39, i32 0, i32 1, !dbg !7178
  %43 = load double, double* %42, align 8, !dbg !7178
  call void @TracePoint(%struct._PrimitiveInfo* %38, double %41, double %43), !dbg !7178
  %44 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %p, align 8, !dbg !7179
  %coordinates11 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %44, i32 0, i32 1, !dbg !7180
  %45 = load i64, i64* %coordinates11, align 8, !dbg !7180
  %46 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %p, align 8, !dbg !7181
  %add.ptr12 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %46, i64 %45, !dbg !7181
  store %struct._PrimitiveInfo* %add.ptr12, %struct._PrimitiveInfo** %p, align 8, !dbg !7181
  %47 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %p, align 8, !dbg !7182
  %48 = bitcast %struct._PointInfo* %start to { double, double }*, !dbg !7183
  %49 = getelementptr inbounds { double, double }, { double, double }* %48, i32 0, i32 0, !dbg !7183
  %50 = load double, double* %49, align 8, !dbg !7183
  %51 = getelementptr inbounds { double, double }, { double, double }* %48, i32 0, i32 1, !dbg !7183
  %52 = load double, double* %51, align 8, !dbg !7183
  call void @TracePoint(%struct._PrimitiveInfo* %47, double %50, double %52), !dbg !7183
  %53 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %p, align 8, !dbg !7184
  %coordinates13 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %53, i32 0, i32 1, !dbg !7185
  %54 = load i64, i64* %coordinates13, align 8, !dbg !7185
  %55 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %p, align 8, !dbg !7186
  %add.ptr14 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %55, i64 %54, !dbg !7186
  store %struct._PrimitiveInfo* %add.ptr14, %struct._PrimitiveInfo** %p, align 8, !dbg !7186
  %56 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %p, align 8, !dbg !7187
  %57 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !7188
  %sub.ptr.lhs.cast = ptrtoint %struct._PrimitiveInfo* %56 to i64, !dbg !7189
  %sub.ptr.rhs.cast = ptrtoint %struct._PrimitiveInfo* %57 to i64, !dbg !7189
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !7189
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 40, !dbg !7189
  %58 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !7190
  %coordinates15 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %58, i32 0, i32 1, !dbg !7191
  store i64 %sub.ptr.div, i64* %coordinates15, align 8, !dbg !7192
  store i64 0, i64* %i, align 8, !dbg !7193
  br label %for.cond, !dbg !7195

for.cond:                                         ; preds = %for.inc, %entry
  %59 = load i64, i64* %i, align 8, !dbg !7196
  %60 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !7198
  %coordinates16 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %60, i32 0, i32 1, !dbg !7199
  %61 = load i64, i64* %coordinates16, align 8, !dbg !7199
  %cmp = icmp slt i64 %59, %61, !dbg !7200
  br i1 %cmp, label %for.body, label %for.end, !dbg !7201

for.body:                                         ; preds = %for.cond
  %62 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !7202
  %primitive = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %62, i32 0, i32 2, !dbg !7204
  %63 = load i32, i32* %primitive, align 8, !dbg !7204
  %64 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %p, align 8, !dbg !7205
  %primitive17 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %64, i32 0, i32 2, !dbg !7206
  store i32 %63, i32* %primitive17, align 8, !dbg !7207
  %65 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %p, align 8, !dbg !7208
  %incdec.ptr = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %65, i32 -1, !dbg !7208
  store %struct._PrimitiveInfo* %incdec.ptr, %struct._PrimitiveInfo** %p, align 8, !dbg !7208
  br label %for.inc, !dbg !7209

for.inc:                                          ; preds = %for.body
  %66 = load i64, i64* %i, align 8, !dbg !7210
  %inc = add nsw i64 %66, 1, !dbg !7210
  store i64 %inc, i64* %i, align 8, !dbg !7210
  br label %for.cond, !dbg !7211, !llvm.loop !7212

for.end:                                          ; preds = %for.cond
  ret void, !dbg !7214
}

; Function Attrs: noinline nounwind uwtable
define internal void @TraceRoundRectangle(%struct._PrimitiveInfo* %primitive_info, double %start.coerce0, double %start.coerce1, double %end.coerce0, double %end.coerce1, double %arc.coerce0, double %arc.coerce1) #0 !dbg !7215 {
entry:
  %start = alloca %struct._PointInfo, align 8
  %end = alloca %struct._PointInfo, align 8
  %arc = alloca %struct._PointInfo, align 8
  %primitive_info.addr = alloca %struct._PrimitiveInfo*, align 8
  %degrees = alloca %struct._PointInfo, align 8
  %offset = alloca %struct._PointInfo, align 8
  %point = alloca %struct._PointInfo, align 8
  %p = alloca %struct._PrimitiveInfo*, align 8
  %i = alloca i64, align 8
  %0 = bitcast %struct._PointInfo* %start to { double, double }*
  %1 = getelementptr inbounds { double, double }, { double, double }* %0, i32 0, i32 0
  store double %start.coerce0, double* %1, align 8
  %2 = getelementptr inbounds { double, double }, { double, double }* %0, i32 0, i32 1
  store double %start.coerce1, double* %2, align 8
  %3 = bitcast %struct._PointInfo* %end to { double, double }*
  %4 = getelementptr inbounds { double, double }, { double, double }* %3, i32 0, i32 0
  store double %end.coerce0, double* %4, align 8
  %5 = getelementptr inbounds { double, double }, { double, double }* %3, i32 0, i32 1
  store double %end.coerce1, double* %5, align 8
  %6 = bitcast %struct._PointInfo* %arc to { double, double }*
  %7 = getelementptr inbounds { double, double }, { double, double }* %6, i32 0, i32 0
  store double %arc.coerce0, double* %7, align 8
  %8 = getelementptr inbounds { double, double }, { double, double }* %6, i32 0, i32 1
  store double %arc.coerce1, double* %8, align 8
  store %struct._PrimitiveInfo* %primitive_info, %struct._PrimitiveInfo** %primitive_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PrimitiveInfo** %primitive_info.addr, metadata !7218, metadata !DIExpression()), !dbg !7219
  call void @llvm.dbg.declare(metadata %struct._PointInfo* %start, metadata !7220, metadata !DIExpression()), !dbg !7221
  call void @llvm.dbg.declare(metadata %struct._PointInfo* %end, metadata !7222, metadata !DIExpression()), !dbg !7223
  call void @llvm.dbg.declare(metadata %struct._PointInfo* %arc, metadata !7224, metadata !DIExpression()), !dbg !7225
  call void @llvm.dbg.declare(metadata %struct._PointInfo* %degrees, metadata !7226, metadata !DIExpression()), !dbg !7227
  call void @llvm.dbg.declare(metadata %struct._PointInfo* %offset, metadata !7228, metadata !DIExpression()), !dbg !7229
  call void @llvm.dbg.declare(metadata %struct._PointInfo* %point, metadata !7230, metadata !DIExpression()), !dbg !7231
  call void @llvm.dbg.declare(metadata %struct._PrimitiveInfo** %p, metadata !7232, metadata !DIExpression()), !dbg !7233
  call void @llvm.dbg.declare(metadata i64* %i, metadata !7234, metadata !DIExpression()), !dbg !7235
  %9 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !7236
  store %struct._PrimitiveInfo* %9, %struct._PrimitiveInfo** %p, align 8, !dbg !7237
  %x = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %end, i32 0, i32 0, !dbg !7238
  %10 = load double, double* %x, align 8, !dbg !7238
  %x1 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %start, i32 0, i32 0, !dbg !7239
  %11 = load double, double* %x1, align 8, !dbg !7239
  %sub = fsub double %10, %11, !dbg !7240
  %12 = call double @llvm.fabs.f64(double %sub), !dbg !7241
  %x2 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %offset, i32 0, i32 0, !dbg !7242
  store double %12, double* %x2, align 8, !dbg !7243
  %y = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %end, i32 0, i32 1, !dbg !7244
  %13 = load double, double* %y, align 8, !dbg !7244
  %y3 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %start, i32 0, i32 1, !dbg !7245
  %14 = load double, double* %y3, align 8, !dbg !7245
  %sub4 = fsub double %13, %14, !dbg !7246
  %15 = call double @llvm.fabs.f64(double %sub4), !dbg !7247
  %y5 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %offset, i32 0, i32 1, !dbg !7248
  store double %15, double* %y5, align 8, !dbg !7249
  %x6 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arc, i32 0, i32 0, !dbg !7250
  %16 = load double, double* %x6, align 8, !dbg !7250
  %x7 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %offset, i32 0, i32 0, !dbg !7252
  %17 = load double, double* %x7, align 8, !dbg !7252
  %mul = fmul double 5.000000e-01, %17, !dbg !7253
  %cmp = fcmp ogt double %16, %mul, !dbg !7254
  br i1 %cmp, label %if.then, label %if.end, !dbg !7255

if.then:                                          ; preds = %entry
  %x8 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %offset, i32 0, i32 0, !dbg !7256
  %18 = load double, double* %x8, align 8, !dbg !7256
  %mul9 = fmul double 5.000000e-01, %18, !dbg !7257
  %x10 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arc, i32 0, i32 0, !dbg !7258
  store double %mul9, double* %x10, align 8, !dbg !7259
  br label %if.end, !dbg !7260

if.end:                                           ; preds = %if.then, %entry
  %y11 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arc, i32 0, i32 1, !dbg !7261
  %19 = load double, double* %y11, align 8, !dbg !7261
  %y12 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %offset, i32 0, i32 1, !dbg !7263
  %20 = load double, double* %y12, align 8, !dbg !7263
  %mul13 = fmul double 5.000000e-01, %20, !dbg !7264
  %cmp14 = fcmp ogt double %19, %mul13, !dbg !7265
  br i1 %cmp14, label %if.then15, label %if.end19, !dbg !7266

if.then15:                                        ; preds = %if.end
  %y16 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %offset, i32 0, i32 1, !dbg !7267
  %21 = load double, double* %y16, align 8, !dbg !7267
  %mul17 = fmul double 5.000000e-01, %21, !dbg !7268
  %y18 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arc, i32 0, i32 1, !dbg !7269
  store double %mul17, double* %y18, align 8, !dbg !7270
  br label %if.end19, !dbg !7271

if.end19:                                         ; preds = %if.then15, %if.end
  %x20 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %start, i32 0, i32 0, !dbg !7272
  %22 = load double, double* %x20, align 8, !dbg !7272
  %x21 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %offset, i32 0, i32 0, !dbg !7273
  %23 = load double, double* %x21, align 8, !dbg !7273
  %add = fadd double %22, %23, !dbg !7274
  %x22 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arc, i32 0, i32 0, !dbg !7275
  %24 = load double, double* %x22, align 8, !dbg !7275
  %sub23 = fsub double %add, %24, !dbg !7276
  %x24 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 0, !dbg !7277
  store double %sub23, double* %x24, align 8, !dbg !7278
  %y25 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %start, i32 0, i32 1, !dbg !7279
  %25 = load double, double* %y25, align 8, !dbg !7279
  %y26 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arc, i32 0, i32 1, !dbg !7280
  %26 = load double, double* %y26, align 8, !dbg !7280
  %add27 = fadd double %25, %26, !dbg !7281
  %y28 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 1, !dbg !7282
  store double %add27, double* %y28, align 8, !dbg !7283
  %x29 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %degrees, i32 0, i32 0, !dbg !7284
  store double 2.700000e+02, double* %x29, align 8, !dbg !7285
  %y30 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %degrees, i32 0, i32 1, !dbg !7286
  store double 3.600000e+02, double* %y30, align 8, !dbg !7287
  %27 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %p, align 8, !dbg !7288
  %28 = bitcast %struct._PointInfo* %point to { double, double }*, !dbg !7289
  %29 = getelementptr inbounds { double, double }, { double, double }* %28, i32 0, i32 0, !dbg !7289
  %30 = load double, double* %29, align 8, !dbg !7289
  %31 = getelementptr inbounds { double, double }, { double, double }* %28, i32 0, i32 1, !dbg !7289
  %32 = load double, double* %31, align 8, !dbg !7289
  %33 = bitcast %struct._PointInfo* %arc to { double, double }*, !dbg !7289
  %34 = getelementptr inbounds { double, double }, { double, double }* %33, i32 0, i32 0, !dbg !7289
  %35 = load double, double* %34, align 8, !dbg !7289
  %36 = getelementptr inbounds { double, double }, { double, double }* %33, i32 0, i32 1, !dbg !7289
  %37 = load double, double* %36, align 8, !dbg !7289
  %38 = bitcast %struct._PointInfo* %degrees to { double, double }*, !dbg !7289
  %39 = getelementptr inbounds { double, double }, { double, double }* %38, i32 0, i32 0, !dbg !7289
  %40 = load double, double* %39, align 8, !dbg !7289
  %41 = getelementptr inbounds { double, double }, { double, double }* %38, i32 0, i32 1, !dbg !7289
  %42 = load double, double* %41, align 8, !dbg !7289
  call void @TraceEllipse(%struct._PrimitiveInfo* %27, double %30, double %32, double %35, double %37, double %40, double %42), !dbg !7289
  %43 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %p, align 8, !dbg !7290
  %coordinates = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %43, i32 0, i32 1, !dbg !7291
  %44 = load i64, i64* %coordinates, align 8, !dbg !7291
  %45 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %p, align 8, !dbg !7292
  %add.ptr = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %45, i64 %44, !dbg !7292
  store %struct._PrimitiveInfo* %add.ptr, %struct._PrimitiveInfo** %p, align 8, !dbg !7292
  %x31 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %start, i32 0, i32 0, !dbg !7293
  %46 = load double, double* %x31, align 8, !dbg !7293
  %x32 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %offset, i32 0, i32 0, !dbg !7294
  %47 = load double, double* %x32, align 8, !dbg !7294
  %add33 = fadd double %46, %47, !dbg !7295
  %x34 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arc, i32 0, i32 0, !dbg !7296
  %48 = load double, double* %x34, align 8, !dbg !7296
  %sub35 = fsub double %add33, %48, !dbg !7297
  %x36 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 0, !dbg !7298
  store double %sub35, double* %x36, align 8, !dbg !7299
  %y37 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %start, i32 0, i32 1, !dbg !7300
  %49 = load double, double* %y37, align 8, !dbg !7300
  %y38 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %offset, i32 0, i32 1, !dbg !7301
  %50 = load double, double* %y38, align 8, !dbg !7301
  %add39 = fadd double %49, %50, !dbg !7302
  %y40 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arc, i32 0, i32 1, !dbg !7303
  %51 = load double, double* %y40, align 8, !dbg !7303
  %sub41 = fsub double %add39, %51, !dbg !7304
  %y42 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 1, !dbg !7305
  store double %sub41, double* %y42, align 8, !dbg !7306
  %x43 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %degrees, i32 0, i32 0, !dbg !7307
  store double 0.000000e+00, double* %x43, align 8, !dbg !7308
  %y44 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %degrees, i32 0, i32 1, !dbg !7309
  store double 9.000000e+01, double* %y44, align 8, !dbg !7310
  %52 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %p, align 8, !dbg !7311
  %53 = bitcast %struct._PointInfo* %point to { double, double }*, !dbg !7312
  %54 = getelementptr inbounds { double, double }, { double, double }* %53, i32 0, i32 0, !dbg !7312
  %55 = load double, double* %54, align 8, !dbg !7312
  %56 = getelementptr inbounds { double, double }, { double, double }* %53, i32 0, i32 1, !dbg !7312
  %57 = load double, double* %56, align 8, !dbg !7312
  %58 = bitcast %struct._PointInfo* %arc to { double, double }*, !dbg !7312
  %59 = getelementptr inbounds { double, double }, { double, double }* %58, i32 0, i32 0, !dbg !7312
  %60 = load double, double* %59, align 8, !dbg !7312
  %61 = getelementptr inbounds { double, double }, { double, double }* %58, i32 0, i32 1, !dbg !7312
  %62 = load double, double* %61, align 8, !dbg !7312
  %63 = bitcast %struct._PointInfo* %degrees to { double, double }*, !dbg !7312
  %64 = getelementptr inbounds { double, double }, { double, double }* %63, i32 0, i32 0, !dbg !7312
  %65 = load double, double* %64, align 8, !dbg !7312
  %66 = getelementptr inbounds { double, double }, { double, double }* %63, i32 0, i32 1, !dbg !7312
  %67 = load double, double* %66, align 8, !dbg !7312
  call void @TraceEllipse(%struct._PrimitiveInfo* %52, double %55, double %57, double %60, double %62, double %65, double %67), !dbg !7312
  %68 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %p, align 8, !dbg !7313
  %coordinates45 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %68, i32 0, i32 1, !dbg !7314
  %69 = load i64, i64* %coordinates45, align 8, !dbg !7314
  %70 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %p, align 8, !dbg !7315
  %add.ptr46 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %70, i64 %69, !dbg !7315
  store %struct._PrimitiveInfo* %add.ptr46, %struct._PrimitiveInfo** %p, align 8, !dbg !7315
  %x47 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %start, i32 0, i32 0, !dbg !7316
  %71 = load double, double* %x47, align 8, !dbg !7316
  %x48 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arc, i32 0, i32 0, !dbg !7317
  %72 = load double, double* %x48, align 8, !dbg !7317
  %add49 = fadd double %71, %72, !dbg !7318
  %x50 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 0, !dbg !7319
  store double %add49, double* %x50, align 8, !dbg !7320
  %y51 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %start, i32 0, i32 1, !dbg !7321
  %73 = load double, double* %y51, align 8, !dbg !7321
  %y52 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %offset, i32 0, i32 1, !dbg !7322
  %74 = load double, double* %y52, align 8, !dbg !7322
  %add53 = fadd double %73, %74, !dbg !7323
  %y54 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arc, i32 0, i32 1, !dbg !7324
  %75 = load double, double* %y54, align 8, !dbg !7324
  %sub55 = fsub double %add53, %75, !dbg !7325
  %y56 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 1, !dbg !7326
  store double %sub55, double* %y56, align 8, !dbg !7327
  %x57 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %degrees, i32 0, i32 0, !dbg !7328
  store double 9.000000e+01, double* %x57, align 8, !dbg !7329
  %y58 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %degrees, i32 0, i32 1, !dbg !7330
  store double 1.800000e+02, double* %y58, align 8, !dbg !7331
  %76 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %p, align 8, !dbg !7332
  %77 = bitcast %struct._PointInfo* %point to { double, double }*, !dbg !7333
  %78 = getelementptr inbounds { double, double }, { double, double }* %77, i32 0, i32 0, !dbg !7333
  %79 = load double, double* %78, align 8, !dbg !7333
  %80 = getelementptr inbounds { double, double }, { double, double }* %77, i32 0, i32 1, !dbg !7333
  %81 = load double, double* %80, align 8, !dbg !7333
  %82 = bitcast %struct._PointInfo* %arc to { double, double }*, !dbg !7333
  %83 = getelementptr inbounds { double, double }, { double, double }* %82, i32 0, i32 0, !dbg !7333
  %84 = load double, double* %83, align 8, !dbg !7333
  %85 = getelementptr inbounds { double, double }, { double, double }* %82, i32 0, i32 1, !dbg !7333
  %86 = load double, double* %85, align 8, !dbg !7333
  %87 = bitcast %struct._PointInfo* %degrees to { double, double }*, !dbg !7333
  %88 = getelementptr inbounds { double, double }, { double, double }* %87, i32 0, i32 0, !dbg !7333
  %89 = load double, double* %88, align 8, !dbg !7333
  %90 = getelementptr inbounds { double, double }, { double, double }* %87, i32 0, i32 1, !dbg !7333
  %91 = load double, double* %90, align 8, !dbg !7333
  call void @TraceEllipse(%struct._PrimitiveInfo* %76, double %79, double %81, double %84, double %86, double %89, double %91), !dbg !7333
  %92 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %p, align 8, !dbg !7334
  %coordinates59 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %92, i32 0, i32 1, !dbg !7335
  %93 = load i64, i64* %coordinates59, align 8, !dbg !7335
  %94 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %p, align 8, !dbg !7336
  %add.ptr60 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %94, i64 %93, !dbg !7336
  store %struct._PrimitiveInfo* %add.ptr60, %struct._PrimitiveInfo** %p, align 8, !dbg !7336
  %x61 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %start, i32 0, i32 0, !dbg !7337
  %95 = load double, double* %x61, align 8, !dbg !7337
  %x62 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arc, i32 0, i32 0, !dbg !7338
  %96 = load double, double* %x62, align 8, !dbg !7338
  %add63 = fadd double %95, %96, !dbg !7339
  %x64 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 0, !dbg !7340
  store double %add63, double* %x64, align 8, !dbg !7341
  %y65 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %start, i32 0, i32 1, !dbg !7342
  %97 = load double, double* %y65, align 8, !dbg !7342
  %y66 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arc, i32 0, i32 1, !dbg !7343
  %98 = load double, double* %y66, align 8, !dbg !7343
  %add67 = fadd double %97, %98, !dbg !7344
  %y68 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 1, !dbg !7345
  store double %add67, double* %y68, align 8, !dbg !7346
  %x69 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %degrees, i32 0, i32 0, !dbg !7347
  store double 1.800000e+02, double* %x69, align 8, !dbg !7348
  %y70 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %degrees, i32 0, i32 1, !dbg !7349
  store double 2.700000e+02, double* %y70, align 8, !dbg !7350
  %99 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %p, align 8, !dbg !7351
  %100 = bitcast %struct._PointInfo* %point to { double, double }*, !dbg !7352
  %101 = getelementptr inbounds { double, double }, { double, double }* %100, i32 0, i32 0, !dbg !7352
  %102 = load double, double* %101, align 8, !dbg !7352
  %103 = getelementptr inbounds { double, double }, { double, double }* %100, i32 0, i32 1, !dbg !7352
  %104 = load double, double* %103, align 8, !dbg !7352
  %105 = bitcast %struct._PointInfo* %arc to { double, double }*, !dbg !7352
  %106 = getelementptr inbounds { double, double }, { double, double }* %105, i32 0, i32 0, !dbg !7352
  %107 = load double, double* %106, align 8, !dbg !7352
  %108 = getelementptr inbounds { double, double }, { double, double }* %105, i32 0, i32 1, !dbg !7352
  %109 = load double, double* %108, align 8, !dbg !7352
  %110 = bitcast %struct._PointInfo* %degrees to { double, double }*, !dbg !7352
  %111 = getelementptr inbounds { double, double }, { double, double }* %110, i32 0, i32 0, !dbg !7352
  %112 = load double, double* %111, align 8, !dbg !7352
  %113 = getelementptr inbounds { double, double }, { double, double }* %110, i32 0, i32 1, !dbg !7352
  %114 = load double, double* %113, align 8, !dbg !7352
  call void @TraceEllipse(%struct._PrimitiveInfo* %99, double %102, double %104, double %107, double %109, double %112, double %114), !dbg !7352
  %115 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %p, align 8, !dbg !7353
  %coordinates71 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %115, i32 0, i32 1, !dbg !7354
  %116 = load i64, i64* %coordinates71, align 8, !dbg !7354
  %117 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %p, align 8, !dbg !7355
  %add.ptr72 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %117, i64 %116, !dbg !7355
  store %struct._PrimitiveInfo* %add.ptr72, %struct._PrimitiveInfo** %p, align 8, !dbg !7355
  %118 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %p, align 8, !dbg !7356
  %119 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !7357
  %point73 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %119, i32 0, i32 0, !dbg !7358
  %120 = bitcast %struct._PointInfo* %point73 to { double, double }*, !dbg !7359
  %121 = getelementptr inbounds { double, double }, { double, double }* %120, i32 0, i32 0, !dbg !7359
  %122 = load double, double* %121, align 8, !dbg !7359
  %123 = getelementptr inbounds { double, double }, { double, double }* %120, i32 0, i32 1, !dbg !7359
  %124 = load double, double* %123, align 8, !dbg !7359
  call void @TracePoint(%struct._PrimitiveInfo* %118, double %122, double %124), !dbg !7359
  %125 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %p, align 8, !dbg !7360
  %coordinates74 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %125, i32 0, i32 1, !dbg !7361
  %126 = load i64, i64* %coordinates74, align 8, !dbg !7361
  %127 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %p, align 8, !dbg !7362
  %add.ptr75 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %127, i64 %126, !dbg !7362
  store %struct._PrimitiveInfo* %add.ptr75, %struct._PrimitiveInfo** %p, align 8, !dbg !7362
  %128 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %p, align 8, !dbg !7363
  %129 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !7364
  %sub.ptr.lhs.cast = ptrtoint %struct._PrimitiveInfo* %128 to i64, !dbg !7365
  %sub.ptr.rhs.cast = ptrtoint %struct._PrimitiveInfo* %129 to i64, !dbg !7365
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !7365
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 40, !dbg !7365
  %130 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !7366
  %coordinates76 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %130, i32 0, i32 1, !dbg !7367
  store i64 %sub.ptr.div, i64* %coordinates76, align 8, !dbg !7368
  store i64 0, i64* %i, align 8, !dbg !7369
  br label %for.cond, !dbg !7371

for.cond:                                         ; preds = %for.inc, %if.end19
  %131 = load i64, i64* %i, align 8, !dbg !7372
  %132 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !7374
  %coordinates77 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %132, i32 0, i32 1, !dbg !7375
  %133 = load i64, i64* %coordinates77, align 8, !dbg !7375
  %cmp78 = icmp slt i64 %131, %133, !dbg !7376
  br i1 %cmp78, label %for.body, label %for.end, !dbg !7377

for.body:                                         ; preds = %for.cond
  %134 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !7378
  %primitive = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %134, i32 0, i32 2, !dbg !7380
  %135 = load i32, i32* %primitive, align 8, !dbg !7380
  %136 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %p, align 8, !dbg !7381
  %primitive79 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %136, i32 0, i32 2, !dbg !7382
  store i32 %135, i32* %primitive79, align 8, !dbg !7383
  %137 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %p, align 8, !dbg !7384
  %incdec.ptr = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %137, i32 -1, !dbg !7384
  store %struct._PrimitiveInfo* %incdec.ptr, %struct._PrimitiveInfo** %p, align 8, !dbg !7384
  br label %for.inc, !dbg !7385

for.inc:                                          ; preds = %for.body
  %138 = load i64, i64* %i, align 8, !dbg !7386
  %inc = add nsw i64 %138, 1, !dbg !7386
  store i64 %inc, i64* %i, align 8, !dbg !7386
  br label %for.cond, !dbg !7387, !llvm.loop !7388

for.end:                                          ; preds = %for.cond
  ret void, !dbg !7390
}

; Function Attrs: noinline nounwind uwtable
define internal void @TraceArc(%struct._PrimitiveInfo* %primitive_info, double %start.coerce0, double %start.coerce1, double %end.coerce0, double %end.coerce1, double %degrees.coerce0, double %degrees.coerce1) #0 !dbg !7391 {
entry:
  %start = alloca %struct._PointInfo, align 8
  %end = alloca %struct._PointInfo, align 8
  %degrees = alloca %struct._PointInfo, align 8
  %primitive_info.addr = alloca %struct._PrimitiveInfo*, align 8
  %center = alloca %struct._PointInfo, align 8
  %radii = alloca %struct._PointInfo, align 8
  %0 = bitcast %struct._PointInfo* %start to { double, double }*
  %1 = getelementptr inbounds { double, double }, { double, double }* %0, i32 0, i32 0
  store double %start.coerce0, double* %1, align 8
  %2 = getelementptr inbounds { double, double }, { double, double }* %0, i32 0, i32 1
  store double %start.coerce1, double* %2, align 8
  %3 = bitcast %struct._PointInfo* %end to { double, double }*
  %4 = getelementptr inbounds { double, double }, { double, double }* %3, i32 0, i32 0
  store double %end.coerce0, double* %4, align 8
  %5 = getelementptr inbounds { double, double }, { double, double }* %3, i32 0, i32 1
  store double %end.coerce1, double* %5, align 8
  %6 = bitcast %struct._PointInfo* %degrees to { double, double }*
  %7 = getelementptr inbounds { double, double }, { double, double }* %6, i32 0, i32 0
  store double %degrees.coerce0, double* %7, align 8
  %8 = getelementptr inbounds { double, double }, { double, double }* %6, i32 0, i32 1
  store double %degrees.coerce1, double* %8, align 8
  store %struct._PrimitiveInfo* %primitive_info, %struct._PrimitiveInfo** %primitive_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PrimitiveInfo** %primitive_info.addr, metadata !7394, metadata !DIExpression()), !dbg !7395
  call void @llvm.dbg.declare(metadata %struct._PointInfo* %start, metadata !7396, metadata !DIExpression()), !dbg !7397
  call void @llvm.dbg.declare(metadata %struct._PointInfo* %end, metadata !7398, metadata !DIExpression()), !dbg !7399
  call void @llvm.dbg.declare(metadata %struct._PointInfo* %degrees, metadata !7400, metadata !DIExpression()), !dbg !7401
  call void @llvm.dbg.declare(metadata %struct._PointInfo* %center, metadata !7402, metadata !DIExpression()), !dbg !7403
  call void @llvm.dbg.declare(metadata %struct._PointInfo* %radii, metadata !7404, metadata !DIExpression()), !dbg !7405
  %x = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %end, i32 0, i32 0, !dbg !7406
  %9 = load double, double* %x, align 8, !dbg !7406
  %x1 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %start, i32 0, i32 0, !dbg !7407
  %10 = load double, double* %x1, align 8, !dbg !7407
  %add = fadd double %9, %10, !dbg !7408
  %mul = fmul double 5.000000e-01, %add, !dbg !7409
  %x2 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %center, i32 0, i32 0, !dbg !7410
  store double %mul, double* %x2, align 8, !dbg !7411
  %y = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %end, i32 0, i32 1, !dbg !7412
  %11 = load double, double* %y, align 8, !dbg !7412
  %y3 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %start, i32 0, i32 1, !dbg !7413
  %12 = load double, double* %y3, align 8, !dbg !7413
  %add4 = fadd double %11, %12, !dbg !7414
  %mul5 = fmul double 5.000000e-01, %add4, !dbg !7415
  %y6 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %center, i32 0, i32 1, !dbg !7416
  store double %mul5, double* %y6, align 8, !dbg !7417
  %x7 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %center, i32 0, i32 0, !dbg !7418
  %13 = load double, double* %x7, align 8, !dbg !7418
  %x8 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %start, i32 0, i32 0, !dbg !7419
  %14 = load double, double* %x8, align 8, !dbg !7419
  %sub = fsub double %13, %14, !dbg !7420
  %15 = call double @llvm.fabs.f64(double %sub), !dbg !7421
  %x9 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %radii, i32 0, i32 0, !dbg !7422
  store double %15, double* %x9, align 8, !dbg !7423
  %y10 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %center, i32 0, i32 1, !dbg !7424
  %16 = load double, double* %y10, align 8, !dbg !7424
  %y11 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %start, i32 0, i32 1, !dbg !7425
  %17 = load double, double* %y11, align 8, !dbg !7425
  %sub12 = fsub double %16, %17, !dbg !7426
  %18 = call double @llvm.fabs.f64(double %sub12), !dbg !7427
  %y13 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %radii, i32 0, i32 1, !dbg !7428
  store double %18, double* %y13, align 8, !dbg !7429
  %19 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !7430
  %20 = bitcast %struct._PointInfo* %center to { double, double }*, !dbg !7431
  %21 = getelementptr inbounds { double, double }, { double, double }* %20, i32 0, i32 0, !dbg !7431
  %22 = load double, double* %21, align 8, !dbg !7431
  %23 = getelementptr inbounds { double, double }, { double, double }* %20, i32 0, i32 1, !dbg !7431
  %24 = load double, double* %23, align 8, !dbg !7431
  %25 = bitcast %struct._PointInfo* %radii to { double, double }*, !dbg !7431
  %26 = getelementptr inbounds { double, double }, { double, double }* %25, i32 0, i32 0, !dbg !7431
  %27 = load double, double* %26, align 8, !dbg !7431
  %28 = getelementptr inbounds { double, double }, { double, double }* %25, i32 0, i32 1, !dbg !7431
  %29 = load double, double* %28, align 8, !dbg !7431
  %30 = bitcast %struct._PointInfo* %degrees to { double, double }*, !dbg !7431
  %31 = getelementptr inbounds { double, double }, { double, double }* %30, i32 0, i32 0, !dbg !7431
  %32 = load double, double* %31, align 8, !dbg !7431
  %33 = getelementptr inbounds { double, double }, { double, double }* %30, i32 0, i32 1, !dbg !7431
  %34 = load double, double* %33, align 8, !dbg !7431
  call void @TraceEllipse(%struct._PrimitiveInfo* %19, double %22, double %24, double %27, double %29, double %32, double %34), !dbg !7431
  ret void, !dbg !7432
}

; Function Attrs: noinline nounwind uwtable
define internal void @TraceEllipse(%struct._PrimitiveInfo* %primitive_info, double %start.coerce0, double %start.coerce1, double %stop.coerce0, double %stop.coerce1, double %degrees.coerce0, double %degrees.coerce1) #0 !dbg !7433 {
entry:
  %start = alloca %struct._PointInfo, align 8
  %stop = alloca %struct._PointInfo, align 8
  %degrees = alloca %struct._PointInfo, align 8
  %primitive_info.addr = alloca %struct._PrimitiveInfo*, align 8
  %delta = alloca double, align 8
  %step = alloca double, align 8
  %y = alloca double, align 8
  %angle = alloca %struct._PointInfo, align 8
  %point = alloca %struct._PointInfo, align 8
  %p = alloca %struct._PrimitiveInfo*, align 8
  %i = alloca i64, align 8
  %0 = bitcast %struct._PointInfo* %start to { double, double }*
  %1 = getelementptr inbounds { double, double }, { double, double }* %0, i32 0, i32 0
  store double %start.coerce0, double* %1, align 8
  %2 = getelementptr inbounds { double, double }, { double, double }* %0, i32 0, i32 1
  store double %start.coerce1, double* %2, align 8
  %3 = bitcast %struct._PointInfo* %stop to { double, double }*
  %4 = getelementptr inbounds { double, double }, { double, double }* %3, i32 0, i32 0
  store double %stop.coerce0, double* %4, align 8
  %5 = getelementptr inbounds { double, double }, { double, double }* %3, i32 0, i32 1
  store double %stop.coerce1, double* %5, align 8
  %6 = bitcast %struct._PointInfo* %degrees to { double, double }*
  %7 = getelementptr inbounds { double, double }, { double, double }* %6, i32 0, i32 0
  store double %degrees.coerce0, double* %7, align 8
  %8 = getelementptr inbounds { double, double }, { double, double }* %6, i32 0, i32 1
  store double %degrees.coerce1, double* %8, align 8
  store %struct._PrimitiveInfo* %primitive_info, %struct._PrimitiveInfo** %primitive_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PrimitiveInfo** %primitive_info.addr, metadata !7434, metadata !DIExpression()), !dbg !7435
  call void @llvm.dbg.declare(metadata %struct._PointInfo* %start, metadata !7436, metadata !DIExpression()), !dbg !7437
  call void @llvm.dbg.declare(metadata %struct._PointInfo* %stop, metadata !7438, metadata !DIExpression()), !dbg !7439
  call void @llvm.dbg.declare(metadata %struct._PointInfo* %degrees, metadata !7440, metadata !DIExpression()), !dbg !7441
  call void @llvm.dbg.declare(metadata double* %delta, metadata !7442, metadata !DIExpression()), !dbg !7443
  call void @llvm.dbg.declare(metadata double* %step, metadata !7444, metadata !DIExpression()), !dbg !7445
  call void @llvm.dbg.declare(metadata double* %y, metadata !7446, metadata !DIExpression()), !dbg !7447
  call void @llvm.dbg.declare(metadata %struct._PointInfo* %angle, metadata !7448, metadata !DIExpression()), !dbg !7449
  call void @llvm.dbg.declare(metadata %struct._PointInfo* %point, metadata !7450, metadata !DIExpression()), !dbg !7451
  call void @llvm.dbg.declare(metadata %struct._PrimitiveInfo** %p, metadata !7452, metadata !DIExpression()), !dbg !7453
  call void @llvm.dbg.declare(metadata i64* %i, metadata !7454, metadata !DIExpression()), !dbg !7455
  %x = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %stop, i32 0, i32 0, !dbg !7456
  %9 = load double, double* %x, align 8, !dbg !7456
  %cmp = fcmp oeq double %9, 0.000000e+00, !dbg !7458
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !7459

land.lhs.true:                                    ; preds = %entry
  %y1 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %stop, i32 0, i32 1, !dbg !7460
  %10 = load double, double* %y1, align 8, !dbg !7460
  %cmp2 = fcmp oeq double %10, 0.000000e+00, !dbg !7461
  br i1 %cmp2, label %if.then, label %if.end, !dbg !7462

if.then:                                          ; preds = %land.lhs.true
  %11 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !7463
  %12 = bitcast %struct._PointInfo* %start to { double, double }*, !dbg !7465
  %13 = getelementptr inbounds { double, double }, { double, double }* %12, i32 0, i32 0, !dbg !7465
  %14 = load double, double* %13, align 8, !dbg !7465
  %15 = getelementptr inbounds { double, double }, { double, double }* %12, i32 0, i32 1, !dbg !7465
  %16 = load double, double* %15, align 8, !dbg !7465
  call void @TracePoint(%struct._PrimitiveInfo* %11, double %14, double %16), !dbg !7465
  br label %for.end72, !dbg !7466

if.end:                                           ; preds = %land.lhs.true, %entry
  %x3 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %stop, i32 0, i32 0, !dbg !7467
  %17 = load double, double* %x3, align 8, !dbg !7467
  %y4 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %stop, i32 0, i32 1, !dbg !7468
  %18 = load double, double* %y4, align 8, !dbg !7468
  %call = call double @MagickMax(double %17, double %18), !dbg !7469
  %div = fdiv double 2.000000e+00, %call, !dbg !7470
  store double %div, double* %delta, align 8, !dbg !7471
  store double 0x3FD921FB54442D18, double* %step, align 8, !dbg !7472
  %19 = load double, double* %delta, align 8, !dbg !7473
  %cmp5 = fcmp oge double %19, 0.000000e+00, !dbg !7475
  br i1 %cmp5, label %land.lhs.true6, label %if.end12, !dbg !7476

land.lhs.true6:                                   ; preds = %if.end
  %20 = load double, double* %delta, align 8, !dbg !7477
  %cmp7 = fcmp olt double %20, 0x3FD921FB54442D18, !dbg !7478
  br i1 %cmp7, label %if.then8, label %if.end12, !dbg !7479

if.then8:                                         ; preds = %land.lhs.true6
  %21 = load double, double* %delta, align 8, !dbg !7480
  %div9 = fdiv double 0x400921FB54442D18, %21, !dbg !7481
  %div10 = fdiv double %div9, 2.000000e+00, !dbg !7482
  %add = fadd double %div10, 5.000000e-01, !dbg !7483
  %mul = fmul double 4.000000e+00, %add, !dbg !7484
  %div11 = fdiv double 0x400921FB54442D18, %mul, !dbg !7485
  store double %div11, double* %step, align 8, !dbg !7486
  br label %if.end12, !dbg !7487

if.end12:                                         ; preds = %if.then8, %land.lhs.true6, %if.end
  %x13 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %degrees, i32 0, i32 0, !dbg !7488
  %22 = load double, double* %x13, align 8, !dbg !7488
  %call14 = call double @DegreesToRadians(double %22), !dbg !7489
  %x15 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %angle, i32 0, i32 0, !dbg !7490
  store double %call14, double* %x15, align 8, !dbg !7491
  %y16 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %degrees, i32 0, i32 1, !dbg !7492
  %23 = load double, double* %y16, align 8, !dbg !7492
  store double %23, double* %y, align 8, !dbg !7493
  br label %while.cond, !dbg !7494

while.cond:                                       ; preds = %while.body, %if.end12
  %24 = load double, double* %y, align 8, !dbg !7495
  %x17 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %degrees, i32 0, i32 0, !dbg !7496
  %25 = load double, double* %x17, align 8, !dbg !7496
  %cmp18 = fcmp olt double %24, %25, !dbg !7497
  br i1 %cmp18, label %while.body, label %while.end, !dbg !7494

while.body:                                       ; preds = %while.cond
  %26 = load double, double* %y, align 8, !dbg !7498
  %add19 = fadd double %26, 3.600000e+02, !dbg !7498
  store double %add19, double* %y, align 8, !dbg !7498
  br label %while.cond, !dbg !7494, !llvm.loop !7499

while.end:                                        ; preds = %while.cond
  %27 = load double, double* %y, align 8, !dbg !7501
  %call20 = call double @DegreesToRadians(double %27), !dbg !7502
  %sub = fsub double %call20, 1.000000e-15, !dbg !7503
  %y21 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %angle, i32 0, i32 1, !dbg !7504
  store double %sub, double* %y21, align 8, !dbg !7505
  %28 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !7506
  store %struct._PrimitiveInfo* %28, %struct._PrimitiveInfo** %p, align 8, !dbg !7508
  br label %for.cond, !dbg !7509

for.cond:                                         ; preds = %for.inc, %while.end
  %x22 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %angle, i32 0, i32 0, !dbg !7510
  %29 = load double, double* %x22, align 8, !dbg !7510
  %y23 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %angle, i32 0, i32 1, !dbg !7512
  %30 = load double, double* %y23, align 8, !dbg !7512
  %cmp24 = fcmp olt double %29, %30, !dbg !7513
  br i1 %cmp24, label %for.body, label %for.end, !dbg !7514

for.body:                                         ; preds = %for.cond
  %x25 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %angle, i32 0, i32 0, !dbg !7515
  %31 = load double, double* %x25, align 8, !dbg !7515
  %call26 = call double @DegreesToRadians(double 3.600000e+02), !dbg !7517
  %call27 = call double @fmod(double %31, double %call26) #17, !dbg !7518
  %call28 = call double @cos(double %call27) #17, !dbg !7519
  %x29 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %stop, i32 0, i32 0, !dbg !7520
  %32 = load double, double* %x29, align 8, !dbg !7520
  %mul30 = fmul double %call28, %32, !dbg !7521
  %x31 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %start, i32 0, i32 0, !dbg !7522
  %33 = load double, double* %x31, align 8, !dbg !7522
  %add32 = fadd double %mul30, %33, !dbg !7523
  %x33 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 0, !dbg !7524
  store double %add32, double* %x33, align 8, !dbg !7525
  %x34 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %angle, i32 0, i32 0, !dbg !7526
  %34 = load double, double* %x34, align 8, !dbg !7526
  %call35 = call double @DegreesToRadians(double 3.600000e+02), !dbg !7527
  %call36 = call double @fmod(double %34, double %call35) #17, !dbg !7528
  %call37 = call double @sin(double %call36) #17, !dbg !7529
  %y38 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %stop, i32 0, i32 1, !dbg !7530
  %35 = load double, double* %y38, align 8, !dbg !7530
  %mul39 = fmul double %call37, %35, !dbg !7531
  %y40 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %start, i32 0, i32 1, !dbg !7532
  %36 = load double, double* %y40, align 8, !dbg !7532
  %add41 = fadd double %mul39, %36, !dbg !7533
  %y42 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 1, !dbg !7534
  store double %add41, double* %y42, align 8, !dbg !7535
  %37 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %p, align 8, !dbg !7536
  %38 = bitcast %struct._PointInfo* %point to { double, double }*, !dbg !7537
  %39 = getelementptr inbounds { double, double }, { double, double }* %38, i32 0, i32 0, !dbg !7537
  %40 = load double, double* %39, align 8, !dbg !7537
  %41 = getelementptr inbounds { double, double }, { double, double }* %38, i32 0, i32 1, !dbg !7537
  %42 = load double, double* %41, align 8, !dbg !7537
  call void @TracePoint(%struct._PrimitiveInfo* %37, double %40, double %42), !dbg !7537
  %43 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %p, align 8, !dbg !7538
  %coordinates = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %43, i32 0, i32 1, !dbg !7539
  %44 = load i64, i64* %coordinates, align 8, !dbg !7539
  %45 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %p, align 8, !dbg !7540
  %add.ptr = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %45, i64 %44, !dbg !7540
  store %struct._PrimitiveInfo* %add.ptr, %struct._PrimitiveInfo** %p, align 8, !dbg !7540
  br label %for.inc, !dbg !7541

for.inc:                                          ; preds = %for.body
  %46 = load double, double* %step, align 8, !dbg !7542
  %x43 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %angle, i32 0, i32 0, !dbg !7543
  %47 = load double, double* %x43, align 8, !dbg !7544
  %add44 = fadd double %47, %46, !dbg !7544
  store double %add44, double* %x43, align 8, !dbg !7544
  br label %for.cond, !dbg !7545, !llvm.loop !7546

for.end:                                          ; preds = %for.cond
  %y45 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %angle, i32 0, i32 1, !dbg !7548
  %48 = load double, double* %y45, align 8, !dbg !7548
  %call46 = call double @DegreesToRadians(double 3.600000e+02), !dbg !7549
  %call47 = call double @fmod(double %48, double %call46) #17, !dbg !7550
  %call48 = call double @cos(double %call47) #17, !dbg !7551
  %x49 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %stop, i32 0, i32 0, !dbg !7552
  %49 = load double, double* %x49, align 8, !dbg !7552
  %mul50 = fmul double %call48, %49, !dbg !7553
  %x51 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %start, i32 0, i32 0, !dbg !7554
  %50 = load double, double* %x51, align 8, !dbg !7554
  %add52 = fadd double %mul50, %50, !dbg !7555
  %x53 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 0, !dbg !7556
  store double %add52, double* %x53, align 8, !dbg !7557
  %y54 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %angle, i32 0, i32 1, !dbg !7558
  %51 = load double, double* %y54, align 8, !dbg !7558
  %call55 = call double @DegreesToRadians(double 3.600000e+02), !dbg !7559
  %call56 = call double @fmod(double %51, double %call55) #17, !dbg !7560
  %call57 = call double @sin(double %call56) #17, !dbg !7561
  %y58 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %stop, i32 0, i32 1, !dbg !7562
  %52 = load double, double* %y58, align 8, !dbg !7562
  %mul59 = fmul double %call57, %52, !dbg !7563
  %y60 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %start, i32 0, i32 1, !dbg !7564
  %53 = load double, double* %y60, align 8, !dbg !7564
  %add61 = fadd double %mul59, %53, !dbg !7565
  %y62 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 1, !dbg !7566
  store double %add61, double* %y62, align 8, !dbg !7567
  %54 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %p, align 8, !dbg !7568
  %55 = bitcast %struct._PointInfo* %point to { double, double }*, !dbg !7569
  %56 = getelementptr inbounds { double, double }, { double, double }* %55, i32 0, i32 0, !dbg !7569
  %57 = load double, double* %56, align 8, !dbg !7569
  %58 = getelementptr inbounds { double, double }, { double, double }* %55, i32 0, i32 1, !dbg !7569
  %59 = load double, double* %58, align 8, !dbg !7569
  call void @TracePoint(%struct._PrimitiveInfo* %54, double %57, double %59), !dbg !7569
  %60 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %p, align 8, !dbg !7570
  %coordinates63 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %60, i32 0, i32 1, !dbg !7571
  %61 = load i64, i64* %coordinates63, align 8, !dbg !7571
  %62 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %p, align 8, !dbg !7572
  %add.ptr64 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %62, i64 %61, !dbg !7572
  store %struct._PrimitiveInfo* %add.ptr64, %struct._PrimitiveInfo** %p, align 8, !dbg !7572
  %63 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %p, align 8, !dbg !7573
  %64 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !7574
  %sub.ptr.lhs.cast = ptrtoint %struct._PrimitiveInfo* %63 to i64, !dbg !7575
  %sub.ptr.rhs.cast = ptrtoint %struct._PrimitiveInfo* %64 to i64, !dbg !7575
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !7575
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 40, !dbg !7575
  %65 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !7576
  %coordinates65 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %65, i32 0, i32 1, !dbg !7577
  store i64 %sub.ptr.div, i64* %coordinates65, align 8, !dbg !7578
  store i64 0, i64* %i, align 8, !dbg !7579
  br label %for.cond66, !dbg !7581

for.cond66:                                       ; preds = %for.inc71, %for.end
  %66 = load i64, i64* %i, align 8, !dbg !7582
  %67 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !7584
  %coordinates67 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %67, i32 0, i32 1, !dbg !7585
  %68 = load i64, i64* %coordinates67, align 8, !dbg !7585
  %cmp68 = icmp slt i64 %66, %68, !dbg !7586
  br i1 %cmp68, label %for.body69, label %for.end72, !dbg !7587

for.body69:                                       ; preds = %for.cond66
  %69 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !7588
  %primitive = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %69, i32 0, i32 2, !dbg !7590
  %70 = load i32, i32* %primitive, align 8, !dbg !7590
  %71 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %p, align 8, !dbg !7591
  %primitive70 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %71, i32 0, i32 2, !dbg !7592
  store i32 %70, i32* %primitive70, align 8, !dbg !7593
  %72 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %p, align 8, !dbg !7594
  %incdec.ptr = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %72, i32 -1, !dbg !7594
  store %struct._PrimitiveInfo* %incdec.ptr, %struct._PrimitiveInfo** %p, align 8, !dbg !7594
  br label %for.inc71, !dbg !7595

for.inc71:                                        ; preds = %for.body69
  %73 = load i64, i64* %i, align 8, !dbg !7596
  %inc = add nsw i64 %73, 1, !dbg !7596
  store i64 %inc, i64* %i, align 8, !dbg !7596
  br label %for.cond66, !dbg !7597, !llvm.loop !7598

for.end72:                                        ; preds = %if.then, %for.cond66
  ret void, !dbg !7600
}

; Function Attrs: noinline nounwind uwtable
define internal void @TraceCircle(%struct._PrimitiveInfo* %primitive_info, double %start.coerce0, double %start.coerce1, double %end.coerce0, double %end.coerce1) #0 !dbg !7601 {
entry:
  %start = alloca %struct._PointInfo, align 8
  %end = alloca %struct._PointInfo, align 8
  %primitive_info.addr = alloca %struct._PrimitiveInfo*, align 8
  %alpha = alloca double, align 8
  %beta = alloca double, align 8
  %radius = alloca double, align 8
  %offset = alloca %struct._PointInfo, align 8
  %degrees = alloca %struct._PointInfo, align 8
  %0 = bitcast %struct._PointInfo* %start to { double, double }*
  %1 = getelementptr inbounds { double, double }, { double, double }* %0, i32 0, i32 0
  store double %start.coerce0, double* %1, align 8
  %2 = getelementptr inbounds { double, double }, { double, double }* %0, i32 0, i32 1
  store double %start.coerce1, double* %2, align 8
  %3 = bitcast %struct._PointInfo* %end to { double, double }*
  %4 = getelementptr inbounds { double, double }, { double, double }* %3, i32 0, i32 0
  store double %end.coerce0, double* %4, align 8
  %5 = getelementptr inbounds { double, double }, { double, double }* %3, i32 0, i32 1
  store double %end.coerce1, double* %5, align 8
  store %struct._PrimitiveInfo* %primitive_info, %struct._PrimitiveInfo** %primitive_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PrimitiveInfo** %primitive_info.addr, metadata !7602, metadata !DIExpression()), !dbg !7603
  call void @llvm.dbg.declare(metadata %struct._PointInfo* %start, metadata !7604, metadata !DIExpression()), !dbg !7605
  call void @llvm.dbg.declare(metadata %struct._PointInfo* %end, metadata !7606, metadata !DIExpression()), !dbg !7607
  call void @llvm.dbg.declare(metadata double* %alpha, metadata !7608, metadata !DIExpression()), !dbg !7609
  call void @llvm.dbg.declare(metadata double* %beta, metadata !7610, metadata !DIExpression()), !dbg !7611
  call void @llvm.dbg.declare(metadata double* %radius, metadata !7612, metadata !DIExpression()), !dbg !7613
  call void @llvm.dbg.declare(metadata %struct._PointInfo* %offset, metadata !7614, metadata !DIExpression()), !dbg !7615
  call void @llvm.dbg.declare(metadata %struct._PointInfo* %degrees, metadata !7616, metadata !DIExpression()), !dbg !7617
  %x = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %end, i32 0, i32 0, !dbg !7618
  %6 = load double, double* %x, align 8, !dbg !7618
  %x1 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %start, i32 0, i32 0, !dbg !7619
  %7 = load double, double* %x1, align 8, !dbg !7619
  %sub = fsub double %6, %7, !dbg !7620
  store double %sub, double* %alpha, align 8, !dbg !7621
  %y = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %end, i32 0, i32 1, !dbg !7622
  %8 = load double, double* %y, align 8, !dbg !7622
  %y2 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %start, i32 0, i32 1, !dbg !7623
  %9 = load double, double* %y2, align 8, !dbg !7623
  %sub3 = fsub double %8, %9, !dbg !7624
  store double %sub3, double* %beta, align 8, !dbg !7625
  %10 = load double, double* %alpha, align 8, !dbg !7626
  %11 = load double, double* %beta, align 8, !dbg !7627
  %call = call double @hypot(double %10, double %11) #17, !dbg !7628
  store double %call, double* %radius, align 8, !dbg !7629
  %12 = load double, double* %radius, align 8, !dbg !7630
  %x4 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %offset, i32 0, i32 0, !dbg !7631
  store double %12, double* %x4, align 8, !dbg !7632
  %13 = load double, double* %radius, align 8, !dbg !7633
  %y5 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %offset, i32 0, i32 1, !dbg !7634
  store double %13, double* %y5, align 8, !dbg !7635
  %x6 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %degrees, i32 0, i32 0, !dbg !7636
  store double 0.000000e+00, double* %x6, align 8, !dbg !7637
  %y7 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %degrees, i32 0, i32 1, !dbg !7638
  store double 3.600000e+02, double* %y7, align 8, !dbg !7639
  %14 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !7640
  %15 = bitcast %struct._PointInfo* %start to { double, double }*, !dbg !7641
  %16 = getelementptr inbounds { double, double }, { double, double }* %15, i32 0, i32 0, !dbg !7641
  %17 = load double, double* %16, align 8, !dbg !7641
  %18 = getelementptr inbounds { double, double }, { double, double }* %15, i32 0, i32 1, !dbg !7641
  %19 = load double, double* %18, align 8, !dbg !7641
  %20 = bitcast %struct._PointInfo* %offset to { double, double }*, !dbg !7641
  %21 = getelementptr inbounds { double, double }, { double, double }* %20, i32 0, i32 0, !dbg !7641
  %22 = load double, double* %21, align 8, !dbg !7641
  %23 = getelementptr inbounds { double, double }, { double, double }* %20, i32 0, i32 1, !dbg !7641
  %24 = load double, double* %23, align 8, !dbg !7641
  %25 = bitcast %struct._PointInfo* %degrees to { double, double }*, !dbg !7641
  %26 = getelementptr inbounds { double, double }, { double, double }* %25, i32 0, i32 0, !dbg !7641
  %27 = load double, double* %26, align 8, !dbg !7641
  %28 = getelementptr inbounds { double, double }, { double, double }* %25, i32 0, i32 1, !dbg !7641
  %29 = load double, double* %28, align 8, !dbg !7641
  call void @TraceEllipse(%struct._PrimitiveInfo* %14, double %17, double %19, double %22, double %24, double %27, double %29), !dbg !7641
  ret void, !dbg !7642
}

; Function Attrs: noinline nounwind uwtable
define internal void @TraceBezier(%struct._PrimitiveInfo* %primitive_info, i64 %number_coordinates) #0 !dbg !7643 {
entry:
  %primitive_info.addr = alloca %struct._PrimitiveInfo*, align 8
  %number_coordinates.addr = alloca i64, align 8
  %alpha = alloca double, align 8
  %coefficients = alloca double*, align 8
  %weight = alloca double, align 8
  %end = alloca %struct._PointInfo, align 8
  %point = alloca %struct._PointInfo, align 8
  %points = alloca %struct._PointInfo*, align 8
  %p = alloca %struct._PrimitiveInfo*, align 8
  %i = alloca i64, align 8
  %j = alloca i64, align 8
  %control_points = alloca i64, align 8
  %quantum = alloca i64, align 8
  %message = alloca i8*, align 8
  %exception = alloca %struct._ExceptionInfo, align 8
  store %struct._PrimitiveInfo* %primitive_info, %struct._PrimitiveInfo** %primitive_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PrimitiveInfo** %primitive_info.addr, metadata !7646, metadata !DIExpression()), !dbg !7647
  store i64 %number_coordinates, i64* %number_coordinates.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %number_coordinates.addr, metadata !7648, metadata !DIExpression()), !dbg !7649
  call void @llvm.dbg.declare(metadata double* %alpha, metadata !7650, metadata !DIExpression()), !dbg !7651
  call void @llvm.dbg.declare(metadata double** %coefficients, metadata !7652, metadata !DIExpression()), !dbg !7653
  call void @llvm.dbg.declare(metadata double* %weight, metadata !7654, metadata !DIExpression()), !dbg !7655
  call void @llvm.dbg.declare(metadata %struct._PointInfo* %end, metadata !7656, metadata !DIExpression()), !dbg !7657
  call void @llvm.dbg.declare(metadata %struct._PointInfo* %point, metadata !7658, metadata !DIExpression()), !dbg !7659
  call void @llvm.dbg.declare(metadata %struct._PointInfo** %points, metadata !7660, metadata !DIExpression()), !dbg !7661
  call void @llvm.dbg.declare(metadata %struct._PrimitiveInfo** %p, metadata !7662, metadata !DIExpression()), !dbg !7663
  call void @llvm.dbg.declare(metadata i64* %i, metadata !7664, metadata !DIExpression()), !dbg !7665
  call void @llvm.dbg.declare(metadata i64* %j, metadata !7666, metadata !DIExpression()), !dbg !7667
  call void @llvm.dbg.declare(metadata i64* %control_points, metadata !7668, metadata !DIExpression()), !dbg !7669
  call void @llvm.dbg.declare(metadata i64* %quantum, metadata !7670, metadata !DIExpression()), !dbg !7671
  %0 = load i64, i64* %number_coordinates.addr, align 8, !dbg !7672
  store i64 %0, i64* %quantum, align 8, !dbg !7673
  store i64 0, i64* %i, align 8, !dbg !7674
  br label %for.cond, !dbg !7676

for.cond:                                         ; preds = %for.inc23, %entry
  %1 = load i64, i64* %i, align 8, !dbg !7677
  %2 = load i64, i64* %number_coordinates.addr, align 8, !dbg !7679
  %cmp = icmp slt i64 %1, %2, !dbg !7680
  br i1 %cmp, label %for.body, label %for.end25, !dbg !7681

for.body:                                         ; preds = %for.cond
  %3 = load i64, i64* %i, align 8, !dbg !7682
  %add = add nsw i64 %3, 1, !dbg !7685
  store i64 %add, i64* %j, align 8, !dbg !7686
  br label %for.cond1, !dbg !7687

for.cond1:                                        ; preds = %for.inc, %for.body
  %4 = load i64, i64* %j, align 8, !dbg !7688
  %5 = load i64, i64* %number_coordinates.addr, align 8, !dbg !7690
  %cmp2 = icmp slt i64 %4, %5, !dbg !7691
  br i1 %cmp2, label %for.body3, label %for.end, !dbg !7692

for.body3:                                        ; preds = %for.cond1
  %6 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !7693
  %7 = load i64, i64* %j, align 8, !dbg !7695
  %arrayidx = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %6, i64 %7, !dbg !7693
  %point4 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx, i32 0, i32 0, !dbg !7696
  %x = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point4, i32 0, i32 0, !dbg !7697
  %8 = load double, double* %x, align 8, !dbg !7697
  %9 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !7698
  %10 = load i64, i64* %i, align 8, !dbg !7699
  %arrayidx5 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %9, i64 %10, !dbg !7698
  %point6 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx5, i32 0, i32 0, !dbg !7700
  %x7 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point6, i32 0, i32 0, !dbg !7701
  %11 = load double, double* %x7, align 8, !dbg !7701
  %sub = fsub double %8, %11, !dbg !7702
  %12 = call double @llvm.fabs.f64(double %sub), !dbg !7703
  store double %12, double* %alpha, align 8, !dbg !7704
  %13 = load double, double* %alpha, align 8, !dbg !7705
  %14 = load i64, i64* %quantum, align 8, !dbg !7707
  %conv = uitofp i64 %14 to double, !dbg !7708
  %cmp8 = fcmp ogt double %13, %conv, !dbg !7709
  br i1 %cmp8, label %if.then, label %if.end, !dbg !7710

if.then:                                          ; preds = %for.body3
  %15 = load double, double* %alpha, align 8, !dbg !7711
  %conv10 = fptoui double %15 to i64, !dbg !7712
  store i64 %conv10, i64* %quantum, align 8, !dbg !7713
  br label %if.end, !dbg !7714

if.end:                                           ; preds = %if.then, %for.body3
  %16 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !7715
  %17 = load i64, i64* %j, align 8, !dbg !7716
  %arrayidx11 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %16, i64 %17, !dbg !7715
  %point12 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx11, i32 0, i32 0, !dbg !7717
  %y = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point12, i32 0, i32 1, !dbg !7718
  %18 = load double, double* %y, align 8, !dbg !7718
  %19 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !7719
  %20 = load i64, i64* %i, align 8, !dbg !7720
  %arrayidx13 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %19, i64 %20, !dbg !7719
  %point14 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx13, i32 0, i32 0, !dbg !7721
  %y15 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point14, i32 0, i32 1, !dbg !7722
  %21 = load double, double* %y15, align 8, !dbg !7722
  %sub16 = fsub double %18, %21, !dbg !7723
  %22 = call double @llvm.fabs.f64(double %sub16), !dbg !7724
  store double %22, double* %alpha, align 8, !dbg !7725
  %23 = load double, double* %alpha, align 8, !dbg !7726
  %24 = load i64, i64* %quantum, align 8, !dbg !7728
  %conv17 = uitofp i64 %24 to double, !dbg !7729
  %cmp18 = fcmp ogt double %23, %conv17, !dbg !7730
  br i1 %cmp18, label %if.then20, label %if.end22, !dbg !7731

if.then20:                                        ; preds = %if.end
  %25 = load double, double* %alpha, align 8, !dbg !7732
  %conv21 = fptoui double %25 to i64, !dbg !7733
  store i64 %conv21, i64* %quantum, align 8, !dbg !7734
  br label %if.end22, !dbg !7735

if.end22:                                         ; preds = %if.then20, %if.end
  br label %for.inc, !dbg !7736

for.inc:                                          ; preds = %if.end22
  %26 = load i64, i64* %j, align 8, !dbg !7737
  %inc = add nsw i64 %26, 1, !dbg !7737
  store i64 %inc, i64* %j, align 8, !dbg !7737
  br label %for.cond1, !dbg !7738, !llvm.loop !7739

for.end:                                          ; preds = %for.cond1
  br label %for.inc23, !dbg !7741

for.inc23:                                        ; preds = %for.end
  %27 = load i64, i64* %i, align 8, !dbg !7742
  %inc24 = add nsw i64 %27, 1, !dbg !7742
  store i64 %inc24, i64* %i, align 8, !dbg !7742
  br label %for.cond, !dbg !7743, !llvm.loop !7744

for.end25:                                        ; preds = %for.cond
  %28 = load i64, i64* %quantum, align 8, !dbg !7746
  %conv26 = uitofp i64 %28 to double, !dbg !7747
  %29 = load i64, i64* %number_coordinates.addr, align 8, !dbg !7748
  %conv27 = uitofp i64 %29 to double, !dbg !7748
  %div = fdiv double %conv26, %conv27, !dbg !7749
  %call = call double @MagickMin(double %div, double 2.000000e+02), !dbg !7750
  %conv28 = fptoui double %call to i64, !dbg !7751
  store i64 %conv28, i64* %quantum, align 8, !dbg !7752
  %30 = load i64, i64* %quantum, align 8, !dbg !7753
  %31 = load i64, i64* %number_coordinates.addr, align 8, !dbg !7754
  %mul = mul i64 %30, %31, !dbg !7755
  store i64 %mul, i64* %control_points, align 8, !dbg !7756
  %32 = load i64, i64* %number_coordinates.addr, align 8, !dbg !7757
  %call29 = call i8* @AcquireQuantumMemory(i64 %32, i64 8) #14, !dbg !7758
  %33 = bitcast i8* %call29 to double*, !dbg !7759
  store double* %33, double** %coefficients, align 8, !dbg !7760
  %34 = load i64, i64* %control_points, align 8, !dbg !7761
  %call30 = call i8* @AcquireQuantumMemory(i64 %34, i64 16) #14, !dbg !7762
  %35 = bitcast i8* %call30 to %struct._PointInfo*, !dbg !7763
  store %struct._PointInfo* %35, %struct._PointInfo** %points, align 8, !dbg !7764
  %36 = load double*, double** %coefficients, align 8, !dbg !7765
  %cmp31 = icmp eq double* %36, null, !dbg !7767
  br i1 %cmp31, label %if.then35, label %lor.lhs.false, !dbg !7768

lor.lhs.false:                                    ; preds = %for.end25
  %37 = load %struct._PointInfo*, %struct._PointInfo** %points, align 8, !dbg !7769
  %cmp33 = icmp eq %struct._PointInfo* %37, null, !dbg !7770
  br i1 %cmp33, label %if.then35, label %if.end41, !dbg !7771

if.then35:                                        ; preds = %lor.lhs.false, %for.end25
  call void @llvm.dbg.declare(metadata i8** %message, metadata !7772, metadata !DIExpression()), !dbg !7774
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo* %exception, metadata !7775, metadata !DIExpression()), !dbg !7774
  call void @GetExceptionInfo(%struct._ExceptionInfo* %exception), !dbg !7774
  %call36 = call i32* @__errno_location() #12, !dbg !7774
  %38 = load i32, i32* %call36, align 4, !dbg !7774
  %call37 = call i8* @GetExceptionMessage(i32 %38), !dbg !7774
  store i8* %call37, i8** %message, align 8, !dbg !7774
  %39 = load i8*, i8** %message, align 8, !dbg !7774
  %call38 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %exception, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 5146, i32 700, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0), i8* %39), !dbg !7774
  %40 = load i8*, i8** %message, align 8, !dbg !7774
  %call39 = call i8* @DestroyString(i8* %40), !dbg !7774
  store i8* %call39, i8** %message, align 8, !dbg !7774
  call void @CatchException(%struct._ExceptionInfo* %exception), !dbg !7774
  %call40 = call %struct._ExceptionInfo* @DestroyExceptionInfo(%struct._ExceptionInfo* %exception), !dbg !7774
  call void @MagickCoreTerminus(), !dbg !7774
  call void @_exit(i32 1) #13, !dbg !7774
  unreachable, !dbg !7774

if.end41:                                         ; preds = %lor.lhs.false
  %41 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !7776
  %42 = load i64, i64* %number_coordinates.addr, align 8, !dbg !7777
  %sub42 = sub i64 %42, 1, !dbg !7778
  %arrayidx43 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %41, i64 %sub42, !dbg !7776
  %point44 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx43, i32 0, i32 0, !dbg !7779
  %43 = bitcast %struct._PointInfo* %end to i8*, !dbg !7779
  %44 = bitcast %struct._PointInfo* %point44 to i8*, !dbg !7779
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %44, i64 16, i1 false), !dbg !7779
  store i64 0, i64* %i, align 8, !dbg !7780
  br label %for.cond45, !dbg !7782

for.cond45:                                       ; preds = %for.inc52, %if.end41
  %45 = load i64, i64* %i, align 8, !dbg !7783
  %46 = load i64, i64* %number_coordinates.addr, align 8, !dbg !7785
  %cmp46 = icmp slt i64 %45, %46, !dbg !7786
  br i1 %cmp46, label %for.body48, label %for.end54, !dbg !7787

for.body48:                                       ; preds = %for.cond45
  %47 = load i64, i64* %number_coordinates.addr, align 8, !dbg !7788
  %sub49 = sub nsw i64 %47, 1, !dbg !7789
  %48 = load i64, i64* %i, align 8, !dbg !7790
  %call50 = call double @Permutate(i64 %sub49, i64 %48), !dbg !7791
  %49 = load double*, double** %coefficients, align 8, !dbg !7792
  %50 = load i64, i64* %i, align 8, !dbg !7793
  %arrayidx51 = getelementptr inbounds double, double* %49, i64 %50, !dbg !7792
  store double %call50, double* %arrayidx51, align 8, !dbg !7794
  br label %for.inc52, !dbg !7792

for.inc52:                                        ; preds = %for.body48
  %51 = load i64, i64* %i, align 8, !dbg !7795
  %inc53 = add nsw i64 %51, 1, !dbg !7795
  store i64 %inc53, i64* %i, align 8, !dbg !7795
  br label %for.cond45, !dbg !7796, !llvm.loop !7797

for.end54:                                        ; preds = %for.cond45
  store double 0.000000e+00, double* %weight, align 8, !dbg !7799
  store i64 0, i64* %i, align 8, !dbg !7800
  br label %for.cond55, !dbg !7802

for.cond55:                                       ; preds = %for.inc93, %for.end54
  %52 = load i64, i64* %i, align 8, !dbg !7803
  %53 = load i64, i64* %control_points, align 8, !dbg !7805
  %cmp56 = icmp slt i64 %52, %53, !dbg !7806
  br i1 %cmp56, label %for.body58, label %for.end95, !dbg !7807

for.body58:                                       ; preds = %for.cond55
  %54 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !7808
  store %struct._PrimitiveInfo* %54, %struct._PrimitiveInfo** %p, align 8, !dbg !7810
  %x59 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 0, !dbg !7811
  store double 0.000000e+00, double* %x59, align 8, !dbg !7812
  %y60 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 1, !dbg !7813
  store double 0.000000e+00, double* %y60, align 8, !dbg !7814
  %55 = load double, double* %weight, align 8, !dbg !7815
  %sub61 = fsub double 1.000000e+00, %55, !dbg !7816
  %56 = load i64, i64* %number_coordinates.addr, align 8, !dbg !7817
  %conv62 = uitofp i64 %56 to double, !dbg !7818
  %sub63 = fsub double %conv62, 1.000000e+00, !dbg !7819
  %call64 = call double @pow(double %sub61, double %sub63) #17, !dbg !7820
  store double %call64, double* %alpha, align 8, !dbg !7821
  store i64 0, i64* %j, align 8, !dbg !7822
  br label %for.cond65, !dbg !7824

for.cond65:                                       ; preds = %for.inc86, %for.body58
  %57 = load i64, i64* %j, align 8, !dbg !7825
  %58 = load i64, i64* %number_coordinates.addr, align 8, !dbg !7827
  %cmp66 = icmp slt i64 %57, %58, !dbg !7828
  br i1 %cmp66, label %for.body68, label %for.end88, !dbg !7829

for.body68:                                       ; preds = %for.cond65
  %59 = load double, double* %alpha, align 8, !dbg !7830
  %60 = load double*, double** %coefficients, align 8, !dbg !7832
  %61 = load i64, i64* %j, align 8, !dbg !7833
  %arrayidx69 = getelementptr inbounds double, double* %60, i64 %61, !dbg !7832
  %62 = load double, double* %arrayidx69, align 8, !dbg !7832
  %mul70 = fmul double %59, %62, !dbg !7834
  %63 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %p, align 8, !dbg !7835
  %point71 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %63, i32 0, i32 0, !dbg !7836
  %x72 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point71, i32 0, i32 0, !dbg !7837
  %64 = load double, double* %x72, align 8, !dbg !7837
  %mul73 = fmul double %mul70, %64, !dbg !7838
  %x74 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 0, !dbg !7839
  %65 = load double, double* %x74, align 8, !dbg !7840
  %add75 = fadd double %65, %mul73, !dbg !7840
  store double %add75, double* %x74, align 8, !dbg !7840
  %66 = load double, double* %alpha, align 8, !dbg !7841
  %67 = load double*, double** %coefficients, align 8, !dbg !7842
  %68 = load i64, i64* %j, align 8, !dbg !7843
  %arrayidx76 = getelementptr inbounds double, double* %67, i64 %68, !dbg !7842
  %69 = load double, double* %arrayidx76, align 8, !dbg !7842
  %mul77 = fmul double %66, %69, !dbg !7844
  %70 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %p, align 8, !dbg !7845
  %point78 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %70, i32 0, i32 0, !dbg !7846
  %y79 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point78, i32 0, i32 1, !dbg !7847
  %71 = load double, double* %y79, align 8, !dbg !7847
  %mul80 = fmul double %mul77, %71, !dbg !7848
  %y81 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 1, !dbg !7849
  %72 = load double, double* %y81, align 8, !dbg !7850
  %add82 = fadd double %72, %mul80, !dbg !7850
  store double %add82, double* %y81, align 8, !dbg !7850
  %73 = load double, double* %weight, align 8, !dbg !7851
  %74 = load double, double* %weight, align 8, !dbg !7852
  %sub83 = fsub double 1.000000e+00, %74, !dbg !7853
  %div84 = fdiv double %73, %sub83, !dbg !7854
  %75 = load double, double* %alpha, align 8, !dbg !7855
  %mul85 = fmul double %75, %div84, !dbg !7855
  store double %mul85, double* %alpha, align 8, !dbg !7855
  %76 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %p, align 8, !dbg !7856
  %incdec.ptr = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %76, i32 1, !dbg !7856
  store %struct._PrimitiveInfo* %incdec.ptr, %struct._PrimitiveInfo** %p, align 8, !dbg !7856
  br label %for.inc86, !dbg !7857

for.inc86:                                        ; preds = %for.body68
  %77 = load i64, i64* %j, align 8, !dbg !7858
  %inc87 = add nsw i64 %77, 1, !dbg !7858
  store i64 %inc87, i64* %j, align 8, !dbg !7858
  br label %for.cond65, !dbg !7859, !llvm.loop !7860

for.end88:                                        ; preds = %for.cond65
  %78 = load %struct._PointInfo*, %struct._PointInfo** %points, align 8, !dbg !7862
  %79 = load i64, i64* %i, align 8, !dbg !7863
  %arrayidx89 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %78, i64 %79, !dbg !7862
  %80 = bitcast %struct._PointInfo* %arrayidx89 to i8*, !dbg !7864
  %81 = bitcast %struct._PointInfo* %point to i8*, !dbg !7864
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %80, i8* align 8 %81, i64 16, i1 false), !dbg !7864
  %82 = load i64, i64* %control_points, align 8, !dbg !7865
  %conv90 = uitofp i64 %82 to double, !dbg !7865
  %div91 = fdiv double 1.000000e+00, %conv90, !dbg !7866
  %83 = load double, double* %weight, align 8, !dbg !7867
  %add92 = fadd double %83, %div91, !dbg !7867
  store double %add92, double* %weight, align 8, !dbg !7867
  br label %for.inc93, !dbg !7868

for.inc93:                                        ; preds = %for.end88
  %84 = load i64, i64* %i, align 8, !dbg !7869
  %inc94 = add nsw i64 %84, 1, !dbg !7869
  store i64 %inc94, i64* %i, align 8, !dbg !7869
  br label %for.cond55, !dbg !7870, !llvm.loop !7871

for.end95:                                        ; preds = %for.cond55
  %85 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !7873
  store %struct._PrimitiveInfo* %85, %struct._PrimitiveInfo** %p, align 8, !dbg !7874
  store i64 0, i64* %i, align 8, !dbg !7875
  br label %for.cond96, !dbg !7877

for.cond96:                                       ; preds = %for.inc101, %for.end95
  %86 = load i64, i64* %i, align 8, !dbg !7878
  %87 = load i64, i64* %control_points, align 8, !dbg !7880
  %cmp97 = icmp slt i64 %86, %87, !dbg !7881
  br i1 %cmp97, label %for.body99, label %for.end103, !dbg !7882

for.body99:                                       ; preds = %for.cond96
  %88 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %p, align 8, !dbg !7883
  %89 = load %struct._PointInfo*, %struct._PointInfo** %points, align 8, !dbg !7885
  %90 = load i64, i64* %i, align 8, !dbg !7886
  %arrayidx100 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %89, i64 %90, !dbg !7885
  %91 = bitcast %struct._PointInfo* %arrayidx100 to { double, double }*, !dbg !7887
  %92 = getelementptr inbounds { double, double }, { double, double }* %91, i32 0, i32 0, !dbg !7887
  %93 = load double, double* %92, align 8, !dbg !7887
  %94 = getelementptr inbounds { double, double }, { double, double }* %91, i32 0, i32 1, !dbg !7887
  %95 = load double, double* %94, align 8, !dbg !7887
  call void @TracePoint(%struct._PrimitiveInfo* %88, double %93, double %95), !dbg !7887
  %96 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %p, align 8, !dbg !7888
  %coordinates = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %96, i32 0, i32 1, !dbg !7889
  %97 = load i64, i64* %coordinates, align 8, !dbg !7889
  %98 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %p, align 8, !dbg !7890
  %add.ptr = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %98, i64 %97, !dbg !7890
  store %struct._PrimitiveInfo* %add.ptr, %struct._PrimitiveInfo** %p, align 8, !dbg !7890
  br label %for.inc101, !dbg !7891

for.inc101:                                       ; preds = %for.body99
  %99 = load i64, i64* %i, align 8, !dbg !7892
  %inc102 = add nsw i64 %99, 1, !dbg !7892
  store i64 %inc102, i64* %i, align 8, !dbg !7892
  br label %for.cond96, !dbg !7893, !llvm.loop !7894

for.end103:                                       ; preds = %for.cond96
  %100 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %p, align 8, !dbg !7896
  %101 = bitcast %struct._PointInfo* %end to { double, double }*, !dbg !7897
  %102 = getelementptr inbounds { double, double }, { double, double }* %101, i32 0, i32 0, !dbg !7897
  %103 = load double, double* %102, align 8, !dbg !7897
  %104 = getelementptr inbounds { double, double }, { double, double }* %101, i32 0, i32 1, !dbg !7897
  %105 = load double, double* %104, align 8, !dbg !7897
  call void @TracePoint(%struct._PrimitiveInfo* %100, double %103, double %105), !dbg !7897
  %106 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %p, align 8, !dbg !7898
  %coordinates104 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %106, i32 0, i32 1, !dbg !7899
  %107 = load i64, i64* %coordinates104, align 8, !dbg !7899
  %108 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %p, align 8, !dbg !7900
  %add.ptr105 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %108, i64 %107, !dbg !7900
  store %struct._PrimitiveInfo* %add.ptr105, %struct._PrimitiveInfo** %p, align 8, !dbg !7900
  %109 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %p, align 8, !dbg !7901
  %110 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !7902
  %sub.ptr.lhs.cast = ptrtoint %struct._PrimitiveInfo* %109 to i64, !dbg !7903
  %sub.ptr.rhs.cast = ptrtoint %struct._PrimitiveInfo* %110 to i64, !dbg !7903
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !7903
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 40, !dbg !7903
  %111 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !7904
  %coordinates106 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %111, i32 0, i32 1, !dbg !7905
  store i64 %sub.ptr.div, i64* %coordinates106, align 8, !dbg !7906
  store i64 0, i64* %i, align 8, !dbg !7907
  br label %for.cond107, !dbg !7909

for.cond107:                                      ; preds = %for.inc114, %for.end103
  %112 = load i64, i64* %i, align 8, !dbg !7910
  %113 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !7912
  %coordinates108 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %113, i32 0, i32 1, !dbg !7913
  %114 = load i64, i64* %coordinates108, align 8, !dbg !7913
  %cmp109 = icmp slt i64 %112, %114, !dbg !7914
  br i1 %cmp109, label %for.body111, label %for.end116, !dbg !7915

for.body111:                                      ; preds = %for.cond107
  %115 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !7916
  %primitive = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %115, i32 0, i32 2, !dbg !7918
  %116 = load i32, i32* %primitive, align 8, !dbg !7918
  %117 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %p, align 8, !dbg !7919
  %primitive112 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %117, i32 0, i32 2, !dbg !7920
  store i32 %116, i32* %primitive112, align 8, !dbg !7921
  %118 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %p, align 8, !dbg !7922
  %incdec.ptr113 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %118, i32 -1, !dbg !7922
  store %struct._PrimitiveInfo* %incdec.ptr113, %struct._PrimitiveInfo** %p, align 8, !dbg !7922
  br label %for.inc114, !dbg !7923

for.inc114:                                       ; preds = %for.body111
  %119 = load i64, i64* %i, align 8, !dbg !7924
  %inc115 = add nsw i64 %119, 1, !dbg !7924
  store i64 %inc115, i64* %i, align 8, !dbg !7924
  br label %for.cond107, !dbg !7925, !llvm.loop !7926

for.end116:                                       ; preds = %for.cond107
  %120 = load %struct._PointInfo*, %struct._PointInfo** %points, align 8, !dbg !7928
  %121 = bitcast %struct._PointInfo* %120 to i8*, !dbg !7928
  %call117 = call i8* @RelinquishMagickMemory(i8* %121), !dbg !7929
  %122 = bitcast i8* %call117 to %struct._PointInfo*, !dbg !7930
  store %struct._PointInfo* %122, %struct._PointInfo** %points, align 8, !dbg !7931
  %123 = load double*, double** %coefficients, align 8, !dbg !7932
  %124 = bitcast double* %123 to i8*, !dbg !7932
  %call118 = call i8* @RelinquishMagickMemory(i8* %124), !dbg !7933
  %125 = bitcast i8* %call118 to double*, !dbg !7934
  store double* %125, double** %coefficients, align 8, !dbg !7935
  ret void, !dbg !7936
}

; Function Attrs: noinline nounwind uwtable
define internal i64 @TracePath(%struct._PrimitiveInfo* %primitive_info, i8* %path) #0 !dbg !7937 {
entry:
  %primitive_info.addr = alloca %struct._PrimitiveInfo*, align 8
  %path.addr = alloca i8*, align 8
  %token = alloca [4096 x i8], align 16
  %p = alloca i8*, align 8
  %x = alloca double, align 8
  %y = alloca double, align 8
  %attribute = alloca i32, align 4
  %last_attribute = alloca i32, align 4
  %end = alloca %struct._PointInfo, align 8
  %points = alloca [4 x %struct._PointInfo], align 16
  %point = alloca %struct._PointInfo, align 8
  %start = alloca %struct._PointInfo, align 8
  %primitive_type = alloca i32, align 4
  %q = alloca %struct._PrimitiveInfo*, align 8
  %i = alloca i64, align 8
  %number_coordinates = alloca i64, align 8
  %z_count = alloca i64, align 8
  %angle = alloca double, align 8
  %large_arc = alloca i32, align 4
  %sweep = alloca i32, align 4
  %arc = alloca %struct._PointInfo, align 8
  store %struct._PrimitiveInfo* %primitive_info, %struct._PrimitiveInfo** %primitive_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PrimitiveInfo** %primitive_info.addr, metadata !7940, metadata !DIExpression()), !dbg !7941
  store i8* %path, i8** %path.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %path.addr, metadata !7942, metadata !DIExpression()), !dbg !7943
  call void @llvm.dbg.declare(metadata [4096 x i8]* %token, metadata !7944, metadata !DIExpression()), !dbg !7945
  call void @llvm.dbg.declare(metadata i8** %p, metadata !7946, metadata !DIExpression()), !dbg !7947
  call void @llvm.dbg.declare(metadata double* %x, metadata !7948, metadata !DIExpression()), !dbg !7949
  call void @llvm.dbg.declare(metadata double* %y, metadata !7950, metadata !DIExpression()), !dbg !7951
  call void @llvm.dbg.declare(metadata i32* %attribute, metadata !7952, metadata !DIExpression()), !dbg !7953
  call void @llvm.dbg.declare(metadata i32* %last_attribute, metadata !7954, metadata !DIExpression()), !dbg !7955
  call void @llvm.dbg.declare(metadata %struct._PointInfo* %end, metadata !7956, metadata !DIExpression()), !dbg !7957
  call void @llvm.dbg.declare(metadata [4 x %struct._PointInfo]* %points, metadata !7958, metadata !DIExpression()), !dbg !7959
  call void @llvm.dbg.declare(metadata %struct._PointInfo* %point, metadata !7960, metadata !DIExpression()), !dbg !7961
  call void @llvm.dbg.declare(metadata %struct._PointInfo* %start, metadata !7962, metadata !DIExpression()), !dbg !7963
  call void @llvm.dbg.declare(metadata i32* %primitive_type, metadata !7964, metadata !DIExpression()), !dbg !7965
  call void @llvm.dbg.declare(metadata %struct._PrimitiveInfo** %q, metadata !7966, metadata !DIExpression()), !dbg !7967
  call void @llvm.dbg.declare(metadata i64* %i, metadata !7968, metadata !DIExpression()), !dbg !7969
  call void @llvm.dbg.declare(metadata i64* %number_coordinates, metadata !7970, metadata !DIExpression()), !dbg !7971
  call void @llvm.dbg.declare(metadata i64* %z_count, metadata !7972, metadata !DIExpression()), !dbg !7973
  store i32 0, i32* %attribute, align 4, !dbg !7974
  %x1 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %end, i32 0, i32 0, !dbg !7975
  store double 0.000000e+00, double* %x1, align 8, !dbg !7976
  %y2 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %end, i32 0, i32 1, !dbg !7977
  store double 0.000000e+00, double* %y2, align 8, !dbg !7978
  %x3 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 0, !dbg !7979
  store double 0.000000e+00, double* %x3, align 8, !dbg !7980
  %y4 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 1, !dbg !7981
  store double 0.000000e+00, double* %y4, align 8, !dbg !7982
  %x5 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %start, i32 0, i32 0, !dbg !7983
  store double 0.000000e+00, double* %x5, align 8, !dbg !7984
  %y6 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %start, i32 0, i32 1, !dbg !7985
  store double 0.000000e+00, double* %y6, align 8, !dbg !7986
  store i64 0, i64* %number_coordinates, align 8, !dbg !7987
  store i64 0, i64* %z_count, align 8, !dbg !7988
  %arraydecay = getelementptr inbounds [4 x %struct._PointInfo], [4 x %struct._PointInfo]* %points, i64 0, i64 0, !dbg !7989
  %0 = bitcast %struct._PointInfo* %arraydecay to i8*, !dbg !7989
  %call = call i8* @ResetMagickMemory(i8* %0, i32 0, i64 16), !dbg !7990
  %1 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !7991
  %primitive = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %1, i32 0, i32 2, !dbg !7992
  %2 = load i32, i32* %primitive, align 8, !dbg !7992
  store i32 %2, i32* %primitive_type, align 4, !dbg !7993
  %3 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !7994
  store %struct._PrimitiveInfo* %3, %struct._PrimitiveInfo** %q, align 8, !dbg !7995
  %4 = load i8*, i8** %path.addr, align 8, !dbg !7996
  store i8* %4, i8** %p, align 8, !dbg !7998
  br label %for.cond, !dbg !7999

for.cond:                                         ; preds = %sw.epilog, %entry
  %5 = load i8*, i8** %p, align 8, !dbg !8000
  %6 = load i8, i8* %5, align 1, !dbg !8002
  %conv = sext i8 %6 to i32, !dbg !8002
  %cmp = icmp ne i32 %conv, 0, !dbg !8003
  br i1 %cmp, label %for.body, label %for.end646, !dbg !8004

for.body:                                         ; preds = %for.cond
  br label %while.cond, !dbg !8005

while.cond:                                       ; preds = %while.body, %for.body
  %call8 = call i16** @__ctype_b_loc() #12, !dbg !8007
  %7 = load i16*, i16** %call8, align 8, !dbg !8007
  %8 = load i8*, i8** %p, align 8, !dbg !8007
  %9 = load i8, i8* %8, align 1, !dbg !8007
  %conv9 = zext i8 %9 to i32, !dbg !8007
  %idxprom = sext i32 %conv9 to i64, !dbg !8007
  %arrayidx = getelementptr inbounds i16, i16* %7, i64 %idxprom, !dbg !8007
  %10 = load i16, i16* %arrayidx, align 2, !dbg !8007
  %conv10 = zext i16 %10 to i32, !dbg !8007
  %and = and i32 %conv10, 8192, !dbg !8007
  %cmp11 = icmp ne i32 %and, 0, !dbg !8008
  br i1 %cmp11, label %while.body, label %while.end, !dbg !8005

while.body:                                       ; preds = %while.cond
  %11 = load i8*, i8** %p, align 8, !dbg !8009
  %incdec.ptr = getelementptr inbounds i8, i8* %11, i32 1, !dbg !8009
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !8009
  br label %while.cond, !dbg !8005, !llvm.loop !8010

while.end:                                        ; preds = %while.cond
  %12 = load i8*, i8** %p, align 8, !dbg !8011
  %13 = load i8, i8* %12, align 1, !dbg !8013
  %conv13 = sext i8 %13 to i32, !dbg !8013
  %cmp14 = icmp eq i32 %conv13, 0, !dbg !8014
  br i1 %cmp14, label %if.then, label %if.end, !dbg !8015

if.then:                                          ; preds = %while.end
  br label %for.end646, !dbg !8016

if.end:                                           ; preds = %while.end
  %14 = load i32, i32* %attribute, align 4, !dbg !8017
  store i32 %14, i32* %last_attribute, align 4, !dbg !8018
  %15 = load i8*, i8** %p, align 8, !dbg !8019
  %incdec.ptr16 = getelementptr inbounds i8, i8* %15, i32 1, !dbg !8019
  store i8* %incdec.ptr16, i8** %p, align 8, !dbg !8019
  %16 = load i8, i8* %15, align 1, !dbg !8020
  %conv17 = sext i8 %16 to i32, !dbg !8021
  store i32 %conv17, i32* %attribute, align 4, !dbg !8022
  %17 = load i32, i32* %attribute, align 4, !dbg !8023
  switch i32 %17, label %sw.default [
    i32 97, label %sw.bb
    i32 65, label %sw.bb
    i32 99, label %sw.bb130
    i32 67, label %sw.bb130
    i32 72, label %sw.bb193
    i32 104, label %sw.bb193
    i32 108, label %sw.bb221
    i32 76, label %sw.bb221
    i32 77, label %sw.bb268
    i32 109, label %sw.bb268
    i32 113, label %sw.bb335
    i32 81, label %sw.bb335
    i32 115, label %sw.bb407
    i32 83, label %sw.bb407
    i32 116, label %sw.bb503
    i32 84, label %sw.bb503
    i32 118, label %sw.bb595
    i32 86, label %sw.bb595
    i32 122, label %sw.bb623
    i32 90, label %sw.bb623
  ], !dbg !8024

sw.bb:                                            ; preds = %if.end, %if.end
  call void @llvm.dbg.declare(metadata double* %angle, metadata !8025, metadata !DIExpression()), !dbg !8028
  call void @llvm.dbg.declare(metadata i32* %large_arc, metadata !8029, metadata !DIExpression()), !dbg !8030
  call void @llvm.dbg.declare(metadata i32* %sweep, metadata !8031, metadata !DIExpression()), !dbg !8032
  call void @llvm.dbg.declare(metadata %struct._PointInfo* %arc, metadata !8033, metadata !DIExpression()), !dbg !8034
  br label %do.body, !dbg !8035

do.body:                                          ; preds = %do.cond, %sw.bb
  %18 = load i8*, i8** %p, align 8, !dbg !8036
  %arraydecay18 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !8038
  call void @GetMagickToken(i8* %18, i8** %p, i8* %arraydecay18), !dbg !8039
  %arraydecay19 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !8040
  %19 = load i8, i8* %arraydecay19, align 16, !dbg !8040
  %conv20 = sext i8 %19 to i32, !dbg !8040
  %cmp21 = icmp eq i32 %conv20, 44, !dbg !8042
  br i1 %cmp21, label %if.then23, label %if.end25, !dbg !8043

if.then23:                                        ; preds = %do.body
  %20 = load i8*, i8** %p, align 8, !dbg !8044
  %arraydecay24 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !8045
  call void @GetMagickToken(i8* %20, i8** %p, i8* %arraydecay24), !dbg !8046
  br label %if.end25, !dbg !8046

if.end25:                                         ; preds = %if.then23, %do.body
  %arraydecay26 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !8047
  %call27 = call double @StringToDouble(i8* %arraydecay26, i8** null), !dbg !8048
  %x28 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arc, i32 0, i32 0, !dbg !8049
  store double %call27, double* %x28, align 8, !dbg !8050
  %21 = load i8*, i8** %p, align 8, !dbg !8051
  %arraydecay29 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !8052
  call void @GetMagickToken(i8* %21, i8** %p, i8* %arraydecay29), !dbg !8053
  %arraydecay30 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !8054
  %22 = load i8, i8* %arraydecay30, align 16, !dbg !8054
  %conv31 = sext i8 %22 to i32, !dbg !8054
  %cmp32 = icmp eq i32 %conv31, 44, !dbg !8056
  br i1 %cmp32, label %if.then34, label %if.end36, !dbg !8057

if.then34:                                        ; preds = %if.end25
  %23 = load i8*, i8** %p, align 8, !dbg !8058
  %arraydecay35 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !8059
  call void @GetMagickToken(i8* %23, i8** %p, i8* %arraydecay35), !dbg !8060
  br label %if.end36, !dbg !8060

if.end36:                                         ; preds = %if.then34, %if.end25
  %arraydecay37 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !8061
  %call38 = call double @StringToDouble(i8* %arraydecay37, i8** null), !dbg !8062
  %y39 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arc, i32 0, i32 1, !dbg !8063
  store double %call38, double* %y39, align 8, !dbg !8064
  %24 = load i8*, i8** %p, align 8, !dbg !8065
  %arraydecay40 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !8066
  call void @GetMagickToken(i8* %24, i8** %p, i8* %arraydecay40), !dbg !8067
  %arraydecay41 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !8068
  %25 = load i8, i8* %arraydecay41, align 16, !dbg !8068
  %conv42 = sext i8 %25 to i32, !dbg !8068
  %cmp43 = icmp eq i32 %conv42, 44, !dbg !8070
  br i1 %cmp43, label %if.then45, label %if.end47, !dbg !8071

if.then45:                                        ; preds = %if.end36
  %26 = load i8*, i8** %p, align 8, !dbg !8072
  %arraydecay46 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !8073
  call void @GetMagickToken(i8* %26, i8** %p, i8* %arraydecay46), !dbg !8074
  br label %if.end47, !dbg !8074

if.end47:                                         ; preds = %if.then45, %if.end36
  %arraydecay48 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !8075
  %call49 = call double @StringToDouble(i8* %arraydecay48, i8** null), !dbg !8076
  store double %call49, double* %angle, align 8, !dbg !8077
  %27 = load i8*, i8** %p, align 8, !dbg !8078
  %arraydecay50 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !8079
  call void @GetMagickToken(i8* %27, i8** %p, i8* %arraydecay50), !dbg !8080
  %arraydecay51 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !8081
  %28 = load i8, i8* %arraydecay51, align 16, !dbg !8081
  %conv52 = sext i8 %28 to i32, !dbg !8081
  %cmp53 = icmp eq i32 %conv52, 44, !dbg !8083
  br i1 %cmp53, label %if.then55, label %if.end57, !dbg !8084

if.then55:                                        ; preds = %if.end47
  %29 = load i8*, i8** %p, align 8, !dbg !8085
  %arraydecay56 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !8086
  call void @GetMagickToken(i8* %29, i8** %p, i8* %arraydecay56), !dbg !8087
  br label %if.end57, !dbg !8087

if.end57:                                         ; preds = %if.then55, %if.end47
  %arraydecay58 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !8088
  %call59 = call i64 @StringToLong(i8* %arraydecay58), !dbg !8089
  %cmp60 = icmp ne i64 %call59, 0, !dbg !8090
  %30 = zext i1 %cmp60 to i64, !dbg !8089
  %cond = select i1 %cmp60, i32 1, i32 0, !dbg !8089
  store i32 %cond, i32* %large_arc, align 4, !dbg !8091
  %31 = load i8*, i8** %p, align 8, !dbg !8092
  %arraydecay62 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !8093
  call void @GetMagickToken(i8* %31, i8** %p, i8* %arraydecay62), !dbg !8094
  %arraydecay63 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !8095
  %32 = load i8, i8* %arraydecay63, align 16, !dbg !8095
  %conv64 = sext i8 %32 to i32, !dbg !8095
  %cmp65 = icmp eq i32 %conv64, 44, !dbg !8097
  br i1 %cmp65, label %if.then67, label %if.end69, !dbg !8098

if.then67:                                        ; preds = %if.end57
  %33 = load i8*, i8** %p, align 8, !dbg !8099
  %arraydecay68 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !8100
  call void @GetMagickToken(i8* %33, i8** %p, i8* %arraydecay68), !dbg !8101
  br label %if.end69, !dbg !8101

if.end69:                                         ; preds = %if.then67, %if.end57
  %arraydecay70 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !8102
  %call71 = call i64 @StringToLong(i8* %arraydecay70), !dbg !8103
  %cmp72 = icmp ne i64 %call71, 0, !dbg !8104
  %34 = zext i1 %cmp72 to i64, !dbg !8103
  %cond74 = select i1 %cmp72, i32 1, i32 0, !dbg !8103
  store i32 %cond74, i32* %sweep, align 4, !dbg !8105
  %35 = load i8*, i8** %p, align 8, !dbg !8106
  %arraydecay75 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !8107
  call void @GetMagickToken(i8* %35, i8** %p, i8* %arraydecay75), !dbg !8108
  %arraydecay76 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !8109
  %36 = load i8, i8* %arraydecay76, align 16, !dbg !8109
  %conv77 = sext i8 %36 to i32, !dbg !8109
  %cmp78 = icmp eq i32 %conv77, 44, !dbg !8111
  br i1 %cmp78, label %if.then80, label %if.end82, !dbg !8112

if.then80:                                        ; preds = %if.end69
  %37 = load i8*, i8** %p, align 8, !dbg !8113
  %arraydecay81 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !8114
  call void @GetMagickToken(i8* %37, i8** %p, i8* %arraydecay81), !dbg !8115
  br label %if.end82, !dbg !8115

if.end82:                                         ; preds = %if.then80, %if.end69
  %arraydecay83 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !8116
  %call84 = call double @StringToDouble(i8* %arraydecay83, i8** null), !dbg !8117
  store double %call84, double* %x, align 8, !dbg !8118
  %38 = load i8*, i8** %p, align 8, !dbg !8119
  %arraydecay85 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !8120
  call void @GetMagickToken(i8* %38, i8** %p, i8* %arraydecay85), !dbg !8121
  %arraydecay86 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !8122
  %39 = load i8, i8* %arraydecay86, align 16, !dbg !8122
  %conv87 = sext i8 %39 to i32, !dbg !8122
  %cmp88 = icmp eq i32 %conv87, 44, !dbg !8124
  br i1 %cmp88, label %if.then90, label %if.end92, !dbg !8125

if.then90:                                        ; preds = %if.end82
  %40 = load i8*, i8** %p, align 8, !dbg !8126
  %arraydecay91 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !8127
  call void @GetMagickToken(i8* %40, i8** %p, i8* %arraydecay91), !dbg !8128
  br label %if.end92, !dbg !8128

if.end92:                                         ; preds = %if.then90, %if.end82
  %arraydecay93 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !8129
  %call94 = call double @StringToDouble(i8* %arraydecay93, i8** null), !dbg !8130
  store double %call94, double* %y, align 8, !dbg !8131
  %41 = load i32, i32* %attribute, align 4, !dbg !8132
  %cmp95 = icmp eq i32 %41, 65, !dbg !8133
  br i1 %cmp95, label %cond.true, label %cond.false, !dbg !8132

cond.true:                                        ; preds = %if.end92
  %42 = load double, double* %x, align 8, !dbg !8134
  br label %cond.end, !dbg !8132

cond.false:                                       ; preds = %if.end92
  %x97 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 0, !dbg !8135
  %43 = load double, double* %x97, align 8, !dbg !8135
  %44 = load double, double* %x, align 8, !dbg !8136
  %add = fadd double %43, %44, !dbg !8137
  br label %cond.end, !dbg !8132

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond98 = phi double [ %42, %cond.true ], [ %add, %cond.false ], !dbg !8132
  %x99 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %end, i32 0, i32 0, !dbg !8138
  store double %cond98, double* %x99, align 8, !dbg !8139
  %45 = load i32, i32* %attribute, align 4, !dbg !8140
  %cmp100 = icmp eq i32 %45, 65, !dbg !8141
  br i1 %cmp100, label %cond.true102, label %cond.false103, !dbg !8140

cond.true102:                                     ; preds = %cond.end
  %46 = load double, double* %y, align 8, !dbg !8142
  br label %cond.end106, !dbg !8140

cond.false103:                                    ; preds = %cond.end
  %y104 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 1, !dbg !8143
  %47 = load double, double* %y104, align 8, !dbg !8143
  %48 = load double, double* %y, align 8, !dbg !8144
  %add105 = fadd double %47, %48, !dbg !8145
  br label %cond.end106, !dbg !8140

cond.end106:                                      ; preds = %cond.false103, %cond.true102
  %cond107 = phi double [ %46, %cond.true102 ], [ %add105, %cond.false103 ], !dbg !8140
  %y108 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %end, i32 0, i32 1, !dbg !8146
  store double %cond107, double* %y108, align 8, !dbg !8147
  %49 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %q, align 8, !dbg !8148
  %50 = load double, double* %angle, align 8, !dbg !8149
  %51 = load i32, i32* %large_arc, align 4, !dbg !8150
  %52 = load i32, i32* %sweep, align 4, !dbg !8151
  %53 = bitcast %struct._PointInfo* %point to { double, double }*, !dbg !8152
  %54 = getelementptr inbounds { double, double }, { double, double }* %53, i32 0, i32 0, !dbg !8152
  %55 = load double, double* %54, align 8, !dbg !8152
  %56 = getelementptr inbounds { double, double }, { double, double }* %53, i32 0, i32 1, !dbg !8152
  %57 = load double, double* %56, align 8, !dbg !8152
  %58 = bitcast %struct._PointInfo* %end to { double, double }*, !dbg !8152
  %59 = getelementptr inbounds { double, double }, { double, double }* %58, i32 0, i32 0, !dbg !8152
  %60 = load double, double* %59, align 8, !dbg !8152
  %61 = getelementptr inbounds { double, double }, { double, double }* %58, i32 0, i32 1, !dbg !8152
  %62 = load double, double* %61, align 8, !dbg !8152
  %63 = bitcast %struct._PointInfo* %arc to { double, double }*, !dbg !8152
  %64 = getelementptr inbounds { double, double }, { double, double }* %63, i32 0, i32 0, !dbg !8152
  %65 = load double, double* %64, align 8, !dbg !8152
  %66 = getelementptr inbounds { double, double }, { double, double }* %63, i32 0, i32 1, !dbg !8152
  %67 = load double, double* %66, align 8, !dbg !8152
  call void @TraceArcPath(%struct._PrimitiveInfo* %49, double %55, double %57, double %60, double %62, double %65, double %67, double %50, i32 %51, i32 %52), !dbg !8152
  %68 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %q, align 8, !dbg !8153
  %coordinates = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %68, i32 0, i32 1, !dbg !8154
  %69 = load i64, i64* %coordinates, align 8, !dbg !8154
  %70 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %q, align 8, !dbg !8155
  %add.ptr = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %70, i64 %69, !dbg !8155
  store %struct._PrimitiveInfo* %add.ptr, %struct._PrimitiveInfo** %q, align 8, !dbg !8155
  %71 = bitcast %struct._PointInfo* %point to i8*, !dbg !8156
  %72 = bitcast %struct._PointInfo* %end to i8*, !dbg !8156
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %71, i8* align 8 %72, i64 16, i1 false), !dbg !8156
  br label %while.cond109, !dbg !8157

while.cond109:                                    ; preds = %while.body118, %cond.end106
  %call110 = call i16** @__ctype_b_loc() #12, !dbg !8158
  %73 = load i16*, i16** %call110, align 8, !dbg !8158
  %74 = load i8*, i8** %p, align 8, !dbg !8158
  %75 = load i8, i8* %74, align 1, !dbg !8158
  %conv111 = zext i8 %75 to i32, !dbg !8158
  %idxprom112 = sext i32 %conv111 to i64, !dbg !8158
  %arrayidx113 = getelementptr inbounds i16, i16* %73, i64 %idxprom112, !dbg !8158
  %76 = load i16, i16* %arrayidx113, align 2, !dbg !8158
  %conv114 = zext i16 %76 to i32, !dbg !8158
  %and115 = and i32 %conv114, 8192, !dbg !8158
  %cmp116 = icmp ne i32 %and115, 0, !dbg !8159
  br i1 %cmp116, label %while.body118, label %while.end120, !dbg !8157

while.body118:                                    ; preds = %while.cond109
  %77 = load i8*, i8** %p, align 8, !dbg !8160
  %incdec.ptr119 = getelementptr inbounds i8, i8* %77, i32 1, !dbg !8160
  store i8* %incdec.ptr119, i8** %p, align 8, !dbg !8160
  br label %while.cond109, !dbg !8157, !llvm.loop !8161

while.end120:                                     ; preds = %while.cond109
  %78 = load i8*, i8** %p, align 8, !dbg !8162
  %79 = load i8, i8* %78, align 1, !dbg !8164
  %conv121 = sext i8 %79 to i32, !dbg !8164
  %cmp122 = icmp eq i32 %conv121, 44, !dbg !8165
  br i1 %cmp122, label %if.then124, label %if.end126, !dbg !8166

if.then124:                                       ; preds = %while.end120
  %80 = load i8*, i8** %p, align 8, !dbg !8167
  %incdec.ptr125 = getelementptr inbounds i8, i8* %80, i32 1, !dbg !8167
  store i8* %incdec.ptr125, i8** %p, align 8, !dbg !8167
  br label %if.end126, !dbg !8168

if.end126:                                        ; preds = %if.then124, %while.end120
  br label %do.cond, !dbg !8169

do.cond:                                          ; preds = %if.end126
  %81 = load i8*, i8** %p, align 8, !dbg !8170
  %call127 = call i32 @IsPoint(i8* %81), !dbg !8171
  %cmp128 = icmp ne i32 %call127, 0, !dbg !8172
  br i1 %cmp128, label %do.body, label %do.end, !dbg !8169, !llvm.loop !8173

do.end:                                           ; preds = %do.cond
  br label %sw.epilog, !dbg !8175

sw.bb130:                                         ; preds = %if.end, %if.end
  br label %do.body131, !dbg !8176

do.body131:                                       ; preds = %do.cond188, %sw.bb130
  %arrayidx132 = getelementptr inbounds [4 x %struct._PointInfo], [4 x %struct._PointInfo]* %points, i64 0, i64 0, !dbg !8178
  %82 = bitcast %struct._PointInfo* %arrayidx132 to i8*, !dbg !8180
  %83 = bitcast %struct._PointInfo* %point to i8*, !dbg !8180
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %82, i8* align 8 %83, i64 16, i1 false), !dbg !8180
  store i64 1, i64* %i, align 8, !dbg !8181
  br label %for.cond133, !dbg !8183

for.cond133:                                      ; preds = %for.inc, %do.body131
  %84 = load i64, i64* %i, align 8, !dbg !8184
  %cmp134 = icmp slt i64 %84, 4, !dbg !8186
  br i1 %cmp134, label %for.body136, label %for.end, !dbg !8187

for.body136:                                      ; preds = %for.cond133
  %85 = load i8*, i8** %p, align 8, !dbg !8188
  %arraydecay137 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !8190
  call void @GetMagickToken(i8* %85, i8** %p, i8* %arraydecay137), !dbg !8191
  %arraydecay138 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !8192
  %86 = load i8, i8* %arraydecay138, align 16, !dbg !8192
  %conv139 = sext i8 %86 to i32, !dbg !8192
  %cmp140 = icmp eq i32 %conv139, 44, !dbg !8194
  br i1 %cmp140, label %if.then142, label %if.end144, !dbg !8195

if.then142:                                       ; preds = %for.body136
  %87 = load i8*, i8** %p, align 8, !dbg !8196
  %arraydecay143 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !8197
  call void @GetMagickToken(i8* %87, i8** %p, i8* %arraydecay143), !dbg !8198
  br label %if.end144, !dbg !8198

if.end144:                                        ; preds = %if.then142, %for.body136
  %arraydecay145 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !8199
  %call146 = call double @StringToDouble(i8* %arraydecay145, i8** null), !dbg !8200
  store double %call146, double* %x, align 8, !dbg !8201
  %88 = load i8*, i8** %p, align 8, !dbg !8202
  %arraydecay147 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !8203
  call void @GetMagickToken(i8* %88, i8** %p, i8* %arraydecay147), !dbg !8204
  %arraydecay148 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !8205
  %89 = load i8, i8* %arraydecay148, align 16, !dbg !8205
  %conv149 = sext i8 %89 to i32, !dbg !8205
  %cmp150 = icmp eq i32 %conv149, 44, !dbg !8207
  br i1 %cmp150, label %if.then152, label %if.end154, !dbg !8208

if.then152:                                       ; preds = %if.end144
  %90 = load i8*, i8** %p, align 8, !dbg !8209
  %arraydecay153 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !8210
  call void @GetMagickToken(i8* %90, i8** %p, i8* %arraydecay153), !dbg !8211
  br label %if.end154, !dbg !8211

if.end154:                                        ; preds = %if.then152, %if.end144
  %arraydecay155 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !8212
  %call156 = call double @StringToDouble(i8* %arraydecay155, i8** null), !dbg !8213
  store double %call156, double* %y, align 8, !dbg !8214
  %91 = load i32, i32* %attribute, align 4, !dbg !8215
  %cmp157 = icmp eq i32 %91, 67, !dbg !8216
  br i1 %cmp157, label %cond.true159, label %cond.false160, !dbg !8215

cond.true159:                                     ; preds = %if.end154
  %92 = load double, double* %x, align 8, !dbg !8217
  br label %cond.end163, !dbg !8215

cond.false160:                                    ; preds = %if.end154
  %x161 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 0, !dbg !8218
  %93 = load double, double* %x161, align 8, !dbg !8218
  %94 = load double, double* %x, align 8, !dbg !8219
  %add162 = fadd double %93, %94, !dbg !8220
  br label %cond.end163, !dbg !8215

cond.end163:                                      ; preds = %cond.false160, %cond.true159
  %cond164 = phi double [ %92, %cond.true159 ], [ %add162, %cond.false160 ], !dbg !8215
  %x165 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %end, i32 0, i32 0, !dbg !8221
  store double %cond164, double* %x165, align 8, !dbg !8222
  %95 = load i32, i32* %attribute, align 4, !dbg !8223
  %cmp166 = icmp eq i32 %95, 67, !dbg !8224
  br i1 %cmp166, label %cond.true168, label %cond.false169, !dbg !8223

cond.true168:                                     ; preds = %cond.end163
  %96 = load double, double* %y, align 8, !dbg !8225
  br label %cond.end172, !dbg !8223

cond.false169:                                    ; preds = %cond.end163
  %y170 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 1, !dbg !8226
  %97 = load double, double* %y170, align 8, !dbg !8226
  %98 = load double, double* %y, align 8, !dbg !8227
  %add171 = fadd double %97, %98, !dbg !8228
  br label %cond.end172, !dbg !8223

cond.end172:                                      ; preds = %cond.false169, %cond.true168
  %cond173 = phi double [ %96, %cond.true168 ], [ %add171, %cond.false169 ], !dbg !8223
  %y174 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %end, i32 0, i32 1, !dbg !8229
  store double %cond173, double* %y174, align 8, !dbg !8230
  %99 = load i64, i64* %i, align 8, !dbg !8231
  %arrayidx175 = getelementptr inbounds [4 x %struct._PointInfo], [4 x %struct._PointInfo]* %points, i64 0, i64 %99, !dbg !8232
  %100 = bitcast %struct._PointInfo* %arrayidx175 to i8*, !dbg !8233
  %101 = bitcast %struct._PointInfo* %end to i8*, !dbg !8233
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %100, i8* align 8 %101, i64 16, i1 false), !dbg !8233
  br label %for.inc, !dbg !8234

for.inc:                                          ; preds = %cond.end172
  %102 = load i64, i64* %i, align 8, !dbg !8235
  %inc = add nsw i64 %102, 1, !dbg !8235
  store i64 %inc, i64* %i, align 8, !dbg !8235
  br label %for.cond133, !dbg !8236, !llvm.loop !8237

for.end:                                          ; preds = %for.cond133
  store i64 0, i64* %i, align 8, !dbg !8239
  br label %for.cond176, !dbg !8241

for.cond176:                                      ; preds = %for.inc183, %for.end
  %103 = load i64, i64* %i, align 8, !dbg !8242
  %cmp177 = icmp slt i64 %103, 4, !dbg !8244
  br i1 %cmp177, label %for.body179, label %for.end185, !dbg !8245

for.body179:                                      ; preds = %for.cond176
  %104 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %q, align 8, !dbg !8246
  %105 = load i64, i64* %i, align 8, !dbg !8247
  %add.ptr180 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %104, i64 %105, !dbg !8248
  %point181 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %add.ptr180, i32 0, i32 0, !dbg !8249
  %106 = load i64, i64* %i, align 8, !dbg !8250
  %arrayidx182 = getelementptr inbounds [4 x %struct._PointInfo], [4 x %struct._PointInfo]* %points, i64 0, i64 %106, !dbg !8251
  %107 = bitcast %struct._PointInfo* %point181 to i8*, !dbg !8251
  %108 = bitcast %struct._PointInfo* %arrayidx182 to i8*, !dbg !8251
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %107, i8* align 16 %108, i64 16, i1 false), !dbg !8251
  br label %for.inc183, !dbg !8252

for.inc183:                                       ; preds = %for.body179
  %109 = load i64, i64* %i, align 8, !dbg !8253
  %inc184 = add nsw i64 %109, 1, !dbg !8253
  store i64 %inc184, i64* %i, align 8, !dbg !8253
  br label %for.cond176, !dbg !8254, !llvm.loop !8255

for.end185:                                       ; preds = %for.cond176
  %110 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %q, align 8, !dbg !8257
  call void @TraceBezier(%struct._PrimitiveInfo* %110, i64 4), !dbg !8258
  %111 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %q, align 8, !dbg !8259
  %coordinates186 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %111, i32 0, i32 1, !dbg !8260
  %112 = load i64, i64* %coordinates186, align 8, !dbg !8260
  %113 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %q, align 8, !dbg !8261
  %add.ptr187 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %113, i64 %112, !dbg !8261
  store %struct._PrimitiveInfo* %add.ptr187, %struct._PrimitiveInfo** %q, align 8, !dbg !8261
  %114 = bitcast %struct._PointInfo* %point to i8*, !dbg !8262
  %115 = bitcast %struct._PointInfo* %end to i8*, !dbg !8262
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %114, i8* align 8 %115, i64 16, i1 false), !dbg !8262
  br label %do.cond188, !dbg !8263

do.cond188:                                       ; preds = %for.end185
  %116 = load i8*, i8** %p, align 8, !dbg !8264
  %call189 = call i32 @IsPoint(i8* %116), !dbg !8265
  %cmp190 = icmp ne i32 %call189, 0, !dbg !8266
  br i1 %cmp190, label %do.body131, label %do.end192, !dbg !8263, !llvm.loop !8267

do.end192:                                        ; preds = %do.cond188
  br label %sw.epilog, !dbg !8269

sw.bb193:                                         ; preds = %if.end, %if.end
  br label %do.body194, !dbg !8270

do.body194:                                       ; preds = %do.cond216, %sw.bb193
  %117 = load i8*, i8** %p, align 8, !dbg !8272
  %arraydecay195 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !8274
  call void @GetMagickToken(i8* %117, i8** %p, i8* %arraydecay195), !dbg !8275
  %arraydecay196 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !8276
  %118 = load i8, i8* %arraydecay196, align 16, !dbg !8276
  %conv197 = sext i8 %118 to i32, !dbg !8276
  %cmp198 = icmp eq i32 %conv197, 44, !dbg !8278
  br i1 %cmp198, label %if.then200, label %if.end202, !dbg !8279

if.then200:                                       ; preds = %do.body194
  %119 = load i8*, i8** %p, align 8, !dbg !8280
  %arraydecay201 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !8281
  call void @GetMagickToken(i8* %119, i8** %p, i8* %arraydecay201), !dbg !8282
  br label %if.end202, !dbg !8282

if.end202:                                        ; preds = %if.then200, %do.body194
  %arraydecay203 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !8283
  %call204 = call double @StringToDouble(i8* %arraydecay203, i8** null), !dbg !8284
  store double %call204, double* %x, align 8, !dbg !8285
  %120 = load i32, i32* %attribute, align 4, !dbg !8286
  %cmp205 = icmp eq i32 %120, 72, !dbg !8287
  br i1 %cmp205, label %cond.true207, label %cond.false208, !dbg !8286

cond.true207:                                     ; preds = %if.end202
  %121 = load double, double* %x, align 8, !dbg !8288
  br label %cond.end211, !dbg !8286

cond.false208:                                    ; preds = %if.end202
  %x209 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 0, !dbg !8289
  %122 = load double, double* %x209, align 8, !dbg !8289
  %123 = load double, double* %x, align 8, !dbg !8290
  %add210 = fadd double %122, %123, !dbg !8291
  br label %cond.end211, !dbg !8286

cond.end211:                                      ; preds = %cond.false208, %cond.true207
  %cond212 = phi double [ %121, %cond.true207 ], [ %add210, %cond.false208 ], !dbg !8286
  %x213 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 0, !dbg !8292
  store double %cond212, double* %x213, align 8, !dbg !8293
  %124 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %q, align 8, !dbg !8294
  %125 = bitcast %struct._PointInfo* %point to { double, double }*, !dbg !8295
  %126 = getelementptr inbounds { double, double }, { double, double }* %125, i32 0, i32 0, !dbg !8295
  %127 = load double, double* %126, align 8, !dbg !8295
  %128 = getelementptr inbounds { double, double }, { double, double }* %125, i32 0, i32 1, !dbg !8295
  %129 = load double, double* %128, align 8, !dbg !8295
  call void @TracePoint(%struct._PrimitiveInfo* %124, double %127, double %129), !dbg !8295
  %130 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %q, align 8, !dbg !8296
  %coordinates214 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %130, i32 0, i32 1, !dbg !8297
  %131 = load i64, i64* %coordinates214, align 8, !dbg !8297
  %132 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %q, align 8, !dbg !8298
  %add.ptr215 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %132, i64 %131, !dbg !8298
  store %struct._PrimitiveInfo* %add.ptr215, %struct._PrimitiveInfo** %q, align 8, !dbg !8298
  br label %do.cond216, !dbg !8299

do.cond216:                                       ; preds = %cond.end211
  %133 = load i8*, i8** %p, align 8, !dbg !8300
  %call217 = call i32 @IsPoint(i8* %133), !dbg !8301
  %cmp218 = icmp ne i32 %call217, 0, !dbg !8302
  br i1 %cmp218, label %do.body194, label %do.end220, !dbg !8299, !llvm.loop !8303

do.end220:                                        ; preds = %do.cond216
  br label %sw.epilog, !dbg !8305

sw.bb221:                                         ; preds = %if.end, %if.end
  br label %do.body222, !dbg !8306

do.body222:                                       ; preds = %do.cond263, %sw.bb221
  %134 = load i8*, i8** %p, align 8, !dbg !8308
  %arraydecay223 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !8310
  call void @GetMagickToken(i8* %134, i8** %p, i8* %arraydecay223), !dbg !8311
  %arraydecay224 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !8312
  %135 = load i8, i8* %arraydecay224, align 16, !dbg !8312
  %conv225 = sext i8 %135 to i32, !dbg !8312
  %cmp226 = icmp eq i32 %conv225, 44, !dbg !8314
  br i1 %cmp226, label %if.then228, label %if.end230, !dbg !8315

if.then228:                                       ; preds = %do.body222
  %136 = load i8*, i8** %p, align 8, !dbg !8316
  %arraydecay229 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !8317
  call void @GetMagickToken(i8* %136, i8** %p, i8* %arraydecay229), !dbg !8318
  br label %if.end230, !dbg !8318

if.end230:                                        ; preds = %if.then228, %do.body222
  %arraydecay231 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !8319
  %call232 = call double @StringToDouble(i8* %arraydecay231, i8** null), !dbg !8320
  store double %call232, double* %x, align 8, !dbg !8321
  %137 = load i8*, i8** %p, align 8, !dbg !8322
  %arraydecay233 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !8323
  call void @GetMagickToken(i8* %137, i8** %p, i8* %arraydecay233), !dbg !8324
  %arraydecay234 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !8325
  %138 = load i8, i8* %arraydecay234, align 16, !dbg !8325
  %conv235 = sext i8 %138 to i32, !dbg !8325
  %cmp236 = icmp eq i32 %conv235, 44, !dbg !8327
  br i1 %cmp236, label %if.then238, label %if.end240, !dbg !8328

if.then238:                                       ; preds = %if.end230
  %139 = load i8*, i8** %p, align 8, !dbg !8329
  %arraydecay239 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !8330
  call void @GetMagickToken(i8* %139, i8** %p, i8* %arraydecay239), !dbg !8331
  br label %if.end240, !dbg !8331

if.end240:                                        ; preds = %if.then238, %if.end230
  %arraydecay241 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !8332
  %call242 = call double @StringToDouble(i8* %arraydecay241, i8** null), !dbg !8333
  store double %call242, double* %y, align 8, !dbg !8334
  %140 = load i32, i32* %attribute, align 4, !dbg !8335
  %cmp243 = icmp eq i32 %140, 76, !dbg !8336
  br i1 %cmp243, label %cond.true245, label %cond.false246, !dbg !8335

cond.true245:                                     ; preds = %if.end240
  %141 = load double, double* %x, align 8, !dbg !8337
  br label %cond.end249, !dbg !8335

cond.false246:                                    ; preds = %if.end240
  %x247 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 0, !dbg !8338
  %142 = load double, double* %x247, align 8, !dbg !8338
  %143 = load double, double* %x, align 8, !dbg !8339
  %add248 = fadd double %142, %143, !dbg !8340
  br label %cond.end249, !dbg !8335

cond.end249:                                      ; preds = %cond.false246, %cond.true245
  %cond250 = phi double [ %141, %cond.true245 ], [ %add248, %cond.false246 ], !dbg !8335
  %x251 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 0, !dbg !8341
  store double %cond250, double* %x251, align 8, !dbg !8342
  %144 = load i32, i32* %attribute, align 4, !dbg !8343
  %cmp252 = icmp eq i32 %144, 76, !dbg !8344
  br i1 %cmp252, label %cond.true254, label %cond.false255, !dbg !8343

cond.true254:                                     ; preds = %cond.end249
  %145 = load double, double* %y, align 8, !dbg !8345
  br label %cond.end258, !dbg !8343

cond.false255:                                    ; preds = %cond.end249
  %y256 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 1, !dbg !8346
  %146 = load double, double* %y256, align 8, !dbg !8346
  %147 = load double, double* %y, align 8, !dbg !8347
  %add257 = fadd double %146, %147, !dbg !8348
  br label %cond.end258, !dbg !8343

cond.end258:                                      ; preds = %cond.false255, %cond.true254
  %cond259 = phi double [ %145, %cond.true254 ], [ %add257, %cond.false255 ], !dbg !8343
  %y260 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 1, !dbg !8349
  store double %cond259, double* %y260, align 8, !dbg !8350
  %148 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %q, align 8, !dbg !8351
  %149 = bitcast %struct._PointInfo* %point to { double, double }*, !dbg !8352
  %150 = getelementptr inbounds { double, double }, { double, double }* %149, i32 0, i32 0, !dbg !8352
  %151 = load double, double* %150, align 8, !dbg !8352
  %152 = getelementptr inbounds { double, double }, { double, double }* %149, i32 0, i32 1, !dbg !8352
  %153 = load double, double* %152, align 8, !dbg !8352
  call void @TracePoint(%struct._PrimitiveInfo* %148, double %151, double %153), !dbg !8352
  %154 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %q, align 8, !dbg !8353
  %coordinates261 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %154, i32 0, i32 1, !dbg !8354
  %155 = load i64, i64* %coordinates261, align 8, !dbg !8354
  %156 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %q, align 8, !dbg !8355
  %add.ptr262 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %156, i64 %155, !dbg !8355
  store %struct._PrimitiveInfo* %add.ptr262, %struct._PrimitiveInfo** %q, align 8, !dbg !8355
  br label %do.cond263, !dbg !8356

do.cond263:                                       ; preds = %cond.end258
  %157 = load i8*, i8** %p, align 8, !dbg !8357
  %call264 = call i32 @IsPoint(i8* %157), !dbg !8358
  %cmp265 = icmp ne i32 %call264, 0, !dbg !8359
  br i1 %cmp265, label %do.body222, label %do.end267, !dbg !8356, !llvm.loop !8360

do.end267:                                        ; preds = %do.cond263
  br label %sw.epilog, !dbg !8362

sw.bb268:                                         ; preds = %if.end, %if.end
  %158 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %q, align 8, !dbg !8363
  %159 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !8366
  %cmp269 = icmp ne %struct._PrimitiveInfo* %158, %159, !dbg !8367
  br i1 %cmp269, label %if.then271, label %if.end275, !dbg !8368

if.then271:                                       ; preds = %sw.bb268
  %160 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %q, align 8, !dbg !8369
  %161 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !8371
  %sub.ptr.lhs.cast = ptrtoint %struct._PrimitiveInfo* %160 to i64, !dbg !8372
  %sub.ptr.rhs.cast = ptrtoint %struct._PrimitiveInfo* %161 to i64, !dbg !8372
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !8372
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 40, !dbg !8372
  %162 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !8373
  %coordinates272 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %162, i32 0, i32 1, !dbg !8374
  store i64 %sub.ptr.div, i64* %coordinates272, align 8, !dbg !8375
  %163 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !8376
  %coordinates273 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %163, i32 0, i32 1, !dbg !8377
  %164 = load i64, i64* %coordinates273, align 8, !dbg !8377
  %165 = load i64, i64* %number_coordinates, align 8, !dbg !8378
  %add274 = add i64 %165, %164, !dbg !8378
  store i64 %add274, i64* %number_coordinates, align 8, !dbg !8378
  %166 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %q, align 8, !dbg !8379
  store %struct._PrimitiveInfo* %166, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !8380
  br label %if.end275, !dbg !8381

if.end275:                                        ; preds = %if.then271, %sw.bb268
  store i64 0, i64* %i, align 8, !dbg !8382
  br label %do.body276, !dbg !8383

do.body276:                                       ; preds = %do.cond330, %if.end275
  %167 = load i8*, i8** %p, align 8, !dbg !8384
  %arraydecay277 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !8386
  call void @GetMagickToken(i8* %167, i8** %p, i8* %arraydecay277), !dbg !8387
  %arraydecay278 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !8388
  %168 = load i8, i8* %arraydecay278, align 16, !dbg !8388
  %conv279 = sext i8 %168 to i32, !dbg !8388
  %cmp280 = icmp eq i32 %conv279, 44, !dbg !8390
  br i1 %cmp280, label %if.then282, label %if.end284, !dbg !8391

if.then282:                                       ; preds = %do.body276
  %169 = load i8*, i8** %p, align 8, !dbg !8392
  %arraydecay283 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !8393
  call void @GetMagickToken(i8* %169, i8** %p, i8* %arraydecay283), !dbg !8394
  br label %if.end284, !dbg !8394

if.end284:                                        ; preds = %if.then282, %do.body276
  %arraydecay285 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !8395
  %call286 = call double @StringToDouble(i8* %arraydecay285, i8** null), !dbg !8396
  store double %call286, double* %x, align 8, !dbg !8397
  %170 = load i8*, i8** %p, align 8, !dbg !8398
  %arraydecay287 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !8399
  call void @GetMagickToken(i8* %170, i8** %p, i8* %arraydecay287), !dbg !8400
  %arraydecay288 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !8401
  %171 = load i8, i8* %arraydecay288, align 16, !dbg !8401
  %conv289 = sext i8 %171 to i32, !dbg !8401
  %cmp290 = icmp eq i32 %conv289, 44, !dbg !8403
  br i1 %cmp290, label %if.then292, label %if.end294, !dbg !8404

if.then292:                                       ; preds = %if.end284
  %172 = load i8*, i8** %p, align 8, !dbg !8405
  %arraydecay293 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !8406
  call void @GetMagickToken(i8* %172, i8** %p, i8* %arraydecay293), !dbg !8407
  br label %if.end294, !dbg !8407

if.end294:                                        ; preds = %if.then292, %if.end284
  %arraydecay295 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !8408
  %call296 = call double @StringToDouble(i8* %arraydecay295, i8** null), !dbg !8409
  store double %call296, double* %y, align 8, !dbg !8410
  %173 = load i32, i32* %attribute, align 4, !dbg !8411
  %cmp297 = icmp eq i32 %173, 77, !dbg !8412
  br i1 %cmp297, label %cond.true299, label %cond.false300, !dbg !8411

cond.true299:                                     ; preds = %if.end294
  %174 = load double, double* %x, align 8, !dbg !8413
  br label %cond.end303, !dbg !8411

cond.false300:                                    ; preds = %if.end294
  %x301 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 0, !dbg !8414
  %175 = load double, double* %x301, align 8, !dbg !8414
  %176 = load double, double* %x, align 8, !dbg !8415
  %add302 = fadd double %175, %176, !dbg !8416
  br label %cond.end303, !dbg !8411

cond.end303:                                      ; preds = %cond.false300, %cond.true299
  %cond304 = phi double [ %174, %cond.true299 ], [ %add302, %cond.false300 ], !dbg !8411
  %x305 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 0, !dbg !8417
  store double %cond304, double* %x305, align 8, !dbg !8418
  %177 = load i32, i32* %attribute, align 4, !dbg !8419
  %cmp306 = icmp eq i32 %177, 77, !dbg !8420
  br i1 %cmp306, label %cond.true308, label %cond.false309, !dbg !8419

cond.true308:                                     ; preds = %cond.end303
  %178 = load double, double* %y, align 8, !dbg !8421
  br label %cond.end312, !dbg !8419

cond.false309:                                    ; preds = %cond.end303
  %y310 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 1, !dbg !8422
  %179 = load double, double* %y310, align 8, !dbg !8422
  %180 = load double, double* %y, align 8, !dbg !8423
  %add311 = fadd double %179, %180, !dbg !8424
  br label %cond.end312, !dbg !8419

cond.end312:                                      ; preds = %cond.false309, %cond.true308
  %cond313 = phi double [ %178, %cond.true308 ], [ %add311, %cond.false309 ], !dbg !8419
  %y314 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 1, !dbg !8425
  store double %cond313, double* %y314, align 8, !dbg !8426
  %181 = load i64, i64* %i, align 8, !dbg !8427
  %cmp315 = icmp eq i64 %181, 0, !dbg !8429
  br i1 %cmp315, label %if.then317, label %if.end318, !dbg !8430

if.then317:                                       ; preds = %cond.end312
  %182 = bitcast %struct._PointInfo* %start to i8*, !dbg !8431
  %183 = bitcast %struct._PointInfo* %point to i8*, !dbg !8431
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %182, i8* align 8 %183, i64 16, i1 false), !dbg !8431
  br label %if.end318, !dbg !8432

if.end318:                                        ; preds = %if.then317, %cond.end312
  %184 = load i64, i64* %i, align 8, !dbg !8433
  %inc319 = add nsw i64 %184, 1, !dbg !8433
  store i64 %inc319, i64* %i, align 8, !dbg !8433
  %185 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %q, align 8, !dbg !8434
  %186 = bitcast %struct._PointInfo* %point to { double, double }*, !dbg !8435
  %187 = getelementptr inbounds { double, double }, { double, double }* %186, i32 0, i32 0, !dbg !8435
  %188 = load double, double* %187, align 8, !dbg !8435
  %189 = getelementptr inbounds { double, double }, { double, double }* %186, i32 0, i32 1, !dbg !8435
  %190 = load double, double* %189, align 8, !dbg !8435
  call void @TracePoint(%struct._PrimitiveInfo* %185, double %188, double %190), !dbg !8435
  %191 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %q, align 8, !dbg !8436
  %coordinates320 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %191, i32 0, i32 1, !dbg !8437
  %192 = load i64, i64* %coordinates320, align 8, !dbg !8437
  %193 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %q, align 8, !dbg !8438
  %add.ptr321 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %193, i64 %192, !dbg !8438
  store %struct._PrimitiveInfo* %add.ptr321, %struct._PrimitiveInfo** %q, align 8, !dbg !8438
  %194 = load i64, i64* %i, align 8, !dbg !8439
  %cmp322 = icmp ne i64 %194, 0, !dbg !8441
  br i1 %cmp322, label %land.lhs.true, label %if.end329, !dbg !8442

land.lhs.true:                                    ; preds = %if.end318
  %195 = load i32, i32* %attribute, align 4, !dbg !8443
  %cmp324 = icmp eq i32 %195, 77, !dbg !8444
  br i1 %cmp324, label %if.then326, label %if.end329, !dbg !8445

if.then326:                                       ; preds = %land.lhs.true
  %196 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %q, align 8, !dbg !8446
  %197 = bitcast %struct._PointInfo* %point to { double, double }*, !dbg !8448
  %198 = getelementptr inbounds { double, double }, { double, double }* %197, i32 0, i32 0, !dbg !8448
  %199 = load double, double* %198, align 8, !dbg !8448
  %200 = getelementptr inbounds { double, double }, { double, double }* %197, i32 0, i32 1, !dbg !8448
  %201 = load double, double* %200, align 8, !dbg !8448
  call void @TracePoint(%struct._PrimitiveInfo* %196, double %199, double %201), !dbg !8448
  %202 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %q, align 8, !dbg !8449
  %coordinates327 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %202, i32 0, i32 1, !dbg !8450
  %203 = load i64, i64* %coordinates327, align 8, !dbg !8450
  %204 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %q, align 8, !dbg !8451
  %add.ptr328 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %204, i64 %203, !dbg !8451
  store %struct._PrimitiveInfo* %add.ptr328, %struct._PrimitiveInfo** %q, align 8, !dbg !8451
  br label %if.end329, !dbg !8452

if.end329:                                        ; preds = %if.then326, %land.lhs.true, %if.end318
  br label %do.cond330, !dbg !8453

do.cond330:                                       ; preds = %if.end329
  %205 = load i8*, i8** %p, align 8, !dbg !8454
  %call331 = call i32 @IsPoint(i8* %205), !dbg !8455
  %cmp332 = icmp ne i32 %call331, 0, !dbg !8456
  br i1 %cmp332, label %do.body276, label %do.end334, !dbg !8453, !llvm.loop !8457

do.end334:                                        ; preds = %do.cond330
  br label %sw.epilog, !dbg !8459

sw.bb335:                                         ; preds = %if.end, %if.end
  br label %do.body336, !dbg !8460

do.body336:                                       ; preds = %do.cond402, %sw.bb335
  %arrayidx337 = getelementptr inbounds [4 x %struct._PointInfo], [4 x %struct._PointInfo]* %points, i64 0, i64 0, !dbg !8462
  %206 = bitcast %struct._PointInfo* %arrayidx337 to i8*, !dbg !8464
  %207 = bitcast %struct._PointInfo* %point to i8*, !dbg !8464
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %206, i8* align 8 %207, i64 16, i1 false), !dbg !8464
  store i64 1, i64* %i, align 8, !dbg !8465
  br label %for.cond338, !dbg !8467

for.cond338:                                      ; preds = %for.inc387, %do.body336
  %208 = load i64, i64* %i, align 8, !dbg !8468
  %cmp339 = icmp slt i64 %208, 3, !dbg !8470
  br i1 %cmp339, label %for.body341, label %for.end389, !dbg !8471

for.body341:                                      ; preds = %for.cond338
  %209 = load i8*, i8** %p, align 8, !dbg !8472
  %arraydecay342 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !8474
  call void @GetMagickToken(i8* %209, i8** %p, i8* %arraydecay342), !dbg !8475
  %arraydecay343 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !8476
  %210 = load i8, i8* %arraydecay343, align 16, !dbg !8476
  %conv344 = sext i8 %210 to i32, !dbg !8476
  %cmp345 = icmp eq i32 %conv344, 44, !dbg !8478
  br i1 %cmp345, label %if.then347, label %if.end349, !dbg !8479

if.then347:                                       ; preds = %for.body341
  %211 = load i8*, i8** %p, align 8, !dbg !8480
  %arraydecay348 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !8481
  call void @GetMagickToken(i8* %211, i8** %p, i8* %arraydecay348), !dbg !8482
  br label %if.end349, !dbg !8482

if.end349:                                        ; preds = %if.then347, %for.body341
  %arraydecay350 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !8483
  %call351 = call double @StringToDouble(i8* %arraydecay350, i8** null), !dbg !8484
  store double %call351, double* %x, align 8, !dbg !8485
  %212 = load i8*, i8** %p, align 8, !dbg !8486
  %arraydecay352 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !8487
  call void @GetMagickToken(i8* %212, i8** %p, i8* %arraydecay352), !dbg !8488
  %arraydecay353 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !8489
  %213 = load i8, i8* %arraydecay353, align 16, !dbg !8489
  %conv354 = sext i8 %213 to i32, !dbg !8489
  %cmp355 = icmp eq i32 %conv354, 44, !dbg !8491
  br i1 %cmp355, label %if.then357, label %if.end359, !dbg !8492

if.then357:                                       ; preds = %if.end349
  %214 = load i8*, i8** %p, align 8, !dbg !8493
  %arraydecay358 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !8494
  call void @GetMagickToken(i8* %214, i8** %p, i8* %arraydecay358), !dbg !8495
  br label %if.end359, !dbg !8495

if.end359:                                        ; preds = %if.then357, %if.end349
  %arraydecay360 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !8496
  %call361 = call double @StringToDouble(i8* %arraydecay360, i8** null), !dbg !8497
  store double %call361, double* %y, align 8, !dbg !8498
  %215 = load i8*, i8** %p, align 8, !dbg !8499
  %216 = load i8, i8* %215, align 1, !dbg !8501
  %conv362 = sext i8 %216 to i32, !dbg !8501
  %cmp363 = icmp eq i32 %conv362, 44, !dbg !8502
  br i1 %cmp363, label %if.then365, label %if.end367, !dbg !8503

if.then365:                                       ; preds = %if.end359
  %217 = load i8*, i8** %p, align 8, !dbg !8504
  %incdec.ptr366 = getelementptr inbounds i8, i8* %217, i32 1, !dbg !8504
  store i8* %incdec.ptr366, i8** %p, align 8, !dbg !8504
  br label %if.end367, !dbg !8505

if.end367:                                        ; preds = %if.then365, %if.end359
  %218 = load i32, i32* %attribute, align 4, !dbg !8506
  %cmp368 = icmp eq i32 %218, 81, !dbg !8507
  br i1 %cmp368, label %cond.true370, label %cond.false371, !dbg !8506

cond.true370:                                     ; preds = %if.end367
  %219 = load double, double* %x, align 8, !dbg !8508
  br label %cond.end374, !dbg !8506

cond.false371:                                    ; preds = %if.end367
  %x372 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 0, !dbg !8509
  %220 = load double, double* %x372, align 8, !dbg !8509
  %221 = load double, double* %x, align 8, !dbg !8510
  %add373 = fadd double %220, %221, !dbg !8511
  br label %cond.end374, !dbg !8506

cond.end374:                                      ; preds = %cond.false371, %cond.true370
  %cond375 = phi double [ %219, %cond.true370 ], [ %add373, %cond.false371 ], !dbg !8506
  %x376 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %end, i32 0, i32 0, !dbg !8512
  store double %cond375, double* %x376, align 8, !dbg !8513
  %222 = load i32, i32* %attribute, align 4, !dbg !8514
  %cmp377 = icmp eq i32 %222, 81, !dbg !8515
  br i1 %cmp377, label %cond.true379, label %cond.false380, !dbg !8514

cond.true379:                                     ; preds = %cond.end374
  %223 = load double, double* %y, align 8, !dbg !8516
  br label %cond.end383, !dbg !8514

cond.false380:                                    ; preds = %cond.end374
  %y381 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 1, !dbg !8517
  %224 = load double, double* %y381, align 8, !dbg !8517
  %225 = load double, double* %y, align 8, !dbg !8518
  %add382 = fadd double %224, %225, !dbg !8519
  br label %cond.end383, !dbg !8514

cond.end383:                                      ; preds = %cond.false380, %cond.true379
  %cond384 = phi double [ %223, %cond.true379 ], [ %add382, %cond.false380 ], !dbg !8514
  %y385 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %end, i32 0, i32 1, !dbg !8520
  store double %cond384, double* %y385, align 8, !dbg !8521
  %226 = load i64, i64* %i, align 8, !dbg !8522
  %arrayidx386 = getelementptr inbounds [4 x %struct._PointInfo], [4 x %struct._PointInfo]* %points, i64 0, i64 %226, !dbg !8523
  %227 = bitcast %struct._PointInfo* %arrayidx386 to i8*, !dbg !8524
  %228 = bitcast %struct._PointInfo* %end to i8*, !dbg !8524
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %227, i8* align 8 %228, i64 16, i1 false), !dbg !8524
  br label %for.inc387, !dbg !8525

for.inc387:                                       ; preds = %cond.end383
  %229 = load i64, i64* %i, align 8, !dbg !8526
  %inc388 = add nsw i64 %229, 1, !dbg !8526
  store i64 %inc388, i64* %i, align 8, !dbg !8526
  br label %for.cond338, !dbg !8527, !llvm.loop !8528

for.end389:                                       ; preds = %for.cond338
  store i64 0, i64* %i, align 8, !dbg !8530
  br label %for.cond390, !dbg !8532

for.cond390:                                      ; preds = %for.inc397, %for.end389
  %230 = load i64, i64* %i, align 8, !dbg !8533
  %cmp391 = icmp slt i64 %230, 3, !dbg !8535
  br i1 %cmp391, label %for.body393, label %for.end399, !dbg !8536

for.body393:                                      ; preds = %for.cond390
  %231 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %q, align 8, !dbg !8537
  %232 = load i64, i64* %i, align 8, !dbg !8538
  %add.ptr394 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %231, i64 %232, !dbg !8539
  %point395 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %add.ptr394, i32 0, i32 0, !dbg !8540
  %233 = load i64, i64* %i, align 8, !dbg !8541
  %arrayidx396 = getelementptr inbounds [4 x %struct._PointInfo], [4 x %struct._PointInfo]* %points, i64 0, i64 %233, !dbg !8542
  %234 = bitcast %struct._PointInfo* %point395 to i8*, !dbg !8542
  %235 = bitcast %struct._PointInfo* %arrayidx396 to i8*, !dbg !8542
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %234, i8* align 16 %235, i64 16, i1 false), !dbg !8542
  br label %for.inc397, !dbg !8543

for.inc397:                                       ; preds = %for.body393
  %236 = load i64, i64* %i, align 8, !dbg !8544
  %inc398 = add nsw i64 %236, 1, !dbg !8544
  store i64 %inc398, i64* %i, align 8, !dbg !8544
  br label %for.cond390, !dbg !8545, !llvm.loop !8546

for.end399:                                       ; preds = %for.cond390
  %237 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %q, align 8, !dbg !8548
  call void @TraceBezier(%struct._PrimitiveInfo* %237, i64 3), !dbg !8549
  %238 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %q, align 8, !dbg !8550
  %coordinates400 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %238, i32 0, i32 1, !dbg !8551
  %239 = load i64, i64* %coordinates400, align 8, !dbg !8551
  %240 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %q, align 8, !dbg !8552
  %add.ptr401 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %240, i64 %239, !dbg !8552
  store %struct._PrimitiveInfo* %add.ptr401, %struct._PrimitiveInfo** %q, align 8, !dbg !8552
  %241 = bitcast %struct._PointInfo* %point to i8*, !dbg !8553
  %242 = bitcast %struct._PointInfo* %end to i8*, !dbg !8553
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %241, i8* align 8 %242, i64 16, i1 false), !dbg !8553
  br label %do.cond402, !dbg !8554

do.cond402:                                       ; preds = %for.end399
  %243 = load i8*, i8** %p, align 8, !dbg !8555
  %call403 = call i32 @IsPoint(i8* %243), !dbg !8556
  %cmp404 = icmp ne i32 %call403, 0, !dbg !8557
  br i1 %cmp404, label %do.body336, label %do.end406, !dbg !8554, !llvm.loop !8558

do.end406:                                        ; preds = %do.cond402
  br label %sw.epilog, !dbg !8560

sw.bb407:                                         ; preds = %if.end, %if.end
  br label %do.body408, !dbg !8561

do.body408:                                       ; preds = %do.cond498, %sw.bb407
  %arrayidx409 = getelementptr inbounds [4 x %struct._PointInfo], [4 x %struct._PointInfo]* %points, i64 0, i64 0, !dbg !8563
  %arrayidx410 = getelementptr inbounds [4 x %struct._PointInfo], [4 x %struct._PointInfo]* %points, i64 0, i64 3, !dbg !8565
  %244 = bitcast %struct._PointInfo* %arrayidx409 to i8*, !dbg !8565
  %245 = bitcast %struct._PointInfo* %arrayidx410 to i8*, !dbg !8565
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %244, i8* align 16 %245, i64 16, i1 false), !dbg !8565
  %arrayidx411 = getelementptr inbounds [4 x %struct._PointInfo], [4 x %struct._PointInfo]* %points, i64 0, i64 3, !dbg !8566
  %x412 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx411, i32 0, i32 0, !dbg !8567
  %246 = load double, double* %x412, align 16, !dbg !8567
  %mul = fmul double 2.000000e+00, %246, !dbg !8568
  %arrayidx413 = getelementptr inbounds [4 x %struct._PointInfo], [4 x %struct._PointInfo]* %points, i64 0, i64 2, !dbg !8569
  %x414 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx413, i32 0, i32 0, !dbg !8570
  %247 = load double, double* %x414, align 16, !dbg !8570
  %sub = fsub double %mul, %247, !dbg !8571
  %arrayidx415 = getelementptr inbounds [4 x %struct._PointInfo], [4 x %struct._PointInfo]* %points, i64 0, i64 1, !dbg !8572
  %x416 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx415, i32 0, i32 0, !dbg !8573
  store double %sub, double* %x416, align 16, !dbg !8574
  %arrayidx417 = getelementptr inbounds [4 x %struct._PointInfo], [4 x %struct._PointInfo]* %points, i64 0, i64 3, !dbg !8575
  %y418 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx417, i32 0, i32 1, !dbg !8576
  %248 = load double, double* %y418, align 8, !dbg !8576
  %mul419 = fmul double 2.000000e+00, %248, !dbg !8577
  %arrayidx420 = getelementptr inbounds [4 x %struct._PointInfo], [4 x %struct._PointInfo]* %points, i64 0, i64 2, !dbg !8578
  %y421 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx420, i32 0, i32 1, !dbg !8579
  %249 = load double, double* %y421, align 8, !dbg !8579
  %sub422 = fsub double %mul419, %249, !dbg !8580
  %arrayidx423 = getelementptr inbounds [4 x %struct._PointInfo], [4 x %struct._PointInfo]* %points, i64 0, i64 1, !dbg !8581
  %y424 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx423, i32 0, i32 1, !dbg !8582
  store double %sub422, double* %y424, align 8, !dbg !8583
  store i64 2, i64* %i, align 8, !dbg !8584
  br label %for.cond425, !dbg !8586

for.cond425:                                      ; preds = %for.inc474, %do.body408
  %250 = load i64, i64* %i, align 8, !dbg !8587
  %cmp426 = icmp slt i64 %250, 4, !dbg !8589
  br i1 %cmp426, label %for.body428, label %for.end476, !dbg !8590

for.body428:                                      ; preds = %for.cond425
  %251 = load i8*, i8** %p, align 8, !dbg !8591
  %arraydecay429 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !8593
  call void @GetMagickToken(i8* %251, i8** %p, i8* %arraydecay429), !dbg !8594
  %arraydecay430 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !8595
  %252 = load i8, i8* %arraydecay430, align 16, !dbg !8595
  %conv431 = sext i8 %252 to i32, !dbg !8595
  %cmp432 = icmp eq i32 %conv431, 44, !dbg !8597
  br i1 %cmp432, label %if.then434, label %if.end436, !dbg !8598

if.then434:                                       ; preds = %for.body428
  %253 = load i8*, i8** %p, align 8, !dbg !8599
  %arraydecay435 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !8600
  call void @GetMagickToken(i8* %253, i8** %p, i8* %arraydecay435), !dbg !8601
  br label %if.end436, !dbg !8601

if.end436:                                        ; preds = %if.then434, %for.body428
  %arraydecay437 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !8602
  %call438 = call double @StringToDouble(i8* %arraydecay437, i8** null), !dbg !8603
  store double %call438, double* %x, align 8, !dbg !8604
  %254 = load i8*, i8** %p, align 8, !dbg !8605
  %arraydecay439 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !8606
  call void @GetMagickToken(i8* %254, i8** %p, i8* %arraydecay439), !dbg !8607
  %arraydecay440 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !8608
  %255 = load i8, i8* %arraydecay440, align 16, !dbg !8608
  %conv441 = sext i8 %255 to i32, !dbg !8608
  %cmp442 = icmp eq i32 %conv441, 44, !dbg !8610
  br i1 %cmp442, label %if.then444, label %if.end446, !dbg !8611

if.then444:                                       ; preds = %if.end436
  %256 = load i8*, i8** %p, align 8, !dbg !8612
  %arraydecay445 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !8613
  call void @GetMagickToken(i8* %256, i8** %p, i8* %arraydecay445), !dbg !8614
  br label %if.end446, !dbg !8614

if.end446:                                        ; preds = %if.then444, %if.end436
  %arraydecay447 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !8615
  %call448 = call double @StringToDouble(i8* %arraydecay447, i8** null), !dbg !8616
  store double %call448, double* %y, align 8, !dbg !8617
  %257 = load i8*, i8** %p, align 8, !dbg !8618
  %258 = load i8, i8* %257, align 1, !dbg !8620
  %conv449 = sext i8 %258 to i32, !dbg !8620
  %cmp450 = icmp eq i32 %conv449, 44, !dbg !8621
  br i1 %cmp450, label %if.then452, label %if.end454, !dbg !8622

if.then452:                                       ; preds = %if.end446
  %259 = load i8*, i8** %p, align 8, !dbg !8623
  %incdec.ptr453 = getelementptr inbounds i8, i8* %259, i32 1, !dbg !8623
  store i8* %incdec.ptr453, i8** %p, align 8, !dbg !8623
  br label %if.end454, !dbg !8624

if.end454:                                        ; preds = %if.then452, %if.end446
  %260 = load i32, i32* %attribute, align 4, !dbg !8625
  %cmp455 = icmp eq i32 %260, 83, !dbg !8626
  br i1 %cmp455, label %cond.true457, label %cond.false458, !dbg !8625

cond.true457:                                     ; preds = %if.end454
  %261 = load double, double* %x, align 8, !dbg !8627
  br label %cond.end461, !dbg !8625

cond.false458:                                    ; preds = %if.end454
  %x459 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 0, !dbg !8628
  %262 = load double, double* %x459, align 8, !dbg !8628
  %263 = load double, double* %x, align 8, !dbg !8629
  %add460 = fadd double %262, %263, !dbg !8630
  br label %cond.end461, !dbg !8625

cond.end461:                                      ; preds = %cond.false458, %cond.true457
  %cond462 = phi double [ %261, %cond.true457 ], [ %add460, %cond.false458 ], !dbg !8625
  %x463 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %end, i32 0, i32 0, !dbg !8631
  store double %cond462, double* %x463, align 8, !dbg !8632
  %264 = load i32, i32* %attribute, align 4, !dbg !8633
  %cmp464 = icmp eq i32 %264, 83, !dbg !8634
  br i1 %cmp464, label %cond.true466, label %cond.false467, !dbg !8633

cond.true466:                                     ; preds = %cond.end461
  %265 = load double, double* %y, align 8, !dbg !8635
  br label %cond.end470, !dbg !8633

cond.false467:                                    ; preds = %cond.end461
  %y468 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 1, !dbg !8636
  %266 = load double, double* %y468, align 8, !dbg !8636
  %267 = load double, double* %y, align 8, !dbg !8637
  %add469 = fadd double %266, %267, !dbg !8638
  br label %cond.end470, !dbg !8633

cond.end470:                                      ; preds = %cond.false467, %cond.true466
  %cond471 = phi double [ %265, %cond.true466 ], [ %add469, %cond.false467 ], !dbg !8633
  %y472 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %end, i32 0, i32 1, !dbg !8639
  store double %cond471, double* %y472, align 8, !dbg !8640
  %268 = load i64, i64* %i, align 8, !dbg !8641
  %arrayidx473 = getelementptr inbounds [4 x %struct._PointInfo], [4 x %struct._PointInfo]* %points, i64 0, i64 %268, !dbg !8642
  %269 = bitcast %struct._PointInfo* %arrayidx473 to i8*, !dbg !8643
  %270 = bitcast %struct._PointInfo* %end to i8*, !dbg !8643
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %269, i8* align 8 %270, i64 16, i1 false), !dbg !8643
  br label %for.inc474, !dbg !8644

for.inc474:                                       ; preds = %cond.end470
  %271 = load i64, i64* %i, align 8, !dbg !8645
  %inc475 = add nsw i64 %271, 1, !dbg !8645
  store i64 %inc475, i64* %i, align 8, !dbg !8645
  br label %for.cond425, !dbg !8646, !llvm.loop !8647

for.end476:                                       ; preds = %for.cond425
  %272 = load i32, i32* %last_attribute, align 4, !dbg !8649
  %call477 = call i8* @strchr(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.147, i64 0, i64 0), i32 %272) #15, !dbg !8651
  %cmp478 = icmp eq i8* %call477, null, !dbg !8652
  br i1 %cmp478, label %if.then480, label %if.end485, !dbg !8653

if.then480:                                       ; preds = %for.end476
  %arrayidx481 = getelementptr inbounds [4 x %struct._PointInfo], [4 x %struct._PointInfo]* %points, i64 0, i64 0, !dbg !8654
  %arrayidx482 = getelementptr inbounds [4 x %struct._PointInfo], [4 x %struct._PointInfo]* %points, i64 0, i64 2, !dbg !8656
  %273 = bitcast %struct._PointInfo* %arrayidx481 to i8*, !dbg !8656
  %274 = bitcast %struct._PointInfo* %arrayidx482 to i8*, !dbg !8656
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %273, i8* align 16 %274, i64 16, i1 false), !dbg !8656
  %arrayidx483 = getelementptr inbounds [4 x %struct._PointInfo], [4 x %struct._PointInfo]* %points, i64 0, i64 1, !dbg !8657
  %arrayidx484 = getelementptr inbounds [4 x %struct._PointInfo], [4 x %struct._PointInfo]* %points, i64 0, i64 3, !dbg !8658
  %275 = bitcast %struct._PointInfo* %arrayidx483 to i8*, !dbg !8658
  %276 = bitcast %struct._PointInfo* %arrayidx484 to i8*, !dbg !8658
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %275, i8* align 16 %276, i64 16, i1 false), !dbg !8658
  br label %if.end485, !dbg !8659

if.end485:                                        ; preds = %if.then480, %for.end476
  store i64 0, i64* %i, align 8, !dbg !8660
  br label %for.cond486, !dbg !8662

for.cond486:                                      ; preds = %for.inc493, %if.end485
  %277 = load i64, i64* %i, align 8, !dbg !8663
  %cmp487 = icmp slt i64 %277, 4, !dbg !8665
  br i1 %cmp487, label %for.body489, label %for.end495, !dbg !8666

for.body489:                                      ; preds = %for.cond486
  %278 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %q, align 8, !dbg !8667
  %279 = load i64, i64* %i, align 8, !dbg !8668
  %add.ptr490 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %278, i64 %279, !dbg !8669
  %point491 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %add.ptr490, i32 0, i32 0, !dbg !8670
  %280 = load i64, i64* %i, align 8, !dbg !8671
  %arrayidx492 = getelementptr inbounds [4 x %struct._PointInfo], [4 x %struct._PointInfo]* %points, i64 0, i64 %280, !dbg !8672
  %281 = bitcast %struct._PointInfo* %point491 to i8*, !dbg !8672
  %282 = bitcast %struct._PointInfo* %arrayidx492 to i8*, !dbg !8672
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %281, i8* align 16 %282, i64 16, i1 false), !dbg !8672
  br label %for.inc493, !dbg !8673

for.inc493:                                       ; preds = %for.body489
  %283 = load i64, i64* %i, align 8, !dbg !8674
  %inc494 = add nsw i64 %283, 1, !dbg !8674
  store i64 %inc494, i64* %i, align 8, !dbg !8674
  br label %for.cond486, !dbg !8675, !llvm.loop !8676

for.end495:                                       ; preds = %for.cond486
  %284 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %q, align 8, !dbg !8678
  call void @TraceBezier(%struct._PrimitiveInfo* %284, i64 4), !dbg !8679
  %285 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %q, align 8, !dbg !8680
  %coordinates496 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %285, i32 0, i32 1, !dbg !8681
  %286 = load i64, i64* %coordinates496, align 8, !dbg !8681
  %287 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %q, align 8, !dbg !8682
  %add.ptr497 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %287, i64 %286, !dbg !8682
  store %struct._PrimitiveInfo* %add.ptr497, %struct._PrimitiveInfo** %q, align 8, !dbg !8682
  %288 = bitcast %struct._PointInfo* %point to i8*, !dbg !8683
  %289 = bitcast %struct._PointInfo* %end to i8*, !dbg !8683
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %288, i8* align 8 %289, i64 16, i1 false), !dbg !8683
  br label %do.cond498, !dbg !8684

do.cond498:                                       ; preds = %for.end495
  %290 = load i8*, i8** %p, align 8, !dbg !8685
  %call499 = call i32 @IsPoint(i8* %290), !dbg !8686
  %cmp500 = icmp ne i32 %call499, 0, !dbg !8687
  br i1 %cmp500, label %do.body408, label %do.end502, !dbg !8684, !llvm.loop !8688

do.end502:                                        ; preds = %do.cond498
  br label %sw.epilog, !dbg !8690

sw.bb503:                                         ; preds = %if.end, %if.end
  br label %do.body504, !dbg !8691

do.body504:                                       ; preds = %do.cond590, %sw.bb503
  %arrayidx505 = getelementptr inbounds [4 x %struct._PointInfo], [4 x %struct._PointInfo]* %points, i64 0, i64 0, !dbg !8693
  %arrayidx506 = getelementptr inbounds [4 x %struct._PointInfo], [4 x %struct._PointInfo]* %points, i64 0, i64 2, !dbg !8695
  %291 = bitcast %struct._PointInfo* %arrayidx505 to i8*, !dbg !8695
  %292 = bitcast %struct._PointInfo* %arrayidx506 to i8*, !dbg !8695
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %291, i8* align 16 %292, i64 16, i1 false), !dbg !8695
  %arrayidx507 = getelementptr inbounds [4 x %struct._PointInfo], [4 x %struct._PointInfo]* %points, i64 0, i64 2, !dbg !8696
  %x508 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx507, i32 0, i32 0, !dbg !8697
  %293 = load double, double* %x508, align 16, !dbg !8697
  %mul509 = fmul double 2.000000e+00, %293, !dbg !8698
  %arrayidx510 = getelementptr inbounds [4 x %struct._PointInfo], [4 x %struct._PointInfo]* %points, i64 0, i64 1, !dbg !8699
  %x511 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx510, i32 0, i32 0, !dbg !8700
  %294 = load double, double* %x511, align 16, !dbg !8700
  %sub512 = fsub double %mul509, %294, !dbg !8701
  %arrayidx513 = getelementptr inbounds [4 x %struct._PointInfo], [4 x %struct._PointInfo]* %points, i64 0, i64 1, !dbg !8702
  %x514 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx513, i32 0, i32 0, !dbg !8703
  store double %sub512, double* %x514, align 16, !dbg !8704
  %arrayidx515 = getelementptr inbounds [4 x %struct._PointInfo], [4 x %struct._PointInfo]* %points, i64 0, i64 2, !dbg !8705
  %y516 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx515, i32 0, i32 1, !dbg !8706
  %295 = load double, double* %y516, align 8, !dbg !8706
  %mul517 = fmul double 2.000000e+00, %295, !dbg !8707
  %arrayidx518 = getelementptr inbounds [4 x %struct._PointInfo], [4 x %struct._PointInfo]* %points, i64 0, i64 1, !dbg !8708
  %y519 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx518, i32 0, i32 1, !dbg !8709
  %296 = load double, double* %y519, align 8, !dbg !8709
  %sub520 = fsub double %mul517, %296, !dbg !8710
  %arrayidx521 = getelementptr inbounds [4 x %struct._PointInfo], [4 x %struct._PointInfo]* %points, i64 0, i64 1, !dbg !8711
  %y522 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx521, i32 0, i32 1, !dbg !8712
  store double %sub520, double* %y522, align 8, !dbg !8713
  store i64 2, i64* %i, align 8, !dbg !8714
  br label %for.cond523, !dbg !8716

for.cond523:                                      ; preds = %for.inc566, %do.body504
  %297 = load i64, i64* %i, align 8, !dbg !8717
  %cmp524 = icmp slt i64 %297, 3, !dbg !8719
  br i1 %cmp524, label %for.body526, label %for.end568, !dbg !8720

for.body526:                                      ; preds = %for.cond523
  %298 = load i8*, i8** %p, align 8, !dbg !8721
  %arraydecay527 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !8723
  call void @GetMagickToken(i8* %298, i8** %p, i8* %arraydecay527), !dbg !8724
  %arraydecay528 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !8725
  %299 = load i8, i8* %arraydecay528, align 16, !dbg !8725
  %conv529 = sext i8 %299 to i32, !dbg !8725
  %cmp530 = icmp eq i32 %conv529, 44, !dbg !8727
  br i1 %cmp530, label %if.then532, label %if.end534, !dbg !8728

if.then532:                                       ; preds = %for.body526
  %300 = load i8*, i8** %p, align 8, !dbg !8729
  %arraydecay533 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !8730
  call void @GetMagickToken(i8* %300, i8** %p, i8* %arraydecay533), !dbg !8731
  br label %if.end534, !dbg !8731

if.end534:                                        ; preds = %if.then532, %for.body526
  %arraydecay535 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !8732
  %call536 = call double @StringToDouble(i8* %arraydecay535, i8** null), !dbg !8733
  store double %call536, double* %x, align 8, !dbg !8734
  %301 = load i8*, i8** %p, align 8, !dbg !8735
  %arraydecay537 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !8736
  call void @GetMagickToken(i8* %301, i8** %p, i8* %arraydecay537), !dbg !8737
  %arraydecay538 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !8738
  %302 = load i8, i8* %arraydecay538, align 16, !dbg !8738
  %conv539 = sext i8 %302 to i32, !dbg !8738
  %cmp540 = icmp eq i32 %conv539, 44, !dbg !8740
  br i1 %cmp540, label %if.then542, label %if.end544, !dbg !8741

if.then542:                                       ; preds = %if.end534
  %303 = load i8*, i8** %p, align 8, !dbg !8742
  %arraydecay543 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !8743
  call void @GetMagickToken(i8* %303, i8** %p, i8* %arraydecay543), !dbg !8744
  br label %if.end544, !dbg !8744

if.end544:                                        ; preds = %if.then542, %if.end534
  %arraydecay545 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !8745
  %call546 = call double @StringToDouble(i8* %arraydecay545, i8** null), !dbg !8746
  store double %call546, double* %y, align 8, !dbg !8747
  %304 = load i32, i32* %attribute, align 4, !dbg !8748
  %cmp547 = icmp eq i32 %304, 84, !dbg !8749
  br i1 %cmp547, label %cond.true549, label %cond.false550, !dbg !8748

cond.true549:                                     ; preds = %if.end544
  %305 = load double, double* %x, align 8, !dbg !8750
  br label %cond.end553, !dbg !8748

cond.false550:                                    ; preds = %if.end544
  %x551 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 0, !dbg !8751
  %306 = load double, double* %x551, align 8, !dbg !8751
  %307 = load double, double* %x, align 8, !dbg !8752
  %add552 = fadd double %306, %307, !dbg !8753
  br label %cond.end553, !dbg !8748

cond.end553:                                      ; preds = %cond.false550, %cond.true549
  %cond554 = phi double [ %305, %cond.true549 ], [ %add552, %cond.false550 ], !dbg !8748
  %x555 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %end, i32 0, i32 0, !dbg !8754
  store double %cond554, double* %x555, align 8, !dbg !8755
  %308 = load i32, i32* %attribute, align 4, !dbg !8756
  %cmp556 = icmp eq i32 %308, 84, !dbg !8757
  br i1 %cmp556, label %cond.true558, label %cond.false559, !dbg !8756

cond.true558:                                     ; preds = %cond.end553
  %309 = load double, double* %y, align 8, !dbg !8758
  br label %cond.end562, !dbg !8756

cond.false559:                                    ; preds = %cond.end553
  %y560 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 1, !dbg !8759
  %310 = load double, double* %y560, align 8, !dbg !8759
  %311 = load double, double* %y, align 8, !dbg !8760
  %add561 = fadd double %310, %311, !dbg !8761
  br label %cond.end562, !dbg !8756

cond.end562:                                      ; preds = %cond.false559, %cond.true558
  %cond563 = phi double [ %309, %cond.true558 ], [ %add561, %cond.false559 ], !dbg !8756
  %y564 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %end, i32 0, i32 1, !dbg !8762
  store double %cond563, double* %y564, align 8, !dbg !8763
  %312 = load i64, i64* %i, align 8, !dbg !8764
  %arrayidx565 = getelementptr inbounds [4 x %struct._PointInfo], [4 x %struct._PointInfo]* %points, i64 0, i64 %312, !dbg !8765
  %313 = bitcast %struct._PointInfo* %arrayidx565 to i8*, !dbg !8766
  %314 = bitcast %struct._PointInfo* %end to i8*, !dbg !8766
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %313, i8* align 8 %314, i64 16, i1 false), !dbg !8766
  br label %for.inc566, !dbg !8767

for.inc566:                                       ; preds = %cond.end562
  %315 = load i64, i64* %i, align 8, !dbg !8768
  %inc567 = add nsw i64 %315, 1, !dbg !8768
  store i64 %inc567, i64* %i, align 8, !dbg !8768
  br label %for.cond523, !dbg !8769, !llvm.loop !8770

for.end568:                                       ; preds = %for.cond523
  %316 = load i32, i32* %last_attribute, align 4, !dbg !8772
  %call569 = call i8* @strchr(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.148, i64 0, i64 0), i32 %316) #15, !dbg !8774
  %cmp570 = icmp eq i8* %call569, null, !dbg !8775
  br i1 %cmp570, label %if.then572, label %if.end577, !dbg !8776

if.then572:                                       ; preds = %for.end568
  %arrayidx573 = getelementptr inbounds [4 x %struct._PointInfo], [4 x %struct._PointInfo]* %points, i64 0, i64 0, !dbg !8777
  %arrayidx574 = getelementptr inbounds [4 x %struct._PointInfo], [4 x %struct._PointInfo]* %points, i64 0, i64 2, !dbg !8779
  %317 = bitcast %struct._PointInfo* %arrayidx573 to i8*, !dbg !8779
  %318 = bitcast %struct._PointInfo* %arrayidx574 to i8*, !dbg !8779
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %317, i8* align 16 %318, i64 16, i1 false), !dbg !8779
  %arrayidx575 = getelementptr inbounds [4 x %struct._PointInfo], [4 x %struct._PointInfo]* %points, i64 0, i64 1, !dbg !8780
  %arrayidx576 = getelementptr inbounds [4 x %struct._PointInfo], [4 x %struct._PointInfo]* %points, i64 0, i64 3, !dbg !8781
  %319 = bitcast %struct._PointInfo* %arrayidx575 to i8*, !dbg !8781
  %320 = bitcast %struct._PointInfo* %arrayidx576 to i8*, !dbg !8781
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %319, i8* align 16 %320, i64 16, i1 false), !dbg !8781
  br label %if.end577, !dbg !8782

if.end577:                                        ; preds = %if.then572, %for.end568
  store i64 0, i64* %i, align 8, !dbg !8783
  br label %for.cond578, !dbg !8785

for.cond578:                                      ; preds = %for.inc585, %if.end577
  %321 = load i64, i64* %i, align 8, !dbg !8786
  %cmp579 = icmp slt i64 %321, 3, !dbg !8788
  br i1 %cmp579, label %for.body581, label %for.end587, !dbg !8789

for.body581:                                      ; preds = %for.cond578
  %322 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %q, align 8, !dbg !8790
  %323 = load i64, i64* %i, align 8, !dbg !8791
  %add.ptr582 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %322, i64 %323, !dbg !8792
  %point583 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %add.ptr582, i32 0, i32 0, !dbg !8793
  %324 = load i64, i64* %i, align 8, !dbg !8794
  %arrayidx584 = getelementptr inbounds [4 x %struct._PointInfo], [4 x %struct._PointInfo]* %points, i64 0, i64 %324, !dbg !8795
  %325 = bitcast %struct._PointInfo* %point583 to i8*, !dbg !8795
  %326 = bitcast %struct._PointInfo* %arrayidx584 to i8*, !dbg !8795
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %325, i8* align 16 %326, i64 16, i1 false), !dbg !8795
  br label %for.inc585, !dbg !8796

for.inc585:                                       ; preds = %for.body581
  %327 = load i64, i64* %i, align 8, !dbg !8797
  %inc586 = add nsw i64 %327, 1, !dbg !8797
  store i64 %inc586, i64* %i, align 8, !dbg !8797
  br label %for.cond578, !dbg !8798, !llvm.loop !8799

for.end587:                                       ; preds = %for.cond578
  %328 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %q, align 8, !dbg !8801
  call void @TraceBezier(%struct._PrimitiveInfo* %328, i64 3), !dbg !8802
  %329 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %q, align 8, !dbg !8803
  %coordinates588 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %329, i32 0, i32 1, !dbg !8804
  %330 = load i64, i64* %coordinates588, align 8, !dbg !8804
  %331 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %q, align 8, !dbg !8805
  %add.ptr589 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %331, i64 %330, !dbg !8805
  store %struct._PrimitiveInfo* %add.ptr589, %struct._PrimitiveInfo** %q, align 8, !dbg !8805
  %332 = bitcast %struct._PointInfo* %point to i8*, !dbg !8806
  %333 = bitcast %struct._PointInfo* %end to i8*, !dbg !8806
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %332, i8* align 8 %333, i64 16, i1 false), !dbg !8806
  br label %do.cond590, !dbg !8807

do.cond590:                                       ; preds = %for.end587
  %334 = load i8*, i8** %p, align 8, !dbg !8808
  %call591 = call i32 @IsPoint(i8* %334), !dbg !8809
  %cmp592 = icmp ne i32 %call591, 0, !dbg !8810
  br i1 %cmp592, label %do.body504, label %do.end594, !dbg !8807, !llvm.loop !8811

do.end594:                                        ; preds = %do.cond590
  br label %sw.epilog, !dbg !8813

sw.bb595:                                         ; preds = %if.end, %if.end
  br label %do.body596, !dbg !8814

do.body596:                                       ; preds = %do.cond618, %sw.bb595
  %335 = load i8*, i8** %p, align 8, !dbg !8816
  %arraydecay597 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !8818
  call void @GetMagickToken(i8* %335, i8** %p, i8* %arraydecay597), !dbg !8819
  %arraydecay598 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !8820
  %336 = load i8, i8* %arraydecay598, align 16, !dbg !8820
  %conv599 = sext i8 %336 to i32, !dbg !8820
  %cmp600 = icmp eq i32 %conv599, 44, !dbg !8822
  br i1 %cmp600, label %if.then602, label %if.end604, !dbg !8823

if.then602:                                       ; preds = %do.body596
  %337 = load i8*, i8** %p, align 8, !dbg !8824
  %arraydecay603 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !8825
  call void @GetMagickToken(i8* %337, i8** %p, i8* %arraydecay603), !dbg !8826
  br label %if.end604, !dbg !8826

if.end604:                                        ; preds = %if.then602, %do.body596
  %arraydecay605 = getelementptr inbounds [4096 x i8], [4096 x i8]* %token, i64 0, i64 0, !dbg !8827
  %call606 = call double @StringToDouble(i8* %arraydecay605, i8** null), !dbg !8828
  store double %call606, double* %y, align 8, !dbg !8829
  %338 = load i32, i32* %attribute, align 4, !dbg !8830
  %cmp607 = icmp eq i32 %338, 86, !dbg !8831
  br i1 %cmp607, label %cond.true609, label %cond.false610, !dbg !8830

cond.true609:                                     ; preds = %if.end604
  %339 = load double, double* %y, align 8, !dbg !8832
  br label %cond.end613, !dbg !8830

cond.false610:                                    ; preds = %if.end604
  %y611 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 1, !dbg !8833
  %340 = load double, double* %y611, align 8, !dbg !8833
  %341 = load double, double* %y, align 8, !dbg !8834
  %add612 = fadd double %340, %341, !dbg !8835
  br label %cond.end613, !dbg !8830

cond.end613:                                      ; preds = %cond.false610, %cond.true609
  %cond614 = phi double [ %339, %cond.true609 ], [ %add612, %cond.false610 ], !dbg !8830
  %y615 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 1, !dbg !8836
  store double %cond614, double* %y615, align 8, !dbg !8837
  %342 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %q, align 8, !dbg !8838
  %343 = bitcast %struct._PointInfo* %point to { double, double }*, !dbg !8839
  %344 = getelementptr inbounds { double, double }, { double, double }* %343, i32 0, i32 0, !dbg !8839
  %345 = load double, double* %344, align 8, !dbg !8839
  %346 = getelementptr inbounds { double, double }, { double, double }* %343, i32 0, i32 1, !dbg !8839
  %347 = load double, double* %346, align 8, !dbg !8839
  call void @TracePoint(%struct._PrimitiveInfo* %342, double %345, double %347), !dbg !8839
  %348 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %q, align 8, !dbg !8840
  %coordinates616 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %348, i32 0, i32 1, !dbg !8841
  %349 = load i64, i64* %coordinates616, align 8, !dbg !8841
  %350 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %q, align 8, !dbg !8842
  %add.ptr617 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %350, i64 %349, !dbg !8842
  store %struct._PrimitiveInfo* %add.ptr617, %struct._PrimitiveInfo** %q, align 8, !dbg !8842
  br label %do.cond618, !dbg !8843

do.cond618:                                       ; preds = %cond.end613
  %351 = load i8*, i8** %p, align 8, !dbg !8844
  %call619 = call i32 @IsPoint(i8* %351), !dbg !8845
  %cmp620 = icmp ne i32 %call619, 0, !dbg !8846
  br i1 %cmp620, label %do.body596, label %do.end622, !dbg !8843, !llvm.loop !8847

do.end622:                                        ; preds = %do.cond618
  br label %sw.epilog, !dbg !8849

sw.bb623:                                         ; preds = %if.end, %if.end
  %352 = bitcast %struct._PointInfo* %point to i8*, !dbg !8850
  %353 = bitcast %struct._PointInfo* %start to i8*, !dbg !8850
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %352, i8* align 8 %353, i64 16, i1 false), !dbg !8850
  %354 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %q, align 8, !dbg !8852
  %355 = bitcast %struct._PointInfo* %point to { double, double }*, !dbg !8853
  %356 = getelementptr inbounds { double, double }, { double, double }* %355, i32 0, i32 0, !dbg !8853
  %357 = load double, double* %356, align 8, !dbg !8853
  %358 = getelementptr inbounds { double, double }, { double, double }* %355, i32 0, i32 1, !dbg !8853
  %359 = load double, double* %358, align 8, !dbg !8853
  call void @TracePoint(%struct._PrimitiveInfo* %354, double %357, double %359), !dbg !8853
  %360 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %q, align 8, !dbg !8854
  %coordinates624 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %360, i32 0, i32 1, !dbg !8855
  %361 = load i64, i64* %coordinates624, align 8, !dbg !8855
  %362 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %q, align 8, !dbg !8856
  %add.ptr625 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %362, i64 %361, !dbg !8856
  store %struct._PrimitiveInfo* %add.ptr625, %struct._PrimitiveInfo** %q, align 8, !dbg !8856
  %363 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %q, align 8, !dbg !8857
  %364 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !8858
  %sub.ptr.lhs.cast626 = ptrtoint %struct._PrimitiveInfo* %363 to i64, !dbg !8859
  %sub.ptr.rhs.cast627 = ptrtoint %struct._PrimitiveInfo* %364 to i64, !dbg !8859
  %sub.ptr.sub628 = sub i64 %sub.ptr.lhs.cast626, %sub.ptr.rhs.cast627, !dbg !8859
  %sub.ptr.div629 = sdiv exact i64 %sub.ptr.sub628, 40, !dbg !8859
  %365 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !8860
  %coordinates630 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %365, i32 0, i32 1, !dbg !8861
  store i64 %sub.ptr.div629, i64* %coordinates630, align 8, !dbg !8862
  %366 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !8863
  %coordinates631 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %366, i32 0, i32 1, !dbg !8864
  %367 = load i64, i64* %coordinates631, align 8, !dbg !8864
  %368 = load i64, i64* %number_coordinates, align 8, !dbg !8865
  %add632 = add i64 %368, %367, !dbg !8865
  store i64 %add632, i64* %number_coordinates, align 8, !dbg !8865
  %369 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %q, align 8, !dbg !8866
  store %struct._PrimitiveInfo* %369, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !8867
  %370 = load i64, i64* %z_count, align 8, !dbg !8868
  %inc633 = add i64 %370, 1, !dbg !8868
  store i64 %inc633, i64* %z_count, align 8, !dbg !8868
  br label %sw.epilog, !dbg !8869

sw.default:                                       ; preds = %if.end
  %call634 = call i16** @__ctype_b_loc() #12, !dbg !8870
  %371 = load i16*, i16** %call634, align 8, !dbg !8870
  %372 = load i32, i32* %attribute, align 4, !dbg !8870
  %conv635 = trunc i32 %372 to i8, !dbg !8870
  %conv636 = zext i8 %conv635 to i32, !dbg !8870
  %idxprom637 = sext i32 %conv636 to i64, !dbg !8870
  %arrayidx638 = getelementptr inbounds i16, i16* %371, i64 %idxprom637, !dbg !8870
  %373 = load i16, i16* %arrayidx638, align 2, !dbg !8870
  %conv639 = zext i16 %373 to i32, !dbg !8870
  %and640 = and i32 %conv639, 1024, !dbg !8870
  %cmp641 = icmp ne i32 %and640, 0, !dbg !8873
  br i1 %cmp641, label %if.then643, label %if.end645, !dbg !8874

if.then643:                                       ; preds = %sw.default
  %374 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !8875
  %375 = load i32, i32* %attribute, align 4, !dbg !8876
  %call644 = call i64 (%struct._IO_FILE*, i8*, ...) @FormatLocaleFile(%struct._IO_FILE* %374, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.149, i64 0, i64 0), i32 %375), !dbg !8877
  br label %if.end645, !dbg !8878

if.end645:                                        ; preds = %if.then643, %sw.default
  br label %sw.epilog, !dbg !8879

sw.epilog:                                        ; preds = %if.end645, %sw.bb623, %do.end622, %do.end594, %do.end502, %do.end406, %do.end334, %do.end267, %do.end220, %do.end192, %do.end
  br label %for.cond, !dbg !8880, !llvm.loop !8881

for.end646:                                       ; preds = %if.then, %for.cond
  %376 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %q, align 8, !dbg !8883
  %377 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !8884
  %sub.ptr.lhs.cast647 = ptrtoint %struct._PrimitiveInfo* %376 to i64, !dbg !8885
  %sub.ptr.rhs.cast648 = ptrtoint %struct._PrimitiveInfo* %377 to i64, !dbg !8885
  %sub.ptr.sub649 = sub i64 %sub.ptr.lhs.cast647, %sub.ptr.rhs.cast648, !dbg !8885
  %sub.ptr.div650 = sdiv exact i64 %sub.ptr.sub649, 40, !dbg !8885
  %378 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !8886
  %coordinates651 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %378, i32 0, i32 1, !dbg !8887
  store i64 %sub.ptr.div650, i64* %coordinates651, align 8, !dbg !8888
  %379 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !8889
  %coordinates652 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %379, i32 0, i32 1, !dbg !8890
  %380 = load i64, i64* %coordinates652, align 8, !dbg !8890
  %381 = load i64, i64* %number_coordinates, align 8, !dbg !8891
  %add653 = add i64 %381, %380, !dbg !8891
  store i64 %add653, i64* %number_coordinates, align 8, !dbg !8891
  store i64 0, i64* %i, align 8, !dbg !8892
  br label %for.cond654, !dbg !8894

for.cond654:                                      ; preds = %for.inc664, %for.end646
  %382 = load i64, i64* %i, align 8, !dbg !8895
  %383 = load i64, i64* %number_coordinates, align 8, !dbg !8897
  %cmp655 = icmp slt i64 %382, %383, !dbg !8898
  br i1 %cmp655, label %for.body657, label %for.end666, !dbg !8899

for.body657:                                      ; preds = %for.cond654
  %384 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %q, align 8, !dbg !8900
  %incdec.ptr658 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %384, i32 -1, !dbg !8900
  store %struct._PrimitiveInfo* %incdec.ptr658, %struct._PrimitiveInfo** %q, align 8, !dbg !8900
  %385 = load i32, i32* %primitive_type, align 4, !dbg !8902
  %386 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %q, align 8, !dbg !8903
  %primitive659 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %386, i32 0, i32 2, !dbg !8904
  store i32 %385, i32* %primitive659, align 8, !dbg !8905
  %387 = load i64, i64* %z_count, align 8, !dbg !8906
  %cmp660 = icmp ugt i64 %387, 1, !dbg !8908
  br i1 %cmp660, label %if.then662, label %if.end663, !dbg !8909

if.then662:                                       ; preds = %for.body657
  %388 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %q, align 8, !dbg !8910
  %method = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %388, i32 0, i32 3, !dbg !8911
  store i32 4, i32* %method, align 4, !dbg !8912
  br label %if.end663, !dbg !8910

if.end663:                                        ; preds = %if.then662, %for.body657
  br label %for.inc664, !dbg !8913

for.inc664:                                       ; preds = %if.end663
  %389 = load i64, i64* %i, align 8, !dbg !8914
  %inc665 = add nsw i64 %389, 1, !dbg !8914
  store i64 %inc665, i64* %i, align 8, !dbg !8914
  br label %for.cond654, !dbg !8915, !llvm.loop !8916

for.end666:                                       ; preds = %for.cond654
  %390 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !8918
  store %struct._PrimitiveInfo* %390, %struct._PrimitiveInfo** %q, align 8, !dbg !8919
  %391 = load i64, i64* %number_coordinates, align 8, !dbg !8920
  ret i64 %391, !dbg !8921
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @DrawPrimitive(%struct._Image* %image, %struct._DrawInfo* %draw_info, %struct._PrimitiveInfo* %primitive_info) #0 !dbg !8922 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %draw_info.addr = alloca %struct._DrawInfo*, align 8
  %primitive_info.addr = alloca %struct._PrimitiveInfo*, align 8
  %image_view = alloca %struct._CacheView*, align 8
  %exception = alloca %struct._ExceptionInfo*, align 8
  %status = alloca i32, align 4
  %i = alloca i64, align 8
  %x = alloca i64, align 8
  %y = alloca i64, align 8
  %fill_color = alloca %struct._PixelPacket, align 2
  %q = alloca %struct._PixelPacket*, align 8
  %q49 = alloca %struct._PixelPacket*, align 8
  %sync = alloca i32, align 4
  %target = alloca %struct._PixelPacket, align 2
  %q64 = alloca %struct._PixelPacket*, align 8
  %target92 = alloca %struct._MagickPixelPacket, align 8
  %sync113 = alloca i32, align 4
  %q119 = alloca %struct._PixelPacket*, align 8
  %x120 = alloca i64, align 8
  %pixel = alloca %struct._PixelPacket, align 2
  %q154 = alloca %struct._PixelPacket*, align 8
  %sync166 = alloca i32, align 4
  %pixel167 = alloca %struct._PixelPacket, align 2
  %target168 = alloca %struct._PixelPacket, align 2
  %q176 = alloca %struct._PixelPacket*, align 8
  %x177 = alloca i64, align 8
  %target211 = alloca %struct._MagickPixelPacket, align 8
  %sync237 = alloca i32, align 4
  %pixel238 = alloca %struct._PixelPacket, align 2
  %q244 = alloca %struct._PixelPacket*, align 8
  %x245 = alloca i64, align 8
  %geometry = alloca [4096 x i8], align 16
  %clone_info = alloca %struct._DrawInfo*, align 8
  %affine294 = alloca %struct._AffineMatrix, align 8
  %composite_geometry = alloca [4096 x i8], align 16
  %composite_image = alloca %struct._Image*, align 8
  %clone_info295 = alloca %struct._ImageInfo*, align 8
  %geometry296 = alloca %struct._RectangleInfo, align 8
  %x1 = alloca i64, align 8
  %y1 = alloca i64, align 8
  %geometry346 = alloca [4096 x i8], align 16
  %mid = alloca double, align 8
  %scale = alloca double, align 8
  %clone_info409 = alloca %struct._DrawInfo*, align 8
  %closed_path = alloca i32, align 4
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !8927, metadata !DIExpression()), !dbg !8928
  store %struct._DrawInfo* %draw_info, %struct._DrawInfo** %draw_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawInfo** %draw_info.addr, metadata !8929, metadata !DIExpression()), !dbg !8930
  store %struct._PrimitiveInfo* %primitive_info, %struct._PrimitiveInfo** %primitive_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PrimitiveInfo** %primitive_info.addr, metadata !8931, metadata !DIExpression()), !dbg !8932
  call void @llvm.dbg.declare(metadata %struct._CacheView** %image_view, metadata !8933, metadata !DIExpression()), !dbg !8934
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception, metadata !8935, metadata !DIExpression()), !dbg !8936
  call void @llvm.dbg.declare(metadata i32* %status, metadata !8937, metadata !DIExpression()), !dbg !8938
  call void @llvm.dbg.declare(metadata i64* %i, metadata !8939, metadata !DIExpression()), !dbg !8940
  call void @llvm.dbg.declare(metadata i64* %x, metadata !8941, metadata !DIExpression()), !dbg !8942
  call void @llvm.dbg.declare(metadata i64* %y, metadata !8943, metadata !DIExpression()), !dbg !8944
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8945
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !8947
  %1 = load i32, i32* %debug, align 8, !dbg !8947
  %cmp = icmp ne i32 %1, 0, !dbg !8948
  br i1 %cmp, label %if.then, label %if.end, !dbg !8949

if.then:                                          ; preds = %entry
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 128, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4221, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.97, i64 0, i64 0)), !dbg !8950
  %2 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !8952
  %affine = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %2, i32 0, i32 3, !dbg !8953
  %sx = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %affine, i32 0, i32 0, !dbg !8954
  %3 = load double, double* %sx, align 8, !dbg !8954
  %4 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !8955
  %affine1 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %4, i32 0, i32 3, !dbg !8956
  %rx = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %affine1, i32 0, i32 1, !dbg !8957
  %5 = load double, double* %rx, align 8, !dbg !8957
  %6 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !8958
  %affine2 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %6, i32 0, i32 3, !dbg !8959
  %ry = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %affine2, i32 0, i32 2, !dbg !8960
  %7 = load double, double* %ry, align 8, !dbg !8960
  %8 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !8961
  %affine3 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %8, i32 0, i32 3, !dbg !8962
  %sy = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %affine3, i32 0, i32 3, !dbg !8963
  %9 = load double, double* %sy, align 8, !dbg !8963
  %10 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !8964
  %affine4 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %10, i32 0, i32 3, !dbg !8965
  %tx = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %affine4, i32 0, i32 4, !dbg !8966
  %11 = load double, double* %tx, align 8, !dbg !8966
  %12 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !8967
  %affine5 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %12, i32 0, i32 3, !dbg !8968
  %ty = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %affine5, i32 0, i32 5, !dbg !8969
  %13 = load double, double* %ty, align 8, !dbg !8969
  %call6 = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 128, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4223, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.98, i64 0, i64 0), double %3, double %5, double %7, double %9, double %11, double %13), !dbg !8970
  br label %if.end, !dbg !8971

if.end:                                           ; preds = %if.then, %entry
  %14 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8972
  %colorspace = getelementptr inbounds %struct._Image, %struct._Image* %14, i32 0, i32 1, !dbg !8974
  %15 = load i32, i32* %colorspace, align 4, !dbg !8974
  %call7 = call i32 @IsGrayColorspace(i32 %15), !dbg !8975
  %cmp8 = icmp ne i32 %call7, 0, !dbg !8976
  br i1 %cmp8, label %land.lhs.true, label %if.end15, !dbg !8977

land.lhs.true:                                    ; preds = %if.end
  %16 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !8978
  %fill = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %16, i32 0, i32 5, !dbg !8979
  %call9 = call i32 @IsPixelGray(%struct._PixelPacket* %fill), !dbg !8980
  %cmp10 = icmp eq i32 %call9, 0, !dbg !8981
  br i1 %cmp10, label %if.then13, label %lor.lhs.false, !dbg !8982

lor.lhs.false:                                    ; preds = %land.lhs.true
  %17 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !8983
  %stroke = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %17, i32 0, i32 6, !dbg !8984
  %call11 = call i32 @IsPixelGray(%struct._PixelPacket* %stroke), !dbg !8985
  %cmp12 = icmp eq i32 %call11, 0, !dbg !8986
  br i1 %cmp12, label %if.then13, label %if.end15, !dbg !8987

if.then13:                                        ; preds = %lor.lhs.false, %land.lhs.true
  %18 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8988
  %call14 = call i32 @SetImageColorspace(%struct._Image* %18, i32 13), !dbg !8989
  br label %if.end15, !dbg !8990

if.end15:                                         ; preds = %if.then13, %lor.lhs.false, %if.end
  store i32 1, i32* %status, align 4, !dbg !8991
  %19 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8992
  %exception16 = getelementptr inbounds %struct._Image, %struct._Image* %19, i32 0, i32 58, !dbg !8993
  store %struct._ExceptionInfo* %exception16, %struct._ExceptionInfo** %exception, align 8, !dbg !8994
  %20 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !8995
  %point = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %20, i32 0, i32 0, !dbg !8996
  %x17 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 0, !dbg !8997
  %21 = load double, double* %x17, align 8, !dbg !8997
  %sub = fsub double %21, 5.000000e-01, !dbg !8998
  %22 = call double @llvm.ceil.f64(double %sub), !dbg !8999
  %conv = fptosi double %22 to i64, !dbg !9000
  store i64 %conv, i64* %x, align 8, !dbg !9001
  %23 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !9002
  %point18 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %23, i32 0, i32 0, !dbg !9003
  %y19 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point18, i32 0, i32 1, !dbg !9004
  %24 = load double, double* %y19, align 8, !dbg !9004
  %sub20 = fsub double %24, 5.000000e-01, !dbg !9005
  %25 = call double @llvm.ceil.f64(double %sub20), !dbg !9006
  %conv21 = fptosi double %25 to i64, !dbg !9007
  store i64 %conv21, i64* %y, align 8, !dbg !9008
  %26 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9009
  %27 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !9010
  %call22 = call %struct._CacheView* @AcquireAuthenticCacheView(%struct._Image* %26, %struct._ExceptionInfo* %27), !dbg !9011
  store %struct._CacheView* %call22, %struct._CacheView** %image_view, align 8, !dbg !9012
  %28 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !9013
  %primitive = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %28, i32 0, i32 2, !dbg !9014
  %29 = load i32, i32* %primitive, align 8, !dbg !9014
  switch i32 %29, label %sw.default408 [
    i32 1, label %sw.bb
    i32 11, label %sw.bb47
    i32 12, label %sw.bb145
    i32 13, label %sw.bb273
    i32 14, label %sw.bb293
  ], !dbg !9015

sw.bb:                                            ; preds = %if.end15
  call void @llvm.dbg.declare(metadata %struct._PixelPacket* %fill_color, metadata !9016, metadata !DIExpression()), !dbg !9019
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q, metadata !9020, metadata !DIExpression()), !dbg !9021
  %30 = load i64, i64* %y, align 8, !dbg !9022
  %cmp23 = icmp slt i64 %30, 0, !dbg !9024
  br i1 %cmp23, label %if.then28, label %lor.lhs.false25, !dbg !9025

lor.lhs.false25:                                  ; preds = %sw.bb
  %31 = load i64, i64* %y, align 8, !dbg !9026
  %32 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9027
  %rows = getelementptr inbounds %struct._Image, %struct._Image* %32, i32 0, i32 8, !dbg !9028
  %33 = load i64, i64* %rows, align 8, !dbg !9028
  %cmp26 = icmp sge i64 %31, %33, !dbg !9029
  br i1 %cmp26, label %if.then28, label %if.end29, !dbg !9030

if.then28:                                        ; preds = %lor.lhs.false25, %sw.bb
  br label %sw.epilog513, !dbg !9031

if.end29:                                         ; preds = %lor.lhs.false25
  %34 = load i64, i64* %x, align 8, !dbg !9032
  %cmp30 = icmp slt i64 %34, 0, !dbg !9034
  br i1 %cmp30, label %if.then35, label %lor.lhs.false32, !dbg !9035

lor.lhs.false32:                                  ; preds = %if.end29
  %35 = load i64, i64* %x, align 8, !dbg !9036
  %36 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9037
  %columns = getelementptr inbounds %struct._Image, %struct._Image* %36, i32 0, i32 7, !dbg !9038
  %37 = load i64, i64* %columns, align 8, !dbg !9038
  %cmp33 = icmp sge i64 %35, %37, !dbg !9039
  br i1 %cmp33, label %if.then35, label %if.end36, !dbg !9040

if.then35:                                        ; preds = %lor.lhs.false32, %if.end29
  br label %sw.epilog513, !dbg !9041

if.end36:                                         ; preds = %lor.lhs.false32
  %38 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !9042
  %39 = load i64, i64* %x, align 8, !dbg !9043
  %40 = load i64, i64* %y, align 8, !dbg !9044
  %41 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !9045
  %call37 = call %struct._PixelPacket* @GetCacheViewAuthenticPixels(%struct._CacheView* %38, i64 %39, i64 %40, i64 1, i64 1, %struct._ExceptionInfo* %41), !dbg !9046
  store %struct._PixelPacket* %call37, %struct._PixelPacket** %q, align 8, !dbg !9047
  %42 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9048
  %cmp38 = icmp eq %struct._PixelPacket* %42, null, !dbg !9050
  br i1 %cmp38, label %if.then40, label %if.end41, !dbg !9051

if.then40:                                        ; preds = %if.end36
  br label %sw.epilog513, !dbg !9052

if.end41:                                         ; preds = %if.end36
  %43 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !9053
  %44 = load i64, i64* %x, align 8, !dbg !9054
  %45 = load i64, i64* %y, align 8, !dbg !9055
  %call42 = call i32 @GetFillColor(%struct._DrawInfo* %43, i64 %44, i64 %45, %struct._PixelPacket* %fill_color), !dbg !9056
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %fill_color, i32 0, i32 3, !dbg !9057
  %46 = load i16, i16* %opacity, align 2, !dbg !9057
  %conv43 = uitofp i16 %46 to float, !dbg !9058
  %47 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9059
  %48 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9060
  %opacity44 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %48, i32 0, i32 3, !dbg !9061
  %49 = load i16, i16* %opacity44, align 2, !dbg !9061
  %conv45 = uitofp i16 %49 to float, !dbg !9062
  %50 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !9063
  call void @MagickCompositeOver(%struct._PixelPacket* %fill_color, float %conv43, %struct._PixelPacket* %47, float %conv45, %struct._PixelPacket* %50), !dbg !9064
  %51 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !9065
  %52 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !9066
  %call46 = call i32 @SyncCacheViewAuthenticPixels(%struct._CacheView* %51, %struct._ExceptionInfo* %52), !dbg !9067
  %53 = load i32, i32* %status, align 4, !dbg !9068
  %and = and i32 %53, %call46, !dbg !9068
  store i32 %and, i32* %status, align 4, !dbg !9068
  br label %sw.epilog513, !dbg !9069

sw.bb47:                                          ; preds = %if.end15
  %54 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !9070
  %method = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %54, i32 0, i32 3, !dbg !9072
  %55 = load i32, i32* %method, align 4, !dbg !9072
  switch i32 %55, label %sw.default [
    i32 1, label %sw.bb48
    i32 2, label %sw.bb58
    i32 3, label %sw.bb91
    i32 4, label %sw.bb91
    i32 5, label %sw.bb112
  ], !dbg !9073

sw.bb48:                                          ; preds = %sw.bb47
  br label %sw.default, !dbg !9074

sw.default:                                       ; preds = %sw.bb47, %sw.bb48
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q49, metadata !9075, metadata !DIExpression()), !dbg !9078
  %56 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !9079
  %57 = load i64, i64* %x, align 8, !dbg !9080
  %58 = load i64, i64* %y, align 8, !dbg !9081
  %59 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !9082
  %call50 = call %struct._PixelPacket* @GetCacheViewAuthenticPixels(%struct._CacheView* %56, i64 %57, i64 %58, i64 1, i64 1, %struct._ExceptionInfo* %59), !dbg !9083
  store %struct._PixelPacket* %call50, %struct._PixelPacket** %q49, align 8, !dbg !9084
  %60 = load %struct._PixelPacket*, %struct._PixelPacket** %q49, align 8, !dbg !9085
  %cmp51 = icmp eq %struct._PixelPacket* %60, null, !dbg !9087
  br i1 %cmp51, label %if.then53, label %if.end54, !dbg !9088

if.then53:                                        ; preds = %sw.default
  br label %sw.epilog, !dbg !9089

if.end54:                                         ; preds = %sw.default
  %61 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !9090
  %62 = load i64, i64* %x, align 8, !dbg !9091
  %63 = load i64, i64* %y, align 8, !dbg !9092
  %64 = load %struct._PixelPacket*, %struct._PixelPacket** %q49, align 8, !dbg !9093
  %call55 = call i32 @GetFillColor(%struct._DrawInfo* %61, i64 %62, i64 %63, %struct._PixelPacket* %64), !dbg !9094
  %65 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !9095
  %66 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !9096
  %call56 = call i32 @SyncCacheViewAuthenticPixels(%struct._CacheView* %65, %struct._ExceptionInfo* %66), !dbg !9097
  %67 = load i32, i32* %status, align 4, !dbg !9098
  %and57 = and i32 %67, %call56, !dbg !9098
  store i32 %and57, i32* %status, align 4, !dbg !9098
  br label %sw.epilog, !dbg !9099

sw.bb58:                                          ; preds = %sw.bb47
  call void @llvm.dbg.declare(metadata i32* %sync, metadata !9100, metadata !DIExpression()), !dbg !9102
  call void @llvm.dbg.declare(metadata %struct._PixelPacket* %target, metadata !9103, metadata !DIExpression()), !dbg !9104
  %68 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !9105
  %69 = load i64, i64* %x, align 8, !dbg !9106
  %70 = load i64, i64* %y, align 8, !dbg !9107
  %71 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !9108
  %call59 = call i32 @GetOneCacheViewVirtualPixel(%struct._CacheView* %68, i64 %69, i64 %70, %struct._PixelPacket* %target, %struct._ExceptionInfo* %71), !dbg !9109
  %72 = load i32, i32* %status, align 4, !dbg !9110
  %and60 = and i32 %72, %call59, !dbg !9110
  store i32 %and60, i32* %status, align 4, !dbg !9110
  store i64 0, i64* %y, align 8, !dbg !9111
  br label %for.cond, !dbg !9113

for.cond:                                         ; preds = %for.inc88, %sw.bb58
  %73 = load i64, i64* %y, align 8, !dbg !9114
  %74 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9116
  %rows61 = getelementptr inbounds %struct._Image, %struct._Image* %74, i32 0, i32 8, !dbg !9117
  %75 = load i64, i64* %rows61, align 8, !dbg !9117
  %cmp62 = icmp slt i64 %73, %75, !dbg !9118
  br i1 %cmp62, label %for.body, label %for.end90, !dbg !9119

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q64, metadata !9120, metadata !DIExpression()), !dbg !9122
  %76 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !9123
  %77 = load i64, i64* %y, align 8, !dbg !9124
  %78 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9125
  %columns65 = getelementptr inbounds %struct._Image, %struct._Image* %78, i32 0, i32 7, !dbg !9126
  %79 = load i64, i64* %columns65, align 8, !dbg !9126
  %80 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !9127
  %call66 = call %struct._PixelPacket* @GetCacheViewAuthenticPixels(%struct._CacheView* %76, i64 0, i64 %77, i64 %79, i64 1, %struct._ExceptionInfo* %80), !dbg !9128
  store %struct._PixelPacket* %call66, %struct._PixelPacket** %q64, align 8, !dbg !9129
  %81 = load %struct._PixelPacket*, %struct._PixelPacket** %q64, align 8, !dbg !9130
  %cmp67 = icmp eq %struct._PixelPacket* %81, null, !dbg !9132
  br i1 %cmp67, label %if.then69, label %if.end70, !dbg !9133

if.then69:                                        ; preds = %for.body
  br label %for.end90, !dbg !9134

if.end70:                                         ; preds = %for.body
  store i64 0, i64* %x, align 8, !dbg !9135
  br label %for.cond71, !dbg !9137

for.cond71:                                       ; preds = %for.inc, %if.end70
  %82 = load i64, i64* %x, align 8, !dbg !9138
  %83 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9140
  %columns72 = getelementptr inbounds %struct._Image, %struct._Image* %83, i32 0, i32 7, !dbg !9141
  %84 = load i64, i64* %columns72, align 8, !dbg !9141
  %cmp73 = icmp slt i64 %82, %84, !dbg !9142
  br i1 %cmp73, label %for.body75, label %for.end, !dbg !9143

for.body75:                                       ; preds = %for.cond71
  %85 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9144
  %86 = load %struct._PixelPacket*, %struct._PixelPacket** %q64, align 8, !dbg !9147
  %call76 = call i32 @IsColorSimilar(%struct._Image* %85, %struct._PixelPacket* %86, %struct._PixelPacket* %target), !dbg !9148
  %cmp77 = icmp eq i32 %call76, 0, !dbg !9149
  br i1 %cmp77, label %if.then79, label %if.end80, !dbg !9150

if.then79:                                        ; preds = %for.body75
  %87 = load %struct._PixelPacket*, %struct._PixelPacket** %q64, align 8, !dbg !9151
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %87, i32 1, !dbg !9151
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %q64, align 8, !dbg !9151
  br label %for.inc, !dbg !9153

if.end80:                                         ; preds = %for.body75
  %88 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !9154
  %89 = load i64, i64* %x, align 8, !dbg !9155
  %90 = load i64, i64* %y, align 8, !dbg !9156
  %91 = load %struct._PixelPacket*, %struct._PixelPacket** %q64, align 8, !dbg !9157
  %call81 = call i32 @GetFillColor(%struct._DrawInfo* %88, i64 %89, i64 %90, %struct._PixelPacket* %91), !dbg !9158
  %92 = load %struct._PixelPacket*, %struct._PixelPacket** %q64, align 8, !dbg !9159
  %incdec.ptr82 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %92, i32 1, !dbg !9159
  store %struct._PixelPacket* %incdec.ptr82, %struct._PixelPacket** %q64, align 8, !dbg !9159
  br label %for.inc, !dbg !9160

for.inc:                                          ; preds = %if.end80, %if.then79
  %93 = load i64, i64* %x, align 8, !dbg !9161
  %inc = add nsw i64 %93, 1, !dbg !9161
  store i64 %inc, i64* %x, align 8, !dbg !9161
  br label %for.cond71, !dbg !9162, !llvm.loop !9163

for.end:                                          ; preds = %for.cond71
  %94 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !9165
  %95 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !9166
  %call83 = call i32 @SyncCacheViewAuthenticPixels(%struct._CacheView* %94, %struct._ExceptionInfo* %95), !dbg !9167
  store i32 %call83, i32* %sync, align 4, !dbg !9168
  %96 = load i32, i32* %sync, align 4, !dbg !9169
  %cmp84 = icmp eq i32 %96, 0, !dbg !9171
  br i1 %cmp84, label %if.then86, label %if.end87, !dbg !9172

if.then86:                                        ; preds = %for.end
  br label %for.end90, !dbg !9173

if.end87:                                         ; preds = %for.end
  br label %for.inc88, !dbg !9174

for.inc88:                                        ; preds = %if.end87
  %97 = load i64, i64* %y, align 8, !dbg !9175
  %inc89 = add nsw i64 %97, 1, !dbg !9175
  store i64 %inc89, i64* %y, align 8, !dbg !9175
  br label %for.cond, !dbg !9176, !llvm.loop !9177

for.end90:                                        ; preds = %if.then86, %if.then69, %for.cond
  br label %sw.epilog, !dbg !9179

sw.bb91:                                          ; preds = %sw.bb47, %sw.bb47
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket* %target92, metadata !9180, metadata !DIExpression()), !dbg !9182
  %98 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9183
  %99 = load i64, i64* %x, align 8, !dbg !9184
  %100 = load i64, i64* %y, align 8, !dbg !9185
  %101 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !9186
  %call93 = call i32 @GetOneVirtualMagickPixel(%struct._Image* %98, i64 %99, i64 %100, %struct._MagickPixelPacket* %target92, %struct._ExceptionInfo* %101), !dbg !9187
  %102 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !9188
  %method94 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %102, i32 0, i32 3, !dbg !9190
  %103 = load i32, i32* %method94, align 4, !dbg !9190
  %cmp95 = icmp eq i32 %103, 4, !dbg !9191
  br i1 %cmp95, label %if.then97, label %if.end106, !dbg !9192

if.then97:                                        ; preds = %sw.bb91
  %104 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !9193
  %border_color = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %104, i32 0, i32 34, !dbg !9195
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %border_color, i32 0, i32 2, !dbg !9196
  %105 = load i16, i16* %red, align 4, !dbg !9196
  %conv98 = uitofp i16 %105 to float, !dbg !9197
  %red99 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %target92, i32 0, i32 5, !dbg !9198
  store float %conv98, float* %red99, align 8, !dbg !9199
  %106 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !9200
  %border_color100 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %106, i32 0, i32 34, !dbg !9201
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %border_color100, i32 0, i32 1, !dbg !9202
  %107 = load i16, i16* %green, align 2, !dbg !9202
  %conv101 = uitofp i16 %107 to float, !dbg !9203
  %green102 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %target92, i32 0, i32 6, !dbg !9204
  store float %conv101, float* %green102, align 4, !dbg !9205
  %108 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !9206
  %border_color103 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %108, i32 0, i32 34, !dbg !9207
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %border_color103, i32 0, i32 0, !dbg !9208
  %109 = load i16, i16* %blue, align 4, !dbg !9208
  %conv104 = uitofp i16 %109 to float, !dbg !9209
  %blue105 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %target92, i32 0, i32 7, !dbg !9210
  store float %conv104, float* %blue105, align 8, !dbg !9211
  br label %if.end106, !dbg !9212

if.end106:                                        ; preds = %if.then97, %sw.bb91
  %110 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9213
  %111 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !9214
  %112 = load i64, i64* %x, align 8, !dbg !9215
  %113 = load i64, i64* %y, align 8, !dbg !9216
  %114 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !9217
  %method107 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %114, i32 0, i32 3, !dbg !9218
  %115 = load i32, i32* %method107, align 4, !dbg !9218
  %cmp108 = icmp eq i32 %115, 3, !dbg !9219
  %116 = zext i1 %cmp108 to i64, !dbg !9217
  %cond = select i1 %cmp108, i32 0, i32 1, !dbg !9217
  %call110 = call i32 @FloodfillPaintImage(%struct._Image* %110, i32 134217719, %struct._DrawInfo* %111, %struct._MagickPixelPacket* %target92, i64 %112, i64 %113, i32 %cond), !dbg !9220
  %117 = load i32, i32* %status, align 4, !dbg !9221
  %and111 = and i32 %117, %call110, !dbg !9221
  store i32 %and111, i32* %status, align 4, !dbg !9221
  br label %sw.epilog, !dbg !9222

sw.bb112:                                         ; preds = %sw.bb47
  call void @llvm.dbg.declare(metadata i32* %sync113, metadata !9223, metadata !DIExpression()), !dbg !9225
  store i64 0, i64* %y, align 8, !dbg !9226
  br label %for.cond114, !dbg !9228

for.cond114:                                      ; preds = %for.inc142, %sw.bb112
  %118 = load i64, i64* %y, align 8, !dbg !9229
  %119 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9231
  %rows115 = getelementptr inbounds %struct._Image, %struct._Image* %119, i32 0, i32 8, !dbg !9232
  %120 = load i64, i64* %rows115, align 8, !dbg !9232
  %cmp116 = icmp slt i64 %118, %120, !dbg !9233
  br i1 %cmp116, label %for.body118, label %for.end144, !dbg !9234

for.body118:                                      ; preds = %for.cond114
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q119, metadata !9235, metadata !DIExpression()), !dbg !9237
  call void @llvm.dbg.declare(metadata i64* %x120, metadata !9238, metadata !DIExpression()), !dbg !9239
  %121 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !9240
  %122 = load i64, i64* %y, align 8, !dbg !9241
  %123 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9242
  %columns121 = getelementptr inbounds %struct._Image, %struct._Image* %123, i32 0, i32 7, !dbg !9243
  %124 = load i64, i64* %columns121, align 8, !dbg !9243
  %125 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !9244
  %call122 = call %struct._PixelPacket* @GetCacheViewAuthenticPixels(%struct._CacheView* %121, i64 0, i64 %122, i64 %124, i64 1, %struct._ExceptionInfo* %125), !dbg !9245
  store %struct._PixelPacket* %call122, %struct._PixelPacket** %q119, align 8, !dbg !9246
  %126 = load %struct._PixelPacket*, %struct._PixelPacket** %q119, align 8, !dbg !9247
  %cmp123 = icmp eq %struct._PixelPacket* %126, null, !dbg !9249
  br i1 %cmp123, label %if.then125, label %if.end126, !dbg !9250

if.then125:                                       ; preds = %for.body118
  br label %for.end144, !dbg !9251

if.end126:                                        ; preds = %for.body118
  store i64 0, i64* %x120, align 8, !dbg !9252
  br label %for.cond127, !dbg !9254

for.cond127:                                      ; preds = %for.inc134, %if.end126
  %127 = load i64, i64* %x120, align 8, !dbg !9255
  %128 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9257
  %columns128 = getelementptr inbounds %struct._Image, %struct._Image* %128, i32 0, i32 7, !dbg !9258
  %129 = load i64, i64* %columns128, align 8, !dbg !9258
  %cmp129 = icmp slt i64 %127, %129, !dbg !9259
  br i1 %cmp129, label %for.body131, label %for.end136, !dbg !9260

for.body131:                                      ; preds = %for.cond127
  %130 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !9261
  %131 = load i64, i64* %x120, align 8, !dbg !9263
  %132 = load i64, i64* %y, align 8, !dbg !9264
  %133 = load %struct._PixelPacket*, %struct._PixelPacket** %q119, align 8, !dbg !9265
  %call132 = call i32 @GetFillColor(%struct._DrawInfo* %130, i64 %131, i64 %132, %struct._PixelPacket* %133), !dbg !9266
  %134 = load %struct._PixelPacket*, %struct._PixelPacket** %q119, align 8, !dbg !9267
  %incdec.ptr133 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %134, i32 1, !dbg !9267
  store %struct._PixelPacket* %incdec.ptr133, %struct._PixelPacket** %q119, align 8, !dbg !9267
  br label %for.inc134, !dbg !9268

for.inc134:                                       ; preds = %for.body131
  %135 = load i64, i64* %x120, align 8, !dbg !9269
  %inc135 = add nsw i64 %135, 1, !dbg !9269
  store i64 %inc135, i64* %x120, align 8, !dbg !9269
  br label %for.cond127, !dbg !9270, !llvm.loop !9271

for.end136:                                       ; preds = %for.cond127
  %136 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !9273
  %137 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !9274
  %call137 = call i32 @SyncCacheViewAuthenticPixels(%struct._CacheView* %136, %struct._ExceptionInfo* %137), !dbg !9275
  store i32 %call137, i32* %sync113, align 4, !dbg !9276
  %138 = load i32, i32* %sync113, align 4, !dbg !9277
  %cmp138 = icmp eq i32 %138, 0, !dbg !9279
  br i1 %cmp138, label %if.then140, label %if.end141, !dbg !9280

if.then140:                                       ; preds = %for.end136
  br label %for.end144, !dbg !9281

if.end141:                                        ; preds = %for.end136
  br label %for.inc142, !dbg !9282

for.inc142:                                       ; preds = %if.end141
  %139 = load i64, i64* %y, align 8, !dbg !9283
  %inc143 = add nsw i64 %139, 1, !dbg !9283
  store i64 %inc143, i64* %y, align 8, !dbg !9283
  br label %for.cond114, !dbg !9284, !llvm.loop !9285

for.end144:                                       ; preds = %if.then140, %if.then125, %for.cond114
  br label %sw.epilog, !dbg !9287

sw.epilog:                                        ; preds = %for.end144, %if.end106, %for.end90, %if.end54, %if.then53
  br label %sw.epilog513, !dbg !9288

sw.bb145:                                         ; preds = %if.end15
  %140 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9289
  %matte = getelementptr inbounds %struct._Image, %struct._Image* %140, i32 0, i32 6, !dbg !9292
  %141 = load i32, i32* %matte, align 8, !dbg !9292
  %cmp146 = icmp eq i32 %141, 0, !dbg !9293
  br i1 %cmp146, label %if.then148, label %if.end150, !dbg !9294

if.then148:                                       ; preds = %sw.bb145
  %142 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9295
  %call149 = call i32 @SetImageAlphaChannel(%struct._Image* %142, i32 6), !dbg !9296
  br label %if.end150, !dbg !9297

if.end150:                                        ; preds = %if.then148, %sw.bb145
  %143 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !9298
  %method151 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %143, i32 0, i32 3, !dbg !9299
  %144 = load i32, i32* %method151, align 4, !dbg !9299
  switch i32 %144, label %sw.default153 [
    i32 1, label %sw.bb152
    i32 2, label %sw.bb165
    i32 3, label %sw.bb210
    i32 4, label %sw.bb210
    i32 5, label %sw.bb236
  ], !dbg !9300

sw.bb152:                                         ; preds = %if.end150
  br label %sw.default153, !dbg !9301

sw.default153:                                    ; preds = %if.end150, %sw.bb152
  call void @llvm.dbg.declare(metadata %struct._PixelPacket* %pixel, metadata !9302, metadata !DIExpression()), !dbg !9305
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q154, metadata !9306, metadata !DIExpression()), !dbg !9307
  %145 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !9308
  %146 = load i64, i64* %x, align 8, !dbg !9309
  %147 = load i64, i64* %y, align 8, !dbg !9310
  %148 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !9311
  %call155 = call %struct._PixelPacket* @GetCacheViewAuthenticPixels(%struct._CacheView* %145, i64 %146, i64 %147, i64 1, i64 1, %struct._ExceptionInfo* %148), !dbg !9312
  store %struct._PixelPacket* %call155, %struct._PixelPacket** %q154, align 8, !dbg !9313
  %149 = load %struct._PixelPacket*, %struct._PixelPacket** %q154, align 8, !dbg !9314
  %cmp156 = icmp eq %struct._PixelPacket* %149, null, !dbg !9316
  br i1 %cmp156, label %if.then158, label %if.end159, !dbg !9317

if.then158:                                       ; preds = %sw.default153
  br label %sw.epilog272, !dbg !9318

if.end159:                                        ; preds = %sw.default153
  %150 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !9319
  %151 = load i64, i64* %x, align 8, !dbg !9320
  %152 = load i64, i64* %y, align 8, !dbg !9321
  %call160 = call i32 @GetFillColor(%struct._DrawInfo* %150, i64 %151, i64 %152, %struct._PixelPacket* %pixel), !dbg !9322
  %opacity161 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel, i32 0, i32 3, !dbg !9323
  %153 = load i16, i16* %opacity161, align 2, !dbg !9323
  %154 = load %struct._PixelPacket*, %struct._PixelPacket** %q154, align 8, !dbg !9323
  %opacity162 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %154, i32 0, i32 3, !dbg !9323
  store i16 %153, i16* %opacity162, align 2, !dbg !9323
  %155 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !9324
  %156 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !9325
  %call163 = call i32 @SyncCacheViewAuthenticPixels(%struct._CacheView* %155, %struct._ExceptionInfo* %156), !dbg !9326
  %157 = load i32, i32* %status, align 4, !dbg !9327
  %and164 = and i32 %157, %call163, !dbg !9327
  store i32 %and164, i32* %status, align 4, !dbg !9327
  br label %sw.epilog272, !dbg !9328

sw.bb165:                                         ; preds = %if.end150
  call void @llvm.dbg.declare(metadata i32* %sync166, metadata !9329, metadata !DIExpression()), !dbg !9331
  call void @llvm.dbg.declare(metadata %struct._PixelPacket* %pixel167, metadata !9332, metadata !DIExpression()), !dbg !9333
  call void @llvm.dbg.declare(metadata %struct._PixelPacket* %target168, metadata !9334, metadata !DIExpression()), !dbg !9335
  %158 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !9336
  %159 = load i64, i64* %x, align 8, !dbg !9337
  %160 = load i64, i64* %y, align 8, !dbg !9338
  %161 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !9339
  %call169 = call i32 @GetOneCacheViewVirtualPixel(%struct._CacheView* %158, i64 %159, i64 %160, %struct._PixelPacket* %target168, %struct._ExceptionInfo* %161), !dbg !9340
  %162 = load i32, i32* %status, align 4, !dbg !9341
  %and170 = and i32 %162, %call169, !dbg !9341
  store i32 %and170, i32* %status, align 4, !dbg !9341
  store i64 0, i64* %y, align 8, !dbg !9342
  br label %for.cond171, !dbg !9344

for.cond171:                                      ; preds = %for.inc207, %sw.bb165
  %163 = load i64, i64* %y, align 8, !dbg !9345
  %164 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9347
  %rows172 = getelementptr inbounds %struct._Image, %struct._Image* %164, i32 0, i32 8, !dbg !9348
  %165 = load i64, i64* %rows172, align 8, !dbg !9348
  %cmp173 = icmp slt i64 %163, %165, !dbg !9349
  br i1 %cmp173, label %for.body175, label %for.end209, !dbg !9350

for.body175:                                      ; preds = %for.cond171
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q176, metadata !9351, metadata !DIExpression()), !dbg !9353
  call void @llvm.dbg.declare(metadata i64* %x177, metadata !9354, metadata !DIExpression()), !dbg !9355
  %166 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !9356
  %167 = load i64, i64* %y, align 8, !dbg !9357
  %168 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9358
  %columns178 = getelementptr inbounds %struct._Image, %struct._Image* %168, i32 0, i32 7, !dbg !9359
  %169 = load i64, i64* %columns178, align 8, !dbg !9359
  %170 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !9360
  %call179 = call %struct._PixelPacket* @GetCacheViewAuthenticPixels(%struct._CacheView* %166, i64 0, i64 %167, i64 %169, i64 1, %struct._ExceptionInfo* %170), !dbg !9361
  store %struct._PixelPacket* %call179, %struct._PixelPacket** %q176, align 8, !dbg !9362
  %171 = load %struct._PixelPacket*, %struct._PixelPacket** %q176, align 8, !dbg !9363
  %cmp180 = icmp eq %struct._PixelPacket* %171, null, !dbg !9365
  br i1 %cmp180, label %if.then182, label %if.end183, !dbg !9366

if.then182:                                       ; preds = %for.body175
  br label %for.end209, !dbg !9367

if.end183:                                        ; preds = %for.body175
  store i64 0, i64* %x177, align 8, !dbg !9368
  br label %for.cond184, !dbg !9370

for.cond184:                                      ; preds = %for.inc199, %if.end183
  %172 = load i64, i64* %x177, align 8, !dbg !9371
  %173 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9373
  %columns185 = getelementptr inbounds %struct._Image, %struct._Image* %173, i32 0, i32 7, !dbg !9374
  %174 = load i64, i64* %columns185, align 8, !dbg !9374
  %cmp186 = icmp slt i64 %172, %174, !dbg !9375
  br i1 %cmp186, label %for.body188, label %for.end201, !dbg !9376

for.body188:                                      ; preds = %for.cond184
  %175 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9377
  %176 = load %struct._PixelPacket*, %struct._PixelPacket** %q176, align 8, !dbg !9380
  %call189 = call i32 @IsColorSimilar(%struct._Image* %175, %struct._PixelPacket* %176, %struct._PixelPacket* %target168), !dbg !9381
  %cmp190 = icmp eq i32 %call189, 0, !dbg !9382
  br i1 %cmp190, label %if.then192, label %if.end194, !dbg !9383

if.then192:                                       ; preds = %for.body188
  %177 = load %struct._PixelPacket*, %struct._PixelPacket** %q176, align 8, !dbg !9384
  %incdec.ptr193 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %177, i32 1, !dbg !9384
  store %struct._PixelPacket* %incdec.ptr193, %struct._PixelPacket** %q176, align 8, !dbg !9384
  br label %for.inc199, !dbg !9386

if.end194:                                        ; preds = %for.body188
  %178 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !9387
  %179 = load i64, i64* %x177, align 8, !dbg !9388
  %180 = load i64, i64* %y, align 8, !dbg !9389
  %call195 = call i32 @GetFillColor(%struct._DrawInfo* %178, i64 %179, i64 %180, %struct._PixelPacket* %pixel167), !dbg !9390
  %opacity196 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel167, i32 0, i32 3, !dbg !9391
  %181 = load i16, i16* %opacity196, align 2, !dbg !9391
  %182 = load %struct._PixelPacket*, %struct._PixelPacket** %q176, align 8, !dbg !9391
  %opacity197 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %182, i32 0, i32 3, !dbg !9391
  store i16 %181, i16* %opacity197, align 2, !dbg !9391
  %183 = load %struct._PixelPacket*, %struct._PixelPacket** %q176, align 8, !dbg !9392
  %incdec.ptr198 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %183, i32 1, !dbg !9392
  store %struct._PixelPacket* %incdec.ptr198, %struct._PixelPacket** %q176, align 8, !dbg !9392
  br label %for.inc199, !dbg !9393

for.inc199:                                       ; preds = %if.end194, %if.then192
  %184 = load i64, i64* %x177, align 8, !dbg !9394
  %inc200 = add nsw i64 %184, 1, !dbg !9394
  store i64 %inc200, i64* %x177, align 8, !dbg !9394
  br label %for.cond184, !dbg !9395, !llvm.loop !9396

for.end201:                                       ; preds = %for.cond184
  %185 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !9398
  %186 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !9399
  %call202 = call i32 @SyncCacheViewAuthenticPixels(%struct._CacheView* %185, %struct._ExceptionInfo* %186), !dbg !9400
  store i32 %call202, i32* %sync166, align 4, !dbg !9401
  %187 = load i32, i32* %sync166, align 4, !dbg !9402
  %cmp203 = icmp eq i32 %187, 0, !dbg !9404
  br i1 %cmp203, label %if.then205, label %if.end206, !dbg !9405

if.then205:                                       ; preds = %for.end201
  br label %for.end209, !dbg !9406

if.end206:                                        ; preds = %for.end201
  br label %for.inc207, !dbg !9407

for.inc207:                                       ; preds = %if.end206
  %188 = load i64, i64* %y, align 8, !dbg !9408
  %inc208 = add nsw i64 %188, 1, !dbg !9408
  store i64 %inc208, i64* %y, align 8, !dbg !9408
  br label %for.cond171, !dbg !9409, !llvm.loop !9410

for.end209:                                       ; preds = %if.then205, %if.then182, %for.cond171
  br label %sw.epilog272, !dbg !9412

sw.bb210:                                         ; preds = %if.end150, %if.end150
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket* %target211, metadata !9413, metadata !DIExpression()), !dbg !9415
  %189 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9416
  %190 = load i64, i64* %x, align 8, !dbg !9417
  %191 = load i64, i64* %y, align 8, !dbg !9418
  %192 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !9419
  %call212 = call i32 @GetOneVirtualMagickPixel(%struct._Image* %189, i64 %190, i64 %191, %struct._MagickPixelPacket* %target211, %struct._ExceptionInfo* %192), !dbg !9420
  %193 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !9421
  %method213 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %193, i32 0, i32 3, !dbg !9423
  %194 = load i32, i32* %method213, align 4, !dbg !9423
  %cmp214 = icmp eq i32 %194, 4, !dbg !9424
  br i1 %cmp214, label %if.then216, label %if.end229, !dbg !9425

if.then216:                                       ; preds = %sw.bb210
  %195 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !9426
  %border_color217 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %195, i32 0, i32 34, !dbg !9428
  %red218 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %border_color217, i32 0, i32 2, !dbg !9429
  %196 = load i16, i16* %red218, align 4, !dbg !9429
  %conv219 = uitofp i16 %196 to float, !dbg !9430
  %red220 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %target211, i32 0, i32 5, !dbg !9431
  store float %conv219, float* %red220, align 8, !dbg !9432
  %197 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !9433
  %border_color221 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %197, i32 0, i32 34, !dbg !9434
  %green222 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %border_color221, i32 0, i32 1, !dbg !9435
  %198 = load i16, i16* %green222, align 2, !dbg !9435
  %conv223 = uitofp i16 %198 to float, !dbg !9436
  %green224 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %target211, i32 0, i32 6, !dbg !9437
  store float %conv223, float* %green224, align 4, !dbg !9438
  %199 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !9439
  %border_color225 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %199, i32 0, i32 34, !dbg !9440
  %blue226 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %border_color225, i32 0, i32 0, !dbg !9441
  %200 = load i16, i16* %blue226, align 4, !dbg !9441
  %conv227 = uitofp i16 %200 to float, !dbg !9442
  %blue228 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %target211, i32 0, i32 7, !dbg !9443
  store float %conv227, float* %blue228, align 8, !dbg !9444
  br label %if.end229, !dbg !9445

if.end229:                                        ; preds = %if.then216, %sw.bb210
  %201 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9446
  %202 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !9447
  %203 = load i64, i64* %x, align 8, !dbg !9448
  %204 = load i64, i64* %y, align 8, !dbg !9449
  %205 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !9450
  %method230 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %205, i32 0, i32 3, !dbg !9451
  %206 = load i32, i32* %method230, align 4, !dbg !9451
  %cmp231 = icmp eq i32 %206, 3, !dbg !9452
  %207 = zext i1 %cmp231 to i64, !dbg !9450
  %cond233 = select i1 %cmp231, i32 0, i32 1, !dbg !9450
  %call234 = call i32 @FloodfillPaintImage(%struct._Image* %201, i32 8, %struct._DrawInfo* %202, %struct._MagickPixelPacket* %target211, i64 %203, i64 %204, i32 %cond233), !dbg !9453
  %208 = load i32, i32* %status, align 4, !dbg !9454
  %and235 = and i32 %208, %call234, !dbg !9454
  store i32 %and235, i32* %status, align 4, !dbg !9454
  br label %sw.epilog272, !dbg !9455

sw.bb236:                                         ; preds = %if.end150
  call void @llvm.dbg.declare(metadata i32* %sync237, metadata !9456, metadata !DIExpression()), !dbg !9458
  call void @llvm.dbg.declare(metadata %struct._PixelPacket* %pixel238, metadata !9459, metadata !DIExpression()), !dbg !9460
  store i64 0, i64* %y, align 8, !dbg !9461
  br label %for.cond239, !dbg !9463

for.cond239:                                      ; preds = %for.inc269, %sw.bb236
  %209 = load i64, i64* %y, align 8, !dbg !9464
  %210 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9466
  %rows240 = getelementptr inbounds %struct._Image, %struct._Image* %210, i32 0, i32 8, !dbg !9467
  %211 = load i64, i64* %rows240, align 8, !dbg !9467
  %cmp241 = icmp slt i64 %209, %211, !dbg !9468
  br i1 %cmp241, label %for.body243, label %for.end271, !dbg !9469

for.body243:                                      ; preds = %for.cond239
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q244, metadata !9470, metadata !DIExpression()), !dbg !9472
  call void @llvm.dbg.declare(metadata i64* %x245, metadata !9473, metadata !DIExpression()), !dbg !9474
  %212 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !9475
  %213 = load i64, i64* %y, align 8, !dbg !9476
  %214 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9477
  %columns246 = getelementptr inbounds %struct._Image, %struct._Image* %214, i32 0, i32 7, !dbg !9478
  %215 = load i64, i64* %columns246, align 8, !dbg !9478
  %216 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !9479
  %call247 = call %struct._PixelPacket* @GetCacheViewAuthenticPixels(%struct._CacheView* %212, i64 0, i64 %213, i64 %215, i64 1, %struct._ExceptionInfo* %216), !dbg !9480
  store %struct._PixelPacket* %call247, %struct._PixelPacket** %q244, align 8, !dbg !9481
  %217 = load %struct._PixelPacket*, %struct._PixelPacket** %q244, align 8, !dbg !9482
  %cmp248 = icmp eq %struct._PixelPacket* %217, null, !dbg !9484
  br i1 %cmp248, label %if.then250, label %if.end251, !dbg !9485

if.then250:                                       ; preds = %for.body243
  br label %for.end271, !dbg !9486

if.end251:                                        ; preds = %for.body243
  store i64 0, i64* %x245, align 8, !dbg !9487
  br label %for.cond252, !dbg !9489

for.cond252:                                      ; preds = %for.inc261, %if.end251
  %218 = load i64, i64* %x245, align 8, !dbg !9490
  %219 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9492
  %columns253 = getelementptr inbounds %struct._Image, %struct._Image* %219, i32 0, i32 7, !dbg !9493
  %220 = load i64, i64* %columns253, align 8, !dbg !9493
  %cmp254 = icmp slt i64 %218, %220, !dbg !9494
  br i1 %cmp254, label %for.body256, label %for.end263, !dbg !9495

for.body256:                                      ; preds = %for.cond252
  %221 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !9496
  %222 = load i64, i64* %x245, align 8, !dbg !9498
  %223 = load i64, i64* %y, align 8, !dbg !9499
  %call257 = call i32 @GetFillColor(%struct._DrawInfo* %221, i64 %222, i64 %223, %struct._PixelPacket* %pixel238), !dbg !9500
  %opacity258 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %pixel238, i32 0, i32 3, !dbg !9501
  %224 = load i16, i16* %opacity258, align 2, !dbg !9501
  %225 = load %struct._PixelPacket*, %struct._PixelPacket** %q244, align 8, !dbg !9501
  %opacity259 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %225, i32 0, i32 3, !dbg !9501
  store i16 %224, i16* %opacity259, align 2, !dbg !9501
  %226 = load %struct._PixelPacket*, %struct._PixelPacket** %q244, align 8, !dbg !9502
  %incdec.ptr260 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %226, i32 1, !dbg !9502
  store %struct._PixelPacket* %incdec.ptr260, %struct._PixelPacket** %q244, align 8, !dbg !9502
  br label %for.inc261, !dbg !9503

for.inc261:                                       ; preds = %for.body256
  %227 = load i64, i64* %x245, align 8, !dbg !9504
  %inc262 = add nsw i64 %227, 1, !dbg !9504
  store i64 %inc262, i64* %x245, align 8, !dbg !9504
  br label %for.cond252, !dbg !9505, !llvm.loop !9506

for.end263:                                       ; preds = %for.cond252
  %228 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !9508
  %229 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !9509
  %call264 = call i32 @SyncCacheViewAuthenticPixels(%struct._CacheView* %228, %struct._ExceptionInfo* %229), !dbg !9510
  store i32 %call264, i32* %sync237, align 4, !dbg !9511
  %230 = load i32, i32* %sync237, align 4, !dbg !9512
  %cmp265 = icmp eq i32 %230, 0, !dbg !9514
  br i1 %cmp265, label %if.then267, label %if.end268, !dbg !9515

if.then267:                                       ; preds = %for.end263
  br label %for.end271, !dbg !9516

if.end268:                                        ; preds = %for.end263
  br label %for.inc269, !dbg !9517

for.inc269:                                       ; preds = %if.end268
  %231 = load i64, i64* %y, align 8, !dbg !9518
  %inc270 = add nsw i64 %231, 1, !dbg !9518
  store i64 %inc270, i64* %y, align 8, !dbg !9518
  br label %for.cond239, !dbg !9519, !llvm.loop !9520

for.end271:                                       ; preds = %if.then267, %if.then250, %for.cond239
  br label %sw.epilog272, !dbg !9522

sw.epilog272:                                     ; preds = %for.end271, %if.end229, %for.end209, %if.end159, %if.then158
  br label %sw.epilog513, !dbg !9523

sw.bb273:                                         ; preds = %if.end15
  call void @llvm.dbg.declare(metadata [4096 x i8]* %geometry, metadata !9524, metadata !DIExpression()), !dbg !9526
  call void @llvm.dbg.declare(metadata %struct._DrawInfo** %clone_info, metadata !9527, metadata !DIExpression()), !dbg !9528
  %232 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !9529
  %text = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %232, i32 0, i32 4, !dbg !9531
  %233 = load i8*, i8** %text, align 8, !dbg !9531
  %cmp274 = icmp eq i8* %233, null, !dbg !9532
  br i1 %cmp274, label %if.then276, label %if.end277, !dbg !9533

if.then276:                                       ; preds = %sw.bb273
  br label %sw.epilog513, !dbg !9534

if.end277:                                        ; preds = %sw.bb273
  %234 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !9535
  %call278 = call %struct._DrawInfo* @CloneDrawInfo(%struct._ImageInfo* null, %struct._DrawInfo* %234), !dbg !9536
  store %struct._DrawInfo* %call278, %struct._DrawInfo** %clone_info, align 8, !dbg !9537
  %235 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info, align 8, !dbg !9538
  %text279 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %235, i32 0, i32 21, !dbg !9539
  %236 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !9540
  %text280 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %236, i32 0, i32 4, !dbg !9541
  %237 = load i8*, i8** %text280, align 8, !dbg !9541
  %call281 = call i8* @CloneString(i8** %text279, i8* %237), !dbg !9542
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %geometry, i64 0, i64 0, !dbg !9543
  %238 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !9544
  %point282 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %238, i32 0, i32 0, !dbg !9545
  %x283 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point282, i32 0, i32 0, !dbg !9546
  %239 = load double, double* %x283, align 8, !dbg !9546
  %240 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !9547
  %point284 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %240, i32 0, i32 0, !dbg !9548
  %y285 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point284, i32 0, i32 1, !dbg !9549
  %241 = load double, double* %y285, align 8, !dbg !9549
  %call286 = call i64 (i8*, i64, i8*, ...) @FormatLocaleString(i8* %arraydecay, i64 4096, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.99, i64 0, i64 0), double %239, double %241), !dbg !9550
  %242 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info, align 8, !dbg !9551
  %geometry287 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %242, i32 0, i32 1, !dbg !9552
  %arraydecay288 = getelementptr inbounds [4096 x i8], [4096 x i8]* %geometry, i64 0, i64 0, !dbg !9553
  %call289 = call i8* @CloneString(i8** %geometry287, i8* %arraydecay288), !dbg !9554
  %243 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9555
  %244 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info, align 8, !dbg !9556
  %call290 = call i32 @AnnotateImage(%struct._Image* %243, %struct._DrawInfo* %244), !dbg !9557
  %245 = load i32, i32* %status, align 4, !dbg !9558
  %and291 = and i32 %245, %call290, !dbg !9558
  store i32 %and291, i32* %status, align 4, !dbg !9558
  %246 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info, align 8, !dbg !9559
  %call292 = call %struct._DrawInfo* @DestroyDrawInfo(%struct._DrawInfo* %246), !dbg !9560
  store %struct._DrawInfo* %call292, %struct._DrawInfo** %clone_info, align 8, !dbg !9561
  br label %sw.epilog513, !dbg !9562

sw.bb293:                                         ; preds = %if.end15
  call void @llvm.dbg.declare(metadata %struct._AffineMatrix* %affine294, metadata !9563, metadata !DIExpression()), !dbg !9565
  call void @llvm.dbg.declare(metadata [4096 x i8]* %composite_geometry, metadata !9566, metadata !DIExpression()), !dbg !9567
  call void @llvm.dbg.declare(metadata %struct._Image** %composite_image, metadata !9568, metadata !DIExpression()), !dbg !9569
  call void @llvm.dbg.declare(metadata %struct._ImageInfo** %clone_info295, metadata !9570, metadata !DIExpression()), !dbg !9571
  call void @llvm.dbg.declare(metadata %struct._RectangleInfo* %geometry296, metadata !9572, metadata !DIExpression()), !dbg !9573
  call void @llvm.dbg.declare(metadata i64* %x1, metadata !9574, metadata !DIExpression()), !dbg !9575
  call void @llvm.dbg.declare(metadata i64* %y1, metadata !9576, metadata !DIExpression()), !dbg !9577
  %247 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !9578
  %text297 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %247, i32 0, i32 4, !dbg !9580
  %248 = load i8*, i8** %text297, align 8, !dbg !9580
  %cmp298 = icmp eq i8* %248, null, !dbg !9581
  br i1 %cmp298, label %if.then300, label %if.end301, !dbg !9582

if.then300:                                       ; preds = %sw.bb293
  br label %sw.epilog513, !dbg !9583

if.end301:                                        ; preds = %sw.bb293
  %call302 = call %struct._ImageInfo* @AcquireImageInfo(), !dbg !9584
  store %struct._ImageInfo* %call302, %struct._ImageInfo** %clone_info295, align 8, !dbg !9585
  %249 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !9586
  %text303 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %249, i32 0, i32 4, !dbg !9588
  %250 = load i8*, i8** %text303, align 8, !dbg !9588
  %call304 = call i32 @LocaleNCompare(i8* %250, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.100, i64 0, i64 0), i64 5), !dbg !9589
  %cmp305 = icmp eq i32 %call304, 0, !dbg !9590
  br i1 %cmp305, label %if.then307, label %if.else, !dbg !9591

if.then307:                                       ; preds = %if.end301
  %251 = load %struct._ImageInfo*, %struct._ImageInfo** %clone_info295, align 8, !dbg !9592
  %252 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !9593
  %text308 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %252, i32 0, i32 4, !dbg !9594
  %253 = load i8*, i8** %text308, align 8, !dbg !9594
  %254 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9595
  %exception309 = getelementptr inbounds %struct._Image, %struct._Image* %254, i32 0, i32 58, !dbg !9596
  %call310 = call %struct._Image* @ReadInlineImage(%struct._ImageInfo* %251, i8* %253, %struct._ExceptionInfo* %exception309), !dbg !9597
  store %struct._Image* %call310, %struct._Image** %composite_image, align 8, !dbg !9598
  br label %if.end316, !dbg !9599

if.else:                                          ; preds = %if.end301
  %255 = load %struct._ImageInfo*, %struct._ImageInfo** %clone_info295, align 8, !dbg !9600
  %filename = getelementptr inbounds %struct._ImageInfo, %struct._ImageInfo* %255, i32 0, i32 51, !dbg !9602
  %arraydecay311 = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !9600
  %256 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !9603
  %text312 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %256, i32 0, i32 4, !dbg !9604
  %257 = load i8*, i8** %text312, align 8, !dbg !9604
  %call313 = call i64 @CopyMagickString(i8* %arraydecay311, i8* %257, i64 4096), !dbg !9605
  %258 = load %struct._ImageInfo*, %struct._ImageInfo** %clone_info295, align 8, !dbg !9606
  %259 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9607
  %exception314 = getelementptr inbounds %struct._Image, %struct._Image* %259, i32 0, i32 58, !dbg !9608
  %call315 = call %struct._Image* @ReadImage(%struct._ImageInfo* %258, %struct._ExceptionInfo* %exception314), !dbg !9609
  store %struct._Image* %call315, %struct._Image** %composite_image, align 8, !dbg !9610
  br label %if.end316

if.end316:                                        ; preds = %if.else, %if.then307
  %260 = load %struct._ImageInfo*, %struct._ImageInfo** %clone_info295, align 8, !dbg !9611
  %call317 = call %struct._ImageInfo* @DestroyImageInfo(%struct._ImageInfo* %260), !dbg !9612
  store %struct._ImageInfo* %call317, %struct._ImageInfo** %clone_info295, align 8, !dbg !9613
  %261 = load %struct._Image*, %struct._Image** %composite_image, align 8, !dbg !9614
  %cmp318 = icmp eq %struct._Image* %261, null, !dbg !9616
  br i1 %cmp318, label %if.then320, label %if.end321, !dbg !9617

if.then320:                                       ; preds = %if.end316
  br label %sw.epilog513, !dbg !9618

if.end321:                                        ; preds = %if.end316
  %262 = load %struct._Image*, %struct._Image** %composite_image, align 8, !dbg !9619
  %call322 = call i32 (i8*, i64, i64, i8*)* @SetImageProgressMonitor(%struct._Image* %262, i32 (i8*, i64, i64, i8*)* null, i8* null), !dbg !9620
  %263 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !9621
  %arrayidx = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %263, i64 1, !dbg !9621
  %point323 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx, i32 0, i32 0, !dbg !9622
  %x324 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point323, i32 0, i32 0, !dbg !9623
  %264 = load double, double* %x324, align 8, !dbg !9623
  %sub325 = fsub double %264, 5.000000e-01, !dbg !9624
  %265 = call double @llvm.ceil.f64(double %sub325), !dbg !9625
  %conv326 = fptosi double %265 to i64, !dbg !9626
  store i64 %conv326, i64* %x1, align 8, !dbg !9627
  %266 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !9628
  %arrayidx327 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %266, i64 1, !dbg !9628
  %point328 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx327, i32 0, i32 0, !dbg !9629
  %y329 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point328, i32 0, i32 1, !dbg !9630
  %267 = load double, double* %y329, align 8, !dbg !9630
  %sub330 = fsub double %267, 5.000000e-01, !dbg !9631
  %268 = call double @llvm.ceil.f64(double %sub330), !dbg !9632
  %conv331 = fptosi double %268 to i64, !dbg !9633
  store i64 %conv331, i64* %y1, align 8, !dbg !9634
  %269 = load i64, i64* %x1, align 8, !dbg !9635
  %cmp332 = icmp ne i64 %269, 0, !dbg !9637
  br i1 %cmp332, label %land.lhs.true334, label %lor.lhs.false338, !dbg !9638

land.lhs.true334:                                 ; preds = %if.end321
  %270 = load i64, i64* %x1, align 8, !dbg !9639
  %271 = load %struct._Image*, %struct._Image** %composite_image, align 8, !dbg !9640
  %columns335 = getelementptr inbounds %struct._Image, %struct._Image* %271, i32 0, i32 7, !dbg !9641
  %272 = load i64, i64* %columns335, align 8, !dbg !9641
  %cmp336 = icmp ne i64 %270, %272, !dbg !9642
  br i1 %cmp336, label %if.then345, label %lor.lhs.false338, !dbg !9643

lor.lhs.false338:                                 ; preds = %land.lhs.true334, %if.end321
  %273 = load i64, i64* %y1, align 8, !dbg !9644
  %cmp339 = icmp ne i64 %273, 0, !dbg !9645
  br i1 %cmp339, label %land.lhs.true341, label %if.end358, !dbg !9646

land.lhs.true341:                                 ; preds = %lor.lhs.false338
  %274 = load i64, i64* %y1, align 8, !dbg !9647
  %275 = load %struct._Image*, %struct._Image** %composite_image, align 8, !dbg !9648
  %rows342 = getelementptr inbounds %struct._Image, %struct._Image* %275, i32 0, i32 8, !dbg !9649
  %276 = load i64, i64* %rows342, align 8, !dbg !9649
  %cmp343 = icmp ne i64 %274, %276, !dbg !9650
  br i1 %cmp343, label %if.then345, label %if.end358, !dbg !9651

if.then345:                                       ; preds = %land.lhs.true341, %land.lhs.true334
  call void @llvm.dbg.declare(metadata [4096 x i8]* %geometry346, metadata !9652, metadata !DIExpression()), !dbg !9654
  %arraydecay347 = getelementptr inbounds [4096 x i8], [4096 x i8]* %geometry346, i64 0, i64 0, !dbg !9655
  %277 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !9656
  %arrayidx348 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %277, i64 1, !dbg !9656
  %point349 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx348, i32 0, i32 0, !dbg !9657
  %x350 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point349, i32 0, i32 0, !dbg !9658
  %278 = load double, double* %x350, align 8, !dbg !9658
  %279 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !9659
  %arrayidx351 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %279, i64 1, !dbg !9659
  %point352 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx351, i32 0, i32 0, !dbg !9660
  %y353 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point352, i32 0, i32 1, !dbg !9661
  %280 = load double, double* %y353, align 8, !dbg !9661
  %call354 = call i64 (i8*, i64, i8*, ...) @FormatLocaleString(i8* %arraydecay347, i64 4096, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.101, i64 0, i64 0), double %278, double %280), !dbg !9662
  %281 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9663
  %filter = getelementptr inbounds %struct._Image, %struct._Image* %281, i32 0, i32 32, !dbg !9664
  %282 = load i32, i32* %filter, align 8, !dbg !9664
  %283 = load %struct._Image*, %struct._Image** %composite_image, align 8, !dbg !9665
  %filter355 = getelementptr inbounds %struct._Image, %struct._Image* %283, i32 0, i32 32, !dbg !9666
  store i32 %282, i32* %filter355, align 8, !dbg !9667
  %arraydecay356 = getelementptr inbounds [4096 x i8], [4096 x i8]* %geometry346, i64 0, i64 0, !dbg !9668
  %call357 = call i32 @TransformImage(%struct._Image** %composite_image, i8* null, i8* %arraydecay356), !dbg !9669
  br label %if.end358, !dbg !9670

if.end358:                                        ; preds = %if.then345, %land.lhs.true341, %lor.lhs.false338
  %284 = load %struct._Image*, %struct._Image** %composite_image, align 8, !dbg !9671
  %matte359 = getelementptr inbounds %struct._Image, %struct._Image* %284, i32 0, i32 6, !dbg !9673
  %285 = load i32, i32* %matte359, align 8, !dbg !9673
  %cmp360 = icmp eq i32 %285, 0, !dbg !9674
  br i1 %cmp360, label %if.then362, label %if.end364, !dbg !9675

if.then362:                                       ; preds = %if.end358
  %286 = load %struct._Image*, %struct._Image** %composite_image, align 8, !dbg !9676
  %call363 = call i32 @SetImageAlphaChannel(%struct._Image* %286, i32 6), !dbg !9677
  br label %if.end364, !dbg !9678

if.end364:                                        ; preds = %if.then362, %if.end358
  %287 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !9679
  %opacity365 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %287, i32 0, i32 40, !dbg !9681
  %288 = load i16, i16* %opacity365, align 4, !dbg !9681
  %conv366 = zext i16 %288 to i32, !dbg !9679
  %cmp367 = icmp ne i32 %conv366, 0, !dbg !9682
  br i1 %cmp367, label %if.then369, label %if.end372, !dbg !9683

if.then369:                                       ; preds = %if.end364
  %289 = load %struct._Image*, %struct._Image** %composite_image, align 8, !dbg !9684
  %290 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !9685
  %opacity370 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %290, i32 0, i32 40, !dbg !9686
  %291 = load i16, i16* %opacity370, align 4, !dbg !9686
  %call371 = call i32 @SetImageOpacity(%struct._Image* %289, i16 zeroext %291), !dbg !9687
  br label %if.end372, !dbg !9688

if.end372:                                        ; preds = %if.then369, %if.end364
  %292 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9689
  call void @SetGeometry(%struct._Image* %292, %struct._RectangleInfo* %geometry296), !dbg !9690
  %293 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !9691
  %gravity = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %293, i32 0, i32 4, !dbg !9692
  %294 = load i32, i32* %gravity, align 8, !dbg !9692
  %295 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9693
  %gravity373 = getelementptr inbounds %struct._Image, %struct._Image* %295, i32 0, i32 35, !dbg !9694
  store i32 %294, i32* %gravity373, align 4, !dbg !9695
  %296 = load i64, i64* %x, align 8, !dbg !9696
  %x374 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %geometry296, i32 0, i32 2, !dbg !9697
  store i64 %296, i64* %x374, align 8, !dbg !9698
  %297 = load i64, i64* %y, align 8, !dbg !9699
  %y375 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %geometry296, i32 0, i32 3, !dbg !9700
  store i64 %297, i64* %y375, align 8, !dbg !9701
  %arraydecay376 = getelementptr inbounds [4096 x i8], [4096 x i8]* %composite_geometry, i64 0, i64 0, !dbg !9702
  %298 = load %struct._Image*, %struct._Image** %composite_image, align 8, !dbg !9703
  %columns377 = getelementptr inbounds %struct._Image, %struct._Image* %298, i32 0, i32 7, !dbg !9704
  %299 = load i64, i64* %columns377, align 8, !dbg !9704
  %conv378 = uitofp i64 %299 to double, !dbg !9705
  %300 = load %struct._Image*, %struct._Image** %composite_image, align 8, !dbg !9706
  %rows379 = getelementptr inbounds %struct._Image, %struct._Image* %300, i32 0, i32 8, !dbg !9707
  %301 = load i64, i64* %rows379, align 8, !dbg !9707
  %conv380 = uitofp i64 %301 to double, !dbg !9708
  %x381 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %geometry296, i32 0, i32 2, !dbg !9709
  %302 = load i64, i64* %x381, align 8, !dbg !9709
  %conv382 = sitofp i64 %302 to double, !dbg !9710
  %y383 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %geometry296, i32 0, i32 3, !dbg !9711
  %303 = load i64, i64* %y383, align 8, !dbg !9711
  %conv384 = sitofp i64 %303 to double, !dbg !9712
  %call385 = call i64 (i8*, i64, i8*, ...) @FormatLocaleString(i8* %arraydecay376, i64 4096, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.66, i64 0, i64 0), double %conv378, double %conv380, double %conv382, double %conv384), !dbg !9713
  %304 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9714
  %arraydecay386 = getelementptr inbounds [4096 x i8], [4096 x i8]* %composite_geometry, i64 0, i64 0, !dbg !9715
  %305 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9716
  %exception387 = getelementptr inbounds %struct._Image, %struct._Image* %305, i32 0, i32 58, !dbg !9717
  %call388 = call i32 @ParseGravityGeometry(%struct._Image* %304, i8* %arraydecay386, %struct._RectangleInfo* %geometry296, %struct._ExceptionInfo* %exception387), !dbg !9718
  %306 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !9719
  %affine389 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %306, i32 0, i32 3, !dbg !9720
  %307 = bitcast %struct._AffineMatrix* %affine294 to i8*, !dbg !9720
  %308 = bitcast %struct._AffineMatrix* %affine389 to i8*, !dbg !9720
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %307, i8* align 8 %308, i64 48, i1 false), !dbg !9720
  %x390 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %geometry296, i32 0, i32 2, !dbg !9721
  %309 = load i64, i64* %x390, align 8, !dbg !9721
  %conv391 = sitofp i64 %309 to double, !dbg !9722
  %tx392 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %affine294, i32 0, i32 4, !dbg !9723
  store double %conv391, double* %tx392, align 8, !dbg !9724
  %y393 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %geometry296, i32 0, i32 3, !dbg !9725
  %310 = load i64, i64* %y393, align 8, !dbg !9725
  %conv394 = sitofp i64 %310 to double, !dbg !9726
  %ty395 = getelementptr inbounds %struct._AffineMatrix, %struct._AffineMatrix* %affine294, i32 0, i32 5, !dbg !9727
  store double %conv394, double* %ty395, align 8, !dbg !9728
  %311 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9729
  %interpolate = getelementptr inbounds %struct._Image, %struct._Image* %311, i32 0, i32 70, !dbg !9730
  %312 = load i32, i32* %interpolate, align 8, !dbg !9730
  %313 = load %struct._Image*, %struct._Image** %composite_image, align 8, !dbg !9731
  %interpolate396 = getelementptr inbounds %struct._Image, %struct._Image* %313, i32 0, i32 70, !dbg !9732
  store i32 %312, i32* %interpolate396, align 8, !dbg !9733
  %314 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !9734
  %compose = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %314, i32 0, i32 20, !dbg !9736
  %315 = load i32, i32* %compose, align 4, !dbg !9736
  %cmp397 = icmp eq i32 %315, 40, !dbg !9737
  br i1 %cmp397, label %if.then399, label %if.else401, !dbg !9738

if.then399:                                       ; preds = %if.end372
  %316 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9739
  %317 = load %struct._Image*, %struct._Image** %composite_image, align 8, !dbg !9740
  %call400 = call i32 @DrawAffineImage(%struct._Image* %316, %struct._Image* %317, %struct._AffineMatrix* %affine294), !dbg !9741
  br label %if.end406, !dbg !9742

if.else401:                                       ; preds = %if.end372
  %318 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9743
  %319 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !9744
  %compose402 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %319, i32 0, i32 20, !dbg !9745
  %320 = load i32, i32* %compose402, align 4, !dbg !9745
  %321 = load %struct._Image*, %struct._Image** %composite_image, align 8, !dbg !9746
  %x403 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %geometry296, i32 0, i32 2, !dbg !9747
  %322 = load i64, i64* %x403, align 8, !dbg !9747
  %y404 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %geometry296, i32 0, i32 3, !dbg !9748
  %323 = load i64, i64* %y404, align 8, !dbg !9748
  %call405 = call i32 @CompositeImage(%struct._Image* %318, i32 %320, %struct._Image* %321, i64 %322, i64 %323), !dbg !9749
  br label %if.end406

if.end406:                                        ; preds = %if.else401, %if.then399
  %324 = load %struct._Image*, %struct._Image** %composite_image, align 8, !dbg !9750
  %call407 = call %struct._Image* @DestroyImage(%struct._Image* %324), !dbg !9751
  store %struct._Image* %call407, %struct._Image** %composite_image, align 8, !dbg !9752
  br label %sw.epilog513, !dbg !9753

sw.default408:                                    ; preds = %if.end15
  call void @llvm.dbg.declare(metadata double* %mid, metadata !9754, metadata !DIExpression()), !dbg !9756
  call void @llvm.dbg.declare(metadata double* %scale, metadata !9757, metadata !DIExpression()), !dbg !9758
  call void @llvm.dbg.declare(metadata %struct._DrawInfo** %clone_info409, metadata !9759, metadata !DIExpression()), !dbg !9760
  %call410 = call i32 @IsEventLogging(), !dbg !9761
  %cmp411 = icmp ne i32 %call410, 0, !dbg !9763
  br i1 %cmp411, label %if.then413, label %if.end414, !dbg !9764

if.then413:                                       ; preds = %sw.default408
  %325 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !9765
  call void @LogPrimitiveInfo(%struct._PrimitiveInfo* %325), !dbg !9766
  br label %if.end414, !dbg !9766

if.end414:                                        ; preds = %if.then413, %sw.default408
  %326 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !9767
  %affine415 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %326, i32 0, i32 3, !dbg !9768
  %call416 = call double @ExpandAffine(%struct._AffineMatrix* %affine415), !dbg !9769
  store double %call416, double* %scale, align 8, !dbg !9770
  %327 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !9771
  %dash_pattern = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %327, i32 0, i32 36, !dbg !9773
  %328 = load double*, double** %dash_pattern, align 8, !dbg !9773
  %cmp417 = icmp ne double* %328, null, !dbg !9774
  br i1 %cmp417, label %land.lhs.true419, label %if.end442, !dbg !9775

land.lhs.true419:                                 ; preds = %if.end414
  %329 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !9776
  %dash_pattern420 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %329, i32 0, i32 36, !dbg !9777
  %330 = load double*, double** %dash_pattern420, align 8, !dbg !9777
  %arrayidx421 = getelementptr inbounds double, double* %330, i64 0, !dbg !9776
  %331 = load double, double* %arrayidx421, align 8, !dbg !9776
  %cmp422 = fcmp une double %331, 0.000000e+00, !dbg !9778
  br i1 %cmp422, label %land.lhs.true424, label %if.end442, !dbg !9779

land.lhs.true424:                                 ; preds = %land.lhs.true419
  %332 = load double, double* %scale, align 8, !dbg !9780
  %333 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !9781
  %stroke_width = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %333, i32 0, i32 7, !dbg !9782
  %334 = load double, double* %stroke_width, align 8, !dbg !9782
  %mul = fmul double %332, %334, !dbg !9783
  %cmp425 = fcmp oge double %mul, 1.000000e-15, !dbg !9784
  br i1 %cmp425, label %land.lhs.true427, label %if.end442, !dbg !9785

land.lhs.true427:                                 ; preds = %land.lhs.true424
  %335 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !9786
  %stroke428 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %335, i32 0, i32 6, !dbg !9787
  %opacity429 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %stroke428, i32 0, i32 3, !dbg !9788
  %336 = load i16, i16* %opacity429, align 2, !dbg !9788
  %conv430 = zext i16 %336 to i32, !dbg !9786
  %cmp431 = icmp ne i32 %conv430, 65535, !dbg !9789
  br i1 %cmp431, label %if.then433, label %if.end442, !dbg !9790

if.then433:                                       ; preds = %land.lhs.true427
  %337 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !9791
  %call434 = call %struct._DrawInfo* @CloneDrawInfo(%struct._ImageInfo* null, %struct._DrawInfo* %337), !dbg !9793
  store %struct._DrawInfo* %call434, %struct._DrawInfo** %clone_info409, align 8, !dbg !9794
  %338 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info409, align 8, !dbg !9795
  %stroke_width435 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %338, i32 0, i32 7, !dbg !9796
  store double 0.000000e+00, double* %stroke_width435, align 8, !dbg !9797
  %339 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info409, align 8, !dbg !9798
  %stroke436 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %339, i32 0, i32 6, !dbg !9799
  %opacity437 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %stroke436, i32 0, i32 3, !dbg !9800
  store i16 -1, i16* %opacity437, align 2, !dbg !9801
  %340 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9802
  %341 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info409, align 8, !dbg !9803
  %342 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !9804
  %call438 = call i32 @DrawPolygonPrimitive(%struct._Image* %340, %struct._DrawInfo* %341, %struct._PrimitiveInfo* %342), !dbg !9805
  %343 = load i32, i32* %status, align 4, !dbg !9806
  %and439 = and i32 %343, %call438, !dbg !9806
  store i32 %and439, i32* %status, align 4, !dbg !9806
  %344 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info409, align 8, !dbg !9807
  %call440 = call %struct._DrawInfo* @DestroyDrawInfo(%struct._DrawInfo* %344), !dbg !9808
  store %struct._DrawInfo* %call440, %struct._DrawInfo** %clone_info409, align 8, !dbg !9809
  %345 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !9810
  %346 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !9811
  %347 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9812
  %call441 = call i32 @DrawDashPolygon(%struct._DrawInfo* %345, %struct._PrimitiveInfo* %346, %struct._Image* %347), !dbg !9813
  br label %sw.epilog513, !dbg !9814

if.end442:                                        ; preds = %land.lhs.true427, %land.lhs.true424, %land.lhs.true419, %if.end414
  %348 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !9815
  %affine443 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %348, i32 0, i32 3, !dbg !9816
  %call444 = call double @ExpandAffine(%struct._AffineMatrix* %affine443), !dbg !9817
  %349 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !9818
  %stroke_width445 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %349, i32 0, i32 7, !dbg !9819
  %350 = load double, double* %stroke_width445, align 8, !dbg !9819
  %mul446 = fmul double %call444, %350, !dbg !9820
  %div = fdiv double %mul446, 2.000000e+00, !dbg !9821
  store double %div, double* %mid, align 8, !dbg !9822
  %351 = load double, double* %mid, align 8, !dbg !9823
  %cmp447 = fcmp ogt double %351, 1.000000e+00, !dbg !9825
  br i1 %cmp447, label %land.lhs.true449, label %if.end510, !dbg !9826

land.lhs.true449:                                 ; preds = %if.end442
  %352 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !9827
  %stroke450 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %352, i32 0, i32 6, !dbg !9828
  %opacity451 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %stroke450, i32 0, i32 3, !dbg !9829
  %353 = load i16, i16* %opacity451, align 2, !dbg !9829
  %conv452 = zext i16 %353 to i32, !dbg !9827
  %cmp453 = icmp ne i32 %conv452, 65535, !dbg !9830
  br i1 %cmp453, label %if.then455, label %if.end510, !dbg !9831

if.then455:                                       ; preds = %land.lhs.true449
  call void @llvm.dbg.declare(metadata i32* %closed_path, metadata !9832, metadata !DIExpression()), !dbg !9834
  store i64 0, i64* %i, align 8, !dbg !9835
  br label %for.cond456, !dbg !9837

for.cond456:                                      ; preds = %for.inc462, %if.then455
  %354 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !9838
  %355 = load i64, i64* %i, align 8, !dbg !9840
  %arrayidx457 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %354, i64 %355, !dbg !9838
  %primitive458 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx457, i32 0, i32 2, !dbg !9841
  %356 = load i32, i32* %primitive458, align 8, !dbg !9841
  %cmp459 = icmp ne i32 %356, 0, !dbg !9842
  br i1 %cmp459, label %for.body461, label %for.end464, !dbg !9843

for.body461:                                      ; preds = %for.cond456
  br label %for.inc462, !dbg !9843

for.inc462:                                       ; preds = %for.body461
  %357 = load i64, i64* %i, align 8, !dbg !9844
  %inc463 = add nsw i64 %357, 1, !dbg !9844
  store i64 %inc463, i64* %i, align 8, !dbg !9844
  br label %for.cond456, !dbg !9845, !llvm.loop !9846

for.end464:                                       ; preds = %for.cond456
  %358 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !9848
  %359 = load i64, i64* %i, align 8, !dbg !9849
  %sub465 = sub nsw i64 %359, 1, !dbg !9850
  %arrayidx466 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %358, i64 %sub465, !dbg !9848
  %point467 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx466, i32 0, i32 0, !dbg !9851
  %x468 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point467, i32 0, i32 0, !dbg !9852
  %360 = load double, double* %x468, align 8, !dbg !9852
  %361 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !9853
  %arrayidx469 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %361, i64 0, !dbg !9853
  %point470 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx469, i32 0, i32 0, !dbg !9854
  %x471 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point470, i32 0, i32 0, !dbg !9855
  %362 = load double, double* %x471, align 8, !dbg !9855
  %cmp472 = fcmp oeq double %360, %362, !dbg !9856
  br i1 %cmp472, label %land.rhs, label %land.end, !dbg !9857

land.rhs:                                         ; preds = %for.end464
  %363 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !9858
  %364 = load i64, i64* %i, align 8, !dbg !9859
  %sub474 = sub nsw i64 %364, 1, !dbg !9860
  %arrayidx475 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %363, i64 %sub474, !dbg !9858
  %point476 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx475, i32 0, i32 0, !dbg !9861
  %y477 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point476, i32 0, i32 1, !dbg !9862
  %365 = load double, double* %y477, align 8, !dbg !9862
  %366 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !9863
  %arrayidx478 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %366, i64 0, !dbg !9863
  %point479 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx478, i32 0, i32 0, !dbg !9864
  %y480 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point479, i32 0, i32 1, !dbg !9865
  %367 = load double, double* %y480, align 8, !dbg !9865
  %cmp481 = fcmp oeq double %365, %367, !dbg !9866
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.end464
  %368 = phi i1 [ false, %for.end464 ], [ %cmp481, %land.rhs ], !dbg !9867
  %369 = zext i1 %368 to i64, !dbg !9868
  %cond483 = select i1 %368, i32 1, i32 0, !dbg !9868
  store i32 %cond483, i32* %closed_path, align 4, !dbg !9869
  %370 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !9870
  %arrayidx484 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %370, i64 0, !dbg !9870
  %coordinates = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx484, i32 0, i32 1, !dbg !9871
  %371 = load i64, i64* %coordinates, align 8, !dbg !9871
  store i64 %371, i64* %i, align 8, !dbg !9872
  %372 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !9873
  %linecap = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %372, i32 0, i32 15, !dbg !9875
  %373 = load i32, i32* %linecap, align 4, !dbg !9875
  %cmp485 = icmp eq i32 %373, 2, !dbg !9876
  br i1 %cmp485, label %land.lhs.true490, label %lor.lhs.false487, !dbg !9877

lor.lhs.false487:                                 ; preds = %land.end
  %374 = load i32, i32* %closed_path, align 4, !dbg !9878
  %cmp488 = icmp ne i32 %374, 0, !dbg !9879
  br i1 %cmp488, label %land.lhs.true490, label %lor.lhs.false493, !dbg !9880

land.lhs.true490:                                 ; preds = %lor.lhs.false487, %land.end
  %375 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !9881
  %linejoin = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %375, i32 0, i32 16, !dbg !9882
  %376 = load i32, i32* %linejoin, align 8, !dbg !9882
  %cmp491 = icmp eq i32 %376, 2, !dbg !9883
  br i1 %cmp491, label %if.then498, label %lor.lhs.false493, !dbg !9884

lor.lhs.false493:                                 ; preds = %land.lhs.true490, %lor.lhs.false487
  %377 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !9885
  %378 = load i64, i64* %i, align 8, !dbg !9886
  %arrayidx494 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %377, i64 %378, !dbg !9885
  %primitive495 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx494, i32 0, i32 2, !dbg !9887
  %379 = load i32, i32* %primitive495, align 8, !dbg !9887
  %cmp496 = icmp ne i32 %379, 0, !dbg !9888
  br i1 %cmp496, label %if.then498, label %if.end500, !dbg !9889

if.then498:                                       ; preds = %lor.lhs.false493, %land.lhs.true490
  %380 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9890
  %381 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !9892
  %382 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !9893
  %call499 = call i32 @DrawPolygonPrimitive(%struct._Image* %380, %struct._DrawInfo* %381, %struct._PrimitiveInfo* %382), !dbg !9894
  br label %sw.epilog513, !dbg !9895

if.end500:                                        ; preds = %lor.lhs.false493
  %383 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !9896
  %call501 = call %struct._DrawInfo* @CloneDrawInfo(%struct._ImageInfo* null, %struct._DrawInfo* %383), !dbg !9897
  store %struct._DrawInfo* %call501, %struct._DrawInfo** %clone_info409, align 8, !dbg !9898
  %384 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info409, align 8, !dbg !9899
  %stroke_width502 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %384, i32 0, i32 7, !dbg !9900
  store double 0.000000e+00, double* %stroke_width502, align 8, !dbg !9901
  %385 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info409, align 8, !dbg !9902
  %stroke503 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %385, i32 0, i32 6, !dbg !9903
  %opacity504 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %stroke503, i32 0, i32 3, !dbg !9904
  store i16 -1, i16* %opacity504, align 2, !dbg !9905
  %386 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9906
  %387 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info409, align 8, !dbg !9907
  %388 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !9908
  %call505 = call i32 @DrawPolygonPrimitive(%struct._Image* %386, %struct._DrawInfo* %387, %struct._PrimitiveInfo* %388), !dbg !9909
  %389 = load i32, i32* %status, align 4, !dbg !9910
  %and506 = and i32 %389, %call505, !dbg !9910
  store i32 %and506, i32* %status, align 4, !dbg !9910
  %390 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info409, align 8, !dbg !9911
  %call507 = call %struct._DrawInfo* @DestroyDrawInfo(%struct._DrawInfo* %390), !dbg !9912
  store %struct._DrawInfo* %call507, %struct._DrawInfo** %clone_info409, align 8, !dbg !9913
  %391 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9914
  %392 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !9915
  %393 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !9916
  %call508 = call i32 @DrawStrokePolygon(%struct._Image* %391, %struct._DrawInfo* %392, %struct._PrimitiveInfo* %393), !dbg !9917
  %394 = load i32, i32* %status, align 4, !dbg !9918
  %and509 = and i32 %394, %call508, !dbg !9918
  store i32 %and509, i32* %status, align 4, !dbg !9918
  br label %sw.epilog513, !dbg !9919

if.end510:                                        ; preds = %land.lhs.true449, %if.end442
  %395 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9920
  %396 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !9921
  %397 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !9922
  %call511 = call i32 @DrawPolygonPrimitive(%struct._Image* %395, %struct._DrawInfo* %396, %struct._PrimitiveInfo* %397), !dbg !9923
  %398 = load i32, i32* %status, align 4, !dbg !9924
  %and512 = and i32 %398, %call511, !dbg !9924
  store i32 %and512, i32* %status, align 4, !dbg !9924
  br label %sw.epilog513, !dbg !9925

sw.epilog513:                                     ; preds = %if.end510, %if.end500, %if.then498, %if.then433, %if.end406, %if.then320, %if.then300, %if.end277, %if.then276, %sw.epilog272, %sw.epilog, %if.end41, %if.then40, %if.then35, %if.then28
  %399 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !9926
  %call514 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %399), !dbg !9927
  store %struct._CacheView* %call514, %struct._CacheView** %image_view, align 8, !dbg !9928
  %400 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9929
  %debug515 = getelementptr inbounds %struct._Image, %struct._Image* %400, i32 0, i32 59, !dbg !9931
  %401 = load i32, i32* %debug515, align 8, !dbg !9931
  %cmp516 = icmp ne i32 %401, 0, !dbg !9932
  br i1 %cmp516, label %if.then518, label %if.end520, !dbg !9933

if.then518:                                       ; preds = %sw.epilog513
  %call519 = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 128, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4639, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.102, i64 0, i64 0)), !dbg !9934
  br label %if.end520, !dbg !9935

if.end520:                                        ; preds = %if.then518, %sw.epilog513
  %402 = load i32, i32* %status, align 4, !dbg !9936
  %cmp521 = icmp ne i32 %402, 0, !dbg !9937
  %403 = zext i1 %cmp521 to i64, !dbg !9936
  %cond523 = select i1 %cmp521, i32 1, i32 0, !dbg !9936
  ret i32 %cond523, !dbg !9938
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @SetImageProgress(%struct._Image* %image, i8* %tag, i64 %offset, i64 %extent) #0 !dbg !9939 {
entry:
  %retval = alloca i32, align 4
  %image.addr = alloca %struct._Image*, align 8
  %tag.addr = alloca i8*, align 8
  %offset.addr = alloca i64, align 8
  %extent.addr = alloca i64, align 8
  %message = alloca [4096 x i8], align 16
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !9943, metadata !DIExpression()), !dbg !9944
  store i8* %tag, i8** %tag.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tag.addr, metadata !9945, metadata !DIExpression()), !dbg !9946
  store i64 %offset, i64* %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !9947, metadata !DIExpression()), !dbg !9948
  store i64 %extent, i64* %extent.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %extent.addr, metadata !9949, metadata !DIExpression()), !dbg !9950
  call void @llvm.dbg.declare(metadata [4096 x i8]* %message, metadata !9951, metadata !DIExpression()), !dbg !9952
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9953
  %progress_monitor = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 47, !dbg !9955
  %1 = load i32 (i8*, i64, i64, i8*)*, i32 (i8*, i64, i64, i8*)** %progress_monitor, align 8, !dbg !9955
  %cmp = icmp eq i32 (i8*, i64, i64, i8*)* %1, null, !dbg !9956
  br i1 %cmp, label %if.then, label %if.end, !dbg !9957

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !9958
  br label %return, !dbg !9958

if.end:                                           ; preds = %entry
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %message, i64 0, i64 0, !dbg !9959
  %2 = load i8*, i8** %tag.addr, align 8, !dbg !9960
  %3 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9961
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %3, i32 0, i32 53, !dbg !9962
  %arraydecay1 = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !9961
  %call = call i64 (i8*, i64, i8*, ...) @FormatLocaleString(i8* %arraydecay, i64 4096, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.107, i64 0, i64 0), i8* %2, i8* %arraydecay1), !dbg !9963
  %4 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9964
  %progress_monitor2 = getelementptr inbounds %struct._Image, %struct._Image* %4, i32 0, i32 47, !dbg !9965
  %5 = load i32 (i8*, i64, i64, i8*)*, i32 (i8*, i64, i64, i8*)** %progress_monitor2, align 8, !dbg !9965
  %arraydecay3 = getelementptr inbounds [4096 x i8], [4096 x i8]* %message, i64 0, i64 0, !dbg !9966
  %6 = load i64, i64* %offset.addr, align 8, !dbg !9967
  %7 = load i64, i64* %extent.addr, align 8, !dbg !9968
  %8 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !9969
  %client_data = getelementptr inbounds %struct._Image, %struct._Image* %8, i32 0, i32 48, !dbg !9970
  %9 = load i8*, i8** %client_data, align 8, !dbg !9970
  %call4 = call i32 %5(i8* %arraydecay3, i64 %6, i64 %7, i8* %9), !dbg !9964
  store i32 %call4, i32* %retval, align 4, !dbg !9971
  br label %return, !dbg !9971

return:                                           ; preds = %if.end, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !9972
  ret i32 %10, !dbg !9972
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @DrawGradientImage(%struct._Image* %image, %struct._DrawInfo* %draw_info) #0 !dbg !9973 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %draw_info.addr = alloca %struct._DrawInfo*, align 8
  %image_view = alloca %struct._CacheView*, align 8
  %gradient = alloca %struct._GradientInfo*, align 8
  %gradient_vector = alloca %struct._SegmentInfo*, align 8
  %length = alloca double, align 8
  %exception = alloca %struct._ExceptionInfo*, align 8
  %status = alloca i32, align 4
  %zero = alloca %struct._MagickPixelPacket, align 8
  %point = alloca %struct._PointInfo, align 8
  %bounding_box = alloca %struct._RectangleInfo, align 8
  %y = alloca i64, align 8
  %alpha = alloca double, align 8
  %offset = alloca double, align 8
  %composite = alloca %struct._MagickPixelPacket, align 8
  %pixel = alloca %struct._MagickPixelPacket, align 8
  %indexes = alloca i16*, align 8
  %i = alloca i64, align 8
  %x16 = alloca i64, align 8
  %q = alloca %struct._PixelPacket*, align 8
  %j = alloca i64, align 8
  %repeat = alloca double, align 8
  %antialias = alloca i32, align 4
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !9974, metadata !DIExpression()), !dbg !9975
  store %struct._DrawInfo* %draw_info, %struct._DrawInfo** %draw_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawInfo** %draw_info.addr, metadata !9976, metadata !DIExpression()), !dbg !9977
  call void @llvm.dbg.declare(metadata %struct._CacheView** %image_view, metadata !9978, metadata !DIExpression()), !dbg !9979
  call void @llvm.dbg.declare(metadata %struct._GradientInfo** %gradient, metadata !9980, metadata !DIExpression()), !dbg !9983
  call void @llvm.dbg.declare(metadata %struct._SegmentInfo** %gradient_vector, metadata !9984, metadata !DIExpression()), !dbg !9985
  call void @llvm.dbg.declare(metadata double* %length, metadata !9986, metadata !DIExpression()), !dbg !9987
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception, metadata !9988, metadata !DIExpression()), !dbg !9989
  call void @llvm.dbg.declare(metadata i32* %status, metadata !9990, metadata !DIExpression()), !dbg !9991
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket* %zero, metadata !9992, metadata !DIExpression()), !dbg !9993
  call void @llvm.dbg.declare(metadata %struct._PointInfo* %point, metadata !9994, metadata !DIExpression()), !dbg !9995
  call void @llvm.dbg.declare(metadata %struct._RectangleInfo* %bounding_box, metadata !9996, metadata !DIExpression()), !dbg !9997
  call void @llvm.dbg.declare(metadata i64* %y, metadata !9998, metadata !DIExpression()), !dbg !9999
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !10000
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !10002
  %1 = load i32, i32* %debug, align 8, !dbg !10002
  %cmp = icmp ne i32 %1, 0, !dbg !10003
  br i1 %cmp, label %if.then, label %if.end, !dbg !10004

if.then:                                          ; preds = %entry
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !10005
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %2, i32 0, i32 53, !dbg !10006
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !10005
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3316, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i64 0, i64 0), i8* %arraydecay), !dbg !10007
  br label %if.end, !dbg !10008

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !10009
  %gradient1 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %3, i32 0, i32 8, !dbg !10010
  store %struct._GradientInfo* %gradient1, %struct._GradientInfo** %gradient, align 8, !dbg !10011
  %4 = load %struct._GradientInfo*, %struct._GradientInfo** %gradient, align 8, !dbg !10012
  %gradient_vector2 = getelementptr inbounds %struct._GradientInfo, %struct._GradientInfo* %4, i32 0, i32 2, !dbg !10013
  store %struct._SegmentInfo* %gradient_vector2, %struct._SegmentInfo** %gradient_vector, align 8, !dbg !10014
  %5 = load %struct._SegmentInfo*, %struct._SegmentInfo** %gradient_vector, align 8, !dbg !10015
  %x2 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %5, i32 0, i32 2, !dbg !10016
  %6 = load double, double* %x2, align 8, !dbg !10016
  %7 = load %struct._SegmentInfo*, %struct._SegmentInfo** %gradient_vector, align 8, !dbg !10017
  %x1 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %7, i32 0, i32 0, !dbg !10018
  %8 = load double, double* %x1, align 8, !dbg !10018
  %sub = fsub double %6, %8, !dbg !10019
  %x = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 0, !dbg !10020
  store double %sub, double* %x, align 8, !dbg !10021
  %9 = load %struct._SegmentInfo*, %struct._SegmentInfo** %gradient_vector, align 8, !dbg !10022
  %y2 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %9, i32 0, i32 3, !dbg !10023
  %10 = load double, double* %y2, align 8, !dbg !10023
  %11 = load %struct._SegmentInfo*, %struct._SegmentInfo** %gradient_vector, align 8, !dbg !10024
  %y1 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %11, i32 0, i32 1, !dbg !10025
  %12 = load double, double* %y1, align 8, !dbg !10025
  %sub3 = fsub double %10, %12, !dbg !10026
  %y4 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 1, !dbg !10027
  store double %sub3, double* %y4, align 8, !dbg !10028
  %x5 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 0, !dbg !10029
  %13 = load double, double* %x5, align 8, !dbg !10029
  %x6 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 0, !dbg !10030
  %14 = load double, double* %x6, align 8, !dbg !10030
  %mul = fmul double %13, %14, !dbg !10031
  %y7 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 1, !dbg !10032
  %15 = load double, double* %y7, align 8, !dbg !10032
  %y8 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 1, !dbg !10033
  %16 = load double, double* %y8, align 8, !dbg !10033
  %mul9 = fmul double %15, %16, !dbg !10034
  %add = fadd double %mul, %mul9, !dbg !10035
  %call10 = call double @sqrt(double %add) #17, !dbg !10036
  store double %call10, double* %length, align 8, !dbg !10037
  %17 = load %struct._GradientInfo*, %struct._GradientInfo** %gradient, align 8, !dbg !10038
  %bounding_box11 = getelementptr inbounds %struct._GradientInfo, %struct._GradientInfo* %17, i32 0, i32 1, !dbg !10039
  %18 = bitcast %struct._RectangleInfo* %bounding_box to i8*, !dbg !10039
  %19 = bitcast %struct._RectangleInfo* %bounding_box11 to i8*, !dbg !10039
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 32, i1 false), !dbg !10039
  store i32 1, i32* %status, align 4, !dbg !10040
  %20 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !10041
  %exception12 = getelementptr inbounds %struct._Image, %struct._Image* %20, i32 0, i32 58, !dbg !10042
  store %struct._ExceptionInfo* %exception12, %struct._ExceptionInfo** %exception, align 8, !dbg !10043
  %21 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !10044
  call void @GetMagickPixelPacket(%struct._Image* %21, %struct._MagickPixelPacket* %zero), !dbg !10045
  %22 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !10046
  %23 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !10047
  %call13 = call %struct._CacheView* @AcquireAuthenticCacheView(%struct._Image* %22, %struct._ExceptionInfo* %23), !dbg !10048
  store %struct._CacheView* %call13, %struct._CacheView** %image_view, align 8, !dbg !10049
  %y14 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %bounding_box, i32 0, i32 3, !dbg !10050
  %24 = load i64, i64* %y14, align 8, !dbg !10050
  store i64 %24, i64* %y, align 8, !dbg !10052
  br label %for.cond, !dbg !10053

for.cond:                                         ; preds = %for.inc349, %if.end
  %25 = load i64, i64* %y, align 8, !dbg !10054
  %height = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %bounding_box, i32 0, i32 1, !dbg !10056
  %26 = load i64, i64* %height, align 8, !dbg !10056
  %cmp15 = icmp slt i64 %25, %26, !dbg !10057
  br i1 %cmp15, label %for.body, label %for.end351, !dbg !10058

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata double* %alpha, metadata !10059, metadata !DIExpression()), !dbg !10061
  call void @llvm.dbg.declare(metadata double* %offset, metadata !10062, metadata !DIExpression()), !dbg !10063
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket* %composite, metadata !10064, metadata !DIExpression()), !dbg !10065
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket* %pixel, metadata !10066, metadata !DIExpression()), !dbg !10067
  call void @llvm.dbg.declare(metadata i16** %indexes, metadata !10068, metadata !DIExpression()), !dbg !10069
  call void @llvm.dbg.declare(metadata i64* %i, metadata !10070, metadata !DIExpression()), !dbg !10071
  call void @llvm.dbg.declare(metadata i64* %x16, metadata !10072, metadata !DIExpression()), !dbg !10073
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q, metadata !10074, metadata !DIExpression()), !dbg !10075
  call void @llvm.dbg.declare(metadata i64* %j, metadata !10076, metadata !DIExpression()), !dbg !10077
  %27 = load i32, i32* %status, align 4, !dbg !10078
  %cmp17 = icmp eq i32 %27, 0, !dbg !10080
  br i1 %cmp17, label %if.then18, label %if.end19, !dbg !10081

if.then18:                                        ; preds = %for.body
  br label %for.inc349, !dbg !10082

if.end19:                                         ; preds = %for.body
  %28 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !10083
  %29 = load i64, i64* %y, align 8, !dbg !10084
  %30 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !10085
  %columns = getelementptr inbounds %struct._Image, %struct._Image* %30, i32 0, i32 7, !dbg !10086
  %31 = load i64, i64* %columns, align 8, !dbg !10086
  %32 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !10087
  %call20 = call %struct._PixelPacket* @GetCacheViewAuthenticPixels(%struct._CacheView* %28, i64 0, i64 %29, i64 %31, i64 1, %struct._ExceptionInfo* %32), !dbg !10088
  store %struct._PixelPacket* %call20, %struct._PixelPacket** %q, align 8, !dbg !10089
  %33 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !10090
  %cmp21 = icmp eq %struct._PixelPacket* %33, null, !dbg !10092
  br i1 %cmp21, label %if.then22, label %if.end23, !dbg !10093

if.then22:                                        ; preds = %if.end19
  store i32 0, i32* %status, align 4, !dbg !10094
  br label %for.inc349, !dbg !10096

if.end23:                                         ; preds = %if.end19
  %34 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !10097
  %call24 = call i16* @GetCacheViewAuthenticIndexQueue(%struct._CacheView* %34), !dbg !10098
  store i16* %call24, i16** %indexes, align 8, !dbg !10099
  %35 = bitcast %struct._MagickPixelPacket* %pixel to i8*, !dbg !10100
  %36 = bitcast %struct._MagickPixelPacket* %zero to i8*, !dbg !10100
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 56, i1 false), !dbg !10100
  %37 = bitcast %struct._MagickPixelPacket* %composite to i8*, !dbg !10101
  %38 = bitcast %struct._MagickPixelPacket* %zero to i8*, !dbg !10101
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 56, i1 false), !dbg !10101
  %39 = load %struct._GradientInfo*, %struct._GradientInfo** %gradient, align 8, !dbg !10102
  %40 = load i64, i64* %y, align 8, !dbg !10103
  %call25 = call double @GetStopColorOffset(%struct._GradientInfo* %39, i64 0, i64 %40), !dbg !10104
  store double %call25, double* %offset, align 8, !dbg !10105
  %41 = load %struct._GradientInfo*, %struct._GradientInfo** %gradient, align 8, !dbg !10106
  %type = getelementptr inbounds %struct._GradientInfo, %struct._GradientInfo* %41, i32 0, i32 0, !dbg !10108
  %42 = load i32, i32* %type, align 8, !dbg !10108
  %cmp26 = icmp ne i32 %42, 2, !dbg !10109
  br i1 %cmp26, label %if.then27, label %if.end28, !dbg !10110

if.then27:                                        ; preds = %if.end23
  %43 = load double, double* %length, align 8, !dbg !10111
  %44 = load double, double* %offset, align 8, !dbg !10112
  %div = fdiv double %44, %43, !dbg !10112
  store double %div, double* %offset, align 8, !dbg !10112
  br label %if.end28, !dbg !10113

if.end28:                                         ; preds = %if.then27, %if.end23
  %x29 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %bounding_box, i32 0, i32 2, !dbg !10114
  %45 = load i64, i64* %x29, align 8, !dbg !10114
  store i64 %45, i64* %x16, align 8, !dbg !10116
  br label %for.cond30, !dbg !10117

for.cond30:                                       ; preds = %for.inc341, %if.end28
  %46 = load i64, i64* %x16, align 8, !dbg !10118
  %width = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %bounding_box, i32 0, i32 0, !dbg !10120
  %47 = load i64, i64* %width, align 8, !dbg !10120
  %cmp31 = icmp slt i64 %46, %47, !dbg !10121
  br i1 %cmp31, label %for.body32, label %for.end343, !dbg !10122

for.body32:                                       ; preds = %for.cond30
  %48 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !10123
  %49 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !10125
  %50 = load i16*, i16** %indexes, align 8, !dbg !10126
  %51 = load i64, i64* %x16, align 8, !dbg !10127
  %add.ptr = getelementptr inbounds i16, i16* %50, i64 %51, !dbg !10128
  call void @SetMagickPixelPacket(%struct._Image* %48, %struct._PixelPacket* %49, i16* %add.ptr, %struct._MagickPixelPacket* %pixel), !dbg !10129
  %52 = load %struct._GradientInfo*, %struct._GradientInfo** %gradient, align 8, !dbg !10130
  %spread = getelementptr inbounds %struct._GradientInfo, %struct._GradientInfo* %52, i32 0, i32 5, !dbg !10131
  %53 = load i32, i32* %spread, align 8, !dbg !10131
  switch i32 %53, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb
    i32 2, label %sw.bb107
    i32 3, label %sw.bb201
  ], !dbg !10132

sw.bb:                                            ; preds = %for.body32, %for.body32
  %54 = load i64, i64* %x16, align 8, !dbg !10133
  %55 = load %struct._SegmentInfo*, %struct._SegmentInfo** %gradient_vector, align 8, !dbg !10137
  %x133 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %55, i32 0, i32 0, !dbg !10138
  %56 = load double, double* %x133, align 8, !dbg !10138
  %sub34 = fsub double %56, 5.000000e-01, !dbg !10139
  %57 = call double @llvm.ceil.f64(double %sub34), !dbg !10140
  %conv = fptosi double %57 to i64, !dbg !10141
  %cmp35 = icmp ne i64 %54, %conv, !dbg !10142
  br i1 %cmp35, label %if.then42, label %lor.lhs.false, !dbg !10143

lor.lhs.false:                                    ; preds = %sw.bb
  %58 = load i64, i64* %y, align 8, !dbg !10144
  %59 = load %struct._SegmentInfo*, %struct._SegmentInfo** %gradient_vector, align 8, !dbg !10145
  %y137 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %59, i32 0, i32 1, !dbg !10146
  %60 = load double, double* %y137, align 8, !dbg !10146
  %sub38 = fsub double %60, 5.000000e-01, !dbg !10147
  %61 = call double @llvm.ceil.f64(double %sub38), !dbg !10148
  %conv39 = fptosi double %61 to i64, !dbg !10149
  %cmp40 = icmp ne i64 %58, %conv39, !dbg !10150
  br i1 %cmp40, label %if.then42, label %if.end50, !dbg !10151

if.then42:                                        ; preds = %lor.lhs.false, %sw.bb
  %62 = load %struct._GradientInfo*, %struct._GradientInfo** %gradient, align 8, !dbg !10152
  %63 = load i64, i64* %x16, align 8, !dbg !10154
  %64 = load i64, i64* %y, align 8, !dbg !10155
  %call43 = call double @GetStopColorOffset(%struct._GradientInfo* %62, i64 %63, i64 %64), !dbg !10156
  store double %call43, double* %offset, align 8, !dbg !10157
  %65 = load %struct._GradientInfo*, %struct._GradientInfo** %gradient, align 8, !dbg !10158
  %type44 = getelementptr inbounds %struct._GradientInfo, %struct._GradientInfo* %65, i32 0, i32 0, !dbg !10160
  %66 = load i32, i32* %type44, align 8, !dbg !10160
  %cmp45 = icmp ne i32 %66, 2, !dbg !10161
  br i1 %cmp45, label %if.then47, label %if.end49, !dbg !10162

if.then47:                                        ; preds = %if.then42
  %67 = load double, double* %length, align 8, !dbg !10163
  %68 = load double, double* %offset, align 8, !dbg !10164
  %div48 = fdiv double %68, %67, !dbg !10164
  store double %div48, double* %offset, align 8, !dbg !10164
  br label %if.end49, !dbg !10165

if.end49:                                         ; preds = %if.then47, %if.then42
  br label %if.end50, !dbg !10166

if.end50:                                         ; preds = %if.end49, %lor.lhs.false
  store i64 0, i64* %i, align 8, !dbg !10167
  br label %for.cond51, !dbg !10169

for.cond51:                                       ; preds = %for.inc, %if.end50
  %69 = load i64, i64* %i, align 8, !dbg !10170
  %70 = load %struct._GradientInfo*, %struct._GradientInfo** %gradient, align 8, !dbg !10172
  %number_stops = getelementptr inbounds %struct._GradientInfo, %struct._GradientInfo* %70, i32 0, i32 4, !dbg !10173
  %71 = load i64, i64* %number_stops, align 8, !dbg !10173
  %cmp52 = icmp slt i64 %69, %71, !dbg !10174
  br i1 %cmp52, label %for.body54, label %for.end, !dbg !10175

for.body54:                                       ; preds = %for.cond51
  %72 = load double, double* %offset, align 8, !dbg !10176
  %73 = load %struct._GradientInfo*, %struct._GradientInfo** %gradient, align 8, !dbg !10178
  %stops = getelementptr inbounds %struct._GradientInfo, %struct._GradientInfo* %73, i32 0, i32 3, !dbg !10179
  %74 = load %struct._StopInfo*, %struct._StopInfo** %stops, align 8, !dbg !10179
  %75 = load i64, i64* %i, align 8, !dbg !10180
  %arrayidx = getelementptr inbounds %struct._StopInfo, %struct._StopInfo* %74, i64 %75, !dbg !10178
  %offset55 = getelementptr inbounds %struct._StopInfo, %struct._StopInfo* %arrayidx, i32 0, i32 1, !dbg !10181
  %76 = load float, float* %offset55, align 8, !dbg !10181
  %conv56 = fpext float %76 to double, !dbg !10178
  %cmp57 = fcmp olt double %72, %conv56, !dbg !10182
  br i1 %cmp57, label %if.then59, label %if.end60, !dbg !10183

if.then59:                                        ; preds = %for.body54
  br label %for.end, !dbg !10184

if.end60:                                         ; preds = %for.body54
  br label %for.inc, !dbg !10181

for.inc:                                          ; preds = %if.end60
  %77 = load i64, i64* %i, align 8, !dbg !10185
  %inc = add nsw i64 %77, 1, !dbg !10185
  store i64 %inc, i64* %i, align 8, !dbg !10185
  br label %for.cond51, !dbg !10186, !llvm.loop !10187

for.end:                                          ; preds = %if.then59, %for.cond51
  %78 = load double, double* %offset, align 8, !dbg !10189
  %cmp61 = fcmp olt double %78, 0.000000e+00, !dbg !10191
  br i1 %cmp61, label %if.then66, label %lor.lhs.false63, !dbg !10192

lor.lhs.false63:                                  ; preds = %for.end
  %79 = load i64, i64* %i, align 8, !dbg !10193
  %cmp64 = icmp eq i64 %79, 0, !dbg !10194
  br i1 %cmp64, label %if.then66, label %if.else, !dbg !10195

if.then66:                                        ; preds = %lor.lhs.false63, %for.end
  %80 = load %struct._GradientInfo*, %struct._GradientInfo** %gradient, align 8, !dbg !10196
  %stops67 = getelementptr inbounds %struct._GradientInfo, %struct._GradientInfo* %80, i32 0, i32 3, !dbg !10197
  %81 = load %struct._StopInfo*, %struct._StopInfo** %stops67, align 8, !dbg !10197
  %arrayidx68 = getelementptr inbounds %struct._StopInfo, %struct._StopInfo* %81, i64 0, !dbg !10196
  %color = getelementptr inbounds %struct._StopInfo, %struct._StopInfo* %arrayidx68, i32 0, i32 0, !dbg !10198
  %82 = bitcast %struct._MagickPixelPacket* %composite to i8*, !dbg !10198
  %83 = bitcast %struct._MagickPixelPacket* %color to i8*, !dbg !10198
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %82, i8* align 8 %83, i64 56, i1 false), !dbg !10198
  br label %if.end106, !dbg !10199

if.else:                                          ; preds = %lor.lhs.false63
  %84 = load double, double* %offset, align 8, !dbg !10200
  %cmp69 = fcmp ogt double %84, 1.000000e+00, !dbg !10202
  br i1 %cmp69, label %if.then75, label %lor.lhs.false71, !dbg !10203

lor.lhs.false71:                                  ; preds = %if.else
  %85 = load i64, i64* %i, align 8, !dbg !10204
  %86 = load %struct._GradientInfo*, %struct._GradientInfo** %gradient, align 8, !dbg !10205
  %number_stops72 = getelementptr inbounds %struct._GradientInfo, %struct._GradientInfo* %86, i32 0, i32 4, !dbg !10206
  %87 = load i64, i64* %number_stops72, align 8, !dbg !10206
  %cmp73 = icmp eq i64 %85, %87, !dbg !10207
  br i1 %cmp73, label %if.then75, label %if.else81, !dbg !10208

if.then75:                                        ; preds = %lor.lhs.false71, %if.else
  %88 = load %struct._GradientInfo*, %struct._GradientInfo** %gradient, align 8, !dbg !10209
  %stops76 = getelementptr inbounds %struct._GradientInfo, %struct._GradientInfo* %88, i32 0, i32 3, !dbg !10210
  %89 = load %struct._StopInfo*, %struct._StopInfo** %stops76, align 8, !dbg !10210
  %90 = load %struct._GradientInfo*, %struct._GradientInfo** %gradient, align 8, !dbg !10211
  %number_stops77 = getelementptr inbounds %struct._GradientInfo, %struct._GradientInfo* %90, i32 0, i32 4, !dbg !10212
  %91 = load i64, i64* %number_stops77, align 8, !dbg !10212
  %sub78 = sub i64 %91, 1, !dbg !10213
  %arrayidx79 = getelementptr inbounds %struct._StopInfo, %struct._StopInfo* %89, i64 %sub78, !dbg !10209
  %color80 = getelementptr inbounds %struct._StopInfo, %struct._StopInfo* %arrayidx79, i32 0, i32 0, !dbg !10214
  %92 = bitcast %struct._MagickPixelPacket* %composite to i8*, !dbg !10214
  %93 = bitcast %struct._MagickPixelPacket* %color80 to i8*, !dbg !10214
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %92, i8* align 8 %93, i64 56, i1 false), !dbg !10214
  br label %if.end105, !dbg !10215

if.else81:                                        ; preds = %lor.lhs.false71
  %94 = load i64, i64* %i, align 8, !dbg !10216
  store i64 %94, i64* %j, align 8, !dbg !10218
  %95 = load i64, i64* %i, align 8, !dbg !10219
  %dec = add nsw i64 %95, -1, !dbg !10219
  store i64 %dec, i64* %i, align 8, !dbg !10219
  %96 = load double, double* %offset, align 8, !dbg !10220
  %97 = load %struct._GradientInfo*, %struct._GradientInfo** %gradient, align 8, !dbg !10221
  %stops82 = getelementptr inbounds %struct._GradientInfo, %struct._GradientInfo* %97, i32 0, i32 3, !dbg !10222
  %98 = load %struct._StopInfo*, %struct._StopInfo** %stops82, align 8, !dbg !10222
  %99 = load i64, i64* %i, align 8, !dbg !10223
  %arrayidx83 = getelementptr inbounds %struct._StopInfo, %struct._StopInfo* %98, i64 %99, !dbg !10221
  %offset84 = getelementptr inbounds %struct._StopInfo, %struct._StopInfo* %arrayidx83, i32 0, i32 1, !dbg !10224
  %100 = load float, float* %offset84, align 8, !dbg !10224
  %conv85 = fpext float %100 to double, !dbg !10221
  %sub86 = fsub double %96, %conv85, !dbg !10225
  %101 = load %struct._GradientInfo*, %struct._GradientInfo** %gradient, align 8, !dbg !10226
  %stops87 = getelementptr inbounds %struct._GradientInfo, %struct._GradientInfo* %101, i32 0, i32 3, !dbg !10227
  %102 = load %struct._StopInfo*, %struct._StopInfo** %stops87, align 8, !dbg !10227
  %103 = load i64, i64* %j, align 8, !dbg !10228
  %arrayidx88 = getelementptr inbounds %struct._StopInfo, %struct._StopInfo* %102, i64 %103, !dbg !10226
  %offset89 = getelementptr inbounds %struct._StopInfo, %struct._StopInfo* %arrayidx88, i32 0, i32 1, !dbg !10229
  %104 = load float, float* %offset89, align 8, !dbg !10229
  %105 = load %struct._GradientInfo*, %struct._GradientInfo** %gradient, align 8, !dbg !10230
  %stops90 = getelementptr inbounds %struct._GradientInfo, %struct._GradientInfo* %105, i32 0, i32 3, !dbg !10231
  %106 = load %struct._StopInfo*, %struct._StopInfo** %stops90, align 8, !dbg !10231
  %107 = load i64, i64* %i, align 8, !dbg !10232
  %arrayidx91 = getelementptr inbounds %struct._StopInfo, %struct._StopInfo* %106, i64 %107, !dbg !10230
  %offset92 = getelementptr inbounds %struct._StopInfo, %struct._StopInfo* %arrayidx91, i32 0, i32 1, !dbg !10233
  %108 = load float, float* %offset92, align 8, !dbg !10233
  %sub93 = fsub float %104, %108, !dbg !10234
  %conv94 = fpext float %sub93 to double, !dbg !10235
  %div95 = fdiv double %sub86, %conv94, !dbg !10236
  store double %div95, double* %alpha, align 8, !dbg !10237
  %109 = load %struct._GradientInfo*, %struct._GradientInfo** %gradient, align 8, !dbg !10238
  %stops96 = getelementptr inbounds %struct._GradientInfo, %struct._GradientInfo* %109, i32 0, i32 3, !dbg !10239
  %110 = load %struct._StopInfo*, %struct._StopInfo** %stops96, align 8, !dbg !10239
  %111 = load i64, i64* %i, align 8, !dbg !10240
  %arrayidx97 = getelementptr inbounds %struct._StopInfo, %struct._StopInfo* %110, i64 %111, !dbg !10238
  %color98 = getelementptr inbounds %struct._StopInfo, %struct._StopInfo* %arrayidx97, i32 0, i32 0, !dbg !10241
  %112 = load double, double* %alpha, align 8, !dbg !10242
  %sub99 = fsub double 1.000000e+00, %112, !dbg !10243
  %conv100 = fptrunc double %sub99 to float, !dbg !10244
  %113 = load %struct._GradientInfo*, %struct._GradientInfo** %gradient, align 8, !dbg !10245
  %stops101 = getelementptr inbounds %struct._GradientInfo, %struct._GradientInfo* %113, i32 0, i32 3, !dbg !10246
  %114 = load %struct._StopInfo*, %struct._StopInfo** %stops101, align 8, !dbg !10246
  %115 = load i64, i64* %j, align 8, !dbg !10247
  %arrayidx102 = getelementptr inbounds %struct._StopInfo, %struct._StopInfo* %114, i64 %115, !dbg !10245
  %color103 = getelementptr inbounds %struct._StopInfo, %struct._StopInfo* %arrayidx102, i32 0, i32 0, !dbg !10248
  %116 = load double, double* %alpha, align 8, !dbg !10249
  %conv104 = fptrunc double %116 to float, !dbg !10249
  call void @MagickPixelCompositeBlend(%struct._MagickPixelPacket* %color98, float %conv100, %struct._MagickPixelPacket* %color103, float %conv104, %struct._MagickPixelPacket* %composite), !dbg !10250
  br label %if.end105

if.end105:                                        ; preds = %if.else81, %if.then75
  br label %if.end106

if.end106:                                        ; preds = %if.end105, %if.then66
  br label %sw.epilog, !dbg !10251

sw.bb107:                                         ; preds = %for.body32
  %117 = load i64, i64* %x16, align 8, !dbg !10252
  %118 = load %struct._SegmentInfo*, %struct._SegmentInfo** %gradient_vector, align 8, !dbg !10255
  %x1108 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %118, i32 0, i32 0, !dbg !10256
  %119 = load double, double* %x1108, align 8, !dbg !10256
  %sub109 = fsub double %119, 5.000000e-01, !dbg !10257
  %120 = call double @llvm.ceil.f64(double %sub109), !dbg !10258
  %conv110 = fptosi double %120 to i64, !dbg !10259
  %cmp111 = icmp ne i64 %117, %conv110, !dbg !10260
  br i1 %cmp111, label %if.then119, label %lor.lhs.false113, !dbg !10261

lor.lhs.false113:                                 ; preds = %sw.bb107
  %121 = load i64, i64* %y, align 8, !dbg !10262
  %122 = load %struct._SegmentInfo*, %struct._SegmentInfo** %gradient_vector, align 8, !dbg !10263
  %y1114 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %122, i32 0, i32 1, !dbg !10264
  %123 = load double, double* %y1114, align 8, !dbg !10264
  %sub115 = fsub double %123, 5.000000e-01, !dbg !10265
  %124 = call double @llvm.ceil.f64(double %sub115), !dbg !10266
  %conv116 = fptosi double %124 to i64, !dbg !10267
  %cmp117 = icmp ne i64 %121, %conv116, !dbg !10268
  br i1 %cmp117, label %if.then119, label %if.end127, !dbg !10269

if.then119:                                       ; preds = %lor.lhs.false113, %sw.bb107
  %125 = load %struct._GradientInfo*, %struct._GradientInfo** %gradient, align 8, !dbg !10270
  %126 = load i64, i64* %x16, align 8, !dbg !10272
  %127 = load i64, i64* %y, align 8, !dbg !10273
  %call120 = call double @GetStopColorOffset(%struct._GradientInfo* %125, i64 %126, i64 %127), !dbg !10274
  store double %call120, double* %offset, align 8, !dbg !10275
  %128 = load %struct._GradientInfo*, %struct._GradientInfo** %gradient, align 8, !dbg !10276
  %type121 = getelementptr inbounds %struct._GradientInfo, %struct._GradientInfo* %128, i32 0, i32 0, !dbg !10278
  %129 = load i32, i32* %type121, align 8, !dbg !10278
  %cmp122 = icmp ne i32 %129, 2, !dbg !10279
  br i1 %cmp122, label %if.then124, label %if.end126, !dbg !10280

if.then124:                                       ; preds = %if.then119
  %130 = load double, double* %length, align 8, !dbg !10281
  %131 = load double, double* %offset, align 8, !dbg !10282
  %div125 = fdiv double %131, %130, !dbg !10282
  store double %div125, double* %offset, align 8, !dbg !10282
  br label %if.end126, !dbg !10283

if.end126:                                        ; preds = %if.then124, %if.then119
  br label %if.end127, !dbg !10284

if.end127:                                        ; preds = %if.end126, %lor.lhs.false113
  %132 = load double, double* %offset, align 8, !dbg !10285
  %cmp128 = fcmp olt double %132, 0.000000e+00, !dbg !10287
  br i1 %cmp128, label %if.then130, label %if.end131, !dbg !10288

if.then130:                                       ; preds = %if.end127
  %133 = load double, double* %offset, align 8, !dbg !10289
  %fneg = fneg double %133, !dbg !10290
  store double %fneg, double* %offset, align 8, !dbg !10291
  br label %if.end131, !dbg !10292

if.end131:                                        ; preds = %if.then130, %if.end127
  %134 = load double, double* %offset, align 8, !dbg !10293
  %call132 = call double @fmod(double %134, double 2.000000e+00) #17, !dbg !10295
  %conv133 = fptosi double %call132 to i64, !dbg !10296
  %cmp134 = icmp eq i64 %conv133, 0, !dbg !10297
  br i1 %cmp134, label %if.then136, label %if.else138, !dbg !10298

if.then136:                                       ; preds = %if.end131
  %135 = load double, double* %offset, align 8, !dbg !10299
  %call137 = call double @fmod(double %135, double 1.000000e+00) #17, !dbg !10300
  store double %call137, double* %offset, align 8, !dbg !10301
  br label %if.end141, !dbg !10302

if.else138:                                       ; preds = %if.end131
  %136 = load double, double* %offset, align 8, !dbg !10303
  %call139 = call double @fmod(double %136, double 1.000000e+00) #17, !dbg !10304
  %sub140 = fsub double 1.000000e+00, %call139, !dbg !10305
  store double %sub140, double* %offset, align 8, !dbg !10306
  br label %if.end141

if.end141:                                        ; preds = %if.else138, %if.then136
  store i64 0, i64* %i, align 8, !dbg !10307
  br label %for.cond142, !dbg !10309

for.cond142:                                      ; preds = %for.inc155, %if.end141
  %137 = load i64, i64* %i, align 8, !dbg !10310
  %138 = load %struct._GradientInfo*, %struct._GradientInfo** %gradient, align 8, !dbg !10312
  %number_stops143 = getelementptr inbounds %struct._GradientInfo, %struct._GradientInfo* %138, i32 0, i32 4, !dbg !10313
  %139 = load i64, i64* %number_stops143, align 8, !dbg !10313
  %cmp144 = icmp slt i64 %137, %139, !dbg !10314
  br i1 %cmp144, label %for.body146, label %for.end157, !dbg !10315

for.body146:                                      ; preds = %for.cond142
  %140 = load double, double* %offset, align 8, !dbg !10316
  %141 = load %struct._GradientInfo*, %struct._GradientInfo** %gradient, align 8, !dbg !10318
  %stops147 = getelementptr inbounds %struct._GradientInfo, %struct._GradientInfo* %141, i32 0, i32 3, !dbg !10319
  %142 = load %struct._StopInfo*, %struct._StopInfo** %stops147, align 8, !dbg !10319
  %143 = load i64, i64* %i, align 8, !dbg !10320
  %arrayidx148 = getelementptr inbounds %struct._StopInfo, %struct._StopInfo* %142, i64 %143, !dbg !10318
  %offset149 = getelementptr inbounds %struct._StopInfo, %struct._StopInfo* %arrayidx148, i32 0, i32 1, !dbg !10321
  %144 = load float, float* %offset149, align 8, !dbg !10321
  %conv150 = fpext float %144 to double, !dbg !10318
  %cmp151 = fcmp olt double %140, %conv150, !dbg !10322
  br i1 %cmp151, label %if.then153, label %if.end154, !dbg !10323

if.then153:                                       ; preds = %for.body146
  br label %for.end157, !dbg !10324

if.end154:                                        ; preds = %for.body146
  br label %for.inc155, !dbg !10321

for.inc155:                                       ; preds = %if.end154
  %145 = load i64, i64* %i, align 8, !dbg !10325
  %inc156 = add nsw i64 %145, 1, !dbg !10325
  store i64 %inc156, i64* %i, align 8, !dbg !10325
  br label %for.cond142, !dbg !10326, !llvm.loop !10327

for.end157:                                       ; preds = %if.then153, %for.cond142
  %146 = load i64, i64* %i, align 8, !dbg !10329
  %cmp158 = icmp eq i64 %146, 0, !dbg !10331
  br i1 %cmp158, label %if.then160, label %if.else164, !dbg !10332

if.then160:                                       ; preds = %for.end157
  %147 = load %struct._GradientInfo*, %struct._GradientInfo** %gradient, align 8, !dbg !10333
  %stops161 = getelementptr inbounds %struct._GradientInfo, %struct._GradientInfo* %147, i32 0, i32 3, !dbg !10334
  %148 = load %struct._StopInfo*, %struct._StopInfo** %stops161, align 8, !dbg !10334
  %arrayidx162 = getelementptr inbounds %struct._StopInfo, %struct._StopInfo* %148, i64 0, !dbg !10333
  %color163 = getelementptr inbounds %struct._StopInfo, %struct._StopInfo* %arrayidx162, i32 0, i32 0, !dbg !10335
  %149 = bitcast %struct._MagickPixelPacket* %composite to i8*, !dbg !10335
  %150 = bitcast %struct._MagickPixelPacket* %color163 to i8*, !dbg !10335
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %149, i8* align 8 %150, i64 56, i1 false), !dbg !10335
  br label %if.end200, !dbg !10336

if.else164:                                       ; preds = %for.end157
  %151 = load i64, i64* %i, align 8, !dbg !10337
  %152 = load %struct._GradientInfo*, %struct._GradientInfo** %gradient, align 8, !dbg !10339
  %number_stops165 = getelementptr inbounds %struct._GradientInfo, %struct._GradientInfo* %152, i32 0, i32 4, !dbg !10340
  %153 = load i64, i64* %number_stops165, align 8, !dbg !10340
  %cmp166 = icmp eq i64 %151, %153, !dbg !10341
  br i1 %cmp166, label %if.then168, label %if.else174, !dbg !10342

if.then168:                                       ; preds = %if.else164
  %154 = load %struct._GradientInfo*, %struct._GradientInfo** %gradient, align 8, !dbg !10343
  %stops169 = getelementptr inbounds %struct._GradientInfo, %struct._GradientInfo* %154, i32 0, i32 3, !dbg !10344
  %155 = load %struct._StopInfo*, %struct._StopInfo** %stops169, align 8, !dbg !10344
  %156 = load %struct._GradientInfo*, %struct._GradientInfo** %gradient, align 8, !dbg !10345
  %number_stops170 = getelementptr inbounds %struct._GradientInfo, %struct._GradientInfo* %156, i32 0, i32 4, !dbg !10346
  %157 = load i64, i64* %number_stops170, align 8, !dbg !10346
  %sub171 = sub i64 %157, 1, !dbg !10347
  %arrayidx172 = getelementptr inbounds %struct._StopInfo, %struct._StopInfo* %155, i64 %sub171, !dbg !10343
  %color173 = getelementptr inbounds %struct._StopInfo, %struct._StopInfo* %arrayidx172, i32 0, i32 0, !dbg !10348
  %158 = bitcast %struct._MagickPixelPacket* %composite to i8*, !dbg !10348
  %159 = bitcast %struct._MagickPixelPacket* %color173 to i8*, !dbg !10348
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %158, i8* align 8 %159, i64 56, i1 false), !dbg !10348
  br label %if.end199, !dbg !10349

if.else174:                                       ; preds = %if.else164
  %160 = load i64, i64* %i, align 8, !dbg !10350
  store i64 %160, i64* %j, align 8, !dbg !10352
  %161 = load i64, i64* %i, align 8, !dbg !10353
  %dec175 = add nsw i64 %161, -1, !dbg !10353
  store i64 %dec175, i64* %i, align 8, !dbg !10353
  %162 = load double, double* %offset, align 8, !dbg !10354
  %163 = load %struct._GradientInfo*, %struct._GradientInfo** %gradient, align 8, !dbg !10355
  %stops176 = getelementptr inbounds %struct._GradientInfo, %struct._GradientInfo* %163, i32 0, i32 3, !dbg !10356
  %164 = load %struct._StopInfo*, %struct._StopInfo** %stops176, align 8, !dbg !10356
  %165 = load i64, i64* %i, align 8, !dbg !10357
  %arrayidx177 = getelementptr inbounds %struct._StopInfo, %struct._StopInfo* %164, i64 %165, !dbg !10355
  %offset178 = getelementptr inbounds %struct._StopInfo, %struct._StopInfo* %arrayidx177, i32 0, i32 1, !dbg !10358
  %166 = load float, float* %offset178, align 8, !dbg !10358
  %conv179 = fpext float %166 to double, !dbg !10355
  %sub180 = fsub double %162, %conv179, !dbg !10359
  %167 = load %struct._GradientInfo*, %struct._GradientInfo** %gradient, align 8, !dbg !10360
  %stops181 = getelementptr inbounds %struct._GradientInfo, %struct._GradientInfo* %167, i32 0, i32 3, !dbg !10361
  %168 = load %struct._StopInfo*, %struct._StopInfo** %stops181, align 8, !dbg !10361
  %169 = load i64, i64* %j, align 8, !dbg !10362
  %arrayidx182 = getelementptr inbounds %struct._StopInfo, %struct._StopInfo* %168, i64 %169, !dbg !10360
  %offset183 = getelementptr inbounds %struct._StopInfo, %struct._StopInfo* %arrayidx182, i32 0, i32 1, !dbg !10363
  %170 = load float, float* %offset183, align 8, !dbg !10363
  %171 = load %struct._GradientInfo*, %struct._GradientInfo** %gradient, align 8, !dbg !10364
  %stops184 = getelementptr inbounds %struct._GradientInfo, %struct._GradientInfo* %171, i32 0, i32 3, !dbg !10365
  %172 = load %struct._StopInfo*, %struct._StopInfo** %stops184, align 8, !dbg !10365
  %173 = load i64, i64* %i, align 8, !dbg !10366
  %arrayidx185 = getelementptr inbounds %struct._StopInfo, %struct._StopInfo* %172, i64 %173, !dbg !10364
  %offset186 = getelementptr inbounds %struct._StopInfo, %struct._StopInfo* %arrayidx185, i32 0, i32 1, !dbg !10367
  %174 = load float, float* %offset186, align 8, !dbg !10367
  %sub187 = fsub float %170, %174, !dbg !10368
  %conv188 = fpext float %sub187 to double, !dbg !10369
  %div189 = fdiv double %sub180, %conv188, !dbg !10370
  store double %div189, double* %alpha, align 8, !dbg !10371
  %175 = load %struct._GradientInfo*, %struct._GradientInfo** %gradient, align 8, !dbg !10372
  %stops190 = getelementptr inbounds %struct._GradientInfo, %struct._GradientInfo* %175, i32 0, i32 3, !dbg !10373
  %176 = load %struct._StopInfo*, %struct._StopInfo** %stops190, align 8, !dbg !10373
  %177 = load i64, i64* %i, align 8, !dbg !10374
  %arrayidx191 = getelementptr inbounds %struct._StopInfo, %struct._StopInfo* %176, i64 %177, !dbg !10372
  %color192 = getelementptr inbounds %struct._StopInfo, %struct._StopInfo* %arrayidx191, i32 0, i32 0, !dbg !10375
  %178 = load double, double* %alpha, align 8, !dbg !10376
  %sub193 = fsub double 1.000000e+00, %178, !dbg !10377
  %conv194 = fptrunc double %sub193 to float, !dbg !10378
  %179 = load %struct._GradientInfo*, %struct._GradientInfo** %gradient, align 8, !dbg !10379
  %stops195 = getelementptr inbounds %struct._GradientInfo, %struct._GradientInfo* %179, i32 0, i32 3, !dbg !10380
  %180 = load %struct._StopInfo*, %struct._StopInfo** %stops195, align 8, !dbg !10380
  %181 = load i64, i64* %j, align 8, !dbg !10381
  %arrayidx196 = getelementptr inbounds %struct._StopInfo, %struct._StopInfo* %180, i64 %181, !dbg !10379
  %color197 = getelementptr inbounds %struct._StopInfo, %struct._StopInfo* %arrayidx196, i32 0, i32 0, !dbg !10382
  %182 = load double, double* %alpha, align 8, !dbg !10383
  %conv198 = fptrunc double %182 to float, !dbg !10383
  call void @MagickPixelCompositeBlend(%struct._MagickPixelPacket* %color192, float %conv194, %struct._MagickPixelPacket* %color197, float %conv198, %struct._MagickPixelPacket* %composite), !dbg !10384
  br label %if.end199

if.end199:                                        ; preds = %if.else174, %if.then168
  br label %if.end200

if.end200:                                        ; preds = %if.end199, %if.then160
  br label %sw.epilog, !dbg !10385

sw.bb201:                                         ; preds = %for.body32
  call void @llvm.dbg.declare(metadata double* %repeat, metadata !10386, metadata !DIExpression()), !dbg !10388
  call void @llvm.dbg.declare(metadata i32* %antialias, metadata !10389, metadata !DIExpression()), !dbg !10390
  store i32 0, i32* %antialias, align 4, !dbg !10391
  store double 0.000000e+00, double* %repeat, align 8, !dbg !10392
  %183 = load i64, i64* %x16, align 8, !dbg !10393
  %184 = load %struct._SegmentInfo*, %struct._SegmentInfo** %gradient_vector, align 8, !dbg !10395
  %x1202 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %184, i32 0, i32 0, !dbg !10396
  %185 = load double, double* %x1202, align 8, !dbg !10396
  %sub203 = fsub double %185, 5.000000e-01, !dbg !10397
  %186 = call double @llvm.ceil.f64(double %sub203), !dbg !10398
  %conv204 = fptosi double %186 to i64, !dbg !10399
  %cmp205 = icmp ne i64 %183, %conv204, !dbg !10400
  br i1 %cmp205, label %if.then213, label %lor.lhs.false207, !dbg !10401

lor.lhs.false207:                                 ; preds = %sw.bb201
  %187 = load i64, i64* %y, align 8, !dbg !10402
  %188 = load %struct._SegmentInfo*, %struct._SegmentInfo** %gradient_vector, align 8, !dbg !10403
  %y1208 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %188, i32 0, i32 1, !dbg !10404
  %189 = load double, double* %y1208, align 8, !dbg !10404
  %sub209 = fsub double %189, 5.000000e-01, !dbg !10405
  %190 = call double @llvm.ceil.f64(double %sub209), !dbg !10406
  %conv210 = fptosi double %190 to i64, !dbg !10407
  %cmp211 = icmp ne i64 %187, %conv210, !dbg !10408
  br i1 %cmp211, label %if.then213, label %if.end263, !dbg !10409

if.then213:                                       ; preds = %lor.lhs.false207, %sw.bb201
  %191 = load %struct._GradientInfo*, %struct._GradientInfo** %gradient, align 8, !dbg !10410
  %192 = load i64, i64* %x16, align 8, !dbg !10412
  %193 = load i64, i64* %y, align 8, !dbg !10413
  %call214 = call double @GetStopColorOffset(%struct._GradientInfo* %191, i64 %192, i64 %193), !dbg !10414
  store double %call214, double* %offset, align 8, !dbg !10415
  %194 = load %struct._GradientInfo*, %struct._GradientInfo** %gradient, align 8, !dbg !10416
  %type215 = getelementptr inbounds %struct._GradientInfo, %struct._GradientInfo* %194, i32 0, i32 0, !dbg !10418
  %195 = load i32, i32* %type215, align 8, !dbg !10418
  %cmp216 = icmp eq i32 %195, 1, !dbg !10419
  br i1 %cmp216, label %if.then218, label %if.else235, !dbg !10420

if.then218:                                       ; preds = %if.then213
  %196 = load double, double* %offset, align 8, !dbg !10421
  %197 = load double, double* %length, align 8, !dbg !10423
  %call219 = call double @fmod(double %196, double %197) #17, !dbg !10424
  store double %call219, double* %repeat, align 8, !dbg !10425
  %198 = load double, double* %repeat, align 8, !dbg !10426
  %cmp220 = fcmp olt double %198, 0.000000e+00, !dbg !10428
  br i1 %cmp220, label %if.then222, label %if.else226, !dbg !10429

if.then222:                                       ; preds = %if.then218
  %199 = load double, double* %length, align 8, !dbg !10430
  %200 = load double, double* %repeat, align 8, !dbg !10431
  %fneg223 = fneg double %200, !dbg !10432
  %201 = load double, double* %length, align 8, !dbg !10433
  %call224 = call double @fmod(double %fneg223, double %201) #17, !dbg !10434
  %sub225 = fsub double %199, %call224, !dbg !10435
  store double %sub225, double* %repeat, align 8, !dbg !10436
  br label %if.end228, !dbg !10437

if.else226:                                       ; preds = %if.then218
  %202 = load double, double* %offset, align 8, !dbg !10438
  %203 = load double, double* %length, align 8, !dbg !10439
  %call227 = call double @fmod(double %202, double %203) #17, !dbg !10440
  store double %call227, double* %repeat, align 8, !dbg !10441
  br label %if.end228

if.end228:                                        ; preds = %if.else226, %if.then222
  %204 = load double, double* %repeat, align 8, !dbg !10442
  %205 = load double, double* %length, align 8, !dbg !10443
  %cmp229 = fcmp olt double %204, %205, !dbg !10444
  br i1 %cmp229, label %land.rhs, label %land.end, !dbg !10445

land.rhs:                                         ; preds = %if.end228
  %206 = load double, double* %repeat, align 8, !dbg !10446
  %add231 = fadd double %206, 1.000000e+00, !dbg !10447
  %207 = load double, double* %length, align 8, !dbg !10448
  %cmp232 = fcmp ogt double %add231, %207, !dbg !10449
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end228
  %208 = phi i1 [ false, %if.end228 ], [ %cmp232, %land.rhs ], !dbg !10450
  %209 = zext i1 %208 to i64, !dbg !10451
  %cond = select i1 %208, i32 1, i32 0, !dbg !10451
  store i32 %cond, i32* %antialias, align 4, !dbg !10452
  %210 = load double, double* %repeat, align 8, !dbg !10453
  %211 = load double, double* %length, align 8, !dbg !10454
  %div234 = fdiv double %210, %211, !dbg !10455
  store double %div234, double* %offset, align 8, !dbg !10456
  br label %if.end262, !dbg !10457

if.else235:                                       ; preds = %if.then213
  %212 = load double, double* %offset, align 8, !dbg !10458
  %213 = load %struct._GradientInfo*, %struct._GradientInfo** %gradient, align 8, !dbg !10460
  %radius = getelementptr inbounds %struct._GradientInfo, %struct._GradientInfo* %213, i32 0, i32 9, !dbg !10461
  %214 = load float, float* %radius, align 8, !dbg !10461
  %conv236 = fpext float %214 to double, !dbg !10460
  %call237 = call double @fmod(double %212, double %conv236) #17, !dbg !10462
  store double %call237, double* %repeat, align 8, !dbg !10463
  %215 = load double, double* %repeat, align 8, !dbg !10464
  %cmp238 = fcmp olt double %215, 0.000000e+00, !dbg !10466
  br i1 %cmp238, label %if.then240, label %if.else248, !dbg !10467

if.then240:                                       ; preds = %if.else235
  %216 = load %struct._GradientInfo*, %struct._GradientInfo** %gradient, align 8, !dbg !10468
  %radius241 = getelementptr inbounds %struct._GradientInfo, %struct._GradientInfo* %216, i32 0, i32 9, !dbg !10469
  %217 = load float, float* %radius241, align 8, !dbg !10469
  %conv242 = fpext float %217 to double, !dbg !10468
  %218 = load double, double* %repeat, align 8, !dbg !10470
  %fneg243 = fneg double %218, !dbg !10471
  %219 = load %struct._GradientInfo*, %struct._GradientInfo** %gradient, align 8, !dbg !10472
  %radius244 = getelementptr inbounds %struct._GradientInfo, %struct._GradientInfo* %219, i32 0, i32 9, !dbg !10473
  %220 = load float, float* %radius244, align 8, !dbg !10473
  %conv245 = fpext float %220 to double, !dbg !10472
  %call246 = call double @fmod(double %fneg243, double %conv245) #17, !dbg !10474
  %sub247 = fsub double %conv242, %call246, !dbg !10475
  store double %sub247, double* %repeat, align 8, !dbg !10476
  br label %if.end252, !dbg !10477

if.else248:                                       ; preds = %if.else235
  %221 = load double, double* %offset, align 8, !dbg !10478
  %222 = load %struct._GradientInfo*, %struct._GradientInfo** %gradient, align 8, !dbg !10479
  %radius249 = getelementptr inbounds %struct._GradientInfo, %struct._GradientInfo* %222, i32 0, i32 9, !dbg !10480
  %223 = load float, float* %radius249, align 8, !dbg !10480
  %conv250 = fpext float %223 to double, !dbg !10479
  %call251 = call double @fmod(double %221, double %conv250) #17, !dbg !10481
  store double %call251, double* %repeat, align 8, !dbg !10482
  br label %if.end252

if.end252:                                        ; preds = %if.else248, %if.then240
  %224 = load double, double* %repeat, align 8, !dbg !10483
  %add253 = fadd double %224, 1.000000e+00, !dbg !10484
  %225 = load %struct._GradientInfo*, %struct._GradientInfo** %gradient, align 8, !dbg !10485
  %radius254 = getelementptr inbounds %struct._GradientInfo, %struct._GradientInfo* %225, i32 0, i32 9, !dbg !10486
  %226 = load float, float* %radius254, align 8, !dbg !10486
  %conv255 = fpext float %226 to double, !dbg !10485
  %cmp256 = fcmp ogt double %add253, %conv255, !dbg !10487
  %227 = zext i1 %cmp256 to i64, !dbg !10483
  %cond258 = select i1 %cmp256, i32 1, i32 0, !dbg !10483
  store i32 %cond258, i32* %antialias, align 4, !dbg !10488
  %228 = load double, double* %repeat, align 8, !dbg !10489
  %229 = load %struct._GradientInfo*, %struct._GradientInfo** %gradient, align 8, !dbg !10490
  %radius259 = getelementptr inbounds %struct._GradientInfo, %struct._GradientInfo* %229, i32 0, i32 9, !dbg !10491
  %230 = load float, float* %radius259, align 8, !dbg !10491
  %conv260 = fpext float %230 to double, !dbg !10490
  %div261 = fdiv double %228, %conv260, !dbg !10492
  store double %div261, double* %offset, align 8, !dbg !10493
  br label %if.end262

if.end262:                                        ; preds = %if.end252, %land.end
  br label %if.end263, !dbg !10494

if.end263:                                        ; preds = %if.end262, %lor.lhs.false207
  store i64 0, i64* %i, align 8, !dbg !10495
  br label %for.cond264, !dbg !10497

for.cond264:                                      ; preds = %for.inc277, %if.end263
  %231 = load i64, i64* %i, align 8, !dbg !10498
  %232 = load %struct._GradientInfo*, %struct._GradientInfo** %gradient, align 8, !dbg !10500
  %number_stops265 = getelementptr inbounds %struct._GradientInfo, %struct._GradientInfo* %232, i32 0, i32 4, !dbg !10501
  %233 = load i64, i64* %number_stops265, align 8, !dbg !10501
  %cmp266 = icmp slt i64 %231, %233, !dbg !10502
  br i1 %cmp266, label %for.body268, label %for.end279, !dbg !10503

for.body268:                                      ; preds = %for.cond264
  %234 = load double, double* %offset, align 8, !dbg !10504
  %235 = load %struct._GradientInfo*, %struct._GradientInfo** %gradient, align 8, !dbg !10506
  %stops269 = getelementptr inbounds %struct._GradientInfo, %struct._GradientInfo* %235, i32 0, i32 3, !dbg !10507
  %236 = load %struct._StopInfo*, %struct._StopInfo** %stops269, align 8, !dbg !10507
  %237 = load i64, i64* %i, align 8, !dbg !10508
  %arrayidx270 = getelementptr inbounds %struct._StopInfo, %struct._StopInfo* %236, i64 %237, !dbg !10506
  %offset271 = getelementptr inbounds %struct._StopInfo, %struct._StopInfo* %arrayidx270, i32 0, i32 1, !dbg !10509
  %238 = load float, float* %offset271, align 8, !dbg !10509
  %conv272 = fpext float %238 to double, !dbg !10506
  %cmp273 = fcmp olt double %234, %conv272, !dbg !10510
  br i1 %cmp273, label %if.then275, label %if.end276, !dbg !10511

if.then275:                                       ; preds = %for.body268
  br label %for.end279, !dbg !10512

if.end276:                                        ; preds = %for.body268
  br label %for.inc277, !dbg !10509

for.inc277:                                       ; preds = %if.end276
  %239 = load i64, i64* %i, align 8, !dbg !10513
  %inc278 = add nsw i64 %239, 1, !dbg !10513
  store i64 %inc278, i64* %i, align 8, !dbg !10513
  br label %for.cond264, !dbg !10514, !llvm.loop !10515

for.end279:                                       ; preds = %if.then275, %for.cond264
  %240 = load i64, i64* %i, align 8, !dbg !10517
  %cmp280 = icmp eq i64 %240, 0, !dbg !10519
  br i1 %cmp280, label %if.then282, label %if.else286, !dbg !10520

if.then282:                                       ; preds = %for.end279
  %241 = load %struct._GradientInfo*, %struct._GradientInfo** %gradient, align 8, !dbg !10521
  %stops283 = getelementptr inbounds %struct._GradientInfo, %struct._GradientInfo* %241, i32 0, i32 3, !dbg !10522
  %242 = load %struct._StopInfo*, %struct._StopInfo** %stops283, align 8, !dbg !10522
  %arrayidx284 = getelementptr inbounds %struct._StopInfo, %struct._StopInfo* %242, i64 0, !dbg !10521
  %color285 = getelementptr inbounds %struct._StopInfo, %struct._StopInfo* %arrayidx284, i32 0, i32 0, !dbg !10523
  %243 = bitcast %struct._MagickPixelPacket* %composite to i8*, !dbg !10523
  %244 = bitcast %struct._MagickPixelPacket* %color285 to i8*, !dbg !10523
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %243, i8* align 8 %244, i64 56, i1 false), !dbg !10523
  br label %if.end338, !dbg !10524

if.else286:                                       ; preds = %for.end279
  %245 = load i64, i64* %i, align 8, !dbg !10525
  %246 = load %struct._GradientInfo*, %struct._GradientInfo** %gradient, align 8, !dbg !10527
  %number_stops287 = getelementptr inbounds %struct._GradientInfo, %struct._GradientInfo* %246, i32 0, i32 4, !dbg !10528
  %247 = load i64, i64* %number_stops287, align 8, !dbg !10528
  %cmp288 = icmp eq i64 %245, %247, !dbg !10529
  br i1 %cmp288, label %if.then290, label %if.else296, !dbg !10530

if.then290:                                       ; preds = %if.else286
  %248 = load %struct._GradientInfo*, %struct._GradientInfo** %gradient, align 8, !dbg !10531
  %stops291 = getelementptr inbounds %struct._GradientInfo, %struct._GradientInfo* %248, i32 0, i32 3, !dbg !10532
  %249 = load %struct._StopInfo*, %struct._StopInfo** %stops291, align 8, !dbg !10532
  %250 = load %struct._GradientInfo*, %struct._GradientInfo** %gradient, align 8, !dbg !10533
  %number_stops292 = getelementptr inbounds %struct._GradientInfo, %struct._GradientInfo* %250, i32 0, i32 4, !dbg !10534
  %251 = load i64, i64* %number_stops292, align 8, !dbg !10534
  %sub293 = sub i64 %251, 1, !dbg !10535
  %arrayidx294 = getelementptr inbounds %struct._StopInfo, %struct._StopInfo* %249, i64 %sub293, !dbg !10531
  %color295 = getelementptr inbounds %struct._StopInfo, %struct._StopInfo* %arrayidx294, i32 0, i32 0, !dbg !10536
  %252 = bitcast %struct._MagickPixelPacket* %composite to i8*, !dbg !10536
  %253 = bitcast %struct._MagickPixelPacket* %color295 to i8*, !dbg !10536
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %252, i8* align 8 %253, i64 56, i1 false), !dbg !10536
  br label %if.end337, !dbg !10537

if.else296:                                       ; preds = %if.else286
  %254 = load i64, i64* %i, align 8, !dbg !10538
  store i64 %254, i64* %j, align 8, !dbg !10540
  %255 = load i64, i64* %i, align 8, !dbg !10541
  %dec297 = add nsw i64 %255, -1, !dbg !10541
  store i64 %dec297, i64* %i, align 8, !dbg !10541
  %256 = load double, double* %offset, align 8, !dbg !10542
  %257 = load %struct._GradientInfo*, %struct._GradientInfo** %gradient, align 8, !dbg !10543
  %stops298 = getelementptr inbounds %struct._GradientInfo, %struct._GradientInfo* %257, i32 0, i32 3, !dbg !10544
  %258 = load %struct._StopInfo*, %struct._StopInfo** %stops298, align 8, !dbg !10544
  %259 = load i64, i64* %i, align 8, !dbg !10545
  %arrayidx299 = getelementptr inbounds %struct._StopInfo, %struct._StopInfo* %258, i64 %259, !dbg !10543
  %offset300 = getelementptr inbounds %struct._StopInfo, %struct._StopInfo* %arrayidx299, i32 0, i32 1, !dbg !10546
  %260 = load float, float* %offset300, align 8, !dbg !10546
  %conv301 = fpext float %260 to double, !dbg !10543
  %sub302 = fsub double %256, %conv301, !dbg !10547
  %261 = load %struct._GradientInfo*, %struct._GradientInfo** %gradient, align 8, !dbg !10548
  %stops303 = getelementptr inbounds %struct._GradientInfo, %struct._GradientInfo* %261, i32 0, i32 3, !dbg !10549
  %262 = load %struct._StopInfo*, %struct._StopInfo** %stops303, align 8, !dbg !10549
  %263 = load i64, i64* %j, align 8, !dbg !10550
  %arrayidx304 = getelementptr inbounds %struct._StopInfo, %struct._StopInfo* %262, i64 %263, !dbg !10548
  %offset305 = getelementptr inbounds %struct._StopInfo, %struct._StopInfo* %arrayidx304, i32 0, i32 1, !dbg !10551
  %264 = load float, float* %offset305, align 8, !dbg !10551
  %265 = load %struct._GradientInfo*, %struct._GradientInfo** %gradient, align 8, !dbg !10552
  %stops306 = getelementptr inbounds %struct._GradientInfo, %struct._GradientInfo* %265, i32 0, i32 3, !dbg !10553
  %266 = load %struct._StopInfo*, %struct._StopInfo** %stops306, align 8, !dbg !10553
  %267 = load i64, i64* %i, align 8, !dbg !10554
  %arrayidx307 = getelementptr inbounds %struct._StopInfo, %struct._StopInfo* %266, i64 %267, !dbg !10552
  %offset308 = getelementptr inbounds %struct._StopInfo, %struct._StopInfo* %arrayidx307, i32 0, i32 1, !dbg !10555
  %268 = load float, float* %offset308, align 8, !dbg !10555
  %sub309 = fsub float %264, %268, !dbg !10556
  %conv310 = fpext float %sub309 to double, !dbg !10557
  %div311 = fdiv double %sub302, %conv310, !dbg !10558
  store double %div311, double* %alpha, align 8, !dbg !10559
  %269 = load i32, i32* %antialias, align 4, !dbg !10560
  %cmp312 = icmp ne i32 %269, 0, !dbg !10562
  br i1 %cmp312, label %if.then314, label %if.end327, !dbg !10563

if.then314:                                       ; preds = %if.else296
  %270 = load %struct._GradientInfo*, %struct._GradientInfo** %gradient, align 8, !dbg !10564
  %type315 = getelementptr inbounds %struct._GradientInfo, %struct._GradientInfo* %270, i32 0, i32 0, !dbg !10567
  %271 = load i32, i32* %type315, align 8, !dbg !10567
  %cmp316 = icmp eq i32 %271, 1, !dbg !10568
  br i1 %cmp316, label %if.then318, label %if.else320, !dbg !10569

if.then318:                                       ; preds = %if.then314
  %272 = load double, double* %length, align 8, !dbg !10570
  %273 = load double, double* %repeat, align 8, !dbg !10571
  %sub319 = fsub double %272, %273, !dbg !10572
  store double %sub319, double* %alpha, align 8, !dbg !10573
  br label %if.end324, !dbg !10574

if.else320:                                       ; preds = %if.then314
  %274 = load %struct._GradientInfo*, %struct._GradientInfo** %gradient, align 8, !dbg !10575
  %radius321 = getelementptr inbounds %struct._GradientInfo, %struct._GradientInfo* %274, i32 0, i32 9, !dbg !10576
  %275 = load float, float* %radius321, align 8, !dbg !10576
  %conv322 = fpext float %275 to double, !dbg !10575
  %276 = load double, double* %repeat, align 8, !dbg !10577
  %sub323 = fsub double %conv322, %276, !dbg !10578
  store double %sub323, double* %alpha, align 8, !dbg !10579
  br label %if.end324

if.end324:                                        ; preds = %if.else320, %if.then318
  store i64 0, i64* %i, align 8, !dbg !10580
  %277 = load %struct._GradientInfo*, %struct._GradientInfo** %gradient, align 8, !dbg !10581
  %number_stops325 = getelementptr inbounds %struct._GradientInfo, %struct._GradientInfo* %277, i32 0, i32 4, !dbg !10582
  %278 = load i64, i64* %number_stops325, align 8, !dbg !10582
  %sub326 = sub nsw i64 %278, 1, !dbg !10583
  store i64 %sub326, i64* %j, align 8, !dbg !10584
  br label %if.end327, !dbg !10585

if.end327:                                        ; preds = %if.end324, %if.else296
  %279 = load %struct._GradientInfo*, %struct._GradientInfo** %gradient, align 8, !dbg !10586
  %stops328 = getelementptr inbounds %struct._GradientInfo, %struct._GradientInfo* %279, i32 0, i32 3, !dbg !10587
  %280 = load %struct._StopInfo*, %struct._StopInfo** %stops328, align 8, !dbg !10587
  %281 = load i64, i64* %i, align 8, !dbg !10588
  %arrayidx329 = getelementptr inbounds %struct._StopInfo, %struct._StopInfo* %280, i64 %281, !dbg !10586
  %color330 = getelementptr inbounds %struct._StopInfo, %struct._StopInfo* %arrayidx329, i32 0, i32 0, !dbg !10589
  %282 = load double, double* %alpha, align 8, !dbg !10590
  %sub331 = fsub double 1.000000e+00, %282, !dbg !10591
  %conv332 = fptrunc double %sub331 to float, !dbg !10592
  %283 = load %struct._GradientInfo*, %struct._GradientInfo** %gradient, align 8, !dbg !10593
  %stops333 = getelementptr inbounds %struct._GradientInfo, %struct._GradientInfo* %283, i32 0, i32 3, !dbg !10594
  %284 = load %struct._StopInfo*, %struct._StopInfo** %stops333, align 8, !dbg !10594
  %285 = load i64, i64* %j, align 8, !dbg !10595
  %arrayidx334 = getelementptr inbounds %struct._StopInfo, %struct._StopInfo* %284, i64 %285, !dbg !10593
  %color335 = getelementptr inbounds %struct._StopInfo, %struct._StopInfo* %arrayidx334, i32 0, i32 0, !dbg !10596
  %286 = load double, double* %alpha, align 8, !dbg !10597
  %conv336 = fptrunc double %286 to float, !dbg !10597
  call void @MagickPixelCompositeBlend(%struct._MagickPixelPacket* %color330, float %conv332, %struct._MagickPixelPacket* %color335, float %conv336, %struct._MagickPixelPacket* %composite), !dbg !10598
  br label %if.end337

if.end337:                                        ; preds = %if.end327, %if.then290
  br label %if.end338

if.end338:                                        ; preds = %if.end337, %if.then282
  br label %sw.epilog, !dbg !10599

sw.epilog:                                        ; preds = %for.body32, %if.end338, %if.end200, %if.end106
  %opacity = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %composite, i32 0, i32 8, !dbg !10600
  %287 = load float, float* %opacity, align 4, !dbg !10600
  %opacity339 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 8, !dbg !10601
  %288 = load float, float* %opacity339, align 4, !dbg !10601
  call void @MagickPixelCompositeOver(%struct._MagickPixelPacket* %composite, float %287, %struct._MagickPixelPacket* %pixel, float %288, %struct._MagickPixelPacket* %pixel), !dbg !10602
  %289 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !10603
  %290 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !10604
  %291 = load i16*, i16** %indexes, align 8, !dbg !10605
  %292 = load i64, i64* %x16, align 8, !dbg !10606
  %add.ptr340 = getelementptr inbounds i16, i16* %291, i64 %292, !dbg !10607
  call void @SetPixelPacket(%struct._Image* %289, %struct._MagickPixelPacket* %pixel, %struct._PixelPacket* %290, i16* %add.ptr340), !dbg !10608
  %293 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !10609
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %293, i32 1, !dbg !10609
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %q, align 8, !dbg !10609
  br label %for.inc341, !dbg !10610

for.inc341:                                       ; preds = %sw.epilog
  %294 = load i64, i64* %x16, align 8, !dbg !10611
  %inc342 = add nsw i64 %294, 1, !dbg !10611
  store i64 %inc342, i64* %x16, align 8, !dbg !10611
  br label %for.cond30, !dbg !10612, !llvm.loop !10613

for.end343:                                       ; preds = %for.cond30
  %295 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !10615
  %296 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !10617
  %call344 = call i32 @SyncCacheViewAuthenticPixels(%struct._CacheView* %295, %struct._ExceptionInfo* %296), !dbg !10618
  %cmp345 = icmp eq i32 %call344, 0, !dbg !10619
  br i1 %cmp345, label %if.then347, label %if.end348, !dbg !10620

if.then347:                                       ; preds = %for.end343
  store i32 0, i32* %status, align 4, !dbg !10621
  br label %if.end348, !dbg !10622

if.end348:                                        ; preds = %if.then347, %for.end343
  br label %for.inc349, !dbg !10623

for.inc349:                                       ; preds = %if.end348, %if.then22, %if.then18
  %297 = load i64, i64* %y, align 8, !dbg !10624
  %inc350 = add nsw i64 %297, 1, !dbg !10624
  store i64 %inc350, i64* %y, align 8, !dbg !10624
  br label %for.cond, !dbg !10625, !llvm.loop !10626

for.end351:                                       ; preds = %for.cond
  %298 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !10628
  %call352 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %298), !dbg !10629
  store %struct._CacheView* %call352, %struct._CacheView** %image_view, align 8, !dbg !10630
  %299 = load i32, i32* %status, align 4, !dbg !10631
  ret i32 %299, !dbg !10632
}

; Function Attrs: nounwind
declare dso_local double @sqrt(double) #10

; Function Attrs: noinline nounwind uwtable
define internal double @GetStopColorOffset(%struct._GradientInfo* %gradient, i64 %x, i64 %y) #0 !dbg !10633 {
entry:
  %retval = alloca double, align 8
  %gradient.addr = alloca %struct._GradientInfo*, align 8
  %x.addr = alloca i64, align 8
  %y.addr = alloca i64, align 8
  %gamma = alloca double, align 8
  %length = alloca double, align 8
  %offset = alloca double, align 8
  %scale = alloca double, align 8
  %p = alloca %struct._PointInfo, align 8
  %q = alloca %struct._PointInfo, align 8
  %gradient_vector = alloca %struct._SegmentInfo*, align 8
  %length38 = alloca double, align 8
  %offset39 = alloca double, align 8
  %v = alloca %struct._PointInfo, align 8
  store %struct._GradientInfo* %gradient, %struct._GradientInfo** %gradient.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._GradientInfo** %gradient.addr, metadata !10637, metadata !DIExpression()), !dbg !10638
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !10639, metadata !DIExpression()), !dbg !10640
  store i64 %y, i64* %y.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %y.addr, metadata !10641, metadata !DIExpression()), !dbg !10642
  %0 = load %struct._GradientInfo*, %struct._GradientInfo** %gradient.addr, align 8, !dbg !10643
  %type = getelementptr inbounds %struct._GradientInfo, %struct._GradientInfo* %0, i32 0, i32 0, !dbg !10644
  %1 = load i32, i32* %type, align 8, !dbg !10644
  switch i32 %1, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb
    i32 2, label %sw.bb37
  ], !dbg !10645

sw.bb:                                            ; preds = %entry, %entry
  call void @llvm.dbg.declare(metadata double* %gamma, metadata !10646, metadata !DIExpression()), !dbg !10649
  call void @llvm.dbg.declare(metadata double* %length, metadata !10650, metadata !DIExpression()), !dbg !10651
  call void @llvm.dbg.declare(metadata double* %offset, metadata !10652, metadata !DIExpression()), !dbg !10653
  call void @llvm.dbg.declare(metadata double* %scale, metadata !10654, metadata !DIExpression()), !dbg !10655
  call void @llvm.dbg.declare(metadata %struct._PointInfo* %p, metadata !10656, metadata !DIExpression()), !dbg !10657
  call void @llvm.dbg.declare(metadata %struct._PointInfo* %q, metadata !10658, metadata !DIExpression()), !dbg !10659
  call void @llvm.dbg.declare(metadata %struct._SegmentInfo** %gradient_vector, metadata !10660, metadata !DIExpression()), !dbg !10661
  %2 = load %struct._GradientInfo*, %struct._GradientInfo** %gradient.addr, align 8, !dbg !10662
  %gradient_vector1 = getelementptr inbounds %struct._GradientInfo, %struct._GradientInfo* %2, i32 0, i32 2, !dbg !10663
  store %struct._SegmentInfo* %gradient_vector1, %struct._SegmentInfo** %gradient_vector, align 8, !dbg !10664
  %3 = load %struct._SegmentInfo*, %struct._SegmentInfo** %gradient_vector, align 8, !dbg !10665
  %x2 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %3, i32 0, i32 2, !dbg !10666
  %4 = load double, double* %x2, align 8, !dbg !10666
  %5 = load %struct._SegmentInfo*, %struct._SegmentInfo** %gradient_vector, align 8, !dbg !10667
  %x1 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %5, i32 0, i32 0, !dbg !10668
  %6 = load double, double* %x1, align 8, !dbg !10668
  %sub = fsub double %4, %6, !dbg !10669
  %x3 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %p, i32 0, i32 0, !dbg !10670
  store double %sub, double* %x3, align 8, !dbg !10671
  %7 = load %struct._SegmentInfo*, %struct._SegmentInfo** %gradient_vector, align 8, !dbg !10672
  %y2 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %7, i32 0, i32 3, !dbg !10673
  %8 = load double, double* %y2, align 8, !dbg !10673
  %9 = load %struct._SegmentInfo*, %struct._SegmentInfo** %gradient_vector, align 8, !dbg !10674
  %y1 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %9, i32 0, i32 1, !dbg !10675
  %10 = load double, double* %y1, align 8, !dbg !10675
  %sub4 = fsub double %8, %10, !dbg !10676
  %y5 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %p, i32 0, i32 1, !dbg !10677
  store double %sub4, double* %y5, align 8, !dbg !10678
  %11 = load i64, i64* %x.addr, align 8, !dbg !10679
  %conv = sitofp i64 %11 to double, !dbg !10680
  %12 = load %struct._SegmentInfo*, %struct._SegmentInfo** %gradient_vector, align 8, !dbg !10681
  %x16 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %12, i32 0, i32 0, !dbg !10682
  %13 = load double, double* %x16, align 8, !dbg !10682
  %sub7 = fsub double %conv, %13, !dbg !10683
  %x8 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %q, i32 0, i32 0, !dbg !10684
  store double %sub7, double* %x8, align 8, !dbg !10685
  %14 = load i64, i64* %y.addr, align 8, !dbg !10686
  %conv9 = sitofp i64 %14 to double, !dbg !10687
  %15 = load %struct._SegmentInfo*, %struct._SegmentInfo** %gradient_vector, align 8, !dbg !10688
  %y110 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %15, i32 0, i32 1, !dbg !10689
  %16 = load double, double* %y110, align 8, !dbg !10689
  %sub11 = fsub double %conv9, %16, !dbg !10690
  %y12 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %q, i32 0, i32 1, !dbg !10691
  store double %sub11, double* %y12, align 8, !dbg !10692
  %x13 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %q, i32 0, i32 0, !dbg !10693
  %17 = load double, double* %x13, align 8, !dbg !10693
  %x14 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %q, i32 0, i32 0, !dbg !10694
  %18 = load double, double* %x14, align 8, !dbg !10694
  %mul = fmul double %17, %18, !dbg !10695
  %y15 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %q, i32 0, i32 1, !dbg !10696
  %19 = load double, double* %y15, align 8, !dbg !10696
  %y16 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %q, i32 0, i32 1, !dbg !10697
  %20 = load double, double* %y16, align 8, !dbg !10697
  %mul17 = fmul double %19, %20, !dbg !10698
  %add = fadd double %mul, %mul17, !dbg !10699
  %call = call double @sqrt(double %add) #17, !dbg !10700
  store double %call, double* %length, align 8, !dbg !10701
  %x18 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %p, i32 0, i32 0, !dbg !10702
  %21 = load double, double* %x18, align 8, !dbg !10702
  %x19 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %p, i32 0, i32 0, !dbg !10703
  %22 = load double, double* %x19, align 8, !dbg !10703
  %mul20 = fmul double %21, %22, !dbg !10704
  %y21 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %p, i32 0, i32 1, !dbg !10705
  %23 = load double, double* %y21, align 8, !dbg !10705
  %y22 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %p, i32 0, i32 1, !dbg !10706
  %24 = load double, double* %y22, align 8, !dbg !10706
  %mul23 = fmul double %23, %24, !dbg !10707
  %add24 = fadd double %mul20, %mul23, !dbg !10708
  %call25 = call double @sqrt(double %add24) #17, !dbg !10709
  %25 = load double, double* %length, align 8, !dbg !10710
  %mul26 = fmul double %call25, %25, !dbg !10711
  store double %mul26, double* %gamma, align 8, !dbg !10712
  %26 = load double, double* %gamma, align 8, !dbg !10713
  %call27 = call double @PerceptibleReciprocal(double %26), !dbg !10714
  store double %call27, double* %gamma, align 8, !dbg !10715
  %x28 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %p, i32 0, i32 0, !dbg !10716
  %27 = load double, double* %x28, align 8, !dbg !10716
  %x29 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %q, i32 0, i32 0, !dbg !10717
  %28 = load double, double* %x29, align 8, !dbg !10717
  %mul30 = fmul double %27, %28, !dbg !10718
  %y31 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %p, i32 0, i32 1, !dbg !10719
  %29 = load double, double* %y31, align 8, !dbg !10719
  %y32 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %q, i32 0, i32 1, !dbg !10720
  %30 = load double, double* %y32, align 8, !dbg !10720
  %mul33 = fmul double %29, %30, !dbg !10721
  %add34 = fadd double %mul30, %mul33, !dbg !10722
  store double %add34, double* %scale, align 8, !dbg !10723
  %31 = load double, double* %gamma, align 8, !dbg !10724
  %32 = load double, double* %scale, align 8, !dbg !10725
  %mul35 = fmul double %31, %32, !dbg !10726
  %33 = load double, double* %length, align 8, !dbg !10727
  %mul36 = fmul double %mul35, %33, !dbg !10728
  store double %mul36, double* %offset, align 8, !dbg !10729
  %34 = load double, double* %offset, align 8, !dbg !10730
  store double %34, double* %retval, align 8, !dbg !10731
  br label %return, !dbg !10731

sw.bb37:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata double* %length38, metadata !10732, metadata !DIExpression()), !dbg !10734
  call void @llvm.dbg.declare(metadata double* %offset39, metadata !10735, metadata !DIExpression()), !dbg !10736
  call void @llvm.dbg.declare(metadata %struct._PointInfo* %v, metadata !10737, metadata !DIExpression()), !dbg !10738
  %35 = load i64, i64* %x.addr, align 8, !dbg !10739
  %conv40 = sitofp i64 %35 to double, !dbg !10740
  %36 = load %struct._GradientInfo*, %struct._GradientInfo** %gradient.addr, align 8, !dbg !10741
  %center = getelementptr inbounds %struct._GradientInfo, %struct._GradientInfo* %36, i32 0, i32 8, !dbg !10742
  %x41 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %center, i32 0, i32 0, !dbg !10743
  %37 = load double, double* %x41, align 8, !dbg !10743
  %sub42 = fsub double %conv40, %37, !dbg !10744
  %x43 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %v, i32 0, i32 0, !dbg !10745
  store double %sub42, double* %x43, align 8, !dbg !10746
  %38 = load i64, i64* %y.addr, align 8, !dbg !10747
  %conv44 = sitofp i64 %38 to double, !dbg !10748
  %39 = load %struct._GradientInfo*, %struct._GradientInfo** %gradient.addr, align 8, !dbg !10749
  %center45 = getelementptr inbounds %struct._GradientInfo, %struct._GradientInfo* %39, i32 0, i32 8, !dbg !10750
  %y46 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %center45, i32 0, i32 1, !dbg !10751
  %40 = load double, double* %y46, align 8, !dbg !10751
  %sub47 = fsub double %conv44, %40, !dbg !10752
  %y48 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %v, i32 0, i32 1, !dbg !10753
  store double %sub47, double* %y48, align 8, !dbg !10754
  %x49 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %v, i32 0, i32 0, !dbg !10755
  %41 = load double, double* %x49, align 8, !dbg !10755
  %x50 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %v, i32 0, i32 0, !dbg !10756
  %42 = load double, double* %x50, align 8, !dbg !10756
  %mul51 = fmul double %41, %42, !dbg !10757
  %y52 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %v, i32 0, i32 1, !dbg !10758
  %43 = load double, double* %y52, align 8, !dbg !10758
  %y53 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %v, i32 0, i32 1, !dbg !10759
  %44 = load double, double* %y53, align 8, !dbg !10759
  %mul54 = fmul double %43, %44, !dbg !10760
  %add55 = fadd double %mul51, %mul54, !dbg !10761
  %call56 = call double @sqrt(double %add55) #17, !dbg !10762
  store double %call56, double* %length38, align 8, !dbg !10763
  %45 = load %struct._GradientInfo*, %struct._GradientInfo** %gradient.addr, align 8, !dbg !10764
  %spread = getelementptr inbounds %struct._GradientInfo, %struct._GradientInfo* %45, i32 0, i32 5, !dbg !10766
  %46 = load i32, i32* %spread, align 8, !dbg !10766
  %cmp = icmp eq i32 %46, 3, !dbg !10767
  br i1 %cmp, label %if.then, label %if.end, !dbg !10768

if.then:                                          ; preds = %sw.bb37
  %47 = load double, double* %length38, align 8, !dbg !10769
  store double %47, double* %retval, align 8, !dbg !10770
  br label %return, !dbg !10770

if.end:                                           ; preds = %sw.bb37
  %48 = load double, double* %length38, align 8, !dbg !10771
  %49 = load %struct._GradientInfo*, %struct._GradientInfo** %gradient.addr, align 8, !dbg !10772
  %radius = getelementptr inbounds %struct._GradientInfo, %struct._GradientInfo* %49, i32 0, i32 9, !dbg !10773
  %50 = load float, float* %radius, align 8, !dbg !10773
  %conv58 = fpext float %50 to double, !dbg !10772
  %div = fdiv double %48, %conv58, !dbg !10774
  store double %div, double* %offset39, align 8, !dbg !10775
  %51 = load double, double* %offset39, align 8, !dbg !10776
  store double %51, double* %retval, align 8, !dbg !10777
  br label %return, !dbg !10777

sw.epilog:                                        ; preds = %entry
  store double 0.000000e+00, double* %retval, align 8, !dbg !10778
  br label %return, !dbg !10778

return:                                           ; preds = %sw.epilog, %if.end, %if.then, %sw.bb
  %52 = load double, double* %retval, align 8, !dbg !10779
  ret double %52, !dbg !10779
}

; Function Attrs: noinline nounwind uwtable
define internal void @MagickPixelCompositeBlend(%struct._MagickPixelPacket* %p, float %alpha, %struct._MagickPixelPacket* %q, float %beta, %struct._MagickPixelPacket* %composite) #0 !dbg !10780 {
entry:
  %p.addr = alloca %struct._MagickPixelPacket*, align 8
  %alpha.addr = alloca float, align 4
  %q.addr = alloca %struct._MagickPixelPacket*, align 8
  %beta.addr = alloca float, align 4
  %composite.addr = alloca %struct._MagickPixelPacket*, align 8
  store %struct._MagickPixelPacket* %p, %struct._MagickPixelPacket** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %p.addr, metadata !10781, metadata !DIExpression()), !dbg !10782
  store float %alpha, float* %alpha.addr, align 4
  call void @llvm.dbg.declare(metadata float* %alpha.addr, metadata !10783, metadata !DIExpression()), !dbg !10784
  store %struct._MagickPixelPacket* %q, %struct._MagickPixelPacket** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %q.addr, metadata !10785, metadata !DIExpression()), !dbg !10786
  store float %beta, float* %beta.addr, align 4
  call void @llvm.dbg.declare(metadata float* %beta.addr, metadata !10787, metadata !DIExpression()), !dbg !10788
  store %struct._MagickPixelPacket* %composite, %struct._MagickPixelPacket** %composite.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %composite.addr, metadata !10789, metadata !DIExpression()), !dbg !10790
  %0 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !10791
  %1 = load float, float* %alpha.addr, align 4, !dbg !10792
  %2 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !10793
  %opacity = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %2, i32 0, i32 8, !dbg !10794
  %3 = load float, float* %opacity, align 4, !dbg !10794
  %sub = fsub float 6.553500e+04, %3, !dbg !10795
  %mul = fmul float %1, %sub, !dbg !10796
  %sub1 = fsub float 6.553500e+04, %mul, !dbg !10797
  %4 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !10798
  %5 = load float, float* %beta.addr, align 4, !dbg !10799
  %6 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !10800
  %opacity2 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %6, i32 0, i32 8, !dbg !10801
  %7 = load float, float* %opacity2, align 4, !dbg !10801
  %sub3 = fsub float 6.553500e+04, %7, !dbg !10802
  %mul4 = fmul float %5, %sub3, !dbg !10803
  %sub5 = fsub float 6.553500e+04, %mul4, !dbg !10804
  %8 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !10805
  call void @MagickPixelCompositePlus(%struct._MagickPixelPacket* %0, float %sub1, %struct._MagickPixelPacket* %4, float %sub5, %struct._MagickPixelPacket* %8), !dbg !10806
  ret void, !dbg !10807
}

declare dso_local %struct._Image* @AcquireImage(%struct._ImageInfo*) #3

; Function Attrs: noinline nounwind uwtable
define internal i32 @IsGrayColorspace(i32 %colorspace) #0 !dbg !10808 {
entry:
  %retval = alloca i32, align 4
  %colorspace.addr = alloca i32, align 4
  store i32 %colorspace, i32* %colorspace.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %colorspace.addr, metadata !10813, metadata !DIExpression()), !dbg !10814
  %0 = load i32, i32* %colorspace.addr, align 4, !dbg !10815
  %cmp = icmp eq i32 %0, 2, !dbg !10817
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !10818

lor.lhs.false:                                    ; preds = %entry
  %1 = load i32, i32* %colorspace.addr, align 4, !dbg !10819
  %cmp1 = icmp eq i32 %1, 17, !dbg !10820
  br i1 %cmp1, label %if.then, label %lor.lhs.false2, !dbg !10821

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %2 = load i32, i32* %colorspace.addr, align 4, !dbg !10822
  %cmp3 = icmp eq i32 %2, 19, !dbg !10823
  br i1 %cmp3, label %if.then, label %if.end, !dbg !10824

if.then:                                          ; preds = %lor.lhs.false2, %lor.lhs.false, %entry
  store i32 1, i32* %retval, align 4, !dbg !10825
  br label %return, !dbg !10825

if.end:                                           ; preds = %lor.lhs.false2
  store i32 0, i32* %retval, align 4, !dbg !10826
  br label %return, !dbg !10826

return:                                           ; preds = %if.end, %if.then
  %3 = load i32, i32* %retval, align 4, !dbg !10827
  ret i32 %3, !dbg !10827
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @IsPixelGray(%struct._PixelPacket* %pixel) #0 !dbg !10828 {
entry:
  %retval = alloca i32, align 4
  %pixel.addr = alloca %struct._PixelPacket*, align 8
  %blue = alloca float, align 4
  %green = alloca float, align 4
  %red = alloca float, align 4
  store %struct._PixelPacket* %pixel, %struct._PixelPacket** %pixel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %pixel.addr, metadata !10832, metadata !DIExpression()), !dbg !10833
  call void @llvm.dbg.declare(metadata float* %blue, metadata !10834, metadata !DIExpression()), !dbg !10835
  call void @llvm.dbg.declare(metadata float* %green, metadata !10836, metadata !DIExpression()), !dbg !10837
  call void @llvm.dbg.declare(metadata float* %red, metadata !10838, metadata !DIExpression()), !dbg !10839
  %0 = load %struct._PixelPacket*, %struct._PixelPacket** %pixel.addr, align 8, !dbg !10840
  %red1 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %0, i32 0, i32 2, !dbg !10841
  %1 = load i16, i16* %red1, align 2, !dbg !10841
  %conv = uitofp i16 %1 to float, !dbg !10842
  store float %conv, float* %red, align 4, !dbg !10843
  %2 = load %struct._PixelPacket*, %struct._PixelPacket** %pixel.addr, align 8, !dbg !10844
  %green2 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %2, i32 0, i32 1, !dbg !10845
  %3 = load i16, i16* %green2, align 2, !dbg !10845
  %conv3 = uitofp i16 %3 to float, !dbg !10846
  store float %conv3, float* %green, align 4, !dbg !10847
  %4 = load %struct._PixelPacket*, %struct._PixelPacket** %pixel.addr, align 8, !dbg !10848
  %blue4 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %4, i32 0, i32 0, !dbg !10849
  %5 = load i16, i16* %blue4, align 2, !dbg !10849
  %conv5 = uitofp i16 %5 to float, !dbg !10850
  store float %conv5, float* %blue, align 4, !dbg !10851
  %6 = load float, float* %red, align 4, !dbg !10852
  %7 = load float, float* %green, align 4, !dbg !10854
  %sub = fsub float %6, %7, !dbg !10855
  %call = call float @AbsolutePixelValue(float %sub), !dbg !10856
  %conv6 = fpext float %call to double, !dbg !10856
  %cmp = fcmp olt double %conv6, 1.000000e-15, !dbg !10857
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !10858

land.lhs.true:                                    ; preds = %entry
  %8 = load float, float* %green, align 4, !dbg !10859
  %9 = load float, float* %blue, align 4, !dbg !10860
  %sub8 = fsub float %8, %9, !dbg !10861
  %call9 = call float @AbsolutePixelValue(float %sub8), !dbg !10862
  %conv10 = fpext float %call9 to double, !dbg !10862
  %cmp11 = fcmp olt double %conv10, 1.000000e-15, !dbg !10863
  br i1 %cmp11, label %if.then, label %if.end, !dbg !10864

if.then:                                          ; preds = %land.lhs.true
  store i32 1, i32* %retval, align 4, !dbg !10865
  br label %return, !dbg !10865

if.end:                                           ; preds = %land.lhs.true, %entry
  store i32 0, i32* %retval, align 4, !dbg !10866
  br label %return, !dbg !10866

return:                                           ; preds = %if.end, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !10867
  ret i32 %10, !dbg !10867
}

declare dso_local i32 @SetImageColorspace(%struct._Image*, i32) #3

; Function Attrs: noinline nounwind uwtable
define internal i32 @GetFillColor(%struct._DrawInfo* %draw_info, i64 %x, i64 %y, %struct._PixelPacket* %pixel) #0 !dbg !10868 {
entry:
  %retval = alloca i32, align 4
  %draw_info.addr = alloca %struct._DrawInfo*, align 8
  %x.addr = alloca i64, align 8
  %y.addr = alloca i64, align 8
  %pixel.addr = alloca %struct._PixelPacket*, align 8
  %pattern = alloca %struct._Image*, align 8
  %status = alloca i32, align 4
  store %struct._DrawInfo* %draw_info, %struct._DrawInfo** %draw_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawInfo** %draw_info.addr, metadata !10872, metadata !DIExpression()), !dbg !10873
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !10874, metadata !DIExpression()), !dbg !10875
  store i64 %y, i64* %y.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %y.addr, metadata !10876, metadata !DIExpression()), !dbg !10877
  store %struct._PixelPacket* %pixel, %struct._PixelPacket** %pixel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %pixel.addr, metadata !10878, metadata !DIExpression()), !dbg !10879
  call void @llvm.dbg.declare(metadata %struct._Image** %pattern, metadata !10880, metadata !DIExpression()), !dbg !10881
  call void @llvm.dbg.declare(metadata i32* %status, metadata !10882, metadata !DIExpression()), !dbg !10883
  %0 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !10884
  %fill_pattern = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %0, i32 0, i32 9, !dbg !10885
  %1 = load %struct._Image*, %struct._Image** %fill_pattern, align 8, !dbg !10885
  store %struct._Image* %1, %struct._Image** %pattern, align 8, !dbg !10886
  %2 = load %struct._Image*, %struct._Image** %pattern, align 8, !dbg !10887
  %cmp = icmp eq %struct._Image* %2, null, !dbg !10889
  br i1 %cmp, label %if.then, label %if.end, !dbg !10890

if.then:                                          ; preds = %entry
  %3 = load %struct._PixelPacket*, %struct._PixelPacket** %pixel.addr, align 8, !dbg !10891
  %4 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !10893
  %fill = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %4, i32 0, i32 5, !dbg !10894
  %5 = bitcast %struct._PixelPacket* %3 to i8*, !dbg !10894
  %6 = bitcast %struct._PixelPacket* %fill to i8*, !dbg !10894
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %5, i8* align 4 %6, i64 8, i1 false), !dbg !10894
  store i32 1, i32* %retval, align 4, !dbg !10895
  br label %return, !dbg !10895

if.end:                                           ; preds = %entry
  %7 = load %struct._Image*, %struct._Image** %pattern, align 8, !dbg !10896
  %8 = load i64, i64* %x.addr, align 8, !dbg !10897
  %9 = load %struct._Image*, %struct._Image** %pattern, align 8, !dbg !10898
  %tile_offset = getelementptr inbounds %struct._Image, %struct._Image* %9, i32 0, i32 74, !dbg !10899
  %x1 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %tile_offset, i32 0, i32 2, !dbg !10900
  %10 = load i64, i64* %x1, align 8, !dbg !10900
  %add = add nsw i64 %8, %10, !dbg !10901
  %11 = load i64, i64* %y.addr, align 8, !dbg !10902
  %12 = load %struct._Image*, %struct._Image** %pattern, align 8, !dbg !10903
  %tile_offset2 = getelementptr inbounds %struct._Image, %struct._Image* %12, i32 0, i32 74, !dbg !10904
  %y3 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %tile_offset2, i32 0, i32 3, !dbg !10905
  %13 = load i64, i64* %y3, align 8, !dbg !10905
  %add4 = add nsw i64 %11, %13, !dbg !10906
  %14 = load %struct._PixelPacket*, %struct._PixelPacket** %pixel.addr, align 8, !dbg !10907
  %15 = load %struct._Image*, %struct._Image** %pattern, align 8, !dbg !10908
  %exception = getelementptr inbounds %struct._Image, %struct._Image* %15, i32 0, i32 58, !dbg !10909
  %call = call i32 @GetOneVirtualMethodPixel(%struct._Image* %7, i32 7, i64 %add, i64 %add4, %struct._PixelPacket* %14, %struct._ExceptionInfo* %exception), !dbg !10910
  store i32 %call, i32* %status, align 4, !dbg !10911
  %16 = load %struct._Image*, %struct._Image** %pattern, align 8, !dbg !10912
  %matte = getelementptr inbounds %struct._Image, %struct._Image* %16, i32 0, i32 6, !dbg !10914
  %17 = load i32, i32* %matte, align 8, !dbg !10914
  %cmp5 = icmp eq i32 %17, 0, !dbg !10915
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !10916

if.then6:                                         ; preds = %if.end
  %18 = load %struct._PixelPacket*, %struct._PixelPacket** %pixel.addr, align 8, !dbg !10917
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %18, i32 0, i32 3, !dbg !10918
  store i16 0, i16* %opacity, align 2, !dbg !10919
  br label %if.end7, !dbg !10917

if.end7:                                          ; preds = %if.then6, %if.end
  %19 = load i32, i32* %status, align 4, !dbg !10920
  store i32 %19, i32* %retval, align 4, !dbg !10921
  br label %return, !dbg !10921

return:                                           ; preds = %if.end7, %if.then
  %20 = load i32, i32* %retval, align 4, !dbg !10922
  ret i32 %20, !dbg !10922
}

; Function Attrs: noinline nounwind uwtable
define internal void @MagickCompositeOver(%struct._PixelPacket* %p, float %alpha, %struct._PixelPacket* %q, float %beta, %struct._PixelPacket* %composite) #0 !dbg !10923 {
entry:
  %p.addr = alloca %struct._PixelPacket*, align 8
  %alpha.addr = alloca float, align 4
  %q.addr = alloca %struct._PixelPacket*, align 8
  %beta.addr = alloca float, align 4
  %composite.addr = alloca %struct._PixelPacket*, align 8
  %gamma = alloca double, align 8
  store %struct._PixelPacket* %p, %struct._PixelPacket** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %p.addr, metadata !10926, metadata !DIExpression()), !dbg !10927
  store float %alpha, float* %alpha.addr, align 4
  call void @llvm.dbg.declare(metadata float* %alpha.addr, metadata !10928, metadata !DIExpression()), !dbg !10929
  store %struct._PixelPacket* %q, %struct._PixelPacket** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q.addr, metadata !10930, metadata !DIExpression()), !dbg !10931
  store float %beta, float* %beta.addr, align 4
  call void @llvm.dbg.declare(metadata float* %beta.addr, metadata !10932, metadata !DIExpression()), !dbg !10933
  store %struct._PixelPacket* %composite, %struct._PixelPacket** %composite.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %composite.addr, metadata !10934, metadata !DIExpression()), !dbg !10935
  call void @llvm.dbg.declare(metadata double* %gamma, metadata !10936, metadata !DIExpression()), !dbg !10937
  %0 = load float, float* %alpha.addr, align 4, !dbg !10938
  %cmp = fcmp oeq float %0, 6.553500e+04, !dbg !10940
  br i1 %cmp, label %if.then, label %if.end3, !dbg !10941

if.then:                                          ; preds = %entry
  %1 = load %struct._PixelPacket*, %struct._PixelPacket** %composite.addr, align 8, !dbg !10942
  %2 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !10945
  %cmp1 = icmp ne %struct._PixelPacket* %1, %2, !dbg !10946
  br i1 %cmp1, label %if.then2, label %if.end, !dbg !10947

if.then2:                                         ; preds = %if.then
  %3 = load %struct._PixelPacket*, %struct._PixelPacket** %composite.addr, align 8, !dbg !10948
  %4 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !10949
  %5 = bitcast %struct._PixelPacket* %3 to i8*, !dbg !10950
  %6 = bitcast %struct._PixelPacket* %4 to i8*, !dbg !10950
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %5, i8* align 2 %6, i64 8, i1 false), !dbg !10950
  br label %if.end, !dbg !10951

if.end:                                           ; preds = %if.then2, %if.then
  br label %return, !dbg !10952

if.end3:                                          ; preds = %entry
  %7 = load float, float* %alpha.addr, align 4, !dbg !10953
  %conv = fpext float %7 to double, !dbg !10953
  %mul = fmul double 0x3DF0002000300040, %conv, !dbg !10954
  %8 = load float, float* %beta.addr, align 4, !dbg !10955
  %conv4 = fpext float %8 to double, !dbg !10955
  %mul5 = fmul double %mul, %conv4, !dbg !10956
  %sub = fsub double 1.000000e+00, %mul5, !dbg !10957
  store double %sub, double* %gamma, align 8, !dbg !10958
  %9 = load double, double* %gamma, align 8, !dbg !10959
  %cmp6 = fcmp olt double %9, 0.000000e+00, !dbg !10961
  br i1 %cmp6, label %if.then8, label %if.end9, !dbg !10962

if.then8:                                         ; preds = %if.end3
  store double 0.000000e+00, double* %gamma, align 8, !dbg !10963
  br label %if.end9, !dbg !10964

if.end9:                                          ; preds = %if.then8, %if.end3
  %10 = load double, double* %gamma, align 8, !dbg !10965
  %sub10 = fsub double 1.000000e+00, %10, !dbg !10966
  %mul11 = fmul double 6.553500e+04, %sub10, !dbg !10967
  %add = fadd double %mul11, 5.000000e-01, !dbg !10968
  %conv12 = fptoui double %add to i16, !dbg !10969
  %11 = load %struct._PixelPacket*, %struct._PixelPacket** %composite.addr, align 8, !dbg !10970
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %11, i32 0, i32 3, !dbg !10971
  store i16 %conv12, i16* %opacity, align 2, !dbg !10972
  %12 = load double, double* %gamma, align 8, !dbg !10973
  %call = call double @PerceptibleReciprocal(double %12), !dbg !10974
  store double %call, double* %gamma, align 8, !dbg !10975
  %13 = load double, double* %gamma, align 8, !dbg !10976
  %14 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !10976
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %14, i32 0, i32 2, !dbg !10976
  %15 = load i16, i16* %red, align 2, !dbg !10976
  %conv13 = uitofp i16 %15 to float, !dbg !10976
  %16 = load float, float* %alpha.addr, align 4, !dbg !10976
  %17 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !10976
  %red14 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %17, i32 0, i32 2, !dbg !10976
  %18 = load i16, i16* %red14, align 2, !dbg !10976
  %conv15 = uitofp i16 %18 to float, !dbg !10976
  %19 = load float, float* %beta.addr, align 4, !dbg !10976
  %call16 = call float @MagickOver_(float %conv13, float %16, float %conv15, float %19), !dbg !10976
  %conv17 = fpext float %call16 to double, !dbg !10976
  %mul18 = fmul double %13, %conv17, !dbg !10976
  %add19 = fadd double %mul18, 5.000000e-01, !dbg !10976
  %conv20 = fptoui double %add19 to i16, !dbg !10976
  %20 = load %struct._PixelPacket*, %struct._PixelPacket** %composite.addr, align 8, !dbg !10976
  %red21 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %20, i32 0, i32 2, !dbg !10976
  store i16 %conv20, i16* %red21, align 2, !dbg !10976
  %21 = load double, double* %gamma, align 8, !dbg !10977
  %22 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !10977
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %22, i32 0, i32 1, !dbg !10977
  %23 = load i16, i16* %green, align 2, !dbg !10977
  %conv22 = uitofp i16 %23 to float, !dbg !10977
  %24 = load float, float* %alpha.addr, align 4, !dbg !10977
  %25 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !10977
  %green23 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %25, i32 0, i32 1, !dbg !10977
  %26 = load i16, i16* %green23, align 2, !dbg !10977
  %conv24 = uitofp i16 %26 to float, !dbg !10977
  %27 = load float, float* %beta.addr, align 4, !dbg !10977
  %call25 = call float @MagickOver_(float %conv22, float %24, float %conv24, float %27), !dbg !10977
  %conv26 = fpext float %call25 to double, !dbg !10977
  %mul27 = fmul double %21, %conv26, !dbg !10977
  %add28 = fadd double %mul27, 5.000000e-01, !dbg !10977
  %conv29 = fptoui double %add28 to i16, !dbg !10977
  %28 = load %struct._PixelPacket*, %struct._PixelPacket** %composite.addr, align 8, !dbg !10977
  %green30 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %28, i32 0, i32 1, !dbg !10977
  store i16 %conv29, i16* %green30, align 2, !dbg !10977
  %29 = load double, double* %gamma, align 8, !dbg !10978
  %30 = load %struct._PixelPacket*, %struct._PixelPacket** %p.addr, align 8, !dbg !10978
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %30, i32 0, i32 0, !dbg !10978
  %31 = load i16, i16* %blue, align 2, !dbg !10978
  %conv31 = uitofp i16 %31 to float, !dbg !10978
  %32 = load float, float* %alpha.addr, align 4, !dbg !10978
  %33 = load %struct._PixelPacket*, %struct._PixelPacket** %q.addr, align 8, !dbg !10978
  %blue32 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %33, i32 0, i32 0, !dbg !10978
  %34 = load i16, i16* %blue32, align 2, !dbg !10978
  %conv33 = uitofp i16 %34 to float, !dbg !10978
  %35 = load float, float* %beta.addr, align 4, !dbg !10978
  %call34 = call float @MagickOver_(float %conv31, float %32, float %conv33, float %35), !dbg !10978
  %conv35 = fpext float %call34 to double, !dbg !10978
  %mul36 = fmul double %29, %conv35, !dbg !10978
  %add37 = fadd double %mul36, 5.000000e-01, !dbg !10978
  %conv38 = fptoui double %add37 to i16, !dbg !10978
  %36 = load %struct._PixelPacket*, %struct._PixelPacket** %composite.addr, align 8, !dbg !10978
  %blue39 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %36, i32 0, i32 0, !dbg !10978
  store i16 %conv38, i16* %blue39, align 2, !dbg !10978
  br label %return, !dbg !10979

return:                                           ; preds = %if.end9, %if.end
  ret void, !dbg !10979
}

declare dso_local i32 @GetOneCacheViewVirtualPixel(%struct._CacheView*, i64, i64, %struct._PixelPacket*, %struct._ExceptionInfo*) #3

declare dso_local i32 @IsColorSimilar(%struct._Image*, %struct._PixelPacket*, %struct._PixelPacket*) #3

declare dso_local i32 @GetOneVirtualMagickPixel(%struct._Image*, i64, i64, %struct._MagickPixelPacket*, %struct._ExceptionInfo*) #3

declare dso_local i32 @FloodfillPaintImage(%struct._Image*, i32, %struct._DrawInfo*, %struct._MagickPixelPacket*, i64, i64, i32) #3

declare dso_local i32 @SetImageAlphaChannel(%struct._Image*, i32) #3

declare dso_local i32 @AnnotateImage(%struct._Image*, %struct._DrawInfo*) #3

declare dso_local i32 @LocaleNCompare(i8*, i8*, i64) #3

declare dso_local %struct._Image* @ReadInlineImage(%struct._ImageInfo*, i8*, %struct._ExceptionInfo*) #3

declare dso_local i32 (i8*, i64, i64, i8*)* @SetImageProgressMonitor(%struct._Image*, i32 (i8*, i64, i64, i8*)*, i8*) #3

declare dso_local i32 @TransformImage(%struct._Image**, i8*, i8*) #3

declare dso_local i32 @SetImageOpacity(%struct._Image*, i16 zeroext) #3

declare dso_local void @SetGeometry(%struct._Image*, %struct._RectangleInfo*) #3

declare dso_local i32 @ParseGravityGeometry(%struct._Image*, i8*, %struct._RectangleInfo*, %struct._ExceptionInfo*) #3

declare dso_local i32 @CompositeImage(%struct._Image*, i32, %struct._Image*, i64, i64) #3

; Function Attrs: noinline nounwind uwtable
define internal void @LogPrimitiveInfo(%struct._PrimitiveInfo* %primitive_info) #0 !dbg !10980 {
entry:
  %primitive_info.addr = alloca %struct._PrimitiveInfo*, align 8
  %methods = alloca [6 x i8*], align 16
  %p = alloca %struct._PointInfo, align 8
  %q = alloca %struct._PointInfo, align 8
  %point = alloca %struct._PointInfo, align 8
  %i = alloca i64, align 8
  %x = alloca i64, align 8
  %coordinates = alloca i64, align 8
  %y = alloca i64, align 8
  store %struct._PrimitiveInfo* %primitive_info, %struct._PrimitiveInfo** %primitive_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PrimitiveInfo** %primitive_info.addr, metadata !10983, metadata !DIExpression()), !dbg !10984
  call void @llvm.dbg.declare(metadata [6 x i8*]* %methods, metadata !10985, metadata !DIExpression()), !dbg !10989
  %0 = bitcast [6 x i8*]* %methods to i8*, !dbg !10989
  call void @llvm.memset.p0i8.i64(i8* align 16 %0, i8 0, i64 48, i1 false), !dbg !10989
  %1 = bitcast i8* %0 to [6 x i8*]*, !dbg !10989
  %2 = getelementptr inbounds [6 x i8*], [6 x i8*]* %1, i32 0, i32 0, !dbg !10989
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.53, i32 0, i32 0), i8** %2, align 16, !dbg !10989
  %3 = getelementptr inbounds [6 x i8*], [6 x i8*]* %1, i32 0, i32 1, !dbg !10989
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.108, i32 0, i32 0), i8** %3, align 8, !dbg !10989
  %4 = getelementptr inbounds [6 x i8*], [6 x i8*]* %1, i32 0, i32 2, !dbg !10989
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.109, i32 0, i32 0), i8** %4, align 16, !dbg !10989
  %5 = getelementptr inbounds [6 x i8*], [6 x i8*]* %1, i32 0, i32 3, !dbg !10989
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.110, i32 0, i32 0), i8** %5, align 8, !dbg !10989
  %6 = getelementptr inbounds [6 x i8*], [6 x i8*]* %1, i32 0, i32 4, !dbg !10989
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.111, i32 0, i32 0), i8** %6, align 16, !dbg !10989
  %7 = getelementptr inbounds [6 x i8*], [6 x i8*]* %1, i32 0, i32 5, !dbg !10989
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.112, i32 0, i32 0), i8** %7, align 8, !dbg !10989
  call void @llvm.dbg.declare(metadata %struct._PointInfo* %p, metadata !10990, metadata !DIExpression()), !dbg !10991
  call void @llvm.dbg.declare(metadata %struct._PointInfo* %q, metadata !10992, metadata !DIExpression()), !dbg !10993
  call void @llvm.dbg.declare(metadata %struct._PointInfo* %point, metadata !10994, metadata !DIExpression()), !dbg !10995
  call void @llvm.dbg.declare(metadata i64* %i, metadata !10996, metadata !DIExpression()), !dbg !10997
  call void @llvm.dbg.declare(metadata i64* %x, metadata !10998, metadata !DIExpression()), !dbg !10999
  call void @llvm.dbg.declare(metadata i64* %coordinates, metadata !11000, metadata !DIExpression()), !dbg !11001
  call void @llvm.dbg.declare(metadata i64* %y, metadata !11002, metadata !DIExpression()), !dbg !11003
  %8 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !11004
  %point1 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %8, i32 0, i32 0, !dbg !11005
  %x2 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point1, i32 0, i32 0, !dbg !11006
  %9 = load double, double* %x2, align 8, !dbg !11006
  %sub = fsub double %9, 5.000000e-01, !dbg !11007
  %10 = call double @llvm.ceil.f64(double %sub), !dbg !11008
  %conv = fptosi double %10 to i64, !dbg !11009
  store i64 %conv, i64* %x, align 8, !dbg !11010
  %11 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !11011
  %point3 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %11, i32 0, i32 0, !dbg !11012
  %y4 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point3, i32 0, i32 1, !dbg !11013
  %12 = load double, double* %y4, align 8, !dbg !11013
  %sub5 = fsub double %12, 5.000000e-01, !dbg !11014
  %13 = call double @llvm.ceil.f64(double %sub5), !dbg !11015
  %conv6 = fptosi double %13 to i64, !dbg !11016
  store i64 %conv6, i64* %y, align 8, !dbg !11017
  %14 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !11018
  %primitive = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %14, i32 0, i32 2, !dbg !11019
  %15 = load i32, i32* %primitive, align 8, !dbg !11019
  switch i32 %15, label %sw.default [
    i32 1, label %sw.bb
    i32 11, label %sw.bb9
    i32 12, label %sw.bb16
    i32 13, label %sw.bb23
    i32 14, label %sw.bb27
  ], !dbg !11020

sw.bb:                                            ; preds = %entry
  %16 = load i64, i64* %x, align 8, !dbg !11021
  %conv7 = sitofp i64 %16 to double, !dbg !11024
  %17 = load i64, i64* %y, align 8, !dbg !11025
  %conv8 = sitofp i64 %17 to double, !dbg !11026
  %18 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !11027
  %method = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %18, i32 0, i32 3, !dbg !11028
  %19 = load i32, i32* %method, align 4, !dbg !11028
  %idxprom = zext i32 %19 to i64, !dbg !11029
  %arrayidx = getelementptr inbounds [6 x i8*], [6 x i8*]* %methods, i64 0, i64 %idxprom, !dbg !11029
  %20 = load i8*, i8** %arrayidx, align 8, !dbg !11029
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 128, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4130, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.113, i64 0, i64 0), double %conv7, double %conv8, i8* %20), !dbg !11030
  br label %for.end, !dbg !11031

sw.bb9:                                           ; preds = %entry
  %21 = load i64, i64* %x, align 8, !dbg !11032
  %conv10 = sitofp i64 %21 to double, !dbg !11034
  %22 = load i64, i64* %y, align 8, !dbg !11035
  %conv11 = sitofp i64 %22 to double, !dbg !11036
  %23 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !11037
  %method12 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %23, i32 0, i32 3, !dbg !11038
  %24 = load i32, i32* %method12, align 4, !dbg !11038
  %idxprom13 = zext i32 %24 to i64, !dbg !11039
  %arrayidx14 = getelementptr inbounds [6 x i8*], [6 x i8*]* %methods, i64 0, i64 %idxprom13, !dbg !11039
  %25 = load i8*, i8** %arrayidx14, align 8, !dbg !11039
  %call15 = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 128, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4137, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.114, i64 0, i64 0), double %conv10, double %conv11, i8* %25), !dbg !11040
  br label %for.end, !dbg !11041

sw.bb16:                                          ; preds = %entry
  %26 = load i64, i64* %x, align 8, !dbg !11042
  %conv17 = sitofp i64 %26 to double, !dbg !11044
  %27 = load i64, i64* %y, align 8, !dbg !11045
  %conv18 = sitofp i64 %27 to double, !dbg !11046
  %28 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !11047
  %method19 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %28, i32 0, i32 3, !dbg !11048
  %29 = load i32, i32* %method19, align 4, !dbg !11048
  %idxprom20 = zext i32 %29 to i64, !dbg !11049
  %arrayidx21 = getelementptr inbounds [6 x i8*], [6 x i8*]* %methods, i64 0, i64 %idxprom20, !dbg !11049
  %30 = load i8*, i8** %arrayidx21, align 8, !dbg !11049
  %call22 = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 128, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4144, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.115, i64 0, i64 0), double %conv17, double %conv18, i8* %30), !dbg !11050
  br label %for.end, !dbg !11051

sw.bb23:                                          ; preds = %entry
  %31 = load i64, i64* %x, align 8, !dbg !11052
  %conv24 = sitofp i64 %31 to double, !dbg !11054
  %32 = load i64, i64* %y, align 8, !dbg !11055
  %conv25 = sitofp i64 %32 to double, !dbg !11056
  %call26 = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 128, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4151, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.116, i64 0, i64 0), double %conv24, double %conv25), !dbg !11057
  br label %for.end, !dbg !11058

sw.bb27:                                          ; preds = %entry
  %33 = load i64, i64* %x, align 8, !dbg !11059
  %conv28 = sitofp i64 %33 to double, !dbg !11061
  %34 = load i64, i64* %y, align 8, !dbg !11062
  %conv29 = sitofp i64 %34 to double, !dbg !11063
  %call30 = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 128, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4157, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.117, i64 0, i64 0), double %conv28, double %conv29), !dbg !11064
  br label %for.end, !dbg !11065

sw.default:                                       ; preds = %entry
  br label %sw.epilog, !dbg !11066

sw.epilog:                                        ; preds = %sw.default
  store i64 0, i64* %coordinates, align 8, !dbg !11067
  %35 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !11068
  %arrayidx31 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %35, i64 0, !dbg !11068
  %point32 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx31, i32 0, i32 0, !dbg !11069
  %36 = bitcast %struct._PointInfo* %p to i8*, !dbg !11069
  %37 = bitcast %struct._PointInfo* %point32 to i8*, !dbg !11069
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 8 %37, i64 16, i1 false), !dbg !11069
  %x33 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %q, i32 0, i32 0, !dbg !11070
  store double -1.000000e+00, double* %x33, align 8, !dbg !11071
  %y34 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %q, i32 0, i32 1, !dbg !11072
  store double -1.000000e+00, double* %y34, align 8, !dbg !11073
  store i64 0, i64* %i, align 8, !dbg !11074
  br label %for.cond, !dbg !11076

for.cond:                                         ; preds = %for.inc, %sw.epilog
  %38 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !11077
  %39 = load i64, i64* %i, align 8, !dbg !11079
  %arrayidx35 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %38, i64 %39, !dbg !11077
  %primitive36 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx35, i32 0, i32 2, !dbg !11080
  %40 = load i32, i32* %primitive36, align 8, !dbg !11080
  %cmp = icmp ne i32 %40, 0, !dbg !11081
  br i1 %cmp, label %for.body, label %for.end, !dbg !11082

for.body:                                         ; preds = %for.cond
  %41 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !11083
  %42 = load i64, i64* %i, align 8, !dbg !11085
  %arrayidx38 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %41, i64 %42, !dbg !11083
  %point39 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx38, i32 0, i32 0, !dbg !11086
  %43 = bitcast %struct._PointInfo* %point to i8*, !dbg !11086
  %44 = bitcast %struct._PointInfo* %point39 to i8*, !dbg !11086
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %44, i64 16, i1 false), !dbg !11086
  %45 = load i64, i64* %coordinates, align 8, !dbg !11087
  %cmp40 = icmp sle i64 %45, 0, !dbg !11089
  br i1 %cmp40, label %if.then, label %if.end, !dbg !11090

if.then:                                          ; preds = %for.body
  %46 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !11091
  %47 = load i64, i64* %i, align 8, !dbg !11093
  %arrayidx42 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %46, i64 %47, !dbg !11091
  %coordinates43 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx42, i32 0, i32 1, !dbg !11094
  %48 = load i64, i64* %coordinates43, align 8, !dbg !11094
  store i64 %48, i64* %coordinates, align 8, !dbg !11095
  %49 = load i64, i64* %coordinates, align 8, !dbg !11096
  %conv44 = sitofp i64 %49 to double, !dbg !11097
  %call45 = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 128, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4174, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.118, i64 0, i64 0), double %conv44), !dbg !11098
  %50 = bitcast %struct._PointInfo* %p to i8*, !dbg !11099
  %51 = bitcast %struct._PointInfo* %point to i8*, !dbg !11099
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* align 8 %51, i64 16, i1 false), !dbg !11099
  br label %if.end, !dbg !11100

if.end:                                           ; preds = %if.then, %for.body
  %52 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !11101
  %53 = load i64, i64* %i, align 8, !dbg !11102
  %arrayidx46 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %52, i64 %53, !dbg !11101
  %point47 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx46, i32 0, i32 0, !dbg !11103
  %54 = bitcast %struct._PointInfo* %point to i8*, !dbg !11103
  %55 = bitcast %struct._PointInfo* %point47 to i8*, !dbg !11103
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %54, i8* align 8 %55, i64 16, i1 false), !dbg !11103
  %x48 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %q, i32 0, i32 0, !dbg !11104
  %56 = load double, double* %x48, align 8, !dbg !11104
  %x49 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 0, !dbg !11106
  %57 = load double, double* %x49, align 8, !dbg !11106
  %sub50 = fsub double %56, %57, !dbg !11107
  %58 = call double @llvm.fabs.f64(double %sub50), !dbg !11108
  %cmp51 = fcmp oge double %58, 1.000000e-15, !dbg !11109
  br i1 %cmp51, label %if.then58, label %lor.lhs.false, !dbg !11110

lor.lhs.false:                                    ; preds = %if.end
  %y53 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %q, i32 0, i32 1, !dbg !11111
  %59 = load double, double* %y53, align 8, !dbg !11111
  %y54 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 1, !dbg !11112
  %60 = load double, double* %y54, align 8, !dbg !11112
  %sub55 = fsub double %59, %60, !dbg !11113
  %61 = call double @llvm.fabs.f64(double %sub55), !dbg !11114
  %cmp56 = fcmp oge double %61, 1.000000e-15, !dbg !11115
  br i1 %cmp56, label %if.then58, label %if.else, !dbg !11116

if.then58:                                        ; preds = %lor.lhs.false, %if.end
  %62 = load i64, i64* %coordinates, align 8, !dbg !11117
  %conv59 = sitofp i64 %62 to double, !dbg !11118
  %x60 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 0, !dbg !11119
  %63 = load double, double* %x60, align 8, !dbg !11119
  %y61 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 1, !dbg !11120
  %64 = load double, double* %y61, align 8, !dbg !11120
  %call62 = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 128, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4181, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.119, i64 0, i64 0), double %conv59, double %63, double %64), !dbg !11121
  br label %if.end67, !dbg !11122

if.else:                                          ; preds = %lor.lhs.false
  %65 = load i64, i64* %coordinates, align 8, !dbg !11123
  %conv63 = sitofp i64 %65 to double, !dbg !11124
  %x64 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 0, !dbg !11125
  %66 = load double, double* %x64, align 8, !dbg !11125
  %y65 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 1, !dbg !11126
  %67 = load double, double* %y65, align 8, !dbg !11126
  %call66 = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 128, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4184, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.120, i64 0, i64 0), double %conv63, double %66, double %67), !dbg !11127
  br label %if.end67

if.end67:                                         ; preds = %if.else, %if.then58
  %68 = bitcast %struct._PointInfo* %q to i8*, !dbg !11128
  %69 = bitcast %struct._PointInfo* %point to i8*, !dbg !11128
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %68, i8* align 8 %69, i64 16, i1 false), !dbg !11128
  %70 = load i64, i64* %coordinates, align 8, !dbg !11129
  %dec = add nsw i64 %70, -1, !dbg !11129
  store i64 %dec, i64* %coordinates, align 8, !dbg !11129
  %71 = load i64, i64* %coordinates, align 8, !dbg !11130
  %cmp68 = icmp sgt i64 %71, 0, !dbg !11132
  br i1 %cmp68, label %if.then70, label %if.end71, !dbg !11133

if.then70:                                        ; preds = %if.end67
  br label %for.inc, !dbg !11134

if.end71:                                         ; preds = %if.end67
  %x72 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %p, i32 0, i32 0, !dbg !11135
  %72 = load double, double* %x72, align 8, !dbg !11135
  %x73 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 0, !dbg !11137
  %73 = load double, double* %x73, align 8, !dbg !11137
  %sub74 = fsub double %72, %73, !dbg !11138
  %74 = call double @llvm.fabs.f64(double %sub74), !dbg !11139
  %cmp75 = fcmp oge double %74, 1.000000e-15, !dbg !11140
  br i1 %cmp75, label %if.then83, label %lor.lhs.false77, !dbg !11141

lor.lhs.false77:                                  ; preds = %if.end71
  %y78 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %p, i32 0, i32 1, !dbg !11142
  %75 = load double, double* %y78, align 8, !dbg !11142
  %y79 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 1, !dbg !11143
  %76 = load double, double* %y79, align 8, !dbg !11143
  %sub80 = fsub double %75, %76, !dbg !11144
  %77 = call double @llvm.fabs.f64(double %sub80), !dbg !11145
  %cmp81 = fcmp oge double %77, 1.000000e-15, !dbg !11146
  br i1 %cmp81, label %if.then83, label %if.else86, !dbg !11147

if.then83:                                        ; preds = %lor.lhs.false77, %if.end71
  %78 = load i64, i64* %coordinates, align 8, !dbg !11148
  %conv84 = sitofp i64 %78 to double, !dbg !11149
  %call85 = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 128, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4192, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.121, i64 0, i64 0), double %conv84), !dbg !11150
  br label %if.end89, !dbg !11151

if.else86:                                        ; preds = %lor.lhs.false77
  %79 = load i64, i64* %coordinates, align 8, !dbg !11152
  %conv87 = sitofp i64 %79 to double, !dbg !11153
  %call88 = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 128, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4195, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.122, i64 0, i64 0), double %conv87), !dbg !11154
  br label %if.end89

if.end89:                                         ; preds = %if.else86, %if.then83
  br label %for.inc, !dbg !11155

for.inc:                                          ; preds = %if.end89, %if.then70
  %80 = load i64, i64* %i, align 8, !dbg !11156
  %inc = add nsw i64 %80, 1, !dbg !11156
  store i64 %inc, i64* %i, align 8, !dbg !11156
  br label %for.cond, !dbg !11157, !llvm.loop !11158

for.end:                                          ; preds = %sw.bb, %sw.bb9, %sw.bb16, %sw.bb23, %sw.bb27, %for.cond
  ret void, !dbg !11160
}

declare dso_local double @ExpandAffine(%struct._AffineMatrix*) #3

; Function Attrs: noinline nounwind uwtable
define internal i32 @DrawPolygonPrimitive(%struct._Image* %image, %struct._DrawInfo* %draw_info, %struct._PrimitiveInfo* %primitive_info) #0 !dbg !11161 {
entry:
  %retval = alloca i32, align 4
  %image.addr = alloca %struct._Image*, align 8
  %draw_info.addr = alloca %struct._DrawInfo*, align 8
  %primitive_info.addr = alloca %struct._PrimitiveInfo*, align 8
  %image_view = alloca %struct._CacheView*, align 8
  %mid = alloca double, align 8
  %exception = alloca %struct._ExceptionInfo*, align 8
  %fill = alloca i32, align 4
  %status = alloca i32, align 4
  %polygon_info = alloca %struct._PolygonInfo**, align 8
  %p = alloca %struct._EdgeInfo*, align 8
  %i = alloca i64, align 8
  %bounds = alloca %struct._SegmentInfo, align 8
  %start = alloca i64, align 8
  %stop = alloca i64, align 8
  %y = alloca i64, align 8
  %sync = alloca i32, align 4
  %q = alloca %struct._PixelPacket*, align 8
  %x = alloca i64, align 8
  %start162 = alloca i64, align 8
  %stop163 = alloca i64, align 8
  %id = alloca i32, align 4
  %fill_opacity = alloca double, align 8
  %stroke_opacity = alloca double, align 8
  %fill_color = alloca %struct._PixelPacket, align 2
  %stroke_color = alloca %struct._PixelPacket, align 2
  %q235 = alloca %struct._PixelPacket*, align 8
  %x236 = alloca i64, align 8
  %start237 = alloca i64, align 8
  %stop238 = alloca i64, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !11162, metadata !DIExpression()), !dbg !11163
  store %struct._DrawInfo* %draw_info, %struct._DrawInfo** %draw_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawInfo** %draw_info.addr, metadata !11164, metadata !DIExpression()), !dbg !11165
  store %struct._PrimitiveInfo* %primitive_info, %struct._PrimitiveInfo** %primitive_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PrimitiveInfo** %primitive_info.addr, metadata !11166, metadata !DIExpression()), !dbg !11167
  call void @llvm.dbg.declare(metadata %struct._CacheView** %image_view, metadata !11168, metadata !DIExpression()), !dbg !11169
  call void @llvm.dbg.declare(metadata double* %mid, metadata !11170, metadata !DIExpression()), !dbg !11171
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception, metadata !11172, metadata !DIExpression()), !dbg !11173
  call void @llvm.dbg.declare(metadata i32* %fill, metadata !11174, metadata !DIExpression()), !dbg !11175
  call void @llvm.dbg.declare(metadata i32* %status, metadata !11176, metadata !DIExpression()), !dbg !11177
  call void @llvm.dbg.declare(metadata %struct._PolygonInfo*** %polygon_info, metadata !11178, metadata !DIExpression()), !dbg !11180
  call void @llvm.dbg.declare(metadata %struct._EdgeInfo** %p, metadata !11181, metadata !DIExpression()), !dbg !11182
  call void @llvm.dbg.declare(metadata i64* %i, metadata !11183, metadata !DIExpression()), !dbg !11184
  call void @llvm.dbg.declare(metadata %struct._SegmentInfo* %bounds, metadata !11185, metadata !DIExpression()), !dbg !11186
  call void @llvm.dbg.declare(metadata i64* %start, metadata !11187, metadata !DIExpression()), !dbg !11188
  call void @llvm.dbg.declare(metadata i64* %stop, metadata !11189, metadata !DIExpression()), !dbg !11190
  call void @llvm.dbg.declare(metadata i64* %y, metadata !11191, metadata !DIExpression()), !dbg !11192
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !11193
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !11195
  %1 = load i32, i32* %debug, align 8, !dbg !11195
  %cmp = icmp ne i32 %1, 0, !dbg !11196
  br i1 %cmp, label %if.then, label %if.end, !dbg !11197

if.then:                                          ; preds = %entry
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !11198
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %2, i32 0, i32 53, !dbg !11199
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !11198
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3888, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i64 0, i64 0), i8* %arraydecay), !dbg !11200
  br label %if.end, !dbg !11201

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !11202
  %coordinates = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %3, i32 0, i32 1, !dbg !11204
  %4 = load i64, i64* %coordinates, align 8, !dbg !11204
  %cmp1 = icmp eq i64 %4, 0, !dbg !11205
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !11206

if.then2:                                         ; preds = %if.end
  store i32 1, i32* %retval, align 4, !dbg !11207
  br label %return, !dbg !11207

if.end3:                                          ; preds = %if.end
  %5 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !11208
  %6 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !11209
  %call4 = call %struct._PolygonInfo** @AcquirePolygonThreadSet(%struct._DrawInfo* %5, %struct._PrimitiveInfo* %6), !dbg !11210
  store %struct._PolygonInfo** %call4, %struct._PolygonInfo*** %polygon_info, align 8, !dbg !11211
  %7 = load %struct._PolygonInfo**, %struct._PolygonInfo*** %polygon_info, align 8, !dbg !11212
  %cmp5 = icmp eq %struct._PolygonInfo** %7, null, !dbg !11214
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !11215

if.then6:                                         ; preds = %if.end3
  store i32 0, i32* %retval, align 4, !dbg !11216
  br label %return, !dbg !11216

if.end7:                                          ; preds = %if.end3
  %8 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !11217
  %debug8 = getelementptr inbounds %struct._Image, %struct._Image* %8, i32 0, i32 59, !dbg !11219
  %9 = load i32, i32* %debug8, align 8, !dbg !11219
  %cmp9 = icmp ne i32 %9, 0, !dbg !11220
  br i1 %cmp9, label %if.then10, label %if.end12, !dbg !11221

if.then10:                                        ; preds = %if.end7
  %call11 = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 128, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3902, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.123, i64 0, i64 0)), !dbg !11222
  br label %if.end12, !dbg !11223

if.end12:                                         ; preds = %if.then10, %if.end7
  %10 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !11224
  %method = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %10, i32 0, i32 3, !dbg !11225
  %11 = load i32, i32* %method, align 4, !dbg !11225
  %cmp13 = icmp eq i32 %11, 4, !dbg !11226
  br i1 %cmp13, label %lor.end, label %lor.rhs, !dbg !11227

lor.rhs:                                          ; preds = %if.end12
  %12 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !11228
  %method14 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %12, i32 0, i32 3, !dbg !11229
  %13 = load i32, i32* %method14, align 4, !dbg !11229
  %cmp15 = icmp eq i32 %13, 3, !dbg !11230
  br label %lor.end, !dbg !11227

lor.end:                                          ; preds = %lor.rhs, %if.end12
  %14 = phi i1 [ true, %if.end12 ], [ %cmp15, %lor.rhs ]
  %15 = zext i1 %14 to i64, !dbg !11231
  %cond = select i1 %14, i32 1, i32 0, !dbg !11231
  store i32 %cond, i32* %fill, align 4, !dbg !11232
  %16 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !11233
  %affine = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %16, i32 0, i32 3, !dbg !11234
  %call16 = call double @ExpandAffine(%struct._AffineMatrix* %affine), !dbg !11235
  %17 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !11236
  %stroke_width = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %17, i32 0, i32 7, !dbg !11237
  %18 = load double, double* %stroke_width, align 8, !dbg !11237
  %mul = fmul double %call16, %18, !dbg !11238
  %div = fdiv double %mul, 2.000000e+00, !dbg !11239
  store double %div, double* %mid, align 8, !dbg !11240
  %19 = load %struct._PolygonInfo**, %struct._PolygonInfo*** %polygon_info, align 8, !dbg !11241
  %arrayidx = getelementptr inbounds %struct._PolygonInfo*, %struct._PolygonInfo** %19, i64 0, !dbg !11241
  %20 = load %struct._PolygonInfo*, %struct._PolygonInfo** %arrayidx, align 8, !dbg !11241
  %edges = getelementptr inbounds %struct._PolygonInfo, %struct._PolygonInfo* %20, i32 0, i32 0, !dbg !11242
  %21 = load %struct._EdgeInfo*, %struct._EdgeInfo** %edges, align 8, !dbg !11242
  %arrayidx17 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %21, i64 0, !dbg !11241
  %bounds18 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %arrayidx17, i32 0, i32 0, !dbg !11243
  %22 = bitcast %struct._SegmentInfo* %bounds to i8*, !dbg !11243
  %23 = bitcast %struct._SegmentInfo* %bounds18 to i8*, !dbg !11243
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %23, i64 32, i1 false), !dbg !11243
  store i64 1, i64* %i, align 8, !dbg !11244
  br label %for.cond, !dbg !11246

for.cond:                                         ; preds = %for.inc, %lor.end
  %24 = load i64, i64* %i, align 8, !dbg !11247
  %25 = load %struct._PolygonInfo**, %struct._PolygonInfo*** %polygon_info, align 8, !dbg !11249
  %arrayidx19 = getelementptr inbounds %struct._PolygonInfo*, %struct._PolygonInfo** %25, i64 0, !dbg !11249
  %26 = load %struct._PolygonInfo*, %struct._PolygonInfo** %arrayidx19, align 8, !dbg !11249
  %number_edges = getelementptr inbounds %struct._PolygonInfo, %struct._PolygonInfo* %26, i32 0, i32 1, !dbg !11250
  %27 = load i64, i64* %number_edges, align 8, !dbg !11250
  %cmp20 = icmp slt i64 %24, %27, !dbg !11251
  br i1 %cmp20, label %for.body, label %for.end, !dbg !11252

for.body:                                         ; preds = %for.cond
  %28 = load %struct._PolygonInfo**, %struct._PolygonInfo*** %polygon_info, align 8, !dbg !11253
  %arrayidx21 = getelementptr inbounds %struct._PolygonInfo*, %struct._PolygonInfo** %28, i64 0, !dbg !11253
  %29 = load %struct._PolygonInfo*, %struct._PolygonInfo** %arrayidx21, align 8, !dbg !11253
  %edges22 = getelementptr inbounds %struct._PolygonInfo, %struct._PolygonInfo* %29, i32 0, i32 0, !dbg !11255
  %30 = load %struct._EdgeInfo*, %struct._EdgeInfo** %edges22, align 8, !dbg !11255
  %31 = load i64, i64* %i, align 8, !dbg !11256
  %add.ptr = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %30, i64 %31, !dbg !11257
  store %struct._EdgeInfo* %add.ptr, %struct._EdgeInfo** %p, align 8, !dbg !11258
  %32 = load %struct._EdgeInfo*, %struct._EdgeInfo** %p, align 8, !dbg !11259
  %bounds23 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %32, i32 0, i32 0, !dbg !11261
  %x1 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds23, i32 0, i32 0, !dbg !11262
  %33 = load double, double* %x1, align 8, !dbg !11262
  %x124 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds, i32 0, i32 0, !dbg !11263
  %34 = load double, double* %x124, align 8, !dbg !11263
  %cmp25 = fcmp olt double %33, %34, !dbg !11264
  br i1 %cmp25, label %if.then26, label %if.end30, !dbg !11265

if.then26:                                        ; preds = %for.body
  %35 = load %struct._EdgeInfo*, %struct._EdgeInfo** %p, align 8, !dbg !11266
  %bounds27 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %35, i32 0, i32 0, !dbg !11267
  %x128 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds27, i32 0, i32 0, !dbg !11268
  %36 = load double, double* %x128, align 8, !dbg !11268
  %x129 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds, i32 0, i32 0, !dbg !11269
  store double %36, double* %x129, align 8, !dbg !11270
  br label %if.end30, !dbg !11271

if.end30:                                         ; preds = %if.then26, %for.body
  %37 = load %struct._EdgeInfo*, %struct._EdgeInfo** %p, align 8, !dbg !11272
  %bounds31 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %37, i32 0, i32 0, !dbg !11274
  %y1 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds31, i32 0, i32 1, !dbg !11275
  %38 = load double, double* %y1, align 8, !dbg !11275
  %y132 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds, i32 0, i32 1, !dbg !11276
  %39 = load double, double* %y132, align 8, !dbg !11276
  %cmp33 = fcmp olt double %38, %39, !dbg !11277
  br i1 %cmp33, label %if.then34, label %if.end38, !dbg !11278

if.then34:                                        ; preds = %if.end30
  %40 = load %struct._EdgeInfo*, %struct._EdgeInfo** %p, align 8, !dbg !11279
  %bounds35 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %40, i32 0, i32 0, !dbg !11280
  %y136 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds35, i32 0, i32 1, !dbg !11281
  %41 = load double, double* %y136, align 8, !dbg !11281
  %y137 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds, i32 0, i32 1, !dbg !11282
  store double %41, double* %y137, align 8, !dbg !11283
  br label %if.end38, !dbg !11284

if.end38:                                         ; preds = %if.then34, %if.end30
  %42 = load %struct._EdgeInfo*, %struct._EdgeInfo** %p, align 8, !dbg !11285
  %bounds39 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %42, i32 0, i32 0, !dbg !11287
  %x2 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds39, i32 0, i32 2, !dbg !11288
  %43 = load double, double* %x2, align 8, !dbg !11288
  %x240 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds, i32 0, i32 2, !dbg !11289
  %44 = load double, double* %x240, align 8, !dbg !11289
  %cmp41 = fcmp ogt double %43, %44, !dbg !11290
  br i1 %cmp41, label %if.then42, label %if.end46, !dbg !11291

if.then42:                                        ; preds = %if.end38
  %45 = load %struct._EdgeInfo*, %struct._EdgeInfo** %p, align 8, !dbg !11292
  %bounds43 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %45, i32 0, i32 0, !dbg !11293
  %x244 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds43, i32 0, i32 2, !dbg !11294
  %46 = load double, double* %x244, align 8, !dbg !11294
  %x245 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds, i32 0, i32 2, !dbg !11295
  store double %46, double* %x245, align 8, !dbg !11296
  br label %if.end46, !dbg !11297

if.end46:                                         ; preds = %if.then42, %if.end38
  %47 = load %struct._EdgeInfo*, %struct._EdgeInfo** %p, align 8, !dbg !11298
  %bounds47 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %47, i32 0, i32 0, !dbg !11300
  %y2 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds47, i32 0, i32 3, !dbg !11301
  %48 = load double, double* %y2, align 8, !dbg !11301
  %y248 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds, i32 0, i32 3, !dbg !11302
  %49 = load double, double* %y248, align 8, !dbg !11302
  %cmp49 = fcmp ogt double %48, %49, !dbg !11303
  br i1 %cmp49, label %if.then50, label %if.end54, !dbg !11304

if.then50:                                        ; preds = %if.end46
  %50 = load %struct._EdgeInfo*, %struct._EdgeInfo** %p, align 8, !dbg !11305
  %bounds51 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %50, i32 0, i32 0, !dbg !11306
  %y252 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds51, i32 0, i32 3, !dbg !11307
  %51 = load double, double* %y252, align 8, !dbg !11307
  %y253 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds, i32 0, i32 3, !dbg !11308
  store double %51, double* %y253, align 8, !dbg !11309
  br label %if.end54, !dbg !11310

if.end54:                                         ; preds = %if.then50, %if.end46
  br label %for.inc, !dbg !11311

for.inc:                                          ; preds = %if.end54
  %52 = load i64, i64* %i, align 8, !dbg !11312
  %inc = add nsw i64 %52, 1, !dbg !11312
  store i64 %inc, i64* %i, align 8, !dbg !11312
  br label %for.cond, !dbg !11313, !llvm.loop !11314

for.end:                                          ; preds = %for.cond
  %53 = load double, double* %mid, align 8, !dbg !11316
  %add = fadd double %53, 1.000000e+00, !dbg !11317
  %x155 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds, i32 0, i32 0, !dbg !11318
  %54 = load double, double* %x155, align 8, !dbg !11319
  %sub = fsub double %54, %add, !dbg !11319
  store double %sub, double* %x155, align 8, !dbg !11319
  %x156 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds, i32 0, i32 0, !dbg !11320
  %55 = load double, double* %x156, align 8, !dbg !11320
  %cmp57 = fcmp olt double %55, 0.000000e+00, !dbg !11321
  br i1 %cmp57, label %cond.true, label %cond.false, !dbg !11322

cond.true:                                        ; preds = %for.end
  br label %cond.end69, !dbg !11322

cond.false:                                       ; preds = %for.end
  %x158 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds, i32 0, i32 0, !dbg !11323
  %56 = load double, double* %x158, align 8, !dbg !11323
  %sub59 = fsub double %56, 5.000000e-01, !dbg !11324
  %57 = call double @llvm.ceil.f64(double %sub59), !dbg !11325
  %conv = fptoui double %57 to i64, !dbg !11326
  %58 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !11327
  %columns = getelementptr inbounds %struct._Image, %struct._Image* %58, i32 0, i32 7, !dbg !11328
  %59 = load i64, i64* %columns, align 8, !dbg !11328
  %cmp60 = icmp uge i64 %conv, %59, !dbg !11329
  br i1 %cmp60, label %cond.true62, label %cond.false66, !dbg !11326

cond.true62:                                      ; preds = %cond.false
  %60 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !11330
  %columns63 = getelementptr inbounds %struct._Image, %struct._Image* %60, i32 0, i32 7, !dbg !11331
  %61 = load i64, i64* %columns63, align 8, !dbg !11331
  %conv64 = uitofp i64 %61 to double, !dbg !11332
  %sub65 = fsub double %conv64, 1.000000e+00, !dbg !11333
  br label %cond.end, !dbg !11326

cond.false66:                                     ; preds = %cond.false
  %x167 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds, i32 0, i32 0, !dbg !11334
  %62 = load double, double* %x167, align 8, !dbg !11334
  br label %cond.end, !dbg !11326

cond.end:                                         ; preds = %cond.false66, %cond.true62
  %cond68 = phi double [ %sub65, %cond.true62 ], [ %62, %cond.false66 ], !dbg !11326
  br label %cond.end69, !dbg !11322

cond.end69:                                       ; preds = %cond.end, %cond.true
  %cond70 = phi double [ 0.000000e+00, %cond.true ], [ %cond68, %cond.end ], !dbg !11322
  %x171 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds, i32 0, i32 0, !dbg !11335
  store double %cond70, double* %x171, align 8, !dbg !11336
  %63 = load double, double* %mid, align 8, !dbg !11337
  %add72 = fadd double %63, 1.000000e+00, !dbg !11338
  %y173 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds, i32 0, i32 1, !dbg !11339
  %64 = load double, double* %y173, align 8, !dbg !11340
  %sub74 = fsub double %64, %add72, !dbg !11340
  store double %sub74, double* %y173, align 8, !dbg !11340
  %y175 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds, i32 0, i32 1, !dbg !11341
  %65 = load double, double* %y175, align 8, !dbg !11341
  %cmp76 = fcmp olt double %65, 0.000000e+00, !dbg !11342
  br i1 %cmp76, label %cond.true78, label %cond.false79, !dbg !11343

cond.true78:                                      ; preds = %cond.end69
  br label %cond.end93, !dbg !11343

cond.false79:                                     ; preds = %cond.end69
  %y180 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds, i32 0, i32 1, !dbg !11344
  %66 = load double, double* %y180, align 8, !dbg !11344
  %sub81 = fsub double %66, 5.000000e-01, !dbg !11345
  %67 = call double @llvm.ceil.f64(double %sub81), !dbg !11346
  %conv82 = fptoui double %67 to i64, !dbg !11347
  %68 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !11348
  %rows = getelementptr inbounds %struct._Image, %struct._Image* %68, i32 0, i32 8, !dbg !11349
  %69 = load i64, i64* %rows, align 8, !dbg !11349
  %cmp83 = icmp uge i64 %conv82, %69, !dbg !11350
  br i1 %cmp83, label %cond.true85, label %cond.false89, !dbg !11347

cond.true85:                                      ; preds = %cond.false79
  %70 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !11351
  %rows86 = getelementptr inbounds %struct._Image, %struct._Image* %70, i32 0, i32 8, !dbg !11352
  %71 = load i64, i64* %rows86, align 8, !dbg !11352
  %conv87 = uitofp i64 %71 to double, !dbg !11353
  %sub88 = fsub double %conv87, 1.000000e+00, !dbg !11354
  br label %cond.end91, !dbg !11347

cond.false89:                                     ; preds = %cond.false79
  %y190 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds, i32 0, i32 1, !dbg !11355
  %72 = load double, double* %y190, align 8, !dbg !11355
  br label %cond.end91, !dbg !11347

cond.end91:                                       ; preds = %cond.false89, %cond.true85
  %cond92 = phi double [ %sub88, %cond.true85 ], [ %72, %cond.false89 ], !dbg !11347
  br label %cond.end93, !dbg !11343

cond.end93:                                       ; preds = %cond.end91, %cond.true78
  %cond94 = phi double [ 0.000000e+00, %cond.true78 ], [ %cond92, %cond.end91 ], !dbg !11343
  %y195 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds, i32 0, i32 1, !dbg !11356
  store double %cond94, double* %y195, align 8, !dbg !11357
  %73 = load double, double* %mid, align 8, !dbg !11358
  %add96 = fadd double %73, 1.000000e+00, !dbg !11359
  %x297 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds, i32 0, i32 2, !dbg !11360
  %74 = load double, double* %x297, align 8, !dbg !11361
  %add98 = fadd double %74, %add96, !dbg !11361
  store double %add98, double* %x297, align 8, !dbg !11361
  %x299 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds, i32 0, i32 2, !dbg !11362
  %75 = load double, double* %x299, align 8, !dbg !11362
  %cmp100 = fcmp olt double %75, 0.000000e+00, !dbg !11363
  br i1 %cmp100, label %cond.true102, label %cond.false103, !dbg !11364

cond.true102:                                     ; preds = %cond.end93
  br label %cond.end118, !dbg !11364

cond.false103:                                    ; preds = %cond.end93
  %x2104 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds, i32 0, i32 2, !dbg !11365
  %76 = load double, double* %x2104, align 8, !dbg !11365
  %add105 = fadd double %76, 5.000000e-01, !dbg !11366
  %77 = call double @llvm.floor.f64(double %add105), !dbg !11367
  %conv106 = fptoui double %77 to i64, !dbg !11368
  %78 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !11369
  %columns107 = getelementptr inbounds %struct._Image, %struct._Image* %78, i32 0, i32 7, !dbg !11370
  %79 = load i64, i64* %columns107, align 8, !dbg !11370
  %cmp108 = icmp uge i64 %conv106, %79, !dbg !11371
  br i1 %cmp108, label %cond.true110, label %cond.false114, !dbg !11368

cond.true110:                                     ; preds = %cond.false103
  %80 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !11372
  %columns111 = getelementptr inbounds %struct._Image, %struct._Image* %80, i32 0, i32 7, !dbg !11373
  %81 = load i64, i64* %columns111, align 8, !dbg !11373
  %conv112 = uitofp i64 %81 to double, !dbg !11374
  %sub113 = fsub double %conv112, 1.000000e+00, !dbg !11375
  br label %cond.end116, !dbg !11368

cond.false114:                                    ; preds = %cond.false103
  %x2115 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds, i32 0, i32 2, !dbg !11376
  %82 = load double, double* %x2115, align 8, !dbg !11376
  br label %cond.end116, !dbg !11368

cond.end116:                                      ; preds = %cond.false114, %cond.true110
  %cond117 = phi double [ %sub113, %cond.true110 ], [ %82, %cond.false114 ], !dbg !11368
  br label %cond.end118, !dbg !11364

cond.end118:                                      ; preds = %cond.end116, %cond.true102
  %cond119 = phi double [ 0.000000e+00, %cond.true102 ], [ %cond117, %cond.end116 ], !dbg !11364
  %x2120 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds, i32 0, i32 2, !dbg !11377
  store double %cond119, double* %x2120, align 8, !dbg !11378
  %83 = load double, double* %mid, align 8, !dbg !11379
  %add121 = fadd double %83, 1.000000e+00, !dbg !11380
  %y2122 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds, i32 0, i32 3, !dbg !11381
  %84 = load double, double* %y2122, align 8, !dbg !11382
  %add123 = fadd double %84, %add121, !dbg !11382
  store double %add123, double* %y2122, align 8, !dbg !11382
  %y2124 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds, i32 0, i32 3, !dbg !11383
  %85 = load double, double* %y2124, align 8, !dbg !11383
  %cmp125 = fcmp olt double %85, 0.000000e+00, !dbg !11384
  br i1 %cmp125, label %cond.true127, label %cond.false128, !dbg !11385

cond.true127:                                     ; preds = %cond.end118
  br label %cond.end143, !dbg !11385

cond.false128:                                    ; preds = %cond.end118
  %y2129 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds, i32 0, i32 3, !dbg !11386
  %86 = load double, double* %y2129, align 8, !dbg !11386
  %add130 = fadd double %86, 5.000000e-01, !dbg !11387
  %87 = call double @llvm.floor.f64(double %add130), !dbg !11388
  %conv131 = fptoui double %87 to i64, !dbg !11389
  %88 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !11390
  %rows132 = getelementptr inbounds %struct._Image, %struct._Image* %88, i32 0, i32 8, !dbg !11391
  %89 = load i64, i64* %rows132, align 8, !dbg !11391
  %cmp133 = icmp uge i64 %conv131, %89, !dbg !11392
  br i1 %cmp133, label %cond.true135, label %cond.false139, !dbg !11389

cond.true135:                                     ; preds = %cond.false128
  %90 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !11393
  %rows136 = getelementptr inbounds %struct._Image, %struct._Image* %90, i32 0, i32 8, !dbg !11394
  %91 = load i64, i64* %rows136, align 8, !dbg !11394
  %conv137 = uitofp i64 %91 to double, !dbg !11395
  %sub138 = fsub double %conv137, 1.000000e+00, !dbg !11396
  br label %cond.end141, !dbg !11389

cond.false139:                                    ; preds = %cond.false128
  %y2140 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds, i32 0, i32 3, !dbg !11397
  %92 = load double, double* %y2140, align 8, !dbg !11397
  br label %cond.end141, !dbg !11389

cond.end141:                                      ; preds = %cond.false139, %cond.true135
  %cond142 = phi double [ %sub138, %cond.true135 ], [ %92, %cond.false139 ], !dbg !11389
  br label %cond.end143, !dbg !11385

cond.end143:                                      ; preds = %cond.end141, %cond.true127
  %cond144 = phi double [ 0.000000e+00, %cond.true127 ], [ %cond142, %cond.end141 ], !dbg !11385
  %y2145 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds, i32 0, i32 3, !dbg !11398
  store double %cond144, double* %y2145, align 8, !dbg !11399
  store i32 1, i32* %status, align 4, !dbg !11400
  %93 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !11401
  %exception146 = getelementptr inbounds %struct._Image, %struct._Image* %93, i32 0, i32 58, !dbg !11402
  store %struct._ExceptionInfo* %exception146, %struct._ExceptionInfo** %exception, align 8, !dbg !11403
  %94 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !11404
  %95 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !11405
  %call147 = call %struct._CacheView* @AcquireAuthenticCacheView(%struct._Image* %94, %struct._ExceptionInfo* %95), !dbg !11406
  store %struct._CacheView* %call147, %struct._CacheView** %image_view, align 8, !dbg !11407
  %96 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !11408
  %coordinates148 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %96, i32 0, i32 1, !dbg !11410
  %97 = load i64, i64* %coordinates148, align 8, !dbg !11410
  %cmp149 = icmp eq i64 %97, 1, !dbg !11411
  br i1 %cmp149, label %if.then151, label %if.end218, !dbg !11412

if.then151:                                       ; preds = %cond.end143
  %y1152 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds, i32 0, i32 1, !dbg !11413
  %98 = load double, double* %y1152, align 8, !dbg !11413
  %sub153 = fsub double %98, 5.000000e-01, !dbg !11415
  %99 = call double @llvm.ceil.f64(double %sub153), !dbg !11416
  %conv154 = fptosi double %99 to i64, !dbg !11417
  store i64 %conv154, i64* %start, align 8, !dbg !11418
  %y2155 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds, i32 0, i32 3, !dbg !11419
  %100 = load double, double* %y2155, align 8, !dbg !11419
  %add156 = fadd double %100, 5.000000e-01, !dbg !11420
  %101 = call double @llvm.floor.f64(double %add156), !dbg !11421
  %conv157 = fptosi double %101 to i64, !dbg !11422
  store i64 %conv157, i64* %stop, align 8, !dbg !11423
  %102 = load i64, i64* %start, align 8, !dbg !11424
  store i64 %102, i64* %y, align 8, !dbg !11426
  br label %for.cond158, !dbg !11427

for.cond158:                                      ; preds = %for.inc207, %if.then151
  %103 = load i64, i64* %y, align 8, !dbg !11428
  %104 = load i64, i64* %stop, align 8, !dbg !11430
  %cmp159 = icmp sle i64 %103, %104, !dbg !11431
  br i1 %cmp159, label %for.body161, label %for.end209, !dbg !11432

for.body161:                                      ; preds = %for.cond158
  call void @llvm.dbg.declare(metadata i32* %sync, metadata !11433, metadata !DIExpression()), !dbg !11435
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q, metadata !11436, metadata !DIExpression()), !dbg !11437
  call void @llvm.dbg.declare(metadata i64* %x, metadata !11438, metadata !DIExpression()), !dbg !11439
  call void @llvm.dbg.declare(metadata i64* %start162, metadata !11440, metadata !DIExpression()), !dbg !11441
  call void @llvm.dbg.declare(metadata i64* %stop163, metadata !11442, metadata !DIExpression()), !dbg !11443
  %105 = load i32, i32* %status, align 4, !dbg !11444
  %cmp164 = icmp eq i32 %105, 0, !dbg !11446
  br i1 %cmp164, label %if.then166, label %if.end167, !dbg !11447

if.then166:                                       ; preds = %for.body161
  br label %for.inc207, !dbg !11448

if.end167:                                        ; preds = %for.body161
  %x1168 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds, i32 0, i32 0, !dbg !11449
  %106 = load double, double* %x1168, align 8, !dbg !11449
  %sub169 = fsub double %106, 5.000000e-01, !dbg !11450
  %107 = call double @llvm.ceil.f64(double %sub169), !dbg !11451
  %conv170 = fptosi double %107 to i64, !dbg !11452
  store i64 %conv170, i64* %start162, align 8, !dbg !11453
  %x2171 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds, i32 0, i32 2, !dbg !11454
  %108 = load double, double* %x2171, align 8, !dbg !11454
  %add172 = fadd double %108, 5.000000e-01, !dbg !11455
  %109 = call double @llvm.floor.f64(double %add172), !dbg !11456
  %conv173 = fptosi double %109 to i64, !dbg !11457
  store i64 %conv173, i64* %stop163, align 8, !dbg !11458
  %110 = load i64, i64* %start162, align 8, !dbg !11459
  store i64 %110, i64* %x, align 8, !dbg !11460
  %111 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !11461
  %112 = load i64, i64* %x, align 8, !dbg !11462
  %113 = load i64, i64* %y, align 8, !dbg !11463
  %114 = load i64, i64* %stop163, align 8, !dbg !11464
  %115 = load i64, i64* %x, align 8, !dbg !11465
  %sub174 = sub nsw i64 %114, %115, !dbg !11466
  %add175 = add nsw i64 %sub174, 1, !dbg !11467
  %116 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !11468
  %call176 = call %struct._PixelPacket* @GetCacheViewAuthenticPixels(%struct._CacheView* %111, i64 %112, i64 %113, i64 %add175, i64 1, %struct._ExceptionInfo* %116), !dbg !11469
  store %struct._PixelPacket* %call176, %struct._PixelPacket** %q, align 8, !dbg !11470
  %117 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !11471
  %cmp177 = icmp eq %struct._PixelPacket* %117, null, !dbg !11473
  br i1 %cmp177, label %if.then179, label %if.end180, !dbg !11474

if.then179:                                       ; preds = %if.end167
  store i32 0, i32* %status, align 4, !dbg !11475
  br label %for.inc207, !dbg !11477

if.end180:                                        ; preds = %if.end167
  br label %for.cond181, !dbg !11478

for.cond181:                                      ; preds = %for.inc199, %if.end180
  %118 = load i64, i64* %x, align 8, !dbg !11479
  %119 = load i64, i64* %stop163, align 8, !dbg !11482
  %cmp182 = icmp sle i64 %118, %119, !dbg !11483
  br i1 %cmp182, label %for.body184, label %for.end201, !dbg !11484

for.body184:                                      ; preds = %for.cond181
  %120 = load i64, i64* %x, align 8, !dbg !11485
  %121 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !11488
  %point = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %121, i32 0, i32 0, !dbg !11489
  %x185 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 0, !dbg !11490
  %122 = load double, double* %x185, align 8, !dbg !11490
  %sub186 = fsub double %122, 5.000000e-01, !dbg !11491
  %123 = call double @llvm.ceil.f64(double %sub186), !dbg !11492
  %conv187 = fptosi double %123 to i64, !dbg !11493
  %cmp188 = icmp eq i64 %120, %conv187, !dbg !11494
  br i1 %cmp188, label %land.lhs.true, label %if.end198, !dbg !11495

land.lhs.true:                                    ; preds = %for.body184
  %124 = load i64, i64* %y, align 8, !dbg !11496
  %125 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !11497
  %point190 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %125, i32 0, i32 0, !dbg !11498
  %y191 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point190, i32 0, i32 1, !dbg !11499
  %126 = load double, double* %y191, align 8, !dbg !11499
  %sub192 = fsub double %126, 5.000000e-01, !dbg !11500
  %127 = call double @llvm.ceil.f64(double %sub192), !dbg !11501
  %conv193 = fptosi double %127 to i64, !dbg !11502
  %cmp194 = icmp eq i64 %124, %conv193, !dbg !11503
  br i1 %cmp194, label %if.then196, label %if.end198, !dbg !11504

if.then196:                                       ; preds = %land.lhs.true
  %128 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !11505
  %129 = load i64, i64* %x, align 8, !dbg !11506
  %130 = load i64, i64* %y, align 8, !dbg !11507
  %131 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !11508
  %call197 = call i32 @GetStrokeColor(%struct._DrawInfo* %128, i64 %129, i64 %130, %struct._PixelPacket* %131), !dbg !11509
  br label %if.end198, !dbg !11510

if.end198:                                        ; preds = %if.then196, %land.lhs.true, %for.body184
  %132 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !11511
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %132, i32 1, !dbg !11511
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %q, align 8, !dbg !11511
  br label %for.inc199, !dbg !11512

for.inc199:                                       ; preds = %if.end198
  %133 = load i64, i64* %x, align 8, !dbg !11513
  %inc200 = add nsw i64 %133, 1, !dbg !11513
  store i64 %inc200, i64* %x, align 8, !dbg !11513
  br label %for.cond181, !dbg !11514, !llvm.loop !11515

for.end201:                                       ; preds = %for.cond181
  %134 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !11517
  %135 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !11518
  %call202 = call i32 @SyncCacheViewAuthenticPixels(%struct._CacheView* %134, %struct._ExceptionInfo* %135), !dbg !11519
  store i32 %call202, i32* %sync, align 4, !dbg !11520
  %136 = load i32, i32* %sync, align 4, !dbg !11521
  %cmp203 = icmp eq i32 %136, 0, !dbg !11523
  br i1 %cmp203, label %if.then205, label %if.end206, !dbg !11524

if.then205:                                       ; preds = %for.end201
  store i32 0, i32* %status, align 4, !dbg !11525
  br label %if.end206, !dbg !11526

if.end206:                                        ; preds = %if.then205, %for.end201
  br label %for.inc207, !dbg !11527

for.inc207:                                       ; preds = %if.end206, %if.then179, %if.then166
  %137 = load i64, i64* %y, align 8, !dbg !11528
  %inc208 = add nsw i64 %137, 1, !dbg !11528
  store i64 %inc208, i64* %y, align 8, !dbg !11528
  br label %for.cond158, !dbg !11529, !llvm.loop !11530

for.end209:                                       ; preds = %for.cond158
  %138 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !11532
  %call210 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %138), !dbg !11533
  store %struct._CacheView* %call210, %struct._CacheView** %image_view, align 8, !dbg !11534
  %139 = load %struct._PolygonInfo**, %struct._PolygonInfo*** %polygon_info, align 8, !dbg !11535
  %call211 = call %struct._PolygonInfo** @DestroyPolygonThreadSet(%struct._PolygonInfo** %139), !dbg !11536
  store %struct._PolygonInfo** %call211, %struct._PolygonInfo*** %polygon_info, align 8, !dbg !11537
  %140 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !11538
  %debug212 = getelementptr inbounds %struct._Image, %struct._Image* %140, i32 0, i32 59, !dbg !11540
  %141 = load i32, i32* %debug212, align 8, !dbg !11540
  %cmp213 = icmp ne i32 %141, 0, !dbg !11541
  br i1 %cmp213, label %if.then215, label %if.end217, !dbg !11542

if.then215:                                       ; preds = %for.end209
  %call216 = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 128, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3986, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.124, i64 0, i64 0)), !dbg !11543
  br label %if.end217, !dbg !11544

if.end217:                                        ; preds = %if.then215, %for.end209
  %142 = load i32, i32* %status, align 4, !dbg !11545
  store i32 %142, i32* %retval, align 4, !dbg !11546
  br label %return, !dbg !11546

if.end218:                                        ; preds = %cond.end143
  %143 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !11547
  %matte = getelementptr inbounds %struct._Image, %struct._Image* %143, i32 0, i32 6, !dbg !11549
  %144 = load i32, i32* %matte, align 8, !dbg !11549
  %cmp219 = icmp eq i32 %144, 0, !dbg !11550
  br i1 %cmp219, label %if.then221, label %if.end223, !dbg !11551

if.then221:                                       ; preds = %if.end218
  %145 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !11552
  %call222 = call i32 @SetImageAlphaChannel(%struct._Image* %145, i32 6), !dbg !11553
  br label %if.end223, !dbg !11554

if.end223:                                        ; preds = %if.then221, %if.end218
  %y1224 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds, i32 0, i32 1, !dbg !11555
  %146 = load double, double* %y1224, align 8, !dbg !11555
  %sub225 = fsub double %146, 5.000000e-01, !dbg !11556
  %147 = call double @llvm.ceil.f64(double %sub225), !dbg !11557
  %conv226 = fptosi double %147 to i64, !dbg !11558
  store i64 %conv226, i64* %start, align 8, !dbg !11559
  %y2227 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds, i32 0, i32 3, !dbg !11560
  %148 = load double, double* %y2227, align 8, !dbg !11560
  %add228 = fadd double %148, 5.000000e-01, !dbg !11561
  %149 = call double @llvm.floor.f64(double %add228), !dbg !11562
  %conv229 = fptosi double %149 to i64, !dbg !11563
  store i64 %conv229, i64* %stop, align 8, !dbg !11564
  %150 = load i64, i64* %start, align 8, !dbg !11565
  store i64 %150, i64* %y, align 8, !dbg !11567
  br label %for.cond230, !dbg !11568

for.cond230:                                      ; preds = %for.inc300, %if.end223
  %151 = load i64, i64* %y, align 8, !dbg !11569
  %152 = load i64, i64* %stop, align 8, !dbg !11571
  %cmp231 = icmp sle i64 %151, %152, !dbg !11572
  br i1 %cmp231, label %for.body233, label %for.end302, !dbg !11573

for.body233:                                      ; preds = %for.cond230
  call void @llvm.dbg.declare(metadata i32* %id, metadata !11574, metadata !DIExpression()), !dbg !11577
  %call234 = call i32 @GetOpenMPThreadId(), !dbg !11578
  store i32 %call234, i32* %id, align 4, !dbg !11577
  call void @llvm.dbg.declare(metadata double* %fill_opacity, metadata !11579, metadata !DIExpression()), !dbg !11580
  call void @llvm.dbg.declare(metadata double* %stroke_opacity, metadata !11581, metadata !DIExpression()), !dbg !11582
  call void @llvm.dbg.declare(metadata %struct._PixelPacket* %fill_color, metadata !11583, metadata !DIExpression()), !dbg !11584
  call void @llvm.dbg.declare(metadata %struct._PixelPacket* %stroke_color, metadata !11585, metadata !DIExpression()), !dbg !11586
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q235, metadata !11587, metadata !DIExpression()), !dbg !11588
  call void @llvm.dbg.declare(metadata i64* %x236, metadata !11589, metadata !DIExpression()), !dbg !11590
  call void @llvm.dbg.declare(metadata i64* %start237, metadata !11591, metadata !DIExpression()), !dbg !11592
  call void @llvm.dbg.declare(metadata i64* %stop238, metadata !11593, metadata !DIExpression()), !dbg !11594
  %153 = load i32, i32* %status, align 4, !dbg !11595
  %cmp239 = icmp eq i32 %153, 0, !dbg !11597
  br i1 %cmp239, label %if.then241, label %if.end242, !dbg !11598

if.then241:                                       ; preds = %for.body233
  br label %for.inc300, !dbg !11599

if.end242:                                        ; preds = %for.body233
  %x1243 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds, i32 0, i32 0, !dbg !11600
  %154 = load double, double* %x1243, align 8, !dbg !11600
  %sub244 = fsub double %154, 5.000000e-01, !dbg !11601
  %155 = call double @llvm.ceil.f64(double %sub244), !dbg !11602
  %conv245 = fptosi double %155 to i64, !dbg !11603
  store i64 %conv245, i64* %start237, align 8, !dbg !11604
  %x2246 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds, i32 0, i32 2, !dbg !11605
  %156 = load double, double* %x2246, align 8, !dbg !11605
  %add247 = fadd double %156, 5.000000e-01, !dbg !11606
  %157 = call double @llvm.floor.f64(double %add247), !dbg !11607
  %conv248 = fptosi double %157 to i64, !dbg !11608
  store i64 %conv248, i64* %stop238, align 8, !dbg !11609
  %158 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !11610
  %159 = load i64, i64* %start237, align 8, !dbg !11611
  %160 = load i64, i64* %y, align 8, !dbg !11612
  %161 = load i64, i64* %stop238, align 8, !dbg !11613
  %162 = load i64, i64* %start237, align 8, !dbg !11614
  %sub249 = sub nsw i64 %161, %162, !dbg !11615
  %add250 = add nsw i64 %sub249, 1, !dbg !11616
  %163 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !11617
  %call251 = call %struct._PixelPacket* @GetCacheViewAuthenticPixels(%struct._CacheView* %158, i64 %159, i64 %160, i64 %add250, i64 1, %struct._ExceptionInfo* %163), !dbg !11618
  store %struct._PixelPacket* %call251, %struct._PixelPacket** %q235, align 8, !dbg !11619
  %164 = load %struct._PixelPacket*, %struct._PixelPacket** %q235, align 8, !dbg !11620
  %cmp252 = icmp eq %struct._PixelPacket* %164, null, !dbg !11622
  br i1 %cmp252, label %if.then254, label %if.end255, !dbg !11623

if.then254:                                       ; preds = %if.end242
  store i32 0, i32* %status, align 4, !dbg !11624
  br label %for.inc300, !dbg !11626

if.end255:                                        ; preds = %if.end242
  %165 = load i64, i64* %start237, align 8, !dbg !11627
  store i64 %165, i64* %x236, align 8, !dbg !11629
  br label %for.cond256, !dbg !11630

for.cond256:                                      ; preds = %for.inc292, %if.end255
  %166 = load i64, i64* %x236, align 8, !dbg !11631
  %167 = load i64, i64* %stop238, align 8, !dbg !11633
  %cmp257 = icmp sle i64 %166, %167, !dbg !11634
  br i1 %cmp257, label %for.body259, label %for.end294, !dbg !11635

for.body259:                                      ; preds = %for.cond256
  %168 = load %struct._PolygonInfo**, %struct._PolygonInfo*** %polygon_info, align 8, !dbg !11636
  %169 = load i32, i32* %id, align 4, !dbg !11638
  %idxprom = sext i32 %169 to i64, !dbg !11636
  %arrayidx260 = getelementptr inbounds %struct._PolygonInfo*, %struct._PolygonInfo** %168, i64 %idxprom, !dbg !11636
  %170 = load %struct._PolygonInfo*, %struct._PolygonInfo** %arrayidx260, align 8, !dbg !11636
  %171 = load double, double* %mid, align 8, !dbg !11639
  %172 = load i32, i32* %fill, align 4, !dbg !11640
  %173 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !11641
  %fill_rule = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %173, i32 0, i32 14, !dbg !11642
  %174 = load i32, i32* %fill_rule, align 8, !dbg !11642
  %175 = load i64, i64* %x236, align 8, !dbg !11643
  %176 = load i64, i64* %y, align 8, !dbg !11644
  %call261 = call double @GetOpacityPixel(%struct._PolygonInfo* %170, double %171, i32 %172, i32 %174, i64 %175, i64 %176, double* %stroke_opacity), !dbg !11645
  store double %call261, double* %fill_opacity, align 8, !dbg !11646
  %177 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !11647
  %stroke_antialias = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %177, i32 0, i32 12, !dbg !11649
  %178 = load i32, i32* %stroke_antialias, align 8, !dbg !11649
  %cmp262 = icmp eq i32 %178, 0, !dbg !11650
  br i1 %cmp262, label %if.then264, label %if.end271, !dbg !11651

if.then264:                                       ; preds = %for.body259
  %179 = load double, double* %fill_opacity, align 8, !dbg !11652
  %cmp265 = fcmp ogt double %179, 2.500000e-01, !dbg !11654
  %180 = zext i1 %cmp265 to i64, !dbg !11652
  %cond267 = select i1 %cmp265, double 1.000000e+00, double 0.000000e+00, !dbg !11652
  store double %cond267, double* %fill_opacity, align 8, !dbg !11655
  %181 = load double, double* %stroke_opacity, align 8, !dbg !11656
  %cmp268 = fcmp ogt double %181, 2.500000e-01, !dbg !11657
  %182 = zext i1 %cmp268 to i64, !dbg !11656
  %cond270 = select i1 %cmp268, double 1.000000e+00, double 0.000000e+00, !dbg !11656
  store double %cond270, double* %stroke_opacity, align 8, !dbg !11658
  br label %if.end271, !dbg !11659

if.end271:                                        ; preds = %if.then264, %for.body259
  %183 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !11660
  %184 = load i64, i64* %x236, align 8, !dbg !11661
  %185 = load i64, i64* %y, align 8, !dbg !11662
  %call272 = call i32 @GetFillColor(%struct._DrawInfo* %183, i64 %184, i64 %185, %struct._PixelPacket* %fill_color), !dbg !11663
  %186 = load double, double* %fill_opacity, align 8, !dbg !11664
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %fill_color, i32 0, i32 3, !dbg !11665
  %187 = load i16, i16* %opacity, align 2, !dbg !11665
  %conv273 = zext i16 %187 to i32, !dbg !11666
  %sub274 = sub nsw i32 65535, %conv273, !dbg !11667
  %conv275 = sitofp i32 %sub274 to double, !dbg !11668
  %mul276 = fmul double %186, %conv275, !dbg !11669
  %sub277 = fsub double 6.553500e+04, %mul276, !dbg !11670
  store double %sub277, double* %fill_opacity, align 8, !dbg !11671
  %188 = load double, double* %fill_opacity, align 8, !dbg !11672
  %conv278 = fptrunc double %188 to float, !dbg !11673
  %189 = load %struct._PixelPacket*, %struct._PixelPacket** %q235, align 8, !dbg !11674
  %190 = load %struct._PixelPacket*, %struct._PixelPacket** %q235, align 8, !dbg !11675
  %opacity279 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %190, i32 0, i32 3, !dbg !11676
  %191 = load i16, i16* %opacity279, align 2, !dbg !11676
  %conv280 = uitofp i16 %191 to float, !dbg !11677
  %192 = load %struct._PixelPacket*, %struct._PixelPacket** %q235, align 8, !dbg !11678
  call void @MagickCompositeOver(%struct._PixelPacket* %fill_color, float %conv278, %struct._PixelPacket* %189, float %conv280, %struct._PixelPacket* %192), !dbg !11679
  %193 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !11680
  %194 = load i64, i64* %x236, align 8, !dbg !11681
  %195 = load i64, i64* %y, align 8, !dbg !11682
  %call281 = call i32 @GetStrokeColor(%struct._DrawInfo* %193, i64 %194, i64 %195, %struct._PixelPacket* %stroke_color), !dbg !11683
  %196 = load double, double* %stroke_opacity, align 8, !dbg !11684
  %opacity282 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %stroke_color, i32 0, i32 3, !dbg !11685
  %197 = load i16, i16* %opacity282, align 2, !dbg !11685
  %conv283 = zext i16 %197 to i32, !dbg !11686
  %sub284 = sub nsw i32 65535, %conv283, !dbg !11687
  %conv285 = sitofp i32 %sub284 to double, !dbg !11688
  %mul286 = fmul double %196, %conv285, !dbg !11689
  %sub287 = fsub double 6.553500e+04, %mul286, !dbg !11690
  store double %sub287, double* %stroke_opacity, align 8, !dbg !11691
  %198 = load double, double* %stroke_opacity, align 8, !dbg !11692
  %conv288 = fptrunc double %198 to float, !dbg !11693
  %199 = load %struct._PixelPacket*, %struct._PixelPacket** %q235, align 8, !dbg !11694
  %200 = load %struct._PixelPacket*, %struct._PixelPacket** %q235, align 8, !dbg !11695
  %opacity289 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %200, i32 0, i32 3, !dbg !11696
  %201 = load i16, i16* %opacity289, align 2, !dbg !11696
  %conv290 = uitofp i16 %201 to float, !dbg !11697
  %202 = load %struct._PixelPacket*, %struct._PixelPacket** %q235, align 8, !dbg !11698
  call void @MagickCompositeOver(%struct._PixelPacket* %stroke_color, float %conv288, %struct._PixelPacket* %199, float %conv290, %struct._PixelPacket* %202), !dbg !11699
  %203 = load %struct._PixelPacket*, %struct._PixelPacket** %q235, align 8, !dbg !11700
  %incdec.ptr291 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %203, i32 1, !dbg !11700
  store %struct._PixelPacket* %incdec.ptr291, %struct._PixelPacket** %q235, align 8, !dbg !11700
  br label %for.inc292, !dbg !11701

for.inc292:                                       ; preds = %if.end271
  %204 = load i64, i64* %x236, align 8, !dbg !11702
  %inc293 = add nsw i64 %204, 1, !dbg !11702
  store i64 %inc293, i64* %x236, align 8, !dbg !11702
  br label %for.cond256, !dbg !11703, !llvm.loop !11704

for.end294:                                       ; preds = %for.cond256
  %205 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !11706
  %206 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception, align 8, !dbg !11708
  %call295 = call i32 @SyncCacheViewAuthenticPixels(%struct._CacheView* %205, %struct._ExceptionInfo* %206), !dbg !11709
  %cmp296 = icmp eq i32 %call295, 0, !dbg !11710
  br i1 %cmp296, label %if.then298, label %if.end299, !dbg !11711

if.then298:                                       ; preds = %for.end294
  store i32 0, i32* %status, align 4, !dbg !11712
  br label %if.end299, !dbg !11713

if.end299:                                        ; preds = %if.then298, %for.end294
  br label %for.inc300, !dbg !11714

for.inc300:                                       ; preds = %if.end299, %if.then254, %if.then241
  %207 = load i64, i64* %y, align 8, !dbg !11715
  %inc301 = add nsw i64 %207, 1, !dbg !11715
  store i64 %inc301, i64* %y, align 8, !dbg !11715
  br label %for.cond230, !dbg !11716, !llvm.loop !11717

for.end302:                                       ; preds = %for.cond230
  %208 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !11719
  %call303 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %208), !dbg !11720
  store %struct._CacheView* %call303, %struct._CacheView** %image_view, align 8, !dbg !11721
  %209 = load %struct._PolygonInfo**, %struct._PolygonInfo*** %polygon_info, align 8, !dbg !11722
  %call304 = call %struct._PolygonInfo** @DestroyPolygonThreadSet(%struct._PolygonInfo** %209), !dbg !11723
  store %struct._PolygonInfo** %call304, %struct._PolygonInfo*** %polygon_info, align 8, !dbg !11724
  %210 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !11725
  %debug305 = getelementptr inbounds %struct._Image, %struct._Image* %210, i32 0, i32 59, !dbg !11727
  %211 = load i32, i32* %debug305, align 8, !dbg !11727
  %cmp306 = icmp ne i32 %211, 0, !dbg !11728
  br i1 %cmp306, label %if.then308, label %if.end310, !dbg !11729

if.then308:                                       ; preds = %for.end302
  %call309 = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 128, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4065, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.124, i64 0, i64 0)), !dbg !11730
  br label %if.end310, !dbg !11731

if.end310:                                        ; preds = %if.then308, %for.end302
  %212 = load i32, i32* %status, align 4, !dbg !11732
  store i32 %212, i32* %retval, align 4, !dbg !11733
  br label %return, !dbg !11733

return:                                           ; preds = %if.end310, %if.end217, %if.then6, %if.then2
  %213 = load i32, i32* %retval, align 4, !dbg !11734
  ret i32 %213, !dbg !11734
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @DrawDashPolygon(%struct._DrawInfo* %draw_info, %struct._PrimitiveInfo* %primitive_info, %struct._Image* %image) #0 !dbg !11735 {
entry:
  %retval = alloca i32, align 4
  %draw_info.addr = alloca %struct._DrawInfo*, align 8
  %primitive_info.addr = alloca %struct._PrimitiveInfo*, align 8
  %image.addr = alloca %struct._Image*, align 8
  %length = alloca double, align 8
  %maximum_length = alloca double, align 8
  %offset = alloca double, align 8
  %scale = alloca double, align 8
  %total_length = alloca double, align 8
  %clone_info = alloca %struct._DrawInfo*, align 8
  %status = alloca i32, align 4
  %dash_polygon = alloca %struct._PrimitiveInfo*, align 8
  %dx = alloca double, align 8
  %dy = alloca double, align 8
  %i = alloca i64, align 8
  %number_vertices = alloca i64, align 8
  %j = alloca i64, align 8
  %n = alloca i64, align 8
  store %struct._DrawInfo* %draw_info, %struct._DrawInfo** %draw_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawInfo** %draw_info.addr, metadata !11738, metadata !DIExpression()), !dbg !11739
  store %struct._PrimitiveInfo* %primitive_info, %struct._PrimitiveInfo** %primitive_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PrimitiveInfo** %primitive_info.addr, metadata !11740, metadata !DIExpression()), !dbg !11741
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !11742, metadata !DIExpression()), !dbg !11743
  call void @llvm.dbg.declare(metadata double* %length, metadata !11744, metadata !DIExpression()), !dbg !11745
  call void @llvm.dbg.declare(metadata double* %maximum_length, metadata !11746, metadata !DIExpression()), !dbg !11747
  call void @llvm.dbg.declare(metadata double* %offset, metadata !11748, metadata !DIExpression()), !dbg !11749
  call void @llvm.dbg.declare(metadata double* %scale, metadata !11750, metadata !DIExpression()), !dbg !11751
  call void @llvm.dbg.declare(metadata double* %total_length, metadata !11752, metadata !DIExpression()), !dbg !11753
  call void @llvm.dbg.declare(metadata %struct._DrawInfo** %clone_info, metadata !11754, metadata !DIExpression()), !dbg !11755
  call void @llvm.dbg.declare(metadata i32* %status, metadata !11756, metadata !DIExpression()), !dbg !11757
  call void @llvm.dbg.declare(metadata %struct._PrimitiveInfo** %dash_polygon, metadata !11758, metadata !DIExpression()), !dbg !11759
  call void @llvm.dbg.declare(metadata double* %dx, metadata !11760, metadata !DIExpression()), !dbg !11761
  call void @llvm.dbg.declare(metadata double* %dy, metadata !11762, metadata !DIExpression()), !dbg !11763
  call void @llvm.dbg.declare(metadata i64* %i, metadata !11764, metadata !DIExpression()), !dbg !11765
  call void @llvm.dbg.declare(metadata i64* %number_vertices, metadata !11766, metadata !DIExpression()), !dbg !11767
  call void @llvm.dbg.declare(metadata i64* %j, metadata !11768, metadata !DIExpression()), !dbg !11769
  call void @llvm.dbg.declare(metadata i64* %n, metadata !11770, metadata !DIExpression()), !dbg !11771
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !11772
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !11774
  %1 = load i32, i32* %debug, align 8, !dbg !11774
  %cmp = icmp ne i32 %1, 0, !dbg !11775
  br i1 %cmp, label %if.then, label %if.end, !dbg !11776

if.then:                                          ; preds = %entry
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 128, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1549, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.143, i64 0, i64 0)), !dbg !11777
  br label %if.end, !dbg !11778

if.end:                                           ; preds = %if.then, %entry
  %2 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !11779
  %call1 = call %struct._DrawInfo* @CloneDrawInfo(%struct._ImageInfo* null, %struct._DrawInfo* %2), !dbg !11780
  store %struct._DrawInfo* %call1, %struct._DrawInfo** %clone_info, align 8, !dbg !11781
  %3 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info, align 8, !dbg !11782
  %miterlimit = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %3, i32 0, i32 17, !dbg !11783
  store i64 0, i64* %miterlimit, align 8, !dbg !11784
  store i64 0, i64* %i, align 8, !dbg !11785
  br label %for.cond, !dbg !11787

for.cond:                                         ; preds = %for.inc, %if.end
  %4 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !11788
  %5 = load i64, i64* %i, align 8, !dbg !11790
  %arrayidx = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %4, i64 %5, !dbg !11788
  %primitive = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx, i32 0, i32 2, !dbg !11791
  %6 = load i32, i32* %primitive, align 8, !dbg !11791
  %cmp2 = icmp ne i32 %6, 0, !dbg !11792
  br i1 %cmp2, label %for.body, label %for.end, !dbg !11793

for.body:                                         ; preds = %for.cond
  br label %for.inc, !dbg !11793

for.inc:                                          ; preds = %for.body
  %7 = load i64, i64* %i, align 8, !dbg !11794
  %inc = add nsw i64 %7, 1, !dbg !11794
  store i64 %inc, i64* %i, align 8, !dbg !11794
  br label %for.cond, !dbg !11795, !llvm.loop !11796

for.end:                                          ; preds = %for.cond
  %8 = load i64, i64* %i, align 8, !dbg !11798
  store i64 %8, i64* %number_vertices, align 8, !dbg !11799
  %9 = load i64, i64* %number_vertices, align 8, !dbg !11800
  %mul = mul i64 2, %9, !dbg !11801
  %add = add i64 %mul, 1, !dbg !11802
  %call3 = call i8* @AcquireQuantumMemory(i64 %add, i64 40) #14, !dbg !11803
  %10 = bitcast i8* %call3 to %struct._PrimitiveInfo*, !dbg !11804
  store %struct._PrimitiveInfo* %10, %struct._PrimitiveInfo** %dash_polygon, align 8, !dbg !11805
  %11 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %dash_polygon, align 8, !dbg !11806
  %cmp4 = icmp eq %struct._PrimitiveInfo* %11, null, !dbg !11808
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !11809

if.then5:                                         ; preds = %for.end
  store i32 0, i32* %retval, align 4, !dbg !11810
  br label %return, !dbg !11810

if.end6:                                          ; preds = %for.end
  %12 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %dash_polygon, align 8, !dbg !11811
  %arrayidx7 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %12, i64 0, !dbg !11811
  %13 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !11812
  %arrayidx8 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %13, i64 0, !dbg !11812
  %14 = bitcast %struct._PrimitiveInfo* %arrayidx7 to i8*, !dbg !11812
  %15 = bitcast %struct._PrimitiveInfo* %arrayidx8 to i8*, !dbg !11812
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 40, i1 false), !dbg !11812
  %16 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !11813
  %affine = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %16, i32 0, i32 3, !dbg !11814
  %call9 = call double @ExpandAffine(%struct._AffineMatrix* %affine), !dbg !11815
  store double %call9, double* %scale, align 8, !dbg !11816
  %17 = load double, double* %scale, align 8, !dbg !11817
  %18 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !11818
  %dash_pattern = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %18, i32 0, i32 36, !dbg !11819
  %19 = load double*, double** %dash_pattern, align 8, !dbg !11819
  %arrayidx10 = getelementptr inbounds double, double* %19, i64 0, !dbg !11818
  %20 = load double, double* %arrayidx10, align 8, !dbg !11818
  %sub = fsub double %20, 5.000000e-01, !dbg !11820
  %mul11 = fmul double %17, %sub, !dbg !11821
  store double %mul11, double* %length, align 8, !dbg !11822
  %21 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !11823
  %dash_offset = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %21, i32 0, i32 18, !dbg !11824
  %22 = load double, double* %dash_offset, align 8, !dbg !11824
  %cmp12 = fcmp une double %22, 0.000000e+00, !dbg !11825
  br i1 %cmp12, label %cond.true, label %cond.false, !dbg !11823

cond.true:                                        ; preds = %if.end6
  %23 = load double, double* %scale, align 8, !dbg !11826
  %24 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !11827
  %dash_offset13 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %24, i32 0, i32 18, !dbg !11828
  %25 = load double, double* %dash_offset13, align 8, !dbg !11828
  %mul14 = fmul double %23, %25, !dbg !11829
  br label %cond.end, !dbg !11823

cond.false:                                       ; preds = %if.end6
  br label %cond.end, !dbg !11823

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi double [ %mul14, %cond.true ], [ 0.000000e+00, %cond.false ], !dbg !11823
  store double %cond, double* %offset, align 8, !dbg !11830
  store i64 1, i64* %j, align 8, !dbg !11831
  store i64 0, i64* %n, align 8, !dbg !11832
  br label %for.cond15, !dbg !11834

for.cond15:                                       ; preds = %for.inc43, %cond.end
  %26 = load double, double* %offset, align 8, !dbg !11835
  %cmp16 = fcmp ogt double %26, 0.000000e+00, !dbg !11837
  br i1 %cmp16, label %for.body17, label %for.end44, !dbg !11838

for.body17:                                       ; preds = %for.cond15
  %27 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !11839
  %dash_pattern18 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %27, i32 0, i32 36, !dbg !11842
  %28 = load double*, double** %dash_pattern18, align 8, !dbg !11842
  %29 = load i64, i64* %n, align 8, !dbg !11843
  %arrayidx19 = getelementptr inbounds double, double* %28, i64 %29, !dbg !11839
  %30 = load double, double* %arrayidx19, align 8, !dbg !11839
  %cmp20 = fcmp ole double %30, 0.000000e+00, !dbg !11844
  br i1 %cmp20, label %if.then21, label %if.end22, !dbg !11845

if.then21:                                        ; preds = %for.body17
  br label %for.end44, !dbg !11846

if.end22:                                         ; preds = %for.body17
  %31 = load double, double* %scale, align 8, !dbg !11847
  %32 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !11848
  %dash_pattern23 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %32, i32 0, i32 36, !dbg !11849
  %33 = load double*, double** %dash_pattern23, align 8, !dbg !11849
  %34 = load i64, i64* %n, align 8, !dbg !11850
  %arrayidx24 = getelementptr inbounds double, double* %33, i64 %34, !dbg !11848
  %35 = load double, double* %arrayidx24, align 8, !dbg !11848
  %36 = load i64, i64* %n, align 8, !dbg !11851
  %cmp25 = icmp eq i64 %36, 0, !dbg !11852
  %37 = zext i1 %cmp25 to i64, !dbg !11851
  %cond26 = select i1 %cmp25, double -5.000000e-01, double 5.000000e-01, !dbg !11851
  %add27 = fadd double %35, %cond26, !dbg !11853
  %mul28 = fmul double %31, %add27, !dbg !11854
  store double %mul28, double* %length, align 8, !dbg !11855
  %38 = load double, double* %offset, align 8, !dbg !11856
  %39 = load double, double* %length, align 8, !dbg !11858
  %cmp29 = fcmp ogt double %38, %39, !dbg !11859
  br i1 %cmp29, label %if.then30, label %if.end37, !dbg !11860

if.then30:                                        ; preds = %if.end22
  %40 = load double, double* %length, align 8, !dbg !11861
  %41 = load double, double* %offset, align 8, !dbg !11863
  %sub31 = fsub double %41, %40, !dbg !11863
  store double %sub31, double* %offset, align 8, !dbg !11863
  %42 = load i64, i64* %n, align 8, !dbg !11864
  %inc32 = add nsw i64 %42, 1, !dbg !11864
  store i64 %inc32, i64* %n, align 8, !dbg !11864
  %43 = load double, double* %scale, align 8, !dbg !11865
  %44 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !11866
  %dash_pattern33 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %44, i32 0, i32 36, !dbg !11867
  %45 = load double*, double** %dash_pattern33, align 8, !dbg !11867
  %46 = load i64, i64* %n, align 8, !dbg !11868
  %arrayidx34 = getelementptr inbounds double, double* %45, i64 %46, !dbg !11866
  %47 = load double, double* %arrayidx34, align 8, !dbg !11866
  %add35 = fadd double %47, 5.000000e-01, !dbg !11869
  %mul36 = fmul double %43, %add35, !dbg !11870
  store double %mul36, double* %length, align 8, !dbg !11871
  br label %for.inc43, !dbg !11872

if.end37:                                         ; preds = %if.end22
  %48 = load double, double* %offset, align 8, !dbg !11873
  %49 = load double, double* %length, align 8, !dbg !11875
  %cmp38 = fcmp olt double %48, %49, !dbg !11876
  br i1 %cmp38, label %if.then39, label %if.end41, !dbg !11877

if.then39:                                        ; preds = %if.end37
  %50 = load double, double* %offset, align 8, !dbg !11878
  %51 = load double, double* %length, align 8, !dbg !11880
  %sub40 = fsub double %51, %50, !dbg !11880
  store double %sub40, double* %length, align 8, !dbg !11880
  store double 0.000000e+00, double* %offset, align 8, !dbg !11881
  br label %for.end44, !dbg !11882

if.end41:                                         ; preds = %if.end37
  store double 0.000000e+00, double* %offset, align 8, !dbg !11883
  %52 = load i64, i64* %n, align 8, !dbg !11884
  %inc42 = add nsw i64 %52, 1, !dbg !11884
  store i64 %inc42, i64* %n, align 8, !dbg !11884
  br label %for.inc43, !dbg !11885

for.inc43:                                        ; preds = %if.end41, %if.then30
  store i64 0, i64* %j, align 8, !dbg !11886
  br label %for.cond15, !dbg !11887, !llvm.loop !11888

for.end44:                                        ; preds = %if.then39, %if.then21, %for.cond15
  store i32 1, i32* %status, align 4, !dbg !11890
  store double 0.000000e+00, double* %maximum_length, align 8, !dbg !11891
  store double 0.000000e+00, double* %total_length, align 8, !dbg !11892
  store i64 1, i64* %i, align 8, !dbg !11893
  br label %for.cond45, !dbg !11895

for.cond45:                                       ; preds = %for.inc166, %for.end44
  %53 = load i64, i64* %i, align 8, !dbg !11896
  %54 = load i64, i64* %number_vertices, align 8, !dbg !11898
  %cmp46 = icmp slt i64 %53, %54, !dbg !11899
  br i1 %cmp46, label %for.body47, label %for.end168, !dbg !11900

for.body47:                                       ; preds = %for.cond45
  %55 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !11901
  %56 = load i64, i64* %i, align 8, !dbg !11903
  %arrayidx48 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %55, i64 %56, !dbg !11901
  %point = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx48, i32 0, i32 0, !dbg !11904
  %x = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 0, !dbg !11905
  %57 = load double, double* %x, align 8, !dbg !11905
  %58 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !11906
  %59 = load i64, i64* %i, align 8, !dbg !11907
  %sub49 = sub nsw i64 %59, 1, !dbg !11908
  %arrayidx50 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %58, i64 %sub49, !dbg !11906
  %point51 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx50, i32 0, i32 0, !dbg !11909
  %x52 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point51, i32 0, i32 0, !dbg !11910
  %60 = load double, double* %x52, align 8, !dbg !11910
  %sub53 = fsub double %57, %60, !dbg !11911
  store double %sub53, double* %dx, align 8, !dbg !11912
  %61 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !11913
  %62 = load i64, i64* %i, align 8, !dbg !11914
  %arrayidx54 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %61, i64 %62, !dbg !11913
  %point55 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx54, i32 0, i32 0, !dbg !11915
  %y = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point55, i32 0, i32 1, !dbg !11916
  %63 = load double, double* %y, align 8, !dbg !11916
  %64 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !11917
  %65 = load i64, i64* %i, align 8, !dbg !11918
  %sub56 = sub nsw i64 %65, 1, !dbg !11919
  %arrayidx57 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %64, i64 %sub56, !dbg !11917
  %point58 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx57, i32 0, i32 0, !dbg !11920
  %y59 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point58, i32 0, i32 1, !dbg !11921
  %66 = load double, double* %y59, align 8, !dbg !11921
  %sub60 = fsub double %63, %66, !dbg !11922
  store double %sub60, double* %dy, align 8, !dbg !11923
  %67 = load double, double* %dx, align 8, !dbg !11924
  %68 = load double, double* %dy, align 8, !dbg !11925
  %call61 = call double @hypot(double %67, double %68) #17, !dbg !11926
  store double %call61, double* %maximum_length, align 8, !dbg !11927
  %69 = load double, double* %length, align 8, !dbg !11928
  %cmp62 = fcmp oeq double %69, 0.000000e+00, !dbg !11930
  br i1 %cmp62, label %if.then63, label %if.end76, !dbg !11931

if.then63:                                        ; preds = %for.body47
  %70 = load i64, i64* %n, align 8, !dbg !11932
  %inc64 = add nsw i64 %70, 1, !dbg !11932
  store i64 %inc64, i64* %n, align 8, !dbg !11932
  %71 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !11934
  %dash_pattern65 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %71, i32 0, i32 36, !dbg !11936
  %72 = load double*, double** %dash_pattern65, align 8, !dbg !11936
  %73 = load i64, i64* %n, align 8, !dbg !11937
  %arrayidx66 = getelementptr inbounds double, double* %72, i64 %73, !dbg !11934
  %74 = load double, double* %arrayidx66, align 8, !dbg !11934
  %cmp67 = fcmp oeq double %74, 0.000000e+00, !dbg !11938
  br i1 %cmp67, label %if.then68, label %if.end69, !dbg !11939

if.then68:                                        ; preds = %if.then63
  store i64 0, i64* %n, align 8, !dbg !11940
  br label %if.end69, !dbg !11941

if.end69:                                         ; preds = %if.then68, %if.then63
  %75 = load double, double* %scale, align 8, !dbg !11942
  %76 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !11943
  %dash_pattern70 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %76, i32 0, i32 36, !dbg !11944
  %77 = load double*, double** %dash_pattern70, align 8, !dbg !11944
  %78 = load i64, i64* %n, align 8, !dbg !11945
  %arrayidx71 = getelementptr inbounds double, double* %77, i64 %78, !dbg !11943
  %79 = load double, double* %arrayidx71, align 8, !dbg !11943
  %80 = load i64, i64* %n, align 8, !dbg !11946
  %cmp72 = icmp eq i64 %80, 0, !dbg !11947
  %81 = zext i1 %cmp72 to i64, !dbg !11946
  %cond73 = select i1 %cmp72, double -5.000000e-01, double 5.000000e-01, !dbg !11946
  %add74 = fadd double %79, %cond73, !dbg !11948
  %mul75 = fmul double %75, %add74, !dbg !11949
  store double %mul75, double* %length, align 8, !dbg !11950
  br label %if.end76, !dbg !11951

if.end76:                                         ; preds = %if.end69, %for.body47
  store double 0.000000e+00, double* %total_length, align 8, !dbg !11952
  br label %for.cond77, !dbg !11954

for.cond77:                                       ; preds = %if.end147, %if.end76
  %82 = load double, double* %total_length, align 8, !dbg !11955
  %83 = load double, double* %length, align 8, !dbg !11957
  %add78 = fadd double %82, %83, !dbg !11958
  %84 = load double, double* %maximum_length, align 8, !dbg !11959
  %cmp79 = fcmp ole double %add78, %84, !dbg !11960
  br i1 %cmp79, label %for.body80, label %for.end154, !dbg !11961

for.body80:                                       ; preds = %for.cond77
  %85 = load double, double* %length, align 8, !dbg !11962
  %86 = load double, double* %total_length, align 8, !dbg !11964
  %add81 = fadd double %86, %85, !dbg !11964
  store double %add81, double* %total_length, align 8, !dbg !11964
  %87 = load i64, i64* %n, align 8, !dbg !11965
  %and = and i64 %87, 1, !dbg !11967
  %cmp82 = icmp ne i64 %and, 0, !dbg !11968
  br i1 %cmp82, label %if.then83, label %if.else, !dbg !11969

if.then83:                                        ; preds = %for.body80
  %88 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %dash_polygon, align 8, !dbg !11970
  %arrayidx84 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %88, i64 0, !dbg !11970
  %89 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !11972
  %arrayidx85 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %89, i64 0, !dbg !11972
  %90 = bitcast %struct._PrimitiveInfo* %arrayidx84 to i8*, !dbg !11972
  %91 = bitcast %struct._PrimitiveInfo* %arrayidx85 to i8*, !dbg !11972
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %90, i8* align 8 %91, i64 40, i1 false), !dbg !11972
  %92 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !11973
  %93 = load i64, i64* %i, align 8, !dbg !11974
  %sub86 = sub nsw i64 %93, 1, !dbg !11975
  %arrayidx87 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %92, i64 %sub86, !dbg !11973
  %point88 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx87, i32 0, i32 0, !dbg !11976
  %x89 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point88, i32 0, i32 0, !dbg !11977
  %94 = load double, double* %x89, align 8, !dbg !11977
  %95 = load double, double* %dx, align 8, !dbg !11978
  %96 = load double, double* %total_length, align 8, !dbg !11979
  %mul90 = fmul double %95, %96, !dbg !11980
  %97 = load double, double* %maximum_length, align 8, !dbg !11981
  %div = fdiv double %mul90, %97, !dbg !11982
  %add91 = fadd double %94, %div, !dbg !11983
  %98 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %dash_polygon, align 8, !dbg !11984
  %arrayidx92 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %98, i64 0, !dbg !11984
  %point93 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx92, i32 0, i32 0, !dbg !11985
  %x94 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point93, i32 0, i32 0, !dbg !11986
  store double %add91, double* %x94, align 8, !dbg !11987
  %99 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !11988
  %100 = load i64, i64* %i, align 8, !dbg !11989
  %sub95 = sub nsw i64 %100, 1, !dbg !11990
  %arrayidx96 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %99, i64 %sub95, !dbg !11988
  %point97 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx96, i32 0, i32 0, !dbg !11991
  %y98 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point97, i32 0, i32 1, !dbg !11992
  %101 = load double, double* %y98, align 8, !dbg !11992
  %102 = load double, double* %dy, align 8, !dbg !11993
  %103 = load double, double* %total_length, align 8, !dbg !11994
  %mul99 = fmul double %102, %103, !dbg !11995
  %104 = load double, double* %maximum_length, align 8, !dbg !11996
  %div100 = fdiv double %mul99, %104, !dbg !11997
  %add101 = fadd double %101, %div100, !dbg !11998
  %105 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %dash_polygon, align 8, !dbg !11999
  %arrayidx102 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %105, i64 0, !dbg !11999
  %point103 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx102, i32 0, i32 0, !dbg !12000
  %y104 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point103, i32 0, i32 1, !dbg !12001
  store double %add101, double* %y104, align 8, !dbg !12002
  store i64 1, i64* %j, align 8, !dbg !12003
  br label %if.end141, !dbg !12004

if.else:                                          ; preds = %for.body80
  %106 = load i64, i64* %j, align 8, !dbg !12005
  %add105 = add nsw i64 %106, 1, !dbg !12008
  %107 = load i64, i64* %number_vertices, align 8, !dbg !12009
  %mul106 = mul i64 2, %107, !dbg !12010
  %cmp107 = icmp sgt i64 %add105, %mul106, !dbg !12011
  br i1 %cmp107, label %if.then108, label %if.end109, !dbg !12012

if.then108:                                       ; preds = %if.else
  br label %for.end154, !dbg !12013

if.end109:                                        ; preds = %if.else
  %108 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %dash_polygon, align 8, !dbg !12014
  %109 = load i64, i64* %j, align 8, !dbg !12015
  %arrayidx110 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %108, i64 %109, !dbg !12014
  %110 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !12016
  %111 = load i64, i64* %i, align 8, !dbg !12017
  %sub111 = sub nsw i64 %111, 1, !dbg !12018
  %arrayidx112 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %110, i64 %sub111, !dbg !12016
  %112 = bitcast %struct._PrimitiveInfo* %arrayidx110 to i8*, !dbg !12016
  %113 = bitcast %struct._PrimitiveInfo* %arrayidx112 to i8*, !dbg !12016
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %112, i8* align 8 %113, i64 40, i1 false), !dbg !12016
  %114 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !12019
  %115 = load i64, i64* %i, align 8, !dbg !12020
  %sub113 = sub nsw i64 %115, 1, !dbg !12021
  %arrayidx114 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %114, i64 %sub113, !dbg !12019
  %point115 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx114, i32 0, i32 0, !dbg !12022
  %x116 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point115, i32 0, i32 0, !dbg !12023
  %116 = load double, double* %x116, align 8, !dbg !12023
  %117 = load double, double* %dx, align 8, !dbg !12024
  %118 = load double, double* %total_length, align 8, !dbg !12025
  %mul117 = fmul double %117, %118, !dbg !12026
  %119 = load double, double* %maximum_length, align 8, !dbg !12027
  %div118 = fdiv double %mul117, %119, !dbg !12028
  %add119 = fadd double %116, %div118, !dbg !12029
  %120 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %dash_polygon, align 8, !dbg !12030
  %121 = load i64, i64* %j, align 8, !dbg !12031
  %arrayidx120 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %120, i64 %121, !dbg !12030
  %point121 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx120, i32 0, i32 0, !dbg !12032
  %x122 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point121, i32 0, i32 0, !dbg !12033
  store double %add119, double* %x122, align 8, !dbg !12034
  %122 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !12035
  %123 = load i64, i64* %i, align 8, !dbg !12036
  %sub123 = sub nsw i64 %123, 1, !dbg !12037
  %arrayidx124 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %122, i64 %sub123, !dbg !12035
  %point125 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx124, i32 0, i32 0, !dbg !12038
  %y126 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point125, i32 0, i32 1, !dbg !12039
  %124 = load double, double* %y126, align 8, !dbg !12039
  %125 = load double, double* %dy, align 8, !dbg !12040
  %126 = load double, double* %total_length, align 8, !dbg !12041
  %mul127 = fmul double %125, %126, !dbg !12042
  %127 = load double, double* %maximum_length, align 8, !dbg !12043
  %div128 = fdiv double %mul127, %127, !dbg !12044
  %add129 = fadd double %124, %div128, !dbg !12045
  %128 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %dash_polygon, align 8, !dbg !12046
  %129 = load i64, i64* %j, align 8, !dbg !12047
  %arrayidx130 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %128, i64 %129, !dbg !12046
  %point131 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx130, i32 0, i32 0, !dbg !12048
  %y132 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point131, i32 0, i32 1, !dbg !12049
  store double %add129, double* %y132, align 8, !dbg !12050
  %130 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %dash_polygon, align 8, !dbg !12051
  %131 = load i64, i64* %j, align 8, !dbg !12052
  %arrayidx133 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %130, i64 %131, !dbg !12051
  %coordinates = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx133, i32 0, i32 1, !dbg !12053
  store i64 1, i64* %coordinates, align 8, !dbg !12054
  %132 = load i64, i64* %j, align 8, !dbg !12055
  %inc134 = add nsw i64 %132, 1, !dbg !12055
  store i64 %inc134, i64* %j, align 8, !dbg !12055
  %133 = load i64, i64* %j, align 8, !dbg !12056
  %134 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %dash_polygon, align 8, !dbg !12057
  %arrayidx135 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %134, i64 0, !dbg !12057
  %coordinates136 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx135, i32 0, i32 1, !dbg !12058
  store i64 %133, i64* %coordinates136, align 8, !dbg !12059
  %135 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %dash_polygon, align 8, !dbg !12060
  %136 = load i64, i64* %j, align 8, !dbg !12061
  %arrayidx137 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %135, i64 %136, !dbg !12060
  %primitive138 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx137, i32 0, i32 2, !dbg !12062
  store i32 0, i32* %primitive138, align 8, !dbg !12063
  %137 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !12064
  %138 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info, align 8, !dbg !12065
  %139 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %dash_polygon, align 8, !dbg !12066
  %call139 = call i32 @DrawStrokePolygon(%struct._Image* %137, %struct._DrawInfo* %138, %struct._PrimitiveInfo* %139), !dbg !12067
  %140 = load i32, i32* %status, align 4, !dbg !12068
  %and140 = and i32 %140, %call139, !dbg !12068
  store i32 %and140, i32* %status, align 4, !dbg !12068
  br label %if.end141

if.end141:                                        ; preds = %if.end109, %if.then83
  %141 = load i64, i64* %n, align 8, !dbg !12069
  %inc142 = add nsw i64 %141, 1, !dbg !12069
  store i64 %inc142, i64* %n, align 8, !dbg !12069
  %142 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !12070
  %dash_pattern143 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %142, i32 0, i32 36, !dbg !12072
  %143 = load double*, double** %dash_pattern143, align 8, !dbg !12072
  %144 = load i64, i64* %n, align 8, !dbg !12073
  %arrayidx144 = getelementptr inbounds double, double* %143, i64 %144, !dbg !12070
  %145 = load double, double* %arrayidx144, align 8, !dbg !12070
  %cmp145 = fcmp oeq double %145, 0.000000e+00, !dbg !12074
  br i1 %cmp145, label %if.then146, label %if.end147, !dbg !12075

if.then146:                                       ; preds = %if.end141
  store i64 0, i64* %n, align 8, !dbg !12076
  br label %if.end147, !dbg !12077

if.end147:                                        ; preds = %if.then146, %if.end141
  %146 = load double, double* %scale, align 8, !dbg !12078
  %147 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !12079
  %dash_pattern148 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %147, i32 0, i32 36, !dbg !12080
  %148 = load double*, double** %dash_pattern148, align 8, !dbg !12080
  %149 = load i64, i64* %n, align 8, !dbg !12081
  %arrayidx149 = getelementptr inbounds double, double* %148, i64 %149, !dbg !12079
  %150 = load double, double* %arrayidx149, align 8, !dbg !12079
  %151 = load i64, i64* %n, align 8, !dbg !12082
  %cmp150 = icmp eq i64 %151, 0, !dbg !12083
  %152 = zext i1 %cmp150 to i64, !dbg !12082
  %cond151 = select i1 %cmp150, double -5.000000e-01, double 5.000000e-01, !dbg !12082
  %add152 = fadd double %150, %cond151, !dbg !12084
  %mul153 = fmul double %146, %add152, !dbg !12085
  store double %mul153, double* %length, align 8, !dbg !12086
  br label %for.cond77, !dbg !12087, !llvm.loop !12088

for.end154:                                       ; preds = %if.then108, %for.cond77
  %153 = load double, double* %maximum_length, align 8, !dbg !12090
  %154 = load double, double* %total_length, align 8, !dbg !12091
  %sub155 = fsub double %153, %154, !dbg !12092
  %155 = load double, double* %length, align 8, !dbg !12093
  %sub156 = fsub double %155, %sub155, !dbg !12093
  store double %sub156, double* %length, align 8, !dbg !12093
  %156 = load i64, i64* %n, align 8, !dbg !12094
  %and157 = and i64 %156, 1, !dbg !12096
  %cmp158 = icmp ne i64 %and157, 0, !dbg !12097
  br i1 %cmp158, label %if.then159, label %if.end160, !dbg !12098

if.then159:                                       ; preds = %for.end154
  br label %for.inc166, !dbg !12099

if.end160:                                        ; preds = %for.end154
  %157 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %dash_polygon, align 8, !dbg !12100
  %158 = load i64, i64* %j, align 8, !dbg !12101
  %arrayidx161 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %157, i64 %158, !dbg !12100
  %159 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !12102
  %160 = load i64, i64* %i, align 8, !dbg !12103
  %arrayidx162 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %159, i64 %160, !dbg !12102
  %161 = bitcast %struct._PrimitiveInfo* %arrayidx161 to i8*, !dbg !12102
  %162 = bitcast %struct._PrimitiveInfo* %arrayidx162 to i8*, !dbg !12102
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %161, i8* align 8 %162, i64 40, i1 false), !dbg !12102
  %163 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %dash_polygon, align 8, !dbg !12104
  %164 = load i64, i64* %j, align 8, !dbg !12105
  %arrayidx163 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %163, i64 %164, !dbg !12104
  %coordinates164 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx163, i32 0, i32 1, !dbg !12106
  store i64 1, i64* %coordinates164, align 8, !dbg !12107
  %165 = load i64, i64* %j, align 8, !dbg !12108
  %inc165 = add nsw i64 %165, 1, !dbg !12108
  store i64 %inc165, i64* %j, align 8, !dbg !12108
  br label %for.inc166, !dbg !12109

for.inc166:                                       ; preds = %if.end160, %if.then159
  %166 = load i64, i64* %i, align 8, !dbg !12110
  %inc167 = add nsw i64 %166, 1, !dbg !12110
  store i64 %inc167, i64* %i, align 8, !dbg !12110
  br label %for.cond45, !dbg !12111, !llvm.loop !12112

for.end168:                                       ; preds = %for.cond45
  %167 = load double, double* %total_length, align 8, !dbg !12114
  %168 = load double, double* %maximum_length, align 8, !dbg !12116
  %cmp169 = fcmp ole double %167, %168, !dbg !12117
  br i1 %cmp169, label %land.lhs.true, label %if.end195, !dbg !12118

land.lhs.true:                                    ; preds = %for.end168
  %169 = load i64, i64* %n, align 8, !dbg !12119
  %and170 = and i64 %169, 1, !dbg !12120
  %cmp171 = icmp eq i64 %and170, 0, !dbg !12121
  br i1 %cmp171, label %land.lhs.true172, label %if.end195, !dbg !12122

land.lhs.true172:                                 ; preds = %land.lhs.true
  %170 = load i64, i64* %j, align 8, !dbg !12123
  %cmp173 = icmp sgt i64 %170, 1, !dbg !12124
  br i1 %cmp173, label %if.then174, label %if.end195, !dbg !12125

if.then174:                                       ; preds = %land.lhs.true172
  %171 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %dash_polygon, align 8, !dbg !12126
  %172 = load i64, i64* %j, align 8, !dbg !12128
  %arrayidx175 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %171, i64 %172, !dbg !12126
  %173 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !12129
  %174 = load i64, i64* %i, align 8, !dbg !12130
  %sub176 = sub nsw i64 %174, 1, !dbg !12131
  %arrayidx177 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %173, i64 %sub176, !dbg !12129
  %175 = bitcast %struct._PrimitiveInfo* %arrayidx175 to i8*, !dbg !12129
  %176 = bitcast %struct._PrimitiveInfo* %arrayidx177 to i8*, !dbg !12129
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %175, i8* align 8 %176, i64 40, i1 false), !dbg !12129
  %177 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %dash_polygon, align 8, !dbg !12132
  %178 = load i64, i64* %j, align 8, !dbg !12133
  %arrayidx178 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %177, i64 %178, !dbg !12132
  %point179 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx178, i32 0, i32 0, !dbg !12134
  %x180 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point179, i32 0, i32 0, !dbg !12135
  %179 = load double, double* %x180, align 8, !dbg !12136
  %add181 = fadd double %179, 1.000000e-15, !dbg !12136
  store double %add181, double* %x180, align 8, !dbg !12136
  %180 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %dash_polygon, align 8, !dbg !12137
  %181 = load i64, i64* %j, align 8, !dbg !12138
  %arrayidx182 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %180, i64 %181, !dbg !12137
  %point183 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx182, i32 0, i32 0, !dbg !12139
  %y184 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point183, i32 0, i32 1, !dbg !12140
  %182 = load double, double* %y184, align 8, !dbg !12141
  %add185 = fadd double %182, 1.000000e-15, !dbg !12141
  store double %add185, double* %y184, align 8, !dbg !12141
  %183 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %dash_polygon, align 8, !dbg !12142
  %184 = load i64, i64* %j, align 8, !dbg !12143
  %arrayidx186 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %183, i64 %184, !dbg !12142
  %coordinates187 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx186, i32 0, i32 1, !dbg !12144
  store i64 1, i64* %coordinates187, align 8, !dbg !12145
  %185 = load i64, i64* %j, align 8, !dbg !12146
  %inc188 = add nsw i64 %185, 1, !dbg !12146
  store i64 %inc188, i64* %j, align 8, !dbg !12146
  %186 = load i64, i64* %j, align 8, !dbg !12147
  %187 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %dash_polygon, align 8, !dbg !12148
  %arrayidx189 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %187, i64 0, !dbg !12148
  %coordinates190 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx189, i32 0, i32 1, !dbg !12149
  store i64 %186, i64* %coordinates190, align 8, !dbg !12150
  %188 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %dash_polygon, align 8, !dbg !12151
  %189 = load i64, i64* %j, align 8, !dbg !12152
  %arrayidx191 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %188, i64 %189, !dbg !12151
  %primitive192 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx191, i32 0, i32 2, !dbg !12153
  store i32 0, i32* %primitive192, align 8, !dbg !12154
  %190 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !12155
  %191 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info, align 8, !dbg !12156
  %192 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %dash_polygon, align 8, !dbg !12157
  %call193 = call i32 @DrawStrokePolygon(%struct._Image* %190, %struct._DrawInfo* %191, %struct._PrimitiveInfo* %192), !dbg !12158
  %193 = load i32, i32* %status, align 4, !dbg !12159
  %and194 = and i32 %193, %call193, !dbg !12159
  store i32 %and194, i32* %status, align 4, !dbg !12159
  br label %if.end195, !dbg !12160

if.end195:                                        ; preds = %if.then174, %land.lhs.true172, %land.lhs.true, %for.end168
  %194 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %dash_polygon, align 8, !dbg !12161
  %195 = bitcast %struct._PrimitiveInfo* %194 to i8*, !dbg !12161
  %call196 = call i8* @RelinquishMagickMemory(i8* %195), !dbg !12162
  %196 = bitcast i8* %call196 to %struct._PrimitiveInfo*, !dbg !12163
  store %struct._PrimitiveInfo* %196, %struct._PrimitiveInfo** %dash_polygon, align 8, !dbg !12164
  %197 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info, align 8, !dbg !12165
  %call197 = call %struct._DrawInfo* @DestroyDrawInfo(%struct._DrawInfo* %197), !dbg !12166
  store %struct._DrawInfo* %call197, %struct._DrawInfo** %clone_info, align 8, !dbg !12167
  %198 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !12168
  %debug198 = getelementptr inbounds %struct._Image, %struct._Image* %198, i32 0, i32 59, !dbg !12170
  %199 = load i32, i32* %debug198, align 8, !dbg !12170
  %cmp199 = icmp ne i32 %199, 0, !dbg !12171
  br i1 %cmp199, label %if.then200, label %if.end202, !dbg !12172

if.then200:                                       ; preds = %if.end195
  %call201 = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 128, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1652, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.144, i64 0, i64 0)), !dbg !12173
  br label %if.end202, !dbg !12174

if.end202:                                        ; preds = %if.then200, %if.end195
  %200 = load i32, i32* %status, align 4, !dbg !12175
  %cmp203 = icmp ne i32 %200, 0, !dbg !12176
  %201 = zext i1 %cmp203 to i64, !dbg !12175
  %cond204 = select i1 %cmp203, i32 1, i32 0, !dbg !12175
  store i32 %cond204, i32* %retval, align 4, !dbg !12177
  br label %return, !dbg !12177

return:                                           ; preds = %if.end202, %if.then5
  %202 = load i32, i32* %retval, align 4, !dbg !12178
  ret i32 %202, !dbg !12178
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @DrawStrokePolygon(%struct._Image* %image, %struct._DrawInfo* %draw_info, %struct._PrimitiveInfo* %primitive_info) #0 !dbg !12179 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %draw_info.addr = alloca %struct._DrawInfo*, align 8
  %primitive_info.addr = alloca %struct._PrimitiveInfo*, align 8
  %clone_info = alloca %struct._DrawInfo*, align 8
  %closed_path = alloca i32, align 4
  %status = alloca i32, align 4
  %stroke_polygon = alloca %struct._PrimitiveInfo*, align 8
  %p = alloca %struct._PrimitiveInfo*, align 8
  %q = alloca %struct._PrimitiveInfo*, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !12180, metadata !DIExpression()), !dbg !12181
  store %struct._DrawInfo* %draw_info, %struct._DrawInfo** %draw_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawInfo** %draw_info.addr, metadata !12182, metadata !DIExpression()), !dbg !12183
  store %struct._PrimitiveInfo* %primitive_info, %struct._PrimitiveInfo** %primitive_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PrimitiveInfo** %primitive_info.addr, metadata !12184, metadata !DIExpression()), !dbg !12185
  call void @llvm.dbg.declare(metadata %struct._DrawInfo** %clone_info, metadata !12186, metadata !DIExpression()), !dbg !12187
  call void @llvm.dbg.declare(metadata i32* %closed_path, metadata !12188, metadata !DIExpression()), !dbg !12189
  call void @llvm.dbg.declare(metadata i32* %status, metadata !12190, metadata !DIExpression()), !dbg !12191
  call void @llvm.dbg.declare(metadata %struct._PrimitiveInfo** %stroke_polygon, metadata !12192, metadata !DIExpression()), !dbg !12193
  call void @llvm.dbg.declare(metadata %struct._PrimitiveInfo** %p, metadata !12194, metadata !DIExpression()), !dbg !12195
  call void @llvm.dbg.declare(metadata %struct._PrimitiveInfo** %q, metadata !12196, metadata !DIExpression()), !dbg !12197
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !12198
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !12200
  %1 = load i32, i32* %debug, align 8, !dbg !12200
  %cmp = icmp ne i32 %1, 0, !dbg !12201
  br i1 %cmp, label %if.then, label %if.end, !dbg !12202

if.then:                                          ; preds = %entry
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 128, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4717, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.145, i64 0, i64 0)), !dbg !12203
  br label %if.end, !dbg !12204

if.end:                                           ; preds = %if.then, %entry
  %2 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !12205
  %call1 = call %struct._DrawInfo* @CloneDrawInfo(%struct._ImageInfo* null, %struct._DrawInfo* %2), !dbg !12206
  store %struct._DrawInfo* %call1, %struct._DrawInfo** %clone_info, align 8, !dbg !12207
  %3 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info, align 8, !dbg !12208
  %fill = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %3, i32 0, i32 5, !dbg !12209
  %4 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !12210
  %stroke = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %4, i32 0, i32 6, !dbg !12211
  %5 = bitcast %struct._PixelPacket* %fill to i8*, !dbg !12211
  %6 = bitcast %struct._PixelPacket* %stroke to i8*, !dbg !12211
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 4 %6, i64 8, i1 false), !dbg !12211
  %7 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info, align 8, !dbg !12212
  %fill_pattern = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %7, i32 0, i32 9, !dbg !12214
  %8 = load %struct._Image*, %struct._Image** %fill_pattern, align 8, !dbg !12214
  %cmp2 = icmp ne %struct._Image* %8, null, !dbg !12215
  br i1 %cmp2, label %if.then3, label %if.end7, !dbg !12216

if.then3:                                         ; preds = %if.end
  %9 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info, align 8, !dbg !12217
  %fill_pattern4 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %9, i32 0, i32 9, !dbg !12218
  %10 = load %struct._Image*, %struct._Image** %fill_pattern4, align 8, !dbg !12218
  %call5 = call %struct._Image* @DestroyImage(%struct._Image* %10), !dbg !12219
  %11 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info, align 8, !dbg !12220
  %fill_pattern6 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %11, i32 0, i32 9, !dbg !12221
  store %struct._Image* %call5, %struct._Image** %fill_pattern6, align 8, !dbg !12222
  br label %if.end7, !dbg !12220

if.end7:                                          ; preds = %if.then3, %if.end
  %12 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info, align 8, !dbg !12223
  %stroke_pattern = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %12, i32 0, i32 11, !dbg !12225
  %13 = load %struct._Image*, %struct._Image** %stroke_pattern, align 8, !dbg !12225
  %cmp8 = icmp ne %struct._Image* %13, null, !dbg !12226
  br i1 %cmp8, label %if.then9, label %if.end14, !dbg !12227

if.then9:                                         ; preds = %if.end7
  %14 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info, align 8, !dbg !12228
  %stroke_pattern10 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %14, i32 0, i32 11, !dbg !12229
  %15 = load %struct._Image*, %struct._Image** %stroke_pattern10, align 8, !dbg !12229
  %16 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info, align 8, !dbg !12230
  %stroke_pattern11 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %16, i32 0, i32 11, !dbg !12231
  %17 = load %struct._Image*, %struct._Image** %stroke_pattern11, align 8, !dbg !12231
  %exception = getelementptr inbounds %struct._Image, %struct._Image* %17, i32 0, i32 58, !dbg !12232
  %call12 = call %struct._Image* @CloneImage(%struct._Image* %15, i64 0, i64 0, i32 1, %struct._ExceptionInfo* %exception), !dbg !12233
  %18 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info, align 8, !dbg !12234
  %fill_pattern13 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %18, i32 0, i32 9, !dbg !12235
  store %struct._Image* %call12, %struct._Image** %fill_pattern13, align 8, !dbg !12236
  br label %if.end14, !dbg !12234

if.end14:                                         ; preds = %if.then9, %if.end7
  %19 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info, align 8, !dbg !12237
  %stroke15 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %19, i32 0, i32 6, !dbg !12238
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %stroke15, i32 0, i32 3, !dbg !12239
  store i16 -1, i16* %opacity, align 2, !dbg !12240
  %20 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info, align 8, !dbg !12241
  %stroke_width = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %20, i32 0, i32 7, !dbg !12242
  store double 0.000000e+00, double* %stroke_width, align 8, !dbg !12243
  %21 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info, align 8, !dbg !12244
  %fill_rule = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %21, i32 0, i32 14, !dbg !12245
  store i32 2, i32* %fill_rule, align 8, !dbg !12246
  store i32 1, i32* %status, align 4, !dbg !12247
  %22 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !12248
  store %struct._PrimitiveInfo* %22, %struct._PrimitiveInfo** %p, align 8, !dbg !12250
  br label %for.cond, !dbg !12251

for.cond:                                         ; preds = %for.inc, %if.end14
  %23 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %p, align 8, !dbg !12252
  %primitive = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %23, i32 0, i32 2, !dbg !12254
  %24 = load i32, i32* %primitive, align 8, !dbg !12254
  %cmp16 = icmp ne i32 %24, 0, !dbg !12255
  br i1 %cmp16, label %for.body, label %for.end, !dbg !12256

for.body:                                         ; preds = %for.cond
  %25 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !12257
  %26 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %p, align 8, !dbg !12259
  %call17 = call %struct._PrimitiveInfo* @TraceStrokePolygon(%struct._DrawInfo* %25, %struct._PrimitiveInfo* %26), !dbg !12260
  store %struct._PrimitiveInfo* %call17, %struct._PrimitiveInfo** %stroke_polygon, align 8, !dbg !12261
  %27 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !12262
  %28 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info, align 8, !dbg !12263
  %29 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %stroke_polygon, align 8, !dbg !12264
  %call18 = call i32 @DrawPolygonPrimitive(%struct._Image* %27, %struct._DrawInfo* %28, %struct._PrimitiveInfo* %29), !dbg !12265
  %30 = load i32, i32* %status, align 4, !dbg !12266
  %and = and i32 %30, %call18, !dbg !12266
  store i32 %and, i32* %status, align 4, !dbg !12266
  %31 = load i32, i32* %status, align 4, !dbg !12267
  %cmp19 = icmp eq i32 %31, 0, !dbg !12269
  br i1 %cmp19, label %if.then20, label %if.end21, !dbg !12270

if.then20:                                        ; preds = %for.body
  br label %for.end, !dbg !12271

if.end21:                                         ; preds = %for.body
  %32 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %stroke_polygon, align 8, !dbg !12272
  %33 = bitcast %struct._PrimitiveInfo* %32 to i8*, !dbg !12272
  %call22 = call i8* @RelinquishMagickMemory(i8* %33), !dbg !12273
  %34 = bitcast i8* %call22 to %struct._PrimitiveInfo*, !dbg !12274
  store %struct._PrimitiveInfo* %34, %struct._PrimitiveInfo** %stroke_polygon, align 8, !dbg !12275
  %35 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %p, align 8, !dbg !12276
  %36 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %p, align 8, !dbg !12277
  %coordinates = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %36, i32 0, i32 1, !dbg !12278
  %37 = load i64, i64* %coordinates, align 8, !dbg !12278
  %add.ptr = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %35, i64 %37, !dbg !12279
  %add.ptr23 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %add.ptr, i64 -1, !dbg !12280
  store %struct._PrimitiveInfo* %add.ptr23, %struct._PrimitiveInfo** %q, align 8, !dbg !12281
  %38 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %q, align 8, !dbg !12282
  %point = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %38, i32 0, i32 0, !dbg !12283
  %x = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 0, !dbg !12284
  %39 = load double, double* %x, align 8, !dbg !12284
  %40 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %p, align 8, !dbg !12285
  %point24 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %40, i32 0, i32 0, !dbg !12286
  %x25 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point24, i32 0, i32 0, !dbg !12287
  %41 = load double, double* %x25, align 8, !dbg !12287
  %cmp26 = fcmp oeq double %39, %41, !dbg !12288
  br i1 %cmp26, label %land.rhs, label %land.end, !dbg !12289

land.rhs:                                         ; preds = %if.end21
  %42 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %q, align 8, !dbg !12290
  %point27 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %42, i32 0, i32 0, !dbg !12291
  %y = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point27, i32 0, i32 1, !dbg !12292
  %43 = load double, double* %y, align 8, !dbg !12292
  %44 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %p, align 8, !dbg !12293
  %point28 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %44, i32 0, i32 0, !dbg !12294
  %y29 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point28, i32 0, i32 1, !dbg !12295
  %45 = load double, double* %y29, align 8, !dbg !12295
  %cmp30 = fcmp oeq double %43, %45, !dbg !12296
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end21
  %46 = phi i1 [ false, %if.end21 ], [ %cmp30, %land.rhs ], !dbg !12297
  %47 = zext i1 %46 to i64, !dbg !12298
  %cond = select i1 %46, i32 1, i32 0, !dbg !12298
  store i32 %cond, i32* %closed_path, align 4, !dbg !12299
  %48 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !12300
  %linecap = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %48, i32 0, i32 15, !dbg !12302
  %49 = load i32, i32* %linecap, align 4, !dbg !12302
  %cmp31 = icmp eq i32 %49, 2, !dbg !12303
  br i1 %cmp31, label %land.lhs.true, label %if.end34, !dbg !12304

land.lhs.true:                                    ; preds = %land.end
  %50 = load i32, i32* %closed_path, align 4, !dbg !12305
  %cmp32 = icmp eq i32 %50, 0, !dbg !12306
  br i1 %cmp32, label %if.then33, label %if.end34, !dbg !12307

if.then33:                                        ; preds = %land.lhs.true
  %51 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !12308
  %52 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !12310
  %53 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %p, align 8, !dbg !12311
  call void @DrawRoundLinecap(%struct._Image* %51, %struct._DrawInfo* %52, %struct._PrimitiveInfo* %53), !dbg !12312
  %54 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !12313
  %55 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !12314
  %56 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %q, align 8, !dbg !12315
  call void @DrawRoundLinecap(%struct._Image* %54, %struct._DrawInfo* %55, %struct._PrimitiveInfo* %56), !dbg !12316
  br label %if.end34, !dbg !12317

if.end34:                                         ; preds = %if.then33, %land.lhs.true, %land.end
  br label %for.inc, !dbg !12318

for.inc:                                          ; preds = %if.end34
  %57 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %p, align 8, !dbg !12319
  %coordinates35 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %57, i32 0, i32 1, !dbg !12320
  %58 = load i64, i64* %coordinates35, align 8, !dbg !12320
  %59 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %p, align 8, !dbg !12321
  %add.ptr36 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %59, i64 %58, !dbg !12321
  store %struct._PrimitiveInfo* %add.ptr36, %struct._PrimitiveInfo** %p, align 8, !dbg !12321
  br label %for.cond, !dbg !12322, !llvm.loop !12323

for.end:                                          ; preds = %if.then20, %for.cond
  %60 = load %struct._DrawInfo*, %struct._DrawInfo** %clone_info, align 8, !dbg !12325
  %call37 = call %struct._DrawInfo* @DestroyDrawInfo(%struct._DrawInfo* %60), !dbg !12326
  store %struct._DrawInfo* %call37, %struct._DrawInfo** %clone_info, align 8, !dbg !12327
  %61 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !12328
  %debug38 = getelementptr inbounds %struct._Image, %struct._Image* %61, i32 0, i32 59, !dbg !12330
  %62 = load i32, i32* %debug38, align 8, !dbg !12330
  %cmp39 = icmp ne i32 %62, 0, !dbg !12331
  br i1 %cmp39, label %if.then40, label %if.end42, !dbg !12332

if.then40:                                        ; preds = %for.end
  %call41 = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 128, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 4748, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.146, i64 0, i64 0)), !dbg !12333
  br label %if.end42, !dbg !12334

if.end42:                                         ; preds = %if.then40, %for.end
  %63 = load i32, i32* %status, align 4, !dbg !12335
  %cmp43 = icmp ne i32 %63, 0, !dbg !12336
  %64 = zext i1 %cmp43 to i64, !dbg !12335
  %cond44 = select i1 %cmp43, i32 1, i32 0, !dbg !12335
  ret i32 %cond44, !dbg !12337
}

declare dso_local i8* @ResetMagickMemory(i8*, i32, i64) #3

declare dso_local %struct._ImageInfo* @CloneImageInfo(%struct._ImageInfo*) #3

declare dso_local %struct._ExceptionInfo* @AcquireExceptionInfo() #3

declare dso_local i8* @GetImageOption(%struct._ImageInfo*, i8*) #3

; Function Attrs: noinline nounwind uwtable
define internal double @PerceptibleReciprocal(double %x) #0 !dbg !12338 {
entry:
  %retval = alloca double, align 8
  %x.addr = alloca double, align 8
  %sign = alloca double, align 8
  store double %x, double* %x.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x.addr, metadata !12339, metadata !DIExpression()), !dbg !12340
  call void @llvm.dbg.declare(metadata double* %sign, metadata !12341, metadata !DIExpression()), !dbg !12342
  %0 = load double, double* %x.addr, align 8, !dbg !12343
  %cmp = fcmp olt double %0, 0.000000e+00, !dbg !12344
  %1 = zext i1 %cmp to i64, !dbg !12343
  %cond = select i1 %cmp, double -1.000000e+00, double 1.000000e+00, !dbg !12343
  store double %cond, double* %sign, align 8, !dbg !12345
  %2 = load double, double* %sign, align 8, !dbg !12346
  %3 = load double, double* %x.addr, align 8, !dbg !12348
  %mul = fmul double %2, %3, !dbg !12349
  %cmp1 = fcmp oge double %mul, 1.000000e-15, !dbg !12350
  br i1 %cmp1, label %if.then, label %if.end, !dbg !12351

if.then:                                          ; preds = %entry
  %4 = load double, double* %x.addr, align 8, !dbg !12352
  %div = fdiv double 1.000000e+00, %4, !dbg !12353
  store double %div, double* %retval, align 8, !dbg !12354
  br label %return, !dbg !12354

if.end:                                           ; preds = %entry
  %5 = load double, double* %sign, align 8, !dbg !12355
  %div2 = fdiv double %5, 1.000000e-15, !dbg !12356
  store double %div2, double* %retval, align 8, !dbg !12357
  br label %return, !dbg !12357

return:                                           ; preds = %if.end, %if.then
  %6 = load double, double* %retval, align 8, !dbg !12358
  ret double %6, !dbg !12358
}

; Function Attrs: noinline nounwind uwtable
define internal float @MagickOver_(float %p, float %alpha, float %q, float %beta) #0 !dbg !12359 {
entry:
  %p.addr = alloca float, align 4
  %alpha.addr = alloca float, align 4
  %q.addr = alloca float, align 4
  %beta.addr = alloca float, align 4
  store float %p, float* %p.addr, align 4
  call void @llvm.dbg.declare(metadata float* %p.addr, metadata !12362, metadata !DIExpression()), !dbg !12363
  store float %alpha, float* %alpha.addr, align 4
  call void @llvm.dbg.declare(metadata float* %alpha.addr, metadata !12364, metadata !DIExpression()), !dbg !12365
  store float %q, float* %q.addr, align 4
  call void @llvm.dbg.declare(metadata float* %q.addr, metadata !12366, metadata !DIExpression()), !dbg !12367
  store float %beta, float* %beta.addr, align 4
  call void @llvm.dbg.declare(metadata float* %beta.addr, metadata !12368, metadata !DIExpression()), !dbg !12369
  %0 = load float, float* %alpha.addr, align 4, !dbg !12370
  %conv = fpext float %0 to double, !dbg !12370
  %mul = fmul double 0x3EF0001000100010, %conv, !dbg !12371
  %sub = fsub double 1.000000e+00, %mul, !dbg !12372
  %1 = load float, float* %p.addr, align 4, !dbg !12373
  %conv1 = fpext float %1 to double, !dbg !12373
  %mul2 = fmul double %sub, %conv1, !dbg !12374
  %2 = load float, float* %beta.addr, align 4, !dbg !12375
  %conv3 = fpext float %2 to double, !dbg !12375
  %mul4 = fmul double 0x3EF0001000100010, %conv3, !dbg !12376
  %sub5 = fsub double 1.000000e+00, %mul4, !dbg !12377
  %3 = load float, float* %q.addr, align 4, !dbg !12378
  %conv6 = fpext float %3 to double, !dbg !12378
  %mul7 = fmul double %sub5, %conv6, !dbg !12379
  %mul8 = fmul double %mul7, 0x3EF0001000100010, !dbg !12380
  %4 = load float, float* %alpha.addr, align 4, !dbg !12381
  %conv9 = fpext float %4 to double, !dbg !12381
  %mul10 = fmul double %mul8, %conv9, !dbg !12382
  %add = fadd double %mul2, %mul10, !dbg !12383
  %conv11 = fptrunc double %add to float, !dbg !12384
  ret float %conv11, !dbg !12385
}

declare dso_local double @InterpretLocaleValue(i8*, i8**) #3

; Function Attrs: nounwind
declare dso_local i64 @strtoul(i8*, i8**, i32) #10

; Function Attrs: nounwind
declare dso_local i64 @strtol(i8*, i8**, i32) #10

; Function Attrs: noinline nounwind uwtable
define internal void @MagickPixelCompositePlus(%struct._MagickPixelPacket* %p, float %alpha, %struct._MagickPixelPacket* %q, float %beta, %struct._MagickPixelPacket* %composite) #0 !dbg !12386 {
entry:
  %p.addr = alloca %struct._MagickPixelPacket*, align 8
  %alpha.addr = alloca float, align 4
  %q.addr = alloca %struct._MagickPixelPacket*, align 8
  %beta.addr = alloca float, align 4
  %composite.addr = alloca %struct._MagickPixelPacket*, align 8
  %gamma = alloca double, align 8
  %Da = alloca float, align 4
  %Sa = alloca float, align 4
  store %struct._MagickPixelPacket* %p, %struct._MagickPixelPacket** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %p.addr, metadata !12387, metadata !DIExpression()), !dbg !12388
  store float %alpha, float* %alpha.addr, align 4
  call void @llvm.dbg.declare(metadata float* %alpha.addr, metadata !12389, metadata !DIExpression()), !dbg !12390
  store %struct._MagickPixelPacket* %q, %struct._MagickPixelPacket** %q.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %q.addr, metadata !12391, metadata !DIExpression()), !dbg !12392
  store float %beta, float* %beta.addr, align 4
  call void @llvm.dbg.declare(metadata float* %beta.addr, metadata !12393, metadata !DIExpression()), !dbg !12394
  store %struct._MagickPixelPacket* %composite, %struct._MagickPixelPacket** %composite.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %composite.addr, metadata !12395, metadata !DIExpression()), !dbg !12396
  call void @llvm.dbg.declare(metadata double* %gamma, metadata !12397, metadata !DIExpression()), !dbg !12398
  call void @llvm.dbg.declare(metadata float* %Da, metadata !12399, metadata !DIExpression()), !dbg !12400
  call void @llvm.dbg.declare(metadata float* %Sa, metadata !12401, metadata !DIExpression()), !dbg !12402
  %0 = load float, float* %alpha.addr, align 4, !dbg !12403
  %conv = fpext float %0 to double, !dbg !12403
  %mul = fmul double 0x3EF0001000100010, %conv, !dbg !12404
  %sub = fsub double 1.000000e+00, %mul, !dbg !12405
  %conv1 = fptrunc double %sub to float, !dbg !12406
  store float %conv1, float* %Sa, align 4, !dbg !12407
  %1 = load float, float* %beta.addr, align 4, !dbg !12408
  %conv2 = fpext float %1 to double, !dbg !12408
  %mul3 = fmul double 0x3EF0001000100010, %conv2, !dbg !12409
  %sub4 = fsub double 1.000000e+00, %mul3, !dbg !12410
  %conv5 = fptrunc double %sub4 to float, !dbg !12411
  store float %conv5, float* %Da, align 4, !dbg !12412
  %2 = load float, float* %Sa, align 4, !dbg !12413
  %3 = load float, float* %Da, align 4, !dbg !12414
  %add = fadd float %2, %3, !dbg !12415
  %call = call float @RoundToUnity(float %add), !dbg !12416
  %conv6 = fpext float %call to double, !dbg !12416
  store double %conv6, double* %gamma, align 8, !dbg !12417
  %4 = load double, double* %gamma, align 8, !dbg !12418
  %sub7 = fsub double 1.000000e+00, %4, !dbg !12419
  %mul8 = fmul double 6.553500e+04, %sub7, !dbg !12420
  %conv9 = fptrunc double %mul8 to float, !dbg !12421
  %5 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !12422
  %opacity = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %5, i32 0, i32 8, !dbg !12423
  store float %conv9, float* %opacity, align 4, !dbg !12424
  %6 = load double, double* %gamma, align 8, !dbg !12425
  %call10 = call double @PerceptibleReciprocal(double %6), !dbg !12426
  store double %call10, double* %gamma, align 8, !dbg !12427
  %7 = load double, double* %gamma, align 8, !dbg !12428
  %8 = load float, float* %Sa, align 4, !dbg !12429
  %9 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !12430
  %red = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %9, i32 0, i32 5, !dbg !12431
  %10 = load float, float* %red, align 8, !dbg !12431
  %mul11 = fmul float %8, %10, !dbg !12432
  %11 = load float, float* %Da, align 4, !dbg !12433
  %12 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !12434
  %red12 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %12, i32 0, i32 5, !dbg !12435
  %13 = load float, float* %red12, align 8, !dbg !12435
  %mul13 = fmul float %11, %13, !dbg !12436
  %add14 = fadd float %mul11, %mul13, !dbg !12437
  %conv15 = fpext float %add14 to double, !dbg !12438
  %mul16 = fmul double %7, %conv15, !dbg !12439
  %conv17 = fptrunc double %mul16 to float, !dbg !12428
  %14 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !12440
  %red18 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %14, i32 0, i32 5, !dbg !12441
  store float %conv17, float* %red18, align 8, !dbg !12442
  %15 = load double, double* %gamma, align 8, !dbg !12443
  %16 = load float, float* %Sa, align 4, !dbg !12444
  %17 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !12445
  %green = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %17, i32 0, i32 6, !dbg !12446
  %18 = load float, float* %green, align 4, !dbg !12446
  %mul19 = fmul float %16, %18, !dbg !12447
  %19 = load float, float* %Da, align 4, !dbg !12448
  %20 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !12449
  %green20 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %20, i32 0, i32 6, !dbg !12450
  %21 = load float, float* %green20, align 4, !dbg !12450
  %mul21 = fmul float %19, %21, !dbg !12451
  %add22 = fadd float %mul19, %mul21, !dbg !12452
  %conv23 = fpext float %add22 to double, !dbg !12453
  %mul24 = fmul double %15, %conv23, !dbg !12454
  %conv25 = fptrunc double %mul24 to float, !dbg !12443
  %22 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !12455
  %green26 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %22, i32 0, i32 6, !dbg !12456
  store float %conv25, float* %green26, align 4, !dbg !12457
  %23 = load double, double* %gamma, align 8, !dbg !12458
  %24 = load float, float* %Sa, align 4, !dbg !12459
  %25 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !12460
  %blue = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %25, i32 0, i32 7, !dbg !12461
  %26 = load float, float* %blue, align 8, !dbg !12461
  %mul27 = fmul float %24, %26, !dbg !12462
  %27 = load float, float* %Da, align 4, !dbg !12463
  %28 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !12464
  %blue28 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %28, i32 0, i32 7, !dbg !12465
  %29 = load float, float* %blue28, align 8, !dbg !12465
  %mul29 = fmul float %27, %29, !dbg !12466
  %add30 = fadd float %mul27, %mul29, !dbg !12467
  %conv31 = fpext float %add30 to double, !dbg !12468
  %mul32 = fmul double %23, %conv31, !dbg !12469
  %conv33 = fptrunc double %mul32 to float, !dbg !12458
  %30 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !12470
  %blue34 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %30, i32 0, i32 7, !dbg !12471
  store float %conv33, float* %blue34, align 8, !dbg !12472
  %31 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !12473
  %colorspace = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %31, i32 0, i32 1, !dbg !12475
  %32 = load i32, i32* %colorspace, align 4, !dbg !12475
  %cmp = icmp eq i32 %32, 12, !dbg !12476
  br i1 %cmp, label %if.then, label %if.end, !dbg !12477

if.then:                                          ; preds = %entry
  %33 = load double, double* %gamma, align 8, !dbg !12478
  %34 = load float, float* %Sa, align 4, !dbg !12479
  %35 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %p.addr, align 8, !dbg !12480
  %index = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %35, i32 0, i32 9, !dbg !12481
  %36 = load float, float* %index, align 8, !dbg !12481
  %mul36 = fmul float %34, %36, !dbg !12482
  %37 = load float, float* %Da, align 4, !dbg !12483
  %38 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %q.addr, align 8, !dbg !12484
  %index37 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %38, i32 0, i32 9, !dbg !12485
  %39 = load float, float* %index37, align 8, !dbg !12485
  %mul38 = fmul float %37, %39, !dbg !12486
  %add39 = fadd float %mul36, %mul38, !dbg !12487
  %conv40 = fpext float %add39 to double, !dbg !12488
  %mul41 = fmul double %33, %conv40, !dbg !12489
  %conv42 = fptrunc double %mul41 to float, !dbg !12478
  %40 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %composite.addr, align 8, !dbg !12490
  %index43 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %40, i32 0, i32 9, !dbg !12491
  store float %conv42, float* %index43, align 8, !dbg !12492
  br label %if.end, !dbg !12490

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !12493
}

; Function Attrs: noinline nounwind uwtable
define internal float @RoundToUnity(float %value) #0 !dbg !12494 {
entry:
  %value.addr = alloca float, align 4
  store float %value, float* %value.addr, align 4
  call void @llvm.dbg.declare(metadata float* %value.addr, metadata !12497, metadata !DIExpression()), !dbg !12498
  %0 = load float, float* %value.addr, align 4, !dbg !12499
  %conv = fpext float %0 to double, !dbg !12499
  %cmp = fcmp olt double %conv, 0.000000e+00, !dbg !12500
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !12499

cond.true:                                        ; preds = %entry
  br label %cond.end8, !dbg !12499

cond.false:                                       ; preds = %entry
  %1 = load float, float* %value.addr, align 4, !dbg !12501
  %conv2 = fpext float %1 to double, !dbg !12501
  %cmp3 = fcmp ogt double %conv2, 1.000000e+00, !dbg !12502
  br i1 %cmp3, label %cond.true5, label %cond.false6, !dbg !12503

cond.true5:                                       ; preds = %cond.false
  br label %cond.end, !dbg !12503

cond.false6:                                      ; preds = %cond.false
  %2 = load float, float* %value.addr, align 4, !dbg !12504
  %conv7 = fpext float %2 to double, !dbg !12504
  br label %cond.end, !dbg !12503

cond.end:                                         ; preds = %cond.false6, %cond.true5
  %cond = phi double [ 1.000000e+00, %cond.true5 ], [ %conv7, %cond.false6 ], !dbg !12503
  br label %cond.end8, !dbg !12499

cond.end8:                                        ; preds = %cond.end, %cond.true
  %cond9 = phi double [ 0.000000e+00, %cond.true ], [ %cond, %cond.end ], !dbg !12499
  %conv10 = fptrunc double %cond9 to float, !dbg !12505
  ret float %conv10, !dbg !12506
}

; Function Attrs: noinline nounwind uwtable
define internal float @AbsolutePixelValue(float %x) #0 !dbg !12507 {
entry:
  %x.addr = alloca float, align 4
  store float %x, float* %x.addr, align 4
  call void @llvm.dbg.declare(metadata float* %x.addr, metadata !12508, metadata !DIExpression()), !dbg !12509
  %0 = load float, float* %x.addr, align 4, !dbg !12510
  %cmp = fcmp olt float %0, 0.000000e+00, !dbg !12511
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !12510

cond.true:                                        ; preds = %entry
  %1 = load float, float* %x.addr, align 4, !dbg !12512
  %fneg = fneg float %1, !dbg !12513
  br label %cond.end, !dbg !12510

cond.false:                                       ; preds = %entry
  %2 = load float, float* %x.addr, align 4, !dbg !12514
  br label %cond.end, !dbg !12510

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %fneg, %cond.true ], [ %2, %cond.false ], !dbg !12510
  ret float %cond, !dbg !12515
}

declare dso_local i32 @GetOneVirtualMethodPixel(%struct._Image*, i32, i64, i64, %struct._PixelPacket*, %struct._ExceptionInfo*) #3

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

; Function Attrs: noinline nounwind uwtable
define internal %struct._PolygonInfo** @AcquirePolygonThreadSet(%struct._DrawInfo* %draw_info, %struct._PrimitiveInfo* %primitive_info) #0 !dbg !12516 {
entry:
  %retval = alloca %struct._PolygonInfo**, align 8
  %draw_info.addr = alloca %struct._DrawInfo*, align 8
  %primitive_info.addr = alloca %struct._PrimitiveInfo*, align 8
  %path_info = alloca %struct._PathInfo*, align 8
  %polygon_info = alloca %struct._PolygonInfo**, align 8
  %i = alloca i64, align 8
  %number_threads = alloca i64, align 8
  store %struct._DrawInfo* %draw_info, %struct._DrawInfo** %draw_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawInfo** %draw_info.addr, metadata !12519, metadata !DIExpression()), !dbg !12520
  store %struct._PrimitiveInfo* %primitive_info, %struct._PrimitiveInfo** %primitive_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PrimitiveInfo** %primitive_info.addr, metadata !12521, metadata !DIExpression()), !dbg !12522
  call void @llvm.dbg.declare(metadata %struct._PathInfo** %path_info, metadata !12523, metadata !DIExpression()), !dbg !12525
  call void @llvm.dbg.declare(metadata %struct._PolygonInfo*** %polygon_info, metadata !12526, metadata !DIExpression()), !dbg !12527
  call void @llvm.dbg.declare(metadata i64* %i, metadata !12528, metadata !DIExpression()), !dbg !12529
  call void @llvm.dbg.declare(metadata i64* %number_threads, metadata !12530, metadata !DIExpression()), !dbg !12531
  %call = call i64 @GetMagickResourceLimit(i32 6), !dbg !12532
  store i64 %call, i64* %number_threads, align 8, !dbg !12533
  %0 = load i64, i64* %number_threads, align 8, !dbg !12534
  %call1 = call i8* @AcquireQuantumMemory(i64 %0, i64 8) #14, !dbg !12535
  %1 = bitcast i8* %call1 to %struct._PolygonInfo**, !dbg !12536
  store %struct._PolygonInfo** %1, %struct._PolygonInfo*** %polygon_info, align 8, !dbg !12537
  %2 = load %struct._PolygonInfo**, %struct._PolygonInfo*** %polygon_info, align 8, !dbg !12538
  %cmp = icmp eq %struct._PolygonInfo** %2, null, !dbg !12540
  br i1 %cmp, label %if.then, label %if.end, !dbg !12541

if.then:                                          ; preds = %entry
  store %struct._PolygonInfo** null, %struct._PolygonInfo*** %retval, align 8, !dbg !12542
  br label %return, !dbg !12542

if.end:                                           ; preds = %entry
  %3 = load %struct._PolygonInfo**, %struct._PolygonInfo*** %polygon_info, align 8, !dbg !12543
  %4 = bitcast %struct._PolygonInfo** %3 to i8*, !dbg !12543
  %call2 = call i64 @GetMagickResourceLimit(i32 6), !dbg !12544
  %mul = mul i64 %call2, 8, !dbg !12545
  %call3 = call i8* @ResetMagickMemory(i8* %4, i32 0, i64 %mul), !dbg !12546
  %5 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !12547
  %6 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !12548
  %call4 = call %struct._PathInfo* @ConvertPrimitiveToPath(%struct._DrawInfo* %5, %struct._PrimitiveInfo* %6), !dbg !12549
  store %struct._PathInfo* %call4, %struct._PathInfo** %path_info, align 8, !dbg !12550
  %7 = load %struct._PathInfo*, %struct._PathInfo** %path_info, align 8, !dbg !12551
  %cmp5 = icmp eq %struct._PathInfo* %7, null, !dbg !12553
  br i1 %cmp5, label %if.then6, label %if.end8, !dbg !12554

if.then6:                                         ; preds = %if.end
  %8 = load %struct._PolygonInfo**, %struct._PolygonInfo*** %polygon_info, align 8, !dbg !12555
  %call7 = call %struct._PolygonInfo** @DestroyPolygonThreadSet(%struct._PolygonInfo** %8), !dbg !12556
  store %struct._PolygonInfo** %call7, %struct._PolygonInfo*** %retval, align 8, !dbg !12557
  br label %return, !dbg !12557

if.end8:                                          ; preds = %if.end
  store i64 0, i64* %i, align 8, !dbg !12558
  br label %for.cond, !dbg !12560

for.cond:                                         ; preds = %for.inc, %if.end8
  %9 = load i64, i64* %i, align 8, !dbg !12561
  %10 = load i64, i64* %number_threads, align 8, !dbg !12563
  %cmp9 = icmp slt i64 %9, %10, !dbg !12564
  br i1 %cmp9, label %for.body, label %for.end, !dbg !12565

for.body:                                         ; preds = %for.cond
  %11 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !12566
  %12 = load %struct._PathInfo*, %struct._PathInfo** %path_info, align 8, !dbg !12568
  %call10 = call %struct._PolygonInfo* @ConvertPathToPolygon(%struct._DrawInfo* %11, %struct._PathInfo* %12), !dbg !12569
  %13 = load %struct._PolygonInfo**, %struct._PolygonInfo*** %polygon_info, align 8, !dbg !12570
  %14 = load i64, i64* %i, align 8, !dbg !12571
  %arrayidx = getelementptr inbounds %struct._PolygonInfo*, %struct._PolygonInfo** %13, i64 %14, !dbg !12570
  store %struct._PolygonInfo* %call10, %struct._PolygonInfo** %arrayidx, align 8, !dbg !12572
  %15 = load %struct._PolygonInfo**, %struct._PolygonInfo*** %polygon_info, align 8, !dbg !12573
  %16 = load i64, i64* %i, align 8, !dbg !12575
  %arrayidx11 = getelementptr inbounds %struct._PolygonInfo*, %struct._PolygonInfo** %15, i64 %16, !dbg !12573
  %17 = load %struct._PolygonInfo*, %struct._PolygonInfo** %arrayidx11, align 8, !dbg !12573
  %cmp12 = icmp eq %struct._PolygonInfo* %17, null, !dbg !12576
  br i1 %cmp12, label %if.then13, label %if.end15, !dbg !12577

if.then13:                                        ; preds = %for.body
  %18 = load %struct._PolygonInfo**, %struct._PolygonInfo*** %polygon_info, align 8, !dbg !12578
  %call14 = call %struct._PolygonInfo** @DestroyPolygonThreadSet(%struct._PolygonInfo** %18), !dbg !12579
  store %struct._PolygonInfo** %call14, %struct._PolygonInfo*** %retval, align 8, !dbg !12580
  br label %return, !dbg !12580

if.end15:                                         ; preds = %for.body
  br label %for.inc, !dbg !12581

for.inc:                                          ; preds = %if.end15
  %19 = load i64, i64* %i, align 8, !dbg !12582
  %inc = add nsw i64 %19, 1, !dbg !12582
  store i64 %inc, i64* %i, align 8, !dbg !12582
  br label %for.cond, !dbg !12583, !llvm.loop !12584

for.end:                                          ; preds = %for.cond
  %20 = load %struct._PathInfo*, %struct._PathInfo** %path_info, align 8, !dbg !12586
  %21 = bitcast %struct._PathInfo* %20 to i8*, !dbg !12586
  %call16 = call i8* @RelinquishMagickMemory(i8* %21), !dbg !12587
  %22 = bitcast i8* %call16 to %struct._PathInfo*, !dbg !12588
  store %struct._PathInfo* %22, %struct._PathInfo** %path_info, align 8, !dbg !12589
  %23 = load %struct._PolygonInfo**, %struct._PolygonInfo*** %polygon_info, align 8, !dbg !12590
  store %struct._PolygonInfo** %23, %struct._PolygonInfo*** %retval, align 8, !dbg !12591
  br label %return, !dbg !12591

return:                                           ; preds = %for.end, %if.then13, %if.then6, %if.then
  %24 = load %struct._PolygonInfo**, %struct._PolygonInfo*** %retval, align 8, !dbg !12592
  ret %struct._PolygonInfo** %24, !dbg !12592
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @GetStrokeColor(%struct._DrawInfo* %draw_info, i64 %x, i64 %y, %struct._PixelPacket* %pixel) #0 !dbg !12593 {
entry:
  %retval = alloca i32, align 4
  %draw_info.addr = alloca %struct._DrawInfo*, align 8
  %x.addr = alloca i64, align 8
  %y.addr = alloca i64, align 8
  %pixel.addr = alloca %struct._PixelPacket*, align 8
  %pattern = alloca %struct._Image*, align 8
  %status = alloca i32, align 4
  store %struct._DrawInfo* %draw_info, %struct._DrawInfo** %draw_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawInfo** %draw_info.addr, metadata !12594, metadata !DIExpression()), !dbg !12595
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !12596, metadata !DIExpression()), !dbg !12597
  store i64 %y, i64* %y.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %y.addr, metadata !12598, metadata !DIExpression()), !dbg !12599
  store %struct._PixelPacket* %pixel, %struct._PixelPacket** %pixel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %pixel.addr, metadata !12600, metadata !DIExpression()), !dbg !12601
  call void @llvm.dbg.declare(metadata %struct._Image** %pattern, metadata !12602, metadata !DIExpression()), !dbg !12603
  call void @llvm.dbg.declare(metadata i32* %status, metadata !12604, metadata !DIExpression()), !dbg !12605
  %0 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !12606
  %stroke_pattern = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %0, i32 0, i32 11, !dbg !12607
  %1 = load %struct._Image*, %struct._Image** %stroke_pattern, align 8, !dbg !12607
  store %struct._Image* %1, %struct._Image** %pattern, align 8, !dbg !12608
  %2 = load %struct._Image*, %struct._Image** %pattern, align 8, !dbg !12609
  %cmp = icmp eq %struct._Image* %2, null, !dbg !12611
  br i1 %cmp, label %if.then, label %if.end, !dbg !12612

if.then:                                          ; preds = %entry
  %3 = load %struct._PixelPacket*, %struct._PixelPacket** %pixel.addr, align 8, !dbg !12613
  %4 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !12615
  %stroke = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %4, i32 0, i32 6, !dbg !12616
  %5 = bitcast %struct._PixelPacket* %3 to i8*, !dbg !12616
  %6 = bitcast %struct._PixelPacket* %stroke to i8*, !dbg !12616
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %5, i8* align 4 %6, i64 8, i1 false), !dbg !12616
  store i32 1, i32* %retval, align 4, !dbg !12617
  br label %return, !dbg !12617

if.end:                                           ; preds = %entry
  %7 = load %struct._Image*, %struct._Image** %pattern, align 8, !dbg !12618
  %8 = load i64, i64* %x.addr, align 8, !dbg !12619
  %9 = load %struct._Image*, %struct._Image** %pattern, align 8, !dbg !12620
  %tile_offset = getelementptr inbounds %struct._Image, %struct._Image* %9, i32 0, i32 74, !dbg !12621
  %x1 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %tile_offset, i32 0, i32 2, !dbg !12622
  %10 = load i64, i64* %x1, align 8, !dbg !12622
  %add = add nsw i64 %8, %10, !dbg !12623
  %11 = load i64, i64* %y.addr, align 8, !dbg !12624
  %12 = load %struct._Image*, %struct._Image** %pattern, align 8, !dbg !12625
  %tile_offset2 = getelementptr inbounds %struct._Image, %struct._Image* %12, i32 0, i32 74, !dbg !12626
  %y3 = getelementptr inbounds %struct._RectangleInfo, %struct._RectangleInfo* %tile_offset2, i32 0, i32 3, !dbg !12627
  %13 = load i64, i64* %y3, align 8, !dbg !12627
  %add4 = add nsw i64 %11, %13, !dbg !12628
  %14 = load %struct._PixelPacket*, %struct._PixelPacket** %pixel.addr, align 8, !dbg !12629
  %15 = load %struct._Image*, %struct._Image** %pattern, align 8, !dbg !12630
  %exception = getelementptr inbounds %struct._Image, %struct._Image* %15, i32 0, i32 58, !dbg !12631
  %call = call i32 @GetOneVirtualMethodPixel(%struct._Image* %7, i32 7, i64 %add, i64 %add4, %struct._PixelPacket* %14, %struct._ExceptionInfo* %exception), !dbg !12632
  store i32 %call, i32* %status, align 4, !dbg !12633
  %16 = load %struct._Image*, %struct._Image** %pattern, align 8, !dbg !12634
  %matte = getelementptr inbounds %struct._Image, %struct._Image* %16, i32 0, i32 6, !dbg !12636
  %17 = load i32, i32* %matte, align 8, !dbg !12636
  %cmp5 = icmp eq i32 %17, 0, !dbg !12637
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !12638

if.then6:                                         ; preds = %if.end
  %18 = load %struct._PixelPacket*, %struct._PixelPacket** %pixel.addr, align 8, !dbg !12639
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %18, i32 0, i32 3, !dbg !12640
  store i16 0, i16* %opacity, align 2, !dbg !12641
  br label %if.end7, !dbg !12639

if.end7:                                          ; preds = %if.then6, %if.end
  %19 = load i32, i32* %status, align 4, !dbg !12642
  store i32 %19, i32* %retval, align 4, !dbg !12643
  br label %return, !dbg !12643

return:                                           ; preds = %if.end7, %if.then
  %20 = load i32, i32* %retval, align 4, !dbg !12644
  ret i32 %20, !dbg !12644
}

; Function Attrs: noinline nounwind uwtable
define internal %struct._PolygonInfo** @DestroyPolygonThreadSet(%struct._PolygonInfo** %polygon_info) #0 !dbg !12645 {
entry:
  %polygon_info.addr = alloca %struct._PolygonInfo**, align 8
  %i = alloca i64, align 8
  store %struct._PolygonInfo** %polygon_info, %struct._PolygonInfo*** %polygon_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PolygonInfo*** %polygon_info.addr, metadata !12648, metadata !DIExpression()), !dbg !12649
  call void @llvm.dbg.declare(metadata i64* %i, metadata !12650, metadata !DIExpression()), !dbg !12651
  store i64 0, i64* %i, align 8, !dbg !12652
  br label %for.cond, !dbg !12654

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i64, i64* %i, align 8, !dbg !12655
  %call = call i64 @GetMagickResourceLimit(i32 6), !dbg !12657
  %cmp = icmp slt i64 %0, %call, !dbg !12658
  br i1 %cmp, label %for.body, label %for.end, !dbg !12659

for.body:                                         ; preds = %for.cond
  %1 = load %struct._PolygonInfo**, %struct._PolygonInfo*** %polygon_info.addr, align 8, !dbg !12660
  %2 = load i64, i64* %i, align 8, !dbg !12662
  %arrayidx = getelementptr inbounds %struct._PolygonInfo*, %struct._PolygonInfo** %1, i64 %2, !dbg !12660
  %3 = load %struct._PolygonInfo*, %struct._PolygonInfo** %arrayidx, align 8, !dbg !12660
  %cmp1 = icmp ne %struct._PolygonInfo* %3, null, !dbg !12663
  br i1 %cmp1, label %if.then, label %if.end, !dbg !12664

if.then:                                          ; preds = %for.body
  %4 = load %struct._PolygonInfo**, %struct._PolygonInfo*** %polygon_info.addr, align 8, !dbg !12665
  %5 = load i64, i64* %i, align 8, !dbg !12666
  %arrayidx2 = getelementptr inbounds %struct._PolygonInfo*, %struct._PolygonInfo** %4, i64 %5, !dbg !12665
  %6 = load %struct._PolygonInfo*, %struct._PolygonInfo** %arrayidx2, align 8, !dbg !12665
  %call3 = call %struct._PolygonInfo* @DestroyPolygonInfo(%struct._PolygonInfo* %6), !dbg !12667
  %7 = load %struct._PolygonInfo**, %struct._PolygonInfo*** %polygon_info.addr, align 8, !dbg !12668
  %8 = load i64, i64* %i, align 8, !dbg !12669
  %arrayidx4 = getelementptr inbounds %struct._PolygonInfo*, %struct._PolygonInfo** %7, i64 %8, !dbg !12668
  store %struct._PolygonInfo* %call3, %struct._PolygonInfo** %arrayidx4, align 8, !dbg !12670
  br label %if.end, !dbg !12668

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !12671

for.inc:                                          ; preds = %if.end
  %9 = load i64, i64* %i, align 8, !dbg !12672
  %inc = add nsw i64 %9, 1, !dbg !12672
  store i64 %inc, i64* %i, align 8, !dbg !12672
  br label %for.cond, !dbg !12673, !llvm.loop !12674

for.end:                                          ; preds = %for.cond
  %10 = load %struct._PolygonInfo**, %struct._PolygonInfo*** %polygon_info.addr, align 8, !dbg !12676
  %11 = bitcast %struct._PolygonInfo** %10 to i8*, !dbg !12676
  %call5 = call i8* @RelinquishMagickMemory(i8* %11), !dbg !12677
  %12 = bitcast i8* %call5 to %struct._PolygonInfo**, !dbg !12678
  store %struct._PolygonInfo** %12, %struct._PolygonInfo*** %polygon_info.addr, align 8, !dbg !12679
  %13 = load %struct._PolygonInfo**, %struct._PolygonInfo*** %polygon_info.addr, align 8, !dbg !12680
  ret %struct._PolygonInfo** %13, !dbg !12681
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @GetOpenMPThreadId() #0 !dbg !12682 {
entry:
  ret i32 0, !dbg !12686
}

; Function Attrs: noinline nounwind uwtable
define internal double @GetOpacityPixel(%struct._PolygonInfo* %polygon_info, double %mid, i32 %fill, i32 %fill_rule, i64 %x, i64 %y, double* %stroke_opacity) #0 !dbg !12687 {
entry:
  %retval = alloca double, align 8
  %polygon_info.addr = alloca %struct._PolygonInfo*, align 8
  %mid.addr = alloca double, align 8
  %fill.addr = alloca i32, align 4
  %fill_rule.addr = alloca i32, align 4
  %x.addr = alloca i64, align 8
  %y.addr = alloca i64, align 8
  %stroke_opacity.addr = alloca double*, align 8
  %alpha = alloca double, align 8
  %beta = alloca double, align 8
  %distance = alloca double, align 8
  %subpath_opacity = alloca double, align 8
  %delta = alloca %struct._PointInfo, align 8
  %p = alloca %struct._EdgeInfo*, align 8
  %q = alloca %struct._PointInfo*, align 8
  %i = alloca i64, align 8
  %j = alloca i64, align 8
  %winding_number = alloca i64, align 8
  store %struct._PolygonInfo* %polygon_info, %struct._PolygonInfo** %polygon_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PolygonInfo** %polygon_info.addr, metadata !12692, metadata !DIExpression()), !dbg !12693
  store double %mid, double* %mid.addr, align 8
  call void @llvm.dbg.declare(metadata double* %mid.addr, metadata !12694, metadata !DIExpression()), !dbg !12695
  store i32 %fill, i32* %fill.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fill.addr, metadata !12696, metadata !DIExpression()), !dbg !12697
  store i32 %fill_rule, i32* %fill_rule.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %fill_rule.addr, metadata !12698, metadata !DIExpression()), !dbg !12699
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !12700, metadata !DIExpression()), !dbg !12701
  store i64 %y, i64* %y.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %y.addr, metadata !12702, metadata !DIExpression()), !dbg !12703
  store double* %stroke_opacity, double** %stroke_opacity.addr, align 8
  call void @llvm.dbg.declare(metadata double** %stroke_opacity.addr, metadata !12704, metadata !DIExpression()), !dbg !12705
  call void @llvm.dbg.declare(metadata double* %alpha, metadata !12706, metadata !DIExpression()), !dbg !12707
  call void @llvm.dbg.declare(metadata double* %beta, metadata !12708, metadata !DIExpression()), !dbg !12709
  call void @llvm.dbg.declare(metadata double* %distance, metadata !12710, metadata !DIExpression()), !dbg !12711
  call void @llvm.dbg.declare(metadata double* %subpath_opacity, metadata !12712, metadata !DIExpression()), !dbg !12713
  call void @llvm.dbg.declare(metadata %struct._PointInfo* %delta, metadata !12714, metadata !DIExpression()), !dbg !12715
  call void @llvm.dbg.declare(metadata %struct._EdgeInfo** %p, metadata !12716, metadata !DIExpression()), !dbg !12717
  call void @llvm.dbg.declare(metadata %struct._PointInfo** %q, metadata !12718, metadata !DIExpression()), !dbg !12720
  call void @llvm.dbg.declare(metadata i64* %i, metadata !12721, metadata !DIExpression()), !dbg !12722
  call void @llvm.dbg.declare(metadata i64* %j, metadata !12723, metadata !DIExpression()), !dbg !12724
  call void @llvm.dbg.declare(metadata i64* %winding_number, metadata !12725, metadata !DIExpression()), !dbg !12726
  %0 = load double*, double** %stroke_opacity.addr, align 8, !dbg !12727
  store double 0.000000e+00, double* %0, align 8, !dbg !12728
  store double 0.000000e+00, double* %subpath_opacity, align 8, !dbg !12729
  %1 = load %struct._PolygonInfo*, %struct._PolygonInfo** %polygon_info.addr, align 8, !dbg !12730
  %edges = getelementptr inbounds %struct._PolygonInfo, %struct._PolygonInfo* %1, i32 0, i32 0, !dbg !12731
  %2 = load %struct._EdgeInfo*, %struct._EdgeInfo** %edges, align 8, !dbg !12731
  store %struct._EdgeInfo* %2, %struct._EdgeInfo** %p, align 8, !dbg !12732
  store i64 0, i64* %j, align 8, !dbg !12733
  br label %for.cond, !dbg !12735

for.cond:                                         ; preds = %for.inc216, %entry
  %3 = load i64, i64* %j, align 8, !dbg !12736
  %4 = load %struct._PolygonInfo*, %struct._PolygonInfo** %polygon_info.addr, align 8, !dbg !12738
  %number_edges = getelementptr inbounds %struct._PolygonInfo, %struct._PolygonInfo* %4, i32 0, i32 1, !dbg !12739
  %5 = load i64, i64* %number_edges, align 8, !dbg !12739
  %cmp = icmp slt i64 %3, %5, !dbg !12740
  br i1 %cmp, label %for.body, label %for.end218, !dbg !12741

for.body:                                         ; preds = %for.cond
  %6 = load i64, i64* %y.addr, align 8, !dbg !12742
  %conv = sitofp i64 %6 to double, !dbg !12745
  %7 = load %struct._EdgeInfo*, %struct._EdgeInfo** %p, align 8, !dbg !12746
  %bounds = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %7, i32 0, i32 0, !dbg !12747
  %y1 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds, i32 0, i32 1, !dbg !12748
  %8 = load double, double* %y1, align 8, !dbg !12748
  %9 = load double, double* %mid.addr, align 8, !dbg !12749
  %sub = fsub double %8, %9, !dbg !12750
  %sub1 = fsub double %sub, 5.000000e-01, !dbg !12751
  %cmp2 = fcmp ole double %conv, %sub1, !dbg !12752
  br i1 %cmp2, label %if.then, label %if.end, !dbg !12753

if.then:                                          ; preds = %for.body
  br label %for.end218, !dbg !12754

if.end:                                           ; preds = %for.body
  %10 = load i64, i64* %y.addr, align 8, !dbg !12755
  %conv4 = sitofp i64 %10 to double, !dbg !12757
  %11 = load %struct._EdgeInfo*, %struct._EdgeInfo** %p, align 8, !dbg !12758
  %bounds5 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %11, i32 0, i32 0, !dbg !12759
  %y2 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds5, i32 0, i32 3, !dbg !12760
  %12 = load double, double* %y2, align 8, !dbg !12760
  %13 = load double, double* %mid.addr, align 8, !dbg !12761
  %add = fadd double %12, %13, !dbg !12762
  %add6 = fadd double %add, 5.000000e-01, !dbg !12763
  %cmp7 = fcmp ogt double %conv4, %add6, !dbg !12764
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !12765

if.then9:                                         ; preds = %if.end
  %14 = load %struct._PolygonInfo*, %struct._PolygonInfo** %polygon_info.addr, align 8, !dbg !12766
  %15 = load i64, i64* %j, align 8, !dbg !12768
  %call = call i64 @DestroyEdge(%struct._PolygonInfo* %14, i64 %15), !dbg !12769
  br label %for.inc216, !dbg !12770

if.end10:                                         ; preds = %if.end
  %16 = load i64, i64* %x.addr, align 8, !dbg !12771
  %conv11 = sitofp i64 %16 to double, !dbg !12773
  %17 = load %struct._EdgeInfo*, %struct._EdgeInfo** %p, align 8, !dbg !12774
  %bounds12 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %17, i32 0, i32 0, !dbg !12775
  %x1 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds12, i32 0, i32 0, !dbg !12776
  %18 = load double, double* %x1, align 8, !dbg !12776
  %19 = load double, double* %mid.addr, align 8, !dbg !12777
  %sub13 = fsub double %18, %19, !dbg !12778
  %sub14 = fsub double %sub13, 5.000000e-01, !dbg !12779
  %cmp15 = fcmp ole double %conv11, %sub14, !dbg !12780
  br i1 %cmp15, label %if.then23, label %lor.lhs.false, !dbg !12781

lor.lhs.false:                                    ; preds = %if.end10
  %20 = load i64, i64* %x.addr, align 8, !dbg !12782
  %conv17 = sitofp i64 %20 to double, !dbg !12783
  %21 = load %struct._EdgeInfo*, %struct._EdgeInfo** %p, align 8, !dbg !12784
  %bounds18 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %21, i32 0, i32 0, !dbg !12785
  %x2 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds18, i32 0, i32 2, !dbg !12786
  %22 = load double, double* %x2, align 8, !dbg !12786
  %23 = load double, double* %mid.addr, align 8, !dbg !12787
  %add19 = fadd double %22, %23, !dbg !12788
  %add20 = fadd double %add19, 5.000000e-01, !dbg !12789
  %cmp21 = fcmp ogt double %conv17, %add20, !dbg !12790
  br i1 %cmp21, label %if.then23, label %if.end24, !dbg !12791

if.then23:                                        ; preds = %lor.lhs.false, %if.end10
  br label %for.inc216, !dbg !12792

if.end24:                                         ; preds = %lor.lhs.false
  %24 = load %struct._EdgeInfo*, %struct._EdgeInfo** %p, align 8, !dbg !12793
  %highwater = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %24, i32 0, i32 6, !dbg !12794
  %25 = load i64, i64* %highwater, align 8, !dbg !12794
  %conv25 = uitofp i64 %25 to double, !dbg !12795
  %call26 = call double @MagickMax(double %conv25, double 1.000000e+00), !dbg !12796
  %conv27 = fptosi double %call26 to i64, !dbg !12797
  store i64 %conv27, i64* %i, align 8, !dbg !12798
  br label %for.cond28, !dbg !12799

for.cond28:                                       ; preds = %for.inc, %if.end24
  %26 = load i64, i64* %i, align 8, !dbg !12800
  %27 = load %struct._EdgeInfo*, %struct._EdgeInfo** %p, align 8, !dbg !12803
  %number_points = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %27, i32 0, i32 3, !dbg !12804
  %28 = load i64, i64* %number_points, align 8, !dbg !12804
  %cmp29 = icmp slt i64 %26, %28, !dbg !12805
  br i1 %cmp29, label %for.body31, label %for.end, !dbg !12806

for.body31:                                       ; preds = %for.cond28
  %29 = load i64, i64* %y.addr, align 8, !dbg !12807
  %conv32 = sitofp i64 %29 to double, !dbg !12810
  %30 = load %struct._EdgeInfo*, %struct._EdgeInfo** %p, align 8, !dbg !12811
  %points = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %30, i32 0, i32 2, !dbg !12812
  %31 = load %struct._PointInfo*, %struct._PointInfo** %points, align 8, !dbg !12812
  %32 = load i64, i64* %i, align 8, !dbg !12813
  %sub33 = sub nsw i64 %32, 1, !dbg !12814
  %arrayidx = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %31, i64 %sub33, !dbg !12811
  %y34 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx, i32 0, i32 1, !dbg !12815
  %33 = load double, double* %y34, align 8, !dbg !12815
  %34 = load double, double* %mid.addr, align 8, !dbg !12816
  %sub35 = fsub double %33, %34, !dbg !12817
  %sub36 = fsub double %sub35, 5.000000e-01, !dbg !12818
  %cmp37 = fcmp ole double %conv32, %sub36, !dbg !12819
  br i1 %cmp37, label %if.then39, label %if.end40, !dbg !12820

if.then39:                                        ; preds = %for.body31
  br label %for.end, !dbg !12821

if.end40:                                         ; preds = %for.body31
  %35 = load i64, i64* %y.addr, align 8, !dbg !12822
  %conv41 = sitofp i64 %35 to double, !dbg !12824
  %36 = load %struct._EdgeInfo*, %struct._EdgeInfo** %p, align 8, !dbg !12825
  %points42 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %36, i32 0, i32 2, !dbg !12826
  %37 = load %struct._PointInfo*, %struct._PointInfo** %points42, align 8, !dbg !12826
  %38 = load i64, i64* %i, align 8, !dbg !12827
  %arrayidx43 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %37, i64 %38, !dbg !12825
  %y44 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx43, i32 0, i32 1, !dbg !12828
  %39 = load double, double* %y44, align 8, !dbg !12828
  %40 = load double, double* %mid.addr, align 8, !dbg !12829
  %add45 = fadd double %39, %40, !dbg !12830
  %add46 = fadd double %add45, 5.000000e-01, !dbg !12831
  %cmp47 = fcmp ogt double %conv41, %add46, !dbg !12832
  br i1 %cmp47, label %if.then49, label %if.end50, !dbg !12833

if.then49:                                        ; preds = %if.end40
  br label %for.inc, !dbg !12834

if.end50:                                         ; preds = %if.end40
  %41 = load %struct._EdgeInfo*, %struct._EdgeInfo** %p, align 8, !dbg !12835
  %scanline = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %41, i32 0, i32 1, !dbg !12837
  %42 = load double, double* %scanline, align 8, !dbg !12837
  %43 = load i64, i64* %y.addr, align 8, !dbg !12838
  %conv51 = sitofp i64 %43 to double, !dbg !12839
  %cmp52 = fcmp une double %42, %conv51, !dbg !12840
  br i1 %cmp52, label %if.then54, label %if.end58, !dbg !12841

if.then54:                                        ; preds = %if.end50
  %44 = load i64, i64* %y.addr, align 8, !dbg !12842
  %conv55 = sitofp i64 %44 to double, !dbg !12844
  %45 = load %struct._EdgeInfo*, %struct._EdgeInfo** %p, align 8, !dbg !12845
  %scanline56 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %45, i32 0, i32 1, !dbg !12846
  store double %conv55, double* %scanline56, align 8, !dbg !12847
  %46 = load i64, i64* %i, align 8, !dbg !12848
  %47 = load %struct._EdgeInfo*, %struct._EdgeInfo** %p, align 8, !dbg !12849
  %highwater57 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %47, i32 0, i32 6, !dbg !12850
  store i64 %46, i64* %highwater57, align 8, !dbg !12851
  br label %if.end58, !dbg !12852

if.end58:                                         ; preds = %if.then54, %if.end50
  %48 = load %struct._EdgeInfo*, %struct._EdgeInfo** %p, align 8, !dbg !12853
  %points59 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %48, i32 0, i32 2, !dbg !12854
  %49 = load %struct._PointInfo*, %struct._PointInfo** %points59, align 8, !dbg !12854
  %50 = load i64, i64* %i, align 8, !dbg !12855
  %add.ptr = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %49, i64 %50, !dbg !12856
  %add.ptr60 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %add.ptr, i64 -1, !dbg !12857
  store %struct._PointInfo* %add.ptr60, %struct._PointInfo** %q, align 8, !dbg !12858
  %51 = load %struct._PointInfo*, %struct._PointInfo** %q, align 8, !dbg !12859
  %add.ptr61 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %51, i64 1, !dbg !12860
  %x62 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %add.ptr61, i32 0, i32 0, !dbg !12861
  %52 = load double, double* %x62, align 8, !dbg !12861
  %53 = load %struct._PointInfo*, %struct._PointInfo** %q, align 8, !dbg !12862
  %x63 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %53, i32 0, i32 0, !dbg !12863
  %54 = load double, double* %x63, align 8, !dbg !12863
  %sub64 = fsub double %52, %54, !dbg !12864
  %x65 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta, i32 0, i32 0, !dbg !12865
  store double %sub64, double* %x65, align 8, !dbg !12866
  %55 = load %struct._PointInfo*, %struct._PointInfo** %q, align 8, !dbg !12867
  %add.ptr66 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %55, i64 1, !dbg !12868
  %y67 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %add.ptr66, i32 0, i32 1, !dbg !12869
  %56 = load double, double* %y67, align 8, !dbg !12869
  %57 = load %struct._PointInfo*, %struct._PointInfo** %q, align 8, !dbg !12870
  %y68 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %57, i32 0, i32 1, !dbg !12871
  %58 = load double, double* %y68, align 8, !dbg !12871
  %sub69 = fsub double %56, %58, !dbg !12872
  %y70 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta, i32 0, i32 1, !dbg !12873
  store double %sub69, double* %y70, align 8, !dbg !12874
  %x71 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta, i32 0, i32 0, !dbg !12875
  %59 = load double, double* %x71, align 8, !dbg !12875
  %60 = load i64, i64* %x.addr, align 8, !dbg !12876
  %conv72 = sitofp i64 %60 to double, !dbg !12876
  %61 = load %struct._PointInfo*, %struct._PointInfo** %q, align 8, !dbg !12877
  %x73 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %61, i32 0, i32 0, !dbg !12878
  %62 = load double, double* %x73, align 8, !dbg !12878
  %sub74 = fsub double %conv72, %62, !dbg !12879
  %mul = fmul double %59, %sub74, !dbg !12880
  %y75 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta, i32 0, i32 1, !dbg !12881
  %63 = load double, double* %y75, align 8, !dbg !12881
  %64 = load i64, i64* %y.addr, align 8, !dbg !12882
  %conv76 = sitofp i64 %64 to double, !dbg !12882
  %65 = load %struct._PointInfo*, %struct._PointInfo** %q, align 8, !dbg !12883
  %y77 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %65, i32 0, i32 1, !dbg !12884
  %66 = load double, double* %y77, align 8, !dbg !12884
  %sub78 = fsub double %conv76, %66, !dbg !12885
  %mul79 = fmul double %63, %sub78, !dbg !12886
  %add80 = fadd double %mul, %mul79, !dbg !12887
  store double %add80, double* %beta, align 8, !dbg !12888
  %67 = load double, double* %beta, align 8, !dbg !12889
  %cmp81 = fcmp olt double %67, 0.000000e+00, !dbg !12891
  br i1 %cmp81, label %if.then83, label %if.else, !dbg !12892

if.then83:                                        ; preds = %if.end58
  %68 = load i64, i64* %x.addr, align 8, !dbg !12893
  %conv84 = sitofp i64 %68 to double, !dbg !12895
  %69 = load %struct._PointInfo*, %struct._PointInfo** %q, align 8, !dbg !12896
  %x85 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %69, i32 0, i32 0, !dbg !12897
  %70 = load double, double* %x85, align 8, !dbg !12897
  %sub86 = fsub double %conv84, %70, !dbg !12898
  %x87 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta, i32 0, i32 0, !dbg !12899
  store double %sub86, double* %x87, align 8, !dbg !12900
  %71 = load i64, i64* %y.addr, align 8, !dbg !12901
  %conv88 = sitofp i64 %71 to double, !dbg !12902
  %72 = load %struct._PointInfo*, %struct._PointInfo** %q, align 8, !dbg !12903
  %y89 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %72, i32 0, i32 1, !dbg !12904
  %73 = load double, double* %y89, align 8, !dbg !12904
  %sub90 = fsub double %conv88, %73, !dbg !12905
  %y91 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta, i32 0, i32 1, !dbg !12906
  store double %sub90, double* %y91, align 8, !dbg !12907
  %x92 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta, i32 0, i32 0, !dbg !12908
  %74 = load double, double* %x92, align 8, !dbg !12908
  %x93 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta, i32 0, i32 0, !dbg !12909
  %75 = load double, double* %x93, align 8, !dbg !12909
  %mul94 = fmul double %74, %75, !dbg !12910
  %y95 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta, i32 0, i32 1, !dbg !12911
  %76 = load double, double* %y95, align 8, !dbg !12911
  %y96 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta, i32 0, i32 1, !dbg !12912
  %77 = load double, double* %y96, align 8, !dbg !12912
  %mul97 = fmul double %76, %77, !dbg !12913
  %add98 = fadd double %mul94, %mul97, !dbg !12914
  store double %add98, double* %distance, align 8, !dbg !12915
  br label %if.end141, !dbg !12916

if.else:                                          ; preds = %if.end58
  %x99 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta, i32 0, i32 0, !dbg !12917
  %78 = load double, double* %x99, align 8, !dbg !12917
  %x100 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta, i32 0, i32 0, !dbg !12919
  %79 = load double, double* %x100, align 8, !dbg !12919
  %mul101 = fmul double %78, %79, !dbg !12920
  %y102 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta, i32 0, i32 1, !dbg !12921
  %80 = load double, double* %y102, align 8, !dbg !12921
  %y103 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta, i32 0, i32 1, !dbg !12922
  %81 = load double, double* %y103, align 8, !dbg !12922
  %mul104 = fmul double %80, %81, !dbg !12923
  %add105 = fadd double %mul101, %mul104, !dbg !12924
  store double %add105, double* %alpha, align 8, !dbg !12925
  %82 = load double, double* %beta, align 8, !dbg !12926
  %83 = load double, double* %alpha, align 8, !dbg !12928
  %cmp106 = fcmp ogt double %82, %83, !dbg !12929
  br i1 %cmp106, label %if.then108, label %if.else126, !dbg !12930

if.then108:                                       ; preds = %if.else
  %84 = load i64, i64* %x.addr, align 8, !dbg !12931
  %conv109 = sitofp i64 %84 to double, !dbg !12933
  %85 = load %struct._PointInfo*, %struct._PointInfo** %q, align 8, !dbg !12934
  %add.ptr110 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %85, i64 1, !dbg !12935
  %x111 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %add.ptr110, i32 0, i32 0, !dbg !12936
  %86 = load double, double* %x111, align 8, !dbg !12936
  %sub112 = fsub double %conv109, %86, !dbg !12937
  %x113 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta, i32 0, i32 0, !dbg !12938
  store double %sub112, double* %x113, align 8, !dbg !12939
  %87 = load i64, i64* %y.addr, align 8, !dbg !12940
  %conv114 = sitofp i64 %87 to double, !dbg !12941
  %88 = load %struct._PointInfo*, %struct._PointInfo** %q, align 8, !dbg !12942
  %add.ptr115 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %88, i64 1, !dbg !12943
  %y116 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %add.ptr115, i32 0, i32 1, !dbg !12944
  %89 = load double, double* %y116, align 8, !dbg !12944
  %sub117 = fsub double %conv114, %89, !dbg !12945
  %y118 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta, i32 0, i32 1, !dbg !12946
  store double %sub117, double* %y118, align 8, !dbg !12947
  %x119 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta, i32 0, i32 0, !dbg !12948
  %90 = load double, double* %x119, align 8, !dbg !12948
  %x120 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta, i32 0, i32 0, !dbg !12949
  %91 = load double, double* %x120, align 8, !dbg !12949
  %mul121 = fmul double %90, %91, !dbg !12950
  %y122 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta, i32 0, i32 1, !dbg !12951
  %92 = load double, double* %y122, align 8, !dbg !12951
  %y123 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta, i32 0, i32 1, !dbg !12952
  %93 = load double, double* %y123, align 8, !dbg !12952
  %mul124 = fmul double %92, %93, !dbg !12953
  %add125 = fadd double %mul121, %mul124, !dbg !12954
  store double %add125, double* %distance, align 8, !dbg !12955
  br label %if.end140, !dbg !12956

if.else126:                                       ; preds = %if.else
  %94 = load double, double* %alpha, align 8, !dbg !12957
  %div = fdiv double 1.000000e+00, %94, !dbg !12959
  store double %div, double* %alpha, align 8, !dbg !12960
  %x127 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta, i32 0, i32 0, !dbg !12961
  %95 = load double, double* %x127, align 8, !dbg !12961
  %96 = load i64, i64* %y.addr, align 8, !dbg !12962
  %conv128 = sitofp i64 %96 to double, !dbg !12962
  %97 = load %struct._PointInfo*, %struct._PointInfo** %q, align 8, !dbg !12963
  %y129 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %97, i32 0, i32 1, !dbg !12964
  %98 = load double, double* %y129, align 8, !dbg !12964
  %sub130 = fsub double %conv128, %98, !dbg !12965
  %mul131 = fmul double %95, %sub130, !dbg !12966
  %y132 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %delta, i32 0, i32 1, !dbg !12967
  %99 = load double, double* %y132, align 8, !dbg !12967
  %100 = load i64, i64* %x.addr, align 8, !dbg !12968
  %conv133 = sitofp i64 %100 to double, !dbg !12968
  %101 = load %struct._PointInfo*, %struct._PointInfo** %q, align 8, !dbg !12969
  %x134 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %101, i32 0, i32 0, !dbg !12970
  %102 = load double, double* %x134, align 8, !dbg !12970
  %sub135 = fsub double %conv133, %102, !dbg !12971
  %mul136 = fmul double %99, %sub135, !dbg !12972
  %sub137 = fsub double %mul131, %mul136, !dbg !12973
  store double %sub137, double* %beta, align 8, !dbg !12974
  %103 = load double, double* %alpha, align 8, !dbg !12975
  %104 = load double, double* %beta, align 8, !dbg !12976
  %mul138 = fmul double %103, %104, !dbg !12977
  %105 = load double, double* %beta, align 8, !dbg !12978
  %mul139 = fmul double %mul138, %105, !dbg !12979
  store double %mul139, double* %distance, align 8, !dbg !12980
  br label %if.end140

if.end140:                                        ; preds = %if.else126, %if.then108
  br label %if.end141

if.end141:                                        ; preds = %if.end140, %if.then83
  store double 0.000000e+00, double* %beta, align 8, !dbg !12981
  %106 = load %struct._EdgeInfo*, %struct._EdgeInfo** %p, align 8, !dbg !12982
  %ghostline = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %106, i32 0, i32 5, !dbg !12984
  %107 = load i32, i32* %ghostline, align 8, !dbg !12984
  %cmp142 = icmp eq i32 %107, 0, !dbg !12985
  br i1 %cmp142, label %if.then144, label %if.end181, !dbg !12986

if.then144:                                       ; preds = %if.end141
  %108 = load double, double* %mid.addr, align 8, !dbg !12987
  %add145 = fadd double %108, 5.000000e-01, !dbg !12989
  store double %add145, double* %alpha, align 8, !dbg !12990
  %109 = load double*, double** %stroke_opacity.addr, align 8, !dbg !12991
  %110 = load double, double* %109, align 8, !dbg !12993
  %cmp146 = fcmp olt double %110, 1.000000e+00, !dbg !12994
  br i1 %cmp146, label %land.lhs.true, label %if.end180, !dbg !12995

land.lhs.true:                                    ; preds = %if.then144
  %111 = load double, double* %distance, align 8, !dbg !12996
  %112 = load double, double* %alpha, align 8, !dbg !12997
  %add148 = fadd double %112, 2.500000e-01, !dbg !12998
  %113 = load double, double* %alpha, align 8, !dbg !12999
  %add149 = fadd double %113, 2.500000e-01, !dbg !13000
  %mul150 = fmul double %add148, %add149, !dbg !13001
  %cmp151 = fcmp ole double %111, %mul150, !dbg !13002
  br i1 %cmp151, label %if.then153, label %if.end180, !dbg !13003

if.then153:                                       ; preds = %land.lhs.true
  %114 = load double, double* %mid.addr, align 8, !dbg !13004
  %sub154 = fsub double %114, 5.000000e-01, !dbg !13006
  store double %sub154, double* %alpha, align 8, !dbg !13007
  %115 = load double, double* %distance, align 8, !dbg !13008
  %116 = load double, double* %alpha, align 8, !dbg !13010
  %add155 = fadd double %116, 2.500000e-01, !dbg !13011
  %117 = load double, double* %alpha, align 8, !dbg !13012
  %add156 = fadd double %117, 2.500000e-01, !dbg !13013
  %mul157 = fmul double %add155, %add156, !dbg !13014
  %cmp158 = fcmp ole double %115, %mul157, !dbg !13015
  br i1 %cmp158, label %if.then160, label %if.else161, !dbg !13016

if.then160:                                       ; preds = %if.then153
  %118 = load double*, double** %stroke_opacity.addr, align 8, !dbg !13017
  store double 1.000000e+00, double* %118, align 8, !dbg !13018
  br label %if.end179, !dbg !13019

if.else161:                                       ; preds = %if.then153
  store double 1.000000e+00, double* %beta, align 8, !dbg !13020
  %119 = load double, double* %distance, align 8, !dbg !13022
  %cmp162 = fcmp une double %119, 1.000000e+00, !dbg !13024
  br i1 %cmp162, label %if.then164, label %if.end166, !dbg !13025

if.then164:                                       ; preds = %if.else161
  %120 = load double, double* %distance, align 8, !dbg !13026
  %call165 = call double @sqrt(double %120) #17, !dbg !13027
  store double %call165, double* %beta, align 8, !dbg !13028
  br label %if.end166, !dbg !13029

if.end166:                                        ; preds = %if.then164, %if.else161
  %121 = load double, double* %beta, align 8, !dbg !13030
  %122 = load double, double* %mid.addr, align 8, !dbg !13031
  %sub167 = fsub double %121, %122, !dbg !13032
  %sub168 = fsub double %sub167, 5.000000e-01, !dbg !13033
  store double %sub168, double* %alpha, align 8, !dbg !13034
  %123 = load double*, double** %stroke_opacity.addr, align 8, !dbg !13035
  %124 = load double, double* %123, align 8, !dbg !13037
  %125 = load double, double* %alpha, align 8, !dbg !13038
  %sub169 = fsub double %125, 2.500000e-01, !dbg !13039
  %126 = load double, double* %alpha, align 8, !dbg !13040
  %sub170 = fsub double %126, 2.500000e-01, !dbg !13041
  %mul171 = fmul double %sub169, %sub170, !dbg !13042
  %cmp172 = fcmp olt double %124, %mul171, !dbg !13043
  br i1 %cmp172, label %if.then174, label %if.end178, !dbg !13044

if.then174:                                       ; preds = %if.end166
  %127 = load double, double* %alpha, align 8, !dbg !13045
  %sub175 = fsub double %127, 2.500000e-01, !dbg !13046
  %128 = load double, double* %alpha, align 8, !dbg !13047
  %sub176 = fsub double %128, 2.500000e-01, !dbg !13048
  %mul177 = fmul double %sub175, %sub176, !dbg !13049
  %129 = load double*, double** %stroke_opacity.addr, align 8, !dbg !13050
  store double %mul177, double* %129, align 8, !dbg !13051
  br label %if.end178, !dbg !13052

if.end178:                                        ; preds = %if.then174, %if.end166
  br label %if.end179

if.end179:                                        ; preds = %if.end178, %if.then160
  br label %if.end180, !dbg !13053

if.end180:                                        ; preds = %if.end179, %land.lhs.true, %if.then144
  br label %if.end181, !dbg !13054

if.end181:                                        ; preds = %if.end180, %if.end141
  %130 = load i32, i32* %fill.addr, align 4, !dbg !13055
  %cmp182 = icmp eq i32 %130, 0, !dbg !13057
  br i1 %cmp182, label %if.then190, label %lor.lhs.false184, !dbg !13058

lor.lhs.false184:                                 ; preds = %if.end181
  %131 = load double, double* %distance, align 8, !dbg !13059
  %cmp185 = fcmp ogt double %131, 1.000000e+00, !dbg !13060
  br i1 %cmp185, label %if.then190, label %lor.lhs.false187, !dbg !13061

lor.lhs.false187:                                 ; preds = %lor.lhs.false184
  %132 = load double, double* %subpath_opacity, align 8, !dbg !13062
  %cmp188 = fcmp oge double %132, 1.000000e+00, !dbg !13063
  br i1 %cmp188, label %if.then190, label %if.end191, !dbg !13064

if.then190:                                       ; preds = %lor.lhs.false187, %lor.lhs.false184, %if.end181
  br label %for.inc, !dbg !13065

if.end191:                                        ; preds = %lor.lhs.false187
  %133 = load double, double* %distance, align 8, !dbg !13066
  %cmp192 = fcmp ole double %133, 0.000000e+00, !dbg !13068
  br i1 %cmp192, label %if.then194, label %if.end195, !dbg !13069

if.then194:                                       ; preds = %if.end191
  store double 1.000000e+00, double* %subpath_opacity, align 8, !dbg !13070
  br label %for.inc, !dbg !13072

if.end195:                                        ; preds = %if.end191
  %134 = load double, double* %distance, align 8, !dbg !13073
  %cmp196 = fcmp ogt double %134, 1.000000e+00, !dbg !13075
  br i1 %cmp196, label %if.then198, label %if.end199, !dbg !13076

if.then198:                                       ; preds = %if.end195
  br label %for.inc, !dbg !13077

if.end199:                                        ; preds = %if.end195
  %135 = load double, double* %beta, align 8, !dbg !13078
  %cmp200 = fcmp oeq double %135, 0.000000e+00, !dbg !13080
  br i1 %cmp200, label %if.then202, label %if.end208, !dbg !13081

if.then202:                                       ; preds = %if.end199
  store double 1.000000e+00, double* %beta, align 8, !dbg !13082
  %136 = load double, double* %distance, align 8, !dbg !13084
  %cmp203 = fcmp une double %136, 1.000000e+00, !dbg !13086
  br i1 %cmp203, label %if.then205, label %if.end207, !dbg !13087

if.then205:                                       ; preds = %if.then202
  %137 = load double, double* %distance, align 8, !dbg !13088
  %call206 = call double @sqrt(double %137) #17, !dbg !13089
  store double %call206, double* %beta, align 8, !dbg !13090
  br label %if.end207, !dbg !13091

if.end207:                                        ; preds = %if.then205, %if.then202
  br label %if.end208, !dbg !13092

if.end208:                                        ; preds = %if.end207, %if.end199
  %138 = load double, double* %beta, align 8, !dbg !13093
  %sub209 = fsub double %138, 1.000000e+00, !dbg !13094
  store double %sub209, double* %alpha, align 8, !dbg !13095
  %139 = load double, double* %subpath_opacity, align 8, !dbg !13096
  %140 = load double, double* %alpha, align 8, !dbg !13098
  %141 = load double, double* %alpha, align 8, !dbg !13099
  %mul210 = fmul double %140, %141, !dbg !13100
  %cmp211 = fcmp olt double %139, %mul210, !dbg !13101
  br i1 %cmp211, label %if.then213, label %if.end215, !dbg !13102

if.then213:                                       ; preds = %if.end208
  %142 = load double, double* %alpha, align 8, !dbg !13103
  %143 = load double, double* %alpha, align 8, !dbg !13104
  %mul214 = fmul double %142, %143, !dbg !13105
  store double %mul214, double* %subpath_opacity, align 8, !dbg !13106
  br label %if.end215, !dbg !13107

if.end215:                                        ; preds = %if.then213, %if.end208
  br label %for.inc, !dbg !13108

for.inc:                                          ; preds = %if.end215, %if.then198, %if.then194, %if.then190, %if.then49
  %144 = load i64, i64* %i, align 8, !dbg !13109
  %inc = add nsw i64 %144, 1, !dbg !13109
  store i64 %inc, i64* %i, align 8, !dbg !13109
  br label %for.cond28, !dbg !13110, !llvm.loop !13111

for.end:                                          ; preds = %if.then39, %for.cond28
  br label %for.inc216, !dbg !13113

for.inc216:                                       ; preds = %for.end, %if.then23, %if.then9
  %145 = load i64, i64* %j, align 8, !dbg !13114
  %inc217 = add nsw i64 %145, 1, !dbg !13114
  store i64 %inc217, i64* %j, align 8, !dbg !13114
  %146 = load %struct._EdgeInfo*, %struct._EdgeInfo** %p, align 8, !dbg !13115
  %incdec.ptr = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %146, i32 1, !dbg !13115
  store %struct._EdgeInfo* %incdec.ptr, %struct._EdgeInfo** %p, align 8, !dbg !13115
  br label %for.cond, !dbg !13116, !llvm.loop !13117

for.end218:                                       ; preds = %if.then, %for.cond
  %147 = load i32, i32* %fill.addr, align 4, !dbg !13119
  %cmp219 = icmp eq i32 %147, 0, !dbg !13121
  br i1 %cmp219, label %if.then221, label %if.end222, !dbg !13122

if.then221:                                       ; preds = %for.end218
  store double 0.000000e+00, double* %retval, align 8, !dbg !13123
  br label %return, !dbg !13123

if.end222:                                        ; preds = %for.end218
  %148 = load double, double* %subpath_opacity, align 8, !dbg !13124
  %cmp223 = fcmp oge double %148, 1.000000e+00, !dbg !13126
  br i1 %cmp223, label %if.then225, label %if.end226, !dbg !13127

if.then225:                                       ; preds = %if.end222
  store double 1.000000e+00, double* %retval, align 8, !dbg !13128
  br label %return, !dbg !13128

if.end226:                                        ; preds = %if.end222
  store i64 0, i64* %winding_number, align 8, !dbg !13129
  %149 = load %struct._PolygonInfo*, %struct._PolygonInfo** %polygon_info.addr, align 8, !dbg !13130
  %edges227 = getelementptr inbounds %struct._PolygonInfo, %struct._PolygonInfo* %149, i32 0, i32 0, !dbg !13131
  %150 = load %struct._EdgeInfo*, %struct._EdgeInfo** %edges227, align 8, !dbg !13131
  store %struct._EdgeInfo* %150, %struct._EdgeInfo** %p, align 8, !dbg !13132
  store i64 0, i64* %j, align 8, !dbg !13133
  br label %for.cond228, !dbg !13135

for.cond228:                                      ; preds = %for.inc310, %if.end226
  %151 = load i64, i64* %j, align 8, !dbg !13136
  %152 = load %struct._PolygonInfo*, %struct._PolygonInfo** %polygon_info.addr, align 8, !dbg !13138
  %number_edges229 = getelementptr inbounds %struct._PolygonInfo, %struct._PolygonInfo* %152, i32 0, i32 1, !dbg !13139
  %153 = load i64, i64* %number_edges229, align 8, !dbg !13139
  %cmp230 = icmp slt i64 %151, %153, !dbg !13140
  br i1 %cmp230, label %for.body232, label %for.end313, !dbg !13141

for.body232:                                      ; preds = %for.cond228
  %154 = load i64, i64* %y.addr, align 8, !dbg !13142
  %conv233 = sitofp i64 %154 to double, !dbg !13145
  %155 = load %struct._EdgeInfo*, %struct._EdgeInfo** %p, align 8, !dbg !13146
  %bounds234 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %155, i32 0, i32 0, !dbg !13147
  %y1235 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds234, i32 0, i32 1, !dbg !13148
  %156 = load double, double* %y1235, align 8, !dbg !13148
  %cmp236 = fcmp ole double %conv233, %156, !dbg !13149
  br i1 %cmp236, label %if.then238, label %if.end239, !dbg !13150

if.then238:                                       ; preds = %for.body232
  br label %for.end313, !dbg !13151

if.end239:                                        ; preds = %for.body232
  %157 = load i64, i64* %y.addr, align 8, !dbg !13152
  %conv240 = sitofp i64 %157 to double, !dbg !13154
  %158 = load %struct._EdgeInfo*, %struct._EdgeInfo** %p, align 8, !dbg !13155
  %bounds241 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %158, i32 0, i32 0, !dbg !13156
  %y2242 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds241, i32 0, i32 3, !dbg !13157
  %159 = load double, double* %y2242, align 8, !dbg !13157
  %cmp243 = fcmp ogt double %conv240, %159, !dbg !13158
  br i1 %cmp243, label %if.then251, label %lor.lhs.false245, !dbg !13159

lor.lhs.false245:                                 ; preds = %if.end239
  %160 = load i64, i64* %x.addr, align 8, !dbg !13160
  %conv246 = sitofp i64 %160 to double, !dbg !13161
  %161 = load %struct._EdgeInfo*, %struct._EdgeInfo** %p, align 8, !dbg !13162
  %bounds247 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %161, i32 0, i32 0, !dbg !13163
  %x1248 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds247, i32 0, i32 0, !dbg !13164
  %162 = load double, double* %x1248, align 8, !dbg !13164
  %cmp249 = fcmp ole double %conv246, %162, !dbg !13165
  br i1 %cmp249, label %if.then251, label %if.end252, !dbg !13166

if.then251:                                       ; preds = %lor.lhs.false245, %if.end239
  br label %for.inc310, !dbg !13167

if.end252:                                        ; preds = %lor.lhs.false245
  %163 = load i64, i64* %x.addr, align 8, !dbg !13168
  %conv253 = sitofp i64 %163 to double, !dbg !13170
  %164 = load %struct._EdgeInfo*, %struct._EdgeInfo** %p, align 8, !dbg !13171
  %bounds254 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %164, i32 0, i32 0, !dbg !13172
  %x2255 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds254, i32 0, i32 2, !dbg !13173
  %165 = load double, double* %x2255, align 8, !dbg !13173
  %cmp256 = fcmp ogt double %conv253, %165, !dbg !13174
  br i1 %cmp256, label %if.then258, label %if.end261, !dbg !13175

if.then258:                                       ; preds = %if.end252
  %166 = load %struct._EdgeInfo*, %struct._EdgeInfo** %p, align 8, !dbg !13176
  %direction = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %166, i32 0, i32 4, !dbg !13178
  %167 = load i64, i64* %direction, align 8, !dbg !13178
  %tobool = icmp ne i64 %167, 0, !dbg !13176
  %168 = zext i1 %tobool to i64, !dbg !13176
  %cond = select i1 %tobool, i32 1, i32 -1, !dbg !13176
  %conv259 = sext i32 %cond to i64, !dbg !13176
  %169 = load i64, i64* %winding_number, align 8, !dbg !13179
  %add260 = add nsw i64 %169, %conv259, !dbg !13179
  store i64 %add260, i64* %winding_number, align 8, !dbg !13179
  br label %for.inc310, !dbg !13180

if.end261:                                        ; preds = %if.end252
  %170 = load %struct._EdgeInfo*, %struct._EdgeInfo** %p, align 8, !dbg !13181
  %highwater262 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %170, i32 0, i32 6, !dbg !13182
  %171 = load i64, i64* %highwater262, align 8, !dbg !13182
  %conv263 = uitofp i64 %171 to double, !dbg !13183
  %call264 = call double @MagickMax(double %conv263, double 1.000000e+00), !dbg !13184
  %conv265 = fptosi double %call264 to i64, !dbg !13185
  store i64 %conv265, i64* %i, align 8, !dbg !13186
  br label %for.cond266, !dbg !13187

for.cond266:                                      ; preds = %for.inc279, %if.end261
  %172 = load i64, i64* %i, align 8, !dbg !13188
  %173 = load %struct._EdgeInfo*, %struct._EdgeInfo** %p, align 8, !dbg !13191
  %number_points267 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %173, i32 0, i32 3, !dbg !13192
  %174 = load i64, i64* %number_points267, align 8, !dbg !13192
  %cmp268 = icmp slt i64 %172, %174, !dbg !13193
  br i1 %cmp268, label %for.body270, label %for.end281, !dbg !13194

for.body270:                                      ; preds = %for.cond266
  %175 = load i64, i64* %y.addr, align 8, !dbg !13195
  %conv271 = sitofp i64 %175 to double, !dbg !13197
  %176 = load %struct._EdgeInfo*, %struct._EdgeInfo** %p, align 8, !dbg !13198
  %points272 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %176, i32 0, i32 2, !dbg !13199
  %177 = load %struct._PointInfo*, %struct._PointInfo** %points272, align 8, !dbg !13199
  %178 = load i64, i64* %i, align 8, !dbg !13200
  %arrayidx273 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %177, i64 %178, !dbg !13198
  %y274 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx273, i32 0, i32 1, !dbg !13201
  %179 = load double, double* %y274, align 8, !dbg !13201
  %cmp275 = fcmp ole double %conv271, %179, !dbg !13202
  br i1 %cmp275, label %if.then277, label %if.end278, !dbg !13203

if.then277:                                       ; preds = %for.body270
  br label %for.end281, !dbg !13204

if.end278:                                        ; preds = %for.body270
  br label %for.inc279, !dbg !13201

for.inc279:                                       ; preds = %if.end278
  %180 = load i64, i64* %i, align 8, !dbg !13205
  %inc280 = add nsw i64 %180, 1, !dbg !13205
  store i64 %inc280, i64* %i, align 8, !dbg !13205
  br label %for.cond266, !dbg !13206, !llvm.loop !13207

for.end281:                                       ; preds = %if.then277, %for.cond266
  %181 = load %struct._EdgeInfo*, %struct._EdgeInfo** %p, align 8, !dbg !13209
  %points282 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %181, i32 0, i32 2, !dbg !13210
  %182 = load %struct._PointInfo*, %struct._PointInfo** %points282, align 8, !dbg !13210
  %183 = load i64, i64* %i, align 8, !dbg !13211
  %add.ptr283 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %182, i64 %183, !dbg !13212
  %add.ptr284 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %add.ptr283, i64 -1, !dbg !13213
  store %struct._PointInfo* %add.ptr284, %struct._PointInfo** %q, align 8, !dbg !13214
  %184 = load %struct._PointInfo*, %struct._PointInfo** %q, align 8, !dbg !13215
  %add.ptr285 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %184, i64 1, !dbg !13217
  %x286 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %add.ptr285, i32 0, i32 0, !dbg !13218
  %185 = load double, double* %x286, align 8, !dbg !13218
  %186 = load %struct._PointInfo*, %struct._PointInfo** %q, align 8, !dbg !13219
  %x287 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %186, i32 0, i32 0, !dbg !13220
  %187 = load double, double* %x287, align 8, !dbg !13220
  %sub288 = fsub double %185, %187, !dbg !13221
  %188 = load i64, i64* %y.addr, align 8, !dbg !13222
  %conv289 = sitofp i64 %188 to double, !dbg !13222
  %189 = load %struct._PointInfo*, %struct._PointInfo** %q, align 8, !dbg !13223
  %y290 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %189, i32 0, i32 1, !dbg !13224
  %190 = load double, double* %y290, align 8, !dbg !13224
  %sub291 = fsub double %conv289, %190, !dbg !13225
  %mul292 = fmul double %sub288, %sub291, !dbg !13226
  %191 = load %struct._PointInfo*, %struct._PointInfo** %q, align 8, !dbg !13227
  %add.ptr293 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %191, i64 1, !dbg !13228
  %y294 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %add.ptr293, i32 0, i32 1, !dbg !13229
  %192 = load double, double* %y294, align 8, !dbg !13229
  %193 = load %struct._PointInfo*, %struct._PointInfo** %q, align 8, !dbg !13230
  %y295 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %193, i32 0, i32 1, !dbg !13231
  %194 = load double, double* %y295, align 8, !dbg !13231
  %sub296 = fsub double %192, %194, !dbg !13232
  %195 = load i64, i64* %x.addr, align 8, !dbg !13233
  %conv297 = sitofp i64 %195 to double, !dbg !13233
  %196 = load %struct._PointInfo*, %struct._PointInfo** %q, align 8, !dbg !13234
  %x298 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %196, i32 0, i32 0, !dbg !13235
  %197 = load double, double* %x298, align 8, !dbg !13235
  %sub299 = fsub double %conv297, %197, !dbg !13236
  %mul300 = fmul double %sub296, %sub299, !dbg !13237
  %cmp301 = fcmp ole double %mul292, %mul300, !dbg !13238
  br i1 %cmp301, label %if.then303, label %if.end309, !dbg !13239

if.then303:                                       ; preds = %for.end281
  %198 = load %struct._EdgeInfo*, %struct._EdgeInfo** %p, align 8, !dbg !13240
  %direction304 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %198, i32 0, i32 4, !dbg !13241
  %199 = load i64, i64* %direction304, align 8, !dbg !13241
  %tobool305 = icmp ne i64 %199, 0, !dbg !13240
  %200 = zext i1 %tobool305 to i64, !dbg !13240
  %cond306 = select i1 %tobool305, i32 1, i32 -1, !dbg !13240
  %conv307 = sext i32 %cond306 to i64, !dbg !13240
  %201 = load i64, i64* %winding_number, align 8, !dbg !13242
  %add308 = add nsw i64 %201, %conv307, !dbg !13242
  store i64 %add308, i64* %winding_number, align 8, !dbg !13242
  br label %if.end309, !dbg !13243

if.end309:                                        ; preds = %if.then303, %for.end281
  br label %for.inc310, !dbg !13244

for.inc310:                                       ; preds = %if.end309, %if.then258, %if.then251
  %202 = load i64, i64* %j, align 8, !dbg !13245
  %inc311 = add nsw i64 %202, 1, !dbg !13245
  store i64 %inc311, i64* %j, align 8, !dbg !13245
  %203 = load %struct._EdgeInfo*, %struct._EdgeInfo** %p, align 8, !dbg !13246
  %incdec.ptr312 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %203, i32 1, !dbg !13246
  store %struct._EdgeInfo* %incdec.ptr312, %struct._EdgeInfo** %p, align 8, !dbg !13246
  br label %for.cond228, !dbg !13247, !llvm.loop !13248

for.end313:                                       ; preds = %if.then238, %for.cond228
  %204 = load i32, i32* %fill_rule.addr, align 4, !dbg !13250
  %cmp314 = icmp ne i32 %204, 2, !dbg !13252
  br i1 %cmp314, label %if.then316, label %if.else322, !dbg !13253

if.then316:                                       ; preds = %for.end313
  %205 = load i64, i64* %winding_number, align 8, !dbg !13254
  %call317 = call i64 @MagickAbsoluteValue(i64 %205), !dbg !13257
  %and = and i64 %call317, 1, !dbg !13258
  %cmp318 = icmp ne i64 %and, 0, !dbg !13259
  br i1 %cmp318, label %if.then320, label %if.end321, !dbg !13260

if.then320:                                       ; preds = %if.then316
  store double 1.000000e+00, double* %retval, align 8, !dbg !13261
  br label %return, !dbg !13261

if.end321:                                        ; preds = %if.then316
  br label %if.end328, !dbg !13262

if.else322:                                       ; preds = %for.end313
  %206 = load i64, i64* %winding_number, align 8, !dbg !13263
  %call323 = call i64 @MagickAbsoluteValue(i64 %206), !dbg !13265
  %cmp324 = icmp ne i64 %call323, 0, !dbg !13266
  br i1 %cmp324, label %if.then326, label %if.end327, !dbg !13267

if.then326:                                       ; preds = %if.else322
  store double 1.000000e+00, double* %retval, align 8, !dbg !13268
  br label %return, !dbg !13268

if.end327:                                        ; preds = %if.else322
  br label %if.end328

if.end328:                                        ; preds = %if.end327, %if.end321
  %207 = load double, double* %subpath_opacity, align 8, !dbg !13269
  store double %207, double* %retval, align 8, !dbg !13270
  br label %return, !dbg !13270

return:                                           ; preds = %if.end328, %if.then326, %if.then320, %if.then225, %if.then221
  %208 = load double, double* %retval, align 8, !dbg !13271
  ret double %208, !dbg !13271
}

declare dso_local i64 @GetMagickResourceLimit(i32) #3

; Function Attrs: noinline nounwind uwtable
define internal %struct._PathInfo* @ConvertPrimitiveToPath(%struct._DrawInfo* %draw_info, %struct._PrimitiveInfo* %primitive_info) #0 !dbg !13272 {
entry:
  %retval = alloca %struct._PathInfo*, align 8
  %draw_info.addr = alloca %struct._DrawInfo*, align 8
  %primitive_info.addr = alloca %struct._PrimitiveInfo*, align 8
  %path_info = alloca %struct._PathInfo*, align 8
  %code = alloca i32, align 4
  %p = alloca %struct._PointInfo, align 8
  %q = alloca %struct._PointInfo, align 8
  %i = alloca i64, align 8
  %n = alloca i64, align 8
  %coordinates = alloca i64, align 8
  %start = alloca i64, align 8
  store %struct._DrawInfo* %draw_info, %struct._DrawInfo** %draw_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawInfo** %draw_info.addr, metadata !13275, metadata !DIExpression()), !dbg !13276
  store %struct._PrimitiveInfo* %primitive_info, %struct._PrimitiveInfo** %primitive_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PrimitiveInfo** %primitive_info.addr, metadata !13277, metadata !DIExpression()), !dbg !13278
  call void @llvm.dbg.declare(metadata %struct._PathInfo** %path_info, metadata !13279, metadata !DIExpression()), !dbg !13280
  call void @llvm.dbg.declare(metadata i32* %code, metadata !13281, metadata !DIExpression()), !dbg !13282
  call void @llvm.dbg.declare(metadata %struct._PointInfo* %p, metadata !13283, metadata !DIExpression()), !dbg !13284
  call void @llvm.dbg.declare(metadata %struct._PointInfo* %q, metadata !13285, metadata !DIExpression()), !dbg !13286
  call void @llvm.dbg.declare(metadata i64* %i, metadata !13287, metadata !DIExpression()), !dbg !13288
  call void @llvm.dbg.declare(metadata i64* %n, metadata !13289, metadata !DIExpression()), !dbg !13290
  call void @llvm.dbg.declare(metadata i64* %coordinates, metadata !13291, metadata !DIExpression()), !dbg !13292
  call void @llvm.dbg.declare(metadata i64* %start, metadata !13293, metadata !DIExpression()), !dbg !13294
  %0 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !13295
  %primitive = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %0, i32 0, i32 2, !dbg !13296
  %1 = load i32, i32* %primitive, align 8, !dbg !13296
  switch i32 %1, label %sw.default [
    i32 1, label %sw.bb
    i32 11, label %sw.bb
    i32 12, label %sw.bb
    i32 13, label %sw.bb
    i32 14, label %sw.bb
  ], !dbg !13297

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry
  store %struct._PathInfo* null, %struct._PathInfo** %retval, align 8, !dbg !13298
  br label %return, !dbg !13298

sw.default:                                       ; preds = %entry
  br label %sw.epilog, !dbg !13300

sw.epilog:                                        ; preds = %sw.default
  store i64 0, i64* %i, align 8, !dbg !13301
  br label %for.cond, !dbg !13303

for.cond:                                         ; preds = %for.inc, %sw.epilog
  %2 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !13304
  %3 = load i64, i64* %i, align 8, !dbg !13306
  %arrayidx = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %2, i64 %3, !dbg !13304
  %primitive1 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx, i32 0, i32 2, !dbg !13307
  %4 = load i32, i32* %primitive1, align 8, !dbg !13307
  %cmp = icmp ne i32 %4, 0, !dbg !13308
  br i1 %cmp, label %for.body, label %for.end, !dbg !13309

for.body:                                         ; preds = %for.cond
  br label %for.inc, !dbg !13309

for.inc:                                          ; preds = %for.body
  %5 = load i64, i64* %i, align 8, !dbg !13310
  %inc = add nsw i64 %5, 1, !dbg !13310
  store i64 %inc, i64* %i, align 8, !dbg !13310
  br label %for.cond, !dbg !13311, !llvm.loop !13312

for.end:                                          ; preds = %for.cond
  %6 = load i64, i64* %i, align 8, !dbg !13314
  %mul = mul i64 2, %6, !dbg !13315
  %add = add i64 %mul, 3, !dbg !13316
  %call = call i8* @AcquireQuantumMemory(i64 %add, i64 24) #14, !dbg !13317
  %7 = bitcast i8* %call to %struct._PathInfo*, !dbg !13318
  store %struct._PathInfo* %7, %struct._PathInfo** %path_info, align 8, !dbg !13319
  %8 = load %struct._PathInfo*, %struct._PathInfo** %path_info, align 8, !dbg !13320
  %cmp2 = icmp eq %struct._PathInfo* %8, null, !dbg !13322
  br i1 %cmp2, label %if.then, label %if.end, !dbg !13323

if.then:                                          ; preds = %for.end
  store %struct._PathInfo* null, %struct._PathInfo** %retval, align 8, !dbg !13324
  br label %return, !dbg !13324

if.end:                                           ; preds = %for.end
  store i64 0, i64* %coordinates, align 8, !dbg !13325
  store i64 0, i64* %n, align 8, !dbg !13326
  %x = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %p, i32 0, i32 0, !dbg !13327
  store double -1.000000e+00, double* %x, align 8, !dbg !13328
  %y = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %p, i32 0, i32 1, !dbg !13329
  store double -1.000000e+00, double* %y, align 8, !dbg !13330
  %x3 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %q, i32 0, i32 0, !dbg !13331
  store double -1.000000e+00, double* %x3, align 8, !dbg !13332
  %y4 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %q, i32 0, i32 1, !dbg !13333
  store double -1.000000e+00, double* %y4, align 8, !dbg !13334
  store i64 0, i64* %start, align 8, !dbg !13335
  store i64 0, i64* %i, align 8, !dbg !13336
  br label %for.cond5, !dbg !13338

for.cond5:                                        ; preds = %for.inc71, %if.end
  %9 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !13339
  %10 = load i64, i64* %i, align 8, !dbg !13341
  %arrayidx6 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %9, i64 %10, !dbg !13339
  %primitive7 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx6, i32 0, i32 2, !dbg !13342
  %11 = load i32, i32* %primitive7, align 8, !dbg !13342
  %cmp8 = icmp ne i32 %11, 0, !dbg !13343
  br i1 %cmp8, label %for.body9, label %for.end73, !dbg !13344

for.body9:                                        ; preds = %for.cond5
  store i32 3, i32* %code, align 4, !dbg !13345
  %12 = load i64, i64* %coordinates, align 8, !dbg !13347
  %cmp10 = icmp sle i64 %12, 0, !dbg !13349
  br i1 %cmp10, label %if.then11, label %if.end15, !dbg !13350

if.then11:                                        ; preds = %for.body9
  %13 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !13351
  %14 = load i64, i64* %i, align 8, !dbg !13353
  %arrayidx12 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %13, i64 %14, !dbg !13351
  %coordinates13 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx12, i32 0, i32 1, !dbg !13354
  %15 = load i64, i64* %coordinates13, align 8, !dbg !13354
  store i64 %15, i64* %coordinates, align 8, !dbg !13355
  %16 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !13356
  %17 = load i64, i64* %i, align 8, !dbg !13357
  %arrayidx14 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %16, i64 %17, !dbg !13356
  %point = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx14, i32 0, i32 0, !dbg !13358
  %18 = bitcast %struct._PointInfo* %p to i8*, !dbg !13358
  %19 = bitcast %struct._PointInfo* %point to i8*, !dbg !13358
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 16, i1 false), !dbg !13358
  %20 = load i64, i64* %n, align 8, !dbg !13359
  store i64 %20, i64* %start, align 8, !dbg !13360
  store i32 0, i32* %code, align 4, !dbg !13361
  br label %if.end15, !dbg !13362

if.end15:                                         ; preds = %if.then11, %for.body9
  %21 = load i64, i64* %coordinates, align 8, !dbg !13363
  %dec = add nsw i64 %21, -1, !dbg !13363
  store i64 %dec, i64* %coordinates, align 8, !dbg !13363
  %22 = load i64, i64* %i, align 8, !dbg !13364
  %cmp16 = icmp eq i64 %22, 0, !dbg !13366
  br i1 %cmp16, label %if.then29, label %lor.lhs.false, !dbg !13367

lor.lhs.false:                                    ; preds = %if.end15
  %x17 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %q, i32 0, i32 0, !dbg !13368
  %23 = load double, double* %x17, align 8, !dbg !13368
  %24 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !13369
  %25 = load i64, i64* %i, align 8, !dbg !13370
  %arrayidx18 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %24, i64 %25, !dbg !13369
  %point19 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx18, i32 0, i32 0, !dbg !13371
  %x20 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point19, i32 0, i32 0, !dbg !13372
  %26 = load double, double* %x20, align 8, !dbg !13372
  %sub = fsub double %23, %26, !dbg !13373
  %27 = call double @llvm.fabs.f64(double %sub), !dbg !13374
  %cmp21 = fcmp oge double %27, 1.000000e-15, !dbg !13375
  br i1 %cmp21, label %if.then29, label %lor.lhs.false22, !dbg !13376

lor.lhs.false22:                                  ; preds = %lor.lhs.false
  %y23 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %q, i32 0, i32 1, !dbg !13377
  %28 = load double, double* %y23, align 8, !dbg !13377
  %29 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !13378
  %30 = load i64, i64* %i, align 8, !dbg !13379
  %arrayidx24 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %29, i64 %30, !dbg !13378
  %point25 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx24, i32 0, i32 0, !dbg !13380
  %y26 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point25, i32 0, i32 1, !dbg !13381
  %31 = load double, double* %y26, align 8, !dbg !13381
  %sub27 = fsub double %28, %31, !dbg !13382
  %32 = call double @llvm.fabs.f64(double %sub27), !dbg !13383
  %cmp28 = fcmp oge double %32, 1.000000e-15, !dbg !13384
  br i1 %cmp28, label %if.then29, label %if.end39, !dbg !13385

if.then29:                                        ; preds = %lor.lhs.false22, %lor.lhs.false, %if.end15
  %33 = load i32, i32* %code, align 4, !dbg !13386
  %34 = load %struct._PathInfo*, %struct._PathInfo** %path_info, align 8, !dbg !13388
  %35 = load i64, i64* %n, align 8, !dbg !13389
  %arrayidx30 = getelementptr inbounds %struct._PathInfo, %struct._PathInfo* %34, i64 %35, !dbg !13388
  %code31 = getelementptr inbounds %struct._PathInfo, %struct._PathInfo* %arrayidx30, i32 0, i32 1, !dbg !13390
  store i32 %33, i32* %code31, align 8, !dbg !13391
  %36 = load %struct._PathInfo*, %struct._PathInfo** %path_info, align 8, !dbg !13392
  %37 = load i64, i64* %n, align 8, !dbg !13393
  %arrayidx32 = getelementptr inbounds %struct._PathInfo, %struct._PathInfo* %36, i64 %37, !dbg !13392
  %point33 = getelementptr inbounds %struct._PathInfo, %struct._PathInfo* %arrayidx32, i32 0, i32 0, !dbg !13394
  %38 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !13395
  %39 = load i64, i64* %i, align 8, !dbg !13396
  %arrayidx34 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %38, i64 %39, !dbg !13395
  %point35 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx34, i32 0, i32 0, !dbg !13397
  %40 = bitcast %struct._PointInfo* %point33 to i8*, !dbg !13397
  %41 = bitcast %struct._PointInfo* %point35 to i8*, !dbg !13397
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 16, i1 false), !dbg !13397
  %42 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !13398
  %43 = load i64, i64* %i, align 8, !dbg !13399
  %arrayidx36 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %42, i64 %43, !dbg !13398
  %point37 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx36, i32 0, i32 0, !dbg !13400
  %44 = bitcast %struct._PointInfo* %q to i8*, !dbg !13400
  %45 = bitcast %struct._PointInfo* %point37 to i8*, !dbg !13400
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* align 8 %45, i64 16, i1 false), !dbg !13400
  %46 = load i64, i64* %n, align 8, !dbg !13401
  %inc38 = add nsw i64 %46, 1, !dbg !13401
  store i64 %inc38, i64* %n, align 8, !dbg !13401
  br label %if.end39, !dbg !13402

if.end39:                                         ; preds = %if.then29, %lor.lhs.false22
  %47 = load i64, i64* %coordinates, align 8, !dbg !13403
  %cmp40 = icmp sgt i64 %47, 0, !dbg !13405
  br i1 %cmp40, label %if.then41, label %if.end42, !dbg !13406

if.then41:                                        ; preds = %if.end39
  br label %for.inc71, !dbg !13407

if.end42:                                         ; preds = %if.end39
  %x43 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %p, i32 0, i32 0, !dbg !13408
  %48 = load double, double* %x43, align 8, !dbg !13408
  %49 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !13410
  %50 = load i64, i64* %i, align 8, !dbg !13411
  %arrayidx44 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %49, i64 %50, !dbg !13410
  %point45 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx44, i32 0, i32 0, !dbg !13412
  %x46 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point45, i32 0, i32 0, !dbg !13413
  %51 = load double, double* %x46, align 8, !dbg !13413
  %sub47 = fsub double %48, %51, !dbg !13414
  %52 = call double @llvm.fabs.f64(double %sub47), !dbg !13415
  %cmp48 = fcmp olt double %52, 1.000000e-15, !dbg !13416
  br i1 %cmp48, label %land.lhs.true, label %if.end56, !dbg !13417

land.lhs.true:                                    ; preds = %if.end42
  %y49 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %p, i32 0, i32 1, !dbg !13418
  %53 = load double, double* %y49, align 8, !dbg !13418
  %54 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !13419
  %55 = load i64, i64* %i, align 8, !dbg !13420
  %arrayidx50 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %54, i64 %55, !dbg !13419
  %point51 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx50, i32 0, i32 0, !dbg !13421
  %y52 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point51, i32 0, i32 1, !dbg !13422
  %56 = load double, double* %y52, align 8, !dbg !13422
  %sub53 = fsub double %53, %56, !dbg !13423
  %57 = call double @llvm.fabs.f64(double %sub53), !dbg !13424
  %cmp54 = fcmp olt double %57, 1.000000e-15, !dbg !13425
  br i1 %cmp54, label %if.then55, label %if.end56, !dbg !13426

if.then55:                                        ; preds = %land.lhs.true
  br label %for.inc71, !dbg !13427

if.end56:                                         ; preds = %land.lhs.true, %if.end42
  %58 = load %struct._PathInfo*, %struct._PathInfo** %path_info, align 8, !dbg !13428
  %59 = load i64, i64* %start, align 8, !dbg !13429
  %arrayidx57 = getelementptr inbounds %struct._PathInfo, %struct._PathInfo* %58, i64 %59, !dbg !13428
  %code58 = getelementptr inbounds %struct._PathInfo, %struct._PathInfo* %arrayidx57, i32 0, i32 1, !dbg !13430
  store i32 1, i32* %code58, align 8, !dbg !13431
  %60 = load %struct._PathInfo*, %struct._PathInfo** %path_info, align 8, !dbg !13432
  %61 = load i64, i64* %n, align 8, !dbg !13433
  %arrayidx59 = getelementptr inbounds %struct._PathInfo, %struct._PathInfo* %60, i64 %61, !dbg !13432
  %code60 = getelementptr inbounds %struct._PathInfo, %struct._PathInfo* %arrayidx59, i32 0, i32 1, !dbg !13434
  store i32 2, i32* %code60, align 8, !dbg !13435
  %62 = load %struct._PathInfo*, %struct._PathInfo** %path_info, align 8, !dbg !13436
  %63 = load i64, i64* %n, align 8, !dbg !13437
  %arrayidx61 = getelementptr inbounds %struct._PathInfo, %struct._PathInfo* %62, i64 %63, !dbg !13436
  %point62 = getelementptr inbounds %struct._PathInfo, %struct._PathInfo* %arrayidx61, i32 0, i32 0, !dbg !13438
  %64 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !13439
  %65 = load i64, i64* %i, align 8, !dbg !13440
  %arrayidx63 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %64, i64 %65, !dbg !13439
  %point64 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx63, i32 0, i32 0, !dbg !13441
  %66 = bitcast %struct._PointInfo* %point62 to i8*, !dbg !13441
  %67 = bitcast %struct._PointInfo* %point64 to i8*, !dbg !13441
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %66, i8* align 8 %67, i64 16, i1 false), !dbg !13441
  %68 = load i64, i64* %n, align 8, !dbg !13442
  %inc65 = add nsw i64 %68, 1, !dbg !13442
  store i64 %inc65, i64* %n, align 8, !dbg !13442
  %69 = load %struct._PathInfo*, %struct._PathInfo** %path_info, align 8, !dbg !13443
  %70 = load i64, i64* %n, align 8, !dbg !13444
  %arrayidx66 = getelementptr inbounds %struct._PathInfo, %struct._PathInfo* %69, i64 %70, !dbg !13443
  %code67 = getelementptr inbounds %struct._PathInfo, %struct._PathInfo* %arrayidx66, i32 0, i32 1, !dbg !13445
  store i32 3, i32* %code67, align 8, !dbg !13446
  %71 = load %struct._PathInfo*, %struct._PathInfo** %path_info, align 8, !dbg !13447
  %72 = load i64, i64* %n, align 8, !dbg !13448
  %arrayidx68 = getelementptr inbounds %struct._PathInfo, %struct._PathInfo* %71, i64 %72, !dbg !13447
  %point69 = getelementptr inbounds %struct._PathInfo, %struct._PathInfo* %arrayidx68, i32 0, i32 0, !dbg !13449
  %73 = bitcast %struct._PointInfo* %point69 to i8*, !dbg !13450
  %74 = bitcast %struct._PointInfo* %p to i8*, !dbg !13450
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %73, i8* align 8 %74, i64 16, i1 false), !dbg !13450
  %75 = load i64, i64* %n, align 8, !dbg !13451
  %inc70 = add nsw i64 %75, 1, !dbg !13451
  store i64 %inc70, i64* %n, align 8, !dbg !13451
  br label %for.inc71, !dbg !13452

for.inc71:                                        ; preds = %if.end56, %if.then55, %if.then41
  %76 = load i64, i64* %i, align 8, !dbg !13453
  %inc72 = add nsw i64 %76, 1, !dbg !13453
  store i64 %inc72, i64* %i, align 8, !dbg !13453
  br label %for.cond5, !dbg !13454, !llvm.loop !13455

for.end73:                                        ; preds = %for.cond5
  %77 = load %struct._PathInfo*, %struct._PathInfo** %path_info, align 8, !dbg !13457
  %78 = load i64, i64* %n, align 8, !dbg !13458
  %arrayidx74 = getelementptr inbounds %struct._PathInfo, %struct._PathInfo* %77, i64 %78, !dbg !13457
  %code75 = getelementptr inbounds %struct._PathInfo, %struct._PathInfo* %arrayidx74, i32 0, i32 1, !dbg !13459
  store i32 4, i32* %code75, align 8, !dbg !13460
  %79 = load %struct._PathInfo*, %struct._PathInfo** %path_info, align 8, !dbg !13461
  %80 = load i64, i64* %n, align 8, !dbg !13462
  %arrayidx76 = getelementptr inbounds %struct._PathInfo, %struct._PathInfo* %79, i64 %80, !dbg !13461
  %point77 = getelementptr inbounds %struct._PathInfo, %struct._PathInfo* %arrayidx76, i32 0, i32 0, !dbg !13463
  %x78 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point77, i32 0, i32 0, !dbg !13464
  store double 0.000000e+00, double* %x78, align 8, !dbg !13465
  %81 = load %struct._PathInfo*, %struct._PathInfo** %path_info, align 8, !dbg !13466
  %82 = load i64, i64* %n, align 8, !dbg !13467
  %arrayidx79 = getelementptr inbounds %struct._PathInfo, %struct._PathInfo* %81, i64 %82, !dbg !13466
  %point80 = getelementptr inbounds %struct._PathInfo, %struct._PathInfo* %arrayidx79, i32 0, i32 0, !dbg !13468
  %y81 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point80, i32 0, i32 1, !dbg !13469
  store double 0.000000e+00, double* %y81, align 8, !dbg !13470
  %call82 = call i32 @IsEventLogging(), !dbg !13471
  %cmp83 = icmp ne i32 %call82, 0, !dbg !13473
  br i1 %cmp83, label %if.then84, label %if.end85, !dbg !13474

if.then84:                                        ; preds = %for.end73
  %83 = load %struct._PathInfo*, %struct._PathInfo** %path_info, align 8, !dbg !13475
  call void @LogPathInfo(%struct._PathInfo* %83), !dbg !13476
  br label %if.end85, !dbg !13476

if.end85:                                         ; preds = %if.then84, %for.end73
  %84 = load %struct._PathInfo*, %struct._PathInfo** %path_info, align 8, !dbg !13477
  store %struct._PathInfo* %84, %struct._PathInfo** %retval, align 8, !dbg !13478
  br label %return, !dbg !13478

return:                                           ; preds = %if.end85, %if.then, %sw.bb
  %85 = load %struct._PathInfo*, %struct._PathInfo** %retval, align 8, !dbg !13479
  ret %struct._PathInfo* %85, !dbg !13479
}

; Function Attrs: noinline nounwind uwtable
define internal %struct._PolygonInfo* @ConvertPathToPolygon(%struct._DrawInfo* %draw_info, %struct._PathInfo* %path_info) #0 !dbg !13480 {
entry:
  %retval = alloca %struct._PolygonInfo*, align 8
  %draw_info.addr = alloca %struct._DrawInfo*, align 8
  %path_info.addr = alloca %struct._PathInfo*, align 8
  %direction = alloca i64, align 8
  %next_direction = alloca i64, align 8
  %point = alloca %struct._PointInfo, align 8
  %points = alloca %struct._PointInfo*, align 8
  %polygon_info = alloca %struct._PolygonInfo*, align 8
  %bounds = alloca %struct._SegmentInfo, align 8
  %i = alloca i64, align 8
  %n = alloca i64, align 8
  %ghostline = alloca i32, align 4
  %edge = alloca i64, align 8
  %number_edges = alloca i64, align 8
  %number_points = alloca i64, align 8
  store %struct._DrawInfo* %draw_info, %struct._DrawInfo** %draw_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawInfo** %draw_info.addr, metadata !13485, metadata !DIExpression()), !dbg !13486
  store %struct._PathInfo* %path_info, %struct._PathInfo** %path_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PathInfo** %path_info.addr, metadata !13487, metadata !DIExpression()), !dbg !13488
  call void @llvm.dbg.declare(metadata i64* %direction, metadata !13489, metadata !DIExpression()), !dbg !13490
  call void @llvm.dbg.declare(metadata i64* %next_direction, metadata !13491, metadata !DIExpression()), !dbg !13492
  call void @llvm.dbg.declare(metadata %struct._PointInfo* %point, metadata !13493, metadata !DIExpression()), !dbg !13494
  call void @llvm.dbg.declare(metadata %struct._PointInfo** %points, metadata !13495, metadata !DIExpression()), !dbg !13496
  call void @llvm.dbg.declare(metadata %struct._PolygonInfo** %polygon_info, metadata !13497, metadata !DIExpression()), !dbg !13498
  call void @llvm.dbg.declare(metadata %struct._SegmentInfo* %bounds, metadata !13499, metadata !DIExpression()), !dbg !13500
  call void @llvm.dbg.declare(metadata i64* %i, metadata !13501, metadata !DIExpression()), !dbg !13502
  call void @llvm.dbg.declare(metadata i64* %n, metadata !13503, metadata !DIExpression()), !dbg !13504
  call void @llvm.dbg.declare(metadata i32* %ghostline, metadata !13505, metadata !DIExpression()), !dbg !13506
  call void @llvm.dbg.declare(metadata i64* %edge, metadata !13507, metadata !DIExpression()), !dbg !13508
  call void @llvm.dbg.declare(metadata i64* %number_edges, metadata !13509, metadata !DIExpression()), !dbg !13510
  call void @llvm.dbg.declare(metadata i64* %number_points, metadata !13511, metadata !DIExpression()), !dbg !13512
  %call = call i8* @AcquireMagickMemory(i64 16) #11, !dbg !13513
  %0 = bitcast i8* %call to %struct._PolygonInfo*, !dbg !13514
  store %struct._PolygonInfo* %0, %struct._PolygonInfo** %polygon_info, align 8, !dbg !13515
  %1 = load %struct._PolygonInfo*, %struct._PolygonInfo** %polygon_info, align 8, !dbg !13516
  %cmp = icmp eq %struct._PolygonInfo* %1, null, !dbg !13518
  br i1 %cmp, label %if.then, label %if.end, !dbg !13519

if.then:                                          ; preds = %entry
  store %struct._PolygonInfo* null, %struct._PolygonInfo** %retval, align 8, !dbg !13520
  br label %return, !dbg !13520

if.end:                                           ; preds = %entry
  store i64 16, i64* %number_edges, align 8, !dbg !13521
  %2 = load i64, i64* %number_edges, align 8, !dbg !13522
  %call1 = call i8* @AcquireQuantumMemory(i64 %2, i64 80) #14, !dbg !13523
  %3 = bitcast i8* %call1 to %struct._EdgeInfo*, !dbg !13524
  %4 = load %struct._PolygonInfo*, %struct._PolygonInfo** %polygon_info, align 8, !dbg !13525
  %edges = getelementptr inbounds %struct._PolygonInfo, %struct._PolygonInfo* %4, i32 0, i32 0, !dbg !13526
  store %struct._EdgeInfo* %3, %struct._EdgeInfo** %edges, align 8, !dbg !13527
  %5 = load %struct._PolygonInfo*, %struct._PolygonInfo** %polygon_info, align 8, !dbg !13528
  %edges2 = getelementptr inbounds %struct._PolygonInfo, %struct._PolygonInfo* %5, i32 0, i32 0, !dbg !13530
  %6 = load %struct._EdgeInfo*, %struct._EdgeInfo** %edges2, align 8, !dbg !13530
  %cmp3 = icmp eq %struct._EdgeInfo* %6, null, !dbg !13531
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !13532

if.then4:                                         ; preds = %if.end
  store %struct._PolygonInfo* null, %struct._PolygonInfo** %retval, align 8, !dbg !13533
  br label %return, !dbg !13533

if.end5:                                          ; preds = %if.end
  store i64 0, i64* %direction, align 8, !dbg !13534
  store i64 0, i64* %edge, align 8, !dbg !13535
  store i32 0, i32* %ghostline, align 4, !dbg !13536
  store i64 0, i64* %n, align 8, !dbg !13537
  store i64 0, i64* %number_points, align 8, !dbg !13538
  store %struct._PointInfo* null, %struct._PointInfo** %points, align 8, !dbg !13539
  %7 = bitcast %struct._PointInfo* %point to i8*, !dbg !13540
  %call6 = call i8* @ResetMagickMemory(i8* %7, i32 0, i64 16), !dbg !13541
  %8 = bitcast %struct._SegmentInfo* %bounds to i8*, !dbg !13542
  %call7 = call i8* @ResetMagickMemory(i8* %8, i32 0, i64 32), !dbg !13543
  store i64 0, i64* %i, align 8, !dbg !13544
  br label %for.cond, !dbg !13546

for.cond:                                         ; preds = %for.inc, %if.end5
  %9 = load %struct._PathInfo*, %struct._PathInfo** %path_info.addr, align 8, !dbg !13547
  %10 = load i64, i64* %i, align 8, !dbg !13549
  %arrayidx = getelementptr inbounds %struct._PathInfo, %struct._PathInfo* %9, i64 %10, !dbg !13547
  %code = getelementptr inbounds %struct._PathInfo, %struct._PathInfo* %arrayidx, i32 0, i32 1, !dbg !13550
  %11 = load i32, i32* %code, align 8, !dbg !13550
  %cmp8 = icmp ne i32 %11, 4, !dbg !13551
  br i1 %cmp8, label %for.body, label %for.end, !dbg !13552

for.body:                                         ; preds = %for.cond
  %12 = load %struct._PathInfo*, %struct._PathInfo** %path_info.addr, align 8, !dbg !13553
  %13 = load i64, i64* %i, align 8, !dbg !13556
  %arrayidx9 = getelementptr inbounds %struct._PathInfo, %struct._PathInfo* %12, i64 %13, !dbg !13553
  %code10 = getelementptr inbounds %struct._PathInfo, %struct._PathInfo* %arrayidx9, i32 0, i32 1, !dbg !13557
  %14 = load i32, i32* %code10, align 8, !dbg !13557
  %cmp11 = icmp eq i32 %14, 0, !dbg !13558
  br i1 %cmp11, label %if.then19, label %lor.lhs.false, !dbg !13559

lor.lhs.false:                                    ; preds = %for.body
  %15 = load %struct._PathInfo*, %struct._PathInfo** %path_info.addr, align 8, !dbg !13560
  %16 = load i64, i64* %i, align 8, !dbg !13561
  %arrayidx12 = getelementptr inbounds %struct._PathInfo, %struct._PathInfo* %15, i64 %16, !dbg !13560
  %code13 = getelementptr inbounds %struct._PathInfo, %struct._PathInfo* %arrayidx12, i32 0, i32 1, !dbg !13562
  %17 = load i32, i32* %code13, align 8, !dbg !13562
  %cmp14 = icmp eq i32 %17, 1, !dbg !13563
  br i1 %cmp14, label %if.then19, label %lor.lhs.false15, !dbg !13564

lor.lhs.false15:                                  ; preds = %lor.lhs.false
  %18 = load %struct._PathInfo*, %struct._PathInfo** %path_info.addr, align 8, !dbg !13565
  %19 = load i64, i64* %i, align 8, !dbg !13566
  %arrayidx16 = getelementptr inbounds %struct._PathInfo, %struct._PathInfo* %18, i64 %19, !dbg !13565
  %code17 = getelementptr inbounds %struct._PathInfo, %struct._PathInfo* %arrayidx16, i32 0, i32 1, !dbg !13567
  %20 = load i32, i32* %code17, align 8, !dbg !13567
  %cmp18 = icmp eq i32 %20, 2, !dbg !13568
  br i1 %cmp18, label %if.then19, label %if.end85, !dbg !13569

if.then19:                                        ; preds = %lor.lhs.false15, %lor.lhs.false, %for.body
  %21 = load %struct._PointInfo*, %struct._PointInfo** %points, align 8, !dbg !13570
  %cmp20 = icmp ne %struct._PointInfo* %21, null, !dbg !13573
  br i1 %cmp20, label %land.lhs.true, label %if.end67, !dbg !13574

land.lhs.true:                                    ; preds = %if.then19
  %22 = load i64, i64* %n, align 8, !dbg !13575
  %cmp21 = icmp sge i64 %22, 2, !dbg !13576
  br i1 %cmp21, label %if.then22, label %if.end67, !dbg !13577

if.then22:                                        ; preds = %land.lhs.true
  %23 = load i64, i64* %edge, align 8, !dbg !13578
  %24 = load i64, i64* %number_edges, align 8, !dbg !13581
  %cmp23 = icmp eq i64 %23, %24, !dbg !13582
  br i1 %cmp23, label %if.then24, label %if.end32, !dbg !13583

if.then24:                                        ; preds = %if.then22
  %25 = load i64, i64* %number_edges, align 8, !dbg !13584
  %shl = shl i64 %25, 1, !dbg !13584
  store i64 %shl, i64* %number_edges, align 8, !dbg !13584
  %26 = load %struct._PolygonInfo*, %struct._PolygonInfo** %polygon_info, align 8, !dbg !13586
  %edges25 = getelementptr inbounds %struct._PolygonInfo, %struct._PolygonInfo* %26, i32 0, i32 0, !dbg !13587
  %27 = load %struct._EdgeInfo*, %struct._EdgeInfo** %edges25, align 8, !dbg !13587
  %28 = bitcast %struct._EdgeInfo* %27 to i8*, !dbg !13586
  %29 = load i64, i64* %number_edges, align 8, !dbg !13588
  %call26 = call i8* @ResizeQuantumMemory(i8* %28, i64 %29, i64 80) #16, !dbg !13589
  %30 = bitcast i8* %call26 to %struct._EdgeInfo*, !dbg !13590
  %31 = load %struct._PolygonInfo*, %struct._PolygonInfo** %polygon_info, align 8, !dbg !13591
  %edges27 = getelementptr inbounds %struct._PolygonInfo, %struct._PolygonInfo* %31, i32 0, i32 0, !dbg !13592
  store %struct._EdgeInfo* %30, %struct._EdgeInfo** %edges27, align 8, !dbg !13593
  %32 = load %struct._PolygonInfo*, %struct._PolygonInfo** %polygon_info, align 8, !dbg !13594
  %edges28 = getelementptr inbounds %struct._PolygonInfo, %struct._PolygonInfo* %32, i32 0, i32 0, !dbg !13596
  %33 = load %struct._EdgeInfo*, %struct._EdgeInfo** %edges28, align 8, !dbg !13596
  %cmp29 = icmp eq %struct._EdgeInfo* %33, null, !dbg !13597
  br i1 %cmp29, label %if.then30, label %if.end31, !dbg !13598

if.then30:                                        ; preds = %if.then24
  store %struct._PolygonInfo* null, %struct._PolygonInfo** %retval, align 8, !dbg !13599
  br label %return, !dbg !13599

if.end31:                                         ; preds = %if.then24
  br label %if.end32, !dbg !13600

if.end32:                                         ; preds = %if.end31, %if.then22
  %34 = load i64, i64* %n, align 8, !dbg !13601
  %35 = load %struct._PolygonInfo*, %struct._PolygonInfo** %polygon_info, align 8, !dbg !13602
  %edges33 = getelementptr inbounds %struct._PolygonInfo, %struct._PolygonInfo* %35, i32 0, i32 0, !dbg !13603
  %36 = load %struct._EdgeInfo*, %struct._EdgeInfo** %edges33, align 8, !dbg !13603
  %37 = load i64, i64* %edge, align 8, !dbg !13604
  %arrayidx34 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %36, i64 %37, !dbg !13602
  %number_points35 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %arrayidx34, i32 0, i32 3, !dbg !13605
  store i64 %34, i64* %number_points35, align 8, !dbg !13606
  %38 = load %struct._PolygonInfo*, %struct._PolygonInfo** %polygon_info, align 8, !dbg !13607
  %edges36 = getelementptr inbounds %struct._PolygonInfo, %struct._PolygonInfo* %38, i32 0, i32 0, !dbg !13608
  %39 = load %struct._EdgeInfo*, %struct._EdgeInfo** %edges36, align 8, !dbg !13608
  %40 = load i64, i64* %edge, align 8, !dbg !13609
  %arrayidx37 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %39, i64 %40, !dbg !13607
  %scanline = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %arrayidx37, i32 0, i32 1, !dbg !13610
  store double -1.000000e+00, double* %scanline, align 8, !dbg !13611
  %41 = load %struct._PolygonInfo*, %struct._PolygonInfo** %polygon_info, align 8, !dbg !13612
  %edges38 = getelementptr inbounds %struct._PolygonInfo, %struct._PolygonInfo* %41, i32 0, i32 0, !dbg !13613
  %42 = load %struct._EdgeInfo*, %struct._EdgeInfo** %edges38, align 8, !dbg !13613
  %43 = load i64, i64* %edge, align 8, !dbg !13614
  %arrayidx39 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %42, i64 %43, !dbg !13612
  %highwater = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %arrayidx39, i32 0, i32 6, !dbg !13615
  store i64 0, i64* %highwater, align 8, !dbg !13616
  %44 = load i32, i32* %ghostline, align 4, !dbg !13617
  %45 = load %struct._PolygonInfo*, %struct._PolygonInfo** %polygon_info, align 8, !dbg !13618
  %edges40 = getelementptr inbounds %struct._PolygonInfo, %struct._PolygonInfo* %45, i32 0, i32 0, !dbg !13619
  %46 = load %struct._EdgeInfo*, %struct._EdgeInfo** %edges40, align 8, !dbg !13619
  %47 = load i64, i64* %edge, align 8, !dbg !13620
  %arrayidx41 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %46, i64 %47, !dbg !13618
  %ghostline42 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %arrayidx41, i32 0, i32 5, !dbg !13621
  store i32 %44, i32* %ghostline42, align 8, !dbg !13622
  %48 = load i64, i64* %direction, align 8, !dbg !13623
  %cmp43 = icmp sgt i64 %48, 0, !dbg !13624
  %conv = zext i1 %cmp43 to i32, !dbg !13624
  %conv44 = sext i32 %conv to i64, !dbg !13625
  %49 = load %struct._PolygonInfo*, %struct._PolygonInfo** %polygon_info, align 8, !dbg !13626
  %edges45 = getelementptr inbounds %struct._PolygonInfo, %struct._PolygonInfo* %49, i32 0, i32 0, !dbg !13627
  %50 = load %struct._EdgeInfo*, %struct._EdgeInfo** %edges45, align 8, !dbg !13627
  %51 = load i64, i64* %edge, align 8, !dbg !13628
  %arrayidx46 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %50, i64 %51, !dbg !13626
  %direction47 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %arrayidx46, i32 0, i32 4, !dbg !13629
  store i64 %conv44, i64* %direction47, align 8, !dbg !13630
  %52 = load i64, i64* %direction, align 8, !dbg !13631
  %cmp48 = icmp slt i64 %52, 0, !dbg !13633
  br i1 %cmp48, label %if.then50, label %if.end51, !dbg !13634

if.then50:                                        ; preds = %if.end32
  %53 = load %struct._PointInfo*, %struct._PointInfo** %points, align 8, !dbg !13635
  %54 = load i64, i64* %n, align 8, !dbg !13636
  call void @ReversePoints(%struct._PointInfo* %53, i64 %54), !dbg !13637
  br label %if.end51, !dbg !13637

if.end51:                                         ; preds = %if.then50, %if.end32
  %55 = load %struct._PointInfo*, %struct._PointInfo** %points, align 8, !dbg !13638
  %56 = load %struct._PolygonInfo*, %struct._PolygonInfo** %polygon_info, align 8, !dbg !13639
  %edges52 = getelementptr inbounds %struct._PolygonInfo, %struct._PolygonInfo* %56, i32 0, i32 0, !dbg !13640
  %57 = load %struct._EdgeInfo*, %struct._EdgeInfo** %edges52, align 8, !dbg !13640
  %58 = load i64, i64* %edge, align 8, !dbg !13641
  %arrayidx53 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %57, i64 %58, !dbg !13639
  %points54 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %arrayidx53, i32 0, i32 2, !dbg !13642
  store %struct._PointInfo* %55, %struct._PointInfo** %points54, align 8, !dbg !13643
  %59 = load %struct._PolygonInfo*, %struct._PolygonInfo** %polygon_info, align 8, !dbg !13644
  %edges55 = getelementptr inbounds %struct._PolygonInfo, %struct._PolygonInfo* %59, i32 0, i32 0, !dbg !13645
  %60 = load %struct._EdgeInfo*, %struct._EdgeInfo** %edges55, align 8, !dbg !13645
  %61 = load i64, i64* %edge, align 8, !dbg !13646
  %arrayidx56 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %60, i64 %61, !dbg !13644
  %bounds57 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %arrayidx56, i32 0, i32 0, !dbg !13647
  %62 = bitcast %struct._SegmentInfo* %bounds57 to i8*, !dbg !13648
  %63 = bitcast %struct._SegmentInfo* %bounds to i8*, !dbg !13648
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %62, i8* align 8 %63, i64 32, i1 false), !dbg !13648
  %64 = load %struct._PointInfo*, %struct._PointInfo** %points, align 8, !dbg !13649
  %arrayidx58 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %64, i64 0, !dbg !13649
  %y = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx58, i32 0, i32 1, !dbg !13650
  %65 = load double, double* %y, align 8, !dbg !13650
  %66 = load %struct._PolygonInfo*, %struct._PolygonInfo** %polygon_info, align 8, !dbg !13651
  %edges59 = getelementptr inbounds %struct._PolygonInfo, %struct._PolygonInfo* %66, i32 0, i32 0, !dbg !13652
  %67 = load %struct._EdgeInfo*, %struct._EdgeInfo** %edges59, align 8, !dbg !13652
  %68 = load i64, i64* %edge, align 8, !dbg !13653
  %arrayidx60 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %67, i64 %68, !dbg !13651
  %bounds61 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %arrayidx60, i32 0, i32 0, !dbg !13654
  %y1 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds61, i32 0, i32 1, !dbg !13655
  store double %65, double* %y1, align 8, !dbg !13656
  %69 = load %struct._PointInfo*, %struct._PointInfo** %points, align 8, !dbg !13657
  %70 = load i64, i64* %n, align 8, !dbg !13658
  %sub = sub nsw i64 %70, 1, !dbg !13659
  %arrayidx62 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %69, i64 %sub, !dbg !13657
  %y63 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx62, i32 0, i32 1, !dbg !13660
  %71 = load double, double* %y63, align 8, !dbg !13660
  %72 = load %struct._PolygonInfo*, %struct._PolygonInfo** %polygon_info, align 8, !dbg !13661
  %edges64 = getelementptr inbounds %struct._PolygonInfo, %struct._PolygonInfo* %72, i32 0, i32 0, !dbg !13662
  %73 = load %struct._EdgeInfo*, %struct._EdgeInfo** %edges64, align 8, !dbg !13662
  %74 = load i64, i64* %edge, align 8, !dbg !13663
  %arrayidx65 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %73, i64 %74, !dbg !13661
  %bounds66 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %arrayidx65, i32 0, i32 0, !dbg !13664
  %y2 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds66, i32 0, i32 3, !dbg !13665
  store double %71, double* %y2, align 8, !dbg !13666
  store %struct._PointInfo* null, %struct._PointInfo** %points, align 8, !dbg !13667
  store i32 0, i32* %ghostline, align 4, !dbg !13668
  %75 = load i64, i64* %edge, align 8, !dbg !13669
  %inc = add i64 %75, 1, !dbg !13669
  store i64 %inc, i64* %edge, align 8, !dbg !13669
  br label %if.end67, !dbg !13670

if.end67:                                         ; preds = %if.end51, %land.lhs.true, %if.then19
  %76 = load %struct._PointInfo*, %struct._PointInfo** %points, align 8, !dbg !13671
  %cmp68 = icmp eq %struct._PointInfo* %76, null, !dbg !13673
  br i1 %cmp68, label %if.then70, label %if.end76, !dbg !13674

if.then70:                                        ; preds = %if.end67
  store i64 16, i64* %number_points, align 8, !dbg !13675
  %77 = load i64, i64* %number_points, align 8, !dbg !13677
  %call71 = call i8* @AcquireQuantumMemory(i64 %77, i64 16) #14, !dbg !13678
  %78 = bitcast i8* %call71 to %struct._PointInfo*, !dbg !13679
  store %struct._PointInfo* %78, %struct._PointInfo** %points, align 8, !dbg !13680
  %79 = load %struct._PointInfo*, %struct._PointInfo** %points, align 8, !dbg !13681
  %cmp72 = icmp eq %struct._PointInfo* %79, null, !dbg !13683
  br i1 %cmp72, label %if.then74, label %if.end75, !dbg !13684

if.then74:                                        ; preds = %if.then70
  store %struct._PolygonInfo* null, %struct._PolygonInfo** %retval, align 8, !dbg !13685
  br label %return, !dbg !13685

if.end75:                                         ; preds = %if.then70
  br label %if.end76, !dbg !13686

if.end76:                                         ; preds = %if.end75, %if.end67
  %80 = load %struct._PathInfo*, %struct._PathInfo** %path_info.addr, align 8, !dbg !13687
  %81 = load i64, i64* %i, align 8, !dbg !13688
  %arrayidx77 = getelementptr inbounds %struct._PathInfo, %struct._PathInfo* %80, i64 %81, !dbg !13687
  %code78 = getelementptr inbounds %struct._PathInfo, %struct._PathInfo* %arrayidx77, i32 0, i32 1, !dbg !13689
  %82 = load i32, i32* %code78, align 8, !dbg !13689
  %cmp79 = icmp eq i32 %82, 2, !dbg !13690
  %83 = zext i1 %cmp79 to i64, !dbg !13687
  %cond = select i1 %cmp79, i32 1, i32 0, !dbg !13687
  store i32 %cond, i32* %ghostline, align 4, !dbg !13691
  %84 = load %struct._PathInfo*, %struct._PathInfo** %path_info.addr, align 8, !dbg !13692
  %85 = load i64, i64* %i, align 8, !dbg !13693
  %arrayidx81 = getelementptr inbounds %struct._PathInfo, %struct._PathInfo* %84, i64 %85, !dbg !13692
  %point82 = getelementptr inbounds %struct._PathInfo, %struct._PathInfo* %arrayidx81, i32 0, i32 0, !dbg !13694
  %86 = bitcast %struct._PointInfo* %point to i8*, !dbg !13694
  %87 = bitcast %struct._PointInfo* %point82 to i8*, !dbg !13694
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %86, i8* align 8 %87, i64 16, i1 false), !dbg !13694
  %88 = load %struct._PointInfo*, %struct._PointInfo** %points, align 8, !dbg !13695
  %arrayidx83 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %88, i64 0, !dbg !13695
  %89 = bitcast %struct._PointInfo* %arrayidx83 to i8*, !dbg !13696
  %90 = bitcast %struct._PointInfo* %point to i8*, !dbg !13696
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %89, i8* align 8 %90, i64 16, i1 false), !dbg !13696
  %x = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 0, !dbg !13697
  %91 = load double, double* %x, align 8, !dbg !13697
  %x1 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds, i32 0, i32 0, !dbg !13698
  store double %91, double* %x1, align 8, !dbg !13699
  %x84 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 0, !dbg !13700
  %92 = load double, double* %x84, align 8, !dbg !13700
  %x2 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds, i32 0, i32 2, !dbg !13701
  store double %92, double* %x2, align 8, !dbg !13702
  store i64 0, i64* %direction, align 8, !dbg !13703
  store i64 1, i64* %n, align 8, !dbg !13704
  br label %for.inc, !dbg !13705

if.end85:                                         ; preds = %lor.lhs.false15
  %93 = load %struct._PathInfo*, %struct._PathInfo** %path_info.addr, align 8, !dbg !13706
  %94 = load i64, i64* %i, align 8, !dbg !13707
  %arrayidx86 = getelementptr inbounds %struct._PathInfo, %struct._PathInfo* %93, i64 %94, !dbg !13706
  %point87 = getelementptr inbounds %struct._PathInfo, %struct._PathInfo* %arrayidx86, i32 0, i32 0, !dbg !13708
  %y88 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point87, i32 0, i32 1, !dbg !13709
  %95 = load double, double* %y88, align 8, !dbg !13709
  %y89 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 1, !dbg !13710
  %96 = load double, double* %y89, align 8, !dbg !13710
  %cmp90 = fcmp ogt double %95, %96, !dbg !13711
  br i1 %cmp90, label %lor.end, label %lor.rhs, !dbg !13712

lor.rhs:                                          ; preds = %if.end85
  %97 = load %struct._PathInfo*, %struct._PathInfo** %path_info.addr, align 8, !dbg !13713
  %98 = load i64, i64* %i, align 8, !dbg !13714
  %arrayidx92 = getelementptr inbounds %struct._PathInfo, %struct._PathInfo* %97, i64 %98, !dbg !13713
  %point93 = getelementptr inbounds %struct._PathInfo, %struct._PathInfo* %arrayidx92, i32 0, i32 0, !dbg !13715
  %y94 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point93, i32 0, i32 1, !dbg !13716
  %99 = load double, double* %y94, align 8, !dbg !13716
  %y95 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 1, !dbg !13717
  %100 = load double, double* %y95, align 8, !dbg !13717
  %cmp96 = fcmp oeq double %99, %100, !dbg !13718
  br i1 %cmp96, label %land.rhs, label %land.end, !dbg !13719

land.rhs:                                         ; preds = %lor.rhs
  %101 = load %struct._PathInfo*, %struct._PathInfo** %path_info.addr, align 8, !dbg !13720
  %102 = load i64, i64* %i, align 8, !dbg !13721
  %arrayidx98 = getelementptr inbounds %struct._PathInfo, %struct._PathInfo* %101, i64 %102, !dbg !13720
  %point99 = getelementptr inbounds %struct._PathInfo, %struct._PathInfo* %arrayidx98, i32 0, i32 0, !dbg !13722
  %x100 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point99, i32 0, i32 0, !dbg !13723
  %103 = load double, double* %x100, align 8, !dbg !13723
  %x101 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 0, !dbg !13724
  %104 = load double, double* %x101, align 8, !dbg !13724
  %cmp102 = fcmp ogt double %103, %104, !dbg !13725
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.rhs
  %105 = phi i1 [ false, %lor.rhs ], [ %cmp102, %land.rhs ], !dbg !13726
  br label %lor.end, !dbg !13712

lor.end:                                          ; preds = %land.end, %if.end85
  %106 = phi i1 [ true, %if.end85 ], [ %105, %land.end ]
  %107 = zext i1 %106 to i64, !dbg !13727
  %cond104 = select i1 %106, i32 1, i32 -1, !dbg !13727
  %conv105 = sext i32 %cond104 to i64, !dbg !13727
  store i64 %conv105, i64* %next_direction, align 8, !dbg !13728
  %108 = load %struct._PointInfo*, %struct._PointInfo** %points, align 8, !dbg !13729
  %cmp106 = icmp ne %struct._PointInfo* %108, null, !dbg !13731
  br i1 %cmp106, label %land.lhs.true108, label %if.end182, !dbg !13732

land.lhs.true108:                                 ; preds = %lor.end
  %109 = load i64, i64* %direction, align 8, !dbg !13733
  %cmp109 = icmp ne i64 %109, 0, !dbg !13734
  br i1 %cmp109, label %land.lhs.true111, label %if.end182, !dbg !13735

land.lhs.true111:                                 ; preds = %land.lhs.true108
  %110 = load i64, i64* %direction, align 8, !dbg !13736
  %111 = load i64, i64* %next_direction, align 8, !dbg !13737
  %cmp112 = icmp ne i64 %110, %111, !dbg !13738
  br i1 %cmp112, label %if.then114, label %if.end182, !dbg !13739

if.then114:                                       ; preds = %land.lhs.true111
  %112 = load %struct._PointInfo*, %struct._PointInfo** %points, align 8, !dbg !13740
  %113 = load i64, i64* %n, align 8, !dbg !13742
  %sub115 = sub nsw i64 %113, 1, !dbg !13743
  %arrayidx116 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %112, i64 %sub115, !dbg !13740
  %114 = bitcast %struct._PointInfo* %point to i8*, !dbg !13740
  %115 = bitcast %struct._PointInfo* %arrayidx116 to i8*, !dbg !13740
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %114, i8* align 8 %115, i64 16, i1 false), !dbg !13740
  %116 = load i64, i64* %edge, align 8, !dbg !13744
  %117 = load i64, i64* %number_edges, align 8, !dbg !13746
  %cmp117 = icmp eq i64 %116, %117, !dbg !13747
  br i1 %cmp117, label %if.then119, label %if.end129, !dbg !13748

if.then119:                                       ; preds = %if.then114
  %118 = load i64, i64* %number_edges, align 8, !dbg !13749
  %shl120 = shl i64 %118, 1, !dbg !13749
  store i64 %shl120, i64* %number_edges, align 8, !dbg !13749
  %119 = load %struct._PolygonInfo*, %struct._PolygonInfo** %polygon_info, align 8, !dbg !13751
  %edges121 = getelementptr inbounds %struct._PolygonInfo, %struct._PolygonInfo* %119, i32 0, i32 0, !dbg !13752
  %120 = load %struct._EdgeInfo*, %struct._EdgeInfo** %edges121, align 8, !dbg !13752
  %121 = bitcast %struct._EdgeInfo* %120 to i8*, !dbg !13751
  %122 = load i64, i64* %number_edges, align 8, !dbg !13753
  %call122 = call i8* @ResizeQuantumMemory(i8* %121, i64 %122, i64 80) #16, !dbg !13754
  %123 = bitcast i8* %call122 to %struct._EdgeInfo*, !dbg !13755
  %124 = load %struct._PolygonInfo*, %struct._PolygonInfo** %polygon_info, align 8, !dbg !13756
  %edges123 = getelementptr inbounds %struct._PolygonInfo, %struct._PolygonInfo* %124, i32 0, i32 0, !dbg !13757
  store %struct._EdgeInfo* %123, %struct._EdgeInfo** %edges123, align 8, !dbg !13758
  %125 = load %struct._PolygonInfo*, %struct._PolygonInfo** %polygon_info, align 8, !dbg !13759
  %edges124 = getelementptr inbounds %struct._PolygonInfo, %struct._PolygonInfo* %125, i32 0, i32 0, !dbg !13761
  %126 = load %struct._EdgeInfo*, %struct._EdgeInfo** %edges124, align 8, !dbg !13761
  %cmp125 = icmp eq %struct._EdgeInfo* %126, null, !dbg !13762
  br i1 %cmp125, label %if.then127, label %if.end128, !dbg !13763

if.then127:                                       ; preds = %if.then119
  store %struct._PolygonInfo* null, %struct._PolygonInfo** %retval, align 8, !dbg !13764
  br label %return, !dbg !13764

if.end128:                                        ; preds = %if.then119
  br label %if.end129, !dbg !13765

if.end129:                                        ; preds = %if.end128, %if.then114
  %127 = load i64, i64* %n, align 8, !dbg !13766
  %128 = load %struct._PolygonInfo*, %struct._PolygonInfo** %polygon_info, align 8, !dbg !13767
  %edges130 = getelementptr inbounds %struct._PolygonInfo, %struct._PolygonInfo* %128, i32 0, i32 0, !dbg !13768
  %129 = load %struct._EdgeInfo*, %struct._EdgeInfo** %edges130, align 8, !dbg !13768
  %130 = load i64, i64* %edge, align 8, !dbg !13769
  %arrayidx131 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %129, i64 %130, !dbg !13767
  %number_points132 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %arrayidx131, i32 0, i32 3, !dbg !13770
  store i64 %127, i64* %number_points132, align 8, !dbg !13771
  %131 = load %struct._PolygonInfo*, %struct._PolygonInfo** %polygon_info, align 8, !dbg !13772
  %edges133 = getelementptr inbounds %struct._PolygonInfo, %struct._PolygonInfo* %131, i32 0, i32 0, !dbg !13773
  %132 = load %struct._EdgeInfo*, %struct._EdgeInfo** %edges133, align 8, !dbg !13773
  %133 = load i64, i64* %edge, align 8, !dbg !13774
  %arrayidx134 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %132, i64 %133, !dbg !13772
  %scanline135 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %arrayidx134, i32 0, i32 1, !dbg !13775
  store double -1.000000e+00, double* %scanline135, align 8, !dbg !13776
  %134 = load %struct._PolygonInfo*, %struct._PolygonInfo** %polygon_info, align 8, !dbg !13777
  %edges136 = getelementptr inbounds %struct._PolygonInfo, %struct._PolygonInfo* %134, i32 0, i32 0, !dbg !13778
  %135 = load %struct._EdgeInfo*, %struct._EdgeInfo** %edges136, align 8, !dbg !13778
  %136 = load i64, i64* %edge, align 8, !dbg !13779
  %arrayidx137 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %135, i64 %136, !dbg !13777
  %highwater138 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %arrayidx137, i32 0, i32 6, !dbg !13780
  store i64 0, i64* %highwater138, align 8, !dbg !13781
  %137 = load i32, i32* %ghostline, align 4, !dbg !13782
  %138 = load %struct._PolygonInfo*, %struct._PolygonInfo** %polygon_info, align 8, !dbg !13783
  %edges139 = getelementptr inbounds %struct._PolygonInfo, %struct._PolygonInfo* %138, i32 0, i32 0, !dbg !13784
  %139 = load %struct._EdgeInfo*, %struct._EdgeInfo** %edges139, align 8, !dbg !13784
  %140 = load i64, i64* %edge, align 8, !dbg !13785
  %arrayidx140 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %139, i64 %140, !dbg !13783
  %ghostline141 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %arrayidx140, i32 0, i32 5, !dbg !13786
  store i32 %137, i32* %ghostline141, align 8, !dbg !13787
  %141 = load i64, i64* %direction, align 8, !dbg !13788
  %cmp142 = icmp sgt i64 %141, 0, !dbg !13789
  %conv143 = zext i1 %cmp142 to i32, !dbg !13789
  %conv144 = sext i32 %conv143 to i64, !dbg !13790
  %142 = load %struct._PolygonInfo*, %struct._PolygonInfo** %polygon_info, align 8, !dbg !13791
  %edges145 = getelementptr inbounds %struct._PolygonInfo, %struct._PolygonInfo* %142, i32 0, i32 0, !dbg !13792
  %143 = load %struct._EdgeInfo*, %struct._EdgeInfo** %edges145, align 8, !dbg !13792
  %144 = load i64, i64* %edge, align 8, !dbg !13793
  %arrayidx146 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %143, i64 %144, !dbg !13791
  %direction147 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %arrayidx146, i32 0, i32 4, !dbg !13794
  store i64 %conv144, i64* %direction147, align 8, !dbg !13795
  %145 = load i64, i64* %direction, align 8, !dbg !13796
  %cmp148 = icmp slt i64 %145, 0, !dbg !13798
  br i1 %cmp148, label %if.then150, label %if.end151, !dbg !13799

if.then150:                                       ; preds = %if.end129
  %146 = load %struct._PointInfo*, %struct._PointInfo** %points, align 8, !dbg !13800
  %147 = load i64, i64* %n, align 8, !dbg !13801
  call void @ReversePoints(%struct._PointInfo* %146, i64 %147), !dbg !13802
  br label %if.end151, !dbg !13802

if.end151:                                        ; preds = %if.then150, %if.end129
  %148 = load %struct._PointInfo*, %struct._PointInfo** %points, align 8, !dbg !13803
  %149 = load %struct._PolygonInfo*, %struct._PolygonInfo** %polygon_info, align 8, !dbg !13804
  %edges152 = getelementptr inbounds %struct._PolygonInfo, %struct._PolygonInfo* %149, i32 0, i32 0, !dbg !13805
  %150 = load %struct._EdgeInfo*, %struct._EdgeInfo** %edges152, align 8, !dbg !13805
  %151 = load i64, i64* %edge, align 8, !dbg !13806
  %arrayidx153 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %150, i64 %151, !dbg !13804
  %points154 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %arrayidx153, i32 0, i32 2, !dbg !13807
  store %struct._PointInfo* %148, %struct._PointInfo** %points154, align 8, !dbg !13808
  %152 = load %struct._PolygonInfo*, %struct._PolygonInfo** %polygon_info, align 8, !dbg !13809
  %edges155 = getelementptr inbounds %struct._PolygonInfo, %struct._PolygonInfo* %152, i32 0, i32 0, !dbg !13810
  %153 = load %struct._EdgeInfo*, %struct._EdgeInfo** %edges155, align 8, !dbg !13810
  %154 = load i64, i64* %edge, align 8, !dbg !13811
  %arrayidx156 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %153, i64 %154, !dbg !13809
  %bounds157 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %arrayidx156, i32 0, i32 0, !dbg !13812
  %155 = bitcast %struct._SegmentInfo* %bounds157 to i8*, !dbg !13813
  %156 = bitcast %struct._SegmentInfo* %bounds to i8*, !dbg !13813
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %155, i8* align 8 %156, i64 32, i1 false), !dbg !13813
  %157 = load %struct._PointInfo*, %struct._PointInfo** %points, align 8, !dbg !13814
  %arrayidx158 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %157, i64 0, !dbg !13814
  %y159 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx158, i32 0, i32 1, !dbg !13815
  %158 = load double, double* %y159, align 8, !dbg !13815
  %159 = load %struct._PolygonInfo*, %struct._PolygonInfo** %polygon_info, align 8, !dbg !13816
  %edges160 = getelementptr inbounds %struct._PolygonInfo, %struct._PolygonInfo* %159, i32 0, i32 0, !dbg !13817
  %160 = load %struct._EdgeInfo*, %struct._EdgeInfo** %edges160, align 8, !dbg !13817
  %161 = load i64, i64* %edge, align 8, !dbg !13818
  %arrayidx161 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %160, i64 %161, !dbg !13816
  %bounds162 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %arrayidx161, i32 0, i32 0, !dbg !13819
  %y1163 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds162, i32 0, i32 1, !dbg !13820
  store double %158, double* %y1163, align 8, !dbg !13821
  %162 = load %struct._PointInfo*, %struct._PointInfo** %points, align 8, !dbg !13822
  %163 = load i64, i64* %n, align 8, !dbg !13823
  %sub164 = sub nsw i64 %163, 1, !dbg !13824
  %arrayidx165 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %162, i64 %sub164, !dbg !13822
  %y166 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx165, i32 0, i32 1, !dbg !13825
  %164 = load double, double* %y166, align 8, !dbg !13825
  %165 = load %struct._PolygonInfo*, %struct._PolygonInfo** %polygon_info, align 8, !dbg !13826
  %edges167 = getelementptr inbounds %struct._PolygonInfo, %struct._PolygonInfo* %165, i32 0, i32 0, !dbg !13827
  %166 = load %struct._EdgeInfo*, %struct._EdgeInfo** %edges167, align 8, !dbg !13827
  %167 = load i64, i64* %edge, align 8, !dbg !13828
  %arrayidx168 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %166, i64 %167, !dbg !13826
  %bounds169 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %arrayidx168, i32 0, i32 0, !dbg !13829
  %y2170 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds169, i32 0, i32 3, !dbg !13830
  store double %164, double* %y2170, align 8, !dbg !13831
  store i64 16, i64* %number_points, align 8, !dbg !13832
  %168 = load i64, i64* %number_points, align 8, !dbg !13833
  %call171 = call i8* @AcquireQuantumMemory(i64 %168, i64 16) #14, !dbg !13834
  %169 = bitcast i8* %call171 to %struct._PointInfo*, !dbg !13835
  store %struct._PointInfo* %169, %struct._PointInfo** %points, align 8, !dbg !13836
  %170 = load %struct._PointInfo*, %struct._PointInfo** %points, align 8, !dbg !13837
  %cmp172 = icmp eq %struct._PointInfo* %170, null, !dbg !13839
  br i1 %cmp172, label %if.then174, label %if.end175, !dbg !13840

if.then174:                                       ; preds = %if.end151
  store %struct._PolygonInfo* null, %struct._PolygonInfo** %retval, align 8, !dbg !13841
  br label %return, !dbg !13841

if.end175:                                        ; preds = %if.end151
  store i64 1, i64* %n, align 8, !dbg !13842
  store i32 0, i32* %ghostline, align 4, !dbg !13843
  %171 = load %struct._PointInfo*, %struct._PointInfo** %points, align 8, !dbg !13844
  %arrayidx176 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %171, i64 0, !dbg !13844
  %172 = bitcast %struct._PointInfo* %arrayidx176 to i8*, !dbg !13845
  %173 = bitcast %struct._PointInfo* %point to i8*, !dbg !13845
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %172, i8* align 8 %173, i64 16, i1 false), !dbg !13845
  %x177 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 0, !dbg !13846
  %174 = load double, double* %x177, align 8, !dbg !13846
  %x1178 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds, i32 0, i32 0, !dbg !13847
  store double %174, double* %x1178, align 8, !dbg !13848
  %x179 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 0, !dbg !13849
  %175 = load double, double* %x179, align 8, !dbg !13849
  %x2180 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds, i32 0, i32 2, !dbg !13850
  store double %175, double* %x2180, align 8, !dbg !13851
  %176 = load i64, i64* %edge, align 8, !dbg !13852
  %inc181 = add i64 %176, 1, !dbg !13852
  store i64 %inc181, i64* %edge, align 8, !dbg !13852
  br label %if.end182, !dbg !13853

if.end182:                                        ; preds = %if.end175, %land.lhs.true111, %land.lhs.true108, %lor.end
  %177 = load i64, i64* %next_direction, align 8, !dbg !13854
  store i64 %177, i64* %direction, align 8, !dbg !13855
  %178 = load %struct._PointInfo*, %struct._PointInfo** %points, align 8, !dbg !13856
  %cmp183 = icmp eq %struct._PointInfo* %178, null, !dbg !13858
  br i1 %cmp183, label %if.then185, label %if.end186, !dbg !13859

if.then185:                                       ; preds = %if.end182
  br label %for.inc, !dbg !13860

if.end186:                                        ; preds = %if.end182
  %179 = load i64, i64* %n, align 8, !dbg !13861
  %180 = load i64, i64* %number_points, align 8, !dbg !13863
  %cmp187 = icmp eq i64 %179, %180, !dbg !13864
  br i1 %cmp187, label %if.then189, label %if.end196, !dbg !13865

if.then189:                                       ; preds = %if.end186
  %181 = load i64, i64* %number_points, align 8, !dbg !13866
  %shl190 = shl i64 %181, 1, !dbg !13866
  store i64 %shl190, i64* %number_points, align 8, !dbg !13866
  %182 = load %struct._PointInfo*, %struct._PointInfo** %points, align 8, !dbg !13868
  %183 = bitcast %struct._PointInfo* %182 to i8*, !dbg !13868
  %184 = load i64, i64* %number_points, align 8, !dbg !13869
  %call191 = call i8* @ResizeQuantumMemory(i8* %183, i64 %184, i64 16) #16, !dbg !13870
  %185 = bitcast i8* %call191 to %struct._PointInfo*, !dbg !13871
  store %struct._PointInfo* %185, %struct._PointInfo** %points, align 8, !dbg !13872
  %186 = load %struct._PointInfo*, %struct._PointInfo** %points, align 8, !dbg !13873
  %cmp192 = icmp eq %struct._PointInfo* %186, null, !dbg !13875
  br i1 %cmp192, label %if.then194, label %if.end195, !dbg !13876

if.then194:                                       ; preds = %if.then189
  store %struct._PolygonInfo* null, %struct._PolygonInfo** %retval, align 8, !dbg !13877
  br label %return, !dbg !13877

if.end195:                                        ; preds = %if.then189
  br label %if.end196, !dbg !13878

if.end196:                                        ; preds = %if.end195, %if.end186
  %187 = load %struct._PathInfo*, %struct._PathInfo** %path_info.addr, align 8, !dbg !13879
  %188 = load i64, i64* %i, align 8, !dbg !13880
  %arrayidx197 = getelementptr inbounds %struct._PathInfo, %struct._PathInfo* %187, i64 %188, !dbg !13879
  %point198 = getelementptr inbounds %struct._PathInfo, %struct._PathInfo* %arrayidx197, i32 0, i32 0, !dbg !13881
  %189 = bitcast %struct._PointInfo* %point to i8*, !dbg !13881
  %190 = bitcast %struct._PointInfo* %point198 to i8*, !dbg !13881
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %189, i8* align 8 %190, i64 16, i1 false), !dbg !13881
  %191 = load %struct._PointInfo*, %struct._PointInfo** %points, align 8, !dbg !13882
  %192 = load i64, i64* %n, align 8, !dbg !13883
  %arrayidx199 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %191, i64 %192, !dbg !13882
  %193 = bitcast %struct._PointInfo* %arrayidx199 to i8*, !dbg !13884
  %194 = bitcast %struct._PointInfo* %point to i8*, !dbg !13884
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %193, i8* align 8 %194, i64 16, i1 false), !dbg !13884
  %x200 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 0, !dbg !13885
  %195 = load double, double* %x200, align 8, !dbg !13885
  %x1201 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds, i32 0, i32 0, !dbg !13887
  %196 = load double, double* %x1201, align 8, !dbg !13887
  %cmp202 = fcmp olt double %195, %196, !dbg !13888
  br i1 %cmp202, label %if.then204, label %if.end207, !dbg !13889

if.then204:                                       ; preds = %if.end196
  %x205 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 0, !dbg !13890
  %197 = load double, double* %x205, align 8, !dbg !13890
  %x1206 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds, i32 0, i32 0, !dbg !13891
  store double %197, double* %x1206, align 8, !dbg !13892
  br label %if.end207, !dbg !13893

if.end207:                                        ; preds = %if.then204, %if.end196
  %x208 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 0, !dbg !13894
  %198 = load double, double* %x208, align 8, !dbg !13894
  %x2209 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds, i32 0, i32 2, !dbg !13896
  %199 = load double, double* %x2209, align 8, !dbg !13896
  %cmp210 = fcmp ogt double %198, %199, !dbg !13897
  br i1 %cmp210, label %if.then212, label %if.end215, !dbg !13898

if.then212:                                       ; preds = %if.end207
  %x213 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 0, !dbg !13899
  %200 = load double, double* %x213, align 8, !dbg !13899
  %x2214 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds, i32 0, i32 2, !dbg !13900
  store double %200, double* %x2214, align 8, !dbg !13901
  br label %if.end215, !dbg !13902

if.end215:                                        ; preds = %if.then212, %if.end207
  %201 = load i64, i64* %n, align 8, !dbg !13903
  %inc216 = add nsw i64 %201, 1, !dbg !13903
  store i64 %inc216, i64* %n, align 8, !dbg !13903
  br label %for.inc, !dbg !13904

for.inc:                                          ; preds = %if.end215, %if.then185, %if.end76
  %202 = load i64, i64* %i, align 8, !dbg !13905
  %inc217 = add nsw i64 %202, 1, !dbg !13905
  store i64 %inc217, i64* %i, align 8, !dbg !13905
  br label %for.cond, !dbg !13906, !llvm.loop !13907

for.end:                                          ; preds = %for.cond
  %203 = load %struct._PointInfo*, %struct._PointInfo** %points, align 8, !dbg !13909
  %cmp218 = icmp ne %struct._PointInfo* %203, null, !dbg !13911
  br i1 %cmp218, label %if.then220, label %if.end281, !dbg !13912

if.then220:                                       ; preds = %for.end
  %204 = load i64, i64* %n, align 8, !dbg !13913
  %cmp221 = icmp slt i64 %204, 2, !dbg !13916
  br i1 %cmp221, label %if.then223, label %if.else, !dbg !13917

if.then223:                                       ; preds = %if.then220
  %205 = load %struct._PointInfo*, %struct._PointInfo** %points, align 8, !dbg !13918
  %206 = bitcast %struct._PointInfo* %205 to i8*, !dbg !13918
  %call224 = call i8* @RelinquishMagickMemory(i8* %206), !dbg !13919
  %207 = bitcast i8* %call224 to %struct._PointInfo*, !dbg !13920
  store %struct._PointInfo* %207, %struct._PointInfo** %points, align 8, !dbg !13921
  br label %if.end280, !dbg !13922

if.else:                                          ; preds = %if.then220
  %208 = load i64, i64* %edge, align 8, !dbg !13923
  %209 = load i64, i64* %number_edges, align 8, !dbg !13926
  %cmp225 = icmp eq i64 %208, %209, !dbg !13927
  br i1 %cmp225, label %if.then227, label %if.end237, !dbg !13928

if.then227:                                       ; preds = %if.else
  %210 = load i64, i64* %number_edges, align 8, !dbg !13929
  %shl228 = shl i64 %210, 1, !dbg !13929
  store i64 %shl228, i64* %number_edges, align 8, !dbg !13929
  %211 = load %struct._PolygonInfo*, %struct._PolygonInfo** %polygon_info, align 8, !dbg !13931
  %edges229 = getelementptr inbounds %struct._PolygonInfo, %struct._PolygonInfo* %211, i32 0, i32 0, !dbg !13932
  %212 = load %struct._EdgeInfo*, %struct._EdgeInfo** %edges229, align 8, !dbg !13932
  %213 = bitcast %struct._EdgeInfo* %212 to i8*, !dbg !13931
  %214 = load i64, i64* %number_edges, align 8, !dbg !13933
  %call230 = call i8* @ResizeQuantumMemory(i8* %213, i64 %214, i64 80) #16, !dbg !13934
  %215 = bitcast i8* %call230 to %struct._EdgeInfo*, !dbg !13935
  %216 = load %struct._PolygonInfo*, %struct._PolygonInfo** %polygon_info, align 8, !dbg !13936
  %edges231 = getelementptr inbounds %struct._PolygonInfo, %struct._PolygonInfo* %216, i32 0, i32 0, !dbg !13937
  store %struct._EdgeInfo* %215, %struct._EdgeInfo** %edges231, align 8, !dbg !13938
  %217 = load %struct._PolygonInfo*, %struct._PolygonInfo** %polygon_info, align 8, !dbg !13939
  %edges232 = getelementptr inbounds %struct._PolygonInfo, %struct._PolygonInfo* %217, i32 0, i32 0, !dbg !13941
  %218 = load %struct._EdgeInfo*, %struct._EdgeInfo** %edges232, align 8, !dbg !13941
  %cmp233 = icmp eq %struct._EdgeInfo* %218, null, !dbg !13942
  br i1 %cmp233, label %if.then235, label %if.end236, !dbg !13943

if.then235:                                       ; preds = %if.then227
  store %struct._PolygonInfo* null, %struct._PolygonInfo** %retval, align 8, !dbg !13944
  br label %return, !dbg !13944

if.end236:                                        ; preds = %if.then227
  br label %if.end237, !dbg !13945

if.end237:                                        ; preds = %if.end236, %if.else
  %219 = load i64, i64* %n, align 8, !dbg !13946
  %220 = load %struct._PolygonInfo*, %struct._PolygonInfo** %polygon_info, align 8, !dbg !13947
  %edges238 = getelementptr inbounds %struct._PolygonInfo, %struct._PolygonInfo* %220, i32 0, i32 0, !dbg !13948
  %221 = load %struct._EdgeInfo*, %struct._EdgeInfo** %edges238, align 8, !dbg !13948
  %222 = load i64, i64* %edge, align 8, !dbg !13949
  %arrayidx239 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %221, i64 %222, !dbg !13947
  %number_points240 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %arrayidx239, i32 0, i32 3, !dbg !13950
  store i64 %219, i64* %number_points240, align 8, !dbg !13951
  %223 = load %struct._PolygonInfo*, %struct._PolygonInfo** %polygon_info, align 8, !dbg !13952
  %edges241 = getelementptr inbounds %struct._PolygonInfo, %struct._PolygonInfo* %223, i32 0, i32 0, !dbg !13953
  %224 = load %struct._EdgeInfo*, %struct._EdgeInfo** %edges241, align 8, !dbg !13953
  %225 = load i64, i64* %edge, align 8, !dbg !13954
  %arrayidx242 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %224, i64 %225, !dbg !13952
  %scanline243 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %arrayidx242, i32 0, i32 1, !dbg !13955
  store double -1.000000e+00, double* %scanline243, align 8, !dbg !13956
  %226 = load %struct._PolygonInfo*, %struct._PolygonInfo** %polygon_info, align 8, !dbg !13957
  %edges244 = getelementptr inbounds %struct._PolygonInfo, %struct._PolygonInfo* %226, i32 0, i32 0, !dbg !13958
  %227 = load %struct._EdgeInfo*, %struct._EdgeInfo** %edges244, align 8, !dbg !13958
  %228 = load i64, i64* %edge, align 8, !dbg !13959
  %arrayidx245 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %227, i64 %228, !dbg !13957
  %highwater246 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %arrayidx245, i32 0, i32 6, !dbg !13960
  store i64 0, i64* %highwater246, align 8, !dbg !13961
  %229 = load i32, i32* %ghostline, align 4, !dbg !13962
  %230 = load %struct._PolygonInfo*, %struct._PolygonInfo** %polygon_info, align 8, !dbg !13963
  %edges247 = getelementptr inbounds %struct._PolygonInfo, %struct._PolygonInfo* %230, i32 0, i32 0, !dbg !13964
  %231 = load %struct._EdgeInfo*, %struct._EdgeInfo** %edges247, align 8, !dbg !13964
  %232 = load i64, i64* %edge, align 8, !dbg !13965
  %arrayidx248 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %231, i64 %232, !dbg !13963
  %ghostline249 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %arrayidx248, i32 0, i32 5, !dbg !13966
  store i32 %229, i32* %ghostline249, align 8, !dbg !13967
  %233 = load i64, i64* %direction, align 8, !dbg !13968
  %cmp250 = icmp sgt i64 %233, 0, !dbg !13969
  %conv251 = zext i1 %cmp250 to i32, !dbg !13969
  %conv252 = sext i32 %conv251 to i64, !dbg !13970
  %234 = load %struct._PolygonInfo*, %struct._PolygonInfo** %polygon_info, align 8, !dbg !13971
  %edges253 = getelementptr inbounds %struct._PolygonInfo, %struct._PolygonInfo* %234, i32 0, i32 0, !dbg !13972
  %235 = load %struct._EdgeInfo*, %struct._EdgeInfo** %edges253, align 8, !dbg !13972
  %236 = load i64, i64* %edge, align 8, !dbg !13973
  %arrayidx254 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %235, i64 %236, !dbg !13971
  %direction255 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %arrayidx254, i32 0, i32 4, !dbg !13974
  store i64 %conv252, i64* %direction255, align 8, !dbg !13975
  %237 = load i64, i64* %direction, align 8, !dbg !13976
  %cmp256 = icmp slt i64 %237, 0, !dbg !13978
  br i1 %cmp256, label %if.then258, label %if.end259, !dbg !13979

if.then258:                                       ; preds = %if.end237
  %238 = load %struct._PointInfo*, %struct._PointInfo** %points, align 8, !dbg !13980
  %239 = load i64, i64* %n, align 8, !dbg !13981
  call void @ReversePoints(%struct._PointInfo* %238, i64 %239), !dbg !13982
  br label %if.end259, !dbg !13982

if.end259:                                        ; preds = %if.then258, %if.end237
  %240 = load %struct._PointInfo*, %struct._PointInfo** %points, align 8, !dbg !13983
  %241 = load %struct._PolygonInfo*, %struct._PolygonInfo** %polygon_info, align 8, !dbg !13984
  %edges260 = getelementptr inbounds %struct._PolygonInfo, %struct._PolygonInfo* %241, i32 0, i32 0, !dbg !13985
  %242 = load %struct._EdgeInfo*, %struct._EdgeInfo** %edges260, align 8, !dbg !13985
  %243 = load i64, i64* %edge, align 8, !dbg !13986
  %arrayidx261 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %242, i64 %243, !dbg !13984
  %points262 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %arrayidx261, i32 0, i32 2, !dbg !13987
  store %struct._PointInfo* %240, %struct._PointInfo** %points262, align 8, !dbg !13988
  %244 = load %struct._PolygonInfo*, %struct._PolygonInfo** %polygon_info, align 8, !dbg !13989
  %edges263 = getelementptr inbounds %struct._PolygonInfo, %struct._PolygonInfo* %244, i32 0, i32 0, !dbg !13990
  %245 = load %struct._EdgeInfo*, %struct._EdgeInfo** %edges263, align 8, !dbg !13990
  %246 = load i64, i64* %edge, align 8, !dbg !13991
  %arrayidx264 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %245, i64 %246, !dbg !13989
  %bounds265 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %arrayidx264, i32 0, i32 0, !dbg !13992
  %247 = bitcast %struct._SegmentInfo* %bounds265 to i8*, !dbg !13993
  %248 = bitcast %struct._SegmentInfo* %bounds to i8*, !dbg !13993
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %247, i8* align 8 %248, i64 32, i1 false), !dbg !13993
  %249 = load %struct._PointInfo*, %struct._PointInfo** %points, align 8, !dbg !13994
  %arrayidx266 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %249, i64 0, !dbg !13994
  %y267 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx266, i32 0, i32 1, !dbg !13995
  %250 = load double, double* %y267, align 8, !dbg !13995
  %251 = load %struct._PolygonInfo*, %struct._PolygonInfo** %polygon_info, align 8, !dbg !13996
  %edges268 = getelementptr inbounds %struct._PolygonInfo, %struct._PolygonInfo* %251, i32 0, i32 0, !dbg !13997
  %252 = load %struct._EdgeInfo*, %struct._EdgeInfo** %edges268, align 8, !dbg !13997
  %253 = load i64, i64* %edge, align 8, !dbg !13998
  %arrayidx269 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %252, i64 %253, !dbg !13996
  %bounds270 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %arrayidx269, i32 0, i32 0, !dbg !13999
  %y1271 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds270, i32 0, i32 1, !dbg !14000
  store double %250, double* %y1271, align 8, !dbg !14001
  %254 = load %struct._PointInfo*, %struct._PointInfo** %points, align 8, !dbg !14002
  %255 = load i64, i64* %n, align 8, !dbg !14003
  %sub272 = sub nsw i64 %255, 1, !dbg !14004
  %arrayidx273 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %254, i64 %sub272, !dbg !14002
  %y274 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx273, i32 0, i32 1, !dbg !14005
  %256 = load double, double* %y274, align 8, !dbg !14005
  %257 = load %struct._PolygonInfo*, %struct._PolygonInfo** %polygon_info, align 8, !dbg !14006
  %edges275 = getelementptr inbounds %struct._PolygonInfo, %struct._PolygonInfo* %257, i32 0, i32 0, !dbg !14007
  %258 = load %struct._EdgeInfo*, %struct._EdgeInfo** %edges275, align 8, !dbg !14007
  %259 = load i64, i64* %edge, align 8, !dbg !14008
  %arrayidx276 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %258, i64 %259, !dbg !14006
  %bounds277 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %arrayidx276, i32 0, i32 0, !dbg !14009
  %y2278 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds277, i32 0, i32 3, !dbg !14010
  store double %256, double* %y2278, align 8, !dbg !14011
  store i32 0, i32* %ghostline, align 4, !dbg !14012
  %260 = load i64, i64* %edge, align 8, !dbg !14013
  %inc279 = add i64 %260, 1, !dbg !14013
  store i64 %inc279, i64* %edge, align 8, !dbg !14013
  br label %if.end280

if.end280:                                        ; preds = %if.end259, %if.then223
  br label %if.end281, !dbg !14014

if.end281:                                        ; preds = %if.end280, %for.end
  %261 = load i64, i64* %edge, align 8, !dbg !14015
  %262 = load %struct._PolygonInfo*, %struct._PolygonInfo** %polygon_info, align 8, !dbg !14016
  %number_edges282 = getelementptr inbounds %struct._PolygonInfo, %struct._PolygonInfo* %262, i32 0, i32 1, !dbg !14017
  store i64 %261, i64* %number_edges282, align 8, !dbg !14018
  %263 = load %struct._PolygonInfo*, %struct._PolygonInfo** %polygon_info, align 8, !dbg !14019
  %edges283 = getelementptr inbounds %struct._PolygonInfo, %struct._PolygonInfo* %263, i32 0, i32 0, !dbg !14020
  %264 = load %struct._EdgeInfo*, %struct._EdgeInfo** %edges283, align 8, !dbg !14020
  %265 = bitcast %struct._EdgeInfo* %264 to i8*, !dbg !14019
  %266 = load %struct._PolygonInfo*, %struct._PolygonInfo** %polygon_info, align 8, !dbg !14021
  %number_edges284 = getelementptr inbounds %struct._PolygonInfo, %struct._PolygonInfo* %266, i32 0, i32 1, !dbg !14022
  %267 = load i64, i64* %number_edges284, align 8, !dbg !14022
  call void @qsort(i8* %265, i64 %267, i64 80, i32 (i8*, i8*)* @CompareEdges), !dbg !14023
  %call285 = call i32 @IsEventLogging(), !dbg !14024
  %cmp286 = icmp ne i32 %call285, 0, !dbg !14026
  br i1 %cmp286, label %if.then288, label %if.end289, !dbg !14027

if.then288:                                       ; preds = %if.end281
  %268 = load %struct._PolygonInfo*, %struct._PolygonInfo** %polygon_info, align 8, !dbg !14028
  call void @LogPolygonInfo(%struct._PolygonInfo* %268), !dbg !14029
  br label %if.end289, !dbg !14029

if.end289:                                        ; preds = %if.then288, %if.end281
  %269 = load %struct._PolygonInfo*, %struct._PolygonInfo** %polygon_info, align 8, !dbg !14030
  store %struct._PolygonInfo* %269, %struct._PolygonInfo** %retval, align 8, !dbg !14031
  br label %return, !dbg !14031

return:                                           ; preds = %if.end289, %if.then235, %if.then194, %if.then174, %if.then127, %if.then74, %if.then30, %if.then4, %if.then
  %270 = load %struct._PolygonInfo*, %struct._PolygonInfo** %retval, align 8, !dbg !14032
  ret %struct._PolygonInfo* %270, !dbg !14032
}

; Function Attrs: noinline nounwind uwtable
define internal void @LogPathInfo(%struct._PathInfo* %path_info) #0 !dbg !14033 {
entry:
  %path_info.addr = alloca %struct._PathInfo*, align 8
  %p = alloca %struct._PathInfo*, align 8
  store %struct._PathInfo* %path_info, %struct._PathInfo** %path_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PathInfo** %path_info.addr, metadata !14036, metadata !DIExpression()), !dbg !14037
  call void @llvm.dbg.declare(metadata %struct._PathInfo** %p, metadata !14038, metadata !DIExpression()), !dbg !14039
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 128, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 705, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.125, i64 0, i64 0)), !dbg !14040
  %0 = load %struct._PathInfo*, %struct._PathInfo** %path_info.addr, align 8, !dbg !14041
  store %struct._PathInfo* %0, %struct._PathInfo** %p, align 8, !dbg !14043
  br label %for.cond, !dbg !14044

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load %struct._PathInfo*, %struct._PathInfo** %p, align 8, !dbg !14045
  %code = getelementptr inbounds %struct._PathInfo, %struct._PathInfo* %1, i32 0, i32 1, !dbg !14047
  %2 = load i32, i32* %code, align 8, !dbg !14047
  %cmp = icmp ne i32 %2, 4, !dbg !14048
  br i1 %cmp, label %for.body, label %for.end, !dbg !14049

for.body:                                         ; preds = %for.cond
  %3 = load %struct._PathInfo*, %struct._PathInfo** %p, align 8, !dbg !14050
  %point = getelementptr inbounds %struct._PathInfo, %struct._PathInfo* %3, i32 0, i32 0, !dbg !14051
  %x = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 0, !dbg !14052
  %4 = load double, double* %x, align 8, !dbg !14052
  %5 = load %struct._PathInfo*, %struct._PathInfo** %p, align 8, !dbg !14053
  %point1 = getelementptr inbounds %struct._PathInfo, %struct._PathInfo* %5, i32 0, i32 0, !dbg !14054
  %y = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point1, i32 0, i32 1, !dbg !14055
  %6 = load double, double* %y, align 8, !dbg !14055
  %7 = load %struct._PathInfo*, %struct._PathInfo** %p, align 8, !dbg !14056
  %code2 = getelementptr inbounds %struct._PathInfo, %struct._PathInfo* %7, i32 0, i32 1, !dbg !14057
  %8 = load i32, i32* %code2, align 8, !dbg !14057
  %cmp3 = icmp eq i32 %8, 2, !dbg !14058
  br i1 %cmp3, label %cond.true, label %cond.false, !dbg !14056

cond.true:                                        ; preds = %for.body
  br label %cond.end17, !dbg !14056

cond.false:                                       ; preds = %for.body
  %9 = load %struct._PathInfo*, %struct._PathInfo** %p, align 8, !dbg !14059
  %code4 = getelementptr inbounds %struct._PathInfo, %struct._PathInfo* %9, i32 0, i32 1, !dbg !14060
  %10 = load i32, i32* %code4, align 8, !dbg !14060
  %cmp5 = icmp eq i32 %10, 1, !dbg !14061
  br i1 %cmp5, label %cond.true6, label %cond.false7, !dbg !14059

cond.true6:                                       ; preds = %cond.false
  br label %cond.end15, !dbg !14059

cond.false7:                                      ; preds = %cond.false
  %11 = load %struct._PathInfo*, %struct._PathInfo** %p, align 8, !dbg !14062
  %code8 = getelementptr inbounds %struct._PathInfo, %struct._PathInfo* %11, i32 0, i32 1, !dbg !14063
  %12 = load i32, i32* %code8, align 8, !dbg !14063
  %cmp9 = icmp eq i32 %12, 0, !dbg !14064
  br i1 %cmp9, label %cond.true10, label %cond.false11, !dbg !14062

cond.true10:                                      ; preds = %cond.false7
  br label %cond.end, !dbg !14062

cond.false11:                                     ; preds = %cond.false7
  %13 = load %struct._PathInfo*, %struct._PathInfo** %p, align 8, !dbg !14065
  %code12 = getelementptr inbounds %struct._PathInfo, %struct._PathInfo* %13, i32 0, i32 1, !dbg !14066
  %14 = load i32, i32* %code12, align 8, !dbg !14066
  %cmp13 = icmp eq i32 %14, 3, !dbg !14067
  %15 = zext i1 %cmp13 to i64, !dbg !14065
  %cond = select i1 %cmp13, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.130, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.112, i64 0, i64 0), !dbg !14065
  br label %cond.end, !dbg !14062

cond.end:                                         ; preds = %cond.false11, %cond.true10
  %cond14 = phi i8* [ getelementptr inbounds ([7 x i8], [7 x i8]* @.str.129, i64 0, i64 0), %cond.true10 ], [ %cond, %cond.false11 ], !dbg !14062
  br label %cond.end15, !dbg !14059

cond.end15:                                       ; preds = %cond.end, %cond.true6
  %cond16 = phi i8* [ getelementptr inbounds ([12 x i8], [12 x i8]* @.str.128, i64 0, i64 0), %cond.true6 ], [ %cond14, %cond.end ], !dbg !14059
  br label %cond.end17, !dbg !14056

cond.end17:                                       ; preds = %cond.end15, %cond.true
  %cond18 = phi i8* [ getelementptr inbounds ([17 x i8], [17 x i8]* @.str.127, i64 0, i64 0), %cond.true ], [ %cond16, %cond.end15 ], !dbg !14056
  %call19 = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 128, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 707, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.126, i64 0, i64 0), double %4, double %6, i8* %cond18), !dbg !14068
  br label %for.inc, !dbg !14069

for.inc:                                          ; preds = %cond.end17
  %16 = load %struct._PathInfo*, %struct._PathInfo** %p, align 8, !dbg !14070
  %incdec.ptr = getelementptr inbounds %struct._PathInfo, %struct._PathInfo* %16, i32 1, !dbg !14070
  store %struct._PathInfo* %incdec.ptr, %struct._PathInfo** %p, align 8, !dbg !14070
  br label %for.cond, !dbg !14071, !llvm.loop !14072

for.end:                                          ; preds = %for.cond
  %call20 = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 128, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 712, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.131, i64 0, i64 0)), !dbg !14074
  ret void, !dbg !14075
}

; Function Attrs: noinline nounwind uwtable
define internal void @ReversePoints(%struct._PointInfo* %points, i64 %number_points) #0 !dbg !14076 {
entry:
  %points.addr = alloca %struct._PointInfo*, align 8
  %number_points.addr = alloca i64, align 8
  %point = alloca %struct._PointInfo, align 8
  %i = alloca i64, align 8
  store %struct._PointInfo* %points, %struct._PointInfo** %points.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PointInfo** %points.addr, metadata !14079, metadata !DIExpression()), !dbg !14080
  store i64 %number_points, i64* %number_points.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %number_points.addr, metadata !14081, metadata !DIExpression()), !dbg !14082
  call void @llvm.dbg.declare(metadata %struct._PointInfo* %point, metadata !14083, metadata !DIExpression()), !dbg !14084
  call void @llvm.dbg.declare(metadata i64* %i, metadata !14085, metadata !DIExpression()), !dbg !14086
  store i64 0, i64* %i, align 8, !dbg !14087
  br label %for.cond, !dbg !14089

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i64, i64* %i, align 8, !dbg !14090
  %1 = load i64, i64* %number_points.addr, align 8, !dbg !14092
  %shr = lshr i64 %1, 1, !dbg !14093
  %cmp = icmp slt i64 %0, %shr, !dbg !14094
  br i1 %cmp, label %for.body, label %for.end, !dbg !14095

for.body:                                         ; preds = %for.cond
  %2 = load %struct._PointInfo*, %struct._PointInfo** %points.addr, align 8, !dbg !14096
  %3 = load i64, i64* %i, align 8, !dbg !14098
  %arrayidx = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %2, i64 %3, !dbg !14096
  %4 = bitcast %struct._PointInfo* %point to i8*, !dbg !14096
  %5 = bitcast %struct._PointInfo* %arrayidx to i8*, !dbg !14096
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 16, i1 false), !dbg !14096
  %6 = load %struct._PointInfo*, %struct._PointInfo** %points.addr, align 8, !dbg !14099
  %7 = load i64, i64* %i, align 8, !dbg !14100
  %arrayidx1 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %6, i64 %7, !dbg !14099
  %8 = load %struct._PointInfo*, %struct._PointInfo** %points.addr, align 8, !dbg !14101
  %9 = load i64, i64* %number_points.addr, align 8, !dbg !14102
  %10 = load i64, i64* %i, align 8, !dbg !14103
  %add = add nsw i64 %10, 1, !dbg !14104
  %sub = sub i64 %9, %add, !dbg !14105
  %arrayidx2 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %8, i64 %sub, !dbg !14101
  %11 = bitcast %struct._PointInfo* %arrayidx1 to i8*, !dbg !14101
  %12 = bitcast %struct._PointInfo* %arrayidx2 to i8*, !dbg !14101
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 16, i1 false), !dbg !14101
  %13 = load %struct._PointInfo*, %struct._PointInfo** %points.addr, align 8, !dbg !14106
  %14 = load i64, i64* %number_points.addr, align 8, !dbg !14107
  %15 = load i64, i64* %i, align 8, !dbg !14108
  %add3 = add nsw i64 %15, 1, !dbg !14109
  %sub4 = sub i64 %14, %add3, !dbg !14110
  %arrayidx5 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %13, i64 %sub4, !dbg !14106
  %16 = bitcast %struct._PointInfo* %arrayidx5 to i8*, !dbg !14111
  %17 = bitcast %struct._PointInfo* %point to i8*, !dbg !14111
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 16, i1 false), !dbg !14111
  br label %for.inc, !dbg !14112

for.inc:                                          ; preds = %for.body
  %18 = load i64, i64* %i, align 8, !dbg !14113
  %inc = add nsw i64 %18, 1, !dbg !14113
  store i64 %inc, i64* %i, align 8, !dbg !14113
  br label %for.cond, !dbg !14114, !llvm.loop !14115

for.end:                                          ; preds = %for.cond
  ret void, !dbg !14117
}

declare dso_local void @qsort(i8*, i64, i64, i32 (i8*, i8*)*) #3

; Function Attrs: noinline nounwind uwtable
define internal i32 @CompareEdges(i8* %x, i8* %y) #0 !dbg !14118 {
entry:
  %retval = alloca i32, align 4
  %x.addr = alloca i8*, align 8
  %y.addr = alloca i8*, align 8
  %p = alloca %struct._EdgeInfo*, align 8
  %q = alloca %struct._EdgeInfo*, align 8
  store i8* %x, i8** %x.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !14121, metadata !DIExpression()), !dbg !14122
  store i8* %y, i8** %y.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %y.addr, metadata !14123, metadata !DIExpression()), !dbg !14124
  call void @llvm.dbg.declare(metadata %struct._EdgeInfo** %p, metadata !14125, metadata !DIExpression()), !dbg !14126
  call void @llvm.dbg.declare(metadata %struct._EdgeInfo** %q, metadata !14127, metadata !DIExpression()), !dbg !14128
  %0 = load i8*, i8** %x.addr, align 8, !dbg !14129
  %1 = bitcast i8* %0 to %struct._EdgeInfo*, !dbg !14130
  store %struct._EdgeInfo* %1, %struct._EdgeInfo** %p, align 8, !dbg !14131
  %2 = load i8*, i8** %y.addr, align 8, !dbg !14132
  %3 = bitcast i8* %2 to %struct._EdgeInfo*, !dbg !14133
  store %struct._EdgeInfo* %3, %struct._EdgeInfo** %q, align 8, !dbg !14134
  %4 = load %struct._EdgeInfo*, %struct._EdgeInfo** %p, align 8, !dbg !14135
  %points = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %4, i32 0, i32 2, !dbg !14137
  %5 = load %struct._PointInfo*, %struct._PointInfo** %points, align 8, !dbg !14137
  %arrayidx = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %5, i64 0, !dbg !14135
  %y1 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx, i32 0, i32 1, !dbg !14138
  %6 = load double, double* %y1, align 8, !dbg !14138
  %sub = fsub double %6, 1.000000e-15, !dbg !14139
  %7 = load %struct._EdgeInfo*, %struct._EdgeInfo** %q, align 8, !dbg !14140
  %points2 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %7, i32 0, i32 2, !dbg !14141
  %8 = load %struct._PointInfo*, %struct._PointInfo** %points2, align 8, !dbg !14141
  %arrayidx3 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %8, i64 0, !dbg !14140
  %y4 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx3, i32 0, i32 1, !dbg !14142
  %9 = load double, double* %y4, align 8, !dbg !14142
  %cmp = fcmp ogt double %sub, %9, !dbg !14143
  br i1 %cmp, label %if.then, label %if.end, !dbg !14144

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !14145
  br label %return, !dbg !14145

if.end:                                           ; preds = %entry
  %10 = load %struct._EdgeInfo*, %struct._EdgeInfo** %p, align 8, !dbg !14146
  %points5 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %10, i32 0, i32 2, !dbg !14148
  %11 = load %struct._PointInfo*, %struct._PointInfo** %points5, align 8, !dbg !14148
  %arrayidx6 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %11, i64 0, !dbg !14146
  %y7 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx6, i32 0, i32 1, !dbg !14149
  %12 = load double, double* %y7, align 8, !dbg !14149
  %add = fadd double %12, 1.000000e-15, !dbg !14150
  %13 = load %struct._EdgeInfo*, %struct._EdgeInfo** %q, align 8, !dbg !14151
  %points8 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %13, i32 0, i32 2, !dbg !14152
  %14 = load %struct._PointInfo*, %struct._PointInfo** %points8, align 8, !dbg !14152
  %arrayidx9 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %14, i64 0, !dbg !14151
  %y10 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx9, i32 0, i32 1, !dbg !14153
  %15 = load double, double* %y10, align 8, !dbg !14153
  %cmp11 = fcmp olt double %add, %15, !dbg !14154
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !14155

if.then12:                                        ; preds = %if.end
  store i32 -1, i32* %retval, align 4, !dbg !14156
  br label %return, !dbg !14156

if.end13:                                         ; preds = %if.end
  %16 = load %struct._EdgeInfo*, %struct._EdgeInfo** %p, align 8, !dbg !14157
  %points14 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %16, i32 0, i32 2, !dbg !14159
  %17 = load %struct._PointInfo*, %struct._PointInfo** %points14, align 8, !dbg !14159
  %arrayidx15 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %17, i64 0, !dbg !14157
  %x16 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx15, i32 0, i32 0, !dbg !14160
  %18 = load double, double* %x16, align 8, !dbg !14160
  %sub17 = fsub double %18, 1.000000e-15, !dbg !14161
  %19 = load %struct._EdgeInfo*, %struct._EdgeInfo** %q, align 8, !dbg !14162
  %points18 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %19, i32 0, i32 2, !dbg !14163
  %20 = load %struct._PointInfo*, %struct._PointInfo** %points18, align 8, !dbg !14163
  %arrayidx19 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %20, i64 0, !dbg !14162
  %x20 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx19, i32 0, i32 0, !dbg !14164
  %21 = load double, double* %x20, align 8, !dbg !14164
  %cmp21 = fcmp ogt double %sub17, %21, !dbg !14165
  br i1 %cmp21, label %if.then22, label %if.end23, !dbg !14166

if.then22:                                        ; preds = %if.end13
  store i32 1, i32* %retval, align 4, !dbg !14167
  br label %return, !dbg !14167

if.end23:                                         ; preds = %if.end13
  %22 = load %struct._EdgeInfo*, %struct._EdgeInfo** %p, align 8, !dbg !14168
  %points24 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %22, i32 0, i32 2, !dbg !14170
  %23 = load %struct._PointInfo*, %struct._PointInfo** %points24, align 8, !dbg !14170
  %arrayidx25 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %23, i64 0, !dbg !14168
  %x26 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx25, i32 0, i32 0, !dbg !14171
  %24 = load double, double* %x26, align 8, !dbg !14171
  %add27 = fadd double %24, 1.000000e-15, !dbg !14172
  %25 = load %struct._EdgeInfo*, %struct._EdgeInfo** %q, align 8, !dbg !14173
  %points28 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %25, i32 0, i32 2, !dbg !14174
  %26 = load %struct._PointInfo*, %struct._PointInfo** %points28, align 8, !dbg !14174
  %arrayidx29 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %26, i64 0, !dbg !14173
  %x30 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx29, i32 0, i32 0, !dbg !14175
  %27 = load double, double* %x30, align 8, !dbg !14175
  %cmp31 = fcmp olt double %add27, %27, !dbg !14176
  br i1 %cmp31, label %if.then32, label %if.end33, !dbg !14177

if.then32:                                        ; preds = %if.end23
  store i32 -1, i32* %retval, align 4, !dbg !14178
  br label %return, !dbg !14178

if.end33:                                         ; preds = %if.end23
  %28 = load %struct._EdgeInfo*, %struct._EdgeInfo** %p, align 8, !dbg !14179
  %points34 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %28, i32 0, i32 2, !dbg !14181
  %29 = load %struct._PointInfo*, %struct._PointInfo** %points34, align 8, !dbg !14181
  %arrayidx35 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %29, i64 1, !dbg !14179
  %x36 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx35, i32 0, i32 0, !dbg !14182
  %30 = load double, double* %x36, align 8, !dbg !14182
  %31 = load %struct._EdgeInfo*, %struct._EdgeInfo** %p, align 8, !dbg !14183
  %points37 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %31, i32 0, i32 2, !dbg !14184
  %32 = load %struct._PointInfo*, %struct._PointInfo** %points37, align 8, !dbg !14184
  %arrayidx38 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %32, i64 0, !dbg !14183
  %x39 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx38, i32 0, i32 0, !dbg !14185
  %33 = load double, double* %x39, align 8, !dbg !14185
  %sub40 = fsub double %30, %33, !dbg !14186
  %34 = load %struct._EdgeInfo*, %struct._EdgeInfo** %q, align 8, !dbg !14187
  %points41 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %34, i32 0, i32 2, !dbg !14188
  %35 = load %struct._PointInfo*, %struct._PointInfo** %points41, align 8, !dbg !14188
  %arrayidx42 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %35, i64 1, !dbg !14187
  %y43 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx42, i32 0, i32 1, !dbg !14189
  %36 = load double, double* %y43, align 8, !dbg !14189
  %37 = load %struct._EdgeInfo*, %struct._EdgeInfo** %q, align 8, !dbg !14190
  %points44 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %37, i32 0, i32 2, !dbg !14191
  %38 = load %struct._PointInfo*, %struct._PointInfo** %points44, align 8, !dbg !14191
  %arrayidx45 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %38, i64 0, !dbg !14190
  %y46 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx45, i32 0, i32 1, !dbg !14192
  %39 = load double, double* %y46, align 8, !dbg !14192
  %sub47 = fsub double %36, %39, !dbg !14193
  %mul = fmul double %sub40, %sub47, !dbg !14194
  %40 = load %struct._EdgeInfo*, %struct._EdgeInfo** %p, align 8, !dbg !14195
  %points48 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %40, i32 0, i32 2, !dbg !14196
  %41 = load %struct._PointInfo*, %struct._PointInfo** %points48, align 8, !dbg !14196
  %arrayidx49 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %41, i64 1, !dbg !14195
  %y50 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx49, i32 0, i32 1, !dbg !14197
  %42 = load double, double* %y50, align 8, !dbg !14197
  %43 = load %struct._EdgeInfo*, %struct._EdgeInfo** %p, align 8, !dbg !14198
  %points51 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %43, i32 0, i32 2, !dbg !14199
  %44 = load %struct._PointInfo*, %struct._PointInfo** %points51, align 8, !dbg !14199
  %arrayidx52 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %44, i64 0, !dbg !14198
  %y53 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx52, i32 0, i32 1, !dbg !14200
  %45 = load double, double* %y53, align 8, !dbg !14200
  %sub54 = fsub double %42, %45, !dbg !14201
  %46 = load %struct._EdgeInfo*, %struct._EdgeInfo** %q, align 8, !dbg !14202
  %points55 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %46, i32 0, i32 2, !dbg !14203
  %47 = load %struct._PointInfo*, %struct._PointInfo** %points55, align 8, !dbg !14203
  %arrayidx56 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %47, i64 1, !dbg !14202
  %x57 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx56, i32 0, i32 0, !dbg !14204
  %48 = load double, double* %x57, align 8, !dbg !14204
  %49 = load %struct._EdgeInfo*, %struct._EdgeInfo** %q, align 8, !dbg !14205
  %points58 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %49, i32 0, i32 2, !dbg !14206
  %50 = load %struct._PointInfo*, %struct._PointInfo** %points58, align 8, !dbg !14206
  %arrayidx59 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %50, i64 0, !dbg !14205
  %x60 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx59, i32 0, i32 0, !dbg !14207
  %51 = load double, double* %x60, align 8, !dbg !14207
  %sub61 = fsub double %48, %51, !dbg !14208
  %mul62 = fmul double %sub54, %sub61, !dbg !14209
  %sub63 = fsub double %mul, %mul62, !dbg !14210
  %cmp64 = fcmp ogt double %sub63, 0.000000e+00, !dbg !14211
  br i1 %cmp64, label %if.then65, label %if.end66, !dbg !14212

if.then65:                                        ; preds = %if.end33
  store i32 1, i32* %retval, align 4, !dbg !14213
  br label %return, !dbg !14213

if.end66:                                         ; preds = %if.end33
  store i32 -1, i32* %retval, align 4, !dbg !14214
  br label %return, !dbg !14214

return:                                           ; preds = %if.end66, %if.then65, %if.then32, %if.then22, %if.then12, %if.then
  %52 = load i32, i32* %retval, align 4, !dbg !14215
  ret i32 %52, !dbg !14215
}

; Function Attrs: noinline nounwind uwtable
define internal void @LogPolygonInfo(%struct._PolygonInfo* %polygon_info) #0 !dbg !14216 {
entry:
  %polygon_info.addr = alloca %struct._PolygonInfo*, align 8
  %p = alloca %struct._EdgeInfo*, align 8
  %i = alloca i64, align 8
  %j = alloca i64, align 8
  store %struct._PolygonInfo* %polygon_info, %struct._PolygonInfo** %polygon_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PolygonInfo** %polygon_info.addr, metadata !14221, metadata !DIExpression()), !dbg !14222
  call void @llvm.dbg.declare(metadata %struct._EdgeInfo** %p, metadata !14223, metadata !DIExpression()), !dbg !14224
  call void @llvm.dbg.declare(metadata i64* %i, metadata !14225, metadata !DIExpression()), !dbg !14226
  call void @llvm.dbg.declare(metadata i64* %j, metadata !14227, metadata !DIExpression()), !dbg !14228
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 128, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 428, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.132, i64 0, i64 0)), !dbg !14229
  %0 = load %struct._PolygonInfo*, %struct._PolygonInfo** %polygon_info.addr, align 8, !dbg !14230
  %edges = getelementptr inbounds %struct._PolygonInfo, %struct._PolygonInfo* %0, i32 0, i32 0, !dbg !14231
  %1 = load %struct._EdgeInfo*, %struct._EdgeInfo** %edges, align 8, !dbg !14231
  store %struct._EdgeInfo* %1, %struct._EdgeInfo** %p, align 8, !dbg !14232
  store i64 0, i64* %i, align 8, !dbg !14233
  br label %for.cond, !dbg !14235

for.cond:                                         ; preds = %for.inc20, %entry
  %2 = load i64, i64* %i, align 8, !dbg !14236
  %3 = load %struct._PolygonInfo*, %struct._PolygonInfo** %polygon_info.addr, align 8, !dbg !14238
  %number_edges = getelementptr inbounds %struct._PolygonInfo, %struct._PolygonInfo* %3, i32 0, i32 1, !dbg !14239
  %4 = load i64, i64* %number_edges, align 8, !dbg !14239
  %cmp = icmp slt i64 %2, %4, !dbg !14240
  br i1 %cmp, label %for.body, label %for.end22, !dbg !14241

for.body:                                         ; preds = %for.cond
  %5 = load i64, i64* %i, align 8, !dbg !14242
  %conv = sitofp i64 %5 to double, !dbg !14244
  %call1 = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 128, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 432, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.133, i64 0, i64 0), double %conv), !dbg !14245
  %6 = load %struct._EdgeInfo*, %struct._EdgeInfo** %p, align 8, !dbg !14246
  %direction = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %6, i32 0, i32 4, !dbg !14247
  %7 = load i64, i64* %direction, align 8, !dbg !14247
  %cmp2 = icmp ne i64 %7, 0, !dbg !14248
  %8 = zext i1 %cmp2 to i64, !dbg !14246
  %cond = select i1 %cmp2, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.135, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.136, i64 0, i64 0), !dbg !14246
  %call4 = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 128, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 434, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.134, i64 0, i64 0), i8* %cond), !dbg !14249
  %9 = load %struct._EdgeInfo*, %struct._EdgeInfo** %p, align 8, !dbg !14250
  %ghostline = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %9, i32 0, i32 5, !dbg !14251
  %10 = load i32, i32* %ghostline, align 8, !dbg !14251
  %cmp5 = icmp ne i32 %10, 0, !dbg !14252
  %11 = zext i1 %cmp5 to i64, !dbg !14250
  %cond7 = select i1 %cmp5, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.138, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.139, i64 0, i64 0), !dbg !14250
  %call8 = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 128, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 436, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.137, i64 0, i64 0), i8* %cond7), !dbg !14253
  %12 = load %struct._EdgeInfo*, %struct._EdgeInfo** %p, align 8, !dbg !14254
  %bounds = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %12, i32 0, i32 0, !dbg !14255
  %x1 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds, i32 0, i32 0, !dbg !14256
  %13 = load double, double* %x1, align 8, !dbg !14256
  %14 = load %struct._EdgeInfo*, %struct._EdgeInfo** %p, align 8, !dbg !14257
  %bounds9 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %14, i32 0, i32 0, !dbg !14258
  %y1 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds9, i32 0, i32 1, !dbg !14259
  %15 = load double, double* %y1, align 8, !dbg !14259
  %16 = load %struct._EdgeInfo*, %struct._EdgeInfo** %p, align 8, !dbg !14260
  %bounds10 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %16, i32 0, i32 0, !dbg !14261
  %x2 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds10, i32 0, i32 2, !dbg !14262
  %17 = load double, double* %x2, align 8, !dbg !14262
  %18 = load %struct._EdgeInfo*, %struct._EdgeInfo** %p, align 8, !dbg !14263
  %bounds11 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %18, i32 0, i32 0, !dbg !14264
  %y2 = getelementptr inbounds %struct._SegmentInfo, %struct._SegmentInfo* %bounds11, i32 0, i32 3, !dbg !14265
  %19 = load double, double* %y2, align 8, !dbg !14265
  %call12 = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 128, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 438, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.140, i64 0, i64 0), double %13, double %15, double %17, double %19), !dbg !14266
  store i64 0, i64* %j, align 8, !dbg !14267
  br label %for.cond13, !dbg !14269

for.cond13:                                       ; preds = %for.inc, %for.body
  %20 = load i64, i64* %j, align 8, !dbg !14270
  %21 = load %struct._EdgeInfo*, %struct._EdgeInfo** %p, align 8, !dbg !14272
  %number_points = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %21, i32 0, i32 3, !dbg !14273
  %22 = load i64, i64* %number_points, align 8, !dbg !14273
  %cmp14 = icmp slt i64 %20, %22, !dbg !14274
  br i1 %cmp14, label %for.body16, label %for.end, !dbg !14275

for.body16:                                       ; preds = %for.cond13
  %23 = load %struct._EdgeInfo*, %struct._EdgeInfo** %p, align 8, !dbg !14276
  %points = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %23, i32 0, i32 2, !dbg !14277
  %24 = load %struct._PointInfo*, %struct._PointInfo** %points, align 8, !dbg !14277
  %25 = load i64, i64* %j, align 8, !dbg !14278
  %arrayidx = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %24, i64 %25, !dbg !14276
  %x = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx, i32 0, i32 0, !dbg !14279
  %26 = load double, double* %x, align 8, !dbg !14279
  %27 = load %struct._EdgeInfo*, %struct._EdgeInfo** %p, align 8, !dbg !14280
  %points17 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %27, i32 0, i32 2, !dbg !14281
  %28 = load %struct._PointInfo*, %struct._PointInfo** %points17, align 8, !dbg !14281
  %29 = load i64, i64* %j, align 8, !dbg !14282
  %arrayidx18 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %28, i64 %29, !dbg !14280
  %y = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx18, i32 0, i32 1, !dbg !14283
  %30 = load double, double* %y, align 8, !dbg !14283
  %call19 = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 128, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 442, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.141, i64 0, i64 0), double %26, double %30), !dbg !14284
  br label %for.inc, !dbg !14285

for.inc:                                          ; preds = %for.body16
  %31 = load i64, i64* %j, align 8, !dbg !14286
  %inc = add nsw i64 %31, 1, !dbg !14286
  store i64 %inc, i64* %j, align 8, !dbg !14286
  br label %for.cond13, !dbg !14287, !llvm.loop !14288

for.end:                                          ; preds = %for.cond13
  %32 = load %struct._EdgeInfo*, %struct._EdgeInfo** %p, align 8, !dbg !14290
  %incdec.ptr = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %32, i32 1, !dbg !14290
  store %struct._EdgeInfo* %incdec.ptr, %struct._EdgeInfo** %p, align 8, !dbg !14290
  br label %for.inc20, !dbg !14291

for.inc20:                                        ; preds = %for.end
  %33 = load i64, i64* %i, align 8, !dbg !14292
  %inc21 = add nsw i64 %33, 1, !dbg !14292
  store i64 %inc21, i64* %i, align 8, !dbg !14292
  br label %for.cond, !dbg !14293, !llvm.loop !14294

for.end22:                                        ; preds = %for.cond
  %call23 = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 128, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 446, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.142, i64 0, i64 0)), !dbg !14296
  ret void, !dbg !14297
}

; Function Attrs: noinline nounwind uwtable
define internal %struct._PolygonInfo* @DestroyPolygonInfo(%struct._PolygonInfo* %polygon_info) #0 !dbg !14298 {
entry:
  %polygon_info.addr = alloca %struct._PolygonInfo*, align 8
  %i = alloca i64, align 8
  store %struct._PolygonInfo* %polygon_info, %struct._PolygonInfo** %polygon_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PolygonInfo** %polygon_info.addr, metadata !14301, metadata !DIExpression()), !dbg !14302
  call void @llvm.dbg.declare(metadata i64* %i, metadata !14303, metadata !DIExpression()), !dbg !14304
  store i64 0, i64* %i, align 8, !dbg !14305
  br label %for.cond, !dbg !14307

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i64, i64* %i, align 8, !dbg !14308
  %1 = load %struct._PolygonInfo*, %struct._PolygonInfo** %polygon_info.addr, align 8, !dbg !14310
  %number_edges = getelementptr inbounds %struct._PolygonInfo, %struct._PolygonInfo* %1, i32 0, i32 1, !dbg !14311
  %2 = load i64, i64* %number_edges, align 8, !dbg !14311
  %cmp = icmp slt i64 %0, %2, !dbg !14312
  br i1 %cmp, label %for.body, label %for.end, !dbg !14313

for.body:                                         ; preds = %for.cond
  %3 = load %struct._PolygonInfo*, %struct._PolygonInfo** %polygon_info.addr, align 8, !dbg !14314
  %edges = getelementptr inbounds %struct._PolygonInfo, %struct._PolygonInfo* %3, i32 0, i32 0, !dbg !14315
  %4 = load %struct._EdgeInfo*, %struct._EdgeInfo** %edges, align 8, !dbg !14315
  %5 = load i64, i64* %i, align 8, !dbg !14316
  %arrayidx = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %4, i64 %5, !dbg !14314
  %points = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %arrayidx, i32 0, i32 2, !dbg !14317
  %6 = load %struct._PointInfo*, %struct._PointInfo** %points, align 8, !dbg !14317
  %7 = bitcast %struct._PointInfo* %6 to i8*, !dbg !14314
  %call = call i8* @RelinquishMagickMemory(i8* %7), !dbg !14318
  %8 = bitcast i8* %call to %struct._PointInfo*, !dbg !14319
  %9 = load %struct._PolygonInfo*, %struct._PolygonInfo** %polygon_info.addr, align 8, !dbg !14320
  %edges1 = getelementptr inbounds %struct._PolygonInfo, %struct._PolygonInfo* %9, i32 0, i32 0, !dbg !14321
  %10 = load %struct._EdgeInfo*, %struct._EdgeInfo** %edges1, align 8, !dbg !14321
  %11 = load i64, i64* %i, align 8, !dbg !14322
  %arrayidx2 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %10, i64 %11, !dbg !14320
  %points3 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %arrayidx2, i32 0, i32 2, !dbg !14323
  store %struct._PointInfo* %8, %struct._PointInfo** %points3, align 8, !dbg !14324
  br label %for.inc, !dbg !14320

for.inc:                                          ; preds = %for.body
  %12 = load i64, i64* %i, align 8, !dbg !14325
  %inc = add nsw i64 %12, 1, !dbg !14325
  store i64 %inc, i64* %i, align 8, !dbg !14325
  br label %for.cond, !dbg !14326, !llvm.loop !14327

for.end:                                          ; preds = %for.cond
  %13 = load %struct._PolygonInfo*, %struct._PolygonInfo** %polygon_info.addr, align 8, !dbg !14329
  %edges4 = getelementptr inbounds %struct._PolygonInfo, %struct._PolygonInfo* %13, i32 0, i32 0, !dbg !14330
  %14 = load %struct._EdgeInfo*, %struct._EdgeInfo** %edges4, align 8, !dbg !14330
  %15 = bitcast %struct._EdgeInfo* %14 to i8*, !dbg !14329
  %call5 = call i8* @RelinquishMagickMemory(i8* %15), !dbg !14331
  %16 = bitcast i8* %call5 to %struct._EdgeInfo*, !dbg !14332
  %17 = load %struct._PolygonInfo*, %struct._PolygonInfo** %polygon_info.addr, align 8, !dbg !14333
  %edges6 = getelementptr inbounds %struct._PolygonInfo, %struct._PolygonInfo* %17, i32 0, i32 0, !dbg !14334
  store %struct._EdgeInfo* %16, %struct._EdgeInfo** %edges6, align 8, !dbg !14335
  %18 = load %struct._PolygonInfo*, %struct._PolygonInfo** %polygon_info.addr, align 8, !dbg !14336
  %19 = bitcast %struct._PolygonInfo* %18 to i8*, !dbg !14336
  %call7 = call i8* @RelinquishMagickMemory(i8* %19), !dbg !14337
  %20 = bitcast i8* %call7 to %struct._PolygonInfo*, !dbg !14338
  ret %struct._PolygonInfo* %20, !dbg !14339
}

; Function Attrs: noinline nounwind uwtable
define internal i64 @DestroyEdge(%struct._PolygonInfo* %polygon_info, i64 %edge) #0 !dbg !14340 {
entry:
  %polygon_info.addr = alloca %struct._PolygonInfo*, align 8
  %edge.addr = alloca i64, align 8
  store %struct._PolygonInfo* %polygon_info, %struct._PolygonInfo** %polygon_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PolygonInfo** %polygon_info.addr, metadata !14343, metadata !DIExpression()), !dbg !14344
  store i64 %edge, i64* %edge.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %edge.addr, metadata !14345, metadata !DIExpression()), !dbg !14346
  %0 = load %struct._PolygonInfo*, %struct._PolygonInfo** %polygon_info.addr, align 8, !dbg !14347
  %edges = getelementptr inbounds %struct._PolygonInfo, %struct._PolygonInfo* %0, i32 0, i32 0, !dbg !14348
  %1 = load %struct._EdgeInfo*, %struct._EdgeInfo** %edges, align 8, !dbg !14348
  %2 = load i64, i64* %edge.addr, align 8, !dbg !14349
  %arrayidx = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %1, i64 %2, !dbg !14347
  %points = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %arrayidx, i32 0, i32 2, !dbg !14350
  %3 = load %struct._PointInfo*, %struct._PointInfo** %points, align 8, !dbg !14350
  %4 = bitcast %struct._PointInfo* %3 to i8*, !dbg !14347
  %call = call i8* @RelinquishMagickMemory(i8* %4), !dbg !14351
  %5 = bitcast i8* %call to %struct._PointInfo*, !dbg !14352
  %6 = load %struct._PolygonInfo*, %struct._PolygonInfo** %polygon_info.addr, align 8, !dbg !14353
  %edges1 = getelementptr inbounds %struct._PolygonInfo, %struct._PolygonInfo* %6, i32 0, i32 0, !dbg !14354
  %7 = load %struct._EdgeInfo*, %struct._EdgeInfo** %edges1, align 8, !dbg !14354
  %8 = load i64, i64* %edge.addr, align 8, !dbg !14355
  %arrayidx2 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %7, i64 %8, !dbg !14353
  %points3 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %arrayidx2, i32 0, i32 2, !dbg !14356
  store %struct._PointInfo* %5, %struct._PointInfo** %points3, align 8, !dbg !14357
  %9 = load %struct._PolygonInfo*, %struct._PolygonInfo** %polygon_info.addr, align 8, !dbg !14358
  %number_edges = getelementptr inbounds %struct._PolygonInfo, %struct._PolygonInfo* %9, i32 0, i32 1, !dbg !14359
  %10 = load i64, i64* %number_edges, align 8, !dbg !14360
  %dec = add i64 %10, -1, !dbg !14360
  store i64 %dec, i64* %number_edges, align 8, !dbg !14360
  %11 = load i64, i64* %edge.addr, align 8, !dbg !14361
  %12 = load %struct._PolygonInfo*, %struct._PolygonInfo** %polygon_info.addr, align 8, !dbg !14363
  %number_edges4 = getelementptr inbounds %struct._PolygonInfo, %struct._PolygonInfo* %12, i32 0, i32 1, !dbg !14364
  %13 = load i64, i64* %number_edges4, align 8, !dbg !14364
  %cmp = icmp ult i64 %11, %13, !dbg !14365
  br i1 %cmp, label %if.then, label %if.end, !dbg !14366

if.then:                                          ; preds = %entry
  %14 = load %struct._PolygonInfo*, %struct._PolygonInfo** %polygon_info.addr, align 8, !dbg !14367
  %edges5 = getelementptr inbounds %struct._PolygonInfo, %struct._PolygonInfo* %14, i32 0, i32 0, !dbg !14368
  %15 = load %struct._EdgeInfo*, %struct._EdgeInfo** %edges5, align 8, !dbg !14368
  %16 = load i64, i64* %edge.addr, align 8, !dbg !14369
  %add.ptr = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %15, i64 %16, !dbg !14370
  %17 = bitcast %struct._EdgeInfo* %add.ptr to i8*, !dbg !14367
  %18 = load %struct._PolygonInfo*, %struct._PolygonInfo** %polygon_info.addr, align 8, !dbg !14371
  %edges6 = getelementptr inbounds %struct._PolygonInfo, %struct._PolygonInfo* %18, i32 0, i32 0, !dbg !14372
  %19 = load %struct._EdgeInfo*, %struct._EdgeInfo** %edges6, align 8, !dbg !14372
  %20 = load i64, i64* %edge.addr, align 8, !dbg !14373
  %add.ptr7 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %19, i64 %20, !dbg !14374
  %add.ptr8 = getelementptr inbounds %struct._EdgeInfo, %struct._EdgeInfo* %add.ptr7, i64 1, !dbg !14375
  %21 = bitcast %struct._EdgeInfo* %add.ptr8 to i8*, !dbg !14371
  %22 = load %struct._PolygonInfo*, %struct._PolygonInfo** %polygon_info.addr, align 8, !dbg !14376
  %number_edges9 = getelementptr inbounds %struct._PolygonInfo, %struct._PolygonInfo* %22, i32 0, i32 1, !dbg !14377
  %23 = load i64, i64* %number_edges9, align 8, !dbg !14377
  %24 = load i64, i64* %edge.addr, align 8, !dbg !14378
  %sub = sub i64 %23, %24, !dbg !14379
  %mul = mul i64 %sub, 80, !dbg !14380
  %call10 = call i8* @CopyMagickMemory(i8* %17, i8* %21, i64 %mul), !dbg !14381
  br label %if.end, !dbg !14382

if.end:                                           ; preds = %if.then, %entry
  %25 = load %struct._PolygonInfo*, %struct._PolygonInfo** %polygon_info.addr, align 8, !dbg !14383
  %number_edges11 = getelementptr inbounds %struct._PolygonInfo, %struct._PolygonInfo* %25, i32 0, i32 1, !dbg !14384
  %26 = load i64, i64* %number_edges11, align 8, !dbg !14384
  ret i64 %26, !dbg !14385
}

; Function Attrs: noinline nounwind uwtable
define internal i64 @MagickAbsoluteValue(i64 %x) #0 !dbg !14386 {
entry:
  %retval = alloca i64, align 8
  %x.addr = alloca i64, align 8
  store i64 %x, i64* %x.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %x.addr, metadata !14389, metadata !DIExpression()), !dbg !14390
  %0 = load i64, i64* %x.addr, align 8, !dbg !14391
  %cmp = icmp slt i64 %0, 0, !dbg !14393
  br i1 %cmp, label %if.then, label %if.end, !dbg !14394

if.then:                                          ; preds = %entry
  %1 = load i64, i64* %x.addr, align 8, !dbg !14395
  %sub = sub nsw i64 0, %1, !dbg !14396
  store i64 %sub, i64* %retval, align 8, !dbg !14397
  br label %return, !dbg !14397

if.end:                                           ; preds = %entry
  %2 = load i64, i64* %x.addr, align 8, !dbg !14398
  store i64 %2, i64* %retval, align 8, !dbg !14399
  br label %return, !dbg !14399

return:                                           ; preds = %if.end, %if.then
  %3 = load i64, i64* %retval, align 8, !dbg !14400
  ret i64 %3, !dbg !14400
}

; Function Attrs: noinline nounwind uwtable
define internal %struct._PrimitiveInfo* @TraceStrokePolygon(%struct._DrawInfo* %draw_info, %struct._PrimitiveInfo* %primitive_info) #0 !dbg !14401 {
entry:
  %retval = alloca %struct._PrimitiveInfo*, align 8
  %draw_info.addr = alloca %struct._DrawInfo*, align 8
  %primitive_info.addr = alloca %struct._PrimitiveInfo*, align 8
  %delta_theta = alloca double, align 8
  %dot_product = alloca double, align 8
  %mid = alloca double, align 8
  %miterlimit = alloca double, align 8
  %dx = alloca %struct._LineSegment, align 8
  %dy = alloca %struct._LineSegment, align 8
  %inverse_slope = alloca %struct._LineSegment, align 8
  %slope = alloca %struct._LineSegment, align 8
  %theta = alloca %struct._LineSegment, align 8
  %closed_path = alloca i32, align 4
  %box_p = alloca [5 x %struct._PointInfo], align 16
  %box_q = alloca [5 x %struct._PointInfo], align 16
  %center = alloca %struct._PointInfo, align 8
  %offset = alloca %struct._PointInfo, align 8
  %path_p = alloca %struct._PointInfo*, align 8
  %path_q = alloca %struct._PointInfo*, align 8
  %polygon_primitive = alloca %struct._PrimitiveInfo*, align 8
  %stroke_polygon = alloca %struct._PrimitiveInfo*, align 8
  %i = alloca i64, align 8
  %arc_segments = alloca i64, align 8
  %max_strokes = alloca i64, align 8
  %number_vertices = alloca i64, align 8
  %j = alloca i64, align 8
  %n = alloca i64, align 8
  %p = alloca i64, align 8
  %q = alloca i64, align 8
  store %struct._DrawInfo* %draw_info, %struct._DrawInfo** %draw_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawInfo** %draw_info.addr, metadata !14404, metadata !DIExpression()), !dbg !14405
  store %struct._PrimitiveInfo* %primitive_info, %struct._PrimitiveInfo** %primitive_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PrimitiveInfo** %primitive_info.addr, metadata !14406, metadata !DIExpression()), !dbg !14407
  call void @llvm.dbg.declare(metadata double* %delta_theta, metadata !14408, metadata !DIExpression()), !dbg !14409
  call void @llvm.dbg.declare(metadata double* %dot_product, metadata !14410, metadata !DIExpression()), !dbg !14411
  call void @llvm.dbg.declare(metadata double* %mid, metadata !14412, metadata !DIExpression()), !dbg !14413
  call void @llvm.dbg.declare(metadata double* %miterlimit, metadata !14414, metadata !DIExpression()), !dbg !14415
  call void @llvm.dbg.declare(metadata %struct._LineSegment* %dx, metadata !14416, metadata !DIExpression()), !dbg !14422
  call void @llvm.dbg.declare(metadata %struct._LineSegment* %dy, metadata !14423, metadata !DIExpression()), !dbg !14424
  call void @llvm.dbg.declare(metadata %struct._LineSegment* %inverse_slope, metadata !14425, metadata !DIExpression()), !dbg !14426
  call void @llvm.dbg.declare(metadata %struct._LineSegment* %slope, metadata !14427, metadata !DIExpression()), !dbg !14428
  call void @llvm.dbg.declare(metadata %struct._LineSegment* %theta, metadata !14429, metadata !DIExpression()), !dbg !14430
  call void @llvm.dbg.declare(metadata i32* %closed_path, metadata !14431, metadata !DIExpression()), !dbg !14432
  call void @llvm.dbg.declare(metadata [5 x %struct._PointInfo]* %box_p, metadata !14433, metadata !DIExpression()), !dbg !14437
  call void @llvm.dbg.declare(metadata [5 x %struct._PointInfo]* %box_q, metadata !14438, metadata !DIExpression()), !dbg !14439
  call void @llvm.dbg.declare(metadata %struct._PointInfo* %center, metadata !14440, metadata !DIExpression()), !dbg !14441
  call void @llvm.dbg.declare(metadata %struct._PointInfo* %offset, metadata !14442, metadata !DIExpression()), !dbg !14443
  call void @llvm.dbg.declare(metadata %struct._PointInfo** %path_p, metadata !14444, metadata !DIExpression()), !dbg !14445
  call void @llvm.dbg.declare(metadata %struct._PointInfo** %path_q, metadata !14446, metadata !DIExpression()), !dbg !14447
  call void @llvm.dbg.declare(metadata %struct._PrimitiveInfo** %polygon_primitive, metadata !14448, metadata !DIExpression()), !dbg !14449
  call void @llvm.dbg.declare(metadata %struct._PrimitiveInfo** %stroke_polygon, metadata !14450, metadata !DIExpression()), !dbg !14451
  call void @llvm.dbg.declare(metadata i64* %i, metadata !14452, metadata !DIExpression()), !dbg !14453
  call void @llvm.dbg.declare(metadata i64* %arc_segments, metadata !14454, metadata !DIExpression()), !dbg !14455
  call void @llvm.dbg.declare(metadata i64* %max_strokes, metadata !14456, metadata !DIExpression()), !dbg !14457
  call void @llvm.dbg.declare(metadata i64* %number_vertices, metadata !14458, metadata !DIExpression()), !dbg !14459
  call void @llvm.dbg.declare(metadata i64* %j, metadata !14460, metadata !DIExpression()), !dbg !14461
  call void @llvm.dbg.declare(metadata i64* %n, metadata !14462, metadata !DIExpression()), !dbg !14463
  call void @llvm.dbg.declare(metadata i64* %p, metadata !14464, metadata !DIExpression()), !dbg !14465
  call void @llvm.dbg.declare(metadata i64* %q, metadata !14466, metadata !DIExpression()), !dbg !14467
  %0 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !14468
  %coordinates = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %0, i32 0, i32 1, !dbg !14469
  %1 = load i64, i64* %coordinates, align 8, !dbg !14469
  store i64 %1, i64* %number_vertices, align 8, !dbg !14470
  %2 = load i64, i64* %number_vertices, align 8, !dbg !14471
  %mul = mul i64 2, %2, !dbg !14472
  %add = add i64 %mul, 1200, !dbg !14473
  %add1 = add i64 %add, 360, !dbg !14474
  store i64 %add1, i64* %max_strokes, align 8, !dbg !14475
  %3 = load i64, i64* %max_strokes, align 8, !dbg !14476
  %call = call i8* @AcquireQuantumMemory(i64 %3, i64 16) #14, !dbg !14477
  %4 = bitcast i8* %call to %struct._PointInfo*, !dbg !14478
  store %struct._PointInfo* %4, %struct._PointInfo** %path_p, align 8, !dbg !14479
  %5 = load i64, i64* %max_strokes, align 8, !dbg !14480
  %call2 = call i8* @AcquireQuantumMemory(i64 %5, i64 16) #14, !dbg !14481
  %6 = bitcast i8* %call2 to %struct._PointInfo*, !dbg !14482
  store %struct._PointInfo* %6, %struct._PointInfo** %path_q, align 8, !dbg !14483
  %7 = load i64, i64* %number_vertices, align 8, !dbg !14484
  %add3 = add i64 %7, 2, !dbg !14485
  %call4 = call i8* @AcquireQuantumMemory(i64 %add3, i64 40) #14, !dbg !14486
  %8 = bitcast i8* %call4 to %struct._PrimitiveInfo*, !dbg !14487
  store %struct._PrimitiveInfo* %8, %struct._PrimitiveInfo** %polygon_primitive, align 8, !dbg !14488
  %9 = load %struct._PointInfo*, %struct._PointInfo** %path_p, align 8, !dbg !14489
  %cmp = icmp eq %struct._PointInfo* %9, null, !dbg !14491
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !14492

lor.lhs.false:                                    ; preds = %entry
  %10 = load %struct._PointInfo*, %struct._PointInfo** %path_q, align 8, !dbg !14493
  %cmp5 = icmp eq %struct._PointInfo* %10, null, !dbg !14494
  br i1 %cmp5, label %if.then, label %lor.lhs.false6, !dbg !14495

lor.lhs.false6:                                   ; preds = %lor.lhs.false
  %11 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %polygon_primitive, align 8, !dbg !14496
  %cmp7 = icmp eq %struct._PrimitiveInfo* %11, null, !dbg !14497
  br i1 %cmp7, label %if.then, label %if.end, !dbg !14498

if.then:                                          ; preds = %lor.lhs.false6, %lor.lhs.false, %entry
  store %struct._PrimitiveInfo* null, %struct._PrimitiveInfo** %retval, align 8, !dbg !14499
  br label %return, !dbg !14499

if.end:                                           ; preds = %lor.lhs.false6
  %12 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %polygon_primitive, align 8, !dbg !14500
  %13 = bitcast %struct._PrimitiveInfo* %12 to i8*, !dbg !14500
  %14 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !14501
  %15 = bitcast %struct._PrimitiveInfo* %14 to i8*, !dbg !14501
  %16 = load i64, i64* %number_vertices, align 8, !dbg !14502
  %mul8 = mul i64 %16, 40, !dbg !14503
  %call9 = call i8* @CopyMagickMemory(i8* %13, i8* %15, i64 %mul8), !dbg !14504
  %17 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !14505
  %18 = load i64, i64* %number_vertices, align 8, !dbg !14506
  %sub = sub i64 %18, 1, !dbg !14507
  %arrayidx = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %17, i64 %sub, !dbg !14505
  %point = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx, i32 0, i32 0, !dbg !14508
  %x = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 0, !dbg !14509
  %19 = load double, double* %x, align 8, !dbg !14509
  %20 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !14510
  %arrayidx10 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %20, i64 0, !dbg !14510
  %point11 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx10, i32 0, i32 0, !dbg !14511
  %x12 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point11, i32 0, i32 0, !dbg !14512
  %21 = load double, double* %x12, align 8, !dbg !14512
  %cmp13 = fcmp oeq double %19, %21, !dbg !14513
  br i1 %cmp13, label %land.rhs, label %land.end, !dbg !14514

land.rhs:                                         ; preds = %if.end
  %22 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !14515
  %23 = load i64, i64* %number_vertices, align 8, !dbg !14516
  %sub14 = sub i64 %23, 1, !dbg !14517
  %arrayidx15 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %22, i64 %sub14, !dbg !14515
  %point16 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx15, i32 0, i32 0, !dbg !14518
  %y = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point16, i32 0, i32 1, !dbg !14519
  %24 = load double, double* %y, align 8, !dbg !14519
  %25 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !14520
  %arrayidx17 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %25, i64 0, !dbg !14520
  %point18 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx17, i32 0, i32 0, !dbg !14521
  %y19 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point18, i32 0, i32 1, !dbg !14522
  %26 = load double, double* %y19, align 8, !dbg !14522
  %cmp20 = fcmp oeq double %24, %26, !dbg !14523
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end
  %27 = phi i1 [ false, %if.end ], [ %cmp20, %land.rhs ], !dbg !14524
  %28 = zext i1 %27 to i64, !dbg !14525
  %cond = select i1 %27, i32 1, i32 0, !dbg !14525
  store i32 %cond, i32* %closed_path, align 4, !dbg !14526
  %29 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !14527
  %linejoin = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %29, i32 0, i32 16, !dbg !14529
  %30 = load i32, i32* %linejoin, align 8, !dbg !14529
  %cmp21 = icmp eq i32 %30, 2, !dbg !14530
  br i1 %cmp21, label %if.then26, label %lor.lhs.false22, !dbg !14531

lor.lhs.false22:                                  ; preds = %land.end
  %31 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !14532
  %linejoin23 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %31, i32 0, i32 16, !dbg !14533
  %32 = load i32, i32* %linejoin23, align 8, !dbg !14533
  %cmp24 = icmp eq i32 %32, 1, !dbg !14534
  br i1 %cmp24, label %land.lhs.true, label %if.end29, !dbg !14535

land.lhs.true:                                    ; preds = %lor.lhs.false22
  %33 = load i32, i32* %closed_path, align 4, !dbg !14536
  %cmp25 = icmp ne i32 %33, 0, !dbg !14537
  br i1 %cmp25, label %if.then26, label %if.end29, !dbg !14538

if.then26:                                        ; preds = %land.lhs.true, %land.end
  %34 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %polygon_primitive, align 8, !dbg !14539
  %35 = load i64, i64* %number_vertices, align 8, !dbg !14541
  %arrayidx27 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %34, i64 %35, !dbg !14539
  %36 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !14542
  %arrayidx28 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %36, i64 1, !dbg !14542
  %37 = bitcast %struct._PrimitiveInfo* %arrayidx27 to i8*, !dbg !14542
  %38 = bitcast %struct._PrimitiveInfo* %arrayidx28 to i8*, !dbg !14542
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 40, i1 false), !dbg !14542
  %39 = load i64, i64* %number_vertices, align 8, !dbg !14543
  %inc = add i64 %39, 1, !dbg !14543
  store i64 %inc, i64* %number_vertices, align 8, !dbg !14543
  br label %if.end29, !dbg !14544

if.end29:                                         ; preds = %if.then26, %land.lhs.true, %lor.lhs.false22
  %40 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %polygon_primitive, align 8, !dbg !14545
  %41 = load i64, i64* %number_vertices, align 8, !dbg !14546
  %arrayidx30 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %40, i64 %41, !dbg !14545
  %primitive = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx30, i32 0, i32 2, !dbg !14547
  store i32 0, i32* %primitive, align 8, !dbg !14548
  %p31 = getelementptr inbounds %struct._LineSegment, %struct._LineSegment* %dx, i32 0, i32 0, !dbg !14549
  store double 0.000000e+00, double* %p31, align 8, !dbg !14550
  %p32 = getelementptr inbounds %struct._LineSegment, %struct._LineSegment* %dy, i32 0, i32 0, !dbg !14551
  store double 0.000000e+00, double* %p32, align 8, !dbg !14552
  store i64 1, i64* %n, align 8, !dbg !14553
  br label %for.cond, !dbg !14555

for.cond:                                         ; preds = %for.inc, %if.end29
  %42 = load i64, i64* %n, align 8, !dbg !14556
  %43 = load i64, i64* %number_vertices, align 8, !dbg !14558
  %cmp33 = icmp slt i64 %42, %43, !dbg !14559
  br i1 %cmp33, label %for.body, label %for.end, !dbg !14560

for.body:                                         ; preds = %for.cond
  %44 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %polygon_primitive, align 8, !dbg !14561
  %45 = load i64, i64* %n, align 8, !dbg !14563
  %arrayidx34 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %44, i64 %45, !dbg !14561
  %point35 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx34, i32 0, i32 0, !dbg !14564
  %x36 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point35, i32 0, i32 0, !dbg !14565
  %46 = load double, double* %x36, align 8, !dbg !14565
  %47 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %polygon_primitive, align 8, !dbg !14566
  %arrayidx37 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %47, i64 0, !dbg !14566
  %point38 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx37, i32 0, i32 0, !dbg !14567
  %x39 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point38, i32 0, i32 0, !dbg !14568
  %48 = load double, double* %x39, align 8, !dbg !14568
  %sub40 = fsub double %46, %48, !dbg !14569
  %p41 = getelementptr inbounds %struct._LineSegment, %struct._LineSegment* %dx, i32 0, i32 0, !dbg !14570
  store double %sub40, double* %p41, align 8, !dbg !14571
  %49 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %polygon_primitive, align 8, !dbg !14572
  %50 = load i64, i64* %n, align 8, !dbg !14573
  %arrayidx42 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %49, i64 %50, !dbg !14572
  %point43 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx42, i32 0, i32 0, !dbg !14574
  %y44 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point43, i32 0, i32 1, !dbg !14575
  %51 = load double, double* %y44, align 8, !dbg !14575
  %52 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %polygon_primitive, align 8, !dbg !14576
  %arrayidx45 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %52, i64 0, !dbg !14576
  %point46 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx45, i32 0, i32 0, !dbg !14577
  %y47 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point46, i32 0, i32 1, !dbg !14578
  %53 = load double, double* %y47, align 8, !dbg !14578
  %sub48 = fsub double %51, %53, !dbg !14579
  %p49 = getelementptr inbounds %struct._LineSegment, %struct._LineSegment* %dy, i32 0, i32 0, !dbg !14580
  store double %sub48, double* %p49, align 8, !dbg !14581
  %p50 = getelementptr inbounds %struct._LineSegment, %struct._LineSegment* %dx, i32 0, i32 0, !dbg !14582
  %54 = load double, double* %p50, align 8, !dbg !14582
  %55 = call double @llvm.fabs.f64(double %54), !dbg !14584
  %cmp51 = fcmp oge double %55, 1.000000e-15, !dbg !14585
  br i1 %cmp51, label %if.then55, label %lor.lhs.false52, !dbg !14586

lor.lhs.false52:                                  ; preds = %for.body
  %p53 = getelementptr inbounds %struct._LineSegment, %struct._LineSegment* %dy, i32 0, i32 0, !dbg !14587
  %56 = load double, double* %p53, align 8, !dbg !14587
  %57 = call double @llvm.fabs.f64(double %56), !dbg !14588
  %cmp54 = fcmp oge double %57, 1.000000e-15, !dbg !14589
  br i1 %cmp54, label %if.then55, label %if.end56, !dbg !14590

if.then55:                                        ; preds = %lor.lhs.false52, %for.body
  br label %for.end, !dbg !14591

if.end56:                                         ; preds = %lor.lhs.false52
  br label %for.inc, !dbg !14592

for.inc:                                          ; preds = %if.end56
  %58 = load i64, i64* %n, align 8, !dbg !14593
  %inc57 = add nsw i64 %58, 1, !dbg !14593
  store i64 %inc57, i64* %n, align 8, !dbg !14593
  br label %for.cond, !dbg !14594, !llvm.loop !14595

for.end:                                          ; preds = %if.then55, %for.cond
  %59 = load i64, i64* %n, align 8, !dbg !14597
  %60 = load i64, i64* %number_vertices, align 8, !dbg !14599
  %cmp58 = icmp eq i64 %59, %60, !dbg !14600
  br i1 %cmp58, label %if.then59, label %if.end61, !dbg !14601

if.then59:                                        ; preds = %for.end
  %61 = load i64, i64* %number_vertices, align 8, !dbg !14602
  %sub60 = sub nsw i64 %61, 1, !dbg !14603
  store i64 %sub60, i64* %n, align 8, !dbg !14604
  br label %if.end61, !dbg !14605

if.end61:                                         ; preds = %if.then59, %for.end
  %p62 = getelementptr inbounds %struct._LineSegment, %struct._LineSegment* %dx, i32 0, i32 0, !dbg !14606
  %62 = load double, double* %p62, align 8, !dbg !14606
  %call63 = call double @DrawEpsilonReciprocal(double %62), !dbg !14607
  %p64 = getelementptr inbounds %struct._LineSegment, %struct._LineSegment* %dy, i32 0, i32 0, !dbg !14608
  %63 = load double, double* %p64, align 8, !dbg !14608
  %mul65 = fmul double %call63, %63, !dbg !14609
  %p66 = getelementptr inbounds %struct._LineSegment, %struct._LineSegment* %slope, i32 0, i32 0, !dbg !14610
  store double %mul65, double* %p66, align 8, !dbg !14611
  %p67 = getelementptr inbounds %struct._LineSegment, %struct._LineSegment* %slope, i32 0, i32 0, !dbg !14612
  %64 = load double, double* %p67, align 8, !dbg !14612
  %call68 = call double @DrawEpsilonReciprocal(double %64), !dbg !14613
  %mul69 = fmul double -1.000000e+00, %call68, !dbg !14614
  %p70 = getelementptr inbounds %struct._LineSegment, %struct._LineSegment* %inverse_slope, i32 0, i32 0, !dbg !14615
  store double %mul69, double* %p70, align 8, !dbg !14616
  %65 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !14617
  %affine = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %65, i32 0, i32 3, !dbg !14618
  %call71 = call double @ExpandAffine(%struct._AffineMatrix* %affine), !dbg !14619
  %66 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !14620
  %stroke_width = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %66, i32 0, i32 7, !dbg !14621
  %67 = load double, double* %stroke_width, align 8, !dbg !14621
  %mul72 = fmul double %call71, %67, !dbg !14622
  %div = fdiv double %mul72, 2.000000e+00, !dbg !14623
  store double %div, double* %mid, align 8, !dbg !14624
  %68 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !14625
  %miterlimit73 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %68, i32 0, i32 17, !dbg !14626
  %69 = load i64, i64* %miterlimit73, align 8, !dbg !14626
  %70 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !14627
  %miterlimit74 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %70, i32 0, i32 17, !dbg !14628
  %71 = load i64, i64* %miterlimit74, align 8, !dbg !14628
  %mul75 = mul i64 %69, %71, !dbg !14629
  %conv = uitofp i64 %mul75 to double, !dbg !14625
  %72 = load double, double* %mid, align 8, !dbg !14630
  %mul76 = fmul double %conv, %72, !dbg !14631
  %73 = load double, double* %mid, align 8, !dbg !14632
  %mul77 = fmul double %mul76, %73, !dbg !14633
  store double %mul77, double* %miterlimit, align 8, !dbg !14634
  %74 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !14635
  %linecap = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %74, i32 0, i32 15, !dbg !14637
  %75 = load i32, i32* %linecap, align 4, !dbg !14637
  %cmp78 = icmp eq i32 %75, 3, !dbg !14638
  br i1 %cmp78, label %land.lhs.true80, label %if.end84, !dbg !14639

land.lhs.true80:                                  ; preds = %if.end61
  %76 = load i32, i32* %closed_path, align 4, !dbg !14640
  %cmp81 = icmp eq i32 %76, 0, !dbg !14641
  br i1 %cmp81, label %if.then83, label %if.end84, !dbg !14642

if.then83:                                        ; preds = %land.lhs.true80
  %77 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %polygon_primitive, align 8, !dbg !14643
  %78 = load i64, i64* %number_vertices, align 8, !dbg !14644
  %79 = load double, double* %mid, align 8, !dbg !14645
  call void @TraceSquareLinecap(%struct._PrimitiveInfo* %77, i64 %78, double %79), !dbg !14646
  br label %if.end84, !dbg !14646

if.end84:                                         ; preds = %if.then83, %land.lhs.true80, %if.end61
  %80 = load double, double* %mid, align 8, !dbg !14647
  %81 = load double, double* %mid, align 8, !dbg !14648
  %mul85 = fmul double %80, %81, !dbg !14649
  %p86 = getelementptr inbounds %struct._LineSegment, %struct._LineSegment* %inverse_slope, i32 0, i32 0, !dbg !14650
  %82 = load double, double* %p86, align 8, !dbg !14650
  %p87 = getelementptr inbounds %struct._LineSegment, %struct._LineSegment* %inverse_slope, i32 0, i32 0, !dbg !14651
  %83 = load double, double* %p87, align 8, !dbg !14651
  %mul88 = fmul double %82, %83, !dbg !14652
  %add89 = fadd double %mul88, 1.000000e+00, !dbg !14653
  %div90 = fdiv double %mul85, %add89, !dbg !14654
  %call91 = call double @sqrt(double %div90) #17, !dbg !14655
  %x92 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %offset, i32 0, i32 0, !dbg !14656
  store double %call91, double* %x92, align 8, !dbg !14657
  %x93 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %offset, i32 0, i32 0, !dbg !14658
  %84 = load double, double* %x93, align 8, !dbg !14658
  %p94 = getelementptr inbounds %struct._LineSegment, %struct._LineSegment* %inverse_slope, i32 0, i32 0, !dbg !14659
  %85 = load double, double* %p94, align 8, !dbg !14659
  %mul95 = fmul double %84, %85, !dbg !14660
  %y96 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %offset, i32 0, i32 1, !dbg !14661
  store double %mul95, double* %y96, align 8, !dbg !14662
  %p97 = getelementptr inbounds %struct._LineSegment, %struct._LineSegment* %dy, i32 0, i32 0, !dbg !14663
  %86 = load double, double* %p97, align 8, !dbg !14663
  %x98 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %offset, i32 0, i32 0, !dbg !14665
  %87 = load double, double* %x98, align 8, !dbg !14665
  %mul99 = fmul double %86, %87, !dbg !14666
  %p100 = getelementptr inbounds %struct._LineSegment, %struct._LineSegment* %dx, i32 0, i32 0, !dbg !14667
  %88 = load double, double* %p100, align 8, !dbg !14667
  %y101 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %offset, i32 0, i32 1, !dbg !14668
  %89 = load double, double* %y101, align 8, !dbg !14668
  %mul102 = fmul double %88, %89, !dbg !14669
  %sub103 = fsub double %mul99, %mul102, !dbg !14670
  %cmp104 = fcmp ogt double %sub103, 0.000000e+00, !dbg !14671
  br i1 %cmp104, label %if.then106, label %if.else, !dbg !14672

if.then106:                                       ; preds = %if.end84
  %90 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %polygon_primitive, align 8, !dbg !14673
  %arrayidx107 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %90, i64 0, !dbg !14673
  %point108 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx107, i32 0, i32 0, !dbg !14675
  %x109 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point108, i32 0, i32 0, !dbg !14676
  %91 = load double, double* %x109, align 8, !dbg !14676
  %x110 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %offset, i32 0, i32 0, !dbg !14677
  %92 = load double, double* %x110, align 8, !dbg !14677
  %sub111 = fsub double %91, %92, !dbg !14678
  %arrayidx112 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_p, i64 0, i64 0, !dbg !14679
  %x113 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx112, i32 0, i32 0, !dbg !14680
  store double %sub111, double* %x113, align 16, !dbg !14681
  %93 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %polygon_primitive, align 8, !dbg !14682
  %arrayidx114 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %93, i64 0, !dbg !14682
  %point115 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx114, i32 0, i32 0, !dbg !14683
  %y116 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point115, i32 0, i32 1, !dbg !14684
  %94 = load double, double* %y116, align 8, !dbg !14684
  %x117 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %offset, i32 0, i32 0, !dbg !14685
  %95 = load double, double* %x117, align 8, !dbg !14685
  %p118 = getelementptr inbounds %struct._LineSegment, %struct._LineSegment* %inverse_slope, i32 0, i32 0, !dbg !14686
  %96 = load double, double* %p118, align 8, !dbg !14686
  %mul119 = fmul double %95, %96, !dbg !14687
  %sub120 = fsub double %94, %mul119, !dbg !14688
  %arrayidx121 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_p, i64 0, i64 0, !dbg !14689
  %y122 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx121, i32 0, i32 1, !dbg !14690
  store double %sub120, double* %y122, align 8, !dbg !14691
  %97 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %polygon_primitive, align 8, !dbg !14692
  %98 = load i64, i64* %n, align 8, !dbg !14693
  %arrayidx123 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %97, i64 %98, !dbg !14692
  %point124 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx123, i32 0, i32 0, !dbg !14694
  %x125 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point124, i32 0, i32 0, !dbg !14695
  %99 = load double, double* %x125, align 8, !dbg !14695
  %x126 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %offset, i32 0, i32 0, !dbg !14696
  %100 = load double, double* %x126, align 8, !dbg !14696
  %sub127 = fsub double %99, %100, !dbg !14697
  %arrayidx128 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_p, i64 0, i64 1, !dbg !14698
  %x129 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx128, i32 0, i32 0, !dbg !14699
  store double %sub127, double* %x129, align 16, !dbg !14700
  %101 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %polygon_primitive, align 8, !dbg !14701
  %102 = load i64, i64* %n, align 8, !dbg !14702
  %arrayidx130 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %101, i64 %102, !dbg !14701
  %point131 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx130, i32 0, i32 0, !dbg !14703
  %y132 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point131, i32 0, i32 1, !dbg !14704
  %103 = load double, double* %y132, align 8, !dbg !14704
  %x133 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %offset, i32 0, i32 0, !dbg !14705
  %104 = load double, double* %x133, align 8, !dbg !14705
  %p134 = getelementptr inbounds %struct._LineSegment, %struct._LineSegment* %inverse_slope, i32 0, i32 0, !dbg !14706
  %105 = load double, double* %p134, align 8, !dbg !14706
  %mul135 = fmul double %104, %105, !dbg !14707
  %sub136 = fsub double %103, %mul135, !dbg !14708
  %arrayidx137 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_p, i64 0, i64 1, !dbg !14709
  %y138 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx137, i32 0, i32 1, !dbg !14710
  store double %sub136, double* %y138, align 8, !dbg !14711
  %106 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %polygon_primitive, align 8, !dbg !14712
  %arrayidx139 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %106, i64 0, !dbg !14712
  %point140 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx139, i32 0, i32 0, !dbg !14713
  %x141 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point140, i32 0, i32 0, !dbg !14714
  %107 = load double, double* %x141, align 8, !dbg !14714
  %x142 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %offset, i32 0, i32 0, !dbg !14715
  %108 = load double, double* %x142, align 8, !dbg !14715
  %add143 = fadd double %107, %108, !dbg !14716
  %arrayidx144 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_q, i64 0, i64 0, !dbg !14717
  %x145 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx144, i32 0, i32 0, !dbg !14718
  store double %add143, double* %x145, align 16, !dbg !14719
  %109 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %polygon_primitive, align 8, !dbg !14720
  %arrayidx146 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %109, i64 0, !dbg !14720
  %point147 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx146, i32 0, i32 0, !dbg !14721
  %y148 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point147, i32 0, i32 1, !dbg !14722
  %110 = load double, double* %y148, align 8, !dbg !14722
  %x149 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %offset, i32 0, i32 0, !dbg !14723
  %111 = load double, double* %x149, align 8, !dbg !14723
  %p150 = getelementptr inbounds %struct._LineSegment, %struct._LineSegment* %inverse_slope, i32 0, i32 0, !dbg !14724
  %112 = load double, double* %p150, align 8, !dbg !14724
  %mul151 = fmul double %111, %112, !dbg !14725
  %add152 = fadd double %110, %mul151, !dbg !14726
  %arrayidx153 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_q, i64 0, i64 0, !dbg !14727
  %y154 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx153, i32 0, i32 1, !dbg !14728
  store double %add152, double* %y154, align 8, !dbg !14729
  %113 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %polygon_primitive, align 8, !dbg !14730
  %114 = load i64, i64* %n, align 8, !dbg !14731
  %arrayidx155 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %113, i64 %114, !dbg !14730
  %point156 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx155, i32 0, i32 0, !dbg !14732
  %x157 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point156, i32 0, i32 0, !dbg !14733
  %115 = load double, double* %x157, align 8, !dbg !14733
  %x158 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %offset, i32 0, i32 0, !dbg !14734
  %116 = load double, double* %x158, align 8, !dbg !14734
  %add159 = fadd double %115, %116, !dbg !14735
  %arrayidx160 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_q, i64 0, i64 1, !dbg !14736
  %x161 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx160, i32 0, i32 0, !dbg !14737
  store double %add159, double* %x161, align 16, !dbg !14738
  %117 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %polygon_primitive, align 8, !dbg !14739
  %118 = load i64, i64* %n, align 8, !dbg !14740
  %arrayidx162 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %117, i64 %118, !dbg !14739
  %point163 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx162, i32 0, i32 0, !dbg !14741
  %y164 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point163, i32 0, i32 1, !dbg !14742
  %119 = load double, double* %y164, align 8, !dbg !14742
  %x165 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %offset, i32 0, i32 0, !dbg !14743
  %120 = load double, double* %x165, align 8, !dbg !14743
  %p166 = getelementptr inbounds %struct._LineSegment, %struct._LineSegment* %inverse_slope, i32 0, i32 0, !dbg !14744
  %121 = load double, double* %p166, align 8, !dbg !14744
  %mul167 = fmul double %120, %121, !dbg !14745
  %add168 = fadd double %119, %mul167, !dbg !14746
  %arrayidx169 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_q, i64 0, i64 1, !dbg !14747
  %y170 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx169, i32 0, i32 1, !dbg !14748
  store double %add168, double* %y170, align 8, !dbg !14749
  br label %if.end227, !dbg !14750

if.else:                                          ; preds = %if.end84
  %122 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %polygon_primitive, align 8, !dbg !14751
  %arrayidx171 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %122, i64 0, !dbg !14751
  %point172 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx171, i32 0, i32 0, !dbg !14753
  %x173 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point172, i32 0, i32 0, !dbg !14754
  %123 = load double, double* %x173, align 8, !dbg !14754
  %x174 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %offset, i32 0, i32 0, !dbg !14755
  %124 = load double, double* %x174, align 8, !dbg !14755
  %add175 = fadd double %123, %124, !dbg !14756
  %arrayidx176 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_p, i64 0, i64 0, !dbg !14757
  %x177 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx176, i32 0, i32 0, !dbg !14758
  store double %add175, double* %x177, align 16, !dbg !14759
  %125 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %polygon_primitive, align 8, !dbg !14760
  %arrayidx178 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %125, i64 0, !dbg !14760
  %point179 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx178, i32 0, i32 0, !dbg !14761
  %y180 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point179, i32 0, i32 1, !dbg !14762
  %126 = load double, double* %y180, align 8, !dbg !14762
  %y181 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %offset, i32 0, i32 1, !dbg !14763
  %127 = load double, double* %y181, align 8, !dbg !14763
  %add182 = fadd double %126, %127, !dbg !14764
  %arrayidx183 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_p, i64 0, i64 0, !dbg !14765
  %y184 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx183, i32 0, i32 1, !dbg !14766
  store double %add182, double* %y184, align 8, !dbg !14767
  %128 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %polygon_primitive, align 8, !dbg !14768
  %129 = load i64, i64* %n, align 8, !dbg !14769
  %arrayidx185 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %128, i64 %129, !dbg !14768
  %point186 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx185, i32 0, i32 0, !dbg !14770
  %x187 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point186, i32 0, i32 0, !dbg !14771
  %130 = load double, double* %x187, align 8, !dbg !14771
  %x188 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %offset, i32 0, i32 0, !dbg !14772
  %131 = load double, double* %x188, align 8, !dbg !14772
  %add189 = fadd double %130, %131, !dbg !14773
  %arrayidx190 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_p, i64 0, i64 1, !dbg !14774
  %x191 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx190, i32 0, i32 0, !dbg !14775
  store double %add189, double* %x191, align 16, !dbg !14776
  %132 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %polygon_primitive, align 8, !dbg !14777
  %133 = load i64, i64* %n, align 8, !dbg !14778
  %arrayidx192 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %132, i64 %133, !dbg !14777
  %point193 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx192, i32 0, i32 0, !dbg !14779
  %y194 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point193, i32 0, i32 1, !dbg !14780
  %134 = load double, double* %y194, align 8, !dbg !14780
  %y195 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %offset, i32 0, i32 1, !dbg !14781
  %135 = load double, double* %y195, align 8, !dbg !14781
  %add196 = fadd double %134, %135, !dbg !14782
  %arrayidx197 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_p, i64 0, i64 1, !dbg !14783
  %y198 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx197, i32 0, i32 1, !dbg !14784
  store double %add196, double* %y198, align 8, !dbg !14785
  %136 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %polygon_primitive, align 8, !dbg !14786
  %arrayidx199 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %136, i64 0, !dbg !14786
  %point200 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx199, i32 0, i32 0, !dbg !14787
  %x201 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point200, i32 0, i32 0, !dbg !14788
  %137 = load double, double* %x201, align 8, !dbg !14788
  %x202 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %offset, i32 0, i32 0, !dbg !14789
  %138 = load double, double* %x202, align 8, !dbg !14789
  %sub203 = fsub double %137, %138, !dbg !14790
  %arrayidx204 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_q, i64 0, i64 0, !dbg !14791
  %x205 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx204, i32 0, i32 0, !dbg !14792
  store double %sub203, double* %x205, align 16, !dbg !14793
  %139 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %polygon_primitive, align 8, !dbg !14794
  %arrayidx206 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %139, i64 0, !dbg !14794
  %point207 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx206, i32 0, i32 0, !dbg !14795
  %y208 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point207, i32 0, i32 1, !dbg !14796
  %140 = load double, double* %y208, align 8, !dbg !14796
  %y209 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %offset, i32 0, i32 1, !dbg !14797
  %141 = load double, double* %y209, align 8, !dbg !14797
  %sub210 = fsub double %140, %141, !dbg !14798
  %arrayidx211 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_q, i64 0, i64 0, !dbg !14799
  %y212 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx211, i32 0, i32 1, !dbg !14800
  store double %sub210, double* %y212, align 8, !dbg !14801
  %142 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %polygon_primitive, align 8, !dbg !14802
  %143 = load i64, i64* %n, align 8, !dbg !14803
  %arrayidx213 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %142, i64 %143, !dbg !14802
  %point214 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx213, i32 0, i32 0, !dbg !14804
  %x215 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point214, i32 0, i32 0, !dbg !14805
  %144 = load double, double* %x215, align 8, !dbg !14805
  %x216 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %offset, i32 0, i32 0, !dbg !14806
  %145 = load double, double* %x216, align 8, !dbg !14806
  %sub217 = fsub double %144, %145, !dbg !14807
  %arrayidx218 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_q, i64 0, i64 1, !dbg !14808
  %x219 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx218, i32 0, i32 0, !dbg !14809
  store double %sub217, double* %x219, align 16, !dbg !14810
  %146 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %polygon_primitive, align 8, !dbg !14811
  %147 = load i64, i64* %n, align 8, !dbg !14812
  %arrayidx220 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %146, i64 %147, !dbg !14811
  %point221 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx220, i32 0, i32 0, !dbg !14813
  %y222 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point221, i32 0, i32 1, !dbg !14814
  %148 = load double, double* %y222, align 8, !dbg !14814
  %y223 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %offset, i32 0, i32 1, !dbg !14815
  %149 = load double, double* %y223, align 8, !dbg !14815
  %sub224 = fsub double %148, %149, !dbg !14816
  %arrayidx225 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_q, i64 0, i64 1, !dbg !14817
  %y226 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx225, i32 0, i32 1, !dbg !14818
  store double %sub224, double* %y226, align 8, !dbg !14819
  br label %if.end227

if.end227:                                        ; preds = %if.else, %if.then106
  store i64 0, i64* %p, align 8, !dbg !14820
  store i64 0, i64* %q, align 8, !dbg !14821
  %150 = load %struct._PointInfo*, %struct._PointInfo** %path_q, align 8, !dbg !14822
  %151 = load i64, i64* %p, align 8, !dbg !14823
  %inc228 = add nsw i64 %151, 1, !dbg !14823
  store i64 %inc228, i64* %p, align 8, !dbg !14823
  %arrayidx229 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %150, i64 %151, !dbg !14822
  %arrayidx230 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_q, i64 0, i64 0, !dbg !14824
  %152 = bitcast %struct._PointInfo* %arrayidx229 to i8*, !dbg !14824
  %153 = bitcast %struct._PointInfo* %arrayidx230 to i8*, !dbg !14824
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %152, i8* align 16 %153, i64 16, i1 false), !dbg !14824
  %154 = load %struct._PointInfo*, %struct._PointInfo** %path_p, align 8, !dbg !14825
  %155 = load i64, i64* %q, align 8, !dbg !14826
  %inc231 = add nsw i64 %155, 1, !dbg !14826
  store i64 %inc231, i64* %q, align 8, !dbg !14826
  %arrayidx232 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %154, i64 %155, !dbg !14825
  %arrayidx233 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_p, i64 0, i64 0, !dbg !14827
  %156 = bitcast %struct._PointInfo* %arrayidx232 to i8*, !dbg !14827
  %157 = bitcast %struct._PointInfo* %arrayidx233 to i8*, !dbg !14827
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %156, i8* align 16 %157, i64 16, i1 false), !dbg !14827
  %158 = load i64, i64* %n, align 8, !dbg !14828
  %add234 = add nsw i64 %158, 1, !dbg !14830
  store i64 %add234, i64* %i, align 8, !dbg !14831
  br label %for.cond235, !dbg !14832

for.cond235:                                      ; preds = %for.inc959, %if.end227
  %159 = load i64, i64* %i, align 8, !dbg !14833
  %160 = load i64, i64* %number_vertices, align 8, !dbg !14835
  %cmp236 = icmp slt i64 %159, %160, !dbg !14836
  br i1 %cmp236, label %for.body238, label %for.end961, !dbg !14837

for.body238:                                      ; preds = %for.cond235
  %161 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %polygon_primitive, align 8, !dbg !14838
  %162 = load i64, i64* %i, align 8, !dbg !14840
  %arrayidx239 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %161, i64 %162, !dbg !14838
  %point240 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx239, i32 0, i32 0, !dbg !14841
  %x241 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point240, i32 0, i32 0, !dbg !14842
  %163 = load double, double* %x241, align 8, !dbg !14842
  %164 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %polygon_primitive, align 8, !dbg !14843
  %165 = load i64, i64* %n, align 8, !dbg !14844
  %arrayidx242 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %164, i64 %165, !dbg !14843
  %point243 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx242, i32 0, i32 0, !dbg !14845
  %x244 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point243, i32 0, i32 0, !dbg !14846
  %166 = load double, double* %x244, align 8, !dbg !14846
  %sub245 = fsub double %163, %166, !dbg !14847
  %q246 = getelementptr inbounds %struct._LineSegment, %struct._LineSegment* %dx, i32 0, i32 1, !dbg !14848
  store double %sub245, double* %q246, align 8, !dbg !14849
  %167 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %polygon_primitive, align 8, !dbg !14850
  %168 = load i64, i64* %i, align 8, !dbg !14851
  %arrayidx247 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %167, i64 %168, !dbg !14850
  %point248 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx247, i32 0, i32 0, !dbg !14852
  %y249 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point248, i32 0, i32 1, !dbg !14853
  %169 = load double, double* %y249, align 8, !dbg !14853
  %170 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %polygon_primitive, align 8, !dbg !14854
  %171 = load i64, i64* %n, align 8, !dbg !14855
  %arrayidx250 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %170, i64 %171, !dbg !14854
  %point251 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx250, i32 0, i32 0, !dbg !14856
  %y252 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point251, i32 0, i32 1, !dbg !14857
  %172 = load double, double* %y252, align 8, !dbg !14857
  %sub253 = fsub double %169, %172, !dbg !14858
  %q254 = getelementptr inbounds %struct._LineSegment, %struct._LineSegment* %dy, i32 0, i32 1, !dbg !14859
  store double %sub253, double* %q254, align 8, !dbg !14860
  %q255 = getelementptr inbounds %struct._LineSegment, %struct._LineSegment* %dx, i32 0, i32 1, !dbg !14861
  %173 = load double, double* %q255, align 8, !dbg !14861
  %q256 = getelementptr inbounds %struct._LineSegment, %struct._LineSegment* %dx, i32 0, i32 1, !dbg !14862
  %174 = load double, double* %q256, align 8, !dbg !14862
  %mul257 = fmul double %173, %174, !dbg !14863
  %q258 = getelementptr inbounds %struct._LineSegment, %struct._LineSegment* %dy, i32 0, i32 1, !dbg !14864
  %175 = load double, double* %q258, align 8, !dbg !14864
  %q259 = getelementptr inbounds %struct._LineSegment, %struct._LineSegment* %dy, i32 0, i32 1, !dbg !14865
  %176 = load double, double* %q259, align 8, !dbg !14865
  %mul260 = fmul double %175, %176, !dbg !14866
  %add261 = fadd double %mul257, %mul260, !dbg !14867
  store double %add261, double* %dot_product, align 8, !dbg !14868
  %177 = load double, double* %dot_product, align 8, !dbg !14869
  %cmp262 = fcmp olt double %177, 2.500000e-01, !dbg !14871
  br i1 %cmp262, label %if.then264, label %if.end265, !dbg !14872

if.then264:                                       ; preds = %for.body238
  br label %for.inc959, !dbg !14873

if.end265:                                        ; preds = %for.body238
  %q266 = getelementptr inbounds %struct._LineSegment, %struct._LineSegment* %dx, i32 0, i32 1, !dbg !14874
  %178 = load double, double* %q266, align 8, !dbg !14874
  %call267 = call double @DrawEpsilonReciprocal(double %178), !dbg !14875
  %q268 = getelementptr inbounds %struct._LineSegment, %struct._LineSegment* %dy, i32 0, i32 1, !dbg !14876
  %179 = load double, double* %q268, align 8, !dbg !14876
  %mul269 = fmul double %call267, %179, !dbg !14877
  %q270 = getelementptr inbounds %struct._LineSegment, %struct._LineSegment* %slope, i32 0, i32 1, !dbg !14878
  store double %mul269, double* %q270, align 8, !dbg !14879
  %q271 = getelementptr inbounds %struct._LineSegment, %struct._LineSegment* %slope, i32 0, i32 1, !dbg !14880
  %180 = load double, double* %q271, align 8, !dbg !14880
  %call272 = call double @DrawEpsilonReciprocal(double %180), !dbg !14881
  %mul273 = fmul double -1.000000e+00, %call272, !dbg !14882
  %q274 = getelementptr inbounds %struct._LineSegment, %struct._LineSegment* %inverse_slope, i32 0, i32 1, !dbg !14883
  store double %mul273, double* %q274, align 8, !dbg !14884
  %181 = load double, double* %mid, align 8, !dbg !14885
  %182 = load double, double* %mid, align 8, !dbg !14886
  %mul275 = fmul double %181, %182, !dbg !14887
  %q276 = getelementptr inbounds %struct._LineSegment, %struct._LineSegment* %inverse_slope, i32 0, i32 1, !dbg !14888
  %183 = load double, double* %q276, align 8, !dbg !14888
  %q277 = getelementptr inbounds %struct._LineSegment, %struct._LineSegment* %inverse_slope, i32 0, i32 1, !dbg !14889
  %184 = load double, double* %q277, align 8, !dbg !14889
  %mul278 = fmul double %183, %184, !dbg !14890
  %add279 = fadd double %mul278, 1.000000e+00, !dbg !14891
  %div280 = fdiv double %mul275, %add279, !dbg !14892
  %call281 = call double @sqrt(double %div280) #17, !dbg !14893
  %x282 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %offset, i32 0, i32 0, !dbg !14894
  store double %call281, double* %x282, align 8, !dbg !14895
  %x283 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %offset, i32 0, i32 0, !dbg !14896
  %185 = load double, double* %x283, align 8, !dbg !14896
  %q284 = getelementptr inbounds %struct._LineSegment, %struct._LineSegment* %inverse_slope, i32 0, i32 1, !dbg !14897
  %186 = load double, double* %q284, align 8, !dbg !14897
  %mul285 = fmul double %185, %186, !dbg !14898
  %y286 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %offset, i32 0, i32 1, !dbg !14899
  store double %mul285, double* %y286, align 8, !dbg !14900
  %q287 = getelementptr inbounds %struct._LineSegment, %struct._LineSegment* %dy, i32 0, i32 1, !dbg !14901
  %187 = load double, double* %q287, align 8, !dbg !14901
  %x288 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %offset, i32 0, i32 0, !dbg !14902
  %188 = load double, double* %x288, align 8, !dbg !14902
  %mul289 = fmul double %187, %188, !dbg !14903
  %q290 = getelementptr inbounds %struct._LineSegment, %struct._LineSegment* %dx, i32 0, i32 1, !dbg !14904
  %189 = load double, double* %q290, align 8, !dbg !14904
  %y291 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %offset, i32 0, i32 1, !dbg !14905
  %190 = load double, double* %y291, align 8, !dbg !14905
  %mul292 = fmul double %189, %190, !dbg !14906
  %sub293 = fsub double %mul289, %mul292, !dbg !14907
  store double %sub293, double* %dot_product, align 8, !dbg !14908
  %191 = load double, double* %dot_product, align 8, !dbg !14909
  %cmp294 = fcmp ogt double %191, 0.000000e+00, !dbg !14911
  br i1 %cmp294, label %if.then296, label %if.else353, !dbg !14912

if.then296:                                       ; preds = %if.end265
  %192 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %polygon_primitive, align 8, !dbg !14913
  %193 = load i64, i64* %n, align 8, !dbg !14915
  %arrayidx297 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %192, i64 %193, !dbg !14913
  %point298 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx297, i32 0, i32 0, !dbg !14916
  %x299 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point298, i32 0, i32 0, !dbg !14917
  %194 = load double, double* %x299, align 8, !dbg !14917
  %x300 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %offset, i32 0, i32 0, !dbg !14918
  %195 = load double, double* %x300, align 8, !dbg !14918
  %sub301 = fsub double %194, %195, !dbg !14919
  %arrayidx302 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_p, i64 0, i64 2, !dbg !14920
  %x303 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx302, i32 0, i32 0, !dbg !14921
  store double %sub301, double* %x303, align 16, !dbg !14922
  %196 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %polygon_primitive, align 8, !dbg !14923
  %197 = load i64, i64* %n, align 8, !dbg !14924
  %arrayidx304 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %196, i64 %197, !dbg !14923
  %point305 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx304, i32 0, i32 0, !dbg !14925
  %y306 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point305, i32 0, i32 1, !dbg !14926
  %198 = load double, double* %y306, align 8, !dbg !14926
  %y307 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %offset, i32 0, i32 1, !dbg !14927
  %199 = load double, double* %y307, align 8, !dbg !14927
  %sub308 = fsub double %198, %199, !dbg !14928
  %arrayidx309 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_p, i64 0, i64 2, !dbg !14929
  %y310 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx309, i32 0, i32 1, !dbg !14930
  store double %sub308, double* %y310, align 8, !dbg !14931
  %200 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %polygon_primitive, align 8, !dbg !14932
  %201 = load i64, i64* %i, align 8, !dbg !14933
  %arrayidx311 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %200, i64 %201, !dbg !14932
  %point312 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx311, i32 0, i32 0, !dbg !14934
  %x313 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point312, i32 0, i32 0, !dbg !14935
  %202 = load double, double* %x313, align 8, !dbg !14935
  %x314 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %offset, i32 0, i32 0, !dbg !14936
  %203 = load double, double* %x314, align 8, !dbg !14936
  %sub315 = fsub double %202, %203, !dbg !14937
  %arrayidx316 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_p, i64 0, i64 3, !dbg !14938
  %x317 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx316, i32 0, i32 0, !dbg !14939
  store double %sub315, double* %x317, align 16, !dbg !14940
  %204 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %polygon_primitive, align 8, !dbg !14941
  %205 = load i64, i64* %i, align 8, !dbg !14942
  %arrayidx318 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %204, i64 %205, !dbg !14941
  %point319 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx318, i32 0, i32 0, !dbg !14943
  %y320 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point319, i32 0, i32 1, !dbg !14944
  %206 = load double, double* %y320, align 8, !dbg !14944
  %y321 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %offset, i32 0, i32 1, !dbg !14945
  %207 = load double, double* %y321, align 8, !dbg !14945
  %sub322 = fsub double %206, %207, !dbg !14946
  %arrayidx323 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_p, i64 0, i64 3, !dbg !14947
  %y324 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx323, i32 0, i32 1, !dbg !14948
  store double %sub322, double* %y324, align 8, !dbg !14949
  %208 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %polygon_primitive, align 8, !dbg !14950
  %209 = load i64, i64* %n, align 8, !dbg !14951
  %arrayidx325 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %208, i64 %209, !dbg !14950
  %point326 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx325, i32 0, i32 0, !dbg !14952
  %x327 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point326, i32 0, i32 0, !dbg !14953
  %210 = load double, double* %x327, align 8, !dbg !14953
  %x328 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %offset, i32 0, i32 0, !dbg !14954
  %211 = load double, double* %x328, align 8, !dbg !14954
  %add329 = fadd double %210, %211, !dbg !14955
  %arrayidx330 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_q, i64 0, i64 2, !dbg !14956
  %x331 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx330, i32 0, i32 0, !dbg !14957
  store double %add329, double* %x331, align 16, !dbg !14958
  %212 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %polygon_primitive, align 8, !dbg !14959
  %213 = load i64, i64* %n, align 8, !dbg !14960
  %arrayidx332 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %212, i64 %213, !dbg !14959
  %point333 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx332, i32 0, i32 0, !dbg !14961
  %y334 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point333, i32 0, i32 1, !dbg !14962
  %214 = load double, double* %y334, align 8, !dbg !14962
  %y335 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %offset, i32 0, i32 1, !dbg !14963
  %215 = load double, double* %y335, align 8, !dbg !14963
  %add336 = fadd double %214, %215, !dbg !14964
  %arrayidx337 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_q, i64 0, i64 2, !dbg !14965
  %y338 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx337, i32 0, i32 1, !dbg !14966
  store double %add336, double* %y338, align 8, !dbg !14967
  %216 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %polygon_primitive, align 8, !dbg !14968
  %217 = load i64, i64* %i, align 8, !dbg !14969
  %arrayidx339 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %216, i64 %217, !dbg !14968
  %point340 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx339, i32 0, i32 0, !dbg !14970
  %x341 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point340, i32 0, i32 0, !dbg !14971
  %218 = load double, double* %x341, align 8, !dbg !14971
  %x342 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %offset, i32 0, i32 0, !dbg !14972
  %219 = load double, double* %x342, align 8, !dbg !14972
  %add343 = fadd double %218, %219, !dbg !14973
  %arrayidx344 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_q, i64 0, i64 3, !dbg !14974
  %x345 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx344, i32 0, i32 0, !dbg !14975
  store double %add343, double* %x345, align 16, !dbg !14976
  %220 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %polygon_primitive, align 8, !dbg !14977
  %221 = load i64, i64* %i, align 8, !dbg !14978
  %arrayidx346 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %220, i64 %221, !dbg !14977
  %point347 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx346, i32 0, i32 0, !dbg !14979
  %y348 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point347, i32 0, i32 1, !dbg !14980
  %222 = load double, double* %y348, align 8, !dbg !14980
  %y349 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %offset, i32 0, i32 1, !dbg !14981
  %223 = load double, double* %y349, align 8, !dbg !14981
  %add350 = fadd double %222, %223, !dbg !14982
  %arrayidx351 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_q, i64 0, i64 3, !dbg !14983
  %y352 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx351, i32 0, i32 1, !dbg !14984
  store double %add350, double* %y352, align 8, !dbg !14985
  br label %if.end410, !dbg !14986

if.else353:                                       ; preds = %if.end265
  %224 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %polygon_primitive, align 8, !dbg !14987
  %225 = load i64, i64* %n, align 8, !dbg !14989
  %arrayidx354 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %224, i64 %225, !dbg !14987
  %point355 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx354, i32 0, i32 0, !dbg !14990
  %x356 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point355, i32 0, i32 0, !dbg !14991
  %226 = load double, double* %x356, align 8, !dbg !14991
  %x357 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %offset, i32 0, i32 0, !dbg !14992
  %227 = load double, double* %x357, align 8, !dbg !14992
  %add358 = fadd double %226, %227, !dbg !14993
  %arrayidx359 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_p, i64 0, i64 2, !dbg !14994
  %x360 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx359, i32 0, i32 0, !dbg !14995
  store double %add358, double* %x360, align 16, !dbg !14996
  %228 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %polygon_primitive, align 8, !dbg !14997
  %229 = load i64, i64* %n, align 8, !dbg !14998
  %arrayidx361 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %228, i64 %229, !dbg !14997
  %point362 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx361, i32 0, i32 0, !dbg !14999
  %y363 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point362, i32 0, i32 1, !dbg !15000
  %230 = load double, double* %y363, align 8, !dbg !15000
  %y364 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %offset, i32 0, i32 1, !dbg !15001
  %231 = load double, double* %y364, align 8, !dbg !15001
  %add365 = fadd double %230, %231, !dbg !15002
  %arrayidx366 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_p, i64 0, i64 2, !dbg !15003
  %y367 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx366, i32 0, i32 1, !dbg !15004
  store double %add365, double* %y367, align 8, !dbg !15005
  %232 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %polygon_primitive, align 8, !dbg !15006
  %233 = load i64, i64* %i, align 8, !dbg !15007
  %arrayidx368 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %232, i64 %233, !dbg !15006
  %point369 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx368, i32 0, i32 0, !dbg !15008
  %x370 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point369, i32 0, i32 0, !dbg !15009
  %234 = load double, double* %x370, align 8, !dbg !15009
  %x371 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %offset, i32 0, i32 0, !dbg !15010
  %235 = load double, double* %x371, align 8, !dbg !15010
  %add372 = fadd double %234, %235, !dbg !15011
  %arrayidx373 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_p, i64 0, i64 3, !dbg !15012
  %x374 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx373, i32 0, i32 0, !dbg !15013
  store double %add372, double* %x374, align 16, !dbg !15014
  %236 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %polygon_primitive, align 8, !dbg !15015
  %237 = load i64, i64* %i, align 8, !dbg !15016
  %arrayidx375 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %236, i64 %237, !dbg !15015
  %point376 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx375, i32 0, i32 0, !dbg !15017
  %y377 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point376, i32 0, i32 1, !dbg !15018
  %238 = load double, double* %y377, align 8, !dbg !15018
  %y378 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %offset, i32 0, i32 1, !dbg !15019
  %239 = load double, double* %y378, align 8, !dbg !15019
  %add379 = fadd double %238, %239, !dbg !15020
  %arrayidx380 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_p, i64 0, i64 3, !dbg !15021
  %y381 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx380, i32 0, i32 1, !dbg !15022
  store double %add379, double* %y381, align 8, !dbg !15023
  %240 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %polygon_primitive, align 8, !dbg !15024
  %241 = load i64, i64* %n, align 8, !dbg !15025
  %arrayidx382 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %240, i64 %241, !dbg !15024
  %point383 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx382, i32 0, i32 0, !dbg !15026
  %x384 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point383, i32 0, i32 0, !dbg !15027
  %242 = load double, double* %x384, align 8, !dbg !15027
  %x385 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %offset, i32 0, i32 0, !dbg !15028
  %243 = load double, double* %x385, align 8, !dbg !15028
  %sub386 = fsub double %242, %243, !dbg !15029
  %arrayidx387 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_q, i64 0, i64 2, !dbg !15030
  %x388 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx387, i32 0, i32 0, !dbg !15031
  store double %sub386, double* %x388, align 16, !dbg !15032
  %244 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %polygon_primitive, align 8, !dbg !15033
  %245 = load i64, i64* %n, align 8, !dbg !15034
  %arrayidx389 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %244, i64 %245, !dbg !15033
  %point390 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx389, i32 0, i32 0, !dbg !15035
  %y391 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point390, i32 0, i32 1, !dbg !15036
  %246 = load double, double* %y391, align 8, !dbg !15036
  %y392 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %offset, i32 0, i32 1, !dbg !15037
  %247 = load double, double* %y392, align 8, !dbg !15037
  %sub393 = fsub double %246, %247, !dbg !15038
  %arrayidx394 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_q, i64 0, i64 2, !dbg !15039
  %y395 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx394, i32 0, i32 1, !dbg !15040
  store double %sub393, double* %y395, align 8, !dbg !15041
  %248 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %polygon_primitive, align 8, !dbg !15042
  %249 = load i64, i64* %i, align 8, !dbg !15043
  %arrayidx396 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %248, i64 %249, !dbg !15042
  %point397 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx396, i32 0, i32 0, !dbg !15044
  %x398 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point397, i32 0, i32 0, !dbg !15045
  %250 = load double, double* %x398, align 8, !dbg !15045
  %x399 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %offset, i32 0, i32 0, !dbg !15046
  %251 = load double, double* %x399, align 8, !dbg !15046
  %sub400 = fsub double %250, %251, !dbg !15047
  %arrayidx401 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_q, i64 0, i64 3, !dbg !15048
  %x402 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx401, i32 0, i32 0, !dbg !15049
  store double %sub400, double* %x402, align 16, !dbg !15050
  %252 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %polygon_primitive, align 8, !dbg !15051
  %253 = load i64, i64* %i, align 8, !dbg !15052
  %arrayidx403 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %252, i64 %253, !dbg !15051
  %point404 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx403, i32 0, i32 0, !dbg !15053
  %y405 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point404, i32 0, i32 1, !dbg !15054
  %254 = load double, double* %y405, align 8, !dbg !15054
  %y406 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %offset, i32 0, i32 1, !dbg !15055
  %255 = load double, double* %y406, align 8, !dbg !15055
  %sub407 = fsub double %254, %255, !dbg !15056
  %arrayidx408 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_q, i64 0, i64 3, !dbg !15057
  %y409 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx408, i32 0, i32 1, !dbg !15058
  store double %sub407, double* %y409, align 8, !dbg !15059
  br label %if.end410

if.end410:                                        ; preds = %if.else353, %if.then296
  %p411 = getelementptr inbounds %struct._LineSegment, %struct._LineSegment* %slope, i32 0, i32 0, !dbg !15060
  %256 = load double, double* %p411, align 8, !dbg !15060
  %q412 = getelementptr inbounds %struct._LineSegment, %struct._LineSegment* %slope, i32 0, i32 1, !dbg !15062
  %257 = load double, double* %q412, align 8, !dbg !15062
  %sub413 = fsub double %256, %257, !dbg !15063
  %258 = call double @llvm.fabs.f64(double %sub413), !dbg !15064
  %cmp414 = fcmp olt double %258, 1.000000e-15, !dbg !15065
  br i1 %cmp414, label %if.then416, label %if.else421, !dbg !15066

if.then416:                                       ; preds = %if.end410
  %arrayidx417 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_p, i64 0, i64 4, !dbg !15067
  %arrayidx418 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_p, i64 0, i64 1, !dbg !15069
  %259 = bitcast %struct._PointInfo* %arrayidx417 to i8*, !dbg !15069
  %260 = bitcast %struct._PointInfo* %arrayidx418 to i8*, !dbg !15069
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %259, i8* align 16 %260, i64 16, i1 false), !dbg !15069
  %arrayidx419 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_q, i64 0, i64 4, !dbg !15070
  %arrayidx420 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_q, i64 0, i64 1, !dbg !15071
  %261 = bitcast %struct._PointInfo* %arrayidx419 to i8*, !dbg !15071
  %262 = bitcast %struct._PointInfo* %arrayidx420 to i8*, !dbg !15071
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %261, i8* align 16 %262, i64 16, i1 false), !dbg !15071
  br label %if.end488, !dbg !15072

if.else421:                                       ; preds = %if.end410
  %p422 = getelementptr inbounds %struct._LineSegment, %struct._LineSegment* %slope, i32 0, i32 0, !dbg !15073
  %263 = load double, double* %p422, align 8, !dbg !15073
  %arrayidx423 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_p, i64 0, i64 0, !dbg !15075
  %x424 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx423, i32 0, i32 0, !dbg !15076
  %264 = load double, double* %x424, align 16, !dbg !15076
  %mul425 = fmul double %263, %264, !dbg !15077
  %arrayidx426 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_p, i64 0, i64 0, !dbg !15078
  %y427 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx426, i32 0, i32 1, !dbg !15079
  %265 = load double, double* %y427, align 8, !dbg !15079
  %sub428 = fsub double %mul425, %265, !dbg !15080
  %q429 = getelementptr inbounds %struct._LineSegment, %struct._LineSegment* %slope, i32 0, i32 1, !dbg !15081
  %266 = load double, double* %q429, align 8, !dbg !15081
  %arrayidx430 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_p, i64 0, i64 3, !dbg !15082
  %x431 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx430, i32 0, i32 0, !dbg !15083
  %267 = load double, double* %x431, align 16, !dbg !15083
  %mul432 = fmul double %266, %267, !dbg !15084
  %sub433 = fsub double %sub428, %mul432, !dbg !15085
  %arrayidx434 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_p, i64 0, i64 3, !dbg !15086
  %y435 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx434, i32 0, i32 1, !dbg !15087
  %268 = load double, double* %y435, align 8, !dbg !15087
  %add436 = fadd double %sub433, %268, !dbg !15088
  %p437 = getelementptr inbounds %struct._LineSegment, %struct._LineSegment* %slope, i32 0, i32 0, !dbg !15089
  %269 = load double, double* %p437, align 8, !dbg !15089
  %q438 = getelementptr inbounds %struct._LineSegment, %struct._LineSegment* %slope, i32 0, i32 1, !dbg !15090
  %270 = load double, double* %q438, align 8, !dbg !15090
  %sub439 = fsub double %269, %270, !dbg !15091
  %div440 = fdiv double %add436, %sub439, !dbg !15092
  %arrayidx441 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_p, i64 0, i64 4, !dbg !15093
  %x442 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx441, i32 0, i32 0, !dbg !15094
  store double %div440, double* %x442, align 16, !dbg !15095
  %p443 = getelementptr inbounds %struct._LineSegment, %struct._LineSegment* %slope, i32 0, i32 0, !dbg !15096
  %271 = load double, double* %p443, align 8, !dbg !15096
  %arrayidx444 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_p, i64 0, i64 4, !dbg !15097
  %x445 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx444, i32 0, i32 0, !dbg !15098
  %272 = load double, double* %x445, align 16, !dbg !15098
  %arrayidx446 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_p, i64 0, i64 0, !dbg !15099
  %x447 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx446, i32 0, i32 0, !dbg !15100
  %273 = load double, double* %x447, align 16, !dbg !15100
  %sub448 = fsub double %272, %273, !dbg !15101
  %mul449 = fmul double %271, %sub448, !dbg !15102
  %arrayidx450 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_p, i64 0, i64 0, !dbg !15103
  %y451 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx450, i32 0, i32 1, !dbg !15104
  %274 = load double, double* %y451, align 8, !dbg !15104
  %add452 = fadd double %mul449, %274, !dbg !15105
  %arrayidx453 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_p, i64 0, i64 4, !dbg !15106
  %y454 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx453, i32 0, i32 1, !dbg !15107
  store double %add452, double* %y454, align 8, !dbg !15108
  %p455 = getelementptr inbounds %struct._LineSegment, %struct._LineSegment* %slope, i32 0, i32 0, !dbg !15109
  %275 = load double, double* %p455, align 8, !dbg !15109
  %arrayidx456 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_q, i64 0, i64 0, !dbg !15110
  %x457 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx456, i32 0, i32 0, !dbg !15111
  %276 = load double, double* %x457, align 16, !dbg !15111
  %mul458 = fmul double %275, %276, !dbg !15112
  %arrayidx459 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_q, i64 0, i64 0, !dbg !15113
  %y460 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx459, i32 0, i32 1, !dbg !15114
  %277 = load double, double* %y460, align 8, !dbg !15114
  %sub461 = fsub double %mul458, %277, !dbg !15115
  %q462 = getelementptr inbounds %struct._LineSegment, %struct._LineSegment* %slope, i32 0, i32 1, !dbg !15116
  %278 = load double, double* %q462, align 8, !dbg !15116
  %arrayidx463 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_q, i64 0, i64 3, !dbg !15117
  %x464 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx463, i32 0, i32 0, !dbg !15118
  %279 = load double, double* %x464, align 16, !dbg !15118
  %mul465 = fmul double %278, %279, !dbg !15119
  %sub466 = fsub double %sub461, %mul465, !dbg !15120
  %arrayidx467 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_q, i64 0, i64 3, !dbg !15121
  %y468 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx467, i32 0, i32 1, !dbg !15122
  %280 = load double, double* %y468, align 8, !dbg !15122
  %add469 = fadd double %sub466, %280, !dbg !15123
  %p470 = getelementptr inbounds %struct._LineSegment, %struct._LineSegment* %slope, i32 0, i32 0, !dbg !15124
  %281 = load double, double* %p470, align 8, !dbg !15124
  %q471 = getelementptr inbounds %struct._LineSegment, %struct._LineSegment* %slope, i32 0, i32 1, !dbg !15125
  %282 = load double, double* %q471, align 8, !dbg !15125
  %sub472 = fsub double %281, %282, !dbg !15126
  %div473 = fdiv double %add469, %sub472, !dbg !15127
  %arrayidx474 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_q, i64 0, i64 4, !dbg !15128
  %x475 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx474, i32 0, i32 0, !dbg !15129
  store double %div473, double* %x475, align 16, !dbg !15130
  %p476 = getelementptr inbounds %struct._LineSegment, %struct._LineSegment* %slope, i32 0, i32 0, !dbg !15131
  %283 = load double, double* %p476, align 8, !dbg !15131
  %arrayidx477 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_q, i64 0, i64 4, !dbg !15132
  %x478 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx477, i32 0, i32 0, !dbg !15133
  %284 = load double, double* %x478, align 16, !dbg !15133
  %arrayidx479 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_q, i64 0, i64 0, !dbg !15134
  %x480 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx479, i32 0, i32 0, !dbg !15135
  %285 = load double, double* %x480, align 16, !dbg !15135
  %sub481 = fsub double %284, %285, !dbg !15136
  %mul482 = fmul double %283, %sub481, !dbg !15137
  %arrayidx483 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_q, i64 0, i64 0, !dbg !15138
  %y484 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx483, i32 0, i32 1, !dbg !15139
  %286 = load double, double* %y484, align 8, !dbg !15139
  %add485 = fadd double %mul482, %286, !dbg !15140
  %arrayidx486 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_q, i64 0, i64 4, !dbg !15141
  %y487 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx486, i32 0, i32 1, !dbg !15142
  store double %add485, double* %y487, align 8, !dbg !15143
  br label %if.end488

if.end488:                                        ; preds = %if.else421, %if.then416
  %287 = load i64, i64* %q, align 8, !dbg !15144
  %288 = load i64, i64* %max_strokes, align 8, !dbg !15146
  %sub489 = sub i64 %288, 1200, !dbg !15147
  %sub490 = sub i64 %sub489, 360, !dbg !15148
  %cmp491 = icmp sge i64 %287, %sub490, !dbg !15149
  br i1 %cmp491, label %if.then493, label %if.end505, !dbg !15150

if.then493:                                       ; preds = %if.end488
  %289 = load i64, i64* %max_strokes, align 8, !dbg !15151
  %add494 = add i64 %289, 1560, !dbg !15151
  store i64 %add494, i64* %max_strokes, align 8, !dbg !15151
  %290 = load %struct._PointInfo*, %struct._PointInfo** %path_p, align 8, !dbg !15153
  %291 = bitcast %struct._PointInfo* %290 to i8*, !dbg !15153
  %292 = load i64, i64* %max_strokes, align 8, !dbg !15154
  %call495 = call i8* @ResizeQuantumMemory(i8* %291, i64 %292, i64 16) #16, !dbg !15155
  %293 = bitcast i8* %call495 to %struct._PointInfo*, !dbg !15156
  store %struct._PointInfo* %293, %struct._PointInfo** %path_p, align 8, !dbg !15157
  %294 = load %struct._PointInfo*, %struct._PointInfo** %path_q, align 8, !dbg !15158
  %295 = bitcast %struct._PointInfo* %294 to i8*, !dbg !15158
  %296 = load i64, i64* %max_strokes, align 8, !dbg !15159
  %call496 = call i8* @ResizeQuantumMemory(i8* %295, i64 %296, i64 16) #16, !dbg !15160
  %297 = bitcast i8* %call496 to %struct._PointInfo*, !dbg !15161
  store %struct._PointInfo* %297, %struct._PointInfo** %path_q, align 8, !dbg !15162
  %298 = load %struct._PointInfo*, %struct._PointInfo** %path_p, align 8, !dbg !15163
  %cmp497 = icmp eq %struct._PointInfo* %298, null, !dbg !15165
  br i1 %cmp497, label %if.then502, label %lor.lhs.false499, !dbg !15166

lor.lhs.false499:                                 ; preds = %if.then493
  %299 = load %struct._PointInfo*, %struct._PointInfo** %path_q, align 8, !dbg !15167
  %cmp500 = icmp eq %struct._PointInfo* %299, null, !dbg !15168
  br i1 %cmp500, label %if.then502, label %if.end504, !dbg !15169

if.then502:                                       ; preds = %lor.lhs.false499, %if.then493
  %300 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %polygon_primitive, align 8, !dbg !15170
  %301 = bitcast %struct._PrimitiveInfo* %300 to i8*, !dbg !15170
  %call503 = call i8* @RelinquishMagickMemory(i8* %301), !dbg !15172
  %302 = bitcast i8* %call503 to %struct._PrimitiveInfo*, !dbg !15173
  store %struct._PrimitiveInfo* %302, %struct._PrimitiveInfo** %polygon_primitive, align 8, !dbg !15174
  store %struct._PrimitiveInfo* null, %struct._PrimitiveInfo** %retval, align 8, !dbg !15175
  br label %return, !dbg !15175

if.end504:                                        ; preds = %lor.lhs.false499
  br label %if.end505, !dbg !15176

if.end505:                                        ; preds = %if.end504, %if.end488
  %q506 = getelementptr inbounds %struct._LineSegment, %struct._LineSegment* %dx, i32 0, i32 1, !dbg !15177
  %303 = load double, double* %q506, align 8, !dbg !15177
  %p507 = getelementptr inbounds %struct._LineSegment, %struct._LineSegment* %dy, i32 0, i32 0, !dbg !15178
  %304 = load double, double* %p507, align 8, !dbg !15178
  %mul508 = fmul double %303, %304, !dbg !15179
  %p509 = getelementptr inbounds %struct._LineSegment, %struct._LineSegment* %dx, i32 0, i32 0, !dbg !15180
  %305 = load double, double* %p509, align 8, !dbg !15180
  %q510 = getelementptr inbounds %struct._LineSegment, %struct._LineSegment* %dy, i32 0, i32 1, !dbg !15181
  %306 = load double, double* %q510, align 8, !dbg !15181
  %mul511 = fmul double %305, %306, !dbg !15182
  %sub512 = fsub double %mul508, %mul511, !dbg !15183
  store double %sub512, double* %dot_product, align 8, !dbg !15184
  %307 = load double, double* %dot_product, align 8, !dbg !15185
  %cmp513 = fcmp ole double %307, 0.000000e+00, !dbg !15187
  br i1 %cmp513, label %if.then515, label %if.else730, !dbg !15188

if.then515:                                       ; preds = %if.end505
  %308 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !15189
  %linejoin516 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %308, i32 0, i32 16, !dbg !15190
  %309 = load i32, i32* %linejoin516, align 8, !dbg !15190
  switch i32 %309, label %sw.default [
    i32 3, label %sw.bb
    i32 1, label %sw.bb560
    i32 2, label %sw.bb607
  ], !dbg !15191

sw.bb:                                            ; preds = %if.then515
  %310 = load %struct._PointInfo*, %struct._PointInfo** %path_q, align 8, !dbg !15192
  %311 = load i64, i64* %q, align 8, !dbg !15195
  %inc517 = add nsw i64 %311, 1, !dbg !15195
  store i64 %inc517, i64* %q, align 8, !dbg !15195
  %arrayidx518 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %310, i64 %311, !dbg !15192
  %arrayidx519 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_q, i64 0, i64 1, !dbg !15196
  %312 = bitcast %struct._PointInfo* %arrayidx518 to i8*, !dbg !15196
  %313 = bitcast %struct._PointInfo* %arrayidx519 to i8*, !dbg !15196
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %312, i8* align 16 %313, i64 16, i1 false), !dbg !15196
  %314 = load %struct._PointInfo*, %struct._PointInfo** %path_q, align 8, !dbg !15197
  %315 = load i64, i64* %q, align 8, !dbg !15198
  %inc520 = add nsw i64 %315, 1, !dbg !15198
  store i64 %inc520, i64* %q, align 8, !dbg !15198
  %arrayidx521 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %314, i64 %315, !dbg !15197
  %arrayidx522 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_q, i64 0, i64 2, !dbg !15199
  %316 = bitcast %struct._PointInfo* %arrayidx521 to i8*, !dbg !15199
  %317 = bitcast %struct._PointInfo* %arrayidx522 to i8*, !dbg !15199
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %316, i8* align 16 %317, i64 16, i1 false), !dbg !15199
  %arrayidx523 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_q, i64 0, i64 4, !dbg !15200
  %x524 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx523, i32 0, i32 0, !dbg !15201
  %318 = load double, double* %x524, align 16, !dbg !15201
  %arrayidx525 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_p, i64 0, i64 4, !dbg !15202
  %x526 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx525, i32 0, i32 0, !dbg !15203
  %319 = load double, double* %x526, align 16, !dbg !15203
  %sub527 = fsub double %318, %319, !dbg !15204
  %arrayidx528 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_q, i64 0, i64 4, !dbg !15205
  %x529 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx528, i32 0, i32 0, !dbg !15206
  %320 = load double, double* %x529, align 16, !dbg !15206
  %arrayidx530 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_p, i64 0, i64 4, !dbg !15207
  %x531 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx530, i32 0, i32 0, !dbg !15208
  %321 = load double, double* %x531, align 16, !dbg !15208
  %sub532 = fsub double %320, %321, !dbg !15209
  %mul533 = fmul double %sub527, %sub532, !dbg !15210
  %arrayidx534 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_q, i64 0, i64 4, !dbg !15211
  %y535 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx534, i32 0, i32 1, !dbg !15212
  %322 = load double, double* %y535, align 8, !dbg !15212
  %arrayidx536 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_p, i64 0, i64 4, !dbg !15213
  %y537 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx536, i32 0, i32 1, !dbg !15214
  %323 = load double, double* %y537, align 8, !dbg !15214
  %sub538 = fsub double %322, %323, !dbg !15215
  %arrayidx539 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_q, i64 0, i64 4, !dbg !15216
  %y540 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx539, i32 0, i32 1, !dbg !15217
  %324 = load double, double* %y540, align 8, !dbg !15217
  %arrayidx541 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_p, i64 0, i64 4, !dbg !15218
  %y542 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx541, i32 0, i32 1, !dbg !15219
  %325 = load double, double* %y542, align 8, !dbg !15219
  %sub543 = fsub double %324, %325, !dbg !15220
  %mul544 = fmul double %sub538, %sub543, !dbg !15221
  %add545 = fadd double %mul533, %mul544, !dbg !15222
  store double %add545, double* %dot_product, align 8, !dbg !15223
  %326 = load double, double* %dot_product, align 8, !dbg !15224
  %327 = load double, double* %miterlimit, align 8, !dbg !15226
  %cmp546 = fcmp ole double %326, %327, !dbg !15227
  br i1 %cmp546, label %if.then548, label %if.else552, !dbg !15228

if.then548:                                       ; preds = %sw.bb
  %328 = load %struct._PointInfo*, %struct._PointInfo** %path_p, align 8, !dbg !15229
  %329 = load i64, i64* %p, align 8, !dbg !15230
  %inc549 = add nsw i64 %329, 1, !dbg !15230
  store i64 %inc549, i64* %p, align 8, !dbg !15230
  %arrayidx550 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %328, i64 %329, !dbg !15229
  %arrayidx551 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_p, i64 0, i64 4, !dbg !15231
  %330 = bitcast %struct._PointInfo* %arrayidx550 to i8*, !dbg !15231
  %331 = bitcast %struct._PointInfo* %arrayidx551 to i8*, !dbg !15231
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %330, i8* align 16 %331, i64 16, i1 false), !dbg !15231
  br label %if.end559, !dbg !15229

if.else552:                                       ; preds = %sw.bb
  %332 = load %struct._PointInfo*, %struct._PointInfo** %path_p, align 8, !dbg !15232
  %333 = load i64, i64* %p, align 8, !dbg !15234
  %inc553 = add nsw i64 %333, 1, !dbg !15234
  store i64 %inc553, i64* %p, align 8, !dbg !15234
  %arrayidx554 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %332, i64 %333, !dbg !15232
  %arrayidx555 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_p, i64 0, i64 1, !dbg !15235
  %334 = bitcast %struct._PointInfo* %arrayidx554 to i8*, !dbg !15235
  %335 = bitcast %struct._PointInfo* %arrayidx555 to i8*, !dbg !15235
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %334, i8* align 16 %335, i64 16, i1 false), !dbg !15235
  %336 = load %struct._PointInfo*, %struct._PointInfo** %path_p, align 8, !dbg !15236
  %337 = load i64, i64* %p, align 8, !dbg !15237
  %inc556 = add nsw i64 %337, 1, !dbg !15237
  store i64 %inc556, i64* %p, align 8, !dbg !15237
  %arrayidx557 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %336, i64 %337, !dbg !15236
  %arrayidx558 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_p, i64 0, i64 2, !dbg !15238
  %338 = bitcast %struct._PointInfo* %arrayidx557 to i8*, !dbg !15238
  %339 = bitcast %struct._PointInfo* %arrayidx558 to i8*, !dbg !15238
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %338, i8* align 16 %339, i64 16, i1 false), !dbg !15238
  br label %if.end559

if.end559:                                        ; preds = %if.else552, %if.then548
  br label %sw.epilog, !dbg !15239

sw.bb560:                                         ; preds = %if.then515
  %arrayidx561 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_q, i64 0, i64 4, !dbg !15240
  %x562 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx561, i32 0, i32 0, !dbg !15242
  %340 = load double, double* %x562, align 16, !dbg !15242
  %arrayidx563 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_p, i64 0, i64 4, !dbg !15243
  %x564 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx563, i32 0, i32 0, !dbg !15244
  %341 = load double, double* %x564, align 16, !dbg !15244
  %sub565 = fsub double %340, %341, !dbg !15245
  %arrayidx566 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_q, i64 0, i64 4, !dbg !15246
  %x567 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx566, i32 0, i32 0, !dbg !15247
  %342 = load double, double* %x567, align 16, !dbg !15247
  %arrayidx568 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_p, i64 0, i64 4, !dbg !15248
  %x569 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx568, i32 0, i32 0, !dbg !15249
  %343 = load double, double* %x569, align 16, !dbg !15249
  %sub570 = fsub double %342, %343, !dbg !15250
  %mul571 = fmul double %sub565, %sub570, !dbg !15251
  %arrayidx572 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_q, i64 0, i64 4, !dbg !15252
  %y573 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx572, i32 0, i32 1, !dbg !15253
  %344 = load double, double* %y573, align 8, !dbg !15253
  %arrayidx574 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_p, i64 0, i64 4, !dbg !15254
  %y575 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx574, i32 0, i32 1, !dbg !15255
  %345 = load double, double* %y575, align 8, !dbg !15255
  %sub576 = fsub double %344, %345, !dbg !15256
  %arrayidx577 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_q, i64 0, i64 4, !dbg !15257
  %y578 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx577, i32 0, i32 1, !dbg !15258
  %346 = load double, double* %y578, align 8, !dbg !15258
  %arrayidx579 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_p, i64 0, i64 4, !dbg !15259
  %y580 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx579, i32 0, i32 1, !dbg !15260
  %347 = load double, double* %y580, align 8, !dbg !15260
  %sub581 = fsub double %346, %347, !dbg !15261
  %mul582 = fmul double %sub576, %sub581, !dbg !15262
  %add583 = fadd double %mul571, %mul582, !dbg !15263
  store double %add583, double* %dot_product, align 8, !dbg !15264
  %348 = load double, double* %dot_product, align 8, !dbg !15265
  %349 = load double, double* %miterlimit, align 8, !dbg !15267
  %cmp584 = fcmp ole double %348, %349, !dbg !15268
  br i1 %cmp584, label %if.then586, label %if.else593, !dbg !15269

if.then586:                                       ; preds = %sw.bb560
  %350 = load %struct._PointInfo*, %struct._PointInfo** %path_q, align 8, !dbg !15270
  %351 = load i64, i64* %q, align 8, !dbg !15272
  %inc587 = add nsw i64 %351, 1, !dbg !15272
  store i64 %inc587, i64* %q, align 8, !dbg !15272
  %arrayidx588 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %350, i64 %351, !dbg !15270
  %arrayidx589 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_q, i64 0, i64 4, !dbg !15273
  %352 = bitcast %struct._PointInfo* %arrayidx588 to i8*, !dbg !15273
  %353 = bitcast %struct._PointInfo* %arrayidx589 to i8*, !dbg !15273
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %352, i8* align 16 %353, i64 16, i1 false), !dbg !15273
  %354 = load %struct._PointInfo*, %struct._PointInfo** %path_p, align 8, !dbg !15274
  %355 = load i64, i64* %p, align 8, !dbg !15275
  %inc590 = add nsw i64 %355, 1, !dbg !15275
  store i64 %inc590, i64* %p, align 8, !dbg !15275
  %arrayidx591 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %354, i64 %355, !dbg !15274
  %arrayidx592 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_p, i64 0, i64 4, !dbg !15276
  %356 = bitcast %struct._PointInfo* %arrayidx591 to i8*, !dbg !15276
  %357 = bitcast %struct._PointInfo* %arrayidx592 to i8*, !dbg !15276
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %356, i8* align 16 %357, i64 16, i1 false), !dbg !15276
  br label %if.end606, !dbg !15277

if.else593:                                       ; preds = %sw.bb560
  %358 = load %struct._PointInfo*, %struct._PointInfo** %path_q, align 8, !dbg !15278
  %359 = load i64, i64* %q, align 8, !dbg !15280
  %inc594 = add nsw i64 %359, 1, !dbg !15280
  store i64 %inc594, i64* %q, align 8, !dbg !15280
  %arrayidx595 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %358, i64 %359, !dbg !15278
  %arrayidx596 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_q, i64 0, i64 1, !dbg !15281
  %360 = bitcast %struct._PointInfo* %arrayidx595 to i8*, !dbg !15281
  %361 = bitcast %struct._PointInfo* %arrayidx596 to i8*, !dbg !15281
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %360, i8* align 16 %361, i64 16, i1 false), !dbg !15281
  %362 = load %struct._PointInfo*, %struct._PointInfo** %path_q, align 8, !dbg !15282
  %363 = load i64, i64* %q, align 8, !dbg !15283
  %inc597 = add nsw i64 %363, 1, !dbg !15283
  store i64 %inc597, i64* %q, align 8, !dbg !15283
  %arrayidx598 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %362, i64 %363, !dbg !15282
  %arrayidx599 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_q, i64 0, i64 2, !dbg !15284
  %364 = bitcast %struct._PointInfo* %arrayidx598 to i8*, !dbg !15284
  %365 = bitcast %struct._PointInfo* %arrayidx599 to i8*, !dbg !15284
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %364, i8* align 16 %365, i64 16, i1 false), !dbg !15284
  %366 = load %struct._PointInfo*, %struct._PointInfo** %path_p, align 8, !dbg !15285
  %367 = load i64, i64* %p, align 8, !dbg !15286
  %inc600 = add nsw i64 %367, 1, !dbg !15286
  store i64 %inc600, i64* %p, align 8, !dbg !15286
  %arrayidx601 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %366, i64 %367, !dbg !15285
  %arrayidx602 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_p, i64 0, i64 1, !dbg !15287
  %368 = bitcast %struct._PointInfo* %arrayidx601 to i8*, !dbg !15287
  %369 = bitcast %struct._PointInfo* %arrayidx602 to i8*, !dbg !15287
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %368, i8* align 16 %369, i64 16, i1 false), !dbg !15287
  %370 = load %struct._PointInfo*, %struct._PointInfo** %path_p, align 8, !dbg !15288
  %371 = load i64, i64* %p, align 8, !dbg !15289
  %inc603 = add nsw i64 %371, 1, !dbg !15289
  store i64 %inc603, i64* %p, align 8, !dbg !15289
  %arrayidx604 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %370, i64 %371, !dbg !15288
  %arrayidx605 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_p, i64 0, i64 2, !dbg !15290
  %372 = bitcast %struct._PointInfo* %arrayidx604 to i8*, !dbg !15290
  %373 = bitcast %struct._PointInfo* %arrayidx605 to i8*, !dbg !15290
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %372, i8* align 16 %373, i64 16, i1 false), !dbg !15290
  br label %if.end606

if.end606:                                        ; preds = %if.else593, %if.then586
  br label %sw.epilog, !dbg !15291

sw.bb607:                                         ; preds = %if.then515
  %arrayidx608 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_q, i64 0, i64 4, !dbg !15292
  %x609 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx608, i32 0, i32 0, !dbg !15294
  %374 = load double, double* %x609, align 16, !dbg !15294
  %arrayidx610 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_p, i64 0, i64 4, !dbg !15295
  %x611 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx610, i32 0, i32 0, !dbg !15296
  %375 = load double, double* %x611, align 16, !dbg !15296
  %sub612 = fsub double %374, %375, !dbg !15297
  %arrayidx613 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_q, i64 0, i64 4, !dbg !15298
  %x614 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx613, i32 0, i32 0, !dbg !15299
  %376 = load double, double* %x614, align 16, !dbg !15299
  %arrayidx615 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_p, i64 0, i64 4, !dbg !15300
  %x616 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx615, i32 0, i32 0, !dbg !15301
  %377 = load double, double* %x616, align 16, !dbg !15301
  %sub617 = fsub double %376, %377, !dbg !15302
  %mul618 = fmul double %sub612, %sub617, !dbg !15303
  %arrayidx619 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_q, i64 0, i64 4, !dbg !15304
  %y620 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx619, i32 0, i32 1, !dbg !15305
  %378 = load double, double* %y620, align 8, !dbg !15305
  %arrayidx621 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_p, i64 0, i64 4, !dbg !15306
  %y622 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx621, i32 0, i32 1, !dbg !15307
  %379 = load double, double* %y622, align 8, !dbg !15307
  %sub623 = fsub double %378, %379, !dbg !15308
  %arrayidx624 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_q, i64 0, i64 4, !dbg !15309
  %y625 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx624, i32 0, i32 1, !dbg !15310
  %380 = load double, double* %y625, align 8, !dbg !15310
  %arrayidx626 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_p, i64 0, i64 4, !dbg !15311
  %y627 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx626, i32 0, i32 1, !dbg !15312
  %381 = load double, double* %y627, align 8, !dbg !15312
  %sub628 = fsub double %380, %381, !dbg !15313
  %mul629 = fmul double %sub623, %sub628, !dbg !15314
  %add630 = fadd double %mul618, %mul629, !dbg !15315
  store double %add630, double* %dot_product, align 8, !dbg !15316
  %382 = load double, double* %dot_product, align 8, !dbg !15317
  %383 = load double, double* %miterlimit, align 8, !dbg !15319
  %cmp631 = fcmp ole double %382, %383, !dbg !15320
  br i1 %cmp631, label %if.then633, label %if.else637, !dbg !15321

if.then633:                                       ; preds = %sw.bb607
  %384 = load %struct._PointInfo*, %struct._PointInfo** %path_p, align 8, !dbg !15322
  %385 = load i64, i64* %p, align 8, !dbg !15323
  %inc634 = add nsw i64 %385, 1, !dbg !15323
  store i64 %inc634, i64* %p, align 8, !dbg !15323
  %arrayidx635 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %384, i64 %385, !dbg !15322
  %arrayidx636 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_p, i64 0, i64 4, !dbg !15324
  %386 = bitcast %struct._PointInfo* %arrayidx635 to i8*, !dbg !15324
  %387 = bitcast %struct._PointInfo* %arrayidx636 to i8*, !dbg !15324
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %386, i8* align 16 %387, i64 16, i1 false), !dbg !15324
  br label %if.end644, !dbg !15322

if.else637:                                       ; preds = %sw.bb607
  %388 = load %struct._PointInfo*, %struct._PointInfo** %path_p, align 8, !dbg !15325
  %389 = load i64, i64* %p, align 8, !dbg !15327
  %inc638 = add nsw i64 %389, 1, !dbg !15327
  store i64 %inc638, i64* %p, align 8, !dbg !15327
  %arrayidx639 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %388, i64 %389, !dbg !15325
  %arrayidx640 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_p, i64 0, i64 1, !dbg !15328
  %390 = bitcast %struct._PointInfo* %arrayidx639 to i8*, !dbg !15328
  %391 = bitcast %struct._PointInfo* %arrayidx640 to i8*, !dbg !15328
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %390, i8* align 16 %391, i64 16, i1 false), !dbg !15328
  %392 = load %struct._PointInfo*, %struct._PointInfo** %path_p, align 8, !dbg !15329
  %393 = load i64, i64* %p, align 8, !dbg !15330
  %inc641 = add nsw i64 %393, 1, !dbg !15330
  store i64 %inc641, i64* %p, align 8, !dbg !15330
  %arrayidx642 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %392, i64 %393, !dbg !15329
  %arrayidx643 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_p, i64 0, i64 2, !dbg !15331
  %394 = bitcast %struct._PointInfo* %arrayidx642 to i8*, !dbg !15331
  %395 = bitcast %struct._PointInfo* %arrayidx643 to i8*, !dbg !15331
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %394, i8* align 16 %395, i64 16, i1 false), !dbg !15331
  br label %if.end644

if.end644:                                        ; preds = %if.else637, %if.then633
  %396 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %polygon_primitive, align 8, !dbg !15332
  %397 = load i64, i64* %n, align 8, !dbg !15333
  %arrayidx645 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %396, i64 %397, !dbg !15332
  %point646 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx645, i32 0, i32 0, !dbg !15334
  %398 = bitcast %struct._PointInfo* %center to i8*, !dbg !15334
  %399 = bitcast %struct._PointInfo* %point646 to i8*, !dbg !15334
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %398, i8* align 8 %399, i64 16, i1 false), !dbg !15334
  %arrayidx647 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_q, i64 0, i64 1, !dbg !15335
  %y648 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx647, i32 0, i32 1, !dbg !15336
  %400 = load double, double* %y648, align 8, !dbg !15336
  %y649 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %center, i32 0, i32 1, !dbg !15337
  %401 = load double, double* %y649, align 8, !dbg !15337
  %sub650 = fsub double %400, %401, !dbg !15338
  %arrayidx651 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_q, i64 0, i64 1, !dbg !15339
  %x652 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx651, i32 0, i32 0, !dbg !15340
  %402 = load double, double* %x652, align 16, !dbg !15340
  %x653 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %center, i32 0, i32 0, !dbg !15341
  %403 = load double, double* %x653, align 8, !dbg !15341
  %sub654 = fsub double %402, %403, !dbg !15342
  %call655 = call double @atan2(double %sub650, double %sub654) #17, !dbg !15343
  %p656 = getelementptr inbounds %struct._LineSegment, %struct._LineSegment* %theta, i32 0, i32 0, !dbg !15344
  store double %call655, double* %p656, align 8, !dbg !15345
  %arrayidx657 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_q, i64 0, i64 2, !dbg !15346
  %y658 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx657, i32 0, i32 1, !dbg !15347
  %404 = load double, double* %y658, align 8, !dbg !15347
  %y659 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %center, i32 0, i32 1, !dbg !15348
  %405 = load double, double* %y659, align 8, !dbg !15348
  %sub660 = fsub double %404, %405, !dbg !15349
  %arrayidx661 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_q, i64 0, i64 2, !dbg !15350
  %x662 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx661, i32 0, i32 0, !dbg !15351
  %406 = load double, double* %x662, align 16, !dbg !15351
  %x663 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %center, i32 0, i32 0, !dbg !15352
  %407 = load double, double* %x663, align 8, !dbg !15352
  %sub664 = fsub double %406, %407, !dbg !15353
  %call665 = call double @atan2(double %sub660, double %sub664) #17, !dbg !15354
  %q666 = getelementptr inbounds %struct._LineSegment, %struct._LineSegment* %theta, i32 0, i32 1, !dbg !15355
  store double %call665, double* %q666, align 8, !dbg !15356
  %q667 = getelementptr inbounds %struct._LineSegment, %struct._LineSegment* %theta, i32 0, i32 1, !dbg !15357
  %408 = load double, double* %q667, align 8, !dbg !15357
  %p668 = getelementptr inbounds %struct._LineSegment, %struct._LineSegment* %theta, i32 0, i32 0, !dbg !15359
  %409 = load double, double* %p668, align 8, !dbg !15359
  %cmp669 = fcmp olt double %408, %409, !dbg !15360
  br i1 %cmp669, label %if.then671, label %if.end674, !dbg !15361

if.then671:                                       ; preds = %if.end644
  %q672 = getelementptr inbounds %struct._LineSegment, %struct._LineSegment* %theta, i32 0, i32 1, !dbg !15362
  %410 = load double, double* %q672, align 8, !dbg !15363
  %add673 = fadd double %410, 0x401921FB54442D18, !dbg !15363
  store double %add673, double* %q672, align 8, !dbg !15363
  br label %if.end674, !dbg !15364

if.end674:                                        ; preds = %if.then671, %if.end644
  %q675 = getelementptr inbounds %struct._LineSegment, %struct._LineSegment* %theta, i32 0, i32 1, !dbg !15365
  %411 = load double, double* %q675, align 8, !dbg !15365
  %p676 = getelementptr inbounds %struct._LineSegment, %struct._LineSegment* %theta, i32 0, i32 0, !dbg !15366
  %412 = load double, double* %p676, align 8, !dbg !15366
  %sub677 = fsub double %411, %412, !dbg !15367
  %413 = load double, double* %mid, align 8, !dbg !15368
  %div678 = fdiv double 1.000000e+00, %413, !dbg !15369
  %call679 = call double @sqrt(double %div678) #17, !dbg !15370
  %mul680 = fmul double 2.000000e+00, %call679, !dbg !15371
  %div681 = fdiv double %sub677, %mul680, !dbg !15372
  %414 = call double @llvm.ceil.f64(double %div681), !dbg !15373
  %conv682 = fptoui double %414 to i64, !dbg !15374
  store i64 %conv682, i64* %arc_segments, align 8, !dbg !15375
  %arrayidx683 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_q, i64 0, i64 1, !dbg !15376
  %x684 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx683, i32 0, i32 0, !dbg !15377
  %415 = load double, double* %x684, align 16, !dbg !15377
  %416 = load %struct._PointInfo*, %struct._PointInfo** %path_q, align 8, !dbg !15378
  %417 = load i64, i64* %q, align 8, !dbg !15379
  %arrayidx685 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %416, i64 %417, !dbg !15378
  %x686 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx685, i32 0, i32 0, !dbg !15380
  store double %415, double* %x686, align 8, !dbg !15381
  %arrayidx687 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_q, i64 0, i64 1, !dbg !15382
  %y688 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx687, i32 0, i32 1, !dbg !15383
  %418 = load double, double* %y688, align 8, !dbg !15383
  %419 = load %struct._PointInfo*, %struct._PointInfo** %path_q, align 8, !dbg !15384
  %420 = load i64, i64* %q, align 8, !dbg !15385
  %arrayidx689 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %419, i64 %420, !dbg !15384
  %y690 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx689, i32 0, i32 1, !dbg !15386
  store double %418, double* %y690, align 8, !dbg !15387
  %421 = load i64, i64* %q, align 8, !dbg !15388
  %inc691 = add nsw i64 %421, 1, !dbg !15388
  store i64 %inc691, i64* %q, align 8, !dbg !15388
  store i64 1, i64* %j, align 8, !dbg !15389
  br label %for.cond692, !dbg !15391

for.cond692:                                      ; preds = %for.inc724, %if.end674
  %422 = load i64, i64* %j, align 8, !dbg !15392
  %423 = load i64, i64* %arc_segments, align 8, !dbg !15394
  %cmp693 = icmp slt i64 %422, %423, !dbg !15395
  br i1 %cmp693, label %for.body695, label %for.end726, !dbg !15396

for.body695:                                      ; preds = %for.cond692
  %424 = load i64, i64* %j, align 8, !dbg !15397
  %conv696 = sitofp i64 %424 to double, !dbg !15397
  %q697 = getelementptr inbounds %struct._LineSegment, %struct._LineSegment* %theta, i32 0, i32 1, !dbg !15399
  %425 = load double, double* %q697, align 8, !dbg !15399
  %p698 = getelementptr inbounds %struct._LineSegment, %struct._LineSegment* %theta, i32 0, i32 0, !dbg !15400
  %426 = load double, double* %p698, align 8, !dbg !15400
  %sub699 = fsub double %425, %426, !dbg !15401
  %mul700 = fmul double %conv696, %sub699, !dbg !15402
  %427 = load i64, i64* %arc_segments, align 8, !dbg !15403
  %conv701 = uitofp i64 %427 to double, !dbg !15403
  %div702 = fdiv double %mul700, %conv701, !dbg !15404
  store double %div702, double* %delta_theta, align 8, !dbg !15405
  %x703 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %center, i32 0, i32 0, !dbg !15406
  %428 = load double, double* %x703, align 8, !dbg !15406
  %429 = load double, double* %mid, align 8, !dbg !15407
  %p704 = getelementptr inbounds %struct._LineSegment, %struct._LineSegment* %theta, i32 0, i32 0, !dbg !15408
  %430 = load double, double* %p704, align 8, !dbg !15408
  %431 = load double, double* %delta_theta, align 8, !dbg !15409
  %add705 = fadd double %430, %431, !dbg !15410
  %call706 = call double @DegreesToRadians(double 3.600000e+02), !dbg !15411
  %call707 = call double @fmod(double %add705, double %call706) #17, !dbg !15412
  %call708 = call double @cos(double %call707) #17, !dbg !15413
  %mul709 = fmul double %429, %call708, !dbg !15414
  %add710 = fadd double %428, %mul709, !dbg !15415
  %432 = load %struct._PointInfo*, %struct._PointInfo** %path_q, align 8, !dbg !15416
  %433 = load i64, i64* %q, align 8, !dbg !15417
  %arrayidx711 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %432, i64 %433, !dbg !15416
  %x712 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx711, i32 0, i32 0, !dbg !15418
  store double %add710, double* %x712, align 8, !dbg !15419
  %y713 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %center, i32 0, i32 1, !dbg !15420
  %434 = load double, double* %y713, align 8, !dbg !15420
  %435 = load double, double* %mid, align 8, !dbg !15421
  %p714 = getelementptr inbounds %struct._LineSegment, %struct._LineSegment* %theta, i32 0, i32 0, !dbg !15422
  %436 = load double, double* %p714, align 8, !dbg !15422
  %437 = load double, double* %delta_theta, align 8, !dbg !15423
  %add715 = fadd double %436, %437, !dbg !15424
  %call716 = call double @DegreesToRadians(double 3.600000e+02), !dbg !15425
  %call717 = call double @fmod(double %add715, double %call716) #17, !dbg !15426
  %call718 = call double @sin(double %call717) #17, !dbg !15427
  %mul719 = fmul double %435, %call718, !dbg !15428
  %add720 = fadd double %434, %mul719, !dbg !15429
  %438 = load %struct._PointInfo*, %struct._PointInfo** %path_q, align 8, !dbg !15430
  %439 = load i64, i64* %q, align 8, !dbg !15431
  %arrayidx721 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %438, i64 %439, !dbg !15430
  %y722 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx721, i32 0, i32 1, !dbg !15432
  store double %add720, double* %y722, align 8, !dbg !15433
  %440 = load i64, i64* %q, align 8, !dbg !15434
  %inc723 = add nsw i64 %440, 1, !dbg !15434
  store i64 %inc723, i64* %q, align 8, !dbg !15434
  br label %for.inc724, !dbg !15435

for.inc724:                                       ; preds = %for.body695
  %441 = load i64, i64* %j, align 8, !dbg !15436
  %inc725 = add nsw i64 %441, 1, !dbg !15436
  store i64 %inc725, i64* %j, align 8, !dbg !15436
  br label %for.cond692, !dbg !15437, !llvm.loop !15438

for.end726:                                       ; preds = %for.cond692
  %442 = load %struct._PointInfo*, %struct._PointInfo** %path_q, align 8, !dbg !15440
  %443 = load i64, i64* %q, align 8, !dbg !15441
  %inc727 = add nsw i64 %443, 1, !dbg !15441
  store i64 %inc727, i64* %q, align 8, !dbg !15441
  %arrayidx728 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %442, i64 %443, !dbg !15440
  %arrayidx729 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_q, i64 0, i64 2, !dbg !15442
  %444 = bitcast %struct._PointInfo* %arrayidx728 to i8*, !dbg !15442
  %445 = bitcast %struct._PointInfo* %arrayidx729 to i8*, !dbg !15442
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %444, i8* align 16 %445, i64 16, i1 false), !dbg !15442
  br label %sw.epilog, !dbg !15443

sw.default:                                       ; preds = %if.then515
  br label %sw.epilog, !dbg !15444

sw.epilog:                                        ; preds = %sw.default, %for.end726, %if.end606, %if.end559
  br label %if.end942, !dbg !15445

if.else730:                                       ; preds = %if.end505
  %446 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !15446
  %linejoin731 = getelementptr inbounds %struct._DrawInfo, %struct._DrawInfo* %446, i32 0, i32 16, !dbg !15447
  %447 = load i32, i32* %linejoin731, align 8, !dbg !15447
  switch i32 %447, label %sw.default940 [
    i32 3, label %sw.bb732
    i32 1, label %sw.bb776
    i32 2, label %sw.bb823
  ], !dbg !15448

sw.bb732:                                         ; preds = %if.else730
  %448 = load %struct._PointInfo*, %struct._PointInfo** %path_p, align 8, !dbg !15449
  %449 = load i64, i64* %p, align 8, !dbg !15452
  %inc733 = add nsw i64 %449, 1, !dbg !15452
  store i64 %inc733, i64* %p, align 8, !dbg !15452
  %arrayidx734 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %448, i64 %449, !dbg !15449
  %arrayidx735 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_p, i64 0, i64 1, !dbg !15453
  %450 = bitcast %struct._PointInfo* %arrayidx734 to i8*, !dbg !15453
  %451 = bitcast %struct._PointInfo* %arrayidx735 to i8*, !dbg !15453
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %450, i8* align 16 %451, i64 16, i1 false), !dbg !15453
  %452 = load %struct._PointInfo*, %struct._PointInfo** %path_p, align 8, !dbg !15454
  %453 = load i64, i64* %p, align 8, !dbg !15455
  %inc736 = add nsw i64 %453, 1, !dbg !15455
  store i64 %inc736, i64* %p, align 8, !dbg !15455
  %arrayidx737 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %452, i64 %453, !dbg !15454
  %arrayidx738 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_p, i64 0, i64 2, !dbg !15456
  %454 = bitcast %struct._PointInfo* %arrayidx737 to i8*, !dbg !15456
  %455 = bitcast %struct._PointInfo* %arrayidx738 to i8*, !dbg !15456
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %454, i8* align 16 %455, i64 16, i1 false), !dbg !15456
  %arrayidx739 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_q, i64 0, i64 4, !dbg !15457
  %x740 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx739, i32 0, i32 0, !dbg !15458
  %456 = load double, double* %x740, align 16, !dbg !15458
  %arrayidx741 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_p, i64 0, i64 4, !dbg !15459
  %x742 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx741, i32 0, i32 0, !dbg !15460
  %457 = load double, double* %x742, align 16, !dbg !15460
  %sub743 = fsub double %456, %457, !dbg !15461
  %arrayidx744 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_q, i64 0, i64 4, !dbg !15462
  %x745 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx744, i32 0, i32 0, !dbg !15463
  %458 = load double, double* %x745, align 16, !dbg !15463
  %arrayidx746 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_p, i64 0, i64 4, !dbg !15464
  %x747 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx746, i32 0, i32 0, !dbg !15465
  %459 = load double, double* %x747, align 16, !dbg !15465
  %sub748 = fsub double %458, %459, !dbg !15466
  %mul749 = fmul double %sub743, %sub748, !dbg !15467
  %arrayidx750 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_q, i64 0, i64 4, !dbg !15468
  %y751 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx750, i32 0, i32 1, !dbg !15469
  %460 = load double, double* %y751, align 8, !dbg !15469
  %arrayidx752 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_p, i64 0, i64 4, !dbg !15470
  %y753 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx752, i32 0, i32 1, !dbg !15471
  %461 = load double, double* %y753, align 8, !dbg !15471
  %sub754 = fsub double %460, %461, !dbg !15472
  %arrayidx755 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_q, i64 0, i64 4, !dbg !15473
  %y756 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx755, i32 0, i32 1, !dbg !15474
  %462 = load double, double* %y756, align 8, !dbg !15474
  %arrayidx757 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_p, i64 0, i64 4, !dbg !15475
  %y758 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx757, i32 0, i32 1, !dbg !15476
  %463 = load double, double* %y758, align 8, !dbg !15476
  %sub759 = fsub double %462, %463, !dbg !15477
  %mul760 = fmul double %sub754, %sub759, !dbg !15478
  %add761 = fadd double %mul749, %mul760, !dbg !15479
  store double %add761, double* %dot_product, align 8, !dbg !15480
  %464 = load double, double* %dot_product, align 8, !dbg !15481
  %465 = load double, double* %miterlimit, align 8, !dbg !15483
  %cmp762 = fcmp ole double %464, %465, !dbg !15484
  br i1 %cmp762, label %if.then764, label %if.else768, !dbg !15485

if.then764:                                       ; preds = %sw.bb732
  %466 = load %struct._PointInfo*, %struct._PointInfo** %path_q, align 8, !dbg !15486
  %467 = load i64, i64* %q, align 8, !dbg !15487
  %inc765 = add nsw i64 %467, 1, !dbg !15487
  store i64 %inc765, i64* %q, align 8, !dbg !15487
  %arrayidx766 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %466, i64 %467, !dbg !15486
  %arrayidx767 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_q, i64 0, i64 4, !dbg !15488
  %468 = bitcast %struct._PointInfo* %arrayidx766 to i8*, !dbg !15488
  %469 = bitcast %struct._PointInfo* %arrayidx767 to i8*, !dbg !15488
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %468, i8* align 16 %469, i64 16, i1 false), !dbg !15488
  br label %if.end775, !dbg !15486

if.else768:                                       ; preds = %sw.bb732
  %470 = load %struct._PointInfo*, %struct._PointInfo** %path_q, align 8, !dbg !15489
  %471 = load i64, i64* %q, align 8, !dbg !15491
  %inc769 = add nsw i64 %471, 1, !dbg !15491
  store i64 %inc769, i64* %q, align 8, !dbg !15491
  %arrayidx770 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %470, i64 %471, !dbg !15489
  %arrayidx771 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_q, i64 0, i64 1, !dbg !15492
  %472 = bitcast %struct._PointInfo* %arrayidx770 to i8*, !dbg !15492
  %473 = bitcast %struct._PointInfo* %arrayidx771 to i8*, !dbg !15492
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %472, i8* align 16 %473, i64 16, i1 false), !dbg !15492
  %474 = load %struct._PointInfo*, %struct._PointInfo** %path_q, align 8, !dbg !15493
  %475 = load i64, i64* %q, align 8, !dbg !15494
  %inc772 = add nsw i64 %475, 1, !dbg !15494
  store i64 %inc772, i64* %q, align 8, !dbg !15494
  %arrayidx773 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %474, i64 %475, !dbg !15493
  %arrayidx774 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_q, i64 0, i64 2, !dbg !15495
  %476 = bitcast %struct._PointInfo* %arrayidx773 to i8*, !dbg !15495
  %477 = bitcast %struct._PointInfo* %arrayidx774 to i8*, !dbg !15495
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %476, i8* align 16 %477, i64 16, i1 false), !dbg !15495
  br label %if.end775

if.end775:                                        ; preds = %if.else768, %if.then764
  br label %sw.epilog941, !dbg !15496

sw.bb776:                                         ; preds = %if.else730
  %arrayidx777 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_q, i64 0, i64 4, !dbg !15497
  %x778 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx777, i32 0, i32 0, !dbg !15499
  %478 = load double, double* %x778, align 16, !dbg !15499
  %arrayidx779 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_p, i64 0, i64 4, !dbg !15500
  %x780 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx779, i32 0, i32 0, !dbg !15501
  %479 = load double, double* %x780, align 16, !dbg !15501
  %sub781 = fsub double %478, %479, !dbg !15502
  %arrayidx782 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_q, i64 0, i64 4, !dbg !15503
  %x783 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx782, i32 0, i32 0, !dbg !15504
  %480 = load double, double* %x783, align 16, !dbg !15504
  %arrayidx784 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_p, i64 0, i64 4, !dbg !15505
  %x785 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx784, i32 0, i32 0, !dbg !15506
  %481 = load double, double* %x785, align 16, !dbg !15506
  %sub786 = fsub double %480, %481, !dbg !15507
  %mul787 = fmul double %sub781, %sub786, !dbg !15508
  %arrayidx788 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_q, i64 0, i64 4, !dbg !15509
  %y789 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx788, i32 0, i32 1, !dbg !15510
  %482 = load double, double* %y789, align 8, !dbg !15510
  %arrayidx790 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_p, i64 0, i64 4, !dbg !15511
  %y791 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx790, i32 0, i32 1, !dbg !15512
  %483 = load double, double* %y791, align 8, !dbg !15512
  %sub792 = fsub double %482, %483, !dbg !15513
  %arrayidx793 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_q, i64 0, i64 4, !dbg !15514
  %y794 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx793, i32 0, i32 1, !dbg !15515
  %484 = load double, double* %y794, align 8, !dbg !15515
  %arrayidx795 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_p, i64 0, i64 4, !dbg !15516
  %y796 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx795, i32 0, i32 1, !dbg !15517
  %485 = load double, double* %y796, align 8, !dbg !15517
  %sub797 = fsub double %484, %485, !dbg !15518
  %mul798 = fmul double %sub792, %sub797, !dbg !15519
  %add799 = fadd double %mul787, %mul798, !dbg !15520
  store double %add799, double* %dot_product, align 8, !dbg !15521
  %486 = load double, double* %dot_product, align 8, !dbg !15522
  %487 = load double, double* %miterlimit, align 8, !dbg !15524
  %cmp800 = fcmp ole double %486, %487, !dbg !15525
  br i1 %cmp800, label %if.then802, label %if.else809, !dbg !15526

if.then802:                                       ; preds = %sw.bb776
  %488 = load %struct._PointInfo*, %struct._PointInfo** %path_q, align 8, !dbg !15527
  %489 = load i64, i64* %q, align 8, !dbg !15529
  %inc803 = add nsw i64 %489, 1, !dbg !15529
  store i64 %inc803, i64* %q, align 8, !dbg !15529
  %arrayidx804 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %488, i64 %489, !dbg !15527
  %arrayidx805 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_q, i64 0, i64 4, !dbg !15530
  %490 = bitcast %struct._PointInfo* %arrayidx804 to i8*, !dbg !15530
  %491 = bitcast %struct._PointInfo* %arrayidx805 to i8*, !dbg !15530
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %490, i8* align 16 %491, i64 16, i1 false), !dbg !15530
  %492 = load %struct._PointInfo*, %struct._PointInfo** %path_p, align 8, !dbg !15531
  %493 = load i64, i64* %p, align 8, !dbg !15532
  %inc806 = add nsw i64 %493, 1, !dbg !15532
  store i64 %inc806, i64* %p, align 8, !dbg !15532
  %arrayidx807 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %492, i64 %493, !dbg !15531
  %arrayidx808 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_p, i64 0, i64 4, !dbg !15533
  %494 = bitcast %struct._PointInfo* %arrayidx807 to i8*, !dbg !15533
  %495 = bitcast %struct._PointInfo* %arrayidx808 to i8*, !dbg !15533
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %494, i8* align 16 %495, i64 16, i1 false), !dbg !15533
  br label %if.end822, !dbg !15534

if.else809:                                       ; preds = %sw.bb776
  %496 = load %struct._PointInfo*, %struct._PointInfo** %path_q, align 8, !dbg !15535
  %497 = load i64, i64* %q, align 8, !dbg !15537
  %inc810 = add nsw i64 %497, 1, !dbg !15537
  store i64 %inc810, i64* %q, align 8, !dbg !15537
  %arrayidx811 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %496, i64 %497, !dbg !15535
  %arrayidx812 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_q, i64 0, i64 1, !dbg !15538
  %498 = bitcast %struct._PointInfo* %arrayidx811 to i8*, !dbg !15538
  %499 = bitcast %struct._PointInfo* %arrayidx812 to i8*, !dbg !15538
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %498, i8* align 16 %499, i64 16, i1 false), !dbg !15538
  %500 = load %struct._PointInfo*, %struct._PointInfo** %path_q, align 8, !dbg !15539
  %501 = load i64, i64* %q, align 8, !dbg !15540
  %inc813 = add nsw i64 %501, 1, !dbg !15540
  store i64 %inc813, i64* %q, align 8, !dbg !15540
  %arrayidx814 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %500, i64 %501, !dbg !15539
  %arrayidx815 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_q, i64 0, i64 2, !dbg !15541
  %502 = bitcast %struct._PointInfo* %arrayidx814 to i8*, !dbg !15541
  %503 = bitcast %struct._PointInfo* %arrayidx815 to i8*, !dbg !15541
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %502, i8* align 16 %503, i64 16, i1 false), !dbg !15541
  %504 = load %struct._PointInfo*, %struct._PointInfo** %path_p, align 8, !dbg !15542
  %505 = load i64, i64* %p, align 8, !dbg !15543
  %inc816 = add nsw i64 %505, 1, !dbg !15543
  store i64 %inc816, i64* %p, align 8, !dbg !15543
  %arrayidx817 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %504, i64 %505, !dbg !15542
  %arrayidx818 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_p, i64 0, i64 1, !dbg !15544
  %506 = bitcast %struct._PointInfo* %arrayidx817 to i8*, !dbg !15544
  %507 = bitcast %struct._PointInfo* %arrayidx818 to i8*, !dbg !15544
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %506, i8* align 16 %507, i64 16, i1 false), !dbg !15544
  %508 = load %struct._PointInfo*, %struct._PointInfo** %path_p, align 8, !dbg !15545
  %509 = load i64, i64* %p, align 8, !dbg !15546
  %inc819 = add nsw i64 %509, 1, !dbg !15546
  store i64 %inc819, i64* %p, align 8, !dbg !15546
  %arrayidx820 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %508, i64 %509, !dbg !15545
  %arrayidx821 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_p, i64 0, i64 2, !dbg !15547
  %510 = bitcast %struct._PointInfo* %arrayidx820 to i8*, !dbg !15547
  %511 = bitcast %struct._PointInfo* %arrayidx821 to i8*, !dbg !15547
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %510, i8* align 16 %511, i64 16, i1 false), !dbg !15547
  br label %if.end822

if.end822:                                        ; preds = %if.else809, %if.then802
  br label %sw.epilog941, !dbg !15548

sw.bb823:                                         ; preds = %if.else730
  %arrayidx824 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_q, i64 0, i64 4, !dbg !15549
  %x825 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx824, i32 0, i32 0, !dbg !15551
  %512 = load double, double* %x825, align 16, !dbg !15551
  %arrayidx826 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_p, i64 0, i64 4, !dbg !15552
  %x827 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx826, i32 0, i32 0, !dbg !15553
  %513 = load double, double* %x827, align 16, !dbg !15553
  %sub828 = fsub double %512, %513, !dbg !15554
  %arrayidx829 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_q, i64 0, i64 4, !dbg !15555
  %x830 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx829, i32 0, i32 0, !dbg !15556
  %514 = load double, double* %x830, align 16, !dbg !15556
  %arrayidx831 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_p, i64 0, i64 4, !dbg !15557
  %x832 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx831, i32 0, i32 0, !dbg !15558
  %515 = load double, double* %x832, align 16, !dbg !15558
  %sub833 = fsub double %514, %515, !dbg !15559
  %mul834 = fmul double %sub828, %sub833, !dbg !15560
  %arrayidx835 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_q, i64 0, i64 4, !dbg !15561
  %y836 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx835, i32 0, i32 1, !dbg !15562
  %516 = load double, double* %y836, align 8, !dbg !15562
  %arrayidx837 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_p, i64 0, i64 4, !dbg !15563
  %y838 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx837, i32 0, i32 1, !dbg !15564
  %517 = load double, double* %y838, align 8, !dbg !15564
  %sub839 = fsub double %516, %517, !dbg !15565
  %arrayidx840 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_q, i64 0, i64 4, !dbg !15566
  %y841 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx840, i32 0, i32 1, !dbg !15567
  %518 = load double, double* %y841, align 8, !dbg !15567
  %arrayidx842 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_p, i64 0, i64 4, !dbg !15568
  %y843 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx842, i32 0, i32 1, !dbg !15569
  %519 = load double, double* %y843, align 8, !dbg !15569
  %sub844 = fsub double %518, %519, !dbg !15570
  %mul845 = fmul double %sub839, %sub844, !dbg !15571
  %add846 = fadd double %mul834, %mul845, !dbg !15572
  store double %add846, double* %dot_product, align 8, !dbg !15573
  %520 = load double, double* %dot_product, align 8, !dbg !15574
  %521 = load double, double* %miterlimit, align 8, !dbg !15576
  %cmp847 = fcmp ole double %520, %521, !dbg !15577
  br i1 %cmp847, label %if.then849, label %if.else853, !dbg !15578

if.then849:                                       ; preds = %sw.bb823
  %522 = load %struct._PointInfo*, %struct._PointInfo** %path_q, align 8, !dbg !15579
  %523 = load i64, i64* %q, align 8, !dbg !15580
  %inc850 = add nsw i64 %523, 1, !dbg !15580
  store i64 %inc850, i64* %q, align 8, !dbg !15580
  %arrayidx851 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %522, i64 %523, !dbg !15579
  %arrayidx852 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_q, i64 0, i64 4, !dbg !15581
  %524 = bitcast %struct._PointInfo* %arrayidx851 to i8*, !dbg !15581
  %525 = bitcast %struct._PointInfo* %arrayidx852 to i8*, !dbg !15581
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %524, i8* align 16 %525, i64 16, i1 false), !dbg !15581
  br label %if.end860, !dbg !15579

if.else853:                                       ; preds = %sw.bb823
  %526 = load %struct._PointInfo*, %struct._PointInfo** %path_q, align 8, !dbg !15582
  %527 = load i64, i64* %q, align 8, !dbg !15584
  %inc854 = add nsw i64 %527, 1, !dbg !15584
  store i64 %inc854, i64* %q, align 8, !dbg !15584
  %arrayidx855 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %526, i64 %527, !dbg !15582
  %arrayidx856 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_q, i64 0, i64 1, !dbg !15585
  %528 = bitcast %struct._PointInfo* %arrayidx855 to i8*, !dbg !15585
  %529 = bitcast %struct._PointInfo* %arrayidx856 to i8*, !dbg !15585
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %528, i8* align 16 %529, i64 16, i1 false), !dbg !15585
  %530 = load %struct._PointInfo*, %struct._PointInfo** %path_q, align 8, !dbg !15586
  %531 = load i64, i64* %q, align 8, !dbg !15587
  %inc857 = add nsw i64 %531, 1, !dbg !15587
  store i64 %inc857, i64* %q, align 8, !dbg !15587
  %arrayidx858 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %530, i64 %531, !dbg !15586
  %arrayidx859 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_q, i64 0, i64 2, !dbg !15588
  %532 = bitcast %struct._PointInfo* %arrayidx858 to i8*, !dbg !15588
  %533 = bitcast %struct._PointInfo* %arrayidx859 to i8*, !dbg !15588
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %532, i8* align 16 %533, i64 16, i1 false), !dbg !15588
  br label %if.end860

if.end860:                                        ; preds = %if.else853, %if.then849
  %534 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %polygon_primitive, align 8, !dbg !15589
  %535 = load i64, i64* %n, align 8, !dbg !15590
  %arrayidx861 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %534, i64 %535, !dbg !15589
  %point862 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx861, i32 0, i32 0, !dbg !15591
  %536 = bitcast %struct._PointInfo* %center to i8*, !dbg !15591
  %537 = bitcast %struct._PointInfo* %point862 to i8*, !dbg !15591
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %536, i8* align 8 %537, i64 16, i1 false), !dbg !15591
  %arrayidx863 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_p, i64 0, i64 1, !dbg !15592
  %y864 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx863, i32 0, i32 1, !dbg !15593
  %538 = load double, double* %y864, align 8, !dbg !15593
  %y865 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %center, i32 0, i32 1, !dbg !15594
  %539 = load double, double* %y865, align 8, !dbg !15594
  %sub866 = fsub double %538, %539, !dbg !15595
  %arrayidx867 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_p, i64 0, i64 1, !dbg !15596
  %x868 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx867, i32 0, i32 0, !dbg !15597
  %540 = load double, double* %x868, align 16, !dbg !15597
  %x869 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %center, i32 0, i32 0, !dbg !15598
  %541 = load double, double* %x869, align 8, !dbg !15598
  %sub870 = fsub double %540, %541, !dbg !15599
  %call871 = call double @atan2(double %sub866, double %sub870) #17, !dbg !15600
  %p872 = getelementptr inbounds %struct._LineSegment, %struct._LineSegment* %theta, i32 0, i32 0, !dbg !15601
  store double %call871, double* %p872, align 8, !dbg !15602
  %arrayidx873 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_p, i64 0, i64 2, !dbg !15603
  %y874 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx873, i32 0, i32 1, !dbg !15604
  %542 = load double, double* %y874, align 8, !dbg !15604
  %y875 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %center, i32 0, i32 1, !dbg !15605
  %543 = load double, double* %y875, align 8, !dbg !15605
  %sub876 = fsub double %542, %543, !dbg !15606
  %arrayidx877 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_p, i64 0, i64 2, !dbg !15607
  %x878 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx877, i32 0, i32 0, !dbg !15608
  %544 = load double, double* %x878, align 16, !dbg !15608
  %x879 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %center, i32 0, i32 0, !dbg !15609
  %545 = load double, double* %x879, align 8, !dbg !15609
  %sub880 = fsub double %544, %545, !dbg !15610
  %call881 = call double @atan2(double %sub876, double %sub880) #17, !dbg !15611
  %q882 = getelementptr inbounds %struct._LineSegment, %struct._LineSegment* %theta, i32 0, i32 1, !dbg !15612
  store double %call881, double* %q882, align 8, !dbg !15613
  %p883 = getelementptr inbounds %struct._LineSegment, %struct._LineSegment* %theta, i32 0, i32 0, !dbg !15614
  %546 = load double, double* %p883, align 8, !dbg !15614
  %q884 = getelementptr inbounds %struct._LineSegment, %struct._LineSegment* %theta, i32 0, i32 1, !dbg !15616
  %547 = load double, double* %q884, align 8, !dbg !15616
  %cmp885 = fcmp olt double %546, %547, !dbg !15617
  br i1 %cmp885, label %if.then887, label %if.end890, !dbg !15618

if.then887:                                       ; preds = %if.end860
  %p888 = getelementptr inbounds %struct._LineSegment, %struct._LineSegment* %theta, i32 0, i32 0, !dbg !15619
  %548 = load double, double* %p888, align 8, !dbg !15620
  %add889 = fadd double %548, 0x401921FB54442D18, !dbg !15620
  store double %add889, double* %p888, align 8, !dbg !15620
  br label %if.end890, !dbg !15621

if.end890:                                        ; preds = %if.then887, %if.end860
  %p891 = getelementptr inbounds %struct._LineSegment, %struct._LineSegment* %theta, i32 0, i32 0, !dbg !15622
  %549 = load double, double* %p891, align 8, !dbg !15622
  %q892 = getelementptr inbounds %struct._LineSegment, %struct._LineSegment* %theta, i32 0, i32 1, !dbg !15623
  %550 = load double, double* %q892, align 8, !dbg !15623
  %sub893 = fsub double %549, %550, !dbg !15624
  %551 = load double, double* %mid, align 8, !dbg !15625
  %div894 = fdiv double 1.000000e+00, %551, !dbg !15626
  %call895 = call double @sqrt(double %div894) #17, !dbg !15627
  %mul896 = fmul double 2.000000e+00, %call895, !dbg !15628
  %div897 = fdiv double %sub893, %mul896, !dbg !15629
  %552 = call double @llvm.ceil.f64(double %div897), !dbg !15630
  %conv898 = fptoui double %552 to i64, !dbg !15631
  store i64 %conv898, i64* %arc_segments, align 8, !dbg !15632
  %553 = load %struct._PointInfo*, %struct._PointInfo** %path_p, align 8, !dbg !15633
  %554 = load i64, i64* %p, align 8, !dbg !15634
  %inc899 = add nsw i64 %554, 1, !dbg !15634
  store i64 %inc899, i64* %p, align 8, !dbg !15634
  %arrayidx900 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %553, i64 %554, !dbg !15633
  %arrayidx901 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_p, i64 0, i64 1, !dbg !15635
  %555 = bitcast %struct._PointInfo* %arrayidx900 to i8*, !dbg !15635
  %556 = bitcast %struct._PointInfo* %arrayidx901 to i8*, !dbg !15635
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %555, i8* align 16 %556, i64 16, i1 false), !dbg !15635
  store i64 1, i64* %j, align 8, !dbg !15636
  br label %for.cond902, !dbg !15638

for.cond902:                                      ; preds = %for.inc934, %if.end890
  %557 = load i64, i64* %j, align 8, !dbg !15639
  %558 = load i64, i64* %arc_segments, align 8, !dbg !15641
  %cmp903 = icmp slt i64 %557, %558, !dbg !15642
  br i1 %cmp903, label %for.body905, label %for.end936, !dbg !15643

for.body905:                                      ; preds = %for.cond902
  %559 = load i64, i64* %j, align 8, !dbg !15644
  %conv906 = sitofp i64 %559 to double, !dbg !15644
  %q907 = getelementptr inbounds %struct._LineSegment, %struct._LineSegment* %theta, i32 0, i32 1, !dbg !15646
  %560 = load double, double* %q907, align 8, !dbg !15646
  %p908 = getelementptr inbounds %struct._LineSegment, %struct._LineSegment* %theta, i32 0, i32 0, !dbg !15647
  %561 = load double, double* %p908, align 8, !dbg !15647
  %sub909 = fsub double %560, %561, !dbg !15648
  %mul910 = fmul double %conv906, %sub909, !dbg !15649
  %562 = load i64, i64* %arc_segments, align 8, !dbg !15650
  %conv911 = uitofp i64 %562 to double, !dbg !15650
  %div912 = fdiv double %mul910, %conv911, !dbg !15651
  store double %div912, double* %delta_theta, align 8, !dbg !15652
  %x913 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %center, i32 0, i32 0, !dbg !15653
  %563 = load double, double* %x913, align 8, !dbg !15653
  %564 = load double, double* %mid, align 8, !dbg !15654
  %p914 = getelementptr inbounds %struct._LineSegment, %struct._LineSegment* %theta, i32 0, i32 0, !dbg !15655
  %565 = load double, double* %p914, align 8, !dbg !15655
  %566 = load double, double* %delta_theta, align 8, !dbg !15656
  %add915 = fadd double %565, %566, !dbg !15657
  %call916 = call double @DegreesToRadians(double 3.600000e+02), !dbg !15658
  %call917 = call double @fmod(double %add915, double %call916) #17, !dbg !15659
  %call918 = call double @cos(double %call917) #17, !dbg !15660
  %mul919 = fmul double %564, %call918, !dbg !15661
  %add920 = fadd double %563, %mul919, !dbg !15662
  %567 = load %struct._PointInfo*, %struct._PointInfo** %path_p, align 8, !dbg !15663
  %568 = load i64, i64* %p, align 8, !dbg !15664
  %arrayidx921 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %567, i64 %568, !dbg !15663
  %x922 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx921, i32 0, i32 0, !dbg !15665
  store double %add920, double* %x922, align 8, !dbg !15666
  %y923 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %center, i32 0, i32 1, !dbg !15667
  %569 = load double, double* %y923, align 8, !dbg !15667
  %570 = load double, double* %mid, align 8, !dbg !15668
  %p924 = getelementptr inbounds %struct._LineSegment, %struct._LineSegment* %theta, i32 0, i32 0, !dbg !15669
  %571 = load double, double* %p924, align 8, !dbg !15669
  %572 = load double, double* %delta_theta, align 8, !dbg !15670
  %add925 = fadd double %571, %572, !dbg !15671
  %call926 = call double @DegreesToRadians(double 3.600000e+02), !dbg !15672
  %call927 = call double @fmod(double %add925, double %call926) #17, !dbg !15673
  %call928 = call double @sin(double %call927) #17, !dbg !15674
  %mul929 = fmul double %570, %call928, !dbg !15675
  %add930 = fadd double %569, %mul929, !dbg !15676
  %573 = load %struct._PointInfo*, %struct._PointInfo** %path_p, align 8, !dbg !15677
  %574 = load i64, i64* %p, align 8, !dbg !15678
  %arrayidx931 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %573, i64 %574, !dbg !15677
  %y932 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx931, i32 0, i32 1, !dbg !15679
  store double %add930, double* %y932, align 8, !dbg !15680
  %575 = load i64, i64* %p, align 8, !dbg !15681
  %inc933 = add nsw i64 %575, 1, !dbg !15681
  store i64 %inc933, i64* %p, align 8, !dbg !15681
  br label %for.inc934, !dbg !15682

for.inc934:                                       ; preds = %for.body905
  %576 = load i64, i64* %j, align 8, !dbg !15683
  %inc935 = add nsw i64 %576, 1, !dbg !15683
  store i64 %inc935, i64* %j, align 8, !dbg !15683
  br label %for.cond902, !dbg !15684, !llvm.loop !15685

for.end936:                                       ; preds = %for.cond902
  %577 = load %struct._PointInfo*, %struct._PointInfo** %path_p, align 8, !dbg !15687
  %578 = load i64, i64* %p, align 8, !dbg !15688
  %inc937 = add nsw i64 %578, 1, !dbg !15688
  store i64 %inc937, i64* %p, align 8, !dbg !15688
  %arrayidx938 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %577, i64 %578, !dbg !15687
  %arrayidx939 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_p, i64 0, i64 2, !dbg !15689
  %579 = bitcast %struct._PointInfo* %arrayidx938 to i8*, !dbg !15689
  %580 = bitcast %struct._PointInfo* %arrayidx939 to i8*, !dbg !15689
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %579, i8* align 16 %580, i64 16, i1 false), !dbg !15689
  br label %sw.epilog941, !dbg !15690

sw.default940:                                    ; preds = %if.else730
  br label %sw.epilog941, !dbg !15691

sw.epilog941:                                     ; preds = %sw.default940, %for.end936, %if.end822, %if.end775
  br label %if.end942

if.end942:                                        ; preds = %sw.epilog941, %sw.epilog
  %q943 = getelementptr inbounds %struct._LineSegment, %struct._LineSegment* %slope, i32 0, i32 1, !dbg !15692
  %581 = load double, double* %q943, align 8, !dbg !15692
  %p944 = getelementptr inbounds %struct._LineSegment, %struct._LineSegment* %slope, i32 0, i32 0, !dbg !15693
  store double %581, double* %p944, align 8, !dbg !15694
  %q945 = getelementptr inbounds %struct._LineSegment, %struct._LineSegment* %inverse_slope, i32 0, i32 1, !dbg !15695
  %582 = load double, double* %q945, align 8, !dbg !15695
  %p946 = getelementptr inbounds %struct._LineSegment, %struct._LineSegment* %inverse_slope, i32 0, i32 0, !dbg !15696
  store double %582, double* %p946, align 8, !dbg !15697
  %arrayidx947 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_p, i64 0, i64 0, !dbg !15698
  %arrayidx948 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_p, i64 0, i64 2, !dbg !15699
  %583 = bitcast %struct._PointInfo* %arrayidx947 to i8*, !dbg !15699
  %584 = bitcast %struct._PointInfo* %arrayidx948 to i8*, !dbg !15699
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %583, i8* align 16 %584, i64 16, i1 false), !dbg !15699
  %arrayidx949 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_p, i64 0, i64 1, !dbg !15700
  %arrayidx950 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_p, i64 0, i64 3, !dbg !15701
  %585 = bitcast %struct._PointInfo* %arrayidx949 to i8*, !dbg !15701
  %586 = bitcast %struct._PointInfo* %arrayidx950 to i8*, !dbg !15701
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %585, i8* align 16 %586, i64 16, i1 false), !dbg !15701
  %arrayidx951 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_q, i64 0, i64 0, !dbg !15702
  %arrayidx952 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_q, i64 0, i64 2, !dbg !15703
  %587 = bitcast %struct._PointInfo* %arrayidx951 to i8*, !dbg !15703
  %588 = bitcast %struct._PointInfo* %arrayidx952 to i8*, !dbg !15703
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %587, i8* align 16 %588, i64 16, i1 false), !dbg !15703
  %arrayidx953 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_q, i64 0, i64 1, !dbg !15704
  %arrayidx954 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_q, i64 0, i64 3, !dbg !15705
  %589 = bitcast %struct._PointInfo* %arrayidx953 to i8*, !dbg !15705
  %590 = bitcast %struct._PointInfo* %arrayidx954 to i8*, !dbg !15705
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %589, i8* align 16 %590, i64 16, i1 false), !dbg !15705
  %q955 = getelementptr inbounds %struct._LineSegment, %struct._LineSegment* %dx, i32 0, i32 1, !dbg !15706
  %591 = load double, double* %q955, align 8, !dbg !15706
  %p956 = getelementptr inbounds %struct._LineSegment, %struct._LineSegment* %dx, i32 0, i32 0, !dbg !15707
  store double %591, double* %p956, align 8, !dbg !15708
  %q957 = getelementptr inbounds %struct._LineSegment, %struct._LineSegment* %dy, i32 0, i32 1, !dbg !15709
  %592 = load double, double* %q957, align 8, !dbg !15709
  %p958 = getelementptr inbounds %struct._LineSegment, %struct._LineSegment* %dy, i32 0, i32 0, !dbg !15710
  store double %592, double* %p958, align 8, !dbg !15711
  %593 = load i64, i64* %i, align 8, !dbg !15712
  store i64 %593, i64* %n, align 8, !dbg !15713
  br label %for.inc959, !dbg !15714

for.inc959:                                       ; preds = %if.end942, %if.then264
  %594 = load i64, i64* %i, align 8, !dbg !15715
  %inc960 = add nsw i64 %594, 1, !dbg !15715
  store i64 %inc960, i64* %i, align 8, !dbg !15715
  br label %for.cond235, !dbg !15716, !llvm.loop !15717

for.end961:                                       ; preds = %for.cond235
  %595 = load %struct._PointInfo*, %struct._PointInfo** %path_p, align 8, !dbg !15719
  %596 = load i64, i64* %p, align 8, !dbg !15720
  %inc962 = add nsw i64 %596, 1, !dbg !15720
  store i64 %inc962, i64* %p, align 8, !dbg !15720
  %arrayidx963 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %595, i64 %596, !dbg !15719
  %arrayidx964 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_p, i64 0, i64 1, !dbg !15721
  %597 = bitcast %struct._PointInfo* %arrayidx963 to i8*, !dbg !15721
  %598 = bitcast %struct._PointInfo* %arrayidx964 to i8*, !dbg !15721
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %597, i8* align 16 %598, i64 16, i1 false), !dbg !15721
  %599 = load %struct._PointInfo*, %struct._PointInfo** %path_q, align 8, !dbg !15722
  %600 = load i64, i64* %q, align 8, !dbg !15723
  %inc965 = add nsw i64 %600, 1, !dbg !15723
  store i64 %inc965, i64* %q, align 8, !dbg !15723
  %arrayidx966 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %599, i64 %600, !dbg !15722
  %arrayidx967 = getelementptr inbounds [5 x %struct._PointInfo], [5 x %struct._PointInfo]* %box_q, i64 0, i64 1, !dbg !15724
  %601 = bitcast %struct._PointInfo* %arrayidx966 to i8*, !dbg !15724
  %602 = bitcast %struct._PointInfo* %arrayidx967 to i8*, !dbg !15724
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %601, i8* align 16 %602, i64 16, i1 false), !dbg !15724
  %603 = load i64, i64* %p, align 8, !dbg !15725
  %604 = load i64, i64* %q, align 8, !dbg !15726
  %add968 = add nsw i64 %603, %604, !dbg !15727
  %605 = load i32, i32* %closed_path, align 4, !dbg !15728
  %conv969 = zext i32 %605 to i64, !dbg !15728
  %mul970 = mul i64 2, %conv969, !dbg !15729
  %add971 = add i64 %add968, %mul970, !dbg !15730
  %add972 = add i64 %add971, 2, !dbg !15731
  %call973 = call i8* @AcquireQuantumMemory(i64 %add972, i64 40) #14, !dbg !15732
  %606 = bitcast i8* %call973 to %struct._PrimitiveInfo*, !dbg !15733
  store %struct._PrimitiveInfo* %606, %struct._PrimitiveInfo** %stroke_polygon, align 8, !dbg !15734
  %607 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %stroke_polygon, align 8, !dbg !15735
  %cmp974 = icmp ne %struct._PrimitiveInfo* %607, null, !dbg !15737
  br i1 %cmp974, label %if.then976, label %if.end1049, !dbg !15738

if.then976:                                       ; preds = %for.end961
  store i64 0, i64* %i, align 8, !dbg !15739
  br label %for.cond977, !dbg !15742

for.cond977:                                      ; preds = %for.inc986, %if.then976
  %608 = load i64, i64* %i, align 8, !dbg !15743
  %609 = load i64, i64* %p, align 8, !dbg !15745
  %cmp978 = icmp slt i64 %608, %609, !dbg !15746
  br i1 %cmp978, label %for.body980, label %for.end988, !dbg !15747

for.body980:                                      ; preds = %for.cond977
  %610 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %stroke_polygon, align 8, !dbg !15748
  %611 = load i64, i64* %i, align 8, !dbg !15750
  %arrayidx981 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %610, i64 %611, !dbg !15748
  %612 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %polygon_primitive, align 8, !dbg !15751
  %arrayidx982 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %612, i64 0, !dbg !15751
  %613 = bitcast %struct._PrimitiveInfo* %arrayidx981 to i8*, !dbg !15751
  %614 = bitcast %struct._PrimitiveInfo* %arrayidx982 to i8*, !dbg !15751
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %613, i8* align 8 %614, i64 40, i1 false), !dbg !15751
  %615 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %stroke_polygon, align 8, !dbg !15752
  %616 = load i64, i64* %i, align 8, !dbg !15753
  %arrayidx983 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %615, i64 %616, !dbg !15752
  %point984 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx983, i32 0, i32 0, !dbg !15754
  %617 = load %struct._PointInfo*, %struct._PointInfo** %path_p, align 8, !dbg !15755
  %618 = load i64, i64* %i, align 8, !dbg !15756
  %arrayidx985 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %617, i64 %618, !dbg !15755
  %619 = bitcast %struct._PointInfo* %point984 to i8*, !dbg !15755
  %620 = bitcast %struct._PointInfo* %arrayidx985 to i8*, !dbg !15755
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %619, i8* align 8 %620, i64 16, i1 false), !dbg !15755
  br label %for.inc986, !dbg !15757

for.inc986:                                       ; preds = %for.body980
  %621 = load i64, i64* %i, align 8, !dbg !15758
  %inc987 = add nsw i64 %621, 1, !dbg !15758
  store i64 %inc987, i64* %i, align 8, !dbg !15758
  br label %for.cond977, !dbg !15759, !llvm.loop !15760

for.end988:                                       ; preds = %for.cond977
  %622 = load i32, i32* %closed_path, align 4, !dbg !15762
  %cmp989 = icmp ne i32 %622, 0, !dbg !15764
  br i1 %cmp989, label %if.then991, label %if.end999, !dbg !15765

if.then991:                                       ; preds = %for.end988
  %623 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %stroke_polygon, align 8, !dbg !15766
  %624 = load i64, i64* %i, align 8, !dbg !15768
  %arrayidx992 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %623, i64 %624, !dbg !15766
  %625 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %polygon_primitive, align 8, !dbg !15769
  %arrayidx993 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %625, i64 0, !dbg !15769
  %626 = bitcast %struct._PrimitiveInfo* %arrayidx992 to i8*, !dbg !15769
  %627 = bitcast %struct._PrimitiveInfo* %arrayidx993 to i8*, !dbg !15769
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %626, i8* align 8 %627, i64 40, i1 false), !dbg !15769
  %628 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %stroke_polygon, align 8, !dbg !15770
  %629 = load i64, i64* %i, align 8, !dbg !15771
  %arrayidx994 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %628, i64 %629, !dbg !15770
  %point995 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx994, i32 0, i32 0, !dbg !15772
  %630 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %stroke_polygon, align 8, !dbg !15773
  %arrayidx996 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %630, i64 0, !dbg !15773
  %point997 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx996, i32 0, i32 0, !dbg !15774
  %631 = bitcast %struct._PointInfo* %point995 to i8*, !dbg !15774
  %632 = bitcast %struct._PointInfo* %point997 to i8*, !dbg !15774
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %631, i8* align 8 %632, i64 16, i1 false), !dbg !15774
  %633 = load i64, i64* %i, align 8, !dbg !15775
  %inc998 = add nsw i64 %633, 1, !dbg !15775
  store i64 %inc998, i64* %i, align 8, !dbg !15775
  br label %if.end999, !dbg !15776

if.end999:                                        ; preds = %if.then991, %for.end988
  br label %for.cond1000, !dbg !15777

for.cond1000:                                     ; preds = %for.inc1017, %if.end999
  %634 = load i64, i64* %i, align 8, !dbg !15778
  %635 = load i64, i64* %p, align 8, !dbg !15781
  %636 = load i64, i64* %q, align 8, !dbg !15782
  %add1001 = add nsw i64 %635, %636, !dbg !15783
  %637 = load i32, i32* %closed_path, align 4, !dbg !15784
  %conv1002 = zext i32 %637 to i64, !dbg !15784
  %add1003 = add nsw i64 %add1001, %conv1002, !dbg !15785
  %cmp1004 = icmp slt i64 %634, %add1003, !dbg !15786
  br i1 %cmp1004, label %for.body1006, label %for.end1019, !dbg !15787

for.body1006:                                     ; preds = %for.cond1000
  %638 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %stroke_polygon, align 8, !dbg !15788
  %639 = load i64, i64* %i, align 8, !dbg !15790
  %arrayidx1007 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %638, i64 %639, !dbg !15788
  %640 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %polygon_primitive, align 8, !dbg !15791
  %arrayidx1008 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %640, i64 0, !dbg !15791
  %641 = bitcast %struct._PrimitiveInfo* %arrayidx1007 to i8*, !dbg !15791
  %642 = bitcast %struct._PrimitiveInfo* %arrayidx1008 to i8*, !dbg !15791
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %641, i8* align 8 %642, i64 40, i1 false), !dbg !15791
  %643 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %stroke_polygon, align 8, !dbg !15792
  %644 = load i64, i64* %i, align 8, !dbg !15793
  %arrayidx1009 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %643, i64 %644, !dbg !15792
  %point1010 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx1009, i32 0, i32 0, !dbg !15794
  %645 = load %struct._PointInfo*, %struct._PointInfo** %path_q, align 8, !dbg !15795
  %646 = load i64, i64* %p, align 8, !dbg !15796
  %647 = load i64, i64* %q, align 8, !dbg !15797
  %add1011 = add nsw i64 %646, %647, !dbg !15798
  %648 = load i32, i32* %closed_path, align 4, !dbg !15799
  %conv1012 = zext i32 %648 to i64, !dbg !15799
  %add1013 = add nsw i64 %add1011, %conv1012, !dbg !15800
  %649 = load i64, i64* %i, align 8, !dbg !15801
  %add1014 = add nsw i64 %649, 1, !dbg !15802
  %sub1015 = sub nsw i64 %add1013, %add1014, !dbg !15803
  %arrayidx1016 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %645, i64 %sub1015, !dbg !15795
  %650 = bitcast %struct._PointInfo* %point1010 to i8*, !dbg !15795
  %651 = bitcast %struct._PointInfo* %arrayidx1016 to i8*, !dbg !15795
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %650, i8* align 8 %651, i64 16, i1 false), !dbg !15795
  br label %for.inc1017, !dbg !15804

for.inc1017:                                      ; preds = %for.body1006
  %652 = load i64, i64* %i, align 8, !dbg !15805
  %inc1018 = add nsw i64 %652, 1, !dbg !15805
  store i64 %inc1018, i64* %i, align 8, !dbg !15805
  br label %for.cond1000, !dbg !15806, !llvm.loop !15807

for.end1019:                                      ; preds = %for.cond1000
  %653 = load i32, i32* %closed_path, align 4, !dbg !15809
  %cmp1020 = icmp ne i32 %653, 0, !dbg !15811
  br i1 %cmp1020, label %if.then1022, label %if.end1032, !dbg !15812

if.then1022:                                      ; preds = %for.end1019
  %654 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %stroke_polygon, align 8, !dbg !15813
  %655 = load i64, i64* %i, align 8, !dbg !15815
  %arrayidx1023 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %654, i64 %655, !dbg !15813
  %656 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %polygon_primitive, align 8, !dbg !15816
  %arrayidx1024 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %656, i64 0, !dbg !15816
  %657 = bitcast %struct._PrimitiveInfo* %arrayidx1023 to i8*, !dbg !15816
  %658 = bitcast %struct._PrimitiveInfo* %arrayidx1024 to i8*, !dbg !15816
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %657, i8* align 8 %658, i64 40, i1 false), !dbg !15816
  %659 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %stroke_polygon, align 8, !dbg !15817
  %660 = load i64, i64* %i, align 8, !dbg !15818
  %arrayidx1025 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %659, i64 %660, !dbg !15817
  %point1026 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx1025, i32 0, i32 0, !dbg !15819
  %661 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %stroke_polygon, align 8, !dbg !15820
  %662 = load i64, i64* %p, align 8, !dbg !15821
  %663 = load i32, i32* %closed_path, align 4, !dbg !15822
  %conv1027 = zext i32 %663 to i64, !dbg !15822
  %add1028 = add nsw i64 %662, %conv1027, !dbg !15823
  %arrayidx1029 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %661, i64 %add1028, !dbg !15820
  %point1030 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx1029, i32 0, i32 0, !dbg !15824
  %664 = bitcast %struct._PointInfo* %point1026 to i8*, !dbg !15824
  %665 = bitcast %struct._PointInfo* %point1030 to i8*, !dbg !15824
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %664, i8* align 8 %665, i64 16, i1 false), !dbg !15824
  %666 = load i64, i64* %i, align 8, !dbg !15825
  %inc1031 = add nsw i64 %666, 1, !dbg !15825
  store i64 %inc1031, i64* %i, align 8, !dbg !15825
  br label %if.end1032, !dbg !15826

if.end1032:                                       ; preds = %if.then1022, %for.end1019
  %667 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %stroke_polygon, align 8, !dbg !15827
  %668 = load i64, i64* %i, align 8, !dbg !15828
  %arrayidx1033 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %667, i64 %668, !dbg !15827
  %669 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %polygon_primitive, align 8, !dbg !15829
  %arrayidx1034 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %669, i64 0, !dbg !15829
  %670 = bitcast %struct._PrimitiveInfo* %arrayidx1033 to i8*, !dbg !15829
  %671 = bitcast %struct._PrimitiveInfo* %arrayidx1034 to i8*, !dbg !15829
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %670, i8* align 8 %671, i64 40, i1 false), !dbg !15829
  %672 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %stroke_polygon, align 8, !dbg !15830
  %673 = load i64, i64* %i, align 8, !dbg !15831
  %arrayidx1035 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %672, i64 %673, !dbg !15830
  %point1036 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx1035, i32 0, i32 0, !dbg !15832
  %674 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %stroke_polygon, align 8, !dbg !15833
  %arrayidx1037 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %674, i64 0, !dbg !15833
  %point1038 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx1037, i32 0, i32 0, !dbg !15834
  %675 = bitcast %struct._PointInfo* %point1036 to i8*, !dbg !15834
  %676 = bitcast %struct._PointInfo* %point1038 to i8*, !dbg !15834
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %675, i8* align 8 %676, i64 16, i1 false), !dbg !15834
  %677 = load i64, i64* %i, align 8, !dbg !15835
  %inc1039 = add nsw i64 %677, 1, !dbg !15835
  store i64 %inc1039, i64* %i, align 8, !dbg !15835
  %678 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %stroke_polygon, align 8, !dbg !15836
  %679 = load i64, i64* %i, align 8, !dbg !15837
  %arrayidx1040 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %678, i64 %679, !dbg !15836
  %primitive1041 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx1040, i32 0, i32 2, !dbg !15838
  store i32 0, i32* %primitive1041, align 8, !dbg !15839
  %680 = load i64, i64* %p, align 8, !dbg !15840
  %681 = load i64, i64* %q, align 8, !dbg !15841
  %add1042 = add nsw i64 %680, %681, !dbg !15842
  %682 = load i32, i32* %closed_path, align 4, !dbg !15843
  %mul1043 = mul i32 2, %682, !dbg !15844
  %conv1044 = zext i32 %mul1043 to i64, !dbg !15845
  %add1045 = add nsw i64 %add1042, %conv1044, !dbg !15846
  %add1046 = add nsw i64 %add1045, 1, !dbg !15847
  %683 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %stroke_polygon, align 8, !dbg !15848
  %arrayidx1047 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %683, i64 0, !dbg !15848
  %coordinates1048 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx1047, i32 0, i32 1, !dbg !15849
  store i64 %add1046, i64* %coordinates1048, align 8, !dbg !15850
  br label %if.end1049, !dbg !15851

if.end1049:                                       ; preds = %if.end1032, %for.end961
  %684 = load %struct._PointInfo*, %struct._PointInfo** %path_p, align 8, !dbg !15852
  %685 = bitcast %struct._PointInfo* %684 to i8*, !dbg !15852
  %call1050 = call i8* @RelinquishMagickMemory(i8* %685), !dbg !15853
  %686 = bitcast i8* %call1050 to %struct._PointInfo*, !dbg !15854
  store %struct._PointInfo* %686, %struct._PointInfo** %path_p, align 8, !dbg !15855
  %687 = load %struct._PointInfo*, %struct._PointInfo** %path_q, align 8, !dbg !15856
  %688 = bitcast %struct._PointInfo* %687 to i8*, !dbg !15856
  %call1051 = call i8* @RelinquishMagickMemory(i8* %688), !dbg !15857
  %689 = bitcast i8* %call1051 to %struct._PointInfo*, !dbg !15858
  store %struct._PointInfo* %689, %struct._PointInfo** %path_q, align 8, !dbg !15859
  %690 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %polygon_primitive, align 8, !dbg !15860
  %691 = bitcast %struct._PrimitiveInfo* %690 to i8*, !dbg !15860
  %call1052 = call i8* @RelinquishMagickMemory(i8* %691), !dbg !15861
  %692 = bitcast i8* %call1052 to %struct._PrimitiveInfo*, !dbg !15862
  store %struct._PrimitiveInfo* %692, %struct._PrimitiveInfo** %polygon_primitive, align 8, !dbg !15863
  %693 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %stroke_polygon, align 8, !dbg !15864
  store %struct._PrimitiveInfo* %693, %struct._PrimitiveInfo** %retval, align 8, !dbg !15865
  br label %return, !dbg !15865

return:                                           ; preds = %if.end1049, %if.then502, %if.then
  %694 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %retval, align 8, !dbg !15866
  ret %struct._PrimitiveInfo* %694, !dbg !15866
}

; Function Attrs: noinline nounwind uwtable
define internal void @DrawRoundLinecap(%struct._Image* %image, %struct._DrawInfo* %draw_info, %struct._PrimitiveInfo* %primitive_info) #0 !dbg !15867 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %draw_info.addr = alloca %struct._DrawInfo*, align 8
  %primitive_info.addr = alloca %struct._PrimitiveInfo*, align 8
  %linecap = alloca [5 x %struct._PrimitiveInfo], align 16
  %i = alloca i64, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !15870, metadata !DIExpression()), !dbg !15871
  store %struct._DrawInfo* %draw_info, %struct._DrawInfo** %draw_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._DrawInfo** %draw_info.addr, metadata !15872, metadata !DIExpression()), !dbg !15873
  store %struct._PrimitiveInfo* %primitive_info, %struct._PrimitiveInfo** %primitive_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PrimitiveInfo** %primitive_info.addr, metadata !15874, metadata !DIExpression()), !dbg !15875
  call void @llvm.dbg.declare(metadata [5 x %struct._PrimitiveInfo]* %linecap, metadata !15876, metadata !DIExpression()), !dbg !15878
  call void @llvm.dbg.declare(metadata i64* %i, metadata !15879, metadata !DIExpression()), !dbg !15880
  store i64 0, i64* %i, align 8, !dbg !15881
  br label %for.cond, !dbg !15883

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i64, i64* %i, align 8, !dbg !15884
  %cmp = icmp slt i64 %0, 4, !dbg !15886
  br i1 %cmp, label %for.body, label %for.end, !dbg !15887

for.body:                                         ; preds = %for.cond
  %1 = load i64, i64* %i, align 8, !dbg !15888
  %arrayidx = getelementptr inbounds [5 x %struct._PrimitiveInfo], [5 x %struct._PrimitiveInfo]* %linecap, i64 0, i64 %1, !dbg !15889
  %2 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !15890
  %3 = bitcast %struct._PrimitiveInfo* %arrayidx to i8*, !dbg !15891
  %4 = bitcast %struct._PrimitiveInfo* %2 to i8*, !dbg !15891
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 40, i1 false), !dbg !15891
  br label %for.inc, !dbg !15889

for.inc:                                          ; preds = %for.body
  %5 = load i64, i64* %i, align 8, !dbg !15892
  %inc = add nsw i64 %5, 1, !dbg !15892
  store i64 %inc, i64* %i, align 8, !dbg !15892
  br label %for.cond, !dbg !15893, !llvm.loop !15894

for.end:                                          ; preds = %for.cond
  %arrayidx1 = getelementptr inbounds [5 x %struct._PrimitiveInfo], [5 x %struct._PrimitiveInfo]* %linecap, i64 0, i64 0, !dbg !15896
  %coordinates = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx1, i32 0, i32 1, !dbg !15897
  store i64 4, i64* %coordinates, align 16, !dbg !15898
  %arrayidx2 = getelementptr inbounds [5 x %struct._PrimitiveInfo], [5 x %struct._PrimitiveInfo]* %linecap, i64 0, i64 1, !dbg !15899
  %point = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx2, i32 0, i32 0, !dbg !15900
  %x = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 0, !dbg !15901
  %6 = load double, double* %x, align 8, !dbg !15902
  %add = fadd double %6, 0x3D06849B86A12B9C, !dbg !15902
  store double %add, double* %x, align 8, !dbg !15902
  %arrayidx3 = getelementptr inbounds [5 x %struct._PrimitiveInfo], [5 x %struct._PrimitiveInfo]* %linecap, i64 0, i64 2, !dbg !15903
  %point4 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx3, i32 0, i32 0, !dbg !15904
  %x5 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point4, i32 0, i32 0, !dbg !15905
  %7 = load double, double* %x5, align 16, !dbg !15906
  %add6 = fadd double %7, 0x3D06849B86A12B9C, !dbg !15906
  store double %add6, double* %x5, align 16, !dbg !15906
  %arrayidx7 = getelementptr inbounds [5 x %struct._PrimitiveInfo], [5 x %struct._PrimitiveInfo]* %linecap, i64 0, i64 2, !dbg !15907
  %point8 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx7, i32 0, i32 0, !dbg !15908
  %y = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point8, i32 0, i32 1, !dbg !15909
  %8 = load double, double* %y, align 8, !dbg !15910
  %add9 = fadd double %8, 0x3D06849B86A12B9C, !dbg !15910
  store double %add9, double* %y, align 8, !dbg !15910
  %arrayidx10 = getelementptr inbounds [5 x %struct._PrimitiveInfo], [5 x %struct._PrimitiveInfo]* %linecap, i64 0, i64 3, !dbg !15911
  %point11 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx10, i32 0, i32 0, !dbg !15912
  %y12 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point11, i32 0, i32 1, !dbg !15913
  %9 = load double, double* %y12, align 8, !dbg !15914
  %add13 = fadd double %9, 0x3D06849B86A12B9C, !dbg !15914
  store double %add13, double* %y12, align 8, !dbg !15914
  %arrayidx14 = getelementptr inbounds [5 x %struct._PrimitiveInfo], [5 x %struct._PrimitiveInfo]* %linecap, i64 0, i64 4, !dbg !15915
  %primitive = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx14, i32 0, i32 2, !dbg !15916
  store i32 0, i32* %primitive, align 8, !dbg !15917
  %10 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !15918
  %11 = load %struct._DrawInfo*, %struct._DrawInfo** %draw_info.addr, align 8, !dbg !15919
  %arraydecay = getelementptr inbounds [5 x %struct._PrimitiveInfo], [5 x %struct._PrimitiveInfo]* %linecap, i64 0, i64 0, !dbg !15920
  %call = call i32 @DrawPolygonPrimitive(%struct._Image* %10, %struct._DrawInfo* %11, %struct._PrimitiveInfo* %arraydecay), !dbg !15921
  ret void, !dbg !15922
}

; Function Attrs: noinline nounwind uwtable
define internal double @DrawEpsilonReciprocal(double %x) #0 !dbg !15923 {
entry:
  %x.addr = alloca double, align 8
  %sign = alloca double, align 8
  store double %x, double* %x.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x.addr, metadata !15924, metadata !DIExpression()), !dbg !15925
  call void @llvm.dbg.declare(metadata double* %sign, metadata !15926, metadata !DIExpression()), !dbg !15927
  %0 = load double, double* %x.addr, align 8, !dbg !15928
  %cmp = fcmp olt double %0, 0.000000e+00, !dbg !15929
  %1 = zext i1 %cmp to i64, !dbg !15928
  %cond = select i1 %cmp, double -1.000000e+00, double 1.000000e+00, !dbg !15928
  store double %cond, double* %sign, align 8, !dbg !15927
  %2 = load double, double* %sign, align 8, !dbg !15930
  %3 = load double, double* %x.addr, align 8, !dbg !15931
  %mul = fmul double %2, %3, !dbg !15932
  %cmp1 = fcmp oge double %mul, 1.000000e-10, !dbg !15933
  br i1 %cmp1, label %cond.true, label %cond.false, !dbg !15934

cond.true:                                        ; preds = %entry
  %4 = load double, double* %x.addr, align 8, !dbg !15935
  %div = fdiv double 1.000000e+00, %4, !dbg !15936
  br label %cond.end, !dbg !15934

cond.false:                                       ; preds = %entry
  %5 = load double, double* %sign, align 8, !dbg !15937
  %mul2 = fmul double %5, 1.000000e+10, !dbg !15938
  br label %cond.end, !dbg !15934

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond3 = phi double [ %div, %cond.true ], [ %mul2, %cond.false ], !dbg !15934
  ret double %cond3, !dbg !15939
}

; Function Attrs: noinline nounwind uwtable
define internal void @TraceSquareLinecap(%struct._PrimitiveInfo* %primitive_info, i64 %number_vertices, double %offset) #0 !dbg !15940 {
entry:
  %primitive_info.addr = alloca %struct._PrimitiveInfo*, align 8
  %number_vertices.addr = alloca i64, align 8
  %offset.addr = alloca double, align 8
  %distance = alloca double, align 8
  %dx = alloca double, align 8
  %dy = alloca double, align 8
  %i = alloca i64, align 8
  %j = alloca i64, align 8
  store %struct._PrimitiveInfo* %primitive_info, %struct._PrimitiveInfo** %primitive_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PrimitiveInfo** %primitive_info.addr, metadata !15943, metadata !DIExpression()), !dbg !15944
  store i64 %number_vertices, i64* %number_vertices.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %number_vertices.addr, metadata !15945, metadata !DIExpression()), !dbg !15946
  store double %offset, double* %offset.addr, align 8
  call void @llvm.dbg.declare(metadata double* %offset.addr, metadata !15947, metadata !DIExpression()), !dbg !15948
  call void @llvm.dbg.declare(metadata double* %distance, metadata !15949, metadata !DIExpression()), !dbg !15950
  call void @llvm.dbg.declare(metadata double* %dx, metadata !15951, metadata !DIExpression()), !dbg !15952
  call void @llvm.dbg.declare(metadata double* %dy, metadata !15953, metadata !DIExpression()), !dbg !15954
  call void @llvm.dbg.declare(metadata i64* %i, metadata !15955, metadata !DIExpression()), !dbg !15956
  call void @llvm.dbg.declare(metadata i64* %j, metadata !15957, metadata !DIExpression()), !dbg !15958
  store double 0.000000e+00, double* %dx, align 8, !dbg !15959
  store double 0.000000e+00, double* %dy, align 8, !dbg !15960
  store i64 1, i64* %i, align 8, !dbg !15961
  br label %for.cond, !dbg !15963

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i64, i64* %i, align 8, !dbg !15964
  %1 = load i64, i64* %number_vertices.addr, align 8, !dbg !15966
  %cmp = icmp slt i64 %0, %1, !dbg !15967
  br i1 %cmp, label %for.body, label %for.end, !dbg !15968

for.body:                                         ; preds = %for.cond
  %2 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !15969
  %arrayidx = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %2, i64 0, !dbg !15969
  %point = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx, i32 0, i32 0, !dbg !15971
  %x = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 0, !dbg !15972
  %3 = load double, double* %x, align 8, !dbg !15972
  %4 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !15973
  %5 = load i64, i64* %i, align 8, !dbg !15974
  %arrayidx1 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %4, i64 %5, !dbg !15973
  %point2 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx1, i32 0, i32 0, !dbg !15975
  %x3 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point2, i32 0, i32 0, !dbg !15976
  %6 = load double, double* %x3, align 8, !dbg !15976
  %sub = fsub double %3, %6, !dbg !15977
  store double %sub, double* %dx, align 8, !dbg !15978
  %7 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !15979
  %arrayidx4 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %7, i64 0, !dbg !15979
  %point5 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx4, i32 0, i32 0, !dbg !15980
  %y = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point5, i32 0, i32 1, !dbg !15981
  %8 = load double, double* %y, align 8, !dbg !15981
  %9 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !15982
  %10 = load i64, i64* %i, align 8, !dbg !15983
  %arrayidx6 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %9, i64 %10, !dbg !15982
  %point7 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx6, i32 0, i32 0, !dbg !15984
  %y8 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point7, i32 0, i32 1, !dbg !15985
  %11 = load double, double* %y8, align 8, !dbg !15985
  %sub9 = fsub double %8, %11, !dbg !15986
  store double %sub9, double* %dy, align 8, !dbg !15987
  %12 = load double, double* %dx, align 8, !dbg !15988
  %13 = call double @llvm.fabs.f64(double %12), !dbg !15990
  %cmp10 = fcmp oge double %13, 1.000000e-15, !dbg !15991
  br i1 %cmp10, label %if.then, label %lor.lhs.false, !dbg !15992

lor.lhs.false:                                    ; preds = %for.body
  %14 = load double, double* %dy, align 8, !dbg !15993
  %15 = call double @llvm.fabs.f64(double %14), !dbg !15994
  %cmp11 = fcmp oge double %15, 1.000000e-15, !dbg !15995
  br i1 %cmp11, label %if.then, label %if.end, !dbg !15996

if.then:                                          ; preds = %lor.lhs.false, %for.body
  br label %for.end, !dbg !15997

if.end:                                           ; preds = %lor.lhs.false
  br label %for.inc, !dbg !15998

for.inc:                                          ; preds = %if.end
  %16 = load i64, i64* %i, align 8, !dbg !15999
  %inc = add nsw i64 %16, 1, !dbg !15999
  store i64 %inc, i64* %i, align 8, !dbg !15999
  br label %for.cond, !dbg !16000, !llvm.loop !16001

for.end:                                          ; preds = %if.then, %for.cond
  %17 = load i64, i64* %i, align 8, !dbg !16003
  %18 = load i64, i64* %number_vertices.addr, align 8, !dbg !16005
  %cmp12 = icmp eq i64 %17, %18, !dbg !16006
  br i1 %cmp12, label %if.then13, label %if.end15, !dbg !16007

if.then13:                                        ; preds = %for.end
  %19 = load i64, i64* %number_vertices.addr, align 8, !dbg !16008
  %sub14 = sub nsw i64 %19, 1, !dbg !16009
  store i64 %sub14, i64* %i, align 8, !dbg !16010
  br label %if.end15, !dbg !16011

if.end15:                                         ; preds = %if.then13, %for.end
  %20 = load double, double* %dx, align 8, !dbg !16012
  %21 = load double, double* %dy, align 8, !dbg !16013
  %call = call double @hypot(double %20, double %21) #17, !dbg !16014
  store double %call, double* %distance, align 8, !dbg !16015
  %22 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !16016
  %23 = load i64, i64* %i, align 8, !dbg !16017
  %arrayidx16 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %22, i64 %23, !dbg !16016
  %point17 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx16, i32 0, i32 0, !dbg !16018
  %x18 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point17, i32 0, i32 0, !dbg !16019
  %24 = load double, double* %x18, align 8, !dbg !16019
  %25 = load double, double* %dx, align 8, !dbg !16020
  %26 = load double, double* %distance, align 8, !dbg !16021
  %27 = load double, double* %offset.addr, align 8, !dbg !16022
  %add = fadd double %26, %27, !dbg !16023
  %mul = fmul double %25, %add, !dbg !16024
  %28 = load double, double* %distance, align 8, !dbg !16025
  %div = fdiv double %mul, %28, !dbg !16026
  %add19 = fadd double %24, %div, !dbg !16027
  %29 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !16028
  %arrayidx20 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %29, i64 0, !dbg !16028
  %point21 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx20, i32 0, i32 0, !dbg !16029
  %x22 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point21, i32 0, i32 0, !dbg !16030
  store double %add19, double* %x22, align 8, !dbg !16031
  %30 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !16032
  %31 = load i64, i64* %i, align 8, !dbg !16033
  %arrayidx23 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %30, i64 %31, !dbg !16032
  %point24 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx23, i32 0, i32 0, !dbg !16034
  %y25 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point24, i32 0, i32 1, !dbg !16035
  %32 = load double, double* %y25, align 8, !dbg !16035
  %33 = load double, double* %dy, align 8, !dbg !16036
  %34 = load double, double* %distance, align 8, !dbg !16037
  %35 = load double, double* %offset.addr, align 8, !dbg !16038
  %add26 = fadd double %34, %35, !dbg !16039
  %mul27 = fmul double %33, %add26, !dbg !16040
  %36 = load double, double* %distance, align 8, !dbg !16041
  %div28 = fdiv double %mul27, %36, !dbg !16042
  %add29 = fadd double %32, %div28, !dbg !16043
  %37 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !16044
  %arrayidx30 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %37, i64 0, !dbg !16044
  %point31 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx30, i32 0, i32 0, !dbg !16045
  %y32 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point31, i32 0, i32 1, !dbg !16046
  store double %add29, double* %y32, align 8, !dbg !16047
  %38 = load i64, i64* %number_vertices.addr, align 8, !dbg !16048
  %sub33 = sub nsw i64 %38, 2, !dbg !16050
  store i64 %sub33, i64* %j, align 8, !dbg !16051
  br label %for.cond34, !dbg !16052

for.cond34:                                       ; preds = %for.inc58, %if.end15
  %39 = load i64, i64* %j, align 8, !dbg !16053
  %cmp35 = icmp sge i64 %39, 0, !dbg !16055
  br i1 %cmp35, label %for.body36, label %for.end59, !dbg !16056

for.body36:                                       ; preds = %for.cond34
  %40 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !16057
  %41 = load i64, i64* %number_vertices.addr, align 8, !dbg !16059
  %sub37 = sub i64 %41, 1, !dbg !16060
  %arrayidx38 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %40, i64 %sub37, !dbg !16057
  %point39 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx38, i32 0, i32 0, !dbg !16061
  %x40 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point39, i32 0, i32 0, !dbg !16062
  %42 = load double, double* %x40, align 8, !dbg !16062
  %43 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !16063
  %44 = load i64, i64* %j, align 8, !dbg !16064
  %arrayidx41 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %43, i64 %44, !dbg !16063
  %point42 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx41, i32 0, i32 0, !dbg !16065
  %x43 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point42, i32 0, i32 0, !dbg !16066
  %45 = load double, double* %x43, align 8, !dbg !16066
  %sub44 = fsub double %42, %45, !dbg !16067
  store double %sub44, double* %dx, align 8, !dbg !16068
  %46 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !16069
  %47 = load i64, i64* %number_vertices.addr, align 8, !dbg !16070
  %sub45 = sub i64 %47, 1, !dbg !16071
  %arrayidx46 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %46, i64 %sub45, !dbg !16069
  %point47 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx46, i32 0, i32 0, !dbg !16072
  %y48 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point47, i32 0, i32 1, !dbg !16073
  %48 = load double, double* %y48, align 8, !dbg !16073
  %49 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !16074
  %50 = load i64, i64* %j, align 8, !dbg !16075
  %arrayidx49 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %49, i64 %50, !dbg !16074
  %point50 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx49, i32 0, i32 0, !dbg !16076
  %y51 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point50, i32 0, i32 1, !dbg !16077
  %51 = load double, double* %y51, align 8, !dbg !16077
  %sub52 = fsub double %48, %51, !dbg !16078
  store double %sub52, double* %dy, align 8, !dbg !16079
  %52 = load double, double* %dx, align 8, !dbg !16080
  %53 = call double @llvm.fabs.f64(double %52), !dbg !16082
  %cmp53 = fcmp oge double %53, 1.000000e-15, !dbg !16083
  br i1 %cmp53, label %if.then56, label %lor.lhs.false54, !dbg !16084

lor.lhs.false54:                                  ; preds = %for.body36
  %54 = load double, double* %dy, align 8, !dbg !16085
  %55 = call double @llvm.fabs.f64(double %54), !dbg !16086
  %cmp55 = fcmp oge double %55, 1.000000e-15, !dbg !16087
  br i1 %cmp55, label %if.then56, label %if.end57, !dbg !16088

if.then56:                                        ; preds = %lor.lhs.false54, %for.body36
  br label %for.end59, !dbg !16089

if.end57:                                         ; preds = %lor.lhs.false54
  br label %for.inc58, !dbg !16090

for.inc58:                                        ; preds = %if.end57
  %56 = load i64, i64* %j, align 8, !dbg !16091
  %dec = add nsw i64 %56, -1, !dbg !16091
  store i64 %dec, i64* %j, align 8, !dbg !16091
  br label %for.cond34, !dbg !16092, !llvm.loop !16093

for.end59:                                        ; preds = %if.then56, %for.cond34
  %57 = load double, double* %dx, align 8, !dbg !16095
  %58 = load double, double* %dy, align 8, !dbg !16096
  %call60 = call double @hypot(double %57, double %58) #17, !dbg !16097
  store double %call60, double* %distance, align 8, !dbg !16098
  %59 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !16099
  %60 = load i64, i64* %j, align 8, !dbg !16100
  %arrayidx61 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %59, i64 %60, !dbg !16099
  %point62 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx61, i32 0, i32 0, !dbg !16101
  %x63 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point62, i32 0, i32 0, !dbg !16102
  %61 = load double, double* %x63, align 8, !dbg !16102
  %62 = load double, double* %dx, align 8, !dbg !16103
  %63 = load double, double* %distance, align 8, !dbg !16104
  %64 = load double, double* %offset.addr, align 8, !dbg !16105
  %add64 = fadd double %63, %64, !dbg !16106
  %mul65 = fmul double %62, %add64, !dbg !16107
  %65 = load double, double* %distance, align 8, !dbg !16108
  %div66 = fdiv double %mul65, %65, !dbg !16109
  %add67 = fadd double %61, %div66, !dbg !16110
  %66 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !16111
  %67 = load i64, i64* %number_vertices.addr, align 8, !dbg !16112
  %sub68 = sub i64 %67, 1, !dbg !16113
  %arrayidx69 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %66, i64 %sub68, !dbg !16111
  %point70 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx69, i32 0, i32 0, !dbg !16114
  %x71 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point70, i32 0, i32 0, !dbg !16115
  store double %add67, double* %x71, align 8, !dbg !16116
  %68 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !16117
  %69 = load i64, i64* %j, align 8, !dbg !16118
  %arrayidx72 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %68, i64 %69, !dbg !16117
  %point73 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx72, i32 0, i32 0, !dbg !16119
  %y74 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point73, i32 0, i32 1, !dbg !16120
  %70 = load double, double* %y74, align 8, !dbg !16120
  %71 = load double, double* %dy, align 8, !dbg !16121
  %72 = load double, double* %distance, align 8, !dbg !16122
  %73 = load double, double* %offset.addr, align 8, !dbg !16123
  %add75 = fadd double %72, %73, !dbg !16124
  %mul76 = fmul double %71, %add75, !dbg !16125
  %74 = load double, double* %distance, align 8, !dbg !16126
  %div77 = fdiv double %mul76, %74, !dbg !16127
  %add78 = fadd double %70, %div77, !dbg !16128
  %75 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !16129
  %76 = load i64, i64* %number_vertices.addr, align 8, !dbg !16130
  %sub79 = sub i64 %76, 1, !dbg !16131
  %arrayidx80 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %75, i64 %sub79, !dbg !16129
  %point81 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %arrayidx80, i32 0, i32 0, !dbg !16132
  %y82 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point81, i32 0, i32 1, !dbg !16133
  store double %add78, double* %y82, align 8, !dbg !16134
  ret void, !dbg !16135
}

; Function Attrs: nounwind
declare dso_local double @atan2(double, double) #10

; Function Attrs: noinline nounwind uwtable
define internal double @Permutate(i64 %n, i64 %k) #0 !dbg !16136 {
entry:
  %n.addr = alloca i64, align 8
  %k.addr = alloca i64, align 8
  %r = alloca double, align 8
  %i = alloca i64, align 8
  store i64 %n, i64* %n.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %n.addr, metadata !16139, metadata !DIExpression()), !dbg !16140
  store i64 %k, i64* %k.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %k.addr, metadata !16141, metadata !DIExpression()), !dbg !16142
  call void @llvm.dbg.declare(metadata double* %r, metadata !16143, metadata !DIExpression()), !dbg !16144
  call void @llvm.dbg.declare(metadata i64* %i, metadata !16145, metadata !DIExpression()), !dbg !16146
  store double 1.000000e+00, double* %r, align 8, !dbg !16147
  %0 = load i64, i64* %k.addr, align 8, !dbg !16148
  %add = add nsw i64 %0, 1, !dbg !16150
  store i64 %add, i64* %i, align 8, !dbg !16151
  br label %for.cond, !dbg !16152

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i64, i64* %i, align 8, !dbg !16153
  %2 = load i64, i64* %n.addr, align 8, !dbg !16155
  %cmp = icmp sle i64 %1, %2, !dbg !16156
  br i1 %cmp, label %for.body, label %for.end, !dbg !16157

for.body:                                         ; preds = %for.cond
  %3 = load i64, i64* %i, align 8, !dbg !16158
  %conv = sitofp i64 %3 to double, !dbg !16158
  %4 = load double, double* %r, align 8, !dbg !16159
  %mul = fmul double %4, %conv, !dbg !16159
  store double %mul, double* %r, align 8, !dbg !16159
  br label %for.inc, !dbg !16160

for.inc:                                          ; preds = %for.body
  %5 = load i64, i64* %i, align 8, !dbg !16161
  %inc = add nsw i64 %5, 1, !dbg !16161
  store i64 %inc, i64* %i, align 8, !dbg !16161
  br label %for.cond, !dbg !16162, !llvm.loop !16163

for.end:                                          ; preds = %for.cond
  store i64 1, i64* %i, align 8, !dbg !16165
  br label %for.cond1, !dbg !16167

for.cond1:                                        ; preds = %for.inc6, %for.end
  %6 = load i64, i64* %i, align 8, !dbg !16168
  %7 = load i64, i64* %n.addr, align 8, !dbg !16170
  %8 = load i64, i64* %k.addr, align 8, !dbg !16171
  %sub = sub nsw i64 %7, %8, !dbg !16172
  %cmp2 = icmp sle i64 %6, %sub, !dbg !16173
  br i1 %cmp2, label %for.body4, label %for.end8, !dbg !16174

for.body4:                                        ; preds = %for.cond1
  %9 = load i64, i64* %i, align 8, !dbg !16175
  %conv5 = sitofp i64 %9 to double, !dbg !16175
  %10 = load double, double* %r, align 8, !dbg !16176
  %div = fdiv double %10, %conv5, !dbg !16176
  store double %div, double* %r, align 8, !dbg !16176
  br label %for.inc6, !dbg !16177

for.inc6:                                         ; preds = %for.body4
  %11 = load i64, i64* %i, align 8, !dbg !16178
  %inc7 = add nsw i64 %11, 1, !dbg !16178
  store i64 %inc7, i64* %i, align 8, !dbg !16178
  br label %for.cond1, !dbg !16179, !llvm.loop !16180

for.end8:                                         ; preds = %for.cond1
  %12 = load double, double* %r, align 8, !dbg !16182
  ret double %12, !dbg !16183
}

; Function Attrs: nounwind
declare dso_local double @pow(double, double) #10

; Function Attrs: nounwind readnone
declare dso_local i16** @__ctype_b_loc() #4

; Function Attrs: noinline nounwind uwtable
define internal void @TraceArcPath(%struct._PrimitiveInfo* %primitive_info, double %start.coerce0, double %start.coerce1, double %end.coerce0, double %end.coerce1, double %arc.coerce0, double %arc.coerce1, double %angle, i32 %large_arc, i32 %sweep) #0 !dbg !16184 {
entry:
  %start = alloca %struct._PointInfo, align 8
  %end = alloca %struct._PointInfo, align 8
  %arc = alloca %struct._PointInfo, align 8
  %primitive_info.addr = alloca %struct._PrimitiveInfo*, align 8
  %angle.addr = alloca double, align 8
  %large_arc.addr = alloca i32, align 4
  %sweep.addr = alloca i32, align 4
  %alpha = alloca double, align 8
  %beta = alloca double, align 8
  %delta = alloca double, align 8
  %factor = alloca double, align 8
  %gamma = alloca double, align 8
  %theta = alloca double, align 8
  %center = alloca %struct._PointInfo, align 8
  %points = alloca [3 x %struct._PointInfo], align 16
  %radii = alloca %struct._PointInfo, align 8
  %cosine = alloca double, align 8
  %sine = alloca double, align 8
  %p = alloca %struct._PrimitiveInfo*, align 8
  %i = alloca i64, align 8
  %arc_segments = alloca i64, align 8
  %0 = bitcast %struct._PointInfo* %start to { double, double }*
  %1 = getelementptr inbounds { double, double }, { double, double }* %0, i32 0, i32 0
  store double %start.coerce0, double* %1, align 8
  %2 = getelementptr inbounds { double, double }, { double, double }* %0, i32 0, i32 1
  store double %start.coerce1, double* %2, align 8
  %3 = bitcast %struct._PointInfo* %end to { double, double }*
  %4 = getelementptr inbounds { double, double }, { double, double }* %3, i32 0, i32 0
  store double %end.coerce0, double* %4, align 8
  %5 = getelementptr inbounds { double, double }, { double, double }* %3, i32 0, i32 1
  store double %end.coerce1, double* %5, align 8
  %6 = bitcast %struct._PointInfo* %arc to { double, double }*
  %7 = getelementptr inbounds { double, double }, { double, double }* %6, i32 0, i32 0
  store double %arc.coerce0, double* %7, align 8
  %8 = getelementptr inbounds { double, double }, { double, double }* %6, i32 0, i32 1
  store double %arc.coerce1, double* %8, align 8
  store %struct._PrimitiveInfo* %primitive_info, %struct._PrimitiveInfo** %primitive_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PrimitiveInfo** %primitive_info.addr, metadata !16187, metadata !DIExpression()), !dbg !16188
  call void @llvm.dbg.declare(metadata %struct._PointInfo* %start, metadata !16189, metadata !DIExpression()), !dbg !16190
  call void @llvm.dbg.declare(metadata %struct._PointInfo* %end, metadata !16191, metadata !DIExpression()), !dbg !16192
  call void @llvm.dbg.declare(metadata %struct._PointInfo* %arc, metadata !16193, metadata !DIExpression()), !dbg !16194
  store double %angle, double* %angle.addr, align 8
  call void @llvm.dbg.declare(metadata double* %angle.addr, metadata !16195, metadata !DIExpression()), !dbg !16196
  store i32 %large_arc, i32* %large_arc.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %large_arc.addr, metadata !16197, metadata !DIExpression()), !dbg !16198
  store i32 %sweep, i32* %sweep.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %sweep.addr, metadata !16199, metadata !DIExpression()), !dbg !16200
  call void @llvm.dbg.declare(metadata double* %alpha, metadata !16201, metadata !DIExpression()), !dbg !16202
  call void @llvm.dbg.declare(metadata double* %beta, metadata !16203, metadata !DIExpression()), !dbg !16204
  call void @llvm.dbg.declare(metadata double* %delta, metadata !16205, metadata !DIExpression()), !dbg !16206
  call void @llvm.dbg.declare(metadata double* %factor, metadata !16207, metadata !DIExpression()), !dbg !16208
  call void @llvm.dbg.declare(metadata double* %gamma, metadata !16209, metadata !DIExpression()), !dbg !16210
  call void @llvm.dbg.declare(metadata double* %theta, metadata !16211, metadata !DIExpression()), !dbg !16212
  call void @llvm.dbg.declare(metadata %struct._PointInfo* %center, metadata !16213, metadata !DIExpression()), !dbg !16214
  call void @llvm.dbg.declare(metadata [3 x %struct._PointInfo]* %points, metadata !16215, metadata !DIExpression()), !dbg !16219
  call void @llvm.dbg.declare(metadata %struct._PointInfo* %radii, metadata !16220, metadata !DIExpression()), !dbg !16221
  call void @llvm.dbg.declare(metadata double* %cosine, metadata !16222, metadata !DIExpression()), !dbg !16223
  call void @llvm.dbg.declare(metadata double* %sine, metadata !16224, metadata !DIExpression()), !dbg !16225
  call void @llvm.dbg.declare(metadata %struct._PrimitiveInfo** %p, metadata !16226, metadata !DIExpression()), !dbg !16227
  call void @llvm.dbg.declare(metadata i64* %i, metadata !16228, metadata !DIExpression()), !dbg !16229
  call void @llvm.dbg.declare(metadata i64* %arc_segments, metadata !16230, metadata !DIExpression()), !dbg !16231
  %x = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %start, i32 0, i32 0, !dbg !16232
  %9 = load double, double* %x, align 8, !dbg !16232
  %x1 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %end, i32 0, i32 0, !dbg !16234
  %10 = load double, double* %x1, align 8, !dbg !16234
  %cmp = fcmp oeq double %9, %10, !dbg !16235
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !16236

land.lhs.true:                                    ; preds = %entry
  %y = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %start, i32 0, i32 1, !dbg !16237
  %11 = load double, double* %y, align 8, !dbg !16237
  %y2 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %end, i32 0, i32 1, !dbg !16238
  %12 = load double, double* %y2, align 8, !dbg !16238
  %cmp3 = fcmp oeq double %11, %12, !dbg !16239
  br i1 %cmp3, label %if.then, label %if.end, !dbg !16240

if.then:                                          ; preds = %land.lhs.true
  %13 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !16241
  %14 = bitcast %struct._PointInfo* %end to { double, double }*, !dbg !16243
  %15 = getelementptr inbounds { double, double }, { double, double }* %14, i32 0, i32 0, !dbg !16243
  %16 = load double, double* %15, align 8, !dbg !16243
  %17 = getelementptr inbounds { double, double }, { double, double }* %14, i32 0, i32 1, !dbg !16243
  %18 = load double, double* %17, align 8, !dbg !16243
  call void @TracePoint(%struct._PrimitiveInfo* %13, double %16, double %18), !dbg !16243
  br label %for.end430, !dbg !16244

if.end:                                           ; preds = %land.lhs.true, %entry
  %x4 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arc, i32 0, i32 0, !dbg !16245
  %19 = load double, double* %x4, align 8, !dbg !16245
  %20 = call double @llvm.fabs.f64(double %19), !dbg !16246
  %x5 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %radii, i32 0, i32 0, !dbg !16247
  store double %20, double* %x5, align 8, !dbg !16248
  %y6 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arc, i32 0, i32 1, !dbg !16249
  %21 = load double, double* %y6, align 8, !dbg !16249
  %22 = call double @llvm.fabs.f64(double %21), !dbg !16250
  %y7 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %radii, i32 0, i32 1, !dbg !16251
  store double %22, double* %y7, align 8, !dbg !16252
  %x8 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %radii, i32 0, i32 0, !dbg !16253
  %23 = load double, double* %x8, align 8, !dbg !16253
  %cmp9 = fcmp oeq double %23, 0.000000e+00, !dbg !16255
  br i1 %cmp9, label %if.then12, label %lor.lhs.false, !dbg !16256

lor.lhs.false:                                    ; preds = %if.end
  %y10 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %radii, i32 0, i32 1, !dbg !16257
  %24 = load double, double* %y10, align 8, !dbg !16257
  %cmp11 = fcmp oeq double %24, 0.000000e+00, !dbg !16258
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !16259

if.then12:                                        ; preds = %lor.lhs.false, %if.end
  %25 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !16260
  %26 = bitcast %struct._PointInfo* %start to { double, double }*, !dbg !16262
  %27 = getelementptr inbounds { double, double }, { double, double }* %26, i32 0, i32 0, !dbg !16262
  %28 = load double, double* %27, align 8, !dbg !16262
  %29 = getelementptr inbounds { double, double }, { double, double }* %26, i32 0, i32 1, !dbg !16262
  %30 = load double, double* %29, align 8, !dbg !16262
  %31 = bitcast %struct._PointInfo* %end to { double, double }*, !dbg !16262
  %32 = getelementptr inbounds { double, double }, { double, double }* %31, i32 0, i32 0, !dbg !16262
  %33 = load double, double* %32, align 8, !dbg !16262
  %34 = getelementptr inbounds { double, double }, { double, double }* %31, i32 0, i32 1, !dbg !16262
  %35 = load double, double* %34, align 8, !dbg !16262
  call void @TraceLine(%struct._PrimitiveInfo* %25, double %28, double %30, double %33, double %35), !dbg !16262
  br label %for.end430, !dbg !16263

if.end13:                                         ; preds = %lor.lhs.false
  %36 = load double, double* %angle.addr, align 8, !dbg !16264
  %call = call double @fmod(double %36, double 3.600000e+02) #17, !dbg !16265
  %call14 = call double @DegreesToRadians(double %call), !dbg !16266
  %call15 = call double @cos(double %call14) #17, !dbg !16267
  store double %call15, double* %cosine, align 8, !dbg !16268
  %37 = load double, double* %angle.addr, align 8, !dbg !16269
  %call16 = call double @fmod(double %37, double 3.600000e+02) #17, !dbg !16270
  %call17 = call double @DegreesToRadians(double %call16), !dbg !16271
  %call18 = call double @sin(double %call17) #17, !dbg !16272
  store double %call18, double* %sine, align 8, !dbg !16273
  %38 = load double, double* %cosine, align 8, !dbg !16274
  %x19 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %end, i32 0, i32 0, !dbg !16275
  %39 = load double, double* %x19, align 8, !dbg !16275
  %x20 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %start, i32 0, i32 0, !dbg !16276
  %40 = load double, double* %x20, align 8, !dbg !16276
  %sub = fsub double %39, %40, !dbg !16277
  %mul = fmul double %38, %sub, !dbg !16278
  %div = fdiv double %mul, 2.000000e+00, !dbg !16279
  %41 = load double, double* %sine, align 8, !dbg !16280
  %y21 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %end, i32 0, i32 1, !dbg !16281
  %42 = load double, double* %y21, align 8, !dbg !16281
  %y22 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %start, i32 0, i32 1, !dbg !16282
  %43 = load double, double* %y22, align 8, !dbg !16282
  %sub23 = fsub double %42, %43, !dbg !16283
  %mul24 = fmul double %41, %sub23, !dbg !16284
  %div25 = fdiv double %mul24, 2.000000e+00, !dbg !16285
  %add = fadd double %div, %div25, !dbg !16286
  %x26 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %center, i32 0, i32 0, !dbg !16287
  store double %add, double* %x26, align 8, !dbg !16288
  %44 = load double, double* %cosine, align 8, !dbg !16289
  %y27 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %end, i32 0, i32 1, !dbg !16290
  %45 = load double, double* %y27, align 8, !dbg !16290
  %y28 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %start, i32 0, i32 1, !dbg !16291
  %46 = load double, double* %y28, align 8, !dbg !16291
  %sub29 = fsub double %45, %46, !dbg !16292
  %mul30 = fmul double %44, %sub29, !dbg !16293
  %div31 = fdiv double %mul30, 2.000000e+00, !dbg !16294
  %47 = load double, double* %sine, align 8, !dbg !16295
  %x32 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %end, i32 0, i32 0, !dbg !16296
  %48 = load double, double* %x32, align 8, !dbg !16296
  %x33 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %start, i32 0, i32 0, !dbg !16297
  %49 = load double, double* %x33, align 8, !dbg !16297
  %sub34 = fsub double %48, %49, !dbg !16298
  %mul35 = fmul double %47, %sub34, !dbg !16299
  %div36 = fdiv double %mul35, 2.000000e+00, !dbg !16300
  %sub37 = fsub double %div31, %div36, !dbg !16301
  %y38 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %center, i32 0, i32 1, !dbg !16302
  store double %sub37, double* %y38, align 8, !dbg !16303
  %x39 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %center, i32 0, i32 0, !dbg !16304
  %50 = load double, double* %x39, align 8, !dbg !16304
  %x40 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %center, i32 0, i32 0, !dbg !16305
  %51 = load double, double* %x40, align 8, !dbg !16305
  %mul41 = fmul double %50, %51, !dbg !16306
  %x42 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %radii, i32 0, i32 0, !dbg !16307
  %52 = load double, double* %x42, align 8, !dbg !16307
  %x43 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %radii, i32 0, i32 0, !dbg !16308
  %53 = load double, double* %x43, align 8, !dbg !16308
  %mul44 = fmul double %52, %53, !dbg !16309
  %div45 = fdiv double %mul41, %mul44, !dbg !16310
  %y46 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %center, i32 0, i32 1, !dbg !16311
  %54 = load double, double* %y46, align 8, !dbg !16311
  %y47 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %center, i32 0, i32 1, !dbg !16312
  %55 = load double, double* %y47, align 8, !dbg !16312
  %mul48 = fmul double %54, %55, !dbg !16313
  %y49 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %radii, i32 0, i32 1, !dbg !16314
  %56 = load double, double* %y49, align 8, !dbg !16314
  %y50 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %radii, i32 0, i32 1, !dbg !16315
  %57 = load double, double* %y50, align 8, !dbg !16315
  %mul51 = fmul double %56, %57, !dbg !16316
  %div52 = fdiv double %mul48, %mul51, !dbg !16317
  %add53 = fadd double %div45, %div52, !dbg !16318
  store double %add53, double* %delta, align 8, !dbg !16319
  %58 = load double, double* %delta, align 8, !dbg !16320
  %cmp54 = fcmp olt double %58, 1.000000e-15, !dbg !16322
  br i1 %cmp54, label %if.then55, label %if.end56, !dbg !16323

if.then55:                                        ; preds = %if.end13
  %59 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !16324
  %60 = bitcast %struct._PointInfo* %start to { double, double }*, !dbg !16326
  %61 = getelementptr inbounds { double, double }, { double, double }* %60, i32 0, i32 0, !dbg !16326
  %62 = load double, double* %61, align 8, !dbg !16326
  %63 = getelementptr inbounds { double, double }, { double, double }* %60, i32 0, i32 1, !dbg !16326
  %64 = load double, double* %63, align 8, !dbg !16326
  %65 = bitcast %struct._PointInfo* %end to { double, double }*, !dbg !16326
  %66 = getelementptr inbounds { double, double }, { double, double }* %65, i32 0, i32 0, !dbg !16326
  %67 = load double, double* %66, align 8, !dbg !16326
  %68 = getelementptr inbounds { double, double }, { double, double }* %65, i32 0, i32 1, !dbg !16326
  %69 = load double, double* %68, align 8, !dbg !16326
  call void @TraceLine(%struct._PrimitiveInfo* %59, double %62, double %64, double %67, double %69), !dbg !16326
  br label %for.end430, !dbg !16327

if.end56:                                         ; preds = %if.end13
  %70 = load double, double* %delta, align 8, !dbg !16328
  %cmp57 = fcmp ogt double %70, 1.000000e+00, !dbg !16330
  br i1 %cmp57, label %if.then58, label %if.end65, !dbg !16331

if.then58:                                        ; preds = %if.end56
  %71 = load double, double* %delta, align 8, !dbg !16332
  %call59 = call double @sqrt(double %71) #17, !dbg !16334
  %x60 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %radii, i32 0, i32 0, !dbg !16335
  %72 = load double, double* %x60, align 8, !dbg !16336
  %mul61 = fmul double %72, %call59, !dbg !16336
  store double %mul61, double* %x60, align 8, !dbg !16336
  %73 = load double, double* %delta, align 8, !dbg !16337
  %call62 = call double @sqrt(double %73) #17, !dbg !16338
  %y63 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %radii, i32 0, i32 1, !dbg !16339
  %74 = load double, double* %y63, align 8, !dbg !16340
  %mul64 = fmul double %74, %call62, !dbg !16340
  store double %mul64, double* %y63, align 8, !dbg !16340
  br label %if.end65, !dbg !16341

if.end65:                                         ; preds = %if.then58, %if.end56
  %75 = load double, double* %cosine, align 8, !dbg !16342
  %x66 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %start, i32 0, i32 0, !dbg !16343
  %76 = load double, double* %x66, align 8, !dbg !16343
  %mul67 = fmul double %75, %76, !dbg !16344
  %x68 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %radii, i32 0, i32 0, !dbg !16345
  %77 = load double, double* %x68, align 8, !dbg !16345
  %div69 = fdiv double %mul67, %77, !dbg !16346
  %78 = load double, double* %sine, align 8, !dbg !16347
  %y70 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %start, i32 0, i32 1, !dbg !16348
  %79 = load double, double* %y70, align 8, !dbg !16348
  %mul71 = fmul double %78, %79, !dbg !16349
  %x72 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %radii, i32 0, i32 0, !dbg !16350
  %80 = load double, double* %x72, align 8, !dbg !16350
  %div73 = fdiv double %mul71, %80, !dbg !16351
  %add74 = fadd double %div69, %div73, !dbg !16352
  %arrayidx = getelementptr inbounds [3 x %struct._PointInfo], [3 x %struct._PointInfo]* %points, i64 0, i64 0, !dbg !16353
  %x75 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx, i32 0, i32 0, !dbg !16354
  store double %add74, double* %x75, align 16, !dbg !16355
  %81 = load double, double* %cosine, align 8, !dbg !16356
  %y76 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %start, i32 0, i32 1, !dbg !16357
  %82 = load double, double* %y76, align 8, !dbg !16357
  %mul77 = fmul double %81, %82, !dbg !16358
  %y78 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %radii, i32 0, i32 1, !dbg !16359
  %83 = load double, double* %y78, align 8, !dbg !16359
  %div79 = fdiv double %mul77, %83, !dbg !16360
  %84 = load double, double* %sine, align 8, !dbg !16361
  %x80 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %start, i32 0, i32 0, !dbg !16362
  %85 = load double, double* %x80, align 8, !dbg !16362
  %mul81 = fmul double %84, %85, !dbg !16363
  %y82 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %radii, i32 0, i32 1, !dbg !16364
  %86 = load double, double* %y82, align 8, !dbg !16364
  %div83 = fdiv double %mul81, %86, !dbg !16365
  %sub84 = fsub double %div79, %div83, !dbg !16366
  %arrayidx85 = getelementptr inbounds [3 x %struct._PointInfo], [3 x %struct._PointInfo]* %points, i64 0, i64 0, !dbg !16367
  %y86 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx85, i32 0, i32 1, !dbg !16368
  store double %sub84, double* %y86, align 8, !dbg !16369
  %87 = load double, double* %cosine, align 8, !dbg !16370
  %x87 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %end, i32 0, i32 0, !dbg !16371
  %88 = load double, double* %x87, align 8, !dbg !16371
  %mul88 = fmul double %87, %88, !dbg !16372
  %x89 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %radii, i32 0, i32 0, !dbg !16373
  %89 = load double, double* %x89, align 8, !dbg !16373
  %div90 = fdiv double %mul88, %89, !dbg !16374
  %90 = load double, double* %sine, align 8, !dbg !16375
  %y91 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %end, i32 0, i32 1, !dbg !16376
  %91 = load double, double* %y91, align 8, !dbg !16376
  %mul92 = fmul double %90, %91, !dbg !16377
  %x93 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %radii, i32 0, i32 0, !dbg !16378
  %92 = load double, double* %x93, align 8, !dbg !16378
  %div94 = fdiv double %mul92, %92, !dbg !16379
  %add95 = fadd double %div90, %div94, !dbg !16380
  %arrayidx96 = getelementptr inbounds [3 x %struct._PointInfo], [3 x %struct._PointInfo]* %points, i64 0, i64 1, !dbg !16381
  %x97 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx96, i32 0, i32 0, !dbg !16382
  store double %add95, double* %x97, align 16, !dbg !16383
  %93 = load double, double* %cosine, align 8, !dbg !16384
  %y98 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %end, i32 0, i32 1, !dbg !16385
  %94 = load double, double* %y98, align 8, !dbg !16385
  %mul99 = fmul double %93, %94, !dbg !16386
  %y100 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %radii, i32 0, i32 1, !dbg !16387
  %95 = load double, double* %y100, align 8, !dbg !16387
  %div101 = fdiv double %mul99, %95, !dbg !16388
  %96 = load double, double* %sine, align 8, !dbg !16389
  %x102 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %end, i32 0, i32 0, !dbg !16390
  %97 = load double, double* %x102, align 8, !dbg !16390
  %mul103 = fmul double %96, %97, !dbg !16391
  %y104 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %radii, i32 0, i32 1, !dbg !16392
  %98 = load double, double* %y104, align 8, !dbg !16392
  %div105 = fdiv double %mul103, %98, !dbg !16393
  %sub106 = fsub double %div101, %div105, !dbg !16394
  %arrayidx107 = getelementptr inbounds [3 x %struct._PointInfo], [3 x %struct._PointInfo]* %points, i64 0, i64 1, !dbg !16395
  %y108 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx107, i32 0, i32 1, !dbg !16396
  store double %sub106, double* %y108, align 8, !dbg !16397
  %arrayidx109 = getelementptr inbounds [3 x %struct._PointInfo], [3 x %struct._PointInfo]* %points, i64 0, i64 1, !dbg !16398
  %x110 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx109, i32 0, i32 0, !dbg !16399
  %99 = load double, double* %x110, align 16, !dbg !16399
  %arrayidx111 = getelementptr inbounds [3 x %struct._PointInfo], [3 x %struct._PointInfo]* %points, i64 0, i64 0, !dbg !16400
  %x112 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx111, i32 0, i32 0, !dbg !16401
  %100 = load double, double* %x112, align 16, !dbg !16401
  %sub113 = fsub double %99, %100, !dbg !16402
  store double %sub113, double* %alpha, align 8, !dbg !16403
  %arrayidx114 = getelementptr inbounds [3 x %struct._PointInfo], [3 x %struct._PointInfo]* %points, i64 0, i64 1, !dbg !16404
  %y115 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx114, i32 0, i32 1, !dbg !16405
  %101 = load double, double* %y115, align 8, !dbg !16405
  %arrayidx116 = getelementptr inbounds [3 x %struct._PointInfo], [3 x %struct._PointInfo]* %points, i64 0, i64 0, !dbg !16406
  %y117 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx116, i32 0, i32 1, !dbg !16407
  %102 = load double, double* %y117, align 8, !dbg !16407
  %sub118 = fsub double %101, %102, !dbg !16408
  store double %sub118, double* %beta, align 8, !dbg !16409
  %103 = load double, double* %alpha, align 8, !dbg !16410
  %104 = load double, double* %alpha, align 8, !dbg !16411
  %mul119 = fmul double %103, %104, !dbg !16412
  %105 = load double, double* %beta, align 8, !dbg !16413
  %106 = load double, double* %beta, align 8, !dbg !16414
  %mul120 = fmul double %105, %106, !dbg !16415
  %add121 = fadd double %mul119, %mul120, !dbg !16416
  %call122 = call double @PerceptibleReciprocal(double %add121), !dbg !16417
  %sub123 = fsub double %call122, 2.500000e-01, !dbg !16418
  store double %sub123, double* %factor, align 8, !dbg !16419
  %107 = load double, double* %factor, align 8, !dbg !16420
  %cmp124 = fcmp ole double %107, 0.000000e+00, !dbg !16422
  br i1 %cmp124, label %if.then125, label %if.else, !dbg !16423

if.then125:                                       ; preds = %if.end65
  store double 0.000000e+00, double* %factor, align 8, !dbg !16424
  br label %if.end130, !dbg !16425

if.else:                                          ; preds = %if.end65
  %108 = load double, double* %factor, align 8, !dbg !16426
  %call126 = call double @sqrt(double %108) #17, !dbg !16428
  store double %call126, double* %factor, align 8, !dbg !16429
  %109 = load i32, i32* %sweep.addr, align 4, !dbg !16430
  %110 = load i32, i32* %large_arc.addr, align 4, !dbg !16432
  %cmp127 = icmp eq i32 %109, %110, !dbg !16433
  br i1 %cmp127, label %if.then128, label %if.end129, !dbg !16434

if.then128:                                       ; preds = %if.else
  %111 = load double, double* %factor, align 8, !dbg !16435
  %fneg = fneg double %111, !dbg !16436
  store double %fneg, double* %factor, align 8, !dbg !16437
  br label %if.end129, !dbg !16438

if.end129:                                        ; preds = %if.then128, %if.else
  br label %if.end130

if.end130:                                        ; preds = %if.end129, %if.then125
  %arrayidx131 = getelementptr inbounds [3 x %struct._PointInfo], [3 x %struct._PointInfo]* %points, i64 0, i64 0, !dbg !16439
  %x132 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx131, i32 0, i32 0, !dbg !16440
  %112 = load double, double* %x132, align 16, !dbg !16440
  %arrayidx133 = getelementptr inbounds [3 x %struct._PointInfo], [3 x %struct._PointInfo]* %points, i64 0, i64 1, !dbg !16441
  %x134 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx133, i32 0, i32 0, !dbg !16442
  %113 = load double, double* %x134, align 16, !dbg !16442
  %add135 = fadd double %112, %113, !dbg !16443
  %div136 = fdiv double %add135, 2.000000e+00, !dbg !16444
  %114 = load double, double* %factor, align 8, !dbg !16445
  %115 = load double, double* %beta, align 8, !dbg !16446
  %mul137 = fmul double %114, %115, !dbg !16447
  %sub138 = fsub double %div136, %mul137, !dbg !16448
  %x139 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %center, i32 0, i32 0, !dbg !16449
  store double %sub138, double* %x139, align 8, !dbg !16450
  %arrayidx140 = getelementptr inbounds [3 x %struct._PointInfo], [3 x %struct._PointInfo]* %points, i64 0, i64 0, !dbg !16451
  %y141 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx140, i32 0, i32 1, !dbg !16452
  %116 = load double, double* %y141, align 8, !dbg !16452
  %arrayidx142 = getelementptr inbounds [3 x %struct._PointInfo], [3 x %struct._PointInfo]* %points, i64 0, i64 1, !dbg !16453
  %y143 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx142, i32 0, i32 1, !dbg !16454
  %117 = load double, double* %y143, align 8, !dbg !16454
  %add144 = fadd double %116, %117, !dbg !16455
  %div145 = fdiv double %add144, 2.000000e+00, !dbg !16456
  %118 = load double, double* %factor, align 8, !dbg !16457
  %119 = load double, double* %alpha, align 8, !dbg !16458
  %mul146 = fmul double %118, %119, !dbg !16459
  %add147 = fadd double %div145, %mul146, !dbg !16460
  %y148 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %center, i32 0, i32 1, !dbg !16461
  store double %add147, double* %y148, align 8, !dbg !16462
  %arrayidx149 = getelementptr inbounds [3 x %struct._PointInfo], [3 x %struct._PointInfo]* %points, i64 0, i64 0, !dbg !16463
  %y150 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx149, i32 0, i32 1, !dbg !16464
  %120 = load double, double* %y150, align 8, !dbg !16464
  %y151 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %center, i32 0, i32 1, !dbg !16465
  %121 = load double, double* %y151, align 8, !dbg !16465
  %sub152 = fsub double %120, %121, !dbg !16466
  %arrayidx153 = getelementptr inbounds [3 x %struct._PointInfo], [3 x %struct._PointInfo]* %points, i64 0, i64 0, !dbg !16467
  %x154 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx153, i32 0, i32 0, !dbg !16468
  %122 = load double, double* %x154, align 16, !dbg !16468
  %x155 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %center, i32 0, i32 0, !dbg !16469
  %123 = load double, double* %x155, align 8, !dbg !16469
  %sub156 = fsub double %122, %123, !dbg !16470
  %call157 = call double @atan2(double %sub152, double %sub156) #17, !dbg !16471
  store double %call157, double* %alpha, align 8, !dbg !16472
  %arrayidx158 = getelementptr inbounds [3 x %struct._PointInfo], [3 x %struct._PointInfo]* %points, i64 0, i64 1, !dbg !16473
  %y159 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx158, i32 0, i32 1, !dbg !16474
  %124 = load double, double* %y159, align 8, !dbg !16474
  %y160 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %center, i32 0, i32 1, !dbg !16475
  %125 = load double, double* %y160, align 8, !dbg !16475
  %sub161 = fsub double %124, %125, !dbg !16476
  %arrayidx162 = getelementptr inbounds [3 x %struct._PointInfo], [3 x %struct._PointInfo]* %points, i64 0, i64 1, !dbg !16477
  %x163 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx162, i32 0, i32 0, !dbg !16478
  %126 = load double, double* %x163, align 16, !dbg !16478
  %x164 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %center, i32 0, i32 0, !dbg !16479
  %127 = load double, double* %x164, align 8, !dbg !16479
  %sub165 = fsub double %126, %127, !dbg !16480
  %call166 = call double @atan2(double %sub161, double %sub165) #17, !dbg !16481
  %128 = load double, double* %alpha, align 8, !dbg !16482
  %sub167 = fsub double %call166, %128, !dbg !16483
  store double %sub167, double* %theta, align 8, !dbg !16484
  %129 = load double, double* %theta, align 8, !dbg !16485
  %cmp168 = fcmp olt double %129, 0.000000e+00, !dbg !16487
  br i1 %cmp168, label %land.lhs.true169, label %if.else173, !dbg !16488

land.lhs.true169:                                 ; preds = %if.end130
  %130 = load i32, i32* %sweep.addr, align 4, !dbg !16489
  %cmp170 = icmp ne i32 %130, 0, !dbg !16490
  br i1 %cmp170, label %if.then171, label %if.else173, !dbg !16491

if.then171:                                       ; preds = %land.lhs.true169
  %131 = load double, double* %theta, align 8, !dbg !16492
  %add172 = fadd double %131, 0x401921FB54442D18, !dbg !16492
  store double %add172, double* %theta, align 8, !dbg !16492
  br label %if.end180, !dbg !16493

if.else173:                                       ; preds = %land.lhs.true169, %if.end130
  %132 = load double, double* %theta, align 8, !dbg !16494
  %cmp174 = fcmp ogt double %132, 0.000000e+00, !dbg !16496
  br i1 %cmp174, label %land.lhs.true175, label %if.end179, !dbg !16497

land.lhs.true175:                                 ; preds = %if.else173
  %133 = load i32, i32* %sweep.addr, align 4, !dbg !16498
  %cmp176 = icmp eq i32 %133, 0, !dbg !16499
  br i1 %cmp176, label %if.then177, label %if.end179, !dbg !16500

if.then177:                                       ; preds = %land.lhs.true175
  %134 = load double, double* %theta, align 8, !dbg !16501
  %sub178 = fsub double %134, 0x401921FB54442D18, !dbg !16501
  store double %sub178, double* %theta, align 8, !dbg !16501
  br label %if.end179, !dbg !16502

if.end179:                                        ; preds = %if.then177, %land.lhs.true175, %if.else173
  br label %if.end180

if.end180:                                        ; preds = %if.end179, %if.then171
  %135 = load double, double* %theta, align 8, !dbg !16503
  %div181 = fdiv double %135, 0x3FF921FB54442D1D, !dbg !16504
  %136 = call double @llvm.fabs.f64(double %div181), !dbg !16505
  %137 = call double @llvm.ceil.f64(double %136), !dbg !16506
  %conv = fptoui double %137 to i64, !dbg !16507
  store i64 %conv, i64* %arc_segments, align 8, !dbg !16508
  %138 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !16509
  store %struct._PrimitiveInfo* %138, %struct._PrimitiveInfo** %p, align 8, !dbg !16510
  store i64 0, i64* %i, align 8, !dbg !16511
  br label %for.cond, !dbg !16513

for.cond:                                         ; preds = %for.inc, %if.end180
  %139 = load i64, i64* %i, align 8, !dbg !16514
  %140 = load i64, i64* %arc_segments, align 8, !dbg !16516
  %cmp182 = icmp slt i64 %139, %140, !dbg !16517
  br i1 %cmp182, label %for.body, label %for.end, !dbg !16518

for.body:                                         ; preds = %for.cond
  %141 = load double, double* %alpha, align 8, !dbg !16519
  %142 = load i64, i64* %i, align 8, !dbg !16521
  %add184 = add nsw i64 %142, 1, !dbg !16522
  %conv185 = sitofp i64 %add184 to double, !dbg !16523
  %143 = load double, double* %theta, align 8, !dbg !16524
  %mul186 = fmul double %conv185, %143, !dbg !16525
  %144 = load i64, i64* %arc_segments, align 8, !dbg !16526
  %conv187 = uitofp i64 %144 to double, !dbg !16526
  %div188 = fdiv double %mul186, %conv187, !dbg !16527
  %add189 = fadd double %141, %div188, !dbg !16528
  %145 = load double, double* %alpha, align 8, !dbg !16529
  %146 = load i64, i64* %i, align 8, !dbg !16530
  %conv190 = sitofp i64 %146 to double, !dbg !16530
  %147 = load double, double* %theta, align 8, !dbg !16531
  %mul191 = fmul double %conv190, %147, !dbg !16532
  %148 = load i64, i64* %arc_segments, align 8, !dbg !16533
  %conv192 = uitofp i64 %148 to double, !dbg !16533
  %div193 = fdiv double %mul191, %conv192, !dbg !16534
  %add194 = fadd double %145, %div193, !dbg !16535
  %sub195 = fsub double %add189, %add194, !dbg !16536
  %mul196 = fmul double 5.000000e-01, %sub195, !dbg !16537
  store double %mul196, double* %beta, align 8, !dbg !16538
  %149 = load double, double* %beta, align 8, !dbg !16539
  %mul197 = fmul double 5.000000e-01, %149, !dbg !16540
  %call198 = call double @DegreesToRadians(double 3.600000e+02), !dbg !16541
  %call199 = call double @fmod(double %mul197, double %call198) #17, !dbg !16542
  %call200 = call double @sin(double %call199) #17, !dbg !16543
  %mul201 = fmul double 0x4005555555555555, %call200, !dbg !16544
  %150 = load double, double* %beta, align 8, !dbg !16545
  %mul202 = fmul double 5.000000e-01, %150, !dbg !16546
  %call203 = call double @DegreesToRadians(double 3.600000e+02), !dbg !16547
  %call204 = call double @fmod(double %mul202, double %call203) #17, !dbg !16548
  %call205 = call double @sin(double %call204) #17, !dbg !16549
  %mul206 = fmul double %mul201, %call205, !dbg !16550
  %151 = load double, double* %beta, align 8, !dbg !16551
  %call207 = call double @DegreesToRadians(double 3.600000e+02), !dbg !16552
  %call208 = call double @fmod(double %151, double %call207) #17, !dbg !16553
  %call209 = call double @sin(double %call208) #17, !dbg !16554
  %div210 = fdiv double %mul206, %call209, !dbg !16555
  store double %div210, double* %gamma, align 8, !dbg !16556
  %x211 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %center, i32 0, i32 0, !dbg !16557
  %152 = load double, double* %x211, align 8, !dbg !16557
  %153 = load double, double* %alpha, align 8, !dbg !16558
  %154 = load i64, i64* %i, align 8, !dbg !16559
  %conv212 = sitofp i64 %154 to double, !dbg !16560
  %155 = load double, double* %theta, align 8, !dbg !16561
  %mul213 = fmul double %conv212, %155, !dbg !16562
  %156 = load i64, i64* %arc_segments, align 8, !dbg !16563
  %conv214 = uitofp i64 %156 to double, !dbg !16563
  %div215 = fdiv double %mul213, %conv214, !dbg !16564
  %add216 = fadd double %153, %div215, !dbg !16565
  %call217 = call double @DegreesToRadians(double 3.600000e+02), !dbg !16566
  %call218 = call double @fmod(double %add216, double %call217) #17, !dbg !16567
  %call219 = call double @cos(double %call218) #17, !dbg !16568
  %add220 = fadd double %152, %call219, !dbg !16569
  %157 = load double, double* %gamma, align 8, !dbg !16570
  %158 = load double, double* %alpha, align 8, !dbg !16571
  %159 = load i64, i64* %i, align 8, !dbg !16572
  %conv221 = sitofp i64 %159 to double, !dbg !16573
  %160 = load double, double* %theta, align 8, !dbg !16574
  %mul222 = fmul double %conv221, %160, !dbg !16575
  %161 = load i64, i64* %arc_segments, align 8, !dbg !16576
  %conv223 = uitofp i64 %161 to double, !dbg !16576
  %div224 = fdiv double %mul222, %conv223, !dbg !16577
  %add225 = fadd double %158, %div224, !dbg !16578
  %call226 = call double @DegreesToRadians(double 3.600000e+02), !dbg !16579
  %call227 = call double @fmod(double %add225, double %call226) #17, !dbg !16580
  %call228 = call double @sin(double %call227) #17, !dbg !16581
  %mul229 = fmul double %157, %call228, !dbg !16582
  %sub230 = fsub double %add220, %mul229, !dbg !16583
  %arrayidx231 = getelementptr inbounds [3 x %struct._PointInfo], [3 x %struct._PointInfo]* %points, i64 0, i64 0, !dbg !16584
  %x232 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx231, i32 0, i32 0, !dbg !16585
  store double %sub230, double* %x232, align 16, !dbg !16586
  %y233 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %center, i32 0, i32 1, !dbg !16587
  %162 = load double, double* %y233, align 8, !dbg !16587
  %163 = load double, double* %alpha, align 8, !dbg !16588
  %164 = load i64, i64* %i, align 8, !dbg !16589
  %conv234 = sitofp i64 %164 to double, !dbg !16590
  %165 = load double, double* %theta, align 8, !dbg !16591
  %mul235 = fmul double %conv234, %165, !dbg !16592
  %166 = load i64, i64* %arc_segments, align 8, !dbg !16593
  %conv236 = uitofp i64 %166 to double, !dbg !16593
  %div237 = fdiv double %mul235, %conv236, !dbg !16594
  %add238 = fadd double %163, %div237, !dbg !16595
  %call239 = call double @DegreesToRadians(double 3.600000e+02), !dbg !16596
  %call240 = call double @fmod(double %add238, double %call239) #17, !dbg !16597
  %call241 = call double @sin(double %call240) #17, !dbg !16598
  %add242 = fadd double %162, %call241, !dbg !16599
  %167 = load double, double* %gamma, align 8, !dbg !16600
  %168 = load double, double* %alpha, align 8, !dbg !16601
  %169 = load i64, i64* %i, align 8, !dbg !16602
  %conv243 = sitofp i64 %169 to double, !dbg !16603
  %170 = load double, double* %theta, align 8, !dbg !16604
  %mul244 = fmul double %conv243, %170, !dbg !16605
  %171 = load i64, i64* %arc_segments, align 8, !dbg !16606
  %conv245 = uitofp i64 %171 to double, !dbg !16606
  %div246 = fdiv double %mul244, %conv245, !dbg !16607
  %add247 = fadd double %168, %div246, !dbg !16608
  %call248 = call double @DegreesToRadians(double 3.600000e+02), !dbg !16609
  %call249 = call double @fmod(double %add247, double %call248) #17, !dbg !16610
  %call250 = call double @cos(double %call249) #17, !dbg !16611
  %mul251 = fmul double %167, %call250, !dbg !16612
  %add252 = fadd double %add242, %mul251, !dbg !16613
  %arrayidx253 = getelementptr inbounds [3 x %struct._PointInfo], [3 x %struct._PointInfo]* %points, i64 0, i64 0, !dbg !16614
  %y254 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx253, i32 0, i32 1, !dbg !16615
  store double %add252, double* %y254, align 8, !dbg !16616
  %x255 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %center, i32 0, i32 0, !dbg !16617
  %172 = load double, double* %x255, align 8, !dbg !16617
  %173 = load double, double* %alpha, align 8, !dbg !16618
  %174 = load i64, i64* %i, align 8, !dbg !16619
  %add256 = add nsw i64 %174, 1, !dbg !16620
  %conv257 = sitofp i64 %add256 to double, !dbg !16621
  %175 = load double, double* %theta, align 8, !dbg !16622
  %mul258 = fmul double %conv257, %175, !dbg !16623
  %176 = load i64, i64* %arc_segments, align 8, !dbg !16624
  %conv259 = uitofp i64 %176 to double, !dbg !16624
  %div260 = fdiv double %mul258, %conv259, !dbg !16625
  %add261 = fadd double %173, %div260, !dbg !16626
  %call262 = call double @DegreesToRadians(double 3.600000e+02), !dbg !16627
  %call263 = call double @fmod(double %add261, double %call262) #17, !dbg !16628
  %call264 = call double @cos(double %call263) #17, !dbg !16629
  %add265 = fadd double %172, %call264, !dbg !16630
  %arrayidx266 = getelementptr inbounds [3 x %struct._PointInfo], [3 x %struct._PointInfo]* %points, i64 0, i64 2, !dbg !16631
  %x267 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx266, i32 0, i32 0, !dbg !16632
  store double %add265, double* %x267, align 16, !dbg !16633
  %y268 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %center, i32 0, i32 1, !dbg !16634
  %177 = load double, double* %y268, align 8, !dbg !16634
  %178 = load double, double* %alpha, align 8, !dbg !16635
  %179 = load i64, i64* %i, align 8, !dbg !16636
  %add269 = add nsw i64 %179, 1, !dbg !16637
  %conv270 = sitofp i64 %add269 to double, !dbg !16638
  %180 = load double, double* %theta, align 8, !dbg !16639
  %mul271 = fmul double %conv270, %180, !dbg !16640
  %181 = load i64, i64* %arc_segments, align 8, !dbg !16641
  %conv272 = uitofp i64 %181 to double, !dbg !16641
  %div273 = fdiv double %mul271, %conv272, !dbg !16642
  %add274 = fadd double %178, %div273, !dbg !16643
  %call275 = call double @DegreesToRadians(double 3.600000e+02), !dbg !16644
  %call276 = call double @fmod(double %add274, double %call275) #17, !dbg !16645
  %call277 = call double @sin(double %call276) #17, !dbg !16646
  %add278 = fadd double %177, %call277, !dbg !16647
  %arrayidx279 = getelementptr inbounds [3 x %struct._PointInfo], [3 x %struct._PointInfo]* %points, i64 0, i64 2, !dbg !16648
  %y280 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx279, i32 0, i32 1, !dbg !16649
  store double %add278, double* %y280, align 8, !dbg !16650
  %arrayidx281 = getelementptr inbounds [3 x %struct._PointInfo], [3 x %struct._PointInfo]* %points, i64 0, i64 2, !dbg !16651
  %x282 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx281, i32 0, i32 0, !dbg !16652
  %182 = load double, double* %x282, align 16, !dbg !16652
  %183 = load double, double* %gamma, align 8, !dbg !16653
  %184 = load double, double* %alpha, align 8, !dbg !16654
  %185 = load i64, i64* %i, align 8, !dbg !16655
  %add283 = add nsw i64 %185, 1, !dbg !16656
  %conv284 = sitofp i64 %add283 to double, !dbg !16657
  %186 = load double, double* %theta, align 8, !dbg !16658
  %mul285 = fmul double %conv284, %186, !dbg !16659
  %187 = load i64, i64* %arc_segments, align 8, !dbg !16660
  %conv286 = uitofp i64 %187 to double, !dbg !16660
  %div287 = fdiv double %mul285, %conv286, !dbg !16661
  %add288 = fadd double %184, %div287, !dbg !16662
  %call289 = call double @DegreesToRadians(double 3.600000e+02), !dbg !16663
  %call290 = call double @fmod(double %add288, double %call289) #17, !dbg !16664
  %call291 = call double @sin(double %call290) #17, !dbg !16665
  %mul292 = fmul double %183, %call291, !dbg !16666
  %add293 = fadd double %182, %mul292, !dbg !16667
  %arrayidx294 = getelementptr inbounds [3 x %struct._PointInfo], [3 x %struct._PointInfo]* %points, i64 0, i64 1, !dbg !16668
  %x295 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx294, i32 0, i32 0, !dbg !16669
  store double %add293, double* %x295, align 16, !dbg !16670
  %arrayidx296 = getelementptr inbounds [3 x %struct._PointInfo], [3 x %struct._PointInfo]* %points, i64 0, i64 2, !dbg !16671
  %y297 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx296, i32 0, i32 1, !dbg !16672
  %188 = load double, double* %y297, align 8, !dbg !16672
  %189 = load double, double* %gamma, align 8, !dbg !16673
  %190 = load double, double* %alpha, align 8, !dbg !16674
  %191 = load i64, i64* %i, align 8, !dbg !16675
  %add298 = add nsw i64 %191, 1, !dbg !16676
  %conv299 = sitofp i64 %add298 to double, !dbg !16677
  %192 = load double, double* %theta, align 8, !dbg !16678
  %mul300 = fmul double %conv299, %192, !dbg !16679
  %193 = load i64, i64* %arc_segments, align 8, !dbg !16680
  %conv301 = uitofp i64 %193 to double, !dbg !16680
  %div302 = fdiv double %mul300, %conv301, !dbg !16681
  %add303 = fadd double %190, %div302, !dbg !16682
  %call304 = call double @DegreesToRadians(double 3.600000e+02), !dbg !16683
  %call305 = call double @fmod(double %add303, double %call304) #17, !dbg !16684
  %call306 = call double @cos(double %call305) #17, !dbg !16685
  %mul307 = fmul double %189, %call306, !dbg !16686
  %sub308 = fsub double %188, %mul307, !dbg !16687
  %arrayidx309 = getelementptr inbounds [3 x %struct._PointInfo], [3 x %struct._PointInfo]* %points, i64 0, i64 1, !dbg !16688
  %y310 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx309, i32 0, i32 1, !dbg !16689
  store double %sub308, double* %y310, align 8, !dbg !16690
  %194 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %p, align 8, !dbg !16691
  %195 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !16692
  %cmp311 = icmp eq %struct._PrimitiveInfo* %194, %195, !dbg !16693
  br i1 %cmp311, label %cond.true, label %cond.false, !dbg !16694

cond.true:                                        ; preds = %for.body
  %x313 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %start, i32 0, i32 0, !dbg !16695
  %196 = load double, double* %x313, align 8, !dbg !16695
  br label %cond.end, !dbg !16694

cond.false:                                       ; preds = %for.body
  %197 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %p, align 8, !dbg !16696
  %add.ptr = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %197, i64 -1, !dbg !16697
  %point = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %add.ptr, i32 0, i32 0, !dbg !16698
  %x314 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point, i32 0, i32 0, !dbg !16699
  %198 = load double, double* %x314, align 8, !dbg !16699
  br label %cond.end, !dbg !16694

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi double [ %196, %cond.true ], [ %198, %cond.false ], !dbg !16694
  %199 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %p, align 8, !dbg !16700
  %point315 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %199, i32 0, i32 0, !dbg !16701
  %x316 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point315, i32 0, i32 0, !dbg !16702
  store double %cond, double* %x316, align 8, !dbg !16703
  %200 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %p, align 8, !dbg !16704
  %201 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !16705
  %cmp317 = icmp eq %struct._PrimitiveInfo* %200, %201, !dbg !16706
  br i1 %cmp317, label %cond.true319, label %cond.false321, !dbg !16707

cond.true319:                                     ; preds = %cond.end
  %y320 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %start, i32 0, i32 1, !dbg !16708
  %202 = load double, double* %y320, align 8, !dbg !16708
  br label %cond.end325, !dbg !16707

cond.false321:                                    ; preds = %cond.end
  %203 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %p, align 8, !dbg !16709
  %add.ptr322 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %203, i64 -1, !dbg !16710
  %point323 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %add.ptr322, i32 0, i32 0, !dbg !16711
  %y324 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point323, i32 0, i32 1, !dbg !16712
  %204 = load double, double* %y324, align 8, !dbg !16712
  br label %cond.end325, !dbg !16707

cond.end325:                                      ; preds = %cond.false321, %cond.true319
  %cond326 = phi double [ %202, %cond.true319 ], [ %204, %cond.false321 ], !dbg !16707
  %205 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %p, align 8, !dbg !16713
  %point327 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %205, i32 0, i32 0, !dbg !16714
  %y328 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point327, i32 0, i32 1, !dbg !16715
  store double %cond326, double* %y328, align 8, !dbg !16716
  %206 = load double, double* %cosine, align 8, !dbg !16717
  %x329 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %radii, i32 0, i32 0, !dbg !16718
  %207 = load double, double* %x329, align 8, !dbg !16718
  %mul330 = fmul double %206, %207, !dbg !16719
  %arrayidx331 = getelementptr inbounds [3 x %struct._PointInfo], [3 x %struct._PointInfo]* %points, i64 0, i64 0, !dbg !16720
  %x332 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx331, i32 0, i32 0, !dbg !16721
  %208 = load double, double* %x332, align 16, !dbg !16721
  %mul333 = fmul double %mul330, %208, !dbg !16722
  %209 = load double, double* %sine, align 8, !dbg !16723
  %y334 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %radii, i32 0, i32 1, !dbg !16724
  %210 = load double, double* %y334, align 8, !dbg !16724
  %mul335 = fmul double %209, %210, !dbg !16725
  %arrayidx336 = getelementptr inbounds [3 x %struct._PointInfo], [3 x %struct._PointInfo]* %points, i64 0, i64 0, !dbg !16726
  %y337 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx336, i32 0, i32 1, !dbg !16727
  %211 = load double, double* %y337, align 8, !dbg !16727
  %mul338 = fmul double %mul335, %211, !dbg !16728
  %sub339 = fsub double %mul333, %mul338, !dbg !16729
  %212 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %p, align 8, !dbg !16730
  %add.ptr340 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %212, i64 1, !dbg !16731
  %point341 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %add.ptr340, i32 0, i32 0, !dbg !16732
  %x342 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point341, i32 0, i32 0, !dbg !16733
  store double %sub339, double* %x342, align 8, !dbg !16734
  %213 = load double, double* %sine, align 8, !dbg !16735
  %x343 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %radii, i32 0, i32 0, !dbg !16736
  %214 = load double, double* %x343, align 8, !dbg !16736
  %mul344 = fmul double %213, %214, !dbg !16737
  %arrayidx345 = getelementptr inbounds [3 x %struct._PointInfo], [3 x %struct._PointInfo]* %points, i64 0, i64 0, !dbg !16738
  %x346 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx345, i32 0, i32 0, !dbg !16739
  %215 = load double, double* %x346, align 16, !dbg !16739
  %mul347 = fmul double %mul344, %215, !dbg !16740
  %216 = load double, double* %cosine, align 8, !dbg !16741
  %y348 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %radii, i32 0, i32 1, !dbg !16742
  %217 = load double, double* %y348, align 8, !dbg !16742
  %mul349 = fmul double %216, %217, !dbg !16743
  %arrayidx350 = getelementptr inbounds [3 x %struct._PointInfo], [3 x %struct._PointInfo]* %points, i64 0, i64 0, !dbg !16744
  %y351 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx350, i32 0, i32 1, !dbg !16745
  %218 = load double, double* %y351, align 8, !dbg !16745
  %mul352 = fmul double %mul349, %218, !dbg !16746
  %add353 = fadd double %mul347, %mul352, !dbg !16747
  %219 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %p, align 8, !dbg !16748
  %add.ptr354 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %219, i64 1, !dbg !16749
  %point355 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %add.ptr354, i32 0, i32 0, !dbg !16750
  %y356 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point355, i32 0, i32 1, !dbg !16751
  store double %add353, double* %y356, align 8, !dbg !16752
  %220 = load double, double* %cosine, align 8, !dbg !16753
  %x357 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %radii, i32 0, i32 0, !dbg !16754
  %221 = load double, double* %x357, align 8, !dbg !16754
  %mul358 = fmul double %220, %221, !dbg !16755
  %arrayidx359 = getelementptr inbounds [3 x %struct._PointInfo], [3 x %struct._PointInfo]* %points, i64 0, i64 1, !dbg !16756
  %x360 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx359, i32 0, i32 0, !dbg !16757
  %222 = load double, double* %x360, align 16, !dbg !16757
  %mul361 = fmul double %mul358, %222, !dbg !16758
  %223 = load double, double* %sine, align 8, !dbg !16759
  %y362 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %radii, i32 0, i32 1, !dbg !16760
  %224 = load double, double* %y362, align 8, !dbg !16760
  %mul363 = fmul double %223, %224, !dbg !16761
  %arrayidx364 = getelementptr inbounds [3 x %struct._PointInfo], [3 x %struct._PointInfo]* %points, i64 0, i64 1, !dbg !16762
  %y365 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx364, i32 0, i32 1, !dbg !16763
  %225 = load double, double* %y365, align 8, !dbg !16763
  %mul366 = fmul double %mul363, %225, !dbg !16764
  %sub367 = fsub double %mul361, %mul366, !dbg !16765
  %226 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %p, align 8, !dbg !16766
  %add.ptr368 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %226, i64 2, !dbg !16767
  %point369 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %add.ptr368, i32 0, i32 0, !dbg !16768
  %x370 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point369, i32 0, i32 0, !dbg !16769
  store double %sub367, double* %x370, align 8, !dbg !16770
  %227 = load double, double* %sine, align 8, !dbg !16771
  %x371 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %radii, i32 0, i32 0, !dbg !16772
  %228 = load double, double* %x371, align 8, !dbg !16772
  %mul372 = fmul double %227, %228, !dbg !16773
  %arrayidx373 = getelementptr inbounds [3 x %struct._PointInfo], [3 x %struct._PointInfo]* %points, i64 0, i64 1, !dbg !16774
  %x374 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx373, i32 0, i32 0, !dbg !16775
  %229 = load double, double* %x374, align 16, !dbg !16775
  %mul375 = fmul double %mul372, %229, !dbg !16776
  %230 = load double, double* %cosine, align 8, !dbg !16777
  %y376 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %radii, i32 0, i32 1, !dbg !16778
  %231 = load double, double* %y376, align 8, !dbg !16778
  %mul377 = fmul double %230, %231, !dbg !16779
  %arrayidx378 = getelementptr inbounds [3 x %struct._PointInfo], [3 x %struct._PointInfo]* %points, i64 0, i64 1, !dbg !16780
  %y379 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx378, i32 0, i32 1, !dbg !16781
  %232 = load double, double* %y379, align 8, !dbg !16781
  %mul380 = fmul double %mul377, %232, !dbg !16782
  %add381 = fadd double %mul375, %mul380, !dbg !16783
  %233 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %p, align 8, !dbg !16784
  %add.ptr382 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %233, i64 2, !dbg !16785
  %point383 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %add.ptr382, i32 0, i32 0, !dbg !16786
  %y384 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point383, i32 0, i32 1, !dbg !16787
  store double %add381, double* %y384, align 8, !dbg !16788
  %234 = load double, double* %cosine, align 8, !dbg !16789
  %x385 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %radii, i32 0, i32 0, !dbg !16790
  %235 = load double, double* %x385, align 8, !dbg !16790
  %mul386 = fmul double %234, %235, !dbg !16791
  %arrayidx387 = getelementptr inbounds [3 x %struct._PointInfo], [3 x %struct._PointInfo]* %points, i64 0, i64 2, !dbg !16792
  %x388 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx387, i32 0, i32 0, !dbg !16793
  %236 = load double, double* %x388, align 16, !dbg !16793
  %mul389 = fmul double %mul386, %236, !dbg !16794
  %237 = load double, double* %sine, align 8, !dbg !16795
  %y390 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %radii, i32 0, i32 1, !dbg !16796
  %238 = load double, double* %y390, align 8, !dbg !16796
  %mul391 = fmul double %237, %238, !dbg !16797
  %arrayidx392 = getelementptr inbounds [3 x %struct._PointInfo], [3 x %struct._PointInfo]* %points, i64 0, i64 2, !dbg !16798
  %y393 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx392, i32 0, i32 1, !dbg !16799
  %239 = load double, double* %y393, align 8, !dbg !16799
  %mul394 = fmul double %mul391, %239, !dbg !16800
  %sub395 = fsub double %mul389, %mul394, !dbg !16801
  %240 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %p, align 8, !dbg !16802
  %add.ptr396 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %240, i64 3, !dbg !16803
  %point397 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %add.ptr396, i32 0, i32 0, !dbg !16804
  %x398 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point397, i32 0, i32 0, !dbg !16805
  store double %sub395, double* %x398, align 8, !dbg !16806
  %241 = load double, double* %sine, align 8, !dbg !16807
  %x399 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %radii, i32 0, i32 0, !dbg !16808
  %242 = load double, double* %x399, align 8, !dbg !16808
  %mul400 = fmul double %241, %242, !dbg !16809
  %arrayidx401 = getelementptr inbounds [3 x %struct._PointInfo], [3 x %struct._PointInfo]* %points, i64 0, i64 2, !dbg !16810
  %x402 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx401, i32 0, i32 0, !dbg !16811
  %243 = load double, double* %x402, align 16, !dbg !16811
  %mul403 = fmul double %mul400, %243, !dbg !16812
  %244 = load double, double* %cosine, align 8, !dbg !16813
  %y404 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %radii, i32 0, i32 1, !dbg !16814
  %245 = load double, double* %y404, align 8, !dbg !16814
  %mul405 = fmul double %244, %245, !dbg !16815
  %arrayidx406 = getelementptr inbounds [3 x %struct._PointInfo], [3 x %struct._PointInfo]* %points, i64 0, i64 2, !dbg !16816
  %y407 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx406, i32 0, i32 1, !dbg !16817
  %246 = load double, double* %y407, align 8, !dbg !16817
  %mul408 = fmul double %mul405, %246, !dbg !16818
  %add409 = fadd double %mul403, %mul408, !dbg !16819
  %247 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %p, align 8, !dbg !16820
  %add.ptr410 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %247, i64 3, !dbg !16821
  %point411 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %add.ptr410, i32 0, i32 0, !dbg !16822
  %y412 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %point411, i32 0, i32 1, !dbg !16823
  store double %add409, double* %y412, align 8, !dbg !16824
  %248 = load i64, i64* %i, align 8, !dbg !16825
  %249 = load i64, i64* %arc_segments, align 8, !dbg !16827
  %sub413 = sub i64 %249, 1, !dbg !16828
  %cmp414 = icmp eq i64 %248, %sub413, !dbg !16829
  br i1 %cmp414, label %if.then416, label %if.end419, !dbg !16830

if.then416:                                       ; preds = %cond.end325
  %250 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %p, align 8, !dbg !16831
  %add.ptr417 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %250, i64 3, !dbg !16832
  %point418 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %add.ptr417, i32 0, i32 0, !dbg !16833
  %251 = bitcast %struct._PointInfo* %point418 to i8*, !dbg !16834
  %252 = bitcast %struct._PointInfo* %end to i8*, !dbg !16834
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %251, i8* align 8 %252, i64 16, i1 false), !dbg !16834
  br label %if.end419, !dbg !16835

if.end419:                                        ; preds = %if.then416, %cond.end325
  %253 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %p, align 8, !dbg !16836
  call void @TraceBezier(%struct._PrimitiveInfo* %253, i64 4), !dbg !16837
  %254 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %p, align 8, !dbg !16838
  %coordinates = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %254, i32 0, i32 1, !dbg !16839
  %255 = load i64, i64* %coordinates, align 8, !dbg !16839
  %256 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %p, align 8, !dbg !16840
  %add.ptr420 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %256, i64 %255, !dbg !16840
  store %struct._PrimitiveInfo* %add.ptr420, %struct._PrimitiveInfo** %p, align 8, !dbg !16840
  br label %for.inc, !dbg !16841

for.inc:                                          ; preds = %if.end419
  %257 = load i64, i64* %i, align 8, !dbg !16842
  %inc = add nsw i64 %257, 1, !dbg !16842
  store i64 %inc, i64* %i, align 8, !dbg !16842
  br label %for.cond, !dbg !16843, !llvm.loop !16844

for.end:                                          ; preds = %for.cond
  %258 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %p, align 8, !dbg !16846
  %259 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !16847
  %sub.ptr.lhs.cast = ptrtoint %struct._PrimitiveInfo* %258 to i64, !dbg !16848
  %sub.ptr.rhs.cast = ptrtoint %struct._PrimitiveInfo* %259 to i64, !dbg !16848
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast, !dbg !16848
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 40, !dbg !16848
  %260 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !16849
  %coordinates421 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %260, i32 0, i32 1, !dbg !16850
  store i64 %sub.ptr.div, i64* %coordinates421, align 8, !dbg !16851
  store i64 0, i64* %i, align 8, !dbg !16852
  br label %for.cond422, !dbg !16854

for.cond422:                                      ; preds = %for.inc428, %for.end
  %261 = load i64, i64* %i, align 8, !dbg !16855
  %262 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !16857
  %coordinates423 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %262, i32 0, i32 1, !dbg !16858
  %263 = load i64, i64* %coordinates423, align 8, !dbg !16858
  %cmp424 = icmp slt i64 %261, %263, !dbg !16859
  br i1 %cmp424, label %for.body426, label %for.end430, !dbg !16860

for.body426:                                      ; preds = %for.cond422
  %264 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %primitive_info.addr, align 8, !dbg !16861
  %primitive = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %264, i32 0, i32 2, !dbg !16863
  %265 = load i32, i32* %primitive, align 8, !dbg !16863
  %266 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %p, align 8, !dbg !16864
  %primitive427 = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %266, i32 0, i32 2, !dbg !16865
  store i32 %265, i32* %primitive427, align 8, !dbg !16866
  %267 = load %struct._PrimitiveInfo*, %struct._PrimitiveInfo** %p, align 8, !dbg !16867
  %incdec.ptr = getelementptr inbounds %struct._PrimitiveInfo, %struct._PrimitiveInfo* %267, i32 -1, !dbg !16867
  store %struct._PrimitiveInfo* %incdec.ptr, %struct._PrimitiveInfo** %p, align 8, !dbg !16867
  br label %for.inc428, !dbg !16868

for.inc428:                                       ; preds = %for.body426
  %268 = load i64, i64* %i, align 8, !dbg !16869
  %inc429 = add nsw i64 %268, 1, !dbg !16869
  store i64 %inc429, i64* %i, align 8, !dbg !16869
  br label %for.cond422, !dbg !16870, !llvm.loop !16871

for.end430:                                       ; preds = %if.then, %if.then12, %if.then55, %for.cond422
  ret void, !dbg !16873
}

declare dso_local i64 @FormatLocaleFile(%struct._IO_FILE*, i8*, ...) #3

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { allocsize(0) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind willreturn }
attributes #7 = { allocsize(0,1) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { allocsize(1,2) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { allocsize(0) }
attributes #12 = { nounwind readnone }
attributes #13 = { noreturn }
attributes #14 = { allocsize(0,1) }
attributes #15 = { nounwind readonly }
attributes #16 = { allocsize(1,2) }
attributes #17 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!1229, !1230, !1231}
!llvm.ident = !{!1232}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !698, splitDebugInlining: false, nameTableKind: None)
!1 = !DIFile(filename: "magick/draw.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!2 = !{!3, !19, !25, !31, !68, !72, !78, !103, !115, !123, !128, !163, !173, !179, !250, !258, !264, !337, !354, !368, !380, !385, !391, !397, !404, !412, !425, !431, !437, !441, !446, !479, !501, !522, !547, !565, !573, !649, !664, !671, !683}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 77, baseType: !5, size: 32, elements: !6)
!4 = !DIFile(filename: "./magick/geometry.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!5 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!6 = !{!7, !8, !9, !10, !11, !12, !13, !14, !15, !16, !17, !18}
!7 = !DIEnumerator(name: "UndefinedGravity", value: 0, isUnsigned: true)
!8 = !DIEnumerator(name: "ForgetGravity", value: 0, isUnsigned: true)
!9 = !DIEnumerator(name: "NorthWestGravity", value: 1, isUnsigned: true)
!10 = !DIEnumerator(name: "NorthGravity", value: 2, isUnsigned: true)
!11 = !DIEnumerator(name: "NorthEastGravity", value: 3, isUnsigned: true)
!12 = !DIEnumerator(name: "WestGravity", value: 4, isUnsigned: true)
!13 = !DIEnumerator(name: "CenterGravity", value: 5, isUnsigned: true)
!14 = !DIEnumerator(name: "EastGravity", value: 6, isUnsigned: true)
!15 = !DIEnumerator(name: "SouthWestGravity", value: 7, isUnsigned: true)
!16 = !DIEnumerator(name: "SouthGravity", value: 8, isUnsigned: true)
!17 = !DIEnumerator(name: "SouthEastGravity", value: 9, isUnsigned: true)
!18 = !DIEnumerator(name: "StaticGravity", value: 10, isUnsigned: true)
!19 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !20, line: 70, baseType: !5, size: 32, elements: !21)
!20 = !DIFile(filename: "./magick/draw.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!21 = !{!22, !23, !24}
!22 = !DIEnumerator(name: "UndefinedGradient", value: 0, isUnsigned: true)
!23 = !DIEnumerator(name: "LinearGradient", value: 1, isUnsigned: true)
!24 = !DIEnumerator(name: "RadialGradient", value: 2, isUnsigned: true)
!25 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !26, line: 204, baseType: !5, size: 32, elements: !27)
!26 = !DIFile(filename: "./magick/magick-type.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!27 = !{!28, !29, !30}
!28 = !DIEnumerator(name: "UndefinedClass", value: 0, isUnsigned: true)
!29 = !DIEnumerator(name: "DirectClass", value: 1, isUnsigned: true)
!30 = !DIEnumerator(name: "PseudoClass", value: 2, isUnsigned: true)
!31 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !32, line: 25, baseType: !5, size: 32, elements: !33)
!32 = !DIFile(filename: "./magick/colorspace.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67}
!34 = !DIEnumerator(name: "UndefinedColorspace", value: 0, isUnsigned: true)
!35 = !DIEnumerator(name: "RGBColorspace", value: 1, isUnsigned: true)
!36 = !DIEnumerator(name: "GRAYColorspace", value: 2, isUnsigned: true)
!37 = !DIEnumerator(name: "TransparentColorspace", value: 3, isUnsigned: true)
!38 = !DIEnumerator(name: "OHTAColorspace", value: 4, isUnsigned: true)
!39 = !DIEnumerator(name: "LabColorspace", value: 5, isUnsigned: true)
!40 = !DIEnumerator(name: "XYZColorspace", value: 6, isUnsigned: true)
!41 = !DIEnumerator(name: "YCbCrColorspace", value: 7, isUnsigned: true)
!42 = !DIEnumerator(name: "YCCColorspace", value: 8, isUnsigned: true)
!43 = !DIEnumerator(name: "YIQColorspace", value: 9, isUnsigned: true)
!44 = !DIEnumerator(name: "YPbPrColorspace", value: 10, isUnsigned: true)
!45 = !DIEnumerator(name: "YUVColorspace", value: 11, isUnsigned: true)
!46 = !DIEnumerator(name: "CMYKColorspace", value: 12, isUnsigned: true)
!47 = !DIEnumerator(name: "sRGBColorspace", value: 13, isUnsigned: true)
!48 = !DIEnumerator(name: "HSBColorspace", value: 14, isUnsigned: true)
!49 = !DIEnumerator(name: "HSLColorspace", value: 15, isUnsigned: true)
!50 = !DIEnumerator(name: "HWBColorspace", value: 16, isUnsigned: true)
!51 = !DIEnumerator(name: "Rec601LumaColorspace", value: 17, isUnsigned: true)
!52 = !DIEnumerator(name: "Rec601YCbCrColorspace", value: 18, isUnsigned: true)
!53 = !DIEnumerator(name: "Rec709LumaColorspace", value: 19, isUnsigned: true)
!54 = !DIEnumerator(name: "Rec709YCbCrColorspace", value: 20, isUnsigned: true)
!55 = !DIEnumerator(name: "LogColorspace", value: 21, isUnsigned: true)
!56 = !DIEnumerator(name: "CMYColorspace", value: 22, isUnsigned: true)
!57 = !DIEnumerator(name: "LuvColorspace", value: 23, isUnsigned: true)
!58 = !DIEnumerator(name: "HCLColorspace", value: 24, isUnsigned: true)
!59 = !DIEnumerator(name: "LCHColorspace", value: 25, isUnsigned: true)
!60 = !DIEnumerator(name: "LMSColorspace", value: 26, isUnsigned: true)
!61 = !DIEnumerator(name: "LCHabColorspace", value: 27, isUnsigned: true)
!62 = !DIEnumerator(name: "LCHuvColorspace", value: 28, isUnsigned: true)
!63 = !DIEnumerator(name: "scRGBColorspace", value: 29, isUnsigned: true)
!64 = !DIEnumerator(name: "HSIColorspace", value: 30, isUnsigned: true)
!65 = !DIEnumerator(name: "HSVColorspace", value: 31, isUnsigned: true)
!66 = !DIEnumerator(name: "HCLpColorspace", value: 32, isUnsigned: true)
!67 = !DIEnumerator(name: "YDbDrColorspace", value: 33, isUnsigned: true)
!68 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !26, line: 211, baseType: !5, size: 32, elements: !69)
!69 = !{!70, !71}
!70 = !DIEnumerator(name: "MagickFalse", value: 0, isUnsigned: true)
!71 = !DIEnumerator(name: "MagickTrue", value: 1, isUnsigned: true)
!72 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !20, line: 129, baseType: !5, size: 32, elements: !73)
!73 = !{!74, !75, !76, !77}
!74 = !DIEnumerator(name: "UndefinedSpread", value: 0, isUnsigned: true)
!75 = !DIEnumerator(name: "PadSpread", value: 1, isUnsigned: true)
!76 = !DIEnumerator(name: "ReflectSpread", value: 2, isUnsigned: true)
!77 = !DIEnumerator(name: "RepeatSpread", value: 3, isUnsigned: true)
!78 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !79, line: 25, baseType: !5, size: 32, elements: !80)
!79 = !DIFile(filename: "./magick/compress.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!80 = !{!81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102}
!81 = !DIEnumerator(name: "UndefinedCompression", value: 0, isUnsigned: true)
!82 = !DIEnumerator(name: "NoCompression", value: 1, isUnsigned: true)
!83 = !DIEnumerator(name: "BZipCompression", value: 2, isUnsigned: true)
!84 = !DIEnumerator(name: "DXT1Compression", value: 3, isUnsigned: true)
!85 = !DIEnumerator(name: "DXT3Compression", value: 4, isUnsigned: true)
!86 = !DIEnumerator(name: "DXT5Compression", value: 5, isUnsigned: true)
!87 = !DIEnumerator(name: "FaxCompression", value: 6, isUnsigned: true)
!88 = !DIEnumerator(name: "Group4Compression", value: 7, isUnsigned: true)
!89 = !DIEnumerator(name: "JPEGCompression", value: 8, isUnsigned: true)
!90 = !DIEnumerator(name: "JPEG2000Compression", value: 9, isUnsigned: true)
!91 = !DIEnumerator(name: "LosslessJPEGCompression", value: 10, isUnsigned: true)
!92 = !DIEnumerator(name: "LZWCompression", value: 11, isUnsigned: true)
!93 = !DIEnumerator(name: "RLECompression", value: 12, isUnsigned: true)
!94 = !DIEnumerator(name: "ZipCompression", value: 13, isUnsigned: true)
!95 = !DIEnumerator(name: "ZipSCompression", value: 14, isUnsigned: true)
!96 = !DIEnumerator(name: "PizCompression", value: 15, isUnsigned: true)
!97 = !DIEnumerator(name: "Pxr24Compression", value: 16, isUnsigned: true)
!98 = !DIEnumerator(name: "B44Compression", value: 17, isUnsigned: true)
!99 = !DIEnumerator(name: "B44ACompression", value: 18, isUnsigned: true)
!100 = !DIEnumerator(name: "LZMACompression", value: 19, isUnsigned: true)
!101 = !DIEnumerator(name: "JBIG1Compression", value: 20, isUnsigned: true)
!102 = !DIEnumerator(name: "JBIG2Compression", value: 21, isUnsigned: true)
!103 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !104, line: 75, baseType: !5, size: 32, elements: !105)
!104 = !DIFile(filename: "./magick/image.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!105 = !{!106, !107, !108, !109, !110, !111, !112, !113, !114}
!106 = !DIEnumerator(name: "UndefinedOrientation", value: 0, isUnsigned: true)
!107 = !DIEnumerator(name: "TopLeftOrientation", value: 1, isUnsigned: true)
!108 = !DIEnumerator(name: "TopRightOrientation", value: 2, isUnsigned: true)
!109 = !DIEnumerator(name: "BottomRightOrientation", value: 3, isUnsigned: true)
!110 = !DIEnumerator(name: "BottomLeftOrientation", value: 4, isUnsigned: true)
!111 = !DIEnumerator(name: "LeftTopOrientation", value: 5, isUnsigned: true)
!112 = !DIEnumerator(name: "RightTopOrientation", value: 6, isUnsigned: true)
!113 = !DIEnumerator(name: "RightBottomOrientation", value: 7, isUnsigned: true)
!114 = !DIEnumerator(name: "LeftBottomOrientation", value: 8, isUnsigned: true)
!115 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !116, line: 42, baseType: !5, size: 32, elements: !117)
!116 = !DIFile(filename: "./magick/profile.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!117 = !{!118, !119, !120, !121, !122}
!118 = !DIEnumerator(name: "UndefinedIntent", value: 0, isUnsigned: true)
!119 = !DIEnumerator(name: "SaturationIntent", value: 1, isUnsigned: true)
!120 = !DIEnumerator(name: "PerceptualIntent", value: 2, isUnsigned: true)
!121 = !DIEnumerator(name: "AbsoluteIntent", value: 3, isUnsigned: true)
!122 = !DIEnumerator(name: "RelativeIntent", value: 4, isUnsigned: true)
!123 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !104, line: 88, baseType: !5, size: 32, elements: !124)
!124 = !{!125, !126, !127}
!125 = !DIEnumerator(name: "UndefinedResolution", value: 0, isUnsigned: true)
!126 = !DIEnumerator(name: "PixelsPerInchResolution", value: 1, isUnsigned: true)
!127 = !DIEnumerator(name: "PixelsPerCentimeterResolution", value: 2, isUnsigned: true)
!128 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !129, line: 32, baseType: !5, size: 32, elements: !130)
!129 = !DIFile(filename: "./magick/resample.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!130 = !{!131, !132, !133, !134, !135, !136, !137, !138, !139, !140, !141, !142, !143, !144, !145, !146, !147, !148, !149, !150, !151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161, !162}
!131 = !DIEnumerator(name: "UndefinedFilter", value: 0, isUnsigned: true)
!132 = !DIEnumerator(name: "PointFilter", value: 1, isUnsigned: true)
!133 = !DIEnumerator(name: "BoxFilter", value: 2, isUnsigned: true)
!134 = !DIEnumerator(name: "TriangleFilter", value: 3, isUnsigned: true)
!135 = !DIEnumerator(name: "HermiteFilter", value: 4, isUnsigned: true)
!136 = !DIEnumerator(name: "HanningFilter", value: 5, isUnsigned: true)
!137 = !DIEnumerator(name: "HammingFilter", value: 6, isUnsigned: true)
!138 = !DIEnumerator(name: "BlackmanFilter", value: 7, isUnsigned: true)
!139 = !DIEnumerator(name: "GaussianFilter", value: 8, isUnsigned: true)
!140 = !DIEnumerator(name: "QuadraticFilter", value: 9, isUnsigned: true)
!141 = !DIEnumerator(name: "CubicFilter", value: 10, isUnsigned: true)
!142 = !DIEnumerator(name: "CatromFilter", value: 11, isUnsigned: true)
!143 = !DIEnumerator(name: "MitchellFilter", value: 12, isUnsigned: true)
!144 = !DIEnumerator(name: "JincFilter", value: 13, isUnsigned: true)
!145 = !DIEnumerator(name: "SincFilter", value: 14, isUnsigned: true)
!146 = !DIEnumerator(name: "SincFastFilter", value: 15, isUnsigned: true)
!147 = !DIEnumerator(name: "KaiserFilter", value: 16, isUnsigned: true)
!148 = !DIEnumerator(name: "WelshFilter", value: 17, isUnsigned: true)
!149 = !DIEnumerator(name: "ParzenFilter", value: 18, isUnsigned: true)
!150 = !DIEnumerator(name: "BohmanFilter", value: 19, isUnsigned: true)
!151 = !DIEnumerator(name: "BartlettFilter", value: 20, isUnsigned: true)
!152 = !DIEnumerator(name: "LagrangeFilter", value: 21, isUnsigned: true)
!153 = !DIEnumerator(name: "LanczosFilter", value: 22, isUnsigned: true)
!154 = !DIEnumerator(name: "LanczosSharpFilter", value: 23, isUnsigned: true)
!155 = !DIEnumerator(name: "Lanczos2Filter", value: 24, isUnsigned: true)
!156 = !DIEnumerator(name: "Lanczos2SharpFilter", value: 25, isUnsigned: true)
!157 = !DIEnumerator(name: "RobidouxFilter", value: 26, isUnsigned: true)
!158 = !DIEnumerator(name: "RobidouxSharpFilter", value: 27, isUnsigned: true)
!159 = !DIEnumerator(name: "CosineFilter", value: 28, isUnsigned: true)
!160 = !DIEnumerator(name: "SplineFilter", value: 29, isUnsigned: true)
!161 = !DIEnumerator(name: "LanczosRadiusFilter", value: 30, isUnsigned: true)
!162 = !DIEnumerator(name: "SentinelFilter", value: 31, isUnsigned: true)
!163 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !104, line: 63, baseType: !5, size: 32, elements: !164)
!164 = !{!165, !166, !167, !168, !169, !170, !171, !172}
!165 = !DIEnumerator(name: "UndefinedInterlace", value: 0, isUnsigned: true)
!166 = !DIEnumerator(name: "NoInterlace", value: 1, isUnsigned: true)
!167 = !DIEnumerator(name: "LineInterlace", value: 2, isUnsigned: true)
!168 = !DIEnumerator(name: "PlaneInterlace", value: 3, isUnsigned: true)
!169 = !DIEnumerator(name: "PartitionInterlace", value: 4, isUnsigned: true)
!170 = !DIEnumerator(name: "GIFInterlace", value: 5, isUnsigned: true)
!171 = !DIEnumerator(name: "JPEGInterlace", value: 6, isUnsigned: true)
!172 = !DIEnumerator(name: "PNGInterlace", value: 7, isUnsigned: true)
!173 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !174, line: 30, baseType: !5, size: 32, elements: !175)
!174 = !DIFile(filename: "./magick/quantum.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!175 = !{!176, !177, !178}
!176 = !DIEnumerator(name: "UndefinedEndian", value: 0, isUnsigned: true)
!177 = !DIEnumerator(name: "LSBEndian", value: 1, isUnsigned: true)
!178 = !DIEnumerator(name: "MSBEndian", value: 2, isUnsigned: true)
!179 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !180, line: 25, baseType: !5, size: 32, elements: !181)
!180 = !DIFile(filename: "./magick/composite.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!181 = !{!182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249}
!182 = !DIEnumerator(name: "UndefinedCompositeOp", value: 0, isUnsigned: true)
!183 = !DIEnumerator(name: "NoCompositeOp", value: 1, isUnsigned: true)
!184 = !DIEnumerator(name: "ModulusAddCompositeOp", value: 2, isUnsigned: true)
!185 = !DIEnumerator(name: "AtopCompositeOp", value: 3, isUnsigned: true)
!186 = !DIEnumerator(name: "BlendCompositeOp", value: 4, isUnsigned: true)
!187 = !DIEnumerator(name: "BumpmapCompositeOp", value: 5, isUnsigned: true)
!188 = !DIEnumerator(name: "ChangeMaskCompositeOp", value: 6, isUnsigned: true)
!189 = !DIEnumerator(name: "ClearCompositeOp", value: 7, isUnsigned: true)
!190 = !DIEnumerator(name: "ColorBurnCompositeOp", value: 8, isUnsigned: true)
!191 = !DIEnumerator(name: "ColorDodgeCompositeOp", value: 9, isUnsigned: true)
!192 = !DIEnumerator(name: "ColorizeCompositeOp", value: 10, isUnsigned: true)
!193 = !DIEnumerator(name: "CopyBlackCompositeOp", value: 11, isUnsigned: true)
!194 = !DIEnumerator(name: "CopyBlueCompositeOp", value: 12, isUnsigned: true)
!195 = !DIEnumerator(name: "CopyCompositeOp", value: 13, isUnsigned: true)
!196 = !DIEnumerator(name: "CopyCyanCompositeOp", value: 14, isUnsigned: true)
!197 = !DIEnumerator(name: "CopyGreenCompositeOp", value: 15, isUnsigned: true)
!198 = !DIEnumerator(name: "CopyMagentaCompositeOp", value: 16, isUnsigned: true)
!199 = !DIEnumerator(name: "CopyOpacityCompositeOp", value: 17, isUnsigned: true)
!200 = !DIEnumerator(name: "CopyRedCompositeOp", value: 18, isUnsigned: true)
!201 = !DIEnumerator(name: "CopyYellowCompositeOp", value: 19, isUnsigned: true)
!202 = !DIEnumerator(name: "DarkenCompositeOp", value: 20, isUnsigned: true)
!203 = !DIEnumerator(name: "DstAtopCompositeOp", value: 21, isUnsigned: true)
!204 = !DIEnumerator(name: "DstCompositeOp", value: 22, isUnsigned: true)
!205 = !DIEnumerator(name: "DstInCompositeOp", value: 23, isUnsigned: true)
!206 = !DIEnumerator(name: "DstOutCompositeOp", value: 24, isUnsigned: true)
!207 = !DIEnumerator(name: "DstOverCompositeOp", value: 25, isUnsigned: true)
!208 = !DIEnumerator(name: "DifferenceCompositeOp", value: 26, isUnsigned: true)
!209 = !DIEnumerator(name: "DisplaceCompositeOp", value: 27, isUnsigned: true)
!210 = !DIEnumerator(name: "DissolveCompositeOp", value: 28, isUnsigned: true)
!211 = !DIEnumerator(name: "ExclusionCompositeOp", value: 29, isUnsigned: true)
!212 = !DIEnumerator(name: "HardLightCompositeOp", value: 30, isUnsigned: true)
!213 = !DIEnumerator(name: "HueCompositeOp", value: 31, isUnsigned: true)
!214 = !DIEnumerator(name: "InCompositeOp", value: 32, isUnsigned: true)
!215 = !DIEnumerator(name: "LightenCompositeOp", value: 33, isUnsigned: true)
!216 = !DIEnumerator(name: "LinearLightCompositeOp", value: 34, isUnsigned: true)
!217 = !DIEnumerator(name: "LuminizeCompositeOp", value: 35, isUnsigned: true)
!218 = !DIEnumerator(name: "MinusDstCompositeOp", value: 36, isUnsigned: true)
!219 = !DIEnumerator(name: "ModulateCompositeOp", value: 37, isUnsigned: true)
!220 = !DIEnumerator(name: "MultiplyCompositeOp", value: 38, isUnsigned: true)
!221 = !DIEnumerator(name: "OutCompositeOp", value: 39, isUnsigned: true)
!222 = !DIEnumerator(name: "OverCompositeOp", value: 40, isUnsigned: true)
!223 = !DIEnumerator(name: "OverlayCompositeOp", value: 41, isUnsigned: true)
!224 = !DIEnumerator(name: "PlusCompositeOp", value: 42, isUnsigned: true)
!225 = !DIEnumerator(name: "ReplaceCompositeOp", value: 43, isUnsigned: true)
!226 = !DIEnumerator(name: "SaturateCompositeOp", value: 44, isUnsigned: true)
!227 = !DIEnumerator(name: "ScreenCompositeOp", value: 45, isUnsigned: true)
!228 = !DIEnumerator(name: "SoftLightCompositeOp", value: 46, isUnsigned: true)
!229 = !DIEnumerator(name: "SrcAtopCompositeOp", value: 47, isUnsigned: true)
!230 = !DIEnumerator(name: "SrcCompositeOp", value: 48, isUnsigned: true)
!231 = !DIEnumerator(name: "SrcInCompositeOp", value: 49, isUnsigned: true)
!232 = !DIEnumerator(name: "SrcOutCompositeOp", value: 50, isUnsigned: true)
!233 = !DIEnumerator(name: "SrcOverCompositeOp", value: 51, isUnsigned: true)
!234 = !DIEnumerator(name: "ModulusSubtractCompositeOp", value: 52, isUnsigned: true)
!235 = !DIEnumerator(name: "ThresholdCompositeOp", value: 53, isUnsigned: true)
!236 = !DIEnumerator(name: "XorCompositeOp", value: 54, isUnsigned: true)
!237 = !DIEnumerator(name: "DivideDstCompositeOp", value: 55, isUnsigned: true)
!238 = !DIEnumerator(name: "DistortCompositeOp", value: 56, isUnsigned: true)
!239 = !DIEnumerator(name: "BlurCompositeOp", value: 57, isUnsigned: true)
!240 = !DIEnumerator(name: "PegtopLightCompositeOp", value: 58, isUnsigned: true)
!241 = !DIEnumerator(name: "VividLightCompositeOp", value: 59, isUnsigned: true)
!242 = !DIEnumerator(name: "PinLightCompositeOp", value: 60, isUnsigned: true)
!243 = !DIEnumerator(name: "LinearDodgeCompositeOp", value: 61, isUnsigned: true)
!244 = !DIEnumerator(name: "LinearBurnCompositeOp", value: 62, isUnsigned: true)
!245 = !DIEnumerator(name: "MathematicsCompositeOp", value: 63, isUnsigned: true)
!246 = !DIEnumerator(name: "DivideSrcCompositeOp", value: 64, isUnsigned: true)
!247 = !DIEnumerator(name: "MinusSrcCompositeOp", value: 65, isUnsigned: true)
!248 = !DIEnumerator(name: "DarkenIntensityCompositeOp", value: 66, isUnsigned: true)
!249 = !DIEnumerator(name: "LightenIntensityCompositeOp", value: 67, isUnsigned: true)
!250 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !251, line: 25, baseType: !5, size: 32, elements: !252)
!251 = !DIFile(filename: "./magick/layer.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!252 = !{!253, !254, !255, !256, !257}
!253 = !DIEnumerator(name: "UnrecognizedDispose", value: 0, isUnsigned: true)
!254 = !DIEnumerator(name: "UndefinedDispose", value: 0, isUnsigned: true)
!255 = !DIEnumerator(name: "NoneDispose", value: 1, isUnsigned: true)
!256 = !DIEnumerator(name: "BackgroundDispose", value: 2, isUnsigned: true)
!257 = !DIEnumerator(name: "PreviousDispose", value: 3, isUnsigned: true)
!258 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !259, line: 25, baseType: !5, size: 32, elements: !260)
!259 = !DIFile(filename: "./magick/timer.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!260 = !{!261, !262, !263}
!261 = !DIEnumerator(name: "UndefinedTimerState", value: 0, isUnsigned: true)
!262 = !DIEnumerator(name: "StoppedTimerState", value: 1, isUnsigned: true)
!263 = !DIEnumerator(name: "RunningTimerState", value: 2, isUnsigned: true)
!264 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !265, line: 28, baseType: !5, size: 32, elements: !266)
!265 = !DIFile(filename: "./magick/exception.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!266 = !{!267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336}
!267 = !DIEnumerator(name: "UndefinedException", value: 0, isUnsigned: true)
!268 = !DIEnumerator(name: "WarningException", value: 300, isUnsigned: true)
!269 = !DIEnumerator(name: "ResourceLimitWarning", value: 300, isUnsigned: true)
!270 = !DIEnumerator(name: "TypeWarning", value: 305, isUnsigned: true)
!271 = !DIEnumerator(name: "OptionWarning", value: 310, isUnsigned: true)
!272 = !DIEnumerator(name: "DelegateWarning", value: 315, isUnsigned: true)
!273 = !DIEnumerator(name: "MissingDelegateWarning", value: 320, isUnsigned: true)
!274 = !DIEnumerator(name: "CorruptImageWarning", value: 325, isUnsigned: true)
!275 = !DIEnumerator(name: "FileOpenWarning", value: 330, isUnsigned: true)
!276 = !DIEnumerator(name: "BlobWarning", value: 335, isUnsigned: true)
!277 = !DIEnumerator(name: "StreamWarning", value: 340, isUnsigned: true)
!278 = !DIEnumerator(name: "CacheWarning", value: 345, isUnsigned: true)
!279 = !DIEnumerator(name: "CoderWarning", value: 350, isUnsigned: true)
!280 = !DIEnumerator(name: "FilterWarning", value: 352, isUnsigned: true)
!281 = !DIEnumerator(name: "ModuleWarning", value: 355, isUnsigned: true)
!282 = !DIEnumerator(name: "DrawWarning", value: 360, isUnsigned: true)
!283 = !DIEnumerator(name: "ImageWarning", value: 365, isUnsigned: true)
!284 = !DIEnumerator(name: "WandWarning", value: 370, isUnsigned: true)
!285 = !DIEnumerator(name: "RandomWarning", value: 375, isUnsigned: true)
!286 = !DIEnumerator(name: "XServerWarning", value: 380, isUnsigned: true)
!287 = !DIEnumerator(name: "MonitorWarning", value: 385, isUnsigned: true)
!288 = !DIEnumerator(name: "RegistryWarning", value: 390, isUnsigned: true)
!289 = !DIEnumerator(name: "ConfigureWarning", value: 395, isUnsigned: true)
!290 = !DIEnumerator(name: "PolicyWarning", value: 399, isUnsigned: true)
!291 = !DIEnumerator(name: "ErrorException", value: 400, isUnsigned: true)
!292 = !DIEnumerator(name: "ResourceLimitError", value: 400, isUnsigned: true)
!293 = !DIEnumerator(name: "TypeError", value: 405, isUnsigned: true)
!294 = !DIEnumerator(name: "OptionError", value: 410, isUnsigned: true)
!295 = !DIEnumerator(name: "DelegateError", value: 415, isUnsigned: true)
!296 = !DIEnumerator(name: "MissingDelegateError", value: 420, isUnsigned: true)
!297 = !DIEnumerator(name: "CorruptImageError", value: 425, isUnsigned: true)
!298 = !DIEnumerator(name: "FileOpenError", value: 430, isUnsigned: true)
!299 = !DIEnumerator(name: "BlobError", value: 435, isUnsigned: true)
!300 = !DIEnumerator(name: "StreamError", value: 440, isUnsigned: true)
!301 = !DIEnumerator(name: "CacheError", value: 445, isUnsigned: true)
!302 = !DIEnumerator(name: "CoderError", value: 450, isUnsigned: true)
!303 = !DIEnumerator(name: "FilterError", value: 452, isUnsigned: true)
!304 = !DIEnumerator(name: "ModuleError", value: 455, isUnsigned: true)
!305 = !DIEnumerator(name: "DrawError", value: 460, isUnsigned: true)
!306 = !DIEnumerator(name: "ImageError", value: 465, isUnsigned: true)
!307 = !DIEnumerator(name: "WandError", value: 470, isUnsigned: true)
!308 = !DIEnumerator(name: "RandomError", value: 475, isUnsigned: true)
!309 = !DIEnumerator(name: "XServerError", value: 480, isUnsigned: true)
!310 = !DIEnumerator(name: "MonitorError", value: 485, isUnsigned: true)
!311 = !DIEnumerator(name: "RegistryError", value: 490, isUnsigned: true)
!312 = !DIEnumerator(name: "ConfigureError", value: 495, isUnsigned: true)
!313 = !DIEnumerator(name: "PolicyError", value: 499, isUnsigned: true)
!314 = !DIEnumerator(name: "FatalErrorException", value: 700, isUnsigned: true)
!315 = !DIEnumerator(name: "ResourceLimitFatalError", value: 700, isUnsigned: true)
!316 = !DIEnumerator(name: "TypeFatalError", value: 705, isUnsigned: true)
!317 = !DIEnumerator(name: "OptionFatalError", value: 710, isUnsigned: true)
!318 = !DIEnumerator(name: "DelegateFatalError", value: 715, isUnsigned: true)
!319 = !DIEnumerator(name: "MissingDelegateFatalError", value: 720, isUnsigned: true)
!320 = !DIEnumerator(name: "CorruptImageFatalError", value: 725, isUnsigned: true)
!321 = !DIEnumerator(name: "FileOpenFatalError", value: 730, isUnsigned: true)
!322 = !DIEnumerator(name: "BlobFatalError", value: 735, isUnsigned: true)
!323 = !DIEnumerator(name: "StreamFatalError", value: 740, isUnsigned: true)
!324 = !DIEnumerator(name: "CacheFatalError", value: 745, isUnsigned: true)
!325 = !DIEnumerator(name: "CoderFatalError", value: 750, isUnsigned: true)
!326 = !DIEnumerator(name: "FilterFatalError", value: 752, isUnsigned: true)
!327 = !DIEnumerator(name: "ModuleFatalError", value: 755, isUnsigned: true)
!328 = !DIEnumerator(name: "DrawFatalError", value: 760, isUnsigned: true)
!329 = !DIEnumerator(name: "ImageFatalError", value: 765, isUnsigned: true)
!330 = !DIEnumerator(name: "WandFatalError", value: 770, isUnsigned: true)
!331 = !DIEnumerator(name: "RandomFatalError", value: 775, isUnsigned: true)
!332 = !DIEnumerator(name: "XServerFatalError", value: 780, isUnsigned: true)
!333 = !DIEnumerator(name: "MonitorFatalError", value: 785, isUnsigned: true)
!334 = !DIEnumerator(name: "RegistryFatalError", value: 790, isUnsigned: true)
!335 = !DIEnumerator(name: "ConfigureFatalError", value: 795, isUnsigned: true)
!336 = !DIEnumerator(name: "PolicyFatalError", value: 799, isUnsigned: true)
!337 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !338, line: 31, baseType: !5, size: 32, elements: !339)
!338 = !DIFile(filename: "./magick/pixel.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!339 = !{!340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353}
!340 = !DIEnumerator(name: "UndefinedInterpolatePixel", value: 0, isUnsigned: true)
!341 = !DIEnumerator(name: "AverageInterpolatePixel", value: 1, isUnsigned: true)
!342 = !DIEnumerator(name: "BicubicInterpolatePixel", value: 2, isUnsigned: true)
!343 = !DIEnumerator(name: "BilinearInterpolatePixel", value: 3, isUnsigned: true)
!344 = !DIEnumerator(name: "FilterInterpolatePixel", value: 4, isUnsigned: true)
!345 = !DIEnumerator(name: "IntegerInterpolatePixel", value: 5, isUnsigned: true)
!346 = !DIEnumerator(name: "MeshInterpolatePixel", value: 6, isUnsigned: true)
!347 = !DIEnumerator(name: "NearestNeighborInterpolatePixel", value: 7, isUnsigned: true)
!348 = !DIEnumerator(name: "SplineInterpolatePixel", value: 8, isUnsigned: true)
!349 = !DIEnumerator(name: "Average9InterpolatePixel", value: 9, isUnsigned: true)
!350 = !DIEnumerator(name: "Average16InterpolatePixel", value: 10, isUnsigned: true)
!351 = !DIEnumerator(name: "BlendInterpolatePixel", value: 11, isUnsigned: true)
!352 = !DIEnumerator(name: "BackgroundInterpolatePixel", value: 12, isUnsigned: true)
!353 = !DIEnumerator(name: "CatromInterpolatePixel", value: 13, isUnsigned: true)
!354 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !104, line: 47, baseType: !5, size: 32, elements: !355)
!355 = !{!356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367}
!356 = !DIEnumerator(name: "UndefinedType", value: 0, isUnsigned: true)
!357 = !DIEnumerator(name: "BilevelType", value: 1, isUnsigned: true)
!358 = !DIEnumerator(name: "GrayscaleType", value: 2, isUnsigned: true)
!359 = !DIEnumerator(name: "GrayscaleMatteType", value: 3, isUnsigned: true)
!360 = !DIEnumerator(name: "PaletteType", value: 4, isUnsigned: true)
!361 = !DIEnumerator(name: "PaletteMatteType", value: 5, isUnsigned: true)
!362 = !DIEnumerator(name: "TrueColorType", value: 6, isUnsigned: true)
!363 = !DIEnumerator(name: "TrueColorMatteType", value: 7, isUnsigned: true)
!364 = !DIEnumerator(name: "ColorSeparationType", value: 8, isUnsigned: true)
!365 = !DIEnumerator(name: "ColorSeparationMatteType", value: 9, isUnsigned: true)
!366 = !DIEnumerator(name: "OptimizeType", value: 10, isUnsigned: true)
!367 = !DIEnumerator(name: "PaletteBilevelMatteType", value: 11, isUnsigned: true)
!368 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !338, line: 67, baseType: !5, size: 32, elements: !369)
!369 = !{!370, !371, !372, !373, !374, !375, !376, !377, !378, !379}
!370 = !DIEnumerator(name: "UndefinedPixelIntensityMethod", value: 0, isUnsigned: true)
!371 = !DIEnumerator(name: "AveragePixelIntensityMethod", value: 1, isUnsigned: true)
!372 = !DIEnumerator(name: "BrightnessPixelIntensityMethod", value: 2, isUnsigned: true)
!373 = !DIEnumerator(name: "LightnessPixelIntensityMethod", value: 3, isUnsigned: true)
!374 = !DIEnumerator(name: "Rec601LumaPixelIntensityMethod", value: 4, isUnsigned: true)
!375 = !DIEnumerator(name: "Rec601LuminancePixelIntensityMethod", value: 5, isUnsigned: true)
!376 = !DIEnumerator(name: "Rec709LumaPixelIntensityMethod", value: 6, isUnsigned: true)
!377 = !DIEnumerator(name: "Rec709LuminancePixelIntensityMethod", value: 7, isUnsigned: true)
!378 = !DIEnumerator(name: "RMSPixelIntensityMethod", value: 8, isUnsigned: true)
!379 = !DIEnumerator(name: "MSPixelIntensityMethod", value: 9, isUnsigned: true)
!380 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !20, line: 62, baseType: !5, size: 32, elements: !381)
!381 = !{!382, !383, !384}
!382 = !DIEnumerator(name: "UndefinedRule", value: 0, isUnsigned: true)
!383 = !DIEnumerator(name: "EvenOddRule", value: 1, isUnsigned: true)
!384 = !DIEnumerator(name: "NonZeroRule", value: 2, isUnsigned: true)
!385 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !20, line: 77, baseType: !5, size: 32, elements: !386)
!386 = !{!387, !388, !389, !390}
!387 = !DIEnumerator(name: "UndefinedCap", value: 0, isUnsigned: true)
!388 = !DIEnumerator(name: "ButtCap", value: 1, isUnsigned: true)
!389 = !DIEnumerator(name: "RoundCap", value: 2, isUnsigned: true)
!390 = !DIEnumerator(name: "SquareCap", value: 3, isUnsigned: true)
!391 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !20, line: 85, baseType: !5, size: 32, elements: !392)
!392 = !{!393, !394, !395, !396}
!393 = !DIEnumerator(name: "UndefinedJoin", value: 0, isUnsigned: true)
!394 = !DIEnumerator(name: "MiterJoin", value: 1, isUnsigned: true)
!395 = !DIEnumerator(name: "RoundJoin", value: 2, isUnsigned: true)
!396 = !DIEnumerator(name: "BevelJoin", value: 3, isUnsigned: true)
!397 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !20, line: 46, baseType: !5, size: 32, elements: !398)
!398 = !{!399, !400, !401, !402, !403}
!399 = !DIEnumerator(name: "UndefinedDecoration", value: 0, isUnsigned: true)
!400 = !DIEnumerator(name: "NoDecoration", value: 1, isUnsigned: true)
!401 = !DIEnumerator(name: "UnderlineDecoration", value: 2, isUnsigned: true)
!402 = !DIEnumerator(name: "OverlineDecoration", value: 3, isUnsigned: true)
!403 = !DIEnumerator(name: "LineThroughDecoration", value: 4, isUnsigned: true)
!404 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !405, line: 40, baseType: !5, size: 32, elements: !406)
!405 = !DIFile(filename: "./magick/type.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!406 = !{!407, !408, !409, !410, !411}
!407 = !DIEnumerator(name: "UndefinedStyle", value: 0, isUnsigned: true)
!408 = !DIEnumerator(name: "NormalStyle", value: 1, isUnsigned: true)
!409 = !DIEnumerator(name: "ItalicStyle", value: 2, isUnsigned: true)
!410 = !DIEnumerator(name: "ObliqueStyle", value: 3, isUnsigned: true)
!411 = !DIEnumerator(name: "AnyStyle", value: 4, isUnsigned: true)
!412 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !405, line: 25, baseType: !5, size: 32, elements: !413)
!413 = !{!414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424}
!414 = !DIEnumerator(name: "UndefinedStretch", value: 0, isUnsigned: true)
!415 = !DIEnumerator(name: "NormalStretch", value: 1, isUnsigned: true)
!416 = !DIEnumerator(name: "UltraCondensedStretch", value: 2, isUnsigned: true)
!417 = !DIEnumerator(name: "ExtraCondensedStretch", value: 3, isUnsigned: true)
!418 = !DIEnumerator(name: "CondensedStretch", value: 4, isUnsigned: true)
!419 = !DIEnumerator(name: "SemiCondensedStretch", value: 5, isUnsigned: true)
!420 = !DIEnumerator(name: "SemiExpandedStretch", value: 6, isUnsigned: true)
!421 = !DIEnumerator(name: "ExpandedStretch", value: 7, isUnsigned: true)
!422 = !DIEnumerator(name: "ExtraExpandedStretch", value: 8, isUnsigned: true)
!423 = !DIEnumerator(name: "UltraExpandedStretch", value: 9, isUnsigned: true)
!424 = !DIEnumerator(name: "AnyStretch", value: 10, isUnsigned: true)
!425 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !20, line: 30, baseType: !5, size: 32, elements: !426)
!426 = !{!427, !428, !429, !430}
!427 = !DIEnumerator(name: "UndefinedAlign", value: 0, isUnsigned: true)
!428 = !DIEnumerator(name: "LeftAlign", value: 1, isUnsigned: true)
!429 = !DIEnumerator(name: "CenterAlign", value: 2, isUnsigned: true)
!430 = !DIEnumerator(name: "RightAlign", value: 3, isUnsigned: true)
!431 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !20, line: 38, baseType: !5, size: 32, elements: !432)
!432 = !{!433, !434, !435, !436}
!433 = !DIEnumerator(name: "UndefinedPathUnits", value: 0, isUnsigned: true)
!434 = !DIEnumerator(name: "UserSpace", value: 1, isUnsigned: true)
!435 = !DIEnumerator(name: "UserSpaceOnUse", value: 2, isUnsigned: true)
!436 = !DIEnumerator(name: "ObjectBoundingBox", value: 3, isUnsigned: true)
!437 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !20, line: 123, baseType: !5, size: 32, elements: !438)
!438 = !{!439, !440}
!439 = !DIEnumerator(name: "UndefinedReference", value: 0, isUnsigned: true)
!440 = !DIEnumerator(name: "GradientReference", value: 1, isUnsigned: true)
!441 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !20, line: 55, baseType: !5, size: 32, elements: !442)
!442 = !{!443, !444, !445}
!443 = !DIEnumerator(name: "UndefinedDirection", value: 0, isUnsigned: true)
!444 = !DIEnumerator(name: "RightToLeftDirection", value: 1, isUnsigned: true)
!445 = !DIEnumerator(name: "LeftToRightDirection", value: 2, isUnsigned: true)
!446 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !447, line: 27, baseType: !5, size: 32, elements: !448)
!447 = !DIFile(filename: "./magick/effect.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!448 = !{!449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478}
!449 = !DIEnumerator(name: "UndefinedPreview", value: 0, isUnsigned: true)
!450 = !DIEnumerator(name: "RotatePreview", value: 1, isUnsigned: true)
!451 = !DIEnumerator(name: "ShearPreview", value: 2, isUnsigned: true)
!452 = !DIEnumerator(name: "RollPreview", value: 3, isUnsigned: true)
!453 = !DIEnumerator(name: "HuePreview", value: 4, isUnsigned: true)
!454 = !DIEnumerator(name: "SaturationPreview", value: 5, isUnsigned: true)
!455 = !DIEnumerator(name: "BrightnessPreview", value: 6, isUnsigned: true)
!456 = !DIEnumerator(name: "GammaPreview", value: 7, isUnsigned: true)
!457 = !DIEnumerator(name: "SpiffPreview", value: 8, isUnsigned: true)
!458 = !DIEnumerator(name: "DullPreview", value: 9, isUnsigned: true)
!459 = !DIEnumerator(name: "GrayscalePreview", value: 10, isUnsigned: true)
!460 = !DIEnumerator(name: "QuantizePreview", value: 11, isUnsigned: true)
!461 = !DIEnumerator(name: "DespecklePreview", value: 12, isUnsigned: true)
!462 = !DIEnumerator(name: "ReduceNoisePreview", value: 13, isUnsigned: true)
!463 = !DIEnumerator(name: "AddNoisePreview", value: 14, isUnsigned: true)
!464 = !DIEnumerator(name: "SharpenPreview", value: 15, isUnsigned: true)
!465 = !DIEnumerator(name: "BlurPreview", value: 16, isUnsigned: true)
!466 = !DIEnumerator(name: "ThresholdPreview", value: 17, isUnsigned: true)
!467 = !DIEnumerator(name: "EdgeDetectPreview", value: 18, isUnsigned: true)
!468 = !DIEnumerator(name: "SpreadPreview", value: 19, isUnsigned: true)
!469 = !DIEnumerator(name: "SolarizePreview", value: 20, isUnsigned: true)
!470 = !DIEnumerator(name: "ShadePreview", value: 21, isUnsigned: true)
!471 = !DIEnumerator(name: "RaisePreview", value: 22, isUnsigned: true)
!472 = !DIEnumerator(name: "SegmentPreview", value: 23, isUnsigned: true)
!473 = !DIEnumerator(name: "SwirlPreview", value: 24, isUnsigned: true)
!474 = !DIEnumerator(name: "ImplodePreview", value: 25, isUnsigned: true)
!475 = !DIEnumerator(name: "WavePreview", value: 26, isUnsigned: true)
!476 = !DIEnumerator(name: "OilPaintPreview", value: 27, isUnsigned: true)
!477 = !DIEnumerator(name: "CharcoalDrawingPreview", value: 28, isUnsigned: true)
!478 = !DIEnumerator(name: "JPEGPreview", value: 29, isUnsigned: true)
!479 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !26, line: 177, baseType: !5, size: 32, elements: !480)
!480 = !{!481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500}
!481 = !DIEnumerator(name: "UndefinedChannel", value: 0, isUnsigned: true)
!482 = !DIEnumerator(name: "RedChannel", value: 1, isUnsigned: true)
!483 = !DIEnumerator(name: "GrayChannel", value: 1, isUnsigned: true)
!484 = !DIEnumerator(name: "CyanChannel", value: 1, isUnsigned: true)
!485 = !DIEnumerator(name: "GreenChannel", value: 2, isUnsigned: true)
!486 = !DIEnumerator(name: "MagentaChannel", value: 2, isUnsigned: true)
!487 = !DIEnumerator(name: "BlueChannel", value: 4, isUnsigned: true)
!488 = !DIEnumerator(name: "YellowChannel", value: 4, isUnsigned: true)
!489 = !DIEnumerator(name: "AlphaChannel", value: 8, isUnsigned: true)
!490 = !DIEnumerator(name: "OpacityChannel", value: 8, isUnsigned: true)
!491 = !DIEnumerator(name: "MatteChannel", value: 8, isUnsigned: true)
!492 = !DIEnumerator(name: "BlackChannel", value: 32, isUnsigned: true)
!493 = !DIEnumerator(name: "IndexChannel", value: 32, isUnsigned: true)
!494 = !DIEnumerator(name: "CompositeChannels", value: 47, isUnsigned: true)
!495 = !DIEnumerator(name: "AllChannels", value: 134217727, isUnsigned: true)
!496 = !DIEnumerator(name: "TrueAlphaChannel", value: 64, isUnsigned: true)
!497 = !DIEnumerator(name: "RGBChannels", value: 128, isUnsigned: true)
!498 = !DIEnumerator(name: "GrayChannels", value: 128, isUnsigned: true)
!499 = !DIEnumerator(name: "SyncChannels", value: 256, isUnsigned: true)
!500 = !DIEnumerator(name: "DefaultChannels", value: 134217719, isUnsigned: true)
!501 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !502, line: 27, baseType: !5, size: 32, elements: !503)
!502 = !DIFile(filename: "./magick/cache-view.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!503 = !{!504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519, !520, !521}
!504 = !DIEnumerator(name: "UndefinedVirtualPixelMethod", value: 0, isUnsigned: true)
!505 = !DIEnumerator(name: "BackgroundVirtualPixelMethod", value: 1, isUnsigned: true)
!506 = !DIEnumerator(name: "ConstantVirtualPixelMethod", value: 2, isUnsigned: true)
!507 = !DIEnumerator(name: "DitherVirtualPixelMethod", value: 3, isUnsigned: true)
!508 = !DIEnumerator(name: "EdgeVirtualPixelMethod", value: 4, isUnsigned: true)
!509 = !DIEnumerator(name: "MirrorVirtualPixelMethod", value: 5, isUnsigned: true)
!510 = !DIEnumerator(name: "RandomVirtualPixelMethod", value: 6, isUnsigned: true)
!511 = !DIEnumerator(name: "TileVirtualPixelMethod", value: 7, isUnsigned: true)
!512 = !DIEnumerator(name: "TransparentVirtualPixelMethod", value: 8, isUnsigned: true)
!513 = !DIEnumerator(name: "MaskVirtualPixelMethod", value: 9, isUnsigned: true)
!514 = !DIEnumerator(name: "BlackVirtualPixelMethod", value: 10, isUnsigned: true)
!515 = !DIEnumerator(name: "GrayVirtualPixelMethod", value: 11, isUnsigned: true)
!516 = !DIEnumerator(name: "WhiteVirtualPixelMethod", value: 12, isUnsigned: true)
!517 = !DIEnumerator(name: "HorizontalTileVirtualPixelMethod", value: 13, isUnsigned: true)
!518 = !DIEnumerator(name: "VerticalTileVirtualPixelMethod", value: 14, isUnsigned: true)
!519 = !DIEnumerator(name: "HorizontalTileEdgeVirtualPixelMethod", value: 15, isUnsigned: true)
!520 = !DIEnumerator(name: "VerticalTileEdgeVirtualPixelMethod", value: 16, isUnsigned: true)
!521 = !DIEnumerator(name: "CheckerTileVirtualPixelMethod", value: 17, isUnsigned: true)
!522 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !523, line: 34, baseType: !5, size: 32, elements: !524)
!523 = !DIFile(filename: "./magick/log.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!524 = !{!525, !526, !527, !528, !529, !530, !531, !532, !533, !534, !535, !536, !537, !538, !539, !540, !541, !542, !543, !544, !545, !546}
!525 = !DIEnumerator(name: "UndefinedEvents", value: 0, isUnsigned: true)
!526 = !DIEnumerator(name: "NoEvents", value: 0, isUnsigned: true)
!527 = !DIEnumerator(name: "TraceEvent", value: 1, isUnsigned: true)
!528 = !DIEnumerator(name: "AnnotateEvent", value: 2, isUnsigned: true)
!529 = !DIEnumerator(name: "BlobEvent", value: 4, isUnsigned: true)
!530 = !DIEnumerator(name: "CacheEvent", value: 8, isUnsigned: true)
!531 = !DIEnumerator(name: "CoderEvent", value: 16, isUnsigned: true)
!532 = !DIEnumerator(name: "ConfigureEvent", value: 32, isUnsigned: true)
!533 = !DIEnumerator(name: "DeprecateEvent", value: 64, isUnsigned: true)
!534 = !DIEnumerator(name: "DrawEvent", value: 128, isUnsigned: true)
!535 = !DIEnumerator(name: "ExceptionEvent", value: 256, isUnsigned: true)
!536 = !DIEnumerator(name: "ImageEvent", value: 512, isUnsigned: true)
!537 = !DIEnumerator(name: "LocaleEvent", value: 1024, isUnsigned: true)
!538 = !DIEnumerator(name: "ModuleEvent", value: 2048, isUnsigned: true)
!539 = !DIEnumerator(name: "PolicyEvent", value: 4096, isUnsigned: true)
!540 = !DIEnumerator(name: "ResourceEvent", value: 8192, isUnsigned: true)
!541 = !DIEnumerator(name: "TransformEvent", value: 16384, isUnsigned: true)
!542 = !DIEnumerator(name: "UserEvent", value: 36864, isUnsigned: true)
!543 = !DIEnumerator(name: "WandEvent", value: 65536, isUnsigned: true)
!544 = !DIEnumerator(name: "X11Event", value: 131072, isUnsigned: true)
!545 = !DIEnumerator(name: "AccelerateEvent", value: 262144, isUnsigned: true)
!546 = !DIEnumerator(name: "AllEvents", value: 2147483647, isUnsigned: true)
!547 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !20, line: 103, baseType: !5, size: 32, elements: !548)
!548 = !{!549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564}
!549 = !DIEnumerator(name: "UndefinedPrimitive", value: 0, isUnsigned: true)
!550 = !DIEnumerator(name: "PointPrimitive", value: 1, isUnsigned: true)
!551 = !DIEnumerator(name: "LinePrimitive", value: 2, isUnsigned: true)
!552 = !DIEnumerator(name: "RectanglePrimitive", value: 3, isUnsigned: true)
!553 = !DIEnumerator(name: "RoundRectanglePrimitive", value: 4, isUnsigned: true)
!554 = !DIEnumerator(name: "ArcPrimitive", value: 5, isUnsigned: true)
!555 = !DIEnumerator(name: "EllipsePrimitive", value: 6, isUnsigned: true)
!556 = !DIEnumerator(name: "CirclePrimitive", value: 7, isUnsigned: true)
!557 = !DIEnumerator(name: "PolylinePrimitive", value: 8, isUnsigned: true)
!558 = !DIEnumerator(name: "PolygonPrimitive", value: 9, isUnsigned: true)
!559 = !DIEnumerator(name: "BezierPrimitive", value: 10, isUnsigned: true)
!560 = !DIEnumerator(name: "ColorPrimitive", value: 11, isUnsigned: true)
!561 = !DIEnumerator(name: "MattePrimitive", value: 12, isUnsigned: true)
!562 = !DIEnumerator(name: "TextPrimitive", value: 13, isUnsigned: true)
!563 = !DIEnumerator(name: "ImagePrimitive", value: 14, isUnsigned: true)
!564 = !DIEnumerator(name: "PathPrimitive", value: 15, isUnsigned: true)
!565 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !20, line: 93, baseType: !5, size: 32, elements: !566)
!566 = !{!567, !568, !569, !570, !571, !572}
!567 = !DIEnumerator(name: "UndefinedMethod", value: 0, isUnsigned: true)
!568 = !DIEnumerator(name: "PointMethod", value: 1, isUnsigned: true)
!569 = !DIEnumerator(name: "ReplaceMethod", value: 2, isUnsigned: true)
!570 = !DIEnumerator(name: "FloodfillMethod", value: 3, isUnsigned: true)
!571 = !DIEnumerator(name: "FillToBorderMethod", value: 4, isUnsigned: true)
!572 = !DIEnumerator(name: "ResetMethod", value: 5, isUnsigned: true)
!573 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !574, line: 25, baseType: !575, size: 32, elements: !576)
!574 = !DIFile(filename: "./magick/option.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!575 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!576 = !{!577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648}
!577 = !DIEnumerator(name: "MagickUndefinedOptions", value: -1)
!578 = !DIEnumerator(name: "MagickAlignOptions", value: 0)
!579 = !DIEnumerator(name: "MagickAlphaOptions", value: 1)
!580 = !DIEnumerator(name: "MagickBooleanOptions", value: 2)
!581 = !DIEnumerator(name: "MagickCacheOptions", value: 3)
!582 = !DIEnumerator(name: "MagickChannelOptions", value: 4)
!583 = !DIEnumerator(name: "MagickClassOptions", value: 5)
!584 = !DIEnumerator(name: "MagickClipPathOptions", value: 6)
!585 = !DIEnumerator(name: "MagickCoderOptions", value: 7)
!586 = !DIEnumerator(name: "MagickColorOptions", value: 8)
!587 = !DIEnumerator(name: "MagickColorspaceOptions", value: 9)
!588 = !DIEnumerator(name: "MagickCommandOptions", value: 10)
!589 = !DIEnumerator(name: "MagickComposeOptions", value: 11)
!590 = !DIEnumerator(name: "MagickCompressOptions", value: 12)
!591 = !DIEnumerator(name: "MagickConfigureOptions", value: 13)
!592 = !DIEnumerator(name: "MagickDataTypeOptions", value: 14)
!593 = !DIEnumerator(name: "MagickDebugOptions", value: 15)
!594 = !DIEnumerator(name: "MagickDecorateOptions", value: 16)
!595 = !DIEnumerator(name: "MagickDelegateOptions", value: 17)
!596 = !DIEnumerator(name: "MagickDirectionOptions", value: 18)
!597 = !DIEnumerator(name: "MagickDisposeOptions", value: 19)
!598 = !DIEnumerator(name: "MagickDistortOptions", value: 20)
!599 = !DIEnumerator(name: "MagickDitherOptions", value: 21)
!600 = !DIEnumerator(name: "MagickEndianOptions", value: 22)
!601 = !DIEnumerator(name: "MagickEvaluateOptions", value: 23)
!602 = !DIEnumerator(name: "MagickFillRuleOptions", value: 24)
!603 = !DIEnumerator(name: "MagickFilterOptions", value: 25)
!604 = !DIEnumerator(name: "MagickFontOptions", value: 26)
!605 = !DIEnumerator(name: "MagickFontsOptions", value: 27)
!606 = !DIEnumerator(name: "MagickFormatOptions", value: 28)
!607 = !DIEnumerator(name: "MagickFunctionOptions", value: 29)
!608 = !DIEnumerator(name: "MagickGravityOptions", value: 30)
!609 = !DIEnumerator(name: "MagickIntentOptions", value: 31)
!610 = !DIEnumerator(name: "MagickInterlaceOptions", value: 32)
!611 = !DIEnumerator(name: "MagickInterpolateOptions", value: 33)
!612 = !DIEnumerator(name: "MagickKernelOptions", value: 34)
!613 = !DIEnumerator(name: "MagickLayerOptions", value: 35)
!614 = !DIEnumerator(name: "MagickLineCapOptions", value: 36)
!615 = !DIEnumerator(name: "MagickLineJoinOptions", value: 37)
!616 = !DIEnumerator(name: "MagickListOptions", value: 38)
!617 = !DIEnumerator(name: "MagickLocaleOptions", value: 39)
!618 = !DIEnumerator(name: "MagickLogEventOptions", value: 40)
!619 = !DIEnumerator(name: "MagickLogOptions", value: 41)
!620 = !DIEnumerator(name: "MagickMagicOptions", value: 42)
!621 = !DIEnumerator(name: "MagickMethodOptions", value: 43)
!622 = !DIEnumerator(name: "MagickMetricOptions", value: 44)
!623 = !DIEnumerator(name: "MagickMimeOptions", value: 45)
!624 = !DIEnumerator(name: "MagickModeOptions", value: 46)
!625 = !DIEnumerator(name: "MagickModuleOptions", value: 47)
!626 = !DIEnumerator(name: "MagickMorphologyOptions", value: 48)
!627 = !DIEnumerator(name: "MagickNoiseOptions", value: 49)
!628 = !DIEnumerator(name: "MagickOrientationOptions", value: 50)
!629 = !DIEnumerator(name: "MagickPixelIntensityOptions", value: 51)
!630 = !DIEnumerator(name: "MagickPolicyOptions", value: 52)
!631 = !DIEnumerator(name: "MagickPolicyDomainOptions", value: 53)
!632 = !DIEnumerator(name: "MagickPolicyRightsOptions", value: 54)
!633 = !DIEnumerator(name: "MagickPreviewOptions", value: 55)
!634 = !DIEnumerator(name: "MagickPrimitiveOptions", value: 56)
!635 = !DIEnumerator(name: "MagickQuantumFormatOptions", value: 57)
!636 = !DIEnumerator(name: "MagickResolutionOptions", value: 58)
!637 = !DIEnumerator(name: "MagickResourceOptions", value: 59)
!638 = !DIEnumerator(name: "MagickSparseColorOptions", value: 60)
!639 = !DIEnumerator(name: "MagickStatisticOptions", value: 61)
!640 = !DIEnumerator(name: "MagickStorageOptions", value: 62)
!641 = !DIEnumerator(name: "MagickStretchOptions", value: 63)
!642 = !DIEnumerator(name: "MagickStyleOptions", value: 64)
!643 = !DIEnumerator(name: "MagickThresholdOptions", value: 65)
!644 = !DIEnumerator(name: "MagickTypeOptions", value: 66)
!645 = !DIEnumerator(name: "MagickValidateOptions", value: 67)
!646 = !DIEnumerator(name: "MagickVirtualPixelOptions", value: 68)
!647 = !DIEnumerator(name: "MagickComplexOptions", value: 69)
!648 = !DIEnumerator(name: "MagickIntensityOptions", value: 70)
!649 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !104, line: 30, baseType: !5, size: 32, elements: !650)
!650 = !{!651, !652, !653, !654, !655, !656, !657, !658, !659, !660, !661, !662, !663}
!651 = !DIEnumerator(name: "UndefinedAlphaChannel", value: 0, isUnsigned: true)
!652 = !DIEnumerator(name: "ActivateAlphaChannel", value: 1, isUnsigned: true)
!653 = !DIEnumerator(name: "BackgroundAlphaChannel", value: 2, isUnsigned: true)
!654 = !DIEnumerator(name: "CopyAlphaChannel", value: 3, isUnsigned: true)
!655 = !DIEnumerator(name: "DeactivateAlphaChannel", value: 4, isUnsigned: true)
!656 = !DIEnumerator(name: "ExtractAlphaChannel", value: 5, isUnsigned: true)
!657 = !DIEnumerator(name: "OpaqueAlphaChannel", value: 6, isUnsigned: true)
!658 = !DIEnumerator(name: "ResetAlphaChannel", value: 7, isUnsigned: true)
!659 = !DIEnumerator(name: "SetAlphaChannel", value: 8, isUnsigned: true)
!660 = !DIEnumerator(name: "ShapeAlphaChannel", value: 9, isUnsigned: true)
!661 = !DIEnumerator(name: "TransparentAlphaChannel", value: 10, isUnsigned: true)
!662 = !DIEnumerator(name: "FlattenAlphaChannel", value: 11, isUnsigned: true)
!663 = !DIEnumerator(name: "RemoveAlphaChannel", value: 12, isUnsigned: true)
!664 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1, line: 143, baseType: !5, size: 32, elements: !665)
!665 = !{!666, !667, !668, !669, !670}
!666 = !DIEnumerator(name: "MoveToCode", value: 0, isUnsigned: true)
!667 = !DIEnumerator(name: "OpenCode", value: 1, isUnsigned: true)
!668 = !DIEnumerator(name: "GhostlineCode", value: 2, isUnsigned: true)
!669 = !DIEnumerator(name: "LineToCode", value: 3, isUnsigned: true)
!670 = !DIEnumerator(name: "EndCode", value: 4, isUnsigned: true)
!671 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !672, line: 25, baseType: !5, size: 32, elements: !673)
!672 = !DIFile(filename: "./magick/resource_.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!673 = !{!674, !675, !676, !677, !678, !679, !680, !681, !682}
!674 = !DIEnumerator(name: "UndefinedResource", value: 0, isUnsigned: true)
!675 = !DIEnumerator(name: "AreaResource", value: 1, isUnsigned: true)
!676 = !DIEnumerator(name: "DiskResource", value: 2, isUnsigned: true)
!677 = !DIEnumerator(name: "FileResource", value: 3, isUnsigned: true)
!678 = !DIEnumerator(name: "MapResource", value: 4, isUnsigned: true)
!679 = !DIEnumerator(name: "MemoryResource", value: 5, isUnsigned: true)
!680 = !DIEnumerator(name: "ThreadResource", value: 6, isUnsigned: true)
!681 = !DIEnumerator(name: "TimeResource", value: 7, isUnsigned: true)
!682 = !DIEnumerator(name: "ThrottleResource", value: 8, isUnsigned: true)
!683 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !684, line: 46, baseType: !5, size: 32, elements: !685)
!684 = !DIFile(filename: "/usr/include/ctype.h", directory: "")
!685 = !{!686, !687, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697}
!686 = !DIEnumerator(name: "_ISupper", value: 256, isUnsigned: true)
!687 = !DIEnumerator(name: "_ISlower", value: 512, isUnsigned: true)
!688 = !DIEnumerator(name: "_ISalpha", value: 1024, isUnsigned: true)
!689 = !DIEnumerator(name: "_ISdigit", value: 2048, isUnsigned: true)
!690 = !DIEnumerator(name: "_ISxdigit", value: 4096, isUnsigned: true)
!691 = !DIEnumerator(name: "_ISspace", value: 8192, isUnsigned: true)
!692 = !DIEnumerator(name: "_ISprint", value: 16384, isUnsigned: true)
!693 = !DIEnumerator(name: "_ISgraph", value: 32768, isUnsigned: true)
!694 = !DIEnumerator(name: "_ISblank", value: 1, isUnsigned: true)
!695 = !DIEnumerator(name: "_IScntrl", value: 2, isUnsigned: true)
!696 = !DIEnumerator(name: "_ISpunct", value: 4, isUnsigned: true)
!697 = !DIEnumerator(name: "_ISalnum", value: 8, isUnsigned: true)
!698 = !{!699, !841, !714, !575, !1051, !704, !801, !1025, !712, !764, !728, !717, !819, !904, !741, !1183, !1184, !1195, !996, !1029, !1004, !1050, !781, !1014, !1012, !735, !864, !1196, !998, !1000, !1020, !1193, !910, !899, !1197, !1200, !1199, !1201, !1220, !1202, !1207, !1214, !1227, !960, !742}
!699 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !700, size: 64)
!700 = !DIDerivedType(tag: DW_TAG_typedef, name: "DrawInfo", file: !20, line: 333, baseType: !701)
!701 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_DrawInfo", file: !20, line: 205, size: 5760, elements: !702)
!702 = !{!703, !706, !707, !723, !734, !736, !746, !747, !748, !800, !991, !992, !993, !994, !995, !997, !999, !1001, !1002, !1003, !1005, !1006, !1007, !1008, !1009, !1010, !1011, !1013, !1015, !1016, !1017, !1018, !1019, !1021, !1022, !1023, !1024, !1026, !1027, !1028, !1030, !1031, !1032, !1044, !1045, !1046, !1047, !1048, !1049}
!703 = !DIDerivedType(tag: DW_TAG_member, name: "primitive", scope: !701, file: !20, line: 208, baseType: !704, size: 64)
!704 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !705, size: 64)
!705 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "geometry", scope: !701, file: !20, line: 209, baseType: !704, size: 64, offset: 64)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "viewbox", scope: !701, file: !20, line: 212, baseType: !708, size: 256, offset: 128)
!708 = !DIDerivedType(tag: DW_TAG_typedef, name: "RectangleInfo", file: !4, line: 130, baseType: !709)
!709 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_RectangleInfo", file: !4, line: 121, size: 256, elements: !710)
!710 = !{!711, !715, !716, !722}
!711 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !709, file: !4, line: 124, baseType: !712, size: 64)
!712 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !713, line: 46, baseType: !714)
!713 = !DIFile(filename: "Rohit/IR2Vec-LoopOptimizationFramework/build_REL_AsrtON/lib/clang/10.0.1/include/stddef.h", directory: "/home/venkat/IF-DV")
!714 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !709, file: !4, line: 125, baseType: !712, size: 64, offset: 64)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !709, file: !4, line: 128, baseType: !717, size: 64, offset: 128)
!717 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !718, line: 77, baseType: !719)
!718 = !DIFile(filename: "/usr/include/stdio.h", directory: "")
!719 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !720, line: 193, baseType: !721)
!720 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!721 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !709, file: !4, line: 129, baseType: !717, size: 64, offset: 192)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "affine", scope: !701, file: !20, line: 215, baseType: !724, size: 384, offset: 384)
!724 = !DIDerivedType(tag: DW_TAG_typedef, name: "AffineMatrix", file: !4, line: 102, baseType: !725)
!725 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_AffineMatrix", file: !4, line: 93, size: 384, elements: !726)
!726 = !{!727, !729, !730, !731, !732, !733}
!727 = !DIDerivedType(tag: DW_TAG_member, name: "sx", scope: !725, file: !4, line: 96, baseType: !728, size: 64)
!728 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "rx", scope: !725, file: !4, line: 97, baseType: !728, size: 64, offset: 64)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "ry", scope: !725, file: !4, line: 98, baseType: !728, size: 64, offset: 128)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "sy", scope: !725, file: !4, line: 99, baseType: !728, size: 64, offset: 192)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "tx", scope: !725, file: !4, line: 100, baseType: !728, size: 64, offset: 256)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "ty", scope: !725, file: !4, line: 101, baseType: !728, size: 64, offset: 320)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !701, file: !20, line: 218, baseType: !735, size: 32, offset: 768)
!735 = !DIDerivedType(tag: DW_TAG_typedef, name: "GravityType", file: !4, line: 91, baseType: !3)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "fill", scope: !701, file: !20, line: 221, baseType: !737, size: 64, offset: 800)
!737 = !DIDerivedType(tag: DW_TAG_typedef, name: "PixelPacket", file: !338, line: 148, baseType: !738)
!738 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_PixelPacket", file: !338, line: 131, size: 64, elements: !739)
!739 = !{!740, !743, !744, !745}
!740 = !DIDerivedType(tag: DW_TAG_member, name: "blue", scope: !738, file: !338, line: 143, baseType: !741, size: 16)
!741 = !DIDerivedType(tag: DW_TAG_typedef, name: "Quantum", file: !26, line: 93, baseType: !742)
!742 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "green", scope: !738, file: !338, line: 144, baseType: !741, size: 16, offset: 16)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "red", scope: !738, file: !338, line: 145, baseType: !741, size: 16, offset: 32)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "opacity", scope: !738, file: !338, line: 146, baseType: !741, size: 16, offset: 48)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "stroke", scope: !701, file: !20, line: 222, baseType: !737, size: 64, offset: 864)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "stroke_width", scope: !701, file: !20, line: 225, baseType: !728, size: 64, offset: 960)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "gradient", scope: !701, file: !20, line: 228, baseType: !749, size: 1024, offset: 1024)
!749 = !DIDerivedType(tag: DW_TAG_typedef, name: "GradientInfo", file: !20, line: 184, baseType: !750)
!750 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_GradientInfo", file: !20, line: 153, size: 1024, elements: !751)
!751 = !{!752, !754, !755, !763, !788, !789, !791, !792, !793, !799}
!752 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !750, file: !20, line: 156, baseType: !753, size: 32)
!753 = !DIDerivedType(tag: DW_TAG_typedef, name: "GradientType", file: !20, line: 75, baseType: !19)
!754 = !DIDerivedType(tag: DW_TAG_member, name: "bounding_box", scope: !750, file: !20, line: 159, baseType: !708, size: 256, offset: 64)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "gradient_vector", scope: !750, file: !20, line: 162, baseType: !756, size: 256, offset: 320)
!756 = !DIDerivedType(tag: DW_TAG_typedef, name: "SegmentInfo", file: !104, line: 110, baseType: !757)
!757 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_SegmentInfo", file: !104, line: 103, size: 256, elements: !758)
!758 = !{!759, !760, !761, !762}
!759 = !DIDerivedType(tag: DW_TAG_member, name: "x1", scope: !757, file: !104, line: 106, baseType: !728, size: 64)
!760 = !DIDerivedType(tag: DW_TAG_member, name: "y1", scope: !757, file: !104, line: 107, baseType: !728, size: 64, offset: 64)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "x2", scope: !757, file: !104, line: 108, baseType: !728, size: 64, offset: 128)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "y2", scope: !757, file: !104, line: 109, baseType: !728, size: 64, offset: 192)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "stops", scope: !750, file: !20, line: 165, baseType: !764, size: 64, offset: 576)
!764 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !765, size: 64)
!765 = !DIDerivedType(tag: DW_TAG_typedef, name: "StopInfo", file: !20, line: 151, baseType: !766)
!766 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_StopInfo", file: !20, line: 144, size: 512, elements: !767)
!767 = !{!768, !787}
!768 = !DIDerivedType(tag: DW_TAG_member, name: "color", scope: !766, file: !20, line: 147, baseType: !769, size: 448)
!769 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickPixelPacket", file: !338, line: 127, baseType: !770)
!770 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_MagickPixelPacket", file: !338, line: 104, size: 448, elements: !771)
!771 = !{!772, !774, !776, !778, !779, !780, !783, !784, !785, !786}
!772 = !DIDerivedType(tag: DW_TAG_member, name: "storage_class", scope: !770, file: !338, line: 107, baseType: !773, size: 32)
!773 = !DIDerivedType(tag: DW_TAG_typedef, name: "ClassType", file: !26, line: 209, baseType: !25)
!774 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !770, file: !338, line: 110, baseType: !775, size: 32, offset: 32)
!775 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorspaceType", file: !32, line: 61, baseType: !31)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "matte", scope: !770, file: !338, line: 113, baseType: !777, size: 32, offset: 64)
!777 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickBooleanType", file: !26, line: 215, baseType: !68)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "fuzz", scope: !770, file: !338, line: 116, baseType: !728, size: 64, offset: 128)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !770, file: !338, line: 119, baseType: !712, size: 64, offset: 192)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "red", scope: !770, file: !338, line: 122, baseType: !781, size: 32, offset: 256)
!781 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickRealType", file: !26, line: 78, baseType: !782)
!782 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "green", scope: !770, file: !338, line: 123, baseType: !781, size: 32, offset: 288)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "blue", scope: !770, file: !338, line: 124, baseType: !781, size: 32, offset: 320)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "opacity", scope: !770, file: !338, line: 125, baseType: !781, size: 32, offset: 352)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !770, file: !338, line: 126, baseType: !781, size: 32, offset: 384)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !766, file: !20, line: 150, baseType: !781, size: 32, offset: 448)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "number_stops", scope: !750, file: !20, line: 168, baseType: !712, size: 64, offset: 640)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "spread", scope: !750, file: !20, line: 171, baseType: !790, size: 32, offset: 704)
!790 = !DIDerivedType(tag: DW_TAG_typedef, name: "SpreadMethod", file: !20, line: 135, baseType: !72)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !750, file: !20, line: 174, baseType: !777, size: 32, offset: 736)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !750, file: !20, line: 177, baseType: !712, size: 64, offset: 768)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "center", scope: !750, file: !20, line: 180, baseType: !794, size: 128, offset: 832)
!794 = !DIDerivedType(tag: DW_TAG_typedef, name: "PointInfo", file: !20, line: 142, baseType: !795)
!795 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_PointInfo", file: !20, line: 137, size: 128, elements: !796)
!796 = !{!797, !798}
!797 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !795, file: !20, line: 140, baseType: !728, size: 64)
!798 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !795, file: !20, line: 141, baseType: !728, size: 64, offset: 64)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "radius", scope: !750, file: !20, line: 183, baseType: !781, size: 32, offset: 960)
!800 = !DIDerivedType(tag: DW_TAG_member, name: "fill_pattern", scope: !701, file: !20, line: 231, baseType: !801, size: 64, offset: 2048)
!801 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !802, size: 64)
!802 = !DIDerivedType(tag: DW_TAG_typedef, name: "Image", file: !26, line: 221, baseType: !803)
!803 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Image", file: !104, line: 150, size: 105920, elements: !804)
!804 = !{!805, !806, !807, !809, !810, !812, !813, !814, !815, !816, !817, !818, !820, !821, !822, !823, !824, !838, !840, !842, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !858, !860, !862, !863, !865, !867, !869, !870, !871, !872, !873, !874, !875, !883, !898, !912, !913, !914, !915, !919, !923, !927, !928, !929, !930, !931, !948, !949, !951, !952, !962, !963, !965, !966, !967, !968, !969, !970, !972, !973, !974, !975, !976, !977, !978, !980, !981, !982, !983, !984, !988, !990}
!805 = !DIDerivedType(tag: DW_TAG_member, name: "storage_class", scope: !803, file: !104, line: 153, baseType: !773, size: 32)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !803, file: !104, line: 156, baseType: !775, size: 32, offset: 32)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "compression", scope: !803, file: !104, line: 159, baseType: !808, size: 32, offset: 64)
!808 = !DIDerivedType(tag: DW_TAG_typedef, name: "CompressionType", file: !79, line: 49, baseType: !78)
!809 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !803, file: !104, line: 162, baseType: !712, size: 64, offset: 128)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "orientation", scope: !803, file: !104, line: 165, baseType: !811, size: 32, offset: 192)
!811 = !DIDerivedType(tag: DW_TAG_typedef, name: "OrientationType", file: !104, line: 86, baseType: !103)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "taint", scope: !803, file: !104, line: 168, baseType: !777, size: 32, offset: 224)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "matte", scope: !803, file: !104, line: 169, baseType: !777, size: 32, offset: 256)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "columns", scope: !803, file: !104, line: 172, baseType: !712, size: 64, offset: 320)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "rows", scope: !803, file: !104, line: 173, baseType: !712, size: 64, offset: 384)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !803, file: !104, line: 174, baseType: !712, size: 64, offset: 448)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "colors", scope: !803, file: !104, line: 175, baseType: !712, size: 64, offset: 512)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "colormap", scope: !803, file: !104, line: 178, baseType: !819, size: 64, offset: 576)
!819 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !737, size: 64)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "background_color", scope: !803, file: !104, line: 179, baseType: !737, size: 64, offset: 640)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "border_color", scope: !803, file: !104, line: 180, baseType: !737, size: 64, offset: 704)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "matte_color", scope: !803, file: !104, line: 181, baseType: !737, size: 64, offset: 768)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !803, file: !104, line: 184, baseType: !728, size: 64, offset: 832)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "chromaticity", scope: !803, file: !104, line: 187, baseType: !825, size: 768, offset: 896)
!825 = !DIDerivedType(tag: DW_TAG_typedef, name: "ChromaticityInfo", file: !104, line: 128, baseType: !826)
!826 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ChromaticityInfo", file: !104, line: 121, size: 768, elements: !827)
!827 = !{!828, !835, !836, !837}
!828 = !DIDerivedType(tag: DW_TAG_member, name: "red_primary", scope: !826, file: !104, line: 124, baseType: !829, size: 192)
!829 = !DIDerivedType(tag: DW_TAG_typedef, name: "PrimaryInfo", file: !104, line: 101, baseType: !830)
!830 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_PrimaryInfo", file: !104, line: 95, size: 192, elements: !831)
!831 = !{!832, !833, !834}
!832 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !830, file: !104, line: 98, baseType: !728, size: 64)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !830, file: !104, line: 99, baseType: !728, size: 64, offset: 64)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "z", scope: !830, file: !104, line: 100, baseType: !728, size: 64, offset: 128)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "green_primary", scope: !826, file: !104, line: 125, baseType: !829, size: 192, offset: 192)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "blue_primary", scope: !826, file: !104, line: 126, baseType: !829, size: 192, offset: 384)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "white_point", scope: !826, file: !104, line: 127, baseType: !829, size: 192, offset: 576)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "rendering_intent", scope: !803, file: !104, line: 190, baseType: !839, size: 32, offset: 1664)
!839 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderingIntent", file: !116, line: 49, baseType: !115)
!840 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !803, file: !104, line: 193, baseType: !841, size: 64, offset: 1728)
!841 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!842 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !803, file: !104, line: 196, baseType: !843, size: 32, offset: 1792)
!843 = !DIDerivedType(tag: DW_TAG_typedef, name: "ResolutionType", file: !104, line: 93, baseType: !123)
!844 = !DIDerivedType(tag: DW_TAG_member, name: "montage", scope: !803, file: !104, line: 199, baseType: !704, size: 64, offset: 1856)
!845 = !DIDerivedType(tag: DW_TAG_member, name: "directory", scope: !803, file: !104, line: 200, baseType: !704, size: 64, offset: 1920)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "geometry", scope: !803, file: !104, line: 201, baseType: !704, size: 64, offset: 1984)
!847 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !803, file: !104, line: 204, baseType: !717, size: 64, offset: 2048)
!848 = !DIDerivedType(tag: DW_TAG_member, name: "x_resolution", scope: !803, file: !104, line: 207, baseType: !728, size: 64, offset: 2112)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "y_resolution", scope: !803, file: !104, line: 208, baseType: !728, size: 64, offset: 2176)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !803, file: !104, line: 211, baseType: !708, size: 256, offset: 2240)
!851 = !DIDerivedType(tag: DW_TAG_member, name: "extract_info", scope: !803, file: !104, line: 212, baseType: !708, size: 256, offset: 2496)
!852 = !DIDerivedType(tag: DW_TAG_member, name: "tile_info", scope: !803, file: !104, line: 213, baseType: !708, size: 256, offset: 2752)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "bias", scope: !803, file: !104, line: 216, baseType: !728, size: 64, offset: 3008)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "blur", scope: !803, file: !104, line: 217, baseType: !728, size: 64, offset: 3072)
!855 = !DIDerivedType(tag: DW_TAG_member, name: "fuzz", scope: !803, file: !104, line: 218, baseType: !728, size: 64, offset: 3136)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !803, file: !104, line: 221, baseType: !857, size: 32, offset: 3200)
!857 = !DIDerivedType(tag: DW_TAG_typedef, name: "FilterTypes", file: !129, line: 66, baseType: !128)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "interlace", scope: !803, file: !104, line: 224, baseType: !859, size: 32, offset: 3232)
!859 = !DIDerivedType(tag: DW_TAG_typedef, name: "InterlaceType", file: !104, line: 73, baseType: !163)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "endian", scope: !803, file: !104, line: 227, baseType: !861, size: 32, offset: 3264)
!861 = !DIDerivedType(tag: DW_TAG_typedef, name: "EndianType", file: !174, line: 35, baseType: !173)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !803, file: !104, line: 230, baseType: !735, size: 32, offset: 3296)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "compose", scope: !803, file: !104, line: 233, baseType: !864, size: 32, offset: 3328)
!864 = !DIDerivedType(tag: DW_TAG_typedef, name: "CompositeOperator", file: !180, line: 99, baseType: !179)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "dispose", scope: !803, file: !104, line: 236, baseType: !866, size: 32, offset: 3360)
!866 = !DIDerivedType(tag: DW_TAG_typedef, name: "DisposeType", file: !251, line: 32, baseType: !250)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "clip_mask", scope: !803, file: !104, line: 239, baseType: !868, size: 64, offset: 3392)
!868 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !803, size: 64)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !803, file: !104, line: 242, baseType: !712, size: 64, offset: 3456)
!870 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !803, file: !104, line: 243, baseType: !712, size: 64, offset: 3520)
!871 = !DIDerivedType(tag: DW_TAG_member, name: "ticks_per_second", scope: !803, file: !104, line: 246, baseType: !717, size: 64, offset: 3584)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "iterations", scope: !803, file: !104, line: 249, baseType: !712, size: 64, offset: 3648)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "total_colors", scope: !803, file: !104, line: 250, baseType: !712, size: 64, offset: 3712)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "start_loop", scope: !803, file: !104, line: 253, baseType: !717, size: 64, offset: 3776)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !803, file: !104, line: 256, baseType: !876, size: 192, offset: 3840)
!876 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorInfo", file: !877, line: 68, baseType: !878)
!877 = !DIFile(filename: "./magick/color.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!878 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ErrorInfo", file: !877, line: 62, size: 192, elements: !879)
!879 = !{!880, !881, !882}
!880 = !DIDerivedType(tag: DW_TAG_member, name: "mean_error_per_pixel", scope: !878, file: !877, line: 65, baseType: !728, size: 64)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "normalized_mean_error", scope: !878, file: !877, line: 66, baseType: !728, size: 64, offset: 64)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "normalized_maximum_error", scope: !878, file: !877, line: 67, baseType: !728, size: 64, offset: 128)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !803, file: !104, line: 259, baseType: !884, size: 512, offset: 4032)
!884 = !DIDerivedType(tag: DW_TAG_typedef, name: "TimerInfo", file: !259, line: 51, baseType: !885)
!885 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_TimerInfo", file: !259, line: 40, size: 512, elements: !886)
!886 = !{!887, !894, !895, !897}
!887 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !885, file: !259, line: 43, baseType: !888, size: 192)
!888 = !DIDerivedType(tag: DW_TAG_typedef, name: "Timer", file: !259, line: 38, baseType: !889)
!889 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Timer", file: !259, line: 32, size: 192, elements: !890)
!890 = !{!891, !892, !893}
!891 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !889, file: !259, line: 35, baseType: !728, size: 64)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !889, file: !259, line: 36, baseType: !728, size: 64, offset: 64)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "total", scope: !889, file: !259, line: 37, baseType: !728, size: 64, offset: 128)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "elapsed", scope: !885, file: !259, line: 44, baseType: !888, size: 192, offset: 192)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !885, file: !259, line: 47, baseType: !896, size: 32, offset: 384)
!896 = !DIDerivedType(tag: DW_TAG_typedef, name: "TimerState", file: !259, line: 30, baseType: !258)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !885, file: !259, line: 50, baseType: !712, size: 64, offset: 448)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "progress_monitor", scope: !803, file: !104, line: 262, baseType: !899, size: 64, offset: 4544)
!899 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickProgressMonitor", file: !900, line: 26, baseType: !901)
!900 = !DIFile(filename: "./magick/monitor.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!901 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !902, size: 64)
!902 = !DISubroutineType(types: !903)
!903 = !{!777, !904, !906, !909, !841}
!904 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !905, size: 64)
!905 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !705)
!906 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !907)
!907 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickOffsetType", file: !26, line: 150, baseType: !908)
!908 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!909 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !910)
!910 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickSizeType", file: !26, line: 151, baseType: !911)
!911 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "client_data", scope: !803, file: !104, line: 265, baseType: !841, size: 64, offset: 4608)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !803, file: !104, line: 266, baseType: !841, size: 64, offset: 4672)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !803, file: !104, line: 267, baseType: !841, size: 64, offset: 4736)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "ascii85", scope: !803, file: !104, line: 270, baseType: !916, size: 64, offset: 4800)
!916 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !917, size: 64)
!917 = !DIDerivedType(tag: DW_TAG_typedef, name: "Ascii85Info", file: !79, line: 52, baseType: !918)
!918 = !DICompositeType(tag: DW_TAG_structure_type, name: "_Ascii85Info", file: !79, line: 51, flags: DIFlagFwdDecl)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "blob", scope: !803, file: !104, line: 273, baseType: !920, size: 64, offset: 4864)
!920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !921, size: 64)
!921 = !DIDerivedType(tag: DW_TAG_typedef, name: "BlobInfo", file: !26, line: 217, baseType: !922)
!922 = !DICompositeType(tag: DW_TAG_structure_type, name: "_BlobInfo", file: !26, line: 217, flags: DIFlagFwdDecl)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !803, file: !104, line: 276, baseType: !924, size: 32768, offset: 4928)
!924 = !DICompositeType(tag: DW_TAG_array_type, baseType: !705, size: 32768, elements: !925)
!925 = !{!926}
!926 = !DISubrange(count: 4096)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "magick_filename", scope: !803, file: !104, line: 277, baseType: !924, size: 32768, offset: 37696)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "magick", scope: !803, file: !104, line: 278, baseType: !924, size: 32768, offset: 70464)
!929 = !DIDerivedType(tag: DW_TAG_member, name: "magick_columns", scope: !803, file: !104, line: 281, baseType: !712, size: 64, offset: 103232)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "magick_rows", scope: !803, file: !104, line: 282, baseType: !712, size: 64, offset: 103296)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "exception", scope: !803, file: !104, line: 285, baseType: !932, size: 448, offset: 103360)
!932 = !DIDerivedType(tag: DW_TAG_typedef, name: "ExceptionInfo", file: !26, line: 219, baseType: !933)
!933 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ExceptionInfo", file: !265, line: 102, size: 448, elements: !934)
!934 = !{!935, !937, !938, !939, !940, !941, !942, !947}
!935 = !DIDerivedType(tag: DW_TAG_member, name: "severity", scope: !933, file: !265, line: 105, baseType: !936, size: 32)
!936 = !DIDerivedType(tag: DW_TAG_typedef, name: "ExceptionType", file: !265, line: 100, baseType: !264)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "error_number", scope: !933, file: !265, line: 108, baseType: !575, size: 32, offset: 32)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "reason", scope: !933, file: !265, line: 111, baseType: !704, size: 64, offset: 64)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !933, file: !265, line: 112, baseType: !704, size: 64, offset: 128)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "exceptions", scope: !933, file: !265, line: 115, baseType: !841, size: 64, offset: 192)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "relinquish", scope: !933, file: !265, line: 118, baseType: !777, size: 32, offset: 256)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "semaphore", scope: !933, file: !265, line: 121, baseType: !943, size: 64, offset: 320)
!943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !944, size: 64)
!944 = !DIDerivedType(tag: DW_TAG_typedef, name: "SemaphoreInfo", file: !945, line: 26, baseType: !946)
!945 = !DIFile(filename: "./magick/semaphore.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!946 = !DICompositeType(tag: DW_TAG_structure_type, name: "SemaphoreInfo", file: !945, line: 25, flags: DIFlagFwdDecl)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !933, file: !265, line: 124, baseType: !712, size: 64, offset: 384)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !803, file: !104, line: 288, baseType: !777, size: 32, offset: 103808)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "reference_count", scope: !803, file: !104, line: 291, baseType: !950, size: 64, offset: 103872)
!950 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !717)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "semaphore", scope: !803, file: !104, line: 294, baseType: !943, size: 64, offset: 103936)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "color_profile", scope: !803, file: !104, line: 297, baseType: !953, size: 256, offset: 104000)
!953 = !DIDerivedType(tag: DW_TAG_typedef, name: "ProfileInfo", file: !116, line: 40, baseType: !954)
!954 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ProfileInfo", file: !116, line: 27, size: 256, elements: !955)
!955 = !{!956, !957, !958, !961}
!956 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !954, file: !116, line: 30, baseType: !704, size: 64)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !954, file: !116, line: 33, baseType: !712, size: 64, offset: 64)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !954, file: !116, line: 36, baseType: !959, size: 64, offset: 128)
!959 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !960, size: 64)
!960 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !954, file: !116, line: 39, baseType: !712, size: 64, offset: 192)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "iptc_profile", scope: !803, file: !104, line: 298, baseType: !953, size: 256, offset: 104256)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "generic_profile", scope: !803, file: !104, line: 299, baseType: !964, size: 64, offset: 104512)
!964 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !953, size: 64)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "generic_profiles", scope: !803, file: !104, line: 302, baseType: !712, size: 64, offset: 104576)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !803, file: !104, line: 305, baseType: !712, size: 64, offset: 104640)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "previous", scope: !803, file: !104, line: 308, baseType: !868, size: 64, offset: 104704)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !803, file: !104, line: 309, baseType: !868, size: 64, offset: 104768)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !803, file: !104, line: 310, baseType: !868, size: 64, offset: 104832)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "interpolate", scope: !803, file: !104, line: 313, baseType: !971, size: 32, offset: 104896)
!971 = !DIDerivedType(tag: DW_TAG_typedef, name: "InterpolatePixelMethod", file: !338, line: 47, baseType: !337)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "black_point_compensation", scope: !803, file: !104, line: 316, baseType: !777, size: 32, offset: 104928)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_color", scope: !803, file: !104, line: 319, baseType: !737, size: 64, offset: 104960)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !803, file: !104, line: 322, baseType: !868, size: 64, offset: 105024)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "tile_offset", scope: !803, file: !104, line: 325, baseType: !708, size: 256, offset: 105088)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !803, file: !104, line: 328, baseType: !841, size: 64, offset: 105344)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "artifacts", scope: !803, file: !104, line: 329, baseType: !841, size: 64, offset: 105408)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !803, file: !104, line: 332, baseType: !979, size: 32, offset: 105472)
!979 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImageType", file: !104, line: 61, baseType: !354)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "dither", scope: !803, file: !104, line: 335, baseType: !777, size: 32, offset: 105504)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "extent", scope: !803, file: !104, line: 338, baseType: !910, size: 64, offset: 105536)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "ping", scope: !803, file: !104, line: 341, baseType: !777, size: 32, offset: 105600)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !803, file: !104, line: 344, baseType: !712, size: 64, offset: 105664)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp", scope: !803, file: !104, line: 347, baseType: !985, size: 64, offset: 105728)
!985 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !986, line: 7, baseType: !987)
!986 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/time_t.h", directory: "")
!987 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !720, line: 160, baseType: !721)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "intensity", scope: !803, file: !104, line: 350, baseType: !989, size: 32, offset: 105792)
!989 = !DIDerivedType(tag: DW_TAG_typedef, name: "PixelIntensityMethod", file: !338, line: 79, baseType: !368)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !803, file: !104, line: 353, baseType: !712, size: 64, offset: 105856)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !701, file: !20, line: 232, baseType: !801, size: 64, offset: 2112)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "stroke_pattern", scope: !701, file: !20, line: 233, baseType: !801, size: 64, offset: 2176)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "stroke_antialias", scope: !701, file: !20, line: 236, baseType: !777, size: 32, offset: 2240)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "text_antialias", scope: !701, file: !20, line: 237, baseType: !777, size: 32, offset: 2272)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "fill_rule", scope: !701, file: !20, line: 240, baseType: !996, size: 32, offset: 2304)
!996 = !DIDerivedType(tag: DW_TAG_typedef, name: "FillRule", file: !20, line: 68, baseType: !380)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "linecap", scope: !701, file: !20, line: 243, baseType: !998, size: 32, offset: 2336)
!998 = !DIDerivedType(tag: DW_TAG_typedef, name: "LineCap", file: !20, line: 83, baseType: !385)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "linejoin", scope: !701, file: !20, line: 246, baseType: !1000, size: 32, offset: 2368)
!1000 = !DIDerivedType(tag: DW_TAG_typedef, name: "LineJoin", file: !20, line: 91, baseType: !391)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "miterlimit", scope: !701, file: !20, line: 249, baseType: !712, size: 64, offset: 2432)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "dash_offset", scope: !701, file: !20, line: 252, baseType: !728, size: 64, offset: 2496)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "decorate", scope: !701, file: !20, line: 255, baseType: !1004, size: 32, offset: 2560)
!1004 = !DIDerivedType(tag: DW_TAG_typedef, name: "DecorationType", file: !20, line: 53, baseType: !397)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "compose", scope: !701, file: !20, line: 258, baseType: !864, size: 32, offset: 2592)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !701, file: !20, line: 261, baseType: !704, size: 64, offset: 2624)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "face", scope: !701, file: !20, line: 264, baseType: !712, size: 64, offset: 2688)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "font", scope: !701, file: !20, line: 267, baseType: !704, size: 64, offset: 2752)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "metrics", scope: !701, file: !20, line: 268, baseType: !704, size: 64, offset: 2816)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "family", scope: !701, file: !20, line: 269, baseType: !704, size: 64, offset: 2880)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "style", scope: !701, file: !20, line: 272, baseType: !1012, size: 32, offset: 2944)
!1012 = !DIDerivedType(tag: DW_TAG_typedef, name: "StyleType", file: !405, line: 47, baseType: !404)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "stretch", scope: !701, file: !20, line: 275, baseType: !1014, size: 32, offset: 2976)
!1014 = !DIDerivedType(tag: DW_TAG_typedef, name: "StretchType", file: !405, line: 38, baseType: !412)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !701, file: !20, line: 278, baseType: !712, size: 64, offset: 3008)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "encoding", scope: !701, file: !20, line: 281, baseType: !704, size: 64, offset: 3072)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "pointsize", scope: !701, file: !20, line: 284, baseType: !728, size: 64, offset: 3136)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "density", scope: !701, file: !20, line: 287, baseType: !704, size: 64, offset: 3200)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !701, file: !20, line: 290, baseType: !1020, size: 32, offset: 3264)
!1020 = !DIDerivedType(tag: DW_TAG_typedef, name: "AlignType", file: !20, line: 36, baseType: !425)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "undercolor", scope: !701, file: !20, line: 293, baseType: !737, size: 64, offset: 3296)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "border_color", scope: !701, file: !20, line: 294, baseType: !737, size: 64, offset: 3360)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "server_name", scope: !701, file: !20, line: 297, baseType: !704, size: 64, offset: 3456)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "dash_pattern", scope: !701, file: !20, line: 300, baseType: !1025, size: 64, offset: 3520)
!1025 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !728, size: 64)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "clip_mask", scope: !701, file: !20, line: 303, baseType: !704, size: 64, offset: 3584)
!1027 = !DIDerivedType(tag: DW_TAG_member, name: "bounds", scope: !701, file: !20, line: 306, baseType: !756, size: 256, offset: 3648)
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "clip_units", scope: !701, file: !20, line: 309, baseType: !1029, size: 32, offset: 3904)
!1029 = !DIDerivedType(tag: DW_TAG_typedef, name: "ClipPathUnits", file: !20, line: 44, baseType: !431)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "opacity", scope: !701, file: !20, line: 312, baseType: !741, size: 16, offset: 3936)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "render", scope: !701, file: !20, line: 315, baseType: !777, size: 32, offset: 3968)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "element_reference", scope: !701, file: !20, line: 318, baseType: !1033, size: 1344, offset: 4032)
!1033 = !DIDerivedType(tag: DW_TAG_typedef, name: "ElementReference", file: !20, line: 203, baseType: !1034)
!1034 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ElementReference", file: !20, line: 186, size: 1344, elements: !1035)
!1035 = !{!1036, !1037, !1039, !1040, !1041, !1043}
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1034, file: !20, line: 189, baseType: !704, size: 64)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1034, file: !20, line: 192, baseType: !1038, size: 32, offset: 64)
!1038 = !DIDerivedType(tag: DW_TAG_typedef, name: "ReferenceType", file: !20, line: 127, baseType: !437)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "gradient", scope: !1034, file: !20, line: 195, baseType: !749, size: 1024, offset: 128)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !1034, file: !20, line: 198, baseType: !712, size: 64, offset: 1152)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "previous", scope: !1034, file: !20, line: 201, baseType: !1042, size: 64, offset: 1216)
!1042 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1034, size: 64)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1034, file: !20, line: 202, baseType: !1042, size: 64, offset: 1280)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !701, file: !20, line: 321, baseType: !777, size: 32, offset: 5376)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !701, file: !20, line: 324, baseType: !712, size: 64, offset: 5440)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "kerning", scope: !701, file: !20, line: 327, baseType: !728, size: 64, offset: 5504)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "interword_spacing", scope: !701, file: !20, line: 328, baseType: !728, size: 64, offset: 5568)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "interline_spacing", scope: !701, file: !20, line: 329, baseType: !728, size: 64, offset: 5632)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !701, file: !20, line: 332, baseType: !1050, size: 32, offset: 5696)
!1050 = !DIDerivedType(tag: DW_TAG_typedef, name: "DirectionType", file: !20, line: 60, baseType: !441)
!1051 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1052, size: 64)
!1052 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImageInfo", file: !26, line: 223, baseType: !1053)
!1053 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ImageInfo", file: !104, line: 356, size: 134336, elements: !1054)
!1054 = !{!1055, !1056, !1057, !1058, !1059, !1060, !1061, !1062, !1063, !1064, !1065, !1066, !1067, !1068, !1069, !1070, !1071, !1072, !1073, !1074, !1075, !1076, !1077, !1078, !1079, !1080, !1081, !1082, !1083, !1084, !1085, !1086, !1087, !1089, !1090, !1091, !1092, !1093, !1094, !1096, !1097, !1098, !1099, !1100, !1101, !1112, !1166, !1167, !1168, !1169, !1170, !1171, !1172, !1173, !1174, !1175, !1176, !1177, !1178, !1180, !1181, !1182}
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "compression", scope: !1053, file: !104, line: 359, baseType: !808, size: 32)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "orientation", scope: !1053, file: !104, line: 362, baseType: !811, size: 32, offset: 32)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "temporary", scope: !1053, file: !104, line: 365, baseType: !777, size: 32, offset: 64)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "adjoin", scope: !1053, file: !104, line: 366, baseType: !777, size: 32, offset: 96)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "affirm", scope: !1053, file: !104, line: 367, baseType: !777, size: 32, offset: 128)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "antialias", scope: !1053, file: !104, line: 368, baseType: !777, size: 32, offset: 160)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1053, file: !104, line: 371, baseType: !704, size: 64, offset: 192)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "extract", scope: !1053, file: !104, line: 372, baseType: !704, size: 64, offset: 256)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !1053, file: !104, line: 373, baseType: !704, size: 64, offset: 320)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "scenes", scope: !1053, file: !104, line: 374, baseType: !704, size: 64, offset: 384)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1053, file: !104, line: 377, baseType: !712, size: 64, offset: 448)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "number_scenes", scope: !1053, file: !104, line: 378, baseType: !712, size: 64, offset: 512)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1053, file: !104, line: 379, baseType: !712, size: 64, offset: 576)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "interlace", scope: !1053, file: !104, line: 382, baseType: !859, size: 32, offset: 640)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "endian", scope: !1053, file: !104, line: 385, baseType: !861, size: 32, offset: 672)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !1053, file: !104, line: 388, baseType: !843, size: 32, offset: 704)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1053, file: !104, line: 391, baseType: !712, size: 64, offset: 768)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "sampling_factor", scope: !1053, file: !104, line: 394, baseType: !704, size: 64, offset: 832)
!1073 = !DIDerivedType(tag: DW_TAG_member, name: "server_name", scope: !1053, file: !104, line: 395, baseType: !704, size: 64, offset: 896)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "font", scope: !1053, file: !104, line: 396, baseType: !704, size: 64, offset: 960)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "texture", scope: !1053, file: !104, line: 397, baseType: !704, size: 64, offset: 1024)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "density", scope: !1053, file: !104, line: 398, baseType: !704, size: 64, offset: 1088)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "pointsize", scope: !1053, file: !104, line: 401, baseType: !728, size: 64, offset: 1152)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "fuzz", scope: !1053, file: !104, line: 402, baseType: !728, size: 64, offset: 1216)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "background_color", scope: !1053, file: !104, line: 405, baseType: !737, size: 64, offset: 1280)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "border_color", scope: !1053, file: !104, line: 406, baseType: !737, size: 64, offset: 1344)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "matte_color", scope: !1053, file: !104, line: 407, baseType: !737, size: 64, offset: 1408)
!1082 = !DIDerivedType(tag: DW_TAG_member, name: "dither", scope: !1053, file: !104, line: 410, baseType: !777, size: 32, offset: 1472)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "monochrome", scope: !1053, file: !104, line: 411, baseType: !777, size: 32, offset: 1504)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "colors", scope: !1053, file: !104, line: 414, baseType: !712, size: 64, offset: 1536)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1053, file: !104, line: 417, baseType: !775, size: 32, offset: 1600)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1053, file: !104, line: 420, baseType: !979, size: 32, offset: 1632)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "preview_type", scope: !1053, file: !104, line: 423, baseType: !1088, size: 32, offset: 1664)
!1088 = !DIDerivedType(tag: DW_TAG_typedef, name: "PreviewType", file: !447, line: 59, baseType: !446)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !1053, file: !104, line: 426, baseType: !717, size: 64, offset: 1728)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "ping", scope: !1053, file: !104, line: 429, baseType: !777, size: 32, offset: 1792)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "verbose", scope: !1053, file: !104, line: 430, baseType: !777, size: 32, offset: 1824)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "view", scope: !1053, file: !104, line: 433, baseType: !704, size: 64, offset: 1856)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "authenticate", scope: !1053, file: !104, line: 434, baseType: !704, size: 64, offset: 1920)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "channel", scope: !1053, file: !104, line: 437, baseType: !1095, size: 32, offset: 1984)
!1095 = !DIDerivedType(tag: DW_TAG_typedef, name: "ChannelType", file: !26, line: 202, baseType: !479)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1053, file: !104, line: 440, baseType: !801, size: 64, offset: 2048)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "options", scope: !1053, file: !104, line: 443, baseType: !841, size: 64, offset: 2112)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "progress_monitor", scope: !1053, file: !104, line: 446, baseType: !899, size: 64, offset: 2176)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "client_data", scope: !1053, file: !104, line: 449, baseType: !841, size: 64, offset: 2240)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !1053, file: !104, line: 450, baseType: !841, size: 64, offset: 2304)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "stream", scope: !1053, file: !104, line: 453, baseType: !1102, size: 64, offset: 2368)
!1102 = !DIDerivedType(tag: DW_TAG_typedef, name: "StreamHandler", file: !1103, line: 26, baseType: !1104)
!1103 = !DIFile(filename: "./magick/stream.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!1104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1105, size: 64)
!1105 = !DISubroutineType(types: !1106)
!1106 = !{!712, !1107, !1109, !1111}
!1107 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1108, size: 64)
!1108 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !802)
!1109 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1110, size: 64)
!1110 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!1111 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !712)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !1053, file: !104, line: 456, baseType: !1113, size: 64, offset: 2432)
!1113 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1114, size: 64)
!1114 = !DIDerivedType(tag: DW_TAG_typedef, name: "FILE", file: !1115, line: 7, baseType: !1116)
!1115 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/FILE.h", directory: "")
!1116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_FILE", file: !1117, line: 49, size: 1728, elements: !1118)
!1117 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/struct_FILE.h", directory: "")
!1118 = !{!1119, !1120, !1121, !1122, !1123, !1124, !1125, !1126, !1127, !1128, !1129, !1130, !1131, !1134, !1136, !1137, !1138, !1140, !1141, !1143, !1147, !1150, !1152, !1155, !1158, !1159, !1160, !1161, !1162}
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "_flags", scope: !1116, file: !1117, line: 51, baseType: !575, size: 32)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_ptr", scope: !1116, file: !1117, line: 54, baseType: !704, size: 64, offset: 64)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_end", scope: !1116, file: !1117, line: 55, baseType: !704, size: 64, offset: 128)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_read_base", scope: !1116, file: !1117, line: 56, baseType: !704, size: 64, offset: 192)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_base", scope: !1116, file: !1117, line: 57, baseType: !704, size: 64, offset: 256)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_ptr", scope: !1116, file: !1117, line: 58, baseType: !704, size: 64, offset: 320)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_write_end", scope: !1116, file: !1117, line: 59, baseType: !704, size: 64, offset: 384)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_base", scope: !1116, file: !1117, line: 60, baseType: !704, size: 64, offset: 448)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_buf_end", scope: !1116, file: !1117, line: 61, baseType: !704, size: 64, offset: 512)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_base", scope: !1116, file: !1117, line: 64, baseType: !704, size: 64, offset: 576)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_backup_base", scope: !1116, file: !1117, line: 65, baseType: !704, size: 64, offset: 640)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "_IO_save_end", scope: !1116, file: !1117, line: 66, baseType: !704, size: 64, offset: 704)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "_markers", scope: !1116, file: !1117, line: 68, baseType: !1132, size: 64, offset: 768)
!1132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1133, size: 64)
!1133 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_marker", file: !1117, line: 36, flags: DIFlagFwdDecl)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "_chain", scope: !1116, file: !1117, line: 70, baseType: !1135, size: 64, offset: 832)
!1135 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1116, size: 64)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "_fileno", scope: !1116, file: !1117, line: 72, baseType: !575, size: 32, offset: 896)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "_flags2", scope: !1116, file: !1117, line: 73, baseType: !575, size: 32, offset: 928)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "_old_offset", scope: !1116, file: !1117, line: 74, baseType: !1139, size: 64, offset: 960)
!1139 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off_t", file: !720, line: 152, baseType: !721)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "_cur_column", scope: !1116, file: !1117, line: 77, baseType: !742, size: 16, offset: 1024)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "_vtable_offset", scope: !1116, file: !1117, line: 78, baseType: !1142, size: 8, offset: 1040)
!1142 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "_shortbuf", scope: !1116, file: !1117, line: 79, baseType: !1144, size: 8, offset: 1048)
!1144 = !DICompositeType(tag: DW_TAG_array_type, baseType: !705, size: 8, elements: !1145)
!1145 = !{!1146}
!1146 = !DISubrange(count: 1)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "_lock", scope: !1116, file: !1117, line: 81, baseType: !1148, size: 64, offset: 1088)
!1148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1149, size: 64)
!1149 = !DIDerivedType(tag: DW_TAG_typedef, name: "_IO_lock_t", file: !1117, line: 43, baseType: null)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "_offset", scope: !1116, file: !1117, line: 89, baseType: !1151, size: 64, offset: 1152)
!1151 = !DIDerivedType(tag: DW_TAG_typedef, name: "__off64_t", file: !720, line: 153, baseType: !721)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "_codecvt", scope: !1116, file: !1117, line: 91, baseType: !1153, size: 64, offset: 1216)
!1153 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1154, size: 64)
!1154 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_codecvt", file: !1117, line: 37, flags: DIFlagFwdDecl)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "_wide_data", scope: !1116, file: !1117, line: 92, baseType: !1156, size: 64, offset: 1280)
!1156 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1157, size: 64)
!1157 = !DICompositeType(tag: DW_TAG_structure_type, name: "_IO_wide_data", file: !1117, line: 38, flags: DIFlagFwdDecl)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_list", scope: !1116, file: !1117, line: 93, baseType: !1135, size: 64, offset: 1344)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "_freeres_buf", scope: !1116, file: !1117, line: 94, baseType: !841, size: 64, offset: 1408)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "__pad5", scope: !1116, file: !1117, line: 95, baseType: !712, size: 64, offset: 1472)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "_mode", scope: !1116, file: !1117, line: 96, baseType: !575, size: 32, offset: 1536)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "_unused2", scope: !1116, file: !1117, line: 98, baseType: !1163, size: 160, offset: 1568)
!1163 = !DICompositeType(tag: DW_TAG_array_type, baseType: !705, size: 160, elements: !1164)
!1164 = !{!1165}
!1165 = !DISubrange(count: 20)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "blob", scope: !1053, file: !104, line: 459, baseType: !841, size: 64, offset: 2496)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1053, file: !104, line: 462, baseType: !712, size: 64, offset: 2560)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "magick", scope: !1053, file: !104, line: 465, baseType: !924, size: 32768, offset: 2624)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "unique", scope: !1053, file: !104, line: 466, baseType: !924, size: 32768, offset: 35392)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "zero", scope: !1053, file: !104, line: 467, baseType: !924, size: 32768, offset: 68160)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !1053, file: !104, line: 468, baseType: !924, size: 32768, offset: 100928)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !1053, file: !104, line: 471, baseType: !777, size: 32, offset: 133696)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !1053, file: !104, line: 474, baseType: !704, size: 64, offset: 133760)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "subimage", scope: !1053, file: !104, line: 477, baseType: !712, size: 64, offset: 133824)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "subrange", scope: !1053, file: !104, line: 478, baseType: !712, size: 64, offset: 133888)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "pen", scope: !1053, file: !104, line: 481, baseType: !737, size: 64, offset: 133952)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !1053, file: !104, line: 484, baseType: !712, size: 64, offset: 134016)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_pixel_method", scope: !1053, file: !104, line: 487, baseType: !1179, size: 32, offset: 134080)
!1179 = !DIDerivedType(tag: DW_TAG_typedef, name: "VirtualPixelMethod", file: !502, line: 47, baseType: !501)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_color", scope: !1053, file: !104, line: 490, baseType: !737, size: 64, offset: 134112)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "profile", scope: !1053, file: !104, line: 493, baseType: !841, size: 64, offset: 134208)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "synchronize", scope: !1053, file: !104, line: 496, baseType: !777, size: 32, offset: 134272)
!1183 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !699, size: 64)
!1184 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1185, size: 64)
!1185 = !DIDerivedType(tag: DW_TAG_typedef, name: "PrimitiveInfo", file: !20, line: 351, baseType: !1186)
!1186 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_PrimitiveInfo", file: !20, line: 335, size: 320, elements: !1187)
!1187 = !{!1188, !1189, !1190, !1192, !1194}
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "point", scope: !1186, file: !20, line: 338, baseType: !794, size: 128)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "coordinates", scope: !1186, file: !20, line: 341, baseType: !712, size: 64, offset: 128)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "primitive", scope: !1186, file: !20, line: 344, baseType: !1191, size: 32, offset: 192)
!1191 = !DIDerivedType(tag: DW_TAG_typedef, name: "PrimitiveType", file: !20, line: 121, baseType: !547)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "method", scope: !1186, file: !20, line: 347, baseType: !1193, size: 32, offset: 224)
!1193 = !DIDerivedType(tag: DW_TAG_typedef, name: "PaintMethod", file: !20, line: 101, baseType: !565)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !1186, file: !20, line: 350, baseType: !704, size: 64, offset: 256)
!1195 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !704, size: 64)
!1196 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !904, size: 64)
!1197 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1198, size: 64)
!1198 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1199)
!1199 = !DIDerivedType(tag: DW_TAG_typedef, name: "IndexPacket", file: !338, line: 129, baseType: !741)
!1200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1199, size: 64)
!1201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1202, size: 64)
!1202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1203, size: 64)
!1203 = !DIDerivedType(tag: DW_TAG_typedef, name: "PolygonInfo", file: !1, line: 141, baseType: !1204)
!1204 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_PolygonInfo", file: !1, line: 134, size: 128, elements: !1205)
!1205 = !{!1206, !1219}
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "edges", scope: !1204, file: !1, line: 137, baseType: !1207, size: 64)
!1207 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1208, size: 64)
!1208 = !DIDerivedType(tag: DW_TAG_typedef, name: "EdgeInfo", file: !1, line: 122, baseType: !1209)
!1209 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_EdgeInfo", file: !1, line: 100, size: 640, elements: !1210)
!1210 = !{!1211, !1212, !1213, !1215, !1216, !1217, !1218}
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "bounds", scope: !1209, file: !1, line: 103, baseType: !756, size: 256)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "scanline", scope: !1209, file: !1, line: 106, baseType: !728, size: 64, offset: 256)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !1209, file: !1, line: 109, baseType: !1214, size: 64, offset: 320)
!1214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !794, size: 64)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "number_points", scope: !1209, file: !1, line: 112, baseType: !712, size: 64, offset: 384)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "direction", scope: !1209, file: !1, line: 115, baseType: !717, size: 64, offset: 448)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "ghostline", scope: !1209, file: !1, line: 118, baseType: !777, size: 32, offset: 512)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "highwater", scope: !1209, file: !1, line: 121, baseType: !712, size: 64, offset: 576)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "number_edges", scope: !1204, file: !1, line: 140, baseType: !712, size: 64, offset: 64)
!1220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1221, size: 64)
!1221 = !DIDerivedType(tag: DW_TAG_typedef, name: "PathInfo", file: !1, line: 159, baseType: !1222)
!1222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_PathInfo", file: !1, line: 152, size: 192, elements: !1223)
!1223 = !{!1224, !1225}
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "point", scope: !1222, file: !1, line: 155, baseType: !794, size: 128)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1222, file: !1, line: 158, baseType: !1226, size: 32, offset: 128)
!1226 = !DIDerivedType(tag: DW_TAG_typedef, name: "PathInfoCode", file: !1, line: 150, baseType: !664)
!1227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1228, size: 64)
!1228 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1208)
!1229 = !{i32 7, !"Dwarf Version", i32 4}
!1230 = !{i32 2, !"Debug Info Version", i32 3}
!1231 = !{i32 1, !"wchar_size", i32 4}
!1232 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!1233 = distinct !DISubprogram(name: "AcquireDrawInfo", scope: !1, file: !1, line: 206, type: !1234, scopeLine: 207, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1236)
!1234 = !DISubroutineType(types: !1235)
!1235 = !{!699}
!1236 = !{}
!1237 = !DILocalVariable(name: "draw_info", scope: !1233, file: !1, line: 209, type: !699)
!1238 = !DILocation(line: 209, column: 6, scope: !1233)
!1239 = !DILocation(line: 211, column: 26, scope: !1233)
!1240 = !DILocation(line: 211, column: 13, scope: !1233)
!1241 = !DILocation(line: 211, column: 12, scope: !1233)
!1242 = !DILocation(line: 212, column: 7, scope: !1243)
!1243 = distinct !DILexicalBlock(scope: !1233, file: !1, line: 212, column: 7)
!1244 = !DILocation(line: 212, column: 17, scope: !1243)
!1245 = !DILocation(line: 212, column: 7, scope: !1233)
!1246 = !DILocalVariable(name: "message", scope: !1247, file: !1, line: 213, type: !704)
!1247 = distinct !DILexicalBlock(scope: !1243, file: !1, line: 213, column: 5)
!1248 = !DILocation(line: 213, column: 5, scope: !1247)
!1249 = !DILocalVariable(name: "exception", scope: !1247, file: !1, line: 213, type: !932)
!1250 = !DILocation(line: 214, column: 34, scope: !1233)
!1251 = !DILocation(line: 214, column: 3, scope: !1233)
!1252 = !DILocation(line: 215, column: 10, scope: !1233)
!1253 = !DILocation(line: 215, column: 3, scope: !1233)
!1254 = distinct !DISubprogram(name: "GetDrawInfo", scope: !1, file: !1, line: 4811, type: !1255, scopeLine: 4812, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1236)
!1255 = !DISubroutineType(types: !1256)
!1256 = !{null, !1257, !699}
!1257 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1258, size: 64)
!1258 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1052)
!1259 = !DILocalVariable(name: "image_info", arg: 1, scope: !1254, file: !1, line: 4811, type: !1257)
!1260 = !DILocation(line: 4811, column: 48, scope: !1254)
!1261 = !DILocalVariable(name: "draw_info", arg: 2, scope: !1254, file: !1, line: 4811, type: !699)
!1262 = !DILocation(line: 4811, column: 69, scope: !1254)
!1263 = !DILocalVariable(name: "option", scope: !1254, file: !1, line: 4814, type: !904)
!1264 = !DILocation(line: 4814, column: 6, scope: !1254)
!1265 = !DILocalVariable(name: "exception", scope: !1254, file: !1, line: 4817, type: !1266)
!1266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !932, size: 64)
!1267 = !DILocation(line: 4817, column: 6, scope: !1254)
!1268 = !DILocalVariable(name: "clone_info", scope: !1254, file: !1, line: 4820, type: !1051)
!1269 = !DILocation(line: 4820, column: 6, scope: !1254)
!1270 = !DILocation(line: 4825, column: 10, scope: !1254)
!1271 = !DILocation(line: 4827, column: 28, scope: !1254)
!1272 = !DILocation(line: 4827, column: 10, scope: !1254)
!1273 = !DILocation(line: 4828, column: 29, scope: !1254)
!1274 = !DILocation(line: 4828, column: 14, scope: !1254)
!1275 = !DILocation(line: 4828, column: 13, scope: !1254)
!1276 = !DILocation(line: 4829, column: 20, scope: !1254)
!1277 = !DILocation(line: 4829, column: 31, scope: !1254)
!1278 = !DILocation(line: 4829, column: 3, scope: !1254)
!1279 = !DILocation(line: 4830, column: 13, scope: !1254)
!1280 = !DILocation(line: 4830, column: 12, scope: !1254)
!1281 = !DILocation(line: 4831, column: 38, scope: !1254)
!1282 = !DILocation(line: 4831, column: 49, scope: !1254)
!1283 = !DILocation(line: 4831, column: 54, scope: !1254)
!1284 = !DILocation(line: 4831, column: 10, scope: !1254)
!1285 = !DILocation(line: 4832, column: 38, scope: !1254)
!1286 = !DILocation(line: 4832, column: 49, scope: !1254)
!1287 = !DILocation(line: 4832, column: 56, scope: !1254)
!1288 = !DILocation(line: 4832, column: 10, scope: !1254)
!1289 = !DILocation(line: 4833, column: 31, scope: !1254)
!1290 = !DILocation(line: 4833, column: 43, scope: !1254)
!1291 = !DILocation(line: 4833, column: 3, scope: !1254)
!1292 = !DILocation(line: 4833, column: 14, scope: !1254)
!1293 = !DILocation(line: 4833, column: 30, scope: !1254)
!1294 = !DILocation(line: 4834, column: 3, scope: !1254)
!1295 = !DILocation(line: 4834, column: 14, scope: !1254)
!1296 = !DILocation(line: 4834, column: 26, scope: !1254)
!1297 = !DILocation(line: 4835, column: 3, scope: !1254)
!1298 = !DILocation(line: 4835, column: 14, scope: !1254)
!1299 = !DILocation(line: 4835, column: 21, scope: !1254)
!1300 = !DILocation(line: 4836, column: 3, scope: !1254)
!1301 = !DILocation(line: 4836, column: 14, scope: !1254)
!1302 = !DILocation(line: 4836, column: 23, scope: !1254)
!1303 = !DILocation(line: 4837, column: 3, scope: !1254)
!1304 = !DILocation(line: 4837, column: 14, scope: !1254)
!1305 = !DILocation(line: 4837, column: 21, scope: !1254)
!1306 = !DILocation(line: 4838, column: 3, scope: !1254)
!1307 = !DILocation(line: 4838, column: 14, scope: !1254)
!1308 = !DILocation(line: 4838, column: 22, scope: !1254)
!1309 = !DILocation(line: 4839, column: 3, scope: !1254)
!1310 = !DILocation(line: 4839, column: 14, scope: !1254)
!1311 = !DILocation(line: 4839, column: 24, scope: !1254)
!1312 = !DILocation(line: 4840, column: 3, scope: !1254)
!1313 = !DILocation(line: 4840, column: 14, scope: !1254)
!1314 = !DILocation(line: 4840, column: 22, scope: !1254)
!1315 = !DILocation(line: 4841, column: 7, scope: !1316)
!1316 = distinct !DILexicalBlock(scope: !1254, file: !1, line: 4841, column: 7)
!1317 = !DILocation(line: 4841, column: 19, scope: !1316)
!1318 = !DILocation(line: 4841, column: 24, scope: !1316)
!1319 = !DILocation(line: 4841, column: 7, scope: !1254)
!1320 = !DILocation(line: 4842, column: 35, scope: !1316)
!1321 = !DILocation(line: 4842, column: 47, scope: !1316)
!1322 = !DILocation(line: 4842, column: 21, scope: !1316)
!1323 = !DILocation(line: 4842, column: 5, scope: !1316)
!1324 = !DILocation(line: 4842, column: 16, scope: !1316)
!1325 = !DILocation(line: 4842, column: 20, scope: !1316)
!1326 = !DILocation(line: 4843, column: 7, scope: !1327)
!1327 = distinct !DILexicalBlock(scope: !1254, file: !1, line: 4843, column: 7)
!1328 = !DILocation(line: 4843, column: 19, scope: !1327)
!1329 = !DILocation(line: 4843, column: 27, scope: !1327)
!1330 = !DILocation(line: 4843, column: 7, scope: !1254)
!1331 = !DILocation(line: 4844, column: 38, scope: !1327)
!1332 = !DILocation(line: 4844, column: 50, scope: !1327)
!1333 = !DILocation(line: 4844, column: 24, scope: !1327)
!1334 = !DILocation(line: 4844, column: 5, scope: !1327)
!1335 = !DILocation(line: 4844, column: 16, scope: !1327)
!1336 = !DILocation(line: 4844, column: 23, scope: !1327)
!1337 = !DILocation(line: 4845, column: 29, scope: !1254)
!1338 = !DILocation(line: 4845, column: 41, scope: !1254)
!1339 = !DILocation(line: 4845, column: 3, scope: !1254)
!1340 = !DILocation(line: 4845, column: 14, scope: !1254)
!1341 = !DILocation(line: 4845, column: 28, scope: !1254)
!1342 = !DILocation(line: 4846, column: 3, scope: !1254)
!1343 = !DILocation(line: 4846, column: 14, scope: !1254)
!1344 = !DILocation(line: 4846, column: 23, scope: !1254)
!1345 = !DILocation(line: 4847, column: 7, scope: !1346)
!1346 = distinct !DILexicalBlock(scope: !1254, file: !1, line: 4847, column: 7)
!1347 = !DILocation(line: 4847, column: 19, scope: !1346)
!1348 = !DILocation(line: 4847, column: 29, scope: !1346)
!1349 = !DILocation(line: 4847, column: 7, scope: !1254)
!1350 = !DILocation(line: 4848, column: 26, scope: !1346)
!1351 = !DILocation(line: 4848, column: 38, scope: !1346)
!1352 = !DILocation(line: 4848, column: 5, scope: !1346)
!1353 = !DILocation(line: 4848, column: 16, scope: !1346)
!1354 = !DILocation(line: 4848, column: 25, scope: !1346)
!1355 = !DILocation(line: 4849, column: 3, scope: !1254)
!1356 = !DILocation(line: 4849, column: 14, scope: !1254)
!1357 = !DILocation(line: 4849, column: 25, scope: !1254)
!1358 = !DILocation(line: 4849, column: 32, scope: !1254)
!1359 = !DILocation(line: 4850, column: 3, scope: !1254)
!1360 = !DILocation(line: 4850, column: 14, scope: !1254)
!1361 = !DILocation(line: 4850, column: 27, scope: !1254)
!1362 = !DILocation(line: 4850, column: 39, scope: !1254)
!1363 = !DILocation(line: 4851, column: 3, scope: !1254)
!1364 = !DILocation(line: 4851, column: 14, scope: !1254)
!1365 = !DILocation(line: 4851, column: 21, scope: !1254)
!1366 = !DILocation(line: 4852, column: 7, scope: !1367)
!1367 = distinct !DILexicalBlock(scope: !1254, file: !1, line: 4852, column: 7)
!1368 = !DILocation(line: 4852, column: 19, scope: !1367)
!1369 = !DILocation(line: 4852, column: 31, scope: !1367)
!1370 = !DILocation(line: 4852, column: 7, scope: !1254)
!1371 = !DILocation(line: 4853, column: 42, scope: !1367)
!1372 = !DILocation(line: 4853, column: 54, scope: !1367)
!1373 = !DILocation(line: 4853, column: 28, scope: !1367)
!1374 = !DILocation(line: 4853, column: 5, scope: !1367)
!1375 = !DILocation(line: 4853, column: 16, scope: !1367)
!1376 = !DILocation(line: 4853, column: 27, scope: !1367)
!1377 = !DILocation(line: 4854, column: 3, scope: !1254)
!1378 = !DILocation(line: 4854, column: 14, scope: !1254)
!1379 = !DILocation(line: 4854, column: 20, scope: !1254)
!1380 = !DILocation(line: 4855, column: 20, scope: !1254)
!1381 = !DILocation(line: 4855, column: 3, scope: !1254)
!1382 = !DILocation(line: 4855, column: 14, scope: !1254)
!1383 = !DILocation(line: 4855, column: 19, scope: !1254)
!1384 = !DILocation(line: 4856, column: 25, scope: !1254)
!1385 = !DILocation(line: 4856, column: 10, scope: !1254)
!1386 = !DILocation(line: 4856, column: 9, scope: !1254)
!1387 = !DILocation(line: 4857, column: 7, scope: !1388)
!1388 = distinct !DILexicalBlock(scope: !1254, file: !1, line: 4857, column: 7)
!1389 = !DILocation(line: 4857, column: 14, scope: !1388)
!1390 = !DILocation(line: 4857, column: 7, scope: !1254)
!1391 = !DILocation(line: 4858, column: 25, scope: !1388)
!1392 = !DILocation(line: 4858, column: 36, scope: !1388)
!1393 = !DILocation(line: 4858, column: 45, scope: !1388)
!1394 = !DILocation(line: 4858, column: 12, scope: !1388)
!1395 = !DILocation(line: 4858, column: 5, scope: !1388)
!1396 = !DILocation(line: 4859, column: 25, scope: !1254)
!1397 = !DILocation(line: 4859, column: 10, scope: !1254)
!1398 = !DILocation(line: 4859, column: 9, scope: !1254)
!1399 = !DILocation(line: 4860, column: 7, scope: !1400)
!1400 = distinct !DILexicalBlock(scope: !1254, file: !1, line: 4860, column: 7)
!1401 = !DILocation(line: 4860, column: 14, scope: !1400)
!1402 = !DILocation(line: 4860, column: 7, scope: !1254)
!1403 = !DILocation(line: 4861, column: 39, scope: !1400)
!1404 = !DILocation(line: 4861, column: 24, scope: !1400)
!1405 = !DILocation(line: 4861, column: 5, scope: !1400)
!1406 = !DILocation(line: 4861, column: 16, scope: !1400)
!1407 = !DILocation(line: 4861, column: 23, scope: !1400)
!1408 = !DILocation(line: 4862, column: 25, scope: !1254)
!1409 = !DILocation(line: 4862, column: 10, scope: !1254)
!1410 = !DILocation(line: 4862, column: 9, scope: !1254)
!1411 = !DILocation(line: 4863, column: 7, scope: !1412)
!1412 = distinct !DILexicalBlock(scope: !1254, file: !1, line: 4863, column: 7)
!1413 = !DILocation(line: 4863, column: 14, scope: !1412)
!1414 = !DILocation(line: 4863, column: 7, scope: !1254)
!1415 = !DILocation(line: 4864, column: 49, scope: !1412)
!1416 = !DILocation(line: 4864, column: 34, scope: !1412)
!1417 = !DILocation(line: 4864, column: 5, scope: !1412)
!1418 = !DILocation(line: 4864, column: 16, scope: !1412)
!1419 = !DILocation(line: 4864, column: 33, scope: !1412)
!1420 = !DILocation(line: 4865, column: 3, scope: !1254)
!1421 = !DILocation(line: 4865, column: 14, scope: !1254)
!1422 = !DILocation(line: 4865, column: 23, scope: !1254)
!1423 = !DILocation(line: 4866, column: 25, scope: !1254)
!1424 = !DILocation(line: 4866, column: 10, scope: !1254)
!1425 = !DILocation(line: 4866, column: 9, scope: !1254)
!1426 = !DILocation(line: 4867, column: 7, scope: !1427)
!1427 = distinct !DILexicalBlock(scope: !1254, file: !1, line: 4867, column: 7)
!1428 = !DILocation(line: 4867, column: 14, scope: !1427)
!1429 = !DILocation(line: 4867, column: 7, scope: !1254)
!1430 = !DILocation(line: 4868, column: 49, scope: !1427)
!1431 = !DILocation(line: 4868, column: 34, scope: !1427)
!1432 = !DILocation(line: 4868, column: 5, scope: !1427)
!1433 = !DILocation(line: 4868, column: 16, scope: !1427)
!1434 = !DILocation(line: 4868, column: 33, scope: !1427)
!1435 = !DILocation(line: 4869, column: 25, scope: !1254)
!1436 = !DILocation(line: 4869, column: 10, scope: !1254)
!1437 = !DILocation(line: 4869, column: 9, scope: !1254)
!1438 = !DILocation(line: 4870, column: 7, scope: !1439)
!1439 = distinct !DILexicalBlock(scope: !1254, file: !1, line: 4870, column: 7)
!1440 = !DILocation(line: 4870, column: 14, scope: !1439)
!1441 = !DILocation(line: 4870, column: 7, scope: !1254)
!1442 = !DILocation(line: 4872, column: 42, scope: !1439)
!1443 = !DILocation(line: 4871, column: 42, scope: !1439)
!1444 = !DILocation(line: 4871, column: 26, scope: !1439)
!1445 = !DILocation(line: 4871, column: 5, scope: !1439)
!1446 = !DILocation(line: 4871, column: 16, scope: !1439)
!1447 = !DILocation(line: 4871, column: 25, scope: !1439)
!1448 = !DILocation(line: 4873, column: 25, scope: !1254)
!1449 = !DILocation(line: 4873, column: 10, scope: !1254)
!1450 = !DILocation(line: 4873, column: 9, scope: !1254)
!1451 = !DILocation(line: 4874, column: 7, scope: !1452)
!1452 = distinct !DILexicalBlock(scope: !1254, file: !1, line: 4874, column: 7)
!1453 = !DILocation(line: 4874, column: 14, scope: !1452)
!1454 = !DILocation(line: 4874, column: 7, scope: !1254)
!1455 = !DILocation(line: 4875, column: 31, scope: !1452)
!1456 = !DILocation(line: 4875, column: 39, scope: !1452)
!1457 = !DILocation(line: 4875, column: 50, scope: !1452)
!1458 = !DILocation(line: 4875, column: 55, scope: !1452)
!1459 = !DILocation(line: 4875, column: 12, scope: !1452)
!1460 = !DILocation(line: 4875, column: 5, scope: !1452)
!1461 = !DILocation(line: 4876, column: 25, scope: !1254)
!1462 = !DILocation(line: 4876, column: 10, scope: !1254)
!1463 = !DILocation(line: 4876, column: 9, scope: !1254)
!1464 = !DILocation(line: 4877, column: 7, scope: !1465)
!1465 = distinct !DILexicalBlock(scope: !1254, file: !1, line: 4877, column: 7)
!1466 = !DILocation(line: 4877, column: 14, scope: !1465)
!1467 = !DILocation(line: 4877, column: 7, scope: !1254)
!1468 = !DILocation(line: 4878, column: 31, scope: !1465)
!1469 = !DILocation(line: 4878, column: 39, scope: !1465)
!1470 = !DILocation(line: 4878, column: 50, scope: !1465)
!1471 = !DILocation(line: 4878, column: 57, scope: !1465)
!1472 = !DILocation(line: 4878, column: 12, scope: !1465)
!1473 = !DILocation(line: 4878, column: 5, scope: !1465)
!1474 = !DILocation(line: 4879, column: 25, scope: !1254)
!1475 = !DILocation(line: 4879, column: 10, scope: !1254)
!1476 = !DILocation(line: 4879, column: 9, scope: !1254)
!1477 = !DILocation(line: 4880, column: 7, scope: !1478)
!1478 = distinct !DILexicalBlock(scope: !1254, file: !1, line: 4880, column: 7)
!1479 = !DILocation(line: 4880, column: 14, scope: !1478)
!1480 = !DILocation(line: 4880, column: 7, scope: !1254)
!1481 = !DILocation(line: 4881, column: 44, scope: !1478)
!1482 = !DILocation(line: 4881, column: 29, scope: !1478)
!1483 = !DILocation(line: 4881, column: 5, scope: !1478)
!1484 = !DILocation(line: 4881, column: 16, scope: !1478)
!1485 = !DILocation(line: 4881, column: 28, scope: !1478)
!1486 = !DILocation(line: 4882, column: 25, scope: !1254)
!1487 = !DILocation(line: 4882, column: 10, scope: !1254)
!1488 = !DILocation(line: 4882, column: 9, scope: !1254)
!1489 = !DILocation(line: 4883, column: 7, scope: !1490)
!1490 = distinct !DILexicalBlock(scope: !1254, file: !1, line: 4883, column: 7)
!1491 = !DILocation(line: 4883, column: 14, scope: !1490)
!1492 = !DILocation(line: 4883, column: 7, scope: !1254)
!1493 = !DILocation(line: 4884, column: 31, scope: !1490)
!1494 = !DILocation(line: 4884, column: 39, scope: !1490)
!1495 = !DILocation(line: 4884, column: 50, scope: !1490)
!1496 = !DILocation(line: 4884, column: 61, scope: !1490)
!1497 = !DILocation(line: 4884, column: 12, scope: !1490)
!1498 = !DILocation(line: 4884, column: 5, scope: !1490)
!1499 = !DILocation(line: 4885, column: 25, scope: !1254)
!1500 = !DILocation(line: 4885, column: 10, scope: !1254)
!1501 = !DILocation(line: 4885, column: 9, scope: !1254)
!1502 = !DILocation(line: 4886, column: 7, scope: !1503)
!1503 = distinct !DILexicalBlock(scope: !1254, file: !1, line: 4886, column: 7)
!1504 = !DILocation(line: 4886, column: 14, scope: !1503)
!1505 = !DILocation(line: 4886, column: 7, scope: !1254)
!1506 = !DILocation(line: 4888, column: 19, scope: !1503)
!1507 = !DILocation(line: 4887, column: 38, scope: !1503)
!1508 = !DILocation(line: 4887, column: 24, scope: !1503)
!1509 = !DILocation(line: 4887, column: 5, scope: !1503)
!1510 = !DILocation(line: 4887, column: 16, scope: !1503)
!1511 = !DILocation(line: 4887, column: 23, scope: !1503)
!1512 = !DILocation(line: 4889, column: 34, scope: !1254)
!1513 = !DILocation(line: 4889, column: 13, scope: !1254)
!1514 = !DILocation(line: 4889, column: 12, scope: !1254)
!1515 = !DILocation(line: 4890, column: 3, scope: !1254)
!1516 = !DILocation(line: 4890, column: 14, scope: !1254)
!1517 = !DILocation(line: 4890, column: 23, scope: !1254)
!1518 = !DILocation(line: 4891, column: 31, scope: !1254)
!1519 = !DILocation(line: 4891, column: 14, scope: !1254)
!1520 = !DILocation(line: 4891, column: 13, scope: !1254)
!1521 = !DILocation(line: 4892, column: 1, scope: !1254)
!1522 = distinct !DISubprogram(name: "CloneDrawInfo", scope: !1, file: !1, line: 246, type: !1523, scopeLine: 248, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1236)
!1523 = !DISubroutineType(types: !1524)
!1524 = !{!699, !1257, !1525}
!1525 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1526, size: 64)
!1526 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !700)
!1527 = !DILocalVariable(name: "image_info", arg: 1, scope: !1522, file: !1, line: 246, type: !1257)
!1528 = !DILocation(line: 246, column: 55, scope: !1522)
!1529 = !DILocalVariable(name: "draw_info", arg: 2, scope: !1522, file: !1, line: 247, type: !1525)
!1530 = !DILocation(line: 247, column: 19, scope: !1522)
!1531 = !DILocalVariable(name: "clone_info", scope: !1522, file: !1, line: 250, type: !699)
!1532 = !DILocation(line: 250, column: 6, scope: !1522)
!1533 = !DILocation(line: 252, column: 27, scope: !1522)
!1534 = !DILocation(line: 252, column: 14, scope: !1522)
!1535 = !DILocation(line: 252, column: 13, scope: !1522)
!1536 = !DILocation(line: 253, column: 7, scope: !1537)
!1537 = distinct !DILexicalBlock(scope: !1522, file: !1, line: 253, column: 7)
!1538 = !DILocation(line: 253, column: 18, scope: !1537)
!1539 = !DILocation(line: 253, column: 7, scope: !1522)
!1540 = !DILocalVariable(name: "message", scope: !1541, file: !1, line: 254, type: !704)
!1541 = distinct !DILexicalBlock(scope: !1537, file: !1, line: 254, column: 5)
!1542 = !DILocation(line: 254, column: 5, scope: !1541)
!1543 = !DILocalVariable(name: "exception", scope: !1541, file: !1, line: 254, type: !932)
!1544 = !DILocation(line: 255, column: 15, scope: !1522)
!1545 = !DILocation(line: 255, column: 26, scope: !1522)
!1546 = !DILocation(line: 255, column: 3, scope: !1522)
!1547 = !DILocation(line: 256, column: 7, scope: !1548)
!1548 = distinct !DILexicalBlock(scope: !1522, file: !1, line: 256, column: 7)
!1549 = !DILocation(line: 256, column: 17, scope: !1548)
!1550 = !DILocation(line: 256, column: 7, scope: !1522)
!1551 = !DILocation(line: 257, column: 12, scope: !1548)
!1552 = !DILocation(line: 257, column: 5, scope: !1548)
!1553 = !DILocation(line: 258, column: 7, scope: !1554)
!1554 = distinct !DILexicalBlock(scope: !1522, file: !1, line: 258, column: 7)
!1555 = !DILocation(line: 258, column: 19, scope: !1554)
!1556 = !DILocation(line: 258, column: 29, scope: !1554)
!1557 = !DILocation(line: 258, column: 7, scope: !1522)
!1558 = !DILocation(line: 259, column: 25, scope: !1554)
!1559 = !DILocation(line: 259, column: 37, scope: !1554)
!1560 = !DILocation(line: 259, column: 47, scope: !1554)
!1561 = !DILocation(line: 259, column: 58, scope: !1554)
!1562 = !DILocation(line: 259, column: 12, scope: !1554)
!1563 = !DILocation(line: 259, column: 5, scope: !1554)
!1564 = !DILocation(line: 260, column: 7, scope: !1565)
!1565 = distinct !DILexicalBlock(scope: !1522, file: !1, line: 260, column: 7)
!1566 = !DILocation(line: 260, column: 18, scope: !1565)
!1567 = !DILocation(line: 260, column: 27, scope: !1565)
!1568 = !DILocation(line: 260, column: 7, scope: !1522)
!1569 = !DILocation(line: 261, column: 25, scope: !1565)
!1570 = !DILocation(line: 261, column: 37, scope: !1565)
!1571 = !DILocation(line: 261, column: 46, scope: !1565)
!1572 = !DILocation(line: 261, column: 57, scope: !1565)
!1573 = !DILocation(line: 261, column: 12, scope: !1565)
!1574 = !DILocation(line: 261, column: 5, scope: !1565)
!1575 = !DILocation(line: 262, column: 3, scope: !1522)
!1576 = !DILocation(line: 262, column: 15, scope: !1522)
!1577 = !DILocation(line: 262, column: 23, scope: !1522)
!1578 = !DILocation(line: 262, column: 34, scope: !1522)
!1579 = !DILocation(line: 263, column: 3, scope: !1522)
!1580 = !DILocation(line: 263, column: 15, scope: !1522)
!1581 = !DILocation(line: 263, column: 22, scope: !1522)
!1582 = !DILocation(line: 263, column: 33, scope: !1522)
!1583 = !DILocation(line: 264, column: 23, scope: !1522)
!1584 = !DILocation(line: 264, column: 34, scope: !1522)
!1585 = !DILocation(line: 264, column: 3, scope: !1522)
!1586 = !DILocation(line: 264, column: 15, scope: !1522)
!1587 = !DILocation(line: 264, column: 22, scope: !1522)
!1588 = !DILocation(line: 265, column: 3, scope: !1522)
!1589 = !DILocation(line: 265, column: 15, scope: !1522)
!1590 = !DILocation(line: 265, column: 20, scope: !1522)
!1591 = !DILocation(line: 265, column: 31, scope: !1522)
!1592 = !DILocation(line: 266, column: 3, scope: !1522)
!1593 = !DILocation(line: 266, column: 15, scope: !1522)
!1594 = !DILocation(line: 266, column: 22, scope: !1522)
!1595 = !DILocation(line: 266, column: 33, scope: !1522)
!1596 = !DILocation(line: 267, column: 28, scope: !1522)
!1597 = !DILocation(line: 267, column: 39, scope: !1522)
!1598 = !DILocation(line: 267, column: 3, scope: !1522)
!1599 = !DILocation(line: 267, column: 15, scope: !1522)
!1600 = !DILocation(line: 267, column: 27, scope: !1522)
!1601 = !DILocation(line: 268, column: 7, scope: !1602)
!1602 = distinct !DILexicalBlock(scope: !1522, file: !1, line: 268, column: 7)
!1603 = !DILocation(line: 268, column: 18, scope: !1602)
!1604 = !DILocation(line: 268, column: 31, scope: !1602)
!1605 = !DILocation(line: 268, column: 7, scope: !1522)
!1606 = !DILocation(line: 269, column: 41, scope: !1602)
!1607 = !DILocation(line: 269, column: 52, scope: !1602)
!1608 = !DILocation(line: 270, column: 8, scope: !1602)
!1609 = !DILocation(line: 270, column: 19, scope: !1602)
!1610 = !DILocation(line: 270, column: 33, scope: !1602)
!1611 = !DILocation(line: 269, column: 30, scope: !1602)
!1612 = !DILocation(line: 269, column: 5, scope: !1602)
!1613 = !DILocation(line: 269, column: 17, scope: !1602)
!1614 = !DILocation(line: 269, column: 29, scope: !1602)
!1615 = !DILocation(line: 272, column: 9, scope: !1616)
!1616 = distinct !DILexicalBlock(scope: !1602, file: !1, line: 272, column: 9)
!1617 = !DILocation(line: 272, column: 20, scope: !1616)
!1618 = !DILocation(line: 272, column: 25, scope: !1616)
!1619 = !DILocation(line: 272, column: 9, scope: !1602)
!1620 = !DILocation(line: 273, column: 43, scope: !1616)
!1621 = !DILocation(line: 273, column: 54, scope: !1616)
!1622 = !DILocation(line: 274, column: 10, scope: !1616)
!1623 = !DILocation(line: 274, column: 21, scope: !1616)
!1624 = !DILocation(line: 274, column: 27, scope: !1616)
!1625 = !DILocation(line: 273, column: 32, scope: !1616)
!1626 = !DILocation(line: 273, column: 7, scope: !1616)
!1627 = !DILocation(line: 273, column: 19, scope: !1616)
!1628 = !DILocation(line: 273, column: 31, scope: !1616)
!1629 = !DILocation(line: 275, column: 20, scope: !1522)
!1630 = !DILocation(line: 275, column: 3, scope: !1522)
!1631 = !DILocation(line: 275, column: 15, scope: !1522)
!1632 = !DILocation(line: 275, column: 19, scope: !1522)
!1633 = !DILocation(line: 276, column: 7, scope: !1634)
!1634 = distinct !DILexicalBlock(scope: !1522, file: !1, line: 276, column: 7)
!1635 = !DILocation(line: 276, column: 18, scope: !1634)
!1636 = !DILocation(line: 276, column: 33, scope: !1634)
!1637 = !DILocation(line: 276, column: 7, scope: !1522)
!1638 = !DILocation(line: 277, column: 43, scope: !1634)
!1639 = !DILocation(line: 277, column: 54, scope: !1634)
!1640 = !DILocation(line: 278, column: 19, scope: !1634)
!1641 = !DILocation(line: 278, column: 30, scope: !1634)
!1642 = !DILocation(line: 278, column: 46, scope: !1634)
!1643 = !DILocation(line: 277, column: 32, scope: !1634)
!1644 = !DILocation(line: 277, column: 5, scope: !1634)
!1645 = !DILocation(line: 277, column: 17, scope: !1634)
!1646 = !DILocation(line: 277, column: 31, scope: !1634)
!1647 = !DILocation(line: 279, column: 32, scope: !1522)
!1648 = !DILocation(line: 279, column: 43, scope: !1522)
!1649 = !DILocation(line: 279, column: 3, scope: !1522)
!1650 = !DILocation(line: 279, column: 15, scope: !1522)
!1651 = !DILocation(line: 279, column: 31, scope: !1522)
!1652 = !DILocation(line: 280, column: 30, scope: !1522)
!1653 = !DILocation(line: 280, column: 41, scope: !1522)
!1654 = !DILocation(line: 280, column: 3, scope: !1522)
!1655 = !DILocation(line: 280, column: 15, scope: !1522)
!1656 = !DILocation(line: 280, column: 29, scope: !1522)
!1657 = !DILocation(line: 281, column: 25, scope: !1522)
!1658 = !DILocation(line: 281, column: 36, scope: !1522)
!1659 = !DILocation(line: 281, column: 3, scope: !1522)
!1660 = !DILocation(line: 281, column: 15, scope: !1522)
!1661 = !DILocation(line: 281, column: 24, scope: !1522)
!1662 = !DILocation(line: 282, column: 23, scope: !1522)
!1663 = !DILocation(line: 282, column: 34, scope: !1522)
!1664 = !DILocation(line: 282, column: 3, scope: !1522)
!1665 = !DILocation(line: 282, column: 15, scope: !1522)
!1666 = !DILocation(line: 282, column: 22, scope: !1522)
!1667 = !DILocation(line: 283, column: 24, scope: !1522)
!1668 = !DILocation(line: 283, column: 35, scope: !1522)
!1669 = !DILocation(line: 283, column: 3, scope: !1522)
!1670 = !DILocation(line: 283, column: 15, scope: !1522)
!1671 = !DILocation(line: 283, column: 23, scope: !1522)
!1672 = !DILocation(line: 284, column: 26, scope: !1522)
!1673 = !DILocation(line: 284, column: 37, scope: !1522)
!1674 = !DILocation(line: 284, column: 3, scope: !1522)
!1675 = !DILocation(line: 284, column: 15, scope: !1522)
!1676 = !DILocation(line: 284, column: 25, scope: !1522)
!1677 = !DILocation(line: 285, column: 27, scope: !1522)
!1678 = !DILocation(line: 285, column: 38, scope: !1522)
!1679 = !DILocation(line: 285, column: 3, scope: !1522)
!1680 = !DILocation(line: 285, column: 15, scope: !1522)
!1681 = !DILocation(line: 285, column: 26, scope: !1522)
!1682 = !DILocation(line: 286, column: 24, scope: !1522)
!1683 = !DILocation(line: 286, column: 35, scope: !1522)
!1684 = !DILocation(line: 286, column: 3, scope: !1522)
!1685 = !DILocation(line: 286, column: 15, scope: !1522)
!1686 = !DILocation(line: 286, column: 23, scope: !1522)
!1687 = !DILocation(line: 287, column: 23, scope: !1522)
!1688 = !DILocation(line: 287, column: 34, scope: !1522)
!1689 = !DILocation(line: 287, column: 3, scope: !1522)
!1690 = !DILocation(line: 287, column: 15, scope: !1522)
!1691 = !DILocation(line: 287, column: 22, scope: !1522)
!1692 = !DILocation(line: 288, column: 7, scope: !1693)
!1693 = distinct !DILexicalBlock(scope: !1522, file: !1, line: 288, column: 7)
!1694 = !DILocation(line: 288, column: 18, scope: !1693)
!1695 = !DILocation(line: 288, column: 23, scope: !1693)
!1696 = !DILocation(line: 288, column: 7, scope: !1522)
!1697 = !DILocation(line: 289, column: 25, scope: !1693)
!1698 = !DILocation(line: 289, column: 37, scope: !1693)
!1699 = !DILocation(line: 289, column: 42, scope: !1693)
!1700 = !DILocation(line: 289, column: 53, scope: !1693)
!1701 = !DILocation(line: 289, column: 12, scope: !1693)
!1702 = !DILocation(line: 289, column: 5, scope: !1693)
!1703 = !DILocation(line: 290, column: 7, scope: !1704)
!1704 = distinct !DILexicalBlock(scope: !1522, file: !1, line: 290, column: 7)
!1705 = !DILocation(line: 290, column: 18, scope: !1704)
!1706 = !DILocation(line: 290, column: 23, scope: !1704)
!1707 = !DILocation(line: 290, column: 7, scope: !1522)
!1708 = !DILocation(line: 291, column: 25, scope: !1704)
!1709 = !DILocation(line: 291, column: 37, scope: !1704)
!1710 = !DILocation(line: 291, column: 42, scope: !1704)
!1711 = !DILocation(line: 291, column: 53, scope: !1704)
!1712 = !DILocation(line: 291, column: 12, scope: !1704)
!1713 = !DILocation(line: 291, column: 5, scope: !1704)
!1714 = !DILocation(line: 292, column: 7, scope: !1715)
!1715 = distinct !DILexicalBlock(scope: !1522, file: !1, line: 292, column: 7)
!1716 = !DILocation(line: 292, column: 18, scope: !1715)
!1717 = !DILocation(line: 292, column: 26, scope: !1715)
!1718 = !DILocation(line: 292, column: 7, scope: !1522)
!1719 = !DILocation(line: 293, column: 25, scope: !1715)
!1720 = !DILocation(line: 293, column: 37, scope: !1715)
!1721 = !DILocation(line: 293, column: 45, scope: !1715)
!1722 = !DILocation(line: 293, column: 56, scope: !1715)
!1723 = !DILocation(line: 293, column: 12, scope: !1715)
!1724 = !DILocation(line: 293, column: 5, scope: !1715)
!1725 = !DILocation(line: 294, column: 7, scope: !1726)
!1726 = distinct !DILexicalBlock(scope: !1522, file: !1, line: 294, column: 7)
!1727 = !DILocation(line: 294, column: 18, scope: !1726)
!1728 = !DILocation(line: 294, column: 25, scope: !1726)
!1729 = !DILocation(line: 294, column: 7, scope: !1522)
!1730 = !DILocation(line: 295, column: 25, scope: !1726)
!1731 = !DILocation(line: 295, column: 37, scope: !1726)
!1732 = !DILocation(line: 295, column: 44, scope: !1726)
!1733 = !DILocation(line: 295, column: 55, scope: !1726)
!1734 = !DILocation(line: 295, column: 12, scope: !1726)
!1735 = !DILocation(line: 295, column: 5, scope: !1726)
!1736 = !DILocation(line: 296, column: 21, scope: !1522)
!1737 = !DILocation(line: 296, column: 32, scope: !1522)
!1738 = !DILocation(line: 296, column: 3, scope: !1522)
!1739 = !DILocation(line: 296, column: 15, scope: !1522)
!1740 = !DILocation(line: 296, column: 20, scope: !1522)
!1741 = !DILocation(line: 297, column: 23, scope: !1522)
!1742 = !DILocation(line: 297, column: 34, scope: !1522)
!1743 = !DILocation(line: 297, column: 3, scope: !1522)
!1744 = !DILocation(line: 297, column: 15, scope: !1522)
!1745 = !DILocation(line: 297, column: 22, scope: !1522)
!1746 = !DILocation(line: 298, column: 22, scope: !1522)
!1747 = !DILocation(line: 298, column: 33, scope: !1522)
!1748 = !DILocation(line: 298, column: 3, scope: !1522)
!1749 = !DILocation(line: 298, column: 15, scope: !1522)
!1750 = !DILocation(line: 298, column: 21, scope: !1522)
!1751 = !DILocation(line: 299, column: 7, scope: !1752)
!1752 = distinct !DILexicalBlock(scope: !1522, file: !1, line: 299, column: 7)
!1753 = !DILocation(line: 299, column: 18, scope: !1752)
!1754 = !DILocation(line: 299, column: 27, scope: !1752)
!1755 = !DILocation(line: 299, column: 7, scope: !1522)
!1756 = !DILocation(line: 300, column: 25, scope: !1752)
!1757 = !DILocation(line: 300, column: 37, scope: !1752)
!1758 = !DILocation(line: 300, column: 46, scope: !1752)
!1759 = !DILocation(line: 300, column: 57, scope: !1752)
!1760 = !DILocation(line: 300, column: 12, scope: !1752)
!1761 = !DILocation(line: 300, column: 5, scope: !1752)
!1762 = !DILocation(line: 301, column: 25, scope: !1522)
!1763 = !DILocation(line: 301, column: 36, scope: !1522)
!1764 = !DILocation(line: 301, column: 3, scope: !1522)
!1765 = !DILocation(line: 301, column: 15, scope: !1522)
!1766 = !DILocation(line: 301, column: 24, scope: !1522)
!1767 = !DILocation(line: 302, column: 23, scope: !1522)
!1768 = !DILocation(line: 302, column: 34, scope: !1522)
!1769 = !DILocation(line: 302, column: 3, scope: !1522)
!1770 = !DILocation(line: 302, column: 15, scope: !1522)
!1771 = !DILocation(line: 302, column: 22, scope: !1522)
!1772 = !DILocation(line: 303, column: 33, scope: !1522)
!1773 = !DILocation(line: 303, column: 44, scope: !1522)
!1774 = !DILocation(line: 303, column: 3, scope: !1522)
!1775 = !DILocation(line: 303, column: 15, scope: !1522)
!1776 = !DILocation(line: 303, column: 32, scope: !1522)
!1777 = !DILocation(line: 304, column: 33, scope: !1522)
!1778 = !DILocation(line: 304, column: 44, scope: !1522)
!1779 = !DILocation(line: 304, column: 3, scope: !1522)
!1780 = !DILocation(line: 304, column: 15, scope: !1522)
!1781 = !DILocation(line: 304, column: 32, scope: !1522)
!1782 = !DILocation(line: 305, column: 25, scope: !1522)
!1783 = !DILocation(line: 305, column: 36, scope: !1522)
!1784 = !DILocation(line: 305, column: 3, scope: !1522)
!1785 = !DILocation(line: 305, column: 15, scope: !1522)
!1786 = !DILocation(line: 305, column: 24, scope: !1522)
!1787 = !DILocation(line: 306, column: 7, scope: !1788)
!1788 = distinct !DILexicalBlock(scope: !1522, file: !1, line: 306, column: 7)
!1789 = !DILocation(line: 306, column: 18, scope: !1788)
!1790 = !DILocation(line: 306, column: 26, scope: !1788)
!1791 = !DILocation(line: 306, column: 7, scope: !1522)
!1792 = !DILocation(line: 307, column: 25, scope: !1788)
!1793 = !DILocation(line: 307, column: 37, scope: !1788)
!1794 = !DILocation(line: 307, column: 45, scope: !1788)
!1795 = !DILocation(line: 307, column: 56, scope: !1788)
!1796 = !DILocation(line: 307, column: 12, scope: !1788)
!1797 = !DILocation(line: 307, column: 5, scope: !1788)
!1798 = !DILocation(line: 308, column: 21, scope: !1522)
!1799 = !DILocation(line: 308, column: 32, scope: !1522)
!1800 = !DILocation(line: 308, column: 3, scope: !1522)
!1801 = !DILocation(line: 308, column: 15, scope: !1522)
!1802 = !DILocation(line: 308, column: 20, scope: !1522)
!1803 = !DILocation(line: 309, column: 3, scope: !1522)
!1804 = !DILocation(line: 309, column: 15, scope: !1522)
!1805 = !DILocation(line: 309, column: 26, scope: !1522)
!1806 = !DILocation(line: 309, column: 37, scope: !1522)
!1807 = !DILocation(line: 310, column: 3, scope: !1522)
!1808 = !DILocation(line: 310, column: 15, scope: !1522)
!1809 = !DILocation(line: 310, column: 28, scope: !1522)
!1810 = !DILocation(line: 310, column: 39, scope: !1522)
!1811 = !DILocation(line: 311, column: 7, scope: !1812)
!1812 = distinct !DILexicalBlock(scope: !1522, file: !1, line: 311, column: 7)
!1813 = !DILocation(line: 311, column: 18, scope: !1812)
!1814 = !DILocation(line: 311, column: 30, scope: !1812)
!1815 = !DILocation(line: 311, column: 7, scope: !1522)
!1816 = !DILocation(line: 312, column: 25, scope: !1812)
!1817 = !DILocation(line: 312, column: 37, scope: !1812)
!1818 = !DILocation(line: 312, column: 49, scope: !1812)
!1819 = !DILocation(line: 312, column: 60, scope: !1812)
!1820 = !DILocation(line: 312, column: 12, scope: !1812)
!1821 = !DILocation(line: 312, column: 5, scope: !1812)
!1822 = !DILocation(line: 313, column: 7, scope: !1823)
!1823 = distinct !DILexicalBlock(scope: !1522, file: !1, line: 313, column: 7)
!1824 = !DILocation(line: 313, column: 18, scope: !1823)
!1825 = !DILocation(line: 313, column: 31, scope: !1823)
!1826 = !DILocation(line: 313, column: 7, scope: !1522)
!1827 = !DILocalVariable(name: "x", scope: !1828, file: !1, line: 316, type: !717)
!1828 = distinct !DILexicalBlock(scope: !1823, file: !1, line: 314, column: 5)
!1829 = !DILocation(line: 316, column: 9, scope: !1828)
!1830 = !DILocation(line: 318, column: 13, scope: !1831)
!1831 = distinct !DILexicalBlock(scope: !1828, file: !1, line: 318, column: 7)
!1832 = !DILocation(line: 318, column: 12, scope: !1831)
!1833 = !DILocation(line: 318, column: 17, scope: !1834)
!1834 = distinct !DILexicalBlock(scope: !1831, file: !1, line: 318, column: 7)
!1835 = !DILocation(line: 318, column: 28, scope: !1834)
!1836 = !DILocation(line: 318, column: 41, scope: !1834)
!1837 = !DILocation(line: 318, column: 44, scope: !1834)
!1838 = !DILocation(line: 318, column: 7, scope: !1831)
!1839 = !DILocation(line: 318, column: 53, scope: !1834)
!1840 = !DILocation(line: 318, column: 7, scope: !1834)
!1841 = distinct !{!1841, !1838, !1842}
!1842 = !DILocation(line: 318, column: 57, scope: !1831)
!1843 = !DILocation(line: 319, column: 73, scope: !1828)
!1844 = !DILocation(line: 319, column: 74, scope: !1828)
!1845 = !DILocation(line: 319, column: 43, scope: !1828)
!1846 = !DILocation(line: 319, column: 32, scope: !1828)
!1847 = !DILocation(line: 319, column: 7, scope: !1828)
!1848 = !DILocation(line: 319, column: 19, scope: !1828)
!1849 = !DILocation(line: 319, column: 31, scope: !1828)
!1850 = !DILocation(line: 321, column: 11, scope: !1851)
!1851 = distinct !DILexicalBlock(scope: !1828, file: !1, line: 321, column: 11)
!1852 = !DILocation(line: 321, column: 23, scope: !1851)
!1853 = !DILocation(line: 321, column: 36, scope: !1851)
!1854 = !DILocation(line: 321, column: 11, scope: !1828)
!1855 = !DILocalVariable(name: "message", scope: !1856, file: !1, line: 322, type: !704)
!1856 = distinct !DILexicalBlock(scope: !1851, file: !1, line: 322, column: 9)
!1857 = !DILocation(line: 322, column: 9, scope: !1856)
!1858 = !DILocalVariable(name: "exception", scope: !1856, file: !1, line: 322, type: !932)
!1859 = !DILocation(line: 324, column: 31, scope: !1828)
!1860 = !DILocation(line: 324, column: 43, scope: !1828)
!1861 = !DILocation(line: 324, column: 56, scope: !1828)
!1862 = !DILocation(line: 324, column: 67, scope: !1828)
!1863 = !DILocation(line: 325, column: 19, scope: !1828)
!1864 = !DILocation(line: 325, column: 20, scope: !1828)
!1865 = !DILocation(line: 325, column: 23, scope: !1828)
!1866 = !DILocation(line: 324, column: 14, scope: !1828)
!1867 = !DILocation(line: 326, column: 5, scope: !1828)
!1868 = !DILocation(line: 327, column: 3, scope: !1522)
!1869 = !DILocation(line: 327, column: 15, scope: !1522)
!1870 = !DILocation(line: 327, column: 24, scope: !1522)
!1871 = !DILocation(line: 327, column: 35, scope: !1522)
!1872 = !DILocation(line: 328, column: 7, scope: !1873)
!1873 = distinct !DILexicalBlock(scope: !1522, file: !1, line: 328, column: 7)
!1874 = !DILocation(line: 328, column: 18, scope: !1873)
!1875 = !DILocation(line: 328, column: 27, scope: !1873)
!1876 = !DILocation(line: 328, column: 33, scope: !1873)
!1877 = !DILocation(line: 328, column: 7, scope: !1522)
!1878 = !DILocalVariable(name: "number_stops", scope: !1879, file: !1, line: 331, type: !712)
!1879 = distinct !DILexicalBlock(scope: !1873, file: !1, line: 329, column: 5)
!1880 = !DILocation(line: 331, column: 9, scope: !1879)
!1881 = !DILocation(line: 333, column: 20, scope: !1879)
!1882 = !DILocation(line: 333, column: 32, scope: !1879)
!1883 = !DILocation(line: 333, column: 41, scope: !1879)
!1884 = !DILocation(line: 333, column: 19, scope: !1879)
!1885 = !DILocation(line: 335, column: 9, scope: !1879)
!1886 = !DILocation(line: 334, column: 47, scope: !1879)
!1887 = !DILocation(line: 334, column: 34, scope: !1879)
!1888 = !DILocation(line: 334, column: 7, scope: !1879)
!1889 = !DILocation(line: 334, column: 19, scope: !1879)
!1890 = !DILocation(line: 334, column: 28, scope: !1879)
!1891 = !DILocation(line: 334, column: 33, scope: !1879)
!1892 = !DILocation(line: 336, column: 11, scope: !1893)
!1893 = distinct !DILexicalBlock(scope: !1879, file: !1, line: 336, column: 11)
!1894 = !DILocation(line: 336, column: 23, scope: !1893)
!1895 = !DILocation(line: 336, column: 32, scope: !1893)
!1896 = !DILocation(line: 336, column: 38, scope: !1893)
!1897 = !DILocation(line: 336, column: 11, scope: !1879)
!1898 = !DILocalVariable(name: "message", scope: !1899, file: !1, line: 337, type: !704)
!1899 = distinct !DILexicalBlock(scope: !1893, file: !1, line: 337, column: 9)
!1900 = !DILocation(line: 337, column: 9, scope: !1899)
!1901 = !DILocalVariable(name: "exception", scope: !1899, file: !1, line: 337, type: !932)
!1902 = !DILocation(line: 339, column: 31, scope: !1879)
!1903 = !DILocation(line: 339, column: 43, scope: !1879)
!1904 = !DILocation(line: 339, column: 52, scope: !1879)
!1905 = !DILocation(line: 340, column: 9, scope: !1879)
!1906 = !DILocation(line: 340, column: 20, scope: !1879)
!1907 = !DILocation(line: 340, column: 29, scope: !1879)
!1908 = !DILocation(line: 340, column: 44, scope: !1879)
!1909 = !DILocation(line: 340, column: 56, scope: !1879)
!1910 = !DILocation(line: 339, column: 14, scope: !1879)
!1911 = !DILocation(line: 342, column: 5, scope: !1879)
!1912 = !DILocation(line: 343, column: 7, scope: !1913)
!1913 = distinct !DILexicalBlock(scope: !1522, file: !1, line: 343, column: 7)
!1914 = !DILocation(line: 343, column: 18, scope: !1913)
!1915 = !DILocation(line: 343, column: 28, scope: !1913)
!1916 = !DILocation(line: 343, column: 7, scope: !1522)
!1917 = !DILocation(line: 344, column: 25, scope: !1913)
!1918 = !DILocation(line: 344, column: 37, scope: !1913)
!1919 = !DILocation(line: 344, column: 47, scope: !1913)
!1920 = !DILocation(line: 344, column: 58, scope: !1913)
!1921 = !DILocation(line: 344, column: 12, scope: !1913)
!1922 = !DILocation(line: 344, column: 5, scope: !1913)
!1923 = !DILocation(line: 345, column: 3, scope: !1522)
!1924 = !DILocation(line: 345, column: 15, scope: !1522)
!1925 = !DILocation(line: 345, column: 22, scope: !1522)
!1926 = !DILocation(line: 345, column: 33, scope: !1522)
!1927 = !DILocation(line: 346, column: 26, scope: !1522)
!1928 = !DILocation(line: 346, column: 37, scope: !1522)
!1929 = !DILocation(line: 346, column: 3, scope: !1522)
!1930 = !DILocation(line: 346, column: 15, scope: !1522)
!1931 = !DILocation(line: 346, column: 25, scope: !1522)
!1932 = !DILocation(line: 347, column: 22, scope: !1522)
!1933 = !DILocation(line: 347, column: 33, scope: !1522)
!1934 = !DILocation(line: 347, column: 3, scope: !1522)
!1935 = !DILocation(line: 347, column: 15, scope: !1522)
!1936 = !DILocation(line: 347, column: 21, scope: !1522)
!1937 = !DILocation(line: 348, column: 23, scope: !1522)
!1938 = !DILocation(line: 348, column: 34, scope: !1522)
!1939 = !DILocation(line: 348, column: 3, scope: !1522)
!1940 = !DILocation(line: 348, column: 15, scope: !1522)
!1941 = !DILocation(line: 348, column: 22, scope: !1522)
!1942 = !DILocation(line: 349, column: 3, scope: !1522)
!1943 = !DILocation(line: 349, column: 15, scope: !1522)
!1944 = !DILocation(line: 349, column: 33, scope: !1522)
!1945 = !DILocation(line: 349, column: 44, scope: !1522)
!1946 = !DILocation(line: 350, column: 21, scope: !1522)
!1947 = !DILocation(line: 350, column: 3, scope: !1522)
!1948 = !DILocation(line: 350, column: 15, scope: !1522)
!1949 = !DILocation(line: 350, column: 20, scope: !1522)
!1950 = !DILocation(line: 351, column: 10, scope: !1522)
!1951 = !DILocation(line: 351, column: 3, scope: !1522)
!1952 = !DILocation(line: 352, column: 1, scope: !1522)
!1953 = distinct !DISubprogram(name: "DestroyDrawInfo", scope: !1, file: !1, line: 834, type: !1954, scopeLine: 835, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1236)
!1954 = !DISubroutineType(types: !1955)
!1955 = !{!699, !699}
!1956 = !DILocalVariable(name: "draw_info", arg: 1, scope: !1953, file: !1, line: 834, type: !699)
!1957 = !DILocation(line: 834, column: 50, scope: !1953)
!1958 = !DILocation(line: 836, column: 7, scope: !1959)
!1959 = distinct !DILexicalBlock(scope: !1953, file: !1, line: 836, column: 7)
!1960 = !DILocation(line: 836, column: 18, scope: !1959)
!1961 = !DILocation(line: 836, column: 24, scope: !1959)
!1962 = !DILocation(line: 836, column: 7, scope: !1953)
!1963 = !DILocation(line: 837, column: 12, scope: !1959)
!1964 = !DILocation(line: 837, column: 5, scope: !1959)
!1965 = !DILocation(line: 840, column: 7, scope: !1966)
!1966 = distinct !DILexicalBlock(scope: !1953, file: !1, line: 840, column: 7)
!1967 = !DILocation(line: 840, column: 18, scope: !1966)
!1968 = !DILocation(line: 840, column: 28, scope: !1966)
!1969 = !DILocation(line: 840, column: 7, scope: !1953)
!1970 = !DILocation(line: 841, column: 40, scope: !1966)
!1971 = !DILocation(line: 841, column: 51, scope: !1966)
!1972 = !DILocation(line: 841, column: 26, scope: !1966)
!1973 = !DILocation(line: 841, column: 5, scope: !1966)
!1974 = !DILocation(line: 841, column: 16, scope: !1966)
!1975 = !DILocation(line: 841, column: 25, scope: !1966)
!1976 = !DILocation(line: 842, column: 7, scope: !1977)
!1977 = distinct !DILexicalBlock(scope: !1953, file: !1, line: 842, column: 7)
!1978 = !DILocation(line: 842, column: 18, scope: !1977)
!1979 = !DILocation(line: 842, column: 23, scope: !1977)
!1980 = !DILocation(line: 842, column: 7, scope: !1953)
!1981 = !DILocation(line: 843, column: 35, scope: !1977)
!1982 = !DILocation(line: 843, column: 46, scope: !1977)
!1983 = !DILocation(line: 843, column: 21, scope: !1977)
!1984 = !DILocation(line: 843, column: 5, scope: !1977)
!1985 = !DILocation(line: 843, column: 16, scope: !1977)
!1986 = !DILocation(line: 843, column: 20, scope: !1977)
!1987 = !DILocation(line: 844, column: 7, scope: !1988)
!1988 = distinct !DILexicalBlock(scope: !1953, file: !1, line: 844, column: 7)
!1989 = !DILocation(line: 844, column: 18, scope: !1988)
!1990 = !DILocation(line: 844, column: 27, scope: !1988)
!1991 = !DILocation(line: 844, column: 7, scope: !1953)
!1992 = !DILocation(line: 845, column: 39, scope: !1988)
!1993 = !DILocation(line: 845, column: 50, scope: !1988)
!1994 = !DILocation(line: 845, column: 25, scope: !1988)
!1995 = !DILocation(line: 845, column: 5, scope: !1988)
!1996 = !DILocation(line: 845, column: 16, scope: !1988)
!1997 = !DILocation(line: 845, column: 24, scope: !1988)
!1998 = !DILocation(line: 846, column: 7, scope: !1999)
!1999 = distinct !DILexicalBlock(scope: !1953, file: !1, line: 846, column: 7)
!2000 = !DILocation(line: 846, column: 18, scope: !1999)
!2001 = !DILocation(line: 846, column: 23, scope: !1999)
!2002 = !DILocation(line: 846, column: 7, scope: !1953)
!2003 = !DILocation(line: 847, column: 34, scope: !1999)
!2004 = !DILocation(line: 847, column: 45, scope: !1999)
!2005 = !DILocation(line: 847, column: 21, scope: !1999)
!2006 = !DILocation(line: 847, column: 5, scope: !1999)
!2007 = !DILocation(line: 847, column: 16, scope: !1999)
!2008 = !DILocation(line: 847, column: 20, scope: !1999)
!2009 = !DILocation(line: 848, column: 7, scope: !2010)
!2010 = distinct !DILexicalBlock(scope: !1953, file: !1, line: 848, column: 7)
!2011 = !DILocation(line: 848, column: 18, scope: !2010)
!2012 = !DILocation(line: 848, column: 31, scope: !2010)
!2013 = !DILocation(line: 848, column: 7, scope: !1953)
!2014 = !DILocation(line: 849, column: 42, scope: !2010)
!2015 = !DILocation(line: 849, column: 53, scope: !2010)
!2016 = !DILocation(line: 849, column: 29, scope: !2010)
!2017 = !DILocation(line: 849, column: 5, scope: !2010)
!2018 = !DILocation(line: 849, column: 16, scope: !2010)
!2019 = !DILocation(line: 849, column: 28, scope: !2010)
!2020 = !DILocation(line: 850, column: 7, scope: !2021)
!2021 = distinct !DILexicalBlock(scope: !1953, file: !1, line: 850, column: 7)
!2022 = !DILocation(line: 850, column: 18, scope: !2021)
!2023 = !DILocation(line: 850, column: 33, scope: !2021)
!2024 = !DILocation(line: 850, column: 7, scope: !1953)
!2025 = !DILocation(line: 851, column: 44, scope: !2021)
!2026 = !DILocation(line: 851, column: 55, scope: !2021)
!2027 = !DILocation(line: 851, column: 31, scope: !2021)
!2028 = !DILocation(line: 851, column: 5, scope: !2021)
!2029 = !DILocation(line: 851, column: 16, scope: !2021)
!2030 = !DILocation(line: 851, column: 30, scope: !2021)
!2031 = !DILocation(line: 852, column: 7, scope: !2032)
!2032 = distinct !DILexicalBlock(scope: !1953, file: !1, line: 852, column: 7)
!2033 = !DILocation(line: 852, column: 18, scope: !2032)
!2034 = !DILocation(line: 852, column: 23, scope: !2032)
!2035 = !DILocation(line: 852, column: 7, scope: !1953)
!2036 = !DILocation(line: 853, column: 35, scope: !2032)
!2037 = !DILocation(line: 853, column: 46, scope: !2032)
!2038 = !DILocation(line: 853, column: 21, scope: !2032)
!2039 = !DILocation(line: 853, column: 5, scope: !2032)
!2040 = !DILocation(line: 853, column: 16, scope: !2032)
!2041 = !DILocation(line: 853, column: 20, scope: !2032)
!2042 = !DILocation(line: 854, column: 7, scope: !2043)
!2043 = distinct !DILexicalBlock(scope: !1953, file: !1, line: 854, column: 7)
!2044 = !DILocation(line: 854, column: 18, scope: !2043)
!2045 = !DILocation(line: 854, column: 26, scope: !2043)
!2046 = !DILocation(line: 854, column: 7, scope: !1953)
!2047 = !DILocation(line: 855, column: 38, scope: !2043)
!2048 = !DILocation(line: 855, column: 49, scope: !2043)
!2049 = !DILocation(line: 855, column: 24, scope: !2043)
!2050 = !DILocation(line: 855, column: 5, scope: !2043)
!2051 = !DILocation(line: 855, column: 16, scope: !2043)
!2052 = !DILocation(line: 855, column: 23, scope: !2043)
!2053 = !DILocation(line: 856, column: 7, scope: !2054)
!2054 = distinct !DILexicalBlock(scope: !1953, file: !1, line: 856, column: 7)
!2055 = !DILocation(line: 856, column: 18, scope: !2054)
!2056 = !DILocation(line: 856, column: 25, scope: !2054)
!2057 = !DILocation(line: 856, column: 7, scope: !1953)
!2058 = !DILocation(line: 857, column: 37, scope: !2054)
!2059 = !DILocation(line: 857, column: 48, scope: !2054)
!2060 = !DILocation(line: 857, column: 23, scope: !2054)
!2061 = !DILocation(line: 857, column: 5, scope: !2054)
!2062 = !DILocation(line: 857, column: 16, scope: !2054)
!2063 = !DILocation(line: 857, column: 22, scope: !2054)
!2064 = !DILocation(line: 858, column: 7, scope: !2065)
!2065 = distinct !DILexicalBlock(scope: !1953, file: !1, line: 858, column: 7)
!2066 = !DILocation(line: 858, column: 18, scope: !2065)
!2067 = !DILocation(line: 858, column: 27, scope: !2065)
!2068 = !DILocation(line: 858, column: 7, scope: !1953)
!2069 = !DILocation(line: 859, column: 39, scope: !2065)
!2070 = !DILocation(line: 859, column: 50, scope: !2065)
!2071 = !DILocation(line: 859, column: 25, scope: !2065)
!2072 = !DILocation(line: 859, column: 5, scope: !2065)
!2073 = !DILocation(line: 859, column: 16, scope: !2065)
!2074 = !DILocation(line: 859, column: 24, scope: !2065)
!2075 = !DILocation(line: 860, column: 7, scope: !2076)
!2076 = distinct !DILexicalBlock(scope: !1953, file: !1, line: 860, column: 7)
!2077 = !DILocation(line: 860, column: 18, scope: !2076)
!2078 = !DILocation(line: 860, column: 26, scope: !2076)
!2079 = !DILocation(line: 860, column: 7, scope: !1953)
!2080 = !DILocation(line: 861, column: 38, scope: !2076)
!2081 = !DILocation(line: 861, column: 49, scope: !2076)
!2082 = !DILocation(line: 861, column: 24, scope: !2076)
!2083 = !DILocation(line: 861, column: 5, scope: !2076)
!2084 = !DILocation(line: 861, column: 16, scope: !2076)
!2085 = !DILocation(line: 861, column: 23, scope: !2076)
!2086 = !DILocation(line: 862, column: 7, scope: !2087)
!2087 = distinct !DILexicalBlock(scope: !1953, file: !1, line: 862, column: 7)
!2088 = !DILocation(line: 862, column: 18, scope: !2087)
!2089 = !DILocation(line: 862, column: 30, scope: !2087)
!2090 = !DILocation(line: 862, column: 7, scope: !1953)
!2091 = !DILocation(line: 864, column: 29, scope: !2087)
!2092 = !DILocation(line: 864, column: 40, scope: !2087)
!2093 = !DILocation(line: 864, column: 6, scope: !2087)
!2094 = !DILocation(line: 863, column: 5, scope: !2087)
!2095 = !DILocation(line: 863, column: 16, scope: !2087)
!2096 = !DILocation(line: 863, column: 27, scope: !2087)
!2097 = !DILocation(line: 865, column: 7, scope: !2098)
!2098 = distinct !DILexicalBlock(scope: !1953, file: !1, line: 865, column: 7)
!2099 = !DILocation(line: 865, column: 18, scope: !2098)
!2100 = !DILocation(line: 865, column: 31, scope: !2098)
!2101 = !DILocation(line: 865, column: 7, scope: !1953)
!2102 = !DILocation(line: 867, column: 7, scope: !2098)
!2103 = !DILocation(line: 867, column: 18, scope: !2098)
!2104 = !DILocation(line: 866, column: 40, scope: !2098)
!2105 = !DILocation(line: 866, column: 29, scope: !2098)
!2106 = !DILocation(line: 866, column: 5, scope: !2098)
!2107 = !DILocation(line: 866, column: 16, scope: !2098)
!2108 = !DILocation(line: 866, column: 28, scope: !2098)
!2109 = !DILocation(line: 868, column: 7, scope: !2110)
!2110 = distinct !DILexicalBlock(scope: !1953, file: !1, line: 868, column: 7)
!2111 = !DILocation(line: 868, column: 18, scope: !2110)
!2112 = !DILocation(line: 868, column: 27, scope: !2110)
!2113 = !DILocation(line: 868, column: 33, scope: !2110)
!2114 = !DILocation(line: 868, column: 7, scope: !1953)
!2115 = !DILocation(line: 870, column: 7, scope: !2110)
!2116 = !DILocation(line: 870, column: 18, scope: !2110)
!2117 = !DILocation(line: 870, column: 27, scope: !2110)
!2118 = !DILocation(line: 869, column: 44, scope: !2110)
!2119 = !DILocation(line: 869, column: 31, scope: !2110)
!2120 = !DILocation(line: 869, column: 5, scope: !2110)
!2121 = !DILocation(line: 869, column: 16, scope: !2110)
!2122 = !DILocation(line: 869, column: 25, scope: !2110)
!2123 = !DILocation(line: 869, column: 30, scope: !2110)
!2124 = !DILocation(line: 871, column: 7, scope: !2125)
!2125 = distinct !DILexicalBlock(scope: !1953, file: !1, line: 871, column: 7)
!2126 = !DILocation(line: 871, column: 18, scope: !2125)
!2127 = !DILocation(line: 871, column: 28, scope: !2125)
!2128 = !DILocation(line: 871, column: 7, scope: !1953)
!2129 = !DILocation(line: 872, column: 40, scope: !2125)
!2130 = !DILocation(line: 872, column: 51, scope: !2125)
!2131 = !DILocation(line: 872, column: 26, scope: !2125)
!2132 = !DILocation(line: 872, column: 5, scope: !2125)
!2133 = !DILocation(line: 872, column: 16, scope: !2125)
!2134 = !DILocation(line: 872, column: 25, scope: !2125)
!2135 = !DILocation(line: 873, column: 3, scope: !1953)
!2136 = !DILocation(line: 873, column: 14, scope: !1953)
!2137 = !DILocation(line: 873, column: 23, scope: !1953)
!2138 = !DILocation(line: 874, column: 49, scope: !1953)
!2139 = !DILocation(line: 874, column: 26, scope: !1953)
!2140 = !DILocation(line: 874, column: 13, scope: !1953)
!2141 = !DILocation(line: 874, column: 12, scope: !1953)
!2142 = !DILocation(line: 875, column: 10, scope: !1953)
!2143 = !DILocation(line: 875, column: 3, scope: !1953)
!2144 = distinct !DISubprogram(name: "DrawAffineImage", scope: !1, file: !1, line: 1109, type: !2145, scopeLine: 1111, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1236)
!2145 = !DISubroutineType(types: !2146)
!2146 = !{!777, !801, !1107, !2147}
!2147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2148, size: 64)
!2148 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !724)
!2149 = !DILocalVariable(name: "image", arg: 1, scope: !2144, file: !1, line: 1109, type: !801)
!2150 = !DILocation(line: 1109, column: 55, scope: !2144)
!2151 = !DILocalVariable(name: "source", arg: 2, scope: !2144, file: !1, line: 1110, type: !1107)
!2152 = !DILocation(line: 1110, column: 16, scope: !2144)
!2153 = !DILocalVariable(name: "affine", arg: 3, scope: !2144, file: !1, line: 1110, type: !2147)
!2154 = !DILocation(line: 1110, column: 43, scope: !2144)
!2155 = !DILocalVariable(name: "inverse_affine", scope: !2144, file: !1, line: 1113, type: !724)
!2156 = !DILocation(line: 1113, column: 5, scope: !2144)
!2157 = !DILocalVariable(name: "image_view", scope: !2144, file: !1, line: 1116, type: !2158)
!2158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2159, size: 64)
!2159 = !DIDerivedType(tag: DW_TAG_typedef, name: "CacheView", file: !502, line: 50, baseType: !2160)
!2160 = !DICompositeType(tag: DW_TAG_structure_type, name: "_CacheView", file: !338, line: 160, flags: DIFlagFwdDecl)
!2161 = !DILocation(line: 1116, column: 6, scope: !2144)
!2162 = !DILocalVariable(name: "source_view", scope: !2144, file: !1, line: 1117, type: !2158)
!2163 = !DILocation(line: 1117, column: 6, scope: !2144)
!2164 = !DILocalVariable(name: "exception", scope: !2144, file: !1, line: 1120, type: !1266)
!2165 = !DILocation(line: 1120, column: 6, scope: !2144)
!2166 = !DILocalVariable(name: "status", scope: !2144, file: !1, line: 1123, type: !777)
!2167 = !DILocation(line: 1123, column: 5, scope: !2144)
!2168 = !DILocalVariable(name: "zero", scope: !2144, file: !1, line: 1126, type: !769)
!2169 = !DILocation(line: 1126, column: 5, scope: !2144)
!2170 = !DILocalVariable(name: "extent", scope: !2144, file: !1, line: 1129, type: !2171)
!2171 = !DICompositeType(tag: DW_TAG_array_type, baseType: !794, size: 512, elements: !2172)
!2172 = !{!2173}
!2173 = !DISubrange(count: 4)
!2174 = !DILocation(line: 1129, column: 5, scope: !2144)
!2175 = !DILocalVariable(name: "min", scope: !2144, file: !1, line: 1130, type: !794)
!2176 = !DILocation(line: 1130, column: 5, scope: !2144)
!2177 = !DILocalVariable(name: "max", scope: !2144, file: !1, line: 1131, type: !794)
!2178 = !DILocation(line: 1131, column: 5, scope: !2144)
!2179 = !DILocalVariable(name: "point", scope: !2144, file: !1, line: 1132, type: !794)
!2180 = !DILocation(line: 1132, column: 5, scope: !2144)
!2181 = !DILocalVariable(name: "i", scope: !2144, file: !1, line: 1135, type: !717)
!2182 = !DILocation(line: 1135, column: 5, scope: !2144)
!2183 = !DILocalVariable(name: "edge", scope: !2144, file: !1, line: 1138, type: !756)
!2184 = !DILocation(line: 1138, column: 5, scope: !2144)
!2185 = !DILocalVariable(name: "start", scope: !2144, file: !1, line: 1141, type: !717)
!2186 = !DILocation(line: 1141, column: 5, scope: !2144)
!2187 = !DILocalVariable(name: "stop", scope: !2144, file: !1, line: 1142, type: !717)
!2188 = !DILocation(line: 1142, column: 5, scope: !2144)
!2189 = !DILocalVariable(name: "y", scope: !2144, file: !1, line: 1143, type: !717)
!2190 = !DILocation(line: 1143, column: 5, scope: !2144)
!2191 = !DILocation(line: 1150, column: 7, scope: !2192)
!2192 = distinct !DILexicalBlock(scope: !2144, file: !1, line: 1150, column: 7)
!2193 = !DILocation(line: 1150, column: 14, scope: !2192)
!2194 = !DILocation(line: 1150, column: 20, scope: !2192)
!2195 = !DILocation(line: 1150, column: 7, scope: !2144)
!2196 = !DILocation(line: 1151, column: 61, scope: !2192)
!2197 = !DILocation(line: 1151, column: 68, scope: !2192)
!2198 = !DILocation(line: 1151, column: 12, scope: !2192)
!2199 = !DILocation(line: 1151, column: 5, scope: !2192)
!2200 = !DILocation(line: 1155, column: 3, scope: !2144)
!2201 = !DILocation(line: 1155, column: 13, scope: !2144)
!2202 = !DILocation(line: 1155, column: 14, scope: !2144)
!2203 = !DILocation(line: 1156, column: 3, scope: !2144)
!2204 = !DILocation(line: 1156, column: 13, scope: !2144)
!2205 = !DILocation(line: 1156, column: 14, scope: !2144)
!2206 = !DILocation(line: 1157, column: 24, scope: !2144)
!2207 = !DILocation(line: 1157, column: 32, scope: !2144)
!2208 = !DILocation(line: 1157, column: 15, scope: !2144)
!2209 = !DILocation(line: 1157, column: 39, scope: !2144)
!2210 = !DILocation(line: 1157, column: 3, scope: !2144)
!2211 = !DILocation(line: 1157, column: 13, scope: !2144)
!2212 = !DILocation(line: 1157, column: 14, scope: !2144)
!2213 = !DILocation(line: 1158, column: 3, scope: !2144)
!2214 = !DILocation(line: 1158, column: 13, scope: !2144)
!2215 = !DILocation(line: 1158, column: 14, scope: !2144)
!2216 = !DILocation(line: 1159, column: 24, scope: !2144)
!2217 = !DILocation(line: 1159, column: 32, scope: !2144)
!2218 = !DILocation(line: 1159, column: 15, scope: !2144)
!2219 = !DILocation(line: 1159, column: 39, scope: !2144)
!2220 = !DILocation(line: 1159, column: 3, scope: !2144)
!2221 = !DILocation(line: 1159, column: 13, scope: !2144)
!2222 = !DILocation(line: 1159, column: 14, scope: !2144)
!2223 = !DILocation(line: 1160, column: 24, scope: !2144)
!2224 = !DILocation(line: 1160, column: 32, scope: !2144)
!2225 = !DILocation(line: 1160, column: 15, scope: !2144)
!2226 = !DILocation(line: 1160, column: 36, scope: !2144)
!2227 = !DILocation(line: 1160, column: 3, scope: !2144)
!2228 = !DILocation(line: 1160, column: 13, scope: !2144)
!2229 = !DILocation(line: 1160, column: 14, scope: !2144)
!2230 = !DILocation(line: 1161, column: 3, scope: !2144)
!2231 = !DILocation(line: 1161, column: 13, scope: !2144)
!2232 = !DILocation(line: 1161, column: 14, scope: !2144)
!2233 = !DILocation(line: 1162, column: 24, scope: !2144)
!2234 = !DILocation(line: 1162, column: 32, scope: !2144)
!2235 = !DILocation(line: 1162, column: 15, scope: !2144)
!2236 = !DILocation(line: 1162, column: 36, scope: !2144)
!2237 = !DILocation(line: 1162, column: 3, scope: !2144)
!2238 = !DILocation(line: 1162, column: 13, scope: !2144)
!2239 = !DILocation(line: 1162, column: 14, scope: !2144)
!2240 = !DILocation(line: 1163, column: 9, scope: !2241)
!2241 = distinct !DILexicalBlock(scope: !2144, file: !1, line: 1163, column: 3)
!2242 = !DILocation(line: 1163, column: 8, scope: !2241)
!2243 = !DILocation(line: 1163, column: 13, scope: !2244)
!2244 = distinct !DILexicalBlock(scope: !2241, file: !1, line: 1163, column: 3)
!2245 = !DILocation(line: 1163, column: 15, scope: !2244)
!2246 = !DILocation(line: 1163, column: 3, scope: !2241)
!2247 = !DILocation(line: 1165, column: 18, scope: !2248)
!2248 = distinct !DILexicalBlock(scope: !2244, file: !1, line: 1164, column: 3)
!2249 = !DILocation(line: 1165, column: 11, scope: !2248)
!2250 = !DILocation(line: 1166, column: 23, scope: !2248)
!2251 = !DILocation(line: 1166, column: 25, scope: !2248)
!2252 = !DILocation(line: 1166, column: 33, scope: !2248)
!2253 = !DILocation(line: 1166, column: 24, scope: !2248)
!2254 = !DILocation(line: 1166, column: 42, scope: !2248)
!2255 = !DILocation(line: 1166, column: 44, scope: !2248)
!2256 = !DILocation(line: 1166, column: 52, scope: !2248)
!2257 = !DILocation(line: 1166, column: 43, scope: !2248)
!2258 = !DILocation(line: 1166, column: 35, scope: !2248)
!2259 = !DILocation(line: 1166, column: 55, scope: !2248)
!2260 = !DILocation(line: 1166, column: 63, scope: !2248)
!2261 = !DILocation(line: 1166, column: 54, scope: !2248)
!2262 = !DILocation(line: 1166, column: 12, scope: !2248)
!2263 = !DILocation(line: 1166, column: 5, scope: !2248)
!2264 = !DILocation(line: 1166, column: 15, scope: !2248)
!2265 = !DILocation(line: 1166, column: 16, scope: !2248)
!2266 = !DILocation(line: 1167, column: 23, scope: !2248)
!2267 = !DILocation(line: 1167, column: 25, scope: !2248)
!2268 = !DILocation(line: 1167, column: 33, scope: !2248)
!2269 = !DILocation(line: 1167, column: 24, scope: !2248)
!2270 = !DILocation(line: 1167, column: 42, scope: !2248)
!2271 = !DILocation(line: 1167, column: 44, scope: !2248)
!2272 = !DILocation(line: 1167, column: 52, scope: !2248)
!2273 = !DILocation(line: 1167, column: 43, scope: !2248)
!2274 = !DILocation(line: 1167, column: 35, scope: !2248)
!2275 = !DILocation(line: 1167, column: 55, scope: !2248)
!2276 = !DILocation(line: 1167, column: 63, scope: !2248)
!2277 = !DILocation(line: 1167, column: 54, scope: !2248)
!2278 = !DILocation(line: 1167, column: 12, scope: !2248)
!2279 = !DILocation(line: 1167, column: 5, scope: !2248)
!2280 = !DILocation(line: 1167, column: 15, scope: !2248)
!2281 = !DILocation(line: 1167, column: 16, scope: !2248)
!2282 = !DILocation(line: 1168, column: 3, scope: !2248)
!2283 = !DILocation(line: 1163, column: 21, scope: !2244)
!2284 = !DILocation(line: 1163, column: 3, scope: !2244)
!2285 = distinct !{!2285, !2246, !2286}
!2286 = !DILocation(line: 1168, column: 3, scope: !2241)
!2287 = !DILocation(line: 1169, column: 7, scope: !2144)
!2288 = !DILocation(line: 1170, column: 7, scope: !2144)
!2289 = !DILocation(line: 1171, column: 9, scope: !2290)
!2290 = distinct !DILexicalBlock(scope: !2144, file: !1, line: 1171, column: 3)
!2291 = !DILocation(line: 1171, column: 8, scope: !2290)
!2292 = !DILocation(line: 1171, column: 13, scope: !2293)
!2293 = distinct !DILexicalBlock(scope: !2290, file: !1, line: 1171, column: 3)
!2294 = !DILocation(line: 1171, column: 15, scope: !2293)
!2295 = !DILocation(line: 1171, column: 3, scope: !2290)
!2296 = !DILocation(line: 1173, column: 13, scope: !2297)
!2297 = distinct !DILexicalBlock(scope: !2298, file: !1, line: 1173, column: 9)
!2298 = distinct !DILexicalBlock(scope: !2293, file: !1, line: 1172, column: 3)
!2299 = !DILocation(line: 1173, column: 24, scope: !2297)
!2300 = !DILocation(line: 1173, column: 17, scope: !2297)
!2301 = !DILocation(line: 1173, column: 27, scope: !2297)
!2302 = !DILocation(line: 1173, column: 15, scope: !2297)
!2303 = !DILocation(line: 1173, column: 9, scope: !2298)
!2304 = !DILocation(line: 1174, column: 20, scope: !2297)
!2305 = !DILocation(line: 1174, column: 13, scope: !2297)
!2306 = !DILocation(line: 1174, column: 23, scope: !2297)
!2307 = !DILocation(line: 1174, column: 11, scope: !2297)
!2308 = !DILocation(line: 1174, column: 12, scope: !2297)
!2309 = !DILocation(line: 1174, column: 7, scope: !2297)
!2310 = !DILocation(line: 1175, column: 13, scope: !2311)
!2311 = distinct !DILexicalBlock(scope: !2298, file: !1, line: 1175, column: 9)
!2312 = !DILocation(line: 1175, column: 24, scope: !2311)
!2313 = !DILocation(line: 1175, column: 17, scope: !2311)
!2314 = !DILocation(line: 1175, column: 27, scope: !2311)
!2315 = !DILocation(line: 1175, column: 15, scope: !2311)
!2316 = !DILocation(line: 1175, column: 9, scope: !2298)
!2317 = !DILocation(line: 1176, column: 20, scope: !2311)
!2318 = !DILocation(line: 1176, column: 13, scope: !2311)
!2319 = !DILocation(line: 1176, column: 23, scope: !2311)
!2320 = !DILocation(line: 1176, column: 11, scope: !2311)
!2321 = !DILocation(line: 1176, column: 12, scope: !2311)
!2322 = !DILocation(line: 1176, column: 7, scope: !2311)
!2323 = !DILocation(line: 1177, column: 13, scope: !2324)
!2324 = distinct !DILexicalBlock(scope: !2298, file: !1, line: 1177, column: 9)
!2325 = !DILocation(line: 1177, column: 24, scope: !2324)
!2326 = !DILocation(line: 1177, column: 17, scope: !2324)
!2327 = !DILocation(line: 1177, column: 27, scope: !2324)
!2328 = !DILocation(line: 1177, column: 15, scope: !2324)
!2329 = !DILocation(line: 1177, column: 9, scope: !2298)
!2330 = !DILocation(line: 1178, column: 20, scope: !2324)
!2331 = !DILocation(line: 1178, column: 13, scope: !2324)
!2332 = !DILocation(line: 1178, column: 23, scope: !2324)
!2333 = !DILocation(line: 1178, column: 11, scope: !2324)
!2334 = !DILocation(line: 1178, column: 12, scope: !2324)
!2335 = !DILocation(line: 1178, column: 7, scope: !2324)
!2336 = !DILocation(line: 1179, column: 13, scope: !2337)
!2337 = distinct !DILexicalBlock(scope: !2298, file: !1, line: 1179, column: 9)
!2338 = !DILocation(line: 1179, column: 24, scope: !2337)
!2339 = !DILocation(line: 1179, column: 17, scope: !2337)
!2340 = !DILocation(line: 1179, column: 27, scope: !2337)
!2341 = !DILocation(line: 1179, column: 15, scope: !2337)
!2342 = !DILocation(line: 1179, column: 9, scope: !2298)
!2343 = !DILocation(line: 1180, column: 20, scope: !2337)
!2344 = !DILocation(line: 1180, column: 13, scope: !2337)
!2345 = !DILocation(line: 1180, column: 23, scope: !2337)
!2346 = !DILocation(line: 1180, column: 11, scope: !2337)
!2347 = !DILocation(line: 1180, column: 12, scope: !2337)
!2348 = !DILocation(line: 1180, column: 7, scope: !2337)
!2349 = !DILocation(line: 1181, column: 3, scope: !2298)
!2350 = !DILocation(line: 1171, column: 21, scope: !2293)
!2351 = !DILocation(line: 1171, column: 3, scope: !2293)
!2352 = distinct !{!2352, !2295, !2353}
!2353 = !DILocation(line: 1181, column: 3, scope: !2290)
!2354 = !DILocation(line: 1185, column: 28, scope: !2355)
!2355 = distinct !DILexicalBlock(scope: !2144, file: !1, line: 1185, column: 7)
!2356 = !DILocation(line: 1185, column: 7, scope: !2355)
!2357 = !DILocation(line: 1185, column: 47, scope: !2355)
!2358 = !DILocation(line: 1185, column: 7, scope: !2144)
!2359 = !DILocation(line: 1186, column: 5, scope: !2355)
!2360 = !DILocation(line: 1187, column: 9, scope: !2144)
!2361 = !DILocation(line: 1188, column: 25, scope: !2144)
!2362 = !DILocation(line: 1188, column: 11, scope: !2144)
!2363 = !DILocation(line: 1188, column: 8, scope: !2144)
!2364 = !DILocation(line: 1188, column: 10, scope: !2144)
!2365 = !DILocation(line: 1189, column: 25, scope: !2144)
!2366 = !DILocation(line: 1189, column: 11, scope: !2144)
!2367 = !DILocation(line: 1189, column: 8, scope: !2144)
!2368 = !DILocation(line: 1189, column: 10, scope: !2144)
!2369 = !DILocation(line: 1190, column: 25, scope: !2144)
!2370 = !DILocation(line: 1190, column: 36, scope: !2144)
!2371 = !DILocation(line: 1190, column: 43, scope: !2144)
!2372 = !DILocation(line: 1190, column: 27, scope: !2144)
!2373 = !DILocation(line: 1190, column: 50, scope: !2144)
!2374 = !DILocation(line: 1190, column: 11, scope: !2144)
!2375 = !DILocation(line: 1190, column: 8, scope: !2144)
!2376 = !DILocation(line: 1190, column: 10, scope: !2144)
!2377 = !DILocation(line: 1191, column: 25, scope: !2144)
!2378 = !DILocation(line: 1191, column: 36, scope: !2144)
!2379 = !DILocation(line: 1191, column: 43, scope: !2144)
!2380 = !DILocation(line: 1191, column: 27, scope: !2144)
!2381 = !DILocation(line: 1191, column: 47, scope: !2144)
!2382 = !DILocation(line: 1191, column: 11, scope: !2144)
!2383 = !DILocation(line: 1191, column: 8, scope: !2144)
!2384 = !DILocation(line: 1191, column: 10, scope: !2144)
!2385 = !DILocation(line: 1192, column: 38, scope: !2144)
!2386 = !DILocation(line: 1192, column: 18, scope: !2144)
!2387 = !DILocation(line: 1193, column: 24, scope: !2144)
!2388 = !DILocation(line: 1193, column: 3, scope: !2144)
!2389 = !DILocation(line: 1194, column: 15, scope: !2144)
!2390 = !DILocation(line: 1194, column: 22, scope: !2144)
!2391 = !DILocation(line: 1194, column: 12, scope: !2144)
!2392 = !DILocation(line: 1195, column: 29, scope: !2144)
!2393 = !DILocation(line: 1195, column: 31, scope: !2144)
!2394 = !DILocation(line: 1195, column: 19, scope: !2144)
!2395 = !DILocation(line: 1195, column: 9, scope: !2144)
!2396 = !DILocation(line: 1195, column: 8, scope: !2144)
!2397 = !DILocation(line: 1196, column: 29, scope: !2144)
!2398 = !DILocation(line: 1196, column: 31, scope: !2144)
!2399 = !DILocation(line: 1196, column: 18, scope: !2144)
!2400 = !DILocation(line: 1196, column: 8, scope: !2144)
!2401 = !DILocation(line: 1196, column: 7, scope: !2144)
!2402 = !DILocation(line: 1197, column: 39, scope: !2144)
!2403 = !DILocation(line: 1197, column: 46, scope: !2144)
!2404 = !DILocation(line: 1197, column: 15, scope: !2144)
!2405 = !DILocation(line: 1197, column: 14, scope: !2144)
!2406 = !DILocation(line: 1198, column: 40, scope: !2144)
!2407 = !DILocation(line: 1198, column: 46, scope: !2144)
!2408 = !DILocation(line: 1198, column: 14, scope: !2144)
!2409 = !DILocation(line: 1198, column: 13, scope: !2144)
!2410 = !DILocation(line: 1203, column: 10, scope: !2411)
!2411 = distinct !DILexicalBlock(scope: !2144, file: !1, line: 1203, column: 3)
!2412 = !DILocation(line: 1203, column: 9, scope: !2411)
!2413 = !DILocation(line: 1203, column: 8, scope: !2411)
!2414 = !DILocation(line: 1203, column: 17, scope: !2415)
!2415 = distinct !DILexicalBlock(scope: !2411, file: !1, line: 1203, column: 3)
!2416 = !DILocation(line: 1203, column: 22, scope: !2415)
!2417 = !DILocation(line: 1203, column: 19, scope: !2415)
!2418 = !DILocation(line: 1203, column: 3, scope: !2411)
!2419 = !DILocalVariable(name: "composite", scope: !2420, file: !1, line: 1206, type: !769)
!2420 = distinct !DILexicalBlock(scope: !2415, file: !1, line: 1204, column: 3)
!2421 = !DILocation(line: 1206, column: 7, scope: !2420)
!2422 = !DILocalVariable(name: "pixel", scope: !2420, file: !1, line: 1207, type: !769)
!2423 = !DILocation(line: 1207, column: 7, scope: !2420)
!2424 = !DILocalVariable(name: "point", scope: !2420, file: !1, line: 1210, type: !794)
!2425 = !DILocation(line: 1210, column: 7, scope: !2420)
!2426 = !DILocalVariable(name: "indexes", scope: !2420, file: !1, line: 1213, type: !2427)
!2427 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1200)
!2428 = !DILocation(line: 1213, column: 17, scope: !2420)
!2429 = !DILocalVariable(name: "x", scope: !2420, file: !1, line: 1216, type: !717)
!2430 = !DILocation(line: 1216, column: 7, scope: !2420)
!2431 = !DILocalVariable(name: "q", scope: !2420, file: !1, line: 1219, type: !2432)
!2432 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !819)
!2433 = !DILocation(line: 1219, column: 17, scope: !2420)
!2434 = !DILocalVariable(name: "inverse_edge", scope: !2420, file: !1, line: 1222, type: !756)
!2435 = !DILocation(line: 1222, column: 7, scope: !2420)
!2436 = !DILocalVariable(name: "x_offset", scope: !2420, file: !1, line: 1225, type: !717)
!2437 = !DILocation(line: 1225, column: 7, scope: !2420)
!2438 = !DILocation(line: 1227, column: 29, scope: !2420)
!2439 = !DILocation(line: 1227, column: 61, scope: !2420)
!2440 = !DILocation(line: 1227, column: 52, scope: !2420)
!2441 = !DILocation(line: 1227, column: 18, scope: !2420)
!2442 = !DILocation(line: 1228, column: 22, scope: !2443)
!2443 = distinct !DILexicalBlock(scope: !2420, file: !1, line: 1228, column: 9)
!2444 = !DILocation(line: 1228, column: 40, scope: !2443)
!2445 = !DILocation(line: 1228, column: 25, scope: !2443)
!2446 = !DILocation(line: 1228, column: 9, scope: !2420)
!2447 = !DILocation(line: 1229, column: 7, scope: !2443)
!2448 = !DILocation(line: 1230, column: 35, scope: !2420)
!2449 = !DILocation(line: 1230, column: 74, scope: !2420)
!2450 = !DILocation(line: 1230, column: 76, scope: !2420)
!2451 = !DILocation(line: 1230, column: 56, scope: !2420)
!2452 = !DILocation(line: 1230, column: 46, scope: !2420)
!2453 = !DILocation(line: 1231, column: 12, scope: !2420)
!2454 = !DILocation(line: 1231, column: 43, scope: !2420)
!2455 = !DILocation(line: 1231, column: 45, scope: !2420)
!2456 = !DILocation(line: 1231, column: 24, scope: !2420)
!2457 = !DILocation(line: 1231, column: 69, scope: !2420)
!2458 = !DILocation(line: 1231, column: 71, scope: !2420)
!2459 = !DILocation(line: 1231, column: 51, scope: !2420)
!2460 = !DILocation(line: 1231, column: 50, scope: !2420)
!2461 = !DILocation(line: 1231, column: 76, scope: !2420)
!2462 = !DILocation(line: 1231, column: 14, scope: !2420)
!2463 = !DILocation(line: 1232, column: 9, scope: !2420)
!2464 = !DILocation(line: 1230, column: 7, scope: !2420)
!2465 = !DILocation(line: 1230, column: 6, scope: !2420)
!2466 = !DILocation(line: 1233, column: 9, scope: !2467)
!2467 = distinct !DILexicalBlock(scope: !2420, file: !1, line: 1233, column: 9)
!2468 = !DILocation(line: 1233, column: 11, scope: !2467)
!2469 = !DILocation(line: 1233, column: 9, scope: !2420)
!2470 = !DILocation(line: 1234, column: 7, scope: !2467)
!2471 = !DILocation(line: 1235, column: 45, scope: !2420)
!2472 = !DILocation(line: 1235, column: 13, scope: !2420)
!2473 = !DILocation(line: 1235, column: 12, scope: !2420)
!2474 = !DILocation(line: 1236, column: 11, scope: !2420)
!2475 = !DILocation(line: 1237, column: 15, scope: !2420)
!2476 = !DILocation(line: 1238, column: 13, scope: !2420)
!2477 = !DILocation(line: 1239, column: 40, scope: !2478)
!2478 = distinct !DILexicalBlock(scope: !2420, file: !1, line: 1239, column: 5)
!2479 = !DILocation(line: 1239, column: 42, scope: !2478)
!2480 = !DILocation(line: 1239, column: 22, scope: !2478)
!2481 = !DILocation(line: 1239, column: 12, scope: !2478)
!2482 = !DILocation(line: 1239, column: 11, scope: !2478)
!2483 = !DILocation(line: 1239, column: 10, scope: !2478)
!2484 = !DILocation(line: 1239, column: 49, scope: !2485)
!2485 = distinct !DILexicalBlock(scope: !2478, file: !1, line: 1239, column: 5)
!2486 = !DILocation(line: 1239, column: 83, scope: !2485)
!2487 = !DILocation(line: 1239, column: 85, scope: !2485)
!2488 = !DILocation(line: 1239, column: 64, scope: !2485)
!2489 = !DILocation(line: 1239, column: 54, scope: !2485)
!2490 = !DILocation(line: 1239, column: 51, scope: !2485)
!2491 = !DILocation(line: 1239, column: 5, scope: !2478)
!2492 = !DILocation(line: 1241, column: 24, scope: !2493)
!2493 = distinct !DILexicalBlock(scope: !2485, file: !1, line: 1240, column: 5)
!2494 = !DILocation(line: 1241, column: 15, scope: !2493)
!2495 = !DILocation(line: 1241, column: 41, scope: !2493)
!2496 = !DILocation(line: 1241, column: 25, scope: !2493)
!2497 = !DILocation(line: 1241, column: 44, scope: !2493)
!2498 = !DILocation(line: 1241, column: 61, scope: !2493)
!2499 = !DILocation(line: 1241, column: 45, scope: !2493)
!2500 = !DILocation(line: 1241, column: 43, scope: !2493)
!2501 = !DILocation(line: 1242, column: 24, scope: !2493)
!2502 = !DILocation(line: 1241, column: 63, scope: !2493)
!2503 = !DILocation(line: 1241, column: 13, scope: !2493)
!2504 = !DILocation(line: 1241, column: 14, scope: !2493)
!2505 = !DILocation(line: 1243, column: 24, scope: !2493)
!2506 = !DILocation(line: 1243, column: 15, scope: !2493)
!2507 = !DILocation(line: 1243, column: 41, scope: !2493)
!2508 = !DILocation(line: 1243, column: 25, scope: !2493)
!2509 = !DILocation(line: 1243, column: 44, scope: !2493)
!2510 = !DILocation(line: 1243, column: 61, scope: !2493)
!2511 = !DILocation(line: 1243, column: 45, scope: !2493)
!2512 = !DILocation(line: 1243, column: 43, scope: !2493)
!2513 = !DILocation(line: 1244, column: 24, scope: !2493)
!2514 = !DILocation(line: 1243, column: 63, scope: !2493)
!2515 = !DILocation(line: 1243, column: 13, scope: !2493)
!2516 = !DILocation(line: 1243, column: 14, scope: !2493)
!2517 = !DILocation(line: 1245, column: 43, scope: !2493)
!2518 = !DILocation(line: 1245, column: 50, scope: !2493)
!2519 = !DILocation(line: 1246, column: 41, scope: !2493)
!2520 = !DILocation(line: 1246, column: 49, scope: !2493)
!2521 = !DILocation(line: 1246, column: 58, scope: !2493)
!2522 = !DILocation(line: 1245, column: 14, scope: !2493)
!2523 = !DILocation(line: 1247, column: 28, scope: !2493)
!2524 = !DILocation(line: 1247, column: 34, scope: !2493)
!2525 = !DILocation(line: 1247, column: 36, scope: !2493)
!2526 = !DILocation(line: 1247, column: 44, scope: !2493)
!2527 = !DILocation(line: 1247, column: 43, scope: !2493)
!2528 = !DILocation(line: 1247, column: 7, scope: !2493)
!2529 = !DILocation(line: 1248, column: 45, scope: !2493)
!2530 = !DILocation(line: 1249, column: 19, scope: !2493)
!2531 = !DILocation(line: 1248, column: 7, scope: !2493)
!2532 = !DILocation(line: 1250, column: 22, scope: !2493)
!2533 = !DILocation(line: 1250, column: 39, scope: !2493)
!2534 = !DILocation(line: 1250, column: 41, scope: !2493)
!2535 = !DILocation(line: 1250, column: 49, scope: !2493)
!2536 = !DILocation(line: 1250, column: 48, scope: !2493)
!2537 = !DILocation(line: 1250, column: 7, scope: !2493)
!2538 = !DILocation(line: 1251, column: 15, scope: !2493)
!2539 = !DILocation(line: 1252, column: 8, scope: !2493)
!2540 = !DILocation(line: 1253, column: 5, scope: !2493)
!2541 = !DILocation(line: 1239, column: 93, scope: !2485)
!2542 = !DILocation(line: 1239, column: 5, scope: !2485)
!2543 = distinct !{!2543, !2491, !2544}
!2544 = !DILocation(line: 1253, column: 5, scope: !2478)
!2545 = !DILocation(line: 1254, column: 38, scope: !2546)
!2546 = distinct !DILexicalBlock(scope: !2420, file: !1, line: 1254, column: 9)
!2547 = !DILocation(line: 1254, column: 49, scope: !2546)
!2548 = !DILocation(line: 1254, column: 9, scope: !2546)
!2549 = !DILocation(line: 1254, column: 60, scope: !2546)
!2550 = !DILocation(line: 1254, column: 9, scope: !2420)
!2551 = !DILocation(line: 1255, column: 13, scope: !2546)
!2552 = !DILocation(line: 1255, column: 7, scope: !2546)
!2553 = !DILocation(line: 1256, column: 3, scope: !2420)
!2554 = !DILocation(line: 1203, column: 29, scope: !2415)
!2555 = !DILocation(line: 1203, column: 3, scope: !2415)
!2556 = distinct !{!2556, !2418, !2557}
!2557 = !DILocation(line: 1256, column: 3, scope: !2411)
!2558 = !DILocation(line: 1257, column: 32, scope: !2144)
!2559 = !DILocation(line: 1257, column: 15, scope: !2144)
!2560 = !DILocation(line: 1257, column: 14, scope: !2144)
!2561 = !DILocation(line: 1258, column: 31, scope: !2144)
!2562 = !DILocation(line: 1258, column: 14, scope: !2144)
!2563 = !DILocation(line: 1258, column: 13, scope: !2144)
!2564 = !DILocation(line: 1259, column: 10, scope: !2144)
!2565 = !DILocation(line: 1259, column: 3, scope: !2144)
!2566 = !DILocation(line: 1260, column: 1, scope: !2144)
!2567 = distinct !DISubprogram(name: "MagickMax", scope: !1, file: !1, line: 1095, type: !2568, scopeLine: 1096, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1236)
!2568 = !DISubroutineType(types: !2569)
!2569 = !{!728, !2570, !2570}
!2570 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !728)
!2571 = !DILocalVariable(name: "x", arg: 1, scope: !2567, file: !1, line: 1095, type: !2570)
!2572 = !DILocation(line: 1095, column: 45, scope: !2567)
!2573 = !DILocalVariable(name: "y", arg: 2, scope: !2567, file: !1, line: 1095, type: !2570)
!2574 = !DILocation(line: 1095, column: 60, scope: !2567)
!2575 = !DILocation(line: 1097, column: 7, scope: !2576)
!2576 = distinct !DILexicalBlock(scope: !2567, file: !1, line: 1097, column: 7)
!2577 = !DILocation(line: 1097, column: 11, scope: !2576)
!2578 = !DILocation(line: 1097, column: 9, scope: !2576)
!2579 = !DILocation(line: 1097, column: 7, scope: !2567)
!2580 = !DILocation(line: 1098, column: 12, scope: !2576)
!2581 = !DILocation(line: 1098, column: 5, scope: !2576)
!2582 = !DILocation(line: 1099, column: 10, scope: !2567)
!2583 = !DILocation(line: 1099, column: 3, scope: !2567)
!2584 = !DILocation(line: 1100, column: 1, scope: !2567)
!2585 = distinct !DISubprogram(name: "MagickMin", scope: !1, file: !1, line: 1102, type: !2568, scopeLine: 1103, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1236)
!2586 = !DILocalVariable(name: "x", arg: 1, scope: !2585, file: !1, line: 1102, type: !2570)
!2587 = !DILocation(line: 1102, column: 45, scope: !2585)
!2588 = !DILocalVariable(name: "y", arg: 2, scope: !2585, file: !1, line: 1102, type: !2570)
!2589 = !DILocation(line: 1102, column: 60, scope: !2585)
!2590 = !DILocation(line: 1104, column: 7, scope: !2591)
!2591 = distinct !DILexicalBlock(scope: !2585, file: !1, line: 1104, column: 7)
!2592 = !DILocation(line: 1104, column: 11, scope: !2591)
!2593 = !DILocation(line: 1104, column: 9, scope: !2591)
!2594 = !DILocation(line: 1104, column: 7, scope: !2585)
!2595 = !DILocation(line: 1105, column: 12, scope: !2591)
!2596 = !DILocation(line: 1105, column: 5, scope: !2591)
!2597 = !DILocation(line: 1106, column: 10, scope: !2585)
!2598 = !DILocation(line: 1106, column: 3, scope: !2585)
!2599 = !DILocation(line: 1107, column: 1, scope: !2585)
!2600 = distinct !DISubprogram(name: "InverseAffineMatrix", scope: !1, file: !1, line: 1067, type: !2601, scopeLine: 1068, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1236)
!2601 = !DISubroutineType(types: !2602)
!2602 = !{!724, !2147}
!2603 = !DILocalVariable(name: "affine", arg: 1, scope: !2600, file: !1, line: 1067, type: !2147)
!2604 = !DILocation(line: 1067, column: 61, scope: !2600)
!2605 = !DILocalVariable(name: "inverse_affine", scope: !2600, file: !1, line: 1070, type: !724)
!2606 = !DILocation(line: 1070, column: 5, scope: !2600)
!2607 = !DILocalVariable(name: "determinant", scope: !2600, file: !1, line: 1073, type: !728)
!2608 = !DILocation(line: 1073, column: 5, scope: !2600)
!2609 = !DILocation(line: 1075, column: 37, scope: !2600)
!2610 = !DILocation(line: 1075, column: 45, scope: !2600)
!2611 = !DILocation(line: 1075, column: 48, scope: !2600)
!2612 = !DILocation(line: 1075, column: 56, scope: !2600)
!2613 = !DILocation(line: 1075, column: 47, scope: !2600)
!2614 = !DILocation(line: 1075, column: 59, scope: !2600)
!2615 = !DILocation(line: 1075, column: 67, scope: !2600)
!2616 = !DILocation(line: 1076, column: 5, scope: !2600)
!2617 = !DILocation(line: 1076, column: 13, scope: !2600)
!2618 = !DILocation(line: 1075, column: 69, scope: !2600)
!2619 = !DILocation(line: 1075, column: 58, scope: !2600)
!2620 = !DILocation(line: 1075, column: 15, scope: !2600)
!2621 = !DILocation(line: 1075, column: 14, scope: !2600)
!2622 = !DILocation(line: 1077, column: 21, scope: !2600)
!2623 = !DILocation(line: 1077, column: 33, scope: !2600)
!2624 = !DILocation(line: 1077, column: 41, scope: !2600)
!2625 = !DILocation(line: 1077, column: 32, scope: !2600)
!2626 = !DILocation(line: 1077, column: 18, scope: !2600)
!2627 = !DILocation(line: 1077, column: 20, scope: !2600)
!2628 = !DILocation(line: 1078, column: 21, scope: !2600)
!2629 = !DILocation(line: 1078, column: 35, scope: !2600)
!2630 = !DILocation(line: 1078, column: 43, scope: !2600)
!2631 = !DILocation(line: 1078, column: 34, scope: !2600)
!2632 = !DILocation(line: 1078, column: 32, scope: !2600)
!2633 = !DILocation(line: 1078, column: 18, scope: !2600)
!2634 = !DILocation(line: 1078, column: 20, scope: !2600)
!2635 = !DILocation(line: 1079, column: 21, scope: !2600)
!2636 = !DILocation(line: 1079, column: 35, scope: !2600)
!2637 = !DILocation(line: 1079, column: 43, scope: !2600)
!2638 = !DILocation(line: 1079, column: 34, scope: !2600)
!2639 = !DILocation(line: 1079, column: 32, scope: !2600)
!2640 = !DILocation(line: 1079, column: 18, scope: !2600)
!2641 = !DILocation(line: 1079, column: 20, scope: !2600)
!2642 = !DILocation(line: 1080, column: 21, scope: !2600)
!2643 = !DILocation(line: 1080, column: 33, scope: !2600)
!2644 = !DILocation(line: 1080, column: 41, scope: !2600)
!2645 = !DILocation(line: 1080, column: 32, scope: !2600)
!2646 = !DILocation(line: 1080, column: 18, scope: !2600)
!2647 = !DILocation(line: 1080, column: 20, scope: !2600)
!2648 = !DILocation(line: 1081, column: 23, scope: !2600)
!2649 = !DILocation(line: 1081, column: 31, scope: !2600)
!2650 = !DILocation(line: 1081, column: 22, scope: !2600)
!2651 = !DILocation(line: 1081, column: 50, scope: !2600)
!2652 = !DILocation(line: 1081, column: 34, scope: !2600)
!2653 = !DILocation(line: 1081, column: 53, scope: !2600)
!2654 = !DILocation(line: 1081, column: 61, scope: !2600)
!2655 = !DILocation(line: 1082, column: 20, scope: !2600)
!2656 = !DILocation(line: 1081, column: 63, scope: !2600)
!2657 = !DILocation(line: 1081, column: 52, scope: !2600)
!2658 = !DILocation(line: 1081, column: 18, scope: !2600)
!2659 = !DILocation(line: 1081, column: 20, scope: !2600)
!2660 = !DILocation(line: 1083, column: 23, scope: !2600)
!2661 = !DILocation(line: 1083, column: 31, scope: !2600)
!2662 = !DILocation(line: 1083, column: 22, scope: !2600)
!2663 = !DILocation(line: 1083, column: 50, scope: !2600)
!2664 = !DILocation(line: 1083, column: 34, scope: !2600)
!2665 = !DILocation(line: 1083, column: 53, scope: !2600)
!2666 = !DILocation(line: 1083, column: 61, scope: !2600)
!2667 = !DILocation(line: 1084, column: 20, scope: !2600)
!2668 = !DILocation(line: 1083, column: 63, scope: !2600)
!2669 = !DILocation(line: 1083, column: 52, scope: !2600)
!2670 = !DILocation(line: 1083, column: 18, scope: !2600)
!2671 = !DILocation(line: 1083, column: 20, scope: !2600)
!2672 = !DILocation(line: 1085, column: 3, scope: !2600)
!2673 = distinct !DISubprogram(name: "AffineEdge", scope: !1, file: !1, line: 981, type: !2674, scopeLine: 983, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1236)
!2674 = !DISubroutineType(types: !2675)
!2675 = !{!756, !1107, !2147, !2570, !2676}
!2676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2677, size: 64)
!2677 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !756)
!2678 = !DILocalVariable(name: "image", arg: 1, scope: !2673, file: !1, line: 981, type: !1107)
!2679 = !DILocation(line: 981, column: 44, scope: !2673)
!2680 = !DILocalVariable(name: "affine", arg: 2, scope: !2673, file: !1, line: 981, type: !2147)
!2681 = !DILocation(line: 981, column: 70, scope: !2673)
!2682 = !DILocalVariable(name: "y", arg: 3, scope: !2673, file: !1, line: 982, type: !2570)
!2683 = !DILocation(line: 982, column: 16, scope: !2673)
!2684 = !DILocalVariable(name: "edge", arg: 4, scope: !2673, file: !1, line: 982, type: !2676)
!2685 = !DILocation(line: 982, column: 37, scope: !2673)
!2686 = !DILocalVariable(name: "intercept", scope: !2673, file: !1, line: 985, type: !728)
!2687 = !DILocation(line: 985, column: 5, scope: !2673)
!2688 = !DILocalVariable(name: "z", scope: !2673, file: !1, line: 986, type: !728)
!2689 = !DILocation(line: 986, column: 5, scope: !2673)
!2690 = !DILocalVariable(name: "x", scope: !2673, file: !1, line: 989, type: !728)
!2691 = !DILocation(line: 989, column: 5, scope: !2673)
!2692 = !DILocalVariable(name: "inverse_edge", scope: !2673, file: !1, line: 992, type: !756)
!2693 = !DILocation(line: 992, column: 5, scope: !2673)
!2694 = !DILocation(line: 997, column: 19, scope: !2673)
!2695 = !DILocation(line: 997, column: 25, scope: !2673)
!2696 = !DILocation(line: 997, column: 16, scope: !2673)
!2697 = !DILocation(line: 997, column: 18, scope: !2673)
!2698 = !DILocation(line: 998, column: 19, scope: !2673)
!2699 = !DILocation(line: 998, column: 25, scope: !2673)
!2700 = !DILocation(line: 998, column: 16, scope: !2673)
!2701 = !DILocation(line: 998, column: 18, scope: !2673)
!2702 = !DILocation(line: 999, column: 19, scope: !2673)
!2703 = !DILocation(line: 999, column: 25, scope: !2673)
!2704 = !DILocation(line: 999, column: 16, scope: !2673)
!2705 = !DILocation(line: 999, column: 18, scope: !2673)
!2706 = !DILocation(line: 1000, column: 19, scope: !2673)
!2707 = !DILocation(line: 1000, column: 25, scope: !2673)
!2708 = !DILocation(line: 1000, column: 16, scope: !2673)
!2709 = !DILocation(line: 1000, column: 18, scope: !2673)
!2710 = !DILocation(line: 1001, column: 5, scope: !2673)
!2711 = !DILocation(line: 1001, column: 13, scope: !2673)
!2712 = !DILocation(line: 1001, column: 16, scope: !2673)
!2713 = !DILocation(line: 1001, column: 15, scope: !2673)
!2714 = !DILocation(line: 1001, column: 18, scope: !2673)
!2715 = !DILocation(line: 1001, column: 26, scope: !2673)
!2716 = !DILocation(line: 1001, column: 17, scope: !2673)
!2717 = !DILocation(line: 1001, column: 4, scope: !2673)
!2718 = !DILocation(line: 1002, column: 7, scope: !2719)
!2719 = distinct !DILexicalBlock(scope: !2673, file: !1, line: 1002, column: 7)
!2720 = !DILocation(line: 1002, column: 15, scope: !2719)
!2721 = !DILocation(line: 1002, column: 18, scope: !2719)
!2722 = !DILocation(line: 1002, column: 7, scope: !2673)
!2723 = !DILocation(line: 1004, column: 19, scope: !2724)
!2724 = distinct !DILexicalBlock(scope: !2719, file: !1, line: 1003, column: 5)
!2725 = !DILocation(line: 1004, column: 18, scope: !2724)
!2726 = !DILocation(line: 1004, column: 21, scope: !2724)
!2727 = !DILocation(line: 1004, column: 29, scope: !2724)
!2728 = !DILocation(line: 1004, column: 20, scope: !2724)
!2729 = !DILocation(line: 1004, column: 16, scope: !2724)
!2730 = !DILocation(line: 1005, column: 9, scope: !2724)
!2731 = !DILocation(line: 1005, column: 8, scope: !2724)
!2732 = !DILocation(line: 1006, column: 11, scope: !2733)
!2733 = distinct !DILexicalBlock(scope: !2724, file: !1, line: 1006, column: 11)
!2734 = !DILocation(line: 1006, column: 28, scope: !2733)
!2735 = !DILocation(line: 1006, column: 13, scope: !2733)
!2736 = !DILocation(line: 1006, column: 11, scope: !2724)
!2737 = !DILocation(line: 1007, column: 25, scope: !2733)
!2738 = !DILocation(line: 1007, column: 22, scope: !2733)
!2739 = !DILocation(line: 1007, column: 24, scope: !2733)
!2740 = !DILocation(line: 1007, column: 9, scope: !2733)
!2741 = !DILocation(line: 1008, column: 19, scope: !2724)
!2742 = !DILocation(line: 1008, column: 18, scope: !2724)
!2743 = !DILocation(line: 1008, column: 30, scope: !2724)
!2744 = !DILocation(line: 1008, column: 37, scope: !2724)
!2745 = !DILocation(line: 1008, column: 21, scope: !2724)
!2746 = !DILocation(line: 1008, column: 20, scope: !2724)
!2747 = !DILocation(line: 1008, column: 46, scope: !2724)
!2748 = !DILocation(line: 1008, column: 54, scope: !2724)
!2749 = !DILocation(line: 1008, column: 45, scope: !2724)
!2750 = !DILocation(line: 1008, column: 16, scope: !2724)
!2751 = !DILocation(line: 1009, column: 9, scope: !2724)
!2752 = !DILocation(line: 1009, column: 8, scope: !2724)
!2753 = !DILocation(line: 1010, column: 11, scope: !2754)
!2754 = distinct !DILexicalBlock(scope: !2724, file: !1, line: 1010, column: 11)
!2755 = !DILocation(line: 1010, column: 28, scope: !2754)
!2756 = !DILocation(line: 1010, column: 13, scope: !2754)
!2757 = !DILocation(line: 1010, column: 11, scope: !2724)
!2758 = !DILocation(line: 1011, column: 25, scope: !2754)
!2759 = !DILocation(line: 1011, column: 22, scope: !2754)
!2760 = !DILocation(line: 1011, column: 24, scope: !2754)
!2761 = !DILocation(line: 1011, column: 9, scope: !2754)
!2762 = !DILocation(line: 1012, column: 5, scope: !2724)
!2763 = !DILocation(line: 1014, column: 9, scope: !2764)
!2764 = distinct !DILexicalBlock(scope: !2719, file: !1, line: 1014, column: 9)
!2765 = !DILocation(line: 1014, column: 17, scope: !2764)
!2766 = !DILocation(line: 1014, column: 20, scope: !2764)
!2767 = !DILocation(line: 1014, column: 9, scope: !2719)
!2768 = !DILocation(line: 1016, column: 21, scope: !2769)
!2769 = distinct !DILexicalBlock(scope: !2764, file: !1, line: 1015, column: 7)
!2770 = !DILocation(line: 1016, column: 20, scope: !2769)
!2771 = !DILocation(line: 1016, column: 32, scope: !2769)
!2772 = !DILocation(line: 1016, column: 39, scope: !2769)
!2773 = !DILocation(line: 1016, column: 23, scope: !2769)
!2774 = !DILocation(line: 1016, column: 22, scope: !2769)
!2775 = !DILocation(line: 1016, column: 48, scope: !2769)
!2776 = !DILocation(line: 1016, column: 56, scope: !2769)
!2777 = !DILocation(line: 1016, column: 47, scope: !2769)
!2778 = !DILocation(line: 1016, column: 18, scope: !2769)
!2779 = !DILocation(line: 1017, column: 11, scope: !2769)
!2780 = !DILocation(line: 1017, column: 10, scope: !2769)
!2781 = !DILocation(line: 1018, column: 13, scope: !2782)
!2782 = distinct !DILexicalBlock(scope: !2769, file: !1, line: 1018, column: 13)
!2783 = !DILocation(line: 1018, column: 30, scope: !2782)
!2784 = !DILocation(line: 1018, column: 15, scope: !2782)
!2785 = !DILocation(line: 1018, column: 13, scope: !2769)
!2786 = !DILocation(line: 1019, column: 27, scope: !2782)
!2787 = !DILocation(line: 1019, column: 24, scope: !2782)
!2788 = !DILocation(line: 1019, column: 26, scope: !2782)
!2789 = !DILocation(line: 1019, column: 11, scope: !2782)
!2790 = !DILocation(line: 1020, column: 21, scope: !2769)
!2791 = !DILocation(line: 1020, column: 20, scope: !2769)
!2792 = !DILocation(line: 1020, column: 23, scope: !2769)
!2793 = !DILocation(line: 1020, column: 31, scope: !2769)
!2794 = !DILocation(line: 1020, column: 22, scope: !2769)
!2795 = !DILocation(line: 1020, column: 18, scope: !2769)
!2796 = !DILocation(line: 1021, column: 11, scope: !2769)
!2797 = !DILocation(line: 1021, column: 10, scope: !2769)
!2798 = !DILocation(line: 1022, column: 13, scope: !2799)
!2799 = distinct !DILexicalBlock(scope: !2769, file: !1, line: 1022, column: 13)
!2800 = !DILocation(line: 1022, column: 30, scope: !2799)
!2801 = !DILocation(line: 1022, column: 15, scope: !2799)
!2802 = !DILocation(line: 1022, column: 13, scope: !2769)
!2803 = !DILocation(line: 1023, column: 27, scope: !2799)
!2804 = !DILocation(line: 1023, column: 24, scope: !2799)
!2805 = !DILocation(line: 1023, column: 26, scope: !2799)
!2806 = !DILocation(line: 1023, column: 11, scope: !2799)
!2807 = !DILocation(line: 1024, column: 7, scope: !2769)
!2808 = !DILocation(line: 1026, column: 12, scope: !2809)
!2809 = distinct !DILexicalBlock(scope: !2764, file: !1, line: 1026, column: 11)
!2810 = !DILocation(line: 1026, column: 14, scope: !2809)
!2811 = !DILocation(line: 1026, column: 21, scope: !2809)
!2812 = !DILocation(line: 1026, column: 40, scope: !2809)
!2813 = !DILocation(line: 1026, column: 41, scope: !2809)
!2814 = !DILocation(line: 1026, column: 34, scope: !2809)
!2815 = !DILocation(line: 1026, column: 25, scope: !2809)
!2816 = !DILocation(line: 1026, column: 50, scope: !2809)
!2817 = !DILocation(line: 1026, column: 57, scope: !2809)
!2818 = !DILocation(line: 1026, column: 47, scope: !2809)
!2819 = !DILocation(line: 1026, column: 11, scope: !2764)
!2820 = !DILocation(line: 1028, column: 27, scope: !2821)
!2821 = distinct !DILexicalBlock(scope: !2809, file: !1, line: 1027, column: 9)
!2822 = !DILocation(line: 1028, column: 33, scope: !2821)
!2823 = !DILocation(line: 1028, column: 24, scope: !2821)
!2824 = !DILocation(line: 1028, column: 26, scope: !2821)
!2825 = !DILocation(line: 1029, column: 11, scope: !2821)
!2826 = !DILocation(line: 1034, column: 5, scope: !2673)
!2827 = !DILocation(line: 1034, column: 13, scope: !2673)
!2828 = !DILocation(line: 1034, column: 16, scope: !2673)
!2829 = !DILocation(line: 1034, column: 15, scope: !2673)
!2830 = !DILocation(line: 1034, column: 18, scope: !2673)
!2831 = !DILocation(line: 1034, column: 26, scope: !2673)
!2832 = !DILocation(line: 1034, column: 17, scope: !2673)
!2833 = !DILocation(line: 1034, column: 4, scope: !2673)
!2834 = !DILocation(line: 1035, column: 7, scope: !2835)
!2835 = distinct !DILexicalBlock(scope: !2673, file: !1, line: 1035, column: 7)
!2836 = !DILocation(line: 1035, column: 15, scope: !2835)
!2837 = !DILocation(line: 1035, column: 18, scope: !2835)
!2838 = !DILocation(line: 1035, column: 7, scope: !2673)
!2839 = !DILocation(line: 1037, column: 19, scope: !2840)
!2840 = distinct !DILexicalBlock(scope: !2835, file: !1, line: 1036, column: 5)
!2841 = !DILocation(line: 1037, column: 18, scope: !2840)
!2842 = !DILocation(line: 1037, column: 21, scope: !2840)
!2843 = !DILocation(line: 1037, column: 29, scope: !2840)
!2844 = !DILocation(line: 1037, column: 20, scope: !2840)
!2845 = !DILocation(line: 1037, column: 16, scope: !2840)
!2846 = !DILocation(line: 1038, column: 9, scope: !2840)
!2847 = !DILocation(line: 1038, column: 8, scope: !2840)
!2848 = !DILocation(line: 1039, column: 11, scope: !2849)
!2849 = distinct !DILexicalBlock(scope: !2840, file: !1, line: 1039, column: 11)
!2850 = !DILocation(line: 1039, column: 28, scope: !2849)
!2851 = !DILocation(line: 1039, column: 13, scope: !2849)
!2852 = !DILocation(line: 1039, column: 11, scope: !2840)
!2853 = !DILocation(line: 1040, column: 25, scope: !2849)
!2854 = !DILocation(line: 1040, column: 22, scope: !2849)
!2855 = !DILocation(line: 1040, column: 24, scope: !2849)
!2856 = !DILocation(line: 1040, column: 9, scope: !2849)
!2857 = !DILocation(line: 1041, column: 19, scope: !2840)
!2858 = !DILocation(line: 1041, column: 18, scope: !2840)
!2859 = !DILocation(line: 1041, column: 30, scope: !2840)
!2860 = !DILocation(line: 1041, column: 37, scope: !2840)
!2861 = !DILocation(line: 1041, column: 21, scope: !2840)
!2862 = !DILocation(line: 1041, column: 20, scope: !2840)
!2863 = !DILocation(line: 1041, column: 43, scope: !2840)
!2864 = !DILocation(line: 1041, column: 51, scope: !2840)
!2865 = !DILocation(line: 1041, column: 42, scope: !2840)
!2866 = !DILocation(line: 1041, column: 16, scope: !2840)
!2867 = !DILocation(line: 1042, column: 9, scope: !2840)
!2868 = !DILocation(line: 1042, column: 8, scope: !2840)
!2869 = !DILocation(line: 1043, column: 11, scope: !2870)
!2870 = distinct !DILexicalBlock(scope: !2840, file: !1, line: 1043, column: 11)
!2871 = !DILocation(line: 1043, column: 28, scope: !2870)
!2872 = !DILocation(line: 1043, column: 13, scope: !2870)
!2873 = !DILocation(line: 1043, column: 11, scope: !2840)
!2874 = !DILocation(line: 1044, column: 25, scope: !2870)
!2875 = !DILocation(line: 1044, column: 22, scope: !2870)
!2876 = !DILocation(line: 1044, column: 24, scope: !2870)
!2877 = !DILocation(line: 1044, column: 9, scope: !2870)
!2878 = !DILocation(line: 1045, column: 5, scope: !2840)
!2879 = !DILocation(line: 1047, column: 9, scope: !2880)
!2880 = distinct !DILexicalBlock(scope: !2835, file: !1, line: 1047, column: 9)
!2881 = !DILocation(line: 1047, column: 17, scope: !2880)
!2882 = !DILocation(line: 1047, column: 20, scope: !2880)
!2883 = !DILocation(line: 1047, column: 9, scope: !2835)
!2884 = !DILocation(line: 1049, column: 21, scope: !2885)
!2885 = distinct !DILexicalBlock(scope: !2880, file: !1, line: 1048, column: 7)
!2886 = !DILocation(line: 1049, column: 20, scope: !2885)
!2887 = !DILocation(line: 1049, column: 32, scope: !2885)
!2888 = !DILocation(line: 1049, column: 39, scope: !2885)
!2889 = !DILocation(line: 1049, column: 23, scope: !2885)
!2890 = !DILocation(line: 1049, column: 22, scope: !2885)
!2891 = !DILocation(line: 1049, column: 45, scope: !2885)
!2892 = !DILocation(line: 1049, column: 53, scope: !2885)
!2893 = !DILocation(line: 1049, column: 44, scope: !2885)
!2894 = !DILocation(line: 1049, column: 18, scope: !2885)
!2895 = !DILocation(line: 1050, column: 11, scope: !2885)
!2896 = !DILocation(line: 1050, column: 10, scope: !2885)
!2897 = !DILocation(line: 1051, column: 13, scope: !2898)
!2898 = distinct !DILexicalBlock(scope: !2885, file: !1, line: 1051, column: 13)
!2899 = !DILocation(line: 1051, column: 30, scope: !2898)
!2900 = !DILocation(line: 1051, column: 15, scope: !2898)
!2901 = !DILocation(line: 1051, column: 13, scope: !2885)
!2902 = !DILocation(line: 1052, column: 27, scope: !2898)
!2903 = !DILocation(line: 1052, column: 24, scope: !2898)
!2904 = !DILocation(line: 1052, column: 26, scope: !2898)
!2905 = !DILocation(line: 1052, column: 11, scope: !2898)
!2906 = !DILocation(line: 1053, column: 21, scope: !2885)
!2907 = !DILocation(line: 1053, column: 20, scope: !2885)
!2908 = !DILocation(line: 1053, column: 23, scope: !2885)
!2909 = !DILocation(line: 1053, column: 31, scope: !2885)
!2910 = !DILocation(line: 1053, column: 22, scope: !2885)
!2911 = !DILocation(line: 1053, column: 18, scope: !2885)
!2912 = !DILocation(line: 1054, column: 11, scope: !2885)
!2913 = !DILocation(line: 1054, column: 10, scope: !2885)
!2914 = !DILocation(line: 1055, column: 13, scope: !2915)
!2915 = distinct !DILexicalBlock(scope: !2885, file: !1, line: 1055, column: 13)
!2916 = !DILocation(line: 1055, column: 30, scope: !2915)
!2917 = !DILocation(line: 1055, column: 15, scope: !2915)
!2918 = !DILocation(line: 1055, column: 13, scope: !2885)
!2919 = !DILocation(line: 1056, column: 27, scope: !2915)
!2920 = !DILocation(line: 1056, column: 24, scope: !2915)
!2921 = !DILocation(line: 1056, column: 26, scope: !2915)
!2922 = !DILocation(line: 1056, column: 11, scope: !2915)
!2923 = !DILocation(line: 1057, column: 7, scope: !2885)
!2924 = !DILocation(line: 1059, column: 12, scope: !2925)
!2925 = distinct !DILexicalBlock(scope: !2880, file: !1, line: 1059, column: 11)
!2926 = !DILocation(line: 1059, column: 14, scope: !2925)
!2927 = !DILocation(line: 1059, column: 21, scope: !2925)
!2928 = !DILocation(line: 1059, column: 40, scope: !2925)
!2929 = !DILocation(line: 1059, column: 41, scope: !2925)
!2930 = !DILocation(line: 1059, column: 34, scope: !2925)
!2931 = !DILocation(line: 1059, column: 25, scope: !2925)
!2932 = !DILocation(line: 1059, column: 50, scope: !2925)
!2933 = !DILocation(line: 1059, column: 57, scope: !2925)
!2934 = !DILocation(line: 1059, column: 47, scope: !2925)
!2935 = !DILocation(line: 1059, column: 11, scope: !2880)
!2936 = !DILocation(line: 1061, column: 27, scope: !2937)
!2937 = distinct !DILexicalBlock(scope: !2925, file: !1, line: 1060, column: 9)
!2938 = !DILocation(line: 1061, column: 33, scope: !2937)
!2939 = !DILocation(line: 1061, column: 24, scope: !2937)
!2940 = !DILocation(line: 1061, column: 26, scope: !2937)
!2941 = !DILocation(line: 1062, column: 11, scope: !2937)
!2942 = !DILocation(line: 1064, column: 3, scope: !2673)
!2943 = !DILocation(line: 1065, column: 1, scope: !2673)
!2944 = distinct !DISubprogram(name: "SetMagickPixelPacket", scope: !2945, file: !2945, line: 92, type: !2946, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1236)
!2945 = !DIFile(filename: "./magick/pixel-private.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!2946 = !DISubroutineType(types: !2947)
!2947 = !{null, !1107, !2948, !1197, !2950}
!2948 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2949, size: 64)
!2949 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !737)
!2950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !769, size: 64)
!2951 = !DILocalVariable(name: "image", arg: 1, scope: !2944, file: !2945, line: 92, type: !1107)
!2952 = !DILocation(line: 92, column: 54, scope: !2944)
!2953 = !DILocalVariable(name: "color", arg: 2, scope: !2944, file: !2945, line: 93, type: !2948)
!2954 = !DILocation(line: 93, column: 22, scope: !2944)
!2955 = !DILocalVariable(name: "index", arg: 3, scope: !2944, file: !2945, line: 93, type: !1197)
!2956 = !DILocation(line: 93, column: 47, scope: !2944)
!2957 = !DILocalVariable(name: "pixel", arg: 4, scope: !2944, file: !2945, line: 93, type: !2950)
!2958 = !DILocation(line: 93, column: 72, scope: !2944)
!2959 = !DILocation(line: 95, column: 31, scope: !2944)
!2960 = !DILocation(line: 95, column: 14, scope: !2944)
!2961 = !DILocation(line: 95, column: 3, scope: !2944)
!2962 = !DILocation(line: 95, column: 10, scope: !2944)
!2963 = !DILocation(line: 95, column: 13, scope: !2944)
!2964 = !DILocation(line: 96, column: 33, scope: !2944)
!2965 = !DILocation(line: 96, column: 16, scope: !2944)
!2966 = !DILocation(line: 96, column: 3, scope: !2944)
!2967 = !DILocation(line: 96, column: 10, scope: !2944)
!2968 = !DILocation(line: 96, column: 15, scope: !2944)
!2969 = !DILocation(line: 97, column: 32, scope: !2944)
!2970 = !DILocation(line: 97, column: 15, scope: !2944)
!2971 = !DILocation(line: 97, column: 3, scope: !2944)
!2972 = !DILocation(line: 97, column: 10, scope: !2944)
!2973 = !DILocation(line: 97, column: 14, scope: !2944)
!2974 = !DILocation(line: 98, column: 35, scope: !2944)
!2975 = !DILocation(line: 98, column: 18, scope: !2944)
!2976 = !DILocation(line: 98, column: 3, scope: !2944)
!2977 = !DILocation(line: 98, column: 10, scope: !2944)
!2978 = !DILocation(line: 98, column: 17, scope: !2944)
!2979 = !DILocation(line: 99, column: 8, scope: !2980)
!2980 = distinct !DILexicalBlock(scope: !2944, file: !2945, line: 99, column: 7)
!2981 = !DILocation(line: 99, column: 15, scope: !2980)
!2982 = !DILocation(line: 99, column: 26, scope: !2980)
!2983 = !DILocation(line: 99, column: 45, scope: !2980)
!2984 = !DILocation(line: 100, column: 8, scope: !2980)
!2985 = !DILocation(line: 100, column: 14, scope: !2980)
!2986 = !DILocation(line: 99, column: 7, scope: !2944)
!2987 = !DILocation(line: 101, column: 35, scope: !2980)
!2988 = !DILocation(line: 101, column: 18, scope: !2980)
!2989 = !DILocation(line: 101, column: 5, scope: !2980)
!2990 = !DILocation(line: 101, column: 12, scope: !2980)
!2991 = !DILocation(line: 101, column: 17, scope: !2980)
!2992 = !DILocation(line: 102, column: 1, scope: !2944)
!2993 = distinct !DISubprogram(name: "MagickPixelCompositeOver", scope: !2994, file: !2994, line: 86, type: !2995, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1236)
!2994 = !DIFile(filename: "./magick/composite-private.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!2995 = !DISubroutineType(types: !2996)
!2996 = !{null, !2997, !2999, !2997, !2999, !2950}
!2997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2998, size: 64)
!2998 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !769)
!2999 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !781)
!3000 = !DILocalVariable(name: "p", arg: 1, scope: !2993, file: !2994, line: 86, type: !2997)
!3001 = !DILocation(line: 86, column: 70, scope: !2993)
!3002 = !DILocalVariable(name: "alpha", arg: 2, scope: !2993, file: !2994, line: 87, type: !2999)
!3003 = !DILocation(line: 87, column: 24, scope: !2993)
!3004 = !DILocalVariable(name: "q", arg: 3, scope: !2993, file: !2994, line: 87, type: !2997)
!3005 = !DILocation(line: 87, column: 55, scope: !2993)
!3006 = !DILocalVariable(name: "beta", arg: 4, scope: !2993, file: !2994, line: 88, type: !2999)
!3007 = !DILocation(line: 88, column: 24, scope: !2993)
!3008 = !DILocalVariable(name: "composite", arg: 5, scope: !2993, file: !2994, line: 88, type: !2950)
!3009 = !DILocation(line: 88, column: 48, scope: !2993)
!3010 = !DILocalVariable(name: "gamma", scope: !2993, file: !2994, line: 91, type: !728)
!3011 = !DILocation(line: 91, column: 5, scope: !2993)
!3012 = !DILocation(line: 96, column: 7, scope: !3013)
!3013 = distinct !DILexicalBlock(scope: !2993, file: !2994, line: 96, column: 7)
!3014 = !DILocation(line: 96, column: 13, scope: !3013)
!3015 = !DILocation(line: 96, column: 7, scope: !2993)
!3016 = !DILocation(line: 98, column: 8, scope: !3017)
!3017 = distinct !DILexicalBlock(scope: !3013, file: !2994, line: 97, column: 5)
!3018 = !DILocation(line: 98, column: 20, scope: !3017)
!3019 = !DILocation(line: 98, column: 19, scope: !3017)
!3020 = !DILocation(line: 99, column: 7, scope: !3017)
!3021 = !DILocation(line: 101, column: 39, scope: !2993)
!3022 = !DILocation(line: 101, column: 38, scope: !2993)
!3023 = !DILocation(line: 101, column: 45, scope: !2993)
!3024 = !DILocation(line: 101, column: 44, scope: !2993)
!3025 = !DILocation(line: 101, column: 12, scope: !2993)
!3026 = !DILocation(line: 101, column: 8, scope: !2993)
!3027 = !DILocation(line: 103, column: 7, scope: !3028)
!3028 = distinct !DILexicalBlock(scope: !2993, file: !2994, line: 103, column: 7)
!3029 = !DILocation(line: 103, column: 13, scope: !3028)
!3030 = !DILocation(line: 103, column: 7, scope: !2993)
!3031 = !DILocation(line: 103, column: 26, scope: !3028)
!3032 = !DILocation(line: 103, column: 20, scope: !3028)
!3033 = !DILocation(line: 105, column: 57, scope: !2993)
!3034 = !DILocation(line: 105, column: 56, scope: !2993)
!3035 = !DILocation(line: 105, column: 51, scope: !2993)
!3036 = !DILocation(line: 105, column: 22, scope: !2993)
!3037 = !DILocation(line: 105, column: 3, scope: !2993)
!3038 = !DILocation(line: 105, column: 14, scope: !2993)
!3039 = !DILocation(line: 105, column: 21, scope: !2993)
!3040 = !DILocation(line: 106, column: 31, scope: !2993)
!3041 = !DILocation(line: 106, column: 9, scope: !2993)
!3042 = !DILocation(line: 106, column: 8, scope: !2993)
!3043 = !DILocation(line: 107, column: 18, scope: !2993)
!3044 = !DILocation(line: 107, column: 36, scope: !2993)
!3045 = !DILocation(line: 107, column: 39, scope: !2993)
!3046 = !DILocation(line: 107, column: 43, scope: !2993)
!3047 = !DILocation(line: 107, column: 49, scope: !2993)
!3048 = !DILocation(line: 107, column: 52, scope: !2993)
!3049 = !DILocation(line: 107, column: 56, scope: !2993)
!3050 = !DILocation(line: 107, column: 24, scope: !2993)
!3051 = !DILocation(line: 107, column: 23, scope: !2993)
!3052 = !DILocation(line: 107, column: 3, scope: !2993)
!3053 = !DILocation(line: 107, column: 14, scope: !2993)
!3054 = !DILocation(line: 107, column: 17, scope: !2993)
!3055 = !DILocation(line: 108, column: 20, scope: !2993)
!3056 = !DILocation(line: 108, column: 38, scope: !2993)
!3057 = !DILocation(line: 108, column: 41, scope: !2993)
!3058 = !DILocation(line: 108, column: 47, scope: !2993)
!3059 = !DILocation(line: 108, column: 53, scope: !2993)
!3060 = !DILocation(line: 108, column: 56, scope: !2993)
!3061 = !DILocation(line: 108, column: 62, scope: !2993)
!3062 = !DILocation(line: 108, column: 26, scope: !2993)
!3063 = !DILocation(line: 108, column: 25, scope: !2993)
!3064 = !DILocation(line: 108, column: 3, scope: !2993)
!3065 = !DILocation(line: 108, column: 14, scope: !2993)
!3066 = !DILocation(line: 108, column: 19, scope: !2993)
!3067 = !DILocation(line: 109, column: 19, scope: !2993)
!3068 = !DILocation(line: 109, column: 37, scope: !2993)
!3069 = !DILocation(line: 109, column: 40, scope: !2993)
!3070 = !DILocation(line: 109, column: 45, scope: !2993)
!3071 = !DILocation(line: 109, column: 51, scope: !2993)
!3072 = !DILocation(line: 109, column: 54, scope: !2993)
!3073 = !DILocation(line: 109, column: 59, scope: !2993)
!3074 = !DILocation(line: 109, column: 25, scope: !2993)
!3075 = !DILocation(line: 109, column: 24, scope: !2993)
!3076 = !DILocation(line: 109, column: 3, scope: !2993)
!3077 = !DILocation(line: 109, column: 14, scope: !2993)
!3078 = !DILocation(line: 109, column: 18, scope: !2993)
!3079 = !DILocation(line: 110, column: 7, scope: !3080)
!3080 = distinct !DILexicalBlock(scope: !2993, file: !2994, line: 110, column: 7)
!3081 = !DILocation(line: 110, column: 10, scope: !3080)
!3082 = !DILocation(line: 110, column: 21, scope: !3080)
!3083 = !DILocation(line: 110, column: 7, scope: !2993)
!3084 = !DILocation(line: 111, column: 22, scope: !3080)
!3085 = !DILocation(line: 111, column: 40, scope: !3080)
!3086 = !DILocation(line: 111, column: 43, scope: !3080)
!3087 = !DILocation(line: 111, column: 49, scope: !3080)
!3088 = !DILocation(line: 111, column: 55, scope: !3080)
!3089 = !DILocation(line: 111, column: 58, scope: !3080)
!3090 = !DILocation(line: 111, column: 64, scope: !3080)
!3091 = !DILocation(line: 111, column: 28, scope: !3080)
!3092 = !DILocation(line: 111, column: 27, scope: !3080)
!3093 = !DILocation(line: 111, column: 5, scope: !3080)
!3094 = !DILocation(line: 111, column: 16, scope: !3080)
!3095 = !DILocation(line: 111, column: 21, scope: !3080)
!3096 = !DILocation(line: 112, column: 1, scope: !2993)
!3097 = distinct !DISubprogram(name: "SetPixelPacket", scope: !2945, file: !2945, line: 117, type: !3098, scopeLine: 119, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1236)
!3098 = !DISubroutineType(types: !3099)
!3099 = !{null, !1107, !2997, !819, !1200}
!3100 = !DILocalVariable(name: "image", arg: 1, scope: !3097, file: !2945, line: 117, type: !1107)
!3101 = !DILocation(line: 117, column: 48, scope: !3097)
!3102 = !DILocalVariable(name: "pixel", arg: 2, scope: !3097, file: !2945, line: 118, type: !2997)
!3103 = !DILocation(line: 118, column: 28, scope: !3097)
!3104 = !DILocalVariable(name: "color", arg: 3, scope: !3097, file: !2945, line: 118, type: !819)
!3105 = !DILocation(line: 118, column: 47, scope: !3097)
!3106 = !DILocalVariable(name: "index", arg: 4, scope: !3097, file: !2945, line: 118, type: !1200)
!3107 = !DILocation(line: 118, column: 66, scope: !3097)
!3108 = !DILocation(line: 120, column: 3, scope: !3097)
!3109 = !DILocation(line: 121, column: 3, scope: !3097)
!3110 = !DILocation(line: 122, column: 3, scope: !3097)
!3111 = !DILocation(line: 123, column: 3, scope: !3097)
!3112 = !DILocation(line: 124, column: 8, scope: !3113)
!3113 = distinct !DILexicalBlock(scope: !3097, file: !2945, line: 124, column: 7)
!3114 = !DILocation(line: 124, column: 15, scope: !3113)
!3115 = !DILocation(line: 124, column: 26, scope: !3113)
!3116 = !DILocation(line: 124, column: 45, scope: !3113)
!3117 = !DILocation(line: 125, column: 8, scope: !3113)
!3118 = !DILocation(line: 125, column: 15, scope: !3113)
!3119 = !DILocation(line: 125, column: 29, scope: !3113)
!3120 = !DILocation(line: 124, column: 7, scope: !3097)
!3121 = !DILocation(line: 126, column: 5, scope: !3122)
!3122 = distinct !DILexicalBlock(scope: !3123, file: !2945, line: 126, column: 5)
!3123 = distinct !DILexicalBlock(scope: !3113, file: !2945, line: 126, column: 5)
!3124 = !DILocation(line: 126, column: 5, scope: !3123)
!3125 = !DILocation(line: 127, column: 1, scope: !3097)
!3126 = distinct !DISubprogram(name: "DrawClipPath", scope: !1, file: !1, line: 1429, type: !3127, scopeLine: 1431, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1236)
!3127 = !DISubroutineType(types: !3128)
!3128 = !{!777, !801, !1525, !904}
!3129 = !DILocalVariable(name: "image", arg: 1, scope: !3126, file: !1, line: 1429, type: !801)
!3130 = !DILocation(line: 1429, column: 52, scope: !3126)
!3131 = !DILocalVariable(name: "draw_info", arg: 2, scope: !3126, file: !1, line: 1430, type: !1525)
!3132 = !DILocation(line: 1430, column: 19, scope: !3126)
!3133 = !DILocalVariable(name: "name", arg: 3, scope: !3126, file: !1, line: 1430, type: !904)
!3134 = !DILocation(line: 1430, column: 41, scope: !3126)
!3135 = !DILocalVariable(name: "clip_mask", scope: !3126, file: !1, line: 1433, type: !924)
!3136 = !DILocation(line: 1433, column: 5, scope: !3126)
!3137 = !DILocalVariable(name: "value", scope: !3126, file: !1, line: 1436, type: !904)
!3138 = !DILocation(line: 1436, column: 6, scope: !3126)
!3139 = !DILocalVariable(name: "clone_info", scope: !3126, file: !1, line: 1439, type: !699)
!3140 = !DILocation(line: 1439, column: 6, scope: !3126)
!3141 = !DILocalVariable(name: "status", scope: !3126, file: !1, line: 1442, type: !3142)
!3142 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickStatusType", file: !26, line: 147, baseType: !5)
!3143 = !DILocation(line: 1442, column: 5, scope: !3126)
!3144 = !DILocation(line: 1446, column: 7, scope: !3145)
!3145 = distinct !DILexicalBlock(scope: !3126, file: !1, line: 1446, column: 7)
!3146 = !DILocation(line: 1446, column: 14, scope: !3145)
!3147 = !DILocation(line: 1446, column: 20, scope: !3145)
!3148 = !DILocation(line: 1446, column: 7, scope: !3126)
!3149 = !DILocation(line: 1447, column: 61, scope: !3145)
!3150 = !DILocation(line: 1447, column: 68, scope: !3145)
!3151 = !DILocation(line: 1447, column: 12, scope: !3145)
!3152 = !DILocation(line: 1447, column: 5, scope: !3145)
!3153 = !DILocation(line: 1449, column: 29, scope: !3126)
!3154 = !DILocation(line: 1449, column: 58, scope: !3126)
!3155 = !DILocation(line: 1449, column: 10, scope: !3126)
!3156 = !DILocation(line: 1450, column: 26, scope: !3126)
!3157 = !DILocation(line: 1450, column: 32, scope: !3126)
!3158 = !DILocation(line: 1450, column: 9, scope: !3126)
!3159 = !DILocation(line: 1450, column: 8, scope: !3126)
!3160 = !DILocation(line: 1451, column: 7, scope: !3161)
!3161 = distinct !DILexicalBlock(scope: !3126, file: !1, line: 1451, column: 7)
!3162 = !DILocation(line: 1451, column: 13, scope: !3161)
!3163 = !DILocation(line: 1451, column: 7, scope: !3126)
!3164 = !DILocation(line: 1452, column: 5, scope: !3161)
!3165 = !DILocation(line: 1453, column: 7, scope: !3166)
!3166 = distinct !DILexicalBlock(scope: !3126, file: !1, line: 1453, column: 7)
!3167 = !DILocation(line: 1453, column: 14, scope: !3166)
!3168 = !DILocation(line: 1453, column: 24, scope: !3166)
!3169 = !DILocation(line: 1453, column: 7, scope: !3126)
!3170 = !DILocalVariable(name: "clip_mask", scope: !3171, file: !1, line: 1456, type: !801)
!3171 = distinct !DILexicalBlock(scope: !3166, file: !1, line: 1454, column: 5)
!3172 = !DILocation(line: 1456, column: 10, scope: !3171)
!3173 = !DILocation(line: 1458, column: 28, scope: !3171)
!3174 = !DILocation(line: 1458, column: 34, scope: !3171)
!3175 = !DILocation(line: 1458, column: 41, scope: !3171)
!3176 = !DILocation(line: 1458, column: 49, scope: !3171)
!3177 = !DILocation(line: 1458, column: 56, scope: !3171)
!3178 = !DILocation(line: 1459, column: 10, scope: !3171)
!3179 = !DILocation(line: 1459, column: 17, scope: !3171)
!3180 = !DILocation(line: 1458, column: 17, scope: !3171)
!3181 = !DILocation(line: 1458, column: 16, scope: !3171)
!3182 = !DILocation(line: 1460, column: 11, scope: !3183)
!3183 = distinct !DILexicalBlock(scope: !3171, file: !1, line: 1460, column: 11)
!3184 = !DILocation(line: 1460, column: 21, scope: !3183)
!3185 = !DILocation(line: 1460, column: 11, scope: !3171)
!3186 = !DILocation(line: 1461, column: 9, scope: !3183)
!3187 = !DILocation(line: 1462, column: 31, scope: !3171)
!3188 = !DILocation(line: 1462, column: 37, scope: !3171)
!3189 = !DILocation(line: 1462, column: 14, scope: !3171)
!3190 = !DILocation(line: 1463, column: 30, scope: !3171)
!3191 = !DILocation(line: 1463, column: 17, scope: !3171)
!3192 = !DILocation(line: 1463, column: 16, scope: !3171)
!3193 = !DILocation(line: 1464, column: 5, scope: !3171)
!3194 = !DILocation(line: 1465, column: 42, scope: !3126)
!3195 = !DILocation(line: 1465, column: 49, scope: !3126)
!3196 = !DILocation(line: 1465, column: 60, scope: !3126)
!3197 = !DILocation(line: 1466, column: 6, scope: !3126)
!3198 = !DILocation(line: 1466, column: 13, scope: !3126)
!3199 = !DILocation(line: 1465, column: 10, scope: !3126)
!3200 = !DILocation(line: 1467, column: 3, scope: !3126)
!3201 = !DILocation(line: 1467, column: 10, scope: !3126)
!3202 = !DILocation(line: 1467, column: 21, scope: !3126)
!3203 = !DILocation(line: 1467, column: 38, scope: !3126)
!3204 = !DILocation(line: 1467, column: 45, scope: !3126)
!3205 = !DILocation(line: 1468, column: 34, scope: !3126)
!3206 = !DILocation(line: 1468, column: 41, scope: !3126)
!3207 = !DILocation(line: 1468, column: 10, scope: !3126)
!3208 = !DILocation(line: 1469, column: 7, scope: !3209)
!3209 = distinct !DILexicalBlock(scope: !3126, file: !1, line: 1469, column: 7)
!3210 = !DILocation(line: 1469, column: 14, scope: !3209)
!3211 = !DILocation(line: 1469, column: 20, scope: !3209)
!3212 = !DILocation(line: 1469, column: 7, scope: !3126)
!3213 = !DILocation(line: 1471, column: 7, scope: !3209)
!3214 = !DILocation(line: 1471, column: 18, scope: !3209)
!3215 = !DILocation(line: 1470, column: 12, scope: !3209)
!3216 = !DILocation(line: 1470, column: 5, scope: !3209)
!3217 = !DILocation(line: 1472, column: 47, scope: !3126)
!3218 = !DILocation(line: 1472, column: 14, scope: !3126)
!3219 = !DILocation(line: 1472, column: 13, scope: !3126)
!3220 = !DILocation(line: 1473, column: 23, scope: !3126)
!3221 = !DILocation(line: 1473, column: 35, scope: !3126)
!3222 = !DILocation(line: 1473, column: 45, scope: !3126)
!3223 = !DILocation(line: 1473, column: 10, scope: !3126)
!3224 = !DILocation(line: 1474, column: 40, scope: !3126)
!3225 = !DILocation(line: 1474, column: 52, scope: !3126)
!3226 = !DILocation(line: 1474, column: 58, scope: !3126)
!3227 = !DILocation(line: 1474, column: 65, scope: !3126)
!3228 = !DILocation(line: 1474, column: 10, scope: !3126)
!3229 = !DILocation(line: 1475, column: 3, scope: !3126)
!3230 = !DILocation(line: 1475, column: 15, scope: !3126)
!3231 = !DILocation(line: 1475, column: 24, scope: !3126)
!3232 = !DILocation(line: 1476, column: 20, scope: !3126)
!3233 = !DILocation(line: 1476, column: 27, scope: !3126)
!3234 = !DILocation(line: 1476, column: 37, scope: !3126)
!3235 = !DILocation(line: 1476, column: 10, scope: !3126)
!3236 = !DILocation(line: 1476, column: 9, scope: !3126)
!3237 = !DILocation(line: 1477, column: 23, scope: !3126)
!3238 = !DILocation(line: 1477, column: 30, scope: !3126)
!3239 = !DILocation(line: 1477, column: 11, scope: !3126)
!3240 = !DILocation(line: 1477, column: 9, scope: !3126)
!3241 = !DILocation(line: 1478, column: 30, scope: !3126)
!3242 = !DILocation(line: 1478, column: 14, scope: !3126)
!3243 = !DILocation(line: 1478, column: 13, scope: !3126)
!3244 = !DILocation(line: 1479, column: 7, scope: !3245)
!3245 = distinct !DILexicalBlock(scope: !3126, file: !1, line: 1479, column: 7)
!3246 = !DILocation(line: 1479, column: 14, scope: !3245)
!3247 = !DILocation(line: 1479, column: 20, scope: !3245)
!3248 = !DILocation(line: 1479, column: 7, scope: !3126)
!3249 = !DILocation(line: 1480, column: 12, scope: !3245)
!3250 = !DILocation(line: 1480, column: 5, scope: !3245)
!3251 = !DILocation(line: 1481, column: 10, scope: !3126)
!3252 = !DILocation(line: 1481, column: 17, scope: !3126)
!3253 = !DILocation(line: 1481, column: 3, scope: !3126)
!3254 = !DILocation(line: 1482, column: 1, scope: !3126)
!3255 = distinct !DISubprogram(name: "DrawImage", scope: !1, file: !1, line: 1704, type: !3256, scopeLine: 1705, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1236)
!3256 = !DISubroutineType(types: !3257)
!3257 = !{!777, !801, !1525}
!3258 = !DILocalVariable(name: "image", arg: 1, scope: !3255, file: !1, line: 1704, type: !801)
!3259 = !DILocation(line: 1704, column: 49, scope: !3255)
!3260 = !DILocalVariable(name: "draw_info", arg: 2, scope: !3255, file: !1, line: 1704, type: !1525)
!3261 = !DILocation(line: 1704, column: 71, scope: !3255)
!3262 = !DILocalVariable(name: "affine", scope: !3255, file: !1, line: 1709, type: !724)
!3263 = !DILocation(line: 1709, column: 5, scope: !3255)
!3264 = !DILocalVariable(name: "current", scope: !3255, file: !1, line: 1710, type: !724)
!3265 = !DILocation(line: 1710, column: 5, scope: !3255)
!3266 = !DILocalVariable(name: "key", scope: !3255, file: !1, line: 1713, type: !3267)
!3267 = !DICompositeType(tag: DW_TAG_array_type, baseType: !705, size: 65536, elements: !3268)
!3268 = !{!3269}
!3269 = !DISubrange(count: 8192)
!3270 = !DILocation(line: 1713, column: 5, scope: !3255)
!3271 = !DILocalVariable(name: "keyword", scope: !3255, file: !1, line: 1714, type: !924)
!3272 = !DILocation(line: 1714, column: 5, scope: !3255)
!3273 = !DILocalVariable(name: "geometry", scope: !3255, file: !1, line: 1715, type: !924)
!3274 = !DILocation(line: 1715, column: 5, scope: !3255)
!3275 = !DILocalVariable(name: "name", scope: !3255, file: !1, line: 1716, type: !924)
!3276 = !DILocation(line: 1716, column: 5, scope: !3255)
!3277 = !DILocalVariable(name: "pattern", scope: !3255, file: !1, line: 1717, type: !924)
!3278 = !DILocation(line: 1717, column: 5, scope: !3255)
!3279 = !DILocalVariable(name: "primitive", scope: !3255, file: !1, line: 1718, type: !704)
!3280 = !DILocation(line: 1718, column: 6, scope: !3255)
!3281 = !DILocalVariable(name: "token", scope: !3255, file: !1, line: 1719, type: !704)
!3282 = !DILocation(line: 1719, column: 6, scope: !3255)
!3283 = !DILocalVariable(name: "q", scope: !3255, file: !1, line: 1722, type: !904)
!3284 = !DILocation(line: 1722, column: 6, scope: !3255)
!3285 = !DILocalVariable(name: "angle", scope: !3255, file: !1, line: 1725, type: !728)
!3286 = !DILocation(line: 1725, column: 5, scope: !3255)
!3287 = !DILocalVariable(name: "factor", scope: !3255, file: !1, line: 1726, type: !728)
!3288 = !DILocation(line: 1726, column: 5, scope: !3255)
!3289 = !DILocalVariable(name: "primitive_extent", scope: !3255, file: !1, line: 1727, type: !728)
!3290 = !DILocation(line: 1727, column: 5, scope: !3255)
!3291 = !DILocalVariable(name: "graphic_context", scope: !3255, file: !1, line: 1730, type: !1183)
!3292 = !DILocation(line: 1730, column: 7, scope: !3255)
!3293 = !DILocalVariable(name: "proceed", scope: !3255, file: !1, line: 1733, type: !777)
!3294 = !DILocation(line: 1733, column: 5, scope: !3255)
!3295 = !DILocalVariable(name: "status", scope: !3255, file: !1, line: 1736, type: !3142)
!3296 = !DILocation(line: 1736, column: 5, scope: !3255)
!3297 = !DILocalVariable(name: "point", scope: !3255, file: !1, line: 1739, type: !794)
!3298 = !DILocation(line: 1739, column: 5, scope: !3255)
!3299 = !DILocalVariable(name: "start_color", scope: !3255, file: !1, line: 1742, type: !737)
!3300 = !DILocation(line: 1742, column: 5, scope: !3255)
!3301 = !DILocalVariable(name: "primitive_info", scope: !3255, file: !1, line: 1745, type: !1184)
!3302 = !DILocation(line: 1745, column: 6, scope: !3255)
!3303 = !DILocalVariable(name: "primitive_type", scope: !3255, file: !1, line: 1748, type: !1191)
!3304 = !DILocation(line: 1748, column: 5, scope: !3255)
!3305 = !DILocalVariable(name: "p", scope: !3255, file: !1, line: 1751, type: !904)
!3306 = !DILocation(line: 1751, column: 6, scope: !3255)
!3307 = !DILocalVariable(name: "i", scope: !3255, file: !1, line: 1754, type: !717)
!3308 = !DILocation(line: 1754, column: 5, scope: !3255)
!3309 = !DILocalVariable(name: "x", scope: !3255, file: !1, line: 1755, type: !717)
!3310 = !DILocation(line: 1755, column: 5, scope: !3255)
!3311 = !DILocalVariable(name: "bounds", scope: !3255, file: !1, line: 1758, type: !756)
!3312 = !DILocation(line: 1758, column: 5, scope: !3255)
!3313 = !DILocalVariable(name: "length", scope: !3255, file: !1, line: 1761, type: !712)
!3314 = !DILocation(line: 1761, column: 5, scope: !3255)
!3315 = !DILocalVariable(name: "number_points", scope: !3255, file: !1, line: 1762, type: !712)
!3316 = !DILocation(line: 1762, column: 5, scope: !3255)
!3317 = !DILocalVariable(name: "j", scope: !3255, file: !1, line: 1765, type: !717)
!3318 = !DILocation(line: 1765, column: 5, scope: !3255)
!3319 = !DILocalVariable(name: "k", scope: !3255, file: !1, line: 1766, type: !717)
!3320 = !DILocation(line: 1766, column: 5, scope: !3255)
!3321 = !DILocalVariable(name: "n", scope: !3255, file: !1, line: 1767, type: !717)
!3322 = !DILocation(line: 1767, column: 5, scope: !3255)
!3323 = !DILocation(line: 1774, column: 7, scope: !3324)
!3324 = distinct !DILexicalBlock(scope: !3255, file: !1, line: 1774, column: 7)
!3325 = !DILocation(line: 1774, column: 14, scope: !3324)
!3326 = !DILocation(line: 1774, column: 20, scope: !3324)
!3327 = !DILocation(line: 1774, column: 7, scope: !3255)
!3328 = !DILocation(line: 1775, column: 61, scope: !3324)
!3329 = !DILocation(line: 1775, column: 68, scope: !3324)
!3330 = !DILocation(line: 1775, column: 12, scope: !3324)
!3331 = !DILocation(line: 1775, column: 5, scope: !3324)
!3332 = !DILocation(line: 1778, column: 7, scope: !3333)
!3333 = distinct !DILexicalBlock(scope: !3255, file: !1, line: 1778, column: 7)
!3334 = !DILocation(line: 1778, column: 14, scope: !3333)
!3335 = !DILocation(line: 1778, column: 20, scope: !3333)
!3336 = !DILocation(line: 1778, column: 7, scope: !3255)
!3337 = !DILocation(line: 1779, column: 12, scope: !3333)
!3338 = !DILocation(line: 1779, column: 5, scope: !3333)
!3339 = !DILocation(line: 1780, column: 8, scope: !3340)
!3340 = distinct !DILexicalBlock(scope: !3255, file: !1, line: 1780, column: 7)
!3341 = !DILocation(line: 1780, column: 19, scope: !3340)
!3342 = !DILocation(line: 1780, column: 29, scope: !3340)
!3343 = !DILocation(line: 1780, column: 47, scope: !3340)
!3344 = !DILocation(line: 1781, column: 9, scope: !3340)
!3345 = !DILocation(line: 1781, column: 20, scope: !3340)
!3346 = !DILocation(line: 1781, column: 8, scope: !3340)
!3347 = !DILocation(line: 1781, column: 30, scope: !3340)
!3348 = !DILocation(line: 1780, column: 7, scope: !3255)
!3349 = !DILocation(line: 1782, column: 5, scope: !3340)
!3350 = !DILocation(line: 1783, column: 7, scope: !3351)
!3351 = distinct !DILexicalBlock(scope: !3255, file: !1, line: 1783, column: 7)
!3352 = !DILocation(line: 1783, column: 14, scope: !3351)
!3353 = !DILocation(line: 1783, column: 20, scope: !3351)
!3354 = !DILocation(line: 1783, column: 7, scope: !3255)
!3355 = !DILocation(line: 1784, column: 12, scope: !3351)
!3356 = !DILocation(line: 1784, column: 5, scope: !3351)
!3357 = !DILocation(line: 1785, column: 8, scope: !3358)
!3358 = distinct !DILexicalBlock(scope: !3255, file: !1, line: 1785, column: 7)
!3359 = !DILocation(line: 1785, column: 19, scope: !3358)
!3360 = !DILocation(line: 1785, column: 7, scope: !3358)
!3361 = !DILocation(line: 1785, column: 29, scope: !3358)
!3362 = !DILocation(line: 1785, column: 7, scope: !3255)
!3363 = !DILocation(line: 1786, column: 29, scope: !3358)
!3364 = !DILocation(line: 1786, column: 40, scope: !3358)
!3365 = !DILocation(line: 1786, column: 15, scope: !3358)
!3366 = !DILocation(line: 1786, column: 14, scope: !3358)
!3367 = !DILocation(line: 1786, column: 5, scope: !3358)
!3368 = !DILocation(line: 1788, column: 28, scope: !3358)
!3369 = !DILocation(line: 1788, column: 39, scope: !3358)
!3370 = !DILocation(line: 1788, column: 48, scope: !3358)
!3371 = !DILocation(line: 1788, column: 57, scope: !3358)
!3372 = !DILocation(line: 1788, column: 64, scope: !3358)
!3373 = !DILocation(line: 1788, column: 15, scope: !3358)
!3374 = !DILocation(line: 1788, column: 14, scope: !3358)
!3375 = !DILocation(line: 1789, column: 7, scope: !3376)
!3376 = distinct !DILexicalBlock(scope: !3255, file: !1, line: 1789, column: 7)
!3377 = !DILocation(line: 1789, column: 17, scope: !3376)
!3378 = !DILocation(line: 1789, column: 7, scope: !3255)
!3379 = !DILocation(line: 1790, column: 5, scope: !3376)
!3380 = !DILocation(line: 1791, column: 36, scope: !3255)
!3381 = !DILocation(line: 1791, column: 29, scope: !3255)
!3382 = !DILocation(line: 1791, column: 20, scope: !3255)
!3383 = !DILocation(line: 1791, column: 19, scope: !3255)
!3384 = !DILocation(line: 1792, column: 27, scope: !3255)
!3385 = !DILocation(line: 1792, column: 39, scope: !3255)
!3386 = !DILocation(line: 1792, column: 10, scope: !3255)
!3387 = !DILocation(line: 1793, column: 4, scope: !3255)
!3388 = !DILocation(line: 1797, column: 33, scope: !3255)
!3389 = !DILocation(line: 1797, column: 19, scope: !3255)
!3390 = !DILocation(line: 1797, column: 18, scope: !3255)
!3391 = !DILocation(line: 1799, column: 7, scope: !3392)
!3392 = distinct !DILexicalBlock(scope: !3255, file: !1, line: 1799, column: 7)
!3393 = !DILocation(line: 1799, column: 23, scope: !3392)
!3394 = !DILocation(line: 1799, column: 7, scope: !3255)
!3395 = !DILocation(line: 1801, column: 31, scope: !3396)
!3396 = distinct !DILexicalBlock(scope: !3392, file: !1, line: 1800, column: 5)
!3397 = !DILocation(line: 1801, column: 17, scope: !3396)
!3398 = !DILocation(line: 1801, column: 16, scope: !3396)
!3399 = !DILocation(line: 1802, column: 7, scope: !3400)
!3400 = distinct !DILexicalBlock(scope: !3401, file: !1, line: 1802, column: 7)
!3401 = distinct !DILexicalBlock(scope: !3396, file: !1, line: 1802, column: 7)
!3402 = !DILocation(line: 1802, column: 7, scope: !3401)
!3403 = !DILocation(line: 1805, column: 16, scope: !3255)
!3404 = !DILocation(line: 1806, column: 66, scope: !3255)
!3405 = !DILocation(line: 1806, column: 36, scope: !3255)
!3406 = !DILocation(line: 1806, column: 18, scope: !3255)
!3407 = !DILocation(line: 1806, column: 17, scope: !3255)
!3408 = !DILocation(line: 1808, column: 7, scope: !3409)
!3409 = distinct !DILexicalBlock(scope: !3255, file: !1, line: 1808, column: 7)
!3410 = !DILocation(line: 1808, column: 22, scope: !3409)
!3411 = !DILocation(line: 1808, column: 7, scope: !3255)
!3412 = !DILocation(line: 1810, column: 31, scope: !3413)
!3413 = distinct !DILexicalBlock(scope: !3409, file: !1, line: 1809, column: 5)
!3414 = !DILocation(line: 1810, column: 17, scope: !3413)
!3415 = !DILocation(line: 1810, column: 16, scope: !3413)
!3416 = !DILocation(line: 1811, column: 7, scope: !3413)
!3417 = !DILocation(line: 1811, column: 15, scope: !3418)
!3418 = distinct !DILexicalBlock(scope: !3419, file: !1, line: 1811, column: 7)
!3419 = distinct !DILexicalBlock(scope: !3413, file: !1, line: 1811, column: 7)
!3420 = !DILocation(line: 1811, column: 17, scope: !3418)
!3421 = !DILocation(line: 1811, column: 7, scope: !3419)
!3422 = !DILocation(line: 1812, column: 44, scope: !3418)
!3423 = !DILocation(line: 1812, column: 60, scope: !3418)
!3424 = !DILocation(line: 1812, column: 28, scope: !3418)
!3425 = !DILocation(line: 1812, column: 9, scope: !3418)
!3426 = !DILocation(line: 1812, column: 25, scope: !3418)
!3427 = !DILocation(line: 1812, column: 27, scope: !3418)
!3428 = !DILocation(line: 1811, column: 24, scope: !3418)
!3429 = !DILocation(line: 1811, column: 7, scope: !3418)
!3430 = distinct !{!3430, !3421, !3431}
!3431 = !DILocation(line: 1812, column: 62, scope: !3419)
!3432 = !DILocation(line: 1813, column: 60, scope: !3413)
!3433 = !DILocation(line: 1813, column: 37, scope: !3413)
!3434 = !DILocation(line: 1813, column: 23, scope: !3413)
!3435 = !DILocation(line: 1813, column: 22, scope: !3413)
!3436 = !DILocation(line: 1814, column: 7, scope: !3437)
!3437 = distinct !DILexicalBlock(scope: !3438, file: !1, line: 1814, column: 7)
!3438 = distinct !DILexicalBlock(scope: !3413, file: !1, line: 1814, column: 7)
!3439 = !DILocation(line: 1814, column: 7, scope: !3438)
!3440 = !DILocation(line: 1817, column: 55, scope: !3255)
!3441 = !DILocation(line: 1817, column: 22, scope: !3255)
!3442 = !DILocation(line: 1817, column: 3, scope: !3255)
!3443 = !DILocation(line: 1817, column: 19, scope: !3255)
!3444 = !DILocation(line: 1817, column: 21, scope: !3255)
!3445 = !DILocation(line: 1818, column: 3, scope: !3255)
!3446 = !DILocation(line: 1818, column: 19, scope: !3255)
!3447 = !DILocation(line: 1818, column: 23, scope: !3255)
!3448 = !DILocation(line: 1818, column: 31, scope: !3255)
!3449 = !DILocation(line: 1818, column: 38, scope: !3255)
!3450 = !DILocation(line: 1819, column: 8, scope: !3451)
!3451 = distinct !DILexicalBlock(scope: !3255, file: !1, line: 1819, column: 7)
!3452 = !DILocation(line: 1819, column: 15, scope: !3451)
!3453 = !DILocation(line: 1819, column: 20, scope: !3451)
!3454 = !DILocation(line: 1819, column: 26, scope: !3451)
!3455 = !DILocation(line: 1819, column: 32, scope: !3451)
!3456 = !DILocation(line: 1819, column: 36, scope: !3451)
!3457 = !DILocation(line: 1819, column: 43, scope: !3451)
!3458 = !DILocation(line: 1819, column: 48, scope: !3451)
!3459 = !DILocation(line: 1819, column: 55, scope: !3451)
!3460 = !DILocation(line: 1819, column: 7, scope: !3255)
!3461 = !DILocation(line: 1821, column: 41, scope: !3462)
!3462 = distinct !DILexicalBlock(scope: !3451, file: !1, line: 1820, column: 5)
!3463 = !DILocation(line: 1821, column: 48, scope: !3462)
!3464 = !DILocation(line: 1821, column: 7, scope: !3462)
!3465 = !DILocation(line: 1821, column: 23, scope: !3462)
!3466 = !DILocation(line: 1821, column: 27, scope: !3462)
!3467 = !DILocation(line: 1821, column: 35, scope: !3462)
!3468 = !DILocation(line: 1821, column: 40, scope: !3462)
!3469 = !DILocation(line: 1822, column: 42, scope: !3462)
!3470 = !DILocation(line: 1822, column: 49, scope: !3462)
!3471 = !DILocation(line: 1822, column: 7, scope: !3462)
!3472 = !DILocation(line: 1822, column: 23, scope: !3462)
!3473 = !DILocation(line: 1822, column: 27, scope: !3462)
!3474 = !DILocation(line: 1822, column: 35, scope: !3462)
!3475 = !DILocation(line: 1822, column: 41, scope: !3462)
!3476 = !DILocation(line: 1823, column: 5, scope: !3462)
!3477 = !DILocation(line: 1824, column: 23, scope: !3255)
!3478 = !DILocation(line: 1824, column: 9, scope: !3255)
!3479 = !DILocation(line: 1824, column: 8, scope: !3255)
!3480 = !DILocation(line: 1825, column: 53, scope: !3255)
!3481 = !DILocation(line: 1825, column: 60, scope: !3255)
!3482 = !DILocation(line: 1825, column: 10, scope: !3255)
!3483 = !DILocation(line: 1826, column: 28, scope: !3484)
!3484 = distinct !DILexicalBlock(scope: !3255, file: !1, line: 1826, column: 7)
!3485 = !DILocation(line: 1826, column: 7, scope: !3484)
!3486 = !DILocation(line: 1826, column: 47, scope: !3484)
!3487 = !DILocation(line: 1826, column: 7, scope: !3255)
!3488 = !DILocation(line: 1827, column: 5, scope: !3484)
!3489 = !DILocation(line: 1828, column: 9, scope: !3255)
!3490 = !DILocation(line: 1829, column: 10, scope: !3491)
!3491 = distinct !DILexicalBlock(scope: !3255, file: !1, line: 1829, column: 3)
!3492 = !DILocation(line: 1829, column: 9, scope: !3491)
!3493 = !DILocation(line: 1829, column: 8, scope: !3491)
!3494 = !DILocation(line: 1829, column: 22, scope: !3495)
!3495 = distinct !DILexicalBlock(scope: !3491, file: !1, line: 1829, column: 3)
!3496 = !DILocation(line: 1829, column: 21, scope: !3495)
!3497 = !DILocation(line: 1829, column: 24, scope: !3495)
!3498 = !DILocation(line: 1829, column: 3, scope: !3491)
!3499 = !DILocation(line: 1834, column: 20, scope: !3500)
!3500 = distinct !DILexicalBlock(scope: !3495, file: !1, line: 1830, column: 3)
!3501 = !DILocation(line: 1834, column: 25, scope: !3500)
!3502 = !DILocation(line: 1834, column: 5, scope: !3500)
!3503 = !DILocation(line: 1835, column: 9, scope: !3504)
!3504 = distinct !DILexicalBlock(scope: !3500, file: !1, line: 1835, column: 9)
!3505 = !DILocation(line: 1835, column: 18, scope: !3504)
!3506 = !DILocation(line: 1835, column: 9, scope: !3500)
!3507 = !DILocation(line: 1836, column: 7, scope: !3504)
!3508 = !DILocation(line: 1837, column: 9, scope: !3509)
!3509 = distinct !DILexicalBlock(scope: !3500, file: !1, line: 1837, column: 9)
!3510 = !DILocation(line: 1837, column: 18, scope: !3509)
!3511 = !DILocation(line: 1837, column: 9, scope: !3500)
!3512 = !DILocation(line: 1842, column: 9, scope: !3513)
!3513 = distinct !DILexicalBlock(scope: !3509, file: !1, line: 1838, column: 7)
!3514 = !DILocation(line: 1842, column: 18, scope: !3513)
!3515 = !DILocation(line: 1842, column: 17, scope: !3513)
!3516 = !DILocation(line: 1842, column: 20, scope: !3513)
!3517 = !DILocation(line: 1842, column: 29, scope: !3513)
!3518 = !DILocation(line: 1842, column: 34, scope: !3513)
!3519 = !DILocation(line: 1842, column: 33, scope: !3513)
!3520 = !DILocation(line: 1842, column: 36, scope: !3513)
!3521 = !DILocation(line: 0, scope: !3513)
!3522 = !DILocation(line: 1843, column: 12, scope: !3513)
!3523 = distinct !{!3523, !3512, !3522}
!3524 = !DILocation(line: 1844, column: 9, scope: !3513)
!3525 = distinct !{!3525, !3498, !3526}
!3526 = !DILocation(line: 3177, column: 3, scope: !3491)
!3527 = !DILocation(line: 1846, column: 7, scope: !3500)
!3528 = !DILocation(line: 1846, column: 16, scope: !3500)
!3529 = !DILocation(line: 1846, column: 9, scope: !3500)
!3530 = !DILocation(line: 1846, column: 8, scope: !3500)
!3531 = !DILocation(line: 1846, column: 24, scope: !3500)
!3532 = !DILocation(line: 1846, column: 6, scope: !3500)
!3533 = !DILocation(line: 1847, column: 19, scope: !3500)
!3534 = !DILocation(line: 1848, column: 13, scope: !3500)
!3535 = !DILocation(line: 1848, column: 29, scope: !3500)
!3536 = !DILocation(line: 1848, column: 33, scope: !3500)
!3537 = !DILocation(line: 1849, column: 5, scope: !3500)
!3538 = !DILocation(line: 1850, column: 13, scope: !3500)
!3539 = !DILocation(line: 1850, column: 5, scope: !3500)
!3540 = !DILocation(line: 1853, column: 9, scope: !3541)
!3541 = distinct !DILexicalBlock(scope: !3500, file: !1, line: 1851, column: 5)
!3542 = !DILocation(line: 1857, column: 36, scope: !3543)
!3543 = distinct !DILexicalBlock(scope: !3544, file: !1, line: 1857, column: 13)
!3544 = distinct !DILexicalBlock(scope: !3541, file: !1, line: 1856, column: 7)
!3545 = !DILocation(line: 1857, column: 13, scope: !3543)
!3546 = !DILocation(line: 1857, column: 45, scope: !3543)
!3547 = !DILocation(line: 1857, column: 13, scope: !3544)
!3548 = !DILocation(line: 1859, column: 28, scope: !3549)
!3549 = distinct !DILexicalBlock(scope: !3543, file: !1, line: 1858, column: 11)
!3550 = !DILocation(line: 1859, column: 33, scope: !3549)
!3551 = !DILocation(line: 1859, column: 13, scope: !3549)
!3552 = !DILocation(line: 1860, column: 38, scope: !3549)
!3553 = !DILocation(line: 1860, column: 23, scope: !3549)
!3554 = !DILocation(line: 1860, column: 20, scope: !3549)
!3555 = !DILocation(line: 1860, column: 22, scope: !3549)
!3556 = !DILocation(line: 1861, column: 28, scope: !3549)
!3557 = !DILocation(line: 1861, column: 33, scope: !3549)
!3558 = !DILocation(line: 1861, column: 13, scope: !3549)
!3559 = !DILocation(line: 1862, column: 18, scope: !3560)
!3560 = distinct !DILexicalBlock(scope: !3549, file: !1, line: 1862, column: 17)
!3561 = !DILocation(line: 1862, column: 17, scope: !3560)
!3562 = !DILocation(line: 1862, column: 24, scope: !3560)
!3563 = !DILocation(line: 1862, column: 17, scope: !3549)
!3564 = !DILocation(line: 1863, column: 30, scope: !3560)
!3565 = !DILocation(line: 1863, column: 35, scope: !3560)
!3566 = !DILocation(line: 1863, column: 15, scope: !3560)
!3567 = !DILocation(line: 1864, column: 38, scope: !3549)
!3568 = !DILocation(line: 1864, column: 23, scope: !3549)
!3569 = !DILocation(line: 1864, column: 20, scope: !3549)
!3570 = !DILocation(line: 1864, column: 22, scope: !3549)
!3571 = !DILocation(line: 1865, column: 28, scope: !3549)
!3572 = !DILocation(line: 1865, column: 33, scope: !3549)
!3573 = !DILocation(line: 1865, column: 13, scope: !3549)
!3574 = !DILocation(line: 1866, column: 18, scope: !3575)
!3575 = distinct !DILexicalBlock(scope: !3549, file: !1, line: 1866, column: 17)
!3576 = !DILocation(line: 1866, column: 17, scope: !3575)
!3577 = !DILocation(line: 1866, column: 24, scope: !3575)
!3578 = !DILocation(line: 1866, column: 17, scope: !3549)
!3579 = !DILocation(line: 1867, column: 30, scope: !3575)
!3580 = !DILocation(line: 1867, column: 35, scope: !3575)
!3581 = !DILocation(line: 1867, column: 15, scope: !3575)
!3582 = !DILocation(line: 1868, column: 38, scope: !3549)
!3583 = !DILocation(line: 1868, column: 23, scope: !3549)
!3584 = !DILocation(line: 1868, column: 20, scope: !3549)
!3585 = !DILocation(line: 1868, column: 22, scope: !3549)
!3586 = !DILocation(line: 1869, column: 28, scope: !3549)
!3587 = !DILocation(line: 1869, column: 33, scope: !3549)
!3588 = !DILocation(line: 1869, column: 13, scope: !3549)
!3589 = !DILocation(line: 1870, column: 18, scope: !3590)
!3590 = distinct !DILexicalBlock(scope: !3549, file: !1, line: 1870, column: 17)
!3591 = !DILocation(line: 1870, column: 17, scope: !3590)
!3592 = !DILocation(line: 1870, column: 24, scope: !3590)
!3593 = !DILocation(line: 1870, column: 17, scope: !3549)
!3594 = !DILocation(line: 1871, column: 30, scope: !3590)
!3595 = !DILocation(line: 1871, column: 35, scope: !3590)
!3596 = !DILocation(line: 1871, column: 15, scope: !3590)
!3597 = !DILocation(line: 1872, column: 38, scope: !3549)
!3598 = !DILocation(line: 1872, column: 23, scope: !3549)
!3599 = !DILocation(line: 1872, column: 20, scope: !3549)
!3600 = !DILocation(line: 1872, column: 22, scope: !3549)
!3601 = !DILocation(line: 1873, column: 28, scope: !3549)
!3602 = !DILocation(line: 1873, column: 33, scope: !3549)
!3603 = !DILocation(line: 1873, column: 13, scope: !3549)
!3604 = !DILocation(line: 1874, column: 18, scope: !3605)
!3605 = distinct !DILexicalBlock(scope: !3549, file: !1, line: 1874, column: 17)
!3606 = !DILocation(line: 1874, column: 17, scope: !3605)
!3607 = !DILocation(line: 1874, column: 24, scope: !3605)
!3608 = !DILocation(line: 1874, column: 17, scope: !3549)
!3609 = !DILocation(line: 1875, column: 30, scope: !3605)
!3610 = !DILocation(line: 1875, column: 35, scope: !3605)
!3611 = !DILocation(line: 1875, column: 15, scope: !3605)
!3612 = !DILocation(line: 1876, column: 38, scope: !3549)
!3613 = !DILocation(line: 1876, column: 23, scope: !3549)
!3614 = !DILocation(line: 1876, column: 20, scope: !3549)
!3615 = !DILocation(line: 1876, column: 22, scope: !3549)
!3616 = !DILocation(line: 1877, column: 28, scope: !3549)
!3617 = !DILocation(line: 1877, column: 33, scope: !3549)
!3618 = !DILocation(line: 1877, column: 13, scope: !3549)
!3619 = !DILocation(line: 1878, column: 18, scope: !3620)
!3620 = distinct !DILexicalBlock(scope: !3549, file: !1, line: 1878, column: 17)
!3621 = !DILocation(line: 1878, column: 17, scope: !3620)
!3622 = !DILocation(line: 1878, column: 24, scope: !3620)
!3623 = !DILocation(line: 1878, column: 17, scope: !3549)
!3624 = !DILocation(line: 1879, column: 30, scope: !3620)
!3625 = !DILocation(line: 1879, column: 35, scope: !3620)
!3626 = !DILocation(line: 1879, column: 15, scope: !3620)
!3627 = !DILocation(line: 1880, column: 38, scope: !3549)
!3628 = !DILocation(line: 1880, column: 23, scope: !3549)
!3629 = !DILocation(line: 1880, column: 20, scope: !3549)
!3630 = !DILocation(line: 1880, column: 22, scope: !3549)
!3631 = !DILocation(line: 1881, column: 13, scope: !3549)
!3632 = !DILocation(line: 1883, column: 33, scope: !3633)
!3633 = distinct !DILexicalBlock(scope: !3544, file: !1, line: 1883, column: 13)
!3634 = !DILocation(line: 1883, column: 13, scope: !3633)
!3635 = !DILocation(line: 1883, column: 42, scope: !3633)
!3636 = !DILocation(line: 1883, column: 13, scope: !3544)
!3637 = !DILocation(line: 1885, column: 27, scope: !3638)
!3638 = distinct !DILexicalBlock(scope: !3633, file: !1, line: 1884, column: 11)
!3639 = !DILocation(line: 1886, column: 13, scope: !3638)
!3640 = !DILocation(line: 1888, column: 15, scope: !3544)
!3641 = !DILocation(line: 1889, column: 9, scope: !3544)
!3642 = !DILocation(line: 1894, column: 36, scope: !3643)
!3643 = distinct !DILexicalBlock(scope: !3644, file: !1, line: 1894, column: 13)
!3644 = distinct !DILexicalBlock(scope: !3541, file: !1, line: 1893, column: 7)
!3645 = !DILocation(line: 1894, column: 13, scope: !3643)
!3646 = !DILocation(line: 1894, column: 45, scope: !3643)
!3647 = !DILocation(line: 1894, column: 13, scope: !3644)
!3648 = !DILocation(line: 1896, column: 27, scope: !3649)
!3649 = distinct !DILexicalBlock(scope: !3643, file: !1, line: 1895, column: 11)
!3650 = !DILocation(line: 1897, column: 13, scope: !3649)
!3651 = !DILocation(line: 1899, column: 42, scope: !3652)
!3652 = distinct !DILexicalBlock(scope: !3644, file: !1, line: 1899, column: 13)
!3653 = !DILocation(line: 1899, column: 13, scope: !3652)
!3654 = !DILocation(line: 1899, column: 51, scope: !3652)
!3655 = !DILocation(line: 1899, column: 13, scope: !3644)
!3656 = !DILocation(line: 1901, column: 28, scope: !3657)
!3657 = distinct !DILexicalBlock(scope: !3652, file: !1, line: 1900, column: 11)
!3658 = !DILocation(line: 1901, column: 33, scope: !3657)
!3659 = !DILocation(line: 1901, column: 13, scope: !3657)
!3660 = !DILocation(line: 1902, column: 39, scope: !3657)
!3661 = !DILocation(line: 1902, column: 46, scope: !3657)
!3662 = !DILocation(line: 1902, column: 62, scope: !3657)
!3663 = !DILocation(line: 1902, column: 66, scope: !3657)
!3664 = !DILocation(line: 1903, column: 16, scope: !3657)
!3665 = !DILocation(line: 1903, column: 23, scope: !3657)
!3666 = !DILocation(line: 1902, column: 20, scope: !3657)
!3667 = !DILocation(line: 1904, column: 13, scope: !3657)
!3668 = !DILocation(line: 1906, column: 15, scope: !3644)
!3669 = !DILocation(line: 1907, column: 9, scope: !3644)
!3670 = !DILocation(line: 1912, column: 39, scope: !3671)
!3671 = distinct !DILexicalBlock(scope: !3672, file: !1, line: 1912, column: 13)
!3672 = distinct !DILexicalBlock(scope: !3541, file: !1, line: 1911, column: 7)
!3673 = !DILocation(line: 1912, column: 13, scope: !3671)
!3674 = !DILocation(line: 1912, column: 48, scope: !3671)
!3675 = !DILocation(line: 1912, column: 13, scope: !3672)
!3676 = !DILocation(line: 1917, column: 28, scope: !3677)
!3677 = distinct !DILexicalBlock(scope: !3671, file: !1, line: 1913, column: 11)
!3678 = !DILocation(line: 1917, column: 33, scope: !3677)
!3679 = !DILocation(line: 1917, column: 13, scope: !3677)
!3680 = !DILocation(line: 1918, column: 33, scope: !3677)
!3681 = !DILocation(line: 1918, column: 49, scope: !3677)
!3682 = !DILocation(line: 1918, column: 53, scope: !3677)
!3683 = !DILocation(line: 1918, column: 63, scope: !3677)
!3684 = !DILocation(line: 1918, column: 20, scope: !3677)
!3685 = !DILocation(line: 1919, column: 33, scope: !3677)
!3686 = !DILocation(line: 1919, column: 39, scope: !3677)
!3687 = !DILocation(line: 1919, column: 55, scope: !3677)
!3688 = !DILocation(line: 1920, column: 15, scope: !3677)
!3689 = !DILocation(line: 1920, column: 31, scope: !3677)
!3690 = !DILocation(line: 1920, column: 35, scope: !3677)
!3691 = !DILocation(line: 1919, column: 20, scope: !3677)
!3692 = !DILocation(line: 1921, column: 13, scope: !3677)
!3693 = !DILocation(line: 1923, column: 39, scope: !3694)
!3694 = distinct !DILexicalBlock(scope: !3672, file: !1, line: 1923, column: 13)
!3695 = !DILocation(line: 1923, column: 13, scope: !3694)
!3696 = !DILocation(line: 1923, column: 48, scope: !3694)
!3697 = !DILocation(line: 1923, column: 13, scope: !3672)
!3698 = !DILocalVariable(name: "fill_rule", scope: !3699, file: !1, line: 1926, type: !717)
!3699 = distinct !DILexicalBlock(scope: !3694, file: !1, line: 1924, column: 11)
!3700 = !DILocation(line: 1926, column: 15, scope: !3699)
!3701 = !DILocation(line: 1928, column: 28, scope: !3699)
!3702 = !DILocation(line: 1928, column: 33, scope: !3699)
!3703 = !DILocation(line: 1928, column: 13, scope: !3699)
!3704 = !DILocation(line: 1930, column: 15, scope: !3699)
!3705 = !DILocation(line: 1929, column: 23, scope: !3699)
!3706 = !DILocation(line: 1929, column: 22, scope: !3699)
!3707 = !DILocation(line: 1931, column: 17, scope: !3708)
!3708 = distinct !DILexicalBlock(scope: !3699, file: !1, line: 1931, column: 17)
!3709 = !DILocation(line: 1931, column: 27, scope: !3708)
!3710 = !DILocation(line: 1931, column: 17, scope: !3699)
!3711 = !DILocation(line: 1933, column: 23, scope: !3712)
!3712 = distinct !DILexicalBlock(scope: !3708, file: !1, line: 1932, column: 15)
!3713 = !DILocation(line: 1934, column: 17, scope: !3712)
!3714 = !DILocation(line: 1936, column: 54, scope: !3699)
!3715 = !DILocation(line: 1936, column: 43, scope: !3699)
!3716 = !DILocation(line: 1936, column: 13, scope: !3699)
!3717 = !DILocation(line: 1936, column: 29, scope: !3699)
!3718 = !DILocation(line: 1936, column: 33, scope: !3699)
!3719 = !DILocation(line: 1936, column: 42, scope: !3699)
!3720 = !DILocation(line: 1937, column: 13, scope: !3699)
!3721 = !DILocation(line: 1939, column: 40, scope: !3722)
!3722 = distinct !DILexicalBlock(scope: !3672, file: !1, line: 1939, column: 13)
!3723 = !DILocation(line: 1939, column: 13, scope: !3722)
!3724 = !DILocation(line: 1939, column: 49, scope: !3722)
!3725 = !DILocation(line: 1939, column: 13, scope: !3672)
!3726 = !DILocalVariable(name: "clip_units", scope: !3727, file: !1, line: 1942, type: !717)
!3727 = distinct !DILexicalBlock(scope: !3722, file: !1, line: 1940, column: 11)
!3728 = !DILocation(line: 1942, column: 15, scope: !3727)
!3729 = !DILocation(line: 1944, column: 28, scope: !3727)
!3730 = !DILocation(line: 1944, column: 33, scope: !3727)
!3731 = !DILocation(line: 1944, column: 13, scope: !3727)
!3732 = !DILocation(line: 1946, column: 15, scope: !3727)
!3733 = !DILocation(line: 1945, column: 24, scope: !3727)
!3734 = !DILocation(line: 1945, column: 23, scope: !3727)
!3735 = !DILocation(line: 1947, column: 17, scope: !3736)
!3736 = distinct !DILexicalBlock(scope: !3727, file: !1, line: 1947, column: 17)
!3737 = !DILocation(line: 1947, column: 28, scope: !3736)
!3738 = !DILocation(line: 1947, column: 17, scope: !3727)
!3739 = !DILocation(line: 1949, column: 23, scope: !3740)
!3740 = distinct !DILexicalBlock(scope: !3736, file: !1, line: 1948, column: 15)
!3741 = !DILocation(line: 1950, column: 17, scope: !3740)
!3742 = !DILocation(line: 1952, column: 60, scope: !3727)
!3743 = !DILocation(line: 1952, column: 44, scope: !3727)
!3744 = !DILocation(line: 1952, column: 13, scope: !3727)
!3745 = !DILocation(line: 1952, column: 29, scope: !3727)
!3746 = !DILocation(line: 1952, column: 33, scope: !3727)
!3747 = !DILocation(line: 1952, column: 43, scope: !3727)
!3748 = !DILocation(line: 1953, column: 17, scope: !3749)
!3749 = distinct !DILexicalBlock(scope: !3727, file: !1, line: 1953, column: 17)
!3750 = !DILocation(line: 1953, column: 28, scope: !3749)
!3751 = !DILocation(line: 1953, column: 17, scope: !3727)
!3752 = !DILocation(line: 1955, column: 17, scope: !3753)
!3753 = distinct !DILexicalBlock(scope: !3749, file: !1, line: 1954, column: 15)
!3754 = !DILocation(line: 1956, column: 27, scope: !3753)
!3755 = !DILocation(line: 1956, column: 38, scope: !3753)
!3756 = !DILocation(line: 1956, column: 45, scope: !3753)
!3757 = !DILocation(line: 1956, column: 24, scope: !3753)
!3758 = !DILocation(line: 1956, column: 26, scope: !3753)
!3759 = !DILocation(line: 1957, column: 27, scope: !3753)
!3760 = !DILocation(line: 1957, column: 38, scope: !3753)
!3761 = !DILocation(line: 1957, column: 45, scope: !3753)
!3762 = !DILocation(line: 1957, column: 24, scope: !3753)
!3763 = !DILocation(line: 1957, column: 26, scope: !3753)
!3764 = !DILocation(line: 1958, column: 27, scope: !3753)
!3765 = !DILocation(line: 1958, column: 38, scope: !3753)
!3766 = !DILocation(line: 1958, column: 45, scope: !3753)
!3767 = !DILocation(line: 1958, column: 24, scope: !3753)
!3768 = !DILocation(line: 1958, column: 26, scope: !3753)
!3769 = !DILocation(line: 1959, column: 27, scope: !3753)
!3770 = !DILocation(line: 1959, column: 38, scope: !3753)
!3771 = !DILocation(line: 1959, column: 45, scope: !3753)
!3772 = !DILocation(line: 1959, column: 24, scope: !3753)
!3773 = !DILocation(line: 1959, column: 26, scope: !3753)
!3774 = !DILocation(line: 1960, column: 17, scope: !3753)
!3775 = !DILocation(line: 1962, column: 13, scope: !3727)
!3776 = !DILocation(line: 1964, column: 36, scope: !3777)
!3777 = distinct !DILexicalBlock(scope: !3672, file: !1, line: 1964, column: 13)
!3778 = !DILocation(line: 1964, column: 13, scope: !3777)
!3779 = !DILocation(line: 1964, column: 45, scope: !3777)
!3780 = !DILocation(line: 1964, column: 13, scope: !3672)
!3781 = !DILocation(line: 1966, column: 27, scope: !3782)
!3782 = distinct !DILexicalBlock(scope: !3777, file: !1, line: 1965, column: 11)
!3783 = !DILocation(line: 1967, column: 13, scope: !3782)
!3784 = !DILocation(line: 1969, column: 35, scope: !3785)
!3785 = distinct !DILexicalBlock(scope: !3672, file: !1, line: 1969, column: 13)
!3786 = !DILocation(line: 1969, column: 13, scope: !3785)
!3787 = !DILocation(line: 1969, column: 44, scope: !3785)
!3788 = !DILocation(line: 1969, column: 13, scope: !3672)
!3789 = !DILocation(line: 1971, column: 27, scope: !3790)
!3790 = distinct !DILexicalBlock(scope: !3785, file: !1, line: 1970, column: 11)
!3791 = !DILocation(line: 1972, column: 13, scope: !3790)
!3792 = !DILocation(line: 1974, column: 15, scope: !3672)
!3793 = !DILocation(line: 1975, column: 9, scope: !3672)
!3794 = !DILocation(line: 1980, column: 38, scope: !3795)
!3795 = distinct !DILexicalBlock(scope: !3796, file: !1, line: 1980, column: 13)
!3796 = distinct !DILexicalBlock(scope: !3541, file: !1, line: 1979, column: 7)
!3797 = !DILocation(line: 1980, column: 13, scope: !3795)
!3798 = !DILocation(line: 1980, column: 47, scope: !3795)
!3799 = !DILocation(line: 1980, column: 13, scope: !3796)
!3800 = !DILocalVariable(name: "decorate", scope: !3801, file: !1, line: 1983, type: !717)
!3801 = distinct !DILexicalBlock(scope: !3795, file: !1, line: 1981, column: 11)
!3802 = !DILocation(line: 1983, column: 15, scope: !3801)
!3803 = !DILocation(line: 1985, column: 28, scope: !3801)
!3804 = !DILocation(line: 1985, column: 33, scope: !3801)
!3805 = !DILocation(line: 1985, column: 13, scope: !3801)
!3806 = !DILocation(line: 1987, column: 15, scope: !3801)
!3807 = !DILocation(line: 1986, column: 22, scope: !3801)
!3808 = !DILocation(line: 1986, column: 21, scope: !3801)
!3809 = !DILocation(line: 1988, column: 17, scope: !3810)
!3810 = distinct !DILexicalBlock(scope: !3801, file: !1, line: 1988, column: 17)
!3811 = !DILocation(line: 1988, column: 26, scope: !3810)
!3812 = !DILocation(line: 1988, column: 17, scope: !3801)
!3813 = !DILocation(line: 1990, column: 23, scope: !3814)
!3814 = distinct !DILexicalBlock(scope: !3810, file: !1, line: 1989, column: 15)
!3815 = !DILocation(line: 1991, column: 17, scope: !3814)
!3816 = !DILocation(line: 1993, column: 59, scope: !3801)
!3817 = !DILocation(line: 1993, column: 42, scope: !3801)
!3818 = !DILocation(line: 1993, column: 13, scope: !3801)
!3819 = !DILocation(line: 1993, column: 29, scope: !3801)
!3820 = !DILocation(line: 1993, column: 33, scope: !3801)
!3821 = !DILocation(line: 1993, column: 41, scope: !3801)
!3822 = !DILocation(line: 1994, column: 13, scope: !3801)
!3823 = !DILocation(line: 1996, column: 39, scope: !3824)
!3824 = distinct !DILexicalBlock(scope: !3796, file: !1, line: 1996, column: 13)
!3825 = !DILocation(line: 1996, column: 13, scope: !3824)
!3826 = !DILocation(line: 1996, column: 48, scope: !3824)
!3827 = !DILocation(line: 1996, column: 13, scope: !3796)
!3828 = !DILocalVariable(name: "direction", scope: !3829, file: !1, line: 1999, type: !717)
!3829 = distinct !DILexicalBlock(scope: !3824, file: !1, line: 1997, column: 11)
!3830 = !DILocation(line: 1999, column: 15, scope: !3829)
!3831 = !DILocation(line: 2001, column: 28, scope: !3829)
!3832 = !DILocation(line: 2001, column: 33, scope: !3829)
!3833 = !DILocation(line: 2001, column: 13, scope: !3829)
!3834 = !DILocation(line: 2003, column: 15, scope: !3829)
!3835 = !DILocation(line: 2002, column: 23, scope: !3829)
!3836 = !DILocation(line: 2002, column: 22, scope: !3829)
!3837 = !DILocation(line: 2004, column: 17, scope: !3838)
!3838 = distinct !DILexicalBlock(scope: !3829, file: !1, line: 2004, column: 17)
!3839 = !DILocation(line: 2004, column: 27, scope: !3838)
!3840 = !DILocation(line: 2004, column: 17, scope: !3829)
!3841 = !DILocation(line: 2005, column: 21, scope: !3838)
!3842 = !DILocation(line: 2005, column: 15, scope: !3838)
!3843 = !DILocation(line: 2007, column: 61, scope: !3838)
!3844 = !DILocation(line: 2007, column: 45, scope: !3838)
!3845 = !DILocation(line: 2007, column: 15, scope: !3838)
!3846 = !DILocation(line: 2007, column: 31, scope: !3838)
!3847 = !DILocation(line: 2007, column: 35, scope: !3838)
!3848 = !DILocation(line: 2007, column: 44, scope: !3838)
!3849 = !DILocation(line: 2008, column: 13, scope: !3829)
!3850 = !DILocation(line: 2010, column: 15, scope: !3796)
!3851 = !DILocation(line: 2011, column: 9, scope: !3796)
!3852 = !DILocation(line: 2016, column: 37, scope: !3853)
!3853 = distinct !DILexicalBlock(scope: !3854, file: !1, line: 2016, column: 13)
!3854 = distinct !DILexicalBlock(scope: !3541, file: !1, line: 2015, column: 7)
!3855 = !DILocation(line: 2016, column: 13, scope: !3853)
!3856 = !DILocation(line: 2016, column: 46, scope: !3853)
!3857 = !DILocation(line: 2016, column: 13, scope: !3854)
!3858 = !DILocation(line: 2018, column: 27, scope: !3859)
!3859 = distinct !DILexicalBlock(scope: !3853, file: !1, line: 2017, column: 11)
!3860 = !DILocation(line: 2019, column: 13, scope: !3859)
!3861 = !DILocation(line: 2021, column: 38, scope: !3862)
!3862 = distinct !DILexicalBlock(scope: !3854, file: !1, line: 2021, column: 13)
!3863 = !DILocation(line: 2021, column: 13, scope: !3862)
!3864 = !DILocation(line: 2021, column: 47, scope: !3862)
!3865 = !DILocation(line: 2021, column: 13, scope: !3854)
!3866 = !DILocation(line: 2023, column: 28, scope: !3867)
!3867 = distinct !DILexicalBlock(scope: !3862, file: !1, line: 2022, column: 11)
!3868 = !DILocation(line: 2023, column: 33, scope: !3867)
!3869 = !DILocation(line: 2023, column: 13, scope: !3867)
!3870 = !DILocation(line: 2024, column: 33, scope: !3867)
!3871 = !DILocation(line: 2024, column: 49, scope: !3867)
!3872 = !DILocation(line: 2024, column: 53, scope: !3867)
!3873 = !DILocation(line: 2024, column: 62, scope: !3867)
!3874 = !DILocation(line: 2024, column: 20, scope: !3867)
!3875 = !DILocation(line: 2025, column: 13, scope: !3867)
!3876 = !DILocation(line: 2027, column: 15, scope: !3854)
!3877 = !DILocation(line: 2028, column: 9, scope: !3854)
!3878 = !DILocation(line: 2033, column: 34, scope: !3879)
!3879 = distinct !DILexicalBlock(scope: !3880, file: !1, line: 2033, column: 13)
!3880 = distinct !DILexicalBlock(scope: !3541, file: !1, line: 2032, column: 7)
!3881 = !DILocation(line: 2033, column: 13, scope: !3879)
!3882 = !DILocation(line: 2033, column: 43, scope: !3879)
!3883 = !DILocation(line: 2033, column: 13, scope: !3880)
!3884 = !DILocation(line: 2035, column: 28, scope: !3885)
!3885 = distinct !DILexicalBlock(scope: !3879, file: !1, line: 2034, column: 11)
!3886 = !DILocation(line: 2035, column: 33, scope: !3885)
!3887 = !DILocation(line: 2035, column: 13, scope: !3885)
!3888 = !DILocation(line: 2036, column: 39, scope: !3885)
!3889 = !DILocation(line: 2036, column: 66, scope: !3885)
!3890 = !DILocation(line: 2036, column: 20, scope: !3885)
!3891 = !DILocation(line: 2037, column: 34, scope: !3892)
!3892 = distinct !DILexicalBlock(scope: !3885, file: !1, line: 2037, column: 17)
!3893 = !DILocation(line: 2037, column: 40, scope: !3892)
!3894 = !DILocation(line: 2037, column: 17, scope: !3892)
!3895 = !DILocation(line: 2037, column: 49, scope: !3892)
!3896 = !DILocation(line: 2037, column: 17, scope: !3885)
!3897 = !DILocation(line: 2038, column: 38, scope: !3892)
!3898 = !DILocation(line: 2038, column: 44, scope: !3892)
!3899 = !DILocation(line: 2038, column: 54, scope: !3892)
!3900 = !DILocation(line: 2039, column: 18, scope: !3892)
!3901 = !DILocation(line: 2039, column: 34, scope: !3892)
!3902 = !DILocation(line: 2039, column: 38, scope: !3892)
!3903 = !DILocation(line: 2038, column: 22, scope: !3892)
!3904 = !DILocation(line: 2038, column: 15, scope: !3892)
!3905 = !DILocation(line: 2042, column: 44, scope: !3906)
!3906 = distinct !DILexicalBlock(scope: !3892, file: !1, line: 2041, column: 15)
!3907 = !DILocation(line: 2042, column: 51, scope: !3906)
!3908 = !DILocation(line: 2042, column: 67, scope: !3906)
!3909 = !DILocation(line: 2042, column: 71, scope: !3906)
!3910 = !DILocation(line: 2043, column: 20, scope: !3906)
!3911 = !DILocation(line: 2043, column: 27, scope: !3906)
!3912 = !DILocation(line: 2042, column: 25, scope: !3906)
!3913 = !DILocation(line: 2042, column: 23, scope: !3906)
!3914 = !DILocation(line: 2044, column: 21, scope: !3915)
!3915 = distinct !DILexicalBlock(scope: !3906, file: !1, line: 2044, column: 21)
!3916 = !DILocation(line: 2044, column: 28, scope: !3915)
!3917 = !DILocation(line: 2044, column: 21, scope: !3906)
!3918 = !DILocalVariable(name: "pattern_info", scope: !3919, file: !1, line: 2047, type: !1051)
!3919 = distinct !DILexicalBlock(scope: !3915, file: !1, line: 2045, column: 19)
!3920 = !DILocation(line: 2047, column: 24, scope: !3919)
!3921 = !DILocation(line: 2049, column: 34, scope: !3919)
!3922 = !DILocation(line: 2049, column: 33, scope: !3919)
!3923 = !DILocation(line: 2050, column: 45, scope: !3919)
!3924 = !DILocation(line: 2050, column: 59, scope: !3919)
!3925 = !DILocation(line: 2050, column: 68, scope: !3919)
!3926 = !DILocation(line: 2050, column: 28, scope: !3919)
!3927 = !DILocation(line: 2053, column: 33, scope: !3919)
!3928 = !DILocation(line: 2053, column: 47, scope: !3919)
!3929 = !DILocation(line: 2053, column: 54, scope: !3919)
!3930 = !DILocation(line: 2053, column: 23, scope: !3919)
!3931 = !DILocation(line: 2052, column: 21, scope: !3919)
!3932 = !DILocation(line: 2052, column: 37, scope: !3919)
!3933 = !DILocation(line: 2052, column: 41, scope: !3919)
!3934 = !DILocation(line: 2052, column: 53, scope: !3919)
!3935 = !DILocation(line: 2054, column: 37, scope: !3919)
!3936 = !DILocation(line: 2054, column: 44, scope: !3919)
!3937 = !DILocation(line: 2054, column: 21, scope: !3919)
!3938 = !DILocation(line: 2055, column: 51, scope: !3919)
!3939 = !DILocation(line: 2055, column: 34, scope: !3919)
!3940 = !DILocation(line: 2055, column: 33, scope: !3919)
!3941 = !DILocation(line: 2056, column: 19, scope: !3919)
!3942 = !DILocation(line: 2058, column: 13, scope: !3885)
!3943 = !DILocation(line: 2060, column: 42, scope: !3944)
!3944 = distinct !DILexicalBlock(scope: !3880, file: !1, line: 2060, column: 13)
!3945 = !DILocation(line: 2060, column: 13, scope: !3944)
!3946 = !DILocation(line: 2060, column: 51, scope: !3944)
!3947 = !DILocation(line: 2060, column: 13, scope: !3880)
!3948 = !DILocation(line: 2062, column: 28, scope: !3949)
!3949 = distinct !DILexicalBlock(scope: !3944, file: !1, line: 2061, column: 11)
!3950 = !DILocation(line: 2062, column: 33, scope: !3949)
!3951 = !DILocation(line: 2062, column: 13, scope: !3949)
!3952 = !DILocation(line: 2063, column: 27, scope: !3949)
!3953 = !DILocation(line: 2063, column: 20, scope: !3949)
!3954 = !DILocation(line: 2063, column: 38, scope: !3949)
!3955 = !DILocation(line: 2063, column: 19, scope: !3949)
!3956 = !DILocation(line: 2065, column: 33, scope: !3949)
!3957 = !DILocation(line: 2065, column: 55, scope: !3949)
!3958 = !DILocation(line: 2065, column: 40, scope: !3949)
!3959 = !DILocation(line: 2065, column: 39, scope: !3949)
!3960 = !DILocation(line: 2065, column: 32, scope: !3949)
!3961 = !DILocation(line: 2065, column: 27, scope: !3949)
!3962 = !DILocation(line: 2064, column: 61, scope: !3949)
!3963 = !DILocation(line: 2064, column: 46, scope: !3949)
!3964 = !DILocation(line: 2064, column: 13, scope: !3949)
!3965 = !DILocation(line: 2064, column: 29, scope: !3949)
!3966 = !DILocation(line: 2064, column: 33, scope: !3949)
!3967 = !DILocation(line: 2064, column: 38, scope: !3949)
!3968 = !DILocation(line: 2064, column: 45, scope: !3949)
!3969 = !DILocation(line: 2066, column: 13, scope: !3949)
!3970 = !DILocation(line: 2068, column: 39, scope: !3971)
!3971 = distinct !DILexicalBlock(scope: !3880, file: !1, line: 2068, column: 13)
!3972 = !DILocation(line: 2068, column: 13, scope: !3971)
!3973 = !DILocation(line: 2068, column: 48, scope: !3971)
!3974 = !DILocation(line: 2068, column: 13, scope: !3880)
!3975 = !DILocalVariable(name: "fill_rule", scope: !3976, file: !1, line: 2071, type: !717)
!3976 = distinct !DILexicalBlock(scope: !3971, file: !1, line: 2069, column: 11)
!3977 = !DILocation(line: 2071, column: 15, scope: !3976)
!3978 = !DILocation(line: 2073, column: 28, scope: !3976)
!3979 = !DILocation(line: 2073, column: 33, scope: !3976)
!3980 = !DILocation(line: 2073, column: 13, scope: !3976)
!3981 = !DILocation(line: 2075, column: 15, scope: !3976)
!3982 = !DILocation(line: 2074, column: 23, scope: !3976)
!3983 = !DILocation(line: 2074, column: 22, scope: !3976)
!3984 = !DILocation(line: 2076, column: 17, scope: !3985)
!3985 = distinct !DILexicalBlock(scope: !3976, file: !1, line: 2076, column: 17)
!3986 = !DILocation(line: 2076, column: 27, scope: !3985)
!3987 = !DILocation(line: 2076, column: 17, scope: !3976)
!3988 = !DILocation(line: 2078, column: 23, scope: !3989)
!3989 = distinct !DILexicalBlock(scope: !3985, file: !1, line: 2077, column: 15)
!3990 = !DILocation(line: 2079, column: 17, scope: !3989)
!3991 = !DILocation(line: 2081, column: 54, scope: !3976)
!3992 = !DILocation(line: 2081, column: 43, scope: !3976)
!3993 = !DILocation(line: 2081, column: 13, scope: !3976)
!3994 = !DILocation(line: 2081, column: 29, scope: !3976)
!3995 = !DILocation(line: 2081, column: 33, scope: !3976)
!3996 = !DILocation(line: 2081, column: 42, scope: !3976)
!3997 = !DILocation(line: 2082, column: 13, scope: !3976)
!3998 = !DILocation(line: 2084, column: 34, scope: !3999)
!3999 = distinct !DILexicalBlock(scope: !3880, file: !1, line: 2084, column: 13)
!4000 = !DILocation(line: 2084, column: 13, scope: !3999)
!4001 = !DILocation(line: 2084, column: 43, scope: !3999)
!4002 = !DILocation(line: 2084, column: 13, scope: !3880)
!4003 = !DILocation(line: 2086, column: 28, scope: !4004)
!4004 = distinct !DILexicalBlock(scope: !3999, file: !1, line: 2085, column: 11)
!4005 = !DILocation(line: 2086, column: 33, scope: !4004)
!4006 = !DILocation(line: 2086, column: 13, scope: !4004)
!4007 = !DILocation(line: 2087, column: 33, scope: !4004)
!4008 = !DILocation(line: 2087, column: 49, scope: !4004)
!4009 = !DILocation(line: 2087, column: 53, scope: !4004)
!4010 = !DILocation(line: 2087, column: 58, scope: !4004)
!4011 = !DILocation(line: 2087, column: 20, scope: !4004)
!4012 = !DILocation(line: 2088, column: 38, scope: !4013)
!4013 = distinct !DILexicalBlock(scope: !4004, file: !1, line: 2088, column: 17)
!4014 = !DILocation(line: 2088, column: 17, scope: !4013)
!4015 = !DILocation(line: 2088, column: 45, scope: !4013)
!4016 = !DILocation(line: 2088, column: 17, scope: !4004)
!4017 = !DILocation(line: 2090, column: 40, scope: !4013)
!4018 = !DILocation(line: 2090, column: 56, scope: !4013)
!4019 = !DILocation(line: 2090, column: 60, scope: !4013)
!4020 = !DILocation(line: 2090, column: 17, scope: !4013)
!4021 = !DILocation(line: 2089, column: 15, scope: !4013)
!4022 = !DILocation(line: 2089, column: 31, scope: !4013)
!4023 = !DILocation(line: 2089, column: 35, scope: !4013)
!4024 = !DILocation(line: 2089, column: 39, scope: !4013)
!4025 = !DILocation(line: 2091, column: 13, scope: !4004)
!4026 = !DILocation(line: 2093, column: 41, scope: !4027)
!4027 = distinct !DILexicalBlock(scope: !3880, file: !1, line: 2093, column: 13)
!4028 = !DILocation(line: 2093, column: 13, scope: !4027)
!4029 = !DILocation(line: 2093, column: 50, scope: !4027)
!4030 = !DILocation(line: 2093, column: 13, scope: !3880)
!4031 = !DILocation(line: 2095, column: 28, scope: !4032)
!4032 = distinct !DILexicalBlock(scope: !4027, file: !1, line: 2094, column: 11)
!4033 = !DILocation(line: 2095, column: 33, scope: !4032)
!4034 = !DILocation(line: 2095, column: 13, scope: !4032)
!4035 = !DILocation(line: 2096, column: 33, scope: !4032)
!4036 = !DILocation(line: 2096, column: 49, scope: !4032)
!4037 = !DILocation(line: 2096, column: 53, scope: !4032)
!4038 = !DILocation(line: 2096, column: 60, scope: !4032)
!4039 = !DILocation(line: 2096, column: 20, scope: !4032)
!4040 = !DILocation(line: 2097, column: 13, scope: !4032)
!4041 = !DILocation(line: 2099, column: 39, scope: !4042)
!4042 = distinct !DILexicalBlock(scope: !3880, file: !1, line: 2099, column: 13)
!4043 = !DILocation(line: 2099, column: 13, scope: !4042)
!4044 = !DILocation(line: 2099, column: 48, scope: !4042)
!4045 = !DILocation(line: 2099, column: 13, scope: !3880)
!4046 = !DILocation(line: 2101, column: 28, scope: !4047)
!4047 = distinct !DILexicalBlock(scope: !4042, file: !1, line: 2100, column: 11)
!4048 = !DILocation(line: 2101, column: 33, scope: !4047)
!4049 = !DILocation(line: 2101, column: 13, scope: !4047)
!4050 = !DILocation(line: 2102, column: 58, scope: !4047)
!4051 = !DILocation(line: 2102, column: 43, scope: !4047)
!4052 = !DILocation(line: 2102, column: 13, scope: !4047)
!4053 = !DILocation(line: 2102, column: 29, scope: !4047)
!4054 = !DILocation(line: 2102, column: 33, scope: !4047)
!4055 = !DILocation(line: 2102, column: 42, scope: !4047)
!4056 = !DILocation(line: 2103, column: 13, scope: !4047)
!4057 = !DILocation(line: 2105, column: 42, scope: !4058)
!4058 = distinct !DILexicalBlock(scope: !3880, file: !1, line: 2105, column: 13)
!4059 = !DILocation(line: 2105, column: 13, scope: !4058)
!4060 = !DILocation(line: 2105, column: 51, scope: !4058)
!4061 = !DILocation(line: 2105, column: 13, scope: !3880)
!4062 = !DILocalVariable(name: "stretch", scope: !4063, file: !1, line: 2108, type: !717)
!4063 = distinct !DILexicalBlock(scope: !4058, file: !1, line: 2106, column: 11)
!4064 = !DILocation(line: 2108, column: 15, scope: !4063)
!4065 = !DILocation(line: 2110, column: 28, scope: !4063)
!4066 = !DILocation(line: 2110, column: 33, scope: !4063)
!4067 = !DILocation(line: 2110, column: 13, scope: !4063)
!4068 = !DILocation(line: 2111, column: 73, scope: !4063)
!4069 = !DILocation(line: 2111, column: 21, scope: !4063)
!4070 = !DILocation(line: 2111, column: 20, scope: !4063)
!4071 = !DILocation(line: 2112, column: 17, scope: !4072)
!4072 = distinct !DILexicalBlock(scope: !4063, file: !1, line: 2112, column: 17)
!4073 = !DILocation(line: 2112, column: 25, scope: !4072)
!4074 = !DILocation(line: 2112, column: 17, scope: !4063)
!4075 = !DILocation(line: 2114, column: 23, scope: !4076)
!4076 = distinct !DILexicalBlock(scope: !4072, file: !1, line: 2113, column: 15)
!4077 = !DILocation(line: 2115, column: 17, scope: !4076)
!4078 = !DILocation(line: 2117, column: 55, scope: !4063)
!4079 = !DILocation(line: 2117, column: 41, scope: !4063)
!4080 = !DILocation(line: 2117, column: 13, scope: !4063)
!4081 = !DILocation(line: 2117, column: 29, scope: !4063)
!4082 = !DILocation(line: 2117, column: 33, scope: !4063)
!4083 = !DILocation(line: 2117, column: 40, scope: !4063)
!4084 = !DILocation(line: 2118, column: 13, scope: !4063)
!4085 = !DILocation(line: 2120, column: 40, scope: !4086)
!4086 = distinct !DILexicalBlock(scope: !3880, file: !1, line: 2120, column: 13)
!4087 = !DILocation(line: 2120, column: 13, scope: !4086)
!4088 = !DILocation(line: 2120, column: 49, scope: !4086)
!4089 = !DILocation(line: 2120, column: 13, scope: !3880)
!4090 = !DILocalVariable(name: "style", scope: !4091, file: !1, line: 2123, type: !717)
!4091 = distinct !DILexicalBlock(scope: !4086, file: !1, line: 2121, column: 11)
!4092 = !DILocation(line: 2123, column: 15, scope: !4091)
!4093 = !DILocation(line: 2125, column: 28, scope: !4091)
!4094 = !DILocation(line: 2125, column: 33, scope: !4091)
!4095 = !DILocation(line: 2125, column: 13, scope: !4091)
!4096 = !DILocation(line: 2126, column: 69, scope: !4091)
!4097 = !DILocation(line: 2126, column: 19, scope: !4091)
!4098 = !DILocation(line: 2126, column: 18, scope: !4091)
!4099 = !DILocation(line: 2127, column: 17, scope: !4100)
!4100 = distinct !DILexicalBlock(scope: !4091, file: !1, line: 2127, column: 17)
!4101 = !DILocation(line: 2127, column: 23, scope: !4100)
!4102 = !DILocation(line: 2127, column: 17, scope: !4091)
!4103 = !DILocation(line: 2129, column: 23, scope: !4104)
!4104 = distinct !DILexicalBlock(scope: !4100, file: !1, line: 2128, column: 15)
!4105 = !DILocation(line: 2130, column: 17, scope: !4104)
!4106 = !DILocation(line: 2132, column: 51, scope: !4091)
!4107 = !DILocation(line: 2132, column: 39, scope: !4091)
!4108 = !DILocation(line: 2132, column: 13, scope: !4091)
!4109 = !DILocation(line: 2132, column: 29, scope: !4091)
!4110 = !DILocation(line: 2132, column: 33, scope: !4091)
!4111 = !DILocation(line: 2132, column: 38, scope: !4091)
!4112 = !DILocation(line: 2133, column: 13, scope: !4091)
!4113 = !DILocation(line: 2135, column: 41, scope: !4114)
!4114 = distinct !DILexicalBlock(scope: !3880, file: !1, line: 2135, column: 13)
!4115 = !DILocation(line: 2135, column: 13, scope: !4114)
!4116 = !DILocation(line: 2135, column: 50, scope: !4114)
!4117 = !DILocation(line: 2135, column: 13, scope: !3880)
!4118 = !DILocation(line: 2137, column: 28, scope: !4119)
!4119 = distinct !DILexicalBlock(scope: !4114, file: !1, line: 2136, column: 11)
!4120 = !DILocation(line: 2137, column: 33, scope: !4119)
!4121 = !DILocation(line: 2137, column: 13, scope: !4119)
!4122 = !DILocation(line: 2138, column: 61, scope: !4119)
!4123 = !DILocation(line: 2138, column: 40, scope: !4119)
!4124 = !DILocation(line: 2138, column: 13, scope: !4119)
!4125 = !DILocation(line: 2138, column: 29, scope: !4119)
!4126 = !DILocation(line: 2138, column: 33, scope: !4119)
!4127 = !DILocation(line: 2138, column: 39, scope: !4119)
!4128 = !DILocation(line: 2139, column: 31, scope: !4129)
!4129 = distinct !DILexicalBlock(scope: !4119, file: !1, line: 2139, column: 17)
!4130 = !DILocation(line: 2139, column: 17, scope: !4129)
!4131 = !DILocation(line: 2139, column: 44, scope: !4129)
!4132 = !DILocation(line: 2139, column: 17, scope: !4119)
!4133 = !DILocation(line: 2140, column: 15, scope: !4129)
!4134 = !DILocation(line: 2140, column: 31, scope: !4129)
!4135 = !DILocation(line: 2140, column: 35, scope: !4129)
!4136 = !DILocation(line: 2140, column: 41, scope: !4129)
!4137 = !DILocation(line: 2141, column: 31, scope: !4138)
!4138 = distinct !DILexicalBlock(scope: !4119, file: !1, line: 2141, column: 17)
!4139 = !DILocation(line: 2141, column: 17, scope: !4138)
!4140 = !DILocation(line: 2141, column: 45, scope: !4138)
!4141 = !DILocation(line: 2141, column: 17, scope: !4119)
!4142 = !DILocation(line: 2142, column: 15, scope: !4138)
!4143 = !DILocation(line: 2142, column: 31, scope: !4138)
!4144 = !DILocation(line: 2142, column: 35, scope: !4138)
!4145 = !DILocation(line: 2142, column: 41, scope: !4138)
!4146 = !DILocation(line: 2143, column: 31, scope: !4147)
!4147 = distinct !DILexicalBlock(scope: !4119, file: !1, line: 2143, column: 17)
!4148 = !DILocation(line: 2143, column: 17, scope: !4147)
!4149 = !DILocation(line: 2143, column: 47, scope: !4147)
!4150 = !DILocation(line: 2143, column: 17, scope: !4119)
!4151 = !DILocation(line: 2144, column: 19, scope: !4152)
!4152 = distinct !DILexicalBlock(scope: !4147, file: !1, line: 2144, column: 19)
!4153 = !DILocation(line: 2144, column: 35, scope: !4152)
!4154 = !DILocation(line: 2144, column: 39, scope: !4152)
!4155 = !DILocation(line: 2144, column: 46, scope: !4152)
!4156 = !DILocation(line: 2144, column: 19, scope: !4147)
!4157 = !DILocation(line: 2145, column: 17, scope: !4152)
!4158 = !DILocation(line: 2145, column: 33, scope: !4152)
!4159 = !DILocation(line: 2145, column: 37, scope: !4152)
!4160 = !DILocation(line: 2145, column: 43, scope: !4152)
!4161 = !DILocation(line: 2144, column: 49, scope: !4152)
!4162 = !DILocation(line: 2146, column: 31, scope: !4163)
!4163 = distinct !DILexicalBlock(scope: !4119, file: !1, line: 2146, column: 17)
!4164 = !DILocation(line: 2146, column: 17, scope: !4163)
!4165 = !DILocation(line: 2146, column: 48, scope: !4163)
!4166 = !DILocation(line: 2146, column: 17, scope: !4119)
!4167 = !DILocation(line: 2147, column: 19, scope: !4168)
!4168 = distinct !DILexicalBlock(scope: !4163, file: !1, line: 2147, column: 19)
!4169 = !DILocation(line: 2147, column: 35, scope: !4168)
!4170 = !DILocation(line: 2147, column: 39, scope: !4168)
!4171 = !DILocation(line: 2147, column: 46, scope: !4168)
!4172 = !DILocation(line: 2147, column: 19, scope: !4163)
!4173 = !DILocation(line: 2148, column: 17, scope: !4168)
!4174 = !DILocation(line: 2148, column: 33, scope: !4168)
!4175 = !DILocation(line: 2148, column: 37, scope: !4168)
!4176 = !DILocation(line: 2148, column: 43, scope: !4168)
!4177 = !DILocation(line: 2147, column: 49, scope: !4168)
!4178 = !DILocation(line: 2149, column: 31, scope: !4179)
!4179 = distinct !DILexicalBlock(scope: !4119, file: !1, line: 2149, column: 17)
!4180 = !DILocation(line: 2149, column: 17, scope: !4179)
!4181 = !DILocation(line: 2149, column: 47, scope: !4179)
!4182 = !DILocation(line: 2149, column: 17, scope: !4119)
!4183 = !DILocation(line: 2150, column: 15, scope: !4179)
!4184 = !DILocation(line: 2150, column: 31, scope: !4179)
!4185 = !DILocation(line: 2150, column: 35, scope: !4179)
!4186 = !DILocation(line: 2150, column: 41, scope: !4179)
!4187 = !DILocation(line: 2151, column: 13, scope: !4119)
!4188 = !DILocation(line: 2153, column: 15, scope: !3880)
!4189 = !DILocation(line: 2154, column: 9, scope: !3880)
!4190 = !DILocation(line: 2159, column: 44, scope: !4191)
!4191 = distinct !DILexicalBlock(scope: !4192, file: !1, line: 2159, column: 13)
!4192 = distinct !DILexicalBlock(scope: !3541, file: !1, line: 2158, column: 7)
!4193 = !DILocation(line: 2159, column: 13, scope: !4191)
!4194 = !DILocation(line: 2159, column: 53, scope: !4191)
!4195 = !DILocation(line: 2159, column: 13, scope: !4192)
!4196 = !DILocation(line: 2161, column: 28, scope: !4197)
!4197 = distinct !DILexicalBlock(scope: !4191, file: !1, line: 2160, column: 11)
!4198 = !DILocation(line: 2161, column: 33, scope: !4197)
!4199 = !DILocation(line: 2161, column: 13, scope: !4197)
!4200 = !DILocation(line: 2162, column: 13, scope: !4197)
!4201 = !DILocation(line: 2164, column: 37, scope: !4202)
!4202 = distinct !DILexicalBlock(scope: !4192, file: !1, line: 2164, column: 13)
!4203 = !DILocation(line: 2164, column: 13, scope: !4202)
!4204 = !DILocation(line: 2164, column: 46, scope: !4202)
!4205 = !DILocation(line: 2164, column: 13, scope: !4192)
!4206 = !DILocalVariable(name: "gravity", scope: !4207, file: !1, line: 2167, type: !717)
!4207 = distinct !DILexicalBlock(scope: !4202, file: !1, line: 2165, column: 11)
!4208 = !DILocation(line: 2167, column: 15, scope: !4207)
!4209 = !DILocation(line: 2169, column: 28, scope: !4207)
!4210 = !DILocation(line: 2169, column: 33, scope: !4207)
!4211 = !DILocation(line: 2169, column: 13, scope: !4207)
!4212 = !DILocation(line: 2170, column: 73, scope: !4207)
!4213 = !DILocation(line: 2170, column: 21, scope: !4207)
!4214 = !DILocation(line: 2170, column: 20, scope: !4207)
!4215 = !DILocation(line: 2171, column: 17, scope: !4216)
!4216 = distinct !DILexicalBlock(scope: !4207, file: !1, line: 2171, column: 17)
!4217 = !DILocation(line: 2171, column: 25, scope: !4216)
!4218 = !DILocation(line: 2171, column: 17, scope: !4207)
!4219 = !DILocation(line: 2173, column: 23, scope: !4220)
!4220 = distinct !DILexicalBlock(scope: !4216, file: !1, line: 2172, column: 15)
!4221 = !DILocation(line: 2174, column: 17, scope: !4220)
!4222 = !DILocation(line: 2176, column: 55, scope: !4207)
!4223 = !DILocation(line: 2176, column: 41, scope: !4207)
!4224 = !DILocation(line: 2176, column: 13, scope: !4207)
!4225 = !DILocation(line: 2176, column: 29, scope: !4207)
!4226 = !DILocation(line: 2176, column: 33, scope: !4207)
!4227 = !DILocation(line: 2176, column: 40, scope: !4207)
!4228 = !DILocation(line: 2177, column: 13, scope: !4207)
!4229 = !DILocation(line: 2179, column: 15, scope: !4192)
!4230 = !DILocation(line: 2180, column: 9, scope: !4192)
!4231 = !DILocation(line: 2185, column: 35, scope: !4232)
!4232 = distinct !DILexicalBlock(scope: !4233, file: !1, line: 2185, column: 13)
!4233 = distinct !DILexicalBlock(scope: !3541, file: !1, line: 2184, column: 7)
!4234 = !DILocation(line: 2185, column: 13, scope: !4232)
!4235 = !DILocation(line: 2185, column: 44, scope: !4232)
!4236 = !DILocation(line: 2185, column: 13, scope: !4233)
!4237 = !DILocalVariable(name: "compose", scope: !4238, file: !1, line: 2188, type: !717)
!4238 = distinct !DILexicalBlock(scope: !4232, file: !1, line: 2186, column: 11)
!4239 = !DILocation(line: 2188, column: 15, scope: !4238)
!4240 = !DILocation(line: 2190, column: 27, scope: !4238)
!4241 = !DILocation(line: 2191, column: 28, scope: !4238)
!4242 = !DILocation(line: 2191, column: 33, scope: !4238)
!4243 = !DILocation(line: 2191, column: 13, scope: !4238)
!4244 = !DILocation(line: 2192, column: 73, scope: !4238)
!4245 = !DILocation(line: 2192, column: 21, scope: !4238)
!4246 = !DILocation(line: 2192, column: 20, scope: !4238)
!4247 = !DILocation(line: 2193, column: 17, scope: !4248)
!4248 = distinct !DILexicalBlock(scope: !4238, file: !1, line: 2193, column: 17)
!4249 = !DILocation(line: 2193, column: 25, scope: !4248)
!4250 = !DILocation(line: 2193, column: 17, scope: !4238)
!4251 = !DILocation(line: 2195, column: 23, scope: !4252)
!4252 = distinct !DILexicalBlock(scope: !4248, file: !1, line: 2194, column: 15)
!4253 = !DILocation(line: 2196, column: 17, scope: !4252)
!4254 = !DILocation(line: 2198, column: 61, scope: !4238)
!4255 = !DILocation(line: 2198, column: 41, scope: !4238)
!4256 = !DILocation(line: 2198, column: 13, scope: !4238)
!4257 = !DILocation(line: 2198, column: 29, scope: !4238)
!4258 = !DILocation(line: 2198, column: 33, scope: !4238)
!4259 = !DILocation(line: 2198, column: 40, scope: !4238)
!4260 = !DILocation(line: 2199, column: 13, scope: !4238)
!4261 = !DILocation(line: 2201, column: 47, scope: !4262)
!4262 = distinct !DILexicalBlock(scope: !4233, file: !1, line: 2201, column: 13)
!4263 = !DILocation(line: 2201, column: 13, scope: !4262)
!4264 = !DILocation(line: 2201, column: 56, scope: !4262)
!4265 = !DILocation(line: 2201, column: 13, scope: !4233)
!4266 = !DILocation(line: 2203, column: 28, scope: !4267)
!4267 = distinct !DILexicalBlock(scope: !4262, file: !1, line: 2202, column: 11)
!4268 = !DILocation(line: 2203, column: 33, scope: !4267)
!4269 = !DILocation(line: 2203, column: 13, scope: !4267)
!4270 = !DILocation(line: 2204, column: 66, scope: !4267)
!4271 = !DILocation(line: 2204, column: 51, scope: !4267)
!4272 = !DILocation(line: 2204, column: 13, scope: !4267)
!4273 = !DILocation(line: 2204, column: 29, scope: !4267)
!4274 = !DILocation(line: 2204, column: 33, scope: !4267)
!4275 = !DILocation(line: 2204, column: 50, scope: !4267)
!4276 = !DILocation(line: 2206, column: 13, scope: !4267)
!4277 = !DILocation(line: 2208, column: 47, scope: !4278)
!4278 = distinct !DILexicalBlock(scope: !4233, file: !1, line: 2208, column: 13)
!4279 = !DILocation(line: 2208, column: 13, scope: !4278)
!4280 = !DILocation(line: 2208, column: 56, scope: !4278)
!4281 = !DILocation(line: 2208, column: 13, scope: !4233)
!4282 = !DILocation(line: 2210, column: 28, scope: !4283)
!4283 = distinct !DILexicalBlock(scope: !4278, file: !1, line: 2209, column: 11)
!4284 = !DILocation(line: 2210, column: 33, scope: !4283)
!4285 = !DILocation(line: 2210, column: 13, scope: !4283)
!4286 = !DILocation(line: 2211, column: 66, scope: !4283)
!4287 = !DILocation(line: 2211, column: 51, scope: !4283)
!4288 = !DILocation(line: 2211, column: 13, scope: !4283)
!4289 = !DILocation(line: 2211, column: 29, scope: !4283)
!4290 = !DILocation(line: 2211, column: 33, scope: !4283)
!4291 = !DILocation(line: 2211, column: 50, scope: !4283)
!4292 = !DILocation(line: 2213, column: 13, scope: !4283)
!4293 = !DILocation(line: 2215, column: 15, scope: !4233)
!4294 = !DILocation(line: 2216, column: 9, scope: !4233)
!4295 = !DILocation(line: 2221, column: 37, scope: !4296)
!4296 = distinct !DILexicalBlock(scope: !4297, file: !1, line: 2221, column: 13)
!4297 = distinct !DILexicalBlock(scope: !3541, file: !1, line: 2220, column: 7)
!4298 = !DILocation(line: 2221, column: 13, scope: !4296)
!4299 = !DILocation(line: 2221, column: 46, scope: !4296)
!4300 = !DILocation(line: 2221, column: 13, scope: !4297)
!4301 = !DILocation(line: 2223, column: 28, scope: !4302)
!4302 = distinct !DILexicalBlock(scope: !4296, file: !1, line: 2222, column: 11)
!4303 = !DILocation(line: 2223, column: 33, scope: !4302)
!4304 = !DILocation(line: 2223, column: 13, scope: !4302)
!4305 = !DILocation(line: 2224, column: 56, scope: !4302)
!4306 = !DILocation(line: 2224, column: 41, scope: !4302)
!4307 = !DILocation(line: 2224, column: 13, scope: !4302)
!4308 = !DILocation(line: 2224, column: 29, scope: !4302)
!4309 = !DILocation(line: 2224, column: 33, scope: !4302)
!4310 = !DILocation(line: 2224, column: 40, scope: !4302)
!4311 = !DILocation(line: 2225, column: 13, scope: !4302)
!4312 = !DILocation(line: 2227, column: 15, scope: !4297)
!4313 = !DILocation(line: 2228, column: 9, scope: !4297)
!4314 = !DILocation(line: 2233, column: 34, scope: !4315)
!4315 = distinct !DILexicalBlock(scope: !4316, file: !1, line: 2233, column: 13)
!4316 = distinct !DILexicalBlock(scope: !3541, file: !1, line: 2232, column: 7)
!4317 = !DILocation(line: 2233, column: 13, scope: !4315)
!4318 = !DILocation(line: 2233, column: 43, scope: !4315)
!4319 = !DILocation(line: 2233, column: 13, scope: !4316)
!4320 = !DILocation(line: 2235, column: 27, scope: !4321)
!4321 = distinct !DILexicalBlock(scope: !4315, file: !1, line: 2234, column: 11)
!4322 = !DILocation(line: 2236, column: 13, scope: !4321)
!4323 = !DILocation(line: 2238, column: 15, scope: !4316)
!4324 = !DILocation(line: 2239, column: 9, scope: !4316)
!4325 = !DILocation(line: 2244, column: 35, scope: !4326)
!4326 = distinct !DILexicalBlock(scope: !4327, file: !1, line: 2244, column: 13)
!4327 = distinct !DILexicalBlock(scope: !3541, file: !1, line: 2243, column: 7)
!4328 = !DILocation(line: 2244, column: 13, scope: !4326)
!4329 = !DILocation(line: 2244, column: 44, scope: !4326)
!4330 = !DILocation(line: 2244, column: 13, scope: !4327)
!4331 = !DILocation(line: 2246, column: 27, scope: !4332)
!4332 = distinct !DILexicalBlock(scope: !4326, file: !1, line: 2245, column: 11)
!4333 = !DILocation(line: 2247, column: 13, scope: !4332)
!4334 = !DILocation(line: 2249, column: 15, scope: !4327)
!4335 = !DILocation(line: 2250, column: 9, scope: !4327)
!4336 = !DILocation(line: 2255, column: 36, scope: !4337)
!4337 = distinct !DILexicalBlock(scope: !4338, file: !1, line: 2255, column: 13)
!4338 = distinct !DILexicalBlock(scope: !3541, file: !1, line: 2254, column: 7)
!4339 = !DILocation(line: 2255, column: 13, scope: !4337)
!4340 = !DILocation(line: 2255, column: 45, scope: !4337)
!4341 = !DILocation(line: 2255, column: 13, scope: !4338)
!4342 = !DILocation(line: 2257, column: 28, scope: !4343)
!4343 = distinct !DILexicalBlock(scope: !4337, file: !1, line: 2256, column: 11)
!4344 = !DILocation(line: 2257, column: 33, scope: !4343)
!4345 = !DILocation(line: 2257, column: 13, scope: !4343)
!4346 = !DILocation(line: 2258, column: 13, scope: !4343)
!4347 = !DILocation(line: 2260, column: 37, scope: !4348)
!4348 = distinct !DILexicalBlock(scope: !4338, file: !1, line: 2260, column: 13)
!4349 = !DILocation(line: 2260, column: 13, scope: !4348)
!4350 = !DILocation(line: 2260, column: 46, scope: !4348)
!4351 = !DILocation(line: 2260, column: 13, scope: !4338)
!4352 = !DILocation(line: 2262, column: 28, scope: !4353)
!4353 = distinct !DILexicalBlock(scope: !4348, file: !1, line: 2261, column: 11)
!4354 = !DILocation(line: 2262, column: 33, scope: !4353)
!4355 = !DILocation(line: 2262, column: 13, scope: !4353)
!4356 = !DILocation(line: 2263, column: 27, scope: !4353)
!4357 = !DILocation(line: 2263, column: 20, scope: !4353)
!4358 = !DILocation(line: 2263, column: 38, scope: !4353)
!4359 = !DILocation(line: 2263, column: 19, scope: !4353)
!4360 = !DILocation(line: 2265, column: 52, scope: !4353)
!4361 = !DILocation(line: 2265, column: 68, scope: !4353)
!4362 = !DILocation(line: 2265, column: 72, scope: !4353)
!4363 = !DILocation(line: 2265, column: 51, scope: !4353)
!4364 = !DILocation(line: 2265, column: 38, scope: !4353)
!4365 = !DILocation(line: 2266, column: 15, scope: !4353)
!4366 = !DILocation(line: 2265, column: 80, scope: !4353)
!4367 = !DILocation(line: 2266, column: 37, scope: !4353)
!4368 = !DILocation(line: 2266, column: 22, scope: !4353)
!4369 = !DILocation(line: 2266, column: 21, scope: !4353)
!4370 = !DILocation(line: 2265, column: 32, scope: !4353)
!4371 = !DILocation(line: 2265, column: 27, scope: !4353)
!4372 = !DILocation(line: 2264, column: 56, scope: !4353)
!4373 = !DILocation(line: 2264, column: 41, scope: !4353)
!4374 = !DILocation(line: 2264, column: 13, scope: !4353)
!4375 = !DILocation(line: 2264, column: 29, scope: !4353)
!4376 = !DILocation(line: 2264, column: 33, scope: !4353)
!4377 = !DILocation(line: 2264, column: 40, scope: !4353)
!4378 = !DILocation(line: 2267, column: 46, scope: !4353)
!4379 = !DILocation(line: 2267, column: 62, scope: !4353)
!4380 = !DILocation(line: 2267, column: 66, scope: !4353)
!4381 = !DILocation(line: 2267, column: 13, scope: !4353)
!4382 = !DILocation(line: 2267, column: 29, scope: !4353)
!4383 = !DILocation(line: 2267, column: 33, scope: !4353)
!4384 = !DILocation(line: 2267, column: 38, scope: !4353)
!4385 = !DILocation(line: 2267, column: 45, scope: !4353)
!4386 = !DILocation(line: 2268, column: 48, scope: !4353)
!4387 = !DILocation(line: 2268, column: 64, scope: !4353)
!4388 = !DILocation(line: 2268, column: 68, scope: !4353)
!4389 = !DILocation(line: 2268, column: 13, scope: !4353)
!4390 = !DILocation(line: 2268, column: 29, scope: !4353)
!4391 = !DILocation(line: 2268, column: 33, scope: !4353)
!4392 = !DILocation(line: 2268, column: 40, scope: !4353)
!4393 = !DILocation(line: 2268, column: 47, scope: !4353)
!4394 = !DILocation(line: 2269, column: 13, scope: !4353)
!4395 = !DILocation(line: 2271, column: 15, scope: !4338)
!4396 = !DILocation(line: 2272, column: 9, scope: !4338)
!4397 = !DILocation(line: 2277, column: 34, scope: !4398)
!4398 = distinct !DILexicalBlock(scope: !4399, file: !1, line: 2277, column: 13)
!4399 = distinct !DILexicalBlock(scope: !3541, file: !1, line: 2276, column: 7)
!4400 = !DILocation(line: 2277, column: 13, scope: !4398)
!4401 = !DILocation(line: 2277, column: 43, scope: !4398)
!4402 = !DILocation(line: 2277, column: 13, scope: !4399)
!4403 = !DILocation(line: 2279, column: 27, scope: !4404)
!4404 = distinct !DILexicalBlock(scope: !4398, file: !1, line: 2278, column: 11)
!4405 = !DILocation(line: 2280, column: 13, scope: !4404)
!4406 = !DILocation(line: 2282, column: 35, scope: !4407)
!4407 = distinct !DILexicalBlock(scope: !4399, file: !1, line: 2282, column: 13)
!4408 = !DILocation(line: 2282, column: 13, scope: !4407)
!4409 = !DILocation(line: 2282, column: 44, scope: !4407)
!4410 = !DILocation(line: 2282, column: 13, scope: !4399)
!4411 = !DILocation(line: 2284, column: 27, scope: !4412)
!4412 = distinct !DILexicalBlock(scope: !4407, file: !1, line: 2283, column: 11)
!4413 = !DILocation(line: 2285, column: 13, scope: !4412)
!4414 = !DILocation(line: 2287, column: 38, scope: !4415)
!4415 = distinct !DILexicalBlock(scope: !4399, file: !1, line: 2287, column: 13)
!4416 = !DILocation(line: 2287, column: 13, scope: !4415)
!4417 = !DILocation(line: 2287, column: 47, scope: !4415)
!4418 = !DILocation(line: 2287, column: 13, scope: !4399)
!4419 = !DILocation(line: 2289, column: 27, scope: !4420)
!4420 = distinct !DILexicalBlock(scope: !4415, file: !1, line: 2288, column: 11)
!4421 = !DILocation(line: 2290, column: 13, scope: !4420)
!4422 = !DILocation(line: 2292, column: 37, scope: !4423)
!4423 = distinct !DILexicalBlock(scope: !4399, file: !1, line: 2292, column: 13)
!4424 = !DILocation(line: 2292, column: 13, scope: !4423)
!4425 = !DILocation(line: 2292, column: 46, scope: !4423)
!4426 = !DILocation(line: 2292, column: 13, scope: !4399)
!4427 = !DILocation(line: 2294, column: 27, scope: !4428)
!4428 = distinct !DILexicalBlock(scope: !4423, file: !1, line: 2293, column: 11)
!4429 = !DILocation(line: 2295, column: 13, scope: !4428)
!4430 = !DILocation(line: 2297, column: 33, scope: !4431)
!4431 = distinct !DILexicalBlock(scope: !4399, file: !1, line: 2297, column: 13)
!4432 = !DILocation(line: 2297, column: 13, scope: !4431)
!4433 = !DILocation(line: 2297, column: 42, scope: !4431)
!4434 = !DILocation(line: 2297, column: 13, scope: !4399)
!4435 = !DILocation(line: 2299, column: 28, scope: !4436)
!4436 = distinct !DILexicalBlock(scope: !4431, file: !1, line: 2298, column: 11)
!4437 = !DILocation(line: 2299, column: 33, scope: !4436)
!4438 = !DILocation(line: 2299, column: 13, scope: !4436)
!4439 = !DILocation(line: 2300, column: 43, scope: !4440)
!4440 = distinct !DILexicalBlock(scope: !4436, file: !1, line: 2300, column: 17)
!4441 = !DILocation(line: 2300, column: 17, scope: !4440)
!4442 = !DILocation(line: 2300, column: 50, scope: !4440)
!4443 = !DILocation(line: 2300, column: 17, scope: !4436)
!4444 = !DILocation(line: 2301, column: 15, scope: !4440)
!4445 = !DILocation(line: 2302, column: 38, scope: !4446)
!4446 = distinct !DILexicalBlock(scope: !4436, file: !1, line: 2302, column: 17)
!4447 = !DILocation(line: 2302, column: 17, scope: !4446)
!4448 = !DILocation(line: 2302, column: 45, scope: !4446)
!4449 = !DILocation(line: 2302, column: 17, scope: !4436)
!4450 = !DILocation(line: 2303, column: 15, scope: !4446)
!4451 = !DILocation(line: 2304, column: 42, scope: !4452)
!4452 = distinct !DILexicalBlock(scope: !4436, file: !1, line: 2304, column: 17)
!4453 = !DILocation(line: 2304, column: 17, scope: !4452)
!4454 = !DILocation(line: 2304, column: 49, scope: !4452)
!4455 = !DILocation(line: 2304, column: 17, scope: !4436)
!4456 = !DILocation(line: 2305, column: 15, scope: !4452)
!4457 = !DILocation(line: 2306, column: 49, scope: !4458)
!4458 = distinct !DILexicalBlock(scope: !4436, file: !1, line: 2306, column: 17)
!4459 = !DILocation(line: 2306, column: 17, scope: !4458)
!4460 = !DILocation(line: 2306, column: 56, scope: !4458)
!4461 = !DILocation(line: 2306, column: 17, scope: !4436)
!4462 = !DILocation(line: 2308, column: 21, scope: !4463)
!4463 = distinct !DILexicalBlock(scope: !4464, file: !1, line: 2308, column: 21)
!4464 = distinct !DILexicalBlock(scope: !4458, file: !1, line: 2307, column: 15)
!4465 = !DILocation(line: 2308, column: 23, scope: !4463)
!4466 = !DILocation(line: 2308, column: 21, scope: !4464)
!4467 = !DILocation(line: 2310, column: 50, scope: !4468)
!4468 = distinct !DILexicalBlock(scope: !4463, file: !1, line: 2309, column: 19)
!4469 = !DILocation(line: 2310, column: 57, scope: !4468)
!4470 = !DILocation(line: 2312, column: 64, scope: !4468)
!4471 = !DILocation(line: 2310, column: 28, scope: !4468)
!4472 = !DILocation(line: 2313, column: 22, scope: !4468)
!4473 = !DILocation(line: 2314, column: 21, scope: !4468)
!4474 = !DILocation(line: 2316, column: 21, scope: !4475)
!4475 = distinct !DILexicalBlock(scope: !4464, file: !1, line: 2316, column: 21)
!4476 = !DILocation(line: 2316, column: 37, scope: !4475)
!4477 = !DILocation(line: 2316, column: 41, scope: !4475)
!4478 = !DILocation(line: 2316, column: 51, scope: !4475)
!4479 = !DILocation(line: 2316, column: 21, scope: !4464)
!4480 = !DILocation(line: 2317, column: 37, scope: !4481)
!4481 = distinct !DILexicalBlock(scope: !4475, file: !1, line: 2317, column: 23)
!4482 = !DILocation(line: 2317, column: 53, scope: !4481)
!4483 = !DILocation(line: 2317, column: 57, scope: !4481)
!4484 = !DILocation(line: 2318, column: 23, scope: !4481)
!4485 = !DILocation(line: 2318, column: 39, scope: !4481)
!4486 = !DILocation(line: 2318, column: 40, scope: !4481)
!4487 = !DILocation(line: 2318, column: 45, scope: !4481)
!4488 = !DILocation(line: 2317, column: 23, scope: !4481)
!4489 = !DILocation(line: 2318, column: 56, scope: !4481)
!4490 = !DILocation(line: 2317, column: 23, scope: !4475)
!4491 = !DILocation(line: 2319, column: 45, scope: !4481)
!4492 = !DILocation(line: 2319, column: 28, scope: !4481)
!4493 = !DILocation(line: 2319, column: 21, scope: !4481)
!4494 = !DILocation(line: 2318, column: 59, scope: !4481)
!4495 = !DILocation(line: 2320, column: 52, scope: !4464)
!4496 = !DILocation(line: 2320, column: 68, scope: !4464)
!4497 = !DILocation(line: 2320, column: 36, scope: !4464)
!4498 = !DILocation(line: 2320, column: 17, scope: !4464)
!4499 = !DILocation(line: 2320, column: 33, scope: !4464)
!4500 = !DILocation(line: 2320, column: 35, scope: !4464)
!4501 = !DILocation(line: 2321, column: 18, scope: !4464)
!4502 = !DILocation(line: 2322, column: 17, scope: !4464)
!4503 = !DILocation(line: 2324, column: 41, scope: !4504)
!4504 = distinct !DILexicalBlock(scope: !4436, file: !1, line: 2324, column: 17)
!4505 = !DILocation(line: 2324, column: 17, scope: !4504)
!4506 = !DILocation(line: 2324, column: 48, scope: !4504)
!4507 = !DILocation(line: 2324, column: 17, scope: !4436)
!4508 = !DILocation(line: 2325, column: 15, scope: !4504)
!4509 = !DILocation(line: 2326, column: 19, scope: !4436)
!4510 = !DILocation(line: 2327, column: 13, scope: !4436)
!4511 = !DILocation(line: 2329, column: 34, scope: !4512)
!4512 = distinct !DILexicalBlock(scope: !4399, file: !1, line: 2329, column: 13)
!4513 = !DILocation(line: 2329, column: 13, scope: !4512)
!4514 = !DILocation(line: 2329, column: 43, scope: !4512)
!4515 = !DILocation(line: 2329, column: 13, scope: !4399)
!4516 = !DILocation(line: 2331, column: 28, scope: !4517)
!4517 = distinct !DILexicalBlock(scope: !4512, file: !1, line: 2330, column: 11)
!4518 = !DILocation(line: 2331, column: 33, scope: !4517)
!4519 = !DILocation(line: 2331, column: 13, scope: !4517)
!4520 = !DILocation(line: 2332, column: 43, scope: !4521)
!4521 = distinct !DILexicalBlock(scope: !4517, file: !1, line: 2332, column: 17)
!4522 = !DILocation(line: 2332, column: 17, scope: !4521)
!4523 = !DILocation(line: 2332, column: 50, scope: !4521)
!4524 = !DILocation(line: 2332, column: 17, scope: !4517)
!4525 = !DILocalVariable(name: "name", scope: !4526, file: !1, line: 2335, type: !924)
!4526 = distinct !DILexicalBlock(scope: !4521, file: !1, line: 2333, column: 15)
!4527 = !DILocation(line: 2335, column: 19, scope: !4526)
!4528 = !DILocation(line: 2337, column: 32, scope: !4526)
!4529 = !DILocation(line: 2337, column: 37, scope: !4526)
!4530 = !DILocation(line: 2337, column: 17, scope: !4526)
!4531 = !DILocation(line: 2338, column: 43, scope: !4526)
!4532 = !DILocation(line: 2338, column: 67, scope: !4526)
!4533 = !DILocation(line: 2338, column: 24, scope: !4526)
!4534 = !DILocation(line: 2339, column: 24, scope: !4535)
!4535 = distinct !DILexicalBlock(scope: !4526, file: !1, line: 2339, column: 17)
!4536 = !DILocation(line: 2339, column: 23, scope: !4535)
!4537 = !DILocation(line: 2339, column: 22, scope: !4535)
!4538 = !DILocation(line: 2339, column: 28, scope: !4539)
!4539 = distinct !DILexicalBlock(scope: !4535, file: !1, line: 2339, column: 17)
!4540 = !DILocation(line: 2339, column: 27, scope: !4539)
!4541 = !DILocation(line: 2339, column: 30, scope: !4539)
!4542 = !DILocation(line: 2339, column: 17, scope: !4535)
!4543 = !DILocation(line: 2341, column: 34, scope: !4544)
!4544 = distinct !DILexicalBlock(scope: !4539, file: !1, line: 2340, column: 17)
!4545 = !DILocation(line: 2341, column: 39, scope: !4544)
!4546 = !DILocation(line: 2341, column: 19, scope: !4544)
!4547 = !DILocation(line: 2342, column: 37, scope: !4548)
!4548 = distinct !DILexicalBlock(scope: !4544, file: !1, line: 2342, column: 23)
!4549 = !DILocation(line: 2342, column: 23, scope: !4548)
!4550 = !DILocation(line: 2342, column: 50, scope: !4548)
!4551 = !DILocation(line: 2342, column: 23, scope: !4544)
!4552 = !DILocation(line: 2343, column: 21, scope: !4548)
!4553 = distinct !{!4553, !4542, !4554}
!4554 = !DILocation(line: 2348, column: 17, scope: !4535)
!4555 = !DILocation(line: 2344, column: 34, scope: !4544)
!4556 = !DILocation(line: 2344, column: 57, scope: !4544)
!4557 = !DILocation(line: 2344, column: 19, scope: !4544)
!4558 = !DILocation(line: 2345, column: 37, scope: !4559)
!4559 = distinct !DILexicalBlock(scope: !4544, file: !1, line: 2345, column: 23)
!4560 = !DILocation(line: 2345, column: 23, scope: !4559)
!4561 = !DILocation(line: 2345, column: 56, scope: !4559)
!4562 = !DILocation(line: 2345, column: 23, scope: !4544)
!4563 = !DILocation(line: 2346, column: 21, scope: !4559)
!4564 = !DILocation(line: 2347, column: 19, scope: !4544)
!4565 = !DILocation(line: 2349, column: 41, scope: !4526)
!4566 = !DILocation(line: 2349, column: 47, scope: !4526)
!4567 = !DILocation(line: 2349, column: 59, scope: !4526)
!4568 = !DILocation(line: 2349, column: 61, scope: !4526)
!4569 = !DILocation(line: 2349, column: 60, scope: !4526)
!4570 = !DILocation(line: 2349, column: 62, scope: !4526)
!4571 = !DILocation(line: 2349, column: 64, scope: !4526)
!4572 = !DILocation(line: 2349, column: 24, scope: !4526)
!4573 = !DILocation(line: 2350, column: 41, scope: !4526)
!4574 = !DILocation(line: 2350, column: 47, scope: !4526)
!4575 = !DILocation(line: 2350, column: 52, scope: !4526)
!4576 = !DILocation(line: 2350, column: 24, scope: !4526)
!4577 = !DILocation(line: 2351, column: 32, scope: !4526)
!4578 = !DILocation(line: 2351, column: 37, scope: !4526)
!4579 = !DILocation(line: 2351, column: 17, scope: !4526)
!4580 = !DILocation(line: 2352, column: 17, scope: !4526)
!4581 = !DILocation(line: 2354, column: 42, scope: !4582)
!4582 = distinct !DILexicalBlock(scope: !4517, file: !1, line: 2354, column: 17)
!4583 = !DILocation(line: 2354, column: 17, scope: !4582)
!4584 = !DILocation(line: 2354, column: 49, scope: !4582)
!4585 = !DILocation(line: 2354, column: 17, scope: !4517)
!4586 = !DILocalVariable(name: "key", scope: !4587, file: !1, line: 2357, type: !3267)
!4587 = distinct !DILexicalBlock(scope: !4582, file: !1, line: 2355, column: 15)
!4588 = !DILocation(line: 2357, column: 19, scope: !4587)
!4589 = !DILocalVariable(name: "name", scope: !4587, file: !1, line: 2358, type: !924)
!4590 = !DILocation(line: 2358, column: 19, scope: !4587)
!4591 = !DILocalVariable(name: "type", scope: !4587, file: !1, line: 2359, type: !924)
!4592 = !DILocation(line: 2359, column: 19, scope: !4587)
!4593 = !DILocalVariable(name: "segment", scope: !4587, file: !1, line: 2362, type: !756)
!4594 = !DILocation(line: 2362, column: 19, scope: !4587)
!4595 = !DILocation(line: 2364, column: 32, scope: !4587)
!4596 = !DILocation(line: 2364, column: 37, scope: !4587)
!4597 = !DILocation(line: 2364, column: 17, scope: !4587)
!4598 = !DILocation(line: 2365, column: 41, scope: !4587)
!4599 = !DILocation(line: 2365, column: 46, scope: !4587)
!4600 = !DILocation(line: 2365, column: 24, scope: !4587)
!4601 = !DILocation(line: 2366, column: 32, scope: !4587)
!4602 = !DILocation(line: 2366, column: 37, scope: !4587)
!4603 = !DILocation(line: 2366, column: 17, scope: !4587)
!4604 = !DILocation(line: 2367, column: 41, scope: !4587)
!4605 = !DILocation(line: 2367, column: 46, scope: !4587)
!4606 = !DILocation(line: 2367, column: 24, scope: !4587)
!4607 = !DILocation(line: 2368, column: 32, scope: !4587)
!4608 = !DILocation(line: 2368, column: 37, scope: !4587)
!4609 = !DILocation(line: 2368, column: 17, scope: !4587)
!4610 = !DILocation(line: 2369, column: 43, scope: !4587)
!4611 = !DILocation(line: 2369, column: 28, scope: !4587)
!4612 = !DILocation(line: 2369, column: 25, scope: !4587)
!4613 = !DILocation(line: 2369, column: 27, scope: !4587)
!4614 = !DILocation(line: 2370, column: 32, scope: !4587)
!4615 = !DILocation(line: 2370, column: 37, scope: !4587)
!4616 = !DILocation(line: 2370, column: 17, scope: !4587)
!4617 = !DILocation(line: 2371, column: 22, scope: !4618)
!4618 = distinct !DILexicalBlock(scope: !4587, file: !1, line: 2371, column: 21)
!4619 = !DILocation(line: 2371, column: 21, scope: !4618)
!4620 = !DILocation(line: 2371, column: 28, scope: !4618)
!4621 = !DILocation(line: 2371, column: 21, scope: !4587)
!4622 = !DILocation(line: 2372, column: 34, scope: !4618)
!4623 = !DILocation(line: 2372, column: 39, scope: !4618)
!4624 = !DILocation(line: 2372, column: 19, scope: !4618)
!4625 = !DILocation(line: 2373, column: 43, scope: !4587)
!4626 = !DILocation(line: 2373, column: 28, scope: !4587)
!4627 = !DILocation(line: 2373, column: 25, scope: !4587)
!4628 = !DILocation(line: 2373, column: 27, scope: !4587)
!4629 = !DILocation(line: 2374, column: 32, scope: !4587)
!4630 = !DILocation(line: 2374, column: 37, scope: !4587)
!4631 = !DILocation(line: 2374, column: 17, scope: !4587)
!4632 = !DILocation(line: 2375, column: 22, scope: !4633)
!4633 = distinct !DILexicalBlock(scope: !4587, file: !1, line: 2375, column: 21)
!4634 = !DILocation(line: 2375, column: 21, scope: !4633)
!4635 = !DILocation(line: 2375, column: 28, scope: !4633)
!4636 = !DILocation(line: 2375, column: 21, scope: !4587)
!4637 = !DILocation(line: 2376, column: 34, scope: !4633)
!4638 = !DILocation(line: 2376, column: 39, scope: !4633)
!4639 = !DILocation(line: 2376, column: 19, scope: !4633)
!4640 = !DILocation(line: 2377, column: 43, scope: !4587)
!4641 = !DILocation(line: 2377, column: 28, scope: !4587)
!4642 = !DILocation(line: 2377, column: 25, scope: !4587)
!4643 = !DILocation(line: 2377, column: 27, scope: !4587)
!4644 = !DILocation(line: 2378, column: 32, scope: !4587)
!4645 = !DILocation(line: 2378, column: 37, scope: !4587)
!4646 = !DILocation(line: 2378, column: 17, scope: !4587)
!4647 = !DILocation(line: 2379, column: 22, scope: !4648)
!4648 = distinct !DILexicalBlock(scope: !4587, file: !1, line: 2379, column: 21)
!4649 = !DILocation(line: 2379, column: 21, scope: !4648)
!4650 = !DILocation(line: 2379, column: 28, scope: !4648)
!4651 = !DILocation(line: 2379, column: 21, scope: !4587)
!4652 = !DILocation(line: 2380, column: 34, scope: !4648)
!4653 = !DILocation(line: 2380, column: 39, scope: !4648)
!4654 = !DILocation(line: 2380, column: 19, scope: !4648)
!4655 = !DILocation(line: 2381, column: 43, scope: !4587)
!4656 = !DILocation(line: 2381, column: 28, scope: !4587)
!4657 = !DILocation(line: 2381, column: 25, scope: !4587)
!4658 = !DILocation(line: 2381, column: 27, scope: !4587)
!4659 = !DILocation(line: 2382, column: 35, scope: !4660)
!4660 = distinct !DILexicalBlock(scope: !4587, file: !1, line: 2382, column: 21)
!4661 = !DILocation(line: 2382, column: 21, scope: !4660)
!4662 = !DILocation(line: 2382, column: 50, scope: !4660)
!4663 = !DILocation(line: 2382, column: 21, scope: !4587)
!4664 = !DILocation(line: 2384, column: 36, scope: !4665)
!4665 = distinct !DILexicalBlock(scope: !4660, file: !1, line: 2383, column: 19)
!4666 = !DILocation(line: 2384, column: 41, scope: !4665)
!4667 = !DILocation(line: 2384, column: 21, scope: !4665)
!4668 = !DILocation(line: 2385, column: 26, scope: !4669)
!4669 = distinct !DILexicalBlock(scope: !4665, file: !1, line: 2385, column: 25)
!4670 = !DILocation(line: 2385, column: 25, scope: !4669)
!4671 = !DILocation(line: 2385, column: 32, scope: !4669)
!4672 = !DILocation(line: 2385, column: 25, scope: !4665)
!4673 = !DILocation(line: 2386, column: 38, scope: !4669)
!4674 = !DILocation(line: 2386, column: 43, scope: !4669)
!4675 = !DILocation(line: 2386, column: 23, scope: !4669)
!4676 = !DILocation(line: 2387, column: 19, scope: !4665)
!4677 = !DILocation(line: 2388, column: 24, scope: !4678)
!4678 = distinct !DILexicalBlock(scope: !4587, file: !1, line: 2388, column: 17)
!4679 = !DILocation(line: 2388, column: 23, scope: !4678)
!4680 = !DILocation(line: 2388, column: 22, scope: !4678)
!4681 = !DILocation(line: 2388, column: 28, scope: !4682)
!4682 = distinct !DILexicalBlock(scope: !4678, file: !1, line: 2388, column: 17)
!4683 = !DILocation(line: 2388, column: 27, scope: !4682)
!4684 = !DILocation(line: 2388, column: 30, scope: !4682)
!4685 = !DILocation(line: 2388, column: 17, scope: !4678)
!4686 = !DILocation(line: 2390, column: 34, scope: !4687)
!4687 = distinct !DILexicalBlock(scope: !4682, file: !1, line: 2389, column: 17)
!4688 = !DILocation(line: 2390, column: 39, scope: !4687)
!4689 = !DILocation(line: 2390, column: 19, scope: !4687)
!4690 = !DILocation(line: 2391, column: 37, scope: !4691)
!4691 = distinct !DILexicalBlock(scope: !4687, file: !1, line: 2391, column: 23)
!4692 = !DILocation(line: 2391, column: 23, scope: !4691)
!4693 = !DILocation(line: 2391, column: 50, scope: !4691)
!4694 = !DILocation(line: 2391, column: 23, scope: !4687)
!4695 = !DILocation(line: 2392, column: 21, scope: !4691)
!4696 = distinct !{!4696, !4685, !4697}
!4697 = !DILocation(line: 2397, column: 17, scope: !4678)
!4698 = !DILocation(line: 2393, column: 34, scope: !4687)
!4699 = !DILocation(line: 2393, column: 57, scope: !4687)
!4700 = !DILocation(line: 2393, column: 19, scope: !4687)
!4701 = !DILocation(line: 2394, column: 37, scope: !4702)
!4702 = distinct !DILexicalBlock(scope: !4687, file: !1, line: 2394, column: 23)
!4703 = !DILocation(line: 2394, column: 23, scope: !4702)
!4704 = !DILocation(line: 2394, column: 55, scope: !4702)
!4705 = !DILocation(line: 2394, column: 23, scope: !4687)
!4706 = !DILocation(line: 2395, column: 21, scope: !4702)
!4707 = !DILocation(line: 2396, column: 19, scope: !4687)
!4708 = !DILocation(line: 2398, column: 41, scope: !4587)
!4709 = !DILocation(line: 2398, column: 47, scope: !4587)
!4710 = !DILocation(line: 2398, column: 59, scope: !4587)
!4711 = !DILocation(line: 2398, column: 61, scope: !4587)
!4712 = !DILocation(line: 2398, column: 60, scope: !4587)
!4713 = !DILocation(line: 2398, column: 62, scope: !4587)
!4714 = !DILocation(line: 2398, column: 64, scope: !4587)
!4715 = !DILocation(line: 2398, column: 24, scope: !4587)
!4716 = !DILocation(line: 2399, column: 27, scope: !4587)
!4717 = !DILocation(line: 2399, column: 43, scope: !4587)
!4718 = !DILocation(line: 2399, column: 47, scope: !4587)
!4719 = !DILocation(line: 2399, column: 54, scope: !4587)
!4720 = !DILocation(line: 2399, column: 65, scope: !4587)
!4721 = !DILocation(line: 2399, column: 56, scope: !4587)
!4722 = !DILocation(line: 2400, column: 19, scope: !4587)
!4723 = !DILocation(line: 2400, column: 35, scope: !4587)
!4724 = !DILocation(line: 2400, column: 39, scope: !4587)
!4725 = !DILocation(line: 2400, column: 46, scope: !4587)
!4726 = !DILocation(line: 2400, column: 57, scope: !4587)
!4727 = !DILocation(line: 2400, column: 48, scope: !4587)
!4728 = !DILocation(line: 2399, column: 67, scope: !4587)
!4729 = !DILocation(line: 2401, column: 19, scope: !4587)
!4730 = !DILocation(line: 2401, column: 35, scope: !4587)
!4731 = !DILocation(line: 2401, column: 39, scope: !4587)
!4732 = !DILocation(line: 2401, column: 46, scope: !4587)
!4733 = !DILocation(line: 2400, column: 59, scope: !4587)
!4734 = !DILocation(line: 2399, column: 24, scope: !4587)
!4735 = !DILocation(line: 2399, column: 26, scope: !4587)
!4736 = !DILocation(line: 2402, column: 27, scope: !4587)
!4737 = !DILocation(line: 2402, column: 43, scope: !4587)
!4738 = !DILocation(line: 2402, column: 47, scope: !4587)
!4739 = !DILocation(line: 2402, column: 54, scope: !4587)
!4740 = !DILocation(line: 2402, column: 65, scope: !4587)
!4741 = !DILocation(line: 2402, column: 56, scope: !4587)
!4742 = !DILocation(line: 2403, column: 19, scope: !4587)
!4743 = !DILocation(line: 2403, column: 35, scope: !4587)
!4744 = !DILocation(line: 2403, column: 39, scope: !4587)
!4745 = !DILocation(line: 2403, column: 46, scope: !4587)
!4746 = !DILocation(line: 2403, column: 57, scope: !4587)
!4747 = !DILocation(line: 2403, column: 48, scope: !4587)
!4748 = !DILocation(line: 2402, column: 67, scope: !4587)
!4749 = !DILocation(line: 2404, column: 19, scope: !4587)
!4750 = !DILocation(line: 2404, column: 35, scope: !4587)
!4751 = !DILocation(line: 2404, column: 39, scope: !4587)
!4752 = !DILocation(line: 2404, column: 46, scope: !4587)
!4753 = !DILocation(line: 2403, column: 59, scope: !4587)
!4754 = !DILocation(line: 2402, column: 24, scope: !4587)
!4755 = !DILocation(line: 2402, column: 26, scope: !4587)
!4756 = !DILocation(line: 2405, column: 27, scope: !4587)
!4757 = !DILocation(line: 2405, column: 43, scope: !4587)
!4758 = !DILocation(line: 2405, column: 47, scope: !4587)
!4759 = !DILocation(line: 2405, column: 54, scope: !4587)
!4760 = !DILocation(line: 2405, column: 65, scope: !4587)
!4761 = !DILocation(line: 2405, column: 56, scope: !4587)
!4762 = !DILocation(line: 2406, column: 19, scope: !4587)
!4763 = !DILocation(line: 2406, column: 35, scope: !4587)
!4764 = !DILocation(line: 2406, column: 39, scope: !4587)
!4765 = !DILocation(line: 2406, column: 46, scope: !4587)
!4766 = !DILocation(line: 2406, column: 57, scope: !4587)
!4767 = !DILocation(line: 2406, column: 48, scope: !4587)
!4768 = !DILocation(line: 2405, column: 67, scope: !4587)
!4769 = !DILocation(line: 2407, column: 19, scope: !4587)
!4770 = !DILocation(line: 2407, column: 35, scope: !4587)
!4771 = !DILocation(line: 2407, column: 39, scope: !4587)
!4772 = !DILocation(line: 2407, column: 46, scope: !4587)
!4773 = !DILocation(line: 2406, column: 59, scope: !4587)
!4774 = !DILocation(line: 2405, column: 24, scope: !4587)
!4775 = !DILocation(line: 2405, column: 26, scope: !4587)
!4776 = !DILocation(line: 2408, column: 27, scope: !4587)
!4777 = !DILocation(line: 2408, column: 43, scope: !4587)
!4778 = !DILocation(line: 2408, column: 47, scope: !4587)
!4779 = !DILocation(line: 2408, column: 54, scope: !4587)
!4780 = !DILocation(line: 2408, column: 65, scope: !4587)
!4781 = !DILocation(line: 2408, column: 56, scope: !4587)
!4782 = !DILocation(line: 2409, column: 19, scope: !4587)
!4783 = !DILocation(line: 2409, column: 35, scope: !4587)
!4784 = !DILocation(line: 2409, column: 39, scope: !4587)
!4785 = !DILocation(line: 2409, column: 46, scope: !4587)
!4786 = !DILocation(line: 2409, column: 57, scope: !4587)
!4787 = !DILocation(line: 2409, column: 48, scope: !4587)
!4788 = !DILocation(line: 2408, column: 67, scope: !4587)
!4789 = !DILocation(line: 2410, column: 19, scope: !4587)
!4790 = !DILocation(line: 2410, column: 35, scope: !4587)
!4791 = !DILocation(line: 2410, column: 39, scope: !4587)
!4792 = !DILocation(line: 2410, column: 46, scope: !4587)
!4793 = !DILocation(line: 2409, column: 59, scope: !4587)
!4794 = !DILocation(line: 2408, column: 24, scope: !4587)
!4795 = !DILocation(line: 2408, column: 26, scope: !4587)
!4796 = !DILocation(line: 2411, column: 43, scope: !4587)
!4797 = !DILocation(line: 2411, column: 66, scope: !4587)
!4798 = !DILocation(line: 2411, column: 24, scope: !4587)
!4799 = !DILocation(line: 2412, column: 41, scope: !4587)
!4800 = !DILocation(line: 2412, column: 47, scope: !4587)
!4801 = !DILocation(line: 2412, column: 51, scope: !4587)
!4802 = !DILocation(line: 2412, column: 24, scope: !4587)
!4803 = !DILocation(line: 2413, column: 43, scope: !4587)
!4804 = !DILocation(line: 2413, column: 75, scope: !4587)
!4805 = !DILocation(line: 2413, column: 24, scope: !4587)
!4806 = !DILocation(line: 2414, column: 43, scope: !4587)
!4807 = !DILocation(line: 2416, column: 41, scope: !4587)
!4808 = !DILocation(line: 2416, column: 51, scope: !4587)
!4809 = !DILocation(line: 2416, column: 43, scope: !4587)
!4810 = !DILocation(line: 2416, column: 53, scope: !4587)
!4811 = !DILocation(line: 2416, column: 29, scope: !4587)
!4812 = !DILocation(line: 2416, column: 19, scope: !4587)
!4813 = !DILocation(line: 2417, column: 41, scope: !4587)
!4814 = !DILocation(line: 2417, column: 51, scope: !4587)
!4815 = !DILocation(line: 2417, column: 43, scope: !4587)
!4816 = !DILocation(line: 2417, column: 53, scope: !4587)
!4817 = !DILocation(line: 2417, column: 29, scope: !4587)
!4818 = !DILocation(line: 2417, column: 19, scope: !4587)
!4819 = !DILocation(line: 2418, column: 26, scope: !4587)
!4820 = !DILocation(line: 2418, column: 36, scope: !4587)
!4821 = !DILocation(line: 2414, column: 24, scope: !4587)
!4822 = !DILocation(line: 2419, column: 41, scope: !4587)
!4823 = !DILocation(line: 2419, column: 47, scope: !4587)
!4824 = !DILocation(line: 2419, column: 51, scope: !4587)
!4825 = !DILocation(line: 2419, column: 24, scope: !4587)
!4826 = !DILocation(line: 2420, column: 32, scope: !4587)
!4827 = !DILocation(line: 2420, column: 37, scope: !4587)
!4828 = !DILocation(line: 2420, column: 17, scope: !4587)
!4829 = !DILocation(line: 2421, column: 17, scope: !4587)
!4830 = !DILocation(line: 2423, column: 41, scope: !4831)
!4831 = distinct !DILexicalBlock(scope: !4517, file: !1, line: 2423, column: 17)
!4832 = !DILocation(line: 2423, column: 17, scope: !4831)
!4833 = !DILocation(line: 2423, column: 48, scope: !4831)
!4834 = !DILocation(line: 2423, column: 17, scope: !4517)
!4835 = !DILocalVariable(name: "bounds", scope: !4836, file: !1, line: 2426, type: !708)
!4836 = distinct !DILexicalBlock(scope: !4831, file: !1, line: 2424, column: 15)
!4837 = !DILocation(line: 2426, column: 19, scope: !4836)
!4838 = !DILocation(line: 2428, column: 32, scope: !4836)
!4839 = !DILocation(line: 2428, column: 37, scope: !4836)
!4840 = !DILocation(line: 2428, column: 17, scope: !4836)
!4841 = !DILocation(line: 2429, column: 41, scope: !4836)
!4842 = !DILocation(line: 2429, column: 46, scope: !4836)
!4843 = !DILocation(line: 2429, column: 24, scope: !4836)
!4844 = !DILocation(line: 2430, column: 32, scope: !4836)
!4845 = !DILocation(line: 2430, column: 37, scope: !4836)
!4846 = !DILocation(line: 2430, column: 17, scope: !4836)
!4847 = !DILocation(line: 2431, column: 56, scope: !4836)
!4848 = !DILocation(line: 2431, column: 41, scope: !4836)
!4849 = !DILocation(line: 2431, column: 77, scope: !4836)
!4850 = !DILocation(line: 2431, column: 36, scope: !4836)
!4851 = !DILocation(line: 2431, column: 26, scope: !4836)
!4852 = !DILocation(line: 2431, column: 24, scope: !4836)
!4853 = !DILocation(line: 2431, column: 25, scope: !4836)
!4854 = !DILocation(line: 2433, column: 32, scope: !4836)
!4855 = !DILocation(line: 2433, column: 37, scope: !4836)
!4856 = !DILocation(line: 2433, column: 17, scope: !4836)
!4857 = !DILocation(line: 2434, column: 22, scope: !4858)
!4858 = distinct !DILexicalBlock(scope: !4836, file: !1, line: 2434, column: 21)
!4859 = !DILocation(line: 2434, column: 21, scope: !4858)
!4860 = !DILocation(line: 2434, column: 28, scope: !4858)
!4861 = !DILocation(line: 2434, column: 21, scope: !4836)
!4862 = !DILocation(line: 2435, column: 34, scope: !4858)
!4863 = !DILocation(line: 2435, column: 39, scope: !4858)
!4864 = !DILocation(line: 2435, column: 19, scope: !4858)
!4865 = !DILocation(line: 2436, column: 56, scope: !4836)
!4866 = !DILocation(line: 2436, column: 41, scope: !4836)
!4867 = !DILocation(line: 2436, column: 77, scope: !4836)
!4868 = !DILocation(line: 2436, column: 36, scope: !4836)
!4869 = !DILocation(line: 2436, column: 26, scope: !4836)
!4870 = !DILocation(line: 2436, column: 24, scope: !4836)
!4871 = !DILocation(line: 2436, column: 25, scope: !4836)
!4872 = !DILocation(line: 2438, column: 32, scope: !4836)
!4873 = !DILocation(line: 2438, column: 37, scope: !4836)
!4874 = !DILocation(line: 2438, column: 17, scope: !4836)
!4875 = !DILocation(line: 2439, column: 22, scope: !4876)
!4876 = distinct !DILexicalBlock(scope: !4836, file: !1, line: 2439, column: 21)
!4877 = !DILocation(line: 2439, column: 21, scope: !4876)
!4878 = !DILocation(line: 2439, column: 28, scope: !4876)
!4879 = !DILocation(line: 2439, column: 21, scope: !4836)
!4880 = !DILocation(line: 2440, column: 34, scope: !4876)
!4881 = !DILocation(line: 2440, column: 39, scope: !4876)
!4882 = !DILocation(line: 2440, column: 19, scope: !4876)
!4883 = !DILocation(line: 2441, column: 60, scope: !4836)
!4884 = !DILocation(line: 2441, column: 45, scope: !4836)
!4885 = !DILocation(line: 2442, column: 34, scope: !4836)
!4886 = !DILocation(line: 2441, column: 39, scope: !4836)
!4887 = !DILocation(line: 2441, column: 30, scope: !4836)
!4888 = !DILocation(line: 2441, column: 24, scope: !4836)
!4889 = !DILocation(line: 2441, column: 29, scope: !4836)
!4890 = !DILocation(line: 2443, column: 32, scope: !4836)
!4891 = !DILocation(line: 2443, column: 37, scope: !4836)
!4892 = !DILocation(line: 2443, column: 17, scope: !4836)
!4893 = !DILocation(line: 2444, column: 22, scope: !4894)
!4894 = distinct !DILexicalBlock(scope: !4836, file: !1, line: 2444, column: 21)
!4895 = !DILocation(line: 2444, column: 21, scope: !4894)
!4896 = !DILocation(line: 2444, column: 28, scope: !4894)
!4897 = !DILocation(line: 2444, column: 21, scope: !4836)
!4898 = !DILocation(line: 2445, column: 34, scope: !4894)
!4899 = !DILocation(line: 2445, column: 39, scope: !4894)
!4900 = !DILocation(line: 2445, column: 19, scope: !4894)
!4901 = !DILocation(line: 2446, column: 61, scope: !4836)
!4902 = !DILocation(line: 2446, column: 46, scope: !4836)
!4903 = !DILocation(line: 2447, column: 34, scope: !4836)
!4904 = !DILocation(line: 2446, column: 40, scope: !4836)
!4905 = !DILocation(line: 2446, column: 31, scope: !4836)
!4906 = !DILocation(line: 2446, column: 24, scope: !4836)
!4907 = !DILocation(line: 2446, column: 30, scope: !4836)
!4908 = !DILocation(line: 2448, column: 24, scope: !4909)
!4909 = distinct !DILexicalBlock(scope: !4836, file: !1, line: 2448, column: 17)
!4910 = !DILocation(line: 2448, column: 23, scope: !4909)
!4911 = !DILocation(line: 2448, column: 22, scope: !4909)
!4912 = !DILocation(line: 2448, column: 28, scope: !4913)
!4913 = distinct !DILexicalBlock(scope: !4909, file: !1, line: 2448, column: 17)
!4914 = !DILocation(line: 2448, column: 27, scope: !4913)
!4915 = !DILocation(line: 2448, column: 30, scope: !4913)
!4916 = !DILocation(line: 2448, column: 17, scope: !4909)
!4917 = !DILocation(line: 2450, column: 34, scope: !4918)
!4918 = distinct !DILexicalBlock(scope: !4913, file: !1, line: 2449, column: 17)
!4919 = !DILocation(line: 2450, column: 39, scope: !4918)
!4920 = !DILocation(line: 2450, column: 19, scope: !4918)
!4921 = !DILocation(line: 2451, column: 37, scope: !4922)
!4922 = distinct !DILexicalBlock(scope: !4918, file: !1, line: 2451, column: 23)
!4923 = !DILocation(line: 2451, column: 23, scope: !4922)
!4924 = !DILocation(line: 2451, column: 50, scope: !4922)
!4925 = !DILocation(line: 2451, column: 23, scope: !4918)
!4926 = !DILocation(line: 2452, column: 21, scope: !4922)
!4927 = distinct !{!4927, !4916, !4928}
!4928 = !DILocation(line: 2457, column: 17, scope: !4909)
!4929 = !DILocation(line: 2453, column: 34, scope: !4918)
!4930 = !DILocation(line: 2453, column: 57, scope: !4918)
!4931 = !DILocation(line: 2453, column: 19, scope: !4918)
!4932 = !DILocation(line: 2454, column: 37, scope: !4933)
!4933 = distinct !DILexicalBlock(scope: !4918, file: !1, line: 2454, column: 23)
!4934 = !DILocation(line: 2454, column: 23, scope: !4933)
!4935 = !DILocation(line: 2454, column: 54, scope: !4933)
!4936 = !DILocation(line: 2454, column: 23, scope: !4918)
!4937 = !DILocation(line: 2455, column: 21, scope: !4933)
!4938 = !DILocation(line: 2456, column: 19, scope: !4918)
!4939 = !DILocation(line: 2458, column: 41, scope: !4836)
!4940 = !DILocation(line: 2458, column: 47, scope: !4836)
!4941 = !DILocation(line: 2458, column: 59, scope: !4836)
!4942 = !DILocation(line: 2458, column: 61, scope: !4836)
!4943 = !DILocation(line: 2458, column: 60, scope: !4836)
!4944 = !DILocation(line: 2458, column: 62, scope: !4836)
!4945 = !DILocation(line: 2458, column: 64, scope: !4836)
!4946 = !DILocation(line: 2458, column: 24, scope: !4836)
!4947 = !DILocation(line: 2459, column: 43, scope: !4836)
!4948 = !DILocation(line: 2459, column: 66, scope: !4836)
!4949 = !DILocation(line: 2459, column: 24, scope: !4836)
!4950 = !DILocation(line: 2460, column: 41, scope: !4836)
!4951 = !DILocation(line: 2460, column: 47, scope: !4836)
!4952 = !DILocation(line: 2460, column: 51, scope: !4836)
!4953 = !DILocation(line: 2460, column: 24, scope: !4836)
!4954 = !DILocation(line: 2461, column: 43, scope: !4836)
!4955 = !DILocation(line: 2461, column: 75, scope: !4836)
!4956 = !DILocation(line: 2461, column: 24, scope: !4836)
!4957 = !DILocation(line: 2462, column: 43, scope: !4836)
!4958 = !DILocation(line: 2463, column: 61, scope: !4836)
!4959 = !DILocation(line: 2463, column: 45, scope: !4836)
!4960 = !DILocation(line: 2464, column: 26, scope: !4836)
!4961 = !DILocation(line: 2463, column: 67, scope: !4836)
!4962 = !DILocation(line: 2464, column: 49, scope: !4836)
!4963 = !DILocation(line: 2464, column: 33, scope: !4836)
!4964 = !DILocation(line: 2464, column: 67, scope: !4836)
!4965 = !DILocation(line: 2464, column: 51, scope: !4836)
!4966 = !DILocation(line: 2462, column: 24, scope: !4836)
!4967 = !DILocation(line: 2465, column: 41, scope: !4836)
!4968 = !DILocation(line: 2465, column: 47, scope: !4836)
!4969 = !DILocation(line: 2465, column: 51, scope: !4836)
!4970 = !DILocation(line: 2465, column: 24, scope: !4836)
!4971 = !DILocation(line: 2466, column: 32, scope: !4836)
!4972 = !DILocation(line: 2466, column: 37, scope: !4836)
!4973 = !DILocation(line: 2466, column: 17, scope: !4836)
!4974 = !DILocation(line: 2467, column: 17, scope: !4836)
!4975 = !DILocation(line: 2469, column: 49, scope: !4976)
!4976 = distinct !DILexicalBlock(scope: !4517, file: !1, line: 2469, column: 17)
!4977 = !DILocation(line: 2469, column: 17, scope: !4976)
!4978 = !DILocation(line: 2469, column: 56, scope: !4976)
!4979 = !DILocation(line: 2469, column: 17, scope: !4517)
!4980 = !DILocation(line: 2471, column: 18, scope: !4981)
!4981 = distinct !DILexicalBlock(scope: !4976, file: !1, line: 2470, column: 15)
!4982 = !DILocation(line: 2473, column: 19, scope: !4981)
!4983 = !DILocation(line: 2473, column: 45, scope: !4981)
!4984 = !DILocation(line: 2473, column: 46, scope: !4981)
!4985 = !DILocation(line: 2472, column: 47, scope: !4981)
!4986 = !DILocation(line: 2472, column: 33, scope: !4981)
!4987 = !DILocation(line: 2472, column: 32, scope: !4981)
!4988 = !DILocation(line: 2474, column: 21, scope: !4989)
!4989 = distinct !DILexicalBlock(scope: !4981, file: !1, line: 2474, column: 21)
!4990 = !DILocation(line: 2474, column: 37, scope: !4989)
!4991 = !DILocation(line: 2474, column: 21, scope: !4981)
!4992 = !DILocation(line: 2476, column: 50, scope: !4993)
!4993 = distinct !DILexicalBlock(scope: !4989, file: !1, line: 2475, column: 19)
!4994 = !DILocation(line: 2476, column: 57, scope: !4993)
!4995 = !DILocation(line: 2478, column: 55, scope: !4993)
!4996 = !DILocation(line: 2478, column: 62, scope: !4993)
!4997 = !DILocation(line: 2476, column: 28, scope: !4993)
!4998 = !DILocation(line: 2479, column: 21, scope: !4993)
!4999 = !DILocation(line: 2482, column: 19, scope: !4981)
!5000 = !DILocation(line: 2482, column: 35, scope: !4981)
!5001 = !DILocation(line: 2482, column: 36, scope: !4981)
!5002 = !DILocation(line: 2481, column: 36, scope: !4981)
!5003 = !DILocation(line: 2481, column: 17, scope: !4981)
!5004 = !DILocation(line: 2481, column: 33, scope: !4981)
!5005 = !DILocation(line: 2481, column: 35, scope: !4981)
!5006 = !DILocation(line: 2483, column: 17, scope: !4981)
!5007 = !DILocation(line: 2485, column: 38, scope: !5008)
!5008 = distinct !DILexicalBlock(scope: !4517, file: !1, line: 2485, column: 17)
!5009 = !DILocation(line: 2485, column: 17, scope: !5008)
!5010 = !DILocation(line: 2485, column: 45, scope: !5008)
!5011 = !DILocation(line: 2485, column: 17, scope: !4517)
!5012 = !DILocation(line: 2486, column: 15, scope: !5008)
!5013 = !DILocation(line: 2487, column: 19, scope: !4517)
!5014 = !DILocation(line: 2488, column: 13, scope: !4517)
!5015 = !DILocation(line: 2490, column: 15, scope: !4399)
!5016 = !DILocation(line: 2491, column: 9, scope: !4399)
!5017 = !DILocation(line: 2496, column: 39, scope: !5018)
!5018 = distinct !DILexicalBlock(scope: !5019, file: !1, line: 2496, column: 13)
!5019 = distinct !DILexicalBlock(scope: !3541, file: !1, line: 2495, column: 7)
!5020 = !DILocation(line: 2496, column: 13, scope: !5018)
!5021 = !DILocation(line: 2496, column: 48, scope: !5018)
!5022 = !DILocation(line: 2496, column: 13, scope: !5019)
!5023 = !DILocation(line: 2498, column: 27, scope: !5024)
!5024 = distinct !DILexicalBlock(scope: !5018, file: !1, line: 2497, column: 11)
!5025 = !DILocation(line: 2499, column: 13, scope: !5024)
!5026 = !DILocation(line: 2501, column: 36, scope: !5027)
!5027 = distinct !DILexicalBlock(scope: !5019, file: !1, line: 2501, column: 13)
!5028 = !DILocation(line: 2501, column: 13, scope: !5027)
!5029 = !DILocation(line: 2501, column: 45, scope: !5027)
!5030 = !DILocation(line: 2501, column: 13, scope: !5019)
!5031 = !DILocation(line: 2503, column: 28, scope: !5032)
!5032 = distinct !DILexicalBlock(scope: !5027, file: !1, line: 2502, column: 11)
!5033 = !DILocation(line: 2503, column: 33, scope: !5032)
!5034 = !DILocation(line: 2503, column: 13, scope: !5032)
!5035 = !DILocation(line: 2504, column: 34, scope: !5032)
!5036 = !DILocation(line: 2504, column: 19, scope: !5032)
!5037 = !DILocation(line: 2504, column: 18, scope: !5032)
!5038 = !DILocation(line: 2505, column: 58, scope: !5032)
!5039 = !DILocation(line: 2505, column: 44, scope: !5032)
!5040 = !DILocation(line: 2505, column: 27, scope: !5032)
!5041 = !DILocation(line: 2505, column: 23, scope: !5032)
!5042 = !DILocation(line: 2505, column: 20, scope: !5032)
!5043 = !DILocation(line: 2505, column: 22, scope: !5032)
!5044 = !DILocation(line: 2506, column: 58, scope: !5032)
!5045 = !DILocation(line: 2506, column: 44, scope: !5032)
!5046 = !DILocation(line: 2506, column: 27, scope: !5032)
!5047 = !DILocation(line: 2506, column: 23, scope: !5032)
!5048 = !DILocation(line: 2506, column: 20, scope: !5032)
!5049 = !DILocation(line: 2506, column: 22, scope: !5032)
!5050 = !DILocation(line: 2507, column: 60, scope: !5032)
!5051 = !DILocation(line: 2507, column: 46, scope: !5032)
!5052 = !DILocation(line: 2507, column: 29, scope: !5032)
!5053 = !DILocation(line: 2507, column: 25, scope: !5032)
!5054 = !DILocation(line: 2507, column: 24, scope: !5032)
!5055 = !DILocation(line: 2507, column: 20, scope: !5032)
!5056 = !DILocation(line: 2507, column: 22, scope: !5032)
!5057 = !DILocation(line: 2508, column: 58, scope: !5032)
!5058 = !DILocation(line: 2508, column: 44, scope: !5032)
!5059 = !DILocation(line: 2508, column: 27, scope: !5032)
!5060 = !DILocation(line: 2508, column: 23, scope: !5032)
!5061 = !DILocation(line: 2508, column: 20, scope: !5032)
!5062 = !DILocation(line: 2508, column: 22, scope: !5032)
!5063 = !DILocation(line: 2509, column: 13, scope: !5032)
!5064 = !DILocation(line: 2511, column: 44, scope: !5065)
!5065 = distinct !DILexicalBlock(scope: !5019, file: !1, line: 2511, column: 13)
!5066 = !DILocation(line: 2511, column: 13, scope: !5065)
!5067 = !DILocation(line: 2511, column: 53, scope: !5065)
!5068 = !DILocation(line: 2511, column: 13, scope: !5019)
!5069 = !DILocation(line: 2513, column: 27, scope: !5070)
!5070 = distinct !DILexicalBlock(scope: !5065, file: !1, line: 2512, column: 11)
!5071 = !DILocation(line: 2514, column: 13, scope: !5070)
!5072 = !DILocation(line: 2516, column: 15, scope: !5019)
!5073 = !DILocation(line: 2517, column: 9, scope: !5019)
!5074 = !DILocation(line: 2522, column: 35, scope: !5075)
!5075 = distinct !DILexicalBlock(scope: !5076, file: !1, line: 2522, column: 13)
!5076 = distinct !DILexicalBlock(scope: !3541, file: !1, line: 2521, column: 7)
!5077 = !DILocation(line: 2522, column: 13, scope: !5075)
!5078 = !DILocation(line: 2522, column: 44, scope: !5075)
!5079 = !DILocation(line: 2522, column: 13, scope: !5076)
!5080 = !DILocation(line: 2524, column: 28, scope: !5081)
!5081 = distinct !DILexicalBlock(scope: !5075, file: !1, line: 2523, column: 11)
!5082 = !DILocation(line: 2524, column: 33, scope: !5081)
!5083 = !DILocation(line: 2524, column: 13, scope: !5081)
!5084 = !DILocation(line: 2525, column: 38, scope: !5081)
!5085 = !DILocation(line: 2525, column: 23, scope: !5081)
!5086 = !DILocation(line: 2525, column: 20, scope: !5081)
!5087 = !DILocation(line: 2525, column: 22, scope: !5081)
!5088 = !DILocation(line: 2526, column: 28, scope: !5081)
!5089 = !DILocation(line: 2526, column: 33, scope: !5081)
!5090 = !DILocation(line: 2526, column: 13, scope: !5081)
!5091 = !DILocation(line: 2527, column: 18, scope: !5092)
!5092 = distinct !DILexicalBlock(scope: !5081, file: !1, line: 2527, column: 17)
!5093 = !DILocation(line: 2527, column: 17, scope: !5092)
!5094 = !DILocation(line: 2527, column: 24, scope: !5092)
!5095 = !DILocation(line: 2527, column: 17, scope: !5081)
!5096 = !DILocation(line: 2528, column: 30, scope: !5092)
!5097 = !DILocation(line: 2528, column: 35, scope: !5092)
!5098 = !DILocation(line: 2528, column: 15, scope: !5092)
!5099 = !DILocation(line: 2529, column: 38, scope: !5081)
!5100 = !DILocation(line: 2529, column: 23, scope: !5081)
!5101 = !DILocation(line: 2529, column: 20, scope: !5081)
!5102 = !DILocation(line: 2529, column: 22, scope: !5081)
!5103 = !DILocation(line: 2530, column: 13, scope: !5081)
!5104 = !DILocation(line: 2532, column: 35, scope: !5105)
!5105 = distinct !DILexicalBlock(scope: !5076, file: !1, line: 2532, column: 13)
!5106 = !DILocation(line: 2532, column: 13, scope: !5105)
!5107 = !DILocation(line: 2532, column: 44, scope: !5105)
!5108 = !DILocation(line: 2532, column: 13, scope: !5076)
!5109 = !DILocation(line: 2534, column: 28, scope: !5110)
!5110 = distinct !DILexicalBlock(scope: !5105, file: !1, line: 2533, column: 11)
!5111 = !DILocation(line: 2534, column: 33, scope: !5110)
!5112 = !DILocation(line: 2534, column: 13, scope: !5110)
!5113 = !DILocation(line: 2535, column: 34, scope: !5110)
!5114 = !DILocation(line: 2535, column: 19, scope: !5110)
!5115 = !DILocation(line: 2535, column: 18, scope: !5110)
!5116 = !DILocation(line: 2536, column: 44, scope: !5110)
!5117 = !DILocation(line: 2536, column: 27, scope: !5110)
!5118 = !DILocation(line: 2536, column: 23, scope: !5110)
!5119 = !DILocation(line: 2536, column: 20, scope: !5110)
!5120 = !DILocation(line: 2536, column: 22, scope: !5110)
!5121 = !DILocation(line: 2537, column: 13, scope: !5110)
!5122 = !DILocation(line: 2539, column: 35, scope: !5123)
!5123 = distinct !DILexicalBlock(scope: !5076, file: !1, line: 2539, column: 13)
!5124 = !DILocation(line: 2539, column: 13, scope: !5123)
!5125 = !DILocation(line: 2539, column: 44, scope: !5123)
!5126 = !DILocation(line: 2539, column: 13, scope: !5076)
!5127 = !DILocation(line: 2541, column: 28, scope: !5128)
!5128 = distinct !DILexicalBlock(scope: !5123, file: !1, line: 2540, column: 11)
!5129 = !DILocation(line: 2541, column: 33, scope: !5128)
!5130 = !DILocation(line: 2541, column: 13, scope: !5128)
!5131 = !DILocation(line: 2542, column: 34, scope: !5128)
!5132 = !DILocation(line: 2542, column: 19, scope: !5128)
!5133 = !DILocation(line: 2542, column: 18, scope: !5128)
!5134 = !DILocation(line: 2543, column: 46, scope: !5128)
!5135 = !DILocation(line: 2543, column: 29, scope: !5128)
!5136 = !DILocation(line: 2543, column: 52, scope: !5128)
!5137 = !DILocation(line: 2543, column: 25, scope: !5128)
!5138 = !DILocation(line: 2543, column: 24, scope: !5128)
!5139 = !DILocation(line: 2543, column: 20, scope: !5128)
!5140 = !DILocation(line: 2543, column: 22, scope: !5128)
!5141 = !DILocation(line: 2544, column: 13, scope: !5128)
!5142 = !DILocation(line: 2546, column: 40, scope: !5143)
!5143 = distinct !DILexicalBlock(scope: !5076, file: !1, line: 2546, column: 13)
!5144 = !DILocation(line: 2546, column: 13, scope: !5143)
!5145 = !DILocation(line: 2546, column: 49, scope: !5143)
!5146 = !DILocation(line: 2546, column: 13, scope: !5076)
!5147 = !DILocalVariable(name: "stop_color", scope: !5148, file: !1, line: 2549, type: !737)
!5148 = distinct !DILexicalBlock(scope: !5143, file: !1, line: 2547, column: 11)
!5149 = !DILocation(line: 2549, column: 15, scope: !5148)
!5150 = !DILocation(line: 2551, column: 28, scope: !5148)
!5151 = !DILocation(line: 2551, column: 33, scope: !5148)
!5152 = !DILocation(line: 2551, column: 13, scope: !5148)
!5153 = !DILocation(line: 2552, column: 39, scope: !5148)
!5154 = !DILocation(line: 2552, column: 58, scope: !5148)
!5155 = !DILocation(line: 2552, column: 65, scope: !5148)
!5156 = !DILocation(line: 2552, column: 20, scope: !5148)
!5157 = !DILocation(line: 2553, column: 34, scope: !5148)
!5158 = !DILocation(line: 2553, column: 20, scope: !5148)
!5159 = !DILocation(line: 2555, column: 25, scope: !5148)
!5160 = !DILocation(line: 2556, column: 28, scope: !5148)
!5161 = !DILocation(line: 2556, column: 33, scope: !5148)
!5162 = !DILocation(line: 2556, column: 13, scope: !5148)
!5163 = !DILocation(line: 2557, column: 13, scope: !5148)
!5164 = !DILocation(line: 2559, column: 36, scope: !5165)
!5165 = distinct !DILexicalBlock(scope: !5076, file: !1, line: 2559, column: 13)
!5166 = !DILocation(line: 2559, column: 13, scope: !5165)
!5167 = !DILocation(line: 2559, column: 45, scope: !5165)
!5168 = !DILocation(line: 2559, column: 13, scope: !5076)
!5169 = !DILocation(line: 2561, column: 28, scope: !5170)
!5170 = distinct !DILexicalBlock(scope: !5165, file: !1, line: 2560, column: 11)
!5171 = !DILocation(line: 2561, column: 33, scope: !5170)
!5172 = !DILocation(line: 2561, column: 13, scope: !5170)
!5173 = !DILocation(line: 2562, column: 39, scope: !5170)
!5174 = !DILocation(line: 2562, column: 66, scope: !5170)
!5175 = !DILocation(line: 2562, column: 20, scope: !5170)
!5176 = !DILocation(line: 2563, column: 34, scope: !5177)
!5177 = distinct !DILexicalBlock(scope: !5170, file: !1, line: 2563, column: 17)
!5178 = !DILocation(line: 2563, column: 40, scope: !5177)
!5179 = !DILocation(line: 2563, column: 17, scope: !5177)
!5180 = !DILocation(line: 2563, column: 49, scope: !5177)
!5181 = !DILocation(line: 2563, column: 17, scope: !5170)
!5182 = !DILocation(line: 2564, column: 38, scope: !5177)
!5183 = !DILocation(line: 2564, column: 44, scope: !5177)
!5184 = !DILocation(line: 2564, column: 54, scope: !5177)
!5185 = !DILocation(line: 2565, column: 18, scope: !5177)
!5186 = !DILocation(line: 2565, column: 34, scope: !5177)
!5187 = !DILocation(line: 2565, column: 38, scope: !5177)
!5188 = !DILocation(line: 2564, column: 22, scope: !5177)
!5189 = !DILocation(line: 2564, column: 15, scope: !5177)
!5190 = !DILocation(line: 2568, column: 44, scope: !5191)
!5191 = distinct !DILexicalBlock(scope: !5177, file: !1, line: 2567, column: 15)
!5192 = !DILocation(line: 2568, column: 51, scope: !5191)
!5193 = !DILocation(line: 2568, column: 67, scope: !5191)
!5194 = !DILocation(line: 2568, column: 71, scope: !5191)
!5195 = !DILocation(line: 2569, column: 20, scope: !5191)
!5196 = !DILocation(line: 2569, column: 27, scope: !5191)
!5197 = !DILocation(line: 2568, column: 25, scope: !5191)
!5198 = !DILocation(line: 2568, column: 23, scope: !5191)
!5199 = !DILocation(line: 2570, column: 21, scope: !5200)
!5200 = distinct !DILexicalBlock(scope: !5191, file: !1, line: 2570, column: 21)
!5201 = !DILocation(line: 2570, column: 28, scope: !5200)
!5202 = !DILocation(line: 2570, column: 21, scope: !5191)
!5203 = !DILocalVariable(name: "pattern_info", scope: !5204, file: !1, line: 2573, type: !1051)
!5204 = distinct !DILexicalBlock(scope: !5200, file: !1, line: 2571, column: 19)
!5205 = !DILocation(line: 2573, column: 24, scope: !5204)
!5206 = !DILocation(line: 2575, column: 34, scope: !5204)
!5207 = !DILocation(line: 2575, column: 33, scope: !5204)
!5208 = !DILocation(line: 2576, column: 45, scope: !5204)
!5209 = !DILocation(line: 2576, column: 59, scope: !5204)
!5210 = !DILocation(line: 2576, column: 68, scope: !5204)
!5211 = !DILocation(line: 2576, column: 28, scope: !5204)
!5212 = !DILocation(line: 2579, column: 33, scope: !5204)
!5213 = !DILocation(line: 2579, column: 47, scope: !5204)
!5214 = !DILocation(line: 2579, column: 54, scope: !5204)
!5215 = !DILocation(line: 2579, column: 23, scope: !5204)
!5216 = !DILocation(line: 2578, column: 21, scope: !5204)
!5217 = !DILocation(line: 2578, column: 37, scope: !5204)
!5218 = !DILocation(line: 2578, column: 41, scope: !5204)
!5219 = !DILocation(line: 2578, column: 55, scope: !5204)
!5220 = !DILocation(line: 2580, column: 37, scope: !5204)
!5221 = !DILocation(line: 2580, column: 44, scope: !5204)
!5222 = !DILocation(line: 2580, column: 21, scope: !5204)
!5223 = !DILocation(line: 2581, column: 51, scope: !5204)
!5224 = !DILocation(line: 2581, column: 34, scope: !5204)
!5225 = !DILocation(line: 2581, column: 33, scope: !5204)
!5226 = !DILocation(line: 2582, column: 19, scope: !5204)
!5227 = !DILocation(line: 2584, column: 13, scope: !5170)
!5228 = !DILocation(line: 2586, column: 46, scope: !5229)
!5229 = distinct !DILexicalBlock(scope: !5076, file: !1, line: 2586, column: 13)
!5230 = !DILocation(line: 2586, column: 13, scope: !5229)
!5231 = !DILocation(line: 2586, column: 55, scope: !5229)
!5232 = !DILocation(line: 2586, column: 13, scope: !5076)
!5233 = !DILocation(line: 2588, column: 28, scope: !5234)
!5234 = distinct !DILexicalBlock(scope: !5229, file: !1, line: 2587, column: 11)
!5235 = !DILocation(line: 2588, column: 33, scope: !5234)
!5236 = !DILocation(line: 2588, column: 13, scope: !5234)
!5237 = !DILocation(line: 2590, column: 28, scope: !5234)
!5238 = !DILocation(line: 2590, column: 15, scope: !5234)
!5239 = !DILocation(line: 2590, column: 35, scope: !5234)
!5240 = !DILocation(line: 2589, column: 13, scope: !5234)
!5241 = !DILocation(line: 2589, column: 29, scope: !5234)
!5242 = !DILocation(line: 2589, column: 33, scope: !5234)
!5243 = !DILocation(line: 2589, column: 49, scope: !5234)
!5244 = !DILocation(line: 2591, column: 13, scope: !5234)
!5245 = !DILocation(line: 2593, column: 46, scope: !5246)
!5246 = distinct !DILexicalBlock(scope: !5076, file: !1, line: 2593, column: 13)
!5247 = !DILocation(line: 2593, column: 13, scope: !5246)
!5248 = !DILocation(line: 2593, column: 55, scope: !5246)
!5249 = !DILocation(line: 2593, column: 13, scope: !5076)
!5250 = !DILocation(line: 2595, column: 17, scope: !5251)
!5251 = distinct !DILexicalBlock(scope: !5252, file: !1, line: 2595, column: 17)
!5252 = distinct !DILexicalBlock(scope: !5246, file: !1, line: 2594, column: 11)
!5253 = !DILocation(line: 2595, column: 33, scope: !5251)
!5254 = !DILocation(line: 2595, column: 37, scope: !5251)
!5255 = !DILocation(line: 2595, column: 50, scope: !5251)
!5256 = !DILocation(line: 2595, column: 17, scope: !5252)
!5257 = !DILocation(line: 2597, column: 40, scope: !5251)
!5258 = !DILocation(line: 2597, column: 56, scope: !5251)
!5259 = !DILocation(line: 2597, column: 60, scope: !5251)
!5260 = !DILocation(line: 2597, column: 17, scope: !5251)
!5261 = !DILocation(line: 2596, column: 48, scope: !5251)
!5262 = !DILocation(line: 2596, column: 15, scope: !5251)
!5263 = !DILocation(line: 2596, column: 31, scope: !5251)
!5264 = !DILocation(line: 2596, column: 35, scope: !5251)
!5265 = !DILocation(line: 2596, column: 47, scope: !5251)
!5266 = !DILocation(line: 2598, column: 25, scope: !5267)
!5267 = distinct !DILexicalBlock(scope: !5252, file: !1, line: 2598, column: 17)
!5268 = !DILocation(line: 2598, column: 17, scope: !5267)
!5269 = !DILocation(line: 2598, column: 28, scope: !5267)
!5270 = !DILocation(line: 2598, column: 17, scope: !5252)
!5271 = !DILocalVariable(name: "p", scope: !5272, file: !1, line: 2601, type: !904)
!5272 = distinct !DILexicalBlock(scope: !5267, file: !1, line: 2599, column: 15)
!5273 = !DILocation(line: 2601, column: 20, scope: !5272)
!5274 = !DILocation(line: 2603, column: 19, scope: !5272)
!5275 = !DILocation(line: 2603, column: 18, scope: !5272)
!5276 = !DILocation(line: 2604, column: 32, scope: !5272)
!5277 = !DILocation(line: 2604, column: 37, scope: !5272)
!5278 = !DILocation(line: 2604, column: 17, scope: !5272)
!5279 = !DILocation(line: 2605, column: 22, scope: !5280)
!5280 = distinct !DILexicalBlock(scope: !5272, file: !1, line: 2605, column: 21)
!5281 = !DILocation(line: 2605, column: 21, scope: !5280)
!5282 = !DILocation(line: 2605, column: 28, scope: !5280)
!5283 = !DILocation(line: 2605, column: 21, scope: !5272)
!5284 = !DILocation(line: 2606, column: 34, scope: !5280)
!5285 = !DILocation(line: 2606, column: 39, scope: !5280)
!5286 = !DILocation(line: 2606, column: 19, scope: !5280)
!5287 = !DILocation(line: 2607, column: 23, scope: !5288)
!5288 = distinct !DILexicalBlock(scope: !5272, file: !1, line: 2607, column: 17)
!5289 = !DILocation(line: 2607, column: 22, scope: !5288)
!5290 = !DILocation(line: 2607, column: 35, scope: !5291)
!5291 = distinct !DILexicalBlock(scope: !5288, file: !1, line: 2607, column: 17)
!5292 = !DILocation(line: 2607, column: 27, scope: !5291)
!5293 = !DILocation(line: 2607, column: 42, scope: !5291)
!5294 = !DILocation(line: 2607, column: 17, scope: !5288)
!5295 = !DILocation(line: 2609, column: 34, scope: !5296)
!5296 = distinct !DILexicalBlock(scope: !5291, file: !1, line: 2608, column: 17)
!5297 = !DILocation(line: 2609, column: 39, scope: !5296)
!5298 = !DILocation(line: 2609, column: 19, scope: !5296)
!5299 = !DILocation(line: 2610, column: 24, scope: !5300)
!5300 = distinct !DILexicalBlock(scope: !5296, file: !1, line: 2610, column: 23)
!5301 = !DILocation(line: 2610, column: 23, scope: !5300)
!5302 = !DILocation(line: 2610, column: 30, scope: !5300)
!5303 = !DILocation(line: 2610, column: 23, scope: !5296)
!5304 = !DILocation(line: 2611, column: 36, scope: !5300)
!5305 = !DILocation(line: 2611, column: 41, scope: !5300)
!5306 = !DILocation(line: 2611, column: 21, scope: !5300)
!5307 = !DILocation(line: 2612, column: 17, scope: !5296)
!5308 = !DILocation(line: 2607, column: 59, scope: !5291)
!5309 = !DILocation(line: 2607, column: 17, scope: !5291)
!5310 = distinct !{!5310, !5294, !5311}
!5311 = !DILocation(line: 2612, column: 17, scope: !5288)
!5312 = !DILocation(line: 2614, column: 54, scope: !5272)
!5313 = !DILocation(line: 2614, column: 53, scope: !5272)
!5314 = !DILocation(line: 2614, column: 55, scope: !5272)
!5315 = !DILocation(line: 2614, column: 19, scope: !5272)
!5316 = !DILocation(line: 2613, column: 50, scope: !5272)
!5317 = !DILocation(line: 2613, column: 17, scope: !5272)
!5318 = !DILocation(line: 2613, column: 33, scope: !5272)
!5319 = !DILocation(line: 2613, column: 37, scope: !5272)
!5320 = !DILocation(line: 2613, column: 49, scope: !5272)
!5321 = !DILocation(line: 2616, column: 21, scope: !5322)
!5322 = distinct !DILexicalBlock(scope: !5272, file: !1, line: 2616, column: 21)
!5323 = !DILocation(line: 2616, column: 37, scope: !5322)
!5324 = !DILocation(line: 2616, column: 41, scope: !5322)
!5325 = !DILocation(line: 2616, column: 54, scope: !5322)
!5326 = !DILocation(line: 2616, column: 21, scope: !5272)
!5327 = !DILocation(line: 2618, column: 50, scope: !5328)
!5328 = distinct !DILexicalBlock(scope: !5322, file: !1, line: 2617, column: 19)
!5329 = !DILocation(line: 2618, column: 57, scope: !5328)
!5330 = !DILocation(line: 2620, column: 55, scope: !5328)
!5331 = !DILocation(line: 2620, column: 62, scope: !5328)
!5332 = !DILocation(line: 2618, column: 28, scope: !5328)
!5333 = !DILocation(line: 2621, column: 21, scope: !5328)
!5334 = !DILocation(line: 2623, column: 23, scope: !5335)
!5335 = distinct !DILexicalBlock(scope: !5272, file: !1, line: 2623, column: 17)
!5336 = !DILocation(line: 2623, column: 22, scope: !5335)
!5337 = !DILocation(line: 2623, column: 27, scope: !5338)
!5338 = distinct !DILexicalBlock(scope: !5335, file: !1, line: 2623, column: 17)
!5339 = !DILocation(line: 2623, column: 31, scope: !5338)
!5340 = !DILocation(line: 2623, column: 29, scope: !5338)
!5341 = !DILocation(line: 2623, column: 17, scope: !5335)
!5342 = !DILocation(line: 2625, column: 34, scope: !5343)
!5343 = distinct !DILexicalBlock(scope: !5338, file: !1, line: 2624, column: 17)
!5344 = !DILocation(line: 2625, column: 39, scope: !5343)
!5345 = !DILocation(line: 2625, column: 19, scope: !5343)
!5346 = !DILocation(line: 2626, column: 24, scope: !5347)
!5347 = distinct !DILexicalBlock(scope: !5343, file: !1, line: 2626, column: 23)
!5348 = !DILocation(line: 2626, column: 23, scope: !5347)
!5349 = !DILocation(line: 2626, column: 30, scope: !5347)
!5350 = !DILocation(line: 2626, column: 23, scope: !5343)
!5351 = !DILocation(line: 2627, column: 36, scope: !5347)
!5352 = !DILocation(line: 2627, column: 41, scope: !5347)
!5353 = !DILocation(line: 2627, column: 21, scope: !5347)
!5354 = !DILocation(line: 2628, column: 70, scope: !5343)
!5355 = !DILocation(line: 2628, column: 55, scope: !5343)
!5356 = !DILocation(line: 2628, column: 19, scope: !5343)
!5357 = !DILocation(line: 2628, column: 35, scope: !5343)
!5358 = !DILocation(line: 2628, column: 39, scope: !5343)
!5359 = !DILocation(line: 2628, column: 52, scope: !5343)
!5360 = !DILocation(line: 2628, column: 54, scope: !5343)
!5361 = !DILocation(line: 2630, column: 17, scope: !5343)
!5362 = !DILocation(line: 2623, column: 35, scope: !5338)
!5363 = !DILocation(line: 2623, column: 17, scope: !5338)
!5364 = distinct !{!5364, !5341, !5365}
!5365 = !DILocation(line: 2630, column: 17, scope: !5335)
!5366 = !DILocation(line: 2631, column: 22, scope: !5367)
!5367 = distinct !DILexicalBlock(scope: !5272, file: !1, line: 2631, column: 21)
!5368 = !DILocation(line: 2631, column: 24, scope: !5367)
!5369 = !DILocation(line: 2631, column: 32, scope: !5367)
!5370 = !DILocation(line: 2631, column: 21, scope: !5272)
!5371 = !DILocation(line: 2632, column: 19, scope: !5367)
!5372 = !DILocation(line: 2632, column: 27, scope: !5373)
!5373 = distinct !DILexicalBlock(scope: !5374, file: !1, line: 2632, column: 19)
!5374 = distinct !DILexicalBlock(scope: !5367, file: !1, line: 2632, column: 19)
!5375 = !DILocation(line: 2632, column: 34, scope: !5373)
!5376 = !DILocation(line: 2632, column: 33, scope: !5373)
!5377 = !DILocation(line: 2632, column: 29, scope: !5373)
!5378 = !DILocation(line: 2632, column: 19, scope: !5374)
!5379 = !DILocation(line: 2634, column: 23, scope: !5373)
!5380 = !DILocation(line: 2634, column: 39, scope: !5373)
!5381 = !DILocation(line: 2634, column: 43, scope: !5373)
!5382 = !DILocation(line: 2634, column: 56, scope: !5373)
!5383 = !DILocation(line: 2634, column: 58, scope: !5373)
!5384 = !DILocation(line: 2634, column: 57, scope: !5373)
!5385 = !DILocation(line: 2633, column: 21, scope: !5373)
!5386 = !DILocation(line: 2633, column: 37, scope: !5373)
!5387 = !DILocation(line: 2633, column: 41, scope: !5373)
!5388 = !DILocation(line: 2633, column: 54, scope: !5373)
!5389 = !DILocation(line: 2633, column: 56, scope: !5373)
!5390 = !DILocation(line: 2632, column: 39, scope: !5373)
!5391 = !DILocation(line: 2632, column: 19, scope: !5373)
!5392 = distinct !{!5392, !5378, !5393}
!5393 = !DILocation(line: 2634, column: 59, scope: !5374)
!5394 = !DILocation(line: 2635, column: 17, scope: !5272)
!5395 = !DILocation(line: 2635, column: 33, scope: !5272)
!5396 = !DILocation(line: 2635, column: 37, scope: !5272)
!5397 = !DILocation(line: 2635, column: 50, scope: !5272)
!5398 = !DILocation(line: 2635, column: 52, scope: !5272)
!5399 = !DILocation(line: 2636, column: 17, scope: !5272)
!5400 = !DILocation(line: 2638, column: 28, scope: !5252)
!5401 = !DILocation(line: 2638, column: 33, scope: !5252)
!5402 = !DILocation(line: 2638, column: 13, scope: !5252)
!5403 = !DILocation(line: 2639, column: 13, scope: !5252)
!5404 = !DILocation(line: 2641, column: 47, scope: !5405)
!5405 = distinct !DILexicalBlock(scope: !5076, file: !1, line: 2641, column: 13)
!5406 = !DILocation(line: 2641, column: 13, scope: !5405)
!5407 = !DILocation(line: 2641, column: 56, scope: !5405)
!5408 = !DILocation(line: 2641, column: 13, scope: !5076)
!5409 = !DILocation(line: 2643, column: 28, scope: !5410)
!5410 = distinct !DILexicalBlock(scope: !5405, file: !1, line: 2642, column: 11)
!5411 = !DILocation(line: 2643, column: 33, scope: !5410)
!5412 = !DILocation(line: 2643, column: 13, scope: !5410)
!5413 = !DILocation(line: 2644, column: 60, scope: !5410)
!5414 = !DILocation(line: 2644, column: 45, scope: !5410)
!5415 = !DILocation(line: 2644, column: 13, scope: !5410)
!5416 = !DILocation(line: 2644, column: 29, scope: !5410)
!5417 = !DILocation(line: 2644, column: 33, scope: !5410)
!5418 = !DILocation(line: 2644, column: 44, scope: !5410)
!5419 = !DILocation(line: 2646, column: 13, scope: !5410)
!5420 = !DILocation(line: 2648, column: 44, scope: !5421)
!5421 = distinct !DILexicalBlock(scope: !5076, file: !1, line: 2648, column: 13)
!5422 = !DILocation(line: 2648, column: 13, scope: !5421)
!5423 = !DILocation(line: 2648, column: 53, scope: !5421)
!5424 = !DILocation(line: 2648, column: 13, scope: !5076)
!5425 = !DILocalVariable(name: "linecap", scope: !5426, file: !1, line: 2651, type: !717)
!5426 = distinct !DILexicalBlock(scope: !5421, file: !1, line: 2649, column: 11)
!5427 = !DILocation(line: 2651, column: 15, scope: !5426)
!5428 = !DILocation(line: 2653, column: 28, scope: !5426)
!5429 = !DILocation(line: 2653, column: 33, scope: !5426)
!5430 = !DILocation(line: 2653, column: 13, scope: !5426)
!5431 = !DILocation(line: 2654, column: 73, scope: !5426)
!5432 = !DILocation(line: 2654, column: 21, scope: !5426)
!5433 = !DILocation(line: 2654, column: 20, scope: !5426)
!5434 = !DILocation(line: 2655, column: 17, scope: !5435)
!5435 = distinct !DILexicalBlock(scope: !5426, file: !1, line: 2655, column: 17)
!5436 = !DILocation(line: 2655, column: 25, scope: !5435)
!5437 = !DILocation(line: 2655, column: 17, scope: !5426)
!5438 = !DILocation(line: 2657, column: 23, scope: !5439)
!5439 = distinct !DILexicalBlock(scope: !5435, file: !1, line: 2656, column: 15)
!5440 = !DILocation(line: 2658, column: 17, scope: !5439)
!5441 = !DILocation(line: 2660, column: 51, scope: !5426)
!5442 = !DILocation(line: 2660, column: 41, scope: !5426)
!5443 = !DILocation(line: 2660, column: 13, scope: !5426)
!5444 = !DILocation(line: 2660, column: 29, scope: !5426)
!5445 = !DILocation(line: 2660, column: 33, scope: !5426)
!5446 = !DILocation(line: 2660, column: 40, scope: !5426)
!5447 = !DILocation(line: 2661, column: 13, scope: !5426)
!5448 = !DILocation(line: 2663, column: 45, scope: !5449)
!5449 = distinct !DILexicalBlock(scope: !5076, file: !1, line: 2663, column: 13)
!5450 = !DILocation(line: 2663, column: 13, scope: !5449)
!5451 = !DILocation(line: 2663, column: 54, scope: !5449)
!5452 = !DILocation(line: 2663, column: 13, scope: !5076)
!5453 = !DILocalVariable(name: "linejoin", scope: !5454, file: !1, line: 2666, type: !717)
!5454 = distinct !DILexicalBlock(scope: !5449, file: !1, line: 2664, column: 11)
!5455 = !DILocation(line: 2666, column: 15, scope: !5454)
!5456 = !DILocation(line: 2668, column: 28, scope: !5454)
!5457 = !DILocation(line: 2668, column: 33, scope: !5454)
!5458 = !DILocation(line: 2668, column: 13, scope: !5454)
!5459 = !DILocation(line: 2669, column: 75, scope: !5454)
!5460 = !DILocation(line: 2669, column: 22, scope: !5454)
!5461 = !DILocation(line: 2669, column: 21, scope: !5454)
!5462 = !DILocation(line: 2670, column: 17, scope: !5463)
!5463 = distinct !DILexicalBlock(scope: !5454, file: !1, line: 2670, column: 17)
!5464 = !DILocation(line: 2670, column: 26, scope: !5463)
!5465 = !DILocation(line: 2670, column: 17, scope: !5454)
!5466 = !DILocation(line: 2672, column: 23, scope: !5467)
!5467 = distinct !DILexicalBlock(scope: !5463, file: !1, line: 2671, column: 15)
!5468 = !DILocation(line: 2673, column: 17, scope: !5467)
!5469 = !DILocation(line: 2675, column: 53, scope: !5454)
!5470 = !DILocation(line: 2675, column: 42, scope: !5454)
!5471 = !DILocation(line: 2675, column: 13, scope: !5454)
!5472 = !DILocation(line: 2675, column: 29, scope: !5454)
!5473 = !DILocation(line: 2675, column: 33, scope: !5454)
!5474 = !DILocation(line: 2675, column: 41, scope: !5454)
!5475 = !DILocation(line: 2676, column: 13, scope: !5454)
!5476 = !DILocation(line: 2678, column: 47, scope: !5477)
!5477 = distinct !DILexicalBlock(scope: !5076, file: !1, line: 2678, column: 13)
!5478 = !DILocation(line: 2678, column: 13, scope: !5477)
!5479 = !DILocation(line: 2678, column: 56, scope: !5477)
!5480 = !DILocation(line: 2678, column: 13, scope: !5076)
!5481 = !DILocation(line: 2680, column: 28, scope: !5482)
!5482 = distinct !DILexicalBlock(scope: !5477, file: !1, line: 2679, column: 11)
!5483 = !DILocation(line: 2680, column: 33, scope: !5482)
!5484 = !DILocation(line: 2680, column: 13, scope: !5482)
!5485 = !DILocation(line: 2681, column: 65, scope: !5482)
!5486 = !DILocation(line: 2681, column: 44, scope: !5482)
!5487 = !DILocation(line: 2681, column: 13, scope: !5482)
!5488 = !DILocation(line: 2681, column: 29, scope: !5482)
!5489 = !DILocation(line: 2681, column: 33, scope: !5482)
!5490 = !DILocation(line: 2681, column: 43, scope: !5482)
!5491 = !DILocation(line: 2682, column: 13, scope: !5482)
!5492 = !DILocation(line: 2684, column: 44, scope: !5493)
!5493 = distinct !DILexicalBlock(scope: !5076, file: !1, line: 2684, column: 13)
!5494 = !DILocation(line: 2684, column: 13, scope: !5493)
!5495 = !DILocation(line: 2684, column: 53, scope: !5493)
!5496 = !DILocation(line: 2684, column: 13, scope: !5076)
!5497 = !DILocation(line: 2686, column: 28, scope: !5498)
!5498 = distinct !DILexicalBlock(scope: !5493, file: !1, line: 2685, column: 11)
!5499 = !DILocation(line: 2686, column: 33, scope: !5498)
!5500 = !DILocation(line: 2686, column: 13, scope: !5498)
!5501 = !DILocation(line: 2687, column: 27, scope: !5498)
!5502 = !DILocation(line: 2687, column: 20, scope: !5498)
!5503 = !DILocation(line: 2687, column: 38, scope: !5498)
!5504 = !DILocation(line: 2687, column: 19, scope: !5498)
!5505 = !DILocation(line: 2689, column: 33, scope: !5498)
!5506 = !DILocation(line: 2689, column: 55, scope: !5498)
!5507 = !DILocation(line: 2689, column: 40, scope: !5498)
!5508 = !DILocation(line: 2689, column: 39, scope: !5498)
!5509 = !DILocation(line: 2689, column: 32, scope: !5498)
!5510 = !DILocation(line: 2689, column: 27, scope: !5498)
!5511 = !DILocation(line: 2688, column: 63, scope: !5498)
!5512 = !DILocation(line: 2688, column: 48, scope: !5498)
!5513 = !DILocation(line: 2688, column: 13, scope: !5498)
!5514 = !DILocation(line: 2688, column: 29, scope: !5498)
!5515 = !DILocation(line: 2688, column: 33, scope: !5498)
!5516 = !DILocation(line: 2688, column: 40, scope: !5498)
!5517 = !DILocation(line: 2688, column: 47, scope: !5498)
!5518 = !DILocation(line: 2690, column: 13, scope: !5498)
!5519 = !DILocation(line: 2692, column: 42, scope: !5520)
!5520 = distinct !DILexicalBlock(scope: !5076, file: !1, line: 2692, column: 13)
!5521 = !DILocation(line: 2692, column: 13, scope: !5520)
!5522 = !DILocation(line: 2692, column: 51, scope: !5520)
!5523 = !DILocation(line: 2692, column: 13, scope: !5076)
!5524 = !DILocation(line: 2694, column: 28, scope: !5525)
!5525 = distinct !DILexicalBlock(scope: !5520, file: !1, line: 2693, column: 11)
!5526 = !DILocation(line: 2694, column: 33, scope: !5525)
!5527 = !DILocation(line: 2694, column: 13, scope: !5525)
!5528 = !DILocation(line: 2695, column: 61, scope: !5525)
!5529 = !DILocation(line: 2695, column: 46, scope: !5525)
!5530 = !DILocation(line: 2695, column: 13, scope: !5525)
!5531 = !DILocation(line: 2695, column: 29, scope: !5525)
!5532 = !DILocation(line: 2695, column: 33, scope: !5525)
!5533 = !DILocation(line: 2695, column: 45, scope: !5525)
!5534 = !DILocation(line: 2697, column: 13, scope: !5525)
!5535 = !DILocation(line: 2699, column: 15, scope: !5076)
!5536 = !DILocation(line: 2700, column: 9, scope: !5076)
!5537 = !DILocation(line: 2705, column: 34, scope: !5538)
!5538 = distinct !DILexicalBlock(scope: !5539, file: !1, line: 2705, column: 13)
!5539 = distinct !DILexicalBlock(scope: !3541, file: !1, line: 2704, column: 7)
!5540 = !DILocation(line: 2705, column: 13, scope: !5538)
!5541 = !DILocation(line: 2705, column: 43, scope: !5538)
!5542 = !DILocation(line: 2705, column: 13, scope: !5539)
!5543 = !DILocation(line: 2707, column: 27, scope: !5544)
!5544 = distinct !DILexicalBlock(scope: !5538, file: !1, line: 2706, column: 11)
!5545 = !DILocation(line: 2708, column: 13, scope: !5544)
!5546 = !DILocation(line: 2710, column: 40, scope: !5547)
!5547 = distinct !DILexicalBlock(scope: !5539, file: !1, line: 2710, column: 13)
!5548 = !DILocation(line: 2710, column: 13, scope: !5547)
!5549 = !DILocation(line: 2710, column: 49, scope: !5547)
!5550 = !DILocation(line: 2710, column: 13, scope: !5539)
!5551 = !DILocalVariable(name: "align", scope: !5552, file: !1, line: 2713, type: !717)
!5552 = distinct !DILexicalBlock(scope: !5547, file: !1, line: 2711, column: 11)
!5553 = !DILocation(line: 2713, column: 15, scope: !5552)
!5554 = !DILocation(line: 2715, column: 28, scope: !5552)
!5555 = !DILocation(line: 2715, column: 33, scope: !5552)
!5556 = !DILocation(line: 2715, column: 13, scope: !5552)
!5557 = !DILocation(line: 2716, column: 69, scope: !5552)
!5558 = !DILocation(line: 2716, column: 19, scope: !5552)
!5559 = !DILocation(line: 2716, column: 18, scope: !5552)
!5560 = !DILocation(line: 2717, column: 17, scope: !5561)
!5561 = distinct !DILexicalBlock(scope: !5552, file: !1, line: 2717, column: 17)
!5562 = !DILocation(line: 2717, column: 23, scope: !5561)
!5563 = !DILocation(line: 2717, column: 17, scope: !5552)
!5564 = !DILocation(line: 2719, column: 23, scope: !5565)
!5565 = distinct !DILexicalBlock(scope: !5561, file: !1, line: 2718, column: 15)
!5566 = !DILocation(line: 2720, column: 17, scope: !5565)
!5567 = !DILocation(line: 2722, column: 51, scope: !5552)
!5568 = !DILocation(line: 2722, column: 39, scope: !5552)
!5569 = !DILocation(line: 2722, column: 13, scope: !5552)
!5570 = !DILocation(line: 2722, column: 29, scope: !5552)
!5571 = !DILocation(line: 2722, column: 33, scope: !5552)
!5572 = !DILocation(line: 2722, column: 38, scope: !5552)
!5573 = !DILocation(line: 2723, column: 13, scope: !5552)
!5574 = !DILocation(line: 2725, column: 41, scope: !5575)
!5575 = distinct !DILexicalBlock(scope: !5539, file: !1, line: 2725, column: 13)
!5576 = !DILocation(line: 2725, column: 13, scope: !5575)
!5577 = !DILocation(line: 2725, column: 50, scope: !5575)
!5578 = !DILocation(line: 2725, column: 13, scope: !5539)
!5579 = !DILocalVariable(name: "align", scope: !5580, file: !1, line: 2728, type: !717)
!5580 = distinct !DILexicalBlock(scope: !5575, file: !1, line: 2726, column: 11)
!5581 = !DILocation(line: 2728, column: 15, scope: !5580)
!5582 = !DILocation(line: 2730, column: 28, scope: !5580)
!5583 = !DILocation(line: 2730, column: 33, scope: !5580)
!5584 = !DILocation(line: 2730, column: 13, scope: !5580)
!5585 = !DILocation(line: 2731, column: 69, scope: !5580)
!5586 = !DILocation(line: 2731, column: 19, scope: !5580)
!5587 = !DILocation(line: 2731, column: 18, scope: !5580)
!5588 = !DILocation(line: 2732, column: 17, scope: !5589)
!5589 = distinct !DILexicalBlock(scope: !5580, file: !1, line: 2732, column: 17)
!5590 = !DILocation(line: 2732, column: 23, scope: !5589)
!5591 = !DILocation(line: 2732, column: 17, scope: !5580)
!5592 = !DILocation(line: 2734, column: 23, scope: !5593)
!5593 = distinct !DILexicalBlock(scope: !5589, file: !1, line: 2733, column: 15)
!5594 = !DILocation(line: 2735, column: 17, scope: !5593)
!5595 = !DILocation(line: 2737, column: 51, scope: !5580)
!5596 = !DILocation(line: 2737, column: 39, scope: !5580)
!5597 = !DILocation(line: 2737, column: 13, scope: !5580)
!5598 = !DILocation(line: 2737, column: 29, scope: !5580)
!5599 = !DILocation(line: 2737, column: 33, scope: !5580)
!5600 = !DILocation(line: 2737, column: 38, scope: !5580)
!5601 = !DILocation(line: 2738, column: 13, scope: !5580)
!5602 = !DILocation(line: 2740, column: 44, scope: !5603)
!5603 = distinct !DILexicalBlock(scope: !5539, file: !1, line: 2740, column: 13)
!5604 = !DILocation(line: 2740, column: 13, scope: !5603)
!5605 = !DILocation(line: 2740, column: 53, scope: !5603)
!5606 = !DILocation(line: 2740, column: 13, scope: !5539)
!5607 = !DILocation(line: 2742, column: 28, scope: !5608)
!5608 = distinct !DILexicalBlock(scope: !5603, file: !1, line: 2741, column: 11)
!5609 = !DILocation(line: 2742, column: 33, scope: !5608)
!5610 = !DILocation(line: 2742, column: 13, scope: !5608)
!5611 = !DILocation(line: 2744, column: 28, scope: !5608)
!5612 = !DILocation(line: 2744, column: 15, scope: !5608)
!5613 = !DILocation(line: 2744, column: 35, scope: !5608)
!5614 = !DILocation(line: 2743, column: 13, scope: !5608)
!5615 = !DILocation(line: 2743, column: 29, scope: !5608)
!5616 = !DILocation(line: 2743, column: 33, scope: !5608)
!5617 = !DILocation(line: 2743, column: 47, scope: !5608)
!5618 = !DILocation(line: 2745, column: 13, scope: !5608)
!5619 = !DILocation(line: 2747, column: 45, scope: !5620)
!5620 = distinct !DILexicalBlock(scope: !5539, file: !1, line: 2747, column: 13)
!5621 = !DILocation(line: 2747, column: 13, scope: !5620)
!5622 = !DILocation(line: 2747, column: 54, scope: !5620)
!5623 = !DILocation(line: 2747, column: 13, scope: !5539)
!5624 = !DILocation(line: 2749, column: 28, scope: !5625)
!5625 = distinct !DILexicalBlock(scope: !5620, file: !1, line: 2748, column: 11)
!5626 = !DILocation(line: 2749, column: 33, scope: !5625)
!5627 = !DILocation(line: 2749, column: 13, scope: !5625)
!5628 = !DILocation(line: 2750, column: 39, scope: !5625)
!5629 = !DILocation(line: 2750, column: 46, scope: !5625)
!5630 = !DILocation(line: 2750, column: 62, scope: !5625)
!5631 = !DILocation(line: 2750, column: 66, scope: !5625)
!5632 = !DILocation(line: 2751, column: 16, scope: !5625)
!5633 = !DILocation(line: 2751, column: 23, scope: !5625)
!5634 = !DILocation(line: 2750, column: 20, scope: !5625)
!5635 = !DILocation(line: 2752, column: 13, scope: !5625)
!5636 = !DILocation(line: 2754, column: 39, scope: !5637)
!5637 = distinct !DILexicalBlock(scope: !5539, file: !1, line: 2754, column: 13)
!5638 = !DILocation(line: 2754, column: 13, scope: !5637)
!5639 = !DILocation(line: 2754, column: 48, scope: !5637)
!5640 = !DILocation(line: 2754, column: 13, scope: !5539)
!5641 = !DILocation(line: 2756, column: 28, scope: !5642)
!5642 = distinct !DILexicalBlock(scope: !5637, file: !1, line: 2755, column: 11)
!5643 = !DILocation(line: 2756, column: 33, scope: !5642)
!5644 = !DILocation(line: 2756, column: 13, scope: !5642)
!5645 = !DILocation(line: 2757, column: 38, scope: !5642)
!5646 = !DILocation(line: 2757, column: 23, scope: !5642)
!5647 = !DILocation(line: 2757, column: 20, scope: !5642)
!5648 = !DILocation(line: 2757, column: 22, scope: !5642)
!5649 = !DILocation(line: 2758, column: 28, scope: !5642)
!5650 = !DILocation(line: 2758, column: 33, scope: !5642)
!5651 = !DILocation(line: 2758, column: 13, scope: !5642)
!5652 = !DILocation(line: 2759, column: 18, scope: !5653)
!5653 = distinct !DILexicalBlock(scope: !5642, file: !1, line: 2759, column: 17)
!5654 = !DILocation(line: 2759, column: 17, scope: !5653)
!5655 = !DILocation(line: 2759, column: 24, scope: !5653)
!5656 = !DILocation(line: 2759, column: 17, scope: !5642)
!5657 = !DILocation(line: 2760, column: 30, scope: !5653)
!5658 = !DILocation(line: 2760, column: 35, scope: !5653)
!5659 = !DILocation(line: 2760, column: 15, scope: !5653)
!5660 = !DILocation(line: 2761, column: 38, scope: !5642)
!5661 = !DILocation(line: 2761, column: 23, scope: !5642)
!5662 = !DILocation(line: 2761, column: 20, scope: !5642)
!5663 = !DILocation(line: 2761, column: 22, scope: !5642)
!5664 = !DILocation(line: 2762, column: 13, scope: !5642)
!5665 = !DILocation(line: 2764, column: 15, scope: !5539)
!5666 = !DILocation(line: 2765, column: 9, scope: !5539)
!5667 = !DILocation(line: 2770, column: 37, scope: !5668)
!5668 = distinct !DILexicalBlock(scope: !5669, file: !1, line: 2770, column: 13)
!5669 = distinct !DILexicalBlock(scope: !3541, file: !1, line: 2769, column: 7)
!5670 = !DILocation(line: 2770, column: 13, scope: !5668)
!5671 = !DILocation(line: 2770, column: 46, scope: !5668)
!5672 = !DILocation(line: 2770, column: 13, scope: !5669)
!5673 = !DILocation(line: 2772, column: 28, scope: !5674)
!5674 = distinct !DILexicalBlock(scope: !5668, file: !1, line: 2771, column: 11)
!5675 = !DILocation(line: 2772, column: 33, scope: !5674)
!5676 = !DILocation(line: 2772, column: 13, scope: !5674)
!5677 = !DILocation(line: 2773, column: 73, scope: !5674)
!5678 = !DILocation(line: 2773, column: 58, scope: !5674)
!5679 = !DILocation(line: 2774, column: 30, scope: !5674)
!5680 = !DILocation(line: 2773, column: 53, scope: !5674)
!5681 = !DILocation(line: 2773, column: 43, scope: !5674)
!5682 = !DILocation(line: 2773, column: 13, scope: !5674)
!5683 = !DILocation(line: 2773, column: 29, scope: !5674)
!5684 = !DILocation(line: 2773, column: 33, scope: !5674)
!5685 = !DILocation(line: 2773, column: 41, scope: !5674)
!5686 = !DILocation(line: 2773, column: 42, scope: !5674)
!5687 = !DILocation(line: 2775, column: 28, scope: !5674)
!5688 = !DILocation(line: 2775, column: 33, scope: !5674)
!5689 = !DILocation(line: 2775, column: 13, scope: !5674)
!5690 = !DILocation(line: 2776, column: 18, scope: !5691)
!5691 = distinct !DILexicalBlock(scope: !5674, file: !1, line: 2776, column: 17)
!5692 = !DILocation(line: 2776, column: 17, scope: !5691)
!5693 = !DILocation(line: 2776, column: 24, scope: !5691)
!5694 = !DILocation(line: 2776, column: 17, scope: !5674)
!5695 = !DILocation(line: 2777, column: 30, scope: !5691)
!5696 = !DILocation(line: 2777, column: 35, scope: !5691)
!5697 = !DILocation(line: 2777, column: 15, scope: !5691)
!5698 = !DILocation(line: 2778, column: 73, scope: !5674)
!5699 = !DILocation(line: 2778, column: 58, scope: !5674)
!5700 = !DILocation(line: 2779, column: 30, scope: !5674)
!5701 = !DILocation(line: 2778, column: 53, scope: !5674)
!5702 = !DILocation(line: 2778, column: 43, scope: !5674)
!5703 = !DILocation(line: 2778, column: 13, scope: !5674)
!5704 = !DILocation(line: 2778, column: 29, scope: !5674)
!5705 = !DILocation(line: 2778, column: 33, scope: !5674)
!5706 = !DILocation(line: 2778, column: 41, scope: !5674)
!5707 = !DILocation(line: 2778, column: 42, scope: !5674)
!5708 = !DILocation(line: 2780, column: 28, scope: !5674)
!5709 = !DILocation(line: 2780, column: 33, scope: !5674)
!5710 = !DILocation(line: 2780, column: 13, scope: !5674)
!5711 = !DILocation(line: 2781, column: 18, scope: !5712)
!5712 = distinct !DILexicalBlock(scope: !5674, file: !1, line: 2781, column: 17)
!5713 = !DILocation(line: 2781, column: 17, scope: !5712)
!5714 = !DILocation(line: 2781, column: 24, scope: !5712)
!5715 = !DILocation(line: 2781, column: 17, scope: !5674)
!5716 = !DILocation(line: 2782, column: 30, scope: !5712)
!5717 = !DILocation(line: 2782, column: 35, scope: !5712)
!5718 = !DILocation(line: 2782, column: 15, scope: !5712)
!5719 = !DILocation(line: 2784, column: 15, scope: !5674)
!5720 = !DILocation(line: 2783, column: 62, scope: !5674)
!5721 = !DILocation(line: 2784, column: 36, scope: !5674)
!5722 = !DILocation(line: 2783, column: 56, scope: !5674)
!5723 = !DILocation(line: 2783, column: 47, scope: !5674)
!5724 = !DILocation(line: 2783, column: 13, scope: !5674)
!5725 = !DILocation(line: 2783, column: 29, scope: !5674)
!5726 = !DILocation(line: 2783, column: 33, scope: !5674)
!5727 = !DILocation(line: 2783, column: 41, scope: !5674)
!5728 = !DILocation(line: 2783, column: 46, scope: !5674)
!5729 = !DILocation(line: 2785, column: 28, scope: !5674)
!5730 = !DILocation(line: 2785, column: 33, scope: !5674)
!5731 = !DILocation(line: 2785, column: 13, scope: !5674)
!5732 = !DILocation(line: 2786, column: 18, scope: !5733)
!5733 = distinct !DILexicalBlock(scope: !5674, file: !1, line: 2786, column: 17)
!5734 = !DILocation(line: 2786, column: 17, scope: !5733)
!5735 = !DILocation(line: 2786, column: 24, scope: !5733)
!5736 = !DILocation(line: 2786, column: 17, scope: !5674)
!5737 = !DILocation(line: 2787, column: 30, scope: !5733)
!5738 = !DILocation(line: 2787, column: 35, scope: !5733)
!5739 = !DILocation(line: 2787, column: 15, scope: !5733)
!5740 = !DILocation(line: 2789, column: 15, scope: !5674)
!5741 = !DILocation(line: 2788, column: 63, scope: !5674)
!5742 = !DILocation(line: 2789, column: 36, scope: !5674)
!5743 = !DILocation(line: 2788, column: 57, scope: !5674)
!5744 = !DILocation(line: 2788, column: 48, scope: !5674)
!5745 = !DILocation(line: 2788, column: 13, scope: !5674)
!5746 = !DILocation(line: 2788, column: 29, scope: !5674)
!5747 = !DILocation(line: 2788, column: 33, scope: !5674)
!5748 = !DILocation(line: 2788, column: 41, scope: !5674)
!5749 = !DILocation(line: 2788, column: 47, scope: !5674)
!5750 = !DILocation(line: 2790, column: 13, scope: !5674)
!5751 = !DILocation(line: 2792, column: 15, scope: !5669)
!5752 = !DILocation(line: 2793, column: 9, scope: !5669)
!5753 = !DILocation(line: 2797, column: 15, scope: !5754)
!5754 = distinct !DILexicalBlock(scope: !3541, file: !1, line: 2796, column: 7)
!5755 = !DILocation(line: 2798, column: 9, scope: !5754)
!5756 = !DILocation(line: 2801, column: 9, scope: !5757)
!5757 = distinct !DILexicalBlock(scope: !3500, file: !1, line: 2801, column: 9)
!5758 = !DILocation(line: 2801, column: 16, scope: !5757)
!5759 = !DILocation(line: 2801, column: 9, scope: !3500)
!5760 = !DILocation(line: 2802, column: 7, scope: !5757)
!5761 = !DILocation(line: 2803, column: 17, scope: !5762)
!5762 = distinct !DILexicalBlock(scope: !3500, file: !1, line: 2803, column: 9)
!5763 = !DILocation(line: 2803, column: 20, scope: !5762)
!5764 = !DILocation(line: 2803, column: 28, scope: !5762)
!5765 = !DILocation(line: 2803, column: 39, scope: !5762)
!5766 = !DILocation(line: 2803, column: 42, scope: !5762)
!5767 = !DILocation(line: 2803, column: 50, scope: !5762)
!5768 = !DILocation(line: 2803, column: 61, scope: !5762)
!5769 = !DILocation(line: 2803, column: 64, scope: !5762)
!5770 = !DILocation(line: 2803, column: 72, scope: !5762)
!5771 = !DILocation(line: 2804, column: 17, scope: !5762)
!5772 = !DILocation(line: 2804, column: 20, scope: !5762)
!5773 = !DILocation(line: 2804, column: 28, scope: !5762)
!5774 = !DILocation(line: 2804, column: 39, scope: !5762)
!5775 = !DILocation(line: 2804, column: 42, scope: !5762)
!5776 = !DILocation(line: 2804, column: 50, scope: !5762)
!5777 = !DILocation(line: 2804, column: 61, scope: !5762)
!5778 = !DILocation(line: 2804, column: 64, scope: !5762)
!5779 = !DILocation(line: 2803, column: 9, scope: !3500)
!5780 = !DILocation(line: 2806, column: 47, scope: !5781)
!5781 = distinct !DILexicalBlock(scope: !5762, file: !1, line: 2805, column: 7)
!5782 = !DILocation(line: 2806, column: 57, scope: !5781)
!5783 = !DILocation(line: 2806, column: 49, scope: !5781)
!5784 = !DILocation(line: 2806, column: 68, scope: !5781)
!5785 = !DILocation(line: 2806, column: 78, scope: !5781)
!5786 = !DILocation(line: 2806, column: 70, scope: !5781)
!5787 = !DILocation(line: 2806, column: 59, scope: !5781)
!5788 = !DILocation(line: 2806, column: 9, scope: !5781)
!5789 = !DILocation(line: 2806, column: 25, scope: !5781)
!5790 = !DILocation(line: 2806, column: 29, scope: !5781)
!5791 = !DILocation(line: 2806, column: 36, scope: !5781)
!5792 = !DILocation(line: 2806, column: 38, scope: !5781)
!5793 = !DILocation(line: 2807, column: 47, scope: !5781)
!5794 = !DILocation(line: 2807, column: 57, scope: !5781)
!5795 = !DILocation(line: 2807, column: 49, scope: !5781)
!5796 = !DILocation(line: 2807, column: 68, scope: !5781)
!5797 = !DILocation(line: 2807, column: 78, scope: !5781)
!5798 = !DILocation(line: 2807, column: 70, scope: !5781)
!5799 = !DILocation(line: 2807, column: 59, scope: !5781)
!5800 = !DILocation(line: 2807, column: 9, scope: !5781)
!5801 = !DILocation(line: 2807, column: 25, scope: !5781)
!5802 = !DILocation(line: 2807, column: 29, scope: !5781)
!5803 = !DILocation(line: 2807, column: 36, scope: !5781)
!5804 = !DILocation(line: 2807, column: 38, scope: !5781)
!5805 = !DILocation(line: 2808, column: 47, scope: !5781)
!5806 = !DILocation(line: 2808, column: 57, scope: !5781)
!5807 = !DILocation(line: 2808, column: 49, scope: !5781)
!5808 = !DILocation(line: 2808, column: 68, scope: !5781)
!5809 = !DILocation(line: 2808, column: 78, scope: !5781)
!5810 = !DILocation(line: 2808, column: 70, scope: !5781)
!5811 = !DILocation(line: 2808, column: 59, scope: !5781)
!5812 = !DILocation(line: 2808, column: 9, scope: !5781)
!5813 = !DILocation(line: 2808, column: 25, scope: !5781)
!5814 = !DILocation(line: 2808, column: 29, scope: !5781)
!5815 = !DILocation(line: 2808, column: 36, scope: !5781)
!5816 = !DILocation(line: 2808, column: 38, scope: !5781)
!5817 = !DILocation(line: 2809, column: 47, scope: !5781)
!5818 = !DILocation(line: 2809, column: 57, scope: !5781)
!5819 = !DILocation(line: 2809, column: 49, scope: !5781)
!5820 = !DILocation(line: 2809, column: 68, scope: !5781)
!5821 = !DILocation(line: 2809, column: 78, scope: !5781)
!5822 = !DILocation(line: 2809, column: 70, scope: !5781)
!5823 = !DILocation(line: 2809, column: 59, scope: !5781)
!5824 = !DILocation(line: 2809, column: 9, scope: !5781)
!5825 = !DILocation(line: 2809, column: 25, scope: !5781)
!5826 = !DILocation(line: 2809, column: 29, scope: !5781)
!5827 = !DILocation(line: 2809, column: 36, scope: !5781)
!5828 = !DILocation(line: 2809, column: 38, scope: !5781)
!5829 = !DILocation(line: 2810, column: 47, scope: !5781)
!5830 = !DILocation(line: 2810, column: 57, scope: !5781)
!5831 = !DILocation(line: 2810, column: 49, scope: !5781)
!5832 = !DILocation(line: 2810, column: 68, scope: !5781)
!5833 = !DILocation(line: 2810, column: 78, scope: !5781)
!5834 = !DILocation(line: 2810, column: 70, scope: !5781)
!5835 = !DILocation(line: 2810, column: 59, scope: !5781)
!5836 = !DILocation(line: 2811, column: 19, scope: !5781)
!5837 = !DILocation(line: 2810, column: 80, scope: !5781)
!5838 = !DILocation(line: 2810, column: 9, scope: !5781)
!5839 = !DILocation(line: 2810, column: 25, scope: !5781)
!5840 = !DILocation(line: 2810, column: 29, scope: !5781)
!5841 = !DILocation(line: 2810, column: 36, scope: !5781)
!5842 = !DILocation(line: 2810, column: 38, scope: !5781)
!5843 = !DILocation(line: 2812, column: 47, scope: !5781)
!5844 = !DILocation(line: 2812, column: 57, scope: !5781)
!5845 = !DILocation(line: 2812, column: 49, scope: !5781)
!5846 = !DILocation(line: 2812, column: 68, scope: !5781)
!5847 = !DILocation(line: 2812, column: 78, scope: !5781)
!5848 = !DILocation(line: 2812, column: 70, scope: !5781)
!5849 = !DILocation(line: 2812, column: 59, scope: !5781)
!5850 = !DILocation(line: 2813, column: 19, scope: !5781)
!5851 = !DILocation(line: 2812, column: 80, scope: !5781)
!5852 = !DILocation(line: 2812, column: 9, scope: !5781)
!5853 = !DILocation(line: 2812, column: 25, scope: !5781)
!5854 = !DILocation(line: 2812, column: 29, scope: !5781)
!5855 = !DILocation(line: 2812, column: 36, scope: !5781)
!5856 = !DILocation(line: 2812, column: 38, scope: !5781)
!5857 = !DILocation(line: 2814, column: 7, scope: !5781)
!5858 = !DILocation(line: 2815, column: 9, scope: !5859)
!5859 = distinct !DILexicalBlock(scope: !3500, file: !1, line: 2815, column: 9)
!5860 = !DILocation(line: 2815, column: 24, scope: !5859)
!5861 = !DILocation(line: 2815, column: 9, scope: !3500)
!5862 = !DILocation(line: 2817, column: 13, scope: !5863)
!5863 = distinct !DILexicalBlock(scope: !5864, file: !1, line: 2817, column: 13)
!5864 = distinct !DILexicalBlock(scope: !5859, file: !1, line: 2816, column: 7)
!5865 = !DILocation(line: 2817, column: 20, scope: !5863)
!5866 = !DILocation(line: 2817, column: 26, scope: !5863)
!5867 = !DILocation(line: 2817, column: 13, scope: !5864)
!5868 = !DILocation(line: 2819, column: 20, scope: !5863)
!5869 = !DILocation(line: 2819, column: 22, scope: !5863)
!5870 = !DILocation(line: 2819, column: 21, scope: !5863)
!5871 = !DILocation(line: 2819, column: 13, scope: !5863)
!5872 = !DILocation(line: 2819, column: 25, scope: !5863)
!5873 = !DILocation(line: 2818, column: 18, scope: !5863)
!5874 = !DILocation(line: 2818, column: 11, scope: !5863)
!5875 = !DILocation(line: 2820, column: 9, scope: !5864)
!5876 = !DILocation(line: 2825, column: 6, scope: !3500)
!5877 = !DILocation(line: 2826, column: 6, scope: !3500)
!5878 = !DILocation(line: 2827, column: 5, scope: !3500)
!5879 = !DILocation(line: 2827, column: 23, scope: !3500)
!5880 = !DILocation(line: 2827, column: 29, scope: !3500)
!5881 = !DILocation(line: 2827, column: 30, scope: !3500)
!5882 = !DILocation(line: 2828, column: 5, scope: !3500)
!5883 = !DILocation(line: 2828, column: 23, scope: !3500)
!5884 = !DILocation(line: 2828, column: 29, scope: !3500)
!5885 = !DILocation(line: 2828, column: 30, scope: !3500)
!5886 = !DILocation(line: 2829, column: 11, scope: !5887)
!5887 = distinct !DILexicalBlock(scope: !3500, file: !1, line: 2829, column: 5)
!5888 = !DILocation(line: 2829, column: 10, scope: !5887)
!5889 = !DILocation(line: 2829, column: 16, scope: !5890)
!5890 = distinct !DILexicalBlock(scope: !5887, file: !1, line: 2829, column: 5)
!5891 = !DILocation(line: 2829, column: 15, scope: !5890)
!5892 = !DILocation(line: 2829, column: 18, scope: !5890)
!5893 = !DILocation(line: 2829, column: 5, scope: !5887)
!5894 = !DILocation(line: 2834, column: 19, scope: !5895)
!5895 = distinct !DILexicalBlock(scope: !5896, file: !1, line: 2834, column: 11)
!5896 = distinct !DILexicalBlock(scope: !5890, file: !1, line: 2830, column: 5)
!5897 = !DILocation(line: 2834, column: 11, scope: !5895)
!5898 = !DILocation(line: 2834, column: 22, scope: !5895)
!5899 = !DILocation(line: 2834, column: 11, scope: !5896)
!5900 = !DILocation(line: 2835, column: 9, scope: !5895)
!5901 = !DILocation(line: 2836, column: 22, scope: !5896)
!5902 = !DILocation(line: 2836, column: 27, scope: !5896)
!5903 = !DILocation(line: 2836, column: 7, scope: !5896)
!5904 = !DILocation(line: 2837, column: 30, scope: !5896)
!5905 = !DILocation(line: 2837, column: 15, scope: !5896)
!5906 = !DILocation(line: 2837, column: 13, scope: !5896)
!5907 = !DILocation(line: 2837, column: 14, scope: !5896)
!5908 = !DILocation(line: 2838, column: 22, scope: !5896)
!5909 = !DILocation(line: 2838, column: 27, scope: !5896)
!5910 = !DILocation(line: 2838, column: 7, scope: !5896)
!5911 = !DILocation(line: 2839, column: 12, scope: !5912)
!5912 = distinct !DILexicalBlock(scope: !5896, file: !1, line: 2839, column: 11)
!5913 = !DILocation(line: 2839, column: 11, scope: !5912)
!5914 = !DILocation(line: 2839, column: 18, scope: !5912)
!5915 = !DILocation(line: 2839, column: 11, scope: !5896)
!5916 = !DILocation(line: 2840, column: 24, scope: !5912)
!5917 = !DILocation(line: 2840, column: 29, scope: !5912)
!5918 = !DILocation(line: 2840, column: 9, scope: !5912)
!5919 = !DILocation(line: 2841, column: 30, scope: !5896)
!5920 = !DILocation(line: 2841, column: 15, scope: !5896)
!5921 = !DILocation(line: 2841, column: 13, scope: !5896)
!5922 = !DILocation(line: 2841, column: 14, scope: !5896)
!5923 = !DILocation(line: 2842, column: 22, scope: !5896)
!5924 = !DILocation(line: 2842, column: 45, scope: !5896)
!5925 = !DILocation(line: 2842, column: 7, scope: !5896)
!5926 = !DILocation(line: 2843, column: 12, scope: !5927)
!5927 = distinct !DILexicalBlock(scope: !5896, file: !1, line: 2843, column: 11)
!5928 = !DILocation(line: 2843, column: 11, scope: !5927)
!5929 = !DILocation(line: 2843, column: 18, scope: !5927)
!5930 = !DILocation(line: 2843, column: 11, scope: !5896)
!5931 = !DILocation(line: 2844, column: 24, scope: !5927)
!5932 = !DILocation(line: 2844, column: 29, scope: !5927)
!5933 = !DILocation(line: 2844, column: 9, scope: !5927)
!5934 = !DILocation(line: 2845, column: 35, scope: !5896)
!5935 = !DILocation(line: 2845, column: 7, scope: !5896)
!5936 = !DILocation(line: 2845, column: 22, scope: !5896)
!5937 = !DILocation(line: 2845, column: 25, scope: !5896)
!5938 = !DILocation(line: 2845, column: 34, scope: !5896)
!5939 = !DILocation(line: 2846, column: 7, scope: !5896)
!5940 = !DILocation(line: 2846, column: 22, scope: !5896)
!5941 = !DILocation(line: 2846, column: 25, scope: !5896)
!5942 = !DILocation(line: 2846, column: 31, scope: !5896)
!5943 = !DILocation(line: 2847, column: 7, scope: !5896)
!5944 = !DILocation(line: 2847, column: 22, scope: !5896)
!5945 = !DILocation(line: 2847, column: 25, scope: !5896)
!5946 = !DILocation(line: 2847, column: 36, scope: !5896)
!5947 = !DILocation(line: 2848, column: 7, scope: !5896)
!5948 = !DILocation(line: 2848, column: 22, scope: !5896)
!5949 = !DILocation(line: 2848, column: 25, scope: !5896)
!5950 = !DILocation(line: 2848, column: 31, scope: !5896)
!5951 = !DILocation(line: 2849, column: 8, scope: !5896)
!5952 = !DILocation(line: 2850, column: 11, scope: !5953)
!5953 = distinct !DILexicalBlock(scope: !5896, file: !1, line: 2850, column: 11)
!5954 = !DILocation(line: 2850, column: 25, scope: !5953)
!5955 = !DILocation(line: 2850, column: 13, scope: !5953)
!5956 = !DILocation(line: 2850, column: 11, scope: !5896)
!5957 = !DILocation(line: 2851, column: 9, scope: !5953)
!5958 = !DILocation(line: 2852, column: 20, scope: !5896)
!5959 = !DILocation(line: 2853, column: 60, scope: !5896)
!5960 = !DILocation(line: 2854, column: 18, scope: !5896)
!5961 = !DILocation(line: 2853, column: 40, scope: !5896)
!5962 = !DILocation(line: 2853, column: 22, scope: !5896)
!5963 = !DILocation(line: 2853, column: 21, scope: !5896)
!5964 = !DILocation(line: 2855, column: 11, scope: !5965)
!5965 = distinct !DILexicalBlock(scope: !5896, file: !1, line: 2855, column: 11)
!5966 = !DILocation(line: 2855, column: 26, scope: !5965)
!5967 = !DILocation(line: 2855, column: 11, scope: !5896)
!5968 = !DILocation(line: 2857, column: 40, scope: !5969)
!5969 = distinct !DILexicalBlock(scope: !5965, file: !1, line: 2856, column: 9)
!5970 = !DILocation(line: 2857, column: 47, scope: !5969)
!5971 = !DILocation(line: 2858, column: 64, scope: !5969)
!5972 = !DILocation(line: 2858, column: 71, scope: !5969)
!5973 = !DILocation(line: 2857, column: 18, scope: !5969)
!5974 = !DILocation(line: 2859, column: 11, scope: !5969)
!5975 = !DILocation(line: 2861, column: 5, scope: !5896)
!5976 = !DILocation(line: 2829, column: 28, scope: !5890)
!5977 = !DILocation(line: 2829, column: 5, scope: !5890)
!5978 = distinct !{!5978, !5893, !5979}
!5979 = !DILocation(line: 2861, column: 5, scope: !5887)
!5980 = !DILocation(line: 2862, column: 33, scope: !3500)
!5981 = !DILocation(line: 2862, column: 5, scope: !3500)
!5982 = !DILocation(line: 2862, column: 20, scope: !3500)
!5983 = !DILocation(line: 2862, column: 23, scope: !3500)
!5984 = !DILocation(line: 2862, column: 32, scope: !3500)
!5985 = !DILocation(line: 2863, column: 44, scope: !3500)
!5986 = !DILocation(line: 2863, column: 5, scope: !3500)
!5987 = !DILocation(line: 2863, column: 20, scope: !3500)
!5988 = !DILocation(line: 2863, column: 23, scope: !3500)
!5989 = !DILocation(line: 2863, column: 34, scope: !3500)
!5990 = !DILocation(line: 2864, column: 5, scope: !3500)
!5991 = !DILocation(line: 2864, column: 20, scope: !3500)
!5992 = !DILocation(line: 2864, column: 23, scope: !3500)
!5993 = !DILocation(line: 2864, column: 29, scope: !3500)
!5994 = !DILocation(line: 2865, column: 5, scope: !3500)
!5995 = !DILocation(line: 2865, column: 20, scope: !3500)
!5996 = !DILocation(line: 2865, column: 23, scope: !3500)
!5997 = !DILocation(line: 2865, column: 27, scope: !3500)
!5998 = !DILocation(line: 2869, column: 15, scope: !3500)
!5999 = !DILocation(line: 2869, column: 30, scope: !3500)
!6000 = !DILocation(line: 2869, column: 33, scope: !3500)
!6001 = !DILocation(line: 2869, column: 39, scope: !3500)
!6002 = !DILocation(line: 2869, column: 12, scope: !3500)
!6003 = !DILocation(line: 2869, column: 14, scope: !3500)
!6004 = !DILocation(line: 2870, column: 15, scope: !3500)
!6005 = !DILocation(line: 2870, column: 30, scope: !3500)
!6006 = !DILocation(line: 2870, column: 33, scope: !3500)
!6007 = !DILocation(line: 2870, column: 39, scope: !3500)
!6008 = !DILocation(line: 2870, column: 12, scope: !3500)
!6009 = !DILocation(line: 2870, column: 14, scope: !3500)
!6010 = !DILocation(line: 2871, column: 15, scope: !3500)
!6011 = !DILocation(line: 2871, column: 30, scope: !3500)
!6012 = !DILocation(line: 2871, column: 33, scope: !3500)
!6013 = !DILocation(line: 2871, column: 39, scope: !3500)
!6014 = !DILocation(line: 2871, column: 12, scope: !3500)
!6015 = !DILocation(line: 2871, column: 14, scope: !3500)
!6016 = !DILocation(line: 2872, column: 15, scope: !3500)
!6017 = !DILocation(line: 2872, column: 30, scope: !3500)
!6018 = !DILocation(line: 2872, column: 33, scope: !3500)
!6019 = !DILocation(line: 2872, column: 39, scope: !3500)
!6020 = !DILocation(line: 2872, column: 12, scope: !3500)
!6021 = !DILocation(line: 2872, column: 14, scope: !3500)
!6022 = !DILocation(line: 2873, column: 11, scope: !6023)
!6023 = distinct !DILexicalBlock(scope: !3500, file: !1, line: 2873, column: 5)
!6024 = !DILocation(line: 2873, column: 10, scope: !6023)
!6025 = !DILocation(line: 2873, column: 15, scope: !6026)
!6026 = distinct !DILexicalBlock(scope: !6023, file: !1, line: 2873, column: 5)
!6027 = !DILocation(line: 2873, column: 29, scope: !6026)
!6028 = !DILocation(line: 2873, column: 44, scope: !6026)
!6029 = !DILocation(line: 2873, column: 47, scope: !6026)
!6030 = !DILocation(line: 2873, column: 17, scope: !6026)
!6031 = !DILocation(line: 2873, column: 5, scope: !6023)
!6032 = !DILocation(line: 2875, column: 13, scope: !6033)
!6033 = distinct !DILexicalBlock(scope: !6026, file: !1, line: 2874, column: 5)
!6034 = !DILocation(line: 2875, column: 28, scope: !6033)
!6035 = !DILocation(line: 2875, column: 30, scope: !6033)
!6036 = !DILocation(line: 2875, column: 29, scope: !6033)
!6037 = !DILocation(line: 2875, column: 33, scope: !6033)
!6038 = !DILocation(line: 2876, column: 17, scope: !6039)
!6039 = distinct !DILexicalBlock(scope: !6033, file: !1, line: 2876, column: 11)
!6040 = !DILocation(line: 2876, column: 28, scope: !6039)
!6041 = !DILocation(line: 2876, column: 19, scope: !6039)
!6042 = !DILocation(line: 2876, column: 11, scope: !6033)
!6043 = !DILocation(line: 2877, column: 25, scope: !6039)
!6044 = !DILocation(line: 2877, column: 16, scope: !6039)
!6045 = !DILocation(line: 2877, column: 18, scope: !6039)
!6046 = !DILocation(line: 2877, column: 9, scope: !6039)
!6047 = !DILocation(line: 2878, column: 17, scope: !6048)
!6048 = distinct !DILexicalBlock(scope: !6033, file: !1, line: 2878, column: 11)
!6049 = !DILocation(line: 2878, column: 28, scope: !6048)
!6050 = !DILocation(line: 2878, column: 19, scope: !6048)
!6051 = !DILocation(line: 2878, column: 11, scope: !6033)
!6052 = !DILocation(line: 2879, column: 25, scope: !6048)
!6053 = !DILocation(line: 2879, column: 16, scope: !6048)
!6054 = !DILocation(line: 2879, column: 18, scope: !6048)
!6055 = !DILocation(line: 2879, column: 9, scope: !6048)
!6056 = !DILocation(line: 2880, column: 17, scope: !6057)
!6057 = distinct !DILexicalBlock(scope: !6033, file: !1, line: 2880, column: 11)
!6058 = !DILocation(line: 2880, column: 28, scope: !6057)
!6059 = !DILocation(line: 2880, column: 19, scope: !6057)
!6060 = !DILocation(line: 2880, column: 11, scope: !6033)
!6061 = !DILocation(line: 2881, column: 25, scope: !6057)
!6062 = !DILocation(line: 2881, column: 16, scope: !6057)
!6063 = !DILocation(line: 2881, column: 18, scope: !6057)
!6064 = !DILocation(line: 2881, column: 9, scope: !6057)
!6065 = !DILocation(line: 2882, column: 17, scope: !6066)
!6066 = distinct !DILexicalBlock(scope: !6033, file: !1, line: 2882, column: 11)
!6067 = !DILocation(line: 2882, column: 28, scope: !6066)
!6068 = !DILocation(line: 2882, column: 19, scope: !6066)
!6069 = !DILocation(line: 2882, column: 11, scope: !6033)
!6070 = !DILocation(line: 2883, column: 25, scope: !6066)
!6071 = !DILocation(line: 2883, column: 16, scope: !6066)
!6072 = !DILocation(line: 2883, column: 18, scope: !6066)
!6073 = !DILocation(line: 2883, column: 9, scope: !6066)
!6074 = !DILocation(line: 2884, column: 5, scope: !6033)
!6075 = !DILocation(line: 2873, column: 61, scope: !6026)
!6076 = !DILocation(line: 2873, column: 5, scope: !6026)
!6077 = distinct !{!6077, !6031, !6078}
!6078 = !DILocation(line: 2884, column: 5, scope: !6023)
!6079 = !DILocation(line: 2888, column: 12, scope: !3500)
!6080 = !DILocation(line: 2888, column: 27, scope: !3500)
!6081 = !DILocation(line: 2888, column: 30, scope: !3500)
!6082 = !DILocation(line: 2888, column: 11, scope: !3500)
!6083 = !DILocation(line: 2889, column: 13, scope: !3500)
!6084 = !DILocation(line: 2889, column: 5, scope: !3500)
!6085 = !DILocation(line: 2893, column: 15, scope: !6086)
!6086 = distinct !DILexicalBlock(scope: !6087, file: !1, line: 2892, column: 7)
!6087 = distinct !DILexicalBlock(scope: !3500, file: !1, line: 2890, column: 5)
!6088 = !DILocation(line: 2894, column: 9, scope: !6086)
!6089 = !DILocation(line: 2898, column: 15, scope: !6090)
!6090 = distinct !DILexicalBlock(scope: !6087, file: !1, line: 2897, column: 7)
!6091 = !DILocation(line: 2899, column: 9, scope: !6090)
!6092 = !DILocation(line: 2903, column: 13, scope: !6093)
!6093 = distinct !DILexicalBlock(scope: !6094, file: !1, line: 2903, column: 13)
!6094 = distinct !DILexicalBlock(scope: !6087, file: !1, line: 2902, column: 7)
!6095 = !DILocation(line: 2903, column: 28, scope: !6093)
!6096 = !DILocation(line: 2903, column: 31, scope: !6093)
!6097 = !DILocation(line: 2903, column: 43, scope: !6093)
!6098 = !DILocation(line: 2903, column: 13, scope: !6094)
!6099 = !DILocation(line: 2904, column: 40, scope: !6093)
!6100 = !DILocation(line: 2904, column: 47, scope: !6093)
!6101 = !DILocation(line: 2905, column: 57, scope: !6093)
!6102 = !DILocation(line: 2904, column: 18, scope: !6093)
!6103 = !DILocation(line: 2904, column: 11, scope: !6093)
!6104 = !DILocation(line: 2906, column: 30, scope: !6094)
!6105 = !DILocation(line: 2906, column: 45, scope: !6094)
!6106 = !DILocation(line: 2906, column: 48, scope: !6094)
!6107 = !DILocation(line: 2906, column: 29, scope: !6094)
!6108 = !DILocation(line: 2906, column: 15, scope: !6094)
!6109 = !DILocation(line: 2907, column: 9, scope: !6094)
!6110 = !DILocalVariable(name: "s", scope: !6111, file: !1, line: 2912, type: !704)
!6111 = distinct !DILexicalBlock(scope: !6087, file: !1, line: 2910, column: 7)
!6112 = !DILocation(line: 2912, column: 12, scope: !6111)
!6113 = !DILocalVariable(name: "t", scope: !6111, file: !1, line: 2913, type: !704)
!6114 = !DILocation(line: 2913, column: 12, scope: !6111)
!6115 = !DILocation(line: 2915, column: 24, scope: !6111)
!6116 = !DILocation(line: 2915, column: 29, scope: !6111)
!6117 = !DILocation(line: 2915, column: 9, scope: !6111)
!6118 = !DILocation(line: 2916, column: 15, scope: !6111)
!6119 = !DILocation(line: 2917, column: 11, scope: !6111)
!6120 = !DILocation(line: 2917, column: 10, scope: !6111)
!6121 = !DILocation(line: 2918, column: 16, scope: !6122)
!6122 = distinct !DILexicalBlock(scope: !6111, file: !1, line: 2918, column: 9)
!6123 = !DILocation(line: 2918, column: 15, scope: !6122)
!6124 = !DILocation(line: 2918, column: 14, scope: !6122)
!6125 = !DILocation(line: 2918, column: 24, scope: !6126)
!6126 = distinct !DILexicalBlock(scope: !6122, file: !1, line: 2918, column: 9)
!6127 = !DILocation(line: 2918, column: 23, scope: !6126)
!6128 = !DILocation(line: 2918, column: 26, scope: !6126)
!6129 = !DILocation(line: 2918, column: 9, scope: !6122)
!6130 = !DILocalVariable(name: "value", scope: !6131, file: !1, line: 2921, type: !728)
!6131 = distinct !DILexicalBlock(scope: !6126, file: !1, line: 2919, column: 9)
!6132 = !DILocation(line: 2921, column: 13, scope: !6131)
!6133 = !DILocation(line: 2923, column: 32, scope: !6131)
!6134 = !DILocation(line: 2923, column: 17, scope: !6131)
!6135 = !DILocation(line: 2923, column: 16, scope: !6131)
!6136 = !DILocation(line: 2924, column: 18, scope: !6131)
!6137 = !DILocation(line: 2925, column: 15, scope: !6138)
!6138 = distinct !DILexicalBlock(scope: !6131, file: !1, line: 2925, column: 15)
!6139 = !DILocation(line: 2925, column: 20, scope: !6138)
!6140 = !DILocation(line: 2925, column: 17, scope: !6138)
!6141 = !DILocation(line: 2925, column: 15, scope: !6131)
!6142 = !DILocation(line: 2927, column: 16, scope: !6143)
!6143 = distinct !DILexicalBlock(scope: !6138, file: !1, line: 2926, column: 13)
!6144 = !DILocation(line: 2928, column: 15, scope: !6143)
!6145 = !DILocation(line: 2930, column: 17, scope: !6131)
!6146 = !DILocation(line: 2931, column: 9, scope: !6131)
!6147 = !DILocation(line: 2918, column: 37, scope: !6126)
!6148 = !DILocation(line: 2918, column: 36, scope: !6126)
!6149 = !DILocation(line: 2918, column: 9, scope: !6126)
!6150 = distinct !{!6150, !6129, !6151}
!6151 = !DILocation(line: 2931, column: 9, scope: !6122)
!6152 = !DILocation(line: 2932, column: 16, scope: !6111)
!6153 = !DILocation(line: 2932, column: 22, scope: !6111)
!6154 = !DILocation(line: 2932, column: 36, scope: !6111)
!6155 = !DILocation(line: 2932, column: 15, scope: !6111)
!6156 = !DILocation(line: 2933, column: 9, scope: !6111)
!6157 = !DILocalVariable(name: "alpha", scope: !6158, file: !1, line: 2940, type: !728)
!6158 = distinct !DILexicalBlock(scope: !6087, file: !1, line: 2938, column: 7)
!6159 = !DILocation(line: 2940, column: 11, scope: !6158)
!6160 = !DILocalVariable(name: "beta", scope: !6158, file: !1, line: 2941, type: !728)
!6161 = !DILocation(line: 2941, column: 11, scope: !6158)
!6162 = !DILocalVariable(name: "radius", scope: !6158, file: !1, line: 2942, type: !728)
!6163 = !DILocation(line: 2942, column: 11, scope: !6158)
!6164 = !DILocation(line: 2944, column: 22, scope: !6158)
!6165 = !DILocation(line: 2944, column: 32, scope: !6158)
!6166 = !DILocation(line: 2944, column: 24, scope: !6158)
!6167 = !DILocation(line: 2944, column: 14, scope: !6158)
!6168 = !DILocation(line: 2945, column: 21, scope: !6158)
!6169 = !DILocation(line: 2945, column: 31, scope: !6158)
!6170 = !DILocation(line: 2945, column: 23, scope: !6158)
!6171 = !DILocation(line: 2945, column: 13, scope: !6158)
!6172 = !DILocation(line: 2946, column: 31, scope: !6158)
!6173 = !DILocation(line: 2946, column: 46, scope: !6158)
!6174 = !DILocation(line: 2946, column: 16, scope: !6158)
!6175 = !DILocation(line: 2946, column: 15, scope: !6158)
!6176 = !DILocation(line: 2947, column: 51, scope: !6158)
!6177 = !DILocation(line: 2947, column: 50, scope: !6158)
!6178 = !DILocation(line: 2947, column: 28, scope: !6158)
!6179 = !DILocation(line: 2947, column: 19, scope: !6158)
!6180 = !DILocation(line: 2947, column: 17, scope: !6158)
!6181 = !DILocation(line: 2947, column: 59, scope: !6158)
!6182 = !DILocation(line: 2947, column: 75, scope: !6158)
!6183 = !DILocation(line: 2947, column: 15, scope: !6158)
!6184 = !DILocation(line: 2948, column: 9, scope: !6158)
!6185 = !DILocation(line: 2951, column: 9, scope: !6087)
!6186 = !DILocation(line: 2953, column: 19, scope: !6187)
!6187 = distinct !DILexicalBlock(scope: !3500, file: !1, line: 2953, column: 9)
!6188 = !DILocation(line: 2953, column: 21, scope: !6187)
!6189 = !DILocation(line: 2953, column: 20, scope: !6187)
!6190 = !DILocation(line: 2953, column: 32, scope: !6187)
!6191 = !DILocation(line: 2953, column: 29, scope: !6187)
!6192 = !DILocation(line: 2953, column: 9, scope: !3500)
!6193 = !DILocation(line: 2958, column: 24, scope: !6194)
!6194 = distinct !DILexicalBlock(scope: !6187, file: !1, line: 2954, column: 7)
!6195 = !DILocation(line: 2958, column: 30, scope: !6194)
!6196 = !DILocation(line: 2958, column: 22, scope: !6194)
!6197 = !DILocation(line: 2959, column: 62, scope: !6194)
!6198 = !DILocation(line: 2960, column: 20, scope: !6194)
!6199 = !DILocation(line: 2959, column: 42, scope: !6194)
!6200 = !DILocation(line: 2959, column: 24, scope: !6194)
!6201 = !DILocation(line: 2959, column: 23, scope: !6194)
!6202 = !DILocation(line: 2961, column: 13, scope: !6203)
!6203 = distinct !DILexicalBlock(scope: !6194, file: !1, line: 2961, column: 13)
!6204 = !DILocation(line: 2961, column: 28, scope: !6203)
!6205 = !DILocation(line: 2961, column: 13, scope: !6194)
!6206 = !DILocation(line: 2963, column: 42, scope: !6207)
!6207 = distinct !DILexicalBlock(scope: !6203, file: !1, line: 2962, column: 11)
!6208 = !DILocation(line: 2963, column: 49, scope: !6207)
!6209 = !DILocation(line: 2965, column: 15, scope: !6207)
!6210 = !DILocation(line: 2965, column: 22, scope: !6207)
!6211 = !DILocation(line: 2963, column: 20, scope: !6207)
!6212 = !DILocation(line: 2966, column: 13, scope: !6207)
!6213 = !DILocation(line: 2968, column: 7, scope: !6194)
!6214 = !DILocation(line: 2969, column: 13, scope: !3500)
!6215 = !DILocation(line: 2969, column: 5, scope: !3500)
!6216 = !DILocation(line: 2970, column: 5, scope: !3500)
!6217 = !DILocation(line: 2974, column: 13, scope: !6218)
!6218 = distinct !DILexicalBlock(scope: !6219, file: !1, line: 2974, column: 13)
!6219 = distinct !DILexicalBlock(scope: !6220, file: !1, line: 2973, column: 7)
!6220 = distinct !DILexicalBlock(scope: !3500, file: !1, line: 2970, column: 5)
!6221 = !DILocation(line: 2974, column: 28, scope: !6218)
!6222 = !DILocation(line: 2974, column: 31, scope: !6218)
!6223 = !DILocation(line: 2974, column: 43, scope: !6218)
!6224 = !DILocation(line: 2974, column: 13, scope: !6219)
!6225 = !DILocation(line: 2976, column: 19, scope: !6226)
!6226 = distinct !DILexicalBlock(scope: !6218, file: !1, line: 2975, column: 11)
!6227 = !DILocation(line: 2977, column: 13, scope: !6226)
!6228 = !DILocation(line: 2979, column: 20, scope: !6219)
!6229 = !DILocation(line: 2979, column: 35, scope: !6219)
!6230 = !DILocation(line: 2979, column: 34, scope: !6219)
!6231 = !DILocation(line: 2979, column: 37, scope: !6219)
!6232 = !DILocation(line: 2979, column: 52, scope: !6219)
!6233 = !DILocation(line: 2979, column: 55, scope: !6219)
!6234 = !DILocation(line: 2979, column: 9, scope: !6219)
!6235 = !DILocation(line: 2980, column: 22, scope: !6219)
!6236 = !DILocation(line: 2980, column: 24, scope: !6219)
!6237 = !DILocation(line: 2980, column: 39, scope: !6219)
!6238 = !DILocation(line: 2980, column: 42, scope: !6219)
!6239 = !DILocation(line: 2980, column: 23, scope: !6219)
!6240 = !DILocation(line: 2980, column: 10, scope: !6219)
!6241 = !DILocation(line: 2981, column: 9, scope: !6219)
!6242 = !DILocation(line: 2985, column: 13, scope: !6243)
!6243 = distinct !DILexicalBlock(scope: !6244, file: !1, line: 2985, column: 13)
!6244 = distinct !DILexicalBlock(scope: !6220, file: !1, line: 2984, column: 7)
!6245 = !DILocation(line: 2985, column: 28, scope: !6243)
!6246 = !DILocation(line: 2985, column: 31, scope: !6243)
!6247 = !DILocation(line: 2985, column: 43, scope: !6243)
!6248 = !DILocation(line: 2985, column: 13, scope: !6244)
!6249 = !DILocation(line: 2987, column: 19, scope: !6250)
!6250 = distinct !DILexicalBlock(scope: !6243, file: !1, line: 2986, column: 11)
!6251 = !DILocation(line: 2988, column: 13, scope: !6250)
!6252 = !DILocation(line: 2990, column: 19, scope: !6244)
!6253 = !DILocation(line: 2990, column: 34, scope: !6244)
!6254 = !DILocation(line: 2990, column: 33, scope: !6244)
!6255 = !DILocation(line: 2990, column: 36, scope: !6244)
!6256 = !DILocation(line: 2990, column: 51, scope: !6244)
!6257 = !DILocation(line: 2990, column: 54, scope: !6244)
!6258 = !DILocation(line: 2991, column: 11, scope: !6244)
!6259 = !DILocation(line: 2991, column: 26, scope: !6244)
!6260 = !DILocation(line: 2991, column: 27, scope: !6244)
!6261 = !DILocation(line: 2991, column: 31, scope: !6244)
!6262 = !DILocation(line: 2990, column: 9, scope: !6244)
!6263 = !DILocation(line: 2992, column: 22, scope: !6244)
!6264 = !DILocation(line: 2992, column: 24, scope: !6244)
!6265 = !DILocation(line: 2992, column: 39, scope: !6244)
!6266 = !DILocation(line: 2992, column: 42, scope: !6244)
!6267 = !DILocation(line: 2992, column: 23, scope: !6244)
!6268 = !DILocation(line: 2992, column: 10, scope: !6244)
!6269 = !DILocation(line: 2993, column: 9, scope: !6244)
!6270 = !DILocation(line: 2997, column: 13, scope: !6271)
!6271 = distinct !DILexicalBlock(scope: !6272, file: !1, line: 2997, column: 13)
!6272 = distinct !DILexicalBlock(scope: !6220, file: !1, line: 2996, column: 7)
!6273 = !DILocation(line: 2997, column: 28, scope: !6271)
!6274 = !DILocation(line: 2997, column: 31, scope: !6271)
!6275 = !DILocation(line: 2997, column: 43, scope: !6271)
!6276 = !DILocation(line: 2997, column: 13, scope: !6272)
!6277 = !DILocation(line: 2999, column: 19, scope: !6278)
!6278 = distinct !DILexicalBlock(scope: !6271, file: !1, line: 2998, column: 11)
!6279 = !DILocation(line: 3000, column: 13, scope: !6278)
!6280 = !DILocation(line: 3002, column: 24, scope: !6272)
!6281 = !DILocation(line: 3002, column: 39, scope: !6272)
!6282 = !DILocation(line: 3002, column: 38, scope: !6272)
!6283 = !DILocation(line: 3002, column: 41, scope: !6272)
!6284 = !DILocation(line: 3002, column: 56, scope: !6272)
!6285 = !DILocation(line: 3002, column: 59, scope: !6272)
!6286 = !DILocation(line: 3003, column: 11, scope: !6272)
!6287 = !DILocation(line: 3003, column: 26, scope: !6272)
!6288 = !DILocation(line: 3003, column: 27, scope: !6272)
!6289 = !DILocation(line: 3003, column: 31, scope: !6272)
!6290 = !DILocation(line: 3002, column: 9, scope: !6272)
!6291 = !DILocation(line: 3004, column: 22, scope: !6272)
!6292 = !DILocation(line: 3004, column: 24, scope: !6272)
!6293 = !DILocation(line: 3004, column: 39, scope: !6272)
!6294 = !DILocation(line: 3004, column: 42, scope: !6272)
!6295 = !DILocation(line: 3004, column: 23, scope: !6272)
!6296 = !DILocation(line: 3004, column: 10, scope: !6272)
!6297 = !DILocation(line: 3005, column: 9, scope: !6272)
!6298 = !DILocation(line: 3009, column: 13, scope: !6299)
!6299 = distinct !DILexicalBlock(scope: !6300, file: !1, line: 3009, column: 13)
!6300 = distinct !DILexicalBlock(scope: !6220, file: !1, line: 3008, column: 7)
!6301 = !DILocation(line: 3009, column: 28, scope: !6299)
!6302 = !DILocation(line: 3009, column: 31, scope: !6299)
!6303 = !DILocation(line: 3009, column: 43, scope: !6299)
!6304 = !DILocation(line: 3009, column: 13, scope: !6300)
!6305 = !DILocation(line: 3011, column: 19, scope: !6306)
!6306 = distinct !DILexicalBlock(scope: !6299, file: !1, line: 3010, column: 11)
!6307 = !DILocation(line: 3012, column: 13, scope: !6306)
!6308 = !DILocation(line: 3014, column: 29, scope: !6300)
!6309 = !DILocation(line: 3014, column: 44, scope: !6300)
!6310 = !DILocation(line: 3014, column: 43, scope: !6300)
!6311 = !DILocation(line: 3014, column: 46, scope: !6300)
!6312 = !DILocation(line: 3014, column: 61, scope: !6300)
!6313 = !DILocation(line: 3014, column: 64, scope: !6300)
!6314 = !DILocation(line: 3015, column: 11, scope: !6300)
!6315 = !DILocation(line: 3015, column: 26, scope: !6300)
!6316 = !DILocation(line: 3015, column: 27, scope: !6300)
!6317 = !DILocation(line: 3015, column: 31, scope: !6300)
!6318 = !DILocation(line: 3015, column: 37, scope: !6300)
!6319 = !DILocation(line: 3015, column: 52, scope: !6300)
!6320 = !DILocation(line: 3015, column: 53, scope: !6300)
!6321 = !DILocation(line: 3015, column: 57, scope: !6300)
!6322 = !DILocation(line: 3014, column: 9, scope: !6300)
!6323 = !DILocation(line: 3016, column: 22, scope: !6300)
!6324 = !DILocation(line: 3016, column: 24, scope: !6300)
!6325 = !DILocation(line: 3016, column: 39, scope: !6300)
!6326 = !DILocation(line: 3016, column: 42, scope: !6300)
!6327 = !DILocation(line: 3016, column: 23, scope: !6300)
!6328 = !DILocation(line: 3016, column: 10, scope: !6300)
!6329 = !DILocation(line: 3017, column: 9, scope: !6300)
!6330 = !DILocation(line: 3021, column: 13, scope: !6331)
!6331 = distinct !DILexicalBlock(scope: !6332, file: !1, line: 3021, column: 13)
!6332 = distinct !DILexicalBlock(scope: !6220, file: !1, line: 3020, column: 7)
!6333 = !DILocation(line: 3021, column: 28, scope: !6331)
!6334 = !DILocation(line: 3021, column: 31, scope: !6331)
!6335 = !DILocation(line: 3021, column: 43, scope: !6331)
!6336 = !DILocation(line: 3021, column: 13, scope: !6332)
!6337 = !DILocation(line: 3023, column: 27, scope: !6338)
!6338 = distinct !DILexicalBlock(scope: !6331, file: !1, line: 3022, column: 11)
!6339 = !DILocation(line: 3024, column: 13, scope: !6338)
!6340 = !DILocation(line: 3026, column: 18, scope: !6332)
!6341 = !DILocation(line: 3026, column: 33, scope: !6332)
!6342 = !DILocation(line: 3026, column: 32, scope: !6332)
!6343 = !DILocation(line: 3026, column: 35, scope: !6332)
!6344 = !DILocation(line: 3026, column: 50, scope: !6332)
!6345 = !DILocation(line: 3026, column: 53, scope: !6332)
!6346 = !DILocation(line: 3027, column: 11, scope: !6332)
!6347 = !DILocation(line: 3027, column: 26, scope: !6332)
!6348 = !DILocation(line: 3027, column: 27, scope: !6332)
!6349 = !DILocation(line: 3027, column: 31, scope: !6332)
!6350 = !DILocation(line: 3027, column: 37, scope: !6332)
!6351 = !DILocation(line: 3027, column: 52, scope: !6332)
!6352 = !DILocation(line: 3027, column: 53, scope: !6332)
!6353 = !DILocation(line: 3027, column: 57, scope: !6332)
!6354 = !DILocation(line: 3026, column: 9, scope: !6332)
!6355 = !DILocation(line: 3028, column: 22, scope: !6332)
!6356 = !DILocation(line: 3028, column: 24, scope: !6332)
!6357 = !DILocation(line: 3028, column: 39, scope: !6332)
!6358 = !DILocation(line: 3028, column: 42, scope: !6332)
!6359 = !DILocation(line: 3028, column: 23, scope: !6332)
!6360 = !DILocation(line: 3028, column: 10, scope: !6332)
!6361 = !DILocation(line: 3029, column: 9, scope: !6332)
!6362 = !DILocation(line: 3033, column: 13, scope: !6363)
!6363 = distinct !DILexicalBlock(scope: !6364, file: !1, line: 3033, column: 13)
!6364 = distinct !DILexicalBlock(scope: !6220, file: !1, line: 3032, column: 7)
!6365 = !DILocation(line: 3033, column: 28, scope: !6363)
!6366 = !DILocation(line: 3033, column: 31, scope: !6363)
!6367 = !DILocation(line: 3033, column: 43, scope: !6363)
!6368 = !DILocation(line: 3033, column: 13, scope: !6364)
!6369 = !DILocation(line: 3035, column: 19, scope: !6370)
!6370 = distinct !DILexicalBlock(scope: !6363, file: !1, line: 3034, column: 11)
!6371 = !DILocation(line: 3036, column: 13, scope: !6370)
!6372 = !DILocation(line: 3038, column: 22, scope: !6364)
!6373 = !DILocation(line: 3038, column: 37, scope: !6364)
!6374 = !DILocation(line: 3038, column: 36, scope: !6364)
!6375 = !DILocation(line: 3038, column: 39, scope: !6364)
!6376 = !DILocation(line: 3038, column: 54, scope: !6364)
!6377 = !DILocation(line: 3038, column: 57, scope: !6364)
!6378 = !DILocation(line: 3039, column: 11, scope: !6364)
!6379 = !DILocation(line: 3039, column: 26, scope: !6364)
!6380 = !DILocation(line: 3039, column: 27, scope: !6364)
!6381 = !DILocation(line: 3039, column: 31, scope: !6364)
!6382 = !DILocation(line: 3039, column: 37, scope: !6364)
!6383 = !DILocation(line: 3039, column: 52, scope: !6364)
!6384 = !DILocation(line: 3039, column: 53, scope: !6364)
!6385 = !DILocation(line: 3039, column: 57, scope: !6364)
!6386 = !DILocation(line: 3038, column: 9, scope: !6364)
!6387 = !DILocation(line: 3040, column: 22, scope: !6364)
!6388 = !DILocation(line: 3040, column: 24, scope: !6364)
!6389 = !DILocation(line: 3040, column: 39, scope: !6364)
!6390 = !DILocation(line: 3040, column: 42, scope: !6364)
!6391 = !DILocation(line: 3040, column: 23, scope: !6364)
!6392 = !DILocation(line: 3040, column: 10, scope: !6364)
!6393 = !DILocation(line: 3041, column: 9, scope: !6364)
!6394 = !DILocation(line: 3045, column: 13, scope: !6395)
!6395 = distinct !DILexicalBlock(scope: !6396, file: !1, line: 3045, column: 13)
!6396 = distinct !DILexicalBlock(scope: !6220, file: !1, line: 3044, column: 7)
!6397 = !DILocation(line: 3045, column: 28, scope: !6395)
!6398 = !DILocation(line: 3045, column: 31, scope: !6395)
!6399 = !DILocation(line: 3045, column: 43, scope: !6395)
!6400 = !DILocation(line: 3045, column: 13, scope: !6396)
!6401 = !DILocation(line: 3047, column: 19, scope: !6402)
!6402 = distinct !DILexicalBlock(scope: !6395, file: !1, line: 3046, column: 11)
!6403 = !DILocation(line: 3048, column: 13, scope: !6402)
!6404 = !DILocation(line: 3050, column: 21, scope: !6396)
!6405 = !DILocation(line: 3050, column: 36, scope: !6396)
!6406 = !DILocation(line: 3050, column: 35, scope: !6396)
!6407 = !DILocation(line: 3050, column: 38, scope: !6396)
!6408 = !DILocation(line: 3050, column: 53, scope: !6396)
!6409 = !DILocation(line: 3050, column: 56, scope: !6396)
!6410 = !DILocation(line: 3051, column: 11, scope: !6396)
!6411 = !DILocation(line: 3051, column: 26, scope: !6396)
!6412 = !DILocation(line: 3051, column: 27, scope: !6396)
!6413 = !DILocation(line: 3051, column: 31, scope: !6396)
!6414 = !DILocation(line: 3050, column: 9, scope: !6396)
!6415 = !DILocation(line: 3052, column: 22, scope: !6396)
!6416 = !DILocation(line: 3052, column: 24, scope: !6396)
!6417 = !DILocation(line: 3052, column: 39, scope: !6396)
!6418 = !DILocation(line: 3052, column: 42, scope: !6396)
!6419 = !DILocation(line: 3052, column: 23, scope: !6396)
!6420 = !DILocation(line: 3052, column: 10, scope: !6396)
!6421 = !DILocation(line: 3053, column: 9, scope: !6396)
!6422 = !DILocation(line: 3056, column: 9, scope: !6220)
!6423 = !DILocation(line: 3059, column: 9, scope: !6424)
!6424 = distinct !DILexicalBlock(scope: !6220, file: !1, line: 3058, column: 7)
!6425 = !DILocation(line: 3059, column: 24, scope: !6424)
!6426 = !DILocation(line: 3059, column: 27, scope: !6424)
!6427 = !DILocation(line: 3059, column: 42, scope: !6424)
!6428 = !DILocation(line: 3060, column: 9, scope: !6424)
!6429 = !DILocation(line: 3060, column: 24, scope: !6424)
!6430 = !DILocation(line: 3060, column: 27, scope: !6424)
!6431 = !DILocation(line: 3060, column: 38, scope: !6424)
!6432 = !DILocation(line: 3061, column: 9, scope: !6424)
!6433 = !DILocation(line: 3061, column: 24, scope: !6424)
!6434 = !DILocation(line: 3061, column: 27, scope: !6424)
!6435 = !DILocation(line: 3061, column: 38, scope: !6424)
!6436 = !DILocation(line: 3062, column: 10, scope: !6424)
!6437 = !DILocation(line: 3063, column: 9, scope: !6424)
!6438 = !DILocation(line: 3067, column: 13, scope: !6439)
!6439 = distinct !DILexicalBlock(scope: !6440, file: !1, line: 3067, column: 13)
!6440 = distinct !DILexicalBlock(scope: !6220, file: !1, line: 3066, column: 7)
!6441 = !DILocation(line: 3067, column: 28, scope: !6439)
!6442 = !DILocation(line: 3067, column: 31, scope: !6439)
!6443 = !DILocation(line: 3067, column: 43, scope: !6439)
!6444 = !DILocation(line: 3067, column: 13, scope: !6440)
!6445 = !DILocation(line: 3069, column: 19, scope: !6446)
!6446 = distinct !DILexicalBlock(scope: !6439, file: !1, line: 3068, column: 11)
!6447 = !DILocation(line: 3070, column: 13, scope: !6446)
!6448 = !DILocation(line: 3072, column: 21, scope: !6440)
!6449 = !DILocation(line: 3072, column: 36, scope: !6440)
!6450 = !DILocation(line: 3072, column: 35, scope: !6440)
!6451 = !DILocation(line: 3072, column: 38, scope: !6440)
!6452 = !DILocation(line: 3072, column: 53, scope: !6440)
!6453 = !DILocation(line: 3072, column: 56, scope: !6440)
!6454 = !DILocation(line: 3072, column: 9, scope: !6440)
!6455 = !DILocation(line: 3073, column: 22, scope: !6440)
!6456 = !DILocation(line: 3073, column: 24, scope: !6440)
!6457 = !DILocation(line: 3073, column: 39, scope: !6440)
!6458 = !DILocation(line: 3073, column: 42, scope: !6440)
!6459 = !DILocation(line: 3073, column: 23, scope: !6440)
!6460 = !DILocation(line: 3073, column: 10, scope: !6440)
!6461 = !DILocation(line: 3074, column: 9, scope: !6440)
!6462 = !DILocation(line: 3078, column: 22, scope: !6463)
!6463 = distinct !DILexicalBlock(scope: !6220, file: !1, line: 3077, column: 7)
!6464 = !DILocation(line: 3078, column: 34, scope: !6463)
!6465 = !DILocation(line: 3078, column: 49, scope: !6463)
!6466 = !DILocation(line: 3078, column: 48, scope: !6463)
!6467 = !DILocation(line: 3078, column: 51, scope: !6463)
!6468 = !DILocation(line: 3078, column: 24, scope: !6463)
!6469 = !DILocation(line: 3078, column: 23, scope: !6463)
!6470 = !DILocation(line: 3078, column: 10, scope: !6463)
!6471 = !DILocation(line: 3079, column: 9, scope: !6463)
!6472 = !DILocalVariable(name: "method", scope: !6473, file: !1, line: 3085, type: !717)
!6473 = distinct !DILexicalBlock(scope: !6220, file: !1, line: 3083, column: 7)
!6474 = !DILocation(line: 3085, column: 11, scope: !6473)
!6475 = !DILocation(line: 3087, column: 13, scope: !6476)
!6476 = distinct !DILexicalBlock(scope: !6473, file: !1, line: 3087, column: 13)
!6477 = !DILocation(line: 3087, column: 28, scope: !6476)
!6478 = !DILocation(line: 3087, column: 31, scope: !6476)
!6479 = !DILocation(line: 3087, column: 43, scope: !6476)
!6480 = !DILocation(line: 3087, column: 13, scope: !6473)
!6481 = !DILocation(line: 3089, column: 19, scope: !6482)
!6482 = distinct !DILexicalBlock(scope: !6476, file: !1, line: 3088, column: 11)
!6483 = !DILocation(line: 3090, column: 13, scope: !6482)
!6484 = !DILocation(line: 3092, column: 24, scope: !6473)
!6485 = !DILocation(line: 3092, column: 29, scope: !6473)
!6486 = !DILocation(line: 3092, column: 9, scope: !6473)
!6487 = !DILocation(line: 3093, column: 67, scope: !6473)
!6488 = !DILocation(line: 3093, column: 16, scope: !6473)
!6489 = !DILocation(line: 3093, column: 15, scope: !6473)
!6490 = !DILocation(line: 3094, column: 13, scope: !6491)
!6491 = distinct !DILexicalBlock(scope: !6473, file: !1, line: 3094, column: 13)
!6492 = !DILocation(line: 3094, column: 20, scope: !6491)
!6493 = !DILocation(line: 3094, column: 13, scope: !6473)
!6494 = !DILocation(line: 3096, column: 19, scope: !6495)
!6495 = distinct !DILexicalBlock(scope: !6491, file: !1, line: 3095, column: 11)
!6496 = !DILocation(line: 3097, column: 13, scope: !6495)
!6497 = !DILocation(line: 3099, column: 48, scope: !6473)
!6498 = !DILocation(line: 3099, column: 34, scope: !6473)
!6499 = !DILocation(line: 3099, column: 9, scope: !6473)
!6500 = !DILocation(line: 3099, column: 24, scope: !6473)
!6501 = !DILocation(line: 3099, column: 27, scope: !6473)
!6502 = !DILocation(line: 3099, column: 33, scope: !6473)
!6503 = !DILocation(line: 3100, column: 9, scope: !6473)
!6504 = !DILocation(line: 3104, column: 13, scope: !6505)
!6505 = distinct !DILexicalBlock(scope: !6506, file: !1, line: 3104, column: 13)
!6506 = distinct !DILexicalBlock(scope: !6220, file: !1, line: 3103, column: 7)
!6507 = !DILocation(line: 3104, column: 28, scope: !6505)
!6508 = !DILocation(line: 3104, column: 31, scope: !6505)
!6509 = !DILocation(line: 3104, column: 43, scope: !6505)
!6510 = !DILocation(line: 3104, column: 13, scope: !6506)
!6511 = !DILocation(line: 3106, column: 19, scope: !6512)
!6512 = distinct !DILexicalBlock(scope: !6505, file: !1, line: 3105, column: 11)
!6513 = !DILocation(line: 3107, column: 13, scope: !6512)
!6514 = !DILocation(line: 3109, column: 14, scope: !6515)
!6515 = distinct !DILexicalBlock(scope: !6506, file: !1, line: 3109, column: 13)
!6516 = !DILocation(line: 3109, column: 13, scope: !6515)
!6517 = !DILocation(line: 3109, column: 20, scope: !6515)
!6518 = !DILocation(line: 3109, column: 13, scope: !6506)
!6519 = !DILocation(line: 3110, column: 26, scope: !6515)
!6520 = !DILocation(line: 3110, column: 31, scope: !6515)
!6521 = !DILocation(line: 3110, column: 11, scope: !6515)
!6522 = !DILocation(line: 3111, column: 46, scope: !6506)
!6523 = !DILocation(line: 3111, column: 32, scope: !6506)
!6524 = !DILocation(line: 3111, column: 9, scope: !6506)
!6525 = !DILocation(line: 3111, column: 24, scope: !6506)
!6526 = !DILocation(line: 3111, column: 27, scope: !6506)
!6527 = !DILocation(line: 3111, column: 31, scope: !6506)
!6528 = !DILocation(line: 3112, column: 9, scope: !6506)
!6529 = !DILocation(line: 3116, column: 13, scope: !6530)
!6530 = distinct !DILexicalBlock(scope: !6531, file: !1, line: 3116, column: 13)
!6531 = distinct !DILexicalBlock(scope: !6220, file: !1, line: 3115, column: 7)
!6532 = !DILocation(line: 3116, column: 28, scope: !6530)
!6533 = !DILocation(line: 3116, column: 31, scope: !6530)
!6534 = !DILocation(line: 3116, column: 43, scope: !6530)
!6535 = !DILocation(line: 3116, column: 13, scope: !6531)
!6536 = !DILocation(line: 3118, column: 19, scope: !6537)
!6537 = distinct !DILexicalBlock(scope: !6530, file: !1, line: 3117, column: 11)
!6538 = !DILocation(line: 3119, column: 13, scope: !6537)
!6539 = !DILocation(line: 3121, column: 24, scope: !6531)
!6540 = !DILocation(line: 3121, column: 29, scope: !6531)
!6541 = !DILocation(line: 3121, column: 9, scope: !6531)
!6542 = !DILocation(line: 3122, column: 46, scope: !6531)
!6543 = !DILocation(line: 3122, column: 32, scope: !6531)
!6544 = !DILocation(line: 3122, column: 9, scope: !6531)
!6545 = !DILocation(line: 3122, column: 24, scope: !6531)
!6546 = !DILocation(line: 3122, column: 27, scope: !6531)
!6547 = !DILocation(line: 3122, column: 31, scope: !6531)
!6548 = !DILocation(line: 3123, column: 9, scope: !6531)
!6549 = !DILocation(line: 3126, column: 9, scope: !6550)
!6550 = distinct !DILexicalBlock(scope: !3500, file: !1, line: 3126, column: 9)
!6551 = !DILocation(line: 3126, column: 24, scope: !6550)
!6552 = !DILocation(line: 3126, column: 9, scope: !3500)
!6553 = !DILocation(line: 3127, column: 7, scope: !6550)
!6554 = !DILocation(line: 3128, column: 9, scope: !6555)
!6555 = distinct !DILexicalBlock(scope: !3500, file: !1, line: 3128, column: 9)
!6556 = !DILocation(line: 3128, column: 16, scope: !6555)
!6557 = !DILocation(line: 3128, column: 22, scope: !6555)
!6558 = !DILocation(line: 3128, column: 9, scope: !3500)
!6559 = !DILocation(line: 3129, column: 73, scope: !6555)
!6560 = !DILocation(line: 3129, column: 75, scope: !6555)
!6561 = !DILocation(line: 3129, column: 74, scope: !6555)
!6562 = !DILocation(line: 3129, column: 66, scope: !6555)
!6563 = !DILocation(line: 3129, column: 78, scope: !6555)
!6564 = !DILocation(line: 3129, column: 14, scope: !6555)
!6565 = !DILocation(line: 3129, column: 7, scope: !6555)
!6566 = !DILocation(line: 3130, column: 9, scope: !6567)
!6567 = distinct !DILexicalBlock(scope: !3500, file: !1, line: 3130, column: 9)
!6568 = !DILocation(line: 3130, column: 16, scope: !6567)
!6569 = !DILocation(line: 3130, column: 9, scope: !3500)
!6570 = !DILocation(line: 3131, column: 7, scope: !6567)
!6571 = !DILocation(line: 3132, column: 5, scope: !3500)
!6572 = !DILocation(line: 3132, column: 20, scope: !3500)
!6573 = !DILocation(line: 3132, column: 23, scope: !3500)
!6574 = !DILocation(line: 3132, column: 32, scope: !3500)
!6575 = !DILocation(line: 3133, column: 9, scope: !6576)
!6576 = distinct !DILexicalBlock(scope: !3500, file: !1, line: 3133, column: 9)
!6577 = !DILocation(line: 3133, column: 11, scope: !6576)
!6578 = !DILocation(line: 3133, column: 9, scope: !3500)
!6579 = !DILocation(line: 3134, column: 7, scope: !6576)
!6580 = !DILocation(line: 3138, column: 11, scope: !6581)
!6581 = distinct !DILexicalBlock(scope: !3500, file: !1, line: 3138, column: 5)
!6582 = !DILocation(line: 3138, column: 10, scope: !6581)
!6583 = !DILocation(line: 3138, column: 15, scope: !6584)
!6584 = distinct !DILexicalBlock(scope: !6581, file: !1, line: 3138, column: 5)
!6585 = !DILocation(line: 3138, column: 30, scope: !6584)
!6586 = !DILocation(line: 3138, column: 33, scope: !6584)
!6587 = !DILocation(line: 3138, column: 43, scope: !6584)
!6588 = !DILocation(line: 3138, column: 5, scope: !6581)
!6589 = !DILocation(line: 3140, column: 13, scope: !6590)
!6590 = distinct !DILexicalBlock(scope: !6584, file: !1, line: 3139, column: 5)
!6591 = !DILocation(line: 3140, column: 28, scope: !6590)
!6592 = !DILocation(line: 3140, column: 31, scope: !6590)
!6593 = !DILocation(line: 3141, column: 33, scope: !6590)
!6594 = !DILocation(line: 3141, column: 49, scope: !6590)
!6595 = !DILocation(line: 3141, column: 53, scope: !6590)
!6596 = !DILocation(line: 3141, column: 60, scope: !6590)
!6597 = !DILocation(line: 3141, column: 69, scope: !6590)
!6598 = !DILocation(line: 3141, column: 62, scope: !6590)
!6599 = !DILocation(line: 3142, column: 9, scope: !6590)
!6600 = !DILocation(line: 3142, column: 25, scope: !6590)
!6601 = !DILocation(line: 3142, column: 29, scope: !6590)
!6602 = !DILocation(line: 3142, column: 36, scope: !6590)
!6603 = !DILocation(line: 3142, column: 45, scope: !6590)
!6604 = !DILocation(line: 3142, column: 38, scope: !6590)
!6605 = !DILocation(line: 3141, column: 70, scope: !6590)
!6606 = !DILocation(line: 3142, column: 47, scope: !6590)
!6607 = !DILocation(line: 3142, column: 63, scope: !6590)
!6608 = !DILocation(line: 3142, column: 67, scope: !6590)
!6609 = !DILocation(line: 3142, column: 74, scope: !6590)
!6610 = !DILocation(line: 3142, column: 46, scope: !6590)
!6611 = !DILocation(line: 3141, column: 7, scope: !6590)
!6612 = !DILocation(line: 3141, column: 22, scope: !6590)
!6613 = !DILocation(line: 3141, column: 25, scope: !6590)
!6614 = !DILocation(line: 3141, column: 31, scope: !6590)
!6615 = !DILocation(line: 3141, column: 32, scope: !6590)
!6616 = !DILocation(line: 3143, column: 33, scope: !6590)
!6617 = !DILocation(line: 3143, column: 49, scope: !6590)
!6618 = !DILocation(line: 3143, column: 53, scope: !6590)
!6619 = !DILocation(line: 3143, column: 60, scope: !6590)
!6620 = !DILocation(line: 3143, column: 69, scope: !6590)
!6621 = !DILocation(line: 3143, column: 62, scope: !6590)
!6622 = !DILocation(line: 3144, column: 9, scope: !6590)
!6623 = !DILocation(line: 3144, column: 25, scope: !6590)
!6624 = !DILocation(line: 3144, column: 29, scope: !6590)
!6625 = !DILocation(line: 3144, column: 36, scope: !6590)
!6626 = !DILocation(line: 3144, column: 45, scope: !6590)
!6627 = !DILocation(line: 3144, column: 38, scope: !6590)
!6628 = !DILocation(line: 3143, column: 70, scope: !6590)
!6629 = !DILocation(line: 3144, column: 47, scope: !6590)
!6630 = !DILocation(line: 3144, column: 63, scope: !6590)
!6631 = !DILocation(line: 3144, column: 67, scope: !6590)
!6632 = !DILocation(line: 3144, column: 74, scope: !6590)
!6633 = !DILocation(line: 3144, column: 46, scope: !6590)
!6634 = !DILocation(line: 3143, column: 7, scope: !6590)
!6635 = !DILocation(line: 3143, column: 22, scope: !6590)
!6636 = !DILocation(line: 3143, column: 25, scope: !6590)
!6637 = !DILocation(line: 3143, column: 31, scope: !6590)
!6638 = !DILocation(line: 3143, column: 32, scope: !6590)
!6639 = !DILocation(line: 3145, column: 13, scope: !6590)
!6640 = !DILocation(line: 3145, column: 28, scope: !6590)
!6641 = !DILocation(line: 3145, column: 31, scope: !6590)
!6642 = !DILocation(line: 3146, column: 17, scope: !6643)
!6643 = distinct !DILexicalBlock(scope: !6590, file: !1, line: 3146, column: 11)
!6644 = !DILocation(line: 3146, column: 21, scope: !6643)
!6645 = !DILocation(line: 3146, column: 37, scope: !6643)
!6646 = !DILocation(line: 3146, column: 41, scope: !6643)
!6647 = !DILocation(line: 3146, column: 48, scope: !6643)
!6648 = !DILocation(line: 3146, column: 19, scope: !6643)
!6649 = !DILocation(line: 3146, column: 11, scope: !6590)
!6650 = !DILocation(line: 3147, column: 45, scope: !6643)
!6651 = !DILocation(line: 3147, column: 9, scope: !6643)
!6652 = !DILocation(line: 3147, column: 25, scope: !6643)
!6653 = !DILocation(line: 3147, column: 29, scope: !6643)
!6654 = !DILocation(line: 3147, column: 36, scope: !6643)
!6655 = !DILocation(line: 3147, column: 38, scope: !6643)
!6656 = !DILocation(line: 3148, column: 17, scope: !6657)
!6657 = distinct !DILexicalBlock(scope: !6590, file: !1, line: 3148, column: 11)
!6658 = !DILocation(line: 3148, column: 21, scope: !6657)
!6659 = !DILocation(line: 3148, column: 37, scope: !6657)
!6660 = !DILocation(line: 3148, column: 41, scope: !6657)
!6661 = !DILocation(line: 3148, column: 48, scope: !6657)
!6662 = !DILocation(line: 3148, column: 19, scope: !6657)
!6663 = !DILocation(line: 3148, column: 11, scope: !6590)
!6664 = !DILocation(line: 3149, column: 45, scope: !6657)
!6665 = !DILocation(line: 3149, column: 9, scope: !6657)
!6666 = !DILocation(line: 3149, column: 25, scope: !6657)
!6667 = !DILocation(line: 3149, column: 29, scope: !6657)
!6668 = !DILocation(line: 3149, column: 36, scope: !6657)
!6669 = !DILocation(line: 3149, column: 38, scope: !6657)
!6670 = !DILocation(line: 3150, column: 17, scope: !6671)
!6671 = distinct !DILexicalBlock(scope: !6590, file: !1, line: 3150, column: 11)
!6672 = !DILocation(line: 3150, column: 21, scope: !6671)
!6673 = !DILocation(line: 3150, column: 37, scope: !6671)
!6674 = !DILocation(line: 3150, column: 41, scope: !6671)
!6675 = !DILocation(line: 3150, column: 48, scope: !6671)
!6676 = !DILocation(line: 3150, column: 19, scope: !6671)
!6677 = !DILocation(line: 3150, column: 11, scope: !6590)
!6678 = !DILocation(line: 3151, column: 45, scope: !6671)
!6679 = !DILocation(line: 3151, column: 9, scope: !6671)
!6680 = !DILocation(line: 3151, column: 25, scope: !6671)
!6681 = !DILocation(line: 3151, column: 29, scope: !6671)
!6682 = !DILocation(line: 3151, column: 36, scope: !6671)
!6683 = !DILocation(line: 3151, column: 38, scope: !6671)
!6684 = !DILocation(line: 3152, column: 17, scope: !6685)
!6685 = distinct !DILexicalBlock(scope: !6590, file: !1, line: 3152, column: 11)
!6686 = !DILocation(line: 3152, column: 21, scope: !6685)
!6687 = !DILocation(line: 3152, column: 37, scope: !6685)
!6688 = !DILocation(line: 3152, column: 41, scope: !6685)
!6689 = !DILocation(line: 3152, column: 48, scope: !6685)
!6690 = !DILocation(line: 3152, column: 19, scope: !6685)
!6691 = !DILocation(line: 3152, column: 11, scope: !6590)
!6692 = !DILocation(line: 3153, column: 45, scope: !6685)
!6693 = !DILocation(line: 3153, column: 9, scope: !6685)
!6694 = !DILocation(line: 3153, column: 25, scope: !6685)
!6695 = !DILocation(line: 3153, column: 29, scope: !6685)
!6696 = !DILocation(line: 3153, column: 36, scope: !6685)
!6697 = !DILocation(line: 3153, column: 38, scope: !6685)
!6698 = !DILocation(line: 3154, column: 11, scope: !6699)
!6699 = distinct !DILexicalBlock(scope: !6590, file: !1, line: 3154, column: 11)
!6700 = !DILocation(line: 3154, column: 26, scope: !6699)
!6701 = !DILocation(line: 3154, column: 29, scope: !6699)
!6702 = !DILocation(line: 3154, column: 39, scope: !6699)
!6703 = !DILocation(line: 3154, column: 11, scope: !6590)
!6704 = !DILocation(line: 3155, column: 9, scope: !6699)
!6705 = !DILocation(line: 3156, column: 11, scope: !6706)
!6706 = distinct !DILexicalBlock(scope: !6590, file: !1, line: 3156, column: 11)
!6707 = !DILocation(line: 3156, column: 26, scope: !6706)
!6708 = !DILocation(line: 3156, column: 13, scope: !6706)
!6709 = !DILocation(line: 3156, column: 11, scope: !6590)
!6710 = !DILocalVariable(name: "message", scope: !6711, file: !1, line: 3157, type: !704)
!6711 = distinct !DILexicalBlock(scope: !6706, file: !1, line: 3157, column: 9)
!6712 = !DILocation(line: 3157, column: 9, scope: !6711)
!6713 = !DILocalVariable(name: "exception", scope: !6711, file: !1, line: 3157, type: !932)
!6714 = !DILocation(line: 3158, column: 5, scope: !6590)
!6715 = !DILocation(line: 3138, column: 67, scope: !6584)
!6716 = !DILocation(line: 3138, column: 5, scope: !6584)
!6717 = distinct !{!6717, !6588, !6718}
!6718 = !DILocation(line: 3158, column: 5, scope: !6581)
!6719 = !DILocation(line: 3159, column: 9, scope: !6720)
!6720 = distinct !DILexicalBlock(scope: !3500, file: !1, line: 3159, column: 9)
!6721 = !DILocation(line: 3159, column: 25, scope: !6720)
!6722 = !DILocation(line: 3159, column: 29, scope: !6720)
!6723 = !DILocation(line: 3159, column: 36, scope: !6720)
!6724 = !DILocation(line: 3159, column: 9, scope: !3500)
!6725 = !DILocation(line: 3161, column: 14, scope: !6726)
!6726 = distinct !DILexicalBlock(scope: !6727, file: !1, line: 3161, column: 13)
!6727 = distinct !DILexicalBlock(scope: !6720, file: !1, line: 3160, column: 7)
!6728 = !DILocation(line: 3161, column: 16, scope: !6726)
!6729 = !DILocation(line: 3161, column: 22, scope: !6726)
!6730 = !DILocation(line: 3161, column: 26, scope: !6726)
!6731 = !DILocation(line: 3161, column: 42, scope: !6726)
!6732 = !DILocation(line: 3161, column: 46, scope: !6726)
!6733 = !DILocation(line: 3161, column: 56, scope: !6726)
!6734 = !DILocation(line: 3161, column: 74, scope: !6726)
!6735 = !DILocation(line: 3162, column: 28, scope: !6726)
!6736 = !DILocation(line: 3162, column: 44, scope: !6726)
!6737 = !DILocation(line: 3162, column: 48, scope: !6726)
!6738 = !DILocation(line: 3163, column: 14, scope: !6726)
!6739 = !DILocation(line: 3163, column: 30, scope: !6726)
!6740 = !DILocation(line: 3163, column: 31, scope: !6726)
!6741 = !DILocation(line: 3163, column: 36, scope: !6726)
!6742 = !DILocation(line: 3162, column: 14, scope: !6726)
!6743 = !DILocation(line: 3163, column: 47, scope: !6726)
!6744 = !DILocation(line: 3161, column: 13, scope: !6727)
!6745 = !DILocation(line: 3164, column: 32, scope: !6726)
!6746 = !DILocation(line: 3164, column: 38, scope: !6726)
!6747 = !DILocation(line: 3164, column: 54, scope: !6726)
!6748 = !DILocation(line: 3165, column: 13, scope: !6726)
!6749 = !DILocation(line: 3165, column: 29, scope: !6726)
!6750 = !DILocation(line: 3165, column: 33, scope: !6726)
!6751 = !DILocation(line: 3164, column: 19, scope: !6726)
!6752 = !DILocation(line: 3164, column: 17, scope: !6726)
!6753 = !DILocation(line: 3164, column: 11, scope: !6726)
!6754 = !DILocation(line: 3166, column: 31, scope: !6727)
!6755 = !DILocation(line: 3166, column: 37, scope: !6727)
!6756 = !DILocation(line: 3166, column: 53, scope: !6727)
!6757 = !DILocation(line: 3166, column: 56, scope: !6727)
!6758 = !DILocation(line: 3166, column: 17, scope: !6727)
!6759 = !DILocation(line: 3166, column: 15, scope: !6727)
!6760 = !DILocation(line: 3167, column: 7, scope: !6727)
!6761 = !DILocation(line: 3168, column: 9, scope: !6762)
!6762 = distinct !DILexicalBlock(scope: !3500, file: !1, line: 3168, column: 9)
!6763 = !DILocation(line: 3168, column: 25, scope: !6762)
!6764 = !DILocation(line: 3168, column: 30, scope: !6762)
!6765 = !DILocation(line: 3168, column: 9, scope: !3500)
!6766 = !DILocation(line: 3170, column: 9, scope: !6762)
!6767 = !DILocation(line: 3170, column: 25, scope: !6762)
!6768 = !DILocation(line: 3169, column: 37, scope: !6762)
!6769 = !DILocation(line: 3169, column: 7, scope: !6762)
!6770 = !DILocation(line: 3169, column: 23, scope: !6762)
!6771 = !DILocation(line: 3169, column: 27, scope: !6762)
!6772 = !DILocation(line: 3171, column: 30, scope: !3500)
!6773 = !DILocation(line: 3171, column: 51, scope: !3500)
!6774 = !DILocation(line: 3171, column: 53, scope: !3500)
!6775 = !DILocation(line: 3171, column: 52, scope: !3500)
!6776 = !DILocation(line: 3172, column: 7, scope: !3500)
!6777 = !DILocation(line: 3171, column: 63, scope: !3500)
!6778 = !DILocation(line: 3171, column: 13, scope: !3500)
!6779 = !DILocation(line: 3171, column: 12, scope: !3500)
!6780 = !DILocation(line: 3173, column: 9, scope: !6781)
!6781 = distinct !DILexicalBlock(scope: !3500, file: !1, line: 3173, column: 9)
!6782 = !DILocation(line: 3173, column: 17, scope: !6781)
!6783 = !DILocation(line: 3173, column: 9, scope: !3500)
!6784 = !DILocation(line: 3174, column: 7, scope: !6781)
!6785 = !DILocation(line: 3175, column: 9, scope: !6786)
!6786 = distinct !DILexicalBlock(scope: !3500, file: !1, line: 3175, column: 9)
!6787 = !DILocation(line: 3175, column: 16, scope: !6786)
!6788 = !DILocation(line: 3175, column: 9, scope: !3500)
!6789 = !DILocation(line: 3176, column: 7, scope: !6786)
!6790 = !DILocation(line: 1829, column: 3, scope: !3495)
!6791 = !DILocation(line: 3178, column: 7, scope: !6792)
!6792 = distinct !DILexicalBlock(scope: !3255, file: !1, line: 3178, column: 7)
!6793 = !DILocation(line: 3178, column: 14, scope: !6792)
!6794 = !DILocation(line: 3178, column: 20, scope: !6792)
!6795 = !DILocation(line: 3178, column: 7, scope: !3255)
!6796 = !DILocation(line: 3179, column: 12, scope: !6792)
!6797 = !DILocation(line: 3179, column: 5, scope: !6792)
!6798 = !DILocation(line: 3183, column: 23, scope: !3255)
!6799 = !DILocation(line: 3183, column: 9, scope: !3255)
!6800 = !DILocation(line: 3183, column: 8, scope: !3255)
!6801 = !DILocation(line: 3184, column: 7, scope: !6802)
!6802 = distinct !DILexicalBlock(scope: !3255, file: !1, line: 3184, column: 7)
!6803 = !DILocation(line: 3184, column: 22, scope: !6802)
!6804 = !DILocation(line: 3184, column: 7, scope: !3255)
!6805 = !DILocation(line: 3185, column: 61, scope: !6802)
!6806 = !DILocation(line: 3185, column: 38, scope: !6802)
!6807 = !DILocation(line: 3185, column: 20, scope: !6802)
!6808 = !DILocation(line: 3185, column: 19, scope: !6802)
!6809 = !DILocation(line: 3185, column: 5, scope: !6802)
!6810 = !DILocation(line: 3186, column: 27, scope: !3255)
!6811 = !DILocation(line: 3186, column: 13, scope: !3255)
!6812 = !DILocation(line: 3186, column: 12, scope: !3255)
!6813 = !DILocation(line: 3187, column: 3, scope: !3255)
!6814 = !DILocation(line: 3187, column: 11, scope: !6815)
!6815 = distinct !DILexicalBlock(scope: !6816, file: !1, line: 3187, column: 3)
!6816 = distinct !DILexicalBlock(scope: !3255, file: !1, line: 3187, column: 3)
!6817 = !DILocation(line: 3187, column: 13, scope: !6815)
!6818 = !DILocation(line: 3187, column: 3, scope: !6816)
!6819 = !DILocation(line: 3188, column: 40, scope: !6815)
!6820 = !DILocation(line: 3188, column: 56, scope: !6815)
!6821 = !DILocation(line: 3188, column: 24, scope: !6815)
!6822 = !DILocation(line: 3188, column: 5, scope: !6815)
!6823 = !DILocation(line: 3188, column: 21, scope: !6815)
!6824 = !DILocation(line: 3188, column: 23, scope: !6815)
!6825 = !DILocation(line: 3187, column: 20, scope: !6815)
!6826 = !DILocation(line: 3187, column: 3, scope: !6815)
!6827 = distinct !{!6827, !6818, !6828}
!6828 = !DILocation(line: 3188, column: 58, scope: !6816)
!6829 = !DILocation(line: 3189, column: 56, scope: !3255)
!6830 = !DILocation(line: 3189, column: 33, scope: !3255)
!6831 = !DILocation(line: 3189, column: 19, scope: !3255)
!6832 = !DILocation(line: 3189, column: 18, scope: !3255)
!6833 = !DILocation(line: 3190, column: 7, scope: !6834)
!6834 = distinct !DILexicalBlock(scope: !3255, file: !1, line: 3190, column: 7)
!6835 = !DILocation(line: 3190, column: 14, scope: !6834)
!6836 = !DILocation(line: 3190, column: 7, scope: !3255)
!6837 = !DILocation(line: 3191, column: 5, scope: !6838)
!6838 = distinct !DILexicalBlock(scope: !6839, file: !1, line: 3191, column: 5)
!6839 = distinct !DILexicalBlock(scope: !6834, file: !1, line: 3191, column: 5)
!6840 = !DILocation(line: 3191, column: 5, scope: !6839)
!6841 = !DILocation(line: 3193, column: 10, scope: !3255)
!6842 = !DILocation(line: 3193, column: 17, scope: !3255)
!6843 = !DILocation(line: 3193, column: 3, scope: !3255)
!6844 = !DILocation(line: 3194, column: 1, scope: !3255)
!6845 = distinct !DISubprogram(name: "GetAffineMatrix", scope: !1, file: !1, line: 4777, type: !6846, scopeLine: 4778, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1236)
!6846 = !DISubroutineType(types: !6847)
!6847 = !{null, !6848}
!6848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !724, size: 64)
!6849 = !DILocalVariable(name: "affine_matrix", arg: 1, scope: !6845, file: !1, line: 4777, type: !6848)
!6850 = !DILocation(line: 4777, column: 49, scope: !6845)
!6851 = !DILocation(line: 4779, column: 10, scope: !6845)
!6852 = !DILocation(line: 4781, column: 28, scope: !6845)
!6853 = !DILocation(line: 4781, column: 10, scope: !6845)
!6854 = !DILocation(line: 4782, column: 3, scope: !6845)
!6855 = !DILocation(line: 4782, column: 18, scope: !6845)
!6856 = !DILocation(line: 4782, column: 20, scope: !6845)
!6857 = !DILocation(line: 4783, column: 3, scope: !6845)
!6858 = !DILocation(line: 4783, column: 18, scope: !6845)
!6859 = !DILocation(line: 4783, column: 20, scope: !6845)
!6860 = !DILocation(line: 4784, column: 1, scope: !6845)
!6861 = distinct !DISubprogram(name: "StringToDouble", scope: !6862, file: !6862, line: 42, type: !6863, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1236)
!6862 = !DIFile(filename: "./magick/string-private.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!6863 = !DISubroutineType(types: !6864)
!6864 = !{!728, !6865, !6866}
!6865 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !904)
!6866 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1195)
!6867 = !DILocalVariable(name: "string", arg: 1, scope: !6861, file: !6862, line: 42, type: !6865)
!6868 = !DILocation(line: 42, column: 58, scope: !6861)
!6869 = !DILocalVariable(name: "sentinal", arg: 2, scope: !6861, file: !6862, line: 43, type: !6866)
!6870 = !DILocation(line: 43, column: 19, scope: !6861)
!6871 = !DILocation(line: 45, column: 31, scope: !6861)
!6872 = !DILocation(line: 45, column: 38, scope: !6861)
!6873 = !DILocation(line: 45, column: 10, scope: !6861)
!6874 = !DILocation(line: 45, column: 3, scope: !6861)
!6875 = distinct !DISubprogram(name: "DrawPatternPath", scope: !1, file: !1, line: 3545, type: !6876, scopeLine: 3547, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1236)
!6876 = !DISubroutineType(types: !6877)
!6877 = !{!777, !801, !1525, !904, !6878}
!6878 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !801, size: 64)
!6879 = !DILocalVariable(name: "image", arg: 1, scope: !6875, file: !1, line: 3545, type: !801)
!6880 = !DILocation(line: 3545, column: 55, scope: !6875)
!6881 = !DILocalVariable(name: "draw_info", arg: 2, scope: !6875, file: !1, line: 3546, type: !1525)
!6882 = !DILocation(line: 3546, column: 19, scope: !6875)
!6883 = !DILocalVariable(name: "name", arg: 3, scope: !6875, file: !1, line: 3546, type: !904)
!6884 = !DILocation(line: 3546, column: 41, scope: !6875)
!6885 = !DILocalVariable(name: "pattern", arg: 4, scope: !6875, file: !1, line: 3546, type: !6878)
!6886 = !DILocation(line: 3546, column: 54, scope: !6875)
!6887 = !DILocalVariable(name: "property", scope: !6875, file: !1, line: 3549, type: !924)
!6888 = !DILocation(line: 3549, column: 5, scope: !6875)
!6889 = !DILocalVariable(name: "geometry", scope: !6875, file: !1, line: 3552, type: !904)
!6890 = !DILocation(line: 3552, column: 6, scope: !6875)
!6891 = !DILocalVariable(name: "path", scope: !6875, file: !1, line: 3553, type: !904)
!6892 = !DILocation(line: 3553, column: 6, scope: !6875)
!6893 = !DILocalVariable(name: "clone_info", scope: !6875, file: !1, line: 3556, type: !699)
!6894 = !DILocation(line: 3556, column: 6, scope: !6875)
!6895 = !DILocalVariable(name: "image_info", scope: !6875, file: !1, line: 3559, type: !1051)
!6896 = !DILocation(line: 3559, column: 6, scope: !6875)
!6897 = !DILocalVariable(name: "status", scope: !6875, file: !1, line: 3562, type: !777)
!6898 = !DILocation(line: 3562, column: 5, scope: !6875)
!6899 = !DILocation(line: 3566, column: 7, scope: !6900)
!6900 = distinct !DILexicalBlock(scope: !6875, file: !1, line: 3566, column: 7)
!6901 = !DILocation(line: 3566, column: 14, scope: !6900)
!6902 = !DILocation(line: 3566, column: 20, scope: !6900)
!6903 = !DILocation(line: 3566, column: 7, scope: !6875)
!6904 = !DILocation(line: 3567, column: 61, scope: !6900)
!6905 = !DILocation(line: 3567, column: 68, scope: !6900)
!6906 = !DILocation(line: 3567, column: 12, scope: !6900)
!6907 = !DILocation(line: 3567, column: 5, scope: !6900)
!6908 = !DILocation(line: 3570, column: 29, scope: !6875)
!6909 = !DILocation(line: 3570, column: 57, scope: !6875)
!6910 = !DILocation(line: 3570, column: 10, scope: !6875)
!6911 = !DILocation(line: 3571, column: 25, scope: !6875)
!6912 = !DILocation(line: 3571, column: 31, scope: !6875)
!6913 = !DILocation(line: 3571, column: 8, scope: !6875)
!6914 = !DILocation(line: 3571, column: 7, scope: !6875)
!6915 = !DILocation(line: 3572, column: 7, scope: !6916)
!6916 = distinct !DILexicalBlock(scope: !6875, file: !1, line: 3572, column: 7)
!6917 = !DILocation(line: 3572, column: 12, scope: !6916)
!6918 = !DILocation(line: 3572, column: 7, scope: !6875)
!6919 = !DILocation(line: 3573, column: 5, scope: !6916)
!6920 = !DILocation(line: 3574, column: 29, scope: !6875)
!6921 = !DILocation(line: 3574, column: 66, scope: !6875)
!6922 = !DILocation(line: 3574, column: 10, scope: !6875)
!6923 = !DILocation(line: 3575, column: 29, scope: !6875)
!6924 = !DILocation(line: 3575, column: 35, scope: !6875)
!6925 = !DILocation(line: 3575, column: 12, scope: !6875)
!6926 = !DILocation(line: 3575, column: 11, scope: !6875)
!6927 = !DILocation(line: 3576, column: 7, scope: !6928)
!6928 = distinct !DILexicalBlock(scope: !6875, file: !1, line: 3576, column: 7)
!6929 = !DILocation(line: 3576, column: 16, scope: !6928)
!6930 = !DILocation(line: 3576, column: 7, scope: !6875)
!6931 = !DILocation(line: 3577, column: 5, scope: !6928)
!6932 = !DILocation(line: 3578, column: 9, scope: !6933)
!6933 = distinct !DILexicalBlock(scope: !6875, file: !1, line: 3578, column: 7)
!6934 = !DILocation(line: 3578, column: 8, scope: !6933)
!6935 = !DILocation(line: 3578, column: 18, scope: !6933)
!6936 = !DILocation(line: 3578, column: 7, scope: !6875)
!6937 = !DILocation(line: 3579, column: 28, scope: !6933)
!6938 = !DILocation(line: 3579, column: 27, scope: !6933)
!6939 = !DILocation(line: 3579, column: 14, scope: !6933)
!6940 = !DILocation(line: 3579, column: 6, scope: !6933)
!6941 = !DILocation(line: 3579, column: 13, scope: !6933)
!6942 = !DILocation(line: 3579, column: 5, scope: !6933)
!6943 = !DILocation(line: 3580, column: 14, scope: !6875)
!6944 = !DILocation(line: 3580, column: 13, scope: !6875)
!6945 = !DILocation(line: 3581, column: 34, scope: !6875)
!6946 = !DILocation(line: 3581, column: 20, scope: !6875)
!6947 = !DILocation(line: 3581, column: 3, scope: !6875)
!6948 = !DILocation(line: 3581, column: 15, scope: !6875)
!6949 = !DILocation(line: 3581, column: 19, scope: !6875)
!6950 = !DILocation(line: 3582, column: 25, scope: !6875)
!6951 = !DILocation(line: 3582, column: 12, scope: !6875)
!6952 = !DILocation(line: 3582, column: 4, scope: !6875)
!6953 = !DILocation(line: 3582, column: 11, scope: !6875)
!6954 = !DILocation(line: 3583, column: 31, scope: !6875)
!6955 = !DILocation(line: 3583, column: 14, scope: !6875)
!6956 = !DILocation(line: 3583, column: 13, scope: !6875)
!6957 = !DILocation(line: 3584, column: 44, scope: !6875)
!6958 = !DILocation(line: 3584, column: 43, scope: !6875)
!6959 = !DILocation(line: 3584, column: 54, scope: !6875)
!6960 = !DILocation(line: 3585, column: 6, scope: !6875)
!6961 = !DILocation(line: 3585, column: 13, scope: !6875)
!6962 = !DILocation(line: 3584, column: 10, scope: !6875)
!6963 = !DILocation(line: 3586, column: 35, scope: !6875)
!6964 = !DILocation(line: 3586, column: 34, scope: !6875)
!6965 = !DILocation(line: 3586, column: 10, scope: !6875)
!6966 = !DILocation(line: 3587, column: 7, scope: !6967)
!6967 = distinct !DILexicalBlock(scope: !6875, file: !1, line: 3587, column: 7)
!6968 = !DILocation(line: 3587, column: 14, scope: !6967)
!6969 = !DILocation(line: 3587, column: 20, scope: !6967)
!6970 = !DILocation(line: 3587, column: 7, scope: !6875)
!6971 = !DILocation(line: 3589, column: 34, scope: !6967)
!6972 = !DILocation(line: 3589, column: 39, scope: !6967)
!6973 = !DILocation(line: 3588, column: 12, scope: !6967)
!6974 = !DILocation(line: 3588, column: 5, scope: !6967)
!6975 = !DILocation(line: 3590, column: 47, scope: !6875)
!6976 = !DILocation(line: 3590, column: 14, scope: !6875)
!6977 = !DILocation(line: 3590, column: 13, scope: !6875)
!6978 = !DILocation(line: 3591, column: 28, scope: !6875)
!6979 = !DILocation(line: 3591, column: 3, scope: !6875)
!6980 = !DILocation(line: 3591, column: 15, scope: !6875)
!6981 = !DILocation(line: 3591, column: 27, scope: !6875)
!6982 = !DILocation(line: 3592, column: 30, scope: !6875)
!6983 = !DILocation(line: 3592, column: 3, scope: !6875)
!6984 = !DILocation(line: 3592, column: 15, scope: !6875)
!6985 = !DILocation(line: 3592, column: 29, scope: !6875)
!6986 = !DILocation(line: 3593, column: 23, scope: !6875)
!6987 = !DILocation(line: 3593, column: 35, scope: !6875)
!6988 = !DILocation(line: 3593, column: 45, scope: !6875)
!6989 = !DILocation(line: 3593, column: 10, scope: !6875)
!6990 = !DILocation(line: 3594, column: 21, scope: !6875)
!6991 = !DILocation(line: 3594, column: 20, scope: !6875)
!6992 = !DILocation(line: 3594, column: 29, scope: !6875)
!6993 = !DILocation(line: 3594, column: 10, scope: !6875)
!6994 = !DILocation(line: 3594, column: 9, scope: !6875)
!6995 = !DILocation(line: 3595, column: 30, scope: !6875)
!6996 = !DILocation(line: 3595, column: 14, scope: !6875)
!6997 = !DILocation(line: 3595, column: 13, scope: !6875)
!6998 = !DILocation(line: 3596, column: 7, scope: !6999)
!6999 = distinct !DILexicalBlock(scope: !6875, file: !1, line: 3596, column: 7)
!7000 = !DILocation(line: 3596, column: 14, scope: !6999)
!7001 = !DILocation(line: 3596, column: 20, scope: !6999)
!7002 = !DILocation(line: 3596, column: 7, scope: !6875)
!7003 = !DILocation(line: 3597, column: 12, scope: !6999)
!7004 = !DILocation(line: 3597, column: 5, scope: !6999)
!7005 = !DILocation(line: 3598, column: 10, scope: !6875)
!7006 = !DILocation(line: 3598, column: 3, scope: !6875)
!7007 = !DILocation(line: 3599, column: 1, scope: !6875)
!7008 = distinct !DISubprogram(name: "ClampToQuantum", scope: !174, file: !174, line: 87, type: !7009, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1236)
!7009 = !DISubroutineType(types: !7010)
!7010 = !{!741, !2999}
!7011 = !DILocalVariable(name: "value", arg: 1, scope: !7008, file: !174, line: 87, type: !2999)
!7012 = !DILocation(line: 87, column: 59, scope: !7008)
!7013 = !DILocation(line: 92, column: 7, scope: !7014)
!7014 = distinct !DILexicalBlock(scope: !7008, file: !174, line: 92, column: 7)
!7015 = !DILocation(line: 92, column: 13, scope: !7014)
!7016 = !DILocation(line: 92, column: 7, scope: !7008)
!7017 = !DILocation(line: 93, column: 5, scope: !7014)
!7018 = !DILocation(line: 94, column: 7, scope: !7019)
!7019 = distinct !DILexicalBlock(scope: !7008, file: !174, line: 94, column: 7)
!7020 = !DILocation(line: 94, column: 13, scope: !7019)
!7021 = !DILocation(line: 94, column: 7, scope: !7008)
!7022 = !DILocation(line: 95, column: 5, scope: !7019)
!7023 = !DILocation(line: 96, column: 21, scope: !7008)
!7024 = !DILocation(line: 96, column: 26, scope: !7008)
!7025 = !DILocation(line: 96, column: 10, scope: !7008)
!7026 = !DILocation(line: 96, column: 3, scope: !7008)
!7027 = !DILocation(line: 98, column: 1, scope: !7008)
!7028 = distinct !DISubprogram(name: "StringToUnsignedLong", scope: !6862, file: !6862, line: 73, type: !7029, scopeLine: 74, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1236)
!7029 = !DISubroutineType(types: !7030)
!7030 = !{!714, !6865}
!7031 = !DILocalVariable(name: "value", arg: 1, scope: !7028, file: !6862, line: 73, type: !6865)
!7032 = !DILocation(line: 73, column: 71, scope: !7028)
!7033 = !DILocation(line: 75, column: 18, scope: !7028)
!7034 = !DILocation(line: 75, column: 10, scope: !7028)
!7035 = !DILocation(line: 75, column: 3, scope: !7028)
!7036 = distinct !DISubprogram(name: "DegreesToRadians", scope: !7037, file: !7037, line: 54, type: !7038, scopeLine: 55, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1236)
!7037 = !DIFile(filename: "./magick/image-private.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!7038 = !DISubroutineType(types: !7039)
!7039 = !{!728, !2570}
!7040 = !DILocalVariable(name: "degrees", arg: 1, scope: !7036, file: !7037, line: 54, type: !2570)
!7041 = !DILocation(line: 54, column: 52, scope: !7036)
!7042 = !DILocation(line: 56, column: 29, scope: !7036)
!7043 = !DILocation(line: 56, column: 28, scope: !7036)
!7044 = !DILocation(line: 56, column: 36, scope: !7036)
!7045 = !DILocation(line: 56, column: 3, scope: !7036)
!7046 = distinct !DISubprogram(name: "StringToLong", scope: !6862, file: !6862, line: 68, type: !7047, scopeLine: 69, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1236)
!7047 = !DISubroutineType(types: !7048)
!7048 = !{!721, !6865}
!7049 = !DILocalVariable(name: "value", arg: 1, scope: !7046, file: !6862, line: 68, type: !6865)
!7050 = !DILocation(line: 68, column: 54, scope: !7046)
!7051 = !DILocation(line: 70, column: 17, scope: !7046)
!7052 = !DILocation(line: 70, column: 10, scope: !7046)
!7053 = !DILocation(line: 70, column: 3, scope: !7046)
!7054 = distinct !DISubprogram(name: "IsPoint", scope: !1, file: !1, line: 1685, type: !7055, scopeLine: 1686, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1236)
!7055 = !DISubroutineType(types: !7056)
!7056 = !{!777, !904}
!7057 = !DILocalVariable(name: "point", arg: 1, scope: !7054, file: !1, line: 1685, type: !904)
!7058 = !DILocation(line: 1685, column: 53, scope: !7054)
!7059 = !DILocalVariable(name: "p", scope: !7054, file: !1, line: 1688, type: !704)
!7060 = !DILocation(line: 1688, column: 6, scope: !7054)
!7061 = !DILocalVariable(name: "value", scope: !7054, file: !1, line: 1691, type: !728)
!7062 = !DILocation(line: 1691, column: 5, scope: !7054)
!7063 = !DILocation(line: 1693, column: 24, scope: !7054)
!7064 = !DILocation(line: 1693, column: 9, scope: !7054)
!7065 = !DILocation(line: 1693, column: 8, scope: !7054)
!7066 = !DILocation(line: 1694, column: 11, scope: !7054)
!7067 = !DILocation(line: 1694, column: 17, scope: !7054)
!7068 = !DILocation(line: 1694, column: 25, scope: !7054)
!7069 = !DILocation(line: 1694, column: 29, scope: !7054)
!7070 = !DILocation(line: 1694, column: 34, scope: !7054)
!7071 = !DILocation(line: 1694, column: 31, scope: !7054)
!7072 = !DILocation(line: 0, scope: !7054)
!7073 = !DILocation(line: 1694, column: 10, scope: !7054)
!7074 = !DILocation(line: 1694, column: 3, scope: !7054)
!7075 = distinct !DISubprogram(name: "TracePoint", scope: !1, file: !1, line: 1697, type: !7076, scopeLine: 1699, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1236)
!7076 = !DISubroutineType(types: !7077)
!7077 = !{null, !1184, !7078}
!7078 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !794)
!7079 = !DILocalVariable(name: "primitive_info", arg: 1, scope: !7075, file: !1, line: 1697, type: !1184)
!7080 = !DILocation(line: 1697, column: 46, scope: !7075)
!7081 = !DILocalVariable(name: "point", arg: 2, scope: !7075, file: !1, line: 1698, type: !7078)
!7082 = !DILocation(line: 1698, column: 19, scope: !7075)
!7083 = !DILocation(line: 1700, column: 3, scope: !7075)
!7084 = !DILocation(line: 1700, column: 19, scope: !7075)
!7085 = !DILocation(line: 1700, column: 30, scope: !7075)
!7086 = !DILocation(line: 1701, column: 3, scope: !7075)
!7087 = !DILocation(line: 1701, column: 19, scope: !7075)
!7088 = !DILocation(line: 1701, column: 25, scope: !7075)
!7089 = !DILocation(line: 1702, column: 1, scope: !7075)
!7090 = distinct !DISubprogram(name: "TraceLine", scope: !1, file: !1, line: 5267, type: !7091, scopeLine: 5269, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1236)
!7091 = !DISubroutineType(types: !7092)
!7092 = !{null, !1184, !7078, !7078}
!7093 = !DILocalVariable(name: "primitive_info", arg: 1, scope: !7090, file: !1, line: 5267, type: !1184)
!7094 = !DILocation(line: 5267, column: 38, scope: !7090)
!7095 = !DILocalVariable(name: "start", arg: 2, scope: !7090, file: !1, line: 5267, type: !7078)
!7096 = !DILocation(line: 5267, column: 69, scope: !7090)
!7097 = !DILocalVariable(name: "end", arg: 3, scope: !7090, file: !1, line: 5268, type: !7078)
!7098 = !DILocation(line: 5268, column: 19, scope: !7090)
!7099 = !DILocation(line: 5270, column: 14, scope: !7090)
!7100 = !DILocation(line: 5270, column: 3, scope: !7090)
!7101 = !DILocation(line: 5271, column: 19, scope: !7102)
!7102 = distinct !DILexicalBlock(scope: !7090, file: !1, line: 5271, column: 7)
!7103 = !DILocation(line: 5271, column: 25, scope: !7102)
!7104 = !DILocation(line: 5271, column: 20, scope: !7102)
!7105 = !DILocation(line: 5271, column: 8, scope: !7102)
!7106 = !DILocation(line: 5271, column: 28, scope: !7102)
!7107 = !DILocation(line: 5271, column: 45, scope: !7102)
!7108 = !DILocation(line: 5272, column: 19, scope: !7102)
!7109 = !DILocation(line: 5272, column: 25, scope: !7102)
!7110 = !DILocation(line: 5272, column: 20, scope: !7102)
!7111 = !DILocation(line: 5272, column: 8, scope: !7102)
!7112 = !DILocation(line: 5272, column: 28, scope: !7102)
!7113 = !DILocation(line: 5271, column: 7, scope: !7090)
!7114 = !DILocation(line: 5274, column: 7, scope: !7115)
!7115 = distinct !DILexicalBlock(scope: !7102, file: !1, line: 5273, column: 5)
!7116 = !DILocation(line: 5274, column: 23, scope: !7115)
!7117 = !DILocation(line: 5274, column: 32, scope: !7115)
!7118 = !DILocation(line: 5275, column: 7, scope: !7115)
!7119 = !DILocation(line: 5275, column: 23, scope: !7115)
!7120 = !DILocation(line: 5275, column: 34, scope: !7115)
!7121 = !DILocation(line: 5276, column: 7, scope: !7115)
!7122 = !DILocation(line: 5278, column: 14, scope: !7090)
!7123 = !DILocation(line: 5278, column: 28, scope: !7090)
!7124 = !DILocation(line: 5278, column: 3, scope: !7090)
!7125 = !DILocation(line: 5279, column: 33, scope: !7090)
!7126 = !DILocation(line: 5279, column: 49, scope: !7090)
!7127 = !DILocation(line: 5279, column: 4, scope: !7090)
!7128 = !DILocation(line: 5279, column: 18, scope: !7090)
!7129 = !DILocation(line: 5279, column: 23, scope: !7090)
!7130 = !DILocation(line: 5279, column: 32, scope: !7090)
!7131 = !DILocation(line: 5280, column: 3, scope: !7090)
!7132 = !DILocation(line: 5280, column: 19, scope: !7090)
!7133 = !DILocation(line: 5280, column: 30, scope: !7090)
!7134 = !DILocation(line: 5281, column: 1, scope: !7090)
!7135 = distinct !DISubprogram(name: "TraceRectangle", scope: !1, file: !1, line: 5659, type: !7091, scopeLine: 5661, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1236)
!7136 = !DILocalVariable(name: "primitive_info", arg: 1, scope: !7135, file: !1, line: 5659, type: !1184)
!7137 = !DILocation(line: 5659, column: 43, scope: !7135)
!7138 = !DILocalVariable(name: "start", arg: 2, scope: !7135, file: !1, line: 5659, type: !7078)
!7139 = !DILocation(line: 5659, column: 74, scope: !7135)
!7140 = !DILocalVariable(name: "end", arg: 3, scope: !7135, file: !1, line: 5660, type: !7078)
!7141 = !DILocation(line: 5660, column: 19, scope: !7135)
!7142 = !DILocalVariable(name: "point", scope: !7135, file: !1, line: 5663, type: !794)
!7143 = !DILocation(line: 5663, column: 5, scope: !7135)
!7144 = !DILocalVariable(name: "p", scope: !7135, file: !1, line: 5666, type: !1184)
!7145 = !DILocation(line: 5666, column: 6, scope: !7135)
!7146 = !DILocalVariable(name: "i", scope: !7135, file: !1, line: 5669, type: !717)
!7147 = !DILocation(line: 5669, column: 5, scope: !7135)
!7148 = !DILocation(line: 5671, column: 5, scope: !7135)
!7149 = !DILocation(line: 5671, column: 4, scope: !7135)
!7150 = !DILocation(line: 5672, column: 14, scope: !7135)
!7151 = !DILocation(line: 5672, column: 3, scope: !7135)
!7152 = !DILocation(line: 5673, column: 6, scope: !7135)
!7153 = !DILocation(line: 5673, column: 9, scope: !7135)
!7154 = !DILocation(line: 5673, column: 4, scope: !7135)
!7155 = !DILocation(line: 5674, column: 17, scope: !7135)
!7156 = !DILocation(line: 5674, column: 9, scope: !7135)
!7157 = !DILocation(line: 5674, column: 10, scope: !7135)
!7158 = !DILocation(line: 5675, column: 15, scope: !7135)
!7159 = !DILocation(line: 5675, column: 9, scope: !7135)
!7160 = !DILocation(line: 5675, column: 10, scope: !7135)
!7161 = !DILocation(line: 5676, column: 14, scope: !7135)
!7162 = !DILocation(line: 5676, column: 3, scope: !7135)
!7163 = !DILocation(line: 5677, column: 6, scope: !7135)
!7164 = !DILocation(line: 5677, column: 9, scope: !7135)
!7165 = !DILocation(line: 5677, column: 4, scope: !7135)
!7166 = !DILocation(line: 5678, column: 14, scope: !7135)
!7167 = !DILocation(line: 5678, column: 3, scope: !7135)
!7168 = !DILocation(line: 5679, column: 6, scope: !7135)
!7169 = !DILocation(line: 5679, column: 9, scope: !7135)
!7170 = !DILocation(line: 5679, column: 4, scope: !7135)
!7171 = !DILocation(line: 5680, column: 15, scope: !7135)
!7172 = !DILocation(line: 5680, column: 9, scope: !7135)
!7173 = !DILocation(line: 5680, column: 10, scope: !7135)
!7174 = !DILocation(line: 5681, column: 17, scope: !7135)
!7175 = !DILocation(line: 5681, column: 9, scope: !7135)
!7176 = !DILocation(line: 5681, column: 10, scope: !7135)
!7177 = !DILocation(line: 5682, column: 14, scope: !7135)
!7178 = !DILocation(line: 5682, column: 3, scope: !7135)
!7179 = !DILocation(line: 5683, column: 6, scope: !7135)
!7180 = !DILocation(line: 5683, column: 9, scope: !7135)
!7181 = !DILocation(line: 5683, column: 4, scope: !7135)
!7182 = !DILocation(line: 5684, column: 14, scope: !7135)
!7183 = !DILocation(line: 5684, column: 3, scope: !7135)
!7184 = !DILocation(line: 5685, column: 6, scope: !7135)
!7185 = !DILocation(line: 5685, column: 9, scope: !7135)
!7186 = !DILocation(line: 5685, column: 4, scope: !7135)
!7187 = !DILocation(line: 5686, column: 41, scope: !7135)
!7188 = !DILocation(line: 5686, column: 43, scope: !7135)
!7189 = !DILocation(line: 5686, column: 42, scope: !7135)
!7190 = !DILocation(line: 5686, column: 3, scope: !7135)
!7191 = !DILocation(line: 5686, column: 19, scope: !7135)
!7192 = !DILocation(line: 5686, column: 30, scope: !7135)
!7193 = !DILocation(line: 5687, column: 9, scope: !7194)
!7194 = distinct !DILexicalBlock(scope: !7135, file: !1, line: 5687, column: 3)
!7195 = !DILocation(line: 5687, column: 8, scope: !7194)
!7196 = !DILocation(line: 5687, column: 13, scope: !7197)
!7197 = distinct !DILexicalBlock(scope: !7194, file: !1, line: 5687, column: 3)
!7198 = !DILocation(line: 5687, column: 27, scope: !7197)
!7199 = !DILocation(line: 5687, column: 43, scope: !7197)
!7200 = !DILocation(line: 5687, column: 15, scope: !7197)
!7201 = !DILocation(line: 5687, column: 3, scope: !7194)
!7202 = !DILocation(line: 5689, column: 18, scope: !7203)
!7203 = distinct !DILexicalBlock(scope: !7197, file: !1, line: 5688, column: 3)
!7204 = !DILocation(line: 5689, column: 34, scope: !7203)
!7205 = !DILocation(line: 5689, column: 5, scope: !7203)
!7206 = !DILocation(line: 5689, column: 8, scope: !7203)
!7207 = !DILocation(line: 5689, column: 17, scope: !7203)
!7208 = !DILocation(line: 5690, column: 6, scope: !7203)
!7209 = !DILocation(line: 5691, column: 3, scope: !7203)
!7210 = !DILocation(line: 5687, column: 57, scope: !7197)
!7211 = !DILocation(line: 5687, column: 3, scope: !7197)
!7212 = distinct !{!7212, !7201, !7213}
!7213 = !DILocation(line: 5691, column: 3, scope: !7194)
!7214 = !DILocation(line: 5692, column: 1, scope: !7135)
!7215 = distinct !DISubprogram(name: "TraceRoundRectangle", scope: !1, file: !1, line: 5694, type: !7216, scopeLine: 5696, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1236)
!7216 = !DISubroutineType(types: !7217)
!7217 = !{null, !1184, !7078, !7078, !794}
!7218 = !DILocalVariable(name: "primitive_info", arg: 1, scope: !7215, file: !1, line: 5694, type: !1184)
!7219 = !DILocation(line: 5694, column: 48, scope: !7215)
!7220 = !DILocalVariable(name: "start", arg: 2, scope: !7215, file: !1, line: 5695, type: !7078)
!7221 = !DILocation(line: 5695, column: 19, scope: !7215)
!7222 = !DILocalVariable(name: "end", arg: 3, scope: !7215, file: !1, line: 5695, type: !7078)
!7223 = !DILocation(line: 5695, column: 41, scope: !7215)
!7224 = !DILocalVariable(name: "arc", arg: 4, scope: !7215, file: !1, line: 5695, type: !794)
!7225 = !DILocation(line: 5695, column: 55, scope: !7215)
!7226 = !DILocalVariable(name: "degrees", scope: !7215, file: !1, line: 5698, type: !794)
!7227 = !DILocation(line: 5698, column: 5, scope: !7215)
!7228 = !DILocalVariable(name: "offset", scope: !7215, file: !1, line: 5699, type: !794)
!7229 = !DILocation(line: 5699, column: 5, scope: !7215)
!7230 = !DILocalVariable(name: "point", scope: !7215, file: !1, line: 5700, type: !794)
!7231 = !DILocation(line: 5700, column: 5, scope: !7215)
!7232 = !DILocalVariable(name: "p", scope: !7215, file: !1, line: 5703, type: !1184)
!7233 = !DILocation(line: 5703, column: 6, scope: !7215)
!7234 = !DILocalVariable(name: "i", scope: !7215, file: !1, line: 5706, type: !717)
!7235 = !DILocation(line: 5706, column: 5, scope: !7215)
!7236 = !DILocation(line: 5708, column: 5, scope: !7215)
!7237 = !DILocation(line: 5708, column: 4, scope: !7215)
!7238 = !DILocation(line: 5709, column: 21, scope: !7215)
!7239 = !DILocation(line: 5709, column: 29, scope: !7215)
!7240 = !DILocation(line: 5709, column: 22, scope: !7215)
!7241 = !DILocation(line: 5709, column: 12, scope: !7215)
!7242 = !DILocation(line: 5709, column: 10, scope: !7215)
!7243 = !DILocation(line: 5709, column: 11, scope: !7215)
!7244 = !DILocation(line: 5710, column: 21, scope: !7215)
!7245 = !DILocation(line: 5710, column: 29, scope: !7215)
!7246 = !DILocation(line: 5710, column: 22, scope: !7215)
!7247 = !DILocation(line: 5710, column: 12, scope: !7215)
!7248 = !DILocation(line: 5710, column: 10, scope: !7215)
!7249 = !DILocation(line: 5710, column: 11, scope: !7215)
!7250 = !DILocation(line: 5711, column: 11, scope: !7251)
!7251 = distinct !DILexicalBlock(scope: !7215, file: !1, line: 5711, column: 7)
!7252 = !DILocation(line: 5711, column: 27, scope: !7251)
!7253 = !DILocation(line: 5711, column: 19, scope: !7251)
!7254 = !DILocation(line: 5711, column: 13, scope: !7251)
!7255 = !DILocation(line: 5711, column: 7, scope: !7215)
!7256 = !DILocation(line: 5712, column: 22, scope: !7251)
!7257 = !DILocation(line: 5712, column: 14, scope: !7251)
!7258 = !DILocation(line: 5712, column: 9, scope: !7251)
!7259 = !DILocation(line: 5712, column: 10, scope: !7251)
!7260 = !DILocation(line: 5712, column: 5, scope: !7251)
!7261 = !DILocation(line: 5713, column: 11, scope: !7262)
!7262 = distinct !DILexicalBlock(scope: !7215, file: !1, line: 5713, column: 7)
!7263 = !DILocation(line: 5713, column: 27, scope: !7262)
!7264 = !DILocation(line: 5713, column: 19, scope: !7262)
!7265 = !DILocation(line: 5713, column: 13, scope: !7262)
!7266 = !DILocation(line: 5713, column: 7, scope: !7215)
!7267 = !DILocation(line: 5714, column: 22, scope: !7262)
!7268 = !DILocation(line: 5714, column: 14, scope: !7262)
!7269 = !DILocation(line: 5714, column: 9, scope: !7262)
!7270 = !DILocation(line: 5714, column: 10, scope: !7262)
!7271 = !DILocation(line: 5714, column: 5, scope: !7262)
!7272 = !DILocation(line: 5715, column: 17, scope: !7215)
!7273 = !DILocation(line: 5715, column: 26, scope: !7215)
!7274 = !DILocation(line: 5715, column: 18, scope: !7215)
!7275 = !DILocation(line: 5715, column: 32, scope: !7215)
!7276 = !DILocation(line: 5715, column: 27, scope: !7215)
!7277 = !DILocation(line: 5715, column: 9, scope: !7215)
!7278 = !DILocation(line: 5715, column: 10, scope: !7215)
!7279 = !DILocation(line: 5716, column: 17, scope: !7215)
!7280 = !DILocation(line: 5716, column: 23, scope: !7215)
!7281 = !DILocation(line: 5716, column: 18, scope: !7215)
!7282 = !DILocation(line: 5716, column: 9, scope: !7215)
!7283 = !DILocation(line: 5716, column: 10, scope: !7215)
!7284 = !DILocation(line: 5717, column: 11, scope: !7215)
!7285 = !DILocation(line: 5717, column: 12, scope: !7215)
!7286 = !DILocation(line: 5718, column: 11, scope: !7215)
!7287 = !DILocation(line: 5718, column: 12, scope: !7215)
!7288 = !DILocation(line: 5719, column: 16, scope: !7215)
!7289 = !DILocation(line: 5719, column: 3, scope: !7215)
!7290 = !DILocation(line: 5720, column: 6, scope: !7215)
!7291 = !DILocation(line: 5720, column: 9, scope: !7215)
!7292 = !DILocation(line: 5720, column: 4, scope: !7215)
!7293 = !DILocation(line: 5721, column: 17, scope: !7215)
!7294 = !DILocation(line: 5721, column: 26, scope: !7215)
!7295 = !DILocation(line: 5721, column: 18, scope: !7215)
!7296 = !DILocation(line: 5721, column: 32, scope: !7215)
!7297 = !DILocation(line: 5721, column: 27, scope: !7215)
!7298 = !DILocation(line: 5721, column: 9, scope: !7215)
!7299 = !DILocation(line: 5721, column: 10, scope: !7215)
!7300 = !DILocation(line: 5722, column: 17, scope: !7215)
!7301 = !DILocation(line: 5722, column: 26, scope: !7215)
!7302 = !DILocation(line: 5722, column: 18, scope: !7215)
!7303 = !DILocation(line: 5722, column: 32, scope: !7215)
!7304 = !DILocation(line: 5722, column: 27, scope: !7215)
!7305 = !DILocation(line: 5722, column: 9, scope: !7215)
!7306 = !DILocation(line: 5722, column: 10, scope: !7215)
!7307 = !DILocation(line: 5723, column: 11, scope: !7215)
!7308 = !DILocation(line: 5723, column: 12, scope: !7215)
!7309 = !DILocation(line: 5724, column: 11, scope: !7215)
!7310 = !DILocation(line: 5724, column: 12, scope: !7215)
!7311 = !DILocation(line: 5725, column: 16, scope: !7215)
!7312 = !DILocation(line: 5725, column: 3, scope: !7215)
!7313 = !DILocation(line: 5726, column: 6, scope: !7215)
!7314 = !DILocation(line: 5726, column: 9, scope: !7215)
!7315 = !DILocation(line: 5726, column: 4, scope: !7215)
!7316 = !DILocation(line: 5727, column: 17, scope: !7215)
!7317 = !DILocation(line: 5727, column: 23, scope: !7215)
!7318 = !DILocation(line: 5727, column: 18, scope: !7215)
!7319 = !DILocation(line: 5727, column: 9, scope: !7215)
!7320 = !DILocation(line: 5727, column: 10, scope: !7215)
!7321 = !DILocation(line: 5728, column: 17, scope: !7215)
!7322 = !DILocation(line: 5728, column: 26, scope: !7215)
!7323 = !DILocation(line: 5728, column: 18, scope: !7215)
!7324 = !DILocation(line: 5728, column: 32, scope: !7215)
!7325 = !DILocation(line: 5728, column: 27, scope: !7215)
!7326 = !DILocation(line: 5728, column: 9, scope: !7215)
!7327 = !DILocation(line: 5728, column: 10, scope: !7215)
!7328 = !DILocation(line: 5729, column: 11, scope: !7215)
!7329 = !DILocation(line: 5729, column: 12, scope: !7215)
!7330 = !DILocation(line: 5730, column: 11, scope: !7215)
!7331 = !DILocation(line: 5730, column: 12, scope: !7215)
!7332 = !DILocation(line: 5731, column: 16, scope: !7215)
!7333 = !DILocation(line: 5731, column: 3, scope: !7215)
!7334 = !DILocation(line: 5732, column: 6, scope: !7215)
!7335 = !DILocation(line: 5732, column: 9, scope: !7215)
!7336 = !DILocation(line: 5732, column: 4, scope: !7215)
!7337 = !DILocation(line: 5733, column: 17, scope: !7215)
!7338 = !DILocation(line: 5733, column: 23, scope: !7215)
!7339 = !DILocation(line: 5733, column: 18, scope: !7215)
!7340 = !DILocation(line: 5733, column: 9, scope: !7215)
!7341 = !DILocation(line: 5733, column: 10, scope: !7215)
!7342 = !DILocation(line: 5734, column: 17, scope: !7215)
!7343 = !DILocation(line: 5734, column: 23, scope: !7215)
!7344 = !DILocation(line: 5734, column: 18, scope: !7215)
!7345 = !DILocation(line: 5734, column: 9, scope: !7215)
!7346 = !DILocation(line: 5734, column: 10, scope: !7215)
!7347 = !DILocation(line: 5735, column: 11, scope: !7215)
!7348 = !DILocation(line: 5735, column: 12, scope: !7215)
!7349 = !DILocation(line: 5736, column: 11, scope: !7215)
!7350 = !DILocation(line: 5736, column: 12, scope: !7215)
!7351 = !DILocation(line: 5737, column: 16, scope: !7215)
!7352 = !DILocation(line: 5737, column: 3, scope: !7215)
!7353 = !DILocation(line: 5738, column: 6, scope: !7215)
!7354 = !DILocation(line: 5738, column: 9, scope: !7215)
!7355 = !DILocation(line: 5738, column: 4, scope: !7215)
!7356 = !DILocation(line: 5739, column: 14, scope: !7215)
!7357 = !DILocation(line: 5739, column: 16, scope: !7215)
!7358 = !DILocation(line: 5739, column: 32, scope: !7215)
!7359 = !DILocation(line: 5739, column: 3, scope: !7215)
!7360 = !DILocation(line: 5740, column: 6, scope: !7215)
!7361 = !DILocation(line: 5740, column: 9, scope: !7215)
!7362 = !DILocation(line: 5740, column: 4, scope: !7215)
!7363 = !DILocation(line: 5741, column: 41, scope: !7215)
!7364 = !DILocation(line: 5741, column: 43, scope: !7215)
!7365 = !DILocation(line: 5741, column: 42, scope: !7215)
!7366 = !DILocation(line: 5741, column: 3, scope: !7215)
!7367 = !DILocation(line: 5741, column: 19, scope: !7215)
!7368 = !DILocation(line: 5741, column: 30, scope: !7215)
!7369 = !DILocation(line: 5742, column: 9, scope: !7370)
!7370 = distinct !DILexicalBlock(scope: !7215, file: !1, line: 5742, column: 3)
!7371 = !DILocation(line: 5742, column: 8, scope: !7370)
!7372 = !DILocation(line: 5742, column: 13, scope: !7373)
!7373 = distinct !DILexicalBlock(scope: !7370, file: !1, line: 5742, column: 3)
!7374 = !DILocation(line: 5742, column: 27, scope: !7373)
!7375 = !DILocation(line: 5742, column: 43, scope: !7373)
!7376 = !DILocation(line: 5742, column: 15, scope: !7373)
!7377 = !DILocation(line: 5742, column: 3, scope: !7370)
!7378 = !DILocation(line: 5744, column: 18, scope: !7379)
!7379 = distinct !DILexicalBlock(scope: !7373, file: !1, line: 5743, column: 3)
!7380 = !DILocation(line: 5744, column: 34, scope: !7379)
!7381 = !DILocation(line: 5744, column: 5, scope: !7379)
!7382 = !DILocation(line: 5744, column: 8, scope: !7379)
!7383 = !DILocation(line: 5744, column: 17, scope: !7379)
!7384 = !DILocation(line: 5745, column: 6, scope: !7379)
!7385 = !DILocation(line: 5746, column: 3, scope: !7379)
!7386 = !DILocation(line: 5742, column: 57, scope: !7373)
!7387 = !DILocation(line: 5742, column: 3, scope: !7373)
!7388 = distinct !{!7388, !7377, !7389}
!7389 = !DILocation(line: 5746, column: 3, scope: !7370)
!7390 = !DILocation(line: 5747, column: 1, scope: !7215)
!7391 = distinct !DISubprogram(name: "TraceArc", scope: !1, file: !1, line: 4952, type: !7392, scopeLine: 4954, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1236)
!7392 = !DISubroutineType(types: !7393)
!7393 = !{null, !1184, !7078, !7078, !7078}
!7394 = !DILocalVariable(name: "primitive_info", arg: 1, scope: !7391, file: !1, line: 4952, type: !1184)
!7395 = !DILocation(line: 4952, column: 37, scope: !7391)
!7396 = !DILocalVariable(name: "start", arg: 2, scope: !7391, file: !1, line: 4952, type: !7078)
!7397 = !DILocation(line: 4952, column: 68, scope: !7391)
!7398 = !DILocalVariable(name: "end", arg: 3, scope: !7391, file: !1, line: 4953, type: !7078)
!7399 = !DILocation(line: 4953, column: 19, scope: !7391)
!7400 = !DILocalVariable(name: "degrees", arg: 4, scope: !7391, file: !1, line: 4953, type: !7078)
!7401 = !DILocation(line: 4953, column: 39, scope: !7391)
!7402 = !DILocalVariable(name: "center", scope: !7391, file: !1, line: 4956, type: !794)
!7403 = !DILocation(line: 4956, column: 5, scope: !7391)
!7404 = !DILocalVariable(name: "radii", scope: !7391, file: !1, line: 4957, type: !794)
!7405 = !DILocation(line: 4957, column: 5, scope: !7391)
!7406 = !DILocation(line: 4959, column: 21, scope: !7391)
!7407 = !DILocation(line: 4959, column: 29, scope: !7391)
!7408 = !DILocation(line: 4959, column: 22, scope: !7391)
!7409 = !DILocation(line: 4959, column: 15, scope: !7391)
!7410 = !DILocation(line: 4959, column: 10, scope: !7391)
!7411 = !DILocation(line: 4959, column: 11, scope: !7391)
!7412 = !DILocation(line: 4960, column: 21, scope: !7391)
!7413 = !DILocation(line: 4960, column: 29, scope: !7391)
!7414 = !DILocation(line: 4960, column: 22, scope: !7391)
!7415 = !DILocation(line: 4960, column: 15, scope: !7391)
!7416 = !DILocation(line: 4960, column: 10, scope: !7391)
!7417 = !DILocation(line: 4960, column: 11, scope: !7391)
!7418 = !DILocation(line: 4961, column: 23, scope: !7391)
!7419 = !DILocation(line: 4961, column: 31, scope: !7391)
!7420 = !DILocation(line: 4961, column: 24, scope: !7391)
!7421 = !DILocation(line: 4961, column: 11, scope: !7391)
!7422 = !DILocation(line: 4961, column: 9, scope: !7391)
!7423 = !DILocation(line: 4961, column: 10, scope: !7391)
!7424 = !DILocation(line: 4962, column: 23, scope: !7391)
!7425 = !DILocation(line: 4962, column: 31, scope: !7391)
!7426 = !DILocation(line: 4962, column: 24, scope: !7391)
!7427 = !DILocation(line: 4962, column: 11, scope: !7391)
!7428 = !DILocation(line: 4962, column: 9, scope: !7391)
!7429 = !DILocation(line: 4962, column: 10, scope: !7391)
!7430 = !DILocation(line: 4963, column: 16, scope: !7391)
!7431 = !DILocation(line: 4963, column: 3, scope: !7391)
!7432 = !DILocation(line: 4964, column: 1, scope: !7391)
!7433 = distinct !DISubprogram(name: "TraceEllipse", scope: !1, file: !1, line: 5213, type: !7392, scopeLine: 5215, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1236)
!7434 = !DILocalVariable(name: "primitive_info", arg: 1, scope: !7433, file: !1, line: 5213, type: !1184)
!7435 = !DILocation(line: 5213, column: 41, scope: !7433)
!7436 = !DILocalVariable(name: "start", arg: 2, scope: !7433, file: !1, line: 5213, type: !7078)
!7437 = !DILocation(line: 5213, column: 72, scope: !7433)
!7438 = !DILocalVariable(name: "stop", arg: 3, scope: !7433, file: !1, line: 5214, type: !7078)
!7439 = !DILocation(line: 5214, column: 19, scope: !7433)
!7440 = !DILocalVariable(name: "degrees", arg: 4, scope: !7433, file: !1, line: 5214, type: !7078)
!7441 = !DILocation(line: 5214, column: 40, scope: !7433)
!7442 = !DILocalVariable(name: "delta", scope: !7433, file: !1, line: 5217, type: !728)
!7443 = !DILocation(line: 5217, column: 5, scope: !7433)
!7444 = !DILocalVariable(name: "step", scope: !7433, file: !1, line: 5218, type: !728)
!7445 = !DILocation(line: 5218, column: 5, scope: !7433)
!7446 = !DILocalVariable(name: "y", scope: !7433, file: !1, line: 5219, type: !728)
!7447 = !DILocation(line: 5219, column: 5, scope: !7433)
!7448 = !DILocalVariable(name: "angle", scope: !7433, file: !1, line: 5222, type: !794)
!7449 = !DILocation(line: 5222, column: 5, scope: !7433)
!7450 = !DILocalVariable(name: "point", scope: !7433, file: !1, line: 5223, type: !794)
!7451 = !DILocation(line: 5223, column: 5, scope: !7433)
!7452 = !DILocalVariable(name: "p", scope: !7433, file: !1, line: 5226, type: !1184)
!7453 = !DILocation(line: 5226, column: 6, scope: !7433)
!7454 = !DILocalVariable(name: "i", scope: !7433, file: !1, line: 5229, type: !717)
!7455 = !DILocation(line: 5229, column: 5, scope: !7433)
!7456 = !DILocation(line: 5234, column: 13, scope: !7457)
!7457 = distinct !DILexicalBlock(scope: !7433, file: !1, line: 5234, column: 7)
!7458 = !DILocation(line: 5234, column: 15, scope: !7457)
!7459 = !DILocation(line: 5234, column: 23, scope: !7457)
!7460 = !DILocation(line: 5234, column: 32, scope: !7457)
!7461 = !DILocation(line: 5234, column: 34, scope: !7457)
!7462 = !DILocation(line: 5234, column: 7, scope: !7433)
!7463 = !DILocation(line: 5236, column: 18, scope: !7464)
!7464 = distinct !DILexicalBlock(scope: !7457, file: !1, line: 5235, column: 5)
!7465 = !DILocation(line: 5236, column: 7, scope: !7464)
!7466 = !DILocation(line: 5237, column: 7, scope: !7464)
!7467 = !DILocation(line: 5239, column: 28, scope: !7433)
!7468 = !DILocation(line: 5239, column: 35, scope: !7433)
!7469 = !DILocation(line: 5239, column: 13, scope: !7433)
!7470 = !DILocation(line: 5239, column: 12, scope: !7433)
!7471 = !DILocation(line: 5239, column: 8, scope: !7433)
!7472 = !DILocation(line: 5240, column: 7, scope: !7433)
!7473 = !DILocation(line: 5241, column: 8, scope: !7474)
!7474 = distinct !DILexicalBlock(scope: !7433, file: !1, line: 5241, column: 7)
!7475 = !DILocation(line: 5241, column: 14, scope: !7474)
!7476 = !DILocation(line: 5241, column: 22, scope: !7474)
!7477 = !DILocation(line: 5241, column: 26, scope: !7474)
!7478 = !DILocation(line: 5241, column: 32, scope: !7474)
!7479 = !DILocation(line: 5241, column: 7, scope: !7433)
!7480 = !DILocation(line: 5242, column: 32, scope: !7474)
!7481 = !DILocation(line: 5242, column: 31, scope: !7474)
!7482 = !DILocation(line: 5242, column: 37, scope: !7474)
!7483 = !DILocation(line: 5242, column: 39, scope: !7474)
!7484 = !DILocation(line: 5242, column: 21, scope: !7474)
!7485 = !DILocation(line: 5242, column: 18, scope: !7474)
!7486 = !DILocation(line: 5242, column: 9, scope: !7474)
!7487 = !DILocation(line: 5242, column: 5, scope: !7474)
!7488 = !DILocation(line: 5243, column: 36, scope: !7433)
!7489 = !DILocation(line: 5243, column: 11, scope: !7433)
!7490 = !DILocation(line: 5243, column: 9, scope: !7433)
!7491 = !DILocation(line: 5243, column: 10, scope: !7433)
!7492 = !DILocation(line: 5244, column: 13, scope: !7433)
!7493 = !DILocation(line: 5244, column: 4, scope: !7433)
!7494 = !DILocation(line: 5245, column: 3, scope: !7433)
!7495 = !DILocation(line: 5245, column: 10, scope: !7433)
!7496 = !DILocation(line: 5245, column: 22, scope: !7433)
!7497 = !DILocation(line: 5245, column: 12, scope: !7433)
!7498 = !DILocation(line: 5246, column: 6, scope: !7433)
!7499 = distinct !{!7499, !7494, !7500}
!7500 = !DILocation(line: 5246, column: 8, scope: !7433)
!7501 = !DILocation(line: 5247, column: 38, scope: !7433)
!7502 = !DILocation(line: 5247, column: 21, scope: !7433)
!7503 = !DILocation(line: 5247, column: 40, scope: !7433)
!7504 = !DILocation(line: 5247, column: 9, scope: !7433)
!7505 = !DILocation(line: 5247, column: 10, scope: !7433)
!7506 = !DILocation(line: 5248, column: 10, scope: !7507)
!7507 = distinct !DILexicalBlock(scope: !7433, file: !1, line: 5248, column: 3)
!7508 = !DILocation(line: 5248, column: 9, scope: !7507)
!7509 = !DILocation(line: 5248, column: 8, scope: !7507)
!7510 = !DILocation(line: 5248, column: 32, scope: !7511)
!7511 = distinct !DILexicalBlock(scope: !7507, file: !1, line: 5248, column: 3)
!7512 = !DILocation(line: 5248, column: 42, scope: !7511)
!7513 = !DILocation(line: 5248, column: 34, scope: !7511)
!7514 = !DILocation(line: 5248, column: 3, scope: !7507)
!7515 = !DILocation(line: 5250, column: 28, scope: !7516)
!7516 = distinct !DILexicalBlock(scope: !7511, file: !1, line: 5249, column: 3)
!7517 = !DILocation(line: 5250, column: 30, scope: !7516)
!7518 = !DILocation(line: 5250, column: 17, scope: !7516)
!7519 = !DILocation(line: 5250, column: 13, scope: !7516)
!7520 = !DILocation(line: 5250, column: 61, scope: !7516)
!7521 = !DILocation(line: 5250, column: 55, scope: !7516)
!7522 = !DILocation(line: 5250, column: 69, scope: !7516)
!7523 = !DILocation(line: 5250, column: 62, scope: !7516)
!7524 = !DILocation(line: 5250, column: 11, scope: !7516)
!7525 = !DILocation(line: 5250, column: 12, scope: !7516)
!7526 = !DILocation(line: 5251, column: 28, scope: !7516)
!7527 = !DILocation(line: 5251, column: 30, scope: !7516)
!7528 = !DILocation(line: 5251, column: 17, scope: !7516)
!7529 = !DILocation(line: 5251, column: 13, scope: !7516)
!7530 = !DILocation(line: 5251, column: 61, scope: !7516)
!7531 = !DILocation(line: 5251, column: 55, scope: !7516)
!7532 = !DILocation(line: 5251, column: 69, scope: !7516)
!7533 = !DILocation(line: 5251, column: 62, scope: !7516)
!7534 = !DILocation(line: 5251, column: 11, scope: !7516)
!7535 = !DILocation(line: 5251, column: 12, scope: !7516)
!7536 = !DILocation(line: 5252, column: 16, scope: !7516)
!7537 = !DILocation(line: 5252, column: 5, scope: !7516)
!7538 = !DILocation(line: 5253, column: 8, scope: !7516)
!7539 = !DILocation(line: 5253, column: 11, scope: !7516)
!7540 = !DILocation(line: 5253, column: 6, scope: !7516)
!7541 = !DILocation(line: 5254, column: 3, scope: !7516)
!7542 = !DILocation(line: 5248, column: 54, scope: !7511)
!7543 = !DILocation(line: 5248, column: 51, scope: !7511)
!7544 = !DILocation(line: 5248, column: 52, scope: !7511)
!7545 = !DILocation(line: 5248, column: 3, scope: !7511)
!7546 = distinct !{!7546, !7514, !7547}
!7547 = !DILocation(line: 5254, column: 3, scope: !7507)
!7548 = !DILocation(line: 5255, column: 26, scope: !7433)
!7549 = !DILocation(line: 5255, column: 28, scope: !7433)
!7550 = !DILocation(line: 5255, column: 15, scope: !7433)
!7551 = !DILocation(line: 5255, column: 11, scope: !7433)
!7552 = !DILocation(line: 5255, column: 59, scope: !7433)
!7553 = !DILocation(line: 5255, column: 53, scope: !7433)
!7554 = !DILocation(line: 5255, column: 67, scope: !7433)
!7555 = !DILocation(line: 5255, column: 60, scope: !7433)
!7556 = !DILocation(line: 5255, column: 9, scope: !7433)
!7557 = !DILocation(line: 5255, column: 10, scope: !7433)
!7558 = !DILocation(line: 5256, column: 26, scope: !7433)
!7559 = !DILocation(line: 5256, column: 28, scope: !7433)
!7560 = !DILocation(line: 5256, column: 15, scope: !7433)
!7561 = !DILocation(line: 5256, column: 11, scope: !7433)
!7562 = !DILocation(line: 5256, column: 59, scope: !7433)
!7563 = !DILocation(line: 5256, column: 53, scope: !7433)
!7564 = !DILocation(line: 5256, column: 67, scope: !7433)
!7565 = !DILocation(line: 5256, column: 60, scope: !7433)
!7566 = !DILocation(line: 5256, column: 9, scope: !7433)
!7567 = !DILocation(line: 5256, column: 10, scope: !7433)
!7568 = !DILocation(line: 5257, column: 14, scope: !7433)
!7569 = !DILocation(line: 5257, column: 3, scope: !7433)
!7570 = !DILocation(line: 5258, column: 6, scope: !7433)
!7571 = !DILocation(line: 5258, column: 9, scope: !7433)
!7572 = !DILocation(line: 5258, column: 4, scope: !7433)
!7573 = !DILocation(line: 5259, column: 41, scope: !7433)
!7574 = !DILocation(line: 5259, column: 43, scope: !7433)
!7575 = !DILocation(line: 5259, column: 42, scope: !7433)
!7576 = !DILocation(line: 5259, column: 3, scope: !7433)
!7577 = !DILocation(line: 5259, column: 19, scope: !7433)
!7578 = !DILocation(line: 5259, column: 30, scope: !7433)
!7579 = !DILocation(line: 5260, column: 9, scope: !7580)
!7580 = distinct !DILexicalBlock(scope: !7433, file: !1, line: 5260, column: 3)
!7581 = !DILocation(line: 5260, column: 8, scope: !7580)
!7582 = !DILocation(line: 5260, column: 13, scope: !7583)
!7583 = distinct !DILexicalBlock(scope: !7580, file: !1, line: 5260, column: 3)
!7584 = !DILocation(line: 5260, column: 27, scope: !7583)
!7585 = !DILocation(line: 5260, column: 43, scope: !7583)
!7586 = !DILocation(line: 5260, column: 15, scope: !7583)
!7587 = !DILocation(line: 5260, column: 3, scope: !7580)
!7588 = !DILocation(line: 5262, column: 18, scope: !7589)
!7589 = distinct !DILexicalBlock(scope: !7583, file: !1, line: 5261, column: 3)
!7590 = !DILocation(line: 5262, column: 34, scope: !7589)
!7591 = !DILocation(line: 5262, column: 5, scope: !7589)
!7592 = !DILocation(line: 5262, column: 8, scope: !7589)
!7593 = !DILocation(line: 5262, column: 17, scope: !7589)
!7594 = !DILocation(line: 5263, column: 6, scope: !7589)
!7595 = !DILocation(line: 5264, column: 3, scope: !7589)
!7596 = !DILocation(line: 5260, column: 57, scope: !7583)
!7597 = !DILocation(line: 5260, column: 3, scope: !7583)
!7598 = distinct !{!7598, !7587, !7599}
!7599 = !DILocation(line: 5264, column: 3, scope: !7580)
!7600 = !DILocation(line: 5265, column: 1, scope: !7433)
!7601 = distinct !DISubprogram(name: "TraceCircle", scope: !1, file: !1, line: 5191, type: !7091, scopeLine: 5193, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1236)
!7602 = !DILocalVariable(name: "primitive_info", arg: 1, scope: !7601, file: !1, line: 5191, type: !1184)
!7603 = !DILocation(line: 5191, column: 40, scope: !7601)
!7604 = !DILocalVariable(name: "start", arg: 2, scope: !7601, file: !1, line: 5191, type: !7078)
!7605 = !DILocation(line: 5191, column: 71, scope: !7601)
!7606 = !DILocalVariable(name: "end", arg: 3, scope: !7601, file: !1, line: 5192, type: !7078)
!7607 = !DILocation(line: 5192, column: 19, scope: !7601)
!7608 = !DILocalVariable(name: "alpha", scope: !7601, file: !1, line: 5195, type: !728)
!7609 = !DILocation(line: 5195, column: 5, scope: !7601)
!7610 = !DILocalVariable(name: "beta", scope: !7601, file: !1, line: 5196, type: !728)
!7611 = !DILocation(line: 5196, column: 5, scope: !7601)
!7612 = !DILocalVariable(name: "radius", scope: !7601, file: !1, line: 5197, type: !728)
!7613 = !DILocation(line: 5197, column: 5, scope: !7601)
!7614 = !DILocalVariable(name: "offset", scope: !7601, file: !1, line: 5200, type: !794)
!7615 = !DILocation(line: 5200, column: 5, scope: !7601)
!7616 = !DILocalVariable(name: "degrees", scope: !7601, file: !1, line: 5201, type: !794)
!7617 = !DILocation(line: 5201, column: 5, scope: !7601)
!7618 = !DILocation(line: 5203, column: 13, scope: !7601)
!7619 = !DILocation(line: 5203, column: 21, scope: !7601)
!7620 = !DILocation(line: 5203, column: 14, scope: !7601)
!7621 = !DILocation(line: 5203, column: 8, scope: !7601)
!7622 = !DILocation(line: 5204, column: 12, scope: !7601)
!7623 = !DILocation(line: 5204, column: 20, scope: !7601)
!7624 = !DILocation(line: 5204, column: 13, scope: !7601)
!7625 = !DILocation(line: 5204, column: 7, scope: !7601)
!7626 = !DILocation(line: 5205, column: 25, scope: !7601)
!7627 = !DILocation(line: 5205, column: 40, scope: !7601)
!7628 = !DILocation(line: 5205, column: 10, scope: !7601)
!7629 = !DILocation(line: 5205, column: 9, scope: !7601)
!7630 = !DILocation(line: 5206, column: 21, scope: !7601)
!7631 = !DILocation(line: 5206, column: 10, scope: !7601)
!7632 = !DILocation(line: 5206, column: 11, scope: !7601)
!7633 = !DILocation(line: 5207, column: 21, scope: !7601)
!7634 = !DILocation(line: 5207, column: 10, scope: !7601)
!7635 = !DILocation(line: 5207, column: 11, scope: !7601)
!7636 = !DILocation(line: 5208, column: 11, scope: !7601)
!7637 = !DILocation(line: 5208, column: 12, scope: !7601)
!7638 = !DILocation(line: 5209, column: 11, scope: !7601)
!7639 = !DILocation(line: 5209, column: 12, scope: !7601)
!7640 = !DILocation(line: 5210, column: 16, scope: !7601)
!7641 = !DILocation(line: 5210, column: 3, scope: !7601)
!7642 = !DILocation(line: 5211, column: 1, scope: !7601)
!7643 = distinct !DISubprogram(name: "TraceBezier", scope: !1, file: !1, line: 5098, type: !7644, scopeLine: 5100, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1236)
!7644 = !DISubroutineType(types: !7645)
!7645 = !{null, !1184, !1111}
!7646 = !DILocalVariable(name: "primitive_info", arg: 1, scope: !7643, file: !1, line: 5098, type: !1184)
!7647 = !DILocation(line: 5098, column: 40, scope: !7643)
!7648 = !DILocalVariable(name: "number_coordinates", arg: 2, scope: !7643, file: !1, line: 5099, type: !1111)
!7649 = !DILocation(line: 5099, column: 16, scope: !7643)
!7650 = !DILocalVariable(name: "alpha", scope: !7643, file: !1, line: 5102, type: !728)
!7651 = !DILocation(line: 5102, column: 5, scope: !7643)
!7652 = !DILocalVariable(name: "coefficients", scope: !7643, file: !1, line: 5103, type: !1025)
!7653 = !DILocation(line: 5103, column: 6, scope: !7643)
!7654 = !DILocalVariable(name: "weight", scope: !7643, file: !1, line: 5104, type: !728)
!7655 = !DILocation(line: 5104, column: 5, scope: !7643)
!7656 = !DILocalVariable(name: "end", scope: !7643, file: !1, line: 5107, type: !794)
!7657 = !DILocation(line: 5107, column: 5, scope: !7643)
!7658 = !DILocalVariable(name: "point", scope: !7643, file: !1, line: 5108, type: !794)
!7659 = !DILocation(line: 5108, column: 5, scope: !7643)
!7660 = !DILocalVariable(name: "points", scope: !7643, file: !1, line: 5109, type: !1214)
!7661 = !DILocation(line: 5109, column: 6, scope: !7643)
!7662 = !DILocalVariable(name: "p", scope: !7643, file: !1, line: 5112, type: !1184)
!7663 = !DILocation(line: 5112, column: 6, scope: !7643)
!7664 = !DILocalVariable(name: "i", scope: !7643, file: !1, line: 5115, type: !717)
!7665 = !DILocation(line: 5115, column: 5, scope: !7643)
!7666 = !DILocalVariable(name: "j", scope: !7643, file: !1, line: 5116, type: !717)
!7667 = !DILocation(line: 5116, column: 5, scope: !7643)
!7668 = !DILocalVariable(name: "control_points", scope: !7643, file: !1, line: 5119, type: !712)
!7669 = !DILocation(line: 5119, column: 5, scope: !7643)
!7670 = !DILocalVariable(name: "quantum", scope: !7643, file: !1, line: 5120, type: !712)
!7671 = !DILocation(line: 5120, column: 5, scope: !7643)
!7672 = !DILocation(line: 5125, column: 11, scope: !7643)
!7673 = !DILocation(line: 5125, column: 10, scope: !7643)
!7674 = !DILocation(line: 5126, column: 9, scope: !7675)
!7675 = distinct !DILexicalBlock(scope: !7643, file: !1, line: 5126, column: 3)
!7676 = !DILocation(line: 5126, column: 8, scope: !7675)
!7677 = !DILocation(line: 5126, column: 13, scope: !7678)
!7678 = distinct !DILexicalBlock(scope: !7675, file: !1, line: 5126, column: 3)
!7679 = !DILocation(line: 5126, column: 27, scope: !7678)
!7680 = !DILocation(line: 5126, column: 15, scope: !7678)
!7681 = !DILocation(line: 5126, column: 3, scope: !7675)
!7682 = !DILocation(line: 5128, column: 12, scope: !7683)
!7683 = distinct !DILexicalBlock(scope: !7684, file: !1, line: 5128, column: 5)
!7684 = distinct !DILexicalBlock(scope: !7678, file: !1, line: 5127, column: 3)
!7685 = !DILocation(line: 5128, column: 13, scope: !7683)
!7686 = !DILocation(line: 5128, column: 11, scope: !7683)
!7687 = !DILocation(line: 5128, column: 10, scope: !7683)
!7688 = !DILocation(line: 5128, column: 17, scope: !7689)
!7689 = distinct !DILexicalBlock(scope: !7683, file: !1, line: 5128, column: 5)
!7690 = !DILocation(line: 5128, column: 31, scope: !7689)
!7691 = !DILocation(line: 5128, column: 19, scope: !7689)
!7692 = !DILocation(line: 5128, column: 5, scope: !7683)
!7693 = !DILocation(line: 5130, column: 18, scope: !7694)
!7694 = distinct !DILexicalBlock(scope: !7689, file: !1, line: 5129, column: 5)
!7695 = !DILocation(line: 5130, column: 33, scope: !7694)
!7696 = !DILocation(line: 5130, column: 36, scope: !7694)
!7697 = !DILocation(line: 5130, column: 42, scope: !7694)
!7698 = !DILocation(line: 5130, column: 44, scope: !7694)
!7699 = !DILocation(line: 5130, column: 59, scope: !7694)
!7700 = !DILocation(line: 5130, column: 62, scope: !7694)
!7701 = !DILocation(line: 5130, column: 68, scope: !7694)
!7702 = !DILocation(line: 5130, column: 43, scope: !7694)
!7703 = !DILocation(line: 5130, column: 13, scope: !7694)
!7704 = !DILocation(line: 5130, column: 12, scope: !7694)
!7705 = !DILocation(line: 5131, column: 11, scope: !7706)
!7706 = distinct !DILexicalBlock(scope: !7694, file: !1, line: 5131, column: 11)
!7707 = !DILocation(line: 5131, column: 28, scope: !7706)
!7708 = !DILocation(line: 5131, column: 19, scope: !7706)
!7709 = !DILocation(line: 5131, column: 17, scope: !7706)
!7710 = !DILocation(line: 5131, column: 11, scope: !7694)
!7711 = !DILocation(line: 5132, column: 26, scope: !7706)
!7712 = !DILocation(line: 5132, column: 17, scope: !7706)
!7713 = !DILocation(line: 5132, column: 16, scope: !7706)
!7714 = !DILocation(line: 5132, column: 9, scope: !7706)
!7715 = !DILocation(line: 5133, column: 18, scope: !7694)
!7716 = !DILocation(line: 5133, column: 33, scope: !7694)
!7717 = !DILocation(line: 5133, column: 36, scope: !7694)
!7718 = !DILocation(line: 5133, column: 42, scope: !7694)
!7719 = !DILocation(line: 5133, column: 44, scope: !7694)
!7720 = !DILocation(line: 5133, column: 59, scope: !7694)
!7721 = !DILocation(line: 5133, column: 62, scope: !7694)
!7722 = !DILocation(line: 5133, column: 68, scope: !7694)
!7723 = !DILocation(line: 5133, column: 43, scope: !7694)
!7724 = !DILocation(line: 5133, column: 13, scope: !7694)
!7725 = !DILocation(line: 5133, column: 12, scope: !7694)
!7726 = !DILocation(line: 5134, column: 11, scope: !7727)
!7727 = distinct !DILexicalBlock(scope: !7694, file: !1, line: 5134, column: 11)
!7728 = !DILocation(line: 5134, column: 28, scope: !7727)
!7729 = !DILocation(line: 5134, column: 19, scope: !7727)
!7730 = !DILocation(line: 5134, column: 17, scope: !7727)
!7731 = !DILocation(line: 5134, column: 11, scope: !7694)
!7732 = !DILocation(line: 5135, column: 26, scope: !7727)
!7733 = !DILocation(line: 5135, column: 17, scope: !7727)
!7734 = !DILocation(line: 5135, column: 16, scope: !7727)
!7735 = !DILocation(line: 5135, column: 9, scope: !7727)
!7736 = !DILocation(line: 5136, column: 5, scope: !7694)
!7737 = !DILocation(line: 5128, column: 52, scope: !7689)
!7738 = !DILocation(line: 5128, column: 5, scope: !7689)
!7739 = distinct !{!7739, !7692, !7740}
!7740 = !DILocation(line: 5136, column: 5, scope: !7683)
!7741 = !DILocation(line: 5137, column: 3, scope: !7684)
!7742 = !DILocation(line: 5126, column: 48, scope: !7678)
!7743 = !DILocation(line: 5126, column: 3, scope: !7678)
!7744 = distinct !{!7744, !7681, !7745}
!7745 = !DILocation(line: 5137, column: 3, scope: !7675)
!7746 = !DILocation(line: 5138, column: 39, scope: !7643)
!7747 = !DILocation(line: 5138, column: 30, scope: !7643)
!7748 = !DILocation(line: 5138, column: 47, scope: !7643)
!7749 = !DILocation(line: 5138, column: 46, scope: !7643)
!7750 = !DILocation(line: 5138, column: 20, scope: !7643)
!7751 = !DILocation(line: 5138, column: 11, scope: !7643)
!7752 = !DILocation(line: 5138, column: 10, scope: !7643)
!7753 = !DILocation(line: 5140, column: 18, scope: !7643)
!7754 = !DILocation(line: 5140, column: 26, scope: !7643)
!7755 = !DILocation(line: 5140, column: 25, scope: !7643)
!7756 = !DILocation(line: 5140, column: 17, scope: !7643)
!7757 = !DILocation(line: 5142, column: 5, scope: !7643)
!7758 = !DILocation(line: 5141, column: 27, scope: !7643)
!7759 = !DILocation(line: 5141, column: 16, scope: !7643)
!7760 = !DILocation(line: 5141, column: 15, scope: !7643)
!7761 = !DILocation(line: 5143, column: 54, scope: !7643)
!7762 = !DILocation(line: 5143, column: 24, scope: !7643)
!7763 = !DILocation(line: 5143, column: 10, scope: !7643)
!7764 = !DILocation(line: 5143, column: 9, scope: !7643)
!7765 = !DILocation(line: 5145, column: 8, scope: !7766)
!7766 = distinct !DILexicalBlock(scope: !7643, file: !1, line: 5145, column: 7)
!7767 = !DILocation(line: 5145, column: 21, scope: !7766)
!7768 = !DILocation(line: 5145, column: 41, scope: !7766)
!7769 = !DILocation(line: 5145, column: 45, scope: !7766)
!7770 = !DILocation(line: 5145, column: 52, scope: !7766)
!7771 = !DILocation(line: 5145, column: 7, scope: !7643)
!7772 = !DILocalVariable(name: "message", scope: !7773, file: !1, line: 5146, type: !704)
!7773 = distinct !DILexicalBlock(scope: !7766, file: !1, line: 5146, column: 5)
!7774 = !DILocation(line: 5146, column: 5, scope: !7773)
!7775 = !DILocalVariable(name: "exception", scope: !7773, file: !1, line: 5146, type: !932)
!7776 = !DILocation(line: 5150, column: 7, scope: !7643)
!7777 = !DILocation(line: 5150, column: 22, scope: !7643)
!7778 = !DILocation(line: 5150, column: 40, scope: !7643)
!7779 = !DILocation(line: 5150, column: 44, scope: !7643)
!7780 = !DILocation(line: 5151, column: 9, scope: !7781)
!7781 = distinct !DILexicalBlock(scope: !7643, file: !1, line: 5151, column: 3)
!7782 = !DILocation(line: 5151, column: 8, scope: !7781)
!7783 = !DILocation(line: 5151, column: 13, scope: !7784)
!7784 = distinct !DILexicalBlock(scope: !7781, file: !1, line: 5151, column: 3)
!7785 = !DILocation(line: 5151, column: 27, scope: !7784)
!7786 = !DILocation(line: 5151, column: 15, scope: !7784)
!7787 = !DILocation(line: 5151, column: 3, scope: !7781)
!7788 = !DILocation(line: 5152, column: 41, scope: !7784)
!7789 = !DILocation(line: 5152, column: 59, scope: !7784)
!7790 = !DILocation(line: 5152, column: 62, scope: !7784)
!7791 = !DILocation(line: 5152, column: 21, scope: !7784)
!7792 = !DILocation(line: 5152, column: 5, scope: !7784)
!7793 = !DILocation(line: 5152, column: 18, scope: !7784)
!7794 = !DILocation(line: 5152, column: 20, scope: !7784)
!7795 = !DILocation(line: 5151, column: 48, scope: !7784)
!7796 = !DILocation(line: 5151, column: 3, scope: !7784)
!7797 = distinct !{!7797, !7787, !7798}
!7798 = !DILocation(line: 5152, column: 63, scope: !7781)
!7799 = !DILocation(line: 5153, column: 9, scope: !7643)
!7800 = !DILocation(line: 5154, column: 9, scope: !7801)
!7801 = distinct !DILexicalBlock(scope: !7643, file: !1, line: 5154, column: 3)
!7802 = !DILocation(line: 5154, column: 8, scope: !7801)
!7803 = !DILocation(line: 5154, column: 13, scope: !7804)
!7804 = distinct !DILexicalBlock(scope: !7801, file: !1, line: 5154, column: 3)
!7805 = !DILocation(line: 5154, column: 27, scope: !7804)
!7806 = !DILocation(line: 5154, column: 15, scope: !7804)
!7807 = !DILocation(line: 5154, column: 3, scope: !7801)
!7808 = !DILocation(line: 5156, column: 7, scope: !7809)
!7809 = distinct !DILexicalBlock(scope: !7804, file: !1, line: 5155, column: 3)
!7810 = !DILocation(line: 5156, column: 6, scope: !7809)
!7811 = !DILocation(line: 5157, column: 11, scope: !7809)
!7812 = !DILocation(line: 5157, column: 12, scope: !7809)
!7813 = !DILocation(line: 5158, column: 11, scope: !7809)
!7814 = !DILocation(line: 5158, column: 12, scope: !7809)
!7815 = !DILocation(line: 5159, column: 29, scope: !7809)
!7816 = !DILocation(line: 5159, column: 28, scope: !7809)
!7817 = !DILocation(line: 5159, column: 46, scope: !7809)
!7818 = !DILocation(line: 5159, column: 37, scope: !7809)
!7819 = !DILocation(line: 5159, column: 64, scope: !7809)
!7820 = !DILocation(line: 5159, column: 11, scope: !7809)
!7821 = !DILocation(line: 5159, column: 10, scope: !7809)
!7822 = !DILocation(line: 5160, column: 11, scope: !7823)
!7823 = distinct !DILexicalBlock(scope: !7809, file: !1, line: 5160, column: 5)
!7824 = !DILocation(line: 5160, column: 10, scope: !7823)
!7825 = !DILocation(line: 5160, column: 15, scope: !7826)
!7826 = distinct !DILexicalBlock(scope: !7823, file: !1, line: 5160, column: 5)
!7827 = !DILocation(line: 5160, column: 29, scope: !7826)
!7828 = !DILocation(line: 5160, column: 17, scope: !7826)
!7829 = !DILocation(line: 5160, column: 5, scope: !7823)
!7830 = !DILocation(line: 5162, column: 16, scope: !7831)
!7831 = distinct !DILexicalBlock(scope: !7826, file: !1, line: 5161, column: 5)
!7832 = !DILocation(line: 5162, column: 22, scope: !7831)
!7833 = !DILocation(line: 5162, column: 35, scope: !7831)
!7834 = !DILocation(line: 5162, column: 21, scope: !7831)
!7835 = !DILocation(line: 5162, column: 38, scope: !7831)
!7836 = !DILocation(line: 5162, column: 41, scope: !7831)
!7837 = !DILocation(line: 5162, column: 47, scope: !7831)
!7838 = !DILocation(line: 5162, column: 37, scope: !7831)
!7839 = !DILocation(line: 5162, column: 13, scope: !7831)
!7840 = !DILocation(line: 5162, column: 14, scope: !7831)
!7841 = !DILocation(line: 5163, column: 16, scope: !7831)
!7842 = !DILocation(line: 5163, column: 22, scope: !7831)
!7843 = !DILocation(line: 5163, column: 35, scope: !7831)
!7844 = !DILocation(line: 5163, column: 21, scope: !7831)
!7845 = !DILocation(line: 5163, column: 38, scope: !7831)
!7846 = !DILocation(line: 5163, column: 41, scope: !7831)
!7847 = !DILocation(line: 5163, column: 47, scope: !7831)
!7848 = !DILocation(line: 5163, column: 37, scope: !7831)
!7849 = !DILocation(line: 5163, column: 13, scope: !7831)
!7850 = !DILocation(line: 5163, column: 14, scope: !7831)
!7851 = !DILocation(line: 5164, column: 14, scope: !7831)
!7852 = !DILocation(line: 5164, column: 26, scope: !7831)
!7853 = !DILocation(line: 5164, column: 25, scope: !7831)
!7854 = !DILocation(line: 5164, column: 20, scope: !7831)
!7855 = !DILocation(line: 5164, column: 12, scope: !7831)
!7856 = !DILocation(line: 5165, column: 8, scope: !7831)
!7857 = !DILocation(line: 5166, column: 5, scope: !7831)
!7858 = !DILocation(line: 5160, column: 50, scope: !7826)
!7859 = !DILocation(line: 5160, column: 5, scope: !7826)
!7860 = distinct !{!7860, !7829, !7861}
!7861 = !DILocation(line: 5166, column: 5, scope: !7823)
!7862 = !DILocation(line: 5167, column: 5, scope: !7809)
!7863 = !DILocation(line: 5167, column: 12, scope: !7809)
!7864 = !DILocation(line: 5167, column: 15, scope: !7809)
!7865 = !DILocation(line: 5168, column: 17, scope: !7809)
!7866 = !DILocation(line: 5168, column: 16, scope: !7809)
!7867 = !DILocation(line: 5168, column: 11, scope: !7809)
!7868 = !DILocation(line: 5169, column: 3, scope: !7809)
!7869 = !DILocation(line: 5154, column: 44, scope: !7804)
!7870 = !DILocation(line: 5154, column: 3, scope: !7804)
!7871 = distinct !{!7871, !7807, !7872}
!7872 = !DILocation(line: 5169, column: 3, scope: !7801)
!7873 = !DILocation(line: 5173, column: 5, scope: !7643)
!7874 = !DILocation(line: 5173, column: 4, scope: !7643)
!7875 = !DILocation(line: 5174, column: 9, scope: !7876)
!7876 = distinct !DILexicalBlock(scope: !7643, file: !1, line: 5174, column: 3)
!7877 = !DILocation(line: 5174, column: 8, scope: !7876)
!7878 = !DILocation(line: 5174, column: 13, scope: !7879)
!7879 = distinct !DILexicalBlock(scope: !7876, file: !1, line: 5174, column: 3)
!7880 = !DILocation(line: 5174, column: 27, scope: !7879)
!7881 = !DILocation(line: 5174, column: 15, scope: !7879)
!7882 = !DILocation(line: 5174, column: 3, scope: !7876)
!7883 = !DILocation(line: 5176, column: 16, scope: !7884)
!7884 = distinct !DILexicalBlock(scope: !7879, file: !1, line: 5175, column: 3)
!7885 = !DILocation(line: 5176, column: 18, scope: !7884)
!7886 = !DILocation(line: 5176, column: 25, scope: !7884)
!7887 = !DILocation(line: 5176, column: 5, scope: !7884)
!7888 = !DILocation(line: 5177, column: 8, scope: !7884)
!7889 = !DILocation(line: 5177, column: 11, scope: !7884)
!7890 = !DILocation(line: 5177, column: 6, scope: !7884)
!7891 = !DILocation(line: 5178, column: 3, scope: !7884)
!7892 = !DILocation(line: 5174, column: 44, scope: !7879)
!7893 = !DILocation(line: 5174, column: 3, scope: !7879)
!7894 = distinct !{!7894, !7882, !7895}
!7895 = !DILocation(line: 5178, column: 3, scope: !7876)
!7896 = !DILocation(line: 5179, column: 14, scope: !7643)
!7897 = !DILocation(line: 5179, column: 3, scope: !7643)
!7898 = !DILocation(line: 5180, column: 6, scope: !7643)
!7899 = !DILocation(line: 5180, column: 9, scope: !7643)
!7900 = !DILocation(line: 5180, column: 4, scope: !7643)
!7901 = !DILocation(line: 5181, column: 41, scope: !7643)
!7902 = !DILocation(line: 5181, column: 43, scope: !7643)
!7903 = !DILocation(line: 5181, column: 42, scope: !7643)
!7904 = !DILocation(line: 5181, column: 3, scope: !7643)
!7905 = !DILocation(line: 5181, column: 19, scope: !7643)
!7906 = !DILocation(line: 5181, column: 30, scope: !7643)
!7907 = !DILocation(line: 5182, column: 9, scope: !7908)
!7908 = distinct !DILexicalBlock(scope: !7643, file: !1, line: 5182, column: 3)
!7909 = !DILocation(line: 5182, column: 8, scope: !7908)
!7910 = !DILocation(line: 5182, column: 13, scope: !7911)
!7911 = distinct !DILexicalBlock(scope: !7908, file: !1, line: 5182, column: 3)
!7912 = !DILocation(line: 5182, column: 27, scope: !7911)
!7913 = !DILocation(line: 5182, column: 43, scope: !7911)
!7914 = !DILocation(line: 5182, column: 15, scope: !7911)
!7915 = !DILocation(line: 5182, column: 3, scope: !7908)
!7916 = !DILocation(line: 5184, column: 18, scope: !7917)
!7917 = distinct !DILexicalBlock(scope: !7911, file: !1, line: 5183, column: 3)
!7918 = !DILocation(line: 5184, column: 34, scope: !7917)
!7919 = !DILocation(line: 5184, column: 5, scope: !7917)
!7920 = !DILocation(line: 5184, column: 8, scope: !7917)
!7921 = !DILocation(line: 5184, column: 17, scope: !7917)
!7922 = !DILocation(line: 5185, column: 6, scope: !7917)
!7923 = !DILocation(line: 5186, column: 3, scope: !7917)
!7924 = !DILocation(line: 5182, column: 57, scope: !7911)
!7925 = !DILocation(line: 5182, column: 3, scope: !7911)
!7926 = distinct !{!7926, !7915, !7927}
!7927 = !DILocation(line: 5186, column: 3, scope: !7908)
!7928 = !DILocation(line: 5187, column: 47, scope: !7643)
!7929 = !DILocation(line: 5187, column: 24, scope: !7643)
!7930 = !DILocation(line: 5187, column: 10, scope: !7643)
!7931 = !DILocation(line: 5187, column: 9, scope: !7643)
!7932 = !DILocation(line: 5188, column: 50, scope: !7643)
!7933 = !DILocation(line: 5188, column: 27, scope: !7643)
!7934 = !DILocation(line: 5188, column: 16, scope: !7643)
!7935 = !DILocation(line: 5188, column: 15, scope: !7643)
!7936 = !DILocation(line: 5189, column: 1, scope: !7643)
!7937 = distinct !DISubprogram(name: "TracePath", scope: !1, file: !1, line: 5283, type: !7938, scopeLine: 5284, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1236)
!7938 = !DISubroutineType(types: !7939)
!7939 = !{!712, !1184, !904}
!7940 = !DILocalVariable(name: "primitive_info", arg: 1, scope: !7937, file: !1, line: 5283, type: !1184)
!7941 = !DILocation(line: 5283, column: 40, scope: !7937)
!7942 = !DILocalVariable(name: "path", arg: 2, scope: !7937, file: !1, line: 5283, type: !904)
!7943 = !DILocation(line: 5283, column: 67, scope: !7937)
!7944 = !DILocalVariable(name: "token", scope: !7937, file: !1, line: 5286, type: !924)
!7945 = !DILocation(line: 5286, column: 5, scope: !7937)
!7946 = !DILocalVariable(name: "p", scope: !7937, file: !1, line: 5289, type: !904)
!7947 = !DILocation(line: 5289, column: 6, scope: !7937)
!7948 = !DILocalVariable(name: "x", scope: !7937, file: !1, line: 5292, type: !728)
!7949 = !DILocation(line: 5292, column: 5, scope: !7937)
!7950 = !DILocalVariable(name: "y", scope: !7937, file: !1, line: 5293, type: !728)
!7951 = !DILocation(line: 5293, column: 5, scope: !7937)
!7952 = !DILocalVariable(name: "attribute", scope: !7937, file: !1, line: 5296, type: !575)
!7953 = !DILocation(line: 5296, column: 5, scope: !7937)
!7954 = !DILocalVariable(name: "last_attribute", scope: !7937, file: !1, line: 5297, type: !575)
!7955 = !DILocation(line: 5297, column: 5, scope: !7937)
!7956 = !DILocalVariable(name: "end", scope: !7937, file: !1, line: 5300, type: !794)
!7957 = !DILocation(line: 5300, column: 5, scope: !7937)
!7958 = !DILocalVariable(name: "points", scope: !7937, file: !1, line: 5301, type: !2171)
!7959 = !DILocation(line: 5301, column: 5, scope: !7937)
!7960 = !DILocalVariable(name: "point", scope: !7937, file: !1, line: 5302, type: !794)
!7961 = !DILocation(line: 5302, column: 5, scope: !7937)
!7962 = !DILocalVariable(name: "start", scope: !7937, file: !1, line: 5303, type: !794)
!7963 = !DILocation(line: 5303, column: 5, scope: !7937)
!7964 = !DILocalVariable(name: "primitive_type", scope: !7937, file: !1, line: 5306, type: !1191)
!7965 = !DILocation(line: 5306, column: 5, scope: !7937)
!7966 = !DILocalVariable(name: "q", scope: !7937, file: !1, line: 5309, type: !1184)
!7967 = !DILocation(line: 5309, column: 6, scope: !7937)
!7968 = !DILocalVariable(name: "i", scope: !7937, file: !1, line: 5312, type: !717)
!7969 = !DILocation(line: 5312, column: 5, scope: !7937)
!7970 = !DILocalVariable(name: "number_coordinates", scope: !7937, file: !1, line: 5315, type: !712)
!7971 = !DILocation(line: 5315, column: 5, scope: !7937)
!7972 = !DILocalVariable(name: "z_count", scope: !7937, file: !1, line: 5316, type: !712)
!7973 = !DILocation(line: 5316, column: 5, scope: !7937)
!7974 = !DILocation(line: 5318, column: 12, scope: !7937)
!7975 = !DILocation(line: 5319, column: 7, scope: !7937)
!7976 = !DILocation(line: 5319, column: 8, scope: !7937)
!7977 = !DILocation(line: 5320, column: 7, scope: !7937)
!7978 = !DILocation(line: 5320, column: 8, scope: !7937)
!7979 = !DILocation(line: 5321, column: 9, scope: !7937)
!7980 = !DILocation(line: 5321, column: 10, scope: !7937)
!7981 = !DILocation(line: 5322, column: 9, scope: !7937)
!7982 = !DILocation(line: 5322, column: 10, scope: !7937)
!7983 = !DILocation(line: 5323, column: 9, scope: !7937)
!7984 = !DILocation(line: 5323, column: 10, scope: !7937)
!7985 = !DILocation(line: 5324, column: 9, scope: !7937)
!7986 = !DILocation(line: 5324, column: 10, scope: !7937)
!7987 = !DILocation(line: 5325, column: 21, scope: !7937)
!7988 = !DILocation(line: 5326, column: 10, scope: !7937)
!7989 = !DILocation(line: 5327, column: 28, scope: !7937)
!7990 = !DILocation(line: 5327, column: 10, scope: !7937)
!7991 = !DILocation(line: 5328, column: 18, scope: !7937)
!7992 = !DILocation(line: 5328, column: 34, scope: !7937)
!7993 = !DILocation(line: 5328, column: 17, scope: !7937)
!7994 = !DILocation(line: 5329, column: 5, scope: !7937)
!7995 = !DILocation(line: 5329, column: 4, scope: !7937)
!7996 = !DILocation(line: 5330, column: 10, scope: !7997)
!7997 = distinct !DILexicalBlock(scope: !7937, file: !1, line: 5330, column: 3)
!7998 = !DILocation(line: 5330, column: 9, scope: !7997)
!7999 = !DILocation(line: 5330, column: 8, scope: !7997)
!8000 = !DILocation(line: 5330, column: 17, scope: !8001)
!8001 = distinct !DILexicalBlock(scope: !7997, file: !1, line: 5330, column: 3)
!8002 = !DILocation(line: 5330, column: 16, scope: !8001)
!8003 = !DILocation(line: 5330, column: 19, scope: !8001)
!8004 = !DILocation(line: 5330, column: 3, scope: !7997)
!8005 = !DILocation(line: 5332, column: 5, scope: !8006)
!8006 = distinct !DILexicalBlock(scope: !8001, file: !1, line: 5331, column: 3)
!8007 = !DILocation(line: 5332, column: 12, scope: !8006)
!8008 = !DILocation(line: 5332, column: 48, scope: !8006)
!8009 = !DILocation(line: 5333, column: 8, scope: !8006)
!8010 = distinct !{!8010, !8005, !8009}
!8011 = !DILocation(line: 5334, column: 10, scope: !8012)
!8012 = distinct !DILexicalBlock(scope: !8006, file: !1, line: 5334, column: 9)
!8013 = !DILocation(line: 5334, column: 9, scope: !8012)
!8014 = !DILocation(line: 5334, column: 12, scope: !8012)
!8015 = !DILocation(line: 5334, column: 9, scope: !8006)
!8016 = !DILocation(line: 5335, column: 7, scope: !8012)
!8017 = !DILocation(line: 5336, column: 20, scope: !8006)
!8018 = !DILocation(line: 5336, column: 19, scope: !8006)
!8019 = !DILocation(line: 5337, column: 24, scope: !8006)
!8020 = !DILocation(line: 5337, column: 22, scope: !8006)
!8021 = !DILocation(line: 5337, column: 15, scope: !8006)
!8022 = !DILocation(line: 5337, column: 14, scope: !8006)
!8023 = !DILocation(line: 5338, column: 13, scope: !8006)
!8024 = !DILocation(line: 5338, column: 5, scope: !8006)
!8025 = !DILocalVariable(name: "angle", scope: !8026, file: !1, line: 5344, type: !728)
!8026 = distinct !DILexicalBlock(scope: !8027, file: !1, line: 5342, column: 7)
!8027 = distinct !DILexicalBlock(scope: !8006, file: !1, line: 5339, column: 5)
!8028 = !DILocation(line: 5344, column: 11, scope: !8026)
!8029 = !DILocalVariable(name: "large_arc", scope: !8026, file: !1, line: 5347, type: !777)
!8030 = !DILocation(line: 5347, column: 11, scope: !8026)
!8031 = !DILocalVariable(name: "sweep", scope: !8026, file: !1, line: 5348, type: !777)
!8032 = !DILocation(line: 5348, column: 11, scope: !8026)
!8033 = !DILocalVariable(name: "arc", scope: !8026, file: !1, line: 5351, type: !794)
!8034 = !DILocation(line: 5351, column: 11, scope: !8026)
!8035 = !DILocation(line: 5356, column: 9, scope: !8026)
!8036 = !DILocation(line: 5358, column: 26, scope: !8037)
!8037 = distinct !DILexicalBlock(scope: !8026, file: !1, line: 5357, column: 9)
!8038 = !DILocation(line: 5358, column: 31, scope: !8037)
!8039 = !DILocation(line: 5358, column: 11, scope: !8037)
!8040 = !DILocation(line: 5359, column: 15, scope: !8041)
!8041 = distinct !DILexicalBlock(scope: !8037, file: !1, line: 5359, column: 15)
!8042 = !DILocation(line: 5359, column: 22, scope: !8041)
!8043 = !DILocation(line: 5359, column: 15, scope: !8037)
!8044 = !DILocation(line: 5360, column: 28, scope: !8041)
!8045 = !DILocation(line: 5360, column: 33, scope: !8041)
!8046 = !DILocation(line: 5360, column: 13, scope: !8041)
!8047 = !DILocation(line: 5361, column: 32, scope: !8037)
!8048 = !DILocation(line: 5361, column: 17, scope: !8037)
!8049 = !DILocation(line: 5361, column: 15, scope: !8037)
!8050 = !DILocation(line: 5361, column: 16, scope: !8037)
!8051 = !DILocation(line: 5362, column: 26, scope: !8037)
!8052 = !DILocation(line: 5362, column: 31, scope: !8037)
!8053 = !DILocation(line: 5362, column: 11, scope: !8037)
!8054 = !DILocation(line: 5363, column: 15, scope: !8055)
!8055 = distinct !DILexicalBlock(scope: !8037, file: !1, line: 5363, column: 15)
!8056 = !DILocation(line: 5363, column: 22, scope: !8055)
!8057 = !DILocation(line: 5363, column: 15, scope: !8037)
!8058 = !DILocation(line: 5364, column: 28, scope: !8055)
!8059 = !DILocation(line: 5364, column: 33, scope: !8055)
!8060 = !DILocation(line: 5364, column: 13, scope: !8055)
!8061 = !DILocation(line: 5365, column: 32, scope: !8037)
!8062 = !DILocation(line: 5365, column: 17, scope: !8037)
!8063 = !DILocation(line: 5365, column: 15, scope: !8037)
!8064 = !DILocation(line: 5365, column: 16, scope: !8037)
!8065 = !DILocation(line: 5366, column: 26, scope: !8037)
!8066 = !DILocation(line: 5366, column: 31, scope: !8037)
!8067 = !DILocation(line: 5366, column: 11, scope: !8037)
!8068 = !DILocation(line: 5367, column: 15, scope: !8069)
!8069 = distinct !DILexicalBlock(scope: !8037, file: !1, line: 5367, column: 15)
!8070 = !DILocation(line: 5367, column: 22, scope: !8069)
!8071 = !DILocation(line: 5367, column: 15, scope: !8037)
!8072 = !DILocation(line: 5368, column: 28, scope: !8069)
!8073 = !DILocation(line: 5368, column: 33, scope: !8069)
!8074 = !DILocation(line: 5368, column: 13, scope: !8069)
!8075 = !DILocation(line: 5369, column: 32, scope: !8037)
!8076 = !DILocation(line: 5369, column: 17, scope: !8037)
!8077 = !DILocation(line: 5369, column: 16, scope: !8037)
!8078 = !DILocation(line: 5370, column: 26, scope: !8037)
!8079 = !DILocation(line: 5370, column: 31, scope: !8037)
!8080 = !DILocation(line: 5370, column: 11, scope: !8037)
!8081 = !DILocation(line: 5371, column: 15, scope: !8082)
!8082 = distinct !DILexicalBlock(scope: !8037, file: !1, line: 5371, column: 15)
!8083 = !DILocation(line: 5371, column: 22, scope: !8082)
!8084 = !DILocation(line: 5371, column: 15, scope: !8037)
!8085 = !DILocation(line: 5372, column: 28, scope: !8082)
!8086 = !DILocation(line: 5372, column: 33, scope: !8082)
!8087 = !DILocation(line: 5372, column: 13, scope: !8082)
!8088 = !DILocation(line: 5373, column: 34, scope: !8037)
!8089 = !DILocation(line: 5373, column: 21, scope: !8037)
!8090 = !DILocation(line: 5373, column: 41, scope: !8037)
!8091 = !DILocation(line: 5373, column: 20, scope: !8037)
!8092 = !DILocation(line: 5374, column: 26, scope: !8037)
!8093 = !DILocation(line: 5374, column: 31, scope: !8037)
!8094 = !DILocation(line: 5374, column: 11, scope: !8037)
!8095 = !DILocation(line: 5375, column: 15, scope: !8096)
!8096 = distinct !DILexicalBlock(scope: !8037, file: !1, line: 5375, column: 15)
!8097 = !DILocation(line: 5375, column: 22, scope: !8096)
!8098 = !DILocation(line: 5375, column: 15, scope: !8037)
!8099 = !DILocation(line: 5376, column: 28, scope: !8096)
!8100 = !DILocation(line: 5376, column: 33, scope: !8096)
!8101 = !DILocation(line: 5376, column: 13, scope: !8096)
!8102 = !DILocation(line: 5377, column: 30, scope: !8037)
!8103 = !DILocation(line: 5377, column: 17, scope: !8037)
!8104 = !DILocation(line: 5377, column: 37, scope: !8037)
!8105 = !DILocation(line: 5377, column: 16, scope: !8037)
!8106 = !DILocation(line: 5378, column: 26, scope: !8037)
!8107 = !DILocation(line: 5378, column: 31, scope: !8037)
!8108 = !DILocation(line: 5378, column: 11, scope: !8037)
!8109 = !DILocation(line: 5379, column: 15, scope: !8110)
!8110 = distinct !DILexicalBlock(scope: !8037, file: !1, line: 5379, column: 15)
!8111 = !DILocation(line: 5379, column: 22, scope: !8110)
!8112 = !DILocation(line: 5379, column: 15, scope: !8037)
!8113 = !DILocation(line: 5380, column: 28, scope: !8110)
!8114 = !DILocation(line: 5380, column: 33, scope: !8110)
!8115 = !DILocation(line: 5380, column: 13, scope: !8110)
!8116 = !DILocation(line: 5381, column: 28, scope: !8037)
!8117 = !DILocation(line: 5381, column: 13, scope: !8037)
!8118 = !DILocation(line: 5381, column: 12, scope: !8037)
!8119 = !DILocation(line: 5382, column: 26, scope: !8037)
!8120 = !DILocation(line: 5382, column: 31, scope: !8037)
!8121 = !DILocation(line: 5382, column: 11, scope: !8037)
!8122 = !DILocation(line: 5383, column: 15, scope: !8123)
!8123 = distinct !DILexicalBlock(scope: !8037, file: !1, line: 5383, column: 15)
!8124 = !DILocation(line: 5383, column: 22, scope: !8123)
!8125 = !DILocation(line: 5383, column: 15, scope: !8037)
!8126 = !DILocation(line: 5384, column: 28, scope: !8123)
!8127 = !DILocation(line: 5384, column: 33, scope: !8123)
!8128 = !DILocation(line: 5384, column: 13, scope: !8123)
!8129 = !DILocation(line: 5385, column: 28, scope: !8037)
!8130 = !DILocation(line: 5385, column: 13, scope: !8037)
!8131 = !DILocation(line: 5385, column: 12, scope: !8037)
!8132 = !DILocation(line: 5386, column: 27, scope: !8037)
!8133 = !DILocation(line: 5386, column: 37, scope: !8037)
!8134 = !DILocation(line: 5386, column: 52, scope: !8037)
!8135 = !DILocation(line: 5386, column: 62, scope: !8037)
!8136 = !DILocation(line: 5386, column: 64, scope: !8037)
!8137 = !DILocation(line: 5386, column: 63, scope: !8037)
!8138 = !DILocation(line: 5386, column: 15, scope: !8037)
!8139 = !DILocation(line: 5386, column: 16, scope: !8037)
!8140 = !DILocation(line: 5387, column: 27, scope: !8037)
!8141 = !DILocation(line: 5387, column: 37, scope: !8037)
!8142 = !DILocation(line: 5387, column: 52, scope: !8037)
!8143 = !DILocation(line: 5387, column: 62, scope: !8037)
!8144 = !DILocation(line: 5387, column: 64, scope: !8037)
!8145 = !DILocation(line: 5387, column: 63, scope: !8037)
!8146 = !DILocation(line: 5387, column: 15, scope: !8037)
!8147 = !DILocation(line: 5387, column: 16, scope: !8037)
!8148 = !DILocation(line: 5388, column: 24, scope: !8037)
!8149 = !DILocation(line: 5388, column: 40, scope: !8037)
!8150 = !DILocation(line: 5388, column: 46, scope: !8037)
!8151 = !DILocation(line: 5388, column: 56, scope: !8037)
!8152 = !DILocation(line: 5388, column: 11, scope: !8037)
!8153 = !DILocation(line: 5389, column: 14, scope: !8037)
!8154 = !DILocation(line: 5389, column: 17, scope: !8037)
!8155 = !DILocation(line: 5389, column: 12, scope: !8037)
!8156 = !DILocation(line: 5390, column: 17, scope: !8037)
!8157 = !DILocation(line: 5391, column: 11, scope: !8037)
!8158 = !DILocation(line: 5391, column: 18, scope: !8037)
!8159 = !DILocation(line: 5391, column: 54, scope: !8037)
!8160 = !DILocation(line: 5392, column: 14, scope: !8037)
!8161 = distinct !{!8161, !8157, !8160}
!8162 = !DILocation(line: 5393, column: 16, scope: !8163)
!8163 = distinct !DILexicalBlock(scope: !8037, file: !1, line: 5393, column: 15)
!8164 = !DILocation(line: 5393, column: 15, scope: !8163)
!8165 = !DILocation(line: 5393, column: 18, scope: !8163)
!8166 = !DILocation(line: 5393, column: 15, scope: !8037)
!8167 = !DILocation(line: 5394, column: 14, scope: !8163)
!8168 = !DILocation(line: 5394, column: 13, scope: !8163)
!8169 = !DILocation(line: 5395, column: 9, scope: !8037)
!8170 = !DILocation(line: 5395, column: 26, scope: !8026)
!8171 = !DILocation(line: 5395, column: 18, scope: !8026)
!8172 = !DILocation(line: 5395, column: 29, scope: !8026)
!8173 = distinct !{!8173, !8035, !8174}
!8174 = !DILocation(line: 5395, column: 43, scope: !8026)
!8175 = !DILocation(line: 5396, column: 9, scope: !8026)
!8176 = !DILocation(line: 5404, column: 9, scope: !8177)
!8177 = distinct !DILexicalBlock(scope: !8027, file: !1, line: 5400, column: 7)
!8178 = !DILocation(line: 5406, column: 11, scope: !8179)
!8179 = distinct !DILexicalBlock(scope: !8177, file: !1, line: 5405, column: 9)
!8180 = !DILocation(line: 5406, column: 21, scope: !8179)
!8181 = !DILocation(line: 5407, column: 17, scope: !8182)
!8182 = distinct !DILexicalBlock(scope: !8179, file: !1, line: 5407, column: 11)
!8183 = !DILocation(line: 5407, column: 16, scope: !8182)
!8184 = !DILocation(line: 5407, column: 21, scope: !8185)
!8185 = distinct !DILexicalBlock(scope: !8182, file: !1, line: 5407, column: 11)
!8186 = !DILocation(line: 5407, column: 23, scope: !8185)
!8187 = !DILocation(line: 5407, column: 11, scope: !8182)
!8188 = !DILocation(line: 5409, column: 28, scope: !8189)
!8189 = distinct !DILexicalBlock(scope: !8185, file: !1, line: 5408, column: 11)
!8190 = !DILocation(line: 5409, column: 33, scope: !8189)
!8191 = !DILocation(line: 5409, column: 13, scope: !8189)
!8192 = !DILocation(line: 5410, column: 17, scope: !8193)
!8193 = distinct !DILexicalBlock(scope: !8189, file: !1, line: 5410, column: 17)
!8194 = !DILocation(line: 5410, column: 24, scope: !8193)
!8195 = !DILocation(line: 5410, column: 17, scope: !8189)
!8196 = !DILocation(line: 5411, column: 30, scope: !8193)
!8197 = !DILocation(line: 5411, column: 35, scope: !8193)
!8198 = !DILocation(line: 5411, column: 15, scope: !8193)
!8199 = !DILocation(line: 5412, column: 30, scope: !8189)
!8200 = !DILocation(line: 5412, column: 15, scope: !8189)
!8201 = !DILocation(line: 5412, column: 14, scope: !8189)
!8202 = !DILocation(line: 5413, column: 28, scope: !8189)
!8203 = !DILocation(line: 5413, column: 33, scope: !8189)
!8204 = !DILocation(line: 5413, column: 13, scope: !8189)
!8205 = !DILocation(line: 5414, column: 17, scope: !8206)
!8206 = distinct !DILexicalBlock(scope: !8189, file: !1, line: 5414, column: 17)
!8207 = !DILocation(line: 5414, column: 24, scope: !8206)
!8208 = !DILocation(line: 5414, column: 17, scope: !8189)
!8209 = !DILocation(line: 5415, column: 30, scope: !8206)
!8210 = !DILocation(line: 5415, column: 35, scope: !8206)
!8211 = !DILocation(line: 5415, column: 15, scope: !8206)
!8212 = !DILocation(line: 5416, column: 30, scope: !8189)
!8213 = !DILocation(line: 5416, column: 15, scope: !8189)
!8214 = !DILocation(line: 5416, column: 14, scope: !8189)
!8215 = !DILocation(line: 5417, column: 29, scope: !8189)
!8216 = !DILocation(line: 5417, column: 39, scope: !8189)
!8217 = !DILocation(line: 5417, column: 54, scope: !8189)
!8218 = !DILocation(line: 5417, column: 64, scope: !8189)
!8219 = !DILocation(line: 5417, column: 66, scope: !8189)
!8220 = !DILocation(line: 5417, column: 65, scope: !8189)
!8221 = !DILocation(line: 5417, column: 17, scope: !8189)
!8222 = !DILocation(line: 5417, column: 18, scope: !8189)
!8223 = !DILocation(line: 5418, column: 29, scope: !8189)
!8224 = !DILocation(line: 5418, column: 39, scope: !8189)
!8225 = !DILocation(line: 5418, column: 54, scope: !8189)
!8226 = !DILocation(line: 5418, column: 64, scope: !8189)
!8227 = !DILocation(line: 5418, column: 66, scope: !8189)
!8228 = !DILocation(line: 5418, column: 65, scope: !8189)
!8229 = !DILocation(line: 5418, column: 17, scope: !8189)
!8230 = !DILocation(line: 5418, column: 18, scope: !8189)
!8231 = !DILocation(line: 5419, column: 20, scope: !8189)
!8232 = !DILocation(line: 5419, column: 13, scope: !8189)
!8233 = !DILocation(line: 5419, column: 23, scope: !8189)
!8234 = !DILocation(line: 5420, column: 11, scope: !8189)
!8235 = !DILocation(line: 5407, column: 29, scope: !8185)
!8236 = !DILocation(line: 5407, column: 11, scope: !8185)
!8237 = distinct !{!8237, !8187, !8238}
!8238 = !DILocation(line: 5420, column: 11, scope: !8182)
!8239 = !DILocation(line: 5421, column: 17, scope: !8240)
!8240 = distinct !DILexicalBlock(scope: !8179, file: !1, line: 5421, column: 11)
!8241 = !DILocation(line: 5421, column: 16, scope: !8240)
!8242 = !DILocation(line: 5421, column: 21, scope: !8243)
!8243 = distinct !DILexicalBlock(scope: !8240, file: !1, line: 5421, column: 11)
!8244 = !DILocation(line: 5421, column: 23, scope: !8243)
!8245 = !DILocation(line: 5421, column: 11, scope: !8240)
!8246 = !DILocation(line: 5422, column: 14, scope: !8243)
!8247 = !DILocation(line: 5422, column: 16, scope: !8243)
!8248 = !DILocation(line: 5422, column: 15, scope: !8243)
!8249 = !DILocation(line: 5422, column: 20, scope: !8243)
!8250 = !DILocation(line: 5422, column: 33, scope: !8243)
!8251 = !DILocation(line: 5422, column: 26, scope: !8243)
!8252 = !DILocation(line: 5422, column: 13, scope: !8243)
!8253 = !DILocation(line: 5421, column: 29, scope: !8243)
!8254 = !DILocation(line: 5421, column: 11, scope: !8243)
!8255 = distinct !{!8255, !8245, !8256}
!8256 = !DILocation(line: 5422, column: 34, scope: !8240)
!8257 = !DILocation(line: 5423, column: 23, scope: !8179)
!8258 = !DILocation(line: 5423, column: 11, scope: !8179)
!8259 = !DILocation(line: 5424, column: 14, scope: !8179)
!8260 = !DILocation(line: 5424, column: 17, scope: !8179)
!8261 = !DILocation(line: 5424, column: 12, scope: !8179)
!8262 = !DILocation(line: 5425, column: 17, scope: !8179)
!8263 = !DILocation(line: 5426, column: 9, scope: !8179)
!8264 = !DILocation(line: 5426, column: 26, scope: !8177)
!8265 = !DILocation(line: 5426, column: 18, scope: !8177)
!8266 = !DILocation(line: 5426, column: 29, scope: !8177)
!8267 = distinct !{!8267, !8176, !8268}
!8268 = !DILocation(line: 5426, column: 43, scope: !8177)
!8269 = !DILocation(line: 5427, column: 9, scope: !8177)
!8270 = !DILocation(line: 5432, column: 9, scope: !8271)
!8271 = distinct !DILexicalBlock(scope: !8027, file: !1, line: 5431, column: 7)
!8272 = !DILocation(line: 5434, column: 26, scope: !8273)
!8273 = distinct !DILexicalBlock(scope: !8271, file: !1, line: 5433, column: 9)
!8274 = !DILocation(line: 5434, column: 31, scope: !8273)
!8275 = !DILocation(line: 5434, column: 11, scope: !8273)
!8276 = !DILocation(line: 5435, column: 15, scope: !8277)
!8277 = distinct !DILexicalBlock(scope: !8273, file: !1, line: 5435, column: 15)
!8278 = !DILocation(line: 5435, column: 22, scope: !8277)
!8279 = !DILocation(line: 5435, column: 15, scope: !8273)
!8280 = !DILocation(line: 5436, column: 28, scope: !8277)
!8281 = !DILocation(line: 5436, column: 33, scope: !8277)
!8282 = !DILocation(line: 5436, column: 13, scope: !8277)
!8283 = !DILocation(line: 5437, column: 28, scope: !8273)
!8284 = !DILocation(line: 5437, column: 13, scope: !8273)
!8285 = !DILocation(line: 5437, column: 12, scope: !8273)
!8286 = !DILocation(line: 5438, column: 29, scope: !8273)
!8287 = !DILocation(line: 5438, column: 39, scope: !8273)
!8288 = !DILocation(line: 5438, column: 54, scope: !8273)
!8289 = !DILocation(line: 5438, column: 63, scope: !8273)
!8290 = !DILocation(line: 5438, column: 65, scope: !8273)
!8291 = !DILocation(line: 5438, column: 64, scope: !8273)
!8292 = !DILocation(line: 5438, column: 17, scope: !8273)
!8293 = !DILocation(line: 5438, column: 18, scope: !8273)
!8294 = !DILocation(line: 5439, column: 22, scope: !8273)
!8295 = !DILocation(line: 5439, column: 11, scope: !8273)
!8296 = !DILocation(line: 5440, column: 14, scope: !8273)
!8297 = !DILocation(line: 5440, column: 17, scope: !8273)
!8298 = !DILocation(line: 5440, column: 12, scope: !8273)
!8299 = !DILocation(line: 5441, column: 9, scope: !8273)
!8300 = !DILocation(line: 5441, column: 26, scope: !8271)
!8301 = !DILocation(line: 5441, column: 18, scope: !8271)
!8302 = !DILocation(line: 5441, column: 29, scope: !8271)
!8303 = distinct !{!8303, !8270, !8304}
!8304 = !DILocation(line: 5441, column: 43, scope: !8271)
!8305 = !DILocation(line: 5442, column: 9, scope: !8271)
!8306 = !DILocation(line: 5447, column: 9, scope: !8307)
!8307 = distinct !DILexicalBlock(scope: !8027, file: !1, line: 5446, column: 7)
!8308 = !DILocation(line: 5449, column: 26, scope: !8309)
!8309 = distinct !DILexicalBlock(scope: !8307, file: !1, line: 5448, column: 9)
!8310 = !DILocation(line: 5449, column: 31, scope: !8309)
!8311 = !DILocation(line: 5449, column: 11, scope: !8309)
!8312 = !DILocation(line: 5450, column: 15, scope: !8313)
!8313 = distinct !DILexicalBlock(scope: !8309, file: !1, line: 5450, column: 15)
!8314 = !DILocation(line: 5450, column: 22, scope: !8313)
!8315 = !DILocation(line: 5450, column: 15, scope: !8309)
!8316 = !DILocation(line: 5451, column: 28, scope: !8313)
!8317 = !DILocation(line: 5451, column: 33, scope: !8313)
!8318 = !DILocation(line: 5451, column: 13, scope: !8313)
!8319 = !DILocation(line: 5452, column: 28, scope: !8309)
!8320 = !DILocation(line: 5452, column: 13, scope: !8309)
!8321 = !DILocation(line: 5452, column: 12, scope: !8309)
!8322 = !DILocation(line: 5453, column: 26, scope: !8309)
!8323 = !DILocation(line: 5453, column: 31, scope: !8309)
!8324 = !DILocation(line: 5453, column: 11, scope: !8309)
!8325 = !DILocation(line: 5454, column: 15, scope: !8326)
!8326 = distinct !DILexicalBlock(scope: !8309, file: !1, line: 5454, column: 15)
!8327 = !DILocation(line: 5454, column: 22, scope: !8326)
!8328 = !DILocation(line: 5454, column: 15, scope: !8309)
!8329 = !DILocation(line: 5455, column: 28, scope: !8326)
!8330 = !DILocation(line: 5455, column: 33, scope: !8326)
!8331 = !DILocation(line: 5455, column: 13, scope: !8326)
!8332 = !DILocation(line: 5456, column: 28, scope: !8309)
!8333 = !DILocation(line: 5456, column: 13, scope: !8309)
!8334 = !DILocation(line: 5456, column: 12, scope: !8309)
!8335 = !DILocation(line: 5457, column: 29, scope: !8309)
!8336 = !DILocation(line: 5457, column: 39, scope: !8309)
!8337 = !DILocation(line: 5457, column: 54, scope: !8309)
!8338 = !DILocation(line: 5457, column: 64, scope: !8309)
!8339 = !DILocation(line: 5457, column: 66, scope: !8309)
!8340 = !DILocation(line: 5457, column: 65, scope: !8309)
!8341 = !DILocation(line: 5457, column: 17, scope: !8309)
!8342 = !DILocation(line: 5457, column: 18, scope: !8309)
!8343 = !DILocation(line: 5458, column: 29, scope: !8309)
!8344 = !DILocation(line: 5458, column: 39, scope: !8309)
!8345 = !DILocation(line: 5458, column: 54, scope: !8309)
!8346 = !DILocation(line: 5458, column: 64, scope: !8309)
!8347 = !DILocation(line: 5458, column: 66, scope: !8309)
!8348 = !DILocation(line: 5458, column: 65, scope: !8309)
!8349 = !DILocation(line: 5458, column: 17, scope: !8309)
!8350 = !DILocation(line: 5458, column: 18, scope: !8309)
!8351 = !DILocation(line: 5459, column: 22, scope: !8309)
!8352 = !DILocation(line: 5459, column: 11, scope: !8309)
!8353 = !DILocation(line: 5460, column: 14, scope: !8309)
!8354 = !DILocation(line: 5460, column: 17, scope: !8309)
!8355 = !DILocation(line: 5460, column: 12, scope: !8309)
!8356 = !DILocation(line: 5461, column: 9, scope: !8309)
!8357 = !DILocation(line: 5461, column: 26, scope: !8307)
!8358 = !DILocation(line: 5461, column: 18, scope: !8307)
!8359 = !DILocation(line: 5461, column: 29, scope: !8307)
!8360 = distinct !{!8360, !8306, !8361}
!8361 = !DILocation(line: 5461, column: 43, scope: !8307)
!8362 = !DILocation(line: 5462, column: 9, scope: !8307)
!8363 = !DILocation(line: 5467, column: 13, scope: !8364)
!8364 = distinct !DILexicalBlock(scope: !8365, file: !1, line: 5467, column: 13)
!8365 = distinct !DILexicalBlock(scope: !8027, file: !1, line: 5466, column: 7)
!8366 = !DILocation(line: 5467, column: 18, scope: !8364)
!8367 = !DILocation(line: 5467, column: 15, scope: !8364)
!8368 = !DILocation(line: 5467, column: 13, scope: !8365)
!8369 = !DILocation(line: 5469, column: 51, scope: !8370)
!8370 = distinct !DILexicalBlock(scope: !8364, file: !1, line: 5468, column: 11)
!8371 = !DILocation(line: 5469, column: 53, scope: !8370)
!8372 = !DILocation(line: 5469, column: 52, scope: !8370)
!8373 = !DILocation(line: 5469, column: 13, scope: !8370)
!8374 = !DILocation(line: 5469, column: 29, scope: !8370)
!8375 = !DILocation(line: 5469, column: 40, scope: !8370)
!8376 = !DILocation(line: 5470, column: 33, scope: !8370)
!8377 = !DILocation(line: 5470, column: 49, scope: !8370)
!8378 = !DILocation(line: 5470, column: 31, scope: !8370)
!8379 = !DILocation(line: 5471, column: 28, scope: !8370)
!8380 = !DILocation(line: 5471, column: 27, scope: !8370)
!8381 = !DILocation(line: 5472, column: 11, scope: !8370)
!8382 = !DILocation(line: 5473, column: 10, scope: !8365)
!8383 = !DILocation(line: 5474, column: 9, scope: !8365)
!8384 = !DILocation(line: 5476, column: 26, scope: !8385)
!8385 = distinct !DILexicalBlock(scope: !8365, file: !1, line: 5475, column: 9)
!8386 = !DILocation(line: 5476, column: 31, scope: !8385)
!8387 = !DILocation(line: 5476, column: 11, scope: !8385)
!8388 = !DILocation(line: 5477, column: 15, scope: !8389)
!8389 = distinct !DILexicalBlock(scope: !8385, file: !1, line: 5477, column: 15)
!8390 = !DILocation(line: 5477, column: 22, scope: !8389)
!8391 = !DILocation(line: 5477, column: 15, scope: !8385)
!8392 = !DILocation(line: 5478, column: 28, scope: !8389)
!8393 = !DILocation(line: 5478, column: 33, scope: !8389)
!8394 = !DILocation(line: 5478, column: 13, scope: !8389)
!8395 = !DILocation(line: 5479, column: 28, scope: !8385)
!8396 = !DILocation(line: 5479, column: 13, scope: !8385)
!8397 = !DILocation(line: 5479, column: 12, scope: !8385)
!8398 = !DILocation(line: 5480, column: 26, scope: !8385)
!8399 = !DILocation(line: 5480, column: 31, scope: !8385)
!8400 = !DILocation(line: 5480, column: 11, scope: !8385)
!8401 = !DILocation(line: 5481, column: 15, scope: !8402)
!8402 = distinct !DILexicalBlock(scope: !8385, file: !1, line: 5481, column: 15)
!8403 = !DILocation(line: 5481, column: 22, scope: !8402)
!8404 = !DILocation(line: 5481, column: 15, scope: !8385)
!8405 = !DILocation(line: 5482, column: 28, scope: !8402)
!8406 = !DILocation(line: 5482, column: 33, scope: !8402)
!8407 = !DILocation(line: 5482, column: 13, scope: !8402)
!8408 = !DILocation(line: 5483, column: 28, scope: !8385)
!8409 = !DILocation(line: 5483, column: 13, scope: !8385)
!8410 = !DILocation(line: 5483, column: 12, scope: !8385)
!8411 = !DILocation(line: 5484, column: 29, scope: !8385)
!8412 = !DILocation(line: 5484, column: 39, scope: !8385)
!8413 = !DILocation(line: 5484, column: 54, scope: !8385)
!8414 = !DILocation(line: 5484, column: 64, scope: !8385)
!8415 = !DILocation(line: 5484, column: 66, scope: !8385)
!8416 = !DILocation(line: 5484, column: 65, scope: !8385)
!8417 = !DILocation(line: 5484, column: 17, scope: !8385)
!8418 = !DILocation(line: 5484, column: 18, scope: !8385)
!8419 = !DILocation(line: 5485, column: 29, scope: !8385)
!8420 = !DILocation(line: 5485, column: 39, scope: !8385)
!8421 = !DILocation(line: 5485, column: 54, scope: !8385)
!8422 = !DILocation(line: 5485, column: 64, scope: !8385)
!8423 = !DILocation(line: 5485, column: 66, scope: !8385)
!8424 = !DILocation(line: 5485, column: 65, scope: !8385)
!8425 = !DILocation(line: 5485, column: 17, scope: !8385)
!8426 = !DILocation(line: 5485, column: 18, scope: !8385)
!8427 = !DILocation(line: 5486, column: 15, scope: !8428)
!8428 = distinct !DILexicalBlock(scope: !8385, file: !1, line: 5486, column: 15)
!8429 = !DILocation(line: 5486, column: 17, scope: !8428)
!8430 = !DILocation(line: 5486, column: 15, scope: !8385)
!8431 = !DILocation(line: 5487, column: 19, scope: !8428)
!8432 = !DILocation(line: 5487, column: 13, scope: !8428)
!8433 = !DILocation(line: 5488, column: 12, scope: !8385)
!8434 = !DILocation(line: 5489, column: 22, scope: !8385)
!8435 = !DILocation(line: 5489, column: 11, scope: !8385)
!8436 = !DILocation(line: 5490, column: 14, scope: !8385)
!8437 = !DILocation(line: 5490, column: 17, scope: !8385)
!8438 = !DILocation(line: 5490, column: 12, scope: !8385)
!8439 = !DILocation(line: 5491, column: 16, scope: !8440)
!8440 = distinct !DILexicalBlock(scope: !8385, file: !1, line: 5491, column: 15)
!8441 = !DILocation(line: 5491, column: 18, scope: !8440)
!8442 = !DILocation(line: 5491, column: 24, scope: !8440)
!8443 = !DILocation(line: 5491, column: 28, scope: !8440)
!8444 = !DILocation(line: 5491, column: 38, scope: !8440)
!8445 = !DILocation(line: 5491, column: 15, scope: !8385)
!8446 = !DILocation(line: 5493, column: 26, scope: !8447)
!8447 = distinct !DILexicalBlock(scope: !8440, file: !1, line: 5492, column: 13)
!8448 = !DILocation(line: 5493, column: 15, scope: !8447)
!8449 = !DILocation(line: 5494, column: 18, scope: !8447)
!8450 = !DILocation(line: 5494, column: 21, scope: !8447)
!8451 = !DILocation(line: 5494, column: 16, scope: !8447)
!8452 = !DILocation(line: 5495, column: 13, scope: !8447)
!8453 = !DILocation(line: 5496, column: 9, scope: !8385)
!8454 = !DILocation(line: 5496, column: 26, scope: !8365)
!8455 = !DILocation(line: 5496, column: 18, scope: !8365)
!8456 = !DILocation(line: 5496, column: 29, scope: !8365)
!8457 = distinct !{!8457, !8383, !8458}
!8458 = !DILocation(line: 5496, column: 43, scope: !8365)
!8459 = !DILocation(line: 5497, column: 9, scope: !8365)
!8460 = !DILocation(line: 5505, column: 9, scope: !8461)
!8461 = distinct !DILexicalBlock(scope: !8027, file: !1, line: 5501, column: 7)
!8462 = !DILocation(line: 5507, column: 11, scope: !8463)
!8463 = distinct !DILexicalBlock(scope: !8461, file: !1, line: 5506, column: 9)
!8464 = !DILocation(line: 5507, column: 21, scope: !8463)
!8465 = !DILocation(line: 5508, column: 17, scope: !8466)
!8466 = distinct !DILexicalBlock(scope: !8463, file: !1, line: 5508, column: 11)
!8467 = !DILocation(line: 5508, column: 16, scope: !8466)
!8468 = !DILocation(line: 5508, column: 21, scope: !8469)
!8469 = distinct !DILexicalBlock(scope: !8466, file: !1, line: 5508, column: 11)
!8470 = !DILocation(line: 5508, column: 23, scope: !8469)
!8471 = !DILocation(line: 5508, column: 11, scope: !8466)
!8472 = !DILocation(line: 5510, column: 28, scope: !8473)
!8473 = distinct !DILexicalBlock(scope: !8469, file: !1, line: 5509, column: 11)
!8474 = !DILocation(line: 5510, column: 33, scope: !8473)
!8475 = !DILocation(line: 5510, column: 13, scope: !8473)
!8476 = !DILocation(line: 5511, column: 17, scope: !8477)
!8477 = distinct !DILexicalBlock(scope: !8473, file: !1, line: 5511, column: 17)
!8478 = !DILocation(line: 5511, column: 24, scope: !8477)
!8479 = !DILocation(line: 5511, column: 17, scope: !8473)
!8480 = !DILocation(line: 5512, column: 30, scope: !8477)
!8481 = !DILocation(line: 5512, column: 35, scope: !8477)
!8482 = !DILocation(line: 5512, column: 15, scope: !8477)
!8483 = !DILocation(line: 5513, column: 30, scope: !8473)
!8484 = !DILocation(line: 5513, column: 15, scope: !8473)
!8485 = !DILocation(line: 5513, column: 14, scope: !8473)
!8486 = !DILocation(line: 5514, column: 28, scope: !8473)
!8487 = !DILocation(line: 5514, column: 33, scope: !8473)
!8488 = !DILocation(line: 5514, column: 13, scope: !8473)
!8489 = !DILocation(line: 5515, column: 17, scope: !8490)
!8490 = distinct !DILexicalBlock(scope: !8473, file: !1, line: 5515, column: 17)
!8491 = !DILocation(line: 5515, column: 24, scope: !8490)
!8492 = !DILocation(line: 5515, column: 17, scope: !8473)
!8493 = !DILocation(line: 5516, column: 30, scope: !8490)
!8494 = !DILocation(line: 5516, column: 35, scope: !8490)
!8495 = !DILocation(line: 5516, column: 15, scope: !8490)
!8496 = !DILocation(line: 5517, column: 30, scope: !8473)
!8497 = !DILocation(line: 5517, column: 15, scope: !8473)
!8498 = !DILocation(line: 5517, column: 14, scope: !8473)
!8499 = !DILocation(line: 5518, column: 18, scope: !8500)
!8500 = distinct !DILexicalBlock(scope: !8473, file: !1, line: 5518, column: 17)
!8501 = !DILocation(line: 5518, column: 17, scope: !8500)
!8502 = !DILocation(line: 5518, column: 20, scope: !8500)
!8503 = !DILocation(line: 5518, column: 17, scope: !8473)
!8504 = !DILocation(line: 5519, column: 16, scope: !8500)
!8505 = !DILocation(line: 5519, column: 15, scope: !8500)
!8506 = !DILocation(line: 5520, column: 29, scope: !8473)
!8507 = !DILocation(line: 5520, column: 39, scope: !8473)
!8508 = !DILocation(line: 5520, column: 54, scope: !8473)
!8509 = !DILocation(line: 5520, column: 64, scope: !8473)
!8510 = !DILocation(line: 5520, column: 66, scope: !8473)
!8511 = !DILocation(line: 5520, column: 65, scope: !8473)
!8512 = !DILocation(line: 5520, column: 17, scope: !8473)
!8513 = !DILocation(line: 5520, column: 18, scope: !8473)
!8514 = !DILocation(line: 5521, column: 29, scope: !8473)
!8515 = !DILocation(line: 5521, column: 39, scope: !8473)
!8516 = !DILocation(line: 5521, column: 54, scope: !8473)
!8517 = !DILocation(line: 5521, column: 64, scope: !8473)
!8518 = !DILocation(line: 5521, column: 66, scope: !8473)
!8519 = !DILocation(line: 5521, column: 65, scope: !8473)
!8520 = !DILocation(line: 5521, column: 17, scope: !8473)
!8521 = !DILocation(line: 5521, column: 18, scope: !8473)
!8522 = !DILocation(line: 5522, column: 20, scope: !8473)
!8523 = !DILocation(line: 5522, column: 13, scope: !8473)
!8524 = !DILocation(line: 5522, column: 23, scope: !8473)
!8525 = !DILocation(line: 5523, column: 11, scope: !8473)
!8526 = !DILocation(line: 5508, column: 29, scope: !8469)
!8527 = !DILocation(line: 5508, column: 11, scope: !8469)
!8528 = distinct !{!8528, !8471, !8529}
!8529 = !DILocation(line: 5523, column: 11, scope: !8466)
!8530 = !DILocation(line: 5524, column: 17, scope: !8531)
!8531 = distinct !DILexicalBlock(scope: !8463, file: !1, line: 5524, column: 11)
!8532 = !DILocation(line: 5524, column: 16, scope: !8531)
!8533 = !DILocation(line: 5524, column: 21, scope: !8534)
!8534 = distinct !DILexicalBlock(scope: !8531, file: !1, line: 5524, column: 11)
!8535 = !DILocation(line: 5524, column: 23, scope: !8534)
!8536 = !DILocation(line: 5524, column: 11, scope: !8531)
!8537 = !DILocation(line: 5525, column: 14, scope: !8534)
!8538 = !DILocation(line: 5525, column: 16, scope: !8534)
!8539 = !DILocation(line: 5525, column: 15, scope: !8534)
!8540 = !DILocation(line: 5525, column: 20, scope: !8534)
!8541 = !DILocation(line: 5525, column: 33, scope: !8534)
!8542 = !DILocation(line: 5525, column: 26, scope: !8534)
!8543 = !DILocation(line: 5525, column: 13, scope: !8534)
!8544 = !DILocation(line: 5524, column: 29, scope: !8534)
!8545 = !DILocation(line: 5524, column: 11, scope: !8534)
!8546 = distinct !{!8546, !8536, !8547}
!8547 = !DILocation(line: 5525, column: 34, scope: !8531)
!8548 = !DILocation(line: 5526, column: 23, scope: !8463)
!8549 = !DILocation(line: 5526, column: 11, scope: !8463)
!8550 = !DILocation(line: 5527, column: 14, scope: !8463)
!8551 = !DILocation(line: 5527, column: 17, scope: !8463)
!8552 = !DILocation(line: 5527, column: 12, scope: !8463)
!8553 = !DILocation(line: 5528, column: 17, scope: !8463)
!8554 = !DILocation(line: 5529, column: 9, scope: !8463)
!8555 = !DILocation(line: 5529, column: 26, scope: !8461)
!8556 = !DILocation(line: 5529, column: 18, scope: !8461)
!8557 = !DILocation(line: 5529, column: 29, scope: !8461)
!8558 = distinct !{!8558, !8460, !8559}
!8559 = !DILocation(line: 5529, column: 43, scope: !8461)
!8560 = !DILocation(line: 5530, column: 9, scope: !8461)
!8561 = !DILocation(line: 5538, column: 9, scope: !8562)
!8562 = distinct !DILexicalBlock(scope: !8027, file: !1, line: 5534, column: 7)
!8563 = !DILocation(line: 5540, column: 11, scope: !8564)
!8564 = distinct !DILexicalBlock(scope: !8562, file: !1, line: 5539, column: 9)
!8565 = !DILocation(line: 5540, column: 21, scope: !8564)
!8566 = !DILocation(line: 5541, column: 27, scope: !8564)
!8567 = !DILocation(line: 5541, column: 37, scope: !8564)
!8568 = !DILocation(line: 5541, column: 26, scope: !8564)
!8569 = !DILocation(line: 5541, column: 39, scope: !8564)
!8570 = !DILocation(line: 5541, column: 49, scope: !8564)
!8571 = !DILocation(line: 5541, column: 38, scope: !8564)
!8572 = !DILocation(line: 5541, column: 11, scope: !8564)
!8573 = !DILocation(line: 5541, column: 21, scope: !8564)
!8574 = !DILocation(line: 5541, column: 22, scope: !8564)
!8575 = !DILocation(line: 5542, column: 27, scope: !8564)
!8576 = !DILocation(line: 5542, column: 37, scope: !8564)
!8577 = !DILocation(line: 5542, column: 26, scope: !8564)
!8578 = !DILocation(line: 5542, column: 39, scope: !8564)
!8579 = !DILocation(line: 5542, column: 49, scope: !8564)
!8580 = !DILocation(line: 5542, column: 38, scope: !8564)
!8581 = !DILocation(line: 5542, column: 11, scope: !8564)
!8582 = !DILocation(line: 5542, column: 21, scope: !8564)
!8583 = !DILocation(line: 5542, column: 22, scope: !8564)
!8584 = !DILocation(line: 5543, column: 17, scope: !8585)
!8585 = distinct !DILexicalBlock(scope: !8564, file: !1, line: 5543, column: 11)
!8586 = !DILocation(line: 5543, column: 16, scope: !8585)
!8587 = !DILocation(line: 5543, column: 21, scope: !8588)
!8588 = distinct !DILexicalBlock(scope: !8585, file: !1, line: 5543, column: 11)
!8589 = !DILocation(line: 5543, column: 23, scope: !8588)
!8590 = !DILocation(line: 5543, column: 11, scope: !8585)
!8591 = !DILocation(line: 5545, column: 28, scope: !8592)
!8592 = distinct !DILexicalBlock(scope: !8588, file: !1, line: 5544, column: 11)
!8593 = !DILocation(line: 5545, column: 33, scope: !8592)
!8594 = !DILocation(line: 5545, column: 13, scope: !8592)
!8595 = !DILocation(line: 5546, column: 17, scope: !8596)
!8596 = distinct !DILexicalBlock(scope: !8592, file: !1, line: 5546, column: 17)
!8597 = !DILocation(line: 5546, column: 24, scope: !8596)
!8598 = !DILocation(line: 5546, column: 17, scope: !8592)
!8599 = !DILocation(line: 5547, column: 30, scope: !8596)
!8600 = !DILocation(line: 5547, column: 35, scope: !8596)
!8601 = !DILocation(line: 5547, column: 15, scope: !8596)
!8602 = !DILocation(line: 5548, column: 30, scope: !8592)
!8603 = !DILocation(line: 5548, column: 15, scope: !8592)
!8604 = !DILocation(line: 5548, column: 14, scope: !8592)
!8605 = !DILocation(line: 5549, column: 28, scope: !8592)
!8606 = !DILocation(line: 5549, column: 33, scope: !8592)
!8607 = !DILocation(line: 5549, column: 13, scope: !8592)
!8608 = !DILocation(line: 5550, column: 17, scope: !8609)
!8609 = distinct !DILexicalBlock(scope: !8592, file: !1, line: 5550, column: 17)
!8610 = !DILocation(line: 5550, column: 24, scope: !8609)
!8611 = !DILocation(line: 5550, column: 17, scope: !8592)
!8612 = !DILocation(line: 5551, column: 30, scope: !8609)
!8613 = !DILocation(line: 5551, column: 35, scope: !8609)
!8614 = !DILocation(line: 5551, column: 15, scope: !8609)
!8615 = !DILocation(line: 5552, column: 30, scope: !8592)
!8616 = !DILocation(line: 5552, column: 15, scope: !8592)
!8617 = !DILocation(line: 5552, column: 14, scope: !8592)
!8618 = !DILocation(line: 5553, column: 18, scope: !8619)
!8619 = distinct !DILexicalBlock(scope: !8592, file: !1, line: 5553, column: 17)
!8620 = !DILocation(line: 5553, column: 17, scope: !8619)
!8621 = !DILocation(line: 5553, column: 20, scope: !8619)
!8622 = !DILocation(line: 5553, column: 17, scope: !8592)
!8623 = !DILocation(line: 5554, column: 16, scope: !8619)
!8624 = !DILocation(line: 5554, column: 15, scope: !8619)
!8625 = !DILocation(line: 5555, column: 29, scope: !8592)
!8626 = !DILocation(line: 5555, column: 39, scope: !8592)
!8627 = !DILocation(line: 5555, column: 54, scope: !8592)
!8628 = !DILocation(line: 5555, column: 64, scope: !8592)
!8629 = !DILocation(line: 5555, column: 66, scope: !8592)
!8630 = !DILocation(line: 5555, column: 65, scope: !8592)
!8631 = !DILocation(line: 5555, column: 17, scope: !8592)
!8632 = !DILocation(line: 5555, column: 18, scope: !8592)
!8633 = !DILocation(line: 5556, column: 29, scope: !8592)
!8634 = !DILocation(line: 5556, column: 39, scope: !8592)
!8635 = !DILocation(line: 5556, column: 54, scope: !8592)
!8636 = !DILocation(line: 5556, column: 64, scope: !8592)
!8637 = !DILocation(line: 5556, column: 66, scope: !8592)
!8638 = !DILocation(line: 5556, column: 65, scope: !8592)
!8639 = !DILocation(line: 5556, column: 17, scope: !8592)
!8640 = !DILocation(line: 5556, column: 18, scope: !8592)
!8641 = !DILocation(line: 5557, column: 20, scope: !8592)
!8642 = !DILocation(line: 5557, column: 13, scope: !8592)
!8643 = !DILocation(line: 5557, column: 23, scope: !8592)
!8644 = !DILocation(line: 5558, column: 11, scope: !8592)
!8645 = !DILocation(line: 5543, column: 29, scope: !8588)
!8646 = !DILocation(line: 5543, column: 11, scope: !8588)
!8647 = distinct !{!8647, !8590, !8648}
!8648 = !DILocation(line: 5558, column: 11, scope: !8585)
!8649 = !DILocation(line: 5559, column: 29, scope: !8650)
!8650 = distinct !DILexicalBlock(scope: !8564, file: !1, line: 5559, column: 15)
!8651 = !DILocation(line: 5559, column: 15, scope: !8650)
!8652 = !DILocation(line: 5559, column: 45, scope: !8650)
!8653 = !DILocation(line: 5559, column: 15, scope: !8564)
!8654 = !DILocation(line: 5561, column: 15, scope: !8655)
!8655 = distinct !DILexicalBlock(scope: !8650, file: !1, line: 5560, column: 13)
!8656 = !DILocation(line: 5561, column: 25, scope: !8655)
!8657 = !DILocation(line: 5562, column: 15, scope: !8655)
!8658 = !DILocation(line: 5562, column: 25, scope: !8655)
!8659 = !DILocation(line: 5563, column: 13, scope: !8655)
!8660 = !DILocation(line: 5564, column: 17, scope: !8661)
!8661 = distinct !DILexicalBlock(scope: !8564, file: !1, line: 5564, column: 11)
!8662 = !DILocation(line: 5564, column: 16, scope: !8661)
!8663 = !DILocation(line: 5564, column: 21, scope: !8664)
!8664 = distinct !DILexicalBlock(scope: !8661, file: !1, line: 5564, column: 11)
!8665 = !DILocation(line: 5564, column: 23, scope: !8664)
!8666 = !DILocation(line: 5564, column: 11, scope: !8661)
!8667 = !DILocation(line: 5565, column: 14, scope: !8664)
!8668 = !DILocation(line: 5565, column: 16, scope: !8664)
!8669 = !DILocation(line: 5565, column: 15, scope: !8664)
!8670 = !DILocation(line: 5565, column: 20, scope: !8664)
!8671 = !DILocation(line: 5565, column: 33, scope: !8664)
!8672 = !DILocation(line: 5565, column: 26, scope: !8664)
!8673 = !DILocation(line: 5565, column: 13, scope: !8664)
!8674 = !DILocation(line: 5564, column: 29, scope: !8664)
!8675 = !DILocation(line: 5564, column: 11, scope: !8664)
!8676 = distinct !{!8676, !8666, !8677}
!8677 = !DILocation(line: 5565, column: 34, scope: !8661)
!8678 = !DILocation(line: 5566, column: 23, scope: !8564)
!8679 = !DILocation(line: 5566, column: 11, scope: !8564)
!8680 = !DILocation(line: 5567, column: 14, scope: !8564)
!8681 = !DILocation(line: 5567, column: 17, scope: !8564)
!8682 = !DILocation(line: 5567, column: 12, scope: !8564)
!8683 = !DILocation(line: 5568, column: 17, scope: !8564)
!8684 = !DILocation(line: 5569, column: 9, scope: !8564)
!8685 = !DILocation(line: 5569, column: 26, scope: !8562)
!8686 = !DILocation(line: 5569, column: 18, scope: !8562)
!8687 = !DILocation(line: 5569, column: 29, scope: !8562)
!8688 = distinct !{!8688, !8561, !8689}
!8689 = !DILocation(line: 5569, column: 43, scope: !8562)
!8690 = !DILocation(line: 5570, column: 9, scope: !8562)
!8691 = !DILocation(line: 5578, column: 9, scope: !8692)
!8692 = distinct !DILexicalBlock(scope: !8027, file: !1, line: 5574, column: 7)
!8693 = !DILocation(line: 5580, column: 11, scope: !8694)
!8694 = distinct !DILexicalBlock(scope: !8692, file: !1, line: 5579, column: 9)
!8695 = !DILocation(line: 5580, column: 21, scope: !8694)
!8696 = !DILocation(line: 5581, column: 27, scope: !8694)
!8697 = !DILocation(line: 5581, column: 37, scope: !8694)
!8698 = !DILocation(line: 5581, column: 26, scope: !8694)
!8699 = !DILocation(line: 5581, column: 39, scope: !8694)
!8700 = !DILocation(line: 5581, column: 49, scope: !8694)
!8701 = !DILocation(line: 5581, column: 38, scope: !8694)
!8702 = !DILocation(line: 5581, column: 11, scope: !8694)
!8703 = !DILocation(line: 5581, column: 21, scope: !8694)
!8704 = !DILocation(line: 5581, column: 22, scope: !8694)
!8705 = !DILocation(line: 5582, column: 27, scope: !8694)
!8706 = !DILocation(line: 5582, column: 37, scope: !8694)
!8707 = !DILocation(line: 5582, column: 26, scope: !8694)
!8708 = !DILocation(line: 5582, column: 39, scope: !8694)
!8709 = !DILocation(line: 5582, column: 49, scope: !8694)
!8710 = !DILocation(line: 5582, column: 38, scope: !8694)
!8711 = !DILocation(line: 5582, column: 11, scope: !8694)
!8712 = !DILocation(line: 5582, column: 21, scope: !8694)
!8713 = !DILocation(line: 5582, column: 22, scope: !8694)
!8714 = !DILocation(line: 5583, column: 17, scope: !8715)
!8715 = distinct !DILexicalBlock(scope: !8694, file: !1, line: 5583, column: 11)
!8716 = !DILocation(line: 5583, column: 16, scope: !8715)
!8717 = !DILocation(line: 5583, column: 21, scope: !8718)
!8718 = distinct !DILexicalBlock(scope: !8715, file: !1, line: 5583, column: 11)
!8719 = !DILocation(line: 5583, column: 23, scope: !8718)
!8720 = !DILocation(line: 5583, column: 11, scope: !8715)
!8721 = !DILocation(line: 5585, column: 28, scope: !8722)
!8722 = distinct !DILexicalBlock(scope: !8718, file: !1, line: 5584, column: 11)
!8723 = !DILocation(line: 5585, column: 33, scope: !8722)
!8724 = !DILocation(line: 5585, column: 13, scope: !8722)
!8725 = !DILocation(line: 5586, column: 17, scope: !8726)
!8726 = distinct !DILexicalBlock(scope: !8722, file: !1, line: 5586, column: 17)
!8727 = !DILocation(line: 5586, column: 24, scope: !8726)
!8728 = !DILocation(line: 5586, column: 17, scope: !8722)
!8729 = !DILocation(line: 5587, column: 30, scope: !8726)
!8730 = !DILocation(line: 5587, column: 35, scope: !8726)
!8731 = !DILocation(line: 5587, column: 15, scope: !8726)
!8732 = !DILocation(line: 5588, column: 30, scope: !8722)
!8733 = !DILocation(line: 5588, column: 15, scope: !8722)
!8734 = !DILocation(line: 5588, column: 14, scope: !8722)
!8735 = !DILocation(line: 5589, column: 28, scope: !8722)
!8736 = !DILocation(line: 5589, column: 33, scope: !8722)
!8737 = !DILocation(line: 5589, column: 13, scope: !8722)
!8738 = !DILocation(line: 5590, column: 17, scope: !8739)
!8739 = distinct !DILexicalBlock(scope: !8722, file: !1, line: 5590, column: 17)
!8740 = !DILocation(line: 5590, column: 24, scope: !8739)
!8741 = !DILocation(line: 5590, column: 17, scope: !8722)
!8742 = !DILocation(line: 5591, column: 30, scope: !8739)
!8743 = !DILocation(line: 5591, column: 35, scope: !8739)
!8744 = !DILocation(line: 5591, column: 15, scope: !8739)
!8745 = !DILocation(line: 5592, column: 30, scope: !8722)
!8746 = !DILocation(line: 5592, column: 15, scope: !8722)
!8747 = !DILocation(line: 5592, column: 14, scope: !8722)
!8748 = !DILocation(line: 5593, column: 29, scope: !8722)
!8749 = !DILocation(line: 5593, column: 39, scope: !8722)
!8750 = !DILocation(line: 5593, column: 54, scope: !8722)
!8751 = !DILocation(line: 5593, column: 64, scope: !8722)
!8752 = !DILocation(line: 5593, column: 66, scope: !8722)
!8753 = !DILocation(line: 5593, column: 65, scope: !8722)
!8754 = !DILocation(line: 5593, column: 17, scope: !8722)
!8755 = !DILocation(line: 5593, column: 18, scope: !8722)
!8756 = !DILocation(line: 5594, column: 29, scope: !8722)
!8757 = !DILocation(line: 5594, column: 39, scope: !8722)
!8758 = !DILocation(line: 5594, column: 54, scope: !8722)
!8759 = !DILocation(line: 5594, column: 64, scope: !8722)
!8760 = !DILocation(line: 5594, column: 66, scope: !8722)
!8761 = !DILocation(line: 5594, column: 65, scope: !8722)
!8762 = !DILocation(line: 5594, column: 17, scope: !8722)
!8763 = !DILocation(line: 5594, column: 18, scope: !8722)
!8764 = !DILocation(line: 5595, column: 20, scope: !8722)
!8765 = !DILocation(line: 5595, column: 13, scope: !8722)
!8766 = !DILocation(line: 5595, column: 23, scope: !8722)
!8767 = !DILocation(line: 5596, column: 11, scope: !8722)
!8768 = !DILocation(line: 5583, column: 29, scope: !8718)
!8769 = !DILocation(line: 5583, column: 11, scope: !8718)
!8770 = distinct !{!8770, !8720, !8771}
!8771 = !DILocation(line: 5596, column: 11, scope: !8715)
!8772 = !DILocation(line: 5597, column: 29, scope: !8773)
!8773 = distinct !DILexicalBlock(scope: !8694, file: !1, line: 5597, column: 15)
!8774 = !DILocation(line: 5597, column: 15, scope: !8773)
!8775 = !DILocation(line: 5597, column: 45, scope: !8773)
!8776 = !DILocation(line: 5597, column: 15, scope: !8694)
!8777 = !DILocation(line: 5599, column: 15, scope: !8778)
!8778 = distinct !DILexicalBlock(scope: !8773, file: !1, line: 5598, column: 13)
!8779 = !DILocation(line: 5599, column: 25, scope: !8778)
!8780 = !DILocation(line: 5600, column: 15, scope: !8778)
!8781 = !DILocation(line: 5600, column: 25, scope: !8778)
!8782 = !DILocation(line: 5601, column: 13, scope: !8778)
!8783 = !DILocation(line: 5602, column: 17, scope: !8784)
!8784 = distinct !DILexicalBlock(scope: !8694, file: !1, line: 5602, column: 11)
!8785 = !DILocation(line: 5602, column: 16, scope: !8784)
!8786 = !DILocation(line: 5602, column: 21, scope: !8787)
!8787 = distinct !DILexicalBlock(scope: !8784, file: !1, line: 5602, column: 11)
!8788 = !DILocation(line: 5602, column: 23, scope: !8787)
!8789 = !DILocation(line: 5602, column: 11, scope: !8784)
!8790 = !DILocation(line: 5603, column: 14, scope: !8787)
!8791 = !DILocation(line: 5603, column: 16, scope: !8787)
!8792 = !DILocation(line: 5603, column: 15, scope: !8787)
!8793 = !DILocation(line: 5603, column: 20, scope: !8787)
!8794 = !DILocation(line: 5603, column: 33, scope: !8787)
!8795 = !DILocation(line: 5603, column: 26, scope: !8787)
!8796 = !DILocation(line: 5603, column: 13, scope: !8787)
!8797 = !DILocation(line: 5602, column: 29, scope: !8787)
!8798 = !DILocation(line: 5602, column: 11, scope: !8787)
!8799 = distinct !{!8799, !8789, !8800}
!8800 = !DILocation(line: 5603, column: 34, scope: !8784)
!8801 = !DILocation(line: 5604, column: 23, scope: !8694)
!8802 = !DILocation(line: 5604, column: 11, scope: !8694)
!8803 = !DILocation(line: 5605, column: 14, scope: !8694)
!8804 = !DILocation(line: 5605, column: 17, scope: !8694)
!8805 = !DILocation(line: 5605, column: 12, scope: !8694)
!8806 = !DILocation(line: 5606, column: 17, scope: !8694)
!8807 = !DILocation(line: 5607, column: 9, scope: !8694)
!8808 = !DILocation(line: 5607, column: 26, scope: !8692)
!8809 = !DILocation(line: 5607, column: 18, scope: !8692)
!8810 = !DILocation(line: 5607, column: 29, scope: !8692)
!8811 = distinct !{!8811, !8691, !8812}
!8812 = !DILocation(line: 5607, column: 43, scope: !8692)
!8813 = !DILocation(line: 5608, column: 9, scope: !8692)
!8814 = !DILocation(line: 5613, column: 9, scope: !8815)
!8815 = distinct !DILexicalBlock(scope: !8027, file: !1, line: 5612, column: 7)
!8816 = !DILocation(line: 5615, column: 26, scope: !8817)
!8817 = distinct !DILexicalBlock(scope: !8815, file: !1, line: 5614, column: 9)
!8818 = !DILocation(line: 5615, column: 31, scope: !8817)
!8819 = !DILocation(line: 5615, column: 11, scope: !8817)
!8820 = !DILocation(line: 5616, column: 15, scope: !8821)
!8821 = distinct !DILexicalBlock(scope: !8817, file: !1, line: 5616, column: 15)
!8822 = !DILocation(line: 5616, column: 22, scope: !8821)
!8823 = !DILocation(line: 5616, column: 15, scope: !8817)
!8824 = !DILocation(line: 5617, column: 28, scope: !8821)
!8825 = !DILocation(line: 5617, column: 33, scope: !8821)
!8826 = !DILocation(line: 5617, column: 13, scope: !8821)
!8827 = !DILocation(line: 5618, column: 28, scope: !8817)
!8828 = !DILocation(line: 5618, column: 13, scope: !8817)
!8829 = !DILocation(line: 5618, column: 12, scope: !8817)
!8830 = !DILocation(line: 5619, column: 29, scope: !8817)
!8831 = !DILocation(line: 5619, column: 39, scope: !8817)
!8832 = !DILocation(line: 5619, column: 54, scope: !8817)
!8833 = !DILocation(line: 5619, column: 64, scope: !8817)
!8834 = !DILocation(line: 5619, column: 66, scope: !8817)
!8835 = !DILocation(line: 5619, column: 65, scope: !8817)
!8836 = !DILocation(line: 5619, column: 17, scope: !8817)
!8837 = !DILocation(line: 5619, column: 18, scope: !8817)
!8838 = !DILocation(line: 5620, column: 22, scope: !8817)
!8839 = !DILocation(line: 5620, column: 11, scope: !8817)
!8840 = !DILocation(line: 5621, column: 14, scope: !8817)
!8841 = !DILocation(line: 5621, column: 17, scope: !8817)
!8842 = !DILocation(line: 5621, column: 12, scope: !8817)
!8843 = !DILocation(line: 5622, column: 9, scope: !8817)
!8844 = !DILocation(line: 5622, column: 26, scope: !8815)
!8845 = !DILocation(line: 5622, column: 18, scope: !8815)
!8846 = !DILocation(line: 5622, column: 29, scope: !8815)
!8847 = distinct !{!8847, !8814, !8848}
!8848 = !DILocation(line: 5622, column: 43, scope: !8815)
!8849 = !DILocation(line: 5623, column: 9, scope: !8815)
!8850 = !DILocation(line: 5628, column: 15, scope: !8851)
!8851 = distinct !DILexicalBlock(scope: !8027, file: !1, line: 5627, column: 7)
!8852 = !DILocation(line: 5629, column: 20, scope: !8851)
!8853 = !DILocation(line: 5629, column: 9, scope: !8851)
!8854 = !DILocation(line: 5630, column: 12, scope: !8851)
!8855 = !DILocation(line: 5630, column: 15, scope: !8851)
!8856 = !DILocation(line: 5630, column: 10, scope: !8851)
!8857 = !DILocation(line: 5631, column: 47, scope: !8851)
!8858 = !DILocation(line: 5631, column: 49, scope: !8851)
!8859 = !DILocation(line: 5631, column: 48, scope: !8851)
!8860 = !DILocation(line: 5631, column: 9, scope: !8851)
!8861 = !DILocation(line: 5631, column: 25, scope: !8851)
!8862 = !DILocation(line: 5631, column: 36, scope: !8851)
!8863 = !DILocation(line: 5632, column: 29, scope: !8851)
!8864 = !DILocation(line: 5632, column: 45, scope: !8851)
!8865 = !DILocation(line: 5632, column: 27, scope: !8851)
!8866 = !DILocation(line: 5633, column: 24, scope: !8851)
!8867 = !DILocation(line: 5633, column: 23, scope: !8851)
!8868 = !DILocation(line: 5634, column: 16, scope: !8851)
!8869 = !DILocation(line: 5635, column: 9, scope: !8851)
!8870 = !DILocation(line: 5639, column: 13, scope: !8871)
!8871 = distinct !DILexicalBlock(scope: !8872, file: !1, line: 5639, column: 13)
!8872 = distinct !DILexicalBlock(scope: !8027, file: !1, line: 5638, column: 7)
!8873 = !DILocation(line: 5639, column: 56, scope: !8871)
!8874 = !DILocation(line: 5639, column: 13, scope: !8872)
!8875 = !DILocation(line: 5640, column: 35, scope: !8871)
!8876 = !DILocation(line: 5641, column: 13, scope: !8871)
!8877 = !DILocation(line: 5640, column: 18, scope: !8871)
!8878 = !DILocation(line: 5640, column: 11, scope: !8871)
!8879 = !DILocation(line: 5642, column: 9, scope: !8872)
!8880 = !DILocation(line: 5330, column: 3, scope: !8001)
!8881 = distinct !{!8881, !8004, !8882}
!8882 = !DILocation(line: 5645, column: 3, scope: !7997)
!8883 = !DILocation(line: 5646, column: 41, scope: !7937)
!8884 = !DILocation(line: 5646, column: 43, scope: !7937)
!8885 = !DILocation(line: 5646, column: 42, scope: !7937)
!8886 = !DILocation(line: 5646, column: 3, scope: !7937)
!8887 = !DILocation(line: 5646, column: 19, scope: !7937)
!8888 = !DILocation(line: 5646, column: 30, scope: !7937)
!8889 = !DILocation(line: 5647, column: 23, scope: !7937)
!8890 = !DILocation(line: 5647, column: 39, scope: !7937)
!8891 = !DILocation(line: 5647, column: 21, scope: !7937)
!8892 = !DILocation(line: 5648, column: 9, scope: !8893)
!8893 = distinct !DILexicalBlock(scope: !7937, file: !1, line: 5648, column: 3)
!8894 = !DILocation(line: 5648, column: 8, scope: !8893)
!8895 = !DILocation(line: 5648, column: 13, scope: !8896)
!8896 = distinct !DILexicalBlock(scope: !8893, file: !1, line: 5648, column: 3)
!8897 = !DILocation(line: 5648, column: 27, scope: !8896)
!8898 = !DILocation(line: 5648, column: 15, scope: !8896)
!8899 = !DILocation(line: 5648, column: 3, scope: !8893)
!8900 = !DILocation(line: 5650, column: 6, scope: !8901)
!8901 = distinct !DILexicalBlock(scope: !8896, file: !1, line: 5649, column: 3)
!8902 = !DILocation(line: 5651, column: 18, scope: !8901)
!8903 = !DILocation(line: 5651, column: 5, scope: !8901)
!8904 = !DILocation(line: 5651, column: 8, scope: !8901)
!8905 = !DILocation(line: 5651, column: 17, scope: !8901)
!8906 = !DILocation(line: 5652, column: 9, scope: !8907)
!8907 = distinct !DILexicalBlock(scope: !8901, file: !1, line: 5652, column: 9)
!8908 = !DILocation(line: 5652, column: 17, scope: !8907)
!8909 = !DILocation(line: 5652, column: 9, scope: !8901)
!8910 = !DILocation(line: 5653, column: 7, scope: !8907)
!8911 = !DILocation(line: 5653, column: 10, scope: !8907)
!8912 = !DILocation(line: 5653, column: 16, scope: !8907)
!8913 = !DILocation(line: 5654, column: 3, scope: !8901)
!8914 = !DILocation(line: 5648, column: 48, scope: !8896)
!8915 = !DILocation(line: 5648, column: 3, scope: !8896)
!8916 = distinct !{!8916, !8899, !8917}
!8917 = !DILocation(line: 5654, column: 3, scope: !8893)
!8918 = !DILocation(line: 5655, column: 5, scope: !7937)
!8919 = !DILocation(line: 5655, column: 4, scope: !7937)
!8920 = !DILocation(line: 5656, column: 10, scope: !7937)
!8921 = !DILocation(line: 5656, column: 3, scope: !7937)
!8922 = distinct !DISubprogram(name: "DrawPrimitive", scope: !1, file: !1, line: 4200, type: !8923, scopeLine: 4202, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1236)
!8923 = !DISubroutineType(types: !8924)
!8924 = !{!777, !801, !1525, !8925}
!8925 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8926, size: 64)
!8926 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1185)
!8927 = !DILocalVariable(name: "image", arg: 1, scope: !8922, file: !1, line: 4200, type: !801)
!8928 = !DILocation(line: 4200, column: 53, scope: !8922)
!8929 = !DILocalVariable(name: "draw_info", arg: 2, scope: !8922, file: !1, line: 4201, type: !1525)
!8930 = !DILocation(line: 4201, column: 19, scope: !8922)
!8931 = !DILocalVariable(name: "primitive_info", arg: 3, scope: !8922, file: !1, line: 4201, type: !8925)
!8932 = !DILocation(line: 4201, column: 50, scope: !8922)
!8933 = !DILocalVariable(name: "image_view", scope: !8922, file: !1, line: 4204, type: !2158)
!8934 = !DILocation(line: 4204, column: 6, scope: !8922)
!8935 = !DILocalVariable(name: "exception", scope: !8922, file: !1, line: 4207, type: !1266)
!8936 = !DILocation(line: 4207, column: 6, scope: !8922)
!8937 = !DILocalVariable(name: "status", scope: !8922, file: !1, line: 4210, type: !3142)
!8938 = !DILocation(line: 4210, column: 5, scope: !8922)
!8939 = !DILocalVariable(name: "i", scope: !8922, file: !1, line: 4213, type: !717)
!8940 = !DILocation(line: 4213, column: 5, scope: !8922)
!8941 = !DILocalVariable(name: "x", scope: !8922, file: !1, line: 4214, type: !717)
!8942 = !DILocation(line: 4214, column: 5, scope: !8922)
!8943 = !DILocalVariable(name: "y", scope: !8922, file: !1, line: 4217, type: !717)
!8944 = !DILocation(line: 4217, column: 5, scope: !8922)
!8945 = !DILocation(line: 4219, column: 7, scope: !8946)
!8946 = distinct !DILexicalBlock(scope: !8922, file: !1, line: 4219, column: 7)
!8947 = !DILocation(line: 4219, column: 14, scope: !8946)
!8948 = !DILocation(line: 4219, column: 20, scope: !8946)
!8949 = !DILocation(line: 4219, column: 7, scope: !8922)
!8950 = !DILocation(line: 4221, column: 14, scope: !8951)
!8951 = distinct !DILexicalBlock(scope: !8946, file: !1, line: 4220, column: 5)
!8952 = !DILocation(line: 4224, column: 41, scope: !8951)
!8953 = !DILocation(line: 4224, column: 52, scope: !8951)
!8954 = !DILocation(line: 4224, column: 59, scope: !8951)
!8955 = !DILocation(line: 4225, column: 9, scope: !8951)
!8956 = !DILocation(line: 4225, column: 20, scope: !8951)
!8957 = !DILocation(line: 4225, column: 27, scope: !8951)
!8958 = !DILocation(line: 4225, column: 30, scope: !8951)
!8959 = !DILocation(line: 4225, column: 41, scope: !8951)
!8960 = !DILocation(line: 4225, column: 48, scope: !8951)
!8961 = !DILocation(line: 4225, column: 51, scope: !8951)
!8962 = !DILocation(line: 4225, column: 62, scope: !8951)
!8963 = !DILocation(line: 4225, column: 69, scope: !8951)
!8964 = !DILocation(line: 4226, column: 9, scope: !8951)
!8965 = !DILocation(line: 4226, column: 20, scope: !8951)
!8966 = !DILocation(line: 4226, column: 27, scope: !8951)
!8967 = !DILocation(line: 4226, column: 30, scope: !8951)
!8968 = !DILocation(line: 4226, column: 41, scope: !8951)
!8969 = !DILocation(line: 4226, column: 48, scope: !8951)
!8970 = !DILocation(line: 4223, column: 14, scope: !8951)
!8971 = !DILocation(line: 4227, column: 5, scope: !8951)
!8972 = !DILocation(line: 4228, column: 25, scope: !8973)
!8973 = distinct !DILexicalBlock(scope: !8922, file: !1, line: 4228, column: 7)
!8974 = !DILocation(line: 4228, column: 32, scope: !8973)
!8975 = !DILocation(line: 4228, column: 8, scope: !8973)
!8976 = !DILocation(line: 4228, column: 44, scope: !8973)
!8977 = !DILocation(line: 4228, column: 60, scope: !8973)
!8978 = !DILocation(line: 4229, column: 22, scope: !8973)
!8979 = !DILocation(line: 4229, column: 33, scope: !8973)
!8980 = !DILocation(line: 4229, column: 9, scope: !8973)
!8981 = !DILocation(line: 4229, column: 39, scope: !8973)
!8982 = !DILocation(line: 4229, column: 55, scope: !8973)
!8983 = !DILocation(line: 4230, column: 22, scope: !8973)
!8984 = !DILocation(line: 4230, column: 33, scope: !8973)
!8985 = !DILocation(line: 4230, column: 9, scope: !8973)
!8986 = !DILocation(line: 4230, column: 41, scope: !8973)
!8987 = !DILocation(line: 4228, column: 7, scope: !8922)
!8988 = !DILocation(line: 4231, column: 31, scope: !8973)
!8989 = !DILocation(line: 4231, column: 12, scope: !8973)
!8990 = !DILocation(line: 4231, column: 5, scope: !8973)
!8991 = !DILocation(line: 4232, column: 9, scope: !8922)
!8992 = !DILocation(line: 4233, column: 15, scope: !8922)
!8993 = !DILocation(line: 4233, column: 22, scope: !8922)
!8994 = !DILocation(line: 4233, column: 12, scope: !8922)
!8995 = !DILocation(line: 4234, column: 20, scope: !8922)
!8996 = !DILocation(line: 4234, column: 36, scope: !8922)
!8997 = !DILocation(line: 4234, column: 42, scope: !8922)
!8998 = !DILocation(line: 4234, column: 43, scope: !8922)
!8999 = !DILocation(line: 4234, column: 15, scope: !8922)
!9000 = !DILocation(line: 4234, column: 5, scope: !8922)
!9001 = !DILocation(line: 4234, column: 4, scope: !8922)
!9002 = !DILocation(line: 4235, column: 20, scope: !8922)
!9003 = !DILocation(line: 4235, column: 36, scope: !8922)
!9004 = !DILocation(line: 4235, column: 42, scope: !8922)
!9005 = !DILocation(line: 4235, column: 43, scope: !8922)
!9006 = !DILocation(line: 4235, column: 15, scope: !8922)
!9007 = !DILocation(line: 4235, column: 5, scope: !8922)
!9008 = !DILocation(line: 4235, column: 4, scope: !8922)
!9009 = !DILocation(line: 4236, column: 40, scope: !8922)
!9010 = !DILocation(line: 4236, column: 46, scope: !8922)
!9011 = !DILocation(line: 4236, column: 14, scope: !8922)
!9012 = !DILocation(line: 4236, column: 13, scope: !8922)
!9013 = !DILocation(line: 4237, column: 11, scope: !8922)
!9014 = !DILocation(line: 4237, column: 27, scope: !8922)
!9015 = !DILocation(line: 4237, column: 3, scope: !8922)
!9016 = !DILocalVariable(name: "fill_color", scope: !9017, file: !1, line: 4242, type: !737)
!9017 = distinct !DILexicalBlock(scope: !9018, file: !1, line: 4240, column: 5)
!9018 = distinct !DILexicalBlock(scope: !8922, file: !1, line: 4238, column: 3)
!9019 = !DILocation(line: 4242, column: 9, scope: !9017)
!9020 = !DILocalVariable(name: "q", scope: !9017, file: !1, line: 4245, type: !819)
!9021 = !DILocation(line: 4245, column: 10, scope: !9017)
!9022 = !DILocation(line: 4247, column: 12, scope: !9023)
!9023 = distinct !DILexicalBlock(scope: !9017, file: !1, line: 4247, column: 11)
!9024 = !DILocation(line: 4247, column: 14, scope: !9023)
!9025 = !DILocation(line: 4247, column: 19, scope: !9023)
!9026 = !DILocation(line: 4247, column: 23, scope: !9023)
!9027 = !DILocation(line: 4247, column: 38, scope: !9023)
!9028 = !DILocation(line: 4247, column: 45, scope: !9023)
!9029 = !DILocation(line: 4247, column: 25, scope: !9023)
!9030 = !DILocation(line: 4247, column: 11, scope: !9017)
!9031 = !DILocation(line: 4248, column: 9, scope: !9023)
!9032 = !DILocation(line: 4249, column: 12, scope: !9033)
!9033 = distinct !DILexicalBlock(scope: !9017, file: !1, line: 4249, column: 11)
!9034 = !DILocation(line: 4249, column: 14, scope: !9033)
!9035 = !DILocation(line: 4249, column: 19, scope: !9033)
!9036 = !DILocation(line: 4249, column: 23, scope: !9033)
!9037 = !DILocation(line: 4249, column: 38, scope: !9033)
!9038 = !DILocation(line: 4249, column: 45, scope: !9033)
!9039 = !DILocation(line: 4249, column: 25, scope: !9033)
!9040 = !DILocation(line: 4249, column: 11, scope: !9017)
!9041 = !DILocation(line: 4250, column: 9, scope: !9033)
!9042 = !DILocation(line: 4251, column: 37, scope: !9017)
!9043 = !DILocation(line: 4251, column: 48, scope: !9017)
!9044 = !DILocation(line: 4251, column: 50, scope: !9017)
!9045 = !DILocation(line: 4251, column: 56, scope: !9017)
!9046 = !DILocation(line: 4251, column: 9, scope: !9017)
!9047 = !DILocation(line: 4251, column: 8, scope: !9017)
!9048 = !DILocation(line: 4252, column: 11, scope: !9049)
!9049 = distinct !DILexicalBlock(scope: !9017, file: !1, line: 4252, column: 11)
!9050 = !DILocation(line: 4252, column: 13, scope: !9049)
!9051 = !DILocation(line: 4252, column: 11, scope: !9017)
!9052 = !DILocation(line: 4253, column: 9, scope: !9049)
!9053 = !DILocation(line: 4254, column: 27, scope: !9017)
!9054 = !DILocation(line: 4254, column: 37, scope: !9017)
!9055 = !DILocation(line: 4254, column: 39, scope: !9017)
!9056 = !DILocation(line: 4254, column: 14, scope: !9017)
!9057 = !DILocation(line: 4255, column: 67, scope: !9017)
!9058 = !DILocation(line: 4255, column: 39, scope: !9017)
!9059 = !DILocation(line: 4255, column: 75, scope: !9017)
!9060 = !DILocation(line: 4256, column: 26, scope: !9017)
!9061 = !DILocation(line: 4256, column: 29, scope: !9017)
!9062 = !DILocation(line: 4256, column: 9, scope: !9017)
!9063 = !DILocation(line: 4256, column: 37, scope: !9017)
!9064 = !DILocation(line: 4255, column: 7, scope: !9017)
!9065 = !DILocation(line: 4257, column: 44, scope: !9017)
!9066 = !DILocation(line: 4257, column: 55, scope: !9017)
!9067 = !DILocation(line: 4257, column: 15, scope: !9017)
!9068 = !DILocation(line: 4257, column: 13, scope: !9017)
!9069 = !DILocation(line: 4258, column: 7, scope: !9017)
!9070 = !DILocation(line: 4262, column: 15, scope: !9071)
!9071 = distinct !DILexicalBlock(scope: !9018, file: !1, line: 4261, column: 5)
!9072 = !DILocation(line: 4262, column: 31, scope: !9071)
!9073 = !DILocation(line: 4262, column: 7, scope: !9071)
!9074 = !DILocation(line: 4263, column: 7, scope: !9071)
!9075 = !DILocalVariable(name: "q", scope: !9076, file: !1, line: 4268, type: !819)
!9076 = distinct !DILexicalBlock(scope: !9077, file: !1, line: 4266, column: 9)
!9077 = distinct !DILexicalBlock(scope: !9071, file: !1, line: 4263, column: 7)
!9078 = !DILocation(line: 4268, column: 14, scope: !9076)
!9079 = !DILocation(line: 4270, column: 41, scope: !9076)
!9080 = !DILocation(line: 4270, column: 52, scope: !9076)
!9081 = !DILocation(line: 4270, column: 54, scope: !9076)
!9082 = !DILocation(line: 4270, column: 60, scope: !9076)
!9083 = !DILocation(line: 4270, column: 13, scope: !9076)
!9084 = !DILocation(line: 4270, column: 12, scope: !9076)
!9085 = !DILocation(line: 4271, column: 15, scope: !9086)
!9086 = distinct !DILexicalBlock(scope: !9076, file: !1, line: 4271, column: 15)
!9087 = !DILocation(line: 4271, column: 17, scope: !9086)
!9088 = !DILocation(line: 4271, column: 15, scope: !9076)
!9089 = !DILocation(line: 4272, column: 13, scope: !9086)
!9090 = !DILocation(line: 4273, column: 31, scope: !9076)
!9091 = !DILocation(line: 4273, column: 41, scope: !9076)
!9092 = !DILocation(line: 4273, column: 43, scope: !9076)
!9093 = !DILocation(line: 4273, column: 45, scope: !9076)
!9094 = !DILocation(line: 4273, column: 18, scope: !9076)
!9095 = !DILocation(line: 4274, column: 48, scope: !9076)
!9096 = !DILocation(line: 4274, column: 59, scope: !9076)
!9097 = !DILocation(line: 4274, column: 19, scope: !9076)
!9098 = !DILocation(line: 4274, column: 17, scope: !9076)
!9099 = !DILocation(line: 4275, column: 11, scope: !9076)
!9100 = !DILocalVariable(name: "sync", scope: !9101, file: !1, line: 4280, type: !777)
!9101 = distinct !DILexicalBlock(scope: !9077, file: !1, line: 4278, column: 9)
!9102 = !DILocation(line: 4280, column: 13, scope: !9101)
!9103 = !DILocalVariable(name: "target", scope: !9101, file: !1, line: 4283, type: !737)
!9104 = !DILocation(line: 4283, column: 13, scope: !9101)
!9105 = !DILocation(line: 4285, column: 47, scope: !9101)
!9106 = !DILocation(line: 4285, column: 58, scope: !9101)
!9107 = !DILocation(line: 4285, column: 60, scope: !9101)
!9108 = !DILocation(line: 4285, column: 70, scope: !9101)
!9109 = !DILocation(line: 4285, column: 19, scope: !9101)
!9110 = !DILocation(line: 4285, column: 17, scope: !9101)
!9111 = !DILocation(line: 4286, column: 17, scope: !9112)
!9112 = distinct !DILexicalBlock(scope: !9101, file: !1, line: 4286, column: 11)
!9113 = !DILocation(line: 4286, column: 16, scope: !9112)
!9114 = !DILocation(line: 4286, column: 21, scope: !9115)
!9115 = distinct !DILexicalBlock(scope: !9112, file: !1, line: 4286, column: 11)
!9116 = !DILocation(line: 4286, column: 35, scope: !9115)
!9117 = !DILocation(line: 4286, column: 42, scope: !9115)
!9118 = !DILocation(line: 4286, column: 23, scope: !9115)
!9119 = !DILocation(line: 4286, column: 11, scope: !9112)
!9120 = !DILocalVariable(name: "q", scope: !9121, file: !1, line: 4289, type: !2432)
!9121 = distinct !DILexicalBlock(scope: !9115, file: !1, line: 4287, column: 11)
!9122 = !DILocation(line: 4289, column: 25, scope: !9121)
!9123 = !DILocation(line: 4291, column: 43, scope: !9121)
!9124 = !DILocation(line: 4291, column: 56, scope: !9121)
!9125 = !DILocation(line: 4291, column: 58, scope: !9121)
!9126 = !DILocation(line: 4291, column: 65, scope: !9121)
!9127 = !DILocation(line: 4292, column: 15, scope: !9121)
!9128 = !DILocation(line: 4291, column: 15, scope: !9121)
!9129 = !DILocation(line: 4291, column: 14, scope: !9121)
!9130 = !DILocation(line: 4293, column: 17, scope: !9131)
!9131 = distinct !DILexicalBlock(scope: !9121, file: !1, line: 4293, column: 17)
!9132 = !DILocation(line: 4293, column: 19, scope: !9131)
!9133 = !DILocation(line: 4293, column: 17, scope: !9121)
!9134 = !DILocation(line: 4294, column: 15, scope: !9131)
!9135 = !DILocation(line: 4295, column: 19, scope: !9136)
!9136 = distinct !DILexicalBlock(scope: !9121, file: !1, line: 4295, column: 13)
!9137 = !DILocation(line: 4295, column: 18, scope: !9136)
!9138 = !DILocation(line: 4295, column: 23, scope: !9139)
!9139 = distinct !DILexicalBlock(scope: !9136, file: !1, line: 4295, column: 13)
!9140 = !DILocation(line: 4295, column: 37, scope: !9139)
!9141 = !DILocation(line: 4295, column: 44, scope: !9139)
!9142 = !DILocation(line: 4295, column: 25, scope: !9139)
!9143 = !DILocation(line: 4295, column: 13, scope: !9136)
!9144 = !DILocation(line: 4297, column: 34, scope: !9145)
!9145 = distinct !DILexicalBlock(scope: !9146, file: !1, line: 4297, column: 19)
!9146 = distinct !DILexicalBlock(scope: !9139, file: !1, line: 4296, column: 13)
!9147 = !DILocation(line: 4297, column: 40, scope: !9145)
!9148 = !DILocation(line: 4297, column: 19, scope: !9145)
!9149 = !DILocation(line: 4297, column: 51, scope: !9145)
!9150 = !DILocation(line: 4297, column: 19, scope: !9146)
!9151 = !DILocation(line: 4299, column: 20, scope: !9152)
!9152 = distinct !DILexicalBlock(scope: !9145, file: !1, line: 4298, column: 17)
!9153 = !DILocation(line: 4300, column: 19, scope: !9152)
!9154 = !DILocation(line: 4302, column: 35, scope: !9146)
!9155 = !DILocation(line: 4302, column: 45, scope: !9146)
!9156 = !DILocation(line: 4302, column: 47, scope: !9146)
!9157 = !DILocation(line: 4302, column: 49, scope: !9146)
!9158 = !DILocation(line: 4302, column: 22, scope: !9146)
!9159 = !DILocation(line: 4303, column: 16, scope: !9146)
!9160 = !DILocation(line: 4304, column: 13, scope: !9146)
!9161 = !DILocation(line: 4295, column: 54, scope: !9139)
!9162 = !DILocation(line: 4295, column: 13, scope: !9139)
!9163 = distinct !{!9163, !9143, !9164}
!9164 = !DILocation(line: 4304, column: 13, scope: !9136)
!9165 = !DILocation(line: 4305, column: 47, scope: !9121)
!9166 = !DILocation(line: 4305, column: 58, scope: !9121)
!9167 = !DILocation(line: 4305, column: 18, scope: !9121)
!9168 = !DILocation(line: 4305, column: 17, scope: !9121)
!9169 = !DILocation(line: 4306, column: 17, scope: !9170)
!9170 = distinct !DILexicalBlock(scope: !9121, file: !1, line: 4306, column: 17)
!9171 = !DILocation(line: 4306, column: 22, scope: !9170)
!9172 = !DILocation(line: 4306, column: 17, scope: !9121)
!9173 = !DILocation(line: 4307, column: 15, scope: !9170)
!9174 = !DILocation(line: 4308, column: 11, scope: !9121)
!9175 = !DILocation(line: 4286, column: 49, scope: !9115)
!9176 = !DILocation(line: 4286, column: 11, scope: !9115)
!9177 = distinct !{!9177, !9119, !9178}
!9178 = !DILocation(line: 4308, column: 11, scope: !9112)
!9179 = !DILocation(line: 4309, column: 11, scope: !9101)
!9180 = !DILocalVariable(name: "target", scope: !9181, file: !1, line: 4315, type: !769)
!9181 = distinct !DILexicalBlock(scope: !9077, file: !1, line: 4313, column: 9)
!9182 = !DILocation(line: 4315, column: 13, scope: !9181)
!9183 = !DILocation(line: 4317, column: 43, scope: !9181)
!9184 = !DILocation(line: 4317, column: 49, scope: !9181)
!9185 = !DILocation(line: 4317, column: 51, scope: !9181)
!9186 = !DILocation(line: 4317, column: 61, scope: !9181)
!9187 = !DILocation(line: 4317, column: 18, scope: !9181)
!9188 = !DILocation(line: 4318, column: 15, scope: !9189)
!9189 = distinct !DILexicalBlock(scope: !9181, file: !1, line: 4318, column: 15)
!9190 = !DILocation(line: 4318, column: 31, scope: !9189)
!9191 = !DILocation(line: 4318, column: 38, scope: !9189)
!9192 = !DILocation(line: 4318, column: 15, scope: !9181)
!9193 = !DILocation(line: 4320, column: 43, scope: !9194)
!9194 = distinct !DILexicalBlock(scope: !9189, file: !1, line: 4319, column: 13)
!9195 = !DILocation(line: 4320, column: 54, scope: !9194)
!9196 = !DILocation(line: 4320, column: 67, scope: !9194)
!9197 = !DILocation(line: 4320, column: 26, scope: !9194)
!9198 = !DILocation(line: 4320, column: 22, scope: !9194)
!9199 = !DILocation(line: 4320, column: 25, scope: !9194)
!9200 = !DILocation(line: 4321, column: 45, scope: !9194)
!9201 = !DILocation(line: 4321, column: 56, scope: !9194)
!9202 = !DILocation(line: 4321, column: 69, scope: !9194)
!9203 = !DILocation(line: 4321, column: 28, scope: !9194)
!9204 = !DILocation(line: 4321, column: 22, scope: !9194)
!9205 = !DILocation(line: 4321, column: 27, scope: !9194)
!9206 = !DILocation(line: 4322, column: 44, scope: !9194)
!9207 = !DILocation(line: 4322, column: 55, scope: !9194)
!9208 = !DILocation(line: 4322, column: 68, scope: !9194)
!9209 = !DILocation(line: 4322, column: 27, scope: !9194)
!9210 = !DILocation(line: 4322, column: 22, scope: !9194)
!9211 = !DILocation(line: 4322, column: 26, scope: !9194)
!9212 = !DILocation(line: 4323, column: 13, scope: !9194)
!9213 = !DILocation(line: 4324, column: 39, scope: !9181)
!9214 = !DILocation(line: 4324, column: 61, scope: !9181)
!9215 = !DILocation(line: 4324, column: 79, scope: !9181)
!9216 = !DILocation(line: 4325, column: 13, scope: !9181)
!9217 = !DILocation(line: 4325, column: 15, scope: !9181)
!9218 = !DILocation(line: 4325, column: 31, scope: !9181)
!9219 = !DILocation(line: 4325, column: 38, scope: !9181)
!9220 = !DILocation(line: 4324, column: 19, scope: !9181)
!9221 = !DILocation(line: 4324, column: 17, scope: !9181)
!9222 = !DILocation(line: 4327, column: 11, scope: !9181)
!9223 = !DILocalVariable(name: "sync", scope: !9224, file: !1, line: 4332, type: !777)
!9224 = distinct !DILexicalBlock(scope: !9077, file: !1, line: 4330, column: 9)
!9225 = !DILocation(line: 4332, column: 13, scope: !9224)
!9226 = !DILocation(line: 4334, column: 17, scope: !9227)
!9227 = distinct !DILexicalBlock(scope: !9224, file: !1, line: 4334, column: 11)
!9228 = !DILocation(line: 4334, column: 16, scope: !9227)
!9229 = !DILocation(line: 4334, column: 21, scope: !9230)
!9230 = distinct !DILexicalBlock(scope: !9227, file: !1, line: 4334, column: 11)
!9231 = !DILocation(line: 4334, column: 35, scope: !9230)
!9232 = !DILocation(line: 4334, column: 42, scope: !9230)
!9233 = !DILocation(line: 4334, column: 23, scope: !9230)
!9234 = !DILocation(line: 4334, column: 11, scope: !9227)
!9235 = !DILocalVariable(name: "q", scope: !9236, file: !1, line: 4337, type: !2432)
!9236 = distinct !DILexicalBlock(scope: !9230, file: !1, line: 4335, column: 11)
!9237 = !DILocation(line: 4337, column: 25, scope: !9236)
!9238 = !DILocalVariable(name: "x", scope: !9236, file: !1, line: 4340, type: !717)
!9239 = !DILocation(line: 4340, column: 15, scope: !9236)
!9240 = !DILocation(line: 4342, column: 43, scope: !9236)
!9241 = !DILocation(line: 4342, column: 56, scope: !9236)
!9242 = !DILocation(line: 4342, column: 58, scope: !9236)
!9243 = !DILocation(line: 4342, column: 65, scope: !9236)
!9244 = !DILocation(line: 4343, column: 15, scope: !9236)
!9245 = !DILocation(line: 4342, column: 15, scope: !9236)
!9246 = !DILocation(line: 4342, column: 14, scope: !9236)
!9247 = !DILocation(line: 4344, column: 17, scope: !9248)
!9248 = distinct !DILexicalBlock(scope: !9236, file: !1, line: 4344, column: 17)
!9249 = !DILocation(line: 4344, column: 19, scope: !9248)
!9250 = !DILocation(line: 4344, column: 17, scope: !9236)
!9251 = !DILocation(line: 4345, column: 15, scope: !9248)
!9252 = !DILocation(line: 4346, column: 19, scope: !9253)
!9253 = distinct !DILexicalBlock(scope: !9236, file: !1, line: 4346, column: 13)
!9254 = !DILocation(line: 4346, column: 18, scope: !9253)
!9255 = !DILocation(line: 4346, column: 23, scope: !9256)
!9256 = distinct !DILexicalBlock(scope: !9253, file: !1, line: 4346, column: 13)
!9257 = !DILocation(line: 4346, column: 37, scope: !9256)
!9258 = !DILocation(line: 4346, column: 44, scope: !9256)
!9259 = !DILocation(line: 4346, column: 25, scope: !9256)
!9260 = !DILocation(line: 4346, column: 13, scope: !9253)
!9261 = !DILocation(line: 4348, column: 35, scope: !9262)
!9262 = distinct !DILexicalBlock(scope: !9256, file: !1, line: 4347, column: 13)
!9263 = !DILocation(line: 4348, column: 45, scope: !9262)
!9264 = !DILocation(line: 4348, column: 47, scope: !9262)
!9265 = !DILocation(line: 4348, column: 49, scope: !9262)
!9266 = !DILocation(line: 4348, column: 22, scope: !9262)
!9267 = !DILocation(line: 4349, column: 16, scope: !9262)
!9268 = !DILocation(line: 4350, column: 13, scope: !9262)
!9269 = !DILocation(line: 4346, column: 54, scope: !9256)
!9270 = !DILocation(line: 4346, column: 13, scope: !9256)
!9271 = distinct !{!9271, !9260, !9272}
!9272 = !DILocation(line: 4350, column: 13, scope: !9253)
!9273 = !DILocation(line: 4351, column: 47, scope: !9236)
!9274 = !DILocation(line: 4351, column: 58, scope: !9236)
!9275 = !DILocation(line: 4351, column: 18, scope: !9236)
!9276 = !DILocation(line: 4351, column: 17, scope: !9236)
!9277 = !DILocation(line: 4352, column: 17, scope: !9278)
!9278 = distinct !DILexicalBlock(scope: !9236, file: !1, line: 4352, column: 17)
!9279 = !DILocation(line: 4352, column: 22, scope: !9278)
!9280 = !DILocation(line: 4352, column: 17, scope: !9236)
!9281 = !DILocation(line: 4353, column: 15, scope: !9278)
!9282 = !DILocation(line: 4354, column: 11, scope: !9236)
!9283 = !DILocation(line: 4334, column: 49, scope: !9230)
!9284 = !DILocation(line: 4334, column: 11, scope: !9230)
!9285 = distinct !{!9285, !9234, !9286}
!9286 = !DILocation(line: 4354, column: 11, scope: !9227)
!9287 = !DILocation(line: 4355, column: 11, scope: !9224)
!9288 = !DILocation(line: 4358, column: 7, scope: !9071)
!9289 = !DILocation(line: 4362, column: 11, scope: !9290)
!9290 = distinct !DILexicalBlock(scope: !9291, file: !1, line: 4362, column: 11)
!9291 = distinct !DILexicalBlock(scope: !9018, file: !1, line: 4361, column: 5)
!9292 = !DILocation(line: 4362, column: 18, scope: !9290)
!9293 = !DILocation(line: 4362, column: 24, scope: !9290)
!9294 = !DILocation(line: 4362, column: 11, scope: !9291)
!9295 = !DILocation(line: 4363, column: 37, scope: !9290)
!9296 = !DILocation(line: 4363, column: 16, scope: !9290)
!9297 = !DILocation(line: 4363, column: 9, scope: !9290)
!9298 = !DILocation(line: 4364, column: 15, scope: !9291)
!9299 = !DILocation(line: 4364, column: 31, scope: !9291)
!9300 = !DILocation(line: 4364, column: 7, scope: !9291)
!9301 = !DILocation(line: 4365, column: 7, scope: !9291)
!9302 = !DILocalVariable(name: "pixel", scope: !9303, file: !1, line: 4370, type: !737)
!9303 = distinct !DILexicalBlock(scope: !9304, file: !1, line: 4368, column: 9)
!9304 = distinct !DILexicalBlock(scope: !9291, file: !1, line: 4365, column: 7)
!9305 = !DILocation(line: 4370, column: 13, scope: !9303)
!9306 = !DILocalVariable(name: "q", scope: !9303, file: !1, line: 4373, type: !819)
!9307 = !DILocation(line: 4373, column: 14, scope: !9303)
!9308 = !DILocation(line: 4375, column: 41, scope: !9303)
!9309 = !DILocation(line: 4375, column: 52, scope: !9303)
!9310 = !DILocation(line: 4375, column: 54, scope: !9303)
!9311 = !DILocation(line: 4375, column: 60, scope: !9303)
!9312 = !DILocation(line: 4375, column: 13, scope: !9303)
!9313 = !DILocation(line: 4375, column: 12, scope: !9303)
!9314 = !DILocation(line: 4376, column: 15, scope: !9315)
!9315 = distinct !DILexicalBlock(scope: !9303, file: !1, line: 4376, column: 15)
!9316 = !DILocation(line: 4376, column: 17, scope: !9315)
!9317 = !DILocation(line: 4376, column: 15, scope: !9303)
!9318 = !DILocation(line: 4377, column: 13, scope: !9315)
!9319 = !DILocation(line: 4378, column: 31, scope: !9303)
!9320 = !DILocation(line: 4378, column: 41, scope: !9303)
!9321 = !DILocation(line: 4378, column: 43, scope: !9303)
!9322 = !DILocation(line: 4378, column: 18, scope: !9303)
!9323 = !DILocation(line: 4379, column: 11, scope: !9303)
!9324 = !DILocation(line: 4380, column: 48, scope: !9303)
!9325 = !DILocation(line: 4380, column: 59, scope: !9303)
!9326 = !DILocation(line: 4380, column: 19, scope: !9303)
!9327 = !DILocation(line: 4380, column: 17, scope: !9303)
!9328 = !DILocation(line: 4381, column: 11, scope: !9303)
!9329 = !DILocalVariable(name: "sync", scope: !9330, file: !1, line: 4386, type: !777)
!9330 = distinct !DILexicalBlock(scope: !9304, file: !1, line: 4384, column: 9)
!9331 = !DILocation(line: 4386, column: 13, scope: !9330)
!9332 = !DILocalVariable(name: "pixel", scope: !9330, file: !1, line: 4389, type: !737)
!9333 = !DILocation(line: 4389, column: 13, scope: !9330)
!9334 = !DILocalVariable(name: "target", scope: !9330, file: !1, line: 4390, type: !737)
!9335 = !DILocation(line: 4390, column: 13, scope: !9330)
!9336 = !DILocation(line: 4392, column: 47, scope: !9330)
!9337 = !DILocation(line: 4392, column: 58, scope: !9330)
!9338 = !DILocation(line: 4392, column: 60, scope: !9330)
!9339 = !DILocation(line: 4392, column: 70, scope: !9330)
!9340 = !DILocation(line: 4392, column: 19, scope: !9330)
!9341 = !DILocation(line: 4392, column: 17, scope: !9330)
!9342 = !DILocation(line: 4393, column: 17, scope: !9343)
!9343 = distinct !DILexicalBlock(scope: !9330, file: !1, line: 4393, column: 11)
!9344 = !DILocation(line: 4393, column: 16, scope: !9343)
!9345 = !DILocation(line: 4393, column: 21, scope: !9346)
!9346 = distinct !DILexicalBlock(scope: !9343, file: !1, line: 4393, column: 11)
!9347 = !DILocation(line: 4393, column: 35, scope: !9346)
!9348 = !DILocation(line: 4393, column: 42, scope: !9346)
!9349 = !DILocation(line: 4393, column: 23, scope: !9346)
!9350 = !DILocation(line: 4393, column: 11, scope: !9343)
!9351 = !DILocalVariable(name: "q", scope: !9352, file: !1, line: 4396, type: !2432)
!9352 = distinct !DILexicalBlock(scope: !9346, file: !1, line: 4394, column: 11)
!9353 = !DILocation(line: 4396, column: 25, scope: !9352)
!9354 = !DILocalVariable(name: "x", scope: !9352, file: !1, line: 4399, type: !717)
!9355 = !DILocation(line: 4399, column: 15, scope: !9352)
!9356 = !DILocation(line: 4401, column: 43, scope: !9352)
!9357 = !DILocation(line: 4401, column: 56, scope: !9352)
!9358 = !DILocation(line: 4401, column: 58, scope: !9352)
!9359 = !DILocation(line: 4401, column: 65, scope: !9352)
!9360 = !DILocation(line: 4402, column: 15, scope: !9352)
!9361 = !DILocation(line: 4401, column: 15, scope: !9352)
!9362 = !DILocation(line: 4401, column: 14, scope: !9352)
!9363 = !DILocation(line: 4403, column: 17, scope: !9364)
!9364 = distinct !DILexicalBlock(scope: !9352, file: !1, line: 4403, column: 17)
!9365 = !DILocation(line: 4403, column: 19, scope: !9364)
!9366 = !DILocation(line: 4403, column: 17, scope: !9352)
!9367 = !DILocation(line: 4404, column: 15, scope: !9364)
!9368 = !DILocation(line: 4405, column: 19, scope: !9369)
!9369 = distinct !DILexicalBlock(scope: !9352, file: !1, line: 4405, column: 13)
!9370 = !DILocation(line: 4405, column: 18, scope: !9369)
!9371 = !DILocation(line: 4405, column: 23, scope: !9372)
!9372 = distinct !DILexicalBlock(scope: !9369, file: !1, line: 4405, column: 13)
!9373 = !DILocation(line: 4405, column: 37, scope: !9372)
!9374 = !DILocation(line: 4405, column: 44, scope: !9372)
!9375 = !DILocation(line: 4405, column: 25, scope: !9372)
!9376 = !DILocation(line: 4405, column: 13, scope: !9369)
!9377 = !DILocation(line: 4407, column: 34, scope: !9378)
!9378 = distinct !DILexicalBlock(scope: !9379, file: !1, line: 4407, column: 19)
!9379 = distinct !DILexicalBlock(scope: !9372, file: !1, line: 4406, column: 13)
!9380 = !DILocation(line: 4407, column: 40, scope: !9378)
!9381 = !DILocation(line: 4407, column: 19, scope: !9378)
!9382 = !DILocation(line: 4407, column: 51, scope: !9378)
!9383 = !DILocation(line: 4407, column: 19, scope: !9379)
!9384 = !DILocation(line: 4409, column: 20, scope: !9385)
!9385 = distinct !DILexicalBlock(scope: !9378, file: !1, line: 4408, column: 17)
!9386 = !DILocation(line: 4410, column: 19, scope: !9385)
!9387 = !DILocation(line: 4412, column: 35, scope: !9379)
!9388 = !DILocation(line: 4412, column: 45, scope: !9379)
!9389 = !DILocation(line: 4412, column: 47, scope: !9379)
!9390 = !DILocation(line: 4412, column: 22, scope: !9379)
!9391 = !DILocation(line: 4413, column: 15, scope: !9379)
!9392 = !DILocation(line: 4414, column: 16, scope: !9379)
!9393 = !DILocation(line: 4415, column: 13, scope: !9379)
!9394 = !DILocation(line: 4405, column: 54, scope: !9372)
!9395 = !DILocation(line: 4405, column: 13, scope: !9372)
!9396 = distinct !{!9396, !9376, !9397}
!9397 = !DILocation(line: 4415, column: 13, scope: !9369)
!9398 = !DILocation(line: 4416, column: 47, scope: !9352)
!9399 = !DILocation(line: 4416, column: 58, scope: !9352)
!9400 = !DILocation(line: 4416, column: 18, scope: !9352)
!9401 = !DILocation(line: 4416, column: 17, scope: !9352)
!9402 = !DILocation(line: 4417, column: 17, scope: !9403)
!9403 = distinct !DILexicalBlock(scope: !9352, file: !1, line: 4417, column: 17)
!9404 = !DILocation(line: 4417, column: 22, scope: !9403)
!9405 = !DILocation(line: 4417, column: 17, scope: !9352)
!9406 = !DILocation(line: 4418, column: 15, scope: !9403)
!9407 = !DILocation(line: 4419, column: 11, scope: !9352)
!9408 = !DILocation(line: 4393, column: 49, scope: !9346)
!9409 = !DILocation(line: 4393, column: 11, scope: !9346)
!9410 = distinct !{!9410, !9350, !9411}
!9411 = !DILocation(line: 4419, column: 11, scope: !9343)
!9412 = !DILocation(line: 4420, column: 11, scope: !9330)
!9413 = !DILocalVariable(name: "target", scope: !9414, file: !1, line: 4426, type: !769)
!9414 = distinct !DILexicalBlock(scope: !9304, file: !1, line: 4424, column: 9)
!9415 = !DILocation(line: 4426, column: 13, scope: !9414)
!9416 = !DILocation(line: 4428, column: 43, scope: !9414)
!9417 = !DILocation(line: 4428, column: 49, scope: !9414)
!9418 = !DILocation(line: 4428, column: 51, scope: !9414)
!9419 = !DILocation(line: 4428, column: 61, scope: !9414)
!9420 = !DILocation(line: 4428, column: 18, scope: !9414)
!9421 = !DILocation(line: 4429, column: 15, scope: !9422)
!9422 = distinct !DILexicalBlock(scope: !9414, file: !1, line: 4429, column: 15)
!9423 = !DILocation(line: 4429, column: 31, scope: !9422)
!9424 = !DILocation(line: 4429, column: 38, scope: !9422)
!9425 = !DILocation(line: 4429, column: 15, scope: !9414)
!9426 = !DILocation(line: 4431, column: 43, scope: !9427)
!9427 = distinct !DILexicalBlock(scope: !9422, file: !1, line: 4430, column: 13)
!9428 = !DILocation(line: 4431, column: 54, scope: !9427)
!9429 = !DILocation(line: 4431, column: 67, scope: !9427)
!9430 = !DILocation(line: 4431, column: 26, scope: !9427)
!9431 = !DILocation(line: 4431, column: 22, scope: !9427)
!9432 = !DILocation(line: 4431, column: 25, scope: !9427)
!9433 = !DILocation(line: 4432, column: 45, scope: !9427)
!9434 = !DILocation(line: 4432, column: 56, scope: !9427)
!9435 = !DILocation(line: 4432, column: 69, scope: !9427)
!9436 = !DILocation(line: 4432, column: 28, scope: !9427)
!9437 = !DILocation(line: 4432, column: 22, scope: !9427)
!9438 = !DILocation(line: 4432, column: 27, scope: !9427)
!9439 = !DILocation(line: 4433, column: 44, scope: !9427)
!9440 = !DILocation(line: 4433, column: 55, scope: !9427)
!9441 = !DILocation(line: 4433, column: 68, scope: !9427)
!9442 = !DILocation(line: 4433, column: 27, scope: !9427)
!9443 = !DILocation(line: 4433, column: 22, scope: !9427)
!9444 = !DILocation(line: 4433, column: 26, scope: !9427)
!9445 = !DILocation(line: 4434, column: 13, scope: !9427)
!9446 = !DILocation(line: 4435, column: 39, scope: !9414)
!9447 = !DILocation(line: 4435, column: 60, scope: !9414)
!9448 = !DILocation(line: 4435, column: 78, scope: !9414)
!9449 = !DILocation(line: 4436, column: 13, scope: !9414)
!9450 = !DILocation(line: 4436, column: 15, scope: !9414)
!9451 = !DILocation(line: 4436, column: 31, scope: !9414)
!9452 = !DILocation(line: 4436, column: 38, scope: !9414)
!9453 = !DILocation(line: 4435, column: 19, scope: !9414)
!9454 = !DILocation(line: 4435, column: 17, scope: !9414)
!9455 = !DILocation(line: 4438, column: 11, scope: !9414)
!9456 = !DILocalVariable(name: "sync", scope: !9457, file: !1, line: 4443, type: !777)
!9457 = distinct !DILexicalBlock(scope: !9304, file: !1, line: 4441, column: 9)
!9458 = !DILocation(line: 4443, column: 13, scope: !9457)
!9459 = !DILocalVariable(name: "pixel", scope: !9457, file: !1, line: 4446, type: !737)
!9460 = !DILocation(line: 4446, column: 13, scope: !9457)
!9461 = !DILocation(line: 4448, column: 17, scope: !9462)
!9462 = distinct !DILexicalBlock(scope: !9457, file: !1, line: 4448, column: 11)
!9463 = !DILocation(line: 4448, column: 16, scope: !9462)
!9464 = !DILocation(line: 4448, column: 21, scope: !9465)
!9465 = distinct !DILexicalBlock(scope: !9462, file: !1, line: 4448, column: 11)
!9466 = !DILocation(line: 4448, column: 35, scope: !9465)
!9467 = !DILocation(line: 4448, column: 42, scope: !9465)
!9468 = !DILocation(line: 4448, column: 23, scope: !9465)
!9469 = !DILocation(line: 4448, column: 11, scope: !9462)
!9470 = !DILocalVariable(name: "q", scope: !9471, file: !1, line: 4451, type: !2432)
!9471 = distinct !DILexicalBlock(scope: !9465, file: !1, line: 4449, column: 11)
!9472 = !DILocation(line: 4451, column: 25, scope: !9471)
!9473 = !DILocalVariable(name: "x", scope: !9471, file: !1, line: 4454, type: !717)
!9474 = !DILocation(line: 4454, column: 15, scope: !9471)
!9475 = !DILocation(line: 4456, column: 43, scope: !9471)
!9476 = !DILocation(line: 4456, column: 56, scope: !9471)
!9477 = !DILocation(line: 4456, column: 58, scope: !9471)
!9478 = !DILocation(line: 4456, column: 65, scope: !9471)
!9479 = !DILocation(line: 4457, column: 15, scope: !9471)
!9480 = !DILocation(line: 4456, column: 15, scope: !9471)
!9481 = !DILocation(line: 4456, column: 14, scope: !9471)
!9482 = !DILocation(line: 4458, column: 17, scope: !9483)
!9483 = distinct !DILexicalBlock(scope: !9471, file: !1, line: 4458, column: 17)
!9484 = !DILocation(line: 4458, column: 19, scope: !9483)
!9485 = !DILocation(line: 4458, column: 17, scope: !9471)
!9486 = !DILocation(line: 4459, column: 15, scope: !9483)
!9487 = !DILocation(line: 4460, column: 19, scope: !9488)
!9488 = distinct !DILexicalBlock(scope: !9471, file: !1, line: 4460, column: 13)
!9489 = !DILocation(line: 4460, column: 18, scope: !9488)
!9490 = !DILocation(line: 4460, column: 23, scope: !9491)
!9491 = distinct !DILexicalBlock(scope: !9488, file: !1, line: 4460, column: 13)
!9492 = !DILocation(line: 4460, column: 37, scope: !9491)
!9493 = !DILocation(line: 4460, column: 44, scope: !9491)
!9494 = !DILocation(line: 4460, column: 25, scope: !9491)
!9495 = !DILocation(line: 4460, column: 13, scope: !9488)
!9496 = !DILocation(line: 4462, column: 35, scope: !9497)
!9497 = distinct !DILexicalBlock(scope: !9491, file: !1, line: 4461, column: 13)
!9498 = !DILocation(line: 4462, column: 45, scope: !9497)
!9499 = !DILocation(line: 4462, column: 47, scope: !9497)
!9500 = !DILocation(line: 4462, column: 22, scope: !9497)
!9501 = !DILocation(line: 4463, column: 15, scope: !9497)
!9502 = !DILocation(line: 4464, column: 16, scope: !9497)
!9503 = !DILocation(line: 4465, column: 13, scope: !9497)
!9504 = !DILocation(line: 4460, column: 54, scope: !9491)
!9505 = !DILocation(line: 4460, column: 13, scope: !9491)
!9506 = distinct !{!9506, !9495, !9507}
!9507 = !DILocation(line: 4465, column: 13, scope: !9488)
!9508 = !DILocation(line: 4466, column: 47, scope: !9471)
!9509 = !DILocation(line: 4466, column: 58, scope: !9471)
!9510 = !DILocation(line: 4466, column: 18, scope: !9471)
!9511 = !DILocation(line: 4466, column: 17, scope: !9471)
!9512 = !DILocation(line: 4467, column: 17, scope: !9513)
!9513 = distinct !DILexicalBlock(scope: !9471, file: !1, line: 4467, column: 17)
!9514 = !DILocation(line: 4467, column: 22, scope: !9513)
!9515 = !DILocation(line: 4467, column: 17, scope: !9471)
!9516 = !DILocation(line: 4468, column: 15, scope: !9513)
!9517 = !DILocation(line: 4469, column: 11, scope: !9471)
!9518 = !DILocation(line: 4448, column: 49, scope: !9465)
!9519 = !DILocation(line: 4448, column: 11, scope: !9465)
!9520 = distinct !{!9520, !9469, !9521}
!9521 = !DILocation(line: 4469, column: 11, scope: !9462)
!9522 = !DILocation(line: 4470, column: 11, scope: !9457)
!9523 = !DILocation(line: 4473, column: 7, scope: !9291)
!9524 = !DILocalVariable(name: "geometry", scope: !9525, file: !1, line: 4478, type: !924)
!9525 = distinct !DILexicalBlock(scope: !9018, file: !1, line: 4476, column: 5)
!9526 = !DILocation(line: 4478, column: 9, scope: !9525)
!9527 = !DILocalVariable(name: "clone_info", scope: !9525, file: !1, line: 4481, type: !699)
!9528 = !DILocation(line: 4481, column: 10, scope: !9525)
!9529 = !DILocation(line: 4483, column: 11, scope: !9530)
!9530 = distinct !DILexicalBlock(scope: !9525, file: !1, line: 4483, column: 11)
!9531 = !DILocation(line: 4483, column: 27, scope: !9530)
!9532 = !DILocation(line: 4483, column: 32, scope: !9530)
!9533 = !DILocation(line: 4483, column: 11, scope: !9525)
!9534 = !DILocation(line: 4484, column: 9, scope: !9530)
!9535 = !DILocation(line: 4485, column: 51, scope: !9525)
!9536 = !DILocation(line: 4485, column: 18, scope: !9525)
!9537 = !DILocation(line: 4485, column: 17, scope: !9525)
!9538 = !DILocation(line: 4486, column: 27, scope: !9525)
!9539 = !DILocation(line: 4486, column: 39, scope: !9525)
!9540 = !DILocation(line: 4486, column: 44, scope: !9525)
!9541 = !DILocation(line: 4486, column: 60, scope: !9525)
!9542 = !DILocation(line: 4486, column: 14, scope: !9525)
!9543 = !DILocation(line: 4487, column: 33, scope: !9525)
!9544 = !DILocation(line: 4488, column: 9, scope: !9525)
!9545 = !DILocation(line: 4488, column: 25, scope: !9525)
!9546 = !DILocation(line: 4488, column: 31, scope: !9525)
!9547 = !DILocation(line: 4488, column: 33, scope: !9525)
!9548 = !DILocation(line: 4488, column: 49, scope: !9525)
!9549 = !DILocation(line: 4488, column: 55, scope: !9525)
!9550 = !DILocation(line: 4487, column: 14, scope: !9525)
!9551 = !DILocation(line: 4489, column: 27, scope: !9525)
!9552 = !DILocation(line: 4489, column: 39, scope: !9525)
!9553 = !DILocation(line: 4489, column: 48, scope: !9525)
!9554 = !DILocation(line: 4489, column: 14, scope: !9525)
!9555 = !DILocation(line: 4490, column: 29, scope: !9525)
!9556 = !DILocation(line: 4490, column: 35, scope: !9525)
!9557 = !DILocation(line: 4490, column: 15, scope: !9525)
!9558 = !DILocation(line: 4490, column: 13, scope: !9525)
!9559 = !DILocation(line: 4491, column: 34, scope: !9525)
!9560 = !DILocation(line: 4491, column: 18, scope: !9525)
!9561 = !DILocation(line: 4491, column: 17, scope: !9525)
!9562 = !DILocation(line: 4492, column: 7, scope: !9525)
!9563 = !DILocalVariable(name: "affine", scope: !9564, file: !1, line: 4497, type: !724)
!9564 = distinct !DILexicalBlock(scope: !9018, file: !1, line: 4495, column: 5)
!9565 = !DILocation(line: 4497, column: 9, scope: !9564)
!9566 = !DILocalVariable(name: "composite_geometry", scope: !9564, file: !1, line: 4500, type: !924)
!9567 = !DILocation(line: 4500, column: 9, scope: !9564)
!9568 = !DILocalVariable(name: "composite_image", scope: !9564, file: !1, line: 4503, type: !801)
!9569 = !DILocation(line: 4503, column: 10, scope: !9564)
!9570 = !DILocalVariable(name: "clone_info", scope: !9564, file: !1, line: 4506, type: !1051)
!9571 = !DILocation(line: 4506, column: 10, scope: !9564)
!9572 = !DILocalVariable(name: "geometry", scope: !9564, file: !1, line: 4509, type: !708)
!9573 = !DILocation(line: 4509, column: 9, scope: !9564)
!9574 = !DILocalVariable(name: "x1", scope: !9564, file: !1, line: 4512, type: !717)
!9575 = !DILocation(line: 4512, column: 9, scope: !9564)
!9576 = !DILocalVariable(name: "y1", scope: !9564, file: !1, line: 4513, type: !717)
!9577 = !DILocation(line: 4513, column: 9, scope: !9564)
!9578 = !DILocation(line: 4515, column: 11, scope: !9579)
!9579 = distinct !DILexicalBlock(scope: !9564, file: !1, line: 4515, column: 11)
!9580 = !DILocation(line: 4515, column: 27, scope: !9579)
!9581 = !DILocation(line: 4515, column: 32, scope: !9579)
!9582 = !DILocation(line: 4515, column: 11, scope: !9564)
!9583 = !DILocation(line: 4516, column: 9, scope: !9579)
!9584 = !DILocation(line: 4517, column: 18, scope: !9564)
!9585 = !DILocation(line: 4517, column: 17, scope: !9564)
!9586 = !DILocation(line: 4518, column: 26, scope: !9587)
!9587 = distinct !DILexicalBlock(scope: !9564, file: !1, line: 4518, column: 11)
!9588 = !DILocation(line: 4518, column: 42, scope: !9587)
!9589 = !DILocation(line: 4518, column: 11, scope: !9587)
!9590 = !DILocation(line: 4518, column: 58, scope: !9587)
!9591 = !DILocation(line: 4518, column: 11, scope: !9564)
!9592 = !DILocation(line: 4519, column: 41, scope: !9587)
!9593 = !DILocation(line: 4519, column: 52, scope: !9587)
!9594 = !DILocation(line: 4519, column: 68, scope: !9587)
!9595 = !DILocation(line: 4520, column: 12, scope: !9587)
!9596 = !DILocation(line: 4520, column: 19, scope: !9587)
!9597 = !DILocation(line: 4519, column: 25, scope: !9587)
!9598 = !DILocation(line: 4519, column: 24, scope: !9587)
!9599 = !DILocation(line: 4519, column: 9, scope: !9587)
!9600 = !DILocation(line: 4523, column: 35, scope: !9601)
!9601 = distinct !DILexicalBlock(scope: !9587, file: !1, line: 4522, column: 9)
!9602 = !DILocation(line: 4523, column: 47, scope: !9601)
!9603 = !DILocation(line: 4523, column: 56, scope: !9601)
!9604 = !DILocation(line: 4523, column: 72, scope: !9601)
!9605 = !DILocation(line: 4523, column: 18, scope: !9601)
!9606 = !DILocation(line: 4525, column: 37, scope: !9601)
!9607 = !DILocation(line: 4525, column: 49, scope: !9601)
!9608 = !DILocation(line: 4525, column: 56, scope: !9601)
!9609 = !DILocation(line: 4525, column: 27, scope: !9601)
!9610 = !DILocation(line: 4525, column: 26, scope: !9601)
!9611 = !DILocation(line: 4527, column: 35, scope: !9564)
!9612 = !DILocation(line: 4527, column: 18, scope: !9564)
!9613 = !DILocation(line: 4527, column: 17, scope: !9564)
!9614 = !DILocation(line: 4528, column: 11, scope: !9615)
!9615 = distinct !DILexicalBlock(scope: !9564, file: !1, line: 4528, column: 11)
!9616 = !DILocation(line: 4528, column: 27, scope: !9615)
!9617 = !DILocation(line: 4528, column: 11, scope: !9564)
!9618 = !DILocation(line: 4529, column: 9, scope: !9615)
!9619 = !DILocation(line: 4530, column: 38, scope: !9564)
!9620 = !DILocation(line: 4530, column: 14, scope: !9564)
!9621 = !DILocation(line: 4532, column: 25, scope: !9564)
!9622 = !DILocation(line: 4532, column: 43, scope: !9564)
!9623 = !DILocation(line: 4532, column: 49, scope: !9564)
!9624 = !DILocation(line: 4532, column: 50, scope: !9564)
!9625 = !DILocation(line: 4532, column: 20, scope: !9564)
!9626 = !DILocation(line: 4532, column: 10, scope: !9564)
!9627 = !DILocation(line: 4532, column: 9, scope: !9564)
!9628 = !DILocation(line: 4533, column: 25, scope: !9564)
!9629 = !DILocation(line: 4533, column: 43, scope: !9564)
!9630 = !DILocation(line: 4533, column: 49, scope: !9564)
!9631 = !DILocation(line: 4533, column: 50, scope: !9564)
!9632 = !DILocation(line: 4533, column: 20, scope: !9564)
!9633 = !DILocation(line: 4533, column: 10, scope: !9564)
!9634 = !DILocation(line: 4533, column: 9, scope: !9564)
!9635 = !DILocation(line: 4534, column: 13, scope: !9636)
!9636 = distinct !DILexicalBlock(scope: !9564, file: !1, line: 4534, column: 11)
!9637 = !DILocation(line: 4534, column: 16, scope: !9636)
!9638 = !DILocation(line: 4534, column: 23, scope: !9636)
!9639 = !DILocation(line: 4534, column: 27, scope: !9636)
!9640 = !DILocation(line: 4534, column: 43, scope: !9636)
!9641 = !DILocation(line: 4534, column: 60, scope: !9636)
!9642 = !DILocation(line: 4534, column: 30, scope: !9636)
!9643 = !DILocation(line: 4534, column: 70, scope: !9636)
!9644 = !DILocation(line: 4535, column: 13, scope: !9636)
!9645 = !DILocation(line: 4535, column: 16, scope: !9636)
!9646 = !DILocation(line: 4535, column: 23, scope: !9636)
!9647 = !DILocation(line: 4535, column: 27, scope: !9636)
!9648 = !DILocation(line: 4535, column: 43, scope: !9636)
!9649 = !DILocation(line: 4535, column: 60, scope: !9636)
!9650 = !DILocation(line: 4535, column: 30, scope: !9636)
!9651 = !DILocation(line: 4534, column: 11, scope: !9564)
!9652 = !DILocalVariable(name: "geometry", scope: !9653, file: !1, line: 4538, type: !924)
!9653 = distinct !DILexicalBlock(scope: !9636, file: !1, line: 4536, column: 9)
!9654 = !DILocation(line: 4538, column: 13, scope: !9653)
!9655 = !DILocation(line: 4543, column: 37, scope: !9653)
!9656 = !DILocation(line: 4544, column: 13, scope: !9653)
!9657 = !DILocation(line: 4544, column: 31, scope: !9653)
!9658 = !DILocation(line: 4544, column: 37, scope: !9653)
!9659 = !DILocation(line: 4544, column: 39, scope: !9653)
!9660 = !DILocation(line: 4544, column: 57, scope: !9653)
!9661 = !DILocation(line: 4544, column: 63, scope: !9653)
!9662 = !DILocation(line: 4543, column: 18, scope: !9653)
!9663 = !DILocation(line: 4545, column: 35, scope: !9653)
!9664 = !DILocation(line: 4545, column: 42, scope: !9653)
!9665 = !DILocation(line: 4545, column: 11, scope: !9653)
!9666 = !DILocation(line: 4545, column: 28, scope: !9653)
!9667 = !DILocation(line: 4545, column: 34, scope: !9653)
!9668 = !DILocation(line: 4546, column: 64, scope: !9653)
!9669 = !DILocation(line: 4546, column: 18, scope: !9653)
!9670 = !DILocation(line: 4547, column: 9, scope: !9653)
!9671 = !DILocation(line: 4548, column: 11, scope: !9672)
!9672 = distinct !DILexicalBlock(scope: !9564, file: !1, line: 4548, column: 11)
!9673 = !DILocation(line: 4548, column: 28, scope: !9672)
!9674 = !DILocation(line: 4548, column: 34, scope: !9672)
!9675 = !DILocation(line: 4548, column: 11, scope: !9564)
!9676 = !DILocation(line: 4549, column: 37, scope: !9672)
!9677 = !DILocation(line: 4549, column: 16, scope: !9672)
!9678 = !DILocation(line: 4549, column: 9, scope: !9672)
!9679 = !DILocation(line: 4550, column: 11, scope: !9680)
!9680 = distinct !DILexicalBlock(scope: !9564, file: !1, line: 4550, column: 11)
!9681 = !DILocation(line: 4550, column: 22, scope: !9680)
!9682 = !DILocation(line: 4550, column: 30, scope: !9680)
!9683 = !DILocation(line: 4550, column: 11, scope: !9564)
!9684 = !DILocation(line: 4551, column: 32, scope: !9680)
!9685 = !DILocation(line: 4551, column: 48, scope: !9680)
!9686 = !DILocation(line: 4551, column: 59, scope: !9680)
!9687 = !DILocation(line: 4551, column: 16, scope: !9680)
!9688 = !DILocation(line: 4551, column: 9, scope: !9680)
!9689 = !DILocation(line: 4552, column: 19, scope: !9564)
!9690 = !DILocation(line: 4552, column: 7, scope: !9564)
!9691 = !DILocation(line: 4553, column: 22, scope: !9564)
!9692 = !DILocation(line: 4553, column: 33, scope: !9564)
!9693 = !DILocation(line: 4553, column: 7, scope: !9564)
!9694 = !DILocation(line: 4553, column: 14, scope: !9564)
!9695 = !DILocation(line: 4553, column: 21, scope: !9564)
!9696 = !DILocation(line: 4554, column: 18, scope: !9564)
!9697 = !DILocation(line: 4554, column: 16, scope: !9564)
!9698 = !DILocation(line: 4554, column: 17, scope: !9564)
!9699 = !DILocation(line: 4555, column: 18, scope: !9564)
!9700 = !DILocation(line: 4555, column: 16, scope: !9564)
!9701 = !DILocation(line: 4555, column: 17, scope: !9564)
!9702 = !DILocation(line: 4556, column: 33, scope: !9564)
!9703 = !DILocation(line: 4557, column: 44, scope: !9564)
!9704 = !DILocation(line: 4557, column: 61, scope: !9564)
!9705 = !DILocation(line: 4557, column: 35, scope: !9564)
!9706 = !DILocation(line: 4558, column: 9, scope: !9564)
!9707 = !DILocation(line: 4558, column: 26, scope: !9564)
!9708 = !DILocation(line: 4557, column: 69, scope: !9564)
!9709 = !DILocation(line: 4558, column: 49, scope: !9564)
!9710 = !DILocation(line: 4558, column: 31, scope: !9564)
!9711 = !DILocation(line: 4558, column: 69, scope: !9564)
!9712 = !DILocation(line: 4558, column: 51, scope: !9564)
!9713 = !DILocation(line: 4556, column: 14, scope: !9564)
!9714 = !DILocation(line: 4559, column: 35, scope: !9564)
!9715 = !DILocation(line: 4559, column: 41, scope: !9564)
!9716 = !DILocation(line: 4560, column: 10, scope: !9564)
!9717 = !DILocation(line: 4560, column: 17, scope: !9564)
!9718 = !DILocation(line: 4559, column: 14, scope: !9564)
!9719 = !DILocation(line: 4561, column: 14, scope: !9564)
!9720 = !DILocation(line: 4561, column: 25, scope: !9564)
!9721 = !DILocation(line: 4562, column: 35, scope: !9564)
!9722 = !DILocation(line: 4562, column: 17, scope: !9564)
!9723 = !DILocation(line: 4562, column: 14, scope: !9564)
!9724 = !DILocation(line: 4562, column: 16, scope: !9564)
!9725 = !DILocation(line: 4563, column: 35, scope: !9564)
!9726 = !DILocation(line: 4563, column: 17, scope: !9564)
!9727 = !DILocation(line: 4563, column: 14, scope: !9564)
!9728 = !DILocation(line: 4563, column: 16, scope: !9564)
!9729 = !DILocation(line: 4564, column: 36, scope: !9564)
!9730 = !DILocation(line: 4564, column: 43, scope: !9564)
!9731 = !DILocation(line: 4564, column: 7, scope: !9564)
!9732 = !DILocation(line: 4564, column: 24, scope: !9564)
!9733 = !DILocation(line: 4564, column: 35, scope: !9564)
!9734 = !DILocation(line: 4565, column: 11, scope: !9735)
!9735 = distinct !DILexicalBlock(scope: !9564, file: !1, line: 4565, column: 11)
!9736 = !DILocation(line: 4565, column: 22, scope: !9735)
!9737 = !DILocation(line: 4565, column: 30, scope: !9735)
!9738 = !DILocation(line: 4565, column: 11, scope: !9564)
!9739 = !DILocation(line: 4566, column: 32, scope: !9735)
!9740 = !DILocation(line: 4566, column: 38, scope: !9735)
!9741 = !DILocation(line: 4566, column: 16, scope: !9735)
!9742 = !DILocation(line: 4566, column: 9, scope: !9735)
!9743 = !DILocation(line: 4568, column: 31, scope: !9735)
!9744 = !DILocation(line: 4568, column: 37, scope: !9735)
!9745 = !DILocation(line: 4568, column: 48, scope: !9735)
!9746 = !DILocation(line: 4568, column: 56, scope: !9735)
!9747 = !DILocation(line: 4569, column: 20, scope: !9735)
!9748 = !DILocation(line: 4569, column: 31, scope: !9735)
!9749 = !DILocation(line: 4568, column: 16, scope: !9735)
!9750 = !DILocation(line: 4570, column: 36, scope: !9564)
!9751 = !DILocation(line: 4570, column: 23, scope: !9564)
!9752 = !DILocation(line: 4570, column: 22, scope: !9564)
!9753 = !DILocation(line: 4571, column: 7, scope: !9564)
!9754 = !DILocalVariable(name: "mid", scope: !9755, file: !1, line: 4576, type: !728)
!9755 = distinct !DILexicalBlock(scope: !9018, file: !1, line: 4574, column: 5)
!9756 = !DILocation(line: 4576, column: 9, scope: !9755)
!9757 = !DILocalVariable(name: "scale", scope: !9755, file: !1, line: 4577, type: !728)
!9758 = !DILocation(line: 4577, column: 9, scope: !9755)
!9759 = !DILocalVariable(name: "clone_info", scope: !9755, file: !1, line: 4580, type: !699)
!9760 = !DILocation(line: 4580, column: 10, scope: !9755)
!9761 = !DILocation(line: 4582, column: 11, scope: !9762)
!9762 = distinct !DILexicalBlock(scope: !9755, file: !1, line: 4582, column: 11)
!9763 = !DILocation(line: 4582, column: 28, scope: !9762)
!9764 = !DILocation(line: 4582, column: 11, scope: !9755)
!9765 = !DILocation(line: 4583, column: 26, scope: !9762)
!9766 = !DILocation(line: 4583, column: 9, scope: !9762)
!9767 = !DILocation(line: 4584, column: 27, scope: !9755)
!9768 = !DILocation(line: 4584, column: 38, scope: !9755)
!9769 = !DILocation(line: 4584, column: 13, scope: !9755)
!9770 = !DILocation(line: 4584, column: 12, scope: !9755)
!9771 = !DILocation(line: 4585, column: 12, scope: !9772)
!9772 = distinct !DILexicalBlock(scope: !9755, file: !1, line: 4585, column: 11)
!9773 = !DILocation(line: 4585, column: 23, scope: !9772)
!9774 = !DILocation(line: 4585, column: 36, scope: !9772)
!9775 = !DILocation(line: 4585, column: 56, scope: !9772)
!9776 = !DILocation(line: 4586, column: 12, scope: !9772)
!9777 = !DILocation(line: 4586, column: 23, scope: !9772)
!9778 = !DILocation(line: 4586, column: 39, scope: !9772)
!9779 = !DILocation(line: 4586, column: 47, scope: !9772)
!9780 = !DILocation(line: 4587, column: 13, scope: !9772)
!9781 = !DILocation(line: 4587, column: 19, scope: !9772)
!9782 = !DILocation(line: 4587, column: 30, scope: !9772)
!9783 = !DILocation(line: 4587, column: 18, scope: !9772)
!9784 = !DILocation(line: 4587, column: 44, scope: !9772)
!9785 = !DILocation(line: 4587, column: 62, scope: !9772)
!9786 = !DILocation(line: 4588, column: 12, scope: !9772)
!9787 = !DILocation(line: 4588, column: 23, scope: !9772)
!9788 = !DILocation(line: 4588, column: 30, scope: !9772)
!9789 = !DILocation(line: 4588, column: 38, scope: !9772)
!9790 = !DILocation(line: 4585, column: 11, scope: !9755)
!9791 = !DILocation(line: 4593, column: 55, scope: !9792)
!9792 = distinct !DILexicalBlock(scope: !9772, file: !1, line: 4589, column: 9)
!9793 = !DILocation(line: 4593, column: 22, scope: !9792)
!9794 = !DILocation(line: 4593, column: 21, scope: !9792)
!9795 = !DILocation(line: 4594, column: 11, scope: !9792)
!9796 = !DILocation(line: 4594, column: 23, scope: !9792)
!9797 = !DILocation(line: 4594, column: 35, scope: !9792)
!9798 = !DILocation(line: 4595, column: 11, scope: !9792)
!9799 = !DILocation(line: 4595, column: 23, scope: !9792)
!9800 = !DILocation(line: 4595, column: 30, scope: !9792)
!9801 = !DILocation(line: 4595, column: 37, scope: !9792)
!9802 = !DILocation(line: 4596, column: 40, scope: !9792)
!9803 = !DILocation(line: 4596, column: 46, scope: !9792)
!9804 = !DILocation(line: 4596, column: 57, scope: !9792)
!9805 = !DILocation(line: 4596, column: 19, scope: !9792)
!9806 = !DILocation(line: 4596, column: 17, scope: !9792)
!9807 = !DILocation(line: 4597, column: 38, scope: !9792)
!9808 = !DILocation(line: 4597, column: 22, scope: !9792)
!9809 = !DILocation(line: 4597, column: 21, scope: !9792)
!9810 = !DILocation(line: 4598, column: 34, scope: !9792)
!9811 = !DILocation(line: 4598, column: 44, scope: !9792)
!9812 = !DILocation(line: 4598, column: 59, scope: !9792)
!9813 = !DILocation(line: 4598, column: 18, scope: !9792)
!9814 = !DILocation(line: 4599, column: 11, scope: !9792)
!9815 = !DILocation(line: 4601, column: 25, scope: !9755)
!9816 = !DILocation(line: 4601, column: 36, scope: !9755)
!9817 = !DILocation(line: 4601, column: 11, scope: !9755)
!9818 = !DILocation(line: 4601, column: 44, scope: !9755)
!9819 = !DILocation(line: 4601, column: 55, scope: !9755)
!9820 = !DILocation(line: 4601, column: 43, scope: !9755)
!9821 = !DILocation(line: 4601, column: 67, scope: !9755)
!9822 = !DILocation(line: 4601, column: 10, scope: !9755)
!9823 = !DILocation(line: 4602, column: 12, scope: !9824)
!9824 = distinct !DILexicalBlock(scope: !9755, file: !1, line: 4602, column: 11)
!9825 = !DILocation(line: 4602, column: 16, scope: !9824)
!9826 = !DILocation(line: 4602, column: 23, scope: !9824)
!9827 = !DILocation(line: 4603, column: 12, scope: !9824)
!9828 = !DILocation(line: 4603, column: 23, scope: !9824)
!9829 = !DILocation(line: 4603, column: 30, scope: !9824)
!9830 = !DILocation(line: 4603, column: 38, scope: !9824)
!9831 = !DILocation(line: 4602, column: 11, scope: !9755)
!9832 = !DILocalVariable(name: "closed_path", scope: !9833, file: !1, line: 4606, type: !777)
!9833 = distinct !DILexicalBlock(scope: !9824, file: !1, line: 4604, column: 9)
!9834 = !DILocation(line: 4606, column: 13, scope: !9833)
!9835 = !DILocation(line: 4611, column: 17, scope: !9836)
!9836 = distinct !DILexicalBlock(scope: !9833, file: !1, line: 4611, column: 11)
!9837 = !DILocation(line: 4611, column: 16, scope: !9836)
!9838 = !DILocation(line: 4611, column: 21, scope: !9839)
!9839 = distinct !DILexicalBlock(scope: !9836, file: !1, line: 4611, column: 11)
!9840 = !DILocation(line: 4611, column: 36, scope: !9839)
!9841 = !DILocation(line: 4611, column: 39, scope: !9839)
!9842 = !DILocation(line: 4611, column: 49, scope: !9839)
!9843 = !DILocation(line: 4611, column: 11, scope: !9836)
!9844 = !DILocation(line: 4611, column: 73, scope: !9839)
!9845 = !DILocation(line: 4611, column: 11, scope: !9839)
!9846 = distinct !{!9846, !9843, !9847}
!9847 = !DILocation(line: 4611, column: 77, scope: !9836)
!9848 = !DILocation(line: 4613, column: 14, scope: !9833)
!9849 = !DILocation(line: 4613, column: 29, scope: !9833)
!9850 = !DILocation(line: 4613, column: 30, scope: !9833)
!9851 = !DILocation(line: 4613, column: 34, scope: !9833)
!9852 = !DILocation(line: 4613, column: 40, scope: !9833)
!9853 = !DILocation(line: 4613, column: 45, scope: !9833)
!9854 = !DILocation(line: 4613, column: 63, scope: !9833)
!9855 = !DILocation(line: 4613, column: 69, scope: !9833)
!9856 = !DILocation(line: 4613, column: 42, scope: !9833)
!9857 = !DILocation(line: 4613, column: 72, scope: !9833)
!9858 = !DILocation(line: 4614, column: 14, scope: !9833)
!9859 = !DILocation(line: 4614, column: 29, scope: !9833)
!9860 = !DILocation(line: 4614, column: 30, scope: !9833)
!9861 = !DILocation(line: 4614, column: 34, scope: !9833)
!9862 = !DILocation(line: 4614, column: 40, scope: !9833)
!9863 = !DILocation(line: 4614, column: 45, scope: !9833)
!9864 = !DILocation(line: 4614, column: 63, scope: !9833)
!9865 = !DILocation(line: 4614, column: 69, scope: !9833)
!9866 = !DILocation(line: 4614, column: 42, scope: !9833)
!9867 = !DILocation(line: 0, scope: !9833)
!9868 = !DILocation(line: 4613, column: 13, scope: !9833)
!9869 = !DILocation(line: 4612, column: 22, scope: !9833)
!9870 = !DILocation(line: 4616, column: 23, scope: !9833)
!9871 = !DILocation(line: 4616, column: 41, scope: !9833)
!9872 = !DILocation(line: 4616, column: 12, scope: !9833)
!9873 = !DILocation(line: 4617, column: 18, scope: !9874)
!9874 = distinct !DILexicalBlock(scope: !9833, file: !1, line: 4617, column: 15)
!9875 = !DILocation(line: 4617, column: 29, scope: !9874)
!9876 = !DILocation(line: 4617, column: 37, scope: !9874)
!9877 = !DILocation(line: 4617, column: 50, scope: !9874)
!9878 = !DILocation(line: 4618, column: 18, scope: !9874)
!9879 = !DILocation(line: 4618, column: 30, scope: !9874)
!9880 = !DILocation(line: 4618, column: 47, scope: !9874)
!9881 = !DILocation(line: 4619, column: 17, scope: !9874)
!9882 = !DILocation(line: 4619, column: 28, scope: !9874)
!9883 = !DILocation(line: 4619, column: 37, scope: !9874)
!9884 = !DILocation(line: 4619, column: 52, scope: !9874)
!9885 = !DILocation(line: 4620, column: 17, scope: !9874)
!9886 = !DILocation(line: 4620, column: 32, scope: !9874)
!9887 = !DILocation(line: 4620, column: 35, scope: !9874)
!9888 = !DILocation(line: 4620, column: 45, scope: !9874)
!9889 = !DILocation(line: 4617, column: 15, scope: !9833)
!9890 = !DILocation(line: 4622, column: 43, scope: !9891)
!9891 = distinct !DILexicalBlock(scope: !9874, file: !1, line: 4621, column: 13)
!9892 = !DILocation(line: 4622, column: 49, scope: !9891)
!9893 = !DILocation(line: 4622, column: 59, scope: !9891)
!9894 = !DILocation(line: 4622, column: 22, scope: !9891)
!9895 = !DILocation(line: 4623, column: 15, scope: !9891)
!9896 = !DILocation(line: 4625, column: 55, scope: !9833)
!9897 = !DILocation(line: 4625, column: 22, scope: !9833)
!9898 = !DILocation(line: 4625, column: 21, scope: !9833)
!9899 = !DILocation(line: 4626, column: 11, scope: !9833)
!9900 = !DILocation(line: 4626, column: 23, scope: !9833)
!9901 = !DILocation(line: 4626, column: 35, scope: !9833)
!9902 = !DILocation(line: 4627, column: 11, scope: !9833)
!9903 = !DILocation(line: 4627, column: 23, scope: !9833)
!9904 = !DILocation(line: 4627, column: 30, scope: !9833)
!9905 = !DILocation(line: 4627, column: 37, scope: !9833)
!9906 = !DILocation(line: 4628, column: 40, scope: !9833)
!9907 = !DILocation(line: 4628, column: 46, scope: !9833)
!9908 = !DILocation(line: 4628, column: 57, scope: !9833)
!9909 = !DILocation(line: 4628, column: 19, scope: !9833)
!9910 = !DILocation(line: 4628, column: 17, scope: !9833)
!9911 = !DILocation(line: 4629, column: 38, scope: !9833)
!9912 = !DILocation(line: 4629, column: 22, scope: !9833)
!9913 = !DILocation(line: 4629, column: 21, scope: !9833)
!9914 = !DILocation(line: 4630, column: 37, scope: !9833)
!9915 = !DILocation(line: 4630, column: 43, scope: !9833)
!9916 = !DILocation(line: 4630, column: 53, scope: !9833)
!9917 = !DILocation(line: 4630, column: 19, scope: !9833)
!9918 = !DILocation(line: 4630, column: 17, scope: !9833)
!9919 = !DILocation(line: 4631, column: 11, scope: !9833)
!9920 = !DILocation(line: 4633, column: 36, scope: !9755)
!9921 = !DILocation(line: 4633, column: 42, scope: !9755)
!9922 = !DILocation(line: 4633, column: 52, scope: !9755)
!9923 = !DILocation(line: 4633, column: 15, scope: !9755)
!9924 = !DILocation(line: 4633, column: 13, scope: !9755)
!9925 = !DILocation(line: 4634, column: 7, scope: !9755)
!9926 = !DILocation(line: 4637, column: 31, scope: !8922)
!9927 = !DILocation(line: 4637, column: 14, scope: !8922)
!9928 = !DILocation(line: 4637, column: 13, scope: !8922)
!9929 = !DILocation(line: 4638, column: 7, scope: !9930)
!9930 = distinct !DILexicalBlock(scope: !8922, file: !1, line: 4638, column: 7)
!9931 = !DILocation(line: 4638, column: 14, scope: !9930)
!9932 = !DILocation(line: 4638, column: 20, scope: !9930)
!9933 = !DILocation(line: 4638, column: 7, scope: !8922)
!9934 = !DILocation(line: 4639, column: 12, scope: !9930)
!9935 = !DILocation(line: 4639, column: 5, scope: !9930)
!9936 = !DILocation(line: 4640, column: 10, scope: !8922)
!9937 = !DILocation(line: 4640, column: 17, scope: !8922)
!9938 = !DILocation(line: 4640, column: 3, scope: !8922)
!9939 = distinct !DISubprogram(name: "SetImageProgress", scope: !9940, file: !9940, line: 27, type: !9941, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1236)
!9940 = !DIFile(filename: "./magick/monitor-private.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!9941 = !DISubroutineType(types: !9942)
!9942 = !{!777, !1107, !904, !906, !909}
!9943 = !DILocalVariable(name: "image", arg: 1, scope: !9939, file: !9940, line: 27, type: !1107)
!9944 = !DILocation(line: 27, column: 63, scope: !9939)
!9945 = !DILocalVariable(name: "tag", arg: 2, scope: !9939, file: !9940, line: 28, type: !904)
!9946 = !DILocation(line: 28, column: 15, scope: !9939)
!9947 = !DILocalVariable(name: "offset", arg: 3, scope: !9939, file: !9940, line: 28, type: !906)
!9948 = !DILocation(line: 28, column: 42, scope: !9939)
!9949 = !DILocalVariable(name: "extent", arg: 4, scope: !9939, file: !9940, line: 28, type: !909)
!9950 = !DILocation(line: 28, column: 70, scope: !9939)
!9951 = !DILocalVariable(name: "message", scope: !9939, file: !9940, line: 31, type: !924)
!9952 = !DILocation(line: 31, column: 5, scope: !9939)
!9953 = !DILocation(line: 33, column: 7, scope: !9954)
!9954 = distinct !DILexicalBlock(scope: !9939, file: !9940, line: 33, column: 7)
!9955 = !DILocation(line: 33, column: 14, scope: !9954)
!9956 = !DILocation(line: 33, column: 31, scope: !9954)
!9957 = !DILocation(line: 33, column: 7, scope: !9939)
!9958 = !DILocation(line: 34, column: 5, scope: !9954)
!9959 = !DILocation(line: 35, column: 29, scope: !9939)
!9960 = !DILocation(line: 35, column: 59, scope: !9939)
!9961 = !DILocation(line: 35, column: 63, scope: !9939)
!9962 = !DILocation(line: 35, column: 70, scope: !9939)
!9963 = !DILocation(line: 35, column: 10, scope: !9939)
!9964 = !DILocation(line: 36, column: 10, scope: !9939)
!9965 = !DILocation(line: 36, column: 17, scope: !9939)
!9966 = !DILocation(line: 36, column: 34, scope: !9939)
!9967 = !DILocation(line: 36, column: 42, scope: !9939)
!9968 = !DILocation(line: 36, column: 49, scope: !9939)
!9969 = !DILocation(line: 36, column: 56, scope: !9939)
!9970 = !DILocation(line: 36, column: 63, scope: !9939)
!9971 = !DILocation(line: 36, column: 3, scope: !9939)
!9972 = !DILocation(line: 37, column: 1, scope: !9939)
!9973 = distinct !DISubprogram(name: "DrawGradientImage", scope: !1, file: !1, line: 3277, type: !3256, scopeLine: 3279, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1236)
!9974 = !DILocalVariable(name: "image", arg: 1, scope: !9973, file: !1, line: 3277, type: !801)
!9975 = !DILocation(line: 3277, column: 57, scope: !9973)
!9976 = !DILocalVariable(name: "draw_info", arg: 2, scope: !9973, file: !1, line: 3278, type: !1525)
!9977 = !DILocation(line: 3278, column: 19, scope: !9973)
!9978 = !DILocalVariable(name: "image_view", scope: !9973, file: !1, line: 3281, type: !2158)
!9979 = !DILocation(line: 3281, column: 6, scope: !9973)
!9980 = !DILocalVariable(name: "gradient", scope: !9973, file: !1, line: 3284, type: !9981)
!9981 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9982, size: 64)
!9982 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !749)
!9983 = !DILocation(line: 3284, column: 6, scope: !9973)
!9984 = !DILocalVariable(name: "gradient_vector", scope: !9973, file: !1, line: 3287, type: !2676)
!9985 = !DILocation(line: 3287, column: 6, scope: !9973)
!9986 = !DILocalVariable(name: "length", scope: !9973, file: !1, line: 3290, type: !728)
!9987 = !DILocation(line: 3290, column: 5, scope: !9973)
!9988 = !DILocalVariable(name: "exception", scope: !9973, file: !1, line: 3293, type: !1266)
!9989 = !DILocation(line: 3293, column: 6, scope: !9973)
!9990 = !DILocalVariable(name: "status", scope: !9973, file: !1, line: 3296, type: !777)
!9991 = !DILocation(line: 3296, column: 5, scope: !9973)
!9992 = !DILocalVariable(name: "zero", scope: !9973, file: !1, line: 3299, type: !769)
!9993 = !DILocation(line: 3299, column: 5, scope: !9973)
!9994 = !DILocalVariable(name: "point", scope: !9973, file: !1, line: 3302, type: !794)
!9995 = !DILocation(line: 3302, column: 5, scope: !9973)
!9996 = !DILocalVariable(name: "bounding_box", scope: !9973, file: !1, line: 3305, type: !708)
!9997 = !DILocation(line: 3305, column: 5, scope: !9973)
!9998 = !DILocalVariable(name: "y", scope: !9973, file: !1, line: 3308, type: !717)
!9999 = !DILocation(line: 3308, column: 5, scope: !9973)
!10000 = !DILocation(line: 3315, column: 7, scope: !10001)
!10001 = distinct !DILexicalBlock(scope: !9973, file: !1, line: 3315, column: 7)
!10002 = !DILocation(line: 3315, column: 14, scope: !10001)
!10003 = !DILocation(line: 3315, column: 20, scope: !10001)
!10004 = !DILocation(line: 3315, column: 7, scope: !9973)
!10005 = !DILocation(line: 3316, column: 61, scope: !10001)
!10006 = !DILocation(line: 3316, column: 68, scope: !10001)
!10007 = !DILocation(line: 3316, column: 12, scope: !10001)
!10008 = !DILocation(line: 3316, column: 5, scope: !10001)
!10009 = !DILocation(line: 3318, column: 14, scope: !9973)
!10010 = !DILocation(line: 3318, column: 25, scope: !9973)
!10011 = !DILocation(line: 3318, column: 11, scope: !9973)
!10012 = !DILocation(line: 3319, column: 21, scope: !9973)
!10013 = !DILocation(line: 3319, column: 31, scope: !9973)
!10014 = !DILocation(line: 3319, column: 18, scope: !9973)
!10015 = !DILocation(line: 3320, column: 11, scope: !9973)
!10016 = !DILocation(line: 3320, column: 28, scope: !9973)
!10017 = !DILocation(line: 3320, column: 31, scope: !9973)
!10018 = !DILocation(line: 3320, column: 48, scope: !9973)
!10019 = !DILocation(line: 3320, column: 30, scope: !9973)
!10020 = !DILocation(line: 3320, column: 9, scope: !9973)
!10021 = !DILocation(line: 3320, column: 10, scope: !9973)
!10022 = !DILocation(line: 3321, column: 11, scope: !9973)
!10023 = !DILocation(line: 3321, column: 28, scope: !9973)
!10024 = !DILocation(line: 3321, column: 31, scope: !9973)
!10025 = !DILocation(line: 3321, column: 48, scope: !9973)
!10026 = !DILocation(line: 3321, column: 30, scope: !9973)
!10027 = !DILocation(line: 3321, column: 9, scope: !9973)
!10028 = !DILocation(line: 3321, column: 10, scope: !9973)
!10029 = !DILocation(line: 3322, column: 21, scope: !9973)
!10030 = !DILocation(line: 3322, column: 29, scope: !9973)
!10031 = !DILocation(line: 3322, column: 22, scope: !9973)
!10032 = !DILocation(line: 3322, column: 37, scope: !9973)
!10033 = !DILocation(line: 3322, column: 45, scope: !9973)
!10034 = !DILocation(line: 3322, column: 38, scope: !9973)
!10035 = !DILocation(line: 3322, column: 30, scope: !9973)
!10036 = !DILocation(line: 3322, column: 10, scope: !9973)
!10037 = !DILocation(line: 3322, column: 9, scope: !9973)
!10038 = !DILocation(line: 3323, column: 16, scope: !9973)
!10039 = !DILocation(line: 3323, column: 26, scope: !9973)
!10040 = !DILocation(line: 3324, column: 9, scope: !9973)
!10041 = !DILocation(line: 3325, column: 15, scope: !9973)
!10042 = !DILocation(line: 3325, column: 22, scope: !9973)
!10043 = !DILocation(line: 3325, column: 12, scope: !9973)
!10044 = !DILocation(line: 3326, column: 24, scope: !9973)
!10045 = !DILocation(line: 3326, column: 3, scope: !9973)
!10046 = !DILocation(line: 3327, column: 40, scope: !9973)
!10047 = !DILocation(line: 3327, column: 46, scope: !9973)
!10048 = !DILocation(line: 3327, column: 14, scope: !9973)
!10049 = !DILocation(line: 3327, column: 13, scope: !9973)
!10050 = !DILocation(line: 3332, column: 23, scope: !10051)
!10051 = distinct !DILexicalBlock(scope: !9973, file: !1, line: 3332, column: 3)
!10052 = !DILocation(line: 3332, column: 9, scope: !10051)
!10053 = !DILocation(line: 3332, column: 8, scope: !10051)
!10054 = !DILocation(line: 3332, column: 26, scope: !10055)
!10055 = distinct !DILexicalBlock(scope: !10051, file: !1, line: 3332, column: 3)
!10056 = !DILocation(line: 3332, column: 53, scope: !10055)
!10057 = !DILocation(line: 3332, column: 28, scope: !10055)
!10058 = !DILocation(line: 3332, column: 3, scope: !10051)
!10059 = !DILocalVariable(name: "alpha", scope: !10060, file: !1, line: 3335, type: !728)
!10060 = distinct !DILexicalBlock(scope: !10055, file: !1, line: 3333, column: 3)
!10061 = !DILocation(line: 3335, column: 7, scope: !10060)
!10062 = !DILocalVariable(name: "offset", scope: !10060, file: !1, line: 3336, type: !728)
!10063 = !DILocation(line: 3336, column: 7, scope: !10060)
!10064 = !DILocalVariable(name: "composite", scope: !10060, file: !1, line: 3339, type: !769)
!10065 = !DILocation(line: 3339, column: 7, scope: !10060)
!10066 = !DILocalVariable(name: "pixel", scope: !10060, file: !1, line: 3340, type: !769)
!10067 = !DILocation(line: 3340, column: 7, scope: !10060)
!10068 = !DILocalVariable(name: "indexes", scope: !10060, file: !1, line: 3343, type: !2427)
!10069 = !DILocation(line: 3343, column: 17, scope: !10060)
!10070 = !DILocalVariable(name: "i", scope: !10060, file: !1, line: 3346, type: !717)
!10071 = !DILocation(line: 3346, column: 7, scope: !10060)
!10072 = !DILocalVariable(name: "x", scope: !10060, file: !1, line: 3347, type: !717)
!10073 = !DILocation(line: 3347, column: 7, scope: !10060)
!10074 = !DILocalVariable(name: "q", scope: !10060, file: !1, line: 3350, type: !2432)
!10075 = !DILocation(line: 3350, column: 17, scope: !10060)
!10076 = !DILocalVariable(name: "j", scope: !10060, file: !1, line: 3353, type: !717)
!10077 = !DILocation(line: 3353, column: 7, scope: !10060)
!10078 = !DILocation(line: 3355, column: 9, scope: !10079)
!10079 = distinct !DILexicalBlock(scope: !10060, file: !1, line: 3355, column: 9)
!10080 = !DILocation(line: 3355, column: 16, scope: !10079)
!10081 = !DILocation(line: 3355, column: 9, scope: !10060)
!10082 = !DILocation(line: 3356, column: 7, scope: !10079)
!10083 = !DILocation(line: 3357, column: 35, scope: !10060)
!10084 = !DILocation(line: 3357, column: 48, scope: !10060)
!10085 = !DILocation(line: 3357, column: 50, scope: !10060)
!10086 = !DILocation(line: 3357, column: 57, scope: !10060)
!10087 = !DILocation(line: 3357, column: 67, scope: !10060)
!10088 = !DILocation(line: 3357, column: 7, scope: !10060)
!10089 = !DILocation(line: 3357, column: 6, scope: !10060)
!10090 = !DILocation(line: 3358, column: 9, scope: !10091)
!10091 = distinct !DILexicalBlock(scope: !10060, file: !1, line: 3358, column: 9)
!10092 = !DILocation(line: 3358, column: 11, scope: !10091)
!10093 = !DILocation(line: 3358, column: 9, scope: !10060)
!10094 = !DILocation(line: 3360, column: 15, scope: !10095)
!10095 = distinct !DILexicalBlock(scope: !10091, file: !1, line: 3359, column: 7)
!10096 = !DILocation(line: 3361, column: 9, scope: !10095)
!10097 = !DILocation(line: 3363, column: 45, scope: !10060)
!10098 = !DILocation(line: 3363, column: 13, scope: !10060)
!10099 = !DILocation(line: 3363, column: 12, scope: !10060)
!10100 = !DILocation(line: 3364, column: 11, scope: !10060)
!10101 = !DILocation(line: 3365, column: 15, scope: !10060)
!10102 = !DILocation(line: 3366, column: 31, scope: !10060)
!10103 = !DILocation(line: 3366, column: 42, scope: !10060)
!10104 = !DILocation(line: 3366, column: 12, scope: !10060)
!10105 = !DILocation(line: 3366, column: 11, scope: !10060)
!10106 = !DILocation(line: 3367, column: 9, scope: !10107)
!10107 = distinct !DILexicalBlock(scope: !10060, file: !1, line: 3367, column: 9)
!10108 = !DILocation(line: 3367, column: 19, scope: !10107)
!10109 = !DILocation(line: 3367, column: 24, scope: !10107)
!10110 = !DILocation(line: 3367, column: 9, scope: !10060)
!10111 = !DILocation(line: 3368, column: 15, scope: !10107)
!10112 = !DILocation(line: 3368, column: 13, scope: !10107)
!10113 = !DILocation(line: 3368, column: 7, scope: !10107)
!10114 = !DILocation(line: 3369, column: 25, scope: !10115)
!10115 = distinct !DILexicalBlock(scope: !10060, file: !1, line: 3369, column: 5)
!10116 = !DILocation(line: 3369, column: 11, scope: !10115)
!10117 = !DILocation(line: 3369, column: 10, scope: !10115)
!10118 = !DILocation(line: 3369, column: 28, scope: !10119)
!10119 = distinct !DILexicalBlock(scope: !10115, file: !1, line: 3369, column: 5)
!10120 = !DILocation(line: 3369, column: 55, scope: !10119)
!10121 = !DILocation(line: 3369, column: 30, scope: !10119)
!10122 = !DILocation(line: 3369, column: 5, scope: !10115)
!10123 = !DILocation(line: 3371, column: 28, scope: !10124)
!10124 = distinct !DILexicalBlock(scope: !10119, file: !1, line: 3370, column: 5)
!10125 = !DILocation(line: 3371, column: 34, scope: !10124)
!10126 = !DILocation(line: 3371, column: 36, scope: !10124)
!10127 = !DILocation(line: 3371, column: 44, scope: !10124)
!10128 = !DILocation(line: 3371, column: 43, scope: !10124)
!10129 = !DILocation(line: 3371, column: 7, scope: !10124)
!10130 = !DILocation(line: 3372, column: 15, scope: !10124)
!10131 = !DILocation(line: 3372, column: 25, scope: !10124)
!10132 = !DILocation(line: 3372, column: 7, scope: !10124)
!10133 = !DILocation(line: 3377, column: 16, scope: !10134)
!10134 = distinct !DILexicalBlock(scope: !10135, file: !1, line: 3377, column: 15)
!10135 = distinct !DILexicalBlock(scope: !10136, file: !1, line: 3376, column: 9)
!10136 = distinct !DILexicalBlock(scope: !10124, file: !1, line: 3373, column: 7)
!10137 = !DILocation(line: 3377, column: 36, scope: !10134)
!10138 = !DILocation(line: 3377, column: 53, scope: !10134)
!10139 = !DILocation(line: 3377, column: 55, scope: !10134)
!10140 = !DILocation(line: 3377, column: 31, scope: !10134)
!10141 = !DILocation(line: 3377, column: 21, scope: !10134)
!10142 = !DILocation(line: 3377, column: 18, scope: !10134)
!10143 = !DILocation(line: 3377, column: 62, scope: !10134)
!10144 = !DILocation(line: 3378, column: 16, scope: !10134)
!10145 = !DILocation(line: 3378, column: 36, scope: !10134)
!10146 = !DILocation(line: 3378, column: 53, scope: !10134)
!10147 = !DILocation(line: 3378, column: 55, scope: !10134)
!10148 = !DILocation(line: 3378, column: 31, scope: !10134)
!10149 = !DILocation(line: 3378, column: 21, scope: !10134)
!10150 = !DILocation(line: 3378, column: 18, scope: !10134)
!10151 = !DILocation(line: 3377, column: 15, scope: !10135)
!10152 = !DILocation(line: 3380, column: 41, scope: !10153)
!10153 = distinct !DILexicalBlock(scope: !10134, file: !1, line: 3379, column: 13)
!10154 = !DILocation(line: 3380, column: 50, scope: !10153)
!10155 = !DILocation(line: 3380, column: 52, scope: !10153)
!10156 = !DILocation(line: 3380, column: 22, scope: !10153)
!10157 = !DILocation(line: 3380, column: 21, scope: !10153)
!10158 = !DILocation(line: 3381, column: 19, scope: !10159)
!10159 = distinct !DILexicalBlock(scope: !10153, file: !1, line: 3381, column: 19)
!10160 = !DILocation(line: 3381, column: 29, scope: !10159)
!10161 = !DILocation(line: 3381, column: 34, scope: !10159)
!10162 = !DILocation(line: 3381, column: 19, scope: !10153)
!10163 = !DILocation(line: 3382, column: 25, scope: !10159)
!10164 = !DILocation(line: 3382, column: 23, scope: !10159)
!10165 = !DILocation(line: 3382, column: 17, scope: !10159)
!10166 = !DILocation(line: 3383, column: 13, scope: !10153)
!10167 = !DILocation(line: 3384, column: 17, scope: !10168)
!10168 = distinct !DILexicalBlock(scope: !10135, file: !1, line: 3384, column: 11)
!10169 = !DILocation(line: 3384, column: 16, scope: !10168)
!10170 = !DILocation(line: 3384, column: 21, scope: !10171)
!10171 = distinct !DILexicalBlock(scope: !10168, file: !1, line: 3384, column: 11)
!10172 = !DILocation(line: 3384, column: 35, scope: !10171)
!10173 = !DILocation(line: 3384, column: 45, scope: !10171)
!10174 = !DILocation(line: 3384, column: 23, scope: !10171)
!10175 = !DILocation(line: 3384, column: 11, scope: !10168)
!10176 = !DILocation(line: 3385, column: 17, scope: !10177)
!10177 = distinct !DILexicalBlock(scope: !10171, file: !1, line: 3385, column: 17)
!10178 = !DILocation(line: 3385, column: 26, scope: !10177)
!10179 = !DILocation(line: 3385, column: 36, scope: !10177)
!10180 = !DILocation(line: 3385, column: 42, scope: !10177)
!10181 = !DILocation(line: 3385, column: 45, scope: !10177)
!10182 = !DILocation(line: 3385, column: 24, scope: !10177)
!10183 = !DILocation(line: 3385, column: 17, scope: !10171)
!10184 = !DILocation(line: 3386, column: 15, scope: !10177)
!10185 = !DILocation(line: 3384, column: 60, scope: !10171)
!10186 = !DILocation(line: 3384, column: 11, scope: !10171)
!10187 = distinct !{!10187, !10175, !10188}
!10188 = !DILocation(line: 3386, column: 15, scope: !10168)
!10189 = !DILocation(line: 3387, column: 16, scope: !10190)
!10190 = distinct !DILexicalBlock(scope: !10135, file: !1, line: 3387, column: 15)
!10191 = !DILocation(line: 3387, column: 23, scope: !10190)
!10192 = !DILocation(line: 3387, column: 30, scope: !10190)
!10193 = !DILocation(line: 3387, column: 34, scope: !10190)
!10194 = !DILocation(line: 3387, column: 36, scope: !10190)
!10195 = !DILocation(line: 3387, column: 15, scope: !10135)
!10196 = !DILocation(line: 3388, column: 23, scope: !10190)
!10197 = !DILocation(line: 3388, column: 33, scope: !10190)
!10198 = !DILocation(line: 3388, column: 42, scope: !10190)
!10199 = !DILocation(line: 3388, column: 13, scope: !10190)
!10200 = !DILocation(line: 3390, column: 18, scope: !10201)
!10201 = distinct !DILexicalBlock(scope: !10190, file: !1, line: 3390, column: 17)
!10202 = !DILocation(line: 3390, column: 25, scope: !10201)
!10203 = !DILocation(line: 3390, column: 32, scope: !10201)
!10204 = !DILocation(line: 3390, column: 36, scope: !10201)
!10205 = !DILocation(line: 3390, column: 51, scope: !10201)
!10206 = !DILocation(line: 3390, column: 61, scope: !10201)
!10207 = !DILocation(line: 3390, column: 38, scope: !10201)
!10208 = !DILocation(line: 3390, column: 17, scope: !10190)
!10209 = !DILocation(line: 3391, column: 25, scope: !10201)
!10210 = !DILocation(line: 3391, column: 35, scope: !10201)
!10211 = !DILocation(line: 3391, column: 41, scope: !10201)
!10212 = !DILocation(line: 3391, column: 51, scope: !10201)
!10213 = !DILocation(line: 3391, column: 63, scope: !10201)
!10214 = !DILocation(line: 3391, column: 67, scope: !10201)
!10215 = !DILocation(line: 3391, column: 15, scope: !10201)
!10216 = !DILocation(line: 3394, column: 19, scope: !10217)
!10217 = distinct !DILexicalBlock(scope: !10201, file: !1, line: 3393, column: 15)
!10218 = !DILocation(line: 3394, column: 18, scope: !10217)
!10219 = !DILocation(line: 3395, column: 18, scope: !10217)
!10220 = !DILocation(line: 3396, column: 24, scope: !10217)
!10221 = !DILocation(line: 3396, column: 31, scope: !10217)
!10222 = !DILocation(line: 3396, column: 41, scope: !10217)
!10223 = !DILocation(line: 3396, column: 47, scope: !10217)
!10224 = !DILocation(line: 3396, column: 50, scope: !10217)
!10225 = !DILocation(line: 3396, column: 30, scope: !10217)
!10226 = !DILocation(line: 3397, column: 20, scope: !10217)
!10227 = !DILocation(line: 3397, column: 30, scope: !10217)
!10228 = !DILocation(line: 3397, column: 36, scope: !10217)
!10229 = !DILocation(line: 3397, column: 39, scope: !10217)
!10230 = !DILocation(line: 3397, column: 46, scope: !10217)
!10231 = !DILocation(line: 3397, column: 56, scope: !10217)
!10232 = !DILocation(line: 3397, column: 62, scope: !10217)
!10233 = !DILocation(line: 3397, column: 65, scope: !10217)
!10234 = !DILocation(line: 3397, column: 45, scope: !10217)
!10235 = !DILocation(line: 3397, column: 19, scope: !10217)
!10236 = !DILocation(line: 3396, column: 57, scope: !10217)
!10237 = !DILocation(line: 3396, column: 22, scope: !10217)
!10238 = !DILocation(line: 3398, column: 44, scope: !10217)
!10239 = !DILocation(line: 3398, column: 54, scope: !10217)
!10240 = !DILocation(line: 3398, column: 60, scope: !10217)
!10241 = !DILocation(line: 3398, column: 63, scope: !10217)
!10242 = !DILocation(line: 3398, column: 73, scope: !10217)
!10243 = !DILocation(line: 3398, column: 72, scope: !10217)
!10244 = !DILocation(line: 3398, column: 69, scope: !10217)
!10245 = !DILocation(line: 3399, column: 20, scope: !10217)
!10246 = !DILocation(line: 3399, column: 30, scope: !10217)
!10247 = !DILocation(line: 3399, column: 36, scope: !10217)
!10248 = !DILocation(line: 3399, column: 39, scope: !10217)
!10249 = !DILocation(line: 3399, column: 45, scope: !10217)
!10250 = !DILocation(line: 3398, column: 17, scope: !10217)
!10251 = !DILocation(line: 3401, column: 11, scope: !10135)
!10252 = !DILocation(line: 3405, column: 16, scope: !10253)
!10253 = distinct !DILexicalBlock(scope: !10254, file: !1, line: 3405, column: 15)
!10254 = distinct !DILexicalBlock(scope: !10136, file: !1, line: 3404, column: 9)
!10255 = !DILocation(line: 3405, column: 36, scope: !10253)
!10256 = !DILocation(line: 3405, column: 53, scope: !10253)
!10257 = !DILocation(line: 3405, column: 55, scope: !10253)
!10258 = !DILocation(line: 3405, column: 31, scope: !10253)
!10259 = !DILocation(line: 3405, column: 21, scope: !10253)
!10260 = !DILocation(line: 3405, column: 18, scope: !10253)
!10261 = !DILocation(line: 3405, column: 62, scope: !10253)
!10262 = !DILocation(line: 3406, column: 16, scope: !10253)
!10263 = !DILocation(line: 3406, column: 36, scope: !10253)
!10264 = !DILocation(line: 3406, column: 53, scope: !10253)
!10265 = !DILocation(line: 3406, column: 55, scope: !10253)
!10266 = !DILocation(line: 3406, column: 31, scope: !10253)
!10267 = !DILocation(line: 3406, column: 21, scope: !10253)
!10268 = !DILocation(line: 3406, column: 18, scope: !10253)
!10269 = !DILocation(line: 3405, column: 15, scope: !10254)
!10270 = !DILocation(line: 3408, column: 41, scope: !10271)
!10271 = distinct !DILexicalBlock(scope: !10253, file: !1, line: 3407, column: 13)
!10272 = !DILocation(line: 3408, column: 50, scope: !10271)
!10273 = !DILocation(line: 3408, column: 52, scope: !10271)
!10274 = !DILocation(line: 3408, column: 22, scope: !10271)
!10275 = !DILocation(line: 3408, column: 21, scope: !10271)
!10276 = !DILocation(line: 3409, column: 19, scope: !10277)
!10277 = distinct !DILexicalBlock(scope: !10271, file: !1, line: 3409, column: 19)
!10278 = !DILocation(line: 3409, column: 29, scope: !10277)
!10279 = !DILocation(line: 3409, column: 34, scope: !10277)
!10280 = !DILocation(line: 3409, column: 19, scope: !10271)
!10281 = !DILocation(line: 3410, column: 25, scope: !10277)
!10282 = !DILocation(line: 3410, column: 23, scope: !10277)
!10283 = !DILocation(line: 3410, column: 17, scope: !10277)
!10284 = !DILocation(line: 3411, column: 13, scope: !10271)
!10285 = !DILocation(line: 3412, column: 15, scope: !10286)
!10286 = distinct !DILexicalBlock(scope: !10254, file: !1, line: 3412, column: 15)
!10287 = !DILocation(line: 3412, column: 22, scope: !10286)
!10288 = !DILocation(line: 3412, column: 15, scope: !10254)
!10289 = !DILocation(line: 3413, column: 22, scope: !10286)
!10290 = !DILocation(line: 3413, column: 21, scope: !10286)
!10291 = !DILocation(line: 3413, column: 19, scope: !10286)
!10292 = !DILocation(line: 3413, column: 13, scope: !10286)
!10293 = !DILocation(line: 3414, column: 30, scope: !10294)
!10294 = distinct !DILexicalBlock(scope: !10254, file: !1, line: 3414, column: 15)
!10295 = !DILocation(line: 3414, column: 25, scope: !10294)
!10296 = !DILocation(line: 3414, column: 15, scope: !10294)
!10297 = !DILocation(line: 3414, column: 42, scope: !10294)
!10298 = !DILocation(line: 3414, column: 15, scope: !10254)
!10299 = !DILocation(line: 3415, column: 25, scope: !10294)
!10300 = !DILocation(line: 3415, column: 20, scope: !10294)
!10301 = !DILocation(line: 3415, column: 19, scope: !10294)
!10302 = !DILocation(line: 3415, column: 13, scope: !10294)
!10303 = !DILocation(line: 3417, column: 29, scope: !10294)
!10304 = !DILocation(line: 3417, column: 24, scope: !10294)
!10305 = !DILocation(line: 3417, column: 23, scope: !10294)
!10306 = !DILocation(line: 3417, column: 19, scope: !10294)
!10307 = !DILocation(line: 3418, column: 17, scope: !10308)
!10308 = distinct !DILexicalBlock(scope: !10254, file: !1, line: 3418, column: 11)
!10309 = !DILocation(line: 3418, column: 16, scope: !10308)
!10310 = !DILocation(line: 3418, column: 21, scope: !10311)
!10311 = distinct !DILexicalBlock(scope: !10308, file: !1, line: 3418, column: 11)
!10312 = !DILocation(line: 3418, column: 35, scope: !10311)
!10313 = !DILocation(line: 3418, column: 45, scope: !10311)
!10314 = !DILocation(line: 3418, column: 23, scope: !10311)
!10315 = !DILocation(line: 3418, column: 11, scope: !10308)
!10316 = !DILocation(line: 3419, column: 17, scope: !10317)
!10317 = distinct !DILexicalBlock(scope: !10311, file: !1, line: 3419, column: 17)
!10318 = !DILocation(line: 3419, column: 26, scope: !10317)
!10319 = !DILocation(line: 3419, column: 36, scope: !10317)
!10320 = !DILocation(line: 3419, column: 42, scope: !10317)
!10321 = !DILocation(line: 3419, column: 45, scope: !10317)
!10322 = !DILocation(line: 3419, column: 24, scope: !10317)
!10323 = !DILocation(line: 3419, column: 17, scope: !10311)
!10324 = !DILocation(line: 3420, column: 15, scope: !10317)
!10325 = !DILocation(line: 3418, column: 60, scope: !10311)
!10326 = !DILocation(line: 3418, column: 11, scope: !10311)
!10327 = distinct !{!10327, !10315, !10328}
!10328 = !DILocation(line: 3420, column: 15, scope: !10308)
!10329 = !DILocation(line: 3421, column: 15, scope: !10330)
!10330 = distinct !DILexicalBlock(scope: !10254, file: !1, line: 3421, column: 15)
!10331 = !DILocation(line: 3421, column: 17, scope: !10330)
!10332 = !DILocation(line: 3421, column: 15, scope: !10254)
!10333 = !DILocation(line: 3422, column: 23, scope: !10330)
!10334 = !DILocation(line: 3422, column: 33, scope: !10330)
!10335 = !DILocation(line: 3422, column: 42, scope: !10330)
!10336 = !DILocation(line: 3422, column: 13, scope: !10330)
!10337 = !DILocation(line: 3424, column: 17, scope: !10338)
!10338 = distinct !DILexicalBlock(scope: !10330, file: !1, line: 3424, column: 17)
!10339 = !DILocation(line: 3424, column: 32, scope: !10338)
!10340 = !DILocation(line: 3424, column: 42, scope: !10338)
!10341 = !DILocation(line: 3424, column: 19, scope: !10338)
!10342 = !DILocation(line: 3424, column: 17, scope: !10330)
!10343 = !DILocation(line: 3425, column: 25, scope: !10338)
!10344 = !DILocation(line: 3425, column: 35, scope: !10338)
!10345 = !DILocation(line: 3425, column: 41, scope: !10338)
!10346 = !DILocation(line: 3425, column: 51, scope: !10338)
!10347 = !DILocation(line: 3425, column: 63, scope: !10338)
!10348 = !DILocation(line: 3425, column: 67, scope: !10338)
!10349 = !DILocation(line: 3425, column: 15, scope: !10338)
!10350 = !DILocation(line: 3428, column: 19, scope: !10351)
!10351 = distinct !DILexicalBlock(scope: !10338, file: !1, line: 3427, column: 15)
!10352 = !DILocation(line: 3428, column: 18, scope: !10351)
!10353 = !DILocation(line: 3429, column: 18, scope: !10351)
!10354 = !DILocation(line: 3430, column: 24, scope: !10351)
!10355 = !DILocation(line: 3430, column: 31, scope: !10351)
!10356 = !DILocation(line: 3430, column: 41, scope: !10351)
!10357 = !DILocation(line: 3430, column: 47, scope: !10351)
!10358 = !DILocation(line: 3430, column: 50, scope: !10351)
!10359 = !DILocation(line: 3430, column: 30, scope: !10351)
!10360 = !DILocation(line: 3431, column: 20, scope: !10351)
!10361 = !DILocation(line: 3431, column: 30, scope: !10351)
!10362 = !DILocation(line: 3431, column: 36, scope: !10351)
!10363 = !DILocation(line: 3431, column: 39, scope: !10351)
!10364 = !DILocation(line: 3431, column: 46, scope: !10351)
!10365 = !DILocation(line: 3431, column: 56, scope: !10351)
!10366 = !DILocation(line: 3431, column: 62, scope: !10351)
!10367 = !DILocation(line: 3431, column: 65, scope: !10351)
!10368 = !DILocation(line: 3431, column: 45, scope: !10351)
!10369 = !DILocation(line: 3431, column: 19, scope: !10351)
!10370 = !DILocation(line: 3430, column: 57, scope: !10351)
!10371 = !DILocation(line: 3430, column: 22, scope: !10351)
!10372 = !DILocation(line: 3432, column: 44, scope: !10351)
!10373 = !DILocation(line: 3432, column: 54, scope: !10351)
!10374 = !DILocation(line: 3432, column: 60, scope: !10351)
!10375 = !DILocation(line: 3432, column: 63, scope: !10351)
!10376 = !DILocation(line: 3432, column: 73, scope: !10351)
!10377 = !DILocation(line: 3432, column: 72, scope: !10351)
!10378 = !DILocation(line: 3432, column: 69, scope: !10351)
!10379 = !DILocation(line: 3433, column: 20, scope: !10351)
!10380 = !DILocation(line: 3433, column: 30, scope: !10351)
!10381 = !DILocation(line: 3433, column: 36, scope: !10351)
!10382 = !DILocation(line: 3433, column: 39, scope: !10351)
!10383 = !DILocation(line: 3433, column: 45, scope: !10351)
!10384 = !DILocation(line: 3432, column: 17, scope: !10351)
!10385 = !DILocation(line: 3435, column: 11, scope: !10254)
!10386 = !DILocalVariable(name: "repeat", scope: !10387, file: !1, line: 3440, type: !728)
!10387 = distinct !DILexicalBlock(scope: !10136, file: !1, line: 3438, column: 9)
!10388 = !DILocation(line: 3440, column: 13, scope: !10387)
!10389 = !DILocalVariable(name: "antialias", scope: !10387, file: !1, line: 3443, type: !777)
!10390 = !DILocation(line: 3443, column: 13, scope: !10387)
!10391 = !DILocation(line: 3445, column: 20, scope: !10387)
!10392 = !DILocation(line: 3446, column: 17, scope: !10387)
!10393 = !DILocation(line: 3447, column: 16, scope: !10394)
!10394 = distinct !DILexicalBlock(scope: !10387, file: !1, line: 3447, column: 15)
!10395 = !DILocation(line: 3447, column: 36, scope: !10394)
!10396 = !DILocation(line: 3447, column: 53, scope: !10394)
!10397 = !DILocation(line: 3447, column: 55, scope: !10394)
!10398 = !DILocation(line: 3447, column: 31, scope: !10394)
!10399 = !DILocation(line: 3447, column: 21, scope: !10394)
!10400 = !DILocation(line: 3447, column: 18, scope: !10394)
!10401 = !DILocation(line: 3447, column: 62, scope: !10394)
!10402 = !DILocation(line: 3448, column: 16, scope: !10394)
!10403 = !DILocation(line: 3448, column: 36, scope: !10394)
!10404 = !DILocation(line: 3448, column: 53, scope: !10394)
!10405 = !DILocation(line: 3448, column: 55, scope: !10394)
!10406 = !DILocation(line: 3448, column: 31, scope: !10394)
!10407 = !DILocation(line: 3448, column: 21, scope: !10394)
!10408 = !DILocation(line: 3448, column: 18, scope: !10394)
!10409 = !DILocation(line: 3447, column: 15, scope: !10387)
!10410 = !DILocation(line: 3450, column: 41, scope: !10411)
!10411 = distinct !DILexicalBlock(scope: !10394, file: !1, line: 3449, column: 13)
!10412 = !DILocation(line: 3450, column: 50, scope: !10411)
!10413 = !DILocation(line: 3450, column: 52, scope: !10411)
!10414 = !DILocation(line: 3450, column: 22, scope: !10411)
!10415 = !DILocation(line: 3450, column: 21, scope: !10411)
!10416 = !DILocation(line: 3451, column: 19, scope: !10417)
!10417 = distinct !DILexicalBlock(scope: !10411, file: !1, line: 3451, column: 19)
!10418 = !DILocation(line: 3451, column: 29, scope: !10417)
!10419 = !DILocation(line: 3451, column: 34, scope: !10417)
!10420 = !DILocation(line: 3451, column: 19, scope: !10411)
!10421 = !DILocation(line: 3453, column: 31, scope: !10422)
!10422 = distinct !DILexicalBlock(scope: !10417, file: !1, line: 3452, column: 17)
!10423 = !DILocation(line: 3453, column: 38, scope: !10422)
!10424 = !DILocation(line: 3453, column: 26, scope: !10422)
!10425 = !DILocation(line: 3453, column: 25, scope: !10422)
!10426 = !DILocation(line: 3454, column: 23, scope: !10427)
!10427 = distinct !DILexicalBlock(scope: !10422, file: !1, line: 3454, column: 23)
!10428 = !DILocation(line: 3454, column: 30, scope: !10427)
!10429 = !DILocation(line: 3454, column: 23, scope: !10422)
!10430 = !DILocation(line: 3455, column: 28, scope: !10427)
!10431 = !DILocation(line: 3455, column: 41, scope: !10427)
!10432 = !DILocation(line: 3455, column: 40, scope: !10427)
!10433 = !DILocation(line: 3455, column: 48, scope: !10427)
!10434 = !DILocation(line: 3455, column: 35, scope: !10427)
!10435 = !DILocation(line: 3455, column: 34, scope: !10427)
!10436 = !DILocation(line: 3455, column: 27, scope: !10427)
!10437 = !DILocation(line: 3455, column: 21, scope: !10427)
!10438 = !DILocation(line: 3457, column: 33, scope: !10427)
!10439 = !DILocation(line: 3457, column: 40, scope: !10427)
!10440 = !DILocation(line: 3457, column: 28, scope: !10427)
!10441 = !DILocation(line: 3457, column: 27, scope: !10427)
!10442 = !DILocation(line: 3458, column: 30, scope: !10422)
!10443 = !DILocation(line: 3458, column: 39, scope: !10422)
!10444 = !DILocation(line: 3458, column: 37, scope: !10422)
!10445 = !DILocation(line: 3458, column: 47, scope: !10422)
!10446 = !DILocation(line: 3458, column: 52, scope: !10422)
!10447 = !DILocation(line: 3458, column: 58, scope: !10422)
!10448 = !DILocation(line: 3458, column: 66, scope: !10422)
!10449 = !DILocation(line: 3458, column: 64, scope: !10422)
!10450 = !DILocation(line: 0, scope: !10422)
!10451 = !DILocation(line: 3458, column: 29, scope: !10422)
!10452 = !DILocation(line: 3458, column: 28, scope: !10422)
!10453 = !DILocation(line: 3460, column: 26, scope: !10422)
!10454 = !DILocation(line: 3460, column: 33, scope: !10422)
!10455 = !DILocation(line: 3460, column: 32, scope: !10422)
!10456 = !DILocation(line: 3460, column: 25, scope: !10422)
!10457 = !DILocation(line: 3461, column: 17, scope: !10422)
!10458 = !DILocation(line: 3464, column: 31, scope: !10459)
!10459 = distinct !DILexicalBlock(scope: !10417, file: !1, line: 3463, column: 17)
!10460 = !DILocation(line: 3464, column: 38, scope: !10459)
!10461 = !DILocation(line: 3464, column: 48, scope: !10459)
!10462 = !DILocation(line: 3464, column: 26, scope: !10459)
!10463 = !DILocation(line: 3464, column: 25, scope: !10459)
!10464 = !DILocation(line: 3465, column: 23, scope: !10465)
!10465 = distinct !DILexicalBlock(scope: !10459, file: !1, line: 3465, column: 23)
!10466 = !DILocation(line: 3465, column: 30, scope: !10465)
!10467 = !DILocation(line: 3465, column: 23, scope: !10459)
!10468 = !DILocation(line: 3466, column: 28, scope: !10465)
!10469 = !DILocation(line: 3466, column: 38, scope: !10465)
!10470 = !DILocation(line: 3466, column: 51, scope: !10465)
!10471 = !DILocation(line: 3466, column: 50, scope: !10465)
!10472 = !DILocation(line: 3466, column: 58, scope: !10465)
!10473 = !DILocation(line: 3466, column: 68, scope: !10465)
!10474 = !DILocation(line: 3466, column: 45, scope: !10465)
!10475 = !DILocation(line: 3466, column: 44, scope: !10465)
!10476 = !DILocation(line: 3466, column: 27, scope: !10465)
!10477 = !DILocation(line: 3466, column: 21, scope: !10465)
!10478 = !DILocation(line: 3468, column: 33, scope: !10465)
!10479 = !DILocation(line: 3468, column: 40, scope: !10465)
!10480 = !DILocation(line: 3468, column: 50, scope: !10465)
!10481 = !DILocation(line: 3468, column: 28, scope: !10465)
!10482 = !DILocation(line: 3468, column: 27, scope: !10465)
!10483 = !DILocation(line: 3469, column: 29, scope: !10459)
!10484 = !DILocation(line: 3469, column: 35, scope: !10459)
!10485 = !DILocation(line: 3469, column: 42, scope: !10459)
!10486 = !DILocation(line: 3469, column: 52, scope: !10459)
!10487 = !DILocation(line: 3469, column: 40, scope: !10459)
!10488 = !DILocation(line: 3469, column: 28, scope: !10459)
!10489 = !DILocation(line: 3471, column: 26, scope: !10459)
!10490 = !DILocation(line: 3471, column: 33, scope: !10459)
!10491 = !DILocation(line: 3471, column: 43, scope: !10459)
!10492 = !DILocation(line: 3471, column: 32, scope: !10459)
!10493 = !DILocation(line: 3471, column: 25, scope: !10459)
!10494 = !DILocation(line: 3473, column: 13, scope: !10411)
!10495 = !DILocation(line: 3474, column: 17, scope: !10496)
!10496 = distinct !DILexicalBlock(scope: !10387, file: !1, line: 3474, column: 11)
!10497 = !DILocation(line: 3474, column: 16, scope: !10496)
!10498 = !DILocation(line: 3474, column: 21, scope: !10499)
!10499 = distinct !DILexicalBlock(scope: !10496, file: !1, line: 3474, column: 11)
!10500 = !DILocation(line: 3474, column: 35, scope: !10499)
!10501 = !DILocation(line: 3474, column: 45, scope: !10499)
!10502 = !DILocation(line: 3474, column: 23, scope: !10499)
!10503 = !DILocation(line: 3474, column: 11, scope: !10496)
!10504 = !DILocation(line: 3475, column: 17, scope: !10505)
!10505 = distinct !DILexicalBlock(scope: !10499, file: !1, line: 3475, column: 17)
!10506 = !DILocation(line: 3475, column: 26, scope: !10505)
!10507 = !DILocation(line: 3475, column: 36, scope: !10505)
!10508 = !DILocation(line: 3475, column: 42, scope: !10505)
!10509 = !DILocation(line: 3475, column: 45, scope: !10505)
!10510 = !DILocation(line: 3475, column: 24, scope: !10505)
!10511 = !DILocation(line: 3475, column: 17, scope: !10499)
!10512 = !DILocation(line: 3476, column: 15, scope: !10505)
!10513 = !DILocation(line: 3474, column: 60, scope: !10499)
!10514 = !DILocation(line: 3474, column: 11, scope: !10499)
!10515 = distinct !{!10515, !10503, !10516}
!10516 = !DILocation(line: 3476, column: 15, scope: !10496)
!10517 = !DILocation(line: 3477, column: 15, scope: !10518)
!10518 = distinct !DILexicalBlock(scope: !10387, file: !1, line: 3477, column: 15)
!10519 = !DILocation(line: 3477, column: 17, scope: !10518)
!10520 = !DILocation(line: 3477, column: 15, scope: !10387)
!10521 = !DILocation(line: 3478, column: 23, scope: !10518)
!10522 = !DILocation(line: 3478, column: 33, scope: !10518)
!10523 = !DILocation(line: 3478, column: 42, scope: !10518)
!10524 = !DILocation(line: 3478, column: 13, scope: !10518)
!10525 = !DILocation(line: 3480, column: 17, scope: !10526)
!10526 = distinct !DILexicalBlock(scope: !10518, file: !1, line: 3480, column: 17)
!10527 = !DILocation(line: 3480, column: 32, scope: !10526)
!10528 = !DILocation(line: 3480, column: 42, scope: !10526)
!10529 = !DILocation(line: 3480, column: 19, scope: !10526)
!10530 = !DILocation(line: 3480, column: 17, scope: !10518)
!10531 = !DILocation(line: 3481, column: 25, scope: !10526)
!10532 = !DILocation(line: 3481, column: 35, scope: !10526)
!10533 = !DILocation(line: 3481, column: 41, scope: !10526)
!10534 = !DILocation(line: 3481, column: 51, scope: !10526)
!10535 = !DILocation(line: 3481, column: 63, scope: !10526)
!10536 = !DILocation(line: 3481, column: 67, scope: !10526)
!10537 = !DILocation(line: 3481, column: 15, scope: !10526)
!10538 = !DILocation(line: 3484, column: 19, scope: !10539)
!10539 = distinct !DILexicalBlock(scope: !10526, file: !1, line: 3483, column: 15)
!10540 = !DILocation(line: 3484, column: 18, scope: !10539)
!10541 = !DILocation(line: 3485, column: 18, scope: !10539)
!10542 = !DILocation(line: 3486, column: 24, scope: !10539)
!10543 = !DILocation(line: 3486, column: 31, scope: !10539)
!10544 = !DILocation(line: 3486, column: 41, scope: !10539)
!10545 = !DILocation(line: 3486, column: 47, scope: !10539)
!10546 = !DILocation(line: 3486, column: 50, scope: !10539)
!10547 = !DILocation(line: 3486, column: 30, scope: !10539)
!10548 = !DILocation(line: 3487, column: 20, scope: !10539)
!10549 = !DILocation(line: 3487, column: 30, scope: !10539)
!10550 = !DILocation(line: 3487, column: 36, scope: !10539)
!10551 = !DILocation(line: 3487, column: 39, scope: !10539)
!10552 = !DILocation(line: 3487, column: 46, scope: !10539)
!10553 = !DILocation(line: 3487, column: 56, scope: !10539)
!10554 = !DILocation(line: 3487, column: 62, scope: !10539)
!10555 = !DILocation(line: 3487, column: 65, scope: !10539)
!10556 = !DILocation(line: 3487, column: 45, scope: !10539)
!10557 = !DILocation(line: 3487, column: 19, scope: !10539)
!10558 = !DILocation(line: 3486, column: 57, scope: !10539)
!10559 = !DILocation(line: 3486, column: 22, scope: !10539)
!10560 = !DILocation(line: 3488, column: 21, scope: !10561)
!10561 = distinct !DILexicalBlock(scope: !10539, file: !1, line: 3488, column: 21)
!10562 = !DILocation(line: 3488, column: 31, scope: !10561)
!10563 = !DILocation(line: 3488, column: 21, scope: !10539)
!10564 = !DILocation(line: 3490, column: 25, scope: !10565)
!10565 = distinct !DILexicalBlock(scope: !10566, file: !1, line: 3490, column: 25)
!10566 = distinct !DILexicalBlock(scope: !10561, file: !1, line: 3489, column: 19)
!10567 = !DILocation(line: 3490, column: 35, scope: !10565)
!10568 = !DILocation(line: 3490, column: 40, scope: !10565)
!10569 = !DILocation(line: 3490, column: 25, scope: !10566)
!10570 = !DILocation(line: 3491, column: 29, scope: !10565)
!10571 = !DILocation(line: 3491, column: 36, scope: !10565)
!10572 = !DILocation(line: 3491, column: 35, scope: !10565)
!10573 = !DILocation(line: 3491, column: 28, scope: !10565)
!10574 = !DILocation(line: 3491, column: 23, scope: !10565)
!10575 = !DILocation(line: 3493, column: 29, scope: !10565)
!10576 = !DILocation(line: 3493, column: 39, scope: !10565)
!10577 = !DILocation(line: 3493, column: 46, scope: !10565)
!10578 = !DILocation(line: 3493, column: 45, scope: !10565)
!10579 = !DILocation(line: 3493, column: 28, scope: !10565)
!10580 = !DILocation(line: 3494, column: 22, scope: !10566)
!10581 = !DILocation(line: 3495, column: 33, scope: !10566)
!10582 = !DILocation(line: 3495, column: 43, scope: !10566)
!10583 = !DILocation(line: 3495, column: 55, scope: !10566)
!10584 = !DILocation(line: 3495, column: 22, scope: !10566)
!10585 = !DILocation(line: 3496, column: 19, scope: !10566)
!10586 = !DILocation(line: 3497, column: 44, scope: !10539)
!10587 = !DILocation(line: 3497, column: 54, scope: !10539)
!10588 = !DILocation(line: 3497, column: 60, scope: !10539)
!10589 = !DILocation(line: 3497, column: 63, scope: !10539)
!10590 = !DILocation(line: 3497, column: 73, scope: !10539)
!10591 = !DILocation(line: 3497, column: 72, scope: !10539)
!10592 = !DILocation(line: 3497, column: 69, scope: !10539)
!10593 = !DILocation(line: 3498, column: 20, scope: !10539)
!10594 = !DILocation(line: 3498, column: 30, scope: !10539)
!10595 = !DILocation(line: 3498, column: 36, scope: !10539)
!10596 = !DILocation(line: 3498, column: 39, scope: !10539)
!10597 = !DILocation(line: 3498, column: 45, scope: !10539)
!10598 = !DILocation(line: 3497, column: 17, scope: !10539)
!10599 = !DILocation(line: 3500, column: 11, scope: !10387)
!10600 = !DILocation(line: 3503, column: 53, scope: !10124)
!10601 = !DILocation(line: 3504, column: 15, scope: !10124)
!10602 = !DILocation(line: 3503, column: 7, scope: !10124)
!10603 = !DILocation(line: 3505, column: 22, scope: !10124)
!10604 = !DILocation(line: 3505, column: 35, scope: !10124)
!10605 = !DILocation(line: 3505, column: 37, scope: !10124)
!10606 = !DILocation(line: 3505, column: 45, scope: !10124)
!10607 = !DILocation(line: 3505, column: 44, scope: !10124)
!10608 = !DILocation(line: 3505, column: 7, scope: !10124)
!10609 = !DILocation(line: 3506, column: 8, scope: !10124)
!10610 = !DILocation(line: 3507, column: 5, scope: !10124)
!10611 = !DILocation(line: 3369, column: 63, scope: !10119)
!10612 = !DILocation(line: 3369, column: 5, scope: !10119)
!10613 = distinct !{!10613, !10122, !10614}
!10614 = !DILocation(line: 3507, column: 5, scope: !10115)
!10615 = !DILocation(line: 3508, column: 38, scope: !10616)
!10616 = distinct !DILexicalBlock(scope: !10060, file: !1, line: 3508, column: 9)
!10617 = !DILocation(line: 3508, column: 49, scope: !10616)
!10618 = !DILocation(line: 3508, column: 9, scope: !10616)
!10619 = !DILocation(line: 3508, column: 60, scope: !10616)
!10620 = !DILocation(line: 3508, column: 9, scope: !10060)
!10621 = !DILocation(line: 3509, column: 13, scope: !10616)
!10622 = !DILocation(line: 3509, column: 7, scope: !10616)
!10623 = !DILocation(line: 3510, column: 3, scope: !10060)
!10624 = !DILocation(line: 3332, column: 62, scope: !10055)
!10625 = !DILocation(line: 3332, column: 3, scope: !10055)
!10626 = distinct !{!10626, !10058, !10627}
!10627 = !DILocation(line: 3510, column: 3, scope: !10051)
!10628 = !DILocation(line: 3511, column: 31, scope: !9973)
!10629 = !DILocation(line: 3511, column: 14, scope: !9973)
!10630 = !DILocation(line: 3511, column: 13, scope: !9973)
!10631 = !DILocation(line: 3512, column: 10, scope: !9973)
!10632 = !DILocation(line: 3512, column: 3, scope: !9973)
!10633 = distinct !DISubprogram(name: "GetStopColorOffset", scope: !1, file: !1, line: 3223, type: !10634, scopeLine: 3225, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1236)
!10634 = !DISubroutineType(types: !10635)
!10635 = !{!728, !9981, !10636, !10636}
!10636 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !717)
!10637 = !DILocalVariable(name: "gradient", arg: 1, scope: !10633, file: !1, line: 3223, type: !9981)
!10638 = !DILocation(line: 3223, column: 61, scope: !10633)
!10639 = !DILocalVariable(name: "x", arg: 2, scope: !10633, file: !1, line: 3224, type: !10636)
!10640 = !DILocation(line: 3224, column: 17, scope: !10633)
!10641 = !DILocalVariable(name: "y", arg: 3, scope: !10633, file: !1, line: 3224, type: !10636)
!10642 = !DILocation(line: 3224, column: 33, scope: !10633)
!10643 = !DILocation(line: 3226, column: 11, scope: !10633)
!10644 = !DILocation(line: 3226, column: 21, scope: !10633)
!10645 = !DILocation(line: 3226, column: 3, scope: !10633)
!10646 = !DILocalVariable(name: "gamma", scope: !10647, file: !1, line: 3232, type: !728)
!10647 = distinct !DILexicalBlock(scope: !10648, file: !1, line: 3230, column: 5)
!10648 = distinct !DILexicalBlock(scope: !10633, file: !1, line: 3227, column: 3)
!10649 = !DILocation(line: 3232, column: 9, scope: !10647)
!10650 = !DILocalVariable(name: "length", scope: !10647, file: !1, line: 3233, type: !728)
!10651 = !DILocation(line: 3233, column: 9, scope: !10647)
!10652 = !DILocalVariable(name: "offset", scope: !10647, file: !1, line: 3234, type: !728)
!10653 = !DILocation(line: 3234, column: 9, scope: !10647)
!10654 = !DILocalVariable(name: "scale", scope: !10647, file: !1, line: 3235, type: !728)
!10655 = !DILocation(line: 3235, column: 9, scope: !10647)
!10656 = !DILocalVariable(name: "p", scope: !10647, file: !1, line: 3238, type: !794)
!10657 = !DILocation(line: 3238, column: 9, scope: !10647)
!10658 = !DILocalVariable(name: "q", scope: !10647, file: !1, line: 3239, type: !794)
!10659 = !DILocation(line: 3239, column: 9, scope: !10647)
!10660 = !DILocalVariable(name: "gradient_vector", scope: !10647, file: !1, line: 3242, type: !2676)
!10661 = !DILocation(line: 3242, column: 10, scope: !10647)
!10662 = !DILocation(line: 3244, column: 25, scope: !10647)
!10663 = !DILocation(line: 3244, column: 35, scope: !10647)
!10664 = !DILocation(line: 3244, column: 22, scope: !10647)
!10665 = !DILocation(line: 3245, column: 11, scope: !10647)
!10666 = !DILocation(line: 3245, column: 28, scope: !10647)
!10667 = !DILocation(line: 3245, column: 31, scope: !10647)
!10668 = !DILocation(line: 3245, column: 48, scope: !10647)
!10669 = !DILocation(line: 3245, column: 30, scope: !10647)
!10670 = !DILocation(line: 3245, column: 9, scope: !10647)
!10671 = !DILocation(line: 3245, column: 10, scope: !10647)
!10672 = !DILocation(line: 3246, column: 11, scope: !10647)
!10673 = !DILocation(line: 3246, column: 28, scope: !10647)
!10674 = !DILocation(line: 3246, column: 31, scope: !10647)
!10675 = !DILocation(line: 3246, column: 48, scope: !10647)
!10676 = !DILocation(line: 3246, column: 30, scope: !10647)
!10677 = !DILocation(line: 3246, column: 9, scope: !10647)
!10678 = !DILocation(line: 3246, column: 10, scope: !10647)
!10679 = !DILocation(line: 3247, column: 20, scope: !10647)
!10680 = !DILocation(line: 3247, column: 11, scope: !10647)
!10681 = !DILocation(line: 3247, column: 22, scope: !10647)
!10682 = !DILocation(line: 3247, column: 39, scope: !10647)
!10683 = !DILocation(line: 3247, column: 21, scope: !10647)
!10684 = !DILocation(line: 3247, column: 9, scope: !10647)
!10685 = !DILocation(line: 3247, column: 10, scope: !10647)
!10686 = !DILocation(line: 3248, column: 20, scope: !10647)
!10687 = !DILocation(line: 3248, column: 11, scope: !10647)
!10688 = !DILocation(line: 3248, column: 22, scope: !10647)
!10689 = !DILocation(line: 3248, column: 39, scope: !10647)
!10690 = !DILocation(line: 3248, column: 21, scope: !10647)
!10691 = !DILocation(line: 3248, column: 9, scope: !10647)
!10692 = !DILocation(line: 3248, column: 10, scope: !10647)
!10693 = !DILocation(line: 3249, column: 21, scope: !10647)
!10694 = !DILocation(line: 3249, column: 25, scope: !10647)
!10695 = !DILocation(line: 3249, column: 22, scope: !10647)
!10696 = !DILocation(line: 3249, column: 29, scope: !10647)
!10697 = !DILocation(line: 3249, column: 33, scope: !10647)
!10698 = !DILocation(line: 3249, column: 30, scope: !10647)
!10699 = !DILocation(line: 3249, column: 26, scope: !10647)
!10700 = !DILocation(line: 3249, column: 14, scope: !10647)
!10701 = !DILocation(line: 3249, column: 13, scope: !10647)
!10702 = !DILocation(line: 3250, column: 20, scope: !10647)
!10703 = !DILocation(line: 3250, column: 24, scope: !10647)
!10704 = !DILocation(line: 3250, column: 21, scope: !10647)
!10705 = !DILocation(line: 3250, column: 28, scope: !10647)
!10706 = !DILocation(line: 3250, column: 32, scope: !10647)
!10707 = !DILocation(line: 3250, column: 29, scope: !10647)
!10708 = !DILocation(line: 3250, column: 25, scope: !10647)
!10709 = !DILocation(line: 3250, column: 13, scope: !10647)
!10710 = !DILocation(line: 3250, column: 35, scope: !10647)
!10711 = !DILocation(line: 3250, column: 34, scope: !10647)
!10712 = !DILocation(line: 3250, column: 12, scope: !10647)
!10713 = !DILocation(line: 3251, column: 35, scope: !10647)
!10714 = !DILocation(line: 3251, column: 13, scope: !10647)
!10715 = !DILocation(line: 3251, column: 12, scope: !10647)
!10716 = !DILocation(line: 3252, column: 15, scope: !10647)
!10717 = !DILocation(line: 3252, column: 19, scope: !10647)
!10718 = !DILocation(line: 3252, column: 16, scope: !10647)
!10719 = !DILocation(line: 3252, column: 23, scope: !10647)
!10720 = !DILocation(line: 3252, column: 27, scope: !10647)
!10721 = !DILocation(line: 3252, column: 24, scope: !10647)
!10722 = !DILocation(line: 3252, column: 20, scope: !10647)
!10723 = !DILocation(line: 3252, column: 12, scope: !10647)
!10724 = !DILocation(line: 3253, column: 14, scope: !10647)
!10725 = !DILocation(line: 3253, column: 20, scope: !10647)
!10726 = !DILocation(line: 3253, column: 19, scope: !10647)
!10727 = !DILocation(line: 3253, column: 26, scope: !10647)
!10728 = !DILocation(line: 3253, column: 25, scope: !10647)
!10729 = !DILocation(line: 3253, column: 13, scope: !10647)
!10730 = !DILocation(line: 3254, column: 14, scope: !10647)
!10731 = !DILocation(line: 3254, column: 7, scope: !10647)
!10732 = !DILocalVariable(name: "length", scope: !10733, file: !1, line: 3259, type: !728)
!10733 = distinct !DILexicalBlock(scope: !10648, file: !1, line: 3257, column: 5)
!10734 = !DILocation(line: 3259, column: 9, scope: !10733)
!10735 = !DILocalVariable(name: "offset", scope: !10733, file: !1, line: 3260, type: !728)
!10736 = !DILocation(line: 3260, column: 9, scope: !10733)
!10737 = !DILocalVariable(name: "v", scope: !10733, file: !1, line: 3263, type: !794)
!10738 = !DILocation(line: 3263, column: 9, scope: !10733)
!10739 = !DILocation(line: 3265, column: 20, scope: !10733)
!10740 = !DILocation(line: 3265, column: 11, scope: !10733)
!10741 = !DILocation(line: 3265, column: 22, scope: !10733)
!10742 = !DILocation(line: 3265, column: 32, scope: !10733)
!10743 = !DILocation(line: 3265, column: 39, scope: !10733)
!10744 = !DILocation(line: 3265, column: 21, scope: !10733)
!10745 = !DILocation(line: 3265, column: 9, scope: !10733)
!10746 = !DILocation(line: 3265, column: 10, scope: !10733)
!10747 = !DILocation(line: 3266, column: 20, scope: !10733)
!10748 = !DILocation(line: 3266, column: 11, scope: !10733)
!10749 = !DILocation(line: 3266, column: 22, scope: !10733)
!10750 = !DILocation(line: 3266, column: 32, scope: !10733)
!10751 = !DILocation(line: 3266, column: 39, scope: !10733)
!10752 = !DILocation(line: 3266, column: 21, scope: !10733)
!10753 = !DILocation(line: 3266, column: 9, scope: !10733)
!10754 = !DILocation(line: 3266, column: 10, scope: !10733)
!10755 = !DILocation(line: 3267, column: 21, scope: !10733)
!10756 = !DILocation(line: 3267, column: 25, scope: !10733)
!10757 = !DILocation(line: 3267, column: 22, scope: !10733)
!10758 = !DILocation(line: 3267, column: 29, scope: !10733)
!10759 = !DILocation(line: 3267, column: 33, scope: !10733)
!10760 = !DILocation(line: 3267, column: 30, scope: !10733)
!10761 = !DILocation(line: 3267, column: 26, scope: !10733)
!10762 = !DILocation(line: 3267, column: 14, scope: !10733)
!10763 = !DILocation(line: 3267, column: 13, scope: !10733)
!10764 = !DILocation(line: 3268, column: 11, scope: !10765)
!10765 = distinct !DILexicalBlock(scope: !10733, file: !1, line: 3268, column: 11)
!10766 = !DILocation(line: 3268, column: 21, scope: !10765)
!10767 = !DILocation(line: 3268, column: 28, scope: !10765)
!10768 = !DILocation(line: 3268, column: 11, scope: !10733)
!10769 = !DILocation(line: 3269, column: 16, scope: !10765)
!10770 = !DILocation(line: 3269, column: 9, scope: !10765)
!10771 = !DILocation(line: 3270, column: 14, scope: !10733)
!10772 = !DILocation(line: 3270, column: 21, scope: !10733)
!10773 = !DILocation(line: 3270, column: 31, scope: !10733)
!10774 = !DILocation(line: 3270, column: 20, scope: !10733)
!10775 = !DILocation(line: 3270, column: 13, scope: !10733)
!10776 = !DILocation(line: 3271, column: 14, scope: !10733)
!10777 = !DILocation(line: 3271, column: 7, scope: !10733)
!10778 = !DILocation(line: 3274, column: 3, scope: !10633)
!10779 = !DILocation(line: 3275, column: 1, scope: !10633)
!10780 = distinct !DISubprogram(name: "MagickPixelCompositeBlend", scope: !2994, file: !2994, line: 143, type: !2995, scopeLine: 146, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1236)
!10781 = !DILocalVariable(name: "p", arg: 1, scope: !10780, file: !2994, line: 143, type: !2997)
!10782 = !DILocation(line: 143, column: 71, scope: !10780)
!10783 = !DILocalVariable(name: "alpha", arg: 2, scope: !10780, file: !2994, line: 144, type: !2999)
!10784 = !DILocation(line: 144, column: 24, scope: !10780)
!10785 = !DILocalVariable(name: "q", arg: 3, scope: !10780, file: !2994, line: 144, type: !2997)
!10786 = !DILocation(line: 144, column: 55, scope: !10780)
!10787 = !DILocalVariable(name: "beta", arg: 4, scope: !10780, file: !2994, line: 145, type: !2999)
!10788 = !DILocation(line: 145, column: 24, scope: !10780)
!10789 = !DILocalVariable(name: "composite", arg: 5, scope: !10780, file: !2994, line: 145, type: !2950)
!10790 = !DILocation(line: 145, column: 48, scope: !10780)
!10791 = !DILocation(line: 147, column: 28, scope: !10780)
!10792 = !DILocation(line: 147, column: 61, scope: !10780)
!10793 = !DILocation(line: 148, column: 19, scope: !10780)
!10794 = !DILocation(line: 148, column: 22, scope: !10780)
!10795 = !DILocation(line: 148, column: 18, scope: !10780)
!10796 = !DILocation(line: 147, column: 66, scope: !10780)
!10797 = !DILocation(line: 147, column: 60, scope: !10780)
!10798 = !DILocation(line: 148, column: 32, scope: !10780)
!10799 = !DILocation(line: 148, column: 65, scope: !10780)
!10800 = !DILocation(line: 149, column: 19, scope: !10780)
!10801 = !DILocation(line: 149, column: 22, scope: !10780)
!10802 = !DILocation(line: 149, column: 18, scope: !10780)
!10803 = !DILocation(line: 148, column: 69, scope: !10780)
!10804 = !DILocation(line: 148, column: 64, scope: !10780)
!10805 = !DILocation(line: 149, column: 32, scope: !10780)
!10806 = !DILocation(line: 147, column: 3, scope: !10780)
!10807 = !DILocation(line: 150, column: 1, scope: !10780)
!10808 = distinct !DISubprogram(name: "IsGrayColorspace", scope: !10809, file: !10809, line: 85, type: !10810, scopeLine: 87, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1236)
!10809 = !DIFile(filename: "./magick/colorspace-private.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!10810 = !DISubroutineType(types: !10811)
!10811 = !{!777, !10812}
!10812 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !775)
!10813 = !DILocalVariable(name: "colorspace", arg: 1, scope: !10808, file: !10809, line: 86, type: !10812)
!10814 = !DILocation(line: 86, column: 24, scope: !10808)
!10815 = !DILocation(line: 88, column: 8, scope: !10816)
!10816 = distinct !DILexicalBlock(scope: !10808, file: !10809, line: 88, column: 7)
!10817 = !DILocation(line: 88, column: 19, scope: !10816)
!10818 = !DILocation(line: 88, column: 38, scope: !10816)
!10819 = !DILocation(line: 88, column: 42, scope: !10816)
!10820 = !DILocation(line: 88, column: 53, scope: !10816)
!10821 = !DILocation(line: 88, column: 78, scope: !10816)
!10822 = !DILocation(line: 89, column: 8, scope: !10816)
!10823 = !DILocation(line: 89, column: 19, scope: !10816)
!10824 = !DILocation(line: 88, column: 7, scope: !10808)
!10825 = !DILocation(line: 90, column: 5, scope: !10816)
!10826 = !DILocation(line: 91, column: 3, scope: !10808)
!10827 = !DILocation(line: 92, column: 1, scope: !10808)
!10828 = distinct !DISubprogram(name: "IsPixelGray", scope: !10829, file: !10829, line: 158, type: !10830, scopeLine: 159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1236)
!10829 = !DIFile(filename: "./magick/pixel-accessor.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!10830 = !DISubroutineType(types: !10831)
!10831 = !{!777, !2948}
!10832 = !DILocalVariable(name: "pixel", arg: 1, scope: !10828, file: !10829, line: 158, type: !2948)
!10833 = !DILocation(line: 158, column: 64, scope: !10828)
!10834 = !DILocalVariable(name: "blue", scope: !10828, file: !10829, line: 161, type: !781)
!10835 = !DILocation(line: 161, column: 5, scope: !10828)
!10836 = !DILocalVariable(name: "green", scope: !10828, file: !10829, line: 162, type: !781)
!10837 = !DILocation(line: 162, column: 5, scope: !10828)
!10838 = !DILocalVariable(name: "red", scope: !10828, file: !10829, line: 163, type: !781)
!10839 = !DILocation(line: 163, column: 5, scope: !10828)
!10840 = !DILocation(line: 165, column: 24, scope: !10828)
!10841 = !DILocation(line: 165, column: 31, scope: !10828)
!10842 = !DILocation(line: 165, column: 7, scope: !10828)
!10843 = !DILocation(line: 165, column: 6, scope: !10828)
!10844 = !DILocation(line: 166, column: 26, scope: !10828)
!10845 = !DILocation(line: 166, column: 33, scope: !10828)
!10846 = !DILocation(line: 166, column: 9, scope: !10828)
!10847 = !DILocation(line: 166, column: 8, scope: !10828)
!10848 = !DILocation(line: 167, column: 25, scope: !10828)
!10849 = !DILocation(line: 167, column: 32, scope: !10828)
!10850 = !DILocation(line: 167, column: 8, scope: !10828)
!10851 = !DILocation(line: 167, column: 7, scope: !10828)
!10852 = !DILocation(line: 168, column: 27, scope: !10853)
!10853 = distinct !DILexicalBlock(scope: !10828, file: !10829, line: 168, column: 7)
!10854 = !DILocation(line: 168, column: 31, scope: !10853)
!10855 = !DILocation(line: 168, column: 30, scope: !10853)
!10856 = !DILocation(line: 168, column: 8, scope: !10853)
!10857 = !DILocation(line: 168, column: 38, scope: !10853)
!10858 = !DILocation(line: 168, column: 55, scope: !10853)
!10859 = !DILocation(line: 169, column: 27, scope: !10853)
!10860 = !DILocation(line: 169, column: 33, scope: !10853)
!10861 = !DILocation(line: 169, column: 32, scope: !10853)
!10862 = !DILocation(line: 169, column: 8, scope: !10853)
!10863 = !DILocation(line: 169, column: 39, scope: !10853)
!10864 = !DILocation(line: 168, column: 7, scope: !10828)
!10865 = !DILocation(line: 170, column: 5, scope: !10853)
!10866 = !DILocation(line: 171, column: 3, scope: !10828)
!10867 = !DILocation(line: 172, column: 1, scope: !10828)
!10868 = distinct !DISubprogram(name: "GetFillColor", scope: !10869, file: !10869, line: 29, type: !10870, scopeLine: 31, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1236)
!10869 = !DIFile(filename: "./magick/draw-private.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!10870 = !DISubroutineType(types: !10871)
!10871 = !{!777, !1525, !10636, !10636, !819}
!10872 = !DILocalVariable(name: "draw_info", arg: 1, scope: !10868, file: !10869, line: 29, type: !1525)
!10873 = !DILocation(line: 29, column: 62, scope: !10868)
!10874 = !DILocalVariable(name: "x", arg: 2, scope: !10868, file: !10869, line: 30, type: !10636)
!10875 = !DILocation(line: 30, column: 17, scope: !10868)
!10876 = !DILocalVariable(name: "y", arg: 3, scope: !10868, file: !10869, line: 30, type: !10636)
!10877 = !DILocation(line: 30, column: 33, scope: !10868)
!10878 = !DILocalVariable(name: "pixel", arg: 4, scope: !10868, file: !10869, line: 30, type: !819)
!10879 = !DILocation(line: 30, column: 48, scope: !10868)
!10880 = !DILocalVariable(name: "pattern", scope: !10868, file: !10869, line: 33, type: !801)
!10881 = !DILocation(line: 33, column: 6, scope: !10868)
!10882 = !DILocalVariable(name: "status", scope: !10868, file: !10869, line: 36, type: !777)
!10883 = !DILocation(line: 36, column: 5, scope: !10868)
!10884 = !DILocation(line: 38, column: 11, scope: !10868)
!10885 = !DILocation(line: 38, column: 22, scope: !10868)
!10886 = !DILocation(line: 38, column: 10, scope: !10868)
!10887 = !DILocation(line: 39, column: 7, scope: !10888)
!10888 = distinct !DILexicalBlock(scope: !10868, file: !10869, line: 39, column: 7)
!10889 = !DILocation(line: 39, column: 15, scope: !10888)
!10890 = !DILocation(line: 39, column: 7, scope: !10868)
!10891 = !DILocation(line: 41, column: 8, scope: !10892)
!10892 = distinct !DILexicalBlock(scope: !10888, file: !10869, line: 40, column: 5)
!10893 = !DILocation(line: 41, column: 14, scope: !10892)
!10894 = !DILocation(line: 41, column: 25, scope: !10892)
!10895 = !DILocation(line: 42, column: 7, scope: !10892)
!10896 = !DILocation(line: 44, column: 35, scope: !10868)
!10897 = !DILocation(line: 45, column: 5, scope: !10868)
!10898 = !DILocation(line: 45, column: 7, scope: !10868)
!10899 = !DILocation(line: 45, column: 16, scope: !10868)
!10900 = !DILocation(line: 45, column: 28, scope: !10868)
!10901 = !DILocation(line: 45, column: 6, scope: !10868)
!10902 = !DILocation(line: 45, column: 30, scope: !10868)
!10903 = !DILocation(line: 45, column: 32, scope: !10868)
!10904 = !DILocation(line: 45, column: 41, scope: !10868)
!10905 = !DILocation(line: 45, column: 53, scope: !10868)
!10906 = !DILocation(line: 45, column: 31, scope: !10868)
!10907 = !DILocation(line: 45, column: 55, scope: !10868)
!10908 = !DILocation(line: 46, column: 6, scope: !10868)
!10909 = !DILocation(line: 46, column: 15, scope: !10868)
!10910 = !DILocation(line: 44, column: 10, scope: !10868)
!10911 = !DILocation(line: 44, column: 9, scope: !10868)
!10912 = !DILocation(line: 47, column: 7, scope: !10913)
!10913 = distinct !DILexicalBlock(scope: !10868, file: !10869, line: 47, column: 7)
!10914 = !DILocation(line: 47, column: 16, scope: !10913)
!10915 = !DILocation(line: 47, column: 22, scope: !10913)
!10916 = !DILocation(line: 47, column: 7, scope: !10868)
!10917 = !DILocation(line: 48, column: 5, scope: !10913)
!10918 = !DILocation(line: 48, column: 12, scope: !10913)
!10919 = !DILocation(line: 48, column: 19, scope: !10913)
!10920 = !DILocation(line: 49, column: 10, scope: !10868)
!10921 = !DILocation(line: 49, column: 3, scope: !10868)
!10922 = !DILocation(line: 50, column: 1, scope: !10868)
!10923 = distinct !DISubprogram(name: "MagickCompositeOver", scope: !2994, file: !2994, line: 45, type: !10924, scopeLine: 48, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1236)
!10924 = !DISubroutineType(types: !10925)
!10925 = !{null, !2948, !2999, !2948, !2999, !819}
!10926 = !DILocalVariable(name: "p", arg: 1, scope: !10923, file: !2994, line: 45, type: !2948)
!10927 = !DILocation(line: 45, column: 59, scope: !10923)
!10928 = !DILocalVariable(name: "alpha", arg: 2, scope: !10923, file: !2994, line: 46, type: !2999)
!10929 = !DILocation(line: 46, column: 24, scope: !10923)
!10930 = !DILocalVariable(name: "q", arg: 3, scope: !10923, file: !2994, line: 46, type: !2948)
!10931 = !DILocation(line: 46, column: 49, scope: !10923)
!10932 = !DILocalVariable(name: "beta", arg: 4, scope: !10923, file: !2994, line: 46, type: !2999)
!10933 = !DILocation(line: 46, column: 72, scope: !10923)
!10934 = !DILocalVariable(name: "composite", arg: 5, scope: !10923, file: !2994, line: 47, type: !819)
!10935 = !DILocation(line: 47, column: 16, scope: !10923)
!10936 = !DILocalVariable(name: "gamma", scope: !10923, file: !2994, line: 50, type: !728)
!10937 = !DILocation(line: 50, column: 5, scope: !10923)
!10938 = !DILocation(line: 55, column: 7, scope: !10939)
!10939 = distinct !DILexicalBlock(scope: !10923, file: !2994, line: 55, column: 7)
!10940 = !DILocation(line: 55, column: 13, scope: !10939)
!10941 = !DILocation(line: 55, column: 7, scope: !10923)
!10942 = !DILocation(line: 57, column: 11, scope: !10943)
!10943 = distinct !DILexicalBlock(scope: !10944, file: !2994, line: 57, column: 11)
!10944 = distinct !DILexicalBlock(scope: !10939, file: !2994, line: 56, column: 5)
!10945 = !DILocation(line: 57, column: 24, scope: !10943)
!10946 = !DILocation(line: 57, column: 21, scope: !10943)
!10947 = !DILocation(line: 57, column: 11, scope: !10944)
!10948 = !DILocation(line: 58, column: 10, scope: !10943)
!10949 = !DILocation(line: 58, column: 22, scope: !10943)
!10950 = !DILocation(line: 58, column: 21, scope: !10943)
!10951 = !DILocation(line: 58, column: 9, scope: !10943)
!10952 = !DILocation(line: 59, column: 7, scope: !10944)
!10953 = !DILocation(line: 61, column: 39, scope: !10923)
!10954 = !DILocation(line: 61, column: 38, scope: !10923)
!10955 = !DILocation(line: 61, column: 45, scope: !10923)
!10956 = !DILocation(line: 61, column: 44, scope: !10923)
!10957 = !DILocation(line: 61, column: 12, scope: !10923)
!10958 = !DILocation(line: 61, column: 8, scope: !10923)
!10959 = !DILocation(line: 63, column: 7, scope: !10960)
!10960 = distinct !DILexicalBlock(scope: !10923, file: !2994, line: 63, column: 7)
!10961 = !DILocation(line: 63, column: 13, scope: !10960)
!10962 = !DILocation(line: 63, column: 7, scope: !10923)
!10963 = !DILocation(line: 63, column: 26, scope: !10960)
!10964 = !DILocation(line: 63, column: 20, scope: !10960)
!10965 = !DILocation(line: 66, column: 51, scope: !10923)
!10966 = !DILocation(line: 66, column: 50, scope: !10923)
!10967 = !DILocation(line: 66, column: 45, scope: !10923)
!10968 = !DILocation(line: 66, column: 57, scope: !10923)
!10969 = !DILocation(line: 66, column: 22, scope: !10923)
!10970 = !DILocation(line: 66, column: 3, scope: !10923)
!10971 = !DILocation(line: 66, column: 14, scope: !10923)
!10972 = !DILocation(line: 66, column: 21, scope: !10923)
!10973 = !DILocation(line: 67, column: 31, scope: !10923)
!10974 = !DILocation(line: 67, column: 9, scope: !10923)
!10975 = !DILocation(line: 67, column: 8, scope: !10923)
!10976 = !DILocation(line: 68, column: 3, scope: !10923)
!10977 = !DILocation(line: 70, column: 3, scope: !10923)
!10978 = !DILocation(line: 72, column: 3, scope: !10923)
!10979 = !DILocation(line: 84, column: 1, scope: !10923)
!10980 = distinct !DISubprogram(name: "LogPrimitiveInfo", scope: !1, file: !1, line: 4098, type: !10981, scopeLine: 4099, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1236)
!10981 = !DISubroutineType(types: !10982)
!10982 = !{null, !8925}
!10983 = !DILocalVariable(name: "primitive_info", arg: 1, scope: !10980, file: !1, line: 4098, type: !8925)
!10984 = !DILocation(line: 4098, column: 51, scope: !10980)
!10985 = !DILocalVariable(name: "methods", scope: !10980, file: !1, line: 4101, type: !10986)
!10986 = !DICompositeType(tag: DW_TAG_array_type, baseType: !904, size: 384, elements: !10987)
!10987 = !{!10988}
!10988 = !DISubrange(count: 6)
!10989 = !DILocation(line: 4101, column: 6, scope: !10980)
!10990 = !DILocalVariable(name: "p", scope: !10980, file: !1, line: 4112, type: !794)
!10991 = !DILocation(line: 4112, column: 5, scope: !10980)
!10992 = !DILocalVariable(name: "q", scope: !10980, file: !1, line: 4113, type: !794)
!10993 = !DILocation(line: 4113, column: 5, scope: !10980)
!10994 = !DILocalVariable(name: "point", scope: !10980, file: !1, line: 4114, type: !794)
!10995 = !DILocation(line: 4114, column: 5, scope: !10980)
!10996 = !DILocalVariable(name: "i", scope: !10980, file: !1, line: 4117, type: !717)
!10997 = !DILocation(line: 4117, column: 5, scope: !10980)
!10998 = !DILocalVariable(name: "x", scope: !10980, file: !1, line: 4118, type: !717)
!10999 = !DILocation(line: 4118, column: 5, scope: !10980)
!11000 = !DILocalVariable(name: "coordinates", scope: !10980, file: !1, line: 4121, type: !717)
!11001 = !DILocation(line: 4121, column: 5, scope: !10980)
!11002 = !DILocalVariable(name: "y", scope: !10980, file: !1, line: 4122, type: !717)
!11003 = !DILocation(line: 4122, column: 5, scope: !10980)
!11004 = !DILocation(line: 4124, column: 20, scope: !10980)
!11005 = !DILocation(line: 4124, column: 36, scope: !10980)
!11006 = !DILocation(line: 4124, column: 42, scope: !10980)
!11007 = !DILocation(line: 4124, column: 43, scope: !10980)
!11008 = !DILocation(line: 4124, column: 15, scope: !10980)
!11009 = !DILocation(line: 4124, column: 5, scope: !10980)
!11010 = !DILocation(line: 4124, column: 4, scope: !10980)
!11011 = !DILocation(line: 4125, column: 20, scope: !10980)
!11012 = !DILocation(line: 4125, column: 36, scope: !10980)
!11013 = !DILocation(line: 4125, column: 42, scope: !10980)
!11014 = !DILocation(line: 4125, column: 43, scope: !10980)
!11015 = !DILocation(line: 4125, column: 15, scope: !10980)
!11016 = !DILocation(line: 4125, column: 5, scope: !10980)
!11017 = !DILocation(line: 4125, column: 4, scope: !10980)
!11018 = !DILocation(line: 4126, column: 11, scope: !10980)
!11019 = !DILocation(line: 4126, column: 27, scope: !10980)
!11020 = !DILocation(line: 4126, column: 3, scope: !10980)
!11021 = !DILocation(line: 4131, column: 50, scope: !11022)
!11022 = distinct !DILexicalBlock(scope: !11023, file: !1, line: 4129, column: 5)
!11023 = distinct !DILexicalBlock(scope: !10980, file: !1, line: 4127, column: 3)
!11024 = !DILocation(line: 4131, column: 41, scope: !11022)
!11025 = !DILocation(line: 4131, column: 61, scope: !11022)
!11026 = !DILocation(line: 4131, column: 52, scope: !11022)
!11027 = !DILocation(line: 4132, column: 17, scope: !11022)
!11028 = !DILocation(line: 4132, column: 33, scope: !11022)
!11029 = !DILocation(line: 4132, column: 9, scope: !11022)
!11030 = !DILocation(line: 4130, column: 14, scope: !11022)
!11031 = !DILocation(line: 4133, column: 7, scope: !11022)
!11032 = !DILocation(line: 4138, column: 50, scope: !11033)
!11033 = distinct !DILexicalBlock(scope: !11023, file: !1, line: 4136, column: 5)
!11034 = !DILocation(line: 4138, column: 41, scope: !11033)
!11035 = !DILocation(line: 4138, column: 61, scope: !11033)
!11036 = !DILocation(line: 4138, column: 52, scope: !11033)
!11037 = !DILocation(line: 4139, column: 17, scope: !11033)
!11038 = !DILocation(line: 4139, column: 33, scope: !11033)
!11039 = !DILocation(line: 4139, column: 9, scope: !11033)
!11040 = !DILocation(line: 4137, column: 14, scope: !11033)
!11041 = !DILocation(line: 4140, column: 7, scope: !11033)
!11042 = !DILocation(line: 4145, column: 50, scope: !11043)
!11043 = distinct !DILexicalBlock(scope: !11023, file: !1, line: 4143, column: 5)
!11044 = !DILocation(line: 4145, column: 41, scope: !11043)
!11045 = !DILocation(line: 4145, column: 61, scope: !11043)
!11046 = !DILocation(line: 4145, column: 52, scope: !11043)
!11047 = !DILocation(line: 4146, column: 17, scope: !11043)
!11048 = !DILocation(line: 4146, column: 33, scope: !11043)
!11049 = !DILocation(line: 4146, column: 9, scope: !11043)
!11050 = !DILocation(line: 4144, column: 14, scope: !11043)
!11051 = !DILocation(line: 4147, column: 7, scope: !11043)
!11052 = !DILocation(line: 4152, column: 46, scope: !11053)
!11053 = distinct !DILexicalBlock(scope: !11023, file: !1, line: 4150, column: 5)
!11054 = !DILocation(line: 4152, column: 37, scope: !11053)
!11055 = !DILocation(line: 4152, column: 57, scope: !11053)
!11056 = !DILocation(line: 4152, column: 48, scope: !11053)
!11057 = !DILocation(line: 4151, column: 14, scope: !11053)
!11058 = !DILocation(line: 4153, column: 7, scope: !11053)
!11059 = !DILocation(line: 4158, column: 47, scope: !11060)
!11060 = distinct !DILexicalBlock(scope: !11023, file: !1, line: 4156, column: 5)
!11061 = !DILocation(line: 4158, column: 38, scope: !11060)
!11062 = !DILocation(line: 4158, column: 58, scope: !11060)
!11063 = !DILocation(line: 4158, column: 49, scope: !11060)
!11064 = !DILocation(line: 4157, column: 14, scope: !11060)
!11065 = !DILocation(line: 4159, column: 7, scope: !11060)
!11066 = !DILocation(line: 4162, column: 7, scope: !11023)
!11067 = !DILocation(line: 4164, column: 14, scope: !10980)
!11068 = !DILocation(line: 4165, column: 5, scope: !10980)
!11069 = !DILocation(line: 4165, column: 23, scope: !10980)
!11070 = !DILocation(line: 4166, column: 5, scope: !10980)
!11071 = !DILocation(line: 4166, column: 6, scope: !10980)
!11072 = !DILocation(line: 4167, column: 5, scope: !10980)
!11073 = !DILocation(line: 4167, column: 6, scope: !10980)
!11074 = !DILocation(line: 4168, column: 9, scope: !11075)
!11075 = distinct !DILexicalBlock(scope: !10980, file: !1, line: 4168, column: 3)
!11076 = !DILocation(line: 4168, column: 8, scope: !11075)
!11077 = !DILocation(line: 4168, column: 13, scope: !11078)
!11078 = distinct !DILexicalBlock(scope: !11075, file: !1, line: 4168, column: 3)
!11079 = !DILocation(line: 4168, column: 28, scope: !11078)
!11080 = !DILocation(line: 4168, column: 31, scope: !11078)
!11081 = !DILocation(line: 4168, column: 41, scope: !11078)
!11082 = !DILocation(line: 4168, column: 3, scope: !11075)
!11083 = !DILocation(line: 4170, column: 11, scope: !11084)
!11084 = distinct !DILexicalBlock(scope: !11078, file: !1, line: 4169, column: 3)
!11085 = !DILocation(line: 4170, column: 26, scope: !11084)
!11086 = !DILocation(line: 4170, column: 29, scope: !11084)
!11087 = !DILocation(line: 4171, column: 9, scope: !11088)
!11088 = distinct !DILexicalBlock(scope: !11084, file: !1, line: 4171, column: 9)
!11089 = !DILocation(line: 4171, column: 21, scope: !11088)
!11090 = !DILocation(line: 4171, column: 9, scope: !11084)
!11091 = !DILocation(line: 4173, column: 31, scope: !11092)
!11092 = distinct !DILexicalBlock(scope: !11088, file: !1, line: 4172, column: 7)
!11093 = !DILocation(line: 4173, column: 46, scope: !11092)
!11094 = !DILocation(line: 4173, column: 49, scope: !11092)
!11095 = !DILocation(line: 4173, column: 20, scope: !11092)
!11096 = !DILocation(line: 4175, column: 45, scope: !11092)
!11097 = !DILocation(line: 4175, column: 36, scope: !11092)
!11098 = !DILocation(line: 4174, column: 16, scope: !11092)
!11099 = !DILocation(line: 4176, column: 11, scope: !11092)
!11100 = !DILocation(line: 4177, column: 7, scope: !11092)
!11101 = !DILocation(line: 4178, column: 11, scope: !11084)
!11102 = !DILocation(line: 4178, column: 26, scope: !11084)
!11103 = !DILocation(line: 4178, column: 29, scope: !11084)
!11104 = !DILocation(line: 4179, column: 17, scope: !11105)
!11105 = distinct !DILexicalBlock(scope: !11084, file: !1, line: 4179, column: 9)
!11106 = !DILocation(line: 4179, column: 25, scope: !11105)
!11107 = !DILocation(line: 4179, column: 18, scope: !11105)
!11108 = !DILocation(line: 4179, column: 10, scope: !11105)
!11109 = !DILocation(line: 4179, column: 28, scope: !11105)
!11110 = !DILocation(line: 4179, column: 46, scope: !11105)
!11111 = !DILocation(line: 4180, column: 17, scope: !11105)
!11112 = !DILocation(line: 4180, column: 25, scope: !11105)
!11113 = !DILocation(line: 4180, column: 18, scope: !11105)
!11114 = !DILocation(line: 4180, column: 10, scope: !11105)
!11115 = !DILocation(line: 4180, column: 28, scope: !11105)
!11116 = !DILocation(line: 4179, column: 9, scope: !11084)
!11117 = !DILocation(line: 4182, column: 45, scope: !11105)
!11118 = !DILocation(line: 4182, column: 36, scope: !11105)
!11119 = !DILocation(line: 4182, column: 63, scope: !11105)
!11120 = !DILocation(line: 4182, column: 71, scope: !11105)
!11121 = !DILocation(line: 4181, column: 14, scope: !11105)
!11122 = !DILocation(line: 4181, column: 7, scope: !11105)
!11123 = !DILocation(line: 4185, column: 51, scope: !11105)
!11124 = !DILocation(line: 4185, column: 42, scope: !11105)
!11125 = !DILocation(line: 4185, column: 69, scope: !11105)
!11126 = !DILocation(line: 4185, column: 77, scope: !11105)
!11127 = !DILocation(line: 4184, column: 14, scope: !11105)
!11128 = !DILocation(line: 4186, column: 7, scope: !11084)
!11129 = !DILocation(line: 4187, column: 16, scope: !11084)
!11130 = !DILocation(line: 4188, column: 9, scope: !11131)
!11131 = distinct !DILexicalBlock(scope: !11084, file: !1, line: 4188, column: 9)
!11132 = !DILocation(line: 4188, column: 21, scope: !11131)
!11133 = !DILocation(line: 4188, column: 9, scope: !11084)
!11134 = !DILocation(line: 4189, column: 7, scope: !11131)
!11135 = !DILocation(line: 4190, column: 17, scope: !11136)
!11136 = distinct !DILexicalBlock(scope: !11084, file: !1, line: 4190, column: 9)
!11137 = !DILocation(line: 4190, column: 25, scope: !11136)
!11138 = !DILocation(line: 4190, column: 18, scope: !11136)
!11139 = !DILocation(line: 4190, column: 10, scope: !11136)
!11140 = !DILocation(line: 4190, column: 28, scope: !11136)
!11141 = !DILocation(line: 4190, column: 46, scope: !11136)
!11142 = !DILocation(line: 4191, column: 17, scope: !11136)
!11143 = !DILocation(line: 4191, column: 25, scope: !11136)
!11144 = !DILocation(line: 4191, column: 18, scope: !11136)
!11145 = !DILocation(line: 4191, column: 10, scope: !11136)
!11146 = !DILocation(line: 4191, column: 28, scope: !11136)
!11147 = !DILocation(line: 4190, column: 9, scope: !11084)
!11148 = !DILocation(line: 4193, column: 18, scope: !11136)
!11149 = !DILocation(line: 4193, column: 9, scope: !11136)
!11150 = !DILocation(line: 4192, column: 14, scope: !11136)
!11151 = !DILocation(line: 4192, column: 7, scope: !11136)
!11152 = !DILocation(line: 4196, column: 18, scope: !11136)
!11153 = !DILocation(line: 4196, column: 9, scope: !11136)
!11154 = !DILocation(line: 4195, column: 14, scope: !11136)
!11155 = !DILocation(line: 4197, column: 3, scope: !11084)
!11156 = !DILocation(line: 4168, column: 65, scope: !11078)
!11157 = !DILocation(line: 4168, column: 3, scope: !11078)
!11158 = distinct !{!11158, !11082, !11159}
!11159 = !DILocation(line: 4197, column: 3, scope: !11075)
!11160 = !DILocation(line: 4198, column: 1, scope: !10980)
!11161 = distinct !DISubprogram(name: "DrawPolygonPrimitive", scope: !1, file: !1, line: 3849, type: !8923, scopeLine: 3851, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1236)
!11162 = !DILocalVariable(name: "image", arg: 1, scope: !11161, file: !1, line: 3849, type: !801)
!11163 = !DILocation(line: 3849, column: 54, scope: !11161)
!11164 = !DILocalVariable(name: "draw_info", arg: 2, scope: !11161, file: !1, line: 3850, type: !1525)
!11165 = !DILocation(line: 3850, column: 19, scope: !11161)
!11166 = !DILocalVariable(name: "primitive_info", arg: 3, scope: !11161, file: !1, line: 3850, type: !8925)
!11167 = !DILocation(line: 3850, column: 50, scope: !11161)
!11168 = !DILocalVariable(name: "image_view", scope: !11161, file: !1, line: 3853, type: !2158)
!11169 = !DILocation(line: 3853, column: 6, scope: !11161)
!11170 = !DILocalVariable(name: "mid", scope: !11161, file: !1, line: 3856, type: !728)
!11171 = !DILocation(line: 3856, column: 5, scope: !11161)
!11172 = !DILocalVariable(name: "exception", scope: !11161, file: !1, line: 3859, type: !1266)
!11173 = !DILocation(line: 3859, column: 6, scope: !11161)
!11174 = !DILocalVariable(name: "fill", scope: !11161, file: !1, line: 3862, type: !777)
!11175 = !DILocation(line: 3862, column: 5, scope: !11161)
!11176 = !DILocalVariable(name: "status", scope: !11161, file: !1, line: 3863, type: !777)
!11177 = !DILocation(line: 3863, column: 5, scope: !11161)
!11178 = !DILocalVariable(name: "polygon_info", scope: !11161, file: !1, line: 3866, type: !11179)
!11179 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1201)
!11180 = !DILocation(line: 3866, column: 16, scope: !11161)
!11181 = !DILocalVariable(name: "p", scope: !11161, file: !1, line: 3869, type: !1207)
!11182 = !DILocation(line: 3869, column: 6, scope: !11161)
!11183 = !DILocalVariable(name: "i", scope: !11161, file: !1, line: 3872, type: !717)
!11184 = !DILocation(line: 3872, column: 5, scope: !11161)
!11185 = !DILocalVariable(name: "bounds", scope: !11161, file: !1, line: 3875, type: !756)
!11186 = !DILocation(line: 3875, column: 5, scope: !11161)
!11187 = !DILocalVariable(name: "start", scope: !11161, file: !1, line: 3878, type: !717)
!11188 = !DILocation(line: 3878, column: 5, scope: !11161)
!11189 = !DILocalVariable(name: "stop", scope: !11161, file: !1, line: 3879, type: !717)
!11190 = !DILocation(line: 3879, column: 5, scope: !11161)
!11191 = !DILocalVariable(name: "y", scope: !11161, file: !1, line: 3880, type: !717)
!11192 = !DILocation(line: 3880, column: 5, scope: !11161)
!11193 = !DILocation(line: 3887, column: 7, scope: !11194)
!11194 = distinct !DILexicalBlock(scope: !11161, file: !1, line: 3887, column: 7)
!11195 = !DILocation(line: 3887, column: 14, scope: !11194)
!11196 = !DILocation(line: 3887, column: 20, scope: !11194)
!11197 = !DILocation(line: 3887, column: 7, scope: !11161)
!11198 = !DILocation(line: 3888, column: 61, scope: !11194)
!11199 = !DILocation(line: 3888, column: 68, scope: !11194)
!11200 = !DILocation(line: 3888, column: 12, scope: !11194)
!11201 = !DILocation(line: 3888, column: 5, scope: !11194)
!11202 = !DILocation(line: 3892, column: 7, scope: !11203)
!11203 = distinct !DILexicalBlock(scope: !11161, file: !1, line: 3892, column: 7)
!11204 = !DILocation(line: 3892, column: 23, scope: !11203)
!11205 = !DILocation(line: 3892, column: 35, scope: !11203)
!11206 = !DILocation(line: 3892, column: 7, scope: !11161)
!11207 = !DILocation(line: 3893, column: 5, scope: !11203)
!11208 = !DILocation(line: 3894, column: 40, scope: !11161)
!11209 = !DILocation(line: 3894, column: 50, scope: !11161)
!11210 = !DILocation(line: 3894, column: 16, scope: !11161)
!11211 = !DILocation(line: 3894, column: 15, scope: !11161)
!11212 = !DILocation(line: 3895, column: 7, scope: !11213)
!11213 = distinct !DILexicalBlock(scope: !11161, file: !1, line: 3895, column: 7)
!11214 = !DILocation(line: 3895, column: 20, scope: !11213)
!11215 = !DILocation(line: 3895, column: 7, scope: !11161)
!11216 = !DILocation(line: 3896, column: 5, scope: !11213)
!11217 = !DILocation(line: 3901, column: 7, scope: !11218)
!11218 = distinct !DILexicalBlock(scope: !11161, file: !1, line: 3901, column: 7)
!11219 = !DILocation(line: 3901, column: 14, scope: !11218)
!11220 = !DILocation(line: 3901, column: 20, scope: !11218)
!11221 = !DILocation(line: 3901, column: 7, scope: !11161)
!11222 = !DILocation(line: 3902, column: 12, scope: !11218)
!11223 = !DILocation(line: 3902, column: 5, scope: !11218)
!11224 = !DILocation(line: 3903, column: 9, scope: !11161)
!11225 = !DILocation(line: 3903, column: 25, scope: !11161)
!11226 = !DILocation(line: 3903, column: 32, scope: !11161)
!11227 = !DILocation(line: 3903, column: 55, scope: !11161)
!11228 = !DILocation(line: 3904, column: 6, scope: !11161)
!11229 = !DILocation(line: 3904, column: 22, scope: !11161)
!11230 = !DILocation(line: 3904, column: 29, scope: !11161)
!11231 = !DILocation(line: 3903, column: 8, scope: !11161)
!11232 = !DILocation(line: 3903, column: 7, scope: !11161)
!11233 = !DILocation(line: 3905, column: 21, scope: !11161)
!11234 = !DILocation(line: 3905, column: 32, scope: !11161)
!11235 = !DILocation(line: 3905, column: 7, scope: !11161)
!11236 = !DILocation(line: 3905, column: 40, scope: !11161)
!11237 = !DILocation(line: 3905, column: 51, scope: !11161)
!11238 = !DILocation(line: 3905, column: 39, scope: !11161)
!11239 = !DILocation(line: 3905, column: 63, scope: !11161)
!11240 = !DILocation(line: 3905, column: 6, scope: !11161)
!11241 = !DILocation(line: 3906, column: 10, scope: !11161)
!11242 = !DILocation(line: 3906, column: 27, scope: !11161)
!11243 = !DILocation(line: 3906, column: 36, scope: !11161)
!11244 = !DILocation(line: 3907, column: 9, scope: !11245)
!11245 = distinct !DILexicalBlock(scope: !11161, file: !1, line: 3907, column: 3)
!11246 = !DILocation(line: 3907, column: 8, scope: !11245)
!11247 = !DILocation(line: 3907, column: 13, scope: !11248)
!11248 = distinct !DILexicalBlock(scope: !11245, file: !1, line: 3907, column: 3)
!11249 = !DILocation(line: 3907, column: 27, scope: !11248)
!11250 = !DILocation(line: 3907, column: 44, scope: !11248)
!11251 = !DILocation(line: 3907, column: 15, scope: !11248)
!11252 = !DILocation(line: 3907, column: 3, scope: !11245)
!11253 = !DILocation(line: 3909, column: 7, scope: !11254)
!11254 = distinct !DILexicalBlock(scope: !11248, file: !1, line: 3908, column: 3)
!11255 = !DILocation(line: 3909, column: 24, scope: !11254)
!11256 = !DILocation(line: 3909, column: 30, scope: !11254)
!11257 = !DILocation(line: 3909, column: 29, scope: !11254)
!11258 = !DILocation(line: 3909, column: 6, scope: !11254)
!11259 = !DILocation(line: 3910, column: 9, scope: !11260)
!11260 = distinct !DILexicalBlock(scope: !11254, file: !1, line: 3910, column: 9)
!11261 = !DILocation(line: 3910, column: 12, scope: !11260)
!11262 = !DILocation(line: 3910, column: 19, scope: !11260)
!11263 = !DILocation(line: 3910, column: 31, scope: !11260)
!11264 = !DILocation(line: 3910, column: 22, scope: !11260)
!11265 = !DILocation(line: 3910, column: 9, scope: !11254)
!11266 = !DILocation(line: 3911, column: 17, scope: !11260)
!11267 = !DILocation(line: 3911, column: 20, scope: !11260)
!11268 = !DILocation(line: 3911, column: 27, scope: !11260)
!11269 = !DILocation(line: 3911, column: 14, scope: !11260)
!11270 = !DILocation(line: 3911, column: 16, scope: !11260)
!11271 = !DILocation(line: 3911, column: 7, scope: !11260)
!11272 = !DILocation(line: 3912, column: 9, scope: !11273)
!11273 = distinct !DILexicalBlock(scope: !11254, file: !1, line: 3912, column: 9)
!11274 = !DILocation(line: 3912, column: 12, scope: !11273)
!11275 = !DILocation(line: 3912, column: 19, scope: !11273)
!11276 = !DILocation(line: 3912, column: 31, scope: !11273)
!11277 = !DILocation(line: 3912, column: 22, scope: !11273)
!11278 = !DILocation(line: 3912, column: 9, scope: !11254)
!11279 = !DILocation(line: 3913, column: 17, scope: !11273)
!11280 = !DILocation(line: 3913, column: 20, scope: !11273)
!11281 = !DILocation(line: 3913, column: 27, scope: !11273)
!11282 = !DILocation(line: 3913, column: 14, scope: !11273)
!11283 = !DILocation(line: 3913, column: 16, scope: !11273)
!11284 = !DILocation(line: 3913, column: 7, scope: !11273)
!11285 = !DILocation(line: 3914, column: 9, scope: !11286)
!11286 = distinct !DILexicalBlock(scope: !11254, file: !1, line: 3914, column: 9)
!11287 = !DILocation(line: 3914, column: 12, scope: !11286)
!11288 = !DILocation(line: 3914, column: 19, scope: !11286)
!11289 = !DILocation(line: 3914, column: 31, scope: !11286)
!11290 = !DILocation(line: 3914, column: 22, scope: !11286)
!11291 = !DILocation(line: 3914, column: 9, scope: !11254)
!11292 = !DILocation(line: 3915, column: 17, scope: !11286)
!11293 = !DILocation(line: 3915, column: 20, scope: !11286)
!11294 = !DILocation(line: 3915, column: 27, scope: !11286)
!11295 = !DILocation(line: 3915, column: 14, scope: !11286)
!11296 = !DILocation(line: 3915, column: 16, scope: !11286)
!11297 = !DILocation(line: 3915, column: 7, scope: !11286)
!11298 = !DILocation(line: 3916, column: 9, scope: !11299)
!11299 = distinct !DILexicalBlock(scope: !11254, file: !1, line: 3916, column: 9)
!11300 = !DILocation(line: 3916, column: 12, scope: !11299)
!11301 = !DILocation(line: 3916, column: 19, scope: !11299)
!11302 = !DILocation(line: 3916, column: 31, scope: !11299)
!11303 = !DILocation(line: 3916, column: 22, scope: !11299)
!11304 = !DILocation(line: 3916, column: 9, scope: !11254)
!11305 = !DILocation(line: 3917, column: 17, scope: !11299)
!11306 = !DILocation(line: 3917, column: 20, scope: !11299)
!11307 = !DILocation(line: 3917, column: 27, scope: !11299)
!11308 = !DILocation(line: 3917, column: 14, scope: !11299)
!11309 = !DILocation(line: 3917, column: 16, scope: !11299)
!11310 = !DILocation(line: 3917, column: 7, scope: !11299)
!11311 = !DILocation(line: 3918, column: 3, scope: !11254)
!11312 = !DILocation(line: 3907, column: 59, scope: !11248)
!11313 = !DILocation(line: 3907, column: 3, scope: !11248)
!11314 = distinct !{!11314, !11252, !11315}
!11315 = !DILocation(line: 3918, column: 3, scope: !11245)
!11316 = !DILocation(line: 3919, column: 15, scope: !11161)
!11317 = !DILocation(line: 3919, column: 18, scope: !11161)
!11318 = !DILocation(line: 3919, column: 10, scope: !11161)
!11319 = !DILocation(line: 3919, column: 12, scope: !11161)
!11320 = !DILocation(line: 3920, column: 20, scope: !11161)
!11321 = !DILocation(line: 3920, column: 23, scope: !11161)
!11322 = !DILocation(line: 3920, column: 13, scope: !11161)
!11323 = !DILocation(line: 3920, column: 58, scope: !11161)
!11324 = !DILocation(line: 3920, column: 60, scope: !11161)
!11325 = !DILocation(line: 3920, column: 46, scope: !11161)
!11326 = !DILocation(line: 3920, column: 37, scope: !11161)
!11327 = !DILocation(line: 3921, column: 5, scope: !11161)
!11328 = !DILocation(line: 3921, column: 12, scope: !11161)
!11329 = !DILocation(line: 3920, column: 66, scope: !11161)
!11330 = !DILocation(line: 3921, column: 31, scope: !11161)
!11331 = !DILocation(line: 3921, column: 38, scope: !11161)
!11332 = !DILocation(line: 3921, column: 22, scope: !11161)
!11333 = !DILocation(line: 3921, column: 45, scope: !11161)
!11334 = !DILocation(line: 3921, column: 57, scope: !11161)
!11335 = !DILocation(line: 3920, column: 10, scope: !11161)
!11336 = !DILocation(line: 3920, column: 12, scope: !11161)
!11337 = !DILocation(line: 3922, column: 15, scope: !11161)
!11338 = !DILocation(line: 3922, column: 18, scope: !11161)
!11339 = !DILocation(line: 3922, column: 10, scope: !11161)
!11340 = !DILocation(line: 3922, column: 12, scope: !11161)
!11341 = !DILocation(line: 3923, column: 20, scope: !11161)
!11342 = !DILocation(line: 3923, column: 23, scope: !11161)
!11343 = !DILocation(line: 3923, column: 13, scope: !11161)
!11344 = !DILocation(line: 3923, column: 58, scope: !11161)
!11345 = !DILocation(line: 3923, column: 60, scope: !11161)
!11346 = !DILocation(line: 3923, column: 46, scope: !11161)
!11347 = !DILocation(line: 3923, column: 37, scope: !11161)
!11348 = !DILocation(line: 3924, column: 5, scope: !11161)
!11349 = !DILocation(line: 3924, column: 12, scope: !11161)
!11350 = !DILocation(line: 3923, column: 66, scope: !11161)
!11351 = !DILocation(line: 3924, column: 28, scope: !11161)
!11352 = !DILocation(line: 3924, column: 35, scope: !11161)
!11353 = !DILocation(line: 3924, column: 19, scope: !11161)
!11354 = !DILocation(line: 3924, column: 39, scope: !11161)
!11355 = !DILocation(line: 3924, column: 51, scope: !11161)
!11356 = !DILocation(line: 3923, column: 10, scope: !11161)
!11357 = !DILocation(line: 3923, column: 12, scope: !11161)
!11358 = !DILocation(line: 3925, column: 15, scope: !11161)
!11359 = !DILocation(line: 3925, column: 18, scope: !11161)
!11360 = !DILocation(line: 3925, column: 10, scope: !11161)
!11361 = !DILocation(line: 3925, column: 12, scope: !11161)
!11362 = !DILocation(line: 3926, column: 20, scope: !11161)
!11363 = !DILocation(line: 3926, column: 23, scope: !11161)
!11364 = !DILocation(line: 3926, column: 13, scope: !11161)
!11365 = !DILocation(line: 3926, column: 59, scope: !11161)
!11366 = !DILocation(line: 3926, column: 61, scope: !11161)
!11367 = !DILocation(line: 3926, column: 46, scope: !11161)
!11368 = !DILocation(line: 3926, column: 37, scope: !11161)
!11369 = !DILocation(line: 3927, column: 5, scope: !11161)
!11370 = !DILocation(line: 3927, column: 12, scope: !11161)
!11371 = !DILocation(line: 3926, column: 67, scope: !11161)
!11372 = !DILocation(line: 3927, column: 31, scope: !11161)
!11373 = !DILocation(line: 3927, column: 38, scope: !11161)
!11374 = !DILocation(line: 3927, column: 22, scope: !11161)
!11375 = !DILocation(line: 3927, column: 45, scope: !11161)
!11376 = !DILocation(line: 3927, column: 57, scope: !11161)
!11377 = !DILocation(line: 3926, column: 10, scope: !11161)
!11378 = !DILocation(line: 3926, column: 12, scope: !11161)
!11379 = !DILocation(line: 3928, column: 15, scope: !11161)
!11380 = !DILocation(line: 3928, column: 18, scope: !11161)
!11381 = !DILocation(line: 3928, column: 10, scope: !11161)
!11382 = !DILocation(line: 3928, column: 12, scope: !11161)
!11383 = !DILocation(line: 3929, column: 20, scope: !11161)
!11384 = !DILocation(line: 3929, column: 23, scope: !11161)
!11385 = !DILocation(line: 3929, column: 13, scope: !11161)
!11386 = !DILocation(line: 3929, column: 59, scope: !11161)
!11387 = !DILocation(line: 3929, column: 61, scope: !11161)
!11388 = !DILocation(line: 3929, column: 46, scope: !11161)
!11389 = !DILocation(line: 3929, column: 37, scope: !11161)
!11390 = !DILocation(line: 3930, column: 5, scope: !11161)
!11391 = !DILocation(line: 3930, column: 12, scope: !11161)
!11392 = !DILocation(line: 3929, column: 67, scope: !11161)
!11393 = !DILocation(line: 3930, column: 28, scope: !11161)
!11394 = !DILocation(line: 3930, column: 35, scope: !11161)
!11395 = !DILocation(line: 3930, column: 19, scope: !11161)
!11396 = !DILocation(line: 3930, column: 39, scope: !11161)
!11397 = !DILocation(line: 3930, column: 51, scope: !11161)
!11398 = !DILocation(line: 3929, column: 10, scope: !11161)
!11399 = !DILocation(line: 3929, column: 12, scope: !11161)
!11400 = !DILocation(line: 3931, column: 9, scope: !11161)
!11401 = !DILocation(line: 3932, column: 15, scope: !11161)
!11402 = !DILocation(line: 3932, column: 22, scope: !11161)
!11403 = !DILocation(line: 3932, column: 12, scope: !11161)
!11404 = !DILocation(line: 3933, column: 40, scope: !11161)
!11405 = !DILocation(line: 3933, column: 46, scope: !11161)
!11406 = !DILocation(line: 3933, column: 14, scope: !11161)
!11407 = !DILocation(line: 3933, column: 13, scope: !11161)
!11408 = !DILocation(line: 3934, column: 7, scope: !11409)
!11409 = distinct !DILexicalBlock(scope: !11161, file: !1, line: 3934, column: 7)
!11410 = !DILocation(line: 3934, column: 23, scope: !11409)
!11411 = !DILocation(line: 3934, column: 35, scope: !11409)
!11412 = !DILocation(line: 3934, column: 7, scope: !11161)
!11413 = !DILocation(line: 3939, column: 35, scope: !11414)
!11414 = distinct !DILexicalBlock(scope: !11409, file: !1, line: 3935, column: 5)
!11415 = !DILocation(line: 3939, column: 37, scope: !11414)
!11416 = !DILocation(line: 3939, column: 23, scope: !11414)
!11417 = !DILocation(line: 3939, column: 13, scope: !11414)
!11418 = !DILocation(line: 3939, column: 12, scope: !11414)
!11419 = !DILocation(line: 3940, column: 35, scope: !11414)
!11420 = !DILocation(line: 3940, column: 37, scope: !11414)
!11421 = !DILocation(line: 3940, column: 22, scope: !11414)
!11422 = !DILocation(line: 3940, column: 12, scope: !11414)
!11423 = !DILocation(line: 3940, column: 11, scope: !11414)
!11424 = !DILocation(line: 3945, column: 14, scope: !11425)
!11425 = distinct !DILexicalBlock(scope: !11414, file: !1, line: 3945, column: 7)
!11426 = !DILocation(line: 3945, column: 13, scope: !11425)
!11427 = !DILocation(line: 3945, column: 12, scope: !11425)
!11428 = !DILocation(line: 3945, column: 21, scope: !11429)
!11429 = distinct !DILexicalBlock(scope: !11425, file: !1, line: 3945, column: 7)
!11430 = !DILocation(line: 3945, column: 26, scope: !11429)
!11431 = !DILocation(line: 3945, column: 23, scope: !11429)
!11432 = !DILocation(line: 3945, column: 7, scope: !11425)
!11433 = !DILocalVariable(name: "sync", scope: !11434, file: !1, line: 3948, type: !777)
!11434 = distinct !DILexicalBlock(scope: !11429, file: !1, line: 3946, column: 7)
!11435 = !DILocation(line: 3948, column: 11, scope: !11434)
!11436 = !DILocalVariable(name: "q", scope: !11434, file: !1, line: 3951, type: !2432)
!11437 = !DILocation(line: 3951, column: 21, scope: !11434)
!11438 = !DILocalVariable(name: "x", scope: !11434, file: !1, line: 3954, type: !717)
!11439 = !DILocation(line: 3954, column: 11, scope: !11434)
!11440 = !DILocalVariable(name: "start", scope: !11434, file: !1, line: 3957, type: !717)
!11441 = !DILocation(line: 3957, column: 11, scope: !11434)
!11442 = !DILocalVariable(name: "stop", scope: !11434, file: !1, line: 3958, type: !717)
!11443 = !DILocation(line: 3958, column: 11, scope: !11434)
!11444 = !DILocation(line: 3960, column: 13, scope: !11445)
!11445 = distinct !DILexicalBlock(scope: !11434, file: !1, line: 3960, column: 13)
!11446 = !DILocation(line: 3960, column: 20, scope: !11445)
!11447 = !DILocation(line: 3960, column: 13, scope: !11434)
!11448 = !DILocation(line: 3961, column: 11, scope: !11445)
!11449 = !DILocation(line: 3962, column: 37, scope: !11434)
!11450 = !DILocation(line: 3962, column: 39, scope: !11434)
!11451 = !DILocation(line: 3962, column: 25, scope: !11434)
!11452 = !DILocation(line: 3962, column: 15, scope: !11434)
!11453 = !DILocation(line: 3962, column: 14, scope: !11434)
!11454 = !DILocation(line: 3963, column: 37, scope: !11434)
!11455 = !DILocation(line: 3963, column: 39, scope: !11434)
!11456 = !DILocation(line: 3963, column: 24, scope: !11434)
!11457 = !DILocation(line: 3963, column: 14, scope: !11434)
!11458 = !DILocation(line: 3963, column: 13, scope: !11434)
!11459 = !DILocation(line: 3964, column: 11, scope: !11434)
!11460 = !DILocation(line: 3964, column: 10, scope: !11434)
!11461 = !DILocation(line: 3965, column: 39, scope: !11434)
!11462 = !DILocation(line: 3965, column: 50, scope: !11434)
!11463 = !DILocation(line: 3965, column: 52, scope: !11434)
!11464 = !DILocation(line: 3965, column: 64, scope: !11434)
!11465 = !DILocation(line: 3965, column: 69, scope: !11434)
!11466 = !DILocation(line: 3965, column: 68, scope: !11434)
!11467 = !DILocation(line: 3965, column: 70, scope: !11434)
!11468 = !DILocation(line: 3966, column: 11, scope: !11434)
!11469 = !DILocation(line: 3965, column: 11, scope: !11434)
!11470 = !DILocation(line: 3965, column: 10, scope: !11434)
!11471 = !DILocation(line: 3967, column: 13, scope: !11472)
!11472 = distinct !DILexicalBlock(scope: !11434, file: !1, line: 3967, column: 13)
!11473 = !DILocation(line: 3967, column: 15, scope: !11472)
!11474 = !DILocation(line: 3967, column: 13, scope: !11434)
!11475 = !DILocation(line: 3969, column: 19, scope: !11476)
!11476 = distinct !DILexicalBlock(scope: !11472, file: !1, line: 3968, column: 11)
!11477 = !DILocation(line: 3970, column: 13, scope: !11476)
!11478 = !DILocation(line: 3972, column: 9, scope: !11434)
!11479 = !DILocation(line: 3972, column: 17, scope: !11480)
!11480 = distinct !DILexicalBlock(scope: !11481, file: !1, line: 3972, column: 9)
!11481 = distinct !DILexicalBlock(scope: !11434, file: !1, line: 3972, column: 9)
!11482 = !DILocation(line: 3972, column: 22, scope: !11480)
!11483 = !DILocation(line: 3972, column: 19, scope: !11480)
!11484 = !DILocation(line: 3972, column: 9, scope: !11481)
!11485 = !DILocation(line: 3974, column: 16, scope: !11486)
!11486 = distinct !DILexicalBlock(scope: !11487, file: !1, line: 3974, column: 15)
!11487 = distinct !DILexicalBlock(scope: !11480, file: !1, line: 3973, column: 9)
!11488 = !DILocation(line: 3974, column: 36, scope: !11486)
!11489 = !DILocation(line: 3974, column: 52, scope: !11486)
!11490 = !DILocation(line: 3974, column: 58, scope: !11486)
!11491 = !DILocation(line: 3974, column: 59, scope: !11486)
!11492 = !DILocation(line: 3974, column: 31, scope: !11486)
!11493 = !DILocation(line: 3974, column: 21, scope: !11486)
!11494 = !DILocation(line: 3974, column: 18, scope: !11486)
!11495 = !DILocation(line: 3974, column: 66, scope: !11486)
!11496 = !DILocation(line: 3975, column: 16, scope: !11486)
!11497 = !DILocation(line: 3975, column: 36, scope: !11486)
!11498 = !DILocation(line: 3975, column: 52, scope: !11486)
!11499 = !DILocation(line: 3975, column: 58, scope: !11486)
!11500 = !DILocation(line: 3975, column: 59, scope: !11486)
!11501 = !DILocation(line: 3975, column: 31, scope: !11486)
!11502 = !DILocation(line: 3975, column: 21, scope: !11486)
!11503 = !DILocation(line: 3975, column: 18, scope: !11486)
!11504 = !DILocation(line: 3974, column: 15, scope: !11487)
!11505 = !DILocation(line: 3976, column: 35, scope: !11486)
!11506 = !DILocation(line: 3976, column: 45, scope: !11486)
!11507 = !DILocation(line: 3976, column: 47, scope: !11486)
!11508 = !DILocation(line: 3976, column: 49, scope: !11486)
!11509 = !DILocation(line: 3976, column: 20, scope: !11486)
!11510 = !DILocation(line: 3976, column: 13, scope: !11486)
!11511 = !DILocation(line: 3977, column: 12, scope: !11487)
!11512 = !DILocation(line: 3978, column: 9, scope: !11487)
!11513 = !DILocation(line: 3972, column: 29, scope: !11480)
!11514 = !DILocation(line: 3972, column: 9, scope: !11480)
!11515 = distinct !{!11515, !11484, !11516}
!11516 = !DILocation(line: 3978, column: 9, scope: !11481)
!11517 = !DILocation(line: 3979, column: 43, scope: !11434)
!11518 = !DILocation(line: 3979, column: 54, scope: !11434)
!11519 = !DILocation(line: 3979, column: 14, scope: !11434)
!11520 = !DILocation(line: 3979, column: 13, scope: !11434)
!11521 = !DILocation(line: 3980, column: 13, scope: !11522)
!11522 = distinct !DILexicalBlock(scope: !11434, file: !1, line: 3980, column: 13)
!11523 = !DILocation(line: 3980, column: 18, scope: !11522)
!11524 = !DILocation(line: 3980, column: 13, scope: !11434)
!11525 = !DILocation(line: 3981, column: 17, scope: !11522)
!11526 = !DILocation(line: 3981, column: 11, scope: !11522)
!11527 = !DILocation(line: 3982, column: 7, scope: !11434)
!11528 = !DILocation(line: 3945, column: 33, scope: !11429)
!11529 = !DILocation(line: 3945, column: 7, scope: !11429)
!11530 = distinct !{!11530, !11432, !11531}
!11531 = !DILocation(line: 3982, column: 7, scope: !11425)
!11532 = !DILocation(line: 3983, column: 35, scope: !11414)
!11533 = !DILocation(line: 3983, column: 18, scope: !11414)
!11534 = !DILocation(line: 3983, column: 17, scope: !11414)
!11535 = !DILocation(line: 3984, column: 44, scope: !11414)
!11536 = !DILocation(line: 3984, column: 20, scope: !11414)
!11537 = !DILocation(line: 3984, column: 19, scope: !11414)
!11538 = !DILocation(line: 3985, column: 11, scope: !11539)
!11539 = distinct !DILexicalBlock(scope: !11414, file: !1, line: 3985, column: 11)
!11540 = !DILocation(line: 3985, column: 18, scope: !11539)
!11541 = !DILocation(line: 3985, column: 24, scope: !11539)
!11542 = !DILocation(line: 3985, column: 11, scope: !11414)
!11543 = !DILocation(line: 3986, column: 16, scope: !11539)
!11544 = !DILocation(line: 3986, column: 9, scope: !11539)
!11545 = !DILocation(line: 3988, column: 14, scope: !11414)
!11546 = !DILocation(line: 3988, column: 7, scope: !11414)
!11547 = !DILocation(line: 3993, column: 7, scope: !11548)
!11548 = distinct !DILexicalBlock(scope: !11161, file: !1, line: 3993, column: 7)
!11549 = !DILocation(line: 3993, column: 14, scope: !11548)
!11550 = !DILocation(line: 3993, column: 20, scope: !11548)
!11551 = !DILocation(line: 3993, column: 7, scope: !11161)
!11552 = !DILocation(line: 3994, column: 33, scope: !11548)
!11553 = !DILocation(line: 3994, column: 12, scope: !11548)
!11554 = !DILocation(line: 3994, column: 5, scope: !11548)
!11555 = !DILocation(line: 3995, column: 31, scope: !11161)
!11556 = !DILocation(line: 3995, column: 33, scope: !11161)
!11557 = !DILocation(line: 3995, column: 19, scope: !11161)
!11558 = !DILocation(line: 3995, column: 9, scope: !11161)
!11559 = !DILocation(line: 3995, column: 8, scope: !11161)
!11560 = !DILocation(line: 3996, column: 31, scope: !11161)
!11561 = !DILocation(line: 3996, column: 33, scope: !11161)
!11562 = !DILocation(line: 3996, column: 18, scope: !11161)
!11563 = !DILocation(line: 3996, column: 8, scope: !11161)
!11564 = !DILocation(line: 3996, column: 7, scope: !11161)
!11565 = !DILocation(line: 4001, column: 10, scope: !11566)
!11566 = distinct !DILexicalBlock(scope: !11161, file: !1, line: 4001, column: 3)
!11567 = !DILocation(line: 4001, column: 9, scope: !11566)
!11568 = !DILocation(line: 4001, column: 8, scope: !11566)
!11569 = !DILocation(line: 4001, column: 17, scope: !11570)
!11570 = distinct !DILexicalBlock(scope: !11566, file: !1, line: 4001, column: 3)
!11571 = !DILocation(line: 4001, column: 22, scope: !11570)
!11572 = !DILocation(line: 4001, column: 19, scope: !11570)
!11573 = !DILocation(line: 4001, column: 3, scope: !11566)
!11574 = !DILocalVariable(name: "id", scope: !11575, file: !1, line: 4004, type: !11576)
!11575 = distinct !DILexicalBlock(scope: !11570, file: !1, line: 4002, column: 3)
!11576 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !575)
!11577 = !DILocation(line: 4004, column: 7, scope: !11575)
!11578 = !DILocation(line: 4004, column: 12, scope: !11575)
!11579 = !DILocalVariable(name: "fill_opacity", scope: !11575, file: !1, line: 4007, type: !728)
!11580 = !DILocation(line: 4007, column: 7, scope: !11575)
!11581 = !DILocalVariable(name: "stroke_opacity", scope: !11575, file: !1, line: 4008, type: !728)
!11582 = !DILocation(line: 4008, column: 7, scope: !11575)
!11583 = !DILocalVariable(name: "fill_color", scope: !11575, file: !1, line: 4011, type: !737)
!11584 = !DILocation(line: 4011, column: 7, scope: !11575)
!11585 = !DILocalVariable(name: "stroke_color", scope: !11575, file: !1, line: 4012, type: !737)
!11586 = !DILocation(line: 4012, column: 7, scope: !11575)
!11587 = !DILocalVariable(name: "q", scope: !11575, file: !1, line: 4015, type: !2432)
!11588 = !DILocation(line: 4015, column: 17, scope: !11575)
!11589 = !DILocalVariable(name: "x", scope: !11575, file: !1, line: 4018, type: !717)
!11590 = !DILocation(line: 4018, column: 7, scope: !11575)
!11591 = !DILocalVariable(name: "start", scope: !11575, file: !1, line: 4021, type: !717)
!11592 = !DILocation(line: 4021, column: 7, scope: !11575)
!11593 = !DILocalVariable(name: "stop", scope: !11575, file: !1, line: 4022, type: !717)
!11594 = !DILocation(line: 4022, column: 7, scope: !11575)
!11595 = !DILocation(line: 4024, column: 9, scope: !11596)
!11596 = distinct !DILexicalBlock(scope: !11575, file: !1, line: 4024, column: 9)
!11597 = !DILocation(line: 4024, column: 16, scope: !11596)
!11598 = !DILocation(line: 4024, column: 9, scope: !11575)
!11599 = !DILocation(line: 4025, column: 7, scope: !11596)
!11600 = !DILocation(line: 4026, column: 33, scope: !11575)
!11601 = !DILocation(line: 4026, column: 35, scope: !11575)
!11602 = !DILocation(line: 4026, column: 21, scope: !11575)
!11603 = !DILocation(line: 4026, column: 11, scope: !11575)
!11604 = !DILocation(line: 4026, column: 10, scope: !11575)
!11605 = !DILocation(line: 4027, column: 33, scope: !11575)
!11606 = !DILocation(line: 4027, column: 35, scope: !11575)
!11607 = !DILocation(line: 4027, column: 20, scope: !11575)
!11608 = !DILocation(line: 4027, column: 10, scope: !11575)
!11609 = !DILocation(line: 4027, column: 9, scope: !11575)
!11610 = !DILocation(line: 4028, column: 35, scope: !11575)
!11611 = !DILocation(line: 4028, column: 46, scope: !11575)
!11612 = !DILocation(line: 4028, column: 52, scope: !11575)
!11613 = !DILocation(line: 4028, column: 64, scope: !11575)
!11614 = !DILocation(line: 4028, column: 69, scope: !11575)
!11615 = !DILocation(line: 4028, column: 68, scope: !11575)
!11616 = !DILocation(line: 4028, column: 74, scope: !11575)
!11617 = !DILocation(line: 4029, column: 7, scope: !11575)
!11618 = !DILocation(line: 4028, column: 7, scope: !11575)
!11619 = !DILocation(line: 4028, column: 6, scope: !11575)
!11620 = !DILocation(line: 4030, column: 9, scope: !11621)
!11621 = distinct !DILexicalBlock(scope: !11575, file: !1, line: 4030, column: 9)
!11622 = !DILocation(line: 4030, column: 11, scope: !11621)
!11623 = !DILocation(line: 4030, column: 9, scope: !11575)
!11624 = !DILocation(line: 4032, column: 15, scope: !11625)
!11625 = distinct !DILexicalBlock(scope: !11621, file: !1, line: 4031, column: 7)
!11626 = !DILocation(line: 4033, column: 9, scope: !11625)
!11627 = !DILocation(line: 4035, column: 12, scope: !11628)
!11628 = distinct !DILexicalBlock(scope: !11575, file: !1, line: 4035, column: 5)
!11629 = !DILocation(line: 4035, column: 11, scope: !11628)
!11630 = !DILocation(line: 4035, column: 10, scope: !11628)
!11631 = !DILocation(line: 4035, column: 19, scope: !11632)
!11632 = distinct !DILexicalBlock(scope: !11628, file: !1, line: 4035, column: 5)
!11633 = !DILocation(line: 4035, column: 24, scope: !11632)
!11634 = !DILocation(line: 4035, column: 21, scope: !11632)
!11635 = !DILocation(line: 4035, column: 5, scope: !11628)
!11636 = !DILocation(line: 4040, column: 36, scope: !11637)
!11637 = distinct !DILexicalBlock(scope: !11632, file: !1, line: 4036, column: 5)
!11638 = !DILocation(line: 4040, column: 49, scope: !11637)
!11639 = !DILocation(line: 4040, column: 53, scope: !11637)
!11640 = !DILocation(line: 4040, column: 57, scope: !11637)
!11641 = !DILocation(line: 4041, column: 9, scope: !11637)
!11642 = !DILocation(line: 4041, column: 20, scope: !11637)
!11643 = !DILocation(line: 4041, column: 30, scope: !11637)
!11644 = !DILocation(line: 4041, column: 32, scope: !11637)
!11645 = !DILocation(line: 4040, column: 20, scope: !11637)
!11646 = !DILocation(line: 4040, column: 19, scope: !11637)
!11647 = !DILocation(line: 4042, column: 11, scope: !11648)
!11648 = distinct !DILexicalBlock(scope: !11637, file: !1, line: 4042, column: 11)
!11649 = !DILocation(line: 4042, column: 22, scope: !11648)
!11650 = !DILocation(line: 4042, column: 39, scope: !11648)
!11651 = !DILocation(line: 4042, column: 11, scope: !11637)
!11652 = !DILocation(line: 4044, column: 24, scope: !11653)
!11653 = distinct !DILexicalBlock(scope: !11648, file: !1, line: 4043, column: 9)
!11654 = !DILocation(line: 4044, column: 37, scope: !11653)
!11655 = !DILocation(line: 4044, column: 23, scope: !11653)
!11656 = !DILocation(line: 4045, column: 26, scope: !11653)
!11657 = !DILocation(line: 4045, column: 41, scope: !11653)
!11658 = !DILocation(line: 4045, column: 25, scope: !11653)
!11659 = !DILocation(line: 4046, column: 9, scope: !11653)
!11660 = !DILocation(line: 4047, column: 27, scope: !11637)
!11661 = !DILocation(line: 4047, column: 37, scope: !11637)
!11662 = !DILocation(line: 4047, column: 39, scope: !11637)
!11663 = !DILocation(line: 4047, column: 14, scope: !11637)
!11664 = !DILocation(line: 4048, column: 43, scope: !11637)
!11665 = !DILocation(line: 4049, column: 20, scope: !11637)
!11666 = !DILocation(line: 4049, column: 9, scope: !11637)
!11667 = !DILocation(line: 4048, column: 69, scope: !11637)
!11668 = !DILocation(line: 4048, column: 56, scope: !11637)
!11669 = !DILocation(line: 4048, column: 55, scope: !11637)
!11670 = !DILocation(line: 4048, column: 42, scope: !11637)
!11671 = !DILocation(line: 4048, column: 19, scope: !11637)
!11672 = !DILocation(line: 4050, column: 56, scope: !11637)
!11673 = !DILocation(line: 4050, column: 39, scope: !11637)
!11674 = !DILocation(line: 4050, column: 69, scope: !11637)
!11675 = !DILocation(line: 4051, column: 26, scope: !11637)
!11676 = !DILocation(line: 4051, column: 29, scope: !11637)
!11677 = !DILocation(line: 4051, column: 9, scope: !11637)
!11678 = !DILocation(line: 4051, column: 37, scope: !11637)
!11679 = !DILocation(line: 4050, column: 7, scope: !11637)
!11680 = !DILocation(line: 4052, column: 29, scope: !11637)
!11681 = !DILocation(line: 4052, column: 39, scope: !11637)
!11682 = !DILocation(line: 4052, column: 41, scope: !11637)
!11683 = !DILocation(line: 4052, column: 14, scope: !11637)
!11684 = !DILocation(line: 4053, column: 45, scope: !11637)
!11685 = !DILocation(line: 4054, column: 22, scope: !11637)
!11686 = !DILocation(line: 4054, column: 9, scope: !11637)
!11687 = !DILocation(line: 4053, column: 73, scope: !11637)
!11688 = !DILocation(line: 4053, column: 60, scope: !11637)
!11689 = !DILocation(line: 4053, column: 59, scope: !11637)
!11690 = !DILocation(line: 4053, column: 44, scope: !11637)
!11691 = !DILocation(line: 4053, column: 21, scope: !11637)
!11692 = !DILocation(line: 4055, column: 58, scope: !11637)
!11693 = !DILocation(line: 4055, column: 41, scope: !11637)
!11694 = !DILocation(line: 4055, column: 73, scope: !11637)
!11695 = !DILocation(line: 4056, column: 26, scope: !11637)
!11696 = !DILocation(line: 4056, column: 29, scope: !11637)
!11697 = !DILocation(line: 4056, column: 9, scope: !11637)
!11698 = !DILocation(line: 4056, column: 37, scope: !11637)
!11699 = !DILocation(line: 4055, column: 7, scope: !11637)
!11700 = !DILocation(line: 4057, column: 8, scope: !11637)
!11701 = !DILocation(line: 4058, column: 5, scope: !11637)
!11702 = !DILocation(line: 4035, column: 31, scope: !11632)
!11703 = !DILocation(line: 4035, column: 5, scope: !11632)
!11704 = distinct !{!11704, !11635, !11705}
!11705 = !DILocation(line: 4058, column: 5, scope: !11628)
!11706 = !DILocation(line: 4059, column: 38, scope: !11707)
!11707 = distinct !DILexicalBlock(scope: !11575, file: !1, line: 4059, column: 9)
!11708 = !DILocation(line: 4059, column: 49, scope: !11707)
!11709 = !DILocation(line: 4059, column: 9, scope: !11707)
!11710 = !DILocation(line: 4059, column: 60, scope: !11707)
!11711 = !DILocation(line: 4059, column: 9, scope: !11575)
!11712 = !DILocation(line: 4060, column: 13, scope: !11707)
!11713 = !DILocation(line: 4060, column: 7, scope: !11707)
!11714 = !DILocation(line: 4061, column: 3, scope: !11575)
!11715 = !DILocation(line: 4001, column: 29, scope: !11570)
!11716 = !DILocation(line: 4001, column: 3, scope: !11570)
!11717 = distinct !{!11717, !11573, !11718}
!11718 = !DILocation(line: 4061, column: 3, scope: !11566)
!11719 = !DILocation(line: 4062, column: 31, scope: !11161)
!11720 = !DILocation(line: 4062, column: 14, scope: !11161)
!11721 = !DILocation(line: 4062, column: 13, scope: !11161)
!11722 = !DILocation(line: 4063, column: 40, scope: !11161)
!11723 = !DILocation(line: 4063, column: 16, scope: !11161)
!11724 = !DILocation(line: 4063, column: 15, scope: !11161)
!11725 = !DILocation(line: 4064, column: 7, scope: !11726)
!11726 = distinct !DILexicalBlock(scope: !11161, file: !1, line: 4064, column: 7)
!11727 = !DILocation(line: 4064, column: 14, scope: !11726)
!11728 = !DILocation(line: 4064, column: 20, scope: !11726)
!11729 = !DILocation(line: 4064, column: 7, scope: !11161)
!11730 = !DILocation(line: 4065, column: 12, scope: !11726)
!11731 = !DILocation(line: 4065, column: 5, scope: !11726)
!11732 = !DILocation(line: 4066, column: 10, scope: !11161)
!11733 = !DILocation(line: 4066, column: 3, scope: !11161)
!11734 = !DILocation(line: 4067, column: 1, scope: !11161)
!11735 = distinct !DISubprogram(name: "DrawDashPolygon", scope: !1, file: !1, line: 1514, type: !11736, scopeLine: 1516, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1236)
!11736 = !DISubroutineType(types: !11737)
!11737 = !{!777, !1525, !8925, !801}
!11738 = !DILocalVariable(name: "draw_info", arg: 1, scope: !11735, file: !1, line: 1514, type: !1525)
!11739 = !DILocation(line: 1514, column: 58, scope: !11735)
!11740 = !DILocalVariable(name: "primitive_info", arg: 2, scope: !11735, file: !1, line: 1515, type: !8925)
!11741 = !DILocation(line: 1515, column: 24, scope: !11735)
!11742 = !DILocalVariable(name: "image", arg: 3, scope: !11735, file: !1, line: 1515, type: !801)
!11743 = !DILocation(line: 1515, column: 46, scope: !11735)
!11744 = !DILocalVariable(name: "length", scope: !11735, file: !1, line: 1518, type: !728)
!11745 = !DILocation(line: 1518, column: 5, scope: !11735)
!11746 = !DILocalVariable(name: "maximum_length", scope: !11735, file: !1, line: 1519, type: !728)
!11747 = !DILocation(line: 1519, column: 5, scope: !11735)
!11748 = !DILocalVariable(name: "offset", scope: !11735, file: !1, line: 1520, type: !728)
!11749 = !DILocation(line: 1520, column: 5, scope: !11735)
!11750 = !DILocalVariable(name: "scale", scope: !11735, file: !1, line: 1521, type: !728)
!11751 = !DILocation(line: 1521, column: 5, scope: !11735)
!11752 = !DILocalVariable(name: "total_length", scope: !11735, file: !1, line: 1522, type: !728)
!11753 = !DILocation(line: 1522, column: 5, scope: !11735)
!11754 = !DILocalVariable(name: "clone_info", scope: !11735, file: !1, line: 1525, type: !699)
!11755 = !DILocation(line: 1525, column: 6, scope: !11735)
!11756 = !DILocalVariable(name: "status", scope: !11735, file: !1, line: 1528, type: !3142)
!11757 = !DILocation(line: 1528, column: 5, scope: !11735)
!11758 = !DILocalVariable(name: "dash_polygon", scope: !11735, file: !1, line: 1531, type: !1184)
!11759 = !DILocation(line: 1531, column: 6, scope: !11735)
!11760 = !DILocalVariable(name: "dx", scope: !11735, file: !1, line: 1534, type: !728)
!11761 = !DILocation(line: 1534, column: 5, scope: !11735)
!11762 = !DILocalVariable(name: "dy", scope: !11735, file: !1, line: 1535, type: !728)
!11763 = !DILocation(line: 1535, column: 5, scope: !11735)
!11764 = !DILocalVariable(name: "i", scope: !11735, file: !1, line: 1538, type: !717)
!11765 = !DILocation(line: 1538, column: 5, scope: !11735)
!11766 = !DILocalVariable(name: "number_vertices", scope: !11735, file: !1, line: 1541, type: !712)
!11767 = !DILocation(line: 1541, column: 5, scope: !11735)
!11768 = !DILocalVariable(name: "j", scope: !11735, file: !1, line: 1544, type: !717)
!11769 = !DILocation(line: 1544, column: 5, scope: !11735)
!11770 = !DILocalVariable(name: "n", scope: !11735, file: !1, line: 1545, type: !717)
!11771 = !DILocation(line: 1545, column: 5, scope: !11735)
!11772 = !DILocation(line: 1548, column: 7, scope: !11773)
!11773 = distinct !DILexicalBlock(scope: !11735, file: !1, line: 1548, column: 7)
!11774 = !DILocation(line: 1548, column: 14, scope: !11773)
!11775 = !DILocation(line: 1548, column: 20, scope: !11773)
!11776 = !DILocation(line: 1548, column: 7, scope: !11735)
!11777 = !DILocation(line: 1549, column: 12, scope: !11773)
!11778 = !DILocation(line: 1549, column: 5, scope: !11773)
!11779 = !DILocation(line: 1550, column: 47, scope: !11735)
!11780 = !DILocation(line: 1550, column: 14, scope: !11735)
!11781 = !DILocation(line: 1550, column: 13, scope: !11735)
!11782 = !DILocation(line: 1551, column: 3, scope: !11735)
!11783 = !DILocation(line: 1551, column: 15, scope: !11735)
!11784 = !DILocation(line: 1551, column: 25, scope: !11735)
!11785 = !DILocation(line: 1552, column: 9, scope: !11786)
!11786 = distinct !DILexicalBlock(scope: !11735, file: !1, line: 1552, column: 3)
!11787 = !DILocation(line: 1552, column: 8, scope: !11786)
!11788 = !DILocation(line: 1552, column: 13, scope: !11789)
!11789 = distinct !DILexicalBlock(scope: !11786, file: !1, line: 1552, column: 3)
!11790 = !DILocation(line: 1552, column: 28, scope: !11789)
!11791 = !DILocation(line: 1552, column: 31, scope: !11789)
!11792 = !DILocation(line: 1552, column: 41, scope: !11789)
!11793 = !DILocation(line: 1552, column: 3, scope: !11786)
!11794 = !DILocation(line: 1552, column: 65, scope: !11789)
!11795 = !DILocation(line: 1552, column: 3, scope: !11789)
!11796 = distinct !{!11796, !11793, !11797}
!11797 = !DILocation(line: 1552, column: 69, scope: !11786)
!11798 = !DILocation(line: 1553, column: 28, scope: !11735)
!11799 = !DILocation(line: 1553, column: 18, scope: !11735)
!11800 = !DILocation(line: 1555, column: 10, scope: !11735)
!11801 = !DILocation(line: 1555, column: 9, scope: !11735)
!11802 = !DILocation(line: 1555, column: 25, scope: !11735)
!11803 = !DILocation(line: 1554, column: 34, scope: !11735)
!11804 = !DILocation(line: 1554, column: 16, scope: !11735)
!11805 = !DILocation(line: 1554, column: 15, scope: !11735)
!11806 = !DILocation(line: 1556, column: 7, scope: !11807)
!11807 = distinct !DILexicalBlock(scope: !11735, file: !1, line: 1556, column: 7)
!11808 = !DILocation(line: 1556, column: 20, scope: !11807)
!11809 = !DILocation(line: 1556, column: 7, scope: !11735)
!11810 = !DILocation(line: 1557, column: 5, scope: !11807)
!11811 = !DILocation(line: 1558, column: 3, scope: !11735)
!11812 = !DILocation(line: 1558, column: 19, scope: !11735)
!11813 = !DILocation(line: 1559, column: 23, scope: !11735)
!11814 = !DILocation(line: 1559, column: 34, scope: !11735)
!11815 = !DILocation(line: 1559, column: 9, scope: !11735)
!11816 = !DILocation(line: 1559, column: 8, scope: !11735)
!11817 = !DILocation(line: 1560, column: 10, scope: !11735)
!11818 = !DILocation(line: 1560, column: 17, scope: !11735)
!11819 = !DILocation(line: 1560, column: 28, scope: !11735)
!11820 = !DILocation(line: 1560, column: 43, scope: !11735)
!11821 = !DILocation(line: 1560, column: 15, scope: !11735)
!11822 = !DILocation(line: 1560, column: 9, scope: !11735)
!11823 = !DILocation(line: 1561, column: 10, scope: !11735)
!11824 = !DILocation(line: 1561, column: 21, scope: !11735)
!11825 = !DILocation(line: 1561, column: 33, scope: !11735)
!11826 = !DILocation(line: 1561, column: 42, scope: !11735)
!11827 = !DILocation(line: 1561, column: 48, scope: !11735)
!11828 = !DILocation(line: 1561, column: 59, scope: !11735)
!11829 = !DILocation(line: 1561, column: 47, scope: !11735)
!11830 = !DILocation(line: 1561, column: 9, scope: !11735)
!11831 = !DILocation(line: 1562, column: 4, scope: !11735)
!11832 = !DILocation(line: 1563, column: 9, scope: !11833)
!11833 = distinct !DILexicalBlock(scope: !11735, file: !1, line: 1563, column: 3)
!11834 = !DILocation(line: 1563, column: 8, scope: !11833)
!11835 = !DILocation(line: 1563, column: 13, scope: !11836)
!11836 = distinct !DILexicalBlock(scope: !11833, file: !1, line: 1563, column: 3)
!11837 = !DILocation(line: 1563, column: 20, scope: !11836)
!11838 = !DILocation(line: 1563, column: 3, scope: !11833)
!11839 = !DILocation(line: 1565, column: 9, scope: !11840)
!11840 = distinct !DILexicalBlock(scope: !11841, file: !1, line: 1565, column: 9)
!11841 = distinct !DILexicalBlock(scope: !11836, file: !1, line: 1564, column: 3)
!11842 = !DILocation(line: 1565, column: 20, scope: !11840)
!11843 = !DILocation(line: 1565, column: 33, scope: !11840)
!11844 = !DILocation(line: 1565, column: 36, scope: !11840)
!11845 = !DILocation(line: 1565, column: 9, scope: !11841)
!11846 = !DILocation(line: 1566, column: 7, scope: !11840)
!11847 = !DILocation(line: 1567, column: 12, scope: !11841)
!11848 = !DILocation(line: 1567, column: 19, scope: !11841)
!11849 = !DILocation(line: 1567, column: 30, scope: !11841)
!11850 = !DILocation(line: 1567, column: 43, scope: !11841)
!11851 = !DILocation(line: 1567, column: 47, scope: !11841)
!11852 = !DILocation(line: 1567, column: 49, scope: !11841)
!11853 = !DILocation(line: 1567, column: 45, scope: !11841)
!11854 = !DILocation(line: 1567, column: 17, scope: !11841)
!11855 = !DILocation(line: 1567, column: 11, scope: !11841)
!11856 = !DILocation(line: 1568, column: 9, scope: !11857)
!11857 = distinct !DILexicalBlock(scope: !11841, file: !1, line: 1568, column: 9)
!11858 = !DILocation(line: 1568, column: 18, scope: !11857)
!11859 = !DILocation(line: 1568, column: 16, scope: !11857)
!11860 = !DILocation(line: 1568, column: 9, scope: !11841)
!11861 = !DILocation(line: 1570, column: 17, scope: !11862)
!11862 = distinct !DILexicalBlock(scope: !11857, file: !1, line: 1569, column: 7)
!11863 = !DILocation(line: 1570, column: 15, scope: !11862)
!11864 = !DILocation(line: 1571, column: 10, scope: !11862)
!11865 = !DILocation(line: 1572, column: 16, scope: !11862)
!11866 = !DILocation(line: 1572, column: 23, scope: !11862)
!11867 = !DILocation(line: 1572, column: 34, scope: !11862)
!11868 = !DILocation(line: 1572, column: 47, scope: !11862)
!11869 = !DILocation(line: 1572, column: 49, scope: !11862)
!11870 = !DILocation(line: 1572, column: 21, scope: !11862)
!11871 = !DILocation(line: 1572, column: 15, scope: !11862)
!11872 = !DILocation(line: 1573, column: 9, scope: !11862)
!11873 = !DILocation(line: 1575, column: 9, scope: !11874)
!11874 = distinct !DILexicalBlock(scope: !11841, file: !1, line: 1575, column: 9)
!11875 = !DILocation(line: 1575, column: 18, scope: !11874)
!11876 = !DILocation(line: 1575, column: 16, scope: !11874)
!11877 = !DILocation(line: 1575, column: 9, scope: !11841)
!11878 = !DILocation(line: 1577, column: 17, scope: !11879)
!11879 = distinct !DILexicalBlock(scope: !11874, file: !1, line: 1576, column: 7)
!11880 = !DILocation(line: 1577, column: 15, scope: !11879)
!11881 = !DILocation(line: 1578, column: 15, scope: !11879)
!11882 = !DILocation(line: 1579, column: 9, scope: !11879)
!11883 = !DILocation(line: 1581, column: 11, scope: !11841)
!11884 = !DILocation(line: 1582, column: 6, scope: !11841)
!11885 = !DILocation(line: 1583, column: 3, scope: !11841)
!11886 = !DILocation(line: 1563, column: 28, scope: !11836)
!11887 = !DILocation(line: 1563, column: 3, scope: !11836)
!11888 = distinct !{!11888, !11838, !11889}
!11889 = !DILocation(line: 1583, column: 3, scope: !11833)
!11890 = !DILocation(line: 1584, column: 9, scope: !11735)
!11891 = !DILocation(line: 1585, column: 17, scope: !11735)
!11892 = !DILocation(line: 1586, column: 15, scope: !11735)
!11893 = !DILocation(line: 1587, column: 9, scope: !11894)
!11894 = distinct !DILexicalBlock(scope: !11735, file: !1, line: 1587, column: 3)
!11895 = !DILocation(line: 1587, column: 8, scope: !11894)
!11896 = !DILocation(line: 1587, column: 13, scope: !11897)
!11897 = distinct !DILexicalBlock(scope: !11894, file: !1, line: 1587, column: 3)
!11898 = !DILocation(line: 1587, column: 27, scope: !11897)
!11899 = !DILocation(line: 1587, column: 15, scope: !11897)
!11900 = !DILocation(line: 1587, column: 3, scope: !11894)
!11901 = !DILocation(line: 1589, column: 8, scope: !11902)
!11902 = distinct !DILexicalBlock(scope: !11897, file: !1, line: 1588, column: 3)
!11903 = !DILocation(line: 1589, column: 23, scope: !11902)
!11904 = !DILocation(line: 1589, column: 26, scope: !11902)
!11905 = !DILocation(line: 1589, column: 32, scope: !11902)
!11906 = !DILocation(line: 1589, column: 34, scope: !11902)
!11907 = !DILocation(line: 1589, column: 49, scope: !11902)
!11908 = !DILocation(line: 1589, column: 50, scope: !11902)
!11909 = !DILocation(line: 1589, column: 54, scope: !11902)
!11910 = !DILocation(line: 1589, column: 60, scope: !11902)
!11911 = !DILocation(line: 1589, column: 33, scope: !11902)
!11912 = !DILocation(line: 1589, column: 7, scope: !11902)
!11913 = !DILocation(line: 1590, column: 8, scope: !11902)
!11914 = !DILocation(line: 1590, column: 23, scope: !11902)
!11915 = !DILocation(line: 1590, column: 26, scope: !11902)
!11916 = !DILocation(line: 1590, column: 32, scope: !11902)
!11917 = !DILocation(line: 1590, column: 34, scope: !11902)
!11918 = !DILocation(line: 1590, column: 49, scope: !11902)
!11919 = !DILocation(line: 1590, column: 50, scope: !11902)
!11920 = !DILocation(line: 1590, column: 54, scope: !11902)
!11921 = !DILocation(line: 1590, column: 60, scope: !11902)
!11922 = !DILocation(line: 1590, column: 33, scope: !11902)
!11923 = !DILocation(line: 1590, column: 7, scope: !11902)
!11924 = !DILocation(line: 1591, column: 35, scope: !11902)
!11925 = !DILocation(line: 1591, column: 38, scope: !11902)
!11926 = !DILocation(line: 1591, column: 20, scope: !11902)
!11927 = !DILocation(line: 1591, column: 19, scope: !11902)
!11928 = !DILocation(line: 1592, column: 9, scope: !11929)
!11929 = distinct !DILexicalBlock(scope: !11902, file: !1, line: 1592, column: 9)
!11930 = !DILocation(line: 1592, column: 16, scope: !11929)
!11931 = !DILocation(line: 1592, column: 9, scope: !11902)
!11932 = !DILocation(line: 1594, column: 10, scope: !11933)
!11933 = distinct !DILexicalBlock(scope: !11929, file: !1, line: 1593, column: 7)
!11934 = !DILocation(line: 1595, column: 13, scope: !11935)
!11935 = distinct !DILexicalBlock(scope: !11933, file: !1, line: 1595, column: 13)
!11936 = !DILocation(line: 1595, column: 24, scope: !11935)
!11937 = !DILocation(line: 1595, column: 37, scope: !11935)
!11938 = !DILocation(line: 1595, column: 40, scope: !11935)
!11939 = !DILocation(line: 1595, column: 13, scope: !11933)
!11940 = !DILocation(line: 1596, column: 12, scope: !11935)
!11941 = !DILocation(line: 1596, column: 11, scope: !11935)
!11942 = !DILocation(line: 1597, column: 16, scope: !11933)
!11943 = !DILocation(line: 1597, column: 23, scope: !11933)
!11944 = !DILocation(line: 1597, column: 34, scope: !11933)
!11945 = !DILocation(line: 1597, column: 47, scope: !11933)
!11946 = !DILocation(line: 1597, column: 51, scope: !11933)
!11947 = !DILocation(line: 1597, column: 53, scope: !11933)
!11948 = !DILocation(line: 1597, column: 49, scope: !11933)
!11949 = !DILocation(line: 1597, column: 21, scope: !11933)
!11950 = !DILocation(line: 1597, column: 15, scope: !11933)
!11951 = !DILocation(line: 1598, column: 7, scope: !11933)
!11952 = !DILocation(line: 1599, column: 22, scope: !11953)
!11953 = distinct !DILexicalBlock(scope: !11902, file: !1, line: 1599, column: 5)
!11954 = !DILocation(line: 1599, column: 10, scope: !11953)
!11955 = !DILocation(line: 1599, column: 29, scope: !11956)
!11956 = distinct !DILexicalBlock(scope: !11953, file: !1, line: 1599, column: 5)
!11957 = !DILocation(line: 1599, column: 42, scope: !11956)
!11958 = !DILocation(line: 1599, column: 41, scope: !11956)
!11959 = !DILocation(line: 1599, column: 53, scope: !11956)
!11960 = !DILocation(line: 1599, column: 50, scope: !11956)
!11961 = !DILocation(line: 1599, column: 5, scope: !11953)
!11962 = !DILocation(line: 1601, column: 21, scope: !11963)
!11963 = distinct !DILexicalBlock(scope: !11956, file: !1, line: 1600, column: 5)
!11964 = !DILocation(line: 1601, column: 19, scope: !11963)
!11965 = !DILocation(line: 1602, column: 12, scope: !11966)
!11966 = distinct !DILexicalBlock(scope: !11963, file: !1, line: 1602, column: 11)
!11967 = !DILocation(line: 1602, column: 14, scope: !11966)
!11968 = !DILocation(line: 1602, column: 22, scope: !11966)
!11969 = !DILocation(line: 1602, column: 11, scope: !11963)
!11970 = !DILocation(line: 1604, column: 11, scope: !11971)
!11971 = distinct !DILexicalBlock(scope: !11966, file: !1, line: 1603, column: 9)
!11972 = !DILocation(line: 1604, column: 27, scope: !11971)
!11973 = !DILocation(line: 1605, column: 45, scope: !11971)
!11974 = !DILocation(line: 1605, column: 60, scope: !11971)
!11975 = !DILocation(line: 1605, column: 61, scope: !11971)
!11976 = !DILocation(line: 1605, column: 65, scope: !11971)
!11977 = !DILocation(line: 1605, column: 71, scope: !11971)
!11978 = !DILocation(line: 1605, column: 73, scope: !11971)
!11979 = !DILocation(line: 1606, column: 13, scope: !11971)
!11980 = !DILocation(line: 1605, column: 75, scope: !11971)
!11981 = !DILocation(line: 1606, column: 26, scope: !11971)
!11982 = !DILocation(line: 1606, column: 25, scope: !11971)
!11983 = !DILocation(line: 1605, column: 72, scope: !11971)
!11984 = !DILocation(line: 1605, column: 11, scope: !11971)
!11985 = !DILocation(line: 1605, column: 27, scope: !11971)
!11986 = !DILocation(line: 1605, column: 33, scope: !11971)
!11987 = !DILocation(line: 1605, column: 34, scope: !11971)
!11988 = !DILocation(line: 1607, column: 45, scope: !11971)
!11989 = !DILocation(line: 1607, column: 60, scope: !11971)
!11990 = !DILocation(line: 1607, column: 61, scope: !11971)
!11991 = !DILocation(line: 1607, column: 65, scope: !11971)
!11992 = !DILocation(line: 1607, column: 71, scope: !11971)
!11993 = !DILocation(line: 1607, column: 73, scope: !11971)
!11994 = !DILocation(line: 1608, column: 13, scope: !11971)
!11995 = !DILocation(line: 1607, column: 75, scope: !11971)
!11996 = !DILocation(line: 1608, column: 26, scope: !11971)
!11997 = !DILocation(line: 1608, column: 25, scope: !11971)
!11998 = !DILocation(line: 1607, column: 72, scope: !11971)
!11999 = !DILocation(line: 1607, column: 11, scope: !11971)
!12000 = !DILocation(line: 1607, column: 27, scope: !11971)
!12001 = !DILocation(line: 1607, column: 33, scope: !11971)
!12002 = !DILocation(line: 1607, column: 34, scope: !11971)
!12003 = !DILocation(line: 1609, column: 12, scope: !11971)
!12004 = !DILocation(line: 1610, column: 9, scope: !11971)
!12005 = !DILocation(line: 1613, column: 16, scope: !12006)
!12006 = distinct !DILexicalBlock(scope: !12007, file: !1, line: 1613, column: 15)
!12007 = distinct !DILexicalBlock(scope: !11966, file: !1, line: 1612, column: 9)
!12008 = !DILocation(line: 1613, column: 17, scope: !12006)
!12009 = !DILocation(line: 1613, column: 36, scope: !12006)
!12010 = !DILocation(line: 1613, column: 35, scope: !12006)
!12011 = !DILocation(line: 1613, column: 21, scope: !12006)
!12012 = !DILocation(line: 1613, column: 15, scope: !12007)
!12013 = !DILocation(line: 1614, column: 13, scope: !12006)
!12014 = !DILocation(line: 1615, column: 11, scope: !12007)
!12015 = !DILocation(line: 1615, column: 24, scope: !12007)
!12016 = !DILocation(line: 1615, column: 27, scope: !12007)
!12017 = !DILocation(line: 1615, column: 42, scope: !12007)
!12018 = !DILocation(line: 1615, column: 43, scope: !12007)
!12019 = !DILocation(line: 1616, column: 45, scope: !12007)
!12020 = !DILocation(line: 1616, column: 60, scope: !12007)
!12021 = !DILocation(line: 1616, column: 61, scope: !12007)
!12022 = !DILocation(line: 1616, column: 65, scope: !12007)
!12023 = !DILocation(line: 1616, column: 71, scope: !12007)
!12024 = !DILocation(line: 1616, column: 73, scope: !12007)
!12025 = !DILocation(line: 1617, column: 13, scope: !12007)
!12026 = !DILocation(line: 1616, column: 75, scope: !12007)
!12027 = !DILocation(line: 1617, column: 26, scope: !12007)
!12028 = !DILocation(line: 1617, column: 25, scope: !12007)
!12029 = !DILocation(line: 1616, column: 72, scope: !12007)
!12030 = !DILocation(line: 1616, column: 11, scope: !12007)
!12031 = !DILocation(line: 1616, column: 24, scope: !12007)
!12032 = !DILocation(line: 1616, column: 27, scope: !12007)
!12033 = !DILocation(line: 1616, column: 33, scope: !12007)
!12034 = !DILocation(line: 1616, column: 34, scope: !12007)
!12035 = !DILocation(line: 1618, column: 45, scope: !12007)
!12036 = !DILocation(line: 1618, column: 60, scope: !12007)
!12037 = !DILocation(line: 1618, column: 61, scope: !12007)
!12038 = !DILocation(line: 1618, column: 65, scope: !12007)
!12039 = !DILocation(line: 1618, column: 71, scope: !12007)
!12040 = !DILocation(line: 1618, column: 73, scope: !12007)
!12041 = !DILocation(line: 1619, column: 13, scope: !12007)
!12042 = !DILocation(line: 1618, column: 75, scope: !12007)
!12043 = !DILocation(line: 1619, column: 26, scope: !12007)
!12044 = !DILocation(line: 1619, column: 25, scope: !12007)
!12045 = !DILocation(line: 1618, column: 72, scope: !12007)
!12046 = !DILocation(line: 1618, column: 11, scope: !12007)
!12047 = !DILocation(line: 1618, column: 24, scope: !12007)
!12048 = !DILocation(line: 1618, column: 27, scope: !12007)
!12049 = !DILocation(line: 1618, column: 33, scope: !12007)
!12050 = !DILocation(line: 1618, column: 34, scope: !12007)
!12051 = !DILocation(line: 1620, column: 11, scope: !12007)
!12052 = !DILocation(line: 1620, column: 24, scope: !12007)
!12053 = !DILocation(line: 1620, column: 27, scope: !12007)
!12054 = !DILocation(line: 1620, column: 38, scope: !12007)
!12055 = !DILocation(line: 1621, column: 12, scope: !12007)
!12056 = !DILocation(line: 1622, column: 48, scope: !12007)
!12057 = !DILocation(line: 1622, column: 11, scope: !12007)
!12058 = !DILocation(line: 1622, column: 27, scope: !12007)
!12059 = !DILocation(line: 1622, column: 38, scope: !12007)
!12060 = !DILocation(line: 1623, column: 11, scope: !12007)
!12061 = !DILocation(line: 1623, column: 24, scope: !12007)
!12062 = !DILocation(line: 1623, column: 27, scope: !12007)
!12063 = !DILocation(line: 1623, column: 36, scope: !12007)
!12064 = !DILocation(line: 1624, column: 37, scope: !12007)
!12065 = !DILocation(line: 1624, column: 43, scope: !12007)
!12066 = !DILocation(line: 1624, column: 54, scope: !12007)
!12067 = !DILocation(line: 1624, column: 19, scope: !12007)
!12068 = !DILocation(line: 1624, column: 17, scope: !12007)
!12069 = !DILocation(line: 1626, column: 8, scope: !11963)
!12070 = !DILocation(line: 1627, column: 11, scope: !12071)
!12071 = distinct !DILexicalBlock(scope: !11963, file: !1, line: 1627, column: 11)
!12072 = !DILocation(line: 1627, column: 22, scope: !12071)
!12073 = !DILocation(line: 1627, column: 35, scope: !12071)
!12074 = !DILocation(line: 1627, column: 38, scope: !12071)
!12075 = !DILocation(line: 1627, column: 11, scope: !11963)
!12076 = !DILocation(line: 1628, column: 10, scope: !12071)
!12077 = !DILocation(line: 1628, column: 9, scope: !12071)
!12078 = !DILocation(line: 1629, column: 14, scope: !11963)
!12079 = !DILocation(line: 1629, column: 21, scope: !11963)
!12080 = !DILocation(line: 1629, column: 32, scope: !11963)
!12081 = !DILocation(line: 1629, column: 45, scope: !11963)
!12082 = !DILocation(line: 1629, column: 49, scope: !11963)
!12083 = !DILocation(line: 1629, column: 51, scope: !11963)
!12084 = !DILocation(line: 1629, column: 47, scope: !11963)
!12085 = !DILocation(line: 1629, column: 19, scope: !11963)
!12086 = !DILocation(line: 1629, column: 13, scope: !11963)
!12087 = !DILocation(line: 1599, column: 5, scope: !11956)
!12088 = distinct !{!12088, !11961, !12089}
!12089 = !DILocation(line: 1630, column: 5, scope: !11953)
!12090 = !DILocation(line: 1631, column: 14, scope: !11902)
!12091 = !DILocation(line: 1631, column: 29, scope: !11902)
!12092 = !DILocation(line: 1631, column: 28, scope: !11902)
!12093 = !DILocation(line: 1631, column: 11, scope: !11902)
!12094 = !DILocation(line: 1632, column: 10, scope: !12095)
!12095 = distinct !DILexicalBlock(scope: !11902, file: !1, line: 1632, column: 9)
!12096 = !DILocation(line: 1632, column: 12, scope: !12095)
!12097 = !DILocation(line: 1632, column: 20, scope: !12095)
!12098 = !DILocation(line: 1632, column: 9, scope: !11902)
!12099 = !DILocation(line: 1633, column: 7, scope: !12095)
!12100 = !DILocation(line: 1634, column: 5, scope: !11902)
!12101 = !DILocation(line: 1634, column: 18, scope: !11902)
!12102 = !DILocation(line: 1634, column: 21, scope: !11902)
!12103 = !DILocation(line: 1634, column: 36, scope: !11902)
!12104 = !DILocation(line: 1635, column: 5, scope: !11902)
!12105 = !DILocation(line: 1635, column: 18, scope: !11902)
!12106 = !DILocation(line: 1635, column: 21, scope: !11902)
!12107 = !DILocation(line: 1635, column: 32, scope: !11902)
!12108 = !DILocation(line: 1636, column: 6, scope: !11902)
!12109 = !DILocation(line: 1637, column: 3, scope: !11902)
!12110 = !DILocation(line: 1587, column: 45, scope: !11897)
!12111 = !DILocation(line: 1587, column: 3, scope: !11897)
!12112 = distinct !{!12112, !11900, !12113}
!12113 = !DILocation(line: 1637, column: 3, scope: !11894)
!12114 = !DILocation(line: 1638, column: 8, scope: !12115)
!12115 = distinct !DILexicalBlock(scope: !11735, file: !1, line: 1638, column: 7)
!12116 = !DILocation(line: 1638, column: 24, scope: !12115)
!12117 = !DILocation(line: 1638, column: 21, scope: !12115)
!12118 = !DILocation(line: 1638, column: 40, scope: !12115)
!12119 = !DILocation(line: 1638, column: 45, scope: !12115)
!12120 = !DILocation(line: 1638, column: 47, scope: !12115)
!12121 = !DILocation(line: 1638, column: 55, scope: !12115)
!12122 = !DILocation(line: 1638, column: 61, scope: !12115)
!12123 = !DILocation(line: 1638, column: 65, scope: !12115)
!12124 = !DILocation(line: 1638, column: 67, scope: !12115)
!12125 = !DILocation(line: 1638, column: 7, scope: !11735)
!12126 = !DILocation(line: 1640, column: 7, scope: !12127)
!12127 = distinct !DILexicalBlock(scope: !12115, file: !1, line: 1639, column: 5)
!12128 = !DILocation(line: 1640, column: 20, scope: !12127)
!12129 = !DILocation(line: 1640, column: 23, scope: !12127)
!12130 = !DILocation(line: 1640, column: 38, scope: !12127)
!12131 = !DILocation(line: 1640, column: 39, scope: !12127)
!12132 = !DILocation(line: 1641, column: 7, scope: !12127)
!12133 = !DILocation(line: 1641, column: 20, scope: !12127)
!12134 = !DILocation(line: 1641, column: 23, scope: !12127)
!12135 = !DILocation(line: 1641, column: 29, scope: !12127)
!12136 = !DILocation(line: 1641, column: 30, scope: !12127)
!12137 = !DILocation(line: 1642, column: 7, scope: !12127)
!12138 = !DILocation(line: 1642, column: 20, scope: !12127)
!12139 = !DILocation(line: 1642, column: 23, scope: !12127)
!12140 = !DILocation(line: 1642, column: 29, scope: !12127)
!12141 = !DILocation(line: 1642, column: 30, scope: !12127)
!12142 = !DILocation(line: 1643, column: 7, scope: !12127)
!12143 = !DILocation(line: 1643, column: 20, scope: !12127)
!12144 = !DILocation(line: 1643, column: 23, scope: !12127)
!12145 = !DILocation(line: 1643, column: 34, scope: !12127)
!12146 = !DILocation(line: 1644, column: 8, scope: !12127)
!12147 = !DILocation(line: 1645, column: 44, scope: !12127)
!12148 = !DILocation(line: 1645, column: 7, scope: !12127)
!12149 = !DILocation(line: 1645, column: 23, scope: !12127)
!12150 = !DILocation(line: 1645, column: 34, scope: !12127)
!12151 = !DILocation(line: 1646, column: 7, scope: !12127)
!12152 = !DILocation(line: 1646, column: 20, scope: !12127)
!12153 = !DILocation(line: 1646, column: 23, scope: !12127)
!12154 = !DILocation(line: 1646, column: 32, scope: !12127)
!12155 = !DILocation(line: 1647, column: 33, scope: !12127)
!12156 = !DILocation(line: 1647, column: 39, scope: !12127)
!12157 = !DILocation(line: 1647, column: 50, scope: !12127)
!12158 = !DILocation(line: 1647, column: 15, scope: !12127)
!12159 = !DILocation(line: 1647, column: 13, scope: !12127)
!12160 = !DILocation(line: 1648, column: 5, scope: !12127)
!12161 = !DILocation(line: 1649, column: 57, scope: !11735)
!12162 = !DILocation(line: 1649, column: 34, scope: !11735)
!12163 = !DILocation(line: 1649, column: 16, scope: !11735)
!12164 = !DILocation(line: 1649, column: 15, scope: !11735)
!12165 = !DILocation(line: 1650, column: 30, scope: !11735)
!12166 = !DILocation(line: 1650, column: 14, scope: !11735)
!12167 = !DILocation(line: 1650, column: 13, scope: !11735)
!12168 = !DILocation(line: 1651, column: 7, scope: !12169)
!12169 = distinct !DILexicalBlock(scope: !11735, file: !1, line: 1651, column: 7)
!12170 = !DILocation(line: 1651, column: 14, scope: !12169)
!12171 = !DILocation(line: 1651, column: 20, scope: !12169)
!12172 = !DILocation(line: 1651, column: 7, scope: !11735)
!12173 = !DILocation(line: 1652, column: 12, scope: !12169)
!12174 = !DILocation(line: 1652, column: 5, scope: !12169)
!12175 = !DILocation(line: 1653, column: 10, scope: !11735)
!12176 = !DILocation(line: 1653, column: 17, scope: !11735)
!12177 = !DILocation(line: 1653, column: 3, scope: !11735)
!12178 = !DILocation(line: 1654, column: 1, scope: !11735)
!12179 = distinct !DISubprogram(name: "DrawStrokePolygon", scope: !1, file: !1, line: 4694, type: !8923, scopeLine: 4696, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1236)
!12180 = !DILocalVariable(name: "image", arg: 1, scope: !12179, file: !1, line: 4694, type: !801)
!12181 = !DILocation(line: 4694, column: 51, scope: !12179)
!12182 = !DILocalVariable(name: "draw_info", arg: 2, scope: !12179, file: !1, line: 4695, type: !1525)
!12183 = !DILocation(line: 4695, column: 19, scope: !12179)
!12184 = !DILocalVariable(name: "primitive_info", arg: 3, scope: !12179, file: !1, line: 4695, type: !8925)
!12185 = !DILocation(line: 4695, column: 50, scope: !12179)
!12186 = !DILocalVariable(name: "clone_info", scope: !12179, file: !1, line: 4698, type: !699)
!12187 = !DILocation(line: 4698, column: 6, scope: !12179)
!12188 = !DILocalVariable(name: "closed_path", scope: !12179, file: !1, line: 4701, type: !777)
!12189 = !DILocation(line: 4701, column: 5, scope: !12179)
!12190 = !DILocalVariable(name: "status", scope: !12179, file: !1, line: 4704, type: !3142)
!12191 = !DILocation(line: 4704, column: 5, scope: !12179)
!12192 = !DILocalVariable(name: "stroke_polygon", scope: !12179, file: !1, line: 4707, type: !1184)
!12193 = !DILocation(line: 4707, column: 6, scope: !12179)
!12194 = !DILocalVariable(name: "p", scope: !12179, file: !1, line: 4710, type: !8925)
!12195 = !DILocation(line: 4710, column: 6, scope: !12179)
!12196 = !DILocalVariable(name: "q", scope: !12179, file: !1, line: 4711, type: !8925)
!12197 = !DILocation(line: 4711, column: 6, scope: !12179)
!12198 = !DILocation(line: 4716, column: 7, scope: !12199)
!12199 = distinct !DILexicalBlock(scope: !12179, file: !1, line: 4716, column: 7)
!12200 = !DILocation(line: 4716, column: 14, scope: !12199)
!12201 = !DILocation(line: 4716, column: 20, scope: !12199)
!12202 = !DILocation(line: 4716, column: 7, scope: !12179)
!12203 = !DILocation(line: 4717, column: 12, scope: !12199)
!12204 = !DILocation(line: 4717, column: 5, scope: !12199)
!12205 = !DILocation(line: 4719, column: 47, scope: !12179)
!12206 = !DILocation(line: 4719, column: 14, scope: !12179)
!12207 = !DILocation(line: 4719, column: 13, scope: !12179)
!12208 = !DILocation(line: 4720, column: 3, scope: !12179)
!12209 = !DILocation(line: 4720, column: 15, scope: !12179)
!12210 = !DILocation(line: 4720, column: 20, scope: !12179)
!12211 = !DILocation(line: 4720, column: 31, scope: !12179)
!12212 = !DILocation(line: 4721, column: 7, scope: !12213)
!12213 = distinct !DILexicalBlock(scope: !12179, file: !1, line: 4721, column: 7)
!12214 = !DILocation(line: 4721, column: 19, scope: !12213)
!12215 = !DILocation(line: 4721, column: 32, scope: !12213)
!12216 = !DILocation(line: 4721, column: 7, scope: !12179)
!12217 = !DILocation(line: 4722, column: 43, scope: !12213)
!12218 = !DILocation(line: 4722, column: 55, scope: !12213)
!12219 = !DILocation(line: 4722, column: 30, scope: !12213)
!12220 = !DILocation(line: 4722, column: 5, scope: !12213)
!12221 = !DILocation(line: 4722, column: 17, scope: !12213)
!12222 = !DILocation(line: 4722, column: 29, scope: !12213)
!12223 = !DILocation(line: 4723, column: 7, scope: !12224)
!12224 = distinct !DILexicalBlock(scope: !12179, file: !1, line: 4723, column: 7)
!12225 = !DILocation(line: 4723, column: 19, scope: !12224)
!12226 = !DILocation(line: 4723, column: 34, scope: !12224)
!12227 = !DILocation(line: 4723, column: 7, scope: !12179)
!12228 = !DILocation(line: 4724, column: 41, scope: !12224)
!12229 = !DILocation(line: 4724, column: 53, scope: !12224)
!12230 = !DILocation(line: 4725, column: 19, scope: !12224)
!12231 = !DILocation(line: 4725, column: 31, scope: !12224)
!12232 = !DILocation(line: 4725, column: 47, scope: !12224)
!12233 = !DILocation(line: 4724, column: 30, scope: !12224)
!12234 = !DILocation(line: 4724, column: 5, scope: !12224)
!12235 = !DILocation(line: 4724, column: 17, scope: !12224)
!12236 = !DILocation(line: 4724, column: 29, scope: !12224)
!12237 = !DILocation(line: 4726, column: 3, scope: !12179)
!12238 = !DILocation(line: 4726, column: 15, scope: !12179)
!12239 = !DILocation(line: 4726, column: 22, scope: !12179)
!12240 = !DILocation(line: 4726, column: 29, scope: !12179)
!12241 = !DILocation(line: 4727, column: 3, scope: !12179)
!12242 = !DILocation(line: 4727, column: 15, scope: !12179)
!12243 = !DILocation(line: 4727, column: 27, scope: !12179)
!12244 = !DILocation(line: 4728, column: 3, scope: !12179)
!12245 = !DILocation(line: 4728, column: 15, scope: !12179)
!12246 = !DILocation(line: 4728, column: 24, scope: !12179)
!12247 = !DILocation(line: 4729, column: 9, scope: !12179)
!12248 = !DILocation(line: 4730, column: 10, scope: !12249)
!12249 = distinct !DILexicalBlock(scope: !12179, file: !1, line: 4730, column: 3)
!12250 = !DILocation(line: 4730, column: 9, scope: !12249)
!12251 = !DILocation(line: 4730, column: 8, scope: !12249)
!12252 = !DILocation(line: 4730, column: 26, scope: !12253)
!12253 = distinct !DILexicalBlock(scope: !12249, file: !1, line: 4730, column: 3)
!12254 = !DILocation(line: 4730, column: 29, scope: !12253)
!12255 = !DILocation(line: 4730, column: 39, scope: !12253)
!12256 = !DILocation(line: 4730, column: 3, scope: !12249)
!12257 = !DILocation(line: 4732, column: 39, scope: !12258)
!12258 = distinct !DILexicalBlock(scope: !12253, file: !1, line: 4731, column: 3)
!12259 = !DILocation(line: 4732, column: 49, scope: !12258)
!12260 = !DILocation(line: 4732, column: 20, scope: !12258)
!12261 = !DILocation(line: 4732, column: 19, scope: !12258)
!12262 = !DILocation(line: 4733, column: 34, scope: !12258)
!12263 = !DILocation(line: 4733, column: 40, scope: !12258)
!12264 = !DILocation(line: 4733, column: 51, scope: !12258)
!12265 = !DILocation(line: 4733, column: 13, scope: !12258)
!12266 = !DILocation(line: 4733, column: 11, scope: !12258)
!12267 = !DILocation(line: 4734, column: 9, scope: !12268)
!12268 = distinct !DILexicalBlock(scope: !12258, file: !1, line: 4734, column: 9)
!12269 = !DILocation(line: 4734, column: 16, scope: !12268)
!12270 = !DILocation(line: 4734, column: 9, scope: !12258)
!12271 = !DILocation(line: 4735, column: 7, scope: !12268)
!12272 = !DILocation(line: 4736, column: 61, scope: !12258)
!12273 = !DILocation(line: 4736, column: 38, scope: !12258)
!12274 = !DILocation(line: 4736, column: 20, scope: !12258)
!12275 = !DILocation(line: 4736, column: 19, scope: !12258)
!12276 = !DILocation(line: 4737, column: 7, scope: !12258)
!12277 = !DILocation(line: 4737, column: 9, scope: !12258)
!12278 = !DILocation(line: 4737, column: 12, scope: !12258)
!12279 = !DILocation(line: 4737, column: 8, scope: !12258)
!12280 = !DILocation(line: 4737, column: 23, scope: !12258)
!12281 = !DILocation(line: 4737, column: 6, scope: !12258)
!12282 = !DILocation(line: 4738, column: 18, scope: !12258)
!12283 = !DILocation(line: 4738, column: 21, scope: !12258)
!12284 = !DILocation(line: 4738, column: 27, scope: !12258)
!12285 = !DILocation(line: 4738, column: 32, scope: !12258)
!12286 = !DILocation(line: 4738, column: 35, scope: !12258)
!12287 = !DILocation(line: 4738, column: 41, scope: !12258)
!12288 = !DILocation(line: 4738, column: 29, scope: !12258)
!12289 = !DILocation(line: 4738, column: 44, scope: !12258)
!12290 = !DILocation(line: 4738, column: 48, scope: !12258)
!12291 = !DILocation(line: 4738, column: 51, scope: !12258)
!12292 = !DILocation(line: 4738, column: 57, scope: !12258)
!12293 = !DILocation(line: 4738, column: 62, scope: !12258)
!12294 = !DILocation(line: 4738, column: 65, scope: !12258)
!12295 = !DILocation(line: 4738, column: 71, scope: !12258)
!12296 = !DILocation(line: 4738, column: 59, scope: !12258)
!12297 = !DILocation(line: 0, scope: !12258)
!12298 = !DILocation(line: 4738, column: 17, scope: !12258)
!12299 = !DILocation(line: 4738, column: 16, scope: !12258)
!12300 = !DILocation(line: 4740, column: 10, scope: !12301)
!12301 = distinct !DILexicalBlock(scope: !12258, file: !1, line: 4740, column: 9)
!12302 = !DILocation(line: 4740, column: 21, scope: !12301)
!12303 = !DILocation(line: 4740, column: 29, scope: !12301)
!12304 = !DILocation(line: 4740, column: 42, scope: !12301)
!12305 = !DILocation(line: 4740, column: 46, scope: !12301)
!12306 = !DILocation(line: 4740, column: 58, scope: !12301)
!12307 = !DILocation(line: 4740, column: 9, scope: !12258)
!12308 = !DILocation(line: 4742, column: 26, scope: !12309)
!12309 = distinct !DILexicalBlock(scope: !12301, file: !1, line: 4741, column: 7)
!12310 = !DILocation(line: 4742, column: 32, scope: !12309)
!12311 = !DILocation(line: 4742, column: 42, scope: !12309)
!12312 = !DILocation(line: 4742, column: 9, scope: !12309)
!12313 = !DILocation(line: 4743, column: 26, scope: !12309)
!12314 = !DILocation(line: 4743, column: 32, scope: !12309)
!12315 = !DILocation(line: 4743, column: 42, scope: !12309)
!12316 = !DILocation(line: 4743, column: 9, scope: !12309)
!12317 = !DILocation(line: 4744, column: 7, scope: !12309)
!12318 = !DILocation(line: 4745, column: 3, scope: !12258)
!12319 = !DILocation(line: 4730, column: 65, scope: !12253)
!12320 = !DILocation(line: 4730, column: 68, scope: !12253)
!12321 = !DILocation(line: 4730, column: 63, scope: !12253)
!12322 = !DILocation(line: 4730, column: 3, scope: !12253)
!12323 = distinct !{!12323, !12256, !12324}
!12324 = !DILocation(line: 4745, column: 3, scope: !12249)
!12325 = !DILocation(line: 4746, column: 30, scope: !12179)
!12326 = !DILocation(line: 4746, column: 14, scope: !12179)
!12327 = !DILocation(line: 4746, column: 13, scope: !12179)
!12328 = !DILocation(line: 4747, column: 7, scope: !12329)
!12329 = distinct !DILexicalBlock(scope: !12179, file: !1, line: 4747, column: 7)
!12330 = !DILocation(line: 4747, column: 14, scope: !12329)
!12331 = !DILocation(line: 4747, column: 20, scope: !12329)
!12332 = !DILocation(line: 4747, column: 7, scope: !12179)
!12333 = !DILocation(line: 4748, column: 12, scope: !12329)
!12334 = !DILocation(line: 4748, column: 5, scope: !12329)
!12335 = !DILocation(line: 4750, column: 10, scope: !12179)
!12336 = !DILocation(line: 4750, column: 17, scope: !12179)
!12337 = !DILocation(line: 4750, column: 3, scope: !12179)
!12338 = distinct !DISubprogram(name: "PerceptibleReciprocal", scope: !2945, file: !2945, line: 78, type: !7038, scopeLine: 79, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1236)
!12339 = !DILocalVariable(name: "x", arg: 1, scope: !12338, file: !2945, line: 78, type: !2570)
!12340 = !DILocation(line: 78, column: 57, scope: !12338)
!12341 = !DILocalVariable(name: "sign", scope: !12338, file: !2945, line: 81, type: !728)
!12342 = !DILocation(line: 81, column: 5, scope: !12338)
!12343 = !DILocation(line: 86, column: 8, scope: !12338)
!12344 = !DILocation(line: 86, column: 10, scope: !12338)
!12345 = !DILocation(line: 86, column: 7, scope: !12338)
!12346 = !DILocation(line: 87, column: 8, scope: !12347)
!12347 = distinct !DILexicalBlock(scope: !12338, file: !2945, line: 87, column: 7)
!12348 = !DILocation(line: 87, column: 13, scope: !12347)
!12349 = !DILocation(line: 87, column: 12, scope: !12347)
!12350 = !DILocation(line: 87, column: 16, scope: !12347)
!12351 = !DILocation(line: 87, column: 7, scope: !12338)
!12352 = !DILocation(line: 88, column: 16, scope: !12347)
!12353 = !DILocation(line: 88, column: 15, scope: !12347)
!12354 = !DILocation(line: 88, column: 5, scope: !12347)
!12355 = !DILocation(line: 89, column: 10, scope: !12338)
!12356 = !DILocation(line: 89, column: 14, scope: !12338)
!12357 = !DILocation(line: 89, column: 3, scope: !12338)
!12358 = !DILocation(line: 90, column: 1, scope: !12338)
!12359 = distinct !DISubprogram(name: "MagickOver_", scope: !2994, file: !2994, line: 38, type: !12360, scopeLine: 40, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1236)
!12360 = !DISubroutineType(types: !12361)
!12361 = !{!781, !2999, !2999, !2999, !2999}
!12362 = !DILocalVariable(name: "p", arg: 1, scope: !12359, file: !2994, line: 38, type: !2999)
!12363 = !DILocation(line: 38, column: 63, scope: !12359)
!12364 = !DILocalVariable(name: "alpha", arg: 2, scope: !12359, file: !2994, line: 39, type: !2999)
!12365 = !DILocation(line: 39, column: 24, scope: !12359)
!12366 = !DILocalVariable(name: "q", arg: 3, scope: !12359, file: !2994, line: 39, type: !2999)
!12367 = !DILocation(line: 39, column: 51, scope: !12359)
!12368 = !DILocalVariable(name: "beta", arg: 4, scope: !12359, file: !2994, line: 39, type: !2999)
!12369 = !DILocation(line: 39, column: 74, scope: !12359)
!12370 = !DILocation(line: 41, column: 28, scope: !12359)
!12371 = !DILocation(line: 41, column: 27, scope: !12359)
!12372 = !DILocation(line: 41, column: 14, scope: !12359)
!12373 = !DILocation(line: 41, column: 35, scope: !12359)
!12374 = !DILocation(line: 41, column: 34, scope: !12359)
!12375 = !DILocation(line: 41, column: 55, scope: !12359)
!12376 = !DILocation(line: 41, column: 54, scope: !12359)
!12377 = !DILocation(line: 41, column: 41, scope: !12359)
!12378 = !DILocation(line: 41, column: 61, scope: !12359)
!12379 = !DILocation(line: 41, column: 60, scope: !12359)
!12380 = !DILocation(line: 41, column: 62, scope: !12359)
!12381 = !DILocation(line: 42, column: 18, scope: !12359)
!12382 = !DILocation(line: 42, column: 17, scope: !12359)
!12383 = !DILocation(line: 41, column: 36, scope: !12359)
!12384 = !DILocation(line: 41, column: 9, scope: !12359)
!12385 = !DILocation(line: 41, column: 3, scope: !12359)
!12386 = distinct !DISubprogram(name: "MagickPixelCompositePlus", scope: !2994, file: !2994, line: 114, type: !2995, scopeLine: 117, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1236)
!12387 = !DILocalVariable(name: "p", arg: 1, scope: !12386, file: !2994, line: 114, type: !2997)
!12388 = !DILocation(line: 114, column: 70, scope: !12386)
!12389 = !DILocalVariable(name: "alpha", arg: 2, scope: !12386, file: !2994, line: 115, type: !2999)
!12390 = !DILocation(line: 115, column: 24, scope: !12386)
!12391 = !DILocalVariable(name: "q", arg: 3, scope: !12386, file: !2994, line: 115, type: !2997)
!12392 = !DILocation(line: 115, column: 55, scope: !12386)
!12393 = !DILocalVariable(name: "beta", arg: 4, scope: !12386, file: !2994, line: 116, type: !2999)
!12394 = !DILocation(line: 116, column: 24, scope: !12386)
!12395 = !DILocalVariable(name: "composite", arg: 5, scope: !12386, file: !2994, line: 116, type: !2950)
!12396 = !DILocation(line: 116, column: 48, scope: !12386)
!12397 = !DILocalVariable(name: "gamma", scope: !12386, file: !2994, line: 119, type: !728)
!12398 = !DILocation(line: 119, column: 5, scope: !12386)
!12399 = !DILocalVariable(name: "Da", scope: !12386, file: !2994, line: 122, type: !781)
!12400 = !DILocation(line: 122, column: 5, scope: !12386)
!12401 = !DILocalVariable(name: "Sa", scope: !12386, file: !2994, line: 123, type: !781)
!12402 = !DILocation(line: 123, column: 5, scope: !12386)
!12403 = !DILocation(line: 128, column: 23, scope: !12386)
!12404 = !DILocation(line: 128, column: 22, scope: !12386)
!12405 = !DILocation(line: 128, column: 9, scope: !12386)
!12406 = !DILocation(line: 128, column: 6, scope: !12386)
!12407 = !DILocation(line: 128, column: 5, scope: !12386)
!12408 = !DILocation(line: 129, column: 23, scope: !12386)
!12409 = !DILocation(line: 129, column: 22, scope: !12386)
!12410 = !DILocation(line: 129, column: 9, scope: !12386)
!12411 = !DILocation(line: 129, column: 6, scope: !12386)
!12412 = !DILocation(line: 129, column: 5, scope: !12386)
!12413 = !DILocation(line: 130, column: 22, scope: !12386)
!12414 = !DILocation(line: 130, column: 25, scope: !12386)
!12415 = !DILocation(line: 130, column: 24, scope: !12386)
!12416 = !DILocation(line: 130, column: 9, scope: !12386)
!12417 = !DILocation(line: 130, column: 8, scope: !12386)
!12418 = !DILocation(line: 131, column: 57, scope: !12386)
!12419 = !DILocation(line: 131, column: 56, scope: !12386)
!12420 = !DILocation(line: 131, column: 51, scope: !12386)
!12421 = !DILocation(line: 131, column: 22, scope: !12386)
!12422 = !DILocation(line: 131, column: 3, scope: !12386)
!12423 = !DILocation(line: 131, column: 14, scope: !12386)
!12424 = !DILocation(line: 131, column: 21, scope: !12386)
!12425 = !DILocation(line: 132, column: 31, scope: !12386)
!12426 = !DILocation(line: 132, column: 9, scope: !12386)
!12427 = !DILocation(line: 132, column: 8, scope: !12386)
!12428 = !DILocation(line: 133, column: 18, scope: !12386)
!12429 = !DILocation(line: 133, column: 25, scope: !12386)
!12430 = !DILocation(line: 133, column: 28, scope: !12386)
!12431 = !DILocation(line: 133, column: 31, scope: !12386)
!12432 = !DILocation(line: 133, column: 27, scope: !12386)
!12433 = !DILocation(line: 133, column: 35, scope: !12386)
!12434 = !DILocation(line: 133, column: 38, scope: !12386)
!12435 = !DILocation(line: 133, column: 41, scope: !12386)
!12436 = !DILocation(line: 133, column: 37, scope: !12386)
!12437 = !DILocation(line: 133, column: 34, scope: !12386)
!12438 = !DILocation(line: 133, column: 24, scope: !12386)
!12439 = !DILocation(line: 133, column: 23, scope: !12386)
!12440 = !DILocation(line: 133, column: 3, scope: !12386)
!12441 = !DILocation(line: 133, column: 14, scope: !12386)
!12442 = !DILocation(line: 133, column: 17, scope: !12386)
!12443 = !DILocation(line: 134, column: 20, scope: !12386)
!12444 = !DILocation(line: 134, column: 27, scope: !12386)
!12445 = !DILocation(line: 134, column: 30, scope: !12386)
!12446 = !DILocation(line: 134, column: 33, scope: !12386)
!12447 = !DILocation(line: 134, column: 29, scope: !12386)
!12448 = !DILocation(line: 134, column: 39, scope: !12386)
!12449 = !DILocation(line: 134, column: 42, scope: !12386)
!12450 = !DILocation(line: 134, column: 45, scope: !12386)
!12451 = !DILocation(line: 134, column: 41, scope: !12386)
!12452 = !DILocation(line: 134, column: 38, scope: !12386)
!12453 = !DILocation(line: 134, column: 26, scope: !12386)
!12454 = !DILocation(line: 134, column: 25, scope: !12386)
!12455 = !DILocation(line: 134, column: 3, scope: !12386)
!12456 = !DILocation(line: 134, column: 14, scope: !12386)
!12457 = !DILocation(line: 134, column: 19, scope: !12386)
!12458 = !DILocation(line: 135, column: 19, scope: !12386)
!12459 = !DILocation(line: 135, column: 26, scope: !12386)
!12460 = !DILocation(line: 135, column: 29, scope: !12386)
!12461 = !DILocation(line: 135, column: 32, scope: !12386)
!12462 = !DILocation(line: 135, column: 28, scope: !12386)
!12463 = !DILocation(line: 135, column: 37, scope: !12386)
!12464 = !DILocation(line: 135, column: 40, scope: !12386)
!12465 = !DILocation(line: 135, column: 43, scope: !12386)
!12466 = !DILocation(line: 135, column: 39, scope: !12386)
!12467 = !DILocation(line: 135, column: 36, scope: !12386)
!12468 = !DILocation(line: 135, column: 25, scope: !12386)
!12469 = !DILocation(line: 135, column: 24, scope: !12386)
!12470 = !DILocation(line: 135, column: 3, scope: !12386)
!12471 = !DILocation(line: 135, column: 14, scope: !12386)
!12472 = !DILocation(line: 135, column: 18, scope: !12386)
!12473 = !DILocation(line: 136, column: 7, scope: !12474)
!12474 = distinct !DILexicalBlock(scope: !12386, file: !2994, line: 136, column: 7)
!12475 = !DILocation(line: 136, column: 10, scope: !12474)
!12476 = !DILocation(line: 136, column: 21, scope: !12474)
!12477 = !DILocation(line: 136, column: 7, scope: !12386)
!12478 = !DILocation(line: 137, column: 22, scope: !12474)
!12479 = !DILocation(line: 137, column: 29, scope: !12474)
!12480 = !DILocation(line: 137, column: 32, scope: !12474)
!12481 = !DILocation(line: 137, column: 35, scope: !12474)
!12482 = !DILocation(line: 137, column: 31, scope: !12474)
!12483 = !DILocation(line: 137, column: 41, scope: !12474)
!12484 = !DILocation(line: 137, column: 44, scope: !12474)
!12485 = !DILocation(line: 137, column: 47, scope: !12474)
!12486 = !DILocation(line: 137, column: 43, scope: !12474)
!12487 = !DILocation(line: 137, column: 40, scope: !12474)
!12488 = !DILocation(line: 137, column: 28, scope: !12474)
!12489 = !DILocation(line: 137, column: 27, scope: !12474)
!12490 = !DILocation(line: 137, column: 5, scope: !12474)
!12491 = !DILocation(line: 137, column: 16, scope: !12474)
!12492 = !DILocation(line: 137, column: 21, scope: !12474)
!12493 = !DILocation(line: 138, column: 1, scope: !12386)
!12494 = distinct !DISubprogram(name: "RoundToUnity", scope: !2994, file: !2994, line: 33, type: !12495, scopeLine: 34, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1236)
!12495 = !DISubroutineType(types: !12496)
!12496 = !{!781, !2999}
!12497 = !DILocalVariable(name: "value", arg: 1, scope: !12494, file: !2994, line: 33, type: !2999)
!12498 = !DILocation(line: 33, column: 64, scope: !12494)
!12499 = !DILocation(line: 35, column: 10, scope: !12494)
!12500 = !DILocation(line: 35, column: 16, scope: !12494)
!12501 = !DILocation(line: 35, column: 31, scope: !12494)
!12502 = !DILocation(line: 35, column: 37, scope: !12494)
!12503 = !DILocation(line: 35, column: 30, scope: !12494)
!12504 = !DILocation(line: 35, column: 52, scope: !12494)
!12505 = !DILocation(line: 35, column: 9, scope: !12494)
!12506 = !DILocation(line: 35, column: 3, scope: !12494)
!12507 = distinct !DISubprogram(name: "AbsolutePixelValue", scope: !10829, file: !10829, line: 111, type: !12495, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1236)
!12508 = !DILocalVariable(name: "x", arg: 1, scope: !12507, file: !10829, line: 111, type: !2999)
!12509 = !DILocation(line: 111, column: 70, scope: !12507)
!12510 = !DILocation(line: 113, column: 10, scope: !12507)
!12511 = !DILocation(line: 113, column: 12, scope: !12507)
!12512 = !DILocation(line: 113, column: 22, scope: !12507)
!12513 = !DILocation(line: 113, column: 21, scope: !12507)
!12514 = !DILocation(line: 113, column: 26, scope: !12507)
!12515 = !DILocation(line: 113, column: 3, scope: !12507)
!12516 = distinct !DISubprogram(name: "AcquirePolygonThreadSet", scope: !1, file: !1, line: 3643, type: !12517, scopeLine: 3645, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1236)
!12517 = !DISubroutineType(types: !12518)
!12518 = !{!1201, !1525, !8925}
!12519 = !DILocalVariable(name: "draw_info", arg: 1, scope: !12516, file: !1, line: 3643, type: !1525)
!12520 = !DILocation(line: 3643, column: 62, scope: !12516)
!12521 = !DILocalVariable(name: "primitive_info", arg: 2, scope: !12516, file: !1, line: 3644, type: !8925)
!12522 = !DILocation(line: 3644, column: 24, scope: !12516)
!12523 = !DILocalVariable(name: "path_info", scope: !12516, file: !1, line: 3647, type: !12524)
!12524 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !1220)
!12525 = !DILocation(line: 3647, column: 15, scope: !12516)
!12526 = !DILocalVariable(name: "polygon_info", scope: !12516, file: !1, line: 3650, type: !1201)
!12527 = !DILocation(line: 3650, column: 7, scope: !12516)
!12528 = !DILocalVariable(name: "i", scope: !12516, file: !1, line: 3653, type: !717)
!12529 = !DILocation(line: 3653, column: 5, scope: !12516)
!12530 = !DILocalVariable(name: "number_threads", scope: !12516, file: !1, line: 3656, type: !712)
!12531 = !DILocation(line: 3656, column: 5, scope: !12516)
!12532 = !DILocation(line: 3658, column: 27, scope: !12516)
!12533 = !DILocation(line: 3658, column: 17, scope: !12516)
!12534 = !DILocation(line: 3659, column: 54, scope: !12516)
!12535 = !DILocation(line: 3659, column: 33, scope: !12516)
!12536 = !DILocation(line: 3659, column: 16, scope: !12516)
!12537 = !DILocation(line: 3659, column: 15, scope: !12516)
!12538 = !DILocation(line: 3661, column: 7, scope: !12539)
!12539 = distinct !DILexicalBlock(scope: !12516, file: !1, line: 3661, column: 7)
!12540 = !DILocation(line: 3661, column: 20, scope: !12539)
!12541 = !DILocation(line: 3661, column: 7, scope: !12516)
!12542 = !DILocation(line: 3662, column: 5, scope: !12539)
!12543 = !DILocation(line: 3663, column: 28, scope: !12516)
!12544 = !DILocation(line: 3664, column: 5, scope: !12516)
!12545 = !DILocation(line: 3664, column: 43, scope: !12516)
!12546 = !DILocation(line: 3663, column: 10, scope: !12516)
!12547 = !DILocation(line: 3665, column: 36, scope: !12516)
!12548 = !DILocation(line: 3665, column: 46, scope: !12516)
!12549 = !DILocation(line: 3665, column: 13, scope: !12516)
!12550 = !DILocation(line: 3665, column: 12, scope: !12516)
!12551 = !DILocation(line: 3666, column: 7, scope: !12552)
!12552 = distinct !DILexicalBlock(scope: !12516, file: !1, line: 3666, column: 7)
!12553 = !DILocation(line: 3666, column: 17, scope: !12552)
!12554 = !DILocation(line: 3666, column: 7, scope: !12516)
!12555 = !DILocation(line: 3667, column: 36, scope: !12552)
!12556 = !DILocation(line: 3667, column: 12, scope: !12552)
!12557 = !DILocation(line: 3667, column: 5, scope: !12552)
!12558 = !DILocation(line: 3668, column: 9, scope: !12559)
!12559 = distinct !DILexicalBlock(scope: !12516, file: !1, line: 3668, column: 3)
!12560 = !DILocation(line: 3668, column: 8, scope: !12559)
!12561 = !DILocation(line: 3668, column: 13, scope: !12562)
!12562 = distinct !DILexicalBlock(scope: !12559, file: !1, line: 3668, column: 3)
!12563 = !DILocation(line: 3668, column: 27, scope: !12562)
!12564 = !DILocation(line: 3668, column: 15, scope: !12562)
!12565 = !DILocation(line: 3668, column: 3, scope: !12559)
!12566 = !DILocation(line: 3670, column: 42, scope: !12567)
!12567 = distinct !DILexicalBlock(scope: !12562, file: !1, line: 3669, column: 3)
!12568 = !DILocation(line: 3670, column: 52, scope: !12567)
!12569 = !DILocation(line: 3670, column: 21, scope: !12567)
!12570 = !DILocation(line: 3670, column: 5, scope: !12567)
!12571 = !DILocation(line: 3670, column: 18, scope: !12567)
!12572 = !DILocation(line: 3670, column: 20, scope: !12567)
!12573 = !DILocation(line: 3671, column: 9, scope: !12574)
!12574 = distinct !DILexicalBlock(scope: !12567, file: !1, line: 3671, column: 9)
!12575 = !DILocation(line: 3671, column: 22, scope: !12574)
!12576 = !DILocation(line: 3671, column: 25, scope: !12574)
!12577 = !DILocation(line: 3671, column: 9, scope: !12567)
!12578 = !DILocation(line: 3672, column: 38, scope: !12574)
!12579 = !DILocation(line: 3672, column: 14, scope: !12574)
!12580 = !DILocation(line: 3672, column: 7, scope: !12574)
!12581 = !DILocation(line: 3673, column: 3, scope: !12567)
!12582 = !DILocation(line: 3668, column: 44, scope: !12562)
!12583 = !DILocation(line: 3668, column: 3, scope: !12562)
!12584 = distinct !{!12584, !12565, !12585}
!12585 = !DILocation(line: 3673, column: 3, scope: !12559)
!12586 = !DILocation(line: 3674, column: 49, scope: !12516)
!12587 = !DILocation(line: 3674, column: 26, scope: !12516)
!12588 = !DILocation(line: 3674, column: 13, scope: !12516)
!12589 = !DILocation(line: 3674, column: 12, scope: !12516)
!12590 = !DILocation(line: 3675, column: 10, scope: !12516)
!12591 = !DILocation(line: 3675, column: 3, scope: !12516)
!12592 = !DILocation(line: 3676, column: 1, scope: !12516)
!12593 = distinct !DISubprogram(name: "GetStrokeColor", scope: !10869, file: !10869, line: 52, type: !10870, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1236)
!12594 = !DILocalVariable(name: "draw_info", arg: 1, scope: !12593, file: !10869, line: 52, type: !1525)
!12595 = !DILocation(line: 52, column: 64, scope: !12593)
!12596 = !DILocalVariable(name: "x", arg: 2, scope: !12593, file: !10869, line: 53, type: !10636)
!12597 = !DILocation(line: 53, column: 17, scope: !12593)
!12598 = !DILocalVariable(name: "y", arg: 3, scope: !12593, file: !10869, line: 53, type: !10636)
!12599 = !DILocation(line: 53, column: 33, scope: !12593)
!12600 = !DILocalVariable(name: "pixel", arg: 4, scope: !12593, file: !10869, line: 53, type: !819)
!12601 = !DILocation(line: 53, column: 48, scope: !12593)
!12602 = !DILocalVariable(name: "pattern", scope: !12593, file: !10869, line: 56, type: !801)
!12603 = !DILocation(line: 56, column: 6, scope: !12593)
!12604 = !DILocalVariable(name: "status", scope: !12593, file: !10869, line: 59, type: !777)
!12605 = !DILocation(line: 59, column: 5, scope: !12593)
!12606 = !DILocation(line: 61, column: 11, scope: !12593)
!12607 = !DILocation(line: 61, column: 22, scope: !12593)
!12608 = !DILocation(line: 61, column: 10, scope: !12593)
!12609 = !DILocation(line: 62, column: 7, scope: !12610)
!12610 = distinct !DILexicalBlock(scope: !12593, file: !10869, line: 62, column: 7)
!12611 = !DILocation(line: 62, column: 15, scope: !12610)
!12612 = !DILocation(line: 62, column: 7, scope: !12593)
!12613 = !DILocation(line: 64, column: 8, scope: !12614)
!12614 = distinct !DILexicalBlock(scope: !12610, file: !10869, line: 63, column: 5)
!12615 = !DILocation(line: 64, column: 14, scope: !12614)
!12616 = !DILocation(line: 64, column: 25, scope: !12614)
!12617 = !DILocation(line: 65, column: 7, scope: !12614)
!12618 = !DILocation(line: 67, column: 35, scope: !12593)
!12619 = !DILocation(line: 68, column: 5, scope: !12593)
!12620 = !DILocation(line: 68, column: 7, scope: !12593)
!12621 = !DILocation(line: 68, column: 16, scope: !12593)
!12622 = !DILocation(line: 68, column: 28, scope: !12593)
!12623 = !DILocation(line: 68, column: 6, scope: !12593)
!12624 = !DILocation(line: 68, column: 30, scope: !12593)
!12625 = !DILocation(line: 68, column: 32, scope: !12593)
!12626 = !DILocation(line: 68, column: 41, scope: !12593)
!12627 = !DILocation(line: 68, column: 53, scope: !12593)
!12628 = !DILocation(line: 68, column: 31, scope: !12593)
!12629 = !DILocation(line: 68, column: 55, scope: !12593)
!12630 = !DILocation(line: 69, column: 6, scope: !12593)
!12631 = !DILocation(line: 69, column: 15, scope: !12593)
!12632 = !DILocation(line: 67, column: 10, scope: !12593)
!12633 = !DILocation(line: 67, column: 9, scope: !12593)
!12634 = !DILocation(line: 70, column: 7, scope: !12635)
!12635 = distinct !DILexicalBlock(scope: !12593, file: !10869, line: 70, column: 7)
!12636 = !DILocation(line: 70, column: 16, scope: !12635)
!12637 = !DILocation(line: 70, column: 22, scope: !12635)
!12638 = !DILocation(line: 70, column: 7, scope: !12593)
!12639 = !DILocation(line: 71, column: 5, scope: !12635)
!12640 = !DILocation(line: 71, column: 12, scope: !12635)
!12641 = !DILocation(line: 71, column: 19, scope: !12635)
!12642 = !DILocation(line: 72, column: 10, scope: !12593)
!12643 = !DILocation(line: 72, column: 3, scope: !12593)
!12644 = !DILocation(line: 73, column: 1, scope: !12593)
!12645 = distinct !DISubprogram(name: "DestroyPolygonThreadSet", scope: !1, file: !1, line: 3630, type: !12646, scopeLine: 3631, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1236)
!12646 = !DISubroutineType(types: !12647)
!12647 = !{!1201, !1201}
!12648 = !DILocalVariable(name: "polygon_info", arg: 1, scope: !12645, file: !1, line: 3630, type: !1201)
!12649 = !DILocation(line: 3630, column: 60, scope: !12645)
!12650 = !DILocalVariable(name: "i", scope: !12645, file: !1, line: 3633, type: !717)
!12651 = !DILocation(line: 3633, column: 5, scope: !12645)
!12652 = !DILocation(line: 3636, column: 9, scope: !12653)
!12653 = distinct !DILexicalBlock(scope: !12645, file: !1, line: 3636, column: 3)
!12654 = !DILocation(line: 3636, column: 8, scope: !12653)
!12655 = !DILocation(line: 3636, column: 13, scope: !12656)
!12656 = distinct !DILexicalBlock(scope: !12653, file: !1, line: 3636, column: 3)
!12657 = !DILocation(line: 3636, column: 27, scope: !12656)
!12658 = !DILocation(line: 3636, column: 15, scope: !12656)
!12659 = !DILocation(line: 3636, column: 3, scope: !12653)
!12660 = !DILocation(line: 3637, column: 9, scope: !12661)
!12661 = distinct !DILexicalBlock(scope: !12656, file: !1, line: 3637, column: 9)
!12662 = !DILocation(line: 3637, column: 22, scope: !12661)
!12663 = !DILocation(line: 3637, column: 25, scope: !12661)
!12664 = !DILocation(line: 3637, column: 9, scope: !12656)
!12665 = !DILocation(line: 3638, column: 42, scope: !12661)
!12666 = !DILocation(line: 3638, column: 55, scope: !12661)
!12667 = !DILocation(line: 3638, column: 23, scope: !12661)
!12668 = !DILocation(line: 3638, column: 7, scope: !12661)
!12669 = !DILocation(line: 3638, column: 20, scope: !12661)
!12670 = !DILocation(line: 3638, column: 22, scope: !12661)
!12671 = !DILocation(line: 3637, column: 44, scope: !12661)
!12672 = !DILocation(line: 3636, column: 68, scope: !12656)
!12673 = !DILocation(line: 3636, column: 3, scope: !12656)
!12674 = distinct !{!12674, !12659, !12675}
!12675 = !DILocation(line: 3638, column: 57, scope: !12653)
!12676 = !DILocation(line: 3639, column: 56, scope: !12645)
!12677 = !DILocation(line: 3639, column: 33, scope: !12645)
!12678 = !DILocation(line: 3639, column: 16, scope: !12645)
!12679 = !DILocation(line: 3639, column: 15, scope: !12645)
!12680 = !DILocation(line: 3640, column: 10, scope: !12645)
!12681 = !DILocation(line: 3640, column: 3, scope: !12645)
!12682 = distinct !DISubprogram(name: "GetOpenMPThreadId", scope: !12683, file: !12683, line: 117, type: !12684, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1236)
!12683 = !DIFile(filename: "./magick/thread-private.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!12684 = !DISubroutineType(types: !12685)
!12685 = !{!575}
!12686 = !DILocation(line: 122, column: 3, scope: !12682)
!12687 = distinct !DISubprogram(name: "GetOpacityPixel", scope: !1, file: !1, line: 3678, type: !12688, scopeLine: 3681, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1236)
!12688 = !DISubroutineType(types: !12689)
!12689 = !{!728, !1202, !2570, !12690, !12691, !10636, !10636, !1025}
!12690 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !777)
!12691 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !996)
!12692 = !DILocalVariable(name: "polygon_info", arg: 1, scope: !12687, file: !1, line: 3678, type: !1202)
!12693 = !DILocation(line: 3678, column: 44, scope: !12687)
!12694 = !DILocalVariable(name: "mid", arg: 2, scope: !12687, file: !1, line: 3678, type: !2570)
!12695 = !DILocation(line: 3678, column: 70, scope: !12687)
!12696 = !DILocalVariable(name: "fill", arg: 3, scope: !12687, file: !1, line: 3679, type: !12690)
!12697 = !DILocation(line: 3679, column: 27, scope: !12687)
!12698 = !DILocalVariable(name: "fill_rule", arg: 4, scope: !12687, file: !1, line: 3679, type: !12691)
!12699 = !DILocation(line: 3679, column: 47, scope: !12687)
!12700 = !DILocalVariable(name: "x", arg: 5, scope: !12687, file: !1, line: 3679, type: !10636)
!12701 = !DILocation(line: 3679, column: 71, scope: !12687)
!12702 = !DILocalVariable(name: "y", arg: 6, scope: !12687, file: !1, line: 3680, type: !10636)
!12703 = !DILocation(line: 3680, column: 17, scope: !12687)
!12704 = !DILocalVariable(name: "stroke_opacity", arg: 7, scope: !12687, file: !1, line: 3680, type: !1025)
!12705 = !DILocation(line: 3680, column: 27, scope: !12687)
!12706 = !DILocalVariable(name: "alpha", scope: !12687, file: !1, line: 3683, type: !728)
!12707 = !DILocation(line: 3683, column: 5, scope: !12687)
!12708 = !DILocalVariable(name: "beta", scope: !12687, file: !1, line: 3684, type: !728)
!12709 = !DILocation(line: 3684, column: 5, scope: !12687)
!12710 = !DILocalVariable(name: "distance", scope: !12687, file: !1, line: 3685, type: !728)
!12711 = !DILocation(line: 3685, column: 5, scope: !12687)
!12712 = !DILocalVariable(name: "subpath_opacity", scope: !12687, file: !1, line: 3686, type: !728)
!12713 = !DILocation(line: 3686, column: 5, scope: !12687)
!12714 = !DILocalVariable(name: "delta", scope: !12687, file: !1, line: 3689, type: !794)
!12715 = !DILocation(line: 3689, column: 5, scope: !12687)
!12716 = !DILocalVariable(name: "p", scope: !12687, file: !1, line: 3692, type: !1207)
!12717 = !DILocation(line: 3692, column: 6, scope: !12687)
!12718 = !DILocalVariable(name: "q", scope: !12687, file: !1, line: 3695, type: !12719)
!12719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7078, size: 64)
!12720 = !DILocation(line: 3695, column: 6, scope: !12687)
!12721 = !DILocalVariable(name: "i", scope: !12687, file: !1, line: 3698, type: !717)
!12722 = !DILocation(line: 3698, column: 5, scope: !12687)
!12723 = !DILocalVariable(name: "j", scope: !12687, file: !1, line: 3701, type: !717)
!12724 = !DILocation(line: 3701, column: 5, scope: !12687)
!12725 = !DILocalVariable(name: "winding_number", scope: !12687, file: !1, line: 3702, type: !717)
!12726 = !DILocation(line: 3702, column: 5, scope: !12687)
!12727 = !DILocation(line: 3707, column: 4, scope: !12687)
!12728 = !DILocation(line: 3707, column: 18, scope: !12687)
!12729 = !DILocation(line: 3708, column: 18, scope: !12687)
!12730 = !DILocation(line: 3709, column: 5, scope: !12687)
!12731 = !DILocation(line: 3709, column: 19, scope: !12687)
!12732 = !DILocation(line: 3709, column: 4, scope: !12687)
!12733 = !DILocation(line: 3710, column: 9, scope: !12734)
!12734 = distinct !DILexicalBlock(scope: !12687, file: !1, line: 3710, column: 3)
!12735 = !DILocation(line: 3710, column: 8, scope: !12734)
!12736 = !DILocation(line: 3710, column: 13, scope: !12737)
!12737 = distinct !DILexicalBlock(scope: !12734, file: !1, line: 3710, column: 3)
!12738 = !DILocation(line: 3710, column: 27, scope: !12737)
!12739 = !DILocation(line: 3710, column: 41, scope: !12737)
!12740 = !DILocation(line: 3710, column: 15, scope: !12737)
!12741 = !DILocation(line: 3710, column: 3, scope: !12734)
!12742 = !DILocation(line: 3712, column: 18, scope: !12743)
!12743 = distinct !DILexicalBlock(scope: !12744, file: !1, line: 3712, column: 9)
!12744 = distinct !DILexicalBlock(scope: !12737, file: !1, line: 3711, column: 3)
!12745 = !DILocation(line: 3712, column: 9, scope: !12743)
!12746 = !DILocation(line: 3712, column: 24, scope: !12743)
!12747 = !DILocation(line: 3712, column: 27, scope: !12743)
!12748 = !DILocation(line: 3712, column: 34, scope: !12743)
!12749 = !DILocation(line: 3712, column: 37, scope: !12743)
!12750 = !DILocation(line: 3712, column: 36, scope: !12743)
!12751 = !DILocation(line: 3712, column: 40, scope: !12743)
!12752 = !DILocation(line: 3712, column: 20, scope: !12743)
!12753 = !DILocation(line: 3712, column: 9, scope: !12744)
!12754 = !DILocation(line: 3713, column: 7, scope: !12743)
!12755 = !DILocation(line: 3714, column: 18, scope: !12756)
!12756 = distinct !DILexicalBlock(scope: !12744, file: !1, line: 3714, column: 9)
!12757 = !DILocation(line: 3714, column: 9, scope: !12756)
!12758 = !DILocation(line: 3714, column: 23, scope: !12756)
!12759 = !DILocation(line: 3714, column: 26, scope: !12756)
!12760 = !DILocation(line: 3714, column: 33, scope: !12756)
!12761 = !DILocation(line: 3714, column: 36, scope: !12756)
!12762 = !DILocation(line: 3714, column: 35, scope: !12756)
!12763 = !DILocation(line: 3714, column: 39, scope: !12756)
!12764 = !DILocation(line: 3714, column: 20, scope: !12756)
!12765 = !DILocation(line: 3714, column: 9, scope: !12744)
!12766 = !DILocation(line: 3716, column: 28, scope: !12767)
!12767 = distinct !DILexicalBlock(scope: !12756, file: !1, line: 3715, column: 7)
!12768 = !DILocation(line: 3716, column: 50, scope: !12767)
!12769 = !DILocation(line: 3716, column: 16, scope: !12767)
!12770 = !DILocation(line: 3717, column: 9, scope: !12767)
!12771 = !DILocation(line: 3719, column: 19, scope: !12772)
!12772 = distinct !DILexicalBlock(scope: !12744, file: !1, line: 3719, column: 9)
!12773 = !DILocation(line: 3719, column: 10, scope: !12772)
!12774 = !DILocation(line: 3719, column: 25, scope: !12772)
!12775 = !DILocation(line: 3719, column: 28, scope: !12772)
!12776 = !DILocation(line: 3719, column: 35, scope: !12772)
!12777 = !DILocation(line: 3719, column: 38, scope: !12772)
!12778 = !DILocation(line: 3719, column: 37, scope: !12772)
!12779 = !DILocation(line: 3719, column: 41, scope: !12772)
!12780 = !DILocation(line: 3719, column: 21, scope: !12772)
!12781 = !DILocation(line: 3719, column: 48, scope: !12772)
!12782 = !DILocation(line: 3720, column: 19, scope: !12772)
!12783 = !DILocation(line: 3720, column: 10, scope: !12772)
!12784 = !DILocation(line: 3720, column: 24, scope: !12772)
!12785 = !DILocation(line: 3720, column: 27, scope: !12772)
!12786 = !DILocation(line: 3720, column: 34, scope: !12772)
!12787 = !DILocation(line: 3720, column: 37, scope: !12772)
!12788 = !DILocation(line: 3720, column: 36, scope: !12772)
!12789 = !DILocation(line: 3720, column: 40, scope: !12772)
!12790 = !DILocation(line: 3720, column: 21, scope: !12772)
!12791 = !DILocation(line: 3719, column: 9, scope: !12744)
!12792 = !DILocation(line: 3721, column: 7, scope: !12772)
!12793 = !DILocation(line: 3722, column: 36, scope: !12744)
!12794 = !DILocation(line: 3722, column: 39, scope: !12744)
!12795 = !DILocation(line: 3722, column: 27, scope: !12744)
!12796 = !DILocation(line: 3722, column: 17, scope: !12744)
!12797 = !DILocation(line: 3722, column: 7, scope: !12744)
!12798 = !DILocation(line: 3722, column: 6, scope: !12744)
!12799 = !DILocation(line: 3723, column: 5, scope: !12744)
!12800 = !DILocation(line: 3723, column: 13, scope: !12801)
!12801 = distinct !DILexicalBlock(scope: !12802, file: !1, line: 3723, column: 5)
!12802 = distinct !DILexicalBlock(scope: !12744, file: !1, line: 3723, column: 5)
!12803 = !DILocation(line: 3723, column: 27, scope: !12801)
!12804 = !DILocation(line: 3723, column: 30, scope: !12801)
!12805 = !DILocation(line: 3723, column: 15, scope: !12801)
!12806 = !DILocation(line: 3723, column: 5, scope: !12802)
!12807 = !DILocation(line: 3725, column: 20, scope: !12808)
!12808 = distinct !DILexicalBlock(scope: !12809, file: !1, line: 3725, column: 11)
!12809 = distinct !DILexicalBlock(scope: !12801, file: !1, line: 3724, column: 5)
!12810 = !DILocation(line: 3725, column: 11, scope: !12808)
!12811 = !DILocation(line: 3725, column: 26, scope: !12808)
!12812 = !DILocation(line: 3725, column: 29, scope: !12808)
!12813 = !DILocation(line: 3725, column: 36, scope: !12808)
!12814 = !DILocation(line: 3725, column: 37, scope: !12808)
!12815 = !DILocation(line: 3725, column: 41, scope: !12808)
!12816 = !DILocation(line: 3725, column: 43, scope: !12808)
!12817 = !DILocation(line: 3725, column: 42, scope: !12808)
!12818 = !DILocation(line: 3725, column: 46, scope: !12808)
!12819 = !DILocation(line: 3725, column: 22, scope: !12808)
!12820 = !DILocation(line: 3725, column: 11, scope: !12809)
!12821 = !DILocation(line: 3726, column: 9, scope: !12808)
!12822 = !DILocation(line: 3727, column: 20, scope: !12823)
!12823 = distinct !DILexicalBlock(scope: !12809, file: !1, line: 3727, column: 11)
!12824 = !DILocation(line: 3727, column: 11, scope: !12823)
!12825 = !DILocation(line: 3727, column: 25, scope: !12823)
!12826 = !DILocation(line: 3727, column: 28, scope: !12823)
!12827 = !DILocation(line: 3727, column: 35, scope: !12823)
!12828 = !DILocation(line: 3727, column: 38, scope: !12823)
!12829 = !DILocation(line: 3727, column: 40, scope: !12823)
!12830 = !DILocation(line: 3727, column: 39, scope: !12823)
!12831 = !DILocation(line: 3727, column: 43, scope: !12823)
!12832 = !DILocation(line: 3727, column: 22, scope: !12823)
!12833 = !DILocation(line: 3727, column: 11, scope: !12809)
!12834 = !DILocation(line: 3728, column: 9, scope: !12823)
!12835 = !DILocation(line: 3729, column: 11, scope: !12836)
!12836 = distinct !DILexicalBlock(scope: !12809, file: !1, line: 3729, column: 11)
!12837 = !DILocation(line: 3729, column: 14, scope: !12836)
!12838 = !DILocation(line: 3729, column: 35, scope: !12836)
!12839 = !DILocation(line: 3729, column: 26, scope: !12836)
!12840 = !DILocation(line: 3729, column: 23, scope: !12836)
!12841 = !DILocation(line: 3729, column: 11, scope: !12809)
!12842 = !DILocation(line: 3731, column: 32, scope: !12843)
!12843 = distinct !DILexicalBlock(scope: !12836, file: !1, line: 3730, column: 9)
!12844 = !DILocation(line: 3731, column: 23, scope: !12843)
!12845 = !DILocation(line: 3731, column: 11, scope: !12843)
!12846 = !DILocation(line: 3731, column: 14, scope: !12843)
!12847 = !DILocation(line: 3731, column: 22, scope: !12843)
!12848 = !DILocation(line: 3732, column: 33, scope: !12843)
!12849 = !DILocation(line: 3732, column: 11, scope: !12843)
!12850 = !DILocation(line: 3732, column: 14, scope: !12843)
!12851 = !DILocation(line: 3732, column: 23, scope: !12843)
!12852 = !DILocation(line: 3733, column: 9, scope: !12843)
!12853 = !DILocation(line: 3737, column: 9, scope: !12809)
!12854 = !DILocation(line: 3737, column: 12, scope: !12809)
!12855 = !DILocation(line: 3737, column: 19, scope: !12809)
!12856 = !DILocation(line: 3737, column: 18, scope: !12809)
!12857 = !DILocation(line: 3737, column: 20, scope: !12809)
!12858 = !DILocation(line: 3737, column: 8, scope: !12809)
!12859 = !DILocation(line: 3738, column: 16, scope: !12809)
!12860 = !DILocation(line: 3738, column: 17, scope: !12809)
!12861 = !DILocation(line: 3738, column: 22, scope: !12809)
!12862 = !DILocation(line: 3738, column: 24, scope: !12809)
!12863 = !DILocation(line: 3738, column: 27, scope: !12809)
!12864 = !DILocation(line: 3738, column: 23, scope: !12809)
!12865 = !DILocation(line: 3738, column: 13, scope: !12809)
!12866 = !DILocation(line: 3738, column: 14, scope: !12809)
!12867 = !DILocation(line: 3739, column: 16, scope: !12809)
!12868 = !DILocation(line: 3739, column: 17, scope: !12809)
!12869 = !DILocation(line: 3739, column: 22, scope: !12809)
!12870 = !DILocation(line: 3739, column: 24, scope: !12809)
!12871 = !DILocation(line: 3739, column: 27, scope: !12809)
!12872 = !DILocation(line: 3739, column: 23, scope: !12809)
!12873 = !DILocation(line: 3739, column: 13, scope: !12809)
!12874 = !DILocation(line: 3739, column: 14, scope: !12809)
!12875 = !DILocation(line: 3740, column: 18, scope: !12809)
!12876 = !DILocation(line: 3740, column: 21, scope: !12809)
!12877 = !DILocation(line: 3740, column: 23, scope: !12809)
!12878 = !DILocation(line: 3740, column: 26, scope: !12809)
!12879 = !DILocation(line: 3740, column: 22, scope: !12809)
!12880 = !DILocation(line: 3740, column: 19, scope: !12809)
!12881 = !DILocation(line: 3740, column: 35, scope: !12809)
!12882 = !DILocation(line: 3740, column: 38, scope: !12809)
!12883 = !DILocation(line: 3740, column: 40, scope: !12809)
!12884 = !DILocation(line: 3740, column: 43, scope: !12809)
!12885 = !DILocation(line: 3740, column: 39, scope: !12809)
!12886 = !DILocation(line: 3740, column: 36, scope: !12809)
!12887 = !DILocation(line: 3740, column: 28, scope: !12809)
!12888 = !DILocation(line: 3740, column: 11, scope: !12809)
!12889 = !DILocation(line: 3741, column: 11, scope: !12890)
!12890 = distinct !DILexicalBlock(scope: !12809, file: !1, line: 3741, column: 11)
!12891 = !DILocation(line: 3741, column: 16, scope: !12890)
!12892 = !DILocation(line: 3741, column: 11, scope: !12809)
!12893 = !DILocation(line: 3743, column: 28, scope: !12894)
!12894 = distinct !DILexicalBlock(scope: !12890, file: !1, line: 3742, column: 9)
!12895 = !DILocation(line: 3743, column: 19, scope: !12894)
!12896 = !DILocation(line: 3743, column: 30, scope: !12894)
!12897 = !DILocation(line: 3743, column: 33, scope: !12894)
!12898 = !DILocation(line: 3743, column: 29, scope: !12894)
!12899 = !DILocation(line: 3743, column: 17, scope: !12894)
!12900 = !DILocation(line: 3743, column: 18, scope: !12894)
!12901 = !DILocation(line: 3744, column: 28, scope: !12894)
!12902 = !DILocation(line: 3744, column: 19, scope: !12894)
!12903 = !DILocation(line: 3744, column: 30, scope: !12894)
!12904 = !DILocation(line: 3744, column: 33, scope: !12894)
!12905 = !DILocation(line: 3744, column: 29, scope: !12894)
!12906 = !DILocation(line: 3744, column: 17, scope: !12894)
!12907 = !DILocation(line: 3744, column: 18, scope: !12894)
!12908 = !DILocation(line: 3745, column: 26, scope: !12894)
!12909 = !DILocation(line: 3745, column: 34, scope: !12894)
!12910 = !DILocation(line: 3745, column: 27, scope: !12894)
!12911 = !DILocation(line: 3745, column: 42, scope: !12894)
!12912 = !DILocation(line: 3745, column: 50, scope: !12894)
!12913 = !DILocation(line: 3745, column: 43, scope: !12894)
!12914 = !DILocation(line: 3745, column: 35, scope: !12894)
!12915 = !DILocation(line: 3745, column: 19, scope: !12894)
!12916 = !DILocation(line: 3746, column: 9, scope: !12894)
!12917 = !DILocation(line: 3749, column: 23, scope: !12918)
!12918 = distinct !DILexicalBlock(scope: !12890, file: !1, line: 3748, column: 9)
!12919 = !DILocation(line: 3749, column: 31, scope: !12918)
!12920 = !DILocation(line: 3749, column: 24, scope: !12918)
!12921 = !DILocation(line: 3749, column: 39, scope: !12918)
!12922 = !DILocation(line: 3749, column: 47, scope: !12918)
!12923 = !DILocation(line: 3749, column: 40, scope: !12918)
!12924 = !DILocation(line: 3749, column: 32, scope: !12918)
!12925 = !DILocation(line: 3749, column: 16, scope: !12918)
!12926 = !DILocation(line: 3750, column: 15, scope: !12927)
!12927 = distinct !DILexicalBlock(scope: !12918, file: !1, line: 3750, column: 15)
!12928 = !DILocation(line: 3750, column: 22, scope: !12927)
!12929 = !DILocation(line: 3750, column: 20, scope: !12927)
!12930 = !DILocation(line: 3750, column: 15, scope: !12918)
!12931 = !DILocation(line: 3752, column: 32, scope: !12932)
!12932 = distinct !DILexicalBlock(scope: !12927, file: !1, line: 3751, column: 13)
!12933 = !DILocation(line: 3752, column: 23, scope: !12932)
!12934 = !DILocation(line: 3752, column: 35, scope: !12932)
!12935 = !DILocation(line: 3752, column: 36, scope: !12932)
!12936 = !DILocation(line: 3752, column: 41, scope: !12932)
!12937 = !DILocation(line: 3752, column: 33, scope: !12932)
!12938 = !DILocation(line: 3752, column: 21, scope: !12932)
!12939 = !DILocation(line: 3752, column: 22, scope: !12932)
!12940 = !DILocation(line: 3753, column: 32, scope: !12932)
!12941 = !DILocation(line: 3753, column: 23, scope: !12932)
!12942 = !DILocation(line: 3753, column: 35, scope: !12932)
!12943 = !DILocation(line: 3753, column: 36, scope: !12932)
!12944 = !DILocation(line: 3753, column: 41, scope: !12932)
!12945 = !DILocation(line: 3753, column: 33, scope: !12932)
!12946 = !DILocation(line: 3753, column: 21, scope: !12932)
!12947 = !DILocation(line: 3753, column: 22, scope: !12932)
!12948 = !DILocation(line: 3754, column: 30, scope: !12932)
!12949 = !DILocation(line: 3754, column: 38, scope: !12932)
!12950 = !DILocation(line: 3754, column: 31, scope: !12932)
!12951 = !DILocation(line: 3754, column: 46, scope: !12932)
!12952 = !DILocation(line: 3754, column: 54, scope: !12932)
!12953 = !DILocation(line: 3754, column: 47, scope: !12932)
!12954 = !DILocation(line: 3754, column: 39, scope: !12932)
!12955 = !DILocation(line: 3754, column: 23, scope: !12932)
!12956 = !DILocation(line: 3755, column: 13, scope: !12932)
!12957 = !DILocation(line: 3758, column: 25, scope: !12958)
!12958 = distinct !DILexicalBlock(scope: !12927, file: !1, line: 3757, column: 13)
!12959 = !DILocation(line: 3758, column: 24, scope: !12958)
!12960 = !DILocation(line: 3758, column: 20, scope: !12958)
!12961 = !DILocation(line: 3759, column: 26, scope: !12958)
!12962 = !DILocation(line: 3759, column: 29, scope: !12958)
!12963 = !DILocation(line: 3759, column: 31, scope: !12958)
!12964 = !DILocation(line: 3759, column: 34, scope: !12958)
!12965 = !DILocation(line: 3759, column: 30, scope: !12958)
!12966 = !DILocation(line: 3759, column: 27, scope: !12958)
!12967 = !DILocation(line: 3759, column: 43, scope: !12958)
!12968 = !DILocation(line: 3759, column: 46, scope: !12958)
!12969 = !DILocation(line: 3759, column: 48, scope: !12958)
!12970 = !DILocation(line: 3759, column: 51, scope: !12958)
!12971 = !DILocation(line: 3759, column: 47, scope: !12958)
!12972 = !DILocation(line: 3759, column: 44, scope: !12958)
!12973 = !DILocation(line: 3759, column: 36, scope: !12958)
!12974 = !DILocation(line: 3759, column: 19, scope: !12958)
!12975 = !DILocation(line: 3760, column: 24, scope: !12958)
!12976 = !DILocation(line: 3760, column: 30, scope: !12958)
!12977 = !DILocation(line: 3760, column: 29, scope: !12958)
!12978 = !DILocation(line: 3760, column: 35, scope: !12958)
!12979 = !DILocation(line: 3760, column: 34, scope: !12958)
!12980 = !DILocation(line: 3760, column: 23, scope: !12958)
!12981 = !DILocation(line: 3766, column: 11, scope: !12809)
!12982 = !DILocation(line: 3767, column: 11, scope: !12983)
!12983 = distinct !DILexicalBlock(scope: !12809, file: !1, line: 3767, column: 11)
!12984 = !DILocation(line: 3767, column: 14, scope: !12983)
!12985 = !DILocation(line: 3767, column: 24, scope: !12983)
!12986 = !DILocation(line: 3767, column: 11, scope: !12809)
!12987 = !DILocation(line: 3769, column: 17, scope: !12988)
!12988 = distinct !DILexicalBlock(scope: !12983, file: !1, line: 3768, column: 9)
!12989 = !DILocation(line: 3769, column: 20, scope: !12988)
!12990 = !DILocation(line: 3769, column: 16, scope: !12988)
!12991 = !DILocation(line: 3770, column: 17, scope: !12992)
!12992 = distinct !DILexicalBlock(scope: !12988, file: !1, line: 3770, column: 15)
!12993 = !DILocation(line: 3770, column: 16, scope: !12992)
!12994 = !DILocation(line: 3770, column: 32, scope: !12992)
!12995 = !DILocation(line: 3770, column: 39, scope: !12992)
!12996 = !DILocation(line: 3771, column: 16, scope: !12992)
!12997 = !DILocation(line: 3771, column: 30, scope: !12992)
!12998 = !DILocation(line: 3771, column: 35, scope: !12992)
!12999 = !DILocation(line: 3771, column: 43, scope: !12992)
!13000 = !DILocation(line: 3771, column: 48, scope: !12992)
!13001 = !DILocation(line: 3771, column: 41, scope: !12992)
!13002 = !DILocation(line: 3771, column: 25, scope: !12992)
!13003 = !DILocation(line: 3770, column: 15, scope: !12988)
!13004 = !DILocation(line: 3773, column: 21, scope: !13005)
!13005 = distinct !DILexicalBlock(scope: !12992, file: !1, line: 3772, column: 13)
!13006 = !DILocation(line: 3773, column: 24, scope: !13005)
!13007 = !DILocation(line: 3773, column: 20, scope: !13005)
!13008 = !DILocation(line: 3774, column: 19, scope: !13009)
!13009 = distinct !DILexicalBlock(scope: !13005, file: !1, line: 3774, column: 19)
!13010 = !DILocation(line: 3774, column: 33, scope: !13009)
!13011 = !DILocation(line: 3774, column: 38, scope: !13009)
!13012 = !DILocation(line: 3774, column: 46, scope: !13009)
!13013 = !DILocation(line: 3774, column: 51, scope: !13009)
!13014 = !DILocation(line: 3774, column: 44, scope: !13009)
!13015 = !DILocation(line: 3774, column: 28, scope: !13009)
!13016 = !DILocation(line: 3774, column: 19, scope: !13005)
!13017 = !DILocation(line: 3775, column: 18, scope: !13009)
!13018 = !DILocation(line: 3775, column: 32, scope: !13009)
!13019 = !DILocation(line: 3775, column: 17, scope: !13009)
!13020 = !DILocation(line: 3778, column: 23, scope: !13021)
!13021 = distinct !DILexicalBlock(scope: !13009, file: !1, line: 3777, column: 17)
!13022 = !DILocation(line: 3779, column: 23, scope: !13023)
!13023 = distinct !DILexicalBlock(scope: !13021, file: !1, line: 3779, column: 23)
!13024 = !DILocation(line: 3779, column: 32, scope: !13023)
!13025 = !DILocation(line: 3779, column: 23, scope: !13021)
!13026 = !DILocation(line: 3780, column: 40, scope: !13023)
!13027 = !DILocation(line: 3780, column: 26, scope: !13023)
!13028 = !DILocation(line: 3780, column: 25, scope: !13023)
!13029 = !DILocation(line: 3780, column: 21, scope: !13023)
!13030 = !DILocation(line: 3781, column: 25, scope: !13021)
!13031 = !DILocation(line: 3781, column: 30, scope: !13021)
!13032 = !DILocation(line: 3781, column: 29, scope: !13021)
!13033 = !DILocation(line: 3781, column: 33, scope: !13021)
!13034 = !DILocation(line: 3781, column: 24, scope: !13021)
!13035 = !DILocation(line: 3782, column: 24, scope: !13036)
!13036 = distinct !DILexicalBlock(scope: !13021, file: !1, line: 3782, column: 23)
!13037 = !DILocation(line: 3782, column: 23, scope: !13036)
!13038 = !DILocation(line: 3782, column: 43, scope: !13036)
!13039 = !DILocation(line: 3782, column: 48, scope: !13036)
!13040 = !DILocation(line: 3782, column: 56, scope: !13036)
!13041 = !DILocation(line: 3782, column: 61, scope: !13036)
!13042 = !DILocation(line: 3782, column: 54, scope: !13036)
!13043 = !DILocation(line: 3782, column: 39, scope: !13036)
!13044 = !DILocation(line: 3782, column: 23, scope: !13021)
!13045 = !DILocation(line: 3783, column: 38, scope: !13036)
!13046 = !DILocation(line: 3783, column: 43, scope: !13036)
!13047 = !DILocation(line: 3783, column: 51, scope: !13036)
!13048 = !DILocation(line: 3783, column: 56, scope: !13036)
!13049 = !DILocation(line: 3783, column: 49, scope: !13036)
!13050 = !DILocation(line: 3783, column: 22, scope: !13036)
!13051 = !DILocation(line: 3783, column: 36, scope: !13036)
!13052 = !DILocation(line: 3783, column: 21, scope: !13036)
!13053 = !DILocation(line: 3785, column: 13, scope: !13005)
!13054 = !DILocation(line: 3786, column: 9, scope: !12988)
!13055 = !DILocation(line: 3787, column: 12, scope: !13056)
!13056 = distinct !DILexicalBlock(scope: !12809, file: !1, line: 3787, column: 11)
!13057 = !DILocation(line: 3787, column: 17, scope: !13056)
!13058 = !DILocation(line: 3787, column: 33, scope: !13056)
!13059 = !DILocation(line: 3787, column: 37, scope: !13056)
!13060 = !DILocation(line: 3787, column: 46, scope: !13056)
!13061 = !DILocation(line: 3787, column: 53, scope: !13056)
!13062 = !DILocation(line: 3787, column: 57, scope: !13056)
!13063 = !DILocation(line: 3787, column: 73, scope: !13056)
!13064 = !DILocation(line: 3787, column: 11, scope: !12809)
!13065 = !DILocation(line: 3788, column: 9, scope: !13056)
!13066 = !DILocation(line: 3789, column: 11, scope: !13067)
!13067 = distinct !DILexicalBlock(scope: !12809, file: !1, line: 3789, column: 11)
!13068 = !DILocation(line: 3789, column: 20, scope: !13067)
!13069 = !DILocation(line: 3789, column: 11, scope: !12809)
!13070 = !DILocation(line: 3791, column: 26, scope: !13071)
!13071 = distinct !DILexicalBlock(scope: !13067, file: !1, line: 3790, column: 9)
!13072 = !DILocation(line: 3792, column: 11, scope: !13071)
!13073 = !DILocation(line: 3794, column: 11, scope: !13074)
!13074 = distinct !DILexicalBlock(scope: !12809, file: !1, line: 3794, column: 11)
!13075 = !DILocation(line: 3794, column: 20, scope: !13074)
!13076 = !DILocation(line: 3794, column: 11, scope: !12809)
!13077 = !DILocation(line: 3795, column: 9, scope: !13074)
!13078 = !DILocation(line: 3796, column: 11, scope: !13079)
!13079 = distinct !DILexicalBlock(scope: !12809, file: !1, line: 3796, column: 11)
!13080 = !DILocation(line: 3796, column: 16, scope: !13079)
!13081 = !DILocation(line: 3796, column: 11, scope: !12809)
!13082 = !DILocation(line: 3798, column: 15, scope: !13083)
!13083 = distinct !DILexicalBlock(scope: !13079, file: !1, line: 3797, column: 9)
!13084 = !DILocation(line: 3799, column: 15, scope: !13085)
!13085 = distinct !DILexicalBlock(scope: !13083, file: !1, line: 3799, column: 15)
!13086 = !DILocation(line: 3799, column: 24, scope: !13085)
!13087 = !DILocation(line: 3799, column: 15, scope: !13083)
!13088 = !DILocation(line: 3800, column: 23, scope: !13085)
!13089 = !DILocation(line: 3800, column: 18, scope: !13085)
!13090 = !DILocation(line: 3800, column: 17, scope: !13085)
!13091 = !DILocation(line: 3800, column: 13, scope: !13085)
!13092 = !DILocation(line: 3801, column: 9, scope: !13083)
!13093 = !DILocation(line: 3802, column: 13, scope: !12809)
!13094 = !DILocation(line: 3802, column: 17, scope: !12809)
!13095 = !DILocation(line: 3802, column: 12, scope: !12809)
!13096 = !DILocation(line: 3803, column: 11, scope: !13097)
!13097 = distinct !DILexicalBlock(scope: !12809, file: !1, line: 3803, column: 11)
!13098 = !DILocation(line: 3803, column: 30, scope: !13097)
!13099 = !DILocation(line: 3803, column: 36, scope: !13097)
!13100 = !DILocation(line: 3803, column: 35, scope: !13097)
!13101 = !DILocation(line: 3803, column: 27, scope: !13097)
!13102 = !DILocation(line: 3803, column: 11, scope: !12809)
!13103 = !DILocation(line: 3804, column: 25, scope: !13097)
!13104 = !DILocation(line: 3804, column: 31, scope: !13097)
!13105 = !DILocation(line: 3804, column: 30, scope: !13097)
!13106 = !DILocation(line: 3804, column: 24, scope: !13097)
!13107 = !DILocation(line: 3804, column: 9, scope: !13097)
!13108 = !DILocation(line: 3805, column: 5, scope: !12809)
!13109 = !DILocation(line: 3723, column: 46, scope: !12801)
!13110 = !DILocation(line: 3723, column: 5, scope: !12801)
!13111 = distinct !{!13111, !12806, !13112}
!13112 = !DILocation(line: 3805, column: 5, scope: !12802)
!13113 = !DILocation(line: 3806, column: 3, scope: !12744)
!13114 = !DILocation(line: 3710, column: 56, scope: !12737)
!13115 = !DILocation(line: 3710, column: 61, scope: !12737)
!13116 = !DILocation(line: 3710, column: 3, scope: !12737)
!13117 = distinct !{!13117, !12741, !13118}
!13118 = !DILocation(line: 3806, column: 3, scope: !12734)
!13119 = !DILocation(line: 3810, column: 7, scope: !13120)
!13120 = distinct !DILexicalBlock(scope: !12687, file: !1, line: 3810, column: 7)
!13121 = !DILocation(line: 3810, column: 12, scope: !13120)
!13122 = !DILocation(line: 3810, column: 7, scope: !12687)
!13123 = !DILocation(line: 3811, column: 5, scope: !13120)
!13124 = !DILocation(line: 3812, column: 7, scope: !13125)
!13125 = distinct !DILexicalBlock(scope: !12687, file: !1, line: 3812, column: 7)
!13126 = !DILocation(line: 3812, column: 23, scope: !13125)
!13127 = !DILocation(line: 3812, column: 7, scope: !12687)
!13128 = !DILocation(line: 3813, column: 5, scope: !13125)
!13129 = !DILocation(line: 3817, column: 17, scope: !12687)
!13130 = !DILocation(line: 3818, column: 5, scope: !12687)
!13131 = !DILocation(line: 3818, column: 19, scope: !12687)
!13132 = !DILocation(line: 3818, column: 4, scope: !12687)
!13133 = !DILocation(line: 3819, column: 9, scope: !13134)
!13134 = distinct !DILexicalBlock(scope: !12687, file: !1, line: 3819, column: 3)
!13135 = !DILocation(line: 3819, column: 8, scope: !13134)
!13136 = !DILocation(line: 3819, column: 13, scope: !13137)
!13137 = distinct !DILexicalBlock(scope: !13134, file: !1, line: 3819, column: 3)
!13138 = !DILocation(line: 3819, column: 27, scope: !13137)
!13139 = !DILocation(line: 3819, column: 41, scope: !13137)
!13140 = !DILocation(line: 3819, column: 15, scope: !13137)
!13141 = !DILocation(line: 3819, column: 3, scope: !13134)
!13142 = !DILocation(line: 3821, column: 18, scope: !13143)
!13143 = distinct !DILexicalBlock(scope: !13144, file: !1, line: 3821, column: 9)
!13144 = distinct !DILexicalBlock(scope: !13137, file: !1, line: 3820, column: 3)
!13145 = !DILocation(line: 3821, column: 9, scope: !13143)
!13146 = !DILocation(line: 3821, column: 23, scope: !13143)
!13147 = !DILocation(line: 3821, column: 26, scope: !13143)
!13148 = !DILocation(line: 3821, column: 33, scope: !13143)
!13149 = !DILocation(line: 3821, column: 20, scope: !13143)
!13150 = !DILocation(line: 3821, column: 9, scope: !13144)
!13151 = !DILocation(line: 3822, column: 7, scope: !13143)
!13152 = !DILocation(line: 3823, column: 19, scope: !13153)
!13153 = distinct !DILexicalBlock(scope: !13144, file: !1, line: 3823, column: 9)
!13154 = !DILocation(line: 3823, column: 10, scope: !13153)
!13155 = !DILocation(line: 3823, column: 23, scope: !13153)
!13156 = !DILocation(line: 3823, column: 26, scope: !13153)
!13157 = !DILocation(line: 3823, column: 33, scope: !13153)
!13158 = !DILocation(line: 3823, column: 21, scope: !13153)
!13159 = !DILocation(line: 3823, column: 37, scope: !13153)
!13160 = !DILocation(line: 3823, column: 50, scope: !13153)
!13161 = !DILocation(line: 3823, column: 41, scope: !13153)
!13162 = !DILocation(line: 3823, column: 55, scope: !13153)
!13163 = !DILocation(line: 3823, column: 58, scope: !13153)
!13164 = !DILocation(line: 3823, column: 65, scope: !13153)
!13165 = !DILocation(line: 3823, column: 52, scope: !13153)
!13166 = !DILocation(line: 3823, column: 9, scope: !13144)
!13167 = !DILocation(line: 3824, column: 7, scope: !13153)
!13168 = !DILocation(line: 3825, column: 18, scope: !13169)
!13169 = distinct !DILexicalBlock(scope: !13144, file: !1, line: 3825, column: 9)
!13170 = !DILocation(line: 3825, column: 9, scope: !13169)
!13171 = !DILocation(line: 3825, column: 22, scope: !13169)
!13172 = !DILocation(line: 3825, column: 25, scope: !13169)
!13173 = !DILocation(line: 3825, column: 32, scope: !13169)
!13174 = !DILocation(line: 3825, column: 20, scope: !13169)
!13175 = !DILocation(line: 3825, column: 9, scope: !13144)
!13176 = !DILocation(line: 3827, column: 25, scope: !13177)
!13177 = distinct !DILexicalBlock(scope: !13169, file: !1, line: 3826, column: 7)
!13178 = !DILocation(line: 3827, column: 28, scope: !13177)
!13179 = !DILocation(line: 3827, column: 23, scope: !13177)
!13180 = !DILocation(line: 3828, column: 9, scope: !13177)
!13181 = !DILocation(line: 3830, column: 36, scope: !13144)
!13182 = !DILocation(line: 3830, column: 39, scope: !13144)
!13183 = !DILocation(line: 3830, column: 27, scope: !13144)
!13184 = !DILocation(line: 3830, column: 17, scope: !13144)
!13185 = !DILocation(line: 3830, column: 7, scope: !13144)
!13186 = !DILocation(line: 3830, column: 6, scope: !13144)
!13187 = !DILocation(line: 3831, column: 5, scope: !13144)
!13188 = !DILocation(line: 3831, column: 13, scope: !13189)
!13189 = distinct !DILexicalBlock(scope: !13190, file: !1, line: 3831, column: 5)
!13190 = distinct !DILexicalBlock(scope: !13144, file: !1, line: 3831, column: 5)
!13191 = !DILocation(line: 3831, column: 27, scope: !13189)
!13192 = !DILocation(line: 3831, column: 30, scope: !13189)
!13193 = !DILocation(line: 3831, column: 15, scope: !13189)
!13194 = !DILocation(line: 3831, column: 5, scope: !13190)
!13195 = !DILocation(line: 3832, column: 20, scope: !13196)
!13196 = distinct !DILexicalBlock(scope: !13189, file: !1, line: 3832, column: 11)
!13197 = !DILocation(line: 3832, column: 11, scope: !13196)
!13198 = !DILocation(line: 3832, column: 25, scope: !13196)
!13199 = !DILocation(line: 3832, column: 28, scope: !13196)
!13200 = !DILocation(line: 3832, column: 35, scope: !13196)
!13201 = !DILocation(line: 3832, column: 38, scope: !13196)
!13202 = !DILocation(line: 3832, column: 22, scope: !13196)
!13203 = !DILocation(line: 3832, column: 11, scope: !13189)
!13204 = !DILocation(line: 3833, column: 9, scope: !13196)
!13205 = !DILocation(line: 3831, column: 46, scope: !13189)
!13206 = !DILocation(line: 3831, column: 5, scope: !13189)
!13207 = distinct !{!13207, !13194, !13208}
!13208 = !DILocation(line: 3833, column: 9, scope: !13190)
!13209 = !DILocation(line: 3834, column: 7, scope: !13144)
!13210 = !DILocation(line: 3834, column: 10, scope: !13144)
!13211 = !DILocation(line: 3834, column: 17, scope: !13144)
!13212 = !DILocation(line: 3834, column: 16, scope: !13144)
!13213 = !DILocation(line: 3834, column: 18, scope: !13144)
!13214 = !DILocation(line: 3834, column: 6, scope: !13144)
!13215 = !DILocation(line: 3835, column: 12, scope: !13216)
!13216 = distinct !DILexicalBlock(scope: !13144, file: !1, line: 3835, column: 9)
!13217 = !DILocation(line: 3835, column: 13, scope: !13216)
!13218 = !DILocation(line: 3835, column: 18, scope: !13216)
!13219 = !DILocation(line: 3835, column: 20, scope: !13216)
!13220 = !DILocation(line: 3835, column: 23, scope: !13216)
!13221 = !DILocation(line: 3835, column: 19, scope: !13216)
!13222 = !DILocation(line: 3835, column: 27, scope: !13216)
!13223 = !DILocation(line: 3835, column: 29, scope: !13216)
!13224 = !DILocation(line: 3835, column: 32, scope: !13216)
!13225 = !DILocation(line: 3835, column: 28, scope: !13216)
!13226 = !DILocation(line: 3835, column: 25, scope: !13216)
!13227 = !DILocation(line: 3835, column: 42, scope: !13216)
!13228 = !DILocation(line: 3835, column: 43, scope: !13216)
!13229 = !DILocation(line: 3835, column: 48, scope: !13216)
!13230 = !DILocation(line: 3835, column: 50, scope: !13216)
!13231 = !DILocation(line: 3835, column: 53, scope: !13216)
!13232 = !DILocation(line: 3835, column: 49, scope: !13216)
!13233 = !DILocation(line: 3835, column: 57, scope: !13216)
!13234 = !DILocation(line: 3835, column: 59, scope: !13216)
!13235 = !DILocation(line: 3835, column: 62, scope: !13216)
!13236 = !DILocation(line: 3835, column: 58, scope: !13216)
!13237 = !DILocation(line: 3835, column: 55, scope: !13216)
!13238 = !DILocation(line: 3835, column: 36, scope: !13216)
!13239 = !DILocation(line: 3835, column: 9, scope: !13144)
!13240 = !DILocation(line: 3836, column: 23, scope: !13216)
!13241 = !DILocation(line: 3836, column: 26, scope: !13216)
!13242 = !DILocation(line: 3836, column: 21, scope: !13216)
!13243 = !DILocation(line: 3836, column: 7, scope: !13216)
!13244 = !DILocation(line: 3837, column: 3, scope: !13144)
!13245 = !DILocation(line: 3819, column: 56, scope: !13137)
!13246 = !DILocation(line: 3819, column: 61, scope: !13137)
!13247 = !DILocation(line: 3819, column: 3, scope: !13137)
!13248 = distinct !{!13248, !13141, !13249}
!13249 = !DILocation(line: 3837, column: 3, scope: !13134)
!13250 = !DILocation(line: 3838, column: 7, scope: !13251)
!13251 = distinct !DILexicalBlock(scope: !12687, file: !1, line: 3838, column: 7)
!13252 = !DILocation(line: 3838, column: 17, scope: !13251)
!13253 = !DILocation(line: 3838, column: 7, scope: !12687)
!13254 = !DILocation(line: 3840, column: 32, scope: !13255)
!13255 = distinct !DILexicalBlock(scope: !13256, file: !1, line: 3840, column: 11)
!13256 = distinct !DILexicalBlock(scope: !13251, file: !1, line: 3839, column: 5)
!13257 = !DILocation(line: 3840, column: 12, scope: !13255)
!13258 = !DILocation(line: 3840, column: 48, scope: !13255)
!13259 = !DILocation(line: 3840, column: 56, scope: !13255)
!13260 = !DILocation(line: 3840, column: 11, scope: !13256)
!13261 = !DILocation(line: 3841, column: 9, scope: !13255)
!13262 = !DILocation(line: 3842, column: 5, scope: !13256)
!13263 = !DILocation(line: 3844, column: 29, scope: !13264)
!13264 = distinct !DILexicalBlock(scope: !13251, file: !1, line: 3844, column: 9)
!13265 = !DILocation(line: 3844, column: 9, scope: !13264)
!13266 = !DILocation(line: 3844, column: 45, scope: !13264)
!13267 = !DILocation(line: 3844, column: 9, scope: !13251)
!13268 = !DILocation(line: 3845, column: 7, scope: !13264)
!13269 = !DILocation(line: 3846, column: 10, scope: !12687)
!13270 = !DILocation(line: 3846, column: 3, scope: !12687)
!13271 = !DILocation(line: 3847, column: 1, scope: !12687)
!13272 = distinct !DISubprogram(name: "ConvertPrimitiveToPath", scope: !1, file: !1, line: 715, type: !13273, scopeLine: 717, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1236)
!13273 = !DISubroutineType(types: !13274)
!13274 = !{!1220, !1525, !8925}
!13275 = !DILocalVariable(name: "draw_info", arg: 1, scope: !13272, file: !1, line: 716, type: !1525)
!13276 = !DILocation(line: 716, column: 19, scope: !13272)
!13277 = !DILocalVariable(name: "primitive_info", arg: 2, scope: !13272, file: !1, line: 716, type: !8925)
!13278 = !DILocation(line: 716, column: 65, scope: !13272)
!13279 = !DILocalVariable(name: "path_info", scope: !13272, file: !1, line: 719, type: !1220)
!13280 = !DILocation(line: 719, column: 6, scope: !13272)
!13281 = !DILocalVariable(name: "code", scope: !13272, file: !1, line: 722, type: !1226)
!13282 = !DILocation(line: 722, column: 5, scope: !13272)
!13283 = !DILocalVariable(name: "p", scope: !13272, file: !1, line: 725, type: !794)
!13284 = !DILocation(line: 725, column: 5, scope: !13272)
!13285 = !DILocalVariable(name: "q", scope: !13272, file: !1, line: 726, type: !794)
!13286 = !DILocation(line: 726, column: 5, scope: !13272)
!13287 = !DILocalVariable(name: "i", scope: !13272, file: !1, line: 729, type: !717)
!13288 = !DILocation(line: 729, column: 5, scope: !13272)
!13289 = !DILocalVariable(name: "n", scope: !13272, file: !1, line: 730, type: !717)
!13290 = !DILocation(line: 730, column: 5, scope: !13272)
!13291 = !DILocalVariable(name: "coordinates", scope: !13272, file: !1, line: 733, type: !717)
!13292 = !DILocation(line: 733, column: 5, scope: !13272)
!13293 = !DILocalVariable(name: "start", scope: !13272, file: !1, line: 734, type: !717)
!13294 = !DILocation(line: 734, column: 5, scope: !13272)
!13295 = !DILocation(line: 741, column: 11, scope: !13272)
!13296 = !DILocation(line: 741, column: 27, scope: !13272)
!13297 = !DILocation(line: 741, column: 3, scope: !13272)
!13298 = !DILocation(line: 748, column: 7, scope: !13299)
!13299 = distinct !DILexicalBlock(scope: !13272, file: !1, line: 742, column: 3)
!13300 = !DILocation(line: 750, column: 7, scope: !13299)
!13301 = !DILocation(line: 752, column: 9, scope: !13302)
!13302 = distinct !DILexicalBlock(scope: !13272, file: !1, line: 752, column: 3)
!13303 = !DILocation(line: 752, column: 8, scope: !13302)
!13304 = !DILocation(line: 752, column: 13, scope: !13305)
!13305 = distinct !DILexicalBlock(scope: !13302, file: !1, line: 752, column: 3)
!13306 = !DILocation(line: 752, column: 28, scope: !13305)
!13307 = !DILocation(line: 752, column: 31, scope: !13305)
!13308 = !DILocation(line: 752, column: 41, scope: !13305)
!13309 = !DILocation(line: 752, column: 3, scope: !13302)
!13310 = !DILocation(line: 752, column: 65, scope: !13305)
!13311 = !DILocation(line: 752, column: 3, scope: !13305)
!13312 = distinct !{!13312, !13309, !13313}
!13313 = !DILocation(line: 752, column: 69, scope: !13302)
!13314 = !DILocation(line: 753, column: 61, scope: !13272)
!13315 = !DILocation(line: 753, column: 60, scope: !13272)
!13316 = !DILocation(line: 753, column: 62, scope: !13272)
!13317 = !DILocation(line: 753, column: 26, scope: !13272)
!13318 = !DILocation(line: 753, column: 13, scope: !13272)
!13319 = !DILocation(line: 753, column: 12, scope: !13272)
!13320 = !DILocation(line: 755, column: 7, scope: !13321)
!13321 = distinct !DILexicalBlock(scope: !13272, file: !1, line: 755, column: 7)
!13322 = !DILocation(line: 755, column: 17, scope: !13321)
!13323 = !DILocation(line: 755, column: 7, scope: !13272)
!13324 = !DILocation(line: 756, column: 5, scope: !13321)
!13325 = !DILocation(line: 757, column: 14, scope: !13272)
!13326 = !DILocation(line: 758, column: 4, scope: !13272)
!13327 = !DILocation(line: 759, column: 5, scope: !13272)
!13328 = !DILocation(line: 759, column: 6, scope: !13272)
!13329 = !DILocation(line: 760, column: 5, scope: !13272)
!13330 = !DILocation(line: 760, column: 6, scope: !13272)
!13331 = !DILocation(line: 761, column: 5, scope: !13272)
!13332 = !DILocation(line: 761, column: 6, scope: !13272)
!13333 = !DILocation(line: 762, column: 5, scope: !13272)
!13334 = !DILocation(line: 762, column: 6, scope: !13272)
!13335 = !DILocation(line: 763, column: 8, scope: !13272)
!13336 = !DILocation(line: 764, column: 9, scope: !13337)
!13337 = distinct !DILexicalBlock(scope: !13272, file: !1, line: 764, column: 3)
!13338 = !DILocation(line: 764, column: 8, scope: !13337)
!13339 = !DILocation(line: 764, column: 13, scope: !13340)
!13340 = distinct !DILexicalBlock(scope: !13337, file: !1, line: 764, column: 3)
!13341 = !DILocation(line: 764, column: 28, scope: !13340)
!13342 = !DILocation(line: 764, column: 31, scope: !13340)
!13343 = !DILocation(line: 764, column: 41, scope: !13340)
!13344 = !DILocation(line: 764, column: 3, scope: !13337)
!13345 = !DILocation(line: 766, column: 9, scope: !13346)
!13346 = distinct !DILexicalBlock(scope: !13340, file: !1, line: 765, column: 3)
!13347 = !DILocation(line: 767, column: 9, scope: !13348)
!13348 = distinct !DILexicalBlock(scope: !13346, file: !1, line: 767, column: 9)
!13349 = !DILocation(line: 767, column: 21, scope: !13348)
!13350 = !DILocation(line: 767, column: 9, scope: !13346)
!13351 = !DILocation(line: 769, column: 31, scope: !13352)
!13352 = distinct !DILexicalBlock(scope: !13348, file: !1, line: 768, column: 7)
!13353 = !DILocation(line: 769, column: 46, scope: !13352)
!13354 = !DILocation(line: 769, column: 49, scope: !13352)
!13355 = !DILocation(line: 769, column: 20, scope: !13352)
!13356 = !DILocation(line: 770, column: 11, scope: !13352)
!13357 = !DILocation(line: 770, column: 26, scope: !13352)
!13358 = !DILocation(line: 770, column: 29, scope: !13352)
!13359 = !DILocation(line: 771, column: 15, scope: !13352)
!13360 = !DILocation(line: 771, column: 14, scope: !13352)
!13361 = !DILocation(line: 772, column: 13, scope: !13352)
!13362 = !DILocation(line: 773, column: 7, scope: !13352)
!13363 = !DILocation(line: 774, column: 16, scope: !13346)
!13364 = !DILocation(line: 778, column: 10, scope: !13365)
!13365 = distinct !DILexicalBlock(scope: !13346, file: !1, line: 778, column: 9)
!13366 = !DILocation(line: 778, column: 12, scope: !13365)
!13367 = !DILocation(line: 778, column: 18, scope: !13365)
!13368 = !DILocation(line: 778, column: 29, scope: !13365)
!13369 = !DILocation(line: 778, column: 31, scope: !13365)
!13370 = !DILocation(line: 778, column: 46, scope: !13365)
!13371 = !DILocation(line: 778, column: 49, scope: !13365)
!13372 = !DILocation(line: 778, column: 55, scope: !13365)
!13373 = !DILocation(line: 778, column: 30, scope: !13365)
!13374 = !DILocation(line: 778, column: 22, scope: !13365)
!13375 = !DILocation(line: 778, column: 58, scope: !13365)
!13376 = !DILocation(line: 778, column: 76, scope: !13365)
!13377 = !DILocation(line: 779, column: 17, scope: !13365)
!13378 = !DILocation(line: 779, column: 19, scope: !13365)
!13379 = !DILocation(line: 779, column: 34, scope: !13365)
!13380 = !DILocation(line: 779, column: 37, scope: !13365)
!13381 = !DILocation(line: 779, column: 43, scope: !13365)
!13382 = !DILocation(line: 779, column: 18, scope: !13365)
!13383 = !DILocation(line: 779, column: 10, scope: !13365)
!13384 = !DILocation(line: 779, column: 46, scope: !13365)
!13385 = !DILocation(line: 778, column: 9, scope: !13346)
!13386 = !DILocation(line: 781, column: 27, scope: !13387)
!13387 = distinct !DILexicalBlock(scope: !13365, file: !1, line: 780, column: 7)
!13388 = !DILocation(line: 781, column: 9, scope: !13387)
!13389 = !DILocation(line: 781, column: 19, scope: !13387)
!13390 = !DILocation(line: 781, column: 22, scope: !13387)
!13391 = !DILocation(line: 781, column: 26, scope: !13387)
!13392 = !DILocation(line: 782, column: 9, scope: !13387)
!13393 = !DILocation(line: 782, column: 19, scope: !13387)
!13394 = !DILocation(line: 782, column: 22, scope: !13387)
!13395 = !DILocation(line: 782, column: 28, scope: !13387)
!13396 = !DILocation(line: 782, column: 43, scope: !13387)
!13397 = !DILocation(line: 782, column: 46, scope: !13387)
!13398 = !DILocation(line: 783, column: 11, scope: !13387)
!13399 = !DILocation(line: 783, column: 26, scope: !13387)
!13400 = !DILocation(line: 783, column: 29, scope: !13387)
!13401 = !DILocation(line: 784, column: 10, scope: !13387)
!13402 = !DILocation(line: 785, column: 7, scope: !13387)
!13403 = !DILocation(line: 786, column: 9, scope: !13404)
!13404 = distinct !DILexicalBlock(scope: !13346, file: !1, line: 786, column: 9)
!13405 = !DILocation(line: 786, column: 21, scope: !13404)
!13406 = !DILocation(line: 786, column: 9, scope: !13346)
!13407 = !DILocation(line: 787, column: 7, scope: !13404)
!13408 = !DILocation(line: 788, column: 17, scope: !13409)
!13409 = distinct !DILexicalBlock(scope: !13346, file: !1, line: 788, column: 9)
!13410 = !DILocation(line: 788, column: 19, scope: !13409)
!13411 = !DILocation(line: 788, column: 34, scope: !13409)
!13412 = !DILocation(line: 788, column: 37, scope: !13409)
!13413 = !DILocation(line: 788, column: 43, scope: !13409)
!13414 = !DILocation(line: 788, column: 18, scope: !13409)
!13415 = !DILocation(line: 788, column: 10, scope: !13409)
!13416 = !DILocation(line: 788, column: 46, scope: !13409)
!13417 = !DILocation(line: 788, column: 63, scope: !13409)
!13418 = !DILocation(line: 789, column: 17, scope: !13409)
!13419 = !DILocation(line: 789, column: 19, scope: !13409)
!13420 = !DILocation(line: 789, column: 34, scope: !13409)
!13421 = !DILocation(line: 789, column: 37, scope: !13409)
!13422 = !DILocation(line: 789, column: 43, scope: !13409)
!13423 = !DILocation(line: 789, column: 18, scope: !13409)
!13424 = !DILocation(line: 789, column: 10, scope: !13409)
!13425 = !DILocation(line: 789, column: 46, scope: !13409)
!13426 = !DILocation(line: 788, column: 9, scope: !13346)
!13427 = !DILocation(line: 790, column: 7, scope: !13409)
!13428 = !DILocation(line: 794, column: 5, scope: !13346)
!13429 = !DILocation(line: 794, column: 15, scope: !13346)
!13430 = !DILocation(line: 794, column: 22, scope: !13346)
!13431 = !DILocation(line: 794, column: 26, scope: !13346)
!13432 = !DILocation(line: 795, column: 5, scope: !13346)
!13433 = !DILocation(line: 795, column: 15, scope: !13346)
!13434 = !DILocation(line: 795, column: 18, scope: !13346)
!13435 = !DILocation(line: 795, column: 22, scope: !13346)
!13436 = !DILocation(line: 796, column: 5, scope: !13346)
!13437 = !DILocation(line: 796, column: 15, scope: !13346)
!13438 = !DILocation(line: 796, column: 18, scope: !13346)
!13439 = !DILocation(line: 796, column: 24, scope: !13346)
!13440 = !DILocation(line: 796, column: 39, scope: !13346)
!13441 = !DILocation(line: 796, column: 42, scope: !13346)
!13442 = !DILocation(line: 797, column: 6, scope: !13346)
!13443 = !DILocation(line: 798, column: 5, scope: !13346)
!13444 = !DILocation(line: 798, column: 15, scope: !13346)
!13445 = !DILocation(line: 798, column: 18, scope: !13346)
!13446 = !DILocation(line: 798, column: 22, scope: !13346)
!13447 = !DILocation(line: 799, column: 5, scope: !13346)
!13448 = !DILocation(line: 799, column: 15, scope: !13346)
!13449 = !DILocation(line: 799, column: 18, scope: !13346)
!13450 = !DILocation(line: 799, column: 24, scope: !13346)
!13451 = !DILocation(line: 800, column: 6, scope: !13346)
!13452 = !DILocation(line: 801, column: 3, scope: !13346)
!13453 = !DILocation(line: 764, column: 65, scope: !13340)
!13454 = !DILocation(line: 764, column: 3, scope: !13340)
!13455 = distinct !{!13455, !13344, !13456}
!13456 = !DILocation(line: 801, column: 3, scope: !13337)
!13457 = !DILocation(line: 802, column: 3, scope: !13272)
!13458 = !DILocation(line: 802, column: 13, scope: !13272)
!13459 = !DILocation(line: 802, column: 16, scope: !13272)
!13460 = !DILocation(line: 802, column: 20, scope: !13272)
!13461 = !DILocation(line: 803, column: 3, scope: !13272)
!13462 = !DILocation(line: 803, column: 13, scope: !13272)
!13463 = !DILocation(line: 803, column: 16, scope: !13272)
!13464 = !DILocation(line: 803, column: 22, scope: !13272)
!13465 = !DILocation(line: 803, column: 23, scope: !13272)
!13466 = !DILocation(line: 804, column: 3, scope: !13272)
!13467 = !DILocation(line: 804, column: 13, scope: !13272)
!13468 = !DILocation(line: 804, column: 16, scope: !13272)
!13469 = !DILocation(line: 804, column: 22, scope: !13272)
!13470 = !DILocation(line: 804, column: 23, scope: !13272)
!13471 = !DILocation(line: 805, column: 7, scope: !13472)
!13472 = distinct !DILexicalBlock(scope: !13272, file: !1, line: 805, column: 7)
!13473 = !DILocation(line: 805, column: 24, scope: !13472)
!13474 = !DILocation(line: 805, column: 7, scope: !13272)
!13475 = !DILocation(line: 806, column: 17, scope: !13472)
!13476 = !DILocation(line: 806, column: 5, scope: !13472)
!13477 = !DILocation(line: 807, column: 10, scope: !13272)
!13478 = !DILocation(line: 807, column: 3, scope: !13272)
!13479 = !DILocation(line: 808, column: 1, scope: !13272)
!13480 = distinct !DISubprogram(name: "ConvertPathToPolygon", scope: !1, file: !1, line: 465, type: !13481, scopeLine: 467, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1236)
!13481 = !DISubroutineType(types: !13482)
!13482 = !{!1202, !1525, !13483}
!13483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !13484, size: 64)
!13484 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1221)
!13485 = !DILocalVariable(name: "draw_info", arg: 1, scope: !13480, file: !1, line: 466, type: !1525)
!13486 = !DILocation(line: 466, column: 19, scope: !13480)
!13487 = !DILocalVariable(name: "path_info", arg: 2, scope: !13480, file: !1, line: 466, type: !13483)
!13488 = !DILocation(line: 466, column: 60, scope: !13480)
!13489 = !DILocalVariable(name: "direction", scope: !13480, file: !1, line: 469, type: !721)
!13490 = !DILocation(line: 469, column: 5, scope: !13480)
!13491 = !DILocalVariable(name: "next_direction", scope: !13480, file: !1, line: 470, type: !721)
!13492 = !DILocation(line: 470, column: 5, scope: !13480)
!13493 = !DILocalVariable(name: "point", scope: !13480, file: !1, line: 473, type: !794)
!13494 = !DILocation(line: 473, column: 5, scope: !13480)
!13495 = !DILocalVariable(name: "points", scope: !13480, file: !1, line: 474, type: !1214)
!13496 = !DILocation(line: 474, column: 6, scope: !13480)
!13497 = !DILocalVariable(name: "polygon_info", scope: !13480, file: !1, line: 477, type: !1202)
!13498 = !DILocation(line: 477, column: 6, scope: !13480)
!13499 = !DILocalVariable(name: "bounds", scope: !13480, file: !1, line: 480, type: !756)
!13500 = !DILocation(line: 480, column: 5, scope: !13480)
!13501 = !DILocalVariable(name: "i", scope: !13480, file: !1, line: 483, type: !717)
!13502 = !DILocation(line: 483, column: 5, scope: !13480)
!13503 = !DILocalVariable(name: "n", scope: !13480, file: !1, line: 484, type: !717)
!13504 = !DILocation(line: 484, column: 5, scope: !13480)
!13505 = !DILocalVariable(name: "ghostline", scope: !13480, file: !1, line: 487, type: !777)
!13506 = !DILocation(line: 487, column: 5, scope: !13480)
!13507 = !DILocalVariable(name: "edge", scope: !13480, file: !1, line: 490, type: !712)
!13508 = !DILocation(line: 490, column: 5, scope: !13480)
!13509 = !DILocalVariable(name: "number_edges", scope: !13480, file: !1, line: 491, type: !712)
!13510 = !DILocation(line: 491, column: 5, scope: !13480)
!13511 = !DILocalVariable(name: "number_points", scope: !13480, file: !1, line: 492, type: !712)
!13512 = !DILocation(line: 492, column: 5, scope: !13480)
!13513 = !DILocation(line: 499, column: 32, scope: !13480)
!13514 = !DILocation(line: 499, column: 16, scope: !13480)
!13515 = !DILocation(line: 499, column: 15, scope: !13480)
!13516 = !DILocation(line: 500, column: 7, scope: !13517)
!13517 = distinct !DILexicalBlock(scope: !13480, file: !1, line: 500, column: 7)
!13518 = !DILocation(line: 500, column: 20, scope: !13517)
!13519 = !DILocation(line: 500, column: 7, scope: !13480)
!13520 = !DILocation(line: 501, column: 5, scope: !13517)
!13521 = !DILocation(line: 502, column: 15, scope: !13480)
!13522 = !DILocation(line: 503, column: 66, scope: !13480)
!13523 = !DILocation(line: 503, column: 36, scope: !13480)
!13524 = !DILocation(line: 503, column: 23, scope: !13480)
!13525 = !DILocation(line: 503, column: 3, scope: !13480)
!13526 = !DILocation(line: 503, column: 17, scope: !13480)
!13527 = !DILocation(line: 503, column: 22, scope: !13480)
!13528 = !DILocation(line: 505, column: 7, scope: !13529)
!13529 = distinct !DILexicalBlock(scope: !13480, file: !1, line: 505, column: 7)
!13530 = !DILocation(line: 505, column: 21, scope: !13529)
!13531 = !DILocation(line: 505, column: 27, scope: !13529)
!13532 = !DILocation(line: 505, column: 7, scope: !13480)
!13533 = !DILocation(line: 506, column: 5, scope: !13529)
!13534 = !DILocation(line: 507, column: 12, scope: !13480)
!13535 = !DILocation(line: 508, column: 7, scope: !13480)
!13536 = !DILocation(line: 509, column: 12, scope: !13480)
!13537 = !DILocation(line: 510, column: 4, scope: !13480)
!13538 = !DILocation(line: 511, column: 16, scope: !13480)
!13539 = !DILocation(line: 512, column: 9, scope: !13480)
!13540 = !DILocation(line: 513, column: 28, scope: !13480)
!13541 = !DILocation(line: 513, column: 10, scope: !13480)
!13542 = !DILocation(line: 514, column: 28, scope: !13480)
!13543 = !DILocation(line: 514, column: 10, scope: !13480)
!13544 = !DILocation(line: 515, column: 9, scope: !13545)
!13545 = distinct !DILexicalBlock(scope: !13480, file: !1, line: 515, column: 3)
!13546 = !DILocation(line: 515, column: 8, scope: !13545)
!13547 = !DILocation(line: 515, column: 13, scope: !13548)
!13548 = distinct !DILexicalBlock(scope: !13545, file: !1, line: 515, column: 3)
!13549 = !DILocation(line: 515, column: 23, scope: !13548)
!13550 = !DILocation(line: 515, column: 26, scope: !13548)
!13551 = !DILocation(line: 515, column: 31, scope: !13548)
!13552 = !DILocation(line: 515, column: 3, scope: !13545)
!13553 = !DILocation(line: 517, column: 10, scope: !13554)
!13554 = distinct !DILexicalBlock(scope: !13555, file: !1, line: 517, column: 9)
!13555 = distinct !DILexicalBlock(scope: !13548, file: !1, line: 516, column: 3)
!13556 = !DILocation(line: 517, column: 20, scope: !13554)
!13557 = !DILocation(line: 517, column: 23, scope: !13554)
!13558 = !DILocation(line: 517, column: 28, scope: !13554)
!13559 = !DILocation(line: 517, column: 43, scope: !13554)
!13560 = !DILocation(line: 517, column: 47, scope: !13554)
!13561 = !DILocation(line: 517, column: 57, scope: !13554)
!13562 = !DILocation(line: 517, column: 60, scope: !13554)
!13563 = !DILocation(line: 517, column: 65, scope: !13554)
!13564 = !DILocation(line: 517, column: 78, scope: !13554)
!13565 = !DILocation(line: 518, column: 10, scope: !13554)
!13566 = !DILocation(line: 518, column: 20, scope: !13554)
!13567 = !DILocation(line: 518, column: 23, scope: !13554)
!13568 = !DILocation(line: 518, column: 28, scope: !13554)
!13569 = !DILocation(line: 517, column: 9, scope: !13555)
!13570 = !DILocation(line: 523, column: 14, scope: !13571)
!13571 = distinct !DILexicalBlock(scope: !13572, file: !1, line: 523, column: 13)
!13572 = distinct !DILexicalBlock(scope: !13554, file: !1, line: 519, column: 7)
!13573 = !DILocation(line: 523, column: 21, scope: !13571)
!13574 = !DILocation(line: 523, column: 44, scope: !13571)
!13575 = !DILocation(line: 523, column: 48, scope: !13571)
!13576 = !DILocation(line: 523, column: 50, scope: !13571)
!13577 = !DILocation(line: 523, column: 13, scope: !13572)
!13578 = !DILocation(line: 525, column: 17, scope: !13579)
!13579 = distinct !DILexicalBlock(scope: !13580, file: !1, line: 525, column: 17)
!13580 = distinct !DILexicalBlock(scope: !13571, file: !1, line: 524, column: 11)
!13581 = !DILocation(line: 525, column: 25, scope: !13579)
!13582 = !DILocation(line: 525, column: 22, scope: !13579)
!13583 = !DILocation(line: 525, column: 17, scope: !13580)
!13584 = !DILocation(line: 527, column: 29, scope: !13585)
!13585 = distinct !DILexicalBlock(scope: !13579, file: !1, line: 526, column: 15)
!13586 = !DILocation(line: 529, column: 19, scope: !13585)
!13587 = !DILocation(line: 529, column: 33, scope: !13585)
!13588 = !DILocation(line: 529, column: 48, scope: !13585)
!13589 = !DILocation(line: 528, column: 50, scope: !13585)
!13590 = !DILocation(line: 528, column: 37, scope: !13585)
!13591 = !DILocation(line: 528, column: 17, scope: !13585)
!13592 = !DILocation(line: 528, column: 31, scope: !13585)
!13593 = !DILocation(line: 528, column: 36, scope: !13585)
!13594 = !DILocation(line: 531, column: 21, scope: !13595)
!13595 = distinct !DILexicalBlock(scope: !13585, file: !1, line: 531, column: 21)
!13596 = !DILocation(line: 531, column: 35, scope: !13595)
!13597 = !DILocation(line: 531, column: 41, scope: !13595)
!13598 = !DILocation(line: 531, column: 21, scope: !13585)
!13599 = !DILocation(line: 532, column: 19, scope: !13595)
!13600 = !DILocation(line: 533, column: 15, scope: !13585)
!13601 = !DILocation(line: 534, column: 62, scope: !13580)
!13602 = !DILocation(line: 534, column: 13, scope: !13580)
!13603 = !DILocation(line: 534, column: 27, scope: !13580)
!13604 = !DILocation(line: 534, column: 33, scope: !13580)
!13605 = !DILocation(line: 534, column: 39, scope: !13580)
!13606 = !DILocation(line: 534, column: 52, scope: !13580)
!13607 = !DILocation(line: 535, column: 13, scope: !13580)
!13608 = !DILocation(line: 535, column: 27, scope: !13580)
!13609 = !DILocation(line: 535, column: 33, scope: !13580)
!13610 = !DILocation(line: 535, column: 39, scope: !13580)
!13611 = !DILocation(line: 535, column: 47, scope: !13580)
!13612 = !DILocation(line: 536, column: 13, scope: !13580)
!13613 = !DILocation(line: 536, column: 27, scope: !13580)
!13614 = !DILocation(line: 536, column: 33, scope: !13580)
!13615 = !DILocation(line: 536, column: 39, scope: !13580)
!13616 = !DILocation(line: 536, column: 48, scope: !13580)
!13617 = !DILocation(line: 537, column: 49, scope: !13580)
!13618 = !DILocation(line: 537, column: 13, scope: !13580)
!13619 = !DILocation(line: 537, column: 27, scope: !13580)
!13620 = !DILocation(line: 537, column: 33, scope: !13580)
!13621 = !DILocation(line: 537, column: 39, scope: !13580)
!13622 = !DILocation(line: 537, column: 48, scope: !13580)
!13623 = !DILocation(line: 538, column: 60, scope: !13580)
!13624 = !DILocation(line: 538, column: 70, scope: !13580)
!13625 = !DILocation(line: 538, column: 49, scope: !13580)
!13626 = !DILocation(line: 538, column: 13, scope: !13580)
!13627 = !DILocation(line: 538, column: 27, scope: !13580)
!13628 = !DILocation(line: 538, column: 33, scope: !13580)
!13629 = !DILocation(line: 538, column: 39, scope: !13580)
!13630 = !DILocation(line: 538, column: 48, scope: !13580)
!13631 = !DILocation(line: 539, column: 17, scope: !13632)
!13632 = distinct !DILexicalBlock(scope: !13580, file: !1, line: 539, column: 17)
!13633 = !DILocation(line: 539, column: 27, scope: !13632)
!13634 = !DILocation(line: 539, column: 17, scope: !13580)
!13635 = !DILocation(line: 540, column: 29, scope: !13632)
!13636 = !DILocation(line: 540, column: 45, scope: !13632)
!13637 = !DILocation(line: 540, column: 15, scope: !13632)
!13638 = !DILocation(line: 541, column: 46, scope: !13580)
!13639 = !DILocation(line: 541, column: 13, scope: !13580)
!13640 = !DILocation(line: 541, column: 27, scope: !13580)
!13641 = !DILocation(line: 541, column: 33, scope: !13580)
!13642 = !DILocation(line: 541, column: 39, scope: !13580)
!13643 = !DILocation(line: 541, column: 45, scope: !13580)
!13644 = !DILocation(line: 542, column: 13, scope: !13580)
!13645 = !DILocation(line: 542, column: 27, scope: !13580)
!13646 = !DILocation(line: 542, column: 33, scope: !13580)
!13647 = !DILocation(line: 542, column: 39, scope: !13580)
!13648 = !DILocation(line: 542, column: 46, scope: !13580)
!13649 = !DILocation(line: 543, column: 49, scope: !13580)
!13650 = !DILocation(line: 543, column: 59, scope: !13580)
!13651 = !DILocation(line: 543, column: 13, scope: !13580)
!13652 = !DILocation(line: 543, column: 27, scope: !13580)
!13653 = !DILocation(line: 543, column: 33, scope: !13580)
!13654 = !DILocation(line: 543, column: 39, scope: !13580)
!13655 = !DILocation(line: 543, column: 46, scope: !13580)
!13656 = !DILocation(line: 543, column: 48, scope: !13580)
!13657 = !DILocation(line: 544, column: 49, scope: !13580)
!13658 = !DILocation(line: 544, column: 56, scope: !13580)
!13659 = !DILocation(line: 544, column: 57, scope: !13580)
!13660 = !DILocation(line: 544, column: 61, scope: !13580)
!13661 = !DILocation(line: 544, column: 13, scope: !13580)
!13662 = !DILocation(line: 544, column: 27, scope: !13580)
!13663 = !DILocation(line: 544, column: 33, scope: !13580)
!13664 = !DILocation(line: 544, column: 39, scope: !13580)
!13665 = !DILocation(line: 544, column: 46, scope: !13580)
!13666 = !DILocation(line: 544, column: 48, scope: !13580)
!13667 = !DILocation(line: 545, column: 19, scope: !13580)
!13668 = !DILocation(line: 546, column: 22, scope: !13580)
!13669 = !DILocation(line: 547, column: 17, scope: !13580)
!13670 = !DILocation(line: 548, column: 11, scope: !13580)
!13671 = !DILocation(line: 549, column: 13, scope: !13672)
!13672 = distinct !DILexicalBlock(scope: !13572, file: !1, line: 549, column: 13)
!13673 = !DILocation(line: 549, column: 20, scope: !13672)
!13674 = !DILocation(line: 549, column: 13, scope: !13572)
!13675 = !DILocation(line: 551, column: 26, scope: !13676)
!13676 = distinct !DILexicalBlock(scope: !13672, file: !1, line: 550, column: 11)
!13677 = !DILocation(line: 552, column: 64, scope: !13676)
!13678 = !DILocation(line: 552, column: 34, scope: !13676)
!13679 = !DILocation(line: 552, column: 20, scope: !13676)
!13680 = !DILocation(line: 552, column: 19, scope: !13676)
!13681 = !DILocation(line: 554, column: 17, scope: !13682)
!13682 = distinct !DILexicalBlock(scope: !13676, file: !1, line: 554, column: 17)
!13683 = !DILocation(line: 554, column: 24, scope: !13682)
!13684 = !DILocation(line: 554, column: 17, scope: !13676)
!13685 = !DILocation(line: 555, column: 15, scope: !13682)
!13686 = !DILocation(line: 556, column: 11, scope: !13676)
!13687 = !DILocation(line: 557, column: 19, scope: !13572)
!13688 = !DILocation(line: 557, column: 29, scope: !13572)
!13689 = !DILocation(line: 557, column: 32, scope: !13572)
!13690 = !DILocation(line: 557, column: 37, scope: !13572)
!13691 = !DILocation(line: 557, column: 18, scope: !13572)
!13692 = !DILocation(line: 558, column: 15, scope: !13572)
!13693 = !DILocation(line: 558, column: 25, scope: !13572)
!13694 = !DILocation(line: 558, column: 28, scope: !13572)
!13695 = !DILocation(line: 559, column: 9, scope: !13572)
!13696 = !DILocation(line: 559, column: 19, scope: !13572)
!13697 = !DILocation(line: 560, column: 25, scope: !13572)
!13698 = !DILocation(line: 560, column: 16, scope: !13572)
!13699 = !DILocation(line: 560, column: 18, scope: !13572)
!13700 = !DILocation(line: 561, column: 25, scope: !13572)
!13701 = !DILocation(line: 561, column: 16, scope: !13572)
!13702 = !DILocation(line: 561, column: 18, scope: !13572)
!13703 = !DILocation(line: 562, column: 18, scope: !13572)
!13704 = !DILocation(line: 563, column: 10, scope: !13572)
!13705 = !DILocation(line: 564, column: 9, scope: !13572)
!13706 = !DILocation(line: 569, column: 22, scope: !13555)
!13707 = !DILocation(line: 569, column: 32, scope: !13555)
!13708 = !DILocation(line: 569, column: 35, scope: !13555)
!13709 = !DILocation(line: 569, column: 41, scope: !13555)
!13710 = !DILocation(line: 569, column: 51, scope: !13555)
!13711 = !DILocation(line: 569, column: 43, scope: !13555)
!13712 = !DILocation(line: 569, column: 54, scope: !13555)
!13713 = !DILocation(line: 570, column: 9, scope: !13555)
!13714 = !DILocation(line: 570, column: 19, scope: !13555)
!13715 = !DILocation(line: 570, column: 22, scope: !13555)
!13716 = !DILocation(line: 570, column: 28, scope: !13555)
!13717 = !DILocation(line: 570, column: 39, scope: !13555)
!13718 = !DILocation(line: 570, column: 30, scope: !13555)
!13719 = !DILocation(line: 570, column: 42, scope: !13555)
!13720 = !DILocation(line: 571, column: 9, scope: !13555)
!13721 = !DILocation(line: 571, column: 19, scope: !13555)
!13722 = !DILocation(line: 571, column: 22, scope: !13555)
!13723 = !DILocation(line: 571, column: 28, scope: !13555)
!13724 = !DILocation(line: 571, column: 38, scope: !13555)
!13725 = !DILocation(line: 571, column: 30, scope: !13555)
!13726 = !DILocation(line: 0, scope: !13555)
!13727 = !DILocation(line: 569, column: 20, scope: !13555)
!13728 = !DILocation(line: 569, column: 19, scope: !13555)
!13729 = !DILocation(line: 572, column: 10, scope: !13730)
!13730 = distinct !DILexicalBlock(scope: !13555, file: !1, line: 572, column: 9)
!13731 = !DILocation(line: 572, column: 17, scope: !13730)
!13732 = !DILocation(line: 572, column: 40, scope: !13730)
!13733 = !DILocation(line: 572, column: 44, scope: !13730)
!13734 = !DILocation(line: 572, column: 54, scope: !13730)
!13735 = !DILocation(line: 572, column: 60, scope: !13730)
!13736 = !DILocation(line: 573, column: 10, scope: !13730)
!13737 = !DILocation(line: 573, column: 23, scope: !13730)
!13738 = !DILocation(line: 573, column: 20, scope: !13730)
!13739 = !DILocation(line: 572, column: 9, scope: !13555)
!13740 = !DILocation(line: 578, column: 15, scope: !13741)
!13741 = distinct !DILexicalBlock(scope: !13730, file: !1, line: 574, column: 7)
!13742 = !DILocation(line: 578, column: 22, scope: !13741)
!13743 = !DILocation(line: 578, column: 23, scope: !13741)
!13744 = !DILocation(line: 579, column: 13, scope: !13745)
!13745 = distinct !DILexicalBlock(scope: !13741, file: !1, line: 579, column: 13)
!13746 = !DILocation(line: 579, column: 21, scope: !13745)
!13747 = !DILocation(line: 579, column: 18, scope: !13745)
!13748 = !DILocation(line: 579, column: 13, scope: !13741)
!13749 = !DILocation(line: 581, column: 25, scope: !13750)
!13750 = distinct !DILexicalBlock(scope: !13745, file: !1, line: 580, column: 11)
!13751 = !DILocation(line: 583, column: 15, scope: !13750)
!13752 = !DILocation(line: 583, column: 29, scope: !13750)
!13753 = !DILocation(line: 583, column: 44, scope: !13750)
!13754 = !DILocation(line: 582, column: 46, scope: !13750)
!13755 = !DILocation(line: 582, column: 33, scope: !13750)
!13756 = !DILocation(line: 582, column: 13, scope: !13750)
!13757 = !DILocation(line: 582, column: 27, scope: !13750)
!13758 = !DILocation(line: 582, column: 32, scope: !13750)
!13759 = !DILocation(line: 585, column: 17, scope: !13760)
!13760 = distinct !DILexicalBlock(scope: !13750, file: !1, line: 585, column: 17)
!13761 = !DILocation(line: 585, column: 31, scope: !13760)
!13762 = !DILocation(line: 585, column: 37, scope: !13760)
!13763 = !DILocation(line: 585, column: 17, scope: !13750)
!13764 = !DILocation(line: 586, column: 15, scope: !13760)
!13765 = !DILocation(line: 587, column: 11, scope: !13750)
!13766 = !DILocation(line: 588, column: 58, scope: !13741)
!13767 = !DILocation(line: 588, column: 9, scope: !13741)
!13768 = !DILocation(line: 588, column: 23, scope: !13741)
!13769 = !DILocation(line: 588, column: 29, scope: !13741)
!13770 = !DILocation(line: 588, column: 35, scope: !13741)
!13771 = !DILocation(line: 588, column: 48, scope: !13741)
!13772 = !DILocation(line: 589, column: 9, scope: !13741)
!13773 = !DILocation(line: 589, column: 23, scope: !13741)
!13774 = !DILocation(line: 589, column: 29, scope: !13741)
!13775 = !DILocation(line: 589, column: 35, scope: !13741)
!13776 = !DILocation(line: 589, column: 43, scope: !13741)
!13777 = !DILocation(line: 590, column: 9, scope: !13741)
!13778 = !DILocation(line: 590, column: 23, scope: !13741)
!13779 = !DILocation(line: 590, column: 29, scope: !13741)
!13780 = !DILocation(line: 590, column: 35, scope: !13741)
!13781 = !DILocation(line: 590, column: 44, scope: !13741)
!13782 = !DILocation(line: 591, column: 45, scope: !13741)
!13783 = !DILocation(line: 591, column: 9, scope: !13741)
!13784 = !DILocation(line: 591, column: 23, scope: !13741)
!13785 = !DILocation(line: 591, column: 29, scope: !13741)
!13786 = !DILocation(line: 591, column: 35, scope: !13741)
!13787 = !DILocation(line: 591, column: 44, scope: !13741)
!13788 = !DILocation(line: 592, column: 56, scope: !13741)
!13789 = !DILocation(line: 592, column: 66, scope: !13741)
!13790 = !DILocation(line: 592, column: 45, scope: !13741)
!13791 = !DILocation(line: 592, column: 9, scope: !13741)
!13792 = !DILocation(line: 592, column: 23, scope: !13741)
!13793 = !DILocation(line: 592, column: 29, scope: !13741)
!13794 = !DILocation(line: 592, column: 35, scope: !13741)
!13795 = !DILocation(line: 592, column: 44, scope: !13741)
!13796 = !DILocation(line: 593, column: 13, scope: !13797)
!13797 = distinct !DILexicalBlock(scope: !13741, file: !1, line: 593, column: 13)
!13798 = !DILocation(line: 593, column: 23, scope: !13797)
!13799 = !DILocation(line: 593, column: 13, scope: !13741)
!13800 = !DILocation(line: 594, column: 25, scope: !13797)
!13801 = !DILocation(line: 594, column: 41, scope: !13797)
!13802 = !DILocation(line: 594, column: 11, scope: !13797)
!13803 = !DILocation(line: 595, column: 42, scope: !13741)
!13804 = !DILocation(line: 595, column: 9, scope: !13741)
!13805 = !DILocation(line: 595, column: 23, scope: !13741)
!13806 = !DILocation(line: 595, column: 29, scope: !13741)
!13807 = !DILocation(line: 595, column: 35, scope: !13741)
!13808 = !DILocation(line: 595, column: 41, scope: !13741)
!13809 = !DILocation(line: 596, column: 9, scope: !13741)
!13810 = !DILocation(line: 596, column: 23, scope: !13741)
!13811 = !DILocation(line: 596, column: 29, scope: !13741)
!13812 = !DILocation(line: 596, column: 35, scope: !13741)
!13813 = !DILocation(line: 596, column: 42, scope: !13741)
!13814 = !DILocation(line: 597, column: 45, scope: !13741)
!13815 = !DILocation(line: 597, column: 55, scope: !13741)
!13816 = !DILocation(line: 597, column: 9, scope: !13741)
!13817 = !DILocation(line: 597, column: 23, scope: !13741)
!13818 = !DILocation(line: 597, column: 29, scope: !13741)
!13819 = !DILocation(line: 597, column: 35, scope: !13741)
!13820 = !DILocation(line: 597, column: 42, scope: !13741)
!13821 = !DILocation(line: 597, column: 44, scope: !13741)
!13822 = !DILocation(line: 598, column: 45, scope: !13741)
!13823 = !DILocation(line: 598, column: 52, scope: !13741)
!13824 = !DILocation(line: 598, column: 53, scope: !13741)
!13825 = !DILocation(line: 598, column: 57, scope: !13741)
!13826 = !DILocation(line: 598, column: 9, scope: !13741)
!13827 = !DILocation(line: 598, column: 23, scope: !13741)
!13828 = !DILocation(line: 598, column: 29, scope: !13741)
!13829 = !DILocation(line: 598, column: 35, scope: !13741)
!13830 = !DILocation(line: 598, column: 42, scope: !13741)
!13831 = !DILocation(line: 598, column: 44, scope: !13741)
!13832 = !DILocation(line: 599, column: 22, scope: !13741)
!13833 = !DILocation(line: 600, column: 60, scope: !13741)
!13834 = !DILocation(line: 600, column: 30, scope: !13741)
!13835 = !DILocation(line: 600, column: 16, scope: !13741)
!13836 = !DILocation(line: 600, column: 15, scope: !13741)
!13837 = !DILocation(line: 602, column: 13, scope: !13838)
!13838 = distinct !DILexicalBlock(scope: !13741, file: !1, line: 602, column: 13)
!13839 = !DILocation(line: 602, column: 20, scope: !13838)
!13840 = !DILocation(line: 602, column: 13, scope: !13741)
!13841 = !DILocation(line: 603, column: 11, scope: !13838)
!13842 = !DILocation(line: 604, column: 10, scope: !13741)
!13843 = !DILocation(line: 605, column: 18, scope: !13741)
!13844 = !DILocation(line: 606, column: 9, scope: !13741)
!13845 = !DILocation(line: 606, column: 19, scope: !13741)
!13846 = !DILocation(line: 607, column: 25, scope: !13741)
!13847 = !DILocation(line: 607, column: 16, scope: !13741)
!13848 = !DILocation(line: 607, column: 18, scope: !13741)
!13849 = !DILocation(line: 608, column: 25, scope: !13741)
!13850 = !DILocation(line: 608, column: 16, scope: !13741)
!13851 = !DILocation(line: 608, column: 18, scope: !13741)
!13852 = !DILocation(line: 609, column: 13, scope: !13741)
!13853 = !DILocation(line: 610, column: 7, scope: !13741)
!13854 = !DILocation(line: 611, column: 15, scope: !13555)
!13855 = !DILocation(line: 611, column: 14, scope: !13555)
!13856 = !DILocation(line: 612, column: 9, scope: !13857)
!13857 = distinct !DILexicalBlock(scope: !13555, file: !1, line: 612, column: 9)
!13858 = !DILocation(line: 612, column: 16, scope: !13857)
!13859 = !DILocation(line: 612, column: 9, scope: !13555)
!13860 = !DILocation(line: 613, column: 7, scope: !13857)
!13861 = !DILocation(line: 614, column: 9, scope: !13862)
!13862 = distinct !DILexicalBlock(scope: !13555, file: !1, line: 614, column: 9)
!13863 = !DILocation(line: 614, column: 24, scope: !13862)
!13864 = !DILocation(line: 614, column: 11, scope: !13862)
!13865 = !DILocation(line: 614, column: 9, scope: !13555)
!13866 = !DILocation(line: 616, column: 22, scope: !13867)
!13867 = distinct !DILexicalBlock(scope: !13862, file: !1, line: 615, column: 7)
!13868 = !DILocation(line: 617, column: 50, scope: !13867)
!13869 = !DILocation(line: 617, column: 66, scope: !13867)
!13870 = !DILocation(line: 617, column: 30, scope: !13867)
!13871 = !DILocation(line: 617, column: 16, scope: !13867)
!13872 = !DILocation(line: 617, column: 15, scope: !13867)
!13873 = !DILocation(line: 619, column: 13, scope: !13874)
!13874 = distinct !DILexicalBlock(scope: !13867, file: !1, line: 619, column: 13)
!13875 = !DILocation(line: 619, column: 20, scope: !13874)
!13876 = !DILocation(line: 619, column: 13, scope: !13867)
!13877 = !DILocation(line: 620, column: 11, scope: !13874)
!13878 = !DILocation(line: 621, column: 7, scope: !13867)
!13879 = !DILocation(line: 622, column: 11, scope: !13555)
!13880 = !DILocation(line: 622, column: 21, scope: !13555)
!13881 = !DILocation(line: 622, column: 24, scope: !13555)
!13882 = !DILocation(line: 623, column: 5, scope: !13555)
!13883 = !DILocation(line: 623, column: 12, scope: !13555)
!13884 = !DILocation(line: 623, column: 15, scope: !13555)
!13885 = !DILocation(line: 624, column: 15, scope: !13886)
!13886 = distinct !DILexicalBlock(scope: !13555, file: !1, line: 624, column: 9)
!13887 = !DILocation(line: 624, column: 26, scope: !13886)
!13888 = !DILocation(line: 624, column: 17, scope: !13886)
!13889 = !DILocation(line: 624, column: 9, scope: !13555)
!13890 = !DILocation(line: 625, column: 23, scope: !13886)
!13891 = !DILocation(line: 625, column: 14, scope: !13886)
!13892 = !DILocation(line: 625, column: 16, scope: !13886)
!13893 = !DILocation(line: 625, column: 7, scope: !13886)
!13894 = !DILocation(line: 626, column: 15, scope: !13895)
!13895 = distinct !DILexicalBlock(scope: !13555, file: !1, line: 626, column: 9)
!13896 = !DILocation(line: 626, column: 26, scope: !13895)
!13897 = !DILocation(line: 626, column: 17, scope: !13895)
!13898 = !DILocation(line: 626, column: 9, scope: !13555)
!13899 = !DILocation(line: 627, column: 23, scope: !13895)
!13900 = !DILocation(line: 627, column: 14, scope: !13895)
!13901 = !DILocation(line: 627, column: 16, scope: !13895)
!13902 = !DILocation(line: 627, column: 7, scope: !13895)
!13903 = !DILocation(line: 628, column: 6, scope: !13555)
!13904 = !DILocation(line: 629, column: 3, scope: !13555)
!13905 = !DILocation(line: 515, column: 44, scope: !13548)
!13906 = !DILocation(line: 515, column: 3, scope: !13548)
!13907 = distinct !{!13907, !13552, !13908}
!13908 = !DILocation(line: 629, column: 3, scope: !13545)
!13909 = !DILocation(line: 630, column: 7, scope: !13910)
!13910 = distinct !DILexicalBlock(scope: !13480, file: !1, line: 630, column: 7)
!13911 = !DILocation(line: 630, column: 14, scope: !13910)
!13912 = !DILocation(line: 630, column: 7, scope: !13480)
!13913 = !DILocation(line: 632, column: 11, scope: !13914)
!13914 = distinct !DILexicalBlock(scope: !13915, file: !1, line: 632, column: 11)
!13915 = distinct !DILexicalBlock(scope: !13910, file: !1, line: 631, column: 5)
!13916 = !DILocation(line: 632, column: 13, scope: !13914)
!13917 = !DILocation(line: 632, column: 11, scope: !13915)
!13918 = !DILocation(line: 633, column: 53, scope: !13914)
!13919 = !DILocation(line: 633, column: 30, scope: !13914)
!13920 = !DILocation(line: 633, column: 16, scope: !13914)
!13921 = !DILocation(line: 633, column: 15, scope: !13914)
!13922 = !DILocation(line: 633, column: 9, scope: !13914)
!13923 = !DILocation(line: 636, column: 15, scope: !13924)
!13924 = distinct !DILexicalBlock(scope: !13925, file: !1, line: 636, column: 15)
!13925 = distinct !DILexicalBlock(scope: !13914, file: !1, line: 635, column: 9)
!13926 = !DILocation(line: 636, column: 23, scope: !13924)
!13927 = !DILocation(line: 636, column: 20, scope: !13924)
!13928 = !DILocation(line: 636, column: 15, scope: !13925)
!13929 = !DILocation(line: 638, column: 27, scope: !13930)
!13930 = distinct !DILexicalBlock(scope: !13924, file: !1, line: 637, column: 13)
!13931 = !DILocation(line: 640, column: 17, scope: !13930)
!13932 = !DILocation(line: 640, column: 31, scope: !13930)
!13933 = !DILocation(line: 640, column: 46, scope: !13930)
!13934 = !DILocation(line: 639, column: 48, scope: !13930)
!13935 = !DILocation(line: 639, column: 35, scope: !13930)
!13936 = !DILocation(line: 639, column: 15, scope: !13930)
!13937 = !DILocation(line: 639, column: 29, scope: !13930)
!13938 = !DILocation(line: 639, column: 34, scope: !13930)
!13939 = !DILocation(line: 642, column: 19, scope: !13940)
!13940 = distinct !DILexicalBlock(scope: !13930, file: !1, line: 642, column: 19)
!13941 = !DILocation(line: 642, column: 33, scope: !13940)
!13942 = !DILocation(line: 642, column: 39, scope: !13940)
!13943 = !DILocation(line: 642, column: 19, scope: !13930)
!13944 = !DILocation(line: 643, column: 17, scope: !13940)
!13945 = !DILocation(line: 644, column: 13, scope: !13930)
!13946 = !DILocation(line: 645, column: 60, scope: !13925)
!13947 = !DILocation(line: 645, column: 11, scope: !13925)
!13948 = !DILocation(line: 645, column: 25, scope: !13925)
!13949 = !DILocation(line: 645, column: 31, scope: !13925)
!13950 = !DILocation(line: 645, column: 37, scope: !13925)
!13951 = !DILocation(line: 645, column: 50, scope: !13925)
!13952 = !DILocation(line: 646, column: 11, scope: !13925)
!13953 = !DILocation(line: 646, column: 25, scope: !13925)
!13954 = !DILocation(line: 646, column: 31, scope: !13925)
!13955 = !DILocation(line: 646, column: 37, scope: !13925)
!13956 = !DILocation(line: 646, column: 45, scope: !13925)
!13957 = !DILocation(line: 647, column: 11, scope: !13925)
!13958 = !DILocation(line: 647, column: 25, scope: !13925)
!13959 = !DILocation(line: 647, column: 31, scope: !13925)
!13960 = !DILocation(line: 647, column: 37, scope: !13925)
!13961 = !DILocation(line: 647, column: 46, scope: !13925)
!13962 = !DILocation(line: 648, column: 47, scope: !13925)
!13963 = !DILocation(line: 648, column: 11, scope: !13925)
!13964 = !DILocation(line: 648, column: 25, scope: !13925)
!13965 = !DILocation(line: 648, column: 31, scope: !13925)
!13966 = !DILocation(line: 648, column: 37, scope: !13925)
!13967 = !DILocation(line: 648, column: 46, scope: !13925)
!13968 = !DILocation(line: 649, column: 58, scope: !13925)
!13969 = !DILocation(line: 649, column: 68, scope: !13925)
!13970 = !DILocation(line: 649, column: 47, scope: !13925)
!13971 = !DILocation(line: 649, column: 11, scope: !13925)
!13972 = !DILocation(line: 649, column: 25, scope: !13925)
!13973 = !DILocation(line: 649, column: 31, scope: !13925)
!13974 = !DILocation(line: 649, column: 37, scope: !13925)
!13975 = !DILocation(line: 649, column: 46, scope: !13925)
!13976 = !DILocation(line: 650, column: 15, scope: !13977)
!13977 = distinct !DILexicalBlock(scope: !13925, file: !1, line: 650, column: 15)
!13978 = !DILocation(line: 650, column: 25, scope: !13977)
!13979 = !DILocation(line: 650, column: 15, scope: !13925)
!13980 = !DILocation(line: 651, column: 27, scope: !13977)
!13981 = !DILocation(line: 651, column: 43, scope: !13977)
!13982 = !DILocation(line: 651, column: 13, scope: !13977)
!13983 = !DILocation(line: 652, column: 44, scope: !13925)
!13984 = !DILocation(line: 652, column: 11, scope: !13925)
!13985 = !DILocation(line: 652, column: 25, scope: !13925)
!13986 = !DILocation(line: 652, column: 31, scope: !13925)
!13987 = !DILocation(line: 652, column: 37, scope: !13925)
!13988 = !DILocation(line: 652, column: 43, scope: !13925)
!13989 = !DILocation(line: 653, column: 11, scope: !13925)
!13990 = !DILocation(line: 653, column: 25, scope: !13925)
!13991 = !DILocation(line: 653, column: 31, scope: !13925)
!13992 = !DILocation(line: 653, column: 37, scope: !13925)
!13993 = !DILocation(line: 653, column: 44, scope: !13925)
!13994 = !DILocation(line: 654, column: 47, scope: !13925)
!13995 = !DILocation(line: 654, column: 57, scope: !13925)
!13996 = !DILocation(line: 654, column: 11, scope: !13925)
!13997 = !DILocation(line: 654, column: 25, scope: !13925)
!13998 = !DILocation(line: 654, column: 31, scope: !13925)
!13999 = !DILocation(line: 654, column: 37, scope: !13925)
!14000 = !DILocation(line: 654, column: 44, scope: !13925)
!14001 = !DILocation(line: 654, column: 46, scope: !13925)
!14002 = !DILocation(line: 655, column: 47, scope: !13925)
!14003 = !DILocation(line: 655, column: 54, scope: !13925)
!14004 = !DILocation(line: 655, column: 55, scope: !13925)
!14005 = !DILocation(line: 655, column: 59, scope: !13925)
!14006 = !DILocation(line: 655, column: 11, scope: !13925)
!14007 = !DILocation(line: 655, column: 25, scope: !13925)
!14008 = !DILocation(line: 655, column: 31, scope: !13925)
!14009 = !DILocation(line: 655, column: 37, scope: !13925)
!14010 = !DILocation(line: 655, column: 44, scope: !13925)
!14011 = !DILocation(line: 655, column: 46, scope: !13925)
!14012 = !DILocation(line: 656, column: 20, scope: !13925)
!14013 = !DILocation(line: 657, column: 15, scope: !13925)
!14014 = !DILocation(line: 659, column: 5, scope: !13915)
!14015 = !DILocation(line: 660, column: 30, scope: !13480)
!14016 = !DILocation(line: 660, column: 3, scope: !13480)
!14017 = !DILocation(line: 660, column: 17, scope: !13480)
!14018 = !DILocation(line: 660, column: 29, scope: !13480)
!14019 = !DILocation(line: 661, column: 9, scope: !13480)
!14020 = !DILocation(line: 661, column: 23, scope: !13480)
!14021 = !DILocation(line: 661, column: 38, scope: !13480)
!14022 = !DILocation(line: 661, column: 52, scope: !13480)
!14023 = !DILocation(line: 661, column: 3, scope: !13480)
!14024 = !DILocation(line: 663, column: 7, scope: !14025)
!14025 = distinct !DILexicalBlock(scope: !13480, file: !1, line: 663, column: 7)
!14026 = !DILocation(line: 663, column: 24, scope: !14025)
!14027 = !DILocation(line: 663, column: 7, scope: !13480)
!14028 = !DILocation(line: 664, column: 20, scope: !14025)
!14029 = !DILocation(line: 664, column: 5, scope: !14025)
!14030 = !DILocation(line: 665, column: 10, scope: !13480)
!14031 = !DILocation(line: 665, column: 3, scope: !13480)
!14032 = !DILocation(line: 666, column: 1, scope: !13480)
!14033 = distinct !DISubprogram(name: "LogPathInfo", scope: !1, file: !1, line: 700, type: !14034, scopeLine: 701, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1236)
!14034 = !DISubroutineType(types: !14035)
!14035 = !{null, !13483}
!14036 = !DILocalVariable(name: "path_info", arg: 1, scope: !14033, file: !1, line: 700, type: !13483)
!14037 = !DILocation(line: 700, column: 41, scope: !14033)
!14038 = !DILocalVariable(name: "p", scope: !14033, file: !1, line: 703, type: !13483)
!14039 = !DILocation(line: 703, column: 6, scope: !14033)
!14040 = !DILocation(line: 705, column: 10, scope: !14033)
!14041 = !DILocation(line: 706, column: 10, scope: !14042)
!14042 = distinct !DILexicalBlock(scope: !14033, file: !1, line: 706, column: 3)
!14043 = !DILocation(line: 706, column: 9, scope: !14042)
!14044 = !DILocation(line: 706, column: 8, scope: !14042)
!14045 = !DILocation(line: 706, column: 21, scope: !14046)
!14046 = distinct !DILexicalBlock(scope: !14042, file: !1, line: 706, column: 3)
!14047 = !DILocation(line: 706, column: 24, scope: !14046)
!14048 = !DILocation(line: 706, column: 29, scope: !14046)
!14049 = !DILocation(line: 706, column: 3, scope: !14042)
!14050 = !DILocation(line: 708, column: 24, scope: !14046)
!14051 = !DILocation(line: 708, column: 27, scope: !14046)
!14052 = !DILocation(line: 708, column: 33, scope: !14046)
!14053 = !DILocation(line: 708, column: 35, scope: !14046)
!14054 = !DILocation(line: 708, column: 38, scope: !14046)
!14055 = !DILocation(line: 708, column: 44, scope: !14046)
!14056 = !DILocation(line: 708, column: 46, scope: !14046)
!14057 = !DILocation(line: 708, column: 49, scope: !14046)
!14058 = !DILocation(line: 708, column: 54, scope: !14046)
!14059 = !DILocation(line: 709, column: 28, scope: !14046)
!14060 = !DILocation(line: 709, column: 31, scope: !14046)
!14061 = !DILocation(line: 709, column: 36, scope: !14046)
!14062 = !DILocation(line: 710, column: 7, scope: !14046)
!14063 = !DILocation(line: 710, column: 10, scope: !14046)
!14064 = !DILocation(line: 710, column: 15, scope: !14046)
!14065 = !DILocation(line: 710, column: 42, scope: !14046)
!14066 = !DILocation(line: 710, column: 45, scope: !14046)
!14067 = !DILocation(line: 710, column: 50, scope: !14046)
!14068 = !DILocation(line: 707, column: 12, scope: !14046)
!14069 = !DILocation(line: 707, column: 5, scope: !14046)
!14070 = !DILocation(line: 706, column: 42, scope: !14046)
!14071 = !DILocation(line: 706, column: 3, scope: !14046)
!14072 = distinct !{!14072, !14049, !14073}
!14073 = !DILocation(line: 711, column: 10, scope: !14042)
!14074 = !DILocation(line: 712, column: 10, scope: !14033)
!14075 = !DILocation(line: 713, column: 1, scope: !14033)
!14076 = distinct !DISubprogram(name: "ReversePoints", scope: !1, file: !1, line: 449, type: !14077, scopeLine: 450, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1236)
!14077 = !DISubroutineType(types: !14078)
!14078 = !{null, !1214, !1111}
!14079 = !DILocalVariable(name: "points", arg: 1, scope: !14076, file: !1, line: 449, type: !1214)
!14080 = !DILocation(line: 449, column: 38, scope: !14076)
!14081 = !DILocalVariable(name: "number_points", arg: 2, scope: !14076, file: !1, line: 449, type: !1111)
!14082 = !DILocation(line: 449, column: 58, scope: !14076)
!14083 = !DILocalVariable(name: "point", scope: !14076, file: !1, line: 452, type: !794)
!14084 = !DILocation(line: 452, column: 5, scope: !14076)
!14085 = !DILocalVariable(name: "i", scope: !14076, file: !1, line: 455, type: !717)
!14086 = !DILocation(line: 455, column: 5, scope: !14076)
!14087 = !DILocation(line: 457, column: 9, scope: !14088)
!14088 = distinct !DILexicalBlock(scope: !14076, file: !1, line: 457, column: 3)
!14089 = !DILocation(line: 457, column: 8, scope: !14088)
!14090 = !DILocation(line: 457, column: 13, scope: !14091)
!14091 = distinct !DILexicalBlock(scope: !14088, file: !1, line: 457, column: 3)
!14092 = !DILocation(line: 457, column: 28, scope: !14091)
!14093 = !DILocation(line: 457, column: 42, scope: !14091)
!14094 = !DILocation(line: 457, column: 15, scope: !14091)
!14095 = !DILocation(line: 457, column: 3, scope: !14088)
!14096 = !DILocation(line: 459, column: 11, scope: !14097)
!14097 = distinct !DILexicalBlock(scope: !14091, file: !1, line: 458, column: 3)
!14098 = !DILocation(line: 459, column: 18, scope: !14097)
!14099 = !DILocation(line: 460, column: 5, scope: !14097)
!14100 = !DILocation(line: 460, column: 12, scope: !14097)
!14101 = !DILocation(line: 460, column: 15, scope: !14097)
!14102 = !DILocation(line: 460, column: 22, scope: !14097)
!14103 = !DILocation(line: 460, column: 37, scope: !14097)
!14104 = !DILocation(line: 460, column: 38, scope: !14097)
!14105 = !DILocation(line: 460, column: 35, scope: !14097)
!14106 = !DILocation(line: 461, column: 5, scope: !14097)
!14107 = !DILocation(line: 461, column: 12, scope: !14097)
!14108 = !DILocation(line: 461, column: 27, scope: !14097)
!14109 = !DILocation(line: 461, column: 28, scope: !14097)
!14110 = !DILocation(line: 461, column: 25, scope: !14097)
!14111 = !DILocation(line: 461, column: 33, scope: !14097)
!14112 = !DILocation(line: 462, column: 3, scope: !14097)
!14113 = !DILocation(line: 457, column: 50, scope: !14091)
!14114 = !DILocation(line: 457, column: 3, scope: !14091)
!14115 = distinct !{!14115, !14095, !14116}
!14116 = !DILocation(line: 462, column: 3, scope: !14088)
!14117 = !DILocation(line: 463, column: 1, scope: !14076)
!14118 = distinct !DISubprogram(name: "CompareEdges", scope: !1, file: !1, line: 390, type: !14119, scopeLine: 391, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1236)
!14119 = !DISubroutineType(types: !14120)
!14120 = !{!575, !1109, !1109}
!14121 = !DILocalVariable(name: "x", arg: 1, scope: !14118, file: !1, line: 390, type: !1109)
!14122 = !DILocation(line: 390, column: 37, scope: !14118)
!14123 = !DILocalVariable(name: "y", arg: 2, scope: !14118, file: !1, line: 390, type: !1109)
!14124 = !DILocation(line: 390, column: 51, scope: !14118)
!14125 = !DILocalVariable(name: "p", scope: !14118, file: !1, line: 393, type: !1227)
!14126 = !DILocation(line: 393, column: 6, scope: !14118)
!14127 = !DILocalVariable(name: "q", scope: !14118, file: !1, line: 394, type: !1227)
!14128 = !DILocation(line: 394, column: 6, scope: !14118)
!14129 = !DILocation(line: 399, column: 24, scope: !14118)
!14130 = !DILocation(line: 399, column: 5, scope: !14118)
!14131 = !DILocation(line: 399, column: 4, scope: !14118)
!14132 = !DILocation(line: 400, column: 24, scope: !14118)
!14133 = !DILocation(line: 400, column: 5, scope: !14118)
!14134 = !DILocation(line: 400, column: 4, scope: !14118)
!14135 = !DILocation(line: 401, column: 8, scope: !14136)
!14136 = distinct !DILexicalBlock(scope: !14118, file: !1, line: 401, column: 7)
!14137 = !DILocation(line: 401, column: 11, scope: !14136)
!14138 = !DILocation(line: 401, column: 21, scope: !14136)
!14139 = !DILocation(line: 401, column: 22, scope: !14136)
!14140 = !DILocation(line: 401, column: 40, scope: !14136)
!14141 = !DILocation(line: 401, column: 43, scope: !14136)
!14142 = !DILocation(line: 401, column: 53, scope: !14136)
!14143 = !DILocation(line: 401, column: 38, scope: !14136)
!14144 = !DILocation(line: 401, column: 7, scope: !14118)
!14145 = !DILocation(line: 402, column: 5, scope: !14136)
!14146 = !DILocation(line: 403, column: 8, scope: !14147)
!14147 = distinct !DILexicalBlock(scope: !14118, file: !1, line: 403, column: 7)
!14148 = !DILocation(line: 403, column: 11, scope: !14147)
!14149 = !DILocation(line: 403, column: 21, scope: !14147)
!14150 = !DILocation(line: 403, column: 22, scope: !14147)
!14151 = !DILocation(line: 403, column: 40, scope: !14147)
!14152 = !DILocation(line: 403, column: 43, scope: !14147)
!14153 = !DILocation(line: 403, column: 53, scope: !14147)
!14154 = !DILocation(line: 403, column: 38, scope: !14147)
!14155 = !DILocation(line: 403, column: 7, scope: !14118)
!14156 = !DILocation(line: 404, column: 5, scope: !14147)
!14157 = !DILocation(line: 405, column: 8, scope: !14158)
!14158 = distinct !DILexicalBlock(scope: !14118, file: !1, line: 405, column: 7)
!14159 = !DILocation(line: 405, column: 11, scope: !14158)
!14160 = !DILocation(line: 405, column: 21, scope: !14158)
!14161 = !DILocation(line: 405, column: 22, scope: !14158)
!14162 = !DILocation(line: 405, column: 40, scope: !14158)
!14163 = !DILocation(line: 405, column: 43, scope: !14158)
!14164 = !DILocation(line: 405, column: 53, scope: !14158)
!14165 = !DILocation(line: 405, column: 38, scope: !14158)
!14166 = !DILocation(line: 405, column: 7, scope: !14118)
!14167 = !DILocation(line: 406, column: 5, scope: !14158)
!14168 = !DILocation(line: 407, column: 8, scope: !14169)
!14169 = distinct !DILexicalBlock(scope: !14118, file: !1, line: 407, column: 7)
!14170 = !DILocation(line: 407, column: 11, scope: !14169)
!14171 = !DILocation(line: 407, column: 21, scope: !14169)
!14172 = !DILocation(line: 407, column: 22, scope: !14169)
!14173 = !DILocation(line: 407, column: 40, scope: !14169)
!14174 = !DILocation(line: 407, column: 43, scope: !14169)
!14175 = !DILocation(line: 407, column: 53, scope: !14169)
!14176 = !DILocation(line: 407, column: 38, scope: !14169)
!14177 = !DILocation(line: 407, column: 7, scope: !14118)
!14178 = !DILocation(line: 408, column: 5, scope: !14169)
!14179 = !DILocation(line: 409, column: 9, scope: !14180)
!14180 = distinct !DILexicalBlock(scope: !14118, file: !1, line: 409, column: 7)
!14181 = !DILocation(line: 409, column: 12, scope: !14180)
!14182 = !DILocation(line: 409, column: 22, scope: !14180)
!14183 = !DILocation(line: 409, column: 24, scope: !14180)
!14184 = !DILocation(line: 409, column: 27, scope: !14180)
!14185 = !DILocation(line: 409, column: 37, scope: !14180)
!14186 = !DILocation(line: 409, column: 23, scope: !14180)
!14187 = !DILocation(line: 409, column: 41, scope: !14180)
!14188 = !DILocation(line: 409, column: 44, scope: !14180)
!14189 = !DILocation(line: 409, column: 54, scope: !14180)
!14190 = !DILocation(line: 409, column: 56, scope: !14180)
!14191 = !DILocation(line: 409, column: 59, scope: !14180)
!14192 = !DILocation(line: 409, column: 69, scope: !14180)
!14193 = !DILocation(line: 409, column: 55, scope: !14180)
!14194 = !DILocation(line: 409, column: 39, scope: !14180)
!14195 = !DILocation(line: 410, column: 9, scope: !14180)
!14196 = !DILocation(line: 410, column: 12, scope: !14180)
!14197 = !DILocation(line: 410, column: 22, scope: !14180)
!14198 = !DILocation(line: 410, column: 24, scope: !14180)
!14199 = !DILocation(line: 410, column: 27, scope: !14180)
!14200 = !DILocation(line: 410, column: 37, scope: !14180)
!14201 = !DILocation(line: 410, column: 23, scope: !14180)
!14202 = !DILocation(line: 410, column: 41, scope: !14180)
!14203 = !DILocation(line: 410, column: 44, scope: !14180)
!14204 = !DILocation(line: 410, column: 54, scope: !14180)
!14205 = !DILocation(line: 410, column: 56, scope: !14180)
!14206 = !DILocation(line: 410, column: 59, scope: !14180)
!14207 = !DILocation(line: 410, column: 69, scope: !14180)
!14208 = !DILocation(line: 410, column: 55, scope: !14180)
!14209 = !DILocation(line: 410, column: 39, scope: !14180)
!14210 = !DILocation(line: 409, column: 71, scope: !14180)
!14211 = !DILocation(line: 410, column: 73, scope: !14180)
!14212 = !DILocation(line: 409, column: 7, scope: !14118)
!14213 = !DILocation(line: 411, column: 5, scope: !14180)
!14214 = !DILocation(line: 412, column: 3, scope: !14118)
!14215 = !DILocation(line: 413, column: 1, scope: !14118)
!14216 = distinct !DISubprogram(name: "LogPolygonInfo", scope: !1, file: !1, line: 419, type: !14217, scopeLine: 420, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1236)
!14217 = !DISubroutineType(types: !14218)
!14218 = !{null, !14219}
!14219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !14220, size: 64)
!14220 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1203)
!14221 = !DILocalVariable(name: "polygon_info", arg: 1, scope: !14216, file: !1, line: 419, type: !14219)
!14222 = !DILocation(line: 419, column: 47, scope: !14216)
!14223 = !DILocalVariable(name: "p", scope: !14216, file: !1, line: 422, type: !1207)
!14224 = !DILocation(line: 422, column: 6, scope: !14216)
!14225 = !DILocalVariable(name: "i", scope: !14216, file: !1, line: 425, type: !717)
!14226 = !DILocation(line: 425, column: 5, scope: !14216)
!14227 = !DILocalVariable(name: "j", scope: !14216, file: !1, line: 426, type: !717)
!14228 = !DILocation(line: 426, column: 5, scope: !14216)
!14229 = !DILocation(line: 428, column: 10, scope: !14216)
!14230 = !DILocation(line: 429, column: 5, scope: !14216)
!14231 = !DILocation(line: 429, column: 19, scope: !14216)
!14232 = !DILocation(line: 429, column: 4, scope: !14216)
!14233 = !DILocation(line: 430, column: 9, scope: !14234)
!14234 = distinct !DILexicalBlock(scope: !14216, file: !1, line: 430, column: 3)
!14235 = !DILocation(line: 430, column: 8, scope: !14234)
!14236 = !DILocation(line: 430, column: 13, scope: !14237)
!14237 = distinct !DILexicalBlock(scope: !14234, file: !1, line: 430, column: 3)
!14238 = !DILocation(line: 430, column: 27, scope: !14237)
!14239 = !DILocation(line: 430, column: 41, scope: !14237)
!14240 = !DILocation(line: 430, column: 15, scope: !14237)
!14241 = !DILocation(line: 430, column: 3, scope: !14234)
!14242 = !DILocation(line: 433, column: 16, scope: !14243)
!14243 = distinct !DILexicalBlock(scope: !14237, file: !1, line: 431, column: 3)
!14244 = !DILocation(line: 433, column: 7, scope: !14243)
!14245 = !DILocation(line: 432, column: 12, scope: !14243)
!14246 = !DILocation(line: 435, column: 7, scope: !14243)
!14247 = !DILocation(line: 435, column: 10, scope: !14243)
!14248 = !DILocation(line: 435, column: 20, scope: !14243)
!14249 = !DILocation(line: 434, column: 12, scope: !14243)
!14250 = !DILocation(line: 437, column: 7, scope: !14243)
!14251 = !DILocation(line: 437, column: 10, scope: !14243)
!14252 = !DILocation(line: 437, column: 20, scope: !14243)
!14253 = !DILocation(line: 436, column: 12, scope: !14243)
!14254 = !DILocation(line: 439, column: 37, scope: !14243)
!14255 = !DILocation(line: 439, column: 40, scope: !14243)
!14256 = !DILocation(line: 439, column: 47, scope: !14243)
!14257 = !DILocation(line: 439, column: 50, scope: !14243)
!14258 = !DILocation(line: 439, column: 53, scope: !14243)
!14259 = !DILocation(line: 439, column: 60, scope: !14243)
!14260 = !DILocation(line: 440, column: 7, scope: !14243)
!14261 = !DILocation(line: 440, column: 10, scope: !14243)
!14262 = !DILocation(line: 440, column: 17, scope: !14243)
!14263 = !DILocation(line: 440, column: 20, scope: !14243)
!14264 = !DILocation(line: 440, column: 23, scope: !14243)
!14265 = !DILocation(line: 440, column: 30, scope: !14243)
!14266 = !DILocation(line: 438, column: 12, scope: !14243)
!14267 = !DILocation(line: 441, column: 11, scope: !14268)
!14268 = distinct !DILexicalBlock(scope: !14243, file: !1, line: 441, column: 5)
!14269 = !DILocation(line: 441, column: 10, scope: !14268)
!14270 = !DILocation(line: 441, column: 15, scope: !14271)
!14271 = distinct !DILexicalBlock(scope: !14268, file: !1, line: 441, column: 5)
!14272 = !DILocation(line: 441, column: 29, scope: !14271)
!14273 = !DILocation(line: 441, column: 32, scope: !14271)
!14274 = !DILocation(line: 441, column: 17, scope: !14271)
!14275 = !DILocation(line: 441, column: 5, scope: !14268)
!14276 = !DILocation(line: 443, column: 9, scope: !14271)
!14277 = !DILocation(line: 443, column: 12, scope: !14271)
!14278 = !DILocation(line: 443, column: 19, scope: !14271)
!14279 = !DILocation(line: 443, column: 22, scope: !14271)
!14280 = !DILocation(line: 443, column: 24, scope: !14271)
!14281 = !DILocation(line: 443, column: 27, scope: !14271)
!14282 = !DILocation(line: 443, column: 34, scope: !14271)
!14283 = !DILocation(line: 443, column: 37, scope: !14271)
!14284 = !DILocation(line: 442, column: 14, scope: !14271)
!14285 = !DILocation(line: 442, column: 7, scope: !14271)
!14286 = !DILocation(line: 441, column: 48, scope: !14271)
!14287 = !DILocation(line: 441, column: 5, scope: !14271)
!14288 = distinct !{!14288, !14275, !14289}
!14289 = !DILocation(line: 443, column: 38, scope: !14268)
!14290 = !DILocation(line: 444, column: 6, scope: !14243)
!14291 = !DILocation(line: 445, column: 3, scope: !14243)
!14292 = !DILocation(line: 430, column: 56, scope: !14237)
!14293 = !DILocation(line: 430, column: 3, scope: !14237)
!14294 = distinct !{!14294, !14241, !14295}
!14295 = !DILocation(line: 445, column: 3, scope: !14234)
!14296 = !DILocation(line: 446, column: 10, scope: !14216)
!14297 = !DILocation(line: 447, column: 1, scope: !14216)
!14298 = distinct !DISubprogram(name: "DestroyPolygonInfo", scope: !1, file: !1, line: 939, type: !14299, scopeLine: 940, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1236)
!14299 = !DISubroutineType(types: !14300)
!14300 = !{!1202, !1202}
!14301 = !DILocalVariable(name: "polygon_info", arg: 1, scope: !14298, file: !1, line: 939, type: !1202)
!14302 = !DILocation(line: 939, column: 53, scope: !14298)
!14303 = !DILocalVariable(name: "i", scope: !14298, file: !1, line: 942, type: !717)
!14304 = !DILocation(line: 942, column: 5, scope: !14298)
!14305 = !DILocation(line: 944, column: 9, scope: !14306)
!14306 = distinct !DILexicalBlock(scope: !14298, file: !1, line: 944, column: 3)
!14307 = !DILocation(line: 944, column: 8, scope: !14306)
!14308 = !DILocation(line: 944, column: 13, scope: !14309)
!14309 = distinct !DILexicalBlock(scope: !14306, file: !1, line: 944, column: 3)
!14310 = !DILocation(line: 944, column: 27, scope: !14309)
!14311 = !DILocation(line: 944, column: 41, scope: !14309)
!14312 = !DILocation(line: 944, column: 15, scope: !14309)
!14313 = !DILocation(line: 944, column: 3, scope: !14306)
!14314 = !DILocation(line: 946, column: 30, scope: !14309)
!14315 = !DILocation(line: 946, column: 44, scope: !14309)
!14316 = !DILocation(line: 946, column: 50, scope: !14309)
!14317 = !DILocation(line: 946, column: 53, scope: !14309)
!14318 = !DILocation(line: 946, column: 7, scope: !14309)
!14319 = !DILocation(line: 945, column: 35, scope: !14309)
!14320 = !DILocation(line: 945, column: 5, scope: !14309)
!14321 = !DILocation(line: 945, column: 19, scope: !14309)
!14322 = !DILocation(line: 945, column: 25, scope: !14309)
!14323 = !DILocation(line: 945, column: 28, scope: !14309)
!14324 = !DILocation(line: 945, column: 34, scope: !14309)
!14325 = !DILocation(line: 944, column: 56, scope: !14309)
!14326 = !DILocation(line: 944, column: 3, scope: !14309)
!14327 = distinct !{!14327, !14313, !14328}
!14328 = !DILocation(line: 946, column: 59, scope: !14306)
!14329 = !DILocation(line: 947, column: 59, scope: !14298)
!14330 = !DILocation(line: 947, column: 73, scope: !14298)
!14331 = !DILocation(line: 947, column: 36, scope: !14298)
!14332 = !DILocation(line: 947, column: 23, scope: !14298)
!14333 = !DILocation(line: 947, column: 3, scope: !14298)
!14334 = !DILocation(line: 947, column: 17, scope: !14298)
!14335 = !DILocation(line: 947, column: 22, scope: !14298)
!14336 = !DILocation(line: 948, column: 49, scope: !14298)
!14337 = !DILocation(line: 948, column: 26, scope: !14298)
!14338 = !DILocation(line: 948, column: 10, scope: !14298)
!14339 = !DILocation(line: 948, column: 3, scope: !14298)
!14340 = distinct !DISubprogram(name: "DestroyEdge", scope: !1, file: !1, line: 903, type: !14341, scopeLine: 905, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1236)
!14341 = !DISubroutineType(types: !14342)
!14342 = !{!712, !1202, !1111}
!14343 = !DILocalVariable(name: "polygon_info", arg: 1, scope: !14340, file: !1, line: 903, type: !1202)
!14344 = !DILocation(line: 903, column: 40, scope: !14340)
!14345 = !DILocalVariable(name: "edge", arg: 2, scope: !14340, file: !1, line: 904, type: !1111)
!14346 = !DILocation(line: 904, column: 16, scope: !14340)
!14347 = !DILocation(line: 908, column: 5, scope: !14340)
!14348 = !DILocation(line: 908, column: 19, scope: !14340)
!14349 = !DILocation(line: 908, column: 25, scope: !14340)
!14350 = !DILocation(line: 908, column: 31, scope: !14340)
!14351 = !DILocation(line: 907, column: 50, scope: !14340)
!14352 = !DILocation(line: 907, column: 36, scope: !14340)
!14353 = !DILocation(line: 907, column: 3, scope: !14340)
!14354 = !DILocation(line: 907, column: 17, scope: !14340)
!14355 = !DILocation(line: 907, column: 23, scope: !14340)
!14356 = !DILocation(line: 907, column: 29, scope: !14340)
!14357 = !DILocation(line: 907, column: 35, scope: !14340)
!14358 = !DILocation(line: 909, column: 3, scope: !14340)
!14359 = !DILocation(line: 909, column: 17, scope: !14340)
!14360 = !DILocation(line: 909, column: 29, scope: !14340)
!14361 = !DILocation(line: 910, column: 7, scope: !14362)
!14362 = distinct !DILexicalBlock(scope: !14340, file: !1, line: 910, column: 7)
!14363 = !DILocation(line: 910, column: 14, scope: !14362)
!14364 = !DILocation(line: 910, column: 28, scope: !14362)
!14365 = !DILocation(line: 910, column: 12, scope: !14362)
!14366 = !DILocation(line: 910, column: 7, scope: !14340)
!14367 = !DILocation(line: 911, column: 29, scope: !14362)
!14368 = !DILocation(line: 911, column: 43, scope: !14362)
!14369 = !DILocation(line: 911, column: 49, scope: !14362)
!14370 = !DILocation(line: 911, column: 48, scope: !14362)
!14371 = !DILocation(line: 911, column: 54, scope: !14362)
!14372 = !DILocation(line: 911, column: 68, scope: !14362)
!14373 = !DILocation(line: 911, column: 74, scope: !14362)
!14374 = !DILocation(line: 911, column: 73, scope: !14362)
!14375 = !DILocation(line: 911, column: 78, scope: !14362)
!14376 = !DILocation(line: 912, column: 17, scope: !14362)
!14377 = !DILocation(line: 912, column: 31, scope: !14362)
!14378 = !DILocation(line: 912, column: 44, scope: !14362)
!14379 = !DILocation(line: 912, column: 43, scope: !14362)
!14380 = !DILocation(line: 912, column: 49, scope: !14362)
!14381 = !DILocation(line: 911, column: 12, scope: !14362)
!14382 = !DILocation(line: 911, column: 5, scope: !14362)
!14383 = !DILocation(line: 913, column: 10, scope: !14340)
!14384 = !DILocation(line: 913, column: 24, scope: !14340)
!14385 = !DILocation(line: 913, column: 3, scope: !14340)
!14386 = distinct !DISubprogram(name: "MagickAbsoluteValue", scope: !1, file: !1, line: 1088, type: !14387, scopeLine: 1089, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1236)
!14387 = !DISubroutineType(types: !14388)
!14388 = !{!717, !10636}
!14389 = !DILocalVariable(name: "x", arg: 1, scope: !14386, file: !1, line: 1088, type: !10636)
!14390 = !DILocation(line: 1088, column: 57, scope: !14386)
!14391 = !DILocation(line: 1090, column: 7, scope: !14392)
!14392 = distinct !DILexicalBlock(scope: !14386, file: !1, line: 1090, column: 7)
!14393 = !DILocation(line: 1090, column: 9, scope: !14392)
!14394 = !DILocation(line: 1090, column: 7, scope: !14386)
!14395 = !DILocation(line: 1091, column: 13, scope: !14392)
!14396 = !DILocation(line: 1091, column: 12, scope: !14392)
!14397 = !DILocation(line: 1091, column: 5, scope: !14392)
!14398 = !DILocation(line: 1092, column: 10, scope: !14386)
!14399 = !DILocation(line: 1092, column: 3, scope: !14386)
!14400 = !DILocation(line: 1093, column: 1, scope: !14386)
!14401 = distinct !DISubprogram(name: "TraceStrokePolygon", scope: !1, file: !1, line: 5805, type: !14402, scopeLine: 5807, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1236)
!14402 = !DISubroutineType(types: !14403)
!14403 = !{!1184, !1525, !8925}
!14404 = !DILocalVariable(name: "draw_info", arg: 1, scope: !14401, file: !1, line: 5805, type: !1525)
!14405 = !DILocation(line: 5805, column: 58, scope: !14401)
!14406 = !DILocalVariable(name: "primitive_info", arg: 2, scope: !14401, file: !1, line: 5806, type: !8925)
!14407 = !DILocation(line: 5806, column: 24, scope: !14401)
!14408 = !DILocalVariable(name: "delta_theta", scope: !14401, file: !1, line: 5816, type: !728)
!14409 = !DILocation(line: 5816, column: 5, scope: !14401)
!14410 = !DILocalVariable(name: "dot_product", scope: !14401, file: !1, line: 5817, type: !728)
!14411 = !DILocation(line: 5817, column: 5, scope: !14401)
!14412 = !DILocalVariable(name: "mid", scope: !14401, file: !1, line: 5818, type: !728)
!14413 = !DILocation(line: 5818, column: 5, scope: !14401)
!14414 = !DILocalVariable(name: "miterlimit", scope: !14401, file: !1, line: 5819, type: !728)
!14415 = !DILocation(line: 5819, column: 5, scope: !14401)
!14416 = !DILocalVariable(name: "dx", scope: !14401, file: !1, line: 5822, type: !14417)
!14417 = !DIDerivedType(tag: DW_TAG_typedef, name: "LineSegment", scope: !14401, file: !1, line: 5813, baseType: !14418)
!14418 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_LineSegment", scope: !14401, file: !1, line: 5808, size: 128, elements: !14419)
!14419 = !{!14420, !14421}
!14420 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !14418, file: !1, line: 5811, baseType: !728, size: 64)
!14421 = !DIDerivedType(tag: DW_TAG_member, name: "q", scope: !14418, file: !1, line: 5812, baseType: !728, size: 64, offset: 64)
!14422 = !DILocation(line: 5822, column: 5, scope: !14401)
!14423 = !DILocalVariable(name: "dy", scope: !14401, file: !1, line: 5823, type: !14417)
!14424 = !DILocation(line: 5823, column: 5, scope: !14401)
!14425 = !DILocalVariable(name: "inverse_slope", scope: !14401, file: !1, line: 5824, type: !14417)
!14426 = !DILocation(line: 5824, column: 5, scope: !14401)
!14427 = !DILocalVariable(name: "slope", scope: !14401, file: !1, line: 5825, type: !14417)
!14428 = !DILocation(line: 5825, column: 5, scope: !14401)
!14429 = !DILocalVariable(name: "theta", scope: !14401, file: !1, line: 5826, type: !14417)
!14430 = !DILocation(line: 5826, column: 5, scope: !14401)
!14431 = !DILocalVariable(name: "closed_path", scope: !14401, file: !1, line: 5829, type: !777)
!14432 = !DILocation(line: 5829, column: 5, scope: !14401)
!14433 = !DILocalVariable(name: "box_p", scope: !14401, file: !1, line: 5832, type: !14434)
!14434 = !DICompositeType(tag: DW_TAG_array_type, baseType: !794, size: 640, elements: !14435)
!14435 = !{!14436}
!14436 = !DISubrange(count: 5)
!14437 = !DILocation(line: 5832, column: 5, scope: !14401)
!14438 = !DILocalVariable(name: "box_q", scope: !14401, file: !1, line: 5833, type: !14434)
!14439 = !DILocation(line: 5833, column: 5, scope: !14401)
!14440 = !DILocalVariable(name: "center", scope: !14401, file: !1, line: 5834, type: !794)
!14441 = !DILocation(line: 5834, column: 5, scope: !14401)
!14442 = !DILocalVariable(name: "offset", scope: !14401, file: !1, line: 5835, type: !794)
!14443 = !DILocation(line: 5835, column: 5, scope: !14401)
!14444 = !DILocalVariable(name: "path_p", scope: !14401, file: !1, line: 5836, type: !1214)
!14445 = !DILocation(line: 5836, column: 6, scope: !14401)
!14446 = !DILocalVariable(name: "path_q", scope: !14401, file: !1, line: 5837, type: !1214)
!14447 = !DILocation(line: 5837, column: 6, scope: !14401)
!14448 = !DILocalVariable(name: "polygon_primitive", scope: !14401, file: !1, line: 5840, type: !1184)
!14449 = !DILocation(line: 5840, column: 6, scope: !14401)
!14450 = !DILocalVariable(name: "stroke_polygon", scope: !14401, file: !1, line: 5841, type: !1184)
!14451 = !DILocation(line: 5841, column: 6, scope: !14401)
!14452 = !DILocalVariable(name: "i", scope: !14401, file: !1, line: 5844, type: !717)
!14453 = !DILocation(line: 5844, column: 5, scope: !14401)
!14454 = !DILocalVariable(name: "arc_segments", scope: !14401, file: !1, line: 5847, type: !712)
!14455 = !DILocation(line: 5847, column: 5, scope: !14401)
!14456 = !DILocalVariable(name: "max_strokes", scope: !14401, file: !1, line: 5848, type: !712)
!14457 = !DILocation(line: 5848, column: 5, scope: !14401)
!14458 = !DILocalVariable(name: "number_vertices", scope: !14401, file: !1, line: 5849, type: !712)
!14459 = !DILocation(line: 5849, column: 5, scope: !14401)
!14460 = !DILocalVariable(name: "j", scope: !14401, file: !1, line: 5852, type: !717)
!14461 = !DILocation(line: 5852, column: 5, scope: !14401)
!14462 = !DILocalVariable(name: "n", scope: !14401, file: !1, line: 5853, type: !717)
!14463 = !DILocation(line: 5853, column: 5, scope: !14401)
!14464 = !DILocalVariable(name: "p", scope: !14401, file: !1, line: 5854, type: !717)
!14465 = !DILocation(line: 5854, column: 5, scope: !14401)
!14466 = !DILocalVariable(name: "q", scope: !14401, file: !1, line: 5855, type: !717)
!14467 = !DILocation(line: 5855, column: 5, scope: !14401)
!14468 = !DILocation(line: 5860, column: 19, scope: !14401)
!14469 = !DILocation(line: 5860, column: 35, scope: !14401)
!14470 = !DILocation(line: 5860, column: 18, scope: !14401)
!14471 = !DILocation(line: 5861, column: 17, scope: !14401)
!14472 = !DILocation(line: 5861, column: 16, scope: !14401)
!14473 = !DILocation(line: 5861, column: 32, scope: !14401)
!14474 = !DILocation(line: 5861, column: 48, scope: !14401)
!14475 = !DILocation(line: 5861, column: 14, scope: !14401)
!14476 = !DILocation(line: 5862, column: 54, scope: !14401)
!14477 = !DILocation(line: 5862, column: 24, scope: !14401)
!14478 = !DILocation(line: 5862, column: 10, scope: !14401)
!14479 = !DILocation(line: 5862, column: 9, scope: !14401)
!14480 = !DILocation(line: 5864, column: 54, scope: !14401)
!14481 = !DILocation(line: 5864, column: 24, scope: !14401)
!14482 = !DILocation(line: 5864, column: 10, scope: !14401)
!14483 = !DILocation(line: 5864, column: 9, scope: !14401)
!14484 = !DILocation(line: 5867, column: 5, scope: !14401)
!14485 = !DILocation(line: 5867, column: 20, scope: !14401)
!14486 = !DILocation(line: 5866, column: 39, scope: !14401)
!14487 = !DILocation(line: 5866, column: 21, scope: !14401)
!14488 = !DILocation(line: 5866, column: 20, scope: !14401)
!14489 = !DILocation(line: 5868, column: 8, scope: !14490)
!14490 = distinct !DILexicalBlock(scope: !14401, file: !1, line: 5868, column: 7)
!14491 = !DILocation(line: 5868, column: 15, scope: !14490)
!14492 = !DILocation(line: 5868, column: 38, scope: !14490)
!14493 = !DILocation(line: 5868, column: 42, scope: !14490)
!14494 = !DILocation(line: 5868, column: 49, scope: !14490)
!14495 = !DILocation(line: 5868, column: 72, scope: !14490)
!14496 = !DILocation(line: 5869, column: 8, scope: !14490)
!14497 = !DILocation(line: 5869, column: 26, scope: !14490)
!14498 = !DILocation(line: 5868, column: 7, scope: !14401)
!14499 = !DILocation(line: 5870, column: 5, scope: !14490)
!14500 = !DILocation(line: 5871, column: 27, scope: !14401)
!14501 = !DILocation(line: 5871, column: 45, scope: !14401)
!14502 = !DILocation(line: 5872, column: 5, scope: !14401)
!14503 = !DILocation(line: 5872, column: 20, scope: !14401)
!14504 = !DILocation(line: 5871, column: 10, scope: !14401)
!14505 = !DILocation(line: 5874, column: 6, scope: !14401)
!14506 = !DILocation(line: 5874, column: 21, scope: !14401)
!14507 = !DILocation(line: 5874, column: 36, scope: !14401)
!14508 = !DILocation(line: 5874, column: 40, scope: !14401)
!14509 = !DILocation(line: 5874, column: 46, scope: !14401)
!14510 = !DILocation(line: 5874, column: 51, scope: !14401)
!14511 = !DILocation(line: 5874, column: 69, scope: !14401)
!14512 = !DILocation(line: 5874, column: 75, scope: !14401)
!14513 = !DILocation(line: 5874, column: 48, scope: !14401)
!14514 = !DILocation(line: 5874, column: 78, scope: !14401)
!14515 = !DILocation(line: 5875, column: 6, scope: !14401)
!14516 = !DILocation(line: 5875, column: 21, scope: !14401)
!14517 = !DILocation(line: 5875, column: 36, scope: !14401)
!14518 = !DILocation(line: 5875, column: 40, scope: !14401)
!14519 = !DILocation(line: 5875, column: 46, scope: !14401)
!14520 = !DILocation(line: 5875, column: 51, scope: !14401)
!14521 = !DILocation(line: 5875, column: 69, scope: !14401)
!14522 = !DILocation(line: 5875, column: 75, scope: !14401)
!14523 = !DILocation(line: 5875, column: 48, scope: !14401)
!14524 = !DILocation(line: 0, scope: !14401)
!14525 = !DILocation(line: 5874, column: 5, scope: !14401)
!14526 = !DILocation(line: 5873, column: 14, scope: !14401)
!14527 = !DILocation(line: 5877, column: 8, scope: !14528)
!14528 = distinct !DILexicalBlock(scope: !14401, file: !1, line: 5877, column: 7)
!14529 = !DILocation(line: 5877, column: 19, scope: !14528)
!14530 = !DILocation(line: 5877, column: 28, scope: !14528)
!14531 = !DILocation(line: 5877, column: 42, scope: !14528)
!14532 = !DILocation(line: 5878, column: 9, scope: !14528)
!14533 = !DILocation(line: 5878, column: 20, scope: !14528)
!14534 = !DILocation(line: 5878, column: 29, scope: !14528)
!14535 = !DILocation(line: 5878, column: 43, scope: !14528)
!14536 = !DILocation(line: 5878, column: 47, scope: !14528)
!14537 = !DILocation(line: 5878, column: 59, scope: !14528)
!14538 = !DILocation(line: 5877, column: 7, scope: !14401)
!14539 = !DILocation(line: 5880, column: 7, scope: !14540)
!14540 = distinct !DILexicalBlock(scope: !14528, file: !1, line: 5879, column: 5)
!14541 = !DILocation(line: 5880, column: 25, scope: !14540)
!14542 = !DILocation(line: 5880, column: 42, scope: !14540)
!14543 = !DILocation(line: 5881, column: 22, scope: !14540)
!14544 = !DILocation(line: 5882, column: 5, scope: !14540)
!14545 = !DILocation(line: 5883, column: 3, scope: !14401)
!14546 = !DILocation(line: 5883, column: 21, scope: !14401)
!14547 = !DILocation(line: 5883, column: 38, scope: !14401)
!14548 = !DILocation(line: 5883, column: 47, scope: !14401)
!14549 = !DILocation(line: 5887, column: 6, scope: !14401)
!14550 = !DILocation(line: 5887, column: 7, scope: !14401)
!14551 = !DILocation(line: 5888, column: 6, scope: !14401)
!14552 = !DILocation(line: 5888, column: 7, scope: !14401)
!14553 = !DILocation(line: 5889, column: 9, scope: !14554)
!14554 = distinct !DILexicalBlock(scope: !14401, file: !1, line: 5889, column: 3)
!14555 = !DILocation(line: 5889, column: 8, scope: !14554)
!14556 = !DILocation(line: 5889, column: 13, scope: !14557)
!14557 = distinct !DILexicalBlock(scope: !14554, file: !1, line: 5889, column: 3)
!14558 = !DILocation(line: 5889, column: 27, scope: !14557)
!14559 = !DILocation(line: 5889, column: 15, scope: !14557)
!14560 = !DILocation(line: 5889, column: 3, scope: !14554)
!14561 = !DILocation(line: 5891, column: 10, scope: !14562)
!14562 = distinct !DILexicalBlock(scope: !14557, file: !1, line: 5890, column: 3)
!14563 = !DILocation(line: 5891, column: 28, scope: !14562)
!14564 = !DILocation(line: 5891, column: 31, scope: !14562)
!14565 = !DILocation(line: 5891, column: 37, scope: !14562)
!14566 = !DILocation(line: 5891, column: 39, scope: !14562)
!14567 = !DILocation(line: 5891, column: 60, scope: !14562)
!14568 = !DILocation(line: 5891, column: 66, scope: !14562)
!14569 = !DILocation(line: 5891, column: 38, scope: !14562)
!14570 = !DILocation(line: 5891, column: 8, scope: !14562)
!14571 = !DILocation(line: 5891, column: 9, scope: !14562)
!14572 = !DILocation(line: 5892, column: 10, scope: !14562)
!14573 = !DILocation(line: 5892, column: 28, scope: !14562)
!14574 = !DILocation(line: 5892, column: 31, scope: !14562)
!14575 = !DILocation(line: 5892, column: 37, scope: !14562)
!14576 = !DILocation(line: 5892, column: 39, scope: !14562)
!14577 = !DILocation(line: 5892, column: 60, scope: !14562)
!14578 = !DILocation(line: 5892, column: 66, scope: !14562)
!14579 = !DILocation(line: 5892, column: 38, scope: !14562)
!14580 = !DILocation(line: 5892, column: 8, scope: !14562)
!14581 = !DILocation(line: 5892, column: 9, scope: !14562)
!14582 = !DILocation(line: 5893, column: 18, scope: !14583)
!14583 = distinct !DILexicalBlock(scope: !14562, file: !1, line: 5893, column: 9)
!14584 = !DILocation(line: 5893, column: 10, scope: !14583)
!14585 = !DILocation(line: 5893, column: 21, scope: !14583)
!14586 = !DILocation(line: 5893, column: 39, scope: !14583)
!14587 = !DILocation(line: 5893, column: 51, scope: !14583)
!14588 = !DILocation(line: 5893, column: 43, scope: !14583)
!14589 = !DILocation(line: 5893, column: 54, scope: !14583)
!14590 = !DILocation(line: 5893, column: 9, scope: !14562)
!14591 = !DILocation(line: 5894, column: 7, scope: !14583)
!14592 = !DILocation(line: 5895, column: 3, scope: !14562)
!14593 = !DILocation(line: 5889, column: 45, scope: !14557)
!14594 = !DILocation(line: 5889, column: 3, scope: !14557)
!14595 = distinct !{!14595, !14560, !14596}
!14596 = !DILocation(line: 5895, column: 3, scope: !14554)
!14597 = !DILocation(line: 5896, column: 7, scope: !14598)
!14598 = distinct !DILexicalBlock(scope: !14401, file: !1, line: 5896, column: 7)
!14599 = !DILocation(line: 5896, column: 22, scope: !14598)
!14600 = !DILocation(line: 5896, column: 9, scope: !14598)
!14601 = !DILocation(line: 5896, column: 7, scope: !14401)
!14602 = !DILocation(line: 5897, column: 17, scope: !14598)
!14603 = !DILocation(line: 5897, column: 32, scope: !14598)
!14604 = !DILocation(line: 5897, column: 6, scope: !14598)
!14605 = !DILocation(line: 5897, column: 5, scope: !14598)
!14606 = !DILocation(line: 5898, column: 36, scope: !14401)
!14607 = !DILocation(line: 5898, column: 11, scope: !14401)
!14608 = !DILocation(line: 5898, column: 42, scope: !14401)
!14609 = !DILocation(line: 5898, column: 38, scope: !14401)
!14610 = !DILocation(line: 5898, column: 9, scope: !14401)
!14611 = !DILocation(line: 5898, column: 10, scope: !14401)
!14612 = !DILocation(line: 5899, column: 53, scope: !14401)
!14613 = !DILocation(line: 5899, column: 25, scope: !14401)
!14614 = !DILocation(line: 5899, column: 24, scope: !14401)
!14615 = !DILocation(line: 5899, column: 17, scope: !14401)
!14616 = !DILocation(line: 5899, column: 18, scope: !14401)
!14617 = !DILocation(line: 5900, column: 21, scope: !14401)
!14618 = !DILocation(line: 5900, column: 32, scope: !14401)
!14619 = !DILocation(line: 5900, column: 7, scope: !14401)
!14620 = !DILocation(line: 5900, column: 40, scope: !14401)
!14621 = !DILocation(line: 5900, column: 51, scope: !14401)
!14622 = !DILocation(line: 5900, column: 39, scope: !14401)
!14623 = !DILocation(line: 5900, column: 63, scope: !14401)
!14624 = !DILocation(line: 5900, column: 6, scope: !14401)
!14625 = !DILocation(line: 5901, column: 24, scope: !14401)
!14626 = !DILocation(line: 5901, column: 35, scope: !14401)
!14627 = !DILocation(line: 5901, column: 46, scope: !14401)
!14628 = !DILocation(line: 5901, column: 57, scope: !14401)
!14629 = !DILocation(line: 5901, column: 45, scope: !14401)
!14630 = !DILocation(line: 5901, column: 68, scope: !14401)
!14631 = !DILocation(line: 5901, column: 67, scope: !14401)
!14632 = !DILocation(line: 5901, column: 72, scope: !14401)
!14633 = !DILocation(line: 5901, column: 71, scope: !14401)
!14634 = !DILocation(line: 5901, column: 13, scope: !14401)
!14635 = !DILocation(line: 5902, column: 8, scope: !14636)
!14636 = distinct !DILexicalBlock(scope: !14401, file: !1, line: 5902, column: 7)
!14637 = !DILocation(line: 5902, column: 19, scope: !14636)
!14638 = !DILocation(line: 5902, column: 27, scope: !14636)
!14639 = !DILocation(line: 5902, column: 41, scope: !14636)
!14640 = !DILocation(line: 5902, column: 45, scope: !14636)
!14641 = !DILocation(line: 5902, column: 57, scope: !14636)
!14642 = !DILocation(line: 5902, column: 7, scope: !14401)
!14643 = !DILocation(line: 5903, column: 24, scope: !14636)
!14644 = !DILocation(line: 5903, column: 42, scope: !14636)
!14645 = !DILocation(line: 5903, column: 58, scope: !14636)
!14646 = !DILocation(line: 5903, column: 5, scope: !14636)
!14647 = !DILocation(line: 5904, column: 27, scope: !14401)
!14648 = !DILocation(line: 5904, column: 31, scope: !14401)
!14649 = !DILocation(line: 5904, column: 30, scope: !14401)
!14650 = !DILocation(line: 5904, column: 50, scope: !14401)
!14651 = !DILocation(line: 5904, column: 66, scope: !14401)
!14652 = !DILocation(line: 5904, column: 51, scope: !14401)
!14653 = !DILocation(line: 5904, column: 67, scope: !14401)
!14654 = !DILocation(line: 5904, column: 34, scope: !14401)
!14655 = !DILocation(line: 5904, column: 12, scope: !14401)
!14656 = !DILocation(line: 5904, column: 10, scope: !14401)
!14657 = !DILocation(line: 5904, column: 11, scope: !14401)
!14658 = !DILocation(line: 5905, column: 29, scope: !14401)
!14659 = !DILocation(line: 5905, column: 45, scope: !14401)
!14660 = !DILocation(line: 5905, column: 30, scope: !14401)
!14661 = !DILocation(line: 5905, column: 10, scope: !14401)
!14662 = !DILocation(line: 5905, column: 11, scope: !14401)
!14663 = !DILocation(line: 5906, column: 11, scope: !14664)
!14664 = distinct !DILexicalBlock(scope: !14401, file: !1, line: 5906, column: 7)
!14665 = !DILocation(line: 5906, column: 20, scope: !14664)
!14666 = !DILocation(line: 5906, column: 12, scope: !14664)
!14667 = !DILocation(line: 5906, column: 25, scope: !14664)
!14668 = !DILocation(line: 5906, column: 34, scope: !14664)
!14669 = !DILocation(line: 5906, column: 26, scope: !14664)
!14670 = !DILocation(line: 5906, column: 21, scope: !14664)
!14671 = !DILocation(line: 5906, column: 37, scope: !14664)
!14672 = !DILocation(line: 5906, column: 7, scope: !14401)
!14673 = !DILocation(line: 5908, column: 18, scope: !14674)
!14674 = distinct !DILexicalBlock(scope: !14664, file: !1, line: 5907, column: 5)
!14675 = !DILocation(line: 5908, column: 39, scope: !14674)
!14676 = !DILocation(line: 5908, column: 45, scope: !14674)
!14677 = !DILocation(line: 5908, column: 54, scope: !14674)
!14678 = !DILocation(line: 5908, column: 46, scope: !14674)
!14679 = !DILocation(line: 5908, column: 7, scope: !14674)
!14680 = !DILocation(line: 5908, column: 16, scope: !14674)
!14681 = !DILocation(line: 5908, column: 17, scope: !14674)
!14682 = !DILocation(line: 5909, column: 18, scope: !14674)
!14683 = !DILocation(line: 5909, column: 39, scope: !14674)
!14684 = !DILocation(line: 5909, column: 45, scope: !14674)
!14685 = !DILocation(line: 5909, column: 54, scope: !14674)
!14686 = !DILocation(line: 5909, column: 70, scope: !14674)
!14687 = !DILocation(line: 5909, column: 55, scope: !14674)
!14688 = !DILocation(line: 5909, column: 46, scope: !14674)
!14689 = !DILocation(line: 5909, column: 7, scope: !14674)
!14690 = !DILocation(line: 5909, column: 16, scope: !14674)
!14691 = !DILocation(line: 5909, column: 17, scope: !14674)
!14692 = !DILocation(line: 5910, column: 18, scope: !14674)
!14693 = !DILocation(line: 5910, column: 36, scope: !14674)
!14694 = !DILocation(line: 5910, column: 39, scope: !14674)
!14695 = !DILocation(line: 5910, column: 45, scope: !14674)
!14696 = !DILocation(line: 5910, column: 54, scope: !14674)
!14697 = !DILocation(line: 5910, column: 46, scope: !14674)
!14698 = !DILocation(line: 5910, column: 7, scope: !14674)
!14699 = !DILocation(line: 5910, column: 16, scope: !14674)
!14700 = !DILocation(line: 5910, column: 17, scope: !14674)
!14701 = !DILocation(line: 5911, column: 18, scope: !14674)
!14702 = !DILocation(line: 5911, column: 36, scope: !14674)
!14703 = !DILocation(line: 5911, column: 39, scope: !14674)
!14704 = !DILocation(line: 5911, column: 45, scope: !14674)
!14705 = !DILocation(line: 5911, column: 54, scope: !14674)
!14706 = !DILocation(line: 5911, column: 70, scope: !14674)
!14707 = !DILocation(line: 5911, column: 55, scope: !14674)
!14708 = !DILocation(line: 5911, column: 46, scope: !14674)
!14709 = !DILocation(line: 5911, column: 7, scope: !14674)
!14710 = !DILocation(line: 5911, column: 16, scope: !14674)
!14711 = !DILocation(line: 5911, column: 17, scope: !14674)
!14712 = !DILocation(line: 5912, column: 18, scope: !14674)
!14713 = !DILocation(line: 5912, column: 39, scope: !14674)
!14714 = !DILocation(line: 5912, column: 45, scope: !14674)
!14715 = !DILocation(line: 5912, column: 54, scope: !14674)
!14716 = !DILocation(line: 5912, column: 46, scope: !14674)
!14717 = !DILocation(line: 5912, column: 7, scope: !14674)
!14718 = !DILocation(line: 5912, column: 16, scope: !14674)
!14719 = !DILocation(line: 5912, column: 17, scope: !14674)
!14720 = !DILocation(line: 5913, column: 18, scope: !14674)
!14721 = !DILocation(line: 5913, column: 39, scope: !14674)
!14722 = !DILocation(line: 5913, column: 45, scope: !14674)
!14723 = !DILocation(line: 5913, column: 54, scope: !14674)
!14724 = !DILocation(line: 5913, column: 70, scope: !14674)
!14725 = !DILocation(line: 5913, column: 55, scope: !14674)
!14726 = !DILocation(line: 5913, column: 46, scope: !14674)
!14727 = !DILocation(line: 5913, column: 7, scope: !14674)
!14728 = !DILocation(line: 5913, column: 16, scope: !14674)
!14729 = !DILocation(line: 5913, column: 17, scope: !14674)
!14730 = !DILocation(line: 5914, column: 18, scope: !14674)
!14731 = !DILocation(line: 5914, column: 36, scope: !14674)
!14732 = !DILocation(line: 5914, column: 39, scope: !14674)
!14733 = !DILocation(line: 5914, column: 45, scope: !14674)
!14734 = !DILocation(line: 5914, column: 54, scope: !14674)
!14735 = !DILocation(line: 5914, column: 46, scope: !14674)
!14736 = !DILocation(line: 5914, column: 7, scope: !14674)
!14737 = !DILocation(line: 5914, column: 16, scope: !14674)
!14738 = !DILocation(line: 5914, column: 17, scope: !14674)
!14739 = !DILocation(line: 5915, column: 18, scope: !14674)
!14740 = !DILocation(line: 5915, column: 36, scope: !14674)
!14741 = !DILocation(line: 5915, column: 39, scope: !14674)
!14742 = !DILocation(line: 5915, column: 45, scope: !14674)
!14743 = !DILocation(line: 5915, column: 54, scope: !14674)
!14744 = !DILocation(line: 5915, column: 70, scope: !14674)
!14745 = !DILocation(line: 5915, column: 55, scope: !14674)
!14746 = !DILocation(line: 5915, column: 46, scope: !14674)
!14747 = !DILocation(line: 5915, column: 7, scope: !14674)
!14748 = !DILocation(line: 5915, column: 16, scope: !14674)
!14749 = !DILocation(line: 5915, column: 17, scope: !14674)
!14750 = !DILocation(line: 5916, column: 5, scope: !14674)
!14751 = !DILocation(line: 5919, column: 18, scope: !14752)
!14752 = distinct !DILexicalBlock(scope: !14664, file: !1, line: 5918, column: 5)
!14753 = !DILocation(line: 5919, column: 39, scope: !14752)
!14754 = !DILocation(line: 5919, column: 45, scope: !14752)
!14755 = !DILocation(line: 5919, column: 54, scope: !14752)
!14756 = !DILocation(line: 5919, column: 46, scope: !14752)
!14757 = !DILocation(line: 5919, column: 7, scope: !14752)
!14758 = !DILocation(line: 5919, column: 16, scope: !14752)
!14759 = !DILocation(line: 5919, column: 17, scope: !14752)
!14760 = !DILocation(line: 5920, column: 18, scope: !14752)
!14761 = !DILocation(line: 5920, column: 39, scope: !14752)
!14762 = !DILocation(line: 5920, column: 45, scope: !14752)
!14763 = !DILocation(line: 5920, column: 54, scope: !14752)
!14764 = !DILocation(line: 5920, column: 46, scope: !14752)
!14765 = !DILocation(line: 5920, column: 7, scope: !14752)
!14766 = !DILocation(line: 5920, column: 16, scope: !14752)
!14767 = !DILocation(line: 5920, column: 17, scope: !14752)
!14768 = !DILocation(line: 5921, column: 18, scope: !14752)
!14769 = !DILocation(line: 5921, column: 36, scope: !14752)
!14770 = !DILocation(line: 5921, column: 39, scope: !14752)
!14771 = !DILocation(line: 5921, column: 45, scope: !14752)
!14772 = !DILocation(line: 5921, column: 54, scope: !14752)
!14773 = !DILocation(line: 5921, column: 46, scope: !14752)
!14774 = !DILocation(line: 5921, column: 7, scope: !14752)
!14775 = !DILocation(line: 5921, column: 16, scope: !14752)
!14776 = !DILocation(line: 5921, column: 17, scope: !14752)
!14777 = !DILocation(line: 5922, column: 18, scope: !14752)
!14778 = !DILocation(line: 5922, column: 36, scope: !14752)
!14779 = !DILocation(line: 5922, column: 39, scope: !14752)
!14780 = !DILocation(line: 5922, column: 45, scope: !14752)
!14781 = !DILocation(line: 5922, column: 54, scope: !14752)
!14782 = !DILocation(line: 5922, column: 46, scope: !14752)
!14783 = !DILocation(line: 5922, column: 7, scope: !14752)
!14784 = !DILocation(line: 5922, column: 16, scope: !14752)
!14785 = !DILocation(line: 5922, column: 17, scope: !14752)
!14786 = !DILocation(line: 5923, column: 18, scope: !14752)
!14787 = !DILocation(line: 5923, column: 39, scope: !14752)
!14788 = !DILocation(line: 5923, column: 45, scope: !14752)
!14789 = !DILocation(line: 5923, column: 54, scope: !14752)
!14790 = !DILocation(line: 5923, column: 46, scope: !14752)
!14791 = !DILocation(line: 5923, column: 7, scope: !14752)
!14792 = !DILocation(line: 5923, column: 16, scope: !14752)
!14793 = !DILocation(line: 5923, column: 17, scope: !14752)
!14794 = !DILocation(line: 5924, column: 18, scope: !14752)
!14795 = !DILocation(line: 5924, column: 39, scope: !14752)
!14796 = !DILocation(line: 5924, column: 45, scope: !14752)
!14797 = !DILocation(line: 5924, column: 54, scope: !14752)
!14798 = !DILocation(line: 5924, column: 46, scope: !14752)
!14799 = !DILocation(line: 5924, column: 7, scope: !14752)
!14800 = !DILocation(line: 5924, column: 16, scope: !14752)
!14801 = !DILocation(line: 5924, column: 17, scope: !14752)
!14802 = !DILocation(line: 5925, column: 18, scope: !14752)
!14803 = !DILocation(line: 5925, column: 36, scope: !14752)
!14804 = !DILocation(line: 5925, column: 39, scope: !14752)
!14805 = !DILocation(line: 5925, column: 45, scope: !14752)
!14806 = !DILocation(line: 5925, column: 54, scope: !14752)
!14807 = !DILocation(line: 5925, column: 46, scope: !14752)
!14808 = !DILocation(line: 5925, column: 7, scope: !14752)
!14809 = !DILocation(line: 5925, column: 16, scope: !14752)
!14810 = !DILocation(line: 5925, column: 17, scope: !14752)
!14811 = !DILocation(line: 5926, column: 18, scope: !14752)
!14812 = !DILocation(line: 5926, column: 36, scope: !14752)
!14813 = !DILocation(line: 5926, column: 39, scope: !14752)
!14814 = !DILocation(line: 5926, column: 45, scope: !14752)
!14815 = !DILocation(line: 5926, column: 54, scope: !14752)
!14816 = !DILocation(line: 5926, column: 46, scope: !14752)
!14817 = !DILocation(line: 5926, column: 7, scope: !14752)
!14818 = !DILocation(line: 5926, column: 16, scope: !14752)
!14819 = !DILocation(line: 5926, column: 17, scope: !14752)
!14820 = !DILocation(line: 5931, column: 4, scope: !14401)
!14821 = !DILocation(line: 5932, column: 4, scope: !14401)
!14822 = !DILocation(line: 5933, column: 3, scope: !14401)
!14823 = !DILocation(line: 5933, column: 11, scope: !14401)
!14824 = !DILocation(line: 5933, column: 15, scope: !14401)
!14825 = !DILocation(line: 5934, column: 3, scope: !14401)
!14826 = !DILocation(line: 5934, column: 11, scope: !14401)
!14827 = !DILocation(line: 5934, column: 15, scope: !14401)
!14828 = !DILocation(line: 5935, column: 20, scope: !14829)
!14829 = distinct !DILexicalBlock(scope: !14401, file: !1, line: 5935, column: 3)
!14830 = !DILocation(line: 5935, column: 21, scope: !14829)
!14831 = !DILocation(line: 5935, column: 9, scope: !14829)
!14832 = !DILocation(line: 5935, column: 8, scope: !14829)
!14833 = !DILocation(line: 5935, column: 25, scope: !14834)
!14834 = distinct !DILexicalBlock(scope: !14829, file: !1, line: 5935, column: 3)
!14835 = !DILocation(line: 5935, column: 39, scope: !14834)
!14836 = !DILocation(line: 5935, column: 27, scope: !14834)
!14837 = !DILocation(line: 5935, column: 3, scope: !14829)
!14838 = !DILocation(line: 5940, column: 10, scope: !14839)
!14839 = distinct !DILexicalBlock(scope: !14834, file: !1, line: 5936, column: 3)
!14840 = !DILocation(line: 5940, column: 28, scope: !14839)
!14841 = !DILocation(line: 5940, column: 31, scope: !14839)
!14842 = !DILocation(line: 5940, column: 37, scope: !14839)
!14843 = !DILocation(line: 5940, column: 39, scope: !14839)
!14844 = !DILocation(line: 5940, column: 57, scope: !14839)
!14845 = !DILocation(line: 5940, column: 60, scope: !14839)
!14846 = !DILocation(line: 5940, column: 66, scope: !14839)
!14847 = !DILocation(line: 5940, column: 38, scope: !14839)
!14848 = !DILocation(line: 5940, column: 8, scope: !14839)
!14849 = !DILocation(line: 5940, column: 9, scope: !14839)
!14850 = !DILocation(line: 5941, column: 10, scope: !14839)
!14851 = !DILocation(line: 5941, column: 28, scope: !14839)
!14852 = !DILocation(line: 5941, column: 31, scope: !14839)
!14853 = !DILocation(line: 5941, column: 37, scope: !14839)
!14854 = !DILocation(line: 5941, column: 39, scope: !14839)
!14855 = !DILocation(line: 5941, column: 57, scope: !14839)
!14856 = !DILocation(line: 5941, column: 60, scope: !14839)
!14857 = !DILocation(line: 5941, column: 66, scope: !14839)
!14858 = !DILocation(line: 5941, column: 38, scope: !14839)
!14859 = !DILocation(line: 5941, column: 8, scope: !14839)
!14860 = !DILocation(line: 5941, column: 9, scope: !14839)
!14861 = !DILocation(line: 5942, column: 20, scope: !14839)
!14862 = !DILocation(line: 5942, column: 25, scope: !14839)
!14863 = !DILocation(line: 5942, column: 21, scope: !14839)
!14864 = !DILocation(line: 5942, column: 30, scope: !14839)
!14865 = !DILocation(line: 5942, column: 35, scope: !14839)
!14866 = !DILocation(line: 5942, column: 31, scope: !14839)
!14867 = !DILocation(line: 5942, column: 26, scope: !14839)
!14868 = !DILocation(line: 5942, column: 16, scope: !14839)
!14869 = !DILocation(line: 5943, column: 9, scope: !14870)
!14870 = distinct !DILexicalBlock(scope: !14839, file: !1, line: 5943, column: 9)
!14871 = !DILocation(line: 5943, column: 21, scope: !14870)
!14872 = !DILocation(line: 5943, column: 9, scope: !14839)
!14873 = !DILocation(line: 5944, column: 7, scope: !14870)
!14874 = !DILocation(line: 5945, column: 38, scope: !14839)
!14875 = !DILocation(line: 5945, column: 13, scope: !14839)
!14876 = !DILocation(line: 5945, column: 44, scope: !14839)
!14877 = !DILocation(line: 5945, column: 40, scope: !14839)
!14878 = !DILocation(line: 5945, column: 11, scope: !14839)
!14879 = !DILocation(line: 5945, column: 12, scope: !14839)
!14880 = !DILocation(line: 5946, column: 55, scope: !14839)
!14881 = !DILocation(line: 5946, column: 27, scope: !14839)
!14882 = !DILocation(line: 5946, column: 26, scope: !14839)
!14883 = !DILocation(line: 5946, column: 19, scope: !14839)
!14884 = !DILocation(line: 5946, column: 20, scope: !14839)
!14885 = !DILocation(line: 5947, column: 29, scope: !14839)
!14886 = !DILocation(line: 5947, column: 33, scope: !14839)
!14887 = !DILocation(line: 5947, column: 32, scope: !14839)
!14888 = !DILocation(line: 5947, column: 52, scope: !14839)
!14889 = !DILocation(line: 5947, column: 68, scope: !14839)
!14890 = !DILocation(line: 5947, column: 53, scope: !14839)
!14891 = !DILocation(line: 5947, column: 69, scope: !14839)
!14892 = !DILocation(line: 5947, column: 36, scope: !14839)
!14893 = !DILocation(line: 5947, column: 14, scope: !14839)
!14894 = !DILocation(line: 5947, column: 12, scope: !14839)
!14895 = !DILocation(line: 5947, column: 13, scope: !14839)
!14896 = !DILocation(line: 5948, column: 31, scope: !14839)
!14897 = !DILocation(line: 5948, column: 47, scope: !14839)
!14898 = !DILocation(line: 5948, column: 32, scope: !14839)
!14899 = !DILocation(line: 5948, column: 12, scope: !14839)
!14900 = !DILocation(line: 5948, column: 13, scope: !14839)
!14901 = !DILocation(line: 5949, column: 20, scope: !14839)
!14902 = !DILocation(line: 5949, column: 29, scope: !14839)
!14903 = !DILocation(line: 5949, column: 21, scope: !14839)
!14904 = !DILocation(line: 5949, column: 34, scope: !14839)
!14905 = !DILocation(line: 5949, column: 43, scope: !14839)
!14906 = !DILocation(line: 5949, column: 35, scope: !14839)
!14907 = !DILocation(line: 5949, column: 30, scope: !14839)
!14908 = !DILocation(line: 5949, column: 16, scope: !14839)
!14909 = !DILocation(line: 5950, column: 9, scope: !14910)
!14910 = distinct !DILexicalBlock(scope: !14839, file: !1, line: 5950, column: 9)
!14911 = !DILocation(line: 5950, column: 21, scope: !14910)
!14912 = !DILocation(line: 5950, column: 9, scope: !14839)
!14913 = !DILocation(line: 5952, column: 20, scope: !14914)
!14914 = distinct !DILexicalBlock(scope: !14910, file: !1, line: 5951, column: 7)
!14915 = !DILocation(line: 5952, column: 38, scope: !14914)
!14916 = !DILocation(line: 5952, column: 41, scope: !14914)
!14917 = !DILocation(line: 5952, column: 47, scope: !14914)
!14918 = !DILocation(line: 5952, column: 56, scope: !14914)
!14919 = !DILocation(line: 5952, column: 48, scope: !14914)
!14920 = !DILocation(line: 5952, column: 9, scope: !14914)
!14921 = !DILocation(line: 5952, column: 18, scope: !14914)
!14922 = !DILocation(line: 5952, column: 19, scope: !14914)
!14923 = !DILocation(line: 5953, column: 20, scope: !14914)
!14924 = !DILocation(line: 5953, column: 38, scope: !14914)
!14925 = !DILocation(line: 5953, column: 41, scope: !14914)
!14926 = !DILocation(line: 5953, column: 47, scope: !14914)
!14927 = !DILocation(line: 5953, column: 56, scope: !14914)
!14928 = !DILocation(line: 5953, column: 48, scope: !14914)
!14929 = !DILocation(line: 5953, column: 9, scope: !14914)
!14930 = !DILocation(line: 5953, column: 18, scope: !14914)
!14931 = !DILocation(line: 5953, column: 19, scope: !14914)
!14932 = !DILocation(line: 5954, column: 20, scope: !14914)
!14933 = !DILocation(line: 5954, column: 38, scope: !14914)
!14934 = !DILocation(line: 5954, column: 41, scope: !14914)
!14935 = !DILocation(line: 5954, column: 47, scope: !14914)
!14936 = !DILocation(line: 5954, column: 56, scope: !14914)
!14937 = !DILocation(line: 5954, column: 48, scope: !14914)
!14938 = !DILocation(line: 5954, column: 9, scope: !14914)
!14939 = !DILocation(line: 5954, column: 18, scope: !14914)
!14940 = !DILocation(line: 5954, column: 19, scope: !14914)
!14941 = !DILocation(line: 5955, column: 20, scope: !14914)
!14942 = !DILocation(line: 5955, column: 38, scope: !14914)
!14943 = !DILocation(line: 5955, column: 41, scope: !14914)
!14944 = !DILocation(line: 5955, column: 47, scope: !14914)
!14945 = !DILocation(line: 5955, column: 56, scope: !14914)
!14946 = !DILocation(line: 5955, column: 48, scope: !14914)
!14947 = !DILocation(line: 5955, column: 9, scope: !14914)
!14948 = !DILocation(line: 5955, column: 18, scope: !14914)
!14949 = !DILocation(line: 5955, column: 19, scope: !14914)
!14950 = !DILocation(line: 5956, column: 20, scope: !14914)
!14951 = !DILocation(line: 5956, column: 38, scope: !14914)
!14952 = !DILocation(line: 5956, column: 41, scope: !14914)
!14953 = !DILocation(line: 5956, column: 47, scope: !14914)
!14954 = !DILocation(line: 5956, column: 56, scope: !14914)
!14955 = !DILocation(line: 5956, column: 48, scope: !14914)
!14956 = !DILocation(line: 5956, column: 9, scope: !14914)
!14957 = !DILocation(line: 5956, column: 18, scope: !14914)
!14958 = !DILocation(line: 5956, column: 19, scope: !14914)
!14959 = !DILocation(line: 5957, column: 20, scope: !14914)
!14960 = !DILocation(line: 5957, column: 38, scope: !14914)
!14961 = !DILocation(line: 5957, column: 41, scope: !14914)
!14962 = !DILocation(line: 5957, column: 47, scope: !14914)
!14963 = !DILocation(line: 5957, column: 56, scope: !14914)
!14964 = !DILocation(line: 5957, column: 48, scope: !14914)
!14965 = !DILocation(line: 5957, column: 9, scope: !14914)
!14966 = !DILocation(line: 5957, column: 18, scope: !14914)
!14967 = !DILocation(line: 5957, column: 19, scope: !14914)
!14968 = !DILocation(line: 5958, column: 20, scope: !14914)
!14969 = !DILocation(line: 5958, column: 38, scope: !14914)
!14970 = !DILocation(line: 5958, column: 41, scope: !14914)
!14971 = !DILocation(line: 5958, column: 47, scope: !14914)
!14972 = !DILocation(line: 5958, column: 56, scope: !14914)
!14973 = !DILocation(line: 5958, column: 48, scope: !14914)
!14974 = !DILocation(line: 5958, column: 9, scope: !14914)
!14975 = !DILocation(line: 5958, column: 18, scope: !14914)
!14976 = !DILocation(line: 5958, column: 19, scope: !14914)
!14977 = !DILocation(line: 5959, column: 20, scope: !14914)
!14978 = !DILocation(line: 5959, column: 38, scope: !14914)
!14979 = !DILocation(line: 5959, column: 41, scope: !14914)
!14980 = !DILocation(line: 5959, column: 47, scope: !14914)
!14981 = !DILocation(line: 5959, column: 56, scope: !14914)
!14982 = !DILocation(line: 5959, column: 48, scope: !14914)
!14983 = !DILocation(line: 5959, column: 9, scope: !14914)
!14984 = !DILocation(line: 5959, column: 18, scope: !14914)
!14985 = !DILocation(line: 5959, column: 19, scope: !14914)
!14986 = !DILocation(line: 5960, column: 7, scope: !14914)
!14987 = !DILocation(line: 5963, column: 20, scope: !14988)
!14988 = distinct !DILexicalBlock(scope: !14910, file: !1, line: 5962, column: 7)
!14989 = !DILocation(line: 5963, column: 38, scope: !14988)
!14990 = !DILocation(line: 5963, column: 41, scope: !14988)
!14991 = !DILocation(line: 5963, column: 47, scope: !14988)
!14992 = !DILocation(line: 5963, column: 56, scope: !14988)
!14993 = !DILocation(line: 5963, column: 48, scope: !14988)
!14994 = !DILocation(line: 5963, column: 9, scope: !14988)
!14995 = !DILocation(line: 5963, column: 18, scope: !14988)
!14996 = !DILocation(line: 5963, column: 19, scope: !14988)
!14997 = !DILocation(line: 5964, column: 20, scope: !14988)
!14998 = !DILocation(line: 5964, column: 38, scope: !14988)
!14999 = !DILocation(line: 5964, column: 41, scope: !14988)
!15000 = !DILocation(line: 5964, column: 47, scope: !14988)
!15001 = !DILocation(line: 5964, column: 56, scope: !14988)
!15002 = !DILocation(line: 5964, column: 48, scope: !14988)
!15003 = !DILocation(line: 5964, column: 9, scope: !14988)
!15004 = !DILocation(line: 5964, column: 18, scope: !14988)
!15005 = !DILocation(line: 5964, column: 19, scope: !14988)
!15006 = !DILocation(line: 5965, column: 20, scope: !14988)
!15007 = !DILocation(line: 5965, column: 38, scope: !14988)
!15008 = !DILocation(line: 5965, column: 41, scope: !14988)
!15009 = !DILocation(line: 5965, column: 47, scope: !14988)
!15010 = !DILocation(line: 5965, column: 56, scope: !14988)
!15011 = !DILocation(line: 5965, column: 48, scope: !14988)
!15012 = !DILocation(line: 5965, column: 9, scope: !14988)
!15013 = !DILocation(line: 5965, column: 18, scope: !14988)
!15014 = !DILocation(line: 5965, column: 19, scope: !14988)
!15015 = !DILocation(line: 5966, column: 20, scope: !14988)
!15016 = !DILocation(line: 5966, column: 38, scope: !14988)
!15017 = !DILocation(line: 5966, column: 41, scope: !14988)
!15018 = !DILocation(line: 5966, column: 47, scope: !14988)
!15019 = !DILocation(line: 5966, column: 56, scope: !14988)
!15020 = !DILocation(line: 5966, column: 48, scope: !14988)
!15021 = !DILocation(line: 5966, column: 9, scope: !14988)
!15022 = !DILocation(line: 5966, column: 18, scope: !14988)
!15023 = !DILocation(line: 5966, column: 19, scope: !14988)
!15024 = !DILocation(line: 5967, column: 20, scope: !14988)
!15025 = !DILocation(line: 5967, column: 38, scope: !14988)
!15026 = !DILocation(line: 5967, column: 41, scope: !14988)
!15027 = !DILocation(line: 5967, column: 47, scope: !14988)
!15028 = !DILocation(line: 5967, column: 56, scope: !14988)
!15029 = !DILocation(line: 5967, column: 48, scope: !14988)
!15030 = !DILocation(line: 5967, column: 9, scope: !14988)
!15031 = !DILocation(line: 5967, column: 18, scope: !14988)
!15032 = !DILocation(line: 5967, column: 19, scope: !14988)
!15033 = !DILocation(line: 5968, column: 20, scope: !14988)
!15034 = !DILocation(line: 5968, column: 38, scope: !14988)
!15035 = !DILocation(line: 5968, column: 41, scope: !14988)
!15036 = !DILocation(line: 5968, column: 47, scope: !14988)
!15037 = !DILocation(line: 5968, column: 56, scope: !14988)
!15038 = !DILocation(line: 5968, column: 48, scope: !14988)
!15039 = !DILocation(line: 5968, column: 9, scope: !14988)
!15040 = !DILocation(line: 5968, column: 18, scope: !14988)
!15041 = !DILocation(line: 5968, column: 19, scope: !14988)
!15042 = !DILocation(line: 5969, column: 20, scope: !14988)
!15043 = !DILocation(line: 5969, column: 38, scope: !14988)
!15044 = !DILocation(line: 5969, column: 41, scope: !14988)
!15045 = !DILocation(line: 5969, column: 47, scope: !14988)
!15046 = !DILocation(line: 5969, column: 56, scope: !14988)
!15047 = !DILocation(line: 5969, column: 48, scope: !14988)
!15048 = !DILocation(line: 5969, column: 9, scope: !14988)
!15049 = !DILocation(line: 5969, column: 18, scope: !14988)
!15050 = !DILocation(line: 5969, column: 19, scope: !14988)
!15051 = !DILocation(line: 5970, column: 20, scope: !14988)
!15052 = !DILocation(line: 5970, column: 38, scope: !14988)
!15053 = !DILocation(line: 5970, column: 41, scope: !14988)
!15054 = !DILocation(line: 5970, column: 47, scope: !14988)
!15055 = !DILocation(line: 5970, column: 56, scope: !14988)
!15056 = !DILocation(line: 5970, column: 48, scope: !14988)
!15057 = !DILocation(line: 5970, column: 9, scope: !14988)
!15058 = !DILocation(line: 5970, column: 18, scope: !14988)
!15059 = !DILocation(line: 5970, column: 19, scope: !14988)
!15060 = !DILocation(line: 5972, column: 30, scope: !15061)
!15061 = distinct !DILexicalBlock(scope: !14839, file: !1, line: 5972, column: 9)
!15062 = !DILocation(line: 5972, column: 38, scope: !15061)
!15063 = !DILocation(line: 5972, column: 31, scope: !15061)
!15064 = !DILocation(line: 5972, column: 9, scope: !15061)
!15065 = !DILocation(line: 5972, column: 42, scope: !15061)
!15066 = !DILocation(line: 5972, column: 9, scope: !14839)
!15067 = !DILocation(line: 5974, column: 9, scope: !15068)
!15068 = distinct !DILexicalBlock(scope: !15061, file: !1, line: 5973, column: 7)
!15069 = !DILocation(line: 5974, column: 18, scope: !15068)
!15070 = !DILocation(line: 5975, column: 9, scope: !15068)
!15071 = !DILocation(line: 5975, column: 18, scope: !15068)
!15072 = !DILocation(line: 5976, column: 7, scope: !15068)
!15073 = !DILocation(line: 5979, column: 37, scope: !15074)
!15074 = distinct !DILexicalBlock(scope: !15061, file: !1, line: 5978, column: 7)
!15075 = !DILocation(line: 5979, column: 39, scope: !15074)
!15076 = !DILocation(line: 5979, column: 48, scope: !15074)
!15077 = !DILocation(line: 5979, column: 38, scope: !15074)
!15078 = !DILocation(line: 5979, column: 50, scope: !15074)
!15079 = !DILocation(line: 5979, column: 59, scope: !15074)
!15080 = !DILocation(line: 5979, column: 49, scope: !15074)
!15081 = !DILocation(line: 5979, column: 67, scope: !15074)
!15082 = !DILocation(line: 5979, column: 69, scope: !15074)
!15083 = !DILocation(line: 5979, column: 78, scope: !15074)
!15084 = !DILocation(line: 5979, column: 68, scope: !15074)
!15085 = !DILocation(line: 5979, column: 60, scope: !15074)
!15086 = !DILocation(line: 5980, column: 11, scope: !15074)
!15087 = !DILocation(line: 5980, column: 20, scope: !15074)
!15088 = !DILocation(line: 5979, column: 79, scope: !15074)
!15089 = !DILocation(line: 5980, column: 30, scope: !15074)
!15090 = !DILocation(line: 5980, column: 38, scope: !15074)
!15091 = !DILocation(line: 5980, column: 31, scope: !15074)
!15092 = !DILocation(line: 5980, column: 22, scope: !15074)
!15093 = !DILocation(line: 5979, column: 9, scope: !15074)
!15094 = !DILocation(line: 5979, column: 18, scope: !15074)
!15095 = !DILocation(line: 5979, column: 19, scope: !15074)
!15096 = !DILocation(line: 5981, column: 36, scope: !15074)
!15097 = !DILocation(line: 5981, column: 39, scope: !15074)
!15098 = !DILocation(line: 5981, column: 48, scope: !15074)
!15099 = !DILocation(line: 5981, column: 50, scope: !15074)
!15100 = !DILocation(line: 5981, column: 59, scope: !15074)
!15101 = !DILocation(line: 5981, column: 49, scope: !15074)
!15102 = !DILocation(line: 5981, column: 37, scope: !15074)
!15103 = !DILocation(line: 5981, column: 62, scope: !15074)
!15104 = !DILocation(line: 5981, column: 71, scope: !15074)
!15105 = !DILocation(line: 5981, column: 61, scope: !15074)
!15106 = !DILocation(line: 5981, column: 9, scope: !15074)
!15107 = !DILocation(line: 5981, column: 18, scope: !15074)
!15108 = !DILocation(line: 5981, column: 19, scope: !15074)
!15109 = !DILocation(line: 5982, column: 37, scope: !15074)
!15110 = !DILocation(line: 5982, column: 39, scope: !15074)
!15111 = !DILocation(line: 5982, column: 48, scope: !15074)
!15112 = !DILocation(line: 5982, column: 38, scope: !15074)
!15113 = !DILocation(line: 5982, column: 50, scope: !15074)
!15114 = !DILocation(line: 5982, column: 59, scope: !15074)
!15115 = !DILocation(line: 5982, column: 49, scope: !15074)
!15116 = !DILocation(line: 5982, column: 67, scope: !15074)
!15117 = !DILocation(line: 5982, column: 69, scope: !15074)
!15118 = !DILocation(line: 5982, column: 78, scope: !15074)
!15119 = !DILocation(line: 5982, column: 68, scope: !15074)
!15120 = !DILocation(line: 5982, column: 60, scope: !15074)
!15121 = !DILocation(line: 5983, column: 11, scope: !15074)
!15122 = !DILocation(line: 5983, column: 20, scope: !15074)
!15123 = !DILocation(line: 5982, column: 79, scope: !15074)
!15124 = !DILocation(line: 5983, column: 30, scope: !15074)
!15125 = !DILocation(line: 5983, column: 38, scope: !15074)
!15126 = !DILocation(line: 5983, column: 31, scope: !15074)
!15127 = !DILocation(line: 5983, column: 22, scope: !15074)
!15128 = !DILocation(line: 5982, column: 9, scope: !15074)
!15129 = !DILocation(line: 5982, column: 18, scope: !15074)
!15130 = !DILocation(line: 5982, column: 19, scope: !15074)
!15131 = !DILocation(line: 5984, column: 36, scope: !15074)
!15132 = !DILocation(line: 5984, column: 39, scope: !15074)
!15133 = !DILocation(line: 5984, column: 48, scope: !15074)
!15134 = !DILocation(line: 5984, column: 50, scope: !15074)
!15135 = !DILocation(line: 5984, column: 59, scope: !15074)
!15136 = !DILocation(line: 5984, column: 49, scope: !15074)
!15137 = !DILocation(line: 5984, column: 37, scope: !15074)
!15138 = !DILocation(line: 5984, column: 62, scope: !15074)
!15139 = !DILocation(line: 5984, column: 71, scope: !15074)
!15140 = !DILocation(line: 5984, column: 61, scope: !15074)
!15141 = !DILocation(line: 5984, column: 9, scope: !15074)
!15142 = !DILocation(line: 5984, column: 18, scope: !15074)
!15143 = !DILocation(line: 5984, column: 19, scope: !15074)
!15144 = !DILocation(line: 5986, column: 9, scope: !15145)
!15145 = distinct !DILexicalBlock(scope: !14839, file: !1, line: 5986, column: 9)
!15146 = !DILocation(line: 5986, column: 25, scope: !15145)
!15147 = !DILocation(line: 5986, column: 36, scope: !15145)
!15148 = !DILocation(line: 5986, column: 52, scope: !15145)
!15149 = !DILocation(line: 5986, column: 11, scope: !15145)
!15150 = !DILocation(line: 5986, column: 9, scope: !14839)
!15151 = !DILocation(line: 5988, column: 21, scope: !15152)
!15152 = distinct !DILexicalBlock(scope: !15145, file: !1, line: 5987, column: 7)
!15153 = !DILocation(line: 5989, column: 51, scope: !15152)
!15154 = !DILocation(line: 5989, column: 67, scope: !15152)
!15155 = !DILocation(line: 5989, column: 31, scope: !15152)
!15156 = !DILocation(line: 5989, column: 17, scope: !15152)
!15157 = !DILocation(line: 5989, column: 16, scope: !15152)
!15158 = !DILocation(line: 5991, column: 51, scope: !15152)
!15159 = !DILocation(line: 5991, column: 67, scope: !15152)
!15160 = !DILocation(line: 5991, column: 31, scope: !15152)
!15161 = !DILocation(line: 5991, column: 17, scope: !15152)
!15162 = !DILocation(line: 5991, column: 16, scope: !15152)
!15163 = !DILocation(line: 5993, column: 15, scope: !15164)
!15164 = distinct !DILexicalBlock(scope: !15152, file: !1, line: 5993, column: 14)
!15165 = !DILocation(line: 5993, column: 22, scope: !15164)
!15166 = !DILocation(line: 5993, column: 45, scope: !15164)
!15167 = !DILocation(line: 5993, column: 49, scope: !15164)
!15168 = !DILocation(line: 5993, column: 56, scope: !15164)
!15169 = !DILocation(line: 5993, column: 14, scope: !15152)
!15170 = !DILocation(line: 5996, column: 39, scope: !15171)
!15171 = distinct !DILexicalBlock(scope: !15164, file: !1, line: 5994, column: 12)
!15172 = !DILocation(line: 5996, column: 16, scope: !15171)
!15173 = !DILocation(line: 5995, column: 32, scope: !15171)
!15174 = !DILocation(line: 5995, column: 31, scope: !15171)
!15175 = !DILocation(line: 5997, column: 14, scope: !15171)
!15176 = !DILocation(line: 5999, column: 7, scope: !15152)
!15177 = !DILocation(line: 6000, column: 20, scope: !14839)
!15178 = !DILocation(line: 6000, column: 25, scope: !14839)
!15179 = !DILocation(line: 6000, column: 21, scope: !14839)
!15180 = !DILocation(line: 6000, column: 30, scope: !14839)
!15181 = !DILocation(line: 6000, column: 35, scope: !14839)
!15182 = !DILocation(line: 6000, column: 31, scope: !14839)
!15183 = !DILocation(line: 6000, column: 26, scope: !14839)
!15184 = !DILocation(line: 6000, column: 16, scope: !14839)
!15185 = !DILocation(line: 6001, column: 9, scope: !15186)
!15186 = distinct !DILexicalBlock(scope: !14839, file: !1, line: 6001, column: 9)
!15187 = !DILocation(line: 6001, column: 21, scope: !15186)
!15188 = !DILocation(line: 6001, column: 9, scope: !14839)
!15189 = !DILocation(line: 6002, column: 15, scope: !15186)
!15190 = !DILocation(line: 6002, column: 26, scope: !15186)
!15191 = !DILocation(line: 6002, column: 7, scope: !15186)
!15192 = !DILocation(line: 6006, column: 11, scope: !15193)
!15193 = distinct !DILexicalBlock(scope: !15194, file: !1, line: 6005, column: 9)
!15194 = distinct !DILexicalBlock(scope: !15186, file: !1, line: 6003, column: 7)
!15195 = !DILocation(line: 6006, column: 19, scope: !15193)
!15196 = !DILocation(line: 6006, column: 23, scope: !15193)
!15197 = !DILocation(line: 6007, column: 11, scope: !15193)
!15198 = !DILocation(line: 6007, column: 19, scope: !15193)
!15199 = !DILocation(line: 6007, column: 23, scope: !15193)
!15200 = !DILocation(line: 6008, column: 24, scope: !15193)
!15201 = !DILocation(line: 6008, column: 33, scope: !15193)
!15202 = !DILocation(line: 6008, column: 35, scope: !15193)
!15203 = !DILocation(line: 6008, column: 44, scope: !15193)
!15204 = !DILocation(line: 6008, column: 34, scope: !15193)
!15205 = !DILocation(line: 6008, column: 48, scope: !15193)
!15206 = !DILocation(line: 6008, column: 57, scope: !15193)
!15207 = !DILocation(line: 6008, column: 59, scope: !15193)
!15208 = !DILocation(line: 6008, column: 68, scope: !15193)
!15209 = !DILocation(line: 6008, column: 58, scope: !15193)
!15210 = !DILocation(line: 6008, column: 46, scope: !15193)
!15211 = !DILocation(line: 6009, column: 14, scope: !15193)
!15212 = !DILocation(line: 6009, column: 23, scope: !15193)
!15213 = !DILocation(line: 6009, column: 25, scope: !15193)
!15214 = !DILocation(line: 6009, column: 34, scope: !15193)
!15215 = !DILocation(line: 6009, column: 24, scope: !15193)
!15216 = !DILocation(line: 6009, column: 38, scope: !15193)
!15217 = !DILocation(line: 6009, column: 47, scope: !15193)
!15218 = !DILocation(line: 6009, column: 49, scope: !15193)
!15219 = !DILocation(line: 6009, column: 58, scope: !15193)
!15220 = !DILocation(line: 6009, column: 48, scope: !15193)
!15221 = !DILocation(line: 6009, column: 36, scope: !15193)
!15222 = !DILocation(line: 6008, column: 70, scope: !15193)
!15223 = !DILocation(line: 6008, column: 22, scope: !15193)
!15224 = !DILocation(line: 6010, column: 15, scope: !15225)
!15225 = distinct !DILexicalBlock(scope: !15193, file: !1, line: 6010, column: 15)
!15226 = !DILocation(line: 6010, column: 30, scope: !15225)
!15227 = !DILocation(line: 6010, column: 27, scope: !15225)
!15228 = !DILocation(line: 6010, column: 15, scope: !15193)
!15229 = !DILocation(line: 6011, column: 13, scope: !15225)
!15230 = !DILocation(line: 6011, column: 21, scope: !15225)
!15231 = !DILocation(line: 6011, column: 25, scope: !15225)
!15232 = !DILocation(line: 6014, column: 15, scope: !15233)
!15233 = distinct !DILexicalBlock(scope: !15225, file: !1, line: 6013, column: 13)
!15234 = !DILocation(line: 6014, column: 23, scope: !15233)
!15235 = !DILocation(line: 6014, column: 27, scope: !15233)
!15236 = !DILocation(line: 6015, column: 15, scope: !15233)
!15237 = !DILocation(line: 6015, column: 23, scope: !15233)
!15238 = !DILocation(line: 6015, column: 27, scope: !15233)
!15239 = !DILocation(line: 6017, column: 11, scope: !15193)
!15240 = !DILocation(line: 6021, column: 24, scope: !15241)
!15241 = distinct !DILexicalBlock(scope: !15194, file: !1, line: 6020, column: 9)
!15242 = !DILocation(line: 6021, column: 33, scope: !15241)
!15243 = !DILocation(line: 6021, column: 35, scope: !15241)
!15244 = !DILocation(line: 6021, column: 44, scope: !15241)
!15245 = !DILocation(line: 6021, column: 34, scope: !15241)
!15246 = !DILocation(line: 6021, column: 48, scope: !15241)
!15247 = !DILocation(line: 6021, column: 57, scope: !15241)
!15248 = !DILocation(line: 6021, column: 59, scope: !15241)
!15249 = !DILocation(line: 6021, column: 68, scope: !15241)
!15250 = !DILocation(line: 6021, column: 58, scope: !15241)
!15251 = !DILocation(line: 6021, column: 46, scope: !15241)
!15252 = !DILocation(line: 6022, column: 14, scope: !15241)
!15253 = !DILocation(line: 6022, column: 23, scope: !15241)
!15254 = !DILocation(line: 6022, column: 25, scope: !15241)
!15255 = !DILocation(line: 6022, column: 34, scope: !15241)
!15256 = !DILocation(line: 6022, column: 24, scope: !15241)
!15257 = !DILocation(line: 6022, column: 38, scope: !15241)
!15258 = !DILocation(line: 6022, column: 47, scope: !15241)
!15259 = !DILocation(line: 6022, column: 49, scope: !15241)
!15260 = !DILocation(line: 6022, column: 58, scope: !15241)
!15261 = !DILocation(line: 6022, column: 48, scope: !15241)
!15262 = !DILocation(line: 6022, column: 36, scope: !15241)
!15263 = !DILocation(line: 6021, column: 70, scope: !15241)
!15264 = !DILocation(line: 6021, column: 22, scope: !15241)
!15265 = !DILocation(line: 6023, column: 15, scope: !15266)
!15266 = distinct !DILexicalBlock(scope: !15241, file: !1, line: 6023, column: 15)
!15267 = !DILocation(line: 6023, column: 30, scope: !15266)
!15268 = !DILocation(line: 6023, column: 27, scope: !15266)
!15269 = !DILocation(line: 6023, column: 15, scope: !15241)
!15270 = !DILocation(line: 6025, column: 15, scope: !15271)
!15271 = distinct !DILexicalBlock(scope: !15266, file: !1, line: 6024, column: 13)
!15272 = !DILocation(line: 6025, column: 23, scope: !15271)
!15273 = !DILocation(line: 6025, column: 27, scope: !15271)
!15274 = !DILocation(line: 6026, column: 15, scope: !15271)
!15275 = !DILocation(line: 6026, column: 23, scope: !15271)
!15276 = !DILocation(line: 6026, column: 27, scope: !15271)
!15277 = !DILocation(line: 6027, column: 13, scope: !15271)
!15278 = !DILocation(line: 6030, column: 15, scope: !15279)
!15279 = distinct !DILexicalBlock(scope: !15266, file: !1, line: 6029, column: 13)
!15280 = !DILocation(line: 6030, column: 23, scope: !15279)
!15281 = !DILocation(line: 6030, column: 27, scope: !15279)
!15282 = !DILocation(line: 6031, column: 15, scope: !15279)
!15283 = !DILocation(line: 6031, column: 23, scope: !15279)
!15284 = !DILocation(line: 6031, column: 27, scope: !15279)
!15285 = !DILocation(line: 6032, column: 15, scope: !15279)
!15286 = !DILocation(line: 6032, column: 23, scope: !15279)
!15287 = !DILocation(line: 6032, column: 27, scope: !15279)
!15288 = !DILocation(line: 6033, column: 15, scope: !15279)
!15289 = !DILocation(line: 6033, column: 23, scope: !15279)
!15290 = !DILocation(line: 6033, column: 27, scope: !15279)
!15291 = !DILocation(line: 6035, column: 11, scope: !15241)
!15292 = !DILocation(line: 6039, column: 24, scope: !15293)
!15293 = distinct !DILexicalBlock(scope: !15194, file: !1, line: 6038, column: 9)
!15294 = !DILocation(line: 6039, column: 33, scope: !15293)
!15295 = !DILocation(line: 6039, column: 35, scope: !15293)
!15296 = !DILocation(line: 6039, column: 44, scope: !15293)
!15297 = !DILocation(line: 6039, column: 34, scope: !15293)
!15298 = !DILocation(line: 6039, column: 48, scope: !15293)
!15299 = !DILocation(line: 6039, column: 57, scope: !15293)
!15300 = !DILocation(line: 6039, column: 59, scope: !15293)
!15301 = !DILocation(line: 6039, column: 68, scope: !15293)
!15302 = !DILocation(line: 6039, column: 58, scope: !15293)
!15303 = !DILocation(line: 6039, column: 46, scope: !15293)
!15304 = !DILocation(line: 6040, column: 14, scope: !15293)
!15305 = !DILocation(line: 6040, column: 23, scope: !15293)
!15306 = !DILocation(line: 6040, column: 25, scope: !15293)
!15307 = !DILocation(line: 6040, column: 34, scope: !15293)
!15308 = !DILocation(line: 6040, column: 24, scope: !15293)
!15309 = !DILocation(line: 6040, column: 38, scope: !15293)
!15310 = !DILocation(line: 6040, column: 47, scope: !15293)
!15311 = !DILocation(line: 6040, column: 49, scope: !15293)
!15312 = !DILocation(line: 6040, column: 58, scope: !15293)
!15313 = !DILocation(line: 6040, column: 48, scope: !15293)
!15314 = !DILocation(line: 6040, column: 36, scope: !15293)
!15315 = !DILocation(line: 6039, column: 70, scope: !15293)
!15316 = !DILocation(line: 6039, column: 22, scope: !15293)
!15317 = !DILocation(line: 6041, column: 15, scope: !15318)
!15318 = distinct !DILexicalBlock(scope: !15293, file: !1, line: 6041, column: 15)
!15319 = !DILocation(line: 6041, column: 30, scope: !15318)
!15320 = !DILocation(line: 6041, column: 27, scope: !15318)
!15321 = !DILocation(line: 6041, column: 15, scope: !15293)
!15322 = !DILocation(line: 6042, column: 13, scope: !15318)
!15323 = !DILocation(line: 6042, column: 21, scope: !15318)
!15324 = !DILocation(line: 6042, column: 25, scope: !15318)
!15325 = !DILocation(line: 6045, column: 15, scope: !15326)
!15326 = distinct !DILexicalBlock(scope: !15318, file: !1, line: 6044, column: 13)
!15327 = !DILocation(line: 6045, column: 23, scope: !15326)
!15328 = !DILocation(line: 6045, column: 27, scope: !15326)
!15329 = !DILocation(line: 6046, column: 15, scope: !15326)
!15330 = !DILocation(line: 6046, column: 23, scope: !15326)
!15331 = !DILocation(line: 6046, column: 27, scope: !15326)
!15332 = !DILocation(line: 6048, column: 18, scope: !15293)
!15333 = !DILocation(line: 6048, column: 36, scope: !15293)
!15334 = !DILocation(line: 6048, column: 39, scope: !15293)
!15335 = !DILocation(line: 6049, column: 25, scope: !15293)
!15336 = !DILocation(line: 6049, column: 34, scope: !15293)
!15337 = !DILocation(line: 6049, column: 43, scope: !15293)
!15338 = !DILocation(line: 6049, column: 35, scope: !15293)
!15339 = !DILocation(line: 6049, column: 45, scope: !15293)
!15340 = !DILocation(line: 6049, column: 54, scope: !15293)
!15341 = !DILocation(line: 6049, column: 63, scope: !15293)
!15342 = !DILocation(line: 6049, column: 55, scope: !15293)
!15343 = !DILocation(line: 6049, column: 19, scope: !15293)
!15344 = !DILocation(line: 6049, column: 17, scope: !15293)
!15345 = !DILocation(line: 6049, column: 18, scope: !15293)
!15346 = !DILocation(line: 6050, column: 25, scope: !15293)
!15347 = !DILocation(line: 6050, column: 34, scope: !15293)
!15348 = !DILocation(line: 6050, column: 43, scope: !15293)
!15349 = !DILocation(line: 6050, column: 35, scope: !15293)
!15350 = !DILocation(line: 6050, column: 45, scope: !15293)
!15351 = !DILocation(line: 6050, column: 54, scope: !15293)
!15352 = !DILocation(line: 6050, column: 63, scope: !15293)
!15353 = !DILocation(line: 6050, column: 55, scope: !15293)
!15354 = !DILocation(line: 6050, column: 19, scope: !15293)
!15355 = !DILocation(line: 6050, column: 17, scope: !15293)
!15356 = !DILocation(line: 6050, column: 18, scope: !15293)
!15357 = !DILocation(line: 6051, column: 21, scope: !15358)
!15358 = distinct !DILexicalBlock(scope: !15293, file: !1, line: 6051, column: 15)
!15359 = !DILocation(line: 6051, column: 31, scope: !15358)
!15360 = !DILocation(line: 6051, column: 23, scope: !15358)
!15361 = !DILocation(line: 6051, column: 15, scope: !15293)
!15362 = !DILocation(line: 6052, column: 19, scope: !15358)
!15363 = !DILocation(line: 6052, column: 20, scope: !15358)
!15364 = !DILocation(line: 6052, column: 13, scope: !15358)
!15365 = !DILocation(line: 6053, column: 55, scope: !15293)
!15366 = !DILocation(line: 6053, column: 63, scope: !15293)
!15367 = !DILocation(line: 6053, column: 56, scope: !15293)
!15368 = !DILocation(line: 6054, column: 37, scope: !15293)
!15369 = !DILocation(line: 6054, column: 36, scope: !15293)
!15370 = !DILocation(line: 6054, column: 18, scope: !15293)
!15371 = !DILocation(line: 6054, column: 17, scope: !15293)
!15372 = !DILocation(line: 6053, column: 65, scope: !15293)
!15373 = !DILocation(line: 6053, column: 33, scope: !15293)
!15374 = !DILocation(line: 6053, column: 24, scope: !15293)
!15375 = !DILocation(line: 6053, column: 23, scope: !15293)
!15376 = !DILocation(line: 6055, column: 23, scope: !15293)
!15377 = !DILocation(line: 6055, column: 32, scope: !15293)
!15378 = !DILocation(line: 6055, column: 11, scope: !15293)
!15379 = !DILocation(line: 6055, column: 18, scope: !15293)
!15380 = !DILocation(line: 6055, column: 21, scope: !15293)
!15381 = !DILocation(line: 6055, column: 22, scope: !15293)
!15382 = !DILocation(line: 6056, column: 23, scope: !15293)
!15383 = !DILocation(line: 6056, column: 32, scope: !15293)
!15384 = !DILocation(line: 6056, column: 11, scope: !15293)
!15385 = !DILocation(line: 6056, column: 18, scope: !15293)
!15386 = !DILocation(line: 6056, column: 21, scope: !15293)
!15387 = !DILocation(line: 6056, column: 22, scope: !15293)
!15388 = !DILocation(line: 6057, column: 12, scope: !15293)
!15389 = !DILocation(line: 6058, column: 17, scope: !15390)
!15390 = distinct !DILexicalBlock(scope: !15293, file: !1, line: 6058, column: 11)
!15391 = !DILocation(line: 6058, column: 16, scope: !15390)
!15392 = !DILocation(line: 6058, column: 21, scope: !15393)
!15393 = distinct !DILexicalBlock(scope: !15390, file: !1, line: 6058, column: 11)
!15394 = !DILocation(line: 6058, column: 35, scope: !15393)
!15395 = !DILocation(line: 6058, column: 23, scope: !15393)
!15396 = !DILocation(line: 6058, column: 11, scope: !15390)
!15397 = !DILocation(line: 6060, column: 26, scope: !15398)
!15398 = distinct !DILexicalBlock(scope: !15393, file: !1, line: 6059, column: 11)
!15399 = !DILocation(line: 6060, column: 35, scope: !15398)
!15400 = !DILocation(line: 6060, column: 43, scope: !15398)
!15401 = !DILocation(line: 6060, column: 36, scope: !15398)
!15402 = !DILocation(line: 6060, column: 27, scope: !15398)
!15403 = !DILocation(line: 6060, column: 46, scope: !15398)
!15404 = !DILocation(line: 6060, column: 45, scope: !15398)
!15405 = !DILocation(line: 6060, column: 24, scope: !15398)
!15406 = !DILocation(line: 6061, column: 42, scope: !15398)
!15407 = !DILocation(line: 6061, column: 44, scope: !15398)
!15408 = !DILocation(line: 6062, column: 22, scope: !15398)
!15409 = !DILocation(line: 6062, column: 24, scope: !15398)
!15410 = !DILocation(line: 6062, column: 23, scope: !15398)
!15411 = !DILocation(line: 6062, column: 37, scope: !15398)
!15412 = !DILocation(line: 6061, column: 52, scope: !15398)
!15413 = !DILocation(line: 6061, column: 48, scope: !15398)
!15414 = !DILocation(line: 6061, column: 47, scope: !15398)
!15415 = !DILocation(line: 6061, column: 43, scope: !15398)
!15416 = !DILocation(line: 6061, column: 13, scope: !15398)
!15417 = !DILocation(line: 6061, column: 20, scope: !15398)
!15418 = !DILocation(line: 6061, column: 23, scope: !15398)
!15419 = !DILocation(line: 6061, column: 24, scope: !15398)
!15420 = !DILocation(line: 6063, column: 42, scope: !15398)
!15421 = !DILocation(line: 6063, column: 44, scope: !15398)
!15422 = !DILocation(line: 6064, column: 22, scope: !15398)
!15423 = !DILocation(line: 6064, column: 24, scope: !15398)
!15424 = !DILocation(line: 6064, column: 23, scope: !15398)
!15425 = !DILocation(line: 6064, column: 37, scope: !15398)
!15426 = !DILocation(line: 6063, column: 52, scope: !15398)
!15427 = !DILocation(line: 6063, column: 48, scope: !15398)
!15428 = !DILocation(line: 6063, column: 47, scope: !15398)
!15429 = !DILocation(line: 6063, column: 43, scope: !15398)
!15430 = !DILocation(line: 6063, column: 13, scope: !15398)
!15431 = !DILocation(line: 6063, column: 20, scope: !15398)
!15432 = !DILocation(line: 6063, column: 23, scope: !15398)
!15433 = !DILocation(line: 6063, column: 24, scope: !15398)
!15434 = !DILocation(line: 6065, column: 14, scope: !15398)
!15435 = !DILocation(line: 6066, column: 11, scope: !15398)
!15436 = !DILocation(line: 6058, column: 50, scope: !15393)
!15437 = !DILocation(line: 6058, column: 11, scope: !15393)
!15438 = distinct !{!15438, !15396, !15439}
!15439 = !DILocation(line: 6066, column: 11, scope: !15390)
!15440 = !DILocation(line: 6067, column: 11, scope: !15293)
!15441 = !DILocation(line: 6067, column: 19, scope: !15293)
!15442 = !DILocation(line: 6067, column: 23, scope: !15293)
!15443 = !DILocation(line: 6068, column: 11, scope: !15293)
!15444 = !DILocation(line: 6071, column: 11, scope: !15194)
!15445 = !DILocation(line: 6072, column: 7, scope: !15194)
!15446 = !DILocation(line: 6074, column: 15, scope: !15186)
!15447 = !DILocation(line: 6074, column: 26, scope: !15186)
!15448 = !DILocation(line: 6074, column: 7, scope: !15186)
!15449 = !DILocation(line: 6078, column: 11, scope: !15450)
!15450 = distinct !DILexicalBlock(scope: !15451, file: !1, line: 6077, column: 9)
!15451 = distinct !DILexicalBlock(scope: !15186, file: !1, line: 6075, column: 7)
!15452 = !DILocation(line: 6078, column: 19, scope: !15450)
!15453 = !DILocation(line: 6078, column: 23, scope: !15450)
!15454 = !DILocation(line: 6079, column: 11, scope: !15450)
!15455 = !DILocation(line: 6079, column: 19, scope: !15450)
!15456 = !DILocation(line: 6079, column: 23, scope: !15450)
!15457 = !DILocation(line: 6080, column: 24, scope: !15450)
!15458 = !DILocation(line: 6080, column: 33, scope: !15450)
!15459 = !DILocation(line: 6080, column: 35, scope: !15450)
!15460 = !DILocation(line: 6080, column: 44, scope: !15450)
!15461 = !DILocation(line: 6080, column: 34, scope: !15450)
!15462 = !DILocation(line: 6080, column: 48, scope: !15450)
!15463 = !DILocation(line: 6080, column: 57, scope: !15450)
!15464 = !DILocation(line: 6080, column: 59, scope: !15450)
!15465 = !DILocation(line: 6080, column: 68, scope: !15450)
!15466 = !DILocation(line: 6080, column: 58, scope: !15450)
!15467 = !DILocation(line: 6080, column: 46, scope: !15450)
!15468 = !DILocation(line: 6081, column: 14, scope: !15450)
!15469 = !DILocation(line: 6081, column: 23, scope: !15450)
!15470 = !DILocation(line: 6081, column: 25, scope: !15450)
!15471 = !DILocation(line: 6081, column: 34, scope: !15450)
!15472 = !DILocation(line: 6081, column: 24, scope: !15450)
!15473 = !DILocation(line: 6081, column: 38, scope: !15450)
!15474 = !DILocation(line: 6081, column: 47, scope: !15450)
!15475 = !DILocation(line: 6081, column: 49, scope: !15450)
!15476 = !DILocation(line: 6081, column: 58, scope: !15450)
!15477 = !DILocation(line: 6081, column: 48, scope: !15450)
!15478 = !DILocation(line: 6081, column: 36, scope: !15450)
!15479 = !DILocation(line: 6080, column: 70, scope: !15450)
!15480 = !DILocation(line: 6080, column: 22, scope: !15450)
!15481 = !DILocation(line: 6082, column: 15, scope: !15482)
!15482 = distinct !DILexicalBlock(scope: !15450, file: !1, line: 6082, column: 15)
!15483 = !DILocation(line: 6082, column: 30, scope: !15482)
!15484 = !DILocation(line: 6082, column: 27, scope: !15482)
!15485 = !DILocation(line: 6082, column: 15, scope: !15450)
!15486 = !DILocation(line: 6083, column: 13, scope: !15482)
!15487 = !DILocation(line: 6083, column: 21, scope: !15482)
!15488 = !DILocation(line: 6083, column: 25, scope: !15482)
!15489 = !DILocation(line: 6086, column: 15, scope: !15490)
!15490 = distinct !DILexicalBlock(scope: !15482, file: !1, line: 6085, column: 13)
!15491 = !DILocation(line: 6086, column: 23, scope: !15490)
!15492 = !DILocation(line: 6086, column: 27, scope: !15490)
!15493 = !DILocation(line: 6087, column: 15, scope: !15490)
!15494 = !DILocation(line: 6087, column: 23, scope: !15490)
!15495 = !DILocation(line: 6087, column: 27, scope: !15490)
!15496 = !DILocation(line: 6089, column: 11, scope: !15450)
!15497 = !DILocation(line: 6093, column: 24, scope: !15498)
!15498 = distinct !DILexicalBlock(scope: !15451, file: !1, line: 6092, column: 9)
!15499 = !DILocation(line: 6093, column: 33, scope: !15498)
!15500 = !DILocation(line: 6093, column: 35, scope: !15498)
!15501 = !DILocation(line: 6093, column: 44, scope: !15498)
!15502 = !DILocation(line: 6093, column: 34, scope: !15498)
!15503 = !DILocation(line: 6093, column: 48, scope: !15498)
!15504 = !DILocation(line: 6093, column: 57, scope: !15498)
!15505 = !DILocation(line: 6093, column: 59, scope: !15498)
!15506 = !DILocation(line: 6093, column: 68, scope: !15498)
!15507 = !DILocation(line: 6093, column: 58, scope: !15498)
!15508 = !DILocation(line: 6093, column: 46, scope: !15498)
!15509 = !DILocation(line: 6094, column: 14, scope: !15498)
!15510 = !DILocation(line: 6094, column: 23, scope: !15498)
!15511 = !DILocation(line: 6094, column: 25, scope: !15498)
!15512 = !DILocation(line: 6094, column: 34, scope: !15498)
!15513 = !DILocation(line: 6094, column: 24, scope: !15498)
!15514 = !DILocation(line: 6094, column: 38, scope: !15498)
!15515 = !DILocation(line: 6094, column: 47, scope: !15498)
!15516 = !DILocation(line: 6094, column: 49, scope: !15498)
!15517 = !DILocation(line: 6094, column: 58, scope: !15498)
!15518 = !DILocation(line: 6094, column: 48, scope: !15498)
!15519 = !DILocation(line: 6094, column: 36, scope: !15498)
!15520 = !DILocation(line: 6093, column: 70, scope: !15498)
!15521 = !DILocation(line: 6093, column: 22, scope: !15498)
!15522 = !DILocation(line: 6095, column: 15, scope: !15523)
!15523 = distinct !DILexicalBlock(scope: !15498, file: !1, line: 6095, column: 15)
!15524 = !DILocation(line: 6095, column: 30, scope: !15523)
!15525 = !DILocation(line: 6095, column: 27, scope: !15523)
!15526 = !DILocation(line: 6095, column: 15, scope: !15498)
!15527 = !DILocation(line: 6097, column: 15, scope: !15528)
!15528 = distinct !DILexicalBlock(scope: !15523, file: !1, line: 6096, column: 13)
!15529 = !DILocation(line: 6097, column: 23, scope: !15528)
!15530 = !DILocation(line: 6097, column: 27, scope: !15528)
!15531 = !DILocation(line: 6098, column: 15, scope: !15528)
!15532 = !DILocation(line: 6098, column: 23, scope: !15528)
!15533 = !DILocation(line: 6098, column: 27, scope: !15528)
!15534 = !DILocation(line: 6099, column: 13, scope: !15528)
!15535 = !DILocation(line: 6102, column: 15, scope: !15536)
!15536 = distinct !DILexicalBlock(scope: !15523, file: !1, line: 6101, column: 13)
!15537 = !DILocation(line: 6102, column: 23, scope: !15536)
!15538 = !DILocation(line: 6102, column: 27, scope: !15536)
!15539 = !DILocation(line: 6103, column: 15, scope: !15536)
!15540 = !DILocation(line: 6103, column: 23, scope: !15536)
!15541 = !DILocation(line: 6103, column: 27, scope: !15536)
!15542 = !DILocation(line: 6104, column: 15, scope: !15536)
!15543 = !DILocation(line: 6104, column: 23, scope: !15536)
!15544 = !DILocation(line: 6104, column: 27, scope: !15536)
!15545 = !DILocation(line: 6105, column: 15, scope: !15536)
!15546 = !DILocation(line: 6105, column: 23, scope: !15536)
!15547 = !DILocation(line: 6105, column: 27, scope: !15536)
!15548 = !DILocation(line: 6107, column: 11, scope: !15498)
!15549 = !DILocation(line: 6111, column: 24, scope: !15550)
!15550 = distinct !DILexicalBlock(scope: !15451, file: !1, line: 6110, column: 9)
!15551 = !DILocation(line: 6111, column: 33, scope: !15550)
!15552 = !DILocation(line: 6111, column: 35, scope: !15550)
!15553 = !DILocation(line: 6111, column: 44, scope: !15550)
!15554 = !DILocation(line: 6111, column: 34, scope: !15550)
!15555 = !DILocation(line: 6111, column: 48, scope: !15550)
!15556 = !DILocation(line: 6111, column: 57, scope: !15550)
!15557 = !DILocation(line: 6111, column: 59, scope: !15550)
!15558 = !DILocation(line: 6111, column: 68, scope: !15550)
!15559 = !DILocation(line: 6111, column: 58, scope: !15550)
!15560 = !DILocation(line: 6111, column: 46, scope: !15550)
!15561 = !DILocation(line: 6112, column: 14, scope: !15550)
!15562 = !DILocation(line: 6112, column: 23, scope: !15550)
!15563 = !DILocation(line: 6112, column: 25, scope: !15550)
!15564 = !DILocation(line: 6112, column: 34, scope: !15550)
!15565 = !DILocation(line: 6112, column: 24, scope: !15550)
!15566 = !DILocation(line: 6112, column: 38, scope: !15550)
!15567 = !DILocation(line: 6112, column: 47, scope: !15550)
!15568 = !DILocation(line: 6112, column: 49, scope: !15550)
!15569 = !DILocation(line: 6112, column: 58, scope: !15550)
!15570 = !DILocation(line: 6112, column: 48, scope: !15550)
!15571 = !DILocation(line: 6112, column: 36, scope: !15550)
!15572 = !DILocation(line: 6111, column: 70, scope: !15550)
!15573 = !DILocation(line: 6111, column: 22, scope: !15550)
!15574 = !DILocation(line: 6113, column: 15, scope: !15575)
!15575 = distinct !DILexicalBlock(scope: !15550, file: !1, line: 6113, column: 15)
!15576 = !DILocation(line: 6113, column: 30, scope: !15575)
!15577 = !DILocation(line: 6113, column: 27, scope: !15575)
!15578 = !DILocation(line: 6113, column: 15, scope: !15550)
!15579 = !DILocation(line: 6114, column: 13, scope: !15575)
!15580 = !DILocation(line: 6114, column: 21, scope: !15575)
!15581 = !DILocation(line: 6114, column: 25, scope: !15575)
!15582 = !DILocation(line: 6117, column: 15, scope: !15583)
!15583 = distinct !DILexicalBlock(scope: !15575, file: !1, line: 6116, column: 13)
!15584 = !DILocation(line: 6117, column: 23, scope: !15583)
!15585 = !DILocation(line: 6117, column: 27, scope: !15583)
!15586 = !DILocation(line: 6118, column: 15, scope: !15583)
!15587 = !DILocation(line: 6118, column: 23, scope: !15583)
!15588 = !DILocation(line: 6118, column: 27, scope: !15583)
!15589 = !DILocation(line: 6120, column: 18, scope: !15550)
!15590 = !DILocation(line: 6120, column: 36, scope: !15550)
!15591 = !DILocation(line: 6120, column: 39, scope: !15550)
!15592 = !DILocation(line: 6121, column: 25, scope: !15550)
!15593 = !DILocation(line: 6121, column: 34, scope: !15550)
!15594 = !DILocation(line: 6121, column: 43, scope: !15550)
!15595 = !DILocation(line: 6121, column: 35, scope: !15550)
!15596 = !DILocation(line: 6121, column: 45, scope: !15550)
!15597 = !DILocation(line: 6121, column: 54, scope: !15550)
!15598 = !DILocation(line: 6121, column: 63, scope: !15550)
!15599 = !DILocation(line: 6121, column: 55, scope: !15550)
!15600 = !DILocation(line: 6121, column: 19, scope: !15550)
!15601 = !DILocation(line: 6121, column: 17, scope: !15550)
!15602 = !DILocation(line: 6121, column: 18, scope: !15550)
!15603 = !DILocation(line: 6122, column: 25, scope: !15550)
!15604 = !DILocation(line: 6122, column: 34, scope: !15550)
!15605 = !DILocation(line: 6122, column: 43, scope: !15550)
!15606 = !DILocation(line: 6122, column: 35, scope: !15550)
!15607 = !DILocation(line: 6122, column: 45, scope: !15550)
!15608 = !DILocation(line: 6122, column: 54, scope: !15550)
!15609 = !DILocation(line: 6122, column: 63, scope: !15550)
!15610 = !DILocation(line: 6122, column: 55, scope: !15550)
!15611 = !DILocation(line: 6122, column: 19, scope: !15550)
!15612 = !DILocation(line: 6122, column: 17, scope: !15550)
!15613 = !DILocation(line: 6122, column: 18, scope: !15550)
!15614 = !DILocation(line: 6123, column: 21, scope: !15615)
!15615 = distinct !DILexicalBlock(scope: !15550, file: !1, line: 6123, column: 15)
!15616 = !DILocation(line: 6123, column: 31, scope: !15615)
!15617 = !DILocation(line: 6123, column: 23, scope: !15615)
!15618 = !DILocation(line: 6123, column: 15, scope: !15550)
!15619 = !DILocation(line: 6124, column: 19, scope: !15615)
!15620 = !DILocation(line: 6124, column: 20, scope: !15615)
!15621 = !DILocation(line: 6124, column: 13, scope: !15615)
!15622 = !DILocation(line: 6125, column: 55, scope: !15550)
!15623 = !DILocation(line: 6125, column: 63, scope: !15550)
!15624 = !DILocation(line: 6125, column: 56, scope: !15550)
!15625 = !DILocation(line: 6126, column: 37, scope: !15550)
!15626 = !DILocation(line: 6126, column: 36, scope: !15550)
!15627 = !DILocation(line: 6126, column: 18, scope: !15550)
!15628 = !DILocation(line: 6126, column: 17, scope: !15550)
!15629 = !DILocation(line: 6125, column: 65, scope: !15550)
!15630 = !DILocation(line: 6125, column: 33, scope: !15550)
!15631 = !DILocation(line: 6125, column: 24, scope: !15550)
!15632 = !DILocation(line: 6125, column: 23, scope: !15550)
!15633 = !DILocation(line: 6127, column: 11, scope: !15550)
!15634 = !DILocation(line: 6127, column: 19, scope: !15550)
!15635 = !DILocation(line: 6127, column: 23, scope: !15550)
!15636 = !DILocation(line: 6128, column: 17, scope: !15637)
!15637 = distinct !DILexicalBlock(scope: !15550, file: !1, line: 6128, column: 11)
!15638 = !DILocation(line: 6128, column: 16, scope: !15637)
!15639 = !DILocation(line: 6128, column: 21, scope: !15640)
!15640 = distinct !DILexicalBlock(scope: !15637, file: !1, line: 6128, column: 11)
!15641 = !DILocation(line: 6128, column: 35, scope: !15640)
!15642 = !DILocation(line: 6128, column: 23, scope: !15640)
!15643 = !DILocation(line: 6128, column: 11, scope: !15637)
!15644 = !DILocation(line: 6130, column: 26, scope: !15645)
!15645 = distinct !DILexicalBlock(scope: !15640, file: !1, line: 6129, column: 11)
!15646 = !DILocation(line: 6130, column: 35, scope: !15645)
!15647 = !DILocation(line: 6130, column: 43, scope: !15645)
!15648 = !DILocation(line: 6130, column: 36, scope: !15645)
!15649 = !DILocation(line: 6130, column: 27, scope: !15645)
!15650 = !DILocation(line: 6130, column: 46, scope: !15645)
!15651 = !DILocation(line: 6130, column: 45, scope: !15645)
!15652 = !DILocation(line: 6130, column: 24, scope: !15645)
!15653 = !DILocation(line: 6131, column: 42, scope: !15645)
!15654 = !DILocation(line: 6131, column: 44, scope: !15645)
!15655 = !DILocation(line: 6132, column: 22, scope: !15645)
!15656 = !DILocation(line: 6132, column: 24, scope: !15645)
!15657 = !DILocation(line: 6132, column: 23, scope: !15645)
!15658 = !DILocation(line: 6132, column: 37, scope: !15645)
!15659 = !DILocation(line: 6131, column: 52, scope: !15645)
!15660 = !DILocation(line: 6131, column: 48, scope: !15645)
!15661 = !DILocation(line: 6131, column: 47, scope: !15645)
!15662 = !DILocation(line: 6131, column: 43, scope: !15645)
!15663 = !DILocation(line: 6131, column: 13, scope: !15645)
!15664 = !DILocation(line: 6131, column: 20, scope: !15645)
!15665 = !DILocation(line: 6131, column: 23, scope: !15645)
!15666 = !DILocation(line: 6131, column: 24, scope: !15645)
!15667 = !DILocation(line: 6133, column: 42, scope: !15645)
!15668 = !DILocation(line: 6133, column: 44, scope: !15645)
!15669 = !DILocation(line: 6134, column: 22, scope: !15645)
!15670 = !DILocation(line: 6134, column: 24, scope: !15645)
!15671 = !DILocation(line: 6134, column: 23, scope: !15645)
!15672 = !DILocation(line: 6134, column: 37, scope: !15645)
!15673 = !DILocation(line: 6133, column: 52, scope: !15645)
!15674 = !DILocation(line: 6133, column: 48, scope: !15645)
!15675 = !DILocation(line: 6133, column: 47, scope: !15645)
!15676 = !DILocation(line: 6133, column: 43, scope: !15645)
!15677 = !DILocation(line: 6133, column: 13, scope: !15645)
!15678 = !DILocation(line: 6133, column: 20, scope: !15645)
!15679 = !DILocation(line: 6133, column: 23, scope: !15645)
!15680 = !DILocation(line: 6133, column: 24, scope: !15645)
!15681 = !DILocation(line: 6135, column: 14, scope: !15645)
!15682 = !DILocation(line: 6136, column: 11, scope: !15645)
!15683 = !DILocation(line: 6128, column: 50, scope: !15640)
!15684 = !DILocation(line: 6128, column: 11, scope: !15640)
!15685 = distinct !{!15685, !15643, !15686}
!15686 = !DILocation(line: 6136, column: 11, scope: !15637)
!15687 = !DILocation(line: 6137, column: 11, scope: !15550)
!15688 = !DILocation(line: 6137, column: 19, scope: !15550)
!15689 = !DILocation(line: 6137, column: 23, scope: !15550)
!15690 = !DILocation(line: 6138, column: 11, scope: !15550)
!15691 = !DILocation(line: 6141, column: 11, scope: !15451)
!15692 = !DILocation(line: 6143, column: 19, scope: !14839)
!15693 = !DILocation(line: 6143, column: 11, scope: !14839)
!15694 = !DILocation(line: 6143, column: 12, scope: !14839)
!15695 = !DILocation(line: 6144, column: 35, scope: !14839)
!15696 = !DILocation(line: 6144, column: 19, scope: !14839)
!15697 = !DILocation(line: 6144, column: 20, scope: !14839)
!15698 = !DILocation(line: 6145, column: 5, scope: !14839)
!15699 = !DILocation(line: 6145, column: 14, scope: !14839)
!15700 = !DILocation(line: 6146, column: 5, scope: !14839)
!15701 = !DILocation(line: 6146, column: 14, scope: !14839)
!15702 = !DILocation(line: 6147, column: 5, scope: !14839)
!15703 = !DILocation(line: 6147, column: 14, scope: !14839)
!15704 = !DILocation(line: 6148, column: 5, scope: !14839)
!15705 = !DILocation(line: 6148, column: 14, scope: !14839)
!15706 = !DILocation(line: 6149, column: 13, scope: !14839)
!15707 = !DILocation(line: 6149, column: 8, scope: !14839)
!15708 = !DILocation(line: 6149, column: 9, scope: !14839)
!15709 = !DILocation(line: 6150, column: 13, scope: !14839)
!15710 = !DILocation(line: 6150, column: 8, scope: !14839)
!15711 = !DILocation(line: 6150, column: 9, scope: !14839)
!15712 = !DILocation(line: 6151, column: 7, scope: !14839)
!15713 = !DILocation(line: 6151, column: 6, scope: !14839)
!15714 = !DILocation(line: 6152, column: 3, scope: !14839)
!15715 = !DILocation(line: 5935, column: 57, scope: !14834)
!15716 = !DILocation(line: 5935, column: 3, scope: !14834)
!15717 = distinct !{!15717, !14837, !15718}
!15718 = !DILocation(line: 6152, column: 3, scope: !14829)
!15719 = !DILocation(line: 6153, column: 3, scope: !14401)
!15720 = !DILocation(line: 6153, column: 11, scope: !14401)
!15721 = !DILocation(line: 6153, column: 15, scope: !14401)
!15722 = !DILocation(line: 6154, column: 3, scope: !14401)
!15723 = !DILocation(line: 6154, column: 11, scope: !14401)
!15724 = !DILocation(line: 6154, column: 15, scope: !14401)
!15725 = !DILocation(line: 6159, column: 6, scope: !14401)
!15726 = !DILocation(line: 6159, column: 8, scope: !14401)
!15727 = !DILocation(line: 6159, column: 7, scope: !14401)
!15728 = !DILocation(line: 6159, column: 14, scope: !14401)
!15729 = !DILocation(line: 6159, column: 13, scope: !14401)
!15730 = !DILocation(line: 6159, column: 9, scope: !14401)
!15731 = !DILocation(line: 6159, column: 25, scope: !14401)
!15732 = !DILocation(line: 6158, column: 36, scope: !14401)
!15733 = !DILocation(line: 6158, column: 18, scope: !14401)
!15734 = !DILocation(line: 6158, column: 17, scope: !14401)
!15735 = !DILocation(line: 6160, column: 7, scope: !15736)
!15736 = distinct !DILexicalBlock(scope: !14401, file: !1, line: 6160, column: 7)
!15737 = !DILocation(line: 6160, column: 22, scope: !15736)
!15738 = !DILocation(line: 6160, column: 7, scope: !14401)
!15739 = !DILocation(line: 6162, column: 13, scope: !15740)
!15740 = distinct !DILexicalBlock(scope: !15741, file: !1, line: 6162, column: 7)
!15741 = distinct !DILexicalBlock(scope: !15736, file: !1, line: 6161, column: 5)
!15742 = !DILocation(line: 6162, column: 12, scope: !15740)
!15743 = !DILocation(line: 6162, column: 17, scope: !15744)
!15744 = distinct !DILexicalBlock(scope: !15740, file: !1, line: 6162, column: 7)
!15745 = !DILocation(line: 6162, column: 31, scope: !15744)
!15746 = !DILocation(line: 6162, column: 19, scope: !15744)
!15747 = !DILocation(line: 6162, column: 7, scope: !15740)
!15748 = !DILocation(line: 6164, column: 9, scope: !15749)
!15749 = distinct !DILexicalBlock(scope: !15744, file: !1, line: 6163, column: 7)
!15750 = !DILocation(line: 6164, column: 24, scope: !15749)
!15751 = !DILocation(line: 6164, column: 27, scope: !15749)
!15752 = !DILocation(line: 6165, column: 9, scope: !15749)
!15753 = !DILocation(line: 6165, column: 24, scope: !15749)
!15754 = !DILocation(line: 6165, column: 27, scope: !15749)
!15755 = !DILocation(line: 6165, column: 33, scope: !15749)
!15756 = !DILocation(line: 6165, column: 40, scope: !15749)
!15757 = !DILocation(line: 6166, column: 7, scope: !15749)
!15758 = !DILocation(line: 6162, column: 35, scope: !15744)
!15759 = !DILocation(line: 6162, column: 7, scope: !15744)
!15760 = distinct !{!15760, !15747, !15761}
!15761 = !DILocation(line: 6166, column: 7, scope: !15740)
!15762 = !DILocation(line: 6167, column: 11, scope: !15763)
!15763 = distinct !DILexicalBlock(scope: !15741, file: !1, line: 6167, column: 11)
!15764 = !DILocation(line: 6167, column: 23, scope: !15763)
!15765 = !DILocation(line: 6167, column: 11, scope: !15741)
!15766 = !DILocation(line: 6169, column: 11, scope: !15767)
!15767 = distinct !DILexicalBlock(scope: !15763, file: !1, line: 6168, column: 9)
!15768 = !DILocation(line: 6169, column: 26, scope: !15767)
!15769 = !DILocation(line: 6169, column: 29, scope: !15767)
!15770 = !DILocation(line: 6170, column: 11, scope: !15767)
!15771 = !DILocation(line: 6170, column: 26, scope: !15767)
!15772 = !DILocation(line: 6170, column: 29, scope: !15767)
!15773 = !DILocation(line: 6170, column: 35, scope: !15767)
!15774 = !DILocation(line: 6170, column: 53, scope: !15767)
!15775 = !DILocation(line: 6171, column: 12, scope: !15767)
!15776 = !DILocation(line: 6172, column: 9, scope: !15767)
!15777 = !DILocation(line: 6173, column: 7, scope: !15741)
!15778 = !DILocation(line: 6173, column: 15, scope: !15779)
!15779 = distinct !DILexicalBlock(scope: !15780, file: !1, line: 6173, column: 7)
!15780 = distinct !DILexicalBlock(scope: !15741, file: !1, line: 6173, column: 7)
!15781 = !DILocation(line: 6173, column: 30, scope: !15779)
!15782 = !DILocation(line: 6173, column: 32, scope: !15779)
!15783 = !DILocation(line: 6173, column: 31, scope: !15779)
!15784 = !DILocation(line: 6173, column: 34, scope: !15779)
!15785 = !DILocation(line: 6173, column: 33, scope: !15779)
!15786 = !DILocation(line: 6173, column: 17, scope: !15779)
!15787 = !DILocation(line: 6173, column: 7, scope: !15780)
!15788 = !DILocation(line: 6175, column: 9, scope: !15789)
!15789 = distinct !DILexicalBlock(scope: !15779, file: !1, line: 6174, column: 7)
!15790 = !DILocation(line: 6175, column: 24, scope: !15789)
!15791 = !DILocation(line: 6175, column: 27, scope: !15789)
!15792 = !DILocation(line: 6176, column: 9, scope: !15789)
!15793 = !DILocation(line: 6176, column: 24, scope: !15789)
!15794 = !DILocation(line: 6176, column: 27, scope: !15789)
!15795 = !DILocation(line: 6176, column: 33, scope: !15789)
!15796 = !DILocation(line: 6176, column: 40, scope: !15789)
!15797 = !DILocation(line: 6176, column: 42, scope: !15789)
!15798 = !DILocation(line: 6176, column: 41, scope: !15789)
!15799 = !DILocation(line: 6176, column: 44, scope: !15789)
!15800 = !DILocation(line: 6176, column: 43, scope: !15789)
!15801 = !DILocation(line: 6176, column: 57, scope: !15789)
!15802 = !DILocation(line: 6176, column: 58, scope: !15789)
!15803 = !DILocation(line: 6176, column: 55, scope: !15789)
!15804 = !DILocation(line: 6177, column: 7, scope: !15789)
!15805 = !DILocation(line: 6173, column: 49, scope: !15779)
!15806 = !DILocation(line: 6173, column: 7, scope: !15779)
!15807 = distinct !{!15807, !15787, !15808}
!15808 = !DILocation(line: 6177, column: 7, scope: !15780)
!15809 = !DILocation(line: 6178, column: 11, scope: !15810)
!15810 = distinct !DILexicalBlock(scope: !15741, file: !1, line: 6178, column: 11)
!15811 = !DILocation(line: 6178, column: 23, scope: !15810)
!15812 = !DILocation(line: 6178, column: 11, scope: !15741)
!15813 = !DILocation(line: 6180, column: 11, scope: !15814)
!15814 = distinct !DILexicalBlock(scope: !15810, file: !1, line: 6179, column: 9)
!15815 = !DILocation(line: 6180, column: 26, scope: !15814)
!15816 = !DILocation(line: 6180, column: 29, scope: !15814)
!15817 = !DILocation(line: 6181, column: 11, scope: !15814)
!15818 = !DILocation(line: 6181, column: 26, scope: !15814)
!15819 = !DILocation(line: 6181, column: 29, scope: !15814)
!15820 = !DILocation(line: 6181, column: 35, scope: !15814)
!15821 = !DILocation(line: 6181, column: 50, scope: !15814)
!15822 = !DILocation(line: 6181, column: 52, scope: !15814)
!15823 = !DILocation(line: 6181, column: 51, scope: !15814)
!15824 = !DILocation(line: 6181, column: 65, scope: !15814)
!15825 = !DILocation(line: 6182, column: 12, scope: !15814)
!15826 = !DILocation(line: 6183, column: 9, scope: !15814)
!15827 = !DILocation(line: 6184, column: 7, scope: !15741)
!15828 = !DILocation(line: 6184, column: 22, scope: !15741)
!15829 = !DILocation(line: 6184, column: 25, scope: !15741)
!15830 = !DILocation(line: 6185, column: 7, scope: !15741)
!15831 = !DILocation(line: 6185, column: 22, scope: !15741)
!15832 = !DILocation(line: 6185, column: 25, scope: !15741)
!15833 = !DILocation(line: 6185, column: 31, scope: !15741)
!15834 = !DILocation(line: 6185, column: 49, scope: !15741)
!15835 = !DILocation(line: 6186, column: 8, scope: !15741)
!15836 = !DILocation(line: 6187, column: 7, scope: !15741)
!15837 = !DILocation(line: 6187, column: 22, scope: !15741)
!15838 = !DILocation(line: 6187, column: 25, scope: !15741)
!15839 = !DILocation(line: 6187, column: 34, scope: !15741)
!15840 = !DILocation(line: 6188, column: 47, scope: !15741)
!15841 = !DILocation(line: 6188, column: 49, scope: !15741)
!15842 = !DILocation(line: 6188, column: 48, scope: !15741)
!15843 = !DILocation(line: 6188, column: 53, scope: !15741)
!15844 = !DILocation(line: 6188, column: 52, scope: !15741)
!15845 = !DILocation(line: 6188, column: 51, scope: !15741)
!15846 = !DILocation(line: 6188, column: 50, scope: !15741)
!15847 = !DILocation(line: 6188, column: 64, scope: !15741)
!15848 = !DILocation(line: 6188, column: 7, scope: !15741)
!15849 = !DILocation(line: 6188, column: 25, scope: !15741)
!15850 = !DILocation(line: 6188, column: 36, scope: !15741)
!15851 = !DILocation(line: 6189, column: 5, scope: !15741)
!15852 = !DILocation(line: 6190, column: 47, scope: !14401)
!15853 = !DILocation(line: 6190, column: 24, scope: !14401)
!15854 = !DILocation(line: 6190, column: 10, scope: !14401)
!15855 = !DILocation(line: 6190, column: 9, scope: !14401)
!15856 = !DILocation(line: 6191, column: 47, scope: !14401)
!15857 = !DILocation(line: 6191, column: 24, scope: !14401)
!15858 = !DILocation(line: 6191, column: 10, scope: !14401)
!15859 = !DILocation(line: 6191, column: 9, scope: !14401)
!15860 = !DILocation(line: 6192, column: 62, scope: !14401)
!15861 = !DILocation(line: 6192, column: 39, scope: !14401)
!15862 = !DILocation(line: 6192, column: 21, scope: !14401)
!15863 = !DILocation(line: 6192, column: 20, scope: !14401)
!15864 = !DILocation(line: 6193, column: 10, scope: !14401)
!15865 = !DILocation(line: 6193, column: 3, scope: !14401)
!15866 = !DILocation(line: 6194, column: 1, scope: !14401)
!15867 = distinct !DISubprogram(name: "DrawRoundLinecap", scope: !1, file: !1, line: 4674, type: !15868, scopeLine: 4676, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1236)
!15868 = !DISubroutineType(types: !15869)
!15869 = !{null, !801, !1525, !8925}
!15870 = !DILocalVariable(name: "image", arg: 1, scope: !15867, file: !1, line: 4674, type: !801)
!15871 = !DILocation(line: 4674, column: 37, scope: !15867)
!15872 = !DILocalVariable(name: "draw_info", arg: 2, scope: !15867, file: !1, line: 4674, type: !1525)
!15873 = !DILocation(line: 4674, column: 59, scope: !15867)
!15874 = !DILocalVariable(name: "primitive_info", arg: 3, scope: !15867, file: !1, line: 4675, type: !8925)
!15875 = !DILocation(line: 4675, column: 24, scope: !15867)
!15876 = !DILocalVariable(name: "linecap", scope: !15867, file: !1, line: 4678, type: !15877)
!15877 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1185, size: 1600, elements: !14435)
!15878 = !DILocation(line: 4678, column: 5, scope: !15867)
!15879 = !DILocalVariable(name: "i", scope: !15867, file: !1, line: 4681, type: !717)
!15880 = !DILocation(line: 4681, column: 5, scope: !15867)
!15881 = !DILocation(line: 4683, column: 9, scope: !15882)
!15882 = distinct !DILexicalBlock(scope: !15867, file: !1, line: 4683, column: 3)
!15883 = !DILocation(line: 4683, column: 8, scope: !15882)
!15884 = !DILocation(line: 4683, column: 13, scope: !15885)
!15885 = distinct !DILexicalBlock(scope: !15882, file: !1, line: 4683, column: 3)
!15886 = !DILocation(line: 4683, column: 15, scope: !15885)
!15887 = !DILocation(line: 4683, column: 3, scope: !15882)
!15888 = !DILocation(line: 4684, column: 13, scope: !15885)
!15889 = !DILocation(line: 4684, column: 5, scope: !15885)
!15890 = !DILocation(line: 4684, column: 18, scope: !15885)
!15891 = !DILocation(line: 4684, column: 17, scope: !15885)
!15892 = !DILocation(line: 4683, column: 21, scope: !15885)
!15893 = !DILocation(line: 4683, column: 3, scope: !15885)
!15894 = distinct !{!15894, !15887, !15895}
!15895 = !DILocation(line: 4684, column: 32, scope: !15882)
!15896 = !DILocation(line: 4685, column: 3, scope: !15867)
!15897 = !DILocation(line: 4685, column: 14, scope: !15867)
!15898 = !DILocation(line: 4685, column: 25, scope: !15867)
!15899 = !DILocation(line: 4686, column: 3, scope: !15867)
!15900 = !DILocation(line: 4686, column: 14, scope: !15867)
!15901 = !DILocation(line: 4686, column: 20, scope: !15867)
!15902 = !DILocation(line: 4686, column: 21, scope: !15867)
!15903 = !DILocation(line: 4687, column: 3, scope: !15867)
!15904 = !DILocation(line: 4687, column: 14, scope: !15867)
!15905 = !DILocation(line: 4687, column: 20, scope: !15867)
!15906 = !DILocation(line: 4687, column: 21, scope: !15867)
!15907 = !DILocation(line: 4688, column: 3, scope: !15867)
!15908 = !DILocation(line: 4688, column: 14, scope: !15867)
!15909 = !DILocation(line: 4688, column: 20, scope: !15867)
!15910 = !DILocation(line: 4688, column: 21, scope: !15867)
!15911 = !DILocation(line: 4689, column: 3, scope: !15867)
!15912 = !DILocation(line: 4689, column: 14, scope: !15867)
!15913 = !DILocation(line: 4689, column: 20, scope: !15867)
!15914 = !DILocation(line: 4689, column: 21, scope: !15867)
!15915 = !DILocation(line: 4690, column: 3, scope: !15867)
!15916 = !DILocation(line: 4690, column: 14, scope: !15867)
!15917 = !DILocation(line: 4690, column: 23, scope: !15867)
!15918 = !DILocation(line: 4691, column: 31, scope: !15867)
!15919 = !DILocation(line: 4691, column: 37, scope: !15867)
!15920 = !DILocation(line: 4691, column: 47, scope: !15867)
!15921 = !DILocation(line: 4691, column: 10, scope: !15867)
!15922 = !DILocation(line: 4692, column: 1, scope: !15867)
!15923 = distinct !DISubprogram(name: "DrawEpsilonReciprocal", scope: !1, file: !1, line: 5797, type: !7038, scopeLine: 5798, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1236)
!15924 = !DILocalVariable(name: "x", arg: 1, scope: !15923, file: !1, line: 5797, type: !2570)
!15925 = !DILocation(line: 5797, column: 57, scope: !15923)
!15926 = !DILocalVariable(name: "sign", scope: !15923, file: !1, line: 5801, type: !728)
!15927 = !DILocation(line: 5801, column: 10, scope: !15923)
!15928 = !DILocation(line: 5801, column: 17, scope: !15923)
!15929 = !DILocation(line: 5801, column: 19, scope: !15923)
!15930 = !DILocation(line: 5802, column: 11, scope: !15923)
!15931 = !DILocation(line: 5802, column: 16, scope: !15923)
!15932 = !DILocation(line: 5802, column: 15, scope: !15923)
!15933 = !DILocation(line: 5802, column: 19, scope: !15923)
!15934 = !DILocation(line: 5802, column: 10, scope: !15923)
!15935 = !DILocation(line: 5802, column: 40, scope: !15923)
!15936 = !DILocation(line: 5802, column: 39, scope: !15923)
!15937 = !DILocation(line: 5802, column: 44, scope: !15923)
!15938 = !DILocation(line: 5802, column: 48, scope: !15923)
!15939 = !DILocation(line: 5802, column: 3, scope: !15923)
!15940 = distinct !DISubprogram(name: "TraceSquareLinecap", scope: !1, file: !1, line: 5749, type: !15941, scopeLine: 5751, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1236)
!15941 = !DISubroutineType(types: !15942)
!15942 = !{null, !1184, !1111, !2570}
!15943 = !DILocalVariable(name: "primitive_info", arg: 1, scope: !15940, file: !1, line: 5749, type: !1184)
!15944 = !DILocation(line: 5749, column: 47, scope: !15940)
!15945 = !DILocalVariable(name: "number_vertices", arg: 2, scope: !15940, file: !1, line: 5750, type: !1111)
!15946 = !DILocation(line: 5750, column: 16, scope: !15940)
!15947 = !DILocalVariable(name: "offset", arg: 3, scope: !15940, file: !1, line: 5750, type: !2570)
!15948 = !DILocation(line: 5750, column: 45, scope: !15940)
!15949 = !DILocalVariable(name: "distance", scope: !15940, file: !1, line: 5753, type: !728)
!15950 = !DILocation(line: 5753, column: 5, scope: !15940)
!15951 = !DILocalVariable(name: "dx", scope: !15940, file: !1, line: 5756, type: !728)
!15952 = !DILocation(line: 5756, column: 5, scope: !15940)
!15953 = !DILocalVariable(name: "dy", scope: !15940, file: !1, line: 5757, type: !728)
!15954 = !DILocation(line: 5757, column: 5, scope: !15940)
!15955 = !DILocalVariable(name: "i", scope: !15940, file: !1, line: 5760, type: !717)
!15956 = !DILocation(line: 5760, column: 5, scope: !15940)
!15957 = !DILocalVariable(name: "j", scope: !15940, file: !1, line: 5763, type: !717)
!15958 = !DILocation(line: 5763, column: 5, scope: !15940)
!15959 = !DILocation(line: 5765, column: 5, scope: !15940)
!15960 = !DILocation(line: 5766, column: 5, scope: !15940)
!15961 = !DILocation(line: 5767, column: 9, scope: !15962)
!15962 = distinct !DILexicalBlock(scope: !15940, file: !1, line: 5767, column: 3)
!15963 = !DILocation(line: 5767, column: 8, scope: !15962)
!15964 = !DILocation(line: 5767, column: 13, scope: !15965)
!15965 = distinct !DILexicalBlock(scope: !15962, file: !1, line: 5767, column: 3)
!15966 = !DILocation(line: 5767, column: 27, scope: !15965)
!15967 = !DILocation(line: 5767, column: 15, scope: !15965)
!15968 = !DILocation(line: 5767, column: 3, scope: !15962)
!15969 = !DILocation(line: 5769, column: 8, scope: !15970)
!15970 = distinct !DILexicalBlock(scope: !15965, file: !1, line: 5768, column: 3)
!15971 = !DILocation(line: 5769, column: 26, scope: !15970)
!15972 = !DILocation(line: 5769, column: 32, scope: !15970)
!15973 = !DILocation(line: 5769, column: 34, scope: !15970)
!15974 = !DILocation(line: 5769, column: 49, scope: !15970)
!15975 = !DILocation(line: 5769, column: 52, scope: !15970)
!15976 = !DILocation(line: 5769, column: 58, scope: !15970)
!15977 = !DILocation(line: 5769, column: 33, scope: !15970)
!15978 = !DILocation(line: 5769, column: 7, scope: !15970)
!15979 = !DILocation(line: 5770, column: 8, scope: !15970)
!15980 = !DILocation(line: 5770, column: 26, scope: !15970)
!15981 = !DILocation(line: 5770, column: 32, scope: !15970)
!15982 = !DILocation(line: 5770, column: 34, scope: !15970)
!15983 = !DILocation(line: 5770, column: 49, scope: !15970)
!15984 = !DILocation(line: 5770, column: 52, scope: !15970)
!15985 = !DILocation(line: 5770, column: 58, scope: !15970)
!15986 = !DILocation(line: 5770, column: 33, scope: !15970)
!15987 = !DILocation(line: 5770, column: 7, scope: !15970)
!15988 = !DILocation(line: 5771, column: 24, scope: !15989)
!15989 = distinct !DILexicalBlock(scope: !15970, file: !1, line: 5771, column: 9)
!15990 = !DILocation(line: 5771, column: 10, scope: !15989)
!15991 = !DILocation(line: 5771, column: 28, scope: !15989)
!15992 = !DILocation(line: 5771, column: 46, scope: !15989)
!15993 = !DILocation(line: 5772, column: 24, scope: !15989)
!15994 = !DILocation(line: 5772, column: 10, scope: !15989)
!15995 = !DILocation(line: 5772, column: 28, scope: !15989)
!15996 = !DILocation(line: 5771, column: 9, scope: !15970)
!15997 = !DILocation(line: 5773, column: 7, scope: !15989)
!15998 = !DILocation(line: 5774, column: 3, scope: !15970)
!15999 = !DILocation(line: 5767, column: 45, scope: !15965)
!16000 = !DILocation(line: 5767, column: 3, scope: !15965)
!16001 = distinct !{!16001, !15968, !16002}
!16002 = !DILocation(line: 5774, column: 3, scope: !15962)
!16003 = !DILocation(line: 5775, column: 7, scope: !16004)
!16004 = distinct !DILexicalBlock(scope: !15940, file: !1, line: 5775, column: 7)
!16005 = !DILocation(line: 5775, column: 22, scope: !16004)
!16006 = !DILocation(line: 5775, column: 9, scope: !16004)
!16007 = !DILocation(line: 5775, column: 7, scope: !15940)
!16008 = !DILocation(line: 5776, column: 17, scope: !16004)
!16009 = !DILocation(line: 5776, column: 32, scope: !16004)
!16010 = !DILocation(line: 5776, column: 6, scope: !16004)
!16011 = !DILocation(line: 5776, column: 5, scope: !16004)
!16012 = !DILocation(line: 5777, column: 27, scope: !15940)
!16013 = !DILocation(line: 5777, column: 39, scope: !15940)
!16014 = !DILocation(line: 5777, column: 12, scope: !15940)
!16015 = !DILocation(line: 5777, column: 11, scope: !15940)
!16016 = !DILocation(line: 5778, column: 39, scope: !15940)
!16017 = !DILocation(line: 5778, column: 54, scope: !15940)
!16018 = !DILocation(line: 5778, column: 57, scope: !15940)
!16019 = !DILocation(line: 5778, column: 63, scope: !15940)
!16020 = !DILocation(line: 5779, column: 5, scope: !15940)
!16021 = !DILocation(line: 5779, column: 9, scope: !15940)
!16022 = !DILocation(line: 5779, column: 18, scope: !15940)
!16023 = !DILocation(line: 5779, column: 17, scope: !15940)
!16024 = !DILocation(line: 5779, column: 7, scope: !15940)
!16025 = !DILocation(line: 5779, column: 26, scope: !15940)
!16026 = !DILocation(line: 5779, column: 25, scope: !15940)
!16027 = !DILocation(line: 5778, column: 64, scope: !15940)
!16028 = !DILocation(line: 5778, column: 3, scope: !15940)
!16029 = !DILocation(line: 5778, column: 21, scope: !15940)
!16030 = !DILocation(line: 5778, column: 27, scope: !15940)
!16031 = !DILocation(line: 5778, column: 28, scope: !15940)
!16032 = !DILocation(line: 5780, column: 39, scope: !15940)
!16033 = !DILocation(line: 5780, column: 54, scope: !15940)
!16034 = !DILocation(line: 5780, column: 57, scope: !15940)
!16035 = !DILocation(line: 5780, column: 63, scope: !15940)
!16036 = !DILocation(line: 5781, column: 5, scope: !15940)
!16037 = !DILocation(line: 5781, column: 9, scope: !15940)
!16038 = !DILocation(line: 5781, column: 18, scope: !15940)
!16039 = !DILocation(line: 5781, column: 17, scope: !15940)
!16040 = !DILocation(line: 5781, column: 7, scope: !15940)
!16041 = !DILocation(line: 5781, column: 26, scope: !15940)
!16042 = !DILocation(line: 5781, column: 25, scope: !15940)
!16043 = !DILocation(line: 5780, column: 64, scope: !15940)
!16044 = !DILocation(line: 5780, column: 3, scope: !15940)
!16045 = !DILocation(line: 5780, column: 21, scope: !15940)
!16046 = !DILocation(line: 5780, column: 27, scope: !15940)
!16047 = !DILocation(line: 5780, column: 28, scope: !15940)
!16048 = !DILocation(line: 5782, column: 20, scope: !16049)
!16049 = distinct !DILexicalBlock(scope: !15940, file: !1, line: 5782, column: 3)
!16050 = !DILocation(line: 5782, column: 35, scope: !16049)
!16051 = !DILocation(line: 5782, column: 9, scope: !16049)
!16052 = !DILocation(line: 5782, column: 8, scope: !16049)
!16053 = !DILocation(line: 5782, column: 39, scope: !16054)
!16054 = distinct !DILexicalBlock(scope: !16049, file: !1, line: 5782, column: 3)
!16055 = !DILocation(line: 5782, column: 41, scope: !16054)
!16056 = !DILocation(line: 5782, column: 3, scope: !16049)
!16057 = !DILocation(line: 5784, column: 8, scope: !16058)
!16058 = distinct !DILexicalBlock(scope: !16054, file: !1, line: 5783, column: 3)
!16059 = !DILocation(line: 5784, column: 23, scope: !16058)
!16060 = !DILocation(line: 5784, column: 38, scope: !16058)
!16061 = !DILocation(line: 5784, column: 42, scope: !16058)
!16062 = !DILocation(line: 5784, column: 48, scope: !16058)
!16063 = !DILocation(line: 5784, column: 50, scope: !16058)
!16064 = !DILocation(line: 5784, column: 65, scope: !16058)
!16065 = !DILocation(line: 5784, column: 68, scope: !16058)
!16066 = !DILocation(line: 5784, column: 74, scope: !16058)
!16067 = !DILocation(line: 5784, column: 49, scope: !16058)
!16068 = !DILocation(line: 5784, column: 7, scope: !16058)
!16069 = !DILocation(line: 5785, column: 8, scope: !16058)
!16070 = !DILocation(line: 5785, column: 23, scope: !16058)
!16071 = !DILocation(line: 5785, column: 38, scope: !16058)
!16072 = !DILocation(line: 5785, column: 42, scope: !16058)
!16073 = !DILocation(line: 5785, column: 48, scope: !16058)
!16074 = !DILocation(line: 5785, column: 50, scope: !16058)
!16075 = !DILocation(line: 5785, column: 65, scope: !16058)
!16076 = !DILocation(line: 5785, column: 68, scope: !16058)
!16077 = !DILocation(line: 5785, column: 74, scope: !16058)
!16078 = !DILocation(line: 5785, column: 49, scope: !16058)
!16079 = !DILocation(line: 5785, column: 7, scope: !16058)
!16080 = !DILocation(line: 5786, column: 24, scope: !16081)
!16081 = distinct !DILexicalBlock(scope: !16058, file: !1, line: 5786, column: 9)
!16082 = !DILocation(line: 5786, column: 10, scope: !16081)
!16083 = !DILocation(line: 5786, column: 28, scope: !16081)
!16084 = !DILocation(line: 5786, column: 46, scope: !16081)
!16085 = !DILocation(line: 5787, column: 24, scope: !16081)
!16086 = !DILocation(line: 5787, column: 10, scope: !16081)
!16087 = !DILocation(line: 5787, column: 28, scope: !16081)
!16088 = !DILocation(line: 5786, column: 9, scope: !16058)
!16089 = !DILocation(line: 5788, column: 7, scope: !16081)
!16090 = !DILocation(line: 5789, column: 3, scope: !16058)
!16091 = !DILocation(line: 5782, column: 49, scope: !16054)
!16092 = !DILocation(line: 5782, column: 3, scope: !16054)
!16093 = distinct !{!16093, !16056, !16094}
!16094 = !DILocation(line: 5789, column: 3, scope: !16049)
!16095 = !DILocation(line: 5790, column: 27, scope: !15940)
!16096 = !DILocation(line: 5790, column: 39, scope: !15940)
!16097 = !DILocation(line: 5790, column: 12, scope: !15940)
!16098 = !DILocation(line: 5790, column: 11, scope: !15940)
!16099 = !DILocation(line: 5791, column: 55, scope: !15940)
!16100 = !DILocation(line: 5791, column: 70, scope: !15940)
!16101 = !DILocation(line: 5791, column: 73, scope: !15940)
!16102 = !DILocation(line: 5791, column: 79, scope: !15940)
!16103 = !DILocation(line: 5792, column: 5, scope: !15940)
!16104 = !DILocation(line: 5792, column: 9, scope: !15940)
!16105 = !DILocation(line: 5792, column: 18, scope: !15940)
!16106 = !DILocation(line: 5792, column: 17, scope: !15940)
!16107 = !DILocation(line: 5792, column: 7, scope: !15940)
!16108 = !DILocation(line: 5792, column: 26, scope: !15940)
!16109 = !DILocation(line: 5792, column: 25, scope: !15940)
!16110 = !DILocation(line: 5791, column: 80, scope: !15940)
!16111 = !DILocation(line: 5791, column: 3, scope: !15940)
!16112 = !DILocation(line: 5791, column: 18, scope: !15940)
!16113 = !DILocation(line: 5791, column: 33, scope: !15940)
!16114 = !DILocation(line: 5791, column: 37, scope: !15940)
!16115 = !DILocation(line: 5791, column: 43, scope: !15940)
!16116 = !DILocation(line: 5791, column: 44, scope: !15940)
!16117 = !DILocation(line: 5793, column: 55, scope: !15940)
!16118 = !DILocation(line: 5793, column: 70, scope: !15940)
!16119 = !DILocation(line: 5793, column: 73, scope: !15940)
!16120 = !DILocation(line: 5793, column: 79, scope: !15940)
!16121 = !DILocation(line: 5794, column: 5, scope: !15940)
!16122 = !DILocation(line: 5794, column: 9, scope: !15940)
!16123 = !DILocation(line: 5794, column: 18, scope: !15940)
!16124 = !DILocation(line: 5794, column: 17, scope: !15940)
!16125 = !DILocation(line: 5794, column: 7, scope: !15940)
!16126 = !DILocation(line: 5794, column: 26, scope: !15940)
!16127 = !DILocation(line: 5794, column: 25, scope: !15940)
!16128 = !DILocation(line: 5793, column: 80, scope: !15940)
!16129 = !DILocation(line: 5793, column: 3, scope: !15940)
!16130 = !DILocation(line: 5793, column: 18, scope: !15940)
!16131 = !DILocation(line: 5793, column: 33, scope: !15940)
!16132 = !DILocation(line: 5793, column: 37, scope: !15940)
!16133 = !DILocation(line: 5793, column: 43, scope: !15940)
!16134 = !DILocation(line: 5793, column: 44, scope: !15940)
!16135 = !DILocation(line: 5795, column: 1, scope: !15940)
!16136 = distinct !DISubprogram(name: "Permutate", scope: !1, file: !1, line: 4919, type: !16137, scopeLine: 4920, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1236)
!16137 = !DISubroutineType(types: !16138)
!16138 = !{!728, !10636, !10636}
!16139 = !DILocalVariable(name: "n", arg: 1, scope: !16136, file: !1, line: 4919, type: !10636)
!16140 = !DILocation(line: 4919, column: 46, scope: !16136)
!16141 = !DILocalVariable(name: "k", arg: 2, scope: !16136, file: !1, line: 4919, type: !10636)
!16142 = !DILocation(line: 4919, column: 62, scope: !16136)
!16143 = !DILocalVariable(name: "r", scope: !16136, file: !1, line: 4922, type: !728)
!16144 = !DILocation(line: 4922, column: 5, scope: !16136)
!16145 = !DILocalVariable(name: "i", scope: !16136, file: !1, line: 4925, type: !717)
!16146 = !DILocation(line: 4925, column: 5, scope: !16136)
!16147 = !DILocation(line: 4927, column: 4, scope: !16136)
!16148 = !DILocation(line: 4928, column: 10, scope: !16149)
!16149 = distinct !DILexicalBlock(scope: !16136, file: !1, line: 4928, column: 3)
!16150 = !DILocation(line: 4928, column: 11, scope: !16149)
!16151 = !DILocation(line: 4928, column: 9, scope: !16149)
!16152 = !DILocation(line: 4928, column: 8, scope: !16149)
!16153 = !DILocation(line: 4928, column: 15, scope: !16154)
!16154 = distinct !DILexicalBlock(scope: !16149, file: !1, line: 4928, column: 3)
!16155 = !DILocation(line: 4928, column: 20, scope: !16154)
!16156 = !DILocation(line: 4928, column: 17, scope: !16154)
!16157 = !DILocation(line: 4928, column: 3, scope: !16149)
!16158 = !DILocation(line: 4929, column: 8, scope: !16154)
!16159 = !DILocation(line: 4929, column: 6, scope: !16154)
!16160 = !DILocation(line: 4929, column: 5, scope: !16154)
!16161 = !DILocation(line: 4928, column: 24, scope: !16154)
!16162 = !DILocation(line: 4928, column: 3, scope: !16154)
!16163 = distinct !{!16163, !16157, !16164}
!16164 = !DILocation(line: 4929, column: 8, scope: !16149)
!16165 = !DILocation(line: 4930, column: 9, scope: !16166)
!16166 = distinct !DILexicalBlock(scope: !16136, file: !1, line: 4930, column: 3)
!16167 = !DILocation(line: 4930, column: 8, scope: !16166)
!16168 = !DILocation(line: 4930, column: 13, scope: !16169)
!16169 = distinct !DILexicalBlock(scope: !16166, file: !1, line: 4930, column: 3)
!16170 = !DILocation(line: 4930, column: 19, scope: !16169)
!16171 = !DILocation(line: 4930, column: 21, scope: !16169)
!16172 = !DILocation(line: 4930, column: 20, scope: !16169)
!16173 = !DILocation(line: 4930, column: 15, scope: !16169)
!16174 = !DILocation(line: 4930, column: 3, scope: !16166)
!16175 = !DILocation(line: 4931, column: 8, scope: !16169)
!16176 = !DILocation(line: 4931, column: 6, scope: !16169)
!16177 = !DILocation(line: 4931, column: 5, scope: !16169)
!16178 = !DILocation(line: 4930, column: 26, scope: !16169)
!16179 = !DILocation(line: 4930, column: 3, scope: !16169)
!16180 = distinct !{!16180, !16174, !16181}
!16181 = !DILocation(line: 4931, column: 8, scope: !16166)
!16182 = !DILocation(line: 4932, column: 10, scope: !16136)
!16183 = !DILocation(line: 4932, column: 3, scope: !16136)
!16184 = distinct !DISubprogram(name: "TraceArcPath", scope: !1, file: !1, line: 4966, type: !16185, scopeLine: 4969, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1236)
!16185 = !DISubroutineType(types: !16186)
!16186 = !{null, !1184, !7078, !7078, !7078, !2570, !12690, !12690}
!16187 = !DILocalVariable(name: "primitive_info", arg: 1, scope: !16184, file: !1, line: 4966, type: !1184)
!16188 = !DILocation(line: 4966, column: 41, scope: !16184)
!16189 = !DILocalVariable(name: "start", arg: 2, scope: !16184, file: !1, line: 4966, type: !7078)
!16190 = !DILocation(line: 4966, column: 72, scope: !16184)
!16191 = !DILocalVariable(name: "end", arg: 3, scope: !16184, file: !1, line: 4967, type: !7078)
!16192 = !DILocation(line: 4967, column: 19, scope: !16184)
!16193 = !DILocalVariable(name: "arc", arg: 4, scope: !16184, file: !1, line: 4967, type: !7078)
!16194 = !DILocation(line: 4967, column: 39, scope: !16184)
!16195 = !DILocalVariable(name: "angle", arg: 5, scope: !16184, file: !1, line: 4967, type: !2570)
!16196 = !DILocation(line: 4967, column: 56, scope: !16184)
!16197 = !DILocalVariable(name: "large_arc", arg: 6, scope: !16184, file: !1, line: 4968, type: !12690)
!16198 = !DILocation(line: 4968, column: 27, scope: !16184)
!16199 = !DILocalVariable(name: "sweep", arg: 7, scope: !16184, file: !1, line: 4968, type: !12690)
!16200 = !DILocation(line: 4968, column: 61, scope: !16184)
!16201 = !DILocalVariable(name: "alpha", scope: !16184, file: !1, line: 4971, type: !728)
!16202 = !DILocation(line: 4971, column: 5, scope: !16184)
!16203 = !DILocalVariable(name: "beta", scope: !16184, file: !1, line: 4972, type: !728)
!16204 = !DILocation(line: 4972, column: 5, scope: !16184)
!16205 = !DILocalVariable(name: "delta", scope: !16184, file: !1, line: 4973, type: !728)
!16206 = !DILocation(line: 4973, column: 5, scope: !16184)
!16207 = !DILocalVariable(name: "factor", scope: !16184, file: !1, line: 4974, type: !728)
!16208 = !DILocation(line: 4974, column: 5, scope: !16184)
!16209 = !DILocalVariable(name: "gamma", scope: !16184, file: !1, line: 4975, type: !728)
!16210 = !DILocation(line: 4975, column: 5, scope: !16184)
!16211 = !DILocalVariable(name: "theta", scope: !16184, file: !1, line: 4976, type: !728)
!16212 = !DILocation(line: 4976, column: 5, scope: !16184)
!16213 = !DILocalVariable(name: "center", scope: !16184, file: !1, line: 4979, type: !794)
!16214 = !DILocation(line: 4979, column: 5, scope: !16184)
!16215 = !DILocalVariable(name: "points", scope: !16184, file: !1, line: 4980, type: !16216)
!16216 = !DICompositeType(tag: DW_TAG_array_type, baseType: !794, size: 384, elements: !16217)
!16217 = !{!16218}
!16218 = !DISubrange(count: 3)
!16219 = !DILocation(line: 4980, column: 5, scope: !16184)
!16220 = !DILocalVariable(name: "radii", scope: !16184, file: !1, line: 4981, type: !794)
!16221 = !DILocation(line: 4981, column: 5, scope: !16184)
!16222 = !DILocalVariable(name: "cosine", scope: !16184, file: !1, line: 4984, type: !728)
!16223 = !DILocation(line: 4984, column: 5, scope: !16184)
!16224 = !DILocalVariable(name: "sine", scope: !16184, file: !1, line: 4985, type: !728)
!16225 = !DILocation(line: 4985, column: 5, scope: !16184)
!16226 = !DILocalVariable(name: "p", scope: !16184, file: !1, line: 4988, type: !1184)
!16227 = !DILocation(line: 4988, column: 6, scope: !16184)
!16228 = !DILocalVariable(name: "i", scope: !16184, file: !1, line: 4991, type: !717)
!16229 = !DILocation(line: 4991, column: 5, scope: !16184)
!16230 = !DILocalVariable(name: "arc_segments", scope: !16184, file: !1, line: 4994, type: !712)
!16231 = !DILocation(line: 4994, column: 5, scope: !16184)
!16232 = !DILocation(line: 4996, column: 14, scope: !16233)
!16233 = distinct !DILexicalBlock(scope: !16184, file: !1, line: 4996, column: 7)
!16234 = !DILocation(line: 4996, column: 23, scope: !16233)
!16235 = !DILocation(line: 4996, column: 16, scope: !16233)
!16236 = !DILocation(line: 4996, column: 26, scope: !16233)
!16237 = !DILocation(line: 4996, column: 36, scope: !16233)
!16238 = !DILocation(line: 4996, column: 45, scope: !16233)
!16239 = !DILocation(line: 4996, column: 38, scope: !16233)
!16240 = !DILocation(line: 4996, column: 7, scope: !16184)
!16241 = !DILocation(line: 4998, column: 18, scope: !16242)
!16242 = distinct !DILexicalBlock(scope: !16233, file: !1, line: 4997, column: 5)
!16243 = !DILocation(line: 4998, column: 7, scope: !16242)
!16244 = !DILocation(line: 4999, column: 7, scope: !16242)
!16245 = !DILocation(line: 5001, column: 20, scope: !16184)
!16246 = !DILocation(line: 5001, column: 11, scope: !16184)
!16247 = !DILocation(line: 5001, column: 9, scope: !16184)
!16248 = !DILocation(line: 5001, column: 10, scope: !16184)
!16249 = !DILocation(line: 5002, column: 20, scope: !16184)
!16250 = !DILocation(line: 5002, column: 11, scope: !16184)
!16251 = !DILocation(line: 5002, column: 9, scope: !16184)
!16252 = !DILocation(line: 5002, column: 10, scope: !16184)
!16253 = !DILocation(line: 5003, column: 14, scope: !16254)
!16254 = distinct !DILexicalBlock(scope: !16184, file: !1, line: 5003, column: 7)
!16255 = !DILocation(line: 5003, column: 16, scope: !16254)
!16256 = !DILocation(line: 5003, column: 24, scope: !16254)
!16257 = !DILocation(line: 5003, column: 34, scope: !16254)
!16258 = !DILocation(line: 5003, column: 36, scope: !16254)
!16259 = !DILocation(line: 5003, column: 7, scope: !16184)
!16260 = !DILocation(line: 5005, column: 17, scope: !16261)
!16261 = distinct !DILexicalBlock(scope: !16254, file: !1, line: 5004, column: 5)
!16262 = !DILocation(line: 5005, column: 7, scope: !16261)
!16263 = !DILocation(line: 5006, column: 7, scope: !16261)
!16264 = !DILocation(line: 5008, column: 45, scope: !16184)
!16265 = !DILocation(line: 5008, column: 31, scope: !16184)
!16266 = !DILocation(line: 5008, column: 14, scope: !16184)
!16267 = !DILocation(line: 5008, column: 10, scope: !16184)
!16268 = !DILocation(line: 5008, column: 9, scope: !16184)
!16269 = !DILocation(line: 5009, column: 43, scope: !16184)
!16270 = !DILocation(line: 5009, column: 29, scope: !16184)
!16271 = !DILocation(line: 5009, column: 12, scope: !16184)
!16272 = !DILocation(line: 5009, column: 8, scope: !16184)
!16273 = !DILocation(line: 5009, column: 7, scope: !16184)
!16274 = !DILocation(line: 5010, column: 22, scope: !16184)
!16275 = !DILocation(line: 5010, column: 34, scope: !16184)
!16276 = !DILocation(line: 5010, column: 42, scope: !16184)
!16277 = !DILocation(line: 5010, column: 35, scope: !16184)
!16278 = !DILocation(line: 5010, column: 28, scope: !16184)
!16279 = !DILocation(line: 5010, column: 44, scope: !16184)
!16280 = !DILocation(line: 5010, column: 47, scope: !16184)
!16281 = !DILocation(line: 5010, column: 57, scope: !16184)
!16282 = !DILocation(line: 5010, column: 65, scope: !16184)
!16283 = !DILocation(line: 5010, column: 58, scope: !16184)
!16284 = !DILocation(line: 5010, column: 51, scope: !16184)
!16285 = !DILocation(line: 5010, column: 67, scope: !16184)
!16286 = !DILocation(line: 5010, column: 46, scope: !16184)
!16287 = !DILocation(line: 5010, column: 10, scope: !16184)
!16288 = !DILocation(line: 5010, column: 11, scope: !16184)
!16289 = !DILocation(line: 5011, column: 22, scope: !16184)
!16290 = !DILocation(line: 5011, column: 34, scope: !16184)
!16291 = !DILocation(line: 5011, column: 42, scope: !16184)
!16292 = !DILocation(line: 5011, column: 35, scope: !16184)
!16293 = !DILocation(line: 5011, column: 28, scope: !16184)
!16294 = !DILocation(line: 5011, column: 44, scope: !16184)
!16295 = !DILocation(line: 5011, column: 47, scope: !16184)
!16296 = !DILocation(line: 5011, column: 57, scope: !16184)
!16297 = !DILocation(line: 5011, column: 65, scope: !16184)
!16298 = !DILocation(line: 5011, column: 58, scope: !16184)
!16299 = !DILocation(line: 5011, column: 51, scope: !16184)
!16300 = !DILocation(line: 5011, column: 67, scope: !16184)
!16301 = !DILocation(line: 5011, column: 46, scope: !16184)
!16302 = !DILocation(line: 5011, column: 10, scope: !16184)
!16303 = !DILocation(line: 5011, column: 11, scope: !16184)
!16304 = !DILocation(line: 5012, column: 17, scope: !16184)
!16305 = !DILocation(line: 5012, column: 26, scope: !16184)
!16306 = !DILocation(line: 5012, column: 18, scope: !16184)
!16307 = !DILocation(line: 5012, column: 36, scope: !16184)
!16308 = !DILocation(line: 5012, column: 44, scope: !16184)
!16309 = !DILocation(line: 5012, column: 37, scope: !16184)
!16310 = !DILocation(line: 5012, column: 28, scope: !16184)
!16311 = !DILocation(line: 5012, column: 55, scope: !16184)
!16312 = !DILocation(line: 5012, column: 64, scope: !16184)
!16313 = !DILocation(line: 5012, column: 56, scope: !16184)
!16314 = !DILocation(line: 5013, column: 12, scope: !16184)
!16315 = !DILocation(line: 5013, column: 20, scope: !16184)
!16316 = !DILocation(line: 5013, column: 13, scope: !16184)
!16317 = !DILocation(line: 5012, column: 66, scope: !16184)
!16318 = !DILocation(line: 5012, column: 46, scope: !16184)
!16319 = !DILocation(line: 5012, column: 8, scope: !16184)
!16320 = !DILocation(line: 5014, column: 7, scope: !16321)
!16321 = distinct !DILexicalBlock(scope: !16184, file: !1, line: 5014, column: 7)
!16322 = !DILocation(line: 5014, column: 13, scope: !16321)
!16323 = !DILocation(line: 5014, column: 7, scope: !16184)
!16324 = !DILocation(line: 5016, column: 17, scope: !16325)
!16325 = distinct !DILexicalBlock(scope: !16321, file: !1, line: 5015, column: 5)
!16326 = !DILocation(line: 5016, column: 7, scope: !16325)
!16327 = !DILocation(line: 5017, column: 7, scope: !16325)
!16328 = !DILocation(line: 5019, column: 7, scope: !16329)
!16329 = distinct !DILexicalBlock(scope: !16184, file: !1, line: 5019, column: 7)
!16330 = !DILocation(line: 5019, column: 13, scope: !16329)
!16331 = !DILocation(line: 5019, column: 7, scope: !16184)
!16332 = !DILocation(line: 5021, column: 30, scope: !16333)
!16333 = distinct !DILexicalBlock(scope: !16329, file: !1, line: 5020, column: 5)
!16334 = !DILocation(line: 5021, column: 16, scope: !16333)
!16335 = !DILocation(line: 5021, column: 13, scope: !16333)
!16336 = !DILocation(line: 5021, column: 14, scope: !16333)
!16337 = !DILocation(line: 5022, column: 30, scope: !16333)
!16338 = !DILocation(line: 5022, column: 16, scope: !16333)
!16339 = !DILocation(line: 5022, column: 13, scope: !16333)
!16340 = !DILocation(line: 5022, column: 14, scope: !16333)
!16341 = !DILocation(line: 5023, column: 5, scope: !16333)
!16342 = !DILocation(line: 5024, column: 25, scope: !16184)
!16343 = !DILocation(line: 5024, column: 38, scope: !16184)
!16344 = !DILocation(line: 5024, column: 31, scope: !16184)
!16345 = !DILocation(line: 5024, column: 46, scope: !16184)
!16346 = !DILocation(line: 5024, column: 39, scope: !16184)
!16347 = !DILocation(line: 5024, column: 48, scope: !16184)
!16348 = !DILocation(line: 5024, column: 59, scope: !16184)
!16349 = !DILocation(line: 5024, column: 52, scope: !16184)
!16350 = !DILocation(line: 5024, column: 67, scope: !16184)
!16351 = !DILocation(line: 5024, column: 60, scope: !16184)
!16352 = !DILocation(line: 5024, column: 47, scope: !16184)
!16353 = !DILocation(line: 5024, column: 3, scope: !16184)
!16354 = !DILocation(line: 5024, column: 13, scope: !16184)
!16355 = !DILocation(line: 5024, column: 14, scope: !16184)
!16356 = !DILocation(line: 5025, column: 25, scope: !16184)
!16357 = !DILocation(line: 5025, column: 38, scope: !16184)
!16358 = !DILocation(line: 5025, column: 31, scope: !16184)
!16359 = !DILocation(line: 5025, column: 46, scope: !16184)
!16360 = !DILocation(line: 5025, column: 39, scope: !16184)
!16361 = !DILocation(line: 5025, column: 48, scope: !16184)
!16362 = !DILocation(line: 5025, column: 59, scope: !16184)
!16363 = !DILocation(line: 5025, column: 52, scope: !16184)
!16364 = !DILocation(line: 5025, column: 67, scope: !16184)
!16365 = !DILocation(line: 5025, column: 60, scope: !16184)
!16366 = !DILocation(line: 5025, column: 47, scope: !16184)
!16367 = !DILocation(line: 5025, column: 3, scope: !16184)
!16368 = !DILocation(line: 5025, column: 13, scope: !16184)
!16369 = !DILocation(line: 5025, column: 14, scope: !16184)
!16370 = !DILocation(line: 5026, column: 25, scope: !16184)
!16371 = !DILocation(line: 5026, column: 36, scope: !16184)
!16372 = !DILocation(line: 5026, column: 31, scope: !16184)
!16373 = !DILocation(line: 5026, column: 44, scope: !16184)
!16374 = !DILocation(line: 5026, column: 37, scope: !16184)
!16375 = !DILocation(line: 5026, column: 46, scope: !16184)
!16376 = !DILocation(line: 5026, column: 55, scope: !16184)
!16377 = !DILocation(line: 5026, column: 50, scope: !16184)
!16378 = !DILocation(line: 5026, column: 63, scope: !16184)
!16379 = !DILocation(line: 5026, column: 56, scope: !16184)
!16380 = !DILocation(line: 5026, column: 45, scope: !16184)
!16381 = !DILocation(line: 5026, column: 3, scope: !16184)
!16382 = !DILocation(line: 5026, column: 13, scope: !16184)
!16383 = !DILocation(line: 5026, column: 14, scope: !16184)
!16384 = !DILocation(line: 5027, column: 25, scope: !16184)
!16385 = !DILocation(line: 5027, column: 36, scope: !16184)
!16386 = !DILocation(line: 5027, column: 31, scope: !16184)
!16387 = !DILocation(line: 5027, column: 44, scope: !16184)
!16388 = !DILocation(line: 5027, column: 37, scope: !16184)
!16389 = !DILocation(line: 5027, column: 46, scope: !16184)
!16390 = !DILocation(line: 5027, column: 55, scope: !16184)
!16391 = !DILocation(line: 5027, column: 50, scope: !16184)
!16392 = !DILocation(line: 5027, column: 63, scope: !16184)
!16393 = !DILocation(line: 5027, column: 56, scope: !16184)
!16394 = !DILocation(line: 5027, column: 45, scope: !16184)
!16395 = !DILocation(line: 5027, column: 3, scope: !16184)
!16396 = !DILocation(line: 5027, column: 13, scope: !16184)
!16397 = !DILocation(line: 5027, column: 14, scope: !16184)
!16398 = !DILocation(line: 5028, column: 9, scope: !16184)
!16399 = !DILocation(line: 5028, column: 19, scope: !16184)
!16400 = !DILocation(line: 5028, column: 21, scope: !16184)
!16401 = !DILocation(line: 5028, column: 31, scope: !16184)
!16402 = !DILocation(line: 5028, column: 20, scope: !16184)
!16403 = !DILocation(line: 5028, column: 8, scope: !16184)
!16404 = !DILocation(line: 5029, column: 8, scope: !16184)
!16405 = !DILocation(line: 5029, column: 18, scope: !16184)
!16406 = !DILocation(line: 5029, column: 20, scope: !16184)
!16407 = !DILocation(line: 5029, column: 30, scope: !16184)
!16408 = !DILocation(line: 5029, column: 19, scope: !16184)
!16409 = !DILocation(line: 5029, column: 7, scope: !16184)
!16410 = !DILocation(line: 5030, column: 32, scope: !16184)
!16411 = !DILocation(line: 5030, column: 38, scope: !16184)
!16412 = !DILocation(line: 5030, column: 37, scope: !16184)
!16413 = !DILocation(line: 5030, column: 44, scope: !16184)
!16414 = !DILocation(line: 5030, column: 49, scope: !16184)
!16415 = !DILocation(line: 5030, column: 48, scope: !16184)
!16416 = !DILocation(line: 5030, column: 43, scope: !16184)
!16417 = !DILocation(line: 5030, column: 10, scope: !16184)
!16418 = !DILocation(line: 5030, column: 54, scope: !16184)
!16419 = !DILocation(line: 5030, column: 9, scope: !16184)
!16420 = !DILocation(line: 5031, column: 7, scope: !16421)
!16421 = distinct !DILexicalBlock(scope: !16184, file: !1, line: 5031, column: 7)
!16422 = !DILocation(line: 5031, column: 14, scope: !16421)
!16423 = !DILocation(line: 5031, column: 7, scope: !16184)
!16424 = !DILocation(line: 5032, column: 11, scope: !16421)
!16425 = !DILocation(line: 5032, column: 5, scope: !16421)
!16426 = !DILocation(line: 5035, column: 28, scope: !16427)
!16427 = distinct !DILexicalBlock(scope: !16421, file: !1, line: 5034, column: 5)
!16428 = !DILocation(line: 5035, column: 14, scope: !16427)
!16429 = !DILocation(line: 5035, column: 13, scope: !16427)
!16430 = !DILocation(line: 5036, column: 11, scope: !16431)
!16431 = distinct !DILexicalBlock(scope: !16427, file: !1, line: 5036, column: 11)
!16432 = !DILocation(line: 5036, column: 20, scope: !16431)
!16433 = !DILocation(line: 5036, column: 17, scope: !16431)
!16434 = !DILocation(line: 5036, column: 11, scope: !16427)
!16435 = !DILocation(line: 5037, column: 18, scope: !16431)
!16436 = !DILocation(line: 5037, column: 17, scope: !16431)
!16437 = !DILocation(line: 5037, column: 15, scope: !16431)
!16438 = !DILocation(line: 5037, column: 9, scope: !16431)
!16439 = !DILocation(line: 5039, column: 23, scope: !16184)
!16440 = !DILocation(line: 5039, column: 33, scope: !16184)
!16441 = !DILocation(line: 5039, column: 35, scope: !16184)
!16442 = !DILocation(line: 5039, column: 45, scope: !16184)
!16443 = !DILocation(line: 5039, column: 34, scope: !16184)
!16444 = !DILocation(line: 5039, column: 47, scope: !16184)
!16445 = !DILocation(line: 5039, column: 50, scope: !16184)
!16446 = !DILocation(line: 5039, column: 57, scope: !16184)
!16447 = !DILocation(line: 5039, column: 56, scope: !16184)
!16448 = !DILocation(line: 5039, column: 49, scope: !16184)
!16449 = !DILocation(line: 5039, column: 10, scope: !16184)
!16450 = !DILocation(line: 5039, column: 11, scope: !16184)
!16451 = !DILocation(line: 5040, column: 23, scope: !16184)
!16452 = !DILocation(line: 5040, column: 33, scope: !16184)
!16453 = !DILocation(line: 5040, column: 35, scope: !16184)
!16454 = !DILocation(line: 5040, column: 45, scope: !16184)
!16455 = !DILocation(line: 5040, column: 34, scope: !16184)
!16456 = !DILocation(line: 5040, column: 47, scope: !16184)
!16457 = !DILocation(line: 5040, column: 50, scope: !16184)
!16458 = !DILocation(line: 5040, column: 57, scope: !16184)
!16459 = !DILocation(line: 5040, column: 56, scope: !16184)
!16460 = !DILocation(line: 5040, column: 49, scope: !16184)
!16461 = !DILocation(line: 5040, column: 10, scope: !16184)
!16462 = !DILocation(line: 5040, column: 11, scope: !16184)
!16463 = !DILocation(line: 5041, column: 15, scope: !16184)
!16464 = !DILocation(line: 5041, column: 25, scope: !16184)
!16465 = !DILocation(line: 5041, column: 34, scope: !16184)
!16466 = !DILocation(line: 5041, column: 26, scope: !16184)
!16467 = !DILocation(line: 5041, column: 36, scope: !16184)
!16468 = !DILocation(line: 5041, column: 46, scope: !16184)
!16469 = !DILocation(line: 5041, column: 55, scope: !16184)
!16470 = !DILocation(line: 5041, column: 47, scope: !16184)
!16471 = !DILocation(line: 5041, column: 9, scope: !16184)
!16472 = !DILocation(line: 5041, column: 8, scope: !16184)
!16473 = !DILocation(line: 5042, column: 15, scope: !16184)
!16474 = !DILocation(line: 5042, column: 25, scope: !16184)
!16475 = !DILocation(line: 5042, column: 34, scope: !16184)
!16476 = !DILocation(line: 5042, column: 26, scope: !16184)
!16477 = !DILocation(line: 5042, column: 36, scope: !16184)
!16478 = !DILocation(line: 5042, column: 46, scope: !16184)
!16479 = !DILocation(line: 5042, column: 55, scope: !16184)
!16480 = !DILocation(line: 5042, column: 47, scope: !16184)
!16481 = !DILocation(line: 5042, column: 9, scope: !16184)
!16482 = !DILocation(line: 5042, column: 58, scope: !16184)
!16483 = !DILocation(line: 5042, column: 57, scope: !16184)
!16484 = !DILocation(line: 5042, column: 8, scope: !16184)
!16485 = !DILocation(line: 5043, column: 8, scope: !16486)
!16486 = distinct !DILexicalBlock(scope: !16184, file: !1, line: 5043, column: 7)
!16487 = !DILocation(line: 5043, column: 14, scope: !16486)
!16488 = !DILocation(line: 5043, column: 21, scope: !16486)
!16489 = !DILocation(line: 5043, column: 25, scope: !16486)
!16490 = !DILocation(line: 5043, column: 31, scope: !16486)
!16491 = !DILocation(line: 5043, column: 7, scope: !16184)
!16492 = !DILocation(line: 5044, column: 10, scope: !16486)
!16493 = !DILocation(line: 5044, column: 5, scope: !16486)
!16494 = !DILocation(line: 5046, column: 10, scope: !16495)
!16495 = distinct !DILexicalBlock(scope: !16486, file: !1, line: 5046, column: 9)
!16496 = !DILocation(line: 5046, column: 16, scope: !16495)
!16497 = !DILocation(line: 5046, column: 23, scope: !16495)
!16498 = !DILocation(line: 5046, column: 27, scope: !16495)
!16499 = !DILocation(line: 5046, column: 33, scope: !16495)
!16500 = !DILocation(line: 5046, column: 9, scope: !16486)
!16501 = !DILocation(line: 5047, column: 12, scope: !16495)
!16502 = !DILocation(line: 5047, column: 7, scope: !16495)
!16503 = !DILocation(line: 5048, column: 45, scope: !16184)
!16504 = !DILocation(line: 5048, column: 50, scope: !16184)
!16505 = !DILocation(line: 5048, column: 30, scope: !16184)
!16506 = !DILocation(line: 5048, column: 25, scope: !16184)
!16507 = !DILocation(line: 5048, column: 16, scope: !16184)
!16508 = !DILocation(line: 5048, column: 15, scope: !16184)
!16509 = !DILocation(line: 5050, column: 5, scope: !16184)
!16510 = !DILocation(line: 5050, column: 4, scope: !16184)
!16511 = !DILocation(line: 5051, column: 9, scope: !16512)
!16512 = distinct !DILexicalBlock(scope: !16184, file: !1, line: 5051, column: 3)
!16513 = !DILocation(line: 5051, column: 8, scope: !16512)
!16514 = !DILocation(line: 5051, column: 13, scope: !16515)
!16515 = distinct !DILexicalBlock(scope: !16512, file: !1, line: 5051, column: 3)
!16516 = !DILocation(line: 5051, column: 27, scope: !16515)
!16517 = !DILocation(line: 5051, column: 15, scope: !16515)
!16518 = !DILocation(line: 5051, column: 3, scope: !16512)
!16519 = !DILocation(line: 5053, column: 16, scope: !16520)
!16520 = distinct !DILexicalBlock(scope: !16515, file: !1, line: 5052, column: 3)
!16521 = !DILocation(line: 5053, column: 23, scope: !16520)
!16522 = !DILocation(line: 5053, column: 24, scope: !16520)
!16523 = !DILocation(line: 5053, column: 22, scope: !16520)
!16524 = !DILocation(line: 5053, column: 28, scope: !16520)
!16525 = !DILocation(line: 5053, column: 27, scope: !16520)
!16526 = !DILocation(line: 5053, column: 34, scope: !16520)
!16527 = !DILocation(line: 5053, column: 33, scope: !16520)
!16528 = !DILocation(line: 5053, column: 21, scope: !16520)
!16529 = !DILocation(line: 5053, column: 49, scope: !16520)
!16530 = !DILocation(line: 5053, column: 55, scope: !16520)
!16531 = !DILocation(line: 5053, column: 57, scope: !16520)
!16532 = !DILocation(line: 5053, column: 56, scope: !16520)
!16533 = !DILocation(line: 5053, column: 63, scope: !16520)
!16534 = !DILocation(line: 5053, column: 62, scope: !16520)
!16535 = !DILocation(line: 5053, column: 54, scope: !16520)
!16536 = !DILocation(line: 5053, column: 47, scope: !16520)
!16537 = !DILocation(line: 5053, column: 13, scope: !16520)
!16538 = !DILocation(line: 5053, column: 9, scope: !16520)
!16539 = !DILocation(line: 5054, column: 44, scope: !16520)
!16540 = !DILocation(line: 5054, column: 43, scope: !16520)
!16541 = !DILocation(line: 5054, column: 50, scope: !16520)
!16542 = !DILocation(line: 5054, column: 25, scope: !16520)
!16543 = !DILocation(line: 5054, column: 21, scope: !16520)
!16544 = !DILocation(line: 5054, column: 20, scope: !16520)
!16545 = !DILocation(line: 5055, column: 30, scope: !16520)
!16546 = !DILocation(line: 5055, column: 29, scope: !16520)
!16547 = !DILocation(line: 5055, column: 36, scope: !16520)
!16548 = !DILocation(line: 5055, column: 11, scope: !16520)
!16549 = !DILocation(line: 5055, column: 7, scope: !16520)
!16550 = !DILocation(line: 5054, column: 75, scope: !16520)
!16551 = !DILocation(line: 5056, column: 25, scope: !16520)
!16552 = !DILocation(line: 5056, column: 30, scope: !16520)
!16553 = !DILocation(line: 5056, column: 11, scope: !16520)
!16554 = !DILocation(line: 5056, column: 7, scope: !16520)
!16555 = !DILocation(line: 5055, column: 61, scope: !16520)
!16556 = !DILocation(line: 5054, column: 10, scope: !16520)
!16557 = !DILocation(line: 5057, column: 34, scope: !16520)
!16558 = !DILocation(line: 5057, column: 55, scope: !16520)
!16559 = !DILocation(line: 5057, column: 70, scope: !16520)
!16560 = !DILocation(line: 5057, column: 61, scope: !16520)
!16561 = !DILocation(line: 5057, column: 72, scope: !16520)
!16562 = !DILocation(line: 5057, column: 71, scope: !16520)
!16563 = !DILocation(line: 5058, column: 7, scope: !16520)
!16564 = !DILocation(line: 5057, column: 77, scope: !16520)
!16565 = !DILocation(line: 5057, column: 60, scope: !16520)
!16566 = !DILocation(line: 5058, column: 21, scope: !16520)
!16567 = !DILocation(line: 5057, column: 40, scope: !16520)
!16568 = !DILocation(line: 5057, column: 36, scope: !16520)
!16569 = !DILocation(line: 5057, column: 35, scope: !16520)
!16570 = !DILocation(line: 5058, column: 47, scope: !16520)
!16571 = !DILocation(line: 5058, column: 72, scope: !16520)
!16572 = !DILocation(line: 5059, column: 16, scope: !16520)
!16573 = !DILocation(line: 5059, column: 7, scope: !16520)
!16574 = !DILocation(line: 5059, column: 18, scope: !16520)
!16575 = !DILocation(line: 5059, column: 17, scope: !16520)
!16576 = !DILocation(line: 5059, column: 24, scope: !16520)
!16577 = !DILocation(line: 5059, column: 23, scope: !16520)
!16578 = !DILocation(line: 5058, column: 77, scope: !16520)
!16579 = !DILocation(line: 5059, column: 38, scope: !16520)
!16580 = !DILocation(line: 5058, column: 57, scope: !16520)
!16581 = !DILocation(line: 5058, column: 53, scope: !16520)
!16582 = !DILocation(line: 5058, column: 52, scope: !16520)
!16583 = !DILocation(line: 5058, column: 46, scope: !16520)
!16584 = !DILocation(line: 5057, column: 5, scope: !16520)
!16585 = !DILocation(line: 5057, column: 15, scope: !16520)
!16586 = !DILocation(line: 5057, column: 16, scope: !16520)
!16587 = !DILocation(line: 5060, column: 34, scope: !16520)
!16588 = !DILocation(line: 5060, column: 55, scope: !16520)
!16589 = !DILocation(line: 5060, column: 70, scope: !16520)
!16590 = !DILocation(line: 5060, column: 61, scope: !16520)
!16591 = !DILocation(line: 5060, column: 72, scope: !16520)
!16592 = !DILocation(line: 5060, column: 71, scope: !16520)
!16593 = !DILocation(line: 5061, column: 7, scope: !16520)
!16594 = !DILocation(line: 5060, column: 77, scope: !16520)
!16595 = !DILocation(line: 5060, column: 60, scope: !16520)
!16596 = !DILocation(line: 5061, column: 21, scope: !16520)
!16597 = !DILocation(line: 5060, column: 40, scope: !16520)
!16598 = !DILocation(line: 5060, column: 36, scope: !16520)
!16599 = !DILocation(line: 5060, column: 35, scope: !16520)
!16600 = !DILocation(line: 5061, column: 47, scope: !16520)
!16601 = !DILocation(line: 5061, column: 72, scope: !16520)
!16602 = !DILocation(line: 5062, column: 16, scope: !16520)
!16603 = !DILocation(line: 5062, column: 7, scope: !16520)
!16604 = !DILocation(line: 5062, column: 18, scope: !16520)
!16605 = !DILocation(line: 5062, column: 17, scope: !16520)
!16606 = !DILocation(line: 5062, column: 24, scope: !16520)
!16607 = !DILocation(line: 5062, column: 23, scope: !16520)
!16608 = !DILocation(line: 5061, column: 77, scope: !16520)
!16609 = !DILocation(line: 5062, column: 38, scope: !16520)
!16610 = !DILocation(line: 5061, column: 57, scope: !16520)
!16611 = !DILocation(line: 5061, column: 53, scope: !16520)
!16612 = !DILocation(line: 5061, column: 52, scope: !16520)
!16613 = !DILocation(line: 5061, column: 46, scope: !16520)
!16614 = !DILocation(line: 5060, column: 5, scope: !16520)
!16615 = !DILocation(line: 5060, column: 15, scope: !16520)
!16616 = !DILocation(line: 5060, column: 16, scope: !16520)
!16617 = !DILocation(line: 5063, column: 34, scope: !16520)
!16618 = !DILocation(line: 5063, column: 55, scope: !16520)
!16619 = !DILocation(line: 5063, column: 71, scope: !16520)
!16620 = !DILocation(line: 5063, column: 72, scope: !16520)
!16621 = !DILocation(line: 5063, column: 61, scope: !16520)
!16622 = !DILocation(line: 5064, column: 7, scope: !16520)
!16623 = !DILocation(line: 5063, column: 75, scope: !16520)
!16624 = !DILocation(line: 5064, column: 13, scope: !16520)
!16625 = !DILocation(line: 5064, column: 12, scope: !16520)
!16626 = !DILocation(line: 5063, column: 60, scope: !16520)
!16627 = !DILocation(line: 5064, column: 27, scope: !16520)
!16628 = !DILocation(line: 5063, column: 40, scope: !16520)
!16629 = !DILocation(line: 5063, column: 36, scope: !16520)
!16630 = !DILocation(line: 5063, column: 35, scope: !16520)
!16631 = !DILocation(line: 5063, column: 5, scope: !16520)
!16632 = !DILocation(line: 5063, column: 15, scope: !16520)
!16633 = !DILocation(line: 5063, column: 16, scope: !16520)
!16634 = !DILocation(line: 5065, column: 34, scope: !16520)
!16635 = !DILocation(line: 5065, column: 55, scope: !16520)
!16636 = !DILocation(line: 5065, column: 71, scope: !16520)
!16637 = !DILocation(line: 5065, column: 72, scope: !16520)
!16638 = !DILocation(line: 5065, column: 61, scope: !16520)
!16639 = !DILocation(line: 5066, column: 7, scope: !16520)
!16640 = !DILocation(line: 5065, column: 75, scope: !16520)
!16641 = !DILocation(line: 5066, column: 13, scope: !16520)
!16642 = !DILocation(line: 5066, column: 12, scope: !16520)
!16643 = !DILocation(line: 5065, column: 60, scope: !16520)
!16644 = !DILocation(line: 5066, column: 27, scope: !16520)
!16645 = !DILocation(line: 5065, column: 40, scope: !16520)
!16646 = !DILocation(line: 5065, column: 36, scope: !16520)
!16647 = !DILocation(line: 5065, column: 35, scope: !16520)
!16648 = !DILocation(line: 5065, column: 5, scope: !16520)
!16649 = !DILocation(line: 5065, column: 15, scope: !16520)
!16650 = !DILocation(line: 5065, column: 16, scope: !16520)
!16651 = !DILocation(line: 5067, column: 27, scope: !16520)
!16652 = !DILocation(line: 5067, column: 37, scope: !16520)
!16653 = !DILocation(line: 5067, column: 39, scope: !16520)
!16654 = !DILocation(line: 5067, column: 64, scope: !16520)
!16655 = !DILocation(line: 5068, column: 8, scope: !16520)
!16656 = !DILocation(line: 5068, column: 9, scope: !16520)
!16657 = !DILocation(line: 5067, column: 70, scope: !16520)
!16658 = !DILocation(line: 5068, column: 13, scope: !16520)
!16659 = !DILocation(line: 5068, column: 12, scope: !16520)
!16660 = !DILocation(line: 5068, column: 19, scope: !16520)
!16661 = !DILocation(line: 5068, column: 18, scope: !16520)
!16662 = !DILocation(line: 5067, column: 69, scope: !16520)
!16663 = !DILocation(line: 5068, column: 33, scope: !16520)
!16664 = !DILocation(line: 5067, column: 49, scope: !16520)
!16665 = !DILocation(line: 5067, column: 45, scope: !16520)
!16666 = !DILocation(line: 5067, column: 44, scope: !16520)
!16667 = !DILocation(line: 5067, column: 38, scope: !16520)
!16668 = !DILocation(line: 5067, column: 5, scope: !16520)
!16669 = !DILocation(line: 5067, column: 15, scope: !16520)
!16670 = !DILocation(line: 5067, column: 16, scope: !16520)
!16671 = !DILocation(line: 5069, column: 27, scope: !16520)
!16672 = !DILocation(line: 5069, column: 37, scope: !16520)
!16673 = !DILocation(line: 5069, column: 39, scope: !16520)
!16674 = !DILocation(line: 5069, column: 64, scope: !16520)
!16675 = !DILocation(line: 5070, column: 8, scope: !16520)
!16676 = !DILocation(line: 5070, column: 9, scope: !16520)
!16677 = !DILocation(line: 5069, column: 70, scope: !16520)
!16678 = !DILocation(line: 5070, column: 13, scope: !16520)
!16679 = !DILocation(line: 5070, column: 12, scope: !16520)
!16680 = !DILocation(line: 5070, column: 19, scope: !16520)
!16681 = !DILocation(line: 5070, column: 18, scope: !16520)
!16682 = !DILocation(line: 5069, column: 69, scope: !16520)
!16683 = !DILocation(line: 5070, column: 33, scope: !16520)
!16684 = !DILocation(line: 5069, column: 49, scope: !16520)
!16685 = !DILocation(line: 5069, column: 45, scope: !16520)
!16686 = !DILocation(line: 5069, column: 44, scope: !16520)
!16687 = !DILocation(line: 5069, column: 38, scope: !16520)
!16688 = !DILocation(line: 5069, column: 5, scope: !16520)
!16689 = !DILocation(line: 5069, column: 15, scope: !16520)
!16690 = !DILocation(line: 5069, column: 16, scope: !16520)
!16691 = !DILocation(line: 5071, column: 17, scope: !16520)
!16692 = !DILocation(line: 5071, column: 22, scope: !16520)
!16693 = !DILocation(line: 5071, column: 19, scope: !16520)
!16694 = !DILocation(line: 5071, column: 16, scope: !16520)
!16695 = !DILocation(line: 5071, column: 46, scope: !16520)
!16696 = !DILocation(line: 5071, column: 51, scope: !16520)
!16697 = !DILocation(line: 5071, column: 52, scope: !16520)
!16698 = !DILocation(line: 5071, column: 57, scope: !16520)
!16699 = !DILocation(line: 5071, column: 63, scope: !16520)
!16700 = !DILocation(line: 5071, column: 5, scope: !16520)
!16701 = !DILocation(line: 5071, column: 8, scope: !16520)
!16702 = !DILocation(line: 5071, column: 14, scope: !16520)
!16703 = !DILocation(line: 5071, column: 15, scope: !16520)
!16704 = !DILocation(line: 5072, column: 17, scope: !16520)
!16705 = !DILocation(line: 5072, column: 22, scope: !16520)
!16706 = !DILocation(line: 5072, column: 19, scope: !16520)
!16707 = !DILocation(line: 5072, column: 16, scope: !16520)
!16708 = !DILocation(line: 5072, column: 46, scope: !16520)
!16709 = !DILocation(line: 5072, column: 51, scope: !16520)
!16710 = !DILocation(line: 5072, column: 52, scope: !16520)
!16711 = !DILocation(line: 5072, column: 57, scope: !16520)
!16712 = !DILocation(line: 5072, column: 63, scope: !16520)
!16713 = !DILocation(line: 5072, column: 5, scope: !16520)
!16714 = !DILocation(line: 5072, column: 8, scope: !16520)
!16715 = !DILocation(line: 5072, column: 14, scope: !16520)
!16716 = !DILocation(line: 5072, column: 15, scope: !16520)
!16717 = !DILocation(line: 5073, column: 30, scope: !16520)
!16718 = !DILocation(line: 5073, column: 43, scope: !16520)
!16719 = !DILocation(line: 5073, column: 36, scope: !16520)
!16720 = !DILocation(line: 5073, column: 45, scope: !16520)
!16721 = !DILocation(line: 5073, column: 55, scope: !16520)
!16722 = !DILocation(line: 5073, column: 44, scope: !16520)
!16723 = !DILocation(line: 5073, column: 57, scope: !16520)
!16724 = !DILocation(line: 5073, column: 68, scope: !16520)
!16725 = !DILocation(line: 5073, column: 61, scope: !16520)
!16726 = !DILocation(line: 5074, column: 7, scope: !16520)
!16727 = !DILocation(line: 5074, column: 17, scope: !16520)
!16728 = !DILocation(line: 5073, column: 69, scope: !16520)
!16729 = !DILocation(line: 5073, column: 56, scope: !16520)
!16730 = !DILocation(line: 5073, column: 6, scope: !16520)
!16731 = !DILocation(line: 5073, column: 7, scope: !16520)
!16732 = !DILocation(line: 5073, column: 12, scope: !16520)
!16733 = !DILocation(line: 5073, column: 18, scope: !16520)
!16734 = !DILocation(line: 5073, column: 19, scope: !16520)
!16735 = !DILocation(line: 5075, column: 30, scope: !16520)
!16736 = !DILocation(line: 5075, column: 41, scope: !16520)
!16737 = !DILocation(line: 5075, column: 34, scope: !16520)
!16738 = !DILocation(line: 5075, column: 43, scope: !16520)
!16739 = !DILocation(line: 5075, column: 53, scope: !16520)
!16740 = !DILocation(line: 5075, column: 42, scope: !16520)
!16741 = !DILocation(line: 5075, column: 55, scope: !16520)
!16742 = !DILocation(line: 5075, column: 68, scope: !16520)
!16743 = !DILocation(line: 5075, column: 61, scope: !16520)
!16744 = !DILocation(line: 5076, column: 7, scope: !16520)
!16745 = !DILocation(line: 5076, column: 17, scope: !16520)
!16746 = !DILocation(line: 5075, column: 69, scope: !16520)
!16747 = !DILocation(line: 5075, column: 54, scope: !16520)
!16748 = !DILocation(line: 5075, column: 6, scope: !16520)
!16749 = !DILocation(line: 5075, column: 7, scope: !16520)
!16750 = !DILocation(line: 5075, column: 12, scope: !16520)
!16751 = !DILocation(line: 5075, column: 18, scope: !16520)
!16752 = !DILocation(line: 5075, column: 19, scope: !16520)
!16753 = !DILocation(line: 5077, column: 30, scope: !16520)
!16754 = !DILocation(line: 5077, column: 43, scope: !16520)
!16755 = !DILocation(line: 5077, column: 36, scope: !16520)
!16756 = !DILocation(line: 5077, column: 45, scope: !16520)
!16757 = !DILocation(line: 5077, column: 55, scope: !16520)
!16758 = !DILocation(line: 5077, column: 44, scope: !16520)
!16759 = !DILocation(line: 5077, column: 57, scope: !16520)
!16760 = !DILocation(line: 5077, column: 68, scope: !16520)
!16761 = !DILocation(line: 5077, column: 61, scope: !16520)
!16762 = !DILocation(line: 5078, column: 7, scope: !16520)
!16763 = !DILocation(line: 5078, column: 17, scope: !16520)
!16764 = !DILocation(line: 5077, column: 69, scope: !16520)
!16765 = !DILocation(line: 5077, column: 56, scope: !16520)
!16766 = !DILocation(line: 5077, column: 6, scope: !16520)
!16767 = !DILocation(line: 5077, column: 7, scope: !16520)
!16768 = !DILocation(line: 5077, column: 12, scope: !16520)
!16769 = !DILocation(line: 5077, column: 18, scope: !16520)
!16770 = !DILocation(line: 5077, column: 19, scope: !16520)
!16771 = !DILocation(line: 5079, column: 30, scope: !16520)
!16772 = !DILocation(line: 5079, column: 41, scope: !16520)
!16773 = !DILocation(line: 5079, column: 34, scope: !16520)
!16774 = !DILocation(line: 5079, column: 43, scope: !16520)
!16775 = !DILocation(line: 5079, column: 53, scope: !16520)
!16776 = !DILocation(line: 5079, column: 42, scope: !16520)
!16777 = !DILocation(line: 5079, column: 55, scope: !16520)
!16778 = !DILocation(line: 5079, column: 68, scope: !16520)
!16779 = !DILocation(line: 5079, column: 61, scope: !16520)
!16780 = !DILocation(line: 5080, column: 7, scope: !16520)
!16781 = !DILocation(line: 5080, column: 17, scope: !16520)
!16782 = !DILocation(line: 5079, column: 69, scope: !16520)
!16783 = !DILocation(line: 5079, column: 54, scope: !16520)
!16784 = !DILocation(line: 5079, column: 6, scope: !16520)
!16785 = !DILocation(line: 5079, column: 7, scope: !16520)
!16786 = !DILocation(line: 5079, column: 12, scope: !16520)
!16787 = !DILocation(line: 5079, column: 18, scope: !16520)
!16788 = !DILocation(line: 5079, column: 19, scope: !16520)
!16789 = !DILocation(line: 5081, column: 30, scope: !16520)
!16790 = !DILocation(line: 5081, column: 43, scope: !16520)
!16791 = !DILocation(line: 5081, column: 36, scope: !16520)
!16792 = !DILocation(line: 5081, column: 45, scope: !16520)
!16793 = !DILocation(line: 5081, column: 55, scope: !16520)
!16794 = !DILocation(line: 5081, column: 44, scope: !16520)
!16795 = !DILocation(line: 5081, column: 57, scope: !16520)
!16796 = !DILocation(line: 5081, column: 68, scope: !16520)
!16797 = !DILocation(line: 5081, column: 61, scope: !16520)
!16798 = !DILocation(line: 5082, column: 7, scope: !16520)
!16799 = !DILocation(line: 5082, column: 17, scope: !16520)
!16800 = !DILocation(line: 5081, column: 69, scope: !16520)
!16801 = !DILocation(line: 5081, column: 56, scope: !16520)
!16802 = !DILocation(line: 5081, column: 6, scope: !16520)
!16803 = !DILocation(line: 5081, column: 7, scope: !16520)
!16804 = !DILocation(line: 5081, column: 12, scope: !16520)
!16805 = !DILocation(line: 5081, column: 18, scope: !16520)
!16806 = !DILocation(line: 5081, column: 19, scope: !16520)
!16807 = !DILocation(line: 5083, column: 30, scope: !16520)
!16808 = !DILocation(line: 5083, column: 41, scope: !16520)
!16809 = !DILocation(line: 5083, column: 34, scope: !16520)
!16810 = !DILocation(line: 5083, column: 43, scope: !16520)
!16811 = !DILocation(line: 5083, column: 53, scope: !16520)
!16812 = !DILocation(line: 5083, column: 42, scope: !16520)
!16813 = !DILocation(line: 5083, column: 55, scope: !16520)
!16814 = !DILocation(line: 5083, column: 68, scope: !16520)
!16815 = !DILocation(line: 5083, column: 61, scope: !16520)
!16816 = !DILocation(line: 5084, column: 7, scope: !16520)
!16817 = !DILocation(line: 5084, column: 17, scope: !16520)
!16818 = !DILocation(line: 5083, column: 69, scope: !16520)
!16819 = !DILocation(line: 5083, column: 54, scope: !16520)
!16820 = !DILocation(line: 5083, column: 6, scope: !16520)
!16821 = !DILocation(line: 5083, column: 7, scope: !16520)
!16822 = !DILocation(line: 5083, column: 12, scope: !16520)
!16823 = !DILocation(line: 5083, column: 18, scope: !16520)
!16824 = !DILocation(line: 5083, column: 19, scope: !16520)
!16825 = !DILocation(line: 5085, column: 9, scope: !16826)
!16826 = distinct !DILexicalBlock(scope: !16520, file: !1, line: 5085, column: 9)
!16827 = !DILocation(line: 5085, column: 25, scope: !16826)
!16828 = !DILocation(line: 5085, column: 37, scope: !16826)
!16829 = !DILocation(line: 5085, column: 11, scope: !16826)
!16830 = !DILocation(line: 5085, column: 9, scope: !16520)
!16831 = !DILocation(line: 5086, column: 8, scope: !16826)
!16832 = !DILocation(line: 5086, column: 9, scope: !16826)
!16833 = !DILocation(line: 5086, column: 14, scope: !16826)
!16834 = !DILocation(line: 5086, column: 20, scope: !16826)
!16835 = !DILocation(line: 5086, column: 7, scope: !16826)
!16836 = !DILocation(line: 5087, column: 17, scope: !16520)
!16837 = !DILocation(line: 5087, column: 5, scope: !16520)
!16838 = !DILocation(line: 5088, column: 8, scope: !16520)
!16839 = !DILocation(line: 5088, column: 11, scope: !16520)
!16840 = !DILocation(line: 5088, column: 6, scope: !16520)
!16841 = !DILocation(line: 5089, column: 3, scope: !16520)
!16842 = !DILocation(line: 5051, column: 42, scope: !16515)
!16843 = !DILocation(line: 5051, column: 3, scope: !16515)
!16844 = distinct !{!16844, !16518, !16845}
!16845 = !DILocation(line: 5089, column: 3, scope: !16512)
!16846 = !DILocation(line: 5090, column: 41, scope: !16184)
!16847 = !DILocation(line: 5090, column: 43, scope: !16184)
!16848 = !DILocation(line: 5090, column: 42, scope: !16184)
!16849 = !DILocation(line: 5090, column: 3, scope: !16184)
!16850 = !DILocation(line: 5090, column: 19, scope: !16184)
!16851 = !DILocation(line: 5090, column: 30, scope: !16184)
!16852 = !DILocation(line: 5091, column: 9, scope: !16853)
!16853 = distinct !DILexicalBlock(scope: !16184, file: !1, line: 5091, column: 3)
!16854 = !DILocation(line: 5091, column: 8, scope: !16853)
!16855 = !DILocation(line: 5091, column: 13, scope: !16856)
!16856 = distinct !DILexicalBlock(scope: !16853, file: !1, line: 5091, column: 3)
!16857 = !DILocation(line: 5091, column: 27, scope: !16856)
!16858 = !DILocation(line: 5091, column: 43, scope: !16856)
!16859 = !DILocation(line: 5091, column: 15, scope: !16856)
!16860 = !DILocation(line: 5091, column: 3, scope: !16853)
!16861 = !DILocation(line: 5093, column: 18, scope: !16862)
!16862 = distinct !DILexicalBlock(scope: !16856, file: !1, line: 5092, column: 3)
!16863 = !DILocation(line: 5093, column: 34, scope: !16862)
!16864 = !DILocation(line: 5093, column: 5, scope: !16862)
!16865 = !DILocation(line: 5093, column: 8, scope: !16862)
!16866 = !DILocation(line: 5093, column: 17, scope: !16862)
!16867 = !DILocation(line: 5094, column: 6, scope: !16862)
!16868 = !DILocation(line: 5095, column: 3, scope: !16862)
!16869 = !DILocation(line: 5091, column: 57, scope: !16856)
!16870 = !DILocation(line: 5091, column: 3, scope: !16856)
!16871 = distinct !{!16871, !16860, !16872}
!16872 = !DILocation(line: 5095, column: 3, scope: !16853)
!16873 = !DILocation(line: 5096, column: 1, scope: !16184)
