; ModuleID = 'recog.c'
source_filename = "recog.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.change_t = type { %struct.rtx_def*, i32, %struct.rtx_def**, %struct.rtx_def*, i8 }
%struct.rtx_def = type { i32, %union.u }
%union.u = type { %struct.block_symbol }
%struct.block_symbol = type { [3 x %union.rtunion_def], %struct.object_block*, i64 }
%union.rtunion_def = type { i8* }
%struct.object_block = type { %union.section*, i32, i64, %struct.VEC_rtx_gc*, %struct.VEC_rtx_gc* }
%union.section = type { %struct.unnamed_section }
%struct.unnamed_section = type { %struct.section_common, void (i8*)*, i8*, %union.section* }
%struct.section_common = type { i32 }
%struct.VEC_rtx_gc = type { %struct.VEC_rtx_base }
%struct.VEC_rtx_base = type { i32, i32, [1 x %struct.rtx_def*] }
%struct.gcc_target = type { %struct.asm_out, %struct.sched, %struct.vectorize, i32, void ()*, i8 (i64, i8*, i32)*, void ()*, i32 ()*, i32 ()*, i32 ()*, i32 ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, %struct.attribute_spec*, i32 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, void (%union.tree_node*, %union.tree_node**)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 ()*, i8 ()*, i8 ()*, i8 ()*, void ()*, %union.tree_node* (i32, i8)*, %struct.rtx_def* (%union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, i32)*, %union.tree_node* (i32, %union.tree_node*, i8*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, i8)*, %union.tree_node* (i32, i8, i8)*, i8* (%union.tree_node*)*, void ()*, i32 (%union.tree_node*, i8*, i32)*, i8 ()*, i32 ()*, i8 (i8)*, i8 ()*, i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)*, i8 (%struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*)*, i8 (i32, %struct.rtx_def*, i8)*, i8 (i32, %struct.rtx_def*)*, i64, i64, i8 (%struct.rtx_def*)*, i8 (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, void (%union.tree_node*, %struct.rtx_def*, i32)*, i8* (i8*)*, i64 (i32)*, i32 (i32)*, i32 (i32, i32)*, i8 (i32)*, %struct.addr_space, i8 (i32)*, i8 (i32)*, i8 (%struct.rtx_def*, i32, i32, i32*, i8)*, i32 (%struct.rtx_def*, i8)*, %struct.rtx_def* (%struct.rtx_def*)*, i32 (%struct.rtx_def*, i32)*, %struct.rtx_def* (%struct.rtx_def*)*, void (%union.tree_node*)*, i8 (i32*, i32*)*, i32 (i32, i32)*, void ()*, %union.tree_node* ()*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, void (%union.tree_node*, %struct.rtx_def*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %struct.gimple_seq_d**, %struct.gimple_seq_d**)*, i8* (i64*)*, i8* (i8*, i64)*, i8* (i32)*, i8 ()*, %struct.rtx_def* ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i32 (%union.tree_node*)*, void (i8*, %struct.rtx_def*, i32)*, i8 (%struct.stdarg_info*, %union.gimple_statement_d*)*, %union.tree_node* ()*, %union.tree_node* ()*, i8* (%struct.rtx_def*)*, i8 (%union.tree_node*)*, i64, %struct.calls, i8* (%union.tree_node*, %union.tree_node*)*, i8* (i32, %union.tree_node*)*, i8* (i32, %union.tree_node*, %union.tree_node*)*, i8* (%union.tree_node*)*, i8* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*, %union.tree_node*)*, i32* ()*, i32 (i8, %struct.rtx_def*, i32, i32, %struct.secondary_reload_info*)*, void ()*, void ()*, i8 (i32)*, i32 ()*, i8 ()*, i8 (i32, i32)*, %struct.c, %struct.cxx, %struct.emutls, %struct.target_option_hooks, void (%struct.bitmap_head_def*)*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.asm_out = type { i8*, i8*, i8*, %struct.asm_int_op, %struct.asm_int_op, i8 (%struct.rtx_def*, i32, i32)*, void (%struct._IO_FILE*, i8*)*, void (%struct._IO_FILE*, %union.tree_node*)*, void (%struct._IO_FILE*, %union.tree_node*, i32, i32)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, %struct.rtx_def*)*, void (%struct._IO_FILE*, i8*, i64)*, i8 (%struct.rtx_def*)*, void (%union.tree_node*, i32)*, void (%struct._IO_FILE*, i64)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*)*, void (%struct._IO_FILE*, i64)*, void ()*, void (i8*, i32, %union.tree_node*)*, i32 ()*, %union.section* (%union.tree_node*, i32, i64)*, %union.section* (i32, %struct.rtx_def*, i64)*, void (%union.tree_node*, i32)*, %union.section* (%union.tree_node*)*, void (%struct.rtx_def*, i32)*, void (%struct.rtx_def*, i32)*, void (%struct._IO_FILE*, %union.tree_node*, i64, i64, %union.tree_node*)*, i8 (%union.tree_node*, i64, i64, %union.tree_node*)*, void ()*, void ()*, void ()*, void (%struct.rtx_def*)*, void (i8*)*, i32 (i32, i8*)*, i8*, void (%struct.rtx_def*)*, void (%struct._IO_FILE*, i32, %struct.rtx_def*)*, void (%struct._IO_FILE*, %struct.rtx_def*, %struct.rtx_def**, i32)*, void (%struct._IO_FILE*)* }
%struct.asm_int_op = type { i8*, i8*, i8*, i8* }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%union.tree_node = type { %struct.tree_function_decl }
%struct.tree_function_decl = type { %struct.tree_decl_non_common, %struct.function*, %union.tree_node*, %union.tree_node*, %union.tree_node*, i32 }
%struct.tree_decl_non_common = type { %struct.tree_decl_with_vis, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node* }
%struct.tree_decl_with_vis = type { %struct.tree_decl_with_rtl, %union.tree_node*, %union.tree_node*, %union.tree_node*, i24 }
%struct.tree_decl_with_rtl = type { %struct.tree_decl_common, %struct.rtx_def* }
%struct.tree_decl_common = type { %struct.tree_decl_minimal, %union.tree_node*, i40, i32, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.lang_decl* }
%struct.tree_decl_minimal = type { %struct.tree_common, i32, i32, %union.tree_node*, %union.tree_node* }
%struct.tree_common = type { %struct.tree_base, %union.tree_node*, %union.tree_node* }
%struct.tree_base = type { i64 }
%struct.lang_decl = type opaque
%struct.function = type { %struct.eh_status*, %struct.control_flow_graph*, %struct.gimple_seq_d*, %struct.gimple_df*, %struct.loops*, %struct.htab*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %union.tree_node*, %struct.machine_function*, %struct.language_function*, %struct.htab*, i32, i32, i32, i32, i32, i32, i8*, i32 }
%struct.eh_status = type opaque
%struct.control_flow_graph = type { %struct.basic_block_def*, %struct.basic_block_def*, %struct.VEC_basic_block_gc*, i32, i32, i32, %struct.VEC_basic_block_gc*, i32, [2 x i32], [2 x i32], i32, i32 }
%struct.basic_block_def = type { %struct.VEC_edge_gc*, %struct.VEC_edge_gc*, i8*, %struct.loop*, [2 x %struct.et_node*], %struct.basic_block_def*, %struct.basic_block_def*, %union.basic_block_il_dependent, i64, i32, i32, i32, i32, i32 }
%struct.VEC_edge_gc = type { %struct.VEC_edge_base }
%struct.VEC_edge_base = type { i32, i32, [1 x %struct.edge_def*] }
%struct.edge_def = type { %struct.basic_block_def*, %struct.basic_block_def*, %union.edge_def_insns, i8*, %union.tree_node*, i32, i32, i32, i32, i64 }
%union.edge_def_insns = type { %struct.gimple_seq_d* }
%struct.loop = type opaque
%struct.et_node = type opaque
%union.basic_block_il_dependent = type { %struct.gimple_bb_info* }
%struct.gimple_bb_info = type { %struct.gimple_seq_d*, %struct.gimple_seq_d* }
%struct.VEC_basic_block_gc = type { %struct.VEC_basic_block_base }
%struct.VEC_basic_block_base = type { i32, i32, [1 x %struct.basic_block_def*] }
%struct.gimple_seq_d = type opaque
%struct.gimple_df = type opaque
%struct.loops = type opaque
%struct.machine_function = type { %struct.stack_local_entry*, i8*, i32, i32, [4 x i32], i32, %struct.machine_cfa_state, i32, i8 }
%struct.stack_local_entry = type opaque
%struct.machine_cfa_state = type { %struct.rtx_def*, i64 }
%struct.language_function = type opaque
%struct.htab = type { i32 (i8*)*, i32 (i8*, i8*)*, void (i8*)*, i8**, i64, i64, i64, i32, i32, i8* (i64, i64)*, void (i8*)*, i8*, i8* (i8*, i64, i64)*, void (i8*, i8*)*, i32 }
%struct.sched = type { i32 (%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32)*, i32 (%struct.rtx_def*, i32)*, i32 ()*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, void (%struct._IO_FILE*, i32, i32)*, void (%struct._IO_FILE*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def**, i32*, i32)*, void (%struct.rtx_def*, %struct.rtx_def*)*, void ()*, %struct.rtx_def* ()*, void ()*, %struct.rtx_def* ()*, void ()*, void ()*, i32 ()*, i32 (%struct.rtx_def*)*, i32 (%struct._IO_FILE*, i32, %struct.rtx_def*, i32, i32, i32*)*, i8 (%struct._dep*, i32, i32)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def*, i32, i32)*, void ()*, i8* ()*, void (i8*, i8)*, void (i8*)*, void (i8*)*, void (i8*)*, i32 (%struct.rtx_def*, i32, %struct.rtx_def**)*, i8 (i32)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32)*, i8 (%struct.rtx_def*)*, void (%struct.spec_info_def*)*, i32 (%struct.rtx_def*)*, i32 (%struct.rtx_def*)*, i8 (%struct.rtx_def*)*, i32 (%struct.ddg*)* }
%struct._dep = type opaque
%struct.spec_info_def = type opaque
%struct.ddg = type opaque
%struct.vectorize = type { %union.tree_node* ()*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %union.tree_node* (i32, %union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, %union.tree_node* (%union.tree_node*)*, i32 (i8)*, i8 (%union.tree_node*, i8)*, %union.tree_node* (%union.tree_node*, %union.tree_node**)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (i32, %union.tree_node*, i32, i8)* }
%struct.attribute_spec = type { i8*, i32, i32, i8, i8, i8, %union.tree_node* (%union.tree_node**, %union.tree_node*, %union.tree_node*, i32, i8*)* }
%struct.addr_space = type { i32 (i8)*, i32 (i8)*, i8 (i32, i8)*, i8 (i32, %struct.rtx_def*, i8, i8)*, %struct.rtx_def* (%struct.rtx_def*, %struct.rtx_def*, i32, i8)*, i8 (i8, i8)*, %struct.rtx_def* (%struct.rtx_def*, %union.tree_node*, %union.tree_node*)* }
%struct.stdarg_info = type opaque
%union.gimple_statement_d = type opaque
%struct.calls = type { i32 (%union.tree_node*, i32, i32*, %union.tree_node*, i32)*, i8 (%union.tree_node*)*, %struct.rtx_def* (%union.tree_node*, i32)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, %struct.rtx_def* ()*, void (%struct.ix86_args*, i32, %union.tree_node*, i32*, i32)*, i8 (%struct.ix86_args*)*, i8 (%struct.ix86_args*)*, i8 (%union.tree_node*)*, i8 (i32, %union.tree_node*)*, i8 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i32 (%struct.ix86_args*, i32, %union.tree_node*, i8)*, i8* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, %struct.rtx_def* (%union.tree_node*, %union.tree_node*, i8)*, %struct.rtx_def* (i32, %struct.rtx_def*)*, %struct.rtx_def* ()*, void ()*, %struct.rtx_def* ()*, i8 ()*, %struct.rtx_def* (%union.tree_node*, i8)*, void (%struct.rtx_def*, %union.tree_node*, %struct.rtx_def*)*, %struct.rtx_def* (%struct.rtx_def*)* }
%struct.ix86_args = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.secondary_reload_info = type { i32, i32, %struct.secondary_reload_info*, i32 }
%struct.c = type { i32 (i8)* }
%struct.cxx = type { %union.tree_node* ()*, i8 ()*, %union.tree_node* (%union.tree_node*)*, i8 ()*, i32 (%union.tree_node*, i32)*, i8 ()*, i8 ()*, void (%union.tree_node*)*, i8 ()*, i8 ()*, i8 ()*, i8 ()*, void (%union.tree_node*)* }
%struct.emutls = type { i8*, i8*, i8*, i8*, i8*, i8*, %union.tree_node* (%union.tree_node*, %union.tree_node**)*, %union.tree_node* (%union.tree_node*, %union.tree_node*, %union.tree_node*)*, i8, i8 }
%struct.target_option_hooks = type { i8 (%union.tree_node*, %union.tree_node*, %union.tree_node*, i32)*, void (%struct.cl_target_option*)*, void (%struct.cl_target_option*)*, void (%struct._IO_FILE*, i32, %struct.cl_target_option*)*, i8 (%union.tree_node*, %union.tree_node*)*, i8 (%union.tree_node*, %union.tree_node*)* }
%struct.cl_target_option = type { i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8 }
%struct.bitmap_head_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, %struct.bitmap_obstack* }
%struct.bitmap_element_def = type { %struct.bitmap_element_def*, %struct.bitmap_element_def*, i32, [2 x i64] }
%struct.bitmap_obstack = type { %struct.bitmap_element_def*, %struct.bitmap_head_def*, %struct.obstack }
%struct.obstack = type { i64, %struct._obstack_chunk*, i8*, i8*, i8*, i64, i32, %struct._obstack_chunk* (i8*, i64)*, void (i8*, %struct._obstack_chunk*)*, i8*, i8 }
%struct._obstack_chunk = type { i8*, %struct._obstack_chunk*, [4 x i8] }
%struct.recog_data = type { [30 x %struct.rtx_def*], [30 x %struct.rtx_def**], [30 x i8*], [30 x i32], [30 x i32], [14 x %struct.rtx_def**], [14 x i8], i8, i8, i8, [30 x i8], %struct.rtx_def* }
%struct.insn_data = type { i8*, %union.anon.0, %struct.rtx_def* (%struct.rtx_def*, ...)*, %struct.insn_operand_data*, i8, i8, i8, i8 }
%union.anon.0 = type { i8* }
%struct.insn_operand_data = type { i32 (%struct.rtx_def*, i32)*, i8*, i16, i8, i8 }
%struct.operand_alternative = type { i8*, i32, i32, i32, i32, i8 }
%struct.peep2_insn_data = type { %struct.rtx_def*, %struct.bitmap_head_def* }
%struct.rtl_data = type { %struct.expr_status, %struct.emit_status, %struct.varasm_status, %struct.incoming_args, %struct.function_subsections, %struct.rtl_eh, i32, %struct.rtx_def*, %struct.initial_value_struct*, %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i64, %struct.rtx_def*, %struct.VEC_temp_slot_p_gc*, %struct.temp_slot*, i32, i32, i32, i32, i32, i32, %struct.rtx_def*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.expr_status = type { i32, i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def* }
%struct.emit_status = type { i32, i32, %struct.rtx_def*, %struct.rtx_def*, %struct.sequence_stack*, i32, i32, i32, i32, i8* }
%struct.sequence_stack = type { %struct.rtx_def*, %struct.rtx_def*, %struct.sequence_stack* }
%struct.varasm_status = type { %struct.rtx_constant_pool*, i32 }
%struct.rtx_constant_pool = type opaque
%struct.incoming_args = type { i32, i32, i32, %struct.rtx_def*, %struct.ix86_args, %struct.rtx_def* }
%struct.function_subsections = type { i8*, i8*, i8*, i8*, i8* }
%struct.rtl_eh = type { %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.VEC_uchar_gc*, [2 x %struct.VEC_call_site_record_gc*] }
%struct.VEC_uchar_gc = type { %struct.VEC_uchar_base }
%struct.VEC_uchar_base = type { i32, i32, [1 x i8] }
%struct.VEC_call_site_record_gc = type { %struct.VEC_call_site_record_base }
%struct.VEC_call_site_record_base = type { i32, i32, [1 x %struct.call_site_record_d*] }
%struct.call_site_record_d = type opaque
%struct.initial_value_struct = type opaque
%struct.VEC_temp_slot_p_gc = type { %struct.VEC_temp_slot_p_base }
%struct.VEC_temp_slot_p_base = type { i32, i32, [1 x %struct.temp_slot*] }
%struct.temp_slot = type opaque
%struct.rtl_opt_pass = type { %struct.opt_pass }
%struct.opt_pass = type { i32, i8*, i8 ()*, i32 ()*, %struct.opt_pass*, %struct.opt_pass*, i32, i32, i32, i32, i32, i32, i32 }
%struct.df = type { [8 x %struct.dataflow*], [8 x %struct.dataflow*], %struct.bitmap_head_def*, %struct.df_ref_info, %struct.df_ref_info, %struct.df_reg_info**, %struct.df_reg_info**, %struct.df_reg_info**, i32, i32, %struct.df_insn_info**, i32, i32, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, i32*, i32*, i32, i32, i32*, i32, i8, i8, i8 }
%struct.dataflow = type { %struct.df_problem*, i8**, i32, %struct.alloc_pool_def*, %struct.bitmap_head_def*, i8*, i32, i8, i8, i8 }
%struct.df_problem = type { i32, i32, void (%struct.bitmap_head_def*)*, void (%struct.bitmap_head_def*)*, void (%struct.basic_block_def*, i8*)*, void (%struct.bitmap_head_def*)*, void (%struct.bitmap_head_def*)*, void (%struct.dataflow*, %struct.bitmap_head_def*, i32*, i32)*, void (%struct.basic_block_def*)*, void (%struct.edge_def*)*, i8 (i32)*, void (%struct.bitmap_head_def*)*, void ()*, void ()*, void (%struct._IO_FILE*)*, void (%struct.basic_block_def*, %struct._IO_FILE*)*, void (%struct.basic_block_def*, %struct._IO_FILE*)*, void ()*, void ()*, %struct.df_problem*, i32, i8 }
%struct.alloc_pool_def = type { i8*, i64, %struct.alloc_pool_list_def*, i8*, i64, i64, i64, i64, %struct.alloc_pool_list_def*, i64, i64 }
%struct.alloc_pool_list_def = type { %struct.alloc_pool_list_def* }
%struct.df_ref_info = type { %union.df_ref_d**, i32*, i32*, i32, i32, i32, i32 }
%union.df_ref_d = type { %struct.df_extract_ref }
%struct.df_extract_ref = type { %struct.df_regular_ref, i32, i32, i32 }
%struct.df_regular_ref = type { %struct.df_base_ref, %struct.rtx_def** }
%struct.df_base_ref = type { i32, %struct.rtx_def*, %struct.df_link*, %struct.df_insn_info*, %union.df_ref_d*, %union.df_ref_d*, i32, i32, i32 }
%struct.df_link = type { %union.df_ref_d*, %struct.df_link* }
%struct.df_insn_info = type { %struct.rtx_def*, %union.df_ref_d**, %union.df_ref_d**, %union.df_ref_d**, %struct.df_mw_hardreg**, i32 }
%struct.df_mw_hardreg = type { %struct.rtx_def*, i32, i32, i32, i32 }
%struct.df_reg_info = type { %union.df_ref_d*, i32 }
%struct.rtvec_def = type { i32, [1 x %struct.rtx_def*] }
%struct.funny_match = type { i32, i32 }
%struct.mem_attrs = type { %union.tree_node*, %struct.rtx_def*, %struct.rtx_def*, i32, i32, i8 }
%struct.reg_attrs = type { %union.tree_node*, i64 }
%struct.validate_replace_src_data = type { %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def* }
%struct.simple_bitmap_def = type { i8*, i32, i32, [1 x i64] }
%struct.rtl_bb_info = type { %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*, i32 }
%struct.edge_iterator = type { i32, %struct.VEC_edge_gc** }
%struct.df_lr_bb_info = type { %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def*, %struct.bitmap_head_def* }

@volatile_ok = common dso_local global i32 0, align 4, !dbg !0
@reload_completed = common dso_local global i32 0, align 4, !dbg !2101
@which_alternative = common dso_local global i32 0, align 4, !dbg !2099
@rtx_class = external dso_local constant [139 x i32], align 16
@reload_in_progress = external dso_local global i32, align 4
@num_changes = internal global i32 0, align 4, !dbg !2123
@changes = internal global %struct.change_t* null, align 8, !dbg !2105
@tree_contains_struct = external dso_local global [191 x [64 x i8]], align 16
@mode_class = external dso_local constant [87 x i8], align 16
@flag_pic = external dso_local global i32, align 4
@mode_size = external dso_local global [87 x i8], align 16
@regclass_map = external dso_local constant [53 x i32], align 16
@global_rtl = external dso_local global [11 x %struct.rtx_def*], align 16
@targetm = external dso_local global %struct.gcc_target, align 8
@.str = private unnamed_addr constant [8 x i8] c"recog.c\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"?\00", align 1
@.str.2 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@_sch_istable = external dso_local constant [256 x i16], align 16
@ix86_isa_flags = external dso_local global i32, align 4
@recog_data = common dso_local global %struct.recog_data zeroinitializer, align 8, !dbg !2052
@insn_data = external dso_local constant [0 x %struct.insn_data], align 8
@recog_op_alt = common dso_local global [30 x [30 x %struct.operand_alternative]] zeroinitializer, align 16, !dbg !2080
@reg_class_subunion = external dso_local global [27 x [27 x i32]], align 16
@reg_class_contents = external dso_local global [27 x i64], align 16
@cfun = external dso_local global %struct.function*, align 8
@peep2_current_count = common dso_local global i32 0, align 4, !dbg !2119
@peep2_current = internal global i32 0, align 4, !dbg !2117
@peep2_insn_data = internal global [5 x %struct.peep2_insn_data] zeroinitializer, align 16, !dbg !2107
@hard_regno_nregs = external dso_local global [53 x [87 x i8]], align 16
@peep2_find_free_register.search_ofs = internal global i32 0, align 4, !dbg !2007
@reg_alloc_order = external dso_local global [53 x i32], align 16
@fixed_regs = external dso_local global [53 x i8], align 16
@global_regs = external dso_local global [53 x i8], align 16
@call_used_regs = external dso_local global [53 x i8], align 16
@x_rtl = external dso_local global %struct.rtl_data, align 8
@.str.3 = private unnamed_addr constant [10 x i8] c"peephole2\00", align 1
@pass_peephole2 = dso_local global %struct.rtl_opt_pass { %struct.opt_pass { i32 1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i32 0, i32 0), i8 ()* @gate_handle_peephole2, i32 ()* @rest_of_handle_peephole2, %struct.opt_pass* null, %struct.opt_pass* null, i32 0, i32 156, i32 0, i32 0, i32 0, i32 0, i32 132097 } }, align 8, !dbg !2014
@.str.4 = private unnamed_addr constant [7 x i8] c"split1\00", align 1
@pass_split_all_insns = dso_local global %struct.rtl_opt_pass { %struct.opt_pass { i32 1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i32 0, i32 0), i8 ()* null, i32 ()* @rest_of_handle_split_all_insns, %struct.opt_pass* null, %struct.opt_pass* null, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1 } }, align 8, !dbg !2042
@.str.5 = private unnamed_addr constant [7 x i8] c"split2\00", align 1
@pass_split_after_reload = dso_local global %struct.rtl_opt_pass { %struct.opt_pass { i32 1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i32 0, i32 0), i8 ()* null, i32 ()* @rest_of_handle_split_after_reload, %struct.opt_pass* null, %struct.opt_pass* null, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1 } }, align 8, !dbg !2044
@.str.6 = private unnamed_addr constant [7 x i8] c"split3\00", align 1
@pass_split_before_regstack = dso_local global %struct.rtl_opt_pass { %struct.opt_pass { i32 1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.6, i32 0, i32 0), i8 ()* @gate_handle_split_before_regstack, i32 ()* @rest_of_handle_split_before_regstack, %struct.opt_pass* null, %struct.opt_pass* null, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1 } }, align 8, !dbg !2046
@.str.7 = private unnamed_addr constant [7 x i8] c"split4\00", align 1
@pass_split_before_sched2 = dso_local global %struct.rtl_opt_pass { %struct.opt_pass { i32 1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7, i32 0, i32 0), i8 ()* @gate_handle_split_before_sched2, i32 ()* @rest_of_handle_split_before_sched2, %struct.opt_pass* null, %struct.opt_pass* null, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 9 } }, align 8, !dbg !2048
@.str.8 = private unnamed_addr constant [7 x i8] c"split5\00", align 1
@pass_split_for_shorten_branches = dso_local global %struct.rtl_opt_pass { %struct.opt_pass { i32 1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8, i32 0, i32 0), i8 ()* @gate_do_final_split, i32 ()* @split_all_insns_noflow, %struct.opt_pass* null, %struct.opt_pass* null, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1025 } }, align 8, !dbg !2050
@epilogue_completed = common dso_local global i32 0, align 4, !dbg !2103
@changes_allocated = internal global i32 0, align 4, !dbg !2121
@rtx_format = external dso_local constant [139 x i8*], align 16
@rtx_length = external dso_local constant [139 x i8], align 16
@const_int_rtx = external dso_local global [129 x %struct.rtx_def*], align 16
@optimize = external dso_local global i32, align 4
@flag_peephole2 = external dso_local global i32, align 4
@reg_obstack = external dso_local global %struct.bitmap_obstack, align 8
@df = external dso_local global %struct.df*, align 8
@.str.9 = private unnamed_addr constant [16 x i8] c"./basic-block.h\00", align 1
@flag_schedule_insns_after_reload = external dso_local global i32, align 4

; Function Attrs: noinline nounwind uwtable
define dso_local void @init_recog_no_volatile() #0 !dbg !2129 {
entry:
  store i32 0, i32* @volatile_ok, align 4, !dbg !2132
  ret void, !dbg !2133
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @init_recog() #0 !dbg !2134 {
entry:
  store i32 1, i32* @volatile_ok, align 4, !dbg !2135
  ret void, !dbg !2136
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @check_asm_operands(%struct.rtx_def* %x) #0 !dbg !2137 {
entry:
  %retval = alloca i32, align 4
  %x.addr = alloca %struct.rtx_def*, align 8
  %noperands = alloca i32, align 4
  %operands = alloca %struct.rtx_def**, align 8
  %constraints = alloca i8**, align 8
  %i = alloca i32, align 4
  %c = alloca i8*, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !2140, metadata !DIExpression()), !dbg !2141
  call void @llvm.dbg.declare(metadata i32* %noperands, metadata !2142, metadata !DIExpression()), !dbg !2143
  call void @llvm.dbg.declare(metadata %struct.rtx_def*** %operands, metadata !2144, metadata !DIExpression()), !dbg !2145
  call void @llvm.dbg.declare(metadata i8*** %constraints, metadata !2146, metadata !DIExpression()), !dbg !2147
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2148, metadata !DIExpression()), !dbg !2149
  %0 = load i32, i32* @reload_completed, align 4, !dbg !2150
  %tobool = icmp ne i32 %0, 0, !dbg !2150
  br i1 %tobool, label %if.then, label %if.end, !dbg !2152

if.then:                                          ; preds = %entry
  %1 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2153
  %call = call %struct.rtx_def* @make_insn_raw(%struct.rtx_def* %1), !dbg !2155
  call void @extract_insn(%struct.rtx_def* %call), !dbg !2156
  %call1 = call i32 @constrain_operands(i32 1), !dbg !2157
  %2 = load i32, i32* @which_alternative, align 4, !dbg !2158
  %cmp = icmp sge i32 %2, 0, !dbg !2159
  %conv = zext i1 %cmp to i32, !dbg !2159
  store i32 %conv, i32* %retval, align 4, !dbg !2160
  br label %return, !dbg !2160

if.end:                                           ; preds = %entry
  %3 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2161
  %call2 = call i32 @asm_noperands(%struct.rtx_def* %3), !dbg !2162
  store i32 %call2, i32* %noperands, align 4, !dbg !2163
  %4 = load i32, i32* %noperands, align 4, !dbg !2164
  %cmp3 = icmp slt i32 %4, 0, !dbg !2166
  br i1 %cmp3, label %if.then5, label %if.end6, !dbg !2167

if.then5:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !2168
  br label %return, !dbg !2168

if.end6:                                          ; preds = %if.end
  %5 = load i32, i32* %noperands, align 4, !dbg !2169
  %cmp7 = icmp eq i32 %5, 0, !dbg !2171
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !2172

if.then9:                                         ; preds = %if.end6
  store i32 1, i32* %retval, align 4, !dbg !2173
  br label %return, !dbg !2173

if.end10:                                         ; preds = %if.end6
  %6 = load i32, i32* %noperands, align 4, !dbg !2174
  %conv11 = sext i32 %6 to i64, !dbg !2174
  %mul = mul i64 8, %conv11, !dbg !2174
  %7 = alloca i8, i64 %mul, align 16, !dbg !2174
  %8 = bitcast i8* %7 to %struct.rtx_def**, !dbg !2174
  store %struct.rtx_def** %8, %struct.rtx_def*** %operands, align 8, !dbg !2175
  %9 = load i32, i32* %noperands, align 4, !dbg !2176
  %conv12 = sext i32 %9 to i64, !dbg !2176
  %mul13 = mul i64 8, %conv12, !dbg !2176
  %10 = alloca i8, i64 %mul13, align 16, !dbg !2176
  %11 = bitcast i8* %10 to i8**, !dbg !2176
  store i8** %11, i8*** %constraints, align 8, !dbg !2177
  %12 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !2178
  %13 = load %struct.rtx_def**, %struct.rtx_def*** %operands, align 8, !dbg !2179
  %14 = load i8**, i8*** %constraints, align 8, !dbg !2180
  %call14 = call i8* @decode_asm_operands(%struct.rtx_def* %12, %struct.rtx_def** %13, %struct.rtx_def*** null, i8** %14, i32* null, i32* null), !dbg !2181
  store i32 0, i32* %i, align 4, !dbg !2182
  br label %for.cond, !dbg !2184

for.cond:                                         ; preds = %for.inc, %if.end10
  %15 = load i32, i32* %i, align 4, !dbg !2185
  %16 = load i32, i32* %noperands, align 4, !dbg !2187
  %cmp15 = icmp slt i32 %15, %16, !dbg !2188
  br i1 %cmp15, label %for.body, label %for.end, !dbg !2189

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8** %c, metadata !2190, metadata !DIExpression()), !dbg !2192
  %17 = load i8**, i8*** %constraints, align 8, !dbg !2193
  %18 = load i32, i32* %i, align 4, !dbg !2194
  %idxprom = sext i32 %18 to i64, !dbg !2193
  %arrayidx = getelementptr inbounds i8*, i8** %17, i64 %idxprom, !dbg !2193
  %19 = load i8*, i8** %arrayidx, align 8, !dbg !2193
  store i8* %19, i8** %c, align 8, !dbg !2192
  %20 = load i8*, i8** %c, align 8, !dbg !2195
  %arrayidx17 = getelementptr inbounds i8, i8* %20, i64 0, !dbg !2195
  %21 = load i8, i8* %arrayidx17, align 1, !dbg !2195
  %conv18 = sext i8 %21 to i32, !dbg !2195
  %cmp19 = icmp eq i32 %conv18, 37, !dbg !2197
  br i1 %cmp19, label %if.then21, label %if.end22, !dbg !2198

if.then21:                                        ; preds = %for.body
  %22 = load i8*, i8** %c, align 8, !dbg !2199
  %incdec.ptr = getelementptr inbounds i8, i8* %22, i32 1, !dbg !2199
  store i8* %incdec.ptr, i8** %c, align 8, !dbg !2199
  br label %if.end22, !dbg !2200

if.end22:                                         ; preds = %if.then21, %for.body
  %23 = load %struct.rtx_def**, %struct.rtx_def*** %operands, align 8, !dbg !2201
  %24 = load i32, i32* %i, align 4, !dbg !2203
  %idxprom23 = sext i32 %24 to i64, !dbg !2201
  %arrayidx24 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %23, i64 %idxprom23, !dbg !2201
  %25 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx24, align 8, !dbg !2201
  %26 = load i8*, i8** %c, align 8, !dbg !2204
  %27 = load i8**, i8*** %constraints, align 8, !dbg !2205
  %call25 = call i32 @asm_operand_ok(%struct.rtx_def* %25, i8* %26, i8** %27), !dbg !2206
  %tobool26 = icmp ne i32 %call25, 0, !dbg !2206
  br i1 %tobool26, label %if.end28, label %if.then27, !dbg !2207

if.then27:                                        ; preds = %if.end22
  store i32 0, i32* %retval, align 4, !dbg !2208
  br label %return, !dbg !2208

if.end28:                                         ; preds = %if.end22
  br label %for.inc, !dbg !2209

for.inc:                                          ; preds = %if.end28
  %28 = load i32, i32* %i, align 4, !dbg !2210
  %inc = add nsw i32 %28, 1, !dbg !2210
  store i32 %inc, i32* %i, align 4, !dbg !2210
  br label %for.cond, !dbg !2211, !llvm.loop !2212

for.end:                                          ; preds = %for.cond
  store i32 1, i32* %retval, align 4, !dbg !2214
  br label %return, !dbg !2214

return:                                           ; preds = %for.end, %if.then27, %if.then9, %if.then5, %if.then
  %29 = load i32, i32* %retval, align 4, !dbg !2215
  ret i32 %29, !dbg !2215
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline nounwind uwtable
define dso_local void @extract_insn(%struct.rtx_def* %insn) #0 !dbg !2216 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  %i = alloca i32, align 4
  %icode = alloca i32, align 4
  %noperands = alloca i32, align 4
  %body = alloca %struct.rtx_def*, align 8
  %p = alloca i8*, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !2219, metadata !DIExpression()), !dbg !2220
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2221, metadata !DIExpression()), !dbg !2222
  call void @llvm.dbg.declare(metadata i32* %icode, metadata !2223, metadata !DIExpression()), !dbg !2224
  call void @llvm.dbg.declare(metadata i32* %noperands, metadata !2225, metadata !DIExpression()), !dbg !2226
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %body, metadata !2227, metadata !DIExpression()), !dbg !2228
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !2229
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i32 0, i32 1, !dbg !2229
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !2229
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 5, !dbg !2229
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !2229
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !2229
  store %struct.rtx_def* %1, %struct.rtx_def** %body, align 8, !dbg !2228
  store i8 0, i8* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 7), align 2, !dbg !2230
  store i8 0, i8* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 9), align 8, !dbg !2231
  store i8 0, i8* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 8), align 1, !dbg !2232
  %2 = load %struct.rtx_def*, %struct.rtx_def** %body, align 8, !dbg !2233
  %3 = bitcast %struct.rtx_def* %2 to i32*, !dbg !2233
  %bf.load = load i32, i32* %3, align 8, !dbg !2233
  %bf.clear = and i32 %bf.load, 65535, !dbg !2233
  switch i32 %bf.clear, label %sw.default [
    i32 24, label %sw.bb
    i32 25, label %sw.bb
    i32 16, label %sw.bb
    i32 20, label %sw.bb
    i32 21, label %sw.bb
    i32 138, label %sw.bb
    i32 23, label %sw.bb1
    i32 15, label %sw.bb8
    i32 17, label %sw.bb40
  ], !dbg !2234

sw.bb:                                            ; preds = %entry, %entry, %entry, %entry, %entry, %entry
  br label %return, !dbg !2235

sw.bb1:                                           ; preds = %entry
  %4 = load %struct.rtx_def*, %struct.rtx_def** %body, align 8, !dbg !2237
  %u2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i32 0, i32 1, !dbg !2237
  %fld3 = bitcast %union.u* %u2 to [1 x %union.rtunion_def]*, !dbg !2237
  %arrayidx4 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3, i64 0, i64 1, !dbg !2237
  %rt_rtx5 = bitcast %union.rtunion_def* %arrayidx4 to %struct.rtx_def**, !dbg !2237
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx5, align 8, !dbg !2237
  %6 = bitcast %struct.rtx_def* %5 to i32*, !dbg !2237
  %bf.load6 = load i32, i32* %6, align 8, !dbg !2237
  %bf.clear7 = and i32 %bf.load6, 65535, !dbg !2237
  %cmp = icmp eq i32 %bf.clear7, 17, !dbg !2239
  br i1 %cmp, label %if.then, label %if.else, !dbg !2240

if.then:                                          ; preds = %sw.bb1
  br label %asm_insn, !dbg !2241

if.else:                                          ; preds = %sw.bb1
  br label %normal_insn, !dbg !2242

sw.bb8:                                           ; preds = %entry
  %7 = load %struct.rtx_def*, %struct.rtx_def** %body, align 8, !dbg !2243
  %u9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i32 0, i32 1, !dbg !2243
  %fld10 = bitcast %union.u* %u9 to [1 x %union.rtunion_def]*, !dbg !2243
  %arrayidx11 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld10, i64 0, i64 0, !dbg !2243
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx11 to %struct.rtvec_def**, !dbg !2243
  %8 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !2243
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %8, i32 0, i32 1, !dbg !2243
  %arrayidx12 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i64 0, i64 0, !dbg !2243
  %9 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx12, align 8, !dbg !2243
  %10 = bitcast %struct.rtx_def* %9 to i32*, !dbg !2243
  %bf.load13 = load i32, i32* %10, align 8, !dbg !2243
  %bf.clear14 = and i32 %bf.load13, 65535, !dbg !2243
  %cmp15 = icmp eq i32 %bf.clear14, 23, !dbg !2245
  br i1 %cmp15, label %land.lhs.true, label %lor.lhs.false, !dbg !2246

land.lhs.true:                                    ; preds = %sw.bb8
  %11 = load %struct.rtx_def*, %struct.rtx_def** %body, align 8, !dbg !2247
  %u16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i32 0, i32 1, !dbg !2247
  %fld17 = bitcast %union.u* %u16 to [1 x %union.rtunion_def]*, !dbg !2247
  %arrayidx18 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld17, i64 0, i64 0, !dbg !2247
  %rt_rtvec19 = bitcast %union.rtunion_def* %arrayidx18 to %struct.rtvec_def**, !dbg !2247
  %12 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec19, align 8, !dbg !2247
  %elem20 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %12, i32 0, i32 1, !dbg !2247
  %arrayidx21 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem20, i64 0, i64 0, !dbg !2247
  %13 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx21, align 8, !dbg !2247
  %u22 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %13, i32 0, i32 1, !dbg !2247
  %fld23 = bitcast %union.u* %u22 to [1 x %union.rtunion_def]*, !dbg !2247
  %arrayidx24 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld23, i64 0, i64 1, !dbg !2247
  %rt_rtx25 = bitcast %union.rtunion_def* %arrayidx24 to %struct.rtx_def**, !dbg !2247
  %14 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx25, align 8, !dbg !2247
  %15 = bitcast %struct.rtx_def* %14 to i32*, !dbg !2247
  %bf.load26 = load i32, i32* %15, align 8, !dbg !2247
  %bf.clear27 = and i32 %bf.load26, 65535, !dbg !2247
  %cmp28 = icmp eq i32 %bf.clear27, 17, !dbg !2248
  br i1 %cmp28, label %if.then38, label %lor.lhs.false, !dbg !2249

lor.lhs.false:                                    ; preds = %land.lhs.true, %sw.bb8
  %16 = load %struct.rtx_def*, %struct.rtx_def** %body, align 8, !dbg !2250
  %u29 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %16, i32 0, i32 1, !dbg !2250
  %fld30 = bitcast %union.u* %u29 to [1 x %union.rtunion_def]*, !dbg !2250
  %arrayidx31 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld30, i64 0, i64 0, !dbg !2250
  %rt_rtvec32 = bitcast %union.rtunion_def* %arrayidx31 to %struct.rtvec_def**, !dbg !2250
  %17 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec32, align 8, !dbg !2250
  %elem33 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %17, i32 0, i32 1, !dbg !2250
  %arrayidx34 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem33, i64 0, i64 0, !dbg !2250
  %18 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx34, align 8, !dbg !2250
  %19 = bitcast %struct.rtx_def* %18 to i32*, !dbg !2250
  %bf.load35 = load i32, i32* %19, align 8, !dbg !2250
  %bf.clear36 = and i32 %bf.load35, 65535, !dbg !2250
  %cmp37 = icmp eq i32 %bf.clear36, 17, !dbg !2251
  br i1 %cmp37, label %if.then38, label %if.else39, !dbg !2252

if.then38:                                        ; preds = %lor.lhs.false, %land.lhs.true
  br label %asm_insn, !dbg !2253

if.else39:                                        ; preds = %lor.lhs.false
  br label %normal_insn, !dbg !2254

sw.bb40:                                          ; preds = %entry
  br label %asm_insn, !dbg !2255

asm_insn:                                         ; preds = %sw.bb40, %if.then38, %if.then
  call void @llvm.dbg.label(metadata !2256), !dbg !2257
  %20 = load %struct.rtx_def*, %struct.rtx_def** %body, align 8, !dbg !2258
  %call = call i32 @asm_noperands(%struct.rtx_def* %20), !dbg !2259
  store i32 %call, i32* %noperands, align 4, !dbg !2260
  %conv = trunc i32 %call to i8, !dbg !2261
  store i8 %conv, i8* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 7), align 2, !dbg !2262
  %21 = load i32, i32* %noperands, align 4, !dbg !2263
  %cmp41 = icmp sge i32 %21, 0, !dbg !2265
  br i1 %cmp41, label %if.then43, label %if.end55, !dbg !2266

if.then43:                                        ; preds = %asm_insn
  %22 = load i32, i32* %noperands, align 4, !dbg !2267
  %cmp44 = icmp sle i32 %22, 30, !dbg !2267
  br i1 %cmp44, label %cond.false, label %cond.true, !dbg !2267

cond.true:                                        ; preds = %if.then43
  call void @fancy_abort(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i32 2078, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !2267
  br label %cond.end, !dbg !2267

cond.false:                                       ; preds = %if.then43
  br label %cond.end, !dbg !2267

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !2267
  %23 = load %struct.rtx_def*, %struct.rtx_def** %body, align 8, !dbg !2269
  %call46 = call i8* @decode_asm_operands(%struct.rtx_def* %23, %struct.rtx_def** getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0, i64 0), %struct.rtx_def*** getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 1, i64 0), i8** getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 2, i64 0), i32* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 3, i64 0), i32* null), !dbg !2270
  %24 = load i32, i32* %noperands, align 4, !dbg !2271
  %cmp47 = icmp sgt i32 %24, 0, !dbg !2273
  br i1 %cmp47, label %if.then49, label %if.end, !dbg !2274

if.then49:                                        ; preds = %cond.end
  call void @llvm.dbg.declare(metadata i8** %p, metadata !2275, metadata !DIExpression()), !dbg !2277
  %25 = load i8*, i8** getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 2, i64 0), align 8, !dbg !2278
  store i8* %25, i8** %p, align 8, !dbg !2277
  store i8 1, i8* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 9), align 8, !dbg !2279
  br label %while.cond, !dbg !2280

while.cond:                                       ; preds = %while.body, %if.then49
  %26 = load i8*, i8** %p, align 8, !dbg !2281
  %27 = load i8, i8* %26, align 1, !dbg !2282
  %tobool = icmp ne i8 %27, 0, !dbg !2280
  br i1 %tobool, label %while.body, label %while.end, !dbg !2280

while.body:                                       ; preds = %while.cond
  %28 = load i8*, i8** %p, align 8, !dbg !2283
  %incdec.ptr = getelementptr inbounds i8, i8* %28, i32 1, !dbg !2283
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !2283
  %29 = load i8, i8* %28, align 1, !dbg !2284
  %conv50 = sext i8 %29 to i32, !dbg !2284
  %cmp51 = icmp eq i32 %conv50, 44, !dbg !2285
  %conv52 = zext i1 %cmp51 to i32, !dbg !2285
  %30 = load i8, i8* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 9), align 8, !dbg !2286
  %conv53 = sext i8 %30 to i32, !dbg !2286
  %add = add nsw i32 %conv53, %conv52, !dbg !2286
  %conv54 = trunc i32 %add to i8, !dbg !2286
  store i8 %conv54, i8* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 9), align 8, !dbg !2286
  br label %while.cond, !dbg !2280, !llvm.loop !2287

while.end:                                        ; preds = %while.cond
  br label %if.end, !dbg !2289

if.end:                                           ; preds = %while.end, %cond.end
  br label %sw.epilog, !dbg !2290

if.end55:                                         ; preds = %asm_insn
  %31 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !2291
  call void @_fatal_insn_not_found(%struct.rtx_def* %31, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i32 2094, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !2291
  br label %sw.default, !dbg !2291

sw.default:                                       ; preds = %entry, %if.end55
  br label %normal_insn, !dbg !2291

normal_insn:                                      ; preds = %sw.default, %if.else39, %if.else
  call void @llvm.dbg.label(metadata !2292), !dbg !2293
  %32 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !2294
  %call56 = call i32 @recog_memoized(%struct.rtx_def* %32), !dbg !2295
  store i32 %call56, i32* %icode, align 4, !dbg !2296
  %33 = load i32, i32* %icode, align 4, !dbg !2297
  %cmp57 = icmp slt i32 %33, 0, !dbg !2299
  br i1 %cmp57, label %if.then59, label %if.end60, !dbg !2300

if.then59:                                        ; preds = %normal_insn
  %34 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !2301
  call void @_fatal_insn_not_found(%struct.rtx_def* %34, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i32 2103, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !2301
  br label %if.end60, !dbg !2301

if.end60:                                         ; preds = %if.then59, %normal_insn
  %35 = load i32, i32* %icode, align 4, !dbg !2302
  %idxprom = sext i32 %35 to i64, !dbg !2303
  %arrayidx61 = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom, !dbg !2303
  %n_operands = getelementptr inbounds %struct.insn_data, %struct.insn_data* %arrayidx61, i32 0, i32 4, !dbg !2304
  %36 = load i8, i8* %n_operands, align 8, !dbg !2304
  %conv62 = sext i8 %36 to i32, !dbg !2303
  store i32 %conv62, i32* %noperands, align 4, !dbg !2305
  %conv63 = trunc i32 %conv62 to i8, !dbg !2306
  store i8 %conv63, i8* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 7), align 2, !dbg !2307
  %37 = load i32, i32* %icode, align 4, !dbg !2308
  %idxprom64 = sext i32 %37 to i64, !dbg !2309
  %arrayidx65 = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom64, !dbg !2309
  %n_alternatives = getelementptr inbounds %struct.insn_data, %struct.insn_data* %arrayidx65, i32 0, i32 6, !dbg !2310
  %38 = load i8, i8* %n_alternatives, align 2, !dbg !2310
  store i8 %38, i8* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 9), align 8, !dbg !2311
  %39 = load i32, i32* %icode, align 4, !dbg !2312
  %idxprom66 = sext i32 %39 to i64, !dbg !2313
  %arrayidx67 = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom66, !dbg !2313
  %n_dups = getelementptr inbounds %struct.insn_data, %struct.insn_data* %arrayidx67, i32 0, i32 5, !dbg !2314
  %40 = load i8, i8* %n_dups, align 1, !dbg !2314
  store i8 %40, i8* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 8), align 1, !dbg !2315
  %41 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !2316
  call void @insn_extract(%struct.rtx_def* %41), !dbg !2317
  store i32 0, i32* %i, align 4, !dbg !2318
  br label %for.cond, !dbg !2320

for.cond:                                         ; preds = %for.inc, %if.end60
  %42 = load i32, i32* %i, align 4, !dbg !2321
  %43 = load i32, i32* %noperands, align 4, !dbg !2323
  %cmp68 = icmp slt i32 %42, %43, !dbg !2324
  br i1 %cmp68, label %for.body, label %for.end, !dbg !2325

for.body:                                         ; preds = %for.cond
  %44 = load i32, i32* %icode, align 4, !dbg !2326
  %idxprom70 = sext i32 %44 to i64, !dbg !2328
  %arrayidx71 = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom70, !dbg !2328
  %operand = getelementptr inbounds %struct.insn_data, %struct.insn_data* %arrayidx71, i32 0, i32 3, !dbg !2329
  %45 = load %struct.insn_operand_data*, %struct.insn_operand_data** %operand, align 8, !dbg !2329
  %46 = load i32, i32* %i, align 4, !dbg !2330
  %idxprom72 = sext i32 %46 to i64, !dbg !2328
  %arrayidx73 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %45, i64 %idxprom72, !dbg !2328
  %constraint = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %arrayidx73, i32 0, i32 1, !dbg !2331
  %47 = load i8*, i8** %constraint, align 8, !dbg !2331
  %48 = load i32, i32* %i, align 4, !dbg !2332
  %idxprom74 = sext i32 %48 to i64, !dbg !2333
  %arrayidx75 = getelementptr inbounds [30 x i8*], [30 x i8*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 2), i64 0, i64 %idxprom74, !dbg !2333
  store i8* %47, i8** %arrayidx75, align 8, !dbg !2334
  %49 = load i32, i32* %icode, align 4, !dbg !2335
  %idxprom76 = sext i32 %49 to i64, !dbg !2336
  %arrayidx77 = getelementptr inbounds [0 x %struct.insn_data], [0 x %struct.insn_data]* @insn_data, i64 0, i64 %idxprom76, !dbg !2336
  %operand78 = getelementptr inbounds %struct.insn_data, %struct.insn_data* %arrayidx77, i32 0, i32 3, !dbg !2337
  %50 = load %struct.insn_operand_data*, %struct.insn_operand_data** %operand78, align 8, !dbg !2337
  %51 = load i32, i32* %i, align 4, !dbg !2338
  %idxprom79 = sext i32 %51 to i64, !dbg !2336
  %arrayidx80 = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %50, i64 %idxprom79, !dbg !2336
  %mode = getelementptr inbounds %struct.insn_operand_data, %struct.insn_operand_data* %arrayidx80, i32 0, i32 2, !dbg !2339
  %bf.load81 = load i16, i16* %mode, align 8, !dbg !2339
  %bf.cast = zext i16 %bf.load81 to i32, !dbg !2339
  %52 = load i32, i32* %i, align 4, !dbg !2340
  %idxprom82 = sext i32 %52 to i64, !dbg !2341
  %arrayidx83 = getelementptr inbounds [30 x i32], [30 x i32]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 3), i64 0, i64 %idxprom82, !dbg !2341
  store i32 %bf.cast, i32* %arrayidx83, align 4, !dbg !2342
  %53 = load i32, i32* %i, align 4, !dbg !2343
  %idxprom84 = sext i32 %53 to i64, !dbg !2345
  %arrayidx85 = getelementptr inbounds [30 x i32], [30 x i32]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 3), i64 0, i64 %idxprom84, !dbg !2345
  %54 = load i32, i32* %arrayidx85, align 4, !dbg !2345
  %cmp86 = icmp eq i32 %54, 0, !dbg !2346
  br i1 %cmp86, label %if.then88, label %if.end95, !dbg !2347

if.then88:                                        ; preds = %for.body
  %55 = load i32, i32* %i, align 4, !dbg !2348
  %idxprom89 = sext i32 %55 to i64, !dbg !2348
  %arrayidx90 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i64 0, i64 %idxprom89, !dbg !2348
  %56 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx90, align 8, !dbg !2348
  %57 = bitcast %struct.rtx_def* %56 to i32*, !dbg !2348
  %bf.load91 = load i32, i32* %57, align 8, !dbg !2348
  %bf.lshr = lshr i32 %bf.load91, 16, !dbg !2348
  %bf.clear92 = and i32 %bf.lshr, 255, !dbg !2348
  %58 = load i32, i32* %i, align 4, !dbg !2349
  %idxprom93 = sext i32 %58 to i64, !dbg !2350
  %arrayidx94 = getelementptr inbounds [30 x i32], [30 x i32]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 3), i64 0, i64 %idxprom93, !dbg !2350
  store i32 %bf.clear92, i32* %arrayidx94, align 4, !dbg !2351
  br label %if.end95, !dbg !2350

if.end95:                                         ; preds = %if.then88, %for.body
  br label %for.inc, !dbg !2352

for.inc:                                          ; preds = %if.end95
  %59 = load i32, i32* %i, align 4, !dbg !2353
  %inc = add nsw i32 %59, 1, !dbg !2353
  store i32 %inc, i32* %i, align 4, !dbg !2353
  br label %for.cond, !dbg !2354, !llvm.loop !2355

for.end:                                          ; preds = %for.cond
  br label %sw.epilog, !dbg !2357

sw.epilog:                                        ; preds = %for.end, %if.end
  store i32 0, i32* %i, align 4, !dbg !2358
  br label %for.cond96, !dbg !2360

for.cond96:                                       ; preds = %for.inc119, %sw.epilog
  %60 = load i32, i32* %i, align 4, !dbg !2361
  %61 = load i32, i32* %noperands, align 4, !dbg !2363
  %cmp97 = icmp slt i32 %60, %61, !dbg !2364
  br i1 %cmp97, label %for.body99, label %for.end121, !dbg !2365

for.body99:                                       ; preds = %for.cond96
  %62 = load i32, i32* %i, align 4, !dbg !2366
  %idxprom100 = sext i32 %62 to i64, !dbg !2367
  %arrayidx101 = getelementptr inbounds [30 x i8*], [30 x i8*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 2), i64 0, i64 %idxprom100, !dbg !2367
  %63 = load i8*, i8** %arrayidx101, align 8, !dbg !2367
  %arrayidx102 = getelementptr inbounds i8, i8* %63, i64 0, !dbg !2367
  %64 = load i8, i8* %arrayidx102, align 1, !dbg !2367
  %conv103 = sext i8 %64 to i32, !dbg !2367
  %cmp104 = icmp eq i32 %conv103, 61, !dbg !2368
  br i1 %cmp104, label %cond.true106, label %cond.false107, !dbg !2367

cond.true106:                                     ; preds = %for.body99
  br label %cond.end115, !dbg !2367

cond.false107:                                    ; preds = %for.body99
  %65 = load i32, i32* %i, align 4, !dbg !2369
  %idxprom108 = sext i32 %65 to i64, !dbg !2370
  %arrayidx109 = getelementptr inbounds [30 x i8*], [30 x i8*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 2), i64 0, i64 %idxprom108, !dbg !2370
  %66 = load i8*, i8** %arrayidx109, align 8, !dbg !2370
  %arrayidx110 = getelementptr inbounds i8, i8* %66, i64 0, !dbg !2370
  %67 = load i8, i8* %arrayidx110, align 1, !dbg !2370
  %conv111 = sext i8 %67 to i32, !dbg !2370
  %cmp112 = icmp eq i32 %conv111, 43, !dbg !2371
  %68 = zext i1 %cmp112 to i64, !dbg !2370
  %cond114 = select i1 %cmp112, i32 2, i32 0, !dbg !2370
  br label %cond.end115, !dbg !2367

cond.end115:                                      ; preds = %cond.false107, %cond.true106
  %cond116 = phi i32 [ 1, %cond.true106 ], [ %cond114, %cond.false107 ], !dbg !2367
  %69 = load i32, i32* %i, align 4, !dbg !2372
  %idxprom117 = sext i32 %69 to i64, !dbg !2373
  %arrayidx118 = getelementptr inbounds [30 x i32], [30 x i32]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 4), i64 0, i64 %idxprom117, !dbg !2373
  store i32 %cond116, i32* %arrayidx118, align 4, !dbg !2374
  br label %for.inc119, !dbg !2373

for.inc119:                                       ; preds = %cond.end115
  %70 = load i32, i32* %i, align 4, !dbg !2375
  %inc120 = add nsw i32 %70, 1, !dbg !2375
  store i32 %inc120, i32* %i, align 4, !dbg !2375
  br label %for.cond96, !dbg !2376, !llvm.loop !2377

for.end121:                                       ; preds = %for.cond96
  %71 = load i8, i8* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 9), align 8, !dbg !2379
  %conv122 = sext i8 %71 to i32, !dbg !2379
  %cmp123 = icmp sle i32 %conv122, 30, !dbg !2379
  br i1 %cmp123, label %cond.false126, label %cond.true125, !dbg !2379

cond.true125:                                     ; preds = %for.end121
  call void @fancy_abort(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i32 2126, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !2379
  br label %cond.end127, !dbg !2379

cond.false126:                                    ; preds = %for.end121
  br label %cond.end127, !dbg !2379

cond.end127:                                      ; preds = %cond.false126, %cond.true125
  %cond128 = phi i32 [ 0, %cond.true125 ], [ 0, %cond.false126 ], !dbg !2379
  %72 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !2380
  %u129 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %72, i32 0, i32 1, !dbg !2380
  %fld130 = bitcast %union.u* %u129 to [1 x %union.rtunion_def]*, !dbg !2380
  %arrayidx131 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld130, i64 0, i64 6, !dbg !2380
  %rt_int = bitcast %union.rtunion_def* %arrayidx131 to i32*, !dbg !2380
  %73 = load i32, i32* %rt_int, align 8, !dbg !2380
  %cmp132 = icmp slt i32 %73, 0, !dbg !2382
  br i1 %cmp132, label %if.then134, label %if.else145, !dbg !2383

if.then134:                                       ; preds = %cond.end127
  store i32 0, i32* %i, align 4, !dbg !2384
  br label %for.cond135, !dbg !2386

for.cond135:                                      ; preds = %for.inc142, %if.then134
  %74 = load i32, i32* %i, align 4, !dbg !2387
  %75 = load i8, i8* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 9), align 8, !dbg !2389
  %conv136 = sext i8 %75 to i32, !dbg !2390
  %cmp137 = icmp slt i32 %74, %conv136, !dbg !2391
  br i1 %cmp137, label %for.body139, label %for.end144, !dbg !2392

for.body139:                                      ; preds = %for.cond135
  %76 = load i32, i32* %i, align 4, !dbg !2393
  %idxprom140 = sext i32 %76 to i64, !dbg !2394
  %arrayidx141 = getelementptr inbounds [30 x i8], [30 x i8]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 10), i64 0, i64 %idxprom140, !dbg !2394
  store i8 1, i8* %arrayidx141, align 1, !dbg !2395
  br label %for.inc142, !dbg !2394

for.inc142:                                       ; preds = %for.body139
  %77 = load i32, i32* %i, align 4, !dbg !2396
  %inc143 = add nsw i32 %77, 1, !dbg !2396
  store i32 %inc143, i32* %i, align 4, !dbg !2396
  br label %for.cond135, !dbg !2397, !llvm.loop !2398

for.end144:                                       ; preds = %for.cond135
  br label %if.end157, !dbg !2399

if.else145:                                       ; preds = %cond.end127
  %78 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !2400
  store %struct.rtx_def* %78, %struct.rtx_def** getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 11), align 8, !dbg !2402
  store i32 0, i32* %i, align 4, !dbg !2403
  br label %for.cond146, !dbg !2405

for.cond146:                                      ; preds = %for.inc154, %if.else145
  %79 = load i32, i32* %i, align 4, !dbg !2406
  %80 = load i8, i8* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 9), align 8, !dbg !2408
  %conv147 = sext i8 %80 to i32, !dbg !2409
  %cmp148 = icmp slt i32 %79, %conv147, !dbg !2410
  br i1 %cmp148, label %for.body150, label %for.end156, !dbg !2411

for.body150:                                      ; preds = %for.cond146
  %81 = load i32, i32* %i, align 4, !dbg !2412
  store i32 %81, i32* @which_alternative, align 4, !dbg !2414
  %82 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !2415
  %call151 = call zeroext i8 @get_attr_enabled(%struct.rtx_def* %82), !dbg !2416
  %83 = load i32, i32* %i, align 4, !dbg !2417
  %idxprom152 = sext i32 %83 to i64, !dbg !2418
  %arrayidx153 = getelementptr inbounds [30 x i8], [30 x i8]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 10), i64 0, i64 %idxprom152, !dbg !2418
  store i8 %call151, i8* %arrayidx153, align 1, !dbg !2419
  br label %for.inc154, !dbg !2420

for.inc154:                                       ; preds = %for.body150
  %84 = load i32, i32* %i, align 4, !dbg !2421
  %inc155 = add nsw i32 %84, 1, !dbg !2421
  store i32 %inc155, i32* %i, align 4, !dbg !2421
  br label %for.cond146, !dbg !2422, !llvm.loop !2423

for.end156:                                       ; preds = %for.cond146
  br label %if.end157

if.end157:                                        ; preds = %for.end156, %for.end144
  store %struct.rtx_def* null, %struct.rtx_def** getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 11), align 8, !dbg !2425
  store i32 -1, i32* @which_alternative, align 4, !dbg !2426
  br label %return, !dbg !2427

return:                                           ; preds = %if.end157, %sw.bb
  ret void, !dbg !2427
}

declare dso_local %struct.rtx_def* @make_insn_raw(%struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @constrain_operands(i32 %strict) #0 !dbg !2428 {
entry:
  %retval = alloca i32, align 4
  %strict.addr = alloca i32, align 4
  %constraints = alloca [30 x i8*], align 16
  %matching_operands = alloca [30 x i32], align 16
  %earlyclobber = alloca [30 x i32], align 16
  %c = alloca i32, align 4
  %funny_match = alloca [30 x %struct.funny_match], align 16
  %funny_match_index = alloca i32, align 4
  %seen_earlyclobber_at = alloca i32, align 4
  %opno = alloca i32, align 4
  %lose = alloca i32, align 4
  %i = alloca i32, align 4
  %op = alloca %struct.rtx_def*, align 8
  %mode = alloca i32, align 4
  %p = alloca i8*, align 8
  %offset = alloca i32, align 4
  %win = alloca i32, align 4
  %val = alloca i32, align 4
  %len = alloca i32, align 4
  %end = alloca i8*, align 8
  %match = alloca i32, align 4
  %op1 = alloca %struct.rtx_def*, align 8
  %op2 = alloca %struct.rtx_def*, align 8
  %cl = alloca i32, align 4
  %opno593 = alloca i32, align 4
  %eopno = alloca i32, align 4
  store i32 %strict, i32* %strict.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %strict.addr, metadata !2431, metadata !DIExpression()), !dbg !2432
  call void @llvm.dbg.declare(metadata [30 x i8*]* %constraints, metadata !2433, metadata !DIExpression()), !dbg !2434
  call void @llvm.dbg.declare(metadata [30 x i32]* %matching_operands, metadata !2435, metadata !DIExpression()), !dbg !2437
  call void @llvm.dbg.declare(metadata [30 x i32]* %earlyclobber, metadata !2438, metadata !DIExpression()), !dbg !2439
  call void @llvm.dbg.declare(metadata i32* %c, metadata !2440, metadata !DIExpression()), !dbg !2441
  call void @llvm.dbg.declare(metadata [30 x %struct.funny_match]* %funny_match, metadata !2442, metadata !DIExpression()), !dbg !2448
  call void @llvm.dbg.declare(metadata i32* %funny_match_index, metadata !2449, metadata !DIExpression()), !dbg !2450
  store i32 0, i32* @which_alternative, align 4, !dbg !2451
  %0 = load i8, i8* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 7), align 2, !dbg !2452
  %conv = sext i8 %0 to i32, !dbg !2454
  %cmp = icmp eq i32 %conv, 0, !dbg !2455
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !2456

lor.lhs.false:                                    ; preds = %entry
  %1 = load i8, i8* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 9), align 8, !dbg !2457
  %conv2 = sext i8 %1 to i32, !dbg !2458
  %cmp3 = icmp eq i32 %conv2, 0, !dbg !2459
  br i1 %cmp3, label %if.then, label %if.end, !dbg !2460

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i32 1, i32* %retval, align 4, !dbg !2461
  br label %return, !dbg !2461

if.end:                                           ; preds = %lor.lhs.false
  store i32 0, i32* %c, align 4, !dbg !2462
  br label %for.cond, !dbg !2464

for.cond:                                         ; preds = %for.inc, %if.end
  %2 = load i32, i32* %c, align 4, !dbg !2465
  %3 = load i8, i8* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 7), align 2, !dbg !2467
  %conv5 = sext i8 %3 to i32, !dbg !2468
  %cmp6 = icmp slt i32 %2, %conv5, !dbg !2469
  br i1 %cmp6, label %for.body, label %for.end, !dbg !2470

for.body:                                         ; preds = %for.cond
  %4 = load i32, i32* %c, align 4, !dbg !2471
  %idxprom = sext i32 %4 to i64, !dbg !2473
  %arrayidx = getelementptr inbounds [30 x i8*], [30 x i8*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 2), i64 0, i64 %idxprom, !dbg !2473
  %5 = load i8*, i8** %arrayidx, align 8, !dbg !2473
  %6 = load i32, i32* %c, align 4, !dbg !2474
  %idxprom8 = sext i32 %6 to i64, !dbg !2475
  %arrayidx9 = getelementptr inbounds [30 x i8*], [30 x i8*]* %constraints, i64 0, i64 %idxprom8, !dbg !2475
  store i8* %5, i8** %arrayidx9, align 8, !dbg !2476
  %7 = load i32, i32* %c, align 4, !dbg !2477
  %idxprom10 = sext i32 %7 to i64, !dbg !2478
  %arrayidx11 = getelementptr inbounds [30 x i32], [30 x i32]* %matching_operands, i64 0, i64 %idxprom10, !dbg !2478
  store i32 -1, i32* %arrayidx11, align 4, !dbg !2479
  br label %for.inc, !dbg !2480

for.inc:                                          ; preds = %for.body
  %8 = load i32, i32* %c, align 4, !dbg !2481
  %inc = add nsw i32 %8, 1, !dbg !2481
  store i32 %inc, i32* %c, align 4, !dbg !2481
  br label %for.cond, !dbg !2482, !llvm.loop !2483

for.end:                                          ; preds = %for.cond
  br label %do.body, !dbg !2485

do.body:                                          ; preds = %do.cond687, %for.end
  call void @llvm.dbg.declare(metadata i32* %seen_earlyclobber_at, metadata !2486, metadata !DIExpression()), !dbg !2488
  store i32 -1, i32* %seen_earlyclobber_at, align 4, !dbg !2488
  call void @llvm.dbg.declare(metadata i32* %opno, metadata !2489, metadata !DIExpression()), !dbg !2490
  call void @llvm.dbg.declare(metadata i32* %lose, metadata !2491, metadata !DIExpression()), !dbg !2492
  store i32 0, i32* %lose, align 4, !dbg !2492
  store i32 0, i32* %funny_match_index, align 4, !dbg !2493
  %9 = load i32, i32* @which_alternative, align 4, !dbg !2494
  %idxprom12 = sext i32 %9 to i64, !dbg !2496
  %arrayidx13 = getelementptr inbounds [30 x i8], [30 x i8]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 10), i64 0, i64 %idxprom12, !dbg !2496
  %10 = load i8, i8* %arrayidx13, align 1, !dbg !2496
  %tobool = icmp ne i8 %10, 0, !dbg !2496
  br i1 %tobool, label %if.end28, label %if.then14, !dbg !2497

if.then14:                                        ; preds = %do.body
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2498, metadata !DIExpression()), !dbg !2500
  store i32 0, i32* %i, align 4, !dbg !2501
  br label %for.cond15, !dbg !2503

for.cond15:                                       ; preds = %for.inc24, %if.then14
  %11 = load i32, i32* %i, align 4, !dbg !2504
  %12 = load i8, i8* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 7), align 2, !dbg !2506
  %conv16 = sext i8 %12 to i32, !dbg !2507
  %cmp17 = icmp slt i32 %11, %conv16, !dbg !2508
  br i1 %cmp17, label %for.body19, label %for.end26, !dbg !2509

for.body19:                                       ; preds = %for.cond15
  %13 = load i32, i32* %i, align 4, !dbg !2510
  %idxprom20 = sext i32 %13 to i64, !dbg !2511
  %arrayidx21 = getelementptr inbounds [30 x i8*], [30 x i8*]* %constraints, i64 0, i64 %idxprom20, !dbg !2511
  %14 = load i8*, i8** %arrayidx21, align 8, !dbg !2511
  %call = call i8* @skip_alternative(i8* %14), !dbg !2512
  %15 = load i32, i32* %i, align 4, !dbg !2513
  %idxprom22 = sext i32 %15 to i64, !dbg !2514
  %arrayidx23 = getelementptr inbounds [30 x i8*], [30 x i8*]* %constraints, i64 0, i64 %idxprom22, !dbg !2514
  store i8* %call, i8** %arrayidx23, align 8, !dbg !2515
  br label %for.inc24, !dbg !2514

for.inc24:                                        ; preds = %for.body19
  %16 = load i32, i32* %i, align 4, !dbg !2516
  %inc25 = add nsw i32 %16, 1, !dbg !2516
  store i32 %inc25, i32* %i, align 4, !dbg !2516
  br label %for.cond15, !dbg !2517, !llvm.loop !2518

for.end26:                                        ; preds = %for.cond15
  %17 = load i32, i32* @which_alternative, align 4, !dbg !2520
  %inc27 = add nsw i32 %17, 1, !dbg !2520
  store i32 %inc27, i32* @which_alternative, align 4, !dbg !2520
  br label %do.cond687, !dbg !2521

if.end28:                                         ; preds = %do.body
  store i32 0, i32* %opno, align 4, !dbg !2522
  br label %for.cond29, !dbg !2524

for.cond29:                                       ; preds = %for.inc588, %if.end28
  %18 = load i32, i32* %opno, align 4, !dbg !2525
  %19 = load i8, i8* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 7), align 2, !dbg !2527
  %conv30 = sext i8 %19 to i32, !dbg !2528
  %cmp31 = icmp slt i32 %18, %conv30, !dbg !2529
  br i1 %cmp31, label %for.body33, label %for.end590, !dbg !2530

for.body33:                                       ; preds = %for.cond29
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %op, metadata !2531, metadata !DIExpression()), !dbg !2533
  %20 = load i32, i32* %opno, align 4, !dbg !2534
  %idxprom34 = sext i32 %20 to i64, !dbg !2535
  %arrayidx35 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i64 0, i64 %idxprom34, !dbg !2535
  %21 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx35, align 8, !dbg !2535
  store %struct.rtx_def* %21, %struct.rtx_def** %op, align 8, !dbg !2533
  call void @llvm.dbg.declare(metadata i32* %mode, metadata !2536, metadata !DIExpression()), !dbg !2537
  %22 = load %struct.rtx_def*, %struct.rtx_def** %op, align 8, !dbg !2538
  %23 = bitcast %struct.rtx_def* %22 to i32*, !dbg !2538
  %bf.load = load i32, i32* %23, align 8, !dbg !2538
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !2538
  %bf.clear = and i32 %bf.lshr, 255, !dbg !2538
  store i32 %bf.clear, i32* %mode, align 4, !dbg !2537
  call void @llvm.dbg.declare(metadata i8** %p, metadata !2539, metadata !DIExpression()), !dbg !2540
  %24 = load i32, i32* %opno, align 4, !dbg !2541
  %idxprom36 = sext i32 %24 to i64, !dbg !2542
  %arrayidx37 = getelementptr inbounds [30 x i8*], [30 x i8*]* %constraints, i64 0, i64 %idxprom36, !dbg !2542
  %25 = load i8*, i8** %arrayidx37, align 8, !dbg !2542
  store i8* %25, i8** %p, align 8, !dbg !2540
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !2543, metadata !DIExpression()), !dbg !2544
  store i32 0, i32* %offset, align 4, !dbg !2544
  call void @llvm.dbg.declare(metadata i32* %win, metadata !2545, metadata !DIExpression()), !dbg !2546
  store i32 0, i32* %win, align 4, !dbg !2546
  call void @llvm.dbg.declare(metadata i32* %val, metadata !2547, metadata !DIExpression()), !dbg !2548
  call void @llvm.dbg.declare(metadata i32* %len, metadata !2549, metadata !DIExpression()), !dbg !2550
  %26 = load i32, i32* %opno, align 4, !dbg !2551
  %idxprom38 = sext i32 %26 to i64, !dbg !2552
  %arrayidx39 = getelementptr inbounds [30 x i32], [30 x i32]* %earlyclobber, i64 0, i64 %idxprom38, !dbg !2552
  store i32 0, i32* %arrayidx39, align 4, !dbg !2553
  %27 = load %struct.rtx_def*, %struct.rtx_def** %op, align 8, !dbg !2554
  %28 = bitcast %struct.rtx_def* %27 to i32*, !dbg !2554
  %bf.load40 = load i32, i32* %28, align 8, !dbg !2554
  %bf.clear41 = and i32 %bf.load40, 65535, !dbg !2554
  %idxprom42 = sext i32 %bf.clear41 to i64, !dbg !2554
  %arrayidx43 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom42, !dbg !2554
  %29 = load i32, i32* %arrayidx43, align 4, !dbg !2554
  %cmp44 = icmp eq i32 %29, 4, !dbg !2554
  br i1 %cmp44, label %if.then46, label %if.end48, !dbg !2556

if.then46:                                        ; preds = %for.body33
  %30 = load %struct.rtx_def*, %struct.rtx_def** %op, align 8, !dbg !2557
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %30, i32 0, i32 1, !dbg !2557
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !2557
  %arrayidx47 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !2557
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx47 to %struct.rtx_def**, !dbg !2557
  %31 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !2557
  store %struct.rtx_def* %31, %struct.rtx_def** %op, align 8, !dbg !2558
  br label %if.end48, !dbg !2559

if.end48:                                         ; preds = %if.then46, %for.body33
  %32 = load %struct.rtx_def*, %struct.rtx_def** %op, align 8, !dbg !2560
  %33 = bitcast %struct.rtx_def* %32 to i32*, !dbg !2560
  %bf.load49 = load i32, i32* %33, align 8, !dbg !2560
  %bf.clear50 = and i32 %bf.load49, 65535, !dbg !2560
  %cmp51 = icmp eq i32 %bf.clear50, 39, !dbg !2562
  br i1 %cmp51, label %if.then53, label %if.end94, !dbg !2563

if.then53:                                        ; preds = %if.end48
  %34 = load %struct.rtx_def*, %struct.rtx_def** %op, align 8, !dbg !2564
  %u54 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %34, i32 0, i32 1, !dbg !2564
  %fld55 = bitcast %union.u* %u54 to [1 x %union.rtunion_def]*, !dbg !2564
  %arrayidx56 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld55, i64 0, i64 0, !dbg !2564
  %rt_rtx57 = bitcast %union.rtunion_def* %arrayidx56 to %struct.rtx_def**, !dbg !2564
  %35 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx57, align 8, !dbg !2564
  %36 = bitcast %struct.rtx_def* %35 to i32*, !dbg !2564
  %bf.load58 = load i32, i32* %36, align 8, !dbg !2564
  %bf.clear59 = and i32 %bf.load58, 65535, !dbg !2564
  %cmp60 = icmp eq i32 %bf.clear59, 37, !dbg !2564
  br i1 %cmp60, label %land.lhs.true, label %if.end89, !dbg !2567

land.lhs.true:                                    ; preds = %if.then53
  %37 = load %struct.rtx_def*, %struct.rtx_def** %op, align 8, !dbg !2568
  %u62 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %37, i32 0, i32 1, !dbg !2568
  %fld63 = bitcast %union.u* %u62 to [1 x %union.rtunion_def]*, !dbg !2568
  %arrayidx64 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld63, i64 0, i64 0, !dbg !2568
  %rt_rtx65 = bitcast %union.rtunion_def* %arrayidx64 to %struct.rtx_def**, !dbg !2568
  %38 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx65, align 8, !dbg !2568
  %call66 = call i32 @rhs_regno(%struct.rtx_def* %38), !dbg !2568
  %cmp67 = icmp ult i32 %call66, 53, !dbg !2569
  br i1 %cmp67, label %if.then69, label %if.end89, !dbg !2570

if.then69:                                        ; preds = %land.lhs.true
  %39 = load %struct.rtx_def*, %struct.rtx_def** %op, align 8, !dbg !2571
  %u70 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %39, i32 0, i32 1, !dbg !2571
  %fld71 = bitcast %union.u* %u70 to [1 x %union.rtunion_def]*, !dbg !2571
  %arrayidx72 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld71, i64 0, i64 0, !dbg !2571
  %rt_rtx73 = bitcast %union.rtunion_def* %arrayidx72 to %struct.rtx_def**, !dbg !2571
  %40 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx73, align 8, !dbg !2571
  %call74 = call i32 @rhs_regno(%struct.rtx_def* %40), !dbg !2571
  %41 = load %struct.rtx_def*, %struct.rtx_def** %op, align 8, !dbg !2572
  %u75 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %41, i32 0, i32 1, !dbg !2572
  %fld76 = bitcast %union.u* %u75 to [1 x %union.rtunion_def]*, !dbg !2572
  %arrayidx77 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld76, i64 0, i64 0, !dbg !2572
  %rt_rtx78 = bitcast %union.rtunion_def* %arrayidx77 to %struct.rtx_def**, !dbg !2572
  %42 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx78, align 8, !dbg !2572
  %43 = bitcast %struct.rtx_def* %42 to i32*, !dbg !2572
  %bf.load79 = load i32, i32* %43, align 8, !dbg !2572
  %bf.lshr80 = lshr i32 %bf.load79, 16, !dbg !2572
  %bf.clear81 = and i32 %bf.lshr80, 255, !dbg !2572
  %44 = load %struct.rtx_def*, %struct.rtx_def** %op, align 8, !dbg !2573
  %u82 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %44, i32 0, i32 1, !dbg !2573
  %fld83 = bitcast %union.u* %u82 to [1 x %union.rtunion_def]*, !dbg !2573
  %arrayidx84 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld83, i64 0, i64 1, !dbg !2573
  %rt_uint = bitcast %union.rtunion_def* %arrayidx84 to i32*, !dbg !2573
  %45 = load i32, i32* %rt_uint, align 8, !dbg !2573
  %46 = load %struct.rtx_def*, %struct.rtx_def** %op, align 8, !dbg !2574
  %47 = bitcast %struct.rtx_def* %46 to i32*, !dbg !2574
  %bf.load85 = load i32, i32* %47, align 8, !dbg !2574
  %bf.lshr86 = lshr i32 %bf.load85, 16, !dbg !2574
  %bf.clear87 = and i32 %bf.lshr86, 255, !dbg !2574
  %call88 = call i32 @subreg_regno_offset(i32 %call74, i32 %bf.clear81, i32 %45, i32 %bf.clear87), !dbg !2575
  store i32 %call88, i32* %offset, align 4, !dbg !2576
  br label %if.end89, !dbg !2577

if.end89:                                         ; preds = %if.then69, %land.lhs.true, %if.then53
  %48 = load %struct.rtx_def*, %struct.rtx_def** %op, align 8, !dbg !2578
  %u90 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %48, i32 0, i32 1, !dbg !2578
  %fld91 = bitcast %union.u* %u90 to [1 x %union.rtunion_def]*, !dbg !2578
  %arrayidx92 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld91, i64 0, i64 0, !dbg !2578
  %rt_rtx93 = bitcast %union.rtunion_def* %arrayidx92 to %struct.rtx_def**, !dbg !2578
  %49 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx93, align 8, !dbg !2578
  store %struct.rtx_def* %49, %struct.rtx_def** %op, align 8, !dbg !2579
  br label %if.end94, !dbg !2580

if.end94:                                         ; preds = %if.end89, %if.end48
  %50 = load i8*, i8** %p, align 8, !dbg !2581
  %51 = load i8, i8* %50, align 1, !dbg !2583
  %conv95 = sext i8 %51 to i32, !dbg !2583
  %cmp96 = icmp eq i32 %conv95, 0, !dbg !2584
  br i1 %cmp96, label %if.then102, label %lor.lhs.false98, !dbg !2585

lor.lhs.false98:                                  ; preds = %if.end94
  %52 = load i8*, i8** %p, align 8, !dbg !2586
  %53 = load i8, i8* %52, align 1, !dbg !2587
  %conv99 = sext i8 %53 to i32, !dbg !2587
  %cmp100 = icmp eq i32 %conv99, 44, !dbg !2588
  br i1 %cmp100, label %if.then102, label %if.end103, !dbg !2589

if.then102:                                       ; preds = %lor.lhs.false98, %if.end94
  store i32 1, i32* %win, align 4, !dbg !2590
  br label %if.end103, !dbg !2591

if.end103:                                        ; preds = %if.then102, %lor.lhs.false98
  br label %do.body104, !dbg !2592

do.body104:                                       ; preds = %do.cond580, %if.end103
  %54 = load i8*, i8** %p, align 8, !dbg !2593
  %55 = load i8, i8* %54, align 1, !dbg !2594
  %conv105 = sext i8 %55 to i32, !dbg !2594
  store i32 %conv105, i32* %c, align 4, !dbg !2595
  %56 = load i32, i32* %c, align 4, !dbg !2596
  %conv106 = trunc i32 %56 to i8, !dbg !2596
  %57 = load i8*, i8** %p, align 8, !dbg !2596
  %call107 = call i64 @insn_constraint_len(i8 signext %conv106, i8* %57), !dbg !2596
  %conv108 = trunc i64 %call107 to i32, !dbg !2596
  store i32 %conv108, i32* %len, align 4, !dbg !2597
  %58 = load i32, i32* %c, align 4, !dbg !2598
  switch i32 %58, label %sw.default [
    i32 0, label %sw.bb
    i32 44, label %sw.bb109
    i32 63, label %sw.bb110
    i32 33, label %sw.bb110
    i32 42, label %sw.bb110
    i32 37, label %sw.bb110
    i32 61, label %sw.bb110
    i32 43, label %sw.bb110
    i32 35, label %sw.bb111
    i32 38, label %sw.bb118
    i32 48, label %sw.bb125
    i32 49, label %sw.bb125
    i32 50, label %sw.bb125
    i32 51, label %sw.bb125
    i32 52, label %sw.bb125
    i32 53, label %sw.bb125
    i32 54, label %sw.bb125
    i32 55, label %sw.bb125
    i32 56, label %sw.bb125
    i32 57, label %sw.bb125
    i32 112, label %sw.bb181
    i32 103, label %sw.bb191
    i32 88, label %sw.bb219
    i32 109, label %sw.bb220
    i32 60, label %sw.bb308
    i32 62, label %sw.bb333
    i32 69, label %sw.bb358
    i32 70, label %sw.bb358
    i32 71, label %sw.bb379
    i32 72, label %sw.bb379
    i32 115, label %sw.bb391
    i32 105, label %sw.bb409
    i32 110, label %sw.bb418
    i32 73, label %sw.bb436
    i32 74, label %sw.bb436
    i32 75, label %sw.bb436
    i32 76, label %sw.bb436
    i32 77, label %sw.bb436
    i32 78, label %sw.bb436
    i32 79, label %sw.bb436
    i32 80, label %sw.bb436
    i32 86, label %sw.bb450
    i32 111, label %sw.bb489
  ], !dbg !2599

sw.bb:                                            ; preds = %do.body104
  store i32 0, i32* %len, align 4, !dbg !2600
  br label %sw.epilog, !dbg !2602

sw.bb109:                                         ; preds = %do.body104
  store i32 0, i32* %c, align 4, !dbg !2603
  br label %sw.epilog, !dbg !2604

sw.bb110:                                         ; preds = %do.body104, %do.body104, %do.body104, %do.body104, %do.body104, %do.body104
  br label %sw.epilog, !dbg !2605

sw.bb111:                                         ; preds = %do.body104
  br label %do.body112, !dbg !2606

do.body112:                                       ; preds = %land.end, %sw.bb111
  %59 = load i8*, i8** %p, align 8, !dbg !2607
  %incdec.ptr = getelementptr inbounds i8, i8* %59, i32 1, !dbg !2607
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !2607
  br label %do.cond, !dbg !2608

do.cond:                                          ; preds = %do.body112
  %60 = load i8*, i8** %p, align 8, !dbg !2609
  %61 = load i8, i8* %60, align 1, !dbg !2610
  %conv113 = sext i8 %61 to i32, !dbg !2610
  %tobool114 = icmp ne i32 %conv113, 0, !dbg !2610
  br i1 %tobool114, label %land.rhs, label %land.end, !dbg !2611

land.rhs:                                         ; preds = %do.cond
  %62 = load i8*, i8** %p, align 8, !dbg !2612
  %63 = load i8, i8* %62, align 1, !dbg !2613
  %conv115 = sext i8 %63 to i32, !dbg !2613
  %cmp116 = icmp ne i32 %conv115, 44, !dbg !2614
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.cond
  %64 = phi i1 [ false, %do.cond ], [ %cmp116, %land.rhs ], !dbg !2615
  br i1 %64, label %do.body112, label %do.end, !dbg !2608, !llvm.loop !2616

do.end:                                           ; preds = %land.end
  store i32 0, i32* %len, align 4, !dbg !2618
  br label %sw.epilog, !dbg !2619

sw.bb118:                                         ; preds = %do.body104
  %65 = load i32, i32* %opno, align 4, !dbg !2620
  %idxprom119 = sext i32 %65 to i64, !dbg !2621
  %arrayidx120 = getelementptr inbounds [30 x i32], [30 x i32]* %earlyclobber, i64 0, i64 %idxprom119, !dbg !2621
  store i32 1, i32* %arrayidx120, align 4, !dbg !2622
  %66 = load i32, i32* %seen_earlyclobber_at, align 4, !dbg !2623
  %cmp121 = icmp slt i32 %66, 0, !dbg !2625
  br i1 %cmp121, label %if.then123, label %if.end124, !dbg !2626

if.then123:                                       ; preds = %sw.bb118
  %67 = load i32, i32* %opno, align 4, !dbg !2627
  store i32 %67, i32* %seen_earlyclobber_at, align 4, !dbg !2628
  br label %if.end124, !dbg !2629

if.end124:                                        ; preds = %if.then123, %sw.bb118
  br label %sw.epilog, !dbg !2630

sw.bb125:                                         ; preds = %do.body104, %do.body104, %do.body104, %do.body104, %do.body104, %do.body104, %do.body104, %do.body104, %do.body104, %do.body104
  call void @llvm.dbg.declare(metadata i8** %end, metadata !2631, metadata !DIExpression()), !dbg !2633
  call void @llvm.dbg.declare(metadata i32* %match, metadata !2634, metadata !DIExpression()), !dbg !2635
  %68 = load i8*, i8** %p, align 8, !dbg !2636
  %call126 = call i64 @strtoul(i8* %68, i8** %end, i32 10), !dbg !2637
  %conv127 = trunc i64 %call126 to i32, !dbg !2637
  store i32 %conv127, i32* %match, align 4, !dbg !2638
  %69 = load i8*, i8** %end, align 8, !dbg !2639
  store i8* %69, i8** %p, align 8, !dbg !2640
  %70 = load i32, i32* %strict.addr, align 4, !dbg !2641
  %cmp128 = icmp slt i32 %70, 0, !dbg !2643
  br i1 %cmp128, label %if.then130, label %if.else, !dbg !2644

if.then130:                                       ; preds = %sw.bb125
  store i32 1, i32* %val, align 4, !dbg !2645
  br label %if.end160, !dbg !2646

if.else:                                          ; preds = %sw.bb125
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %op1, metadata !2647, metadata !DIExpression()), !dbg !2649
  %71 = load i32, i32* %match, align 4, !dbg !2650
  %idxprom131 = sext i32 %71 to i64, !dbg !2651
  %arrayidx132 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i64 0, i64 %idxprom131, !dbg !2651
  %72 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx132, align 8, !dbg !2651
  store %struct.rtx_def* %72, %struct.rtx_def** %op1, align 8, !dbg !2649
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %op2, metadata !2652, metadata !DIExpression()), !dbg !2653
  %73 = load i32, i32* %opno, align 4, !dbg !2654
  %idxprom133 = sext i32 %73 to i64, !dbg !2655
  %arrayidx134 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i64 0, i64 %idxprom133, !dbg !2655
  %74 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx134, align 8, !dbg !2655
  store %struct.rtx_def* %74, %struct.rtx_def** %op2, align 8, !dbg !2653
  %75 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8, !dbg !2656
  %76 = bitcast %struct.rtx_def* %75 to i32*, !dbg !2656
  %bf.load135 = load i32, i32* %76, align 8, !dbg !2656
  %bf.clear136 = and i32 %bf.load135, 65535, !dbg !2656
  %idxprom137 = sext i32 %bf.clear136 to i64, !dbg !2656
  %arrayidx138 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom137, !dbg !2656
  %77 = load i32, i32* %arrayidx138, align 4, !dbg !2656
  %cmp139 = icmp eq i32 %77, 4, !dbg !2656
  br i1 %cmp139, label %if.then141, label %if.end146, !dbg !2658

if.then141:                                       ; preds = %if.else
  %78 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8, !dbg !2659
  %u142 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %78, i32 0, i32 1, !dbg !2659
  %fld143 = bitcast %union.u* %u142 to [1 x %union.rtunion_def]*, !dbg !2659
  %arrayidx144 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld143, i64 0, i64 0, !dbg !2659
  %rt_rtx145 = bitcast %union.rtunion_def* %arrayidx144 to %struct.rtx_def**, !dbg !2659
  %79 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx145, align 8, !dbg !2659
  store %struct.rtx_def* %79, %struct.rtx_def** %op1, align 8, !dbg !2660
  br label %if.end146, !dbg !2661

if.end146:                                        ; preds = %if.then141, %if.else
  %80 = load %struct.rtx_def*, %struct.rtx_def** %op2, align 8, !dbg !2662
  %81 = bitcast %struct.rtx_def* %80 to i32*, !dbg !2662
  %bf.load147 = load i32, i32* %81, align 8, !dbg !2662
  %bf.clear148 = and i32 %bf.load147, 65535, !dbg !2662
  %idxprom149 = sext i32 %bf.clear148 to i64, !dbg !2662
  %arrayidx150 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom149, !dbg !2662
  %82 = load i32, i32* %arrayidx150, align 4, !dbg !2662
  %cmp151 = icmp eq i32 %82, 4, !dbg !2662
  br i1 %cmp151, label %if.then153, label %if.end158, !dbg !2664

if.then153:                                       ; preds = %if.end146
  %83 = load %struct.rtx_def*, %struct.rtx_def** %op2, align 8, !dbg !2665
  %u154 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %83, i32 0, i32 1, !dbg !2665
  %fld155 = bitcast %union.u* %u154 to [1 x %union.rtunion_def]*, !dbg !2665
  %arrayidx156 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld155, i64 0, i64 0, !dbg !2665
  %rt_rtx157 = bitcast %union.rtunion_def* %arrayidx156 to %struct.rtx_def**, !dbg !2665
  %84 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx157, align 8, !dbg !2665
  store %struct.rtx_def* %84, %struct.rtx_def** %op2, align 8, !dbg !2666
  br label %if.end158, !dbg !2667

if.end158:                                        ; preds = %if.then153, %if.end146
  %85 = load %struct.rtx_def*, %struct.rtx_def** %op1, align 8, !dbg !2668
  %86 = load %struct.rtx_def*, %struct.rtx_def** %op2, align 8, !dbg !2669
  %call159 = call i32 @operands_match_p(%struct.rtx_def* %85, %struct.rtx_def* %86), !dbg !2670
  store i32 %call159, i32* %val, align 4, !dbg !2671
  br label %if.end160

if.end160:                                        ; preds = %if.end158, %if.then130
  %87 = load i32, i32* %match, align 4, !dbg !2672
  %88 = load i32, i32* %opno, align 4, !dbg !2673
  %idxprom161 = sext i32 %88 to i64, !dbg !2674
  %arrayidx162 = getelementptr inbounds [30 x i32], [30 x i32]* %matching_operands, i64 0, i64 %idxprom161, !dbg !2674
  store i32 %87, i32* %arrayidx162, align 4, !dbg !2675
  %89 = load i32, i32* %opno, align 4, !dbg !2676
  %90 = load i32, i32* %match, align 4, !dbg !2677
  %idxprom163 = sext i32 %90 to i64, !dbg !2678
  %arrayidx164 = getelementptr inbounds [30 x i32], [30 x i32]* %matching_operands, i64 0, i64 %idxprom163, !dbg !2678
  store i32 %89, i32* %arrayidx164, align 4, !dbg !2679
  %91 = load i32, i32* %val, align 4, !dbg !2680
  %cmp165 = icmp ne i32 %91, 0, !dbg !2682
  br i1 %cmp165, label %if.then167, label %if.end168, !dbg !2683

if.then167:                                       ; preds = %if.end160
  store i32 1, i32* %win, align 4, !dbg !2684
  br label %if.end168, !dbg !2685

if.end168:                                        ; preds = %if.then167, %if.end160
  %92 = load i32, i32* %val, align 4, !dbg !2686
  %cmp169 = icmp eq i32 %92, 2, !dbg !2688
  br i1 %cmp169, label %land.lhs.true171, label %if.end180, !dbg !2689

land.lhs.true171:                                 ; preds = %if.end168
  %93 = load i32, i32* %strict.addr, align 4, !dbg !2690
  %cmp172 = icmp sgt i32 %93, 0, !dbg !2691
  br i1 %cmp172, label %if.then174, label %if.end180, !dbg !2692

if.then174:                                       ; preds = %land.lhs.true171
  %94 = load i32, i32* %opno, align 4, !dbg !2693
  %95 = load i32, i32* %funny_match_index, align 4, !dbg !2695
  %idxprom175 = sext i32 %95 to i64, !dbg !2696
  %arrayidx176 = getelementptr inbounds [30 x %struct.funny_match], [30 x %struct.funny_match]* %funny_match, i64 0, i64 %idxprom175, !dbg !2696
  %this_op = getelementptr inbounds %struct.funny_match, %struct.funny_match* %arrayidx176, i32 0, i32 0, !dbg !2697
  store i32 %94, i32* %this_op, align 8, !dbg !2698
  %96 = load i32, i32* %match, align 4, !dbg !2699
  %97 = load i32, i32* %funny_match_index, align 4, !dbg !2700
  %inc177 = add nsw i32 %97, 1, !dbg !2700
  store i32 %inc177, i32* %funny_match_index, align 4, !dbg !2700
  %idxprom178 = sext i32 %97 to i64, !dbg !2701
  %arrayidx179 = getelementptr inbounds [30 x %struct.funny_match], [30 x %struct.funny_match]* %funny_match, i64 0, i64 %idxprom178, !dbg !2701
  %other = getelementptr inbounds %struct.funny_match, %struct.funny_match* %arrayidx179, i32 0, i32 1, !dbg !2702
  store i32 %96, i32* %other, align 4, !dbg !2703
  br label %if.end180, !dbg !2704

if.end180:                                        ; preds = %if.then174, %land.lhs.true171, %if.end168
  store i32 0, i32* %len, align 4, !dbg !2705
  br label %sw.epilog, !dbg !2706

sw.bb181:                                         ; preds = %do.body104
  %98 = load i32, i32* %strict.addr, align 4, !dbg !2707
  %cmp182 = icmp sle i32 %98, 0, !dbg !2709
  br i1 %cmp182, label %if.then189, label %lor.lhs.false184, !dbg !2710

lor.lhs.false184:                                 ; preds = %sw.bb181
  %99 = load i32, i32* %opno, align 4, !dbg !2711
  %idxprom185 = sext i32 %99 to i64, !dbg !2711
  %arrayidx186 = getelementptr inbounds [30 x i32], [30 x i32]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 3), i64 0, i64 %idxprom185, !dbg !2711
  %100 = load i32, i32* %arrayidx186, align 4, !dbg !2711
  %101 = load %struct.rtx_def*, %struct.rtx_def** %op, align 8, !dbg !2711
  %call187 = call i32 @strict_memory_address_addr_space_p(i32 %100, %struct.rtx_def* %101, i8 zeroext 0), !dbg !2711
  %tobool188 = icmp ne i32 %call187, 0, !dbg !2711
  br i1 %tobool188, label %if.then189, label %if.end190, !dbg !2712

if.then189:                                       ; preds = %lor.lhs.false184, %sw.bb181
  store i32 1, i32* %win, align 4, !dbg !2713
  br label %if.end190, !dbg !2714

if.end190:                                        ; preds = %if.then189, %lor.lhs.false184
  br label %sw.epilog, !dbg !2715

sw.bb191:                                         ; preds = %do.body104
  %102 = load %struct.rtx_def*, %struct.rtx_def** %op, align 8, !dbg !2716
  %103 = bitcast %struct.rtx_def* %102 to i32*, !dbg !2716
  %bf.load192 = load i32, i32* %103, align 8, !dbg !2716
  %bf.clear193 = and i32 %bf.load192, 65535, !dbg !2716
  %cmp194 = icmp eq i32 %bf.clear193, 37, !dbg !2716
  br i1 %cmp194, label %if.then196, label %if.else210, !dbg !2718

if.then196:                                       ; preds = %sw.bb191
  %104 = load i32, i32* %strict.addr, align 4, !dbg !2719
  %cmp197 = icmp slt i32 %104, 0, !dbg !2722
  br i1 %cmp197, label %if.then208, label %lor.lhs.false199, !dbg !2723

lor.lhs.false199:                                 ; preds = %if.then196
  %105 = load i32, i32* @reload_in_progress, align 4, !dbg !2724
  %tobool200 = icmp ne i32 %105, 0, !dbg !2724
  br i1 %tobool200, label %land.lhs.true201, label %lor.lhs.false205, !dbg !2725

land.lhs.true201:                                 ; preds = %lor.lhs.false199
  %106 = load %struct.rtx_def*, %struct.rtx_def** %op, align 8, !dbg !2726
  %call202 = call i32 @rhs_regno(%struct.rtx_def* %106), !dbg !2726
  %cmp203 = icmp uge i32 %call202, 53, !dbg !2727
  br i1 %cmp203, label %if.then208, label %lor.lhs.false205, !dbg !2728

lor.lhs.false205:                                 ; preds = %land.lhs.true201, %lor.lhs.false199
  %107 = load %struct.rtx_def*, %struct.rtx_def** %op, align 8, !dbg !2729
  %108 = load i32, i32* %offset, align 4, !dbg !2730
  %109 = load i32, i32* %mode, align 4, !dbg !2731
  %call206 = call i32 @reg_fits_class_p(%struct.rtx_def* %107, i32 13, i32 %108, i32 %109), !dbg !2732
  %tobool207 = icmp ne i32 %call206, 0, !dbg !2732
  br i1 %tobool207, label %if.then208, label %if.end209, !dbg !2733

if.then208:                                       ; preds = %lor.lhs.false205, %land.lhs.true201, %if.then196
  store i32 1, i32* %win, align 4, !dbg !2734
  br label %if.end209, !dbg !2735

if.end209:                                        ; preds = %if.then208, %lor.lhs.false205
  br label %if.end218, !dbg !2736

if.else210:                                       ; preds = %sw.bb191
  %110 = load i32, i32* %strict.addr, align 4, !dbg !2737
  %cmp211 = icmp slt i32 %110, 0, !dbg !2739
  br i1 %cmp211, label %if.then216, label %lor.lhs.false213, !dbg !2740

lor.lhs.false213:                                 ; preds = %if.else210
  %111 = load %struct.rtx_def*, %struct.rtx_def** %op, align 8, !dbg !2741
  %112 = load i32, i32* %mode, align 4, !dbg !2742
  %call214 = call i32 @general_operand(%struct.rtx_def* %111, i32 %112), !dbg !2743
  %tobool215 = icmp ne i32 %call214, 0, !dbg !2743
  br i1 %tobool215, label %if.then216, label %if.end217, !dbg !2744

if.then216:                                       ; preds = %lor.lhs.false213, %if.else210
  store i32 1, i32* %win, align 4, !dbg !2745
  br label %if.end217, !dbg !2746

if.end217:                                        ; preds = %if.then216, %lor.lhs.false213
  br label %if.end218

if.end218:                                        ; preds = %if.end217, %if.end209
  br label %sw.epilog, !dbg !2747

sw.bb219:                                         ; preds = %do.body104
  store i32 1, i32* %win, align 4, !dbg !2748
  br label %sw.epilog, !dbg !2749

sw.bb220:                                         ; preds = %do.body104
  %113 = load %struct.rtx_def*, %struct.rtx_def** %op, align 8, !dbg !2750
  %114 = bitcast %struct.rtx_def* %113 to i32*, !dbg !2750
  %bf.load221 = load i32, i32* %114, align 8, !dbg !2750
  %bf.clear222 = and i32 %bf.load221, 65535, !dbg !2750
  %cmp223 = icmp eq i32 %bf.clear222, 43, !dbg !2750
  br i1 %cmp223, label %if.then225, label %if.else282, !dbg !2752

if.then225:                                       ; preds = %sw.bb220
  %115 = load i32, i32* %strict.addr, align 4, !dbg !2753
  %cmp226 = icmp sgt i32 %115, 0, !dbg !2756
  br i1 %cmp226, label %land.lhs.true228, label %if.end250, !dbg !2757

land.lhs.true228:                                 ; preds = %if.then225
  %116 = load %struct.rtx_def*, %struct.rtx_def** %op, align 8, !dbg !2758
  %117 = bitcast %struct.rtx_def* %116 to i32*, !dbg !2758
  %bf.load229 = load i32, i32* %117, align 8, !dbg !2758
  %bf.lshr230 = lshr i32 %bf.load229, 16, !dbg !2758
  %bf.clear231 = and i32 %bf.lshr230, 255, !dbg !2758
  %118 = load %struct.rtx_def*, %struct.rtx_def** %op, align 8, !dbg !2759
  %u232 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %118, i32 0, i32 1, !dbg !2759
  %fld233 = bitcast %union.u* %u232 to [1 x %union.rtunion_def]*, !dbg !2759
  %arrayidx234 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld233, i64 0, i64 0, !dbg !2759
  %rt_rtx235 = bitcast %union.rtunion_def* %arrayidx234 to %struct.rtx_def**, !dbg !2759
  %119 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx235, align 8, !dbg !2759
  %120 = load %struct.rtx_def*, %struct.rtx_def** %op, align 8, !dbg !2760
  %u236 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %120, i32 0, i32 1, !dbg !2760
  %fld237 = bitcast %union.u* %u236 to [1 x %union.rtunion_def]*, !dbg !2760
  %arrayidx238 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld237, i64 0, i64 1, !dbg !2760
  %rt_mem = bitcast %union.rtunion_def* %arrayidx238 to %struct.mem_attrs**, !dbg !2760
  %121 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !2760
  %cmp239 = icmp eq %struct.mem_attrs* %121, null, !dbg !2760
  br i1 %cmp239, label %cond.true, label %cond.false, !dbg !2760

cond.true:                                        ; preds = %land.lhs.true228
  br label %cond.end, !dbg !2760

cond.false:                                       ; preds = %land.lhs.true228
  %122 = load %struct.rtx_def*, %struct.rtx_def** %op, align 8, !dbg !2760
  %u241 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %122, i32 0, i32 1, !dbg !2760
  %fld242 = bitcast %union.u* %u241 to [1 x %union.rtunion_def]*, !dbg !2760
  %arrayidx243 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld242, i64 0, i64 1, !dbg !2760
  %rt_mem244 = bitcast %union.rtunion_def* %arrayidx243 to %struct.mem_attrs**, !dbg !2760
  %123 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem244, align 8, !dbg !2760
  %addrspace = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %123, i32 0, i32 5, !dbg !2760
  %124 = load i8, i8* %addrspace, align 8, !dbg !2760
  %conv245 = zext i8 %124 to i32, !dbg !2760
  br label %cond.end, !dbg !2760

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %conv245, %cond.false ], !dbg !2760
  %conv246 = trunc i32 %cond to i8, !dbg !2760
  %call247 = call i32 @strict_memory_address_addr_space_p(i32 %bf.clear231, %struct.rtx_def* %119, i8 zeroext %conv246), !dbg !2761
  %tobool248 = icmp ne i32 %call247, 0, !dbg !2761
  br i1 %tobool248, label %if.end250, label %if.then249, !dbg !2762

if.then249:                                       ; preds = %cond.end
  br label %sw.epilog, !dbg !2763

if.end250:                                        ; preds = %cond.end, %if.then225
  %125 = load i32, i32* %strict.addr, align 4, !dbg !2764
  %cmp251 = icmp eq i32 %125, 0, !dbg !2766
  br i1 %cmp251, label %land.lhs.true253, label %if.end281, !dbg !2767

land.lhs.true253:                                 ; preds = %if.end250
  %126 = load %struct.rtx_def*, %struct.rtx_def** %op, align 8, !dbg !2768
  %127 = bitcast %struct.rtx_def* %126 to i32*, !dbg !2768
  %bf.load254 = load i32, i32* %127, align 8, !dbg !2768
  %bf.lshr255 = lshr i32 %bf.load254, 16, !dbg !2768
  %bf.clear256 = and i32 %bf.lshr255, 255, !dbg !2768
  %128 = load %struct.rtx_def*, %struct.rtx_def** %op, align 8, !dbg !2769
  %u257 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %128, i32 0, i32 1, !dbg !2769
  %fld258 = bitcast %union.u* %u257 to [1 x %union.rtunion_def]*, !dbg !2769
  %arrayidx259 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld258, i64 0, i64 0, !dbg !2769
  %rt_rtx260 = bitcast %union.rtunion_def* %arrayidx259 to %struct.rtx_def**, !dbg !2769
  %129 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx260, align 8, !dbg !2769
  %130 = load %struct.rtx_def*, %struct.rtx_def** %op, align 8, !dbg !2770
  %u261 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %130, i32 0, i32 1, !dbg !2770
  %fld262 = bitcast %union.u* %u261 to [1 x %union.rtunion_def]*, !dbg !2770
  %arrayidx263 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld262, i64 0, i64 1, !dbg !2770
  %rt_mem264 = bitcast %union.rtunion_def* %arrayidx263 to %struct.mem_attrs**, !dbg !2770
  %131 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem264, align 8, !dbg !2770
  %cmp265 = icmp eq %struct.mem_attrs* %131, null, !dbg !2770
  br i1 %cmp265, label %cond.true267, label %cond.false268, !dbg !2770

cond.true267:                                     ; preds = %land.lhs.true253
  br label %cond.end275, !dbg !2770

cond.false268:                                    ; preds = %land.lhs.true253
  %132 = load %struct.rtx_def*, %struct.rtx_def** %op, align 8, !dbg !2770
  %u269 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %132, i32 0, i32 1, !dbg !2770
  %fld270 = bitcast %union.u* %u269 to [1 x %union.rtunion_def]*, !dbg !2770
  %arrayidx271 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld270, i64 0, i64 1, !dbg !2770
  %rt_mem272 = bitcast %union.rtunion_def* %arrayidx271 to %struct.mem_attrs**, !dbg !2770
  %133 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem272, align 8, !dbg !2770
  %addrspace273 = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %133, i32 0, i32 5, !dbg !2770
  %134 = load i8, i8* %addrspace273, align 8, !dbg !2770
  %conv274 = zext i8 %134 to i32, !dbg !2770
  br label %cond.end275, !dbg !2770

cond.end275:                                      ; preds = %cond.false268, %cond.true267
  %cond276 = phi i32 [ 0, %cond.true267 ], [ %conv274, %cond.false268 ], !dbg !2770
  %conv277 = trunc i32 %cond276 to i8, !dbg !2770
  %call278 = call i32 @memory_address_addr_space_p(i32 %bf.clear256, %struct.rtx_def* %129, i8 zeroext %conv277), !dbg !2771
  %tobool279 = icmp ne i32 %call278, 0, !dbg !2771
  br i1 %tobool279, label %if.end281, label %if.then280, !dbg !2772

if.then280:                                       ; preds = %cond.end275
  br label %sw.epilog, !dbg !2773

if.end281:                                        ; preds = %cond.end275, %if.end250
  store i32 1, i32* %win, align 4, !dbg !2774
  br label %if.end307, !dbg !2775

if.else282:                                       ; preds = %sw.bb220
  %135 = load i32, i32* %strict.addr, align 4, !dbg !2776
  %cmp283 = icmp slt i32 %135, 0, !dbg !2778
  br i1 %cmp283, label %land.lhs.true285, label %if.else293, !dbg !2779

land.lhs.true285:                                 ; preds = %if.else282
  %136 = load %struct.rtx_def*, %struct.rtx_def** %op, align 8, !dbg !2780
  %137 = bitcast %struct.rtx_def* %136 to i32*, !dbg !2780
  %bf.load286 = load i32, i32* %137, align 8, !dbg !2780
  %bf.clear287 = and i32 %bf.load286, 65535, !dbg !2780
  %idxprom288 = sext i32 %bf.clear287 to i64, !dbg !2780
  %arrayidx289 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom288, !dbg !2780
  %138 = load i32, i32* %arrayidx289, align 4, !dbg !2780
  %cmp290 = icmp eq i32 %138, 9, !dbg !2780
  br i1 %cmp290, label %if.then292, label %if.else293, !dbg !2781

if.then292:                                       ; preds = %land.lhs.true285
  store i32 1, i32* %win, align 4, !dbg !2782
  br label %if.end306, !dbg !2783

if.else293:                                       ; preds = %land.lhs.true285, %if.else282
  %139 = load i32, i32* @reload_in_progress, align 4, !dbg !2784
  %tobool294 = icmp ne i32 %139, 0, !dbg !2784
  br i1 %tobool294, label %land.lhs.true295, label %if.end305, !dbg !2786

land.lhs.true295:                                 ; preds = %if.else293
  %140 = load %struct.rtx_def*, %struct.rtx_def** %op, align 8, !dbg !2787
  %141 = bitcast %struct.rtx_def* %140 to i32*, !dbg !2787
  %bf.load296 = load i32, i32* %141, align 8, !dbg !2787
  %bf.clear297 = and i32 %bf.load296, 65535, !dbg !2787
  %cmp298 = icmp eq i32 %bf.clear297, 37, !dbg !2787
  br i1 %cmp298, label %land.lhs.true300, label %if.end305, !dbg !2788

land.lhs.true300:                                 ; preds = %land.lhs.true295
  %142 = load %struct.rtx_def*, %struct.rtx_def** %op, align 8, !dbg !2789
  %call301 = call i32 @rhs_regno(%struct.rtx_def* %142), !dbg !2789
  %cmp302 = icmp uge i32 %call301, 53, !dbg !2790
  br i1 %cmp302, label %if.then304, label %if.end305, !dbg !2791

if.then304:                                       ; preds = %land.lhs.true300
  store i32 1, i32* %win, align 4, !dbg !2792
  br label %if.end305, !dbg !2793

if.end305:                                        ; preds = %if.then304, %land.lhs.true300, %land.lhs.true295, %if.else293
  br label %if.end306

if.end306:                                        ; preds = %if.end305, %if.then292
  br label %if.end307

if.end307:                                        ; preds = %if.end306, %if.end281
  br label %sw.epilog, !dbg !2794

sw.bb308:                                         ; preds = %do.body104
  %143 = load %struct.rtx_def*, %struct.rtx_def** %op, align 8, !dbg !2795
  %144 = bitcast %struct.rtx_def* %143 to i32*, !dbg !2795
  %bf.load309 = load i32, i32* %144, align 8, !dbg !2795
  %bf.clear310 = and i32 %bf.load309, 65535, !dbg !2795
  %cmp311 = icmp eq i32 %bf.clear310, 43, !dbg !2795
  br i1 %cmp311, label %land.lhs.true313, label %if.end332, !dbg !2797

land.lhs.true313:                                 ; preds = %sw.bb308
  %145 = load %struct.rtx_def*, %struct.rtx_def** %op, align 8, !dbg !2798
  %u314 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %145, i32 0, i32 1, !dbg !2798
  %fld315 = bitcast %union.u* %u314 to [1 x %union.rtunion_def]*, !dbg !2798
  %arrayidx316 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld315, i64 0, i64 0, !dbg !2798
  %rt_rtx317 = bitcast %union.rtunion_def* %arrayidx316 to %struct.rtx_def**, !dbg !2798
  %146 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx317, align 8, !dbg !2798
  %147 = bitcast %struct.rtx_def* %146 to i32*, !dbg !2798
  %bf.load318 = load i32, i32* %147, align 8, !dbg !2798
  %bf.clear319 = and i32 %bf.load318, 65535, !dbg !2798
  %cmp320 = icmp eq i32 %bf.clear319, 74, !dbg !2799
  br i1 %cmp320, label %if.then331, label %lor.lhs.false322, !dbg !2800

lor.lhs.false322:                                 ; preds = %land.lhs.true313
  %148 = load %struct.rtx_def*, %struct.rtx_def** %op, align 8, !dbg !2801
  %u323 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %148, i32 0, i32 1, !dbg !2801
  %fld324 = bitcast %union.u* %u323 to [1 x %union.rtunion_def]*, !dbg !2801
  %arrayidx325 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld324, i64 0, i64 0, !dbg !2801
  %rt_rtx326 = bitcast %union.rtunion_def* %arrayidx325 to %struct.rtx_def**, !dbg !2801
  %149 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx326, align 8, !dbg !2801
  %150 = bitcast %struct.rtx_def* %149 to i32*, !dbg !2801
  %bf.load327 = load i32, i32* %150, align 8, !dbg !2801
  %bf.clear328 = and i32 %bf.load327, 65535, !dbg !2801
  %cmp329 = icmp eq i32 %bf.clear328, 76, !dbg !2802
  br i1 %cmp329, label %if.then331, label %if.end332, !dbg !2803

if.then331:                                       ; preds = %lor.lhs.false322, %land.lhs.true313
  store i32 1, i32* %win, align 4, !dbg !2804
  br label %if.end332, !dbg !2805

if.end332:                                        ; preds = %if.then331, %lor.lhs.false322, %sw.bb308
  br label %sw.epilog, !dbg !2806

sw.bb333:                                         ; preds = %do.body104
  %151 = load %struct.rtx_def*, %struct.rtx_def** %op, align 8, !dbg !2807
  %152 = bitcast %struct.rtx_def* %151 to i32*, !dbg !2807
  %bf.load334 = load i32, i32* %152, align 8, !dbg !2807
  %bf.clear335 = and i32 %bf.load334, 65535, !dbg !2807
  %cmp336 = icmp eq i32 %bf.clear335, 43, !dbg !2807
  br i1 %cmp336, label %land.lhs.true338, label %if.end357, !dbg !2809

land.lhs.true338:                                 ; preds = %sw.bb333
  %153 = load %struct.rtx_def*, %struct.rtx_def** %op, align 8, !dbg !2810
  %u339 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %153, i32 0, i32 1, !dbg !2810
  %fld340 = bitcast %union.u* %u339 to [1 x %union.rtunion_def]*, !dbg !2810
  %arrayidx341 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld340, i64 0, i64 0, !dbg !2810
  %rt_rtx342 = bitcast %union.rtunion_def* %arrayidx341 to %struct.rtx_def**, !dbg !2810
  %154 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx342, align 8, !dbg !2810
  %155 = bitcast %struct.rtx_def* %154 to i32*, !dbg !2810
  %bf.load343 = load i32, i32* %155, align 8, !dbg !2810
  %bf.clear344 = and i32 %bf.load343, 65535, !dbg !2810
  %cmp345 = icmp eq i32 %bf.clear344, 75, !dbg !2811
  br i1 %cmp345, label %if.then356, label %lor.lhs.false347, !dbg !2812

lor.lhs.false347:                                 ; preds = %land.lhs.true338
  %156 = load %struct.rtx_def*, %struct.rtx_def** %op, align 8, !dbg !2813
  %u348 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %156, i32 0, i32 1, !dbg !2813
  %fld349 = bitcast %union.u* %u348 to [1 x %union.rtunion_def]*, !dbg !2813
  %arrayidx350 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld349, i64 0, i64 0, !dbg !2813
  %rt_rtx351 = bitcast %union.rtunion_def* %arrayidx350 to %struct.rtx_def**, !dbg !2813
  %157 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx351, align 8, !dbg !2813
  %158 = bitcast %struct.rtx_def* %157 to i32*, !dbg !2813
  %bf.load352 = load i32, i32* %158, align 8, !dbg !2813
  %bf.clear353 = and i32 %bf.load352, 65535, !dbg !2813
  %cmp354 = icmp eq i32 %bf.clear353, 77, !dbg !2814
  br i1 %cmp354, label %if.then356, label %if.end357, !dbg !2815

if.then356:                                       ; preds = %lor.lhs.false347, %land.lhs.true338
  store i32 1, i32* %win, align 4, !dbg !2816
  br label %if.end357, !dbg !2817

if.end357:                                        ; preds = %if.then356, %lor.lhs.false347, %sw.bb333
  br label %sw.epilog, !dbg !2818

sw.bb358:                                         ; preds = %do.body104, %do.body104
  %159 = load %struct.rtx_def*, %struct.rtx_def** %op, align 8, !dbg !2819
  %160 = bitcast %struct.rtx_def* %159 to i32*, !dbg !2819
  %bf.load359 = load i32, i32* %160, align 8, !dbg !2819
  %bf.clear360 = and i32 %bf.load359, 65535, !dbg !2819
  %cmp361 = icmp eq i32 %bf.clear360, 32, !dbg !2821
  br i1 %cmp361, label %if.then377, label %lor.lhs.false363, !dbg !2822

lor.lhs.false363:                                 ; preds = %sw.bb358
  %161 = load %struct.rtx_def*, %struct.rtx_def** %op, align 8, !dbg !2823
  %162 = bitcast %struct.rtx_def* %161 to i32*, !dbg !2823
  %bf.load364 = load i32, i32* %162, align 8, !dbg !2823
  %bf.clear365 = and i32 %bf.load364, 65535, !dbg !2823
  %cmp366 = icmp eq i32 %bf.clear365, 33, !dbg !2824
  br i1 %cmp366, label %land.lhs.true368, label %if.end378, !dbg !2825

land.lhs.true368:                                 ; preds = %lor.lhs.false363
  %163 = load %struct.rtx_def*, %struct.rtx_def** %op, align 8, !dbg !2826
  %164 = bitcast %struct.rtx_def* %163 to i32*, !dbg !2826
  %bf.load369 = load i32, i32* %164, align 8, !dbg !2826
  %bf.lshr370 = lshr i32 %bf.load369, 16, !dbg !2826
  %bf.clear371 = and i32 %bf.lshr370, 255, !dbg !2826
  %idxprom372 = zext i32 %bf.clear371 to i64, !dbg !2826
  %arrayidx373 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom372, !dbg !2826
  %165 = load i8, i8* %arrayidx373, align 1, !dbg !2826
  %conv374 = zext i8 %165 to i32, !dbg !2826
  %cmp375 = icmp eq i32 %conv374, 17, !dbg !2827
  br i1 %cmp375, label %if.then377, label %if.end378, !dbg !2828

if.then377:                                       ; preds = %land.lhs.true368, %sw.bb358
  store i32 1, i32* %win, align 4, !dbg !2829
  br label %if.end378, !dbg !2830

if.end378:                                        ; preds = %if.then377, %land.lhs.true368, %lor.lhs.false363
  br label %sw.epilog, !dbg !2831

sw.bb379:                                         ; preds = %do.body104, %do.body104
  %166 = load %struct.rtx_def*, %struct.rtx_def** %op, align 8, !dbg !2832
  %167 = bitcast %struct.rtx_def* %166 to i32*, !dbg !2832
  %bf.load380 = load i32, i32* %167, align 8, !dbg !2832
  %bf.clear381 = and i32 %bf.load380, 65535, !dbg !2832
  %cmp382 = icmp eq i32 %bf.clear381, 32, !dbg !2834
  br i1 %cmp382, label %land.lhs.true384, label %if.end390, !dbg !2835

land.lhs.true384:                                 ; preds = %sw.bb379
  %168 = load %struct.rtx_def*, %struct.rtx_def** %op, align 8, !dbg !2836
  %169 = load i8*, i8** %p, align 8, !dbg !2836
  %call385 = call i32 @lookup_constraint(i8* %169), !dbg !2836
  %call386 = call zeroext i8 @constraint_satisfied_p(%struct.rtx_def* %168, i32 %call385), !dbg !2836
  %conv387 = zext i8 %call386 to i32, !dbg !2836
  %tobool388 = icmp ne i32 %conv387, 0, !dbg !2836
  br i1 %tobool388, label %if.then389, label %if.end390, !dbg !2837

if.then389:                                       ; preds = %land.lhs.true384
  store i32 1, i32* %win, align 4, !dbg !2838
  br label %if.end390, !dbg !2839

if.end390:                                        ; preds = %if.then389, %land.lhs.true384, %sw.bb379
  br label %sw.epilog, !dbg !2840

sw.bb391:                                         ; preds = %do.body104
  %170 = load %struct.rtx_def*, %struct.rtx_def** %op, align 8, !dbg !2841
  %171 = bitcast %struct.rtx_def* %170 to i32*, !dbg !2841
  %bf.load392 = load i32, i32* %171, align 8, !dbg !2841
  %bf.clear393 = and i32 %bf.load392, 65535, !dbg !2841
  %cmp394 = icmp eq i32 %bf.clear393, 30, !dbg !2841
  br i1 %cmp394, label %if.then407, label %lor.lhs.false396, !dbg !2843

lor.lhs.false396:                                 ; preds = %sw.bb391
  %172 = load %struct.rtx_def*, %struct.rtx_def** %op, align 8, !dbg !2844
  %173 = bitcast %struct.rtx_def* %172 to i32*, !dbg !2844
  %bf.load397 = load i32, i32* %173, align 8, !dbg !2844
  %bf.clear398 = and i32 %bf.load397, 65535, !dbg !2844
  %cmp399 = icmp eq i32 %bf.clear398, 32, !dbg !2845
  br i1 %cmp399, label %land.lhs.true401, label %if.end408, !dbg !2846

land.lhs.true401:                                 ; preds = %lor.lhs.false396
  %174 = load %struct.rtx_def*, %struct.rtx_def** %op, align 8, !dbg !2847
  %175 = bitcast %struct.rtx_def* %174 to i32*, !dbg !2847
  %bf.load402 = load i32, i32* %175, align 8, !dbg !2847
  %bf.lshr403 = lshr i32 %bf.load402, 16, !dbg !2847
  %bf.clear404 = and i32 %bf.lshr403, 255, !dbg !2847
  %cmp405 = icmp eq i32 %bf.clear404, 0, !dbg !2848
  br i1 %cmp405, label %if.then407, label %if.end408, !dbg !2849

if.then407:                                       ; preds = %land.lhs.true401, %sw.bb391
  br label %sw.epilog, !dbg !2850

if.end408:                                        ; preds = %land.lhs.true401, %lor.lhs.false396
  br label %sw.bb409, !dbg !2851

sw.bb409:                                         ; preds = %do.body104, %if.end408
  %176 = load %struct.rtx_def*, %struct.rtx_def** %op, align 8, !dbg !2852
  %177 = bitcast %struct.rtx_def* %176 to i32*, !dbg !2852
  %bf.load410 = load i32, i32* %177, align 8, !dbg !2852
  %bf.clear411 = and i32 %bf.load410, 65535, !dbg !2852
  %idxprom412 = sext i32 %bf.clear411 to i64, !dbg !2852
  %arrayidx413 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom412, !dbg !2852
  %178 = load i32, i32* %arrayidx413, align 4, !dbg !2852
  %cmp414 = icmp eq i32 %178, 9, !dbg !2852
  br i1 %cmp414, label %if.then416, label %if.end417, !dbg !2854

if.then416:                                       ; preds = %sw.bb409
  store i32 1, i32* %win, align 4, !dbg !2855
  br label %if.end417, !dbg !2856

if.end417:                                        ; preds = %if.then416, %sw.bb409
  br label %sw.epilog, !dbg !2857

sw.bb418:                                         ; preds = %do.body104
  %179 = load %struct.rtx_def*, %struct.rtx_def** %op, align 8, !dbg !2858
  %180 = bitcast %struct.rtx_def* %179 to i32*, !dbg !2858
  %bf.load419 = load i32, i32* %180, align 8, !dbg !2858
  %bf.clear420 = and i32 %bf.load419, 65535, !dbg !2858
  %cmp421 = icmp eq i32 %bf.clear420, 30, !dbg !2858
  br i1 %cmp421, label %if.then434, label %lor.lhs.false423, !dbg !2860

lor.lhs.false423:                                 ; preds = %sw.bb418
  %181 = load %struct.rtx_def*, %struct.rtx_def** %op, align 8, !dbg !2861
  %182 = bitcast %struct.rtx_def* %181 to i32*, !dbg !2861
  %bf.load424 = load i32, i32* %182, align 8, !dbg !2861
  %bf.clear425 = and i32 %bf.load424, 65535, !dbg !2861
  %cmp426 = icmp eq i32 %bf.clear425, 32, !dbg !2862
  br i1 %cmp426, label %land.lhs.true428, label %if.end435, !dbg !2863

land.lhs.true428:                                 ; preds = %lor.lhs.false423
  %183 = load %struct.rtx_def*, %struct.rtx_def** %op, align 8, !dbg !2864
  %184 = bitcast %struct.rtx_def* %183 to i32*, !dbg !2864
  %bf.load429 = load i32, i32* %184, align 8, !dbg !2864
  %bf.lshr430 = lshr i32 %bf.load429, 16, !dbg !2864
  %bf.clear431 = and i32 %bf.lshr430, 255, !dbg !2864
  %cmp432 = icmp eq i32 %bf.clear431, 0, !dbg !2865
  br i1 %cmp432, label %if.then434, label %if.end435, !dbg !2866

if.then434:                                       ; preds = %land.lhs.true428, %sw.bb418
  store i32 1, i32* %win, align 4, !dbg !2867
  br label %if.end435, !dbg !2868

if.end435:                                        ; preds = %if.then434, %land.lhs.true428, %lor.lhs.false423
  br label %sw.epilog, !dbg !2869

sw.bb436:                                         ; preds = %do.body104, %do.body104, %do.body104, %do.body104, %do.body104, %do.body104, %do.body104, %do.body104
  %185 = load %struct.rtx_def*, %struct.rtx_def** %op, align 8, !dbg !2870
  %186 = bitcast %struct.rtx_def* %185 to i32*, !dbg !2870
  %bf.load437 = load i32, i32* %186, align 8, !dbg !2870
  %bf.clear438 = and i32 %bf.load437, 65535, !dbg !2870
  %cmp439 = icmp eq i32 %bf.clear438, 30, !dbg !2870
  br i1 %cmp439, label %land.lhs.true441, label %if.end449, !dbg !2872

land.lhs.true441:                                 ; preds = %sw.bb436
  %187 = load %struct.rtx_def*, %struct.rtx_def** %op, align 8, !dbg !2873
  %u442 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %187, i32 0, i32 1, !dbg !2873
  %hwint = bitcast %union.u* %u442 to [1 x i64]*, !dbg !2873
  %arrayidx443 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint, i64 0, i64 0, !dbg !2873
  %188 = load i64, i64* %arrayidx443, align 8, !dbg !2873
  %189 = load i8*, i8** %p, align 8, !dbg !2873
  %call444 = call i32 @lookup_constraint(i8* %189), !dbg !2873
  %call445 = call zeroext i8 @insn_const_int_ok_for_constraint(i64 %188, i32 %call444), !dbg !2873
  %conv446 = zext i8 %call445 to i32, !dbg !2873
  %tobool447 = icmp ne i32 %conv446, 0, !dbg !2873
  br i1 %tobool447, label %if.then448, label %if.end449, !dbg !2874

if.then448:                                       ; preds = %land.lhs.true441
  store i32 1, i32* %win, align 4, !dbg !2875
  br label %if.end449, !dbg !2876

if.end449:                                        ; preds = %if.then448, %land.lhs.true441, %sw.bb436
  br label %sw.epilog, !dbg !2877

sw.bb450:                                         ; preds = %do.body104
  %190 = load %struct.rtx_def*, %struct.rtx_def** %op, align 8, !dbg !2878
  %191 = bitcast %struct.rtx_def* %190 to i32*, !dbg !2878
  %bf.load451 = load i32, i32* %191, align 8, !dbg !2878
  %bf.clear452 = and i32 %bf.load451, 65535, !dbg !2878
  %cmp453 = icmp eq i32 %bf.clear452, 43, !dbg !2878
  br i1 %cmp453, label %land.lhs.true455, label %if.end488, !dbg !2880

land.lhs.true455:                                 ; preds = %sw.bb450
  %192 = load i32, i32* %strict.addr, align 4, !dbg !2881
  %cmp456 = icmp sgt i32 %192, 0, !dbg !2882
  br i1 %cmp456, label %land.lhs.true458, label %lor.lhs.false461, !dbg !2883

land.lhs.true458:                                 ; preds = %land.lhs.true455
  %193 = load %struct.rtx_def*, %struct.rtx_def** %op, align 8, !dbg !2884
  %call459 = call i32 @offsettable_memref_p(%struct.rtx_def* %193), !dbg !2885
  %tobool460 = icmp ne i32 %call459, 0, !dbg !2885
  br i1 %tobool460, label %lor.lhs.false461, label %if.then487, !dbg !2886

lor.lhs.false461:                                 ; preds = %land.lhs.true458, %land.lhs.true455
  %194 = load i32, i32* %strict.addr, align 4, !dbg !2887
  %cmp462 = icmp slt i32 %194, 0, !dbg !2888
  br i1 %cmp462, label %land.lhs.true464, label %lor.lhs.false476, !dbg !2889

land.lhs.true464:                                 ; preds = %lor.lhs.false461
  %195 = load %struct.rtx_def*, %struct.rtx_def** %op, align 8, !dbg !2890
  %196 = bitcast %struct.rtx_def* %195 to i32*, !dbg !2890
  %bf.load465 = load i32, i32* %196, align 8, !dbg !2890
  %bf.clear466 = and i32 %bf.load465, 65535, !dbg !2890
  %idxprom467 = sext i32 %bf.clear466 to i64, !dbg !2890
  %arrayidx468 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom467, !dbg !2890
  %197 = load i32, i32* %arrayidx468, align 4, !dbg !2890
  %cmp469 = icmp eq i32 %197, 9, !dbg !2890
  br i1 %cmp469, label %lor.lhs.false476, label %lor.lhs.false471, !dbg !2891

lor.lhs.false471:                                 ; preds = %land.lhs.true464
  %198 = load %struct.rtx_def*, %struct.rtx_def** %op, align 8, !dbg !2892
  %199 = bitcast %struct.rtx_def* %198 to i32*, !dbg !2892
  %bf.load472 = load i32, i32* %199, align 8, !dbg !2892
  %bf.clear473 = and i32 %bf.load472, 65535, !dbg !2892
  %cmp474 = icmp eq i32 %bf.clear473, 43, !dbg !2892
  br i1 %cmp474, label %lor.lhs.false476, label %if.then487, !dbg !2893

lor.lhs.false476:                                 ; preds = %lor.lhs.false471, %land.lhs.true464, %lor.lhs.false461
  %200 = load i32, i32* @reload_in_progress, align 4, !dbg !2894
  %tobool477 = icmp ne i32 %200, 0, !dbg !2894
  br i1 %tobool477, label %land.lhs.true478, label %if.end488, !dbg !2895

land.lhs.true478:                                 ; preds = %lor.lhs.false476
  %201 = load %struct.rtx_def*, %struct.rtx_def** %op, align 8, !dbg !2896
  %202 = bitcast %struct.rtx_def* %201 to i32*, !dbg !2896
  %bf.load479 = load i32, i32* %202, align 8, !dbg !2896
  %bf.clear480 = and i32 %bf.load479, 65535, !dbg !2896
  %cmp481 = icmp eq i32 %bf.clear480, 37, !dbg !2896
  br i1 %cmp481, label %land.lhs.true483, label %if.then487, !dbg !2897

land.lhs.true483:                                 ; preds = %land.lhs.true478
  %203 = load %struct.rtx_def*, %struct.rtx_def** %op, align 8, !dbg !2898
  %call484 = call i32 @rhs_regno(%struct.rtx_def* %203), !dbg !2898
  %cmp485 = icmp uge i32 %call484, 53, !dbg !2899
  br i1 %cmp485, label %if.end488, label %if.then487, !dbg !2900

if.then487:                                       ; preds = %land.lhs.true483, %land.lhs.true478, %lor.lhs.false471, %land.lhs.true458
  store i32 1, i32* %win, align 4, !dbg !2901
  br label %if.end488, !dbg !2902

if.end488:                                        ; preds = %if.then487, %land.lhs.true483, %lor.lhs.false476, %sw.bb450
  br label %sw.epilog, !dbg !2903

sw.bb489:                                         ; preds = %do.body104
  %204 = load i32, i32* %strict.addr, align 4, !dbg !2904
  %cmp490 = icmp sgt i32 %204, 0, !dbg !2906
  br i1 %cmp490, label %land.lhs.true492, label %lor.lhs.false495, !dbg !2907

land.lhs.true492:                                 ; preds = %sw.bb489
  %205 = load %struct.rtx_def*, %struct.rtx_def** %op, align 8, !dbg !2908
  %call493 = call i32 @offsettable_memref_p(%struct.rtx_def* %205), !dbg !2909
  %tobool494 = icmp ne i32 %call493, 0, !dbg !2909
  br i1 %tobool494, label %if.then527, label %lor.lhs.false495, !dbg !2910

lor.lhs.false495:                                 ; preds = %land.lhs.true492, %sw.bb489
  %206 = load i32, i32* %strict.addr, align 4, !dbg !2911
  %cmp496 = icmp eq i32 %206, 0, !dbg !2912
  br i1 %cmp496, label %land.lhs.true498, label %lor.lhs.false501, !dbg !2913

land.lhs.true498:                                 ; preds = %lor.lhs.false495
  %207 = load %struct.rtx_def*, %struct.rtx_def** %op, align 8, !dbg !2914
  %call499 = call i32 @offsettable_nonstrict_memref_p(%struct.rtx_def* %207), !dbg !2915
  %tobool500 = icmp ne i32 %call499, 0, !dbg !2915
  br i1 %tobool500, label %if.then527, label %lor.lhs.false501, !dbg !2916

lor.lhs.false501:                                 ; preds = %land.lhs.true498, %lor.lhs.false495
  %208 = load i32, i32* %strict.addr, align 4, !dbg !2917
  %cmp502 = icmp slt i32 %208, 0, !dbg !2918
  br i1 %cmp502, label %land.lhs.true504, label %lor.lhs.false516, !dbg !2919

land.lhs.true504:                                 ; preds = %lor.lhs.false501
  %209 = load %struct.rtx_def*, %struct.rtx_def** %op, align 8, !dbg !2920
  %210 = bitcast %struct.rtx_def* %209 to i32*, !dbg !2920
  %bf.load505 = load i32, i32* %210, align 8, !dbg !2920
  %bf.clear506 = and i32 %bf.load505, 65535, !dbg !2920
  %idxprom507 = sext i32 %bf.clear506 to i64, !dbg !2920
  %arrayidx508 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom507, !dbg !2920
  %211 = load i32, i32* %arrayidx508, align 4, !dbg !2920
  %cmp509 = icmp eq i32 %211, 9, !dbg !2920
  br i1 %cmp509, label %if.then527, label %lor.lhs.false511, !dbg !2921

lor.lhs.false511:                                 ; preds = %land.lhs.true504
  %212 = load %struct.rtx_def*, %struct.rtx_def** %op, align 8, !dbg !2922
  %213 = bitcast %struct.rtx_def* %212 to i32*, !dbg !2922
  %bf.load512 = load i32, i32* %213, align 8, !dbg !2922
  %bf.clear513 = and i32 %bf.load512, 65535, !dbg !2922
  %cmp514 = icmp eq i32 %bf.clear513, 43, !dbg !2922
  br i1 %cmp514, label %if.then527, label %lor.lhs.false516, !dbg !2923

lor.lhs.false516:                                 ; preds = %lor.lhs.false511, %lor.lhs.false501
  %214 = load i32, i32* @reload_in_progress, align 4, !dbg !2924
  %tobool517 = icmp ne i32 %214, 0, !dbg !2924
  br i1 %tobool517, label %land.lhs.true518, label %if.end528, !dbg !2925

land.lhs.true518:                                 ; preds = %lor.lhs.false516
  %215 = load %struct.rtx_def*, %struct.rtx_def** %op, align 8, !dbg !2926
  %216 = bitcast %struct.rtx_def* %215 to i32*, !dbg !2926
  %bf.load519 = load i32, i32* %216, align 8, !dbg !2926
  %bf.clear520 = and i32 %bf.load519, 65535, !dbg !2926
  %cmp521 = icmp eq i32 %bf.clear520, 37, !dbg !2926
  br i1 %cmp521, label %land.lhs.true523, label %if.end528, !dbg !2927

land.lhs.true523:                                 ; preds = %land.lhs.true518
  %217 = load %struct.rtx_def*, %struct.rtx_def** %op, align 8, !dbg !2928
  %call524 = call i32 @rhs_regno(%struct.rtx_def* %217), !dbg !2928
  %cmp525 = icmp uge i32 %call524, 53, !dbg !2929
  br i1 %cmp525, label %if.then527, label %if.end528, !dbg !2930

if.then527:                                       ; preds = %land.lhs.true523, %lor.lhs.false511, %land.lhs.true504, %land.lhs.true498, %land.lhs.true492
  store i32 1, i32* %win, align 4, !dbg !2931
  br label %if.end528, !dbg !2932

if.end528:                                        ; preds = %if.then527, %land.lhs.true523, %land.lhs.true518, %lor.lhs.false516
  br label %sw.epilog, !dbg !2933

sw.default:                                       ; preds = %do.body104
  call void @llvm.dbg.declare(metadata i32* %cl, metadata !2934, metadata !DIExpression()), !dbg !2936
  %218 = load i32, i32* %c, align 4, !dbg !2937
  %cmp529 = icmp eq i32 %218, 114, !dbg !2938
  br i1 %cmp529, label %cond.true531, label %cond.false532, !dbg !2937

cond.true531:                                     ; preds = %sw.default
  br label %cond.end535, !dbg !2937

cond.false532:                                    ; preds = %sw.default
  %219 = load i8*, i8** %p, align 8, !dbg !2939
  %call533 = call i32 @lookup_constraint(i8* %219), !dbg !2939
  %call534 = call i32 @regclass_for_constraint(i32 %call533), !dbg !2939
  br label %cond.end535, !dbg !2937

cond.end535:                                      ; preds = %cond.false532, %cond.true531
  %cond536 = phi i32 [ 13, %cond.true531 ], [ %call534, %cond.false532 ], !dbg !2937
  store i32 %cond536, i32* %cl, align 4, !dbg !2940
  %220 = load i32, i32* %cl, align 4, !dbg !2941
  %cmp537 = icmp ne i32 %220, 0, !dbg !2943
  br i1 %cmp537, label %if.then539, label %if.else572, !dbg !2944

if.then539:                                       ; preds = %cond.end535
  %221 = load i32, i32* %strict.addr, align 4, !dbg !2945
  %cmp540 = icmp slt i32 %221, 0, !dbg !2948
  br i1 %cmp540, label %if.then570, label %lor.lhs.false542, !dbg !2949

lor.lhs.false542:                                 ; preds = %if.then539
  %222 = load i32, i32* %strict.addr, align 4, !dbg !2950
  %cmp543 = icmp eq i32 %222, 0, !dbg !2951
  br i1 %cmp543, label %land.lhs.true545, label %lor.lhs.false554, !dbg !2952

land.lhs.true545:                                 ; preds = %lor.lhs.false542
  %223 = load %struct.rtx_def*, %struct.rtx_def** %op, align 8, !dbg !2953
  %224 = bitcast %struct.rtx_def* %223 to i32*, !dbg !2953
  %bf.load546 = load i32, i32* %224, align 8, !dbg !2953
  %bf.clear547 = and i32 %bf.load546, 65535, !dbg !2953
  %cmp548 = icmp eq i32 %bf.clear547, 37, !dbg !2953
  br i1 %cmp548, label %land.lhs.true550, label %lor.lhs.false554, !dbg !2954

land.lhs.true550:                                 ; preds = %land.lhs.true545
  %225 = load %struct.rtx_def*, %struct.rtx_def** %op, align 8, !dbg !2955
  %call551 = call i32 @rhs_regno(%struct.rtx_def* %225), !dbg !2955
  %cmp552 = icmp uge i32 %call551, 53, !dbg !2956
  br i1 %cmp552, label %if.then570, label %lor.lhs.false554, !dbg !2957

lor.lhs.false554:                                 ; preds = %land.lhs.true550, %land.lhs.true545, %lor.lhs.false542
  %226 = load i32, i32* %strict.addr, align 4, !dbg !2958
  %cmp555 = icmp eq i32 %226, 0, !dbg !2959
  br i1 %cmp555, label %land.lhs.true557, label %lor.lhs.false562, !dbg !2960

land.lhs.true557:                                 ; preds = %lor.lhs.false554
  %227 = load %struct.rtx_def*, %struct.rtx_def** %op, align 8, !dbg !2961
  %228 = bitcast %struct.rtx_def* %227 to i32*, !dbg !2961
  %bf.load558 = load i32, i32* %228, align 8, !dbg !2961
  %bf.clear559 = and i32 %bf.load558, 65535, !dbg !2961
  %cmp560 = icmp eq i32 %bf.clear559, 38, !dbg !2962
  br i1 %cmp560, label %if.then570, label %lor.lhs.false562, !dbg !2963

lor.lhs.false562:                                 ; preds = %land.lhs.true557, %lor.lhs.false554
  %229 = load %struct.rtx_def*, %struct.rtx_def** %op, align 8, !dbg !2964
  %230 = bitcast %struct.rtx_def* %229 to i32*, !dbg !2964
  %bf.load563 = load i32, i32* %230, align 8, !dbg !2964
  %bf.clear564 = and i32 %bf.load563, 65535, !dbg !2964
  %cmp565 = icmp eq i32 %bf.clear564, 37, !dbg !2964
  br i1 %cmp565, label %land.lhs.true567, label %if.end571, !dbg !2965

land.lhs.true567:                                 ; preds = %lor.lhs.false562
  %231 = load %struct.rtx_def*, %struct.rtx_def** %op, align 8, !dbg !2966
  %232 = load i32, i32* %cl, align 4, !dbg !2967
  %233 = load i32, i32* %offset, align 4, !dbg !2968
  %234 = load i32, i32* %mode, align 4, !dbg !2969
  %call568 = call i32 @reg_fits_class_p(%struct.rtx_def* %231, i32 %232, i32 %233, i32 %234), !dbg !2970
  %tobool569 = icmp ne i32 %call568, 0, !dbg !2970
  br i1 %tobool569, label %if.then570, label %if.end571, !dbg !2971

if.then570:                                       ; preds = %land.lhs.true567, %land.lhs.true557, %land.lhs.true550, %if.then539
  store i32 1, i32* %win, align 4, !dbg !2972
  br label %if.end571, !dbg !2973

if.end571:                                        ; preds = %if.then570, %land.lhs.true567, %lor.lhs.false562
  br label %if.end579, !dbg !2974

if.else572:                                       ; preds = %cond.end535
  %235 = load %struct.rtx_def*, %struct.rtx_def** %op, align 8, !dbg !2975
  %236 = load i8*, i8** %p, align 8, !dbg !2975
  %call573 = call i32 @lookup_constraint(i8* %236), !dbg !2975
  %call574 = call zeroext i8 @constraint_satisfied_p(%struct.rtx_def* %235, i32 %call573), !dbg !2975
  %tobool575 = icmp ne i8 %call574, 0, !dbg !2975
  br i1 %tobool575, label %if.then576, label %if.else577, !dbg !2977

if.then576:                                       ; preds = %if.else572
  store i32 1, i32* %win, align 4, !dbg !2978
  br label %if.end578, !dbg !2979

if.else577:                                       ; preds = %if.else572
  br label %if.end578

if.end578:                                        ; preds = %if.else577, %if.then576
  br label %if.end579

if.end579:                                        ; preds = %if.end578, %if.end571
  br label %sw.epilog, !dbg !2980

sw.epilog:                                        ; preds = %if.end579, %if.end528, %if.end488, %if.end449, %if.end435, %if.end417, %if.then407, %if.end390, %if.end378, %if.end357, %if.end332, %if.end307, %if.then280, %if.then249, %sw.bb219, %if.end218, %if.end190, %if.end180, %if.end124, %do.end, %sw.bb110, %sw.bb109, %sw.bb
  br label %do.cond580, !dbg !2981

do.cond580:                                       ; preds = %sw.epilog
  %237 = load i32, i32* %len, align 4, !dbg !2982
  %238 = load i8*, i8** %p, align 8, !dbg !2983
  %idx.ext = sext i32 %237 to i64, !dbg !2983
  %add.ptr = getelementptr inbounds i8, i8* %238, i64 %idx.ext, !dbg !2983
  store i8* %add.ptr, i8** %p, align 8, !dbg !2983
  %239 = load i32, i32* %c, align 4, !dbg !2984
  %tobool581 = icmp ne i32 %239, 0, !dbg !2981
  br i1 %tobool581, label %do.body104, label %do.end582, !dbg !2981, !llvm.loop !2985

do.end582:                                        ; preds = %do.cond580
  %240 = load i8*, i8** %p, align 8, !dbg !2987
  %241 = load i32, i32* %opno, align 4, !dbg !2988
  %idxprom583 = sext i32 %241 to i64, !dbg !2989
  %arrayidx584 = getelementptr inbounds [30 x i8*], [30 x i8*]* %constraints, i64 0, i64 %idxprom583, !dbg !2989
  store i8* %240, i8** %arrayidx584, align 8, !dbg !2990
  %242 = load i32, i32* %win, align 4, !dbg !2991
  %tobool585 = icmp ne i32 %242, 0, !dbg !2991
  br i1 %tobool585, label %if.end587, label %if.then586, !dbg !2993

if.then586:                                       ; preds = %do.end582
  store i32 1, i32* %lose, align 4, !dbg !2994
  br label %if.end587, !dbg !2995

if.end587:                                        ; preds = %if.then586, %do.end582
  br label %for.inc588, !dbg !2996

for.inc588:                                       ; preds = %if.end587
  %243 = load i32, i32* %opno, align 4, !dbg !2997
  %inc589 = add nsw i32 %243, 1, !dbg !2997
  store i32 %inc589, i32* %opno, align 4, !dbg !2997
  br label %for.cond29, !dbg !2998, !llvm.loop !2999

for.end590:                                       ; preds = %for.cond29
  %244 = load i32, i32* %lose, align 4, !dbg !3001
  %tobool591 = icmp ne i32 %244, 0, !dbg !3001
  br i1 %tobool591, label %if.end685, label %if.then592, !dbg !3003

if.then592:                                       ; preds = %for.end590
  call void @llvm.dbg.declare(metadata i32* %opno593, metadata !3004, metadata !DIExpression()), !dbg !3006
  call void @llvm.dbg.declare(metadata i32* %eopno, metadata !3007, metadata !DIExpression()), !dbg !3008
  %245 = load i32, i32* %strict.addr, align 4, !dbg !3009
  %cmp594 = icmp sgt i32 %245, 0, !dbg !3011
  br i1 %cmp594, label %land.lhs.true596, label %if.end669, !dbg !3012

land.lhs.true596:                                 ; preds = %if.then592
  %246 = load i32, i32* %seen_earlyclobber_at, align 4, !dbg !3013
  %cmp597 = icmp sge i32 %246, 0, !dbg !3014
  br i1 %cmp597, label %if.then599, label %if.end669, !dbg !3015

if.then599:                                       ; preds = %land.lhs.true596
  %247 = load i32, i32* %seen_earlyclobber_at, align 4, !dbg !3016
  store i32 %247, i32* %eopno, align 4, !dbg !3018
  br label %for.cond600, !dbg !3019

for.cond600:                                      ; preds = %for.inc666, %if.then599
  %248 = load i32, i32* %eopno, align 4, !dbg !3020
  %249 = load i8, i8* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 7), align 2, !dbg !3022
  %conv601 = sext i8 %249 to i32, !dbg !3023
  %cmp602 = icmp slt i32 %248, %conv601, !dbg !3024
  br i1 %cmp602, label %for.body604, label %for.end668, !dbg !3025

for.body604:                                      ; preds = %for.cond600
  %250 = load i32, i32* %eopno, align 4, !dbg !3026
  %idxprom605 = sext i32 %250 to i64, !dbg !3028
  %arrayidx606 = getelementptr inbounds [30 x i32], [30 x i32]* %earlyclobber, i64 0, i64 %idxprom605, !dbg !3028
  %251 = load i32, i32* %arrayidx606, align 4, !dbg !3028
  %tobool607 = icmp ne i32 %251, 0, !dbg !3028
  br i1 %tobool607, label %land.lhs.true608, label %if.end665, !dbg !3029

land.lhs.true608:                                 ; preds = %for.body604
  %252 = load i32, i32* %eopno, align 4, !dbg !3030
  %idxprom609 = sext i32 %252 to i64, !dbg !3030
  %arrayidx610 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i64 0, i64 %idxprom609, !dbg !3030
  %253 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx610, align 8, !dbg !3030
  %254 = bitcast %struct.rtx_def* %253 to i32*, !dbg !3030
  %bf.load611 = load i32, i32* %254, align 8, !dbg !3030
  %bf.clear612 = and i32 %bf.load611, 65535, !dbg !3030
  %cmp613 = icmp eq i32 %bf.clear612, 37, !dbg !3030
  br i1 %cmp613, label %if.then615, label %if.end665, !dbg !3031

if.then615:                                       ; preds = %land.lhs.true608
  store i32 0, i32* %opno593, align 4, !dbg !3032
  br label %for.cond616, !dbg !3034

for.cond616:                                      ; preds = %for.inc662, %if.then615
  %255 = load i32, i32* %opno593, align 4, !dbg !3035
  %256 = load i8, i8* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 7), align 2, !dbg !3037
  %conv617 = sext i8 %256 to i32, !dbg !3038
  %cmp618 = icmp slt i32 %255, %conv617, !dbg !3039
  br i1 %cmp618, label %for.body620, label %for.end664, !dbg !3040

for.body620:                                      ; preds = %for.cond616
  %257 = load i32, i32* %opno593, align 4, !dbg !3041
  %idxprom621 = sext i32 %257 to i64, !dbg !3041
  %arrayidx622 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i64 0, i64 %idxprom621, !dbg !3041
  %258 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx622, align 8, !dbg !3041
  %259 = bitcast %struct.rtx_def* %258 to i32*, !dbg !3041
  %bf.load623 = load i32, i32* %259, align 8, !dbg !3041
  %bf.clear624 = and i32 %bf.load623, 65535, !dbg !3041
  %cmp625 = icmp eq i32 %bf.clear624, 43, !dbg !3041
  br i1 %cmp625, label %land.lhs.true632, label %lor.lhs.false627, !dbg !3043

lor.lhs.false627:                                 ; preds = %for.body620
  %260 = load i32, i32* %opno593, align 4, !dbg !3044
  %idxprom628 = sext i32 %260 to i64, !dbg !3045
  %arrayidx629 = getelementptr inbounds [30 x i32], [30 x i32]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 4), i64 0, i64 %idxprom628, !dbg !3045
  %261 = load i32, i32* %arrayidx629, align 4, !dbg !3045
  %cmp630 = icmp ne i32 %261, 1, !dbg !3046
  br i1 %cmp630, label %land.lhs.true632, label %if.end661, !dbg !3047

land.lhs.true632:                                 ; preds = %lor.lhs.false627, %for.body620
  %262 = load i32, i32* %opno593, align 4, !dbg !3048
  %263 = load i32, i32* %eopno, align 4, !dbg !3049
  %cmp633 = icmp ne i32 %262, %263, !dbg !3050
  br i1 %cmp633, label %land.lhs.true635, label %if.end661, !dbg !3051

land.lhs.true635:                                 ; preds = %land.lhs.true632
  %264 = load i32, i32* %opno593, align 4, !dbg !3052
  %idxprom636 = sext i32 %264 to i64, !dbg !3053
  %arrayidx637 = getelementptr inbounds [30 x i8*], [30 x i8*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 2), i64 0, i64 %idxprom636, !dbg !3053
  %265 = load i8*, i8** %arrayidx637, align 8, !dbg !3053
  %266 = load i8, i8* %265, align 1, !dbg !3054
  %conv638 = sext i8 %266 to i32, !dbg !3054
  %cmp639 = icmp ne i32 %conv638, 0, !dbg !3055
  br i1 %cmp639, label %land.lhs.true641, label %if.end661, !dbg !3056

land.lhs.true641:                                 ; preds = %land.lhs.true635
  %267 = load i32, i32* %opno593, align 4, !dbg !3057
  %idxprom642 = sext i32 %267 to i64, !dbg !3058
  %arrayidx643 = getelementptr inbounds [30 x i32], [30 x i32]* %matching_operands, i64 0, i64 %idxprom642, !dbg !3058
  %268 = load i32, i32* %arrayidx643, align 4, !dbg !3058
  %269 = load i32, i32* %eopno, align 4, !dbg !3059
  %cmp644 = icmp eq i32 %268, %269, !dbg !3060
  br i1 %cmp644, label %land.lhs.true646, label %land.lhs.true653, !dbg !3061

land.lhs.true646:                                 ; preds = %land.lhs.true641
  %270 = load i32, i32* %opno593, align 4, !dbg !3062
  %idxprom647 = sext i32 %270 to i64, !dbg !3063
  %arrayidx648 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i64 0, i64 %idxprom647, !dbg !3063
  %271 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx648, align 8, !dbg !3063
  %272 = load i32, i32* %eopno, align 4, !dbg !3064
  %idxprom649 = sext i32 %272 to i64, !dbg !3065
  %arrayidx650 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i64 0, i64 %idxprom649, !dbg !3065
  %273 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx650, align 8, !dbg !3065
  %call651 = call i32 @operands_match_p(%struct.rtx_def* %271, %struct.rtx_def* %273), !dbg !3066
  %tobool652 = icmp ne i32 %call651, 0, !dbg !3066
  br i1 %tobool652, label %if.end661, label %land.lhs.true653, !dbg !3067

land.lhs.true653:                                 ; preds = %land.lhs.true646, %land.lhs.true641
  %274 = load i32, i32* %opno593, align 4, !dbg !3068
  %idxprom654 = sext i32 %274 to i64, !dbg !3069
  %arrayidx655 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i64 0, i64 %idxprom654, !dbg !3069
  %275 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx655, align 8, !dbg !3069
  %276 = load i32, i32* %eopno, align 4, !dbg !3070
  %idxprom656 = sext i32 %276 to i64, !dbg !3071
  %arrayidx657 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i64 0, i64 %idxprom656, !dbg !3071
  %277 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx657, align 8, !dbg !3071
  %call658 = call i32 @safe_from_earlyclobber(%struct.rtx_def* %275, %struct.rtx_def* %277), !dbg !3072
  %tobool659 = icmp ne i32 %call658, 0, !dbg !3072
  br i1 %tobool659, label %if.end661, label %if.then660, !dbg !3073

if.then660:                                       ; preds = %land.lhs.true653
  store i32 1, i32* %lose, align 4, !dbg !3074
  br label %if.end661, !dbg !3075

if.end661:                                        ; preds = %if.then660, %land.lhs.true653, %land.lhs.true646, %land.lhs.true635, %land.lhs.true632, %lor.lhs.false627
  br label %for.inc662, !dbg !3076

for.inc662:                                       ; preds = %if.end661
  %278 = load i32, i32* %opno593, align 4, !dbg !3077
  %inc663 = add nsw i32 %278, 1, !dbg !3077
  store i32 %inc663, i32* %opno593, align 4, !dbg !3077
  br label %for.cond616, !dbg !3078, !llvm.loop !3079

for.end664:                                       ; preds = %for.cond616
  br label %if.end665, !dbg !3080

if.end665:                                        ; preds = %for.end664, %land.lhs.true608, %for.body604
  br label %for.inc666, !dbg !3030

for.inc666:                                       ; preds = %if.end665
  %279 = load i32, i32* %eopno, align 4, !dbg !3081
  %inc667 = add nsw i32 %279, 1, !dbg !3081
  store i32 %inc667, i32* %eopno, align 4, !dbg !3081
  br label %for.cond600, !dbg !3082, !llvm.loop !3083

for.end668:                                       ; preds = %for.cond600
  br label %if.end669, !dbg !3084

if.end669:                                        ; preds = %for.end668, %land.lhs.true596, %if.then592
  %280 = load i32, i32* %lose, align 4, !dbg !3085
  %tobool670 = icmp ne i32 %280, 0, !dbg !3085
  br i1 %tobool670, label %if.end684, label %if.then671, !dbg !3087

if.then671:                                       ; preds = %if.end669
  br label %while.cond, !dbg !3088

while.cond:                                       ; preds = %while.body, %if.then671
  %281 = load i32, i32* %funny_match_index, align 4, !dbg !3090
  %dec = add nsw i32 %281, -1, !dbg !3090
  store i32 %dec, i32* %funny_match_index, align 4, !dbg !3090
  %cmp672 = icmp sge i32 %dec, 0, !dbg !3091
  br i1 %cmp672, label %while.body, label %while.end, !dbg !3088

while.body:                                       ; preds = %while.cond
  %282 = load i32, i32* %funny_match_index, align 4, !dbg !3092
  %idxprom674 = sext i32 %282 to i64, !dbg !3094
  %arrayidx675 = getelementptr inbounds [30 x %struct.funny_match], [30 x %struct.funny_match]* %funny_match, i64 0, i64 %idxprom674, !dbg !3094
  %this_op676 = getelementptr inbounds %struct.funny_match, %struct.funny_match* %arrayidx675, i32 0, i32 0, !dbg !3095
  %283 = load i32, i32* %this_op676, align 8, !dbg !3095
  %idxprom677 = sext i32 %283 to i64, !dbg !3096
  %arrayidx678 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i64 0, i64 %idxprom677, !dbg !3096
  %284 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx678, align 8, !dbg !3096
  %285 = load i32, i32* %funny_match_index, align 4, !dbg !3097
  %idxprom679 = sext i32 %285 to i64, !dbg !3098
  %arrayidx680 = getelementptr inbounds [30 x %struct.funny_match], [30 x %struct.funny_match]* %funny_match, i64 0, i64 %idxprom679, !dbg !3098
  %other681 = getelementptr inbounds %struct.funny_match, %struct.funny_match* %arrayidx680, i32 0, i32 1, !dbg !3099
  %286 = load i32, i32* %other681, align 4, !dbg !3099
  %idxprom682 = sext i32 %286 to i64, !dbg !3100
  %arrayidx683 = getelementptr inbounds [30 x %struct.rtx_def*], [30 x %struct.rtx_def*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 0), i64 0, i64 %idxprom682, !dbg !3100
  store %struct.rtx_def* %284, %struct.rtx_def** %arrayidx683, align 8, !dbg !3101
  br label %while.cond, !dbg !3088, !llvm.loop !3102

while.end:                                        ; preds = %while.cond
  store i32 1, i32* %retval, align 4, !dbg !3104
  br label %return, !dbg !3104

if.end684:                                        ; preds = %if.end669
  br label %if.end685, !dbg !3105

if.end685:                                        ; preds = %if.end684, %for.end590
  %287 = load i32, i32* @which_alternative, align 4, !dbg !3106
  %inc686 = add nsw i32 %287, 1, !dbg !3106
  store i32 %inc686, i32* @which_alternative, align 4, !dbg !3106
  br label %do.cond687, !dbg !3107

do.cond687:                                       ; preds = %if.end685, %for.end26
  %288 = load i32, i32* @which_alternative, align 4, !dbg !3108
  %289 = load i8, i8* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 9), align 8, !dbg !3109
  %conv688 = sext i8 %289 to i32, !dbg !3110
  %cmp689 = icmp slt i32 %288, %conv688, !dbg !3111
  br i1 %cmp689, label %do.body, label %do.end691, !dbg !3107, !llvm.loop !3112

do.end691:                                        ; preds = %do.cond687
  store i32 -1, i32* @which_alternative, align 4, !dbg !3114
  %290 = load i32, i32* %strict.addr, align 4, !dbg !3115
  %cmp692 = icmp eq i32 %290, 0, !dbg !3117
  br i1 %cmp692, label %if.then694, label %if.else696, !dbg !3118

if.then694:                                       ; preds = %do.end691
  %call695 = call i32 @constrain_operands(i32 -1), !dbg !3119
  store i32 %call695, i32* %retval, align 4, !dbg !3120
  br label %return, !dbg !3120

if.else696:                                       ; preds = %do.end691
  store i32 0, i32* %retval, align 4, !dbg !3121
  br label %return, !dbg !3121

return:                                           ; preds = %if.else696, %if.then694, %while.end, %if.then
  %291 = load i32, i32* %retval, align 4, !dbg !3122
  ret i32 %291, !dbg !3122
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @asm_noperands(%struct.rtx_def* %body) #0 !dbg !3123 {
entry:
  %retval = alloca i32, align 4
  %body.addr = alloca %struct.rtx_def*, align 8
  %asm_op = alloca %struct.rtx_def*, align 8
  %n_sets = alloca i32, align 4
  %i = alloca i32, align 4
  %elt = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %body, %struct.rtx_def** %body.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %body.addr, metadata !3127, metadata !DIExpression()), !dbg !3128
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %asm_op, metadata !3129, metadata !DIExpression()), !dbg !3130
  %0 = load %struct.rtx_def*, %struct.rtx_def** %body.addr, align 8, !dbg !3131
  %call = call %struct.rtx_def* @extract_asm_operands(%struct.rtx_def* %0), !dbg !3132
  store %struct.rtx_def* %call, %struct.rtx_def** %asm_op, align 8, !dbg !3130
  call void @llvm.dbg.declare(metadata i32* %n_sets, metadata !3133, metadata !DIExpression()), !dbg !3134
  store i32 0, i32* %n_sets, align 4, !dbg !3134
  %1 = load %struct.rtx_def*, %struct.rtx_def** %asm_op, align 8, !dbg !3135
  %cmp = icmp eq %struct.rtx_def* %1, null, !dbg !3137
  br i1 %cmp, label %if.then, label %if.end, !dbg !3138

if.then:                                          ; preds = %entry
  store i32 -1, i32* %retval, align 4, !dbg !3139
  br label %return, !dbg !3139

if.end:                                           ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %body.addr, align 8, !dbg !3140
  %3 = bitcast %struct.rtx_def* %2 to i32*, !dbg !3140
  %bf.load = load i32, i32* %3, align 8, !dbg !3140
  %bf.clear = and i32 %bf.load, 65535, !dbg !3140
  %cmp1 = icmp eq i32 %bf.clear, 23, !dbg !3142
  br i1 %cmp1, label %if.then2, label %if.else, !dbg !3143

if.then2:                                         ; preds = %if.end
  store i32 1, i32* %n_sets, align 4, !dbg !3144
  br label %if.end108, !dbg !3145

if.else:                                          ; preds = %if.end
  %4 = load %struct.rtx_def*, %struct.rtx_def** %body.addr, align 8, !dbg !3146
  %5 = bitcast %struct.rtx_def* %4 to i32*, !dbg !3146
  %bf.load3 = load i32, i32* %5, align 8, !dbg !3146
  %bf.clear4 = and i32 %bf.load3, 65535, !dbg !3146
  %cmp5 = icmp eq i32 %bf.clear4, 15, !dbg !3148
  br i1 %cmp5, label %if.then6, label %if.end107, !dbg !3149

if.then6:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3150, metadata !DIExpression()), !dbg !3152
  %6 = load %struct.rtx_def*, %struct.rtx_def** %body.addr, align 8, !dbg !3153
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i32 0, i32 1, !dbg !3153
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !3153
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !3153
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx to %struct.rtvec_def**, !dbg !3153
  %7 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !3153
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %7, i32 0, i32 1, !dbg !3153
  %arrayidx7 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i64 0, i64 0, !dbg !3153
  %8 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx7, align 8, !dbg !3153
  %9 = bitcast %struct.rtx_def* %8 to i32*, !dbg !3153
  %bf.load8 = load i32, i32* %9, align 8, !dbg !3153
  %bf.clear9 = and i32 %bf.load8, 65535, !dbg !3153
  %cmp10 = icmp eq i32 %bf.clear9, 23, !dbg !3155
  br i1 %cmp10, label %if.then11, label %if.else81, !dbg !3156

if.then11:                                        ; preds = %if.then6
  %10 = load %struct.rtx_def*, %struct.rtx_def** %body.addr, align 8, !dbg !3157
  %u12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i32 0, i32 1, !dbg !3157
  %fld13 = bitcast %union.u* %u12 to [1 x %union.rtunion_def]*, !dbg !3157
  %arrayidx14 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld13, i64 0, i64 0, !dbg !3157
  %rt_rtvec15 = bitcast %union.rtunion_def* %arrayidx14 to %struct.rtvec_def**, !dbg !3157
  %11 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec15, align 8, !dbg !3157
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %11, i32 0, i32 0, !dbg !3157
  %12 = load i32, i32* %num_elem, align 8, !dbg !3157
  store i32 %12, i32* %i, align 4, !dbg !3160
  br label %for.cond, !dbg !3161

for.cond:                                         ; preds = %for.inc, %if.then11
  %13 = load i32, i32* %i, align 4, !dbg !3162
  %cmp16 = icmp sgt i32 %13, 0, !dbg !3164
  br i1 %cmp16, label %for.body, label %for.end, !dbg !3165

for.body:                                         ; preds = %for.cond
  %14 = load %struct.rtx_def*, %struct.rtx_def** %body.addr, align 8, !dbg !3166
  %u17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i32 0, i32 1, !dbg !3166
  %fld18 = bitcast %union.u* %u17 to [1 x %union.rtunion_def]*, !dbg !3166
  %arrayidx19 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld18, i64 0, i64 0, !dbg !3166
  %rt_rtvec20 = bitcast %union.rtunion_def* %arrayidx19 to %struct.rtvec_def**, !dbg !3166
  %15 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec20, align 8, !dbg !3166
  %elem21 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %15, i32 0, i32 1, !dbg !3166
  %16 = load i32, i32* %i, align 4, !dbg !3166
  %sub = sub nsw i32 %16, 1, !dbg !3166
  %idxprom = sext i32 %sub to i64, !dbg !3166
  %arrayidx22 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem21, i64 0, i64 %idxprom, !dbg !3166
  %17 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx22, align 8, !dbg !3166
  %18 = bitcast %struct.rtx_def* %17 to i32*, !dbg !3166
  %bf.load23 = load i32, i32* %18, align 8, !dbg !3166
  %bf.clear24 = and i32 %bf.load23, 65535, !dbg !3166
  %cmp25 = icmp eq i32 %bf.clear24, 23, !dbg !3169
  br i1 %cmp25, label %if.then26, label %if.end27, !dbg !3170

if.then26:                                        ; preds = %for.body
  br label %for.end, !dbg !3171

if.end27:                                         ; preds = %for.body
  %19 = load %struct.rtx_def*, %struct.rtx_def** %body.addr, align 8, !dbg !3172
  %u28 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i32 0, i32 1, !dbg !3172
  %fld29 = bitcast %union.u* %u28 to [1 x %union.rtunion_def]*, !dbg !3172
  %arrayidx30 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld29, i64 0, i64 0, !dbg !3172
  %rt_rtvec31 = bitcast %union.rtunion_def* %arrayidx30 to %struct.rtvec_def**, !dbg !3172
  %20 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec31, align 8, !dbg !3172
  %elem32 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %20, i32 0, i32 1, !dbg !3172
  %21 = load i32, i32* %i, align 4, !dbg !3172
  %sub33 = sub nsw i32 %21, 1, !dbg !3172
  %idxprom34 = sext i32 %sub33 to i64, !dbg !3172
  %arrayidx35 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem32, i64 0, i64 %idxprom34, !dbg !3172
  %22 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx35, align 8, !dbg !3172
  %23 = bitcast %struct.rtx_def* %22 to i32*, !dbg !3172
  %bf.load36 = load i32, i32* %23, align 8, !dbg !3172
  %bf.clear37 = and i32 %bf.load36, 65535, !dbg !3172
  %cmp38 = icmp ne i32 %bf.clear37, 25, !dbg !3174
  br i1 %cmp38, label %if.then39, label %if.end40, !dbg !3175

if.then39:                                        ; preds = %if.end27
  store i32 -1, i32* %retval, align 4, !dbg !3176
  br label %return, !dbg !3176

if.end40:                                         ; preds = %if.end27
  br label %for.inc, !dbg !3177

for.inc:                                          ; preds = %if.end40
  %24 = load i32, i32* %i, align 4, !dbg !3178
  %dec = add nsw i32 %24, -1, !dbg !3178
  store i32 %dec, i32* %i, align 4, !dbg !3178
  br label %for.cond, !dbg !3179, !llvm.loop !3180

for.end:                                          ; preds = %if.then26, %for.cond
  %25 = load i32, i32* %i, align 4, !dbg !3182
  store i32 %25, i32* %n_sets, align 4, !dbg !3183
  store i32 0, i32* %i, align 4, !dbg !3184
  br label %for.cond41, !dbg !3186

for.cond41:                                       ; preds = %for.inc79, %for.end
  %26 = load i32, i32* %i, align 4, !dbg !3187
  %27 = load i32, i32* %n_sets, align 4, !dbg !3189
  %cmp42 = icmp slt i32 %26, %27, !dbg !3190
  br i1 %cmp42, label %for.body43, label %for.end80, !dbg !3191

for.body43:                                       ; preds = %for.cond41
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %elt, metadata !3192, metadata !DIExpression()), !dbg !3194
  %28 = load %struct.rtx_def*, %struct.rtx_def** %body.addr, align 8, !dbg !3195
  %u44 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %28, i32 0, i32 1, !dbg !3195
  %fld45 = bitcast %union.u* %u44 to [1 x %union.rtunion_def]*, !dbg !3195
  %arrayidx46 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld45, i64 0, i64 0, !dbg !3195
  %rt_rtvec47 = bitcast %union.rtunion_def* %arrayidx46 to %struct.rtvec_def**, !dbg !3195
  %29 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec47, align 8, !dbg !3195
  %elem48 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %29, i32 0, i32 1, !dbg !3195
  %30 = load i32, i32* %i, align 4, !dbg !3195
  %idxprom49 = sext i32 %30 to i64, !dbg !3195
  %arrayidx50 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem48, i64 0, i64 %idxprom49, !dbg !3195
  %31 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx50, align 8, !dbg !3195
  store %struct.rtx_def* %31, %struct.rtx_def** %elt, align 8, !dbg !3194
  %32 = load %struct.rtx_def*, %struct.rtx_def** %elt, align 8, !dbg !3196
  %33 = bitcast %struct.rtx_def* %32 to i32*, !dbg !3196
  %bf.load51 = load i32, i32* %33, align 8, !dbg !3196
  %bf.clear52 = and i32 %bf.load51, 65535, !dbg !3196
  %cmp53 = icmp ne i32 %bf.clear52, 23, !dbg !3198
  br i1 %cmp53, label %if.then54, label %if.end55, !dbg !3199

if.then54:                                        ; preds = %for.body43
  store i32 -1, i32* %retval, align 4, !dbg !3200
  br label %return, !dbg !3200

if.end55:                                         ; preds = %for.body43
  %34 = load %struct.rtx_def*, %struct.rtx_def** %elt, align 8, !dbg !3201
  %u56 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %34, i32 0, i32 1, !dbg !3201
  %fld57 = bitcast %union.u* %u56 to [1 x %union.rtunion_def]*, !dbg !3201
  %arrayidx58 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld57, i64 0, i64 1, !dbg !3201
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx58 to %struct.rtx_def**, !dbg !3201
  %35 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3201
  %36 = bitcast %struct.rtx_def* %35 to i32*, !dbg !3201
  %bf.load59 = load i32, i32* %36, align 8, !dbg !3201
  %bf.clear60 = and i32 %bf.load59, 65535, !dbg !3201
  %cmp61 = icmp ne i32 %bf.clear60, 17, !dbg !3203
  br i1 %cmp61, label %if.then62, label %if.end63, !dbg !3204

if.then62:                                        ; preds = %if.end55
  store i32 -1, i32* %retval, align 4, !dbg !3205
  br label %return, !dbg !3205

if.end63:                                         ; preds = %if.end55
  %37 = load %struct.rtx_def*, %struct.rtx_def** %elt, align 8, !dbg !3206
  %u64 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %37, i32 0, i32 1, !dbg !3206
  %fld65 = bitcast %union.u* %u64 to [1 x %union.rtunion_def]*, !dbg !3206
  %arrayidx66 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld65, i64 0, i64 1, !dbg !3206
  %rt_rtx67 = bitcast %union.rtunion_def* %arrayidx66 to %struct.rtx_def**, !dbg !3206
  %38 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx67, align 8, !dbg !3206
  %u68 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %38, i32 0, i32 1, !dbg !3206
  %fld69 = bitcast %union.u* %u68 to [1 x %union.rtunion_def]*, !dbg !3206
  %arrayidx70 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld69, i64 0, i64 3, !dbg !3206
  %rt_rtvec71 = bitcast %union.rtunion_def* %arrayidx70 to %struct.rtvec_def**, !dbg !3206
  %39 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec71, align 8, !dbg !3206
  %40 = load %struct.rtx_def*, %struct.rtx_def** %asm_op, align 8, !dbg !3208
  %u72 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %40, i32 0, i32 1, !dbg !3208
  %fld73 = bitcast %union.u* %u72 to [1 x %union.rtunion_def]*, !dbg !3208
  %arrayidx74 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld73, i64 0, i64 3, !dbg !3208
  %rt_rtvec75 = bitcast %union.rtunion_def* %arrayidx74 to %struct.rtvec_def**, !dbg !3208
  %41 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec75, align 8, !dbg !3208
  %cmp76 = icmp ne %struct.rtvec_def* %39, %41, !dbg !3209
  br i1 %cmp76, label %if.then77, label %if.end78, !dbg !3210

if.then77:                                        ; preds = %if.end63
  store i32 -1, i32* %retval, align 4, !dbg !3211
  br label %return, !dbg !3211

if.end78:                                         ; preds = %if.end63
  br label %for.inc79, !dbg !3212

for.inc79:                                        ; preds = %if.end78
  %42 = load i32, i32* %i, align 4, !dbg !3213
  %inc = add nsw i32 %42, 1, !dbg !3213
  store i32 %inc, i32* %i, align 4, !dbg !3213
  br label %for.cond41, !dbg !3214, !llvm.loop !3215

for.end80:                                        ; preds = %for.cond41
  br label %if.end106, !dbg !3217

if.else81:                                        ; preds = %if.then6
  %43 = load %struct.rtx_def*, %struct.rtx_def** %body.addr, align 8, !dbg !3218
  %u82 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %43, i32 0, i32 1, !dbg !3218
  %fld83 = bitcast %union.u* %u82 to [1 x %union.rtunion_def]*, !dbg !3218
  %arrayidx84 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld83, i64 0, i64 0, !dbg !3218
  %rt_rtvec85 = bitcast %union.rtunion_def* %arrayidx84 to %struct.rtvec_def**, !dbg !3218
  %44 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec85, align 8, !dbg !3218
  %num_elem86 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %44, i32 0, i32 0, !dbg !3218
  %45 = load i32, i32* %num_elem86, align 8, !dbg !3218
  %sub87 = sub nsw i32 %45, 1, !dbg !3221
  store i32 %sub87, i32* %i, align 4, !dbg !3222
  br label %for.cond88, !dbg !3223

for.cond88:                                       ; preds = %for.inc103, %if.else81
  %46 = load i32, i32* %i, align 4, !dbg !3224
  %cmp89 = icmp sgt i32 %46, 0, !dbg !3226
  br i1 %cmp89, label %for.body90, label %for.end105, !dbg !3227

for.body90:                                       ; preds = %for.cond88
  %47 = load %struct.rtx_def*, %struct.rtx_def** %body.addr, align 8, !dbg !3228
  %u91 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %47, i32 0, i32 1, !dbg !3228
  %fld92 = bitcast %union.u* %u91 to [1 x %union.rtunion_def]*, !dbg !3228
  %arrayidx93 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld92, i64 0, i64 0, !dbg !3228
  %rt_rtvec94 = bitcast %union.rtunion_def* %arrayidx93 to %struct.rtvec_def**, !dbg !3228
  %48 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec94, align 8, !dbg !3228
  %elem95 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %48, i32 0, i32 1, !dbg !3228
  %49 = load i32, i32* %i, align 4, !dbg !3228
  %idxprom96 = sext i32 %49 to i64, !dbg !3228
  %arrayidx97 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem95, i64 0, i64 %idxprom96, !dbg !3228
  %50 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx97, align 8, !dbg !3228
  %51 = bitcast %struct.rtx_def* %50 to i32*, !dbg !3228
  %bf.load98 = load i32, i32* %51, align 8, !dbg !3228
  %bf.clear99 = and i32 %bf.load98, 65535, !dbg !3228
  %cmp100 = icmp ne i32 %bf.clear99, 25, !dbg !3230
  br i1 %cmp100, label %if.then101, label %if.end102, !dbg !3231

if.then101:                                       ; preds = %for.body90
  store i32 -1, i32* %retval, align 4, !dbg !3232
  br label %return, !dbg !3232

if.end102:                                        ; preds = %for.body90
  br label %for.inc103, !dbg !3233

for.inc103:                                       ; preds = %if.end102
  %52 = load i32, i32* %i, align 4, !dbg !3234
  %dec104 = add nsw i32 %52, -1, !dbg !3234
  store i32 %dec104, i32* %i, align 4, !dbg !3234
  br label %for.cond88, !dbg !3235, !llvm.loop !3236

for.end105:                                       ; preds = %for.cond88
  br label %if.end106

if.end106:                                        ; preds = %for.end105, %for.end80
  br label %if.end107, !dbg !3238

if.end107:                                        ; preds = %if.end106, %if.else
  br label %if.end108

if.end108:                                        ; preds = %if.end107, %if.then2
  %53 = load %struct.rtx_def*, %struct.rtx_def** %asm_op, align 8, !dbg !3239
  %u109 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %53, i32 0, i32 1, !dbg !3239
  %fld110 = bitcast %union.u* %u109 to [1 x %union.rtunion_def]*, !dbg !3239
  %arrayidx111 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld110, i64 0, i64 3, !dbg !3239
  %rt_rtvec112 = bitcast %union.rtunion_def* %arrayidx111 to %struct.rtvec_def**, !dbg !3239
  %54 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec112, align 8, !dbg !3239
  %num_elem113 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %54, i32 0, i32 0, !dbg !3239
  %55 = load i32, i32* %num_elem113, align 8, !dbg !3239
  %56 = load %struct.rtx_def*, %struct.rtx_def** %asm_op, align 8, !dbg !3240
  %u114 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %56, i32 0, i32 1, !dbg !3240
  %fld115 = bitcast %union.u* %u114 to [1 x %union.rtunion_def]*, !dbg !3240
  %arrayidx116 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld115, i64 0, i64 5, !dbg !3240
  %rt_rtvec117 = bitcast %union.rtunion_def* %arrayidx116 to %struct.rtvec_def**, !dbg !3240
  %57 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec117, align 8, !dbg !3240
  %num_elem118 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %57, i32 0, i32 0, !dbg !3240
  %58 = load i32, i32* %num_elem118, align 8, !dbg !3240
  %add = add nsw i32 %55, %58, !dbg !3241
  %59 = load i32, i32* %n_sets, align 4, !dbg !3242
  %add119 = add nsw i32 %add, %59, !dbg !3243
  store i32 %add119, i32* %retval, align 4, !dbg !3244
  br label %return, !dbg !3244

return:                                           ; preds = %if.end108, %if.then101, %if.then77, %if.then62, %if.then54, %if.then39, %if.then
  %60 = load i32, i32* %retval, align 4, !dbg !3245
  ret i32 %60, !dbg !3245
}

; Function Attrs: noinline nounwind uwtable
define dso_local i8* @decode_asm_operands(%struct.rtx_def* %body, %struct.rtx_def** %operands, %struct.rtx_def*** %operand_locs, i8** %constraints, i32* %modes, i32* %loc) #0 !dbg !3246 {
entry:
  %body.addr = alloca %struct.rtx_def*, align 8
  %operands.addr = alloca %struct.rtx_def**, align 8
  %operand_locs.addr = alloca %struct.rtx_def***, align 8
  %constraints.addr = alloca i8**, align 8
  %modes.addr = alloca i32*, align 8
  %loc.addr = alloca i32*, align 8
  %nbase = alloca i32, align 4
  %n = alloca i32, align 4
  %i = alloca i32, align 4
  %asmop = alloca %struct.rtx_def*, align 8
  %nparallel = alloca i32, align 4
  store %struct.rtx_def* %body, %struct.rtx_def** %body.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %body.addr, metadata !3252, metadata !DIExpression()), !dbg !3253
  store %struct.rtx_def** %operands, %struct.rtx_def*** %operands.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def*** %operands.addr, metadata !3254, metadata !DIExpression()), !dbg !3255
  store %struct.rtx_def*** %operand_locs, %struct.rtx_def**** %operand_locs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def**** %operand_locs.addr, metadata !3256, metadata !DIExpression()), !dbg !3257
  store i8** %constraints, i8*** %constraints.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %constraints.addr, metadata !3258, metadata !DIExpression()), !dbg !3259
  store i32* %modes, i32** %modes.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %modes.addr, metadata !3260, metadata !DIExpression()), !dbg !3261
  store i32* %loc, i32** %loc.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %loc.addr, metadata !3262, metadata !DIExpression()), !dbg !3263
  call void @llvm.dbg.declare(metadata i32* %nbase, metadata !3264, metadata !DIExpression()), !dbg !3265
  store i32 0, i32* %nbase, align 4, !dbg !3265
  call void @llvm.dbg.declare(metadata i32* %n, metadata !3266, metadata !DIExpression()), !dbg !3267
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3268, metadata !DIExpression()), !dbg !3269
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %asmop, metadata !3270, metadata !DIExpression()), !dbg !3271
  %0 = load %struct.rtx_def*, %struct.rtx_def** %body.addr, align 8, !dbg !3272
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !3272
  %bf.load = load i32, i32* %1, align 8, !dbg !3272
  %bf.clear = and i32 %bf.load, 65535, !dbg !3272
  switch i32 %bf.clear, label %sw.default [
    i32 17, label %sw.bb
    i32 23, label %sw.bb1
    i32 15, label %sw.bb32
  ], !dbg !3273

sw.bb:                                            ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %body.addr, align 8, !dbg !3274
  store %struct.rtx_def* %2, %struct.rtx_def** %asmop, align 8, !dbg !3276
  br label %sw.epilog, !dbg !3277

sw.bb1:                                           ; preds = %entry
  %3 = load %struct.rtx_def*, %struct.rtx_def** %body.addr, align 8, !dbg !3278
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i32 0, i32 1, !dbg !3278
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !3278
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 1, !dbg !3278
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !3278
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3278
  store %struct.rtx_def* %4, %struct.rtx_def** %asmop, align 8, !dbg !3279
  %5 = load %struct.rtx_def**, %struct.rtx_def*** %operands.addr, align 8, !dbg !3280
  %tobool = icmp ne %struct.rtx_def** %5, null, !dbg !3280
  br i1 %tobool, label %if.then, label %if.end, !dbg !3282

if.then:                                          ; preds = %sw.bb1
  %6 = load %struct.rtx_def*, %struct.rtx_def** %body.addr, align 8, !dbg !3283
  %u2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i32 0, i32 1, !dbg !3283
  %fld3 = bitcast %union.u* %u2 to [1 x %union.rtunion_def]*, !dbg !3283
  %arrayidx4 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3, i64 0, i64 0, !dbg !3283
  %rt_rtx5 = bitcast %union.rtunion_def* %arrayidx4 to %struct.rtx_def**, !dbg !3283
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx5, align 8, !dbg !3283
  %8 = load %struct.rtx_def**, %struct.rtx_def*** %operands.addr, align 8, !dbg !3284
  %arrayidx6 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %8, i64 0, !dbg !3284
  store %struct.rtx_def* %7, %struct.rtx_def** %arrayidx6, align 8, !dbg !3285
  br label %if.end, !dbg !3284

if.end:                                           ; preds = %if.then, %sw.bb1
  %9 = load %struct.rtx_def***, %struct.rtx_def**** %operand_locs.addr, align 8, !dbg !3286
  %tobool7 = icmp ne %struct.rtx_def*** %9, null, !dbg !3286
  br i1 %tobool7, label %if.then8, label %if.end14, !dbg !3288

if.then8:                                         ; preds = %if.end
  %10 = load %struct.rtx_def*, %struct.rtx_def** %body.addr, align 8, !dbg !3289
  %u9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i32 0, i32 1, !dbg !3289
  %fld10 = bitcast %union.u* %u9 to [1 x %union.rtunion_def]*, !dbg !3289
  %arrayidx11 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld10, i64 0, i64 0, !dbg !3289
  %rt_rtx12 = bitcast %union.rtunion_def* %arrayidx11 to %struct.rtx_def**, !dbg !3289
  %11 = load %struct.rtx_def***, %struct.rtx_def**** %operand_locs.addr, align 8, !dbg !3290
  %arrayidx13 = getelementptr inbounds %struct.rtx_def**, %struct.rtx_def*** %11, i64 0, !dbg !3290
  store %struct.rtx_def** %rt_rtx12, %struct.rtx_def*** %arrayidx13, align 8, !dbg !3291
  br label %if.end14, !dbg !3290

if.end14:                                         ; preds = %if.then8, %if.end
  %12 = load i8**, i8*** %constraints.addr, align 8, !dbg !3292
  %tobool15 = icmp ne i8** %12, null, !dbg !3292
  br i1 %tobool15, label %if.then16, label %if.end21, !dbg !3294

if.then16:                                        ; preds = %if.end14
  %13 = load %struct.rtx_def*, %struct.rtx_def** %asmop, align 8, !dbg !3295
  %u17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %13, i32 0, i32 1, !dbg !3295
  %fld18 = bitcast %union.u* %u17 to [1 x %union.rtunion_def]*, !dbg !3295
  %arrayidx19 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld18, i64 0, i64 1, !dbg !3295
  %rt_str = bitcast %union.rtunion_def* %arrayidx19 to i8**, !dbg !3295
  %14 = load i8*, i8** %rt_str, align 8, !dbg !3295
  %15 = load i8**, i8*** %constraints.addr, align 8, !dbg !3296
  %arrayidx20 = getelementptr inbounds i8*, i8** %15, i64 0, !dbg !3296
  store i8* %14, i8** %arrayidx20, align 8, !dbg !3297
  br label %if.end21, !dbg !3296

if.end21:                                         ; preds = %if.then16, %if.end14
  %16 = load i32*, i32** %modes.addr, align 8, !dbg !3298
  %tobool22 = icmp ne i32* %16, null, !dbg !3298
  br i1 %tobool22, label %if.then23, label %if.end31, !dbg !3300

if.then23:                                        ; preds = %if.end21
  %17 = load %struct.rtx_def*, %struct.rtx_def** %body.addr, align 8, !dbg !3301
  %u24 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i32 0, i32 1, !dbg !3301
  %fld25 = bitcast %union.u* %u24 to [1 x %union.rtunion_def]*, !dbg !3301
  %arrayidx26 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld25, i64 0, i64 0, !dbg !3301
  %rt_rtx27 = bitcast %union.rtunion_def* %arrayidx26 to %struct.rtx_def**, !dbg !3301
  %18 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx27, align 8, !dbg !3301
  %19 = bitcast %struct.rtx_def* %18 to i32*, !dbg !3301
  %bf.load28 = load i32, i32* %19, align 8, !dbg !3301
  %bf.lshr = lshr i32 %bf.load28, 16, !dbg !3301
  %bf.clear29 = and i32 %bf.lshr, 255, !dbg !3301
  %20 = load i32*, i32** %modes.addr, align 8, !dbg !3302
  %arrayidx30 = getelementptr inbounds i32, i32* %20, i64 0, !dbg !3302
  store i32 %bf.clear29, i32* %arrayidx30, align 4, !dbg !3303
  br label %if.end31, !dbg !3302

if.end31:                                         ; preds = %if.then23, %if.end21
  store i32 1, i32* %nbase, align 4, !dbg !3304
  br label %sw.epilog, !dbg !3305

sw.bb32:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %nparallel, metadata !3306, metadata !DIExpression()), !dbg !3308
  %21 = load %struct.rtx_def*, %struct.rtx_def** %body.addr, align 8, !dbg !3309
  %u33 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %21, i32 0, i32 1, !dbg !3309
  %fld34 = bitcast %union.u* %u33 to [1 x %union.rtunion_def]*, !dbg !3309
  %arrayidx35 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld34, i64 0, i64 0, !dbg !3309
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx35 to %struct.rtvec_def**, !dbg !3309
  %22 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !3309
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %22, i32 0, i32 0, !dbg !3309
  %23 = load i32, i32* %num_elem, align 8, !dbg !3309
  store i32 %23, i32* %nparallel, align 4, !dbg !3308
  %24 = load %struct.rtx_def*, %struct.rtx_def** %body.addr, align 8, !dbg !3310
  %u36 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %24, i32 0, i32 1, !dbg !3310
  %fld37 = bitcast %union.u* %u36 to [1 x %union.rtunion_def]*, !dbg !3310
  %arrayidx38 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld37, i64 0, i64 0, !dbg !3310
  %rt_rtvec39 = bitcast %union.rtunion_def* %arrayidx38 to %struct.rtvec_def**, !dbg !3310
  %25 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec39, align 8, !dbg !3310
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %25, i32 0, i32 1, !dbg !3310
  %arrayidx40 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i64 0, i64 0, !dbg !3310
  %26 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx40, align 8, !dbg !3310
  store %struct.rtx_def* %26, %struct.rtx_def** %asmop, align 8, !dbg !3311
  %27 = load %struct.rtx_def*, %struct.rtx_def** %asmop, align 8, !dbg !3312
  %28 = bitcast %struct.rtx_def* %27 to i32*, !dbg !3312
  %bf.load41 = load i32, i32* %28, align 8, !dbg !3312
  %bf.clear42 = and i32 %bf.load41, 65535, !dbg !3312
  %cmp = icmp eq i32 %bf.clear42, 23, !dbg !3314
  br i1 %cmp, label %if.then43, label %if.end131, !dbg !3315

if.then43:                                        ; preds = %sw.bb32
  %29 = load %struct.rtx_def*, %struct.rtx_def** %asmop, align 8, !dbg !3316
  %u44 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %29, i32 0, i32 1, !dbg !3316
  %fld45 = bitcast %union.u* %u44 to [1 x %union.rtunion_def]*, !dbg !3316
  %arrayidx46 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld45, i64 0, i64 1, !dbg !3316
  %rt_rtx47 = bitcast %union.rtunion_def* %arrayidx46 to %struct.rtx_def**, !dbg !3316
  %30 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx47, align 8, !dbg !3316
  store %struct.rtx_def* %30, %struct.rtx_def** %asmop, align 8, !dbg !3318
  store i32 0, i32* %i, align 4, !dbg !3319
  br label %for.cond, !dbg !3321

for.cond:                                         ; preds = %for.inc, %if.then43
  %31 = load i32, i32* %i, align 4, !dbg !3322
  %32 = load i32, i32* %nparallel, align 4, !dbg !3324
  %cmp48 = icmp slt i32 %31, %32, !dbg !3325
  br i1 %cmp48, label %for.body, label %for.end, !dbg !3326

for.body:                                         ; preds = %for.cond
  %33 = load %struct.rtx_def*, %struct.rtx_def** %body.addr, align 8, !dbg !3327
  %u49 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %33, i32 0, i32 1, !dbg !3327
  %fld50 = bitcast %union.u* %u49 to [1 x %union.rtunion_def]*, !dbg !3327
  %arrayidx51 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld50, i64 0, i64 0, !dbg !3327
  %rt_rtvec52 = bitcast %union.rtunion_def* %arrayidx51 to %struct.rtvec_def**, !dbg !3327
  %34 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec52, align 8, !dbg !3327
  %elem53 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %34, i32 0, i32 1, !dbg !3327
  %35 = load i32, i32* %i, align 4, !dbg !3327
  %idxprom = sext i32 %35 to i64, !dbg !3327
  %arrayidx54 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem53, i64 0, i64 %idxprom, !dbg !3327
  %36 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx54, align 8, !dbg !3327
  %37 = bitcast %struct.rtx_def* %36 to i32*, !dbg !3327
  %bf.load55 = load i32, i32* %37, align 8, !dbg !3327
  %bf.clear56 = and i32 %bf.load55, 65535, !dbg !3327
  %cmp57 = icmp eq i32 %bf.clear56, 25, !dbg !3330
  br i1 %cmp57, label %if.then58, label %if.end59, !dbg !3331

if.then58:                                        ; preds = %for.body
  br label %for.end, !dbg !3332

if.end59:                                         ; preds = %for.body
  %38 = load %struct.rtx_def**, %struct.rtx_def*** %operands.addr, align 8, !dbg !3333
  %tobool60 = icmp ne %struct.rtx_def** %38, null, !dbg !3333
  br i1 %tobool60, label %if.then61, label %if.end75, !dbg !3335

if.then61:                                        ; preds = %if.end59
  %39 = load %struct.rtx_def*, %struct.rtx_def** %body.addr, align 8, !dbg !3336
  %u62 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %39, i32 0, i32 1, !dbg !3336
  %fld63 = bitcast %union.u* %u62 to [1 x %union.rtunion_def]*, !dbg !3336
  %arrayidx64 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld63, i64 0, i64 0, !dbg !3336
  %rt_rtvec65 = bitcast %union.rtunion_def* %arrayidx64 to %struct.rtvec_def**, !dbg !3336
  %40 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec65, align 8, !dbg !3336
  %elem66 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %40, i32 0, i32 1, !dbg !3336
  %41 = load i32, i32* %i, align 4, !dbg !3336
  %idxprom67 = sext i32 %41 to i64, !dbg !3336
  %arrayidx68 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem66, i64 0, i64 %idxprom67, !dbg !3336
  %42 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx68, align 8, !dbg !3336
  %u69 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %42, i32 0, i32 1, !dbg !3336
  %fld70 = bitcast %union.u* %u69 to [1 x %union.rtunion_def]*, !dbg !3336
  %arrayidx71 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld70, i64 0, i64 0, !dbg !3336
  %rt_rtx72 = bitcast %union.rtunion_def* %arrayidx71 to %struct.rtx_def**, !dbg !3336
  %43 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx72, align 8, !dbg !3336
  %44 = load %struct.rtx_def**, %struct.rtx_def*** %operands.addr, align 8, !dbg !3337
  %45 = load i32, i32* %i, align 4, !dbg !3338
  %idxprom73 = sext i32 %45 to i64, !dbg !3337
  %arrayidx74 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %44, i64 %idxprom73, !dbg !3337
  store %struct.rtx_def* %43, %struct.rtx_def** %arrayidx74, align 8, !dbg !3339
  br label %if.end75, !dbg !3337

if.end75:                                         ; preds = %if.then61, %if.end59
  %46 = load %struct.rtx_def***, %struct.rtx_def**** %operand_locs.addr, align 8, !dbg !3340
  %tobool76 = icmp ne %struct.rtx_def*** %46, null, !dbg !3340
  br i1 %tobool76, label %if.then77, label %if.end91, !dbg !3342

if.then77:                                        ; preds = %if.end75
  %47 = load %struct.rtx_def*, %struct.rtx_def** %body.addr, align 8, !dbg !3343
  %u78 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %47, i32 0, i32 1, !dbg !3343
  %fld79 = bitcast %union.u* %u78 to [1 x %union.rtunion_def]*, !dbg !3343
  %arrayidx80 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld79, i64 0, i64 0, !dbg !3343
  %rt_rtvec81 = bitcast %union.rtunion_def* %arrayidx80 to %struct.rtvec_def**, !dbg !3343
  %48 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec81, align 8, !dbg !3343
  %elem82 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %48, i32 0, i32 1, !dbg !3343
  %49 = load i32, i32* %i, align 4, !dbg !3343
  %idxprom83 = sext i32 %49 to i64, !dbg !3343
  %arrayidx84 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem82, i64 0, i64 %idxprom83, !dbg !3343
  %50 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx84, align 8, !dbg !3343
  %u85 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %50, i32 0, i32 1, !dbg !3343
  %fld86 = bitcast %union.u* %u85 to [1 x %union.rtunion_def]*, !dbg !3343
  %arrayidx87 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld86, i64 0, i64 0, !dbg !3343
  %rt_rtx88 = bitcast %union.rtunion_def* %arrayidx87 to %struct.rtx_def**, !dbg !3343
  %51 = load %struct.rtx_def***, %struct.rtx_def**** %operand_locs.addr, align 8, !dbg !3344
  %52 = load i32, i32* %i, align 4, !dbg !3345
  %idxprom89 = sext i32 %52 to i64, !dbg !3344
  %arrayidx90 = getelementptr inbounds %struct.rtx_def**, %struct.rtx_def*** %51, i64 %idxprom89, !dbg !3344
  store %struct.rtx_def** %rt_rtx88, %struct.rtx_def*** %arrayidx90, align 8, !dbg !3346
  br label %if.end91, !dbg !3344

if.end91:                                         ; preds = %if.then77, %if.end75
  %53 = load i8**, i8*** %constraints.addr, align 8, !dbg !3347
  %tobool92 = icmp ne i8** %53, null, !dbg !3347
  br i1 %tobool92, label %if.then93, label %if.end111, !dbg !3349

if.then93:                                        ; preds = %if.end91
  %54 = load %struct.rtx_def*, %struct.rtx_def** %body.addr, align 8, !dbg !3350
  %u94 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %54, i32 0, i32 1, !dbg !3350
  %fld95 = bitcast %union.u* %u94 to [1 x %union.rtunion_def]*, !dbg !3350
  %arrayidx96 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld95, i64 0, i64 0, !dbg !3350
  %rt_rtvec97 = bitcast %union.rtunion_def* %arrayidx96 to %struct.rtvec_def**, !dbg !3350
  %55 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec97, align 8, !dbg !3350
  %elem98 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %55, i32 0, i32 1, !dbg !3350
  %56 = load i32, i32* %i, align 4, !dbg !3350
  %idxprom99 = sext i32 %56 to i64, !dbg !3350
  %arrayidx100 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem98, i64 0, i64 %idxprom99, !dbg !3350
  %57 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx100, align 8, !dbg !3350
  %u101 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %57, i32 0, i32 1, !dbg !3350
  %fld102 = bitcast %union.u* %u101 to [1 x %union.rtunion_def]*, !dbg !3350
  %arrayidx103 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld102, i64 0, i64 1, !dbg !3350
  %rt_rtx104 = bitcast %union.rtunion_def* %arrayidx103 to %struct.rtx_def**, !dbg !3350
  %58 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx104, align 8, !dbg !3350
  %u105 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %58, i32 0, i32 1, !dbg !3350
  %fld106 = bitcast %union.u* %u105 to [1 x %union.rtunion_def]*, !dbg !3350
  %arrayidx107 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld106, i64 0, i64 1, !dbg !3350
  %rt_str108 = bitcast %union.rtunion_def* %arrayidx107 to i8**, !dbg !3350
  %59 = load i8*, i8** %rt_str108, align 8, !dbg !3350
  %60 = load i8**, i8*** %constraints.addr, align 8, !dbg !3351
  %61 = load i32, i32* %i, align 4, !dbg !3352
  %idxprom109 = sext i32 %61 to i64, !dbg !3351
  %arrayidx110 = getelementptr inbounds i8*, i8** %60, i64 %idxprom109, !dbg !3351
  store i8* %59, i8** %arrayidx110, align 8, !dbg !3353
  br label %if.end111, !dbg !3351

if.end111:                                        ; preds = %if.then93, %if.end91
  %62 = load i32*, i32** %modes.addr, align 8, !dbg !3354
  %tobool112 = icmp ne i32* %62, null, !dbg !3354
  br i1 %tobool112, label %if.then113, label %if.end130, !dbg !3356

if.then113:                                       ; preds = %if.end111
  %63 = load %struct.rtx_def*, %struct.rtx_def** %body.addr, align 8, !dbg !3357
  %u114 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %63, i32 0, i32 1, !dbg !3357
  %fld115 = bitcast %union.u* %u114 to [1 x %union.rtunion_def]*, !dbg !3357
  %arrayidx116 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld115, i64 0, i64 0, !dbg !3357
  %rt_rtvec117 = bitcast %union.rtunion_def* %arrayidx116 to %struct.rtvec_def**, !dbg !3357
  %64 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec117, align 8, !dbg !3357
  %elem118 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %64, i32 0, i32 1, !dbg !3357
  %65 = load i32, i32* %i, align 4, !dbg !3357
  %idxprom119 = sext i32 %65 to i64, !dbg !3357
  %arrayidx120 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem118, i64 0, i64 %idxprom119, !dbg !3357
  %66 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx120, align 8, !dbg !3357
  %u121 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %66, i32 0, i32 1, !dbg !3357
  %fld122 = bitcast %union.u* %u121 to [1 x %union.rtunion_def]*, !dbg !3357
  %arrayidx123 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld122, i64 0, i64 0, !dbg !3357
  %rt_rtx124 = bitcast %union.rtunion_def* %arrayidx123 to %struct.rtx_def**, !dbg !3357
  %67 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx124, align 8, !dbg !3357
  %68 = bitcast %struct.rtx_def* %67 to i32*, !dbg !3357
  %bf.load125 = load i32, i32* %68, align 8, !dbg !3357
  %bf.lshr126 = lshr i32 %bf.load125, 16, !dbg !3357
  %bf.clear127 = and i32 %bf.lshr126, 255, !dbg !3357
  %69 = load i32*, i32** %modes.addr, align 8, !dbg !3358
  %70 = load i32, i32* %i, align 4, !dbg !3359
  %idxprom128 = sext i32 %70 to i64, !dbg !3358
  %arrayidx129 = getelementptr inbounds i32, i32* %69, i64 %idxprom128, !dbg !3358
  store i32 %bf.clear127, i32* %arrayidx129, align 4, !dbg !3360
  br label %if.end130, !dbg !3358

if.end130:                                        ; preds = %if.then113, %if.end111
  br label %for.inc, !dbg !3361

for.inc:                                          ; preds = %if.end130
  %71 = load i32, i32* %i, align 4, !dbg !3362
  %inc = add nsw i32 %71, 1, !dbg !3362
  store i32 %inc, i32* %i, align 4, !dbg !3362
  br label %for.cond, !dbg !3363, !llvm.loop !3364

for.end:                                          ; preds = %if.then58, %for.cond
  %72 = load i32, i32* %i, align 4, !dbg !3366
  store i32 %72, i32* %nbase, align 4, !dbg !3367
  br label %if.end131, !dbg !3368

if.end131:                                        ; preds = %for.end, %sw.bb32
  br label %sw.epilog, !dbg !3369

sw.default:                                       ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i32 1562, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !3370
  br label %sw.epilog, !dbg !3371

sw.epilog:                                        ; preds = %sw.default, %if.end131, %if.end31, %sw.bb
  %73 = load %struct.rtx_def*, %struct.rtx_def** %asmop, align 8, !dbg !3372
  %u132 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %73, i32 0, i32 1, !dbg !3372
  %fld133 = bitcast %union.u* %u132 to [1 x %union.rtunion_def]*, !dbg !3372
  %arrayidx134 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld133, i64 0, i64 3, !dbg !3372
  %rt_rtvec135 = bitcast %union.rtunion_def* %arrayidx134 to %struct.rtvec_def**, !dbg !3372
  %74 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec135, align 8, !dbg !3372
  %num_elem136 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %74, i32 0, i32 0, !dbg !3372
  %75 = load i32, i32* %num_elem136, align 8, !dbg !3372
  store i32 %75, i32* %n, align 4, !dbg !3373
  store i32 0, i32* %i, align 4, !dbg !3374
  br label %for.cond137, !dbg !3376

for.cond137:                                      ; preds = %for.inc198, %sw.epilog
  %76 = load i32, i32* %i, align 4, !dbg !3377
  %77 = load i32, i32* %n, align 4, !dbg !3379
  %cmp138 = icmp slt i32 %76, %77, !dbg !3380
  br i1 %cmp138, label %for.body139, label %for.end200, !dbg !3381

for.body139:                                      ; preds = %for.cond137
  %78 = load %struct.rtx_def***, %struct.rtx_def**** %operand_locs.addr, align 8, !dbg !3382
  %tobool140 = icmp ne %struct.rtx_def*** %78, null, !dbg !3382
  br i1 %tobool140, label %if.then141, label %if.end151, !dbg !3385

if.then141:                                       ; preds = %for.body139
  %79 = load %struct.rtx_def*, %struct.rtx_def** %asmop, align 8, !dbg !3386
  %u142 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %79, i32 0, i32 1, !dbg !3386
  %fld143 = bitcast %union.u* %u142 to [1 x %union.rtunion_def]*, !dbg !3386
  %arrayidx144 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld143, i64 0, i64 3, !dbg !3386
  %rt_rtvec145 = bitcast %union.rtunion_def* %arrayidx144 to %struct.rtvec_def**, !dbg !3386
  %80 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec145, align 8, !dbg !3386
  %elem146 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %80, i32 0, i32 1, !dbg !3386
  %81 = load i32, i32* %i, align 4, !dbg !3386
  %idxprom147 = sext i32 %81 to i64, !dbg !3386
  %arrayidx148 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem146, i64 0, i64 %idxprom147, !dbg !3386
  %82 = load %struct.rtx_def***, %struct.rtx_def**** %operand_locs.addr, align 8, !dbg !3387
  %83 = load i32, i32* %nbase, align 4, !dbg !3388
  %84 = load i32, i32* %i, align 4, !dbg !3389
  %add = add nsw i32 %83, %84, !dbg !3390
  %idxprom149 = sext i32 %add to i64, !dbg !3387
  %arrayidx150 = getelementptr inbounds %struct.rtx_def**, %struct.rtx_def*** %82, i64 %idxprom149, !dbg !3387
  store %struct.rtx_def** %arrayidx148, %struct.rtx_def*** %arrayidx150, align 8, !dbg !3391
  br label %if.end151, !dbg !3387

if.end151:                                        ; preds = %if.then141, %for.body139
  %85 = load %struct.rtx_def**, %struct.rtx_def*** %operands.addr, align 8, !dbg !3392
  %tobool152 = icmp ne %struct.rtx_def** %85, null, !dbg !3392
  br i1 %tobool152, label %if.then153, label %if.end164, !dbg !3394

if.then153:                                       ; preds = %if.end151
  %86 = load %struct.rtx_def*, %struct.rtx_def** %asmop, align 8, !dbg !3395
  %u154 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %86, i32 0, i32 1, !dbg !3395
  %fld155 = bitcast %union.u* %u154 to [1 x %union.rtunion_def]*, !dbg !3395
  %arrayidx156 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld155, i64 0, i64 3, !dbg !3395
  %rt_rtvec157 = bitcast %union.rtunion_def* %arrayidx156 to %struct.rtvec_def**, !dbg !3395
  %87 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec157, align 8, !dbg !3395
  %elem158 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %87, i32 0, i32 1, !dbg !3395
  %88 = load i32, i32* %i, align 4, !dbg !3395
  %idxprom159 = sext i32 %88 to i64, !dbg !3395
  %arrayidx160 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem158, i64 0, i64 %idxprom159, !dbg !3395
  %89 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx160, align 8, !dbg !3395
  %90 = load %struct.rtx_def**, %struct.rtx_def*** %operands.addr, align 8, !dbg !3396
  %91 = load i32, i32* %nbase, align 4, !dbg !3397
  %92 = load i32, i32* %i, align 4, !dbg !3398
  %add161 = add nsw i32 %91, %92, !dbg !3399
  %idxprom162 = sext i32 %add161 to i64, !dbg !3396
  %arrayidx163 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %90, i64 %idxprom162, !dbg !3396
  store %struct.rtx_def* %89, %struct.rtx_def** %arrayidx163, align 8, !dbg !3400
  br label %if.end164, !dbg !3396

if.end164:                                        ; preds = %if.then153, %if.end151
  %93 = load i8**, i8*** %constraints.addr, align 8, !dbg !3401
  %tobool165 = icmp ne i8** %93, null, !dbg !3401
  br i1 %tobool165, label %if.then166, label %if.end181, !dbg !3403

if.then166:                                       ; preds = %if.end164
  %94 = load %struct.rtx_def*, %struct.rtx_def** %asmop, align 8, !dbg !3404
  %u167 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %94, i32 0, i32 1, !dbg !3404
  %fld168 = bitcast %union.u* %u167 to [1 x %union.rtunion_def]*, !dbg !3404
  %arrayidx169 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld168, i64 0, i64 4, !dbg !3404
  %rt_rtvec170 = bitcast %union.rtunion_def* %arrayidx169 to %struct.rtvec_def**, !dbg !3404
  %95 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec170, align 8, !dbg !3404
  %elem171 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %95, i32 0, i32 1, !dbg !3404
  %96 = load i32, i32* %i, align 4, !dbg !3404
  %idxprom172 = sext i32 %96 to i64, !dbg !3404
  %arrayidx173 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem171, i64 0, i64 %idxprom172, !dbg !3404
  %97 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx173, align 8, !dbg !3404
  %u174 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %97, i32 0, i32 1, !dbg !3404
  %fld175 = bitcast %union.u* %u174 to [1 x %union.rtunion_def]*, !dbg !3404
  %arrayidx176 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld175, i64 0, i64 0, !dbg !3404
  %rt_str177 = bitcast %union.rtunion_def* %arrayidx176 to i8**, !dbg !3404
  %98 = load i8*, i8** %rt_str177, align 8, !dbg !3404
  %99 = load i8**, i8*** %constraints.addr, align 8, !dbg !3405
  %100 = load i32, i32* %nbase, align 4, !dbg !3406
  %101 = load i32, i32* %i, align 4, !dbg !3407
  %add178 = add nsw i32 %100, %101, !dbg !3408
  %idxprom179 = sext i32 %add178 to i64, !dbg !3405
  %arrayidx180 = getelementptr inbounds i8*, i8** %99, i64 %idxprom179, !dbg !3405
  store i8* %98, i8** %arrayidx180, align 8, !dbg !3409
  br label %if.end181, !dbg !3405

if.end181:                                        ; preds = %if.then166, %if.end164
  %102 = load i32*, i32** %modes.addr, align 8, !dbg !3410
  %tobool182 = icmp ne i32* %102, null, !dbg !3410
  br i1 %tobool182, label %if.then183, label %if.end197, !dbg !3412

if.then183:                                       ; preds = %if.end181
  %103 = load %struct.rtx_def*, %struct.rtx_def** %asmop, align 8, !dbg !3413
  %u184 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %103, i32 0, i32 1, !dbg !3413
  %fld185 = bitcast %union.u* %u184 to [1 x %union.rtunion_def]*, !dbg !3413
  %arrayidx186 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld185, i64 0, i64 4, !dbg !3413
  %rt_rtvec187 = bitcast %union.rtunion_def* %arrayidx186 to %struct.rtvec_def**, !dbg !3413
  %104 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec187, align 8, !dbg !3413
  %elem188 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %104, i32 0, i32 1, !dbg !3413
  %105 = load i32, i32* %i, align 4, !dbg !3413
  %idxprom189 = sext i32 %105 to i64, !dbg !3413
  %arrayidx190 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem188, i64 0, i64 %idxprom189, !dbg !3413
  %106 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx190, align 8, !dbg !3413
  %107 = bitcast %struct.rtx_def* %106 to i32*, !dbg !3413
  %bf.load191 = load i32, i32* %107, align 8, !dbg !3413
  %bf.lshr192 = lshr i32 %bf.load191, 16, !dbg !3413
  %bf.clear193 = and i32 %bf.lshr192, 255, !dbg !3413
  %108 = load i32*, i32** %modes.addr, align 8, !dbg !3414
  %109 = load i32, i32* %nbase, align 4, !dbg !3415
  %110 = load i32, i32* %i, align 4, !dbg !3416
  %add194 = add nsw i32 %109, %110, !dbg !3417
  %idxprom195 = sext i32 %add194 to i64, !dbg !3414
  %arrayidx196 = getelementptr inbounds i32, i32* %108, i64 %idxprom195, !dbg !3414
  store i32 %bf.clear193, i32* %arrayidx196, align 4, !dbg !3418
  br label %if.end197, !dbg !3414

if.end197:                                        ; preds = %if.then183, %if.end181
  br label %for.inc198, !dbg !3419

for.inc198:                                       ; preds = %if.end197
  %111 = load i32, i32* %i, align 4, !dbg !3420
  %inc199 = add nsw i32 %111, 1, !dbg !3420
  store i32 %inc199, i32* %i, align 4, !dbg !3420
  br label %for.cond137, !dbg !3421, !llvm.loop !3422

for.end200:                                       ; preds = %for.cond137
  %112 = load i32, i32* %n, align 4, !dbg !3424
  %113 = load i32, i32* %nbase, align 4, !dbg !3425
  %add201 = add nsw i32 %113, %112, !dbg !3425
  store i32 %add201, i32* %nbase, align 4, !dbg !3425
  %114 = load %struct.rtx_def*, %struct.rtx_def** %asmop, align 8, !dbg !3426
  %u202 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %114, i32 0, i32 1, !dbg !3426
  %fld203 = bitcast %union.u* %u202 to [1 x %union.rtunion_def]*, !dbg !3426
  %arrayidx204 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld203, i64 0, i64 5, !dbg !3426
  %rt_rtvec205 = bitcast %union.rtunion_def* %arrayidx204 to %struct.rtvec_def**, !dbg !3426
  %115 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec205, align 8, !dbg !3426
  %num_elem206 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %115, i32 0, i32 0, !dbg !3426
  %116 = load i32, i32* %num_elem206, align 8, !dbg !3426
  store i32 %116, i32* %n, align 4, !dbg !3427
  store i32 0, i32* %i, align 4, !dbg !3428
  br label %for.cond207, !dbg !3430

for.cond207:                                      ; preds = %for.inc248, %for.end200
  %117 = load i32, i32* %i, align 4, !dbg !3431
  %118 = load i32, i32* %n, align 4, !dbg !3433
  %cmp208 = icmp slt i32 %117, %118, !dbg !3434
  br i1 %cmp208, label %for.body209, label %for.end250, !dbg !3435

for.body209:                                      ; preds = %for.cond207
  %119 = load %struct.rtx_def***, %struct.rtx_def**** %operand_locs.addr, align 8, !dbg !3436
  %tobool210 = icmp ne %struct.rtx_def*** %119, null, !dbg !3436
  br i1 %tobool210, label %if.then211, label %if.end222, !dbg !3439

if.then211:                                       ; preds = %for.body209
  %120 = load %struct.rtx_def*, %struct.rtx_def** %asmop, align 8, !dbg !3440
  %u212 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %120, i32 0, i32 1, !dbg !3440
  %fld213 = bitcast %union.u* %u212 to [1 x %union.rtunion_def]*, !dbg !3440
  %arrayidx214 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld213, i64 0, i64 5, !dbg !3440
  %rt_rtvec215 = bitcast %union.rtunion_def* %arrayidx214 to %struct.rtvec_def**, !dbg !3440
  %121 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec215, align 8, !dbg !3440
  %elem216 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %121, i32 0, i32 1, !dbg !3440
  %122 = load i32, i32* %i, align 4, !dbg !3440
  %idxprom217 = sext i32 %122 to i64, !dbg !3440
  %arrayidx218 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem216, i64 0, i64 %idxprom217, !dbg !3440
  %123 = load %struct.rtx_def***, %struct.rtx_def**** %operand_locs.addr, align 8, !dbg !3441
  %124 = load i32, i32* %nbase, align 4, !dbg !3442
  %125 = load i32, i32* %i, align 4, !dbg !3443
  %add219 = add nsw i32 %124, %125, !dbg !3444
  %idxprom220 = sext i32 %add219 to i64, !dbg !3441
  %arrayidx221 = getelementptr inbounds %struct.rtx_def**, %struct.rtx_def*** %123, i64 %idxprom220, !dbg !3441
  store %struct.rtx_def** %arrayidx218, %struct.rtx_def*** %arrayidx221, align 8, !dbg !3445
  br label %if.end222, !dbg !3441

if.end222:                                        ; preds = %if.then211, %for.body209
  %126 = load %struct.rtx_def**, %struct.rtx_def*** %operands.addr, align 8, !dbg !3446
  %tobool223 = icmp ne %struct.rtx_def** %126, null, !dbg !3446
  br i1 %tobool223, label %if.then224, label %if.end235, !dbg !3448

if.then224:                                       ; preds = %if.end222
  %127 = load %struct.rtx_def*, %struct.rtx_def** %asmop, align 8, !dbg !3449
  %u225 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %127, i32 0, i32 1, !dbg !3449
  %fld226 = bitcast %union.u* %u225 to [1 x %union.rtunion_def]*, !dbg !3449
  %arrayidx227 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld226, i64 0, i64 5, !dbg !3449
  %rt_rtvec228 = bitcast %union.rtunion_def* %arrayidx227 to %struct.rtvec_def**, !dbg !3449
  %128 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec228, align 8, !dbg !3449
  %elem229 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %128, i32 0, i32 1, !dbg !3449
  %129 = load i32, i32* %i, align 4, !dbg !3449
  %idxprom230 = sext i32 %129 to i64, !dbg !3449
  %arrayidx231 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem229, i64 0, i64 %idxprom230, !dbg !3449
  %130 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx231, align 8, !dbg !3449
  %131 = load %struct.rtx_def**, %struct.rtx_def*** %operands.addr, align 8, !dbg !3450
  %132 = load i32, i32* %nbase, align 4, !dbg !3451
  %133 = load i32, i32* %i, align 4, !dbg !3452
  %add232 = add nsw i32 %132, %133, !dbg !3453
  %idxprom233 = sext i32 %add232 to i64, !dbg !3450
  %arrayidx234 = getelementptr inbounds %struct.rtx_def*, %struct.rtx_def** %131, i64 %idxprom233, !dbg !3450
  store %struct.rtx_def* %130, %struct.rtx_def** %arrayidx234, align 8, !dbg !3454
  br label %if.end235, !dbg !3450

if.end235:                                        ; preds = %if.then224, %if.end222
  %134 = load i8**, i8*** %constraints.addr, align 8, !dbg !3455
  %tobool236 = icmp ne i8** %134, null, !dbg !3455
  br i1 %tobool236, label %if.then237, label %if.end241, !dbg !3457

if.then237:                                       ; preds = %if.end235
  %135 = load i8**, i8*** %constraints.addr, align 8, !dbg !3458
  %136 = load i32, i32* %nbase, align 4, !dbg !3459
  %137 = load i32, i32* %i, align 4, !dbg !3460
  %add238 = add nsw i32 %136, %137, !dbg !3461
  %idxprom239 = sext i32 %add238 to i64, !dbg !3458
  %arrayidx240 = getelementptr inbounds i8*, i8** %135, i64 %idxprom239, !dbg !3458
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), i8** %arrayidx240, align 8, !dbg !3462
  br label %if.end241, !dbg !3458

if.end241:                                        ; preds = %if.then237, %if.end235
  %138 = load i32*, i32** %modes.addr, align 8, !dbg !3463
  %tobool242 = icmp ne i32* %138, null, !dbg !3463
  br i1 %tobool242, label %if.then243, label %if.end247, !dbg !3465

if.then243:                                       ; preds = %if.end241
  %139 = load i32*, i32** %modes.addr, align 8, !dbg !3466
  %140 = load i32, i32* %nbase, align 4, !dbg !3467
  %141 = load i32, i32* %i, align 4, !dbg !3468
  %add244 = add nsw i32 %140, %141, !dbg !3469
  %idxprom245 = sext i32 %add244 to i64, !dbg !3466
  %arrayidx246 = getelementptr inbounds i32, i32* %139, i64 %idxprom245, !dbg !3466
  store i32 16, i32* %arrayidx246, align 4, !dbg !3470
  br label %if.end247, !dbg !3466

if.end247:                                        ; preds = %if.then243, %if.end241
  br label %for.inc248, !dbg !3471

for.inc248:                                       ; preds = %if.end247
  %142 = load i32, i32* %i, align 4, !dbg !3472
  %inc249 = add nsw i32 %142, 1, !dbg !3472
  store i32 %inc249, i32* %i, align 4, !dbg !3472
  br label %for.cond207, !dbg !3473, !llvm.loop !3474

for.end250:                                       ; preds = %for.cond207
  %143 = load i32*, i32** %loc.addr, align 8, !dbg !3476
  %tobool251 = icmp ne i32* %143, null, !dbg !3476
  br i1 %tobool251, label %if.then252, label %if.end256, !dbg !3478

if.then252:                                       ; preds = %for.end250
  %144 = load %struct.rtx_def*, %struct.rtx_def** %asmop, align 8, !dbg !3479
  %u253 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %144, i32 0, i32 1, !dbg !3479
  %fld254 = bitcast %union.u* %u253 to [1 x %union.rtunion_def]*, !dbg !3479
  %arrayidx255 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld254, i64 0, i64 6, !dbg !3479
  %rt_uint = bitcast %union.rtunion_def* %arrayidx255 to i32*, !dbg !3479
  %145 = load i32, i32* %rt_uint, align 8, !dbg !3479
  %146 = load i32*, i32** %loc.addr, align 8, !dbg !3480
  store i32 %145, i32* %146, align 4, !dbg !3481
  br label %if.end256, !dbg !3482

if.end256:                                        ; preds = %if.then252, %for.end250
  %147 = load %struct.rtx_def*, %struct.rtx_def** %asmop, align 8, !dbg !3483
  %u257 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %147, i32 0, i32 1, !dbg !3483
  %fld258 = bitcast %union.u* %u257 to [1 x %union.rtunion_def]*, !dbg !3483
  %arrayidx259 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld258, i64 0, i64 0, !dbg !3483
  %rt_str260 = bitcast %union.rtunion_def* %arrayidx259 to i8**, !dbg !3483
  %148 = load i8*, i8** %rt_str260, align 8, !dbg !3483
  ret i8* %148, !dbg !3484
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @asm_operand_ok(%struct.rtx_def* %op, i8* %constraint, i8** %constraints) #0 !dbg !3485 {
entry:
  %retval = alloca i32, align 4
  %op.addr = alloca %struct.rtx_def*, align 8
  %constraint.addr = alloca i8*, align 8
  %constraints.addr = alloca i8**, align 8
  %result = alloca i32, align 4
  %c = alloca i8, align 1
  %len = alloca i32, align 4
  %end = alloca i8*, align 8
  %match = alloca i64, align 8
  store %struct.rtx_def* %op, %struct.rtx_def** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %op.addr, metadata !3488, metadata !DIExpression()), !dbg !3489
  store i8* %constraint, i8** %constraint.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %constraint.addr, metadata !3490, metadata !DIExpression()), !dbg !3491
  store i8** %constraints, i8*** %constraints.addr, align 8
  call void @llvm.dbg.declare(metadata i8*** %constraints.addr, metadata !3492, metadata !DIExpression()), !dbg !3493
  call void @llvm.dbg.declare(metadata i32* %result, metadata !3494, metadata !DIExpression()), !dbg !3495
  store i32 0, i32* %result, align 4, !dbg !3495
  %0 = load i32, i32* @reload_completed, align 4, !dbg !3496
  %tobool = icmp ne i32 %0, 0, !dbg !3496
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !3496

cond.true:                                        ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i32 1607, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !3496
  br label %cond.end, !dbg !3496

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !3496

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !3496
  %1 = load i8*, i8** %constraint.addr, align 8, !dbg !3497
  %2 = load i8, i8* %1, align 1, !dbg !3499
  %conv = sext i8 %2 to i32, !dbg !3499
  %cmp = icmp eq i32 %conv, 0, !dbg !3500
  br i1 %cmp, label %if.then, label %if.end, !dbg !3501

if.then:                                          ; preds = %cond.end
  store i32 1, i32* %retval, align 4, !dbg !3502
  br label %return, !dbg !3502

if.end:                                           ; preds = %cond.end
  br label %while.cond, !dbg !3503

while.cond:                                       ; preds = %if.end301, %if.end21, %sw.bb, %if.end
  %3 = load i8*, i8** %constraint.addr, align 8, !dbg !3504
  %4 = load i8, i8* %3, align 1, !dbg !3505
  %tobool2 = icmp ne i8 %4, 0, !dbg !3503
  br i1 %tobool2, label %while.body, label %while.end, !dbg !3503

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i8* %c, metadata !3506, metadata !DIExpression()), !dbg !3508
  %5 = load i8*, i8** %constraint.addr, align 8, !dbg !3509
  %6 = load i8, i8* %5, align 1, !dbg !3510
  store i8 %6, i8* %c, align 1, !dbg !3508
  call void @llvm.dbg.declare(metadata i32* %len, metadata !3511, metadata !DIExpression()), !dbg !3512
  %7 = load i8, i8* %c, align 1, !dbg !3513
  %conv3 = sext i8 %7 to i32, !dbg !3513
  switch i32 %conv3, label %sw.default [
    i32 44, label %sw.bb
    i32 61, label %sw.bb4
    i32 43, label %sw.bb4
    i32 42, label %sw.bb4
    i32 37, label %sw.bb4
    i32 33, label %sw.bb4
    i32 35, label %sw.bb4
    i32 38, label %sw.bb4
    i32 63, label %sw.bb4
    i32 48, label %sw.bb5
    i32 49, label %sw.bb5
    i32 50, label %sw.bb5
    i32 51, label %sw.bb5
    i32 52, label %sw.bb5
    i32 53, label %sw.bb5
    i32 54, label %sw.bb5
    i32 55, label %sw.bb5
    i32 56, label %sw.bb5
    i32 57, label %sw.bb5
    i32 112, label %sw.bb22
    i32 109, label %sw.bb27
    i32 86, label %sw.bb27
    i32 111, label %sw.bb32
    i32 60, label %sw.bb37
    i32 62, label %sw.bb42
    i32 69, label %sw.bb49
    i32 70, label %sw.bb49
    i32 71, label %sw.bb67
    i32 72, label %sw.bb79
    i32 115, label %sw.bb91
    i32 105, label %sw.bb109
    i32 110, label %sw.bb124
    i32 73, label %sw.bb142
    i32 74, label %sw.bb155
    i32 75, label %sw.bb170
    i32 76, label %sw.bb185
    i32 77, label %sw.bb200
    i32 78, label %sw.bb215
    i32 79, label %sw.bb230
    i32 80, label %sw.bb245
    i32 88, label %sw.bb260
    i32 103, label %sw.bb261
    i32 114, label %sw.bb271
  ], !dbg !3514

sw.bb:                                            ; preds = %while.body
  %8 = load i8*, i8** %constraint.addr, align 8, !dbg !3515
  %incdec.ptr = getelementptr inbounds i8, i8* %8, i32 1, !dbg !3515
  store i8* %incdec.ptr, i8** %constraint.addr, align 8, !dbg !3515
  br label %while.cond, !dbg !3517, !llvm.loop !3518

sw.bb4:                                           ; preds = %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body
  br label %sw.epilog, !dbg !3520

sw.bb5:                                           ; preds = %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body, %while.body
  %9 = load i8**, i8*** %constraints.addr, align 8, !dbg !3521
  %tobool6 = icmp ne i8** %9, null, !dbg !3521
  br i1 %tobool6, label %if.then7, label %if.else, !dbg !3523

if.then7:                                         ; preds = %sw.bb5
  call void @llvm.dbg.declare(metadata i8** %end, metadata !3524, metadata !DIExpression()), !dbg !3526
  call void @llvm.dbg.declare(metadata i64* %match, metadata !3527, metadata !DIExpression()), !dbg !3528
  %10 = load i8*, i8** %constraint.addr, align 8, !dbg !3529
  %call = call i64 @strtoul(i8* %10, i8** %end, i32 10), !dbg !3530
  store i64 %call, i64* %match, align 8, !dbg !3531
  %11 = load i32, i32* %result, align 4, !dbg !3532
  %tobool8 = icmp ne i32 %11, 0, !dbg !3532
  br i1 %tobool8, label %if.end11, label %if.then9, !dbg !3534

if.then9:                                         ; preds = %if.then7
  %12 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3535
  %13 = load i8**, i8*** %constraints.addr, align 8, !dbg !3536
  %14 = load i64, i64* %match, align 8, !dbg !3537
  %arrayidx = getelementptr inbounds i8*, i8** %13, i64 %14, !dbg !3536
  %15 = load i8*, i8** %arrayidx, align 8, !dbg !3536
  %call10 = call i32 @asm_operand_ok(%struct.rtx_def* %12, i8* %15, i8** null), !dbg !3538
  store i32 %call10, i32* %result, align 4, !dbg !3539
  br label %if.end11, !dbg !3540

if.end11:                                         ; preds = %if.then9, %if.then7
  %16 = load i8*, i8** %end, align 8, !dbg !3541
  store i8* %16, i8** %constraint.addr, align 8, !dbg !3542
  br label %if.end21, !dbg !3543

if.else:                                          ; preds = %sw.bb5
  br label %do.body, !dbg !3544

do.body:                                          ; preds = %do.cond, %if.else
  %17 = load i8*, i8** %constraint.addr, align 8, !dbg !3546
  %incdec.ptr12 = getelementptr inbounds i8, i8* %17, i32 1, !dbg !3546
  store i8* %incdec.ptr12, i8** %constraint.addr, align 8, !dbg !3546
  br label %do.cond, !dbg !3547

do.cond:                                          ; preds = %do.body
  %18 = load i8*, i8** %constraint.addr, align 8, !dbg !3548
  %19 = load i8, i8* %18, align 1, !dbg !3548
  %conv13 = sext i8 %19 to i32, !dbg !3548
  %and = and i32 %conv13, 255, !dbg !3548
  %idxprom = sext i32 %and to i64, !dbg !3548
  %arrayidx14 = getelementptr inbounds [256 x i16], [256 x i16]* @_sch_istable, i64 0, i64 %idxprom, !dbg !3548
  %20 = load i16, i16* %arrayidx14, align 2, !dbg !3548
  %conv15 = zext i16 %20 to i32, !dbg !3548
  %and16 = and i32 %conv15, 4, !dbg !3548
  %tobool17 = icmp ne i32 %and16, 0, !dbg !3547
  br i1 %tobool17, label %do.body, label %do.end, !dbg !3547, !llvm.loop !3549

do.end:                                           ; preds = %do.cond
  %21 = load i32, i32* %result, align 4, !dbg !3551
  %tobool18 = icmp ne i32 %21, 0, !dbg !3551
  br i1 %tobool18, label %if.end20, label %if.then19, !dbg !3553

if.then19:                                        ; preds = %do.end
  store i32 -1, i32* %result, align 4, !dbg !3554
  br label %if.end20, !dbg !3555

if.end20:                                         ; preds = %if.then19, %do.end
  br label %if.end21

if.end21:                                         ; preds = %if.end20, %if.end11
  br label %while.cond, !dbg !3556, !llvm.loop !3518

sw.bb22:                                          ; preds = %while.body
  %22 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3557
  %call23 = call i32 @address_operand(%struct.rtx_def* %22, i32 0), !dbg !3559
  %tobool24 = icmp ne i32 %call23, 0, !dbg !3559
  br i1 %tobool24, label %if.then25, label %if.end26, !dbg !3560

if.then25:                                        ; preds = %sw.bb22
  store i32 1, i32* %result, align 4, !dbg !3561
  br label %if.end26, !dbg !3562

if.end26:                                         ; preds = %if.then25, %sw.bb22
  br label %sw.epilog, !dbg !3563

sw.bb27:                                          ; preds = %while.body, %while.body
  %23 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3564
  %call28 = call i32 @memory_operand(%struct.rtx_def* %23, i32 0), !dbg !3566
  %tobool29 = icmp ne i32 %call28, 0, !dbg !3566
  br i1 %tobool29, label %if.then30, label %if.end31, !dbg !3567

if.then30:                                        ; preds = %sw.bb27
  store i32 1, i32* %result, align 4, !dbg !3568
  br label %if.end31, !dbg !3569

if.end31:                                         ; preds = %if.then30, %sw.bb27
  br label %sw.epilog, !dbg !3570

sw.bb32:                                          ; preds = %while.body
  %24 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3571
  %call33 = call i32 @offsettable_nonstrict_memref_p(%struct.rtx_def* %24), !dbg !3573
  %tobool34 = icmp ne i32 %call33, 0, !dbg !3573
  br i1 %tobool34, label %if.then35, label %if.end36, !dbg !3574

if.then35:                                        ; preds = %sw.bb32
  store i32 1, i32* %result, align 4, !dbg !3575
  br label %if.end36, !dbg !3576

if.end36:                                         ; preds = %if.then35, %sw.bb32
  br label %sw.epilog, !dbg !3577

sw.bb37:                                          ; preds = %while.body
  %25 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3578
  %26 = bitcast %struct.rtx_def* %25 to i32*, !dbg !3578
  %bf.load = load i32, i32* %26, align 8, !dbg !3578
  %bf.clear = and i32 %bf.load, 65535, !dbg !3578
  %cmp38 = icmp eq i32 %bf.clear, 43, !dbg !3578
  br i1 %cmp38, label %if.then40, label %if.end41, !dbg !3580

if.then40:                                        ; preds = %sw.bb37
  store i32 1, i32* %result, align 4, !dbg !3581
  br label %if.end41, !dbg !3582

if.end41:                                         ; preds = %if.then40, %sw.bb37
  br label %sw.epilog, !dbg !3583

sw.bb42:                                          ; preds = %while.body
  %27 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3584
  %28 = bitcast %struct.rtx_def* %27 to i32*, !dbg !3584
  %bf.load43 = load i32, i32* %28, align 8, !dbg !3584
  %bf.clear44 = and i32 %bf.load43, 65535, !dbg !3584
  %cmp45 = icmp eq i32 %bf.clear44, 43, !dbg !3584
  br i1 %cmp45, label %if.then47, label %if.end48, !dbg !3586

if.then47:                                        ; preds = %sw.bb42
  store i32 1, i32* %result, align 4, !dbg !3587
  br label %if.end48, !dbg !3588

if.end48:                                         ; preds = %if.then47, %sw.bb42
  br label %sw.epilog, !dbg !3589

sw.bb49:                                          ; preds = %while.body, %while.body
  %29 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3590
  %30 = bitcast %struct.rtx_def* %29 to i32*, !dbg !3590
  %bf.load50 = load i32, i32* %30, align 8, !dbg !3590
  %bf.clear51 = and i32 %bf.load50, 65535, !dbg !3590
  %cmp52 = icmp eq i32 %bf.clear51, 32, !dbg !3592
  br i1 %cmp52, label %if.then65, label %lor.lhs.false, !dbg !3593

lor.lhs.false:                                    ; preds = %sw.bb49
  %31 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3594
  %32 = bitcast %struct.rtx_def* %31 to i32*, !dbg !3594
  %bf.load54 = load i32, i32* %32, align 8, !dbg !3594
  %bf.clear55 = and i32 %bf.load54, 65535, !dbg !3594
  %cmp56 = icmp eq i32 %bf.clear55, 33, !dbg !3595
  br i1 %cmp56, label %land.lhs.true, label %if.end66, !dbg !3596

land.lhs.true:                                    ; preds = %lor.lhs.false
  %33 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3597
  %34 = bitcast %struct.rtx_def* %33 to i32*, !dbg !3597
  %bf.load58 = load i32, i32* %34, align 8, !dbg !3597
  %bf.lshr = lshr i32 %bf.load58, 16, !dbg !3597
  %bf.clear59 = and i32 %bf.lshr, 255, !dbg !3597
  %idxprom60 = zext i32 %bf.clear59 to i64, !dbg !3597
  %arrayidx61 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom60, !dbg !3597
  %35 = load i8, i8* %arrayidx61, align 1, !dbg !3597
  %conv62 = zext i8 %35 to i32, !dbg !3597
  %cmp63 = icmp eq i32 %conv62, 17, !dbg !3598
  br i1 %cmp63, label %if.then65, label %if.end66, !dbg !3599

if.then65:                                        ; preds = %land.lhs.true, %sw.bb49
  store i32 1, i32* %result, align 4, !dbg !3600
  br label %if.end66, !dbg !3601

if.end66:                                         ; preds = %if.then65, %land.lhs.true, %lor.lhs.false
  br label %sw.epilog, !dbg !3602

sw.bb67:                                          ; preds = %while.body
  %36 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3603
  %37 = bitcast %struct.rtx_def* %36 to i32*, !dbg !3603
  %bf.load68 = load i32, i32* %37, align 8, !dbg !3603
  %bf.clear69 = and i32 %bf.load68, 65535, !dbg !3603
  %cmp70 = icmp eq i32 %bf.clear69, 32, !dbg !3605
  br i1 %cmp70, label %land.lhs.true72, label %if.end78, !dbg !3606

land.lhs.true72:                                  ; preds = %sw.bb67
  %38 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3607
  %39 = load i8*, i8** %constraint.addr, align 8, !dbg !3607
  %call73 = call i32 @lookup_constraint(i8* %39), !dbg !3607
  %call74 = call zeroext i8 @constraint_satisfied_p(%struct.rtx_def* %38, i32 %call73), !dbg !3607
  %conv75 = zext i8 %call74 to i32, !dbg !3607
  %tobool76 = icmp ne i32 %conv75, 0, !dbg !3607
  br i1 %tobool76, label %if.then77, label %if.end78, !dbg !3608

if.then77:                                        ; preds = %land.lhs.true72
  store i32 1, i32* %result, align 4, !dbg !3609
  br label %if.end78, !dbg !3610

if.end78:                                         ; preds = %if.then77, %land.lhs.true72, %sw.bb67
  br label %sw.epilog, !dbg !3611

sw.bb79:                                          ; preds = %while.body
  %40 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3612
  %41 = bitcast %struct.rtx_def* %40 to i32*, !dbg !3612
  %bf.load80 = load i32, i32* %41, align 8, !dbg !3612
  %bf.clear81 = and i32 %bf.load80, 65535, !dbg !3612
  %cmp82 = icmp eq i32 %bf.clear81, 32, !dbg !3614
  br i1 %cmp82, label %land.lhs.true84, label %if.end90, !dbg !3615

land.lhs.true84:                                  ; preds = %sw.bb79
  %42 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3616
  %43 = load i8*, i8** %constraint.addr, align 8, !dbg !3616
  %call85 = call i32 @lookup_constraint(i8* %43), !dbg !3616
  %call86 = call zeroext i8 @constraint_satisfied_p(%struct.rtx_def* %42, i32 %call85), !dbg !3616
  %conv87 = zext i8 %call86 to i32, !dbg !3616
  %tobool88 = icmp ne i32 %conv87, 0, !dbg !3616
  br i1 %tobool88, label %if.then89, label %if.end90, !dbg !3617

if.then89:                                        ; preds = %land.lhs.true84
  store i32 1, i32* %result, align 4, !dbg !3618
  br label %if.end90, !dbg !3619

if.end90:                                         ; preds = %if.then89, %land.lhs.true84, %sw.bb79
  br label %sw.epilog, !dbg !3620

sw.bb91:                                          ; preds = %while.body
  %44 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3621
  %45 = bitcast %struct.rtx_def* %44 to i32*, !dbg !3621
  %bf.load92 = load i32, i32* %45, align 8, !dbg !3621
  %bf.clear93 = and i32 %bf.load92, 65535, !dbg !3621
  %cmp94 = icmp eq i32 %bf.clear93, 30, !dbg !3621
  br i1 %cmp94, label %if.then107, label %lor.lhs.false96, !dbg !3623

lor.lhs.false96:                                  ; preds = %sw.bb91
  %46 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3624
  %47 = bitcast %struct.rtx_def* %46 to i32*, !dbg !3624
  %bf.load97 = load i32, i32* %47, align 8, !dbg !3624
  %bf.clear98 = and i32 %bf.load97, 65535, !dbg !3624
  %cmp99 = icmp eq i32 %bf.clear98, 32, !dbg !3625
  br i1 %cmp99, label %land.lhs.true101, label %if.end108, !dbg !3626

land.lhs.true101:                                 ; preds = %lor.lhs.false96
  %48 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3627
  %49 = bitcast %struct.rtx_def* %48 to i32*, !dbg !3627
  %bf.load102 = load i32, i32* %49, align 8, !dbg !3627
  %bf.lshr103 = lshr i32 %bf.load102, 16, !dbg !3627
  %bf.clear104 = and i32 %bf.lshr103, 255, !dbg !3627
  %cmp105 = icmp eq i32 %bf.clear104, 0, !dbg !3628
  br i1 %cmp105, label %if.then107, label %if.end108, !dbg !3629

if.then107:                                       ; preds = %land.lhs.true101, %sw.bb91
  br label %sw.epilog, !dbg !3630

if.end108:                                        ; preds = %land.lhs.true101, %lor.lhs.false96
  br label %sw.bb109, !dbg !3631

sw.bb109:                                         ; preds = %while.body, %if.end108
  %50 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3632
  %51 = bitcast %struct.rtx_def* %50 to i32*, !dbg !3632
  %bf.load110 = load i32, i32* %51, align 8, !dbg !3632
  %bf.clear111 = and i32 %bf.load110, 65535, !dbg !3632
  %idxprom112 = sext i32 %bf.clear111 to i64, !dbg !3632
  %arrayidx113 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom112, !dbg !3632
  %52 = load i32, i32* %arrayidx113, align 4, !dbg !3632
  %cmp114 = icmp eq i32 %52, 9, !dbg !3632
  br i1 %cmp114, label %land.lhs.true116, label %if.end123, !dbg !3634

land.lhs.true116:                                 ; preds = %sw.bb109
  %53 = load i32, i32* @flag_pic, align 4, !dbg !3635
  %tobool117 = icmp ne i32 %53, 0, !dbg !3635
  br i1 %tobool117, label %lor.lhs.false118, label %if.then122, !dbg !3636

lor.lhs.false118:                                 ; preds = %land.lhs.true116
  %54 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3637
  %call119 = call zeroext i8 @legitimate_pic_operand_p(%struct.rtx_def* %54), !dbg !3637
  %conv120 = zext i8 %call119 to i32, !dbg !3637
  %tobool121 = icmp ne i32 %conv120, 0, !dbg !3637
  br i1 %tobool121, label %if.then122, label %if.end123, !dbg !3638

if.then122:                                       ; preds = %lor.lhs.false118, %land.lhs.true116
  store i32 1, i32* %result, align 4, !dbg !3639
  br label %if.end123, !dbg !3640

if.end123:                                        ; preds = %if.then122, %lor.lhs.false118, %sw.bb109
  br label %sw.epilog, !dbg !3641

sw.bb124:                                         ; preds = %while.body
  %55 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3642
  %56 = bitcast %struct.rtx_def* %55 to i32*, !dbg !3642
  %bf.load125 = load i32, i32* %56, align 8, !dbg !3642
  %bf.clear126 = and i32 %bf.load125, 65535, !dbg !3642
  %cmp127 = icmp eq i32 %bf.clear126, 30, !dbg !3642
  br i1 %cmp127, label %if.then140, label %lor.lhs.false129, !dbg !3644

lor.lhs.false129:                                 ; preds = %sw.bb124
  %57 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3645
  %58 = bitcast %struct.rtx_def* %57 to i32*, !dbg !3645
  %bf.load130 = load i32, i32* %58, align 8, !dbg !3645
  %bf.clear131 = and i32 %bf.load130, 65535, !dbg !3645
  %cmp132 = icmp eq i32 %bf.clear131, 32, !dbg !3646
  br i1 %cmp132, label %land.lhs.true134, label %if.end141, !dbg !3647

land.lhs.true134:                                 ; preds = %lor.lhs.false129
  %59 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3648
  %60 = bitcast %struct.rtx_def* %59 to i32*, !dbg !3648
  %bf.load135 = load i32, i32* %60, align 8, !dbg !3648
  %bf.lshr136 = lshr i32 %bf.load135, 16, !dbg !3648
  %bf.clear137 = and i32 %bf.lshr136, 255, !dbg !3648
  %cmp138 = icmp eq i32 %bf.clear137, 0, !dbg !3649
  br i1 %cmp138, label %if.then140, label %if.end141, !dbg !3650

if.then140:                                       ; preds = %land.lhs.true134, %sw.bb124
  store i32 1, i32* %result, align 4, !dbg !3651
  br label %if.end141, !dbg !3652

if.end141:                                        ; preds = %if.then140, %land.lhs.true134, %lor.lhs.false129
  br label %sw.epilog, !dbg !3653

sw.bb142:                                         ; preds = %while.body
  %61 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3654
  %62 = bitcast %struct.rtx_def* %61 to i32*, !dbg !3654
  %bf.load143 = load i32, i32* %62, align 8, !dbg !3654
  %bf.clear144 = and i32 %bf.load143, 65535, !dbg !3654
  %cmp145 = icmp eq i32 %bf.clear144, 30, !dbg !3654
  br i1 %cmp145, label %land.lhs.true147, label %if.end154, !dbg !3656

land.lhs.true147:                                 ; preds = %sw.bb142
  %63 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3657
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %63, i32 0, i32 1, !dbg !3657
  %hwint = bitcast %union.u* %u to [1 x i64]*, !dbg !3657
  %arrayidx148 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint, i64 0, i64 0, !dbg !3657
  %64 = load i64, i64* %arrayidx148, align 8, !dbg !3657
  %65 = load i8*, i8** %constraint.addr, align 8, !dbg !3657
  %call149 = call i32 @lookup_constraint(i8* %65), !dbg !3657
  %call150 = call zeroext i8 @insn_const_int_ok_for_constraint(i64 %64, i32 %call149), !dbg !3657
  %conv151 = zext i8 %call150 to i32, !dbg !3657
  %tobool152 = icmp ne i32 %conv151, 0, !dbg !3657
  br i1 %tobool152, label %if.then153, label %if.end154, !dbg !3658

if.then153:                                       ; preds = %land.lhs.true147
  store i32 1, i32* %result, align 4, !dbg !3659
  br label %if.end154, !dbg !3660

if.end154:                                        ; preds = %if.then153, %land.lhs.true147, %sw.bb142
  br label %sw.epilog, !dbg !3661

sw.bb155:                                         ; preds = %while.body
  %66 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3662
  %67 = bitcast %struct.rtx_def* %66 to i32*, !dbg !3662
  %bf.load156 = load i32, i32* %67, align 8, !dbg !3662
  %bf.clear157 = and i32 %bf.load156, 65535, !dbg !3662
  %cmp158 = icmp eq i32 %bf.clear157, 30, !dbg !3662
  br i1 %cmp158, label %land.lhs.true160, label %if.end169, !dbg !3664

land.lhs.true160:                                 ; preds = %sw.bb155
  %68 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3665
  %u161 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %68, i32 0, i32 1, !dbg !3665
  %hwint162 = bitcast %union.u* %u161 to [1 x i64]*, !dbg !3665
  %arrayidx163 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint162, i64 0, i64 0, !dbg !3665
  %69 = load i64, i64* %arrayidx163, align 8, !dbg !3665
  %70 = load i8*, i8** %constraint.addr, align 8, !dbg !3665
  %call164 = call i32 @lookup_constraint(i8* %70), !dbg !3665
  %call165 = call zeroext i8 @insn_const_int_ok_for_constraint(i64 %69, i32 %call164), !dbg !3665
  %conv166 = zext i8 %call165 to i32, !dbg !3665
  %tobool167 = icmp ne i32 %conv166, 0, !dbg !3665
  br i1 %tobool167, label %if.then168, label %if.end169, !dbg !3666

if.then168:                                       ; preds = %land.lhs.true160
  store i32 1, i32* %result, align 4, !dbg !3667
  br label %if.end169, !dbg !3668

if.end169:                                        ; preds = %if.then168, %land.lhs.true160, %sw.bb155
  br label %sw.epilog, !dbg !3669

sw.bb170:                                         ; preds = %while.body
  %71 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3670
  %72 = bitcast %struct.rtx_def* %71 to i32*, !dbg !3670
  %bf.load171 = load i32, i32* %72, align 8, !dbg !3670
  %bf.clear172 = and i32 %bf.load171, 65535, !dbg !3670
  %cmp173 = icmp eq i32 %bf.clear172, 30, !dbg !3670
  br i1 %cmp173, label %land.lhs.true175, label %if.end184, !dbg !3672

land.lhs.true175:                                 ; preds = %sw.bb170
  %73 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3673
  %u176 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %73, i32 0, i32 1, !dbg !3673
  %hwint177 = bitcast %union.u* %u176 to [1 x i64]*, !dbg !3673
  %arrayidx178 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint177, i64 0, i64 0, !dbg !3673
  %74 = load i64, i64* %arrayidx178, align 8, !dbg !3673
  %75 = load i8*, i8** %constraint.addr, align 8, !dbg !3673
  %call179 = call i32 @lookup_constraint(i8* %75), !dbg !3673
  %call180 = call zeroext i8 @insn_const_int_ok_for_constraint(i64 %74, i32 %call179), !dbg !3673
  %conv181 = zext i8 %call180 to i32, !dbg !3673
  %tobool182 = icmp ne i32 %conv181, 0, !dbg !3673
  br i1 %tobool182, label %if.then183, label %if.end184, !dbg !3674

if.then183:                                       ; preds = %land.lhs.true175
  store i32 1, i32* %result, align 4, !dbg !3675
  br label %if.end184, !dbg !3676

if.end184:                                        ; preds = %if.then183, %land.lhs.true175, %sw.bb170
  br label %sw.epilog, !dbg !3677

sw.bb185:                                         ; preds = %while.body
  %76 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3678
  %77 = bitcast %struct.rtx_def* %76 to i32*, !dbg !3678
  %bf.load186 = load i32, i32* %77, align 8, !dbg !3678
  %bf.clear187 = and i32 %bf.load186, 65535, !dbg !3678
  %cmp188 = icmp eq i32 %bf.clear187, 30, !dbg !3678
  br i1 %cmp188, label %land.lhs.true190, label %if.end199, !dbg !3680

land.lhs.true190:                                 ; preds = %sw.bb185
  %78 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3681
  %u191 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %78, i32 0, i32 1, !dbg !3681
  %hwint192 = bitcast %union.u* %u191 to [1 x i64]*, !dbg !3681
  %arrayidx193 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint192, i64 0, i64 0, !dbg !3681
  %79 = load i64, i64* %arrayidx193, align 8, !dbg !3681
  %80 = load i8*, i8** %constraint.addr, align 8, !dbg !3681
  %call194 = call i32 @lookup_constraint(i8* %80), !dbg !3681
  %call195 = call zeroext i8 @insn_const_int_ok_for_constraint(i64 %79, i32 %call194), !dbg !3681
  %conv196 = zext i8 %call195 to i32, !dbg !3681
  %tobool197 = icmp ne i32 %conv196, 0, !dbg !3681
  br i1 %tobool197, label %if.then198, label %if.end199, !dbg !3682

if.then198:                                       ; preds = %land.lhs.true190
  store i32 1, i32* %result, align 4, !dbg !3683
  br label %if.end199, !dbg !3684

if.end199:                                        ; preds = %if.then198, %land.lhs.true190, %sw.bb185
  br label %sw.epilog, !dbg !3685

sw.bb200:                                         ; preds = %while.body
  %81 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3686
  %82 = bitcast %struct.rtx_def* %81 to i32*, !dbg !3686
  %bf.load201 = load i32, i32* %82, align 8, !dbg !3686
  %bf.clear202 = and i32 %bf.load201, 65535, !dbg !3686
  %cmp203 = icmp eq i32 %bf.clear202, 30, !dbg !3686
  br i1 %cmp203, label %land.lhs.true205, label %if.end214, !dbg !3688

land.lhs.true205:                                 ; preds = %sw.bb200
  %83 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3689
  %u206 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %83, i32 0, i32 1, !dbg !3689
  %hwint207 = bitcast %union.u* %u206 to [1 x i64]*, !dbg !3689
  %arrayidx208 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint207, i64 0, i64 0, !dbg !3689
  %84 = load i64, i64* %arrayidx208, align 8, !dbg !3689
  %85 = load i8*, i8** %constraint.addr, align 8, !dbg !3689
  %call209 = call i32 @lookup_constraint(i8* %85), !dbg !3689
  %call210 = call zeroext i8 @insn_const_int_ok_for_constraint(i64 %84, i32 %call209), !dbg !3689
  %conv211 = zext i8 %call210 to i32, !dbg !3689
  %tobool212 = icmp ne i32 %conv211, 0, !dbg !3689
  br i1 %tobool212, label %if.then213, label %if.end214, !dbg !3690

if.then213:                                       ; preds = %land.lhs.true205
  store i32 1, i32* %result, align 4, !dbg !3691
  br label %if.end214, !dbg !3692

if.end214:                                        ; preds = %if.then213, %land.lhs.true205, %sw.bb200
  br label %sw.epilog, !dbg !3693

sw.bb215:                                         ; preds = %while.body
  %86 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3694
  %87 = bitcast %struct.rtx_def* %86 to i32*, !dbg !3694
  %bf.load216 = load i32, i32* %87, align 8, !dbg !3694
  %bf.clear217 = and i32 %bf.load216, 65535, !dbg !3694
  %cmp218 = icmp eq i32 %bf.clear217, 30, !dbg !3694
  br i1 %cmp218, label %land.lhs.true220, label %if.end229, !dbg !3696

land.lhs.true220:                                 ; preds = %sw.bb215
  %88 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3697
  %u221 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %88, i32 0, i32 1, !dbg !3697
  %hwint222 = bitcast %union.u* %u221 to [1 x i64]*, !dbg !3697
  %arrayidx223 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint222, i64 0, i64 0, !dbg !3697
  %89 = load i64, i64* %arrayidx223, align 8, !dbg !3697
  %90 = load i8*, i8** %constraint.addr, align 8, !dbg !3697
  %call224 = call i32 @lookup_constraint(i8* %90), !dbg !3697
  %call225 = call zeroext i8 @insn_const_int_ok_for_constraint(i64 %89, i32 %call224), !dbg !3697
  %conv226 = zext i8 %call225 to i32, !dbg !3697
  %tobool227 = icmp ne i32 %conv226, 0, !dbg !3697
  br i1 %tobool227, label %if.then228, label %if.end229, !dbg !3698

if.then228:                                       ; preds = %land.lhs.true220
  store i32 1, i32* %result, align 4, !dbg !3699
  br label %if.end229, !dbg !3700

if.end229:                                        ; preds = %if.then228, %land.lhs.true220, %sw.bb215
  br label %sw.epilog, !dbg !3701

sw.bb230:                                         ; preds = %while.body
  %91 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3702
  %92 = bitcast %struct.rtx_def* %91 to i32*, !dbg !3702
  %bf.load231 = load i32, i32* %92, align 8, !dbg !3702
  %bf.clear232 = and i32 %bf.load231, 65535, !dbg !3702
  %cmp233 = icmp eq i32 %bf.clear232, 30, !dbg !3702
  br i1 %cmp233, label %land.lhs.true235, label %if.end244, !dbg !3704

land.lhs.true235:                                 ; preds = %sw.bb230
  %93 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3705
  %u236 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %93, i32 0, i32 1, !dbg !3705
  %hwint237 = bitcast %union.u* %u236 to [1 x i64]*, !dbg !3705
  %arrayidx238 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint237, i64 0, i64 0, !dbg !3705
  %94 = load i64, i64* %arrayidx238, align 8, !dbg !3705
  %95 = load i8*, i8** %constraint.addr, align 8, !dbg !3705
  %call239 = call i32 @lookup_constraint(i8* %95), !dbg !3705
  %call240 = call zeroext i8 @insn_const_int_ok_for_constraint(i64 %94, i32 %call239), !dbg !3705
  %conv241 = zext i8 %call240 to i32, !dbg !3705
  %tobool242 = icmp ne i32 %conv241, 0, !dbg !3705
  br i1 %tobool242, label %if.then243, label %if.end244, !dbg !3706

if.then243:                                       ; preds = %land.lhs.true235
  store i32 1, i32* %result, align 4, !dbg !3707
  br label %if.end244, !dbg !3708

if.end244:                                        ; preds = %if.then243, %land.lhs.true235, %sw.bb230
  br label %sw.epilog, !dbg !3709

sw.bb245:                                         ; preds = %while.body
  %96 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3710
  %97 = bitcast %struct.rtx_def* %96 to i32*, !dbg !3710
  %bf.load246 = load i32, i32* %97, align 8, !dbg !3710
  %bf.clear247 = and i32 %bf.load246, 65535, !dbg !3710
  %cmp248 = icmp eq i32 %bf.clear247, 30, !dbg !3710
  br i1 %cmp248, label %land.lhs.true250, label %if.end259, !dbg !3712

land.lhs.true250:                                 ; preds = %sw.bb245
  %98 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3713
  %u251 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %98, i32 0, i32 1, !dbg !3713
  %hwint252 = bitcast %union.u* %u251 to [1 x i64]*, !dbg !3713
  %arrayidx253 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint252, i64 0, i64 0, !dbg !3713
  %99 = load i64, i64* %arrayidx253, align 8, !dbg !3713
  %100 = load i8*, i8** %constraint.addr, align 8, !dbg !3713
  %call254 = call i32 @lookup_constraint(i8* %100), !dbg !3713
  %call255 = call zeroext i8 @insn_const_int_ok_for_constraint(i64 %99, i32 %call254), !dbg !3713
  %conv256 = zext i8 %call255 to i32, !dbg !3713
  %tobool257 = icmp ne i32 %conv256, 0, !dbg !3713
  br i1 %tobool257, label %if.then258, label %if.end259, !dbg !3714

if.then258:                                       ; preds = %land.lhs.true250
  store i32 1, i32* %result, align 4, !dbg !3715
  br label %if.end259, !dbg !3716

if.end259:                                        ; preds = %if.then258, %land.lhs.true250, %sw.bb245
  br label %sw.epilog, !dbg !3717

sw.bb260:                                         ; preds = %while.body
  store i32 1, i32* %result, align 4, !dbg !3718
  br label %sw.epilog, !dbg !3719

sw.bb261:                                         ; preds = %while.body
  %101 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3720
  %call262 = call i32 @general_operand(%struct.rtx_def* %101, i32 0), !dbg !3722
  %tobool263 = icmp ne i32 %call262, 0, !dbg !3722
  br i1 %tobool263, label %if.then264, label %if.end265, !dbg !3723

if.then264:                                       ; preds = %sw.bb261
  store i32 1, i32* %result, align 4, !dbg !3724
  br label %if.end265, !dbg !3725

if.end265:                                        ; preds = %if.then264, %sw.bb261
  br label %sw.epilog, !dbg !3726

sw.default:                                       ; preds = %while.body
  %102 = load i8*, i8** %constraint.addr, align 8, !dbg !3727
  %call266 = call i32 @lookup_constraint(i8* %102), !dbg !3727
  %call267 = call i32 @regclass_for_constraint(i32 %call266), !dbg !3727
  %cmp268 = icmp ne i32 %call267, 0, !dbg !3729
  br i1 %cmp268, label %if.then270, label %if.else283, !dbg !3730

if.then270:                                       ; preds = %sw.default
  br label %sw.bb271, !dbg !3731

sw.bb271:                                         ; preds = %while.body, %if.then270
  %103 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3732
  %104 = bitcast %struct.rtx_def* %103 to i32*, !dbg !3732
  %bf.load272 = load i32, i32* %104, align 8, !dbg !3732
  %bf.lshr273 = lshr i32 %bf.load272, 16, !dbg !3732
  %bf.clear274 = and i32 %bf.lshr273, 255, !dbg !3732
  %cmp275 = icmp eq i32 %bf.clear274, 1, !dbg !3735
  br i1 %cmp275, label %if.then277, label %if.end278, !dbg !3736

if.then277:                                       ; preds = %sw.bb271
  br label %sw.epilog, !dbg !3737

if.end278:                                        ; preds = %sw.bb271
  %105 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3738
  %call279 = call i32 @register_operand(%struct.rtx_def* %105, i32 0), !dbg !3740
  %tobool280 = icmp ne i32 %call279, 0, !dbg !3740
  br i1 %tobool280, label %if.then281, label %if.end282, !dbg !3741

if.then281:                                       ; preds = %if.end278
  store i32 1, i32* %result, align 4, !dbg !3742
  br label %if.end282, !dbg !3743

if.end282:                                        ; preds = %if.then281, %if.end278
  br label %if.end289, !dbg !3744

if.else283:                                       ; preds = %sw.default
  %106 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !3745
  %107 = load i8*, i8** %constraint.addr, align 8, !dbg !3745
  %call284 = call i32 @lookup_constraint(i8* %107), !dbg !3745
  %call285 = call zeroext i8 @constraint_satisfied_p(%struct.rtx_def* %106, i32 %call284), !dbg !3745
  %tobool286 = icmp ne i8 %call285, 0, !dbg !3745
  br i1 %tobool286, label %if.then287, label %if.end288, !dbg !3749

if.then287:                                       ; preds = %if.else283
  store i32 1, i32* %result, align 4, !dbg !3750
  br label %if.end288, !dbg !3751

if.end288:                                        ; preds = %if.then287, %if.else283
  br label %if.end289

if.end289:                                        ; preds = %if.end288, %if.end282
  br label %sw.epilog, !dbg !3752

sw.epilog:                                        ; preds = %if.end289, %if.then277, %if.end265, %sw.bb260, %if.end259, %if.end244, %if.end229, %if.end214, %if.end199, %if.end184, %if.end169, %if.end154, %if.end141, %if.end123, %if.then107, %if.end90, %if.end78, %if.end66, %if.end48, %if.end41, %if.end36, %if.end31, %if.end26, %sw.bb4
  %108 = load i8, i8* %c, align 1, !dbg !3753
  %109 = load i8*, i8** %constraint.addr, align 8, !dbg !3753
  %call290 = call i64 @insn_constraint_len(i8 signext %108, i8* %109), !dbg !3753
  %conv291 = trunc i64 %call290 to i32, !dbg !3753
  store i32 %conv291, i32* %len, align 4, !dbg !3754
  br label %do.body292, !dbg !3755

do.body292:                                       ; preds = %land.end, %sw.epilog
  %110 = load i8*, i8** %constraint.addr, align 8, !dbg !3756
  %incdec.ptr293 = getelementptr inbounds i8, i8* %110, i32 1, !dbg !3756
  store i8* %incdec.ptr293, i8** %constraint.addr, align 8, !dbg !3756
  br label %do.cond294, !dbg !3757

do.cond294:                                       ; preds = %do.body292
  %111 = load i32, i32* %len, align 4, !dbg !3758
  %dec = add nsw i32 %111, -1, !dbg !3758
  store i32 %dec, i32* %len, align 4, !dbg !3758
  %tobool295 = icmp ne i32 %dec, 0, !dbg !3758
  br i1 %tobool295, label %land.rhs, label %land.end, !dbg !3759

land.rhs:                                         ; preds = %do.cond294
  %112 = load i8*, i8** %constraint.addr, align 8, !dbg !3760
  %113 = load i8, i8* %112, align 1, !dbg !3761
  %conv296 = sext i8 %113 to i32, !dbg !3761
  %tobool297 = icmp ne i32 %conv296, 0, !dbg !3759
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.cond294
  %114 = phi i1 [ false, %do.cond294 ], [ %tobool297, %land.rhs ], !dbg !3762
  br i1 %114, label %do.body292, label %do.end298, !dbg !3757, !llvm.loop !3763

do.end298:                                        ; preds = %land.end
  %115 = load i32, i32* %len, align 4, !dbg !3765
  %tobool299 = icmp ne i32 %115, 0, !dbg !3765
  br i1 %tobool299, label %if.then300, label %if.end301, !dbg !3767

if.then300:                                       ; preds = %do.end298
  store i32 0, i32* %retval, align 4, !dbg !3768
  br label %return, !dbg !3768

if.end301:                                        ; preds = %do.end298
  br label %while.cond, !dbg !3503, !llvm.loop !3518

while.end:                                        ; preds = %while.cond
  %116 = load i32, i32* %result, align 4, !dbg !3769
  store i32 %116, i32* %retval, align 4, !dbg !3770
  br label %return, !dbg !3770

return:                                           ; preds = %while.end, %if.then300, %if.then
  %117 = load i32, i32* %retval, align 4, !dbg !3771
  ret i32 %117, !dbg !3771
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @validate_change(%struct.rtx_def* %object, %struct.rtx_def** %loc, %struct.rtx_def* %new_rtx, i8 zeroext %in_group) #0 !dbg !3772 {
entry:
  %object.addr = alloca %struct.rtx_def*, align 8
  %loc.addr = alloca %struct.rtx_def**, align 8
  %new_rtx.addr = alloca %struct.rtx_def*, align 8
  %in_group.addr = alloca i8, align 1
  store %struct.rtx_def* %object, %struct.rtx_def** %object.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %object.addr, metadata !3775, metadata !DIExpression()), !dbg !3776
  store %struct.rtx_def** %loc, %struct.rtx_def*** %loc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def*** %loc.addr, metadata !3777, metadata !DIExpression()), !dbg !3778
  store %struct.rtx_def* %new_rtx, %struct.rtx_def** %new_rtx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %new_rtx.addr, metadata !3779, metadata !DIExpression()), !dbg !3780
  store i8 %in_group, i8* %in_group.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %in_group.addr, metadata !3781, metadata !DIExpression()), !dbg !3782
  %0 = load %struct.rtx_def*, %struct.rtx_def** %object.addr, align 8, !dbg !3783
  %1 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8, !dbg !3784
  %2 = load %struct.rtx_def*, %struct.rtx_def** %new_rtx.addr, align 8, !dbg !3785
  %3 = load i8, i8* %in_group.addr, align 1, !dbg !3786
  %call = call zeroext i8 @validate_change_1(%struct.rtx_def* %0, %struct.rtx_def** %1, %struct.rtx_def* %2, i8 zeroext %3, i8 zeroext 0), !dbg !3787
  ret i8 %call, !dbg !3788
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @validate_change_1(%struct.rtx_def* %object, %struct.rtx_def** %loc, %struct.rtx_def* %new_rtx, i8 zeroext %in_group, i8 zeroext %unshare) #0 !dbg !3789 {
entry:
  %retval = alloca i8, align 1
  %object.addr = alloca %struct.rtx_def*, align 8
  %loc.addr = alloca %struct.rtx_def**, align 8
  %new_rtx.addr = alloca %struct.rtx_def*, align 8
  %in_group.addr = alloca i8, align 1
  %unshare.addr = alloca i8, align 1
  %old = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %object, %struct.rtx_def** %object.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %object.addr, metadata !3792, metadata !DIExpression()), !dbg !3793
  store %struct.rtx_def** %loc, %struct.rtx_def*** %loc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def*** %loc.addr, metadata !3794, metadata !DIExpression()), !dbg !3795
  store %struct.rtx_def* %new_rtx, %struct.rtx_def** %new_rtx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %new_rtx.addr, metadata !3796, metadata !DIExpression()), !dbg !3797
  store i8 %in_group, i8* %in_group.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %in_group.addr, metadata !3798, metadata !DIExpression()), !dbg !3799
  store i8 %unshare, i8* %unshare.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %unshare.addr, metadata !3800, metadata !DIExpression()), !dbg !3801
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %old, metadata !3802, metadata !DIExpression()), !dbg !3803
  %0 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8, !dbg !3804
  %1 = load %struct.rtx_def*, %struct.rtx_def** %0, align 8, !dbg !3805
  store %struct.rtx_def* %1, %struct.rtx_def** %old, align 8, !dbg !3803
  %2 = load %struct.rtx_def*, %struct.rtx_def** %old, align 8, !dbg !3806
  %3 = load %struct.rtx_def*, %struct.rtx_def** %new_rtx.addr, align 8, !dbg !3808
  %cmp = icmp eq %struct.rtx_def* %2, %3, !dbg !3809
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3810

lor.lhs.false:                                    ; preds = %entry
  %4 = load %struct.rtx_def*, %struct.rtx_def** %old, align 8, !dbg !3811
  %5 = load %struct.rtx_def*, %struct.rtx_def** %new_rtx.addr, align 8, !dbg !3812
  %call = call i32 @rtx_equal_p(%struct.rtx_def* %4, %struct.rtx_def* %5), !dbg !3813
  %tobool = icmp ne i32 %call, 0, !dbg !3813
  br i1 %tobool, label %if.then, label %if.end, !dbg !3814

if.then:                                          ; preds = %lor.lhs.false, %entry
  store i8 1, i8* %retval, align 1, !dbg !3815
  br label %return, !dbg !3815

if.end:                                           ; preds = %lor.lhs.false
  %6 = load i8, i8* %in_group.addr, align 1, !dbg !3816
  %conv = zext i8 %6 to i32, !dbg !3816
  %cmp1 = icmp ne i32 %conv, 0, !dbg !3816
  br i1 %cmp1, label %cond.false, label %lor.lhs.false3, !dbg !3816

lor.lhs.false3:                                   ; preds = %if.end
  %7 = load i32, i32* @num_changes, align 4, !dbg !3816
  %cmp4 = icmp eq i32 %7, 0, !dbg !3816
  br i1 %cmp4, label %cond.false, label %cond.true, !dbg !3816

cond.true:                                        ; preds = %lor.lhs.false3
  call void @fancy_abort(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i32 208, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !3816
  br label %cond.end, !dbg !3816

cond.false:                                       ; preds = %lor.lhs.false3, %if.end
  br label %cond.end, !dbg !3816

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !3816
  %8 = load %struct.rtx_def*, %struct.rtx_def** %new_rtx.addr, align 8, !dbg !3817
  %9 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8, !dbg !3818
  store %struct.rtx_def* %8, %struct.rtx_def** %9, align 8, !dbg !3819
  %10 = load i32, i32* @num_changes, align 4, !dbg !3820
  %11 = load i32, i32* @changes_allocated, align 4, !dbg !3822
  %cmp6 = icmp sge i32 %10, %11, !dbg !3823
  br i1 %cmp6, label %if.then8, label %if.end16, !dbg !3824

if.then8:                                         ; preds = %cond.end
  %12 = load i32, i32* @changes_allocated, align 4, !dbg !3825
  %cmp9 = icmp eq i32 %12, 0, !dbg !3828
  br i1 %cmp9, label %if.then11, label %if.else, !dbg !3829

if.then11:                                        ; preds = %if.then8
  store i32 150, i32* @changes_allocated, align 4, !dbg !3830
  br label %if.end12, !dbg !3831

if.else:                                          ; preds = %if.then8
  %13 = load i32, i32* @changes_allocated, align 4, !dbg !3832
  %mul = mul nsw i32 %13, 2, !dbg !3832
  store i32 %mul, i32* @changes_allocated, align 4, !dbg !3832
  br label %if.end12

if.end12:                                         ; preds = %if.else, %if.then11
  %14 = load %struct.change_t*, %struct.change_t** @changes, align 8, !dbg !3833
  %15 = bitcast %struct.change_t* %14 to i8*, !dbg !3833
  %16 = load i32, i32* @changes_allocated, align 4, !dbg !3833
  %conv13 = sext i32 %16 to i64, !dbg !3833
  %mul14 = mul i64 40, %conv13, !dbg !3833
  %call15 = call i8* @xrealloc(i8* %15, i64 %mul14), !dbg !3833
  %17 = bitcast i8* %call15 to %struct.change_t*, !dbg !3833
  store %struct.change_t* %17, %struct.change_t** @changes, align 8, !dbg !3834
  br label %if.end16, !dbg !3835

if.end16:                                         ; preds = %if.end12, %cond.end
  %18 = load %struct.rtx_def*, %struct.rtx_def** %object.addr, align 8, !dbg !3836
  %19 = load %struct.change_t*, %struct.change_t** @changes, align 8, !dbg !3837
  %20 = load i32, i32* @num_changes, align 4, !dbg !3838
  %idxprom = sext i32 %20 to i64, !dbg !3837
  %arrayidx = getelementptr inbounds %struct.change_t, %struct.change_t* %19, i64 %idxprom, !dbg !3837
  %object17 = getelementptr inbounds %struct.change_t, %struct.change_t* %arrayidx, i32 0, i32 0, !dbg !3839
  store %struct.rtx_def* %18, %struct.rtx_def** %object17, align 8, !dbg !3840
  %21 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8, !dbg !3841
  %22 = load %struct.change_t*, %struct.change_t** @changes, align 8, !dbg !3842
  %23 = load i32, i32* @num_changes, align 4, !dbg !3843
  %idxprom18 = sext i32 %23 to i64, !dbg !3842
  %arrayidx19 = getelementptr inbounds %struct.change_t, %struct.change_t* %22, i64 %idxprom18, !dbg !3842
  %loc20 = getelementptr inbounds %struct.change_t, %struct.change_t* %arrayidx19, i32 0, i32 2, !dbg !3844
  store %struct.rtx_def** %21, %struct.rtx_def*** %loc20, align 8, !dbg !3845
  %24 = load %struct.rtx_def*, %struct.rtx_def** %old, align 8, !dbg !3846
  %25 = load %struct.change_t*, %struct.change_t** @changes, align 8, !dbg !3847
  %26 = load i32, i32* @num_changes, align 4, !dbg !3848
  %idxprom21 = sext i32 %26 to i64, !dbg !3847
  %arrayidx22 = getelementptr inbounds %struct.change_t, %struct.change_t* %25, i64 %idxprom21, !dbg !3847
  %old23 = getelementptr inbounds %struct.change_t, %struct.change_t* %arrayidx22, i32 0, i32 3, !dbg !3849
  store %struct.rtx_def* %24, %struct.rtx_def** %old23, align 8, !dbg !3850
  %27 = load i8, i8* %unshare.addr, align 1, !dbg !3851
  %28 = load %struct.change_t*, %struct.change_t** @changes, align 8, !dbg !3852
  %29 = load i32, i32* @num_changes, align 4, !dbg !3853
  %idxprom24 = sext i32 %29 to i64, !dbg !3852
  %arrayidx25 = getelementptr inbounds %struct.change_t, %struct.change_t* %28, i64 %idxprom24, !dbg !3852
  %unshare26 = getelementptr inbounds %struct.change_t, %struct.change_t* %arrayidx25, i32 0, i32 4, !dbg !3854
  store i8 %27, i8* %unshare26, align 8, !dbg !3855
  %30 = load %struct.rtx_def*, %struct.rtx_def** %object.addr, align 8, !dbg !3856
  %tobool27 = icmp ne %struct.rtx_def* %30, null, !dbg !3856
  br i1 %tobool27, label %land.lhs.true, label %if.end38, !dbg !3858

land.lhs.true:                                    ; preds = %if.end16
  %31 = load %struct.rtx_def*, %struct.rtx_def** %object.addr, align 8, !dbg !3859
  %32 = bitcast %struct.rtx_def* %31 to i32*, !dbg !3859
  %bf.load = load i32, i32* %32, align 8, !dbg !3859
  %bf.clear = and i32 %bf.load, 65535, !dbg !3859
  %cmp28 = icmp eq i32 %bf.clear, 43, !dbg !3859
  br i1 %cmp28, label %if.end38, label %if.then30, !dbg !3860

if.then30:                                        ; preds = %land.lhs.true
  %33 = load %struct.rtx_def*, %struct.rtx_def** %object.addr, align 8, !dbg !3861
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %33, i32 0, i32 1, !dbg !3861
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !3861
  %arrayidx31 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 6, !dbg !3861
  %rt_int = bitcast %union.rtunion_def* %arrayidx31 to i32*, !dbg !3861
  %34 = load i32, i32* %rt_int, align 8, !dbg !3861
  %35 = load %struct.change_t*, %struct.change_t** @changes, align 8, !dbg !3863
  %36 = load i32, i32* @num_changes, align 4, !dbg !3864
  %idxprom32 = sext i32 %36 to i64, !dbg !3863
  %arrayidx33 = getelementptr inbounds %struct.change_t, %struct.change_t* %35, i64 %idxprom32, !dbg !3863
  %old_code = getelementptr inbounds %struct.change_t, %struct.change_t* %arrayidx33, i32 0, i32 1, !dbg !3865
  store i32 %34, i32* %old_code, align 8, !dbg !3866
  %37 = load %struct.rtx_def*, %struct.rtx_def** %object.addr, align 8, !dbg !3867
  %u34 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %37, i32 0, i32 1, !dbg !3867
  %fld35 = bitcast %union.u* %u34 to [1 x %union.rtunion_def]*, !dbg !3867
  %arrayidx36 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld35, i64 0, i64 6, !dbg !3867
  %rt_int37 = bitcast %union.rtunion_def* %arrayidx36 to i32*, !dbg !3867
  store i32 -1, i32* %rt_int37, align 8, !dbg !3868
  br label %if.end38, !dbg !3869

if.end38:                                         ; preds = %if.then30, %land.lhs.true, %if.end16
  %38 = load i32, i32* @num_changes, align 4, !dbg !3870
  %inc = add nsw i32 %38, 1, !dbg !3870
  store i32 %inc, i32* @num_changes, align 4, !dbg !3870
  %39 = load i8, i8* %in_group.addr, align 1, !dbg !3871
  %tobool39 = icmp ne i8 %39, 0, !dbg !3871
  br i1 %tobool39, label %if.then40, label %if.else41, !dbg !3873

if.then40:                                        ; preds = %if.end38
  store i8 1, i8* %retval, align 1, !dbg !3874
  br label %return, !dbg !3874

if.else41:                                        ; preds = %if.end38
  %call42 = call i32 @apply_change_group(), !dbg !3875
  %conv43 = trunc i32 %call42 to i8, !dbg !3875
  store i8 %conv43, i8* %retval, align 1, !dbg !3876
  br label %return, !dbg !3876

return:                                           ; preds = %if.else41, %if.then40, %if.then
  %40 = load i8, i8* %retval, align 1, !dbg !3877
  ret i8 %40, !dbg !3877
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @validate_unshare_change(%struct.rtx_def* %object, %struct.rtx_def** %loc, %struct.rtx_def* %new_rtx, i8 zeroext %in_group) #0 !dbg !3878 {
entry:
  %object.addr = alloca %struct.rtx_def*, align 8
  %loc.addr = alloca %struct.rtx_def**, align 8
  %new_rtx.addr = alloca %struct.rtx_def*, align 8
  %in_group.addr = alloca i8, align 1
  store %struct.rtx_def* %object, %struct.rtx_def** %object.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %object.addr, metadata !3879, metadata !DIExpression()), !dbg !3880
  store %struct.rtx_def** %loc, %struct.rtx_def*** %loc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def*** %loc.addr, metadata !3881, metadata !DIExpression()), !dbg !3882
  store %struct.rtx_def* %new_rtx, %struct.rtx_def** %new_rtx.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %new_rtx.addr, metadata !3883, metadata !DIExpression()), !dbg !3884
  store i8 %in_group, i8* %in_group.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %in_group.addr, metadata !3885, metadata !DIExpression()), !dbg !3886
  %0 = load %struct.rtx_def*, %struct.rtx_def** %object.addr, align 8, !dbg !3887
  %1 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8, !dbg !3888
  %2 = load %struct.rtx_def*, %struct.rtx_def** %new_rtx.addr, align 8, !dbg !3889
  %3 = load i8, i8* %in_group.addr, align 1, !dbg !3890
  %call = call zeroext i8 @validate_change_1(%struct.rtx_def* %0, %struct.rtx_def** %1, %struct.rtx_def* %2, i8 zeroext %3, i8 zeroext 1), !dbg !3891
  ret i8 %call, !dbg !3892
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @canonicalize_change_group(%struct.rtx_def* %insn, %struct.rtx_def* %x) #0 !dbg !3893 {
entry:
  %retval = alloca i8, align 1
  %insn.addr = alloca %struct.rtx_def*, align 8
  %x.addr = alloca %struct.rtx_def*, align 8
  %tem = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !3896, metadata !DIExpression()), !dbg !3897
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !3898, metadata !DIExpression()), !dbg !3899
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3900
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !3900
  %bf.load = load i32, i32* %1, align 8, !dbg !3900
  %bf.clear = and i32 %bf.load, 65535, !dbg !3900
  %idxprom = sext i32 %bf.clear to i64, !dbg !3900
  %arrayidx = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom, !dbg !3900
  %2 = load i32, i32* %arrayidx, align 4, !dbg !3900
  %and = and i32 %2, -3, !dbg !3900
  %cmp = icmp eq i32 %and, 1, !dbg !3900
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !3902

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3903
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i32 0, i32 1, !dbg !3903
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !3903
  %arrayidx1 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !3903
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx1 to %struct.rtx_def**, !dbg !3903
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3903
  %5 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3904
  %u2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i32 0, i32 1, !dbg !3904
  %fld3 = bitcast %union.u* %u2 to [1 x %union.rtunion_def]*, !dbg !3904
  %arrayidx4 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld3, i64 0, i64 1, !dbg !3904
  %rt_rtx5 = bitcast %union.rtunion_def* %arrayidx4 to %struct.rtx_def**, !dbg !3904
  %6 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx5, align 8, !dbg !3904
  %call = call zeroext i8 @swap_commutative_operands_p(%struct.rtx_def* %4, %struct.rtx_def* %6), !dbg !3905
  %conv = zext i8 %call to i32, !dbg !3905
  %tobool = icmp ne i32 %conv, 0, !dbg !3905
  br i1 %tobool, label %if.then, label %if.else, !dbg !3906

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %tem, metadata !3907, metadata !DIExpression()), !dbg !3909
  %7 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3910
  %u6 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i32 0, i32 1, !dbg !3910
  %fld7 = bitcast %union.u* %u6 to [1 x %union.rtunion_def]*, !dbg !3910
  %arrayidx8 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld7, i64 0, i64 0, !dbg !3910
  %rt_rtx9 = bitcast %union.rtunion_def* %arrayidx8 to %struct.rtx_def**, !dbg !3910
  %8 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx9, align 8, !dbg !3910
  store %struct.rtx_def* %8, %struct.rtx_def** %tem, align 8, !dbg !3909
  %9 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3911
  %10 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3912
  %u10 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i32 0, i32 1, !dbg !3912
  %fld11 = bitcast %union.u* %u10 to [1 x %union.rtunion_def]*, !dbg !3912
  %arrayidx12 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld11, i64 0, i64 0, !dbg !3912
  %rt_rtx13 = bitcast %union.rtunion_def* %arrayidx12 to %struct.rtx_def**, !dbg !3912
  %11 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3913
  %u14 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i32 0, i32 1, !dbg !3913
  %fld15 = bitcast %union.u* %u14 to [1 x %union.rtunion_def]*, !dbg !3913
  %arrayidx16 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld15, i64 0, i64 1, !dbg !3913
  %rt_rtx17 = bitcast %union.rtunion_def* %arrayidx16 to %struct.rtx_def**, !dbg !3913
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx17, align 8, !dbg !3913
  %call18 = call zeroext i8 @validate_change(%struct.rtx_def* %9, %struct.rtx_def** %rt_rtx13, %struct.rtx_def* %12, i8 zeroext 1), !dbg !3914
  %13 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3915
  %14 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !3916
  %u19 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i32 0, i32 1, !dbg !3916
  %fld20 = bitcast %union.u* %u19 to [1 x %union.rtunion_def]*, !dbg !3916
  %arrayidx21 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld20, i64 0, i64 1, !dbg !3916
  %rt_rtx22 = bitcast %union.rtunion_def* %arrayidx21 to %struct.rtx_def**, !dbg !3916
  %15 = load %struct.rtx_def*, %struct.rtx_def** %tem, align 8, !dbg !3917
  %call23 = call zeroext i8 @validate_change(%struct.rtx_def* %13, %struct.rtx_def** %rt_rtx22, %struct.rtx_def* %15, i8 zeroext 1), !dbg !3918
  store i8 1, i8* %retval, align 1, !dbg !3919
  br label %return, !dbg !3919

if.else:                                          ; preds = %land.lhs.true, %entry
  store i8 0, i8* %retval, align 1, !dbg !3920
  br label %return, !dbg !3920

return:                                           ; preds = %if.else, %if.then
  %16 = load i8, i8* %retval, align 1, !dbg !3921
  ret i8 %16, !dbg !3921
}

declare dso_local zeroext i8 @swap_commutative_operands_p(%struct.rtx_def*, %struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @insn_invalid_p(%struct.rtx_def* %insn) #0 !dbg !3922 {
entry:
  %retval = alloca i32, align 4
  %insn.addr = alloca %struct.rtx_def*, align 8
  %pat = alloca %struct.rtx_def*, align 8
  %num_clobbers = alloca i32, align 4
  %icode = alloca i32, align 4
  %is_asm = alloca i32, align 4
  %newpat = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !3923, metadata !DIExpression()), !dbg !3924
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %pat, metadata !3925, metadata !DIExpression()), !dbg !3926
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3927
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i32 0, i32 1, !dbg !3927
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !3927
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 5, !dbg !3927
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !3927
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !3927
  store %struct.rtx_def* %1, %struct.rtx_def** %pat, align 8, !dbg !3926
  call void @llvm.dbg.declare(metadata i32* %num_clobbers, metadata !3928, metadata !DIExpression()), !dbg !3929
  store i32 0, i32* %num_clobbers, align 4, !dbg !3929
  call void @llvm.dbg.declare(metadata i32* %icode, metadata !3930, metadata !DIExpression()), !dbg !3931
  %2 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8, !dbg !3932
  %3 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3933
  %4 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8, !dbg !3934
  %5 = bitcast %struct.rtx_def* %4 to i32*, !dbg !3934
  %bf.load = load i32, i32* %5, align 8, !dbg !3934
  %bf.clear = and i32 %bf.load, 65535, !dbg !3934
  %cmp = icmp eq i32 %bf.clear, 23, !dbg !3935
  br i1 %cmp, label %land.lhs.true, label %cond.false, !dbg !3936

land.lhs.true:                                    ; preds = %entry
  %6 = load i32, i32* @reload_completed, align 4, !dbg !3937
  %tobool = icmp ne i32 %6, 0, !dbg !3937
  br i1 %tobool, label %cond.false, label %land.lhs.true1, !dbg !3938

land.lhs.true1:                                   ; preds = %land.lhs.true
  %7 = load i32, i32* @reload_in_progress, align 4, !dbg !3939
  %tobool2 = icmp ne i32 %7, 0, !dbg !3939
  br i1 %tobool2, label %cond.false, label %cond.true, !dbg !3940

cond.true:                                        ; preds = %land.lhs.true1
  br label %cond.end, !dbg !3940

cond.false:                                       ; preds = %land.lhs.true1, %land.lhs.true, %entry
  br label %cond.end, !dbg !3940

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32* [ %num_clobbers, %cond.true ], [ null, %cond.false ], !dbg !3940
  %call = call i32 @recog(%struct.rtx_def* %2, %struct.rtx_def* %3, i32* %cond), !dbg !3941
  store i32 %call, i32* %icode, align 4, !dbg !3931
  call void @llvm.dbg.declare(metadata i32* %is_asm, metadata !3942, metadata !DIExpression()), !dbg !3943
  %8 = load i32, i32* %icode, align 4, !dbg !3944
  %cmp3 = icmp slt i32 %8, 0, !dbg !3945
  br i1 %cmp3, label %land.rhs, label %land.end, !dbg !3946

land.rhs:                                         ; preds = %cond.end
  %9 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3947
  %u4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %9, i32 0, i32 1, !dbg !3947
  %fld5 = bitcast %union.u* %u4 to [1 x %union.rtunion_def]*, !dbg !3947
  %arrayidx6 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld5, i64 0, i64 5, !dbg !3947
  %rt_rtx7 = bitcast %union.rtunion_def* %arrayidx6 to %struct.rtx_def**, !dbg !3947
  %10 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx7, align 8, !dbg !3947
  %call8 = call i32 @asm_noperands(%struct.rtx_def* %10), !dbg !3948
  %cmp9 = icmp sge i32 %call8, 0, !dbg !3949
  br label %land.end

land.end:                                         ; preds = %land.rhs, %cond.end
  %11 = phi i1 [ false, %cond.end ], [ %cmp9, %land.rhs ], !dbg !3950
  %land.ext = zext i1 %11 to i32, !dbg !3946
  store i32 %land.ext, i32* %is_asm, align 4, !dbg !3943
  %12 = load i32, i32* %is_asm, align 4, !dbg !3951
  %tobool10 = icmp ne i32 %12, 0, !dbg !3951
  br i1 %tobool10, label %land.lhs.true11, label %lor.lhs.false, !dbg !3953

land.lhs.true11:                                  ; preds = %land.end
  %13 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3954
  %u12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %13, i32 0, i32 1, !dbg !3954
  %fld13 = bitcast %union.u* %u12 to [1 x %union.rtunion_def]*, !dbg !3954
  %arrayidx14 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld13, i64 0, i64 5, !dbg !3954
  %rt_rtx15 = bitcast %union.rtunion_def* %arrayidx14 to %struct.rtx_def**, !dbg !3954
  %14 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx15, align 8, !dbg !3954
  %call16 = call i32 @check_asm_operands(%struct.rtx_def* %14), !dbg !3955
  %tobool17 = icmp ne i32 %call16, 0, !dbg !3955
  br i1 %tobool17, label %lor.lhs.false, label %if.then, !dbg !3956

lor.lhs.false:                                    ; preds = %land.lhs.true11, %land.end
  %15 = load i32, i32* %is_asm, align 4, !dbg !3957
  %tobool18 = icmp ne i32 %15, 0, !dbg !3957
  br i1 %tobool18, label %if.end, label %land.lhs.true19, !dbg !3958

land.lhs.true19:                                  ; preds = %lor.lhs.false
  %16 = load i32, i32* %icode, align 4, !dbg !3959
  %cmp20 = icmp slt i32 %16, 0, !dbg !3960
  br i1 %cmp20, label %if.then, label %if.end, !dbg !3961

if.then:                                          ; preds = %land.lhs.true19, %land.lhs.true11
  store i32 1, i32* %retval, align 4, !dbg !3962
  br label %return, !dbg !3962

if.end:                                           ; preds = %land.lhs.true19, %lor.lhs.false
  %17 = load i32, i32* %num_clobbers, align 4, !dbg !3963
  %cmp21 = icmp sgt i32 %17, 0, !dbg !3965
  br i1 %cmp21, label %if.then22, label %if.end37, !dbg !3966

if.then22:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %newpat, metadata !3967, metadata !DIExpression()), !dbg !3969
  %18 = load i32, i32* %icode, align 4, !dbg !3970
  %call23 = call i32 @added_clobbers_hard_reg_p(i32 %18), !dbg !3972
  %tobool24 = icmp ne i32 %call23, 0, !dbg !3972
  br i1 %tobool24, label %if.then25, label %if.end26, !dbg !3973

if.then25:                                        ; preds = %if.then22
  store i32 1, i32* %retval, align 4, !dbg !3974
  br label %return, !dbg !3974

if.end26:                                         ; preds = %if.then22
  %19 = load i32, i32* %num_clobbers, align 4, !dbg !3975
  %add = add nsw i32 %19, 1, !dbg !3975
  %call27 = call %struct.rtvec_def* @rtvec_alloc(i32 %add), !dbg !3975
  %call28 = call %struct.rtx_def* @gen_rtx_fmt_E_stat(i32 15, i32 0, %struct.rtvec_def* %call27), !dbg !3975
  store %struct.rtx_def* %call28, %struct.rtx_def** %newpat, align 8, !dbg !3976
  %20 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8, !dbg !3977
  %21 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8, !dbg !3978
  %u29 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %21, i32 0, i32 1, !dbg !3978
  %fld30 = bitcast %union.u* %u29 to [1 x %union.rtunion_def]*, !dbg !3978
  %arrayidx31 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld30, i64 0, i64 0, !dbg !3978
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx31 to %struct.rtvec_def**, !dbg !3978
  %22 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !3978
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %22, i32 0, i32 1, !dbg !3978
  %arrayidx32 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i64 0, i64 0, !dbg !3978
  store %struct.rtx_def* %20, %struct.rtx_def** %arrayidx32, align 8, !dbg !3979
  %23 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8, !dbg !3980
  %24 = load i32, i32* %icode, align 4, !dbg !3981
  call void @add_clobbers(%struct.rtx_def* %23, i32 %24), !dbg !3982
  %25 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8, !dbg !3983
  store %struct.rtx_def* %25, %struct.rtx_def** %pat, align 8, !dbg !3984
  %26 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3985
  %u33 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %26, i32 0, i32 1, !dbg !3985
  %fld34 = bitcast %union.u* %u33 to [1 x %union.rtunion_def]*, !dbg !3985
  %arrayidx35 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld34, i64 0, i64 5, !dbg !3985
  %rt_rtx36 = bitcast %union.rtunion_def* %arrayidx35 to %struct.rtx_def**, !dbg !3985
  store %struct.rtx_def* %25, %struct.rtx_def** %rt_rtx36, align 8, !dbg !3986
  br label %if.end37, !dbg !3987

if.end37:                                         ; preds = %if.end26, %if.end
  %27 = load i32, i32* @reload_completed, align 4, !dbg !3988
  %tobool38 = icmp ne i32 %27, 0, !dbg !3988
  br i1 %tobool38, label %if.then39, label %if.end44, !dbg !3990

if.then39:                                        ; preds = %if.end37
  %28 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !3991
  call void @extract_insn(%struct.rtx_def* %28), !dbg !3993
  %call40 = call i32 @constrain_operands(i32 1), !dbg !3994
  %tobool41 = icmp ne i32 %call40, 0, !dbg !3994
  br i1 %tobool41, label %if.end43, label %if.then42, !dbg !3996

if.then42:                                        ; preds = %if.then39
  store i32 1, i32* %retval, align 4, !dbg !3997
  br label %return, !dbg !3997

if.end43:                                         ; preds = %if.then39
  br label %if.end44, !dbg !3998

if.end44:                                         ; preds = %if.end43, %if.end37
  %29 = load i32, i32* %icode, align 4, !dbg !3999
  %30 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4000
  %u45 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %30, i32 0, i32 1, !dbg !4000
  %fld46 = bitcast %union.u* %u45 to [1 x %union.rtunion_def]*, !dbg !4000
  %arrayidx47 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld46, i64 0, i64 6, !dbg !4000
  %rt_int = bitcast %union.rtunion_def* %arrayidx47 to i32*, !dbg !4000
  store i32 %29, i32* %rt_int, align 8, !dbg !4001
  store i32 0, i32* %retval, align 4, !dbg !4002
  br label %return, !dbg !4002

return:                                           ; preds = %if.end44, %if.then42, %if.then25, %if.then
  %31 = load i32, i32* %retval, align 4, !dbg !4003
  ret i32 %31, !dbg !4003
}

declare dso_local i32 @recog(%struct.rtx_def*, %struct.rtx_def*, i32*) #2

declare dso_local i32 @added_clobbers_hard_reg_p(i32) #2

declare dso_local %struct.rtx_def* @gen_rtx_fmt_E_stat(i32, i32, %struct.rtvec_def*) #2

declare dso_local %struct.rtvec_def* @rtvec_alloc(i32) #2

declare dso_local void @add_clobbers(%struct.rtx_def*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @num_changes_pending() #0 !dbg !4004 {
entry:
  %0 = load i32, i32* @num_changes, align 4, !dbg !4007
  ret i32 %0, !dbg !4008
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @verify_changes(i32 %num) #0 !dbg !4009 {
entry:
  %num.addr = alloca i32, align 4
  %i = alloca i32, align 4
  %last_validated = alloca %struct.rtx_def*, align 8
  %object = alloca %struct.rtx_def*, align 8
  %pat = alloca %struct.rtx_def*, align 8
  %newpat = alloca %struct.rtx_def*, align 8
  %j = alloca i32, align 4
  store i32 %num, i32* %num.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %num.addr, metadata !4010, metadata !DIExpression()), !dbg !4011
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4012, metadata !DIExpression()), !dbg !4013
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %last_validated, metadata !4014, metadata !DIExpression()), !dbg !4015
  store %struct.rtx_def* null, %struct.rtx_def** %last_validated, align 8, !dbg !4015
  %0 = load i32, i32* %num.addr, align 4, !dbg !4016
  store i32 %0, i32* %i, align 4, !dbg !4018
  br label %for.cond, !dbg !4019

for.cond:                                         ; preds = %for.inc250, %entry
  %1 = load i32, i32* %i, align 4, !dbg !4020
  %2 = load i32, i32* @num_changes, align 4, !dbg !4022
  %cmp = icmp slt i32 %1, %2, !dbg !4023
  br i1 %cmp, label %for.body, label %for.end252, !dbg !4024

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %object, metadata !4025, metadata !DIExpression()), !dbg !4027
  %3 = load %struct.change_t*, %struct.change_t** @changes, align 8, !dbg !4028
  %4 = load i32, i32* %i, align 4, !dbg !4029
  %idxprom = sext i32 %4 to i64, !dbg !4028
  %arrayidx = getelementptr inbounds %struct.change_t, %struct.change_t* %3, i64 %idxprom, !dbg !4028
  %object1 = getelementptr inbounds %struct.change_t, %struct.change_t* %arrayidx, i32 0, i32 0, !dbg !4030
  %5 = load %struct.rtx_def*, %struct.rtx_def** %object1, align 8, !dbg !4030
  store %struct.rtx_def* %5, %struct.rtx_def** %object, align 8, !dbg !4027
  %6 = load %struct.rtx_def*, %struct.rtx_def** %object, align 8, !dbg !4031
  %cmp2 = icmp eq %struct.rtx_def* %6, null, !dbg !4033
  br i1 %cmp2, label %if.then, label %lor.lhs.false, !dbg !4034

lor.lhs.false:                                    ; preds = %for.body
  %7 = load %struct.rtx_def*, %struct.rtx_def** %object, align 8, !dbg !4035
  %8 = load %struct.rtx_def*, %struct.rtx_def** %last_validated, align 8, !dbg !4036
  %cmp3 = icmp eq %struct.rtx_def* %7, %8, !dbg !4037
  br i1 %cmp3, label %if.then, label %if.end, !dbg !4038

if.then:                                          ; preds = %lor.lhs.false, %for.body
  br label %for.inc250, !dbg !4039

if.end:                                           ; preds = %lor.lhs.false
  %9 = load %struct.rtx_def*, %struct.rtx_def** %object, align 8, !dbg !4040
  %10 = bitcast %struct.rtx_def* %9 to i32*, !dbg !4040
  %bf.load = load i32, i32* %10, align 8, !dbg !4040
  %bf.clear = and i32 %bf.load, 65535, !dbg !4040
  %cmp4 = icmp eq i32 %bf.clear, 43, !dbg !4040
  br i1 %cmp4, label %if.then5, label %if.else, !dbg !4042

if.then5:                                         ; preds = %if.end
  %11 = load %struct.rtx_def*, %struct.rtx_def** %object, align 8, !dbg !4043
  %12 = bitcast %struct.rtx_def* %11 to i32*, !dbg !4043
  %bf.load6 = load i32, i32* %12, align 8, !dbg !4043
  %bf.lshr = lshr i32 %bf.load6, 16, !dbg !4043
  %bf.clear7 = and i32 %bf.lshr, 255, !dbg !4043
  %13 = load %struct.rtx_def*, %struct.rtx_def** %object, align 8, !dbg !4046
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %13, i32 0, i32 1, !dbg !4046
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !4046
  %arrayidx8 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !4046
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx8 to %struct.rtx_def**, !dbg !4046
  %14 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4046
  %15 = load %struct.rtx_def*, %struct.rtx_def** %object, align 8, !dbg !4047
  %u9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i32 0, i32 1, !dbg !4047
  %fld10 = bitcast %union.u* %u9 to [1 x %union.rtunion_def]*, !dbg !4047
  %arrayidx11 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld10, i64 0, i64 1, !dbg !4047
  %rt_mem = bitcast %union.rtunion_def* %arrayidx11 to %struct.mem_attrs**, !dbg !4047
  %16 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !4047
  %cmp12 = icmp eq %struct.mem_attrs* %16, null, !dbg !4047
  br i1 %cmp12, label %cond.true, label %cond.false, !dbg !4047

cond.true:                                        ; preds = %if.then5
  br label %cond.end, !dbg !4047

cond.false:                                       ; preds = %if.then5
  %17 = load %struct.rtx_def*, %struct.rtx_def** %object, align 8, !dbg !4047
  %u13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i32 0, i32 1, !dbg !4047
  %fld14 = bitcast %union.u* %u13 to [1 x %union.rtunion_def]*, !dbg !4047
  %arrayidx15 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld14, i64 0, i64 1, !dbg !4047
  %rt_mem16 = bitcast %union.rtunion_def* %arrayidx15 to %struct.mem_attrs**, !dbg !4047
  %18 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem16, align 8, !dbg !4047
  %addrspace = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %18, i32 0, i32 5, !dbg !4047
  %19 = load i8, i8* %addrspace, align 8, !dbg !4047
  %conv = zext i8 %19 to i32, !dbg !4047
  br label %cond.end, !dbg !4047

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %conv, %cond.false ], !dbg !4047
  %conv17 = trunc i32 %cond to i8, !dbg !4047
  %call = call i32 @memory_address_addr_space_p(i32 %bf.clear7, %struct.rtx_def* %14, i8 zeroext %conv17), !dbg !4048
  %tobool = icmp ne i32 %call, 0, !dbg !4048
  br i1 %tobool, label %if.end19, label %if.then18, !dbg !4049

if.then18:                                        ; preds = %cond.end
  br label %for.end252, !dbg !4050

if.end19:                                         ; preds = %cond.end
  br label %if.end249, !dbg !4051

if.else:                                          ; preds = %if.end
  %20 = load %struct.change_t*, %struct.change_t** @changes, align 8, !dbg !4052
  %21 = load i32, i32* %i, align 4, !dbg !4052
  %idxprom20 = sext i32 %21 to i64, !dbg !4052
  %arrayidx21 = getelementptr inbounds %struct.change_t, %struct.change_t* %20, i64 %idxprom20, !dbg !4052
  %old = getelementptr inbounds %struct.change_t, %struct.change_t* %arrayidx21, i32 0, i32 3, !dbg !4052
  %22 = load %struct.rtx_def*, %struct.rtx_def** %old, align 8, !dbg !4052
  %23 = bitcast %struct.rtx_def* %22 to i32*, !dbg !4052
  %bf.load22 = load i32, i32* %23, align 8, !dbg !4052
  %bf.clear23 = and i32 %bf.load22, 65535, !dbg !4052
  %cmp24 = icmp eq i32 %bf.clear23, 37, !dbg !4052
  br i1 %cmp24, label %land.lhs.true, label %if.else136, !dbg !4054

land.lhs.true:                                    ; preds = %if.else
  %24 = load %struct.rtx_def*, %struct.rtx_def** %object, align 8, !dbg !4055
  %u26 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %24, i32 0, i32 1, !dbg !4055
  %fld27 = bitcast %union.u* %u26 to [1 x %union.rtunion_def]*, !dbg !4055
  %arrayidx28 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld27, i64 0, i64 5, !dbg !4055
  %rt_rtx29 = bitcast %union.rtunion_def* %arrayidx28 to %struct.rtx_def**, !dbg !4055
  %25 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx29, align 8, !dbg !4055
  %call30 = call i32 @asm_noperands(%struct.rtx_def* %25), !dbg !4056
  %cmp31 = icmp sgt i32 %call30, 0, !dbg !4057
  br i1 %cmp31, label %land.lhs.true33, label %if.else136, !dbg !4058

land.lhs.true33:                                  ; preds = %land.lhs.true
  %26 = load %struct.change_t*, %struct.change_t** @changes, align 8, !dbg !4059
  %27 = load i32, i32* %i, align 4, !dbg !4059
  %idxprom34 = sext i32 %27 to i64, !dbg !4059
  %arrayidx35 = getelementptr inbounds %struct.change_t, %struct.change_t* %26, i64 %idxprom34, !dbg !4059
  %old36 = getelementptr inbounds %struct.change_t, %struct.change_t* %arrayidx35, i32 0, i32 3, !dbg !4059
  %28 = load %struct.rtx_def*, %struct.rtx_def** %old36, align 8, !dbg !4059
  %u37 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %28, i32 0, i32 1, !dbg !4059
  %fld38 = bitcast %union.u* %u37 to [1 x %union.rtunion_def]*, !dbg !4059
  %arrayidx39 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld38, i64 0, i64 2, !dbg !4059
  %rt_reg = bitcast %union.rtunion_def* %arrayidx39 to %struct.reg_attrs**, !dbg !4059
  %29 = load %struct.reg_attrs*, %struct.reg_attrs** %rt_reg, align 8, !dbg !4059
  %cmp40 = icmp eq %struct.reg_attrs* %29, null, !dbg !4059
  br i1 %cmp40, label %cond.true42, label %cond.false43, !dbg !4059

cond.true42:                                      ; preds = %land.lhs.true33
  br label %cond.end51, !dbg !4059

cond.false43:                                     ; preds = %land.lhs.true33
  %30 = load %struct.change_t*, %struct.change_t** @changes, align 8, !dbg !4059
  %31 = load i32, i32* %i, align 4, !dbg !4059
  %idxprom44 = sext i32 %31 to i64, !dbg !4059
  %arrayidx45 = getelementptr inbounds %struct.change_t, %struct.change_t* %30, i64 %idxprom44, !dbg !4059
  %old46 = getelementptr inbounds %struct.change_t, %struct.change_t* %arrayidx45, i32 0, i32 3, !dbg !4059
  %32 = load %struct.rtx_def*, %struct.rtx_def** %old46, align 8, !dbg !4059
  %u47 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %32, i32 0, i32 1, !dbg !4059
  %fld48 = bitcast %union.u* %u47 to [1 x %union.rtunion_def]*, !dbg !4059
  %arrayidx49 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld48, i64 0, i64 2, !dbg !4059
  %rt_reg50 = bitcast %union.rtunion_def* %arrayidx49 to %struct.reg_attrs**, !dbg !4059
  %33 = load %struct.reg_attrs*, %struct.reg_attrs** %rt_reg50, align 8, !dbg !4059
  %decl = getelementptr inbounds %struct.reg_attrs, %struct.reg_attrs* %33, i32 0, i32 0, !dbg !4059
  %34 = load %union.tree_node*, %union.tree_node** %decl, align 8, !dbg !4059
  br label %cond.end51, !dbg !4059

cond.end51:                                       ; preds = %cond.false43, %cond.true42
  %cond52 = phi %union.tree_node* [ null, %cond.true42 ], [ %34, %cond.false43 ], !dbg !4059
  %cmp53 = icmp ne %union.tree_node* %cond52, null, !dbg !4060
  br i1 %cmp53, label %land.lhs.true55, label %if.else136, !dbg !4061

land.lhs.true55:                                  ; preds = %cond.end51
  %35 = load %struct.change_t*, %struct.change_t** @changes, align 8, !dbg !4062
  %36 = load i32, i32* %i, align 4, !dbg !4062
  %idxprom56 = sext i32 %36 to i64, !dbg !4062
  %arrayidx57 = getelementptr inbounds %struct.change_t, %struct.change_t* %35, i64 %idxprom56, !dbg !4062
  %old58 = getelementptr inbounds %struct.change_t, %struct.change_t* %arrayidx57, i32 0, i32 3, !dbg !4062
  %37 = load %struct.rtx_def*, %struct.rtx_def** %old58, align 8, !dbg !4062
  %u59 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %37, i32 0, i32 1, !dbg !4062
  %fld60 = bitcast %union.u* %u59 to [1 x %union.rtunion_def]*, !dbg !4062
  %arrayidx61 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld60, i64 0, i64 2, !dbg !4062
  %rt_reg62 = bitcast %union.rtunion_def* %arrayidx61 to %struct.reg_attrs**, !dbg !4062
  %38 = load %struct.reg_attrs*, %struct.reg_attrs** %rt_reg62, align 8, !dbg !4062
  %cmp63 = icmp eq %struct.reg_attrs* %38, null, !dbg !4062
  br i1 %cmp63, label %cond.true65, label %cond.false66, !dbg !4062

cond.true65:                                      ; preds = %land.lhs.true55
  br label %cond.end75, !dbg !4062

cond.false66:                                     ; preds = %land.lhs.true55
  %39 = load %struct.change_t*, %struct.change_t** @changes, align 8, !dbg !4062
  %40 = load i32, i32* %i, align 4, !dbg !4062
  %idxprom67 = sext i32 %40 to i64, !dbg !4062
  %arrayidx68 = getelementptr inbounds %struct.change_t, %struct.change_t* %39, i64 %idxprom67, !dbg !4062
  %old69 = getelementptr inbounds %struct.change_t, %struct.change_t* %arrayidx68, i32 0, i32 3, !dbg !4062
  %41 = load %struct.rtx_def*, %struct.rtx_def** %old69, align 8, !dbg !4062
  %u70 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %41, i32 0, i32 1, !dbg !4062
  %fld71 = bitcast %union.u* %u70 to [1 x %union.rtunion_def]*, !dbg !4062
  %arrayidx72 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld71, i64 0, i64 2, !dbg !4062
  %rt_reg73 = bitcast %union.rtunion_def* %arrayidx72 to %struct.reg_attrs**, !dbg !4062
  %42 = load %struct.reg_attrs*, %struct.reg_attrs** %rt_reg73, align 8, !dbg !4062
  %decl74 = getelementptr inbounds %struct.reg_attrs, %struct.reg_attrs* %42, i32 0, i32 0, !dbg !4062
  %43 = load %union.tree_node*, %union.tree_node** %decl74, align 8, !dbg !4062
  br label %cond.end75, !dbg !4062

cond.end75:                                       ; preds = %cond.false66, %cond.true65
  %cond76 = phi %union.tree_node* [ null, %cond.true65 ], [ %43, %cond.false66 ], !dbg !4062
  %base = bitcast %union.tree_node* %cond76 to %struct.tree_base*, !dbg !4062
  %44 = bitcast %struct.tree_base* %base to i64*, !dbg !4062
  %bf.load77 = load i64, i64* %44, align 8, !dbg !4062
  %bf.clear78 = and i64 %bf.load77, 65535, !dbg !4062
  %bf.cast = trunc i64 %bf.clear78 to i32, !dbg !4062
  %idxprom79 = zext i32 %bf.cast to i64, !dbg !4062
  %arrayidx80 = getelementptr inbounds [191 x [64 x i8]], [191 x [64 x i8]]* @tree_contains_struct, i64 0, i64 %idxprom79, !dbg !4062
  %arrayidx81 = getelementptr inbounds [64 x i8], [64 x i8]* %arrayidx80, i64 0, i64 13, !dbg !4062
  %45 = load i8, i8* %arrayidx81, align 1, !dbg !4062
  %conv82 = zext i8 %45 to i32, !dbg !4062
  %tobool83 = icmp ne i32 %conv82, 0, !dbg !4062
  br i1 %tobool83, label %land.lhs.true84, label %if.else136, !dbg !4062

land.lhs.true84:                                  ; preds = %cond.end75
  %46 = load %struct.change_t*, %struct.change_t** @changes, align 8, !dbg !4062
  %47 = load i32, i32* %i, align 4, !dbg !4062
  %idxprom85 = sext i32 %47 to i64, !dbg !4062
  %arrayidx86 = getelementptr inbounds %struct.change_t, %struct.change_t* %46, i64 %idxprom85, !dbg !4062
  %old87 = getelementptr inbounds %struct.change_t, %struct.change_t* %arrayidx86, i32 0, i32 3, !dbg !4062
  %48 = load %struct.rtx_def*, %struct.rtx_def** %old87, align 8, !dbg !4062
  %u88 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %48, i32 0, i32 1, !dbg !4062
  %fld89 = bitcast %union.u* %u88 to [1 x %union.rtunion_def]*, !dbg !4062
  %arrayidx90 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld89, i64 0, i64 2, !dbg !4062
  %rt_reg91 = bitcast %union.rtunion_def* %arrayidx90 to %struct.reg_attrs**, !dbg !4062
  %49 = load %struct.reg_attrs*, %struct.reg_attrs** %rt_reg91, align 8, !dbg !4062
  %cmp92 = icmp eq %struct.reg_attrs* %49, null, !dbg !4062
  br i1 %cmp92, label %cond.true94, label %cond.false95, !dbg !4062

cond.true94:                                      ; preds = %land.lhs.true84
  br label %cond.end104, !dbg !4062

cond.false95:                                     ; preds = %land.lhs.true84
  %50 = load %struct.change_t*, %struct.change_t** @changes, align 8, !dbg !4062
  %51 = load i32, i32* %i, align 4, !dbg !4062
  %idxprom96 = sext i32 %51 to i64, !dbg !4062
  %arrayidx97 = getelementptr inbounds %struct.change_t, %struct.change_t* %50, i64 %idxprom96, !dbg !4062
  %old98 = getelementptr inbounds %struct.change_t, %struct.change_t* %arrayidx97, i32 0, i32 3, !dbg !4062
  %52 = load %struct.rtx_def*, %struct.rtx_def** %old98, align 8, !dbg !4062
  %u99 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %52, i32 0, i32 1, !dbg !4062
  %fld100 = bitcast %union.u* %u99 to [1 x %union.rtunion_def]*, !dbg !4062
  %arrayidx101 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld100, i64 0, i64 2, !dbg !4062
  %rt_reg102 = bitcast %union.rtunion_def* %arrayidx101 to %struct.reg_attrs**, !dbg !4062
  %53 = load %struct.reg_attrs*, %struct.reg_attrs** %rt_reg102, align 8, !dbg !4062
  %decl103 = getelementptr inbounds %struct.reg_attrs, %struct.reg_attrs* %53, i32 0, i32 0, !dbg !4062
  %54 = load %union.tree_node*, %union.tree_node** %decl103, align 8, !dbg !4062
  br label %cond.end104, !dbg !4062

cond.end104:                                      ; preds = %cond.false95, %cond.true94
  %cond105 = phi %union.tree_node* [ null, %cond.true94 ], [ %54, %cond.false95 ], !dbg !4062
  %decl_with_vis = bitcast %union.tree_node* %cond105 to %struct.tree_decl_with_vis*, !dbg !4062
  %assembler_name = getelementptr inbounds %struct.tree_decl_with_vis, %struct.tree_decl_with_vis* %decl_with_vis, i32 0, i32 1, !dbg !4062
  %55 = load %union.tree_node*, %union.tree_node** %assembler_name, align 8, !dbg !4062
  %cmp106 = icmp ne %union.tree_node* %55, null, !dbg !4062
  br i1 %cmp106, label %land.lhs.true108, label %if.else136, !dbg !4063

land.lhs.true108:                                 ; preds = %cond.end104
  %56 = load %struct.change_t*, %struct.change_t** @changes, align 8, !dbg !4064
  %57 = load i32, i32* %i, align 4, !dbg !4064
  %idxprom109 = sext i32 %57 to i64, !dbg !4064
  %arrayidx110 = getelementptr inbounds %struct.change_t, %struct.change_t* %56, i64 %idxprom109, !dbg !4064
  %old111 = getelementptr inbounds %struct.change_t, %struct.change_t* %arrayidx110, i32 0, i32 3, !dbg !4064
  %58 = load %struct.rtx_def*, %struct.rtx_def** %old111, align 8, !dbg !4064
  %u112 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %58, i32 0, i32 1, !dbg !4064
  %fld113 = bitcast %union.u* %u112 to [1 x %union.rtunion_def]*, !dbg !4064
  %arrayidx114 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld113, i64 0, i64 2, !dbg !4064
  %rt_reg115 = bitcast %union.rtunion_def* %arrayidx114 to %struct.reg_attrs**, !dbg !4064
  %59 = load %struct.reg_attrs*, %struct.reg_attrs** %rt_reg115, align 8, !dbg !4064
  %cmp116 = icmp eq %struct.reg_attrs* %59, null, !dbg !4064
  br i1 %cmp116, label %cond.true118, label %cond.false119, !dbg !4064

cond.true118:                                     ; preds = %land.lhs.true108
  br label %cond.end128, !dbg !4064

cond.false119:                                    ; preds = %land.lhs.true108
  %60 = load %struct.change_t*, %struct.change_t** @changes, align 8, !dbg !4064
  %61 = load i32, i32* %i, align 4, !dbg !4064
  %idxprom120 = sext i32 %61 to i64, !dbg !4064
  %arrayidx121 = getelementptr inbounds %struct.change_t, %struct.change_t* %60, i64 %idxprom120, !dbg !4064
  %old122 = getelementptr inbounds %struct.change_t, %struct.change_t* %arrayidx121, i32 0, i32 3, !dbg !4064
  %62 = load %struct.rtx_def*, %struct.rtx_def** %old122, align 8, !dbg !4064
  %u123 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %62, i32 0, i32 1, !dbg !4064
  %fld124 = bitcast %union.u* %u123 to [1 x %union.rtunion_def]*, !dbg !4064
  %arrayidx125 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld124, i64 0, i64 2, !dbg !4064
  %rt_reg126 = bitcast %union.rtunion_def* %arrayidx125 to %struct.reg_attrs**, !dbg !4064
  %63 = load %struct.reg_attrs*, %struct.reg_attrs** %rt_reg126, align 8, !dbg !4064
  %decl127 = getelementptr inbounds %struct.reg_attrs, %struct.reg_attrs* %63, i32 0, i32 0, !dbg !4064
  %64 = load %union.tree_node*, %union.tree_node** %decl127, align 8, !dbg !4064
  br label %cond.end128, !dbg !4064

cond.end128:                                      ; preds = %cond.false119, %cond.true118
  %cond129 = phi %union.tree_node* [ null, %cond.true118 ], [ %64, %cond.false119 ], !dbg !4064
  %decl_common = bitcast %union.tree_node* %cond129 to %struct.tree_decl_common*, !dbg !4064
  %decl_flag_0 = getelementptr inbounds %struct.tree_decl_common, %struct.tree_decl_common* %decl_common, i32 0, i32 2, !dbg !4064
  %65 = bitcast i40* %decl_flag_0 to i64*, !dbg !4064
  %bf.load130 = load i64, i64* %65, align 8, !dbg !4064
  %bf.lshr131 = lshr i64 %bf.load130, 24, !dbg !4064
  %bf.clear132 = and i64 %bf.lshr131, 1, !dbg !4064
  %bf.cast133 = trunc i64 %bf.clear132 to i32, !dbg !4064
  %tobool134 = icmp ne i32 %bf.cast133, 0, !dbg !4064
  br i1 %tobool134, label %if.then135, label %if.else136, !dbg !4065

if.then135:                                       ; preds = %cond.end128
  br label %for.end252, !dbg !4066

if.else136:                                       ; preds = %cond.end128, %cond.end104, %cond.end75, %cond.end51, %land.lhs.true, %if.else
  %66 = load %struct.rtx_def*, %struct.rtx_def** %object, align 8, !dbg !4068
  %67 = bitcast %struct.rtx_def* %66 to i32*, !dbg !4068
  %bf.load137 = load i32, i32* %67, align 8, !dbg !4068
  %bf.clear138 = and i32 %bf.load137, 65535, !dbg !4068
  %cmp139 = icmp eq i32 %bf.clear138, 7, !dbg !4068
  br i1 %cmp139, label %if.then141, label %if.else142, !dbg !4070

if.then141:                                       ; preds = %if.else136
  br label %for.inc250, !dbg !4071

if.else142:                                       ; preds = %if.else136
  %68 = load %struct.rtx_def*, %struct.rtx_def** %object, align 8, !dbg !4072
  %call143 = call i32 @insn_invalid_p(%struct.rtx_def* %68), !dbg !4074
  %tobool144 = icmp ne i32 %call143, 0, !dbg !4074
  br i1 %tobool144, label %if.then145, label %if.end246, !dbg !4075

if.then145:                                       ; preds = %if.else142
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %pat, metadata !4076, metadata !DIExpression()), !dbg !4078
  %69 = load %struct.rtx_def*, %struct.rtx_def** %object, align 8, !dbg !4079
  %u146 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %69, i32 0, i32 1, !dbg !4079
  %fld147 = bitcast %union.u* %u146 to [1 x %union.rtunion_def]*, !dbg !4079
  %arrayidx148 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld147, i64 0, i64 5, !dbg !4079
  %rt_rtx149 = bitcast %union.rtunion_def* %arrayidx148 to %struct.rtx_def**, !dbg !4079
  %70 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx149, align 8, !dbg !4079
  store %struct.rtx_def* %70, %struct.rtx_def** %pat, align 8, !dbg !4078
  %71 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8, !dbg !4080
  %72 = bitcast %struct.rtx_def* %71 to i32*, !dbg !4080
  %bf.load150 = load i32, i32* %72, align 8, !dbg !4080
  %bf.clear151 = and i32 %bf.load150, 65535, !dbg !4080
  %cmp152 = icmp eq i32 %bf.clear151, 15, !dbg !4082
  br i1 %cmp152, label %land.lhs.true154, label %if.else229, !dbg !4083

land.lhs.true154:                                 ; preds = %if.then145
  %73 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8, !dbg !4084
  %u155 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %73, i32 0, i32 1, !dbg !4084
  %fld156 = bitcast %union.u* %u155 to [1 x %union.rtunion_def]*, !dbg !4084
  %arrayidx157 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld156, i64 0, i64 0, !dbg !4084
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx157 to %struct.rtvec_def**, !dbg !4084
  %74 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !4084
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %74, i32 0, i32 1, !dbg !4084
  %75 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8, !dbg !4084
  %u158 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %75, i32 0, i32 1, !dbg !4084
  %fld159 = bitcast %union.u* %u158 to [1 x %union.rtunion_def]*, !dbg !4084
  %arrayidx160 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld159, i64 0, i64 0, !dbg !4084
  %rt_rtvec161 = bitcast %union.rtunion_def* %arrayidx160 to %struct.rtvec_def**, !dbg !4084
  %76 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec161, align 8, !dbg !4084
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %76, i32 0, i32 0, !dbg !4084
  %77 = load i32, i32* %num_elem, align 8, !dbg !4084
  %sub = sub nsw i32 %77, 1, !dbg !4084
  %idxprom162 = sext i32 %sub to i64, !dbg !4084
  %arrayidx163 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i64 0, i64 %idxprom162, !dbg !4084
  %78 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx163, align 8, !dbg !4084
  %79 = bitcast %struct.rtx_def* %78 to i32*, !dbg !4084
  %bf.load164 = load i32, i32* %79, align 8, !dbg !4084
  %bf.clear165 = and i32 %bf.load164, 65535, !dbg !4084
  %cmp166 = icmp eq i32 %bf.clear165, 25, !dbg !4085
  br i1 %cmp166, label %land.lhs.true168, label %if.else229, !dbg !4086

land.lhs.true168:                                 ; preds = %land.lhs.true154
  %80 = load %struct.rtx_def*, %struct.rtx_def** %object, align 8, !dbg !4087
  %u169 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %80, i32 0, i32 1, !dbg !4087
  %fld170 = bitcast %union.u* %u169 to [1 x %union.rtunion_def]*, !dbg !4087
  %arrayidx171 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld170, i64 0, i64 5, !dbg !4087
  %rt_rtx172 = bitcast %union.rtunion_def* %arrayidx171 to %struct.rtx_def**, !dbg !4087
  %81 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx172, align 8, !dbg !4087
  %call173 = call i32 @asm_noperands(%struct.rtx_def* %81), !dbg !4088
  %cmp174 = icmp slt i32 %call173, 0, !dbg !4089
  br i1 %cmp174, label %if.then176, label %if.else229, !dbg !4090

if.then176:                                       ; preds = %land.lhs.true168
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %newpat, metadata !4091, metadata !DIExpression()), !dbg !4093
  %82 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8, !dbg !4094
  %u177 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %82, i32 0, i32 1, !dbg !4094
  %fld178 = bitcast %union.u* %u177 to [1 x %union.rtunion_def]*, !dbg !4094
  %arrayidx179 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld178, i64 0, i64 0, !dbg !4094
  %rt_rtvec180 = bitcast %union.rtunion_def* %arrayidx179 to %struct.rtvec_def**, !dbg !4094
  %83 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec180, align 8, !dbg !4094
  %num_elem181 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %83, i32 0, i32 0, !dbg !4094
  %84 = load i32, i32* %num_elem181, align 8, !dbg !4094
  %cmp182 = icmp eq i32 %84, 2, !dbg !4096
  br i1 %cmp182, label %if.then184, label %if.else191, !dbg !4097

if.then184:                                       ; preds = %if.then176
  %85 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8, !dbg !4098
  %u185 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %85, i32 0, i32 1, !dbg !4098
  %fld186 = bitcast %union.u* %u185 to [1 x %union.rtunion_def]*, !dbg !4098
  %arrayidx187 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld186, i64 0, i64 0, !dbg !4098
  %rt_rtvec188 = bitcast %union.rtunion_def* %arrayidx187 to %struct.rtvec_def**, !dbg !4098
  %86 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec188, align 8, !dbg !4098
  %elem189 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %86, i32 0, i32 1, !dbg !4098
  %arrayidx190 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem189, i64 0, i64 0, !dbg !4098
  %87 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx190, align 8, !dbg !4098
  store %struct.rtx_def* %87, %struct.rtx_def** %newpat, align 8, !dbg !4099
  br label %if.end223, !dbg !4100

if.else191:                                       ; preds = %if.then176
  call void @llvm.dbg.declare(metadata i32* %j, metadata !4101, metadata !DIExpression()), !dbg !4103
  %88 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8, !dbg !4104
  %u192 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %88, i32 0, i32 1, !dbg !4104
  %fld193 = bitcast %union.u* %u192 to [1 x %union.rtunion_def]*, !dbg !4104
  %arrayidx194 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld193, i64 0, i64 0, !dbg !4104
  %rt_rtvec195 = bitcast %union.rtunion_def* %arrayidx194 to %struct.rtvec_def**, !dbg !4104
  %89 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec195, align 8, !dbg !4104
  %num_elem196 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %89, i32 0, i32 0, !dbg !4104
  %90 = load i32, i32* %num_elem196, align 8, !dbg !4104
  %sub197 = sub nsw i32 %90, 1, !dbg !4104
  %call198 = call %struct.rtvec_def* @rtvec_alloc(i32 %sub197), !dbg !4104
  %call199 = call %struct.rtx_def* @gen_rtx_fmt_E_stat(i32 15, i32 0, %struct.rtvec_def* %call198), !dbg !4104
  store %struct.rtx_def* %call199, %struct.rtx_def** %newpat, align 8, !dbg !4105
  store i32 0, i32* %j, align 4, !dbg !4106
  br label %for.cond200, !dbg !4108

for.cond200:                                      ; preds = %for.inc, %if.else191
  %91 = load i32, i32* %j, align 4, !dbg !4109
  %92 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8, !dbg !4111
  %u201 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %92, i32 0, i32 1, !dbg !4111
  %fld202 = bitcast %union.u* %u201 to [1 x %union.rtunion_def]*, !dbg !4111
  %arrayidx203 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld202, i64 0, i64 0, !dbg !4111
  %rt_rtvec204 = bitcast %union.rtunion_def* %arrayidx203 to %struct.rtvec_def**, !dbg !4111
  %93 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec204, align 8, !dbg !4111
  %num_elem205 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %93, i32 0, i32 0, !dbg !4111
  %94 = load i32, i32* %num_elem205, align 8, !dbg !4111
  %cmp206 = icmp slt i32 %91, %94, !dbg !4112
  br i1 %cmp206, label %for.body208, label %for.end, !dbg !4113

for.body208:                                      ; preds = %for.cond200
  %95 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8, !dbg !4114
  %u209 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %95, i32 0, i32 1, !dbg !4114
  %fld210 = bitcast %union.u* %u209 to [1 x %union.rtunion_def]*, !dbg !4114
  %arrayidx211 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld210, i64 0, i64 0, !dbg !4114
  %rt_rtvec212 = bitcast %union.rtunion_def* %arrayidx211 to %struct.rtvec_def**, !dbg !4114
  %96 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec212, align 8, !dbg !4114
  %elem213 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %96, i32 0, i32 1, !dbg !4114
  %97 = load i32, i32* %j, align 4, !dbg !4114
  %idxprom214 = sext i32 %97 to i64, !dbg !4114
  %arrayidx215 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem213, i64 0, i64 %idxprom214, !dbg !4114
  %98 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx215, align 8, !dbg !4114
  %99 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8, !dbg !4115
  %u216 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %99, i32 0, i32 1, !dbg !4115
  %fld217 = bitcast %union.u* %u216 to [1 x %union.rtunion_def]*, !dbg !4115
  %arrayidx218 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld217, i64 0, i64 0, !dbg !4115
  %rt_rtvec219 = bitcast %union.rtunion_def* %arrayidx218 to %struct.rtvec_def**, !dbg !4115
  %100 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec219, align 8, !dbg !4115
  %elem220 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %100, i32 0, i32 1, !dbg !4115
  %101 = load i32, i32* %j, align 4, !dbg !4115
  %idxprom221 = sext i32 %101 to i64, !dbg !4115
  %arrayidx222 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem220, i64 0, i64 %idxprom221, !dbg !4115
  store %struct.rtx_def* %98, %struct.rtx_def** %arrayidx222, align 8, !dbg !4116
  br label %for.inc, !dbg !4115

for.inc:                                          ; preds = %for.body208
  %102 = load i32, i32* %j, align 4, !dbg !4117
  %inc = add nsw i32 %102, 1, !dbg !4117
  store i32 %inc, i32* %j, align 4, !dbg !4117
  br label %for.cond200, !dbg !4118, !llvm.loop !4119

for.end:                                          ; preds = %for.cond200
  br label %if.end223

if.end223:                                        ; preds = %for.end, %if.then184
  %103 = load %struct.rtx_def*, %struct.rtx_def** %object, align 8, !dbg !4121
  %104 = load %struct.rtx_def*, %struct.rtx_def** %object, align 8, !dbg !4122
  %u224 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %104, i32 0, i32 1, !dbg !4122
  %fld225 = bitcast %union.u* %u224 to [1 x %union.rtunion_def]*, !dbg !4122
  %arrayidx226 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld225, i64 0, i64 5, !dbg !4122
  %rt_rtx227 = bitcast %union.rtunion_def* %arrayidx226 to %struct.rtx_def**, !dbg !4122
  %105 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8, !dbg !4123
  %call228 = call zeroext i8 @validate_change(%struct.rtx_def* %103, %struct.rtx_def** %rt_rtx227, %struct.rtx_def* %105, i8 zeroext 1), !dbg !4124
  br label %for.inc250, !dbg !4125

if.else229:                                       ; preds = %land.lhs.true168, %land.lhs.true154, %if.then145
  %106 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8, !dbg !4126
  %107 = bitcast %struct.rtx_def* %106 to i32*, !dbg !4126
  %bf.load230 = load i32, i32* %107, align 8, !dbg !4126
  %bf.clear231 = and i32 %bf.load230, 65535, !dbg !4126
  %cmp232 = icmp eq i32 %bf.clear231, 24, !dbg !4128
  br i1 %cmp232, label %if.then244, label %lor.lhs.false234, !dbg !4129

lor.lhs.false234:                                 ; preds = %if.else229
  %108 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8, !dbg !4130
  %109 = bitcast %struct.rtx_def* %108 to i32*, !dbg !4130
  %bf.load235 = load i32, i32* %109, align 8, !dbg !4130
  %bf.clear236 = and i32 %bf.load235, 65535, !dbg !4130
  %cmp237 = icmp eq i32 %bf.clear236, 25, !dbg !4131
  br i1 %cmp237, label %if.then244, label %lor.lhs.false239, !dbg !4132

lor.lhs.false239:                                 ; preds = %lor.lhs.false234
  %110 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8, !dbg !4133
  %111 = bitcast %struct.rtx_def* %110 to i32*, !dbg !4133
  %bf.load240 = load i32, i32* %111, align 8, !dbg !4133
  %bf.clear241 = and i32 %bf.load240, 65535, !dbg !4133
  %cmp242 = icmp eq i32 %bf.clear241, 138, !dbg !4134
  br i1 %cmp242, label %if.then244, label %if.else245, !dbg !4135

if.then244:                                       ; preds = %lor.lhs.false239, %lor.lhs.false234, %if.else229
  br label %for.inc250, !dbg !4136

if.else245:                                       ; preds = %lor.lhs.false239
  br label %for.end252, !dbg !4137

if.end246:                                        ; preds = %if.else142
  br label %if.end247

if.end247:                                        ; preds = %if.end246
  br label %if.end248

if.end248:                                        ; preds = %if.end247
  br label %if.end249

if.end249:                                        ; preds = %if.end248, %if.end19
  %112 = load %struct.rtx_def*, %struct.rtx_def** %object, align 8, !dbg !4138
  store %struct.rtx_def* %112, %struct.rtx_def** %last_validated, align 8, !dbg !4139
  br label %for.inc250, !dbg !4140

for.inc250:                                       ; preds = %if.end249, %if.then244, %if.end223, %if.then141, %if.then
  %113 = load i32, i32* %i, align 4, !dbg !4141
  %inc251 = add nsw i32 %113, 1, !dbg !4141
  store i32 %inc251, i32* %i, align 4, !dbg !4141
  br label %for.cond, !dbg !4142, !llvm.loop !4143

for.end252:                                       ; preds = %if.else245, %if.then135, %if.then18, %for.cond
  %114 = load i32, i32* %i, align 4, !dbg !4145
  %115 = load i32, i32* @num_changes, align 4, !dbg !4146
  %cmp253 = icmp eq i32 %114, %115, !dbg !4147
  %conv254 = zext i1 %cmp253 to i32, !dbg !4147
  ret i32 %conv254, !dbg !4148
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @memory_address_addr_space_p(i32 %mode, %struct.rtx_def* %addr, i8 zeroext %as) #0 !dbg !4149 {
entry:
  %mode.addr = alloca i32, align 4
  %addr.addr = alloca %struct.rtx_def*, align 8
  %as.addr = alloca i8, align 1
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !4153, metadata !DIExpression()), !dbg !4154
  store %struct.rtx_def* %addr, %struct.rtx_def** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %addr.addr, metadata !4155, metadata !DIExpression()), !dbg !4156
  store i8 %as, i8* %as.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %as.addr, metadata !4157, metadata !DIExpression()), !dbg !4158
  %0 = load i8 (i32, %struct.rtx_def*, i8, i8)*, i8 (i32, %struct.rtx_def*, i8, i8)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i32 0, i32 57, i32 3), align 8, !dbg !4159
  %1 = load i32, i32* %mode.addr, align 4, !dbg !4160
  %2 = load %struct.rtx_def*, %struct.rtx_def** %addr.addr, align 8, !dbg !4161
  %3 = load i8, i8* %as.addr, align 1, !dbg !4162
  %call = call zeroext i8 %0(i32 %1, %struct.rtx_def* %2, i8 zeroext 0, i8 zeroext %3), !dbg !4163
  %conv = zext i8 %call to i32, !dbg !4163
  ret i32 %conv, !dbg !4164
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @confirm_change_group() #0 !dbg !4165 {
entry:
  %i = alloca i32, align 4
  %last_object = alloca %struct.rtx_def*, align 8
  %object = alloca %struct.rtx_def*, align 8
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4166, metadata !DIExpression()), !dbg !4167
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %last_object, metadata !4168, metadata !DIExpression()), !dbg !4169
  store %struct.rtx_def* null, %struct.rtx_def** %last_object, align 8, !dbg !4169
  store i32 0, i32* %i, align 4, !dbg !4170
  br label %for.cond, !dbg !4172

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !4173
  %1 = load i32, i32* @num_changes, align 4, !dbg !4175
  %cmp = icmp slt i32 %0, %1, !dbg !4176
  br i1 %cmp, label %for.body, label %for.end, !dbg !4177

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %object, metadata !4178, metadata !DIExpression()), !dbg !4180
  %2 = load %struct.change_t*, %struct.change_t** @changes, align 8, !dbg !4181
  %3 = load i32, i32* %i, align 4, !dbg !4182
  %idxprom = sext i32 %3 to i64, !dbg !4181
  %arrayidx = getelementptr inbounds %struct.change_t, %struct.change_t* %2, i64 %idxprom, !dbg !4181
  %object1 = getelementptr inbounds %struct.change_t, %struct.change_t* %arrayidx, i32 0, i32 0, !dbg !4183
  %4 = load %struct.rtx_def*, %struct.rtx_def** %object1, align 8, !dbg !4183
  store %struct.rtx_def* %4, %struct.rtx_def** %object, align 8, !dbg !4180
  %5 = load %struct.change_t*, %struct.change_t** @changes, align 8, !dbg !4184
  %6 = load i32, i32* %i, align 4, !dbg !4186
  %idxprom2 = sext i32 %6 to i64, !dbg !4184
  %arrayidx3 = getelementptr inbounds %struct.change_t, %struct.change_t* %5, i64 %idxprom2, !dbg !4184
  %unshare = getelementptr inbounds %struct.change_t, %struct.change_t* %arrayidx3, i32 0, i32 4, !dbg !4187
  %7 = load i8, i8* %unshare, align 8, !dbg !4187
  %tobool = icmp ne i8 %7, 0, !dbg !4184
  br i1 %tobool, label %if.then, label %if.end, !dbg !4188

if.then:                                          ; preds = %for.body
  %8 = load %struct.change_t*, %struct.change_t** @changes, align 8, !dbg !4189
  %9 = load i32, i32* %i, align 4, !dbg !4190
  %idxprom4 = sext i32 %9 to i64, !dbg !4189
  %arrayidx5 = getelementptr inbounds %struct.change_t, %struct.change_t* %8, i64 %idxprom4, !dbg !4189
  %loc = getelementptr inbounds %struct.change_t, %struct.change_t* %arrayidx5, i32 0, i32 2, !dbg !4191
  %10 = load %struct.rtx_def**, %struct.rtx_def*** %loc, align 8, !dbg !4191
  %11 = load %struct.rtx_def*, %struct.rtx_def** %10, align 8, !dbg !4192
  %call = call %struct.rtx_def* @copy_rtx(%struct.rtx_def* %11), !dbg !4193
  %12 = load %struct.change_t*, %struct.change_t** @changes, align 8, !dbg !4194
  %13 = load i32, i32* %i, align 4, !dbg !4195
  %idxprom6 = sext i32 %13 to i64, !dbg !4194
  %arrayidx7 = getelementptr inbounds %struct.change_t, %struct.change_t* %12, i64 %idxprom6, !dbg !4194
  %loc8 = getelementptr inbounds %struct.change_t, %struct.change_t* %arrayidx7, i32 0, i32 2, !dbg !4196
  %14 = load %struct.rtx_def**, %struct.rtx_def*** %loc8, align 8, !dbg !4196
  store %struct.rtx_def* %call, %struct.rtx_def** %14, align 8, !dbg !4197
  br label %if.end, !dbg !4198

if.end:                                           ; preds = %if.then, %for.body
  %15 = load %struct.rtx_def*, %struct.rtx_def** %object, align 8, !dbg !4199
  %tobool9 = icmp ne %struct.rtx_def* %15, null, !dbg !4199
  br i1 %tobool9, label %if.then10, label %if.end29, !dbg !4201

if.then10:                                        ; preds = %if.end
  %16 = load %struct.rtx_def*, %struct.rtx_def** %object, align 8, !dbg !4202
  %17 = load %struct.rtx_def*, %struct.rtx_def** %last_object, align 8, !dbg !4205
  %cmp11 = icmp ne %struct.rtx_def* %16, %17, !dbg !4206
  br i1 %cmp11, label %land.lhs.true, label %if.end28, !dbg !4207

land.lhs.true:                                    ; preds = %if.then10
  %18 = load %struct.rtx_def*, %struct.rtx_def** %last_object, align 8, !dbg !4208
  %tobool12 = icmp ne %struct.rtx_def* %18, null, !dbg !4208
  br i1 %tobool12, label %land.lhs.true13, label %if.end28, !dbg !4209

land.lhs.true13:                                  ; preds = %land.lhs.true
  %19 = load %struct.rtx_def*, %struct.rtx_def** %last_object, align 8, !dbg !4210
  %20 = bitcast %struct.rtx_def* %19 to i32*, !dbg !4210
  %bf.load = load i32, i32* %20, align 8, !dbg !4210
  %bf.clear = and i32 %bf.load, 65535, !dbg !4210
  %cmp14 = icmp eq i32 %bf.clear, 8, !dbg !4210
  br i1 %cmp14, label %if.then26, label %lor.lhs.false, !dbg !4210

lor.lhs.false:                                    ; preds = %land.lhs.true13
  %21 = load %struct.rtx_def*, %struct.rtx_def** %last_object, align 8, !dbg !4210
  %22 = bitcast %struct.rtx_def* %21 to i32*, !dbg !4210
  %bf.load15 = load i32, i32* %22, align 8, !dbg !4210
  %bf.clear16 = and i32 %bf.load15, 65535, !dbg !4210
  %cmp17 = icmp eq i32 %bf.clear16, 7, !dbg !4210
  br i1 %cmp17, label %if.then26, label %lor.lhs.false18, !dbg !4210

lor.lhs.false18:                                  ; preds = %lor.lhs.false
  %23 = load %struct.rtx_def*, %struct.rtx_def** %last_object, align 8, !dbg !4210
  %24 = bitcast %struct.rtx_def* %23 to i32*, !dbg !4210
  %bf.load19 = load i32, i32* %24, align 8, !dbg !4210
  %bf.clear20 = and i32 %bf.load19, 65535, !dbg !4210
  %cmp21 = icmp eq i32 %bf.clear20, 9, !dbg !4210
  br i1 %cmp21, label %if.then26, label %lor.lhs.false22, !dbg !4210

lor.lhs.false22:                                  ; preds = %lor.lhs.false18
  %25 = load %struct.rtx_def*, %struct.rtx_def** %last_object, align 8, !dbg !4210
  %26 = bitcast %struct.rtx_def* %25 to i32*, !dbg !4210
  %bf.load23 = load i32, i32* %26, align 8, !dbg !4210
  %bf.clear24 = and i32 %bf.load23, 65535, !dbg !4210
  %cmp25 = icmp eq i32 %bf.clear24, 10, !dbg !4210
  br i1 %cmp25, label %if.then26, label %if.end28, !dbg !4211

if.then26:                                        ; preds = %lor.lhs.false22, %lor.lhs.false18, %lor.lhs.false, %land.lhs.true13
  %27 = load %struct.rtx_def*, %struct.rtx_def** %last_object, align 8, !dbg !4212
  %call27 = call zeroext i8 @df_insn_rescan(%struct.rtx_def* %27), !dbg !4213
  br label %if.end28, !dbg !4213

if.end28:                                         ; preds = %if.then26, %lor.lhs.false22, %land.lhs.true, %if.then10
  %28 = load %struct.rtx_def*, %struct.rtx_def** %object, align 8, !dbg !4214
  store %struct.rtx_def* %28, %struct.rtx_def** %last_object, align 8, !dbg !4215
  br label %if.end29, !dbg !4216

if.end29:                                         ; preds = %if.end28, %if.end
  br label %for.inc, !dbg !4217

for.inc:                                          ; preds = %if.end29
  %29 = load i32, i32* %i, align 4, !dbg !4218
  %inc = add nsw i32 %29, 1, !dbg !4218
  store i32 %inc, i32* %i, align 4, !dbg !4218
  br label %for.cond, !dbg !4219, !llvm.loop !4220

for.end:                                          ; preds = %for.cond
  %30 = load %struct.rtx_def*, %struct.rtx_def** %last_object, align 8, !dbg !4222
  %tobool30 = icmp ne %struct.rtx_def* %30, null, !dbg !4222
  br i1 %tobool30, label %land.lhs.true31, label %if.end49, !dbg !4224

land.lhs.true31:                                  ; preds = %for.end
  %31 = load %struct.rtx_def*, %struct.rtx_def** %last_object, align 8, !dbg !4225
  %32 = bitcast %struct.rtx_def* %31 to i32*, !dbg !4225
  %bf.load32 = load i32, i32* %32, align 8, !dbg !4225
  %bf.clear33 = and i32 %bf.load32, 65535, !dbg !4225
  %cmp34 = icmp eq i32 %bf.clear33, 8, !dbg !4225
  br i1 %cmp34, label %if.then47, label %lor.lhs.false35, !dbg !4225

lor.lhs.false35:                                  ; preds = %land.lhs.true31
  %33 = load %struct.rtx_def*, %struct.rtx_def** %last_object, align 8, !dbg !4225
  %34 = bitcast %struct.rtx_def* %33 to i32*, !dbg !4225
  %bf.load36 = load i32, i32* %34, align 8, !dbg !4225
  %bf.clear37 = and i32 %bf.load36, 65535, !dbg !4225
  %cmp38 = icmp eq i32 %bf.clear37, 7, !dbg !4225
  br i1 %cmp38, label %if.then47, label %lor.lhs.false39, !dbg !4225

lor.lhs.false39:                                  ; preds = %lor.lhs.false35
  %35 = load %struct.rtx_def*, %struct.rtx_def** %last_object, align 8, !dbg !4225
  %36 = bitcast %struct.rtx_def* %35 to i32*, !dbg !4225
  %bf.load40 = load i32, i32* %36, align 8, !dbg !4225
  %bf.clear41 = and i32 %bf.load40, 65535, !dbg !4225
  %cmp42 = icmp eq i32 %bf.clear41, 9, !dbg !4225
  br i1 %cmp42, label %if.then47, label %lor.lhs.false43, !dbg !4225

lor.lhs.false43:                                  ; preds = %lor.lhs.false39
  %37 = load %struct.rtx_def*, %struct.rtx_def** %last_object, align 8, !dbg !4225
  %38 = bitcast %struct.rtx_def* %37 to i32*, !dbg !4225
  %bf.load44 = load i32, i32* %38, align 8, !dbg !4225
  %bf.clear45 = and i32 %bf.load44, 65535, !dbg !4225
  %cmp46 = icmp eq i32 %bf.clear45, 10, !dbg !4225
  br i1 %cmp46, label %if.then47, label %if.end49, !dbg !4226

if.then47:                                        ; preds = %lor.lhs.false43, %lor.lhs.false39, %lor.lhs.false35, %land.lhs.true31
  %39 = load %struct.rtx_def*, %struct.rtx_def** %last_object, align 8, !dbg !4227
  %call48 = call zeroext i8 @df_insn_rescan(%struct.rtx_def* %39), !dbg !4228
  br label %if.end49, !dbg !4228

if.end49:                                         ; preds = %if.then47, %lor.lhs.false43, %for.end
  store i32 0, i32* @num_changes, align 4, !dbg !4229
  ret void, !dbg !4230
}

declare dso_local %struct.rtx_def* @copy_rtx(%struct.rtx_def*) #2

declare dso_local zeroext i8 @df_insn_rescan(%struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @apply_change_group() #0 !dbg !4231 {
entry:
  %retval = alloca i32, align 4
  %call = call i32 @verify_changes(i32 0), !dbg !4232
  %tobool = icmp ne i32 %call, 0, !dbg !4232
  br i1 %tobool, label %if.then, label %if.else, !dbg !4234

if.then:                                          ; preds = %entry
  call void @confirm_change_group(), !dbg !4235
  store i32 1, i32* %retval, align 4, !dbg !4237
  br label %return, !dbg !4237

if.else:                                          ; preds = %entry
  call void @cancel_changes(i32 0), !dbg !4238
  store i32 0, i32* %retval, align 4, !dbg !4240
  br label %return, !dbg !4240

return:                                           ; preds = %if.else, %if.then
  %0 = load i32, i32* %retval, align 4, !dbg !4241
  ret i32 %0, !dbg !4241
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @cancel_changes(i32 %num) #0 !dbg !4242 {
entry:
  %num.addr = alloca i32, align 4
  %i = alloca i32, align 4
  store i32 %num, i32* %num.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %num.addr, metadata !4245, metadata !DIExpression()), !dbg !4246
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4247, metadata !DIExpression()), !dbg !4248
  %0 = load i32, i32* @num_changes, align 4, !dbg !4249
  %sub = sub nsw i32 %0, 1, !dbg !4251
  store i32 %sub, i32* %i, align 4, !dbg !4252
  br label %for.cond, !dbg !4253

for.cond:                                         ; preds = %for.inc, %entry
  %1 = load i32, i32* %i, align 4, !dbg !4254
  %2 = load i32, i32* %num.addr, align 4, !dbg !4256
  %cmp = icmp sge i32 %1, %2, !dbg !4257
  br i1 %cmp, label %for.body, label %for.end, !dbg !4258

for.body:                                         ; preds = %for.cond
  %3 = load %struct.change_t*, %struct.change_t** @changes, align 8, !dbg !4259
  %4 = load i32, i32* %i, align 4, !dbg !4261
  %idxprom = sext i32 %4 to i64, !dbg !4259
  %arrayidx = getelementptr inbounds %struct.change_t, %struct.change_t* %3, i64 %idxprom, !dbg !4259
  %old = getelementptr inbounds %struct.change_t, %struct.change_t* %arrayidx, i32 0, i32 3, !dbg !4262
  %5 = load %struct.rtx_def*, %struct.rtx_def** %old, align 8, !dbg !4262
  %6 = load %struct.change_t*, %struct.change_t** @changes, align 8, !dbg !4263
  %7 = load i32, i32* %i, align 4, !dbg !4264
  %idxprom1 = sext i32 %7 to i64, !dbg !4263
  %arrayidx2 = getelementptr inbounds %struct.change_t, %struct.change_t* %6, i64 %idxprom1, !dbg !4263
  %loc = getelementptr inbounds %struct.change_t, %struct.change_t* %arrayidx2, i32 0, i32 2, !dbg !4265
  %8 = load %struct.rtx_def**, %struct.rtx_def*** %loc, align 8, !dbg !4265
  store %struct.rtx_def* %5, %struct.rtx_def** %8, align 8, !dbg !4266
  %9 = load %struct.change_t*, %struct.change_t** @changes, align 8, !dbg !4267
  %10 = load i32, i32* %i, align 4, !dbg !4269
  %idxprom3 = sext i32 %10 to i64, !dbg !4267
  %arrayidx4 = getelementptr inbounds %struct.change_t, %struct.change_t* %9, i64 %idxprom3, !dbg !4267
  %object = getelementptr inbounds %struct.change_t, %struct.change_t* %arrayidx4, i32 0, i32 0, !dbg !4270
  %11 = load %struct.rtx_def*, %struct.rtx_def** %object, align 8, !dbg !4270
  %tobool = icmp ne %struct.rtx_def* %11, null, !dbg !4267
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !4271

land.lhs.true:                                    ; preds = %for.body
  %12 = load %struct.change_t*, %struct.change_t** @changes, align 8, !dbg !4272
  %13 = load i32, i32* %i, align 4, !dbg !4272
  %idxprom5 = sext i32 %13 to i64, !dbg !4272
  %arrayidx6 = getelementptr inbounds %struct.change_t, %struct.change_t* %12, i64 %idxprom5, !dbg !4272
  %object7 = getelementptr inbounds %struct.change_t, %struct.change_t* %arrayidx6, i32 0, i32 0, !dbg !4272
  %14 = load %struct.rtx_def*, %struct.rtx_def** %object7, align 8, !dbg !4272
  %15 = bitcast %struct.rtx_def* %14 to i32*, !dbg !4272
  %bf.load = load i32, i32* %15, align 8, !dbg !4272
  %bf.clear = and i32 %bf.load, 65535, !dbg !4272
  %cmp8 = icmp eq i32 %bf.clear, 43, !dbg !4272
  br i1 %cmp8, label %if.end, label %if.then, !dbg !4273

if.then:                                          ; preds = %land.lhs.true
  %16 = load %struct.change_t*, %struct.change_t** @changes, align 8, !dbg !4274
  %17 = load i32, i32* %i, align 4, !dbg !4275
  %idxprom9 = sext i32 %17 to i64, !dbg !4274
  %arrayidx10 = getelementptr inbounds %struct.change_t, %struct.change_t* %16, i64 %idxprom9, !dbg !4274
  %old_code = getelementptr inbounds %struct.change_t, %struct.change_t* %arrayidx10, i32 0, i32 1, !dbg !4276
  %18 = load i32, i32* %old_code, align 8, !dbg !4276
  %19 = load %struct.change_t*, %struct.change_t** @changes, align 8, !dbg !4277
  %20 = load i32, i32* %i, align 4, !dbg !4277
  %idxprom11 = sext i32 %20 to i64, !dbg !4277
  %arrayidx12 = getelementptr inbounds %struct.change_t, %struct.change_t* %19, i64 %idxprom11, !dbg !4277
  %object13 = getelementptr inbounds %struct.change_t, %struct.change_t* %arrayidx12, i32 0, i32 0, !dbg !4277
  %21 = load %struct.rtx_def*, %struct.rtx_def** %object13, align 8, !dbg !4277
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %21, i32 0, i32 1, !dbg !4277
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !4277
  %arrayidx14 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 6, !dbg !4277
  %rt_int = bitcast %union.rtunion_def* %arrayidx14 to i32*, !dbg !4277
  store i32 %18, i32* %rt_int, align 8, !dbg !4278
  br label %if.end, !dbg !4277

if.end:                                           ; preds = %if.then, %land.lhs.true, %for.body
  br label %for.inc, !dbg !4279

for.inc:                                          ; preds = %if.end
  %22 = load i32, i32* %i, align 4, !dbg !4280
  %dec = add nsw i32 %22, -1, !dbg !4280
  store i32 %dec, i32* %i, align 4, !dbg !4280
  br label %for.cond, !dbg !4281, !llvm.loop !4282

for.end:                                          ; preds = %for.cond
  %23 = load i32, i32* %num.addr, align 4, !dbg !4284
  store i32 %23, i32* @num_changes, align 4, !dbg !4285
  ret void, !dbg !4286
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @num_validated_changes() #0 !dbg !4287 {
entry:
  %0 = load i32, i32* @num_changes, align 4, !dbg !4288
  ret i32 %0, !dbg !4289
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @validate_replace_rtx_subexp(%struct.rtx_def* %from, %struct.rtx_def* %to, %struct.rtx_def* %insn, %struct.rtx_def** %loc) #0 !dbg !4290 {
entry:
  %from.addr = alloca %struct.rtx_def*, align 8
  %to.addr = alloca %struct.rtx_def*, align 8
  %insn.addr = alloca %struct.rtx_def*, align 8
  %loc.addr = alloca %struct.rtx_def**, align 8
  store %struct.rtx_def* %from, %struct.rtx_def** %from.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %from.addr, metadata !4293, metadata !DIExpression()), !dbg !4294
  store %struct.rtx_def* %to, %struct.rtx_def** %to.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %to.addr, metadata !4295, metadata !DIExpression()), !dbg !4296
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !4297, metadata !DIExpression()), !dbg !4298
  store %struct.rtx_def** %loc, %struct.rtx_def*** %loc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def*** %loc.addr, metadata !4299, metadata !DIExpression()), !dbg !4300
  %0 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8, !dbg !4301
  %1 = load %struct.rtx_def*, %struct.rtx_def** %from.addr, align 8, !dbg !4302
  %2 = load %struct.rtx_def*, %struct.rtx_def** %to.addr, align 8, !dbg !4303
  %3 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4304
  call void @validate_replace_rtx_1(%struct.rtx_def** %0, %struct.rtx_def* %1, %struct.rtx_def* %2, %struct.rtx_def* %3, i8 zeroext 1), !dbg !4305
  %call = call i32 @apply_change_group(), !dbg !4306
  ret i32 %call, !dbg !4307
}

; Function Attrs: noinline nounwind uwtable
define internal void @validate_replace_rtx_1(%struct.rtx_def** %loc, %struct.rtx_def* %from, %struct.rtx_def* %to, %struct.rtx_def* %object, i8 zeroext %simplify) #0 !dbg !4308 {
entry:
  %loc.addr = alloca %struct.rtx_def**, align 8
  %from.addr = alloca %struct.rtx_def*, align 8
  %to.addr = alloca %struct.rtx_def*, align 8
  %object.addr = alloca %struct.rtx_def*, align 8
  %simplify.addr = alloca i8, align 1
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %fmt = alloca i8*, align 8
  %x = alloca %struct.rtx_def*, align 8
  %code = alloca i32, align 4
  %op0_mode = alloca i32, align 4
  %prev_changes = alloca i32, align 4
  store %struct.rtx_def** %loc, %struct.rtx_def*** %loc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def*** %loc.addr, metadata !4311, metadata !DIExpression()), !dbg !4312
  store %struct.rtx_def* %from, %struct.rtx_def** %from.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %from.addr, metadata !4313, metadata !DIExpression()), !dbg !4314
  store %struct.rtx_def* %to, %struct.rtx_def** %to.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %to.addr, metadata !4315, metadata !DIExpression()), !dbg !4316
  store %struct.rtx_def* %object, %struct.rtx_def** %object.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %object.addr, metadata !4317, metadata !DIExpression()), !dbg !4318
  store i8 %simplify, i8* %simplify.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %simplify.addr, metadata !4319, metadata !DIExpression()), !dbg !4320
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4321, metadata !DIExpression()), !dbg !4322
  call void @llvm.dbg.declare(metadata i32* %j, metadata !4323, metadata !DIExpression()), !dbg !4324
  call void @llvm.dbg.declare(metadata i8** %fmt, metadata !4325, metadata !DIExpression()), !dbg !4326
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x, metadata !4327, metadata !DIExpression()), !dbg !4328
  %0 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8, !dbg !4329
  %1 = load %struct.rtx_def*, %struct.rtx_def** %0, align 8, !dbg !4330
  store %struct.rtx_def* %1, %struct.rtx_def** %x, align 8, !dbg !4328
  call void @llvm.dbg.declare(metadata i32* %code, metadata !4331, metadata !DIExpression()), !dbg !4332
  call void @llvm.dbg.declare(metadata i32* %op0_mode, metadata !4333, metadata !DIExpression()), !dbg !4334
  store i32 0, i32* %op0_mode, align 4, !dbg !4334
  call void @llvm.dbg.declare(metadata i32* %prev_changes, metadata !4335, metadata !DIExpression()), !dbg !4336
  %2 = load i32, i32* @num_changes, align 4, !dbg !4337
  store i32 %2, i32* %prev_changes, align 4, !dbg !4336
  %3 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !4338
  %tobool = icmp ne %struct.rtx_def* %3, null, !dbg !4338
  br i1 %tobool, label %if.end, label %if.then, !dbg !4340

if.then:                                          ; preds = %entry
  br label %if.end226, !dbg !4341

if.end:                                           ; preds = %entry
  %4 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !4342
  %5 = bitcast %struct.rtx_def* %4 to i32*, !dbg !4342
  %bf.load = load i32, i32* %5, align 8, !dbg !4342
  %bf.clear = and i32 %bf.load, 65535, !dbg !4342
  store i32 %bf.clear, i32* %code, align 4, !dbg !4343
  %6 = load i32, i32* %code, align 4, !dbg !4344
  %idxprom = sext i32 %6 to i64, !dbg !4344
  %arrayidx = getelementptr inbounds [139 x i8*], [139 x i8*]* @rtx_format, i64 0, i64 %idxprom, !dbg !4344
  %7 = load i8*, i8** %arrayidx, align 8, !dbg !4344
  store i8* %7, i8** %fmt, align 8, !dbg !4345
  %8 = load i8*, i8** %fmt, align 8, !dbg !4346
  %arrayidx1 = getelementptr inbounds i8, i8* %8, i64 0, !dbg !4346
  %9 = load i8, i8* %arrayidx1, align 1, !dbg !4346
  %conv = sext i8 %9 to i32, !dbg !4346
  %cmp = icmp eq i32 %conv, 101, !dbg !4348
  br i1 %cmp, label %if.then3, label %if.end7, !dbg !4349

if.then3:                                         ; preds = %if.end
  %10 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !4350
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i32 0, i32 1, !dbg !4350
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !4350
  %arrayidx4 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !4350
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx4 to %struct.rtx_def**, !dbg !4350
  %11 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4350
  %12 = bitcast %struct.rtx_def* %11 to i32*, !dbg !4350
  %bf.load5 = load i32, i32* %12, align 8, !dbg !4350
  %bf.lshr = lshr i32 %bf.load5, 16, !dbg !4350
  %bf.clear6 = and i32 %bf.lshr, 255, !dbg !4350
  store i32 %bf.clear6, i32* %op0_mode, align 4, !dbg !4351
  br label %if.end7, !dbg !4352

if.end7:                                          ; preds = %if.then3, %if.end
  %13 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !4353
  %14 = load %struct.rtx_def*, %struct.rtx_def** %from.addr, align 8, !dbg !4355
  %cmp8 = icmp eq %struct.rtx_def* %13, %14, !dbg !4356
  br i1 %cmp8, label %if.then50, label %lor.lhs.false, !dbg !4357

lor.lhs.false:                                    ; preds = %if.end7
  %15 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !4358
  %16 = bitcast %struct.rtx_def* %15 to i32*, !dbg !4358
  %bf.load10 = load i32, i32* %16, align 8, !dbg !4358
  %bf.clear11 = and i32 %bf.load10, 65535, !dbg !4358
  %cmp12 = icmp eq i32 %bf.clear11, 37, !dbg !4358
  br i1 %cmp12, label %land.lhs.true, label %lor.lhs.false31, !dbg !4359

land.lhs.true:                                    ; preds = %lor.lhs.false
  %17 = load %struct.rtx_def*, %struct.rtx_def** %from.addr, align 8, !dbg !4360
  %18 = bitcast %struct.rtx_def* %17 to i32*, !dbg !4360
  %bf.load14 = load i32, i32* %18, align 8, !dbg !4360
  %bf.clear15 = and i32 %bf.load14, 65535, !dbg !4360
  %cmp16 = icmp eq i32 %bf.clear15, 37, !dbg !4360
  br i1 %cmp16, label %land.lhs.true18, label %lor.lhs.false31, !dbg !4361

land.lhs.true18:                                  ; preds = %land.lhs.true
  %19 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !4362
  %20 = bitcast %struct.rtx_def* %19 to i32*, !dbg !4362
  %bf.load19 = load i32, i32* %20, align 8, !dbg !4362
  %bf.lshr20 = lshr i32 %bf.load19, 16, !dbg !4362
  %bf.clear21 = and i32 %bf.lshr20, 255, !dbg !4362
  %21 = load %struct.rtx_def*, %struct.rtx_def** %from.addr, align 8, !dbg !4363
  %22 = bitcast %struct.rtx_def* %21 to i32*, !dbg !4363
  %bf.load22 = load i32, i32* %22, align 8, !dbg !4363
  %bf.lshr23 = lshr i32 %bf.load22, 16, !dbg !4363
  %bf.clear24 = and i32 %bf.lshr23, 255, !dbg !4363
  %cmp25 = icmp eq i32 %bf.clear21, %bf.clear24, !dbg !4364
  br i1 %cmp25, label %land.lhs.true27, label %lor.lhs.false31, !dbg !4365

land.lhs.true27:                                  ; preds = %land.lhs.true18
  %23 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !4366
  %call = call i32 @rhs_regno(%struct.rtx_def* %23), !dbg !4366
  %24 = load %struct.rtx_def*, %struct.rtx_def** %from.addr, align 8, !dbg !4367
  %call28 = call i32 @rhs_regno(%struct.rtx_def* %24), !dbg !4367
  %cmp29 = icmp eq i32 %call, %call28, !dbg !4368
  br i1 %cmp29, label %if.then50, label %lor.lhs.false31, !dbg !4369

lor.lhs.false31:                                  ; preds = %land.lhs.true27, %land.lhs.true18, %land.lhs.true, %lor.lhs.false
  %25 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !4370
  %26 = bitcast %struct.rtx_def* %25 to i32*, !dbg !4370
  %bf.load32 = load i32, i32* %26, align 8, !dbg !4370
  %bf.clear33 = and i32 %bf.load32, 65535, !dbg !4370
  %27 = load %struct.rtx_def*, %struct.rtx_def** %from.addr, align 8, !dbg !4371
  %28 = bitcast %struct.rtx_def* %27 to i32*, !dbg !4371
  %bf.load34 = load i32, i32* %28, align 8, !dbg !4371
  %bf.clear35 = and i32 %bf.load34, 65535, !dbg !4371
  %cmp36 = icmp eq i32 %bf.clear33, %bf.clear35, !dbg !4372
  br i1 %cmp36, label %land.lhs.true38, label %if.end52, !dbg !4373

land.lhs.true38:                                  ; preds = %lor.lhs.false31
  %29 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !4374
  %30 = bitcast %struct.rtx_def* %29 to i32*, !dbg !4374
  %bf.load39 = load i32, i32* %30, align 8, !dbg !4374
  %bf.lshr40 = lshr i32 %bf.load39, 16, !dbg !4374
  %bf.clear41 = and i32 %bf.lshr40, 255, !dbg !4374
  %31 = load %struct.rtx_def*, %struct.rtx_def** %from.addr, align 8, !dbg !4375
  %32 = bitcast %struct.rtx_def* %31 to i32*, !dbg !4375
  %bf.load42 = load i32, i32* %32, align 8, !dbg !4375
  %bf.lshr43 = lshr i32 %bf.load42, 16, !dbg !4375
  %bf.clear44 = and i32 %bf.lshr43, 255, !dbg !4375
  %cmp45 = icmp eq i32 %bf.clear41, %bf.clear44, !dbg !4376
  br i1 %cmp45, label %land.lhs.true47, label %if.end52, !dbg !4377

land.lhs.true47:                                  ; preds = %land.lhs.true38
  %33 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !4378
  %34 = load %struct.rtx_def*, %struct.rtx_def** %from.addr, align 8, !dbg !4379
  %call48 = call i32 @rtx_equal_p(%struct.rtx_def* %33, %struct.rtx_def* %34), !dbg !4380
  %tobool49 = icmp ne i32 %call48, 0, !dbg !4380
  br i1 %tobool49, label %if.then50, label %if.end52, !dbg !4381

if.then50:                                        ; preds = %land.lhs.true47, %land.lhs.true27, %if.end7
  %35 = load %struct.rtx_def*, %struct.rtx_def** %object.addr, align 8, !dbg !4382
  %36 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8, !dbg !4384
  %37 = load %struct.rtx_def*, %struct.rtx_def** %to.addr, align 8, !dbg !4385
  %call51 = call zeroext i8 @validate_unshare_change(%struct.rtx_def* %35, %struct.rtx_def** %36, %struct.rtx_def* %37, i8 zeroext 1), !dbg !4386
  br label %if.end226, !dbg !4387

if.end52:                                         ; preds = %land.lhs.true47, %land.lhs.true38, %lor.lhs.false31
  %38 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !4388
  %39 = bitcast %struct.rtx_def* %38 to i32*, !dbg !4388
  %bf.load53 = load i32, i32* %39, align 8, !dbg !4388
  %bf.clear54 = and i32 %bf.load53, 65535, !dbg !4388
  %cmp55 = icmp eq i32 %bf.clear54, 15, !dbg !4390
  br i1 %cmp55, label %if.then57, label %if.else142, !dbg !4391

if.then57:                                        ; preds = %if.end52
  %40 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !4392
  %u58 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %40, i32 0, i32 1, !dbg !4392
  %fld59 = bitcast %union.u* %u58 to [1 x %union.rtunion_def]*, !dbg !4392
  %arrayidx60 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld59, i64 0, i64 0, !dbg !4392
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx60 to %struct.rtvec_def**, !dbg !4392
  %41 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !4392
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %41, i32 0, i32 0, !dbg !4392
  %42 = load i32, i32* %num_elem, align 8, !dbg !4392
  %sub = sub nsw i32 %42, 1, !dbg !4395
  store i32 %sub, i32* %j, align 4, !dbg !4396
  br label %for.cond, !dbg !4397

for.cond:                                         ; preds = %for.inc, %if.then57
  %43 = load i32, i32* %j, align 4, !dbg !4398
  %cmp61 = icmp sge i32 %43, 0, !dbg !4400
  br i1 %cmp61, label %for.body, label %for.end, !dbg !4401

for.body:                                         ; preds = %for.cond
  %44 = load i32, i32* %j, align 4, !dbg !4402
  %tobool63 = icmp ne i32 %44, 0, !dbg !4402
  br i1 %tobool63, label %land.lhs.true64, label %if.else, !dbg !4405

land.lhs.true64:                                  ; preds = %for.body
  %45 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !4406
  %u65 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %45, i32 0, i32 1, !dbg !4406
  %fld66 = bitcast %union.u* %u65 to [1 x %union.rtunion_def]*, !dbg !4406
  %arrayidx67 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld66, i64 0, i64 0, !dbg !4406
  %rt_rtvec68 = bitcast %union.rtunion_def* %arrayidx67 to %struct.rtvec_def**, !dbg !4406
  %46 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec68, align 8, !dbg !4406
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %46, i32 0, i32 1, !dbg !4406
  %47 = load i32, i32* %j, align 4, !dbg !4406
  %idxprom69 = sext i32 %47 to i64, !dbg !4406
  %arrayidx70 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i64 0, i64 %idxprom69, !dbg !4406
  %48 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx70, align 8, !dbg !4406
  %49 = bitcast %struct.rtx_def* %48 to i32*, !dbg !4406
  %bf.load71 = load i32, i32* %49, align 8, !dbg !4406
  %bf.clear72 = and i32 %bf.load71, 65535, !dbg !4406
  %cmp73 = icmp eq i32 %bf.clear72, 23, !dbg !4407
  br i1 %cmp73, label %land.lhs.true75, label %if.else, !dbg !4408

land.lhs.true75:                                  ; preds = %land.lhs.true64
  %50 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !4409
  %u76 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %50, i32 0, i32 1, !dbg !4409
  %fld77 = bitcast %union.u* %u76 to [1 x %union.rtunion_def]*, !dbg !4409
  %arrayidx78 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld77, i64 0, i64 0, !dbg !4409
  %rt_rtvec79 = bitcast %union.rtunion_def* %arrayidx78 to %struct.rtvec_def**, !dbg !4409
  %51 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec79, align 8, !dbg !4409
  %elem80 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %51, i32 0, i32 1, !dbg !4409
  %52 = load i32, i32* %j, align 4, !dbg !4409
  %idxprom81 = sext i32 %52 to i64, !dbg !4409
  %arrayidx82 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem80, i64 0, i64 %idxprom81, !dbg !4409
  %53 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx82, align 8, !dbg !4409
  %u83 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %53, i32 0, i32 1, !dbg !4409
  %fld84 = bitcast %union.u* %u83 to [1 x %union.rtunion_def]*, !dbg !4409
  %arrayidx85 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld84, i64 0, i64 1, !dbg !4409
  %rt_rtx86 = bitcast %union.rtunion_def* %arrayidx85 to %struct.rtx_def**, !dbg !4409
  %54 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx86, align 8, !dbg !4409
  %55 = bitcast %struct.rtx_def* %54 to i32*, !dbg !4409
  %bf.load87 = load i32, i32* %55, align 8, !dbg !4409
  %bf.clear88 = and i32 %bf.load87, 65535, !dbg !4409
  %cmp89 = icmp eq i32 %bf.clear88, 17, !dbg !4410
  br i1 %cmp89, label %if.then91, label %if.else, !dbg !4411

if.then91:                                        ; preds = %land.lhs.true75
  %56 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !4412
  %u92 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %56, i32 0, i32 1, !dbg !4412
  %fld93 = bitcast %union.u* %u92 to [1 x %union.rtunion_def]*, !dbg !4412
  %arrayidx94 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld93, i64 0, i64 0, !dbg !4412
  %rt_rtvec95 = bitcast %union.rtunion_def* %arrayidx94 to %struct.rtvec_def**, !dbg !4412
  %57 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec95, align 8, !dbg !4412
  %elem96 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %57, i32 0, i32 1, !dbg !4412
  %arrayidx97 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem96, i64 0, i64 0, !dbg !4412
  %58 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx97, align 8, !dbg !4412
  %u98 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %58, i32 0, i32 1, !dbg !4412
  %fld99 = bitcast %union.u* %u98 to [1 x %union.rtunion_def]*, !dbg !4412
  %arrayidx100 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld99, i64 0, i64 1, !dbg !4412
  %rt_rtx101 = bitcast %union.rtunion_def* %arrayidx100 to %struct.rtx_def**, !dbg !4412
  %59 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx101, align 8, !dbg !4412
  %u102 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %59, i32 0, i32 1, !dbg !4412
  %fld103 = bitcast %union.u* %u102 to [1 x %union.rtunion_def]*, !dbg !4412
  %arrayidx104 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld103, i64 0, i64 3, !dbg !4412
  %rt_rtvec105 = bitcast %union.rtunion_def* %arrayidx104 to %struct.rtvec_def**, !dbg !4412
  %60 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec105, align 8, !dbg !4412
  %61 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !4412
  %u106 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %61, i32 0, i32 1, !dbg !4412
  %fld107 = bitcast %union.u* %u106 to [1 x %union.rtunion_def]*, !dbg !4412
  %arrayidx108 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld107, i64 0, i64 0, !dbg !4412
  %rt_rtvec109 = bitcast %union.rtunion_def* %arrayidx108 to %struct.rtvec_def**, !dbg !4412
  %62 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec109, align 8, !dbg !4412
  %elem110 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %62, i32 0, i32 1, !dbg !4412
  %63 = load i32, i32* %j, align 4, !dbg !4412
  %idxprom111 = sext i32 %63 to i64, !dbg !4412
  %arrayidx112 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem110, i64 0, i64 %idxprom111, !dbg !4412
  %64 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx112, align 8, !dbg !4412
  %u113 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %64, i32 0, i32 1, !dbg !4412
  %fld114 = bitcast %union.u* %u113 to [1 x %union.rtunion_def]*, !dbg !4412
  %arrayidx115 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld114, i64 0, i64 1, !dbg !4412
  %rt_rtx116 = bitcast %union.rtunion_def* %arrayidx115 to %struct.rtx_def**, !dbg !4412
  %65 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx116, align 8, !dbg !4412
  %u117 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %65, i32 0, i32 1, !dbg !4412
  %fld118 = bitcast %union.u* %u117 to [1 x %union.rtunion_def]*, !dbg !4412
  %arrayidx119 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld118, i64 0, i64 3, !dbg !4412
  %rt_rtvec120 = bitcast %union.rtunion_def* %arrayidx119 to %struct.rtvec_def**, !dbg !4412
  %66 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec120, align 8, !dbg !4412
  %cmp121 = icmp eq %struct.rtvec_def* %60, %66, !dbg !4412
  br i1 %cmp121, label %cond.false, label %cond.true, !dbg !4412

cond.true:                                        ; preds = %if.then91
  call void @fancy_abort(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i32 711, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !4412
  br label %cond.end, !dbg !4412

cond.false:                                       ; preds = %if.then91
  br label %cond.end, !dbg !4412

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !4412
  %67 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !4414
  %u123 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %67, i32 0, i32 1, !dbg !4414
  %fld124 = bitcast %union.u* %u123 to [1 x %union.rtunion_def]*, !dbg !4414
  %arrayidx125 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld124, i64 0, i64 0, !dbg !4414
  %rt_rtvec126 = bitcast %union.rtunion_def* %arrayidx125 to %struct.rtvec_def**, !dbg !4414
  %68 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec126, align 8, !dbg !4414
  %elem127 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %68, i32 0, i32 1, !dbg !4414
  %69 = load i32, i32* %j, align 4, !dbg !4414
  %idxprom128 = sext i32 %69 to i64, !dbg !4414
  %arrayidx129 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem127, i64 0, i64 %idxprom128, !dbg !4414
  %70 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx129, align 8, !dbg !4414
  %u130 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %70, i32 0, i32 1, !dbg !4414
  %fld131 = bitcast %union.u* %u130 to [1 x %union.rtunion_def]*, !dbg !4414
  %arrayidx132 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld131, i64 0, i64 0, !dbg !4414
  %rt_rtx133 = bitcast %union.rtunion_def* %arrayidx132 to %struct.rtx_def**, !dbg !4414
  %71 = load %struct.rtx_def*, %struct.rtx_def** %from.addr, align 8, !dbg !4415
  %72 = load %struct.rtx_def*, %struct.rtx_def** %to.addr, align 8, !dbg !4416
  %73 = load %struct.rtx_def*, %struct.rtx_def** %object.addr, align 8, !dbg !4417
  %74 = load i8, i8* %simplify.addr, align 1, !dbg !4418
  call void @validate_replace_rtx_1(%struct.rtx_def** %rt_rtx133, %struct.rtx_def* %71, %struct.rtx_def* %72, %struct.rtx_def* %73, i8 zeroext %74), !dbg !4419
  br label %if.end141, !dbg !4420

if.else:                                          ; preds = %land.lhs.true75, %land.lhs.true64, %for.body
  %75 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !4421
  %u134 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %75, i32 0, i32 1, !dbg !4421
  %fld135 = bitcast %union.u* %u134 to [1 x %union.rtunion_def]*, !dbg !4421
  %arrayidx136 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld135, i64 0, i64 0, !dbg !4421
  %rt_rtvec137 = bitcast %union.rtunion_def* %arrayidx136 to %struct.rtvec_def**, !dbg !4421
  %76 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec137, align 8, !dbg !4421
  %elem138 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %76, i32 0, i32 1, !dbg !4421
  %77 = load i32, i32* %j, align 4, !dbg !4421
  %idxprom139 = sext i32 %77 to i64, !dbg !4421
  %arrayidx140 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem138, i64 0, i64 %idxprom139, !dbg !4421
  %78 = load %struct.rtx_def*, %struct.rtx_def** %from.addr, align 8, !dbg !4422
  %79 = load %struct.rtx_def*, %struct.rtx_def** %to.addr, align 8, !dbg !4423
  %80 = load %struct.rtx_def*, %struct.rtx_def** %object.addr, align 8, !dbg !4424
  %81 = load i8, i8* %simplify.addr, align 1, !dbg !4425
  call void @validate_replace_rtx_1(%struct.rtx_def** %arrayidx140, %struct.rtx_def* %78, %struct.rtx_def* %79, %struct.rtx_def* %80, i8 zeroext %81), !dbg !4426
  br label %if.end141

if.end141:                                        ; preds = %if.else, %cond.end
  br label %for.inc, !dbg !4427

for.inc:                                          ; preds = %if.end141
  %82 = load i32, i32* %j, align 4, !dbg !4428
  %dec = add nsw i32 %82, -1, !dbg !4428
  store i32 %dec, i32* %j, align 4, !dbg !4428
  br label %for.cond, !dbg !4429, !llvm.loop !4430

for.end:                                          ; preds = %for.cond
  br label %if.end196, !dbg !4432

if.else142:                                       ; preds = %if.end52
  %83 = load i32, i32* %code, align 4, !dbg !4433
  %idxprom143 = sext i32 %83 to i64, !dbg !4433
  %arrayidx144 = getelementptr inbounds [139 x i8], [139 x i8]* @rtx_length, i64 0, i64 %idxprom143, !dbg !4433
  %84 = load i8, i8* %arrayidx144, align 1, !dbg !4433
  %conv145 = zext i8 %84 to i32, !dbg !4433
  %sub146 = sub nsw i32 %conv145, 1, !dbg !4435
  store i32 %sub146, i32* %i, align 4, !dbg !4436
  br label %for.cond147, !dbg !4437

for.cond147:                                      ; preds = %for.inc193, %if.else142
  %85 = load i32, i32* %i, align 4, !dbg !4438
  %cmp148 = icmp sge i32 %85, 0, !dbg !4440
  br i1 %cmp148, label %for.body150, label %for.end195, !dbg !4441

for.body150:                                      ; preds = %for.cond147
  %86 = load i8*, i8** %fmt, align 8, !dbg !4442
  %87 = load i32, i32* %i, align 4, !dbg !4445
  %idxprom151 = sext i32 %87 to i64, !dbg !4442
  %arrayidx152 = getelementptr inbounds i8, i8* %86, i64 %idxprom151, !dbg !4442
  %88 = load i8, i8* %arrayidx152, align 1, !dbg !4442
  %conv153 = sext i8 %88 to i32, !dbg !4442
  %cmp154 = icmp eq i32 %conv153, 101, !dbg !4446
  br i1 %cmp154, label %if.then156, label %if.else162, !dbg !4447

if.then156:                                       ; preds = %for.body150
  %89 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !4448
  %u157 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %89, i32 0, i32 1, !dbg !4448
  %fld158 = bitcast %union.u* %u157 to [1 x %union.rtunion_def]*, !dbg !4448
  %90 = load i32, i32* %i, align 4, !dbg !4448
  %idxprom159 = sext i32 %90 to i64, !dbg !4448
  %arrayidx160 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld158, i64 0, i64 %idxprom159, !dbg !4448
  %rt_rtx161 = bitcast %union.rtunion_def* %arrayidx160 to %struct.rtx_def**, !dbg !4448
  %91 = load %struct.rtx_def*, %struct.rtx_def** %from.addr, align 8, !dbg !4449
  %92 = load %struct.rtx_def*, %struct.rtx_def** %to.addr, align 8, !dbg !4450
  %93 = load %struct.rtx_def*, %struct.rtx_def** %object.addr, align 8, !dbg !4451
  %94 = load i8, i8* %simplify.addr, align 1, !dbg !4452
  call void @validate_replace_rtx_1(%struct.rtx_def** %rt_rtx161, %struct.rtx_def* %91, %struct.rtx_def* %92, %struct.rtx_def* %93, i8 zeroext %94), !dbg !4453
  br label %if.end192, !dbg !4453

if.else162:                                       ; preds = %for.body150
  %95 = load i8*, i8** %fmt, align 8, !dbg !4454
  %96 = load i32, i32* %i, align 4, !dbg !4456
  %idxprom163 = sext i32 %96 to i64, !dbg !4454
  %arrayidx164 = getelementptr inbounds i8, i8* %95, i64 %idxprom163, !dbg !4454
  %97 = load i8, i8* %arrayidx164, align 1, !dbg !4454
  %conv165 = sext i8 %97 to i32, !dbg !4454
  %cmp166 = icmp eq i32 %conv165, 69, !dbg !4457
  br i1 %cmp166, label %if.then168, label %if.end191, !dbg !4458

if.then168:                                       ; preds = %if.else162
  %98 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !4459
  %u169 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %98, i32 0, i32 1, !dbg !4459
  %fld170 = bitcast %union.u* %u169 to [1 x %union.rtunion_def]*, !dbg !4459
  %99 = load i32, i32* %i, align 4, !dbg !4459
  %idxprom171 = sext i32 %99 to i64, !dbg !4459
  %arrayidx172 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld170, i64 0, i64 %idxprom171, !dbg !4459
  %rt_rtvec173 = bitcast %union.rtunion_def* %arrayidx172 to %struct.rtvec_def**, !dbg !4459
  %100 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec173, align 8, !dbg !4459
  %num_elem174 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %100, i32 0, i32 0, !dbg !4459
  %101 = load i32, i32* %num_elem174, align 8, !dbg !4459
  %sub175 = sub nsw i32 %101, 1, !dbg !4461
  store i32 %sub175, i32* %j, align 4, !dbg !4462
  br label %for.cond176, !dbg !4463

for.cond176:                                      ; preds = %for.inc188, %if.then168
  %102 = load i32, i32* %j, align 4, !dbg !4464
  %cmp177 = icmp sge i32 %102, 0, !dbg !4466
  br i1 %cmp177, label %for.body179, label %for.end190, !dbg !4467

for.body179:                                      ; preds = %for.cond176
  %103 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !4468
  %u180 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %103, i32 0, i32 1, !dbg !4468
  %fld181 = bitcast %union.u* %u180 to [1 x %union.rtunion_def]*, !dbg !4468
  %104 = load i32, i32* %i, align 4, !dbg !4468
  %idxprom182 = sext i32 %104 to i64, !dbg !4468
  %arrayidx183 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld181, i64 0, i64 %idxprom182, !dbg !4468
  %rt_rtvec184 = bitcast %union.rtunion_def* %arrayidx183 to %struct.rtvec_def**, !dbg !4468
  %105 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec184, align 8, !dbg !4468
  %elem185 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %105, i32 0, i32 1, !dbg !4468
  %106 = load i32, i32* %j, align 4, !dbg !4468
  %idxprom186 = sext i32 %106 to i64, !dbg !4468
  %arrayidx187 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem185, i64 0, i64 %idxprom186, !dbg !4468
  %107 = load %struct.rtx_def*, %struct.rtx_def** %from.addr, align 8, !dbg !4469
  %108 = load %struct.rtx_def*, %struct.rtx_def** %to.addr, align 8, !dbg !4470
  %109 = load %struct.rtx_def*, %struct.rtx_def** %object.addr, align 8, !dbg !4471
  %110 = load i8, i8* %simplify.addr, align 1, !dbg !4472
  call void @validate_replace_rtx_1(%struct.rtx_def** %arrayidx187, %struct.rtx_def* %107, %struct.rtx_def* %108, %struct.rtx_def* %109, i8 zeroext %110), !dbg !4473
  br label %for.inc188, !dbg !4473

for.inc188:                                       ; preds = %for.body179
  %111 = load i32, i32* %j, align 4, !dbg !4474
  %dec189 = add nsw i32 %111, -1, !dbg !4474
  store i32 %dec189, i32* %j, align 4, !dbg !4474
  br label %for.cond176, !dbg !4475, !llvm.loop !4476

for.end190:                                       ; preds = %for.cond176
  br label %if.end191, !dbg !4477

if.end191:                                        ; preds = %for.end190, %if.else162
  br label %if.end192

if.end192:                                        ; preds = %if.end191, %if.then156
  br label %for.inc193, !dbg !4478

for.inc193:                                       ; preds = %if.end192
  %112 = load i32, i32* %i, align 4, !dbg !4479
  %dec194 = add nsw i32 %112, -1, !dbg !4479
  store i32 %dec194, i32* %i, align 4, !dbg !4479
  br label %for.cond147, !dbg !4480, !llvm.loop !4481

for.end195:                                       ; preds = %for.cond147
  br label %if.end196

if.end196:                                        ; preds = %for.end195, %for.end
  %113 = load i32, i32* @num_changes, align 4, !dbg !4483
  %114 = load i32, i32* %prev_changes, align 4, !dbg !4485
  %cmp197 = icmp eq i32 %113, %114, !dbg !4486
  br i1 %cmp197, label %if.then199, label %if.end200, !dbg !4487

if.then199:                                       ; preds = %if.end196
  br label %if.end226, !dbg !4488

if.end200:                                        ; preds = %if.end196
  %115 = load i8*, i8** %fmt, align 8, !dbg !4489
  %arrayidx201 = getelementptr inbounds i8, i8* %115, i64 0, !dbg !4489
  %116 = load i8, i8* %arrayidx201, align 1, !dbg !4489
  %conv202 = sext i8 %116 to i32, !dbg !4489
  %cmp203 = icmp eq i32 %conv202, 101, !dbg !4491
  br i1 %cmp203, label %land.lhs.true205, label %if.end223, !dbg !4492

land.lhs.true205:                                 ; preds = %if.end200
  %117 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !4493
  %u206 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %117, i32 0, i32 1, !dbg !4493
  %fld207 = bitcast %union.u* %u206 to [1 x %union.rtunion_def]*, !dbg !4493
  %arrayidx208 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld207, i64 0, i64 0, !dbg !4493
  %rt_rtx209 = bitcast %union.rtunion_def* %arrayidx208 to %struct.rtx_def**, !dbg !4493
  %118 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx209, align 8, !dbg !4493
  %119 = bitcast %struct.rtx_def* %118 to i32*, !dbg !4493
  %bf.load210 = load i32, i32* %119, align 8, !dbg !4493
  %bf.lshr211 = lshr i32 %bf.load210, 16, !dbg !4493
  %bf.clear212 = and i32 %bf.lshr211, 255, !dbg !4493
  %cmp213 = icmp ne i32 %bf.clear212, 0, !dbg !4494
  br i1 %cmp213, label %if.then215, label %if.end223, !dbg !4495

if.then215:                                       ; preds = %land.lhs.true205
  %120 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !4496
  %u216 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %120, i32 0, i32 1, !dbg !4496
  %fld217 = bitcast %union.u* %u216 to [1 x %union.rtunion_def]*, !dbg !4496
  %arrayidx218 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld217, i64 0, i64 0, !dbg !4496
  %rt_rtx219 = bitcast %union.rtunion_def* %arrayidx218 to %struct.rtx_def**, !dbg !4496
  %121 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx219, align 8, !dbg !4496
  %122 = bitcast %struct.rtx_def* %121 to i32*, !dbg !4496
  %bf.load220 = load i32, i32* %122, align 8, !dbg !4496
  %bf.lshr221 = lshr i32 %bf.load220, 16, !dbg !4496
  %bf.clear222 = and i32 %bf.lshr221, 255, !dbg !4496
  store i32 %bf.clear222, i32* %op0_mode, align 4, !dbg !4497
  br label %if.end223, !dbg !4498

if.end223:                                        ; preds = %if.then215, %land.lhs.true205, %if.end200
  %123 = load i8, i8* %simplify.addr, align 1, !dbg !4499
  %tobool224 = icmp ne i8 %123, 0, !dbg !4499
  br i1 %tobool224, label %if.then225, label %if.end226, !dbg !4501

if.then225:                                       ; preds = %if.end223
  %124 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8, !dbg !4502
  %125 = load %struct.rtx_def*, %struct.rtx_def** %to.addr, align 8, !dbg !4503
  %126 = load %struct.rtx_def*, %struct.rtx_def** %object.addr, align 8, !dbg !4504
  %127 = load i32, i32* %op0_mode, align 4, !dbg !4505
  call void @simplify_while_replacing(%struct.rtx_def** %124, %struct.rtx_def* %125, %struct.rtx_def* %126, i32 %127), !dbg !4506
  br label %if.end226, !dbg !4506

if.end226:                                        ; preds = %if.then, %if.then50, %if.then199, %if.then225, %if.end223
  ret void, !dbg !4507
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @validate_replace_rtx(%struct.rtx_def* %from, %struct.rtx_def* %to, %struct.rtx_def* %insn) #0 !dbg !4508 {
entry:
  %from.addr = alloca %struct.rtx_def*, align 8
  %to.addr = alloca %struct.rtx_def*, align 8
  %insn.addr = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %from, %struct.rtx_def** %from.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %from.addr, metadata !4511, metadata !DIExpression()), !dbg !4512
  store %struct.rtx_def* %to, %struct.rtx_def** %to.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %to.addr, metadata !4513, metadata !DIExpression()), !dbg !4514
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !4515, metadata !DIExpression()), !dbg !4516
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4517
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i32 0, i32 1, !dbg !4517
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !4517
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 5, !dbg !4517
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !4517
  %1 = load %struct.rtx_def*, %struct.rtx_def** %from.addr, align 8, !dbg !4518
  %2 = load %struct.rtx_def*, %struct.rtx_def** %to.addr, align 8, !dbg !4519
  %3 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4520
  call void @validate_replace_rtx_1(%struct.rtx_def** %rt_rtx, %struct.rtx_def* %1, %struct.rtx_def* %2, %struct.rtx_def* %3, i8 zeroext 1), !dbg !4521
  %call = call i32 @apply_change_group(), !dbg !4522
  ret i32 %call, !dbg !4523
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @validate_replace_rtx_part(%struct.rtx_def* %from, %struct.rtx_def* %to, %struct.rtx_def** %where, %struct.rtx_def* %insn) #0 !dbg !4524 {
entry:
  %from.addr = alloca %struct.rtx_def*, align 8
  %to.addr = alloca %struct.rtx_def*, align 8
  %where.addr = alloca %struct.rtx_def**, align 8
  %insn.addr = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %from, %struct.rtx_def** %from.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %from.addr, metadata !4527, metadata !DIExpression()), !dbg !4528
  store %struct.rtx_def* %to, %struct.rtx_def** %to.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %to.addr, metadata !4529, metadata !DIExpression()), !dbg !4530
  store %struct.rtx_def** %where, %struct.rtx_def*** %where.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def*** %where.addr, metadata !4531, metadata !DIExpression()), !dbg !4532
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !4533, metadata !DIExpression()), !dbg !4534
  %0 = load %struct.rtx_def**, %struct.rtx_def*** %where.addr, align 8, !dbg !4535
  %1 = load %struct.rtx_def*, %struct.rtx_def** %from.addr, align 8, !dbg !4536
  %2 = load %struct.rtx_def*, %struct.rtx_def** %to.addr, align 8, !dbg !4537
  %3 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4538
  call void @validate_replace_rtx_1(%struct.rtx_def** %0, %struct.rtx_def* %1, %struct.rtx_def* %2, %struct.rtx_def* %3, i8 zeroext 1), !dbg !4539
  %call = call i32 @apply_change_group(), !dbg !4540
  ret i32 %call, !dbg !4541
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @validate_replace_rtx_part_nosimplify(%struct.rtx_def* %from, %struct.rtx_def* %to, %struct.rtx_def** %where, %struct.rtx_def* %insn) #0 !dbg !4542 {
entry:
  %from.addr = alloca %struct.rtx_def*, align 8
  %to.addr = alloca %struct.rtx_def*, align 8
  %where.addr = alloca %struct.rtx_def**, align 8
  %insn.addr = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %from, %struct.rtx_def** %from.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %from.addr, metadata !4543, metadata !DIExpression()), !dbg !4544
  store %struct.rtx_def* %to, %struct.rtx_def** %to.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %to.addr, metadata !4545, metadata !DIExpression()), !dbg !4546
  store %struct.rtx_def** %where, %struct.rtx_def*** %where.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def*** %where.addr, metadata !4547, metadata !DIExpression()), !dbg !4548
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !4549, metadata !DIExpression()), !dbg !4550
  %0 = load %struct.rtx_def**, %struct.rtx_def*** %where.addr, align 8, !dbg !4551
  %1 = load %struct.rtx_def*, %struct.rtx_def** %from.addr, align 8, !dbg !4552
  %2 = load %struct.rtx_def*, %struct.rtx_def** %to.addr, align 8, !dbg !4553
  %3 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4554
  call void @validate_replace_rtx_1(%struct.rtx_def** %0, %struct.rtx_def* %1, %struct.rtx_def* %2, %struct.rtx_def* %3, i8 zeroext 0), !dbg !4555
  %call = call i32 @apply_change_group(), !dbg !4556
  ret i32 %call, !dbg !4557
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @validate_replace_rtx_group(%struct.rtx_def* %from, %struct.rtx_def* %to, %struct.rtx_def* %insn) #0 !dbg !4558 {
entry:
  %from.addr = alloca %struct.rtx_def*, align 8
  %to.addr = alloca %struct.rtx_def*, align 8
  %insn.addr = alloca %struct.rtx_def*, align 8
  %note = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %from, %struct.rtx_def** %from.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %from.addr, metadata !4561, metadata !DIExpression()), !dbg !4562
  store %struct.rtx_def* %to, %struct.rtx_def** %to.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %to.addr, metadata !4563, metadata !DIExpression()), !dbg !4564
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !4565, metadata !DIExpression()), !dbg !4566
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %note, metadata !4567, metadata !DIExpression()), !dbg !4568
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4569
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i32 0, i32 1, !dbg !4569
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !4569
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 5, !dbg !4569
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !4569
  %1 = load %struct.rtx_def*, %struct.rtx_def** %from.addr, align 8, !dbg !4570
  %2 = load %struct.rtx_def*, %struct.rtx_def** %to.addr, align 8, !dbg !4571
  %3 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4572
  call void @validate_replace_rtx_1(%struct.rtx_def** %rt_rtx, %struct.rtx_def* %1, %struct.rtx_def* %2, %struct.rtx_def* %3, i8 zeroext 1), !dbg !4573
  %4 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4574
  %u1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i32 0, i32 1, !dbg !4574
  %fld2 = bitcast %union.u* %u1 to [1 x %union.rtunion_def]*, !dbg !4574
  %arrayidx3 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2, i64 0, i64 7, !dbg !4574
  %rt_rtx4 = bitcast %union.rtunion_def* %arrayidx3 to %struct.rtx_def**, !dbg !4574
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx4, align 8, !dbg !4574
  store %struct.rtx_def* %5, %struct.rtx_def** %note, align 8, !dbg !4576
  br label %for.cond, !dbg !4577

for.cond:                                         ; preds = %for.inc, %entry
  %6 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8, !dbg !4578
  %tobool = icmp ne %struct.rtx_def* %6, null, !dbg !4580
  br i1 %tobool, label %for.body, label %for.end, !dbg !4580

for.body:                                         ; preds = %for.cond
  %7 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8, !dbg !4581
  %8 = bitcast %struct.rtx_def* %7 to i32*, !dbg !4581
  %bf.load = load i32, i32* %8, align 8, !dbg !4581
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !4581
  %bf.clear = and i32 %bf.lshr, 255, !dbg !4581
  %cmp = icmp eq i32 %bf.clear, 4, !dbg !4583
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !4584

lor.lhs.false:                                    ; preds = %for.body
  %9 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8, !dbg !4585
  %10 = bitcast %struct.rtx_def* %9 to i32*, !dbg !4585
  %bf.load5 = load i32, i32* %10, align 8, !dbg !4585
  %bf.lshr6 = lshr i32 %bf.load5, 16, !dbg !4585
  %bf.clear7 = and i32 %bf.lshr6, 255, !dbg !4585
  %cmp8 = icmp eq i32 %bf.clear7, 3, !dbg !4586
  br i1 %cmp8, label %if.then, label %if.end, !dbg !4587

if.then:                                          ; preds = %lor.lhs.false, %for.body
  %11 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8, !dbg !4588
  %u9 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i32 0, i32 1, !dbg !4588
  %fld10 = bitcast %union.u* %u9 to [1 x %union.rtunion_def]*, !dbg !4588
  %arrayidx11 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld10, i64 0, i64 0, !dbg !4588
  %rt_rtx12 = bitcast %union.rtunion_def* %arrayidx11 to %struct.rtx_def**, !dbg !4588
  %12 = load %struct.rtx_def*, %struct.rtx_def** %from.addr, align 8, !dbg !4589
  %13 = load %struct.rtx_def*, %struct.rtx_def** %to.addr, align 8, !dbg !4590
  %14 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4591
  call void @validate_replace_rtx_1(%struct.rtx_def** %rt_rtx12, %struct.rtx_def* %12, %struct.rtx_def* %13, %struct.rtx_def* %14, i8 zeroext 1), !dbg !4592
  br label %if.end, !dbg !4592

if.end:                                           ; preds = %if.then, %lor.lhs.false
  br label %for.inc, !dbg !4593

for.inc:                                          ; preds = %if.end
  %15 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8, !dbg !4594
  %u13 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i32 0, i32 1, !dbg !4594
  %fld14 = bitcast %union.u* %u13 to [1 x %union.rtunion_def]*, !dbg !4594
  %arrayidx15 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld14, i64 0, i64 1, !dbg !4594
  %rt_rtx16 = bitcast %union.rtunion_def* %arrayidx15 to %struct.rtx_def**, !dbg !4594
  %16 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx16, align 8, !dbg !4594
  store %struct.rtx_def* %16, %struct.rtx_def** %note, align 8, !dbg !4595
  br label %for.cond, !dbg !4596, !llvm.loop !4597

for.end:                                          ; preds = %for.cond
  ret void, !dbg !4599
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @validate_replace_src_group(%struct.rtx_def* %from, %struct.rtx_def* %to, %struct.rtx_def* %insn) #0 !dbg !4600 {
entry:
  %from.addr = alloca %struct.rtx_def*, align 8
  %to.addr = alloca %struct.rtx_def*, align 8
  %insn.addr = alloca %struct.rtx_def*, align 8
  %d = alloca %struct.validate_replace_src_data, align 8
  store %struct.rtx_def* %from, %struct.rtx_def** %from.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %from.addr, metadata !4601, metadata !DIExpression()), !dbg !4602
  store %struct.rtx_def* %to, %struct.rtx_def** %to.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %to.addr, metadata !4603, metadata !DIExpression()), !dbg !4604
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !4605, metadata !DIExpression()), !dbg !4606
  call void @llvm.dbg.declare(metadata %struct.validate_replace_src_data* %d, metadata !4607, metadata !DIExpression()), !dbg !4608
  %0 = load %struct.rtx_def*, %struct.rtx_def** %from.addr, align 8, !dbg !4609
  %from1 = getelementptr inbounds %struct.validate_replace_src_data, %struct.validate_replace_src_data* %d, i32 0, i32 0, !dbg !4610
  store %struct.rtx_def* %0, %struct.rtx_def** %from1, align 8, !dbg !4611
  %1 = load %struct.rtx_def*, %struct.rtx_def** %to.addr, align 8, !dbg !4612
  %to2 = getelementptr inbounds %struct.validate_replace_src_data, %struct.validate_replace_src_data* %d, i32 0, i32 1, !dbg !4613
  store %struct.rtx_def* %1, %struct.rtx_def** %to2, align 8, !dbg !4614
  %2 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4615
  %insn3 = getelementptr inbounds %struct.validate_replace_src_data, %struct.validate_replace_src_data* %d, i32 0, i32 2, !dbg !4616
  store %struct.rtx_def* %2, %struct.rtx_def** %insn3, align 8, !dbg !4617
  %3 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4618
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i32 0, i32 1, !dbg !4618
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !4618
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 5, !dbg !4618
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !4618
  %4 = bitcast %struct.validate_replace_src_data* %d to i8*, !dbg !4619
  call void @note_uses(%struct.rtx_def** %rt_rtx, void (%struct.rtx_def**, i8*)* @validate_replace_src_1, i8* %4), !dbg !4620
  ret void, !dbg !4621
}

declare dso_local void @note_uses(%struct.rtx_def**, void (%struct.rtx_def**, i8*)*, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @validate_replace_src_1(%struct.rtx_def** %x, i8* %data) #0 !dbg !4622 {
entry:
  %x.addr = alloca %struct.rtx_def**, align 8
  %data.addr = alloca i8*, align 8
  %d = alloca %struct.validate_replace_src_data*, align 8
  store %struct.rtx_def** %x, %struct.rtx_def*** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def*** %x.addr, metadata !4625, metadata !DIExpression()), !dbg !4626
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !4627, metadata !DIExpression()), !dbg !4628
  call void @llvm.dbg.declare(metadata %struct.validate_replace_src_data** %d, metadata !4629, metadata !DIExpression()), !dbg !4630
  %0 = load i8*, i8** %data.addr, align 8, !dbg !4631
  %1 = bitcast i8* %0 to %struct.validate_replace_src_data*, !dbg !4632
  store %struct.validate_replace_src_data* %1, %struct.validate_replace_src_data** %d, align 8, !dbg !4630
  %2 = load %struct.rtx_def**, %struct.rtx_def*** %x.addr, align 8, !dbg !4633
  %3 = load %struct.validate_replace_src_data*, %struct.validate_replace_src_data** %d, align 8, !dbg !4634
  %from = getelementptr inbounds %struct.validate_replace_src_data, %struct.validate_replace_src_data* %3, i32 0, i32 0, !dbg !4635
  %4 = load %struct.rtx_def*, %struct.rtx_def** %from, align 8, !dbg !4635
  %5 = load %struct.validate_replace_src_data*, %struct.validate_replace_src_data** %d, align 8, !dbg !4636
  %to = getelementptr inbounds %struct.validate_replace_src_data, %struct.validate_replace_src_data* %5, i32 0, i32 1, !dbg !4637
  %6 = load %struct.rtx_def*, %struct.rtx_def** %to, align 8, !dbg !4637
  %7 = load %struct.validate_replace_src_data*, %struct.validate_replace_src_data** %d, align 8, !dbg !4638
  %insn = getelementptr inbounds %struct.validate_replace_src_data, %struct.validate_replace_src_data* %7, i32 0, i32 2, !dbg !4639
  %8 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !4639
  call void @validate_replace_rtx_1(%struct.rtx_def** %2, %struct.rtx_def* %4, %struct.rtx_def* %6, %struct.rtx_def* %8, i8 zeroext 1), !dbg !4640
  ret void, !dbg !4641
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @validate_simplify_insn(%struct.rtx_def* %insn) #0 !dbg !4642 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  %i = alloca i32, align 4
  %pat = alloca %struct.rtx_def*, align 8
  %newpat = alloca %struct.rtx_def*, align 8
  %s = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !4645, metadata !DIExpression()), !dbg !4646
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4647, metadata !DIExpression()), !dbg !4648
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %pat, metadata !4649, metadata !DIExpression()), !dbg !4650
  store %struct.rtx_def* null, %struct.rtx_def** %pat, align 8, !dbg !4650
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %newpat, metadata !4651, metadata !DIExpression()), !dbg !4652
  store %struct.rtx_def* null, %struct.rtx_def** %newpat, align 8, !dbg !4652
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4653
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i32 0, i32 1, !dbg !4653
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !4653
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 5, !dbg !4653
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !4653
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4653
  store %struct.rtx_def* %1, %struct.rtx_def** %pat, align 8, !dbg !4654
  %2 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8, !dbg !4655
  %3 = bitcast %struct.rtx_def* %2 to i32*, !dbg !4655
  %bf.load = load i32, i32* %3, align 8, !dbg !4655
  %bf.clear = and i32 %bf.load, 65535, !dbg !4655
  %cmp = icmp eq i32 %bf.clear, 23, !dbg !4657
  br i1 %cmp, label %if.then, label %if.else, !dbg !4658

if.then:                                          ; preds = %entry
  %4 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8, !dbg !4659
  %u1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i32 0, i32 1, !dbg !4659
  %fld2 = bitcast %union.u* %u1 to [1 x %union.rtunion_def]*, !dbg !4659
  %arrayidx3 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2, i64 0, i64 1, !dbg !4659
  %rt_rtx4 = bitcast %union.rtunion_def* %arrayidx3 to %struct.rtx_def**, !dbg !4659
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx4, align 8, !dbg !4659
  %call = call %struct.rtx_def* @simplify_rtx(%struct.rtx_def* %5), !dbg !4661
  store %struct.rtx_def* %call, %struct.rtx_def** %newpat, align 8, !dbg !4662
  %6 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8, !dbg !4663
  %tobool = icmp ne %struct.rtx_def* %6, null, !dbg !4663
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !4665

land.lhs.true:                                    ; preds = %if.then
  %7 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8, !dbg !4666
  %u5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i32 0, i32 1, !dbg !4666
  %fld6 = bitcast %union.u* %u5 to [1 x %union.rtunion_def]*, !dbg !4666
  %arrayidx7 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld6, i64 0, i64 1, !dbg !4666
  %rt_rtx8 = bitcast %union.rtunion_def* %arrayidx7 to %struct.rtx_def**, !dbg !4666
  %8 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx8, align 8, !dbg !4666
  %9 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8, !dbg !4667
  %call9 = call i32 @rtx_equal_p(%struct.rtx_def* %8, %struct.rtx_def* %9), !dbg !4668
  %tobool10 = icmp ne i32 %call9, 0, !dbg !4668
  br i1 %tobool10, label %if.end, label %if.then11, !dbg !4669

if.then11:                                        ; preds = %land.lhs.true
  %10 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4670
  %11 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8, !dbg !4671
  %u12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i32 0, i32 1, !dbg !4671
  %fld13 = bitcast %union.u* %u12 to [1 x %union.rtunion_def]*, !dbg !4671
  %arrayidx14 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld13, i64 0, i64 1, !dbg !4671
  %rt_rtx15 = bitcast %union.rtunion_def* %arrayidx14 to %struct.rtx_def**, !dbg !4671
  %12 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8, !dbg !4672
  %call16 = call zeroext i8 @validate_change(%struct.rtx_def* %10, %struct.rtx_def** %rt_rtx15, %struct.rtx_def* %12, i8 zeroext 1), !dbg !4673
  br label %if.end, !dbg !4673

if.end:                                           ; preds = %if.then11, %land.lhs.true, %if.then
  %13 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8, !dbg !4674
  %u17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %13, i32 0, i32 1, !dbg !4674
  %fld18 = bitcast %union.u* %u17 to [1 x %union.rtunion_def]*, !dbg !4674
  %arrayidx19 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld18, i64 0, i64 0, !dbg !4674
  %rt_rtx20 = bitcast %union.rtunion_def* %arrayidx19 to %struct.rtx_def**, !dbg !4674
  %14 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx20, align 8, !dbg !4674
  %call21 = call %struct.rtx_def* @simplify_rtx(%struct.rtx_def* %14), !dbg !4675
  store %struct.rtx_def* %call21, %struct.rtx_def** %newpat, align 8, !dbg !4676
  %15 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8, !dbg !4677
  %tobool22 = icmp ne %struct.rtx_def* %15, null, !dbg !4677
  br i1 %tobool22, label %land.lhs.true23, label %if.end36, !dbg !4679

land.lhs.true23:                                  ; preds = %if.end
  %16 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8, !dbg !4680
  %u24 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %16, i32 0, i32 1, !dbg !4680
  %fld25 = bitcast %union.u* %u24 to [1 x %union.rtunion_def]*, !dbg !4680
  %arrayidx26 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld25, i64 0, i64 0, !dbg !4680
  %rt_rtx27 = bitcast %union.rtunion_def* %arrayidx26 to %struct.rtx_def**, !dbg !4680
  %17 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx27, align 8, !dbg !4680
  %18 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8, !dbg !4681
  %call28 = call i32 @rtx_equal_p(%struct.rtx_def* %17, %struct.rtx_def* %18), !dbg !4682
  %tobool29 = icmp ne i32 %call28, 0, !dbg !4682
  br i1 %tobool29, label %if.end36, label %if.then30, !dbg !4683

if.then30:                                        ; preds = %land.lhs.true23
  %19 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4684
  %20 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8, !dbg !4685
  %u31 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %20, i32 0, i32 1, !dbg !4685
  %fld32 = bitcast %union.u* %u31 to [1 x %union.rtunion_def]*, !dbg !4685
  %arrayidx33 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld32, i64 0, i64 0, !dbg !4685
  %rt_rtx34 = bitcast %union.rtunion_def* %arrayidx33 to %struct.rtx_def**, !dbg !4685
  %21 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8, !dbg !4686
  %call35 = call zeroext i8 @validate_change(%struct.rtx_def* %19, %struct.rtx_def** %rt_rtx34, %struct.rtx_def* %21, i8 zeroext 1), !dbg !4687
  br label %if.end36, !dbg !4687

if.end36:                                         ; preds = %if.then30, %land.lhs.true23, %if.end
  br label %if.end103, !dbg !4688

if.else:                                          ; preds = %entry
  %22 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8, !dbg !4689
  %23 = bitcast %struct.rtx_def* %22 to i32*, !dbg !4689
  %bf.load37 = load i32, i32* %23, align 8, !dbg !4689
  %bf.clear38 = and i32 %bf.load37, 65535, !dbg !4689
  %cmp39 = icmp eq i32 %bf.clear38, 15, !dbg !4691
  br i1 %cmp39, label %if.then40, label %if.end102, !dbg !4692

if.then40:                                        ; preds = %if.else
  store i32 0, i32* %i, align 4, !dbg !4693
  br label %for.cond, !dbg !4695

for.cond:                                         ; preds = %for.inc, %if.then40
  %24 = load i32, i32* %i, align 4, !dbg !4696
  %25 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8, !dbg !4698
  %u41 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %25, i32 0, i32 1, !dbg !4698
  %fld42 = bitcast %union.u* %u41 to [1 x %union.rtunion_def]*, !dbg !4698
  %arrayidx43 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld42, i64 0, i64 0, !dbg !4698
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx43 to %struct.rtvec_def**, !dbg !4698
  %26 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !4698
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %26, i32 0, i32 0, !dbg !4698
  %27 = load i32, i32* %num_elem, align 8, !dbg !4698
  %cmp44 = icmp slt i32 %24, %27, !dbg !4699
  br i1 %cmp44, label %for.body, label %for.end, !dbg !4700

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %s, metadata !4701, metadata !DIExpression()), !dbg !4703
  %28 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8, !dbg !4704
  %u45 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %28, i32 0, i32 1, !dbg !4704
  %fld46 = bitcast %union.u* %u45 to [1 x %union.rtunion_def]*, !dbg !4704
  %arrayidx47 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld46, i64 0, i64 0, !dbg !4704
  %rt_rtvec48 = bitcast %union.rtunion_def* %arrayidx47 to %struct.rtvec_def**, !dbg !4704
  %29 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec48, align 8, !dbg !4704
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %29, i32 0, i32 1, !dbg !4704
  %30 = load i32, i32* %i, align 4, !dbg !4704
  %idxprom = sext i32 %30 to i64, !dbg !4704
  %arrayidx49 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i64 0, i64 %idxprom, !dbg !4704
  %31 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx49, align 8, !dbg !4704
  store %struct.rtx_def* %31, %struct.rtx_def** %s, align 8, !dbg !4703
  %32 = load %struct.rtx_def*, %struct.rtx_def** %pat, align 8, !dbg !4705
  %u50 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %32, i32 0, i32 1, !dbg !4705
  %fld51 = bitcast %union.u* %u50 to [1 x %union.rtunion_def]*, !dbg !4705
  %arrayidx52 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld51, i64 0, i64 0, !dbg !4705
  %rt_rtvec53 = bitcast %union.rtunion_def* %arrayidx52 to %struct.rtvec_def**, !dbg !4705
  %33 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec53, align 8, !dbg !4705
  %elem54 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %33, i32 0, i32 1, !dbg !4705
  %34 = load i32, i32* %i, align 4, !dbg !4705
  %idxprom55 = sext i32 %34 to i64, !dbg !4705
  %arrayidx56 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem54, i64 0, i64 %idxprom55, !dbg !4705
  %35 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx56, align 8, !dbg !4705
  %36 = bitcast %struct.rtx_def* %35 to i32*, !dbg !4705
  %bf.load57 = load i32, i32* %36, align 8, !dbg !4705
  %bf.clear58 = and i32 %bf.load57, 65535, !dbg !4705
  %cmp59 = icmp eq i32 %bf.clear58, 23, !dbg !4707
  br i1 %cmp59, label %if.then60, label %if.end101, !dbg !4708

if.then60:                                        ; preds = %for.body
  %37 = load %struct.rtx_def*, %struct.rtx_def** %s, align 8, !dbg !4709
  %u61 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %37, i32 0, i32 1, !dbg !4709
  %fld62 = bitcast %union.u* %u61 to [1 x %union.rtunion_def]*, !dbg !4709
  %arrayidx63 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld62, i64 0, i64 1, !dbg !4709
  %rt_rtx64 = bitcast %union.rtunion_def* %arrayidx63 to %struct.rtx_def**, !dbg !4709
  %38 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx64, align 8, !dbg !4709
  %call65 = call %struct.rtx_def* @simplify_rtx(%struct.rtx_def* %38), !dbg !4711
  store %struct.rtx_def* %call65, %struct.rtx_def** %newpat, align 8, !dbg !4712
  %39 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8, !dbg !4713
  %tobool66 = icmp ne %struct.rtx_def* %39, null, !dbg !4713
  br i1 %tobool66, label %land.lhs.true67, label %if.end80, !dbg !4715

land.lhs.true67:                                  ; preds = %if.then60
  %40 = load %struct.rtx_def*, %struct.rtx_def** %s, align 8, !dbg !4716
  %u68 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %40, i32 0, i32 1, !dbg !4716
  %fld69 = bitcast %union.u* %u68 to [1 x %union.rtunion_def]*, !dbg !4716
  %arrayidx70 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld69, i64 0, i64 1, !dbg !4716
  %rt_rtx71 = bitcast %union.rtunion_def* %arrayidx70 to %struct.rtx_def**, !dbg !4716
  %41 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx71, align 8, !dbg !4716
  %42 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8, !dbg !4717
  %call72 = call i32 @rtx_equal_p(%struct.rtx_def* %41, %struct.rtx_def* %42), !dbg !4718
  %tobool73 = icmp ne i32 %call72, 0, !dbg !4718
  br i1 %tobool73, label %if.end80, label %if.then74, !dbg !4719

if.then74:                                        ; preds = %land.lhs.true67
  %43 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4720
  %44 = load %struct.rtx_def*, %struct.rtx_def** %s, align 8, !dbg !4721
  %u75 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %44, i32 0, i32 1, !dbg !4721
  %fld76 = bitcast %union.u* %u75 to [1 x %union.rtunion_def]*, !dbg !4721
  %arrayidx77 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld76, i64 0, i64 1, !dbg !4721
  %rt_rtx78 = bitcast %union.rtunion_def* %arrayidx77 to %struct.rtx_def**, !dbg !4721
  %45 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8, !dbg !4722
  %call79 = call zeroext i8 @validate_change(%struct.rtx_def* %43, %struct.rtx_def** %rt_rtx78, %struct.rtx_def* %45, i8 zeroext 1), !dbg !4723
  br label %if.end80, !dbg !4723

if.end80:                                         ; preds = %if.then74, %land.lhs.true67, %if.then60
  %46 = load %struct.rtx_def*, %struct.rtx_def** %s, align 8, !dbg !4724
  %u81 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %46, i32 0, i32 1, !dbg !4724
  %fld82 = bitcast %union.u* %u81 to [1 x %union.rtunion_def]*, !dbg !4724
  %arrayidx83 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld82, i64 0, i64 0, !dbg !4724
  %rt_rtx84 = bitcast %union.rtunion_def* %arrayidx83 to %struct.rtx_def**, !dbg !4724
  %47 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx84, align 8, !dbg !4724
  %call85 = call %struct.rtx_def* @simplify_rtx(%struct.rtx_def* %47), !dbg !4725
  store %struct.rtx_def* %call85, %struct.rtx_def** %newpat, align 8, !dbg !4726
  %48 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8, !dbg !4727
  %tobool86 = icmp ne %struct.rtx_def* %48, null, !dbg !4727
  br i1 %tobool86, label %land.lhs.true87, label %if.end100, !dbg !4729

land.lhs.true87:                                  ; preds = %if.end80
  %49 = load %struct.rtx_def*, %struct.rtx_def** %s, align 8, !dbg !4730
  %u88 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %49, i32 0, i32 1, !dbg !4730
  %fld89 = bitcast %union.u* %u88 to [1 x %union.rtunion_def]*, !dbg !4730
  %arrayidx90 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld89, i64 0, i64 0, !dbg !4730
  %rt_rtx91 = bitcast %union.rtunion_def* %arrayidx90 to %struct.rtx_def**, !dbg !4730
  %50 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx91, align 8, !dbg !4730
  %51 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8, !dbg !4731
  %call92 = call i32 @rtx_equal_p(%struct.rtx_def* %50, %struct.rtx_def* %51), !dbg !4732
  %tobool93 = icmp ne i32 %call92, 0, !dbg !4732
  br i1 %tobool93, label %if.end100, label %if.then94, !dbg !4733

if.then94:                                        ; preds = %land.lhs.true87
  %52 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !4734
  %53 = load %struct.rtx_def*, %struct.rtx_def** %s, align 8, !dbg !4735
  %u95 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %53, i32 0, i32 1, !dbg !4735
  %fld96 = bitcast %union.u* %u95 to [1 x %union.rtunion_def]*, !dbg !4735
  %arrayidx97 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld96, i64 0, i64 0, !dbg !4735
  %rt_rtx98 = bitcast %union.rtunion_def* %arrayidx97 to %struct.rtx_def**, !dbg !4735
  %54 = load %struct.rtx_def*, %struct.rtx_def** %newpat, align 8, !dbg !4736
  %call99 = call zeroext i8 @validate_change(%struct.rtx_def* %52, %struct.rtx_def** %rt_rtx98, %struct.rtx_def* %54, i8 zeroext 1), !dbg !4737
  br label %if.end100, !dbg !4737

if.end100:                                        ; preds = %if.then94, %land.lhs.true87, %if.end80
  br label %if.end101, !dbg !4738

if.end101:                                        ; preds = %if.end100, %for.body
  br label %for.inc, !dbg !4739

for.inc:                                          ; preds = %if.end101
  %55 = load i32, i32* %i, align 4, !dbg !4740
  %inc = add nsw i32 %55, 1, !dbg !4740
  store i32 %inc, i32* %i, align 4, !dbg !4740
  br label %for.cond, !dbg !4741, !llvm.loop !4742

for.end:                                          ; preds = %for.cond
  br label %if.end102, !dbg !4743

if.end102:                                        ; preds = %for.end, %if.else
  br label %if.end103

if.end103:                                        ; preds = %if.end102, %if.end36
  %call104 = call i32 @num_changes_pending(), !dbg !4744
  %cmp105 = icmp sgt i32 %call104, 0, !dbg !4745
  br i1 %cmp105, label %land.rhs, label %land.end, !dbg !4746

land.rhs:                                         ; preds = %if.end103
  %call106 = call i32 @apply_change_group(), !dbg !4747
  %cmp107 = icmp sgt i32 %call106, 0, !dbg !4748
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end103
  %56 = phi i1 [ false, %if.end103 ], [ %cmp107, %land.rhs ], !dbg !4749
  %land.ext = zext i1 %56 to i32, !dbg !4746
  %conv = trunc i32 %land.ext to i8, !dbg !4750
  ret i8 %conv, !dbg !4751
}

declare dso_local %struct.rtx_def* @simplify_rtx(%struct.rtx_def*) #2

declare dso_local i32 @rtx_equal_p(%struct.rtx_def*, %struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @general_operand(%struct.rtx_def* %op, i32 %mode) #0 !dbg !4752 {
entry:
  %retval = alloca i32, align 4
  %op.addr = alloca %struct.rtx_def*, align 8
  %mode.addr = alloca i32, align 4
  %code = alloca i32, align 4
  %sub = alloca %struct.rtx_def*, align 8
  %y = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %op, %struct.rtx_def** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %op.addr, metadata !4755, metadata !DIExpression()), !dbg !4756
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !4757, metadata !DIExpression()), !dbg !4758
  call void @llvm.dbg.declare(metadata i32* %code, metadata !4759, metadata !DIExpression()), !dbg !4760
  %0 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !4761
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !4761
  %bf.load = load i32, i32* %1, align 8, !dbg !4761
  %bf.clear = and i32 %bf.load, 65535, !dbg !4761
  store i32 %bf.clear, i32* %code, align 4, !dbg !4760
  %2 = load i32, i32* %mode.addr, align 4, !dbg !4762
  %cmp = icmp eq i32 %2, 0, !dbg !4764
  br i1 %cmp, label %if.then, label %if.end, !dbg !4765

if.then:                                          ; preds = %entry
  %3 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !4766
  %4 = bitcast %struct.rtx_def* %3 to i32*, !dbg !4766
  %bf.load1 = load i32, i32* %4, align 8, !dbg !4766
  %bf.lshr = lshr i32 %bf.load1, 16, !dbg !4766
  %bf.clear2 = and i32 %bf.lshr, 255, !dbg !4766
  store i32 %bf.clear2, i32* %mode.addr, align 4, !dbg !4767
  br label %if.end, !dbg !4768

if.end:                                           ; preds = %if.then, %entry
  %5 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !4769
  %6 = bitcast %struct.rtx_def* %5 to i32*, !dbg !4769
  %bf.load3 = load i32, i32* %6, align 8, !dbg !4769
  %bf.lshr4 = lshr i32 %bf.load3, 16, !dbg !4769
  %bf.clear5 = and i32 %bf.lshr4, 255, !dbg !4769
  %cmp6 = icmp eq i32 %bf.clear5, 0, !dbg !4771
  br i1 %cmp6, label %land.lhs.true, label %if.end18, !dbg !4772

land.lhs.true:                                    ; preds = %if.end
  %7 = load i32, i32* %mode.addr, align 4, !dbg !4773
  %cmp7 = icmp ne i32 %7, 0, !dbg !4774
  br i1 %cmp7, label %land.lhs.true8, label %if.end18, !dbg !4775

land.lhs.true8:                                   ; preds = %land.lhs.true
  %8 = load i32, i32* %mode.addr, align 4, !dbg !4776
  %idxprom = zext i32 %8 to i64, !dbg !4776
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !4776
  %9 = load i8, i8* %arrayidx, align 1, !dbg !4776
  %conv = zext i8 %9 to i32, !dbg !4776
  %cmp9 = icmp ne i32 %conv, 2, !dbg !4777
  br i1 %cmp9, label %land.lhs.true11, label %if.end18, !dbg !4778

land.lhs.true11:                                  ; preds = %land.lhs.true8
  %10 = load i32, i32* %mode.addr, align 4, !dbg !4779
  %idxprom12 = zext i32 %10 to i64, !dbg !4779
  %arrayidx13 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom12, !dbg !4779
  %11 = load i8, i8* %arrayidx13, align 1, !dbg !4779
  %conv14 = zext i8 %11 to i32, !dbg !4779
  %cmp15 = icmp ne i32 %conv14, 3, !dbg !4780
  br i1 %cmp15, label %if.then17, label %if.end18, !dbg !4781

if.then17:                                        ; preds = %land.lhs.true11
  store i32 0, i32* %retval, align 4, !dbg !4782
  br label %return, !dbg !4782

if.end18:                                         ; preds = %land.lhs.true11, %land.lhs.true8, %land.lhs.true, %if.end
  %12 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !4783
  %13 = bitcast %struct.rtx_def* %12 to i32*, !dbg !4783
  %bf.load19 = load i32, i32* %13, align 8, !dbg !4783
  %bf.clear20 = and i32 %bf.load19, 65535, !dbg !4783
  %cmp21 = icmp eq i32 %bf.clear20, 30, !dbg !4783
  br i1 %cmp21, label %land.lhs.true23, label %if.end34, !dbg !4785

land.lhs.true23:                                  ; preds = %if.end18
  %14 = load i32, i32* %mode.addr, align 4, !dbg !4786
  %cmp24 = icmp ne i32 %14, 0, !dbg !4787
  br i1 %cmp24, label %land.lhs.true26, label %if.end34, !dbg !4788

land.lhs.true26:                                  ; preds = %land.lhs.true23
  %15 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !4789
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i32 0, i32 1, !dbg !4789
  %hwint = bitcast %union.u* %u to [1 x i64]*, !dbg !4789
  %arrayidx27 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint, i64 0, i64 0, !dbg !4789
  %16 = load i64, i64* %arrayidx27, align 8, !dbg !4789
  %17 = load i32, i32* %mode.addr, align 4, !dbg !4790
  %call = call i64 @trunc_int_for_mode(i64 %16, i32 %17), !dbg !4791
  %18 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !4792
  %u28 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %18, i32 0, i32 1, !dbg !4792
  %hwint29 = bitcast %union.u* %u28 to [1 x i64]*, !dbg !4792
  %arrayidx30 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint29, i64 0, i64 0, !dbg !4792
  %19 = load i64, i64* %arrayidx30, align 8, !dbg !4792
  %cmp31 = icmp ne i64 %call, %19, !dbg !4793
  br i1 %cmp31, label %if.then33, label %if.end34, !dbg !4794

if.then33:                                        ; preds = %land.lhs.true26
  store i32 0, i32* %retval, align 4, !dbg !4795
  br label %return, !dbg !4795

if.end34:                                         ; preds = %land.lhs.true26, %land.lhs.true23, %if.end18
  %20 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !4796
  %21 = bitcast %struct.rtx_def* %20 to i32*, !dbg !4796
  %bf.load35 = load i32, i32* %21, align 8, !dbg !4796
  %bf.clear36 = and i32 %bf.load35, 65535, !dbg !4796
  %idxprom37 = sext i32 %bf.clear36 to i64, !dbg !4796
  %arrayidx38 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom37, !dbg !4796
  %22 = load i32, i32* %arrayidx38, align 4, !dbg !4796
  %cmp39 = icmp eq i32 %22, 9, !dbg !4796
  br i1 %cmp39, label %if.then41, label %if.end63, !dbg !4798

if.then41:                                        ; preds = %if.end34
  %23 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !4799
  %24 = bitcast %struct.rtx_def* %23 to i32*, !dbg !4799
  %bf.load42 = load i32, i32* %24, align 8, !dbg !4799
  %bf.lshr43 = lshr i32 %bf.load42, 16, !dbg !4799
  %bf.clear44 = and i32 %bf.lshr43, 255, !dbg !4799
  %cmp45 = icmp eq i32 %bf.clear44, 0, !dbg !4800
  br i1 %cmp45, label %land.lhs.true55, label %lor.lhs.false, !dbg !4801

lor.lhs.false:                                    ; preds = %if.then41
  %25 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !4802
  %26 = bitcast %struct.rtx_def* %25 to i32*, !dbg !4802
  %bf.load47 = load i32, i32* %26, align 8, !dbg !4802
  %bf.lshr48 = lshr i32 %bf.load47, 16, !dbg !4802
  %bf.clear49 = and i32 %bf.lshr48, 255, !dbg !4802
  %27 = load i32, i32* %mode.addr, align 4, !dbg !4803
  %cmp50 = icmp eq i32 %bf.clear49, %27, !dbg !4804
  br i1 %cmp50, label %land.lhs.true55, label %lor.lhs.false52, !dbg !4805

lor.lhs.false52:                                  ; preds = %lor.lhs.false
  %28 = load i32, i32* %mode.addr, align 4, !dbg !4806
  %cmp53 = icmp eq i32 %28, 0, !dbg !4807
  br i1 %cmp53, label %land.lhs.true55, label %land.end, !dbg !4808

land.lhs.true55:                                  ; preds = %lor.lhs.false52, %lor.lhs.false, %if.then41
  %29 = load i32, i32* @flag_pic, align 4, !dbg !4809
  %tobool = icmp ne i32 %29, 0, !dbg !4809
  br i1 %tobool, label %lor.lhs.false56, label %land.rhs, !dbg !4810

lor.lhs.false56:                                  ; preds = %land.lhs.true55
  %30 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !4811
  %call57 = call zeroext i8 @legitimate_pic_operand_p(%struct.rtx_def* %30), !dbg !4811
  %conv58 = zext i8 %call57 to i32, !dbg !4811
  %tobool59 = icmp ne i32 %conv58, 0, !dbg !4811
  br i1 %tobool59, label %land.rhs, label %land.end, !dbg !4812

land.rhs:                                         ; preds = %lor.lhs.false56, %land.lhs.true55
  %31 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !4813
  %call60 = call zeroext i8 @legitimate_constant_p(%struct.rtx_def* %31), !dbg !4813
  %conv61 = zext i8 %call60 to i32, !dbg !4813
  %tobool62 = icmp ne i32 %conv61, 0, !dbg !4812
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.lhs.false56, %lor.lhs.false52
  %32 = phi i1 [ false, %lor.lhs.false56 ], [ false, %lor.lhs.false52 ], [ %tobool62, %land.rhs ], !dbg !4814
  %land.ext = zext i1 %32 to i32, !dbg !4812
  store i32 %land.ext, i32* %retval, align 4, !dbg !4815
  br label %return, !dbg !4815

if.end63:                                         ; preds = %if.end34
  %33 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !4816
  %34 = bitcast %struct.rtx_def* %33 to i32*, !dbg !4816
  %bf.load64 = load i32, i32* %34, align 8, !dbg !4816
  %bf.lshr65 = lshr i32 %bf.load64, 16, !dbg !4816
  %bf.clear66 = and i32 %bf.lshr65, 255, !dbg !4816
  %35 = load i32, i32* %mode.addr, align 4, !dbg !4818
  %cmp67 = icmp ne i32 %bf.clear66, %35, !dbg !4819
  br i1 %cmp67, label %if.then69, label %if.end70, !dbg !4820

if.then69:                                        ; preds = %if.end63
  store i32 0, i32* %retval, align 4, !dbg !4821
  br label %return, !dbg !4821

if.end70:                                         ; preds = %if.end63
  %36 = load i32, i32* %code, align 4, !dbg !4822
  %cmp71 = icmp eq i32 %36, 39, !dbg !4824
  br i1 %cmp71, label %if.then73, label %if.end150, !dbg !4825

if.then73:                                        ; preds = %if.end70
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %sub, metadata !4826, metadata !DIExpression()), !dbg !4828
  %37 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !4829
  %u74 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %37, i32 0, i32 1, !dbg !4829
  %fld = bitcast %union.u* %u74 to [1 x %union.rtunion_def]*, !dbg !4829
  %arrayidx75 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !4829
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx75 to %struct.rtx_def**, !dbg !4829
  %38 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4829
  store %struct.rtx_def* %38, %struct.rtx_def** %sub, align 8, !dbg !4828
  %39 = load i32, i32* @reload_completed, align 4, !dbg !4830
  %tobool76 = icmp ne i32 %39, 0, !dbg !4830
  br i1 %tobool76, label %if.end97, label %land.lhs.true77, !dbg !4832

land.lhs.true77:                                  ; preds = %if.then73
  %40 = load %struct.rtx_def*, %struct.rtx_def** %sub, align 8, !dbg !4833
  %41 = bitcast %struct.rtx_def* %40 to i32*, !dbg !4833
  %bf.load78 = load i32, i32* %41, align 8, !dbg !4833
  %bf.clear79 = and i32 %bf.load78, 65535, !dbg !4833
  %cmp80 = icmp eq i32 %bf.clear79, 43, !dbg !4833
  br i1 %cmp80, label %land.lhs.true82, label %if.end97, !dbg !4834

land.lhs.true82:                                  ; preds = %land.lhs.true77
  %42 = load i32, i32* %mode.addr, align 4, !dbg !4835
  %idxprom83 = zext i32 %42 to i64, !dbg !4835
  %arrayidx84 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom83, !dbg !4835
  %43 = load i8, i8* %arrayidx84, align 1, !dbg !4835
  %conv85 = zext i8 %43 to i16, !dbg !4835
  %conv86 = zext i16 %conv85 to i32, !dbg !4835
  %44 = load %struct.rtx_def*, %struct.rtx_def** %sub, align 8, !dbg !4836
  %45 = bitcast %struct.rtx_def* %44 to i32*, !dbg !4836
  %bf.load87 = load i32, i32* %45, align 8, !dbg !4836
  %bf.lshr88 = lshr i32 %bf.load87, 16, !dbg !4836
  %bf.clear89 = and i32 %bf.lshr88, 255, !dbg !4836
  %idxprom90 = zext i32 %bf.clear89 to i64, !dbg !4836
  %arrayidx91 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom90, !dbg !4836
  %46 = load i8, i8* %arrayidx91, align 1, !dbg !4836
  %conv92 = zext i8 %46 to i16, !dbg !4836
  %conv93 = zext i16 %conv92 to i32, !dbg !4836
  %cmp94 = icmp sgt i32 %conv86, %conv93, !dbg !4837
  br i1 %cmp94, label %if.then96, label %if.end97, !dbg !4838

if.then96:                                        ; preds = %land.lhs.true82
  store i32 0, i32* %retval, align 4, !dbg !4839
  br label %return, !dbg !4839

if.end97:                                         ; preds = %land.lhs.true82, %land.lhs.true77, %if.then73
  %47 = load i32, i32* @reload_completed, align 4, !dbg !4840
  %tobool98 = icmp ne i32 %47, 0, !dbg !4840
  br i1 %tobool98, label %if.end111, label %land.lhs.true99, !dbg !4842

land.lhs.true99:                                  ; preds = %if.end97
  %48 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !4843
  %u100 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %48, i32 0, i32 1, !dbg !4843
  %fld101 = bitcast %union.u* %u100 to [1 x %union.rtunion_def]*, !dbg !4843
  %arrayidx102 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld101, i64 0, i64 1, !dbg !4843
  %rt_uint = bitcast %union.rtunion_def* %arrayidx102 to i32*, !dbg !4843
  %49 = load i32, i32* %rt_uint, align 8, !dbg !4843
  %cmp103 = icmp ne i32 %49, 0, !dbg !4844
  br i1 %cmp103, label %land.lhs.true105, label %if.end111, !dbg !4845

land.lhs.true105:                                 ; preds = %land.lhs.true99
  %50 = load %struct.rtx_def*, %struct.rtx_def** %sub, align 8, !dbg !4846
  %51 = bitcast %struct.rtx_def* %50 to i32*, !dbg !4846
  %bf.load106 = load i32, i32* %51, align 8, !dbg !4846
  %bf.clear107 = and i32 %bf.load106, 65535, !dbg !4846
  %cmp108 = icmp eq i32 %bf.clear107, 43, !dbg !4846
  br i1 %cmp108, label %if.then110, label %if.end111, !dbg !4847

if.then110:                                       ; preds = %land.lhs.true105
  store i32 0, i32* %retval, align 4, !dbg !4848
  br label %return, !dbg !4848

if.end111:                                        ; preds = %land.lhs.true105, %land.lhs.true99, %if.end97
  %52 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !4849
  %53 = bitcast %struct.rtx_def* %52 to i32*, !dbg !4849
  %bf.load112 = load i32, i32* %53, align 8, !dbg !4849
  %bf.lshr113 = lshr i32 %bf.load112, 16, !dbg !4849
  %bf.clear114 = and i32 %bf.lshr113, 255, !dbg !4849
  %idxprom115 = zext i32 %bf.clear114 to i64, !dbg !4849
  %arrayidx116 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom115, !dbg !4849
  %54 = load i8, i8* %arrayidx116, align 1, !dbg !4849
  %conv117 = zext i8 %54 to i32, !dbg !4849
  %cmp118 = icmp eq i32 %conv117, 8, !dbg !4849
  br i1 %cmp118, label %land.lhs.true129, label %lor.lhs.false120, !dbg !4849

lor.lhs.false120:                                 ; preds = %if.end111
  %55 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !4849
  %56 = bitcast %struct.rtx_def* %55 to i32*, !dbg !4849
  %bf.load121 = load i32, i32* %56, align 8, !dbg !4849
  %bf.lshr122 = lshr i32 %bf.load121, 16, !dbg !4849
  %bf.clear123 = and i32 %bf.lshr122, 255, !dbg !4849
  %idxprom124 = zext i32 %bf.clear123 to i64, !dbg !4849
  %arrayidx125 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom124, !dbg !4849
  %57 = load i8, i8* %arrayidx125, align 1, !dbg !4849
  %conv126 = zext i8 %57 to i32, !dbg !4849
  %cmp127 = icmp eq i32 %conv126, 9, !dbg !4849
  br i1 %cmp127, label %land.lhs.true129, label %if.end147, !dbg !4851

land.lhs.true129:                                 ; preds = %lor.lhs.false120, %if.end111
  %58 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !4852
  %59 = bitcast %struct.rtx_def* %58 to i32*, !dbg !4852
  %bf.load130 = load i32, i32* %59, align 8, !dbg !4852
  %bf.lshr131 = lshr i32 %bf.load130, 16, !dbg !4852
  %bf.clear132 = and i32 %bf.lshr131, 255, !dbg !4852
  %idxprom133 = zext i32 %bf.clear132 to i64, !dbg !4852
  %arrayidx134 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom133, !dbg !4852
  %60 = load i8, i8* %arrayidx134, align 1, !dbg !4852
  %conv135 = zext i8 %60 to i16, !dbg !4852
  %conv136 = zext i16 %conv135 to i32, !dbg !4852
  %61 = load %struct.rtx_def*, %struct.rtx_def** %sub, align 8, !dbg !4853
  %62 = bitcast %struct.rtx_def* %61 to i32*, !dbg !4853
  %bf.load137 = load i32, i32* %62, align 8, !dbg !4853
  %bf.lshr138 = lshr i32 %bf.load137, 16, !dbg !4853
  %bf.clear139 = and i32 %bf.lshr138, 255, !dbg !4853
  %idxprom140 = zext i32 %bf.clear139 to i64, !dbg !4853
  %arrayidx141 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom140, !dbg !4853
  %63 = load i8, i8* %arrayidx141, align 1, !dbg !4853
  %conv142 = zext i8 %63 to i16, !dbg !4853
  %conv143 = zext i16 %conv142 to i32, !dbg !4853
  %cmp144 = icmp sgt i32 %conv136, %conv143, !dbg !4854
  br i1 %cmp144, label %if.then146, label %if.end147, !dbg !4855

if.then146:                                       ; preds = %land.lhs.true129
  store i32 0, i32* %retval, align 4, !dbg !4856
  br label %return, !dbg !4856

if.end147:                                        ; preds = %land.lhs.true129, %lor.lhs.false120
  %64 = load %struct.rtx_def*, %struct.rtx_def** %sub, align 8, !dbg !4857
  store %struct.rtx_def* %64, %struct.rtx_def** %op.addr, align 8, !dbg !4858
  %65 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !4859
  %66 = bitcast %struct.rtx_def* %65 to i32*, !dbg !4859
  %bf.load148 = load i32, i32* %66, align 8, !dbg !4859
  %bf.clear149 = and i32 %bf.load148, 65535, !dbg !4859
  store i32 %bf.clear149, i32* %code, align 4, !dbg !4860
  br label %if.end150, !dbg !4861

if.end150:                                        ; preds = %if.end147, %if.end70
  %67 = load i32, i32* %code, align 4, !dbg !4862
  %cmp151 = icmp eq i32 %67, 37, !dbg !4864
  br i1 %cmp151, label %if.then153, label %if.end162, !dbg !4865

if.then153:                                       ; preds = %if.end150
  %68 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !4866
  %call154 = call i32 @rhs_regno(%struct.rtx_def* %68), !dbg !4866
  %cmp155 = icmp uge i32 %call154, 53, !dbg !4867
  br i1 %cmp155, label %lor.end, label %lor.rhs, !dbg !4868

lor.rhs:                                          ; preds = %if.then153
  %69 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !4869
  %call157 = call i32 @rhs_regno(%struct.rtx_def* %69), !dbg !4869
  %idxprom158 = zext i32 %call157 to i64, !dbg !4869
  %arrayidx159 = getelementptr inbounds [53 x i32], [53 x i32]* @regclass_map, i64 0, i64 %idxprom158, !dbg !4869
  %70 = load i32, i32* %arrayidx159, align 4, !dbg !4869
  %cmp160 = icmp ne i32 %70, 0, !dbg !4870
  br label %lor.end, !dbg !4868

lor.end:                                          ; preds = %lor.rhs, %if.then153
  %71 = phi i1 [ true, %if.then153 ], [ %cmp160, %lor.rhs ]
  %lor.ext = zext i1 %71 to i32, !dbg !4868
  store i32 %lor.ext, i32* %retval, align 4, !dbg !4871
  br label %return, !dbg !4871

if.end162:                                        ; preds = %if.end150
  %72 = load i32, i32* %code, align 4, !dbg !4872
  %cmp163 = icmp eq i32 %72, 43, !dbg !4874
  br i1 %cmp163, label %if.then165, label %if.end196, !dbg !4875

if.then165:                                       ; preds = %if.end162
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %y, metadata !4876, metadata !DIExpression()), !dbg !4878
  %73 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !4879
  %u166 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %73, i32 0, i32 1, !dbg !4879
  %fld167 = bitcast %union.u* %u166 to [1 x %union.rtunion_def]*, !dbg !4879
  %arrayidx168 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld167, i64 0, i64 0, !dbg !4879
  %rt_rtx169 = bitcast %union.rtunion_def* %arrayidx168 to %struct.rtx_def**, !dbg !4879
  %74 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx169, align 8, !dbg !4879
  store %struct.rtx_def* %74, %struct.rtx_def** %y, align 8, !dbg !4878
  %75 = load i32, i32* @volatile_ok, align 4, !dbg !4880
  %tobool170 = icmp ne i32 %75, 0, !dbg !4880
  br i1 %tobool170, label %if.end177, label %land.lhs.true171, !dbg !4882

land.lhs.true171:                                 ; preds = %if.then165
  %76 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !4883
  %77 = bitcast %struct.rtx_def* %76 to i32*, !dbg !4883
  %bf.load172 = load i32, i32* %77, align 8, !dbg !4883
  %bf.lshr173 = lshr i32 %bf.load172, 27, !dbg !4883
  %bf.clear174 = and i32 %bf.lshr173, 1, !dbg !4883
  %tobool175 = icmp ne i32 %bf.clear174, 0, !dbg !4883
  br i1 %tobool175, label %if.then176, label %if.end177, !dbg !4884

if.then176:                                       ; preds = %land.lhs.true171
  store i32 0, i32* %retval, align 4, !dbg !4885
  br label %return, !dbg !4885

if.end177:                                        ; preds = %land.lhs.true171, %if.then165
  %78 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !4886
  %79 = bitcast %struct.rtx_def* %78 to i32*, !dbg !4886
  %bf.load178 = load i32, i32* %79, align 8, !dbg !4886
  %bf.lshr179 = lshr i32 %bf.load178, 16, !dbg !4886
  %bf.clear180 = and i32 %bf.lshr179, 255, !dbg !4886
  %80 = load %struct.rtx_def*, %struct.rtx_def** %y, align 8, !dbg !4888
  %81 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !4889
  %u181 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %81, i32 0, i32 1, !dbg !4889
  %fld182 = bitcast %union.u* %u181 to [1 x %union.rtunion_def]*, !dbg !4889
  %arrayidx183 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld182, i64 0, i64 1, !dbg !4889
  %rt_mem = bitcast %union.rtunion_def* %arrayidx183 to %struct.mem_attrs**, !dbg !4889
  %82 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !4889
  %cmp184 = icmp eq %struct.mem_attrs* %82, null, !dbg !4889
  br i1 %cmp184, label %cond.true, label %cond.false, !dbg !4889

cond.true:                                        ; preds = %if.end177
  br label %cond.end, !dbg !4889

cond.false:                                       ; preds = %if.end177
  %83 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !4889
  %u186 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %83, i32 0, i32 1, !dbg !4889
  %fld187 = bitcast %union.u* %u186 to [1 x %union.rtunion_def]*, !dbg !4889
  %arrayidx188 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld187, i64 0, i64 1, !dbg !4889
  %rt_mem189 = bitcast %union.rtunion_def* %arrayidx188 to %struct.mem_attrs**, !dbg !4889
  %84 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem189, align 8, !dbg !4889
  %addrspace = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %84, i32 0, i32 5, !dbg !4889
  %85 = load i8, i8* %addrspace, align 8, !dbg !4889
  %conv190 = zext i8 %85 to i32, !dbg !4889
  br label %cond.end, !dbg !4889

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %conv190, %cond.false ], !dbg !4889
  %conv191 = trunc i32 %cond to i8, !dbg !4889
  %call192 = call i32 @memory_address_addr_space_p(i32 %bf.clear180, %struct.rtx_def* %80, i8 zeroext %conv191), !dbg !4890
  %tobool193 = icmp ne i32 %call192, 0, !dbg !4890
  br i1 %tobool193, label %if.then194, label %if.end195, !dbg !4891

if.then194:                                       ; preds = %cond.end
  store i32 1, i32* %retval, align 4, !dbg !4892
  br label %return, !dbg !4892

if.end195:                                        ; preds = %cond.end
  br label %if.end196, !dbg !4893

if.end196:                                        ; preds = %if.end195, %if.end162
  store i32 0, i32* %retval, align 4, !dbg !4894
  br label %return, !dbg !4894

return:                                           ; preds = %if.end196, %if.then194, %if.then176, %lor.end, %if.then146, %if.then110, %if.then96, %if.then69, %land.end, %if.then33, %if.then17
  %86 = load i32, i32* %retval, align 4, !dbg !4895
  ret i32 %86, !dbg !4895
}

declare dso_local i64 @trunc_int_for_mode(i64, i32) #2

declare dso_local zeroext i8 @legitimate_pic_operand_p(%struct.rtx_def*) #2

declare dso_local zeroext i8 @legitimate_constant_p(%struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @rhs_regno(%struct.rtx_def* %x) #0 !dbg !4896 {
entry:
  %x.addr = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %x, %struct.rtx_def** %x.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x.addr, metadata !4899, metadata !DIExpression()), !dbg !4900
  %0 = load %struct.rtx_def*, %struct.rtx_def** %x.addr, align 8, !dbg !4901
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i32 0, i32 1, !dbg !4901
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !4901
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !4901
  %rt_uint = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !4901
  %1 = load i32, i32* %rt_uint, align 8, !dbg !4901
  ret i32 %1, !dbg !4902
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @address_operand(%struct.rtx_def* %op, i32 %mode) #0 !dbg !4903 {
entry:
  %op.addr = alloca %struct.rtx_def*, align 8
  %mode.addr = alloca i32, align 4
  store %struct.rtx_def* %op, %struct.rtx_def** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %op.addr, metadata !4904, metadata !DIExpression()), !dbg !4905
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !4906, metadata !DIExpression()), !dbg !4907
  %0 = load i32, i32* %mode.addr, align 4, !dbg !4908
  %1 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !4908
  %call = call i32 @memory_address_addr_space_p(i32 %0, %struct.rtx_def* %1, i8 zeroext 0), !dbg !4908
  ret i32 %call, !dbg !4909
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @register_operand(%struct.rtx_def* %op, i32 %mode) #0 !dbg !4910 {
entry:
  %retval = alloca i32, align 4
  %op.addr = alloca %struct.rtx_def*, align 8
  %mode.addr = alloca i32, align 4
  %sub = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %op, %struct.rtx_def** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %op.addr, metadata !4911, metadata !DIExpression()), !dbg !4912
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !4913, metadata !DIExpression()), !dbg !4914
  %0 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !4915
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !4915
  %bf.load = load i32, i32* %1, align 8, !dbg !4915
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !4915
  %bf.clear = and i32 %bf.lshr, 255, !dbg !4915
  %2 = load i32, i32* %mode.addr, align 4, !dbg !4917
  %cmp = icmp ne i32 %bf.clear, %2, !dbg !4918
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !4919

land.lhs.true:                                    ; preds = %entry
  %3 = load i32, i32* %mode.addr, align 4, !dbg !4920
  %cmp1 = icmp ne i32 %3, 0, !dbg !4921
  br i1 %cmp1, label %if.then, label %if.end, !dbg !4922

if.then:                                          ; preds = %land.lhs.true
  store i32 0, i32* %retval, align 4, !dbg !4923
  br label %return, !dbg !4923

if.end:                                           ; preds = %land.lhs.true, %entry
  %4 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !4924
  %5 = bitcast %struct.rtx_def* %4 to i32*, !dbg !4924
  %bf.load2 = load i32, i32* %5, align 8, !dbg !4924
  %bf.clear3 = and i32 %bf.load2, 65535, !dbg !4924
  %cmp4 = icmp eq i32 %bf.clear3, 39, !dbg !4926
  br i1 %cmp4, label %if.then5, label %if.end81, !dbg !4927

if.then5:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %sub, metadata !4928, metadata !DIExpression()), !dbg !4930
  %6 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !4931
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i32 0, i32 1, !dbg !4931
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !4931
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !4931
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !4931
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !4931
  store %struct.rtx_def* %7, %struct.rtx_def** %sub, align 8, !dbg !4930
  %8 = load i32, i32* @reload_completed, align 4, !dbg !4932
  %tobool = icmp ne i32 %8, 0, !dbg !4932
  br i1 %tobool, label %if.end11, label %land.lhs.true6, !dbg !4934

land.lhs.true6:                                   ; preds = %if.then5
  %9 = load %struct.rtx_def*, %struct.rtx_def** %sub, align 8, !dbg !4935
  %10 = bitcast %struct.rtx_def* %9 to i32*, !dbg !4935
  %bf.load7 = load i32, i32* %10, align 8, !dbg !4935
  %bf.clear8 = and i32 %bf.load7, 65535, !dbg !4935
  %cmp9 = icmp eq i32 %bf.clear8, 43, !dbg !4935
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !4936

if.then10:                                        ; preds = %land.lhs.true6
  %11 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !4937
  %12 = load i32, i32* %mode.addr, align 4, !dbg !4938
  %call = call i32 @general_operand(%struct.rtx_def* %11, i32 %12), !dbg !4939
  store i32 %call, i32* %retval, align 4, !dbg !4940
  br label %return, !dbg !4940

if.end11:                                         ; preds = %land.lhs.true6, %if.then5
  %13 = load %struct.rtx_def*, %struct.rtx_def** %sub, align 8, !dbg !4941
  %14 = bitcast %struct.rtx_def* %13 to i32*, !dbg !4941
  %bf.load12 = load i32, i32* %14, align 8, !dbg !4941
  %bf.clear13 = and i32 %bf.load12, 65535, !dbg !4941
  %cmp14 = icmp eq i32 %bf.clear13, 37, !dbg !4941
  br i1 %cmp14, label %land.lhs.true15, label %if.end45, !dbg !4943

land.lhs.true15:                                  ; preds = %if.end11
  %15 = load %struct.rtx_def*, %struct.rtx_def** %sub, align 8, !dbg !4944
  %call16 = call i32 @rhs_regno(%struct.rtx_def* %15), !dbg !4944
  %cmp17 = icmp ult i32 %call16, 53, !dbg !4945
  br i1 %cmp17, label %land.lhs.true18, label %if.end45, !dbg !4946

land.lhs.true18:                                  ; preds = %land.lhs.true15
  %16 = load %struct.rtx_def*, %struct.rtx_def** %sub, align 8, !dbg !4947
  %17 = bitcast %struct.rtx_def* %16 to i32*, !dbg !4947
  %bf.load19 = load i32, i32* %17, align 8, !dbg !4947
  %bf.lshr20 = lshr i32 %bf.load19, 16, !dbg !4947
  %bf.clear21 = and i32 %bf.lshr20, 255, !dbg !4947
  %18 = load i32, i32* %mode.addr, align 4, !dbg !4947
  %19 = load %struct.rtx_def*, %struct.rtx_def** %sub, align 8, !dbg !4947
  %call22 = call i32 @rhs_regno(%struct.rtx_def* %19), !dbg !4947
  %idxprom = zext i32 %call22 to i64, !dbg !4947
  %arrayidx23 = getelementptr inbounds [53 x i32], [53 x i32]* @regclass_map, i64 0, i64 %idxprom, !dbg !4947
  %20 = load i32, i32* %arrayidx23, align 4, !dbg !4947
  %call24 = call zeroext i8 @ix86_cannot_change_mode_class(i32 %bf.clear21, i32 %18, i32 %20), !dbg !4947
  %conv = zext i8 %call24 to i32, !dbg !4947
  %tobool25 = icmp ne i32 %conv, 0, !dbg !4947
  br i1 %tobool25, label %land.lhs.true26, label %if.end45, !dbg !4948

land.lhs.true26:                                  ; preds = %land.lhs.true18
  %21 = load %struct.rtx_def*, %struct.rtx_def** %sub, align 8, !dbg !4949
  %22 = bitcast %struct.rtx_def* %21 to i32*, !dbg !4949
  %bf.load27 = load i32, i32* %22, align 8, !dbg !4949
  %bf.lshr28 = lshr i32 %bf.load27, 16, !dbg !4949
  %bf.clear29 = and i32 %bf.lshr28, 255, !dbg !4949
  %idxprom30 = zext i32 %bf.clear29 to i64, !dbg !4949
  %arrayidx31 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom30, !dbg !4949
  %23 = load i8, i8* %arrayidx31, align 1, !dbg !4949
  %conv32 = zext i8 %23 to i32, !dbg !4949
  %cmp33 = icmp ne i32 %conv32, 10, !dbg !4950
  br i1 %cmp33, label %land.lhs.true35, label %if.end45, !dbg !4951

land.lhs.true35:                                  ; preds = %land.lhs.true26
  %24 = load %struct.rtx_def*, %struct.rtx_def** %sub, align 8, !dbg !4952
  %25 = bitcast %struct.rtx_def* %24 to i32*, !dbg !4952
  %bf.load36 = load i32, i32* %25, align 8, !dbg !4952
  %bf.lshr37 = lshr i32 %bf.load36, 16, !dbg !4952
  %bf.clear38 = and i32 %bf.lshr37, 255, !dbg !4952
  %idxprom39 = zext i32 %bf.clear38 to i64, !dbg !4952
  %arrayidx40 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom39, !dbg !4952
  %26 = load i8, i8* %arrayidx40, align 1, !dbg !4952
  %conv41 = zext i8 %26 to i32, !dbg !4952
  %cmp42 = icmp ne i32 %conv41, 11, !dbg !4953
  br i1 %cmp42, label %if.then44, label %if.end45, !dbg !4954

if.then44:                                        ; preds = %land.lhs.true35
  store i32 0, i32* %retval, align 4, !dbg !4955
  br label %return, !dbg !4955

if.end45:                                         ; preds = %land.lhs.true35, %land.lhs.true26, %land.lhs.true18, %land.lhs.true15, %if.end11
  %27 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !4956
  %28 = bitcast %struct.rtx_def* %27 to i32*, !dbg !4956
  %bf.load46 = load i32, i32* %28, align 8, !dbg !4956
  %bf.lshr47 = lshr i32 %bf.load46, 16, !dbg !4956
  %bf.clear48 = and i32 %bf.lshr47, 255, !dbg !4956
  %idxprom49 = zext i32 %bf.clear48 to i64, !dbg !4956
  %arrayidx50 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom49, !dbg !4956
  %29 = load i8, i8* %arrayidx50, align 1, !dbg !4956
  %conv51 = zext i8 %29 to i32, !dbg !4956
  %cmp52 = icmp eq i32 %conv51, 8, !dbg !4956
  br i1 %cmp52, label %land.lhs.true62, label %lor.lhs.false, !dbg !4956

lor.lhs.false:                                    ; preds = %if.end45
  %30 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !4956
  %31 = bitcast %struct.rtx_def* %30 to i32*, !dbg !4956
  %bf.load54 = load i32, i32* %31, align 8, !dbg !4956
  %bf.lshr55 = lshr i32 %bf.load54, 16, !dbg !4956
  %bf.clear56 = and i32 %bf.lshr55, 255, !dbg !4956
  %idxprom57 = zext i32 %bf.clear56 to i64, !dbg !4956
  %arrayidx58 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom57, !dbg !4956
  %32 = load i8, i8* %arrayidx58, align 1, !dbg !4956
  %conv59 = zext i8 %32 to i32, !dbg !4956
  %cmp60 = icmp eq i32 %conv59, 9, !dbg !4956
  br i1 %cmp60, label %land.lhs.true62, label %if.end80, !dbg !4958

land.lhs.true62:                                  ; preds = %lor.lhs.false, %if.end45
  %33 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !4959
  %34 = bitcast %struct.rtx_def* %33 to i32*, !dbg !4959
  %bf.load63 = load i32, i32* %34, align 8, !dbg !4959
  %bf.lshr64 = lshr i32 %bf.load63, 16, !dbg !4959
  %bf.clear65 = and i32 %bf.lshr64, 255, !dbg !4959
  %idxprom66 = zext i32 %bf.clear65 to i64, !dbg !4959
  %arrayidx67 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom66, !dbg !4959
  %35 = load i8, i8* %arrayidx67, align 1, !dbg !4959
  %conv68 = zext i8 %35 to i16, !dbg !4959
  %conv69 = zext i16 %conv68 to i32, !dbg !4959
  %36 = load %struct.rtx_def*, %struct.rtx_def** %sub, align 8, !dbg !4960
  %37 = bitcast %struct.rtx_def* %36 to i32*, !dbg !4960
  %bf.load70 = load i32, i32* %37, align 8, !dbg !4960
  %bf.lshr71 = lshr i32 %bf.load70, 16, !dbg !4960
  %bf.clear72 = and i32 %bf.lshr71, 255, !dbg !4960
  %idxprom73 = zext i32 %bf.clear72 to i64, !dbg !4960
  %arrayidx74 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom73, !dbg !4960
  %38 = load i8, i8* %arrayidx74, align 1, !dbg !4960
  %conv75 = zext i8 %38 to i16, !dbg !4960
  %conv76 = zext i16 %conv75 to i32, !dbg !4960
  %cmp77 = icmp sgt i32 %conv69, %conv76, !dbg !4961
  br i1 %cmp77, label %if.then79, label %if.end80, !dbg !4962

if.then79:                                        ; preds = %land.lhs.true62
  store i32 0, i32* %retval, align 4, !dbg !4963
  br label %return, !dbg !4963

if.end80:                                         ; preds = %land.lhs.true62, %lor.lhs.false
  %39 = load %struct.rtx_def*, %struct.rtx_def** %sub, align 8, !dbg !4964
  store %struct.rtx_def* %39, %struct.rtx_def** %op.addr, align 8, !dbg !4965
  br label %if.end81, !dbg !4966

if.end81:                                         ; preds = %if.end80, %if.end
  %40 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !4967
  %41 = bitcast %struct.rtx_def* %40 to i32*, !dbg !4967
  %bf.load82 = load i32, i32* %41, align 8, !dbg !4967
  %bf.clear83 = and i32 %bf.load82, 65535, !dbg !4967
  %cmp84 = icmp eq i32 %bf.clear83, 37, !dbg !4967
  br i1 %cmp84, label %land.rhs, label %land.end, !dbg !4968

land.rhs:                                         ; preds = %if.end81
  %42 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !4969
  %call86 = call i32 @rhs_regno(%struct.rtx_def* %42), !dbg !4969
  %cmp87 = icmp uge i32 %call86, 53, !dbg !4970
  br i1 %cmp87, label %lor.end, label %lor.rhs, !dbg !4971

lor.rhs:                                          ; preds = %land.rhs
  %43 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !4972
  %call89 = call i32 @rhs_regno(%struct.rtx_def* %43), !dbg !4972
  %idxprom90 = zext i32 %call89 to i64, !dbg !4972
  %arrayidx91 = getelementptr inbounds [53 x i32], [53 x i32]* @regclass_map, i64 0, i64 %idxprom90, !dbg !4972
  %44 = load i32, i32* %arrayidx91, align 4, !dbg !4972
  %cmp92 = icmp ne i32 %44, 0, !dbg !4973
  br label %lor.end, !dbg !4971

lor.end:                                          ; preds = %lor.rhs, %land.rhs
  %45 = phi i1 [ true, %land.rhs ], [ %cmp92, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %if.end81
  %46 = phi i1 [ false, %if.end81 ], [ %45, %lor.end ], !dbg !4974
  %land.ext = zext i1 %46 to i32, !dbg !4968
  store i32 %land.ext, i32* %retval, align 4, !dbg !4975
  br label %return, !dbg !4975

return:                                           ; preds = %land.end, %if.then79, %if.then44, %if.then10, %if.then
  %47 = load i32, i32* %retval, align 4, !dbg !4976
  ret i32 %47, !dbg !4976
}

declare dso_local zeroext i8 @ix86_cannot_change_mode_class(i32, i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @pmode_register_operand(%struct.rtx_def* %op, i32 %mode) #0 !dbg !4977 {
entry:
  %op.addr = alloca %struct.rtx_def*, align 8
  %mode.addr = alloca i32, align 4
  store %struct.rtx_def* %op, %struct.rtx_def** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %op.addr, metadata !4978, metadata !DIExpression()), !dbg !4979
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !4980, metadata !DIExpression()), !dbg !4981
  %0 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !4982
  %call = call i32 @register_operand(%struct.rtx_def* %0, i32 16), !dbg !4983
  ret i32 %call, !dbg !4984
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @scratch_operand(%struct.rtx_def* %op, i32 %mode) #0 !dbg !4985 {
entry:
  %retval = alloca i32, align 4
  %op.addr = alloca %struct.rtx_def*, align 8
  %mode.addr = alloca i32, align 4
  store %struct.rtx_def* %op, %struct.rtx_def** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %op.addr, metadata !4986, metadata !DIExpression()), !dbg !4987
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !4988, metadata !DIExpression()), !dbg !4989
  %0 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !4990
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !4990
  %bf.load = load i32, i32* %1, align 8, !dbg !4990
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !4990
  %bf.clear = and i32 %bf.lshr, 255, !dbg !4990
  %2 = load i32, i32* %mode.addr, align 4, !dbg !4992
  %cmp = icmp ne i32 %bf.clear, %2, !dbg !4993
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !4994

land.lhs.true:                                    ; preds = %entry
  %3 = load i32, i32* %mode.addr, align 4, !dbg !4995
  %cmp1 = icmp ne i32 %3, 0, !dbg !4996
  br i1 %cmp1, label %if.then, label %if.end, !dbg !4997

if.then:                                          ; preds = %land.lhs.true
  store i32 0, i32* %retval, align 4, !dbg !4998
  br label %return, !dbg !4998

if.end:                                           ; preds = %land.lhs.true, %entry
  %4 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !4999
  %5 = bitcast %struct.rtx_def* %4 to i32*, !dbg !4999
  %bf.load2 = load i32, i32* %5, align 8, !dbg !4999
  %bf.clear3 = and i32 %bf.load2, 65535, !dbg !4999
  %cmp4 = icmp eq i32 %bf.clear3, 38, !dbg !5000
  br i1 %cmp4, label %lor.end, label %lor.rhs, !dbg !5001

lor.rhs:                                          ; preds = %if.end
  %6 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5002
  %7 = bitcast %struct.rtx_def* %6 to i32*, !dbg !5002
  %bf.load5 = load i32, i32* %7, align 8, !dbg !5002
  %bf.clear6 = and i32 %bf.load5, 65535, !dbg !5002
  %cmp7 = icmp eq i32 %bf.clear6, 37, !dbg !5002
  br i1 %cmp7, label %land.rhs, label %land.end, !dbg !5003

land.rhs:                                         ; preds = %lor.rhs
  %8 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5004
  %call = call i32 @rhs_regno(%struct.rtx_def* %8), !dbg !5004
  %cmp8 = icmp ult i32 %call, 53, !dbg !5005
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.rhs
  %9 = phi i1 [ false, %lor.rhs ], [ %cmp8, %land.rhs ], !dbg !5006
  br label %lor.end, !dbg !5001

lor.end:                                          ; preds = %land.end, %if.end
  %10 = phi i1 [ true, %if.end ], [ %9, %land.end ]
  %lor.ext = zext i1 %10 to i32, !dbg !5001
  store i32 %lor.ext, i32* %retval, align 4, !dbg !5007
  br label %return, !dbg !5007

return:                                           ; preds = %lor.end, %if.then
  %11 = load i32, i32* %retval, align 4, !dbg !5008
  ret i32 %11, !dbg !5008
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @immediate_operand(%struct.rtx_def* %op, i32 %mode) #0 !dbg !5009 {
entry:
  %retval = alloca i32, align 4
  %op.addr = alloca %struct.rtx_def*, align 8
  %mode.addr = alloca i32, align 4
  store %struct.rtx_def* %op, %struct.rtx_def** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %op.addr, metadata !5010, metadata !DIExpression()), !dbg !5011
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !5012, metadata !DIExpression()), !dbg !5013
  %0 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5014
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !5014
  %bf.load = load i32, i32* %1, align 8, !dbg !5014
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !5014
  %bf.clear = and i32 %bf.lshr, 255, !dbg !5014
  %cmp = icmp eq i32 %bf.clear, 0, !dbg !5016
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !5017

land.lhs.true:                                    ; preds = %entry
  %2 = load i32, i32* %mode.addr, align 4, !dbg !5018
  %cmp1 = icmp ne i32 %2, 0, !dbg !5019
  br i1 %cmp1, label %land.lhs.true2, label %if.end, !dbg !5020

land.lhs.true2:                                   ; preds = %land.lhs.true
  %3 = load i32, i32* %mode.addr, align 4, !dbg !5021
  %idxprom = zext i32 %3 to i64, !dbg !5021
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !5021
  %4 = load i8, i8* %arrayidx, align 1, !dbg !5021
  %conv = zext i8 %4 to i32, !dbg !5021
  %cmp3 = icmp ne i32 %conv, 2, !dbg !5022
  br i1 %cmp3, label %land.lhs.true5, label %if.end, !dbg !5023

land.lhs.true5:                                   ; preds = %land.lhs.true2
  %5 = load i32, i32* %mode.addr, align 4, !dbg !5024
  %idxprom6 = zext i32 %5 to i64, !dbg !5024
  %arrayidx7 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom6, !dbg !5024
  %6 = load i8, i8* %arrayidx7, align 1, !dbg !5024
  %conv8 = zext i8 %6 to i32, !dbg !5024
  %cmp9 = icmp ne i32 %conv8, 3, !dbg !5025
  br i1 %cmp9, label %if.then, label %if.end, !dbg !5026

if.then:                                          ; preds = %land.lhs.true5
  store i32 0, i32* %retval, align 4, !dbg !5027
  br label %return, !dbg !5027

if.end:                                           ; preds = %land.lhs.true5, %land.lhs.true2, %land.lhs.true, %entry
  %7 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5028
  %8 = bitcast %struct.rtx_def* %7 to i32*, !dbg !5028
  %bf.load11 = load i32, i32* %8, align 8, !dbg !5028
  %bf.clear12 = and i32 %bf.load11, 65535, !dbg !5028
  %cmp13 = icmp eq i32 %bf.clear12, 30, !dbg !5028
  br i1 %cmp13, label %land.lhs.true15, label %if.end26, !dbg !5030

land.lhs.true15:                                  ; preds = %if.end
  %9 = load i32, i32* %mode.addr, align 4, !dbg !5031
  %cmp16 = icmp ne i32 %9, 0, !dbg !5032
  br i1 %cmp16, label %land.lhs.true18, label %if.end26, !dbg !5033

land.lhs.true18:                                  ; preds = %land.lhs.true15
  %10 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5034
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i32 0, i32 1, !dbg !5034
  %hwint = bitcast %union.u* %u to [1 x i64]*, !dbg !5034
  %arrayidx19 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint, i64 0, i64 0, !dbg !5034
  %11 = load i64, i64* %arrayidx19, align 8, !dbg !5034
  %12 = load i32, i32* %mode.addr, align 4, !dbg !5035
  %call = call i64 @trunc_int_for_mode(i64 %11, i32 %12), !dbg !5036
  %13 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5037
  %u20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %13, i32 0, i32 1, !dbg !5037
  %hwint21 = bitcast %union.u* %u20 to [1 x i64]*, !dbg !5037
  %arrayidx22 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint21, i64 0, i64 0, !dbg !5037
  %14 = load i64, i64* %arrayidx22, align 8, !dbg !5037
  %cmp23 = icmp ne i64 %call, %14, !dbg !5038
  br i1 %cmp23, label %if.then25, label %if.end26, !dbg !5039

if.then25:                                        ; preds = %land.lhs.true18
  store i32 0, i32* %retval, align 4, !dbg !5040
  br label %return, !dbg !5040

if.end26:                                         ; preds = %land.lhs.true18, %land.lhs.true15, %if.end
  %15 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5041
  %16 = bitcast %struct.rtx_def* %15 to i32*, !dbg !5041
  %bf.load27 = load i32, i32* %16, align 8, !dbg !5041
  %bf.clear28 = and i32 %bf.load27, 65535, !dbg !5041
  %idxprom29 = sext i32 %bf.clear28 to i64, !dbg !5041
  %arrayidx30 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom29, !dbg !5041
  %17 = load i32, i32* %arrayidx30, align 4, !dbg !5041
  %cmp31 = icmp eq i32 %17, 9, !dbg !5041
  br i1 %cmp31, label %land.lhs.true33, label %land.end, !dbg !5042

land.lhs.true33:                                  ; preds = %if.end26
  %18 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5043
  %19 = bitcast %struct.rtx_def* %18 to i32*, !dbg !5043
  %bf.load34 = load i32, i32* %19, align 8, !dbg !5043
  %bf.lshr35 = lshr i32 %bf.load34, 16, !dbg !5043
  %bf.clear36 = and i32 %bf.lshr35, 255, !dbg !5043
  %20 = load i32, i32* %mode.addr, align 4, !dbg !5044
  %cmp37 = icmp eq i32 %bf.clear36, %20, !dbg !5045
  br i1 %cmp37, label %land.lhs.true47, label %lor.lhs.false, !dbg !5046

lor.lhs.false:                                    ; preds = %land.lhs.true33
  %21 = load i32, i32* %mode.addr, align 4, !dbg !5047
  %cmp39 = icmp eq i32 %21, 0, !dbg !5048
  br i1 %cmp39, label %land.lhs.true47, label %lor.lhs.false41, !dbg !5049

lor.lhs.false41:                                  ; preds = %lor.lhs.false
  %22 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5050
  %23 = bitcast %struct.rtx_def* %22 to i32*, !dbg !5050
  %bf.load42 = load i32, i32* %23, align 8, !dbg !5050
  %bf.lshr43 = lshr i32 %bf.load42, 16, !dbg !5050
  %bf.clear44 = and i32 %bf.lshr43, 255, !dbg !5050
  %cmp45 = icmp eq i32 %bf.clear44, 0, !dbg !5051
  br i1 %cmp45, label %land.lhs.true47, label %land.end, !dbg !5052

land.lhs.true47:                                  ; preds = %lor.lhs.false41, %lor.lhs.false, %land.lhs.true33
  %24 = load i32, i32* @flag_pic, align 4, !dbg !5053
  %tobool = icmp ne i32 %24, 0, !dbg !5053
  br i1 %tobool, label %lor.lhs.false48, label %land.rhs, !dbg !5054

lor.lhs.false48:                                  ; preds = %land.lhs.true47
  %25 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5055
  %call49 = call zeroext i8 @legitimate_pic_operand_p(%struct.rtx_def* %25), !dbg !5055
  %conv50 = zext i8 %call49 to i32, !dbg !5055
  %tobool51 = icmp ne i32 %conv50, 0, !dbg !5055
  br i1 %tobool51, label %land.rhs, label %land.end, !dbg !5056

land.rhs:                                         ; preds = %lor.lhs.false48, %land.lhs.true47
  %26 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5057
  %call52 = call zeroext i8 @legitimate_constant_p(%struct.rtx_def* %26), !dbg !5057
  %conv53 = zext i8 %call52 to i32, !dbg !5057
  %tobool54 = icmp ne i32 %conv53, 0, !dbg !5056
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.lhs.false48, %lor.lhs.false41, %if.end26
  %27 = phi i1 [ false, %lor.lhs.false48 ], [ false, %lor.lhs.false41 ], [ false, %if.end26 ], [ %tobool54, %land.rhs ], !dbg !5058
  %land.ext = zext i1 %27 to i32, !dbg !5056
  store i32 %land.ext, i32* %retval, align 4, !dbg !5059
  br label %return, !dbg !5059

return:                                           ; preds = %land.end, %if.then25, %if.then
  %28 = load i32, i32* %retval, align 4, !dbg !5060
  ret i32 %28, !dbg !5060
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @const_int_operand(%struct.rtx_def* %op, i32 %mode) #0 !dbg !5061 {
entry:
  %retval = alloca i32, align 4
  %op.addr = alloca %struct.rtx_def*, align 8
  %mode.addr = alloca i32, align 4
  store %struct.rtx_def* %op, %struct.rtx_def** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %op.addr, metadata !5062, metadata !DIExpression()), !dbg !5063
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !5064, metadata !DIExpression()), !dbg !5065
  %0 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5066
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !5066
  %bf.load = load i32, i32* %1, align 8, !dbg !5066
  %bf.clear = and i32 %bf.load, 65535, !dbg !5066
  %cmp = icmp eq i32 %bf.clear, 30, !dbg !5066
  br i1 %cmp, label %if.end, label %if.then, !dbg !5068

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !5069
  br label %return, !dbg !5069

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %mode.addr, align 4, !dbg !5070
  %cmp1 = icmp ne i32 %2, 0, !dbg !5072
  br i1 %cmp1, label %land.lhs.true, label %if.end7, !dbg !5073

land.lhs.true:                                    ; preds = %if.end
  %3 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5074
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i32 0, i32 1, !dbg !5074
  %hwint = bitcast %union.u* %u to [1 x i64]*, !dbg !5074
  %arrayidx = getelementptr inbounds [1 x i64], [1 x i64]* %hwint, i64 0, i64 0, !dbg !5074
  %4 = load i64, i64* %arrayidx, align 8, !dbg !5074
  %5 = load i32, i32* %mode.addr, align 4, !dbg !5075
  %call = call i64 @trunc_int_for_mode(i64 %4, i32 %5), !dbg !5076
  %6 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5077
  %u2 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i32 0, i32 1, !dbg !5077
  %hwint3 = bitcast %union.u* %u2 to [1 x i64]*, !dbg !5077
  %arrayidx4 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint3, i64 0, i64 0, !dbg !5077
  %7 = load i64, i64* %arrayidx4, align 8, !dbg !5077
  %cmp5 = icmp ne i64 %call, %7, !dbg !5078
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !5079

if.then6:                                         ; preds = %land.lhs.true
  store i32 0, i32* %retval, align 4, !dbg !5080
  br label %return, !dbg !5080

if.end7:                                          ; preds = %land.lhs.true, %if.end
  store i32 1, i32* %retval, align 4, !dbg !5081
  br label %return, !dbg !5081

return:                                           ; preds = %if.end7, %if.then6, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !5082
  ret i32 %8, !dbg !5082
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @const_double_operand(%struct.rtx_def* %op, i32 %mode) #0 !dbg !5083 {
entry:
  %retval = alloca i32, align 4
  %op.addr = alloca %struct.rtx_def*, align 8
  %mode.addr = alloca i32, align 4
  store %struct.rtx_def* %op, %struct.rtx_def** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %op.addr, metadata !5084, metadata !DIExpression()), !dbg !5085
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !5086, metadata !DIExpression()), !dbg !5087
  %0 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5088
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !5088
  %bf.load = load i32, i32* %1, align 8, !dbg !5088
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !5088
  %bf.clear = and i32 %bf.lshr, 255, !dbg !5088
  %cmp = icmp eq i32 %bf.clear, 0, !dbg !5090
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !5091

land.lhs.true:                                    ; preds = %entry
  %2 = load i32, i32* %mode.addr, align 4, !dbg !5092
  %cmp1 = icmp ne i32 %2, 0, !dbg !5093
  br i1 %cmp1, label %land.lhs.true2, label %if.end, !dbg !5094

land.lhs.true2:                                   ; preds = %land.lhs.true
  %3 = load i32, i32* %mode.addr, align 4, !dbg !5095
  %idxprom = zext i32 %3 to i64, !dbg !5095
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom, !dbg !5095
  %4 = load i8, i8* %arrayidx, align 1, !dbg !5095
  %conv = zext i8 %4 to i32, !dbg !5095
  %cmp3 = icmp ne i32 %conv, 2, !dbg !5096
  br i1 %cmp3, label %land.lhs.true5, label %if.end, !dbg !5097

land.lhs.true5:                                   ; preds = %land.lhs.true2
  %5 = load i32, i32* %mode.addr, align 4, !dbg !5098
  %idxprom6 = zext i32 %5 to i64, !dbg !5098
  %arrayidx7 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom6, !dbg !5098
  %6 = load i8, i8* %arrayidx7, align 1, !dbg !5098
  %conv8 = zext i8 %6 to i32, !dbg !5098
  %cmp9 = icmp ne i32 %conv8, 3, !dbg !5099
  br i1 %cmp9, label %if.then, label %if.end, !dbg !5100

if.then:                                          ; preds = %land.lhs.true5
  store i32 0, i32* %retval, align 4, !dbg !5101
  br label %return, !dbg !5101

if.end:                                           ; preds = %land.lhs.true5, %land.lhs.true2, %land.lhs.true, %entry
  %7 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5102
  %8 = bitcast %struct.rtx_def* %7 to i32*, !dbg !5102
  %bf.load11 = load i32, i32* %8, align 8, !dbg !5102
  %bf.clear12 = and i32 %bf.load11, 65535, !dbg !5102
  %cmp13 = icmp eq i32 %bf.clear12, 32, !dbg !5103
  br i1 %cmp13, label %land.rhs, label %lor.lhs.false, !dbg !5104

lor.lhs.false:                                    ; preds = %if.end
  %9 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5105
  %10 = bitcast %struct.rtx_def* %9 to i32*, !dbg !5105
  %bf.load15 = load i32, i32* %10, align 8, !dbg !5105
  %bf.clear16 = and i32 %bf.load15, 65535, !dbg !5105
  %cmp17 = icmp eq i32 %bf.clear16, 30, !dbg !5105
  br i1 %cmp17, label %land.rhs, label %land.end, !dbg !5106

land.rhs:                                         ; preds = %lor.lhs.false, %if.end
  %11 = load i32, i32* %mode.addr, align 4, !dbg !5107
  %cmp19 = icmp eq i32 %11, 0, !dbg !5108
  br i1 %cmp19, label %lor.end, label %lor.lhs.false21, !dbg !5109

lor.lhs.false21:                                  ; preds = %land.rhs
  %12 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5110
  %13 = bitcast %struct.rtx_def* %12 to i32*, !dbg !5110
  %bf.load22 = load i32, i32* %13, align 8, !dbg !5110
  %bf.lshr23 = lshr i32 %bf.load22, 16, !dbg !5110
  %bf.clear24 = and i32 %bf.lshr23, 255, !dbg !5110
  %14 = load i32, i32* %mode.addr, align 4, !dbg !5111
  %cmp25 = icmp eq i32 %bf.clear24, %14, !dbg !5112
  br i1 %cmp25, label %lor.end, label %lor.rhs, !dbg !5113

lor.rhs:                                          ; preds = %lor.lhs.false21
  %15 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5114
  %16 = bitcast %struct.rtx_def* %15 to i32*, !dbg !5114
  %bf.load27 = load i32, i32* %16, align 8, !dbg !5114
  %bf.lshr28 = lshr i32 %bf.load27, 16, !dbg !5114
  %bf.clear29 = and i32 %bf.lshr28, 255, !dbg !5114
  %cmp30 = icmp eq i32 %bf.clear29, 0, !dbg !5115
  br label %lor.end, !dbg !5113

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false21, %land.rhs
  %17 = phi i1 [ true, %lor.lhs.false21 ], [ true, %land.rhs ], [ %cmp30, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %lor.lhs.false
  %18 = phi i1 [ false, %lor.lhs.false ], [ %17, %lor.end ], !dbg !5116
  %land.ext = zext i1 %18 to i32, !dbg !5106
  store i32 %land.ext, i32* %retval, align 4, !dbg !5117
  br label %return, !dbg !5117

return:                                           ; preds = %land.end, %if.then
  %19 = load i32, i32* %retval, align 4, !dbg !5118
  ret i32 %19, !dbg !5118
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @nonimmediate_operand(%struct.rtx_def* %op, i32 %mode) #0 !dbg !5119 {
entry:
  %op.addr = alloca %struct.rtx_def*, align 8
  %mode.addr = alloca i32, align 4
  store %struct.rtx_def* %op, %struct.rtx_def** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %op.addr, metadata !5120, metadata !DIExpression()), !dbg !5121
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !5122, metadata !DIExpression()), !dbg !5123
  %0 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5124
  %1 = load i32, i32* %mode.addr, align 4, !dbg !5125
  %call = call i32 @general_operand(%struct.rtx_def* %0, i32 %1), !dbg !5126
  %tobool = icmp ne i32 %call, 0, !dbg !5126
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !5127

land.rhs:                                         ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5128
  %3 = bitcast %struct.rtx_def* %2 to i32*, !dbg !5128
  %bf.load = load i32, i32* %3, align 8, !dbg !5128
  %bf.clear = and i32 %bf.load, 65535, !dbg !5128
  %idxprom = sext i32 %bf.clear to i64, !dbg !5128
  %arrayidx = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom, !dbg !5128
  %4 = load i32, i32* %arrayidx, align 4, !dbg !5128
  %cmp = icmp eq i32 %4, 9, !dbg !5128
  %lnot = xor i1 %cmp, true, !dbg !5129
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %5 = phi i1 [ false, %entry ], [ %lnot, %land.rhs ], !dbg !5130
  %land.ext = zext i1 %5 to i32, !dbg !5127
  ret i32 %land.ext, !dbg !5131
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @nonmemory_operand(%struct.rtx_def* %op, i32 %mode) #0 !dbg !5132 {
entry:
  %retval = alloca i32, align 4
  %op.addr = alloca %struct.rtx_def*, align 8
  %mode.addr = alloca i32, align 4
  store %struct.rtx_def* %op, %struct.rtx_def** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %op.addr, metadata !5133, metadata !DIExpression()), !dbg !5134
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !5135, metadata !DIExpression()), !dbg !5136
  %0 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5137
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !5137
  %bf.load = load i32, i32* %1, align 8, !dbg !5137
  %bf.clear = and i32 %bf.load, 65535, !dbg !5137
  %idxprom = sext i32 %bf.clear to i64, !dbg !5137
  %arrayidx = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom, !dbg !5137
  %2 = load i32, i32* %arrayidx, align 4, !dbg !5137
  %cmp = icmp eq i32 %2, 9, !dbg !5137
  br i1 %cmp, label %if.then, label %if.end54, !dbg !5139

if.then:                                          ; preds = %entry
  %3 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5140
  %4 = bitcast %struct.rtx_def* %3 to i32*, !dbg !5140
  %bf.load1 = load i32, i32* %4, align 8, !dbg !5140
  %bf.lshr = lshr i32 %bf.load1, 16, !dbg !5140
  %bf.clear2 = and i32 %bf.lshr, 255, !dbg !5140
  %cmp3 = icmp eq i32 %bf.clear2, 0, !dbg !5143
  br i1 %cmp3, label %land.lhs.true, label %if.end, !dbg !5144

land.lhs.true:                                    ; preds = %if.then
  %5 = load i32, i32* %mode.addr, align 4, !dbg !5145
  %cmp4 = icmp ne i32 %5, 0, !dbg !5146
  br i1 %cmp4, label %land.lhs.true5, label %if.end, !dbg !5147

land.lhs.true5:                                   ; preds = %land.lhs.true
  %6 = load i32, i32* %mode.addr, align 4, !dbg !5148
  %idxprom6 = zext i32 %6 to i64, !dbg !5148
  %arrayidx7 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom6, !dbg !5148
  %7 = load i8, i8* %arrayidx7, align 1, !dbg !5148
  %conv = zext i8 %7 to i32, !dbg !5148
  %cmp8 = icmp ne i32 %conv, 2, !dbg !5149
  br i1 %cmp8, label %land.lhs.true10, label %if.end, !dbg !5150

land.lhs.true10:                                  ; preds = %land.lhs.true5
  %8 = load i32, i32* %mode.addr, align 4, !dbg !5151
  %idxprom11 = zext i32 %8 to i64, !dbg !5151
  %arrayidx12 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_class, i64 0, i64 %idxprom11, !dbg !5151
  %9 = load i8, i8* %arrayidx12, align 1, !dbg !5151
  %conv13 = zext i8 %9 to i32, !dbg !5151
  %cmp14 = icmp ne i32 %conv13, 3, !dbg !5152
  br i1 %cmp14, label %if.then16, label %if.end, !dbg !5153

if.then16:                                        ; preds = %land.lhs.true10
  store i32 0, i32* %retval, align 4, !dbg !5154
  br label %return, !dbg !5154

if.end:                                           ; preds = %land.lhs.true10, %land.lhs.true5, %land.lhs.true, %if.then
  %10 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5155
  %11 = bitcast %struct.rtx_def* %10 to i32*, !dbg !5155
  %bf.load17 = load i32, i32* %11, align 8, !dbg !5155
  %bf.clear18 = and i32 %bf.load17, 65535, !dbg !5155
  %cmp19 = icmp eq i32 %bf.clear18, 30, !dbg !5155
  br i1 %cmp19, label %land.lhs.true21, label %if.end32, !dbg !5157

land.lhs.true21:                                  ; preds = %if.end
  %12 = load i32, i32* %mode.addr, align 4, !dbg !5158
  %cmp22 = icmp ne i32 %12, 0, !dbg !5159
  br i1 %cmp22, label %land.lhs.true24, label %if.end32, !dbg !5160

land.lhs.true24:                                  ; preds = %land.lhs.true21
  %13 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5161
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %13, i32 0, i32 1, !dbg !5161
  %hwint = bitcast %union.u* %u to [1 x i64]*, !dbg !5161
  %arrayidx25 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint, i64 0, i64 0, !dbg !5161
  %14 = load i64, i64* %arrayidx25, align 8, !dbg !5161
  %15 = load i32, i32* %mode.addr, align 4, !dbg !5162
  %call = call i64 @trunc_int_for_mode(i64 %14, i32 %15), !dbg !5163
  %16 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5164
  %u26 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %16, i32 0, i32 1, !dbg !5164
  %hwint27 = bitcast %union.u* %u26 to [1 x i64]*, !dbg !5164
  %arrayidx28 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint27, i64 0, i64 0, !dbg !5164
  %17 = load i64, i64* %arrayidx28, align 8, !dbg !5164
  %cmp29 = icmp ne i64 %call, %17, !dbg !5165
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !5166

if.then31:                                        ; preds = %land.lhs.true24
  store i32 0, i32* %retval, align 4, !dbg !5167
  br label %return, !dbg !5167

if.end32:                                         ; preds = %land.lhs.true24, %land.lhs.true21, %if.end
  %18 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5168
  %19 = bitcast %struct.rtx_def* %18 to i32*, !dbg !5168
  %bf.load33 = load i32, i32* %19, align 8, !dbg !5168
  %bf.lshr34 = lshr i32 %bf.load33, 16, !dbg !5168
  %bf.clear35 = and i32 %bf.lshr34, 255, !dbg !5168
  %cmp36 = icmp eq i32 %bf.clear35, 0, !dbg !5169
  br i1 %cmp36, label %land.lhs.true46, label %lor.lhs.false, !dbg !5170

lor.lhs.false:                                    ; preds = %if.end32
  %20 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5171
  %21 = bitcast %struct.rtx_def* %20 to i32*, !dbg !5171
  %bf.load38 = load i32, i32* %21, align 8, !dbg !5171
  %bf.lshr39 = lshr i32 %bf.load38, 16, !dbg !5171
  %bf.clear40 = and i32 %bf.lshr39, 255, !dbg !5171
  %22 = load i32, i32* %mode.addr, align 4, !dbg !5172
  %cmp41 = icmp eq i32 %bf.clear40, %22, !dbg !5173
  br i1 %cmp41, label %land.lhs.true46, label %lor.lhs.false43, !dbg !5174

lor.lhs.false43:                                  ; preds = %lor.lhs.false
  %23 = load i32, i32* %mode.addr, align 4, !dbg !5175
  %cmp44 = icmp eq i32 %23, 0, !dbg !5176
  br i1 %cmp44, label %land.lhs.true46, label %land.end, !dbg !5177

land.lhs.true46:                                  ; preds = %lor.lhs.false43, %lor.lhs.false, %if.end32
  %24 = load i32, i32* @flag_pic, align 4, !dbg !5178
  %tobool = icmp ne i32 %24, 0, !dbg !5178
  br i1 %tobool, label %lor.lhs.false47, label %land.rhs, !dbg !5179

lor.lhs.false47:                                  ; preds = %land.lhs.true46
  %25 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5180
  %call48 = call zeroext i8 @legitimate_pic_operand_p(%struct.rtx_def* %25), !dbg !5180
  %conv49 = zext i8 %call48 to i32, !dbg !5180
  %tobool50 = icmp ne i32 %conv49, 0, !dbg !5180
  br i1 %tobool50, label %land.rhs, label %land.end, !dbg !5181

land.rhs:                                         ; preds = %lor.lhs.false47, %land.lhs.true46
  %26 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5182
  %call51 = call zeroext i8 @legitimate_constant_p(%struct.rtx_def* %26), !dbg !5182
  %conv52 = zext i8 %call51 to i32, !dbg !5182
  %tobool53 = icmp ne i32 %conv52, 0, !dbg !5181
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.lhs.false47, %lor.lhs.false43
  %27 = phi i1 [ false, %lor.lhs.false47 ], [ false, %lor.lhs.false43 ], [ %tobool53, %land.rhs ], !dbg !5183
  %land.ext = zext i1 %27 to i32, !dbg !5181
  store i32 %land.ext, i32* %retval, align 4, !dbg !5184
  br label %return, !dbg !5184

if.end54:                                         ; preds = %entry
  %28 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5185
  %29 = bitcast %struct.rtx_def* %28 to i32*, !dbg !5185
  %bf.load55 = load i32, i32* %29, align 8, !dbg !5185
  %bf.lshr56 = lshr i32 %bf.load55, 16, !dbg !5185
  %bf.clear57 = and i32 %bf.lshr56, 255, !dbg !5185
  %30 = load i32, i32* %mode.addr, align 4, !dbg !5187
  %cmp58 = icmp ne i32 %bf.clear57, %30, !dbg !5188
  br i1 %cmp58, label %land.lhs.true60, label %if.end64, !dbg !5189

land.lhs.true60:                                  ; preds = %if.end54
  %31 = load i32, i32* %mode.addr, align 4, !dbg !5190
  %cmp61 = icmp ne i32 %31, 0, !dbg !5191
  br i1 %cmp61, label %if.then63, label %if.end64, !dbg !5192

if.then63:                                        ; preds = %land.lhs.true60
  store i32 0, i32* %retval, align 4, !dbg !5193
  br label %return, !dbg !5193

if.end64:                                         ; preds = %land.lhs.true60, %if.end54
  %32 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5194
  %33 = bitcast %struct.rtx_def* %32 to i32*, !dbg !5194
  %bf.load65 = load i32, i32* %33, align 8, !dbg !5194
  %bf.clear66 = and i32 %bf.load65, 65535, !dbg !5194
  %cmp67 = icmp eq i32 %bf.clear66, 39, !dbg !5196
  br i1 %cmp67, label %if.then69, label %if.end85, !dbg !5197

if.then69:                                        ; preds = %if.end64
  %34 = load i32, i32* @reload_completed, align 4, !dbg !5198
  %tobool70 = icmp ne i32 %34, 0, !dbg !5198
  br i1 %tobool70, label %if.end80, label %land.lhs.true71, !dbg !5201

land.lhs.true71:                                  ; preds = %if.then69
  %35 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5202
  %u72 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %35, i32 0, i32 1, !dbg !5202
  %fld = bitcast %union.u* %u72 to [1 x %union.rtunion_def]*, !dbg !5202
  %arrayidx73 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !5202
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx73 to %struct.rtx_def**, !dbg !5202
  %36 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5202
  %37 = bitcast %struct.rtx_def* %36 to i32*, !dbg !5202
  %bf.load74 = load i32, i32* %37, align 8, !dbg !5202
  %bf.clear75 = and i32 %bf.load74, 65535, !dbg !5202
  %cmp76 = icmp eq i32 %bf.clear75, 43, !dbg !5202
  br i1 %cmp76, label %if.then78, label %if.end80, !dbg !5203

if.then78:                                        ; preds = %land.lhs.true71
  %38 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5204
  %39 = load i32, i32* %mode.addr, align 4, !dbg !5205
  %call79 = call i32 @general_operand(%struct.rtx_def* %38, i32 %39), !dbg !5206
  store i32 %call79, i32* %retval, align 4, !dbg !5207
  br label %return, !dbg !5207

if.end80:                                         ; preds = %land.lhs.true71, %if.then69
  %40 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5208
  %u81 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %40, i32 0, i32 1, !dbg !5208
  %fld82 = bitcast %union.u* %u81 to [1 x %union.rtunion_def]*, !dbg !5208
  %arrayidx83 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld82, i64 0, i64 0, !dbg !5208
  %rt_rtx84 = bitcast %union.rtunion_def* %arrayidx83 to %struct.rtx_def**, !dbg !5208
  %41 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx84, align 8, !dbg !5208
  store %struct.rtx_def* %41, %struct.rtx_def** %op.addr, align 8, !dbg !5209
  br label %if.end85, !dbg !5210

if.end85:                                         ; preds = %if.end80, %if.end64
  %42 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5211
  %43 = bitcast %struct.rtx_def* %42 to i32*, !dbg !5211
  %bf.load86 = load i32, i32* %43, align 8, !dbg !5211
  %bf.clear87 = and i32 %bf.load86, 65535, !dbg !5211
  %cmp88 = icmp eq i32 %bf.clear87, 37, !dbg !5211
  br i1 %cmp88, label %land.rhs90, label %land.end99, !dbg !5212

land.rhs90:                                       ; preds = %if.end85
  %44 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5213
  %call91 = call i32 @rhs_regno(%struct.rtx_def* %44), !dbg !5213
  %cmp92 = icmp uge i32 %call91, 53, !dbg !5214
  br i1 %cmp92, label %lor.end, label %lor.rhs, !dbg !5215

lor.rhs:                                          ; preds = %land.rhs90
  %45 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5216
  %call94 = call i32 @rhs_regno(%struct.rtx_def* %45), !dbg !5216
  %idxprom95 = zext i32 %call94 to i64, !dbg !5216
  %arrayidx96 = getelementptr inbounds [53 x i32], [53 x i32]* @regclass_map, i64 0, i64 %idxprom95, !dbg !5216
  %46 = load i32, i32* %arrayidx96, align 4, !dbg !5216
  %cmp97 = icmp ne i32 %46, 0, !dbg !5217
  br label %lor.end, !dbg !5215

lor.end:                                          ; preds = %lor.rhs, %land.rhs90
  %47 = phi i1 [ true, %land.rhs90 ], [ %cmp97, %lor.rhs ]
  br label %land.end99

land.end99:                                       ; preds = %lor.end, %if.end85
  %48 = phi i1 [ false, %if.end85 ], [ %47, %lor.end ], !dbg !5218
  %land.ext100 = zext i1 %48 to i32, !dbg !5212
  store i32 %land.ext100, i32* %retval, align 4, !dbg !5219
  br label %return, !dbg !5219

return:                                           ; preds = %land.end99, %if.then78, %if.then63, %land.end, %if.then31, %if.then16
  %49 = load i32, i32* %retval, align 4, !dbg !5220
  ret i32 %49, !dbg !5220
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @push_operand(%struct.rtx_def* %op, i32 %mode) #0 !dbg !5221 {
entry:
  %retval = alloca i32, align 4
  %op.addr = alloca %struct.rtx_def*, align 8
  %mode.addr = alloca i32, align 4
  %rounded_size = alloca i32, align 4
  store %struct.rtx_def* %op, %struct.rtx_def** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %op.addr, metadata !5222, metadata !DIExpression()), !dbg !5223
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !5224, metadata !DIExpression()), !dbg !5225
  call void @llvm.dbg.declare(metadata i32* %rounded_size, metadata !5226, metadata !DIExpression()), !dbg !5227
  %0 = load i32, i32* %mode.addr, align 4, !dbg !5228
  %idxprom = zext i32 %0 to i64, !dbg !5228
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !5228
  %1 = load i8, i8* %arrayidx, align 1, !dbg !5228
  %conv = zext i8 %1 to i16, !dbg !5228
  %conv1 = zext i16 %conv to i32, !dbg !5228
  store i32 %conv1, i32* %rounded_size, align 4, !dbg !5227
  %2 = load i32, i32* %rounded_size, align 4, !dbg !5229
  %add = add i32 %2, 3, !dbg !5229
  %and = and i32 %add, -4, !dbg !5229
  store i32 %and, i32* %rounded_size, align 4, !dbg !5230
  %3 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5231
  %4 = bitcast %struct.rtx_def* %3 to i32*, !dbg !5231
  %bf.load = load i32, i32* %4, align 8, !dbg !5231
  %bf.clear = and i32 %bf.load, 65535, !dbg !5231
  %cmp = icmp eq i32 %bf.clear, 43, !dbg !5231
  br i1 %cmp, label %if.end, label %if.then, !dbg !5233

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !5234
  br label %return, !dbg !5234

if.end:                                           ; preds = %entry
  %5 = load i32, i32* %mode.addr, align 4, !dbg !5235
  %cmp3 = icmp ne i32 %5, 0, !dbg !5237
  br i1 %cmp3, label %land.lhs.true, label %if.end10, !dbg !5238

land.lhs.true:                                    ; preds = %if.end
  %6 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5239
  %7 = bitcast %struct.rtx_def* %6 to i32*, !dbg !5239
  %bf.load5 = load i32, i32* %7, align 8, !dbg !5239
  %bf.lshr = lshr i32 %bf.load5, 16, !dbg !5239
  %bf.clear6 = and i32 %bf.lshr, 255, !dbg !5239
  %8 = load i32, i32* %mode.addr, align 4, !dbg !5240
  %cmp7 = icmp ne i32 %bf.clear6, %8, !dbg !5241
  br i1 %cmp7, label %if.then9, label %if.end10, !dbg !5242

if.then9:                                         ; preds = %land.lhs.true
  store i32 0, i32* %retval, align 4, !dbg !5243
  br label %return, !dbg !5243

if.end10:                                         ; preds = %land.lhs.true, %if.end
  %9 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5244
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %9, i32 0, i32 1, !dbg !5244
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !5244
  %arrayidx11 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !5244
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx11 to %struct.rtx_def**, !dbg !5244
  %10 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5244
  store %struct.rtx_def* %10, %struct.rtx_def** %op.addr, align 8, !dbg !5245
  %11 = load i32, i32* %rounded_size, align 4, !dbg !5246
  %12 = load i32, i32* %mode.addr, align 4, !dbg !5248
  %idxprom12 = zext i32 %12 to i64, !dbg !5248
  %arrayidx13 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom12, !dbg !5248
  %13 = load i8, i8* %arrayidx13, align 1, !dbg !5248
  %conv14 = zext i8 %13 to i16, !dbg !5248
  %conv15 = zext i16 %conv14 to i32, !dbg !5248
  %cmp16 = icmp eq i32 %11, %conv15, !dbg !5249
  br i1 %cmp16, label %if.then18, label %if.else, !dbg !5250

if.then18:                                        ; preds = %if.end10
  %14 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5251
  %15 = bitcast %struct.rtx_def* %14 to i32*, !dbg !5251
  %bf.load19 = load i32, i32* %15, align 8, !dbg !5251
  %bf.clear20 = and i32 %bf.load19, 65535, !dbg !5251
  %cmp21 = icmp ne i32 %bf.clear20, 74, !dbg !5254
  br i1 %cmp21, label %if.then23, label %if.end24, !dbg !5255

if.then23:                                        ; preds = %if.then18
  store i32 0, i32* %retval, align 4, !dbg !5256
  br label %return, !dbg !5256

if.end24:                                         ; preds = %if.then18
  br label %if.end81, !dbg !5257

if.else:                                          ; preds = %if.end10
  %16 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5258
  %17 = bitcast %struct.rtx_def* %16 to i32*, !dbg !5258
  %bf.load25 = load i32, i32* %17, align 8, !dbg !5258
  %bf.clear26 = and i32 %bf.load25, 65535, !dbg !5258
  %cmp27 = icmp ne i32 %bf.clear26, 78, !dbg !5261
  br i1 %cmp27, label %if.then79, label %lor.lhs.false, !dbg !5262

lor.lhs.false:                                    ; preds = %if.else
  %18 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5263
  %u29 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %18, i32 0, i32 1, !dbg !5263
  %fld30 = bitcast %union.u* %u29 to [1 x %union.rtunion_def]*, !dbg !5263
  %arrayidx31 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld30, i64 0, i64 1, !dbg !5263
  %rt_rtx32 = bitcast %union.rtunion_def* %arrayidx31 to %struct.rtx_def**, !dbg !5263
  %19 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx32, align 8, !dbg !5263
  %20 = bitcast %struct.rtx_def* %19 to i32*, !dbg !5263
  %bf.load33 = load i32, i32* %20, align 8, !dbg !5263
  %bf.clear34 = and i32 %bf.load33, 65535, !dbg !5263
  %cmp35 = icmp ne i32 %bf.clear34, 49, !dbg !5264
  br i1 %cmp35, label %if.then79, label %lor.lhs.false37, !dbg !5265

lor.lhs.false37:                                  ; preds = %lor.lhs.false
  %21 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5266
  %u38 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %21, i32 0, i32 1, !dbg !5266
  %fld39 = bitcast %union.u* %u38 to [1 x %union.rtunion_def]*, !dbg !5266
  %arrayidx40 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld39, i64 0, i64 1, !dbg !5266
  %rt_rtx41 = bitcast %union.rtunion_def* %arrayidx40 to %struct.rtx_def**, !dbg !5266
  %22 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx41, align 8, !dbg !5266
  %u42 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %22, i32 0, i32 1, !dbg !5266
  %fld43 = bitcast %union.u* %u42 to [1 x %union.rtunion_def]*, !dbg !5266
  %arrayidx44 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld43, i64 0, i64 0, !dbg !5266
  %rt_rtx45 = bitcast %union.rtunion_def* %arrayidx44 to %struct.rtx_def**, !dbg !5266
  %23 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx45, align 8, !dbg !5266
  %24 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5267
  %u46 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %24, i32 0, i32 1, !dbg !5267
  %fld47 = bitcast %union.u* %u46 to [1 x %union.rtunion_def]*, !dbg !5267
  %arrayidx48 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld47, i64 0, i64 0, !dbg !5267
  %rt_rtx49 = bitcast %union.rtunion_def* %arrayidx48 to %struct.rtx_def**, !dbg !5267
  %25 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx49, align 8, !dbg !5267
  %cmp50 = icmp ne %struct.rtx_def* %23, %25, !dbg !5268
  br i1 %cmp50, label %if.then79, label %lor.lhs.false52, !dbg !5269

lor.lhs.false52:                                  ; preds = %lor.lhs.false37
  %26 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5270
  %u53 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %26, i32 0, i32 1, !dbg !5270
  %fld54 = bitcast %union.u* %u53 to [1 x %union.rtunion_def]*, !dbg !5270
  %arrayidx55 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld54, i64 0, i64 1, !dbg !5270
  %rt_rtx56 = bitcast %union.rtunion_def* %arrayidx55 to %struct.rtx_def**, !dbg !5270
  %27 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx56, align 8, !dbg !5270
  %u57 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %27, i32 0, i32 1, !dbg !5270
  %fld58 = bitcast %union.u* %u57 to [1 x %union.rtunion_def]*, !dbg !5270
  %arrayidx59 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld58, i64 0, i64 1, !dbg !5270
  %rt_rtx60 = bitcast %union.rtunion_def* %arrayidx59 to %struct.rtx_def**, !dbg !5270
  %28 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx60, align 8, !dbg !5270
  %29 = bitcast %struct.rtx_def* %28 to i32*, !dbg !5270
  %bf.load61 = load i32, i32* %29, align 8, !dbg !5270
  %bf.clear62 = and i32 %bf.load61, 65535, !dbg !5270
  %cmp63 = icmp eq i32 %bf.clear62, 30, !dbg !5270
  br i1 %cmp63, label %lor.lhs.false65, label %if.then79, !dbg !5271

lor.lhs.false65:                                  ; preds = %lor.lhs.false52
  %30 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5272
  %u66 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %30, i32 0, i32 1, !dbg !5272
  %fld67 = bitcast %union.u* %u66 to [1 x %union.rtunion_def]*, !dbg !5272
  %arrayidx68 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld67, i64 0, i64 1, !dbg !5272
  %rt_rtx69 = bitcast %union.rtunion_def* %arrayidx68 to %struct.rtx_def**, !dbg !5272
  %31 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx69, align 8, !dbg !5272
  %u70 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %31, i32 0, i32 1, !dbg !5272
  %fld71 = bitcast %union.u* %u70 to [1 x %union.rtunion_def]*, !dbg !5272
  %arrayidx72 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld71, i64 0, i64 1, !dbg !5272
  %rt_rtx73 = bitcast %union.rtunion_def* %arrayidx72 to %struct.rtx_def**, !dbg !5272
  %32 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx73, align 8, !dbg !5272
  %u74 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %32, i32 0, i32 1, !dbg !5272
  %hwint = bitcast %union.u* %u74 to [1 x i64]*, !dbg !5272
  %arrayidx75 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint, i64 0, i64 0, !dbg !5272
  %33 = load i64, i64* %arrayidx75, align 8, !dbg !5272
  %34 = load i32, i32* %rounded_size, align 4, !dbg !5273
  %sub = sub nsw i32 0, %34, !dbg !5274
  %conv76 = sext i32 %sub to i64, !dbg !5274
  %cmp77 = icmp ne i64 %33, %conv76, !dbg !5275
  br i1 %cmp77, label %if.then79, label %if.end80, !dbg !5276

if.then79:                                        ; preds = %lor.lhs.false65, %lor.lhs.false52, %lor.lhs.false37, %lor.lhs.false, %if.else
  store i32 0, i32* %retval, align 4, !dbg !5277
  br label %return, !dbg !5277

if.end80:                                         ; preds = %lor.lhs.false65
  br label %if.end81

if.end81:                                         ; preds = %if.end80, %if.end24
  %35 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5278
  %u82 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %35, i32 0, i32 1, !dbg !5278
  %fld83 = bitcast %union.u* %u82 to [1 x %union.rtunion_def]*, !dbg !5278
  %arrayidx84 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld83, i64 0, i64 0, !dbg !5278
  %rt_rtx85 = bitcast %union.rtunion_def* %arrayidx84 to %struct.rtx_def**, !dbg !5278
  %36 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx85, align 8, !dbg !5278
  %37 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 16, !dbg !5279
  %cmp86 = icmp eq %struct.rtx_def* %36, %37, !dbg !5280
  %conv87 = zext i1 %cmp86 to i32, !dbg !5280
  store i32 %conv87, i32* %retval, align 4, !dbg !5281
  br label %return, !dbg !5281

return:                                           ; preds = %if.end81, %if.then79, %if.then23, %if.then9, %if.then
  %38 = load i32, i32* %retval, align 4, !dbg !5282
  ret i32 %38, !dbg !5282
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @pop_operand(%struct.rtx_def* %op, i32 %mode) #0 !dbg !5283 {
entry:
  %retval = alloca i32, align 4
  %op.addr = alloca %struct.rtx_def*, align 8
  %mode.addr = alloca i32, align 4
  store %struct.rtx_def* %op, %struct.rtx_def** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %op.addr, metadata !5284, metadata !DIExpression()), !dbg !5285
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !5286, metadata !DIExpression()), !dbg !5287
  %0 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5288
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !5288
  %bf.load = load i32, i32* %1, align 8, !dbg !5288
  %bf.clear = and i32 %bf.load, 65535, !dbg !5288
  %cmp = icmp eq i32 %bf.clear, 43, !dbg !5288
  br i1 %cmp, label %if.end, label %if.then, !dbg !5290

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !5291
  br label %return, !dbg !5291

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %mode.addr, align 4, !dbg !5292
  %cmp1 = icmp ne i32 %2, 0, !dbg !5294
  br i1 %cmp1, label %land.lhs.true, label %if.end6, !dbg !5295

land.lhs.true:                                    ; preds = %if.end
  %3 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5296
  %4 = bitcast %struct.rtx_def* %3 to i32*, !dbg !5296
  %bf.load2 = load i32, i32* %4, align 8, !dbg !5296
  %bf.lshr = lshr i32 %bf.load2, 16, !dbg !5296
  %bf.clear3 = and i32 %bf.lshr, 255, !dbg !5296
  %5 = load i32, i32* %mode.addr, align 4, !dbg !5297
  %cmp4 = icmp ne i32 %bf.clear3, %5, !dbg !5298
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !5299

if.then5:                                         ; preds = %land.lhs.true
  store i32 0, i32* %retval, align 4, !dbg !5300
  br label %return, !dbg !5300

if.end6:                                          ; preds = %land.lhs.true, %if.end
  %6 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5301
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i32 0, i32 1, !dbg !5301
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !5301
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !5301
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !5301
  %7 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5301
  store %struct.rtx_def* %7, %struct.rtx_def** %op.addr, align 8, !dbg !5302
  %8 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5303
  %9 = bitcast %struct.rtx_def* %8 to i32*, !dbg !5303
  %bf.load7 = load i32, i32* %9, align 8, !dbg !5303
  %bf.clear8 = and i32 %bf.load7, 65535, !dbg !5303
  %cmp9 = icmp ne i32 %bf.clear8, 77, !dbg !5305
  br i1 %cmp9, label %if.then10, label %if.end11, !dbg !5306

if.then10:                                        ; preds = %if.end6
  store i32 0, i32* %retval, align 4, !dbg !5307
  br label %return, !dbg !5307

if.end11:                                         ; preds = %if.end6
  %10 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5308
  %u12 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %10, i32 0, i32 1, !dbg !5308
  %fld13 = bitcast %union.u* %u12 to [1 x %union.rtunion_def]*, !dbg !5308
  %arrayidx14 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld13, i64 0, i64 0, !dbg !5308
  %rt_rtx15 = bitcast %union.rtunion_def* %arrayidx14 to %struct.rtx_def**, !dbg !5308
  %11 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx15, align 8, !dbg !5308
  %12 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 2), align 16, !dbg !5309
  %cmp16 = icmp eq %struct.rtx_def* %11, %12, !dbg !5310
  %conv = zext i1 %cmp16 to i32, !dbg !5310
  store i32 %conv, i32* %retval, align 4, !dbg !5311
  br label %return, !dbg !5311

return:                                           ; preds = %if.end11, %if.then10, %if.then5, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !5312
  ret i32 %13, !dbg !5312
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @memory_operand(%struct.rtx_def* %op, i32 %mode) #0 !dbg !5313 {
entry:
  %retval = alloca i32, align 4
  %op.addr = alloca %struct.rtx_def*, align 8
  %mode.addr = alloca i32, align 4
  %inner = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %op, %struct.rtx_def** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %op.addr, metadata !5314, metadata !DIExpression()), !dbg !5315
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !5316, metadata !DIExpression()), !dbg !5317
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %inner, metadata !5318, metadata !DIExpression()), !dbg !5319
  %0 = load i32, i32* @reload_completed, align 4, !dbg !5320
  %tobool = icmp ne i32 %0, 0, !dbg !5320
  br i1 %tobool, label %if.end, label %if.then, !dbg !5322

if.then:                                          ; preds = %entry
  %1 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5323
  %2 = bitcast %struct.rtx_def* %1 to i32*, !dbg !5323
  %bf.load = load i32, i32* %2, align 8, !dbg !5323
  %bf.clear = and i32 %bf.load, 65535, !dbg !5323
  %cmp = icmp eq i32 %bf.clear, 43, !dbg !5323
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !5324

land.rhs:                                         ; preds = %if.then
  %3 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5325
  %4 = load i32, i32* %mode.addr, align 4, !dbg !5326
  %call = call i32 @general_operand(%struct.rtx_def* %3, i32 %4), !dbg !5327
  %tobool1 = icmp ne i32 %call, 0, !dbg !5324
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.then
  %5 = phi i1 [ false, %if.then ], [ %tobool1, %land.rhs ], !dbg !5328
  %land.ext = zext i1 %5 to i32, !dbg !5324
  store i32 %land.ext, i32* %retval, align 4, !dbg !5329
  br label %return, !dbg !5329

if.end:                                           ; preds = %entry
  %6 = load i32, i32* %mode.addr, align 4, !dbg !5330
  %cmp2 = icmp ne i32 %6, 0, !dbg !5332
  br i1 %cmp2, label %land.lhs.true, label %if.end7, !dbg !5333

land.lhs.true:                                    ; preds = %if.end
  %7 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5334
  %8 = bitcast %struct.rtx_def* %7 to i32*, !dbg !5334
  %bf.load3 = load i32, i32* %8, align 8, !dbg !5334
  %bf.lshr = lshr i32 %bf.load3, 16, !dbg !5334
  %bf.clear4 = and i32 %bf.lshr, 255, !dbg !5334
  %9 = load i32, i32* %mode.addr, align 4, !dbg !5335
  %cmp5 = icmp ne i32 %bf.clear4, %9, !dbg !5336
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !5337

if.then6:                                         ; preds = %land.lhs.true
  store i32 0, i32* %retval, align 4, !dbg !5338
  br label %return, !dbg !5338

if.end7:                                          ; preds = %land.lhs.true, %if.end
  %10 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5339
  store %struct.rtx_def* %10, %struct.rtx_def** %inner, align 8, !dbg !5340
  %11 = load %struct.rtx_def*, %struct.rtx_def** %inner, align 8, !dbg !5341
  %12 = bitcast %struct.rtx_def* %11 to i32*, !dbg !5341
  %bf.load8 = load i32, i32* %12, align 8, !dbg !5341
  %bf.clear9 = and i32 %bf.load8, 65535, !dbg !5341
  %cmp10 = icmp eq i32 %bf.clear9, 39, !dbg !5343
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !5344

if.then11:                                        ; preds = %if.end7
  %13 = load %struct.rtx_def*, %struct.rtx_def** %inner, align 8, !dbg !5345
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %13, i32 0, i32 1, !dbg !5345
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !5345
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !5345
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !5345
  %14 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5345
  store %struct.rtx_def* %14, %struct.rtx_def** %inner, align 8, !dbg !5346
  br label %if.end12, !dbg !5347

if.end12:                                         ; preds = %if.then11, %if.end7
  %15 = load %struct.rtx_def*, %struct.rtx_def** %inner, align 8, !dbg !5348
  %16 = bitcast %struct.rtx_def* %15 to i32*, !dbg !5348
  %bf.load13 = load i32, i32* %16, align 8, !dbg !5348
  %bf.clear14 = and i32 %bf.load13, 65535, !dbg !5348
  %cmp15 = icmp eq i32 %bf.clear14, 43, !dbg !5348
  br i1 %cmp15, label %land.rhs16, label %land.end19, !dbg !5349

land.rhs16:                                       ; preds = %if.end12
  %17 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5350
  %18 = load i32, i32* %mode.addr, align 4, !dbg !5351
  %call17 = call i32 @general_operand(%struct.rtx_def* %17, i32 %18), !dbg !5352
  %tobool18 = icmp ne i32 %call17, 0, !dbg !5349
  br label %land.end19

land.end19:                                       ; preds = %land.rhs16, %if.end12
  %19 = phi i1 [ false, %if.end12 ], [ %tobool18, %land.rhs16 ], !dbg !5353
  %land.ext20 = zext i1 %19 to i32, !dbg !5349
  store i32 %land.ext20, i32* %retval, align 4, !dbg !5354
  br label %return, !dbg !5354

return:                                           ; preds = %land.end19, %if.then6, %land.end
  %20 = load i32, i32* %retval, align 4, !dbg !5355
  ret i32 %20, !dbg !5355
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @indirect_operand(%struct.rtx_def* %op, i32 %mode) #0 !dbg !5356 {
entry:
  %retval = alloca i32, align 4
  %op.addr = alloca %struct.rtx_def*, align 8
  %mode.addr = alloca i32, align 4
  %offset = alloca i32, align 4
  %inner = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %op, %struct.rtx_def** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %op.addr, metadata !5357, metadata !DIExpression()), !dbg !5358
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !5359, metadata !DIExpression()), !dbg !5360
  %0 = load i32, i32* @reload_completed, align 4, !dbg !5361
  %tobool = icmp ne i32 %0, 0, !dbg !5361
  br i1 %tobool, label %if.end67, label %land.lhs.true, !dbg !5363

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5364
  %2 = bitcast %struct.rtx_def* %1 to i32*, !dbg !5364
  %bf.load = load i32, i32* %2, align 8, !dbg !5364
  %bf.clear = and i32 %bf.load, 65535, !dbg !5364
  %cmp = icmp eq i32 %bf.clear, 39, !dbg !5365
  br i1 %cmp, label %land.lhs.true1, label %if.end67, !dbg !5366

land.lhs.true1:                                   ; preds = %land.lhs.true
  %3 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5367
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i32 0, i32 1, !dbg !5367
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !5367
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !5367
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !5367
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5367
  %5 = bitcast %struct.rtx_def* %4 to i32*, !dbg !5367
  %bf.load2 = load i32, i32* %5, align 8, !dbg !5367
  %bf.clear3 = and i32 %bf.load2, 65535, !dbg !5367
  %cmp4 = icmp eq i32 %bf.clear3, 43, !dbg !5367
  br i1 %cmp4, label %if.then, label %if.end67, !dbg !5368

if.then:                                          ; preds = %land.lhs.true1
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !5369, metadata !DIExpression()), !dbg !5371
  %6 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5372
  %u5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i32 0, i32 1, !dbg !5372
  %fld6 = bitcast %union.u* %u5 to [1 x %union.rtunion_def]*, !dbg !5372
  %arrayidx7 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld6, i64 0, i64 1, !dbg !5372
  %rt_uint = bitcast %union.rtunion_def* %arrayidx7 to i32*, !dbg !5372
  %7 = load i32, i32* %rt_uint, align 8, !dbg !5372
  store i32 %7, i32* %offset, align 4, !dbg !5371
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %inner, metadata !5373, metadata !DIExpression()), !dbg !5374
  %8 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5375
  %u8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i32 0, i32 1, !dbg !5375
  %fld9 = bitcast %union.u* %u8 to [1 x %union.rtunion_def]*, !dbg !5375
  %arrayidx10 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld9, i64 0, i64 0, !dbg !5375
  %rt_rtx11 = bitcast %union.rtunion_def* %arrayidx10 to %struct.rtx_def**, !dbg !5375
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx11, align 8, !dbg !5375
  store %struct.rtx_def* %9, %struct.rtx_def** %inner, align 8, !dbg !5374
  %10 = load i32, i32* %mode.addr, align 4, !dbg !5376
  %cmp12 = icmp ne i32 %10, 0, !dbg !5378
  br i1 %cmp12, label %land.lhs.true13, label %if.end, !dbg !5379

land.lhs.true13:                                  ; preds = %if.then
  %11 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5380
  %12 = bitcast %struct.rtx_def* %11 to i32*, !dbg !5380
  %bf.load14 = load i32, i32* %12, align 8, !dbg !5380
  %bf.lshr = lshr i32 %bf.load14, 16, !dbg !5380
  %bf.clear15 = and i32 %bf.lshr, 255, !dbg !5380
  %13 = load i32, i32* %mode.addr, align 4, !dbg !5381
  %cmp16 = icmp ne i32 %bf.clear15, %13, !dbg !5382
  br i1 %cmp16, label %if.then17, label %if.end, !dbg !5383

if.then17:                                        ; preds = %land.lhs.true13
  store i32 0, i32* %retval, align 4, !dbg !5384
  br label %return, !dbg !5384

if.end:                                           ; preds = %land.lhs.true13, %if.then
  %14 = load i32, i32* %offset, align 4, !dbg !5385
  %cmp18 = icmp eq i32 %14, 0, !dbg !5386
  br i1 %cmp18, label %land.lhs.true19, label %lor.rhs, !dbg !5387

land.lhs.true19:                                  ; preds = %if.end
  %15 = load %struct.rtx_def*, %struct.rtx_def** %inner, align 8, !dbg !5388
  %u20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i32 0, i32 1, !dbg !5388
  %fld21 = bitcast %union.u* %u20 to [1 x %union.rtunion_def]*, !dbg !5388
  %arrayidx22 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld21, i64 0, i64 0, !dbg !5388
  %rt_rtx23 = bitcast %union.rtunion_def* %arrayidx22 to %struct.rtx_def**, !dbg !5388
  %16 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx23, align 8, !dbg !5388
  %call = call i32 @general_operand(%struct.rtx_def* %16, i32 16), !dbg !5389
  %tobool24 = icmp ne i32 %call, 0, !dbg !5389
  br i1 %tobool24, label %lor.end, label %lor.rhs, !dbg !5390

lor.rhs:                                          ; preds = %land.lhs.true19, %if.end
  %17 = load %struct.rtx_def*, %struct.rtx_def** %inner, align 8, !dbg !5391
  %u25 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i32 0, i32 1, !dbg !5391
  %fld26 = bitcast %union.u* %u25 to [1 x %union.rtunion_def]*, !dbg !5391
  %arrayidx27 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld26, i64 0, i64 0, !dbg !5391
  %rt_rtx28 = bitcast %union.rtunion_def* %arrayidx27 to %struct.rtx_def**, !dbg !5391
  %18 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx28, align 8, !dbg !5391
  %19 = bitcast %struct.rtx_def* %18 to i32*, !dbg !5391
  %bf.load29 = load i32, i32* %19, align 8, !dbg !5391
  %bf.clear30 = and i32 %bf.load29, 65535, !dbg !5391
  %cmp31 = icmp eq i32 %bf.clear30, 49, !dbg !5392
  br i1 %cmp31, label %land.lhs.true32, label %land.end, !dbg !5393

land.lhs.true32:                                  ; preds = %lor.rhs
  %20 = load %struct.rtx_def*, %struct.rtx_def** %inner, align 8, !dbg !5394
  %u33 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %20, i32 0, i32 1, !dbg !5394
  %fld34 = bitcast %union.u* %u33 to [1 x %union.rtunion_def]*, !dbg !5394
  %arrayidx35 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld34, i64 0, i64 0, !dbg !5394
  %rt_rtx36 = bitcast %union.rtunion_def* %arrayidx35 to %struct.rtx_def**, !dbg !5394
  %21 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx36, align 8, !dbg !5394
  %u37 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %21, i32 0, i32 1, !dbg !5394
  %fld38 = bitcast %union.u* %u37 to [1 x %union.rtunion_def]*, !dbg !5394
  %arrayidx39 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld38, i64 0, i64 1, !dbg !5394
  %rt_rtx40 = bitcast %union.rtunion_def* %arrayidx39 to %struct.rtx_def**, !dbg !5394
  %22 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx40, align 8, !dbg !5394
  %23 = bitcast %struct.rtx_def* %22 to i32*, !dbg !5394
  %bf.load41 = load i32, i32* %23, align 8, !dbg !5394
  %bf.clear42 = and i32 %bf.load41, 65535, !dbg !5394
  %cmp43 = icmp eq i32 %bf.clear42, 30, !dbg !5394
  br i1 %cmp43, label %land.lhs.true44, label %land.end, !dbg !5395

land.lhs.true44:                                  ; preds = %land.lhs.true32
  %24 = load %struct.rtx_def*, %struct.rtx_def** %inner, align 8, !dbg !5396
  %u45 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %24, i32 0, i32 1, !dbg !5396
  %fld46 = bitcast %union.u* %u45 to [1 x %union.rtunion_def]*, !dbg !5396
  %arrayidx47 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld46, i64 0, i64 0, !dbg !5396
  %rt_rtx48 = bitcast %union.rtunion_def* %arrayidx47 to %struct.rtx_def**, !dbg !5396
  %25 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx48, align 8, !dbg !5396
  %u49 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %25, i32 0, i32 1, !dbg !5396
  %fld50 = bitcast %union.u* %u49 to [1 x %union.rtunion_def]*, !dbg !5396
  %arrayidx51 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld50, i64 0, i64 1, !dbg !5396
  %rt_rtx52 = bitcast %union.rtunion_def* %arrayidx51 to %struct.rtx_def**, !dbg !5396
  %26 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx52, align 8, !dbg !5396
  %u53 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %26, i32 0, i32 1, !dbg !5396
  %hwint = bitcast %union.u* %u53 to [1 x i64]*, !dbg !5396
  %arrayidx54 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint, i64 0, i64 0, !dbg !5396
  %27 = load i64, i64* %arrayidx54, align 8, !dbg !5396
  %28 = load i32, i32* %offset, align 4, !dbg !5397
  %sub = sub nsw i32 0, %28, !dbg !5398
  %conv = sext i32 %sub to i64, !dbg !5398
  %cmp55 = icmp eq i64 %27, %conv, !dbg !5399
  br i1 %cmp55, label %land.rhs, label %land.end, !dbg !5400

land.rhs:                                         ; preds = %land.lhs.true44
  %29 = load %struct.rtx_def*, %struct.rtx_def** %inner, align 8, !dbg !5401
  %u57 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %29, i32 0, i32 1, !dbg !5401
  %fld58 = bitcast %union.u* %u57 to [1 x %union.rtunion_def]*, !dbg !5401
  %arrayidx59 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld58, i64 0, i64 0, !dbg !5401
  %rt_rtx60 = bitcast %union.rtunion_def* %arrayidx59 to %struct.rtx_def**, !dbg !5401
  %30 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx60, align 8, !dbg !5401
  %u61 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %30, i32 0, i32 1, !dbg !5401
  %fld62 = bitcast %union.u* %u61 to [1 x %union.rtunion_def]*, !dbg !5401
  %arrayidx63 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld62, i64 0, i64 0, !dbg !5401
  %rt_rtx64 = bitcast %union.rtunion_def* %arrayidx63 to %struct.rtx_def**, !dbg !5401
  %31 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx64, align 8, !dbg !5401
  %call65 = call i32 @general_operand(%struct.rtx_def* %31, i32 16), !dbg !5402
  %tobool66 = icmp ne i32 %call65, 0, !dbg !5400
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true44, %land.lhs.true32, %lor.rhs
  %32 = phi i1 [ false, %land.lhs.true44 ], [ false, %land.lhs.true32 ], [ false, %lor.rhs ], [ %tobool66, %land.rhs ], !dbg !5403
  br label %lor.end, !dbg !5390

lor.end:                                          ; preds = %land.end, %land.lhs.true19
  %33 = phi i1 [ true, %land.lhs.true19 ], [ %32, %land.end ]
  %lor.ext = zext i1 %33 to i32, !dbg !5390
  store i32 %lor.ext, i32* %retval, align 4, !dbg !5404
  br label %return, !dbg !5404

if.end67:                                         ; preds = %land.lhs.true1, %land.lhs.true, %entry
  %34 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5405
  %35 = bitcast %struct.rtx_def* %34 to i32*, !dbg !5405
  %bf.load68 = load i32, i32* %35, align 8, !dbg !5405
  %bf.clear69 = and i32 %bf.load68, 65535, !dbg !5405
  %cmp70 = icmp eq i32 %bf.clear69, 43, !dbg !5405
  br i1 %cmp70, label %land.lhs.true72, label %land.end82, !dbg !5406

land.lhs.true72:                                  ; preds = %if.end67
  %36 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5407
  %37 = load i32, i32* %mode.addr, align 4, !dbg !5408
  %call73 = call i32 @memory_operand(%struct.rtx_def* %36, i32 %37), !dbg !5409
  %tobool74 = icmp ne i32 %call73, 0, !dbg !5409
  br i1 %tobool74, label %land.rhs75, label %land.end82, !dbg !5410

land.rhs75:                                       ; preds = %land.lhs.true72
  %38 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5411
  %u76 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %38, i32 0, i32 1, !dbg !5411
  %fld77 = bitcast %union.u* %u76 to [1 x %union.rtunion_def]*, !dbg !5411
  %arrayidx78 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld77, i64 0, i64 0, !dbg !5411
  %rt_rtx79 = bitcast %union.rtunion_def* %arrayidx78 to %struct.rtx_def**, !dbg !5411
  %39 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx79, align 8, !dbg !5411
  %call80 = call i32 @general_operand(%struct.rtx_def* %39, i32 16), !dbg !5412
  %tobool81 = icmp ne i32 %call80, 0, !dbg !5410
  br label %land.end82

land.end82:                                       ; preds = %land.rhs75, %land.lhs.true72, %if.end67
  %40 = phi i1 [ false, %land.lhs.true72 ], [ false, %if.end67 ], [ %tobool81, %land.rhs75 ], !dbg !5413
  %land.ext = zext i1 %40 to i32, !dbg !5410
  store i32 %land.ext, i32* %retval, align 4, !dbg !5414
  br label %return, !dbg !5414

return:                                           ; preds = %land.end82, %lor.end, %if.then17
  %41 = load i32, i32* %retval, align 4, !dbg !5415
  ret i32 %41, !dbg !5415
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @ordered_comparison_operator(%struct.rtx_def* %op, i32 %mode) #0 !dbg !5416 {
entry:
  %retval = alloca i32, align 4
  %op.addr = alloca %struct.rtx_def*, align 8
  %mode.addr = alloca i32, align 4
  store %struct.rtx_def* %op, %struct.rtx_def** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %op.addr, metadata !5417, metadata !DIExpression()), !dbg !5418
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !5419, metadata !DIExpression()), !dbg !5420
  %0 = load i32, i32* %mode.addr, align 4, !dbg !5421
  %cmp = icmp ne i32 %0, 0, !dbg !5423
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !5424

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5425
  %2 = bitcast %struct.rtx_def* %1 to i32*, !dbg !5425
  %bf.load = load i32, i32* %2, align 8, !dbg !5425
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !5425
  %bf.clear = and i32 %bf.lshr, 255, !dbg !5425
  %3 = load i32, i32* %mode.addr, align 4, !dbg !5426
  %cmp1 = icmp ne i32 %bf.clear, %3, !dbg !5427
  br i1 %cmp1, label %if.then, label %if.end, !dbg !5428

if.then:                                          ; preds = %land.lhs.true
  store i32 0, i32* %retval, align 4, !dbg !5429
  br label %return, !dbg !5429

if.end:                                           ; preds = %land.lhs.true, %entry
  %4 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5430
  %5 = bitcast %struct.rtx_def* %4 to i32*, !dbg !5430
  %bf.load2 = load i32, i32* %5, align 8, !dbg !5430
  %bf.clear3 = and i32 %bf.load2, 65535, !dbg !5430
  switch i32 %bf.clear3, label %sw.default [
    i32 81, label %sw.bb
    i32 80, label %sw.bb
    i32 85, label %sw.bb
    i32 89, label %sw.bb
    i32 84, label %sw.bb
    i32 88, label %sw.bb
    i32 83, label %sw.bb
    i32 87, label %sw.bb
    i32 82, label %sw.bb
    i32 86, label %sw.bb
  ], !dbg !5431

sw.bb:                                            ; preds = %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end, %if.end
  store i32 1, i32* %retval, align 4, !dbg !5432
  br label %return, !dbg !5432

sw.default:                                       ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !5434
  br label %return, !dbg !5434

return:                                           ; preds = %sw.default, %sw.bb, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !5435
  ret i32 %6, !dbg !5435
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @comparison_operator(%struct.rtx_def* %op, i32 %mode) #0 !dbg !5436 {
entry:
  %op.addr = alloca %struct.rtx_def*, align 8
  %mode.addr = alloca i32, align 4
  store %struct.rtx_def* %op, %struct.rtx_def** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %op.addr, metadata !5437, metadata !DIExpression()), !dbg !5438
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !5439, metadata !DIExpression()), !dbg !5440
  %0 = load i32, i32* %mode.addr, align 4, !dbg !5441
  %cmp = icmp eq i32 %0, 0, !dbg !5442
  br i1 %cmp, label %land.rhs, label %lor.lhs.false, !dbg !5443

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5444
  %2 = bitcast %struct.rtx_def* %1 to i32*, !dbg !5444
  %bf.load = load i32, i32* %2, align 8, !dbg !5444
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !5444
  %bf.clear = and i32 %bf.lshr, 255, !dbg !5444
  %3 = load i32, i32* %mode.addr, align 4, !dbg !5445
  %cmp1 = icmp eq i32 %bf.clear, %3, !dbg !5446
  br i1 %cmp1, label %land.rhs, label %land.end, !dbg !5447

land.rhs:                                         ; preds = %lor.lhs.false, %entry
  %4 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5448
  %5 = bitcast %struct.rtx_def* %4 to i32*, !dbg !5448
  %bf.load2 = load i32, i32* %5, align 8, !dbg !5448
  %bf.clear3 = and i32 %bf.load2, 65535, !dbg !5448
  %idxprom = sext i32 %bf.clear3 to i64, !dbg !5448
  %arrayidx = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom, !dbg !5448
  %6 = load i32, i32* %arrayidx, align 4, !dbg !5448
  %and = and i32 %6, -2, !dbg !5448
  %cmp4 = icmp eq i32 %and, 0, !dbg !5448
  br label %land.end

land.end:                                         ; preds = %land.rhs, %lor.lhs.false
  %7 = phi i1 [ false, %lor.lhs.false ], [ %cmp4, %land.rhs ], !dbg !5449
  %land.ext = zext i1 %7 to i32, !dbg !5447
  ret i32 %land.ext, !dbg !5450
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.rtx_def* @extract_asm_operands(%struct.rtx_def* %body) #0 !dbg !5451 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %body.addr = alloca %struct.rtx_def*, align 8
  %tmp = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %body, %struct.rtx_def** %body.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %body.addr, metadata !5454, metadata !DIExpression()), !dbg !5455
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %tmp, metadata !5456, metadata !DIExpression()), !dbg !5457
  %0 = load %struct.rtx_def*, %struct.rtx_def** %body.addr, align 8, !dbg !5458
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !5458
  %bf.load = load i32, i32* %1, align 8, !dbg !5458
  %bf.clear = and i32 %bf.load, 65535, !dbg !5458
  switch i32 %bf.clear, label %sw.default [
    i32 17, label %sw.bb
    i32 23, label %sw.bb1
    i32 15, label %sw.bb4
  ], !dbg !5459

sw.bb:                                            ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %body.addr, align 8, !dbg !5460
  store %struct.rtx_def* %2, %struct.rtx_def** %retval, align 8, !dbg !5462
  br label %return, !dbg !5462

sw.bb1:                                           ; preds = %entry
  %3 = load %struct.rtx_def*, %struct.rtx_def** %body.addr, align 8, !dbg !5463
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %3, i32 0, i32 1, !dbg !5463
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !5463
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 1, !dbg !5463
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !5463
  %4 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5463
  store %struct.rtx_def* %4, %struct.rtx_def** %tmp, align 8, !dbg !5464
  %5 = load %struct.rtx_def*, %struct.rtx_def** %tmp, align 8, !dbg !5465
  %6 = bitcast %struct.rtx_def* %5 to i32*, !dbg !5465
  %bf.load2 = load i32, i32* %6, align 8, !dbg !5465
  %bf.clear3 = and i32 %bf.load2, 65535, !dbg !5465
  %cmp = icmp eq i32 %bf.clear3, 17, !dbg !5467
  br i1 %cmp, label %if.then, label %if.end, !dbg !5468

if.then:                                          ; preds = %sw.bb1
  %7 = load %struct.rtx_def*, %struct.rtx_def** %tmp, align 8, !dbg !5469
  store %struct.rtx_def* %7, %struct.rtx_def** %retval, align 8, !dbg !5470
  br label %return, !dbg !5470

if.end:                                           ; preds = %sw.bb1
  br label %sw.epilog, !dbg !5471

sw.bb4:                                           ; preds = %entry
  %8 = load %struct.rtx_def*, %struct.rtx_def** %body.addr, align 8, !dbg !5472
  %u5 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i32 0, i32 1, !dbg !5472
  %fld6 = bitcast %union.u* %u5 to [1 x %union.rtunion_def]*, !dbg !5472
  %arrayidx7 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld6, i64 0, i64 0, !dbg !5472
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx7 to %struct.rtvec_def**, !dbg !5472
  %9 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !5472
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %9, i32 0, i32 1, !dbg !5472
  %arrayidx8 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i64 0, i64 0, !dbg !5472
  %10 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx8, align 8, !dbg !5472
  store %struct.rtx_def* %10, %struct.rtx_def** %tmp, align 8, !dbg !5473
  %11 = load %struct.rtx_def*, %struct.rtx_def** %tmp, align 8, !dbg !5474
  %12 = bitcast %struct.rtx_def* %11 to i32*, !dbg !5474
  %bf.load9 = load i32, i32* %12, align 8, !dbg !5474
  %bf.clear10 = and i32 %bf.load9, 65535, !dbg !5474
  %cmp11 = icmp eq i32 %bf.clear10, 17, !dbg !5476
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !5477

if.then12:                                        ; preds = %sw.bb4
  %13 = load %struct.rtx_def*, %struct.rtx_def** %tmp, align 8, !dbg !5478
  store %struct.rtx_def* %13, %struct.rtx_def** %retval, align 8, !dbg !5479
  br label %return, !dbg !5479

if.end13:                                         ; preds = %sw.bb4
  %14 = load %struct.rtx_def*, %struct.rtx_def** %tmp, align 8, !dbg !5480
  %15 = bitcast %struct.rtx_def* %14 to i32*, !dbg !5480
  %bf.load14 = load i32, i32* %15, align 8, !dbg !5480
  %bf.clear15 = and i32 %bf.load14, 65535, !dbg !5480
  %cmp16 = icmp eq i32 %bf.clear15, 23, !dbg !5482
  br i1 %cmp16, label %if.then17, label %if.end27, !dbg !5483

if.then17:                                        ; preds = %if.end13
  %16 = load %struct.rtx_def*, %struct.rtx_def** %tmp, align 8, !dbg !5484
  %u18 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %16, i32 0, i32 1, !dbg !5484
  %fld19 = bitcast %union.u* %u18 to [1 x %union.rtunion_def]*, !dbg !5484
  %arrayidx20 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld19, i64 0, i64 1, !dbg !5484
  %rt_rtx21 = bitcast %union.rtunion_def* %arrayidx20 to %struct.rtx_def**, !dbg !5484
  %17 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx21, align 8, !dbg !5484
  store %struct.rtx_def* %17, %struct.rtx_def** %tmp, align 8, !dbg !5486
  %18 = load %struct.rtx_def*, %struct.rtx_def** %tmp, align 8, !dbg !5487
  %19 = bitcast %struct.rtx_def* %18 to i32*, !dbg !5487
  %bf.load22 = load i32, i32* %19, align 8, !dbg !5487
  %bf.clear23 = and i32 %bf.load22, 65535, !dbg !5487
  %cmp24 = icmp eq i32 %bf.clear23, 17, !dbg !5489
  br i1 %cmp24, label %if.then25, label %if.end26, !dbg !5490

if.then25:                                        ; preds = %if.then17
  %20 = load %struct.rtx_def*, %struct.rtx_def** %tmp, align 8, !dbg !5491
  store %struct.rtx_def* %20, %struct.rtx_def** %retval, align 8, !dbg !5492
  br label %return, !dbg !5492

if.end26:                                         ; preds = %if.then17
  br label %if.end27, !dbg !5493

if.end27:                                         ; preds = %if.end26, %if.end13
  br label %sw.epilog, !dbg !5494

sw.default:                                       ; preds = %entry
  br label %sw.epilog, !dbg !5495

sw.epilog:                                        ; preds = %sw.default, %if.end27, %if.end
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !5496
  br label %return, !dbg !5496

return:                                           ; preds = %sw.epilog, %if.then25, %if.then12, %if.then, %sw.bb
  %21 = load %struct.rtx_def*, %struct.rtx_def** %retval, align 8, !dbg !5497
  ret %struct.rtx_def* %21, !dbg !5497
}

declare dso_local void @fancy_abort(i8*, i32, i8*) #2

declare dso_local i64 @strtoul(i8*, i8**, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @offsettable_nonstrict_memref_p(%struct.rtx_def* %op) #0 !dbg !5498 {
entry:
  %op.addr = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %op, %struct.rtx_def** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %op.addr, metadata !5499, metadata !DIExpression()), !dbg !5500
  %0 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5501
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !5501
  %bf.load = load i32, i32* %1, align 8, !dbg !5501
  %bf.clear = and i32 %bf.load, 65535, !dbg !5501
  %cmp = icmp eq i32 %bf.clear, 43, !dbg !5501
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !5502

land.rhs:                                         ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5503
  %3 = bitcast %struct.rtx_def* %2 to i32*, !dbg !5503
  %bf.load1 = load i32, i32* %3, align 8, !dbg !5503
  %bf.lshr = lshr i32 %bf.load1, 16, !dbg !5503
  %bf.clear2 = and i32 %bf.lshr, 255, !dbg !5503
  %4 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5504
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i32 0, i32 1, !dbg !5504
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !5504
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !5504
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !5504
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5504
  %6 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5505
  %u3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i32 0, i32 1, !dbg !5505
  %fld4 = bitcast %union.u* %u3 to [1 x %union.rtunion_def]*, !dbg !5505
  %arrayidx5 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld4, i64 0, i64 1, !dbg !5505
  %rt_mem = bitcast %union.rtunion_def* %arrayidx5 to %struct.mem_attrs**, !dbg !5505
  %7 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !5505
  %cmp6 = icmp eq %struct.mem_attrs* %7, null, !dbg !5505
  br i1 %cmp6, label %cond.true, label %cond.false, !dbg !5505

cond.true:                                        ; preds = %land.rhs
  br label %cond.end, !dbg !5505

cond.false:                                       ; preds = %land.rhs
  %8 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5505
  %u7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i32 0, i32 1, !dbg !5505
  %fld8 = bitcast %union.u* %u7 to [1 x %union.rtunion_def]*, !dbg !5505
  %arrayidx9 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld8, i64 0, i64 1, !dbg !5505
  %rt_mem10 = bitcast %union.rtunion_def* %arrayidx9 to %struct.mem_attrs**, !dbg !5505
  %9 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem10, align 8, !dbg !5505
  %addrspace = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %9, i32 0, i32 5, !dbg !5505
  %10 = load i8, i8* %addrspace, align 8, !dbg !5505
  %conv = zext i8 %10 to i32, !dbg !5505
  br label %cond.end, !dbg !5505

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %conv, %cond.false ], !dbg !5505
  %conv11 = trunc i32 %cond to i8, !dbg !5505
  %call = call i32 @offsettable_address_addr_space_p(i32 0, i32 %bf.clear2, %struct.rtx_def* %5, i8 zeroext %conv11), !dbg !5506
  %tobool = icmp ne i32 %call, 0, !dbg !5502
  br label %land.end

land.end:                                         ; preds = %cond.end, %entry
  %11 = phi i1 [ false, %entry ], [ %tobool, %cond.end ], !dbg !5507
  %land.ext = zext i1 %11 to i32, !dbg !5502
  ret i32 %land.ext, !dbg !5508
}

declare dso_local zeroext i8 @constraint_satisfied_p(%struct.rtx_def*, i32) #2

declare dso_local i32 @lookup_constraint(i8*) #2

declare dso_local zeroext i8 @insn_const_int_ok_for_constraint(i64, i32) #2

declare dso_local i32 @regclass_for_constraint(i32) #2

; Function Attrs: noinline nounwind uwtable
define internal i64 @insn_constraint_len(i8 signext %fc, i8* %str) #0 !dbg !5509 {
entry:
  %retval = alloca i64, align 8
  %fc.addr = alloca i8, align 1
  %str.addr = alloca i8*, align 8
  store i8 %fc, i8* %fc.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %fc.addr, metadata !5513, metadata !DIExpression()), !dbg !5514
  store i8* %str, i8** %str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %str.addr, metadata !5515, metadata !DIExpression()), !dbg !5516
  %0 = load i8, i8* %fc.addr, align 1, !dbg !5517
  %conv = sext i8 %0 to i32, !dbg !5517
  switch i32 %conv, label %sw.default [
    i32 89, label %sw.bb
  ], !dbg !5518

sw.bb:                                            ; preds = %entry
  store i64 2, i64* %retval, align 8, !dbg !5519
  br label %return, !dbg !5519

sw.default:                                       ; preds = %entry
  br label %sw.epilog, !dbg !5521

sw.epilog:                                        ; preds = %sw.default
  store i64 1, i64* %retval, align 8, !dbg !5522
  br label %return, !dbg !5522

return:                                           ; preds = %sw.epilog, %sw.bb
  %1 = load i64, i64* %retval, align 8, !dbg !5523
  ret i64 %1, !dbg !5523
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.rtx_def** @find_constant_term_loc(%struct.rtx_def** %p) #0 !dbg !5524 {
entry:
  %retval = alloca %struct.rtx_def**, align 8
  %p.addr = alloca %struct.rtx_def**, align 8
  %tem = alloca %struct.rtx_def**, align 8
  %code = alloca i32, align 4
  store %struct.rtx_def** %p, %struct.rtx_def*** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def*** %p.addr, metadata !5527, metadata !DIExpression()), !dbg !5528
  call void @llvm.dbg.declare(metadata %struct.rtx_def*** %tem, metadata !5529, metadata !DIExpression()), !dbg !5530
  call void @llvm.dbg.declare(metadata i32* %code, metadata !5531, metadata !DIExpression()), !dbg !5532
  %0 = load %struct.rtx_def**, %struct.rtx_def*** %p.addr, align 8, !dbg !5533
  %1 = load %struct.rtx_def*, %struct.rtx_def** %0, align 8, !dbg !5533
  %2 = bitcast %struct.rtx_def* %1 to i32*, !dbg !5533
  %bf.load = load i32, i32* %2, align 8, !dbg !5533
  %bf.clear = and i32 %bf.load, 65535, !dbg !5533
  store i32 %bf.clear, i32* %code, align 4, !dbg !5532
  %3 = load i32, i32* %code, align 4, !dbg !5534
  %cmp = icmp eq i32 %3, 30, !dbg !5536
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !5537

lor.lhs.false:                                    ; preds = %entry
  %4 = load i32, i32* %code, align 4, !dbg !5538
  %cmp1 = icmp eq i32 %4, 45, !dbg !5539
  br i1 %cmp1, label %if.then, label %lor.lhs.false2, !dbg !5540

lor.lhs.false2:                                   ; preds = %lor.lhs.false
  %5 = load i32, i32* %code, align 4, !dbg !5541
  %cmp3 = icmp eq i32 %5, 44, !dbg !5542
  br i1 %cmp3, label %if.then, label %lor.lhs.false4, !dbg !5543

lor.lhs.false4:                                   ; preds = %lor.lhs.false2
  %6 = load i32, i32* %code, align 4, !dbg !5544
  %cmp5 = icmp eq i32 %6, 35, !dbg !5545
  br i1 %cmp5, label %if.then, label %if.end, !dbg !5546

if.then:                                          ; preds = %lor.lhs.false4, %lor.lhs.false2, %lor.lhs.false, %entry
  %7 = load %struct.rtx_def**, %struct.rtx_def*** %p.addr, align 8, !dbg !5547
  store %struct.rtx_def** %7, %struct.rtx_def*** %retval, align 8, !dbg !5548
  br label %return, !dbg !5548

if.end:                                           ; preds = %lor.lhs.false4
  %8 = load %struct.rtx_def**, %struct.rtx_def*** %p.addr, align 8, !dbg !5549
  %9 = load %struct.rtx_def*, %struct.rtx_def** %8, align 8, !dbg !5549
  %10 = bitcast %struct.rtx_def* %9 to i32*, !dbg !5549
  %bf.load6 = load i32, i32* %10, align 8, !dbg !5549
  %bf.clear7 = and i32 %bf.load6, 65535, !dbg !5549
  %cmp8 = icmp ne i32 %bf.clear7, 49, !dbg !5551
  br i1 %cmp8, label %if.then9, label %if.end10, !dbg !5552

if.then9:                                         ; preds = %if.end
  store %struct.rtx_def** null, %struct.rtx_def*** %retval, align 8, !dbg !5553
  br label %return, !dbg !5553

if.end10:                                         ; preds = %if.end
  %11 = load %struct.rtx_def**, %struct.rtx_def*** %p.addr, align 8, !dbg !5554
  %12 = load %struct.rtx_def*, %struct.rtx_def** %11, align 8, !dbg !5554
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %12, i32 0, i32 1, !dbg !5554
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !5554
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !5554
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !5554
  %13 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5554
  %tobool = icmp ne %struct.rtx_def* %13, null, !dbg !5554
  br i1 %tobool, label %land.lhs.true, label %if.end36, !dbg !5556

land.lhs.true:                                    ; preds = %if.end10
  %14 = load %struct.rtx_def**, %struct.rtx_def*** %p.addr, align 8, !dbg !5557
  %15 = load %struct.rtx_def*, %struct.rtx_def** %14, align 8, !dbg !5557
  %u11 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i32 0, i32 1, !dbg !5557
  %fld12 = bitcast %union.u* %u11 to [1 x %union.rtunion_def]*, !dbg !5557
  %arrayidx13 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld12, i64 0, i64 0, !dbg !5557
  %rt_rtx14 = bitcast %union.rtunion_def* %arrayidx13 to %struct.rtx_def**, !dbg !5557
  %16 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx14, align 8, !dbg !5557
  %17 = bitcast %struct.rtx_def* %16 to i32*, !dbg !5557
  %bf.load15 = load i32, i32* %17, align 8, !dbg !5557
  %bf.clear16 = and i32 %bf.load15, 65535, !dbg !5557
  %idxprom = sext i32 %bf.clear16 to i64, !dbg !5557
  %arrayidx17 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom, !dbg !5557
  %18 = load i32, i32* %arrayidx17, align 4, !dbg !5557
  %cmp18 = icmp eq i32 %18, 9, !dbg !5557
  br i1 %cmp18, label %land.lhs.true19, label %if.end36, !dbg !5558

land.lhs.true19:                                  ; preds = %land.lhs.true
  %19 = load %struct.rtx_def**, %struct.rtx_def*** %p.addr, align 8, !dbg !5559
  %20 = load %struct.rtx_def*, %struct.rtx_def** %19, align 8, !dbg !5559
  %u20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %20, i32 0, i32 1, !dbg !5559
  %fld21 = bitcast %union.u* %u20 to [1 x %union.rtunion_def]*, !dbg !5559
  %arrayidx22 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld21, i64 0, i64 1, !dbg !5559
  %rt_rtx23 = bitcast %union.rtunion_def* %arrayidx22 to %struct.rtx_def**, !dbg !5559
  %21 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx23, align 8, !dbg !5559
  %tobool24 = icmp ne %struct.rtx_def* %21, null, !dbg !5559
  br i1 %tobool24, label %land.lhs.true25, label %if.end36, !dbg !5560

land.lhs.true25:                                  ; preds = %land.lhs.true19
  %22 = load %struct.rtx_def**, %struct.rtx_def*** %p.addr, align 8, !dbg !5561
  %23 = load %struct.rtx_def*, %struct.rtx_def** %22, align 8, !dbg !5561
  %u26 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %23, i32 0, i32 1, !dbg !5561
  %fld27 = bitcast %union.u* %u26 to [1 x %union.rtunion_def]*, !dbg !5561
  %arrayidx28 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld27, i64 0, i64 1, !dbg !5561
  %rt_rtx29 = bitcast %union.rtunion_def* %arrayidx28 to %struct.rtx_def**, !dbg !5561
  %24 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx29, align 8, !dbg !5561
  %25 = bitcast %struct.rtx_def* %24 to i32*, !dbg !5561
  %bf.load30 = load i32, i32* %25, align 8, !dbg !5561
  %bf.clear31 = and i32 %bf.load30, 65535, !dbg !5561
  %idxprom32 = sext i32 %bf.clear31 to i64, !dbg !5561
  %arrayidx33 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom32, !dbg !5561
  %26 = load i32, i32* %arrayidx33, align 4, !dbg !5561
  %cmp34 = icmp eq i32 %26, 9, !dbg !5561
  br i1 %cmp34, label %if.then35, label %if.end36, !dbg !5562

if.then35:                                        ; preds = %land.lhs.true25
  %27 = load %struct.rtx_def**, %struct.rtx_def*** %p.addr, align 8, !dbg !5563
  store %struct.rtx_def** %27, %struct.rtx_def*** %retval, align 8, !dbg !5564
  br label %return, !dbg !5564

if.end36:                                         ; preds = %land.lhs.true25, %land.lhs.true19, %land.lhs.true, %if.end10
  %28 = load %struct.rtx_def**, %struct.rtx_def*** %p.addr, align 8, !dbg !5565
  %29 = load %struct.rtx_def*, %struct.rtx_def** %28, align 8, !dbg !5565
  %u37 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %29, i32 0, i32 1, !dbg !5565
  %fld38 = bitcast %union.u* %u37 to [1 x %union.rtunion_def]*, !dbg !5565
  %arrayidx39 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld38, i64 0, i64 0, !dbg !5565
  %rt_rtx40 = bitcast %union.rtunion_def* %arrayidx39 to %struct.rtx_def**, !dbg !5565
  %30 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx40, align 8, !dbg !5565
  %cmp41 = icmp ne %struct.rtx_def* %30, null, !dbg !5567
  br i1 %cmp41, label %if.then42, label %if.end50, !dbg !5568

if.then42:                                        ; preds = %if.end36
  %31 = load %struct.rtx_def**, %struct.rtx_def*** %p.addr, align 8, !dbg !5569
  %32 = load %struct.rtx_def*, %struct.rtx_def** %31, align 8, !dbg !5569
  %u43 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %32, i32 0, i32 1, !dbg !5569
  %fld44 = bitcast %union.u* %u43 to [1 x %union.rtunion_def]*, !dbg !5569
  %arrayidx45 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld44, i64 0, i64 0, !dbg !5569
  %rt_rtx46 = bitcast %union.rtunion_def* %arrayidx45 to %struct.rtx_def**, !dbg !5569
  %call = call %struct.rtx_def** @find_constant_term_loc(%struct.rtx_def** %rt_rtx46), !dbg !5571
  store %struct.rtx_def** %call, %struct.rtx_def*** %tem, align 8, !dbg !5572
  %33 = load %struct.rtx_def**, %struct.rtx_def*** %tem, align 8, !dbg !5573
  %cmp47 = icmp ne %struct.rtx_def** %33, null, !dbg !5575
  br i1 %cmp47, label %if.then48, label %if.end49, !dbg !5576

if.then48:                                        ; preds = %if.then42
  %34 = load %struct.rtx_def**, %struct.rtx_def*** %tem, align 8, !dbg !5577
  store %struct.rtx_def** %34, %struct.rtx_def*** %retval, align 8, !dbg !5578
  br label %return, !dbg !5578

if.end49:                                         ; preds = %if.then42
  br label %if.end50, !dbg !5579

if.end50:                                         ; preds = %if.end49, %if.end36
  %35 = load %struct.rtx_def**, %struct.rtx_def*** %p.addr, align 8, !dbg !5580
  %36 = load %struct.rtx_def*, %struct.rtx_def** %35, align 8, !dbg !5580
  %u51 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %36, i32 0, i32 1, !dbg !5580
  %fld52 = bitcast %union.u* %u51 to [1 x %union.rtunion_def]*, !dbg !5580
  %arrayidx53 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld52, i64 0, i64 1, !dbg !5580
  %rt_rtx54 = bitcast %union.rtunion_def* %arrayidx53 to %struct.rtx_def**, !dbg !5580
  %37 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx54, align 8, !dbg !5580
  %cmp55 = icmp ne %struct.rtx_def* %37, null, !dbg !5582
  br i1 %cmp55, label %if.then56, label %if.end65, !dbg !5583

if.then56:                                        ; preds = %if.end50
  %38 = load %struct.rtx_def**, %struct.rtx_def*** %p.addr, align 8, !dbg !5584
  %39 = load %struct.rtx_def*, %struct.rtx_def** %38, align 8, !dbg !5584
  %u57 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %39, i32 0, i32 1, !dbg !5584
  %fld58 = bitcast %union.u* %u57 to [1 x %union.rtunion_def]*, !dbg !5584
  %arrayidx59 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld58, i64 0, i64 1, !dbg !5584
  %rt_rtx60 = bitcast %union.rtunion_def* %arrayidx59 to %struct.rtx_def**, !dbg !5584
  %call61 = call %struct.rtx_def** @find_constant_term_loc(%struct.rtx_def** %rt_rtx60), !dbg !5586
  store %struct.rtx_def** %call61, %struct.rtx_def*** %tem, align 8, !dbg !5587
  %40 = load %struct.rtx_def**, %struct.rtx_def*** %tem, align 8, !dbg !5588
  %cmp62 = icmp ne %struct.rtx_def** %40, null, !dbg !5590
  br i1 %cmp62, label %if.then63, label %if.end64, !dbg !5591

if.then63:                                        ; preds = %if.then56
  %41 = load %struct.rtx_def**, %struct.rtx_def*** %tem, align 8, !dbg !5592
  store %struct.rtx_def** %41, %struct.rtx_def*** %retval, align 8, !dbg !5593
  br label %return, !dbg !5593

if.end64:                                         ; preds = %if.then56
  br label %if.end65, !dbg !5594

if.end65:                                         ; preds = %if.end64, %if.end50
  store %struct.rtx_def** null, %struct.rtx_def*** %retval, align 8, !dbg !5595
  br label %return, !dbg !5595

return:                                           ; preds = %if.end65, %if.then63, %if.then48, %if.then35, %if.then9, %if.then
  %42 = load %struct.rtx_def**, %struct.rtx_def*** %retval, align 8, !dbg !5596
  ret %struct.rtx_def** %42, !dbg !5596
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @offsettable_memref_p(%struct.rtx_def* %op) #0 !dbg !5597 {
entry:
  %op.addr = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %op, %struct.rtx_def** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %op.addr, metadata !5598, metadata !DIExpression()), !dbg !5599
  %0 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5600
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !5600
  %bf.load = load i32, i32* %1, align 8, !dbg !5600
  %bf.clear = and i32 %bf.load, 65535, !dbg !5600
  %cmp = icmp eq i32 %bf.clear, 43, !dbg !5600
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !5601

land.rhs:                                         ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5602
  %3 = bitcast %struct.rtx_def* %2 to i32*, !dbg !5602
  %bf.load1 = load i32, i32* %3, align 8, !dbg !5602
  %bf.lshr = lshr i32 %bf.load1, 16, !dbg !5602
  %bf.clear2 = and i32 %bf.lshr, 255, !dbg !5602
  %4 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5603
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %4, i32 0, i32 1, !dbg !5603
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !5603
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !5603
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !5603
  %5 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5603
  %6 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5604
  %u3 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i32 0, i32 1, !dbg !5604
  %fld4 = bitcast %union.u* %u3 to [1 x %union.rtunion_def]*, !dbg !5604
  %arrayidx5 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld4, i64 0, i64 1, !dbg !5604
  %rt_mem = bitcast %union.rtunion_def* %arrayidx5 to %struct.mem_attrs**, !dbg !5604
  %7 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem, align 8, !dbg !5604
  %cmp6 = icmp eq %struct.mem_attrs* %7, null, !dbg !5604
  br i1 %cmp6, label %cond.true, label %cond.false, !dbg !5604

cond.true:                                        ; preds = %land.rhs
  br label %cond.end, !dbg !5604

cond.false:                                       ; preds = %land.rhs
  %8 = load %struct.rtx_def*, %struct.rtx_def** %op.addr, align 8, !dbg !5604
  %u7 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i32 0, i32 1, !dbg !5604
  %fld8 = bitcast %union.u* %u7 to [1 x %union.rtunion_def]*, !dbg !5604
  %arrayidx9 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld8, i64 0, i64 1, !dbg !5604
  %rt_mem10 = bitcast %union.rtunion_def* %arrayidx9 to %struct.mem_attrs**, !dbg !5604
  %9 = load %struct.mem_attrs*, %struct.mem_attrs** %rt_mem10, align 8, !dbg !5604
  %addrspace = getelementptr inbounds %struct.mem_attrs, %struct.mem_attrs* %9, i32 0, i32 5, !dbg !5604
  %10 = load i8, i8* %addrspace, align 8, !dbg !5604
  %conv = zext i8 %10 to i32, !dbg !5604
  br label %cond.end, !dbg !5604

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %conv, %cond.false ], !dbg !5604
  %conv11 = trunc i32 %cond to i8, !dbg !5604
  %call = call i32 @offsettable_address_addr_space_p(i32 1, i32 %bf.clear2, %struct.rtx_def* %5, i8 zeroext %conv11), !dbg !5605
  %tobool = icmp ne i32 %call, 0, !dbg !5601
  br label %land.end

land.end:                                         ; preds = %cond.end, %entry
  %11 = phi i1 [ false, %entry ], [ %tobool, %cond.end ], !dbg !5606
  %land.ext = zext i1 %11 to i32, !dbg !5601
  ret i32 %land.ext, !dbg !5607
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @offsettable_address_addr_space_p(i32 %strictp, i32 %mode, %struct.rtx_def* %y, i8 zeroext %as) #0 !dbg !5608 {
entry:
  %retval = alloca i32, align 4
  %strictp.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %y.addr = alloca %struct.rtx_def*, align 8
  %as.addr = alloca i8, align 1
  %ycode = alloca i32, align 4
  %z = alloca %struct.rtx_def*, align 8
  %y1 = alloca %struct.rtx_def*, align 8
  %y2 = alloca %struct.rtx_def**, align 8
  %addressp = alloca i32 (i32, %struct.rtx_def*, i8)*, align 8
  %mode_sz = alloca i32, align 4
  %good = alloca i32, align 4
  store i32 %strictp, i32* %strictp.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %strictp.addr, metadata !5611, metadata !DIExpression()), !dbg !5612
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !5613, metadata !DIExpression()), !dbg !5614
  store %struct.rtx_def* %y, %struct.rtx_def** %y.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %y.addr, metadata !5615, metadata !DIExpression()), !dbg !5616
  store i8 %as, i8* %as.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %as.addr, metadata !5617, metadata !DIExpression()), !dbg !5618
  call void @llvm.dbg.declare(metadata i32* %ycode, metadata !5619, metadata !DIExpression()), !dbg !5620
  %0 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8, !dbg !5621
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !5621
  %bf.load = load i32, i32* %1, align 8, !dbg !5621
  %bf.clear = and i32 %bf.load, 65535, !dbg !5621
  store i32 %bf.clear, i32* %ycode, align 4, !dbg !5620
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %z, metadata !5622, metadata !DIExpression()), !dbg !5623
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %y1, metadata !5624, metadata !DIExpression()), !dbg !5625
  %2 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8, !dbg !5626
  store %struct.rtx_def* %2, %struct.rtx_def** %y1, align 8, !dbg !5625
  call void @llvm.dbg.declare(metadata %struct.rtx_def*** %y2, metadata !5627, metadata !DIExpression()), !dbg !5628
  call void @llvm.dbg.declare(metadata i32 (i32, %struct.rtx_def*, i8)** %addressp, metadata !5629, metadata !DIExpression()), !dbg !5631
  %3 = load i32, i32* %strictp.addr, align 4, !dbg !5632
  %tobool = icmp ne i32 %3, 0, !dbg !5632
  %4 = zext i1 %tobool to i64, !dbg !5632
  %cond = select i1 %tobool, i32 (i32, %struct.rtx_def*, i8)* @strict_memory_address_addr_space_p, i32 (i32, %struct.rtx_def*, i8)* @memory_address_addr_space_p, !dbg !5632
  store i32 (i32, %struct.rtx_def*, i8)* %cond, i32 (i32, %struct.rtx_def*, i8)** %addressp, align 8, !dbg !5631
  call void @llvm.dbg.declare(metadata i32* %mode_sz, metadata !5633, metadata !DIExpression()), !dbg !5634
  %5 = load i32, i32* %mode.addr, align 4, !dbg !5635
  %idxprom = zext i32 %5 to i64, !dbg !5635
  %arrayidx = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom, !dbg !5635
  %6 = load i8, i8* %arrayidx, align 1, !dbg !5635
  %conv = zext i8 %6 to i16, !dbg !5635
  %conv1 = zext i16 %conv to i32, !dbg !5635
  store i32 %conv1, i32* %mode_sz, align 4, !dbg !5634
  %7 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8, !dbg !5636
  %call = call zeroext i8 @constant_address_p(%struct.rtx_def* %7), !dbg !5636
  %tobool2 = icmp ne i8 %call, 0, !dbg !5636
  br i1 %tobool2, label %if.then, label %if.end, !dbg !5638

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !5639
  br label %return, !dbg !5639

if.end:                                           ; preds = %entry
  %8 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8, !dbg !5640
  %call3 = call i32 @mode_dependent_address_p(%struct.rtx_def* %8), !dbg !5642
  %tobool4 = icmp ne i32 %call3, 0, !dbg !5642
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !5643

if.then5:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !5644
  br label %return, !dbg !5644

if.end6:                                          ; preds = %if.end
  %9 = load i32, i32* %mode_sz, align 4, !dbg !5645
  %cmp = icmp eq i32 %9, 0, !dbg !5647
  br i1 %cmp, label %if.then8, label %if.end12, !dbg !5648

if.then8:                                         ; preds = %if.end6
  %10 = load i32, i32* @ix86_isa_flags, align 4, !dbg !5649
  %and = and i32 %10, 32, !dbg !5649
  %cmp9 = icmp ne i32 %and, 0, !dbg !5649
  %11 = zext i1 %cmp9 to i64, !dbg !5649
  %cond11 = select i1 %cmp9, i32 256, i32 128, !dbg !5649
  %div = sdiv i32 %cond11, 8, !dbg !5650
  store i32 %div, i32* %mode_sz, align 4, !dbg !5651
  br label %if.end12, !dbg !5652

if.end12:                                         ; preds = %if.then8, %if.end6
  %12 = load i32, i32* %ycode, align 4, !dbg !5653
  %cmp13 = icmp eq i32 %12, 49, !dbg !5655
  br i1 %cmp13, label %land.lhs.true, label %if.end21, !dbg !5656

land.lhs.true:                                    ; preds = %if.end12
  %call15 = call %struct.rtx_def** @find_constant_term_loc(%struct.rtx_def** %y1), !dbg !5657
  store %struct.rtx_def** %call15, %struct.rtx_def*** %y2, align 8, !dbg !5658
  %tobool16 = icmp ne %struct.rtx_def** %call15, null, !dbg !5658
  br i1 %tobool16, label %if.then17, label %if.end21, !dbg !5659

if.then17:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata i32* %good, metadata !5660, metadata !DIExpression()), !dbg !5662
  %13 = load %struct.rtx_def**, %struct.rtx_def*** %y2, align 8, !dbg !5663
  %14 = load %struct.rtx_def*, %struct.rtx_def** %13, align 8, !dbg !5664
  store %struct.rtx_def* %14, %struct.rtx_def** %y1, align 8, !dbg !5665
  %15 = load %struct.rtx_def**, %struct.rtx_def*** %y2, align 8, !dbg !5666
  %16 = load %struct.rtx_def*, %struct.rtx_def** %15, align 8, !dbg !5667
  %17 = load i32, i32* %mode_sz, align 4, !dbg !5668
  %sub = sub i32 %17, 1, !dbg !5669
  %conv18 = zext i32 %sub to i64, !dbg !5668
  %call19 = call %struct.rtx_def* @plus_constant(%struct.rtx_def* %16, i64 %conv18), !dbg !5670
  %18 = load %struct.rtx_def**, %struct.rtx_def*** %y2, align 8, !dbg !5671
  store %struct.rtx_def* %call19, %struct.rtx_def** %18, align 8, !dbg !5672
  %19 = load i32 (i32, %struct.rtx_def*, i8)*, i32 (i32, %struct.rtx_def*, i8)** %addressp, align 8, !dbg !5673
  %20 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8, !dbg !5674
  %21 = load i8, i8* %as.addr, align 1, !dbg !5675
  %call20 = call i32 %19(i32 14, %struct.rtx_def* %20, i8 zeroext %21), !dbg !5676
  store i32 %call20, i32* %good, align 4, !dbg !5677
  %22 = load %struct.rtx_def*, %struct.rtx_def** %y1, align 8, !dbg !5678
  %23 = load %struct.rtx_def**, %struct.rtx_def*** %y2, align 8, !dbg !5679
  store %struct.rtx_def* %22, %struct.rtx_def** %23, align 8, !dbg !5680
  %24 = load i32, i32* %good, align 4, !dbg !5681
  store i32 %24, i32* %retval, align 4, !dbg !5682
  br label %return, !dbg !5682

if.end21:                                         ; preds = %land.lhs.true, %if.end12
  %25 = load i32, i32* %ycode, align 4, !dbg !5683
  %idxprom22 = sext i32 %25 to i64, !dbg !5683
  %arrayidx23 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom22, !dbg !5683
  %26 = load i32, i32* %arrayidx23, align 4, !dbg !5683
  %cmp24 = icmp eq i32 %26, 12, !dbg !5685
  br i1 %cmp24, label %if.then26, label %if.end27, !dbg !5686

if.then26:                                        ; preds = %if.end21
  store i32 0, i32* %retval, align 4, !dbg !5687
  br label %return, !dbg !5687

if.end27:                                         ; preds = %if.end21
  %27 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8, !dbg !5688
  %28 = bitcast %struct.rtx_def* %27 to i32*, !dbg !5688
  %bf.load28 = load i32, i32* %28, align 8, !dbg !5688
  %bf.clear29 = and i32 %bf.load28, 65535, !dbg !5688
  %cmp30 = icmp eq i32 %bf.clear29, 122, !dbg !5690
  br i1 %cmp30, label %land.lhs.true32, label %if.else, !dbg !5691

land.lhs.true32:                                  ; preds = %if.end27
  %29 = load i32, i32* %mode.addr, align 4, !dbg !5692
  %cmp33 = icmp ne i32 %29, 1, !dbg !5693
  br i1 %cmp33, label %land.lhs.true35, label %if.else, !dbg !5694

land.lhs.true35:                                  ; preds = %land.lhs.true32
  %30 = load i32, i32* %mode_sz, align 4, !dbg !5695
  %31 = load i32, i32* %mode.addr, align 4, !dbg !5696
  %call36 = call i32 @get_mode_alignment(i32 %31), !dbg !5696
  %div37 = udiv i32 %call36, 8, !dbg !5697
  %cmp38 = icmp ule i32 %30, %div37, !dbg !5698
  br i1 %cmp38, label %if.then40, label %if.else, !dbg !5699

if.then40:                                        ; preds = %land.lhs.true35
  %32 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8, !dbg !5700
  %33 = bitcast %struct.rtx_def* %32 to i32*, !dbg !5700
  %bf.load41 = load i32, i32* %33, align 8, !dbg !5700
  %bf.lshr = lshr i32 %bf.load41, 16, !dbg !5700
  %bf.clear42 = and i32 %bf.lshr, 255, !dbg !5700
  %34 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8, !dbg !5700
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %34, i32 0, i32 1, !dbg !5700
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !5700
  %arrayidx43 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !5700
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx43 to %struct.rtx_def**, !dbg !5700
  %35 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5700
  %36 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8, !dbg !5700
  %u44 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %36, i32 0, i32 1, !dbg !5700
  %fld45 = bitcast %union.u* %u44 to [1 x %union.rtunion_def]*, !dbg !5700
  %arrayidx46 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld45, i64 0, i64 1, !dbg !5700
  %rt_rtx47 = bitcast %union.rtunion_def* %arrayidx46 to %struct.rtx_def**, !dbg !5700
  %37 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx47, align 8, !dbg !5700
  %38 = load i32, i32* %mode_sz, align 4, !dbg !5700
  %sub48 = sub i32 %38, 1, !dbg !5700
  %conv49 = zext i32 %sub48 to i64, !dbg !5700
  %call50 = call %struct.rtx_def* @plus_constant(%struct.rtx_def* %37, i64 %conv49), !dbg !5700
  %call51 = call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 122, i32 %bf.clear42, %struct.rtx_def* %35, %struct.rtx_def* %call50), !dbg !5700
  store %struct.rtx_def* %call51, %struct.rtx_def** %z, align 8, !dbg !5701
  br label %if.end55, !dbg !5702

if.else:                                          ; preds = %land.lhs.true35, %land.lhs.true32, %if.end27
  %39 = load %struct.rtx_def*, %struct.rtx_def** %y.addr, align 8, !dbg !5703
  %40 = load i32, i32* %mode_sz, align 4, !dbg !5704
  %sub52 = sub i32 %40, 1, !dbg !5705
  %conv53 = zext i32 %sub52 to i64, !dbg !5704
  %call54 = call %struct.rtx_def* @plus_constant(%struct.rtx_def* %39, i64 %conv53), !dbg !5706
  store %struct.rtx_def* %call54, %struct.rtx_def** %z, align 8, !dbg !5707
  br label %if.end55

if.end55:                                         ; preds = %if.else, %if.then40
  %41 = load i32 (i32, %struct.rtx_def*, i8)*, i32 (i32, %struct.rtx_def*, i8)** %addressp, align 8, !dbg !5708
  %42 = load %struct.rtx_def*, %struct.rtx_def** %z, align 8, !dbg !5709
  %43 = load i8, i8* %as.addr, align 1, !dbg !5710
  %call56 = call i32 %41(i32 14, %struct.rtx_def* %42, i8 zeroext %43), !dbg !5711
  store i32 %call56, i32* %retval, align 4, !dbg !5712
  br label %return, !dbg !5712

return:                                           ; preds = %if.end55, %if.then26, %if.then17, %if.then5, %if.then
  %44 = load i32, i32* %retval, align 4, !dbg !5713
  ret i32 %44, !dbg !5713
}

declare dso_local i32 @strict_memory_address_addr_space_p(i32, %struct.rtx_def*, i8 zeroext) #2

declare dso_local zeroext i8 @constant_address_p(%struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @mode_dependent_address_p(%struct.rtx_def* %addr) #0 !dbg !5714 {
entry:
  %retval = alloca i32, align 4
  %addr.addr = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %addr, %struct.rtx_def** %addr.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %addr.addr, metadata !5715, metadata !DIExpression()), !dbg !5716
  %0 = load %struct.rtx_def*, %struct.rtx_def** %addr.addr, align 8, !dbg !5717
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !5717
  %bf.load = load i32, i32* %1, align 8, !dbg !5717
  %bf.clear = and i32 %bf.load, 65535, !dbg !5717
  %cmp = icmp eq i32 %bf.clear, 75, !dbg !5719
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !5720

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %addr.addr, align 8, !dbg !5721
  %3 = bitcast %struct.rtx_def* %2 to i32*, !dbg !5721
  %bf.load1 = load i32, i32* %3, align 8, !dbg !5721
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !5721
  %cmp3 = icmp eq i32 %bf.clear2, 77, !dbg !5722
  br i1 %cmp3, label %if.then, label %lor.lhs.false4, !dbg !5723

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %4 = load %struct.rtx_def*, %struct.rtx_def** %addr.addr, align 8, !dbg !5724
  %5 = bitcast %struct.rtx_def* %4 to i32*, !dbg !5724
  %bf.load5 = load i32, i32* %5, align 8, !dbg !5724
  %bf.clear6 = and i32 %bf.load5, 65535, !dbg !5724
  %cmp7 = icmp eq i32 %bf.clear6, 74, !dbg !5725
  br i1 %cmp7, label %if.then, label %lor.lhs.false8, !dbg !5726

lor.lhs.false8:                                   ; preds = %lor.lhs.false4
  %6 = load %struct.rtx_def*, %struct.rtx_def** %addr.addr, align 8, !dbg !5727
  %7 = bitcast %struct.rtx_def* %6 to i32*, !dbg !5727
  %bf.load9 = load i32, i32* %7, align 8, !dbg !5727
  %bf.clear10 = and i32 %bf.load9, 65535, !dbg !5727
  %cmp11 = icmp eq i32 %bf.clear10, 76, !dbg !5728
  br i1 %cmp11, label %if.then, label %if.end, !dbg !5729

if.then:                                          ; preds = %lor.lhs.false8, %lor.lhs.false4, %lor.lhs.false, %entry
  store i32 1, i32* %retval, align 4, !dbg !5730
  br label %return, !dbg !5730

if.end:                                           ; preds = %lor.lhs.false8
  store i32 0, i32* %retval, align 4, !dbg !5731
  br label %return, !dbg !5731

win:                                              ; No predecessors!
  call void @llvm.dbg.label(metadata !5732), !dbg !5733
  store i32 1, i32* %retval, align 4, !dbg !5734
  br label %return, !dbg !5734

return:                                           ; preds = %win, %if.end, %if.then
  %8 = load i32, i32* %retval, align 4, !dbg !5735
  ret i32 %8, !dbg !5735
}

declare dso_local %struct.rtx_def* @plus_constant(%struct.rtx_def*, i64) #2

declare dso_local i32 @get_mode_alignment(i32) #2

declare dso_local %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32, i32, %struct.rtx_def*, %struct.rtx_def*) #2

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.label(metadata) #1

; Function Attrs: noinline nounwind uwtable
define dso_local void @extract_insn_cached(%struct.rtx_def* %insn) #0 !dbg !5736 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !5737, metadata !DIExpression()), !dbg !5738
  %0 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 11), align 8, !dbg !5739
  %1 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5741
  %cmp = icmp eq %struct.rtx_def* %0, %1, !dbg !5742
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !5743

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5744
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i32 0, i32 1, !dbg !5744
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !5744
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 6, !dbg !5744
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !5744
  %3 = load i32, i32* %rt_int, align 8, !dbg !5744
  %cmp1 = icmp sge i32 %3, 0, !dbg !5745
  br i1 %cmp1, label %if.then, label %if.end, !dbg !5746

if.then:                                          ; preds = %land.lhs.true
  br label %return, !dbg !5747

if.end:                                           ; preds = %land.lhs.true, %entry
  %4 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5748
  call void @extract_insn(%struct.rtx_def* %4), !dbg !5749
  %5 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5750
  store %struct.rtx_def* %5, %struct.rtx_def** getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 11), align 8, !dbg !5751
  br label %return, !dbg !5752

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !5752
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @extract_constrain_insn_cached(%struct.rtx_def* %insn) #0 !dbg !5753 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !5754, metadata !DIExpression()), !dbg !5755
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5756
  call void @extract_insn_cached(%struct.rtx_def* %0), !dbg !5757
  %1 = load i32, i32* @which_alternative, align 4, !dbg !5758
  %cmp = icmp eq i32 %1, -1, !dbg !5760
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !5761

land.lhs.true:                                    ; preds = %entry
  %2 = load i32, i32* @reload_completed, align 4, !dbg !5762
  %call = call i32 @constrain_operands(i32 %2), !dbg !5763
  %tobool = icmp ne i32 %call, 0, !dbg !5763
  br i1 %tobool, label %if.end, label %if.then, !dbg !5764

if.then:                                          ; preds = %land.lhs.true
  %3 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5765
  call void @_fatal_insn_not_found(%struct.rtx_def* %3, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i32 2021, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !5765
  br label %if.end, !dbg !5765

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  ret void, !dbg !5766
}

declare dso_local void @_fatal_insn_not_found(%struct.rtx_def*, i8*, i32, i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @constrain_operands_cached(i32 %strict) #0 !dbg !5767 {
entry:
  %retval = alloca i32, align 4
  %strict.addr = alloca i32, align 4
  store i32 %strict, i32* %strict.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %strict.addr, metadata !5768, metadata !DIExpression()), !dbg !5769
  %0 = load i32, i32* @which_alternative, align 4, !dbg !5770
  %cmp = icmp eq i32 %0, -1, !dbg !5772
  br i1 %cmp, label %if.then, label %if.else, !dbg !5773

if.then:                                          ; preds = %entry
  %1 = load i32, i32* %strict.addr, align 4, !dbg !5774
  %call = call i32 @constrain_operands(i32 %1), !dbg !5775
  store i32 %call, i32* %retval, align 4, !dbg !5776
  br label %return, !dbg !5776

if.else:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !5777
  br label %return, !dbg !5777

return:                                           ; preds = %if.else, %if.then
  %2 = load i32, i32* %retval, align 4, !dbg !5778
  ret i32 %2, !dbg !5778
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @recog_memoized(%struct.rtx_def* %insn) #0 !dbg !5779 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !5780, metadata !DIExpression()), !dbg !5781
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5782
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i32 0, i32 1, !dbg !5782
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !5782
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 6, !dbg !5782
  %rt_int = bitcast %union.rtunion_def* %arrayidx to i32*, !dbg !5782
  %1 = load i32, i32* %rt_int, align 8, !dbg !5782
  %cmp = icmp slt i32 %1, 0, !dbg !5784
  br i1 %cmp, label %if.then, label %if.end, !dbg !5785

if.then:                                          ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5786
  %u1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i32 0, i32 1, !dbg !5786
  %fld2 = bitcast %union.u* %u1 to [1 x %union.rtunion_def]*, !dbg !5786
  %arrayidx3 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2, i64 0, i64 5, !dbg !5786
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx3 to %struct.rtx_def**, !dbg !5786
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !5786
  %4 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5787
  %call = call i32 @recog(%struct.rtx_def* %3, %struct.rtx_def* %4, i32* null), !dbg !5788
  %5 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5789
  %u4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %5, i32 0, i32 1, !dbg !5789
  %fld5 = bitcast %union.u* %u4 to [1 x %union.rtunion_def]*, !dbg !5789
  %arrayidx6 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld5, i64 0, i64 6, !dbg !5789
  %rt_int7 = bitcast %union.rtunion_def* %arrayidx6 to i32*, !dbg !5789
  store i32 %call, i32* %rt_int7, align 8, !dbg !5790
  br label %if.end, !dbg !5789

if.end:                                           ; preds = %if.then, %entry
  %6 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !5791
  %u8 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %6, i32 0, i32 1, !dbg !5791
  %fld9 = bitcast %union.u* %u8 to [1 x %union.rtunion_def]*, !dbg !5791
  %arrayidx10 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld9, i64 0, i64 6, !dbg !5791
  %rt_int11 = bitcast %union.rtunion_def* %arrayidx10 to i32*, !dbg !5791
  %7 = load i32, i32* %rt_int11, align 8, !dbg !5791
  ret i32 %7, !dbg !5792
}

declare dso_local void @insn_extract(%struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @get_attr_enabled(%struct.rtx_def* %insn) #0 !dbg !5793 {
entry:
  %insn.addr = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !5794, metadata !DIExpression()), !dbg !5795
  ret i8 1, !dbg !5796
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @preprocess_constraints() #0 !dbg !5797 {
entry:
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %op_alt = alloca %struct.operand_alternative*, align 8
  %p = alloca i8*, align 8
  %c = alloca i8, align 1
  %end = alloca i8*, align 8
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5798, metadata !DIExpression()), !dbg !5799
  store i32 0, i32* %i, align 4, !dbg !5800
  br label %for.cond, !dbg !5802

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !5803
  %1 = load i8, i8* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 7), align 2, !dbg !5805
  %conv = sext i8 %1 to i32, !dbg !5806
  %cmp = icmp slt i32 %0, %conv, !dbg !5807
  br i1 %cmp, label %for.body, label %for.end, !dbg !5808

for.body:                                         ; preds = %for.cond
  %2 = load i32, i32* %i, align 4, !dbg !5809
  %idxprom = sext i32 %2 to i64, !dbg !5810
  %arrayidx = getelementptr inbounds [30 x [30 x %struct.operand_alternative]], [30 x [30 x %struct.operand_alternative]]* @recog_op_alt, i64 0, i64 %idxprom, !dbg !5810
  %arraydecay = getelementptr inbounds [30 x %struct.operand_alternative], [30 x %struct.operand_alternative]* %arrayidx, i64 0, i64 0, !dbg !5811
  %3 = bitcast %struct.operand_alternative* %arraydecay to i8*, !dbg !5811
  %4 = load i8, i8* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 9), align 8, !dbg !5812
  %conv2 = sext i8 %4 to i64, !dbg !5813
  %mul = mul i64 %conv2, 32, !dbg !5814
  call void @llvm.memset.p0i8.i64(i8* align 16 %3, i8 0, i64 %mul, i1 false), !dbg !5811
  br label %for.inc, !dbg !5811

for.inc:                                          ; preds = %for.body
  %5 = load i32, i32* %i, align 4, !dbg !5815
  %inc = add nsw i32 %5, 1, !dbg !5815
  store i32 %inc, i32* %i, align 4, !dbg !5815
  br label %for.cond, !dbg !5816, !llvm.loop !5817

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !5819
  br label %for.cond3, !dbg !5821

for.cond3:                                        ; preds = %for.inc170, %for.end
  %6 = load i32, i32* %i, align 4, !dbg !5822
  %7 = load i8, i8* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 7), align 2, !dbg !5824
  %conv4 = sext i8 %7 to i32, !dbg !5825
  %cmp5 = icmp slt i32 %6, %conv4, !dbg !5826
  br i1 %cmp5, label %for.body7, label %for.end172, !dbg !5827

for.body7:                                        ; preds = %for.cond3
  call void @llvm.dbg.declare(metadata i32* %j, metadata !5828, metadata !DIExpression()), !dbg !5830
  call void @llvm.dbg.declare(metadata %struct.operand_alternative** %op_alt, metadata !5831, metadata !DIExpression()), !dbg !5833
  call void @llvm.dbg.declare(metadata i8** %p, metadata !5834, metadata !DIExpression()), !dbg !5835
  %8 = load i32, i32* %i, align 4, !dbg !5836
  %idxprom8 = sext i32 %8 to i64, !dbg !5837
  %arrayidx9 = getelementptr inbounds [30 x i8*], [30 x i8*]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 2), i64 0, i64 %idxprom8, !dbg !5837
  %9 = load i8*, i8** %arrayidx9, align 8, !dbg !5837
  store i8* %9, i8** %p, align 8, !dbg !5835
  %10 = load i32, i32* %i, align 4, !dbg !5838
  %idxprom10 = sext i32 %10 to i64, !dbg !5839
  %arrayidx11 = getelementptr inbounds [30 x [30 x %struct.operand_alternative]], [30 x [30 x %struct.operand_alternative]]* @recog_op_alt, i64 0, i64 %idxprom10, !dbg !5839
  %arraydecay12 = getelementptr inbounds [30 x %struct.operand_alternative], [30 x %struct.operand_alternative]* %arrayidx11, i64 0, i64 0, !dbg !5839
  store %struct.operand_alternative* %arraydecay12, %struct.operand_alternative** %op_alt, align 8, !dbg !5840
  store i32 0, i32* %j, align 4, !dbg !5841
  br label %for.cond13, !dbg !5843

for.cond13:                                       ; preds = %for.inc167, %for.body7
  %11 = load i32, i32* %j, align 4, !dbg !5844
  %12 = load i8, i8* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 9), align 8, !dbg !5846
  %conv14 = sext i8 %12 to i32, !dbg !5847
  %cmp15 = icmp slt i32 %11, %conv14, !dbg !5848
  br i1 %cmp15, label %for.body17, label %for.end169, !dbg !5849

for.body17:                                       ; preds = %for.cond13
  %13 = load %struct.operand_alternative*, %struct.operand_alternative** %op_alt, align 8, !dbg !5850
  %14 = load i32, i32* %j, align 4, !dbg !5852
  %idxprom18 = sext i32 %14 to i64, !dbg !5850
  %arrayidx19 = getelementptr inbounds %struct.operand_alternative, %struct.operand_alternative* %13, i64 %idxprom18, !dbg !5850
  %cl = getelementptr inbounds %struct.operand_alternative, %struct.operand_alternative* %arrayidx19, i32 0, i32 1, !dbg !5853
  store i32 0, i32* %cl, align 8, !dbg !5854
  %15 = load i8*, i8** %p, align 8, !dbg !5855
  %16 = load %struct.operand_alternative*, %struct.operand_alternative** %op_alt, align 8, !dbg !5856
  %17 = load i32, i32* %j, align 4, !dbg !5857
  %idxprom20 = sext i32 %17 to i64, !dbg !5856
  %arrayidx21 = getelementptr inbounds %struct.operand_alternative, %struct.operand_alternative* %16, i64 %idxprom20, !dbg !5856
  %constraint = getelementptr inbounds %struct.operand_alternative, %struct.operand_alternative* %arrayidx21, i32 0, i32 0, !dbg !5858
  store i8* %15, i8** %constraint, align 8, !dbg !5859
  %18 = load %struct.operand_alternative*, %struct.operand_alternative** %op_alt, align 8, !dbg !5860
  %19 = load i32, i32* %j, align 4, !dbg !5861
  %idxprom22 = sext i32 %19 to i64, !dbg !5860
  %arrayidx23 = getelementptr inbounds %struct.operand_alternative, %struct.operand_alternative* %18, i64 %idxprom22, !dbg !5860
  %matches = getelementptr inbounds %struct.operand_alternative, %struct.operand_alternative* %arrayidx23, i32 0, i32 3, !dbg !5862
  store i32 -1, i32* %matches, align 8, !dbg !5863
  %20 = load %struct.operand_alternative*, %struct.operand_alternative** %op_alt, align 8, !dbg !5864
  %21 = load i32, i32* %j, align 4, !dbg !5865
  %idxprom24 = sext i32 %21 to i64, !dbg !5864
  %arrayidx25 = getelementptr inbounds %struct.operand_alternative, %struct.operand_alternative* %20, i64 %idxprom24, !dbg !5864
  %matched = getelementptr inbounds %struct.operand_alternative, %struct.operand_alternative* %arrayidx25, i32 0, i32 4, !dbg !5866
  store i32 -1, i32* %matched, align 4, !dbg !5867
  %22 = load i32, i32* %j, align 4, !dbg !5868
  %idxprom26 = sext i32 %22 to i64, !dbg !5870
  %arrayidx27 = getelementptr inbounds [30 x i8], [30 x i8]* getelementptr inbounds (%struct.recog_data, %struct.recog_data* @recog_data, i32 0, i32 10), i64 0, i64 %idxprom26, !dbg !5870
  %23 = load i8, i8* %arrayidx27, align 1, !dbg !5870
  %tobool = icmp ne i8 %23, 0, !dbg !5870
  br i1 %tobool, label %if.end, label %if.then, !dbg !5871

if.then:                                          ; preds = %for.body17
  %24 = load i8*, i8** %p, align 8, !dbg !5872
  %call = call i8* @skip_alternative(i8* %24), !dbg !5874
  store i8* %call, i8** %p, align 8, !dbg !5875
  br label %for.inc167, !dbg !5876

if.end:                                           ; preds = %for.body17
  %25 = load i8*, i8** %p, align 8, !dbg !5877
  %26 = load i8, i8* %25, align 1, !dbg !5879
  %conv28 = sext i8 %26 to i32, !dbg !5879
  %cmp29 = icmp eq i32 %conv28, 0, !dbg !5880
  br i1 %cmp29, label %if.then34, label %lor.lhs.false, !dbg !5881

lor.lhs.false:                                    ; preds = %if.end
  %27 = load i8*, i8** %p, align 8, !dbg !5882
  %28 = load i8, i8* %27, align 1, !dbg !5883
  %conv31 = sext i8 %28 to i32, !dbg !5883
  %cmp32 = icmp eq i32 %conv31, 44, !dbg !5884
  br i1 %cmp32, label %if.then34, label %if.end37, !dbg !5885

if.then34:                                        ; preds = %lor.lhs.false, %if.end
  %29 = load %struct.operand_alternative*, %struct.operand_alternative** %op_alt, align 8, !dbg !5886
  %30 = load i32, i32* %j, align 4, !dbg !5888
  %idxprom35 = sext i32 %30 to i64, !dbg !5886
  %arrayidx36 = getelementptr inbounds %struct.operand_alternative, %struct.operand_alternative* %29, i64 %idxprom35, !dbg !5886
  %anything_ok = getelementptr inbounds %struct.operand_alternative, %struct.operand_alternative* %arrayidx36, i32 0, i32 5, !dbg !5889
  %bf.load = load i8, i8* %anything_ok, align 8, !dbg !5890
  %bf.clear = and i8 %bf.load, 127, !dbg !5890
  %bf.set = or i8 %bf.clear, -128, !dbg !5890
  store i8 %bf.set, i8* %anything_ok, align 8, !dbg !5890
  br label %for.inc167, !dbg !5891

if.end37:                                         ; preds = %lor.lhs.false
  br label %for.cond38, !dbg !5892

for.cond38:                                       ; preds = %sw.epilog, %sw.bb75, %if.end37
  call void @llvm.dbg.declare(metadata i8* %c, metadata !5893, metadata !DIExpression()), !dbg !5897
  %31 = load i8*, i8** %p, align 8, !dbg !5898
  %32 = load i8, i8* %31, align 1, !dbg !5899
  store i8 %32, i8* %c, align 1, !dbg !5897
  %33 = load i8, i8* %c, align 1, !dbg !5900
  %conv39 = sext i8 %33 to i32, !dbg !5900
  %cmp40 = icmp eq i32 %conv39, 35, !dbg !5902
  br i1 %cmp40, label %if.then42, label %if.end49, !dbg !5903

if.then42:                                        ; preds = %for.cond38
  br label %do.body, !dbg !5904

do.body:                                          ; preds = %land.end, %if.then42
  %34 = load i8*, i8** %p, align 8, !dbg !5905
  %incdec.ptr = getelementptr inbounds i8, i8* %34, i32 1, !dbg !5905
  store i8* %incdec.ptr, i8** %p, align 8, !dbg !5905
  %35 = load i8, i8* %incdec.ptr, align 1, !dbg !5906
  store i8 %35, i8* %c, align 1, !dbg !5907
  br label %do.cond, !dbg !5908

do.cond:                                          ; preds = %do.body
  %36 = load i8, i8* %c, align 1, !dbg !5909
  %conv43 = sext i8 %36 to i32, !dbg !5909
  %cmp44 = icmp ne i32 %conv43, 44, !dbg !5910
  br i1 %cmp44, label %land.rhs, label %land.end, !dbg !5911

land.rhs:                                         ; preds = %do.cond
  %37 = load i8, i8* %c, align 1, !dbg !5912
  %conv46 = sext i8 %37 to i32, !dbg !5912
  %cmp47 = icmp ne i32 %conv46, 0, !dbg !5913
  br label %land.end

land.end:                                         ; preds = %land.rhs, %do.cond
  %38 = phi i1 [ false, %do.cond ], [ %cmp47, %land.rhs ], !dbg !5914
  br i1 %38, label %do.body, label %do.end, !dbg !5908, !llvm.loop !5915

do.end:                                           ; preds = %land.end
  br label %if.end49, !dbg !5908

if.end49:                                         ; preds = %do.end, %for.cond38
  %39 = load i8, i8* %c, align 1, !dbg !5917
  %conv50 = sext i8 %39 to i32, !dbg !5917
  %cmp51 = icmp eq i32 %conv50, 44, !dbg !5919
  br i1 %cmp51, label %if.then57, label %lor.lhs.false53, !dbg !5920

lor.lhs.false53:                                  ; preds = %if.end49
  %40 = load i8, i8* %c, align 1, !dbg !5921
  %conv54 = sext i8 %40 to i32, !dbg !5921
  %cmp55 = icmp eq i32 %conv54, 0, !dbg !5922
  br i1 %cmp55, label %if.then57, label %if.end59, !dbg !5923

if.then57:                                        ; preds = %lor.lhs.false53, %if.end49
  %41 = load i8*, i8** %p, align 8, !dbg !5924
  %incdec.ptr58 = getelementptr inbounds i8, i8* %41, i32 1, !dbg !5924
  store i8* %incdec.ptr58, i8** %p, align 8, !dbg !5924
  br label %for.end166, !dbg !5926

if.end59:                                         ; preds = %lor.lhs.false53
  %42 = load i8, i8* %c, align 1, !dbg !5927
  %conv60 = sext i8 %42 to i32, !dbg !5927
  switch i32 %conv60, label %sw.default [
    i32 61, label %sw.bb
    i32 43, label %sw.bb
    i32 42, label %sw.bb
    i32 37, label %sw.bb
    i32 69, label %sw.bb
    i32 70, label %sw.bb
    i32 71, label %sw.bb
    i32 72, label %sw.bb
    i32 115, label %sw.bb
    i32 105, label %sw.bb
    i32 110, label %sw.bb
    i32 73, label %sw.bb
    i32 74, label %sw.bb
    i32 75, label %sw.bb
    i32 76, label %sw.bb
    i32 77, label %sw.bb
    i32 78, label %sw.bb
    i32 79, label %sw.bb
    i32 80, label %sw.bb
    i32 63, label %sw.bb61
    i32 33, label %sw.bb64
    i32 38, label %sw.bb69
    i32 48, label %sw.bb75
    i32 49, label %sw.bb75
    i32 50, label %sw.bb75
    i32 51, label %sw.bb75
    i32 52, label %sw.bb75
    i32 53, label %sw.bb75
    i32 54, label %sw.bb75
    i32 55, label %sw.bb75
    i32 56, label %sw.bb75
    i32 57, label %sw.bb75
    i32 109, label %sw.bb89
    i32 60, label %sw.bb95
    i32 62, label %sw.bb101
    i32 86, label %sw.bb107
    i32 111, label %sw.bb113
    i32 88, label %sw.bb119
    i32 112, label %sw.bb126
    i32 103, label %sw.bb143
    i32 114, label %sw.bb143
  ], !dbg !5928

sw.bb:                                            ; preds = %if.end59, %if.end59, %if.end59, %if.end59, %if.end59, %if.end59, %if.end59, %if.end59, %if.end59, %if.end59, %if.end59, %if.end59, %if.end59, %if.end59, %if.end59, %if.end59, %if.end59, %if.end59, %if.end59
  br label %sw.epilog, !dbg !5929

sw.bb61:                                          ; preds = %if.end59
  %43 = load %struct.operand_alternative*, %struct.operand_alternative** %op_alt, align 8, !dbg !5931
  %44 = load i32, i32* %j, align 4, !dbg !5932
  %idxprom62 = sext i32 %44 to i64, !dbg !5931
  %arrayidx63 = getelementptr inbounds %struct.operand_alternative, %struct.operand_alternative* %43, i64 %idxprom62, !dbg !5931
  %reject = getelementptr inbounds %struct.operand_alternative, %struct.operand_alternative* %arrayidx63, i32 0, i32 2, !dbg !5933
  %45 = load i32, i32* %reject, align 4, !dbg !5934
  %add = add i32 %45, 6, !dbg !5934
  store i32 %add, i32* %reject, align 4, !dbg !5934
  br label %sw.epilog, !dbg !5935

sw.bb64:                                          ; preds = %if.end59
  %46 = load %struct.operand_alternative*, %struct.operand_alternative** %op_alt, align 8, !dbg !5936
  %47 = load i32, i32* %j, align 4, !dbg !5937
  %idxprom65 = sext i32 %47 to i64, !dbg !5936
  %arrayidx66 = getelementptr inbounds %struct.operand_alternative, %struct.operand_alternative* %46, i64 %idxprom65, !dbg !5936
  %reject67 = getelementptr inbounds %struct.operand_alternative, %struct.operand_alternative* %arrayidx66, i32 0, i32 2, !dbg !5938
  %48 = load i32, i32* %reject67, align 4, !dbg !5939
  %add68 = add i32 %48, 600, !dbg !5939
  store i32 %add68, i32* %reject67, align 4, !dbg !5939
  br label %sw.epilog, !dbg !5940

sw.bb69:                                          ; preds = %if.end59
  %49 = load %struct.operand_alternative*, %struct.operand_alternative** %op_alt, align 8, !dbg !5941
  %50 = load i32, i32* %j, align 4, !dbg !5942
  %idxprom70 = sext i32 %50 to i64, !dbg !5941
  %arrayidx71 = getelementptr inbounds %struct.operand_alternative, %struct.operand_alternative* %49, i64 %idxprom70, !dbg !5941
  %earlyclobber = getelementptr inbounds %struct.operand_alternative, %struct.operand_alternative* %arrayidx71, i32 0, i32 5, !dbg !5943
  %bf.load72 = load i8, i8* %earlyclobber, align 8, !dbg !5944
  %bf.clear73 = and i8 %bf.load72, -2, !dbg !5944
  %bf.set74 = or i8 %bf.clear73, 1, !dbg !5944
  store i8 %bf.set74, i8* %earlyclobber, align 8, !dbg !5944
  br label %sw.epilog, !dbg !5945

sw.bb75:                                          ; preds = %if.end59, %if.end59, %if.end59, %if.end59, %if.end59, %if.end59, %if.end59, %if.end59, %if.end59, %if.end59
  call void @llvm.dbg.declare(metadata i8** %end, metadata !5946, metadata !DIExpression()), !dbg !5948
  %51 = load i8*, i8** %p, align 8, !dbg !5949
  %call76 = call i64 @strtoul(i8* %51, i8** %end, i32 10), !dbg !5950
  %conv77 = trunc i64 %call76 to i32, !dbg !5950
  %52 = load %struct.operand_alternative*, %struct.operand_alternative** %op_alt, align 8, !dbg !5951
  %53 = load i32, i32* %j, align 4, !dbg !5952
  %idxprom78 = sext i32 %53 to i64, !dbg !5951
  %arrayidx79 = getelementptr inbounds %struct.operand_alternative, %struct.operand_alternative* %52, i64 %idxprom78, !dbg !5951
  %matches80 = getelementptr inbounds %struct.operand_alternative, %struct.operand_alternative* %arrayidx79, i32 0, i32 3, !dbg !5953
  store i32 %conv77, i32* %matches80, align 8, !dbg !5954
  %54 = load i32, i32* %i, align 4, !dbg !5955
  %55 = load %struct.operand_alternative*, %struct.operand_alternative** %op_alt, align 8, !dbg !5956
  %56 = load i32, i32* %j, align 4, !dbg !5957
  %idxprom81 = sext i32 %56 to i64, !dbg !5956
  %arrayidx82 = getelementptr inbounds %struct.operand_alternative, %struct.operand_alternative* %55, i64 %idxprom81, !dbg !5956
  %matches83 = getelementptr inbounds %struct.operand_alternative, %struct.operand_alternative* %arrayidx82, i32 0, i32 3, !dbg !5958
  %57 = load i32, i32* %matches83, align 8, !dbg !5958
  %idxprom84 = sext i32 %57 to i64, !dbg !5959
  %arrayidx85 = getelementptr inbounds [30 x [30 x %struct.operand_alternative]], [30 x [30 x %struct.operand_alternative]]* @recog_op_alt, i64 0, i64 %idxprom84, !dbg !5959
  %58 = load i32, i32* %j, align 4, !dbg !5960
  %idxprom86 = sext i32 %58 to i64, !dbg !5959
  %arrayidx87 = getelementptr inbounds [30 x %struct.operand_alternative], [30 x %struct.operand_alternative]* %arrayidx85, i64 0, i64 %idxprom86, !dbg !5959
  %matched88 = getelementptr inbounds %struct.operand_alternative, %struct.operand_alternative* %arrayidx87, i32 0, i32 4, !dbg !5961
  store i32 %54, i32* %matched88, align 4, !dbg !5962
  %59 = load i8*, i8** %end, align 8, !dbg !5963
  store i8* %59, i8** %p, align 8, !dbg !5964
  br label %for.cond38, !dbg !5965, !llvm.loop !5966

sw.bb89:                                          ; preds = %if.end59
  %60 = load %struct.operand_alternative*, %struct.operand_alternative** %op_alt, align 8, !dbg !5969
  %61 = load i32, i32* %j, align 4, !dbg !5970
  %idxprom90 = sext i32 %61 to i64, !dbg !5969
  %arrayidx91 = getelementptr inbounds %struct.operand_alternative, %struct.operand_alternative* %60, i64 %idxprom90, !dbg !5969
  %memory_ok = getelementptr inbounds %struct.operand_alternative, %struct.operand_alternative* %arrayidx91, i32 0, i32 5, !dbg !5971
  %bf.load92 = load i8, i8* %memory_ok, align 8, !dbg !5972
  %bf.clear93 = and i8 %bf.load92, -3, !dbg !5972
  %bf.set94 = or i8 %bf.clear93, 2, !dbg !5972
  store i8 %bf.set94, i8* %memory_ok, align 8, !dbg !5972
  br label %sw.epilog, !dbg !5973

sw.bb95:                                          ; preds = %if.end59
  %62 = load %struct.operand_alternative*, %struct.operand_alternative** %op_alt, align 8, !dbg !5974
  %63 = load i32, i32* %j, align 4, !dbg !5975
  %idxprom96 = sext i32 %63 to i64, !dbg !5974
  %arrayidx97 = getelementptr inbounds %struct.operand_alternative, %struct.operand_alternative* %62, i64 %idxprom96, !dbg !5974
  %decmem_ok = getelementptr inbounds %struct.operand_alternative, %struct.operand_alternative* %arrayidx97, i32 0, i32 5, !dbg !5976
  %bf.load98 = load i8, i8* %decmem_ok, align 8, !dbg !5977
  %bf.clear99 = and i8 %bf.load98, -17, !dbg !5977
  %bf.set100 = or i8 %bf.clear99, 16, !dbg !5977
  store i8 %bf.set100, i8* %decmem_ok, align 8, !dbg !5977
  br label %sw.epilog, !dbg !5978

sw.bb101:                                         ; preds = %if.end59
  %64 = load %struct.operand_alternative*, %struct.operand_alternative** %op_alt, align 8, !dbg !5979
  %65 = load i32, i32* %j, align 4, !dbg !5980
  %idxprom102 = sext i32 %65 to i64, !dbg !5979
  %arrayidx103 = getelementptr inbounds %struct.operand_alternative, %struct.operand_alternative* %64, i64 %idxprom102, !dbg !5979
  %incmem_ok = getelementptr inbounds %struct.operand_alternative, %struct.operand_alternative* %arrayidx103, i32 0, i32 5, !dbg !5981
  %bf.load104 = load i8, i8* %incmem_ok, align 8, !dbg !5982
  %bf.clear105 = and i8 %bf.load104, -33, !dbg !5982
  %bf.set106 = or i8 %bf.clear105, 32, !dbg !5982
  store i8 %bf.set106, i8* %incmem_ok, align 8, !dbg !5982
  br label %sw.epilog, !dbg !5983

sw.bb107:                                         ; preds = %if.end59
  %66 = load %struct.operand_alternative*, %struct.operand_alternative** %op_alt, align 8, !dbg !5984
  %67 = load i32, i32* %j, align 4, !dbg !5985
  %idxprom108 = sext i32 %67 to i64, !dbg !5984
  %arrayidx109 = getelementptr inbounds %struct.operand_alternative, %struct.operand_alternative* %66, i64 %idxprom108, !dbg !5984
  %nonoffmem_ok = getelementptr inbounds %struct.operand_alternative, %struct.operand_alternative* %arrayidx109, i32 0, i32 5, !dbg !5986
  %bf.load110 = load i8, i8* %nonoffmem_ok, align 8, !dbg !5987
  %bf.clear111 = and i8 %bf.load110, -9, !dbg !5987
  %bf.set112 = or i8 %bf.clear111, 8, !dbg !5987
  store i8 %bf.set112, i8* %nonoffmem_ok, align 8, !dbg !5987
  br label %sw.epilog, !dbg !5988

sw.bb113:                                         ; preds = %if.end59
  %68 = load %struct.operand_alternative*, %struct.operand_alternative** %op_alt, align 8, !dbg !5989
  %69 = load i32, i32* %j, align 4, !dbg !5990
  %idxprom114 = sext i32 %69 to i64, !dbg !5989
  %arrayidx115 = getelementptr inbounds %struct.operand_alternative, %struct.operand_alternative* %68, i64 %idxprom114, !dbg !5989
  %offmem_ok = getelementptr inbounds %struct.operand_alternative, %struct.operand_alternative* %arrayidx115, i32 0, i32 5, !dbg !5991
  %bf.load116 = load i8, i8* %offmem_ok, align 8, !dbg !5992
  %bf.clear117 = and i8 %bf.load116, -5, !dbg !5992
  %bf.set118 = or i8 %bf.clear117, 4, !dbg !5992
  store i8 %bf.set118, i8* %offmem_ok, align 8, !dbg !5992
  br label %sw.epilog, !dbg !5993

sw.bb119:                                         ; preds = %if.end59
  %70 = load %struct.operand_alternative*, %struct.operand_alternative** %op_alt, align 8, !dbg !5994
  %71 = load i32, i32* %j, align 4, !dbg !5995
  %idxprom120 = sext i32 %71 to i64, !dbg !5994
  %arrayidx121 = getelementptr inbounds %struct.operand_alternative, %struct.operand_alternative* %70, i64 %idxprom120, !dbg !5994
  %anything_ok122 = getelementptr inbounds %struct.operand_alternative, %struct.operand_alternative* %arrayidx121, i32 0, i32 5, !dbg !5996
  %bf.load123 = load i8, i8* %anything_ok122, align 8, !dbg !5997
  %bf.clear124 = and i8 %bf.load123, 127, !dbg !5997
  %bf.set125 = or i8 %bf.clear124, -128, !dbg !5997
  store i8 %bf.set125, i8* %anything_ok122, align 8, !dbg !5997
  br label %sw.epilog, !dbg !5998

sw.bb126:                                         ; preds = %if.end59
  %72 = load %struct.operand_alternative*, %struct.operand_alternative** %op_alt, align 8, !dbg !5999
  %73 = load i32, i32* %j, align 4, !dbg !6000
  %idxprom127 = sext i32 %73 to i64, !dbg !5999
  %arrayidx128 = getelementptr inbounds %struct.operand_alternative, %struct.operand_alternative* %72, i64 %idxprom127, !dbg !5999
  %is_address = getelementptr inbounds %struct.operand_alternative, %struct.operand_alternative* %arrayidx128, i32 0, i32 5, !dbg !6001
  %bf.load129 = load i8, i8* %is_address, align 8, !dbg !6002
  %bf.clear130 = and i8 %bf.load129, -65, !dbg !6002
  %bf.set131 = or i8 %bf.clear130, 64, !dbg !6002
  store i8 %bf.set131, i8* %is_address, align 8, !dbg !6002
  %74 = load %struct.operand_alternative*, %struct.operand_alternative** %op_alt, align 8, !dbg !6003
  %75 = load i32, i32* %j, align 4, !dbg !6004
  %idxprom132 = sext i32 %75 to i64, !dbg !6003
  %arrayidx133 = getelementptr inbounds %struct.operand_alternative, %struct.operand_alternative* %74, i64 %idxprom132, !dbg !6003
  %cl134 = getelementptr inbounds %struct.operand_alternative, %struct.operand_alternative* %arrayidx133, i32 0, i32 1, !dbg !6005
  %76 = load i32, i32* %cl134, align 8, !dbg !6005
  %idxprom135 = sext i32 %76 to i64, !dbg !6006
  %arrayidx136 = getelementptr inbounds [27 x [27 x i32]], [27 x [27 x i32]]* @reg_class_subunion, i64 0, i64 %idxprom135, !dbg !6006
  %call137 = call i32 @base_reg_class(i32 0, i32 6, i32 38), !dbg !6007
  %idxprom138 = sext i32 %call137 to i64, !dbg !6006
  %arrayidx139 = getelementptr inbounds [27 x i32], [27 x i32]* %arrayidx136, i64 0, i64 %idxprom138, !dbg !6006
  %77 = load i32, i32* %arrayidx139, align 4, !dbg !6006
  %78 = load %struct.operand_alternative*, %struct.operand_alternative** %op_alt, align 8, !dbg !6008
  %79 = load i32, i32* %j, align 4, !dbg !6009
  %idxprom140 = sext i32 %79 to i64, !dbg !6008
  %arrayidx141 = getelementptr inbounds %struct.operand_alternative, %struct.operand_alternative* %78, i64 %idxprom140, !dbg !6008
  %cl142 = getelementptr inbounds %struct.operand_alternative, %struct.operand_alternative* %arrayidx141, i32 0, i32 1, !dbg !6010
  store i32 %77, i32* %cl142, align 8, !dbg !6011
  br label %sw.epilog, !dbg !6012

sw.bb143:                                         ; preds = %if.end59, %if.end59
  %80 = load %struct.operand_alternative*, %struct.operand_alternative** %op_alt, align 8, !dbg !6013
  %81 = load i32, i32* %j, align 4, !dbg !6014
  %idxprom144 = sext i32 %81 to i64, !dbg !6013
  %arrayidx145 = getelementptr inbounds %struct.operand_alternative, %struct.operand_alternative* %80, i64 %idxprom144, !dbg !6013
  %cl146 = getelementptr inbounds %struct.operand_alternative, %struct.operand_alternative* %arrayidx145, i32 0, i32 1, !dbg !6015
  %82 = load i32, i32* %cl146, align 8, !dbg !6015
  %idxprom147 = sext i32 %82 to i64, !dbg !6016
  %arrayidx148 = getelementptr inbounds [27 x [27 x i32]], [27 x [27 x i32]]* @reg_class_subunion, i64 0, i64 %idxprom147, !dbg !6016
  %arrayidx149 = getelementptr inbounds [27 x i32], [27 x i32]* %arrayidx148, i64 0, i64 13, !dbg !6016
  %83 = load i32, i32* %arrayidx149, align 4, !dbg !6016
  %84 = load %struct.operand_alternative*, %struct.operand_alternative** %op_alt, align 8, !dbg !6017
  %85 = load i32, i32* %j, align 4, !dbg !6018
  %idxprom150 = sext i32 %85 to i64, !dbg !6017
  %arrayidx151 = getelementptr inbounds %struct.operand_alternative, %struct.operand_alternative* %84, i64 %idxprom150, !dbg !6017
  %cl152 = getelementptr inbounds %struct.operand_alternative, %struct.operand_alternative* %arrayidx151, i32 0, i32 1, !dbg !6019
  store i32 %83, i32* %cl152, align 8, !dbg !6020
  br label %sw.epilog, !dbg !6021

sw.default:                                       ; preds = %if.end59
  %86 = load %struct.operand_alternative*, %struct.operand_alternative** %op_alt, align 8, !dbg !6022
  %87 = load i32, i32* %j, align 4, !dbg !6023
  %idxprom153 = sext i32 %87 to i64, !dbg !6022
  %arrayidx154 = getelementptr inbounds %struct.operand_alternative, %struct.operand_alternative* %86, i64 %idxprom153, !dbg !6022
  %cl155 = getelementptr inbounds %struct.operand_alternative, %struct.operand_alternative* %arrayidx154, i32 0, i32 1, !dbg !6024
  %88 = load i32, i32* %cl155, align 8, !dbg !6024
  %idxprom156 = sext i32 %88 to i64, !dbg !6025
  %arrayidx157 = getelementptr inbounds [27 x [27 x i32]], [27 x [27 x i32]]* @reg_class_subunion, i64 0, i64 %idxprom156, !dbg !6025
  %89 = load i8*, i8** %p, align 8, !dbg !6026
  %call158 = call i32 @lookup_constraint(i8* %89), !dbg !6026
  %call159 = call i32 @regclass_for_constraint(i32 %call158), !dbg !6026
  %idxprom160 = sext i32 %call159 to i64, !dbg !6025
  %arrayidx161 = getelementptr inbounds [27 x i32], [27 x i32]* %arrayidx157, i64 0, i64 %idxprom160, !dbg !6025
  %90 = load i32, i32* %arrayidx161, align 4, !dbg !6025
  %91 = load %struct.operand_alternative*, %struct.operand_alternative** %op_alt, align 8, !dbg !6027
  %92 = load i32, i32* %j, align 4, !dbg !6028
  %idxprom162 = sext i32 %92 to i64, !dbg !6027
  %arrayidx163 = getelementptr inbounds %struct.operand_alternative, %struct.operand_alternative* %91, i64 %idxprom162, !dbg !6027
  %cl164 = getelementptr inbounds %struct.operand_alternative, %struct.operand_alternative* %arrayidx163, i32 0, i32 1, !dbg !6029
  store i32 %90, i32* %cl164, align 8, !dbg !6030
  br label %sw.epilog, !dbg !6031

sw.epilog:                                        ; preds = %sw.default, %sw.bb143, %sw.bb126, %sw.bb119, %sw.bb113, %sw.bb107, %sw.bb101, %sw.bb95, %sw.bb89, %sw.bb69, %sw.bb64, %sw.bb61, %sw.bb
  %93 = load i8, i8* %c, align 1, !dbg !6032
  %94 = load i8*, i8** %p, align 8, !dbg !6032
  %call165 = call i64 @insn_constraint_len(i8 signext %93, i8* %94), !dbg !6032
  %95 = load i8*, i8** %p, align 8, !dbg !6033
  %add.ptr = getelementptr inbounds i8, i8* %95, i64 %call165, !dbg !6033
  store i8* %add.ptr, i8** %p, align 8, !dbg !6033
  br label %for.cond38, !dbg !6034, !llvm.loop !5966

for.end166:                                       ; preds = %if.then57
  br label %for.inc167, !dbg !6035

for.inc167:                                       ; preds = %for.end166, %if.then34, %if.then
  %96 = load i32, i32* %j, align 4, !dbg !6036
  %inc168 = add nsw i32 %96, 1, !dbg !6036
  store i32 %inc168, i32* %j, align 4, !dbg !6036
  br label %for.cond13, !dbg !6037, !llvm.loop !6038

for.end169:                                       ; preds = %for.cond13
  br label %for.inc170, !dbg !6040

for.inc170:                                       ; preds = %for.end169
  %97 = load i32, i32* %i, align 4, !dbg !6041
  %inc171 = add nsw i32 %97, 1, !dbg !6041
  store i32 %inc171, i32* %i, align 4, !dbg !6041
  br label %for.cond3, !dbg !6042, !llvm.loop !6043

for.end172:                                       ; preds = %for.cond3
  ret void, !dbg !6045
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: noinline nounwind uwtable
define internal i8* @skip_alternative(i8* %p) #0 !dbg !6046 {
entry:
  %p.addr = alloca i8*, align 8
  %r = alloca i8*, align 8
  store i8* %p, i8** %p.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %p.addr, metadata !6049, metadata !DIExpression()), !dbg !6050
  call void @llvm.dbg.declare(metadata i8** %r, metadata !6051, metadata !DIExpression()), !dbg !6052
  %0 = load i8*, i8** %p.addr, align 8, !dbg !6053
  store i8* %0, i8** %r, align 8, !dbg !6052
  br label %while.cond, !dbg !6054

while.cond:                                       ; preds = %while.body, %entry
  %1 = load i8*, i8** %r, align 8, !dbg !6055
  %2 = load i8, i8* %1, align 1, !dbg !6056
  %conv = sext i8 %2 to i32, !dbg !6056
  %cmp = icmp ne i32 %conv, 0, !dbg !6057
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !6058

land.rhs:                                         ; preds = %while.cond
  %3 = load i8*, i8** %r, align 8, !dbg !6059
  %4 = load i8, i8* %3, align 1, !dbg !6060
  %conv2 = sext i8 %4 to i32, !dbg !6060
  %cmp3 = icmp ne i32 %conv2, 44, !dbg !6061
  br label %land.end

land.end:                                         ; preds = %land.rhs, %while.cond
  %5 = phi i1 [ false, %while.cond ], [ %cmp3, %land.rhs ], !dbg !6062
  br i1 %5, label %while.body, label %while.end, !dbg !6054

while.body:                                       ; preds = %land.end
  %6 = load i8*, i8** %r, align 8, !dbg !6063
  %incdec.ptr = getelementptr inbounds i8, i8* %6, i32 1, !dbg !6063
  store i8* %incdec.ptr, i8** %r, align 8, !dbg !6063
  br label %while.cond, !dbg !6054, !llvm.loop !6064

while.end:                                        ; preds = %land.end
  %7 = load i8*, i8** %r, align 8, !dbg !6065
  %8 = load i8, i8* %7, align 1, !dbg !6067
  %conv5 = sext i8 %8 to i32, !dbg !6067
  %cmp6 = icmp eq i32 %conv5, 44, !dbg !6068
  br i1 %cmp6, label %if.then, label %if.end, !dbg !6069

if.then:                                          ; preds = %while.end
  %9 = load i8*, i8** %r, align 8, !dbg !6070
  %incdec.ptr8 = getelementptr inbounds i8, i8* %9, i32 1, !dbg !6070
  store i8* %incdec.ptr8, i8** %r, align 8, !dbg !6070
  br label %if.end, !dbg !6071

if.end:                                           ; preds = %if.then, %while.end
  %10 = load i8*, i8** %r, align 8, !dbg !6072
  ret i8* %10, !dbg !6073
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @base_reg_class(i32 %mode, i32 %outer_code, i32 %index_code) #0 !dbg !6074 {
entry:
  %mode.addr = alloca i32, align 4
  %outer_code.addr = alloca i32, align 4
  %index_code.addr = alloca i32, align 4
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !6078, metadata !DIExpression()), !dbg !6079
  store i32 %outer_code, i32* %outer_code.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %outer_code.addr, metadata !6080, metadata !DIExpression()), !dbg !6081
  store i32 %index_code, i32* %index_code.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index_code.addr, metadata !6082, metadata !DIExpression()), !dbg !6083
  ret i32 13, !dbg !6084
}

declare dso_local i32 @subreg_regno_offset(i32, i32, i32, i32) #2

declare dso_local i32 @operands_match_p(%struct.rtx_def*, %struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @reg_fits_class_p(%struct.rtx_def* %operand, i32 %cl, i32 %offset, i32 %mode) #0 !dbg !6085 {
entry:
  %retval = alloca i32, align 4
  %operand.addr = alloca %struct.rtx_def*, align 8
  %cl.addr = alloca i32, align 4
  %offset.addr = alloca i32, align 4
  %mode.addr = alloca i32, align 4
  %regno = alloca i32, align 4
  store %struct.rtx_def* %operand, %struct.rtx_def** %operand.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %operand.addr, metadata !6088, metadata !DIExpression()), !dbg !6089
  store i32 %cl, i32* %cl.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cl.addr, metadata !6090, metadata !DIExpression()), !dbg !6091
  store i32 %offset, i32* %offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %offset.addr, metadata !6092, metadata !DIExpression()), !dbg !6093
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !6094, metadata !DIExpression()), !dbg !6095
  call void @llvm.dbg.declare(metadata i32* %regno, metadata !6096, metadata !DIExpression()), !dbg !6097
  %0 = load %struct.rtx_def*, %struct.rtx_def** %operand.addr, align 8, !dbg !6098
  %call = call i32 @rhs_regno(%struct.rtx_def* %0), !dbg !6098
  store i32 %call, i32* %regno, align 4, !dbg !6097
  %1 = load i32, i32* %cl.addr, align 4, !dbg !6099
  %cmp = icmp eq i32 %1, 0, !dbg !6101
  br i1 %cmp, label %if.then, label %if.end, !dbg !6102

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !6103
  br label %return, !dbg !6103

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %regno, align 4, !dbg !6104
  %cmp1 = icmp slt i32 %2, 53, !dbg !6105
  br i1 %cmp1, label %land.rhs, label %land.end, !dbg !6106

land.rhs:                                         ; preds = %if.end
  %3 = load i32, i32* %cl.addr, align 4, !dbg !6107
  %idxprom = sext i32 %3 to i64, !dbg !6108
  %arrayidx = getelementptr inbounds [27 x i64], [27 x i64]* @reg_class_contents, i64 0, i64 %idxprom, !dbg !6108
  %4 = load i64, i64* %arrayidx, align 8, !dbg !6108
  %5 = load i32, i32* %mode.addr, align 4, !dbg !6109
  %6 = load i32, i32* %regno, align 4, !dbg !6110
  %7 = load i32, i32* %offset.addr, align 4, !dbg !6111
  %add = add nsw i32 %6, %7, !dbg !6112
  %call2 = call zeroext i8 @in_hard_reg_set_p(i64 %4, i32 %5, i32 %add), !dbg !6113
  %conv = zext i8 %call2 to i32, !dbg !6113
  %tobool = icmp ne i32 %conv, 0, !dbg !6106
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.end
  %8 = phi i1 [ false, %if.end ], [ %tobool, %land.rhs ], !dbg !6114
  %land.ext = zext i1 %8 to i32, !dbg !6106
  store i32 %land.ext, i32* %retval, align 4, !dbg !6115
  br label %return, !dbg !6115

return:                                           ; preds = %land.end, %if.then
  %9 = load i32, i32* %retval, align 4, !dbg !6116
  ret i32 %9, !dbg !6116
}

declare dso_local i32 @safe_from_earlyclobber(%struct.rtx_def*, %struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @in_hard_reg_set_p(i64 %regs, i32 %mode, i32 %regno) #0 !dbg !6117 {
entry:
  %retval = alloca i8, align 1
  %regs.addr = alloca i64, align 8
  %mode.addr = alloca i32, align 4
  %regno.addr = alloca i32, align 4
  %end_regno = alloca i32, align 4
  store i64 %regs, i64* %regs.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %regs.addr, metadata !6122, metadata !DIExpression()), !dbg !6123
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !6124, metadata !DIExpression()), !dbg !6125
  store i32 %regno, i32* %regno.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %regno.addr, metadata !6126, metadata !DIExpression()), !dbg !6127
  call void @llvm.dbg.declare(metadata i32* %end_regno, metadata !6128, metadata !DIExpression()), !dbg !6129
  %0 = load i64, i64* %regs.addr, align 8, !dbg !6130
  %1 = load i32, i32* %regno.addr, align 4, !dbg !6130
  %sh_prom = zext i32 %1 to i64, !dbg !6130
  %shl = shl i64 1, %sh_prom, !dbg !6130
  %and = and i64 %0, %shl, !dbg !6130
  %tobool = icmp ne i64 %and, 0, !dbg !6130
  br i1 %tobool, label %if.end, label %if.then, !dbg !6132

if.then:                                          ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !6133
  br label %return, !dbg !6133

if.end:                                           ; preds = %entry
  %2 = load i32, i32* %mode.addr, align 4, !dbg !6134
  %3 = load i32, i32* %regno.addr, align 4, !dbg !6135
  %call = call i32 @end_hard_regno(i32 %2, i32 %3), !dbg !6136
  store i32 %call, i32* %end_regno, align 4, !dbg !6137
  br label %while.cond, !dbg !6138

while.cond:                                       ; preds = %if.end6, %if.end
  %4 = load i32, i32* %regno.addr, align 4, !dbg !6139
  %inc = add i32 %4, 1, !dbg !6139
  store i32 %inc, i32* %regno.addr, align 4, !dbg !6139
  %5 = load i32, i32* %end_regno, align 4, !dbg !6140
  %cmp = icmp ult i32 %inc, %5, !dbg !6141
  br i1 %cmp, label %while.body, label %while.end, !dbg !6138

while.body:                                       ; preds = %while.cond
  %6 = load i64, i64* %regs.addr, align 8, !dbg !6142
  %7 = load i32, i32* %regno.addr, align 4, !dbg !6142
  %sh_prom1 = zext i32 %7 to i64, !dbg !6142
  %shl2 = shl i64 1, %sh_prom1, !dbg !6142
  %and3 = and i64 %6, %shl2, !dbg !6142
  %tobool4 = icmp ne i64 %and3, 0, !dbg !6142
  br i1 %tobool4, label %if.end6, label %if.then5, !dbg !6144

if.then5:                                         ; preds = %while.body
  store i8 0, i8* %retval, align 1, !dbg !6145
  br label %return, !dbg !6145

if.end6:                                          ; preds = %while.body
  br label %while.cond, !dbg !6138, !llvm.loop !6146

while.end:                                        ; preds = %while.cond
  store i8 1, i8* %retval, align 1, !dbg !6148
  br label %return, !dbg !6148

return:                                           ; preds = %while.end, %if.then5, %if.then
  %8 = load i8, i8* %retval, align 1, !dbg !6149
  ret i8 %8, !dbg !6149
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @split_all_insns() #0 !dbg !6150 {
entry:
  %blocks = alloca %struct.simple_bitmap_def*, align 8
  %changed = alloca i8, align 1
  %bb = alloca %struct.basic_block_def*, align 8
  %insn = alloca %struct.rtx_def*, align 8
  %next = alloca %struct.rtx_def*, align 8
  %finish = alloca i8, align 1
  %set = alloca %struct.rtx_def*, align 8
  %last = alloca %struct.rtx_def*, align 8
  call void @llvm.dbg.declare(metadata %struct.simple_bitmap_def** %blocks, metadata !6151, metadata !DIExpression()), !dbg !6163
  call void @llvm.dbg.declare(metadata i8* %changed, metadata !6164, metadata !DIExpression()), !dbg !6165
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb, metadata !6166, metadata !DIExpression()), !dbg !6167
  %0 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6168
  %add.ptr = getelementptr inbounds %struct.function, %struct.function* %0, i64 0, !dbg !6168
  %cfg = getelementptr inbounds %struct.function, %struct.function* %add.ptr, i32 0, i32 1, !dbg !6168
  %1 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !6168
  %x_last_basic_block = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %1, i32 0, i32 5, !dbg !6168
  %2 = load i32, i32* %x_last_basic_block, align 8, !dbg !6168
  %call = call %struct.simple_bitmap_def* @sbitmap_alloc(i32 %2), !dbg !6169
  store %struct.simple_bitmap_def* %call, %struct.simple_bitmap_def** %blocks, align 8, !dbg !6170
  %3 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %blocks, align 8, !dbg !6171
  call void @sbitmap_zero(%struct.simple_bitmap_def* %3), !dbg !6172
  store i8 0, i8* %changed, align 1, !dbg !6173
  %4 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6174
  %add.ptr1 = getelementptr inbounds %struct.function, %struct.function* %4, i64 0, !dbg !6174
  %cfg2 = getelementptr inbounds %struct.function, %struct.function* %add.ptr1, i32 0, i32 1, !dbg !6174
  %5 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg2, align 8, !dbg !6174
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %5, i32 0, i32 1, !dbg !6174
  %6 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !6174
  %prev_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %6, i32 0, i32 5, !dbg !6174
  %7 = load %struct.basic_block_def*, %struct.basic_block_def** %prev_bb, align 8, !dbg !6174
  store %struct.basic_block_def* %7, %struct.basic_block_def** %bb, align 8, !dbg !6174
  br label %for.cond, !dbg !6174

for.cond:                                         ; preds = %for.inc88, %entry
  %8 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !6176
  %9 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !6176
  %add.ptr3 = getelementptr inbounds %struct.function, %struct.function* %9, i64 0, !dbg !6176
  %cfg4 = getelementptr inbounds %struct.function, %struct.function* %add.ptr3, i32 0, i32 1, !dbg !6176
  %10 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg4, align 8, !dbg !6176
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %10, i32 0, i32 0, !dbg !6176
  %11 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !6176
  %cmp = icmp ne %struct.basic_block_def* %8, %11, !dbg !6176
  br i1 %cmp, label %for.body, label %for.end90, !dbg !6174

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn, metadata !6178, metadata !DIExpression()), !dbg !6180
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %next, metadata !6181, metadata !DIExpression()), !dbg !6182
  call void @llvm.dbg.declare(metadata i8* %finish, metadata !6183, metadata !DIExpression()), !dbg !6184
  store i8 0, i8* %finish, align 1, !dbg !6184
  %12 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !6185
  call void @rtl_profile_for_bb(%struct.basic_block_def* %12), !dbg !6186
  %13 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !6187
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %13, i32 0, i32 7, !dbg !6187
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !6187
  %14 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !6187
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %14, i32 0, i32 0, !dbg !6187
  %15 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !6187
  store %struct.rtx_def* %15, %struct.rtx_def** %insn, align 8, !dbg !6189
  br label %for.cond5, !dbg !6190

for.cond5:                                        ; preds = %for.inc, %for.body
  %16 = load i8, i8* %finish, align 1, !dbg !6191
  %tobool = icmp ne i8 %16, 0, !dbg !6193
  %lnot = xor i1 %tobool, true, !dbg !6193
  br i1 %lnot, label %for.body6, label %for.end, !dbg !6194

for.body6:                                        ; preds = %for.cond5
  %17 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6195
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i32 0, i32 1, !dbg !6195
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !6195
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 2, !dbg !6195
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !6195
  %18 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6195
  store %struct.rtx_def* %18, %struct.rtx_def** %next, align 8, !dbg !6197
  %19 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6198
  %20 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !6199
  %il7 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %20, i32 0, i32 7, !dbg !6199
  %rtl8 = bitcast %union.basic_block_il_dependent* %il7 to %struct.rtl_bb_info**, !dbg !6199
  %21 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl8, align 8, !dbg !6199
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %21, i32 0, i32 1, !dbg !6199
  %22 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !6199
  %cmp9 = icmp eq %struct.rtx_def* %19, %22, !dbg !6200
  %conv = zext i1 %cmp9 to i32, !dbg !6200
  %conv10 = trunc i32 %conv to i8, !dbg !6201
  store i8 %conv10, i8* %finish, align 1, !dbg !6202
  %23 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6203
  %24 = bitcast %struct.rtx_def* %23 to i32*, !dbg !6203
  %bf.load = load i32, i32* %24, align 8, !dbg !6203
  %bf.clear = and i32 %bf.load, 65535, !dbg !6203
  %cmp11 = icmp eq i32 %bf.clear, 8, !dbg !6203
  br i1 %cmp11, label %if.then, label %lor.lhs.false, !dbg !6203

lor.lhs.false:                                    ; preds = %for.body6
  %25 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6203
  %26 = bitcast %struct.rtx_def* %25 to i32*, !dbg !6203
  %bf.load13 = load i32, i32* %26, align 8, !dbg !6203
  %bf.clear14 = and i32 %bf.load13, 65535, !dbg !6203
  %cmp15 = icmp eq i32 %bf.clear14, 7, !dbg !6203
  br i1 %cmp15, label %if.then, label %lor.lhs.false17, !dbg !6203

lor.lhs.false17:                                  ; preds = %lor.lhs.false
  %27 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6203
  %28 = bitcast %struct.rtx_def* %27 to i32*, !dbg !6203
  %bf.load18 = load i32, i32* %28, align 8, !dbg !6203
  %bf.clear19 = and i32 %bf.load18, 65535, !dbg !6203
  %cmp20 = icmp eq i32 %bf.clear19, 9, !dbg !6203
  br i1 %cmp20, label %if.then, label %lor.lhs.false22, !dbg !6203

lor.lhs.false22:                                  ; preds = %lor.lhs.false17
  %29 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6203
  %30 = bitcast %struct.rtx_def* %29 to i32*, !dbg !6203
  %bf.load23 = load i32, i32* %30, align 8, !dbg !6203
  %bf.clear24 = and i32 %bf.load23, 65535, !dbg !6203
  %cmp25 = icmp eq i32 %bf.clear24, 10, !dbg !6203
  br i1 %cmp25, label %if.then, label %if.end87, !dbg !6205

if.then:                                          ; preds = %lor.lhs.false22, %lor.lhs.false17, %lor.lhs.false, %for.body6
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %set, metadata !6206, metadata !DIExpression()), !dbg !6208
  %31 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6209
  %32 = bitcast %struct.rtx_def* %31 to i32*, !dbg !6209
  %bf.load27 = load i32, i32* %32, align 8, !dbg !6209
  %bf.clear28 = and i32 %bf.load27, 65535, !dbg !6209
  %cmp29 = icmp eq i32 %bf.clear28, 8, !dbg !6209
  br i1 %cmp29, label %cond.true, label %lor.lhs.false31, !dbg !6209

lor.lhs.false31:                                  ; preds = %if.then
  %33 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6209
  %34 = bitcast %struct.rtx_def* %33 to i32*, !dbg !6209
  %bf.load32 = load i32, i32* %34, align 8, !dbg !6209
  %bf.clear33 = and i32 %bf.load32, 65535, !dbg !6209
  %cmp34 = icmp eq i32 %bf.clear33, 7, !dbg !6209
  br i1 %cmp34, label %cond.true, label %lor.lhs.false36, !dbg !6209

lor.lhs.false36:                                  ; preds = %lor.lhs.false31
  %35 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6209
  %36 = bitcast %struct.rtx_def* %35 to i32*, !dbg !6209
  %bf.load37 = load i32, i32* %36, align 8, !dbg !6209
  %bf.clear38 = and i32 %bf.load37, 65535, !dbg !6209
  %cmp39 = icmp eq i32 %bf.clear38, 9, !dbg !6209
  br i1 %cmp39, label %cond.true, label %lor.lhs.false41, !dbg !6209

lor.lhs.false41:                                  ; preds = %lor.lhs.false36
  %37 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6209
  %38 = bitcast %struct.rtx_def* %37 to i32*, !dbg !6209
  %bf.load42 = load i32, i32* %38, align 8, !dbg !6209
  %bf.clear43 = and i32 %bf.load42, 65535, !dbg !6209
  %cmp44 = icmp eq i32 %bf.clear43, 10, !dbg !6209
  br i1 %cmp44, label %cond.true, label %cond.false64, !dbg !6209

cond.true:                                        ; preds = %lor.lhs.false41, %lor.lhs.false36, %lor.lhs.false31, %if.then
  %39 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6209
  %u46 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %39, i32 0, i32 1, !dbg !6209
  %fld47 = bitcast %union.u* %u46 to [1 x %union.rtunion_def]*, !dbg !6209
  %arrayidx48 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld47, i64 0, i64 5, !dbg !6209
  %rt_rtx49 = bitcast %union.rtunion_def* %arrayidx48 to %struct.rtx_def**, !dbg !6209
  %40 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx49, align 8, !dbg !6209
  %41 = bitcast %struct.rtx_def* %40 to i32*, !dbg !6209
  %bf.load50 = load i32, i32* %41, align 8, !dbg !6209
  %bf.clear51 = and i32 %bf.load50, 65535, !dbg !6209
  %cmp52 = icmp eq i32 %bf.clear51, 23, !dbg !6209
  br i1 %cmp52, label %cond.true54, label %cond.false, !dbg !6209

cond.true54:                                      ; preds = %cond.true
  %42 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6209
  %u55 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %42, i32 0, i32 1, !dbg !6209
  %fld56 = bitcast %union.u* %u55 to [1 x %union.rtunion_def]*, !dbg !6209
  %arrayidx57 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld56, i64 0, i64 5, !dbg !6209
  %rt_rtx58 = bitcast %union.rtunion_def* %arrayidx57 to %struct.rtx_def**, !dbg !6209
  %43 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx58, align 8, !dbg !6209
  br label %cond.end, !dbg !6209

cond.false:                                       ; preds = %cond.true
  %44 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6209
  %45 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6209
  %u59 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %45, i32 0, i32 1, !dbg !6209
  %fld60 = bitcast %union.u* %u59 to [1 x %union.rtunion_def]*, !dbg !6209
  %arrayidx61 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld60, i64 0, i64 5, !dbg !6209
  %rt_rtx62 = bitcast %union.rtunion_def* %arrayidx61 to %struct.rtx_def**, !dbg !6209
  %46 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx62, align 8, !dbg !6209
  %call63 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %44, %struct.rtx_def* %46), !dbg !6209
  br label %cond.end, !dbg !6209

cond.end:                                         ; preds = %cond.false, %cond.true54
  %cond = phi %struct.rtx_def* [ %43, %cond.true54 ], [ %call63, %cond.false ], !dbg !6209
  br label %cond.end65, !dbg !6209

cond.false64:                                     ; preds = %lor.lhs.false41
  br label %cond.end65, !dbg !6209

cond.end65:                                       ; preds = %cond.false64, %cond.end
  %cond66 = phi %struct.rtx_def* [ %cond, %cond.end ], [ null, %cond.false64 ], !dbg !6209
  store %struct.rtx_def* %cond66, %struct.rtx_def** %set, align 8, !dbg !6208
  %47 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !6210
  %tobool67 = icmp ne %struct.rtx_def* %47, null, !dbg !6210
  br i1 %tobool67, label %land.lhs.true, label %if.else, !dbg !6212

land.lhs.true:                                    ; preds = %cond.end65
  %48 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !6213
  %call68 = call i32 @set_noop_p(%struct.rtx_def* %48), !dbg !6214
  %tobool69 = icmp ne i32 %call68, 0, !dbg !6214
  br i1 %tobool69, label %if.then70, label %if.else, !dbg !6215

if.then70:                                        ; preds = %land.lhs.true
  %49 = load i32, i32* @reload_completed, align 4, !dbg !6216
  %tobool71 = icmp ne i32 %49, 0, !dbg !6216
  br i1 %tobool71, label %if.then72, label %if.end, !dbg !6219

if.then72:                                        ; preds = %if.then70
  %50 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6220
  %call73 = call %struct.rtx_def* @delete_insn_and_edges(%struct.rtx_def* %50), !dbg !6221
  br label %if.end, !dbg !6221

if.end:                                           ; preds = %if.then72, %if.then70
  br label %if.end86, !dbg !6222

if.else:                                          ; preds = %land.lhs.true, %cond.end65
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %last, metadata !6223, metadata !DIExpression()), !dbg !6225
  %51 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6226
  %call74 = call %struct.rtx_def* @split_insn(%struct.rtx_def* %51), !dbg !6227
  store %struct.rtx_def* %call74, %struct.rtx_def** %last, align 8, !dbg !6225
  %52 = load %struct.rtx_def*, %struct.rtx_def** %last, align 8, !dbg !6228
  %tobool75 = icmp ne %struct.rtx_def* %52, null, !dbg !6228
  br i1 %tobool75, label %if.then76, label %if.end85, !dbg !6230

if.then76:                                        ; preds = %if.else
  br label %while.cond, !dbg !6231

while.cond:                                       ; preds = %while.body, %if.then76
  %53 = load %struct.rtx_def*, %struct.rtx_def** %last, align 8, !dbg !6233
  %54 = bitcast %struct.rtx_def* %53 to i32*, !dbg !6233
  %bf.load77 = load i32, i32* %54, align 8, !dbg !6233
  %bf.clear78 = and i32 %bf.load77, 65535, !dbg !6233
  %cmp79 = icmp eq i32 %bf.clear78, 11, !dbg !6233
  br i1 %cmp79, label %while.body, label %while.end, !dbg !6231

while.body:                                       ; preds = %while.cond
  %55 = load %struct.rtx_def*, %struct.rtx_def** %last, align 8, !dbg !6234
  %u81 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %55, i32 0, i32 1, !dbg !6234
  %fld82 = bitcast %union.u* %u81 to [1 x %union.rtunion_def]*, !dbg !6234
  %arrayidx83 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld82, i64 0, i64 1, !dbg !6234
  %rt_rtx84 = bitcast %union.rtunion_def* %arrayidx83 to %struct.rtx_def**, !dbg !6234
  %56 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx84, align 8, !dbg !6234
  store %struct.rtx_def* %56, %struct.rtx_def** %last, align 8, !dbg !6235
  br label %while.cond, !dbg !6231, !llvm.loop !6236

while.end:                                        ; preds = %while.cond
  %57 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %blocks, align 8, !dbg !6237
  %58 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !6238
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %58, i32 0, i32 9, !dbg !6239
  %59 = load i32, i32* %index, align 8, !dbg !6239
  call void @SET_BIT(%struct.simple_bitmap_def* %57, i32 %59), !dbg !6240
  store i8 1, i8* %changed, align 1, !dbg !6241
  br label %if.end85, !dbg !6242

if.end85:                                         ; preds = %while.end, %if.else
  br label %if.end86

if.end86:                                         ; preds = %if.end85, %if.end
  br label %if.end87, !dbg !6243

if.end87:                                         ; preds = %if.end86, %lor.lhs.false22
  br label %for.inc, !dbg !6244

for.inc:                                          ; preds = %if.end87
  %60 = load %struct.rtx_def*, %struct.rtx_def** %next, align 8, !dbg !6245
  store %struct.rtx_def* %60, %struct.rtx_def** %insn, align 8, !dbg !6246
  br label %for.cond5, !dbg !6247, !llvm.loop !6248

for.end:                                          ; preds = %for.cond5
  br label %for.inc88, !dbg !6250

for.inc88:                                        ; preds = %for.end
  %61 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !6176
  %prev_bb89 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %61, i32 0, i32 5, !dbg !6176
  %62 = load %struct.basic_block_def*, %struct.basic_block_def** %prev_bb89, align 8, !dbg !6176
  store %struct.basic_block_def* %62, %struct.basic_block_def** %bb, align 8, !dbg !6176
  br label %for.cond, !dbg !6176, !llvm.loop !6251

for.end90:                                        ; preds = %for.cond
  call void @default_rtl_profile(), !dbg !6253
  %63 = load i8, i8* %changed, align 1, !dbg !6254
  %tobool91 = icmp ne i8 %63, 0, !dbg !6254
  br i1 %tobool91, label %if.then92, label %if.end93, !dbg !6256

if.then92:                                        ; preds = %for.end90
  %64 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %blocks, align 8, !dbg !6257
  call void @find_many_sub_basic_blocks(%struct.simple_bitmap_def* %64), !dbg !6258
  br label %if.end93, !dbg !6258

if.end93:                                         ; preds = %if.then92, %for.end90
  %65 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %blocks, align 8, !dbg !6259
  %popcount = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %65, i32 0, i32 0, !dbg !6259
  %66 = load i8*, i8** %popcount, align 8, !dbg !6259
  call void @free(i8* %66), !dbg !6259
  %67 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %blocks, align 8, !dbg !6259
  %68 = bitcast %struct.simple_bitmap_def* %67 to i8*, !dbg !6259
  call void @free(i8* %68), !dbg !6259
  ret void, !dbg !6260
}

declare dso_local %struct.simple_bitmap_def* @sbitmap_alloc(i32) #2

declare dso_local void @sbitmap_zero(%struct.simple_bitmap_def*) #2

declare dso_local void @rtl_profile_for_bb(%struct.basic_block_def*) #2

declare dso_local %struct.rtx_def* @single_set_2(%struct.rtx_def*, %struct.rtx_def*) #2

declare dso_local i32 @set_noop_p(%struct.rtx_def*) #2

declare dso_local %struct.rtx_def* @delete_insn_and_edges(%struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.rtx_def* @split_insn(%struct.rtx_def* %insn) #0 !dbg !6261 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %insn.addr = alloca %struct.rtx_def*, align 8
  %first = alloca %struct.rtx_def*, align 8
  %last = alloca %struct.rtx_def*, align 8
  %insn_set = alloca %struct.rtx_def*, align 8
  %last_set = alloca %struct.rtx_def*, align 8
  %note = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %insn, %struct.rtx_def** %insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn.addr, metadata !6262, metadata !DIExpression()), !dbg !6263
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %first, metadata !6264, metadata !DIExpression()), !dbg !6265
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !6266
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %0, i32 0, i32 1, !dbg !6266
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !6266
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 1, !dbg !6266
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !6266
  %1 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6266
  store %struct.rtx_def* %1, %struct.rtx_def** %first, align 8, !dbg !6265
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %last, metadata !6267, metadata !DIExpression()), !dbg !6268
  %2 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !6269
  %u1 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %2, i32 0, i32 1, !dbg !6269
  %fld2 = bitcast %union.u* %u1 to [1 x %union.rtunion_def]*, !dbg !6269
  %arrayidx3 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld2, i64 0, i64 5, !dbg !6269
  %rt_rtx4 = bitcast %union.rtunion_def* %arrayidx3 to %struct.rtx_def**, !dbg !6269
  %3 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx4, align 8, !dbg !6269
  %4 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !6270
  %call = call %struct.rtx_def* @try_split(%struct.rtx_def* %3, %struct.rtx_def* %4, i32 1), !dbg !6271
  store %struct.rtx_def* %call, %struct.rtx_def** %last, align 8, !dbg !6268
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn_set, metadata !6272, metadata !DIExpression()), !dbg !6273
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %last_set, metadata !6274, metadata !DIExpression()), !dbg !6275
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %note, metadata !6276, metadata !DIExpression()), !dbg !6277
  %5 = load %struct.rtx_def*, %struct.rtx_def** %last, align 8, !dbg !6278
  %6 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !6280
  %cmp = icmp eq %struct.rtx_def* %5, %6, !dbg !6281
  br i1 %cmp, label %if.then, label %if.end, !dbg !6282

if.then:                                          ; preds = %entry
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !6283
  br label %return, !dbg !6283

if.end:                                           ; preds = %entry
  %7 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !6284
  %8 = bitcast %struct.rtx_def* %7 to i32*, !dbg !6284
  %bf.load = load i32, i32* %8, align 8, !dbg !6284
  %bf.clear = and i32 %bf.load, 65535, !dbg !6284
  %cmp5 = icmp eq i32 %bf.clear, 8, !dbg !6284
  br i1 %cmp5, label %cond.true, label %lor.lhs.false, !dbg !6284

lor.lhs.false:                                    ; preds = %if.end
  %9 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !6284
  %10 = bitcast %struct.rtx_def* %9 to i32*, !dbg !6284
  %bf.load6 = load i32, i32* %10, align 8, !dbg !6284
  %bf.clear7 = and i32 %bf.load6, 65535, !dbg !6284
  %cmp8 = icmp eq i32 %bf.clear7, 7, !dbg !6284
  br i1 %cmp8, label %cond.true, label %lor.lhs.false9, !dbg !6284

lor.lhs.false9:                                   ; preds = %lor.lhs.false
  %11 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !6284
  %12 = bitcast %struct.rtx_def* %11 to i32*, !dbg !6284
  %bf.load10 = load i32, i32* %12, align 8, !dbg !6284
  %bf.clear11 = and i32 %bf.load10, 65535, !dbg !6284
  %cmp12 = icmp eq i32 %bf.clear11, 9, !dbg !6284
  br i1 %cmp12, label %cond.true, label %lor.lhs.false13, !dbg !6284

lor.lhs.false13:                                  ; preds = %lor.lhs.false9
  %13 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !6284
  %14 = bitcast %struct.rtx_def* %13 to i32*, !dbg !6284
  %bf.load14 = load i32, i32* %14, align 8, !dbg !6284
  %bf.clear15 = and i32 %bf.load14, 65535, !dbg !6284
  %cmp16 = icmp eq i32 %bf.clear15, 10, !dbg !6284
  br i1 %cmp16, label %cond.true, label %cond.false34, !dbg !6284

cond.true:                                        ; preds = %lor.lhs.false13, %lor.lhs.false9, %lor.lhs.false, %if.end
  %15 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !6284
  %u17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %15, i32 0, i32 1, !dbg !6284
  %fld18 = bitcast %union.u* %u17 to [1 x %union.rtunion_def]*, !dbg !6284
  %arrayidx19 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld18, i64 0, i64 5, !dbg !6284
  %rt_rtx20 = bitcast %union.rtunion_def* %arrayidx19 to %struct.rtx_def**, !dbg !6284
  %16 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx20, align 8, !dbg !6284
  %17 = bitcast %struct.rtx_def* %16 to i32*, !dbg !6284
  %bf.load21 = load i32, i32* %17, align 8, !dbg !6284
  %bf.clear22 = and i32 %bf.load21, 65535, !dbg !6284
  %cmp23 = icmp eq i32 %bf.clear22, 23, !dbg !6284
  br i1 %cmp23, label %cond.true24, label %cond.false, !dbg !6284

cond.true24:                                      ; preds = %cond.true
  %18 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !6284
  %u25 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %18, i32 0, i32 1, !dbg !6284
  %fld26 = bitcast %union.u* %u25 to [1 x %union.rtunion_def]*, !dbg !6284
  %arrayidx27 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld26, i64 0, i64 5, !dbg !6284
  %rt_rtx28 = bitcast %union.rtunion_def* %arrayidx27 to %struct.rtx_def**, !dbg !6284
  %19 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx28, align 8, !dbg !6284
  br label %cond.end, !dbg !6284

cond.false:                                       ; preds = %cond.true
  %20 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !6284
  %21 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !6284
  %u29 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %21, i32 0, i32 1, !dbg !6284
  %fld30 = bitcast %union.u* %u29 to [1 x %union.rtunion_def]*, !dbg !6284
  %arrayidx31 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld30, i64 0, i64 5, !dbg !6284
  %rt_rtx32 = bitcast %union.rtunion_def* %arrayidx31 to %struct.rtx_def**, !dbg !6284
  %22 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx32, align 8, !dbg !6284
  %call33 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %20, %struct.rtx_def* %22), !dbg !6284
  br label %cond.end, !dbg !6284

cond.end:                                         ; preds = %cond.false, %cond.true24
  %cond = phi %struct.rtx_def* [ %19, %cond.true24 ], [ %call33, %cond.false ], !dbg !6284
  br label %cond.end35, !dbg !6284

cond.false34:                                     ; preds = %lor.lhs.false13
  br label %cond.end35, !dbg !6284

cond.end35:                                       ; preds = %cond.false34, %cond.end
  %cond36 = phi %struct.rtx_def* [ %cond, %cond.end ], [ null, %cond.false34 ], !dbg !6284
  store %struct.rtx_def* %cond36, %struct.rtx_def** %insn_set, align 8, !dbg !6285
  %23 = load %struct.rtx_def*, %struct.rtx_def** %insn_set, align 8, !dbg !6286
  %tobool = icmp ne %struct.rtx_def* %23, null, !dbg !6286
  br i1 %tobool, label %if.then37, label %if.end124, !dbg !6288

if.then37:                                        ; preds = %cond.end35
  %24 = load %struct.rtx_def*, %struct.rtx_def** %last, align 8, !dbg !6289
  %25 = bitcast %struct.rtx_def* %24 to i32*, !dbg !6289
  %bf.load38 = load i32, i32* %25, align 8, !dbg !6289
  %bf.clear39 = and i32 %bf.load38, 65535, !dbg !6289
  %cmp40 = icmp eq i32 %bf.clear39, 8, !dbg !6289
  br i1 %cmp40, label %cond.true53, label %lor.lhs.false41, !dbg !6289

lor.lhs.false41:                                  ; preds = %if.then37
  %26 = load %struct.rtx_def*, %struct.rtx_def** %last, align 8, !dbg !6289
  %27 = bitcast %struct.rtx_def* %26 to i32*, !dbg !6289
  %bf.load42 = load i32, i32* %27, align 8, !dbg !6289
  %bf.clear43 = and i32 %bf.load42, 65535, !dbg !6289
  %cmp44 = icmp eq i32 %bf.clear43, 7, !dbg !6289
  br i1 %cmp44, label %cond.true53, label %lor.lhs.false45, !dbg !6289

lor.lhs.false45:                                  ; preds = %lor.lhs.false41
  %28 = load %struct.rtx_def*, %struct.rtx_def** %last, align 8, !dbg !6289
  %29 = bitcast %struct.rtx_def* %28 to i32*, !dbg !6289
  %bf.load46 = load i32, i32* %29, align 8, !dbg !6289
  %bf.clear47 = and i32 %bf.load46, 65535, !dbg !6289
  %cmp48 = icmp eq i32 %bf.clear47, 9, !dbg !6289
  br i1 %cmp48, label %cond.true53, label %lor.lhs.false49, !dbg !6289

lor.lhs.false49:                                  ; preds = %lor.lhs.false45
  %30 = load %struct.rtx_def*, %struct.rtx_def** %last, align 8, !dbg !6289
  %31 = bitcast %struct.rtx_def* %30 to i32*, !dbg !6289
  %bf.load50 = load i32, i32* %31, align 8, !dbg !6289
  %bf.clear51 = and i32 %bf.load50, 65535, !dbg !6289
  %cmp52 = icmp eq i32 %bf.clear51, 10, !dbg !6289
  br i1 %cmp52, label %cond.true53, label %cond.false74, !dbg !6289

cond.true53:                                      ; preds = %lor.lhs.false49, %lor.lhs.false45, %lor.lhs.false41, %if.then37
  %32 = load %struct.rtx_def*, %struct.rtx_def** %last, align 8, !dbg !6289
  %u54 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %32, i32 0, i32 1, !dbg !6289
  %fld55 = bitcast %union.u* %u54 to [1 x %union.rtunion_def]*, !dbg !6289
  %arrayidx56 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld55, i64 0, i64 5, !dbg !6289
  %rt_rtx57 = bitcast %union.rtunion_def* %arrayidx56 to %struct.rtx_def**, !dbg !6289
  %33 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx57, align 8, !dbg !6289
  %34 = bitcast %struct.rtx_def* %33 to i32*, !dbg !6289
  %bf.load58 = load i32, i32* %34, align 8, !dbg !6289
  %bf.clear59 = and i32 %bf.load58, 65535, !dbg !6289
  %cmp60 = icmp eq i32 %bf.clear59, 23, !dbg !6289
  br i1 %cmp60, label %cond.true61, label %cond.false66, !dbg !6289

cond.true61:                                      ; preds = %cond.true53
  %35 = load %struct.rtx_def*, %struct.rtx_def** %last, align 8, !dbg !6289
  %u62 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %35, i32 0, i32 1, !dbg !6289
  %fld63 = bitcast %union.u* %u62 to [1 x %union.rtunion_def]*, !dbg !6289
  %arrayidx64 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld63, i64 0, i64 5, !dbg !6289
  %rt_rtx65 = bitcast %union.rtunion_def* %arrayidx64 to %struct.rtx_def**, !dbg !6289
  %36 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx65, align 8, !dbg !6289
  br label %cond.end72, !dbg !6289

cond.false66:                                     ; preds = %cond.true53
  %37 = load %struct.rtx_def*, %struct.rtx_def** %last, align 8, !dbg !6289
  %38 = load %struct.rtx_def*, %struct.rtx_def** %last, align 8, !dbg !6289
  %u67 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %38, i32 0, i32 1, !dbg !6289
  %fld68 = bitcast %union.u* %u67 to [1 x %union.rtunion_def]*, !dbg !6289
  %arrayidx69 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld68, i64 0, i64 5, !dbg !6289
  %rt_rtx70 = bitcast %union.rtunion_def* %arrayidx69 to %struct.rtx_def**, !dbg !6289
  %39 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx70, align 8, !dbg !6289
  %call71 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %37, %struct.rtx_def* %39), !dbg !6289
  br label %cond.end72, !dbg !6289

cond.end72:                                       ; preds = %cond.false66, %cond.true61
  %cond73 = phi %struct.rtx_def* [ %36, %cond.true61 ], [ %call71, %cond.false66 ], !dbg !6289
  br label %cond.end75, !dbg !6289

cond.false74:                                     ; preds = %lor.lhs.false49
  br label %cond.end75, !dbg !6289

cond.end75:                                       ; preds = %cond.false74, %cond.end72
  %cond76 = phi %struct.rtx_def* [ %cond73, %cond.end72 ], [ null, %cond.false74 ], !dbg !6289
  store %struct.rtx_def* %cond76, %struct.rtx_def** %last_set, align 8, !dbg !6291
  %40 = load %struct.rtx_def*, %struct.rtx_def** %last_set, align 8, !dbg !6292
  %tobool77 = icmp ne %struct.rtx_def* %40, null, !dbg !6292
  br i1 %tobool77, label %land.lhs.true, label %if.end123, !dbg !6294

land.lhs.true:                                    ; preds = %cond.end75
  %41 = load %struct.rtx_def*, %struct.rtx_def** %last_set, align 8, !dbg !6295
  %u78 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %41, i32 0, i32 1, !dbg !6295
  %fld79 = bitcast %union.u* %u78 to [1 x %union.rtunion_def]*, !dbg !6295
  %arrayidx80 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld79, i64 0, i64 0, !dbg !6295
  %rt_rtx81 = bitcast %union.rtunion_def* %arrayidx80 to %struct.rtx_def**, !dbg !6295
  %42 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx81, align 8, !dbg !6295
  %43 = load %struct.rtx_def*, %struct.rtx_def** %insn_set, align 8, !dbg !6296
  %u82 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %43, i32 0, i32 1, !dbg !6296
  %fld83 = bitcast %union.u* %u82 to [1 x %union.rtunion_def]*, !dbg !6296
  %arrayidx84 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld83, i64 0, i64 0, !dbg !6296
  %rt_rtx85 = bitcast %union.rtunion_def* %arrayidx84 to %struct.rtx_def**, !dbg !6296
  %44 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx85, align 8, !dbg !6296
  %call86 = call i32 @rtx_equal_p(%struct.rtx_def* %42, %struct.rtx_def* %44), !dbg !6297
  %tobool87 = icmp ne i32 %call86, 0, !dbg !6297
  br i1 %tobool87, label %if.then88, label %if.end123, !dbg !6298

if.then88:                                        ; preds = %land.lhs.true
  %45 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !6299
  %call89 = call %struct.rtx_def* @find_reg_equal_equiv_note(%struct.rtx_def* %45), !dbg !6301
  store %struct.rtx_def* %call89, %struct.rtx_def** %note, align 8, !dbg !6302
  %46 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8, !dbg !6303
  %tobool90 = icmp ne %struct.rtx_def* %46, null, !dbg !6303
  br i1 %tobool90, label %land.lhs.true91, label %if.else, !dbg !6305

land.lhs.true91:                                  ; preds = %if.then88
  %47 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8, !dbg !6306
  %u92 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %47, i32 0, i32 1, !dbg !6306
  %fld93 = bitcast %union.u* %u92 to [1 x %union.rtunion_def]*, !dbg !6306
  %arrayidx94 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld93, i64 0, i64 0, !dbg !6306
  %rt_rtx95 = bitcast %union.rtunion_def* %arrayidx94 to %struct.rtx_def**, !dbg !6306
  %48 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx95, align 8, !dbg !6306
  %49 = bitcast %struct.rtx_def* %48 to i32*, !dbg !6306
  %bf.load96 = load i32, i32* %49, align 8, !dbg !6306
  %bf.clear97 = and i32 %bf.load96, 65535, !dbg !6306
  %idxprom = sext i32 %bf.clear97 to i64, !dbg !6306
  %arrayidx98 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom, !dbg !6306
  %50 = load i32, i32* %arrayidx98, align 4, !dbg !6306
  %cmp99 = icmp eq i32 %50, 9, !dbg !6306
  br i1 %cmp99, label %if.then100, label %if.else, !dbg !6307

if.then100:                                       ; preds = %land.lhs.true91
  %51 = load %struct.rtx_def*, %struct.rtx_def** %last, align 8, !dbg !6308
  %52 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8, !dbg !6309
  %u101 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %52, i32 0, i32 1, !dbg !6309
  %fld102 = bitcast %union.u* %u101 to [1 x %union.rtunion_def]*, !dbg !6309
  %arrayidx103 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld102, i64 0, i64 0, !dbg !6309
  %rt_rtx104 = bitcast %union.rtunion_def* %arrayidx103 to %struct.rtx_def**, !dbg !6309
  %53 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx104, align 8, !dbg !6309
  %call105 = call %struct.rtx_def* @set_unique_reg_note(%struct.rtx_def* %51, i32 4, %struct.rtx_def* %53), !dbg !6310
  br label %if.end122, !dbg !6310

if.else:                                          ; preds = %land.lhs.true91, %if.then88
  %54 = load %struct.rtx_def*, %struct.rtx_def** %insn_set, align 8, !dbg !6311
  %u106 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %54, i32 0, i32 1, !dbg !6311
  %fld107 = bitcast %union.u* %u106 to [1 x %union.rtunion_def]*, !dbg !6311
  %arrayidx108 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld107, i64 0, i64 1, !dbg !6311
  %rt_rtx109 = bitcast %union.rtunion_def* %arrayidx108 to %struct.rtx_def**, !dbg !6311
  %55 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx109, align 8, !dbg !6311
  %56 = bitcast %struct.rtx_def* %55 to i32*, !dbg !6311
  %bf.load110 = load i32, i32* %56, align 8, !dbg !6311
  %bf.clear111 = and i32 %bf.load110, 65535, !dbg !6311
  %idxprom112 = sext i32 %bf.clear111 to i64, !dbg !6311
  %arrayidx113 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom112, !dbg !6311
  %57 = load i32, i32* %arrayidx113, align 4, !dbg !6311
  %cmp114 = icmp eq i32 %57, 9, !dbg !6311
  br i1 %cmp114, label %if.then115, label %if.end121, !dbg !6313

if.then115:                                       ; preds = %if.else
  %58 = load %struct.rtx_def*, %struct.rtx_def** %last, align 8, !dbg !6314
  %59 = load %struct.rtx_def*, %struct.rtx_def** %insn_set, align 8, !dbg !6315
  %u116 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %59, i32 0, i32 1, !dbg !6315
  %fld117 = bitcast %union.u* %u116 to [1 x %union.rtunion_def]*, !dbg !6315
  %arrayidx118 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld117, i64 0, i64 1, !dbg !6315
  %rt_rtx119 = bitcast %union.rtunion_def* %arrayidx118 to %struct.rtx_def**, !dbg !6315
  %60 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx119, align 8, !dbg !6315
  %call120 = call %struct.rtx_def* @set_unique_reg_note(%struct.rtx_def* %58, i32 4, %struct.rtx_def* %60), !dbg !6316
  br label %if.end121, !dbg !6316

if.end121:                                        ; preds = %if.then115, %if.else
  br label %if.end122

if.end122:                                        ; preds = %if.end121, %if.then100
  br label %if.end123, !dbg !6317

if.end123:                                        ; preds = %if.end122, %land.lhs.true, %cond.end75
  br label %if.end124, !dbg !6318

if.end124:                                        ; preds = %if.end123, %cond.end35
  %61 = load %struct.rtx_def*, %struct.rtx_def** %insn.addr, align 8, !dbg !6319
  call void @set_insn_deleted(%struct.rtx_def* %61), !dbg !6319
  %62 = load i32, i32* @reload_completed, align 4, !dbg !6320
  %tobool125 = icmp ne i32 %62, 0, !dbg !6320
  br i1 %tobool125, label %land.lhs.true126, label %if.end157, !dbg !6322

land.lhs.true126:                                 ; preds = %if.end124
  %63 = load %struct.rtx_def*, %struct.rtx_def** %first, align 8, !dbg !6323
  %64 = load %struct.rtx_def*, %struct.rtx_def** %last, align 8, !dbg !6324
  %cmp127 = icmp ne %struct.rtx_def* %63, %64, !dbg !6325
  br i1 %cmp127, label %if.then128, label %if.end157, !dbg !6326

if.then128:                                       ; preds = %land.lhs.true126
  %65 = load %struct.rtx_def*, %struct.rtx_def** %first, align 8, !dbg !6327
  %u129 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %65, i32 0, i32 1, !dbg !6327
  %fld130 = bitcast %union.u* %u129 to [1 x %union.rtunion_def]*, !dbg !6327
  %arrayidx131 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld130, i64 0, i64 2, !dbg !6327
  %rt_rtx132 = bitcast %union.rtunion_def* %arrayidx131 to %struct.rtx_def**, !dbg !6327
  %66 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx132, align 8, !dbg !6327
  store %struct.rtx_def* %66, %struct.rtx_def** %first, align 8, !dbg !6329
  br label %for.cond, !dbg !6330

for.cond:                                         ; preds = %if.end152, %if.then128
  %67 = load %struct.rtx_def*, %struct.rtx_def** %first, align 8, !dbg !6331
  %68 = bitcast %struct.rtx_def* %67 to i32*, !dbg !6331
  %bf.load133 = load i32, i32* %68, align 8, !dbg !6331
  %bf.clear134 = and i32 %bf.load133, 65535, !dbg !6331
  %cmp135 = icmp eq i32 %bf.clear134, 8, !dbg !6331
  br i1 %cmp135, label %if.then148, label %lor.lhs.false136, !dbg !6331

lor.lhs.false136:                                 ; preds = %for.cond
  %69 = load %struct.rtx_def*, %struct.rtx_def** %first, align 8, !dbg !6331
  %70 = bitcast %struct.rtx_def* %69 to i32*, !dbg !6331
  %bf.load137 = load i32, i32* %70, align 8, !dbg !6331
  %bf.clear138 = and i32 %bf.load137, 65535, !dbg !6331
  %cmp139 = icmp eq i32 %bf.clear138, 7, !dbg !6331
  br i1 %cmp139, label %if.then148, label %lor.lhs.false140, !dbg !6331

lor.lhs.false140:                                 ; preds = %lor.lhs.false136
  %71 = load %struct.rtx_def*, %struct.rtx_def** %first, align 8, !dbg !6331
  %72 = bitcast %struct.rtx_def* %71 to i32*, !dbg !6331
  %bf.load141 = load i32, i32* %72, align 8, !dbg !6331
  %bf.clear142 = and i32 %bf.load141, 65535, !dbg !6331
  %cmp143 = icmp eq i32 %bf.clear142, 9, !dbg !6331
  br i1 %cmp143, label %if.then148, label %lor.lhs.false144, !dbg !6331

lor.lhs.false144:                                 ; preds = %lor.lhs.false140
  %73 = load %struct.rtx_def*, %struct.rtx_def** %first, align 8, !dbg !6331
  %74 = bitcast %struct.rtx_def* %73 to i32*, !dbg !6331
  %bf.load145 = load i32, i32* %74, align 8, !dbg !6331
  %bf.clear146 = and i32 %bf.load145, 65535, !dbg !6331
  %cmp147 = icmp eq i32 %bf.clear146, 10, !dbg !6331
  br i1 %cmp147, label %if.then148, label %if.end149, !dbg !6336

if.then148:                                       ; preds = %lor.lhs.false144, %lor.lhs.false140, %lor.lhs.false136, %for.cond
  %75 = load %struct.rtx_def*, %struct.rtx_def** %first, align 8, !dbg !6337
  call void @cleanup_subreg_operands(%struct.rtx_def* %75), !dbg !6338
  br label %if.end149, !dbg !6338

if.end149:                                        ; preds = %if.then148, %lor.lhs.false144
  %76 = load %struct.rtx_def*, %struct.rtx_def** %first, align 8, !dbg !6339
  %77 = load %struct.rtx_def*, %struct.rtx_def** %last, align 8, !dbg !6341
  %cmp150 = icmp eq %struct.rtx_def* %76, %77, !dbg !6342
  br i1 %cmp150, label %if.then151, label %if.end152, !dbg !6343

if.then151:                                       ; preds = %if.end149
  br label %for.end, !dbg !6344

if.end152:                                        ; preds = %if.end149
  %78 = load %struct.rtx_def*, %struct.rtx_def** %first, align 8, !dbg !6345
  %u153 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %78, i32 0, i32 1, !dbg !6345
  %fld154 = bitcast %union.u* %u153 to [1 x %union.rtunion_def]*, !dbg !6345
  %arrayidx155 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld154, i64 0, i64 2, !dbg !6345
  %rt_rtx156 = bitcast %union.rtunion_def* %arrayidx155 to %struct.rtx_def**, !dbg !6345
  %79 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx156, align 8, !dbg !6345
  store %struct.rtx_def* %79, %struct.rtx_def** %first, align 8, !dbg !6346
  br label %for.cond, !dbg !6347, !llvm.loop !6348

for.end:                                          ; preds = %if.then151
  br label %if.end157, !dbg !6351

if.end157:                                        ; preds = %for.end, %land.lhs.true126, %if.end124
  %80 = load %struct.rtx_def*, %struct.rtx_def** %last, align 8, !dbg !6352
  store %struct.rtx_def* %80, %struct.rtx_def** %retval, align 8, !dbg !6353
  br label %return, !dbg !6353

return:                                           ; preds = %if.end157, %if.then
  %81 = load %struct.rtx_def*, %struct.rtx_def** %retval, align 8, !dbg !6354
  ret %struct.rtx_def* %81, !dbg !6354
}

; Function Attrs: noinline nounwind uwtable
define internal void @SET_BIT(%struct.simple_bitmap_def* %map, i32 %bitno) #0 !dbg !6355 {
entry:
  %map.addr = alloca %struct.simple_bitmap_def*, align 8
  %bitno.addr = alloca i32, align 4
  %oldbit = alloca i8, align 1
  store %struct.simple_bitmap_def* %map, %struct.simple_bitmap_def** %map.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.simple_bitmap_def** %map.addr, metadata !6358, metadata !DIExpression()), !dbg !6359
  store i32 %bitno, i32* %bitno.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %bitno.addr, metadata !6360, metadata !DIExpression()), !dbg !6361
  %0 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %map.addr, align 8, !dbg !6362
  %popcount = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %0, i32 0, i32 0, !dbg !6364
  %1 = load i8*, i8** %popcount, align 8, !dbg !6364
  %tobool = icmp ne i8* %1, null, !dbg !6362
  br i1 %tobool, label %if.then, label %if.end7, !dbg !6365

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i8* %oldbit, metadata !6366, metadata !DIExpression()), !dbg !6368
  %2 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %map.addr, align 8, !dbg !6369
  %elms = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %2, i32 0, i32 3, !dbg !6369
  %3 = load i32, i32* %bitno.addr, align 4, !dbg !6369
  %div = udiv i32 %3, 64, !dbg !6369
  %idxprom = zext i32 %div to i64, !dbg !6369
  %arrayidx = getelementptr inbounds [1 x i64], [1 x i64]* %elms, i64 0, i64 %idxprom, !dbg !6369
  %4 = load i64, i64* %arrayidx, align 8, !dbg !6369
  %5 = load i32, i32* %bitno.addr, align 4, !dbg !6369
  %rem = urem i32 %5, 64, !dbg !6369
  %sh_prom = zext i32 %rem to i64, !dbg !6369
  %shr = lshr i64 %4, %sh_prom, !dbg !6369
  %and = and i64 %shr, 1, !dbg !6369
  %conv = trunc i64 %and to i8, !dbg !6369
  store i8 %conv, i8* %oldbit, align 1, !dbg !6370
  %6 = load i8, i8* %oldbit, align 1, !dbg !6371
  %tobool1 = icmp ne i8 %6, 0, !dbg !6371
  br i1 %tobool1, label %if.end, label %if.then2, !dbg !6373

if.then2:                                         ; preds = %if.then
  %7 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %map.addr, align 8, !dbg !6374
  %popcount3 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %7, i32 0, i32 0, !dbg !6375
  %8 = load i8*, i8** %popcount3, align 8, !dbg !6375
  %9 = load i32, i32* %bitno.addr, align 4, !dbg !6376
  %div4 = udiv i32 %9, 64, !dbg !6377
  %idxprom5 = zext i32 %div4 to i64, !dbg !6374
  %arrayidx6 = getelementptr inbounds i8, i8* %8, i64 %idxprom5, !dbg !6374
  %10 = load i8, i8* %arrayidx6, align 1, !dbg !6378
  %inc = add i8 %10, 1, !dbg !6378
  store i8 %inc, i8* %arrayidx6, align 1, !dbg !6378
  br label %if.end, !dbg !6374

if.end:                                           ; preds = %if.then2, %if.then
  br label %if.end7, !dbg !6379

if.end7:                                          ; preds = %if.end, %entry
  %11 = load i32, i32* %bitno.addr, align 4, !dbg !6380
  %rem8 = urem i32 %11, 64, !dbg !6381
  %sh_prom9 = zext i32 %rem8 to i64, !dbg !6382
  %shl = shl i64 1, %sh_prom9, !dbg !6382
  %12 = load %struct.simple_bitmap_def*, %struct.simple_bitmap_def** %map.addr, align 8, !dbg !6383
  %elms10 = getelementptr inbounds %struct.simple_bitmap_def, %struct.simple_bitmap_def* %12, i32 0, i32 3, !dbg !6384
  %13 = load i32, i32* %bitno.addr, align 4, !dbg !6385
  %div11 = udiv i32 %13, 64, !dbg !6386
  %idxprom12 = zext i32 %div11 to i64, !dbg !6383
  %arrayidx13 = getelementptr inbounds [1 x i64], [1 x i64]* %elms10, i64 0, i64 %idxprom12, !dbg !6383
  %14 = load i64, i64* %arrayidx13, align 8, !dbg !6387
  %or = or i64 %14, %shl, !dbg !6387
  store i64 %or, i64* %arrayidx13, align 8, !dbg !6387
  ret void, !dbg !6388
}

declare dso_local void @default_rtl_profile() #2

declare dso_local void @find_many_sub_basic_blocks(%struct.simple_bitmap_def*) #2

declare dso_local void @free(i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @split_all_insns_noflow() #0 !dbg !6389 {
entry:
  %next = alloca %struct.rtx_def*, align 8
  %insn = alloca %struct.rtx_def*, align 8
  %set = alloca %struct.rtx_def*, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %next, metadata !6390, metadata !DIExpression()), !dbg !6391
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn, metadata !6392, metadata !DIExpression()), !dbg !6393
  %call = call %struct.rtx_def* @get_insns(), !dbg !6394
  store %struct.rtx_def* %call, %struct.rtx_def** %insn, align 8, !dbg !6396
  br label %for.cond, !dbg !6397

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6398
  %tobool = icmp ne %struct.rtx_def* %0, null, !dbg !6400
  br i1 %tobool, label %for.body, label %for.end, !dbg !6400

for.body:                                         ; preds = %for.cond
  %1 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6401
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %1, i32 0, i32 1, !dbg !6401
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !6401
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 2, !dbg !6401
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !6401
  %2 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6401
  store %struct.rtx_def* %2, %struct.rtx_def** %next, align 8, !dbg !6403
  %3 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6404
  %4 = bitcast %struct.rtx_def* %3 to i32*, !dbg !6404
  %bf.load = load i32, i32* %4, align 8, !dbg !6404
  %bf.clear = and i32 %bf.load, 65535, !dbg !6404
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !6404
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !6404

lor.lhs.false:                                    ; preds = %for.body
  %5 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6404
  %6 = bitcast %struct.rtx_def* %5 to i32*, !dbg !6404
  %bf.load1 = load i32, i32* %6, align 8, !dbg !6404
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !6404
  %cmp3 = icmp eq i32 %bf.clear2, 7, !dbg !6404
  br i1 %cmp3, label %if.then, label %lor.lhs.false4, !dbg !6404

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %7 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6404
  %8 = bitcast %struct.rtx_def* %7 to i32*, !dbg !6404
  %bf.load5 = load i32, i32* %8, align 8, !dbg !6404
  %bf.clear6 = and i32 %bf.load5, 65535, !dbg !6404
  %cmp7 = icmp eq i32 %bf.clear6, 9, !dbg !6404
  br i1 %cmp7, label %if.then, label %lor.lhs.false8, !dbg !6404

lor.lhs.false8:                                   ; preds = %lor.lhs.false4
  %9 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6404
  %10 = bitcast %struct.rtx_def* %9 to i32*, !dbg !6404
  %bf.load9 = load i32, i32* %10, align 8, !dbg !6404
  %bf.clear10 = and i32 %bf.load9, 65535, !dbg !6404
  %cmp11 = icmp eq i32 %bf.clear10, 10, !dbg !6404
  br i1 %cmp11, label %if.then, label %if.end56, !dbg !6406

if.then:                                          ; preds = %lor.lhs.false8, %lor.lhs.false4, %lor.lhs.false, %for.body
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %set, metadata !6407, metadata !DIExpression()), !dbg !6409
  %11 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6410
  %12 = bitcast %struct.rtx_def* %11 to i32*, !dbg !6410
  %bf.load12 = load i32, i32* %12, align 8, !dbg !6410
  %bf.clear13 = and i32 %bf.load12, 65535, !dbg !6410
  %cmp14 = icmp eq i32 %bf.clear13, 8, !dbg !6410
  br i1 %cmp14, label %cond.true, label %lor.lhs.false15, !dbg !6410

lor.lhs.false15:                                  ; preds = %if.then
  %13 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6410
  %14 = bitcast %struct.rtx_def* %13 to i32*, !dbg !6410
  %bf.load16 = load i32, i32* %14, align 8, !dbg !6410
  %bf.clear17 = and i32 %bf.load16, 65535, !dbg !6410
  %cmp18 = icmp eq i32 %bf.clear17, 7, !dbg !6410
  br i1 %cmp18, label %cond.true, label %lor.lhs.false19, !dbg !6410

lor.lhs.false19:                                  ; preds = %lor.lhs.false15
  %15 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6410
  %16 = bitcast %struct.rtx_def* %15 to i32*, !dbg !6410
  %bf.load20 = load i32, i32* %16, align 8, !dbg !6410
  %bf.clear21 = and i32 %bf.load20, 65535, !dbg !6410
  %cmp22 = icmp eq i32 %bf.clear21, 9, !dbg !6410
  br i1 %cmp22, label %cond.true, label %lor.lhs.false23, !dbg !6410

lor.lhs.false23:                                  ; preds = %lor.lhs.false19
  %17 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6410
  %18 = bitcast %struct.rtx_def* %17 to i32*, !dbg !6410
  %bf.load24 = load i32, i32* %18, align 8, !dbg !6410
  %bf.clear25 = and i32 %bf.load24, 65535, !dbg !6410
  %cmp26 = icmp eq i32 %bf.clear25, 10, !dbg !6410
  br i1 %cmp26, label %cond.true, label %cond.false44, !dbg !6410

cond.true:                                        ; preds = %lor.lhs.false23, %lor.lhs.false19, %lor.lhs.false15, %if.then
  %19 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6410
  %u27 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %19, i32 0, i32 1, !dbg !6410
  %fld28 = bitcast %union.u* %u27 to [1 x %union.rtunion_def]*, !dbg !6410
  %arrayidx29 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld28, i64 0, i64 5, !dbg !6410
  %rt_rtx30 = bitcast %union.rtunion_def* %arrayidx29 to %struct.rtx_def**, !dbg !6410
  %20 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx30, align 8, !dbg !6410
  %21 = bitcast %struct.rtx_def* %20 to i32*, !dbg !6410
  %bf.load31 = load i32, i32* %21, align 8, !dbg !6410
  %bf.clear32 = and i32 %bf.load31, 65535, !dbg !6410
  %cmp33 = icmp eq i32 %bf.clear32, 23, !dbg !6410
  br i1 %cmp33, label %cond.true34, label %cond.false, !dbg !6410

cond.true34:                                      ; preds = %cond.true
  %22 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6410
  %u35 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %22, i32 0, i32 1, !dbg !6410
  %fld36 = bitcast %union.u* %u35 to [1 x %union.rtunion_def]*, !dbg !6410
  %arrayidx37 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld36, i64 0, i64 5, !dbg !6410
  %rt_rtx38 = bitcast %union.rtunion_def* %arrayidx37 to %struct.rtx_def**, !dbg !6410
  %23 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx38, align 8, !dbg !6410
  br label %cond.end, !dbg !6410

cond.false:                                       ; preds = %cond.true
  %24 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6410
  %25 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6410
  %u39 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %25, i32 0, i32 1, !dbg !6410
  %fld40 = bitcast %union.u* %u39 to [1 x %union.rtunion_def]*, !dbg !6410
  %arrayidx41 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld40, i64 0, i64 5, !dbg !6410
  %rt_rtx42 = bitcast %union.rtunion_def* %arrayidx41 to %struct.rtx_def**, !dbg !6410
  %26 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx42, align 8, !dbg !6410
  %call43 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %24, %struct.rtx_def* %26), !dbg !6410
  br label %cond.end, !dbg !6410

cond.end:                                         ; preds = %cond.false, %cond.true34
  %cond = phi %struct.rtx_def* [ %23, %cond.true34 ], [ %call43, %cond.false ], !dbg !6410
  br label %cond.end45, !dbg !6410

cond.false44:                                     ; preds = %lor.lhs.false23
  br label %cond.end45, !dbg !6410

cond.end45:                                       ; preds = %cond.false44, %cond.end
  %cond46 = phi %struct.rtx_def* [ %cond, %cond.end ], [ null, %cond.false44 ], !dbg !6410
  store %struct.rtx_def* %cond46, %struct.rtx_def** %set, align 8, !dbg !6409
  %27 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !6411
  %tobool47 = icmp ne %struct.rtx_def* %27, null, !dbg !6411
  br i1 %tobool47, label %land.lhs.true, label %if.else, !dbg !6413

land.lhs.true:                                    ; preds = %cond.end45
  %28 = load %struct.rtx_def*, %struct.rtx_def** %set, align 8, !dbg !6414
  %call48 = call i32 @set_noop_p(%struct.rtx_def* %28), !dbg !6415
  %tobool49 = icmp ne i32 %call48, 0, !dbg !6415
  br i1 %tobool49, label %if.then50, label %if.else, !dbg !6416

if.then50:                                        ; preds = %land.lhs.true
  %29 = load i32, i32* @reload_completed, align 4, !dbg !6417
  %tobool51 = icmp ne i32 %29, 0, !dbg !6417
  br i1 %tobool51, label %if.then52, label %if.end, !dbg !6420

if.then52:                                        ; preds = %if.then50
  %30 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6421
  %call53 = call %struct.rtx_def* @delete_insn_and_edges(%struct.rtx_def* %30), !dbg !6422
  br label %if.end, !dbg !6422

if.end:                                           ; preds = %if.then52, %if.then50
  br label %if.end55, !dbg !6423

if.else:                                          ; preds = %land.lhs.true, %cond.end45
  %31 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !6424
  %call54 = call %struct.rtx_def* @split_insn(%struct.rtx_def* %31), !dbg !6425
  br label %if.end55

if.end55:                                         ; preds = %if.else, %if.end
  br label %if.end56, !dbg !6426

if.end56:                                         ; preds = %if.end55, %lor.lhs.false8
  br label %for.inc, !dbg !6427

for.inc:                                          ; preds = %if.end56
  %32 = load %struct.rtx_def*, %struct.rtx_def** %next, align 8, !dbg !6428
  store %struct.rtx_def* %32, %struct.rtx_def** %insn, align 8, !dbg !6429
  br label %for.cond, !dbg !6430, !llvm.loop !6431

for.end:                                          ; preds = %for.cond
  ret i32 0, !dbg !6433
}

declare dso_local %struct.rtx_def* @get_insns() #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.rtx_def* @peep2_next_insn(i32 %n) #0 !dbg !6434 {
entry:
  %n.addr = alloca i32, align 4
  store i32 %n, i32* %n.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %n.addr, metadata !6437, metadata !DIExpression()), !dbg !6438
  %0 = load i32, i32* %n.addr, align 4, !dbg !6439
  %1 = load i32, i32* @peep2_current_count, align 4, !dbg !6439
  %cmp = icmp sle i32 %0, %1, !dbg !6439
  br i1 %cmp, label %cond.false, label %cond.true, !dbg !6439

cond.true:                                        ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i32 2927, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !6439
  br label %cond.end, !dbg !6439

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !6439

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !6439
  %2 = load i32, i32* @peep2_current, align 4, !dbg !6440
  %3 = load i32, i32* %n.addr, align 4, !dbg !6441
  %add = add nsw i32 %3, %2, !dbg !6441
  store i32 %add, i32* %n.addr, align 4, !dbg !6441
  %4 = load i32, i32* %n.addr, align 4, !dbg !6442
  %cmp1 = icmp sge i32 %4, 5, !dbg !6444
  br i1 %cmp1, label %if.then, label %if.end, !dbg !6445

if.then:                                          ; preds = %cond.end
  %5 = load i32, i32* %n.addr, align 4, !dbg !6446
  %sub = sub nsw i32 %5, 5, !dbg !6446
  store i32 %sub, i32* %n.addr, align 4, !dbg !6446
  br label %if.end, !dbg !6447

if.end:                                           ; preds = %if.then, %cond.end
  %6 = load i32, i32* %n.addr, align 4, !dbg !6448
  %idxprom = sext i32 %6 to i64, !dbg !6449
  %arrayidx = getelementptr inbounds [5 x %struct.peep2_insn_data], [5 x %struct.peep2_insn_data]* @peep2_insn_data, i64 0, i64 %idxprom, !dbg !6449
  %insn = getelementptr inbounds %struct.peep2_insn_data, %struct.peep2_insn_data* %arrayidx, i32 0, i32 0, !dbg !6450
  %7 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 16, !dbg !6450
  ret %struct.rtx_def* %7, !dbg !6451
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @peep2_regno_dead_p(i32 %ofs, i32 %regno) #0 !dbg !6452 {
entry:
  %ofs.addr = alloca i32, align 4
  %regno.addr = alloca i32, align 4
  store i32 %ofs, i32* %ofs.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ofs.addr, metadata !6455, metadata !DIExpression()), !dbg !6456
  store i32 %regno, i32* %regno.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %regno.addr, metadata !6457, metadata !DIExpression()), !dbg !6458
  %0 = load i32, i32* %ofs.addr, align 4, !dbg !6459
  %cmp = icmp slt i32 %0, 5, !dbg !6459
  br i1 %cmp, label %cond.false, label %cond.true, !dbg !6459

cond.true:                                        ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i32 2942, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !6459
  br label %cond.end, !dbg !6459

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !6459

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !6459
  %1 = load i32, i32* @peep2_current, align 4, !dbg !6460
  %2 = load i32, i32* %ofs.addr, align 4, !dbg !6461
  %add = add nsw i32 %2, %1, !dbg !6461
  store i32 %add, i32* %ofs.addr, align 4, !dbg !6461
  %3 = load i32, i32* %ofs.addr, align 4, !dbg !6462
  %cmp1 = icmp sge i32 %3, 5, !dbg !6464
  br i1 %cmp1, label %if.then, label %if.end, !dbg !6465

if.then:                                          ; preds = %cond.end
  %4 = load i32, i32* %ofs.addr, align 4, !dbg !6466
  %sub = sub nsw i32 %4, 5, !dbg !6466
  store i32 %sub, i32* %ofs.addr, align 4, !dbg !6466
  br label %if.end, !dbg !6467

if.end:                                           ; preds = %if.then, %cond.end
  %5 = load i32, i32* %ofs.addr, align 4, !dbg !6468
  %idxprom = sext i32 %5 to i64, !dbg !6468
  %arrayidx = getelementptr inbounds [5 x %struct.peep2_insn_data], [5 x %struct.peep2_insn_data]* @peep2_insn_data, i64 0, i64 %idxprom, !dbg !6468
  %insn = getelementptr inbounds %struct.peep2_insn_data, %struct.peep2_insn_data* %arrayidx, i32 0, i32 0, !dbg !6468
  %6 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 16, !dbg !6468
  %cmp2 = icmp ne %struct.rtx_def* %6, null, !dbg !6468
  br i1 %cmp2, label %cond.false4, label %cond.true3, !dbg !6468

cond.true3:                                       ; preds = %if.end
  call void @fancy_abort(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i32 2948, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !6468
  br label %cond.end5, !dbg !6468

cond.false4:                                      ; preds = %if.end
  br label %cond.end5, !dbg !6468

cond.end5:                                        ; preds = %cond.false4, %cond.true3
  %cond6 = phi i32 [ 0, %cond.true3 ], [ 0, %cond.false4 ], !dbg !6468
  %7 = load i32, i32* %ofs.addr, align 4, !dbg !6469
  %idxprom7 = sext i32 %7 to i64, !dbg !6469
  %arrayidx8 = getelementptr inbounds [5 x %struct.peep2_insn_data], [5 x %struct.peep2_insn_data]* @peep2_insn_data, i64 0, i64 %idxprom7, !dbg !6469
  %live_before = getelementptr inbounds %struct.peep2_insn_data, %struct.peep2_insn_data* %arrayidx8, i32 0, i32 1, !dbg !6469
  %8 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %live_before, align 8, !dbg !6469
  %9 = load i32, i32* %regno.addr, align 4, !dbg !6469
  %call = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %8, i32 %9), !dbg !6469
  %tobool = icmp ne i32 %call, 0, !dbg !6470
  %lnot = xor i1 %tobool, true, !dbg !6470
  %lnot.ext = zext i1 %lnot to i32, !dbg !6470
  ret i32 %lnot.ext, !dbg !6471
}

declare dso_local i32 @bitmap_bit_p(%struct.bitmap_head_def*, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @peep2_reg_dead_p(i32 %ofs, %struct.rtx_def* %reg) #0 !dbg !6472 {
entry:
  %retval = alloca i32, align 4
  %ofs.addr = alloca i32, align 4
  %reg.addr = alloca %struct.rtx_def*, align 8
  %regno = alloca i32, align 4
  %n = alloca i32, align 4
  store i32 %ofs, i32* %ofs.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ofs.addr, metadata !6475, metadata !DIExpression()), !dbg !6476
  store %struct.rtx_def* %reg, %struct.rtx_def** %reg.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %reg.addr, metadata !6477, metadata !DIExpression()), !dbg !6478
  call void @llvm.dbg.declare(metadata i32* %regno, metadata !6479, metadata !DIExpression()), !dbg !6480
  call void @llvm.dbg.declare(metadata i32* %n, metadata !6481, metadata !DIExpression()), !dbg !6482
  %0 = load i32, i32* %ofs.addr, align 4, !dbg !6483
  %cmp = icmp slt i32 %0, 5, !dbg !6483
  br i1 %cmp, label %cond.false, label %cond.true, !dbg !6483

cond.true:                                        ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i32 2960, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !6483
  br label %cond.end, !dbg !6483

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !6483

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !6483
  %1 = load i32, i32* @peep2_current, align 4, !dbg !6484
  %2 = load i32, i32* %ofs.addr, align 4, !dbg !6485
  %add = add nsw i32 %2, %1, !dbg !6485
  store i32 %add, i32* %ofs.addr, align 4, !dbg !6485
  %3 = load i32, i32* %ofs.addr, align 4, !dbg !6486
  %cmp1 = icmp sge i32 %3, 5, !dbg !6488
  br i1 %cmp1, label %if.then, label %if.end, !dbg !6489

if.then:                                          ; preds = %cond.end
  %4 = load i32, i32* %ofs.addr, align 4, !dbg !6490
  %sub = sub nsw i32 %4, 5, !dbg !6490
  store i32 %sub, i32* %ofs.addr, align 4, !dbg !6490
  br label %if.end, !dbg !6491

if.end:                                           ; preds = %if.then, %cond.end
  %5 = load i32, i32* %ofs.addr, align 4, !dbg !6492
  %idxprom = sext i32 %5 to i64, !dbg !6492
  %arrayidx = getelementptr inbounds [5 x %struct.peep2_insn_data], [5 x %struct.peep2_insn_data]* @peep2_insn_data, i64 0, i64 %idxprom, !dbg !6492
  %insn = getelementptr inbounds %struct.peep2_insn_data, %struct.peep2_insn_data* %arrayidx, i32 0, i32 0, !dbg !6492
  %6 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 16, !dbg !6492
  %cmp2 = icmp ne %struct.rtx_def* %6, null, !dbg !6492
  br i1 %cmp2, label %cond.false4, label %cond.true3, !dbg !6492

cond.true3:                                       ; preds = %if.end
  call void @fancy_abort(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i32 2966, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !6492
  br label %cond.end5, !dbg !6492

cond.false4:                                      ; preds = %if.end
  br label %cond.end5, !dbg !6492

cond.end5:                                        ; preds = %cond.false4, %cond.true3
  %cond6 = phi i32 [ 0, %cond.true3 ], [ 0, %cond.false4 ], !dbg !6492
  %7 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8, !dbg !6493
  %call = call i32 @rhs_regno(%struct.rtx_def* %7), !dbg !6493
  store i32 %call, i32* %regno, align 4, !dbg !6494
  %8 = load i32, i32* %regno, align 4, !dbg !6495
  %idxprom7 = sext i32 %8 to i64, !dbg !6496
  %arrayidx8 = getelementptr inbounds [53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 %idxprom7, !dbg !6496
  %9 = load %struct.rtx_def*, %struct.rtx_def** %reg.addr, align 8, !dbg !6497
  %10 = bitcast %struct.rtx_def* %9 to i32*, !dbg !6497
  %bf.load = load i32, i32* %10, align 8, !dbg !6497
  %bf.lshr = lshr i32 %bf.load, 16, !dbg !6497
  %bf.clear = and i32 %bf.lshr, 255, !dbg !6497
  %idxprom9 = zext i32 %bf.clear to i64, !dbg !6496
  %arrayidx10 = getelementptr inbounds [87 x i8], [87 x i8]* %arrayidx8, i64 0, i64 %idxprom9, !dbg !6496
  %11 = load i8, i8* %arrayidx10, align 1, !dbg !6496
  %conv = zext i8 %11 to i32, !dbg !6496
  store i32 %conv, i32* %n, align 4, !dbg !6498
  br label %while.cond, !dbg !6499

while.cond:                                       ; preds = %if.end18, %cond.end5
  %12 = load i32, i32* %n, align 4, !dbg !6500
  %dec = add nsw i32 %12, -1, !dbg !6500
  store i32 %dec, i32* %n, align 4, !dbg !6500
  %cmp11 = icmp sge i32 %dec, 0, !dbg !6501
  br i1 %cmp11, label %while.body, label %while.end, !dbg !6499

while.body:                                       ; preds = %while.cond
  %13 = load i32, i32* %ofs.addr, align 4, !dbg !6502
  %idxprom13 = sext i32 %13 to i64, !dbg !6502
  %arrayidx14 = getelementptr inbounds [5 x %struct.peep2_insn_data], [5 x %struct.peep2_insn_data]* @peep2_insn_data, i64 0, i64 %idxprom13, !dbg !6502
  %live_before = getelementptr inbounds %struct.peep2_insn_data, %struct.peep2_insn_data* %arrayidx14, i32 0, i32 1, !dbg !6502
  %14 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %live_before, align 8, !dbg !6502
  %15 = load i32, i32* %regno, align 4, !dbg !6502
  %16 = load i32, i32* %n, align 4, !dbg !6502
  %add15 = add nsw i32 %15, %16, !dbg !6502
  %call16 = call i32 @bitmap_bit_p(%struct.bitmap_head_def* %14, i32 %add15), !dbg !6502
  %tobool = icmp ne i32 %call16, 0, !dbg !6502
  br i1 %tobool, label %if.then17, label %if.end18, !dbg !6504

if.then17:                                        ; preds = %while.body
  store i32 0, i32* %retval, align 4, !dbg !6505
  br label %return, !dbg !6505

if.end18:                                         ; preds = %while.body
  br label %while.cond, !dbg !6499, !llvm.loop !6506

while.end:                                        ; preds = %while.cond
  store i32 1, i32* %retval, align 4, !dbg !6508
  br label %return, !dbg !6508

return:                                           ; preds = %while.end, %if.then17
  %17 = load i32, i32* %retval, align 4, !dbg !6509
  ret i32 %17, !dbg !6509
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.rtx_def* @peep2_find_free_register(i32 %from, i32 %to, i8* %class_str, i32 %mode, i64* %reg_set) #0 !dbg !2009 {
entry:
  %retval = alloca %struct.rtx_def*, align 8
  %from.addr = alloca i32, align 4
  %to.addr = alloca i32, align 4
  %class_str.addr = alloca i8*, align 8
  %mode.addr = alloca i32, align 4
  %reg_set.addr = alloca i64*, align 8
  %cl = alloca i32, align 4
  %live = alloca i64, align 8
  %i = alloca i32, align 4
  %this_live = alloca i64, align 8
  %raw_regno = alloca i32, align 4
  %regno = alloca i32, align 4
  %success = alloca i32, align 4
  %j = alloca i32, align 4
  store i32 %from, i32* %from.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %from.addr, metadata !6510, metadata !DIExpression()), !dbg !6511
  store i32 %to, i32* %to.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %to.addr, metadata !6512, metadata !DIExpression()), !dbg !6513
  store i8* %class_str, i8** %class_str.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %class_str.addr, metadata !6514, metadata !DIExpression()), !dbg !6515
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !6516, metadata !DIExpression()), !dbg !6517
  store i64* %reg_set, i64** %reg_set.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %reg_set.addr, metadata !6518, metadata !DIExpression()), !dbg !6519
  call void @llvm.dbg.declare(metadata i32* %cl, metadata !6520, metadata !DIExpression()), !dbg !6521
  call void @llvm.dbg.declare(metadata i64* %live, metadata !6522, metadata !DIExpression()), !dbg !6523
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6524, metadata !DIExpression()), !dbg !6525
  %0 = load i32, i32* %from.addr, align 4, !dbg !6526
  %cmp = icmp slt i32 %0, 5, !dbg !6526
  br i1 %cmp, label %cond.false, label %cond.true, !dbg !6526

cond.true:                                        ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i32 2996, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !6526
  br label %cond.end, !dbg !6526

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !6526

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !6526
  %1 = load i32, i32* %to.addr, align 4, !dbg !6527
  %cmp1 = icmp slt i32 %1, 5, !dbg !6527
  br i1 %cmp1, label %cond.false3, label %cond.true2, !dbg !6527

cond.true2:                                       ; preds = %cond.end
  call void @fancy_abort(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i32 2997, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !6527
  br label %cond.end4, !dbg !6527

cond.false3:                                      ; preds = %cond.end
  br label %cond.end4, !dbg !6527

cond.end4:                                        ; preds = %cond.false3, %cond.true2
  %cond5 = phi i32 [ 0, %cond.true2 ], [ 0, %cond.false3 ], !dbg !6527
  %2 = load i32, i32* @peep2_current, align 4, !dbg !6528
  %3 = load i32, i32* %from.addr, align 4, !dbg !6529
  %add = add nsw i32 %3, %2, !dbg !6529
  store i32 %add, i32* %from.addr, align 4, !dbg !6529
  %4 = load i32, i32* %from.addr, align 4, !dbg !6530
  %cmp6 = icmp sge i32 %4, 5, !dbg !6532
  br i1 %cmp6, label %if.then, label %if.end, !dbg !6533

if.then:                                          ; preds = %cond.end4
  %5 = load i32, i32* %from.addr, align 4, !dbg !6534
  %sub = sub nsw i32 %5, 5, !dbg !6534
  store i32 %sub, i32* %from.addr, align 4, !dbg !6534
  br label %if.end, !dbg !6535

if.end:                                           ; preds = %if.then, %cond.end4
  %6 = load i32, i32* @peep2_current, align 4, !dbg !6536
  %7 = load i32, i32* %to.addr, align 4, !dbg !6537
  %add7 = add nsw i32 %7, %6, !dbg !6537
  store i32 %add7, i32* %to.addr, align 4, !dbg !6537
  %8 = load i32, i32* %to.addr, align 4, !dbg !6538
  %cmp8 = icmp sge i32 %8, 5, !dbg !6540
  br i1 %cmp8, label %if.then9, label %if.end11, !dbg !6541

if.then9:                                         ; preds = %if.end
  %9 = load i32, i32* %to.addr, align 4, !dbg !6542
  %sub10 = sub nsw i32 %9, 5, !dbg !6542
  store i32 %sub10, i32* %to.addr, align 4, !dbg !6542
  br label %if.end11, !dbg !6543

if.end11:                                         ; preds = %if.then9, %if.end
  %10 = load i32, i32* %from.addr, align 4, !dbg !6544
  %idxprom = sext i32 %10 to i64, !dbg !6544
  %arrayidx = getelementptr inbounds [5 x %struct.peep2_insn_data], [5 x %struct.peep2_insn_data]* @peep2_insn_data, i64 0, i64 %idxprom, !dbg !6544
  %insn = getelementptr inbounds %struct.peep2_insn_data, %struct.peep2_insn_data* %arrayidx, i32 0, i32 0, !dbg !6544
  %11 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 16, !dbg !6544
  %cmp12 = icmp ne %struct.rtx_def* %11, null, !dbg !6544
  br i1 %cmp12, label %cond.false14, label %cond.true13, !dbg !6544

cond.true13:                                      ; preds = %if.end11
  call void @fancy_abort(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i32 3006, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !6544
  br label %cond.end15, !dbg !6544

cond.false14:                                     ; preds = %if.end11
  br label %cond.end15, !dbg !6544

cond.end15:                                       ; preds = %cond.false14, %cond.true13
  %cond16 = phi i32 [ 0, %cond.true13 ], [ 0, %cond.false14 ], !dbg !6544
  br label %do.body, !dbg !6545

do.body:                                          ; preds = %cond.end15
  store i64 0, i64* %live, align 8, !dbg !6546
  %12 = load i32, i32* %from.addr, align 4, !dbg !6546
  %idxprom17 = sext i32 %12 to i64, !dbg !6546
  %arrayidx18 = getelementptr inbounds [5 x %struct.peep2_insn_data], [5 x %struct.peep2_insn_data]* @peep2_insn_data, i64 0, i64 %idxprom17, !dbg !6546
  %live_before = getelementptr inbounds %struct.peep2_insn_data, %struct.peep2_insn_data* %arrayidx18, i32 0, i32 1, !dbg !6546
  %13 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %live_before, align 8, !dbg !6546
  call void @reg_set_to_hard_reg_set(i64* %live, %struct.bitmap_head_def* %13), !dbg !6546
  br label %do.end, !dbg !6546

do.end:                                           ; preds = %do.body
  br label %while.cond, !dbg !6548

while.cond:                                       ; preds = %do.end35, %do.end
  %14 = load i32, i32* %from.addr, align 4, !dbg !6549
  %15 = load i32, i32* %to.addr, align 4, !dbg !6550
  %cmp19 = icmp ne i32 %14, %15, !dbg !6551
  br i1 %cmp19, label %while.body, label %while.end, !dbg !6548

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i64* %this_live, metadata !6552, metadata !DIExpression()), !dbg !6554
  %16 = load i32, i32* %from.addr, align 4, !dbg !6555
  %inc = add nsw i32 %16, 1, !dbg !6555
  store i32 %inc, i32* %from.addr, align 4, !dbg !6555
  %cmp20 = icmp sge i32 %inc, 5, !dbg !6557
  br i1 %cmp20, label %if.then21, label %if.end22, !dbg !6558

if.then21:                                        ; preds = %while.body
  store i32 0, i32* %from.addr, align 4, !dbg !6559
  br label %if.end22, !dbg !6560

if.end22:                                         ; preds = %if.then21, %while.body
  %17 = load i32, i32* %from.addr, align 4, !dbg !6561
  %idxprom23 = sext i32 %17 to i64, !dbg !6561
  %arrayidx24 = getelementptr inbounds [5 x %struct.peep2_insn_data], [5 x %struct.peep2_insn_data]* @peep2_insn_data, i64 0, i64 %idxprom23, !dbg !6561
  %insn25 = getelementptr inbounds %struct.peep2_insn_data, %struct.peep2_insn_data* %arrayidx24, i32 0, i32 0, !dbg !6561
  %18 = load %struct.rtx_def*, %struct.rtx_def** %insn25, align 16, !dbg !6561
  %cmp26 = icmp ne %struct.rtx_def* %18, null, !dbg !6561
  br i1 %cmp26, label %cond.false28, label %cond.true27, !dbg !6561

cond.true27:                                      ; preds = %if.end22
  call void @fancy_abort(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i32 3015, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !6561
  br label %cond.end29, !dbg !6561

cond.false28:                                     ; preds = %if.end22
  br label %cond.end29, !dbg !6561

cond.end29:                                       ; preds = %cond.false28, %cond.true27
  %cond30 = phi i32 [ 0, %cond.true27 ], [ 0, %cond.false28 ], !dbg !6561
  br label %do.body31, !dbg !6562

do.body31:                                        ; preds = %cond.end29
  store i64 0, i64* %this_live, align 8, !dbg !6563
  %19 = load i32, i32* %from.addr, align 4, !dbg !6563
  %idxprom32 = sext i32 %19 to i64, !dbg !6563
  %arrayidx33 = getelementptr inbounds [5 x %struct.peep2_insn_data], [5 x %struct.peep2_insn_data]* @peep2_insn_data, i64 0, i64 %idxprom32, !dbg !6563
  %live_before34 = getelementptr inbounds %struct.peep2_insn_data, %struct.peep2_insn_data* %arrayidx33, i32 0, i32 1, !dbg !6563
  %20 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %live_before34, align 8, !dbg !6563
  call void @reg_set_to_hard_reg_set(i64* %this_live, %struct.bitmap_head_def* %20), !dbg !6563
  br label %do.end35, !dbg !6563

do.end35:                                         ; preds = %do.body31
  %21 = load i64, i64* %this_live, align 8, !dbg !6565
  %22 = load i64, i64* %live, align 8, !dbg !6565
  %or = or i64 %22, %21, !dbg !6565
  store i64 %or, i64* %live, align 8, !dbg !6565
  br label %while.cond, !dbg !6548, !llvm.loop !6566

while.end:                                        ; preds = %while.cond
  %23 = load i8*, i8** %class_str.addr, align 8, !dbg !6568
  %arrayidx36 = getelementptr inbounds i8, i8* %23, i64 0, !dbg !6568
  %24 = load i8, i8* %arrayidx36, align 1, !dbg !6568
  %conv = sext i8 %24 to i32, !dbg !6568
  %cmp37 = icmp eq i32 %conv, 114, !dbg !6569
  br i1 %cmp37, label %cond.true39, label %cond.false40, !dbg !6568

cond.true39:                                      ; preds = %while.end
  br label %cond.end42, !dbg !6568

cond.false40:                                     ; preds = %while.end
  %25 = load i8*, i8** %class_str.addr, align 8, !dbg !6570
  %call = call i32 @lookup_constraint(i8* %25), !dbg !6570
  %call41 = call i32 @regclass_for_constraint(i32 %call), !dbg !6570
  br label %cond.end42, !dbg !6568

cond.end42:                                       ; preds = %cond.false40, %cond.true39
  %cond43 = phi i32 [ 13, %cond.true39 ], [ %call41, %cond.false40 ], !dbg !6568
  store i32 %cond43, i32* %cl, align 4, !dbg !6571
  store i32 0, i32* %i, align 4, !dbg !6572
  br label %for.cond, !dbg !6574

for.cond:                                         ; preds = %for.inc126, %cond.end42
  %26 = load i32, i32* %i, align 4, !dbg !6575
  %cmp44 = icmp slt i32 %26, 53, !dbg !6577
  br i1 %cmp44, label %for.body, label %for.end128, !dbg !6578

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %raw_regno, metadata !6579, metadata !DIExpression()), !dbg !6581
  call void @llvm.dbg.declare(metadata i32* %regno, metadata !6582, metadata !DIExpression()), !dbg !6583
  call void @llvm.dbg.declare(metadata i32* %success, metadata !6584, metadata !DIExpression()), !dbg !6585
  call void @llvm.dbg.declare(metadata i32* %j, metadata !6586, metadata !DIExpression()), !dbg !6587
  %27 = load i32, i32* @peep2_find_free_register.search_ofs, align 4, !dbg !6588
  %28 = load i32, i32* %i, align 4, !dbg !6589
  %add46 = add nsw i32 %27, %28, !dbg !6590
  store i32 %add46, i32* %raw_regno, align 4, !dbg !6591
  %29 = load i32, i32* %raw_regno, align 4, !dbg !6592
  %cmp47 = icmp sge i32 %29, 53, !dbg !6594
  br i1 %cmp47, label %if.then49, label %if.end51, !dbg !6595

if.then49:                                        ; preds = %for.body
  %30 = load i32, i32* %raw_regno, align 4, !dbg !6596
  %sub50 = sub nsw i32 %30, 53, !dbg !6596
  store i32 %sub50, i32* %raw_regno, align 4, !dbg !6596
  br label %if.end51, !dbg !6597

if.end51:                                         ; preds = %if.then49, %for.body
  %31 = load i32, i32* %raw_regno, align 4, !dbg !6598
  %idxprom52 = sext i32 %31 to i64, !dbg !6599
  %arrayidx53 = getelementptr inbounds [53 x i32], [53 x i32]* @reg_alloc_order, i64 0, i64 %idxprom52, !dbg !6599
  %32 = load i32, i32* %arrayidx53, align 4, !dbg !6599
  store i32 %32, i32* %regno, align 4, !dbg !6600
  %33 = load i32, i32* %regno, align 4, !dbg !6601
  %idxprom54 = sext i32 %33 to i64, !dbg !6603
  %arrayidx55 = getelementptr inbounds [53 x i8], [53 x i8]* @fixed_regs, i64 0, i64 %idxprom54, !dbg !6603
  %34 = load i8, i8* %arrayidx55, align 1, !dbg !6603
  %tobool = icmp ne i8 %34, 0, !dbg !6603
  br i1 %tobool, label %if.then56, label %if.end57, !dbg !6604

if.then56:                                        ; preds = %if.end51
  br label %for.inc126, !dbg !6605

if.end57:                                         ; preds = %if.end51
  %35 = load i32, i32* %regno, align 4, !dbg !6606
  %idxprom58 = sext i32 %35 to i64, !dbg !6608
  %arrayidx59 = getelementptr inbounds [53 x i8], [53 x i8]* @global_regs, i64 0, i64 %idxprom58, !dbg !6608
  %36 = load i8, i8* %arrayidx59, align 1, !dbg !6608
  %tobool60 = icmp ne i8 %36, 0, !dbg !6608
  br i1 %tobool60, label %if.then61, label %if.end62, !dbg !6609

if.then61:                                        ; preds = %if.end57
  br label %for.inc126, !dbg !6610

if.end62:                                         ; preds = %if.end57
  %37 = load i32, i32* %cl, align 4, !dbg !6611
  %idxprom63 = zext i32 %37 to i64, !dbg !6611
  %arrayidx64 = getelementptr inbounds [27 x i64], [27 x i64]* @reg_class_contents, i64 0, i64 %idxprom63, !dbg !6611
  %38 = load i64, i64* %arrayidx64, align 8, !dbg !6611
  %39 = load i32, i32* %regno, align 4, !dbg !6611
  %sh_prom = zext i32 %39 to i64, !dbg !6611
  %shl = shl i64 1, %sh_prom, !dbg !6611
  %and = and i64 %38, %shl, !dbg !6611
  %tobool65 = icmp ne i64 %and, 0, !dbg !6611
  br i1 %tobool65, label %if.end67, label %if.then66, !dbg !6613

if.then66:                                        ; preds = %if.end62
  br label %for.inc126, !dbg !6614

if.end67:                                         ; preds = %if.end62
  %40 = load i32, i32* %regno, align 4, !dbg !6615
  %41 = load i32, i32* %mode.addr, align 4, !dbg !6615
  %call68 = call zeroext i8 @ix86_hard_regno_mode_ok(i32 %40, i32 %41), !dbg !6615
  %tobool69 = icmp ne i8 %call68, 0, !dbg !6615
  br i1 %tobool69, label %if.end71, label %if.then70, !dbg !6617

if.then70:                                        ; preds = %if.end67
  br label %for.inc126, !dbg !6618

if.end71:                                         ; preds = %if.end67
  %42 = load i32, i32* %regno, align 4, !dbg !6619
  %idxprom72 = sext i32 %42 to i64, !dbg !6621
  %arrayidx73 = getelementptr inbounds [53 x i8], [53 x i8]* @call_used_regs, i64 0, i64 %idxprom72, !dbg !6621
  %43 = load i8, i8* %arrayidx73, align 1, !dbg !6621
  %tobool74 = icmp ne i8 %43, 0, !dbg !6621
  br i1 %tobool74, label %if.end78, label %land.lhs.true, !dbg !6622

land.lhs.true:                                    ; preds = %if.end71
  %44 = load i32, i32* %regno, align 4, !dbg !6623
  %call75 = call zeroext i8 @df_regs_ever_live_p(i32 %44), !dbg !6624
  %tobool76 = icmp ne i8 %call75, 0, !dbg !6624
  br i1 %tobool76, label %if.end78, label %if.then77, !dbg !6625

if.then77:                                        ; preds = %land.lhs.true
  br label %for.inc126, !dbg !6626

if.end78:                                         ; preds = %land.lhs.true, %if.end71
  %45 = load i8 (i32)*, i8 (i32)** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i32 0, i32 100), align 8, !dbg !6627
  %46 = load i32, i32* %regno, align 4, !dbg !6629
  %call79 = call zeroext i8 %45(i32 %46), !dbg !6630
  %tobool80 = icmp ne i8 %call79, 0, !dbg !6630
  br i1 %tobool80, label %if.end82, label %if.then81, !dbg !6631

if.then81:                                        ; preds = %if.end78
  br label %for.inc126, !dbg !6632

if.end82:                                         ; preds = %if.end78
  %47 = load i32, i32* %regno, align 4, !dbg !6633
  %cmp83 = icmp eq i32 %47, 20, !dbg !6635
  br i1 %cmp83, label %land.lhs.true87, label %lor.lhs.false, !dbg !6636

lor.lhs.false:                                    ; preds = %if.end82
  %48 = load i32, i32* %regno, align 4, !dbg !6637
  %cmp85 = icmp eq i32 %48, 6, !dbg !6638
  br i1 %cmp85, label %land.lhs.true87, label %if.end93, !dbg !6639

land.lhs.true87:                                  ; preds = %lor.lhs.false, %if.end82
  %49 = load i32, i32* @reload_completed, align 4, !dbg !6640
  %tobool88 = icmp ne i32 %49, 0, !dbg !6640
  br i1 %tobool88, label %lor.lhs.false89, label %if.then92, !dbg !6641

lor.lhs.false89:                                  ; preds = %land.lhs.true87
  %50 = load i8, i8* getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i32 0, i32 41), align 1, !dbg !6642
  %conv90 = zext i8 %50 to i32, !dbg !6642
  %tobool91 = icmp ne i32 %conv90, 0, !dbg !6642
  br i1 %tobool91, label %if.then92, label %if.end93, !dbg !6643

if.then92:                                        ; preds = %lor.lhs.false89, %land.lhs.true87
  br label %for.inc126, !dbg !6644

if.end93:                                         ; preds = %lor.lhs.false89, %lor.lhs.false
  store i32 1, i32* %success, align 4, !dbg !6645
  %51 = load i32, i32* %regno, align 4, !dbg !6646
  %idxprom94 = sext i32 %51 to i64, !dbg !6648
  %arrayidx95 = getelementptr inbounds [53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 %idxprom94, !dbg !6648
  %52 = load i32, i32* %mode.addr, align 4, !dbg !6649
  %idxprom96 = zext i32 %52 to i64, !dbg !6648
  %arrayidx97 = getelementptr inbounds [87 x i8], [87 x i8]* %arrayidx95, i64 0, i64 %idxprom96, !dbg !6648
  %53 = load i8, i8* %arrayidx97, align 1, !dbg !6648
  %conv98 = zext i8 %53 to i32, !dbg !6648
  %sub99 = sub nsw i32 %conv98, 1, !dbg !6650
  store i32 %sub99, i32* %j, align 4, !dbg !6651
  br label %for.cond100, !dbg !6652

for.cond100:                                      ; preds = %for.inc, %if.end93
  %54 = load i32, i32* %j, align 4, !dbg !6653
  %cmp101 = icmp sge i32 %54, 0, !dbg !6655
  br i1 %cmp101, label %for.body103, label %for.end, !dbg !6656

for.body103:                                      ; preds = %for.cond100
  %55 = load i64*, i64** %reg_set.addr, align 8, !dbg !6657
  %56 = load i64, i64* %55, align 8, !dbg !6657
  %57 = load i32, i32* %regno, align 4, !dbg !6657
  %58 = load i32, i32* %j, align 4, !dbg !6657
  %add104 = add nsw i32 %57, %58, !dbg !6657
  %sh_prom105 = zext i32 %add104 to i64, !dbg !6657
  %shl106 = shl i64 1, %sh_prom105, !dbg !6657
  %and107 = and i64 %56, %shl106, !dbg !6657
  %tobool108 = icmp ne i64 %and107, 0, !dbg !6657
  br i1 %tobool108, label %if.then115, label %lor.lhs.false109, !dbg !6660

lor.lhs.false109:                                 ; preds = %for.body103
  %59 = load i64, i64* %live, align 8, !dbg !6661
  %60 = load i32, i32* %regno, align 4, !dbg !6661
  %61 = load i32, i32* %j, align 4, !dbg !6661
  %add110 = add nsw i32 %60, %61, !dbg !6661
  %sh_prom111 = zext i32 %add110 to i64, !dbg !6661
  %shl112 = shl i64 1, %sh_prom111, !dbg !6661
  %and113 = and i64 %59, %shl112, !dbg !6661
  %tobool114 = icmp ne i64 %and113, 0, !dbg !6661
  br i1 %tobool114, label %if.then115, label %if.end116, !dbg !6662

if.then115:                                       ; preds = %lor.lhs.false109, %for.body103
  store i32 0, i32* %success, align 4, !dbg !6663
  br label %for.end, !dbg !6665

if.end116:                                        ; preds = %lor.lhs.false109
  br label %for.inc, !dbg !6666

for.inc:                                          ; preds = %if.end116
  %62 = load i32, i32* %j, align 4, !dbg !6667
  %dec = add nsw i32 %62, -1, !dbg !6667
  store i32 %dec, i32* %j, align 4, !dbg !6667
  br label %for.cond100, !dbg !6668, !llvm.loop !6669

for.end:                                          ; preds = %if.then115, %for.cond100
  %63 = load i32, i32* %success, align 4, !dbg !6671
  %tobool117 = icmp ne i32 %63, 0, !dbg !6671
  br i1 %tobool117, label %if.then118, label %if.end125, !dbg !6673

if.then118:                                       ; preds = %for.end
  %64 = load i64*, i64** %reg_set.addr, align 8, !dbg !6674
  %65 = load i32, i32* %mode.addr, align 4, !dbg !6676
  %66 = load i32, i32* %regno, align 4, !dbg !6677
  call void @add_to_hard_reg_set(i64* %64, i32 %65, i32 %66), !dbg !6678
  %67 = load i32, i32* %raw_regno, align 4, !dbg !6679
  %inc119 = add nsw i32 %67, 1, !dbg !6679
  store i32 %inc119, i32* %raw_regno, align 4, !dbg !6679
  %cmp120 = icmp sge i32 %inc119, 53, !dbg !6681
  br i1 %cmp120, label %if.then122, label %if.end123, !dbg !6682

if.then122:                                       ; preds = %if.then118
  store i32 0, i32* %raw_regno, align 4, !dbg !6683
  br label %if.end123, !dbg !6684

if.end123:                                        ; preds = %if.then122, %if.then118
  %68 = load i32, i32* %raw_regno, align 4, !dbg !6685
  store i32 %68, i32* @peep2_find_free_register.search_ofs, align 4, !dbg !6686
  %69 = load i32, i32* %mode.addr, align 4, !dbg !6687
  %70 = load i32, i32* %regno, align 4, !dbg !6688
  %call124 = call %struct.rtx_def* @gen_rtx_REG(i32 %69, i32 %70), !dbg !6689
  store %struct.rtx_def* %call124, %struct.rtx_def** %retval, align 8, !dbg !6690
  br label %return, !dbg !6690

if.end125:                                        ; preds = %for.end
  br label %for.inc126, !dbg !6691

for.inc126:                                       ; preds = %if.end125, %if.then92, %if.then81, %if.then77, %if.then70, %if.then66, %if.then61, %if.then56
  %71 = load i32, i32* %i, align 4, !dbg !6692
  %inc127 = add nsw i32 %71, 1, !dbg !6692
  store i32 %inc127, i32* %i, align 4, !dbg !6692
  br label %for.cond, !dbg !6693, !llvm.loop !6694

for.end128:                                       ; preds = %for.cond
  store i32 0, i32* @peep2_find_free_register.search_ofs, align 4, !dbg !6696
  store %struct.rtx_def* null, %struct.rtx_def** %retval, align 8, !dbg !6697
  br label %return, !dbg !6697

return:                                           ; preds = %for.end128, %if.end123
  %72 = load %struct.rtx_def*, %struct.rtx_def** %retval, align 8, !dbg !6698
  ret %struct.rtx_def* %72, !dbg !6698
}

declare dso_local void @reg_set_to_hard_reg_set(i64*, %struct.bitmap_head_def*) #2

declare dso_local zeroext i8 @ix86_hard_regno_mode_ok(i32, i32) #2

declare dso_local zeroext i8 @df_regs_ever_live_p(i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @add_to_hard_reg_set(i64* %regs, i32 %mode, i32 %regno) #0 !dbg !6699 {
entry:
  %regs.addr = alloca i64*, align 8
  %mode.addr = alloca i32, align 4
  %regno.addr = alloca i32, align 4
  %end_regno = alloca i32, align 4
  store i64* %regs, i64** %regs.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %regs.addr, metadata !6702, metadata !DIExpression()), !dbg !6703
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !6704, metadata !DIExpression()), !dbg !6705
  store i32 %regno, i32* %regno.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %regno.addr, metadata !6706, metadata !DIExpression()), !dbg !6707
  call void @llvm.dbg.declare(metadata i32* %end_regno, metadata !6708, metadata !DIExpression()), !dbg !6709
  %0 = load i32, i32* %mode.addr, align 4, !dbg !6710
  %1 = load i32, i32* %regno.addr, align 4, !dbg !6711
  %call = call i32 @end_hard_regno(i32 %0, i32 %1), !dbg !6712
  store i32 %call, i32* %end_regno, align 4, !dbg !6713
  br label %do.body, !dbg !6714

do.body:                                          ; preds = %do.cond, %entry
  %2 = load i32, i32* %regno.addr, align 4, !dbg !6715
  %sh_prom = zext i32 %2 to i64, !dbg !6715
  %shl = shl i64 1, %sh_prom, !dbg !6715
  %3 = load i64*, i64** %regs.addr, align 8, !dbg !6715
  %4 = load i64, i64* %3, align 8, !dbg !6715
  %or = or i64 %4, %shl, !dbg !6715
  store i64 %or, i64* %3, align 8, !dbg !6715
  br label %do.cond, !dbg !6715

do.cond:                                          ; preds = %do.body
  %5 = load i32, i32* %regno.addr, align 4, !dbg !6716
  %inc = add i32 %5, 1, !dbg !6716
  store i32 %inc, i32* %regno.addr, align 4, !dbg !6716
  %6 = load i32, i32* %end_regno, align 4, !dbg !6717
  %cmp = icmp ult i32 %inc, %6, !dbg !6718
  br i1 %cmp, label %do.body, label %do.end, !dbg !6715, !llvm.loop !6719

do.end:                                           ; preds = %do.cond
  ret void, !dbg !6721
}

declare dso_local %struct.rtx_def* @gen_rtx_REG(i32, i32) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @store_data_bypass_p(%struct.rtx_def* %out_insn, %struct.rtx_def* %in_insn) #0 !dbg !6722 {
entry:
  %retval = alloca i32, align 4
  %out_insn.addr = alloca %struct.rtx_def*, align 8
  %in_insn.addr = alloca %struct.rtx_def*, align 8
  %out_set = alloca %struct.rtx_def*, align 8
  %in_set = alloca %struct.rtx_def*, align 8
  %out_pat = alloca %struct.rtx_def*, align 8
  %in_pat = alloca %struct.rtx_def*, align 8
  %out_exp = alloca %struct.rtx_def*, align 8
  %in_exp = alloca %struct.rtx_def*, align 8
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  store %struct.rtx_def* %out_insn, %struct.rtx_def** %out_insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %out_insn.addr, metadata !6725, metadata !DIExpression()), !dbg !6726
  store %struct.rtx_def* %in_insn, %struct.rtx_def** %in_insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %in_insn.addr, metadata !6727, metadata !DIExpression()), !dbg !6728
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %out_set, metadata !6729, metadata !DIExpression()), !dbg !6730
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %in_set, metadata !6731, metadata !DIExpression()), !dbg !6732
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %out_pat, metadata !6733, metadata !DIExpression()), !dbg !6734
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %in_pat, metadata !6735, metadata !DIExpression()), !dbg !6736
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %out_exp, metadata !6737, metadata !DIExpression()), !dbg !6738
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %in_exp, metadata !6739, metadata !DIExpression()), !dbg !6740
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6741, metadata !DIExpression()), !dbg !6742
  call void @llvm.dbg.declare(metadata i32* %j, metadata !6743, metadata !DIExpression()), !dbg !6744
  %0 = load %struct.rtx_def*, %struct.rtx_def** %in_insn.addr, align 8, !dbg !6745
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !6745
  %bf.load = load i32, i32* %1, align 8, !dbg !6745
  %bf.clear = and i32 %bf.load, 65535, !dbg !6745
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !6745
  br i1 %cmp, label %cond.true, label %lor.lhs.false, !dbg !6745

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %in_insn.addr, align 8, !dbg !6745
  %3 = bitcast %struct.rtx_def* %2 to i32*, !dbg !6745
  %bf.load1 = load i32, i32* %3, align 8, !dbg !6745
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !6745
  %cmp3 = icmp eq i32 %bf.clear2, 7, !dbg !6745
  br i1 %cmp3, label %cond.true, label %lor.lhs.false4, !dbg !6745

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %4 = load %struct.rtx_def*, %struct.rtx_def** %in_insn.addr, align 8, !dbg !6745
  %5 = bitcast %struct.rtx_def* %4 to i32*, !dbg !6745
  %bf.load5 = load i32, i32* %5, align 8, !dbg !6745
  %bf.clear6 = and i32 %bf.load5, 65535, !dbg !6745
  %cmp7 = icmp eq i32 %bf.clear6, 9, !dbg !6745
  br i1 %cmp7, label %cond.true, label %lor.lhs.false8, !dbg !6745

lor.lhs.false8:                                   ; preds = %lor.lhs.false4
  %6 = load %struct.rtx_def*, %struct.rtx_def** %in_insn.addr, align 8, !dbg !6745
  %7 = bitcast %struct.rtx_def* %6 to i32*, !dbg !6745
  %bf.load9 = load i32, i32* %7, align 8, !dbg !6745
  %bf.clear10 = and i32 %bf.load9, 65535, !dbg !6745
  %cmp11 = icmp eq i32 %bf.clear10, 10, !dbg !6745
  br i1 %cmp11, label %cond.true, label %cond.false24, !dbg !6745

cond.true:                                        ; preds = %lor.lhs.false8, %lor.lhs.false4, %lor.lhs.false, %entry
  %8 = load %struct.rtx_def*, %struct.rtx_def** %in_insn.addr, align 8, !dbg !6745
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i32 0, i32 1, !dbg !6745
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !6745
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 5, !dbg !6745
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !6745
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6745
  %10 = bitcast %struct.rtx_def* %9 to i32*, !dbg !6745
  %bf.load12 = load i32, i32* %10, align 8, !dbg !6745
  %bf.clear13 = and i32 %bf.load12, 65535, !dbg !6745
  %cmp14 = icmp eq i32 %bf.clear13, 23, !dbg !6745
  br i1 %cmp14, label %cond.true15, label %cond.false, !dbg !6745

cond.true15:                                      ; preds = %cond.true
  %11 = load %struct.rtx_def*, %struct.rtx_def** %in_insn.addr, align 8, !dbg !6745
  %u16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i32 0, i32 1, !dbg !6745
  %fld17 = bitcast %union.u* %u16 to [1 x %union.rtunion_def]*, !dbg !6745
  %arrayidx18 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld17, i64 0, i64 5, !dbg !6745
  %rt_rtx19 = bitcast %union.rtunion_def* %arrayidx18 to %struct.rtx_def**, !dbg !6745
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx19, align 8, !dbg !6745
  br label %cond.end, !dbg !6745

cond.false:                                       ; preds = %cond.true
  %13 = load %struct.rtx_def*, %struct.rtx_def** %in_insn.addr, align 8, !dbg !6745
  %14 = load %struct.rtx_def*, %struct.rtx_def** %in_insn.addr, align 8, !dbg !6745
  %u20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i32 0, i32 1, !dbg !6745
  %fld21 = bitcast %union.u* %u20 to [1 x %union.rtunion_def]*, !dbg !6745
  %arrayidx22 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld21, i64 0, i64 5, !dbg !6745
  %rt_rtx23 = bitcast %union.rtunion_def* %arrayidx22 to %struct.rtx_def**, !dbg !6745
  %15 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx23, align 8, !dbg !6745
  %call = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %13, %struct.rtx_def* %15), !dbg !6745
  br label %cond.end, !dbg !6745

cond.end:                                         ; preds = %cond.false, %cond.true15
  %cond = phi %struct.rtx_def* [ %12, %cond.true15 ], [ %call, %cond.false ], !dbg !6745
  br label %cond.end25, !dbg !6745

cond.false24:                                     ; preds = %lor.lhs.false8
  br label %cond.end25, !dbg !6745

cond.end25:                                       ; preds = %cond.false24, %cond.end
  %cond26 = phi %struct.rtx_def* [ %cond, %cond.end ], [ null, %cond.false24 ], !dbg !6745
  store %struct.rtx_def* %cond26, %struct.rtx_def** %in_set, align 8, !dbg !6746
  %16 = load %struct.rtx_def*, %struct.rtx_def** %in_set, align 8, !dbg !6747
  %tobool = icmp ne %struct.rtx_def* %16, null, !dbg !6747
  br i1 %tobool, label %if.then, label %if.else131, !dbg !6749

if.then:                                          ; preds = %cond.end25
  %17 = load %struct.rtx_def*, %struct.rtx_def** %in_set, align 8, !dbg !6750
  %u27 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %17, i32 0, i32 1, !dbg !6750
  %fld28 = bitcast %union.u* %u27 to [1 x %union.rtunion_def]*, !dbg !6750
  %arrayidx29 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld28, i64 0, i64 0, !dbg !6750
  %rt_rtx30 = bitcast %union.rtunion_def* %arrayidx29 to %struct.rtx_def**, !dbg !6750
  %18 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx30, align 8, !dbg !6750
  %19 = bitcast %struct.rtx_def* %18 to i32*, !dbg !6750
  %bf.load31 = load i32, i32* %19, align 8, !dbg !6750
  %bf.clear32 = and i32 %bf.load31, 65535, !dbg !6750
  %cmp33 = icmp eq i32 %bf.clear32, 43, !dbg !6750
  br i1 %cmp33, label %if.end, label %if.then34, !dbg !6753

if.then34:                                        ; preds = %if.then
  store i32 0, i32* %retval, align 4, !dbg !6754
  br label %return, !dbg !6754

if.end:                                           ; preds = %if.then
  %20 = load %struct.rtx_def*, %struct.rtx_def** %out_insn.addr, align 8, !dbg !6755
  %21 = bitcast %struct.rtx_def* %20 to i32*, !dbg !6755
  %bf.load35 = load i32, i32* %21, align 8, !dbg !6755
  %bf.clear36 = and i32 %bf.load35, 65535, !dbg !6755
  %cmp37 = icmp eq i32 %bf.clear36, 8, !dbg !6755
  br i1 %cmp37, label %cond.true50, label %lor.lhs.false38, !dbg !6755

lor.lhs.false38:                                  ; preds = %if.end
  %22 = load %struct.rtx_def*, %struct.rtx_def** %out_insn.addr, align 8, !dbg !6755
  %23 = bitcast %struct.rtx_def* %22 to i32*, !dbg !6755
  %bf.load39 = load i32, i32* %23, align 8, !dbg !6755
  %bf.clear40 = and i32 %bf.load39, 65535, !dbg !6755
  %cmp41 = icmp eq i32 %bf.clear40, 7, !dbg !6755
  br i1 %cmp41, label %cond.true50, label %lor.lhs.false42, !dbg !6755

lor.lhs.false42:                                  ; preds = %lor.lhs.false38
  %24 = load %struct.rtx_def*, %struct.rtx_def** %out_insn.addr, align 8, !dbg !6755
  %25 = bitcast %struct.rtx_def* %24 to i32*, !dbg !6755
  %bf.load43 = load i32, i32* %25, align 8, !dbg !6755
  %bf.clear44 = and i32 %bf.load43, 65535, !dbg !6755
  %cmp45 = icmp eq i32 %bf.clear44, 9, !dbg !6755
  br i1 %cmp45, label %cond.true50, label %lor.lhs.false46, !dbg !6755

lor.lhs.false46:                                  ; preds = %lor.lhs.false42
  %26 = load %struct.rtx_def*, %struct.rtx_def** %out_insn.addr, align 8, !dbg !6755
  %27 = bitcast %struct.rtx_def* %26 to i32*, !dbg !6755
  %bf.load47 = load i32, i32* %27, align 8, !dbg !6755
  %bf.clear48 = and i32 %bf.load47, 65535, !dbg !6755
  %cmp49 = icmp eq i32 %bf.clear48, 10, !dbg !6755
  br i1 %cmp49, label %cond.true50, label %cond.false71, !dbg !6755

cond.true50:                                      ; preds = %lor.lhs.false46, %lor.lhs.false42, %lor.lhs.false38, %if.end
  %28 = load %struct.rtx_def*, %struct.rtx_def** %out_insn.addr, align 8, !dbg !6755
  %u51 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %28, i32 0, i32 1, !dbg !6755
  %fld52 = bitcast %union.u* %u51 to [1 x %union.rtunion_def]*, !dbg !6755
  %arrayidx53 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld52, i64 0, i64 5, !dbg !6755
  %rt_rtx54 = bitcast %union.rtunion_def* %arrayidx53 to %struct.rtx_def**, !dbg !6755
  %29 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx54, align 8, !dbg !6755
  %30 = bitcast %struct.rtx_def* %29 to i32*, !dbg !6755
  %bf.load55 = load i32, i32* %30, align 8, !dbg !6755
  %bf.clear56 = and i32 %bf.load55, 65535, !dbg !6755
  %cmp57 = icmp eq i32 %bf.clear56, 23, !dbg !6755
  br i1 %cmp57, label %cond.true58, label %cond.false63, !dbg !6755

cond.true58:                                      ; preds = %cond.true50
  %31 = load %struct.rtx_def*, %struct.rtx_def** %out_insn.addr, align 8, !dbg !6755
  %u59 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %31, i32 0, i32 1, !dbg !6755
  %fld60 = bitcast %union.u* %u59 to [1 x %union.rtunion_def]*, !dbg !6755
  %arrayidx61 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld60, i64 0, i64 5, !dbg !6755
  %rt_rtx62 = bitcast %union.rtunion_def* %arrayidx61 to %struct.rtx_def**, !dbg !6755
  %32 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx62, align 8, !dbg !6755
  br label %cond.end69, !dbg !6755

cond.false63:                                     ; preds = %cond.true50
  %33 = load %struct.rtx_def*, %struct.rtx_def** %out_insn.addr, align 8, !dbg !6755
  %34 = load %struct.rtx_def*, %struct.rtx_def** %out_insn.addr, align 8, !dbg !6755
  %u64 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %34, i32 0, i32 1, !dbg !6755
  %fld65 = bitcast %union.u* %u64 to [1 x %union.rtunion_def]*, !dbg !6755
  %arrayidx66 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld65, i64 0, i64 5, !dbg !6755
  %rt_rtx67 = bitcast %union.rtunion_def* %arrayidx66 to %struct.rtx_def**, !dbg !6755
  %35 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx67, align 8, !dbg !6755
  %call68 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %33, %struct.rtx_def* %35), !dbg !6755
  br label %cond.end69, !dbg !6755

cond.end69:                                       ; preds = %cond.false63, %cond.true58
  %cond70 = phi %struct.rtx_def* [ %32, %cond.true58 ], [ %call68, %cond.false63 ], !dbg !6755
  br label %cond.end72, !dbg !6755

cond.false71:                                     ; preds = %lor.lhs.false46
  br label %cond.end72, !dbg !6755

cond.end72:                                       ; preds = %cond.false71, %cond.end69
  %cond73 = phi %struct.rtx_def* [ %cond70, %cond.end69 ], [ null, %cond.false71 ], !dbg !6755
  store %struct.rtx_def* %cond73, %struct.rtx_def** %out_set, align 8, !dbg !6756
  %36 = load %struct.rtx_def*, %struct.rtx_def** %out_set, align 8, !dbg !6757
  %tobool74 = icmp ne %struct.rtx_def* %36, null, !dbg !6757
  br i1 %tobool74, label %if.then75, label %if.else, !dbg !6759

if.then75:                                        ; preds = %cond.end72
  %37 = load %struct.rtx_def*, %struct.rtx_def** %out_set, align 8, !dbg !6760
  %u76 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %37, i32 0, i32 1, !dbg !6760
  %fld77 = bitcast %union.u* %u76 to [1 x %union.rtunion_def]*, !dbg !6760
  %arrayidx78 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld77, i64 0, i64 0, !dbg !6760
  %rt_rtx79 = bitcast %union.rtunion_def* %arrayidx78 to %struct.rtx_def**, !dbg !6760
  %38 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx79, align 8, !dbg !6760
  %39 = load %struct.rtx_def*, %struct.rtx_def** %in_set, align 8, !dbg !6763
  %u80 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %39, i32 0, i32 1, !dbg !6763
  %fld81 = bitcast %union.u* %u80 to [1 x %union.rtunion_def]*, !dbg !6763
  %arrayidx82 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld81, i64 0, i64 0, !dbg !6763
  %rt_rtx83 = bitcast %union.rtunion_def* %arrayidx82 to %struct.rtx_def**, !dbg !6763
  %40 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx83, align 8, !dbg !6763
  %call84 = call i32 @reg_mentioned_p(%struct.rtx_def* %38, %struct.rtx_def* %40), !dbg !6764
  %tobool85 = icmp ne i32 %call84, 0, !dbg !6764
  br i1 %tobool85, label %if.then86, label %if.end87, !dbg !6765

if.then86:                                        ; preds = %if.then75
  store i32 0, i32* %retval, align 4, !dbg !6766
  br label %return, !dbg !6766

if.end87:                                         ; preds = %if.then75
  br label %if.end130, !dbg !6767

if.else:                                          ; preds = %cond.end72
  %41 = load %struct.rtx_def*, %struct.rtx_def** %out_insn.addr, align 8, !dbg !6768
  %u88 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %41, i32 0, i32 1, !dbg !6768
  %fld89 = bitcast %union.u* %u88 to [1 x %union.rtunion_def]*, !dbg !6768
  %arrayidx90 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld89, i64 0, i64 5, !dbg !6768
  %rt_rtx91 = bitcast %union.rtunion_def* %arrayidx90 to %struct.rtx_def**, !dbg !6768
  %42 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx91, align 8, !dbg !6768
  store %struct.rtx_def* %42, %struct.rtx_def** %out_pat, align 8, !dbg !6770
  %43 = load %struct.rtx_def*, %struct.rtx_def** %out_pat, align 8, !dbg !6771
  %44 = bitcast %struct.rtx_def* %43 to i32*, !dbg !6771
  %bf.load92 = load i32, i32* %44, align 8, !dbg !6771
  %bf.clear93 = and i32 %bf.load92, 65535, !dbg !6771
  %cmp94 = icmp ne i32 %bf.clear93, 15, !dbg !6773
  br i1 %cmp94, label %if.then95, label %if.end96, !dbg !6774

if.then95:                                        ; preds = %if.else
  store i32 0, i32* %retval, align 4, !dbg !6775
  br label %return, !dbg !6775

if.end96:                                         ; preds = %if.else
  store i32 0, i32* %i, align 4, !dbg !6776
  br label %for.cond, !dbg !6778

for.cond:                                         ; preds = %for.inc, %if.end96
  %45 = load i32, i32* %i, align 4, !dbg !6779
  %46 = load %struct.rtx_def*, %struct.rtx_def** %out_pat, align 8, !dbg !6781
  %u97 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %46, i32 0, i32 1, !dbg !6781
  %fld98 = bitcast %union.u* %u97 to [1 x %union.rtunion_def]*, !dbg !6781
  %arrayidx99 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld98, i64 0, i64 0, !dbg !6781
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx99 to %struct.rtvec_def**, !dbg !6781
  %47 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !6781
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %47, i32 0, i32 0, !dbg !6781
  %48 = load i32, i32* %num_elem, align 8, !dbg !6781
  %cmp100 = icmp slt i32 %45, %48, !dbg !6782
  br i1 %cmp100, label %for.body, label %for.end, !dbg !6783

for.body:                                         ; preds = %for.cond
  %49 = load %struct.rtx_def*, %struct.rtx_def** %out_pat, align 8, !dbg !6784
  %u101 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %49, i32 0, i32 1, !dbg !6784
  %fld102 = bitcast %union.u* %u101 to [1 x %union.rtunion_def]*, !dbg !6784
  %arrayidx103 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld102, i64 0, i64 0, !dbg !6784
  %rt_rtvec104 = bitcast %union.rtunion_def* %arrayidx103 to %struct.rtvec_def**, !dbg !6784
  %50 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec104, align 8, !dbg !6784
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %50, i32 0, i32 1, !dbg !6784
  %51 = load i32, i32* %i, align 4, !dbg !6784
  %idxprom = sext i32 %51 to i64, !dbg !6784
  %arrayidx105 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i64 0, i64 %idxprom, !dbg !6784
  %52 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx105, align 8, !dbg !6784
  store %struct.rtx_def* %52, %struct.rtx_def** %out_exp, align 8, !dbg !6786
  %53 = load %struct.rtx_def*, %struct.rtx_def** %out_exp, align 8, !dbg !6787
  %54 = bitcast %struct.rtx_def* %53 to i32*, !dbg !6787
  %bf.load106 = load i32, i32* %54, align 8, !dbg !6787
  %bf.clear107 = and i32 %bf.load106, 65535, !dbg !6787
  %cmp108 = icmp eq i32 %bf.clear107, 25, !dbg !6789
  br i1 %cmp108, label %if.then109, label %if.end110, !dbg !6790

if.then109:                                       ; preds = %for.body
  br label %for.inc, !dbg !6791

if.end110:                                        ; preds = %for.body
  %55 = load %struct.rtx_def*, %struct.rtx_def** %out_exp, align 8, !dbg !6792
  %56 = bitcast %struct.rtx_def* %55 to i32*, !dbg !6792
  %bf.load111 = load i32, i32* %56, align 8, !dbg !6792
  %bf.clear112 = and i32 %bf.load111, 65535, !dbg !6792
  %cmp113 = icmp eq i32 %bf.clear112, 23, !dbg !6792
  br i1 %cmp113, label %cond.false115, label %cond.true114, !dbg !6792

cond.true114:                                     ; preds = %if.end110
  call void @fancy_abort(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i32 3389, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !6792
  br label %cond.end116, !dbg !6792

cond.false115:                                    ; preds = %if.end110
  br label %cond.end116, !dbg !6792

cond.end116:                                      ; preds = %cond.false115, %cond.true114
  %cond117 = phi i32 [ 0, %cond.true114 ], [ 0, %cond.false115 ], !dbg !6792
  %57 = load %struct.rtx_def*, %struct.rtx_def** %out_exp, align 8, !dbg !6793
  %u118 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %57, i32 0, i32 1, !dbg !6793
  %fld119 = bitcast %union.u* %u118 to [1 x %union.rtunion_def]*, !dbg !6793
  %arrayidx120 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld119, i64 0, i64 0, !dbg !6793
  %rt_rtx121 = bitcast %union.rtunion_def* %arrayidx120 to %struct.rtx_def**, !dbg !6793
  %58 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx121, align 8, !dbg !6793
  %59 = load %struct.rtx_def*, %struct.rtx_def** %in_set, align 8, !dbg !6795
  %u122 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %59, i32 0, i32 1, !dbg !6795
  %fld123 = bitcast %union.u* %u122 to [1 x %union.rtunion_def]*, !dbg !6795
  %arrayidx124 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld123, i64 0, i64 0, !dbg !6795
  %rt_rtx125 = bitcast %union.rtunion_def* %arrayidx124 to %struct.rtx_def**, !dbg !6795
  %60 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx125, align 8, !dbg !6795
  %call126 = call i32 @reg_mentioned_p(%struct.rtx_def* %58, %struct.rtx_def* %60), !dbg !6796
  %tobool127 = icmp ne i32 %call126, 0, !dbg !6796
  br i1 %tobool127, label %if.then128, label %if.end129, !dbg !6797

if.then128:                                       ; preds = %cond.end116
  store i32 0, i32* %retval, align 4, !dbg !6798
  br label %return, !dbg !6798

if.end129:                                        ; preds = %cond.end116
  br label %for.inc, !dbg !6799

for.inc:                                          ; preds = %if.end129, %if.then109
  %61 = load i32, i32* %i, align 4, !dbg !6800
  %inc = add nsw i32 %61, 1, !dbg !6800
  store i32 %inc, i32* %i, align 4, !dbg !6800
  br label %for.cond, !dbg !6801, !llvm.loop !6802

for.end:                                          ; preds = %for.cond
  br label %if.end130

if.end130:                                        ; preds = %for.end, %if.end87
  br label %if.end290, !dbg !6804

if.else131:                                       ; preds = %cond.end25
  %62 = load %struct.rtx_def*, %struct.rtx_def** %in_insn.addr, align 8, !dbg !6805
  %u132 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %62, i32 0, i32 1, !dbg !6805
  %fld133 = bitcast %union.u* %u132 to [1 x %union.rtunion_def]*, !dbg !6805
  %arrayidx134 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld133, i64 0, i64 5, !dbg !6805
  %rt_rtx135 = bitcast %union.rtunion_def* %arrayidx134 to %struct.rtx_def**, !dbg !6805
  %63 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx135, align 8, !dbg !6805
  store %struct.rtx_def* %63, %struct.rtx_def** %in_pat, align 8, !dbg !6807
  %64 = load %struct.rtx_def*, %struct.rtx_def** %in_pat, align 8, !dbg !6808
  %65 = bitcast %struct.rtx_def* %64 to i32*, !dbg !6808
  %bf.load136 = load i32, i32* %65, align 8, !dbg !6808
  %bf.clear137 = and i32 %bf.load136, 65535, !dbg !6808
  %cmp138 = icmp eq i32 %bf.clear137, 15, !dbg !6808
  br i1 %cmp138, label %cond.false140, label %cond.true139, !dbg !6808

cond.true139:                                     ; preds = %if.else131
  call void @fancy_abort(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i32 3399, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !6808
  br label %cond.end141, !dbg !6808

cond.false140:                                    ; preds = %if.else131
  br label %cond.end141, !dbg !6808

cond.end141:                                      ; preds = %cond.false140, %cond.true139
  %cond142 = phi i32 [ 0, %cond.true139 ], [ 0, %cond.false140 ], !dbg !6808
  store i32 0, i32* %i, align 4, !dbg !6809
  br label %for.cond143, !dbg !6811

for.cond143:                                      ; preds = %for.inc287, %cond.end141
  %66 = load i32, i32* %i, align 4, !dbg !6812
  %67 = load %struct.rtx_def*, %struct.rtx_def** %in_pat, align 8, !dbg !6814
  %u144 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %67, i32 0, i32 1, !dbg !6814
  %fld145 = bitcast %union.u* %u144 to [1 x %union.rtunion_def]*, !dbg !6814
  %arrayidx146 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld145, i64 0, i64 0, !dbg !6814
  %rt_rtvec147 = bitcast %union.rtunion_def* %arrayidx146 to %struct.rtvec_def**, !dbg !6814
  %68 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec147, align 8, !dbg !6814
  %num_elem148 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %68, i32 0, i32 0, !dbg !6814
  %69 = load i32, i32* %num_elem148, align 8, !dbg !6814
  %cmp149 = icmp slt i32 %66, %69, !dbg !6815
  br i1 %cmp149, label %for.body150, label %for.end289, !dbg !6816

for.body150:                                      ; preds = %for.cond143
  %70 = load %struct.rtx_def*, %struct.rtx_def** %in_pat, align 8, !dbg !6817
  %u151 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %70, i32 0, i32 1, !dbg !6817
  %fld152 = bitcast %union.u* %u151 to [1 x %union.rtunion_def]*, !dbg !6817
  %arrayidx153 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld152, i64 0, i64 0, !dbg !6817
  %rt_rtvec154 = bitcast %union.rtunion_def* %arrayidx153 to %struct.rtvec_def**, !dbg !6817
  %71 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec154, align 8, !dbg !6817
  %elem155 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %71, i32 0, i32 1, !dbg !6817
  %72 = load i32, i32* %i, align 4, !dbg !6817
  %idxprom156 = sext i32 %72 to i64, !dbg !6817
  %arrayidx157 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem155, i64 0, i64 %idxprom156, !dbg !6817
  %73 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx157, align 8, !dbg !6817
  store %struct.rtx_def* %73, %struct.rtx_def** %in_exp, align 8, !dbg !6819
  %74 = load %struct.rtx_def*, %struct.rtx_def** %in_exp, align 8, !dbg !6820
  %75 = bitcast %struct.rtx_def* %74 to i32*, !dbg !6820
  %bf.load158 = load i32, i32* %75, align 8, !dbg !6820
  %bf.clear159 = and i32 %bf.load158, 65535, !dbg !6820
  %cmp160 = icmp eq i32 %bf.clear159, 25, !dbg !6822
  br i1 %cmp160, label %if.then161, label %if.end162, !dbg !6823

if.then161:                                       ; preds = %for.body150
  br label %for.inc287, !dbg !6824

if.end162:                                        ; preds = %for.body150
  %76 = load %struct.rtx_def*, %struct.rtx_def** %in_exp, align 8, !dbg !6825
  %77 = bitcast %struct.rtx_def* %76 to i32*, !dbg !6825
  %bf.load163 = load i32, i32* %77, align 8, !dbg !6825
  %bf.clear164 = and i32 %bf.load163, 65535, !dbg !6825
  %cmp165 = icmp eq i32 %bf.clear164, 23, !dbg !6825
  br i1 %cmp165, label %cond.false167, label %cond.true166, !dbg !6825

cond.true166:                                     ; preds = %if.end162
  call void @fancy_abort(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i32 3408, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !6825
  br label %cond.end168, !dbg !6825

cond.false167:                                    ; preds = %if.end162
  br label %cond.end168, !dbg !6825

cond.end168:                                      ; preds = %cond.false167, %cond.true166
  %cond169 = phi i32 [ 0, %cond.true166 ], [ 0, %cond.false167 ], !dbg !6825
  %78 = load %struct.rtx_def*, %struct.rtx_def** %in_exp, align 8, !dbg !6826
  %u170 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %78, i32 0, i32 1, !dbg !6826
  %fld171 = bitcast %union.u* %u170 to [1 x %union.rtunion_def]*, !dbg !6826
  %arrayidx172 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld171, i64 0, i64 0, !dbg !6826
  %rt_rtx173 = bitcast %union.rtunion_def* %arrayidx172 to %struct.rtx_def**, !dbg !6826
  %79 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx173, align 8, !dbg !6826
  %80 = bitcast %struct.rtx_def* %79 to i32*, !dbg !6826
  %bf.load174 = load i32, i32* %80, align 8, !dbg !6826
  %bf.clear175 = and i32 %bf.load174, 65535, !dbg !6826
  %cmp176 = icmp eq i32 %bf.clear175, 43, !dbg !6826
  br i1 %cmp176, label %if.end178, label %if.then177, !dbg !6828

if.then177:                                       ; preds = %cond.end168
  store i32 0, i32* %retval, align 4, !dbg !6829
  br label %return, !dbg !6829

if.end178:                                        ; preds = %cond.end168
  %81 = load %struct.rtx_def*, %struct.rtx_def** %out_insn.addr, align 8, !dbg !6830
  %82 = bitcast %struct.rtx_def* %81 to i32*, !dbg !6830
  %bf.load179 = load i32, i32* %82, align 8, !dbg !6830
  %bf.clear180 = and i32 %bf.load179, 65535, !dbg !6830
  %cmp181 = icmp eq i32 %bf.clear180, 8, !dbg !6830
  br i1 %cmp181, label %cond.true194, label %lor.lhs.false182, !dbg !6830

lor.lhs.false182:                                 ; preds = %if.end178
  %83 = load %struct.rtx_def*, %struct.rtx_def** %out_insn.addr, align 8, !dbg !6830
  %84 = bitcast %struct.rtx_def* %83 to i32*, !dbg !6830
  %bf.load183 = load i32, i32* %84, align 8, !dbg !6830
  %bf.clear184 = and i32 %bf.load183, 65535, !dbg !6830
  %cmp185 = icmp eq i32 %bf.clear184, 7, !dbg !6830
  br i1 %cmp185, label %cond.true194, label %lor.lhs.false186, !dbg !6830

lor.lhs.false186:                                 ; preds = %lor.lhs.false182
  %85 = load %struct.rtx_def*, %struct.rtx_def** %out_insn.addr, align 8, !dbg !6830
  %86 = bitcast %struct.rtx_def* %85 to i32*, !dbg !6830
  %bf.load187 = load i32, i32* %86, align 8, !dbg !6830
  %bf.clear188 = and i32 %bf.load187, 65535, !dbg !6830
  %cmp189 = icmp eq i32 %bf.clear188, 9, !dbg !6830
  br i1 %cmp189, label %cond.true194, label %lor.lhs.false190, !dbg !6830

lor.lhs.false190:                                 ; preds = %lor.lhs.false186
  %87 = load %struct.rtx_def*, %struct.rtx_def** %out_insn.addr, align 8, !dbg !6830
  %88 = bitcast %struct.rtx_def* %87 to i32*, !dbg !6830
  %bf.load191 = load i32, i32* %88, align 8, !dbg !6830
  %bf.clear192 = and i32 %bf.load191, 65535, !dbg !6830
  %cmp193 = icmp eq i32 %bf.clear192, 10, !dbg !6830
  br i1 %cmp193, label %cond.true194, label %cond.false215, !dbg !6830

cond.true194:                                     ; preds = %lor.lhs.false190, %lor.lhs.false186, %lor.lhs.false182, %if.end178
  %89 = load %struct.rtx_def*, %struct.rtx_def** %out_insn.addr, align 8, !dbg !6830
  %u195 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %89, i32 0, i32 1, !dbg !6830
  %fld196 = bitcast %union.u* %u195 to [1 x %union.rtunion_def]*, !dbg !6830
  %arrayidx197 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld196, i64 0, i64 5, !dbg !6830
  %rt_rtx198 = bitcast %union.rtunion_def* %arrayidx197 to %struct.rtx_def**, !dbg !6830
  %90 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx198, align 8, !dbg !6830
  %91 = bitcast %struct.rtx_def* %90 to i32*, !dbg !6830
  %bf.load199 = load i32, i32* %91, align 8, !dbg !6830
  %bf.clear200 = and i32 %bf.load199, 65535, !dbg !6830
  %cmp201 = icmp eq i32 %bf.clear200, 23, !dbg !6830
  br i1 %cmp201, label %cond.true202, label %cond.false207, !dbg !6830

cond.true202:                                     ; preds = %cond.true194
  %92 = load %struct.rtx_def*, %struct.rtx_def** %out_insn.addr, align 8, !dbg !6830
  %u203 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %92, i32 0, i32 1, !dbg !6830
  %fld204 = bitcast %union.u* %u203 to [1 x %union.rtunion_def]*, !dbg !6830
  %arrayidx205 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld204, i64 0, i64 5, !dbg !6830
  %rt_rtx206 = bitcast %union.rtunion_def* %arrayidx205 to %struct.rtx_def**, !dbg !6830
  %93 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx206, align 8, !dbg !6830
  br label %cond.end213, !dbg !6830

cond.false207:                                    ; preds = %cond.true194
  %94 = load %struct.rtx_def*, %struct.rtx_def** %out_insn.addr, align 8, !dbg !6830
  %95 = load %struct.rtx_def*, %struct.rtx_def** %out_insn.addr, align 8, !dbg !6830
  %u208 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %95, i32 0, i32 1, !dbg !6830
  %fld209 = bitcast %union.u* %u208 to [1 x %union.rtunion_def]*, !dbg !6830
  %arrayidx210 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld209, i64 0, i64 5, !dbg !6830
  %rt_rtx211 = bitcast %union.rtunion_def* %arrayidx210 to %struct.rtx_def**, !dbg !6830
  %96 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx211, align 8, !dbg !6830
  %call212 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %94, %struct.rtx_def* %96), !dbg !6830
  br label %cond.end213, !dbg !6830

cond.end213:                                      ; preds = %cond.false207, %cond.true202
  %cond214 = phi %struct.rtx_def* [ %93, %cond.true202 ], [ %call212, %cond.false207 ], !dbg !6830
  br label %cond.end216, !dbg !6830

cond.false215:                                    ; preds = %lor.lhs.false190
  br label %cond.end216, !dbg !6830

cond.end216:                                      ; preds = %cond.false215, %cond.end213
  %cond217 = phi %struct.rtx_def* [ %cond214, %cond.end213 ], [ null, %cond.false215 ], !dbg !6830
  store %struct.rtx_def* %cond217, %struct.rtx_def** %out_set, align 8, !dbg !6831
  %97 = load %struct.rtx_def*, %struct.rtx_def** %out_set, align 8, !dbg !6832
  %tobool218 = icmp ne %struct.rtx_def* %97, null, !dbg !6832
  br i1 %tobool218, label %if.then219, label %if.else232, !dbg !6834

if.then219:                                       ; preds = %cond.end216
  %98 = load %struct.rtx_def*, %struct.rtx_def** %out_set, align 8, !dbg !6835
  %u220 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %98, i32 0, i32 1, !dbg !6835
  %fld221 = bitcast %union.u* %u220 to [1 x %union.rtunion_def]*, !dbg !6835
  %arrayidx222 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld221, i64 0, i64 0, !dbg !6835
  %rt_rtx223 = bitcast %union.rtunion_def* %arrayidx222 to %struct.rtx_def**, !dbg !6835
  %99 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx223, align 8, !dbg !6835
  %100 = load %struct.rtx_def*, %struct.rtx_def** %in_exp, align 8, !dbg !6838
  %u224 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %100, i32 0, i32 1, !dbg !6838
  %fld225 = bitcast %union.u* %u224 to [1 x %union.rtunion_def]*, !dbg !6838
  %arrayidx226 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld225, i64 0, i64 0, !dbg !6838
  %rt_rtx227 = bitcast %union.rtunion_def* %arrayidx226 to %struct.rtx_def**, !dbg !6838
  %101 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx227, align 8, !dbg !6838
  %call228 = call i32 @reg_mentioned_p(%struct.rtx_def* %99, %struct.rtx_def* %101), !dbg !6839
  %tobool229 = icmp ne i32 %call228, 0, !dbg !6839
  br i1 %tobool229, label %if.then230, label %if.end231, !dbg !6840

if.then230:                                       ; preds = %if.then219
  store i32 0, i32* %retval, align 4, !dbg !6841
  br label %return, !dbg !6841

if.end231:                                        ; preds = %if.then219
  br label %if.end286, !dbg !6842

if.else232:                                       ; preds = %cond.end216
  %102 = load %struct.rtx_def*, %struct.rtx_def** %out_insn.addr, align 8, !dbg !6843
  %u233 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %102, i32 0, i32 1, !dbg !6843
  %fld234 = bitcast %union.u* %u233 to [1 x %union.rtunion_def]*, !dbg !6843
  %arrayidx235 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld234, i64 0, i64 5, !dbg !6843
  %rt_rtx236 = bitcast %union.rtunion_def* %arrayidx235 to %struct.rtx_def**, !dbg !6843
  %103 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx236, align 8, !dbg !6843
  store %struct.rtx_def* %103, %struct.rtx_def** %out_pat, align 8, !dbg !6845
  %104 = load %struct.rtx_def*, %struct.rtx_def** %out_pat, align 8, !dbg !6846
  %105 = bitcast %struct.rtx_def* %104 to i32*, !dbg !6846
  %bf.load237 = load i32, i32* %105, align 8, !dbg !6846
  %bf.clear238 = and i32 %bf.load237, 65535, !dbg !6846
  %cmp239 = icmp eq i32 %bf.clear238, 15, !dbg !6846
  br i1 %cmp239, label %cond.false241, label %cond.true240, !dbg !6846

cond.true240:                                     ; preds = %if.else232
  call void @fancy_abort(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i32 3422, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !6846
  br label %cond.end242, !dbg !6846

cond.false241:                                    ; preds = %if.else232
  br label %cond.end242, !dbg !6846

cond.end242:                                      ; preds = %cond.false241, %cond.true240
  %cond243 = phi i32 [ 0, %cond.true240 ], [ 0, %cond.false241 ], !dbg !6846
  store i32 0, i32* %j, align 4, !dbg !6847
  br label %for.cond244, !dbg !6849

for.cond244:                                      ; preds = %for.inc283, %cond.end242
  %106 = load i32, i32* %j, align 4, !dbg !6850
  %107 = load %struct.rtx_def*, %struct.rtx_def** %out_pat, align 8, !dbg !6852
  %u245 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %107, i32 0, i32 1, !dbg !6852
  %fld246 = bitcast %union.u* %u245 to [1 x %union.rtunion_def]*, !dbg !6852
  %arrayidx247 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld246, i64 0, i64 0, !dbg !6852
  %rt_rtvec248 = bitcast %union.rtunion_def* %arrayidx247 to %struct.rtvec_def**, !dbg !6852
  %108 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec248, align 8, !dbg !6852
  %num_elem249 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %108, i32 0, i32 0, !dbg !6852
  %109 = load i32, i32* %num_elem249, align 8, !dbg !6852
  %cmp250 = icmp slt i32 %106, %109, !dbg !6853
  br i1 %cmp250, label %for.body251, label %for.end285, !dbg !6854

for.body251:                                      ; preds = %for.cond244
  %110 = load %struct.rtx_def*, %struct.rtx_def** %out_pat, align 8, !dbg !6855
  %u252 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %110, i32 0, i32 1, !dbg !6855
  %fld253 = bitcast %union.u* %u252 to [1 x %union.rtunion_def]*, !dbg !6855
  %arrayidx254 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld253, i64 0, i64 0, !dbg !6855
  %rt_rtvec255 = bitcast %union.rtunion_def* %arrayidx254 to %struct.rtvec_def**, !dbg !6855
  %111 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec255, align 8, !dbg !6855
  %elem256 = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %111, i32 0, i32 1, !dbg !6855
  %112 = load i32, i32* %j, align 4, !dbg !6855
  %idxprom257 = sext i32 %112 to i64, !dbg !6855
  %arrayidx258 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem256, i64 0, i64 %idxprom257, !dbg !6855
  %113 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx258, align 8, !dbg !6855
  store %struct.rtx_def* %113, %struct.rtx_def** %out_exp, align 8, !dbg !6857
  %114 = load %struct.rtx_def*, %struct.rtx_def** %out_exp, align 8, !dbg !6858
  %115 = bitcast %struct.rtx_def* %114 to i32*, !dbg !6858
  %bf.load259 = load i32, i32* %115, align 8, !dbg !6858
  %bf.clear260 = and i32 %bf.load259, 65535, !dbg !6858
  %cmp261 = icmp eq i32 %bf.clear260, 25, !dbg !6860
  br i1 %cmp261, label %if.then262, label %if.end263, !dbg !6861

if.then262:                                       ; preds = %for.body251
  br label %for.inc283, !dbg !6862

if.end263:                                        ; preds = %for.body251
  %116 = load %struct.rtx_def*, %struct.rtx_def** %out_exp, align 8, !dbg !6863
  %117 = bitcast %struct.rtx_def* %116 to i32*, !dbg !6863
  %bf.load264 = load i32, i32* %117, align 8, !dbg !6863
  %bf.clear265 = and i32 %bf.load264, 65535, !dbg !6863
  %cmp266 = icmp eq i32 %bf.clear265, 23, !dbg !6863
  br i1 %cmp266, label %cond.false268, label %cond.true267, !dbg !6863

cond.true267:                                     ; preds = %if.end263
  call void @fancy_abort(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i32 3431, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !6863
  br label %cond.end269, !dbg !6863

cond.false268:                                    ; preds = %if.end263
  br label %cond.end269, !dbg !6863

cond.end269:                                      ; preds = %cond.false268, %cond.true267
  %cond270 = phi i32 [ 0, %cond.true267 ], [ 0, %cond.false268 ], !dbg !6863
  %118 = load %struct.rtx_def*, %struct.rtx_def** %out_exp, align 8, !dbg !6864
  %u271 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %118, i32 0, i32 1, !dbg !6864
  %fld272 = bitcast %union.u* %u271 to [1 x %union.rtunion_def]*, !dbg !6864
  %arrayidx273 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld272, i64 0, i64 0, !dbg !6864
  %rt_rtx274 = bitcast %union.rtunion_def* %arrayidx273 to %struct.rtx_def**, !dbg !6864
  %119 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx274, align 8, !dbg !6864
  %120 = load %struct.rtx_def*, %struct.rtx_def** %in_exp, align 8, !dbg !6866
  %u275 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %120, i32 0, i32 1, !dbg !6866
  %fld276 = bitcast %union.u* %u275 to [1 x %union.rtunion_def]*, !dbg !6866
  %arrayidx277 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld276, i64 0, i64 0, !dbg !6866
  %rt_rtx278 = bitcast %union.rtunion_def* %arrayidx277 to %struct.rtx_def**, !dbg !6866
  %121 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx278, align 8, !dbg !6866
  %call279 = call i32 @reg_mentioned_p(%struct.rtx_def* %119, %struct.rtx_def* %121), !dbg !6867
  %tobool280 = icmp ne i32 %call279, 0, !dbg !6867
  br i1 %tobool280, label %if.then281, label %if.end282, !dbg !6868

if.then281:                                       ; preds = %cond.end269
  store i32 0, i32* %retval, align 4, !dbg !6869
  br label %return, !dbg !6869

if.end282:                                        ; preds = %cond.end269
  br label %for.inc283, !dbg !6870

for.inc283:                                       ; preds = %if.end282, %if.then262
  %122 = load i32, i32* %j, align 4, !dbg !6871
  %inc284 = add nsw i32 %122, 1, !dbg !6871
  store i32 %inc284, i32* %j, align 4, !dbg !6871
  br label %for.cond244, !dbg !6872, !llvm.loop !6873

for.end285:                                       ; preds = %for.cond244
  br label %if.end286

if.end286:                                        ; preds = %for.end285, %if.end231
  br label %for.inc287, !dbg !6875

for.inc287:                                       ; preds = %if.end286, %if.then161
  %123 = load i32, i32* %i, align 4, !dbg !6876
  %inc288 = add nsw i32 %123, 1, !dbg !6876
  store i32 %inc288, i32* %i, align 4, !dbg !6876
  br label %for.cond143, !dbg !6877, !llvm.loop !6878

for.end289:                                       ; preds = %for.cond143
  br label %if.end290

if.end290:                                        ; preds = %for.end289, %if.end130
  store i32 1, i32* %retval, align 4, !dbg !6880
  br label %return, !dbg !6880

return:                                           ; preds = %if.end290, %if.then281, %if.then230, %if.then177, %if.then128, %if.then95, %if.then86, %if.then34
  %124 = load i32, i32* %retval, align 4, !dbg !6881
  ret i32 %124, !dbg !6881
}

declare dso_local i32 @reg_mentioned_p(%struct.rtx_def*, %struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @if_test_bypass_p(%struct.rtx_def* %out_insn, %struct.rtx_def* %in_insn) #0 !dbg !6882 {
entry:
  %retval = alloca i32, align 4
  %out_insn.addr = alloca %struct.rtx_def*, align 8
  %in_insn.addr = alloca %struct.rtx_def*, align 8
  %out_set = alloca %struct.rtx_def*, align 8
  %in_set = alloca %struct.rtx_def*, align 8
  %out_pat = alloca %struct.rtx_def*, align 8
  %i = alloca i32, align 4
  %exp = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def* %out_insn, %struct.rtx_def** %out_insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %out_insn.addr, metadata !6883, metadata !DIExpression()), !dbg !6884
  store %struct.rtx_def* %in_insn, %struct.rtx_def** %in_insn.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %in_insn.addr, metadata !6885, metadata !DIExpression()), !dbg !6886
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %out_set, metadata !6887, metadata !DIExpression()), !dbg !6888
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %in_set, metadata !6889, metadata !DIExpression()), !dbg !6890
  %0 = load %struct.rtx_def*, %struct.rtx_def** %in_insn.addr, align 8, !dbg !6891
  %1 = bitcast %struct.rtx_def* %0 to i32*, !dbg !6891
  %bf.load = load i32, i32* %1, align 8, !dbg !6891
  %bf.clear = and i32 %bf.load, 65535, !dbg !6891
  %cmp = icmp eq i32 %bf.clear, 8, !dbg !6891
  br i1 %cmp, label %cond.true, label %lor.lhs.false, !dbg !6891

lor.lhs.false:                                    ; preds = %entry
  %2 = load %struct.rtx_def*, %struct.rtx_def** %in_insn.addr, align 8, !dbg !6891
  %3 = bitcast %struct.rtx_def* %2 to i32*, !dbg !6891
  %bf.load1 = load i32, i32* %3, align 8, !dbg !6891
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !6891
  %cmp3 = icmp eq i32 %bf.clear2, 7, !dbg !6891
  br i1 %cmp3, label %cond.true, label %lor.lhs.false4, !dbg !6891

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %4 = load %struct.rtx_def*, %struct.rtx_def** %in_insn.addr, align 8, !dbg !6891
  %5 = bitcast %struct.rtx_def* %4 to i32*, !dbg !6891
  %bf.load5 = load i32, i32* %5, align 8, !dbg !6891
  %bf.clear6 = and i32 %bf.load5, 65535, !dbg !6891
  %cmp7 = icmp eq i32 %bf.clear6, 9, !dbg !6891
  br i1 %cmp7, label %cond.true, label %lor.lhs.false8, !dbg !6891

lor.lhs.false8:                                   ; preds = %lor.lhs.false4
  %6 = load %struct.rtx_def*, %struct.rtx_def** %in_insn.addr, align 8, !dbg !6891
  %7 = bitcast %struct.rtx_def* %6 to i32*, !dbg !6891
  %bf.load9 = load i32, i32* %7, align 8, !dbg !6891
  %bf.clear10 = and i32 %bf.load9, 65535, !dbg !6891
  %cmp11 = icmp eq i32 %bf.clear10, 10, !dbg !6891
  br i1 %cmp11, label %cond.true, label %cond.false24, !dbg !6891

cond.true:                                        ; preds = %lor.lhs.false8, %lor.lhs.false4, %lor.lhs.false, %entry
  %8 = load %struct.rtx_def*, %struct.rtx_def** %in_insn.addr, align 8, !dbg !6891
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %8, i32 0, i32 1, !dbg !6891
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !6891
  %arrayidx = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 5, !dbg !6891
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx to %struct.rtx_def**, !dbg !6891
  %9 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !6891
  %10 = bitcast %struct.rtx_def* %9 to i32*, !dbg !6891
  %bf.load12 = load i32, i32* %10, align 8, !dbg !6891
  %bf.clear13 = and i32 %bf.load12, 65535, !dbg !6891
  %cmp14 = icmp eq i32 %bf.clear13, 23, !dbg !6891
  br i1 %cmp14, label %cond.true15, label %cond.false, !dbg !6891

cond.true15:                                      ; preds = %cond.true
  %11 = load %struct.rtx_def*, %struct.rtx_def** %in_insn.addr, align 8, !dbg !6891
  %u16 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %11, i32 0, i32 1, !dbg !6891
  %fld17 = bitcast %union.u* %u16 to [1 x %union.rtunion_def]*, !dbg !6891
  %arrayidx18 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld17, i64 0, i64 5, !dbg !6891
  %rt_rtx19 = bitcast %union.rtunion_def* %arrayidx18 to %struct.rtx_def**, !dbg !6891
  %12 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx19, align 8, !dbg !6891
  br label %cond.end, !dbg !6891

cond.false:                                       ; preds = %cond.true
  %13 = load %struct.rtx_def*, %struct.rtx_def** %in_insn.addr, align 8, !dbg !6891
  %14 = load %struct.rtx_def*, %struct.rtx_def** %in_insn.addr, align 8, !dbg !6891
  %u20 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %14, i32 0, i32 1, !dbg !6891
  %fld21 = bitcast %union.u* %u20 to [1 x %union.rtunion_def]*, !dbg !6891
  %arrayidx22 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld21, i64 0, i64 5, !dbg !6891
  %rt_rtx23 = bitcast %union.rtunion_def* %arrayidx22 to %struct.rtx_def**, !dbg !6891
  %15 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx23, align 8, !dbg !6891
  %call = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %13, %struct.rtx_def* %15), !dbg !6891
  br label %cond.end, !dbg !6891

cond.end:                                         ; preds = %cond.false, %cond.true15
  %cond = phi %struct.rtx_def* [ %12, %cond.true15 ], [ %call, %cond.false ], !dbg !6891
  br label %cond.end25, !dbg !6891

cond.false24:                                     ; preds = %lor.lhs.false8
  br label %cond.end25, !dbg !6891

cond.end25:                                       ; preds = %cond.false24, %cond.end
  %cond26 = phi %struct.rtx_def* [ %cond, %cond.end ], [ null, %cond.false24 ], !dbg !6891
  store %struct.rtx_def* %cond26, %struct.rtx_def** %in_set, align 8, !dbg !6892
  %16 = load %struct.rtx_def*, %struct.rtx_def** %in_set, align 8, !dbg !6893
  %tobool = icmp ne %struct.rtx_def* %16, null, !dbg !6893
  br i1 %tobool, label %if.end, label %if.then, !dbg !6895

if.then:                                          ; preds = %cond.end25
  %17 = load %struct.rtx_def*, %struct.rtx_def** %in_insn.addr, align 8, !dbg !6896
  %18 = bitcast %struct.rtx_def* %17 to i32*, !dbg !6896
  %bf.load27 = load i32, i32* %18, align 8, !dbg !6896
  %bf.clear28 = and i32 %bf.load27, 65535, !dbg !6896
  %cmp29 = icmp eq i32 %bf.clear28, 9, !dbg !6896
  br i1 %cmp29, label %cond.false35, label %lor.lhs.false30, !dbg !6896

lor.lhs.false30:                                  ; preds = %if.then
  %19 = load %struct.rtx_def*, %struct.rtx_def** %in_insn.addr, align 8, !dbg !6896
  %20 = bitcast %struct.rtx_def* %19 to i32*, !dbg !6896
  %bf.load31 = load i32, i32* %20, align 8, !dbg !6896
  %bf.clear32 = and i32 %bf.load31, 65535, !dbg !6896
  %cmp33 = icmp eq i32 %bf.clear32, 10, !dbg !6896
  br i1 %cmp33, label %cond.false35, label %cond.true34, !dbg !6896

cond.true34:                                      ; preds = %lor.lhs.false30
  call void @fancy_abort(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i32 3456, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !6896
  br label %cond.end36, !dbg !6896

cond.false35:                                     ; preds = %lor.lhs.false30, %if.then
  br label %cond.end36, !dbg !6896

cond.end36:                                       ; preds = %cond.false35, %cond.true34
  %cond37 = phi i32 [ 0, %cond.true34 ], [ 0, %cond.false35 ], !dbg !6896
  store i32 0, i32* %retval, align 4, !dbg !6898
  br label %return, !dbg !6898

if.end:                                           ; preds = %cond.end25
  %21 = load %struct.rtx_def*, %struct.rtx_def** %in_set, align 8, !dbg !6899
  %u38 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %21, i32 0, i32 1, !dbg !6899
  %fld39 = bitcast %union.u* %u38 to [1 x %union.rtunion_def]*, !dbg !6899
  %arrayidx40 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld39, i64 0, i64 1, !dbg !6899
  %rt_rtx41 = bitcast %union.rtunion_def* %arrayidx40 to %struct.rtx_def**, !dbg !6899
  %22 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx41, align 8, !dbg !6899
  %23 = bitcast %struct.rtx_def* %22 to i32*, !dbg !6899
  %bf.load42 = load i32, i32* %23, align 8, !dbg !6899
  %bf.clear43 = and i32 %bf.load42, 65535, !dbg !6899
  %cmp44 = icmp ne i32 %bf.clear43, 47, !dbg !6901
  br i1 %cmp44, label %if.then45, label %if.end46, !dbg !6902

if.then45:                                        ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !6903
  br label %return, !dbg !6903

if.end46:                                         ; preds = %if.end
  %24 = load %struct.rtx_def*, %struct.rtx_def** %in_set, align 8, !dbg !6904
  %u47 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %24, i32 0, i32 1, !dbg !6904
  %fld48 = bitcast %union.u* %u47 to [1 x %union.rtunion_def]*, !dbg !6904
  %arrayidx49 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld48, i64 0, i64 1, !dbg !6904
  %rt_rtx50 = bitcast %union.rtunion_def* %arrayidx49 to %struct.rtx_def**, !dbg !6904
  %25 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx50, align 8, !dbg !6904
  store %struct.rtx_def* %25, %struct.rtx_def** %in_set, align 8, !dbg !6905
  %26 = load %struct.rtx_def*, %struct.rtx_def** %out_insn.addr, align 8, !dbg !6906
  %27 = bitcast %struct.rtx_def* %26 to i32*, !dbg !6906
  %bf.load51 = load i32, i32* %27, align 8, !dbg !6906
  %bf.clear52 = and i32 %bf.load51, 65535, !dbg !6906
  %cmp53 = icmp eq i32 %bf.clear52, 8, !dbg !6906
  br i1 %cmp53, label %cond.true66, label %lor.lhs.false54, !dbg !6906

lor.lhs.false54:                                  ; preds = %if.end46
  %28 = load %struct.rtx_def*, %struct.rtx_def** %out_insn.addr, align 8, !dbg !6906
  %29 = bitcast %struct.rtx_def* %28 to i32*, !dbg !6906
  %bf.load55 = load i32, i32* %29, align 8, !dbg !6906
  %bf.clear56 = and i32 %bf.load55, 65535, !dbg !6906
  %cmp57 = icmp eq i32 %bf.clear56, 7, !dbg !6906
  br i1 %cmp57, label %cond.true66, label %lor.lhs.false58, !dbg !6906

lor.lhs.false58:                                  ; preds = %lor.lhs.false54
  %30 = load %struct.rtx_def*, %struct.rtx_def** %out_insn.addr, align 8, !dbg !6906
  %31 = bitcast %struct.rtx_def* %30 to i32*, !dbg !6906
  %bf.load59 = load i32, i32* %31, align 8, !dbg !6906
  %bf.clear60 = and i32 %bf.load59, 65535, !dbg !6906
  %cmp61 = icmp eq i32 %bf.clear60, 9, !dbg !6906
  br i1 %cmp61, label %cond.true66, label %lor.lhs.false62, !dbg !6906

lor.lhs.false62:                                  ; preds = %lor.lhs.false58
  %32 = load %struct.rtx_def*, %struct.rtx_def** %out_insn.addr, align 8, !dbg !6906
  %33 = bitcast %struct.rtx_def* %32 to i32*, !dbg !6906
  %bf.load63 = load i32, i32* %33, align 8, !dbg !6906
  %bf.clear64 = and i32 %bf.load63, 65535, !dbg !6906
  %cmp65 = icmp eq i32 %bf.clear64, 10, !dbg !6906
  br i1 %cmp65, label %cond.true66, label %cond.false87, !dbg !6906

cond.true66:                                      ; preds = %lor.lhs.false62, %lor.lhs.false58, %lor.lhs.false54, %if.end46
  %34 = load %struct.rtx_def*, %struct.rtx_def** %out_insn.addr, align 8, !dbg !6906
  %u67 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %34, i32 0, i32 1, !dbg !6906
  %fld68 = bitcast %union.u* %u67 to [1 x %union.rtunion_def]*, !dbg !6906
  %arrayidx69 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld68, i64 0, i64 5, !dbg !6906
  %rt_rtx70 = bitcast %union.rtunion_def* %arrayidx69 to %struct.rtx_def**, !dbg !6906
  %35 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx70, align 8, !dbg !6906
  %36 = bitcast %struct.rtx_def* %35 to i32*, !dbg !6906
  %bf.load71 = load i32, i32* %36, align 8, !dbg !6906
  %bf.clear72 = and i32 %bf.load71, 65535, !dbg !6906
  %cmp73 = icmp eq i32 %bf.clear72, 23, !dbg !6906
  br i1 %cmp73, label %cond.true74, label %cond.false79, !dbg !6906

cond.true74:                                      ; preds = %cond.true66
  %37 = load %struct.rtx_def*, %struct.rtx_def** %out_insn.addr, align 8, !dbg !6906
  %u75 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %37, i32 0, i32 1, !dbg !6906
  %fld76 = bitcast %union.u* %u75 to [1 x %union.rtunion_def]*, !dbg !6906
  %arrayidx77 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld76, i64 0, i64 5, !dbg !6906
  %rt_rtx78 = bitcast %union.rtunion_def* %arrayidx77 to %struct.rtx_def**, !dbg !6906
  %38 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx78, align 8, !dbg !6906
  br label %cond.end85, !dbg !6906

cond.false79:                                     ; preds = %cond.true66
  %39 = load %struct.rtx_def*, %struct.rtx_def** %out_insn.addr, align 8, !dbg !6906
  %40 = load %struct.rtx_def*, %struct.rtx_def** %out_insn.addr, align 8, !dbg !6906
  %u80 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %40, i32 0, i32 1, !dbg !6906
  %fld81 = bitcast %union.u* %u80 to [1 x %union.rtunion_def]*, !dbg !6906
  %arrayidx82 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld81, i64 0, i64 5, !dbg !6906
  %rt_rtx83 = bitcast %union.rtunion_def* %arrayidx82 to %struct.rtx_def**, !dbg !6906
  %41 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx83, align 8, !dbg !6906
  %call84 = call %struct.rtx_def* @single_set_2(%struct.rtx_def* %39, %struct.rtx_def* %41), !dbg !6906
  br label %cond.end85, !dbg !6906

cond.end85:                                       ; preds = %cond.false79, %cond.true74
  %cond86 = phi %struct.rtx_def* [ %38, %cond.true74 ], [ %call84, %cond.false79 ], !dbg !6906
  br label %cond.end88, !dbg !6906

cond.false87:                                     ; preds = %lor.lhs.false62
  br label %cond.end88, !dbg !6906

cond.end88:                                       ; preds = %cond.false87, %cond.end85
  %cond89 = phi %struct.rtx_def* [ %cond86, %cond.end85 ], [ null, %cond.false87 ], !dbg !6906
  store %struct.rtx_def* %cond89, %struct.rtx_def** %out_set, align 8, !dbg !6907
  %42 = load %struct.rtx_def*, %struct.rtx_def** %out_set, align 8, !dbg !6908
  %tobool90 = icmp ne %struct.rtx_def* %42, null, !dbg !6908
  br i1 %tobool90, label %if.then91, label %if.else, !dbg !6910

if.then91:                                        ; preds = %cond.end88
  %43 = load %struct.rtx_def*, %struct.rtx_def** %out_set, align 8, !dbg !6911
  %u92 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %43, i32 0, i32 1, !dbg !6911
  %fld93 = bitcast %union.u* %u92 to [1 x %union.rtunion_def]*, !dbg !6911
  %arrayidx94 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld93, i64 0, i64 0, !dbg !6911
  %rt_rtx95 = bitcast %union.rtunion_def* %arrayidx94 to %struct.rtx_def**, !dbg !6911
  %44 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx95, align 8, !dbg !6911
  %45 = load %struct.rtx_def*, %struct.rtx_def** %in_set, align 8, !dbg !6914
  %u96 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %45, i32 0, i32 1, !dbg !6914
  %fld97 = bitcast %union.u* %u96 to [1 x %union.rtunion_def]*, !dbg !6914
  %arrayidx98 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld97, i64 0, i64 1, !dbg !6914
  %rt_rtx99 = bitcast %union.rtunion_def* %arrayidx98 to %struct.rtx_def**, !dbg !6914
  %46 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx99, align 8, !dbg !6914
  %call100 = call i32 @reg_mentioned_p(%struct.rtx_def* %44, %struct.rtx_def* %46), !dbg !6915
  %tobool101 = icmp ne i32 %call100, 0, !dbg !6915
  br i1 %tobool101, label %if.then113, label %lor.lhs.false102, !dbg !6916

lor.lhs.false102:                                 ; preds = %if.then91
  %47 = load %struct.rtx_def*, %struct.rtx_def** %out_set, align 8, !dbg !6917
  %u103 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %47, i32 0, i32 1, !dbg !6917
  %fld104 = bitcast %union.u* %u103 to [1 x %union.rtunion_def]*, !dbg !6917
  %arrayidx105 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld104, i64 0, i64 0, !dbg !6917
  %rt_rtx106 = bitcast %union.rtunion_def* %arrayidx105 to %struct.rtx_def**, !dbg !6917
  %48 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx106, align 8, !dbg !6917
  %49 = load %struct.rtx_def*, %struct.rtx_def** %in_set, align 8, !dbg !6918
  %u107 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %49, i32 0, i32 1, !dbg !6918
  %fld108 = bitcast %union.u* %u107 to [1 x %union.rtunion_def]*, !dbg !6918
  %arrayidx109 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld108, i64 0, i64 2, !dbg !6918
  %rt_rtx110 = bitcast %union.rtunion_def* %arrayidx109 to %struct.rtx_def**, !dbg !6918
  %50 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx110, align 8, !dbg !6918
  %call111 = call i32 @reg_mentioned_p(%struct.rtx_def* %48, %struct.rtx_def* %50), !dbg !6919
  %tobool112 = icmp ne i32 %call111, 0, !dbg !6919
  br i1 %tobool112, label %if.then113, label %if.end114, !dbg !6920

if.then113:                                       ; preds = %lor.lhs.false102, %if.then91
  store i32 0, i32* %retval, align 4, !dbg !6921
  br label %return, !dbg !6921

if.end114:                                        ; preds = %lor.lhs.false102
  br label %if.end170, !dbg !6922

if.else:                                          ; preds = %cond.end88
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %out_pat, metadata !6923, metadata !DIExpression()), !dbg !6925
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6926, metadata !DIExpression()), !dbg !6927
  %51 = load %struct.rtx_def*, %struct.rtx_def** %out_insn.addr, align 8, !dbg !6928
  %u115 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %51, i32 0, i32 1, !dbg !6928
  %fld116 = bitcast %union.u* %u115 to [1 x %union.rtunion_def]*, !dbg !6928
  %arrayidx117 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld116, i64 0, i64 5, !dbg !6928
  %rt_rtx118 = bitcast %union.rtunion_def* %arrayidx117 to %struct.rtx_def**, !dbg !6928
  %52 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx118, align 8, !dbg !6928
  store %struct.rtx_def* %52, %struct.rtx_def** %out_pat, align 8, !dbg !6929
  %53 = load %struct.rtx_def*, %struct.rtx_def** %out_pat, align 8, !dbg !6930
  %54 = bitcast %struct.rtx_def* %53 to i32*, !dbg !6930
  %bf.load119 = load i32, i32* %54, align 8, !dbg !6930
  %bf.clear120 = and i32 %bf.load119, 65535, !dbg !6930
  %cmp121 = icmp eq i32 %bf.clear120, 15, !dbg !6930
  br i1 %cmp121, label %cond.false123, label %cond.true122, !dbg !6930

cond.true122:                                     ; preds = %if.else
  call void @fancy_abort(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i32 3477, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !6930
  br label %cond.end124, !dbg !6930

cond.false123:                                    ; preds = %if.else
  br label %cond.end124, !dbg !6930

cond.end124:                                      ; preds = %cond.false123, %cond.true122
  %cond125 = phi i32 [ 0, %cond.true122 ], [ 0, %cond.false123 ], !dbg !6930
  store i32 0, i32* %i, align 4, !dbg !6931
  br label %for.cond, !dbg !6933

for.cond:                                         ; preds = %for.inc, %cond.end124
  %55 = load i32, i32* %i, align 4, !dbg !6934
  %56 = load %struct.rtx_def*, %struct.rtx_def** %out_pat, align 8, !dbg !6936
  %u126 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %56, i32 0, i32 1, !dbg !6936
  %fld127 = bitcast %union.u* %u126 to [1 x %union.rtunion_def]*, !dbg !6936
  %arrayidx128 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld127, i64 0, i64 0, !dbg !6936
  %rt_rtvec = bitcast %union.rtunion_def* %arrayidx128 to %struct.rtvec_def**, !dbg !6936
  %57 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec, align 8, !dbg !6936
  %num_elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %57, i32 0, i32 0, !dbg !6936
  %58 = load i32, i32* %num_elem, align 8, !dbg !6936
  %cmp129 = icmp slt i32 %55, %58, !dbg !6937
  br i1 %cmp129, label %for.body, label %for.end, !dbg !6938

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %exp, metadata !6939, metadata !DIExpression()), !dbg !6941
  %59 = load %struct.rtx_def*, %struct.rtx_def** %out_pat, align 8, !dbg !6942
  %u130 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %59, i32 0, i32 1, !dbg !6942
  %fld131 = bitcast %union.u* %u130 to [1 x %union.rtunion_def]*, !dbg !6942
  %arrayidx132 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld131, i64 0, i64 0, !dbg !6942
  %rt_rtvec133 = bitcast %union.rtunion_def* %arrayidx132 to %struct.rtvec_def**, !dbg !6942
  %60 = load %struct.rtvec_def*, %struct.rtvec_def** %rt_rtvec133, align 8, !dbg !6942
  %elem = getelementptr inbounds %struct.rtvec_def, %struct.rtvec_def* %60, i32 0, i32 1, !dbg !6942
  %61 = load i32, i32* %i, align 4, !dbg !6942
  %idxprom = sext i32 %61 to i64, !dbg !6942
  %arrayidx134 = getelementptr inbounds [1 x %struct.rtx_def*], [1 x %struct.rtx_def*]* %elem, i64 0, i64 %idxprom, !dbg !6942
  %62 = load %struct.rtx_def*, %struct.rtx_def** %arrayidx134, align 8, !dbg !6942
  store %struct.rtx_def* %62, %struct.rtx_def** %exp, align 8, !dbg !6941
  %63 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8, !dbg !6943
  %64 = bitcast %struct.rtx_def* %63 to i32*, !dbg !6943
  %bf.load135 = load i32, i32* %64, align 8, !dbg !6943
  %bf.clear136 = and i32 %bf.load135, 65535, !dbg !6943
  %cmp137 = icmp eq i32 %bf.clear136, 25, !dbg !6945
  br i1 %cmp137, label %if.then138, label %if.end139, !dbg !6946

if.then138:                                       ; preds = %for.body
  br label %for.inc, !dbg !6947

if.end139:                                        ; preds = %for.body
  %65 = load %struct.rtx_def*, %struct.rtx_def** %exp, align 8, !dbg !6948
  %66 = bitcast %struct.rtx_def* %65 to i32*, !dbg !6948
  %bf.load140 = load i32, i32* %66, align 8, !dbg !6948
  %bf.clear141 = and i32 %bf.load140, 65535, !dbg !6948
  %cmp142 = icmp eq i32 %bf.clear141, 23, !dbg !6948
  br i1 %cmp142, label %cond.false144, label %cond.true143, !dbg !6948

cond.true143:                                     ; preds = %if.end139
  call void @fancy_abort(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i32 3486, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !6948
  br label %cond.end145, !dbg !6948

cond.false144:                                    ; preds = %if.end139
  br label %cond.end145, !dbg !6948

cond.end145:                                      ; preds = %cond.false144, %cond.true143
  %cond146 = phi i32 [ 0, %cond.true143 ], [ 0, %cond.false144 ], !dbg !6948
  %67 = load %struct.rtx_def*, %struct.rtx_def** %out_set, align 8, !dbg !6949
  %u147 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %67, i32 0, i32 1, !dbg !6949
  %fld148 = bitcast %union.u* %u147 to [1 x %union.rtunion_def]*, !dbg !6949
  %arrayidx149 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld148, i64 0, i64 0, !dbg !6949
  %rt_rtx150 = bitcast %union.rtunion_def* %arrayidx149 to %struct.rtx_def**, !dbg !6949
  %68 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx150, align 8, !dbg !6949
  %69 = load %struct.rtx_def*, %struct.rtx_def** %in_set, align 8, !dbg !6951
  %u151 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %69, i32 0, i32 1, !dbg !6951
  %fld152 = bitcast %union.u* %u151 to [1 x %union.rtunion_def]*, !dbg !6951
  %arrayidx153 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld152, i64 0, i64 1, !dbg !6951
  %rt_rtx154 = bitcast %union.rtunion_def* %arrayidx153 to %struct.rtx_def**, !dbg !6951
  %70 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx154, align 8, !dbg !6951
  %call155 = call i32 @reg_mentioned_p(%struct.rtx_def* %68, %struct.rtx_def* %70), !dbg !6952
  %tobool156 = icmp ne i32 %call155, 0, !dbg !6952
  br i1 %tobool156, label %if.then168, label %lor.lhs.false157, !dbg !6953

lor.lhs.false157:                                 ; preds = %cond.end145
  %71 = load %struct.rtx_def*, %struct.rtx_def** %out_set, align 8, !dbg !6954
  %u158 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %71, i32 0, i32 1, !dbg !6954
  %fld159 = bitcast %union.u* %u158 to [1 x %union.rtunion_def]*, !dbg !6954
  %arrayidx160 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld159, i64 0, i64 0, !dbg !6954
  %rt_rtx161 = bitcast %union.rtunion_def* %arrayidx160 to %struct.rtx_def**, !dbg !6954
  %72 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx161, align 8, !dbg !6954
  %73 = load %struct.rtx_def*, %struct.rtx_def** %in_set, align 8, !dbg !6955
  %u162 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %73, i32 0, i32 1, !dbg !6955
  %fld163 = bitcast %union.u* %u162 to [1 x %union.rtunion_def]*, !dbg !6955
  %arrayidx164 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld163, i64 0, i64 2, !dbg !6955
  %rt_rtx165 = bitcast %union.rtunion_def* %arrayidx164 to %struct.rtx_def**, !dbg !6955
  %74 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx165, align 8, !dbg !6955
  %call166 = call i32 @reg_mentioned_p(%struct.rtx_def* %72, %struct.rtx_def* %74), !dbg !6956
  %tobool167 = icmp ne i32 %call166, 0, !dbg !6956
  br i1 %tobool167, label %if.then168, label %if.end169, !dbg !6957

if.then168:                                       ; preds = %lor.lhs.false157, %cond.end145
  store i32 0, i32* %retval, align 4, !dbg !6958
  br label %return, !dbg !6958

if.end169:                                        ; preds = %lor.lhs.false157
  br label %for.inc, !dbg !6959

for.inc:                                          ; preds = %if.end169, %if.then138
  %75 = load i32, i32* %i, align 4, !dbg !6960
  %inc = add nsw i32 %75, 1, !dbg !6960
  store i32 %inc, i32* %i, align 4, !dbg !6960
  br label %for.cond, !dbg !6961, !llvm.loop !6962

for.end:                                          ; preds = %for.cond
  br label %if.end170

if.end170:                                        ; preds = %for.end, %if.end114
  store i32 1, i32* %retval, align 4, !dbg !6964
  br label %return, !dbg !6964

return:                                           ; preds = %if.end170, %if.then168, %if.then113, %if.then45, %cond.end36
  %76 = load i32, i32* %retval, align 4, !dbg !6965
  ret i32 %76, !dbg !6965
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @gate_handle_peephole2() #0 !dbg !6966 {
entry:
  %0 = load i32, i32* @optimize, align 4, !dbg !6967
  %cmp = icmp sgt i32 %0, 0, !dbg !6968
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !6969

land.rhs:                                         ; preds = %entry
  %1 = load i32, i32* @flag_peephole2, align 4, !dbg !6970
  %tobool = icmp ne i32 %1, 0, !dbg !6969
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %2 = phi i1 [ false, %entry ], [ %tobool, %land.rhs ], !dbg !6971
  %land.ext = zext i1 %2 to i32, !dbg !6969
  %conv = trunc i32 %land.ext to i8, !dbg !6972
  ret i8 %conv, !dbg !6973
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @rest_of_handle_peephole2() #0 !dbg !6974 {
entry:
  call void @peephole2_optimize(), !dbg !6975
  ret i32 0, !dbg !6976
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @rest_of_handle_split_all_insns() #0 !dbg !6977 {
entry:
  call void @split_all_insns(), !dbg !6978
  ret i32 0, !dbg !6979
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @rest_of_handle_split_after_reload() #0 !dbg !6980 {
entry:
  call void @split_all_insns(), !dbg !6981
  ret i32 0, !dbg !6982
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @gate_handle_split_before_regstack() #0 !dbg !6983 {
entry:
  %0 = load i32, i32* @optimize, align 4, !dbg !6984
  %tobool = icmp ne i32 %0, 0, !dbg !6984
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !6985

land.rhs:                                         ; preds = %entry
  %1 = load i32, i32* @flag_schedule_insns_after_reload, align 4, !dbg !6986
  %tobool1 = icmp ne i32 %1, 0, !dbg !6987
  %lnot = xor i1 %tobool1, true, !dbg !6987
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %2 = phi i1 [ false, %entry ], [ %lnot, %land.rhs ], !dbg !6988
  %land.ext = zext i1 %2 to i32, !dbg !6985
  %conv = trunc i32 %land.ext to i8, !dbg !6989
  ret i8 %conv, !dbg !6990
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @rest_of_handle_split_before_regstack() #0 !dbg !6991 {
entry:
  call void @split_all_insns(), !dbg !6992
  ret i32 0, !dbg !6993
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @gate_handle_split_before_sched2() #0 !dbg !6994 {
entry:
  %0 = load i32, i32* @optimize, align 4, !dbg !6995
  %cmp = icmp sgt i32 %0, 0, !dbg !6996
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !6997

land.rhs:                                         ; preds = %entry
  %1 = load i32, i32* @flag_schedule_insns_after_reload, align 4, !dbg !6998
  %tobool = icmp ne i32 %1, 0, !dbg !6997
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %2 = phi i1 [ false, %entry ], [ %tobool, %land.rhs ], !dbg !6999
  %land.ext = zext i1 %2 to i32, !dbg !6997
  %conv = trunc i32 %land.ext to i8, !dbg !6995
  ret i8 %conv, !dbg !7000
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @rest_of_handle_split_before_sched2() #0 !dbg !7001 {
entry:
  call void @split_all_insns(), !dbg !7002
  ret i32 0, !dbg !7003
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @gate_do_final_split() #0 !dbg !7004 {
entry:
  ret i8 0, !dbg !7005
}

declare dso_local i8* @xrealloc(i8*, i64) #2

; Function Attrs: noinline nounwind uwtable
define internal void @simplify_while_replacing(%struct.rtx_def** %loc, %struct.rtx_def* %to, %struct.rtx_def* %object, i32 %op0_mode) #0 !dbg !7006 {
entry:
  %loc.addr = alloca %struct.rtx_def**, align 8
  %to.addr = alloca %struct.rtx_def*, align 8
  %object.addr = alloca %struct.rtx_def*, align 8
  %op0_mode.addr = alloca i32, align 4
  %x = alloca %struct.rtx_def*, align 8
  %code = alloca i32, align 4
  %new_rtx = alloca %struct.rtx_def*, align 8
  %wanted_mode = alloca i32, align 4
  %is_mode = alloca i32, align 4
  %pos = alloca i32, align 4
  %new_mode = alloca i32, align 4
  %new_mode236 = alloca i32, align 4
  %offset = alloca i32, align 4
  %newmem = alloca %struct.rtx_def*, align 8
  store %struct.rtx_def** %loc, %struct.rtx_def*** %loc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def*** %loc.addr, metadata !7009, metadata !DIExpression()), !dbg !7010
  store %struct.rtx_def* %to, %struct.rtx_def** %to.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %to.addr, metadata !7011, metadata !DIExpression()), !dbg !7012
  store %struct.rtx_def* %object, %struct.rtx_def** %object.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %object.addr, metadata !7013, metadata !DIExpression()), !dbg !7014
  store i32 %op0_mode, i32* %op0_mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %op0_mode.addr, metadata !7015, metadata !DIExpression()), !dbg !7016
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x, metadata !7017, metadata !DIExpression()), !dbg !7018
  %0 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8, !dbg !7019
  %1 = load %struct.rtx_def*, %struct.rtx_def** %0, align 8, !dbg !7020
  store %struct.rtx_def* %1, %struct.rtx_def** %x, align 8, !dbg !7018
  call void @llvm.dbg.declare(metadata i32* %code, metadata !7021, metadata !DIExpression()), !dbg !7022
  %2 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !7023
  %3 = bitcast %struct.rtx_def* %2 to i32*, !dbg !7023
  %bf.load = load i32, i32* %3, align 8, !dbg !7023
  %bf.clear = and i32 %bf.load, 65535, !dbg !7023
  store i32 %bf.clear, i32* %code, align 4, !dbg !7022
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %new_rtx, metadata !7024, metadata !DIExpression()), !dbg !7025
  %4 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !7026
  %5 = bitcast %struct.rtx_def* %4 to i32*, !dbg !7026
  %bf.load1 = load i32, i32* %5, align 8, !dbg !7026
  %bf.clear2 = and i32 %bf.load1, 65535, !dbg !7026
  %idxprom = sext i32 %bf.clear2 to i64, !dbg !7026
  %arrayidx = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom, !dbg !7026
  %6 = load i32, i32* %arrayidx, align 4, !dbg !7026
  %shl = shl i32 1, %6, !dbg !7026
  %and = and i32 %shl, 11, !dbg !7026
  %tobool = icmp ne i32 %and, 0, !dbg !7026
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7028

land.lhs.true:                                    ; preds = %entry
  %7 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !7029
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %7, i32 0, i32 1, !dbg !7029
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !7029
  %arrayidx3 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 0, !dbg !7029
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx3 to %struct.rtx_def**, !dbg !7029
  %8 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !7029
  %9 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !7030
  %u4 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %9, i32 0, i32 1, !dbg !7030
  %fld5 = bitcast %union.u* %u4 to [1 x %union.rtunion_def]*, !dbg !7030
  %arrayidx6 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld5, i64 0, i64 1, !dbg !7030
  %rt_rtx7 = bitcast %union.rtunion_def* %arrayidx6 to %struct.rtx_def**, !dbg !7030
  %10 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx7, align 8, !dbg !7030
  %call = call zeroext i8 @swap_commutative_operands_p(%struct.rtx_def* %8, %struct.rtx_def* %10), !dbg !7031
  %conv = zext i8 %call to i32, !dbg !7031
  %tobool8 = icmp ne i32 %conv, 0, !dbg !7031
  br i1 %tobool8, label %if.then, label %if.end, !dbg !7032

if.then:                                          ; preds = %land.lhs.true
  %11 = load %struct.rtx_def*, %struct.rtx_def** %object.addr, align 8, !dbg !7033
  %12 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8, !dbg !7035
  %13 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !7036
  %14 = bitcast %struct.rtx_def* %13 to i32*, !dbg !7036
  %bf.load9 = load i32, i32* %14, align 8, !dbg !7036
  %bf.clear10 = and i32 %bf.load9, 65535, !dbg !7036
  %idxprom11 = sext i32 %bf.clear10 to i64, !dbg !7036
  %arrayidx12 = getelementptr inbounds [139 x i32], [139 x i32]* @rtx_class, i64 0, i64 %idxprom11, !dbg !7036
  %15 = load i32, i32* %arrayidx12, align 4, !dbg !7036
  %cmp = icmp eq i32 %15, 3, !dbg !7036
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !7036

cond.true:                                        ; preds = %if.then
  %16 = load i32, i32* %code, align 4, !dbg !7036
  br label %cond.end, !dbg !7036

cond.false:                                       ; preds = %if.then
  %17 = load i32, i32* %code, align 4, !dbg !7036
  %call14 = call i32 @swap_condition(i32 %17), !dbg !7036
  br label %cond.end, !dbg !7036

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %16, %cond.true ], [ %call14, %cond.false ], !dbg !7036
  %18 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !7036
  %19 = bitcast %struct.rtx_def* %18 to i32*, !dbg !7036
  %bf.load15 = load i32, i32* %19, align 8, !dbg !7036
  %bf.lshr = lshr i32 %bf.load15, 16, !dbg !7036
  %bf.clear16 = and i32 %bf.lshr, 255, !dbg !7036
  %20 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !7036
  %u17 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %20, i32 0, i32 1, !dbg !7036
  %fld18 = bitcast %union.u* %u17 to [1 x %union.rtunion_def]*, !dbg !7036
  %arrayidx19 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld18, i64 0, i64 1, !dbg !7036
  %rt_rtx20 = bitcast %union.rtunion_def* %arrayidx19 to %struct.rtx_def**, !dbg !7036
  %21 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx20, align 8, !dbg !7036
  %22 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !7036
  %u21 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %22, i32 0, i32 1, !dbg !7036
  %fld22 = bitcast %union.u* %u21 to [1 x %union.rtunion_def]*, !dbg !7036
  %arrayidx23 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld22, i64 0, i64 0, !dbg !7036
  %rt_rtx24 = bitcast %union.rtunion_def* %arrayidx23 to %struct.rtx_def**, !dbg !7036
  %23 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx24, align 8, !dbg !7036
  %call25 = call %struct.rtx_def* @gen_rtx_fmt_ee_stat(i32 %cond, i32 %bf.clear16, %struct.rtx_def* %21, %struct.rtx_def* %23), !dbg !7036
  %call26 = call zeroext i8 @validate_unshare_change(%struct.rtx_def* %11, %struct.rtx_def** %12, %struct.rtx_def* %call25, i8 zeroext 1), !dbg !7037
  %24 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8, !dbg !7038
  %25 = load %struct.rtx_def*, %struct.rtx_def** %24, align 8, !dbg !7039
  store %struct.rtx_def* %25, %struct.rtx_def** %x, align 8, !dbg !7040
  %26 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !7041
  %27 = bitcast %struct.rtx_def* %26 to i32*, !dbg !7041
  %bf.load27 = load i32, i32* %27, align 8, !dbg !7041
  %bf.clear28 = and i32 %bf.load27, 65535, !dbg !7041
  store i32 %bf.clear28, i32* %code, align 4, !dbg !7042
  br label %if.end, !dbg !7043

if.end:                                           ; preds = %cond.end, %land.lhs.true, %entry
  %28 = load i32, i32* %code, align 4, !dbg !7044
  switch i32 %28, label %sw.default [
    i32 49, label %sw.bb
    i32 50, label %sw.bb59
    i32 99, label %sw.bb98
    i32 98, label %sw.bb98
    i32 39, label %sw.bb126
    i32 120, label %sw.bb159
    i32 119, label %sw.bb159
  ], !dbg !7045

sw.bb:                                            ; preds = %if.end
  %29 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !7046
  %u29 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %29, i32 0, i32 1, !dbg !7046
  %fld30 = bitcast %union.u* %u29 to [1 x %union.rtunion_def]*, !dbg !7046
  %arrayidx31 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld30, i64 0, i64 1, !dbg !7046
  %rt_rtx32 = bitcast %union.rtunion_def* %arrayidx31 to %struct.rtx_def**, !dbg !7046
  %30 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx32, align 8, !dbg !7046
  %31 = bitcast %struct.rtx_def* %30 to i32*, !dbg !7046
  %bf.load33 = load i32, i32* %31, align 8, !dbg !7046
  %bf.clear34 = and i32 %bf.load33, 65535, !dbg !7046
  %cmp35 = icmp eq i32 %bf.clear34, 30, !dbg !7046
  br i1 %cmp35, label %land.lhs.true37, label %if.end58, !dbg !7049

land.lhs.true37:                                  ; preds = %sw.bb
  %32 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !7050
  %u38 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %32, i32 0, i32 1, !dbg !7050
  %fld39 = bitcast %union.u* %u38 to [1 x %union.rtunion_def]*, !dbg !7050
  %arrayidx40 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld39, i64 0, i64 1, !dbg !7050
  %rt_rtx41 = bitcast %union.rtunion_def* %arrayidx40 to %struct.rtx_def**, !dbg !7050
  %33 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx41, align 8, !dbg !7050
  %34 = load %struct.rtx_def*, %struct.rtx_def** %to.addr, align 8, !dbg !7051
  %cmp42 = icmp eq %struct.rtx_def* %33, %34, !dbg !7052
  br i1 %cmp42, label %if.then44, label %if.end58, !dbg !7053

if.then44:                                        ; preds = %land.lhs.true37
  %35 = load %struct.rtx_def*, %struct.rtx_def** %object.addr, align 8, !dbg !7054
  %36 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8, !dbg !7055
  %37 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !7056
  %38 = bitcast %struct.rtx_def* %37 to i32*, !dbg !7056
  %bf.load45 = load i32, i32* %38, align 8, !dbg !7056
  %bf.lshr46 = lshr i32 %bf.load45, 16, !dbg !7056
  %bf.clear47 = and i32 %bf.lshr46, 255, !dbg !7056
  %39 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !7057
  %u48 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %39, i32 0, i32 1, !dbg !7057
  %fld49 = bitcast %union.u* %u48 to [1 x %union.rtunion_def]*, !dbg !7057
  %arrayidx50 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld49, i64 0, i64 0, !dbg !7057
  %rt_rtx51 = bitcast %union.rtunion_def* %arrayidx50 to %struct.rtx_def**, !dbg !7057
  %40 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx51, align 8, !dbg !7057
  %41 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !7058
  %u52 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %41, i32 0, i32 1, !dbg !7058
  %fld53 = bitcast %union.u* %u52 to [1 x %union.rtunion_def]*, !dbg !7058
  %arrayidx54 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld53, i64 0, i64 1, !dbg !7058
  %rt_rtx55 = bitcast %union.rtunion_def* %arrayidx54 to %struct.rtx_def**, !dbg !7058
  %42 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx55, align 8, !dbg !7058
  %call56 = call %struct.rtx_def* @simplify_gen_binary(i32 49, i32 %bf.clear47, %struct.rtx_def* %40, %struct.rtx_def* %42), !dbg !7059
  %call57 = call zeroext i8 @validate_change(%struct.rtx_def* %35, %struct.rtx_def** %36, %struct.rtx_def* %call56, i8 zeroext 1), !dbg !7060
  br label %if.end58, !dbg !7060

if.end58:                                         ; preds = %if.then44, %land.lhs.true37, %sw.bb
  br label %sw.epilog, !dbg !7061

sw.bb59:                                          ; preds = %if.end
  %43 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !7062
  %u60 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %43, i32 0, i32 1, !dbg !7062
  %fld61 = bitcast %union.u* %u60 to [1 x %union.rtunion_def]*, !dbg !7062
  %arrayidx62 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld61, i64 0, i64 1, !dbg !7062
  %rt_rtx63 = bitcast %union.rtunion_def* %arrayidx62 to %struct.rtx_def**, !dbg !7062
  %44 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx63, align 8, !dbg !7062
  %45 = bitcast %struct.rtx_def* %44 to i32*, !dbg !7062
  %bf.load64 = load i32, i32* %45, align 8, !dbg !7062
  %bf.clear65 = and i32 %bf.load64, 65535, !dbg !7062
  %cmp66 = icmp eq i32 %bf.clear65, 30, !dbg !7062
  br i1 %cmp66, label %if.then76, label %lor.lhs.false, !dbg !7064

lor.lhs.false:                                    ; preds = %sw.bb59
  %46 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !7065
  %u68 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %46, i32 0, i32 1, !dbg !7065
  %fld69 = bitcast %union.u* %u68 to [1 x %union.rtunion_def]*, !dbg !7065
  %arrayidx70 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld69, i64 0, i64 1, !dbg !7065
  %rt_rtx71 = bitcast %union.rtunion_def* %arrayidx70 to %struct.rtx_def**, !dbg !7065
  %47 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx71, align 8, !dbg !7065
  %48 = bitcast %struct.rtx_def* %47 to i32*, !dbg !7065
  %bf.load72 = load i32, i32* %48, align 8, !dbg !7065
  %bf.clear73 = and i32 %bf.load72, 65535, !dbg !7065
  %cmp74 = icmp eq i32 %bf.clear73, 32, !dbg !7066
  br i1 %cmp74, label %if.then76, label %if.end97, !dbg !7067

if.then76:                                        ; preds = %lor.lhs.false, %sw.bb59
  %49 = load %struct.rtx_def*, %struct.rtx_def** %object.addr, align 8, !dbg !7068
  %50 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8, !dbg !7069
  %51 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !7070
  %52 = bitcast %struct.rtx_def* %51 to i32*, !dbg !7070
  %bf.load77 = load i32, i32* %52, align 8, !dbg !7070
  %bf.lshr78 = lshr i32 %bf.load77, 16, !dbg !7070
  %bf.clear79 = and i32 %bf.lshr78, 255, !dbg !7070
  %53 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !7071
  %u80 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %53, i32 0, i32 1, !dbg !7071
  %fld81 = bitcast %union.u* %u80 to [1 x %union.rtunion_def]*, !dbg !7071
  %arrayidx82 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld81, i64 0, i64 0, !dbg !7071
  %rt_rtx83 = bitcast %union.rtunion_def* %arrayidx82 to %struct.rtx_def**, !dbg !7071
  %54 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx83, align 8, !dbg !7071
  %55 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !7072
  %56 = bitcast %struct.rtx_def* %55 to i32*, !dbg !7072
  %bf.load84 = load i32, i32* %56, align 8, !dbg !7072
  %bf.lshr85 = lshr i32 %bf.load84, 16, !dbg !7072
  %bf.clear86 = and i32 %bf.lshr85, 255, !dbg !7072
  %57 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !7073
  %u87 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %57, i32 0, i32 1, !dbg !7073
  %fld88 = bitcast %union.u* %u87 to [1 x %union.rtunion_def]*, !dbg !7073
  %arrayidx89 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld88, i64 0, i64 1, !dbg !7073
  %rt_rtx90 = bitcast %union.rtunion_def* %arrayidx89 to %struct.rtx_def**, !dbg !7073
  %58 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx90, align 8, !dbg !7073
  %59 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !7074
  %60 = bitcast %struct.rtx_def* %59 to i32*, !dbg !7074
  %bf.load91 = load i32, i32* %60, align 8, !dbg !7074
  %bf.lshr92 = lshr i32 %bf.load91, 16, !dbg !7074
  %bf.clear93 = and i32 %bf.lshr92, 255, !dbg !7074
  %call94 = call %struct.rtx_def* @simplify_gen_unary(i32 51, i32 %bf.clear86, %struct.rtx_def* %58, i32 %bf.clear93), !dbg !7075
  %call95 = call %struct.rtx_def* @simplify_gen_binary(i32 49, i32 %bf.clear79, %struct.rtx_def* %54, %struct.rtx_def* %call94), !dbg !7076
  %call96 = call zeroext i8 @validate_change(%struct.rtx_def* %49, %struct.rtx_def** %50, %struct.rtx_def* %call95, i8 zeroext 1), !dbg !7077
  br label %if.end97, !dbg !7077

if.end97:                                         ; preds = %if.then76, %lor.lhs.false
  br label %sw.epilog, !dbg !7078

sw.bb98:                                          ; preds = %if.end, %if.end
  %61 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !7079
  %u99 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %61, i32 0, i32 1, !dbg !7079
  %fld100 = bitcast %union.u* %u99 to [1 x %union.rtunion_def]*, !dbg !7079
  %arrayidx101 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld100, i64 0, i64 0, !dbg !7079
  %rt_rtx102 = bitcast %union.rtunion_def* %arrayidx101 to %struct.rtx_def**, !dbg !7079
  %62 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx102, align 8, !dbg !7079
  %63 = bitcast %struct.rtx_def* %62 to i32*, !dbg !7079
  %bf.load103 = load i32, i32* %63, align 8, !dbg !7079
  %bf.lshr104 = lshr i32 %bf.load103, 16, !dbg !7079
  %bf.clear105 = and i32 %bf.lshr104, 255, !dbg !7079
  %cmp106 = icmp eq i32 %bf.clear105, 0, !dbg !7081
  br i1 %cmp106, label %if.then108, label %if.end125, !dbg !7082

if.then108:                                       ; preds = %sw.bb98
  %64 = load i32, i32* %code, align 4, !dbg !7083
  %65 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !7085
  %66 = bitcast %struct.rtx_def* %65 to i32*, !dbg !7085
  %bf.load109 = load i32, i32* %66, align 8, !dbg !7085
  %bf.lshr110 = lshr i32 %bf.load109, 16, !dbg !7085
  %bf.clear111 = and i32 %bf.lshr110, 255, !dbg !7085
  %67 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !7086
  %u112 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %67, i32 0, i32 1, !dbg !7086
  %fld113 = bitcast %union.u* %u112 to [1 x %union.rtunion_def]*, !dbg !7086
  %arrayidx114 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld113, i64 0, i64 0, !dbg !7086
  %rt_rtx115 = bitcast %union.rtunion_def* %arrayidx114 to %struct.rtx_def**, !dbg !7086
  %68 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx115, align 8, !dbg !7086
  %69 = load i32, i32* %op0_mode.addr, align 4, !dbg !7087
  %call116 = call %struct.rtx_def* @simplify_gen_unary(i32 %64, i32 %bf.clear111, %struct.rtx_def* %68, i32 %69), !dbg !7088
  store %struct.rtx_def* %call116, %struct.rtx_def** %new_rtx, align 8, !dbg !7089
  %70 = load %struct.rtx_def*, %struct.rtx_def** %new_rtx, align 8, !dbg !7090
  %tobool117 = icmp ne %struct.rtx_def* %70, null, !dbg !7090
  br i1 %tobool117, label %if.end123, label %if.then118, !dbg !7092

if.then118:                                       ; preds = %if.then108
  %71 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !7093
  %72 = bitcast %struct.rtx_def* %71 to i32*, !dbg !7093
  %bf.load119 = load i32, i32* %72, align 8, !dbg !7093
  %bf.lshr120 = lshr i32 %bf.load119, 16, !dbg !7093
  %bf.clear121 = and i32 %bf.lshr120, 255, !dbg !7093
  %73 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !7093
  %call122 = call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 25, i32 %bf.clear121, %struct.rtx_def* %73), !dbg !7093
  store %struct.rtx_def* %call122, %struct.rtx_def** %new_rtx, align 8, !dbg !7094
  br label %if.end123, !dbg !7095

if.end123:                                        ; preds = %if.then118, %if.then108
  %74 = load %struct.rtx_def*, %struct.rtx_def** %object.addr, align 8, !dbg !7096
  %75 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8, !dbg !7097
  %76 = load %struct.rtx_def*, %struct.rtx_def** %new_rtx, align 8, !dbg !7098
  %call124 = call zeroext i8 @validate_change(%struct.rtx_def* %74, %struct.rtx_def** %75, %struct.rtx_def* %76, i8 zeroext 1), !dbg !7099
  br label %if.end125, !dbg !7100

if.end125:                                        ; preds = %if.end123, %sw.bb98
  br label %sw.epilog, !dbg !7101

sw.bb126:                                         ; preds = %if.end
  %77 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !7102
  %78 = bitcast %struct.rtx_def* %77 to i32*, !dbg !7102
  %bf.load127 = load i32, i32* %78, align 8, !dbg !7102
  %bf.lshr128 = lshr i32 %bf.load127, 16, !dbg !7102
  %bf.clear129 = and i32 %bf.lshr128, 255, !dbg !7102
  %79 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !7103
  %u130 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %79, i32 0, i32 1, !dbg !7103
  %fld131 = bitcast %union.u* %u130 to [1 x %union.rtunion_def]*, !dbg !7103
  %arrayidx132 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld131, i64 0, i64 0, !dbg !7103
  %rt_rtx133 = bitcast %union.rtunion_def* %arrayidx132 to %struct.rtx_def**, !dbg !7103
  %80 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx133, align 8, !dbg !7103
  %81 = load i32, i32* %op0_mode.addr, align 4, !dbg !7104
  %82 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !7105
  %u134 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %82, i32 0, i32 1, !dbg !7105
  %fld135 = bitcast %union.u* %u134 to [1 x %union.rtunion_def]*, !dbg !7105
  %arrayidx136 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld135, i64 0, i64 1, !dbg !7105
  %rt_uint = bitcast %union.rtunion_def* %arrayidx136 to i32*, !dbg !7105
  %83 = load i32, i32* %rt_uint, align 8, !dbg !7105
  %call137 = call %struct.rtx_def* @simplify_subreg(i32 %bf.clear129, %struct.rtx_def* %80, i32 %81, i32 %83), !dbg !7106
  store %struct.rtx_def* %call137, %struct.rtx_def** %new_rtx, align 8, !dbg !7107
  %84 = load %struct.rtx_def*, %struct.rtx_def** %new_rtx, align 8, !dbg !7108
  %tobool138 = icmp ne %struct.rtx_def* %84, null, !dbg !7108
  br i1 %tobool138, label %if.end154, label %land.lhs.true139, !dbg !7110

land.lhs.true139:                                 ; preds = %sw.bb126
  %85 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !7111
  %u140 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %85, i32 0, i32 1, !dbg !7111
  %fld141 = bitcast %union.u* %u140 to [1 x %union.rtunion_def]*, !dbg !7111
  %arrayidx142 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld141, i64 0, i64 0, !dbg !7111
  %rt_rtx143 = bitcast %union.rtunion_def* %arrayidx142 to %struct.rtx_def**, !dbg !7111
  %86 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx143, align 8, !dbg !7111
  %87 = bitcast %struct.rtx_def* %86 to i32*, !dbg !7111
  %bf.load144 = load i32, i32* %87, align 8, !dbg !7111
  %bf.lshr145 = lshr i32 %bf.load144, 16, !dbg !7111
  %bf.clear146 = and i32 %bf.lshr145, 255, !dbg !7111
  %cmp147 = icmp eq i32 %bf.clear146, 0, !dbg !7112
  br i1 %cmp147, label %if.then149, label %if.end154, !dbg !7113

if.then149:                                       ; preds = %land.lhs.true139
  %88 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !7114
  %89 = bitcast %struct.rtx_def* %88 to i32*, !dbg !7114
  %bf.load150 = load i32, i32* %89, align 8, !dbg !7114
  %bf.lshr151 = lshr i32 %bf.load150, 16, !dbg !7114
  %bf.clear152 = and i32 %bf.lshr151, 255, !dbg !7114
  %90 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([129 x %struct.rtx_def*], [129 x %struct.rtx_def*]* @const_int_rtx, i64 0, i64 64), align 16, !dbg !7114
  %call153 = call %struct.rtx_def* @gen_rtx_fmt_e_stat(i32 25, i32 %bf.clear152, %struct.rtx_def* %90), !dbg !7114
  store %struct.rtx_def* %call153, %struct.rtx_def** %new_rtx, align 8, !dbg !7115
  br label %if.end154, !dbg !7116

if.end154:                                        ; preds = %if.then149, %land.lhs.true139, %sw.bb126
  %91 = load %struct.rtx_def*, %struct.rtx_def** %new_rtx, align 8, !dbg !7117
  %tobool155 = icmp ne %struct.rtx_def* %91, null, !dbg !7117
  br i1 %tobool155, label %if.then156, label %if.end158, !dbg !7119

if.then156:                                       ; preds = %if.end154
  %92 = load %struct.rtx_def*, %struct.rtx_def** %object.addr, align 8, !dbg !7120
  %93 = load %struct.rtx_def**, %struct.rtx_def*** %loc.addr, align 8, !dbg !7121
  %94 = load %struct.rtx_def*, %struct.rtx_def** %new_rtx, align 8, !dbg !7122
  %call157 = call zeroext i8 @validate_change(%struct.rtx_def* %92, %struct.rtx_def** %93, %struct.rtx_def* %94, i8 zeroext 1), !dbg !7123
  br label %if.end158, !dbg !7123

if.end158:                                        ; preds = %if.then156, %if.end154
  br label %sw.epilog, !dbg !7124

sw.bb159:                                         ; preds = %if.end, %if.end
  %95 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !7125
  %u160 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %95, i32 0, i32 1, !dbg !7125
  %fld161 = bitcast %union.u* %u160 to [1 x %union.rtunion_def]*, !dbg !7125
  %arrayidx162 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld161, i64 0, i64 0, !dbg !7125
  %rt_rtx163 = bitcast %union.rtunion_def* %arrayidx162 to %struct.rtx_def**, !dbg !7125
  %96 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx163, align 8, !dbg !7125
  %97 = bitcast %struct.rtx_def* %96 to i32*, !dbg !7125
  %bf.load164 = load i32, i32* %97, align 8, !dbg !7125
  %bf.clear165 = and i32 %bf.load164, 65535, !dbg !7125
  %cmp166 = icmp eq i32 %bf.clear165, 43, !dbg !7125
  br i1 %cmp166, label %land.lhs.true168, label %if.end283, !dbg !7127

land.lhs.true168:                                 ; preds = %sw.bb159
  %98 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !7128
  %u169 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %98, i32 0, i32 1, !dbg !7128
  %fld170 = bitcast %union.u* %u169 to [1 x %union.rtunion_def]*, !dbg !7128
  %arrayidx171 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld170, i64 0, i64 1, !dbg !7128
  %rt_rtx172 = bitcast %union.rtunion_def* %arrayidx171 to %struct.rtx_def**, !dbg !7128
  %99 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx172, align 8, !dbg !7128
  %100 = bitcast %struct.rtx_def* %99 to i32*, !dbg !7128
  %bf.load173 = load i32, i32* %100, align 8, !dbg !7128
  %bf.clear174 = and i32 %bf.load173, 65535, !dbg !7128
  %cmp175 = icmp eq i32 %bf.clear174, 30, !dbg !7128
  br i1 %cmp175, label %land.lhs.true177, label %if.end283, !dbg !7129

land.lhs.true177:                                 ; preds = %land.lhs.true168
  %101 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !7130
  %u178 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %101, i32 0, i32 1, !dbg !7130
  %fld179 = bitcast %union.u* %u178 to [1 x %union.rtunion_def]*, !dbg !7130
  %arrayidx180 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld179, i64 0, i64 2, !dbg !7130
  %rt_rtx181 = bitcast %union.rtunion_def* %arrayidx180 to %struct.rtx_def**, !dbg !7130
  %102 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx181, align 8, !dbg !7130
  %103 = bitcast %struct.rtx_def* %102 to i32*, !dbg !7130
  %bf.load182 = load i32, i32* %103, align 8, !dbg !7130
  %bf.clear183 = and i32 %bf.load182, 65535, !dbg !7130
  %cmp184 = icmp eq i32 %bf.clear183, 30, !dbg !7130
  br i1 %cmp184, label %land.lhs.true186, label %if.end283, !dbg !7131

land.lhs.true186:                                 ; preds = %land.lhs.true177
  %104 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !7132
  %u187 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %104, i32 0, i32 1, !dbg !7132
  %fld188 = bitcast %union.u* %u187 to [1 x %union.rtunion_def]*, !dbg !7132
  %arrayidx189 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld188, i64 0, i64 0, !dbg !7132
  %rt_rtx190 = bitcast %union.rtunion_def* %arrayidx189 to %struct.rtx_def**, !dbg !7132
  %105 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx190, align 8, !dbg !7132
  %u191 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %105, i32 0, i32 1, !dbg !7132
  %fld192 = bitcast %union.u* %u191 to [1 x %union.rtunion_def]*, !dbg !7132
  %arrayidx193 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld192, i64 0, i64 0, !dbg !7132
  %rt_rtx194 = bitcast %union.rtunion_def* %arrayidx193 to %struct.rtx_def**, !dbg !7132
  %106 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx194, align 8, !dbg !7132
  %call195 = call i32 @mode_dependent_address_p(%struct.rtx_def* %106), !dbg !7133
  %tobool196 = icmp ne i32 %call195, 0, !dbg !7133
  br i1 %tobool196, label %if.end283, label %land.lhs.true197, !dbg !7134

land.lhs.true197:                                 ; preds = %land.lhs.true186
  %107 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !7135
  %u198 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %107, i32 0, i32 1, !dbg !7135
  %fld199 = bitcast %union.u* %u198 to [1 x %union.rtunion_def]*, !dbg !7135
  %arrayidx200 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld199, i64 0, i64 0, !dbg !7135
  %rt_rtx201 = bitcast %union.rtunion_def* %arrayidx200 to %struct.rtx_def**, !dbg !7135
  %108 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx201, align 8, !dbg !7135
  %109 = bitcast %struct.rtx_def* %108 to i32*, !dbg !7135
  %bf.load202 = load i32, i32* %109, align 8, !dbg !7135
  %bf.lshr203 = lshr i32 %bf.load202, 27, !dbg !7135
  %bf.clear204 = and i32 %bf.lshr203, 1, !dbg !7135
  %tobool205 = icmp ne i32 %bf.clear204, 0, !dbg !7135
  br i1 %tobool205, label %if.end283, label %if.then206, !dbg !7136

if.then206:                                       ; preds = %land.lhs.true197
  call void @llvm.dbg.declare(metadata i32* %wanted_mode, metadata !7137, metadata !DIExpression()), !dbg !7139
  store i32 0, i32* %wanted_mode, align 4, !dbg !7139
  call void @llvm.dbg.declare(metadata i32* %is_mode, metadata !7140, metadata !DIExpression()), !dbg !7141
  %110 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !7142
  %u207 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %110, i32 0, i32 1, !dbg !7142
  %fld208 = bitcast %union.u* %u207 to [1 x %union.rtunion_def]*, !dbg !7142
  %arrayidx209 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld208, i64 0, i64 0, !dbg !7142
  %rt_rtx210 = bitcast %union.rtunion_def* %arrayidx209 to %struct.rtx_def**, !dbg !7142
  %111 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx210, align 8, !dbg !7142
  %112 = bitcast %struct.rtx_def* %111 to i32*, !dbg !7142
  %bf.load211 = load i32, i32* %112, align 8, !dbg !7142
  %bf.lshr212 = lshr i32 %bf.load211, 16, !dbg !7142
  %bf.clear213 = and i32 %bf.lshr212, 255, !dbg !7142
  store i32 %bf.clear213, i32* %is_mode, align 4, !dbg !7141
  call void @llvm.dbg.declare(metadata i32* %pos, metadata !7143, metadata !DIExpression()), !dbg !7144
  %113 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !7145
  %u214 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %113, i32 0, i32 1, !dbg !7145
  %fld215 = bitcast %union.u* %u214 to [1 x %union.rtunion_def]*, !dbg !7145
  %arrayidx216 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld215, i64 0, i64 2, !dbg !7145
  %rt_rtx217 = bitcast %union.rtunion_def* %arrayidx216 to %struct.rtx_def**, !dbg !7145
  %114 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx217, align 8, !dbg !7145
  %u218 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %114, i32 0, i32 1, !dbg !7145
  %hwint = bitcast %union.u* %u218 to [1 x i64]*, !dbg !7145
  %arrayidx219 = getelementptr inbounds [1 x i64], [1 x i64]* %hwint, i64 0, i64 0, !dbg !7145
  %115 = load i64, i64* %arrayidx219, align 8, !dbg !7145
  %conv220 = trunc i64 %115 to i32, !dbg !7145
  store i32 %conv220, i32* %pos, align 4, !dbg !7144
  %116 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !7146
  %117 = bitcast %struct.rtx_def* %116 to i32*, !dbg !7146
  %bf.load221 = load i32, i32* %117, align 8, !dbg !7146
  %bf.clear222 = and i32 %bf.load221, 65535, !dbg !7146
  %cmp223 = icmp eq i32 %bf.clear222, 120, !dbg !7148
  br i1 %cmp223, label %if.then225, label %if.else, !dbg !7149

if.then225:                                       ; preds = %if.then206
  call void @llvm.dbg.declare(metadata i32* %new_mode, metadata !7150, metadata !DIExpression()), !dbg !7152
  %call226 = call i32 @mode_for_extraction(i32 2, i32 1), !dbg !7153
  store i32 %call226, i32* %new_mode, align 4, !dbg !7152
  %118 = load i32, i32* %new_mode, align 4, !dbg !7154
  %cmp227 = icmp ne i32 %118, 87, !dbg !7156
  br i1 %cmp227, label %if.then229, label %if.end230, !dbg !7157

if.then229:                                       ; preds = %if.then225
  %119 = load i32, i32* %new_mode, align 4, !dbg !7158
  store i32 %119, i32* %wanted_mode, align 4, !dbg !7159
  br label %if.end230, !dbg !7160

if.end230:                                        ; preds = %if.then229, %if.then225
  br label %if.end243, !dbg !7161

if.else:                                          ; preds = %if.then206
  %120 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !7162
  %121 = bitcast %struct.rtx_def* %120 to i32*, !dbg !7162
  %bf.load231 = load i32, i32* %121, align 8, !dbg !7162
  %bf.clear232 = and i32 %bf.load231, 65535, !dbg !7162
  %cmp233 = icmp eq i32 %bf.clear232, 119, !dbg !7164
  br i1 %cmp233, label %if.then235, label %if.end242, !dbg !7165

if.then235:                                       ; preds = %if.else
  call void @llvm.dbg.declare(metadata i32* %new_mode236, metadata !7166, metadata !DIExpression()), !dbg !7168
  %call237 = call i32 @mode_for_extraction(i32 1, i32 1), !dbg !7169
  store i32 %call237, i32* %new_mode236, align 4, !dbg !7168
  %122 = load i32, i32* %new_mode236, align 4, !dbg !7170
  %cmp238 = icmp ne i32 %122, 87, !dbg !7172
  br i1 %cmp238, label %if.then240, label %if.end241, !dbg !7173

if.then240:                                       ; preds = %if.then235
  %123 = load i32, i32* %new_mode236, align 4, !dbg !7174
  store i32 %123, i32* %wanted_mode, align 4, !dbg !7175
  br label %if.end241, !dbg !7176

if.end241:                                        ; preds = %if.then240, %if.then235
  br label %if.end242, !dbg !7177

if.end242:                                        ; preds = %if.end241, %if.else
  br label %if.end243

if.end243:                                        ; preds = %if.end242, %if.end230
  %124 = load i32, i32* %wanted_mode, align 4, !dbg !7178
  %cmp244 = icmp ne i32 %124, 0, !dbg !7180
  br i1 %cmp244, label %land.lhs.true246, label %if.end282, !dbg !7181

land.lhs.true246:                                 ; preds = %if.end243
  %125 = load i32, i32* %wanted_mode, align 4, !dbg !7182
  %idxprom247 = zext i32 %125 to i64, !dbg !7182
  %arrayidx248 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom247, !dbg !7182
  %126 = load i8, i8* %arrayidx248, align 1, !dbg !7182
  %conv249 = zext i8 %126 to i16, !dbg !7182
  %conv250 = zext i16 %conv249 to i32, !dbg !7182
  %127 = load i32, i32* %is_mode, align 4, !dbg !7183
  %idxprom251 = zext i32 %127 to i64, !dbg !7183
  %arrayidx252 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom251, !dbg !7183
  %128 = load i8, i8* %arrayidx252, align 1, !dbg !7183
  %conv253 = zext i8 %128 to i16, !dbg !7183
  %conv254 = zext i16 %conv253 to i32, !dbg !7183
  %cmp255 = icmp slt i32 %conv250, %conv254, !dbg !7184
  br i1 %cmp255, label %if.then257, label %if.end282, !dbg !7185

if.then257:                                       ; preds = %land.lhs.true246
  call void @llvm.dbg.declare(metadata i32* %offset, metadata !7186, metadata !DIExpression()), !dbg !7188
  %129 = load i32, i32* %pos, align 4, !dbg !7189
  %div = sdiv i32 %129, 8, !dbg !7190
  store i32 %div, i32* %offset, align 4, !dbg !7188
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %newmem, metadata !7191, metadata !DIExpression()), !dbg !7192
  %130 = load i32, i32* %wanted_mode, align 4, !dbg !7193
  %idxprom258 = zext i32 %130 to i64, !dbg !7193
  %arrayidx259 = getelementptr inbounds [87 x i8], [87 x i8]* @mode_size, i64 0, i64 %idxprom258, !dbg !7193
  %131 = load i8, i8* %arrayidx259, align 1, !dbg !7193
  %conv260 = zext i8 %131 to i16, !dbg !7193
  %conv261 = zext i16 %conv260 to i32, !dbg !7193
  %mul = mul nsw i32 %conv261, 8, !dbg !7193
  %conv262 = trunc i32 %mul to i16, !dbg !7193
  %conv263 = zext i16 %conv262 to i32, !dbg !7193
  %132 = load i32, i32* %pos, align 4, !dbg !7194
  %rem = srem i32 %132, %conv263, !dbg !7194
  store i32 %rem, i32* %pos, align 4, !dbg !7194
  %133 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !7195
  %u264 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %133, i32 0, i32 1, !dbg !7195
  %fld265 = bitcast %union.u* %u264 to [1 x %union.rtunion_def]*, !dbg !7195
  %arrayidx266 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld265, i64 0, i64 0, !dbg !7195
  %rt_rtx267 = bitcast %union.rtunion_def* %arrayidx266 to %struct.rtx_def**, !dbg !7195
  %134 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx267, align 8, !dbg !7195
  %135 = load i32, i32* %wanted_mode, align 4, !dbg !7195
  %136 = load i32, i32* %offset, align 4, !dbg !7195
  %conv268 = sext i32 %136 to i64, !dbg !7195
  %call269 = call %struct.rtx_def* @adjust_address_1(%struct.rtx_def* %134, i32 %135, i64 %conv268, i32 0, i32 1), !dbg !7195
  store %struct.rtx_def* %call269, %struct.rtx_def** %newmem, align 8, !dbg !7196
  %137 = load %struct.rtx_def*, %struct.rtx_def** %object.addr, align 8, !dbg !7197
  %138 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !7198
  %u270 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %138, i32 0, i32 1, !dbg !7198
  %fld271 = bitcast %union.u* %u270 to [1 x %union.rtunion_def]*, !dbg !7198
  %arrayidx272 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld271, i64 0, i64 2, !dbg !7198
  %rt_rtx273 = bitcast %union.rtunion_def* %arrayidx272 to %struct.rtx_def**, !dbg !7198
  %139 = load i32, i32* %pos, align 4, !dbg !7199
  %conv274 = sext i32 %139 to i64, !dbg !7199
  %call275 = call %struct.rtx_def* @gen_rtx_CONST_INT(i32 0, i64 %conv274), !dbg !7199
  %call276 = call zeroext i8 @validate_change(%struct.rtx_def* %137, %struct.rtx_def** %rt_rtx273, %struct.rtx_def* %call275, i8 zeroext 1), !dbg !7200
  %140 = load %struct.rtx_def*, %struct.rtx_def** %object.addr, align 8, !dbg !7201
  %141 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !7202
  %u277 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %141, i32 0, i32 1, !dbg !7202
  %fld278 = bitcast %union.u* %u277 to [1 x %union.rtunion_def]*, !dbg !7202
  %arrayidx279 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld278, i64 0, i64 0, !dbg !7202
  %rt_rtx280 = bitcast %union.rtunion_def* %arrayidx279 to %struct.rtx_def**, !dbg !7202
  %142 = load %struct.rtx_def*, %struct.rtx_def** %newmem, align 8, !dbg !7203
  %call281 = call zeroext i8 @validate_change(%struct.rtx_def* %140, %struct.rtx_def** %rt_rtx280, %struct.rtx_def* %142, i8 zeroext 1), !dbg !7204
  br label %if.end282, !dbg !7205

if.end282:                                        ; preds = %if.then257, %land.lhs.true246, %if.end243
  br label %if.end283, !dbg !7206

if.end283:                                        ; preds = %if.end282, %land.lhs.true197, %land.lhs.true186, %land.lhs.true177, %land.lhs.true168, %sw.bb159
  br label %sw.epilog, !dbg !7207

sw.default:                                       ; preds = %if.end
  br label %sw.epilog, !dbg !7208

sw.epilog:                                        ; preds = %sw.default, %if.end283, %if.end158, %if.end125, %if.end97, %if.end58
  ret void, !dbg !7209
}

declare dso_local i32 @swap_condition(i32) #2

declare dso_local %struct.rtx_def* @simplify_gen_binary(i32, i32, %struct.rtx_def*, %struct.rtx_def*) #2

declare dso_local %struct.rtx_def* @simplify_gen_unary(i32, i32, %struct.rtx_def*, i32) #2

declare dso_local %struct.rtx_def* @gen_rtx_fmt_e_stat(i32, i32, %struct.rtx_def*) #2

declare dso_local %struct.rtx_def* @simplify_subreg(i32, %struct.rtx_def*, i32, i32) #2

declare dso_local i32 @mode_for_extraction(i32, i32) #2

declare dso_local %struct.rtx_def* @adjust_address_1(%struct.rtx_def*, i32, i64, i32, i32) #2

declare dso_local %struct.rtx_def* @gen_rtx_CONST_INT(i32, i64) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @end_hard_regno(i32 %mode, i32 %regno) #0 !dbg !7210 {
entry:
  %mode.addr = alloca i32, align 4
  %regno.addr = alloca i32, align 4
  store i32 %mode, i32* %mode.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %mode.addr, metadata !7213, metadata !DIExpression()), !dbg !7214
  store i32 %regno, i32* %regno.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %regno.addr, metadata !7215, metadata !DIExpression()), !dbg !7216
  %0 = load i32, i32* %regno.addr, align 4, !dbg !7217
  %1 = load i32, i32* %regno.addr, align 4, !dbg !7218
  %idxprom = zext i32 %1 to i64, !dbg !7219
  %arrayidx = getelementptr inbounds [53 x [87 x i8]], [53 x [87 x i8]]* @hard_regno_nregs, i64 0, i64 %idxprom, !dbg !7219
  %2 = load i32, i32* %mode.addr, align 4, !dbg !7220
  %idxprom1 = sext i32 %2 to i64, !dbg !7219
  %arrayidx2 = getelementptr inbounds [87 x i8], [87 x i8]* %arrayidx, i64 0, i64 %idxprom1, !dbg !7219
  %3 = load i8, i8* %arrayidx2, align 1, !dbg !7219
  %conv = zext i8 %3 to i32, !dbg !7219
  %add = add i32 %0, %conv, !dbg !7221
  ret i32 %add, !dbg !7222
}

declare dso_local %struct.rtx_def* @try_split(%struct.rtx_def*, %struct.rtx_def*, i32) #2

declare dso_local %struct.rtx_def* @find_reg_equal_equiv_note(%struct.rtx_def*) #2

declare dso_local %struct.rtx_def* @set_unique_reg_note(%struct.rtx_def*, i32, %struct.rtx_def*) #2

declare dso_local void @set_insn_deleted(%struct.rtx_def*) #2

declare dso_local void @cleanup_subreg_operands(%struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @peephole2_optimize() #0 !dbg !7223 {
entry:
  %insn = alloca %struct.rtx_def*, align 8
  %prev = alloca %struct.rtx_def*, align 8
  %live = alloca %struct.bitmap_head_def*, align 8
  %i = alloca i32, align 4
  %bb = alloca %struct.basic_block_def*, align 8
  %do_cleanup_cfg = alloca i8, align 1
  %do_rebuild_jump_labels = alloca i8, align 1
  %attempt = alloca %struct.rtx_def*, align 8
  %before_try = alloca %struct.rtx_def*, align 8
  %x = alloca %struct.rtx_def*, align 8
  %match_len = alloca i32, align 4
  %note = alloca %struct.rtx_def*, align 8
  %was_call = alloca i8, align 1
  %j = alloca i32, align 4
  %old_insn = alloca %struct.rtx_def*, align 8
  %new_insn = alloca %struct.rtx_def*, align 8
  %note57 = alloca %struct.rtx_def*, align 8
  %eh_edge = alloca %struct.edge_def*, align 8
  %ei = alloca %struct.edge_iterator, align 8
  %tmp = alloca %struct.edge_iterator, align 8
  %nfte = alloca %struct.edge_def*, align 8
  %nehe = alloca %struct.edge_def*, align 8
  %flags199 = alloca i32, align 4
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %insn, metadata !7224, metadata !DIExpression()), !dbg !7225
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %prev, metadata !7226, metadata !DIExpression()), !dbg !7227
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %live, metadata !7228, metadata !DIExpression()), !dbg !7229
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7230, metadata !DIExpression()), !dbg !7231
  call void @llvm.dbg.declare(metadata %struct.basic_block_def** %bb, metadata !7232, metadata !DIExpression()), !dbg !7233
  call void @llvm.dbg.declare(metadata i8* %do_cleanup_cfg, metadata !7234, metadata !DIExpression()), !dbg !7235
  store i8 0, i8* %do_cleanup_cfg, align 1, !dbg !7235
  call void @llvm.dbg.declare(metadata i8* %do_rebuild_jump_labels, metadata !7236, metadata !DIExpression()), !dbg !7237
  store i8 0, i8* %do_rebuild_jump_labels, align 1, !dbg !7237
  %call = call i32 @df_set_flags(i32 1), !dbg !7238
  call void @df_analyze(), !dbg !7239
  store i32 0, i32* %i, align 4, !dbg !7240
  br label %for.cond, !dbg !7242

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !7243
  %cmp = icmp slt i32 %0, 5, !dbg !7245
  br i1 %cmp, label %for.body, label %for.end, !dbg !7246

for.body:                                         ; preds = %for.cond
  %call1 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* @reg_obstack), !dbg !7247
  %1 = load i32, i32* %i, align 4, !dbg !7248
  %idxprom = sext i32 %1 to i64, !dbg !7249
  %arrayidx = getelementptr inbounds [5 x %struct.peep2_insn_data], [5 x %struct.peep2_insn_data]* @peep2_insn_data, i64 0, i64 %idxprom, !dbg !7249
  %live_before = getelementptr inbounds %struct.peep2_insn_data, %struct.peep2_insn_data* %arrayidx, i32 0, i32 1, !dbg !7250
  store %struct.bitmap_head_def* %call1, %struct.bitmap_head_def** %live_before, align 8, !dbg !7251
  br label %for.inc, !dbg !7249

for.inc:                                          ; preds = %for.body
  %2 = load i32, i32* %i, align 4, !dbg !7252
  %inc = add nsw i32 %2, 1, !dbg !7252
  store i32 %inc, i32* %i, align 4, !dbg !7252
  br label %for.cond, !dbg !7253, !llvm.loop !7254

for.end:                                          ; preds = %for.cond
  %call2 = call %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack* @reg_obstack), !dbg !7256
  store %struct.bitmap_head_def* %call2, %struct.bitmap_head_def** %live, align 8, !dbg !7257
  %3 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7258
  %add.ptr = getelementptr inbounds %struct.function, %struct.function* %3, i64 0, !dbg !7258
  %cfg = getelementptr inbounds %struct.function, %struct.function* %add.ptr, i32 0, i32 1, !dbg !7258
  %4 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg, align 8, !dbg !7258
  %x_exit_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %4, i32 0, i32 1, !dbg !7258
  %5 = load %struct.basic_block_def*, %struct.basic_block_def** %x_exit_block_ptr, align 8, !dbg !7258
  %prev_bb = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %5, i32 0, i32 5, !dbg !7258
  %6 = load %struct.basic_block_def*, %struct.basic_block_def** %prev_bb, align 8, !dbg !7258
  store %struct.basic_block_def* %6, %struct.basic_block_def** %bb, align 8, !dbg !7258
  br label %for.cond3, !dbg !7258

for.cond3:                                        ; preds = %for.inc337, %for.end
  %7 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !7260
  %8 = load %struct.function*, %struct.function** @cfun, align 8, !dbg !7260
  %add.ptr4 = getelementptr inbounds %struct.function, %struct.function* %8, i64 0, !dbg !7260
  %cfg5 = getelementptr inbounds %struct.function, %struct.function* %add.ptr4, i32 0, i32 1, !dbg !7260
  %9 = load %struct.control_flow_graph*, %struct.control_flow_graph** %cfg5, align 8, !dbg !7260
  %x_entry_block_ptr = getelementptr inbounds %struct.control_flow_graph, %struct.control_flow_graph* %9, i32 0, i32 0, !dbg !7260
  %10 = load %struct.basic_block_def*, %struct.basic_block_def** %x_entry_block_ptr, align 8, !dbg !7260
  %cmp6 = icmp ne %struct.basic_block_def* %7, %10, !dbg !7260
  br i1 %cmp6, label %for.body7, label %for.end339, !dbg !7258

for.body7:                                        ; preds = %for.cond3
  %11 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !7262
  call void @rtl_profile_for_bb(%struct.basic_block_def* %11), !dbg !7264
  %12 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %live, align 8, !dbg !7265
  %13 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !7266
  %index = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %13, i32 0, i32 9, !dbg !7266
  %14 = load i32, i32* %index, align 8, !dbg !7266
  %call8 = call %struct.df_lr_bb_info* @df_lr_get_bb_info(i32 %14), !dbg !7266
  %out = getelementptr inbounds %struct.df_lr_bb_info, %struct.df_lr_bb_info* %call8, i32 0, i32 3, !dbg !7266
  %15 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %out, align 8, !dbg !7266
  call void @bitmap_copy(%struct.bitmap_head_def* %12, %struct.bitmap_head_def* %15), !dbg !7267
  %16 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !7268
  %17 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %live, align 8, !dbg !7269
  call void @df_simulate_initialize_backwards(%struct.basic_block_def* %16, %struct.bitmap_head_def* %17), !dbg !7270
  %18 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %live, align 8, !dbg !7271
  call void @peep2_reinit_state(%struct.bitmap_head_def* %18), !dbg !7272
  %19 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !7273
  %il = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %19, i32 0, i32 7, !dbg !7273
  %rtl = bitcast %union.basic_block_il_dependent* %il to %struct.rtl_bb_info**, !dbg !7273
  %20 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl, align 8, !dbg !7273
  %end_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %20, i32 0, i32 1, !dbg !7273
  %21 = load %struct.rtx_def*, %struct.rtx_def** %end_, align 8, !dbg !7273
  store %struct.rtx_def* %21, %struct.rtx_def** %insn, align 8, !dbg !7275
  br label %for.cond9, !dbg !7276

for.cond9:                                        ; preds = %for.inc335, %for.body7
  %22 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7277
  %u = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %22, i32 0, i32 1, !dbg !7277
  %fld = bitcast %union.u* %u to [1 x %union.rtunion_def]*, !dbg !7277
  %arrayidx10 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld, i64 0, i64 1, !dbg !7277
  %rt_rtx = bitcast %union.rtunion_def* %arrayidx10 to %struct.rtx_def**, !dbg !7277
  %23 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx, align 8, !dbg !7277
  store %struct.rtx_def* %23, %struct.rtx_def** %prev, align 8, !dbg !7280
  %24 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7281
  %25 = bitcast %struct.rtx_def* %24 to i32*, !dbg !7281
  %bf.load = load i32, i32* %25, align 8, !dbg !7281
  %bf.clear = and i32 %bf.load, 65535, !dbg !7281
  %cmp11 = icmp eq i32 %bf.clear, 8, !dbg !7281
  br i1 %cmp11, label %land.lhs.true, label %lor.lhs.false, !dbg !7281

lor.lhs.false:                                    ; preds = %for.cond9
  %26 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7281
  %27 = bitcast %struct.rtx_def* %26 to i32*, !dbg !7281
  %bf.load12 = load i32, i32* %27, align 8, !dbg !7281
  %bf.clear13 = and i32 %bf.load12, 65535, !dbg !7281
  %cmp14 = icmp eq i32 %bf.clear13, 7, !dbg !7281
  br i1 %cmp14, label %land.lhs.true, label %lor.lhs.false15, !dbg !7281

lor.lhs.false15:                                  ; preds = %lor.lhs.false
  %28 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7281
  %29 = bitcast %struct.rtx_def* %28 to i32*, !dbg !7281
  %bf.load16 = load i32, i32* %29, align 8, !dbg !7281
  %bf.clear17 = and i32 %bf.load16, 65535, !dbg !7281
  %cmp18 = icmp eq i32 %bf.clear17, 9, !dbg !7281
  br i1 %cmp18, label %land.lhs.true, label %lor.lhs.false19, !dbg !7281

lor.lhs.false19:                                  ; preds = %lor.lhs.false15
  %30 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7281
  %31 = bitcast %struct.rtx_def* %30 to i32*, !dbg !7281
  %bf.load20 = load i32, i32* %31, align 8, !dbg !7281
  %bf.clear21 = and i32 %bf.load20, 65535, !dbg !7281
  %cmp22 = icmp eq i32 %bf.clear21, 10, !dbg !7281
  br i1 %cmp22, label %land.lhs.true, label %if.end328, !dbg !7281

land.lhs.true:                                    ; preds = %lor.lhs.false19, %lor.lhs.false15, %lor.lhs.false, %for.cond9
  %32 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7281
  %33 = bitcast %struct.rtx_def* %32 to i32*, !dbg !7281
  %bf.load23 = load i32, i32* %33, align 8, !dbg !7281
  %bf.clear24 = and i32 %bf.load23, 65535, !dbg !7281
  %cmp25 = icmp eq i32 %bf.clear24, 7, !dbg !7281
  br i1 %cmp25, label %if.end328, label %if.then, !dbg !7283

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %attempt, metadata !7284, metadata !DIExpression()), !dbg !7286
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %before_try, metadata !7287, metadata !DIExpression()), !dbg !7288
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %x, metadata !7289, metadata !DIExpression()), !dbg !7290
  call void @llvm.dbg.declare(metadata i32* %match_len, metadata !7291, metadata !DIExpression()), !dbg !7292
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %note, metadata !7293, metadata !DIExpression()), !dbg !7294
  call void @llvm.dbg.declare(metadata i8* %was_call, metadata !7295, metadata !DIExpression()), !dbg !7296
  store i8 0, i8* %was_call, align 1, !dbg !7296
  %34 = load i32, i32* @peep2_current, align 4, !dbg !7297
  %dec = add nsw i32 %34, -1, !dbg !7297
  store i32 %dec, i32* @peep2_current, align 4, !dbg !7297
  %cmp26 = icmp slt i32 %dec, 0, !dbg !7299
  br i1 %cmp26, label %if.then27, label %if.end, !dbg !7300

if.then27:                                        ; preds = %if.then
  store i32 4, i32* @peep2_current, align 4, !dbg !7301
  br label %if.end, !dbg !7302

if.end:                                           ; preds = %if.then27, %if.then
  %35 = load i32, i32* @peep2_current_count, align 4, !dbg !7303
  %cmp28 = icmp slt i32 %35, 4, !dbg !7305
  br i1 %cmp28, label %land.lhs.true29, label %if.end36, !dbg !7306

land.lhs.true29:                                  ; preds = %if.end
  %36 = load i32, i32* @peep2_current, align 4, !dbg !7307
  %idxprom30 = sext i32 %36 to i64, !dbg !7308
  %arrayidx31 = getelementptr inbounds [5 x %struct.peep2_insn_data], [5 x %struct.peep2_insn_data]* @peep2_insn_data, i64 0, i64 %idxprom30, !dbg !7308
  %insn32 = getelementptr inbounds %struct.peep2_insn_data, %struct.peep2_insn_data* %arrayidx31, i32 0, i32 0, !dbg !7309
  %37 = load %struct.rtx_def*, %struct.rtx_def** %insn32, align 16, !dbg !7309
  %cmp33 = icmp eq %struct.rtx_def* %37, null, !dbg !7310
  br i1 %cmp33, label %if.then34, label %if.end36, !dbg !7311

if.then34:                                        ; preds = %land.lhs.true29
  %38 = load i32, i32* @peep2_current_count, align 4, !dbg !7312
  %inc35 = add nsw i32 %38, 1, !dbg !7312
  store i32 %inc35, i32* @peep2_current_count, align 4, !dbg !7312
  br label %if.end36, !dbg !7313

if.end36:                                         ; preds = %if.then34, %land.lhs.true29, %if.end
  %39 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7314
  %40 = load i32, i32* @peep2_current, align 4, !dbg !7315
  %idxprom37 = sext i32 %40 to i64, !dbg !7316
  %arrayidx38 = getelementptr inbounds [5 x %struct.peep2_insn_data], [5 x %struct.peep2_insn_data]* @peep2_insn_data, i64 0, i64 %idxprom37, !dbg !7316
  %insn39 = getelementptr inbounds %struct.peep2_insn_data, %struct.peep2_insn_data* %arrayidx38, i32 0, i32 0, !dbg !7317
  store %struct.rtx_def* %39, %struct.rtx_def** %insn39, align 16, !dbg !7318
  %41 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !7319
  %42 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7320
  %43 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %live, align 8, !dbg !7321
  call void @df_simulate_one_insn_backwards(%struct.basic_block_def* %41, %struct.rtx_def* %42, %struct.bitmap_head_def* %43), !dbg !7322
  %44 = load i32, i32* @peep2_current, align 4, !dbg !7323
  %idxprom40 = sext i32 %44 to i64, !dbg !7323
  %arrayidx41 = getelementptr inbounds [5 x %struct.peep2_insn_data], [5 x %struct.peep2_insn_data]* @peep2_insn_data, i64 0, i64 %idxprom40, !dbg !7323
  %live_before42 = getelementptr inbounds %struct.peep2_insn_data, %struct.peep2_insn_data* %arrayidx41, i32 0, i32 1, !dbg !7323
  %45 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %live_before42, align 8, !dbg !7323
  %46 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %live, align 8, !dbg !7323
  call void @bitmap_copy(%struct.bitmap_head_def* %45, %struct.bitmap_head_def* %46), !dbg !7323
  %47 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7324
  %48 = bitcast %struct.rtx_def* %47 to i32*, !dbg !7324
  %bf.load43 = load i32, i32* %48, align 8, !dbg !7324
  %bf.lshr = lshr i32 %bf.load43, 30, !dbg !7324
  %bf.clear44 = and i32 %bf.lshr, 1, !dbg !7324
  %tobool = icmp ne i32 %bf.clear44, 0, !dbg !7324
  br i1 %tobool, label %if.then45, label %if.else, !dbg !7326

if.then45:                                        ; preds = %if.end36
  %49 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %live, align 8, !dbg !7327
  call void @peep2_reinit_state(%struct.bitmap_head_def* %49), !dbg !7329
  store %struct.rtx_def* null, %struct.rtx_def** %attempt, align 8, !dbg !7330
  br label %if.end51, !dbg !7331

if.else:                                          ; preds = %if.end36
  %50 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7332
  %u46 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %50, i32 0, i32 1, !dbg !7332
  %fld47 = bitcast %union.u* %u46 to [1 x %union.rtunion_def]*, !dbg !7332
  %arrayidx48 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld47, i64 0, i64 5, !dbg !7332
  %rt_rtx49 = bitcast %union.rtunion_def* %arrayidx48 to %struct.rtx_def**, !dbg !7332
  %51 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx49, align 8, !dbg !7332
  %52 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7333
  %call50 = call %struct.rtx_def* @peephole2_insns(%struct.rtx_def* %51, %struct.rtx_def* %52, i32* %match_len), !dbg !7334
  store %struct.rtx_def* %call50, %struct.rtx_def** %attempt, align 8, !dbg !7335
  br label %if.end51

if.end51:                                         ; preds = %if.else, %if.then45
  %53 = load %struct.rtx_def*, %struct.rtx_def** %attempt, align 8, !dbg !7336
  %cmp52 = icmp ne %struct.rtx_def* %53, null, !dbg !7338
  br i1 %cmp52, label %if.then53, label %if.end327, !dbg !7339

if.then53:                                        ; preds = %if.end51
  store i32 0, i32* %i, align 4, !dbg !7340
  br label %for.cond54, !dbg !7343

for.cond54:                                       ; preds = %for.inc131, %if.then53
  %54 = load i32, i32* %i, align 4, !dbg !7344
  %55 = load i32, i32* %match_len, align 4, !dbg !7346
  %cmp55 = icmp sle i32 %54, %55, !dbg !7347
  br i1 %cmp55, label %for.body56, label %for.end133, !dbg !7348

for.body56:                                       ; preds = %for.cond54
  call void @llvm.dbg.declare(metadata i32* %j, metadata !7349, metadata !DIExpression()), !dbg !7351
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %old_insn, metadata !7352, metadata !DIExpression()), !dbg !7353
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %new_insn, metadata !7354, metadata !DIExpression()), !dbg !7355
  call void @llvm.dbg.declare(metadata %struct.rtx_def** %note57, metadata !7356, metadata !DIExpression()), !dbg !7357
  %56 = load i32, i32* %i, align 4, !dbg !7358
  %57 = load i32, i32* @peep2_current, align 4, !dbg !7359
  %add = add nsw i32 %56, %57, !dbg !7360
  store i32 %add, i32* %j, align 4, !dbg !7361
  %58 = load i32, i32* %j, align 4, !dbg !7362
  %cmp58 = icmp sge i32 %58, 5, !dbg !7364
  br i1 %cmp58, label %if.then59, label %if.end60, !dbg !7365

if.then59:                                        ; preds = %for.body56
  %59 = load i32, i32* %j, align 4, !dbg !7366
  %sub = sub nsw i32 %59, 5, !dbg !7366
  store i32 %sub, i32* %j, align 4, !dbg !7366
  br label %if.end60, !dbg !7367

if.end60:                                         ; preds = %if.then59, %for.body56
  %60 = load i32, i32* %j, align 4, !dbg !7368
  %idxprom61 = sext i32 %60 to i64, !dbg !7369
  %arrayidx62 = getelementptr inbounds [5 x %struct.peep2_insn_data], [5 x %struct.peep2_insn_data]* @peep2_insn_data, i64 0, i64 %idxprom61, !dbg !7369
  %insn63 = getelementptr inbounds %struct.peep2_insn_data, %struct.peep2_insn_data* %arrayidx62, i32 0, i32 0, !dbg !7370
  %61 = load %struct.rtx_def*, %struct.rtx_def** %insn63, align 16, !dbg !7370
  store %struct.rtx_def* %61, %struct.rtx_def** %old_insn, align 8, !dbg !7371
  %62 = load %struct.rtx_def*, %struct.rtx_def** %old_insn, align 8, !dbg !7372
  %63 = bitcast %struct.rtx_def* %62 to i32*, !dbg !7372
  %bf.load64 = load i32, i32* %63, align 8, !dbg !7372
  %bf.clear65 = and i32 %bf.load64, 65535, !dbg !7372
  %cmp66 = icmp eq i32 %bf.clear65, 10, !dbg !7372
  br i1 %cmp66, label %if.end68, label %if.then67, !dbg !7374

if.then67:                                        ; preds = %if.end60
  br label %for.inc131, !dbg !7375

if.end68:                                         ; preds = %if.end60
  store i8 1, i8* %was_call, align 1, !dbg !7376
  %64 = load %struct.rtx_def*, %struct.rtx_def** %attempt, align 8, !dbg !7377
  store %struct.rtx_def* %64, %struct.rtx_def** %new_insn, align 8, !dbg !7378
  br label %while.cond, !dbg !7379

while.cond:                                       ; preds = %if.end74, %if.end68
  %65 = load %struct.rtx_def*, %struct.rtx_def** %new_insn, align 8, !dbg !7380
  %cmp69 = icmp ne %struct.rtx_def* %65, null, !dbg !7381
  br i1 %cmp69, label %while.body, label %while.end, !dbg !7379

while.body:                                       ; preds = %while.cond
  %66 = load %struct.rtx_def*, %struct.rtx_def** %new_insn, align 8, !dbg !7382
  %67 = bitcast %struct.rtx_def* %66 to i32*, !dbg !7382
  %bf.load70 = load i32, i32* %67, align 8, !dbg !7382
  %bf.clear71 = and i32 %bf.load70, 65535, !dbg !7382
  %cmp72 = icmp eq i32 %bf.clear71, 10, !dbg !7382
  br i1 %cmp72, label %if.then73, label %if.end74, !dbg !7385

if.then73:                                        ; preds = %while.body
  br label %while.end, !dbg !7386

if.end74:                                         ; preds = %while.body
  %68 = load %struct.rtx_def*, %struct.rtx_def** %new_insn, align 8, !dbg !7387
  %u75 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %68, i32 0, i32 1, !dbg !7387
  %fld76 = bitcast %union.u* %u75 to [1 x %union.rtunion_def]*, !dbg !7387
  %arrayidx77 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld76, i64 0, i64 2, !dbg !7387
  %rt_rtx78 = bitcast %union.rtunion_def* %arrayidx77 to %struct.rtx_def**, !dbg !7387
  %69 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx78, align 8, !dbg !7387
  store %struct.rtx_def* %69, %struct.rtx_def** %new_insn, align 8, !dbg !7388
  br label %while.cond, !dbg !7379, !llvm.loop !7389

while.end:                                        ; preds = %if.then73, %while.cond
  %70 = load %struct.rtx_def*, %struct.rtx_def** %new_insn, align 8, !dbg !7391
  %cmp79 = icmp ne %struct.rtx_def* %70, null, !dbg !7391
  br i1 %cmp79, label %cond.false, label %cond.true, !dbg !7391

cond.true:                                        ; preds = %while.end
  call void @fancy_abort(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i32 3194, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !7391
  br label %cond.end, !dbg !7391

cond.false:                                       ; preds = %while.end
  br label %cond.end, !dbg !7391

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !7391
  %71 = load %struct.rtx_def*, %struct.rtx_def** %old_insn, align 8, !dbg !7392
  %u80 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %71, i32 0, i32 1, !dbg !7392
  %fld81 = bitcast %union.u* %u80 to [1 x %union.rtunion_def]*, !dbg !7392
  %arrayidx82 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld81, i64 0, i64 8, !dbg !7392
  %rt_rtx83 = bitcast %union.rtunion_def* %arrayidx82 to %struct.rtx_def**, !dbg !7392
  %72 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx83, align 8, !dbg !7392
  %73 = load %struct.rtx_def*, %struct.rtx_def** %new_insn, align 8, !dbg !7393
  %u84 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %73, i32 0, i32 1, !dbg !7393
  %fld85 = bitcast %union.u* %u84 to [1 x %union.rtunion_def]*, !dbg !7393
  %arrayidx86 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld85, i64 0, i64 8, !dbg !7393
  %rt_rtx87 = bitcast %union.rtunion_def* %arrayidx86 to %struct.rtx_def**, !dbg !7393
  store %struct.rtx_def* %72, %struct.rtx_def** %rt_rtx87, align 8, !dbg !7394
  %74 = load %struct.rtx_def*, %struct.rtx_def** %old_insn, align 8, !dbg !7395
  %u88 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %74, i32 0, i32 1, !dbg !7395
  %fld89 = bitcast %union.u* %u88 to [1 x %union.rtunion_def]*, !dbg !7395
  %arrayidx90 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld89, i64 0, i64 7, !dbg !7395
  %rt_rtx91 = bitcast %union.rtunion_def* %arrayidx90 to %struct.rtx_def**, !dbg !7395
  %75 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx91, align 8, !dbg !7395
  store %struct.rtx_def* %75, %struct.rtx_def** %note57, align 8, !dbg !7397
  br label %for.cond92, !dbg !7398

for.cond92:                                       ; preds = %for.inc105, %cond.end
  %76 = load %struct.rtx_def*, %struct.rtx_def** %note57, align 8, !dbg !7399
  %tobool93 = icmp ne %struct.rtx_def* %76, null, !dbg !7401
  br i1 %tobool93, label %for.body94, label %for.end110, !dbg !7401

for.body94:                                       ; preds = %for.cond92
  %77 = load %struct.rtx_def*, %struct.rtx_def** %note57, align 8, !dbg !7402
  %78 = bitcast %struct.rtx_def* %77 to i32*, !dbg !7402
  %bf.load95 = load i32, i32* %78, align 8, !dbg !7402
  %bf.lshr96 = lshr i32 %bf.load95, 16, !dbg !7402
  %bf.clear97 = and i32 %bf.lshr96, 255, !dbg !7402
  switch i32 %bf.clear97, label %sw.default [
    i32 27, label %sw.bb
    i32 30, label %sw.bb
  ], !dbg !7403

sw.bb:                                            ; preds = %for.body94, %for.body94
  %79 = load %struct.rtx_def*, %struct.rtx_def** %new_insn, align 8, !dbg !7404
  %80 = load %struct.rtx_def*, %struct.rtx_def** %note57, align 8, !dbg !7406
  %81 = bitcast %struct.rtx_def* %80 to i32*, !dbg !7406
  %bf.load98 = load i32, i32* %81, align 8, !dbg !7406
  %bf.lshr99 = lshr i32 %bf.load98, 16, !dbg !7406
  %bf.clear100 = and i32 %bf.lshr99, 255, !dbg !7406
  %82 = load %struct.rtx_def*, %struct.rtx_def** %note57, align 8, !dbg !7407
  %u101 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %82, i32 0, i32 1, !dbg !7407
  %fld102 = bitcast %union.u* %u101 to [1 x %union.rtunion_def]*, !dbg !7407
  %arrayidx103 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld102, i64 0, i64 0, !dbg !7407
  %rt_rtx104 = bitcast %union.rtunion_def* %arrayidx103 to %struct.rtx_def**, !dbg !7407
  %83 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx104, align 8, !dbg !7407
  call void @add_reg_note(%struct.rtx_def* %79, i32 %bf.clear100, %struct.rtx_def* %83), !dbg !7408
  br label %sw.epilog, !dbg !7409

sw.default:                                       ; preds = %for.body94
  br label %sw.epilog, !dbg !7410

sw.epilog:                                        ; preds = %sw.default, %sw.bb
  br label %for.inc105, !dbg !7411

for.inc105:                                       ; preds = %sw.epilog
  %84 = load %struct.rtx_def*, %struct.rtx_def** %note57, align 8, !dbg !7412
  %u106 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %84, i32 0, i32 1, !dbg !7412
  %fld107 = bitcast %union.u* %u106 to [1 x %union.rtunion_def]*, !dbg !7412
  %arrayidx108 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld107, i64 0, i64 1, !dbg !7412
  %rt_rtx109 = bitcast %union.rtunion_def* %arrayidx108 to %struct.rtx_def**, !dbg !7412
  %85 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx109, align 8, !dbg !7412
  store %struct.rtx_def* %85, %struct.rtx_def** %note57, align 8, !dbg !7413
  br label %for.cond92, !dbg !7414, !llvm.loop !7415

for.end110:                                       ; preds = %for.cond92
  br label %while.cond111, !dbg !7417

while.cond111:                                    ; preds = %cond.end128, %for.end110
  %86 = load i32, i32* %i, align 4, !dbg !7418
  %inc112 = add nsw i32 %86, 1, !dbg !7418
  store i32 %inc112, i32* %i, align 4, !dbg !7418
  %87 = load i32, i32* %match_len, align 4, !dbg !7419
  %cmp113 = icmp sle i32 %inc112, %87, !dbg !7420
  br i1 %cmp113, label %while.body114, label %while.end130, !dbg !7417

while.body114:                                    ; preds = %while.cond111
  %88 = load i32, i32* %i, align 4, !dbg !7421
  %89 = load i32, i32* @peep2_current, align 4, !dbg !7423
  %add115 = add nsw i32 %88, %89, !dbg !7424
  store i32 %add115, i32* %j, align 4, !dbg !7425
  %90 = load i32, i32* %j, align 4, !dbg !7426
  %cmp116 = icmp sge i32 %90, 5, !dbg !7428
  br i1 %cmp116, label %if.then117, label %if.end119, !dbg !7429

if.then117:                                       ; preds = %while.body114
  %91 = load i32, i32* %j, align 4, !dbg !7430
  %sub118 = sub nsw i32 %91, 5, !dbg !7430
  store i32 %sub118, i32* %j, align 4, !dbg !7430
  br label %if.end119, !dbg !7431

if.end119:                                        ; preds = %if.then117, %while.body114
  %92 = load i32, i32* %j, align 4, !dbg !7432
  %idxprom120 = sext i32 %92 to i64, !dbg !7433
  %arrayidx121 = getelementptr inbounds [5 x %struct.peep2_insn_data], [5 x %struct.peep2_insn_data]* @peep2_insn_data, i64 0, i64 %idxprom120, !dbg !7433
  %insn122 = getelementptr inbounds %struct.peep2_insn_data, %struct.peep2_insn_data* %arrayidx121, i32 0, i32 0, !dbg !7434
  %93 = load %struct.rtx_def*, %struct.rtx_def** %insn122, align 16, !dbg !7434
  store %struct.rtx_def* %93, %struct.rtx_def** %old_insn, align 8, !dbg !7435
  %94 = load %struct.rtx_def*, %struct.rtx_def** %old_insn, align 8, !dbg !7436
  %95 = bitcast %struct.rtx_def* %94 to i32*, !dbg !7436
  %bf.load123 = load i32, i32* %95, align 8, !dbg !7436
  %bf.clear124 = and i32 %bf.load123, 65535, !dbg !7436
  %cmp125 = icmp eq i32 %bf.clear124, 10, !dbg !7436
  br i1 %cmp125, label %cond.true126, label %cond.false127, !dbg !7436

cond.true126:                                     ; preds = %if.end119
  call void @fancy_abort(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i32 3221, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !7436
  br label %cond.end128, !dbg !7436

cond.false127:                                    ; preds = %if.end119
  br label %cond.end128, !dbg !7436

cond.end128:                                      ; preds = %cond.false127, %cond.true126
  %cond129 = phi i32 [ 0, %cond.true126 ], [ 0, %cond.false127 ], !dbg !7436
  br label %while.cond111, !dbg !7417, !llvm.loop !7437

while.end130:                                     ; preds = %while.cond111
  br label %for.end133, !dbg !7439

for.inc131:                                       ; preds = %if.then67
  %96 = load i32, i32* %i, align 4, !dbg !7440
  %inc132 = add nsw i32 %96, 1, !dbg !7440
  store i32 %inc132, i32* %i, align 4, !dbg !7440
  br label %for.cond54, !dbg !7441, !llvm.loop !7442

for.end133:                                       ; preds = %while.end130, %for.cond54
  %97 = load i32, i32* %match_len, align 4, !dbg !7444
  %98 = load i32, i32* @peep2_current, align 4, !dbg !7445
  %add134 = add nsw i32 %97, %98, !dbg !7446
  store i32 %add134, i32* %i, align 4, !dbg !7447
  %99 = load i32, i32* %i, align 4, !dbg !7448
  %cmp135 = icmp sge i32 %99, 5, !dbg !7450
  br i1 %cmp135, label %if.then136, label %if.end138, !dbg !7451

if.then136:                                       ; preds = %for.end133
  %100 = load i32, i32* %i, align 4, !dbg !7452
  %sub137 = sub nsw i32 %100, 5, !dbg !7452
  store i32 %sub137, i32* %i, align 4, !dbg !7452
  br label %if.end138, !dbg !7453

if.end138:                                        ; preds = %if.then136, %for.end133
  %101 = load i32, i32* %i, align 4, !dbg !7454
  %idxprom139 = sext i32 %101 to i64, !dbg !7455
  %arrayidx140 = getelementptr inbounds [5 x %struct.peep2_insn_data], [5 x %struct.peep2_insn_data]* @peep2_insn_data, i64 0, i64 %idxprom139, !dbg !7455
  %insn141 = getelementptr inbounds %struct.peep2_insn_data, %struct.peep2_insn_data* %arrayidx140, i32 0, i32 0, !dbg !7456
  %102 = load %struct.rtx_def*, %struct.rtx_def** %insn141, align 16, !dbg !7456
  %call142 = call %struct.rtx_def* @find_reg_note(%struct.rtx_def* %102, i32 25, %struct.rtx_def* null), !dbg !7457
  store %struct.rtx_def* %call142, %struct.rtx_def** %note, align 8, !dbg !7458
  %103 = load %struct.rtx_def*, %struct.rtx_def** %attempt, align 8, !dbg !7459
  %104 = load i32, i32* %i, align 4, !dbg !7460
  %idxprom143 = sext i32 %104 to i64, !dbg !7461
  %arrayidx144 = getelementptr inbounds [5 x %struct.peep2_insn_data], [5 x %struct.peep2_insn_data]* @peep2_insn_data, i64 0, i64 %idxprom143, !dbg !7461
  %insn145 = getelementptr inbounds %struct.peep2_insn_data, %struct.peep2_insn_data* %arrayidx144, i32 0, i32 0, !dbg !7462
  %105 = load %struct.rtx_def*, %struct.rtx_def** %insn145, align 16, !dbg !7462
  %106 = load i32, i32* %i, align 4, !dbg !7463
  %idxprom146 = sext i32 %106 to i64, !dbg !7463
  %arrayidx147 = getelementptr inbounds [5 x %struct.peep2_insn_data], [5 x %struct.peep2_insn_data]* @peep2_insn_data, i64 0, i64 %idxprom146, !dbg !7463
  %insn148 = getelementptr inbounds %struct.peep2_insn_data, %struct.peep2_insn_data* %arrayidx147, i32 0, i32 0, !dbg !7463
  %107 = load %struct.rtx_def*, %struct.rtx_def** %insn148, align 16, !dbg !7463
  %u149 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %107, i32 0, i32 1, !dbg !7463
  %fld150 = bitcast %union.u* %u149 to [1 x %union.rtunion_def]*, !dbg !7463
  %arrayidx151 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld150, i64 0, i64 4, !dbg !7463
  %rt_int = bitcast %union.rtunion_def* %arrayidx151 to i32*, !dbg !7463
  %108 = load i32, i32* %rt_int, align 8, !dbg !7463
  %call152 = call %struct.rtx_def* @emit_insn_after_setloc(%struct.rtx_def* %103, %struct.rtx_def* %105, i32 %108), !dbg !7464
  store %struct.rtx_def* %call152, %struct.rtx_def** %attempt, align 8, !dbg !7465
  %109 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7466
  %u153 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %109, i32 0, i32 1, !dbg !7466
  %fld154 = bitcast %union.u* %u153 to [1 x %union.rtunion_def]*, !dbg !7466
  %arrayidx155 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld154, i64 0, i64 1, !dbg !7466
  %rt_rtx156 = bitcast %union.rtunion_def* %arrayidx155 to %struct.rtx_def**, !dbg !7466
  %110 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx156, align 8, !dbg !7466
  store %struct.rtx_def* %110, %struct.rtx_def** %before_try, align 8, !dbg !7467
  %111 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7468
  %112 = load i32, i32* %i, align 4, !dbg !7469
  %idxprom157 = sext i32 %112 to i64, !dbg !7470
  %arrayidx158 = getelementptr inbounds [5 x %struct.peep2_insn_data], [5 x %struct.peep2_insn_data]* @peep2_insn_data, i64 0, i64 %idxprom157, !dbg !7470
  %insn159 = getelementptr inbounds %struct.peep2_insn_data, %struct.peep2_insn_data* %arrayidx158, i32 0, i32 0, !dbg !7471
  %113 = load %struct.rtx_def*, %struct.rtx_def** %insn159, align 16, !dbg !7471
  call void @delete_insn_chain(%struct.rtx_def* %111, %struct.rtx_def* %113, i8 zeroext 0), !dbg !7472
  %114 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8, !dbg !7473
  %tobool160 = icmp ne %struct.rtx_def* %114, null, !dbg !7473
  br i1 %tobool160, label %if.then165, label %lor.lhs.false161, !dbg !7475

lor.lhs.false161:                                 ; preds = %if.end138
  %115 = load i8, i8* %was_call, align 1, !dbg !7476
  %conv = zext i8 %115 to i32, !dbg !7476
  %tobool162 = icmp ne i32 %conv, 0, !dbg !7476
  br i1 %tobool162, label %land.lhs.true163, label %if.end234, !dbg !7477

land.lhs.true163:                                 ; preds = %lor.lhs.false161
  %116 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds (%struct.rtl_data, %struct.rtl_data* @x_rtl, i32 0, i32 10), align 8, !dbg !7478
  %tobool164 = icmp ne %struct.rtx_def* %116, null, !dbg !7478
  br i1 %tobool164, label %if.then165, label %if.end234, !dbg !7479

if.then165:                                       ; preds = %land.lhs.true163, %if.end138
  call void @llvm.dbg.declare(metadata %struct.edge_def** %eh_edge, metadata !7480, metadata !DIExpression()), !dbg !7482
  call void @llvm.dbg.declare(metadata %struct.edge_iterator* %ei, metadata !7483, metadata !DIExpression()), !dbg !7490
  %117 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !7491
  %succs = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %117, i32 0, i32 1, !dbg !7491
  %call166 = call { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %succs), !dbg !7491
  %118 = bitcast %struct.edge_iterator* %tmp to { i32, %struct.VEC_edge_gc** }*, !dbg !7491
  %119 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %118, i32 0, i32 0, !dbg !7491
  %120 = extractvalue { i32, %struct.VEC_edge_gc** } %call166, 0, !dbg !7491
  store i32 %120, i32* %119, align 8, !dbg !7491
  %121 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %118, i32 0, i32 1, !dbg !7491
  %122 = extractvalue { i32, %struct.VEC_edge_gc** } %call166, 1, !dbg !7491
  store %struct.VEC_edge_gc** %122, %struct.VEC_edge_gc*** %121, align 8, !dbg !7491
  %123 = bitcast %struct.edge_iterator* %ei to i8*, !dbg !7491
  %124 = bitcast %struct.edge_iterator* %tmp to i8*, !dbg !7491
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %123, i8* align 8 %124, i64 16, i1 false), !dbg !7491
  br label %for.cond167, !dbg !7491

for.cond167:                                      ; preds = %for.inc174, %if.then165
  %125 = bitcast %struct.edge_iterator* %ei to { i32, %struct.VEC_edge_gc** }*, !dbg !7493
  %126 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %125, i32 0, i32 0, !dbg !7493
  %127 = load i32, i32* %126, align 8, !dbg !7493
  %128 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %125, i32 0, i32 1, !dbg !7493
  %129 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %128, align 8, !dbg !7493
  %call168 = call zeroext i8 @ei_cond(i32 %127, %struct.VEC_edge_gc** %129, %struct.edge_def** %eh_edge), !dbg !7493
  %tobool169 = icmp ne i8 %call168, 0, !dbg !7491
  br i1 %tobool169, label %for.body170, label %for.end175, !dbg !7491

for.body170:                                      ; preds = %for.cond167
  %130 = load %struct.edge_def*, %struct.edge_def** %eh_edge, align 8, !dbg !7495
  %flags = getelementptr inbounds %struct.edge_def, %struct.edge_def* %130, i32 0, i32 7, !dbg !7497
  %131 = load i32, i32* %flags, align 8, !dbg !7497
  %and = and i32 %131, 12, !dbg !7498
  %tobool171 = icmp ne i32 %and, 0, !dbg !7498
  br i1 %tobool171, label %if.then172, label %if.end173, !dbg !7499

if.then172:                                       ; preds = %for.body170
  br label %for.end175, !dbg !7500

if.end173:                                        ; preds = %for.body170
  br label %for.inc174, !dbg !7501

for.inc174:                                       ; preds = %if.end173
  call void @ei_next(%struct.edge_iterator* %ei), !dbg !7493
  br label %for.cond167, !dbg !7493, !llvm.loop !7502

for.end175:                                       ; preds = %if.then172, %for.cond167
  %132 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8, !dbg !7504
  %tobool176 = icmp ne %struct.rtx_def* %132, null, !dbg !7504
  br i1 %tobool176, label %if.then177, label %if.end178, !dbg !7506

if.then177:                                       ; preds = %for.end175
  %133 = load %struct.rtx_def*, %struct.rtx_def** %note, align 8, !dbg !7507
  %134 = load %struct.rtx_def*, %struct.rtx_def** %attempt, align 8, !dbg !7508
  %135 = load %struct.rtx_def*, %struct.rtx_def** %before_try, align 8, !dbg !7509
  call void @copy_reg_eh_region_note_backward(%struct.rtx_def* %133, %struct.rtx_def* %134, %struct.rtx_def* %135), !dbg !7510
  br label %if.end178, !dbg !7510

if.end178:                                        ; preds = %if.then177, %for.end175
  %136 = load %struct.edge_def*, %struct.edge_def** %eh_edge, align 8, !dbg !7511
  %tobool179 = icmp ne %struct.edge_def* %136, null, !dbg !7511
  br i1 %tobool179, label %if.then180, label %if.end228, !dbg !7513

if.then180:                                       ; preds = %if.end178
  %137 = load %struct.rtx_def*, %struct.rtx_def** %attempt, align 8, !dbg !7514
  store %struct.rtx_def* %137, %struct.rtx_def** %x, align 8, !dbg !7516
  br label %for.cond181, !dbg !7517

for.cond181:                                      ; preds = %for.inc222, %if.then180
  %138 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !7518
  %139 = load %struct.rtx_def*, %struct.rtx_def** %before_try, align 8, !dbg !7520
  %cmp182 = icmp ne %struct.rtx_def* %138, %139, !dbg !7521
  br i1 %cmp182, label %for.body184, label %for.end227, !dbg !7522

for.body184:                                      ; preds = %for.cond181
  %140 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !7523
  %141 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !7525
  %il185 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %141, i32 0, i32 7, !dbg !7525
  %rtl186 = bitcast %union.basic_block_il_dependent* %il185 to %struct.rtl_bb_info**, !dbg !7525
  %142 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl186, align 8, !dbg !7525
  %end_187 = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %142, i32 0, i32 1, !dbg !7525
  %143 = load %struct.rtx_def*, %struct.rtx_def** %end_187, align 8, !dbg !7525
  %cmp188 = icmp ne %struct.rtx_def* %140, %143, !dbg !7526
  br i1 %cmp188, label %land.lhs.true190, label %if.end221, !dbg !7527

land.lhs.true190:                                 ; preds = %for.body184
  %144 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !7528
  %call191 = call zeroext i8 @can_throw_internal(%struct.rtx_def* %144), !dbg !7529
  %conv192 = zext i8 %call191 to i32, !dbg !7529
  %tobool193 = icmp ne i32 %conv192, 0, !dbg !7529
  br i1 %tobool193, label %if.then198, label %lor.lhs.false194, !dbg !7530

lor.lhs.false194:                                 ; preds = %land.lhs.true190
  %145 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !7531
  %call195 = call zeroext i8 @can_nonlocal_goto(%struct.rtx_def* %145), !dbg !7532
  %conv196 = zext i8 %call195 to i32, !dbg !7532
  %tobool197 = icmp ne i32 %conv196, 0, !dbg !7532
  br i1 %tobool197, label %if.then198, label %if.end221, !dbg !7533

if.then198:                                       ; preds = %lor.lhs.false194, %land.lhs.true190
  call void @llvm.dbg.declare(metadata %struct.edge_def** %nfte, metadata !7534, metadata !DIExpression()), !dbg !7536
  call void @llvm.dbg.declare(metadata %struct.edge_def** %nehe, metadata !7537, metadata !DIExpression()), !dbg !7538
  call void @llvm.dbg.declare(metadata i32* %flags199, metadata !7539, metadata !DIExpression()), !dbg !7540
  %146 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !7541
  %147 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !7542
  %148 = bitcast %struct.rtx_def* %147 to i8*, !dbg !7542
  %call200 = call %struct.edge_def* @split_block(%struct.basic_block_def* %146, i8* %148), !dbg !7543
  store %struct.edge_def* %call200, %struct.edge_def** %nfte, align 8, !dbg !7544
  %149 = load %struct.edge_def*, %struct.edge_def** %eh_edge, align 8, !dbg !7545
  %flags201 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %149, i32 0, i32 7, !dbg !7546
  %150 = load i32, i32* %flags201, align 8, !dbg !7546
  %and202 = and i32 %150, 10, !dbg !7547
  store i32 %and202, i32* %flags199, align 4, !dbg !7548
  %151 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !7549
  %152 = bitcast %struct.rtx_def* %151 to i32*, !dbg !7549
  %bf.load203 = load i32, i32* %152, align 8, !dbg !7549
  %bf.clear204 = and i32 %bf.load203, 65535, !dbg !7549
  %cmp205 = icmp eq i32 %bf.clear204, 10, !dbg !7549
  br i1 %cmp205, label %if.then207, label %if.end208, !dbg !7551

if.then207:                                       ; preds = %if.then198
  %153 = load i32, i32* %flags199, align 4, !dbg !7552
  %or = or i32 %153, 4, !dbg !7552
  store i32 %or, i32* %flags199, align 4, !dbg !7552
  br label %if.end208, !dbg !7553

if.end208:                                        ; preds = %if.then207, %if.then198
  %154 = load %struct.edge_def*, %struct.edge_def** %nfte, align 8, !dbg !7554
  %src = getelementptr inbounds %struct.edge_def, %struct.edge_def* %154, i32 0, i32 0, !dbg !7555
  %155 = load %struct.basic_block_def*, %struct.basic_block_def** %src, align 8, !dbg !7555
  %156 = load %struct.edge_def*, %struct.edge_def** %eh_edge, align 8, !dbg !7556
  %dest = getelementptr inbounds %struct.edge_def, %struct.edge_def* %156, i32 0, i32 1, !dbg !7557
  %157 = load %struct.basic_block_def*, %struct.basic_block_def** %dest, align 8, !dbg !7557
  %158 = load i32, i32* %flags199, align 4, !dbg !7558
  %call209 = call %struct.edge_def* @make_edge(%struct.basic_block_def* %155, %struct.basic_block_def* %157, i32 %158), !dbg !7559
  store %struct.edge_def* %call209, %struct.edge_def** %nehe, align 8, !dbg !7560
  %159 = load %struct.edge_def*, %struct.edge_def** %eh_edge, align 8, !dbg !7561
  %probability = getelementptr inbounds %struct.edge_def, %struct.edge_def* %159, i32 0, i32 8, !dbg !7562
  %160 = load i32, i32* %probability, align 4, !dbg !7562
  %161 = load %struct.edge_def*, %struct.edge_def** %nehe, align 8, !dbg !7563
  %probability210 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %161, i32 0, i32 8, !dbg !7564
  store i32 %160, i32* %probability210, align 4, !dbg !7565
  %162 = load %struct.edge_def*, %struct.edge_def** %nehe, align 8, !dbg !7566
  %probability211 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %162, i32 0, i32 8, !dbg !7567
  %163 = load i32, i32* %probability211, align 4, !dbg !7567
  %sub212 = sub nsw i32 10000, %163, !dbg !7568
  %164 = load %struct.edge_def*, %struct.edge_def** %nfte, align 8, !dbg !7569
  %probability213 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %164, i32 0, i32 8, !dbg !7570
  store i32 %sub212, i32* %probability213, align 4, !dbg !7571
  %165 = load %struct.edge_def*, %struct.edge_def** %nfte, align 8, !dbg !7572
  %dest214 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %165, i32 0, i32 1, !dbg !7573
  %166 = load %struct.basic_block_def*, %struct.basic_block_def** %dest214, align 8, !dbg !7573
  %call215 = call zeroext i8 @purge_dead_edges(%struct.basic_block_def* %166), !dbg !7574
  %conv216 = zext i8 %call215 to i32, !dbg !7574
  %167 = load i8, i8* %do_cleanup_cfg, align 1, !dbg !7575
  %conv217 = zext i8 %167 to i32, !dbg !7575
  %or218 = or i32 %conv217, %conv216, !dbg !7575
  %conv219 = trunc i32 %or218 to i8, !dbg !7575
  store i8 %conv219, i8* %do_cleanup_cfg, align 1, !dbg !7575
  %168 = load %struct.edge_def*, %struct.edge_def** %nfte, align 8, !dbg !7576
  %src220 = getelementptr inbounds %struct.edge_def, %struct.edge_def* %168, i32 0, i32 0, !dbg !7577
  %169 = load %struct.basic_block_def*, %struct.basic_block_def** %src220, align 8, !dbg !7577
  store %struct.basic_block_def* %169, %struct.basic_block_def** %bb, align 8, !dbg !7578
  %170 = load %struct.edge_def*, %struct.edge_def** %nehe, align 8, !dbg !7579
  store %struct.edge_def* %170, %struct.edge_def** %eh_edge, align 8, !dbg !7580
  br label %if.end221, !dbg !7581

if.end221:                                        ; preds = %if.end208, %lor.lhs.false194, %for.body184
  br label %for.inc222, !dbg !7582

for.inc222:                                       ; preds = %if.end221
  %171 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !7583
  %u223 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %171, i32 0, i32 1, !dbg !7583
  %fld224 = bitcast %union.u* %u223 to [1 x %union.rtunion_def]*, !dbg !7583
  %arrayidx225 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld224, i64 0, i64 1, !dbg !7583
  %rt_rtx226 = bitcast %union.rtunion_def* %arrayidx225 to %struct.rtx_def**, !dbg !7583
  %172 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx226, align 8, !dbg !7583
  store %struct.rtx_def* %172, %struct.rtx_def** %x, align 8, !dbg !7584
  br label %for.cond181, !dbg !7585, !llvm.loop !7586

for.end227:                                       ; preds = %for.cond181
  br label %if.end228, !dbg !7587

if.end228:                                        ; preds = %for.end227, %if.end178
  %173 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !7588
  %call229 = call zeroext i8 @purge_dead_edges(%struct.basic_block_def* %173), !dbg !7589
  %conv230 = zext i8 %call229 to i32, !dbg !7589
  %174 = load i8, i8* %do_cleanup_cfg, align 1, !dbg !7590
  %conv231 = zext i8 %174 to i32, !dbg !7590
  %or232 = or i32 %conv231, %conv230, !dbg !7590
  %conv233 = trunc i32 %or232 to i8, !dbg !7590
  store i8 %conv233, i8* %do_cleanup_cfg, align 1, !dbg !7590
  br label %if.end234, !dbg !7591

if.end234:                                        ; preds = %if.end228, %land.lhs.true163, %lor.lhs.false161
  %175 = load i8 ()*, i8 ()** getelementptr inbounds (%struct.gcc_target, %struct.gcc_target* @targetm, i32 0, i32 35), align 8, !dbg !7592
  %call235 = call zeroext i8 %175(), !dbg !7594
  %tobool236 = icmp ne i8 %call235, 0, !dbg !7594
  br i1 %tobool236, label %if.then237, label %if.else251, !dbg !7595

if.then237:                                       ; preds = %if.end234
  store i32 0, i32* %i, align 4, !dbg !7596
  br label %for.cond238, !dbg !7599

for.cond238:                                      ; preds = %for.inc245, %if.then237
  %176 = load i32, i32* %i, align 4, !dbg !7600
  %cmp239 = icmp slt i32 %176, 5, !dbg !7602
  br i1 %cmp239, label %for.body241, label %for.end247, !dbg !7603

for.body241:                                      ; preds = %for.cond238
  %177 = load i32, i32* %i, align 4, !dbg !7604
  %idxprom242 = sext i32 %177 to i64, !dbg !7605
  %arrayidx243 = getelementptr inbounds [5 x %struct.peep2_insn_data], [5 x %struct.peep2_insn_data]* @peep2_insn_data, i64 0, i64 %idxprom242, !dbg !7605
  %insn244 = getelementptr inbounds %struct.peep2_insn_data, %struct.peep2_insn_data* %arrayidx243, i32 0, i32 0, !dbg !7606
  store %struct.rtx_def* null, %struct.rtx_def** %insn244, align 16, !dbg !7607
  br label %for.inc245, !dbg !7605

for.inc245:                                       ; preds = %for.body241
  %178 = load i32, i32* %i, align 4, !dbg !7608
  %inc246 = add nsw i32 %178, 1, !dbg !7608
  store i32 %inc246, i32* %i, align 4, !dbg !7608
  br label %for.cond238, !dbg !7609, !llvm.loop !7610

for.end247:                                       ; preds = %for.cond238
  %179 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 16, !dbg !7612
  %180 = load i32, i32* @peep2_current, align 4, !dbg !7613
  %idxprom248 = sext i32 %180 to i64, !dbg !7614
  %arrayidx249 = getelementptr inbounds [5 x %struct.peep2_insn_data], [5 x %struct.peep2_insn_data]* @peep2_insn_data, i64 0, i64 %idxprom248, !dbg !7614
  %insn250 = getelementptr inbounds %struct.peep2_insn_data, %struct.peep2_insn_data* %arrayidx249, i32 0, i32 0, !dbg !7615
  store %struct.rtx_def* %179, %struct.rtx_def** %insn250, align 16, !dbg !7616
  store i32 0, i32* @peep2_current_count, align 4, !dbg !7617
  br label %if.end310, !dbg !7618

if.else251:                                       ; preds = %if.end234
  %181 = load i32, i32* %i, align 4, !dbg !7619
  %inc252 = add nsw i32 %181, 1, !dbg !7619
  store i32 %inc252, i32* %i, align 4, !dbg !7619
  %cmp253 = icmp sge i32 %inc252, 5, !dbg !7622
  br i1 %cmp253, label %if.then255, label %if.end256, !dbg !7623

if.then255:                                       ; preds = %if.else251
  store i32 0, i32* %i, align 4, !dbg !7624
  br label %if.end256, !dbg !7625

if.end256:                                        ; preds = %if.then255, %if.else251
  %182 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %live, align 8, !dbg !7626
  %183 = load i32, i32* %i, align 4, !dbg !7627
  %idxprom257 = sext i32 %183 to i64, !dbg !7628
  %arrayidx258 = getelementptr inbounds [5 x %struct.peep2_insn_data], [5 x %struct.peep2_insn_data]* @peep2_insn_data, i64 0, i64 %idxprom257, !dbg !7628
  %live_before259 = getelementptr inbounds %struct.peep2_insn_data, %struct.peep2_insn_data* %arrayidx258, i32 0, i32 1, !dbg !7629
  %184 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %live_before259, align 8, !dbg !7629
  call void @bitmap_copy(%struct.bitmap_head_def* %182, %struct.bitmap_head_def* %184), !dbg !7630
  %185 = load %struct.rtx_def*, %struct.rtx_def** %attempt, align 8, !dbg !7631
  store %struct.rtx_def* %185, %struct.rtx_def** %x, align 8, !dbg !7632
  br label %do.body, !dbg !7633

do.body:                                          ; preds = %do.cond, %if.end256
  %186 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !7634
  %187 = bitcast %struct.rtx_def* %186 to i32*, !dbg !7634
  %bf.load260 = load i32, i32* %187, align 8, !dbg !7634
  %bf.clear261 = and i32 %bf.load260, 65535, !dbg !7634
  %cmp262 = icmp eq i32 %bf.clear261, 8, !dbg !7634
  br i1 %cmp262, label %if.then279, label %lor.lhs.false264, !dbg !7634

lor.lhs.false264:                                 ; preds = %do.body
  %188 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !7634
  %189 = bitcast %struct.rtx_def* %188 to i32*, !dbg !7634
  %bf.load265 = load i32, i32* %189, align 8, !dbg !7634
  %bf.clear266 = and i32 %bf.load265, 65535, !dbg !7634
  %cmp267 = icmp eq i32 %bf.clear266, 7, !dbg !7634
  br i1 %cmp267, label %if.then279, label %lor.lhs.false269, !dbg !7634

lor.lhs.false269:                                 ; preds = %lor.lhs.false264
  %190 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !7634
  %191 = bitcast %struct.rtx_def* %190 to i32*, !dbg !7634
  %bf.load270 = load i32, i32* %191, align 8, !dbg !7634
  %bf.clear271 = and i32 %bf.load270, 65535, !dbg !7634
  %cmp272 = icmp eq i32 %bf.clear271, 9, !dbg !7634
  br i1 %cmp272, label %if.then279, label %lor.lhs.false274, !dbg !7634

lor.lhs.false274:                                 ; preds = %lor.lhs.false269
  %192 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !7634
  %193 = bitcast %struct.rtx_def* %192 to i32*, !dbg !7634
  %bf.load275 = load i32, i32* %193, align 8, !dbg !7634
  %bf.clear276 = and i32 %bf.load275, 65535, !dbg !7634
  %cmp277 = icmp eq i32 %bf.clear276, 10, !dbg !7634
  br i1 %cmp277, label %if.then279, label %if.end303, !dbg !7637

if.then279:                                       ; preds = %lor.lhs.false274, %lor.lhs.false269, %lor.lhs.false264, %do.body
  %194 = load i32, i32* %i, align 4, !dbg !7638
  %dec280 = add nsw i32 %194, -1, !dbg !7638
  store i32 %dec280, i32* %i, align 4, !dbg !7638
  %cmp281 = icmp slt i32 %dec280, 0, !dbg !7641
  br i1 %cmp281, label %if.then283, label %if.end284, !dbg !7642

if.then283:                                       ; preds = %if.then279
  store i32 4, i32* %i, align 4, !dbg !7643
  br label %if.end284, !dbg !7644

if.end284:                                        ; preds = %if.then283, %if.then279
  %195 = load i32, i32* @peep2_current_count, align 4, !dbg !7645
  %cmp285 = icmp slt i32 %195, 4, !dbg !7647
  br i1 %cmp285, label %land.lhs.true287, label %if.end295, !dbg !7648

land.lhs.true287:                                 ; preds = %if.end284
  %196 = load i32, i32* %i, align 4, !dbg !7649
  %idxprom288 = sext i32 %196 to i64, !dbg !7650
  %arrayidx289 = getelementptr inbounds [5 x %struct.peep2_insn_data], [5 x %struct.peep2_insn_data]* @peep2_insn_data, i64 0, i64 %idxprom288, !dbg !7650
  %insn290 = getelementptr inbounds %struct.peep2_insn_data, %struct.peep2_insn_data* %arrayidx289, i32 0, i32 0, !dbg !7651
  %197 = load %struct.rtx_def*, %struct.rtx_def** %insn290, align 16, !dbg !7651
  %cmp291 = icmp eq %struct.rtx_def* %197, null, !dbg !7652
  br i1 %cmp291, label %if.then293, label %if.end295, !dbg !7653

if.then293:                                       ; preds = %land.lhs.true287
  %198 = load i32, i32* @peep2_current_count, align 4, !dbg !7654
  %inc294 = add nsw i32 %198, 1, !dbg !7654
  store i32 %inc294, i32* @peep2_current_count, align 4, !dbg !7654
  br label %if.end295, !dbg !7655

if.end295:                                        ; preds = %if.then293, %land.lhs.true287, %if.end284
  %199 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !7656
  %200 = load i32, i32* %i, align 4, !dbg !7657
  %idxprom296 = sext i32 %200 to i64, !dbg !7658
  %arrayidx297 = getelementptr inbounds [5 x %struct.peep2_insn_data], [5 x %struct.peep2_insn_data]* @peep2_insn_data, i64 0, i64 %idxprom296, !dbg !7658
  %insn298 = getelementptr inbounds %struct.peep2_insn_data, %struct.peep2_insn_data* %arrayidx297, i32 0, i32 0, !dbg !7659
  store %struct.rtx_def* %199, %struct.rtx_def** %insn298, align 16, !dbg !7660
  %201 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !7661
  %call299 = call zeroext i8 @df_insn_rescan(%struct.rtx_def* %201), !dbg !7662
  %202 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !7663
  %203 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !7664
  %204 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %live, align 8, !dbg !7665
  call void @df_simulate_one_insn_backwards(%struct.basic_block_def* %202, %struct.rtx_def* %203, %struct.bitmap_head_def* %204), !dbg !7666
  %205 = load i32, i32* %i, align 4, !dbg !7667
  %idxprom300 = sext i32 %205 to i64, !dbg !7668
  %arrayidx301 = getelementptr inbounds [5 x %struct.peep2_insn_data], [5 x %struct.peep2_insn_data]* @peep2_insn_data, i64 0, i64 %idxprom300, !dbg !7668
  %live_before302 = getelementptr inbounds %struct.peep2_insn_data, %struct.peep2_insn_data* %arrayidx301, i32 0, i32 1, !dbg !7669
  %206 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %live_before302, align 8, !dbg !7669
  %207 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %live, align 8, !dbg !7670
  call void @bitmap_copy(%struct.bitmap_head_def* %206, %struct.bitmap_head_def* %207), !dbg !7671
  br label %if.end303, !dbg !7672

if.end303:                                        ; preds = %if.end295, %lor.lhs.false274
  %208 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !7673
  %u304 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %208, i32 0, i32 1, !dbg !7673
  %fld305 = bitcast %union.u* %u304 to [1 x %union.rtunion_def]*, !dbg !7673
  %arrayidx306 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld305, i64 0, i64 1, !dbg !7673
  %rt_rtx307 = bitcast %union.rtunion_def* %arrayidx306 to %struct.rtx_def**, !dbg !7673
  %209 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx307, align 8, !dbg !7673
  store %struct.rtx_def* %209, %struct.rtx_def** %x, align 8, !dbg !7674
  br label %do.cond, !dbg !7675

do.cond:                                          ; preds = %if.end303
  %210 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !7676
  %211 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8, !dbg !7677
  %cmp308 = icmp ne %struct.rtx_def* %210, %211, !dbg !7678
  br i1 %cmp308, label %do.body, label %do.end, !dbg !7675, !llvm.loop !7679

do.end:                                           ; preds = %do.cond
  %212 = load i32, i32* %i, align 4, !dbg !7681
  store i32 %212, i32* @peep2_current, align 4, !dbg !7682
  br label %if.end310

if.end310:                                        ; preds = %do.end, %for.end247
  %213 = load %struct.rtx_def*, %struct.rtx_def** %attempt, align 8, !dbg !7683
  store %struct.rtx_def* %213, %struct.rtx_def** %x, align 8, !dbg !7685
  br label %for.cond311, !dbg !7686

for.cond311:                                      ; preds = %for.inc321, %if.end310
  %214 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !7687
  %215 = load %struct.rtx_def*, %struct.rtx_def** %before_try, align 8, !dbg !7689
  %cmp312 = icmp ne %struct.rtx_def* %214, %215, !dbg !7690
  br i1 %cmp312, label %for.body314, label %for.end326, !dbg !7691

for.body314:                                      ; preds = %for.cond311
  %216 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !7692
  %217 = bitcast %struct.rtx_def* %216 to i32*, !dbg !7692
  %bf.load315 = load i32, i32* %217, align 8, !dbg !7692
  %bf.clear316 = and i32 %bf.load315, 65535, !dbg !7692
  %cmp317 = icmp eq i32 %bf.clear316, 9, !dbg !7692
  br i1 %cmp317, label %if.then319, label %if.end320, !dbg !7694

if.then319:                                       ; preds = %for.body314
  store i8 1, i8* %do_rebuild_jump_labels, align 1, !dbg !7695
  br label %for.end326, !dbg !7697

if.end320:                                        ; preds = %for.body314
  br label %for.inc321, !dbg !7692

for.inc321:                                       ; preds = %if.end320
  %218 = load %struct.rtx_def*, %struct.rtx_def** %x, align 8, !dbg !7698
  %u322 = getelementptr inbounds %struct.rtx_def, %struct.rtx_def* %218, i32 0, i32 1, !dbg !7698
  %fld323 = bitcast %union.u* %u322 to [1 x %union.rtunion_def]*, !dbg !7698
  %arrayidx324 = getelementptr inbounds [1 x %union.rtunion_def], [1 x %union.rtunion_def]* %fld323, i64 0, i64 1, !dbg !7698
  %rt_rtx325 = bitcast %union.rtunion_def* %arrayidx324 to %struct.rtx_def**, !dbg !7698
  %219 = load %struct.rtx_def*, %struct.rtx_def** %rt_rtx325, align 8, !dbg !7698
  store %struct.rtx_def* %219, %struct.rtx_def** %x, align 8, !dbg !7699
  br label %for.cond311, !dbg !7700, !llvm.loop !7701

for.end326:                                       ; preds = %if.then319, %for.cond311
  br label %if.end327, !dbg !7703

if.end327:                                        ; preds = %for.end326, %if.end51
  br label %if.end328, !dbg !7704

if.end328:                                        ; preds = %if.end327, %land.lhs.true, %lor.lhs.false19
  %220 = load %struct.rtx_def*, %struct.rtx_def** %insn, align 8, !dbg !7705
  %221 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !7707
  %il329 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %221, i32 0, i32 7, !dbg !7707
  %rtl330 = bitcast %union.basic_block_il_dependent* %il329 to %struct.rtl_bb_info**, !dbg !7707
  %222 = load %struct.rtl_bb_info*, %struct.rtl_bb_info** %rtl330, align 8, !dbg !7707
  %head_ = getelementptr inbounds %struct.rtl_bb_info, %struct.rtl_bb_info* %222, i32 0, i32 0, !dbg !7707
  %223 = load %struct.rtx_def*, %struct.rtx_def** %head_, align 8, !dbg !7707
  %cmp331 = icmp eq %struct.rtx_def* %220, %223, !dbg !7708
  br i1 %cmp331, label %if.then333, label %if.end334, !dbg !7709

if.then333:                                       ; preds = %if.end328
  br label %for.end336, !dbg !7710

if.end334:                                        ; preds = %if.end328
  br label %for.inc335, !dbg !7711

for.inc335:                                       ; preds = %if.end334
  %224 = load %struct.rtx_def*, %struct.rtx_def** %prev, align 8, !dbg !7712
  store %struct.rtx_def* %224, %struct.rtx_def** %insn, align 8, !dbg !7713
  br label %for.cond9, !dbg !7714, !llvm.loop !7715

for.end336:                                       ; preds = %if.then333
  br label %for.inc337, !dbg !7718

for.inc337:                                       ; preds = %for.end336
  %225 = load %struct.basic_block_def*, %struct.basic_block_def** %bb, align 8, !dbg !7260
  %prev_bb338 = getelementptr inbounds %struct.basic_block_def, %struct.basic_block_def* %225, i32 0, i32 5, !dbg !7260
  %226 = load %struct.basic_block_def*, %struct.basic_block_def** %prev_bb338, align 8, !dbg !7260
  store %struct.basic_block_def* %226, %struct.basic_block_def** %bb, align 8, !dbg !7260
  br label %for.cond3, !dbg !7260, !llvm.loop !7719

for.end339:                                       ; preds = %for.cond3
  call void @default_rtl_profile(), !dbg !7721
  store i32 0, i32* %i, align 4, !dbg !7722
  br label %for.cond340, !dbg !7724

for.cond340:                                      ; preds = %for.inc350, %for.end339
  %227 = load i32, i32* %i, align 4, !dbg !7725
  %cmp341 = icmp slt i32 %227, 5, !dbg !7727
  br i1 %cmp341, label %for.body343, label %for.end352, !dbg !7728

for.body343:                                      ; preds = %for.cond340
  %228 = load i32, i32* %i, align 4, !dbg !7729
  %idxprom344 = sext i32 %228 to i64, !dbg !7729
  %arrayidx345 = getelementptr inbounds [5 x %struct.peep2_insn_data], [5 x %struct.peep2_insn_data]* @peep2_insn_data, i64 0, i64 %idxprom344, !dbg !7729
  %live_before346 = getelementptr inbounds %struct.peep2_insn_data, %struct.peep2_insn_data* %arrayidx345, i32 0, i32 1, !dbg !7729
  %229 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %live_before346, align 8, !dbg !7729
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %229), !dbg !7729
  %230 = load i32, i32* %i, align 4, !dbg !7729
  %idxprom347 = sext i32 %230 to i64, !dbg !7729
  %arrayidx348 = getelementptr inbounds [5 x %struct.peep2_insn_data], [5 x %struct.peep2_insn_data]* @peep2_insn_data, i64 0, i64 %idxprom347, !dbg !7729
  %live_before349 = getelementptr inbounds %struct.peep2_insn_data, %struct.peep2_insn_data* %arrayidx348, i32 0, i32 1, !dbg !7729
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %live_before349, align 8, !dbg !7729
  br label %for.inc350, !dbg !7729

for.inc350:                                       ; preds = %for.body343
  %231 = load i32, i32* %i, align 4, !dbg !7730
  %inc351 = add nsw i32 %231, 1, !dbg !7730
  store i32 %inc351, i32* %i, align 4, !dbg !7730
  br label %for.cond340, !dbg !7731, !llvm.loop !7732

for.end352:                                       ; preds = %for.cond340
  %232 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %live, align 8, !dbg !7734
  call void @bitmap_obstack_free(%struct.bitmap_head_def* %232), !dbg !7734
  store %struct.bitmap_head_def* null, %struct.bitmap_head_def** %live, align 8, !dbg !7734
  %233 = load i8, i8* %do_rebuild_jump_labels, align 1, !dbg !7735
  %tobool353 = icmp ne i8 %233, 0, !dbg !7735
  br i1 %tobool353, label %if.then354, label %if.end356, !dbg !7737

if.then354:                                       ; preds = %for.end352
  %call355 = call %struct.rtx_def* @get_insns(), !dbg !7738
  call void @rebuild_jump_labels(%struct.rtx_def* %call355), !dbg !7739
  br label %if.end356, !dbg !7739

if.end356:                                        ; preds = %if.then354, %for.end352
  ret void, !dbg !7740
}

declare dso_local i32 @df_set_flags(i32) #2

declare dso_local void @df_analyze() #2

declare dso_local %struct.bitmap_head_def* @bitmap_obstack_alloc_stat(%struct.bitmap_obstack*) #2

declare dso_local void @bitmap_copy(%struct.bitmap_head_def*, %struct.bitmap_head_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct.df_lr_bb_info* @df_lr_get_bb_info(i32 %index) #0 !dbg !7741 {
entry:
  %retval = alloca %struct.df_lr_bb_info*, align 8
  %index.addr = alloca i32, align 4
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !7744, metadata !DIExpression()), !dbg !7745
  %0 = load i32, i32* %index.addr, align 4, !dbg !7746
  %1 = load %struct.df*, %struct.df** @df, align 8, !dbg !7748
  %problems_by_index = getelementptr inbounds %struct.df, %struct.df* %1, i32 0, i32 1, !dbg !7748
  %arrayidx = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index, i64 0, i64 1, !dbg !7748
  %2 = load %struct.dataflow*, %struct.dataflow** %arrayidx, align 8, !dbg !7748
  %block_info_size = getelementptr inbounds %struct.dataflow, %struct.dataflow* %2, i32 0, i32 2, !dbg !7749
  %3 = load i32, i32* %block_info_size, align 8, !dbg !7749
  %cmp = icmp ult i32 %0, %3, !dbg !7750
  br i1 %cmp, label %if.then, label %if.else, !dbg !7751

if.then:                                          ; preds = %entry
  %4 = load %struct.df*, %struct.df** @df, align 8, !dbg !7752
  %problems_by_index1 = getelementptr inbounds %struct.df, %struct.df* %4, i32 0, i32 1, !dbg !7752
  %arrayidx2 = getelementptr inbounds [8 x %struct.dataflow*], [8 x %struct.dataflow*]* %problems_by_index1, i64 0, i64 1, !dbg !7752
  %5 = load %struct.dataflow*, %struct.dataflow** %arrayidx2, align 8, !dbg !7752
  %block_info = getelementptr inbounds %struct.dataflow, %struct.dataflow* %5, i32 0, i32 1, !dbg !7753
  %6 = load i8**, i8*** %block_info, align 8, !dbg !7753
  %7 = load i32, i32* %index.addr, align 4, !dbg !7754
  %idxprom = zext i32 %7 to i64, !dbg !7752
  %arrayidx3 = getelementptr inbounds i8*, i8** %6, i64 %idxprom, !dbg !7752
  %8 = load i8*, i8** %arrayidx3, align 8, !dbg !7752
  %9 = bitcast i8* %8 to %struct.df_lr_bb_info*, !dbg !7755
  store %struct.df_lr_bb_info* %9, %struct.df_lr_bb_info** %retval, align 8, !dbg !7756
  br label %return, !dbg !7756

if.else:                                          ; preds = %entry
  store %struct.df_lr_bb_info* null, %struct.df_lr_bb_info** %retval, align 8, !dbg !7757
  br label %return, !dbg !7757

return:                                           ; preds = %if.else, %if.then
  %10 = load %struct.df_lr_bb_info*, %struct.df_lr_bb_info** %retval, align 8, !dbg !7758
  ret %struct.df_lr_bb_info* %10, !dbg !7758
}

declare dso_local void @df_simulate_initialize_backwards(%struct.basic_block_def*, %struct.bitmap_head_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @peep2_reinit_state(%struct.bitmap_head_def* %live) #0 !dbg !7759 {
entry:
  %live.addr = alloca %struct.bitmap_head_def*, align 8
  %i = alloca i32, align 4
  store %struct.bitmap_head_def* %live, %struct.bitmap_head_def** %live.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bitmap_head_def** %live.addr, metadata !7762, metadata !DIExpression()), !dbg !7763
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7764, metadata !DIExpression()), !dbg !7765
  store i32 0, i32* %i, align 4, !dbg !7766
  br label %for.cond, !dbg !7768

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i32, i32* %i, align 4, !dbg !7769
  %cmp = icmp slt i32 %0, 4, !dbg !7771
  br i1 %cmp, label %for.body, label %for.end, !dbg !7772

for.body:                                         ; preds = %for.cond
  %1 = load i32, i32* %i, align 4, !dbg !7773
  %idxprom = sext i32 %1 to i64, !dbg !7774
  %arrayidx = getelementptr inbounds [5 x %struct.peep2_insn_data], [5 x %struct.peep2_insn_data]* @peep2_insn_data, i64 0, i64 %idxprom, !dbg !7774
  %insn = getelementptr inbounds %struct.peep2_insn_data, %struct.peep2_insn_data* %arrayidx, i32 0, i32 0, !dbg !7775
  store %struct.rtx_def* null, %struct.rtx_def** %insn, align 16, !dbg !7776
  br label %for.inc, !dbg !7774

for.inc:                                          ; preds = %for.body
  %2 = load i32, i32* %i, align 4, !dbg !7777
  %inc = add nsw i32 %2, 1, !dbg !7777
  store i32 %inc, i32* %i, align 4, !dbg !7777
  br label %for.cond, !dbg !7778, !llvm.loop !7779

for.end:                                          ; preds = %for.cond
  store i32 0, i32* @peep2_current_count, align 4, !dbg !7781
  %3 = load %struct.rtx_def*, %struct.rtx_def** getelementptr inbounds ([11 x %struct.rtx_def*], [11 x %struct.rtx_def*]* @global_rtl, i64 0, i64 0), align 16, !dbg !7782
  store %struct.rtx_def* %3, %struct.rtx_def** getelementptr inbounds ([5 x %struct.peep2_insn_data], [5 x %struct.peep2_insn_data]* @peep2_insn_data, i64 0, i64 4, i32 0), align 16, !dbg !7783
  store i32 4, i32* @peep2_current, align 4, !dbg !7784
  %4 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** getelementptr inbounds ([5 x %struct.peep2_insn_data], [5 x %struct.peep2_insn_data]* @peep2_insn_data, i64 0, i64 4, i32 1), align 8, !dbg !7785
  %5 = load %struct.bitmap_head_def*, %struct.bitmap_head_def** %live.addr, align 8, !dbg !7785
  call void @bitmap_copy(%struct.bitmap_head_def* %4, %struct.bitmap_head_def* %5), !dbg !7785
  ret void, !dbg !7786
}

declare dso_local void @df_simulate_one_insn_backwards(%struct.basic_block_def*, %struct.rtx_def*, %struct.bitmap_head_def*) #2

declare dso_local %struct.rtx_def* @peephole2_insns(%struct.rtx_def*, %struct.rtx_def*, i32*) #2

declare dso_local void @add_reg_note(%struct.rtx_def*, i32, %struct.rtx_def*) #2

declare dso_local %struct.rtx_def* @find_reg_note(%struct.rtx_def*, i32, %struct.rtx_def*) #2

declare dso_local %struct.rtx_def* @emit_insn_after_setloc(%struct.rtx_def*, %struct.rtx_def*, i32) #2

declare dso_local void @delete_insn_chain(%struct.rtx_def*, %struct.rtx_def*, i8 zeroext) #2

; Function Attrs: noinline nounwind uwtable
define internal { i32, %struct.VEC_edge_gc** } @ei_start_1(%struct.VEC_edge_gc** %ev) #0 !dbg !7787 {
entry:
  %retval = alloca %struct.edge_iterator, align 8
  %ev.addr = alloca %struct.VEC_edge_gc**, align 8
  store %struct.VEC_edge_gc** %ev, %struct.VEC_edge_gc*** %ev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_edge_gc*** %ev.addr, metadata !7790, metadata !DIExpression()), !dbg !7791
  call void @llvm.dbg.declare(metadata %struct.edge_iterator* %retval, metadata !7792, metadata !DIExpression()), !dbg !7793
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %retval, i32 0, i32 0, !dbg !7794
  store i32 0, i32* %index, align 8, !dbg !7795
  %0 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %ev.addr, align 8, !dbg !7796
  %container = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %retval, i32 0, i32 1, !dbg !7797
  store %struct.VEC_edge_gc** %0, %struct.VEC_edge_gc*** %container, align 8, !dbg !7798
  %1 = bitcast %struct.edge_iterator* %retval to { i32, %struct.VEC_edge_gc** }*, !dbg !7799
  %2 = load { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %1, align 8, !dbg !7799
  ret { i32, %struct.VEC_edge_gc** } %2, !dbg !7799
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @ei_cond(i32 %ei.coerce0, %struct.VEC_edge_gc** %ei.coerce1, %struct.edge_def** %p) #0 !dbg !7800 {
entry:
  %retval = alloca i8, align 1
  %ei = alloca %struct.edge_iterator, align 8
  %p.addr = alloca %struct.edge_def**, align 8
  %0 = bitcast %struct.edge_iterator* %ei to { i32, %struct.VEC_edge_gc** }*
  %1 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %0, i32 0, i32 0
  store i32 %ei.coerce0, i32* %1, align 8
  %2 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %0, i32 0, i32 1
  store %struct.VEC_edge_gc** %ei.coerce1, %struct.VEC_edge_gc*** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.edge_iterator* %ei, metadata !7804, metadata !DIExpression()), !dbg !7805
  store %struct.edge_def** %p, %struct.edge_def*** %p.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edge_def*** %p.addr, metadata !7806, metadata !DIExpression()), !dbg !7807
  %3 = bitcast %struct.edge_iterator* %ei to { i32, %struct.VEC_edge_gc** }*, !dbg !7808
  %4 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %3, i32 0, i32 0, !dbg !7808
  %5 = load i32, i32* %4, align 8, !dbg !7808
  %6 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %3, i32 0, i32 1, !dbg !7808
  %7 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %6, align 8, !dbg !7808
  %call = call zeroext i8 @ei_end_p(i32 %5, %struct.VEC_edge_gc** %7), !dbg !7808
  %tobool = icmp ne i8 %call, 0, !dbg !7808
  br i1 %tobool, label %if.else, label %if.then, !dbg !7810

if.then:                                          ; preds = %entry
  %8 = bitcast %struct.edge_iterator* %ei to { i32, %struct.VEC_edge_gc** }*, !dbg !7811
  %9 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %8, i32 0, i32 0, !dbg !7811
  %10 = load i32, i32* %9, align 8, !dbg !7811
  %11 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %8, i32 0, i32 1, !dbg !7811
  %12 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %11, align 8, !dbg !7811
  %call1 = call %struct.edge_def* @ei_edge(i32 %10, %struct.VEC_edge_gc** %12), !dbg !7811
  %13 = load %struct.edge_def**, %struct.edge_def*** %p.addr, align 8, !dbg !7813
  store %struct.edge_def* %call1, %struct.edge_def** %13, align 8, !dbg !7814
  store i8 1, i8* %retval, align 1, !dbg !7815
  br label %return, !dbg !7815

if.else:                                          ; preds = %entry
  %14 = load %struct.edge_def**, %struct.edge_def*** %p.addr, align 8, !dbg !7816
  store %struct.edge_def* null, %struct.edge_def** %14, align 8, !dbg !7818
  store i8 0, i8* %retval, align 1, !dbg !7819
  br label %return, !dbg !7819

return:                                           ; preds = %if.else, %if.then
  %15 = load i8, i8* %retval, align 1, !dbg !7820
  ret i8 %15, !dbg !7820
}

; Function Attrs: noinline nounwind uwtable
define internal void @ei_next(%struct.edge_iterator* %i) #0 !dbg !7821 {
entry:
  %i.addr = alloca %struct.edge_iterator*, align 8
  store %struct.edge_iterator* %i, %struct.edge_iterator** %i.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.edge_iterator** %i.addr, metadata !7825, metadata !DIExpression()), !dbg !7826
  %0 = load %struct.edge_iterator*, %struct.edge_iterator** %i.addr, align 8, !dbg !7827
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %0, i32 0, i32 0, !dbg !7827
  %1 = load i32, i32* %index, align 8, !dbg !7827
  %2 = load %struct.edge_iterator*, %struct.edge_iterator** %i.addr, align 8, !dbg !7827
  %3 = bitcast %struct.edge_iterator* %2 to { i32, %struct.VEC_edge_gc** }*, !dbg !7827
  %4 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %3, i32 0, i32 0, !dbg !7827
  %5 = load i32, i32* %4, align 8, !dbg !7827
  %6 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %3, i32 0, i32 1, !dbg !7827
  %7 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %6, align 8, !dbg !7827
  %call = call %struct.VEC_edge_gc* @ei_container(i32 %5, %struct.VEC_edge_gc** %7), !dbg !7827
  %tobool = icmp ne %struct.VEC_edge_gc* %call, null, !dbg !7827
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !7827

cond.true:                                        ; preds = %entry
  %8 = load %struct.edge_iterator*, %struct.edge_iterator** %i.addr, align 8, !dbg !7827
  %9 = bitcast %struct.edge_iterator* %8 to { i32, %struct.VEC_edge_gc** }*, !dbg !7827
  %10 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %9, i32 0, i32 0, !dbg !7827
  %11 = load i32, i32* %10, align 8, !dbg !7827
  %12 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %9, i32 0, i32 1, !dbg !7827
  %13 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %12, align 8, !dbg !7827
  %call1 = call %struct.VEC_edge_gc* @ei_container(i32 %11, %struct.VEC_edge_gc** %13), !dbg !7827
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i32 0, i32 0, !dbg !7827
  br label %cond.end, !dbg !7827

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !7827

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !7827
  %call2 = call i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond), !dbg !7827
  %cmp = icmp ult i32 %1, %call2, !dbg !7827
  br i1 %cmp, label %cond.false4, label %cond.true3, !dbg !7827

cond.true3:                                       ; preds = %cond.end
  call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.9, i64 0, i64 0), i32 738, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !7827
  br label %cond.end5, !dbg !7827

cond.false4:                                      ; preds = %cond.end
  br label %cond.end5, !dbg !7827

cond.end5:                                        ; preds = %cond.false4, %cond.true3
  %cond6 = phi i32 [ 0, %cond.true3 ], [ 0, %cond.false4 ], !dbg !7827
  %14 = load %struct.edge_iterator*, %struct.edge_iterator** %i.addr, align 8, !dbg !7828
  %index7 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %14, i32 0, i32 0, !dbg !7829
  %15 = load i32, i32* %index7, align 8, !dbg !7830
  %inc = add i32 %15, 1, !dbg !7830
  store i32 %inc, i32* %index7, align 8, !dbg !7830
  ret void, !dbg !7831
}

declare dso_local void @copy_reg_eh_region_note_backward(%struct.rtx_def*, %struct.rtx_def*, %struct.rtx_def*) #2

declare dso_local zeroext i8 @can_throw_internal(%struct.rtx_def*) #2

declare dso_local zeroext i8 @can_nonlocal_goto(%struct.rtx_def*) #2

declare dso_local %struct.edge_def* @split_block(%struct.basic_block_def*, i8*) #2

declare dso_local %struct.edge_def* @make_edge(%struct.basic_block_def*, %struct.basic_block_def*, i32) #2

declare dso_local zeroext i8 @purge_dead_edges(%struct.basic_block_def*) #2

declare dso_local void @bitmap_obstack_free(%struct.bitmap_head_def*) #2

declare dso_local void @rebuild_jump_labels(%struct.rtx_def*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @ei_end_p(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #0 !dbg !7832 {
entry:
  %i = alloca %struct.edge_iterator, align 8
  %0 = bitcast %struct.edge_iterator* %i to { i32, %struct.VEC_edge_gc** }*
  %1 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %0, i32 0, i32 0
  store i32 %i.coerce0, i32* %1, align 8
  %2 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %0, i32 0, i32 1
  store %struct.VEC_edge_gc** %i.coerce1, %struct.VEC_edge_gc*** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.edge_iterator* %i, metadata !7835, metadata !DIExpression()), !dbg !7836
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i32 0, i32 0, !dbg !7837
  %3 = load i32, i32* %index, align 8, !dbg !7837
  %4 = bitcast %struct.edge_iterator* %i to { i32, %struct.VEC_edge_gc** }*, !dbg !7838
  %5 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %4, i32 0, i32 0, !dbg !7838
  %6 = load i32, i32* %5, align 8, !dbg !7838
  %7 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %4, i32 0, i32 1, !dbg !7838
  %8 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %7, align 8, !dbg !7838
  %call = call %struct.VEC_edge_gc* @ei_container(i32 %6, %struct.VEC_edge_gc** %8), !dbg !7838
  %tobool = icmp ne %struct.VEC_edge_gc* %call, null, !dbg !7838
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !7838

cond.true:                                        ; preds = %entry
  %9 = bitcast %struct.edge_iterator* %i to { i32, %struct.VEC_edge_gc** }*, !dbg !7838
  %10 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %9, i32 0, i32 0, !dbg !7838
  %11 = load i32, i32* %10, align 8, !dbg !7838
  %12 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %9, i32 0, i32 1, !dbg !7838
  %13 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %12, align 8, !dbg !7838
  %call1 = call %struct.VEC_edge_gc* @ei_container(i32 %11, %struct.VEC_edge_gc** %13), !dbg !7838
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i32 0, i32 0, !dbg !7838
  br label %cond.end, !dbg !7838

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !7838

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !7838
  %call2 = call i32 @VEC_edge_base_length(%struct.VEC_edge_base* %cond), !dbg !7838
  %cmp = icmp eq i32 %3, %call2, !dbg !7839
  %conv = zext i1 %cmp to i32, !dbg !7839
  %conv3 = trunc i32 %conv to i8, !dbg !7840
  ret i8 %conv3, !dbg !7841
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.edge_def* @ei_edge(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #0 !dbg !7842 {
entry:
  %i = alloca %struct.edge_iterator, align 8
  %0 = bitcast %struct.edge_iterator* %i to { i32, %struct.VEC_edge_gc** }*
  %1 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %0, i32 0, i32 0
  store i32 %i.coerce0, i32* %1, align 8
  %2 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %0, i32 0, i32 1
  store %struct.VEC_edge_gc** %i.coerce1, %struct.VEC_edge_gc*** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.edge_iterator* %i, metadata !7845, metadata !DIExpression()), !dbg !7846
  %3 = bitcast %struct.edge_iterator* %i to { i32, %struct.VEC_edge_gc** }*, !dbg !7847
  %4 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %3, i32 0, i32 0, !dbg !7847
  %5 = load i32, i32* %4, align 8, !dbg !7847
  %6 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %3, i32 0, i32 1, !dbg !7847
  %7 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %6, align 8, !dbg !7847
  %call = call %struct.VEC_edge_gc* @ei_container(i32 %5, %struct.VEC_edge_gc** %7), !dbg !7847
  %tobool = icmp ne %struct.VEC_edge_gc* %call, null, !dbg !7847
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !7847

cond.true:                                        ; preds = %entry
  %8 = bitcast %struct.edge_iterator* %i to { i32, %struct.VEC_edge_gc** }*, !dbg !7847
  %9 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %8, i32 0, i32 0, !dbg !7847
  %10 = load i32, i32* %9, align 8, !dbg !7847
  %11 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %8, i32 0, i32 1, !dbg !7847
  %12 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %11, align 8, !dbg !7847
  %call1 = call %struct.VEC_edge_gc* @ei_container(i32 %10, %struct.VEC_edge_gc** %12), !dbg !7847
  %base = getelementptr inbounds %struct.VEC_edge_gc, %struct.VEC_edge_gc* %call1, i32 0, i32 0, !dbg !7847
  br label %cond.end, !dbg !7847

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !7847

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi %struct.VEC_edge_base* [ %base, %cond.true ], [ null, %cond.false ], !dbg !7847
  %index = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i32 0, i32 0, !dbg !7847
  %13 = load i32, i32* %index, align 8, !dbg !7847
  %call2 = call %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %cond, i32 %13), !dbg !7847
  ret %struct.edge_def* %call2, !dbg !7848
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @VEC_edge_base_length(%struct.VEC_edge_base* %vec_) #0 !dbg !7849 {
entry:
  %vec_.addr = alloca %struct.VEC_edge_base*, align 8
  store %struct.VEC_edge_base* %vec_, %struct.VEC_edge_base** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_edge_base** %vec_.addr, metadata !7854, metadata !DIExpression()), !dbg !7855
  %0 = load %struct.VEC_edge_base*, %struct.VEC_edge_base** %vec_.addr, align 8, !dbg !7855
  %tobool = icmp ne %struct.VEC_edge_base* %0, null, !dbg !7855
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !7855

cond.true:                                        ; preds = %entry
  %1 = load %struct.VEC_edge_base*, %struct.VEC_edge_base** %vec_.addr, align 8, !dbg !7855
  %num = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %1, i32 0, i32 0, !dbg !7855
  %2 = load i32, i32* %num, align 8, !dbg !7855
  br label %cond.end, !dbg !7855

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !7855

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %2, %cond.true ], [ 0, %cond.false ], !dbg !7855
  ret i32 %cond, !dbg !7855
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.VEC_edge_gc* @ei_container(i32 %i.coerce0, %struct.VEC_edge_gc** %i.coerce1) #0 !dbg !7856 {
entry:
  %i = alloca %struct.edge_iterator, align 8
  %0 = bitcast %struct.edge_iterator* %i to { i32, %struct.VEC_edge_gc** }*
  %1 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %0, i32 0, i32 0
  store i32 %i.coerce0, i32* %1, align 8
  %2 = getelementptr inbounds { i32, %struct.VEC_edge_gc** }, { i32, %struct.VEC_edge_gc** }* %0, i32 0, i32 1
  store %struct.VEC_edge_gc** %i.coerce1, %struct.VEC_edge_gc*** %2, align 8
  call void @llvm.dbg.declare(metadata %struct.edge_iterator* %i, metadata !7859, metadata !DIExpression()), !dbg !7860
  %container = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i32 0, i32 1, !dbg !7861
  %3 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %container, align 8, !dbg !7861
  %tobool = icmp ne %struct.VEC_edge_gc** %3, null, !dbg !7861
  br i1 %tobool, label %cond.false, label %cond.true, !dbg !7861

cond.true:                                        ; preds = %entry
  call void @fancy_abort(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.9, i64 0, i64 0), i32 687, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0)), !dbg !7861
  br label %cond.end, !dbg !7861

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !7861

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ 0, %cond.false ], !dbg !7861
  %container1 = getelementptr inbounds %struct.edge_iterator, %struct.edge_iterator* %i, i32 0, i32 1, !dbg !7862
  %4 = load %struct.VEC_edge_gc**, %struct.VEC_edge_gc*** %container1, align 8, !dbg !7862
  %5 = load %struct.VEC_edge_gc*, %struct.VEC_edge_gc** %4, align 8, !dbg !7863
  ret %struct.VEC_edge_gc* %5, !dbg !7864
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.edge_def* @VEC_edge_base_index(%struct.VEC_edge_base* %vec_, i32 %ix_) #0 !dbg !7865 {
entry:
  %vec_.addr = alloca %struct.VEC_edge_base*, align 8
  %ix_.addr = alloca i32, align 4
  store %struct.VEC_edge_base* %vec_, %struct.VEC_edge_base** %vec_.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.VEC_edge_base** %vec_.addr, metadata !7868, metadata !DIExpression()), !dbg !7869
  store i32 %ix_, i32* %ix_.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %ix_.addr, metadata !7870, metadata !DIExpression()), !dbg !7869
  %0 = load %struct.VEC_edge_base*, %struct.VEC_edge_base** %vec_.addr, align 8, !dbg !7869
  %tobool = icmp ne %struct.VEC_edge_base* %0, null, !dbg !7869
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !7869

land.rhs:                                         ; preds = %entry
  %1 = load i32, i32* %ix_.addr, align 4, !dbg !7869
  %2 = load %struct.VEC_edge_base*, %struct.VEC_edge_base** %vec_.addr, align 8, !dbg !7869
  %num = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %2, i32 0, i32 0, !dbg !7869
  %3 = load i32, i32* %num, align 8, !dbg !7869
  %cmp = icmp ult i32 %1, %3, !dbg !7869
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %4 = phi i1 [ false, %entry ], [ %cmp, %land.rhs ], !dbg !7871
  %land.ext = zext i1 %4 to i32, !dbg !7869
  %5 = load %struct.VEC_edge_base*, %struct.VEC_edge_base** %vec_.addr, align 8, !dbg !7869
  %vec = getelementptr inbounds %struct.VEC_edge_base, %struct.VEC_edge_base* %5, i32 0, i32 2, !dbg !7869
  %6 = load i32, i32* %ix_.addr, align 4, !dbg !7869
  %idxprom = zext i32 %6 to i64, !dbg !7869
  %arrayidx = getelementptr inbounds [1 x %struct.edge_def*], [1 x %struct.edge_def*]* %vec, i64 0, i64 %idxprom, !dbg !7869
  %7 = load %struct.edge_def*, %struct.edge_def** %arrayidx, align 8, !dbg !7869
  ret %struct.edge_def* %7, !dbg !7869
}

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind willreturn }

!llvm.dbg.cu = !{!2}
!llvm.module.flags = !{!2125, !2126, !2127}
!llvm.ident = !{!2128}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "volatile_ok", scope: !2, file: !3, line: 84, type: !924, isLocal: false, isDefinition: true)
!2 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !4, retainedTypes: !898, globals: !2006, splitDebugInlining: false, nameTableKind: None)
!3 = !DIFile(filename: "recog.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!4 = !{!5, !134, !140, !145, !150, !169, !176, !183, !377, !520, !535, !572, !606, !628, !658, !672, !693, !699, !706, !882, !888}
!5 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "machine_mode", file: !6, line: 7, baseType: !7, size: 32, elements: !8)
!6 = !DIFile(filename: "./insn-modes.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!7 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!8 = !{!9, !10, !11, !12, !13, !14, !15, !16, !17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50, !51, !52, !53, !54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133}
!9 = !DIEnumerator(name: "VOIDmode", value: 0, isUnsigned: true)
!10 = !DIEnumerator(name: "BLKmode", value: 1, isUnsigned: true)
!11 = !DIEnumerator(name: "CCmode", value: 2, isUnsigned: true)
!12 = !DIEnumerator(name: "CCGCmode", value: 3, isUnsigned: true)
!13 = !DIEnumerator(name: "CCGOCmode", value: 4, isUnsigned: true)
!14 = !DIEnumerator(name: "CCNOmode", value: 5, isUnsigned: true)
!15 = !DIEnumerator(name: "CCAmode", value: 6, isUnsigned: true)
!16 = !DIEnumerator(name: "CCCmode", value: 7, isUnsigned: true)
!17 = !DIEnumerator(name: "CCOmode", value: 8, isUnsigned: true)
!18 = !DIEnumerator(name: "CCSmode", value: 9, isUnsigned: true)
!19 = !DIEnumerator(name: "CCZmode", value: 10, isUnsigned: true)
!20 = !DIEnumerator(name: "CCFPmode", value: 11, isUnsigned: true)
!21 = !DIEnumerator(name: "CCFPUmode", value: 12, isUnsigned: true)
!22 = !DIEnumerator(name: "BImode", value: 13, isUnsigned: true)
!23 = !DIEnumerator(name: "QImode", value: 14, isUnsigned: true)
!24 = !DIEnumerator(name: "HImode", value: 15, isUnsigned: true)
!25 = !DIEnumerator(name: "SImode", value: 16, isUnsigned: true)
!26 = !DIEnumerator(name: "DImode", value: 17, isUnsigned: true)
!27 = !DIEnumerator(name: "TImode", value: 18, isUnsigned: true)
!28 = !DIEnumerator(name: "OImode", value: 19, isUnsigned: true)
!29 = !DIEnumerator(name: "QQmode", value: 20, isUnsigned: true)
!30 = !DIEnumerator(name: "HQmode", value: 21, isUnsigned: true)
!31 = !DIEnumerator(name: "SQmode", value: 22, isUnsigned: true)
!32 = !DIEnumerator(name: "DQmode", value: 23, isUnsigned: true)
!33 = !DIEnumerator(name: "TQmode", value: 24, isUnsigned: true)
!34 = !DIEnumerator(name: "UQQmode", value: 25, isUnsigned: true)
!35 = !DIEnumerator(name: "UHQmode", value: 26, isUnsigned: true)
!36 = !DIEnumerator(name: "USQmode", value: 27, isUnsigned: true)
!37 = !DIEnumerator(name: "UDQmode", value: 28, isUnsigned: true)
!38 = !DIEnumerator(name: "UTQmode", value: 29, isUnsigned: true)
!39 = !DIEnumerator(name: "HAmode", value: 30, isUnsigned: true)
!40 = !DIEnumerator(name: "SAmode", value: 31, isUnsigned: true)
!41 = !DIEnumerator(name: "DAmode", value: 32, isUnsigned: true)
!42 = !DIEnumerator(name: "TAmode", value: 33, isUnsigned: true)
!43 = !DIEnumerator(name: "UHAmode", value: 34, isUnsigned: true)
!44 = !DIEnumerator(name: "USAmode", value: 35, isUnsigned: true)
!45 = !DIEnumerator(name: "UDAmode", value: 36, isUnsigned: true)
!46 = !DIEnumerator(name: "UTAmode", value: 37, isUnsigned: true)
!47 = !DIEnumerator(name: "SFmode", value: 38, isUnsigned: true)
!48 = !DIEnumerator(name: "DFmode", value: 39, isUnsigned: true)
!49 = !DIEnumerator(name: "XFmode", value: 40, isUnsigned: true)
!50 = !DIEnumerator(name: "TFmode", value: 41, isUnsigned: true)
!51 = !DIEnumerator(name: "SDmode", value: 42, isUnsigned: true)
!52 = !DIEnumerator(name: "DDmode", value: 43, isUnsigned: true)
!53 = !DIEnumerator(name: "TDmode", value: 44, isUnsigned: true)
!54 = !DIEnumerator(name: "CQImode", value: 45, isUnsigned: true)
!55 = !DIEnumerator(name: "CHImode", value: 46, isUnsigned: true)
!56 = !DIEnumerator(name: "CSImode", value: 47, isUnsigned: true)
!57 = !DIEnumerator(name: "CDImode", value: 48, isUnsigned: true)
!58 = !DIEnumerator(name: "CTImode", value: 49, isUnsigned: true)
!59 = !DIEnumerator(name: "COImode", value: 50, isUnsigned: true)
!60 = !DIEnumerator(name: "SCmode", value: 51, isUnsigned: true)
!61 = !DIEnumerator(name: "DCmode", value: 52, isUnsigned: true)
!62 = !DIEnumerator(name: "XCmode", value: 53, isUnsigned: true)
!63 = !DIEnumerator(name: "TCmode", value: 54, isUnsigned: true)
!64 = !DIEnumerator(name: "V2QImode", value: 55, isUnsigned: true)
!65 = !DIEnumerator(name: "V4QImode", value: 56, isUnsigned: true)
!66 = !DIEnumerator(name: "V2HImode", value: 57, isUnsigned: true)
!67 = !DIEnumerator(name: "V1SImode", value: 58, isUnsigned: true)
!68 = !DIEnumerator(name: "V8QImode", value: 59, isUnsigned: true)
!69 = !DIEnumerator(name: "V4HImode", value: 60, isUnsigned: true)
!70 = !DIEnumerator(name: "V2SImode", value: 61, isUnsigned: true)
!71 = !DIEnumerator(name: "V1DImode", value: 62, isUnsigned: true)
!72 = !DIEnumerator(name: "V16QImode", value: 63, isUnsigned: true)
!73 = !DIEnumerator(name: "V8HImode", value: 64, isUnsigned: true)
!74 = !DIEnumerator(name: "V4SImode", value: 65, isUnsigned: true)
!75 = !DIEnumerator(name: "V2DImode", value: 66, isUnsigned: true)
!76 = !DIEnumerator(name: "V1TImode", value: 67, isUnsigned: true)
!77 = !DIEnumerator(name: "V32QImode", value: 68, isUnsigned: true)
!78 = !DIEnumerator(name: "V16HImode", value: 69, isUnsigned: true)
!79 = !DIEnumerator(name: "V8SImode", value: 70, isUnsigned: true)
!80 = !DIEnumerator(name: "V4DImode", value: 71, isUnsigned: true)
!81 = !DIEnumerator(name: "V2TImode", value: 72, isUnsigned: true)
!82 = !DIEnumerator(name: "V64QImode", value: 73, isUnsigned: true)
!83 = !DIEnumerator(name: "V32HImode", value: 74, isUnsigned: true)
!84 = !DIEnumerator(name: "V16SImode", value: 75, isUnsigned: true)
!85 = !DIEnumerator(name: "V8DImode", value: 76, isUnsigned: true)
!86 = !DIEnumerator(name: "V4TImode", value: 77, isUnsigned: true)
!87 = !DIEnumerator(name: "V2SFmode", value: 78, isUnsigned: true)
!88 = !DIEnumerator(name: "V4SFmode", value: 79, isUnsigned: true)
!89 = !DIEnumerator(name: "V2DFmode", value: 80, isUnsigned: true)
!90 = !DIEnumerator(name: "V8SFmode", value: 81, isUnsigned: true)
!91 = !DIEnumerator(name: "V4DFmode", value: 82, isUnsigned: true)
!92 = !DIEnumerator(name: "V2TFmode", value: 83, isUnsigned: true)
!93 = !DIEnumerator(name: "V16SFmode", value: 84, isUnsigned: true)
!94 = !DIEnumerator(name: "V8DFmode", value: 85, isUnsigned: true)
!95 = !DIEnumerator(name: "V4TFmode", value: 86, isUnsigned: true)
!96 = !DIEnumerator(name: "MAX_MACHINE_MODE", value: 87, isUnsigned: true)
!97 = !DIEnumerator(name: "MIN_MODE_RANDOM", value: 0, isUnsigned: true)
!98 = !DIEnumerator(name: "MAX_MODE_RANDOM", value: 1, isUnsigned: true)
!99 = !DIEnumerator(name: "MIN_MODE_CC", value: 2, isUnsigned: true)
!100 = !DIEnumerator(name: "MAX_MODE_CC", value: 12, isUnsigned: true)
!101 = !DIEnumerator(name: "MIN_MODE_INT", value: 14, isUnsigned: true)
!102 = !DIEnumerator(name: "MAX_MODE_INT", value: 19, isUnsigned: true)
!103 = !DIEnumerator(name: "MIN_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!104 = !DIEnumerator(name: "MAX_MODE_PARTIAL_INT", value: 0, isUnsigned: true)
!105 = !DIEnumerator(name: "MIN_MODE_FRACT", value: 20, isUnsigned: true)
!106 = !DIEnumerator(name: "MAX_MODE_FRACT", value: 24, isUnsigned: true)
!107 = !DIEnumerator(name: "MIN_MODE_UFRACT", value: 25, isUnsigned: true)
!108 = !DIEnumerator(name: "MAX_MODE_UFRACT", value: 29, isUnsigned: true)
!109 = !DIEnumerator(name: "MIN_MODE_ACCUM", value: 30, isUnsigned: true)
!110 = !DIEnumerator(name: "MAX_MODE_ACCUM", value: 33, isUnsigned: true)
!111 = !DIEnumerator(name: "MIN_MODE_UACCUM", value: 34, isUnsigned: true)
!112 = !DIEnumerator(name: "MAX_MODE_UACCUM", value: 37, isUnsigned: true)
!113 = !DIEnumerator(name: "MIN_MODE_FLOAT", value: 38, isUnsigned: true)
!114 = !DIEnumerator(name: "MAX_MODE_FLOAT", value: 41, isUnsigned: true)
!115 = !DIEnumerator(name: "MIN_MODE_DECIMAL_FLOAT", value: 42, isUnsigned: true)
!116 = !DIEnumerator(name: "MAX_MODE_DECIMAL_FLOAT", value: 44, isUnsigned: true)
!117 = !DIEnumerator(name: "MIN_MODE_COMPLEX_INT", value: 45, isUnsigned: true)
!118 = !DIEnumerator(name: "MAX_MODE_COMPLEX_INT", value: 50, isUnsigned: true)
!119 = !DIEnumerator(name: "MIN_MODE_COMPLEX_FLOAT", value: 51, isUnsigned: true)
!120 = !DIEnumerator(name: "MAX_MODE_COMPLEX_FLOAT", value: 54, isUnsigned: true)
!121 = !DIEnumerator(name: "MIN_MODE_VECTOR_INT", value: 55, isUnsigned: true)
!122 = !DIEnumerator(name: "MAX_MODE_VECTOR_INT", value: 77, isUnsigned: true)
!123 = !DIEnumerator(name: "MIN_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!124 = !DIEnumerator(name: "MAX_MODE_VECTOR_FRACT", value: 0, isUnsigned: true)
!125 = !DIEnumerator(name: "MIN_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!126 = !DIEnumerator(name: "MAX_MODE_VECTOR_UFRACT", value: 0, isUnsigned: true)
!127 = !DIEnumerator(name: "MIN_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!128 = !DIEnumerator(name: "MAX_MODE_VECTOR_ACCUM", value: 0, isUnsigned: true)
!129 = !DIEnumerator(name: "MIN_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!130 = !DIEnumerator(name: "MAX_MODE_VECTOR_UACCUM", value: 0, isUnsigned: true)
!131 = !DIEnumerator(name: "MIN_MODE_VECTOR_FLOAT", value: 78, isUnsigned: true)
!132 = !DIEnumerator(name: "MAX_MODE_VECTOR_FLOAT", value: 86, isUnsigned: true)
!133 = !DIEnumerator(name: "NUM_MACHINE_MODES", value: 87, isUnsigned: true)
!134 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "profile_status_d", file: !135, line: 363, baseType: !7, size: 32, elements: !136)
!135 = !DIFile(filename: "./basic-block.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!136 = !{!137, !138, !139}
!137 = !DIEnumerator(name: "PROFILE_ABSENT", value: 0, isUnsigned: true)
!138 = !DIEnumerator(name: "PROFILE_GUESSED", value: 1, isUnsigned: true)
!139 = !DIEnumerator(name: "PROFILE_READ", value: 2, isUnsigned: true)
!140 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "dom_state", file: !135, line: 355, baseType: !7, size: 32, elements: !141)
!141 = !{!142, !143, !144}
!142 = !DIEnumerator(name: "DOM_NONE", value: 0, isUnsigned: true)
!143 = !DIEnumerator(name: "DOM_NO_FAST_QUERY", value: 1, isUnsigned: true)
!144 = !DIEnumerator(name: "DOM_OK", value: 2, isUnsigned: true)
!145 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "calling_abi", file: !146, line: 474, baseType: !7, size: 32, elements: !147)
!146 = !DIFile(filename: "./config/i386/i386.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!147 = !{!148, !149}
!148 = !DIEnumerator(name: "SYSV_ABI", value: 0, isUnsigned: true)
!149 = !DIEnumerator(name: "MS_ABI", value: 1, isUnsigned: true)
!150 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_code", file: !151, line: 280, baseType: !7, size: 32, elements: !152)
!151 = !DIFile(filename: "./tree.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!152 = !{!153, !154, !155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166, !167, !168}
!153 = !DIEnumerator(name: "OMP_CLAUSE_ERROR", value: 0, isUnsigned: true)
!154 = !DIEnumerator(name: "OMP_CLAUSE_PRIVATE", value: 1, isUnsigned: true)
!155 = !DIEnumerator(name: "OMP_CLAUSE_SHARED", value: 2, isUnsigned: true)
!156 = !DIEnumerator(name: "OMP_CLAUSE_FIRSTPRIVATE", value: 3, isUnsigned: true)
!157 = !DIEnumerator(name: "OMP_CLAUSE_LASTPRIVATE", value: 4, isUnsigned: true)
!158 = !DIEnumerator(name: "OMP_CLAUSE_REDUCTION", value: 5, isUnsigned: true)
!159 = !DIEnumerator(name: "OMP_CLAUSE_COPYIN", value: 6, isUnsigned: true)
!160 = !DIEnumerator(name: "OMP_CLAUSE_COPYPRIVATE", value: 7, isUnsigned: true)
!161 = !DIEnumerator(name: "OMP_CLAUSE_IF", value: 8, isUnsigned: true)
!162 = !DIEnumerator(name: "OMP_CLAUSE_NUM_THREADS", value: 9, isUnsigned: true)
!163 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE", value: 10, isUnsigned: true)
!164 = !DIEnumerator(name: "OMP_CLAUSE_NOWAIT", value: 11, isUnsigned: true)
!165 = !DIEnumerator(name: "OMP_CLAUSE_ORDERED", value: 12, isUnsigned: true)
!166 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT", value: 13, isUnsigned: true)
!167 = !DIEnumerator(name: "OMP_CLAUSE_COLLAPSE", value: 14, isUnsigned: true)
!168 = !DIEnumerator(name: "OMP_CLAUSE_UNTIED", value: 15, isUnsigned: true)
!169 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_default_kind", file: !151, line: 1817, baseType: !7, size: 32, elements: !170)
!170 = !{!171, !172, !173, !174, !175}
!171 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_UNSPECIFIED", value: 0, isUnsigned: true)
!172 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_SHARED", value: 1, isUnsigned: true)
!173 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_NONE", value: 2, isUnsigned: true)
!174 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_PRIVATE", value: 3, isUnsigned: true)
!175 = !DIEnumerator(name: "OMP_CLAUSE_DEFAULT_FIRSTPRIVATE", value: 4, isUnsigned: true)
!176 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "omp_clause_schedule_kind", file: !151, line: 1805, baseType: !7, size: 32, elements: !177)
!177 = !{!178, !179, !180, !181, !182}
!178 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_STATIC", value: 0, isUnsigned: true)
!179 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_DYNAMIC", value: 1, isUnsigned: true)
!180 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_GUIDED", value: 2, isUnsigned: true)
!181 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_AUTO", value: 3, isUnsigned: true)
!182 = !DIEnumerator(name: "OMP_CLAUSE_SCHEDULE_RUNTIME", value: 4, isUnsigned: true)
!183 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tree_code", file: !151, line: 39, baseType: !7, size: 32, elements: !184)
!184 = !{!185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237, !238, !239, !240, !241, !242, !243, !244, !245, !246, !247, !248, !249, !250, !251, !252, !253, !254, !255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324, !325, !326, !327, !328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355, !356, !357, !358, !359, !360, !361, !362, !363, !364, !365, !366, !367, !368, !369, !370, !371, !372, !373, !374, !375, !376}
!185 = !DIEnumerator(name: "ERROR_MARK", value: 0, isUnsigned: true)
!186 = !DIEnumerator(name: "IDENTIFIER_NODE", value: 1, isUnsigned: true)
!187 = !DIEnumerator(name: "TREE_LIST", value: 2, isUnsigned: true)
!188 = !DIEnumerator(name: "TREE_VEC", value: 3, isUnsigned: true)
!189 = !DIEnumerator(name: "BLOCK", value: 4, isUnsigned: true)
!190 = !DIEnumerator(name: "OFFSET_TYPE", value: 5, isUnsigned: true)
!191 = !DIEnumerator(name: "ENUMERAL_TYPE", value: 6, isUnsigned: true)
!192 = !DIEnumerator(name: "BOOLEAN_TYPE", value: 7, isUnsigned: true)
!193 = !DIEnumerator(name: "INTEGER_TYPE", value: 8, isUnsigned: true)
!194 = !DIEnumerator(name: "REAL_TYPE", value: 9, isUnsigned: true)
!195 = !DIEnumerator(name: "POINTER_TYPE", value: 10, isUnsigned: true)
!196 = !DIEnumerator(name: "FIXED_POINT_TYPE", value: 11, isUnsigned: true)
!197 = !DIEnumerator(name: "REFERENCE_TYPE", value: 12, isUnsigned: true)
!198 = !DIEnumerator(name: "COMPLEX_TYPE", value: 13, isUnsigned: true)
!199 = !DIEnumerator(name: "VECTOR_TYPE", value: 14, isUnsigned: true)
!200 = !DIEnumerator(name: "ARRAY_TYPE", value: 15, isUnsigned: true)
!201 = !DIEnumerator(name: "RECORD_TYPE", value: 16, isUnsigned: true)
!202 = !DIEnumerator(name: "UNION_TYPE", value: 17, isUnsigned: true)
!203 = !DIEnumerator(name: "QUAL_UNION_TYPE", value: 18, isUnsigned: true)
!204 = !DIEnumerator(name: "VOID_TYPE", value: 19, isUnsigned: true)
!205 = !DIEnumerator(name: "FUNCTION_TYPE", value: 20, isUnsigned: true)
!206 = !DIEnumerator(name: "METHOD_TYPE", value: 21, isUnsigned: true)
!207 = !DIEnumerator(name: "LANG_TYPE", value: 22, isUnsigned: true)
!208 = !DIEnumerator(name: "INTEGER_CST", value: 23, isUnsigned: true)
!209 = !DIEnumerator(name: "REAL_CST", value: 24, isUnsigned: true)
!210 = !DIEnumerator(name: "FIXED_CST", value: 25, isUnsigned: true)
!211 = !DIEnumerator(name: "COMPLEX_CST", value: 26, isUnsigned: true)
!212 = !DIEnumerator(name: "VECTOR_CST", value: 27, isUnsigned: true)
!213 = !DIEnumerator(name: "STRING_CST", value: 28, isUnsigned: true)
!214 = !DIEnumerator(name: "FUNCTION_DECL", value: 29, isUnsigned: true)
!215 = !DIEnumerator(name: "LABEL_DECL", value: 30, isUnsigned: true)
!216 = !DIEnumerator(name: "FIELD_DECL", value: 31, isUnsigned: true)
!217 = !DIEnumerator(name: "VAR_DECL", value: 32, isUnsigned: true)
!218 = !DIEnumerator(name: "CONST_DECL", value: 33, isUnsigned: true)
!219 = !DIEnumerator(name: "PARM_DECL", value: 34, isUnsigned: true)
!220 = !DIEnumerator(name: "TYPE_DECL", value: 35, isUnsigned: true)
!221 = !DIEnumerator(name: "RESULT_DECL", value: 36, isUnsigned: true)
!222 = !DIEnumerator(name: "DEBUG_EXPR_DECL", value: 37, isUnsigned: true)
!223 = !DIEnumerator(name: "NAMESPACE_DECL", value: 38, isUnsigned: true)
!224 = !DIEnumerator(name: "IMPORTED_DECL", value: 39, isUnsigned: true)
!225 = !DIEnumerator(name: "TRANSLATION_UNIT_DECL", value: 40, isUnsigned: true)
!226 = !DIEnumerator(name: "COMPONENT_REF", value: 41, isUnsigned: true)
!227 = !DIEnumerator(name: "BIT_FIELD_REF", value: 42, isUnsigned: true)
!228 = !DIEnumerator(name: "REALPART_EXPR", value: 43, isUnsigned: true)
!229 = !DIEnumerator(name: "IMAGPART_EXPR", value: 44, isUnsigned: true)
!230 = !DIEnumerator(name: "ARRAY_REF", value: 45, isUnsigned: true)
!231 = !DIEnumerator(name: "ARRAY_RANGE_REF", value: 46, isUnsigned: true)
!232 = !DIEnumerator(name: "INDIRECT_REF", value: 47, isUnsigned: true)
!233 = !DIEnumerator(name: "ALIGN_INDIRECT_REF", value: 48, isUnsigned: true)
!234 = !DIEnumerator(name: "MISALIGNED_INDIRECT_REF", value: 49, isUnsigned: true)
!235 = !DIEnumerator(name: "OBJ_TYPE_REF", value: 50, isUnsigned: true)
!236 = !DIEnumerator(name: "CONSTRUCTOR", value: 51, isUnsigned: true)
!237 = !DIEnumerator(name: "COMPOUND_EXPR", value: 52, isUnsigned: true)
!238 = !DIEnumerator(name: "MODIFY_EXPR", value: 53, isUnsigned: true)
!239 = !DIEnumerator(name: "INIT_EXPR", value: 54, isUnsigned: true)
!240 = !DIEnumerator(name: "TARGET_EXPR", value: 55, isUnsigned: true)
!241 = !DIEnumerator(name: "COND_EXPR", value: 56, isUnsigned: true)
!242 = !DIEnumerator(name: "VEC_COND_EXPR", value: 57, isUnsigned: true)
!243 = !DIEnumerator(name: "BIND_EXPR", value: 58, isUnsigned: true)
!244 = !DIEnumerator(name: "CALL_EXPR", value: 59, isUnsigned: true)
!245 = !DIEnumerator(name: "WITH_CLEANUP_EXPR", value: 60, isUnsigned: true)
!246 = !DIEnumerator(name: "CLEANUP_POINT_EXPR", value: 61, isUnsigned: true)
!247 = !DIEnumerator(name: "PLACEHOLDER_EXPR", value: 62, isUnsigned: true)
!248 = !DIEnumerator(name: "PLUS_EXPR", value: 63, isUnsigned: true)
!249 = !DIEnumerator(name: "MINUS_EXPR", value: 64, isUnsigned: true)
!250 = !DIEnumerator(name: "MULT_EXPR", value: 65, isUnsigned: true)
!251 = !DIEnumerator(name: "POINTER_PLUS_EXPR", value: 66, isUnsigned: true)
!252 = !DIEnumerator(name: "TRUNC_DIV_EXPR", value: 67, isUnsigned: true)
!253 = !DIEnumerator(name: "CEIL_DIV_EXPR", value: 68, isUnsigned: true)
!254 = !DIEnumerator(name: "FLOOR_DIV_EXPR", value: 69, isUnsigned: true)
!255 = !DIEnumerator(name: "ROUND_DIV_EXPR", value: 70, isUnsigned: true)
!256 = !DIEnumerator(name: "TRUNC_MOD_EXPR", value: 71, isUnsigned: true)
!257 = !DIEnumerator(name: "CEIL_MOD_EXPR", value: 72, isUnsigned: true)
!258 = !DIEnumerator(name: "FLOOR_MOD_EXPR", value: 73, isUnsigned: true)
!259 = !DIEnumerator(name: "ROUND_MOD_EXPR", value: 74, isUnsigned: true)
!260 = !DIEnumerator(name: "RDIV_EXPR", value: 75, isUnsigned: true)
!261 = !DIEnumerator(name: "EXACT_DIV_EXPR", value: 76, isUnsigned: true)
!262 = !DIEnumerator(name: "FIX_TRUNC_EXPR", value: 77, isUnsigned: true)
!263 = !DIEnumerator(name: "FLOAT_EXPR", value: 78, isUnsigned: true)
!264 = !DIEnumerator(name: "NEGATE_EXPR", value: 79, isUnsigned: true)
!265 = !DIEnumerator(name: "MIN_EXPR", value: 80, isUnsigned: true)
!266 = !DIEnumerator(name: "MAX_EXPR", value: 81, isUnsigned: true)
!267 = !DIEnumerator(name: "ABS_EXPR", value: 82, isUnsigned: true)
!268 = !DIEnumerator(name: "LSHIFT_EXPR", value: 83, isUnsigned: true)
!269 = !DIEnumerator(name: "RSHIFT_EXPR", value: 84, isUnsigned: true)
!270 = !DIEnumerator(name: "LROTATE_EXPR", value: 85, isUnsigned: true)
!271 = !DIEnumerator(name: "RROTATE_EXPR", value: 86, isUnsigned: true)
!272 = !DIEnumerator(name: "BIT_IOR_EXPR", value: 87, isUnsigned: true)
!273 = !DIEnumerator(name: "BIT_XOR_EXPR", value: 88, isUnsigned: true)
!274 = !DIEnumerator(name: "BIT_AND_EXPR", value: 89, isUnsigned: true)
!275 = !DIEnumerator(name: "BIT_NOT_EXPR", value: 90, isUnsigned: true)
!276 = !DIEnumerator(name: "TRUTH_ANDIF_EXPR", value: 91, isUnsigned: true)
!277 = !DIEnumerator(name: "TRUTH_ORIF_EXPR", value: 92, isUnsigned: true)
!278 = !DIEnumerator(name: "TRUTH_AND_EXPR", value: 93, isUnsigned: true)
!279 = !DIEnumerator(name: "TRUTH_OR_EXPR", value: 94, isUnsigned: true)
!280 = !DIEnumerator(name: "TRUTH_XOR_EXPR", value: 95, isUnsigned: true)
!281 = !DIEnumerator(name: "TRUTH_NOT_EXPR", value: 96, isUnsigned: true)
!282 = !DIEnumerator(name: "LT_EXPR", value: 97, isUnsigned: true)
!283 = !DIEnumerator(name: "LE_EXPR", value: 98, isUnsigned: true)
!284 = !DIEnumerator(name: "GT_EXPR", value: 99, isUnsigned: true)
!285 = !DIEnumerator(name: "GE_EXPR", value: 100, isUnsigned: true)
!286 = !DIEnumerator(name: "EQ_EXPR", value: 101, isUnsigned: true)
!287 = !DIEnumerator(name: "NE_EXPR", value: 102, isUnsigned: true)
!288 = !DIEnumerator(name: "UNORDERED_EXPR", value: 103, isUnsigned: true)
!289 = !DIEnumerator(name: "ORDERED_EXPR", value: 104, isUnsigned: true)
!290 = !DIEnumerator(name: "UNLT_EXPR", value: 105, isUnsigned: true)
!291 = !DIEnumerator(name: "UNLE_EXPR", value: 106, isUnsigned: true)
!292 = !DIEnumerator(name: "UNGT_EXPR", value: 107, isUnsigned: true)
!293 = !DIEnumerator(name: "UNGE_EXPR", value: 108, isUnsigned: true)
!294 = !DIEnumerator(name: "UNEQ_EXPR", value: 109, isUnsigned: true)
!295 = !DIEnumerator(name: "LTGT_EXPR", value: 110, isUnsigned: true)
!296 = !DIEnumerator(name: "RANGE_EXPR", value: 111, isUnsigned: true)
!297 = !DIEnumerator(name: "PAREN_EXPR", value: 112, isUnsigned: true)
!298 = !DIEnumerator(name: "CONVERT_EXPR", value: 113, isUnsigned: true)
!299 = !DIEnumerator(name: "ADDR_SPACE_CONVERT_EXPR", value: 114, isUnsigned: true)
!300 = !DIEnumerator(name: "FIXED_CONVERT_EXPR", value: 115, isUnsigned: true)
!301 = !DIEnumerator(name: "NOP_EXPR", value: 116, isUnsigned: true)
!302 = !DIEnumerator(name: "NON_LVALUE_EXPR", value: 117, isUnsigned: true)
!303 = !DIEnumerator(name: "VIEW_CONVERT_EXPR", value: 118, isUnsigned: true)
!304 = !DIEnumerator(name: "COMPOUND_LITERAL_EXPR", value: 119, isUnsigned: true)
!305 = !DIEnumerator(name: "SAVE_EXPR", value: 120, isUnsigned: true)
!306 = !DIEnumerator(name: "ADDR_EXPR", value: 121, isUnsigned: true)
!307 = !DIEnumerator(name: "FDESC_EXPR", value: 122, isUnsigned: true)
!308 = !DIEnumerator(name: "COMPLEX_EXPR", value: 123, isUnsigned: true)
!309 = !DIEnumerator(name: "CONJ_EXPR", value: 124, isUnsigned: true)
!310 = !DIEnumerator(name: "PREDECREMENT_EXPR", value: 125, isUnsigned: true)
!311 = !DIEnumerator(name: "PREINCREMENT_EXPR", value: 126, isUnsigned: true)
!312 = !DIEnumerator(name: "POSTDECREMENT_EXPR", value: 127, isUnsigned: true)
!313 = !DIEnumerator(name: "POSTINCREMENT_EXPR", value: 128, isUnsigned: true)
!314 = !DIEnumerator(name: "VA_ARG_EXPR", value: 129, isUnsigned: true)
!315 = !DIEnumerator(name: "TRY_CATCH_EXPR", value: 130, isUnsigned: true)
!316 = !DIEnumerator(name: "TRY_FINALLY_EXPR", value: 131, isUnsigned: true)
!317 = !DIEnumerator(name: "DECL_EXPR", value: 132, isUnsigned: true)
!318 = !DIEnumerator(name: "LABEL_EXPR", value: 133, isUnsigned: true)
!319 = !DIEnumerator(name: "GOTO_EXPR", value: 134, isUnsigned: true)
!320 = !DIEnumerator(name: "RETURN_EXPR", value: 135, isUnsigned: true)
!321 = !DIEnumerator(name: "EXIT_EXPR", value: 136, isUnsigned: true)
!322 = !DIEnumerator(name: "LOOP_EXPR", value: 137, isUnsigned: true)
!323 = !DIEnumerator(name: "SWITCH_EXPR", value: 138, isUnsigned: true)
!324 = !DIEnumerator(name: "CASE_LABEL_EXPR", value: 139, isUnsigned: true)
!325 = !DIEnumerator(name: "ASM_EXPR", value: 140, isUnsigned: true)
!326 = !DIEnumerator(name: "SSA_NAME", value: 141, isUnsigned: true)
!327 = !DIEnumerator(name: "CATCH_EXPR", value: 142, isUnsigned: true)
!328 = !DIEnumerator(name: "EH_FILTER_EXPR", value: 143, isUnsigned: true)
!329 = !DIEnumerator(name: "SCEV_KNOWN", value: 144, isUnsigned: true)
!330 = !DIEnumerator(name: "SCEV_NOT_KNOWN", value: 145, isUnsigned: true)
!331 = !DIEnumerator(name: "POLYNOMIAL_CHREC", value: 146, isUnsigned: true)
!332 = !DIEnumerator(name: "STATEMENT_LIST", value: 147, isUnsigned: true)
!333 = !DIEnumerator(name: "ASSERT_EXPR", value: 148, isUnsigned: true)
!334 = !DIEnumerator(name: "TREE_BINFO", value: 149, isUnsigned: true)
!335 = !DIEnumerator(name: "WITH_SIZE_EXPR", value: 150, isUnsigned: true)
!336 = !DIEnumerator(name: "REALIGN_LOAD_EXPR", value: 151, isUnsigned: true)
!337 = !DIEnumerator(name: "TARGET_MEM_REF", value: 152, isUnsigned: true)
!338 = !DIEnumerator(name: "OMP_PARALLEL", value: 153, isUnsigned: true)
!339 = !DIEnumerator(name: "OMP_TASK", value: 154, isUnsigned: true)
!340 = !DIEnumerator(name: "OMP_FOR", value: 155, isUnsigned: true)
!341 = !DIEnumerator(name: "OMP_SECTIONS", value: 156, isUnsigned: true)
!342 = !DIEnumerator(name: "OMP_SINGLE", value: 157, isUnsigned: true)
!343 = !DIEnumerator(name: "OMP_SECTION", value: 158, isUnsigned: true)
!344 = !DIEnumerator(name: "OMP_MASTER", value: 159, isUnsigned: true)
!345 = !DIEnumerator(name: "OMP_ORDERED", value: 160, isUnsigned: true)
!346 = !DIEnumerator(name: "OMP_CRITICAL", value: 161, isUnsigned: true)
!347 = !DIEnumerator(name: "OMP_ATOMIC", value: 162, isUnsigned: true)
!348 = !DIEnumerator(name: "OMP_CLAUSE", value: 163, isUnsigned: true)
!349 = !DIEnumerator(name: "REDUC_MAX_EXPR", value: 164, isUnsigned: true)
!350 = !DIEnumerator(name: "REDUC_MIN_EXPR", value: 165, isUnsigned: true)
!351 = !DIEnumerator(name: "REDUC_PLUS_EXPR", value: 166, isUnsigned: true)
!352 = !DIEnumerator(name: "DOT_PROD_EXPR", value: 167, isUnsigned: true)
!353 = !DIEnumerator(name: "WIDEN_SUM_EXPR", value: 168, isUnsigned: true)
!354 = !DIEnumerator(name: "WIDEN_MULT_EXPR", value: 169, isUnsigned: true)
!355 = !DIEnumerator(name: "VEC_LSHIFT_EXPR", value: 170, isUnsigned: true)
!356 = !DIEnumerator(name: "VEC_RSHIFT_EXPR", value: 171, isUnsigned: true)
!357 = !DIEnumerator(name: "VEC_WIDEN_MULT_HI_EXPR", value: 172, isUnsigned: true)
!358 = !DIEnumerator(name: "VEC_WIDEN_MULT_LO_EXPR", value: 173, isUnsigned: true)
!359 = !DIEnumerator(name: "VEC_UNPACK_HI_EXPR", value: 174, isUnsigned: true)
!360 = !DIEnumerator(name: "VEC_UNPACK_LO_EXPR", value: 175, isUnsigned: true)
!361 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_HI_EXPR", value: 176, isUnsigned: true)
!362 = !DIEnumerator(name: "VEC_UNPACK_FLOAT_LO_EXPR", value: 177, isUnsigned: true)
!363 = !DIEnumerator(name: "VEC_PACK_TRUNC_EXPR", value: 178, isUnsigned: true)
!364 = !DIEnumerator(name: "VEC_PACK_SAT_EXPR", value: 179, isUnsigned: true)
!365 = !DIEnumerator(name: "VEC_PACK_FIX_TRUNC_EXPR", value: 180, isUnsigned: true)
!366 = !DIEnumerator(name: "VEC_EXTRACT_EVEN_EXPR", value: 181, isUnsigned: true)
!367 = !DIEnumerator(name: "VEC_EXTRACT_ODD_EXPR", value: 182, isUnsigned: true)
!368 = !DIEnumerator(name: "VEC_INTERLEAVE_HIGH_EXPR", value: 183, isUnsigned: true)
!369 = !DIEnumerator(name: "VEC_INTERLEAVE_LOW_EXPR", value: 184, isUnsigned: true)
!370 = !DIEnumerator(name: "PREDICT_EXPR", value: 185, isUnsigned: true)
!371 = !DIEnumerator(name: "OPTIMIZATION_NODE", value: 186, isUnsigned: true)
!372 = !DIEnumerator(name: "TARGET_OPTION_NODE", value: 187, isUnsigned: true)
!373 = !DIEnumerator(name: "LAST_AND_UNUSED_TREE_CODE", value: 188, isUnsigned: true)
!374 = !DIEnumerator(name: "C_MAYBE_CONST_EXPR", value: 189, isUnsigned: true)
!375 = !DIEnumerator(name: "EXCESS_PRECISION_EXPR", value: 190, isUnsigned: true)
!376 = !DIEnumerator(name: "MAX_TREE_CODES", value: 191, isUnsigned: true)
!377 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rtx_code", file: !378, line: 45, baseType: !7, size: 32, elements: !379)
!378 = !DIFile(filename: "./rtl.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!379 = !{!380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402, !403, !404, !405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449, !450, !451, !452, !453, !454, !455, !456, !457, !458, !459, !460, !461, !462, !463, !464, !465, !466, !467, !468, !469, !470, !471, !472, !473, !474, !475, !476, !477, !478, !479, !480, !481, !482, !483, !484, !485, !486, !487, !488, !489, !490, !491, !492, !493, !494, !495, !496, !497, !498, !499, !500, !501, !502, !503, !504, !505, !506, !507, !508, !509, !510, !511, !512, !513, !514, !515, !516, !517, !518, !519}
!380 = !DIEnumerator(name: "UNKNOWN", value: 0, isUnsigned: true)
!381 = !DIEnumerator(name: "VALUE", value: 1, isUnsigned: true)
!382 = !DIEnumerator(name: "DEBUG_EXPR", value: 2, isUnsigned: true)
!383 = !DIEnumerator(name: "EXPR_LIST", value: 3, isUnsigned: true)
!384 = !DIEnumerator(name: "INSN_LIST", value: 4, isUnsigned: true)
!385 = !DIEnumerator(name: "SEQUENCE", value: 5, isUnsigned: true)
!386 = !DIEnumerator(name: "ADDRESS", value: 6, isUnsigned: true)
!387 = !DIEnumerator(name: "DEBUG_INSN", value: 7, isUnsigned: true)
!388 = !DIEnumerator(name: "INSN", value: 8, isUnsigned: true)
!389 = !DIEnumerator(name: "JUMP_INSN", value: 9, isUnsigned: true)
!390 = !DIEnumerator(name: "CALL_INSN", value: 10, isUnsigned: true)
!391 = !DIEnumerator(name: "BARRIER", value: 11, isUnsigned: true)
!392 = !DIEnumerator(name: "CODE_LABEL", value: 12, isUnsigned: true)
!393 = !DIEnumerator(name: "NOTE", value: 13, isUnsigned: true)
!394 = !DIEnumerator(name: "COND_EXEC", value: 14, isUnsigned: true)
!395 = !DIEnumerator(name: "PARALLEL", value: 15, isUnsigned: true)
!396 = !DIEnumerator(name: "ASM_INPUT", value: 16, isUnsigned: true)
!397 = !DIEnumerator(name: "ASM_OPERANDS", value: 17, isUnsigned: true)
!398 = !DIEnumerator(name: "UNSPEC", value: 18, isUnsigned: true)
!399 = !DIEnumerator(name: "UNSPEC_VOLATILE", value: 19, isUnsigned: true)
!400 = !DIEnumerator(name: "ADDR_VEC", value: 20, isUnsigned: true)
!401 = !DIEnumerator(name: "ADDR_DIFF_VEC", value: 21, isUnsigned: true)
!402 = !DIEnumerator(name: "PREFETCH", value: 22, isUnsigned: true)
!403 = !DIEnumerator(name: "SET", value: 23, isUnsigned: true)
!404 = !DIEnumerator(name: "USE", value: 24, isUnsigned: true)
!405 = !DIEnumerator(name: "CLOBBER", value: 25, isUnsigned: true)
!406 = !DIEnumerator(name: "CALL", value: 26, isUnsigned: true)
!407 = !DIEnumerator(name: "RETURN", value: 27, isUnsigned: true)
!408 = !DIEnumerator(name: "EH_RETURN", value: 28, isUnsigned: true)
!409 = !DIEnumerator(name: "TRAP_IF", value: 29, isUnsigned: true)
!410 = !DIEnumerator(name: "CONST_INT", value: 30, isUnsigned: true)
!411 = !DIEnumerator(name: "CONST_FIXED", value: 31, isUnsigned: true)
!412 = !DIEnumerator(name: "CONST_DOUBLE", value: 32, isUnsigned: true)
!413 = !DIEnumerator(name: "CONST_VECTOR", value: 33, isUnsigned: true)
!414 = !DIEnumerator(name: "CONST_STRING", value: 34, isUnsigned: true)
!415 = !DIEnumerator(name: "CONST", value: 35, isUnsigned: true)
!416 = !DIEnumerator(name: "PC", value: 36, isUnsigned: true)
!417 = !DIEnumerator(name: "REG", value: 37, isUnsigned: true)
!418 = !DIEnumerator(name: "SCRATCH", value: 38, isUnsigned: true)
!419 = !DIEnumerator(name: "SUBREG", value: 39, isUnsigned: true)
!420 = !DIEnumerator(name: "STRICT_LOW_PART", value: 40, isUnsigned: true)
!421 = !DIEnumerator(name: "CONCAT", value: 41, isUnsigned: true)
!422 = !DIEnumerator(name: "CONCATN", value: 42, isUnsigned: true)
!423 = !DIEnumerator(name: "MEM", value: 43, isUnsigned: true)
!424 = !DIEnumerator(name: "LABEL_REF", value: 44, isUnsigned: true)
!425 = !DIEnumerator(name: "SYMBOL_REF", value: 45, isUnsigned: true)
!426 = !DIEnumerator(name: "CC0", value: 46, isUnsigned: true)
!427 = !DIEnumerator(name: "IF_THEN_ELSE", value: 47, isUnsigned: true)
!428 = !DIEnumerator(name: "COMPARE", value: 48, isUnsigned: true)
!429 = !DIEnumerator(name: "PLUS", value: 49, isUnsigned: true)
!430 = !DIEnumerator(name: "MINUS", value: 50, isUnsigned: true)
!431 = !DIEnumerator(name: "NEG", value: 51, isUnsigned: true)
!432 = !DIEnumerator(name: "MULT", value: 52, isUnsigned: true)
!433 = !DIEnumerator(name: "SS_MULT", value: 53, isUnsigned: true)
!434 = !DIEnumerator(name: "US_MULT", value: 54, isUnsigned: true)
!435 = !DIEnumerator(name: "DIV", value: 55, isUnsigned: true)
!436 = !DIEnumerator(name: "SS_DIV", value: 56, isUnsigned: true)
!437 = !DIEnumerator(name: "US_DIV", value: 57, isUnsigned: true)
!438 = !DIEnumerator(name: "MOD", value: 58, isUnsigned: true)
!439 = !DIEnumerator(name: "UDIV", value: 59, isUnsigned: true)
!440 = !DIEnumerator(name: "UMOD", value: 60, isUnsigned: true)
!441 = !DIEnumerator(name: "AND", value: 61, isUnsigned: true)
!442 = !DIEnumerator(name: "IOR", value: 62, isUnsigned: true)
!443 = !DIEnumerator(name: "XOR", value: 63, isUnsigned: true)
!444 = !DIEnumerator(name: "NOT", value: 64, isUnsigned: true)
!445 = !DIEnumerator(name: "ASHIFT", value: 65, isUnsigned: true)
!446 = !DIEnumerator(name: "ROTATE", value: 66, isUnsigned: true)
!447 = !DIEnumerator(name: "ASHIFTRT", value: 67, isUnsigned: true)
!448 = !DIEnumerator(name: "LSHIFTRT", value: 68, isUnsigned: true)
!449 = !DIEnumerator(name: "ROTATERT", value: 69, isUnsigned: true)
!450 = !DIEnumerator(name: "SMIN", value: 70, isUnsigned: true)
!451 = !DIEnumerator(name: "SMAX", value: 71, isUnsigned: true)
!452 = !DIEnumerator(name: "UMIN", value: 72, isUnsigned: true)
!453 = !DIEnumerator(name: "UMAX", value: 73, isUnsigned: true)
!454 = !DIEnumerator(name: "PRE_DEC", value: 74, isUnsigned: true)
!455 = !DIEnumerator(name: "PRE_INC", value: 75, isUnsigned: true)
!456 = !DIEnumerator(name: "POST_DEC", value: 76, isUnsigned: true)
!457 = !DIEnumerator(name: "POST_INC", value: 77, isUnsigned: true)
!458 = !DIEnumerator(name: "PRE_MODIFY", value: 78, isUnsigned: true)
!459 = !DIEnumerator(name: "POST_MODIFY", value: 79, isUnsigned: true)
!460 = !DIEnumerator(name: "NE", value: 80, isUnsigned: true)
!461 = !DIEnumerator(name: "EQ", value: 81, isUnsigned: true)
!462 = !DIEnumerator(name: "GE", value: 82, isUnsigned: true)
!463 = !DIEnumerator(name: "GT", value: 83, isUnsigned: true)
!464 = !DIEnumerator(name: "LE", value: 84, isUnsigned: true)
!465 = !DIEnumerator(name: "LT", value: 85, isUnsigned: true)
!466 = !DIEnumerator(name: "GEU", value: 86, isUnsigned: true)
!467 = !DIEnumerator(name: "GTU", value: 87, isUnsigned: true)
!468 = !DIEnumerator(name: "LEU", value: 88, isUnsigned: true)
!469 = !DIEnumerator(name: "LTU", value: 89, isUnsigned: true)
!470 = !DIEnumerator(name: "UNORDERED", value: 90, isUnsigned: true)
!471 = !DIEnumerator(name: "ORDERED", value: 91, isUnsigned: true)
!472 = !DIEnumerator(name: "UNEQ", value: 92, isUnsigned: true)
!473 = !DIEnumerator(name: "UNGE", value: 93, isUnsigned: true)
!474 = !DIEnumerator(name: "UNGT", value: 94, isUnsigned: true)
!475 = !DIEnumerator(name: "UNLE", value: 95, isUnsigned: true)
!476 = !DIEnumerator(name: "UNLT", value: 96, isUnsigned: true)
!477 = !DIEnumerator(name: "LTGT", value: 97, isUnsigned: true)
!478 = !DIEnumerator(name: "SIGN_EXTEND", value: 98, isUnsigned: true)
!479 = !DIEnumerator(name: "ZERO_EXTEND", value: 99, isUnsigned: true)
!480 = !DIEnumerator(name: "TRUNCATE", value: 100, isUnsigned: true)
!481 = !DIEnumerator(name: "FLOAT_EXTEND", value: 101, isUnsigned: true)
!482 = !DIEnumerator(name: "FLOAT_TRUNCATE", value: 102, isUnsigned: true)
!483 = !DIEnumerator(name: "FLOAT", value: 103, isUnsigned: true)
!484 = !DIEnumerator(name: "FIX", value: 104, isUnsigned: true)
!485 = !DIEnumerator(name: "UNSIGNED_FLOAT", value: 105, isUnsigned: true)
!486 = !DIEnumerator(name: "UNSIGNED_FIX", value: 106, isUnsigned: true)
!487 = !DIEnumerator(name: "FRACT_CONVERT", value: 107, isUnsigned: true)
!488 = !DIEnumerator(name: "UNSIGNED_FRACT_CONVERT", value: 108, isUnsigned: true)
!489 = !DIEnumerator(name: "SAT_FRACT", value: 109, isUnsigned: true)
!490 = !DIEnumerator(name: "UNSIGNED_SAT_FRACT", value: 110, isUnsigned: true)
!491 = !DIEnumerator(name: "ABS", value: 111, isUnsigned: true)
!492 = !DIEnumerator(name: "SQRT", value: 112, isUnsigned: true)
!493 = !DIEnumerator(name: "BSWAP", value: 113, isUnsigned: true)
!494 = !DIEnumerator(name: "FFS", value: 114, isUnsigned: true)
!495 = !DIEnumerator(name: "CLZ", value: 115, isUnsigned: true)
!496 = !DIEnumerator(name: "CTZ", value: 116, isUnsigned: true)
!497 = !DIEnumerator(name: "POPCOUNT", value: 117, isUnsigned: true)
!498 = !DIEnumerator(name: "PARITY", value: 118, isUnsigned: true)
!499 = !DIEnumerator(name: "SIGN_EXTRACT", value: 119, isUnsigned: true)
!500 = !DIEnumerator(name: "ZERO_EXTRACT", value: 120, isUnsigned: true)
!501 = !DIEnumerator(name: "HIGH", value: 121, isUnsigned: true)
!502 = !DIEnumerator(name: "LO_SUM", value: 122, isUnsigned: true)
!503 = !DIEnumerator(name: "VEC_MERGE", value: 123, isUnsigned: true)
!504 = !DIEnumerator(name: "VEC_SELECT", value: 124, isUnsigned: true)
!505 = !DIEnumerator(name: "VEC_CONCAT", value: 125, isUnsigned: true)
!506 = !DIEnumerator(name: "VEC_DUPLICATE", value: 126, isUnsigned: true)
!507 = !DIEnumerator(name: "SS_PLUS", value: 127, isUnsigned: true)
!508 = !DIEnumerator(name: "US_PLUS", value: 128, isUnsigned: true)
!509 = !DIEnumerator(name: "SS_MINUS", value: 129, isUnsigned: true)
!510 = !DIEnumerator(name: "SS_NEG", value: 130, isUnsigned: true)
!511 = !DIEnumerator(name: "US_NEG", value: 131, isUnsigned: true)
!512 = !DIEnumerator(name: "SS_ABS", value: 132, isUnsigned: true)
!513 = !DIEnumerator(name: "SS_ASHIFT", value: 133, isUnsigned: true)
!514 = !DIEnumerator(name: "US_ASHIFT", value: 134, isUnsigned: true)
!515 = !DIEnumerator(name: "US_MINUS", value: 135, isUnsigned: true)
!516 = !DIEnumerator(name: "SS_TRUNCATE", value: 136, isUnsigned: true)
!517 = !DIEnumerator(name: "US_TRUNCATE", value: 137, isUnsigned: true)
!518 = !DIEnumerator(name: "VAR_LOCATION", value: 138, isUnsigned: true)
!519 = !DIEnumerator(name: "LAST_AND_UNUSED_RTX_CODE", value: 139, isUnsigned: true)
!520 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "rtx_class", file: !378, line: 60, baseType: !7, size: 32, elements: !521)
!521 = !{!522, !523, !524, !525, !526, !527, !528, !529, !530, !531, !532, !533, !534}
!522 = !DIEnumerator(name: "RTX_COMPARE", value: 0, isUnsigned: true)
!523 = !DIEnumerator(name: "RTX_COMM_COMPARE", value: 1, isUnsigned: true)
!524 = !DIEnumerator(name: "RTX_BIN_ARITH", value: 2, isUnsigned: true)
!525 = !DIEnumerator(name: "RTX_COMM_ARITH", value: 3, isUnsigned: true)
!526 = !DIEnumerator(name: "RTX_UNARY", value: 4, isUnsigned: true)
!527 = !DIEnumerator(name: "RTX_EXTRA", value: 5, isUnsigned: true)
!528 = !DIEnumerator(name: "RTX_MATCH", value: 6, isUnsigned: true)
!529 = !DIEnumerator(name: "RTX_INSN", value: 7, isUnsigned: true)
!530 = !DIEnumerator(name: "RTX_OBJ", value: 8, isUnsigned: true)
!531 = !DIEnumerator(name: "RTX_CONST_OBJ", value: 9, isUnsigned: true)
!532 = !DIEnumerator(name: "RTX_TERNARY", value: 10, isUnsigned: true)
!533 = !DIEnumerator(name: "RTX_BITFIELD_OPS", value: 11, isUnsigned: true)
!534 = !DIEnumerator(name: "RTX_AUTOINC", value: 12, isUnsigned: true)
!535 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "tree_node_structure_enum", file: !151, line: 630, baseType: !7, size: 32, elements: !536)
!536 = !{!537, !538, !539, !540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !568, !569, !570, !571}
!537 = !DIEnumerator(name: "TS_BASE", value: 0, isUnsigned: true)
!538 = !DIEnumerator(name: "TS_COMMON", value: 1, isUnsigned: true)
!539 = !DIEnumerator(name: "TS_INT_CST", value: 2, isUnsigned: true)
!540 = !DIEnumerator(name: "TS_REAL_CST", value: 3, isUnsigned: true)
!541 = !DIEnumerator(name: "TS_FIXED_CST", value: 4, isUnsigned: true)
!542 = !DIEnumerator(name: "TS_VECTOR", value: 5, isUnsigned: true)
!543 = !DIEnumerator(name: "TS_STRING", value: 6, isUnsigned: true)
!544 = !DIEnumerator(name: "TS_COMPLEX", value: 7, isUnsigned: true)
!545 = !DIEnumerator(name: "TS_IDENTIFIER", value: 8, isUnsigned: true)
!546 = !DIEnumerator(name: "TS_DECL_MINIMAL", value: 9, isUnsigned: true)
!547 = !DIEnumerator(name: "TS_DECL_COMMON", value: 10, isUnsigned: true)
!548 = !DIEnumerator(name: "TS_DECL_WRTL", value: 11, isUnsigned: true)
!549 = !DIEnumerator(name: "TS_DECL_NON_COMMON", value: 12, isUnsigned: true)
!550 = !DIEnumerator(name: "TS_DECL_WITH_VIS", value: 13, isUnsigned: true)
!551 = !DIEnumerator(name: "TS_FIELD_DECL", value: 14, isUnsigned: true)
!552 = !DIEnumerator(name: "TS_VAR_DECL", value: 15, isUnsigned: true)
!553 = !DIEnumerator(name: "TS_PARM_DECL", value: 16, isUnsigned: true)
!554 = !DIEnumerator(name: "TS_LABEL_DECL", value: 17, isUnsigned: true)
!555 = !DIEnumerator(name: "TS_RESULT_DECL", value: 18, isUnsigned: true)
!556 = !DIEnumerator(name: "TS_CONST_DECL", value: 19, isUnsigned: true)
!557 = !DIEnumerator(name: "TS_TYPE_DECL", value: 20, isUnsigned: true)
!558 = !DIEnumerator(name: "TS_FUNCTION_DECL", value: 21, isUnsigned: true)
!559 = !DIEnumerator(name: "TS_TYPE", value: 22, isUnsigned: true)
!560 = !DIEnumerator(name: "TS_LIST", value: 23, isUnsigned: true)
!561 = !DIEnumerator(name: "TS_VEC", value: 24, isUnsigned: true)
!562 = !DIEnumerator(name: "TS_EXP", value: 25, isUnsigned: true)
!563 = !DIEnumerator(name: "TS_SSA_NAME", value: 26, isUnsigned: true)
!564 = !DIEnumerator(name: "TS_BLOCK", value: 27, isUnsigned: true)
!565 = !DIEnumerator(name: "TS_BINFO", value: 28, isUnsigned: true)
!566 = !DIEnumerator(name: "TS_STATEMENT_LIST", value: 29, isUnsigned: true)
!567 = !DIEnumerator(name: "TS_CONSTRUCTOR", value: 30, isUnsigned: true)
!568 = !DIEnumerator(name: "TS_OMP_CLAUSE", value: 31, isUnsigned: true)
!569 = !DIEnumerator(name: "TS_OPTIMIZATION", value: 32, isUnsigned: true)
!570 = !DIEnumerator(name: "TS_TARGET_OPTION", value: 33, isUnsigned: true)
!571 = !DIEnumerator(name: "LAST_TS_ENUM", value: 34, isUnsigned: true)
!572 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "reg_note", file: !378, line: 836, baseType: !7, size: 32, elements: !573)
!573 = !{!574, !575, !576, !577, !578, !579, !580, !581, !582, !583, !584, !585, !586, !587, !588, !589, !590, !591, !592, !593, !594, !595, !596, !597, !598, !599, !600, !601, !602, !603, !604, !605}
!574 = !DIEnumerator(name: "REG_DEP_TRUE", value: 0, isUnsigned: true)
!575 = !DIEnumerator(name: "REG_DEAD", value: 1, isUnsigned: true)
!576 = !DIEnumerator(name: "REG_INC", value: 2, isUnsigned: true)
!577 = !DIEnumerator(name: "REG_EQUIV", value: 3, isUnsigned: true)
!578 = !DIEnumerator(name: "REG_EQUAL", value: 4, isUnsigned: true)
!579 = !DIEnumerator(name: "REG_NONNEG", value: 5, isUnsigned: true)
!580 = !DIEnumerator(name: "REG_UNUSED", value: 6, isUnsigned: true)
!581 = !DIEnumerator(name: "REG_CC_SETTER", value: 7, isUnsigned: true)
!582 = !DIEnumerator(name: "REG_CC_USER", value: 8, isUnsigned: true)
!583 = !DIEnumerator(name: "REG_LABEL_TARGET", value: 9, isUnsigned: true)
!584 = !DIEnumerator(name: "REG_LABEL_OPERAND", value: 10, isUnsigned: true)
!585 = !DIEnumerator(name: "REG_DEP_OUTPUT", value: 11, isUnsigned: true)
!586 = !DIEnumerator(name: "REG_DEP_ANTI", value: 12, isUnsigned: true)
!587 = !DIEnumerator(name: "REG_BR_PROB", value: 13, isUnsigned: true)
!588 = !DIEnumerator(name: "REG_VALUE_PROFILE", value: 14, isUnsigned: true)
!589 = !DIEnumerator(name: "REG_NOALIAS", value: 15, isUnsigned: true)
!590 = !DIEnumerator(name: "REG_BR_PRED", value: 16, isUnsigned: true)
!591 = !DIEnumerator(name: "REG_FRAME_RELATED_EXPR", value: 17, isUnsigned: true)
!592 = !DIEnumerator(name: "REG_CFA_DEF_CFA", value: 18, isUnsigned: true)
!593 = !DIEnumerator(name: "REG_CFA_ADJUST_CFA", value: 19, isUnsigned: true)
!594 = !DIEnumerator(name: "REG_CFA_OFFSET", value: 20, isUnsigned: true)
!595 = !DIEnumerator(name: "REG_CFA_REGISTER", value: 21, isUnsigned: true)
!596 = !DIEnumerator(name: "REG_CFA_RESTORE", value: 22, isUnsigned: true)
!597 = !DIEnumerator(name: "REG_CFA_SET_VDRAP", value: 23, isUnsigned: true)
!598 = !DIEnumerator(name: "REG_EH_CONTEXT", value: 24, isUnsigned: true)
!599 = !DIEnumerator(name: "REG_EH_REGION", value: 25, isUnsigned: true)
!600 = !DIEnumerator(name: "REG_SAVE_NOTE", value: 26, isUnsigned: true)
!601 = !DIEnumerator(name: "REG_NORETURN", value: 27, isUnsigned: true)
!602 = !DIEnumerator(name: "REG_NON_LOCAL_GOTO", value: 28, isUnsigned: true)
!603 = !DIEnumerator(name: "REG_CROSSING_JUMP", value: 29, isUnsigned: true)
!604 = !DIEnumerator(name: "REG_SETJMP", value: 30, isUnsigned: true)
!605 = !DIEnumerator(name: "REG_NOTE_MAX", value: 31, isUnsigned: true)
!606 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "mode_class", file: !607, line: 36, baseType: !7, size: 32, elements: !608)
!607 = !DIFile(filename: "./machmode.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!608 = !{!609, !610, !611, !612, !613, !614, !615, !616, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !627}
!609 = !DIEnumerator(name: "MODE_RANDOM", value: 0, isUnsigned: true)
!610 = !DIEnumerator(name: "MODE_CC", value: 1, isUnsigned: true)
!611 = !DIEnumerator(name: "MODE_INT", value: 2, isUnsigned: true)
!612 = !DIEnumerator(name: "MODE_PARTIAL_INT", value: 3, isUnsigned: true)
!613 = !DIEnumerator(name: "MODE_FRACT", value: 4, isUnsigned: true)
!614 = !DIEnumerator(name: "MODE_UFRACT", value: 5, isUnsigned: true)
!615 = !DIEnumerator(name: "MODE_ACCUM", value: 6, isUnsigned: true)
!616 = !DIEnumerator(name: "MODE_UACCUM", value: 7, isUnsigned: true)
!617 = !DIEnumerator(name: "MODE_FLOAT", value: 8, isUnsigned: true)
!618 = !DIEnumerator(name: "MODE_DECIMAL_FLOAT", value: 9, isUnsigned: true)
!619 = !DIEnumerator(name: "MODE_COMPLEX_INT", value: 10, isUnsigned: true)
!620 = !DIEnumerator(name: "MODE_COMPLEX_FLOAT", value: 11, isUnsigned: true)
!621 = !DIEnumerator(name: "MODE_VECTOR_INT", value: 12, isUnsigned: true)
!622 = !DIEnumerator(name: "MODE_VECTOR_FRACT", value: 13, isUnsigned: true)
!623 = !DIEnumerator(name: "MODE_VECTOR_UFRACT", value: 14, isUnsigned: true)
!624 = !DIEnumerator(name: "MODE_VECTOR_ACCUM", value: 15, isUnsigned: true)
!625 = !DIEnumerator(name: "MODE_VECTOR_UACCUM", value: 16, isUnsigned: true)
!626 = !DIEnumerator(name: "MODE_VECTOR_FLOAT", value: 17, isUnsigned: true)
!627 = !DIEnumerator(name: "MAX_MODE_CLASS", value: 18, isUnsigned: true)
!628 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "reg_class", file: !146, line: 1188, baseType: !7, size: 32, elements: !629)
!629 = !{!630, !631, !632, !633, !634, !635, !636, !637, !638, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653, !654, !655, !656, !657}
!630 = !DIEnumerator(name: "NO_REGS", value: 0, isUnsigned: true)
!631 = !DIEnumerator(name: "AREG", value: 1, isUnsigned: true)
!632 = !DIEnumerator(name: "DREG", value: 2, isUnsigned: true)
!633 = !DIEnumerator(name: "CREG", value: 3, isUnsigned: true)
!634 = !DIEnumerator(name: "BREG", value: 4, isUnsigned: true)
!635 = !DIEnumerator(name: "SIREG", value: 5, isUnsigned: true)
!636 = !DIEnumerator(name: "DIREG", value: 6, isUnsigned: true)
!637 = !DIEnumerator(name: "AD_REGS", value: 7, isUnsigned: true)
!638 = !DIEnumerator(name: "CLOBBERED_REGS", value: 8, isUnsigned: true)
!639 = !DIEnumerator(name: "Q_REGS", value: 9, isUnsigned: true)
!640 = !DIEnumerator(name: "NON_Q_REGS", value: 10, isUnsigned: true)
!641 = !DIEnumerator(name: "INDEX_REGS", value: 11, isUnsigned: true)
!642 = !DIEnumerator(name: "LEGACY_REGS", value: 12, isUnsigned: true)
!643 = !DIEnumerator(name: "GENERAL_REGS", value: 13, isUnsigned: true)
!644 = !DIEnumerator(name: "FP_TOP_REG", value: 14, isUnsigned: true)
!645 = !DIEnumerator(name: "FP_SECOND_REG", value: 15, isUnsigned: true)
!646 = !DIEnumerator(name: "FLOAT_REGS", value: 16, isUnsigned: true)
!647 = !DIEnumerator(name: "SSE_FIRST_REG", value: 17, isUnsigned: true)
!648 = !DIEnumerator(name: "SSE_REGS", value: 18, isUnsigned: true)
!649 = !DIEnumerator(name: "MMX_REGS", value: 19, isUnsigned: true)
!650 = !DIEnumerator(name: "FP_TOP_SSE_REGS", value: 20, isUnsigned: true)
!651 = !DIEnumerator(name: "FP_SECOND_SSE_REGS", value: 21, isUnsigned: true)
!652 = !DIEnumerator(name: "FLOAT_SSE_REGS", value: 22, isUnsigned: true)
!653 = !DIEnumerator(name: "FLOAT_INT_REGS", value: 23, isUnsigned: true)
!654 = !DIEnumerator(name: "INT_SSE_REGS", value: 24, isUnsigned: true)
!655 = !DIEnumerator(name: "FLOAT_INT_SSE_REGS", value: 25, isUnsigned: true)
!656 = !DIEnumerator(name: "ALL_REGS", value: 26, isUnsigned: true)
!657 = !DIEnumerator(name: "LIM_REG_CLASSES", value: 27, isUnsigned: true)
!658 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "global_rtl_index", file: !378, line: 1994, baseType: !7, size: 32, elements: !659)
!659 = !{!660, !661, !662, !663, !664, !665, !666, !667, !668, !669, !670, !671}
!660 = !DIEnumerator(name: "GR_PC", value: 0, isUnsigned: true)
!661 = !DIEnumerator(name: "GR_CC0", value: 1, isUnsigned: true)
!662 = !DIEnumerator(name: "GR_STACK_POINTER", value: 2, isUnsigned: true)
!663 = !DIEnumerator(name: "GR_FRAME_POINTER", value: 3, isUnsigned: true)
!664 = !DIEnumerator(name: "GR_HARD_FRAME_POINTER", value: 4, isUnsigned: true)
!665 = !DIEnumerator(name: "GR_ARG_POINTER", value: 5, isUnsigned: true)
!666 = !DIEnumerator(name: "GR_VIRTUAL_INCOMING_ARGS", value: 6, isUnsigned: true)
!667 = !DIEnumerator(name: "GR_VIRTUAL_STACK_ARGS", value: 7, isUnsigned: true)
!668 = !DIEnumerator(name: "GR_VIRTUAL_STACK_DYNAMIC", value: 8, isUnsigned: true)
!669 = !DIEnumerator(name: "GR_VIRTUAL_OUTGOING_ARGS", value: 9, isUnsigned: true)
!670 = !DIEnumerator(name: "GR_VIRTUAL_CFA", value: 10, isUnsigned: true)
!671 = !DIEnumerator(name: "GR_MAX", value: 11, isUnsigned: true)
!672 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !673, line: 57, baseType: !7, size: 32, elements: !674)
!673 = !DIFile(filename: "./include/safe-ctype.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!674 = !{!675, !676, !677, !678, !679, !680, !681, !682, !683, !684, !685, !686, !687, !688, !689, !690, !691, !692}
!675 = !DIEnumerator(name: "_sch_isblank", value: 1, isUnsigned: true)
!676 = !DIEnumerator(name: "_sch_iscntrl", value: 2, isUnsigned: true)
!677 = !DIEnumerator(name: "_sch_isdigit", value: 4, isUnsigned: true)
!678 = !DIEnumerator(name: "_sch_islower", value: 8, isUnsigned: true)
!679 = !DIEnumerator(name: "_sch_isprint", value: 16, isUnsigned: true)
!680 = !DIEnumerator(name: "_sch_ispunct", value: 32, isUnsigned: true)
!681 = !DIEnumerator(name: "_sch_isspace", value: 64, isUnsigned: true)
!682 = !DIEnumerator(name: "_sch_isupper", value: 128, isUnsigned: true)
!683 = !DIEnumerator(name: "_sch_isxdigit", value: 256, isUnsigned: true)
!684 = !DIEnumerator(name: "_sch_isidst", value: 512, isUnsigned: true)
!685 = !DIEnumerator(name: "_sch_isvsp", value: 1024, isUnsigned: true)
!686 = !DIEnumerator(name: "_sch_isnvsp", value: 2048, isUnsigned: true)
!687 = !DIEnumerator(name: "_sch_isalpha", value: 136, isUnsigned: true)
!688 = !DIEnumerator(name: "_sch_isalnum", value: 140, isUnsigned: true)
!689 = !DIEnumerator(name: "_sch_isidnum", value: 516, isUnsigned: true)
!690 = !DIEnumerator(name: "_sch_isgraph", value: 172, isUnsigned: true)
!691 = !DIEnumerator(name: "_sch_iscppsp", value: 3072, isUnsigned: true)
!692 = !DIEnumerator(name: "_sch_isbasic", value: 3088, isUnsigned: true)
!693 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "op_type", file: !694, line: 25, baseType: !7, size: 32, elements: !695)
!694 = !DIFile(filename: "./recog.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!695 = !{!696, !697, !698}
!696 = !DIEnumerator(name: "OP_IN", value: 0, isUnsigned: true)
!697 = !DIEnumerator(name: "OP_OUT", value: 1, isUnsigned: true)
!698 = !DIEnumerator(name: "OP_INOUT", value: 2, isUnsigned: true)
!699 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "opt_pass_type", file: !700, line: 104, baseType: !7, size: 32, elements: !701)
!700 = !DIFile(filename: "./tree-pass.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!701 = !{!702, !703, !704, !705}
!702 = !DIEnumerator(name: "GIMPLE_PASS", value: 0, isUnsigned: true)
!703 = !DIEnumerator(name: "RTL_PASS", value: 1, isUnsigned: true)
!704 = !DIEnumerator(name: "SIMPLE_IPA_PASS", value: 2, isUnsigned: true)
!705 = !DIEnumerator(name: "IPA_PASS", value: 3, isUnsigned: true)
!706 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !707, line: 74, baseType: !7, size: 32, elements: !708)
!707 = !DIFile(filename: "./timevar.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!708 = !{!709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !722, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752, !753, !754, !755, !756, !757, !758, !759, !760, !761, !762, !763, !764, !765, !766, !767, !768, !769, !770, !771, !772, !773, !774, !775, !776, !777, !778, !779, !780, !781, !782, !783, !784, !785, !786, !787, !788, !789, !790, !791, !792, !793, !794, !795, !796, !797, !798, !799, !800, !801, !802, !803, !804, !805, !806, !807, !808, !809, !810, !811, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !825, !826, !827, !828, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !840, !841, !842, !843, !844, !845, !846, !847, !848, !849, !850, !851, !852, !853, !854, !855, !856, !857, !858, !859, !860, !861, !862, !863, !864, !865, !866, !867, !868, !869, !870, !871, !872, !873, !874, !875, !876, !877, !878, !879, !880, !881}
!709 = !DIEnumerator(name: "TV_NONE", value: 0, isUnsigned: true)
!710 = !DIEnumerator(name: "TV_TOTAL", value: 1, isUnsigned: true)
!711 = !DIEnumerator(name: "TV_GC", value: 2, isUnsigned: true)
!712 = !DIEnumerator(name: "TV_DUMP", value: 3, isUnsigned: true)
!713 = !DIEnumerator(name: "TV_CGRAPH", value: 4, isUnsigned: true)
!714 = !DIEnumerator(name: "TV_CGRAPHOPT", value: 5, isUnsigned: true)
!715 = !DIEnumerator(name: "TV_IPA_CONSTANT_PROP", value: 6, isUnsigned: true)
!716 = !DIEnumerator(name: "TV_IPA_LTO_GIMPLE_IO", value: 7, isUnsigned: true)
!717 = !DIEnumerator(name: "TV_IPA_LTO_DECL_IO", value: 8, isUnsigned: true)
!718 = !DIEnumerator(name: "TV_IPA_LTO_CGRAPH_IO", value: 9, isUnsigned: true)
!719 = !DIEnumerator(name: "TV_LTO", value: 10, isUnsigned: true)
!720 = !DIEnumerator(name: "TV_WHOPR_WPA", value: 11, isUnsigned: true)
!721 = !DIEnumerator(name: "TV_WHOPR_WPA_IO", value: 12, isUnsigned: true)
!722 = !DIEnumerator(name: "TV_WHOPR_LTRANS", value: 13, isUnsigned: true)
!723 = !DIEnumerator(name: "TV_WHOPR_WPA_FIXUP", value: 14, isUnsigned: true)
!724 = !DIEnumerator(name: "TV_WHOPR_WPA_LTRANS_EXEC", value: 15, isUnsigned: true)
!725 = !DIEnumerator(name: "TV_IPA_REFERENCE", value: 16, isUnsigned: true)
!726 = !DIEnumerator(name: "TV_IPA_PURE_CONST", value: 17, isUnsigned: true)
!727 = !DIEnumerator(name: "TV_IPA_TYPE_ESCAPE", value: 18, isUnsigned: true)
!728 = !DIEnumerator(name: "TV_IPA_PTA", value: 19, isUnsigned: true)
!729 = !DIEnumerator(name: "TV_IPA_SRA", value: 20, isUnsigned: true)
!730 = !DIEnumerator(name: "TV_IPA_FREE_LANG_DATA", value: 21, isUnsigned: true)
!731 = !DIEnumerator(name: "TV_CFG", value: 22, isUnsigned: true)
!732 = !DIEnumerator(name: "TV_CLEANUP_CFG", value: 23, isUnsigned: true)
!733 = !DIEnumerator(name: "TV_CFG_VERIFY", value: 24, isUnsigned: true)
!734 = !DIEnumerator(name: "TV_DELETE_TRIVIALLY_DEAD", value: 25, isUnsigned: true)
!735 = !DIEnumerator(name: "TV_LIFE", value: 26, isUnsigned: true)
!736 = !DIEnumerator(name: "TV_LIFE_UPDATE", value: 27, isUnsigned: true)
!737 = !DIEnumerator(name: "TV_DF_SCAN", value: 28, isUnsigned: true)
!738 = !DIEnumerator(name: "TV_DF_MD", value: 29, isUnsigned: true)
!739 = !DIEnumerator(name: "TV_DF_RD", value: 30, isUnsigned: true)
!740 = !DIEnumerator(name: "TV_DF_LR", value: 31, isUnsigned: true)
!741 = !DIEnumerator(name: "TV_DF_LIVE", value: 32, isUnsigned: true)
!742 = !DIEnumerator(name: "TV_DF_UREC", value: 33, isUnsigned: true)
!743 = !DIEnumerator(name: "TV_DF_CHAIN", value: 34, isUnsigned: true)
!744 = !DIEnumerator(name: "TV_DF_BYTE_LR", value: 35, isUnsigned: true)
!745 = !DIEnumerator(name: "TV_DF_NOTE", value: 36, isUnsigned: true)
!746 = !DIEnumerator(name: "TV_REG_STATS", value: 37, isUnsigned: true)
!747 = !DIEnumerator(name: "TV_ALIAS_ANALYSIS", value: 38, isUnsigned: true)
!748 = !DIEnumerator(name: "TV_ALIAS_STMT_WALK", value: 39, isUnsigned: true)
!749 = !DIEnumerator(name: "TV_REG_SCAN", value: 40, isUnsigned: true)
!750 = !DIEnumerator(name: "TV_REBUILD_JUMP", value: 41, isUnsigned: true)
!751 = !DIEnumerator(name: "TV_CPP", value: 42, isUnsigned: true)
!752 = !DIEnumerator(name: "TV_LEX", value: 43, isUnsigned: true)
!753 = !DIEnumerator(name: "TV_PARSE", value: 44, isUnsigned: true)
!754 = !DIEnumerator(name: "TV_NAME_LOOKUP", value: 45, isUnsigned: true)
!755 = !DIEnumerator(name: "TV_INLINE_HEURISTICS", value: 46, isUnsigned: true)
!756 = !DIEnumerator(name: "TV_INTEGRATION", value: 47, isUnsigned: true)
!757 = !DIEnumerator(name: "TV_TREE_GIMPLIFY", value: 48, isUnsigned: true)
!758 = !DIEnumerator(name: "TV_TREE_EH", value: 49, isUnsigned: true)
!759 = !DIEnumerator(name: "TV_TREE_CFG", value: 50, isUnsigned: true)
!760 = !DIEnumerator(name: "TV_TREE_CLEANUP_CFG", value: 51, isUnsigned: true)
!761 = !DIEnumerator(name: "TV_TREE_VRP", value: 52, isUnsigned: true)
!762 = !DIEnumerator(name: "TV_TREE_COPY_PROP", value: 53, isUnsigned: true)
!763 = !DIEnumerator(name: "TV_TREE_STORE_COPY_PROP", value: 54, isUnsigned: true)
!764 = !DIEnumerator(name: "TV_FIND_REFERENCED_VARS", value: 55, isUnsigned: true)
!765 = !DIEnumerator(name: "TV_TREE_PTA", value: 56, isUnsigned: true)
!766 = !DIEnumerator(name: "TV_TREE_INSERT_PHI_NODES", value: 57, isUnsigned: true)
!767 = !DIEnumerator(name: "TV_TREE_SSA_REWRITE_BLOCKS", value: 58, isUnsigned: true)
!768 = !DIEnumerator(name: "TV_TREE_SSA_OTHER", value: 59, isUnsigned: true)
!769 = !DIEnumerator(name: "TV_TREE_SSA_INCREMENTAL", value: 60, isUnsigned: true)
!770 = !DIEnumerator(name: "TV_TREE_OPS", value: 61, isUnsigned: true)
!771 = !DIEnumerator(name: "TV_TREE_SSA_DOMINATOR_OPTS", value: 62, isUnsigned: true)
!772 = !DIEnumerator(name: "TV_TREE_SRA", value: 63, isUnsigned: true)
!773 = !DIEnumerator(name: "TV_TREE_STORE_CCP", value: 64, isUnsigned: true)
!774 = !DIEnumerator(name: "TV_TREE_CCP", value: 65, isUnsigned: true)
!775 = !DIEnumerator(name: "TV_TREE_PHI_CPROP", value: 66, isUnsigned: true)
!776 = !DIEnumerator(name: "TV_TREE_SPLIT_EDGES", value: 67, isUnsigned: true)
!777 = !DIEnumerator(name: "TV_TREE_REASSOC", value: 68, isUnsigned: true)
!778 = !DIEnumerator(name: "TV_TREE_PRE", value: 69, isUnsigned: true)
!779 = !DIEnumerator(name: "TV_TREE_REDPHI", value: 70, isUnsigned: true)
!780 = !DIEnumerator(name: "TV_TREE_FRE", value: 71, isUnsigned: true)
!781 = !DIEnumerator(name: "TV_TREE_SINK", value: 72, isUnsigned: true)
!782 = !DIEnumerator(name: "TV_TREE_PHIOPT", value: 73, isUnsigned: true)
!783 = !DIEnumerator(name: "TV_TREE_FORWPROP", value: 74, isUnsigned: true)
!784 = !DIEnumerator(name: "TV_TREE_PHIPROP", value: 75, isUnsigned: true)
!785 = !DIEnumerator(name: "TV_TREE_DCE", value: 76, isUnsigned: true)
!786 = !DIEnumerator(name: "TV_TREE_CD_DCE", value: 77, isUnsigned: true)
!787 = !DIEnumerator(name: "TV_TREE_CALL_CDCE", value: 78, isUnsigned: true)
!788 = !DIEnumerator(name: "TV_TREE_DSE", value: 79, isUnsigned: true)
!789 = !DIEnumerator(name: "TV_TREE_MERGE_PHI", value: 80, isUnsigned: true)
!790 = !DIEnumerator(name: "TV_TREE_LOOP", value: 81, isUnsigned: true)
!791 = !DIEnumerator(name: "TV_TREE_LOOP_BOUNDS", value: 82, isUnsigned: true)
!792 = !DIEnumerator(name: "TV_LIM", value: 83, isUnsigned: true)
!793 = !DIEnumerator(name: "TV_TREE_LOOP_IVCANON", value: 84, isUnsigned: true)
!794 = !DIEnumerator(name: "TV_SCEV_CONST", value: 85, isUnsigned: true)
!795 = !DIEnumerator(name: "TV_TREE_LOOP_UNSWITCH", value: 86, isUnsigned: true)
!796 = !DIEnumerator(name: "TV_COMPLETE_UNROLL", value: 87, isUnsigned: true)
!797 = !DIEnumerator(name: "TV_TREE_PARALLELIZE_LOOPS", value: 88, isUnsigned: true)
!798 = !DIEnumerator(name: "TV_TREE_VECTORIZATION", value: 89, isUnsigned: true)
!799 = !DIEnumerator(name: "TV_TREE_SLP_VECTORIZATION", value: 90, isUnsigned: true)
!800 = !DIEnumerator(name: "TV_GRAPHITE_TRANSFORMS", value: 91, isUnsigned: true)
!801 = !DIEnumerator(name: "TV_GRAPHITE_DATA_DEPS", value: 92, isUnsigned: true)
!802 = !DIEnumerator(name: "TV_GRAPHITE_CODE_GEN", value: 93, isUnsigned: true)
!803 = !DIEnumerator(name: "TV_TREE_LINEAR_TRANSFORM", value: 94, isUnsigned: true)
!804 = !DIEnumerator(name: "TV_TREE_LOOP_DISTRIBUTION", value: 95, isUnsigned: true)
!805 = !DIEnumerator(name: "TV_CHECK_DATA_DEPS", value: 96, isUnsigned: true)
!806 = !DIEnumerator(name: "TV_TREE_PREFETCH", value: 97, isUnsigned: true)
!807 = !DIEnumerator(name: "TV_TREE_LOOP_IVOPTS", value: 98, isUnsigned: true)
!808 = !DIEnumerator(name: "TV_PREDCOM", value: 99, isUnsigned: true)
!809 = !DIEnumerator(name: "TV_TREE_LOOP_INIT", value: 100, isUnsigned: true)
!810 = !DIEnumerator(name: "TV_TREE_LOOP_FINI", value: 101, isUnsigned: true)
!811 = !DIEnumerator(name: "TV_TREE_CH", value: 102, isUnsigned: true)
!812 = !DIEnumerator(name: "TV_TREE_SSA_UNCPROP", value: 103, isUnsigned: true)
!813 = !DIEnumerator(name: "TV_TREE_SSA_TO_NORMAL", value: 104, isUnsigned: true)
!814 = !DIEnumerator(name: "TV_TREE_NRV", value: 105, isUnsigned: true)
!815 = !DIEnumerator(name: "TV_TREE_COPY_RENAME", value: 106, isUnsigned: true)
!816 = !DIEnumerator(name: "TV_TREE_SSA_VERIFY", value: 107, isUnsigned: true)
!817 = !DIEnumerator(name: "TV_TREE_STMT_VERIFY", value: 108, isUnsigned: true)
!818 = !DIEnumerator(name: "TV_TREE_SWITCH_CONVERSION", value: 109, isUnsigned: true)
!819 = !DIEnumerator(name: "TV_CGRAPH_VERIFY", value: 110, isUnsigned: true)
!820 = !DIEnumerator(name: "TV_DOM_FRONTIERS", value: 111, isUnsigned: true)
!821 = !DIEnumerator(name: "TV_DOMINANCE", value: 112, isUnsigned: true)
!822 = !DIEnumerator(name: "TV_CONTROL_DEPENDENCES", value: 113, isUnsigned: true)
!823 = !DIEnumerator(name: "TV_OVERLOAD", value: 114, isUnsigned: true)
!824 = !DIEnumerator(name: "TV_TEMPLATE_INSTANTIATION", value: 115, isUnsigned: true)
!825 = !DIEnumerator(name: "TV_EXPAND", value: 116, isUnsigned: true)
!826 = !DIEnumerator(name: "TV_VARCONST", value: 117, isUnsigned: true)
!827 = !DIEnumerator(name: "TV_LOWER_SUBREG", value: 118, isUnsigned: true)
!828 = !DIEnumerator(name: "TV_JUMP", value: 119, isUnsigned: true)
!829 = !DIEnumerator(name: "TV_FWPROP", value: 120, isUnsigned: true)
!830 = !DIEnumerator(name: "TV_CSE", value: 121, isUnsigned: true)
!831 = !DIEnumerator(name: "TV_DCE", value: 122, isUnsigned: true)
!832 = !DIEnumerator(name: "TV_DSE1", value: 123, isUnsigned: true)
!833 = !DIEnumerator(name: "TV_DSE2", value: 124, isUnsigned: true)
!834 = !DIEnumerator(name: "TV_LOOP", value: 125, isUnsigned: true)
!835 = !DIEnumerator(name: "TV_LOOP_MOVE_INVARIANTS", value: 126, isUnsigned: true)
!836 = !DIEnumerator(name: "TV_LOOP_UNSWITCH", value: 127, isUnsigned: true)
!837 = !DIEnumerator(name: "TV_LOOP_UNROLL", value: 128, isUnsigned: true)
!838 = !DIEnumerator(name: "TV_LOOP_DOLOOP", value: 129, isUnsigned: true)
!839 = !DIEnumerator(name: "TV_CPROP", value: 130, isUnsigned: true)
!840 = !DIEnumerator(name: "TV_PRE", value: 131, isUnsigned: true)
!841 = !DIEnumerator(name: "TV_HOIST", value: 132, isUnsigned: true)
!842 = !DIEnumerator(name: "TV_LSM", value: 133, isUnsigned: true)
!843 = !DIEnumerator(name: "TV_TRACER", value: 134, isUnsigned: true)
!844 = !DIEnumerator(name: "TV_WEB", value: 135, isUnsigned: true)
!845 = !DIEnumerator(name: "TV_AUTO_INC_DEC", value: 136, isUnsigned: true)
!846 = !DIEnumerator(name: "TV_CSE2", value: 137, isUnsigned: true)
!847 = !DIEnumerator(name: "TV_BRANCH_PROB", value: 138, isUnsigned: true)
!848 = !DIEnumerator(name: "TV_VPT", value: 139, isUnsigned: true)
!849 = !DIEnumerator(name: "TV_COMBINE", value: 140, isUnsigned: true)
!850 = !DIEnumerator(name: "TV_IFCVT", value: 141, isUnsigned: true)
!851 = !DIEnumerator(name: "TV_REGMOVE", value: 142, isUnsigned: true)
!852 = !DIEnumerator(name: "TV_MODE_SWITCH", value: 143, isUnsigned: true)
!853 = !DIEnumerator(name: "TV_SMS", value: 144, isUnsigned: true)
!854 = !DIEnumerator(name: "TV_SCHED", value: 145, isUnsigned: true)
!855 = !DIEnumerator(name: "TV_LOCAL_ALLOC", value: 146, isUnsigned: true)
!856 = !DIEnumerator(name: "TV_GLOBAL_ALLOC", value: 147, isUnsigned: true)
!857 = !DIEnumerator(name: "TV_IRA", value: 148, isUnsigned: true)
!858 = !DIEnumerator(name: "TV_RELOAD", value: 149, isUnsigned: true)
!859 = !DIEnumerator(name: "TV_RELOAD_CSE_REGS", value: 150, isUnsigned: true)
!860 = !DIEnumerator(name: "TV_SEQABSTR", value: 151, isUnsigned: true)
!861 = !DIEnumerator(name: "TV_GCSE_AFTER_RELOAD", value: 152, isUnsigned: true)
!862 = !DIEnumerator(name: "TV_THREAD_PROLOGUE_AND_EPILOGUE", value: 153, isUnsigned: true)
!863 = !DIEnumerator(name: "TV_IFCVT2", value: 154, isUnsigned: true)
!864 = !DIEnumerator(name: "TV_COMBINE_STACK_ADJUST", value: 155, isUnsigned: true)
!865 = !DIEnumerator(name: "TV_PEEPHOLE2", value: 156, isUnsigned: true)
!866 = !DIEnumerator(name: "TV_RENAME_REGISTERS", value: 157, isUnsigned: true)
!867 = !DIEnumerator(name: "TV_CPROP_REGISTERS", value: 158, isUnsigned: true)
!868 = !DIEnumerator(name: "TV_SCHED2", value: 159, isUnsigned: true)
!869 = !DIEnumerator(name: "TV_MACH_DEP", value: 160, isUnsigned: true)
!870 = !DIEnumerator(name: "TV_DBR_SCHED", value: 161, isUnsigned: true)
!871 = !DIEnumerator(name: "TV_REORDER_BLOCKS", value: 162, isUnsigned: true)
!872 = !DIEnumerator(name: "TV_SHORTEN_BRANCH", value: 163, isUnsigned: true)
!873 = !DIEnumerator(name: "TV_REG_STACK", value: 164, isUnsigned: true)
!874 = !DIEnumerator(name: "TV_FINAL", value: 165, isUnsigned: true)
!875 = !DIEnumerator(name: "TV_SYMOUT", value: 166, isUnsigned: true)
!876 = !DIEnumerator(name: "TV_VAR_TRACKING", value: 167, isUnsigned: true)
!877 = !DIEnumerator(name: "TV_TREE_IFCOMBINE", value: 168, isUnsigned: true)
!878 = !DIEnumerator(name: "TV_PLUGIN_INIT", value: 169, isUnsigned: true)
!879 = !DIEnumerator(name: "TV_PLUGIN_RUN", value: 170, isUnsigned: true)
!880 = !DIEnumerator(name: "TV_REST_OF_COMPILATION", value: 171, isUnsigned: true)
!881 = !DIEnumerator(name: "TIMEVAR_LAST", value: 172, isUnsigned: true)
!882 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "extraction_pattern", file: !883, line: 798, baseType: !7, size: 32, elements: !884)
!883 = !DIFile(filename: "./expr.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!884 = !{!885, !886, !887}
!885 = !DIEnumerator(name: "EP_insv", value: 0, isUnsigned: true)
!886 = !DIEnumerator(name: "EP_extv", value: 1, isUnsigned: true)
!887 = !DIEnumerator(name: "EP_extzv", value: 2, isUnsigned: true)
!888 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "df_changeable_flags", file: !889, line: 463, baseType: !7, size: 32, elements: !890)
!889 = !DIFile(filename: "./df.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!890 = !{!891, !892, !893, !894, !895, !896, !897}
!891 = !DIEnumerator(name: "DF_LR_RUN_DCE", value: 1, isUnsigned: true)
!892 = !DIEnumerator(name: "DF_NO_HARD_REGS", value: 2, isUnsigned: true)
!893 = !DIEnumerator(name: "DF_EQ_NOTES", value: 4, isUnsigned: true)
!894 = !DIEnumerator(name: "DF_NO_REGS_EVER_LIVE", value: 8, isUnsigned: true)
!895 = !DIEnumerator(name: "DF_NO_INSN_RESCAN", value: 16, isUnsigned: true)
!896 = !DIEnumerator(name: "DF_DEFER_INSN_RESCAN", value: 32, isUnsigned: true)
!897 = !DIEnumerator(name: "DF_VERIFY_SCHEDULED", value: 64, isUnsigned: true)
!898 = !{!899, !1977, !924, !377, !900, !5, !1022, !1012, !183, !572, !606, !1978, !902, !1979, !927, !1981, !1983, !1992, !7, !974, !1998, !1999}
!899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !900, size: 64)
!900 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtx", file: !901, line: 50, baseType: !902)
!901 = !DIFile(filename: "./coretypes.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!902 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !903, size: 64)
!903 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtx_def", file: !378, line: 240, size: 384, elements: !904)
!904 = !{!905, !906, !907, !908, !909, !910, !911, !912, !913, !914, !915}
!905 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !903, file: !378, line: 242, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !903, file: !378, line: 245, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "jump", scope: !903, file: !378, line: 252, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !903, file: !378, line: 257, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "unchanging", scope: !903, file: !378, line: 265, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "volatil", scope: !903, file: !378, line: 277, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "in_struct", scope: !903, file: !378, line: 291, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "used", scope: !903, file: !378, line: 298, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "frame_related", scope: !903, file: !378, line: 305, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "return_val", scope: !903, file: !378, line: 310, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "u", scope: !903, file: !378, line: 321, baseType: !916, size: 320, offset: 64)
!916 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "u", file: !378, line: 315, size: 320, elements: !917)
!917 = !{!918, !1912, !1914, !1975, !1976}
!918 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !916, file: !378, line: 316, baseType: !919, size: 64)
!919 = !DICompositeType(tag: DW_TAG_array_type, baseType: !920, size: 64, elements: !939)
!920 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtunion", file: !378, line: 183, baseType: !921)
!921 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "rtunion_def", file: !378, line: 166, size: 64, elements: !922)
!922 = !{!923, !925, !926, !930, !931, !941, !942, !954, !957, !1021, !1890, !1891, !1902, !1909}
!923 = !DIDerivedType(tag: DW_TAG_member, name: "rt_int", scope: !921, file: !378, line: 168, baseType: !924, size: 32)
!924 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "rt_uint", scope: !921, file: !378, line: 169, baseType: !7, size: 32)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "rt_str", scope: !921, file: !378, line: 170, baseType: !927, size: 64)
!927 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !928, size: 64)
!928 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !929)
!929 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtx", scope: !921, file: !378, line: 171, baseType: !900, size: 64)
!931 = !DIDerivedType(tag: DW_TAG_member, name: "rt_rtvec", scope: !921, file: !378, line: 172, baseType: !932, size: 64)
!932 = !DIDerivedType(tag: DW_TAG_typedef, name: "rtvec", file: !901, line: 53, baseType: !933)
!933 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !934, size: 64)
!934 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtvec_def", file: !378, line: 359, size: 128, elements: !935)
!935 = !{!936, !937}
!936 = !DIDerivedType(tag: DW_TAG_member, name: "num_elem", scope: !934, file: !378, line: 360, baseType: !924, size: 32)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !934, file: !378, line: 361, baseType: !938, size: 64, offset: 64)
!938 = !DICompositeType(tag: DW_TAG_array_type, baseType: !900, size: 64, elements: !939)
!939 = !{!940}
!940 = !DISubrange(count: 1)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "rt_type", scope: !921, file: !378, line: 173, baseType: !5, size: 32)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "rt_addr_diff_vec_flags", scope: !921, file: !378, line: 174, baseType: !943, size: 32)
!943 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr_diff_vec_flags", file: !378, line: 133, baseType: !944)
!944 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !378, line: 115, size: 32, elements: !945)
!945 = !{!946, !947, !948, !949, !950, !951, !952, !953}
!946 = !DIDerivedType(tag: DW_TAG_member, name: "min_align", scope: !944, file: !378, line: 118, baseType: !7, size: 8, flags: DIFlagBitField, extraData: i64 0)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "base_after_vec", scope: !944, file: !378, line: 120, baseType: !7, size: 1, offset: 8, flags: DIFlagBitField, extraData: i64 0)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_vec", scope: !944, file: !378, line: 121, baseType: !7, size: 1, offset: 9, flags: DIFlagBitField, extraData: i64 0)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_vec", scope: !944, file: !378, line: 123, baseType: !7, size: 1, offset: 10, flags: DIFlagBitField, extraData: i64 0)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "min_after_base", scope: !944, file: !378, line: 125, baseType: !7, size: 1, offset: 11, flags: DIFlagBitField, extraData: i64 0)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "max_after_base", scope: !944, file: !378, line: 127, baseType: !7, size: 1, offset: 12, flags: DIFlagBitField, extraData: i64 0)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "offset_unsigned", scope: !944, file: !378, line: 130, baseType: !7, size: 1, offset: 13, flags: DIFlagBitField, extraData: i64 0)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !944, file: !378, line: 132, baseType: !7, size: 8, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "rt_cselib", scope: !921, file: !378, line: 175, baseType: !955, size: 64)
!955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !956, size: 64)
!956 = !DICompositeType(tag: DW_TAG_structure_type, name: "cselib_val_struct", file: !378, line: 175, flags: DIFlagFwdDecl)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bit", scope: !921, file: !378, line: 176, baseType: !958, size: 64)
!958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !959, size: 64)
!959 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_head_def", file: !960, line: 75, size: 256, elements: !961)
!960 = !DIFile(filename: "./bitmap.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!961 = !{!962, !977, !978, !979}
!962 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !959, file: !960, line: 76, baseType: !963, size: 64)
!963 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !964, size: 64)
!964 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_element", file: !960, line: 68, baseType: !965)
!965 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_element_def", file: !960, line: 63, size: 320, elements: !966)
!966 = !{!967, !969, !970, !971}
!967 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !965, file: !960, line: 64, baseType: !968, size: 64)
!968 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !965, size: 64)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !965, file: !960, line: 65, baseType: !968, size: 64, offset: 64)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !965, file: !960, line: 66, baseType: !7, size: 32, offset: 128)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "bits", scope: !965, file: !960, line: 67, baseType: !972, size: 128, offset: 192)
!972 = !DICompositeType(tag: DW_TAG_array_type, baseType: !973, size: 128, elements: !975)
!973 = !DIDerivedType(tag: DW_TAG_typedef, name: "BITMAP_WORD", file: !960, line: 29, baseType: !974)
!974 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!975 = !{!976}
!976 = !DISubrange(count: 2)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "current", scope: !959, file: !960, line: 77, baseType: !963, size: 64, offset: 64)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "indx", scope: !959, file: !960, line: 78, baseType: !7, size: 32, offset: 128)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !959, file: !960, line: 79, baseType: !980, size: 64, offset: 192)
!980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !981, size: 64)
!981 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap_obstack", file: !960, line: 49, baseType: !982)
!982 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bitmap_obstack", file: !960, line: 45, size: 832, elements: !983)
!983 = !{!984, !985, !986}
!984 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !982, file: !960, line: 46, baseType: !968, size: 64)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "heads", scope: !982, file: !960, line: 47, baseType: !958, size: 64, offset: 64)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "obstack", scope: !982, file: !960, line: 48, baseType: !987, size: 704, offset: 128)
!987 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "obstack", file: !988, line: 164, size: 704, elements: !989)
!988 = !DIFile(filename: "./include/obstack.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!989 = !{!990, !992, !1003, !1004, !1005, !1006, !1007, !1008, !1013, !1017, !1018, !1019, !1020}
!990 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_size", scope: !987, file: !988, line: 166, baseType: !991, size: 64)
!991 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "chunk", scope: !987, file: !988, line: 167, baseType: !993, size: 64, offset: 64)
!993 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !994, size: 64)
!994 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_obstack_chunk", file: !988, line: 157, size: 192, elements: !995)
!995 = !{!996, !998, !999}
!996 = !DIDerivedType(tag: DW_TAG_member, name: "limit", scope: !994, file: !988, line: 159, baseType: !997, size: 64)
!997 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !929, size: 64)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !994, file: !988, line: 160, baseType: !993, size: 64, offset: 64)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "contents", scope: !994, file: !988, line: 161, baseType: !1000, size: 32, offset: 128)
!1000 = !DICompositeType(tag: DW_TAG_array_type, baseType: !929, size: 32, elements: !1001)
!1001 = !{!1002}
!1002 = !DISubrange(count: 4)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "object_base", scope: !987, file: !988, line: 168, baseType: !997, size: 64, offset: 128)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "next_free", scope: !987, file: !988, line: 169, baseType: !997, size: 64, offset: 192)
!1005 = !DIDerivedType(tag: DW_TAG_member, name: "chunk_limit", scope: !987, file: !988, line: 170, baseType: !997, size: 64, offset: 256)
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !987, file: !988, line: 171, baseType: !991, size: 64, offset: 320)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "alignment_mask", scope: !987, file: !988, line: 172, baseType: !924, size: 32, offset: 384)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "chunkfun", scope: !987, file: !988, line: 176, baseType: !1009, size: 64, offset: 448)
!1009 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1010, size: 64)
!1010 = !DISubroutineType(types: !1011)
!1011 = !{!993, !1012, !991}
!1012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "freefun", scope: !987, file: !988, line: 177, baseType: !1014, size: 64, offset: 512)
!1014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1015, size: 64)
!1015 = !DISubroutineType(types: !1016)
!1016 = !{null, !1012, !993}
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "extra_arg", scope: !987, file: !988, line: 178, baseType: !1012, size: 64, offset: 576)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "use_extra_arg", scope: !987, file: !988, line: 179, baseType: !7, size: 1, offset: 640, flags: DIFlagBitField, extraData: i64 640)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "maybe_empty_object", scope: !987, file: !988, line: 180, baseType: !7, size: 1, offset: 641, flags: DIFlagBitField, extraData: i64 640)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_failed", scope: !987, file: !988, line: 184, baseType: !7, size: 1, offset: 642, flags: DIFlagBitField, extraData: i64 640)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "rt_tree", scope: !921, file: !378, line: 177, baseType: !1022, size: 64)
!1022 = !DIDerivedType(tag: DW_TAG_typedef, name: "tree", file: !901, line: 56, baseType: !1023)
!1023 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1024, size: 64)
!1024 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_node", file: !151, line: 3371, size: 1792, elements: !1025)
!1025 = !{!1026, !1059, !1065, !1076, !1095, !1106, !1111, !1118, !1124, !1138, !1150, !1188, !1193, !1221, !1229, !1230, !1235, !1244, !1250, !1255, !1259, !1263, !1514, !1563, !1569, !1576, !1583, !1609, !1634, !1651, !1663, !1685, !1700, !1872}
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1024, file: !151, line: 3372, baseType: !1027, size: 64)
!1027 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_base", file: !151, line: 360, size: 64, elements: !1028)
!1028 = !{!1029, !1030, !1031, !1032, !1033, !1034, !1035, !1036, !1037, !1038, !1039, !1040, !1041, !1042, !1043, !1044, !1045, !1046, !1047, !1048, !1049, !1050, !1051, !1052, !1053, !1054, !1055, !1056, !1057, !1058}
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1027, file: !151, line: 361, baseType: !7, size: 16, flags: DIFlagBitField, extraData: i64 0)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "side_effects_flag", scope: !1027, file: !151, line: 363, baseType: !7, size: 1, offset: 16, flags: DIFlagBitField, extraData: i64 0)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "constant_flag", scope: !1027, file: !151, line: 364, baseType: !7, size: 1, offset: 17, flags: DIFlagBitField, extraData: i64 0)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "addressable_flag", scope: !1027, file: !151, line: 365, baseType: !7, size: 1, offset: 18, flags: DIFlagBitField, extraData: i64 0)
!1033 = !DIDerivedType(tag: DW_TAG_member, name: "volatile_flag", scope: !1027, file: !151, line: 366, baseType: !7, size: 1, offset: 19, flags: DIFlagBitField, extraData: i64 0)
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "readonly_flag", scope: !1027, file: !151, line: 367, baseType: !7, size: 1, offset: 20, flags: DIFlagBitField, extraData: i64 0)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "unsigned_flag", scope: !1027, file: !151, line: 368, baseType: !7, size: 1, offset: 21, flags: DIFlagBitField, extraData: i64 0)
!1036 = !DIDerivedType(tag: DW_TAG_member, name: "asm_written_flag", scope: !1027, file: !151, line: 369, baseType: !7, size: 1, offset: 22, flags: DIFlagBitField, extraData: i64 0)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "nowarning_flag", scope: !1027, file: !151, line: 370, baseType: !7, size: 1, offset: 23, flags: DIFlagBitField, extraData: i64 0)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "used_flag", scope: !1027, file: !151, line: 372, baseType: !7, size: 1, offset: 24, flags: DIFlagBitField, extraData: i64 0)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "nothrow_flag", scope: !1027, file: !151, line: 373, baseType: !7, size: 1, offset: 25, flags: DIFlagBitField, extraData: i64 0)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "static_flag", scope: !1027, file: !151, line: 374, baseType: !7, size: 1, offset: 26, flags: DIFlagBitField, extraData: i64 0)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "public_flag", scope: !1027, file: !151, line: 375, baseType: !7, size: 1, offset: 27, flags: DIFlagBitField, extraData: i64 0)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "private_flag", scope: !1027, file: !151, line: 376, baseType: !7, size: 1, offset: 28, flags: DIFlagBitField, extraData: i64 0)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "protected_flag", scope: !1027, file: !151, line: 377, baseType: !7, size: 1, offset: 29, flags: DIFlagBitField, extraData: i64 0)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "deprecated_flag", scope: !1027, file: !151, line: 378, baseType: !7, size: 1, offset: 30, flags: DIFlagBitField, extraData: i64 0)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "saturating_flag", scope: !1027, file: !151, line: 379, baseType: !7, size: 1, offset: 31, flags: DIFlagBitField, extraData: i64 0)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "default_def_flag", scope: !1027, file: !151, line: 381, baseType: !7, size: 1, offset: 32, flags: DIFlagBitField, extraData: i64 0)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1027, file: !151, line: 382, baseType: !7, size: 1, offset: 33, flags: DIFlagBitField, extraData: i64 0)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1027, file: !151, line: 383, baseType: !7, size: 1, offset: 34, flags: DIFlagBitField, extraData: i64 0)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1027, file: !151, line: 384, baseType: !7, size: 1, offset: 35, flags: DIFlagBitField, extraData: i64 0)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1027, file: !151, line: 385, baseType: !7, size: 1, offset: 36, flags: DIFlagBitField, extraData: i64 0)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1027, file: !151, line: 386, baseType: !7, size: 1, offset: 37, flags: DIFlagBitField, extraData: i64 0)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1027, file: !151, line: 387, baseType: !7, size: 1, offset: 38, flags: DIFlagBitField, extraData: i64 0)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1027, file: !151, line: 388, baseType: !7, size: 1, offset: 39, flags: DIFlagBitField, extraData: i64 0)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !1027, file: !151, line: 390, baseType: !7, size: 1, offset: 40, flags: DIFlagBitField, extraData: i64 0)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "packed_flag", scope: !1027, file: !151, line: 391, baseType: !7, size: 1, offset: 41, flags: DIFlagBitField, extraData: i64 0)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "user_align", scope: !1027, file: !151, line: 392, baseType: !7, size: 1, offset: 42, flags: DIFlagBitField, extraData: i64 0)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "spare", scope: !1027, file: !151, line: 394, baseType: !7, size: 13, offset: 43, flags: DIFlagBitField, extraData: i64 0)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "address_space", scope: !1027, file: !151, line: 399, baseType: !7, size: 8, offset: 56, flags: DIFlagBitField, extraData: i64 0)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1024, file: !151, line: 3373, baseType: !1060, size: 192)
!1060 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_common", file: !151, line: 402, size: 192, elements: !1061)
!1061 = !{!1062, !1063, !1064}
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1060, file: !151, line: 403, baseType: !1027, size: 64)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "chain", scope: !1060, file: !151, line: 404, baseType: !1022, size: 64, offset: 64)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1060, file: !151, line: 405, baseType: !1022, size: 64, offset: 128)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !1024, file: !151, line: 3374, baseType: !1066, size: 320)
!1066 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_int_cst", file: !151, line: 1384, size: 320, elements: !1067)
!1067 = !{!1068, !1069}
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1066, file: !151, line: 1385, baseType: !1060, size: 192)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "int_cst", scope: !1066, file: !151, line: 1386, baseType: !1070, size: 128, offset: 192)
!1070 = !DIDerivedType(tag: DW_TAG_typedef, name: "double_int", file: !1071, line: 58, baseType: !1072)
!1071 = !DIFile(filename: "./double-int.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1072 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1071, line: 54, size: 128, elements: !1073)
!1073 = !{!1074, !1075}
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "low", scope: !1072, file: !1071, line: 56, baseType: !974, size: 64)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "high", scope: !1072, file: !1071, line: 57, baseType: !991, size: 64, offset: 64)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst", scope: !1024, file: !151, line: 3375, baseType: !1077, size: 256)
!1077 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_real_cst", file: !151, line: 1397, size: 256, elements: !1078)
!1078 = !{!1079, !1080}
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1077, file: !151, line: 1398, baseType: !1060, size: 192)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "real_cst_ptr", scope: !1077, file: !151, line: 1399, baseType: !1081, size: 64, offset: 192)
!1081 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1082, size: 64)
!1082 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "real_value", file: !1083, line: 52, size: 256, elements: !1084)
!1083 = !DIFile(filename: "./real.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1084 = !{!1085, !1086, !1087, !1088, !1089, !1090, !1091}
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "cl", scope: !1082, file: !1083, line: 56, baseType: !7, size: 2, flags: DIFlagBitField, extraData: i64 0)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "decimal", scope: !1082, file: !1083, line: 57, baseType: !7, size: 1, offset: 2, flags: DIFlagBitField, extraData: i64 0)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "sign", scope: !1082, file: !1083, line: 58, baseType: !7, size: 1, offset: 3, flags: DIFlagBitField, extraData: i64 0)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "signalling", scope: !1082, file: !1083, line: 59, baseType: !7, size: 1, offset: 4, flags: DIFlagBitField, extraData: i64 0)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !1082, file: !1083, line: 60, baseType: !7, size: 1, offset: 5, flags: DIFlagBitField, extraData: i64 0)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "uexp", scope: !1082, file: !1083, line: 61, baseType: !7, size: 26, offset: 6, flags: DIFlagBitField, extraData: i64 0)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "sig", scope: !1082, file: !1083, line: 62, baseType: !1092, size: 192, offset: 64)
!1092 = !DICompositeType(tag: DW_TAG_array_type, baseType: !974, size: 192, elements: !1093)
!1093 = !{!1094}
!1094 = !DISubrange(count: 3)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst", scope: !1024, file: !151, line: 3376, baseType: !1096, size: 256)
!1096 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_fixed_cst", file: !151, line: 1408, size: 256, elements: !1097)
!1097 = !{!1098, !1099}
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1096, file: !151, line: 1409, baseType: !1060, size: 192)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "fixed_cst_ptr", scope: !1096, file: !151, line: 1410, baseType: !1100, size: 64, offset: 192)
!1100 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1101, size: 64)
!1101 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "fixed_value", file: !1102, line: 27, size: 192, elements: !1103)
!1102 = !DIFile(filename: "./fixed-value.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1103 = !{!1104, !1105}
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1101, file: !1102, line: 29, baseType: !1070, size: 128)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1101, file: !1102, line: 30, baseType: !5, size: 32, offset: 128)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "vector", scope: !1024, file: !151, line: 3377, baseType: !1107, size: 256)
!1107 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vector", file: !151, line: 1437, size: 256, elements: !1108)
!1108 = !{!1109, !1110}
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1107, file: !151, line: 1438, baseType: !1060, size: 192)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "elements", scope: !1107, file: !151, line: 1439, baseType: !1022, size: 64, offset: 192)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !1024, file: !151, line: 3378, baseType: !1112, size: 256)
!1112 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_string", file: !151, line: 1418, size: 256, elements: !1113)
!1113 = !{!1114, !1115, !1116}
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1112, file: !151, line: 1419, baseType: !1060, size: 192)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1112, file: !151, line: 1420, baseType: !924, size: 32, offset: 192)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1112, file: !151, line: 1421, baseType: !1117, size: 8, offset: 224)
!1117 = !DICompositeType(tag: DW_TAG_array_type, baseType: !929, size: 8, elements: !939)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "complex", scope: !1024, file: !151, line: 3379, baseType: !1119, size: 320)
!1119 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_complex", file: !151, line: 1428, size: 320, elements: !1120)
!1120 = !{!1121, !1122, !1123}
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1119, file: !151, line: 1429, baseType: !1060, size: 192)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "real", scope: !1119, file: !151, line: 1430, baseType: !1022, size: 64, offset: 192)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "imag", scope: !1119, file: !151, line: 1431, baseType: !1022, size: 64, offset: 256)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "identifier", scope: !1024, file: !151, line: 3380, baseType: !1125, size: 320)
!1125 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_identifier", file: !151, line: 1460, size: 320, elements: !1126)
!1126 = !{!1127, !1128}
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1125, file: !151, line: 1461, baseType: !1060, size: 192)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1125, file: !151, line: 1462, baseType: !1129, size: 128, offset: 192)
!1129 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ht_identifier", file: !1130, line: 31, size: 128, elements: !1131)
!1130 = !DIFile(filename: "./symtab.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1131 = !{!1132, !1136, !1137}
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !1129, file: !1130, line: 32, baseType: !1133, size: 64)
!1133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1134, size: 64)
!1134 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1135)
!1135 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1129, file: !1130, line: 33, baseType: !7, size: 32, offset: 64)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "hash_value", scope: !1129, file: !1130, line: 34, baseType: !7, size: 32, offset: 96)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "decl_minimal", scope: !1024, file: !151, line: 3381, baseType: !1139, size: 384)
!1139 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_minimal", file: !151, line: 2507, size: 384, elements: !1140)
!1140 = !{!1141, !1142, !1147, !1148, !1149}
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1139, file: !151, line: 2508, baseType: !1060, size: 192)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1139, file: !151, line: 2509, baseType: !1143, size: 32, offset: 192)
!1143 = !DIDerivedType(tag: DW_TAG_typedef, name: "location_t", file: !1144, line: 58, baseType: !1145)
!1144 = !DIFile(filename: "./input.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1145 = !DIDerivedType(tag: DW_TAG_typedef, name: "source_location", file: !1146, line: 44, baseType: !7)
!1146 = !DIFile(filename: "./line-map.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1139, file: !151, line: 2510, baseType: !7, size: 32, offset: 224)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1139, file: !151, line: 2511, baseType: !1022, size: 64, offset: 256)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1139, file: !151, line: 2512, baseType: !1022, size: 64, offset: 320)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common", scope: !1024, file: !151, line: 3382, baseType: !1151, size: 896)
!1151 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_common", file: !151, line: 2652, size: 896, elements: !1152)
!1152 = !{!1153, !1154, !1155, !1156, !1157, !1158, !1159, !1160, !1161, !1162, !1163, !1164, !1165, !1166, !1167, !1168, !1169, !1170, !1171, !1172, !1173, !1174, !1175, !1176, !1177, !1178, !1179, !1180, !1181, !1182, !1183, !1184, !1185}
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1151, file: !151, line: 2653, baseType: !1139, size: 384)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1151, file: !151, line: 2654, baseType: !1022, size: 64, offset: 384)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1151, file: !151, line: 2656, baseType: !7, size: 8, offset: 448, flags: DIFlagBitField, extraData: i64 448)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_flag", scope: !1151, file: !151, line: 2658, baseType: !7, size: 1, offset: 456, flags: DIFlagBitField, extraData: i64 448)
!1157 = !DIDerivedType(tag: DW_TAG_member, name: "virtual_flag", scope: !1151, file: !151, line: 2659, baseType: !7, size: 1, offset: 457, flags: DIFlagBitField, extraData: i64 448)
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "ignored_flag", scope: !1151, file: !151, line: 2660, baseType: !7, size: 1, offset: 458, flags: DIFlagBitField, extraData: i64 448)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !1151, file: !151, line: 2661, baseType: !7, size: 1, offset: 459, flags: DIFlagBitField, extraData: i64 448)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "artificial_flag", scope: !1151, file: !151, line: 2662, baseType: !7, size: 1, offset: 460, flags: DIFlagBitField, extraData: i64 448)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "preserve_flag", scope: !1151, file: !151, line: 2663, baseType: !7, size: 1, offset: 461, flags: DIFlagBitField, extraData: i64 448)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "debug_expr_is_from", scope: !1151, file: !151, line: 2664, baseType: !7, size: 1, offset: 462, flags: DIFlagBitField, extraData: i64 448)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1151, file: !151, line: 2666, baseType: !7, size: 1, offset: 463, flags: DIFlagBitField, extraData: i64 448)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1151, file: !151, line: 2667, baseType: !7, size: 1, offset: 464, flags: DIFlagBitField, extraData: i64 448)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1151, file: !151, line: 2668, baseType: !7, size: 1, offset: 465, flags: DIFlagBitField, extraData: i64 448)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1151, file: !151, line: 2669, baseType: !7, size: 1, offset: 466, flags: DIFlagBitField, extraData: i64 448)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1151, file: !151, line: 2670, baseType: !7, size: 1, offset: 467, flags: DIFlagBitField, extraData: i64 448)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1151, file: !151, line: 2671, baseType: !7, size: 1, offset: 468, flags: DIFlagBitField, extraData: i64 448)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1151, file: !151, line: 2672, baseType: !7, size: 1, offset: 469, flags: DIFlagBitField, extraData: i64 448)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_7", scope: !1151, file: !151, line: 2673, baseType: !7, size: 1, offset: 470, flags: DIFlagBitField, extraData: i64 448)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_8", scope: !1151, file: !151, line: 2674, baseType: !7, size: 1, offset: 471, flags: DIFlagBitField, extraData: i64 448)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_0", scope: !1151, file: !151, line: 2678, baseType: !7, size: 1, offset: 472, flags: DIFlagBitField, extraData: i64 448)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_1", scope: !1151, file: !151, line: 2682, baseType: !7, size: 1, offset: 473, flags: DIFlagBitField, extraData: i64 448)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "decl_flag_2", scope: !1151, file: !151, line: 2685, baseType: !7, size: 1, offset: 474, flags: DIFlagBitField, extraData: i64 448)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reg_flag", scope: !1151, file: !151, line: 2688, baseType: !7, size: 1, offset: 475, flags: DIFlagBitField, extraData: i64 448)
!1176 = !DIDerivedType(tag: DW_TAG_member, name: "decl_by_reference_flag", scope: !1151, file: !151, line: 2690, baseType: !7, size: 1, offset: 476, flags: DIFlagBitField, extraData: i64 448)
!1177 = !DIDerivedType(tag: DW_TAG_member, name: "decl_restricted_flag", scope: !1151, file: !151, line: 2692, baseType: !7, size: 1, offset: 477, flags: DIFlagBitField, extraData: i64 448)
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "decl_common_unused", scope: !1151, file: !151, line: 2695, baseType: !7, size: 2, offset: 478, flags: DIFlagBitField, extraData: i64 448)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "off_align", scope: !1151, file: !151, line: 2698, baseType: !7, size: 8, offset: 480, flags: DIFlagBitField, extraData: i64 448)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1151, file: !151, line: 2703, baseType: !7, size: 32, offset: 512)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !1151, file: !151, line: 2705, baseType: !1022, size: 64, offset: 576)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "initial", scope: !1151, file: !151, line: 2706, baseType: !1022, size: 64, offset: 640)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1151, file: !151, line: 2707, baseType: !1022, size: 64, offset: 704)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !1151, file: !151, line: 2708, baseType: !1022, size: 64, offset: 768)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !1151, file: !151, line: 2711, baseType: !1186, size: 64, offset: 832)
!1186 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1187, size: 64)
!1187 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_decl", file: !151, line: 2711, flags: DIFlagFwdDecl)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_rtl", scope: !1024, file: !151, line: 3383, baseType: !1189, size: 960)
!1189 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_rtl", file: !151, line: 2756, size: 960, elements: !1190)
!1190 = !{!1191, !1192}
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1189, file: !151, line: 2757, baseType: !1151, size: 896)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !1189, file: !151, line: 2758, baseType: !900, size: 64, offset: 896)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "decl_non_common", scope: !1024, file: !151, line: 3384, baseType: !1194, size: 1472)
!1194 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_non_common", file: !151, line: 3114, size: 1472, elements: !1195)
!1195 = !{!1196, !1217, !1218, !1219, !1220}
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1194, file: !151, line: 3115, baseType: !1197, size: 1216)
!1197 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_decl_with_vis", file: !151, line: 2984, size: 1216, elements: !1198)
!1198 = !{!1199, !1200, !1201, !1202, !1203, !1204, !1205, !1206, !1207, !1208, !1209, !1210, !1211, !1212, !1213, !1214, !1215, !1216}
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1197, file: !151, line: 2985, baseType: !1189, size: 960)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "assembler_name", scope: !1197, file: !151, line: 2986, baseType: !1022, size: 64, offset: 960)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "section_name", scope: !1197, file: !151, line: 2987, baseType: !1022, size: 64, offset: 1024)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_group", scope: !1197, file: !151, line: 2988, baseType: !1022, size: 64, offset: 1088)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "defer_output", scope: !1197, file: !151, line: 2991, baseType: !7, size: 1, offset: 1152, flags: DIFlagBitField, extraData: i64 1152)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "hard_register", scope: !1197, file: !151, line: 2992, baseType: !7, size: 1, offset: 1153, flags: DIFlagBitField, extraData: i64 1152)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "thread_local", scope: !1197, file: !151, line: 2993, baseType: !7, size: 1, offset: 1154, flags: DIFlagBitField, extraData: i64 1152)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "common_flag", scope: !1197, file: !151, line: 2994, baseType: !7, size: 1, offset: 1155, flags: DIFlagBitField, extraData: i64 1152)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "in_text_section", scope: !1197, file: !151, line: 2995, baseType: !7, size: 1, offset: 1156, flags: DIFlagBitField, extraData: i64 1152)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "dllimport_flag", scope: !1197, file: !151, line: 2996, baseType: !7, size: 1, offset: 1157, flags: DIFlagBitField, extraData: i64 1152)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "shadowed_for_var_p", scope: !1197, file: !151, line: 2998, baseType: !7, size: 1, offset: 1158, flags: DIFlagBitField, extraData: i64 1152)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "weak_flag", scope: !1197, file: !151, line: 3000, baseType: !7, size: 1, offset: 1159, flags: DIFlagBitField, extraData: i64 1152)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "seen_in_bind_expr", scope: !1197, file: !151, line: 3002, baseType: !7, size: 1, offset: 1160, flags: DIFlagBitField, extraData: i64 1152)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "comdat_flag", scope: !1197, file: !151, line: 3003, baseType: !7, size: 1, offset: 1161, flags: DIFlagBitField, extraData: i64 1152)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "visibility", scope: !1197, file: !151, line: 3004, baseType: !7, size: 2, offset: 1162, flags: DIFlagBitField, extraData: i64 1152)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "visibility_specified", scope: !1197, file: !151, line: 3005, baseType: !7, size: 1, offset: 1164, flags: DIFlagBitField, extraData: i64 1152)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "tls_model", scope: !1197, file: !151, line: 3007, baseType: !7, size: 3, offset: 1165, flags: DIFlagBitField, extraData: i64 1152)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "init_priority_p", scope: !1197, file: !151, line: 3010, baseType: !7, size: 1, offset: 1168, flags: DIFlagBitField, extraData: i64 1152)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "saved_tree", scope: !1194, file: !151, line: 3117, baseType: !1022, size: 64, offset: 1216)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "arguments", scope: !1194, file: !151, line: 3119, baseType: !1022, size: 64, offset: 1280)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "result", scope: !1194, file: !151, line: 3121, baseType: !1022, size: 64, offset: 1344)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "vindex", scope: !1194, file: !151, line: 3123, baseType: !1022, size: 64, offset: 1408)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "parm_decl", scope: !1024, file: !151, line: 3385, baseType: !1222, size: 1088)
!1222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_parm_decl", file: !151, line: 2874, size: 1088, elements: !1223)
!1223 = !{!1224, !1225, !1226}
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1222, file: !151, line: 2875, baseType: !1189, size: 960)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "incoming_rtl", scope: !1222, file: !151, line: 2876, baseType: !900, size: 64, offset: 960)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1222, file: !151, line: 2877, baseType: !1227, size: 64, offset: 1024)
!1227 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1228, size: 64)
!1228 = !DICompositeType(tag: DW_TAG_structure_type, name: "var_ann_d", file: !151, line: 2856, flags: DIFlagFwdDecl)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "decl_with_vis", scope: !1024, file: !151, line: 3386, baseType: !1197, size: 1216)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "var_decl", scope: !1024, file: !151, line: 3387, baseType: !1231, size: 1280)
!1231 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_var_decl", file: !151, line: 3093, size: 1280, elements: !1232)
!1232 = !{!1233, !1234}
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1231, file: !151, line: 3094, baseType: !1197, size: 1216)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1231, file: !151, line: 3095, baseType: !1227, size: 64, offset: 1216)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "field_decl", scope: !1024, file: !151, line: 3388, baseType: !1236, size: 1216)
!1236 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_field_decl", file: !151, line: 2824, size: 1216, elements: !1237)
!1237 = !{!1238, !1239, !1240, !1241, !1242, !1243}
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1236, file: !151, line: 2825, baseType: !1151, size: 896)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1236, file: !151, line: 2827, baseType: !1022, size: 64, offset: 896)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "bit_field_type", scope: !1236, file: !151, line: 2828, baseType: !1022, size: 64, offset: 960)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "qualifier", scope: !1236, file: !151, line: 2829, baseType: !1022, size: 64, offset: 1024)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "bit_offset", scope: !1236, file: !151, line: 2830, baseType: !1022, size: 64, offset: 1088)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "fcontext", scope: !1236, file: !151, line: 2831, baseType: !1022, size: 64, offset: 1152)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl", scope: !1024, file: !151, line: 3389, baseType: !1245, size: 1024)
!1245 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_label_decl", file: !151, line: 2850, size: 1024, elements: !1246)
!1246 = !{!1247, !1248, !1249}
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1245, file: !151, line: 2851, baseType: !1189, size: 960)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "label_decl_uid", scope: !1245, file: !151, line: 2852, baseType: !924, size: 32, offset: 960)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "eh_landing_pad_nr", scope: !1245, file: !151, line: 2853, baseType: !924, size: 32, offset: 992)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "result_decl", scope: !1024, file: !151, line: 3390, baseType: !1251, size: 1024)
!1251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_result_decl", file: !151, line: 2857, size: 1024, elements: !1252)
!1252 = !{!1253, !1254}
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1251, file: !151, line: 2858, baseType: !1189, size: 960)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "ann", scope: !1251, file: !151, line: 2859, baseType: !1227, size: 64, offset: 960)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "const_decl", scope: !1024, file: !151, line: 3391, baseType: !1256, size: 960)
!1256 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_const_decl", file: !151, line: 2862, size: 960, elements: !1257)
!1257 = !{!1258}
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1256, file: !151, line: 2863, baseType: !1189, size: 960)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "type_decl", scope: !1024, file: !151, line: 3392, baseType: !1260, size: 1472)
!1260 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type_decl", file: !151, line: 3304, size: 1472, elements: !1261)
!1261 = !{!1262}
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1260, file: !151, line: 3305, baseType: !1194, size: 1472)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "function_decl", scope: !1024, file: !151, line: 3393, baseType: !1264, size: 1792)
!1264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_function_decl", file: !151, line: 3248, size: 1792, elements: !1265)
!1265 = !{!1266, !1267, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1504, !1505, !1506, !1507, !1508, !1509, !1510, !1511, !1512, !1513}
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1264, file: !151, line: 3249, baseType: !1194, size: 1472)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !1264, file: !151, line: 3251, baseType: !1268, size: 64, offset: 1472)
!1268 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1269, size: 64)
!1269 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "function", file: !1270, line: 463, size: 1152, elements: !1271)
!1270 = !DIFile(filename: "./function.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1271 = !{!1272, !1275, !1379, !1380, !1383, !1386, !1438, !1439, !1440, !1441, !1442, !1466, !1469, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483, !1484, !1485, !1486, !1487, !1488, !1489, !1490, !1491, !1492}
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "eh", scope: !1269, file: !1270, line: 464, baseType: !1273, size: 64)
!1273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1274, size: 64)
!1274 = !DICompositeType(tag: DW_TAG_structure_type, name: "eh_status", file: !1270, line: 464, flags: DIFlagFwdDecl)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "cfg", scope: !1269, file: !1270, line: 467, baseType: !1276, size: 64, offset: 64)
!1276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1277, size: 64)
!1277 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "control_flow_graph", file: !135, line: 374, size: 640, elements: !1278)
!1278 = !{!1279, !1354, !1355, !1368, !1369, !1370, !1371, !1372, !1373, !1375, !1377, !1378}
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "x_entry_block_ptr", scope: !1277, file: !135, line: 377, baseType: !1280, size: 64)
!1280 = !DIDerivedType(tag: DW_TAG_typedef, name: "basic_block", file: !901, line: 111, baseType: !1281)
!1281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1282, size: 64)
!1282 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "basic_block_def", file: !135, line: 217, size: 832, elements: !1283)
!1283 = !{!1284, !1319, !1320, !1321, !1324, !1328, !1329, !1330, !1348, !1349, !1350, !1351, !1352, !1353}
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "preds", scope: !1282, file: !135, line: 219, baseType: !1285, size: 64)
!1285 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1286, size: 64)
!1286 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_gc", file: !135, line: 151, baseType: !1287)
!1287 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_gc", file: !135, line: 151, size: 128, elements: !1288)
!1288 = !{!1289}
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1287, file: !135, line: 151, baseType: !1290, size: 128)
!1290 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_edge_base", file: !135, line: 150, baseType: !1291)
!1291 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_edge_base", file: !135, line: 150, size: 128, elements: !1292)
!1292 = !{!1293, !1294, !1295}
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1291, file: !135, line: 150, baseType: !7, size: 32)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1291, file: !135, line: 150, baseType: !7, size: 32, offset: 32)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1291, file: !135, line: 150, baseType: !1296, size: 64, offset: 64)
!1296 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1297, size: 64, elements: !939)
!1297 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge", file: !901, line: 108, baseType: !1298)
!1298 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1299, size: 64)
!1299 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "edge_def", file: !135, line: 122, size: 512, elements: !1300)
!1300 = !{!1301, !1302, !1303, !1311, !1312, !1313, !1314, !1315, !1316, !1317}
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "src", scope: !1299, file: !135, line: 124, baseType: !1281, size: 64)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "dest", scope: !1299, file: !135, line: 125, baseType: !1281, size: 64, offset: 64)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "insns", scope: !1299, file: !135, line: 131, baseType: !1304, size: 64, offset: 128)
!1304 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "edge_def_insns", file: !135, line: 128, size: 64, elements: !1305)
!1305 = !{!1306, !1310}
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !1304, file: !135, line: 129, baseType: !1307, size: 64)
!1307 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple_seq", file: !901, line: 66, baseType: !1308)
!1308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1309, size: 64)
!1309 = !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_seq_d", file: !901, line: 65, flags: DIFlagFwdDecl)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !1304, file: !135, line: 130, baseType: !900, size: 64)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1299, file: !135, line: 134, baseType: !1012, size: 64, offset: 192)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "goto_block", scope: !1299, file: !135, line: 137, baseType: !1022, size: 64, offset: 256)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "goto_locus", scope: !1299, file: !135, line: 138, baseType: !1143, size: 32, offset: 320)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "dest_idx", scope: !1299, file: !135, line: 142, baseType: !7, size: 32, offset: 352)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1299, file: !135, line: 144, baseType: !924, size: 32, offset: 384)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "probability", scope: !1299, file: !135, line: 145, baseType: !924, size: 32, offset: 416)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1299, file: !135, line: 146, baseType: !1318, size: 64, offset: 448)
!1318 = !DIDerivedType(tag: DW_TAG_typedef, name: "gcov_type", file: !135, line: 119, baseType: !991)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "succs", scope: !1282, file: !135, line: 220, baseType: !1285, size: 64, offset: 64)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "aux", scope: !1282, file: !135, line: 223, baseType: !1012, size: 64, offset: 128)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "loop_father", scope: !1282, file: !135, line: 226, baseType: !1322, size: 64, offset: 192)
!1322 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1323, size: 64)
!1323 = !DICompositeType(tag: DW_TAG_structure_type, name: "loop", file: !135, line: 185, flags: DIFlagFwdDecl)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "dom", scope: !1282, file: !135, line: 229, baseType: !1325, size: 128, offset: 256)
!1325 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1326, size: 128, elements: !975)
!1326 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1327, size: 64)
!1327 = !DICompositeType(tag: DW_TAG_structure_type, name: "et_node", file: !135, line: 229, flags: DIFlagFwdDecl)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "prev_bb", scope: !1282, file: !135, line: 232, baseType: !1281, size: 64, offset: 384)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "next_bb", scope: !1282, file: !135, line: 233, baseType: !1281, size: 64, offset: 448)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "il", scope: !1282, file: !135, line: 238, baseType: !1331, size: 64, offset: 512)
!1331 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "basic_block_il_dependent", file: !135, line: 235, size: 64, elements: !1332)
!1332 = !{!1333, !1339}
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "gimple", scope: !1331, file: !135, line: 236, baseType: !1334, size: 64)
!1334 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1335, size: 64)
!1335 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_bb_info", file: !135, line: 273, size: 128, elements: !1336)
!1336 = !{!1337, !1338}
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "seq", scope: !1335, file: !135, line: 275, baseType: !1307, size: 64)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "phi_nodes", scope: !1335, file: !135, line: 278, baseType: !1307, size: 64, offset: 64)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "rtl", scope: !1331, file: !135, line: 237, baseType: !1340, size: 64)
!1340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1341, size: 64)
!1341 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_bb_info", file: !135, line: 259, size: 320, elements: !1342)
!1342 = !{!1343, !1344, !1345, !1346, !1347}
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "head_", scope: !1341, file: !135, line: 261, baseType: !900, size: 64)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "end_", scope: !1341, file: !135, line: 262, baseType: !900, size: 64, offset: 64)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "header", scope: !1341, file: !135, line: 266, baseType: !900, size: 64, offset: 128)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "footer", scope: !1341, file: !135, line: 267, baseType: !900, size: 64, offset: 192)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "visited", scope: !1341, file: !135, line: 270, baseType: !924, size: 32, offset: 256)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1282, file: !135, line: 241, baseType: !1318, size: 64, offset: 576)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1282, file: !135, line: 244, baseType: !924, size: 32, offset: 640)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "loop_depth", scope: !1282, file: !135, line: 247, baseType: !924, size: 32, offset: 672)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "frequency", scope: !1282, file: !135, line: 250, baseType: !924, size: 32, offset: 704)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "discriminator", scope: !1282, file: !135, line: 253, baseType: !924, size: 32, offset: 736)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1282, file: !135, line: 256, baseType: !924, size: 32, offset: 768)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "x_exit_block_ptr", scope: !1277, file: !135, line: 378, baseType: !1280, size: 64, offset: 64)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "x_basic_block_info", scope: !1277, file: !135, line: 381, baseType: !1356, size: 64, offset: 128)
!1356 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1357, size: 64)
!1357 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_gc", file: !135, line: 282, baseType: !1358)
!1358 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_gc", file: !135, line: 282, size: 128, elements: !1359)
!1359 = !{!1360}
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1358, file: !135, line: 282, baseType: !1361, size: 128)
!1361 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_basic_block_base", file: !135, line: 281, baseType: !1362)
!1362 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_basic_block_base", file: !135, line: 281, size: 128, elements: !1363)
!1363 = !{!1364, !1365, !1366}
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1362, file: !135, line: 281, baseType: !7, size: 32)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1362, file: !135, line: 281, baseType: !7, size: 32, offset: 32)
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1362, file: !135, line: 281, baseType: !1367, size: 64, offset: 64)
!1367 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1280, size: 64, elements: !939)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_basic_blocks", scope: !1277, file: !135, line: 384, baseType: !924, size: 32, offset: 192)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_edges", scope: !1277, file: !135, line: 387, baseType: !924, size: 32, offset: 224)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "x_last_basic_block", scope: !1277, file: !135, line: 390, baseType: !924, size: 32, offset: 256)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "x_label_to_block_map", scope: !1277, file: !135, line: 394, baseType: !1356, size: 64, offset: 320)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "x_profile_status", scope: !1277, file: !135, line: 396, baseType: !134, size: 32, offset: 384)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "x_dom_computed", scope: !1277, file: !135, line: 399, baseType: !1374, size: 64, offset: 416)
!1374 = !DICompositeType(tag: DW_TAG_array_type, baseType: !140, size: 64, elements: !975)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "x_n_bbs_in_dom_tree", scope: !1277, file: !135, line: 402, baseType: !1376, size: 64, offset: 480)
!1376 = !DICompositeType(tag: DW_TAG_array_type, baseType: !7, size: 64, elements: !975)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "max_jumptable_ents", scope: !1277, file: !135, line: 406, baseType: !924, size: 32, offset: 544)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "last_label_uid", scope: !1277, file: !135, line: 409, baseType: !924, size: 32, offset: 576)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_body", scope: !1269, file: !1270, line: 470, baseType: !1308, size: 64, offset: 128)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_df", scope: !1269, file: !1270, line: 473, baseType: !1381, size: 64, offset: 192)
!1381 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1382, size: 64)
!1382 = !DICompositeType(tag: DW_TAG_structure_type, name: "gimple_df", file: !1270, line: 166, flags: DIFlagFwdDecl)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "x_current_loops", scope: !1269, file: !1270, line: 476, baseType: !1384, size: 64, offset: 256)
!1384 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1385, size: 64)
!1385 = !DICompositeType(tag: DW_TAG_structure_type, name: "loops", file: !1270, line: 476, flags: DIFlagFwdDecl)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "value_histograms", scope: !1269, file: !1270, line: 479, baseType: !1387, size: 64, offset: 320)
!1387 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_t", file: !1388, line: 144, baseType: !1389)
!1388 = !DIFile(filename: "./include/hashtab.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1390, size: 64)
!1390 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "htab", file: !1388, line: 100, size: 896, elements: !1391)
!1391 = !{!1392, !1400, !1405, !1410, !1412, !1415, !1416, !1417, !1418, !1419, !1424, !1426, !1427, !1432, !1437}
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "hash_f", scope: !1390, file: !1388, line: 102, baseType: !1393, size: 64)
!1393 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_hash", file: !1388, line: 52, baseType: !1394)
!1394 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1395, size: 64)
!1395 = !DISubroutineType(types: !1396)
!1396 = !{!1397, !1398}
!1397 = !DIDerivedType(tag: DW_TAG_typedef, name: "hashval_t", file: !1388, line: 47, baseType: !7)
!1398 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1399, size: 64)
!1399 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "eq_f", scope: !1390, file: !1388, line: 105, baseType: !1401, size: 64, offset: 64)
!1401 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_eq", file: !1388, line: 59, baseType: !1402)
!1402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1403, size: 64)
!1403 = !DISubroutineType(types: !1404)
!1404 = !{!924, !1398, !1398}
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "del_f", scope: !1390, file: !1388, line: 108, baseType: !1406, size: 64, offset: 128)
!1406 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_del", file: !1388, line: 63, baseType: !1407)
!1407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1408, size: 64)
!1408 = !DISubroutineType(types: !1409)
!1409 = !{null, !1012}
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "entries", scope: !1390, file: !1388, line: 111, baseType: !1411, size: 64, offset: 192)
!1411 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1012, size: 64)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1390, file: !1388, line: 114, baseType: !1413, size: 64, offset: 256)
!1413 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !1414, line: 46, baseType: !974)
!1414 = !DIFile(filename: "Rohit/IR2Vec-LoopOptimizationFramework/build_REL_AsrtON/lib/clang/10.0.1/include/stddef.h", directory: "/home/venkat/IF-DV")
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "n_elements", scope: !1390, file: !1388, line: 117, baseType: !1413, size: 64, offset: 320)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "n_deleted", scope: !1390, file: !1388, line: 120, baseType: !1413, size: 64, offset: 384)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "searches", scope: !1390, file: !1388, line: 124, baseType: !7, size: 32, offset: 448)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "collisions", scope: !1390, file: !1388, line: 128, baseType: !7, size: 32, offset: 480)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_f", scope: !1390, file: !1388, line: 131, baseType: !1420, size: 64, offset: 512)
!1420 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc", file: !1388, line: 75, baseType: !1421)
!1421 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1422, size: 64)
!1422 = !DISubroutineType(types: !1423)
!1423 = !{!1012, !1413, !1413}
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "free_f", scope: !1390, file: !1388, line: 132, baseType: !1425, size: 64, offset: 576)
!1425 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free", file: !1388, line: 78, baseType: !1407)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_arg", scope: !1390, file: !1388, line: 135, baseType: !1012, size: 64, offset: 640)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_with_arg_f", scope: !1390, file: !1388, line: 136, baseType: !1428, size: 64, offset: 704)
!1428 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_alloc_with_arg", file: !1388, line: 82, baseType: !1429)
!1429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1430, size: 64)
!1430 = !DISubroutineType(types: !1431)
!1431 = !{!1012, !1012, !1413, !1413}
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "free_with_arg_f", scope: !1390, file: !1388, line: 137, baseType: !1433, size: 64, offset: 768)
!1433 = !DIDerivedType(tag: DW_TAG_typedef, name: "htab_free_with_arg", file: !1388, line: 83, baseType: !1434)
!1434 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1435, size: 64)
!1435 = !DISubroutineType(types: !1436)
!1436 = !{null, !1012, !1012}
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "size_prime_index", scope: !1390, file: !1388, line: 141, baseType: !7, size: 32, offset: 832)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1269, file: !1270, line: 484, baseType: !1022, size: 64, offset: 384)
!1439 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_decl", scope: !1269, file: !1270, line: 488, baseType: !1022, size: 64, offset: 448)
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocal_goto_save_area", scope: !1269, file: !1270, line: 493, baseType: !1022, size: 64, offset: 512)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "local_decls", scope: !1269, file: !1270, line: 496, baseType: !1022, size: 64, offset: 576)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !1269, file: !1270, line: 501, baseType: !1443, size: 64, offset: 640)
!1443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1444, size: 64)
!1444 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_function", file: !146, line: 2355, size: 576, elements: !1445)
!1445 = !{!1446, !1449, !1450, !1451, !1452, !1454, !1455, !1460, !1461, !1462, !1463, !1464, !1465}
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "stack_locals", scope: !1444, file: !146, line: 2356, baseType: !1447, size: 64)
!1447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1448, size: 64)
!1448 = !DICompositeType(tag: DW_TAG_structure_type, name: "stack_local_entry", file: !146, line: 2356, flags: DIFlagFwdDecl)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "some_ld_name", scope: !1444, file: !146, line: 2357, baseType: !927, size: 64, offset: 64)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_gpr_size", scope: !1444, file: !146, line: 2358, baseType: !924, size: 32, offset: 128)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "varargs_fpr_size", scope: !1444, file: !146, line: 2359, baseType: !924, size: 32, offset: 160)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_mode_switching", scope: !1444, file: !146, line: 2360, baseType: !1453, size: 128, offset: 192)
!1453 = !DICompositeType(tag: DW_TAG_array_type, baseType: !924, size: 128, elements: !1001)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue_nregs", scope: !1444, file: !146, line: 2364, baseType: !924, size: 32, offset: 320)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "cfa", scope: !1444, file: !146, line: 2367, baseType: !1456, size: 128, offset: 384)
!1456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "machine_cfa_state", file: !146, line: 2349, size: 128, elements: !1457)
!1457 = !{!1458, !1459}
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "reg", scope: !1456, file: !146, line: 2351, baseType: !900, size: 64)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1456, file: !146, line: 2352, baseType: !991, size: 64, offset: 64)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "call_abi", scope: !1444, file: !146, line: 2371, baseType: !145, size: 32, offset: 512)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "accesses_prev_frame", scope: !1444, file: !146, line: 2374, baseType: !7, size: 1, offset: 544, flags: DIFlagBitField, extraData: i64 544)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "needs_cld", scope: !1444, file: !146, line: 2377, baseType: !7, size: 1, offset: 545, flags: DIFlagBitField, extraData: i64 544)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "use_fast_prologue_epilogue", scope: !1444, file: !146, line: 2381, baseType: !7, size: 1, offset: 546, flags: DIFlagBitField, extraData: i64 544)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "tls_descriptor_call_expanded_p", scope: !1444, file: !146, line: 2392, baseType: !7, size: 1, offset: 547, flags: DIFlagBitField, extraData: i64 544)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "static_chain_on_stack", scope: !1444, file: !146, line: 2396, baseType: !7, size: 1, offset: 548, flags: DIFlagBitField, extraData: i64 544)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "language", scope: !1269, file: !1270, line: 504, baseType: !1467, size: 64, offset: 704)
!1467 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1468, size: 64)
!1468 = !DICompositeType(tag: DW_TAG_structure_type, name: "language_function", file: !1270, line: 504, flags: DIFlagFwdDecl)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "used_types_hash", scope: !1269, file: !1270, line: 507, baseType: !1387, size: 64, offset: 768)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "last_stmt_uid", scope: !1269, file: !1270, line: 510, baseType: !924, size: 32, offset: 832)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "funcdef_no", scope: !1269, file: !1270, line: 513, baseType: !924, size: 32, offset: 864)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "function_start_locus", scope: !1269, file: !1270, line: 516, baseType: !1143, size: 32, offset: 896)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "function_end_locus", scope: !1269, file: !1270, line: 519, baseType: !1143, size: 32, offset: 928)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "curr_properties", scope: !1269, file: !1270, line: 522, baseType: !7, size: 32, offset: 960)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "last_verified", scope: !1269, file: !1270, line: 523, baseType: !7, size: 32, offset: 992)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_reason", scope: !1269, file: !1270, line: 528, baseType: !927, size: 64, offset: 1024)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_gpr_size", scope: !1269, file: !1270, line: 535, baseType: !7, size: 8, offset: 1088, flags: DIFlagBitField, extraData: i64 1088)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "va_list_fpr_size", scope: !1269, file: !1270, line: 539, baseType: !7, size: 8, offset: 1096, flags: DIFlagBitField, extraData: i64 1088)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "function_frequency", scope: !1269, file: !1270, line: 543, baseType: !7, size: 2, offset: 1104, flags: DIFlagBitField, extraData: i64 1088)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "calls_setjmp", scope: !1269, file: !1270, line: 546, baseType: !7, size: 1, offset: 1106, flags: DIFlagBitField, extraData: i64 1088)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "calls_alloca", scope: !1269, file: !1270, line: 550, baseType: !7, size: 1, offset: 1107, flags: DIFlagBitField, extraData: i64 1088)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "has_nonlocal_label", scope: !1269, file: !1270, line: 554, baseType: !7, size: 1, offset: 1108, flags: DIFlagBitField, extraData: i64 1088)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "cannot_be_copied_set", scope: !1269, file: !1270, line: 559, baseType: !7, size: 1, offset: 1109, flags: DIFlagBitField, extraData: i64 1088)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "stdarg", scope: !1269, file: !1270, line: 562, baseType: !7, size: 1, offset: 1110, flags: DIFlagBitField, extraData: i64 1088)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "dont_save_pending_sizes_p", scope: !1269, file: !1270, line: 571, baseType: !7, size: 1, offset: 1111, flags: DIFlagBitField, extraData: i64 1088)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "after_inlining", scope: !1269, file: !1270, line: 573, baseType: !7, size: 1, offset: 1112, flags: DIFlagBitField, extraData: i64 1088)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "always_inline_functions_inlined", scope: !1269, file: !1270, line: 574, baseType: !7, size: 1, offset: 1113, flags: DIFlagBitField, extraData: i64 1088)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "returns_struct", scope: !1269, file: !1270, line: 581, baseType: !7, size: 1, offset: 1114, flags: DIFlagBitField, extraData: i64 1088)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "returns_pcc_struct", scope: !1269, file: !1270, line: 585, baseType: !7, size: 1, offset: 1115, flags: DIFlagBitField, extraData: i64 1088)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "after_tree_profile", scope: !1269, file: !1270, line: 588, baseType: !7, size: 1, offset: 1116, flags: DIFlagBitField, extraData: i64 1088)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "has_local_explicit_reg_vars", scope: !1269, file: !1270, line: 592, baseType: !7, size: 1, offset: 1117, flags: DIFlagBitField, extraData: i64 1088)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "is_thunk", scope: !1269, file: !1270, line: 598, baseType: !7, size: 1, offset: 1118, flags: DIFlagBitField, extraData: i64 1088)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "personality", scope: !1264, file: !151, line: 3254, baseType: !1022, size: 64, offset: 1536)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_target", scope: !1264, file: !151, line: 3257, baseType: !1022, size: 64, offset: 1600)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "function_specific_optimization", scope: !1264, file: !151, line: 3258, baseType: !1022, size: 64, offset: 1664)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "function_code", scope: !1264, file: !151, line: 3264, baseType: !7, size: 11, offset: 1728, flags: DIFlagBitField, extraData: i64 1728)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "built_in_class", scope: !1264, file: !151, line: 3265, baseType: !7, size: 2, offset: 1739, flags: DIFlagBitField, extraData: i64 1728)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "static_ctor_flag", scope: !1264, file: !151, line: 3267, baseType: !7, size: 1, offset: 1741, flags: DIFlagBitField, extraData: i64 1728)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "static_dtor_flag", scope: !1264, file: !151, line: 3268, baseType: !7, size: 1, offset: 1742, flags: DIFlagBitField, extraData: i64 1728)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "uninlinable", scope: !1264, file: !151, line: 3269, baseType: !7, size: 1, offset: 1743, flags: DIFlagBitField, extraData: i64 1728)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "possibly_inlined", scope: !1264, file: !151, line: 3271, baseType: !7, size: 1, offset: 1744, flags: DIFlagBitField, extraData: i64 1728)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "novops_flag", scope: !1264, file: !151, line: 3272, baseType: !7, size: 1, offset: 1745, flags: DIFlagBitField, extraData: i64 1728)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "returns_twice_flag", scope: !1264, file: !151, line: 3273, baseType: !7, size: 1, offset: 1746, flags: DIFlagBitField, extraData: i64 1728)
!1504 = !DIDerivedType(tag: DW_TAG_member, name: "malloc_flag", scope: !1264, file: !151, line: 3274, baseType: !7, size: 1, offset: 1747, flags: DIFlagBitField, extraData: i64 1728)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "operator_new_flag", scope: !1264, file: !151, line: 3275, baseType: !7, size: 1, offset: 1748, flags: DIFlagBitField, extraData: i64 1728)
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "declared_inline_flag", scope: !1264, file: !151, line: 3276, baseType: !7, size: 1, offset: 1749, flags: DIFlagBitField, extraData: i64 1728)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "regdecl_flag", scope: !1264, file: !151, line: 3277, baseType: !7, size: 1, offset: 1750, flags: DIFlagBitField, extraData: i64 1728)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "no_inline_warning_flag", scope: !1264, file: !151, line: 3279, baseType: !7, size: 1, offset: 1751, flags: DIFlagBitField, extraData: i64 1728)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "no_instrument_function_entry_exit", scope: !1264, file: !151, line: 3280, baseType: !7, size: 1, offset: 1752, flags: DIFlagBitField, extraData: i64 1728)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "no_limit_stack", scope: !1264, file: !151, line: 3281, baseType: !7, size: 1, offset: 1753, flags: DIFlagBitField, extraData: i64 1728)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "disregard_inline_limits", scope: !1264, file: !151, line: 3282, baseType: !7, size: 1, offset: 1754, flags: DIFlagBitField, extraData: i64 1728)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "pure_flag", scope: !1264, file: !151, line: 3283, baseType: !7, size: 1, offset: 1755, flags: DIFlagBitField, extraData: i64 1728)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "looping_const_or_pure_flag", scope: !1264, file: !151, line: 3284, baseType: !7, size: 1, offset: 1756, flags: DIFlagBitField, extraData: i64 1728)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1024, file: !151, line: 3394, baseType: !1515, size: 1344)
!1515 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_type", file: !151, line: 2279, size: 1344, elements: !1516)
!1516 = !{!1517, !1518, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535, !1536, !1537, !1538, !1539, !1542, !1543, !1544, !1552, !1553, !1554, !1555, !1556, !1557, !1558, !1559, !1560}
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1515, file: !151, line: 2280, baseType: !1060, size: 192)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "values", scope: !1515, file: !151, line: 2281, baseType: !1022, size: 64, offset: 192)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1515, file: !151, line: 2282, baseType: !1022, size: 64, offset: 256)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "size_unit", scope: !1515, file: !151, line: 2283, baseType: !1022, size: 64, offset: 320)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !1515, file: !151, line: 2284, baseType: !1022, size: 64, offset: 384)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !1515, file: !151, line: 2285, baseType: !7, size: 32, offset: 448)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "precision", scope: !1515, file: !151, line: 2287, baseType: !7, size: 10, offset: 480, flags: DIFlagBitField, extraData: i64 480)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "no_force_blk_flag", scope: !1515, file: !151, line: 2288, baseType: !7, size: 1, offset: 490, flags: DIFlagBitField, extraData: i64 480)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "needs_constructing_flag", scope: !1515, file: !151, line: 2289, baseType: !7, size: 1, offset: 491, flags: DIFlagBitField, extraData: i64 480)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_aggr_flag", scope: !1515, file: !151, line: 2290, baseType: !7, size: 1, offset: 492, flags: DIFlagBitField, extraData: i64 480)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "restrict_flag", scope: !1515, file: !151, line: 2291, baseType: !7, size: 1, offset: 493, flags: DIFlagBitField, extraData: i64 480)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "contains_placeholder_bits", scope: !1515, file: !151, line: 2292, baseType: !7, size: 2, offset: 494, flags: DIFlagBitField, extraData: i64 480)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1515, file: !151, line: 2294, baseType: !7, size: 8, offset: 496, flags: DIFlagBitField, extraData: i64 480)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "string_flag", scope: !1515, file: !151, line: 2296, baseType: !7, size: 1, offset: 504, flags: DIFlagBitField, extraData: i64 480)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_0", scope: !1515, file: !151, line: 2297, baseType: !7, size: 1, offset: 505, flags: DIFlagBitField, extraData: i64 480)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_1", scope: !1515, file: !151, line: 2298, baseType: !7, size: 1, offset: 506, flags: DIFlagBitField, extraData: i64 480)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_2", scope: !1515, file: !151, line: 2299, baseType: !7, size: 1, offset: 507, flags: DIFlagBitField, extraData: i64 480)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_3", scope: !1515, file: !151, line: 2300, baseType: !7, size: 1, offset: 508, flags: DIFlagBitField, extraData: i64 480)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_4", scope: !1515, file: !151, line: 2301, baseType: !7, size: 1, offset: 509, flags: DIFlagBitField, extraData: i64 480)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_5", scope: !1515, file: !151, line: 2302, baseType: !7, size: 1, offset: 510, flags: DIFlagBitField, extraData: i64 480)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "lang_flag_6", scope: !1515, file: !151, line: 2303, baseType: !7, size: 1, offset: 511, flags: DIFlagBitField, extraData: i64 480)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1515, file: !151, line: 2305, baseType: !7, size: 32, offset: 512)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "alias_set", scope: !1515, file: !151, line: 2306, baseType: !1540, size: 32, offset: 544)
!1540 = !DIDerivedType(tag: DW_TAG_typedef, name: "alias_set_type", file: !1541, line: 31, baseType: !924)
!1541 = !DIFile(filename: "./alias.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "pointer_to", scope: !1515, file: !151, line: 2307, baseType: !1022, size: 64, offset: 576)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "reference_to", scope: !1515, file: !151, line: 2308, baseType: !1022, size: 64, offset: 640)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "symtab", scope: !1515, file: !151, line: 2314, baseType: !1545, size: 64, offset: 704)
!1545 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "tree_type_symtab", file: !151, line: 2309, size: 64, elements: !1546)
!1546 = !{!1547, !1548, !1549}
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "address", scope: !1545, file: !151, line: 2310, baseType: !924, size: 32)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !1545, file: !151, line: 2311, baseType: !927, size: 64)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "die", scope: !1545, file: !151, line: 2312, baseType: !1550, size: 64)
!1550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1551, size: 64)
!1551 = !DICompositeType(tag: DW_TAG_structure_type, name: "die_struct", file: !151, line: 2277, flags: DIFlagFwdDecl)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1515, file: !151, line: 2315, baseType: !1022, size: 64, offset: 768)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "minval", scope: !1515, file: !151, line: 2316, baseType: !1022, size: 64, offset: 832)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "maxval", scope: !1515, file: !151, line: 2317, baseType: !1022, size: 64, offset: 896)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "next_variant", scope: !1515, file: !151, line: 2318, baseType: !1022, size: 64, offset: 960)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "main_variant", scope: !1515, file: !151, line: 2319, baseType: !1022, size: 64, offset: 1024)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !1515, file: !151, line: 2320, baseType: !1022, size: 64, offset: 1088)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !1515, file: !151, line: 2321, baseType: !1022, size: 64, offset: 1152)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "canonical", scope: !1515, file: !151, line: 2322, baseType: !1022, size: 64, offset: 1216)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "lang_specific", scope: !1515, file: !151, line: 2324, baseType: !1561, size: 64, offset: 1280)
!1561 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1562, size: 64)
!1562 = !DICompositeType(tag: DW_TAG_structure_type, name: "lang_type", file: !151, line: 2324, flags: DIFlagFwdDecl)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !1024, file: !151, line: 3395, baseType: !1564, size: 320)
!1564 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_list", file: !151, line: 1469, size: 320, elements: !1565)
!1565 = !{!1566, !1567, !1568}
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1564, file: !151, line: 1470, baseType: !1060, size: 192)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "purpose", scope: !1564, file: !151, line: 1471, baseType: !1022, size: 64, offset: 192)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1564, file: !151, line: 1472, baseType: !1022, size: 64, offset: 256)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1024, file: !151, line: 3396, baseType: !1570, size: 320)
!1570 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_vec", file: !151, line: 1482, size: 320, elements: !1571)
!1571 = !{!1572, !1573, !1574}
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1570, file: !151, line: 1483, baseType: !1060, size: 192)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !1570, file: !151, line: 1484, baseType: !924, size: 32, offset: 192)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1570, file: !151, line: 1485, baseType: !1575, size: 64, offset: 256)
!1575 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1022, size: 64, elements: !939)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "exp", scope: !1024, file: !151, line: 3397, baseType: !1577, size: 384)
!1577 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_exp", file: !151, line: 1829, size: 384, elements: !1578)
!1578 = !{!1579, !1580, !1581, !1582}
!1579 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1577, file: !151, line: 1830, baseType: !1060, size: 192)
!1580 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1577, file: !151, line: 1831, baseType: !1143, size: 32, offset: 192)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1577, file: !151, line: 1832, baseType: !1022, size: 64, offset: 256)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "operands", scope: !1577, file: !151, line: 1835, baseType: !1575, size: 64, offset: 320)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !1024, file: !151, line: 3398, baseType: !1584, size: 704)
!1584 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_ssa_name", file: !151, line: 1898, size: 704, elements: !1585)
!1585 = !{!1586, !1587, !1588, !1592, !1593, !1596}
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1584, file: !151, line: 1899, baseType: !1060, size: 192)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "var", scope: !1584, file: !151, line: 1902, baseType: !1022, size: 64, offset: 192)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "def_stmt", scope: !1584, file: !151, line: 1905, baseType: !1589, size: 64, offset: 256)
!1589 = !DIDerivedType(tag: DW_TAG_typedef, name: "gimple", file: !901, line: 58, baseType: !1590)
!1590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1591, size: 64)
!1591 = !DICompositeType(tag: DW_TAG_union_type, name: "gimple_statement_d", file: !901, line: 57, flags: DIFlagFwdDecl)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "version", scope: !1584, file: !151, line: 1908, baseType: !7, size: 32, offset: 320)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "ptr_info", scope: !1584, file: !151, line: 1911, baseType: !1594, size: 64, offset: 384)
!1594 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1595, size: 64)
!1595 = !DICompositeType(tag: DW_TAG_structure_type, name: "ptr_info_def", file: !151, line: 1876, flags: DIFlagFwdDecl)
!1596 = !DIDerivedType(tag: DW_TAG_member, name: "imm_uses", scope: !1584, file: !151, line: 1914, baseType: !1597, size: 256, offset: 448)
!1597 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ssa_use_operand_d", file: !151, line: 1883, size: 256, elements: !1598)
!1598 = !{!1599, !1601, !1602, !1607}
!1599 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1597, file: !151, line: 1884, baseType: !1600, size: 64)
!1600 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1597, size: 64)
!1601 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1597, file: !151, line: 1885, baseType: !1600, size: 64, offset: 64)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !1597, file: !151, line: 1891, baseType: !1603, size: 64, offset: 128)
!1603 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1597, file: !151, line: 1891, size: 64, elements: !1604)
!1604 = !{!1605, !1606}
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1603, file: !151, line: 1891, baseType: !1589, size: 64)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "ssa_name", scope: !1603, file: !151, line: 1891, baseType: !1022, size: 64)
!1607 = !DIDerivedType(tag: DW_TAG_member, name: "use", scope: !1597, file: !151, line: 1892, baseType: !1608, size: 64, offset: 192)
!1608 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1022, size: 64)
!1609 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1024, file: !151, line: 3399, baseType: !1610, size: 704)
!1610 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_block", file: !151, line: 2008, size: 704, elements: !1611)
!1611 = !{!1612, !1613, !1614, !1615, !1616, !1617, !1629, !1630, !1631, !1632, !1633}
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1610, file: !151, line: 2009, baseType: !1060, size: 192)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_flag", scope: !1610, file: !151, line: 2011, baseType: !7, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "block_num", scope: !1610, file: !151, line: 2012, baseType: !7, size: 31, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!1615 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1610, file: !151, line: 2014, baseType: !1143, size: 32, offset: 224)
!1616 = !DIDerivedType(tag: DW_TAG_member, name: "vars", scope: !1610, file: !151, line: 2016, baseType: !1022, size: 64, offset: 256)
!1617 = !DIDerivedType(tag: DW_TAG_member, name: "nonlocalized_vars", scope: !1610, file: !151, line: 2017, baseType: !1618, size: 64, offset: 320)
!1618 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1619, size: 64)
!1619 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_gc", file: !151, line: 183, baseType: !1620)
!1620 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_gc", file: !151, line: 183, size: 128, elements: !1621)
!1621 = !{!1622}
!1622 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1620, file: !151, line: 183, baseType: !1623, size: 128)
!1623 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_base", file: !151, line: 182, baseType: !1624)
!1624 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_base", file: !151, line: 182, size: 128, elements: !1625)
!1625 = !{!1626, !1627, !1628}
!1626 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1624, file: !151, line: 182, baseType: !7, size: 32)
!1627 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1624, file: !151, line: 182, baseType: !7, size: 32, offset: 32)
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1624, file: !151, line: 182, baseType: !1575, size: 64, offset: 64)
!1629 = !DIDerivedType(tag: DW_TAG_member, name: "subblocks", scope: !1610, file: !151, line: 2019, baseType: !1022, size: 64, offset: 384)
!1630 = !DIDerivedType(tag: DW_TAG_member, name: "supercontext", scope: !1610, file: !151, line: 2020, baseType: !1022, size: 64, offset: 448)
!1631 = !DIDerivedType(tag: DW_TAG_member, name: "abstract_origin", scope: !1610, file: !151, line: 2021, baseType: !1022, size: 64, offset: 512)
!1632 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_origin", scope: !1610, file: !151, line: 2022, baseType: !1022, size: 64, offset: 576)
!1633 = !DIDerivedType(tag: DW_TAG_member, name: "fragment_chain", scope: !1610, file: !151, line: 2023, baseType: !1022, size: 64, offset: 640)
!1634 = !DIDerivedType(tag: DW_TAG_member, name: "binfo", scope: !1024, file: !151, line: 3400, baseType: !1635, size: 832)
!1635 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_binfo", file: !151, line: 2430, size: 832, elements: !1636)
!1636 = !{!1637, !1638, !1639, !1640, !1641, !1642, !1643, !1644, !1645, !1646}
!1637 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1635, file: !151, line: 2431, baseType: !1060, size: 192)
!1638 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1635, file: !151, line: 2433, baseType: !1022, size: 64, offset: 192)
!1639 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !1635, file: !151, line: 2434, baseType: !1022, size: 64, offset: 256)
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "virtuals", scope: !1635, file: !151, line: 2435, baseType: !1022, size: 64, offset: 320)
!1641 = !DIDerivedType(tag: DW_TAG_member, name: "vptr_field", scope: !1635, file: !151, line: 2436, baseType: !1022, size: 64, offset: 384)
!1642 = !DIDerivedType(tag: DW_TAG_member, name: "base_accesses", scope: !1635, file: !151, line: 2437, baseType: !1618, size: 64, offset: 448)
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "inheritance", scope: !1635, file: !151, line: 2438, baseType: !1022, size: 64, offset: 512)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_subvtt", scope: !1635, file: !151, line: 2440, baseType: !1022, size: 64, offset: 576)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "vtt_vptr", scope: !1635, file: !151, line: 2441, baseType: !1022, size: 64, offset: 640)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "base_binfos", scope: !1635, file: !151, line: 2443, baseType: !1647, size: 128, offset: 704)
!1647 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_tree_none", file: !151, line: 182, baseType: !1648)
!1648 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_tree_none", file: !151, line: 182, size: 128, elements: !1649)
!1649 = !{!1650}
!1650 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1648, file: !151, line: 182, baseType: !1623, size: 128)
!1651 = !DIDerivedType(tag: DW_TAG_member, name: "stmt_list", scope: !1024, file: !151, line: 3401, baseType: !1652, size: 320)
!1652 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list", file: !151, line: 3327, size: 320, elements: !1653)
!1653 = !{!1654, !1655, !1662}
!1654 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1652, file: !151, line: 3329, baseType: !1060, size: 192)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1652, file: !151, line: 3330, baseType: !1656, size: 64, offset: 192)
!1656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1657, size: 64)
!1657 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_statement_list_node", file: !151, line: 3320, size: 192, elements: !1658)
!1658 = !{!1659, !1660, !1661}
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1657, file: !151, line: 3322, baseType: !1656, size: 64)
!1660 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1657, file: !151, line: 3323, baseType: !1656, size: 64, offset: 64)
!1661 = !DIDerivedType(tag: DW_TAG_member, name: "stmt", scope: !1657, file: !151, line: 3324, baseType: !1022, size: 64, offset: 128)
!1662 = !DIDerivedType(tag: DW_TAG_member, name: "tail", scope: !1652, file: !151, line: 3331, baseType: !1656, size: 64, offset: 256)
!1663 = !DIDerivedType(tag: DW_TAG_member, name: "constructor", scope: !1024, file: !151, line: 3402, baseType: !1664, size: 256)
!1664 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_constructor", file: !151, line: 1540, size: 256, elements: !1665)
!1665 = !{!1666, !1667}
!1666 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1664, file: !151, line: 1541, baseType: !1060, size: 192)
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "elts", scope: !1664, file: !151, line: 1542, baseType: !1668, size: 64, offset: 192)
!1668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1669, size: 64)
!1669 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_gc", file: !151, line: 1538, baseType: !1670)
!1670 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_gc", file: !151, line: 1538, size: 192, elements: !1671)
!1671 = !{!1672}
!1672 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1670, file: !151, line: 1538, baseType: !1673, size: 192)
!1673 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_constructor_elt_base", file: !151, line: 1537, baseType: !1674)
!1674 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_constructor_elt_base", file: !151, line: 1537, size: 192, elements: !1675)
!1675 = !{!1676, !1677, !1678}
!1676 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1674, file: !151, line: 1537, baseType: !7, size: 32)
!1677 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1674, file: !151, line: 1537, baseType: !7, size: 32, offset: 32)
!1678 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1674, file: !151, line: 1537, baseType: !1679, size: 128, offset: 64)
!1679 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1680, size: 128, elements: !939)
!1680 = !DIDerivedType(tag: DW_TAG_typedef, name: "constructor_elt", file: !151, line: 1535, baseType: !1681)
!1681 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "constructor_elt_d", file: !151, line: 1532, size: 128, elements: !1682)
!1682 = !{!1683, !1684}
!1683 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1681, file: !151, line: 1533, baseType: !1022, size: 64)
!1684 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !1681, file: !151, line: 1534, baseType: !1022, size: 64, offset: 64)
!1685 = !DIDerivedType(tag: DW_TAG_member, name: "omp_clause", scope: !1024, file: !151, line: 3403, baseType: !1686, size: 512)
!1686 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_omp_clause", file: !151, line: 1938, size: 512, elements: !1687)
!1687 = !{!1688, !1689, !1690, !1691, !1697, !1698, !1699}
!1688 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1686, file: !151, line: 1939, baseType: !1060, size: 192)
!1689 = !DIDerivedType(tag: DW_TAG_member, name: "locus", scope: !1686, file: !151, line: 1940, baseType: !1143, size: 32, offset: 192)
!1690 = !DIDerivedType(tag: DW_TAG_member, name: "code", scope: !1686, file: !151, line: 1941, baseType: !150, size: 32, offset: 224)
!1691 = !DIDerivedType(tag: DW_TAG_member, name: "subcode", scope: !1686, file: !151, line: 1946, baseType: !1692, size: 32, offset: 256)
!1692 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "omp_clause_subcode", file: !151, line: 1942, size: 32, elements: !1693)
!1693 = !{!1694, !1695, !1696}
!1694 = !DIDerivedType(tag: DW_TAG_member, name: "default_kind", scope: !1692, file: !151, line: 1943, baseType: !169, size: 32)
!1695 = !DIDerivedType(tag: DW_TAG_member, name: "schedule_kind", scope: !1692, file: !151, line: 1944, baseType: !176, size: 32)
!1696 = !DIDerivedType(tag: DW_TAG_member, name: "reduction_code", scope: !1692, file: !151, line: 1945, baseType: !183, size: 32)
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_init", scope: !1686, file: !151, line: 1950, baseType: !1307, size: 64, offset: 320)
!1698 = !DIDerivedType(tag: DW_TAG_member, name: "gimple_reduction_merge", scope: !1686, file: !151, line: 1951, baseType: !1307, size: 64, offset: 384)
!1699 = !DIDerivedType(tag: DW_TAG_member, name: "ops", scope: !1686, file: !151, line: 1953, baseType: !1575, size: 64, offset: 448)
!1700 = !DIDerivedType(tag: DW_TAG_member, name: "optimization", scope: !1024, file: !151, line: 3404, baseType: !1701, size: 1664)
!1701 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_optimization_option", file: !151, line: 3337, size: 1664, elements: !1702)
!1702 = !{!1703, !1704}
!1703 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1701, file: !151, line: 3338, baseType: !1060, size: 192)
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1701, file: !151, line: 3341, baseType: !1705, size: 1472, offset: 192)
!1705 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_optimization", file: !1706, line: 410, size: 1472, elements: !1707)
!1706 = !DIFile(filename: "./options.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1707 = !{!1708, !1709, !1710, !1711, !1712, !1713, !1714, !1715, !1716, !1718, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1726, !1727, !1728, !1729, !1730, !1731, !1732, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816, !1817, !1818, !1819, !1820, !1821, !1822, !1823, !1824, !1825, !1826, !1827, !1828, !1829, !1830, !1831, !1832, !1833, !1834, !1835, !1836, !1837, !1838, !1839, !1840, !1841, !1842, !1843, !1844, !1845, !1846, !1847, !1848, !1849, !1850, !1851, !1852, !1853, !1854, !1855, !1856, !1857, !1858, !1859, !1860, !1861, !1862, !1863, !1864, !1865, !1866, !1867, !1868, !1869, !1870, !1871}
!1708 = !DIDerivedType(tag: DW_TAG_member, name: "align_functions", scope: !1705, file: !1706, line: 412, baseType: !924, size: 32)
!1709 = !DIDerivedType(tag: DW_TAG_member, name: "align_jumps", scope: !1705, file: !1706, line: 413, baseType: !924, size: 32, offset: 32)
!1710 = !DIDerivedType(tag: DW_TAG_member, name: "align_labels", scope: !1705, file: !1706, line: 414, baseType: !924, size: 32, offset: 64)
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "align_loops", scope: !1705, file: !1706, line: 415, baseType: !924, size: 32, offset: 96)
!1712 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns", scope: !1705, file: !1706, line: 416, baseType: !924, size: 32, offset: 128)
!1713 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_stalled_insns_dep", scope: !1705, file: !1706, line: 417, baseType: !924, size: 32, offset: 160)
!1714 = !DIDerivedType(tag: DW_TAG_member, name: "optimize", scope: !1705, file: !1706, line: 418, baseType: !1135, size: 8, offset: 192)
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "optimize_size", scope: !1705, file: !1706, line: 419, baseType: !1135, size: 8, offset: 200)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "flag_argument_noalias", scope: !1705, file: !1706, line: 420, baseType: !1717, size: 8, offset: 208)
!1717 = !DIBasicType(name: "signed char", size: 8, encoding: DW_ATE_signed_char)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "flag_asynchronous_unwind_tables", scope: !1705, file: !1706, line: 421, baseType: !1717, size: 8, offset: 216)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_on_count_reg", scope: !1705, file: !1706, line: 422, baseType: !1717, size: 8, offset: 224)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_probabilities", scope: !1705, file: !1706, line: 423, baseType: !1717, size: 8, offset: 232)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize", scope: !1705, file: !1706, line: 424, baseType: !1717, size: 8, offset: 240)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "flag_branch_target_load_optimize2", scope: !1705, file: !1706, line: 425, baseType: !1717, size: 8, offset: 248)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "flag_btr_bb_exclusive", scope: !1705, file: !1706, line: 426, baseType: !1717, size: 8, offset: 256)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "flag_caller_saves", scope: !1705, file: !1706, line: 427, baseType: !1717, size: 8, offset: 264)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_common", scope: !1705, file: !1706, line: 428, baseType: !1717, size: 8, offset: 272)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "flag_conserve_stack", scope: !1705, file: !1706, line: 429, baseType: !1717, size: 8, offset: 280)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cprop_registers", scope: !1705, file: !1706, line: 430, baseType: !1717, size: 8, offset: 288)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "flag_crossjumping", scope: !1705, file: !1706, line: 431, baseType: !1717, size: 8, offset: 296)
!1729 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cse_follow_jumps", scope: !1705, file: !1706, line: 432, baseType: !1717, size: 8, offset: 304)
!1730 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_fortran_rules", scope: !1705, file: !1706, line: 433, baseType: !1717, size: 8, offset: 312)
!1731 = !DIDerivedType(tag: DW_TAG_member, name: "flag_cx_limited_range", scope: !1705, file: !1706, line: 434, baseType: !1717, size: 8, offset: 320)
!1732 = !DIDerivedType(tag: DW_TAG_member, name: "flag_data_sections", scope: !1705, file: !1706, line: 435, baseType: !1717, size: 8, offset: 328)
!1733 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dce", scope: !1705, file: !1706, line: 436, baseType: !1717, size: 8, offset: 336)
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "flag_defer_pop", scope: !1705, file: !1706, line: 437, baseType: !1717, size: 8, offset: 344)
!1735 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delayed_branch", scope: !1705, file: !1706, line: 438, baseType: !1717, size: 8, offset: 352)
!1736 = !DIDerivedType(tag: DW_TAG_member, name: "flag_delete_null_pointer_checks", scope: !1705, file: !1706, line: 439, baseType: !1717, size: 8, offset: 360)
!1737 = !DIDerivedType(tag: DW_TAG_member, name: "flag_dse", scope: !1705, file: !1706, line: 440, baseType: !1717, size: 8, offset: 368)
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "flag_early_inlining", scope: !1705, file: !1706, line: 441, baseType: !1717, size: 8, offset: 376)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "flag_exceptions", scope: !1705, file: !1706, line: 442, baseType: !1717, size: 8, offset: 384)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "flag_expensive_optimizations", scope: !1705, file: !1706, line: 443, baseType: !1717, size: 8, offset: 392)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "flag_finite_math_only", scope: !1705, file: !1706, line: 444, baseType: !1717, size: 8, offset: 400)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "flag_float_store", scope: !1705, file: !1706, line: 445, baseType: !1717, size: 8, offset: 408)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "flag_forward_propagate", scope: !1705, file: !1706, line: 446, baseType: !1717, size: 8, offset: 416)
!1744 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse", scope: !1705, file: !1706, line: 447, baseType: !1717, size: 8, offset: 424)
!1745 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_after_reload", scope: !1705, file: !1706, line: 448, baseType: !1717, size: 8, offset: 432)
!1746 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_las", scope: !1705, file: !1706, line: 449, baseType: !1717, size: 8, offset: 440)
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_lm", scope: !1705, file: !1706, line: 450, baseType: !1717, size: 8, offset: 448)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "flag_gcse_sm", scope: !1705, file: !1706, line: 451, baseType: !1717, size: 8, offset: 456)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "flag_graphite_identity", scope: !1705, file: !1706, line: 452, baseType: !1717, size: 8, offset: 464)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "flag_guess_branch_prob", scope: !1705, file: !1706, line: 453, baseType: !1717, size: 8, offset: 472)
!1751 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion", scope: !1705, file: !1706, line: 454, baseType: !1717, size: 8, offset: 480)
!1752 = !DIDerivedType(tag: DW_TAG_member, name: "flag_if_conversion2", scope: !1705, file: !1706, line: 455, baseType: !1717, size: 8, offset: 488)
!1753 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions", scope: !1705, file: !1706, line: 456, baseType: !1717, size: 8, offset: 496)
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_functions_called_once", scope: !1705, file: !1706, line: 457, baseType: !1717, size: 8, offset: 504)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "flag_inline_small_functions", scope: !1705, file: !1706, line: 458, baseType: !1717, size: 8, offset: 512)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp", scope: !1705, file: !1706, line: 459, baseType: !1717, size: 8, offset: 520)
!1757 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_cp_clone", scope: !1705, file: !1706, line: 460, baseType: !1717, size: 8, offset: 528)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_matrix_reorg", scope: !1705, file: !1706, line: 461, baseType: !1717, size: 8, offset: 536)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pta", scope: !1705, file: !1706, line: 462, baseType: !1717, size: 8, offset: 544)
!1760 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_pure_const", scope: !1705, file: !1706, line: 463, baseType: !1717, size: 8, offset: 552)
!1761 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_reference", scope: !1705, file: !1706, line: 464, baseType: !1717, size: 8, offset: 560)
!1762 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_sra", scope: !1705, file: !1706, line: 465, baseType: !1717, size: 8, offset: 568)
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ipa_type_escape", scope: !1705, file: !1706, line: 466, baseType: !1717, size: 8, offset: 576)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ivopts", scope: !1705, file: !1706, line: 467, baseType: !1717, size: 8, offset: 584)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "flag_jump_tables", scope: !1705, file: !1706, line: 468, baseType: !1717, size: 8, offset: 592)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_block", scope: !1705, file: !1706, line: 469, baseType: !1717, size: 8, offset: 600)
!1767 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_interchange", scope: !1705, file: !1706, line: 470, baseType: !1717, size: 8, offset: 608)
!1768 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_parallelize_all", scope: !1705, file: !1706, line: 471, baseType: !1717, size: 8, offset: 616)
!1769 = !DIDerivedType(tag: DW_TAG_member, name: "flag_loop_strip_mine", scope: !1705, file: !1706, line: 472, baseType: !1717, size: 8, offset: 624)
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "flag_lto_report", scope: !1705, file: !1706, line: 473, baseType: !1717, size: 8, offset: 632)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "flag_ltrans", scope: !1705, file: !1706, line: 474, baseType: !1717, size: 8, offset: 640)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "flag_errno_math", scope: !1705, file: !1706, line: 475, baseType: !1717, size: 8, offset: 648)
!1773 = !DIDerivedType(tag: DW_TAG_member, name: "flag_merge_constants", scope: !1705, file: !1706, line: 476, baseType: !1717, size: 8, offset: 656)
!1774 = !DIDerivedType(tag: DW_TAG_member, name: "flag_modulo_sched", scope: !1705, file: !1706, line: 477, baseType: !1717, size: 8, offset: 664)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "flag_move_loop_invariants", scope: !1705, file: !1706, line: 478, baseType: !1717, size: 8, offset: 672)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "flag_non_call_exceptions", scope: !1705, file: !1706, line: 479, baseType: !1717, size: 8, offset: 680)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "flag_omit_frame_pointer", scope: !1705, file: !1706, line: 480, baseType: !1717, size: 8, offset: 688)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "flag_regmove", scope: !1705, file: !1706, line: 481, baseType: !1717, size: 8, offset: 696)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "flag_optimize_sibling_calls", scope: !1705, file: !1706, line: 482, baseType: !1717, size: 8, offset: 704)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pack_struct", scope: !1705, file: !1706, line: 483, baseType: !1717, size: 8, offset: 712)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peel_loops", scope: !1705, file: !1706, line: 484, baseType: !1717, size: 8, offset: 720)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "flag_no_peephole", scope: !1705, file: !1706, line: 485, baseType: !1717, size: 8, offset: 728)
!1783 = !DIDerivedType(tag: DW_TAG_member, name: "flag_peephole2", scope: !1705, file: !1706, line: 486, baseType: !1717, size: 8, offset: 736)
!1784 = !DIDerivedType(tag: DW_TAG_member, name: "flag_predictive_commoning", scope: !1705, file: !1706, line: 487, baseType: !1717, size: 8, offset: 744)
!1785 = !DIDerivedType(tag: DW_TAG_member, name: "flag_prefetch_loop_arrays", scope: !1705, file: !1706, line: 488, baseType: !1717, size: 8, offset: 752)
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "flag_pcc_struct_return", scope: !1705, file: !1706, line: 489, baseType: !1717, size: 8, offset: 760)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rename_registers", scope: !1705, file: !1706, line: 490, baseType: !1717, size: 8, offset: 768)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks", scope: !1705, file: !1706, line: 491, baseType: !1717, size: 8, offset: 776)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_blocks_and_partition", scope: !1705, file: !1706, line: 492, baseType: !1717, size: 8, offset: 784)
!1790 = !DIDerivedType(tag: DW_TAG_member, name: "flag_reorder_functions", scope: !1705, file: !1706, line: 493, baseType: !1717, size: 8, offset: 792)
!1791 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rerun_cse_after_loop", scope: !1705, file: !1706, line: 494, baseType: !1717, size: 8, offset: 800)
!1792 = !DIDerivedType(tag: DW_TAG_member, name: "flag_resched_modulo_sched", scope: !1705, file: !1706, line: 495, baseType: !1717, size: 8, offset: 808)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "flag_rounding_math", scope: !1705, file: !1706, line: 496, baseType: !1717, size: 8, offset: 816)
!1794 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_critical_path_heuristic", scope: !1705, file: !1706, line: 497, baseType: !1717, size: 8, offset: 824)
!1795 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_dep_count_heuristic", scope: !1705, file: !1706, line: 498, baseType: !1717, size: 8, offset: 832)
!1796 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_group_heuristic", scope: !1705, file: !1706, line: 499, baseType: !1717, size: 8, offset: 840)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_interblock", scope: !1705, file: !1706, line: 500, baseType: !1717, size: 8, offset: 848)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_last_insn_heuristic", scope: !1705, file: !1706, line: 501, baseType: !1717, size: 8, offset: 856)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_pressure", scope: !1705, file: !1706, line: 502, baseType: !1717, size: 8, offset: 864)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_rank_heuristic", scope: !1705, file: !1706, line: 503, baseType: !1717, size: 8, offset: 872)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative", scope: !1705, file: !1706, line: 504, baseType: !1717, size: 8, offset: 880)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched_spec_insn_heuristic", scope: !1705, file: !1706, line: 505, baseType: !1717, size: 8, offset: 888)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load", scope: !1705, file: !1706, line: 506, baseType: !1717, size: 8, offset: 896)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_speculative_load_dangerous", scope: !1705, file: !1706, line: 507, baseType: !1717, size: 8, offset: 904)
!1805 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sched2_use_superblocks", scope: !1705, file: !1706, line: 508, baseType: !1717, size: 8, offset: 912)
!1806 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns", scope: !1705, file: !1706, line: 509, baseType: !1717, size: 8, offset: 920)
!1807 = !DIDerivedType(tag: DW_TAG_member, name: "flag_schedule_insns_after_reload", scope: !1705, file: !1706, line: 510, baseType: !1717, size: 8, offset: 928)
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "flag_section_anchors", scope: !1705, file: !1706, line: 511, baseType: !1717, size: 8, offset: 936)
!1809 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining", scope: !1705, file: !1706, line: 512, baseType: !1717, size: 8, offset: 944)
!1810 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_pipelining_outer_loops", scope: !1705, file: !1706, line: 513, baseType: !1717, size: 8, offset: 952)
!1811 = !DIDerivedType(tag: DW_TAG_member, name: "flag_sel_sched_reschedule_pipelined", scope: !1705, file: !1706, line: 514, baseType: !1717, size: 8, offset: 960)
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling", scope: !1705, file: !1706, line: 515, baseType: !1717, size: 8, offset: 968)
!1813 = !DIDerivedType(tag: DW_TAG_member, name: "flag_selective_scheduling2", scope: !1705, file: !1706, line: 516, baseType: !1717, size: 8, offset: 976)
!1814 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signaling_nans", scope: !1705, file: !1706, line: 517, baseType: !1717, size: 8, offset: 984)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "flag_signed_zeros", scope: !1705, file: !1706, line: 518, baseType: !1717, size: 8, offset: 992)
!1816 = !DIDerivedType(tag: DW_TAG_member, name: "flag_single_precision_constant", scope: !1705, file: !1706, line: 519, baseType: !1717, size: 8, offset: 1000)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_ivs_in_unroller", scope: !1705, file: !1706, line: 520, baseType: !1717, size: 8, offset: 1008)
!1818 = !DIDerivedType(tag: DW_TAG_member, name: "flag_split_wide_types", scope: !1705, file: !1706, line: 521, baseType: !1717, size: 8, offset: 1016)
!1819 = !DIDerivedType(tag: DW_TAG_member, name: "flag_strict_aliasing", scope: !1705, file: !1706, line: 522, baseType: !1717, size: 8, offset: 1024)
!1820 = !DIDerivedType(tag: DW_TAG_member, name: "flag_thread_jumps", scope: !1705, file: !1706, line: 523, baseType: !1717, size: 8, offset: 1032)
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "flag_toplevel_reorder", scope: !1705, file: !1706, line: 524, baseType: !1717, size: 8, offset: 1040)
!1822 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapping_math", scope: !1705, file: !1706, line: 525, baseType: !1717, size: 8, offset: 1048)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "flag_trapv", scope: !1705, file: !1706, line: 526, baseType: !1717, size: 8, offset: 1056)
!1824 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_builtin_call_dce", scope: !1705, file: !1706, line: 527, baseType: !1717, size: 8, offset: 1064)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ccp", scope: !1705, file: !1706, line: 528, baseType: !1717, size: 8, offset: 1072)
!1826 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ch", scope: !1705, file: !1706, line: 529, baseType: !1717, size: 8, offset: 1080)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copy_prop", scope: !1705, file: !1706, line: 530, baseType: !1717, size: 8, offset: 1088)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_copyrename", scope: !1705, file: !1706, line: 531, baseType: !1717, size: 8, offset: 1096)
!1829 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_cselim", scope: !1705, file: !1706, line: 532, baseType: !1717, size: 8, offset: 1104)
!1830 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dce", scope: !1705, file: !1706, line: 533, baseType: !1717, size: 8, offset: 1112)
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dom", scope: !1705, file: !1706, line: 534, baseType: !1717, size: 8, offset: 1120)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_dse", scope: !1705, file: !1706, line: 535, baseType: !1717, size: 8, offset: 1128)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_forwprop", scope: !1705, file: !1706, line: 536, baseType: !1717, size: 8, offset: 1136)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_fre", scope: !1705, file: !1706, line: 537, baseType: !1717, size: 8, offset: 1144)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_distribution", scope: !1705, file: !1706, line: 538, baseType: !1717, size: 8, offset: 1152)
!1836 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_im", scope: !1705, file: !1706, line: 539, baseType: !1717, size: 8, offset: 1160)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_ivcanon", scope: !1705, file: !1706, line: 540, baseType: !1717, size: 8, offset: 1168)
!1838 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_linear", scope: !1705, file: !1706, line: 541, baseType: !1717, size: 8, offset: 1176)
!1839 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_loop_optimize", scope: !1705, file: !1706, line: 542, baseType: !1717, size: 8, offset: 1184)
!1840 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_live_range_split", scope: !1705, file: !1706, line: 543, baseType: !1717, size: 8, offset: 1192)
!1841 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_phiprop", scope: !1705, file: !1706, line: 544, baseType: !1717, size: 8, offset: 1200)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pre", scope: !1705, file: !1706, line: 545, baseType: !1717, size: 8, offset: 1208)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_pta", scope: !1705, file: !1706, line: 546, baseType: !1717, size: 8, offset: 1216)
!1844 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_reassoc", scope: !1705, file: !1706, line: 547, baseType: !1717, size: 8, offset: 1224)
!1845 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_scev_cprop", scope: !1705, file: !1706, line: 548, baseType: !1717, size: 8, offset: 1232)
!1846 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sink", scope: !1705, file: !1706, line: 549, baseType: !1717, size: 8, offset: 1240)
!1847 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_slp_vectorize", scope: !1705, file: !1706, line: 550, baseType: !1717, size: 8, offset: 1248)
!1848 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_sra", scope: !1705, file: !1706, line: 551, baseType: !1717, size: 8, offset: 1256)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_switch_conversion", scope: !1705, file: !1706, line: 552, baseType: !1717, size: 8, offset: 1264)
!1850 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_ter", scope: !1705, file: !1706, line: 553, baseType: !1717, size: 8, offset: 1272)
!1851 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vect_loop_version", scope: !1705, file: !1706, line: 554, baseType: !1717, size: 8, offset: 1280)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vectorize", scope: !1705, file: !1706, line: 555, baseType: !1717, size: 8, offset: 1288)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "flag_tree_vrp", scope: !1705, file: !1706, line: 556, baseType: !1717, size: 8, offset: 1296)
!1854 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unit_at_a_time", scope: !1705, file: !1706, line: 557, baseType: !1717, size: 8, offset: 1304)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_all_loops", scope: !1705, file: !1706, line: 558, baseType: !1717, size: 8, offset: 1312)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unroll_loops", scope: !1705, file: !1706, line: 559, baseType: !1717, size: 8, offset: 1320)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_loop_optimizations", scope: !1705, file: !1706, line: 560, baseType: !1717, size: 8, offset: 1328)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unsafe_math_optimizations", scope: !1705, file: !1706, line: 561, baseType: !1717, size: 8, offset: 1336)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unswitch_loops", scope: !1705, file: !1706, line: 562, baseType: !1717, size: 8, offset: 1344)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "flag_unwind_tables", scope: !1705, file: !1706, line: 563, baseType: !1717, size: 8, offset: 1352)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking", scope: !1705, file: !1706, line: 564, baseType: !1717, size: 8, offset: 1360)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments", scope: !1705, file: !1706, line: 565, baseType: !1717, size: 8, offset: 1368)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_assignments_toggle", scope: !1705, file: !1706, line: 566, baseType: !1717, size: 8, offset: 1376)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "flag_var_tracking_uninit", scope: !1705, file: !1706, line: 567, baseType: !1717, size: 8, offset: 1384)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "flag_variable_expansion_in_unroller", scope: !1705, file: !1706, line: 568, baseType: !1717, size: 8, offset: 1392)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "flag_vect_cost_model", scope: !1705, file: !1706, line: 569, baseType: !1717, size: 8, offset: 1400)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "flag_value_profile_transformations", scope: !1705, file: !1706, line: 570, baseType: !1717, size: 8, offset: 1408)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "flag_web", scope: !1705, file: !1706, line: 571, baseType: !1717, size: 8, offset: 1416)
!1869 = !DIDerivedType(tag: DW_TAG_member, name: "flag_whole_program", scope: !1705, file: !1706, line: 572, baseType: !1717, size: 8, offset: 1424)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wpa", scope: !1705, file: !1706, line: 573, baseType: !1717, size: 8, offset: 1432)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "flag_wrapv", scope: !1705, file: !1706, line: 574, baseType: !1717, size: 8, offset: 1440)
!1872 = !DIDerivedType(tag: DW_TAG_member, name: "target_option", scope: !1024, file: !151, line: 3405, baseType: !1873, size: 384)
!1873 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "tree_target_option", file: !151, line: 3352, size: 384, elements: !1874)
!1874 = !{!1875, !1876}
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1873, file: !151, line: 3353, baseType: !1060, size: 192)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "opts", scope: !1873, file: !151, line: 3356, baseType: !1877, size: 192, offset: 192)
!1877 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "cl_target_option", file: !1706, line: 578, size: 192, elements: !1878)
!1878 = !{!1879, !1880, !1881, !1882, !1883, !1884, !1885, !1886, !1887, !1888, !1889}
!1879 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags_explicit", scope: !1877, file: !1706, line: 580, baseType: !924, size: 32)
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags_explicit", scope: !1877, file: !1706, line: 581, baseType: !924, size: 32, offset: 32)
!1881 = !DIDerivedType(tag: DW_TAG_member, name: "target_flags", scope: !1877, file: !1706, line: 582, baseType: !924, size: 32, offset: 64)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "ix86_isa_flags", scope: !1877, file: !1706, line: 583, baseType: !924, size: 32, offset: 96)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "arch", scope: !1877, file: !1706, line: 584, baseType: !1135, size: 8, offset: 128)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "arch_specified", scope: !1877, file: !1706, line: 585, baseType: !1135, size: 8, offset: 136)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "branch_cost", scope: !1877, file: !1706, line: 586, baseType: !1135, size: 8, offset: 144)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "fpmath", scope: !1877, file: !1706, line: 587, baseType: !1135, size: 8, offset: 152)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "schedule", scope: !1877, file: !1706, line: 588, baseType: !1135, size: 8, offset: 160)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "tune", scope: !1877, file: !1706, line: 589, baseType: !1135, size: 8, offset: 168)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "tune_defaulted", scope: !1877, file: !1706, line: 590, baseType: !1135, size: 8, offset: 176)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "rt_bb", scope: !921, file: !378, line: 178, baseType: !1281, size: 64)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "rt_mem", scope: !921, file: !378, line: 179, baseType: !1892, size: 64)
!1892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1893, size: 64)
!1893 = !DIDerivedType(tag: DW_TAG_typedef, name: "mem_attrs", file: !378, line: 150, baseType: !1894)
!1894 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "mem_attrs", file: !378, line: 142, size: 320, elements: !1895)
!1895 = !{!1896, !1897, !1898, !1899, !1900, !1901}
!1896 = !DIDerivedType(tag: DW_TAG_member, name: "expr", scope: !1894, file: !378, line: 144, baseType: !1022, size: 64)
!1897 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1894, file: !378, line: 145, baseType: !900, size: 64, offset: 64)
!1898 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1894, file: !378, line: 146, baseType: !900, size: 64, offset: 128)
!1899 = !DIDerivedType(tag: DW_TAG_member, name: "alias", scope: !1894, file: !378, line: 147, baseType: !1540, size: 32, offset: 192)
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !1894, file: !378, line: 148, baseType: !7, size: 32, offset: 224)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "addrspace", scope: !1894, file: !378, line: 149, baseType: !1135, size: 8, offset: 256)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "rt_reg", scope: !921, file: !378, line: 180, baseType: !1903, size: 64)
!1903 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1904, size: 64)
!1904 = !DIDerivedType(tag: DW_TAG_typedef, name: "reg_attrs", file: !378, line: 162, baseType: !1905)
!1905 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "reg_attrs", file: !378, line: 159, size: 128, elements: !1906)
!1906 = !{!1907, !1908}
!1907 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1905, file: !378, line: 160, baseType: !1022, size: 64)
!1908 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1905, file: !378, line: 161, baseType: !991, size: 64, offset: 64)
!1909 = !DIDerivedType(tag: DW_TAG_member, name: "rt_constant", scope: !921, file: !378, line: 181, baseType: !1910, size: 64)
!1910 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1911, size: 64)
!1911 = !DICompositeType(tag: DW_TAG_structure_type, name: "constant_descriptor_rtx", file: !378, line: 181, flags: DIFlagFwdDecl)
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "hwint", scope: !916, file: !378, line: 317, baseType: !1913, size: 64)
!1913 = !DICompositeType(tag: DW_TAG_array_type, baseType: !991, size: 64, elements: !939)
!1914 = !DIDerivedType(tag: DW_TAG_member, name: "block_sym", scope: !916, file: !378, line: 318, baseType: !1915, size: 320)
!1915 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "block_symbol", file: !378, line: 188, size: 320, elements: !1916)
!1916 = !{!1917, !1919, !1974}
!1917 = !DIDerivedType(tag: DW_TAG_member, name: "fld", scope: !1915, file: !378, line: 190, baseType: !1918, size: 192)
!1918 = !DICompositeType(tag: DW_TAG_array_type, baseType: !920, size: 192, elements: !1093)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "block", scope: !1915, file: !378, line: 193, baseType: !1920, size: 64, offset: 192)
!1920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1921, size: 64)
!1921 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "object_block", file: !378, line: 206, size: 320, elements: !1922)
!1922 = !{!1923, !1959, !1960, !1961, !1973}
!1923 = !DIDerivedType(tag: DW_TAG_member, name: "sect", scope: !1921, file: !378, line: 208, baseType: !1924, size: 64)
!1924 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1925, size: 64)
!1925 = !DIDerivedType(tag: DW_TAG_typedef, name: "section", file: !901, line: 62, baseType: !1926)
!1926 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "section", file: !1927, line: 538, size: 256, elements: !1928)
!1927 = !DIFile(filename: "./output.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1928 = !{!1929, !1933, !1939, !1950}
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1926, file: !1927, line: 539, baseType: !1930, size: 32)
!1930 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "section_common", file: !1927, line: 482, size: 32, elements: !1931)
!1931 = !{!1932}
!1932 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1930, file: !1927, line: 484, baseType: !7, size: 32)
!1933 = !DIDerivedType(tag: DW_TAG_member, name: "named", scope: !1926, file: !1927, line: 540, baseType: !1934, size: 192)
!1934 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "named_section", file: !1927, line: 488, size: 192, elements: !1935)
!1935 = !{!1936, !1937, !1938}
!1936 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1934, file: !1927, line: 489, baseType: !1930, size: 32)
!1937 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1934, file: !1927, line: 492, baseType: !927, size: 64, offset: 64)
!1938 = !DIDerivedType(tag: DW_TAG_member, name: "decl", scope: !1934, file: !1927, line: 496, baseType: !1022, size: 64, offset: 128)
!1939 = !DIDerivedType(tag: DW_TAG_member, name: "unnamed", scope: !1926, file: !1927, line: 541, baseType: !1940, size: 256)
!1940 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "unnamed_section", file: !1927, line: 504, size: 256, elements: !1941)
!1941 = !{!1942, !1943, !1948, !1949}
!1942 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1940, file: !1927, line: 505, baseType: !1930, size: 32)
!1943 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1940, file: !1927, line: 509, baseType: !1944, size: 64, offset: 64)
!1944 = !DIDerivedType(tag: DW_TAG_typedef, name: "unnamed_section_callback", file: !1927, line: 501, baseType: !1945)
!1945 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1946, size: 64)
!1946 = !DISubroutineType(types: !1947)
!1947 = !{null, !1398}
!1948 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1940, file: !1927, line: 510, baseType: !1398, size: 64, offset: 128)
!1949 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1940, file: !1927, line: 513, baseType: !1924, size: 64, offset: 192)
!1950 = !DIDerivedType(tag: DW_TAG_member, name: "noswitch", scope: !1926, file: !1927, line: 542, baseType: !1951, size: 128)
!1951 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "noswitch_section", file: !1927, line: 530, size: 128, elements: !1952)
!1952 = !{!1953, !1954}
!1953 = !DIDerivedType(tag: DW_TAG_member, name: "common", scope: !1951, file: !1927, line: 531, baseType: !1930, size: 32)
!1954 = !DIDerivedType(tag: DW_TAG_member, name: "callback", scope: !1951, file: !1927, line: 534, baseType: !1955, size: 64, offset: 64)
!1955 = !DIDerivedType(tag: DW_TAG_typedef, name: "noswitch_section_callback", file: !1927, line: 525, baseType: !1956)
!1956 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1957, size: 64)
!1957 = !DISubroutineType(types: !1958)
!1958 = !{!1135, !1022, !927, !974, !974}
!1959 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !1921, file: !378, line: 211, baseType: !7, size: 32, offset: 64)
!1960 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1921, file: !378, line: 214, baseType: !991, size: 64, offset: 128)
!1961 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !1921, file: !378, line: 224, baseType: !1962, size: 64, offset: 192)
!1962 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1963, size: 64)
!1963 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_gc", file: !378, line: 202, baseType: !1964)
!1964 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_gc", file: !378, line: 202, size: 128, elements: !1965)
!1965 = !{!1966}
!1966 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !1964, file: !378, line: 202, baseType: !1967, size: 128)
!1967 = !DIDerivedType(tag: DW_TAG_typedef, name: "VEC_rtx_base", file: !378, line: 200, baseType: !1968)
!1968 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VEC_rtx_base", file: !378, line: 200, size: 128, elements: !1969)
!1969 = !{!1970, !1971, !1972}
!1970 = !DIDerivedType(tag: DW_TAG_member, name: "num", scope: !1968, file: !378, line: 200, baseType: !7, size: 32)
!1971 = !DIDerivedType(tag: DW_TAG_member, name: "alloc", scope: !1968, file: !378, line: 200, baseType: !7, size: 32, offset: 32)
!1972 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1968, file: !378, line: 200, baseType: !938, size: 64, offset: 64)
!1973 = !DIDerivedType(tag: DW_TAG_member, name: "anchors", scope: !1921, file: !378, line: 234, baseType: !1962, size: 64, offset: 256)
!1974 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !1915, file: !378, line: 197, baseType: !991, size: 64, offset: 256)
!1975 = !DIDerivedType(tag: DW_TAG_member, name: "rv", scope: !916, file: !378, line: 319, baseType: !1082, size: 256)
!1976 = !DIDerivedType(tag: DW_TAG_member, name: "fv", scope: !916, file: !378, line: 320, baseType: !1101, size: 192)
!1977 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !927, size: 64)
!1978 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!1979 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1980, size: 64)
!1980 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !903)
!1981 = !DIDerivedType(tag: DW_TAG_typedef, name: "HARD_REG_ELT_TYPE", file: !1982, line: 42, baseType: !974)
!1982 = !DIFile(filename: "./hard-reg-set.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!1983 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1984, size: 64)
!1984 = !DIDerivedType(tag: DW_TAG_typedef, name: "change_t", file: !3, line: 175, baseType: !1985)
!1985 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "change_t", file: !3, line: 168, size: 320, elements: !1986)
!1986 = !{!1987, !1988, !1989, !1990, !1991}
!1987 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1985, file: !3, line: 170, baseType: !900, size: 64)
!1988 = !DIDerivedType(tag: DW_TAG_member, name: "old_code", scope: !1985, file: !3, line: 171, baseType: !924, size: 32, offset: 64)
!1989 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !1985, file: !3, line: 172, baseType: !899, size: 64, offset: 128)
!1990 = !DIDerivedType(tag: DW_TAG_member, name: "old", scope: !1985, file: !3, line: 173, baseType: !900, size: 64, offset: 192)
!1991 = !DIDerivedType(tag: DW_TAG_member, name: "unshare", scope: !1985, file: !3, line: 174, baseType: !1135, size: 8, offset: 256)
!1992 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1993, size: 64)
!1993 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "validate_replace_src_data", file: !3, line: 805, size: 192, elements: !1994)
!1994 = !{!1995, !1996, !1997}
!1995 = !DIDerivedType(tag: DW_TAG_member, name: "from", scope: !1993, file: !3, line: 807, baseType: !900, size: 64)
!1996 = !DIDerivedType(tag: DW_TAG_member, name: "to", scope: !1993, file: !3, line: 808, baseType: !900, size: 64, offset: 64)
!1997 = !DIDerivedType(tag: DW_TAG_member, name: "insn", scope: !1993, file: !3, line: 809, baseType: !900, size: 64, offset: 128)
!1998 = !DIDerivedType(tag: DW_TAG_typedef, name: "bitmap", file: !901, line: 47, baseType: !958)
!1999 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2000, size: 64)
!2000 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "df_lr_bb_info", file: !889, line: 826, size: 256, elements: !2001)
!2001 = !{!2002, !2003, !2004, !2005}
!2002 = !DIDerivedType(tag: DW_TAG_member, name: "def", scope: !2000, file: !889, line: 829, baseType: !1998, size: 64)
!2003 = !DIDerivedType(tag: DW_TAG_member, name: "use", scope: !2000, file: !889, line: 831, baseType: !1998, size: 64, offset: 64)
!2004 = !DIDerivedType(tag: DW_TAG_member, name: "in", scope: !2000, file: !889, line: 834, baseType: !1998, size: 64, offset: 128)
!2005 = !DIDerivedType(tag: DW_TAG_member, name: "out", scope: !2000, file: !889, line: 835, baseType: !1998, size: 64, offset: 192)
!2006 = !{!2007, !2014, !2042, !2044, !2046, !2048, !2050, !0, !2052, !2080, !2099, !2101, !2103, !2105, !2107, !2117, !2119, !2121, !2123}
!2007 = !DIGlobalVariableExpression(var: !2008, expr: !DIExpression())
!2008 = distinct !DIGlobalVariable(name: "search_ofs", scope: !2009, file: !3, line: 2991, type: !924, isLocal: true, isDefinition: true)
!2009 = distinct !DISubprogram(name: "peep2_find_free_register", scope: !3, file: !3, line: 2988, type: !2010, scopeLine: 2990, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!2010 = !DISubroutineType(types: !2011)
!2011 = !{!900, !924, !924, !927, !5, !2012}
!2012 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1981, size: 64)
!2013 = !{}
!2014 = !DIGlobalVariableExpression(var: !2015, expr: !DIExpression())
!2015 = distinct !DIGlobalVariable(name: "pass_peephole2", scope: !2, file: !3, line: 3512, type: !2016, isLocal: false, isDefinition: true)
!2016 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rtl_opt_pass", file: !700, line: 162, size: 640, elements: !2017)
!2017 = !{!2018}
!2018 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !2016, file: !700, line: 164, baseType: !2019, size: 640)
!2019 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "opt_pass", file: !700, line: 114, size: 640, elements: !2020)
!2020 = !{!2021, !2022, !2023, !2027, !2031, !2033, !2034, !2035, !2037, !2038, !2039, !2040, !2041}
!2021 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2019, file: !700, line: 117, baseType: !699, size: 32)
!2022 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2019, file: !700, line: 121, baseType: !927, size: 64, offset: 64)
!2023 = !DIDerivedType(tag: DW_TAG_member, name: "gate", scope: !2019, file: !700, line: 125, baseType: !2024, size: 64, offset: 128)
!2024 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2025, size: 64)
!2025 = !DISubroutineType(types: !2026)
!2026 = !{!1135}
!2027 = !DIDerivedType(tag: DW_TAG_member, name: "execute", scope: !2019, file: !700, line: 130, baseType: !2028, size: 64, offset: 192)
!2028 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2029, size: 64)
!2029 = !DISubroutineType(types: !2030)
!2030 = !{!7}
!2031 = !DIDerivedType(tag: DW_TAG_member, name: "sub", scope: !2019, file: !700, line: 133, baseType: !2032, size: 64, offset: 256)
!2032 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2019, size: 64)
!2033 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2019, file: !700, line: 136, baseType: !2032, size: 64, offset: 320)
!2034 = !DIDerivedType(tag: DW_TAG_member, name: "static_pass_number", scope: !2019, file: !700, line: 139, baseType: !924, size: 32, offset: 384)
!2035 = !DIDerivedType(tag: DW_TAG_member, name: "tv_id", scope: !2019, file: !700, line: 143, baseType: !2036, size: 32, offset: 416)
!2036 = !DIDerivedType(tag: DW_TAG_typedef, name: "timevar_id_t", file: !707, line: 80, baseType: !706)
!2037 = !DIDerivedType(tag: DW_TAG_member, name: "properties_required", scope: !2019, file: !700, line: 146, baseType: !7, size: 32, offset: 448)
!2038 = !DIDerivedType(tag: DW_TAG_member, name: "properties_provided", scope: !2019, file: !700, line: 147, baseType: !7, size: 32, offset: 480)
!2039 = !DIDerivedType(tag: DW_TAG_member, name: "properties_destroyed", scope: !2019, file: !700, line: 148, baseType: !7, size: 32, offset: 512)
!2040 = !DIDerivedType(tag: DW_TAG_member, name: "todo_flags_start", scope: !2019, file: !700, line: 151, baseType: !7, size: 32, offset: 544)
!2041 = !DIDerivedType(tag: DW_TAG_member, name: "todo_flags_finish", scope: !2019, file: !700, line: 152, baseType: !7, size: 32, offset: 576)
!2042 = !DIGlobalVariableExpression(var: !2043, expr: !DIExpression())
!2043 = distinct !DIGlobalVariable(name: "pass_split_all_insns", scope: !2, file: !3, line: 3539, type: !2016, isLocal: false, isDefinition: true)
!2044 = !DIGlobalVariableExpression(var: !2045, expr: !DIExpression())
!2045 = distinct !DIGlobalVariable(name: "pass_split_after_reload", scope: !2, file: !3, line: 3569, type: !2016, isLocal: false, isDefinition: true)
!2046 = !DIGlobalVariableExpression(var: !2047, expr: !DIExpression())
!2047 = distinct !DIGlobalVariable(name: "pass_split_before_regstack", scope: !2, file: !3, line: 3613, type: !2016, isLocal: false, isDefinition: true)
!2048 = !DIGlobalVariableExpression(var: !2049, expr: !DIExpression())
!2049 = distinct !DIGlobalVariable(name: "pass_split_before_sched2", scope: !2, file: !3, line: 3651, type: !2016, isLocal: false, isDefinition: true)
!2050 = !DIGlobalVariableExpression(var: !2051, expr: !DIExpression())
!2051 = distinct !DIGlobalVariable(name: "pass_split_for_shorten_branches", scope: !2, file: !3, line: 3683, type: !2016, isLocal: false, isDefinition: true)
!2052 = !DIGlobalVariableExpression(var: !2053, expr: !DIExpression())
!2053 = distinct !DIGlobalVariable(name: "recog_data", scope: !2, file: !3, line: 86, type: !2054, isLocal: false, isDefinition: true)
!2054 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "recog_data", file: !694, line: 180, size: 9024, elements: !2055)
!2055 = !{!2056, !2060, !2062, !2064, !2066, !2068, !2072, !2074, !2075, !2076, !2077, !2079}
!2056 = !DIDerivedType(tag: DW_TAG_member, name: "operand", scope: !2054, file: !694, line: 189, baseType: !2057, size: 1920)
!2057 = !DICompositeType(tag: DW_TAG_array_type, baseType: !900, size: 1920, elements: !2058)
!2058 = !{!2059}
!2059 = !DISubrange(count: 30)
!2060 = !DIDerivedType(tag: DW_TAG_member, name: "operand_loc", scope: !2054, file: !694, line: 192, baseType: !2061, size: 1920, offset: 1920)
!2061 = !DICompositeType(tag: DW_TAG_array_type, baseType: !899, size: 1920, elements: !2058)
!2062 = !DIDerivedType(tag: DW_TAG_member, name: "constraints", scope: !2054, file: !694, line: 195, baseType: !2063, size: 1920, offset: 3840)
!2063 = !DICompositeType(tag: DW_TAG_array_type, baseType: !927, size: 1920, elements: !2058)
!2064 = !DIDerivedType(tag: DW_TAG_member, name: "operand_mode", scope: !2054, file: !694, line: 198, baseType: !2065, size: 960, offset: 5760)
!2065 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5, size: 960, elements: !2058)
!2066 = !DIDerivedType(tag: DW_TAG_member, name: "operand_type", scope: !2054, file: !694, line: 201, baseType: !2067, size: 960, offset: 6720)
!2067 = !DICompositeType(tag: DW_TAG_array_type, baseType: !693, size: 960, elements: !2058)
!2068 = !DIDerivedType(tag: DW_TAG_member, name: "dup_loc", scope: !2054, file: !694, line: 205, baseType: !2069, size: 896, offset: 7680)
!2069 = !DICompositeType(tag: DW_TAG_array_type, baseType: !899, size: 896, elements: !2070)
!2070 = !{!2071}
!2071 = !DISubrange(count: 14)
!2072 = !DIDerivedType(tag: DW_TAG_member, name: "dup_num", scope: !2054, file: !694, line: 209, baseType: !2073, size: 112, offset: 8576)
!2073 = !DICompositeType(tag: DW_TAG_array_type, baseType: !929, size: 112, elements: !2070)
!2074 = !DIDerivedType(tag: DW_TAG_member, name: "n_operands", scope: !2054, file: !694, line: 222, baseType: !929, size: 8, offset: 8688)
!2075 = !DIDerivedType(tag: DW_TAG_member, name: "n_dups", scope: !2054, file: !694, line: 225, baseType: !929, size: 8, offset: 8696)
!2076 = !DIDerivedType(tag: DW_TAG_member, name: "n_alternatives", scope: !2054, file: !694, line: 228, baseType: !929, size: 8, offset: 8704)
!2077 = !DIDerivedType(tag: DW_TAG_member, name: "alternative_enabled_p", scope: !2054, file: !694, line: 234, baseType: !2078, size: 240, offset: 8712)
!2078 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1135, size: 240, elements: !2058)
!2079 = !DIDerivedType(tag: DW_TAG_member, name: "insn", scope: !2054, file: !694, line: 237, baseType: !900, size: 64, offset: 8960)
!2080 = !DIGlobalVariableExpression(var: !2081, expr: !DIExpression())
!2081 = distinct !DIGlobalVariable(name: "recog_op_alt", scope: !2, file: !3, line: 90, type: !2082, isLocal: false, isDefinition: true)
!2082 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2083, size: 230400, elements: !2098)
!2083 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "operand_alternative", file: !694, line: 31, size: 256, elements: !2084)
!2084 = !{!2085, !2086, !2087, !2088, !2089, !2090, !2091, !2092, !2093, !2094, !2095, !2096, !2097}
!2085 = !DIDerivedType(tag: DW_TAG_member, name: "constraint", scope: !2083, file: !694, line: 35, baseType: !927, size: 64)
!2086 = !DIDerivedType(tag: DW_TAG_member, name: "cl", scope: !2083, file: !694, line: 38, baseType: !628, size: 32, offset: 64)
!2087 = !DIDerivedType(tag: DW_TAG_member, name: "reject", scope: !2083, file: !694, line: 42, baseType: !7, size: 32, offset: 96)
!2088 = !DIDerivedType(tag: DW_TAG_member, name: "matches", scope: !2083, file: !694, line: 45, baseType: !924, size: 32, offset: 128)
!2089 = !DIDerivedType(tag: DW_TAG_member, name: "matched", scope: !2083, file: !694, line: 49, baseType: !924, size: 32, offset: 160)
!2090 = !DIDerivedType(tag: DW_TAG_member, name: "earlyclobber", scope: !2083, file: !694, line: 52, baseType: !7, size: 1, offset: 192, flags: DIFlagBitField, extraData: i64 192)
!2091 = !DIDerivedType(tag: DW_TAG_member, name: "memory_ok", scope: !2083, file: !694, line: 55, baseType: !7, size: 1, offset: 193, flags: DIFlagBitField, extraData: i64 192)
!2092 = !DIDerivedType(tag: DW_TAG_member, name: "offmem_ok", scope: !2083, file: !694, line: 57, baseType: !7, size: 1, offset: 194, flags: DIFlagBitField, extraData: i64 192)
!2093 = !DIDerivedType(tag: DW_TAG_member, name: "nonoffmem_ok", scope: !2083, file: !694, line: 59, baseType: !7, size: 1, offset: 195, flags: DIFlagBitField, extraData: i64 192)
!2094 = !DIDerivedType(tag: DW_TAG_member, name: "decmem_ok", scope: !2083, file: !694, line: 61, baseType: !7, size: 1, offset: 196, flags: DIFlagBitField, extraData: i64 192)
!2095 = !DIDerivedType(tag: DW_TAG_member, name: "incmem_ok", scope: !2083, file: !694, line: 63, baseType: !7, size: 1, offset: 197, flags: DIFlagBitField, extraData: i64 192)
!2096 = !DIDerivedType(tag: DW_TAG_member, name: "is_address", scope: !2083, file: !694, line: 65, baseType: !7, size: 1, offset: 198, flags: DIFlagBitField, extraData: i64 192)
!2097 = !DIDerivedType(tag: DW_TAG_member, name: "anything_ok", scope: !2083, file: !694, line: 68, baseType: !7, size: 1, offset: 199, flags: DIFlagBitField, extraData: i64 192)
!2098 = !{!2059, !2059}
!2099 = !DIGlobalVariableExpression(var: !2100, expr: !DIExpression())
!2100 = distinct !DIGlobalVariable(name: "which_alternative", scope: !2, file: !3, line: 95, type: !924, isLocal: false, isDefinition: true)
!2101 = !DIGlobalVariableExpression(var: !2102, expr: !DIExpression())
!2102 = distinct !DIGlobalVariable(name: "reload_completed", scope: !2, file: !3, line: 101, type: !924, isLocal: false, isDefinition: true)
!2103 = !DIGlobalVariableExpression(var: !2104, expr: !DIExpression())
!2104 = distinct !DIGlobalVariable(name: "epilogue_completed", scope: !2, file: !3, line: 104, type: !924, isLocal: false, isDefinition: true)
!2105 = !DIGlobalVariableExpression(var: !2106, expr: !DIExpression())
!2106 = distinct !DIGlobalVariable(name: "changes", scope: !2, file: !3, line: 177, type: !1983, isLocal: true, isDefinition: true)
!2107 = !DIGlobalVariableExpression(var: !2108, expr: !DIExpression())
!2108 = distinct !DIGlobalVariable(name: "peep2_insn_data", scope: !2, file: !3, line: 2910, type: !2109, isLocal: true, isDefinition: true)
!2109 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2110, size: 640, elements: !2115)
!2110 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "peep2_insn_data", file: !3, line: 2904, size: 128, elements: !2111)
!2111 = !{!2112, !2113}
!2112 = !DIDerivedType(tag: DW_TAG_member, name: "insn", scope: !2110, file: !3, line: 2906, baseType: !900, size: 64)
!2113 = !DIDerivedType(tag: DW_TAG_member, name: "live_before", scope: !2110, file: !3, line: 2907, baseType: !2114, size: 64, offset: 64)
!2114 = !DIDerivedType(tag: DW_TAG_typedef, name: "regset", file: !135, line: 37, baseType: !1998)
!2115 = !{!2116}
!2116 = !DISubrange(count: 5)
!2117 = !DIGlobalVariableExpression(var: !2118, expr: !DIExpression())
!2118 = distinct !DIGlobalVariable(name: "peep2_current", scope: !2, file: !3, line: 2911, type: !924, isLocal: true, isDefinition: true)
!2119 = !DIGlobalVariableExpression(var: !2120, expr: !DIExpression())
!2120 = distinct !DIGlobalVariable(name: "peep2_current_count", scope: !2, file: !3, line: 2913, type: !924, isLocal: false, isDefinition: true)
!2121 = !DIGlobalVariableExpression(var: !2122, expr: !DIExpression())
!2122 = distinct !DIGlobalVariable(name: "changes_allocated", scope: !2, file: !3, line: 178, type: !924, isLocal: true, isDefinition: true)
!2123 = !DIGlobalVariableExpression(var: !2124, expr: !DIExpression())
!2124 = distinct !DIGlobalVariable(name: "num_changes", scope: !2, file: !3, line: 180, type: !924, isLocal: true, isDefinition: true)
!2125 = !{i32 7, !"Dwarf Version", i32 4}
!2126 = !{i32 2, !"Debug Info Version", i32 3}
!2127 = !{i32 1, !"wchar_size", i32 4}
!2128 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!2129 = distinct !DISubprogram(name: "init_recog_no_volatile", scope: !3, file: !3, line: 111, type: !2130, scopeLine: 112, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!2130 = !DISubroutineType(types: !2131)
!2131 = !{null}
!2132 = !DILocation(line: 113, column: 15, scope: !2129)
!2133 = !DILocation(line: 114, column: 1, scope: !2129)
!2134 = distinct !DISubprogram(name: "init_recog", scope: !3, file: !3, line: 117, type: !2130, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!2135 = !DILocation(line: 119, column: 15, scope: !2134)
!2136 = !DILocation(line: 120, column: 1, scope: !2134)
!2137 = distinct !DISubprogram(name: "check_asm_operands", scope: !3, file: !3, line: 127, type: !2138, scopeLine: 128, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!2138 = !DISubroutineType(types: !2139)
!2139 = !{!924, !900}
!2140 = !DILocalVariable(name: "x", arg: 1, scope: !2137, file: !3, line: 127, type: !900)
!2141 = !DILocation(line: 127, column: 25, scope: !2137)
!2142 = !DILocalVariable(name: "noperands", scope: !2137, file: !3, line: 129, type: !924)
!2143 = !DILocation(line: 129, column: 7, scope: !2137)
!2144 = !DILocalVariable(name: "operands", scope: !2137, file: !3, line: 130, type: !899)
!2145 = !DILocation(line: 130, column: 8, scope: !2137)
!2146 = !DILocalVariable(name: "constraints", scope: !2137, file: !3, line: 131, type: !1977)
!2147 = !DILocation(line: 131, column: 16, scope: !2137)
!2148 = !DILocalVariable(name: "i", scope: !2137, file: !3, line: 132, type: !924)
!2149 = !DILocation(line: 132, column: 7, scope: !2137)
!2150 = !DILocation(line: 135, column: 7, scope: !2151)
!2151 = distinct !DILexicalBlock(scope: !2137, file: !3, line: 135, column: 7)
!2152 = !DILocation(line: 135, column: 7, scope: !2137)
!2153 = !DILocation(line: 138, column: 36, scope: !2154)
!2154 = distinct !DILexicalBlock(scope: !2151, file: !3, line: 136, column: 5)
!2155 = !DILocation(line: 138, column: 21, scope: !2154)
!2156 = !DILocation(line: 138, column: 7, scope: !2154)
!2157 = !DILocation(line: 139, column: 7, scope: !2154)
!2158 = !DILocation(line: 140, column: 14, scope: !2154)
!2159 = !DILocation(line: 140, column: 32, scope: !2154)
!2160 = !DILocation(line: 140, column: 7, scope: !2154)
!2161 = !DILocation(line: 143, column: 30, scope: !2137)
!2162 = !DILocation(line: 143, column: 15, scope: !2137)
!2163 = !DILocation(line: 143, column: 13, scope: !2137)
!2164 = !DILocation(line: 144, column: 7, scope: !2165)
!2165 = distinct !DILexicalBlock(scope: !2137, file: !3, line: 144, column: 7)
!2166 = !DILocation(line: 144, column: 17, scope: !2165)
!2167 = !DILocation(line: 144, column: 7, scope: !2137)
!2168 = !DILocation(line: 145, column: 5, scope: !2165)
!2169 = !DILocation(line: 146, column: 7, scope: !2170)
!2170 = distinct !DILexicalBlock(scope: !2137, file: !3, line: 146, column: 7)
!2171 = !DILocation(line: 146, column: 17, scope: !2170)
!2172 = !DILocation(line: 146, column: 7, scope: !2137)
!2173 = !DILocation(line: 147, column: 5, scope: !2170)
!2174 = !DILocation(line: 149, column: 14, scope: !2137)
!2175 = !DILocation(line: 149, column: 12, scope: !2137)
!2176 = !DILocation(line: 150, column: 17, scope: !2137)
!2177 = !DILocation(line: 150, column: 15, scope: !2137)
!2178 = !DILocation(line: 152, column: 24, scope: !2137)
!2179 = !DILocation(line: 152, column: 27, scope: !2137)
!2180 = !DILocation(line: 152, column: 43, scope: !2137)
!2181 = !DILocation(line: 152, column: 3, scope: !2137)
!2182 = !DILocation(line: 154, column: 10, scope: !2183)
!2183 = distinct !DILexicalBlock(scope: !2137, file: !3, line: 154, column: 3)
!2184 = !DILocation(line: 154, column: 8, scope: !2183)
!2185 = !DILocation(line: 154, column: 15, scope: !2186)
!2186 = distinct !DILexicalBlock(scope: !2183, file: !3, line: 154, column: 3)
!2187 = !DILocation(line: 154, column: 19, scope: !2186)
!2188 = !DILocation(line: 154, column: 17, scope: !2186)
!2189 = !DILocation(line: 154, column: 3, scope: !2183)
!2190 = !DILocalVariable(name: "c", scope: !2191, file: !3, line: 156, type: !927)
!2191 = distinct !DILexicalBlock(scope: !2186, file: !3, line: 155, column: 5)
!2192 = !DILocation(line: 156, column: 19, scope: !2191)
!2193 = !DILocation(line: 156, column: 23, scope: !2191)
!2194 = !DILocation(line: 156, column: 35, scope: !2191)
!2195 = !DILocation(line: 157, column: 11, scope: !2196)
!2196 = distinct !DILexicalBlock(scope: !2191, file: !3, line: 157, column: 11)
!2197 = !DILocation(line: 157, column: 16, scope: !2196)
!2198 = !DILocation(line: 157, column: 11, scope: !2191)
!2199 = !DILocation(line: 158, column: 3, scope: !2196)
!2200 = !DILocation(line: 158, column: 2, scope: !2196)
!2201 = !DILocation(line: 159, column: 29, scope: !2202)
!2202 = distinct !DILexicalBlock(scope: !2191, file: !3, line: 159, column: 11)
!2203 = !DILocation(line: 159, column: 38, scope: !2202)
!2204 = !DILocation(line: 159, column: 42, scope: !2202)
!2205 = !DILocation(line: 159, column: 45, scope: !2202)
!2206 = !DILocation(line: 159, column: 13, scope: !2202)
!2207 = !DILocation(line: 159, column: 11, scope: !2191)
!2208 = !DILocation(line: 160, column: 2, scope: !2202)
!2209 = !DILocation(line: 161, column: 5, scope: !2191)
!2210 = !DILocation(line: 154, column: 31, scope: !2186)
!2211 = !DILocation(line: 154, column: 3, scope: !2186)
!2212 = distinct !{!2212, !2189, !2213}
!2213 = !DILocation(line: 161, column: 5, scope: !2183)
!2214 = !DILocation(line: 163, column: 3, scope: !2137)
!2215 = !DILocation(line: 164, column: 1, scope: !2137)
!2216 = distinct !DISubprogram(name: "extract_insn", scope: !3, file: !3, line: 2037, type: !2217, scopeLine: 2038, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!2217 = !DISubroutineType(types: !2218)
!2218 = !{null, !900}
!2219 = !DILocalVariable(name: "insn", arg: 1, scope: !2216, file: !3, line: 2037, type: !900)
!2220 = !DILocation(line: 2037, column: 19, scope: !2216)
!2221 = !DILocalVariable(name: "i", scope: !2216, file: !3, line: 2039, type: !924)
!2222 = !DILocation(line: 2039, column: 7, scope: !2216)
!2223 = !DILocalVariable(name: "icode", scope: !2216, file: !3, line: 2040, type: !924)
!2224 = !DILocation(line: 2040, column: 7, scope: !2216)
!2225 = !DILocalVariable(name: "noperands", scope: !2216, file: !3, line: 2041, type: !924)
!2226 = !DILocation(line: 2041, column: 7, scope: !2216)
!2227 = !DILocalVariable(name: "body", scope: !2216, file: !3, line: 2042, type: !900)
!2228 = !DILocation(line: 2042, column: 7, scope: !2216)
!2229 = !DILocation(line: 2042, column: 14, scope: !2216)
!2230 = !DILocation(line: 2044, column: 25, scope: !2216)
!2231 = !DILocation(line: 2045, column: 29, scope: !2216)
!2232 = !DILocation(line: 2046, column: 21, scope: !2216)
!2233 = !DILocation(line: 2048, column: 11, scope: !2216)
!2234 = !DILocation(line: 2048, column: 3, scope: !2216)
!2235 = !DILocation(line: 2056, column: 7, scope: !2236)
!2236 = distinct !DILexicalBlock(scope: !2216, file: !3, line: 2049, column: 5)
!2237 = !DILocation(line: 2059, column: 11, scope: !2238)
!2238 = distinct !DILexicalBlock(scope: !2236, file: !3, line: 2059, column: 11)
!2239 = !DILocation(line: 2059, column: 37, scope: !2238)
!2240 = !DILocation(line: 2059, column: 11, scope: !2236)
!2241 = !DILocation(line: 2060, column: 2, scope: !2238)
!2242 = !DILocation(line: 2062, column: 2, scope: !2238)
!2243 = !DILocation(line: 2064, column: 12, scope: !2244)
!2244 = distinct !DILexicalBlock(scope: !2236, file: !3, line: 2064, column: 11)
!2245 = !DILocation(line: 2064, column: 44, scope: !2244)
!2246 = !DILocation(line: 2065, column: 5, scope: !2244)
!2247 = !DILocation(line: 2065, column: 8, scope: !2244)
!2248 = !DILocation(line: 2065, column: 50, scope: !2244)
!2249 = !DILocation(line: 2066, column: 4, scope: !2244)
!2250 = !DILocation(line: 2066, column: 7, scope: !2244)
!2251 = !DILocation(line: 2066, column: 39, scope: !2244)
!2252 = !DILocation(line: 2064, column: 11, scope: !2236)
!2253 = !DILocation(line: 2067, column: 2, scope: !2244)
!2254 = !DILocation(line: 2069, column: 2, scope: !2244)
!2255 = !DILocation(line: 2066, column: 42, scope: !2244)
!2256 = !DILabel(scope: !2236, name: "asm_insn", file: !3, line: 2071)
!2257 = !DILocation(line: 2071, column: 5, scope: !2236)
!2258 = !DILocation(line: 2072, column: 58, scope: !2236)
!2259 = !DILocation(line: 2072, column: 43, scope: !2236)
!2260 = !DILocation(line: 2072, column: 41, scope: !2236)
!2261 = !DILocation(line: 2072, column: 31, scope: !2236)
!2262 = !DILocation(line: 2072, column: 29, scope: !2236)
!2263 = !DILocation(line: 2073, column: 11, scope: !2264)
!2264 = distinct !DILexicalBlock(scope: !2236, file: !3, line: 2073, column: 11)
!2265 = !DILocation(line: 2073, column: 21, scope: !2264)
!2266 = !DILocation(line: 2073, column: 11, scope: !2236)
!2267 = !DILocation(line: 2078, column: 4, scope: !2268)
!2268 = distinct !DILexicalBlock(scope: !2264, file: !3, line: 2074, column: 2)
!2269 = !DILocation(line: 2081, column: 25, scope: !2268)
!2270 = !DILocation(line: 2081, column: 4, scope: !2268)
!2271 = !DILocation(line: 2085, column: 8, scope: !2272)
!2272 = distinct !DILexicalBlock(scope: !2268, file: !3, line: 2085, column: 8)
!2273 = !DILocation(line: 2085, column: 18, scope: !2272)
!2274 = !DILocation(line: 2085, column: 8, scope: !2268)
!2275 = !DILocalVariable(name: "p", scope: !2276, file: !3, line: 2087, type: !927)
!2276 = distinct !DILexicalBlock(scope: !2272, file: !3, line: 2086, column: 6)
!2277 = !DILocation(line: 2087, column: 20, scope: !2276)
!2278 = !DILocation(line: 2087, column: 25, scope: !2276)
!2279 = !DILocation(line: 2088, column: 34, scope: !2276)
!2280 = !DILocation(line: 2089, column: 8, scope: !2276)
!2281 = !DILocation(line: 2089, column: 16, scope: !2276)
!2282 = !DILocation(line: 2089, column: 15, scope: !2276)
!2283 = !DILocation(line: 2090, column: 35, scope: !2276)
!2284 = !DILocation(line: 2090, column: 33, scope: !2276)
!2285 = !DILocation(line: 2090, column: 38, scope: !2276)
!2286 = !DILocation(line: 2090, column: 29, scope: !2276)
!2287 = distinct !{!2287, !2280, !2288}
!2288 = !DILocation(line: 2090, column: 44, scope: !2276)
!2289 = !DILocation(line: 2091, column: 6, scope: !2276)
!2290 = !DILocation(line: 2092, column: 4, scope: !2268)
!2291 = !DILocation(line: 2094, column: 7, scope: !2236)
!2292 = !DILabel(scope: !2236, name: "normal_insn", file: !3, line: 2097)
!2293 = !DILocation(line: 2097, column: 5, scope: !2236)
!2294 = !DILocation(line: 2101, column: 31, scope: !2236)
!2295 = !DILocation(line: 2101, column: 15, scope: !2236)
!2296 = !DILocation(line: 2101, column: 13, scope: !2236)
!2297 = !DILocation(line: 2102, column: 11, scope: !2298)
!2298 = distinct !DILexicalBlock(scope: !2236, file: !3, line: 2102, column: 11)
!2299 = !DILocation(line: 2102, column: 17, scope: !2298)
!2300 = !DILocation(line: 2102, column: 11, scope: !2236)
!2301 = !DILocation(line: 2103, column: 2, scope: !2298)
!2302 = !DILocation(line: 2105, column: 53, scope: !2236)
!2303 = !DILocation(line: 2105, column: 43, scope: !2236)
!2304 = !DILocation(line: 2105, column: 60, scope: !2236)
!2305 = !DILocation(line: 2105, column: 41, scope: !2236)
!2306 = !DILocation(line: 2105, column: 31, scope: !2236)
!2307 = !DILocation(line: 2105, column: 29, scope: !2236)
!2308 = !DILocation(line: 2106, column: 45, scope: !2236)
!2309 = !DILocation(line: 2106, column: 35, scope: !2236)
!2310 = !DILocation(line: 2106, column: 52, scope: !2236)
!2311 = !DILocation(line: 2106, column: 33, scope: !2236)
!2312 = !DILocation(line: 2107, column: 37, scope: !2236)
!2313 = !DILocation(line: 2107, column: 27, scope: !2236)
!2314 = !DILocation(line: 2107, column: 44, scope: !2236)
!2315 = !DILocation(line: 2107, column: 25, scope: !2236)
!2316 = !DILocation(line: 2109, column: 21, scope: !2236)
!2317 = !DILocation(line: 2109, column: 7, scope: !2236)
!2318 = !DILocation(line: 2111, column: 14, scope: !2319)
!2319 = distinct !DILexicalBlock(scope: !2236, file: !3, line: 2111, column: 7)
!2320 = !DILocation(line: 2111, column: 12, scope: !2319)
!2321 = !DILocation(line: 2111, column: 19, scope: !2322)
!2322 = distinct !DILexicalBlock(scope: !2319, file: !3, line: 2111, column: 7)
!2323 = !DILocation(line: 2111, column: 23, scope: !2322)
!2324 = !DILocation(line: 2111, column: 21, scope: !2322)
!2325 = !DILocation(line: 2111, column: 7, scope: !2319)
!2326 = !DILocation(line: 2113, column: 42, scope: !2327)
!2327 = distinct !DILexicalBlock(scope: !2322, file: !3, line: 2112, column: 2)
!2328 = !DILocation(line: 2113, column: 32, scope: !2327)
!2329 = !DILocation(line: 2113, column: 49, scope: !2327)
!2330 = !DILocation(line: 2113, column: 57, scope: !2327)
!2331 = !DILocation(line: 2113, column: 60, scope: !2327)
!2332 = !DILocation(line: 2113, column: 27, scope: !2327)
!2333 = !DILocation(line: 2113, column: 4, scope: !2327)
!2334 = !DILocation(line: 2113, column: 30, scope: !2327)
!2335 = !DILocation(line: 2114, column: 43, scope: !2327)
!2336 = !DILocation(line: 2114, column: 33, scope: !2327)
!2337 = !DILocation(line: 2114, column: 50, scope: !2327)
!2338 = !DILocation(line: 2114, column: 58, scope: !2327)
!2339 = !DILocation(line: 2114, column: 61, scope: !2327)
!2340 = !DILocation(line: 2114, column: 28, scope: !2327)
!2341 = !DILocation(line: 2114, column: 4, scope: !2327)
!2342 = !DILocation(line: 2114, column: 31, scope: !2327)
!2343 = !DILocation(line: 2116, column: 32, scope: !2344)
!2344 = distinct !DILexicalBlock(scope: !2327, file: !3, line: 2116, column: 8)
!2345 = !DILocation(line: 2116, column: 8, scope: !2344)
!2346 = !DILocation(line: 2116, column: 35, scope: !2344)
!2347 = !DILocation(line: 2116, column: 8, scope: !2327)
!2348 = !DILocation(line: 2117, column: 35, scope: !2344)
!2349 = !DILocation(line: 2117, column: 30, scope: !2344)
!2350 = !DILocation(line: 2117, column: 6, scope: !2344)
!2351 = !DILocation(line: 2117, column: 33, scope: !2344)
!2352 = !DILocation(line: 2118, column: 2, scope: !2327)
!2353 = !DILocation(line: 2111, column: 35, scope: !2322)
!2354 = !DILocation(line: 2111, column: 7, scope: !2322)
!2355 = distinct !{!2355, !2325, !2356}
!2356 = !DILocation(line: 2118, column: 2, scope: !2319)
!2357 = !DILocation(line: 2119, column: 5, scope: !2236)
!2358 = !DILocation(line: 2120, column: 10, scope: !2359)
!2359 = distinct !DILexicalBlock(scope: !2216, file: !3, line: 2120, column: 3)
!2360 = !DILocation(line: 2120, column: 8, scope: !2359)
!2361 = !DILocation(line: 2120, column: 15, scope: !2362)
!2362 = distinct !DILexicalBlock(scope: !2359, file: !3, line: 2120, column: 3)
!2363 = !DILocation(line: 2120, column: 19, scope: !2362)
!2364 = !DILocation(line: 2120, column: 17, scope: !2362)
!2365 = !DILocation(line: 2120, column: 3, scope: !2359)
!2366 = !DILocation(line: 2122, column: 33, scope: !2362)
!2367 = !DILocation(line: 2122, column: 10, scope: !2362)
!2368 = !DILocation(line: 2122, column: 39, scope: !2362)
!2369 = !DILocation(line: 2123, column: 28, scope: !2362)
!2370 = !DILocation(line: 2123, column: 5, scope: !2362)
!2371 = !DILocation(line: 2123, column: 34, scope: !2362)
!2372 = !DILocation(line: 2121, column: 29, scope: !2362)
!2373 = !DILocation(line: 2121, column: 5, scope: !2362)
!2374 = !DILocation(line: 2122, column: 7, scope: !2362)
!2375 = !DILocation(line: 2120, column: 31, scope: !2362)
!2376 = !DILocation(line: 2120, column: 3, scope: !2362)
!2377 = distinct !{!2377, !2365, !2378}
!2378 = !DILocation(line: 2124, column: 10, scope: !2359)
!2379 = !DILocation(line: 2126, column: 3, scope: !2216)
!2380 = !DILocation(line: 2128, column: 7, scope: !2381)
!2381 = distinct !DILexicalBlock(scope: !2216, file: !3, line: 2128, column: 7)
!2382 = !DILocation(line: 2128, column: 24, scope: !2381)
!2383 = !DILocation(line: 2128, column: 7, scope: !2216)
!2384 = !DILocation(line: 2129, column: 12, scope: !2385)
!2385 = distinct !DILexicalBlock(scope: !2381, file: !3, line: 2129, column: 5)
!2386 = !DILocation(line: 2129, column: 10, scope: !2385)
!2387 = !DILocation(line: 2129, column: 17, scope: !2388)
!2388 = distinct !DILexicalBlock(scope: !2385, file: !3, line: 2129, column: 5)
!2389 = !DILocation(line: 2129, column: 32, scope: !2388)
!2390 = !DILocation(line: 2129, column: 21, scope: !2388)
!2391 = !DILocation(line: 2129, column: 19, scope: !2388)
!2392 = !DILocation(line: 2129, column: 5, scope: !2385)
!2393 = !DILocation(line: 2130, column: 40, scope: !2388)
!2394 = !DILocation(line: 2130, column: 7, scope: !2388)
!2395 = !DILocation(line: 2130, column: 43, scope: !2388)
!2396 = !DILocation(line: 2129, column: 49, scope: !2388)
!2397 = !DILocation(line: 2129, column: 5, scope: !2388)
!2398 = distinct !{!2398, !2392, !2399}
!2399 = !DILocation(line: 2130, column: 45, scope: !2385)
!2400 = !DILocation(line: 2133, column: 25, scope: !2401)
!2401 = distinct !DILexicalBlock(scope: !2381, file: !3, line: 2132, column: 5)
!2402 = !DILocation(line: 2133, column: 23, scope: !2401)
!2403 = !DILocation(line: 2134, column: 14, scope: !2404)
!2404 = distinct !DILexicalBlock(scope: !2401, file: !3, line: 2134, column: 7)
!2405 = !DILocation(line: 2134, column: 12, scope: !2404)
!2406 = !DILocation(line: 2134, column: 19, scope: !2407)
!2407 = distinct !DILexicalBlock(scope: !2404, file: !3, line: 2134, column: 7)
!2408 = !DILocation(line: 2134, column: 34, scope: !2407)
!2409 = !DILocation(line: 2134, column: 23, scope: !2407)
!2410 = !DILocation(line: 2134, column: 21, scope: !2407)
!2411 = !DILocation(line: 2134, column: 7, scope: !2404)
!2412 = !DILocation(line: 2136, column: 24, scope: !2413)
!2413 = distinct !DILexicalBlock(scope: !2407, file: !3, line: 2135, column: 2)
!2414 = !DILocation(line: 2136, column: 22, scope: !2413)
!2415 = !DILocation(line: 2137, column: 60, scope: !2413)
!2416 = !DILocation(line: 2137, column: 42, scope: !2413)
!2417 = !DILocation(line: 2137, column: 37, scope: !2413)
!2418 = !DILocation(line: 2137, column: 4, scope: !2413)
!2419 = !DILocation(line: 2137, column: 40, scope: !2413)
!2420 = !DILocation(line: 2138, column: 2, scope: !2413)
!2421 = !DILocation(line: 2134, column: 51, scope: !2407)
!2422 = !DILocation(line: 2134, column: 7, scope: !2407)
!2423 = distinct !{!2423, !2411, !2424}
!2424 = !DILocation(line: 2138, column: 2, scope: !2404)
!2425 = !DILocation(line: 2141, column: 19, scope: !2216)
!2426 = !DILocation(line: 2142, column: 21, scope: !2216)
!2427 = !DILocation(line: 2143, column: 1, scope: !2216)
!2428 = distinct !DISubprogram(name: "constrain_operands", scope: !3, file: !3, line: 2320, type: !2429, scopeLine: 2321, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!2429 = !DISubroutineType(types: !2430)
!2430 = !{!924, !924}
!2431 = !DILocalVariable(name: "strict", arg: 1, scope: !2428, file: !3, line: 2320, type: !924)
!2432 = !DILocation(line: 2320, column: 25, scope: !2428)
!2433 = !DILocalVariable(name: "constraints", scope: !2428, file: !3, line: 2322, type: !2063)
!2434 = !DILocation(line: 2322, column: 15, scope: !2428)
!2435 = !DILocalVariable(name: "matching_operands", scope: !2428, file: !3, line: 2323, type: !2436)
!2436 = !DICompositeType(tag: DW_TAG_array_type, baseType: !924, size: 960, elements: !2058)
!2437 = !DILocation(line: 2323, column: 7, scope: !2428)
!2438 = !DILocalVariable(name: "earlyclobber", scope: !2428, file: !3, line: 2324, type: !2436)
!2439 = !DILocation(line: 2324, column: 7, scope: !2428)
!2440 = !DILocalVariable(name: "c", scope: !2428, file: !3, line: 2325, type: !924)
!2441 = !DILocation(line: 2325, column: 7, scope: !2428)
!2442 = !DILocalVariable(name: "funny_match", scope: !2428, file: !3, line: 2327, type: !2443)
!2443 = !DICompositeType(tag: DW_TAG_array_type, baseType: !2444, size: 1920, elements: !2058)
!2444 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "funny_match", file: !3, line: 2314, size: 64, elements: !2445)
!2445 = !{!2446, !2447}
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "this_op", scope: !2444, file: !3, line: 2316, baseType: !924, size: 32)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "other", scope: !2444, file: !3, line: 2316, baseType: !924, size: 32, offset: 32)
!2448 = !DILocation(line: 2327, column: 22, scope: !2428)
!2449 = !DILocalVariable(name: "funny_match_index", scope: !2428, file: !3, line: 2328, type: !924)
!2450 = !DILocation(line: 2328, column: 7, scope: !2428)
!2451 = !DILocation(line: 2330, column: 21, scope: !2428)
!2452 = !DILocation(line: 2331, column: 18, scope: !2453)
!2453 = distinct !DILexicalBlock(scope: !2428, file: !3, line: 2331, column: 7)
!2454 = !DILocation(line: 2331, column: 7, scope: !2453)
!2455 = !DILocation(line: 2331, column: 29, scope: !2453)
!2456 = !DILocation(line: 2331, column: 34, scope: !2453)
!2457 = !DILocation(line: 2331, column: 48, scope: !2453)
!2458 = !DILocation(line: 2331, column: 37, scope: !2453)
!2459 = !DILocation(line: 2331, column: 63, scope: !2453)
!2460 = !DILocation(line: 2331, column: 7, scope: !2428)
!2461 = !DILocation(line: 2332, column: 5, scope: !2453)
!2462 = !DILocation(line: 2334, column: 10, scope: !2463)
!2463 = distinct !DILexicalBlock(scope: !2428, file: !3, line: 2334, column: 3)
!2464 = !DILocation(line: 2334, column: 8, scope: !2463)
!2465 = !DILocation(line: 2334, column: 15, scope: !2466)
!2466 = distinct !DILexicalBlock(scope: !2463, file: !3, line: 2334, column: 3)
!2467 = !DILocation(line: 2334, column: 30, scope: !2466)
!2468 = !DILocation(line: 2334, column: 19, scope: !2466)
!2469 = !DILocation(line: 2334, column: 17, scope: !2466)
!2470 = !DILocation(line: 2334, column: 3, scope: !2463)
!2471 = !DILocation(line: 2336, column: 47, scope: !2472)
!2472 = distinct !DILexicalBlock(scope: !2466, file: !3, line: 2335, column: 5)
!2473 = !DILocation(line: 2336, column: 24, scope: !2472)
!2474 = !DILocation(line: 2336, column: 19, scope: !2472)
!2475 = !DILocation(line: 2336, column: 7, scope: !2472)
!2476 = !DILocation(line: 2336, column: 22, scope: !2472)
!2477 = !DILocation(line: 2337, column: 25, scope: !2472)
!2478 = !DILocation(line: 2337, column: 7, scope: !2472)
!2479 = !DILocation(line: 2337, column: 28, scope: !2472)
!2480 = !DILocation(line: 2338, column: 5, scope: !2472)
!2481 = !DILocation(line: 2334, column: 43, scope: !2466)
!2482 = !DILocation(line: 2334, column: 3, scope: !2466)
!2483 = distinct !{!2483, !2470, !2484}
!2484 = !DILocation(line: 2338, column: 5, scope: !2463)
!2485 = !DILocation(line: 2340, column: 3, scope: !2428)
!2486 = !DILocalVariable(name: "seen_earlyclobber_at", scope: !2487, file: !3, line: 2342, type: !924)
!2487 = distinct !DILexicalBlock(scope: !2428, file: !3, line: 2341, column: 5)
!2488 = !DILocation(line: 2342, column: 11, scope: !2487)
!2489 = !DILocalVariable(name: "opno", scope: !2487, file: !3, line: 2343, type: !924)
!2490 = !DILocation(line: 2343, column: 11, scope: !2487)
!2491 = !DILocalVariable(name: "lose", scope: !2487, file: !3, line: 2344, type: !924)
!2492 = !DILocation(line: 2344, column: 11, scope: !2487)
!2493 = !DILocation(line: 2345, column: 25, scope: !2487)
!2494 = !DILocation(line: 2347, column: 45, scope: !2495)
!2495 = distinct !DILexicalBlock(scope: !2487, file: !3, line: 2347, column: 11)
!2496 = !DILocation(line: 2347, column: 12, scope: !2495)
!2497 = !DILocation(line: 2347, column: 11, scope: !2487)
!2498 = !DILocalVariable(name: "i", scope: !2499, file: !3, line: 2349, type: !924)
!2499 = distinct !DILexicalBlock(scope: !2495, file: !3, line: 2348, column: 2)
!2500 = !DILocation(line: 2349, column: 8, scope: !2499)
!2501 = !DILocation(line: 2351, column: 11, scope: !2502)
!2502 = distinct !DILexicalBlock(scope: !2499, file: !3, line: 2351, column: 4)
!2503 = !DILocation(line: 2351, column: 9, scope: !2502)
!2504 = !DILocation(line: 2351, column: 16, scope: !2505)
!2505 = distinct !DILexicalBlock(scope: !2502, file: !3, line: 2351, column: 4)
!2506 = !DILocation(line: 2351, column: 31, scope: !2505)
!2507 = !DILocation(line: 2351, column: 20, scope: !2505)
!2508 = !DILocation(line: 2351, column: 18, scope: !2505)
!2509 = !DILocation(line: 2351, column: 4, scope: !2502)
!2510 = !DILocation(line: 2352, column: 53, scope: !2505)
!2511 = !DILocation(line: 2352, column: 41, scope: !2505)
!2512 = !DILocation(line: 2352, column: 23, scope: !2505)
!2513 = !DILocation(line: 2352, column: 18, scope: !2505)
!2514 = !DILocation(line: 2352, column: 6, scope: !2505)
!2515 = !DILocation(line: 2352, column: 21, scope: !2505)
!2516 = !DILocation(line: 2351, column: 44, scope: !2505)
!2517 = !DILocation(line: 2351, column: 4, scope: !2505)
!2518 = distinct !{!2518, !2509, !2519}
!2519 = !DILocation(line: 2352, column: 55, scope: !2502)
!2520 = !DILocation(line: 2354, column: 21, scope: !2499)
!2521 = !DILocation(line: 2355, column: 4, scope: !2499)
!2522 = !DILocation(line: 2358, column: 17, scope: !2523)
!2523 = distinct !DILexicalBlock(scope: !2487, file: !3, line: 2358, column: 7)
!2524 = !DILocation(line: 2358, column: 12, scope: !2523)
!2525 = !DILocation(line: 2358, column: 22, scope: !2526)
!2526 = distinct !DILexicalBlock(scope: !2523, file: !3, line: 2358, column: 7)
!2527 = !DILocation(line: 2358, column: 40, scope: !2526)
!2528 = !DILocation(line: 2358, column: 29, scope: !2526)
!2529 = !DILocation(line: 2358, column: 27, scope: !2526)
!2530 = !DILocation(line: 2358, column: 7, scope: !2523)
!2531 = !DILocalVariable(name: "op", scope: !2532, file: !3, line: 2360, type: !900)
!2532 = distinct !DILexicalBlock(scope: !2526, file: !3, line: 2359, column: 2)
!2533 = !DILocation(line: 2360, column: 8, scope: !2532)
!2534 = !DILocation(line: 2360, column: 32, scope: !2532)
!2535 = !DILocation(line: 2360, column: 13, scope: !2532)
!2536 = !DILocalVariable(name: "mode", scope: !2532, file: !3, line: 2361, type: !5)
!2537 = !DILocation(line: 2361, column: 22, scope: !2532)
!2538 = !DILocation(line: 2361, column: 29, scope: !2532)
!2539 = !DILocalVariable(name: "p", scope: !2532, file: !3, line: 2362, type: !927)
!2540 = !DILocation(line: 2362, column: 16, scope: !2532)
!2541 = !DILocation(line: 2362, column: 32, scope: !2532)
!2542 = !DILocation(line: 2362, column: 20, scope: !2532)
!2543 = !DILocalVariable(name: "offset", scope: !2532, file: !3, line: 2363, type: !924)
!2544 = !DILocation(line: 2363, column: 8, scope: !2532)
!2545 = !DILocalVariable(name: "win", scope: !2532, file: !3, line: 2364, type: !924)
!2546 = !DILocation(line: 2364, column: 8, scope: !2532)
!2547 = !DILocalVariable(name: "val", scope: !2532, file: !3, line: 2365, type: !924)
!2548 = !DILocation(line: 2365, column: 8, scope: !2532)
!2549 = !DILocalVariable(name: "len", scope: !2532, file: !3, line: 2366, type: !924)
!2550 = !DILocation(line: 2366, column: 8, scope: !2532)
!2551 = !DILocation(line: 2368, column: 17, scope: !2532)
!2552 = !DILocation(line: 2368, column: 4, scope: !2532)
!2553 = !DILocation(line: 2368, column: 23, scope: !2532)
!2554 = !DILocation(line: 2372, column: 8, scope: !2555)
!2555 = distinct !DILexicalBlock(scope: !2532, file: !3, line: 2372, column: 8)
!2556 = !DILocation(line: 2372, column: 8, scope: !2532)
!2557 = !DILocation(line: 2373, column: 11, scope: !2555)
!2558 = !DILocation(line: 2373, column: 9, scope: !2555)
!2559 = !DILocation(line: 2373, column: 6, scope: !2555)
!2560 = !DILocation(line: 2375, column: 8, scope: !2561)
!2561 = distinct !DILexicalBlock(scope: !2532, file: !3, line: 2375, column: 8)
!2562 = !DILocation(line: 2375, column: 22, scope: !2561)
!2563 = !DILocation(line: 2375, column: 8, scope: !2532)
!2564 = !DILocation(line: 2377, column: 12, scope: !2565)
!2565 = distinct !DILexicalBlock(scope: !2566, file: !3, line: 2377, column: 12)
!2566 = distinct !DILexicalBlock(scope: !2561, file: !3, line: 2376, column: 6)
!2567 = !DILocation(line: 2378, column: 5, scope: !2565)
!2568 = !DILocation(line: 2378, column: 8, scope: !2565)
!2569 = !DILocation(line: 2378, column: 32, scope: !2565)
!2570 = !DILocation(line: 2377, column: 12, scope: !2566)
!2571 = !DILocation(line: 2379, column: 33, scope: !2565)
!2572 = !DILocation(line: 2380, column: 12, scope: !2565)
!2573 = !DILocation(line: 2381, column: 12, scope: !2565)
!2574 = !DILocation(line: 2382, column: 12, scope: !2565)
!2575 = !DILocation(line: 2379, column: 12, scope: !2565)
!2576 = !DILocation(line: 2379, column: 10, scope: !2565)
!2577 = !DILocation(line: 2379, column: 3, scope: !2565)
!2578 = !DILocation(line: 2383, column: 13, scope: !2566)
!2579 = !DILocation(line: 2383, column: 11, scope: !2566)
!2580 = !DILocation(line: 2384, column: 6, scope: !2566)
!2581 = !DILocation(line: 2388, column: 9, scope: !2582)
!2582 = distinct !DILexicalBlock(scope: !2532, file: !3, line: 2388, column: 8)
!2583 = !DILocation(line: 2388, column: 8, scope: !2582)
!2584 = !DILocation(line: 2388, column: 11, scope: !2582)
!2585 = !DILocation(line: 2388, column: 16, scope: !2582)
!2586 = !DILocation(line: 2388, column: 20, scope: !2582)
!2587 = !DILocation(line: 2388, column: 19, scope: !2582)
!2588 = !DILocation(line: 2388, column: 22, scope: !2582)
!2589 = !DILocation(line: 2388, column: 8, scope: !2532)
!2590 = !DILocation(line: 2389, column: 10, scope: !2582)
!2591 = !DILocation(line: 2389, column: 6, scope: !2582)
!2592 = !DILocation(line: 2391, column: 4, scope: !2532)
!2593 = !DILocation(line: 2392, column: 19, scope: !2532)
!2594 = !DILocation(line: 2392, column: 18, scope: !2532)
!2595 = !DILocation(line: 2392, column: 16, scope: !2532)
!2596 = !DILocation(line: 2392, column: 28, scope: !2532)
!2597 = !DILocation(line: 2392, column: 26, scope: !2532)
!2598 = !DILocation(line: 2392, column: 51, scope: !2532)
!2599 = !DILocation(line: 2392, column: 6, scope: !2532)
!2600 = !DILocation(line: 2395, column: 7, scope: !2601)
!2601 = distinct !DILexicalBlock(scope: !2532, file: !3, line: 2393, column: 8)
!2602 = !DILocation(line: 2396, column: 3, scope: !2601)
!2603 = !DILocation(line: 2398, column: 5, scope: !2601)
!2604 = !DILocation(line: 2399, column: 3, scope: !2601)
!2605 = !DILocation(line: 2403, column: 3, scope: !2601)
!2606 = !DILocation(line: 2408, column: 3, scope: !2601)
!2607 = !DILocation(line: 2409, column: 6, scope: !2601)
!2608 = !DILocation(line: 2409, column: 5, scope: !2601)
!2609 = !DILocation(line: 2410, column: 11, scope: !2601)
!2610 = !DILocation(line: 2410, column: 10, scope: !2601)
!2611 = !DILocation(line: 2410, column: 13, scope: !2601)
!2612 = !DILocation(line: 2410, column: 17, scope: !2601)
!2613 = !DILocation(line: 2410, column: 16, scope: !2601)
!2614 = !DILocation(line: 2410, column: 19, scope: !2601)
!2615 = !DILocation(line: 0, scope: !2601)
!2616 = distinct !{!2616, !2606, !2617}
!2617 = !DILocation(line: 2410, column: 25, scope: !2601)
!2618 = !DILocation(line: 2411, column: 7, scope: !2601)
!2619 = !DILocation(line: 2412, column: 3, scope: !2601)
!2620 = !DILocation(line: 2415, column: 16, scope: !2601)
!2621 = !DILocation(line: 2415, column: 3, scope: !2601)
!2622 = !DILocation(line: 2415, column: 22, scope: !2601)
!2623 = !DILocation(line: 2416, column: 7, scope: !2624)
!2624 = distinct !DILexicalBlock(scope: !2601, file: !3, line: 2416, column: 7)
!2625 = !DILocation(line: 2416, column: 28, scope: !2624)
!2626 = !DILocation(line: 2416, column: 7, scope: !2601)
!2627 = !DILocation(line: 2417, column: 28, scope: !2624)
!2628 = !DILocation(line: 2417, column: 26, scope: !2624)
!2629 = !DILocation(line: 2417, column: 5, scope: !2624)
!2630 = !DILocation(line: 2418, column: 3, scope: !2601)
!2631 = !DILocalVariable(name: "end", scope: !2632, file: !3, line: 2432, type: !997)
!2632 = distinct !DILexicalBlock(scope: !2601, file: !3, line: 2422, column: 3)
!2633 = !DILocation(line: 2432, column: 11, scope: !2632)
!2634 = !DILocalVariable(name: "match", scope: !2632, file: !3, line: 2433, type: !924)
!2635 = !DILocation(line: 2433, column: 9, scope: !2632)
!2636 = !DILocation(line: 2435, column: 22, scope: !2632)
!2637 = !DILocation(line: 2435, column: 13, scope: !2632)
!2638 = !DILocation(line: 2435, column: 11, scope: !2632)
!2639 = !DILocation(line: 2436, column: 9, scope: !2632)
!2640 = !DILocation(line: 2436, column: 7, scope: !2632)
!2641 = !DILocation(line: 2438, column: 9, scope: !2642)
!2642 = distinct !DILexicalBlock(scope: !2632, file: !3, line: 2438, column: 9)
!2643 = !DILocation(line: 2438, column: 16, scope: !2642)
!2644 = !DILocation(line: 2438, column: 9, scope: !2632)
!2645 = !DILocation(line: 2439, column: 11, scope: !2642)
!2646 = !DILocation(line: 2439, column: 7, scope: !2642)
!2647 = !DILocalVariable(name: "op1", scope: !2648, file: !3, line: 2442, type: !900)
!2648 = distinct !DILexicalBlock(scope: !2642, file: !3, line: 2441, column: 7)
!2649 = !DILocation(line: 2442, column: 13, scope: !2648)
!2650 = !DILocation(line: 2442, column: 38, scope: !2648)
!2651 = !DILocation(line: 2442, column: 19, scope: !2648)
!2652 = !DILocalVariable(name: "op2", scope: !2648, file: !3, line: 2443, type: !900)
!2653 = !DILocation(line: 2443, column: 13, scope: !2648)
!2654 = !DILocation(line: 2443, column: 38, scope: !2648)
!2655 = !DILocation(line: 2443, column: 19, scope: !2648)
!2656 = !DILocation(line: 2447, column: 13, scope: !2657)
!2657 = distinct !DILexicalBlock(scope: !2648, file: !3, line: 2447, column: 13)
!2658 = !DILocation(line: 2447, column: 13, scope: !2648)
!2659 = !DILocation(line: 2448, column: 10, scope: !2657)
!2660 = !DILocation(line: 2448, column: 8, scope: !2657)
!2661 = !DILocation(line: 2448, column: 4, scope: !2657)
!2662 = !DILocation(line: 2449, column: 13, scope: !2663)
!2663 = distinct !DILexicalBlock(scope: !2648, file: !3, line: 2449, column: 13)
!2664 = !DILocation(line: 2449, column: 13, scope: !2648)
!2665 = !DILocation(line: 2450, column: 10, scope: !2663)
!2666 = !DILocation(line: 2450, column: 8, scope: !2663)
!2667 = !DILocation(line: 2450, column: 4, scope: !2663)
!2668 = !DILocation(line: 2452, column: 33, scope: !2648)
!2669 = !DILocation(line: 2452, column: 38, scope: !2648)
!2670 = !DILocation(line: 2452, column: 15, scope: !2648)
!2671 = !DILocation(line: 2452, column: 13, scope: !2648)
!2672 = !DILocation(line: 2455, column: 31, scope: !2632)
!2673 = !DILocation(line: 2455, column: 23, scope: !2632)
!2674 = !DILocation(line: 2455, column: 5, scope: !2632)
!2675 = !DILocation(line: 2455, column: 29, scope: !2632)
!2676 = !DILocation(line: 2456, column: 32, scope: !2632)
!2677 = !DILocation(line: 2456, column: 23, scope: !2632)
!2678 = !DILocation(line: 2456, column: 5, scope: !2632)
!2679 = !DILocation(line: 2456, column: 30, scope: !2632)
!2680 = !DILocation(line: 2458, column: 9, scope: !2681)
!2681 = distinct !DILexicalBlock(scope: !2632, file: !3, line: 2458, column: 9)
!2682 = !DILocation(line: 2458, column: 13, scope: !2681)
!2683 = !DILocation(line: 2458, column: 9, scope: !2632)
!2684 = !DILocation(line: 2459, column: 11, scope: !2681)
!2685 = !DILocation(line: 2459, column: 7, scope: !2681)
!2686 = !DILocation(line: 2464, column: 9, scope: !2687)
!2687 = distinct !DILexicalBlock(scope: !2632, file: !3, line: 2464, column: 9)
!2688 = !DILocation(line: 2464, column: 13, scope: !2687)
!2689 = !DILocation(line: 2464, column: 18, scope: !2687)
!2690 = !DILocation(line: 2464, column: 21, scope: !2687)
!2691 = !DILocation(line: 2464, column: 28, scope: !2687)
!2692 = !DILocation(line: 2464, column: 9, scope: !2632)
!2693 = !DILocation(line: 2466, column: 50, scope: !2694)
!2694 = distinct !DILexicalBlock(scope: !2687, file: !3, line: 2465, column: 7)
!2695 = !DILocation(line: 2466, column: 21, scope: !2694)
!2696 = !DILocation(line: 2466, column: 9, scope: !2694)
!2697 = !DILocation(line: 2466, column: 40, scope: !2694)
!2698 = !DILocation(line: 2466, column: 48, scope: !2694)
!2699 = !DILocation(line: 2467, column: 50, scope: !2694)
!2700 = !DILocation(line: 2467, column: 38, scope: !2694)
!2701 = !DILocation(line: 2467, column: 9, scope: !2694)
!2702 = !DILocation(line: 2467, column: 42, scope: !2694)
!2703 = !DILocation(line: 2467, column: 48, scope: !2694)
!2704 = !DILocation(line: 2468, column: 7, scope: !2694)
!2705 = !DILocation(line: 2470, column: 7, scope: !2601)
!2706 = !DILocation(line: 2471, column: 3, scope: !2601)
!2707 = !DILocation(line: 2478, column: 7, scope: !2708)
!2708 = distinct !DILexicalBlock(scope: !2601, file: !3, line: 2478, column: 7)
!2709 = !DILocation(line: 2478, column: 14, scope: !2708)
!2710 = !DILocation(line: 2479, column: 7, scope: !2708)
!2711 = !DILocation(line: 2479, column: 11, scope: !2708)
!2712 = !DILocation(line: 2478, column: 7, scope: !2601)
!2713 = !DILocation(line: 2481, column: 9, scope: !2708)
!2714 = !DILocation(line: 2481, column: 5, scope: !2708)
!2715 = !DILocation(line: 2482, column: 3, scope: !2601)
!2716 = !DILocation(line: 2491, column: 7, scope: !2717)
!2717 = distinct !DILexicalBlock(scope: !2601, file: !3, line: 2491, column: 7)
!2718 = !DILocation(line: 2491, column: 7, scope: !2601)
!2719 = !DILocation(line: 2493, column: 11, scope: !2720)
!2720 = distinct !DILexicalBlock(scope: !2721, file: !3, line: 2493, column: 11)
!2721 = distinct !DILexicalBlock(scope: !2717, file: !3, line: 2492, column: 5)
!2722 = !DILocation(line: 2493, column: 18, scope: !2720)
!2723 = !DILocation(line: 2495, column: 4, scope: !2720)
!2724 = !DILocation(line: 2495, column: 8, scope: !2720)
!2725 = !DILocation(line: 2496, column: 8, scope: !2720)
!2726 = !DILocation(line: 2496, column: 11, scope: !2720)
!2727 = !DILocation(line: 2496, column: 22, scope: !2720)
!2728 = !DILocation(line: 2497, column: 4, scope: !2720)
!2729 = !DILocation(line: 2497, column: 25, scope: !2720)
!2730 = !DILocation(line: 2497, column: 43, scope: !2720)
!2731 = !DILocation(line: 2497, column: 51, scope: !2720)
!2732 = !DILocation(line: 2497, column: 7, scope: !2720)
!2733 = !DILocation(line: 2493, column: 11, scope: !2721)
!2734 = !DILocation(line: 2498, column: 13, scope: !2720)
!2735 = !DILocation(line: 2498, column: 9, scope: !2720)
!2736 = !DILocation(line: 2499, column: 5, scope: !2721)
!2737 = !DILocation(line: 2500, column: 12, scope: !2738)
!2738 = distinct !DILexicalBlock(scope: !2717, file: !3, line: 2500, column: 12)
!2739 = !DILocation(line: 2500, column: 19, scope: !2738)
!2740 = !DILocation(line: 2500, column: 23, scope: !2738)
!2741 = !DILocation(line: 2500, column: 43, scope: !2738)
!2742 = !DILocation(line: 2500, column: 47, scope: !2738)
!2743 = !DILocation(line: 2500, column: 26, scope: !2738)
!2744 = !DILocation(line: 2500, column: 12, scope: !2717)
!2745 = !DILocation(line: 2501, column: 9, scope: !2738)
!2746 = !DILocation(line: 2501, column: 5, scope: !2738)
!2747 = !DILocation(line: 2502, column: 3, scope: !2601)
!2748 = !DILocation(line: 2508, column: 7, scope: !2601)
!2749 = !DILocation(line: 2509, column: 3, scope: !2601)
!2750 = !DILocation(line: 2514, column: 7, scope: !2751)
!2751 = distinct !DILexicalBlock(scope: !2601, file: !3, line: 2514, column: 7)
!2752 = !DILocation(line: 2514, column: 7, scope: !2601)
!2753 = !DILocation(line: 2516, column: 11, scope: !2754)
!2754 = distinct !DILexicalBlock(scope: !2755, file: !3, line: 2516, column: 11)
!2755 = distinct !DILexicalBlock(scope: !2751, file: !3, line: 2515, column: 5)
!2756 = !DILocation(line: 2516, column: 18, scope: !2754)
!2757 = !DILocation(line: 2517, column: 4, scope: !2754)
!2758 = !DILocation(line: 2518, column: 10, scope: !2754)
!2759 = !DILocation(line: 2518, column: 25, scope: !2754)
!2760 = !DILocation(line: 2519, column: 10, scope: !2754)
!2761 = !DILocation(line: 2517, column: 8, scope: !2754)
!2762 = !DILocation(line: 2516, column: 11, scope: !2755)
!2763 = !DILocation(line: 2520, column: 9, scope: !2754)
!2764 = !DILocation(line: 2521, column: 11, scope: !2765)
!2765 = distinct !DILexicalBlock(scope: !2755, file: !3, line: 2521, column: 11)
!2766 = !DILocation(line: 2521, column: 18, scope: !2765)
!2767 = !DILocation(line: 2522, column: 4, scope: !2765)
!2768 = !DILocation(line: 2523, column: 10, scope: !2765)
!2769 = !DILocation(line: 2523, column: 25, scope: !2765)
!2770 = !DILocation(line: 2524, column: 10, scope: !2765)
!2771 = !DILocation(line: 2522, column: 8, scope: !2765)
!2772 = !DILocation(line: 2521, column: 11, scope: !2755)
!2773 = !DILocation(line: 2525, column: 9, scope: !2765)
!2774 = !DILocation(line: 2526, column: 11, scope: !2755)
!2775 = !DILocation(line: 2527, column: 5, scope: !2755)
!2776 = !DILocation(line: 2529, column: 12, scope: !2777)
!2777 = distinct !DILexicalBlock(scope: !2751, file: !3, line: 2529, column: 12)
!2778 = !DILocation(line: 2529, column: 19, scope: !2777)
!2779 = !DILocation(line: 2529, column: 23, scope: !2777)
!2780 = !DILocation(line: 2529, column: 26, scope: !2777)
!2781 = !DILocation(line: 2529, column: 12, scope: !2751)
!2782 = !DILocation(line: 2530, column: 9, scope: !2777)
!2783 = !DILocation(line: 2530, column: 5, scope: !2777)
!2784 = !DILocation(line: 2532, column: 12, scope: !2785)
!2785 = distinct !DILexicalBlock(scope: !2777, file: !3, line: 2532, column: 12)
!2786 = !DILocation(line: 2532, column: 31, scope: !2785)
!2787 = !DILocation(line: 2532, column: 34, scope: !2785)
!2788 = !DILocation(line: 2533, column: 5, scope: !2785)
!2789 = !DILocation(line: 2533, column: 8, scope: !2785)
!2790 = !DILocation(line: 2533, column: 19, scope: !2785)
!2791 = !DILocation(line: 2532, column: 12, scope: !2777)
!2792 = !DILocation(line: 2534, column: 9, scope: !2785)
!2793 = !DILocation(line: 2534, column: 5, scope: !2785)
!2794 = !DILocation(line: 2535, column: 3, scope: !2601)
!2795 = !DILocation(line: 2538, column: 7, scope: !2796)
!2796 = distinct !DILexicalBlock(scope: !2601, file: !3, line: 2538, column: 7)
!2797 = !DILocation(line: 2539, column: 7, scope: !2796)
!2798 = !DILocation(line: 2539, column: 11, scope: !2796)
!2799 = !DILocation(line: 2539, column: 35, scope: !2796)
!2800 = !DILocation(line: 2540, column: 4, scope: !2796)
!2801 = !DILocation(line: 2540, column: 7, scope: !2796)
!2802 = !DILocation(line: 2540, column: 31, scope: !2796)
!2803 = !DILocation(line: 2538, column: 7, scope: !2601)
!2804 = !DILocation(line: 2541, column: 9, scope: !2796)
!2805 = !DILocation(line: 2541, column: 5, scope: !2796)
!2806 = !DILocation(line: 2542, column: 3, scope: !2601)
!2807 = !DILocation(line: 2545, column: 7, scope: !2808)
!2808 = distinct !DILexicalBlock(scope: !2601, file: !3, line: 2545, column: 7)
!2809 = !DILocation(line: 2546, column: 7, scope: !2808)
!2810 = !DILocation(line: 2546, column: 11, scope: !2808)
!2811 = !DILocation(line: 2546, column: 35, scope: !2808)
!2812 = !DILocation(line: 2547, column: 4, scope: !2808)
!2813 = !DILocation(line: 2547, column: 7, scope: !2808)
!2814 = !DILocation(line: 2547, column: 31, scope: !2808)
!2815 = !DILocation(line: 2545, column: 7, scope: !2601)
!2816 = !DILocation(line: 2548, column: 9, scope: !2808)
!2817 = !DILocation(line: 2548, column: 5, scope: !2808)
!2818 = !DILocation(line: 2549, column: 3, scope: !2601)
!2819 = !DILocation(line: 2553, column: 7, scope: !2820)
!2820 = distinct !DILexicalBlock(scope: !2601, file: !3, line: 2553, column: 7)
!2821 = !DILocation(line: 2553, column: 21, scope: !2820)
!2822 = !DILocation(line: 2554, column: 7, scope: !2820)
!2823 = !DILocation(line: 2554, column: 11, scope: !2820)
!2824 = !DILocation(line: 2554, column: 25, scope: !2820)
!2825 = !DILocation(line: 2555, column: 4, scope: !2820)
!2826 = !DILocation(line: 2555, column: 7, scope: !2820)
!2827 = !DILocation(line: 2555, column: 38, scope: !2820)
!2828 = !DILocation(line: 2553, column: 7, scope: !2601)
!2829 = !DILocation(line: 2556, column: 9, scope: !2820)
!2830 = !DILocation(line: 2556, column: 5, scope: !2820)
!2831 = !DILocation(line: 2557, column: 3, scope: !2601)
!2832 = !DILocation(line: 2561, column: 7, scope: !2833)
!2833 = distinct !DILexicalBlock(scope: !2601, file: !3, line: 2561, column: 7)
!2834 = !DILocation(line: 2561, column: 21, scope: !2833)
!2835 = !DILocation(line: 2562, column: 7, scope: !2833)
!2836 = !DILocation(line: 2562, column: 10, scope: !2833)
!2837 = !DILocation(line: 2561, column: 7, scope: !2601)
!2838 = !DILocation(line: 2563, column: 9, scope: !2833)
!2839 = !DILocation(line: 2563, column: 5, scope: !2833)
!2840 = !DILocation(line: 2564, column: 3, scope: !2601)
!2841 = !DILocation(line: 2567, column: 7, scope: !2842)
!2842 = distinct !DILexicalBlock(scope: !2601, file: !3, line: 2567, column: 7)
!2843 = !DILocation(line: 2568, column: 7, scope: !2842)
!2844 = !DILocation(line: 2568, column: 11, scope: !2842)
!2845 = !DILocation(line: 2568, column: 25, scope: !2842)
!2846 = !DILocation(line: 2569, column: 4, scope: !2842)
!2847 = !DILocation(line: 2569, column: 7, scope: !2842)
!2848 = !DILocation(line: 2569, column: 21, scope: !2842)
!2849 = !DILocation(line: 2567, column: 7, scope: !2601)
!2850 = !DILocation(line: 2570, column: 5, scope: !2842)
!2851 = !DILocation(line: 2569, column: 32, scope: !2842)
!2852 = !DILocation(line: 2572, column: 7, scope: !2853)
!2853 = distinct !DILexicalBlock(scope: !2601, file: !3, line: 2572, column: 7)
!2854 = !DILocation(line: 2572, column: 7, scope: !2601)
!2855 = !DILocation(line: 2573, column: 9, scope: !2853)
!2856 = !DILocation(line: 2573, column: 5, scope: !2853)
!2857 = !DILocation(line: 2574, column: 3, scope: !2601)
!2858 = !DILocation(line: 2577, column: 7, scope: !2859)
!2859 = distinct !DILexicalBlock(scope: !2601, file: !3, line: 2577, column: 7)
!2860 = !DILocation(line: 2578, column: 7, scope: !2859)
!2861 = !DILocation(line: 2578, column: 11, scope: !2859)
!2862 = !DILocation(line: 2578, column: 25, scope: !2859)
!2863 = !DILocation(line: 2579, column: 4, scope: !2859)
!2864 = !DILocation(line: 2579, column: 7, scope: !2859)
!2865 = !DILocation(line: 2579, column: 21, scope: !2859)
!2866 = !DILocation(line: 2577, column: 7, scope: !2601)
!2867 = !DILocation(line: 2580, column: 9, scope: !2859)
!2868 = !DILocation(line: 2580, column: 5, scope: !2859)
!2869 = !DILocation(line: 2581, column: 3, scope: !2601)
!2870 = !DILocation(line: 2591, column: 7, scope: !2871)
!2871 = distinct !DILexicalBlock(scope: !2601, file: !3, line: 2591, column: 7)
!2872 = !DILocation(line: 2592, column: 7, scope: !2871)
!2873 = !DILocation(line: 2592, column: 10, scope: !2871)
!2874 = !DILocation(line: 2591, column: 7, scope: !2601)
!2875 = !DILocation(line: 2593, column: 9, scope: !2871)
!2876 = !DILocation(line: 2593, column: 5, scope: !2871)
!2877 = !DILocation(line: 2594, column: 3, scope: !2601)
!2878 = !DILocation(line: 2597, column: 7, scope: !2879)
!2879 = distinct !DILexicalBlock(scope: !2601, file: !3, line: 2597, column: 7)
!2880 = !DILocation(line: 2598, column: 7, scope: !2879)
!2881 = !DILocation(line: 2598, column: 12, scope: !2879)
!2882 = !DILocation(line: 2598, column: 19, scope: !2879)
!2883 = !DILocation(line: 2598, column: 23, scope: !2879)
!2884 = !DILocation(line: 2598, column: 50, scope: !2879)
!2885 = !DILocation(line: 2598, column: 28, scope: !2879)
!2886 = !DILocation(line: 2599, column: 4, scope: !2879)
!2887 = !DILocation(line: 2599, column: 8, scope: !2879)
!2888 = !DILocation(line: 2599, column: 15, scope: !2879)
!2889 = !DILocation(line: 2600, column: 8, scope: !2879)
!2890 = !DILocation(line: 2600, column: 13, scope: !2879)
!2891 = !DILocation(line: 2600, column: 29, scope: !2879)
!2892 = !DILocation(line: 2600, column: 32, scope: !2879)
!2893 = !DILocation(line: 2601, column: 4, scope: !2879)
!2894 = !DILocation(line: 2601, column: 8, scope: !2879)
!2895 = !DILocation(line: 2602, column: 8, scope: !2879)
!2896 = !DILocation(line: 2602, column: 13, scope: !2879)
!2897 = !DILocation(line: 2603, column: 6, scope: !2879)
!2898 = !DILocation(line: 2603, column: 9, scope: !2879)
!2899 = !DILocation(line: 2603, column: 20, scope: !2879)
!2900 = !DILocation(line: 2597, column: 7, scope: !2601)
!2901 = !DILocation(line: 2604, column: 9, scope: !2879)
!2902 = !DILocation(line: 2604, column: 5, scope: !2879)
!2903 = !DILocation(line: 2605, column: 3, scope: !2601)
!2904 = !DILocation(line: 2608, column: 8, scope: !2905)
!2905 = distinct !DILexicalBlock(scope: !2601, file: !3, line: 2608, column: 7)
!2906 = !DILocation(line: 2608, column: 15, scope: !2905)
!2907 = !DILocation(line: 2608, column: 19, scope: !2905)
!2908 = !DILocation(line: 2608, column: 44, scope: !2905)
!2909 = !DILocation(line: 2608, column: 22, scope: !2905)
!2910 = !DILocation(line: 2609, column: 7, scope: !2905)
!2911 = !DILocation(line: 2609, column: 11, scope: !2905)
!2912 = !DILocation(line: 2609, column: 18, scope: !2905)
!2913 = !DILocation(line: 2609, column: 23, scope: !2905)
!2914 = !DILocation(line: 2609, column: 58, scope: !2905)
!2915 = !DILocation(line: 2609, column: 26, scope: !2905)
!2916 = !DILocation(line: 2611, column: 7, scope: !2905)
!2917 = !DILocation(line: 2611, column: 11, scope: !2905)
!2918 = !DILocation(line: 2611, column: 18, scope: !2905)
!2919 = !DILocation(line: 2612, column: 4, scope: !2905)
!2920 = !DILocation(line: 2612, column: 8, scope: !2905)
!2921 = !DILocation(line: 2612, column: 24, scope: !2905)
!2922 = !DILocation(line: 2612, column: 27, scope: !2905)
!2923 = !DILocation(line: 2614, column: 7, scope: !2905)
!2924 = !DILocation(line: 2614, column: 11, scope: !2905)
!2925 = !DILocation(line: 2614, column: 30, scope: !2905)
!2926 = !DILocation(line: 2614, column: 33, scope: !2905)
!2927 = !DILocation(line: 2615, column: 4, scope: !2905)
!2928 = !DILocation(line: 2615, column: 7, scope: !2905)
!2929 = !DILocation(line: 2615, column: 18, scope: !2905)
!2930 = !DILocation(line: 2608, column: 7, scope: !2601)
!2931 = !DILocation(line: 2616, column: 9, scope: !2905)
!2932 = !DILocation(line: 2616, column: 5, scope: !2905)
!2933 = !DILocation(line: 2617, column: 3, scope: !2601)
!2934 = !DILocalVariable(name: "cl", scope: !2935, file: !3, line: 2621, type: !628)
!2935 = distinct !DILexicalBlock(scope: !2601, file: !3, line: 2620, column: 3)
!2936 = !DILocation(line: 2621, column: 20, scope: !2935)
!2937 = !DILocation(line: 2623, column: 11, scope: !2935)
!2938 = !DILocation(line: 2623, column: 13, scope: !2935)
!2939 = !DILocation(line: 2624, column: 24, scope: !2935)
!2940 = !DILocation(line: 2623, column: 8, scope: !2935)
!2941 = !DILocation(line: 2625, column: 9, scope: !2942)
!2942 = distinct !DILexicalBlock(scope: !2935, file: !3, line: 2625, column: 9)
!2943 = !DILocation(line: 2625, column: 12, scope: !2942)
!2944 = !DILocation(line: 2625, column: 9, scope: !2935)
!2945 = !DILocation(line: 2627, column: 13, scope: !2946)
!2946 = distinct !DILexicalBlock(scope: !2947, file: !3, line: 2627, column: 13)
!2947 = distinct !DILexicalBlock(scope: !2942, file: !3, line: 2626, column: 7)
!2948 = !DILocation(line: 2627, column: 20, scope: !2946)
!2949 = !DILocation(line: 2628, column: 6, scope: !2946)
!2950 = !DILocation(line: 2628, column: 10, scope: !2946)
!2951 = !DILocation(line: 2628, column: 17, scope: !2946)
!2952 = !DILocation(line: 2629, column: 10, scope: !2946)
!2953 = !DILocation(line: 2629, column: 13, scope: !2946)
!2954 = !DILocation(line: 2630, column: 10, scope: !2946)
!2955 = !DILocation(line: 2630, column: 13, scope: !2946)
!2956 = !DILocation(line: 2630, column: 24, scope: !2946)
!2957 = !DILocation(line: 2631, column: 6, scope: !2946)
!2958 = !DILocation(line: 2631, column: 10, scope: !2946)
!2959 = !DILocation(line: 2631, column: 17, scope: !2946)
!2960 = !DILocation(line: 2631, column: 22, scope: !2946)
!2961 = !DILocation(line: 2631, column: 25, scope: !2946)
!2962 = !DILocation(line: 2631, column: 39, scope: !2946)
!2963 = !DILocation(line: 2632, column: 6, scope: !2946)
!2964 = !DILocation(line: 2632, column: 10, scope: !2946)
!2965 = !DILocation(line: 2633, column: 10, scope: !2946)
!2966 = !DILocation(line: 2633, column: 31, scope: !2946)
!2967 = !DILocation(line: 2633, column: 35, scope: !2946)
!2968 = !DILocation(line: 2633, column: 39, scope: !2946)
!2969 = !DILocation(line: 2633, column: 47, scope: !2946)
!2970 = !DILocation(line: 2633, column: 13, scope: !2946)
!2971 = !DILocation(line: 2627, column: 13, scope: !2947)
!2972 = !DILocation(line: 2634, column: 15, scope: !2946)
!2973 = !DILocation(line: 2634, column: 11, scope: !2946)
!2974 = !DILocation(line: 2635, column: 7, scope: !2947)
!2975 = !DILocation(line: 2637, column: 14, scope: !2976)
!2976 = distinct !DILexicalBlock(scope: !2942, file: !3, line: 2637, column: 14)
!2977 = !DILocation(line: 2637, column: 14, scope: !2942)
!2978 = !DILocation(line: 2638, column: 11, scope: !2976)
!2979 = !DILocation(line: 2638, column: 7, scope: !2976)
!2980 = !DILocation(line: 2655, column: 5, scope: !2935)
!2981 = !DILocation(line: 2657, column: 8, scope: !2601)
!2982 = !DILocation(line: 2658, column: 16, scope: !2532)
!2983 = !DILocation(line: 2658, column: 13, scope: !2532)
!2984 = !DILocation(line: 2658, column: 21, scope: !2532)
!2985 = distinct !{!2985, !2592, !2986}
!2986 = !DILocation(line: 2658, column: 22, scope: !2532)
!2987 = !DILocation(line: 2660, column: 24, scope: !2532)
!2988 = !DILocation(line: 2660, column: 16, scope: !2532)
!2989 = !DILocation(line: 2660, column: 4, scope: !2532)
!2990 = !DILocation(line: 2660, column: 22, scope: !2532)
!2991 = !DILocation(line: 2663, column: 10, scope: !2992)
!2992 = distinct !DILexicalBlock(scope: !2532, file: !3, line: 2663, column: 8)
!2993 = !DILocation(line: 2663, column: 8, scope: !2532)
!2994 = !DILocation(line: 2664, column: 11, scope: !2992)
!2995 = !DILocation(line: 2664, column: 6, scope: !2992)
!2996 = !DILocation(line: 2665, column: 2, scope: !2532)
!2997 = !DILocation(line: 2358, column: 56, scope: !2526)
!2998 = !DILocation(line: 2358, column: 7, scope: !2526)
!2999 = distinct !{!2999, !2530, !3000}
!3000 = !DILocation(line: 2665, column: 2, scope: !2523)
!3001 = !DILocation(line: 2668, column: 13, scope: !3002)
!3002 = distinct !DILexicalBlock(scope: !2487, file: !3, line: 2668, column: 11)
!3003 = !DILocation(line: 2668, column: 11, scope: !2487)
!3004 = !DILocalVariable(name: "opno", scope: !3005, file: !3, line: 2670, type: !924)
!3005 = distinct !DILexicalBlock(scope: !3002, file: !3, line: 2669, column: 2)
!3006 = !DILocation(line: 2670, column: 8, scope: !3005)
!3007 = !DILocalVariable(name: "eopno", scope: !3005, file: !3, line: 2670, type: !924)
!3008 = !DILocation(line: 2670, column: 14, scope: !3005)
!3009 = !DILocation(line: 2675, column: 8, scope: !3010)
!3010 = distinct !DILexicalBlock(scope: !3005, file: !3, line: 2675, column: 8)
!3011 = !DILocation(line: 2675, column: 15, scope: !3010)
!3012 = !DILocation(line: 2675, column: 20, scope: !3010)
!3013 = !DILocation(line: 2675, column: 23, scope: !3010)
!3014 = !DILocation(line: 2675, column: 44, scope: !3010)
!3015 = !DILocation(line: 2675, column: 8, scope: !3005)
!3016 = !DILocation(line: 2676, column: 19, scope: !3017)
!3017 = distinct !DILexicalBlock(scope: !3010, file: !3, line: 2676, column: 6)
!3018 = !DILocation(line: 2676, column: 17, scope: !3017)
!3019 = !DILocation(line: 2676, column: 11, scope: !3017)
!3020 = !DILocation(line: 2677, column: 4, scope: !3021)
!3021 = distinct !DILexicalBlock(scope: !3017, file: !3, line: 2676, column: 6)
!3022 = !DILocation(line: 2677, column: 23, scope: !3021)
!3023 = !DILocation(line: 2677, column: 12, scope: !3021)
!3024 = !DILocation(line: 2677, column: 10, scope: !3021)
!3025 = !DILocation(line: 2676, column: 6, scope: !3017)
!3026 = !DILocation(line: 2682, column: 25, scope: !3027)
!3027 = distinct !DILexicalBlock(scope: !3021, file: !3, line: 2682, column: 12)
!3028 = !DILocation(line: 2682, column: 12, scope: !3027)
!3029 = !DILocation(line: 2683, column: 5, scope: !3027)
!3030 = !DILocation(line: 2683, column: 8, scope: !3027)
!3031 = !DILocation(line: 2682, column: 12, scope: !3021)
!3032 = !DILocation(line: 2684, column: 13, scope: !3033)
!3033 = distinct !DILexicalBlock(scope: !3027, file: !3, line: 2684, column: 3)
!3034 = !DILocation(line: 2684, column: 8, scope: !3033)
!3035 = !DILocation(line: 2684, column: 18, scope: !3036)
!3036 = distinct !DILexicalBlock(scope: !3033, file: !3, line: 2684, column: 3)
!3037 = !DILocation(line: 2684, column: 36, scope: !3036)
!3038 = !DILocation(line: 2684, column: 25, scope: !3036)
!3039 = !DILocation(line: 2684, column: 23, scope: !3036)
!3040 = !DILocation(line: 2684, column: 3, scope: !3033)
!3041 = !DILocation(line: 2685, column: 10, scope: !3042)
!3042 = distinct !DILexicalBlock(scope: !3036, file: !3, line: 2685, column: 9)
!3043 = !DILocation(line: 2686, column: 10, scope: !3042)
!3044 = !DILocation(line: 2686, column: 37, scope: !3042)
!3045 = !DILocation(line: 2686, column: 13, scope: !3042)
!3046 = !DILocation(line: 2686, column: 43, scope: !3042)
!3047 = !DILocation(line: 2687, column: 9, scope: !3042)
!3048 = !DILocation(line: 2687, column: 12, scope: !3042)
!3049 = !DILocation(line: 2687, column: 20, scope: !3042)
!3050 = !DILocation(line: 2687, column: 17, scope: !3042)
!3051 = !DILocation(line: 2689, column: 9, scope: !3042)
!3052 = !DILocation(line: 2689, column: 36, scope: !3042)
!3053 = !DILocation(line: 2689, column: 13, scope: !3042)
!3054 = !DILocation(line: 2689, column: 12, scope: !3042)
!3055 = !DILocation(line: 2689, column: 42, scope: !3042)
!3056 = !DILocation(line: 2690, column: 9, scope: !3042)
!3057 = !DILocation(line: 2690, column: 33, scope: !3042)
!3058 = !DILocation(line: 2690, column: 15, scope: !3042)
!3059 = !DILocation(line: 2690, column: 42, scope: !3042)
!3060 = !DILocation(line: 2690, column: 39, scope: !3042)
!3061 = !DILocation(line: 2691, column: 8, scope: !3042)
!3062 = !DILocation(line: 2691, column: 48, scope: !3042)
!3063 = !DILocation(line: 2691, column: 29, scope: !3042)
!3064 = !DILocation(line: 2692, column: 27, scope: !3042)
!3065 = !DILocation(line: 2692, column: 8, scope: !3042)
!3066 = !DILocation(line: 2691, column: 11, scope: !3042)
!3067 = !DILocation(line: 2693, column: 9, scope: !3042)
!3068 = !DILocation(line: 2693, column: 57, scope: !3042)
!3069 = !DILocation(line: 2693, column: 38, scope: !3042)
!3070 = !DILocation(line: 2694, column: 29, scope: !3042)
!3071 = !DILocation(line: 2694, column: 10, scope: !3042)
!3072 = !DILocation(line: 2693, column: 14, scope: !3042)
!3073 = !DILocation(line: 2685, column: 9, scope: !3036)
!3074 = !DILocation(line: 2695, column: 12, scope: !3042)
!3075 = !DILocation(line: 2695, column: 7, scope: !3042)
!3076 = !DILocation(line: 2694, column: 35, scope: !3042)
!3077 = !DILocation(line: 2684, column: 52, scope: !3036)
!3078 = !DILocation(line: 2684, column: 3, scope: !3036)
!3079 = distinct !{!3079, !3040, !3080}
!3080 = !DILocation(line: 2695, column: 14, scope: !3033)
!3081 = !DILocation(line: 2678, column: 9, scope: !3021)
!3082 = !DILocation(line: 2676, column: 6, scope: !3021)
!3083 = distinct !{!3083, !3025, !3084}
!3084 = !DILocation(line: 2695, column: 14, scope: !3017)
!3085 = !DILocation(line: 2697, column: 10, scope: !3086)
!3086 = distinct !DILexicalBlock(scope: !3005, file: !3, line: 2697, column: 8)
!3087 = !DILocation(line: 2697, column: 8, scope: !3005)
!3088 = !DILocation(line: 2699, column: 8, scope: !3089)
!3089 = distinct !DILexicalBlock(scope: !3086, file: !3, line: 2698, column: 6)
!3090 = !DILocation(line: 2699, column: 15, scope: !3089)
!3091 = !DILocation(line: 2699, column: 35, scope: !3089)
!3092 = !DILocation(line: 2702, column: 40, scope: !3093)
!3093 = distinct !DILexicalBlock(scope: !3089, file: !3, line: 2700, column: 3)
!3094 = !DILocation(line: 2702, column: 28, scope: !3093)
!3095 = !DILocation(line: 2702, column: 59, scope: !3093)
!3096 = !DILocation(line: 2702, column: 9, scope: !3093)
!3097 = !DILocation(line: 2701, column: 36, scope: !3093)
!3098 = !DILocation(line: 2701, column: 24, scope: !3093)
!3099 = !DILocation(line: 2701, column: 55, scope: !3093)
!3100 = !DILocation(line: 2701, column: 5, scope: !3093)
!3101 = !DILocation(line: 2702, column: 7, scope: !3093)
!3102 = distinct !{!3102, !3088, !3103}
!3103 = !DILocation(line: 2703, column: 3, scope: !3089)
!3104 = !DILocation(line: 2705, column: 8, scope: !3089)
!3105 = !DILocation(line: 2707, column: 2, scope: !3005)
!3106 = !DILocation(line: 2709, column: 24, scope: !2487)
!3107 = !DILocation(line: 2710, column: 5, scope: !2487)
!3108 = !DILocation(line: 2711, column: 10, scope: !2428)
!3109 = !DILocation(line: 2711, column: 41, scope: !2428)
!3110 = !DILocation(line: 2711, column: 30, scope: !2428)
!3111 = !DILocation(line: 2711, column: 28, scope: !2428)
!3112 = distinct !{!3112, !2485, !3113}
!3113 = !DILocation(line: 2711, column: 55, scope: !2428)
!3114 = !DILocation(line: 2713, column: 21, scope: !2428)
!3115 = !DILocation(line: 2716, column: 7, scope: !3116)
!3116 = distinct !DILexicalBlock(scope: !2428, file: !3, line: 2716, column: 7)
!3117 = !DILocation(line: 2716, column: 14, scope: !3116)
!3118 = !DILocation(line: 2716, column: 7, scope: !2428)
!3119 = !DILocation(line: 2717, column: 12, scope: !3116)
!3120 = !DILocation(line: 2717, column: 5, scope: !3116)
!3121 = !DILocation(line: 2719, column: 5, scope: !3116)
!3122 = !DILocation(line: 2720, column: 1, scope: !2428)
!3123 = distinct !DISubprogram(name: "asm_noperands", scope: !3, file: !3, line: 1428, type: !3124, scopeLine: 1429, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!3124 = !DISubroutineType(types: !3125)
!3125 = !{!924, !3126}
!3126 = !DIDerivedType(tag: DW_TAG_typedef, name: "const_rtx", file: !901, line: 51, baseType: !1979)
!3127 = !DILocalVariable(name: "body", arg: 1, scope: !3123, file: !3, line: 1428, type: !3126)
!3128 = !DILocation(line: 1428, column: 26, scope: !3123)
!3129 = !DILocalVariable(name: "asm_op", scope: !3123, file: !3, line: 1430, type: !900)
!3130 = !DILocation(line: 1430, column: 7, scope: !3123)
!3131 = !DILocation(line: 1430, column: 38, scope: !3123)
!3132 = !DILocation(line: 1430, column: 16, scope: !3123)
!3133 = !DILocalVariable(name: "n_sets", scope: !3123, file: !3, line: 1431, type: !924)
!3134 = !DILocation(line: 1431, column: 7, scope: !3123)
!3135 = !DILocation(line: 1433, column: 7, scope: !3136)
!3136 = distinct !DILexicalBlock(scope: !3123, file: !3, line: 1433, column: 7)
!3137 = !DILocation(line: 1433, column: 14, scope: !3136)
!3138 = !DILocation(line: 1433, column: 7, scope: !3123)
!3139 = !DILocation(line: 1434, column: 5, scope: !3136)
!3140 = !DILocation(line: 1436, column: 7, scope: !3141)
!3141 = distinct !DILexicalBlock(scope: !3123, file: !3, line: 1436, column: 7)
!3142 = !DILocation(line: 1436, column: 23, scope: !3141)
!3143 = !DILocation(line: 1436, column: 7, scope: !3123)
!3144 = !DILocation(line: 1437, column: 12, scope: !3141)
!3145 = !DILocation(line: 1437, column: 5, scope: !3141)
!3146 = !DILocation(line: 1438, column: 12, scope: !3147)
!3147 = distinct !DILexicalBlock(scope: !3141, file: !3, line: 1438, column: 12)
!3148 = !DILocation(line: 1438, column: 28, scope: !3147)
!3149 = !DILocation(line: 1438, column: 12, scope: !3141)
!3150 = !DILocalVariable(name: "i", scope: !3151, file: !3, line: 1440, type: !924)
!3151 = distinct !DILexicalBlock(scope: !3147, file: !3, line: 1439, column: 5)
!3152 = !DILocation(line: 1440, column: 11, scope: !3151)
!3153 = !DILocation(line: 1441, column: 11, scope: !3154)
!3154 = distinct !DILexicalBlock(scope: !3151, file: !3, line: 1441, column: 11)
!3155 = !DILocation(line: 1441, column: 43, scope: !3154)
!3156 = !DILocation(line: 1441, column: 11, scope: !3151)
!3157 = !DILocation(line: 1447, column: 13, scope: !3158)
!3158 = distinct !DILexicalBlock(scope: !3159, file: !3, line: 1447, column: 4)
!3159 = distinct !DILexicalBlock(scope: !3154, file: !3, line: 1442, column: 2)
!3160 = !DILocation(line: 1447, column: 11, scope: !3158)
!3161 = !DILocation(line: 1447, column: 9, scope: !3158)
!3162 = !DILocation(line: 1447, column: 32, scope: !3163)
!3163 = distinct !DILexicalBlock(scope: !3158, file: !3, line: 1447, column: 4)
!3164 = !DILocation(line: 1447, column: 34, scope: !3163)
!3165 = !DILocation(line: 1447, column: 4, scope: !3158)
!3166 = !DILocation(line: 1449, column: 12, scope: !3167)
!3167 = distinct !DILexicalBlock(scope: !3168, file: !3, line: 1449, column: 12)
!3168 = distinct !DILexicalBlock(scope: !3163, file: !3, line: 1448, column: 6)
!3169 = !DILocation(line: 1449, column: 48, scope: !3167)
!3170 = !DILocation(line: 1449, column: 12, scope: !3168)
!3171 = !DILocation(line: 1450, column: 3, scope: !3167)
!3172 = !DILocation(line: 1451, column: 12, scope: !3173)
!3173 = distinct !DILexicalBlock(scope: !3168, file: !3, line: 1451, column: 12)
!3174 = !DILocation(line: 1451, column: 48, scope: !3173)
!3175 = !DILocation(line: 1451, column: 12, scope: !3168)
!3176 = !DILocation(line: 1452, column: 3, scope: !3173)
!3177 = !DILocation(line: 1453, column: 6, scope: !3168)
!3178 = !DILocation(line: 1447, column: 40, scope: !3163)
!3179 = !DILocation(line: 1447, column: 4, scope: !3163)
!3180 = distinct !{!3180, !3165, !3181}
!3181 = !DILocation(line: 1453, column: 6, scope: !3158)
!3182 = !DILocation(line: 1456, column: 13, scope: !3159)
!3183 = !DILocation(line: 1456, column: 11, scope: !3159)
!3184 = !DILocation(line: 1461, column: 11, scope: !3185)
!3185 = distinct !DILexicalBlock(scope: !3159, file: !3, line: 1461, column: 4)
!3186 = !DILocation(line: 1461, column: 9, scope: !3185)
!3187 = !DILocation(line: 1461, column: 16, scope: !3188)
!3188 = distinct !DILexicalBlock(scope: !3185, file: !3, line: 1461, column: 4)
!3189 = !DILocation(line: 1461, column: 20, scope: !3188)
!3190 = !DILocation(line: 1461, column: 18, scope: !3188)
!3191 = !DILocation(line: 1461, column: 4, scope: !3185)
!3192 = !DILocalVariable(name: "elt", scope: !3193, file: !3, line: 1463, type: !900)
!3193 = distinct !DILexicalBlock(scope: !3188, file: !3, line: 1462, column: 6)
!3194 = !DILocation(line: 1463, column: 12, scope: !3193)
!3195 = !DILocation(line: 1463, column: 18, scope: !3193)
!3196 = !DILocation(line: 1464, column: 12, scope: !3197)
!3197 = distinct !DILexicalBlock(scope: !3193, file: !3, line: 1464, column: 12)
!3198 = !DILocation(line: 1464, column: 27, scope: !3197)
!3199 = !DILocation(line: 1464, column: 12, scope: !3193)
!3200 = !DILocation(line: 1465, column: 3, scope: !3197)
!3201 = !DILocation(line: 1466, column: 12, scope: !3202)
!3202 = distinct !DILexicalBlock(scope: !3193, file: !3, line: 1466, column: 12)
!3203 = !DILocation(line: 1466, column: 37, scope: !3202)
!3204 = !DILocation(line: 1466, column: 12, scope: !3193)
!3205 = !DILocation(line: 1467, column: 3, scope: !3202)
!3206 = !DILocation(line: 1470, column: 12, scope: !3207)
!3207 = distinct !DILexicalBlock(scope: !3193, file: !3, line: 1470, column: 12)
!3208 = !DILocation(line: 1471, column: 8, scope: !3207)
!3209 = !DILocation(line: 1471, column: 5, scope: !3207)
!3210 = !DILocation(line: 1470, column: 12, scope: !3193)
!3211 = !DILocation(line: 1472, column: 3, scope: !3207)
!3212 = !DILocation(line: 1473, column: 6, scope: !3193)
!3213 = !DILocation(line: 1461, column: 29, scope: !3188)
!3214 = !DILocation(line: 1461, column: 4, scope: !3188)
!3215 = distinct !{!3215, !3191, !3216}
!3216 = !DILocation(line: 1473, column: 6, scope: !3185)
!3217 = !DILocation(line: 1474, column: 2, scope: !3159)
!3218 = !DILocation(line: 1480, column: 13, scope: !3219)
!3219 = distinct !DILexicalBlock(scope: !3220, file: !3, line: 1480, column: 4)
!3220 = distinct !DILexicalBlock(scope: !3154, file: !3, line: 1476, column: 2)
!3221 = !DILocation(line: 1480, column: 31, scope: !3219)
!3222 = !DILocation(line: 1480, column: 11, scope: !3219)
!3223 = !DILocation(line: 1480, column: 9, scope: !3219)
!3224 = !DILocation(line: 1480, column: 36, scope: !3225)
!3225 = distinct !DILexicalBlock(scope: !3219, file: !3, line: 1480, column: 4)
!3226 = !DILocation(line: 1480, column: 38, scope: !3225)
!3227 = !DILocation(line: 1480, column: 4, scope: !3219)
!3228 = !DILocation(line: 1481, column: 10, scope: !3229)
!3229 = distinct !DILexicalBlock(scope: !3225, file: !3, line: 1481, column: 10)
!3230 = !DILocation(line: 1481, column: 42, scope: !3229)
!3231 = !DILocation(line: 1481, column: 10, scope: !3225)
!3232 = !DILocation(line: 1482, column: 8, scope: !3229)
!3233 = !DILocation(line: 1481, column: 45, scope: !3229)
!3234 = !DILocation(line: 1480, column: 44, scope: !3225)
!3235 = !DILocation(line: 1480, column: 4, scope: !3225)
!3236 = distinct !{!3236, !3227, !3237}
!3237 = !DILocation(line: 1482, column: 16, scope: !3219)
!3238 = !DILocation(line: 1484, column: 5, scope: !3151)
!3239 = !DILocation(line: 1486, column: 11, scope: !3123)
!3240 = !DILocation(line: 1487, column: 6, scope: !3123)
!3241 = !DILocation(line: 1487, column: 4, scope: !3123)
!3242 = !DILocation(line: 1487, column: 43, scope: !3123)
!3243 = !DILocation(line: 1487, column: 41, scope: !3123)
!3244 = !DILocation(line: 1486, column: 3, scope: !3123)
!3245 = !DILocation(line: 1488, column: 1, scope: !3123)
!3246 = distinct !DISubprogram(name: "decode_asm_operands", scope: !3, file: !3, line: 1501, type: !3247, scopeLine: 1504, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!3247 = !DISubroutineType(types: !3248)
!3248 = !{!927, !900, !899, !3249, !1977, !3250, !3251}
!3249 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !899, size: 64)
!3250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64)
!3251 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1143, size: 64)
!3252 = !DILocalVariable(name: "body", arg: 1, scope: !3246, file: !3, line: 1501, type: !900)
!3253 = !DILocation(line: 1501, column: 26, scope: !3246)
!3254 = !DILocalVariable(name: "operands", arg: 2, scope: !3246, file: !3, line: 1501, type: !899)
!3255 = !DILocation(line: 1501, column: 37, scope: !3246)
!3256 = !DILocalVariable(name: "operand_locs", arg: 3, scope: !3246, file: !3, line: 1501, type: !3249)
!3257 = !DILocation(line: 1501, column: 53, scope: !3246)
!3258 = !DILocalVariable(name: "constraints", arg: 4, scope: !3246, file: !3, line: 1502, type: !1977)
!3259 = !DILocation(line: 1502, column: 21, scope: !3246)
!3260 = !DILocalVariable(name: "modes", arg: 5, scope: !3246, file: !3, line: 1502, type: !3250)
!3261 = !DILocation(line: 1502, column: 53, scope: !3246)
!3262 = !DILocalVariable(name: "loc", arg: 6, scope: !3246, file: !3, line: 1503, type: !3251)
!3263 = !DILocation(line: 1503, column: 20, scope: !3246)
!3264 = !DILocalVariable(name: "nbase", scope: !3246, file: !3, line: 1505, type: !924)
!3265 = !DILocation(line: 1505, column: 7, scope: !3246)
!3266 = !DILocalVariable(name: "n", scope: !3246, file: !3, line: 1505, type: !924)
!3267 = !DILocation(line: 1505, column: 18, scope: !3246)
!3268 = !DILocalVariable(name: "i", scope: !3246, file: !3, line: 1505, type: !924)
!3269 = !DILocation(line: 1505, column: 21, scope: !3246)
!3270 = !DILocalVariable(name: "asmop", scope: !3246, file: !3, line: 1506, type: !900)
!3271 = !DILocation(line: 1506, column: 7, scope: !3246)
!3272 = !DILocation(line: 1508, column: 11, scope: !3246)
!3273 = !DILocation(line: 1508, column: 3, scope: !3246)
!3274 = !DILocation(line: 1512, column: 15, scope: !3275)
!3275 = distinct !DILexicalBlock(scope: !3246, file: !3, line: 1509, column: 5)
!3276 = !DILocation(line: 1512, column: 13, scope: !3275)
!3277 = !DILocation(line: 1513, column: 7, scope: !3275)
!3278 = !DILocation(line: 1517, column: 15, scope: !3275)
!3279 = !DILocation(line: 1517, column: 13, scope: !3275)
!3280 = !DILocation(line: 1521, column: 11, scope: !3281)
!3281 = distinct !DILexicalBlock(scope: !3275, file: !3, line: 1521, column: 11)
!3282 = !DILocation(line: 1521, column: 11, scope: !3275)
!3283 = !DILocation(line: 1522, column: 16, scope: !3281)
!3284 = !DILocation(line: 1522, column: 2, scope: !3281)
!3285 = !DILocation(line: 1522, column: 14, scope: !3281)
!3286 = !DILocation(line: 1523, column: 11, scope: !3287)
!3287 = distinct !DILexicalBlock(scope: !3275, file: !3, line: 1523, column: 11)
!3288 = !DILocation(line: 1523, column: 11, scope: !3275)
!3289 = !DILocation(line: 1524, column: 21, scope: !3287)
!3290 = !DILocation(line: 1524, column: 2, scope: !3287)
!3291 = !DILocation(line: 1524, column: 18, scope: !3287)
!3292 = !DILocation(line: 1525, column: 11, scope: !3293)
!3293 = distinct !DILexicalBlock(scope: !3275, file: !3, line: 1525, column: 11)
!3294 = !DILocation(line: 1525, column: 11, scope: !3275)
!3295 = !DILocation(line: 1526, column: 19, scope: !3293)
!3296 = !DILocation(line: 1526, column: 2, scope: !3293)
!3297 = !DILocation(line: 1526, column: 17, scope: !3293)
!3298 = !DILocation(line: 1527, column: 11, scope: !3299)
!3299 = distinct !DILexicalBlock(scope: !3275, file: !3, line: 1527, column: 11)
!3300 = !DILocation(line: 1527, column: 11, scope: !3275)
!3301 = !DILocation(line: 1528, column: 13, scope: !3299)
!3302 = !DILocation(line: 1528, column: 2, scope: !3299)
!3303 = !DILocation(line: 1528, column: 11, scope: !3299)
!3304 = !DILocation(line: 1529, column: 13, scope: !3275)
!3305 = !DILocation(line: 1530, column: 7, scope: !3275)
!3306 = !DILocalVariable(name: "nparallel", scope: !3307, file: !3, line: 1534, type: !924)
!3307 = distinct !DILexicalBlock(scope: !3275, file: !3, line: 1533, column: 7)
!3308 = !DILocation(line: 1534, column: 6, scope: !3307)
!3309 = !DILocation(line: 1534, column: 18, scope: !3307)
!3310 = !DILocation(line: 1536, column: 10, scope: !3307)
!3311 = !DILocation(line: 1536, column: 8, scope: !3307)
!3312 = !DILocation(line: 1537, column: 6, scope: !3313)
!3313 = distinct !DILexicalBlock(scope: !3307, file: !3, line: 1537, column: 6)
!3314 = !DILocation(line: 1537, column: 23, scope: !3313)
!3315 = !DILocation(line: 1537, column: 6, scope: !3307)
!3316 = !DILocation(line: 1539, column: 14, scope: !3317)
!3317 = distinct !DILexicalBlock(scope: !3313, file: !3, line: 1538, column: 4)
!3318 = !DILocation(line: 1539, column: 12, scope: !3317)
!3319 = !DILocation(line: 1543, column: 13, scope: !3320)
!3320 = distinct !DILexicalBlock(scope: !3317, file: !3, line: 1543, column: 6)
!3321 = !DILocation(line: 1543, column: 11, scope: !3320)
!3322 = !DILocation(line: 1543, column: 18, scope: !3323)
!3323 = distinct !DILexicalBlock(scope: !3320, file: !3, line: 1543, column: 6)
!3324 = !DILocation(line: 1543, column: 22, scope: !3323)
!3325 = !DILocation(line: 1543, column: 20, scope: !3323)
!3326 = !DILocation(line: 1543, column: 6, scope: !3320)
!3327 = !DILocation(line: 1545, column: 7, scope: !3328)
!3328 = distinct !DILexicalBlock(scope: !3329, file: !3, line: 1545, column: 7)
!3329 = distinct !DILexicalBlock(scope: !3323, file: !3, line: 1544, column: 8)
!3330 = !DILocation(line: 1545, column: 39, scope: !3328)
!3331 = !DILocation(line: 1545, column: 7, scope: !3329)
!3332 = !DILocation(line: 1546, column: 5, scope: !3328)
!3333 = !DILocation(line: 1547, column: 7, scope: !3334)
!3334 = distinct !DILexicalBlock(scope: !3329, file: !3, line: 1547, column: 7)
!3335 = !DILocation(line: 1547, column: 7, scope: !3329)
!3336 = !DILocation(line: 1548, column: 19, scope: !3334)
!3337 = !DILocation(line: 1548, column: 5, scope: !3334)
!3338 = !DILocation(line: 1548, column: 14, scope: !3334)
!3339 = !DILocation(line: 1548, column: 17, scope: !3334)
!3340 = !DILocation(line: 1549, column: 7, scope: !3341)
!3341 = distinct !DILexicalBlock(scope: !3329, file: !3, line: 1549, column: 7)
!3342 = !DILocation(line: 1549, column: 7, scope: !3329)
!3343 = !DILocation(line: 1550, column: 24, scope: !3341)
!3344 = !DILocation(line: 1550, column: 5, scope: !3341)
!3345 = !DILocation(line: 1550, column: 18, scope: !3341)
!3346 = !DILocation(line: 1550, column: 21, scope: !3341)
!3347 = !DILocation(line: 1551, column: 7, scope: !3348)
!3348 = distinct !DILexicalBlock(scope: !3329, file: !3, line: 1551, column: 7)
!3349 = !DILocation(line: 1551, column: 7, scope: !3329)
!3350 = !DILocation(line: 1552, column: 22, scope: !3348)
!3351 = !DILocation(line: 1552, column: 5, scope: !3348)
!3352 = !DILocation(line: 1552, column: 17, scope: !3348)
!3353 = !DILocation(line: 1552, column: 20, scope: !3348)
!3354 = !DILocation(line: 1553, column: 7, scope: !3355)
!3355 = distinct !DILexicalBlock(scope: !3329, file: !3, line: 1553, column: 7)
!3356 = !DILocation(line: 1553, column: 7, scope: !3329)
!3357 = !DILocation(line: 1554, column: 16, scope: !3355)
!3358 = !DILocation(line: 1554, column: 5, scope: !3355)
!3359 = !DILocation(line: 1554, column: 11, scope: !3355)
!3360 = !DILocation(line: 1554, column: 14, scope: !3355)
!3361 = !DILocation(line: 1555, column: 8, scope: !3329)
!3362 = !DILocation(line: 1543, column: 34, scope: !3323)
!3363 = !DILocation(line: 1543, column: 6, scope: !3323)
!3364 = distinct !{!3364, !3326, !3365}
!3365 = !DILocation(line: 1555, column: 8, scope: !3320)
!3366 = !DILocation(line: 1556, column: 14, scope: !3317)
!3367 = !DILocation(line: 1556, column: 12, scope: !3317)
!3368 = !DILocation(line: 1557, column: 4, scope: !3317)
!3369 = !DILocation(line: 1558, column: 2, scope: !3307)
!3370 = !DILocation(line: 1562, column: 7, scope: !3275)
!3371 = !DILocation(line: 1563, column: 5, scope: !3275)
!3372 = !DILocation(line: 1565, column: 7, scope: !3246)
!3373 = !DILocation(line: 1565, column: 5, scope: !3246)
!3374 = !DILocation(line: 1566, column: 10, scope: !3375)
!3375 = distinct !DILexicalBlock(scope: !3246, file: !3, line: 1566, column: 3)
!3376 = !DILocation(line: 1566, column: 8, scope: !3375)
!3377 = !DILocation(line: 1566, column: 15, scope: !3378)
!3378 = distinct !DILexicalBlock(scope: !3375, file: !3, line: 1566, column: 3)
!3379 = !DILocation(line: 1566, column: 19, scope: !3378)
!3380 = !DILocation(line: 1566, column: 17, scope: !3378)
!3381 = !DILocation(line: 1566, column: 3, scope: !3375)
!3382 = !DILocation(line: 1568, column: 11, scope: !3383)
!3383 = distinct !DILexicalBlock(scope: !3384, file: !3, line: 1568, column: 11)
!3384 = distinct !DILexicalBlock(scope: !3378, file: !3, line: 1567, column: 5)
!3385 = !DILocation(line: 1568, column: 11, scope: !3384)
!3386 = !DILocation(line: 1569, column: 29, scope: !3383)
!3387 = !DILocation(line: 1569, column: 2, scope: !3383)
!3388 = !DILocation(line: 1569, column: 15, scope: !3383)
!3389 = !DILocation(line: 1569, column: 23, scope: !3383)
!3390 = !DILocation(line: 1569, column: 21, scope: !3383)
!3391 = !DILocation(line: 1569, column: 26, scope: !3383)
!3392 = !DILocation(line: 1570, column: 11, scope: !3393)
!3393 = distinct !DILexicalBlock(scope: !3384, file: !3, line: 1570, column: 11)
!3394 = !DILocation(line: 1570, column: 11, scope: !3384)
!3395 = !DILocation(line: 1571, column: 24, scope: !3393)
!3396 = !DILocation(line: 1571, column: 2, scope: !3393)
!3397 = !DILocation(line: 1571, column: 11, scope: !3393)
!3398 = !DILocation(line: 1571, column: 19, scope: !3393)
!3399 = !DILocation(line: 1571, column: 17, scope: !3393)
!3400 = !DILocation(line: 1571, column: 22, scope: !3393)
!3401 = !DILocation(line: 1572, column: 11, scope: !3402)
!3402 = distinct !DILexicalBlock(scope: !3384, file: !3, line: 1572, column: 11)
!3403 = !DILocation(line: 1572, column: 11, scope: !3384)
!3404 = !DILocation(line: 1573, column: 27, scope: !3402)
!3405 = !DILocation(line: 1573, column: 2, scope: !3402)
!3406 = !DILocation(line: 1573, column: 14, scope: !3402)
!3407 = !DILocation(line: 1573, column: 22, scope: !3402)
!3408 = !DILocation(line: 1573, column: 20, scope: !3402)
!3409 = !DILocation(line: 1573, column: 25, scope: !3402)
!3410 = !DILocation(line: 1574, column: 11, scope: !3411)
!3411 = distinct !DILexicalBlock(scope: !3384, file: !3, line: 1574, column: 11)
!3412 = !DILocation(line: 1574, column: 11, scope: !3384)
!3413 = !DILocation(line: 1575, column: 21, scope: !3411)
!3414 = !DILocation(line: 1575, column: 2, scope: !3411)
!3415 = !DILocation(line: 1575, column: 8, scope: !3411)
!3416 = !DILocation(line: 1575, column: 16, scope: !3411)
!3417 = !DILocation(line: 1575, column: 14, scope: !3411)
!3418 = !DILocation(line: 1575, column: 19, scope: !3411)
!3419 = !DILocation(line: 1576, column: 5, scope: !3384)
!3420 = !DILocation(line: 1566, column: 23, scope: !3378)
!3421 = !DILocation(line: 1566, column: 3, scope: !3378)
!3422 = distinct !{!3422, !3381, !3423}
!3423 = !DILocation(line: 1576, column: 5, scope: !3375)
!3424 = !DILocation(line: 1577, column: 12, scope: !3246)
!3425 = !DILocation(line: 1577, column: 9, scope: !3246)
!3426 = !DILocation(line: 1579, column: 7, scope: !3246)
!3427 = !DILocation(line: 1579, column: 5, scope: !3246)
!3428 = !DILocation(line: 1580, column: 10, scope: !3429)
!3429 = distinct !DILexicalBlock(scope: !3246, file: !3, line: 1580, column: 3)
!3430 = !DILocation(line: 1580, column: 8, scope: !3429)
!3431 = !DILocation(line: 1580, column: 15, scope: !3432)
!3432 = distinct !DILexicalBlock(scope: !3429, file: !3, line: 1580, column: 3)
!3433 = !DILocation(line: 1580, column: 19, scope: !3432)
!3434 = !DILocation(line: 1580, column: 17, scope: !3432)
!3435 = !DILocation(line: 1580, column: 3, scope: !3429)
!3436 = !DILocation(line: 1582, column: 11, scope: !3437)
!3437 = distinct !DILexicalBlock(scope: !3438, file: !3, line: 1582, column: 11)
!3438 = distinct !DILexicalBlock(scope: !3432, file: !3, line: 1581, column: 5)
!3439 = !DILocation(line: 1582, column: 11, scope: !3438)
!3440 = !DILocation(line: 1583, column: 29, scope: !3437)
!3441 = !DILocation(line: 1583, column: 2, scope: !3437)
!3442 = !DILocation(line: 1583, column: 15, scope: !3437)
!3443 = !DILocation(line: 1583, column: 23, scope: !3437)
!3444 = !DILocation(line: 1583, column: 21, scope: !3437)
!3445 = !DILocation(line: 1583, column: 26, scope: !3437)
!3446 = !DILocation(line: 1584, column: 11, scope: !3447)
!3447 = distinct !DILexicalBlock(scope: !3438, file: !3, line: 1584, column: 11)
!3448 = !DILocation(line: 1584, column: 11, scope: !3438)
!3449 = !DILocation(line: 1585, column: 24, scope: !3447)
!3450 = !DILocation(line: 1585, column: 2, scope: !3447)
!3451 = !DILocation(line: 1585, column: 11, scope: !3447)
!3452 = !DILocation(line: 1585, column: 19, scope: !3447)
!3453 = !DILocation(line: 1585, column: 17, scope: !3447)
!3454 = !DILocation(line: 1585, column: 22, scope: !3447)
!3455 = !DILocation(line: 1586, column: 11, scope: !3456)
!3456 = distinct !DILexicalBlock(scope: !3438, file: !3, line: 1586, column: 11)
!3457 = !DILocation(line: 1586, column: 11, scope: !3438)
!3458 = !DILocation(line: 1587, column: 2, scope: !3456)
!3459 = !DILocation(line: 1587, column: 14, scope: !3456)
!3460 = !DILocation(line: 1587, column: 22, scope: !3456)
!3461 = !DILocation(line: 1587, column: 20, scope: !3456)
!3462 = !DILocation(line: 1587, column: 25, scope: !3456)
!3463 = !DILocation(line: 1588, column: 11, scope: !3464)
!3464 = distinct !DILexicalBlock(scope: !3438, file: !3, line: 1588, column: 11)
!3465 = !DILocation(line: 1588, column: 11, scope: !3438)
!3466 = !DILocation(line: 1589, column: 2, scope: !3464)
!3467 = !DILocation(line: 1589, column: 8, scope: !3464)
!3468 = !DILocation(line: 1589, column: 16, scope: !3464)
!3469 = !DILocation(line: 1589, column: 14, scope: !3464)
!3470 = !DILocation(line: 1589, column: 19, scope: !3464)
!3471 = !DILocation(line: 1590, column: 5, scope: !3438)
!3472 = !DILocation(line: 1580, column: 23, scope: !3432)
!3473 = !DILocation(line: 1580, column: 3, scope: !3432)
!3474 = distinct !{!3474, !3435, !3475}
!3475 = !DILocation(line: 1590, column: 5, scope: !3429)
!3476 = !DILocation(line: 1592, column: 7, scope: !3477)
!3477 = distinct !DILexicalBlock(scope: !3246, file: !3, line: 1592, column: 7)
!3478 = !DILocation(line: 1592, column: 7, scope: !3246)
!3479 = !DILocation(line: 1593, column: 12, scope: !3477)
!3480 = !DILocation(line: 1593, column: 6, scope: !3477)
!3481 = !DILocation(line: 1593, column: 10, scope: !3477)
!3482 = !DILocation(line: 1593, column: 5, scope: !3477)
!3483 = !DILocation(line: 1595, column: 10, scope: !3246)
!3484 = !DILocation(line: 1595, column: 3, scope: !3246)
!3485 = distinct !DISubprogram(name: "asm_operand_ok", scope: !3, file: !3, line: 1602, type: !3486, scopeLine: 1603, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!3486 = !DISubroutineType(types: !3487)
!3487 = !{!924, !900, !927, !1977}
!3488 = !DILocalVariable(name: "op", arg: 1, scope: !3485, file: !3, line: 1602, type: !900)
!3489 = !DILocation(line: 1602, column: 21, scope: !3485)
!3490 = !DILocalVariable(name: "constraint", arg: 2, scope: !3485, file: !3, line: 1602, type: !927)
!3491 = !DILocation(line: 1602, column: 37, scope: !3485)
!3492 = !DILocalVariable(name: "constraints", arg: 3, scope: !3485, file: !3, line: 1602, type: !1977)
!3493 = !DILocation(line: 1602, column: 62, scope: !3485)
!3494 = !DILocalVariable(name: "result", scope: !3485, file: !3, line: 1604, type: !924)
!3495 = !DILocation(line: 1604, column: 7, scope: !3485)
!3496 = !DILocation(line: 1607, column: 3, scope: !3485)
!3497 = !DILocation(line: 1611, column: 8, scope: !3498)
!3498 = distinct !DILexicalBlock(scope: !3485, file: !3, line: 1611, column: 7)
!3499 = !DILocation(line: 1611, column: 7, scope: !3498)
!3500 = !DILocation(line: 1611, column: 19, scope: !3498)
!3501 = !DILocation(line: 1611, column: 7, scope: !3485)
!3502 = !DILocation(line: 1612, column: 5, scope: !3498)
!3503 = !DILocation(line: 1614, column: 3, scope: !3485)
!3504 = !DILocation(line: 1614, column: 11, scope: !3485)
!3505 = !DILocation(line: 1614, column: 10, scope: !3485)
!3506 = !DILocalVariable(name: "c", scope: !3507, file: !3, line: 1616, type: !929)
!3507 = distinct !DILexicalBlock(scope: !3485, file: !3, line: 1615, column: 5)
!3508 = !DILocation(line: 1616, column: 12, scope: !3507)
!3509 = !DILocation(line: 1616, column: 17, scope: !3507)
!3510 = !DILocation(line: 1616, column: 16, scope: !3507)
!3511 = !DILocalVariable(name: "len", scope: !3507, file: !3, line: 1617, type: !924)
!3512 = !DILocation(line: 1617, column: 11, scope: !3507)
!3513 = !DILocation(line: 1618, column: 15, scope: !3507)
!3514 = !DILocation(line: 1618, column: 7, scope: !3507)
!3515 = !DILocation(line: 1621, column: 14, scope: !3516)
!3516 = distinct !DILexicalBlock(scope: !3507, file: !3, line: 1619, column: 2)
!3517 = !DILocation(line: 1622, column: 4, scope: !3516)
!3518 = distinct !{!3518, !3503, !3519}
!3519 = !DILocation(line: 1816, column: 5, scope: !3485)
!3520 = !DILocation(line: 1631, column: 4, scope: !3516)
!3521 = !DILocation(line: 1640, column: 8, scope: !3522)
!3522 = distinct !DILexicalBlock(scope: !3516, file: !3, line: 1640, column: 8)
!3523 = !DILocation(line: 1640, column: 8, scope: !3516)
!3524 = !DILocalVariable(name: "end", scope: !3525, file: !3, line: 1642, type: !997)
!3525 = distinct !DILexicalBlock(scope: !3522, file: !3, line: 1641, column: 6)
!3526 = !DILocation(line: 1642, column: 14, scope: !3525)
!3527 = !DILocalVariable(name: "match", scope: !3525, file: !3, line: 1643, type: !974)
!3528 = !DILocation(line: 1643, column: 22, scope: !3525)
!3529 = !DILocation(line: 1645, column: 25, scope: !3525)
!3530 = !DILocation(line: 1645, column: 16, scope: !3525)
!3531 = !DILocation(line: 1645, column: 14, scope: !3525)
!3532 = !DILocation(line: 1646, column: 13, scope: !3533)
!3533 = distinct !DILexicalBlock(scope: !3525, file: !3, line: 1646, column: 12)
!3534 = !DILocation(line: 1646, column: 12, scope: !3525)
!3535 = !DILocation(line: 1647, column: 28, scope: !3533)
!3536 = !DILocation(line: 1647, column: 32, scope: !3533)
!3537 = !DILocation(line: 1647, column: 44, scope: !3533)
!3538 = !DILocation(line: 1647, column: 12, scope: !3533)
!3539 = !DILocation(line: 1647, column: 10, scope: !3533)
!3540 = !DILocation(line: 1647, column: 3, scope: !3533)
!3541 = !DILocation(line: 1648, column: 36, scope: !3525)
!3542 = !DILocation(line: 1648, column: 19, scope: !3525)
!3543 = !DILocation(line: 1649, column: 6, scope: !3525)
!3544 = !DILocation(line: 1652, column: 8, scope: !3545)
!3545 = distinct !DILexicalBlock(scope: !3522, file: !3, line: 1651, column: 6)
!3546 = !DILocation(line: 1653, column: 13, scope: !3545)
!3547 = !DILocation(line: 1653, column: 3, scope: !3545)
!3548 = !DILocation(line: 1654, column: 15, scope: !3545)
!3549 = distinct !{!3549, !3544, !3550}
!3550 = !DILocation(line: 1654, column: 36, scope: !3545)
!3551 = !DILocation(line: 1655, column: 14, scope: !3552)
!3552 = distinct !DILexicalBlock(scope: !3545, file: !3, line: 1655, column: 12)
!3553 = !DILocation(line: 1655, column: 12, scope: !3545)
!3554 = !DILocation(line: 1656, column: 10, scope: !3552)
!3555 = !DILocation(line: 1656, column: 3, scope: !3552)
!3556 = !DILocation(line: 1658, column: 4, scope: !3516)
!3557 = !DILocation(line: 1661, column: 25, scope: !3558)
!3558 = distinct !DILexicalBlock(scope: !3516, file: !3, line: 1661, column: 8)
!3559 = !DILocation(line: 1661, column: 8, scope: !3558)
!3560 = !DILocation(line: 1661, column: 8, scope: !3516)
!3561 = !DILocation(line: 1662, column: 13, scope: !3558)
!3562 = !DILocation(line: 1662, column: 6, scope: !3558)
!3563 = !DILocation(line: 1663, column: 4, scope: !3516)
!3564 = !DILocation(line: 1667, column: 24, scope: !3565)
!3565 = distinct !DILexicalBlock(scope: !3516, file: !3, line: 1667, column: 8)
!3566 = !DILocation(line: 1667, column: 8, scope: !3565)
!3567 = !DILocation(line: 1667, column: 8, scope: !3516)
!3568 = !DILocation(line: 1668, column: 13, scope: !3565)
!3569 = !DILocation(line: 1668, column: 6, scope: !3565)
!3570 = !DILocation(line: 1669, column: 4, scope: !3516)
!3571 = !DILocation(line: 1672, column: 40, scope: !3572)
!3572 = distinct !DILexicalBlock(scope: !3516, file: !3, line: 1672, column: 8)
!3573 = !DILocation(line: 1672, column: 8, scope: !3572)
!3574 = !DILocation(line: 1672, column: 8, scope: !3516)
!3575 = !DILocation(line: 1673, column: 13, scope: !3572)
!3576 = !DILocation(line: 1673, column: 6, scope: !3572)
!3577 = !DILocation(line: 1674, column: 4, scope: !3516)
!3578 = !DILocation(line: 1684, column: 8, scope: !3579)
!3579 = distinct !DILexicalBlock(scope: !3516, file: !3, line: 1684, column: 8)
!3580 = !DILocation(line: 1684, column: 8, scope: !3516)
!3581 = !DILocation(line: 1688, column: 13, scope: !3579)
!3582 = !DILocation(line: 1688, column: 6, scope: !3579)
!3583 = !DILocation(line: 1689, column: 4, scope: !3516)
!3584 = !DILocation(line: 1692, column: 8, scope: !3585)
!3585 = distinct !DILexicalBlock(scope: !3516, file: !3, line: 1692, column: 8)
!3586 = !DILocation(line: 1692, column: 8, scope: !3516)
!3587 = !DILocation(line: 1696, column: 13, scope: !3585)
!3588 = !DILocation(line: 1696, column: 6, scope: !3585)
!3589 = !DILocation(line: 1697, column: 4, scope: !3516)
!3590 = !DILocation(line: 1701, column: 8, scope: !3591)
!3591 = distinct !DILexicalBlock(scope: !3516, file: !3, line: 1701, column: 8)
!3592 = !DILocation(line: 1701, column: 22, scope: !3591)
!3593 = !DILocation(line: 1702, column: 8, scope: !3591)
!3594 = !DILocation(line: 1702, column: 12, scope: !3591)
!3595 = !DILocation(line: 1702, column: 26, scope: !3591)
!3596 = !DILocation(line: 1703, column: 5, scope: !3591)
!3597 = !DILocation(line: 1703, column: 8, scope: !3591)
!3598 = !DILocation(line: 1703, column: 39, scope: !3591)
!3599 = !DILocation(line: 1701, column: 8, scope: !3516)
!3600 = !DILocation(line: 1704, column: 13, scope: !3591)
!3601 = !DILocation(line: 1704, column: 6, scope: !3591)
!3602 = !DILocation(line: 1705, column: 4, scope: !3516)
!3603 = !DILocation(line: 1708, column: 8, scope: !3604)
!3604 = distinct !DILexicalBlock(scope: !3516, file: !3, line: 1708, column: 8)
!3605 = !DILocation(line: 1708, column: 22, scope: !3604)
!3606 = !DILocation(line: 1709, column: 8, scope: !3604)
!3607 = !DILocation(line: 1709, column: 11, scope: !3604)
!3608 = !DILocation(line: 1708, column: 8, scope: !3516)
!3609 = !DILocation(line: 1710, column: 13, scope: !3604)
!3610 = !DILocation(line: 1710, column: 6, scope: !3604)
!3611 = !DILocation(line: 1711, column: 4, scope: !3516)
!3612 = !DILocation(line: 1713, column: 8, scope: !3613)
!3613 = distinct !DILexicalBlock(scope: !3516, file: !3, line: 1713, column: 8)
!3614 = !DILocation(line: 1713, column: 22, scope: !3613)
!3615 = !DILocation(line: 1714, column: 8, scope: !3613)
!3616 = !DILocation(line: 1714, column: 11, scope: !3613)
!3617 = !DILocation(line: 1713, column: 8, scope: !3516)
!3618 = !DILocation(line: 1715, column: 13, scope: !3613)
!3619 = !DILocation(line: 1715, column: 6, scope: !3613)
!3620 = !DILocation(line: 1716, column: 4, scope: !3516)
!3621 = !DILocation(line: 1719, column: 8, scope: !3622)
!3622 = distinct !DILexicalBlock(scope: !3516, file: !3, line: 1719, column: 8)
!3623 = !DILocation(line: 1720, column: 8, scope: !3622)
!3624 = !DILocation(line: 1720, column: 12, scope: !3622)
!3625 = !DILocation(line: 1720, column: 26, scope: !3622)
!3626 = !DILocation(line: 1721, column: 5, scope: !3622)
!3627 = !DILocation(line: 1721, column: 8, scope: !3622)
!3628 = !DILocation(line: 1721, column: 22, scope: !3622)
!3629 = !DILocation(line: 1719, column: 8, scope: !3516)
!3630 = !DILocation(line: 1722, column: 6, scope: !3622)
!3631 = !DILocation(line: 1721, column: 33, scope: !3622)
!3632 = !DILocation(line: 1726, column: 8, scope: !3633)
!3633 = distinct !DILexicalBlock(scope: !3516, file: !3, line: 1726, column: 8)
!3634 = !DILocation(line: 1726, column: 24, scope: !3633)
!3635 = !DILocation(line: 1726, column: 30, scope: !3633)
!3636 = !DILocation(line: 1726, column: 39, scope: !3633)
!3637 = !DILocation(line: 1726, column: 42, scope: !3633)
!3638 = !DILocation(line: 1726, column: 8, scope: !3516)
!3639 = !DILocation(line: 1727, column: 13, scope: !3633)
!3640 = !DILocation(line: 1727, column: 6, scope: !3633)
!3641 = !DILocation(line: 1728, column: 4, scope: !3516)
!3642 = !DILocation(line: 1731, column: 8, scope: !3643)
!3643 = distinct !DILexicalBlock(scope: !3516, file: !3, line: 1731, column: 8)
!3644 = !DILocation(line: 1732, column: 8, scope: !3643)
!3645 = !DILocation(line: 1732, column: 12, scope: !3643)
!3646 = !DILocation(line: 1732, column: 26, scope: !3643)
!3647 = !DILocation(line: 1733, column: 5, scope: !3643)
!3648 = !DILocation(line: 1733, column: 8, scope: !3643)
!3649 = !DILocation(line: 1733, column: 22, scope: !3643)
!3650 = !DILocation(line: 1731, column: 8, scope: !3516)
!3651 = !DILocation(line: 1734, column: 13, scope: !3643)
!3652 = !DILocation(line: 1734, column: 6, scope: !3643)
!3653 = !DILocation(line: 1735, column: 4, scope: !3516)
!3654 = !DILocation(line: 1738, column: 8, scope: !3655)
!3655 = distinct !DILexicalBlock(scope: !3516, file: !3, line: 1738, column: 8)
!3656 = !DILocation(line: 1739, column: 8, scope: !3655)
!3657 = !DILocation(line: 1739, column: 11, scope: !3655)
!3658 = !DILocation(line: 1738, column: 8, scope: !3516)
!3659 = !DILocation(line: 1740, column: 13, scope: !3655)
!3660 = !DILocation(line: 1740, column: 6, scope: !3655)
!3661 = !DILocation(line: 1741, column: 4, scope: !3516)
!3662 = !DILocation(line: 1743, column: 8, scope: !3663)
!3663 = distinct !DILexicalBlock(scope: !3516, file: !3, line: 1743, column: 8)
!3664 = !DILocation(line: 1744, column: 8, scope: !3663)
!3665 = !DILocation(line: 1744, column: 11, scope: !3663)
!3666 = !DILocation(line: 1743, column: 8, scope: !3516)
!3667 = !DILocation(line: 1745, column: 13, scope: !3663)
!3668 = !DILocation(line: 1745, column: 6, scope: !3663)
!3669 = !DILocation(line: 1746, column: 4, scope: !3516)
!3670 = !DILocation(line: 1748, column: 8, scope: !3671)
!3671 = distinct !DILexicalBlock(scope: !3516, file: !3, line: 1748, column: 8)
!3672 = !DILocation(line: 1749, column: 8, scope: !3671)
!3673 = !DILocation(line: 1749, column: 11, scope: !3671)
!3674 = !DILocation(line: 1748, column: 8, scope: !3516)
!3675 = !DILocation(line: 1750, column: 13, scope: !3671)
!3676 = !DILocation(line: 1750, column: 6, scope: !3671)
!3677 = !DILocation(line: 1751, column: 4, scope: !3516)
!3678 = !DILocation(line: 1753, column: 8, scope: !3679)
!3679 = distinct !DILexicalBlock(scope: !3516, file: !3, line: 1753, column: 8)
!3680 = !DILocation(line: 1754, column: 8, scope: !3679)
!3681 = !DILocation(line: 1754, column: 11, scope: !3679)
!3682 = !DILocation(line: 1753, column: 8, scope: !3516)
!3683 = !DILocation(line: 1755, column: 13, scope: !3679)
!3684 = !DILocation(line: 1755, column: 6, scope: !3679)
!3685 = !DILocation(line: 1756, column: 4, scope: !3516)
!3686 = !DILocation(line: 1758, column: 8, scope: !3687)
!3687 = distinct !DILexicalBlock(scope: !3516, file: !3, line: 1758, column: 8)
!3688 = !DILocation(line: 1759, column: 8, scope: !3687)
!3689 = !DILocation(line: 1759, column: 11, scope: !3687)
!3690 = !DILocation(line: 1758, column: 8, scope: !3516)
!3691 = !DILocation(line: 1760, column: 13, scope: !3687)
!3692 = !DILocation(line: 1760, column: 6, scope: !3687)
!3693 = !DILocation(line: 1761, column: 4, scope: !3516)
!3694 = !DILocation(line: 1763, column: 8, scope: !3695)
!3695 = distinct !DILexicalBlock(scope: !3516, file: !3, line: 1763, column: 8)
!3696 = !DILocation(line: 1764, column: 8, scope: !3695)
!3697 = !DILocation(line: 1764, column: 11, scope: !3695)
!3698 = !DILocation(line: 1763, column: 8, scope: !3516)
!3699 = !DILocation(line: 1765, column: 13, scope: !3695)
!3700 = !DILocation(line: 1765, column: 6, scope: !3695)
!3701 = !DILocation(line: 1766, column: 4, scope: !3516)
!3702 = !DILocation(line: 1768, column: 8, scope: !3703)
!3703 = distinct !DILexicalBlock(scope: !3516, file: !3, line: 1768, column: 8)
!3704 = !DILocation(line: 1769, column: 8, scope: !3703)
!3705 = !DILocation(line: 1769, column: 11, scope: !3703)
!3706 = !DILocation(line: 1768, column: 8, scope: !3516)
!3707 = !DILocation(line: 1770, column: 13, scope: !3703)
!3708 = !DILocation(line: 1770, column: 6, scope: !3703)
!3709 = !DILocation(line: 1771, column: 4, scope: !3516)
!3710 = !DILocation(line: 1773, column: 8, scope: !3711)
!3711 = distinct !DILexicalBlock(scope: !3516, file: !3, line: 1773, column: 8)
!3712 = !DILocation(line: 1774, column: 8, scope: !3711)
!3713 = !DILocation(line: 1774, column: 11, scope: !3711)
!3714 = !DILocation(line: 1773, column: 8, scope: !3516)
!3715 = !DILocation(line: 1775, column: 13, scope: !3711)
!3716 = !DILocation(line: 1775, column: 6, scope: !3711)
!3717 = !DILocation(line: 1776, column: 4, scope: !3516)
!3718 = !DILocation(line: 1779, column: 11, scope: !3516)
!3719 = !DILocation(line: 1780, column: 4, scope: !3516)
!3720 = !DILocation(line: 1783, column: 25, scope: !3721)
!3721 = distinct !DILexicalBlock(scope: !3516, file: !3, line: 1783, column: 8)
!3722 = !DILocation(line: 1783, column: 8, scope: !3721)
!3723 = !DILocation(line: 1783, column: 8, scope: !3516)
!3724 = !DILocation(line: 1784, column: 13, scope: !3721)
!3725 = !DILocation(line: 1784, column: 6, scope: !3721)
!3726 = !DILocation(line: 1785, column: 4, scope: !3516)
!3727 = !DILocation(line: 1790, column: 8, scope: !3728)
!3728 = distinct !DILexicalBlock(scope: !3516, file: !3, line: 1790, column: 8)
!3729 = !DILocation(line: 1790, column: 50, scope: !3728)
!3730 = !DILocation(line: 1790, column: 8, scope: !3516)
!3731 = !DILocation(line: 1791, column: 6, scope: !3728)
!3732 = !DILocation(line: 1793, column: 12, scope: !3733)
!3733 = distinct !DILexicalBlock(scope: !3734, file: !3, line: 1793, column: 12)
!3734 = distinct !DILexicalBlock(scope: !3728, file: !3, line: 1791, column: 6)
!3735 = !DILocation(line: 1793, column: 26, scope: !3733)
!3736 = !DILocation(line: 1793, column: 12, scope: !3734)
!3737 = !DILocation(line: 1794, column: 3, scope: !3733)
!3738 = !DILocation(line: 1795, column: 30, scope: !3739)
!3739 = distinct !DILexicalBlock(scope: !3734, file: !3, line: 1795, column: 12)
!3740 = !DILocation(line: 1795, column: 12, scope: !3739)
!3741 = !DILocation(line: 1795, column: 12, scope: !3734)
!3742 = !DILocation(line: 1796, column: 10, scope: !3739)
!3743 = !DILocation(line: 1796, column: 3, scope: !3739)
!3744 = !DILocation(line: 1797, column: 6, scope: !3734)
!3745 = !DILocation(line: 1805, column: 13, scope: !3746)
!3746 = distinct !DILexicalBlock(scope: !3747, file: !3, line: 1805, column: 13)
!3747 = distinct !DILexicalBlock(scope: !3748, file: !3, line: 1802, column: 13)
!3748 = distinct !DILexicalBlock(scope: !3728, file: !3, line: 1799, column: 13)
!3749 = !DILocation(line: 1805, column: 13, scope: !3747)
!3750 = !DILocation(line: 1806, column: 13, scope: !3746)
!3751 = !DILocation(line: 1806, column: 6, scope: !3746)
!3752 = !DILocation(line: 1808, column: 4, scope: !3516)
!3753 = !DILocation(line: 1810, column: 13, scope: !3507)
!3754 = !DILocation(line: 1810, column: 11, scope: !3507)
!3755 = !DILocation(line: 1811, column: 7, scope: !3507)
!3756 = !DILocation(line: 1812, column: 12, scope: !3507)
!3757 = !DILocation(line: 1812, column: 2, scope: !3507)
!3758 = !DILocation(line: 1813, column: 14, scope: !3507)
!3759 = !DILocation(line: 1813, column: 20, scope: !3507)
!3760 = !DILocation(line: 1813, column: 24, scope: !3507)
!3761 = !DILocation(line: 1813, column: 23, scope: !3507)
!3762 = !DILocation(line: 0, scope: !3507)
!3763 = distinct !{!3763, !3755, !3764}
!3764 = !DILocation(line: 1813, column: 34, scope: !3507)
!3765 = !DILocation(line: 1814, column: 11, scope: !3766)
!3766 = distinct !DILexicalBlock(scope: !3507, file: !3, line: 1814, column: 11)
!3767 = !DILocation(line: 1814, column: 11, scope: !3507)
!3768 = !DILocation(line: 1815, column: 2, scope: !3766)
!3769 = !DILocation(line: 1818, column: 10, scope: !3485)
!3770 = !DILocation(line: 1818, column: 3, scope: !3485)
!3771 = !DILocation(line: 1819, column: 1, scope: !3485)
!3772 = distinct !DISubprogram(name: "validate_change", scope: !3, file: !3, line: 253, type: !3773, scopeLine: 254, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!3773 = !DISubroutineType(types: !3774)
!3774 = !{!1135, !900, !899, !900, !1135}
!3775 = !DILocalVariable(name: "object", arg: 1, scope: !3772, file: !3, line: 253, type: !900)
!3776 = !DILocation(line: 253, column: 22, scope: !3772)
!3777 = !DILocalVariable(name: "loc", arg: 2, scope: !3772, file: !3, line: 253, type: !899)
!3778 = !DILocation(line: 253, column: 35, scope: !3772)
!3779 = !DILocalVariable(name: "new_rtx", arg: 3, scope: !3772, file: !3, line: 253, type: !900)
!3780 = !DILocation(line: 253, column: 44, scope: !3772)
!3781 = !DILocalVariable(name: "in_group", arg: 4, scope: !3772, file: !3, line: 253, type: !1135)
!3782 = !DILocation(line: 253, column: 58, scope: !3772)
!3783 = !DILocation(line: 255, column: 29, scope: !3772)
!3784 = !DILocation(line: 255, column: 37, scope: !3772)
!3785 = !DILocation(line: 255, column: 42, scope: !3772)
!3786 = !DILocation(line: 255, column: 51, scope: !3772)
!3787 = !DILocation(line: 255, column: 10, scope: !3772)
!3788 = !DILocation(line: 255, column: 3, scope: !3772)
!3789 = distinct !DISubprogram(name: "validate_change_1", scope: !3, file: !3, line: 201, type: !3790, scopeLine: 202, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!3790 = !DISubroutineType(types: !3791)
!3791 = !{!1135, !900, !899, !900, !1135, !1135}
!3792 = !DILocalVariable(name: "object", arg: 1, scope: !3789, file: !3, line: 201, type: !900)
!3793 = !DILocation(line: 201, column: 24, scope: !3789)
!3794 = !DILocalVariable(name: "loc", arg: 2, scope: !3789, file: !3, line: 201, type: !899)
!3795 = !DILocation(line: 201, column: 37, scope: !3789)
!3796 = !DILocalVariable(name: "new_rtx", arg: 3, scope: !3789, file: !3, line: 201, type: !900)
!3797 = !DILocation(line: 201, column: 46, scope: !3789)
!3798 = !DILocalVariable(name: "in_group", arg: 4, scope: !3789, file: !3, line: 201, type: !1135)
!3799 = !DILocation(line: 201, column: 60, scope: !3789)
!3800 = !DILocalVariable(name: "unshare", arg: 5, scope: !3789, file: !3, line: 201, type: !1135)
!3801 = !DILocation(line: 201, column: 75, scope: !3789)
!3802 = !DILocalVariable(name: "old", scope: !3789, file: !3, line: 203, type: !900)
!3803 = !DILocation(line: 203, column: 7, scope: !3789)
!3804 = !DILocation(line: 203, column: 14, scope: !3789)
!3805 = !DILocation(line: 203, column: 13, scope: !3789)
!3806 = !DILocation(line: 205, column: 7, scope: !3807)
!3807 = distinct !DILexicalBlock(scope: !3789, file: !3, line: 205, column: 7)
!3808 = !DILocation(line: 205, column: 14, scope: !3807)
!3809 = !DILocation(line: 205, column: 11, scope: !3807)
!3810 = !DILocation(line: 205, column: 22, scope: !3807)
!3811 = !DILocation(line: 205, column: 38, scope: !3807)
!3812 = !DILocation(line: 205, column: 43, scope: !3807)
!3813 = !DILocation(line: 205, column: 25, scope: !3807)
!3814 = !DILocation(line: 205, column: 7, scope: !3789)
!3815 = !DILocation(line: 206, column: 5, scope: !3807)
!3816 = !DILocation(line: 208, column: 3, scope: !3789)
!3817 = !DILocation(line: 210, column: 10, scope: !3789)
!3818 = !DILocation(line: 210, column: 4, scope: !3789)
!3819 = !DILocation(line: 210, column: 8, scope: !3789)
!3820 = !DILocation(line: 213, column: 7, scope: !3821)
!3821 = distinct !DILexicalBlock(scope: !3789, file: !3, line: 213, column: 7)
!3822 = !DILocation(line: 213, column: 22, scope: !3821)
!3823 = !DILocation(line: 213, column: 19, scope: !3821)
!3824 = !DILocation(line: 213, column: 7, scope: !3789)
!3825 = !DILocation(line: 215, column: 11, scope: !3826)
!3826 = distinct !DILexicalBlock(scope: !3827, file: !3, line: 215, column: 11)
!3827 = distinct !DILexicalBlock(scope: !3821, file: !3, line: 214, column: 5)
!3828 = !DILocation(line: 215, column: 29, scope: !3826)
!3829 = !DILocation(line: 215, column: 11, scope: !3827)
!3830 = !DILocation(line: 218, column: 20, scope: !3826)
!3831 = !DILocation(line: 218, column: 2, scope: !3826)
!3832 = !DILocation(line: 220, column: 20, scope: !3826)
!3833 = !DILocation(line: 222, column: 17, scope: !3827)
!3834 = !DILocation(line: 222, column: 15, scope: !3827)
!3835 = !DILocation(line: 223, column: 5, scope: !3827)
!3836 = !DILocation(line: 225, column: 33, scope: !3789)
!3837 = !DILocation(line: 225, column: 3, scope: !3789)
!3838 = !DILocation(line: 225, column: 11, scope: !3789)
!3839 = !DILocation(line: 225, column: 24, scope: !3789)
!3840 = !DILocation(line: 225, column: 31, scope: !3789)
!3841 = !DILocation(line: 226, column: 30, scope: !3789)
!3842 = !DILocation(line: 226, column: 3, scope: !3789)
!3843 = !DILocation(line: 226, column: 11, scope: !3789)
!3844 = !DILocation(line: 226, column: 24, scope: !3789)
!3845 = !DILocation(line: 226, column: 28, scope: !3789)
!3846 = !DILocation(line: 227, column: 30, scope: !3789)
!3847 = !DILocation(line: 227, column: 3, scope: !3789)
!3848 = !DILocation(line: 227, column: 11, scope: !3789)
!3849 = !DILocation(line: 227, column: 24, scope: !3789)
!3850 = !DILocation(line: 227, column: 28, scope: !3789)
!3851 = !DILocation(line: 228, column: 34, scope: !3789)
!3852 = !DILocation(line: 228, column: 3, scope: !3789)
!3853 = !DILocation(line: 228, column: 11, scope: !3789)
!3854 = !DILocation(line: 228, column: 24, scope: !3789)
!3855 = !DILocation(line: 228, column: 32, scope: !3789)
!3856 = !DILocation(line: 230, column: 7, scope: !3857)
!3857 = distinct !DILexicalBlock(scope: !3789, file: !3, line: 230, column: 7)
!3858 = !DILocation(line: 230, column: 14, scope: !3857)
!3859 = !DILocation(line: 230, column: 18, scope: !3857)
!3860 = !DILocation(line: 230, column: 7, scope: !3789)
!3861 = !DILocation(line: 234, column: 39, scope: !3862)
!3862 = distinct !DILexicalBlock(scope: !3857, file: !3, line: 231, column: 5)
!3863 = !DILocation(line: 234, column: 7, scope: !3862)
!3864 = !DILocation(line: 234, column: 15, scope: !3862)
!3865 = !DILocation(line: 234, column: 28, scope: !3862)
!3866 = !DILocation(line: 234, column: 37, scope: !3862)
!3867 = !DILocation(line: 235, column: 7, scope: !3862)
!3868 = !DILocation(line: 235, column: 26, scope: !3862)
!3869 = !DILocation(line: 236, column: 5, scope: !3862)
!3870 = !DILocation(line: 238, column: 14, scope: !3789)
!3871 = !DILocation(line: 243, column: 7, scope: !3872)
!3872 = distinct !DILexicalBlock(scope: !3789, file: !3, line: 243, column: 7)
!3873 = !DILocation(line: 243, column: 7, scope: !3789)
!3874 = !DILocation(line: 244, column: 5, scope: !3872)
!3875 = !DILocation(line: 246, column: 12, scope: !3872)
!3876 = !DILocation(line: 246, column: 5, scope: !3872)
!3877 = !DILocation(line: 247, column: 1, scope: !3789)
!3878 = distinct !DISubprogram(name: "validate_unshare_change", scope: !3, file: !3, line: 262, type: !3773, scopeLine: 263, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!3879 = !DILocalVariable(name: "object", arg: 1, scope: !3878, file: !3, line: 262, type: !900)
!3880 = !DILocation(line: 262, column: 30, scope: !3878)
!3881 = !DILocalVariable(name: "loc", arg: 2, scope: !3878, file: !3, line: 262, type: !899)
!3882 = !DILocation(line: 262, column: 43, scope: !3878)
!3883 = !DILocalVariable(name: "new_rtx", arg: 3, scope: !3878, file: !3, line: 262, type: !900)
!3884 = !DILocation(line: 262, column: 52, scope: !3878)
!3885 = !DILocalVariable(name: "in_group", arg: 4, scope: !3878, file: !3, line: 262, type: !1135)
!3886 = !DILocation(line: 262, column: 66, scope: !3878)
!3887 = !DILocation(line: 264, column: 29, scope: !3878)
!3888 = !DILocation(line: 264, column: 37, scope: !3878)
!3889 = !DILocation(line: 264, column: 42, scope: !3878)
!3890 = !DILocation(line: 264, column: 51, scope: !3878)
!3891 = !DILocation(line: 264, column: 10, scope: !3878)
!3892 = !DILocation(line: 264, column: 3, scope: !3878)
!3893 = distinct !DISubprogram(name: "canonicalize_change_group", scope: !3, file: !3, line: 274, type: !3894, scopeLine: 275, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!3894 = !DISubroutineType(types: !3895)
!3895 = !{!1135, !900, !900}
!3896 = !DILocalVariable(name: "insn", arg: 1, scope: !3893, file: !3, line: 274, type: !900)
!3897 = !DILocation(line: 274, column: 32, scope: !3893)
!3898 = !DILocalVariable(name: "x", arg: 2, scope: !3893, file: !3, line: 274, type: !900)
!3899 = !DILocation(line: 274, column: 42, scope: !3893)
!3900 = !DILocation(line: 276, column: 7, scope: !3901)
!3901 = distinct !DILexicalBlock(scope: !3893, file: !3, line: 276, column: 7)
!3902 = !DILocation(line: 277, column: 7, scope: !3901)
!3903 = !DILocation(line: 277, column: 39, scope: !3901)
!3904 = !DILocation(line: 277, column: 52, scope: !3901)
!3905 = !DILocation(line: 277, column: 10, scope: !3901)
!3906 = !DILocation(line: 276, column: 7, scope: !3893)
!3907 = !DILocalVariable(name: "tem", scope: !3908, file: !3, line: 281, type: !900)
!3908 = distinct !DILexicalBlock(scope: !3901, file: !3, line: 278, column: 5)
!3909 = !DILocation(line: 281, column: 11, scope: !3908)
!3910 = !DILocation(line: 281, column: 17, scope: !3908)
!3911 = !DILocation(line: 282, column: 24, scope: !3908)
!3912 = !DILocation(line: 282, column: 31, scope: !3908)
!3913 = !DILocation(line: 282, column: 44, scope: !3908)
!3914 = !DILocation(line: 282, column: 7, scope: !3908)
!3915 = !DILocation(line: 283, column: 24, scope: !3908)
!3916 = !DILocation(line: 283, column: 31, scope: !3908)
!3917 = !DILocation(line: 283, column: 44, scope: !3908)
!3918 = !DILocation(line: 283, column: 7, scope: !3908)
!3919 = !DILocation(line: 284, column: 7, scope: !3908)
!3920 = !DILocation(line: 287, column: 5, scope: !3901)
!3921 = !DILocation(line: 288, column: 1, scope: !3893)
!3922 = distinct !DISubprogram(name: "insn_invalid_p", scope: !3, file: !3, line: 295, type: !2138, scopeLine: 296, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!3923 = !DILocalVariable(name: "insn", arg: 1, scope: !3922, file: !3, line: 295, type: !900)
!3924 = !DILocation(line: 295, column: 21, scope: !3922)
!3925 = !DILocalVariable(name: "pat", scope: !3922, file: !3, line: 297, type: !900)
!3926 = !DILocation(line: 297, column: 7, scope: !3922)
!3927 = !DILocation(line: 297, column: 13, scope: !3922)
!3928 = !DILocalVariable(name: "num_clobbers", scope: !3922, file: !3, line: 298, type: !924)
!3929 = !DILocation(line: 298, column: 7, scope: !3922)
!3930 = !DILocalVariable(name: "icode", scope: !3922, file: !3, line: 301, type: !924)
!3931 = !DILocation(line: 301, column: 7, scope: !3922)
!3932 = !DILocation(line: 301, column: 22, scope: !3922)
!3933 = !DILocation(line: 301, column: 27, scope: !3922)
!3934 = !DILocation(line: 302, column: 9, scope: !3922)
!3935 = !DILocation(line: 302, column: 24, scope: !3922)
!3936 = !DILocation(line: 303, column: 9, scope: !3922)
!3937 = !DILocation(line: 303, column: 14, scope: !3922)
!3938 = !DILocation(line: 303, column: 31, scope: !3922)
!3939 = !DILocation(line: 303, column: 36, scope: !3922)
!3940 = !DILocation(line: 302, column: 8, scope: !3922)
!3941 = !DILocation(line: 301, column: 15, scope: !3922)
!3942 = !DILocalVariable(name: "is_asm", scope: !3922, file: !3, line: 305, type: !924)
!3943 = !DILocation(line: 305, column: 7, scope: !3922)
!3944 = !DILocation(line: 305, column: 16, scope: !3922)
!3945 = !DILocation(line: 305, column: 22, scope: !3922)
!3946 = !DILocation(line: 305, column: 26, scope: !3922)
!3947 = !DILocation(line: 305, column: 44, scope: !3922)
!3948 = !DILocation(line: 305, column: 29, scope: !3922)
!3949 = !DILocation(line: 305, column: 60, scope: !3922)
!3950 = !DILocation(line: 0, scope: !3922)
!3951 = !DILocation(line: 310, column: 8, scope: !3952)
!3952 = distinct !DILexicalBlock(scope: !3922, file: !3, line: 310, column: 7)
!3953 = !DILocation(line: 310, column: 15, scope: !3952)
!3954 = !DILocation(line: 310, column: 40, scope: !3952)
!3955 = !DILocation(line: 310, column: 20, scope: !3952)
!3956 = !DILocation(line: 311, column: 7, scope: !3952)
!3957 = !DILocation(line: 311, column: 12, scope: !3952)
!3958 = !DILocation(line: 311, column: 19, scope: !3952)
!3959 = !DILocation(line: 311, column: 22, scope: !3952)
!3960 = !DILocation(line: 311, column: 28, scope: !3952)
!3961 = !DILocation(line: 310, column: 7, scope: !3922)
!3962 = !DILocation(line: 312, column: 5, scope: !3952)
!3963 = !DILocation(line: 317, column: 7, scope: !3964)
!3964 = distinct !DILexicalBlock(scope: !3922, file: !3, line: 317, column: 7)
!3965 = !DILocation(line: 317, column: 20, scope: !3964)
!3966 = !DILocation(line: 317, column: 7, scope: !3922)
!3967 = !DILocalVariable(name: "newpat", scope: !3968, file: !3, line: 319, type: !900)
!3968 = distinct !DILexicalBlock(scope: !3964, file: !3, line: 318, column: 5)
!3969 = !DILocation(line: 319, column: 11, scope: !3968)
!3970 = !DILocation(line: 321, column: 38, scope: !3971)
!3971 = distinct !DILexicalBlock(scope: !3968, file: !3, line: 321, column: 11)
!3972 = !DILocation(line: 321, column: 11, scope: !3971)
!3973 = !DILocation(line: 321, column: 11, scope: !3968)
!3974 = !DILocation(line: 322, column: 2, scope: !3971)
!3975 = !DILocation(line: 324, column: 16, scope: !3968)
!3976 = !DILocation(line: 324, column: 14, scope: !3968)
!3977 = !DILocation(line: 325, column: 32, scope: !3968)
!3978 = !DILocation(line: 325, column: 7, scope: !3968)
!3979 = !DILocation(line: 325, column: 30, scope: !3968)
!3980 = !DILocation(line: 326, column: 21, scope: !3968)
!3981 = !DILocation(line: 326, column: 29, scope: !3968)
!3982 = !DILocation(line: 326, column: 7, scope: !3968)
!3983 = !DILocation(line: 327, column: 30, scope: !3968)
!3984 = !DILocation(line: 327, column: 28, scope: !3968)
!3985 = !DILocation(line: 327, column: 7, scope: !3968)
!3986 = !DILocation(line: 327, column: 22, scope: !3968)
!3987 = !DILocation(line: 328, column: 5, scope: !3968)
!3988 = !DILocation(line: 331, column: 7, scope: !3989)
!3989 = distinct !DILexicalBlock(scope: !3922, file: !3, line: 331, column: 7)
!3990 = !DILocation(line: 331, column: 7, scope: !3922)
!3991 = !DILocation(line: 333, column: 21, scope: !3992)
!3992 = distinct !DILexicalBlock(scope: !3989, file: !3, line: 332, column: 5)
!3993 = !DILocation(line: 333, column: 7, scope: !3992)
!3994 = !DILocation(line: 335, column: 13, scope: !3995)
!3995 = distinct !DILexicalBlock(scope: !3992, file: !3, line: 335, column: 11)
!3996 = !DILocation(line: 335, column: 11, scope: !3992)
!3997 = !DILocation(line: 336, column: 2, scope: !3995)
!3998 = !DILocation(line: 337, column: 5, scope: !3992)
!3999 = !DILocation(line: 339, column: 22, scope: !3922)
!4000 = !DILocation(line: 339, column: 3, scope: !3922)
!4001 = !DILocation(line: 339, column: 20, scope: !3922)
!4002 = !DILocation(line: 340, column: 3, scope: !3922)
!4003 = !DILocation(line: 341, column: 1, scope: !3922)
!4004 = distinct !DISubprogram(name: "num_changes_pending", scope: !3, file: !3, line: 345, type: !4005, scopeLine: 346, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!4005 = !DISubroutineType(types: !4006)
!4006 = !{!924}
!4007 = !DILocation(line: 347, column: 10, scope: !4004)
!4008 = !DILocation(line: 347, column: 3, scope: !4004)
!4009 = distinct !DISubprogram(name: "verify_changes", scope: !3, file: !3, line: 354, type: !2429, scopeLine: 355, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!4010 = !DILocalVariable(name: "num", arg: 1, scope: !4009, file: !3, line: 354, type: !924)
!4011 = !DILocation(line: 354, column: 21, scope: !4009)
!4012 = !DILocalVariable(name: "i", scope: !4009, file: !3, line: 356, type: !924)
!4013 = !DILocation(line: 356, column: 7, scope: !4009)
!4014 = !DILocalVariable(name: "last_validated", scope: !4009, file: !3, line: 357, type: !900)
!4015 = !DILocation(line: 357, column: 7, scope: !4009)
!4016 = !DILocation(line: 368, column: 12, scope: !4017)
!4017 = distinct !DILexicalBlock(scope: !4009, file: !3, line: 368, column: 3)
!4018 = !DILocation(line: 368, column: 10, scope: !4017)
!4019 = !DILocation(line: 368, column: 8, scope: !4017)
!4020 = !DILocation(line: 368, column: 17, scope: !4021)
!4021 = distinct !DILexicalBlock(scope: !4017, file: !3, line: 368, column: 3)
!4022 = !DILocation(line: 368, column: 21, scope: !4021)
!4023 = !DILocation(line: 368, column: 19, scope: !4021)
!4024 = !DILocation(line: 368, column: 3, scope: !4017)
!4025 = !DILocalVariable(name: "object", scope: !4026, file: !3, line: 370, type: !900)
!4026 = distinct !DILexicalBlock(scope: !4021, file: !3, line: 369, column: 5)
!4027 = !DILocation(line: 370, column: 11, scope: !4026)
!4028 = !DILocation(line: 370, column: 20, scope: !4026)
!4029 = !DILocation(line: 370, column: 28, scope: !4026)
!4030 = !DILocation(line: 370, column: 31, scope: !4026)
!4031 = !DILocation(line: 374, column: 11, scope: !4032)
!4032 = distinct !DILexicalBlock(scope: !4026, file: !3, line: 374, column: 11)
!4033 = !DILocation(line: 374, column: 18, scope: !4032)
!4034 = !DILocation(line: 374, column: 23, scope: !4032)
!4035 = !DILocation(line: 374, column: 26, scope: !4032)
!4036 = !DILocation(line: 374, column: 36, scope: !4032)
!4037 = !DILocation(line: 374, column: 33, scope: !4032)
!4038 = !DILocation(line: 374, column: 11, scope: !4026)
!4039 = !DILocation(line: 375, column: 2, scope: !4032)
!4040 = !DILocation(line: 377, column: 11, scope: !4041)
!4041 = distinct !DILexicalBlock(scope: !4026, file: !3, line: 377, column: 11)
!4042 = !DILocation(line: 377, column: 11, scope: !4026)
!4043 = !DILocation(line: 379, column: 39, scope: !4044)
!4044 = distinct !DILexicalBlock(scope: !4045, file: !3, line: 379, column: 8)
!4045 = distinct !DILexicalBlock(scope: !4041, file: !3, line: 378, column: 2)
!4046 = !DILocation(line: 380, column: 11, scope: !4044)
!4047 = !DILocation(line: 381, column: 11, scope: !4044)
!4048 = !DILocation(line: 379, column: 10, scope: !4044)
!4049 = !DILocation(line: 379, column: 8, scope: !4045)
!4050 = !DILocation(line: 382, column: 6, scope: !4044)
!4051 = !DILocation(line: 383, column: 2, scope: !4045)
!4052 = !DILocation(line: 384, column: 16, scope: !4053)
!4053 = distinct !DILexicalBlock(scope: !4041, file: !3, line: 384, column: 16)
!4054 = !DILocation(line: 385, column: 9, scope: !4053)
!4055 = !DILocation(line: 385, column: 27, scope: !4053)
!4056 = !DILocation(line: 385, column: 12, scope: !4053)
!4057 = !DILocation(line: 385, column: 45, scope: !4053)
!4058 = !DILocation(line: 386, column: 9, scope: !4053)
!4059 = !DILocation(line: 386, column: 12, scope: !4053)
!4060 = !DILocation(line: 386, column: 38, scope: !4053)
!4061 = !DILocation(line: 387, column: 9, scope: !4053)
!4062 = !DILocation(line: 387, column: 12, scope: !4053)
!4063 = !DILocation(line: 388, column: 9, scope: !4053)
!4064 = !DILocation(line: 388, column: 12, scope: !4053)
!4065 = !DILocation(line: 384, column: 16, scope: !4041)
!4066 = !DILocation(line: 392, column: 4, scope: !4067)
!4067 = distinct !DILexicalBlock(scope: !4053, file: !3, line: 389, column: 2)
!4068 = !DILocation(line: 394, column: 16, scope: !4069)
!4069 = distinct !DILexicalBlock(scope: !4053, file: !3, line: 394, column: 16)
!4070 = !DILocation(line: 394, column: 16, scope: !4053)
!4071 = !DILocation(line: 395, column: 2, scope: !4069)
!4072 = !DILocation(line: 396, column: 32, scope: !4073)
!4073 = distinct !DILexicalBlock(scope: !4069, file: !3, line: 396, column: 16)
!4074 = !DILocation(line: 396, column: 16, scope: !4073)
!4075 = !DILocation(line: 396, column: 16, scope: !4069)
!4076 = !DILocalVariable(name: "pat", scope: !4077, file: !3, line: 398, type: !900)
!4077 = distinct !DILexicalBlock(scope: !4073, file: !3, line: 397, column: 2)
!4078 = !DILocation(line: 398, column: 8, scope: !4077)
!4079 = !DILocation(line: 398, column: 14, scope: !4077)
!4080 = !DILocation(line: 405, column: 8, scope: !4081)
!4081 = distinct !DILexicalBlock(scope: !4077, file: !3, line: 405, column: 8)
!4082 = !DILocation(line: 405, column: 23, scope: !4081)
!4083 = !DILocation(line: 406, column: 8, scope: !4081)
!4084 = !DILocation(line: 406, column: 11, scope: !4081)
!4085 = !DILocation(line: 406, column: 61, scope: !4081)
!4086 = !DILocation(line: 407, column: 8, scope: !4081)
!4087 = !DILocation(line: 407, column: 26, scope: !4081)
!4088 = !DILocation(line: 407, column: 11, scope: !4081)
!4089 = !DILocation(line: 407, column: 44, scope: !4081)
!4090 = !DILocation(line: 405, column: 8, scope: !4077)
!4091 = !DILocalVariable(name: "newpat", scope: !4092, file: !3, line: 409, type: !900)
!4092 = distinct !DILexicalBlock(scope: !4081, file: !3, line: 408, column: 6)
!4093 = !DILocation(line: 409, column: 12, scope: !4092)
!4094 = !DILocation(line: 411, column: 12, scope: !4095)
!4095 = distinct !DILexicalBlock(scope: !4092, file: !3, line: 411, column: 12)
!4096 = !DILocation(line: 411, column: 29, scope: !4095)
!4097 = !DILocation(line: 411, column: 12, scope: !4092)
!4098 = !DILocation(line: 412, column: 12, scope: !4095)
!4099 = !DILocation(line: 412, column: 10, scope: !4095)
!4100 = !DILocation(line: 412, column: 3, scope: !4095)
!4101 = !DILocalVariable(name: "j", scope: !4102, file: !3, line: 415, type: !924)
!4102 = distinct !DILexicalBlock(scope: !4095, file: !3, line: 414, column: 3)
!4103 = !DILocation(line: 415, column: 9, scope: !4102)
!4104 = !DILocation(line: 418, column: 9, scope: !4102)
!4105 = !DILocation(line: 418, column: 7, scope: !4102)
!4106 = !DILocation(line: 420, column: 12, scope: !4107)
!4107 = distinct !DILexicalBlock(scope: !4102, file: !3, line: 420, column: 5)
!4108 = !DILocation(line: 420, column: 10, scope: !4107)
!4109 = !DILocation(line: 420, column: 17, scope: !4110)
!4110 = distinct !DILexicalBlock(scope: !4107, file: !3, line: 420, column: 5)
!4111 = !DILocation(line: 420, column: 21, scope: !4110)
!4112 = !DILocation(line: 420, column: 19, scope: !4110)
!4113 = !DILocation(line: 420, column: 5, scope: !4107)
!4114 = !DILocation(line: 421, column: 32, scope: !4110)
!4115 = !DILocation(line: 421, column: 7, scope: !4110)
!4116 = !DILocation(line: 421, column: 30, scope: !4110)
!4117 = !DILocation(line: 420, column: 43, scope: !4110)
!4118 = !DILocation(line: 420, column: 5, scope: !4110)
!4119 = distinct !{!4119, !4113, !4120}
!4120 = !DILocation(line: 421, column: 32, scope: !4107)
!4121 = !DILocation(line: 433, column: 25, scope: !4092)
!4122 = !DILocation(line: 433, column: 34, scope: !4092)
!4123 = !DILocation(line: 433, column: 52, scope: !4092)
!4124 = !DILocation(line: 433, column: 8, scope: !4092)
!4125 = !DILocation(line: 434, column: 8, scope: !4092)
!4126 = !DILocation(line: 436, column: 13, scope: !4127)
!4127 = distinct !DILexicalBlock(scope: !4081, file: !3, line: 436, column: 13)
!4128 = !DILocation(line: 436, column: 28, scope: !4127)
!4129 = !DILocation(line: 436, column: 35, scope: !4127)
!4130 = !DILocation(line: 436, column: 38, scope: !4127)
!4131 = !DILocation(line: 436, column: 53, scope: !4127)
!4132 = !DILocation(line: 437, column: 6, scope: !4127)
!4133 = !DILocation(line: 437, column: 9, scope: !4127)
!4134 = !DILocation(line: 437, column: 24, scope: !4127)
!4135 = !DILocation(line: 436, column: 13, scope: !4081)
!4136 = !DILocation(line: 440, column: 6, scope: !4127)
!4137 = !DILocation(line: 442, column: 6, scope: !4127)
!4138 = !DILocation(line: 444, column: 24, scope: !4026)
!4139 = !DILocation(line: 444, column: 22, scope: !4026)
!4140 = !DILocation(line: 445, column: 5, scope: !4026)
!4141 = !DILocation(line: 368, column: 35, scope: !4021)
!4142 = !DILocation(line: 368, column: 3, scope: !4021)
!4143 = distinct !{!4143, !4024, !4144}
!4144 = !DILocation(line: 445, column: 5, scope: !4017)
!4145 = !DILocation(line: 447, column: 11, scope: !4009)
!4146 = !DILocation(line: 447, column: 16, scope: !4009)
!4147 = !DILocation(line: 447, column: 13, scope: !4009)
!4148 = !DILocation(line: 447, column: 3, scope: !4009)
!4149 = distinct !DISubprogram(name: "memory_address_addr_space_p", scope: !3, file: !3, line: 1277, type: !4150, scopeLine: 1279, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!4150 = !DISubroutineType(types: !4151)
!4151 = !{!924, !5, !900, !4152}
!4152 = !DIDerivedType(tag: DW_TAG_typedef, name: "addr_space_t", file: !901, line: 73, baseType: !1135)
!4153 = !DILocalVariable(name: "mode", arg: 1, scope: !4149, file: !3, line: 1277, type: !5)
!4154 = !DILocation(line: 1277, column: 48, scope: !4149)
!4155 = !DILocalVariable(name: "addr", arg: 2, scope: !4149, file: !3, line: 1278, type: !900)
!4156 = !DILocation(line: 1278, column: 13, scope: !4149)
!4157 = !DILocalVariable(name: "as", arg: 3, scope: !4149, file: !3, line: 1278, type: !4152)
!4158 = !DILocation(line: 1278, column: 32, scope: !4149)
!4159 = !DILocation(line: 1288, column: 29, scope: !4149)
!4160 = !DILocation(line: 1288, column: 51, scope: !4149)
!4161 = !DILocation(line: 1288, column: 57, scope: !4149)
!4162 = !DILocation(line: 1288, column: 66, scope: !4149)
!4163 = !DILocation(line: 1288, column: 10, scope: !4149)
!4164 = !DILocation(line: 1288, column: 3, scope: !4149)
!4165 = distinct !DISubprogram(name: "confirm_change_group", scope: !3, file: !3, line: 455, type: !2130, scopeLine: 456, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!4166 = !DILocalVariable(name: "i", scope: !4165, file: !3, line: 457, type: !924)
!4167 = !DILocation(line: 457, column: 7, scope: !4165)
!4168 = !DILocalVariable(name: "last_object", scope: !4165, file: !3, line: 458, type: !900)
!4169 = !DILocation(line: 458, column: 7, scope: !4165)
!4170 = !DILocation(line: 460, column: 10, scope: !4171)
!4171 = distinct !DILexicalBlock(scope: !4165, file: !3, line: 460, column: 3)
!4172 = !DILocation(line: 460, column: 8, scope: !4171)
!4173 = !DILocation(line: 460, column: 15, scope: !4174)
!4174 = distinct !DILexicalBlock(scope: !4171, file: !3, line: 460, column: 3)
!4175 = !DILocation(line: 460, column: 19, scope: !4174)
!4176 = !DILocation(line: 460, column: 17, scope: !4174)
!4177 = !DILocation(line: 460, column: 3, scope: !4171)
!4178 = !DILocalVariable(name: "object", scope: !4179, file: !3, line: 462, type: !900)
!4179 = distinct !DILexicalBlock(scope: !4174, file: !3, line: 461, column: 5)
!4180 = !DILocation(line: 462, column: 11, scope: !4179)
!4181 = !DILocation(line: 462, column: 20, scope: !4179)
!4182 = !DILocation(line: 462, column: 28, scope: !4179)
!4183 = !DILocation(line: 462, column: 31, scope: !4179)
!4184 = !DILocation(line: 464, column: 11, scope: !4185)
!4185 = distinct !DILexicalBlock(scope: !4179, file: !3, line: 464, column: 11)
!4186 = !DILocation(line: 464, column: 19, scope: !4185)
!4187 = !DILocation(line: 464, column: 22, scope: !4185)
!4188 = !DILocation(line: 464, column: 11, scope: !4179)
!4189 = !DILocation(line: 465, column: 31, scope: !4185)
!4190 = !DILocation(line: 465, column: 39, scope: !4185)
!4191 = !DILocation(line: 465, column: 42, scope: !4185)
!4192 = !DILocation(line: 465, column: 30, scope: !4185)
!4193 = !DILocation(line: 465, column: 20, scope: !4185)
!4194 = !DILocation(line: 465, column: 3, scope: !4185)
!4195 = !DILocation(line: 465, column: 11, scope: !4185)
!4196 = !DILocation(line: 465, column: 14, scope: !4185)
!4197 = !DILocation(line: 465, column: 18, scope: !4185)
!4198 = !DILocation(line: 465, column: 2, scope: !4185)
!4199 = !DILocation(line: 469, column: 11, scope: !4200)
!4200 = distinct !DILexicalBlock(scope: !4179, file: !3, line: 469, column: 11)
!4201 = !DILocation(line: 469, column: 11, scope: !4179)
!4202 = !DILocation(line: 471, column: 8, scope: !4203)
!4203 = distinct !DILexicalBlock(scope: !4204, file: !3, line: 471, column: 8)
!4204 = distinct !DILexicalBlock(scope: !4200, file: !3, line: 470, column: 2)
!4205 = !DILocation(line: 471, column: 18, scope: !4203)
!4206 = !DILocation(line: 471, column: 15, scope: !4203)
!4207 = !DILocation(line: 471, column: 30, scope: !4203)
!4208 = !DILocation(line: 471, column: 33, scope: !4203)
!4209 = !DILocation(line: 471, column: 45, scope: !4203)
!4210 = !DILocation(line: 471, column: 48, scope: !4203)
!4211 = !DILocation(line: 471, column: 8, scope: !4204)
!4212 = !DILocation(line: 472, column: 22, scope: !4203)
!4213 = !DILocation(line: 472, column: 6, scope: !4203)
!4214 = !DILocation(line: 473, column: 18, scope: !4204)
!4215 = !DILocation(line: 473, column: 16, scope: !4204)
!4216 = !DILocation(line: 474, column: 2, scope: !4204)
!4217 = !DILocation(line: 475, column: 5, scope: !4179)
!4218 = !DILocation(line: 460, column: 33, scope: !4174)
!4219 = !DILocation(line: 460, column: 3, scope: !4174)
!4220 = distinct !{!4220, !4177, !4221}
!4221 = !DILocation(line: 475, column: 5, scope: !4171)
!4222 = !DILocation(line: 477, column: 7, scope: !4223)
!4223 = distinct !DILexicalBlock(scope: !4165, file: !3, line: 477, column: 7)
!4224 = !DILocation(line: 477, column: 19, scope: !4223)
!4225 = !DILocation(line: 477, column: 22, scope: !4223)
!4226 = !DILocation(line: 477, column: 7, scope: !4165)
!4227 = !DILocation(line: 478, column: 21, scope: !4223)
!4228 = !DILocation(line: 478, column: 5, scope: !4223)
!4229 = !DILocation(line: 479, column: 15, scope: !4165)
!4230 = !DILocation(line: 480, column: 1, scope: !4165)
!4231 = distinct !DISubprogram(name: "apply_change_group", scope: !3, file: !3, line: 487, type: !4005, scopeLine: 488, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!4232 = !DILocation(line: 489, column: 7, scope: !4233)
!4233 = distinct !DILexicalBlock(scope: !4231, file: !3, line: 489, column: 7)
!4234 = !DILocation(line: 489, column: 7, scope: !4231)
!4235 = !DILocation(line: 491, column: 7, scope: !4236)
!4236 = distinct !DILexicalBlock(scope: !4233, file: !3, line: 490, column: 5)
!4237 = !DILocation(line: 492, column: 7, scope: !4236)
!4238 = !DILocation(line: 496, column: 7, scope: !4239)
!4239 = distinct !DILexicalBlock(scope: !4233, file: !3, line: 495, column: 5)
!4240 = !DILocation(line: 497, column: 7, scope: !4239)
!4241 = !DILocation(line: 499, column: 1, scope: !4231)
!4242 = distinct !DISubprogram(name: "cancel_changes", scope: !3, file: !3, line: 513, type: !4243, scopeLine: 514, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!4243 = !DISubroutineType(types: !4244)
!4244 = !{null, !924}
!4245 = !DILocalVariable(name: "num", arg: 1, scope: !4242, file: !3, line: 513, type: !924)
!4246 = !DILocation(line: 513, column: 21, scope: !4242)
!4247 = !DILocalVariable(name: "i", scope: !4242, file: !3, line: 515, type: !924)
!4248 = !DILocation(line: 515, column: 7, scope: !4242)
!4249 = !DILocation(line: 519, column: 12, scope: !4250)
!4250 = distinct !DILexicalBlock(scope: !4242, file: !3, line: 519, column: 3)
!4251 = !DILocation(line: 519, column: 24, scope: !4250)
!4252 = !DILocation(line: 519, column: 10, scope: !4250)
!4253 = !DILocation(line: 519, column: 8, scope: !4250)
!4254 = !DILocation(line: 519, column: 29, scope: !4255)
!4255 = distinct !DILexicalBlock(scope: !4250, file: !3, line: 519, column: 3)
!4256 = !DILocation(line: 519, column: 34, scope: !4255)
!4257 = !DILocation(line: 519, column: 31, scope: !4255)
!4258 = !DILocation(line: 519, column: 3, scope: !4250)
!4259 = !DILocation(line: 521, column: 25, scope: !4260)
!4260 = distinct !DILexicalBlock(scope: !4255, file: !3, line: 520, column: 5)
!4261 = !DILocation(line: 521, column: 33, scope: !4260)
!4262 = !DILocation(line: 521, column: 36, scope: !4260)
!4263 = !DILocation(line: 521, column: 8, scope: !4260)
!4264 = !DILocation(line: 521, column: 16, scope: !4260)
!4265 = !DILocation(line: 521, column: 19, scope: !4260)
!4266 = !DILocation(line: 521, column: 23, scope: !4260)
!4267 = !DILocation(line: 522, column: 11, scope: !4268)
!4268 = distinct !DILexicalBlock(scope: !4260, file: !3, line: 522, column: 11)
!4269 = !DILocation(line: 522, column: 19, scope: !4268)
!4270 = !DILocation(line: 522, column: 22, scope: !4268)
!4271 = !DILocation(line: 522, column: 29, scope: !4268)
!4272 = !DILocation(line: 522, column: 33, scope: !4268)
!4273 = !DILocation(line: 522, column: 11, scope: !4260)
!4274 = !DILocation(line: 523, column: 34, scope: !4268)
!4275 = !DILocation(line: 523, column: 42, scope: !4268)
!4276 = !DILocation(line: 523, column: 45, scope: !4268)
!4277 = !DILocation(line: 523, column: 2, scope: !4268)
!4278 = !DILocation(line: 523, column: 32, scope: !4268)
!4279 = !DILocation(line: 524, column: 5, scope: !4260)
!4280 = !DILocation(line: 519, column: 40, scope: !4255)
!4281 = !DILocation(line: 519, column: 3, scope: !4255)
!4282 = distinct !{!4282, !4258, !4283}
!4283 = !DILocation(line: 524, column: 5, scope: !4250)
!4284 = !DILocation(line: 525, column: 17, scope: !4242)
!4285 = !DILocation(line: 525, column: 15, scope: !4242)
!4286 = !DILocation(line: 526, column: 1, scope: !4242)
!4287 = distinct !DISubprogram(name: "num_validated_changes", scope: !3, file: !3, line: 505, type: !4005, scopeLine: 506, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!4288 = !DILocation(line: 507, column: 10, scope: !4287)
!4289 = !DILocation(line: 507, column: 3, scope: !4287)
!4290 = distinct !DISubprogram(name: "validate_replace_rtx_subexp", scope: !3, file: !3, line: 751, type: !4291, scopeLine: 752, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!4291 = !DISubroutineType(types: !4292)
!4292 = !{!924, !900, !900, !900, !899}
!4293 = !DILocalVariable(name: "from", arg: 1, scope: !4290, file: !3, line: 751, type: !900)
!4294 = !DILocation(line: 751, column: 34, scope: !4290)
!4295 = !DILocalVariable(name: "to", arg: 2, scope: !4290, file: !3, line: 751, type: !900)
!4296 = !DILocation(line: 751, column: 44, scope: !4290)
!4297 = !DILocalVariable(name: "insn", arg: 3, scope: !4290, file: !3, line: 751, type: !900)
!4298 = !DILocation(line: 751, column: 52, scope: !4290)
!4299 = !DILocalVariable(name: "loc", arg: 4, scope: !4290, file: !3, line: 751, type: !899)
!4300 = !DILocation(line: 751, column: 63, scope: !4290)
!4301 = !DILocation(line: 753, column: 27, scope: !4290)
!4302 = !DILocation(line: 753, column: 32, scope: !4290)
!4303 = !DILocation(line: 753, column: 38, scope: !4290)
!4304 = !DILocation(line: 753, column: 42, scope: !4290)
!4305 = !DILocation(line: 753, column: 3, scope: !4290)
!4306 = !DILocation(line: 754, column: 10, scope: !4290)
!4307 = !DILocation(line: 754, column: 3, scope: !4290)
!4308 = distinct !DISubprogram(name: "validate_replace_rtx_1", scope: !3, file: !3, line: 663, type: !4309, scopeLine: 665, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!4309 = !DISubroutineType(types: !4310)
!4310 = !{null, !899, !900, !900, !900, !1135}
!4311 = !DILocalVariable(name: "loc", arg: 1, scope: !4308, file: !3, line: 663, type: !899)
!4312 = !DILocation(line: 663, column: 30, scope: !4308)
!4313 = !DILocalVariable(name: "from", arg: 2, scope: !4308, file: !3, line: 663, type: !900)
!4314 = !DILocation(line: 663, column: 39, scope: !4308)
!4315 = !DILocalVariable(name: "to", arg: 3, scope: !4308, file: !3, line: 663, type: !900)
!4316 = !DILocation(line: 663, column: 49, scope: !4308)
!4317 = !DILocalVariable(name: "object", arg: 4, scope: !4308, file: !3, line: 663, type: !900)
!4318 = !DILocation(line: 663, column: 57, scope: !4308)
!4319 = !DILocalVariable(name: "simplify", arg: 5, scope: !4308, file: !3, line: 664, type: !1135)
!4320 = !DILocation(line: 664, column: 30, scope: !4308)
!4321 = !DILocalVariable(name: "i", scope: !4308, file: !3, line: 666, type: !924)
!4322 = !DILocation(line: 666, column: 7, scope: !4308)
!4323 = !DILocalVariable(name: "j", scope: !4308, file: !3, line: 666, type: !924)
!4324 = !DILocation(line: 666, column: 10, scope: !4308)
!4325 = !DILocalVariable(name: "fmt", scope: !4308, file: !3, line: 667, type: !927)
!4326 = !DILocation(line: 667, column: 15, scope: !4308)
!4327 = !DILocalVariable(name: "x", scope: !4308, file: !3, line: 668, type: !900)
!4328 = !DILocation(line: 668, column: 7, scope: !4308)
!4329 = !DILocation(line: 668, column: 12, scope: !4308)
!4330 = !DILocation(line: 668, column: 11, scope: !4308)
!4331 = !DILocalVariable(name: "code", scope: !4308, file: !3, line: 669, type: !377)
!4332 = !DILocation(line: 669, column: 17, scope: !4308)
!4333 = !DILocalVariable(name: "op0_mode", scope: !4308, file: !3, line: 670, type: !5)
!4334 = !DILocation(line: 670, column: 21, scope: !4308)
!4335 = !DILocalVariable(name: "prev_changes", scope: !4308, file: !3, line: 671, type: !924)
!4336 = !DILocation(line: 671, column: 7, scope: !4308)
!4337 = !DILocation(line: 671, column: 22, scope: !4308)
!4338 = !DILocation(line: 673, column: 8, scope: !4339)
!4339 = distinct !DILexicalBlock(scope: !4308, file: !3, line: 673, column: 7)
!4340 = !DILocation(line: 673, column: 7, scope: !4308)
!4341 = !DILocation(line: 674, column: 5, scope: !4339)
!4342 = !DILocation(line: 676, column: 10, scope: !4308)
!4343 = !DILocation(line: 676, column: 8, scope: !4308)
!4344 = !DILocation(line: 677, column: 9, scope: !4308)
!4345 = !DILocation(line: 677, column: 7, scope: !4308)
!4346 = !DILocation(line: 678, column: 7, scope: !4347)
!4347 = distinct !DILexicalBlock(scope: !4308, file: !3, line: 678, column: 7)
!4348 = !DILocation(line: 678, column: 14, scope: !4347)
!4349 = !DILocation(line: 678, column: 7, scope: !4308)
!4350 = !DILocation(line: 679, column: 16, scope: !4347)
!4351 = !DILocation(line: 679, column: 14, scope: !4347)
!4352 = !DILocation(line: 679, column: 5, scope: !4347)
!4353 = !DILocation(line: 685, column: 7, scope: !4354)
!4354 = distinct !DILexicalBlock(scope: !4308, file: !3, line: 685, column: 7)
!4355 = !DILocation(line: 685, column: 12, scope: !4354)
!4356 = !DILocation(line: 685, column: 9, scope: !4354)
!4357 = !DILocation(line: 686, column: 7, scope: !4354)
!4358 = !DILocation(line: 686, column: 11, scope: !4354)
!4359 = !DILocation(line: 686, column: 21, scope: !4354)
!4360 = !DILocation(line: 686, column: 24, scope: !4354)
!4361 = !DILocation(line: 687, column: 4, scope: !4354)
!4362 = !DILocation(line: 687, column: 7, scope: !4354)
!4363 = !DILocation(line: 687, column: 23, scope: !4354)
!4364 = !DILocation(line: 687, column: 20, scope: !4354)
!4365 = !DILocation(line: 688, column: 4, scope: !4354)
!4366 = !DILocation(line: 688, column: 7, scope: !4354)
!4367 = !DILocation(line: 688, column: 20, scope: !4354)
!4368 = !DILocation(line: 688, column: 17, scope: !4354)
!4369 = !DILocation(line: 689, column: 7, scope: !4354)
!4370 = !DILocation(line: 689, column: 11, scope: !4354)
!4371 = !DILocation(line: 689, column: 27, scope: !4354)
!4372 = !DILocation(line: 689, column: 24, scope: !4354)
!4373 = !DILocation(line: 689, column: 43, scope: !4354)
!4374 = !DILocation(line: 689, column: 46, scope: !4354)
!4375 = !DILocation(line: 689, column: 62, scope: !4354)
!4376 = !DILocation(line: 689, column: 59, scope: !4354)
!4377 = !DILocation(line: 690, column: 4, scope: !4354)
!4378 = !DILocation(line: 690, column: 20, scope: !4354)
!4379 = !DILocation(line: 690, column: 23, scope: !4354)
!4380 = !DILocation(line: 690, column: 7, scope: !4354)
!4381 = !DILocation(line: 685, column: 7, scope: !4308)
!4382 = !DILocation(line: 692, column: 32, scope: !4383)
!4383 = distinct !DILexicalBlock(scope: !4354, file: !3, line: 691, column: 5)
!4384 = !DILocation(line: 692, column: 40, scope: !4383)
!4385 = !DILocation(line: 692, column: 45, scope: !4383)
!4386 = !DILocation(line: 692, column: 7, scope: !4383)
!4387 = !DILocation(line: 693, column: 7, scope: !4383)
!4388 = !DILocation(line: 701, column: 7, scope: !4389)
!4389 = distinct !DILexicalBlock(scope: !4308, file: !3, line: 701, column: 7)
!4390 = !DILocation(line: 701, column: 20, scope: !4389)
!4391 = !DILocation(line: 701, column: 7, scope: !4308)
!4392 = !DILocation(line: 703, column: 16, scope: !4393)
!4393 = distinct !DILexicalBlock(scope: !4394, file: !3, line: 703, column: 7)
!4394 = distinct !DILexicalBlock(scope: !4389, file: !3, line: 702, column: 5)
!4395 = !DILocation(line: 703, column: 31, scope: !4393)
!4396 = !DILocation(line: 703, column: 14, scope: !4393)
!4397 = !DILocation(line: 703, column: 12, scope: !4393)
!4398 = !DILocation(line: 703, column: 36, scope: !4399)
!4399 = distinct !DILexicalBlock(scope: !4393, file: !3, line: 703, column: 7)
!4400 = !DILocation(line: 703, column: 38, scope: !4399)
!4401 = !DILocation(line: 703, column: 7, scope: !4393)
!4402 = !DILocation(line: 705, column: 8, scope: !4403)
!4403 = distinct !DILexicalBlock(scope: !4404, file: !3, line: 705, column: 8)
!4404 = distinct !DILexicalBlock(scope: !4399, file: !3, line: 704, column: 2)
!4405 = !DILocation(line: 705, column: 10, scope: !4403)
!4406 = !DILocation(line: 705, column: 13, scope: !4403)
!4407 = !DILocation(line: 705, column: 42, scope: !4403)
!4408 = !DILocation(line: 706, column: 8, scope: !4403)
!4409 = !DILocation(line: 706, column: 11, scope: !4403)
!4410 = !DILocation(line: 706, column: 50, scope: !4403)
!4411 = !DILocation(line: 705, column: 8, scope: !4404)
!4412 = !DILocation(line: 709, column: 8, scope: !4413)
!4413 = distinct !DILexicalBlock(scope: !4403, file: !3, line: 707, column: 6)
!4414 = !DILocation(line: 712, column: 33, scope: !4413)
!4415 = !DILocation(line: 713, column: 11, scope: !4413)
!4416 = !DILocation(line: 713, column: 17, scope: !4413)
!4417 = !DILocation(line: 713, column: 21, scope: !4413)
!4418 = !DILocation(line: 713, column: 29, scope: !4413)
!4419 = !DILocation(line: 712, column: 8, scope: !4413)
!4420 = !DILocation(line: 714, column: 6, scope: !4413)
!4421 = !DILocation(line: 716, column: 31, scope: !4403)
!4422 = !DILocation(line: 716, column: 50, scope: !4403)
!4423 = !DILocation(line: 716, column: 56, scope: !4403)
!4424 = !DILocation(line: 716, column: 60, scope: !4403)
!4425 = !DILocation(line: 717, column: 37, scope: !4403)
!4426 = !DILocation(line: 716, column: 6, scope: !4403)
!4427 = !DILocation(line: 718, column: 2, scope: !4404)
!4428 = !DILocation(line: 703, column: 45, scope: !4399)
!4429 = !DILocation(line: 703, column: 7, scope: !4399)
!4430 = distinct !{!4430, !4401, !4431}
!4431 = !DILocation(line: 718, column: 2, scope: !4393)
!4432 = !DILocation(line: 719, column: 5, scope: !4394)
!4433 = !DILocation(line: 721, column: 14, scope: !4434)
!4434 = distinct !DILexicalBlock(scope: !4389, file: !3, line: 721, column: 5)
!4435 = !DILocation(line: 721, column: 36, scope: !4434)
!4436 = !DILocation(line: 721, column: 12, scope: !4434)
!4437 = !DILocation(line: 721, column: 10, scope: !4434)
!4438 = !DILocation(line: 721, column: 41, scope: !4439)
!4439 = distinct !DILexicalBlock(scope: !4434, file: !3, line: 721, column: 5)
!4440 = !DILocation(line: 721, column: 43, scope: !4439)
!4441 = !DILocation(line: 721, column: 5, scope: !4434)
!4442 = !DILocation(line: 723, column: 6, scope: !4443)
!4443 = distinct !DILexicalBlock(scope: !4444, file: !3, line: 723, column: 6)
!4444 = distinct !DILexicalBlock(scope: !4439, file: !3, line: 722, column: 7)
!4445 = !DILocation(line: 723, column: 10, scope: !4443)
!4446 = !DILocation(line: 723, column: 13, scope: !4443)
!4447 = !DILocation(line: 723, column: 6, scope: !4444)
!4448 = !DILocation(line: 724, column: 29, scope: !4443)
!4449 = !DILocation(line: 724, column: 42, scope: !4443)
!4450 = !DILocation(line: 724, column: 48, scope: !4443)
!4451 = !DILocation(line: 724, column: 52, scope: !4443)
!4452 = !DILocation(line: 724, column: 60, scope: !4443)
!4453 = !DILocation(line: 724, column: 4, scope: !4443)
!4454 = !DILocation(line: 725, column: 11, scope: !4455)
!4455 = distinct !DILexicalBlock(scope: !4443, file: !3, line: 725, column: 11)
!4456 = !DILocation(line: 725, column: 15, scope: !4455)
!4457 = !DILocation(line: 725, column: 18, scope: !4455)
!4458 = !DILocation(line: 725, column: 11, scope: !4443)
!4459 = !DILocation(line: 726, column: 13, scope: !4460)
!4460 = distinct !DILexicalBlock(scope: !4455, file: !3, line: 726, column: 4)
!4461 = !DILocation(line: 726, column: 28, scope: !4460)
!4462 = !DILocation(line: 726, column: 11, scope: !4460)
!4463 = !DILocation(line: 726, column: 9, scope: !4460)
!4464 = !DILocation(line: 726, column: 33, scope: !4465)
!4465 = distinct !DILexicalBlock(scope: !4460, file: !3, line: 726, column: 4)
!4466 = !DILocation(line: 726, column: 35, scope: !4465)
!4467 = !DILocation(line: 726, column: 4, scope: !4460)
!4468 = !DILocation(line: 727, column: 31, scope: !4465)
!4469 = !DILocation(line: 727, column: 50, scope: !4465)
!4470 = !DILocation(line: 727, column: 56, scope: !4465)
!4471 = !DILocation(line: 727, column: 60, scope: !4465)
!4472 = !DILocation(line: 728, column: 37, scope: !4465)
!4473 = !DILocation(line: 727, column: 6, scope: !4465)
!4474 = !DILocation(line: 726, column: 42, scope: !4465)
!4475 = !DILocation(line: 726, column: 4, scope: !4465)
!4476 = distinct !{!4476, !4467, !4477}
!4477 = !DILocation(line: 728, column: 45, scope: !4460)
!4478 = !DILocation(line: 729, column: 7, scope: !4444)
!4479 = !DILocation(line: 721, column: 50, scope: !4439)
!4480 = !DILocation(line: 721, column: 5, scope: !4439)
!4481 = distinct !{!4481, !4441, !4482}
!4482 = !DILocation(line: 729, column: 7, scope: !4434)
!4483 = !DILocation(line: 732, column: 7, scope: !4484)
!4484 = distinct !DILexicalBlock(scope: !4308, file: !3, line: 732, column: 7)
!4485 = !DILocation(line: 732, column: 22, scope: !4484)
!4486 = !DILocation(line: 732, column: 19, scope: !4484)
!4487 = !DILocation(line: 732, column: 7, scope: !4308)
!4488 = !DILocation(line: 733, column: 5, scope: !4484)
!4489 = !DILocation(line: 737, column: 7, scope: !4490)
!4490 = distinct !DILexicalBlock(scope: !4308, file: !3, line: 737, column: 7)
!4491 = !DILocation(line: 737, column: 14, scope: !4490)
!4492 = !DILocation(line: 737, column: 21, scope: !4490)
!4493 = !DILocation(line: 737, column: 24, scope: !4490)
!4494 = !DILocation(line: 737, column: 47, scope: !4490)
!4495 = !DILocation(line: 737, column: 7, scope: !4308)
!4496 = !DILocation(line: 738, column: 16, scope: !4490)
!4497 = !DILocation(line: 738, column: 14, scope: !4490)
!4498 = !DILocation(line: 738, column: 5, scope: !4490)
!4499 = !DILocation(line: 742, column: 7, scope: !4500)
!4500 = distinct !DILexicalBlock(scope: !4308, file: !3, line: 742, column: 7)
!4501 = !DILocation(line: 742, column: 7, scope: !4308)
!4502 = !DILocation(line: 743, column: 31, scope: !4500)
!4503 = !DILocation(line: 743, column: 36, scope: !4500)
!4504 = !DILocation(line: 743, column: 40, scope: !4500)
!4505 = !DILocation(line: 743, column: 48, scope: !4500)
!4506 = !DILocation(line: 743, column: 5, scope: !4500)
!4507 = !DILocation(line: 744, column: 1, scope: !4308)
!4508 = distinct !DISubprogram(name: "validate_replace_rtx", scope: !3, file: !3, line: 761, type: !4509, scopeLine: 762, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!4509 = !DISubroutineType(types: !4510)
!4510 = !{!924, !900, !900, !900}
!4511 = !DILocalVariable(name: "from", arg: 1, scope: !4508, file: !3, line: 761, type: !900)
!4512 = !DILocation(line: 761, column: 27, scope: !4508)
!4513 = !DILocalVariable(name: "to", arg: 2, scope: !4508, file: !3, line: 761, type: !900)
!4514 = !DILocation(line: 761, column: 37, scope: !4508)
!4515 = !DILocalVariable(name: "insn", arg: 3, scope: !4508, file: !3, line: 761, type: !900)
!4516 = !DILocation(line: 761, column: 45, scope: !4508)
!4517 = !DILocation(line: 763, column: 28, scope: !4508)
!4518 = !DILocation(line: 763, column: 44, scope: !4508)
!4519 = !DILocation(line: 763, column: 50, scope: !4508)
!4520 = !DILocation(line: 763, column: 54, scope: !4508)
!4521 = !DILocation(line: 763, column: 3, scope: !4508)
!4522 = !DILocation(line: 764, column: 10, scope: !4508)
!4523 = !DILocation(line: 764, column: 3, scope: !4508)
!4524 = distinct !DISubprogram(name: "validate_replace_rtx_part", scope: !3, file: !3, line: 774, type: !4525, scopeLine: 775, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!4525 = !DISubroutineType(types: !4526)
!4526 = !{!924, !900, !900, !899, !900}
!4527 = !DILocalVariable(name: "from", arg: 1, scope: !4524, file: !3, line: 774, type: !900)
!4528 = !DILocation(line: 774, column: 32, scope: !4524)
!4529 = !DILocalVariable(name: "to", arg: 2, scope: !4524, file: !3, line: 774, type: !900)
!4530 = !DILocation(line: 774, column: 42, scope: !4524)
!4531 = !DILocalVariable(name: "where", arg: 3, scope: !4524, file: !3, line: 774, type: !899)
!4532 = !DILocation(line: 774, column: 51, scope: !4524)
!4533 = !DILocalVariable(name: "insn", arg: 4, scope: !4524, file: !3, line: 774, type: !900)
!4534 = !DILocation(line: 774, column: 62, scope: !4524)
!4535 = !DILocation(line: 776, column: 27, scope: !4524)
!4536 = !DILocation(line: 776, column: 34, scope: !4524)
!4537 = !DILocation(line: 776, column: 40, scope: !4524)
!4538 = !DILocation(line: 776, column: 44, scope: !4524)
!4539 = !DILocation(line: 776, column: 3, scope: !4524)
!4540 = !DILocation(line: 777, column: 10, scope: !4524)
!4541 = !DILocation(line: 777, column: 3, scope: !4524)
!4542 = distinct !DISubprogram(name: "validate_replace_rtx_part_nosimplify", scope: !3, file: !3, line: 782, type: !4525, scopeLine: 784, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!4543 = !DILocalVariable(name: "from", arg: 1, scope: !4542, file: !3, line: 782, type: !900)
!4544 = !DILocation(line: 782, column: 43, scope: !4542)
!4545 = !DILocalVariable(name: "to", arg: 2, scope: !4542, file: !3, line: 782, type: !900)
!4546 = !DILocation(line: 782, column: 53, scope: !4542)
!4547 = !DILocalVariable(name: "where", arg: 3, scope: !4542, file: !3, line: 782, type: !899)
!4548 = !DILocation(line: 782, column: 62, scope: !4542)
!4549 = !DILocalVariable(name: "insn", arg: 4, scope: !4542, file: !3, line: 783, type: !900)
!4550 = !DILocation(line: 783, column: 43, scope: !4542)
!4551 = !DILocation(line: 785, column: 27, scope: !4542)
!4552 = !DILocation(line: 785, column: 34, scope: !4542)
!4553 = !DILocation(line: 785, column: 40, scope: !4542)
!4554 = !DILocation(line: 785, column: 44, scope: !4542)
!4555 = !DILocation(line: 785, column: 3, scope: !4542)
!4556 = !DILocation(line: 786, column: 10, scope: !4542)
!4557 = !DILocation(line: 786, column: 3, scope: !4542)
!4558 = distinct !DISubprogram(name: "validate_replace_rtx_group", scope: !3, file: !3, line: 794, type: !4559, scopeLine: 795, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!4559 = !DISubroutineType(types: !4560)
!4560 = !{null, !900, !900, !900}
!4561 = !DILocalVariable(name: "from", arg: 1, scope: !4558, file: !3, line: 794, type: !900)
!4562 = !DILocation(line: 794, column: 33, scope: !4558)
!4563 = !DILocalVariable(name: "to", arg: 2, scope: !4558, file: !3, line: 794, type: !900)
!4564 = !DILocation(line: 794, column: 43, scope: !4558)
!4565 = !DILocalVariable(name: "insn", arg: 3, scope: !4558, file: !3, line: 794, type: !900)
!4566 = !DILocation(line: 794, column: 51, scope: !4558)
!4567 = !DILocalVariable(name: "note", scope: !4558, file: !3, line: 796, type: !900)
!4568 = !DILocation(line: 796, column: 7, scope: !4558)
!4569 = !DILocation(line: 797, column: 28, scope: !4558)
!4570 = !DILocation(line: 797, column: 44, scope: !4558)
!4571 = !DILocation(line: 797, column: 50, scope: !4558)
!4572 = !DILocation(line: 797, column: 54, scope: !4558)
!4573 = !DILocation(line: 797, column: 3, scope: !4558)
!4574 = !DILocation(line: 798, column: 15, scope: !4575)
!4575 = distinct !DILexicalBlock(scope: !4558, file: !3, line: 798, column: 3)
!4576 = !DILocation(line: 798, column: 13, scope: !4575)
!4577 = !DILocation(line: 798, column: 8, scope: !4575)
!4578 = !DILocation(line: 798, column: 33, scope: !4579)
!4579 = distinct !DILexicalBlock(scope: !4575, file: !3, line: 798, column: 3)
!4580 = !DILocation(line: 798, column: 3, scope: !4575)
!4581 = !DILocation(line: 799, column: 9, scope: !4582)
!4582 = distinct !DILexicalBlock(scope: !4579, file: !3, line: 799, column: 9)
!4583 = !DILocation(line: 799, column: 30, scope: !4582)
!4584 = !DILocation(line: 800, column: 2, scope: !4582)
!4585 = !DILocation(line: 800, column: 5, scope: !4582)
!4586 = !DILocation(line: 800, column: 26, scope: !4582)
!4587 = !DILocation(line: 799, column: 9, scope: !4579)
!4588 = !DILocation(line: 801, column: 32, scope: !4582)
!4589 = !DILocation(line: 801, column: 48, scope: !4582)
!4590 = !DILocation(line: 801, column: 54, scope: !4582)
!4591 = !DILocation(line: 801, column: 58, scope: !4582)
!4592 = !DILocation(line: 801, column: 7, scope: !4582)
!4593 = !DILocation(line: 800, column: 29, scope: !4582)
!4594 = !DILocation(line: 798, column: 46, scope: !4579)
!4595 = !DILocation(line: 798, column: 44, scope: !4579)
!4596 = !DILocation(line: 798, column: 3, scope: !4579)
!4597 = distinct !{!4597, !4580, !4598}
!4598 = !DILocation(line: 801, column: 68, scope: !4575)
!4599 = !DILocation(line: 802, column: 1, scope: !4558)
!4600 = distinct !DISubprogram(name: "validate_replace_src_group", scope: !3, file: !3, line: 825, type: !4559, scopeLine: 826, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!4601 = !DILocalVariable(name: "from", arg: 1, scope: !4600, file: !3, line: 825, type: !900)
!4602 = !DILocation(line: 825, column: 33, scope: !4600)
!4603 = !DILocalVariable(name: "to", arg: 2, scope: !4600, file: !3, line: 825, type: !900)
!4604 = !DILocation(line: 825, column: 43, scope: !4600)
!4605 = !DILocalVariable(name: "insn", arg: 3, scope: !4600, file: !3, line: 825, type: !900)
!4606 = !DILocation(line: 825, column: 51, scope: !4600)
!4607 = !DILocalVariable(name: "d", scope: !4600, file: !3, line: 827, type: !1993)
!4608 = !DILocation(line: 827, column: 36, scope: !4600)
!4609 = !DILocation(line: 829, column: 12, scope: !4600)
!4610 = !DILocation(line: 829, column: 5, scope: !4600)
!4611 = !DILocation(line: 829, column: 10, scope: !4600)
!4612 = !DILocation(line: 830, column: 10, scope: !4600)
!4613 = !DILocation(line: 830, column: 5, scope: !4600)
!4614 = !DILocation(line: 830, column: 8, scope: !4600)
!4615 = !DILocation(line: 831, column: 12, scope: !4600)
!4616 = !DILocation(line: 831, column: 5, scope: !4600)
!4617 = !DILocation(line: 831, column: 10, scope: !4600)
!4618 = !DILocation(line: 832, column: 15, scope: !4600)
!4619 = !DILocation(line: 832, column: 55, scope: !4600)
!4620 = !DILocation(line: 832, column: 3, scope: !4600)
!4621 = !DILocation(line: 833, column: 1, scope: !4600)
!4622 = distinct !DISubprogram(name: "validate_replace_src_1", scope: !3, file: !3, line: 813, type: !4623, scopeLine: 814, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!4623 = !DISubroutineType(types: !4624)
!4624 = !{null, !899, !1012}
!4625 = !DILocalVariable(name: "x", arg: 1, scope: !4622, file: !3, line: 813, type: !899)
!4626 = !DILocation(line: 813, column: 30, scope: !4622)
!4627 = !DILocalVariable(name: "data", arg: 2, scope: !4622, file: !3, line: 813, type: !1012)
!4628 = !DILocation(line: 813, column: 39, scope: !4622)
!4629 = !DILocalVariable(name: "d", scope: !4622, file: !3, line: 815, type: !1992)
!4630 = !DILocation(line: 815, column: 37, scope: !4622)
!4631 = !DILocation(line: 816, column: 44, scope: !4622)
!4632 = !DILocation(line: 816, column: 7, scope: !4622)
!4633 = !DILocation(line: 818, column: 27, scope: !4622)
!4634 = !DILocation(line: 818, column: 30, scope: !4622)
!4635 = !DILocation(line: 818, column: 33, scope: !4622)
!4636 = !DILocation(line: 818, column: 39, scope: !4622)
!4637 = !DILocation(line: 818, column: 42, scope: !4622)
!4638 = !DILocation(line: 818, column: 46, scope: !4622)
!4639 = !DILocation(line: 818, column: 49, scope: !4622)
!4640 = !DILocation(line: 818, column: 3, scope: !4622)
!4641 = !DILocation(line: 819, column: 1, scope: !4622)
!4642 = distinct !DISubprogram(name: "validate_simplify_insn", scope: !3, file: !3, line: 840, type: !4643, scopeLine: 841, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!4643 = !DISubroutineType(types: !4644)
!4644 = !{!1135, !900}
!4645 = !DILocalVariable(name: "insn", arg: 1, scope: !4642, file: !3, line: 840, type: !900)
!4646 = !DILocation(line: 840, column: 29, scope: !4642)
!4647 = !DILocalVariable(name: "i", scope: !4642, file: !3, line: 842, type: !924)
!4648 = !DILocation(line: 842, column: 7, scope: !4642)
!4649 = !DILocalVariable(name: "pat", scope: !4642, file: !3, line: 843, type: !900)
!4650 = !DILocation(line: 843, column: 7, scope: !4642)
!4651 = !DILocalVariable(name: "newpat", scope: !4642, file: !3, line: 844, type: !900)
!4652 = !DILocation(line: 844, column: 7, scope: !4642)
!4653 = !DILocation(line: 846, column: 9, scope: !4642)
!4654 = !DILocation(line: 846, column: 7, scope: !4642)
!4655 = !DILocation(line: 848, column: 7, scope: !4656)
!4656 = distinct !DILexicalBlock(scope: !4642, file: !3, line: 848, column: 7)
!4657 = !DILocation(line: 848, column: 22, scope: !4656)
!4658 = !DILocation(line: 848, column: 7, scope: !4642)
!4659 = !DILocation(line: 850, column: 30, scope: !4660)
!4660 = distinct !DILexicalBlock(scope: !4656, file: !3, line: 849, column: 5)
!4661 = !DILocation(line: 850, column: 16, scope: !4660)
!4662 = !DILocation(line: 850, column: 14, scope: !4660)
!4663 = !DILocation(line: 851, column: 11, scope: !4664)
!4664 = distinct !DILexicalBlock(scope: !4660, file: !3, line: 851, column: 11)
!4665 = !DILocation(line: 851, column: 18, scope: !4664)
!4666 = !DILocation(line: 851, column: 35, scope: !4664)
!4667 = !DILocation(line: 851, column: 50, scope: !4664)
!4668 = !DILocation(line: 851, column: 22, scope: !4664)
!4669 = !DILocation(line: 851, column: 11, scope: !4660)
!4670 = !DILocation(line: 852, column: 19, scope: !4664)
!4671 = !DILocation(line: 852, column: 26, scope: !4664)
!4672 = !DILocation(line: 852, column: 41, scope: !4664)
!4673 = !DILocation(line: 852, column: 2, scope: !4664)
!4674 = !DILocation(line: 853, column: 30, scope: !4660)
!4675 = !DILocation(line: 853, column: 16, scope: !4660)
!4676 = !DILocation(line: 853, column: 14, scope: !4660)
!4677 = !DILocation(line: 854, column: 11, scope: !4678)
!4678 = distinct !DILexicalBlock(scope: !4660, file: !3, line: 854, column: 11)
!4679 = !DILocation(line: 854, column: 18, scope: !4678)
!4680 = !DILocation(line: 854, column: 35, scope: !4678)
!4681 = !DILocation(line: 854, column: 51, scope: !4678)
!4682 = !DILocation(line: 854, column: 22, scope: !4678)
!4683 = !DILocation(line: 854, column: 11, scope: !4660)
!4684 = !DILocation(line: 855, column: 19, scope: !4678)
!4685 = !DILocation(line: 855, column: 26, scope: !4678)
!4686 = !DILocation(line: 855, column: 42, scope: !4678)
!4687 = !DILocation(line: 855, column: 2, scope: !4678)
!4688 = !DILocation(line: 856, column: 5, scope: !4660)
!4689 = !DILocation(line: 857, column: 12, scope: !4690)
!4690 = distinct !DILexicalBlock(scope: !4656, file: !3, line: 857, column: 12)
!4691 = !DILocation(line: 857, column: 27, scope: !4690)
!4692 = !DILocation(line: 857, column: 12, scope: !4656)
!4693 = !DILocation(line: 858, column: 12, scope: !4694)
!4694 = distinct !DILexicalBlock(scope: !4690, file: !3, line: 858, column: 5)
!4695 = !DILocation(line: 858, column: 10, scope: !4694)
!4696 = !DILocation(line: 858, column: 17, scope: !4697)
!4697 = distinct !DILexicalBlock(scope: !4694, file: !3, line: 858, column: 5)
!4698 = !DILocation(line: 858, column: 21, scope: !4697)
!4699 = !DILocation(line: 858, column: 19, scope: !4697)
!4700 = !DILocation(line: 858, column: 5, scope: !4694)
!4701 = !DILocalVariable(name: "s", scope: !4702, file: !3, line: 860, type: !900)
!4702 = distinct !DILexicalBlock(scope: !4697, file: !3, line: 859, column: 7)
!4703 = !DILocation(line: 860, column: 6, scope: !4702)
!4704 = !DILocation(line: 860, column: 10, scope: !4702)
!4705 = !DILocation(line: 862, column: 6, scope: !4706)
!4706 = distinct !DILexicalBlock(scope: !4702, file: !3, line: 862, column: 6)
!4707 = !DILocation(line: 862, column: 37, scope: !4706)
!4708 = !DILocation(line: 862, column: 6, scope: !4702)
!4709 = !DILocation(line: 864, column: 29, scope: !4710)
!4710 = distinct !DILexicalBlock(scope: !4706, file: !3, line: 863, column: 4)
!4711 = !DILocation(line: 864, column: 15, scope: !4710)
!4712 = !DILocation(line: 864, column: 13, scope: !4710)
!4713 = !DILocation(line: 865, column: 10, scope: !4714)
!4714 = distinct !DILexicalBlock(scope: !4710, file: !3, line: 865, column: 10)
!4715 = !DILocation(line: 865, column: 17, scope: !4714)
!4716 = !DILocation(line: 865, column: 34, scope: !4714)
!4717 = !DILocation(line: 865, column: 47, scope: !4714)
!4718 = !DILocation(line: 865, column: 21, scope: !4714)
!4719 = !DILocation(line: 865, column: 10, scope: !4710)
!4720 = !DILocation(line: 866, column: 25, scope: !4714)
!4721 = !DILocation(line: 866, column: 32, scope: !4714)
!4722 = !DILocation(line: 866, column: 45, scope: !4714)
!4723 = !DILocation(line: 866, column: 8, scope: !4714)
!4724 = !DILocation(line: 867, column: 29, scope: !4710)
!4725 = !DILocation(line: 867, column: 15, scope: !4710)
!4726 = !DILocation(line: 867, column: 13, scope: !4710)
!4727 = !DILocation(line: 868, column: 10, scope: !4728)
!4728 = distinct !DILexicalBlock(scope: !4710, file: !3, line: 868, column: 10)
!4729 = !DILocation(line: 868, column: 17, scope: !4728)
!4730 = !DILocation(line: 868, column: 34, scope: !4728)
!4731 = !DILocation(line: 868, column: 48, scope: !4728)
!4732 = !DILocation(line: 868, column: 21, scope: !4728)
!4733 = !DILocation(line: 868, column: 10, scope: !4710)
!4734 = !DILocation(line: 869, column: 25, scope: !4728)
!4735 = !DILocation(line: 869, column: 32, scope: !4728)
!4736 = !DILocation(line: 869, column: 46, scope: !4728)
!4737 = !DILocation(line: 869, column: 8, scope: !4728)
!4738 = !DILocation(line: 870, column: 4, scope: !4710)
!4739 = !DILocation(line: 871, column: 7, scope: !4702)
!4740 = !DILocation(line: 858, column: 40, scope: !4697)
!4741 = !DILocation(line: 858, column: 5, scope: !4697)
!4742 = distinct !{!4742, !4700, !4743}
!4743 = !DILocation(line: 871, column: 7, scope: !4694)
!4744 = !DILocation(line: 872, column: 12, scope: !4642)
!4745 = !DILocation(line: 872, column: 35, scope: !4642)
!4746 = !DILocation(line: 872, column: 40, scope: !4642)
!4747 = !DILocation(line: 872, column: 44, scope: !4642)
!4748 = !DILocation(line: 872, column: 66, scope: !4642)
!4749 = !DILocation(line: 0, scope: !4642)
!4750 = !DILocation(line: 872, column: 10, scope: !4642)
!4751 = !DILocation(line: 872, column: 3, scope: !4642)
!4752 = distinct !DISubprogram(name: "general_operand", scope: !3, file: !3, line: 912, type: !4753, scopeLine: 913, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!4753 = !DISubroutineType(types: !4754)
!4754 = !{!924, !900, !5}
!4755 = !DILocalVariable(name: "op", arg: 1, scope: !4752, file: !3, line: 912, type: !900)
!4756 = !DILocation(line: 912, column: 22, scope: !4752)
!4757 = !DILocalVariable(name: "mode", arg: 2, scope: !4752, file: !3, line: 912, type: !5)
!4758 = !DILocation(line: 912, column: 44, scope: !4752)
!4759 = !DILocalVariable(name: "code", scope: !4752, file: !3, line: 914, type: !377)
!4760 = !DILocation(line: 914, column: 17, scope: !4752)
!4761 = !DILocation(line: 914, column: 24, scope: !4752)
!4762 = !DILocation(line: 916, column: 7, scope: !4763)
!4763 = distinct !DILexicalBlock(scope: !4752, file: !3, line: 916, column: 7)
!4764 = !DILocation(line: 916, column: 12, scope: !4763)
!4765 = !DILocation(line: 916, column: 7, scope: !4752)
!4766 = !DILocation(line: 917, column: 12, scope: !4763)
!4767 = !DILocation(line: 917, column: 10, scope: !4763)
!4768 = !DILocation(line: 917, column: 5, scope: !4763)
!4769 = !DILocation(line: 921, column: 7, scope: !4770)
!4770 = distinct !DILexicalBlock(scope: !4752, file: !3, line: 921, column: 7)
!4771 = !DILocation(line: 921, column: 21, scope: !4770)
!4772 = !DILocation(line: 921, column: 33, scope: !4770)
!4773 = !DILocation(line: 921, column: 36, scope: !4770)
!4774 = !DILocation(line: 921, column: 41, scope: !4770)
!4775 = !DILocation(line: 922, column: 7, scope: !4770)
!4776 = !DILocation(line: 922, column: 10, scope: !4770)
!4777 = !DILocation(line: 922, column: 32, scope: !4770)
!4778 = !DILocation(line: 923, column: 7, scope: !4770)
!4779 = !DILocation(line: 923, column: 10, scope: !4770)
!4780 = !DILocation(line: 923, column: 32, scope: !4770)
!4781 = !DILocation(line: 921, column: 7, scope: !4752)
!4782 = !DILocation(line: 924, column: 5, scope: !4770)
!4783 = !DILocation(line: 926, column: 7, scope: !4784)
!4784 = distinct !DILexicalBlock(scope: !4752, file: !3, line: 926, column: 7)
!4785 = !DILocation(line: 927, column: 7, scope: !4784)
!4786 = !DILocation(line: 927, column: 10, scope: !4784)
!4787 = !DILocation(line: 927, column: 15, scope: !4784)
!4788 = !DILocation(line: 928, column: 7, scope: !4784)
!4789 = !DILocation(line: 928, column: 30, scope: !4784)
!4790 = !DILocation(line: 928, column: 43, scope: !4784)
!4791 = !DILocation(line: 928, column: 10, scope: !4784)
!4792 = !DILocation(line: 928, column: 52, scope: !4784)
!4793 = !DILocation(line: 928, column: 49, scope: !4784)
!4794 = !DILocation(line: 926, column: 7, scope: !4752)
!4795 = !DILocation(line: 929, column: 5, scope: !4784)
!4796 = !DILocation(line: 931, column: 7, scope: !4797)
!4797 = distinct !DILexicalBlock(scope: !4752, file: !3, line: 931, column: 7)
!4798 = !DILocation(line: 931, column: 7, scope: !4752)
!4799 = !DILocation(line: 932, column: 14, scope: !4797)
!4800 = !DILocation(line: 932, column: 28, scope: !4797)
!4801 = !DILocation(line: 932, column: 40, scope: !4797)
!4802 = !DILocation(line: 932, column: 43, scope: !4797)
!4803 = !DILocation(line: 932, column: 60, scope: !4797)
!4804 = !DILocation(line: 932, column: 57, scope: !4797)
!4805 = !DILocation(line: 933, column: 7, scope: !4797)
!4806 = !DILocation(line: 933, column: 10, scope: !4797)
!4807 = !DILocation(line: 933, column: 15, scope: !4797)
!4808 = !DILocation(line: 934, column: 6, scope: !4797)
!4809 = !DILocation(line: 934, column: 12, scope: !4797)
!4810 = !DILocation(line: 934, column: 21, scope: !4797)
!4811 = !DILocation(line: 934, column: 24, scope: !4797)
!4812 = !DILocation(line: 935, column: 6, scope: !4797)
!4813 = !DILocation(line: 935, column: 9, scope: !4797)
!4814 = !DILocation(line: 0, scope: !4797)
!4815 = !DILocation(line: 932, column: 5, scope: !4797)
!4816 = !DILocation(line: 940, column: 7, scope: !4817)
!4817 = distinct !DILexicalBlock(scope: !4752, file: !3, line: 940, column: 7)
!4818 = !DILocation(line: 940, column: 24, scope: !4817)
!4819 = !DILocation(line: 940, column: 21, scope: !4817)
!4820 = !DILocation(line: 940, column: 7, scope: !4752)
!4821 = !DILocation(line: 941, column: 5, scope: !4817)
!4822 = !DILocation(line: 943, column: 7, scope: !4823)
!4823 = distinct !DILexicalBlock(scope: !4752, file: !3, line: 943, column: 7)
!4824 = !DILocation(line: 943, column: 12, scope: !4823)
!4825 = !DILocation(line: 943, column: 7, scope: !4752)
!4826 = !DILocalVariable(name: "sub", scope: !4827, file: !3, line: 945, type: !900)
!4827 = distinct !DILexicalBlock(scope: !4823, file: !3, line: 944, column: 5)
!4828 = !DILocation(line: 945, column: 11, scope: !4827)
!4829 = !DILocation(line: 945, column: 17, scope: !4827)
!4830 = !DILocation(line: 952, column: 12, scope: !4831)
!4831 = distinct !DILexicalBlock(scope: !4827, file: !3, line: 952, column: 11)
!4832 = !DILocation(line: 952, column: 29, scope: !4831)
!4833 = !DILocation(line: 952, column: 32, scope: !4831)
!4834 = !DILocation(line: 953, column: 4, scope: !4831)
!4835 = !DILocation(line: 953, column: 7, scope: !4831)
!4836 = !DILocation(line: 953, column: 30, scope: !4831)
!4837 = !DILocation(line: 953, column: 28, scope: !4831)
!4838 = !DILocation(line: 952, column: 11, scope: !4827)
!4839 = !DILocation(line: 954, column: 2, scope: !4831)
!4840 = !DILocation(line: 962, column: 12, scope: !4841)
!4841 = distinct !DILexicalBlock(scope: !4827, file: !3, line: 962, column: 11)
!4842 = !DILocation(line: 962, column: 29, scope: !4841)
!4843 = !DILocation(line: 962, column: 32, scope: !4841)
!4844 = !DILocation(line: 962, column: 49, scope: !4841)
!4845 = !DILocation(line: 963, column: 4, scope: !4841)
!4846 = !DILocation(line: 963, column: 7, scope: !4841)
!4847 = !DILocation(line: 962, column: 11, scope: !4827)
!4848 = !DILocation(line: 964, column: 2, scope: !4841)
!4849 = !DILocation(line: 968, column: 11, scope: !4850)
!4850 = distinct !DILexicalBlock(scope: !4827, file: !3, line: 968, column: 11)
!4851 = !DILocation(line: 969, column: 4, scope: !4850)
!4852 = !DILocation(line: 969, column: 7, scope: !4850)
!4853 = !DILocation(line: 969, column: 39, scope: !4850)
!4854 = !DILocation(line: 969, column: 37, scope: !4850)
!4855 = !DILocation(line: 968, column: 11, scope: !4827)
!4856 = !DILocation(line: 970, column: 2, scope: !4850)
!4857 = !DILocation(line: 972, column: 12, scope: !4827)
!4858 = !DILocation(line: 972, column: 10, scope: !4827)
!4859 = !DILocation(line: 973, column: 14, scope: !4827)
!4860 = !DILocation(line: 973, column: 12, scope: !4827)
!4861 = !DILocation(line: 974, column: 5, scope: !4827)
!4862 = !DILocation(line: 976, column: 7, scope: !4863)
!4863 = distinct !DILexicalBlock(scope: !4752, file: !3, line: 976, column: 7)
!4864 = !DILocation(line: 976, column: 12, scope: !4863)
!4865 = !DILocation(line: 976, column: 7, scope: !4752)
!4866 = !DILocation(line: 978, column: 13, scope: !4863)
!4867 = !DILocation(line: 978, column: 24, scope: !4863)
!4868 = !DILocation(line: 979, column: 6, scope: !4863)
!4869 = !DILocation(line: 979, column: 9, scope: !4863)
!4870 = !DILocation(line: 979, column: 38, scope: !4863)
!4871 = !DILocation(line: 978, column: 5, scope: !4863)
!4872 = !DILocation(line: 981, column: 7, scope: !4873)
!4873 = distinct !DILexicalBlock(scope: !4752, file: !3, line: 981, column: 7)
!4874 = !DILocation(line: 981, column: 12, scope: !4873)
!4875 = !DILocation(line: 981, column: 7, scope: !4752)
!4876 = !DILocalVariable(name: "y", scope: !4877, file: !3, line: 983, type: !900)
!4877 = distinct !DILexicalBlock(scope: !4873, file: !3, line: 982, column: 5)
!4878 = !DILocation(line: 983, column: 11, scope: !4877)
!4879 = !DILocation(line: 983, column: 15, scope: !4877)
!4880 = !DILocation(line: 985, column: 13, scope: !4881)
!4881 = distinct !DILexicalBlock(scope: !4877, file: !3, line: 985, column: 11)
!4882 = !DILocation(line: 985, column: 25, scope: !4881)
!4883 = !DILocation(line: 985, column: 28, scope: !4881)
!4884 = !DILocation(line: 985, column: 11, scope: !4877)
!4885 = !DILocation(line: 986, column: 2, scope: !4881)
!4886 = !DILocation(line: 989, column: 40, scope: !4887)
!4887 = distinct !DILexicalBlock(scope: !4877, file: !3, line: 989, column: 11)
!4888 = !DILocation(line: 989, column: 55, scope: !4887)
!4889 = !DILocation(line: 989, column: 58, scope: !4887)
!4890 = !DILocation(line: 989, column: 11, scope: !4887)
!4891 = !DILocation(line: 989, column: 11, scope: !4877)
!4892 = !DILocation(line: 990, column: 2, scope: !4887)
!4893 = !DILocation(line: 991, column: 5, scope: !4877)
!4894 = !DILocation(line: 993, column: 3, scope: !4752)
!4895 = !DILocation(line: 994, column: 1, scope: !4752)
!4896 = distinct !DISubprogram(name: "rhs_regno", scope: !378, file: !378, line: 1051, type: !4897, scopeLine: 1052, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!4897 = !DISubroutineType(types: !4898)
!4898 = !{!7, !3126}
!4899 = !DILocalVariable(name: "x", arg: 1, scope: !4896, file: !378, line: 1051, type: !3126)
!4900 = !DILocation(line: 1051, column: 22, scope: !4896)
!4901 = !DILocation(line: 1053, column: 10, scope: !4896)
!4902 = !DILocation(line: 1053, column: 3, scope: !4896)
!4903 = distinct !DISubprogram(name: "address_operand", scope: !3, file: !3, line: 1003, type: !4753, scopeLine: 1004, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!4904 = !DILocalVariable(name: "op", arg: 1, scope: !4903, file: !3, line: 1003, type: !900)
!4905 = !DILocation(line: 1003, column: 22, scope: !4903)
!4906 = !DILocalVariable(name: "mode", arg: 2, scope: !4903, file: !3, line: 1003, type: !5)
!4907 = !DILocation(line: 1003, column: 44, scope: !4903)
!4908 = !DILocation(line: 1005, column: 10, scope: !4903)
!4909 = !DILocation(line: 1005, column: 3, scope: !4903)
!4910 = distinct !DISubprogram(name: "register_operand", scope: !3, file: !3, line: 1023, type: !4753, scopeLine: 1024, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!4911 = !DILocalVariable(name: "op", arg: 1, scope: !4910, file: !3, line: 1023, type: !900)
!4912 = !DILocation(line: 1023, column: 23, scope: !4910)
!4913 = !DILocalVariable(name: "mode", arg: 2, scope: !4910, file: !3, line: 1023, type: !5)
!4914 = !DILocation(line: 1023, column: 45, scope: !4910)
!4915 = !DILocation(line: 1025, column: 7, scope: !4916)
!4916 = distinct !DILexicalBlock(scope: !4910, file: !3, line: 1025, column: 7)
!4917 = !DILocation(line: 1025, column: 24, scope: !4916)
!4918 = !DILocation(line: 1025, column: 21, scope: !4916)
!4919 = !DILocation(line: 1025, column: 29, scope: !4916)
!4920 = !DILocation(line: 1025, column: 32, scope: !4916)
!4921 = !DILocation(line: 1025, column: 37, scope: !4916)
!4922 = !DILocation(line: 1025, column: 7, scope: !4910)
!4923 = !DILocation(line: 1026, column: 5, scope: !4916)
!4924 = !DILocation(line: 1028, column: 7, scope: !4925)
!4925 = distinct !DILexicalBlock(scope: !4910, file: !3, line: 1028, column: 7)
!4926 = !DILocation(line: 1028, column: 21, scope: !4925)
!4927 = !DILocation(line: 1028, column: 7, scope: !4910)
!4928 = !DILocalVariable(name: "sub", scope: !4929, file: !3, line: 1030, type: !900)
!4929 = distinct !DILexicalBlock(scope: !4925, file: !3, line: 1029, column: 5)
!4930 = !DILocation(line: 1030, column: 11, scope: !4929)
!4931 = !DILocation(line: 1030, column: 17, scope: !4929)
!4932 = !DILocation(line: 1038, column: 13, scope: !4933)
!4933 = distinct !DILexicalBlock(scope: !4929, file: !3, line: 1038, column: 11)
!4934 = !DILocation(line: 1038, column: 30, scope: !4933)
!4935 = !DILocation(line: 1038, column: 33, scope: !4933)
!4936 = !DILocation(line: 1038, column: 11, scope: !4929)
!4937 = !DILocation(line: 1039, column: 26, scope: !4933)
!4938 = !DILocation(line: 1039, column: 30, scope: !4933)
!4939 = !DILocation(line: 1039, column: 9, scope: !4933)
!4940 = !DILocation(line: 1039, column: 2, scope: !4933)
!4941 = !DILocation(line: 1042, column: 11, scope: !4942)
!4942 = distinct !DILexicalBlock(scope: !4929, file: !3, line: 1042, column: 11)
!4943 = !DILocation(line: 1043, column: 4, scope: !4942)
!4944 = !DILocation(line: 1043, column: 7, scope: !4942)
!4945 = !DILocation(line: 1043, column: 19, scope: !4942)
!4946 = !DILocation(line: 1044, column: 4, scope: !4942)
!4947 = !DILocation(line: 1044, column: 7, scope: !4942)
!4948 = !DILocation(line: 1045, column: 4, scope: !4942)
!4949 = !DILocation(line: 1045, column: 7, scope: !4942)
!4950 = !DILocation(line: 1045, column: 39, scope: !4942)
!4951 = !DILocation(line: 1046, column: 4, scope: !4942)
!4952 = !DILocation(line: 1046, column: 7, scope: !4942)
!4953 = !DILocation(line: 1046, column: 39, scope: !4942)
!4954 = !DILocation(line: 1042, column: 11, scope: !4929)
!4955 = !DILocation(line: 1047, column: 2, scope: !4942)
!4956 = !DILocation(line: 1052, column: 11, scope: !4957)
!4957 = distinct !DILexicalBlock(scope: !4929, file: !3, line: 1052, column: 11)
!4958 = !DILocation(line: 1053, column: 4, scope: !4957)
!4959 = !DILocation(line: 1053, column: 7, scope: !4957)
!4960 = !DILocation(line: 1053, column: 39, scope: !4957)
!4961 = !DILocation(line: 1053, column: 37, scope: !4957)
!4962 = !DILocation(line: 1052, column: 11, scope: !4929)
!4963 = !DILocation(line: 1054, column: 2, scope: !4957)
!4964 = !DILocation(line: 1056, column: 12, scope: !4929)
!4965 = !DILocation(line: 1056, column: 10, scope: !4929)
!4966 = !DILocation(line: 1057, column: 5, scope: !4929)
!4967 = !DILocation(line: 1061, column: 11, scope: !4910)
!4968 = !DILocation(line: 1062, column: 4, scope: !4910)
!4969 = !DILocation(line: 1062, column: 8, scope: !4910)
!4970 = !DILocation(line: 1062, column: 19, scope: !4910)
!4971 = !DILocation(line: 1063, column: 8, scope: !4910)
!4972 = !DILocation(line: 1063, column: 11, scope: !4910)
!4973 = !DILocation(line: 1063, column: 40, scope: !4910)
!4974 = !DILocation(line: 0, scope: !4910)
!4975 = !DILocation(line: 1061, column: 3, scope: !4910)
!4976 = !DILocation(line: 1064, column: 1, scope: !4910)
!4977 = distinct !DISubprogram(name: "pmode_register_operand", scope: !3, file: !3, line: 1069, type: !4753, scopeLine: 1070, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!4978 = !DILocalVariable(name: "op", arg: 1, scope: !4977, file: !3, line: 1069, type: !900)
!4979 = !DILocation(line: 1069, column: 29, scope: !4977)
!4980 = !DILocalVariable(name: "mode", arg: 2, scope: !4977, file: !3, line: 1069, type: !5)
!4981 = !DILocation(line: 1069, column: 51, scope: !4977)
!4982 = !DILocation(line: 1071, column: 28, scope: !4977)
!4983 = !DILocation(line: 1071, column: 10, scope: !4977)
!4984 = !DILocation(line: 1071, column: 3, scope: !4977)
!4985 = distinct !DISubprogram(name: "scratch_operand", scope: !3, file: !3, line: 1078, type: !4753, scopeLine: 1079, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!4986 = !DILocalVariable(name: "op", arg: 1, scope: !4985, file: !3, line: 1078, type: !900)
!4987 = !DILocation(line: 1078, column: 22, scope: !4985)
!4988 = !DILocalVariable(name: "mode", arg: 2, scope: !4985, file: !3, line: 1078, type: !5)
!4989 = !DILocation(line: 1078, column: 44, scope: !4985)
!4990 = !DILocation(line: 1080, column: 7, scope: !4991)
!4991 = distinct !DILexicalBlock(scope: !4985, file: !3, line: 1080, column: 7)
!4992 = !DILocation(line: 1080, column: 24, scope: !4991)
!4993 = !DILocation(line: 1080, column: 21, scope: !4991)
!4994 = !DILocation(line: 1080, column: 29, scope: !4991)
!4995 = !DILocation(line: 1080, column: 32, scope: !4991)
!4996 = !DILocation(line: 1080, column: 37, scope: !4991)
!4997 = !DILocation(line: 1080, column: 7, scope: !4985)
!4998 = !DILocation(line: 1081, column: 5, scope: !4991)
!4999 = !DILocation(line: 1083, column: 11, scope: !4985)
!5000 = !DILocation(line: 1083, column: 25, scope: !4985)
!5001 = !DILocation(line: 1084, column: 4, scope: !4985)
!5002 = !DILocation(line: 1084, column: 8, scope: !4985)
!5003 = !DILocation(line: 1085, column: 8, scope: !4985)
!5004 = !DILocation(line: 1085, column: 11, scope: !4985)
!5005 = !DILocation(line: 1085, column: 22, scope: !4985)
!5006 = !DILocation(line: 0, scope: !4985)
!5007 = !DILocation(line: 1083, column: 3, scope: !4985)
!5008 = !DILocation(line: 1086, column: 1, scope: !4985)
!5009 = distinct !DISubprogram(name: "immediate_operand", scope: !3, file: !3, line: 1094, type: !4753, scopeLine: 1095, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!5010 = !DILocalVariable(name: "op", arg: 1, scope: !5009, file: !3, line: 1094, type: !900)
!5011 = !DILocation(line: 1094, column: 24, scope: !5009)
!5012 = !DILocalVariable(name: "mode", arg: 2, scope: !5009, file: !3, line: 1094, type: !5)
!5013 = !DILocation(line: 1094, column: 46, scope: !5009)
!5014 = !DILocation(line: 1098, column: 7, scope: !5015)
!5015 = distinct !DILexicalBlock(scope: !5009, file: !3, line: 1098, column: 7)
!5016 = !DILocation(line: 1098, column: 21, scope: !5015)
!5017 = !DILocation(line: 1098, column: 33, scope: !5015)
!5018 = !DILocation(line: 1098, column: 36, scope: !5015)
!5019 = !DILocation(line: 1098, column: 41, scope: !5015)
!5020 = !DILocation(line: 1099, column: 7, scope: !5015)
!5021 = !DILocation(line: 1099, column: 10, scope: !5015)
!5022 = !DILocation(line: 1099, column: 32, scope: !5015)
!5023 = !DILocation(line: 1100, column: 7, scope: !5015)
!5024 = !DILocation(line: 1100, column: 10, scope: !5015)
!5025 = !DILocation(line: 1100, column: 32, scope: !5015)
!5026 = !DILocation(line: 1098, column: 7, scope: !5009)
!5027 = !DILocation(line: 1101, column: 5, scope: !5015)
!5028 = !DILocation(line: 1103, column: 7, scope: !5029)
!5029 = distinct !DILexicalBlock(scope: !5009, file: !3, line: 1103, column: 7)
!5030 = !DILocation(line: 1104, column: 7, scope: !5029)
!5031 = !DILocation(line: 1104, column: 10, scope: !5029)
!5032 = !DILocation(line: 1104, column: 15, scope: !5029)
!5033 = !DILocation(line: 1105, column: 7, scope: !5029)
!5034 = !DILocation(line: 1105, column: 30, scope: !5029)
!5035 = !DILocation(line: 1105, column: 43, scope: !5029)
!5036 = !DILocation(line: 1105, column: 10, scope: !5029)
!5037 = !DILocation(line: 1105, column: 52, scope: !5029)
!5038 = !DILocation(line: 1105, column: 49, scope: !5029)
!5039 = !DILocation(line: 1103, column: 7, scope: !5009)
!5040 = !DILocation(line: 1106, column: 5, scope: !5029)
!5041 = !DILocation(line: 1108, column: 11, scope: !5009)
!5042 = !DILocation(line: 1109, column: 4, scope: !5009)
!5043 = !DILocation(line: 1109, column: 8, scope: !5009)
!5044 = !DILocation(line: 1109, column: 25, scope: !5009)
!5045 = !DILocation(line: 1109, column: 22, scope: !5009)
!5046 = !DILocation(line: 1109, column: 30, scope: !5009)
!5047 = !DILocation(line: 1109, column: 33, scope: !5009)
!5048 = !DILocation(line: 1109, column: 38, scope: !5009)
!5049 = !DILocation(line: 1110, column: 8, scope: !5009)
!5050 = !DILocation(line: 1110, column: 11, scope: !5009)
!5051 = !DILocation(line: 1110, column: 25, scope: !5009)
!5052 = !DILocation(line: 1111, column: 4, scope: !5009)
!5053 = !DILocation(line: 1111, column: 10, scope: !5009)
!5054 = !DILocation(line: 1111, column: 19, scope: !5009)
!5055 = !DILocation(line: 1111, column: 22, scope: !5009)
!5056 = !DILocation(line: 1112, column: 4, scope: !5009)
!5057 = !DILocation(line: 1112, column: 7, scope: !5009)
!5058 = !DILocation(line: 0, scope: !5009)
!5059 = !DILocation(line: 1108, column: 3, scope: !5009)
!5060 = !DILocation(line: 1113, column: 1, scope: !5009)
!5061 = distinct !DISubprogram(name: "const_int_operand", scope: !3, file: !3, line: 1118, type: !4753, scopeLine: 1119, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!5062 = !DILocalVariable(name: "op", arg: 1, scope: !5061, file: !3, line: 1118, type: !900)
!5063 = !DILocation(line: 1118, column: 24, scope: !5061)
!5064 = !DILocalVariable(name: "mode", arg: 2, scope: !5061, file: !3, line: 1118, type: !5)
!5065 = !DILocation(line: 1118, column: 46, scope: !5061)
!5066 = !DILocation(line: 1120, column: 8, scope: !5067)
!5067 = distinct !DILexicalBlock(scope: !5061, file: !3, line: 1120, column: 7)
!5068 = !DILocation(line: 1120, column: 7, scope: !5061)
!5069 = !DILocation(line: 1121, column: 5, scope: !5067)
!5070 = !DILocation(line: 1123, column: 7, scope: !5071)
!5071 = distinct !DILexicalBlock(scope: !5061, file: !3, line: 1123, column: 7)
!5072 = !DILocation(line: 1123, column: 12, scope: !5071)
!5073 = !DILocation(line: 1124, column: 7, scope: !5071)
!5074 = !DILocation(line: 1124, column: 30, scope: !5071)
!5075 = !DILocation(line: 1124, column: 43, scope: !5071)
!5076 = !DILocation(line: 1124, column: 10, scope: !5071)
!5077 = !DILocation(line: 1124, column: 52, scope: !5071)
!5078 = !DILocation(line: 1124, column: 49, scope: !5071)
!5079 = !DILocation(line: 1123, column: 7, scope: !5061)
!5080 = !DILocation(line: 1125, column: 5, scope: !5071)
!5081 = !DILocation(line: 1127, column: 3, scope: !5061)
!5082 = !DILocation(line: 1128, column: 1, scope: !5061)
!5083 = distinct !DISubprogram(name: "const_double_operand", scope: !3, file: !3, line: 1134, type: !4753, scopeLine: 1135, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!5084 = !DILocalVariable(name: "op", arg: 1, scope: !5083, file: !3, line: 1134, type: !900)
!5085 = !DILocation(line: 1134, column: 27, scope: !5083)
!5086 = !DILocalVariable(name: "mode", arg: 2, scope: !5083, file: !3, line: 1134, type: !5)
!5087 = !DILocation(line: 1134, column: 49, scope: !5083)
!5088 = !DILocation(line: 1138, column: 7, scope: !5089)
!5089 = distinct !DILexicalBlock(scope: !5083, file: !3, line: 1138, column: 7)
!5090 = !DILocation(line: 1138, column: 21, scope: !5089)
!5091 = !DILocation(line: 1138, column: 33, scope: !5089)
!5092 = !DILocation(line: 1138, column: 36, scope: !5089)
!5093 = !DILocation(line: 1138, column: 41, scope: !5089)
!5094 = !DILocation(line: 1139, column: 7, scope: !5089)
!5095 = !DILocation(line: 1139, column: 10, scope: !5089)
!5096 = !DILocation(line: 1139, column: 32, scope: !5089)
!5097 = !DILocation(line: 1140, column: 7, scope: !5089)
!5098 = !DILocation(line: 1140, column: 10, scope: !5089)
!5099 = !DILocation(line: 1140, column: 32, scope: !5089)
!5100 = !DILocation(line: 1138, column: 7, scope: !5083)
!5101 = !DILocation(line: 1141, column: 5, scope: !5089)
!5102 = !DILocation(line: 1143, column: 12, scope: !5083)
!5103 = !DILocation(line: 1143, column: 26, scope: !5083)
!5104 = !DILocation(line: 1143, column: 42, scope: !5083)
!5105 = !DILocation(line: 1143, column: 45, scope: !5083)
!5106 = !DILocation(line: 1144, column: 4, scope: !5083)
!5107 = !DILocation(line: 1144, column: 8, scope: !5083)
!5108 = !DILocation(line: 1144, column: 13, scope: !5083)
!5109 = !DILocation(line: 1144, column: 25, scope: !5083)
!5110 = !DILocation(line: 1144, column: 28, scope: !5083)
!5111 = !DILocation(line: 1144, column: 45, scope: !5083)
!5112 = !DILocation(line: 1144, column: 42, scope: !5083)
!5113 = !DILocation(line: 1145, column: 8, scope: !5083)
!5114 = !DILocation(line: 1145, column: 11, scope: !5083)
!5115 = !DILocation(line: 1145, column: 25, scope: !5083)
!5116 = !DILocation(line: 0, scope: !5083)
!5117 = !DILocation(line: 1143, column: 3, scope: !5083)
!5118 = !DILocation(line: 1146, column: 1, scope: !5083)
!5119 = distinct !DISubprogram(name: "nonimmediate_operand", scope: !3, file: !3, line: 1151, type: !4753, scopeLine: 1152, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!5120 = !DILocalVariable(name: "op", arg: 1, scope: !5119, file: !3, line: 1151, type: !900)
!5121 = !DILocation(line: 1151, column: 27, scope: !5119)
!5122 = !DILocalVariable(name: "mode", arg: 2, scope: !5119, file: !3, line: 1151, type: !5)
!5123 = !DILocation(line: 1151, column: 49, scope: !5119)
!5124 = !DILocation(line: 1153, column: 28, scope: !5119)
!5125 = !DILocation(line: 1153, column: 32, scope: !5119)
!5126 = !DILocation(line: 1153, column: 11, scope: !5119)
!5127 = !DILocation(line: 1153, column: 38, scope: !5119)
!5128 = !DILocation(line: 1153, column: 43, scope: !5119)
!5129 = !DILocation(line: 1153, column: 41, scope: !5119)
!5130 = !DILocation(line: 0, scope: !5119)
!5131 = !DILocation(line: 1153, column: 3, scope: !5119)
!5132 = distinct !DISubprogram(name: "nonmemory_operand", scope: !3, file: !3, line: 1159, type: !4753, scopeLine: 1160, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!5133 = !DILocalVariable(name: "op", arg: 1, scope: !5132, file: !3, line: 1159, type: !900)
!5134 = !DILocation(line: 1159, column: 24, scope: !5132)
!5135 = !DILocalVariable(name: "mode", arg: 2, scope: !5132, file: !3, line: 1159, type: !5)
!5136 = !DILocation(line: 1159, column: 46, scope: !5132)
!5137 = !DILocation(line: 1161, column: 7, scope: !5138)
!5138 = distinct !DILexicalBlock(scope: !5132, file: !3, line: 1161, column: 7)
!5139 = !DILocation(line: 1161, column: 7, scope: !5132)
!5140 = !DILocation(line: 1165, column: 11, scope: !5141)
!5141 = distinct !DILexicalBlock(scope: !5142, file: !3, line: 1165, column: 11)
!5142 = distinct !DILexicalBlock(scope: !5138, file: !3, line: 1162, column: 5)
!5143 = !DILocation(line: 1165, column: 25, scope: !5141)
!5144 = !DILocation(line: 1165, column: 37, scope: !5141)
!5145 = !DILocation(line: 1165, column: 40, scope: !5141)
!5146 = !DILocation(line: 1165, column: 45, scope: !5141)
!5147 = !DILocation(line: 1166, column: 4, scope: !5141)
!5148 = !DILocation(line: 1166, column: 7, scope: !5141)
!5149 = !DILocation(line: 1166, column: 29, scope: !5141)
!5150 = !DILocation(line: 1167, column: 4, scope: !5141)
!5151 = !DILocation(line: 1167, column: 7, scope: !5141)
!5152 = !DILocation(line: 1167, column: 29, scope: !5141)
!5153 = !DILocation(line: 1165, column: 11, scope: !5142)
!5154 = !DILocation(line: 1168, column: 2, scope: !5141)
!5155 = !DILocation(line: 1170, column: 11, scope: !5156)
!5156 = distinct !DILexicalBlock(scope: !5142, file: !3, line: 1170, column: 11)
!5157 = !DILocation(line: 1171, column: 4, scope: !5156)
!5158 = !DILocation(line: 1171, column: 7, scope: !5156)
!5159 = !DILocation(line: 1171, column: 12, scope: !5156)
!5160 = !DILocation(line: 1172, column: 4, scope: !5156)
!5161 = !DILocation(line: 1172, column: 27, scope: !5156)
!5162 = !DILocation(line: 1172, column: 40, scope: !5156)
!5163 = !DILocation(line: 1172, column: 7, scope: !5156)
!5164 = !DILocation(line: 1172, column: 49, scope: !5156)
!5165 = !DILocation(line: 1172, column: 46, scope: !5156)
!5166 = !DILocation(line: 1170, column: 11, scope: !5142)
!5167 = !DILocation(line: 1173, column: 2, scope: !5156)
!5168 = !DILocation(line: 1175, column: 16, scope: !5142)
!5169 = !DILocation(line: 1175, column: 30, scope: !5142)
!5170 = !DILocation(line: 1175, column: 42, scope: !5142)
!5171 = !DILocation(line: 1175, column: 45, scope: !5142)
!5172 = !DILocation(line: 1175, column: 62, scope: !5142)
!5173 = !DILocation(line: 1175, column: 59, scope: !5142)
!5174 = !DILocation(line: 1176, column: 9, scope: !5142)
!5175 = !DILocation(line: 1176, column: 12, scope: !5142)
!5176 = !DILocation(line: 1176, column: 17, scope: !5142)
!5177 = !DILocation(line: 1177, column: 8, scope: !5142)
!5178 = !DILocation(line: 1177, column: 14, scope: !5142)
!5179 = !DILocation(line: 1177, column: 23, scope: !5142)
!5180 = !DILocation(line: 1177, column: 26, scope: !5142)
!5181 = !DILocation(line: 1178, column: 8, scope: !5142)
!5182 = !DILocation(line: 1178, column: 11, scope: !5142)
!5183 = !DILocation(line: 0, scope: !5142)
!5184 = !DILocation(line: 1175, column: 7, scope: !5142)
!5185 = !DILocation(line: 1181, column: 7, scope: !5186)
!5186 = distinct !DILexicalBlock(scope: !5132, file: !3, line: 1181, column: 7)
!5187 = !DILocation(line: 1181, column: 24, scope: !5186)
!5188 = !DILocation(line: 1181, column: 21, scope: !5186)
!5189 = !DILocation(line: 1181, column: 29, scope: !5186)
!5190 = !DILocation(line: 1181, column: 32, scope: !5186)
!5191 = !DILocation(line: 1181, column: 37, scope: !5186)
!5192 = !DILocation(line: 1181, column: 7, scope: !5132)
!5193 = !DILocation(line: 1182, column: 5, scope: !5186)
!5194 = !DILocation(line: 1184, column: 7, scope: !5195)
!5195 = distinct !DILexicalBlock(scope: !5132, file: !3, line: 1184, column: 7)
!5196 = !DILocation(line: 1184, column: 21, scope: !5195)
!5197 = !DILocation(line: 1184, column: 7, scope: !5132)
!5198 = !DILocation(line: 1192, column: 13, scope: !5199)
!5199 = distinct !DILexicalBlock(scope: !5200, file: !3, line: 1192, column: 11)
!5200 = distinct !DILexicalBlock(scope: !5195, file: !3, line: 1185, column: 5)
!5201 = !DILocation(line: 1192, column: 30, scope: !5199)
!5202 = !DILocation(line: 1192, column: 33, scope: !5199)
!5203 = !DILocation(line: 1192, column: 11, scope: !5200)
!5204 = !DILocation(line: 1193, column: 26, scope: !5199)
!5205 = !DILocation(line: 1193, column: 30, scope: !5199)
!5206 = !DILocation(line: 1193, column: 9, scope: !5199)
!5207 = !DILocation(line: 1193, column: 2, scope: !5199)
!5208 = !DILocation(line: 1194, column: 12, scope: !5200)
!5209 = !DILocation(line: 1194, column: 10, scope: !5200)
!5210 = !DILocation(line: 1195, column: 5, scope: !5200)
!5211 = !DILocation(line: 1199, column: 11, scope: !5132)
!5212 = !DILocation(line: 1200, column: 4, scope: !5132)
!5213 = !DILocation(line: 1200, column: 8, scope: !5132)
!5214 = !DILocation(line: 1200, column: 19, scope: !5132)
!5215 = !DILocation(line: 1201, column: 8, scope: !5132)
!5216 = !DILocation(line: 1201, column: 11, scope: !5132)
!5217 = !DILocation(line: 1201, column: 40, scope: !5132)
!5218 = !DILocation(line: 0, scope: !5132)
!5219 = !DILocation(line: 1199, column: 3, scope: !5132)
!5220 = !DILocation(line: 1202, column: 1, scope: !5132)
!5221 = distinct !DISubprogram(name: "push_operand", scope: !3, file: !3, line: 1211, type: !4753, scopeLine: 1212, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!5222 = !DILocalVariable(name: "op", arg: 1, scope: !5221, file: !3, line: 1211, type: !900)
!5223 = !DILocation(line: 1211, column: 19, scope: !5221)
!5224 = !DILocalVariable(name: "mode", arg: 2, scope: !5221, file: !3, line: 1211, type: !5)
!5225 = !DILocation(line: 1211, column: 41, scope: !5221)
!5226 = !DILocalVariable(name: "rounded_size", scope: !5221, file: !3, line: 1213, type: !7)
!5227 = !DILocation(line: 1213, column: 16, scope: !5221)
!5228 = !DILocation(line: 1213, column: 31, scope: !5221)
!5229 = !DILocation(line: 1216, column: 18, scope: !5221)
!5230 = !DILocation(line: 1216, column: 16, scope: !5221)
!5231 = !DILocation(line: 1219, column: 8, scope: !5232)
!5232 = distinct !DILexicalBlock(scope: !5221, file: !3, line: 1219, column: 7)
!5233 = !DILocation(line: 1219, column: 7, scope: !5221)
!5234 = !DILocation(line: 1220, column: 5, scope: !5232)
!5235 = !DILocation(line: 1222, column: 7, scope: !5236)
!5236 = distinct !DILexicalBlock(scope: !5221, file: !3, line: 1222, column: 7)
!5237 = !DILocation(line: 1222, column: 12, scope: !5236)
!5238 = !DILocation(line: 1222, column: 24, scope: !5236)
!5239 = !DILocation(line: 1222, column: 27, scope: !5236)
!5240 = !DILocation(line: 1222, column: 44, scope: !5236)
!5241 = !DILocation(line: 1222, column: 41, scope: !5236)
!5242 = !DILocation(line: 1222, column: 7, scope: !5221)
!5243 = !DILocation(line: 1223, column: 5, scope: !5236)
!5244 = !DILocation(line: 1225, column: 8, scope: !5221)
!5245 = !DILocation(line: 1225, column: 6, scope: !5221)
!5246 = !DILocation(line: 1227, column: 7, scope: !5247)
!5247 = distinct !DILexicalBlock(scope: !5221, file: !3, line: 1227, column: 7)
!5248 = !DILocation(line: 1227, column: 23, scope: !5247)
!5249 = !DILocation(line: 1227, column: 20, scope: !5247)
!5250 = !DILocation(line: 1227, column: 7, scope: !5221)
!5251 = !DILocation(line: 1229, column: 11, scope: !5252)
!5252 = distinct !DILexicalBlock(scope: !5253, file: !3, line: 1229, column: 11)
!5253 = distinct !DILexicalBlock(scope: !5247, file: !3, line: 1228, column: 5)
!5254 = !DILocation(line: 1229, column: 25, scope: !5252)
!5255 = !DILocation(line: 1229, column: 11, scope: !5253)
!5256 = !DILocation(line: 1230, column: 2, scope: !5252)
!5257 = !DILocation(line: 1231, column: 5, scope: !5253)
!5258 = !DILocation(line: 1234, column: 11, scope: !5259)
!5259 = distinct !DILexicalBlock(scope: !5260, file: !3, line: 1234, column: 11)
!5260 = distinct !DILexicalBlock(scope: !5247, file: !3, line: 1233, column: 5)
!5261 = !DILocation(line: 1234, column: 25, scope: !5259)
!5262 = !DILocation(line: 1235, column: 4, scope: !5259)
!5263 = !DILocation(line: 1235, column: 7, scope: !5259)
!5264 = !DILocation(line: 1235, column: 31, scope: !5259)
!5265 = !DILocation(line: 1236, column: 4, scope: !5259)
!5266 = !DILocation(line: 1236, column: 7, scope: !5259)
!5267 = !DILocation(line: 1236, column: 33, scope: !5259)
!5268 = !DILocation(line: 1236, column: 30, scope: !5259)
!5269 = !DILocation(line: 1237, column: 4, scope: !5259)
!5270 = !DILocation(line: 1237, column: 8, scope: !5259)
!5271 = !DILocation(line: 1239, column: 4, scope: !5259)
!5272 = !DILocation(line: 1239, column: 7, scope: !5259)
!5273 = !DILocation(line: 1239, column: 50, scope: !5259)
!5274 = !DILocation(line: 1239, column: 42, scope: !5259)
!5275 = !DILocation(line: 1239, column: 39, scope: !5259)
!5276 = !DILocation(line: 1234, column: 11, scope: !5260)
!5277 = !DILocation(line: 1244, column: 2, scope: !5259)
!5278 = !DILocation(line: 1247, column: 10, scope: !5221)
!5279 = !DILocation(line: 1247, column: 26, scope: !5221)
!5280 = !DILocation(line: 1247, column: 23, scope: !5221)
!5281 = !DILocation(line: 1247, column: 3, scope: !5221)
!5282 = !DILocation(line: 1248, column: 1, scope: !5221)
!5283 = distinct !DISubprogram(name: "pop_operand", scope: !3, file: !3, line: 1257, type: !4753, scopeLine: 1258, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!5284 = !DILocalVariable(name: "op", arg: 1, scope: !5283, file: !3, line: 1257, type: !900)
!5285 = !DILocation(line: 1257, column: 18, scope: !5283)
!5286 = !DILocalVariable(name: "mode", arg: 2, scope: !5283, file: !3, line: 1257, type: !5)
!5287 = !DILocation(line: 1257, column: 40, scope: !5283)
!5288 = !DILocation(line: 1259, column: 8, scope: !5289)
!5289 = distinct !DILexicalBlock(scope: !5283, file: !3, line: 1259, column: 7)
!5290 = !DILocation(line: 1259, column: 7, scope: !5283)
!5291 = !DILocation(line: 1260, column: 5, scope: !5289)
!5292 = !DILocation(line: 1262, column: 7, scope: !5293)
!5293 = distinct !DILexicalBlock(scope: !5283, file: !3, line: 1262, column: 7)
!5294 = !DILocation(line: 1262, column: 12, scope: !5293)
!5295 = !DILocation(line: 1262, column: 24, scope: !5293)
!5296 = !DILocation(line: 1262, column: 27, scope: !5293)
!5297 = !DILocation(line: 1262, column: 44, scope: !5293)
!5298 = !DILocation(line: 1262, column: 41, scope: !5293)
!5299 = !DILocation(line: 1262, column: 7, scope: !5283)
!5300 = !DILocation(line: 1263, column: 5, scope: !5293)
!5301 = !DILocation(line: 1265, column: 8, scope: !5283)
!5302 = !DILocation(line: 1265, column: 6, scope: !5283)
!5303 = !DILocation(line: 1267, column: 7, scope: !5304)
!5304 = distinct !DILexicalBlock(scope: !5283, file: !3, line: 1267, column: 7)
!5305 = !DILocation(line: 1267, column: 21, scope: !5304)
!5306 = !DILocation(line: 1267, column: 7, scope: !5283)
!5307 = !DILocation(line: 1268, column: 5, scope: !5304)
!5308 = !DILocation(line: 1270, column: 10, scope: !5283)
!5309 = !DILocation(line: 1270, column: 26, scope: !5283)
!5310 = !DILocation(line: 1270, column: 23, scope: !5283)
!5311 = !DILocation(line: 1270, column: 3, scope: !5283)
!5312 = !DILocation(line: 1271, column: 1, scope: !5283)
!5313 = distinct !DISubprogram(name: "memory_operand", scope: !3, file: !3, line: 1299, type: !4753, scopeLine: 1300, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!5314 = !DILocalVariable(name: "op", arg: 1, scope: !5313, file: !3, line: 1299, type: !900)
!5315 = !DILocation(line: 1299, column: 21, scope: !5313)
!5316 = !DILocalVariable(name: "mode", arg: 2, scope: !5313, file: !3, line: 1299, type: !5)
!5317 = !DILocation(line: 1299, column: 43, scope: !5313)
!5318 = !DILocalVariable(name: "inner", scope: !5313, file: !3, line: 1301, type: !900)
!5319 = !DILocation(line: 1301, column: 7, scope: !5313)
!5320 = !DILocation(line: 1303, column: 9, scope: !5321)
!5321 = distinct !DILexicalBlock(scope: !5313, file: !3, line: 1303, column: 7)
!5322 = !DILocation(line: 1303, column: 7, scope: !5313)
!5323 = !DILocation(line: 1306, column: 12, scope: !5321)
!5324 = !DILocation(line: 1306, column: 23, scope: !5321)
!5325 = !DILocation(line: 1306, column: 43, scope: !5321)
!5326 = !DILocation(line: 1306, column: 47, scope: !5321)
!5327 = !DILocation(line: 1306, column: 26, scope: !5321)
!5328 = !DILocation(line: 0, scope: !5321)
!5329 = !DILocation(line: 1306, column: 5, scope: !5321)
!5330 = !DILocation(line: 1308, column: 7, scope: !5331)
!5331 = distinct !DILexicalBlock(scope: !5313, file: !3, line: 1308, column: 7)
!5332 = !DILocation(line: 1308, column: 12, scope: !5331)
!5333 = !DILocation(line: 1308, column: 24, scope: !5331)
!5334 = !DILocation(line: 1308, column: 27, scope: !5331)
!5335 = !DILocation(line: 1308, column: 44, scope: !5331)
!5336 = !DILocation(line: 1308, column: 41, scope: !5331)
!5337 = !DILocation(line: 1308, column: 7, scope: !5313)
!5338 = !DILocation(line: 1309, column: 5, scope: !5331)
!5339 = !DILocation(line: 1311, column: 11, scope: !5313)
!5340 = !DILocation(line: 1311, column: 9, scope: !5313)
!5341 = !DILocation(line: 1312, column: 7, scope: !5342)
!5342 = distinct !DILexicalBlock(scope: !5313, file: !3, line: 1312, column: 7)
!5343 = !DILocation(line: 1312, column: 24, scope: !5342)
!5344 = !DILocation(line: 1312, column: 7, scope: !5313)
!5345 = !DILocation(line: 1313, column: 13, scope: !5342)
!5346 = !DILocation(line: 1313, column: 11, scope: !5342)
!5347 = !DILocation(line: 1313, column: 5, scope: !5342)
!5348 = !DILocation(line: 1315, column: 11, scope: !5313)
!5349 = !DILocation(line: 1315, column: 25, scope: !5313)
!5350 = !DILocation(line: 1315, column: 45, scope: !5313)
!5351 = !DILocation(line: 1315, column: 49, scope: !5313)
!5352 = !DILocation(line: 1315, column: 28, scope: !5313)
!5353 = !DILocation(line: 0, scope: !5313)
!5354 = !DILocation(line: 1315, column: 3, scope: !5313)
!5355 = !DILocation(line: 1316, column: 1, scope: !5313)
!5356 = distinct !DISubprogram(name: "indirect_operand", scope: !3, file: !3, line: 1322, type: !4753, scopeLine: 1323, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!5357 = !DILocalVariable(name: "op", arg: 1, scope: !5356, file: !3, line: 1322, type: !900)
!5358 = !DILocation(line: 1322, column: 23, scope: !5356)
!5359 = !DILocalVariable(name: "mode", arg: 2, scope: !5356, file: !3, line: 1322, type: !5)
!5360 = !DILocation(line: 1322, column: 45, scope: !5356)
!5361 = !DILocation(line: 1325, column: 9, scope: !5362)
!5362 = distinct !DILexicalBlock(scope: !5356, file: !3, line: 1325, column: 7)
!5363 = !DILocation(line: 1326, column: 7, scope: !5362)
!5364 = !DILocation(line: 1326, column: 10, scope: !5362)
!5365 = !DILocation(line: 1326, column: 24, scope: !5362)
!5366 = !DILocation(line: 1326, column: 34, scope: !5362)
!5367 = !DILocation(line: 1326, column: 37, scope: !5362)
!5368 = !DILocation(line: 1325, column: 7, scope: !5356)
!5369 = !DILocalVariable(name: "offset", scope: !5370, file: !3, line: 1328, type: !924)
!5370 = distinct !DILexicalBlock(scope: !5362, file: !3, line: 1327, column: 5)
!5371 = !DILocation(line: 1328, column: 11, scope: !5370)
!5372 = !DILocation(line: 1328, column: 20, scope: !5370)
!5373 = !DILocalVariable(name: "inner", scope: !5370, file: !3, line: 1329, type: !900)
!5374 = !DILocation(line: 1329, column: 11, scope: !5370)
!5375 = !DILocation(line: 1329, column: 19, scope: !5370)
!5376 = !DILocation(line: 1331, column: 11, scope: !5377)
!5377 = distinct !DILexicalBlock(scope: !5370, file: !3, line: 1331, column: 11)
!5378 = !DILocation(line: 1331, column: 16, scope: !5377)
!5379 = !DILocation(line: 1331, column: 28, scope: !5377)
!5380 = !DILocation(line: 1331, column: 31, scope: !5377)
!5381 = !DILocation(line: 1331, column: 48, scope: !5377)
!5382 = !DILocation(line: 1331, column: 45, scope: !5377)
!5383 = !DILocation(line: 1331, column: 11, scope: !5370)
!5384 = !DILocation(line: 1332, column: 2, scope: !5377)
!5385 = !DILocation(line: 1339, column: 16, scope: !5370)
!5386 = !DILocation(line: 1339, column: 23, scope: !5370)
!5387 = !DILocation(line: 1339, column: 28, scope: !5370)
!5388 = !DILocation(line: 1339, column: 48, scope: !5370)
!5389 = !DILocation(line: 1339, column: 31, scope: !5370)
!5390 = !DILocation(line: 1340, column: 8, scope: !5370)
!5391 = !DILocation(line: 1340, column: 12, scope: !5370)
!5392 = !DILocation(line: 1340, column: 39, scope: !5370)
!5393 = !DILocation(line: 1341, column: 5, scope: !5370)
!5394 = !DILocation(line: 1341, column: 8, scope: !5370)
!5395 = !DILocation(line: 1342, column: 5, scope: !5370)
!5396 = !DILocation(line: 1342, column: 8, scope: !5370)
!5397 = !DILocation(line: 1342, column: 47, scope: !5370)
!5398 = !DILocation(line: 1342, column: 46, scope: !5370)
!5399 = !DILocation(line: 1342, column: 43, scope: !5370)
!5400 = !DILocation(line: 1343, column: 5, scope: !5370)
!5401 = !DILocation(line: 1343, column: 25, scope: !5370)
!5402 = !DILocation(line: 1343, column: 8, scope: !5370)
!5403 = !DILocation(line: 0, scope: !5370)
!5404 = !DILocation(line: 1339, column: 7, scope: !5370)
!5405 = !DILocation(line: 1346, column: 11, scope: !5356)
!5406 = !DILocation(line: 1347, column: 4, scope: !5356)
!5407 = !DILocation(line: 1347, column: 23, scope: !5356)
!5408 = !DILocation(line: 1347, column: 27, scope: !5356)
!5409 = !DILocation(line: 1347, column: 7, scope: !5356)
!5410 = !DILocation(line: 1348, column: 4, scope: !5356)
!5411 = !DILocation(line: 1348, column: 24, scope: !5356)
!5412 = !DILocation(line: 1348, column: 7, scope: !5356)
!5413 = !DILocation(line: 0, scope: !5356)
!5414 = !DILocation(line: 1346, column: 3, scope: !5356)
!5415 = !DILocation(line: 1349, column: 1, scope: !5356)
!5416 = distinct !DISubprogram(name: "ordered_comparison_operator", scope: !3, file: !3, line: 1355, type: !4753, scopeLine: 1356, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!5417 = !DILocalVariable(name: "op", arg: 1, scope: !5416, file: !3, line: 1355, type: !900)
!5418 = !DILocation(line: 1355, column: 34, scope: !5416)
!5419 = !DILocalVariable(name: "mode", arg: 2, scope: !5416, file: !3, line: 1355, type: !5)
!5420 = !DILocation(line: 1355, column: 56, scope: !5416)
!5421 = !DILocation(line: 1357, column: 7, scope: !5422)
!5422 = distinct !DILexicalBlock(scope: !5416, file: !3, line: 1357, column: 7)
!5423 = !DILocation(line: 1357, column: 12, scope: !5422)
!5424 = !DILocation(line: 1357, column: 24, scope: !5422)
!5425 = !DILocation(line: 1357, column: 27, scope: !5422)
!5426 = !DILocation(line: 1357, column: 44, scope: !5422)
!5427 = !DILocation(line: 1357, column: 41, scope: !5422)
!5428 = !DILocation(line: 1357, column: 7, scope: !5416)
!5429 = !DILocation(line: 1358, column: 5, scope: !5422)
!5430 = !DILocation(line: 1359, column: 11, scope: !5416)
!5431 = !DILocation(line: 1359, column: 3, scope: !5416)
!5432 = !DILocation(line: 1371, column: 7, scope: !5433)
!5433 = distinct !DILexicalBlock(scope: !5416, file: !3, line: 1360, column: 5)
!5434 = !DILocation(line: 1373, column: 7, scope: !5433)
!5435 = !DILocation(line: 1375, column: 1, scope: !5416)
!5436 = distinct !DISubprogram(name: "comparison_operator", scope: !3, file: !3, line: 1381, type: !4753, scopeLine: 1382, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!5437 = !DILocalVariable(name: "op", arg: 1, scope: !5436, file: !3, line: 1381, type: !900)
!5438 = !DILocation(line: 1381, column: 26, scope: !5436)
!5439 = !DILocalVariable(name: "mode", arg: 2, scope: !5436, file: !3, line: 1381, type: !5)
!5440 = !DILocation(line: 1381, column: 48, scope: !5436)
!5441 = !DILocation(line: 1383, column: 12, scope: !5436)
!5442 = !DILocation(line: 1383, column: 17, scope: !5436)
!5443 = !DILocation(line: 1383, column: 29, scope: !5436)
!5444 = !DILocation(line: 1383, column: 32, scope: !5436)
!5445 = !DILocation(line: 1383, column: 49, scope: !5436)
!5446 = !DILocation(line: 1383, column: 46, scope: !5436)
!5447 = !DILocation(line: 1384, column: 4, scope: !5436)
!5448 = !DILocation(line: 1384, column: 7, scope: !5436)
!5449 = !DILocation(line: 0, scope: !5436)
!5450 = !DILocation(line: 1383, column: 3, scope: !5436)
!5451 = distinct !DISubprogram(name: "extract_asm_operands", scope: !3, file: !3, line: 1390, type: !5452, scopeLine: 1391, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!5452 = !DISubroutineType(types: !5453)
!5453 = !{!900, !900}
!5454 = !DILocalVariable(name: "body", arg: 1, scope: !5451, file: !3, line: 1390, type: !900)
!5455 = !DILocation(line: 1390, column: 27, scope: !5451)
!5456 = !DILocalVariable(name: "tmp", scope: !5451, file: !3, line: 1392, type: !900)
!5457 = !DILocation(line: 1392, column: 7, scope: !5451)
!5458 = !DILocation(line: 1393, column: 11, scope: !5451)
!5459 = !DILocation(line: 1393, column: 3, scope: !5451)
!5460 = !DILocation(line: 1396, column: 14, scope: !5461)
!5461 = distinct !DILexicalBlock(scope: !5451, file: !3, line: 1394, column: 5)
!5462 = !DILocation(line: 1396, column: 7, scope: !5461)
!5463 = !DILocation(line: 1400, column: 13, scope: !5461)
!5464 = !DILocation(line: 1400, column: 11, scope: !5461)
!5465 = !DILocation(line: 1401, column: 11, scope: !5466)
!5466 = distinct !DILexicalBlock(scope: !5461, file: !3, line: 1401, column: 11)
!5467 = !DILocation(line: 1401, column: 26, scope: !5466)
!5468 = !DILocation(line: 1401, column: 11, scope: !5461)
!5469 = !DILocation(line: 1402, column: 9, scope: !5466)
!5470 = !DILocation(line: 1402, column: 2, scope: !5466)
!5471 = !DILocation(line: 1403, column: 7, scope: !5461)
!5472 = !DILocation(line: 1406, column: 13, scope: !5461)
!5473 = !DILocation(line: 1406, column: 11, scope: !5461)
!5474 = !DILocation(line: 1407, column: 11, scope: !5475)
!5475 = distinct !DILexicalBlock(scope: !5461, file: !3, line: 1407, column: 11)
!5476 = !DILocation(line: 1407, column: 26, scope: !5475)
!5477 = !DILocation(line: 1407, column: 11, scope: !5461)
!5478 = !DILocation(line: 1408, column: 9, scope: !5475)
!5479 = !DILocation(line: 1408, column: 2, scope: !5475)
!5480 = !DILocation(line: 1409, column: 11, scope: !5481)
!5481 = distinct !DILexicalBlock(scope: !5461, file: !3, line: 1409, column: 11)
!5482 = !DILocation(line: 1409, column: 26, scope: !5481)
!5483 = !DILocation(line: 1409, column: 11, scope: !5461)
!5484 = !DILocation(line: 1411, column: 10, scope: !5485)
!5485 = distinct !DILexicalBlock(scope: !5481, file: !3, line: 1410, column: 2)
!5486 = !DILocation(line: 1411, column: 8, scope: !5485)
!5487 = !DILocation(line: 1412, column: 8, scope: !5488)
!5488 = distinct !DILexicalBlock(scope: !5485, file: !3, line: 1412, column: 8)
!5489 = !DILocation(line: 1412, column: 23, scope: !5488)
!5490 = !DILocation(line: 1412, column: 8, scope: !5485)
!5491 = !DILocation(line: 1413, column: 13, scope: !5488)
!5492 = !DILocation(line: 1413, column: 6, scope: !5488)
!5493 = !DILocation(line: 1414, column: 2, scope: !5485)
!5494 = !DILocation(line: 1415, column: 7, scope: !5461)
!5495 = !DILocation(line: 1418, column: 7, scope: !5461)
!5496 = !DILocation(line: 1420, column: 3, scope: !5451)
!5497 = !DILocation(line: 1421, column: 1, scope: !5451)
!5498 = distinct !DISubprogram(name: "offsettable_nonstrict_memref_p", scope: !3, file: !3, line: 1890, type: !2138, scopeLine: 1891, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!5499 = !DILocalVariable(name: "op", arg: 1, scope: !5498, file: !3, line: 1890, type: !900)
!5500 = !DILocation(line: 1890, column: 37, scope: !5498)
!5501 = !DILocation(line: 1892, column: 12, scope: !5498)
!5502 = !DILocation(line: 1893, column: 4, scope: !5498)
!5503 = !DILocation(line: 1893, column: 44, scope: !5498)
!5504 = !DILocation(line: 1893, column: 59, scope: !5498)
!5505 = !DILocation(line: 1894, column: 13, scope: !5498)
!5506 = !DILocation(line: 1893, column: 7, scope: !5498)
!5507 = !DILocation(line: 0, scope: !5498)
!5508 = !DILocation(line: 1892, column: 3, scope: !5498)
!5509 = distinct !DISubprogram(name: "insn_constraint_len", scope: !5510, file: !5510, line: 177, type: !5511, scopeLine: 178, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!5510 = !DIFile(filename: "./tm-preds.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!5511 = !DISubroutineType(types: !5512)
!5512 = !{!1413, !929, !927}
!5513 = !DILocalVariable(name: "fc", arg: 1, scope: !5509, file: !5510, line: 177, type: !929)
!5514 = !DILocation(line: 177, column: 27, scope: !5509)
!5515 = !DILocalVariable(name: "str", arg: 2, scope: !5509, file: !5510, line: 177, type: !927)
!5516 = !DILocation(line: 177, column: 43, scope: !5509)
!5517 = !DILocation(line: 179, column: 11, scope: !5509)
!5518 = !DILocation(line: 179, column: 3, scope: !5509)
!5519 = !DILocation(line: 181, column: 15, scope: !5520)
!5520 = distinct !DILexicalBlock(scope: !5509, file: !5510, line: 180, column: 5)
!5521 = !DILocation(line: 182, column: 14, scope: !5520)
!5522 = !DILocation(line: 184, column: 3, scope: !5509)
!5523 = !DILocation(line: 185, column: 1, scope: !5509)
!5524 = distinct !DISubprogram(name: "find_constant_term_loc", scope: !3, file: !3, line: 1826, type: !5525, scopeLine: 1827, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!5525 = !DISubroutineType(types: !5526)
!5526 = !{!899, !899}
!5527 = !DILocalVariable(name: "p", arg: 1, scope: !5524, file: !3, line: 1826, type: !899)
!5528 = !DILocation(line: 1826, column: 30, scope: !5524)
!5529 = !DILocalVariable(name: "tem", scope: !5524, file: !3, line: 1828, type: !899)
!5530 = !DILocation(line: 1828, column: 8, scope: !5524)
!5531 = !DILocalVariable(name: "code", scope: !5524, file: !3, line: 1829, type: !377)
!5532 = !DILocation(line: 1829, column: 17, scope: !5524)
!5533 = !DILocation(line: 1829, column: 24, scope: !5524)
!5534 = !DILocation(line: 1833, column: 7, scope: !5535)
!5535 = distinct !DILexicalBlock(scope: !5524, file: !3, line: 1833, column: 7)
!5536 = !DILocation(line: 1833, column: 12, scope: !5535)
!5537 = !DILocation(line: 1833, column: 25, scope: !5535)
!5538 = !DILocation(line: 1833, column: 28, scope: !5535)
!5539 = !DILocation(line: 1833, column: 33, scope: !5535)
!5540 = !DILocation(line: 1833, column: 47, scope: !5535)
!5541 = !DILocation(line: 1833, column: 50, scope: !5535)
!5542 = !DILocation(line: 1833, column: 55, scope: !5535)
!5543 = !DILocation(line: 1834, column: 7, scope: !5535)
!5544 = !DILocation(line: 1834, column: 10, scope: !5535)
!5545 = !DILocation(line: 1834, column: 15, scope: !5535)
!5546 = !DILocation(line: 1833, column: 7, scope: !5524)
!5547 = !DILocation(line: 1835, column: 12, scope: !5535)
!5548 = !DILocation(line: 1835, column: 5, scope: !5535)
!5549 = !DILocation(line: 1839, column: 7, scope: !5550)
!5550 = distinct !DILexicalBlock(scope: !5524, file: !3, line: 1839, column: 7)
!5551 = !DILocation(line: 1839, column: 21, scope: !5550)
!5552 = !DILocation(line: 1839, column: 7, scope: !5524)
!5553 = !DILocation(line: 1840, column: 5, scope: !5550)
!5554 = !DILocation(line: 1844, column: 7, scope: !5555)
!5555 = distinct !DILexicalBlock(scope: !5524, file: !3, line: 1844, column: 7)
!5556 = !DILocation(line: 1844, column: 20, scope: !5555)
!5557 = !DILocation(line: 1844, column: 23, scope: !5555)
!5558 = !DILocation(line: 1845, column: 7, scope: !5555)
!5559 = !DILocation(line: 1845, column: 10, scope: !5555)
!5560 = !DILocation(line: 1845, column: 23, scope: !5555)
!5561 = !DILocation(line: 1845, column: 26, scope: !5555)
!5562 = !DILocation(line: 1844, column: 7, scope: !5524)
!5563 = !DILocation(line: 1846, column: 12, scope: !5555)
!5564 = !DILocation(line: 1846, column: 5, scope: !5555)
!5565 = !DILocation(line: 1850, column: 7, scope: !5566)
!5566 = distinct !DILexicalBlock(scope: !5524, file: !3, line: 1850, column: 7)
!5567 = !DILocation(line: 1850, column: 20, scope: !5566)
!5568 = !DILocation(line: 1850, column: 7, scope: !5524)
!5569 = !DILocation(line: 1852, column: 38, scope: !5570)
!5570 = distinct !DILexicalBlock(scope: !5566, file: !3, line: 1851, column: 5)
!5571 = !DILocation(line: 1852, column: 13, scope: !5570)
!5572 = !DILocation(line: 1852, column: 11, scope: !5570)
!5573 = !DILocation(line: 1853, column: 11, scope: !5574)
!5574 = distinct !DILexicalBlock(scope: !5570, file: !3, line: 1853, column: 11)
!5575 = !DILocation(line: 1853, column: 15, scope: !5574)
!5576 = !DILocation(line: 1853, column: 11, scope: !5570)
!5577 = !DILocation(line: 1854, column: 9, scope: !5574)
!5578 = !DILocation(line: 1854, column: 2, scope: !5574)
!5579 = !DILocation(line: 1855, column: 5, scope: !5570)
!5580 = !DILocation(line: 1857, column: 7, scope: !5581)
!5581 = distinct !DILexicalBlock(scope: !5524, file: !3, line: 1857, column: 7)
!5582 = !DILocation(line: 1857, column: 20, scope: !5581)
!5583 = !DILocation(line: 1857, column: 7, scope: !5524)
!5584 = !DILocation(line: 1859, column: 38, scope: !5585)
!5585 = distinct !DILexicalBlock(scope: !5581, file: !3, line: 1858, column: 5)
!5586 = !DILocation(line: 1859, column: 13, scope: !5585)
!5587 = !DILocation(line: 1859, column: 11, scope: !5585)
!5588 = !DILocation(line: 1860, column: 11, scope: !5589)
!5589 = distinct !DILexicalBlock(scope: !5585, file: !3, line: 1860, column: 11)
!5590 = !DILocation(line: 1860, column: 15, scope: !5589)
!5591 = !DILocation(line: 1860, column: 11, scope: !5585)
!5592 = !DILocation(line: 1861, column: 9, scope: !5589)
!5593 = !DILocation(line: 1861, column: 2, scope: !5589)
!5594 = !DILocation(line: 1862, column: 5, scope: !5585)
!5595 = !DILocation(line: 1864, column: 3, scope: !5524)
!5596 = !DILocation(line: 1865, column: 1, scope: !5524)
!5597 = distinct !DISubprogram(name: "offsettable_memref_p", scope: !3, file: !3, line: 1879, type: !2138, scopeLine: 1880, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!5598 = !DILocalVariable(name: "op", arg: 1, scope: !5597, file: !3, line: 1879, type: !900)
!5599 = !DILocation(line: 1879, column: 27, scope: !5597)
!5600 = !DILocation(line: 1881, column: 12, scope: !5597)
!5601 = !DILocation(line: 1882, column: 4, scope: !5597)
!5602 = !DILocation(line: 1882, column: 44, scope: !5597)
!5603 = !DILocation(line: 1882, column: 59, scope: !5597)
!5604 = !DILocation(line: 1883, column: 13, scope: !5597)
!5605 = !DILocation(line: 1882, column: 7, scope: !5597)
!5606 = !DILocation(line: 0, scope: !5597)
!5607 = !DILocation(line: 1881, column: 3, scope: !5597)
!5608 = distinct !DISubprogram(name: "offsettable_address_addr_space_p", scope: !3, file: !3, line: 1908, type: !5609, scopeLine: 1910, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!5609 = !DISubroutineType(types: !5610)
!5610 = !{!924, !924, !5, !900, !4152}
!5611 = !DILocalVariable(name: "strictp", arg: 1, scope: !5608, file: !3, line: 1908, type: !924)
!5612 = !DILocation(line: 1908, column: 39, scope: !5608)
!5613 = !DILocalVariable(name: "mode", arg: 2, scope: !5608, file: !3, line: 1908, type: !5)
!5614 = !DILocation(line: 1908, column: 66, scope: !5608)
!5615 = !DILocalVariable(name: "y", arg: 3, scope: !5608, file: !3, line: 1908, type: !900)
!5616 = !DILocation(line: 1908, column: 76, scope: !5608)
!5617 = !DILocalVariable(name: "as", arg: 4, scope: !5608, file: !3, line: 1909, type: !4152)
!5618 = !DILocation(line: 1909, column: 20, scope: !5608)
!5619 = !DILocalVariable(name: "ycode", scope: !5608, file: !3, line: 1911, type: !377)
!5620 = !DILocation(line: 1911, column: 17, scope: !5608)
!5621 = !DILocation(line: 1911, column: 25, scope: !5608)
!5622 = !DILocalVariable(name: "z", scope: !5608, file: !3, line: 1912, type: !900)
!5623 = !DILocation(line: 1912, column: 7, scope: !5608)
!5624 = !DILocalVariable(name: "y1", scope: !5608, file: !3, line: 1913, type: !900)
!5625 = !DILocation(line: 1913, column: 7, scope: !5608)
!5626 = !DILocation(line: 1913, column: 12, scope: !5608)
!5627 = !DILocalVariable(name: "y2", scope: !5608, file: !3, line: 1914, type: !899)
!5628 = !DILocation(line: 1914, column: 8, scope: !5608)
!5629 = !DILocalVariable(name: "addressp", scope: !5608, file: !3, line: 1915, type: !5630)
!5630 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4150, size: 64)
!5631 = !DILocation(line: 1915, column: 9, scope: !5608)
!5632 = !DILocation(line: 1916, column: 6, scope: !5608)
!5633 = !DILocalVariable(name: "mode_sz", scope: !5608, file: !3, line: 1918, type: !7)
!5634 = !DILocation(line: 1918, column: 16, scope: !5608)
!5635 = !DILocation(line: 1918, column: 26, scope: !5608)
!5636 = !DILocation(line: 1920, column: 7, scope: !5637)
!5637 = distinct !DILexicalBlock(scope: !5608, file: !3, line: 1920, column: 7)
!5638 = !DILocation(line: 1920, column: 7, scope: !5608)
!5639 = !DILocation(line: 1921, column: 5, scope: !5637)
!5640 = !DILocation(line: 1926, column: 33, scope: !5641)
!5641 = distinct !DILexicalBlock(scope: !5608, file: !3, line: 1926, column: 7)
!5642 = !DILocation(line: 1926, column: 7, scope: !5641)
!5643 = !DILocation(line: 1926, column: 7, scope: !5608)
!5644 = !DILocation(line: 1927, column: 5, scope: !5641)
!5645 = !DILocation(line: 1933, column: 7, scope: !5646)
!5646 = distinct !DILexicalBlock(scope: !5608, file: !3, line: 1933, column: 7)
!5647 = !DILocation(line: 1933, column: 15, scope: !5646)
!5648 = !DILocation(line: 1933, column: 7, scope: !5608)
!5649 = !DILocation(line: 1934, column: 15, scope: !5646)
!5650 = !DILocation(line: 1934, column: 33, scope: !5646)
!5651 = !DILocation(line: 1934, column: 13, scope: !5646)
!5652 = !DILocation(line: 1934, column: 5, scope: !5646)
!5653 = !DILocation(line: 1939, column: 8, scope: !5654)
!5654 = distinct !DILexicalBlock(scope: !5608, file: !3, line: 1939, column: 7)
!5655 = !DILocation(line: 1939, column: 14, scope: !5654)
!5656 = !DILocation(line: 1939, column: 23, scope: !5654)
!5657 = !DILocation(line: 1939, column: 32, scope: !5654)
!5658 = !DILocation(line: 1939, column: 30, scope: !5654)
!5659 = !DILocation(line: 1939, column: 7, scope: !5608)
!5660 = !DILocalVariable(name: "good", scope: !5661, file: !3, line: 1941, type: !924)
!5661 = distinct !DILexicalBlock(scope: !5654, file: !3, line: 1940, column: 5)
!5662 = !DILocation(line: 1941, column: 11, scope: !5661)
!5663 = !DILocation(line: 1943, column: 13, scope: !5661)
!5664 = !DILocation(line: 1943, column: 12, scope: !5661)
!5665 = !DILocation(line: 1943, column: 10, scope: !5661)
!5666 = !DILocation(line: 1944, column: 29, scope: !5661)
!5667 = !DILocation(line: 1944, column: 28, scope: !5661)
!5668 = !DILocation(line: 1944, column: 33, scope: !5661)
!5669 = !DILocation(line: 1944, column: 41, scope: !5661)
!5670 = !DILocation(line: 1944, column: 13, scope: !5661)
!5671 = !DILocation(line: 1944, column: 8, scope: !5661)
!5672 = !DILocation(line: 1944, column: 11, scope: !5661)
!5673 = !DILocation(line: 1947, column: 16, scope: !5661)
!5674 = !DILocation(line: 1947, column: 35, scope: !5661)
!5675 = !DILocation(line: 1947, column: 38, scope: !5661)
!5676 = !DILocation(line: 1947, column: 14, scope: !5661)
!5677 = !DILocation(line: 1947, column: 12, scope: !5661)
!5678 = !DILocation(line: 1950, column: 13, scope: !5661)
!5679 = !DILocation(line: 1950, column: 8, scope: !5661)
!5680 = !DILocation(line: 1950, column: 11, scope: !5661)
!5681 = !DILocation(line: 1951, column: 14, scope: !5661)
!5682 = !DILocation(line: 1951, column: 7, scope: !5661)
!5683 = !DILocation(line: 1954, column: 7, scope: !5684)
!5684 = distinct !DILexicalBlock(scope: !5608, file: !3, line: 1954, column: 7)
!5685 = !DILocation(line: 1954, column: 29, scope: !5684)
!5686 = !DILocation(line: 1954, column: 7, scope: !5608)
!5687 = !DILocation(line: 1955, column: 5, scope: !5684)
!5688 = !DILocation(line: 1962, column: 7, scope: !5689)
!5689 = distinct !DILexicalBlock(scope: !5608, file: !3, line: 1962, column: 7)
!5690 = !DILocation(line: 1962, column: 20, scope: !5689)
!5691 = !DILocation(line: 1963, column: 7, scope: !5689)
!5692 = !DILocation(line: 1963, column: 10, scope: !5689)
!5693 = !DILocation(line: 1963, column: 15, scope: !5689)
!5694 = !DILocation(line: 1964, column: 7, scope: !5689)
!5695 = !DILocation(line: 1964, column: 10, scope: !5689)
!5696 = !DILocation(line: 1964, column: 21, scope: !5689)
!5697 = !DILocation(line: 1964, column: 47, scope: !5689)
!5698 = !DILocation(line: 1964, column: 18, scope: !5689)
!5699 = !DILocation(line: 1962, column: 7, scope: !5608)
!5700 = !DILocation(line: 1965, column: 9, scope: !5689)
!5701 = !DILocation(line: 1965, column: 7, scope: !5689)
!5702 = !DILocation(line: 1965, column: 5, scope: !5689)
!5703 = !DILocation(line: 1968, column: 24, scope: !5689)
!5704 = !DILocation(line: 1968, column: 27, scope: !5689)
!5705 = !DILocation(line: 1968, column: 35, scope: !5689)
!5706 = !DILocation(line: 1968, column: 9, scope: !5689)
!5707 = !DILocation(line: 1968, column: 7, scope: !5689)
!5708 = !DILocation(line: 1972, column: 12, scope: !5608)
!5709 = !DILocation(line: 1972, column: 31, scope: !5608)
!5710 = !DILocation(line: 1972, column: 34, scope: !5608)
!5711 = !DILocation(line: 1972, column: 10, scope: !5608)
!5712 = !DILocation(line: 1972, column: 3, scope: !5608)
!5713 = !DILocation(line: 1973, column: 1, scope: !5608)
!5714 = distinct !DISubprogram(name: "mode_dependent_address_p", scope: !3, file: !3, line: 1982, type: !2138, scopeLine: 1983, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!5715 = !DILocalVariable(name: "addr", arg: 1, scope: !5714, file: !3, line: 1982, type: !900)
!5716 = !DILocation(line: 1982, column: 31, scope: !5714)
!5717 = !DILocation(line: 1987, column: 7, scope: !5718)
!5718 = distinct !DILexicalBlock(scope: !5714, file: !3, line: 1987, column: 7)
!5719 = !DILocation(line: 1987, column: 23, scope: !5718)
!5720 = !DILocation(line: 1988, column: 7, scope: !5718)
!5721 = !DILocation(line: 1988, column: 10, scope: !5718)
!5722 = !DILocation(line: 1988, column: 26, scope: !5718)
!5723 = !DILocation(line: 1989, column: 7, scope: !5718)
!5724 = !DILocation(line: 1989, column: 10, scope: !5718)
!5725 = !DILocation(line: 1989, column: 26, scope: !5718)
!5726 = !DILocation(line: 1990, column: 7, scope: !5718)
!5727 = !DILocation(line: 1990, column: 10, scope: !5718)
!5728 = !DILocation(line: 1990, column: 26, scope: !5718)
!5729 = !DILocation(line: 1987, column: 7, scope: !5714)
!5730 = !DILocation(line: 1991, column: 5, scope: !5718)
!5731 = !DILocation(line: 1994, column: 3, scope: !5714)
!5732 = !DILabel(scope: !5714, name: "win", file: !3, line: 1996)
!5733 = !DILocation(line: 1996, column: 2, scope: !5714)
!5734 = !DILocation(line: 1997, column: 3, scope: !5714)
!5735 = !DILocation(line: 1998, column: 1, scope: !5714)
!5736 = distinct !DISubprogram(name: "extract_insn_cached", scope: !3, file: !3, line: 2005, type: !2217, scopeLine: 2006, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!5737 = !DILocalVariable(name: "insn", arg: 1, scope: !5736, file: !3, line: 2005, type: !900)
!5738 = !DILocation(line: 2005, column: 26, scope: !5736)
!5739 = !DILocation(line: 2007, column: 18, scope: !5740)
!5740 = distinct !DILexicalBlock(scope: !5736, file: !3, line: 2007, column: 7)
!5741 = !DILocation(line: 2007, column: 26, scope: !5740)
!5742 = !DILocation(line: 2007, column: 23, scope: !5740)
!5743 = !DILocation(line: 2007, column: 31, scope: !5740)
!5744 = !DILocation(line: 2007, column: 34, scope: !5740)
!5745 = !DILocation(line: 2007, column: 51, scope: !5740)
!5746 = !DILocation(line: 2007, column: 7, scope: !5736)
!5747 = !DILocation(line: 2008, column: 5, scope: !5740)
!5748 = !DILocation(line: 2009, column: 17, scope: !5736)
!5749 = !DILocation(line: 2009, column: 3, scope: !5736)
!5750 = !DILocation(line: 2010, column: 21, scope: !5736)
!5751 = !DILocation(line: 2010, column: 19, scope: !5736)
!5752 = !DILocation(line: 2011, column: 1, scope: !5736)
!5753 = distinct !DISubprogram(name: "extract_constrain_insn_cached", scope: !3, file: !3, line: 2016, type: !2217, scopeLine: 2017, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!5754 = !DILocalVariable(name: "insn", arg: 1, scope: !5753, file: !3, line: 2016, type: !900)
!5755 = !DILocation(line: 2016, column: 36, scope: !5753)
!5756 = !DILocation(line: 2018, column: 24, scope: !5753)
!5757 = !DILocation(line: 2018, column: 3, scope: !5753)
!5758 = !DILocation(line: 2019, column: 7, scope: !5759)
!5759 = distinct !DILexicalBlock(scope: !5753, file: !3, line: 2019, column: 7)
!5760 = !DILocation(line: 2019, column: 25, scope: !5759)
!5761 = !DILocation(line: 2020, column: 7, scope: !5759)
!5762 = !DILocation(line: 2020, column: 31, scope: !5759)
!5763 = !DILocation(line: 2020, column: 11, scope: !5759)
!5764 = !DILocation(line: 2019, column: 7, scope: !5753)
!5765 = !DILocation(line: 2021, column: 5, scope: !5759)
!5766 = !DILocation(line: 2022, column: 1, scope: !5753)
!5767 = distinct !DISubprogram(name: "constrain_operands_cached", scope: !3, file: !3, line: 2026, type: !2429, scopeLine: 2027, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!5768 = !DILocalVariable(name: "strict", arg: 1, scope: !5767, file: !3, line: 2026, type: !924)
!5769 = !DILocation(line: 2026, column: 32, scope: !5767)
!5770 = !DILocation(line: 2028, column: 7, scope: !5771)
!5771 = distinct !DILexicalBlock(scope: !5767, file: !3, line: 2028, column: 7)
!5772 = !DILocation(line: 2028, column: 25, scope: !5771)
!5773 = !DILocation(line: 2028, column: 7, scope: !5767)
!5774 = !DILocation(line: 2029, column: 32, scope: !5771)
!5775 = !DILocation(line: 2029, column: 12, scope: !5771)
!5776 = !DILocation(line: 2029, column: 5, scope: !5771)
!5777 = !DILocation(line: 2031, column: 5, scope: !5771)
!5778 = !DILocation(line: 2032, column: 1, scope: !5767)
!5779 = distinct !DISubprogram(name: "recog_memoized", scope: !694, file: !694, line: 150, type: !2138, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!5780 = !DILocalVariable(name: "insn", arg: 1, scope: !5779, file: !694, line: 150, type: !900)
!5781 = !DILocation(line: 150, column: 21, scope: !5779)
!5782 = !DILocation(line: 152, column: 7, scope: !5783)
!5783 = distinct !DILexicalBlock(scope: !5779, file: !694, line: 152, column: 7)
!5784 = !DILocation(line: 152, column: 24, scope: !5783)
!5785 = !DILocation(line: 152, column: 7, scope: !5779)
!5786 = !DILocation(line: 153, column: 31, scope: !5783)
!5787 = !DILocation(line: 153, column: 47, scope: !5783)
!5788 = !DILocation(line: 153, column: 24, scope: !5783)
!5789 = !DILocation(line: 153, column: 5, scope: !5783)
!5790 = !DILocation(line: 153, column: 22, scope: !5783)
!5791 = !DILocation(line: 154, column: 10, scope: !5779)
!5792 = !DILocation(line: 154, column: 3, scope: !5779)
!5793 = distinct !DISubprogram(name: "get_attr_enabled", scope: !3, file: !3, line: 66, type: !4643, scopeLine: 67, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!5794 = !DILocalVariable(name: "insn", arg: 1, scope: !5793, file: !3, line: 66, type: !900)
!5795 = !DILocation(line: 66, column: 23, scope: !5793)
!5796 = !DILocation(line: 68, column: 3, scope: !5793)
!5797 = distinct !DISubprogram(name: "preprocess_constraints", scope: !3, file: !3, line: 2149, type: !2130, scopeLine: 2150, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!5798 = !DILocalVariable(name: "i", scope: !5797, file: !3, line: 2151, type: !924)
!5799 = !DILocation(line: 2151, column: 7, scope: !5797)
!5800 = !DILocation(line: 2153, column: 10, scope: !5801)
!5801 = distinct !DILexicalBlock(scope: !5797, file: !3, line: 2153, column: 3)
!5802 = !DILocation(line: 2153, column: 8, scope: !5801)
!5803 = !DILocation(line: 2153, column: 15, scope: !5804)
!5804 = distinct !DILexicalBlock(scope: !5801, file: !3, line: 2153, column: 3)
!5805 = !DILocation(line: 2153, column: 30, scope: !5804)
!5806 = !DILocation(line: 2153, column: 19, scope: !5804)
!5807 = !DILocation(line: 2153, column: 17, scope: !5804)
!5808 = !DILocation(line: 2153, column: 3, scope: !5801)
!5809 = !DILocation(line: 2154, column: 26, scope: !5804)
!5810 = !DILocation(line: 2154, column: 13, scope: !5804)
!5811 = !DILocation(line: 2154, column: 5, scope: !5804)
!5812 = !DILocation(line: 2154, column: 45, scope: !5804)
!5813 = !DILocation(line: 2154, column: 34, scope: !5804)
!5814 = !DILocation(line: 2155, column: 6, scope: !5804)
!5815 = !DILocation(line: 2153, column: 43, scope: !5804)
!5816 = !DILocation(line: 2153, column: 3, scope: !5804)
!5817 = distinct !{!5817, !5808, !5818}
!5818 = !DILocation(line: 2155, column: 44, scope: !5801)
!5819 = !DILocation(line: 2157, column: 10, scope: !5820)
!5820 = distinct !DILexicalBlock(scope: !5797, file: !3, line: 2157, column: 3)
!5821 = !DILocation(line: 2157, column: 8, scope: !5820)
!5822 = !DILocation(line: 2157, column: 15, scope: !5823)
!5823 = distinct !DILexicalBlock(scope: !5820, file: !3, line: 2157, column: 3)
!5824 = !DILocation(line: 2157, column: 30, scope: !5823)
!5825 = !DILocation(line: 2157, column: 19, scope: !5823)
!5826 = !DILocation(line: 2157, column: 17, scope: !5823)
!5827 = !DILocation(line: 2157, column: 3, scope: !5820)
!5828 = !DILocalVariable(name: "j", scope: !5829, file: !3, line: 2159, type: !924)
!5829 = distinct !DILexicalBlock(scope: !5823, file: !3, line: 2158, column: 5)
!5830 = !DILocation(line: 2159, column: 11, scope: !5829)
!5831 = !DILocalVariable(name: "op_alt", scope: !5829, file: !3, line: 2160, type: !5832)
!5832 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2083, size: 64)
!5833 = !DILocation(line: 2160, column: 35, scope: !5829)
!5834 = !DILocalVariable(name: "p", scope: !5829, file: !3, line: 2161, type: !927)
!5835 = !DILocation(line: 2161, column: 19, scope: !5829)
!5836 = !DILocation(line: 2161, column: 46, scope: !5829)
!5837 = !DILocation(line: 2161, column: 23, scope: !5829)
!5838 = !DILocation(line: 2163, column: 29, scope: !5829)
!5839 = !DILocation(line: 2163, column: 16, scope: !5829)
!5840 = !DILocation(line: 2163, column: 14, scope: !5829)
!5841 = !DILocation(line: 2165, column: 14, scope: !5842)
!5842 = distinct !DILexicalBlock(scope: !5829, file: !3, line: 2165, column: 7)
!5843 = !DILocation(line: 2165, column: 12, scope: !5842)
!5844 = !DILocation(line: 2165, column: 19, scope: !5845)
!5845 = distinct !DILexicalBlock(scope: !5842, file: !3, line: 2165, column: 7)
!5846 = !DILocation(line: 2165, column: 34, scope: !5845)
!5847 = !DILocation(line: 2165, column: 23, scope: !5845)
!5848 = !DILocation(line: 2165, column: 21, scope: !5845)
!5849 = !DILocation(line: 2165, column: 7, scope: !5842)
!5850 = !DILocation(line: 2167, column: 4, scope: !5851)
!5851 = distinct !DILexicalBlock(scope: !5845, file: !3, line: 2166, column: 2)
!5852 = !DILocation(line: 2167, column: 11, scope: !5851)
!5853 = !DILocation(line: 2167, column: 14, scope: !5851)
!5854 = !DILocation(line: 2167, column: 17, scope: !5851)
!5855 = !DILocation(line: 2168, column: 27, scope: !5851)
!5856 = !DILocation(line: 2168, column: 4, scope: !5851)
!5857 = !DILocation(line: 2168, column: 11, scope: !5851)
!5858 = !DILocation(line: 2168, column: 14, scope: !5851)
!5859 = !DILocation(line: 2168, column: 25, scope: !5851)
!5860 = !DILocation(line: 2169, column: 4, scope: !5851)
!5861 = !DILocation(line: 2169, column: 11, scope: !5851)
!5862 = !DILocation(line: 2169, column: 14, scope: !5851)
!5863 = !DILocation(line: 2169, column: 22, scope: !5851)
!5864 = !DILocation(line: 2170, column: 4, scope: !5851)
!5865 = !DILocation(line: 2170, column: 11, scope: !5851)
!5866 = !DILocation(line: 2170, column: 14, scope: !5851)
!5867 = !DILocation(line: 2170, column: 22, scope: !5851)
!5868 = !DILocation(line: 2172, column: 42, scope: !5869)
!5869 = distinct !DILexicalBlock(scope: !5851, file: !3, line: 2172, column: 8)
!5870 = !DILocation(line: 2172, column: 9, scope: !5869)
!5871 = !DILocation(line: 2172, column: 8, scope: !5851)
!5872 = !DILocation(line: 2174, column: 30, scope: !5873)
!5873 = distinct !DILexicalBlock(scope: !5869, file: !3, line: 2173, column: 6)
!5874 = !DILocation(line: 2174, column: 12, scope: !5873)
!5875 = !DILocation(line: 2174, column: 10, scope: !5873)
!5876 = !DILocation(line: 2175, column: 8, scope: !5873)
!5877 = !DILocation(line: 2178, column: 9, scope: !5878)
!5878 = distinct !DILexicalBlock(scope: !5851, file: !3, line: 2178, column: 8)
!5879 = !DILocation(line: 2178, column: 8, scope: !5878)
!5880 = !DILocation(line: 2178, column: 11, scope: !5878)
!5881 = !DILocation(line: 2178, column: 19, scope: !5878)
!5882 = !DILocation(line: 2178, column: 23, scope: !5878)
!5883 = !DILocation(line: 2178, column: 22, scope: !5878)
!5884 = !DILocation(line: 2178, column: 25, scope: !5878)
!5885 = !DILocation(line: 2178, column: 8, scope: !5851)
!5886 = !DILocation(line: 2180, column: 8, scope: !5887)
!5887 = distinct !DILexicalBlock(scope: !5878, file: !3, line: 2179, column: 6)
!5888 = !DILocation(line: 2180, column: 15, scope: !5887)
!5889 = !DILocation(line: 2180, column: 18, scope: !5887)
!5890 = !DILocation(line: 2180, column: 30, scope: !5887)
!5891 = !DILocation(line: 2181, column: 8, scope: !5887)
!5892 = !DILocation(line: 2184, column: 4, scope: !5851)
!5893 = !DILocalVariable(name: "c", scope: !5894, file: !3, line: 2186, type: !929)
!5894 = distinct !DILexicalBlock(scope: !5895, file: !3, line: 2185, column: 6)
!5895 = distinct !DILexicalBlock(scope: !5896, file: !3, line: 2184, column: 4)
!5896 = distinct !DILexicalBlock(scope: !5851, file: !3, line: 2184, column: 4)
!5897 = !DILocation(line: 2186, column: 13, scope: !5894)
!5898 = !DILocation(line: 2186, column: 18, scope: !5894)
!5899 = !DILocation(line: 2186, column: 17, scope: !5894)
!5900 = !DILocation(line: 2187, column: 12, scope: !5901)
!5901 = distinct !DILexicalBlock(scope: !5894, file: !3, line: 2187, column: 12)
!5902 = !DILocation(line: 2187, column: 14, scope: !5901)
!5903 = !DILocation(line: 2187, column: 12, scope: !5894)
!5904 = !DILocation(line: 2188, column: 3, scope: !5901)
!5905 = !DILocation(line: 2189, column: 10, scope: !5901)
!5906 = !DILocation(line: 2189, column: 9, scope: !5901)
!5907 = !DILocation(line: 2189, column: 7, scope: !5901)
!5908 = !DILocation(line: 2189, column: 5, scope: !5901)
!5909 = !DILocation(line: 2190, column: 10, scope: !5901)
!5910 = !DILocation(line: 2190, column: 12, scope: !5901)
!5911 = !DILocation(line: 2190, column: 19, scope: !5901)
!5912 = !DILocation(line: 2190, column: 22, scope: !5901)
!5913 = !DILocation(line: 2190, column: 24, scope: !5901)
!5914 = !DILocation(line: 0, scope: !5901)
!5915 = distinct !{!5915, !5904, !5916}
!5916 = !DILocation(line: 2190, column: 31, scope: !5901)
!5917 = !DILocation(line: 2191, column: 12, scope: !5918)
!5918 = distinct !DILexicalBlock(scope: !5894, file: !3, line: 2191, column: 12)
!5919 = !DILocation(line: 2191, column: 14, scope: !5918)
!5920 = !DILocation(line: 2191, column: 21, scope: !5918)
!5921 = !DILocation(line: 2191, column: 24, scope: !5918)
!5922 = !DILocation(line: 2191, column: 26, scope: !5918)
!5923 = !DILocation(line: 2191, column: 12, scope: !5894)
!5924 = !DILocation(line: 2193, column: 6, scope: !5925)
!5925 = distinct !DILexicalBlock(scope: !5918, file: !3, line: 2192, column: 3)
!5926 = !DILocation(line: 2194, column: 5, scope: !5925)
!5927 = !DILocation(line: 2197, column: 16, scope: !5894)
!5928 = !DILocation(line: 2197, column: 8, scope: !5894)
!5929 = !DILocation(line: 2205, column: 5, scope: !5930)
!5930 = distinct !DILexicalBlock(scope: !5894, file: !3, line: 2198, column: 3)
!5931 = !DILocation(line: 2208, column: 5, scope: !5930)
!5932 = !DILocation(line: 2208, column: 12, scope: !5930)
!5933 = !DILocation(line: 2208, column: 15, scope: !5930)
!5934 = !DILocation(line: 2208, column: 22, scope: !5930)
!5935 = !DILocation(line: 2209, column: 5, scope: !5930)
!5936 = !DILocation(line: 2211, column: 5, scope: !5930)
!5937 = !DILocation(line: 2211, column: 12, scope: !5930)
!5938 = !DILocation(line: 2211, column: 15, scope: !5930)
!5939 = !DILocation(line: 2211, column: 22, scope: !5930)
!5940 = !DILocation(line: 2212, column: 5, scope: !5930)
!5941 = !DILocation(line: 2214, column: 5, scope: !5930)
!5942 = !DILocation(line: 2214, column: 12, scope: !5930)
!5943 = !DILocation(line: 2214, column: 15, scope: !5930)
!5944 = !DILocation(line: 2214, column: 28, scope: !5930)
!5945 = !DILocation(line: 2215, column: 5, scope: !5930)
!5946 = !DILocalVariable(name: "end", scope: !5947, file: !3, line: 2220, type: !997)
!5947 = distinct !DILexicalBlock(scope: !5930, file: !3, line: 2219, column: 5)
!5948 = !DILocation(line: 2220, column: 13, scope: !5947)
!5949 = !DILocation(line: 2221, column: 36, scope: !5947)
!5950 = !DILocation(line: 2221, column: 27, scope: !5947)
!5951 = !DILocation(line: 2221, column: 7, scope: !5947)
!5952 = !DILocation(line: 2221, column: 14, scope: !5947)
!5953 = !DILocation(line: 2221, column: 17, scope: !5947)
!5954 = !DILocation(line: 2221, column: 25, scope: !5947)
!5955 = !DILocation(line: 2222, column: 52, scope: !5947)
!5956 = !DILocation(line: 2222, column: 20, scope: !5947)
!5957 = !DILocation(line: 2222, column: 27, scope: !5947)
!5958 = !DILocation(line: 2222, column: 30, scope: !5947)
!5959 = !DILocation(line: 2222, column: 7, scope: !5947)
!5960 = !DILocation(line: 2222, column: 39, scope: !5947)
!5961 = !DILocation(line: 2222, column: 42, scope: !5947)
!5962 = !DILocation(line: 2222, column: 50, scope: !5947)
!5963 = !DILocation(line: 2223, column: 11, scope: !5947)
!5964 = !DILocation(line: 2223, column: 9, scope: !5947)
!5965 = !DILocation(line: 2225, column: 5, scope: !5930)
!5966 = distinct !{!5966, !5967, !5968}
!5967 = !DILocation(line: 2184, column: 4, scope: !5896)
!5968 = !DILocation(line: 2282, column: 6, scope: !5896)
!5969 = !DILocation(line: 2228, column: 5, scope: !5930)
!5970 = !DILocation(line: 2228, column: 12, scope: !5930)
!5971 = !DILocation(line: 2228, column: 15, scope: !5930)
!5972 = !DILocation(line: 2228, column: 25, scope: !5930)
!5973 = !DILocation(line: 2229, column: 5, scope: !5930)
!5974 = !DILocation(line: 2231, column: 5, scope: !5930)
!5975 = !DILocation(line: 2231, column: 12, scope: !5930)
!5976 = !DILocation(line: 2231, column: 15, scope: !5930)
!5977 = !DILocation(line: 2231, column: 25, scope: !5930)
!5978 = !DILocation(line: 2232, column: 5, scope: !5930)
!5979 = !DILocation(line: 2234, column: 5, scope: !5930)
!5980 = !DILocation(line: 2234, column: 12, scope: !5930)
!5981 = !DILocation(line: 2234, column: 15, scope: !5930)
!5982 = !DILocation(line: 2234, column: 25, scope: !5930)
!5983 = !DILocation(line: 2235, column: 5, scope: !5930)
!5984 = !DILocation(line: 2237, column: 5, scope: !5930)
!5985 = !DILocation(line: 2237, column: 12, scope: !5930)
!5986 = !DILocation(line: 2237, column: 15, scope: !5930)
!5987 = !DILocation(line: 2237, column: 28, scope: !5930)
!5988 = !DILocation(line: 2238, column: 5, scope: !5930)
!5989 = !DILocation(line: 2240, column: 5, scope: !5930)
!5990 = !DILocation(line: 2240, column: 12, scope: !5930)
!5991 = !DILocation(line: 2240, column: 15, scope: !5930)
!5992 = !DILocation(line: 2240, column: 25, scope: !5930)
!5993 = !DILocation(line: 2241, column: 5, scope: !5930)
!5994 = !DILocation(line: 2243, column: 5, scope: !5930)
!5995 = !DILocation(line: 2243, column: 12, scope: !5930)
!5996 = !DILocation(line: 2243, column: 15, scope: !5930)
!5997 = !DILocation(line: 2243, column: 27, scope: !5930)
!5998 = !DILocation(line: 2244, column: 5, scope: !5930)
!5999 = !DILocation(line: 2247, column: 5, scope: !5930)
!6000 = !DILocation(line: 2247, column: 12, scope: !5930)
!6001 = !DILocation(line: 2247, column: 15, scope: !5930)
!6002 = !DILocation(line: 2247, column: 26, scope: !5930)
!6003 = !DILocation(line: 2248, column: 45, scope: !5930)
!6004 = !DILocation(line: 2248, column: 52, scope: !5930)
!6005 = !DILocation(line: 2248, column: 55, scope: !5930)
!6006 = !DILocation(line: 2248, column: 20, scope: !5930)
!6007 = !DILocation(line: 2249, column: 16, scope: !5930)
!6008 = !DILocation(line: 2248, column: 5, scope: !5930)
!6009 = !DILocation(line: 2248, column: 12, scope: !5930)
!6010 = !DILocation(line: 2248, column: 15, scope: !5930)
!6011 = !DILocation(line: 2248, column: 18, scope: !5930)
!6012 = !DILocation(line: 2250, column: 5, scope: !5930)
!6013 = !DILocation(line: 2255, column: 31, scope: !5930)
!6014 = !DILocation(line: 2255, column: 38, scope: !5930)
!6015 = !DILocation(line: 2255, column: 41, scope: !5930)
!6016 = !DILocation(line: 2255, column: 6, scope: !5930)
!6017 = !DILocation(line: 2254, column: 5, scope: !5930)
!6018 = !DILocation(line: 2254, column: 12, scope: !5930)
!6019 = !DILocation(line: 2254, column: 15, scope: !5930)
!6020 = !DILocation(line: 2254, column: 18, scope: !5930)
!6021 = !DILocation(line: 2256, column: 5, scope: !5930)
!6022 = !DILocation(line: 2277, column: 17, scope: !5930)
!6023 = !DILocation(line: 2277, column: 24, scope: !5930)
!6024 = !DILocation(line: 2277, column: 27, scope: !5930)
!6025 = !DILocation(line: 2276, column: 10, scope: !5930)
!6026 = !DILocation(line: 2278, column: 17, scope: !5930)
!6027 = !DILocation(line: 2275, column: 5, scope: !5930)
!6028 = !DILocation(line: 2275, column: 12, scope: !5930)
!6029 = !DILocation(line: 2275, column: 15, scope: !5930)
!6030 = !DILocation(line: 2276, column: 7, scope: !5930)
!6031 = !DILocation(line: 2279, column: 5, scope: !5930)
!6032 = !DILocation(line: 2281, column: 13, scope: !5894)
!6033 = !DILocation(line: 2281, column: 10, scope: !5894)
!6034 = !DILocation(line: 2184, column: 4, scope: !5895)
!6035 = !DILocation(line: 2283, column: 2, scope: !5851)
!6036 = !DILocation(line: 2165, column: 51, scope: !5845)
!6037 = !DILocation(line: 2165, column: 7, scope: !5845)
!6038 = distinct !{!6038, !5849, !6039}
!6039 = !DILocation(line: 2283, column: 2, scope: !5842)
!6040 = !DILocation(line: 2284, column: 5, scope: !5829)
!6041 = !DILocation(line: 2157, column: 43, scope: !5823)
!6042 = !DILocation(line: 2157, column: 3, scope: !5823)
!6043 = distinct !{!6043, !5827, !6044}
!6044 = !DILocation(line: 2284, column: 5, scope: !5820)
!6045 = !DILocation(line: 2285, column: 1, scope: !5797)
!6046 = distinct !DISubprogram(name: "skip_alternative", scope: !694, file: !694, line: 161, type: !6047, scopeLine: 162, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!6047 = !DISubroutineType(types: !6048)
!6048 = !{!927, !927}
!6049 = !DILocalVariable(name: "p", arg: 1, scope: !6046, file: !694, line: 161, type: !927)
!6050 = !DILocation(line: 161, column: 31, scope: !6046)
!6051 = !DILocalVariable(name: "r", scope: !6046, file: !694, line: 163, type: !927)
!6052 = !DILocation(line: 163, column: 15, scope: !6046)
!6053 = !DILocation(line: 163, column: 19, scope: !6046)
!6054 = !DILocation(line: 164, column: 3, scope: !6046)
!6055 = !DILocation(line: 164, column: 11, scope: !6046)
!6056 = !DILocation(line: 164, column: 10, scope: !6046)
!6057 = !DILocation(line: 164, column: 13, scope: !6046)
!6058 = !DILocation(line: 164, column: 21, scope: !6046)
!6059 = !DILocation(line: 164, column: 25, scope: !6046)
!6060 = !DILocation(line: 164, column: 24, scope: !6046)
!6061 = !DILocation(line: 164, column: 27, scope: !6046)
!6062 = !DILocation(line: 0, scope: !6046)
!6063 = !DILocation(line: 165, column: 6, scope: !6046)
!6064 = distinct !{!6064, !6054, !6063}
!6065 = !DILocation(line: 166, column: 8, scope: !6066)
!6066 = distinct !DILexicalBlock(scope: !6046, file: !694, line: 166, column: 7)
!6067 = !DILocation(line: 166, column: 7, scope: !6066)
!6068 = !DILocation(line: 166, column: 10, scope: !6066)
!6069 = !DILocation(line: 166, column: 7, scope: !6046)
!6070 = !DILocation(line: 167, column: 6, scope: !6066)
!6071 = !DILocation(line: 167, column: 5, scope: !6066)
!6072 = !DILocation(line: 168, column: 10, scope: !6046)
!6073 = !DILocation(line: 168, column: 3, scope: !6046)
!6074 = distinct !DISubprogram(name: "base_reg_class", scope: !6075, file: !6075, line: 25, type: !6076, scopeLine: 28, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!6075 = !DIFile(filename: "./addresses.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!6076 = !DISubroutineType(types: !6077)
!6077 = !{!628, !5, !377, !377}
!6078 = !DILocalVariable(name: "mode", arg: 1, scope: !6074, file: !6075, line: 25, type: !5)
!6079 = !DILocation(line: 25, column: 35, scope: !6074)
!6080 = !DILocalVariable(name: "outer_code", arg: 2, scope: !6074, file: !6075, line: 26, type: !377)
!6081 = !DILocation(line: 26, column: 17, scope: !6074)
!6082 = !DILocalVariable(name: "index_code", arg: 3, scope: !6074, file: !6075, line: 27, type: !377)
!6083 = !DILocation(line: 27, column: 17, scope: !6074)
!6084 = !DILocation(line: 39, column: 3, scope: !6074)
!6085 = distinct !DISubprogram(name: "reg_fits_class_p", scope: !3, file: !3, line: 2728, type: !6086, scopeLine: 2730, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!6086 = !DISubroutineType(types: !6087)
!6087 = !{!924, !900, !628, !924, !5}
!6088 = !DILocalVariable(name: "operand", arg: 1, scope: !6085, file: !3, line: 2728, type: !900)
!6089 = !DILocation(line: 2728, column: 23, scope: !6085)
!6090 = !DILocalVariable(name: "cl", arg: 2, scope: !6085, file: !3, line: 2728, type: !628)
!6091 = !DILocation(line: 2728, column: 47, scope: !6085)
!6092 = !DILocalVariable(name: "offset", arg: 3, scope: !6085, file: !3, line: 2728, type: !924)
!6093 = !DILocation(line: 2728, column: 55, scope: !6085)
!6094 = !DILocalVariable(name: "mode", arg: 4, scope: !6085, file: !3, line: 2729, type: !5)
!6095 = !DILocation(line: 2729, column: 23, scope: !6085)
!6096 = !DILocalVariable(name: "regno", scope: !6085, file: !3, line: 2731, type: !924)
!6097 = !DILocation(line: 2731, column: 7, scope: !6085)
!6098 = !DILocation(line: 2731, column: 15, scope: !6085)
!6099 = !DILocation(line: 2733, column: 7, scope: !6100)
!6100 = distinct !DILexicalBlock(scope: !6085, file: !3, line: 2733, column: 7)
!6101 = !DILocation(line: 2733, column: 10, scope: !6100)
!6102 = !DILocation(line: 2733, column: 7, scope: !6085)
!6103 = !DILocation(line: 2734, column: 5, scope: !6100)
!6104 = !DILocation(line: 2736, column: 11, scope: !6085)
!6105 = !DILocation(line: 2736, column: 17, scope: !6085)
!6106 = !DILocation(line: 2737, column: 4, scope: !6085)
!6107 = !DILocation(line: 2737, column: 51, scope: !6085)
!6108 = !DILocation(line: 2737, column: 26, scope: !6085)
!6109 = !DILocation(line: 2738, column: 5, scope: !6085)
!6110 = !DILocation(line: 2738, column: 11, scope: !6085)
!6111 = !DILocation(line: 2738, column: 19, scope: !6085)
!6112 = !DILocation(line: 2738, column: 17, scope: !6085)
!6113 = !DILocation(line: 2737, column: 7, scope: !6085)
!6114 = !DILocation(line: 0, scope: !6085)
!6115 = !DILocation(line: 2736, column: 3, scope: !6085)
!6116 = !DILocation(line: 2739, column: 1, scope: !6085)
!6117 = distinct !DISubprogram(name: "in_hard_reg_set_p", scope: !6118, file: !6118, line: 335, type: !6119, scopeLine: 337, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!6118 = !DIFile(filename: "./regs.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!6119 = !DISubroutineType(types: !6120)
!6120 = !{!1135, !6121, !5, !7}
!6121 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1981)
!6122 = !DILocalVariable(name: "regs", arg: 1, scope: !6117, file: !6118, line: 335, type: !6121)
!6123 = !DILocation(line: 335, column: 39, scope: !6117)
!6124 = !DILocalVariable(name: "mode", arg: 2, scope: !6117, file: !6118, line: 335, type: !5)
!6125 = !DILocation(line: 335, column: 63, scope: !6117)
!6126 = !DILocalVariable(name: "regno", arg: 3, scope: !6117, file: !6118, line: 336, type: !7)
!6127 = !DILocation(line: 336, column: 19, scope: !6117)
!6128 = !DILocalVariable(name: "end_regno", scope: !6117, file: !6118, line: 338, type: !7)
!6129 = !DILocation(line: 338, column: 16, scope: !6117)
!6130 = !DILocation(line: 340, column: 8, scope: !6131)
!6131 = distinct !DILexicalBlock(scope: !6117, file: !6118, line: 340, column: 7)
!6132 = !DILocation(line: 340, column: 7, scope: !6117)
!6133 = !DILocation(line: 341, column: 5, scope: !6131)
!6134 = !DILocation(line: 343, column: 31, scope: !6117)
!6135 = !DILocation(line: 343, column: 37, scope: !6117)
!6136 = !DILocation(line: 343, column: 15, scope: !6117)
!6137 = !DILocation(line: 343, column: 13, scope: !6117)
!6138 = !DILocation(line: 344, column: 3, scope: !6117)
!6139 = !DILocation(line: 344, column: 10, scope: !6117)
!6140 = !DILocation(line: 344, column: 20, scope: !6117)
!6141 = !DILocation(line: 344, column: 18, scope: !6117)
!6142 = !DILocation(line: 345, column: 10, scope: !6143)
!6143 = distinct !DILexicalBlock(scope: !6117, file: !6118, line: 345, column: 9)
!6144 = !DILocation(line: 345, column: 9, scope: !6117)
!6145 = !DILocation(line: 346, column: 7, scope: !6143)
!6146 = distinct !{!6146, !6138, !6147}
!6147 = !DILocation(line: 346, column: 14, scope: !6117)
!6148 = !DILocation(line: 348, column: 3, scope: !6117)
!6149 = !DILocation(line: 349, column: 1, scope: !6117)
!6150 = distinct !DISubprogram(name: "split_all_insns", scope: !3, file: !3, line: 2798, type: !2130, scopeLine: 2799, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!6151 = !DILocalVariable(name: "blocks", scope: !6150, file: !3, line: 2800, type: !6152)
!6152 = !DIDerivedType(tag: DW_TAG_typedef, name: "sbitmap", file: !6153, line: 45, baseType: !6154)
!6153 = !DIFile(filename: "./sbitmap.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/502.gcc_r/build/build_base_ld-loop-ext-m64.0000")
!6154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6155, size: 64)
!6155 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "simple_bitmap_def", file: !6153, line: 39, size: 192, elements: !6156)
!6156 = !{!6157, !6159, !6160, !6161}
!6157 = !DIDerivedType(tag: DW_TAG_member, name: "popcount", scope: !6155, file: !6153, line: 41, baseType: !6158, size: 64)
!6158 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1135, size: 64)
!6159 = !DIDerivedType(tag: DW_TAG_member, name: "n_bits", scope: !6155, file: !6153, line: 42, baseType: !7, size: 32, offset: 64)
!6160 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !6155, file: !6153, line: 43, baseType: !7, size: 32, offset: 96)
!6161 = !DIDerivedType(tag: DW_TAG_member, name: "elms", scope: !6155, file: !6153, line: 44, baseType: !6162, size: 64, offset: 128)
!6162 = !DICompositeType(tag: DW_TAG_array_type, baseType: !974, size: 64, elements: !939)
!6163 = !DILocation(line: 2800, column: 11, scope: !6150)
!6164 = !DILocalVariable(name: "changed", scope: !6150, file: !3, line: 2801, type: !1135)
!6165 = !DILocation(line: 2801, column: 8, scope: !6150)
!6166 = !DILocalVariable(name: "bb", scope: !6150, file: !3, line: 2802, type: !1280)
!6167 = !DILocation(line: 2802, column: 15, scope: !6150)
!6168 = !DILocation(line: 2804, column: 27, scope: !6150)
!6169 = !DILocation(line: 2804, column: 12, scope: !6150)
!6170 = !DILocation(line: 2804, column: 10, scope: !6150)
!6171 = !DILocation(line: 2805, column: 17, scope: !6150)
!6172 = !DILocation(line: 2805, column: 3, scope: !6150)
!6173 = !DILocation(line: 2806, column: 11, scope: !6150)
!6174 = !DILocation(line: 2808, column: 3, scope: !6175)
!6175 = distinct !DILexicalBlock(scope: !6150, file: !3, line: 2808, column: 3)
!6176 = !DILocation(line: 2808, column: 3, scope: !6177)
!6177 = distinct !DILexicalBlock(scope: !6175, file: !3, line: 2808, column: 3)
!6178 = !DILocalVariable(name: "insn", scope: !6179, file: !3, line: 2810, type: !900)
!6179 = distinct !DILexicalBlock(scope: !6177, file: !3, line: 2809, column: 5)
!6180 = !DILocation(line: 2810, column: 11, scope: !6179)
!6181 = !DILocalVariable(name: "next", scope: !6179, file: !3, line: 2810, type: !900)
!6182 = !DILocation(line: 2810, column: 17, scope: !6179)
!6183 = !DILocalVariable(name: "finish", scope: !6179, file: !3, line: 2811, type: !1135)
!6184 = !DILocation(line: 2811, column: 12, scope: !6179)
!6185 = !DILocation(line: 2813, column: 27, scope: !6179)
!6186 = !DILocation(line: 2813, column: 7, scope: !6179)
!6187 = !DILocation(line: 2814, column: 19, scope: !6188)
!6188 = distinct !DILexicalBlock(scope: !6179, file: !3, line: 2814, column: 7)
!6189 = !DILocation(line: 2814, column: 17, scope: !6188)
!6190 = !DILocation(line: 2814, column: 12, scope: !6188)
!6191 = !DILocation(line: 2814, column: 34, scope: !6192)
!6192 = distinct !DILexicalBlock(scope: !6188, file: !3, line: 2814, column: 7)
!6193 = !DILocation(line: 2814, column: 33, scope: !6192)
!6194 = !DILocation(line: 2814, column: 7, scope: !6188)
!6195 = !DILocation(line: 2818, column: 11, scope: !6196)
!6196 = distinct !DILexicalBlock(scope: !6192, file: !3, line: 2815, column: 2)
!6197 = !DILocation(line: 2818, column: 9, scope: !6196)
!6198 = !DILocation(line: 2819, column: 14, scope: !6196)
!6199 = !DILocation(line: 2819, column: 22, scope: !6196)
!6200 = !DILocation(line: 2819, column: 19, scope: !6196)
!6201 = !DILocation(line: 2819, column: 13, scope: !6196)
!6202 = !DILocation(line: 2819, column: 11, scope: !6196)
!6203 = !DILocation(line: 2820, column: 8, scope: !6204)
!6204 = distinct !DILexicalBlock(scope: !6196, file: !3, line: 2820, column: 8)
!6205 = !DILocation(line: 2820, column: 8, scope: !6196)
!6206 = !DILocalVariable(name: "set", scope: !6207, file: !3, line: 2822, type: !900)
!6207 = distinct !DILexicalBlock(scope: !6204, file: !3, line: 2821, column: 6)
!6208 = !DILocation(line: 2822, column: 12, scope: !6207)
!6209 = !DILocation(line: 2822, column: 18, scope: !6207)
!6210 = !DILocation(line: 2827, column: 12, scope: !6211)
!6211 = distinct !DILexicalBlock(scope: !6207, file: !3, line: 2827, column: 12)
!6212 = !DILocation(line: 2827, column: 16, scope: !6211)
!6213 = !DILocation(line: 2827, column: 31, scope: !6211)
!6214 = !DILocation(line: 2827, column: 19, scope: !6211)
!6215 = !DILocation(line: 2827, column: 12, scope: !6207)
!6216 = !DILocation(line: 2834, column: 9, scope: !6217)
!6217 = distinct !DILexicalBlock(scope: !6218, file: !3, line: 2834, column: 9)
!6218 = distinct !DILexicalBlock(scope: !6211, file: !3, line: 2828, column: 3)
!6219 = !DILocation(line: 2834, column: 9, scope: !6218)
!6220 = !DILocation(line: 2835, column: 32, scope: !6217)
!6221 = !DILocation(line: 2835, column: 9, scope: !6217)
!6222 = !DILocation(line: 2836, column: 3, scope: !6218)
!6223 = !DILocalVariable(name: "last", scope: !6224, file: !3, line: 2839, type: !900)
!6224 = distinct !DILexicalBlock(scope: !6211, file: !3, line: 2838, column: 3)
!6225 = !DILocation(line: 2839, column: 9, scope: !6224)
!6226 = !DILocation(line: 2839, column: 28, scope: !6224)
!6227 = !DILocation(line: 2839, column: 16, scope: !6224)
!6228 = !DILocation(line: 2840, column: 9, scope: !6229)
!6229 = distinct !DILexicalBlock(scope: !6224, file: !3, line: 2840, column: 9)
!6230 = !DILocation(line: 2840, column: 9, scope: !6224)
!6231 = !DILocation(line: 2846, column: 9, scope: !6232)
!6232 = distinct !DILexicalBlock(scope: !6229, file: !3, line: 2841, column: 7)
!6233 = !DILocation(line: 2846, column: 16, scope: !6232)
!6234 = !DILocation(line: 2847, column: 11, scope: !6232)
!6235 = !DILocation(line: 2847, column: 9, scope: !6232)
!6236 = distinct !{!6236, !6231, !6234}
!6237 = !DILocation(line: 2848, column: 18, scope: !6232)
!6238 = !DILocation(line: 2848, column: 26, scope: !6232)
!6239 = !DILocation(line: 2848, column: 30, scope: !6232)
!6240 = !DILocation(line: 2848, column: 9, scope: !6232)
!6241 = !DILocation(line: 2849, column: 17, scope: !6232)
!6242 = !DILocation(line: 2850, column: 7, scope: !6232)
!6243 = !DILocation(line: 2852, column: 6, scope: !6207)
!6244 = !DILocation(line: 2853, column: 2, scope: !6196)
!6245 = !DILocation(line: 2814, column: 50, scope: !6192)
!6246 = !DILocation(line: 2814, column: 48, scope: !6192)
!6247 = !DILocation(line: 2814, column: 7, scope: !6192)
!6248 = distinct !{!6248, !6194, !6249}
!6249 = !DILocation(line: 2853, column: 2, scope: !6188)
!6250 = !DILocation(line: 2854, column: 5, scope: !6179)
!6251 = distinct !{!6251, !6174, !6252}
!6252 = !DILocation(line: 2854, column: 5, scope: !6175)
!6253 = !DILocation(line: 2856, column: 3, scope: !6150)
!6254 = !DILocation(line: 2857, column: 7, scope: !6255)
!6255 = distinct !DILexicalBlock(scope: !6150, file: !3, line: 2857, column: 7)
!6256 = !DILocation(line: 2857, column: 7, scope: !6150)
!6257 = !DILocation(line: 2858, column: 33, scope: !6255)
!6258 = !DILocation(line: 2858, column: 5, scope: !6255)
!6259 = !DILocation(line: 2864, column: 3, scope: !6150)
!6260 = !DILocation(line: 2865, column: 1, scope: !6150)
!6261 = distinct !DISubprogram(name: "split_insn", scope: !3, file: !3, line: 2746, type: !5452, scopeLine: 2747, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!6262 = !DILocalVariable(name: "insn", arg: 1, scope: !6261, file: !3, line: 2746, type: !900)
!6263 = !DILocation(line: 2746, column: 17, scope: !6261)
!6264 = !DILocalVariable(name: "first", scope: !6261, file: !3, line: 2749, type: !900)
!6265 = !DILocation(line: 2749, column: 7, scope: !6261)
!6266 = !DILocation(line: 2749, column: 15, scope: !6261)
!6267 = !DILocalVariable(name: "last", scope: !6261, file: !3, line: 2750, type: !900)
!6268 = !DILocation(line: 2750, column: 7, scope: !6261)
!6269 = !DILocation(line: 2750, column: 25, scope: !6261)
!6270 = !DILocation(line: 2750, column: 41, scope: !6261)
!6271 = !DILocation(line: 2750, column: 14, scope: !6261)
!6272 = !DILocalVariable(name: "insn_set", scope: !6261, file: !3, line: 2751, type: !900)
!6273 = !DILocation(line: 2751, column: 7, scope: !6261)
!6274 = !DILocalVariable(name: "last_set", scope: !6261, file: !3, line: 2751, type: !900)
!6275 = !DILocation(line: 2751, column: 17, scope: !6261)
!6276 = !DILocalVariable(name: "note", scope: !6261, file: !3, line: 2751, type: !900)
!6277 = !DILocation(line: 2751, column: 27, scope: !6261)
!6278 = !DILocation(line: 2753, column: 7, scope: !6279)
!6279 = distinct !DILexicalBlock(scope: !6261, file: !3, line: 2753, column: 7)
!6280 = !DILocation(line: 2753, column: 15, scope: !6279)
!6281 = !DILocation(line: 2753, column: 12, scope: !6279)
!6282 = !DILocation(line: 2753, column: 7, scope: !6261)
!6283 = !DILocation(line: 2754, column: 5, scope: !6279)
!6284 = !DILocation(line: 2760, column: 14, scope: !6261)
!6285 = !DILocation(line: 2760, column: 12, scope: !6261)
!6286 = !DILocation(line: 2761, column: 7, scope: !6287)
!6287 = distinct !DILexicalBlock(scope: !6261, file: !3, line: 2761, column: 7)
!6288 = !DILocation(line: 2761, column: 7, scope: !6261)
!6289 = !DILocation(line: 2763, column: 18, scope: !6290)
!6290 = distinct !DILexicalBlock(scope: !6287, file: !3, line: 2762, column: 5)
!6291 = !DILocation(line: 2763, column: 16, scope: !6290)
!6292 = !DILocation(line: 2764, column: 11, scope: !6293)
!6293 = distinct !DILexicalBlock(scope: !6290, file: !3, line: 2764, column: 11)
!6294 = !DILocation(line: 2764, column: 20, scope: !6293)
!6295 = !DILocation(line: 2764, column: 36, scope: !6293)
!6296 = !DILocation(line: 2764, column: 57, scope: !6293)
!6297 = !DILocation(line: 2764, column: 23, scope: !6293)
!6298 = !DILocation(line: 2764, column: 11, scope: !6290)
!6299 = !DILocation(line: 2766, column: 38, scope: !6300)
!6300 = distinct !DILexicalBlock(scope: !6293, file: !3, line: 2765, column: 2)
!6301 = !DILocation(line: 2766, column: 11, scope: !6300)
!6302 = !DILocation(line: 2766, column: 9, scope: !6300)
!6303 = !DILocation(line: 2767, column: 8, scope: !6304)
!6304 = distinct !DILexicalBlock(scope: !6300, file: !3, line: 2767, column: 8)
!6305 = !DILocation(line: 2767, column: 13, scope: !6304)
!6306 = !DILocation(line: 2767, column: 16, scope: !6304)
!6307 = !DILocation(line: 2767, column: 8, scope: !6300)
!6308 = !DILocation(line: 2768, column: 27, scope: !6304)
!6309 = !DILocation(line: 2768, column: 44, scope: !6304)
!6310 = !DILocation(line: 2768, column: 6, scope: !6304)
!6311 = !DILocation(line: 2769, column: 13, scope: !6312)
!6312 = distinct !DILexicalBlock(scope: !6304, file: !3, line: 2769, column: 13)
!6313 = !DILocation(line: 2769, column: 13, scope: !6304)
!6314 = !DILocation(line: 2770, column: 27, scope: !6312)
!6315 = !DILocation(line: 2770, column: 44, scope: !6312)
!6316 = !DILocation(line: 2770, column: 6, scope: !6312)
!6317 = !DILocation(line: 2771, column: 2, scope: !6300)
!6318 = !DILocation(line: 2772, column: 5, scope: !6290)
!6319 = !DILocation(line: 2775, column: 3, scope: !6261)
!6320 = !DILocation(line: 2779, column: 7, scope: !6321)
!6321 = distinct !DILexicalBlock(scope: !6261, file: !3, line: 2779, column: 7)
!6322 = !DILocation(line: 2779, column: 24, scope: !6321)
!6323 = !DILocation(line: 2779, column: 27, scope: !6321)
!6324 = !DILocation(line: 2779, column: 36, scope: !6321)
!6325 = !DILocation(line: 2779, column: 33, scope: !6321)
!6326 = !DILocation(line: 2779, column: 7, scope: !6261)
!6327 = !DILocation(line: 2781, column: 15, scope: !6328)
!6328 = distinct !DILexicalBlock(scope: !6321, file: !3, line: 2780, column: 5)
!6329 = !DILocation(line: 2781, column: 13, scope: !6328)
!6330 = !DILocation(line: 2782, column: 7, scope: !6328)
!6331 = !DILocation(line: 2784, column: 8, scope: !6332)
!6332 = distinct !DILexicalBlock(scope: !6333, file: !3, line: 2784, column: 8)
!6333 = distinct !DILexicalBlock(scope: !6334, file: !3, line: 2783, column: 2)
!6334 = distinct !DILexicalBlock(scope: !6335, file: !3, line: 2782, column: 7)
!6335 = distinct !DILexicalBlock(scope: !6328, file: !3, line: 2782, column: 7)
!6336 = !DILocation(line: 2784, column: 8, scope: !6333)
!6337 = !DILocation(line: 2785, column: 31, scope: !6332)
!6338 = !DILocation(line: 2785, column: 6, scope: !6332)
!6339 = !DILocation(line: 2786, column: 8, scope: !6340)
!6340 = distinct !DILexicalBlock(scope: !6333, file: !3, line: 2786, column: 8)
!6341 = !DILocation(line: 2786, column: 17, scope: !6340)
!6342 = !DILocation(line: 2786, column: 14, scope: !6340)
!6343 = !DILocation(line: 2786, column: 8, scope: !6333)
!6344 = !DILocation(line: 2787, column: 6, scope: !6340)
!6345 = !DILocation(line: 2788, column: 12, scope: !6333)
!6346 = !DILocation(line: 2788, column: 10, scope: !6333)
!6347 = !DILocation(line: 2782, column: 7, scope: !6334)
!6348 = distinct !{!6348, !6349, !6350}
!6349 = !DILocation(line: 2782, column: 7, scope: !6335)
!6350 = !DILocation(line: 2789, column: 2, scope: !6335)
!6351 = !DILocation(line: 2790, column: 5, scope: !6328)
!6352 = !DILocation(line: 2792, column: 10, scope: !6261)
!6353 = !DILocation(line: 2792, column: 3, scope: !6261)
!6354 = !DILocation(line: 2793, column: 1, scope: !6261)
!6355 = distinct !DISubprogram(name: "SET_BIT", scope: !6153, file: !6153, line: 63, type: !6356, scopeLine: 64, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!6356 = !DISubroutineType(types: !6357)
!6357 = !{null, !6152, !7}
!6358 = !DILocalVariable(name: "map", arg: 1, scope: !6355, file: !6153, line: 63, type: !6152)
!6359 = !DILocation(line: 63, column: 18, scope: !6355)
!6360 = !DILocalVariable(name: "bitno", arg: 2, scope: !6355, file: !6153, line: 63, type: !7)
!6361 = !DILocation(line: 63, column: 36, scope: !6355)
!6362 = !DILocation(line: 65, column: 7, scope: !6363)
!6363 = distinct !DILexicalBlock(scope: !6355, file: !6153, line: 65, column: 7)
!6364 = !DILocation(line: 65, column: 12, scope: !6363)
!6365 = !DILocation(line: 65, column: 7, scope: !6355)
!6366 = !DILocalVariable(name: "oldbit", scope: !6367, file: !6153, line: 67, type: !1135)
!6367 = distinct !DILexicalBlock(scope: !6363, file: !6153, line: 66, column: 5)
!6368 = !DILocation(line: 67, column: 12, scope: !6367)
!6369 = !DILocation(line: 68, column: 16, scope: !6367)
!6370 = !DILocation(line: 68, column: 14, scope: !6367)
!6371 = !DILocation(line: 69, column: 12, scope: !6372)
!6372 = distinct !DILexicalBlock(scope: !6367, file: !6153, line: 69, column: 11)
!6373 = !DILocation(line: 69, column: 11, scope: !6367)
!6374 = !DILocation(line: 70, column: 2, scope: !6372)
!6375 = !DILocation(line: 70, column: 7, scope: !6372)
!6376 = !DILocation(line: 70, column: 16, scope: !6372)
!6377 = !DILocation(line: 70, column: 22, scope: !6372)
!6378 = !DILocation(line: 70, column: 41, scope: !6372)
!6379 = !DILocation(line: 71, column: 5, scope: !6367)
!6380 = !DILocation(line: 73, column: 33, scope: !6355)
!6381 = !DILocation(line: 73, column: 40, scope: !6355)
!6382 = !DILocation(line: 73, column: 29, scope: !6355)
!6383 = !DILocation(line: 72, column: 3, scope: !6355)
!6384 = !DILocation(line: 72, column: 8, scope: !6355)
!6385 = !DILocation(line: 72, column: 13, scope: !6355)
!6386 = !DILocation(line: 72, column: 19, scope: !6355)
!6387 = !DILocation(line: 73, column: 5, scope: !6355)
!6388 = !DILocation(line: 74, column: 1, scope: !6355)
!6389 = distinct !DISubprogram(name: "split_all_insns_noflow", scope: !3, file: !3, line: 2871, type: !2029, scopeLine: 2872, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!6390 = !DILocalVariable(name: "next", scope: !6389, file: !3, line: 2873, type: !900)
!6391 = !DILocation(line: 2873, column: 7, scope: !6389)
!6392 = !DILocalVariable(name: "insn", scope: !6389, file: !3, line: 2873, type: !900)
!6393 = !DILocation(line: 2873, column: 13, scope: !6389)
!6394 = !DILocation(line: 2875, column: 15, scope: !6395)
!6395 = distinct !DILexicalBlock(scope: !6389, file: !3, line: 2875, column: 3)
!6396 = !DILocation(line: 2875, column: 13, scope: !6395)
!6397 = !DILocation(line: 2875, column: 8, scope: !6395)
!6398 = !DILocation(line: 2875, column: 29, scope: !6399)
!6399 = distinct !DILexicalBlock(scope: !6395, file: !3, line: 2875, column: 3)
!6400 = !DILocation(line: 2875, column: 3, scope: !6395)
!6401 = !DILocation(line: 2877, column: 14, scope: !6402)
!6402 = distinct !DILexicalBlock(scope: !6399, file: !3, line: 2876, column: 5)
!6403 = !DILocation(line: 2877, column: 12, scope: !6402)
!6404 = !DILocation(line: 2878, column: 11, scope: !6405)
!6405 = distinct !DILexicalBlock(scope: !6402, file: !3, line: 2878, column: 11)
!6406 = !DILocation(line: 2878, column: 11, scope: !6402)
!6407 = !DILocalVariable(name: "set", scope: !6408, file: !3, line: 2883, type: !900)
!6408 = distinct !DILexicalBlock(scope: !6405, file: !3, line: 2879, column: 2)
!6409 = !DILocation(line: 2883, column: 8, scope: !6408)
!6410 = !DILocation(line: 2883, column: 14, scope: !6408)
!6411 = !DILocation(line: 2884, column: 8, scope: !6412)
!6412 = distinct !DILexicalBlock(scope: !6408, file: !3, line: 2884, column: 8)
!6413 = !DILocation(line: 2884, column: 12, scope: !6412)
!6414 = !DILocation(line: 2884, column: 27, scope: !6412)
!6415 = !DILocation(line: 2884, column: 15, scope: !6412)
!6416 = !DILocation(line: 2884, column: 8, scope: !6408)
!6417 = !DILocation(line: 2893, column: 12, scope: !6418)
!6418 = distinct !DILexicalBlock(scope: !6419, file: !3, line: 2893, column: 12)
!6419 = distinct !DILexicalBlock(scope: !6412, file: !3, line: 2885, column: 6)
!6420 = !DILocation(line: 2893, column: 12, scope: !6419)
!6421 = !DILocation(line: 2894, column: 26, scope: !6418)
!6422 = !DILocation(line: 2894, column: 3, scope: !6418)
!6423 = !DILocation(line: 2895, column: 6, scope: !6419)
!6424 = !DILocation(line: 2897, column: 18, scope: !6412)
!6425 = !DILocation(line: 2897, column: 6, scope: !6412)
!6426 = !DILocation(line: 2898, column: 2, scope: !6408)
!6427 = !DILocation(line: 2899, column: 5, scope: !6402)
!6428 = !DILocation(line: 2875, column: 42, scope: !6399)
!6429 = !DILocation(line: 2875, column: 40, scope: !6399)
!6430 = !DILocation(line: 2875, column: 3, scope: !6399)
!6431 = distinct !{!6431, !6400, !6432}
!6432 = !DILocation(line: 2899, column: 5, scope: !6395)
!6433 = !DILocation(line: 2900, column: 3, scope: !6389)
!6434 = distinct !DISubprogram(name: "peep2_next_insn", scope: !3, file: !3, line: 2925, type: !6435, scopeLine: 2926, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!6435 = !DISubroutineType(types: !6436)
!6436 = !{!900, !924}
!6437 = !DILocalVariable(name: "n", arg: 1, scope: !6434, file: !3, line: 2925, type: !924)
!6438 = !DILocation(line: 2925, column: 22, scope: !6434)
!6439 = !DILocation(line: 2927, column: 3, scope: !6434)
!6440 = !DILocation(line: 2929, column: 8, scope: !6434)
!6441 = !DILocation(line: 2929, column: 5, scope: !6434)
!6442 = !DILocation(line: 2930, column: 7, scope: !6443)
!6443 = distinct !DILexicalBlock(scope: !6434, file: !3, line: 2930, column: 7)
!6444 = !DILocation(line: 2930, column: 9, scope: !6443)
!6445 = !DILocation(line: 2930, column: 7, scope: !6434)
!6446 = !DILocation(line: 2931, column: 7, scope: !6443)
!6447 = !DILocation(line: 2931, column: 5, scope: !6443)
!6448 = !DILocation(line: 2933, column: 26, scope: !6434)
!6449 = !DILocation(line: 2933, column: 10, scope: !6434)
!6450 = !DILocation(line: 2933, column: 29, scope: !6434)
!6451 = !DILocation(line: 2933, column: 3, scope: !6434)
!6452 = distinct !DISubprogram(name: "peep2_regno_dead_p", scope: !3, file: !3, line: 2940, type: !6453, scopeLine: 2941, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!6453 = !DISubroutineType(types: !6454)
!6454 = !{!924, !924, !924}
!6455 = !DILocalVariable(name: "ofs", arg: 1, scope: !6452, file: !3, line: 2940, type: !924)
!6456 = !DILocation(line: 2940, column: 25, scope: !6452)
!6457 = !DILocalVariable(name: "regno", arg: 2, scope: !6452, file: !3, line: 2940, type: !924)
!6458 = !DILocation(line: 2940, column: 34, scope: !6452)
!6459 = !DILocation(line: 2942, column: 3, scope: !6452)
!6460 = !DILocation(line: 2944, column: 10, scope: !6452)
!6461 = !DILocation(line: 2944, column: 7, scope: !6452)
!6462 = !DILocation(line: 2945, column: 7, scope: !6463)
!6463 = distinct !DILexicalBlock(scope: !6452, file: !3, line: 2945, column: 7)
!6464 = !DILocation(line: 2945, column: 11, scope: !6463)
!6465 = !DILocation(line: 2945, column: 7, scope: !6452)
!6466 = !DILocation(line: 2946, column: 9, scope: !6463)
!6467 = !DILocation(line: 2946, column: 5, scope: !6463)
!6468 = !DILocation(line: 2948, column: 3, scope: !6452)
!6469 = !DILocation(line: 2950, column: 12, scope: !6452)
!6470 = !DILocation(line: 2950, column: 10, scope: !6452)
!6471 = !DILocation(line: 2950, column: 3, scope: !6452)
!6472 = distinct !DISubprogram(name: "peep2_reg_dead_p", scope: !3, file: !3, line: 2956, type: !6473, scopeLine: 2957, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!6473 = !DISubroutineType(types: !6474)
!6474 = !{!924, !924, !900}
!6475 = !DILocalVariable(name: "ofs", arg: 1, scope: !6472, file: !3, line: 2956, type: !924)
!6476 = !DILocation(line: 2956, column: 23, scope: !6472)
!6477 = !DILocalVariable(name: "reg", arg: 2, scope: !6472, file: !3, line: 2956, type: !900)
!6478 = !DILocation(line: 2956, column: 32, scope: !6472)
!6479 = !DILocalVariable(name: "regno", scope: !6472, file: !3, line: 2958, type: !924)
!6480 = !DILocation(line: 2958, column: 7, scope: !6472)
!6481 = !DILocalVariable(name: "n", scope: !6472, file: !3, line: 2958, type: !924)
!6482 = !DILocation(line: 2958, column: 14, scope: !6472)
!6483 = !DILocation(line: 2960, column: 3, scope: !6472)
!6484 = !DILocation(line: 2962, column: 10, scope: !6472)
!6485 = !DILocation(line: 2962, column: 7, scope: !6472)
!6486 = !DILocation(line: 2963, column: 7, scope: !6487)
!6487 = distinct !DILexicalBlock(scope: !6472, file: !3, line: 2963, column: 7)
!6488 = !DILocation(line: 2963, column: 11, scope: !6487)
!6489 = !DILocation(line: 2963, column: 7, scope: !6472)
!6490 = !DILocation(line: 2964, column: 9, scope: !6487)
!6491 = !DILocation(line: 2964, column: 5, scope: !6487)
!6492 = !DILocation(line: 2966, column: 3, scope: !6472)
!6493 = !DILocation(line: 2968, column: 11, scope: !6472)
!6494 = !DILocation(line: 2968, column: 9, scope: !6472)
!6495 = !DILocation(line: 2969, column: 24, scope: !6472)
!6496 = !DILocation(line: 2969, column: 7, scope: !6472)
!6497 = !DILocation(line: 2969, column: 31, scope: !6472)
!6498 = !DILocation(line: 2969, column: 5, scope: !6472)
!6499 = !DILocation(line: 2970, column: 3, scope: !6472)
!6500 = !DILocation(line: 2970, column: 10, scope: !6472)
!6501 = !DILocation(line: 2970, column: 14, scope: !6472)
!6502 = !DILocation(line: 2971, column: 9, scope: !6503)
!6503 = distinct !DILexicalBlock(scope: !6472, file: !3, line: 2971, column: 9)
!6504 = !DILocation(line: 2971, column: 9, scope: !6472)
!6505 = !DILocation(line: 2972, column: 7, scope: !6503)
!6506 = distinct !{!6506, !6499, !6507}
!6507 = !DILocation(line: 2972, column: 14, scope: !6472)
!6508 = !DILocation(line: 2973, column: 3, scope: !6472)
!6509 = !DILocation(line: 2974, column: 1, scope: !6472)
!6510 = !DILocalVariable(name: "from", arg: 1, scope: !2009, file: !3, line: 2988, type: !924)
!6511 = !DILocation(line: 2988, column: 31, scope: !2009)
!6512 = !DILocalVariable(name: "to", arg: 2, scope: !2009, file: !3, line: 2988, type: !924)
!6513 = !DILocation(line: 2988, column: 41, scope: !2009)
!6514 = !DILocalVariable(name: "class_str", arg: 3, scope: !2009, file: !3, line: 2988, type: !927)
!6515 = !DILocation(line: 2988, column: 57, scope: !2009)
!6516 = !DILocalVariable(name: "mode", arg: 4, scope: !2009, file: !3, line: 2989, type: !5)
!6517 = !DILocation(line: 2989, column: 24, scope: !2009)
!6518 = !DILocalVariable(name: "reg_set", arg: 5, scope: !2009, file: !3, line: 2989, type: !2012)
!6519 = !DILocation(line: 2989, column: 44, scope: !2009)
!6520 = !DILocalVariable(name: "cl", scope: !2009, file: !3, line: 2992, type: !628)
!6521 = !DILocation(line: 2992, column: 18, scope: !2009)
!6522 = !DILocalVariable(name: "live", scope: !2009, file: !3, line: 2993, type: !1981)
!6523 = !DILocation(line: 2993, column: 16, scope: !2009)
!6524 = !DILocalVariable(name: "i", scope: !2009, file: !3, line: 2994, type: !924)
!6525 = !DILocation(line: 2994, column: 7, scope: !2009)
!6526 = !DILocation(line: 2996, column: 3, scope: !2009)
!6527 = !DILocation(line: 2997, column: 3, scope: !2009)
!6528 = !DILocation(line: 2999, column: 11, scope: !2009)
!6529 = !DILocation(line: 2999, column: 8, scope: !2009)
!6530 = !DILocation(line: 3000, column: 7, scope: !6531)
!6531 = distinct !DILexicalBlock(scope: !2009, file: !3, line: 3000, column: 7)
!6532 = !DILocation(line: 3000, column: 12, scope: !6531)
!6533 = !DILocation(line: 3000, column: 7, scope: !2009)
!6534 = !DILocation(line: 3001, column: 10, scope: !6531)
!6535 = !DILocation(line: 3001, column: 5, scope: !6531)
!6536 = !DILocation(line: 3002, column: 9, scope: !2009)
!6537 = !DILocation(line: 3002, column: 6, scope: !2009)
!6538 = !DILocation(line: 3003, column: 7, scope: !6539)
!6539 = distinct !DILexicalBlock(scope: !2009, file: !3, line: 3003, column: 7)
!6540 = !DILocation(line: 3003, column: 10, scope: !6539)
!6541 = !DILocation(line: 3003, column: 7, scope: !2009)
!6542 = !DILocation(line: 3004, column: 8, scope: !6539)
!6543 = !DILocation(line: 3004, column: 5, scope: !6539)
!6544 = !DILocation(line: 3006, column: 3, scope: !2009)
!6545 = !DILocation(line: 3007, column: 3, scope: !2009)
!6546 = !DILocation(line: 3007, column: 3, scope: !6547)
!6547 = distinct !DILexicalBlock(scope: !2009, file: !3, line: 3007, column: 3)
!6548 = !DILocation(line: 3009, column: 3, scope: !2009)
!6549 = !DILocation(line: 3009, column: 10, scope: !2009)
!6550 = !DILocation(line: 3009, column: 18, scope: !2009)
!6551 = !DILocation(line: 3009, column: 15, scope: !2009)
!6552 = !DILocalVariable(name: "this_live", scope: !6553, file: !3, line: 3011, type: !1981)
!6553 = distinct !DILexicalBlock(scope: !2009, file: !3, line: 3010, column: 5)
!6554 = !DILocation(line: 3011, column: 20, scope: !6553)
!6555 = !DILocation(line: 3013, column: 11, scope: !6556)
!6556 = distinct !DILexicalBlock(scope: !6553, file: !3, line: 3013, column: 11)
!6557 = !DILocation(line: 3013, column: 18, scope: !6556)
!6558 = !DILocation(line: 3013, column: 11, scope: !6553)
!6559 = !DILocation(line: 3014, column: 7, scope: !6556)
!6560 = !DILocation(line: 3014, column: 2, scope: !6556)
!6561 = !DILocation(line: 3015, column: 7, scope: !6553)
!6562 = !DILocation(line: 3016, column: 7, scope: !6553)
!6563 = !DILocation(line: 3016, column: 7, scope: !6564)
!6564 = distinct !DILexicalBlock(scope: !6553, file: !3, line: 3016, column: 7)
!6565 = !DILocation(line: 3017, column: 7, scope: !6553)
!6566 = distinct !{!6566, !6548, !6567}
!6567 = !DILocation(line: 3018, column: 5, scope: !2009)
!6568 = !DILocation(line: 3020, column: 9, scope: !2009)
!6569 = !DILocation(line: 3020, column: 22, scope: !2009)
!6570 = !DILocation(line: 3021, column: 7, scope: !2009)
!6571 = !DILocation(line: 3020, column: 6, scope: !2009)
!6572 = !DILocation(line: 3023, column: 10, scope: !6573)
!6573 = distinct !DILexicalBlock(scope: !2009, file: !3, line: 3023, column: 3)
!6574 = !DILocation(line: 3023, column: 8, scope: !6573)
!6575 = !DILocation(line: 3023, column: 15, scope: !6576)
!6576 = distinct !DILexicalBlock(scope: !6573, file: !3, line: 3023, column: 3)
!6577 = !DILocation(line: 3023, column: 17, scope: !6576)
!6578 = !DILocation(line: 3023, column: 3, scope: !6573)
!6579 = !DILocalVariable(name: "raw_regno", scope: !6580, file: !3, line: 3025, type: !924)
!6580 = distinct !DILexicalBlock(scope: !6576, file: !3, line: 3024, column: 5)
!6581 = !DILocation(line: 3025, column: 11, scope: !6580)
!6582 = !DILocalVariable(name: "regno", scope: !6580, file: !3, line: 3025, type: !924)
!6583 = !DILocation(line: 3025, column: 22, scope: !6580)
!6584 = !DILocalVariable(name: "success", scope: !6580, file: !3, line: 3025, type: !924)
!6585 = !DILocation(line: 3025, column: 29, scope: !6580)
!6586 = !DILocalVariable(name: "j", scope: !6580, file: !3, line: 3025, type: !924)
!6587 = !DILocation(line: 3025, column: 38, scope: !6580)
!6588 = !DILocation(line: 3028, column: 19, scope: !6580)
!6589 = !DILocation(line: 3028, column: 32, scope: !6580)
!6590 = !DILocation(line: 3028, column: 30, scope: !6580)
!6591 = !DILocation(line: 3028, column: 17, scope: !6580)
!6592 = !DILocation(line: 3029, column: 11, scope: !6593)
!6593 = distinct !DILexicalBlock(scope: !6580, file: !3, line: 3029, column: 11)
!6594 = !DILocation(line: 3029, column: 21, scope: !6593)
!6595 = !DILocation(line: 3029, column: 11, scope: !6580)
!6596 = !DILocation(line: 3030, column: 12, scope: !6593)
!6597 = !DILocation(line: 3030, column: 2, scope: !6593)
!6598 = !DILocation(line: 3032, column: 31, scope: !6580)
!6599 = !DILocation(line: 3032, column: 15, scope: !6580)
!6600 = !DILocation(line: 3032, column: 13, scope: !6580)
!6601 = !DILocation(line: 3038, column: 22, scope: !6602)
!6602 = distinct !DILexicalBlock(scope: !6580, file: !3, line: 3038, column: 11)
!6603 = !DILocation(line: 3038, column: 11, scope: !6602)
!6604 = !DILocation(line: 3038, column: 11, scope: !6580)
!6605 = !DILocation(line: 3039, column: 2, scope: !6602)
!6606 = !DILocation(line: 3041, column: 23, scope: !6607)
!6607 = distinct !DILexicalBlock(scope: !6580, file: !3, line: 3041, column: 11)
!6608 = !DILocation(line: 3041, column: 11, scope: !6607)
!6609 = !DILocation(line: 3041, column: 11, scope: !6580)
!6610 = !DILocation(line: 3042, column: 2, scope: !6607)
!6611 = !DILocation(line: 3044, column: 13, scope: !6612)
!6612 = distinct !DILexicalBlock(scope: !6580, file: !3, line: 3044, column: 11)
!6613 = !DILocation(line: 3044, column: 11, scope: !6580)
!6614 = !DILocation(line: 3045, column: 2, scope: !6612)
!6615 = !DILocation(line: 3047, column: 13, scope: !6616)
!6616 = distinct !DILexicalBlock(scope: !6580, file: !3, line: 3047, column: 11)
!6617 = !DILocation(line: 3047, column: 11, scope: !6580)
!6618 = !DILocation(line: 3048, column: 2, scope: !6616)
!6619 = !DILocation(line: 3050, column: 28, scope: !6620)
!6620 = distinct !DILexicalBlock(scope: !6580, file: !3, line: 3050, column: 11)
!6621 = !DILocation(line: 3050, column: 13, scope: !6620)
!6622 = !DILocation(line: 3050, column: 35, scope: !6620)
!6623 = !DILocation(line: 3050, column: 61, scope: !6620)
!6624 = !DILocation(line: 3050, column: 40, scope: !6620)
!6625 = !DILocation(line: 3050, column: 11, scope: !6580)
!6626 = !DILocation(line: 3051, column: 2, scope: !6620)
!6627 = !DILocation(line: 3052, column: 21, scope: !6628)
!6628 = distinct !DILexicalBlock(scope: !6580, file: !3, line: 3052, column: 11)
!6629 = !DILocation(line: 3052, column: 44, scope: !6628)
!6630 = !DILocation(line: 3052, column: 13, scope: !6628)
!6631 = !DILocation(line: 3052, column: 11, scope: !6580)
!6632 = !DILocation(line: 3053, column: 2, scope: !6628)
!6633 = !DILocation(line: 3056, column: 12, scope: !6634)
!6634 = distinct !DILexicalBlock(scope: !6580, file: !3, line: 3056, column: 11)
!6635 = !DILocation(line: 3056, column: 18, scope: !6634)
!6636 = !DILocation(line: 3056, column: 42, scope: !6634)
!6637 = !DILocation(line: 3056, column: 45, scope: !6634)
!6638 = !DILocation(line: 3056, column: 51, scope: !6634)
!6639 = !DILocation(line: 3057, column: 4, scope: !6634)
!6640 = !DILocation(line: 3057, column: 10, scope: !6634)
!6641 = !DILocation(line: 3057, column: 27, scope: !6634)
!6642 = !DILocation(line: 3057, column: 30, scope: !6634)
!6643 = !DILocation(line: 3056, column: 11, scope: !6580)
!6644 = !DILocation(line: 3058, column: 2, scope: !6634)
!6645 = !DILocation(line: 3060, column: 15, scope: !6580)
!6646 = !DILocation(line: 3061, column: 33, scope: !6647)
!6647 = distinct !DILexicalBlock(scope: !6580, file: !3, line: 3061, column: 7)
!6648 = !DILocation(line: 3061, column: 16, scope: !6647)
!6649 = !DILocation(line: 3061, column: 40, scope: !6647)
!6650 = !DILocation(line: 3061, column: 46, scope: !6647)
!6651 = !DILocation(line: 3061, column: 14, scope: !6647)
!6652 = !DILocation(line: 3061, column: 12, scope: !6647)
!6653 = !DILocation(line: 3061, column: 51, scope: !6654)
!6654 = distinct !DILexicalBlock(scope: !6647, file: !3, line: 3061, column: 7)
!6655 = !DILocation(line: 3061, column: 53, scope: !6654)
!6656 = !DILocation(line: 3061, column: 7, scope: !6647)
!6657 = !DILocation(line: 3063, column: 8, scope: !6658)
!6658 = distinct !DILexicalBlock(scope: !6659, file: !3, line: 3063, column: 8)
!6659 = distinct !DILexicalBlock(scope: !6654, file: !3, line: 3062, column: 2)
!6660 = !DILocation(line: 3064, column: 8, scope: !6658)
!6661 = !DILocation(line: 3064, column: 11, scope: !6658)
!6662 = !DILocation(line: 3063, column: 8, scope: !6659)
!6663 = !DILocation(line: 3066, column: 16, scope: !6664)
!6664 = distinct !DILexicalBlock(scope: !6658, file: !3, line: 3065, column: 6)
!6665 = !DILocation(line: 3067, column: 8, scope: !6664)
!6666 = !DILocation(line: 3069, column: 2, scope: !6659)
!6667 = !DILocation(line: 3061, column: 60, scope: !6654)
!6668 = !DILocation(line: 3061, column: 7, scope: !6654)
!6669 = distinct !{!6669, !6656, !6670}
!6670 = !DILocation(line: 3069, column: 2, scope: !6647)
!6671 = !DILocation(line: 3070, column: 11, scope: !6672)
!6672 = distinct !DILexicalBlock(scope: !6580, file: !3, line: 3070, column: 11)
!6673 = !DILocation(line: 3070, column: 11, scope: !6580)
!6674 = !DILocation(line: 3072, column: 25, scope: !6675)
!6675 = distinct !DILexicalBlock(scope: !6672, file: !3, line: 3071, column: 2)
!6676 = !DILocation(line: 3072, column: 34, scope: !6675)
!6677 = !DILocation(line: 3072, column: 40, scope: !6675)
!6678 = !DILocation(line: 3072, column: 4, scope: !6675)
!6679 = !DILocation(line: 3075, column: 8, scope: !6680)
!6680 = distinct !DILexicalBlock(scope: !6675, file: !3, line: 3075, column: 8)
!6681 = !DILocation(line: 3075, column: 20, scope: !6680)
!6682 = !DILocation(line: 3075, column: 8, scope: !6675)
!6683 = !DILocation(line: 3076, column: 16, scope: !6680)
!6684 = !DILocation(line: 3076, column: 6, scope: !6680)
!6685 = !DILocation(line: 3077, column: 17, scope: !6675)
!6686 = !DILocation(line: 3077, column: 15, scope: !6675)
!6687 = !DILocation(line: 3079, column: 24, scope: !6675)
!6688 = !DILocation(line: 3079, column: 30, scope: !6675)
!6689 = !DILocation(line: 3079, column: 11, scope: !6675)
!6690 = !DILocation(line: 3079, column: 4, scope: !6675)
!6691 = !DILocation(line: 3081, column: 5, scope: !6580)
!6692 = !DILocation(line: 3023, column: 43, scope: !6576)
!6693 = !DILocation(line: 3023, column: 3, scope: !6576)
!6694 = distinct !{!6694, !6578, !6695}
!6695 = !DILocation(line: 3081, column: 5, scope: !6573)
!6696 = !DILocation(line: 3083, column: 14, scope: !2009)
!6697 = !DILocation(line: 3084, column: 3, scope: !2009)
!6698 = !DILocation(line: 3085, column: 1, scope: !2009)
!6699 = distinct !DISubprogram(name: "add_to_hard_reg_set", scope: !6118, file: !6118, line: 307, type: !6700, scopeLine: 309, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!6700 = !DISubroutineType(types: !6701)
!6701 = !{null, !2012, !5, !7}
!6702 = !DILocalVariable(name: "regs", arg: 1, scope: !6699, file: !6118, line: 307, type: !2012)
!6703 = !DILocation(line: 307, column: 36, scope: !6699)
!6704 = !DILocalVariable(name: "mode", arg: 2, scope: !6699, file: !6118, line: 307, type: !5)
!6705 = !DILocation(line: 307, column: 60, scope: !6699)
!6706 = !DILocalVariable(name: "regno", arg: 3, scope: !6699, file: !6118, line: 308, type: !7)
!6707 = !DILocation(line: 308, column: 21, scope: !6699)
!6708 = !DILocalVariable(name: "end_regno", scope: !6699, file: !6118, line: 310, type: !7)
!6709 = !DILocation(line: 310, column: 16, scope: !6699)
!6710 = !DILocation(line: 312, column: 31, scope: !6699)
!6711 = !DILocation(line: 312, column: 37, scope: !6699)
!6712 = !DILocation(line: 312, column: 15, scope: !6699)
!6713 = !DILocation(line: 312, column: 13, scope: !6699)
!6714 = !DILocation(line: 313, column: 3, scope: !6699)
!6715 = !DILocation(line: 314, column: 5, scope: !6699)
!6716 = !DILocation(line: 315, column: 10, scope: !6699)
!6717 = !DILocation(line: 315, column: 20, scope: !6699)
!6718 = !DILocation(line: 315, column: 18, scope: !6699)
!6719 = distinct !{!6719, !6714, !6720}
!6720 = !DILocation(line: 315, column: 29, scope: !6699)
!6721 = !DILocation(line: 316, column: 1, scope: !6699)
!6722 = distinct !DISubprogram(name: "store_data_bypass_p", scope: !3, file: !3, line: 3356, type: !6723, scopeLine: 3357, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!6723 = !DISubroutineType(types: !6724)
!6724 = !{!924, !900, !900}
!6725 = !DILocalVariable(name: "out_insn", arg: 1, scope: !6722, file: !3, line: 3356, type: !900)
!6726 = !DILocation(line: 3356, column: 26, scope: !6722)
!6727 = !DILocalVariable(name: "in_insn", arg: 2, scope: !6722, file: !3, line: 3356, type: !900)
!6728 = !DILocation(line: 3356, column: 40, scope: !6722)
!6729 = !DILocalVariable(name: "out_set", scope: !6722, file: !3, line: 3358, type: !900)
!6730 = !DILocation(line: 3358, column: 7, scope: !6722)
!6731 = !DILocalVariable(name: "in_set", scope: !6722, file: !3, line: 3358, type: !900)
!6732 = !DILocation(line: 3358, column: 16, scope: !6722)
!6733 = !DILocalVariable(name: "out_pat", scope: !6722, file: !3, line: 3359, type: !900)
!6734 = !DILocation(line: 3359, column: 7, scope: !6722)
!6735 = !DILocalVariable(name: "in_pat", scope: !6722, file: !3, line: 3359, type: !900)
!6736 = !DILocation(line: 3359, column: 16, scope: !6722)
!6737 = !DILocalVariable(name: "out_exp", scope: !6722, file: !3, line: 3360, type: !900)
!6738 = !DILocation(line: 3360, column: 7, scope: !6722)
!6739 = !DILocalVariable(name: "in_exp", scope: !6722, file: !3, line: 3360, type: !900)
!6740 = !DILocation(line: 3360, column: 16, scope: !6722)
!6741 = !DILocalVariable(name: "i", scope: !6722, file: !3, line: 3361, type: !924)
!6742 = !DILocation(line: 3361, column: 7, scope: !6722)
!6743 = !DILocalVariable(name: "j", scope: !6722, file: !3, line: 3361, type: !924)
!6744 = !DILocation(line: 3361, column: 10, scope: !6722)
!6745 = !DILocation(line: 3363, column: 12, scope: !6722)
!6746 = !DILocation(line: 3363, column: 10, scope: !6722)
!6747 = !DILocation(line: 3364, column: 7, scope: !6748)
!6748 = distinct !DILexicalBlock(scope: !6722, file: !3, line: 3364, column: 7)
!6749 = !DILocation(line: 3364, column: 7, scope: !6722)
!6750 = !DILocation(line: 3366, column: 12, scope: !6751)
!6751 = distinct !DILexicalBlock(scope: !6752, file: !3, line: 3366, column: 11)
!6752 = distinct !DILexicalBlock(scope: !6748, file: !3, line: 3365, column: 5)
!6753 = !DILocation(line: 3366, column: 11, scope: !6752)
!6754 = !DILocation(line: 3367, column: 2, scope: !6751)
!6755 = !DILocation(line: 3369, column: 17, scope: !6752)
!6756 = !DILocation(line: 3369, column: 15, scope: !6752)
!6757 = !DILocation(line: 3370, column: 11, scope: !6758)
!6758 = distinct !DILexicalBlock(scope: !6752, file: !3, line: 3370, column: 11)
!6759 = !DILocation(line: 3370, column: 11, scope: !6752)
!6760 = !DILocation(line: 3372, column: 32, scope: !6761)
!6761 = distinct !DILexicalBlock(scope: !6762, file: !3, line: 3372, column: 15)
!6762 = distinct !DILexicalBlock(scope: !6758, file: !3, line: 3371, column: 9)
!6763 = !DILocation(line: 3372, column: 52, scope: !6761)
!6764 = !DILocation(line: 3372, column: 15, scope: !6761)
!6765 = !DILocation(line: 3372, column: 15, scope: !6762)
!6766 = !DILocation(line: 3373, column: 13, scope: !6761)
!6767 = !DILocation(line: 3374, column: 9, scope: !6762)
!6768 = !DILocation(line: 3377, column: 21, scope: !6769)
!6769 = distinct !DILexicalBlock(scope: !6758, file: !3, line: 3376, column: 9)
!6770 = !DILocation(line: 3377, column: 19, scope: !6769)
!6771 = !DILocation(line: 3379, column: 8, scope: !6772)
!6772 = distinct !DILexicalBlock(scope: !6769, file: !3, line: 3379, column: 8)
!6773 = !DILocation(line: 3379, column: 27, scope: !6772)
!6774 = !DILocation(line: 3379, column: 8, scope: !6769)
!6775 = !DILocation(line: 3380, column: 6, scope: !6772)
!6776 = !DILocation(line: 3382, column: 18, scope: !6777)
!6777 = distinct !DILexicalBlock(scope: !6769, file: !3, line: 3382, column: 11)
!6778 = !DILocation(line: 3382, column: 16, scope: !6777)
!6779 = !DILocation(line: 3382, column: 23, scope: !6780)
!6780 = distinct !DILexicalBlock(scope: !6777, file: !3, line: 3382, column: 11)
!6781 = !DILocation(line: 3382, column: 27, scope: !6780)
!6782 = !DILocation(line: 3382, column: 25, scope: !6780)
!6783 = !DILocation(line: 3382, column: 11, scope: !6777)
!6784 = !DILocation(line: 3384, column: 23, scope: !6785)
!6785 = distinct !DILexicalBlock(scope: !6780, file: !3, line: 3383, column: 11)
!6786 = !DILocation(line: 3384, column: 21, scope: !6785)
!6787 = !DILocation(line: 3386, column: 17, scope: !6788)
!6788 = distinct !DILexicalBlock(scope: !6785, file: !3, line: 3386, column: 17)
!6789 = !DILocation(line: 3386, column: 36, scope: !6788)
!6790 = !DILocation(line: 3386, column: 17, scope: !6785)
!6791 = !DILocation(line: 3387, column: 15, scope: !6788)
!6792 = !DILocation(line: 3389, column: 13, scope: !6785)
!6793 = !DILocation(line: 3391, column: 34, scope: !6794)
!6794 = distinct !DILexicalBlock(scope: !6785, file: !3, line: 3391, column: 17)
!6795 = !DILocation(line: 3391, column: 54, scope: !6794)
!6796 = !DILocation(line: 3391, column: 17, scope: !6794)
!6797 = !DILocation(line: 3391, column: 17, scope: !6785)
!6798 = !DILocation(line: 3392, column: 15, scope: !6794)
!6799 = !DILocation(line: 3393, column: 11, scope: !6785)
!6800 = !DILocation(line: 3382, column: 50, scope: !6780)
!6801 = !DILocation(line: 3382, column: 11, scope: !6780)
!6802 = distinct !{!6802, !6783, !6803}
!6803 = !DILocation(line: 3393, column: 11, scope: !6777)
!6804 = !DILocation(line: 3395, column: 5, scope: !6752)
!6805 = !DILocation(line: 3398, column: 16, scope: !6806)
!6806 = distinct !DILexicalBlock(scope: !6748, file: !3, line: 3397, column: 5)
!6807 = !DILocation(line: 3398, column: 14, scope: !6806)
!6808 = !DILocation(line: 3399, column: 7, scope: !6806)
!6809 = !DILocation(line: 3401, column: 14, scope: !6810)
!6810 = distinct !DILexicalBlock(scope: !6806, file: !3, line: 3401, column: 7)
!6811 = !DILocation(line: 3401, column: 12, scope: !6810)
!6812 = !DILocation(line: 3401, column: 19, scope: !6813)
!6813 = distinct !DILexicalBlock(scope: !6810, file: !3, line: 3401, column: 7)
!6814 = !DILocation(line: 3401, column: 23, scope: !6813)
!6815 = !DILocation(line: 3401, column: 21, scope: !6813)
!6816 = !DILocation(line: 3401, column: 7, scope: !6810)
!6817 = !DILocation(line: 3403, column: 13, scope: !6818)
!6818 = distinct !DILexicalBlock(scope: !6813, file: !3, line: 3402, column: 2)
!6819 = !DILocation(line: 3403, column: 11, scope: !6818)
!6820 = !DILocation(line: 3405, column: 8, scope: !6821)
!6821 = distinct !DILexicalBlock(scope: !6818, file: !3, line: 3405, column: 8)
!6822 = !DILocation(line: 3405, column: 26, scope: !6821)
!6823 = !DILocation(line: 3405, column: 8, scope: !6818)
!6824 = !DILocation(line: 3406, column: 6, scope: !6821)
!6825 = !DILocation(line: 3408, column: 4, scope: !6818)
!6826 = !DILocation(line: 3410, column: 9, scope: !6827)
!6827 = distinct !DILexicalBlock(scope: !6818, file: !3, line: 3410, column: 8)
!6828 = !DILocation(line: 3410, column: 8, scope: !6818)
!6829 = !DILocation(line: 3411, column: 6, scope: !6827)
!6830 = !DILocation(line: 3413, column: 21, scope: !6818)
!6831 = !DILocation(line: 3413, column: 19, scope: !6818)
!6832 = !DILocation(line: 3414, column: 15, scope: !6833)
!6833 = distinct !DILexicalBlock(scope: !6818, file: !3, line: 3414, column: 15)
!6834 = !DILocation(line: 3414, column: 15, scope: !6818)
!6835 = !DILocation(line: 3416, column: 36, scope: !6836)
!6836 = distinct !DILexicalBlock(scope: !6837, file: !3, line: 3416, column: 19)
!6837 = distinct !DILexicalBlock(scope: !6833, file: !3, line: 3415, column: 13)
!6838 = !DILocation(line: 3416, column: 56, scope: !6836)
!6839 = !DILocation(line: 3416, column: 19, scope: !6836)
!6840 = !DILocation(line: 3416, column: 19, scope: !6837)
!6841 = !DILocation(line: 3417, column: 17, scope: !6836)
!6842 = !DILocation(line: 3418, column: 13, scope: !6837)
!6843 = !DILocation(line: 3421, column: 25, scope: !6844)
!6844 = distinct !DILexicalBlock(scope: !6833, file: !3, line: 3420, column: 13)
!6845 = !DILocation(line: 3421, column: 23, scope: !6844)
!6846 = !DILocation(line: 3422, column: 15, scope: !6844)
!6847 = !DILocation(line: 3424, column: 22, scope: !6848)
!6848 = distinct !DILexicalBlock(scope: !6844, file: !3, line: 3424, column: 15)
!6849 = !DILocation(line: 3424, column: 20, scope: !6848)
!6850 = !DILocation(line: 3424, column: 27, scope: !6851)
!6851 = distinct !DILexicalBlock(scope: !6848, file: !3, line: 3424, column: 15)
!6852 = !DILocation(line: 3424, column: 31, scope: !6851)
!6853 = !DILocation(line: 3424, column: 29, scope: !6851)
!6854 = !DILocation(line: 3424, column: 15, scope: !6848)
!6855 = !DILocation(line: 3426, column: 29, scope: !6856)
!6856 = distinct !DILexicalBlock(scope: !6851, file: !3, line: 3425, column: 17)
!6857 = !DILocation(line: 3426, column: 27, scope: !6856)
!6858 = !DILocation(line: 3428, column: 23, scope: !6859)
!6859 = distinct !DILexicalBlock(scope: !6856, file: !3, line: 3428, column: 23)
!6860 = !DILocation(line: 3428, column: 42, scope: !6859)
!6861 = !DILocation(line: 3428, column: 23, scope: !6856)
!6862 = !DILocation(line: 3429, column: 21, scope: !6859)
!6863 = !DILocation(line: 3431, column: 19, scope: !6856)
!6864 = !DILocation(line: 3433, column: 40, scope: !6865)
!6865 = distinct !DILexicalBlock(scope: !6856, file: !3, line: 3433, column: 23)
!6866 = !DILocation(line: 3433, column: 60, scope: !6865)
!6867 = !DILocation(line: 3433, column: 23, scope: !6865)
!6868 = !DILocation(line: 3433, column: 23, scope: !6856)
!6869 = !DILocation(line: 3434, column: 21, scope: !6865)
!6870 = !DILocation(line: 3435, column: 17, scope: !6856)
!6871 = !DILocation(line: 3424, column: 54, scope: !6851)
!6872 = !DILocation(line: 3424, column: 15, scope: !6851)
!6873 = distinct !{!6873, !6854, !6874}
!6874 = !DILocation(line: 3435, column: 17, scope: !6848)
!6875 = !DILocation(line: 3437, column: 9, scope: !6818)
!6876 = !DILocation(line: 3401, column: 45, scope: !6813)
!6877 = !DILocation(line: 3401, column: 7, scope: !6813)
!6878 = distinct !{!6878, !6816, !6879}
!6879 = !DILocation(line: 3437, column: 9, scope: !6810)
!6880 = !DILocation(line: 3440, column: 3, scope: !6722)
!6881 = !DILocation(line: 3441, column: 1, scope: !6722)
!6882 = distinct !DISubprogram(name: "if_test_bypass_p", scope: !3, file: !3, line: 3449, type: !6723, scopeLine: 3450, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!6883 = !DILocalVariable(name: "out_insn", arg: 1, scope: !6882, file: !3, line: 3449, type: !900)
!6884 = !DILocation(line: 3449, column: 23, scope: !6882)
!6885 = !DILocalVariable(name: "in_insn", arg: 2, scope: !6882, file: !3, line: 3449, type: !900)
!6886 = !DILocation(line: 3449, column: 37, scope: !6882)
!6887 = !DILocalVariable(name: "out_set", scope: !6882, file: !3, line: 3451, type: !900)
!6888 = !DILocation(line: 3451, column: 7, scope: !6882)
!6889 = !DILocalVariable(name: "in_set", scope: !6882, file: !3, line: 3451, type: !900)
!6890 = !DILocation(line: 3451, column: 16, scope: !6882)
!6891 = !DILocation(line: 3453, column: 12, scope: !6882)
!6892 = !DILocation(line: 3453, column: 10, scope: !6882)
!6893 = !DILocation(line: 3454, column: 9, scope: !6894)
!6894 = distinct !DILexicalBlock(scope: !6882, file: !3, line: 3454, column: 7)
!6895 = !DILocation(line: 3454, column: 7, scope: !6882)
!6896 = !DILocation(line: 3456, column: 7, scope: !6897)
!6897 = distinct !DILexicalBlock(scope: !6894, file: !3, line: 3455, column: 5)
!6898 = !DILocation(line: 3457, column: 7, scope: !6897)
!6899 = !DILocation(line: 3460, column: 7, scope: !6900)
!6900 = distinct !DILexicalBlock(scope: !6882, file: !3, line: 3460, column: 7)
!6901 = !DILocation(line: 3460, column: 35, scope: !6900)
!6902 = !DILocation(line: 3460, column: 7, scope: !6882)
!6903 = !DILocation(line: 3461, column: 5, scope: !6900)
!6904 = !DILocation(line: 3462, column: 12, scope: !6882)
!6905 = !DILocation(line: 3462, column: 10, scope: !6882)
!6906 = !DILocation(line: 3464, column: 13, scope: !6882)
!6907 = !DILocation(line: 3464, column: 11, scope: !6882)
!6908 = !DILocation(line: 3465, column: 7, scope: !6909)
!6909 = distinct !DILexicalBlock(scope: !6882, file: !3, line: 3465, column: 7)
!6910 = !DILocation(line: 3465, column: 7, scope: !6882)
!6911 = !DILocation(line: 3467, column: 28, scope: !6912)
!6912 = distinct !DILexicalBlock(scope: !6913, file: !3, line: 3467, column: 11)
!6913 = distinct !DILexicalBlock(scope: !6909, file: !3, line: 3466, column: 5)
!6914 = !DILocation(line: 3467, column: 48, scope: !6912)
!6915 = !DILocation(line: 3467, column: 11, scope: !6912)
!6916 = !DILocation(line: 3468, column: 4, scope: !6912)
!6917 = !DILocation(line: 3468, column: 24, scope: !6912)
!6918 = !DILocation(line: 3468, column: 44, scope: !6912)
!6919 = !DILocation(line: 3468, column: 7, scope: !6912)
!6920 = !DILocation(line: 3467, column: 11, scope: !6913)
!6921 = !DILocation(line: 3469, column: 2, scope: !6912)
!6922 = !DILocation(line: 3470, column: 5, scope: !6913)
!6923 = !DILocalVariable(name: "out_pat", scope: !6924, file: !3, line: 3473, type: !900)
!6924 = distinct !DILexicalBlock(scope: !6909, file: !3, line: 3472, column: 5)
!6925 = !DILocation(line: 3473, column: 11, scope: !6924)
!6926 = !DILocalVariable(name: "i", scope: !6924, file: !3, line: 3474, type: !924)
!6927 = !DILocation(line: 3474, column: 11, scope: !6924)
!6928 = !DILocation(line: 3476, column: 17, scope: !6924)
!6929 = !DILocation(line: 3476, column: 15, scope: !6924)
!6930 = !DILocation(line: 3477, column: 7, scope: !6924)
!6931 = !DILocation(line: 3479, column: 14, scope: !6932)
!6932 = distinct !DILexicalBlock(scope: !6924, file: !3, line: 3479, column: 7)
!6933 = !DILocation(line: 3479, column: 12, scope: !6932)
!6934 = !DILocation(line: 3479, column: 19, scope: !6935)
!6935 = distinct !DILexicalBlock(scope: !6932, file: !3, line: 3479, column: 7)
!6936 = !DILocation(line: 3479, column: 23, scope: !6935)
!6937 = !DILocation(line: 3479, column: 21, scope: !6935)
!6938 = !DILocation(line: 3479, column: 7, scope: !6932)
!6939 = !DILocalVariable(name: "exp", scope: !6940, file: !3, line: 3481, type: !900)
!6940 = distinct !DILexicalBlock(scope: !6935, file: !3, line: 3480, column: 2)
!6941 = !DILocation(line: 3481, column: 8, scope: !6940)
!6942 = !DILocation(line: 3481, column: 14, scope: !6940)
!6943 = !DILocation(line: 3483, column: 8, scope: !6944)
!6944 = distinct !DILexicalBlock(scope: !6940, file: !3, line: 3483, column: 8)
!6945 = !DILocation(line: 3483, column: 23, scope: !6944)
!6946 = !DILocation(line: 3483, column: 8, scope: !6940)
!6947 = !DILocation(line: 3484, column: 6, scope: !6944)
!6948 = !DILocation(line: 3486, column: 4, scope: !6940)
!6949 = !DILocation(line: 3488, column: 25, scope: !6950)
!6950 = distinct !DILexicalBlock(scope: !6940, file: !3, line: 3488, column: 8)
!6951 = !DILocation(line: 3488, column: 45, scope: !6950)
!6952 = !DILocation(line: 3488, column: 8, scope: !6950)
!6953 = !DILocation(line: 3489, column: 8, scope: !6950)
!6954 = !DILocation(line: 3489, column: 28, scope: !6950)
!6955 = !DILocation(line: 3489, column: 48, scope: !6950)
!6956 = !DILocation(line: 3489, column: 11, scope: !6950)
!6957 = !DILocation(line: 3488, column: 8, scope: !6940)
!6958 = !DILocation(line: 3490, column: 6, scope: !6950)
!6959 = !DILocation(line: 3491, column: 2, scope: !6940)
!6960 = !DILocation(line: 3479, column: 46, scope: !6935)
!6961 = !DILocation(line: 3479, column: 7, scope: !6935)
!6962 = distinct !{!6962, !6938, !6963}
!6963 = !DILocation(line: 3491, column: 2, scope: !6932)
!6964 = !DILocation(line: 3494, column: 3, scope: !6882)
!6965 = !DILocation(line: 3495, column: 1, scope: !6882)
!6966 = distinct !DISubprogram(name: "gate_handle_peephole2", scope: !3, file: !3, line: 3498, type: !2025, scopeLine: 3499, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!6967 = !DILocation(line: 3500, column: 11, scope: !6966)
!6968 = !DILocation(line: 3500, column: 20, scope: !6966)
!6969 = !DILocation(line: 3500, column: 24, scope: !6966)
!6970 = !DILocation(line: 3500, column: 27, scope: !6966)
!6971 = !DILocation(line: 0, scope: !6966)
!6972 = !DILocation(line: 3500, column: 10, scope: !6966)
!6973 = !DILocation(line: 3500, column: 3, scope: !6966)
!6974 = distinct !DISubprogram(name: "rest_of_handle_peephole2", scope: !3, file: !3, line: 3504, type: !2029, scopeLine: 3505, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!6975 = !DILocation(line: 3507, column: 3, scope: !6974)
!6976 = !DILocation(line: 3509, column: 3, scope: !6974)
!6977 = distinct !DISubprogram(name: "rest_of_handle_split_all_insns", scope: !3, file: !3, line: 3533, type: !2029, scopeLine: 3534, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!6978 = !DILocation(line: 3535, column: 3, scope: !6977)
!6979 = !DILocation(line: 3536, column: 3, scope: !6977)
!6980 = distinct !DISubprogram(name: "rest_of_handle_split_after_reload", scope: !3, file: !3, line: 3559, type: !2029, scopeLine: 3560, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!6981 = !DILocation(line: 3565, column: 5, scope: !6980)
!6982 = !DILocation(line: 3566, column: 3, scope: !6980)
!6983 = distinct !DISubprogram(name: "gate_handle_split_before_regstack", scope: !3, file: !3, line: 3589, type: !2025, scopeLine: 3590, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!6984 = !DILocation(line: 3597, column: 11, scope: !6983)
!6985 = !DILocation(line: 3597, column: 20, scope: !6983)
!6986 = !DILocation(line: 3597, column: 24, scope: !6983)
!6987 = !DILocation(line: 3597, column: 23, scope: !6983)
!6988 = !DILocation(line: 0, scope: !6983)
!6989 = !DILocation(line: 3597, column: 10, scope: !6983)
!6990 = !DILocation(line: 3597, column: 3, scope: !6983)
!6991 = distinct !DISubprogram(name: "rest_of_handle_split_before_regstack", scope: !3, file: !3, line: 3607, type: !2029, scopeLine: 3608, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!6992 = !DILocation(line: 3609, column: 3, scope: !6991)
!6993 = !DILocation(line: 3610, column: 3, scope: !6991)
!6994 = distinct !DISubprogram(name: "gate_handle_split_before_sched2", scope: !3, file: !3, line: 3633, type: !2025, scopeLine: 3634, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!6995 = !DILocation(line: 3636, column: 10, scope: !6994)
!6996 = !DILocation(line: 3636, column: 19, scope: !6994)
!6997 = !DILocation(line: 3636, column: 23, scope: !6994)
!6998 = !DILocation(line: 3636, column: 26, scope: !6994)
!6999 = !DILocation(line: 0, scope: !6994)
!7000 = !DILocation(line: 3636, column: 3, scope: !6994)
!7001 = distinct !DISubprogram(name: "rest_of_handle_split_before_sched2", scope: !3, file: !3, line: 3643, type: !2029, scopeLine: 3644, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!7002 = !DILocation(line: 3646, column: 3, scope: !7001)
!7003 = !DILocation(line: 3648, column: 3, scope: !7001)
!7004 = distinct !DISubprogram(name: "gate_do_final_split", scope: !3, file: !3, line: 3674, type: !2025, scopeLine: 3675, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!7005 = !DILocation(line: 3679, column: 3, scope: !7004)
!7006 = distinct !DISubprogram(name: "simplify_while_replacing", scope: !3, file: !3, line: 532, type: !7007, scopeLine: 534, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!7007 = !DISubroutineType(types: !7008)
!7008 = !{null, !899, !900, !900, !5}
!7009 = !DILocalVariable(name: "loc", arg: 1, scope: !7006, file: !3, line: 532, type: !899)
!7010 = !DILocation(line: 532, column: 32, scope: !7006)
!7011 = !DILocalVariable(name: "to", arg: 2, scope: !7006, file: !3, line: 532, type: !900)
!7012 = !DILocation(line: 532, column: 41, scope: !7006)
!7013 = !DILocalVariable(name: "object", arg: 3, scope: !7006, file: !3, line: 532, type: !900)
!7014 = !DILocation(line: 532, column: 49, scope: !7006)
!7015 = !DILocalVariable(name: "op0_mode", arg: 4, scope: !7006, file: !3, line: 533, type: !5)
!7016 = !DILocation(line: 533, column: 45, scope: !7006)
!7017 = !DILocalVariable(name: "x", scope: !7006, file: !3, line: 535, type: !900)
!7018 = !DILocation(line: 535, column: 7, scope: !7006)
!7019 = !DILocation(line: 535, column: 12, scope: !7006)
!7020 = !DILocation(line: 535, column: 11, scope: !7006)
!7021 = !DILocalVariable(name: "code", scope: !7006, file: !3, line: 536, type: !377)
!7022 = !DILocation(line: 536, column: 17, scope: !7006)
!7023 = !DILocation(line: 536, column: 24, scope: !7006)
!7024 = !DILocalVariable(name: "new_rtx", scope: !7006, file: !3, line: 537, type: !900)
!7025 = !DILocation(line: 537, column: 7, scope: !7006)
!7026 = !DILocation(line: 539, column: 7, scope: !7027)
!7027 = distinct !DILexicalBlock(scope: !7006, file: !3, line: 539, column: 7)
!7028 = !DILocation(line: 540, column: 7, scope: !7027)
!7029 = !DILocation(line: 540, column: 39, scope: !7027)
!7030 = !DILocation(line: 540, column: 52, scope: !7027)
!7031 = !DILocation(line: 540, column: 10, scope: !7027)
!7032 = !DILocation(line: 539, column: 7, scope: !7006)
!7033 = !DILocation(line: 542, column: 32, scope: !7034)
!7034 = distinct !DILexicalBlock(scope: !7027, file: !3, line: 541, column: 5)
!7035 = !DILocation(line: 542, column: 40, scope: !7034)
!7036 = !DILocation(line: 543, column: 11, scope: !7034)
!7037 = !DILocation(line: 542, column: 7, scope: !7034)
!7038 = !DILocation(line: 547, column: 12, scope: !7034)
!7039 = !DILocation(line: 547, column: 11, scope: !7034)
!7040 = !DILocation(line: 547, column: 9, scope: !7034)
!7041 = !DILocation(line: 548, column: 14, scope: !7034)
!7042 = !DILocation(line: 548, column: 12, scope: !7034)
!7043 = !DILocation(line: 549, column: 5, scope: !7034)
!7044 = !DILocation(line: 551, column: 11, scope: !7006)
!7045 = !DILocation(line: 551, column: 3, scope: !7006)
!7046 = !DILocation(line: 558, column: 11, scope: !7047)
!7047 = distinct !DILexicalBlock(scope: !7048, file: !3, line: 558, column: 11)
!7048 = distinct !DILexicalBlock(scope: !7006, file: !3, line: 552, column: 5)
!7049 = !DILocation(line: 558, column: 37, scope: !7047)
!7050 = !DILocation(line: 558, column: 40, scope: !7047)
!7051 = !DILocation(line: 558, column: 55, scope: !7047)
!7052 = !DILocation(line: 558, column: 52, scope: !7047)
!7053 = !DILocation(line: 558, column: 11, scope: !7048)
!7054 = !DILocation(line: 559, column: 19, scope: !7047)
!7055 = !DILocation(line: 559, column: 27, scope: !7047)
!7056 = !DILocation(line: 561, column: 12, scope: !7047)
!7057 = !DILocation(line: 561, column: 26, scope: !7047)
!7058 = !DILocation(line: 561, column: 39, scope: !7047)
!7059 = !DILocation(line: 560, column: 5, scope: !7047)
!7060 = !DILocation(line: 559, column: 2, scope: !7047)
!7061 = !DILocation(line: 562, column: 7, scope: !7048)
!7062 = !DILocation(line: 564, column: 11, scope: !7063)
!7063 = distinct !DILexicalBlock(scope: !7048, file: !3, line: 564, column: 11)
!7064 = !DILocation(line: 565, column: 4, scope: !7063)
!7065 = !DILocation(line: 565, column: 7, scope: !7063)
!7066 = !DILocation(line: 565, column: 30, scope: !7063)
!7067 = !DILocation(line: 564, column: 11, scope: !7048)
!7068 = !DILocation(line: 566, column: 19, scope: !7063)
!7069 = !DILocation(line: 566, column: 27, scope: !7063)
!7070 = !DILocation(line: 568, column: 12, scope: !7063)
!7071 = !DILocation(line: 568, column: 26, scope: !7063)
!7072 = !DILocation(line: 570, column: 12, scope: !7063)
!7073 = !DILocation(line: 570, column: 26, scope: !7063)
!7074 = !DILocation(line: 571, column: 12, scope: !7063)
!7075 = !DILocation(line: 569, column: 6, scope: !7063)
!7076 = !DILocation(line: 567, column: 5, scope: !7063)
!7077 = !DILocation(line: 566, column: 2, scope: !7063)
!7078 = !DILocation(line: 572, column: 7, scope: !7048)
!7079 = !DILocation(line: 575, column: 11, scope: !7080)
!7080 = distinct !DILexicalBlock(scope: !7048, file: !3, line: 575, column: 11)
!7081 = !DILocation(line: 575, column: 34, scope: !7080)
!7082 = !DILocation(line: 575, column: 11, scope: !7048)
!7083 = !DILocation(line: 577, column: 34, scope: !7084)
!7084 = distinct !DILexicalBlock(scope: !7080, file: !3, line: 576, column: 2)
!7085 = !DILocation(line: 577, column: 40, scope: !7084)
!7086 = !DILocation(line: 577, column: 54, scope: !7084)
!7087 = !DILocation(line: 578, column: 9, scope: !7084)
!7088 = !DILocation(line: 577, column: 14, scope: !7084)
!7089 = !DILocation(line: 577, column: 12, scope: !7084)
!7090 = !DILocation(line: 581, column: 9, scope: !7091)
!7091 = distinct !DILexicalBlock(scope: !7084, file: !3, line: 581, column: 8)
!7092 = !DILocation(line: 581, column: 8, scope: !7084)
!7093 = !DILocation(line: 582, column: 16, scope: !7091)
!7094 = !DILocation(line: 582, column: 14, scope: !7091)
!7095 = !DILocation(line: 582, column: 6, scope: !7091)
!7096 = !DILocation(line: 583, column: 21, scope: !7084)
!7097 = !DILocation(line: 583, column: 29, scope: !7084)
!7098 = !DILocation(line: 583, column: 34, scope: !7084)
!7099 = !DILocation(line: 583, column: 4, scope: !7084)
!7100 = !DILocation(line: 584, column: 2, scope: !7084)
!7101 = !DILocation(line: 585, column: 7, scope: !7048)
!7102 = !DILocation(line: 588, column: 34, scope: !7048)
!7103 = !DILocation(line: 588, column: 48, scope: !7048)
!7104 = !DILocation(line: 588, column: 64, scope: !7048)
!7105 = !DILocation(line: 589, column: 9, scope: !7048)
!7106 = !DILocation(line: 588, column: 17, scope: !7048)
!7107 = !DILocation(line: 588, column: 15, scope: !7048)
!7108 = !DILocation(line: 592, column: 12, scope: !7109)
!7109 = distinct !DILexicalBlock(scope: !7048, file: !3, line: 592, column: 11)
!7110 = !DILocation(line: 592, column: 20, scope: !7109)
!7111 = !DILocation(line: 592, column: 23, scope: !7109)
!7112 = !DILocation(line: 592, column: 49, scope: !7109)
!7113 = !DILocation(line: 592, column: 11, scope: !7048)
!7114 = !DILocation(line: 593, column: 12, scope: !7109)
!7115 = !DILocation(line: 593, column: 10, scope: !7109)
!7116 = !DILocation(line: 593, column: 2, scope: !7109)
!7117 = !DILocation(line: 594, column: 11, scope: !7118)
!7118 = distinct !DILexicalBlock(scope: !7048, file: !3, line: 594, column: 11)
!7119 = !DILocation(line: 594, column: 11, scope: !7048)
!7120 = !DILocation(line: 595, column: 19, scope: !7118)
!7121 = !DILocation(line: 595, column: 27, scope: !7118)
!7122 = !DILocation(line: 595, column: 32, scope: !7118)
!7123 = !DILocation(line: 595, column: 2, scope: !7118)
!7124 = !DILocation(line: 596, column: 7, scope: !7048)
!7125 = !DILocation(line: 604, column: 11, scope: !7126)
!7126 = distinct !DILexicalBlock(scope: !7048, file: !3, line: 604, column: 11)
!7127 = !DILocation(line: 605, column: 4, scope: !7126)
!7128 = !DILocation(line: 605, column: 7, scope: !7126)
!7129 = !DILocation(line: 606, column: 4, scope: !7126)
!7130 = !DILocation(line: 606, column: 7, scope: !7126)
!7131 = !DILocation(line: 607, column: 4, scope: !7126)
!7132 = !DILocation(line: 607, column: 34, scope: !7126)
!7133 = !DILocation(line: 607, column: 8, scope: !7126)
!7134 = !DILocation(line: 608, column: 4, scope: !7126)
!7135 = !DILocation(line: 608, column: 8, scope: !7126)
!7136 = !DILocation(line: 604, column: 11, scope: !7048)
!7137 = !DILocalVariable(name: "wanted_mode", scope: !7138, file: !3, line: 610, type: !5)
!7138 = distinct !DILexicalBlock(scope: !7126, file: !3, line: 609, column: 2)
!7139 = !DILocation(line: 610, column: 22, scope: !7138)
!7140 = !DILocalVariable(name: "is_mode", scope: !7138, file: !3, line: 611, type: !5)
!7141 = !DILocation(line: 611, column: 22, scope: !7138)
!7142 = !DILocation(line: 611, column: 32, scope: !7138)
!7143 = !DILocalVariable(name: "pos", scope: !7138, file: !3, line: 612, type: !924)
!7144 = !DILocation(line: 612, column: 8, scope: !7138)
!7145 = !DILocation(line: 612, column: 14, scope: !7138)
!7146 = !DILocation(line: 614, column: 8, scope: !7147)
!7147 = distinct !DILexicalBlock(scope: !7138, file: !3, line: 614, column: 8)
!7148 = !DILocation(line: 614, column: 21, scope: !7147)
!7149 = !DILocation(line: 614, column: 8, scope: !7138)
!7150 = !DILocalVariable(name: "new_mode", scope: !7151, file: !3, line: 616, type: !5)
!7151 = distinct !DILexicalBlock(scope: !7147, file: !3, line: 615, column: 6)
!7152 = !DILocation(line: 616, column: 26, scope: !7151)
!7153 = !DILocation(line: 617, column: 5, scope: !7151)
!7154 = !DILocation(line: 618, column: 12, scope: !7155)
!7155 = distinct !DILexicalBlock(scope: !7151, file: !3, line: 618, column: 12)
!7156 = !DILocation(line: 618, column: 21, scope: !7155)
!7157 = !DILocation(line: 618, column: 12, scope: !7151)
!7158 = !DILocation(line: 619, column: 17, scope: !7155)
!7159 = !DILocation(line: 619, column: 15, scope: !7155)
!7160 = !DILocation(line: 619, column: 3, scope: !7155)
!7161 = !DILocation(line: 620, column: 6, scope: !7151)
!7162 = !DILocation(line: 621, column: 13, scope: !7163)
!7163 = distinct !DILexicalBlock(scope: !7147, file: !3, line: 621, column: 13)
!7164 = !DILocation(line: 621, column: 26, scope: !7163)
!7165 = !DILocation(line: 621, column: 13, scope: !7147)
!7166 = !DILocalVariable(name: "new_mode", scope: !7167, file: !3, line: 623, type: !5)
!7167 = distinct !DILexicalBlock(scope: !7163, file: !3, line: 622, column: 6)
!7168 = !DILocation(line: 623, column: 26, scope: !7167)
!7169 = !DILocation(line: 624, column: 5, scope: !7167)
!7170 = !DILocation(line: 625, column: 12, scope: !7171)
!7171 = distinct !DILexicalBlock(scope: !7167, file: !3, line: 625, column: 12)
!7172 = !DILocation(line: 625, column: 21, scope: !7171)
!7173 = !DILocation(line: 625, column: 12, scope: !7167)
!7174 = !DILocation(line: 626, column: 17, scope: !7171)
!7175 = !DILocation(line: 626, column: 15, scope: !7171)
!7176 = !DILocation(line: 626, column: 3, scope: !7171)
!7177 = !DILocation(line: 627, column: 6, scope: !7167)
!7178 = !DILocation(line: 630, column: 8, scope: !7179)
!7179 = distinct !DILexicalBlock(scope: !7138, file: !3, line: 630, column: 8)
!7180 = !DILocation(line: 630, column: 20, scope: !7179)
!7181 = !DILocation(line: 631, column: 8, scope: !7179)
!7182 = !DILocation(line: 631, column: 11, scope: !7179)
!7183 = !DILocation(line: 631, column: 41, scope: !7179)
!7184 = !DILocation(line: 631, column: 39, scope: !7179)
!7185 = !DILocation(line: 630, column: 8, scope: !7138)
!7186 = !DILocalVariable(name: "offset", scope: !7187, file: !3, line: 633, type: !924)
!7187 = distinct !DILexicalBlock(scope: !7179, file: !3, line: 632, column: 6)
!7188 = !DILocation(line: 633, column: 12, scope: !7187)
!7189 = !DILocation(line: 633, column: 21, scope: !7187)
!7190 = !DILocation(line: 633, column: 25, scope: !7187)
!7191 = !DILocalVariable(name: "newmem", scope: !7187, file: !3, line: 634, type: !900)
!7192 = !DILocation(line: 634, column: 12, scope: !7187)
!7193 = !DILocation(line: 643, column: 15, scope: !7187)
!7194 = !DILocation(line: 643, column: 12, scope: !7187)
!7195 = !DILocation(line: 645, column: 17, scope: !7187)
!7196 = !DILocation(line: 645, column: 15, scope: !7187)
!7197 = !DILocation(line: 647, column: 25, scope: !7187)
!7198 = !DILocation(line: 647, column: 34, scope: !7187)
!7199 = !DILocation(line: 647, column: 47, scope: !7187)
!7200 = !DILocation(line: 647, column: 8, scope: !7187)
!7201 = !DILocation(line: 648, column: 25, scope: !7187)
!7202 = !DILocation(line: 648, column: 34, scope: !7187)
!7203 = !DILocation(line: 648, column: 47, scope: !7187)
!7204 = !DILocation(line: 648, column: 8, scope: !7187)
!7205 = !DILocation(line: 649, column: 6, scope: !7187)
!7206 = !DILocation(line: 650, column: 2, scope: !7138)
!7207 = !DILocation(line: 652, column: 7, scope: !7048)
!7208 = !DILocation(line: 655, column: 7, scope: !7048)
!7209 = !DILocation(line: 657, column: 1, scope: !7006)
!7210 = distinct !DISubprogram(name: "end_hard_regno", scope: !6118, file: !6118, line: 290, type: !7211, scopeLine: 291, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!7211 = !DISubroutineType(types: !7212)
!7212 = !{!7, !5, !7}
!7213 = !DILocalVariable(name: "mode", arg: 1, scope: !7210, file: !6118, line: 290, type: !5)
!7214 = !DILocation(line: 290, column: 35, scope: !7210)
!7215 = !DILocalVariable(name: "regno", arg: 2, scope: !7210, file: !6118, line: 290, type: !7)
!7216 = !DILocation(line: 290, column: 54, scope: !7210)
!7217 = !DILocation(line: 292, column: 10, scope: !7210)
!7218 = !DILocation(line: 292, column: 35, scope: !7210)
!7219 = !DILocation(line: 292, column: 18, scope: !7210)
!7220 = !DILocation(line: 292, column: 48, scope: !7210)
!7221 = !DILocation(line: 292, column: 16, scope: !7210)
!7222 = !DILocation(line: 292, column: 3, scope: !7210)
!7223 = distinct !DISubprogram(name: "peephole2_optimize", scope: !3, file: !3, line: 3110, type: !2130, scopeLine: 3111, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!7224 = !DILocalVariable(name: "insn", scope: !7223, file: !3, line: 3112, type: !900)
!7225 = !DILocation(line: 3112, column: 7, scope: !7223)
!7226 = !DILocalVariable(name: "prev", scope: !7223, file: !3, line: 3112, type: !900)
!7227 = !DILocation(line: 3112, column: 13, scope: !7223)
!7228 = !DILocalVariable(name: "live", scope: !7223, file: !3, line: 3113, type: !1998)
!7229 = !DILocation(line: 3113, column: 10, scope: !7223)
!7230 = !DILocalVariable(name: "i", scope: !7223, file: !3, line: 3114, type: !924)
!7231 = !DILocation(line: 3114, column: 7, scope: !7223)
!7232 = !DILocalVariable(name: "bb", scope: !7223, file: !3, line: 3115, type: !1280)
!7233 = !DILocation(line: 3115, column: 15, scope: !7223)
!7234 = !DILocalVariable(name: "do_cleanup_cfg", scope: !7223, file: !3, line: 3116, type: !1135)
!7235 = !DILocation(line: 3116, column: 8, scope: !7223)
!7236 = !DILocalVariable(name: "do_rebuild_jump_labels", scope: !7223, file: !3, line: 3117, type: !1135)
!7237 = !DILocation(line: 3117, column: 8, scope: !7223)
!7238 = !DILocation(line: 3119, column: 3, scope: !7223)
!7239 = !DILocation(line: 3120, column: 3, scope: !7223)
!7240 = !DILocation(line: 3123, column: 10, scope: !7241)
!7241 = distinct !DILexicalBlock(scope: !7223, file: !3, line: 3123, column: 3)
!7242 = !DILocation(line: 3123, column: 8, scope: !7241)
!7243 = !DILocation(line: 3123, column: 15, scope: !7244)
!7244 = distinct !DILexicalBlock(scope: !7241, file: !3, line: 3123, column: 3)
!7245 = !DILocation(line: 3123, column: 17, scope: !7244)
!7246 = !DILocation(line: 3123, column: 3, scope: !7241)
!7247 = !DILocation(line: 3124, column: 38, scope: !7244)
!7248 = !DILocation(line: 3124, column: 21, scope: !7244)
!7249 = !DILocation(line: 3124, column: 5, scope: !7244)
!7250 = !DILocation(line: 3124, column: 24, scope: !7244)
!7251 = !DILocation(line: 3124, column: 36, scope: !7244)
!7252 = !DILocation(line: 3123, column: 44, scope: !7244)
!7253 = !DILocation(line: 3123, column: 3, scope: !7244)
!7254 = distinct !{!7254, !7246, !7255}
!7255 = !DILocation(line: 3124, column: 38, scope: !7241)
!7256 = !DILocation(line: 3125, column: 10, scope: !7223)
!7257 = !DILocation(line: 3125, column: 8, scope: !7223)
!7258 = !DILocation(line: 3127, column: 3, scope: !7259)
!7259 = distinct !DILexicalBlock(scope: !7223, file: !3, line: 3127, column: 3)
!7260 = !DILocation(line: 3127, column: 3, scope: !7261)
!7261 = distinct !DILexicalBlock(scope: !7259, file: !3, line: 3127, column: 3)
!7262 = !DILocation(line: 3129, column: 27, scope: !7263)
!7263 = distinct !DILexicalBlock(scope: !7261, file: !3, line: 3128, column: 5)
!7264 = !DILocation(line: 3129, column: 7, scope: !7263)
!7265 = !DILocation(line: 3132, column: 20, scope: !7263)
!7266 = !DILocation(line: 3132, column: 26, scope: !7263)
!7267 = !DILocation(line: 3132, column: 7, scope: !7263)
!7268 = !DILocation(line: 3133, column: 41, scope: !7263)
!7269 = !DILocation(line: 3133, column: 45, scope: !7263)
!7270 = !DILocation(line: 3133, column: 7, scope: !7263)
!7271 = !DILocation(line: 3134, column: 27, scope: !7263)
!7272 = !DILocation(line: 3134, column: 7, scope: !7263)
!7273 = !DILocation(line: 3136, column: 19, scope: !7274)
!7274 = distinct !DILexicalBlock(scope: !7263, file: !3, line: 3136, column: 7)
!7275 = !DILocation(line: 3136, column: 17, scope: !7274)
!7276 = !DILocation(line: 3136, column: 12, scope: !7274)
!7277 = !DILocation(line: 3138, column: 11, scope: !7278)
!7278 = distinct !DILexicalBlock(scope: !7279, file: !3, line: 3137, column: 2)
!7279 = distinct !DILexicalBlock(scope: !7274, file: !3, line: 3136, column: 7)
!7280 = !DILocation(line: 3138, column: 9, scope: !7278)
!7281 = !DILocation(line: 3139, column: 8, scope: !7282)
!7282 = distinct !DILexicalBlock(scope: !7278, file: !3, line: 3139, column: 8)
!7283 = !DILocation(line: 3139, column: 8, scope: !7278)
!7284 = !DILocalVariable(name: "attempt", scope: !7285, file: !3, line: 3141, type: !900)
!7285 = distinct !DILexicalBlock(scope: !7282, file: !3, line: 3140, column: 6)
!7286 = !DILocation(line: 3141, column: 12, scope: !7285)
!7287 = !DILocalVariable(name: "before_try", scope: !7285, file: !3, line: 3141, type: !900)
!7288 = !DILocation(line: 3141, column: 21, scope: !7285)
!7289 = !DILocalVariable(name: "x", scope: !7285, file: !3, line: 3141, type: !900)
!7290 = !DILocation(line: 3141, column: 33, scope: !7285)
!7291 = !DILocalVariable(name: "match_len", scope: !7285, file: !3, line: 3142, type: !924)
!7292 = !DILocation(line: 3142, column: 12, scope: !7285)
!7293 = !DILocalVariable(name: "note", scope: !7285, file: !3, line: 3143, type: !900)
!7294 = !DILocation(line: 3143, column: 12, scope: !7285)
!7295 = !DILocalVariable(name: "was_call", scope: !7285, file: !3, line: 3144, type: !1135)
!7296 = !DILocation(line: 3144, column: 13, scope: !7285)
!7297 = !DILocation(line: 3147, column: 12, scope: !7298)
!7298 = distinct !DILexicalBlock(scope: !7285, file: !3, line: 3147, column: 12)
!7299 = !DILocation(line: 3147, column: 28, scope: !7298)
!7300 = !DILocation(line: 3147, column: 12, scope: !7285)
!7301 = !DILocation(line: 3148, column: 17, scope: !7298)
!7302 = !DILocation(line: 3148, column: 3, scope: !7298)
!7303 = !DILocation(line: 3149, column: 12, scope: !7304)
!7304 = distinct !DILexicalBlock(scope: !7285, file: !3, line: 3149, column: 12)
!7305 = !DILocation(line: 3149, column: 32, scope: !7304)
!7306 = !DILocation(line: 3150, column: 5, scope: !7304)
!7307 = !DILocation(line: 3150, column: 24, scope: !7304)
!7308 = !DILocation(line: 3150, column: 8, scope: !7304)
!7309 = !DILocation(line: 3150, column: 39, scope: !7304)
!7310 = !DILocation(line: 3150, column: 44, scope: !7304)
!7311 = !DILocation(line: 3149, column: 12, scope: !7285)
!7312 = !DILocation(line: 3151, column: 22, scope: !7304)
!7313 = !DILocation(line: 3151, column: 3, scope: !7304)
!7314 = !DILocation(line: 3152, column: 46, scope: !7285)
!7315 = !DILocation(line: 3152, column: 24, scope: !7285)
!7316 = !DILocation(line: 3152, column: 8, scope: !7285)
!7317 = !DILocation(line: 3152, column: 39, scope: !7285)
!7318 = !DILocation(line: 3152, column: 44, scope: !7285)
!7319 = !DILocation(line: 3153, column: 40, scope: !7285)
!7320 = !DILocation(line: 3153, column: 44, scope: !7285)
!7321 = !DILocation(line: 3153, column: 50, scope: !7285)
!7322 = !DILocation(line: 3153, column: 8, scope: !7285)
!7323 = !DILocation(line: 3154, column: 8, scope: !7285)
!7324 = !DILocation(line: 3156, column: 12, scope: !7325)
!7325 = distinct !DILexicalBlock(scope: !7285, file: !3, line: 3156, column: 12)
!7326 = !DILocation(line: 3156, column: 12, scope: !7285)
!7327 = !DILocation(line: 3161, column: 25, scope: !7328)
!7328 = distinct !DILexicalBlock(scope: !7325, file: !3, line: 3157, column: 3)
!7329 = !DILocation(line: 3161, column: 5, scope: !7328)
!7330 = !DILocation(line: 3162, column: 13, scope: !7328)
!7331 = !DILocation(line: 3163, column: 3, scope: !7328)
!7332 = !DILocation(line: 3166, column: 30, scope: !7325)
!7333 = !DILocation(line: 3166, column: 46, scope: !7325)
!7334 = !DILocation(line: 3166, column: 13, scope: !7325)
!7335 = !DILocation(line: 3166, column: 11, scope: !7325)
!7336 = !DILocation(line: 3168, column: 12, scope: !7337)
!7337 = distinct !DILexicalBlock(scope: !7285, file: !3, line: 3168, column: 12)
!7338 = !DILocation(line: 3168, column: 20, scope: !7337)
!7339 = !DILocation(line: 3168, column: 12, scope: !7285)
!7340 = !DILocation(line: 3173, column: 12, scope: !7341)
!7341 = distinct !DILexicalBlock(scope: !7342, file: !3, line: 3173, column: 5)
!7342 = distinct !DILexicalBlock(scope: !7337, file: !3, line: 3169, column: 3)
!7343 = !DILocation(line: 3173, column: 10, scope: !7341)
!7344 = !DILocation(line: 3173, column: 17, scope: !7345)
!7345 = distinct !DILexicalBlock(scope: !7341, file: !3, line: 3173, column: 5)
!7346 = !DILocation(line: 3173, column: 22, scope: !7345)
!7347 = !DILocation(line: 3173, column: 19, scope: !7345)
!7348 = !DILocation(line: 3173, column: 5, scope: !7341)
!7349 = !DILocalVariable(name: "j", scope: !7350, file: !3, line: 3175, type: !924)
!7350 = distinct !DILexicalBlock(scope: !7345, file: !3, line: 3174, column: 7)
!7351 = !DILocation(line: 3175, column: 13, scope: !7350)
!7352 = !DILocalVariable(name: "old_insn", scope: !7350, file: !3, line: 3176, type: !900)
!7353 = !DILocation(line: 3176, column: 13, scope: !7350)
!7354 = !DILocalVariable(name: "new_insn", scope: !7350, file: !3, line: 3176, type: !900)
!7355 = !DILocation(line: 3176, column: 23, scope: !7350)
!7356 = !DILocalVariable(name: "note", scope: !7350, file: !3, line: 3176, type: !900)
!7357 = !DILocation(line: 3176, column: 33, scope: !7350)
!7358 = !DILocation(line: 3178, column: 13, scope: !7350)
!7359 = !DILocation(line: 3178, column: 17, scope: !7350)
!7360 = !DILocation(line: 3178, column: 15, scope: !7350)
!7361 = !DILocation(line: 3178, column: 11, scope: !7350)
!7362 = !DILocation(line: 3179, column: 13, scope: !7363)
!7363 = distinct !DILexicalBlock(scope: !7350, file: !3, line: 3179, column: 13)
!7364 = !DILocation(line: 3179, column: 15, scope: !7363)
!7365 = !DILocation(line: 3179, column: 13, scope: !7350)
!7366 = !DILocation(line: 3180, column: 6, scope: !7363)
!7367 = !DILocation(line: 3180, column: 4, scope: !7363)
!7368 = !DILocation(line: 3181, column: 36, scope: !7350)
!7369 = !DILocation(line: 3181, column: 20, scope: !7350)
!7370 = !DILocation(line: 3181, column: 39, scope: !7350)
!7371 = !DILocation(line: 3181, column: 18, scope: !7350)
!7372 = !DILocation(line: 3182, column: 14, scope: !7373)
!7373 = distinct !DILexicalBlock(scope: !7350, file: !3, line: 3182, column: 13)
!7374 = !DILocation(line: 3182, column: 13, scope: !7350)
!7375 = !DILocation(line: 3183, column: 4, scope: !7373)
!7376 = !DILocation(line: 3184, column: 18, scope: !7350)
!7377 = !DILocation(line: 3186, column: 20, scope: !7350)
!7378 = !DILocation(line: 3186, column: 18, scope: !7350)
!7379 = !DILocation(line: 3187, column: 9, scope: !7350)
!7380 = !DILocation(line: 3187, column: 16, scope: !7350)
!7381 = !DILocation(line: 3187, column: 25, scope: !7350)
!7382 = !DILocation(line: 3189, column: 10, scope: !7383)
!7383 = distinct !DILexicalBlock(scope: !7384, file: !3, line: 3189, column: 10)
!7384 = distinct !DILexicalBlock(scope: !7350, file: !3, line: 3188, column: 4)
!7385 = !DILocation(line: 3189, column: 10, scope: !7384)
!7386 = !DILocation(line: 3190, column: 8, scope: !7383)
!7387 = !DILocation(line: 3191, column: 17, scope: !7384)
!7388 = !DILocation(line: 3191, column: 15, scope: !7384)
!7389 = distinct !{!7389, !7379, !7390}
!7390 = !DILocation(line: 3192, column: 4, scope: !7350)
!7391 = !DILocation(line: 3194, column: 9, scope: !7350)
!7392 = !DILocation(line: 3197, column: 6, scope: !7350)
!7393 = !DILocation(line: 3196, column: 9, scope: !7350)
!7394 = !DILocation(line: 3197, column: 4, scope: !7350)
!7395 = !DILocation(line: 3199, column: 21, scope: !7396)
!7396 = distinct !DILexicalBlock(scope: !7350, file: !3, line: 3199, column: 9)
!7397 = !DILocation(line: 3199, column: 19, scope: !7396)
!7398 = !DILocation(line: 3199, column: 14, scope: !7396)
!7399 = !DILocation(line: 3200, column: 7, scope: !7400)
!7400 = distinct !DILexicalBlock(scope: !7396, file: !3, line: 3199, column: 9)
!7401 = !DILocation(line: 3199, column: 9, scope: !7396)
!7402 = !DILocation(line: 3202, column: 12, scope: !7400)
!7403 = !DILocation(line: 3202, column: 4, scope: !7400)
!7404 = !DILocation(line: 3206, column: 22, scope: !7405)
!7405 = distinct !DILexicalBlock(scope: !7400, file: !3, line: 3203, column: 6)
!7406 = !DILocation(line: 3206, column: 32, scope: !7405)
!7407 = !DILocation(line: 3207, column: 8, scope: !7405)
!7408 = !DILocation(line: 3206, column: 8, scope: !7405)
!7409 = !DILocation(line: 3208, column: 8, scope: !7405)
!7410 = !DILocation(line: 3211, column: 8, scope: !7405)
!7411 = !DILocation(line: 3212, column: 6, scope: !7405)
!7412 = !DILocation(line: 3201, column: 14, scope: !7400)
!7413 = !DILocation(line: 3201, column: 12, scope: !7400)
!7414 = !DILocation(line: 3199, column: 9, scope: !7400)
!7415 = distinct !{!7415, !7401, !7416}
!7416 = !DILocation(line: 3212, column: 6, scope: !7396)
!7417 = !DILocation(line: 3215, column: 9, scope: !7350)
!7418 = !DILocation(line: 3215, column: 16, scope: !7350)
!7419 = !DILocation(line: 3215, column: 23, scope: !7350)
!7420 = !DILocation(line: 3215, column: 20, scope: !7350)
!7421 = !DILocation(line: 3217, column: 10, scope: !7422)
!7422 = distinct !DILexicalBlock(scope: !7350, file: !3, line: 3216, column: 4)
!7423 = !DILocation(line: 3217, column: 14, scope: !7422)
!7424 = !DILocation(line: 3217, column: 12, scope: !7422)
!7425 = !DILocation(line: 3217, column: 8, scope: !7422)
!7426 = !DILocation(line: 3218, column: 10, scope: !7427)
!7427 = distinct !DILexicalBlock(scope: !7422, file: !3, line: 3218, column: 10)
!7428 = !DILocation(line: 3218, column: 12, scope: !7427)
!7429 = !DILocation(line: 3218, column: 10, scope: !7422)
!7430 = !DILocation(line: 3219, column: 10, scope: !7427)
!7431 = !DILocation(line: 3219, column: 8, scope: !7427)
!7432 = !DILocation(line: 3220, column: 33, scope: !7422)
!7433 = !DILocation(line: 3220, column: 17, scope: !7422)
!7434 = !DILocation(line: 3220, column: 36, scope: !7422)
!7435 = !DILocation(line: 3220, column: 15, scope: !7422)
!7436 = !DILocation(line: 3221, column: 6, scope: !7422)
!7437 = distinct !{!7437, !7417, !7438}
!7438 = !DILocation(line: 3222, column: 4, scope: !7350)
!7439 = !DILocation(line: 3223, column: 9, scope: !7350)
!7440 = !DILocation(line: 3173, column: 33, scope: !7345)
!7441 = !DILocation(line: 3173, column: 5, scope: !7345)
!7442 = distinct !{!7442, !7348, !7443}
!7443 = !DILocation(line: 3224, column: 7, scope: !7341)
!7444 = !DILocation(line: 3226, column: 9, scope: !7342)
!7445 = !DILocation(line: 3226, column: 21, scope: !7342)
!7446 = !DILocation(line: 3226, column: 19, scope: !7342)
!7447 = !DILocation(line: 3226, column: 7, scope: !7342)
!7448 = !DILocation(line: 3227, column: 9, scope: !7449)
!7449 = distinct !DILexicalBlock(scope: !7342, file: !3, line: 3227, column: 9)
!7450 = !DILocation(line: 3227, column: 11, scope: !7449)
!7451 = !DILocation(line: 3227, column: 9, scope: !7342)
!7452 = !DILocation(line: 3228, column: 9, scope: !7449)
!7453 = !DILocation(line: 3228, column: 7, scope: !7449)
!7454 = !DILocation(line: 3230, column: 43, scope: !7342)
!7455 = !DILocation(line: 3230, column: 27, scope: !7342)
!7456 = !DILocation(line: 3230, column: 46, scope: !7342)
!7457 = !DILocation(line: 3230, column: 12, scope: !7342)
!7458 = !DILocation(line: 3230, column: 10, scope: !7342)
!7459 = !DILocation(line: 3234, column: 39, scope: !7342)
!7460 = !DILocation(line: 3235, column: 27, scope: !7342)
!7461 = !DILocation(line: 3235, column: 11, scope: !7342)
!7462 = !DILocation(line: 3235, column: 30, scope: !7342)
!7463 = !DILocation(line: 3236, column: 12, scope: !7342)
!7464 = !DILocation(line: 3234, column: 15, scope: !7342)
!7465 = !DILocation(line: 3234, column: 13, scope: !7342)
!7466 = !DILocation(line: 3237, column: 18, scope: !7342)
!7467 = !DILocation(line: 3237, column: 16, scope: !7342)
!7468 = !DILocation(line: 3238, column: 24, scope: !7342)
!7469 = !DILocation(line: 3238, column: 46, scope: !7342)
!7470 = !DILocation(line: 3238, column: 30, scope: !7342)
!7471 = !DILocation(line: 3238, column: 49, scope: !7342)
!7472 = !DILocation(line: 3238, column: 5, scope: !7342)
!7473 = !DILocation(line: 3241, column: 9, scope: !7474)
!7474 = distinct !DILexicalBlock(scope: !7342, file: !3, line: 3241, column: 9)
!7475 = !DILocation(line: 3241, column: 14, scope: !7474)
!7476 = !DILocation(line: 3241, column: 18, scope: !7474)
!7477 = !DILocation(line: 3241, column: 27, scope: !7474)
!7478 = !DILocation(line: 3241, column: 30, scope: !7474)
!7479 = !DILocation(line: 3241, column: 9, scope: !7342)
!7480 = !DILocalVariable(name: "eh_edge", scope: !7481, file: !3, line: 3243, type: !1297)
!7481 = distinct !DILexicalBlock(scope: !7474, file: !3, line: 3242, column: 7)
!7482 = !DILocation(line: 3243, column: 14, scope: !7481)
!7483 = !DILocalVariable(name: "ei", scope: !7481, file: !3, line: 3244, type: !7484)
!7484 = !DIDerivedType(tag: DW_TAG_typedef, name: "edge_iterator", file: !135, line: 682, baseType: !7485)
!7485 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !135, line: 679, size: 128, elements: !7486)
!7486 = !{!7487, !7488}
!7487 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !7485, file: !135, line: 680, baseType: !7, size: 32)
!7488 = !DIDerivedType(tag: DW_TAG_member, name: "container", scope: !7485, file: !135, line: 681, baseType: !7489, size: 64, offset: 64)
!7489 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1285, size: 64)
!7490 = !DILocation(line: 3244, column: 23, scope: !7481)
!7491 = !DILocation(line: 3246, column: 9, scope: !7492)
!7492 = distinct !DILexicalBlock(scope: !7481, file: !3, line: 3246, column: 9)
!7493 = !DILocation(line: 3246, column: 9, scope: !7494)
!7494 = distinct !DILexicalBlock(scope: !7492, file: !3, line: 3246, column: 9)
!7495 = !DILocation(line: 3247, column: 8, scope: !7496)
!7496 = distinct !DILexicalBlock(scope: !7494, file: !3, line: 3247, column: 8)
!7497 = !DILocation(line: 3247, column: 17, scope: !7496)
!7498 = !DILocation(line: 3247, column: 23, scope: !7496)
!7499 = !DILocation(line: 3247, column: 8, scope: !7494)
!7500 = !DILocation(line: 3248, column: 6, scope: !7496)
!7501 = !DILocation(line: 3247, column: 54, scope: !7496)
!7502 = distinct !{!7502, !7491, !7503}
!7503 = !DILocation(line: 3248, column: 6, scope: !7492)
!7504 = !DILocation(line: 3250, column: 13, scope: !7505)
!7505 = distinct !DILexicalBlock(scope: !7481, file: !3, line: 3250, column: 13)
!7506 = !DILocation(line: 3250, column: 13, scope: !7481)
!7507 = !DILocation(line: 3251, column: 38, scope: !7505)
!7508 = !DILocation(line: 3251, column: 44, scope: !7505)
!7509 = !DILocation(line: 3252, column: 10, scope: !7505)
!7510 = !DILocation(line: 3251, column: 4, scope: !7505)
!7511 = !DILocation(line: 3254, column: 13, scope: !7512)
!7512 = distinct !DILexicalBlock(scope: !7481, file: !3, line: 3254, column: 13)
!7513 = !DILocation(line: 3254, column: 13, scope: !7481)
!7514 = !DILocation(line: 3255, column: 13, scope: !7515)
!7515 = distinct !DILexicalBlock(scope: !7512, file: !3, line: 3255, column: 4)
!7516 = !DILocation(line: 3255, column: 11, scope: !7515)
!7517 = !DILocation(line: 3255, column: 9, scope: !7515)
!7518 = !DILocation(line: 3255, column: 23, scope: !7519)
!7519 = distinct !DILexicalBlock(scope: !7515, file: !3, line: 3255, column: 4)
!7520 = !DILocation(line: 3255, column: 28, scope: !7519)
!7521 = !DILocation(line: 3255, column: 25, scope: !7519)
!7522 = !DILocation(line: 3255, column: 4, scope: !7515)
!7523 = !DILocation(line: 3256, column: 10, scope: !7524)
!7524 = distinct !DILexicalBlock(scope: !7519, file: !3, line: 3256, column: 10)
!7525 = !DILocation(line: 3256, column: 15, scope: !7524)
!7526 = !DILocation(line: 3256, column: 12, scope: !7524)
!7527 = !DILocation(line: 3257, column: 10, scope: !7524)
!7528 = !DILocation(line: 3257, column: 34, scope: !7524)
!7529 = !DILocation(line: 3257, column: 14, scope: !7524)
!7530 = !DILocation(line: 3258, column: 7, scope: !7524)
!7531 = !DILocation(line: 3258, column: 29, scope: !7524)
!7532 = !DILocation(line: 3258, column: 10, scope: !7524)
!7533 = !DILocation(line: 3256, column: 10, scope: !7519)
!7534 = !DILocalVariable(name: "nfte", scope: !7535, file: !3, line: 3260, type: !1297)
!7535 = distinct !DILexicalBlock(scope: !7524, file: !3, line: 3259, column: 8)
!7536 = !DILocation(line: 3260, column: 15, scope: !7535)
!7537 = !DILocalVariable(name: "nehe", scope: !7535, file: !3, line: 3260, type: !1297)
!7538 = !DILocation(line: 3260, column: 21, scope: !7535)
!7539 = !DILocalVariable(name: "flags", scope: !7535, file: !3, line: 3261, type: !924)
!7540 = !DILocation(line: 3261, column: 14, scope: !7535)
!7541 = !DILocation(line: 3263, column: 30, scope: !7535)
!7542 = !DILocation(line: 3263, column: 34, scope: !7535)
!7543 = !DILocation(line: 3263, column: 17, scope: !7535)
!7544 = !DILocation(line: 3263, column: 15, scope: !7535)
!7545 = !DILocation(line: 3264, column: 19, scope: !7535)
!7546 = !DILocation(line: 3264, column: 28, scope: !7535)
!7547 = !DILocation(line: 3265, column: 12, scope: !7535)
!7548 = !DILocation(line: 3264, column: 16, scope: !7535)
!7549 = !DILocation(line: 3266, column: 14, scope: !7550)
!7550 = distinct !DILexicalBlock(scope: !7535, file: !3, line: 3266, column: 14)
!7551 = !DILocation(line: 3266, column: 14, scope: !7535)
!7552 = !DILocation(line: 3267, column: 11, scope: !7550)
!7553 = !DILocation(line: 3267, column: 5, scope: !7550)
!7554 = !DILocation(line: 3268, column: 28, scope: !7535)
!7555 = !DILocation(line: 3268, column: 34, scope: !7535)
!7556 = !DILocation(line: 3268, column: 39, scope: !7535)
!7557 = !DILocation(line: 3268, column: 48, scope: !7535)
!7558 = !DILocation(line: 3269, column: 7, scope: !7535)
!7559 = !DILocation(line: 3268, column: 17, scope: !7535)
!7560 = !DILocation(line: 3268, column: 15, scope: !7535)
!7561 = !DILocation(line: 3271, column: 30, scope: !7535)
!7562 = !DILocation(line: 3271, column: 39, scope: !7535)
!7563 = !DILocation(line: 3271, column: 10, scope: !7535)
!7564 = !DILocation(line: 3271, column: 16, scope: !7535)
!7565 = !DILocation(line: 3271, column: 28, scope: !7535)
!7566 = !DILocation(line: 3273, column: 26, scope: !7535)
!7567 = !DILocation(line: 3273, column: 32, scope: !7535)
!7568 = !DILocation(line: 3273, column: 24, scope: !7535)
!7569 = !DILocation(line: 3272, column: 10, scope: !7535)
!7570 = !DILocation(line: 3272, column: 16, scope: !7535)
!7571 = !DILocation(line: 3273, column: 5, scope: !7535)
!7572 = !DILocation(line: 3275, column: 46, scope: !7535)
!7573 = !DILocation(line: 3275, column: 52, scope: !7535)
!7574 = !DILocation(line: 3275, column: 28, scope: !7535)
!7575 = !DILocation(line: 3275, column: 25, scope: !7535)
!7576 = !DILocation(line: 3276, column: 15, scope: !7535)
!7577 = !DILocation(line: 3276, column: 21, scope: !7535)
!7578 = !DILocation(line: 3276, column: 13, scope: !7535)
!7579 = !DILocation(line: 3277, column: 20, scope: !7535)
!7580 = !DILocation(line: 3277, column: 18, scope: !7535)
!7581 = !DILocation(line: 3278, column: 8, scope: !7535)
!7582 = !DILocation(line: 3258, column: 31, scope: !7524)
!7583 = !DILocation(line: 3255, column: 45, scope: !7519)
!7584 = !DILocation(line: 3255, column: 43, scope: !7519)
!7585 = !DILocation(line: 3255, column: 4, scope: !7519)
!7586 = distinct !{!7586, !7522, !7587}
!7587 = !DILocation(line: 3278, column: 8, scope: !7515)
!7588 = !DILocation(line: 3282, column: 45, scope: !7481)
!7589 = !DILocation(line: 3282, column: 27, scope: !7481)
!7590 = !DILocation(line: 3282, column: 24, scope: !7481)
!7591 = !DILocation(line: 3283, column: 7, scope: !7481)
!7592 = !DILocation(line: 3285, column: 17, scope: !7593)
!7593 = distinct !DILexicalBlock(scope: !7342, file: !3, line: 3285, column: 9)
!7594 = !DILocation(line: 3285, column: 9, scope: !7593)
!7595 = !DILocation(line: 3285, column: 9, scope: !7342)
!7596 = !DILocation(line: 3287, column: 16, scope: !7597)
!7597 = distinct !DILexicalBlock(scope: !7598, file: !3, line: 3287, column: 9)
!7598 = distinct !DILexicalBlock(scope: !7593, file: !3, line: 3286, column: 7)
!7599 = !DILocation(line: 3287, column: 14, scope: !7597)
!7600 = !DILocation(line: 3287, column: 21, scope: !7601)
!7601 = distinct !DILexicalBlock(scope: !7597, file: !3, line: 3287, column: 9)
!7602 = !DILocation(line: 3287, column: 23, scope: !7601)
!7603 = !DILocation(line: 3287, column: 9, scope: !7597)
!7604 = !DILocation(line: 3288, column: 20, scope: !7601)
!7605 = !DILocation(line: 3288, column: 4, scope: !7601)
!7606 = !DILocation(line: 3288, column: 23, scope: !7601)
!7607 = !DILocation(line: 3288, column: 28, scope: !7601)
!7608 = !DILocation(line: 3287, column: 50, scope: !7601)
!7609 = !DILocation(line: 3287, column: 9, scope: !7601)
!7610 = distinct !{!7610, !7603, !7611}
!7611 = !DILocation(line: 3288, column: 30, scope: !7597)
!7612 = !DILocation(line: 3289, column: 47, scope: !7598)
!7613 = !DILocation(line: 3289, column: 25, scope: !7598)
!7614 = !DILocation(line: 3289, column: 9, scope: !7598)
!7615 = !DILocation(line: 3289, column: 40, scope: !7598)
!7616 = !DILocation(line: 3289, column: 45, scope: !7598)
!7617 = !DILocation(line: 3290, column: 29, scope: !7598)
!7618 = !DILocation(line: 3291, column: 7, scope: !7598)
!7619 = !DILocation(line: 3296, column: 13, scope: !7620)
!7620 = distinct !DILexicalBlock(scope: !7621, file: !3, line: 3296, column: 13)
!7621 = distinct !DILexicalBlock(scope: !7593, file: !3, line: 3293, column: 7)
!7622 = !DILocation(line: 3296, column: 17, scope: !7620)
!7623 = !DILocation(line: 3296, column: 13, scope: !7621)
!7624 = !DILocation(line: 3297, column: 6, scope: !7620)
!7625 = !DILocation(line: 3297, column: 4, scope: !7620)
!7626 = !DILocation(line: 3298, column: 22, scope: !7621)
!7627 = !DILocation(line: 3298, column: 44, scope: !7621)
!7628 = !DILocation(line: 3298, column: 28, scope: !7621)
!7629 = !DILocation(line: 3298, column: 47, scope: !7621)
!7630 = !DILocation(line: 3298, column: 9, scope: !7621)
!7631 = !DILocation(line: 3301, column: 13, scope: !7621)
!7632 = !DILocation(line: 3301, column: 11, scope: !7621)
!7633 = !DILocation(line: 3302, column: 9, scope: !7621)
!7634 = !DILocation(line: 3304, column: 10, scope: !7635)
!7635 = distinct !DILexicalBlock(scope: !7636, file: !3, line: 3304, column: 10)
!7636 = distinct !DILexicalBlock(scope: !7621, file: !3, line: 3303, column: 4)
!7637 = !DILocation(line: 3304, column: 10, scope: !7636)
!7638 = !DILocation(line: 3306, column: 14, scope: !7639)
!7639 = distinct !DILexicalBlock(scope: !7640, file: !3, line: 3306, column: 14)
!7640 = distinct !DILexicalBlock(scope: !7635, file: !3, line: 3305, column: 8)
!7641 = !DILocation(line: 3306, column: 18, scope: !7639)
!7642 = !DILocation(line: 3306, column: 14, scope: !7640)
!7643 = !DILocation(line: 3307, column: 7, scope: !7639)
!7644 = !DILocation(line: 3307, column: 5, scope: !7639)
!7645 = !DILocation(line: 3308, column: 14, scope: !7646)
!7646 = distinct !DILexicalBlock(scope: !7640, file: !3, line: 3308, column: 14)
!7647 = !DILocation(line: 3308, column: 34, scope: !7646)
!7648 = !DILocation(line: 3309, column: 7, scope: !7646)
!7649 = !DILocation(line: 3309, column: 26, scope: !7646)
!7650 = !DILocation(line: 3309, column: 10, scope: !7646)
!7651 = !DILocation(line: 3309, column: 29, scope: !7646)
!7652 = !DILocation(line: 3309, column: 34, scope: !7646)
!7653 = !DILocation(line: 3308, column: 14, scope: !7640)
!7654 = !DILocation(line: 3310, column: 24, scope: !7646)
!7655 = !DILocation(line: 3310, column: 5, scope: !7646)
!7656 = !DILocation(line: 3311, column: 36, scope: !7640)
!7657 = !DILocation(line: 3311, column: 26, scope: !7640)
!7658 = !DILocation(line: 3311, column: 10, scope: !7640)
!7659 = !DILocation(line: 3311, column: 29, scope: !7640)
!7660 = !DILocation(line: 3311, column: 34, scope: !7640)
!7661 = !DILocation(line: 3312, column: 26, scope: !7640)
!7662 = !DILocation(line: 3312, column: 10, scope: !7640)
!7663 = !DILocation(line: 3313, column: 42, scope: !7640)
!7664 = !DILocation(line: 3313, column: 46, scope: !7640)
!7665 = !DILocation(line: 3313, column: 49, scope: !7640)
!7666 = !DILocation(line: 3313, column: 10, scope: !7640)
!7667 = !DILocation(line: 3314, column: 39, scope: !7640)
!7668 = !DILocation(line: 3314, column: 23, scope: !7640)
!7669 = !DILocation(line: 3314, column: 42, scope: !7640)
!7670 = !DILocation(line: 3315, column: 9, scope: !7640)
!7671 = !DILocation(line: 3314, column: 10, scope: !7640)
!7672 = !DILocation(line: 3316, column: 8, scope: !7640)
!7673 = !DILocation(line: 3317, column: 10, scope: !7636)
!7674 = !DILocation(line: 3317, column: 8, scope: !7636)
!7675 = !DILocation(line: 3318, column: 4, scope: !7636)
!7676 = !DILocation(line: 3319, column: 16, scope: !7621)
!7677 = !DILocation(line: 3319, column: 21, scope: !7621)
!7678 = !DILocation(line: 3319, column: 18, scope: !7621)
!7679 = distinct !{!7679, !7633, !7680}
!7680 = !DILocation(line: 3319, column: 25, scope: !7621)
!7681 = !DILocation(line: 3321, column: 25, scope: !7621)
!7682 = !DILocation(line: 3321, column: 23, scope: !7621)
!7683 = !DILocation(line: 3326, column: 14, scope: !7684)
!7684 = distinct !DILexicalBlock(scope: !7342, file: !3, line: 3326, column: 5)
!7685 = !DILocation(line: 3326, column: 12, scope: !7684)
!7686 = !DILocation(line: 3326, column: 10, scope: !7684)
!7687 = !DILocation(line: 3326, column: 23, scope: !7688)
!7688 = distinct !DILexicalBlock(scope: !7684, file: !3, line: 3326, column: 5)
!7689 = !DILocation(line: 3326, column: 28, scope: !7688)
!7690 = !DILocation(line: 3326, column: 25, scope: !7688)
!7691 = !DILocation(line: 3326, column: 5, scope: !7684)
!7692 = !DILocation(line: 3327, column: 11, scope: !7693)
!7693 = distinct !DILexicalBlock(scope: !7688, file: !3, line: 3327, column: 11)
!7694 = !DILocation(line: 3327, column: 11, scope: !7688)
!7695 = !DILocation(line: 3329, column: 34, scope: !7696)
!7696 = distinct !DILexicalBlock(scope: !7693, file: !3, line: 3328, column: 9)
!7697 = !DILocation(line: 3330, column: 4, scope: !7696)
!7698 = !DILocation(line: 3326, column: 44, scope: !7688)
!7699 = !DILocation(line: 3326, column: 42, scope: !7688)
!7700 = !DILocation(line: 3326, column: 5, scope: !7688)
!7701 = distinct !{!7701, !7691, !7702}
!7702 = !DILocation(line: 3331, column: 9, scope: !7684)
!7703 = !DILocation(line: 3332, column: 3, scope: !7342)
!7704 = !DILocation(line: 3333, column: 6, scope: !7285)
!7705 = !DILocation(line: 3335, column: 8, scope: !7706)
!7706 = distinct !DILexicalBlock(scope: !7278, file: !3, line: 3335, column: 8)
!7707 = !DILocation(line: 3335, column: 16, scope: !7706)
!7708 = !DILocation(line: 3335, column: 13, scope: !7706)
!7709 = !DILocation(line: 3335, column: 8, scope: !7278)
!7710 = !DILocation(line: 3336, column: 6, scope: !7706)
!7711 = !DILocation(line: 3337, column: 2, scope: !7278)
!7712 = !DILocation(line: 3136, column: 41, scope: !7279)
!7713 = !DILocation(line: 3136, column: 39, scope: !7279)
!7714 = !DILocation(line: 3136, column: 7, scope: !7279)
!7715 = distinct !{!7715, !7716, !7717}
!7716 = !DILocation(line: 3136, column: 7, scope: !7274)
!7717 = !DILocation(line: 3337, column: 2, scope: !7274)
!7718 = !DILocation(line: 3338, column: 5, scope: !7263)
!7719 = distinct !{!7719, !7258, !7720}
!7720 = !DILocation(line: 3338, column: 5, scope: !7259)
!7721 = !DILocation(line: 3340, column: 3, scope: !7223)
!7722 = !DILocation(line: 3341, column: 10, scope: !7723)
!7723 = distinct !DILexicalBlock(scope: !7223, file: !3, line: 3341, column: 3)
!7724 = !DILocation(line: 3341, column: 8, scope: !7723)
!7725 = !DILocation(line: 3341, column: 15, scope: !7726)
!7726 = distinct !DILexicalBlock(scope: !7723, file: !3, line: 3341, column: 3)
!7727 = !DILocation(line: 3341, column: 17, scope: !7726)
!7728 = !DILocation(line: 3341, column: 3, scope: !7723)
!7729 = !DILocation(line: 3342, column: 5, scope: !7726)
!7730 = !DILocation(line: 3341, column: 44, scope: !7726)
!7731 = !DILocation(line: 3341, column: 3, scope: !7726)
!7732 = distinct !{!7732, !7728, !7733}
!7733 = !DILocation(line: 3342, column: 5, scope: !7723)
!7734 = !DILocation(line: 3343, column: 3, scope: !7223)
!7735 = !DILocation(line: 3344, column: 7, scope: !7736)
!7736 = distinct !DILexicalBlock(scope: !7223, file: !3, line: 3344, column: 7)
!7737 = !DILocation(line: 3344, column: 7, scope: !7223)
!7738 = !DILocation(line: 3345, column: 26, scope: !7736)
!7739 = !DILocation(line: 3345, column: 5, scope: !7736)
!7740 = !DILocation(line: 3346, column: 1, scope: !7223)
!7741 = distinct !DISubprogram(name: "df_lr_get_bb_info", scope: !889, file: !889, line: 1052, type: !7742, scopeLine: 1053, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!7742 = !DISubroutineType(types: !7743)
!7743 = !{!1999, !7}
!7744 = !DILocalVariable(name: "index", arg: 1, scope: !7741, file: !889, line: 1052, type: !7)
!7745 = !DILocation(line: 1052, column: 33, scope: !7741)
!7746 = !DILocation(line: 1054, column: 7, scope: !7747)
!7747 = distinct !DILexicalBlock(scope: !7741, file: !889, line: 1054, column: 7)
!7748 = !DILocation(line: 1054, column: 15, scope: !7747)
!7749 = !DILocation(line: 1054, column: 22, scope: !7747)
!7750 = !DILocation(line: 1054, column: 13, scope: !7747)
!7751 = !DILocation(line: 1054, column: 7, scope: !7741)
!7752 = !DILocation(line: 1055, column: 37, scope: !7747)
!7753 = !DILocation(line: 1055, column: 44, scope: !7747)
!7754 = !DILocation(line: 1055, column: 55, scope: !7747)
!7755 = !DILocation(line: 1055, column: 12, scope: !7747)
!7756 = !DILocation(line: 1055, column: 5, scope: !7747)
!7757 = !DILocation(line: 1057, column: 5, scope: !7747)
!7758 = !DILocation(line: 1058, column: 1, scope: !7741)
!7759 = distinct !DISubprogram(name: "peep2_reinit_state", scope: !3, file: !3, line: 3091, type: !7760, scopeLine: 3092, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!7760 = !DISubroutineType(types: !7761)
!7761 = !{null, !2114}
!7762 = !DILocalVariable(name: "live", arg: 1, scope: !7759, file: !3, line: 3091, type: !2114)
!7763 = !DILocation(line: 3091, column: 28, scope: !7759)
!7764 = !DILocalVariable(name: "i", scope: !7759, file: !3, line: 3093, type: !924)
!7765 = !DILocation(line: 3093, column: 7, scope: !7759)
!7766 = !DILocation(line: 3096, column: 10, scope: !7767)
!7767 = distinct !DILexicalBlock(scope: !7759, file: !3, line: 3096, column: 3)
!7768 = !DILocation(line: 3096, column: 8, scope: !7767)
!7769 = !DILocation(line: 3096, column: 15, scope: !7770)
!7770 = distinct !DILexicalBlock(scope: !7767, file: !3, line: 3096, column: 3)
!7771 = !DILocation(line: 3096, column: 17, scope: !7770)
!7772 = !DILocation(line: 3096, column: 3, scope: !7767)
!7773 = !DILocation(line: 3097, column: 21, scope: !7770)
!7774 = !DILocation(line: 3097, column: 5, scope: !7770)
!7775 = !DILocation(line: 3097, column: 24, scope: !7770)
!7776 = !DILocation(line: 3097, column: 29, scope: !7770)
!7777 = !DILocation(line: 3096, column: 40, scope: !7770)
!7778 = !DILocation(line: 3096, column: 3, scope: !7770)
!7779 = distinct !{!7779, !7772, !7780}
!7780 = !DILocation(line: 3097, column: 31, scope: !7767)
!7781 = !DILocation(line: 3098, column: 23, scope: !7759)
!7782 = !DILocation(line: 3101, column: 47, scope: !7759)
!7783 = !DILocation(line: 3101, column: 45, scope: !7759)
!7784 = !DILocation(line: 3102, column: 17, scope: !7759)
!7785 = !DILocation(line: 3104, column: 3, scope: !7759)
!7786 = !DILocation(line: 3105, column: 1, scope: !7759)
!7787 = distinct !DISubprogram(name: "ei_start_1", scope: !135, file: !135, line: 696, type: !7788, scopeLine: 697, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!7788 = !DISubroutineType(types: !7789)
!7789 = !{!7484, !7489}
!7790 = !DILocalVariable(name: "ev", arg: 1, scope: !7787, file: !135, line: 696, type: !7489)
!7791 = !DILocation(line: 696, column: 28, scope: !7787)
!7792 = !DILocalVariable(name: "i", scope: !7787, file: !135, line: 698, type: !7484)
!7793 = !DILocation(line: 698, column: 17, scope: !7787)
!7794 = !DILocation(line: 700, column: 5, scope: !7787)
!7795 = !DILocation(line: 700, column: 11, scope: !7787)
!7796 = !DILocation(line: 701, column: 17, scope: !7787)
!7797 = !DILocation(line: 701, column: 5, scope: !7787)
!7798 = !DILocation(line: 701, column: 15, scope: !7787)
!7799 = !DILocation(line: 703, column: 3, scope: !7787)
!7800 = distinct !DISubprogram(name: "ei_cond", scope: !135, file: !135, line: 771, type: !7801, scopeLine: 772, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!7801 = !DISubroutineType(types: !7802)
!7802 = !{!1135, !7484, !7803}
!7803 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1297, size: 64)
!7804 = !DILocalVariable(name: "ei", arg: 1, scope: !7800, file: !135, line: 771, type: !7484)
!7805 = !DILocation(line: 771, column: 24, scope: !7800)
!7806 = !DILocalVariable(name: "p", arg: 2, scope: !7800, file: !135, line: 771, type: !7803)
!7807 = !DILocation(line: 771, column: 34, scope: !7800)
!7808 = !DILocation(line: 773, column: 8, scope: !7809)
!7809 = distinct !DILexicalBlock(scope: !7800, file: !135, line: 773, column: 7)
!7810 = !DILocation(line: 773, column: 7, scope: !7800)
!7811 = !DILocation(line: 775, column: 12, scope: !7812)
!7812 = distinct !DILexicalBlock(scope: !7809, file: !135, line: 774, column: 5)
!7813 = !DILocation(line: 775, column: 8, scope: !7812)
!7814 = !DILocation(line: 775, column: 10, scope: !7812)
!7815 = !DILocation(line: 776, column: 7, scope: !7812)
!7816 = !DILocation(line: 780, column: 8, scope: !7817)
!7817 = distinct !DILexicalBlock(scope: !7809, file: !135, line: 779, column: 5)
!7818 = !DILocation(line: 780, column: 10, scope: !7817)
!7819 = !DILocation(line: 781, column: 7, scope: !7817)
!7820 = !DILocation(line: 783, column: 1, scope: !7800)
!7821 = distinct !DISubprogram(name: "ei_next", scope: !135, file: !135, line: 736, type: !7822, scopeLine: 737, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!7822 = !DISubroutineType(types: !7823)
!7823 = !{null, !7824}
!7824 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7484, size: 64)
!7825 = !DILocalVariable(name: "i", arg: 1, scope: !7821, file: !135, line: 736, type: !7824)
!7826 = !DILocation(line: 736, column: 25, scope: !7821)
!7827 = !DILocation(line: 738, column: 3, scope: !7821)
!7828 = !DILocation(line: 739, column: 3, scope: !7821)
!7829 = !DILocation(line: 739, column: 6, scope: !7821)
!7830 = !DILocation(line: 739, column: 11, scope: !7821)
!7831 = !DILocation(line: 740, column: 1, scope: !7821)
!7832 = distinct !DISubprogram(name: "ei_end_p", scope: !135, file: !135, line: 721, type: !7833, scopeLine: 722, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!7833 = !DISubroutineType(types: !7834)
!7834 = !{!1135, !7484}
!7835 = !DILocalVariable(name: "i", arg: 1, scope: !7832, file: !135, line: 721, type: !7484)
!7836 = !DILocation(line: 721, column: 25, scope: !7832)
!7837 = !DILocation(line: 723, column: 13, scope: !7832)
!7838 = !DILocation(line: 723, column: 22, scope: !7832)
!7839 = !DILocation(line: 723, column: 19, scope: !7832)
!7840 = !DILocation(line: 723, column: 10, scope: !7832)
!7841 = !DILocation(line: 723, column: 3, scope: !7832)
!7842 = distinct !DISubprogram(name: "ei_edge", scope: !135, file: !135, line: 752, type: !7843, scopeLine: 753, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!7843 = !DISubroutineType(types: !7844)
!7844 = !{!1297, !7484}
!7845 = !DILocalVariable(name: "i", arg: 1, scope: !7842, file: !135, line: 752, type: !7484)
!7846 = !DILocation(line: 752, column: 24, scope: !7842)
!7847 = !DILocation(line: 754, column: 10, scope: !7842)
!7848 = !DILocation(line: 754, column: 3, scope: !7842)
!7849 = distinct !DISubprogram(name: "VEC_edge_base_length", scope: !135, file: !135, line: 150, type: !7850, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!7850 = !DISubroutineType(types: !7851)
!7851 = !{!7, !7852}
!7852 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7853, size: 64)
!7853 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1290)
!7854 = !DILocalVariable(name: "vec_", arg: 1, scope: !7849, file: !135, line: 150, type: !7852)
!7855 = !DILocation(line: 150, column: 1, scope: !7849)
!7856 = distinct !DISubprogram(name: "ei_container", scope: !135, file: !135, line: 685, type: !7857, scopeLine: 686, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!7857 = !DISubroutineType(types: !7858)
!7858 = !{!1285, !7484}
!7859 = !DILocalVariable(name: "i", arg: 1, scope: !7856, file: !135, line: 685, type: !7484)
!7860 = !DILocation(line: 685, column: 29, scope: !7856)
!7861 = !DILocation(line: 687, column: 3, scope: !7856)
!7862 = !DILocation(line: 688, column: 13, scope: !7856)
!7863 = !DILocation(line: 688, column: 10, scope: !7856)
!7864 = !DILocation(line: 688, column: 3, scope: !7856)
!7865 = distinct !DISubprogram(name: "VEC_edge_base_index", scope: !135, file: !135, line: 150, type: !7866, scopeLine: 150, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !2, retainedNodes: !2013)
!7866 = !DISubroutineType(types: !7867)
!7867 = !{!1297, !7852, !7}
!7868 = !DILocalVariable(name: "vec_", arg: 1, scope: !7865, file: !135, line: 150, type: !7852)
!7869 = !DILocation(line: 150, column: 1, scope: !7865)
!7870 = !DILocalVariable(name: "ix_", arg: 2, scope: !7865, file: !135, line: 150, type: !7)
!7871 = !DILocation(line: 0, scope: !7865)
