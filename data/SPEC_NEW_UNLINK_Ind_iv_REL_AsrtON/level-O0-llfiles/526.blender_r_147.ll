; ModuleID = 'blender/source/blender/blenkernel/intern/editderivedmesh.c'
source_filename = "blender/source/blender/blenkernel/intern/editderivedmesh.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.DerivedMesh = type { %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, i32, i32, i32, i32, i32, i32, i32, %struct.LinkNode*, %struct.GPUDrawObject*, i32, float, i32, i32, %struct.Material**, i8, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, float)*, void (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, i32, %struct.MVert*)*, void (%struct.DerivedMesh*, i32, %struct.MEdge*)*, void (%struct.DerivedMesh*, i32, %struct.MFace*)*, %struct.MVert* (%struct.DerivedMesh*)*, %struct.MEdge* (%struct.DerivedMesh*)*, %struct.MFace* (%struct.DerivedMesh*)*, %struct.MLoop* (%struct.DerivedMesh*)*, %struct.MPoly* (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, %struct.MVert*)*, void (%struct.DerivedMesh*, %struct.MEdge*)*, void (%struct.DerivedMesh*, %struct.MFace*)*, void (%struct.DerivedMesh*, %struct.MLoop*)*, void (%struct.DerivedMesh*, %struct.MPoly*)*, %struct.MVert* (%struct.DerivedMesh*)*, %struct.MEdge* (%struct.DerivedMesh*)*, %struct.MFace* (%struct.DerivedMesh*)*, %struct.MLoop* (%struct.DerivedMesh*)*, %struct.MPoly* (%struct.DerivedMesh*)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, %struct.CustomData* (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, i32, %struct.CustomData*, i32)*, void (%struct.DerivedMesh*, i32, %struct.CustomData*, i32)*, void (%struct.DerivedMesh*, i32, %struct.CustomData*, i32)*, i32 (%struct.DerivedMesh*)*, i32 (%struct.DerivedMesh*)*, %struct.CCGElem** (%struct.DerivedMesh*)*, %struct.DMGridAdjacency* (%struct.DerivedMesh*)*, i32* (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, %struct.CCGKey*)*, %struct.DMFlagMat* (%struct.DerivedMesh*)*, i32** (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, void (i8*, i32, float*, float*, i16*)*, i8*, i32)*, void (%struct.DerivedMesh*, void (i8*, i32, float*, float*)*, i8*)*, void (%struct.DerivedMesh*, void (i8*, i32, i32, float*, float*)*, i8*, i32)*, void (%struct.DerivedMesh*, void (i8*, i32, float*, float*)*, i8*, i32)*, void (%struct.DerivedMesh*, float*, float*)*, void (%struct.DerivedMesh*, i32, float*)*, void (%struct.DerivedMesh*, [3 x float]*)*, void (%struct.DerivedMesh*, i32, float*)*, void (%struct.DerivedMesh*, i32, float*)*, %struct.MeshElemMap* (%struct.Object*, %struct.DerivedMesh*)*, %struct.PBVH* (%struct.Object*, %struct.DerivedMesh*)*, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, i8, i8)*, void (%struct.DerivedMesh*)*, void (%struct.DerivedMesh*, [4 x float]*, i8, i32 (i32, i8*)*)*, void (%struct.DerivedMesh*, i32 (%struct.MTFace*, i8, i32)*, i32 (i8*, i32, i32)*, i8*, i32)*, void (%struct.DerivedMesh*, i32 (i32, i8*)*)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, i32 (i32, i8*)*, i32 (i8*, i32, i32)*, i8*, i32)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, i32 (i8*, i32, i32)*, i8*, i32)*, void (%struct.DerivedMesh*, i32 (i32, i8*)*, i32 (i8*, i32)*, i8*)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, i8*)*, void (%struct.DerivedMesh*, i32 (i8*, i32)*, void (i8*, i32, float)*, i8*)*, void (%struct.DerivedMesh*, void (i8*, i32, i8*)*, i8 (i8*, i32)*, i8*)*, void (%struct.DerivedMesh*)* }
%struct.CustomData = type { %struct.CustomDataLayer*, [41 x i32], i32, i32, i32, %struct.BLI_mempool*, %struct.CustomDataExternal* }
%struct.CustomDataLayer = type { i32, i32, i32, i32, i32, i32, i32, i32, [64 x i8], i8* }
%struct.BLI_mempool = type opaque
%struct.CustomDataExternal = type { [1024 x i8] }
%struct.LinkNode = type opaque
%struct.GPUDrawObject = type opaque
%struct.Material = type opaque
%struct.MVert = type { [3 x float], [3 x i16], i8, i8 }
%struct.MEdge = type { i32, i32, i8, i8, i16 }
%struct.MFace = type { i32, i32, i32, i32, i16, i8, i8 }
%struct.MLoop = type { i32, i32 }
%struct.MPoly = type { i32, i32, i16, i8, i8 }
%struct.CCGElem = type opaque
%struct.DMGridAdjacency = type { [4 x i32], [4 x i32] }
%struct.CCGKey = type opaque
%struct.DMFlagMat = type { i16, i8 }
%struct.MeshElemMap = type opaque
%struct.PBVH = type opaque
%struct.MTFace = type { [4 x [2 x float]], %struct.Image*, i8, i8, i16, i16, i16 }
%struct.Image = type { %struct.ID, [1024 x i8], %struct.MovieCache*, %struct.GPUTexture*, %struct.anim*, %struct.RenderResult*, [8 x %struct.RenderResult*], i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32*, %struct.PackedFile*, %struct.PreviewImage*, float, i32, i16, i16, i32, i32, i8, i8, i16, [4 x float], float, float, %struct.ColorManagedColorspaceSettings, i8, [7 x i8], [8 x %struct.RenderSlot] }
%struct.ID = type { i8*, i8*, %struct.ID*, %struct.Library*, [66 x i8], i16, i32, i32, i32, %struct.IDProperty* }
%struct.Library = type { %struct.ID, %struct.ID*, %struct.FileData*, [1024 x i8], [1024 x i8], %struct.Library*, %struct.PackedFile* }
%struct.FileData = type opaque
%struct.IDProperty = type { %struct.IDProperty*, %struct.IDProperty*, i8, i8, i16, [64 x i8], i32, %struct.IDPropertyData, i32, i32 }
%struct.IDPropertyData = type { i8*, %struct.ListBase, i32, i32 }
%struct.ListBase = type { i8*, i8* }
%struct.MovieCache = type opaque
%struct.GPUTexture = type opaque
%struct.anim = type opaque
%struct.RenderResult = type opaque
%struct.PackedFile = type opaque
%struct.PreviewImage = type { [2 x i32], [2 x i32], [2 x i16], [2 x i16], [2 x i32*], [2 x %struct.GPUTexture*] }
%struct.ColorManagedColorspaceSettings = type { [64 x i8] }
%struct.RenderSlot = type { [64 x i8] }
%struct.BMEditMesh = type { %struct.BMesh*, %struct.BMEditMesh*, i32, [3 x %struct.BMLoop*]*, i32, %struct.DerivedMesh*, %struct.DerivedMesh*, i64, [4 x i8]*, i32, [4 x i8]*, i32, i16, i16, %struct.Object*, i32 }
%struct.BMesh = type { i32, i32, i32, i32, i32, i32, i32, i8, i8, %struct.BLI_mempool*, %struct.BLI_mempool*, %struct.BLI_mempool*, %struct.BLI_mempool*, %struct.BMVert**, %struct.BMEdge**, %struct.BMFace**, i32, i32, i32, %struct.BLI_mempool*, %struct.BLI_mempool*, %struct.BLI_mempool*, i32, %struct.BMOperator*, %struct.CustomData, %struct.CustomData, %struct.CustomData, %struct.CustomData, i16, i32, i32, i32, %struct.ListBase, %struct.BMFace*, %struct.ListBase, i8* }
%struct.BMVert = type { %struct.BMHeader, %struct.BMFlagLayer*, [3 x float], [3 x float], %struct.BMEdge* }
%struct.BMHeader = type { i8*, i32, i8, i8, i8 }
%struct.BMFlagLayer = type { i16 }
%struct.BMEdge = type { %struct.BMHeader, %struct.BMFlagLayer*, %struct.BMVert*, %struct.BMVert*, %struct.BMLoop*, %struct.BMDiskLink, %struct.BMDiskLink }
%struct.BMLoop = type { %struct.BMHeader, %struct.BMVert*, %struct.BMEdge*, %struct.BMFace*, %struct.BMLoop*, %struct.BMLoop*, %struct.BMLoop*, %struct.BMLoop* }
%struct.BMDiskLink = type { %struct.BMEdge*, %struct.BMEdge* }
%struct.BMOperator = type { [16 x %struct.BMOpSlot], [16 x %struct.BMOpSlot], void (%struct.BMesh*, %struct.BMOperator*)*, %struct.MemArena*, i32, i32, i32 }
%struct.BMOpSlot = type { i8*, i32, %union.eBMOpSlotSubType_Union, i32, %union.anon }
%union.eBMOpSlotSubType_Union = type { i32 }
%union.anon = type { i8*, [8 x i8] }
%struct.MemArena = type opaque
%struct.BMFace = type { %struct.BMHeader, %struct.BMFlagLayer*, %struct.BMLoop*, i32, [3 x float], i16 }
%struct.Object = type { %struct.ID, %struct.AnimData*, %struct.SculptSession*, i16, i16, i32, i32, i32, [64 x i8], %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Object*, %struct.Ipo*, %struct.BoundBox*, %struct.bAction*, %struct.bAction*, %struct.bPose*, i8*, %struct.bGPdata*, %struct.bAnimVizSettings, %struct.bMotionPath*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, %struct.Material**, i8*, i32, i32, [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [3 x float], [4 x float], [4 x float], [3 x float], [3 x float], float, float, [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], [4 x [4 x float]], i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i32, i32, float, float, float, float, float, float, float, float, float, float, float, float, i16, i16, i16, i8, i8, i16, i8, i8, float, float, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, float, i16, i16, [4 x float], i32, i32, %struct.BulletSoftBody*, i8, i8, i16, [3 x float], %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.PartDeflect*, %struct.SoftBody*, %struct.Group*, i8, i8, i16, float, %struct.FluidsimSettings*, %struct.CurveCache*, %struct.DerivedMesh*, %struct.DerivedMesh*, i64, i64, i32, i32, %struct.ListBase, %struct.ListBase, %struct.ListBase*, %struct.RigidBodyOb*, %struct.RigidBodyCon*, [2 x float], %struct.ImageUser*, %struct.ListBase, %struct.LodLevel* }
%struct.AnimData = type opaque
%struct.SculptSession = type opaque
%struct.Ipo = type opaque
%struct.BoundBox = type { [8 x [3 x float]], i32, i32 }
%struct.bAction = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, i32, i32 }
%struct.bPose = type { %struct.ListBase, %struct.GHash*, i16, i16, i32, i32, float, [3 x float], [3 x float], %struct.ListBase, i32, i32, i8*, i8*, %struct.bAnimVizSettings, [64 x i8] }
%struct.GHash = type opaque
%struct.bGPdata = type opaque
%struct.bAnimVizSettings = type { i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i32, i32 }
%struct.bMotionPath = type { %struct.bMotionPathVert*, i32, i32, i32, i32 }
%struct.bMotionPathVert = type { [3 x float], i32 }
%struct.BulletSoftBody = type opaque
%struct.PartDeflect = type opaque
%struct.SoftBody = type opaque
%struct.Group = type opaque
%struct.FluidsimSettings = type opaque
%struct.CurveCache = type opaque
%struct.RigidBodyOb = type opaque
%struct.RigidBodyCon = type opaque
%struct.ImageUser = type { %struct.Scene*, i32, i32, i32, i32, i8, i8, i8, i8, i16, i16, i16, i16, i32 }
%struct.Scene = type { %struct.ID, %struct.AnimData*, %struct.Object*, %struct.World*, %struct.Scene*, %struct.ListBase, %struct.Base*, %struct.Object*, [3 x float], [3 x float], [3 x float], [3 x float], i32, i32, i32, i16, i8, [1 x i8], %struct.bNodeTree*, %struct.Editing*, %struct.ToolSettings*, %struct.SceneStats*, %struct.RenderData, %struct.AudioData, %struct.ListBase, %struct.ListBase, i8*, i8*, i8*, i8*, i8*, %struct.DagForest*, i16, i16, i32, %struct.ListBase, %struct.GameFraming, %struct.GameData, %struct.UnitSettings, %struct.bGPdata*, %struct.PhysicsSettings, %struct.MovieClip*, i64, i64, %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings, %struct.ColorManagedColorspaceSettings, %struct.RigidBodyWorld* }
%struct.World = type opaque
%struct.Base = type { %struct.Base*, %struct.Base*, i32, i32, i32, i16, i16, %struct.Object* }
%struct.bNodeTree = type opaque
%struct.Editing = type opaque
%struct.ToolSettings = type { %struct.VPaint*, %struct.VPaint*, %struct.Sculpt*, %struct.UvSculpt*, float, float, float, i16, i16, i8, i8, i8, i8, float, i16, i8, [5 x i8], %struct.ImagePaintSettings, %struct.ParticleEditSettings, float, float, i16, i16, i8, [1 x i8], i16, float, float, float, float, float, float, float, float, float, float, i16, i8, i8, [3 x i8], i8, %struct.Object*, i8, i8, i8, i8, i8, [8 x i8], [8 x i8], i8, i8, i8, i8, i8, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i16, i16, i32, float, float, %struct.UnifiedPaintSettings, %struct.MeshStatVis }
%struct.VPaint = type { %struct.Paint, i16, i16, i32, i32*, %struct.MDeformVert*, i8* }
%struct.Paint = type { %struct.Brush*, %struct.Palette*, i8*, [4 x i8], i32, i32, i32 }
%struct.Brush = type opaque
%struct.Palette = type opaque
%struct.MDeformVert = type { %struct.MDeformWeight*, i32, i32 }
%struct.MDeformWeight = type { i32, float }
%struct.Sculpt = type { %struct.Paint, i32, [3 x i32], float, i32, float, float, %struct.Object*, i8* }
%struct.UvSculpt = type { %struct.Paint }
%struct.ImagePaintSettings = type { %struct.Paint, i16, i16, i16, i16, [2 x i16], i32, i8*, %struct.Image*, %struct.Image*, %struct.Image*, [3 x float], float }
%struct.ParticleEditSettings = type { i16, i16, i16, i16, [7 x %struct.ParticleBrushData], i8*, float, float, i32, i32, i32, i32, %struct.Scene*, %struct.Object* }
%struct.ParticleBrushData = type { i16, i16, i16, i16, i32, float }
%struct.UnifiedPaintSettings = type { i32, float, float, float, [3 x float], [3 x float], i32, [2 x float], float, i32, i32, i8, [7 x i8], float, [2 x float], i32, float, [2 x float], [2 x float], i32, %struct.ColorSpace*, float, i32 }
%struct.ColorSpace = type opaque
%struct.MeshStatVis = type { i8, [2 x i8], i8, float, float, float, float, i8, [3 x i8], float, float, float, float }
%struct.SceneStats = type opaque
%struct.RenderData = type { %struct.ImageFormatData, %struct.AviCodecData*, %struct.QuicktimeCodecData*, %struct.QuicktimeCodecSettings, %struct.FFMpegCodecData, i32, i32, i32, float, i32, i32, i32, i32, i16, i16, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i32, i32, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, %struct.rctf, %struct.rctf, %struct.rcti, %struct.ListBase, i16, i16, float, float, float, float, i32, float, float, float, float, i16, i16, i16, i16, i16, i16, float, float, i16, i16, float, float, [1024 x i8], i32, i16, i16, [768 x i8], [4 x float], [4 x float], i8, i8, i8, [5 x i8], i32, i16, i16, float, float, i16, i16, float, i16, i16, i32, i16, i16, i16, i16, float, float, %struct.Text*, i32, float, [32 x i8], %struct.BakeData, i32, i32 }
%struct.ImageFormatData = type { i8, i8, i8, i8, i8, i8, i8, i8, i16, i16, float, i8, i8, [6 x i8], %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings }
%struct.AviCodecData = type { i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [128 x i8] }
%struct.QuicktimeCodecData = type { i8*, i8*, i32, i32, [128 x i8] }
%struct.QuicktimeCodecSettings = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32, i32 }
%struct.FFMpegCodecData = type { i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, %struct.IDProperty* }
%struct.rctf = type { float, float, float, float }
%struct.rcti = type { i32, i32, i32, i32 }
%struct.Text = type opaque
%struct.BakeData = type { %struct.ImageFormatData, [1024 x i8], i16, i16, i16, i16, float, float, [3 x i8], i8, i8, [3 x i8], [64 x i8] }
%struct.AudioData = type { i32, float, float, float, i32, i16, i16, float, float }
%struct.DagForest = type opaque
%struct.GameFraming = type { [3 x float], i8, i8, i8, i8 }
%struct.GameData = type { %struct.GameFraming, i16, i16, i16, i16, i16, i16, i16, i16, i16, [3 x i16], %struct.GameDome, i16, i16, float, %struct.RecastData, float, float, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float }
%struct.GameDome = type { i16, i16, i16, i16, float, float, %struct.Text* }
%struct.RecastData = type { float, float, float, float, float, float, float, float, float, float, i32, float, float, i16, i16 }
%struct.UnitSettings = type { float, i8, i8, i16 }
%struct.PhysicsSettings = type { [3 x float], i32, i32, i32 }
%struct.MovieClip = type opaque
%struct.ColorManagedViewSettings = type { i32, i32, [64 x i8], [64 x i8], float, float, %struct.CurveMapping*, i8* }
%struct.CurveMapping = type { i32, i32, i32, i32, %struct.rctf, %struct.rctf, [4 x %struct.CurveMap], [3 x float], [3 x float], [3 x float], [3 x float] }
%struct.CurveMap = type { i16, i16, float, float, float, [2 x float], [2 x float], %struct.CurveMapPoint*, %struct.CurveMapPoint*, %struct.CurveMapPoint*, [2 x float], [2 x float] }
%struct.CurveMapPoint = type { float, float, i16, i16 }
%struct.ColorManagedDisplaySettings = type { [64 x i8] }
%struct.RigidBodyWorld = type opaque
%struct.LodLevel = type { %struct.LodLevel*, %struct.LodLevel*, %struct.Object*, i32, float }
%struct.EditDerivedBMesh = type { %struct.DerivedMesh, %struct.BMEditMesh*, [3 x float]*, [3 x float]*, [3 x float]*, [3 x float]* }
%struct.BMIter = type { %union.anon.0, void (i8*)*, i8* (i8*)*, i32, i8 }
%union.anon.0 = type { %struct.BMIter__face_of_vert }
%struct.BMIter__face_of_vert = type { %struct.BMVert*, %struct.BMLoop*, %struct.BMLoop*, %struct.BMEdge*, %struct.BMEdge* }
%struct.MLoopCol = type { i8, i8, i8, i8 }
%struct.MCol = type { i8, i8, i8, i8 }
%struct.MTexPoly = type { %struct.Image*, i8, i8, i16, i16, i16 }
%struct.MLoopUV = type { [2 x float], i32 }
%struct.DMVertexAttribs = type { [8 x %struct.anon], [8 x %struct.anon.1], %struct.anon.2, %struct.anon.3, i32, i32, i32, i32 }
%struct.anon = type { %struct.MTFace*, i32, i32, i32 }
%struct.anon.1 = type { %struct.MCol*, i32, i32 }
%struct.anon.2 = type { [4 x float]*, i32, i32 }
%struct.anon.3 = type { [3 x float]*, i32, i32, i32 }
%struct.GPUVertexAttribs = type { [32 x %struct.anon.4], i32 }
%struct.anon.4 = type { i32, i32, i32, i32, [64 x i8] }
%struct.BMBVHTree = type opaque
%struct.CageUserData = type { i32, [3 x float]*, i32* }
%struct.BMIter__elem_of_mesh = type { %struct.BLI_mempool_iter }
%struct.BLI_mempool_iter = type { %struct.BLI_mempool*, %struct.BLI_mempool_chunk*, i32 }
%struct.BLI_mempool_chunk = type opaque
%struct.BMIter__edge_of_vert = type { %struct.BMVert*, %struct.BMEdge*, %struct.BMEdge* }
%struct.BMIter__loop_of_vert = type { %struct.BMVert*, %struct.BMLoop*, %struct.BMLoop*, %struct.BMEdge*, %struct.BMEdge* }
%struct.BMIter__vert_of_edge = type { %struct.BMEdge* }
%struct.BMIter__face_of_edge = type { %struct.BMEdge*, %struct.BMLoop*, %struct.BMLoop* }
%struct.BMIter__vert_of_face = type { %struct.BMFace*, %struct.BMLoop*, %struct.BMLoop* }
%struct.BMIter__edge_of_face = type { %struct.BMFace*, %struct.BMLoop*, %struct.BMLoop* }
%struct.BMIter__loop_of_face = type { %struct.BMFace*, %struct.BMLoop*, %struct.BMLoop* }
%struct.BMIter__loop_of_loop = type { %struct.BMLoop*, %struct.BMLoop*, %struct.BMLoop* }
%struct.BMIter__loop_of_edge = type { %struct.BMEdge*, %struct.BMLoop*, %struct.BMLoop* }

@MEM_callocN = external dso_local global i8* (i64, i8*)*, align 8
@__func__.getEditDerivedBMesh = private unnamed_addr constant [20 x i8] c"getEditDerivedBMesh\00", align 1
@CD_MASK_BAREMESH = external dso_local constant i64, align 8
@.str = private unnamed_addr constant [15 x i8] c"bmbvh cos_cage\00", align 1
@__func__.BKE_editmesh_vertexCos_get = private unnamed_addr constant [27 x i8] c"BKE_editmesh_vertexCos_get\00", align 1
@MEM_freeN = external dso_local global void (i8*)*, align 8
@__func__.emDM_ensureVertNormals = private unnamed_addr constant [23 x i8] c"emDM_ensureVertNormals\00", align 1
@MEM_mallocN = external dso_local global i8* (i64, i8*)*, align 8
@__func__.emDM_ensurePolyCenters = private unnamed_addr constant [23 x i8] c"emDM_ensurePolyCenters\00", align 1
@stipple_quarttone = external dso_local global [128 x i8], align 16
@__glewVertexAttrib3fvARB = external dso_local global void (i32, float*)*, align 8
@__glewVertexAttrib2fvARB = external dso_local global void (i32, float*)*, align 8
@__glewVertexAttrib4ubvARB = external dso_local global void (i32, i8*)*, align 8
@__glewVertexAttrib4fvARB = external dso_local global void (i32, float*)*, align 8
@__const.statvis_calc_overhang.col_fallback = private unnamed_addr constant [4 x i8] c"@@@\FF", align 1
@__const.statvis_calc_overhang.col_fallback_max = private unnamed_addr constant [4 x i8] c"\00\00\00\FF", align 1
@__const.statvis_calc_thickness.col_fallback = private unnamed_addr constant [4 x i8] c"@@@\FF", align 1
@__func__.emDM_ensurePolyNormals = private unnamed_addr constant [23 x i8] c"emDM_ensurePolyNormals\00", align 1
@__const.statvis_calc_distort.col_fallback = private unnamed_addr constant [4 x i8] c"@@@\FF", align 1
@__const.statvis_calc_sharp.col_fallback = private unnamed_addr constant [4 x i8] c"@@@\FF", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.DerivedMesh* @getEditDerivedBMesh(%struct.BMEditMesh* %em, %struct.Object* %UNUSED_ob, [3 x float]* %vertexCos) #0 !dbg !1947 {
entry:
  %em.addr = alloca %struct.BMEditMesh*, align 8
  %UNUSED_ob.addr = alloca %struct.Object*, align 8
  %vertexCos.addr = alloca [3 x float]*, align 8
  %bmdm = alloca %struct.EditDerivedBMesh*, align 8
  %bm = alloca %struct.BMesh*, align 8
  %cd_dvert_offset = alloca i32, align 4
  %cd_skin_offset = alloca i32, align 4
  %iter = alloca %struct.BMIter, align 8
  %eve = alloca %struct.BMVert*, align 8
  %i = alloca i32, align 4
  %iter60 = alloca %struct.BMIter, align 8
  %eve61 = alloca %struct.BMVert*, align 8
  %i62 = alloca i32, align 4
  store %struct.BMEditMesh* %em, %struct.BMEditMesh** %em.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em.addr, metadata !1953, metadata !DIExpression()), !dbg !1954
  store %struct.Object* %UNUSED_ob, %struct.Object** %UNUSED_ob.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Object** %UNUSED_ob.addr, metadata !1955, metadata !DIExpression()), !dbg !1956
  store [3 x float]* %vertexCos, [3 x float]** %vertexCos.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %vertexCos.addr, metadata !1957, metadata !DIExpression()), !dbg !1958
  call void @llvm.dbg.declare(metadata %struct.EditDerivedBMesh** %bmdm, metadata !1959, metadata !DIExpression()), !dbg !1960
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !1961
  %call = call i8* %0(i64 1728, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @__func__.getEditDerivedBMesh, i64 0, i64 0)), !dbg !1961
  %1 = bitcast i8* %call to %struct.EditDerivedBMesh*, !dbg !1961
  store %struct.EditDerivedBMesh* %1, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !1960
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm, metadata !1962, metadata !DIExpression()), !dbg !1963
  %2 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !1964
  %bm1 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %2, i32 0, i32 0, !dbg !1965
  %3 = load %struct.BMesh*, %struct.BMesh** %bm1, align 8, !dbg !1965
  store %struct.BMesh* %3, %struct.BMesh** %bm, align 8, !dbg !1963
  call void @llvm.dbg.declare(metadata i32* %cd_dvert_offset, metadata !1966, metadata !DIExpression()), !dbg !1968
  %4 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !1969
  %vdata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %4, i32 0, i32 24, !dbg !1970
  %call2 = call i32 @CustomData_get_offset(%struct.CustomData* %vdata, i32 2), !dbg !1971
  store i32 %call2, i32* %cd_dvert_offset, align 4, !dbg !1968
  call void @llvm.dbg.declare(metadata i32* %cd_skin_offset, metadata !1972, metadata !DIExpression()), !dbg !1973
  %5 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !1974
  %vdata3 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %5, i32 0, i32 24, !dbg !1975
  %call4 = call i32 @CustomData_get_offset(%struct.CustomData* %vdata3, i32 36), !dbg !1976
  store i32 %call4, i32* %cd_skin_offset, align 4, !dbg !1973
  %6 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !1977
  %7 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !1978
  %em5 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %7, i32 0, i32 1, !dbg !1979
  store %struct.BMEditMesh* %6, %struct.BMEditMesh** %em5, align 8, !dbg !1980
  %8 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !1981
  %9 = bitcast %struct.EditDerivedBMesh* %8 to %struct.DerivedMesh*, !dbg !1982
  %10 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !1983
  %totvert = getelementptr inbounds %struct.BMesh, %struct.BMesh* %10, i32 0, i32 0, !dbg !1984
  %11 = load i32, i32* %totvert, align 8, !dbg !1984
  %12 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !1985
  %totedge = getelementptr inbounds %struct.BMesh, %struct.BMesh* %12, i32 0, i32 1, !dbg !1986
  %13 = load i32, i32* %totedge, align 4, !dbg !1986
  %14 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !1987
  %tottri = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %14, i32 0, i32 4, !dbg !1988
  %15 = load i32, i32* %tottri, align 8, !dbg !1988
  %16 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !1989
  %totloop = getelementptr inbounds %struct.BMesh, %struct.BMesh* %16, i32 0, i32 2, !dbg !1990
  %17 = load i32, i32* %totloop, align 8, !dbg !1990
  %18 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !1991
  %totface = getelementptr inbounds %struct.BMesh, %struct.BMesh* %18, i32 0, i32 3, !dbg !1992
  %19 = load i32, i32* %totface, align 4, !dbg !1992
  call void @DM_init(%struct.DerivedMesh* %9, i32 1, i32 %11, i32 %13, i32 %15, i32 %17, i32 %19), !dbg !1993
  %20 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !1994
  %call6 = call zeroext i8 @BM_mesh_cd_flag_from_bmesh(%struct.BMesh* %20), !dbg !1995
  %21 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !1996
  %dm = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %21, i32 0, i32 0, !dbg !1997
  %cd_flag = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm, i32 0, i32 19, !dbg !1998
  store i8 %call6, i8* %cd_flag, align 8, !dbg !1999
  %22 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2000
  %dm7 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %22, i32 0, i32 0, !dbg !2001
  %getVertCos = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm7, i32 0, i32 77, !dbg !2002
  store void (%struct.DerivedMesh*, [3 x float]*)* @emDM_getVertCos, void (%struct.DerivedMesh*, [3 x float]*)** %getVertCos, align 8, !dbg !2003
  %23 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2004
  %dm8 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %23, i32 0, i32 0, !dbg !2005
  %getMinMax = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm8, i32 0, i32 75, !dbg !2006
  store void (%struct.DerivedMesh*, float*, float*)* @emDM_getMinMax, void (%struct.DerivedMesh*, float*, float*)** %getMinMax, align 8, !dbg !2007
  %24 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2008
  %dm9 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %24, i32 0, i32 0, !dbg !2009
  %getVertDataLayout = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm9, i32 0, i32 55, !dbg !2010
  store %struct.CustomData* (%struct.DerivedMesh*)* @bmDm_getVertDataLayout, %struct.CustomData* (%struct.DerivedMesh*)** %getVertDataLayout, align 8, !dbg !2011
  %25 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2012
  %dm10 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %25, i32 0, i32 0, !dbg !2013
  %getEdgeDataLayout = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm10, i32 0, i32 56, !dbg !2014
  store %struct.CustomData* (%struct.DerivedMesh*)* @bmDm_getEdgeDataLayout, %struct.CustomData* (%struct.DerivedMesh*)** %getEdgeDataLayout, align 8, !dbg !2015
  %26 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2016
  %dm11 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %26, i32 0, i32 0, !dbg !2017
  %getTessFaceDataLayout = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm11, i32 0, i32 57, !dbg !2018
  store %struct.CustomData* (%struct.DerivedMesh*)* @bmDm_getTessFaceDataLayout, %struct.CustomData* (%struct.DerivedMesh*)** %getTessFaceDataLayout, align 8, !dbg !2019
  %27 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2020
  %dm12 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %27, i32 0, i32 0, !dbg !2021
  %getLoopDataLayout = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm12, i32 0, i32 58, !dbg !2022
  store %struct.CustomData* (%struct.DerivedMesh*)* @bmDm_getLoopDataLayout, %struct.CustomData* (%struct.DerivedMesh*)** %getLoopDataLayout, align 8, !dbg !2023
  %28 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2024
  %dm13 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %28, i32 0, i32 0, !dbg !2025
  %getPolyDataLayout = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm13, i32 0, i32 59, !dbg !2026
  store %struct.CustomData* (%struct.DerivedMesh*)* @bmDm_getPolyDataLayout, %struct.CustomData* (%struct.DerivedMesh*)** %getPolyDataLayout, align 8, !dbg !2027
  %29 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2028
  %dm14 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %29, i32 0, i32 0, !dbg !2029
  %getNumVerts = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm14, i32 0, i32 23, !dbg !2030
  store i32 (%struct.DerivedMesh*)* @emDM_getNumVerts, i32 (%struct.DerivedMesh*)** %getNumVerts, align 8, !dbg !2031
  %30 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2032
  %dm15 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %30, i32 0, i32 0, !dbg !2033
  %getNumEdges = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm15, i32 0, i32 24, !dbg !2034
  store i32 (%struct.DerivedMesh*)* @emDM_getNumEdges, i32 (%struct.DerivedMesh*)** %getNumEdges, align 8, !dbg !2035
  %31 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2036
  %dm16 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %31, i32 0, i32 0, !dbg !2037
  %getNumTessFaces = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm16, i32 0, i32 25, !dbg !2038
  store i32 (%struct.DerivedMesh*)* @emDM_getNumTessFaces, i32 (%struct.DerivedMesh*)** %getNumTessFaces, align 8, !dbg !2039
  %32 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2040
  %dm17 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %32, i32 0, i32 0, !dbg !2041
  %getNumLoops = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm17, i32 0, i32 26, !dbg !2042
  store i32 (%struct.DerivedMesh*)* @emDM_getNumLoops, i32 (%struct.DerivedMesh*)** %getNumLoops, align 8, !dbg !2043
  %33 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2044
  %dm18 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %33, i32 0, i32 0, !dbg !2045
  %getNumPolys = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm18, i32 0, i32 27, !dbg !2046
  store i32 (%struct.DerivedMesh*)* @emDM_getNumPolys, i32 (%struct.DerivedMesh*)** %getNumPolys, align 8, !dbg !2047
  %34 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2048
  %dm19 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %34, i32 0, i32 0, !dbg !2049
  %getVert = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm19, i32 0, i32 28, !dbg !2050
  store void (%struct.DerivedMesh*, i32, %struct.MVert*)* @emDM_getVert, void (%struct.DerivedMesh*, i32, %struct.MVert*)** %getVert, align 8, !dbg !2051
  %35 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2052
  %dm20 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %35, i32 0, i32 0, !dbg !2053
  %getVertCo = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm20, i32 0, i32 76, !dbg !2054
  store void (%struct.DerivedMesh*, i32, float*)* @emDM_getVertCo, void (%struct.DerivedMesh*, i32, float*)** %getVertCo, align 8, !dbg !2055
  %36 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2056
  %dm21 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %36, i32 0, i32 0, !dbg !2057
  %getVertNo = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm21, i32 0, i32 78, !dbg !2058
  store void (%struct.DerivedMesh*, i32, float*)* @emDM_getVertNo, void (%struct.DerivedMesh*, i32, float*)** %getVertNo, align 8, !dbg !2059
  %37 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2060
  %dm22 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %37, i32 0, i32 0, !dbg !2061
  %getPolyNo = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm22, i32 0, i32 79, !dbg !2062
  store void (%struct.DerivedMesh*, i32, float*)* @emDM_getPolyNo, void (%struct.DerivedMesh*, i32, float*)** %getPolyNo, align 8, !dbg !2063
  %38 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2064
  %dm23 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %38, i32 0, i32 0, !dbg !2065
  %getEdge = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm23, i32 0, i32 29, !dbg !2066
  store void (%struct.DerivedMesh*, i32, %struct.MEdge*)* @emDM_getEdge, void (%struct.DerivedMesh*, i32, %struct.MEdge*)** %getEdge, align 8, !dbg !2067
  %39 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2068
  %dm24 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %39, i32 0, i32 0, !dbg !2069
  %getTessFace = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm24, i32 0, i32 30, !dbg !2070
  store void (%struct.DerivedMesh*, i32, %struct.MFace*)* @emDM_getTessFace, void (%struct.DerivedMesh*, i32, %struct.MFace*)** %getTessFace, align 8, !dbg !2071
  %40 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2072
  %dm25 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %40, i32 0, i32 0, !dbg !2073
  %copyVertArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm25, i32 0, i32 36, !dbg !2074
  store void (%struct.DerivedMesh*, %struct.MVert*)* @emDM_copyVertArray, void (%struct.DerivedMesh*, %struct.MVert*)** %copyVertArray, align 8, !dbg !2075
  %41 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2076
  %dm26 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %41, i32 0, i32 0, !dbg !2077
  %copyEdgeArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm26, i32 0, i32 37, !dbg !2078
  store void (%struct.DerivedMesh*, %struct.MEdge*)* @emDM_copyEdgeArray, void (%struct.DerivedMesh*, %struct.MEdge*)** %copyEdgeArray, align 8, !dbg !2079
  %42 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2080
  %dm27 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %42, i32 0, i32 0, !dbg !2081
  %copyTessFaceArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm27, i32 0, i32 38, !dbg !2082
  store void (%struct.DerivedMesh*, %struct.MFace*)* @emDM_copyTessFaceArray, void (%struct.DerivedMesh*, %struct.MFace*)** %copyTessFaceArray, align 8, !dbg !2083
  %43 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2084
  %dm28 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %43, i32 0, i32 0, !dbg !2085
  %copyLoopArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm28, i32 0, i32 39, !dbg !2086
  store void (%struct.DerivedMesh*, %struct.MLoop*)* @emDM_copyLoopArray, void (%struct.DerivedMesh*, %struct.MLoop*)** %copyLoopArray, align 8, !dbg !2087
  %44 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2088
  %dm29 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %44, i32 0, i32 0, !dbg !2089
  %copyPolyArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm29, i32 0, i32 40, !dbg !2090
  store void (%struct.DerivedMesh*, %struct.MPoly*)* @emDM_copyPolyArray, void (%struct.DerivedMesh*, %struct.MPoly*)** %copyPolyArray, align 8, !dbg !2091
  %45 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2092
  %dm30 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %45, i32 0, i32 0, !dbg !2093
  %getTessFaceDataArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm30, i32 0, i32 52, !dbg !2094
  store i8* (%struct.DerivedMesh*, i32)* @emDM_getTessFaceDataArray, i8* (%struct.DerivedMesh*, i32)** %getTessFaceDataArray, align 8, !dbg !2095
  %46 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2096
  %dm31 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %46, i32 0, i32 0, !dbg !2097
  %calcNormals = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm31, i32 0, i32 20, !dbg !2098
  store void (%struct.DerivedMesh*)* @emDM_calcNormals, void (%struct.DerivedMesh*)** %calcNormals, align 8, !dbg !2099
  %47 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2100
  %dm32 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %47, i32 0, i32 0, !dbg !2101
  %calcLoopNormals = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm32, i32 0, i32 21, !dbg !2102
  store void (%struct.DerivedMesh*, float)* @emDM_calcLoopNormals, void (%struct.DerivedMesh*, float)** %calcLoopNormals, align 8, !dbg !2103
  %48 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2104
  %dm33 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %48, i32 0, i32 0, !dbg !2105
  %recalcTessellation = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm33, i32 0, i32 22, !dbg !2106
  store void (%struct.DerivedMesh*)* @emDM_recalcTessellation, void (%struct.DerivedMesh*)** %recalcTessellation, align 8, !dbg !2107
  %49 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2108
  %dm34 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %49, i32 0, i32 0, !dbg !2109
  %foreachMappedVert = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm34, i32 0, i32 71, !dbg !2110
  store void (%struct.DerivedMesh*, void (i8*, i32, float*, float*, i16*)*, i8*, i32)* @emDM_foreachMappedVert, void (%struct.DerivedMesh*, void (i8*, i32, float*, float*, i16*)*, i8*, i32)** %foreachMappedVert, align 8, !dbg !2111
  %50 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2112
  %dm35 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %50, i32 0, i32 0, !dbg !2113
  %foreachMappedLoop = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm35, i32 0, i32 73, !dbg !2114
  store void (%struct.DerivedMesh*, void (i8*, i32, i32, float*, float*)*, i8*, i32)* @emDM_foreachMappedLoop, void (%struct.DerivedMesh*, void (i8*, i32, i32, float*, float*)*, i8*, i32)** %foreachMappedLoop, align 8, !dbg !2115
  %51 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2116
  %dm36 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %51, i32 0, i32 0, !dbg !2117
  %foreachMappedEdge = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm36, i32 0, i32 72, !dbg !2118
  store void (%struct.DerivedMesh*, void (i8*, i32, float*, float*)*, i8*)* @emDM_foreachMappedEdge, void (%struct.DerivedMesh*, void (i8*, i32, float*, float*)*, i8*)** %foreachMappedEdge, align 8, !dbg !2119
  %52 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2120
  %dm37 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %52, i32 0, i32 0, !dbg !2121
  %foreachMappedFaceCenter = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm37, i32 0, i32 74, !dbg !2122
  store void (%struct.DerivedMesh*, void (i8*, i32, float*, float*)*, i8*, i32)* @emDM_foreachMappedFaceCenter, void (%struct.DerivedMesh*, void (i8*, i32, float*, float*)*, i8*, i32)** %foreachMappedFaceCenter, align 8, !dbg !2123
  %53 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2124
  %dm38 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %53, i32 0, i32 0, !dbg !2125
  %drawEdges = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm38, i32 0, i32 84, !dbg !2126
  store void (%struct.DerivedMesh*, i8, i8)* @emDM_drawEdges, void (%struct.DerivedMesh*, i8, i8)** %drawEdges, align 8, !dbg !2127
  %54 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2128
  %dm39 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %54, i32 0, i32 0, !dbg !2129
  %drawMappedEdges = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm39, i32 0, i32 92, !dbg !2130
  store void (%struct.DerivedMesh*, i32 (i8*, i32)*, i8*)* @emDM_drawMappedEdges, void (%struct.DerivedMesh*, i32 (i8*, i32)*, i8*)** %drawMappedEdges, align 8, !dbg !2131
  %55 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2132
  %dm40 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %55, i32 0, i32 0, !dbg !2133
  %drawMappedEdgesInterp = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm40, i32 0, i32 93, !dbg !2134
  store void (%struct.DerivedMesh*, i32 (i8*, i32)*, void (i8*, i32, float)*, i8*)* @emDM_drawMappedEdgesInterp, void (%struct.DerivedMesh*, i32 (i8*, i32)*, void (i8*, i32, float)*, i8*)** %drawMappedEdgesInterp, align 8, !dbg !2135
  %56 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2136
  %dm41 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %56, i32 0, i32 0, !dbg !2137
  %drawMappedFaces = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm41, i32 0, i32 89, !dbg !2138
  store void (%struct.DerivedMesh*, i32 (i8*, i32)*, i32 (i32, i8*)*, i32 (i8*, i32, i32)*, i8*, i32)* @emDM_drawMappedFaces, void (%struct.DerivedMesh*, i32 (i8*, i32)*, i32 (i32, i8*)*, i32 (i8*, i32, i32)*, i8*, i32)** %drawMappedFaces, align 8, !dbg !2139
  %57 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2140
  %dm42 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %57, i32 0, i32 0, !dbg !2141
  %drawMappedFacesTex = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm42, i32 0, i32 90, !dbg !2142
  store void (%struct.DerivedMesh*, i32 (i8*, i32)*, i32 (i8*, i32, i32)*, i8*, i32)* @emDM_drawMappedFacesTex, void (%struct.DerivedMesh*, i32 (i8*, i32)*, i32 (i8*, i32, i32)*, i8*, i32)** %drawMappedFacesTex, align 8, !dbg !2143
  %58 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2144
  %dm43 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %58, i32 0, i32 0, !dbg !2145
  %drawMappedFacesGLSL = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm43, i32 0, i32 91, !dbg !2146
  store void (%struct.DerivedMesh*, i32 (i32, i8*)*, i32 (i8*, i32)*, i8*)* @emDM_drawMappedFacesGLSL, void (%struct.DerivedMesh*, i32 (i32, i8*)*, i32 (i8*, i32)*, i8*)** %drawMappedFacesGLSL, align 8, !dbg !2147
  %59 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2148
  %dm44 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %59, i32 0, i32 0, !dbg !2149
  %drawMappedFacesMat = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm44, i32 0, i32 94, !dbg !2150
  store void (%struct.DerivedMesh*, void (i8*, i32, i8*)*, i8 (i8*, i32)*, i8*)* @emDM_drawMappedFacesMat, void (%struct.DerivedMesh*, void (i8*, i32, i8*)*, i8 (i8*, i32)*, i8*)** %drawMappedFacesMat, align 8, !dbg !2151
  %60 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2152
  %dm45 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %60, i32 0, i32 0, !dbg !2153
  %drawFacesTex = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm45, i32 0, i32 87, !dbg !2154
  store void (%struct.DerivedMesh*, i32 (%struct.MTFace*, i8, i32)*, i32 (i8*, i32, i32)*, i8*, i32)* @emDM_drawFacesTex, void (%struct.DerivedMesh*, i32 (%struct.MTFace*, i8, i32)*, i32 (i8*, i32, i32)*, i8*, i32)** %drawFacesTex, align 8, !dbg !2155
  %61 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2156
  %dm46 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %61, i32 0, i32 0, !dbg !2157
  %drawFacesGLSL = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm46, i32 0, i32 88, !dbg !2158
  store void (%struct.DerivedMesh*, i32 (i32, i8*)*)* @emDM_drawFacesGLSL, void (%struct.DerivedMesh*, i32 (i32, i8*)*)** %drawFacesGLSL, align 8, !dbg !2159
  %62 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2160
  %dm47 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %62, i32 0, i32 0, !dbg !2161
  %drawUVEdges = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm47, i32 0, i32 83, !dbg !2162
  store void (%struct.DerivedMesh*)* @emDM_drawUVEdges, void (%struct.DerivedMesh*)** %drawUVEdges, align 8, !dbg !2163
  %63 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2164
  %dm48 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %63, i32 0, i32 0, !dbg !2165
  %release = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm48, i32 0, i32 95, !dbg !2166
  store void (%struct.DerivedMesh*)* @emDM_release, void (%struct.DerivedMesh*)** %release, align 8, !dbg !2167
  %64 = load [3 x float]*, [3 x float]** %vertexCos.addr, align 8, !dbg !2168
  %65 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2169
  %vertexCos49 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %65, i32 0, i32 2, !dbg !2170
  store [3 x float]* %64, [3 x float]** %vertexCos49, align 8, !dbg !2171
  %66 = load [3 x float]*, [3 x float]** %vertexCos.addr, align 8, !dbg !2172
  %cmp = icmp ne [3 x float]* %66, null, !dbg !2173
  %conv = zext i1 %cmp to i32, !dbg !2173
  %67 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2174
  %dm50 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %67, i32 0, i32 0, !dbg !2175
  %deformedOnly = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm50, i32 0, i32 11, !dbg !2176
  store i32 %conv, i32* %deformedOnly, align 8, !dbg !2177
  %68 = load i32, i32* %cd_dvert_offset, align 4, !dbg !2178
  %cmp51 = icmp ne i32 %68, -1, !dbg !2180
  br i1 %cmp51, label %if.then, label %if.end, !dbg !2181

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !2182, metadata !DIExpression()), !dbg !2271
  call void @llvm.dbg.declare(metadata %struct.BMVert** %eve, metadata !2272, metadata !DIExpression()), !dbg !2273
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2274, metadata !DIExpression()), !dbg !2275
  %69 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2276
  %dm53 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %69, i32 0, i32 0, !dbg !2277
  call void @DM_add_vert_layer(%struct.DerivedMesh* %dm53, i32 2, i32 1, i8* null), !dbg !2278
  %70 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !2279
  %call54 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %70, i8 zeroext 1, i8* null), !dbg !2279
  %71 = bitcast i8* %call54 to %struct.BMVert*, !dbg !2279
  store %struct.BMVert* %71, %struct.BMVert** %eve, align 8, !dbg !2279
  store i32 0, i32* %i, align 4, !dbg !2279
  br label %for.cond, !dbg !2279

for.cond:                                         ; preds = %for.inc, %if.then
  %72 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !2281
  %tobool = icmp ne %struct.BMVert* %72, null, !dbg !2279
  br i1 %tobool, label %for.body, label %for.end, !dbg !2279

for.body:                                         ; preds = %for.cond
  %73 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2283
  %dm55 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %73, i32 0, i32 0, !dbg !2285
  %74 = load i32, i32* %i, align 4, !dbg !2286
  %75 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !2287
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %75, i32 0, i32 0, !dbg !2287
  %data = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head, i32 0, i32 0, !dbg !2287
  %76 = load i8*, i8** %data, align 8, !dbg !2287
  %77 = load i32, i32* %cd_dvert_offset, align 4, !dbg !2287
  %idx.ext = sext i32 %77 to i64, !dbg !2287
  %add.ptr = getelementptr inbounds i8, i8* %76, i64 %idx.ext, !dbg !2287
  call void @DM_set_vert_data(%struct.DerivedMesh* %dm55, i32 %74, i32 2, i8* %add.ptr), !dbg !2288
  br label %for.inc, !dbg !2289

for.inc:                                          ; preds = %for.body
  %call56 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !2281
  %78 = bitcast i8* %call56 to %struct.BMVert*, !dbg !2281
  store %struct.BMVert* %78, %struct.BMVert** %eve, align 8, !dbg !2281
  %79 = load i32, i32* %i, align 4, !dbg !2281
  %inc = add nsw i32 %79, 1, !dbg !2281
  store i32 %inc, i32* %i, align 4, !dbg !2281
  br label %for.cond, !dbg !2281, !llvm.loop !2290

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !2292

if.end:                                           ; preds = %for.end, %entry
  %80 = load i32, i32* %cd_skin_offset, align 4, !dbg !2293
  %cmp57 = icmp ne i32 %80, -1, !dbg !2295
  br i1 %cmp57, label %if.then59, label %if.end77, !dbg !2296

if.then59:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter60, metadata !2297, metadata !DIExpression()), !dbg !2299
  call void @llvm.dbg.declare(metadata %struct.BMVert** %eve61, metadata !2300, metadata !DIExpression()), !dbg !2301
  call void @llvm.dbg.declare(metadata i32* %i62, metadata !2302, metadata !DIExpression()), !dbg !2303
  %81 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2304
  %dm63 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %81, i32 0, i32 0, !dbg !2305
  call void @DM_add_vert_layer(%struct.DerivedMesh* %dm63, i32 36, i32 1, i8* null), !dbg !2306
  %82 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !2307
  %call64 = call i8* @BM_iter_new(%struct.BMIter* %iter60, %struct.BMesh* %82, i8 zeroext 1, i8* null), !dbg !2307
  %83 = bitcast i8* %call64 to %struct.BMVert*, !dbg !2307
  store %struct.BMVert* %83, %struct.BMVert** %eve61, align 8, !dbg !2307
  store i32 0, i32* %i62, align 4, !dbg !2307
  br label %for.cond65, !dbg !2307

for.cond65:                                       ; preds = %for.inc73, %if.then59
  %84 = load %struct.BMVert*, %struct.BMVert** %eve61, align 8, !dbg !2309
  %tobool66 = icmp ne %struct.BMVert* %84, null, !dbg !2307
  br i1 %tobool66, label %for.body67, label %for.end76, !dbg !2307

for.body67:                                       ; preds = %for.cond65
  %85 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2311
  %dm68 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %85, i32 0, i32 0, !dbg !2313
  %86 = load i32, i32* %i62, align 4, !dbg !2314
  %87 = load %struct.BMVert*, %struct.BMVert** %eve61, align 8, !dbg !2315
  %head69 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %87, i32 0, i32 0, !dbg !2315
  %data70 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head69, i32 0, i32 0, !dbg !2315
  %88 = load i8*, i8** %data70, align 8, !dbg !2315
  %89 = load i32, i32* %cd_skin_offset, align 4, !dbg !2315
  %idx.ext71 = sext i32 %89 to i64, !dbg !2315
  %add.ptr72 = getelementptr inbounds i8, i8* %88, i64 %idx.ext71, !dbg !2315
  call void @DM_set_vert_data(%struct.DerivedMesh* %dm68, i32 %86, i32 36, i8* %add.ptr72), !dbg !2316
  br label %for.inc73, !dbg !2317

for.inc73:                                        ; preds = %for.body67
  %call74 = call i8* @BM_iter_step(%struct.BMIter* %iter60), !dbg !2309
  %90 = bitcast i8* %call74 to %struct.BMVert*, !dbg !2309
  store %struct.BMVert* %90, %struct.BMVert** %eve61, align 8, !dbg !2309
  %91 = load i32, i32* %i62, align 4, !dbg !2309
  %inc75 = add nsw i32 %91, 1, !dbg !2309
  store i32 %inc75, i32* %i62, align 4, !dbg !2309
  br label %for.cond65, !dbg !2309, !llvm.loop !2318

for.end76:                                        ; preds = %for.cond65
  br label %if.end77, !dbg !2320

if.end77:                                         ; preds = %for.end76, %if.end
  %92 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2321
  %93 = bitcast %struct.EditDerivedBMesh* %92 to %struct.DerivedMesh*, !dbg !2322
  ret %struct.DerivedMesh* %93, !dbg !2323
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

declare dso_local i32 @CustomData_get_offset(%struct.CustomData*, i32) #2

declare dso_local void @DM_init(%struct.DerivedMesh*, i32, i32, i32, i32, i32, i32) #2

declare dso_local zeroext i8 @BM_mesh_cd_flag_from_bmesh(%struct.BMesh*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @emDM_getVertCos(%struct.DerivedMesh* %dm, [3 x float]* %r_cos) #0 !dbg !2324 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %r_cos.addr = alloca [3 x float]*, align 8
  %bmdm = alloca %struct.EditDerivedBMesh*, align 8
  %bm = alloca %struct.BMesh*, align 8
  %eve = alloca %struct.BMVert*, align 8
  %iter = alloca %struct.BMIter, align 8
  %i = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !2325, metadata !DIExpression()), !dbg !2326
  store [3 x float]* %r_cos, [3 x float]** %r_cos.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %r_cos.addr, metadata !2327, metadata !DIExpression()), !dbg !2328
  call void @llvm.dbg.declare(metadata %struct.EditDerivedBMesh** %bmdm, metadata !2329, metadata !DIExpression()), !dbg !2330
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !2331
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.EditDerivedBMesh*, !dbg !2332
  store %struct.EditDerivedBMesh* %1, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2330
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm, metadata !2333, metadata !DIExpression()), !dbg !2334
  %2 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2335
  %em = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %2, i32 0, i32 1, !dbg !2336
  %3 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !2336
  %bm1 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %3, i32 0, i32 0, !dbg !2337
  %4 = load %struct.BMesh*, %struct.BMesh** %bm1, align 8, !dbg !2337
  store %struct.BMesh* %4, %struct.BMesh** %bm, align 8, !dbg !2334
  call void @llvm.dbg.declare(metadata %struct.BMVert** %eve, metadata !2338, metadata !DIExpression()), !dbg !2339
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !2340, metadata !DIExpression()), !dbg !2341
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2342, metadata !DIExpression()), !dbg !2343
  %5 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2344
  %vertexCos = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %5, i32 0, i32 2, !dbg !2346
  %6 = load [3 x float]*, [3 x float]** %vertexCos, align 8, !dbg !2346
  %tobool = icmp ne [3 x float]* %6, null, !dbg !2344
  br i1 %tobool, label %if.then, label %if.else, !dbg !2347

if.then:                                          ; preds = %entry
  %7 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !2348
  %call = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %7, i8 zeroext 1, i8* null), !dbg !2348
  %8 = bitcast i8* %call to %struct.BMVert*, !dbg !2348
  store %struct.BMVert* %8, %struct.BMVert** %eve, align 8, !dbg !2348
  store i32 0, i32* %i, align 4, !dbg !2348
  br label %for.cond, !dbg !2348

for.cond:                                         ; preds = %for.inc, %if.then
  %9 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !2351
  %tobool2 = icmp ne %struct.BMVert* %9, null, !dbg !2348
  br i1 %tobool2, label %for.body, label %for.end, !dbg !2348

for.body:                                         ; preds = %for.cond
  %10 = load [3 x float]*, [3 x float]** %r_cos.addr, align 8, !dbg !2353
  %11 = load i32, i32* %i, align 4, !dbg !2355
  %idxprom = sext i32 %11 to i64, !dbg !2353
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %10, i64 %idxprom, !dbg !2353
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !2353
  %12 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2356
  %vertexCos3 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %12, i32 0, i32 2, !dbg !2357
  %13 = load [3 x float]*, [3 x float]** %vertexCos3, align 8, !dbg !2357
  %14 = load i32, i32* %i, align 4, !dbg !2358
  %idxprom4 = sext i32 %14 to i64, !dbg !2356
  %arrayidx5 = getelementptr inbounds [3 x float], [3 x float]* %13, i64 %idxprom4, !dbg !2356
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx5, i64 0, i64 0, !dbg !2356
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay6), !dbg !2359
  br label %for.inc, !dbg !2360

for.inc:                                          ; preds = %for.body
  %call7 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !2351
  %15 = bitcast i8* %call7 to %struct.BMVert*, !dbg !2351
  store %struct.BMVert* %15, %struct.BMVert** %eve, align 8, !dbg !2351
  %16 = load i32, i32* %i, align 4, !dbg !2351
  %inc = add nsw i32 %16, 1, !dbg !2351
  store i32 %inc, i32* %i, align 4, !dbg !2351
  br label %for.cond, !dbg !2351, !llvm.loop !2361

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !2363

if.else:                                          ; preds = %entry
  %17 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !2364
  %call8 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %17, i8 zeroext 1, i8* null), !dbg !2364
  %18 = bitcast i8* %call8 to %struct.BMVert*, !dbg !2364
  store %struct.BMVert* %18, %struct.BMVert** %eve, align 8, !dbg !2364
  store i32 0, i32* %i, align 4, !dbg !2364
  br label %for.cond9, !dbg !2364

for.cond9:                                        ; preds = %for.inc16, %if.else
  %19 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !2367
  %tobool10 = icmp ne %struct.BMVert* %19, null, !dbg !2364
  br i1 %tobool10, label %for.body11, label %for.end19, !dbg !2364

for.body11:                                       ; preds = %for.cond9
  %20 = load [3 x float]*, [3 x float]** %r_cos.addr, align 8, !dbg !2369
  %21 = load i32, i32* %i, align 4, !dbg !2371
  %idxprom12 = sext i32 %21 to i64, !dbg !2369
  %arrayidx13 = getelementptr inbounds [3 x float], [3 x float]* %20, i64 %idxprom12, !dbg !2369
  %arraydecay14 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx13, i64 0, i64 0, !dbg !2369
  %22 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !2372
  %co = getelementptr inbounds %struct.BMVert, %struct.BMVert* %22, i32 0, i32 2, !dbg !2373
  %arraydecay15 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !2372
  call void @copy_v3_v3(float* %arraydecay14, float* %arraydecay15), !dbg !2374
  br label %for.inc16, !dbg !2375

for.inc16:                                        ; preds = %for.body11
  %call17 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !2367
  %23 = bitcast i8* %call17 to %struct.BMVert*, !dbg !2367
  store %struct.BMVert* %23, %struct.BMVert** %eve, align 8, !dbg !2367
  %24 = load i32, i32* %i, align 4, !dbg !2367
  %inc18 = add nsw i32 %24, 1, !dbg !2367
  store i32 %inc18, i32* %i, align 4, !dbg !2367
  br label %for.cond9, !dbg !2367, !llvm.loop !2376

for.end19:                                        ; preds = %for.cond9
  br label %if.end

if.end:                                           ; preds = %for.end19, %for.end
  ret void, !dbg !2378
}

; Function Attrs: noinline nounwind uwtable
define internal void @emDM_getMinMax(%struct.DerivedMesh* %dm, float* %r_min, float* %r_max) #0 !dbg !2379 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %r_min.addr = alloca float*, align 8
  %r_max.addr = alloca float*, align 8
  %bmdm = alloca %struct.EditDerivedBMesh*, align 8
  %bm = alloca %struct.BMesh*, align 8
  %eve = alloca %struct.BMVert*, align 8
  %iter = alloca %struct.BMIter, align 8
  %i = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !2380, metadata !DIExpression()), !dbg !2381
  store float* %r_min, float** %r_min.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_min.addr, metadata !2382, metadata !DIExpression()), !dbg !2383
  store float* %r_max, float** %r_max.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_max.addr, metadata !2384, metadata !DIExpression()), !dbg !2385
  call void @llvm.dbg.declare(metadata %struct.EditDerivedBMesh** %bmdm, metadata !2386, metadata !DIExpression()), !dbg !2387
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !2388
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.EditDerivedBMesh*, !dbg !2389
  store %struct.EditDerivedBMesh* %1, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2387
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm, metadata !2390, metadata !DIExpression()), !dbg !2391
  %2 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2392
  %em = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %2, i32 0, i32 1, !dbg !2393
  %3 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !2393
  %bm1 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %3, i32 0, i32 0, !dbg !2394
  %4 = load %struct.BMesh*, %struct.BMesh** %bm1, align 8, !dbg !2394
  store %struct.BMesh* %4, %struct.BMesh** %bm, align 8, !dbg !2391
  call void @llvm.dbg.declare(metadata %struct.BMVert** %eve, metadata !2395, metadata !DIExpression()), !dbg !2396
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !2397, metadata !DIExpression()), !dbg !2398
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2399, metadata !DIExpression()), !dbg !2400
  %5 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !2401
  %totvert = getelementptr inbounds %struct.BMesh, %struct.BMesh* %5, i32 0, i32 0, !dbg !2403
  %6 = load i32, i32* %totvert, align 8, !dbg !2403
  %tobool = icmp ne i32 %6, 0, !dbg !2401
  br i1 %tobool, label %if.then, label %if.else15, !dbg !2404

if.then:                                          ; preds = %entry
  %7 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2405
  %vertexCos = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %7, i32 0, i32 2, !dbg !2408
  %8 = load [3 x float]*, [3 x float]** %vertexCos, align 8, !dbg !2408
  %tobool2 = icmp ne [3 x float]* %8, null, !dbg !2405
  br i1 %tobool2, label %if.then3, label %if.else, !dbg !2409

if.then3:                                         ; preds = %if.then
  %9 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !2410
  %call = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %9, i8 zeroext 1, i8* null), !dbg !2410
  %10 = bitcast i8* %call to %struct.BMVert*, !dbg !2410
  store %struct.BMVert* %10, %struct.BMVert** %eve, align 8, !dbg !2410
  store i32 0, i32* %i, align 4, !dbg !2410
  br label %for.cond, !dbg !2410

for.cond:                                         ; preds = %for.inc, %if.then3
  %11 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !2413
  %tobool4 = icmp ne %struct.BMVert* %11, null, !dbg !2410
  br i1 %tobool4, label %for.body, label %for.end, !dbg !2410

for.body:                                         ; preds = %for.cond
  %12 = load float*, float** %r_min.addr, align 8, !dbg !2415
  %13 = load float*, float** %r_max.addr, align 8, !dbg !2417
  %14 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2418
  %vertexCos5 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %14, i32 0, i32 2, !dbg !2419
  %15 = load [3 x float]*, [3 x float]** %vertexCos5, align 8, !dbg !2419
  %16 = load i32, i32* %i, align 4, !dbg !2420
  %idxprom = sext i32 %16 to i64, !dbg !2418
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %15, i64 %idxprom, !dbg !2418
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !2418
  call void @minmax_v3v3_v3(float* %12, float* %13, float* %arraydecay), !dbg !2421
  br label %for.inc, !dbg !2422

for.inc:                                          ; preds = %for.body
  %call6 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !2413
  %17 = bitcast i8* %call6 to %struct.BMVert*, !dbg !2413
  store %struct.BMVert* %17, %struct.BMVert** %eve, align 8, !dbg !2413
  %18 = load i32, i32* %i, align 4, !dbg !2413
  %inc = add nsw i32 %18, 1, !dbg !2413
  store i32 %inc, i32* %i, align 4, !dbg !2413
  br label %for.cond, !dbg !2413, !llvm.loop !2423

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !2425

if.else:                                          ; preds = %if.then
  %19 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !2426
  %call7 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %19, i8 zeroext 1, i8* null), !dbg !2426
  %20 = bitcast i8* %call7 to %struct.BMVert*, !dbg !2426
  store %struct.BMVert* %20, %struct.BMVert** %eve, align 8, !dbg !2426
  br label %for.cond8, !dbg !2426

for.cond8:                                        ; preds = %for.inc12, %if.else
  %21 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !2429
  %tobool9 = icmp ne %struct.BMVert* %21, null, !dbg !2426
  br i1 %tobool9, label %for.body10, label %for.end14, !dbg !2426

for.body10:                                       ; preds = %for.cond8
  %22 = load float*, float** %r_min.addr, align 8, !dbg !2431
  %23 = load float*, float** %r_max.addr, align 8, !dbg !2433
  %24 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !2434
  %co = getelementptr inbounds %struct.BMVert, %struct.BMVert* %24, i32 0, i32 2, !dbg !2435
  %arraydecay11 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !2434
  call void @minmax_v3v3_v3(float* %22, float* %23, float* %arraydecay11), !dbg !2436
  br label %for.inc12, !dbg !2437

for.inc12:                                        ; preds = %for.body10
  %call13 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !2429
  %25 = bitcast i8* %call13 to %struct.BMVert*, !dbg !2429
  store %struct.BMVert* %25, %struct.BMVert** %eve, align 8, !dbg !2429
  br label %for.cond8, !dbg !2429, !llvm.loop !2438

for.end14:                                        ; preds = %for.cond8
  br label %if.end

if.end:                                           ; preds = %for.end14, %for.end
  br label %if.end16, !dbg !2440

if.else15:                                        ; preds = %entry
  %26 = load float*, float** %r_min.addr, align 8, !dbg !2441
  call void @zero_v3(float* %26), !dbg !2443
  %27 = load float*, float** %r_max.addr, align 8, !dbg !2444
  call void @zero_v3(float* %27), !dbg !2445
  br label %if.end16

if.end16:                                         ; preds = %if.else15, %if.end
  ret void, !dbg !2446
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.CustomData* @bmDm_getVertDataLayout(%struct.DerivedMesh* %dm) #0 !dbg !2447 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %bmdm = alloca %struct.EditDerivedBMesh*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !2448, metadata !DIExpression()), !dbg !2449
  call void @llvm.dbg.declare(metadata %struct.EditDerivedBMesh** %bmdm, metadata !2450, metadata !DIExpression()), !dbg !2451
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !2452
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.EditDerivedBMesh*, !dbg !2453
  store %struct.EditDerivedBMesh* %1, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2451
  %2 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2454
  %em = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %2, i32 0, i32 1, !dbg !2455
  %3 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !2455
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %3, i32 0, i32 0, !dbg !2456
  %4 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !2456
  %vdata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %4, i32 0, i32 24, !dbg !2457
  ret %struct.CustomData* %vdata, !dbg !2458
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.CustomData* @bmDm_getEdgeDataLayout(%struct.DerivedMesh* %dm) #0 !dbg !2459 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %bmdm = alloca %struct.EditDerivedBMesh*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !2460, metadata !DIExpression()), !dbg !2461
  call void @llvm.dbg.declare(metadata %struct.EditDerivedBMesh** %bmdm, metadata !2462, metadata !DIExpression()), !dbg !2463
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !2464
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.EditDerivedBMesh*, !dbg !2465
  store %struct.EditDerivedBMesh* %1, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2463
  %2 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2466
  %em = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %2, i32 0, i32 1, !dbg !2467
  %3 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !2467
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %3, i32 0, i32 0, !dbg !2468
  %4 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !2468
  %edata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %4, i32 0, i32 25, !dbg !2469
  ret %struct.CustomData* %edata, !dbg !2470
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.CustomData* @bmDm_getTessFaceDataLayout(%struct.DerivedMesh* %dm) #0 !dbg !2471 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %bmdm = alloca %struct.EditDerivedBMesh*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !2472, metadata !DIExpression()), !dbg !2473
  call void @llvm.dbg.declare(metadata %struct.EditDerivedBMesh** %bmdm, metadata !2474, metadata !DIExpression()), !dbg !2475
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !2476
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.EditDerivedBMesh*, !dbg !2477
  store %struct.EditDerivedBMesh* %1, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2475
  %2 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2478
  %dm1 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %2, i32 0, i32 0, !dbg !2479
  %faceData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %dm1, i32 0, i32 2, !dbg !2480
  ret %struct.CustomData* %faceData, !dbg !2481
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.CustomData* @bmDm_getLoopDataLayout(%struct.DerivedMesh* %dm) #0 !dbg !2482 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %bmdm = alloca %struct.EditDerivedBMesh*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !2483, metadata !DIExpression()), !dbg !2484
  call void @llvm.dbg.declare(metadata %struct.EditDerivedBMesh** %bmdm, metadata !2485, metadata !DIExpression()), !dbg !2486
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !2487
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.EditDerivedBMesh*, !dbg !2488
  store %struct.EditDerivedBMesh* %1, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2486
  %2 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2489
  %em = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %2, i32 0, i32 1, !dbg !2490
  %3 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !2490
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %3, i32 0, i32 0, !dbg !2491
  %4 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !2491
  %ldata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %4, i32 0, i32 26, !dbg !2492
  ret %struct.CustomData* %ldata, !dbg !2493
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.CustomData* @bmDm_getPolyDataLayout(%struct.DerivedMesh* %dm) #0 !dbg !2494 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %bmdm = alloca %struct.EditDerivedBMesh*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !2495, metadata !DIExpression()), !dbg !2496
  call void @llvm.dbg.declare(metadata %struct.EditDerivedBMesh** %bmdm, metadata !2497, metadata !DIExpression()), !dbg !2498
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !2499
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.EditDerivedBMesh*, !dbg !2500
  store %struct.EditDerivedBMesh* %1, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2498
  %2 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2501
  %em = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %2, i32 0, i32 1, !dbg !2502
  %3 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !2502
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %3, i32 0, i32 0, !dbg !2503
  %4 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !2503
  %pdata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %4, i32 0, i32 27, !dbg !2504
  ret %struct.CustomData* %pdata, !dbg !2505
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @emDM_getNumVerts(%struct.DerivedMesh* %dm) #0 !dbg !2506 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %bmdm = alloca %struct.EditDerivedBMesh*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !2507, metadata !DIExpression()), !dbg !2508
  call void @llvm.dbg.declare(metadata %struct.EditDerivedBMesh** %bmdm, metadata !2509, metadata !DIExpression()), !dbg !2510
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !2511
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.EditDerivedBMesh*, !dbg !2512
  store %struct.EditDerivedBMesh* %1, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2510
  %2 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2513
  %em = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %2, i32 0, i32 1, !dbg !2514
  %3 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !2514
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %3, i32 0, i32 0, !dbg !2515
  %4 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !2515
  %totvert = getelementptr inbounds %struct.BMesh, %struct.BMesh* %4, i32 0, i32 0, !dbg !2516
  %5 = load i32, i32* %totvert, align 8, !dbg !2516
  ret i32 %5, !dbg !2517
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @emDM_getNumEdges(%struct.DerivedMesh* %dm) #0 !dbg !2518 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %bmdm = alloca %struct.EditDerivedBMesh*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !2519, metadata !DIExpression()), !dbg !2520
  call void @llvm.dbg.declare(metadata %struct.EditDerivedBMesh** %bmdm, metadata !2521, metadata !DIExpression()), !dbg !2522
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !2523
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.EditDerivedBMesh*, !dbg !2524
  store %struct.EditDerivedBMesh* %1, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2522
  %2 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2525
  %em = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %2, i32 0, i32 1, !dbg !2526
  %3 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !2526
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %3, i32 0, i32 0, !dbg !2527
  %4 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !2527
  %totedge = getelementptr inbounds %struct.BMesh, %struct.BMesh* %4, i32 0, i32 1, !dbg !2528
  %5 = load i32, i32* %totedge, align 4, !dbg !2528
  ret i32 %5, !dbg !2529
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @emDM_getNumTessFaces(%struct.DerivedMesh* %dm) #0 !dbg !2530 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %bmdm = alloca %struct.EditDerivedBMesh*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !2531, metadata !DIExpression()), !dbg !2532
  call void @llvm.dbg.declare(metadata %struct.EditDerivedBMesh** %bmdm, metadata !2533, metadata !DIExpression()), !dbg !2534
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !2535
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.EditDerivedBMesh*, !dbg !2536
  store %struct.EditDerivedBMesh* %1, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2534
  %2 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2537
  %em = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %2, i32 0, i32 1, !dbg !2538
  %3 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !2538
  %tottri = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %3, i32 0, i32 4, !dbg !2539
  %4 = load i32, i32* %tottri, align 8, !dbg !2539
  ret i32 %4, !dbg !2540
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @emDM_getNumLoops(%struct.DerivedMesh* %dm) #0 !dbg !2541 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %bmdm = alloca %struct.EditDerivedBMesh*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !2542, metadata !DIExpression()), !dbg !2543
  call void @llvm.dbg.declare(metadata %struct.EditDerivedBMesh** %bmdm, metadata !2544, metadata !DIExpression()), !dbg !2545
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !2546
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.EditDerivedBMesh*, !dbg !2547
  store %struct.EditDerivedBMesh* %1, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2545
  %2 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2548
  %em = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %2, i32 0, i32 1, !dbg !2549
  %3 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !2549
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %3, i32 0, i32 0, !dbg !2550
  %4 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !2550
  %totloop = getelementptr inbounds %struct.BMesh, %struct.BMesh* %4, i32 0, i32 2, !dbg !2551
  %5 = load i32, i32* %totloop, align 8, !dbg !2551
  ret i32 %5, !dbg !2552
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @emDM_getNumPolys(%struct.DerivedMesh* %dm) #0 !dbg !2553 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %bmdm = alloca %struct.EditDerivedBMesh*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !2554, metadata !DIExpression()), !dbg !2555
  call void @llvm.dbg.declare(metadata %struct.EditDerivedBMesh** %bmdm, metadata !2556, metadata !DIExpression()), !dbg !2557
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !2558
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.EditDerivedBMesh*, !dbg !2559
  store %struct.EditDerivedBMesh* %1, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2557
  %2 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2560
  %em = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %2, i32 0, i32 1, !dbg !2561
  %3 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !2561
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %3, i32 0, i32 0, !dbg !2562
  %4 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !2562
  %totface = getelementptr inbounds %struct.BMesh, %struct.BMesh* %4, i32 0, i32 3, !dbg !2563
  %5 = load i32, i32* %totface, align 4, !dbg !2563
  ret i32 %5, !dbg !2564
}

; Function Attrs: noinline nounwind uwtable
define internal void @emDM_getVert(%struct.DerivedMesh* %dm, i32 %index, %struct.MVert* %r_vert) #0 !dbg !2565 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %index.addr = alloca i32, align 4
  %r_vert.addr = alloca %struct.MVert*, align 8
  %bmdm = alloca %struct.EditDerivedBMesh*, align 8
  %bm = alloca %struct.BMesh*, align 8
  %ev = alloca %struct.BMVert*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !2570, metadata !DIExpression()), !dbg !2571
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !2572, metadata !DIExpression()), !dbg !2573
  store %struct.MVert* %r_vert, %struct.MVert** %r_vert.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MVert** %r_vert.addr, metadata !2574, metadata !DIExpression()), !dbg !2575
  call void @llvm.dbg.declare(metadata %struct.EditDerivedBMesh** %bmdm, metadata !2576, metadata !DIExpression()), !dbg !2577
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !2578
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.EditDerivedBMesh*, !dbg !2579
  store %struct.EditDerivedBMesh* %1, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2577
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm, metadata !2580, metadata !DIExpression()), !dbg !2581
  %2 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2582
  %em = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %2, i32 0, i32 1, !dbg !2583
  %3 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !2583
  %bm1 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %3, i32 0, i32 0, !dbg !2584
  %4 = load %struct.BMesh*, %struct.BMesh** %bm1, align 8, !dbg !2584
  store %struct.BMesh* %4, %struct.BMesh** %bm, align 8, !dbg !2581
  call void @llvm.dbg.declare(metadata %struct.BMVert** %ev, metadata !2585, metadata !DIExpression()), !dbg !2586
  %5 = load i32, i32* %index.addr, align 4, !dbg !2587
  %cmp = icmp slt i32 %5, 0, !dbg !2587
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !2587

lor.lhs.false:                                    ; preds = %entry
  %6 = load i32, i32* %index.addr, align 4, !dbg !2587
  %7 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !2587
  %totvert = getelementptr inbounds %struct.BMesh, %struct.BMesh* %7, i32 0, i32 0, !dbg !2587
  %8 = load i32, i32* %totvert, align 8, !dbg !2587
  %cmp2 = icmp sge i32 %6, %8, !dbg !2587
  br i1 %cmp2, label %if.then, label %if.end, !dbg !2589

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %if.end8, !dbg !2590

if.end:                                           ; preds = %lor.lhs.false
  %9 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !2592
  %vtable = getelementptr inbounds %struct.BMesh, %struct.BMesh* %9, i32 0, i32 13, !dbg !2593
  %10 = load %struct.BMVert**, %struct.BMVert*** %vtable, align 8, !dbg !2593
  %11 = load i32, i32* %index.addr, align 4, !dbg !2594
  %idxprom = sext i32 %11 to i64, !dbg !2592
  %arrayidx = getelementptr inbounds %struct.BMVert*, %struct.BMVert** %10, i64 %idxprom, !dbg !2592
  %12 = load %struct.BMVert*, %struct.BMVert** %arrayidx, align 8, !dbg !2592
  store %struct.BMVert* %12, %struct.BMVert** %ev, align 8, !dbg !2595
  %13 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !2596
  %14 = load %struct.BMVert*, %struct.BMVert** %ev, align 8, !dbg !2597
  %15 = load %struct.MVert*, %struct.MVert** %r_vert.addr, align 8, !dbg !2598
  call void @bmvert_to_mvert(%struct.BMesh* %13, %struct.BMVert* %14, %struct.MVert* %15), !dbg !2599
  %16 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2600
  %vertexCos = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %16, i32 0, i32 2, !dbg !2602
  %17 = load [3 x float]*, [3 x float]** %vertexCos, align 8, !dbg !2602
  %tobool = icmp ne [3 x float]* %17, null, !dbg !2600
  br i1 %tobool, label %if.then3, label %if.end8, !dbg !2603

if.then3:                                         ; preds = %if.end
  %18 = load %struct.MVert*, %struct.MVert** %r_vert.addr, align 8, !dbg !2604
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %18, i32 0, i32 0, !dbg !2605
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !2604
  %19 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2606
  %vertexCos4 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %19, i32 0, i32 2, !dbg !2607
  %20 = load [3 x float]*, [3 x float]** %vertexCos4, align 8, !dbg !2607
  %21 = load i32, i32* %index.addr, align 4, !dbg !2608
  %idxprom5 = sext i32 %21 to i64, !dbg !2606
  %arrayidx6 = getelementptr inbounds [3 x float], [3 x float]* %20, i64 %idxprom5, !dbg !2606
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx6, i64 0, i64 0, !dbg !2606
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay7), !dbg !2609
  br label %if.end8, !dbg !2609

if.end8:                                          ; preds = %if.then, %if.then3, %if.end
  ret void, !dbg !2610
}

; Function Attrs: noinline nounwind uwtable
define internal void @emDM_getVertCo(%struct.DerivedMesh* %dm, i32 %index, float* %r_co) #0 !dbg !2611 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %index.addr = alloca i32, align 4
  %r_co.addr = alloca float*, align 8
  %bmdm = alloca %struct.EditDerivedBMesh*, align 8
  %bm = alloca %struct.BMesh*, align 8
  %ev = alloca %struct.BMVert*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !2612, metadata !DIExpression()), !dbg !2613
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !2614, metadata !DIExpression()), !dbg !2615
  store float* %r_co, float** %r_co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_co.addr, metadata !2616, metadata !DIExpression()), !dbg !2617
  call void @llvm.dbg.declare(metadata %struct.EditDerivedBMesh** %bmdm, metadata !2618, metadata !DIExpression()), !dbg !2619
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !2620
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.EditDerivedBMesh*, !dbg !2621
  store %struct.EditDerivedBMesh* %1, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2619
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm, metadata !2622, metadata !DIExpression()), !dbg !2623
  %2 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2624
  %em = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %2, i32 0, i32 1, !dbg !2625
  %3 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !2625
  %bm1 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %3, i32 0, i32 0, !dbg !2626
  %4 = load %struct.BMesh*, %struct.BMesh** %bm1, align 8, !dbg !2626
  store %struct.BMesh* %4, %struct.BMesh** %bm, align 8, !dbg !2623
  %5 = load i32, i32* %index.addr, align 4, !dbg !2627
  %cmp = icmp slt i32 %5, 0, !dbg !2627
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !2627

lor.lhs.false:                                    ; preds = %entry
  %6 = load i32, i32* %index.addr, align 4, !dbg !2627
  %7 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !2627
  %totvert = getelementptr inbounds %struct.BMesh, %struct.BMesh* %7, i32 0, i32 0, !dbg !2627
  %8 = load i32, i32* %totvert, align 8, !dbg !2627
  %cmp2 = icmp sge i32 %6, %8, !dbg !2627
  br i1 %cmp2, label %if.then, label %if.end, !dbg !2629

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %if.end8, !dbg !2630

if.end:                                           ; preds = %lor.lhs.false
  %9 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2632
  %vertexCos = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %9, i32 0, i32 2, !dbg !2634
  %10 = load [3 x float]*, [3 x float]** %vertexCos, align 8, !dbg !2634
  %tobool = icmp ne [3 x float]* %10, null, !dbg !2632
  br i1 %tobool, label %if.then3, label %if.else, !dbg !2635

if.then3:                                         ; preds = %if.end
  %11 = load float*, float** %r_co.addr, align 8, !dbg !2636
  %12 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2638
  %vertexCos4 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %12, i32 0, i32 2, !dbg !2639
  %13 = load [3 x float]*, [3 x float]** %vertexCos4, align 8, !dbg !2639
  %14 = load i32, i32* %index.addr, align 4, !dbg !2640
  %idxprom = sext i32 %14 to i64, !dbg !2638
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %13, i64 %idxprom, !dbg !2638
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !2638
  call void @copy_v3_v3(float* %11, float* %arraydecay), !dbg !2641
  br label %if.end8, !dbg !2642

if.else:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.BMVert** %ev, metadata !2643, metadata !DIExpression()), !dbg !2645
  %15 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !2646
  %vtable = getelementptr inbounds %struct.BMesh, %struct.BMesh* %15, i32 0, i32 13, !dbg !2647
  %16 = load %struct.BMVert**, %struct.BMVert*** %vtable, align 8, !dbg !2647
  %17 = load i32, i32* %index.addr, align 4, !dbg !2648
  %idxprom5 = sext i32 %17 to i64, !dbg !2646
  %arrayidx6 = getelementptr inbounds %struct.BMVert*, %struct.BMVert** %16, i64 %idxprom5, !dbg !2646
  %18 = load %struct.BMVert*, %struct.BMVert** %arrayidx6, align 8, !dbg !2646
  store %struct.BMVert* %18, %struct.BMVert** %ev, align 8, !dbg !2649
  %19 = load float*, float** %r_co.addr, align 8, !dbg !2650
  %20 = load %struct.BMVert*, %struct.BMVert** %ev, align 8, !dbg !2651
  %co = getelementptr inbounds %struct.BMVert, %struct.BMVert* %20, i32 0, i32 2, !dbg !2652
  %arraydecay7 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !2651
  call void @copy_v3_v3(float* %19, float* %arraydecay7), !dbg !2653
  br label %if.end8

if.end8:                                          ; preds = %if.then, %if.else, %if.then3
  ret void, !dbg !2654
}

; Function Attrs: noinline nounwind uwtable
define internal void @emDM_getVertNo(%struct.DerivedMesh* %dm, i32 %index, float* %r_no) #0 !dbg !2655 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %index.addr = alloca i32, align 4
  %r_no.addr = alloca float*, align 8
  %bmdm = alloca %struct.EditDerivedBMesh*, align 8
  %bm = alloca %struct.BMesh*, align 8
  %ev = alloca %struct.BMVert*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !2656, metadata !DIExpression()), !dbg !2657
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !2658, metadata !DIExpression()), !dbg !2659
  store float* %r_no, float** %r_no.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_no.addr, metadata !2660, metadata !DIExpression()), !dbg !2661
  call void @llvm.dbg.declare(metadata %struct.EditDerivedBMesh** %bmdm, metadata !2662, metadata !DIExpression()), !dbg !2663
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !2664
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.EditDerivedBMesh*, !dbg !2665
  store %struct.EditDerivedBMesh* %1, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2663
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm, metadata !2666, metadata !DIExpression()), !dbg !2667
  %2 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2668
  %em = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %2, i32 0, i32 1, !dbg !2669
  %3 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !2669
  %bm1 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %3, i32 0, i32 0, !dbg !2670
  %4 = load %struct.BMesh*, %struct.BMesh** %bm1, align 8, !dbg !2670
  store %struct.BMesh* %4, %struct.BMesh** %bm, align 8, !dbg !2667
  %5 = load i32, i32* %index.addr, align 4, !dbg !2671
  %cmp = icmp slt i32 %5, 0, !dbg !2671
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !2671

lor.lhs.false:                                    ; preds = %entry
  %6 = load i32, i32* %index.addr, align 4, !dbg !2671
  %7 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !2671
  %totvert = getelementptr inbounds %struct.BMesh, %struct.BMesh* %7, i32 0, i32 0, !dbg !2671
  %8 = load i32, i32* %totvert, align 8, !dbg !2671
  %cmp2 = icmp sge i32 %6, %8, !dbg !2671
  br i1 %cmp2, label %if.then, label %if.end, !dbg !2673

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %if.end7, !dbg !2674

if.end:                                           ; preds = %lor.lhs.false
  %9 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2676
  %vertexCos = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %9, i32 0, i32 2, !dbg !2678
  %10 = load [3 x float]*, [3 x float]** %vertexCos, align 8, !dbg !2678
  %tobool = icmp ne [3 x float]* %10, null, !dbg !2676
  br i1 %tobool, label %if.then3, label %if.else, !dbg !2679

if.then3:                                         ; preds = %if.end
  %11 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2680
  call void @emDM_ensureVertNormals(%struct.EditDerivedBMesh* %11), !dbg !2682
  %12 = load float*, float** %r_no.addr, align 8, !dbg !2683
  %13 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2684
  %vertexNos = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %13, i32 0, i32 3, !dbg !2685
  %14 = load [3 x float]*, [3 x float]** %vertexNos, align 8, !dbg !2685
  %15 = load i32, i32* %index.addr, align 4, !dbg !2686
  %idxprom = sext i32 %15 to i64, !dbg !2684
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %14, i64 %idxprom, !dbg !2684
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !2684
  call void @copy_v3_v3(float* %12, float* %arraydecay), !dbg !2687
  br label %if.end7, !dbg !2688

if.else:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.BMVert** %ev, metadata !2689, metadata !DIExpression()), !dbg !2691
  %16 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !2692
  %vtable = getelementptr inbounds %struct.BMesh, %struct.BMesh* %16, i32 0, i32 13, !dbg !2693
  %17 = load %struct.BMVert**, %struct.BMVert*** %vtable, align 8, !dbg !2693
  %18 = load i32, i32* %index.addr, align 4, !dbg !2694
  %idxprom4 = sext i32 %18 to i64, !dbg !2692
  %arrayidx5 = getelementptr inbounds %struct.BMVert*, %struct.BMVert** %17, i64 %idxprom4, !dbg !2692
  %19 = load %struct.BMVert*, %struct.BMVert** %arrayidx5, align 8, !dbg !2692
  store %struct.BMVert* %19, %struct.BMVert** %ev, align 8, !dbg !2695
  %20 = load float*, float** %r_no.addr, align 8, !dbg !2696
  %21 = load %struct.BMVert*, %struct.BMVert** %ev, align 8, !dbg !2697
  %no = getelementptr inbounds %struct.BMVert, %struct.BMVert* %21, i32 0, i32 3, !dbg !2698
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %no, i64 0, i64 0, !dbg !2697
  call void @copy_v3_v3(float* %20, float* %arraydecay6), !dbg !2699
  br label %if.end7

if.end7:                                          ; preds = %if.then, %if.else, %if.then3
  ret void, !dbg !2700
}

; Function Attrs: noinline nounwind uwtable
define internal void @emDM_getPolyNo(%struct.DerivedMesh* %dm, i32 %index, float* %r_no) #0 !dbg !2701 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %index.addr = alloca i32, align 4
  %r_no.addr = alloca float*, align 8
  %bmdm = alloca %struct.EditDerivedBMesh*, align 8
  %bm = alloca %struct.BMesh*, align 8
  %efa = alloca %struct.BMFace*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !2702, metadata !DIExpression()), !dbg !2703
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !2704, metadata !DIExpression()), !dbg !2705
  store float* %r_no, float** %r_no.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_no.addr, metadata !2706, metadata !DIExpression()), !dbg !2707
  call void @llvm.dbg.declare(metadata %struct.EditDerivedBMesh** %bmdm, metadata !2708, metadata !DIExpression()), !dbg !2709
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !2710
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.EditDerivedBMesh*, !dbg !2711
  store %struct.EditDerivedBMesh* %1, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2709
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm, metadata !2712, metadata !DIExpression()), !dbg !2713
  %2 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2714
  %em = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %2, i32 0, i32 1, !dbg !2715
  %3 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !2715
  %bm1 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %3, i32 0, i32 0, !dbg !2716
  %4 = load %struct.BMesh*, %struct.BMesh** %bm1, align 8, !dbg !2716
  store %struct.BMesh* %4, %struct.BMesh** %bm, align 8, !dbg !2713
  %5 = load i32, i32* %index.addr, align 4, !dbg !2717
  %cmp = icmp slt i32 %5, 0, !dbg !2717
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !2717

lor.lhs.false:                                    ; preds = %entry
  %6 = load i32, i32* %index.addr, align 4, !dbg !2717
  %7 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !2717
  %totface = getelementptr inbounds %struct.BMesh, %struct.BMesh* %7, i32 0, i32 3, !dbg !2717
  %8 = load i32, i32* %totface, align 4, !dbg !2717
  %cmp2 = icmp sge i32 %6, %8, !dbg !2717
  br i1 %cmp2, label %if.then, label %if.end, !dbg !2719

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %if.end7, !dbg !2720

if.end:                                           ; preds = %lor.lhs.false
  %9 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2722
  %vertexCos = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %9, i32 0, i32 2, !dbg !2724
  %10 = load [3 x float]*, [3 x float]** %vertexCos, align 8, !dbg !2724
  %tobool = icmp ne [3 x float]* %10, null, !dbg !2722
  br i1 %tobool, label %if.then3, label %if.else, !dbg !2725

if.then3:                                         ; preds = %if.end
  %11 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2726
  call void @emDM_ensurePolyNormals(%struct.EditDerivedBMesh* %11), !dbg !2728
  %12 = load float*, float** %r_no.addr, align 8, !dbg !2729
  %13 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2730
  %polyNos = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %13, i32 0, i32 4, !dbg !2731
  %14 = load [3 x float]*, [3 x float]** %polyNos, align 8, !dbg !2731
  %15 = load i32, i32* %index.addr, align 4, !dbg !2732
  %idxprom = sext i32 %15 to i64, !dbg !2730
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %14, i64 %idxprom, !dbg !2730
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !2730
  call void @copy_v3_v3(float* %12, float* %arraydecay), !dbg !2733
  br label %if.end7, !dbg !2734

if.else:                                          ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.BMFace** %efa, metadata !2735, metadata !DIExpression()), !dbg !2737
  %16 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !2738
  %ftable = getelementptr inbounds %struct.BMesh, %struct.BMesh* %16, i32 0, i32 15, !dbg !2739
  %17 = load %struct.BMFace**, %struct.BMFace*** %ftable, align 8, !dbg !2739
  %18 = load i32, i32* %index.addr, align 4, !dbg !2740
  %idxprom4 = sext i32 %18 to i64, !dbg !2738
  %arrayidx5 = getelementptr inbounds %struct.BMFace*, %struct.BMFace** %17, i64 %idxprom4, !dbg !2738
  %19 = load %struct.BMFace*, %struct.BMFace** %arrayidx5, align 8, !dbg !2738
  store %struct.BMFace* %19, %struct.BMFace** %efa, align 8, !dbg !2741
  %20 = load float*, float** %r_no.addr, align 8, !dbg !2742
  %21 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !2743
  %no = getelementptr inbounds %struct.BMFace, %struct.BMFace* %21, i32 0, i32 4, !dbg !2744
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %no, i64 0, i64 0, !dbg !2743
  call void @copy_v3_v3(float* %20, float* %arraydecay6), !dbg !2745
  br label %if.end7

if.end7:                                          ; preds = %if.then, %if.else, %if.then3
  ret void, !dbg !2746
}

; Function Attrs: noinline nounwind uwtable
define internal void @emDM_getEdge(%struct.DerivedMesh* %dm, i32 %index, %struct.MEdge* %r_edge) #0 !dbg !2747 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %index.addr = alloca i32, align 4
  %r_edge.addr = alloca %struct.MEdge*, align 8
  %bmdm = alloca %struct.EditDerivedBMesh*, align 8
  %bm = alloca %struct.BMesh*, align 8
  %e = alloca %struct.BMEdge*, align 8
  %f = alloca float*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !2752, metadata !DIExpression()), !dbg !2753
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !2754, metadata !DIExpression()), !dbg !2755
  store %struct.MEdge* %r_edge, %struct.MEdge** %r_edge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MEdge** %r_edge.addr, metadata !2756, metadata !DIExpression()), !dbg !2757
  call void @llvm.dbg.declare(metadata %struct.EditDerivedBMesh** %bmdm, metadata !2758, metadata !DIExpression()), !dbg !2759
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !2760
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.EditDerivedBMesh*, !dbg !2761
  store %struct.EditDerivedBMesh* %1, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2759
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm, metadata !2762, metadata !DIExpression()), !dbg !2763
  %2 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2764
  %em = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %2, i32 0, i32 1, !dbg !2765
  %3 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !2765
  %bm1 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %3, i32 0, i32 0, !dbg !2766
  %4 = load %struct.BMesh*, %struct.BMesh** %bm1, align 8, !dbg !2766
  store %struct.BMesh* %4, %struct.BMesh** %bm, align 8, !dbg !2763
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %e, metadata !2767, metadata !DIExpression()), !dbg !2768
  call void @llvm.dbg.declare(metadata float** %f, metadata !2769, metadata !DIExpression()), !dbg !2770
  %5 = load i32, i32* %index.addr, align 4, !dbg !2771
  %cmp = icmp slt i32 %5, 0, !dbg !2771
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !2771

lor.lhs.false:                                    ; preds = %entry
  %6 = load i32, i32* %index.addr, align 4, !dbg !2771
  %7 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !2771
  %totedge = getelementptr inbounds %struct.BMesh, %struct.BMesh* %7, i32 0, i32 1, !dbg !2771
  %8 = load i32, i32* %totedge, align 4, !dbg !2771
  %cmp2 = icmp sge i32 %6, %8, !dbg !2771
  br i1 %cmp2, label %if.then, label %if.end, !dbg !2773

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %if.end20, !dbg !2774

if.end:                                           ; preds = %lor.lhs.false
  %9 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !2776
  %etable = getelementptr inbounds %struct.BMesh, %struct.BMesh* %9, i32 0, i32 14, !dbg !2777
  %10 = load %struct.BMEdge**, %struct.BMEdge*** %etable, align 8, !dbg !2777
  %11 = load i32, i32* %index.addr, align 4, !dbg !2778
  %idxprom = sext i32 %11 to i64, !dbg !2776
  %arrayidx = getelementptr inbounds %struct.BMEdge*, %struct.BMEdge** %10, i64 %idxprom, !dbg !2776
  %12 = load %struct.BMEdge*, %struct.BMEdge** %arrayidx, align 8, !dbg !2776
  store %struct.BMEdge* %12, %struct.BMEdge** %e, align 8, !dbg !2779
  %13 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !2780
  %call = call signext i16 @BM_edge_flag_to_mflag(%struct.BMEdge* %13), !dbg !2781
  %14 = load %struct.MEdge*, %struct.MEdge** %r_edge.addr, align 8, !dbg !2782
  %flag = getelementptr inbounds %struct.MEdge, %struct.MEdge* %14, i32 0, i32 4, !dbg !2783
  store i16 %call, i16* %flag, align 2, !dbg !2784
  %15 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !2785
  %v1 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %15, i32 0, i32 2, !dbg !2785
  %16 = load %struct.BMVert*, %struct.BMVert** %v1, align 8, !dbg !2785
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %16, i32 0, i32 0, !dbg !2785
  %call3 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head), !dbg !2785
  %17 = load %struct.MEdge*, %struct.MEdge** %r_edge.addr, align 8, !dbg !2786
  %v14 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %17, i32 0, i32 0, !dbg !2787
  store i32 %call3, i32* %v14, align 4, !dbg !2788
  %18 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !2789
  %v2 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %18, i32 0, i32 3, !dbg !2789
  %19 = load %struct.BMVert*, %struct.BMVert** %v2, align 8, !dbg !2789
  %head5 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %19, i32 0, i32 0, !dbg !2789
  %call6 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head5), !dbg !2789
  %20 = load %struct.MEdge*, %struct.MEdge** %r_edge.addr, align 8, !dbg !2790
  %v27 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %20, i32 0, i32 1, !dbg !2791
  store i32 %call6, i32* %v27, align 4, !dbg !2792
  %21 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !2793
  %edata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %21, i32 0, i32 25, !dbg !2795
  %22 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !2796
  %head8 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %22, i32 0, i32 0, !dbg !2797
  %data = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head8, i32 0, i32 0, !dbg !2798
  %23 = load i8*, i8** %data, align 8, !dbg !2798
  %call9 = call i8* @CustomData_bmesh_get(%struct.CustomData* %edata, i8* %23, i32 29), !dbg !2799
  %24 = bitcast i8* %call9 to float*, !dbg !2799
  store float* %24, float** %f, align 8, !dbg !2800
  %tobool = icmp ne float* %24, null, !dbg !2800
  br i1 %tobool, label %if.then10, label %if.end11, !dbg !2801

if.then10:                                        ; preds = %if.end
  %25 = load float*, float** %f, align 8, !dbg !2802
  %26 = load float, float* %25, align 4, !dbg !2804
  %mul = fmul float %26, 2.550000e+02, !dbg !2805
  %conv = fptoui float %mul to i8, !dbg !2806
  %27 = load %struct.MEdge*, %struct.MEdge** %r_edge.addr, align 8, !dbg !2807
  %bweight = getelementptr inbounds %struct.MEdge, %struct.MEdge* %27, i32 0, i32 3, !dbg !2808
  store i8 %conv, i8* %bweight, align 1, !dbg !2809
  br label %if.end11, !dbg !2810

if.end11:                                         ; preds = %if.then10, %if.end
  %28 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !2811
  %edata12 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %28, i32 0, i32 25, !dbg !2813
  %29 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !2814
  %head13 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %29, i32 0, i32 0, !dbg !2815
  %data14 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head13, i32 0, i32 0, !dbg !2816
  %30 = load i8*, i8** %data14, align 8, !dbg !2816
  %call15 = call i8* @CustomData_bmesh_get(%struct.CustomData* %edata12, i8* %30, i32 30), !dbg !2817
  %31 = bitcast i8* %call15 to float*, !dbg !2817
  store float* %31, float** %f, align 8, !dbg !2818
  %tobool16 = icmp ne float* %31, null, !dbg !2818
  br i1 %tobool16, label %if.then17, label %if.end20, !dbg !2819

if.then17:                                        ; preds = %if.end11
  %32 = load float*, float** %f, align 8, !dbg !2820
  %33 = load float, float* %32, align 4, !dbg !2822
  %mul18 = fmul float %33, 2.550000e+02, !dbg !2823
  %conv19 = fptoui float %mul18 to i8, !dbg !2824
  %34 = load %struct.MEdge*, %struct.MEdge** %r_edge.addr, align 8, !dbg !2825
  %crease = getelementptr inbounds %struct.MEdge, %struct.MEdge* %34, i32 0, i32 2, !dbg !2826
  store i8 %conv19, i8* %crease, align 4, !dbg !2827
  br label %if.end20, !dbg !2828

if.end20:                                         ; preds = %if.then, %if.then17, %if.end11
  ret void, !dbg !2829
}

; Function Attrs: noinline nounwind uwtable
define internal void @emDM_getTessFace(%struct.DerivedMesh* %dm, i32 %index, %struct.MFace* %r_face) #0 !dbg !2830 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %index.addr = alloca i32, align 4
  %r_face.addr = alloca %struct.MFace*, align 8
  %bmdm = alloca %struct.EditDerivedBMesh*, align 8
  %ef = alloca %struct.BMFace*, align 8
  %ltri = alloca %struct.BMLoop**, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !2835, metadata !DIExpression()), !dbg !2836
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !2837, metadata !DIExpression()), !dbg !2838
  store %struct.MFace* %r_face, %struct.MFace** %r_face.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MFace** %r_face.addr, metadata !2839, metadata !DIExpression()), !dbg !2840
  call void @llvm.dbg.declare(metadata %struct.EditDerivedBMesh** %bmdm, metadata !2841, metadata !DIExpression()), !dbg !2842
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !2843
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.EditDerivedBMesh*, !dbg !2844
  store %struct.EditDerivedBMesh* %1, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2842
  call void @llvm.dbg.declare(metadata %struct.BMFace** %ef, metadata !2845, metadata !DIExpression()), !dbg !2846
  call void @llvm.dbg.declare(metadata %struct.BMLoop*** %ltri, metadata !2847, metadata !DIExpression()), !dbg !2849
  %2 = load i32, i32* %index.addr, align 4, !dbg !2850
  %cmp = icmp slt i32 %2, 0, !dbg !2850
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !2850

lor.lhs.false:                                    ; preds = %entry
  %3 = load i32, i32* %index.addr, align 4, !dbg !2850
  %4 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2850
  %em = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %4, i32 0, i32 1, !dbg !2850
  %5 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !2850
  %tottri = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %5, i32 0, i32 4, !dbg !2850
  %6 = load i32, i32* %tottri, align 8, !dbg !2850
  %cmp1 = icmp sge i32 %3, %6, !dbg !2850
  br i1 %cmp1, label %if.then, label %if.end, !dbg !2852

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %return, !dbg !2853

if.end:                                           ; preds = %lor.lhs.false
  %7 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2855
  %em2 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %7, i32 0, i32 1, !dbg !2856
  %8 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em2, align 8, !dbg !2856
  %looptris = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %8, i32 0, i32 3, !dbg !2857
  %9 = load [3 x %struct.BMLoop*]*, [3 x %struct.BMLoop*]** %looptris, align 8, !dbg !2857
  %10 = load i32, i32* %index.addr, align 4, !dbg !2858
  %idxprom = sext i32 %10 to i64, !dbg !2855
  %arrayidx = getelementptr inbounds [3 x %struct.BMLoop*], [3 x %struct.BMLoop*]* %9, i64 %idxprom, !dbg !2855
  %arraydecay = getelementptr inbounds [3 x %struct.BMLoop*], [3 x %struct.BMLoop*]* %arrayidx, i64 0, i64 0, !dbg !2855
  store %struct.BMLoop** %arraydecay, %struct.BMLoop*** %ltri, align 8, !dbg !2859
  %11 = load %struct.BMLoop**, %struct.BMLoop*** %ltri, align 8, !dbg !2860
  %arrayidx3 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %11, i64 0, !dbg !2860
  %12 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx3, align 8, !dbg !2860
  %f = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %12, i32 0, i32 3, !dbg !2861
  %13 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !2861
  store %struct.BMFace* %13, %struct.BMFace** %ef, align 8, !dbg !2862
  %14 = load %struct.BMFace*, %struct.BMFace** %ef, align 8, !dbg !2863
  %mat_nr = getelementptr inbounds %struct.BMFace, %struct.BMFace* %14, i32 0, i32 5, !dbg !2864
  %15 = load i16, i16* %mat_nr, align 8, !dbg !2864
  %conv = trunc i16 %15 to i8, !dbg !2865
  %conv4 = zext i8 %conv to i16, !dbg !2865
  %16 = load %struct.MFace*, %struct.MFace** %r_face.addr, align 8, !dbg !2866
  %mat_nr5 = getelementptr inbounds %struct.MFace, %struct.MFace* %16, i32 0, i32 4, !dbg !2867
  store i16 %conv4, i16* %mat_nr5, align 4, !dbg !2868
  %17 = load %struct.BMFace*, %struct.BMFace** %ef, align 8, !dbg !2869
  %call = call zeroext i8 @BM_face_flag_to_mflag(%struct.BMFace* %17), !dbg !2870
  %18 = load %struct.MFace*, %struct.MFace** %r_face.addr, align 8, !dbg !2871
  %flag = getelementptr inbounds %struct.MFace, %struct.MFace* %18, i32 0, i32 6, !dbg !2872
  store i8 %call, i8* %flag, align 1, !dbg !2873
  %19 = load %struct.BMLoop**, %struct.BMLoop*** %ltri, align 8, !dbg !2874
  %arrayidx6 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %19, i64 0, !dbg !2874
  %20 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx6, align 8, !dbg !2874
  %v = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %20, i32 0, i32 1, !dbg !2874
  %21 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !2874
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %21, i32 0, i32 0, !dbg !2874
  %call7 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head), !dbg !2874
  %22 = load %struct.MFace*, %struct.MFace** %r_face.addr, align 8, !dbg !2875
  %v1 = getelementptr inbounds %struct.MFace, %struct.MFace* %22, i32 0, i32 0, !dbg !2876
  store i32 %call7, i32* %v1, align 4, !dbg !2877
  %23 = load %struct.BMLoop**, %struct.BMLoop*** %ltri, align 8, !dbg !2878
  %arrayidx8 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %23, i64 1, !dbg !2878
  %24 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx8, align 8, !dbg !2878
  %v9 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %24, i32 0, i32 1, !dbg !2878
  %25 = load %struct.BMVert*, %struct.BMVert** %v9, align 8, !dbg !2878
  %head10 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %25, i32 0, i32 0, !dbg !2878
  %call11 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head10), !dbg !2878
  %26 = load %struct.MFace*, %struct.MFace** %r_face.addr, align 8, !dbg !2879
  %v2 = getelementptr inbounds %struct.MFace, %struct.MFace* %26, i32 0, i32 1, !dbg !2880
  store i32 %call11, i32* %v2, align 4, !dbg !2881
  %27 = load %struct.BMLoop**, %struct.BMLoop*** %ltri, align 8, !dbg !2882
  %arrayidx12 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %27, i64 2, !dbg !2882
  %28 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx12, align 8, !dbg !2882
  %v13 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %28, i32 0, i32 1, !dbg !2882
  %29 = load %struct.BMVert*, %struct.BMVert** %v13, align 8, !dbg !2882
  %head14 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %29, i32 0, i32 0, !dbg !2882
  %call15 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head14), !dbg !2882
  %30 = load %struct.MFace*, %struct.MFace** %r_face.addr, align 8, !dbg !2883
  %v3 = getelementptr inbounds %struct.MFace, %struct.MFace* %30, i32 0, i32 2, !dbg !2884
  store i32 %call15, i32* %v3, align 4, !dbg !2885
  %31 = load %struct.MFace*, %struct.MFace** %r_face.addr, align 8, !dbg !2886
  %v4 = getelementptr inbounds %struct.MFace, %struct.MFace* %31, i32 0, i32 3, !dbg !2887
  store i32 0, i32* %v4, align 4, !dbg !2888
  %32 = load %struct.MFace*, %struct.MFace** %r_face.addr, align 8, !dbg !2889
  %call16 = call i32 @test_index_face(%struct.MFace* %32, %struct.CustomData* null, i32 0, i32 3), !dbg !2890
  br label %return, !dbg !2891

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !2891
}

; Function Attrs: noinline nounwind uwtable
define internal void @emDM_copyVertArray(%struct.DerivedMesh* %dm, %struct.MVert* %r_vert) #0 !dbg !2892 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %r_vert.addr = alloca %struct.MVert*, align 8
  %bmdm = alloca %struct.EditDerivedBMesh*, align 8
  %bm = alloca %struct.BMesh*, align 8
  %eve = alloca %struct.BMVert*, align 8
  %iter = alloca %struct.BMIter, align 8
  %cd_vert_bweight_offset = alloca i32, align 4
  %i = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !2895, metadata !DIExpression()), !dbg !2896
  store %struct.MVert* %r_vert, %struct.MVert** %r_vert.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MVert** %r_vert.addr, metadata !2897, metadata !DIExpression()), !dbg !2898
  call void @llvm.dbg.declare(metadata %struct.EditDerivedBMesh** %bmdm, metadata !2899, metadata !DIExpression()), !dbg !2900
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !2901
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.EditDerivedBMesh*, !dbg !2902
  store %struct.EditDerivedBMesh* %1, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2900
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm, metadata !2903, metadata !DIExpression()), !dbg !2904
  %2 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2905
  %em = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %2, i32 0, i32 1, !dbg !2906
  %3 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !2906
  %bm1 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %3, i32 0, i32 0, !dbg !2907
  %4 = load %struct.BMesh*, %struct.BMesh** %bm1, align 8, !dbg !2907
  store %struct.BMesh* %4, %struct.BMesh** %bm, align 8, !dbg !2904
  call void @llvm.dbg.declare(metadata %struct.BMVert** %eve, metadata !2908, metadata !DIExpression()), !dbg !2909
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !2910, metadata !DIExpression()), !dbg !2911
  call void @llvm.dbg.declare(metadata i32* %cd_vert_bweight_offset, metadata !2912, metadata !DIExpression()), !dbg !2913
  %5 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !2914
  %vdata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %5, i32 0, i32 24, !dbg !2915
  %call = call i32 @CustomData_get_offset(%struct.CustomData* %vdata, i32 29), !dbg !2916
  store i32 %call, i32* %cd_vert_bweight_offset, align 4, !dbg !2913
  %6 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2917
  %vertexCos = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %6, i32 0, i32 2, !dbg !2919
  %7 = load [3 x float]*, [3 x float]** %vertexCos, align 8, !dbg !2919
  %tobool = icmp ne [3 x float]* %7, null, !dbg !2917
  br i1 %tobool, label %if.then, label %if.else, !dbg !2920

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %i, metadata !2921, metadata !DIExpression()), !dbg !2923
  %8 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !2924
  %call2 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %8, i8 zeroext 1, i8* null), !dbg !2924
  %9 = bitcast i8* %call2 to %struct.BMVert*, !dbg !2924
  store %struct.BMVert* %9, %struct.BMVert** %eve, align 8, !dbg !2924
  store i32 0, i32* %i, align 4, !dbg !2924
  br label %for.cond, !dbg !2924

for.cond:                                         ; preds = %for.inc, %if.then
  %10 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !2926
  %tobool3 = icmp ne %struct.BMVert* %10, null, !dbg !2924
  br i1 %tobool3, label %for.body, label %for.end, !dbg !2924

for.body:                                         ; preds = %for.cond
  %11 = load %struct.MVert*, %struct.MVert** %r_vert.addr, align 8, !dbg !2928
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %11, i32 0, i32 0, !dbg !2930
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !2928
  %12 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !2931
  %vertexCos4 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %12, i32 0, i32 2, !dbg !2932
  %13 = load [3 x float]*, [3 x float]** %vertexCos4, align 8, !dbg !2932
  %14 = load i32, i32* %i, align 4, !dbg !2933
  %idxprom = sext i32 %14 to i64, !dbg !2931
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %13, i64 %idxprom, !dbg !2931
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !2931
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay5), !dbg !2934
  %15 = load %struct.MVert*, %struct.MVert** %r_vert.addr, align 8, !dbg !2935
  %no = getelementptr inbounds %struct.MVert, %struct.MVert* %15, i32 0, i32 1, !dbg !2936
  %arraydecay6 = getelementptr inbounds [3 x i16], [3 x i16]* %no, i64 0, i64 0, !dbg !2935
  %16 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !2937
  %no7 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %16, i32 0, i32 3, !dbg !2938
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %no7, i64 0, i64 0, !dbg !2937
  call void @normal_float_to_short_v3(i16* %arraydecay6, float* %arraydecay8), !dbg !2939
  %17 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !2940
  %call9 = call zeroext i8 @BM_vert_flag_to_mflag(%struct.BMVert* %17), !dbg !2941
  %18 = load %struct.MVert*, %struct.MVert** %r_vert.addr, align 8, !dbg !2942
  %flag = getelementptr inbounds %struct.MVert, %struct.MVert* %18, i32 0, i32 2, !dbg !2943
  store i8 %call9, i8* %flag, align 2, !dbg !2944
  %19 = load i32, i32* %cd_vert_bweight_offset, align 4, !dbg !2945
  %cmp = icmp ne i32 %19, -1, !dbg !2946
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !2947

cond.true:                                        ; preds = %for.body
  %20 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !2948
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %20, i32 0, i32 0, !dbg !2948
  %data = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head, i32 0, i32 0, !dbg !2948
  %21 = load i8*, i8** %data, align 8, !dbg !2948
  %22 = load i32, i32* %cd_vert_bweight_offset, align 4, !dbg !2948
  %idx.ext = sext i32 %22 to i64, !dbg !2948
  %add.ptr = getelementptr inbounds i8, i8* %21, i64 %idx.ext, !dbg !2948
  %23 = bitcast i8* %add.ptr to float*, !dbg !2948
  %24 = load float, float* %23, align 4, !dbg !2948
  %mul = fmul float %24, 2.550000e+02, !dbg !2948
  %conv = fptoui float %mul to i8, !dbg !2948
  %conv10 = zext i8 %conv to i32, !dbg !2948
  br label %cond.end, !dbg !2947

cond.false:                                       ; preds = %for.body
  br label %cond.end, !dbg !2947

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv10, %cond.true ], [ 0, %cond.false ], !dbg !2947
  %conv11 = trunc i32 %cond to i8, !dbg !2947
  %25 = load %struct.MVert*, %struct.MVert** %r_vert.addr, align 8, !dbg !2949
  %bweight = getelementptr inbounds %struct.MVert, %struct.MVert* %25, i32 0, i32 3, !dbg !2950
  store i8 %conv11, i8* %bweight, align 1, !dbg !2951
  %26 = load %struct.MVert*, %struct.MVert** %r_vert.addr, align 8, !dbg !2952
  %incdec.ptr = getelementptr inbounds %struct.MVert, %struct.MVert* %26, i32 1, !dbg !2952
  store %struct.MVert* %incdec.ptr, %struct.MVert** %r_vert.addr, align 8, !dbg !2952
  br label %for.inc, !dbg !2953

for.inc:                                          ; preds = %cond.end
  %call12 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !2926
  %27 = bitcast i8* %call12 to %struct.BMVert*, !dbg !2926
  store %struct.BMVert* %27, %struct.BMVert** %eve, align 8, !dbg !2926
  %28 = load i32, i32* %i, align 4, !dbg !2926
  %inc = add nsw i32 %28, 1, !dbg !2926
  store i32 %inc, i32* %i, align 4, !dbg !2926
  br label %for.cond, !dbg !2926, !llvm.loop !2954

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !2956

if.else:                                          ; preds = %entry
  %29 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !2957
  %call13 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %29, i8 zeroext 1, i8* null), !dbg !2957
  %30 = bitcast i8* %call13 to %struct.BMVert*, !dbg !2957
  store %struct.BMVert* %30, %struct.BMVert** %eve, align 8, !dbg !2957
  br label %for.cond14, !dbg !2957

for.cond14:                                       ; preds = %for.inc43, %if.else
  %31 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !2960
  %tobool15 = icmp ne %struct.BMVert* %31, null, !dbg !2957
  br i1 %tobool15, label %for.body16, label %for.end45, !dbg !2957

for.body16:                                       ; preds = %for.cond14
  %32 = load %struct.MVert*, %struct.MVert** %r_vert.addr, align 8, !dbg !2962
  %co17 = getelementptr inbounds %struct.MVert, %struct.MVert* %32, i32 0, i32 0, !dbg !2964
  %arraydecay18 = getelementptr inbounds [3 x float], [3 x float]* %co17, i64 0, i64 0, !dbg !2962
  %33 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !2965
  %co19 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %33, i32 0, i32 2, !dbg !2966
  %arraydecay20 = getelementptr inbounds [3 x float], [3 x float]* %co19, i64 0, i64 0, !dbg !2965
  call void @copy_v3_v3(float* %arraydecay18, float* %arraydecay20), !dbg !2967
  %34 = load %struct.MVert*, %struct.MVert** %r_vert.addr, align 8, !dbg !2968
  %no21 = getelementptr inbounds %struct.MVert, %struct.MVert* %34, i32 0, i32 1, !dbg !2969
  %arraydecay22 = getelementptr inbounds [3 x i16], [3 x i16]* %no21, i64 0, i64 0, !dbg !2968
  %35 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !2970
  %no23 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %35, i32 0, i32 3, !dbg !2971
  %arraydecay24 = getelementptr inbounds [3 x float], [3 x float]* %no23, i64 0, i64 0, !dbg !2970
  call void @normal_float_to_short_v3(i16* %arraydecay22, float* %arraydecay24), !dbg !2972
  %36 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !2973
  %call25 = call zeroext i8 @BM_vert_flag_to_mflag(%struct.BMVert* %36), !dbg !2974
  %37 = load %struct.MVert*, %struct.MVert** %r_vert.addr, align 8, !dbg !2975
  %flag26 = getelementptr inbounds %struct.MVert, %struct.MVert* %37, i32 0, i32 2, !dbg !2976
  store i8 %call25, i8* %flag26, align 2, !dbg !2977
  %38 = load i32, i32* %cd_vert_bweight_offset, align 4, !dbg !2978
  %cmp27 = icmp ne i32 %38, -1, !dbg !2979
  br i1 %cmp27, label %cond.true29, label %cond.false37, !dbg !2980

cond.true29:                                      ; preds = %for.body16
  %39 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !2981
  %head30 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %39, i32 0, i32 0, !dbg !2981
  %data31 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head30, i32 0, i32 0, !dbg !2981
  %40 = load i8*, i8** %data31, align 8, !dbg !2981
  %41 = load i32, i32* %cd_vert_bweight_offset, align 4, !dbg !2981
  %idx.ext32 = sext i32 %41 to i64, !dbg !2981
  %add.ptr33 = getelementptr inbounds i8, i8* %40, i64 %idx.ext32, !dbg !2981
  %42 = bitcast i8* %add.ptr33 to float*, !dbg !2981
  %43 = load float, float* %42, align 4, !dbg !2981
  %mul34 = fmul float %43, 2.550000e+02, !dbg !2981
  %conv35 = fptoui float %mul34 to i8, !dbg !2981
  %conv36 = zext i8 %conv35 to i32, !dbg !2981
  br label %cond.end38, !dbg !2980

cond.false37:                                     ; preds = %for.body16
  br label %cond.end38, !dbg !2980

cond.end38:                                       ; preds = %cond.false37, %cond.true29
  %cond39 = phi i32 [ %conv36, %cond.true29 ], [ 0, %cond.false37 ], !dbg !2980
  %conv40 = trunc i32 %cond39 to i8, !dbg !2980
  %44 = load %struct.MVert*, %struct.MVert** %r_vert.addr, align 8, !dbg !2982
  %bweight41 = getelementptr inbounds %struct.MVert, %struct.MVert* %44, i32 0, i32 3, !dbg !2983
  store i8 %conv40, i8* %bweight41, align 1, !dbg !2984
  %45 = load %struct.MVert*, %struct.MVert** %r_vert.addr, align 8, !dbg !2985
  %incdec.ptr42 = getelementptr inbounds %struct.MVert, %struct.MVert* %45, i32 1, !dbg !2985
  store %struct.MVert* %incdec.ptr42, %struct.MVert** %r_vert.addr, align 8, !dbg !2985
  br label %for.inc43, !dbg !2986

for.inc43:                                        ; preds = %cond.end38
  %call44 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !2960
  %46 = bitcast i8* %call44 to %struct.BMVert*, !dbg !2960
  store %struct.BMVert* %46, %struct.BMVert** %eve, align 8, !dbg !2960
  br label %for.cond14, !dbg !2960, !llvm.loop !2987

for.end45:                                        ; preds = %for.cond14
  br label %if.end

if.end:                                           ; preds = %for.end45, %for.end
  ret void, !dbg !2989
}

; Function Attrs: noinline nounwind uwtable
define internal void @emDM_copyEdgeArray(%struct.DerivedMesh* %dm, %struct.MEdge* %r_edge) #0 !dbg !2990 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %r_edge.addr = alloca %struct.MEdge*, align 8
  %bm = alloca %struct.BMesh*, align 8
  %eed = alloca %struct.BMEdge*, align 8
  %iter = alloca %struct.BMIter, align 8
  %cd_edge_bweight_offset = alloca i32, align 4
  %cd_edge_crease_offset = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !2993, metadata !DIExpression()), !dbg !2994
  store %struct.MEdge* %r_edge, %struct.MEdge** %r_edge.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MEdge** %r_edge.addr, metadata !2995, metadata !DIExpression()), !dbg !2996
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm, metadata !2997, metadata !DIExpression()), !dbg !2998
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !2999
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.EditDerivedBMesh*, !dbg !3000
  %em = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %1, i32 0, i32 1, !dbg !3000
  %2 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !3000
  %bm1 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %2, i32 0, i32 0, !dbg !3001
  %3 = load %struct.BMesh*, %struct.BMesh** %bm1, align 8, !dbg !3001
  store %struct.BMesh* %3, %struct.BMesh** %bm, align 8, !dbg !2998
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %eed, metadata !3002, metadata !DIExpression()), !dbg !3003
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !3004, metadata !DIExpression()), !dbg !3005
  call void @llvm.dbg.declare(metadata i32* %cd_edge_bweight_offset, metadata !3006, metadata !DIExpression()), !dbg !3007
  %4 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !3008
  %edata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %4, i32 0, i32 25, !dbg !3009
  %call = call i32 @CustomData_get_offset(%struct.CustomData* %edata, i32 29), !dbg !3010
  store i32 %call, i32* %cd_edge_bweight_offset, align 4, !dbg !3007
  call void @llvm.dbg.declare(metadata i32* %cd_edge_crease_offset, metadata !3011, metadata !DIExpression()), !dbg !3012
  %5 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !3013
  %edata2 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %5, i32 0, i32 25, !dbg !3014
  %call3 = call i32 @CustomData_get_offset(%struct.CustomData* %edata2, i32 30), !dbg !3015
  store i32 %call3, i32* %cd_edge_crease_offset, align 4, !dbg !3012
  %6 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !3016
  call void @BM_mesh_elem_index_ensure(%struct.BMesh* %6, i8 zeroext 1), !dbg !3017
  %7 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !3018
  %call4 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %7, i8 zeroext 2, i8* null), !dbg !3018
  %8 = bitcast i8* %call4 to %struct.BMEdge*, !dbg !3018
  store %struct.BMEdge* %8, %struct.BMEdge** %eed, align 8, !dbg !3018
  br label %for.cond, !dbg !3018

for.cond:                                         ; preds = %for.inc, %entry
  %9 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !3020
  %tobool = icmp ne %struct.BMEdge* %9, null, !dbg !3018
  br i1 %tobool, label %for.body, label %for.end, !dbg !3018

for.body:                                         ; preds = %for.cond
  %10 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !3022
  %v1 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %10, i32 0, i32 2, !dbg !3022
  %11 = load %struct.BMVert*, %struct.BMVert** %v1, align 8, !dbg !3022
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %11, i32 0, i32 0, !dbg !3022
  %call5 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head), !dbg !3022
  %12 = load %struct.MEdge*, %struct.MEdge** %r_edge.addr, align 8, !dbg !3024
  %v16 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %12, i32 0, i32 0, !dbg !3025
  store i32 %call5, i32* %v16, align 4, !dbg !3026
  %13 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !3027
  %v2 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %13, i32 0, i32 3, !dbg !3027
  %14 = load %struct.BMVert*, %struct.BMVert** %v2, align 8, !dbg !3027
  %head7 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %14, i32 0, i32 0, !dbg !3027
  %call8 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head7), !dbg !3027
  %15 = load %struct.MEdge*, %struct.MEdge** %r_edge.addr, align 8, !dbg !3028
  %v29 = getelementptr inbounds %struct.MEdge, %struct.MEdge* %15, i32 0, i32 1, !dbg !3029
  store i32 %call8, i32* %v29, align 4, !dbg !3030
  %16 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !3031
  %call10 = call signext i16 @BM_edge_flag_to_mflag(%struct.BMEdge* %16), !dbg !3032
  %17 = load %struct.MEdge*, %struct.MEdge** %r_edge.addr, align 8, !dbg !3033
  %flag = getelementptr inbounds %struct.MEdge, %struct.MEdge* %17, i32 0, i32 4, !dbg !3034
  store i16 %call10, i16* %flag, align 2, !dbg !3035
  %18 = load i32, i32* %cd_edge_crease_offset, align 4, !dbg !3036
  %cmp = icmp ne i32 %18, -1, !dbg !3037
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !3038

cond.true:                                        ; preds = %for.body
  %19 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !3039
  %head11 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %19, i32 0, i32 0, !dbg !3039
  %data = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head11, i32 0, i32 0, !dbg !3039
  %20 = load i8*, i8** %data, align 8, !dbg !3039
  %21 = load i32, i32* %cd_edge_crease_offset, align 4, !dbg !3039
  %idx.ext = sext i32 %21 to i64, !dbg !3039
  %add.ptr = getelementptr inbounds i8, i8* %20, i64 %idx.ext, !dbg !3039
  %22 = bitcast i8* %add.ptr to float*, !dbg !3039
  %23 = load float, float* %22, align 4, !dbg !3039
  %mul = fmul float %23, 2.550000e+02, !dbg !3039
  %conv = fptoui float %mul to i8, !dbg !3039
  %conv12 = zext i8 %conv to i32, !dbg !3039
  br label %cond.end, !dbg !3038

cond.false:                                       ; preds = %for.body
  br label %cond.end, !dbg !3038

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv12, %cond.true ], [ 0, %cond.false ], !dbg !3038
  %conv13 = trunc i32 %cond to i8, !dbg !3038
  %24 = load %struct.MEdge*, %struct.MEdge** %r_edge.addr, align 8, !dbg !3040
  %crease = getelementptr inbounds %struct.MEdge, %struct.MEdge* %24, i32 0, i32 2, !dbg !3041
  store i8 %conv13, i8* %crease, align 4, !dbg !3042
  %25 = load i32, i32* %cd_edge_bweight_offset, align 4, !dbg !3043
  %cmp14 = icmp ne i32 %25, -1, !dbg !3044
  br i1 %cmp14, label %cond.true16, label %cond.false24, !dbg !3045

cond.true16:                                      ; preds = %cond.end
  %26 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !3046
  %head17 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %26, i32 0, i32 0, !dbg !3046
  %data18 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head17, i32 0, i32 0, !dbg !3046
  %27 = load i8*, i8** %data18, align 8, !dbg !3046
  %28 = load i32, i32* %cd_edge_bweight_offset, align 4, !dbg !3046
  %idx.ext19 = sext i32 %28 to i64, !dbg !3046
  %add.ptr20 = getelementptr inbounds i8, i8* %27, i64 %idx.ext19, !dbg !3046
  %29 = bitcast i8* %add.ptr20 to float*, !dbg !3046
  %30 = load float, float* %29, align 4, !dbg !3046
  %mul21 = fmul float %30, 2.550000e+02, !dbg !3046
  %conv22 = fptoui float %mul21 to i8, !dbg !3046
  %conv23 = zext i8 %conv22 to i32, !dbg !3046
  br label %cond.end25, !dbg !3045

cond.false24:                                     ; preds = %cond.end
  br label %cond.end25, !dbg !3045

cond.end25:                                       ; preds = %cond.false24, %cond.true16
  %cond26 = phi i32 [ %conv23, %cond.true16 ], [ 0, %cond.false24 ], !dbg !3045
  %conv27 = trunc i32 %cond26 to i8, !dbg !3045
  %31 = load %struct.MEdge*, %struct.MEdge** %r_edge.addr, align 8, !dbg !3047
  %bweight = getelementptr inbounds %struct.MEdge, %struct.MEdge* %31, i32 0, i32 3, !dbg !3048
  store i8 %conv27, i8* %bweight, align 1, !dbg !3049
  %32 = load %struct.MEdge*, %struct.MEdge** %r_edge.addr, align 8, !dbg !3050
  %incdec.ptr = getelementptr inbounds %struct.MEdge, %struct.MEdge* %32, i32 1, !dbg !3050
  store %struct.MEdge* %incdec.ptr, %struct.MEdge** %r_edge.addr, align 8, !dbg !3050
  br label %for.inc, !dbg !3051

for.inc:                                          ; preds = %cond.end25
  %call28 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !3020
  %33 = bitcast i8* %call28 to %struct.BMEdge*, !dbg !3020
  store %struct.BMEdge* %33, %struct.BMEdge** %eed, align 8, !dbg !3020
  br label %for.cond, !dbg !3020, !llvm.loop !3052

for.end:                                          ; preds = %for.cond
  ret void, !dbg !3054
}

; Function Attrs: noinline nounwind uwtable
define internal void @emDM_copyTessFaceArray(%struct.DerivedMesh* %dm, %struct.MFace* %r_face) #0 !dbg !3055 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %r_face.addr = alloca %struct.MFace*, align 8
  %bmdm = alloca %struct.EditDerivedBMesh*, align 8
  %bm = alloca %struct.BMesh*, align 8
  %looptris = alloca [3 x %struct.BMLoop*]*, align 8
  %ef = alloca %struct.BMFace*, align 8
  %i = alloca i32, align 4
  %ltri = alloca %struct.BMLoop**, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !3058, metadata !DIExpression()), !dbg !3059
  store %struct.MFace* %r_face, %struct.MFace** %r_face.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MFace** %r_face.addr, metadata !3060, metadata !DIExpression()), !dbg !3061
  call void @llvm.dbg.declare(metadata %struct.EditDerivedBMesh** %bmdm, metadata !3062, metadata !DIExpression()), !dbg !3063
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3064
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.EditDerivedBMesh*, !dbg !3065
  store %struct.EditDerivedBMesh* %1, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !3063
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm, metadata !3066, metadata !DIExpression()), !dbg !3067
  %2 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !3068
  %em = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %2, i32 0, i32 1, !dbg !3069
  %3 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !3069
  %bm1 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %3, i32 0, i32 0, !dbg !3070
  %4 = load %struct.BMesh*, %struct.BMesh** %bm1, align 8, !dbg !3070
  store %struct.BMesh* %4, %struct.BMesh** %bm, align 8, !dbg !3067
  call void @llvm.dbg.declare(metadata [3 x %struct.BMLoop*]** %looptris, metadata !3071, metadata !DIExpression()), !dbg !3072
  %5 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !3073
  %em2 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %5, i32 0, i32 1, !dbg !3074
  %6 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em2, align 8, !dbg !3074
  %looptris3 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %6, i32 0, i32 3, !dbg !3075
  %7 = load [3 x %struct.BMLoop*]*, [3 x %struct.BMLoop*]** %looptris3, align 8, !dbg !3075
  store [3 x %struct.BMLoop*]* %7, [3 x %struct.BMLoop*]** %looptris, align 8, !dbg !3072
  call void @llvm.dbg.declare(metadata %struct.BMFace** %ef, metadata !3076, metadata !DIExpression()), !dbg !3077
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3078, metadata !DIExpression()), !dbg !3079
  %8 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !3080
  call void @BM_mesh_elem_index_ensure(%struct.BMesh* %8, i8 zeroext 1), !dbg !3081
  store i32 0, i32* %i, align 4, !dbg !3082
  br label %for.cond, !dbg !3084

for.cond:                                         ; preds = %for.inc, %entry
  %9 = load i32, i32* %i, align 4, !dbg !3085
  %10 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !3087
  %em4 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %10, i32 0, i32 1, !dbg !3088
  %11 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em4, align 8, !dbg !3088
  %tottri = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %11, i32 0, i32 4, !dbg !3089
  %12 = load i32, i32* %tottri, align 8, !dbg !3089
  %cmp = icmp slt i32 %9, %12, !dbg !3090
  br i1 %cmp, label %for.body, label %for.end, !dbg !3091

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.BMLoop*** %ltri, metadata !3092, metadata !DIExpression()), !dbg !3094
  %13 = load [3 x %struct.BMLoop*]*, [3 x %struct.BMLoop*]** %looptris, align 8, !dbg !3095
  %14 = load i32, i32* %i, align 4, !dbg !3096
  %idxprom = sext i32 %14 to i64, !dbg !3095
  %arrayidx = getelementptr inbounds [3 x %struct.BMLoop*], [3 x %struct.BMLoop*]* %13, i64 %idxprom, !dbg !3095
  %arraydecay = getelementptr inbounds [3 x %struct.BMLoop*], [3 x %struct.BMLoop*]* %arrayidx, i64 0, i64 0, !dbg !3095
  store %struct.BMLoop** %arraydecay, %struct.BMLoop*** %ltri, align 8, !dbg !3094
  %15 = load %struct.BMLoop**, %struct.BMLoop*** %ltri, align 8, !dbg !3097
  %arrayidx5 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %15, i64 0, !dbg !3097
  %16 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx5, align 8, !dbg !3097
  %f = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %16, i32 0, i32 3, !dbg !3098
  %17 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !3098
  store %struct.BMFace* %17, %struct.BMFace** %ef, align 8, !dbg !3099
  %18 = load %struct.BMFace*, %struct.BMFace** %ef, align 8, !dbg !3100
  %mat_nr = getelementptr inbounds %struct.BMFace, %struct.BMFace* %18, i32 0, i32 5, !dbg !3101
  %19 = load i16, i16* %mat_nr, align 8, !dbg !3101
  %conv = trunc i16 %19 to i8, !dbg !3102
  %conv6 = zext i8 %conv to i16, !dbg !3102
  %20 = load %struct.MFace*, %struct.MFace** %r_face.addr, align 8, !dbg !3103
  %mat_nr7 = getelementptr inbounds %struct.MFace, %struct.MFace* %20, i32 0, i32 4, !dbg !3104
  store i16 %conv6, i16* %mat_nr7, align 4, !dbg !3105
  %21 = load %struct.BMFace*, %struct.BMFace** %ef, align 8, !dbg !3106
  %call = call zeroext i8 @BM_face_flag_to_mflag(%struct.BMFace* %21), !dbg !3107
  %22 = load %struct.MFace*, %struct.MFace** %r_face.addr, align 8, !dbg !3108
  %flag = getelementptr inbounds %struct.MFace, %struct.MFace* %22, i32 0, i32 6, !dbg !3109
  store i8 %call, i8* %flag, align 1, !dbg !3110
  %23 = load %struct.MFace*, %struct.MFace** %r_face.addr, align 8, !dbg !3111
  %edcode = getelementptr inbounds %struct.MFace, %struct.MFace* %23, i32 0, i32 5, !dbg !3112
  store i8 0, i8* %edcode, align 2, !dbg !3113
  %24 = load %struct.BMLoop**, %struct.BMLoop*** %ltri, align 8, !dbg !3114
  %arrayidx8 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %24, i64 0, !dbg !3114
  %25 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx8, align 8, !dbg !3114
  %v = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %25, i32 0, i32 1, !dbg !3114
  %26 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !3114
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %26, i32 0, i32 0, !dbg !3114
  %call9 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head), !dbg !3114
  %27 = load %struct.MFace*, %struct.MFace** %r_face.addr, align 8, !dbg !3115
  %v1 = getelementptr inbounds %struct.MFace, %struct.MFace* %27, i32 0, i32 0, !dbg !3116
  store i32 %call9, i32* %v1, align 4, !dbg !3117
  %28 = load %struct.BMLoop**, %struct.BMLoop*** %ltri, align 8, !dbg !3118
  %arrayidx10 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %28, i64 1, !dbg !3118
  %29 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx10, align 8, !dbg !3118
  %v11 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %29, i32 0, i32 1, !dbg !3118
  %30 = load %struct.BMVert*, %struct.BMVert** %v11, align 8, !dbg !3118
  %head12 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %30, i32 0, i32 0, !dbg !3118
  %call13 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head12), !dbg !3118
  %31 = load %struct.MFace*, %struct.MFace** %r_face.addr, align 8, !dbg !3119
  %v2 = getelementptr inbounds %struct.MFace, %struct.MFace* %31, i32 0, i32 1, !dbg !3120
  store i32 %call13, i32* %v2, align 4, !dbg !3121
  %32 = load %struct.BMLoop**, %struct.BMLoop*** %ltri, align 8, !dbg !3122
  %arrayidx14 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %32, i64 2, !dbg !3122
  %33 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx14, align 8, !dbg !3122
  %v15 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %33, i32 0, i32 1, !dbg !3122
  %34 = load %struct.BMVert*, %struct.BMVert** %v15, align 8, !dbg !3122
  %head16 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %34, i32 0, i32 0, !dbg !3122
  %call17 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head16), !dbg !3122
  %35 = load %struct.MFace*, %struct.MFace** %r_face.addr, align 8, !dbg !3123
  %v3 = getelementptr inbounds %struct.MFace, %struct.MFace* %35, i32 0, i32 2, !dbg !3124
  store i32 %call17, i32* %v3, align 4, !dbg !3125
  %36 = load %struct.MFace*, %struct.MFace** %r_face.addr, align 8, !dbg !3126
  %v4 = getelementptr inbounds %struct.MFace, %struct.MFace* %36, i32 0, i32 3, !dbg !3127
  store i32 0, i32* %v4, align 4, !dbg !3128
  %37 = load %struct.MFace*, %struct.MFace** %r_face.addr, align 8, !dbg !3129
  %call18 = call i32 @test_index_face(%struct.MFace* %37, %struct.CustomData* null, i32 0, i32 3), !dbg !3130
  br label %for.inc, !dbg !3131

for.inc:                                          ; preds = %for.body
  %38 = load i32, i32* %i, align 4, !dbg !3132
  %inc = add nsw i32 %38, 1, !dbg !3132
  store i32 %inc, i32* %i, align 4, !dbg !3132
  %39 = load %struct.MFace*, %struct.MFace** %r_face.addr, align 8, !dbg !3133
  %incdec.ptr = getelementptr inbounds %struct.MFace, %struct.MFace* %39, i32 1, !dbg !3133
  store %struct.MFace* %incdec.ptr, %struct.MFace** %r_face.addr, align 8, !dbg !3133
  br label %for.cond, !dbg !3134, !llvm.loop !3135

for.end:                                          ; preds = %for.cond
  ret void, !dbg !3137
}

; Function Attrs: noinline nounwind uwtable
define internal void @emDM_copyLoopArray(%struct.DerivedMesh* %dm, %struct.MLoop* %r_loop) #0 !dbg !3138 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %r_loop.addr = alloca %struct.MLoop*, align 8
  %bmdm = alloca %struct.EditDerivedBMesh*, align 8
  %bm = alloca %struct.BMesh*, align 8
  %iter = alloca %struct.BMIter, align 8
  %efa = alloca %struct.BMFace*, align 8
  %l_iter = alloca %struct.BMLoop*, align 8
  %l_first = alloca %struct.BMLoop*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !3143, metadata !DIExpression()), !dbg !3144
  store %struct.MLoop* %r_loop, %struct.MLoop** %r_loop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MLoop** %r_loop.addr, metadata !3145, metadata !DIExpression()), !dbg !3146
  call void @llvm.dbg.declare(metadata %struct.EditDerivedBMesh** %bmdm, metadata !3147, metadata !DIExpression()), !dbg !3148
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3149
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.EditDerivedBMesh*, !dbg !3150
  store %struct.EditDerivedBMesh* %1, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !3148
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm, metadata !3151, metadata !DIExpression()), !dbg !3152
  %2 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !3153
  %em = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %2, i32 0, i32 1, !dbg !3154
  %3 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !3154
  %bm1 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %3, i32 0, i32 0, !dbg !3155
  %4 = load %struct.BMesh*, %struct.BMesh** %bm1, align 8, !dbg !3155
  store %struct.BMesh* %4, %struct.BMesh** %bm, align 8, !dbg !3152
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !3156, metadata !DIExpression()), !dbg !3157
  call void @llvm.dbg.declare(metadata %struct.BMFace** %efa, metadata !3158, metadata !DIExpression()), !dbg !3159
  %5 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !3160
  call void @BM_mesh_elem_index_ensure(%struct.BMesh* %5, i8 zeroext 3), !dbg !3161
  %6 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !3162
  %call = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %6, i8 zeroext 3, i8* null), !dbg !3162
  %7 = bitcast i8* %call to %struct.BMFace*, !dbg !3162
  store %struct.BMFace* %7, %struct.BMFace** %efa, align 8, !dbg !3162
  br label %for.cond, !dbg !3162

for.cond:                                         ; preds = %for.inc, %entry
  %8 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !3164
  %tobool = icmp ne %struct.BMFace* %8, null, !dbg !3162
  br i1 %tobool, label %for.body, label %for.end, !dbg !3162

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l_iter, metadata !3166, metadata !DIExpression()), !dbg !3168
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l_first, metadata !3169, metadata !DIExpression()), !dbg !3170
  %9 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !3171
  %l_first2 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %9, i32 0, i32 2, !dbg !3171
  %10 = load %struct.BMLoop*, %struct.BMLoop** %l_first2, align 8, !dbg !3171
  store %struct.BMLoop* %10, %struct.BMLoop** %l_first, align 8, !dbg !3172
  store %struct.BMLoop* %10, %struct.BMLoop** %l_iter, align 8, !dbg !3173
  br label %do.body, !dbg !3174

do.body:                                          ; preds = %do.cond, %for.body
  %11 = load %struct.BMLoop*, %struct.BMLoop** %l_iter, align 8, !dbg !3175
  %v = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %11, i32 0, i32 1, !dbg !3175
  %12 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !3175
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %12, i32 0, i32 0, !dbg !3175
  %call3 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head), !dbg !3175
  %13 = load %struct.MLoop*, %struct.MLoop** %r_loop.addr, align 8, !dbg !3177
  %v4 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %13, i32 0, i32 0, !dbg !3178
  store i32 %call3, i32* %v4, align 4, !dbg !3179
  %14 = load %struct.BMLoop*, %struct.BMLoop** %l_iter, align 8, !dbg !3180
  %e = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %14, i32 0, i32 2, !dbg !3180
  %15 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !3180
  %head5 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %15, i32 0, i32 0, !dbg !3180
  %call6 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head5), !dbg !3180
  %16 = load %struct.MLoop*, %struct.MLoop** %r_loop.addr, align 8, !dbg !3181
  %e7 = getelementptr inbounds %struct.MLoop, %struct.MLoop* %16, i32 0, i32 1, !dbg !3182
  store i32 %call6, i32* %e7, align 4, !dbg !3183
  %17 = load %struct.MLoop*, %struct.MLoop** %r_loop.addr, align 8, !dbg !3184
  %incdec.ptr = getelementptr inbounds %struct.MLoop, %struct.MLoop* %17, i32 1, !dbg !3184
  store %struct.MLoop* %incdec.ptr, %struct.MLoop** %r_loop.addr, align 8, !dbg !3184
  br label %do.cond, !dbg !3185

do.cond:                                          ; preds = %do.body
  %18 = load %struct.BMLoop*, %struct.BMLoop** %l_iter, align 8, !dbg !3186
  %next = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %18, i32 0, i32 6, !dbg !3187
  %19 = load %struct.BMLoop*, %struct.BMLoop** %next, align 8, !dbg !3187
  store %struct.BMLoop* %19, %struct.BMLoop** %l_iter, align 8, !dbg !3188
  %20 = load %struct.BMLoop*, %struct.BMLoop** %l_first, align 8, !dbg !3189
  %cmp = icmp ne %struct.BMLoop* %19, %20, !dbg !3190
  br i1 %cmp, label %do.body, label %do.end, !dbg !3185, !llvm.loop !3191

do.end:                                           ; preds = %do.cond
  br label %for.inc, !dbg !3193

for.inc:                                          ; preds = %do.end
  %call8 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !3164
  %21 = bitcast i8* %call8 to %struct.BMFace*, !dbg !3164
  store %struct.BMFace* %21, %struct.BMFace** %efa, align 8, !dbg !3164
  br label %for.cond, !dbg !3164, !llvm.loop !3194

for.end:                                          ; preds = %for.cond
  ret void, !dbg !3196
}

; Function Attrs: noinline nounwind uwtable
define internal void @emDM_copyPolyArray(%struct.DerivedMesh* %dm, %struct.MPoly* %r_poly) #0 !dbg !3197 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %r_poly.addr = alloca %struct.MPoly*, align 8
  %bmdm = alloca %struct.EditDerivedBMesh*, align 8
  %bm = alloca %struct.BMesh*, align 8
  %iter = alloca %struct.BMIter, align 8
  %efa = alloca %struct.BMFace*, align 8
  %i = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !3202, metadata !DIExpression()), !dbg !3203
  store %struct.MPoly* %r_poly, %struct.MPoly** %r_poly.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MPoly** %r_poly.addr, metadata !3204, metadata !DIExpression()), !dbg !3205
  call void @llvm.dbg.declare(metadata %struct.EditDerivedBMesh** %bmdm, metadata !3206, metadata !DIExpression()), !dbg !3207
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3208
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.EditDerivedBMesh*, !dbg !3209
  store %struct.EditDerivedBMesh* %1, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !3207
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm, metadata !3210, metadata !DIExpression()), !dbg !3211
  %2 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !3212
  %em = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %2, i32 0, i32 1, !dbg !3213
  %3 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !3213
  %bm1 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %3, i32 0, i32 0, !dbg !3214
  %4 = load %struct.BMesh*, %struct.BMesh** %bm1, align 8, !dbg !3214
  store %struct.BMesh* %4, %struct.BMesh** %bm, align 8, !dbg !3211
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !3215, metadata !DIExpression()), !dbg !3216
  call void @llvm.dbg.declare(metadata %struct.BMFace** %efa, metadata !3217, metadata !DIExpression()), !dbg !3218
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3219, metadata !DIExpression()), !dbg !3220
  store i32 0, i32* %i, align 4, !dbg !3221
  %5 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !3222
  %call = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %5, i8 zeroext 3, i8* null), !dbg !3222
  %6 = bitcast i8* %call to %struct.BMFace*, !dbg !3222
  store %struct.BMFace* %6, %struct.BMFace** %efa, align 8, !dbg !3222
  br label %for.cond, !dbg !3222

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !3224
  %tobool = icmp ne %struct.BMFace* %7, null, !dbg !3222
  br i1 %tobool, label %for.body, label %for.end, !dbg !3222

for.body:                                         ; preds = %for.cond
  %8 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !3226
  %call2 = call zeroext i8 @BM_face_flag_to_mflag(%struct.BMFace* %8), !dbg !3228
  %9 = load %struct.MPoly*, %struct.MPoly** %r_poly.addr, align 8, !dbg !3229
  %flag = getelementptr inbounds %struct.MPoly, %struct.MPoly* %9, i32 0, i32 3, !dbg !3230
  store i8 %call2, i8* %flag, align 2, !dbg !3231
  %10 = load i32, i32* %i, align 4, !dbg !3232
  %11 = load %struct.MPoly*, %struct.MPoly** %r_poly.addr, align 8, !dbg !3233
  %loopstart = getelementptr inbounds %struct.MPoly, %struct.MPoly* %11, i32 0, i32 0, !dbg !3234
  store i32 %10, i32* %loopstart, align 4, !dbg !3235
  %12 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !3236
  %len = getelementptr inbounds %struct.BMFace, %struct.BMFace* %12, i32 0, i32 3, !dbg !3237
  %13 = load i32, i32* %len, align 8, !dbg !3237
  %14 = load %struct.MPoly*, %struct.MPoly** %r_poly.addr, align 8, !dbg !3238
  %totloop = getelementptr inbounds %struct.MPoly, %struct.MPoly* %14, i32 0, i32 1, !dbg !3239
  store i32 %13, i32* %totloop, align 4, !dbg !3240
  %15 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !3241
  %mat_nr = getelementptr inbounds %struct.BMFace, %struct.BMFace* %15, i32 0, i32 5, !dbg !3242
  %16 = load i16, i16* %mat_nr, align 8, !dbg !3242
  %17 = load %struct.MPoly*, %struct.MPoly** %r_poly.addr, align 8, !dbg !3243
  %mat_nr3 = getelementptr inbounds %struct.MPoly, %struct.MPoly* %17, i32 0, i32 2, !dbg !3244
  store i16 %16, i16* %mat_nr3, align 4, !dbg !3245
  %18 = load %struct.MPoly*, %struct.MPoly** %r_poly.addr, align 8, !dbg !3246
  %incdec.ptr = getelementptr inbounds %struct.MPoly, %struct.MPoly* %18, i32 1, !dbg !3246
  store %struct.MPoly* %incdec.ptr, %struct.MPoly** %r_poly.addr, align 8, !dbg !3246
  %19 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !3247
  %len4 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %19, i32 0, i32 3, !dbg !3248
  %20 = load i32, i32* %len4, align 8, !dbg !3248
  %21 = load i32, i32* %i, align 4, !dbg !3249
  %add = add nsw i32 %21, %20, !dbg !3249
  store i32 %add, i32* %i, align 4, !dbg !3249
  br label %for.inc, !dbg !3250

for.inc:                                          ; preds = %for.body
  %call5 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !3224
  %22 = bitcast i8* %call5 to %struct.BMFace*, !dbg !3224
  store %struct.BMFace* %22, %struct.BMFace** %efa, align 8, !dbg !3224
  br label %for.cond, !dbg !3224, !llvm.loop !3251

for.end:                                          ; preds = %for.cond
  ret void, !dbg !3253
}

; Function Attrs: noinline nounwind uwtable
define internal i8* @emDM_getTessFaceDataArray(%struct.DerivedMesh* %dm, i32 %type) #0 !dbg !3254 {
entry:
  %retval = alloca i8*, align 8
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %type.addr = alloca i32, align 4
  %bmdm = alloca %struct.EditDerivedBMesh*, align 8
  %bm = alloca %struct.BMesh*, align 8
  %datalayer = alloca i8*, align 8
  %type_from = alloca i32, align 4
  %index = alloca i32, align 4
  %data = alloca i8*, align 8
  %bmdata = alloca i8*, align 8
  %looptris = alloca [3 x %struct.BMLoop*]*, align 8
  %size = alloca i32, align 4
  %i = alloca i32, align 4
  %j = alloca i32, align 4
  %cd_loop_uv_offset = alloca i32, align 4
  %cd_poly_tex_offset = alloca i32, align 4
  %efa = alloca %struct.BMFace*, align 8
  %cd_loop_color_offset = alloca i32, align 4
  %mloopcol__tmp = alloca %struct.MLoopCol*, align 8
  %mcol__tmp = alloca %struct.MCol*, align 8
  %lnors = alloca [3 x float]*, align 8
  %looptris91 = alloca [3 x %struct.BMLoop*]*, align 8
  %tlnors = alloca [4 x [3 x i16]]*, align 8
  %tlnor = alloca [4 x [3 x i16]]*, align 8
  %index94 = alloca i32, align 4
  %i95 = alloca i32, align 4
  %j96 = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !3255, metadata !DIExpression()), !dbg !3256
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !3257, metadata !DIExpression()), !dbg !3258
  call void @llvm.dbg.declare(metadata %struct.EditDerivedBMesh** %bmdm, metadata !3259, metadata !DIExpression()), !dbg !3260
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3261
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.EditDerivedBMesh*, !dbg !3262
  store %struct.EditDerivedBMesh* %1, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !3260
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm, metadata !3263, metadata !DIExpression()), !dbg !3264
  %2 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !3265
  %em = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %2, i32 0, i32 1, !dbg !3266
  %3 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !3266
  %bm1 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %3, i32 0, i32 0, !dbg !3267
  %4 = load %struct.BMesh*, %struct.BMesh** %bm1, align 8, !dbg !3267
  store %struct.BMesh* %4, %struct.BMesh** %bm, align 8, !dbg !3264
  call void @llvm.dbg.declare(metadata i8** %datalayer, metadata !3268, metadata !DIExpression()), !dbg !3269
  %5 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3270
  %6 = load i32, i32* %type.addr, align 4, !dbg !3271
  %call = call i8* @DM_get_tessface_data_layer(%struct.DerivedMesh* %5, i32 %6), !dbg !3272
  store i8* %call, i8** %datalayer, align 8, !dbg !3273
  %7 = load i8*, i8** %datalayer, align 8, !dbg !3274
  %tobool = icmp ne i8* %7, null, !dbg !3274
  br i1 %tobool, label %if.then, label %if.end, !dbg !3276

if.then:                                          ; preds = %entry
  %8 = load i8*, i8** %datalayer, align 8, !dbg !3277
  store i8* %8, i8** %retval, align 8, !dbg !3278
  br label %return, !dbg !3278

if.end:                                           ; preds = %entry
  %9 = load i32, i32* %type.addr, align 4, !dbg !3279
  %cmp = icmp eq i32 %9, 5, !dbg !3281
  br i1 %cmp, label %if.then3, label %lor.lhs.false, !dbg !3282

lor.lhs.false:                                    ; preds = %if.end
  %10 = load i32, i32* %type.addr, align 4, !dbg !3283
  %cmp2 = icmp eq i32 %10, 6, !dbg !3284
  br i1 %cmp2, label %if.then3, label %if.end85, !dbg !3285

if.then3:                                         ; preds = %lor.lhs.false, %if.end
  call void @llvm.dbg.declare(metadata i32* %type_from, metadata !3286, metadata !DIExpression()), !dbg !3288
  %11 = load i32, i32* %type.addr, align 4, !dbg !3289
  %cmp4 = icmp eq i32 %11, 5, !dbg !3290
  %12 = zext i1 %cmp4 to i64, !dbg !3291
  %cond = select i1 %cmp4, i32 15, i32 17, !dbg !3291
  store i32 %cond, i32* %type_from, align 4, !dbg !3288
  call void @llvm.dbg.declare(metadata i32* %index, metadata !3292, metadata !DIExpression()), !dbg !3293
  call void @llvm.dbg.declare(metadata i8** %data, metadata !3294, metadata !DIExpression()), !dbg !3295
  call void @llvm.dbg.declare(metadata i8** %bmdata, metadata !3296, metadata !DIExpression()), !dbg !3297
  %13 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !3298
  %pdata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %13, i32 0, i32 27, !dbg !3299
  %14 = load i32, i32* %type_from, align 4, !dbg !3300
  %call5 = call i32 @CustomData_get_layer_index(%struct.CustomData* %pdata, i32 %14), !dbg !3301
  store i32 %call5, i32* %index, align 4, !dbg !3302
  %15 = load i32, i32* %index, align 4, !dbg !3303
  %cmp6 = icmp ne i32 %15, -1, !dbg !3305
  br i1 %cmp6, label %if.then7, label %if.end84, !dbg !3306

if.then7:                                         ; preds = %if.then3
  call void @llvm.dbg.declare(metadata [3 x %struct.BMLoop*]** %looptris, metadata !3307, metadata !DIExpression()), !dbg !3311
  %16 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !3312
  %em8 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %16, i32 0, i32 1, !dbg !3313
  %17 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em8, align 8, !dbg !3313
  %looptris9 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %17, i32 0, i32 3, !dbg !3314
  %18 = load [3 x %struct.BMLoop*]*, [3 x %struct.BMLoop*]** %looptris9, align 8, !dbg !3314
  store [3 x %struct.BMLoop*]* %18, [3 x %struct.BMLoop*]** %looptris, align 8, !dbg !3311
  call void @llvm.dbg.declare(metadata i32* %size, metadata !3315, metadata !DIExpression()), !dbg !3316
  %19 = load i32, i32* %type.addr, align 4, !dbg !3317
  %call10 = call i32 @CustomData_sizeof(i32 %19), !dbg !3318
  store i32 %call10, i32* %size, align 4, !dbg !3316
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3319, metadata !DIExpression()), !dbg !3320
  call void @llvm.dbg.declare(metadata i32* %j, metadata !3321, metadata !DIExpression()), !dbg !3322
  %20 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3323
  %21 = load i32, i32* %type.addr, align 4, !dbg !3324
  call void @DM_add_tessface_layer(%struct.DerivedMesh* %20, i32 %21, i32 1, i8* null), !dbg !3325
  %22 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3326
  %faceData = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %22, i32 0, i32 2, !dbg !3327
  %23 = load i32, i32* %type.addr, align 4, !dbg !3328
  %call11 = call i32 @CustomData_get_layer_index(%struct.CustomData* %faceData, i32 %23), !dbg !3329
  store i32 %call11, i32* %index, align 4, !dbg !3330
  %24 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3331
  %faceData12 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %24, i32 0, i32 2, !dbg !3332
  %layers = getelementptr inbounds %struct.CustomData, %struct.CustomData* %faceData12, i32 0, i32 0, !dbg !3333
  %25 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layers, align 8, !dbg !3333
  %26 = load i32, i32* %index, align 4, !dbg !3334
  %idxprom = sext i32 %26 to i64, !dbg !3331
  %arrayidx = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %25, i64 %idxprom, !dbg !3331
  %flag = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %arrayidx, i32 0, i32 2, !dbg !3335
  %27 = load i32, i32* %flag, align 8, !dbg !3336
  %or = or i32 %27, 5, !dbg !3336
  store i32 %or, i32* %flag, align 8, !dbg !3336
  %28 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3337
  %29 = load i32, i32* %type.addr, align 4, !dbg !3338
  %call13 = call i8* @DM_get_tessface_data_layer(%struct.DerivedMesh* %28, i32 %29), !dbg !3339
  store i8* %call13, i8** %datalayer, align 8, !dbg !3340
  store i8* %call13, i8** %data, align 8, !dbg !3341
  %30 = load i32, i32* %type.addr, align 4, !dbg !3342
  %cmp14 = icmp eq i32 %30, 5, !dbg !3344
  br i1 %cmp14, label %if.then15, label %if.else, !dbg !3345

if.then15:                                        ; preds = %if.then7
  call void @llvm.dbg.declare(metadata i32* %cd_loop_uv_offset, metadata !3346, metadata !DIExpression()), !dbg !3348
  %31 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !3349
  %ldata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %31, i32 0, i32 26, !dbg !3350
  %call16 = call i32 @CustomData_get_offset(%struct.CustomData* %ldata, i32 16), !dbg !3351
  store i32 %call16, i32* %cd_loop_uv_offset, align 4, !dbg !3348
  call void @llvm.dbg.declare(metadata i32* %cd_poly_tex_offset, metadata !3352, metadata !DIExpression()), !dbg !3353
  %32 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !3354
  %pdata17 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %32, i32 0, i32 27, !dbg !3355
  %call18 = call i32 @CustomData_get_offset(%struct.CustomData* %pdata17, i32 15), !dbg !3356
  store i32 %call18, i32* %cd_poly_tex_offset, align 4, !dbg !3353
  store i32 0, i32* %i, align 4, !dbg !3357
  br label %for.cond, !dbg !3359

for.cond:                                         ; preds = %for.inc46, %if.then15
  %33 = load i32, i32* %i, align 4, !dbg !3360
  %34 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !3362
  %em19 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %34, i32 0, i32 1, !dbg !3363
  %35 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em19, align 8, !dbg !3363
  %tottri = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %35, i32 0, i32 4, !dbg !3364
  %36 = load i32, i32* %tottri, align 8, !dbg !3364
  %cmp20 = icmp slt i32 %33, %36, !dbg !3365
  br i1 %cmp20, label %for.body, label %for.end50, !dbg !3366

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.BMFace** %efa, metadata !3367, metadata !DIExpression()), !dbg !3369
  %37 = load [3 x %struct.BMLoop*]*, [3 x %struct.BMLoop*]** %looptris, align 8, !dbg !3370
  %38 = load i32, i32* %i, align 4, !dbg !3371
  %idxprom21 = sext i32 %38 to i64, !dbg !3370
  %arrayidx22 = getelementptr inbounds [3 x %struct.BMLoop*], [3 x %struct.BMLoop*]* %37, i64 %idxprom21, !dbg !3370
  %arrayidx23 = getelementptr inbounds [3 x %struct.BMLoop*], [3 x %struct.BMLoop*]* %arrayidx22, i64 0, i64 0, !dbg !3370
  %39 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx23, align 8, !dbg !3370
  %f = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %39, i32 0, i32 3, !dbg !3372
  %40 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !3372
  store %struct.BMFace* %40, %struct.BMFace** %efa, align 8, !dbg !3369
  %41 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !3373
  %head = getelementptr inbounds %struct.BMFace, %struct.BMFace* %41, i32 0, i32 0, !dbg !3373
  %data24 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head, i32 0, i32 0, !dbg !3373
  %42 = load i8*, i8** %data24, align 8, !dbg !3373
  %43 = load i32, i32* %cd_poly_tex_offset, align 4, !dbg !3373
  %idx.ext = sext i32 %43 to i64, !dbg !3373
  %add.ptr = getelementptr inbounds i8, i8* %42, i64 %idx.ext, !dbg !3373
  store i8* %add.ptr, i8** %bmdata, align 8, !dbg !3374
  %44 = load i8*, i8** %bmdata, align 8, !dbg !3375
  %45 = bitcast i8* %44 to %struct.MTexPoly*, !dbg !3375
  %tpage = getelementptr inbounds %struct.MTexPoly, %struct.MTexPoly* %45, i32 0, i32 0, !dbg !3375
  %46 = load %struct.Image*, %struct.Image** %tpage, align 8, !dbg !3375
  %47 = load i8*, i8** %data, align 8, !dbg !3375
  %48 = bitcast i8* %47 to %struct.MTFace*, !dbg !3375
  %tpage25 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %48, i32 0, i32 1, !dbg !3375
  store %struct.Image* %46, %struct.Image** %tpage25, align 8, !dbg !3375
  %49 = load i8*, i8** %bmdata, align 8, !dbg !3375
  %50 = bitcast i8* %49 to %struct.MTexPoly*, !dbg !3375
  %flag26 = getelementptr inbounds %struct.MTexPoly, %struct.MTexPoly* %50, i32 0, i32 1, !dbg !3375
  %51 = load i8, i8* %flag26, align 8, !dbg !3375
  %52 = load i8*, i8** %data, align 8, !dbg !3375
  %53 = bitcast i8* %52 to %struct.MTFace*, !dbg !3375
  %flag27 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %53, i32 0, i32 2, !dbg !3375
  store i8 %51, i8* %flag27, align 8, !dbg !3375
  %54 = load i8*, i8** %bmdata, align 8, !dbg !3375
  %55 = bitcast i8* %54 to %struct.MTexPoly*, !dbg !3375
  %transp = getelementptr inbounds %struct.MTexPoly, %struct.MTexPoly* %55, i32 0, i32 2, !dbg !3375
  %56 = load i8, i8* %transp, align 1, !dbg !3375
  %57 = load i8*, i8** %data, align 8, !dbg !3375
  %58 = bitcast i8* %57 to %struct.MTFace*, !dbg !3375
  %transp28 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %58, i32 0, i32 3, !dbg !3375
  store i8 %56, i8* %transp28, align 1, !dbg !3375
  %59 = load i8*, i8** %bmdata, align 8, !dbg !3375
  %60 = bitcast i8* %59 to %struct.MTexPoly*, !dbg !3375
  %mode = getelementptr inbounds %struct.MTexPoly, %struct.MTexPoly* %60, i32 0, i32 3, !dbg !3375
  %61 = load i16, i16* %mode, align 2, !dbg !3375
  %62 = load i8*, i8** %data, align 8, !dbg !3375
  %63 = bitcast i8* %62 to %struct.MTFace*, !dbg !3375
  %mode29 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %63, i32 0, i32 4, !dbg !3375
  store i16 %61, i16* %mode29, align 2, !dbg !3375
  %64 = load i8*, i8** %bmdata, align 8, !dbg !3375
  %65 = bitcast i8* %64 to %struct.MTexPoly*, !dbg !3375
  %tile = getelementptr inbounds %struct.MTexPoly, %struct.MTexPoly* %65, i32 0, i32 4, !dbg !3375
  %66 = load i16, i16* %tile, align 4, !dbg !3375
  %67 = load i8*, i8** %data, align 8, !dbg !3375
  %68 = bitcast i8* %67 to %struct.MTFace*, !dbg !3375
  %tile30 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %68, i32 0, i32 5, !dbg !3375
  store i16 %66, i16* %tile30, align 4, !dbg !3375
  store i32 0, i32* %j, align 4, !dbg !3377
  br label %for.cond31, !dbg !3379

for.cond31:                                       ; preds = %for.inc, %for.body
  %69 = load i32, i32* %j, align 4, !dbg !3380
  %cmp32 = icmp slt i32 %69, 3, !dbg !3382
  br i1 %cmp32, label %for.body33, label %for.end, !dbg !3383

for.body33:                                       ; preds = %for.cond31
  %70 = load [3 x %struct.BMLoop*]*, [3 x %struct.BMLoop*]** %looptris, align 8, !dbg !3384
  %71 = load i32, i32* %i, align 4, !dbg !3384
  %idxprom34 = sext i32 %71 to i64, !dbg !3384
  %arrayidx35 = getelementptr inbounds [3 x %struct.BMLoop*], [3 x %struct.BMLoop*]* %70, i64 %idxprom34, !dbg !3384
  %72 = load i32, i32* %j, align 4, !dbg !3384
  %idxprom36 = sext i32 %72 to i64, !dbg !3384
  %arrayidx37 = getelementptr inbounds [3 x %struct.BMLoop*], [3 x %struct.BMLoop*]* %arrayidx35, i64 0, i64 %idxprom36, !dbg !3384
  %73 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx37, align 8, !dbg !3384
  %head38 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %73, i32 0, i32 0, !dbg !3384
  %data39 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head38, i32 0, i32 0, !dbg !3384
  %74 = load i8*, i8** %data39, align 8, !dbg !3384
  %75 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !3384
  %idx.ext40 = sext i32 %75 to i64, !dbg !3384
  %add.ptr41 = getelementptr inbounds i8, i8* %74, i64 %idx.ext40, !dbg !3384
  store i8* %add.ptr41, i8** %bmdata, align 8, !dbg !3386
  %76 = load i8*, i8** %data, align 8, !dbg !3387
  %77 = bitcast i8* %76 to %struct.MTFace*, !dbg !3388
  %uv = getelementptr inbounds %struct.MTFace, %struct.MTFace* %77, i32 0, i32 0, !dbg !3388
  %78 = load i32, i32* %j, align 4, !dbg !3389
  %idxprom42 = sext i32 %78 to i64, !dbg !3390
  %arrayidx43 = getelementptr inbounds [4 x [2 x float]], [4 x [2 x float]]* %uv, i64 0, i64 %idxprom42, !dbg !3390
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %arrayidx43, i64 0, i64 0, !dbg !3390
  %79 = load i8*, i8** %bmdata, align 8, !dbg !3391
  %80 = bitcast i8* %79 to %struct.MLoopUV*, !dbg !3392
  %uv44 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %80, i32 0, i32 0, !dbg !3392
  %arraydecay45 = getelementptr inbounds [2 x float], [2 x float]* %uv44, i64 0, i64 0, !dbg !3393
  call void @copy_v2_v2(float* %arraydecay, float* %arraydecay45), !dbg !3394
  br label %for.inc, !dbg !3395

for.inc:                                          ; preds = %for.body33
  %81 = load i32, i32* %j, align 4, !dbg !3396
  %inc = add nsw i32 %81, 1, !dbg !3396
  store i32 %inc, i32* %j, align 4, !dbg !3396
  br label %for.cond31, !dbg !3397, !llvm.loop !3398

for.end:                                          ; preds = %for.cond31
  br label %for.inc46, !dbg !3400

for.inc46:                                        ; preds = %for.end
  %82 = load i32, i32* %i, align 4, !dbg !3401
  %inc47 = add nsw i32 %82, 1, !dbg !3401
  store i32 %inc47, i32* %i, align 4, !dbg !3401
  %83 = load i32, i32* %size, align 4, !dbg !3402
  %84 = load i8*, i8** %data, align 8, !dbg !3403
  %idx.ext48 = sext i32 %83 to i64, !dbg !3403
  %add.ptr49 = getelementptr inbounds i8, i8* %84, i64 %idx.ext48, !dbg !3403
  store i8* %add.ptr49, i8** %data, align 8, !dbg !3403
  br label %for.cond, !dbg !3404, !llvm.loop !3405

for.end50:                                        ; preds = %for.cond
  br label %if.end83, !dbg !3407

if.else:                                          ; preds = %if.then7
  call void @llvm.dbg.declare(metadata i32* %cd_loop_color_offset, metadata !3408, metadata !DIExpression()), !dbg !3410
  %85 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !3411
  %ldata51 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %85, i32 0, i32 26, !dbg !3412
  %call52 = call i32 @CustomData_get_offset(%struct.CustomData* %ldata51, i32 17), !dbg !3413
  store i32 %call52, i32* %cd_loop_color_offset, align 4, !dbg !3410
  store i32 0, i32* %i, align 4, !dbg !3414
  br label %for.cond53, !dbg !3416

for.cond53:                                       ; preds = %for.inc78, %if.else
  %86 = load i32, i32* %i, align 4, !dbg !3417
  %87 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !3419
  %em54 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %87, i32 0, i32 1, !dbg !3420
  %88 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em54, align 8, !dbg !3420
  %tottri55 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %88, i32 0, i32 4, !dbg !3421
  %89 = load i32, i32* %tottri55, align 8, !dbg !3421
  %cmp56 = icmp slt i32 %86, %89, !dbg !3422
  br i1 %cmp56, label %for.body57, label %for.end82, !dbg !3423

for.body57:                                       ; preds = %for.cond53
  store i32 0, i32* %j, align 4, !dbg !3424
  br label %for.cond58, !dbg !3427

for.cond58:                                       ; preds = %for.inc75, %for.body57
  %90 = load i32, i32* %j, align 4, !dbg !3428
  %cmp59 = icmp slt i32 %90, 3, !dbg !3430
  br i1 %cmp59, label %for.body60, label %for.end77, !dbg !3431

for.body60:                                       ; preds = %for.cond58
  %91 = load [3 x %struct.BMLoop*]*, [3 x %struct.BMLoop*]** %looptris, align 8, !dbg !3432
  %92 = load i32, i32* %i, align 4, !dbg !3432
  %idxprom61 = sext i32 %92 to i64, !dbg !3432
  %arrayidx62 = getelementptr inbounds [3 x %struct.BMLoop*], [3 x %struct.BMLoop*]* %91, i64 %idxprom61, !dbg !3432
  %93 = load i32, i32* %j, align 4, !dbg !3432
  %idxprom63 = sext i32 %93 to i64, !dbg !3432
  %arrayidx64 = getelementptr inbounds [3 x %struct.BMLoop*], [3 x %struct.BMLoop*]* %arrayidx62, i64 0, i64 %idxprom63, !dbg !3432
  %94 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx64, align 8, !dbg !3432
  %head65 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %94, i32 0, i32 0, !dbg !3432
  %data66 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head65, i32 0, i32 0, !dbg !3432
  %95 = load i8*, i8** %data66, align 8, !dbg !3432
  %96 = load i32, i32* %cd_loop_color_offset, align 4, !dbg !3432
  %idx.ext67 = sext i32 %96 to i64, !dbg !3432
  %add.ptr68 = getelementptr inbounds i8, i8* %95, i64 %idx.ext67, !dbg !3432
  store i8* %add.ptr68, i8** %bmdata, align 8, !dbg !3434
  call void @llvm.dbg.declare(metadata %struct.MLoopCol** %mloopcol__tmp, metadata !3435, metadata !DIExpression()), !dbg !3439
  %97 = load i8*, i8** %bmdata, align 8, !dbg !3439
  %98 = bitcast i8* %97 to %struct.MLoopCol*, !dbg !3439
  store %struct.MLoopCol* %98, %struct.MLoopCol** %mloopcol__tmp, align 8, !dbg !3439
  call void @llvm.dbg.declare(metadata %struct.MCol** %mcol__tmp, metadata !3440, metadata !DIExpression()), !dbg !3439
  %99 = load i8*, i8** %data, align 8, !dbg !3439
  %100 = bitcast i8* %99 to %struct.MCol*, !dbg !3439
  %101 = load i32, i32* %j, align 4, !dbg !3439
  %idx.ext69 = sext i32 %101 to i64, !dbg !3439
  %add.ptr70 = getelementptr inbounds %struct.MCol, %struct.MCol* %100, i64 %idx.ext69, !dbg !3439
  store %struct.MCol* %add.ptr70, %struct.MCol** %mcol__tmp, align 8, !dbg !3439
  %102 = load %struct.MLoopCol*, %struct.MLoopCol** %mloopcol__tmp, align 8, !dbg !3439
  %r = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %102, i32 0, i32 0, !dbg !3439
  %103 = load i8, i8* %r, align 1, !dbg !3439
  %104 = load %struct.MCol*, %struct.MCol** %mcol__tmp, align 8, !dbg !3439
  %b = getelementptr inbounds %struct.MCol, %struct.MCol* %104, i32 0, i32 3, !dbg !3439
  store i8 %103, i8* %b, align 1, !dbg !3439
  %105 = load %struct.MLoopCol*, %struct.MLoopCol** %mloopcol__tmp, align 8, !dbg !3439
  %g = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %105, i32 0, i32 1, !dbg !3439
  %106 = load i8, i8* %g, align 1, !dbg !3439
  %107 = load %struct.MCol*, %struct.MCol** %mcol__tmp, align 8, !dbg !3439
  %g71 = getelementptr inbounds %struct.MCol, %struct.MCol* %107, i32 0, i32 2, !dbg !3439
  store i8 %106, i8* %g71, align 1, !dbg !3439
  %108 = load %struct.MLoopCol*, %struct.MLoopCol** %mloopcol__tmp, align 8, !dbg !3439
  %b72 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %108, i32 0, i32 2, !dbg !3439
  %109 = load i8, i8* %b72, align 1, !dbg !3439
  %110 = load %struct.MCol*, %struct.MCol** %mcol__tmp, align 8, !dbg !3439
  %r73 = getelementptr inbounds %struct.MCol, %struct.MCol* %110, i32 0, i32 1, !dbg !3439
  store i8 %109, i8* %r73, align 1, !dbg !3439
  %111 = load %struct.MLoopCol*, %struct.MLoopCol** %mloopcol__tmp, align 8, !dbg !3439
  %a = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %111, i32 0, i32 3, !dbg !3439
  %112 = load i8, i8* %a, align 1, !dbg !3439
  %113 = load %struct.MCol*, %struct.MCol** %mcol__tmp, align 8, !dbg !3439
  %a74 = getelementptr inbounds %struct.MCol, %struct.MCol* %113, i32 0, i32 0, !dbg !3439
  store i8 %112, i8* %a74, align 1, !dbg !3439
  br label %for.inc75, !dbg !3441

for.inc75:                                        ; preds = %for.body60
  %114 = load i32, i32* %j, align 4, !dbg !3442
  %inc76 = add nsw i32 %114, 1, !dbg !3442
  store i32 %inc76, i32* %j, align 4, !dbg !3442
  br label %for.cond58, !dbg !3443, !llvm.loop !3444

for.end77:                                        ; preds = %for.cond58
  br label %for.inc78, !dbg !3446

for.inc78:                                        ; preds = %for.end77
  %115 = load i32, i32* %i, align 4, !dbg !3447
  %inc79 = add nsw i32 %115, 1, !dbg !3447
  store i32 %inc79, i32* %i, align 4, !dbg !3447
  %116 = load i32, i32* %size, align 4, !dbg !3448
  %117 = load i8*, i8** %data, align 8, !dbg !3449
  %idx.ext80 = sext i32 %116 to i64, !dbg !3449
  %add.ptr81 = getelementptr inbounds i8, i8* %117, i64 %idx.ext80, !dbg !3449
  store i8* %add.ptr81, i8** %data, align 8, !dbg !3449
  br label %for.cond53, !dbg !3450, !llvm.loop !3451

for.end82:                                        ; preds = %for.cond53
  br label %if.end83

if.end83:                                         ; preds = %for.end82, %for.end50
  br label %if.end84, !dbg !3453

if.end84:                                         ; preds = %if.end83, %if.then3
  br label %if.end85, !dbg !3454

if.end85:                                         ; preds = %if.end84, %lor.lhs.false
  %118 = load i32, i32* %type.addr, align 4, !dbg !3455
  %cmp86 = icmp eq i32 %118, 40, !dbg !3457
  br i1 %cmp86, label %if.then87, label %if.end132, !dbg !3458

if.then87:                                        ; preds = %if.end85
  call void @llvm.dbg.declare(metadata [3 x float]** %lnors, metadata !3459, metadata !DIExpression()), !dbg !3461
  %119 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3462
  %getLoopDataArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %119, i32 0, i32 53, !dbg !3463
  %120 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getLoopDataArray, align 8, !dbg !3463
  %121 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3464
  %call88 = call i8* %120(%struct.DerivedMesh* %121, i32 8), !dbg !3462
  %122 = bitcast i8* %call88 to [3 x float]*, !dbg !3462
  store [3 x float]* %122, [3 x float]** %lnors, align 8, !dbg !3461
  %123 = load [3 x float]*, [3 x float]** %lnors, align 8, !dbg !3465
  %tobool89 = icmp ne [3 x float]* %123, null, !dbg !3465
  br i1 %tobool89, label %if.then90, label %if.end131, !dbg !3467

if.then90:                                        ; preds = %if.then87
  call void @llvm.dbg.declare(metadata [3 x %struct.BMLoop*]** %looptris91, metadata !3468, metadata !DIExpression()), !dbg !3470
  %124 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !3471
  %em92 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %124, i32 0, i32 1, !dbg !3472
  %125 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em92, align 8, !dbg !3472
  %looptris93 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %125, i32 0, i32 3, !dbg !3473
  %126 = load [3 x %struct.BMLoop*]*, [3 x %struct.BMLoop*]** %looptris93, align 8, !dbg !3473
  store [3 x %struct.BMLoop*]* %126, [3 x %struct.BMLoop*]** %looptris91, align 8, !dbg !3470
  call void @llvm.dbg.declare(metadata [4 x [3 x i16]]** %tlnors, metadata !3474, metadata !DIExpression()), !dbg !3478
  call void @llvm.dbg.declare(metadata [4 x [3 x i16]]** %tlnor, metadata !3479, metadata !DIExpression()), !dbg !3480
  call void @llvm.dbg.declare(metadata i32* %index94, metadata !3481, metadata !DIExpression()), !dbg !3482
  call void @llvm.dbg.declare(metadata i32* %i95, metadata !3483, metadata !DIExpression()), !dbg !3484
  call void @llvm.dbg.declare(metadata i32* %j96, metadata !3485, metadata !DIExpression()), !dbg !3486
  %127 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3487
  %128 = load i32, i32* %type.addr, align 4, !dbg !3488
  call void @DM_add_tessface_layer(%struct.DerivedMesh* %127, i32 %128, i32 1, i8* null), !dbg !3489
  %129 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3490
  %faceData97 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %129, i32 0, i32 2, !dbg !3491
  %130 = load i32, i32* %type.addr, align 4, !dbg !3492
  %call98 = call i32 @CustomData_get_layer_index(%struct.CustomData* %faceData97, i32 %130), !dbg !3493
  store i32 %call98, i32* %index94, align 4, !dbg !3494
  %131 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3495
  %faceData99 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %131, i32 0, i32 2, !dbg !3496
  %layers100 = getelementptr inbounds %struct.CustomData, %struct.CustomData* %faceData99, i32 0, i32 0, !dbg !3497
  %132 = load %struct.CustomDataLayer*, %struct.CustomDataLayer** %layers100, align 8, !dbg !3497
  %133 = load i32, i32* %index94, align 4, !dbg !3498
  %idxprom101 = sext i32 %133 to i64, !dbg !3495
  %arrayidx102 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %132, i64 %idxprom101, !dbg !3495
  %flag103 = getelementptr inbounds %struct.CustomDataLayer, %struct.CustomDataLayer* %arrayidx102, i32 0, i32 2, !dbg !3499
  %134 = load i32, i32* %flag103, align 8, !dbg !3500
  %or104 = or i32 %134, 5, !dbg !3500
  store i32 %or104, i32* %flag103, align 8, !dbg !3500
  %135 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3501
  %136 = load i32, i32* %type.addr, align 4, !dbg !3502
  %call105 = call i8* @DM_get_tessface_data_layer(%struct.DerivedMesh* %135, i32 %136), !dbg !3503
  %137 = bitcast i8* %call105 to [4 x [3 x i16]]*, !dbg !3503
  store [4 x [3 x i16]]* %137, [4 x [3 x i16]]** %tlnors, align 8, !dbg !3504
  store [4 x [3 x i16]]* %137, [4 x [3 x i16]]** %tlnor, align 8, !dbg !3505
  %138 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !3506
  call void @BM_mesh_elem_index_ensure(%struct.BMesh* %138, i8 zeroext 4), !dbg !3507
  store i32 0, i32* %i95, align 4, !dbg !3508
  br label %for.cond106, !dbg !3510

for.cond106:                                      ; preds = %for.inc127, %if.then90
  %139 = load i32, i32* %i95, align 4, !dbg !3511
  %140 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !3513
  %em107 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %140, i32 0, i32 1, !dbg !3514
  %141 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em107, align 8, !dbg !3514
  %tottri108 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %141, i32 0, i32 4, !dbg !3515
  %142 = load i32, i32* %tottri108, align 8, !dbg !3515
  %cmp109 = icmp slt i32 %139, %142, !dbg !3516
  br i1 %cmp109, label %for.body110, label %for.end130, !dbg !3517

for.body110:                                      ; preds = %for.cond106
  store i32 0, i32* %j96, align 4, !dbg !3518
  br label %for.cond111, !dbg !3521

for.cond111:                                      ; preds = %for.inc124, %for.body110
  %143 = load i32, i32* %j96, align 4, !dbg !3522
  %cmp112 = icmp slt i32 %143, 3, !dbg !3524
  br i1 %cmp112, label %for.body113, label %for.end126, !dbg !3525

for.body113:                                      ; preds = %for.cond111
  %144 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %tlnor, align 8, !dbg !3526
  %145 = load i32, i32* %j96, align 4, !dbg !3528
  %idxprom114 = sext i32 %145 to i64, !dbg !3529
  %arrayidx115 = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %144, i64 0, i64 %idxprom114, !dbg !3529
  %arraydecay116 = getelementptr inbounds [3 x i16], [3 x i16]* %arrayidx115, i64 0, i64 0, !dbg !3529
  %146 = load [3 x float]*, [3 x float]** %lnors, align 8, !dbg !3530
  %147 = load [3 x %struct.BMLoop*]*, [3 x %struct.BMLoop*]** %looptris91, align 8, !dbg !3531
  %148 = load i32, i32* %j96, align 4, !dbg !3531
  %idxprom117 = sext i32 %148 to i64, !dbg !3531
  %arrayidx118 = getelementptr inbounds [3 x %struct.BMLoop*], [3 x %struct.BMLoop*]* %147, i64 0, i64 %idxprom117, !dbg !3531
  %149 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx118, align 8, !dbg !3531
  %head119 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %149, i32 0, i32 0, !dbg !3531
  %call120 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head119), !dbg !3531
  %idxprom121 = sext i32 %call120 to i64, !dbg !3530
  %arrayidx122 = getelementptr inbounds [3 x float], [3 x float]* %146, i64 %idxprom121, !dbg !3530
  %arraydecay123 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx122, i64 0, i64 0, !dbg !3530
  call void @normal_float_to_short_v3(i16* %arraydecay116, float* %arraydecay123), !dbg !3532
  br label %for.inc124, !dbg !3533

for.inc124:                                       ; preds = %for.body113
  %150 = load i32, i32* %j96, align 4, !dbg !3534
  %inc125 = add nsw i32 %150, 1, !dbg !3534
  store i32 %inc125, i32* %j96, align 4, !dbg !3534
  br label %for.cond111, !dbg !3535, !llvm.loop !3536

for.end126:                                       ; preds = %for.cond111
  br label %for.inc127, !dbg !3538

for.inc127:                                       ; preds = %for.end126
  %151 = load i32, i32* %i95, align 4, !dbg !3539
  %inc128 = add nsw i32 %151, 1, !dbg !3539
  store i32 %inc128, i32* %i95, align 4, !dbg !3539
  %152 = load [4 x [3 x i16]]*, [4 x [3 x i16]]** %tlnor, align 8, !dbg !3540
  %incdec.ptr = getelementptr inbounds [4 x [3 x i16]], [4 x [3 x i16]]* %152, i32 1, !dbg !3540
  store [4 x [3 x i16]]* %incdec.ptr, [4 x [3 x i16]]** %tlnor, align 8, !dbg !3540
  %153 = load [3 x %struct.BMLoop*]*, [3 x %struct.BMLoop*]** %looptris91, align 8, !dbg !3541
  %incdec.ptr129 = getelementptr inbounds [3 x %struct.BMLoop*], [3 x %struct.BMLoop*]* %153, i32 1, !dbg !3541
  store [3 x %struct.BMLoop*]* %incdec.ptr129, [3 x %struct.BMLoop*]** %looptris91, align 8, !dbg !3541
  br label %for.cond106, !dbg !3542, !llvm.loop !3543

for.end130:                                       ; preds = %for.cond106
  br label %if.end131, !dbg !3545

if.end131:                                        ; preds = %for.end130, %if.then87
  br label %if.end132, !dbg !3546

if.end132:                                        ; preds = %if.end131, %if.end85
  %154 = load i8*, i8** %datalayer, align 8, !dbg !3547
  store i8* %154, i8** %retval, align 8, !dbg !3548
  br label %return, !dbg !3548

return:                                           ; preds = %if.end132, %if.then
  %155 = load i8*, i8** %retval, align 8, !dbg !3549
  ret i8* %155, !dbg !3549
}

; Function Attrs: noinline nounwind uwtable
define internal void @emDM_calcNormals(%struct.DerivedMesh* %dm) #0 !dbg !3550 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !3551, metadata !DIExpression()), !dbg !3552
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3553
  %dirty = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 16, !dbg !3554
  %1 = load i32, i32* %dirty, align 8, !dbg !3555
  %and = and i32 %1, -5, !dbg !3555
  store i32 %and, i32* %dirty, align 8, !dbg !3555
  ret void, !dbg !3556
}

; Function Attrs: noinline nounwind uwtable
define internal void @emDM_calcLoopNormals(%struct.DerivedMesh* %dm, float %split_angle) #0 !dbg !3557 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %split_angle.addr = alloca float, align 4
  %bmdm = alloca %struct.EditDerivedBMesh*, align 8
  %bm = alloca %struct.BMesh*, align 8
  %vertexCos = alloca [3 x float]*, align 8
  %vertexNos = alloca [3 x float]*, align 8
  %polyNos = alloca [3 x float]*, align 8
  %loopNos = alloca [3 x float]*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !3558, metadata !DIExpression()), !dbg !3559
  store float %split_angle, float* %split_angle.addr, align 4
  call void @llvm.dbg.declare(metadata float* %split_angle.addr, metadata !3560, metadata !DIExpression()), !dbg !3561
  call void @llvm.dbg.declare(metadata %struct.EditDerivedBMesh** %bmdm, metadata !3562, metadata !DIExpression()), !dbg !3563
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3564
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.EditDerivedBMesh*, !dbg !3565
  store %struct.EditDerivedBMesh* %1, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !3563
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm, metadata !3566, metadata !DIExpression()), !dbg !3567
  %2 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !3568
  %em = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %2, i32 0, i32 1, !dbg !3569
  %3 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !3569
  %bm1 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %3, i32 0, i32 0, !dbg !3570
  %4 = load %struct.BMesh*, %struct.BMesh** %bm1, align 8, !dbg !3570
  store %struct.BMesh* %4, %struct.BMesh** %bm, align 8, !dbg !3567
  call void @llvm.dbg.declare(metadata [3 x float]** %vertexCos, metadata !3571, metadata !DIExpression()), !dbg !3572
  call void @llvm.dbg.declare(metadata [3 x float]** %vertexNos, metadata !3573, metadata !DIExpression()), !dbg !3574
  call void @llvm.dbg.declare(metadata [3 x float]** %polyNos, metadata !3575, metadata !DIExpression()), !dbg !3576
  call void @llvm.dbg.declare(metadata [3 x float]** %loopNos, metadata !3577, metadata !DIExpression()), !dbg !3578
  %5 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !3579
  call void @emDM_ensureVertNormals(%struct.EditDerivedBMesh* %5), !dbg !3580
  %6 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !3581
  call void @emDM_ensurePolyNormals(%struct.EditDerivedBMesh* %6), !dbg !3582
  %7 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3583
  %dirty = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %7, i32 0, i32 16, !dbg !3584
  %8 = load i32, i32* %dirty, align 8, !dbg !3585
  %and = and i32 %8, -5, !dbg !3585
  store i32 %and, i32* %dirty, align 8, !dbg !3585
  %9 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !3586
  %vertexCos2 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %9, i32 0, i32 2, !dbg !3587
  %10 = load [3 x float]*, [3 x float]** %vertexCos2, align 8, !dbg !3587
  store [3 x float]* %10, [3 x float]** %vertexCos, align 8, !dbg !3588
  %11 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !3589
  %vertexNos3 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %11, i32 0, i32 3, !dbg !3590
  %12 = load [3 x float]*, [3 x float]** %vertexNos3, align 8, !dbg !3590
  store [3 x float]* %12, [3 x float]** %vertexNos, align 8, !dbg !3591
  %13 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !3592
  %polyNos4 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %13, i32 0, i32 4, !dbg !3593
  %14 = load [3 x float]*, [3 x float]** %polyNos4, align 8, !dbg !3593
  store [3 x float]* %14, [3 x float]** %polyNos, align 8, !dbg !3594
  %15 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3595
  %getLoopDataArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %15, i32 0, i32 53, !dbg !3596
  %16 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getLoopDataArray, align 8, !dbg !3596
  %17 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3597
  %call = call i8* %16(%struct.DerivedMesh* %17, i32 8), !dbg !3595
  %18 = bitcast i8* %call to [3 x float]*, !dbg !3595
  store [3 x float]* %18, [3 x float]** %loopNos, align 8, !dbg !3598
  %19 = load [3 x float]*, [3 x float]** %loopNos, align 8, !dbg !3599
  %tobool = icmp ne [3 x float]* %19, null, !dbg !3599
  br i1 %tobool, label %if.end, label %if.then, !dbg !3601

if.then:                                          ; preds = %entry
  %20 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3602
  call void @DM_add_loop_layer(%struct.DerivedMesh* %20, i32 8, i32 1, i8* null), !dbg !3604
  %21 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3605
  %getLoopDataArray5 = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %21, i32 0, i32 53, !dbg !3606
  %22 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getLoopDataArray5, align 8, !dbg !3606
  %23 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3607
  %call6 = call i8* %22(%struct.DerivedMesh* %23, i32 8), !dbg !3605
  %24 = bitcast i8* %call6 to [3 x float]*, !dbg !3605
  store [3 x float]* %24, [3 x float]** %loopNos, align 8, !dbg !3608
  br label %if.end, !dbg !3609

if.end:                                           ; preds = %if.then, %entry
  %25 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !3610
  %26 = load [3 x float]*, [3 x float]** %vertexCos, align 8, !dbg !3611
  %27 = load [3 x float]*, [3 x float]** %vertexNos, align 8, !dbg !3612
  %28 = load [3 x float]*, [3 x float]** %polyNos, align 8, !dbg !3613
  %29 = load float, float* %split_angle.addr, align 4, !dbg !3614
  %30 = load [3 x float]*, [3 x float]** %loopNos, align 8, !dbg !3615
  call void @BM_loops_calc_normal_vcos(%struct.BMesh* %25, [3 x float]* %26, [3 x float]* %27, [3 x float]* %28, float %29, [3 x float]* %30), !dbg !3616
  ret void, !dbg !3617
}

; Function Attrs: noinline nounwind uwtable
define internal void @emDM_recalcTessellation(%struct.DerivedMesh* %UNUSED_dm) #0 !dbg !3618 {
entry:
  %UNUSED_dm.addr = alloca %struct.DerivedMesh*, align 8
  store %struct.DerivedMesh* %UNUSED_dm, %struct.DerivedMesh** %UNUSED_dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %UNUSED_dm.addr, metadata !3619, metadata !DIExpression()), !dbg !3620
  ret void, !dbg !3621
}

; Function Attrs: noinline nounwind uwtable
define internal void @emDM_foreachMappedVert(%struct.DerivedMesh* %dm, void (i8*, i32, float*, float*, i16*)* %func, i8* %userData, i32 %flag) #0 !dbg !3622 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %func.addr = alloca void (i8*, i32, float*, float*, i16*)*, align 8
  %userData.addr = alloca i8*, align 8
  %flag.addr = alloca i32, align 4
  %bmdm = alloca %struct.EditDerivedBMesh*, align 8
  %bm = alloca %struct.BMesh*, align 8
  %eve = alloca %struct.BMVert*, align 8
  %iter = alloca %struct.BMIter, align 8
  %i = alloca i32, align 4
  %vertexCos2 = alloca [3 x float]*, align 8
  %vertexNos = alloca [3 x float]*, align 8
  %no = alloca float*, align 8
  %no19 = alloca float*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !3623, metadata !DIExpression()), !dbg !3624
  store void (i8*, i32, float*, float*, i16*)* %func, void (i8*, i32, float*, float*, i16*)** %func.addr, align 8
  call void @llvm.dbg.declare(metadata void (i8*, i32, float*, float*, i16*)** %func.addr, metadata !3625, metadata !DIExpression()), !dbg !3626
  store i8* %userData, i8** %userData.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userData.addr, metadata !3627, metadata !DIExpression()), !dbg !3628
  store i32 %flag, i32* %flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !3629, metadata !DIExpression()), !dbg !3630
  call void @llvm.dbg.declare(metadata %struct.EditDerivedBMesh** %bmdm, metadata !3631, metadata !DIExpression()), !dbg !3632
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3633
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.EditDerivedBMesh*, !dbg !3634
  store %struct.EditDerivedBMesh* %1, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !3632
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm, metadata !3635, metadata !DIExpression()), !dbg !3636
  %2 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !3637
  %em = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %2, i32 0, i32 1, !dbg !3638
  %3 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !3638
  %bm1 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %3, i32 0, i32 0, !dbg !3639
  %4 = load %struct.BMesh*, %struct.BMesh** %bm1, align 8, !dbg !3639
  store %struct.BMesh* %4, %struct.BMesh** %bm, align 8, !dbg !3636
  call void @llvm.dbg.declare(metadata %struct.BMVert** %eve, metadata !3640, metadata !DIExpression()), !dbg !3641
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !3642, metadata !DIExpression()), !dbg !3643
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3644, metadata !DIExpression()), !dbg !3645
  %5 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !3646
  %vertexCos = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %5, i32 0, i32 2, !dbg !3648
  %6 = load [3 x float]*, [3 x float]** %vertexCos, align 8, !dbg !3648
  %tobool = icmp ne [3 x float]* %6, null, !dbg !3646
  br i1 %tobool, label %if.then, label %if.else14, !dbg !3649

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata [3 x float]** %vertexCos2, metadata !3650, metadata !DIExpression()), !dbg !3652
  %7 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !3653
  %vertexCos3 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %7, i32 0, i32 2, !dbg !3654
  %8 = load [3 x float]*, [3 x float]** %vertexCos3, align 8, !dbg !3654
  store [3 x float]* %8, [3 x float]** %vertexCos2, align 8, !dbg !3652
  call void @llvm.dbg.declare(metadata [3 x float]** %vertexNos, metadata !3655, metadata !DIExpression()), !dbg !3656
  %9 = load i32, i32* %flag.addr, align 4, !dbg !3657
  %and = and i32 %9, 1, !dbg !3659
  %tobool4 = icmp ne i32 %and, 0, !dbg !3659
  br i1 %tobool4, label %if.then5, label %if.else, !dbg !3660

if.then5:                                         ; preds = %if.then
  %10 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !3661
  call void @emDM_ensureVertNormals(%struct.EditDerivedBMesh* %10), !dbg !3663
  %11 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !3664
  %vertexNos6 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %11, i32 0, i32 3, !dbg !3665
  %12 = load [3 x float]*, [3 x float]** %vertexNos6, align 8, !dbg !3665
  store [3 x float]* %12, [3 x float]** %vertexNos, align 8, !dbg !3666
  br label %if.end, !dbg !3667

if.else:                                          ; preds = %if.then
  store [3 x float]* null, [3 x float]** %vertexNos, align 8, !dbg !3668
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then5
  %13 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !3670
  %call = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %13, i8 zeroext 1, i8* null), !dbg !3670
  %14 = bitcast i8* %call to %struct.BMVert*, !dbg !3670
  store %struct.BMVert* %14, %struct.BMVert** %eve, align 8, !dbg !3670
  store i32 0, i32* %i, align 4, !dbg !3670
  br label %for.cond, !dbg !3670

for.cond:                                         ; preds = %for.inc, %if.end
  %15 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !3672
  %tobool7 = icmp ne %struct.BMVert* %15, null, !dbg !3670
  br i1 %tobool7, label %for.body, label %for.end, !dbg !3670

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata float** %no, metadata !3674, metadata !DIExpression()), !dbg !3676
  %16 = load i32, i32* %flag.addr, align 4, !dbg !3677
  %and8 = and i32 %16, 1, !dbg !3678
  %tobool9 = icmp ne i32 %and8, 0, !dbg !3678
  br i1 %tobool9, label %cond.true, label %cond.false, !dbg !3679

cond.true:                                        ; preds = %for.body
  %17 = load [3 x float]*, [3 x float]** %vertexNos, align 8, !dbg !3680
  %18 = load i32, i32* %i, align 4, !dbg !3681
  %idxprom = sext i32 %18 to i64, !dbg !3680
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %17, i64 %idxprom, !dbg !3680
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !3680
  br label %cond.end, !dbg !3679

cond.false:                                       ; preds = %for.body
  br label %cond.end, !dbg !3679

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float* [ %arraydecay, %cond.true ], [ null, %cond.false ], !dbg !3679
  store float* %cond, float** %no, align 8, !dbg !3676
  %19 = load void (i8*, i32, float*, float*, i16*)*, void (i8*, i32, float*, float*, i16*)** %func.addr, align 8, !dbg !3682
  %20 = load i8*, i8** %userData.addr, align 8, !dbg !3683
  %21 = load i32, i32* %i, align 4, !dbg !3684
  %22 = load [3 x float]*, [3 x float]** %vertexCos2, align 8, !dbg !3685
  %23 = load i32, i32* %i, align 4, !dbg !3686
  %idxprom10 = sext i32 %23 to i64, !dbg !3685
  %arrayidx11 = getelementptr inbounds [3 x float], [3 x float]* %22, i64 %idxprom10, !dbg !3685
  %arraydecay12 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx11, i64 0, i64 0, !dbg !3685
  %24 = load float*, float** %no, align 8, !dbg !3687
  call void %19(i8* %20, i32 %21, float* %arraydecay12, float* %24, i16* null), !dbg !3682
  br label %for.inc, !dbg !3688

for.inc:                                          ; preds = %cond.end
  %call13 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !3672
  %25 = bitcast i8* %call13 to %struct.BMVert*, !dbg !3672
  store %struct.BMVert* %25, %struct.BMVert** %eve, align 8, !dbg !3672
  %26 = load i32, i32* %i, align 4, !dbg !3672
  %inc = add nsw i32 %26, 1, !dbg !3672
  store i32 %inc, i32* %i, align 4, !dbg !3672
  br label %for.cond, !dbg !3672, !llvm.loop !3689

for.end:                                          ; preds = %for.cond
  br label %if.end33, !dbg !3691

if.else14:                                        ; preds = %entry
  %27 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !3692
  %call15 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %27, i8 zeroext 1, i8* null), !dbg !3692
  %28 = bitcast i8* %call15 to %struct.BMVert*, !dbg !3692
  store %struct.BMVert* %28, %struct.BMVert** %eve, align 8, !dbg !3692
  store i32 0, i32* %i, align 4, !dbg !3692
  br label %for.cond16, !dbg !3692

for.cond16:                                       ; preds = %for.inc29, %if.else14
  %29 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !3695
  %tobool17 = icmp ne %struct.BMVert* %29, null, !dbg !3692
  br i1 %tobool17, label %for.body18, label %for.end32, !dbg !3692

for.body18:                                       ; preds = %for.cond16
  call void @llvm.dbg.declare(metadata float** %no19, metadata !3697, metadata !DIExpression()), !dbg !3699
  %30 = load i32, i32* %flag.addr, align 4, !dbg !3700
  %and20 = and i32 %30, 1, !dbg !3701
  %tobool21 = icmp ne i32 %and20, 0, !dbg !3701
  br i1 %tobool21, label %cond.true22, label %cond.false25, !dbg !3702

cond.true22:                                      ; preds = %for.body18
  %31 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !3703
  %no23 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %31, i32 0, i32 3, !dbg !3704
  %arraydecay24 = getelementptr inbounds [3 x float], [3 x float]* %no23, i64 0, i64 0, !dbg !3703
  br label %cond.end26, !dbg !3702

cond.false25:                                     ; preds = %for.body18
  br label %cond.end26, !dbg !3702

cond.end26:                                       ; preds = %cond.false25, %cond.true22
  %cond27 = phi float* [ %arraydecay24, %cond.true22 ], [ null, %cond.false25 ], !dbg !3702
  store float* %cond27, float** %no19, align 8, !dbg !3699
  %32 = load void (i8*, i32, float*, float*, i16*)*, void (i8*, i32, float*, float*, i16*)** %func.addr, align 8, !dbg !3705
  %33 = load i8*, i8** %userData.addr, align 8, !dbg !3706
  %34 = load i32, i32* %i, align 4, !dbg !3707
  %35 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !3708
  %co = getelementptr inbounds %struct.BMVert, %struct.BMVert* %35, i32 0, i32 2, !dbg !3709
  %arraydecay28 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !3708
  %36 = load float*, float** %no19, align 8, !dbg !3710
  call void %32(i8* %33, i32 %34, float* %arraydecay28, float* %36, i16* null), !dbg !3705
  br label %for.inc29, !dbg !3711

for.inc29:                                        ; preds = %cond.end26
  %call30 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !3695
  %37 = bitcast i8* %call30 to %struct.BMVert*, !dbg !3695
  store %struct.BMVert* %37, %struct.BMVert** %eve, align 8, !dbg !3695
  %38 = load i32, i32* %i, align 4, !dbg !3695
  %inc31 = add nsw i32 %38, 1, !dbg !3695
  store i32 %inc31, i32* %i, align 4, !dbg !3695
  br label %for.cond16, !dbg !3695, !llvm.loop !3712

for.end32:                                        ; preds = %for.cond16
  br label %if.end33

if.end33:                                         ; preds = %for.end32, %for.end
  ret void, !dbg !3714
}

; Function Attrs: noinline nounwind uwtable
define internal void @emDM_foreachMappedLoop(%struct.DerivedMesh* %dm, void (i8*, i32, i32, float*, float*)* %func, i8* %userData, i32 %flag) #0 !dbg !3715 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %func.addr = alloca void (i8*, i32, i32, float*, float*)*, align 8
  %userData.addr = alloca i8*, align 8
  %flag.addr = alloca i32, align 4
  %lnors = alloca [3 x float]*, align 8
  %bmdm = alloca %struct.EditDerivedBMesh*, align 8
  %bm = alloca %struct.BMesh*, align 8
  %efa = alloca %struct.BMFace*, align 8
  %iter = alloca %struct.BMIter, align 8
  %vertexCos = alloca [3 x float]*, align 8
  %f_idx = alloca i32, align 4
  %l_iter = alloca %struct.BMLoop*, align 8
  %l_first = alloca %struct.BMLoop*, align 8
  %eve = alloca %struct.BMVert*, align 8
  %v_idx = alloca i32, align 4
  %no = alloca float*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !3716, metadata !DIExpression()), !dbg !3717
  store void (i8*, i32, i32, float*, float*)* %func, void (i8*, i32, i32, float*, float*)** %func.addr, align 8
  call void @llvm.dbg.declare(metadata void (i8*, i32, i32, float*, float*)** %func.addr, metadata !3718, metadata !DIExpression()), !dbg !3719
  store i8* %userData, i8** %userData.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userData.addr, metadata !3720, metadata !DIExpression()), !dbg !3721
  store i32 %flag, i32* %flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !3722, metadata !DIExpression()), !dbg !3723
  call void @llvm.dbg.declare(metadata [3 x float]** %lnors, metadata !3724, metadata !DIExpression()), !dbg !3725
  %0 = load i32, i32* %flag.addr, align 4, !dbg !3726
  %and = and i32 %0, 1, !dbg !3727
  %tobool = icmp ne i32 %and, 0, !dbg !3727
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !3728

cond.true:                                        ; preds = %entry
  %1 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3729
  %call = call i8* @DM_get_loop_data_layer(%struct.DerivedMesh* %1, i32 8), !dbg !3730
  br label %cond.end, !dbg !3728

cond.false:                                       ; preds = %entry
  br label %cond.end, !dbg !3728

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i8* [ %call, %cond.true ], [ null, %cond.false ], !dbg !3728
  %2 = bitcast i8* %cond to [3 x float]*, !dbg !3728
  store [3 x float]* %2, [3 x float]** %lnors, align 8, !dbg !3725
  call void @llvm.dbg.declare(metadata %struct.EditDerivedBMesh** %bmdm, metadata !3731, metadata !DIExpression()), !dbg !3732
  %3 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3733
  %4 = bitcast %struct.DerivedMesh* %3 to %struct.EditDerivedBMesh*, !dbg !3734
  store %struct.EditDerivedBMesh* %4, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !3732
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm, metadata !3735, metadata !DIExpression()), !dbg !3736
  %5 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !3737
  %em = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %5, i32 0, i32 1, !dbg !3738
  %6 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !3738
  %bm1 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %6, i32 0, i32 0, !dbg !3739
  %7 = load %struct.BMesh*, %struct.BMesh** %bm1, align 8, !dbg !3739
  store %struct.BMesh* %7, %struct.BMesh** %bm, align 8, !dbg !3736
  call void @llvm.dbg.declare(metadata %struct.BMFace** %efa, metadata !3740, metadata !DIExpression()), !dbg !3741
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !3742, metadata !DIExpression()), !dbg !3743
  call void @llvm.dbg.declare(metadata [3 x float]** %vertexCos, metadata !3744, metadata !DIExpression()), !dbg !3745
  %8 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !3746
  %vertexCos2 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %8, i32 0, i32 2, !dbg !3747
  %9 = load [3 x float]*, [3 x float]** %vertexCos2, align 8, !dbg !3747
  store [3 x float]* %9, [3 x float]** %vertexCos, align 8, !dbg !3745
  call void @llvm.dbg.declare(metadata i32* %f_idx, metadata !3748, metadata !DIExpression()), !dbg !3749
  %10 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !3750
  call void @BM_mesh_elem_index_ensure(%struct.BMesh* %10, i8 zeroext 1), !dbg !3751
  %11 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !3752
  %call3 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %11, i8 zeroext 3, i8* null), !dbg !3752
  %12 = bitcast i8* %call3 to %struct.BMFace*, !dbg !3752
  store %struct.BMFace* %12, %struct.BMFace** %efa, align 8, !dbg !3752
  store i32 0, i32* %f_idx, align 4, !dbg !3752
  br label %for.cond, !dbg !3752

for.cond:                                         ; preds = %for.inc, %cond.end
  %13 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !3754
  %tobool4 = icmp ne %struct.BMFace* %13, null, !dbg !3752
  br i1 %tobool4, label %for.body, label %for.end, !dbg !3752

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l_iter, metadata !3756, metadata !DIExpression()), !dbg !3758
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l_first, metadata !3759, metadata !DIExpression()), !dbg !3760
  %14 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !3761
  %l_first5 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %14, i32 0, i32 2, !dbg !3761
  %15 = load %struct.BMLoop*, %struct.BMLoop** %l_first5, align 8, !dbg !3761
  store %struct.BMLoop* %15, %struct.BMLoop** %l_first, align 8, !dbg !3762
  store %struct.BMLoop* %15, %struct.BMLoop** %l_iter, align 8, !dbg !3763
  br label %do.body, !dbg !3764

do.body:                                          ; preds = %do.cond, %for.body
  call void @llvm.dbg.declare(metadata %struct.BMVert** %eve, metadata !3765, metadata !DIExpression()), !dbg !3769
  %16 = load %struct.BMLoop*, %struct.BMLoop** %l_iter, align 8, !dbg !3770
  %v = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %16, i32 0, i32 1, !dbg !3771
  %17 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !3771
  store %struct.BMVert* %17, %struct.BMVert** %eve, align 8, !dbg !3769
  call void @llvm.dbg.declare(metadata i32* %v_idx, metadata !3772, metadata !DIExpression()), !dbg !3773
  %18 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !3774
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %18, i32 0, i32 0, !dbg !3774
  %call6 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head), !dbg !3774
  store i32 %call6, i32* %v_idx, align 4, !dbg !3773
  call void @llvm.dbg.declare(metadata float** %no, metadata !3775, metadata !DIExpression()), !dbg !3776
  %19 = load [3 x float]*, [3 x float]** %lnors, align 8, !dbg !3777
  %tobool7 = icmp ne [3 x float]* %19, null, !dbg !3777
  br i1 %tobool7, label %cond.true8, label %cond.false9, !dbg !3777

cond.true8:                                       ; preds = %do.body
  %20 = load [3 x float]*, [3 x float]** %lnors, align 8, !dbg !3778
  %incdec.ptr = getelementptr inbounds [3 x float], [3 x float]* %20, i32 1, !dbg !3778
  store [3 x float]* %incdec.ptr, [3 x float]** %lnors, align 8, !dbg !3778
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %20, i64 0, i64 0, !dbg !3779
  br label %cond.end10, !dbg !3777

cond.false9:                                      ; preds = %do.body
  br label %cond.end10, !dbg !3777

cond.end10:                                       ; preds = %cond.false9, %cond.true8
  %cond11 = phi float* [ %arraydecay, %cond.true8 ], [ null, %cond.false9 ], !dbg !3777
  store float* %cond11, float** %no, align 8, !dbg !3776
  %21 = load void (i8*, i32, i32, float*, float*)*, void (i8*, i32, i32, float*, float*)** %func.addr, align 8, !dbg !3780
  %22 = load i8*, i8** %userData.addr, align 8, !dbg !3781
  %23 = load i32, i32* %v_idx, align 4, !dbg !3782
  %24 = load i32, i32* %f_idx, align 4, !dbg !3783
  %25 = load [3 x float]*, [3 x float]** %vertexCos, align 8, !dbg !3784
  %tobool12 = icmp ne [3 x float]* %25, null, !dbg !3784
  br i1 %tobool12, label %cond.true13, label %cond.false15, !dbg !3784

cond.true13:                                      ; preds = %cond.end10
  %26 = load [3 x float]*, [3 x float]** %vertexCos, align 8, !dbg !3785
  %27 = load i32, i32* %v_idx, align 4, !dbg !3786
  %idxprom = sext i32 %27 to i64, !dbg !3785
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %26, i64 %idxprom, !dbg !3785
  %arraydecay14 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !3785
  br label %cond.end17, !dbg !3784

cond.false15:                                     ; preds = %cond.end10
  %28 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !3787
  %co = getelementptr inbounds %struct.BMVert, %struct.BMVert* %28, i32 0, i32 2, !dbg !3788
  %arraydecay16 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !3787
  br label %cond.end17, !dbg !3784

cond.end17:                                       ; preds = %cond.false15, %cond.true13
  %cond18 = phi float* [ %arraydecay14, %cond.true13 ], [ %arraydecay16, %cond.false15 ], !dbg !3784
  %29 = load float*, float** %no, align 8, !dbg !3789
  call void %21(i8* %22, i32 %23, i32 %24, float* %cond18, float* %29), !dbg !3780
  br label %do.cond, !dbg !3790

do.cond:                                          ; preds = %cond.end17
  %30 = load %struct.BMLoop*, %struct.BMLoop** %l_iter, align 8, !dbg !3791
  %next = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %30, i32 0, i32 6, !dbg !3792
  %31 = load %struct.BMLoop*, %struct.BMLoop** %next, align 8, !dbg !3792
  store %struct.BMLoop* %31, %struct.BMLoop** %l_iter, align 8, !dbg !3793
  %32 = load %struct.BMLoop*, %struct.BMLoop** %l_first, align 8, !dbg !3794
  %cmp = icmp ne %struct.BMLoop* %31, %32, !dbg !3795
  br i1 %cmp, label %do.body, label %do.end, !dbg !3790, !llvm.loop !3796

do.end:                                           ; preds = %do.cond
  br label %for.inc, !dbg !3798

for.inc:                                          ; preds = %do.end
  %call19 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !3754
  %33 = bitcast i8* %call19 to %struct.BMFace*, !dbg !3754
  store %struct.BMFace* %33, %struct.BMFace** %efa, align 8, !dbg !3754
  %34 = load i32, i32* %f_idx, align 4, !dbg !3754
  %inc = add nsw i32 %34, 1, !dbg !3754
  store i32 %inc, i32* %f_idx, align 4, !dbg !3754
  br label %for.cond, !dbg !3754, !llvm.loop !3799

for.end:                                          ; preds = %for.cond
  ret void, !dbg !3801
}

; Function Attrs: noinline nounwind uwtable
define internal void @emDM_foreachMappedEdge(%struct.DerivedMesh* %dm, void (i8*, i32, float*, float*)* %func, i8* %userData) #0 !dbg !3802 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %func.addr = alloca void (i8*, i32, float*, float*)*, align 8
  %userData.addr = alloca i8*, align 8
  %bmdm = alloca %struct.EditDerivedBMesh*, align 8
  %bm = alloca %struct.BMesh*, align 8
  %eed = alloca %struct.BMEdge*, align 8
  %iter = alloca %struct.BMIter, align 8
  %i = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !3803, metadata !DIExpression()), !dbg !3804
  store void (i8*, i32, float*, float*)* %func, void (i8*, i32, float*, float*)** %func.addr, align 8
  call void @llvm.dbg.declare(metadata void (i8*, i32, float*, float*)** %func.addr, metadata !3805, metadata !DIExpression()), !dbg !3806
  store i8* %userData, i8** %userData.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userData.addr, metadata !3807, metadata !DIExpression()), !dbg !3808
  call void @llvm.dbg.declare(metadata %struct.EditDerivedBMesh** %bmdm, metadata !3809, metadata !DIExpression()), !dbg !3810
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3811
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.EditDerivedBMesh*, !dbg !3812
  store %struct.EditDerivedBMesh* %1, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !3810
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm, metadata !3813, metadata !DIExpression()), !dbg !3814
  %2 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !3815
  %em = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %2, i32 0, i32 1, !dbg !3816
  %3 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !3816
  %bm1 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %3, i32 0, i32 0, !dbg !3817
  %4 = load %struct.BMesh*, %struct.BMesh** %bm1, align 8, !dbg !3817
  store %struct.BMesh* %4, %struct.BMesh** %bm, align 8, !dbg !3814
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %eed, metadata !3818, metadata !DIExpression()), !dbg !3819
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !3820, metadata !DIExpression()), !dbg !3821
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3822, metadata !DIExpression()), !dbg !3823
  %5 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !3824
  %vertexCos = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %5, i32 0, i32 2, !dbg !3826
  %6 = load [3 x float]*, [3 x float]** %vertexCos, align 8, !dbg !3826
  %tobool = icmp ne [3 x float]* %6, null, !dbg !3824
  br i1 %tobool, label %if.then, label %if.else, !dbg !3827

if.then:                                          ; preds = %entry
  %7 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !3828
  call void @BM_mesh_elem_index_ensure(%struct.BMesh* %7, i8 zeroext 1), !dbg !3830
  %8 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !3831
  %call = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %8, i8 zeroext 2, i8* null), !dbg !3831
  %9 = bitcast i8* %call to %struct.BMEdge*, !dbg !3831
  store %struct.BMEdge* %9, %struct.BMEdge** %eed, align 8, !dbg !3831
  store i32 0, i32* %i, align 4, !dbg !3831
  br label %for.cond, !dbg !3831

for.cond:                                         ; preds = %for.inc, %if.then
  %10 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !3833
  %tobool2 = icmp ne %struct.BMEdge* %10, null, !dbg !3831
  br i1 %tobool2, label %for.body, label %for.end, !dbg !3831

for.body:                                         ; preds = %for.cond
  %11 = load void (i8*, i32, float*, float*)*, void (i8*, i32, float*, float*)** %func.addr, align 8, !dbg !3835
  %12 = load i8*, i8** %userData.addr, align 8, !dbg !3837
  %13 = load i32, i32* %i, align 4, !dbg !3838
  %14 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !3839
  %vertexCos3 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %14, i32 0, i32 2, !dbg !3840
  %15 = load [3 x float]*, [3 x float]** %vertexCos3, align 8, !dbg !3840
  %16 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !3841
  %v1 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %16, i32 0, i32 2, !dbg !3841
  %17 = load %struct.BMVert*, %struct.BMVert** %v1, align 8, !dbg !3841
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %17, i32 0, i32 0, !dbg !3841
  %call4 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head), !dbg !3841
  %idxprom = sext i32 %call4 to i64, !dbg !3839
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %15, i64 %idxprom, !dbg !3839
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !3839
  %18 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !3842
  %vertexCos5 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %18, i32 0, i32 2, !dbg !3843
  %19 = load [3 x float]*, [3 x float]** %vertexCos5, align 8, !dbg !3843
  %20 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !3844
  %v2 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %20, i32 0, i32 3, !dbg !3844
  %21 = load %struct.BMVert*, %struct.BMVert** %v2, align 8, !dbg !3844
  %head6 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %21, i32 0, i32 0, !dbg !3844
  %call7 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head6), !dbg !3844
  %idxprom8 = sext i32 %call7 to i64, !dbg !3842
  %arrayidx9 = getelementptr inbounds [3 x float], [3 x float]* %19, i64 %idxprom8, !dbg !3842
  %arraydecay10 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx9, i64 0, i64 0, !dbg !3842
  call void %11(i8* %12, i32 %13, float* %arraydecay, float* %arraydecay10), !dbg !3835
  br label %for.inc, !dbg !3845

for.inc:                                          ; preds = %for.body
  %call11 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !3833
  %22 = bitcast i8* %call11 to %struct.BMEdge*, !dbg !3833
  store %struct.BMEdge* %22, %struct.BMEdge** %eed, align 8, !dbg !3833
  %23 = load i32, i32* %i, align 4, !dbg !3833
  %inc = add nsw i32 %23, 1, !dbg !3833
  store i32 %inc, i32* %i, align 4, !dbg !3833
  br label %for.cond, !dbg !3833, !llvm.loop !3846

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !3848

if.else:                                          ; preds = %entry
  %24 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !3849
  %call12 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %24, i8 zeroext 2, i8* null), !dbg !3849
  %25 = bitcast i8* %call12 to %struct.BMEdge*, !dbg !3849
  store %struct.BMEdge* %25, %struct.BMEdge** %eed, align 8, !dbg !3849
  store i32 0, i32* %i, align 4, !dbg !3849
  br label %for.cond13, !dbg !3849

for.cond13:                                       ; preds = %for.inc21, %if.else
  %26 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !3852
  %tobool14 = icmp ne %struct.BMEdge* %26, null, !dbg !3849
  br i1 %tobool14, label %for.body15, label %for.end24, !dbg !3849

for.body15:                                       ; preds = %for.cond13
  %27 = load void (i8*, i32, float*, float*)*, void (i8*, i32, float*, float*)** %func.addr, align 8, !dbg !3854
  %28 = load i8*, i8** %userData.addr, align 8, !dbg !3856
  %29 = load i32, i32* %i, align 4, !dbg !3857
  %30 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !3858
  %v116 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %30, i32 0, i32 2, !dbg !3859
  %31 = load %struct.BMVert*, %struct.BMVert** %v116, align 8, !dbg !3859
  %co = getelementptr inbounds %struct.BMVert, %struct.BMVert* %31, i32 0, i32 2, !dbg !3860
  %arraydecay17 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !3858
  %32 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !3861
  %v218 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %32, i32 0, i32 3, !dbg !3862
  %33 = load %struct.BMVert*, %struct.BMVert** %v218, align 8, !dbg !3862
  %co19 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %33, i32 0, i32 2, !dbg !3863
  %arraydecay20 = getelementptr inbounds [3 x float], [3 x float]* %co19, i64 0, i64 0, !dbg !3861
  call void %27(i8* %28, i32 %29, float* %arraydecay17, float* %arraydecay20), !dbg !3854
  br label %for.inc21, !dbg !3864

for.inc21:                                        ; preds = %for.body15
  %call22 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !3852
  %34 = bitcast i8* %call22 to %struct.BMEdge*, !dbg !3852
  store %struct.BMEdge* %34, %struct.BMEdge** %eed, align 8, !dbg !3852
  %35 = load i32, i32* %i, align 4, !dbg !3852
  %inc23 = add nsw i32 %35, 1, !dbg !3852
  store i32 %inc23, i32* %i, align 4, !dbg !3852
  br label %for.cond13, !dbg !3852, !llvm.loop !3865

for.end24:                                        ; preds = %for.cond13
  br label %if.end

if.end:                                           ; preds = %for.end24, %for.end
  ret void, !dbg !3867
}

; Function Attrs: noinline nounwind uwtable
define internal void @emDM_foreachMappedFaceCenter(%struct.DerivedMesh* %dm, void (i8*, i32, float*, float*)* %func, i8* %userData, i32 %flag) #0 !dbg !3868 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %func.addr = alloca void (i8*, i32, float*, float*)*, align 8
  %userData.addr = alloca i8*, align 8
  %flag.addr = alloca i32, align 4
  %bmdm = alloca %struct.EditDerivedBMesh*, align 8
  %bm = alloca %struct.BMesh*, align 8
  %polyNos = alloca [3 x float]*, align 8
  %polyCos = alloca [3 x float]*, align 8
  %efa = alloca %struct.BMFace*, align 8
  %iter = alloca %struct.BMIter, align 8
  %i = alloca i32, align 4
  %no = alloca float*, align 8
  %no16 = alloca float*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !3869, metadata !DIExpression()), !dbg !3870
  store void (i8*, i32, float*, float*)* %func, void (i8*, i32, float*, float*)** %func.addr, align 8
  call void @llvm.dbg.declare(metadata void (i8*, i32, float*, float*)** %func.addr, metadata !3871, metadata !DIExpression()), !dbg !3872
  store i8* %userData, i8** %userData.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userData.addr, metadata !3873, metadata !DIExpression()), !dbg !3874
  store i32 %flag, i32* %flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !3875, metadata !DIExpression()), !dbg !3876
  call void @llvm.dbg.declare(metadata %struct.EditDerivedBMesh** %bmdm, metadata !3877, metadata !DIExpression()), !dbg !3878
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3879
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.EditDerivedBMesh*, !dbg !3880
  store %struct.EditDerivedBMesh* %1, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !3878
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm, metadata !3881, metadata !DIExpression()), !dbg !3882
  %2 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !3883
  %em = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %2, i32 0, i32 1, !dbg !3884
  %3 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !3884
  %bm1 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %3, i32 0, i32 0, !dbg !3885
  %4 = load %struct.BMesh*, %struct.BMesh** %bm1, align 8, !dbg !3885
  store %struct.BMesh* %4, %struct.BMesh** %bm, align 8, !dbg !3882
  call void @llvm.dbg.declare(metadata [3 x float]** %polyNos, metadata !3886, metadata !DIExpression()), !dbg !3887
  call void @llvm.dbg.declare(metadata [3 x float]** %polyCos, metadata !3888, metadata !DIExpression()), !dbg !3889
  call void @llvm.dbg.declare(metadata %struct.BMFace** %efa, metadata !3890, metadata !DIExpression()), !dbg !3891
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !3892, metadata !DIExpression()), !dbg !3893
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3894, metadata !DIExpression()), !dbg !3895
  %5 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !3896
  call void @emDM_ensurePolyCenters(%struct.EditDerivedBMesh* %5), !dbg !3897
  %6 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !3898
  %polyCos2 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %6, i32 0, i32 5, !dbg !3899
  %7 = load [3 x float]*, [3 x float]** %polyCos2, align 8, !dbg !3899
  store [3 x float]* %7, [3 x float]** %polyCos, align 8, !dbg !3900
  %8 = load i32, i32* %flag.addr, align 4, !dbg !3901
  %and = and i32 %8, 1, !dbg !3903
  %tobool = icmp ne i32 %and, 0, !dbg !3903
  br i1 %tobool, label %if.then, label %if.else, !dbg !3904

if.then:                                          ; preds = %entry
  %9 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !3905
  call void @emDM_ensurePolyNormals(%struct.EditDerivedBMesh* %9), !dbg !3907
  %10 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !3908
  %polyNos3 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %10, i32 0, i32 4, !dbg !3909
  %11 = load [3 x float]*, [3 x float]** %polyNos3, align 8, !dbg !3909
  store [3 x float]* %11, [3 x float]** %polyNos, align 8, !dbg !3910
  br label %if.end, !dbg !3911

if.else:                                          ; preds = %entry
  store [3 x float]* null, [3 x float]** %polyNos, align 8, !dbg !3912
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %12 = load [3 x float]*, [3 x float]** %polyNos, align 8, !dbg !3914
  %tobool4 = icmp ne [3 x float]* %12, null, !dbg !3914
  br i1 %tobool4, label %if.then5, label %if.else11, !dbg !3916

if.then5:                                         ; preds = %if.end
  %13 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !3917
  %call = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %13, i8 zeroext 3, i8* null), !dbg !3917
  %14 = bitcast i8* %call to %struct.BMFace*, !dbg !3917
  store %struct.BMFace* %14, %struct.BMFace** %efa, align 8, !dbg !3917
  store i32 0, i32* %i, align 4, !dbg !3917
  br label %for.cond, !dbg !3917

for.cond:                                         ; preds = %for.inc, %if.then5
  %15 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !3920
  %tobool6 = icmp ne %struct.BMFace* %15, null, !dbg !3917
  br i1 %tobool6, label %for.body, label %for.end, !dbg !3917

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata float** %no, metadata !3922, metadata !DIExpression()), !dbg !3924
  %16 = load [3 x float]*, [3 x float]** %polyNos, align 8, !dbg !3925
  %17 = load i32, i32* %i, align 4, !dbg !3926
  %idxprom = sext i32 %17 to i64, !dbg !3925
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %16, i64 %idxprom, !dbg !3925
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !3925
  store float* %arraydecay, float** %no, align 8, !dbg !3924
  %18 = load void (i8*, i32, float*, float*)*, void (i8*, i32, float*, float*)** %func.addr, align 8, !dbg !3927
  %19 = load i8*, i8** %userData.addr, align 8, !dbg !3928
  %20 = load i32, i32* %i, align 4, !dbg !3929
  %21 = load [3 x float]*, [3 x float]** %polyCos, align 8, !dbg !3930
  %22 = load i32, i32* %i, align 4, !dbg !3931
  %idxprom7 = sext i32 %22 to i64, !dbg !3930
  %arrayidx8 = getelementptr inbounds [3 x float], [3 x float]* %21, i64 %idxprom7, !dbg !3930
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx8, i64 0, i64 0, !dbg !3930
  %23 = load float*, float** %no, align 8, !dbg !3932
  call void %18(i8* %19, i32 %20, float* %arraydecay9, float* %23), !dbg !3927
  br label %for.inc, !dbg !3933

for.inc:                                          ; preds = %for.body
  %call10 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !3920
  %24 = bitcast i8* %call10 to %struct.BMFace*, !dbg !3920
  store %struct.BMFace* %24, %struct.BMFace** %efa, align 8, !dbg !3920
  %25 = load i32, i32* %i, align 4, !dbg !3920
  %inc = add nsw i32 %25, 1, !dbg !3920
  store i32 %inc, i32* %i, align 4, !dbg !3920
  br label %for.cond, !dbg !3920, !llvm.loop !3934

for.end:                                          ; preds = %for.cond
  br label %if.end28, !dbg !3936

if.else11:                                        ; preds = %if.end
  %26 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !3937
  %call12 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %26, i8 zeroext 3, i8* null), !dbg !3937
  %27 = bitcast i8* %call12 to %struct.BMFace*, !dbg !3937
  store %struct.BMFace* %27, %struct.BMFace** %efa, align 8, !dbg !3937
  store i32 0, i32* %i, align 4, !dbg !3937
  br label %for.cond13, !dbg !3937

for.cond13:                                       ; preds = %for.inc24, %if.else11
  %28 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !3940
  %tobool14 = icmp ne %struct.BMFace* %28, null, !dbg !3937
  br i1 %tobool14, label %for.body15, label %for.end27, !dbg !3937

for.body15:                                       ; preds = %for.cond13
  call void @llvm.dbg.declare(metadata float** %no16, metadata !3942, metadata !DIExpression()), !dbg !3944
  %29 = load i32, i32* %flag.addr, align 4, !dbg !3945
  %and17 = and i32 %29, 1, !dbg !3946
  %tobool18 = icmp ne i32 %and17, 0, !dbg !3946
  br i1 %tobool18, label %cond.true, label %cond.false, !dbg !3947

cond.true:                                        ; preds = %for.body15
  %30 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !3948
  %no19 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %30, i32 0, i32 4, !dbg !3949
  %arraydecay20 = getelementptr inbounds [3 x float], [3 x float]* %no19, i64 0, i64 0, !dbg !3948
  br label %cond.end, !dbg !3947

cond.false:                                       ; preds = %for.body15
  br label %cond.end, !dbg !3947

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float* [ %arraydecay20, %cond.true ], [ null, %cond.false ], !dbg !3947
  store float* %cond, float** %no16, align 8, !dbg !3944
  %31 = load void (i8*, i32, float*, float*)*, void (i8*, i32, float*, float*)** %func.addr, align 8, !dbg !3950
  %32 = load i8*, i8** %userData.addr, align 8, !dbg !3951
  %33 = load i32, i32* %i, align 4, !dbg !3952
  %34 = load [3 x float]*, [3 x float]** %polyCos, align 8, !dbg !3953
  %35 = load i32, i32* %i, align 4, !dbg !3954
  %idxprom21 = sext i32 %35 to i64, !dbg !3953
  %arrayidx22 = getelementptr inbounds [3 x float], [3 x float]* %34, i64 %idxprom21, !dbg !3953
  %arraydecay23 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx22, i64 0, i64 0, !dbg !3953
  %36 = load float*, float** %no16, align 8, !dbg !3955
  call void %31(i8* %32, i32 %33, float* %arraydecay23, float* %36), !dbg !3950
  br label %for.inc24, !dbg !3956

for.inc24:                                        ; preds = %cond.end
  %call25 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !3940
  %37 = bitcast i8* %call25 to %struct.BMFace*, !dbg !3940
  store %struct.BMFace* %37, %struct.BMFace** %efa, align 8, !dbg !3940
  %38 = load i32, i32* %i, align 4, !dbg !3940
  %inc26 = add nsw i32 %38, 1, !dbg !3940
  store i32 %inc26, i32* %i, align 4, !dbg !3940
  br label %for.cond13, !dbg !3940, !llvm.loop !3957

for.end27:                                        ; preds = %for.cond13
  br label %if.end28

if.end28:                                         ; preds = %for.end27, %for.end
  ret void, !dbg !3959
}

; Function Attrs: noinline nounwind uwtable
define internal void @emDM_drawEdges(%struct.DerivedMesh* %dm, i8 zeroext %UNUSED_drawLooseEdges, i8 zeroext %UNUSED_drawAllEdges) #0 !dbg !3960 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %UNUSED_drawLooseEdges.addr = alloca i8, align 1
  %UNUSED_drawAllEdges.addr = alloca i8, align 1
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !3961, metadata !DIExpression()), !dbg !3962
  store i8 %UNUSED_drawLooseEdges, i8* %UNUSED_drawLooseEdges.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %UNUSED_drawLooseEdges.addr, metadata !3963, metadata !DIExpression()), !dbg !3964
  store i8 %UNUSED_drawAllEdges, i8* %UNUSED_drawAllEdges.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %UNUSED_drawAllEdges.addr, metadata !3965, metadata !DIExpression()), !dbg !3966
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3967
  call void @emDM_drawMappedEdges(%struct.DerivedMesh* %0, i32 (i8*, i32)* null, i8* null), !dbg !3968
  ret void, !dbg !3969
}

; Function Attrs: noinline nounwind uwtable
define internal void @emDM_drawMappedEdges(%struct.DerivedMesh* %dm, i32 (i8*, i32)* %setDrawOptions, i8* %userData) #0 !dbg !3970 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %setDrawOptions.addr = alloca i32 (i8*, i32)*, align 8
  %userData.addr = alloca i8*, align 8
  %bmdm = alloca %struct.EditDerivedBMesh*, align 8
  %bm = alloca %struct.BMesh*, align 8
  %eed = alloca %struct.BMEdge*, align 8
  %iter = alloca %struct.BMIter, align 8
  %i = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !3971, metadata !DIExpression()), !dbg !3972
  store i32 (i8*, i32)* %setDrawOptions, i32 (i8*, i32)** %setDrawOptions.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i32)** %setDrawOptions.addr, metadata !3973, metadata !DIExpression()), !dbg !3974
  store i8* %userData, i8** %userData.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userData.addr, metadata !3975, metadata !DIExpression()), !dbg !3976
  call void @llvm.dbg.declare(metadata %struct.EditDerivedBMesh** %bmdm, metadata !3977, metadata !DIExpression()), !dbg !3978
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !3979
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.EditDerivedBMesh*, !dbg !3980
  store %struct.EditDerivedBMesh* %1, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !3978
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm, metadata !3981, metadata !DIExpression()), !dbg !3982
  %2 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !3983
  %em = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %2, i32 0, i32 1, !dbg !3984
  %3 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !3984
  %bm1 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %3, i32 0, i32 0, !dbg !3985
  %4 = load %struct.BMesh*, %struct.BMesh** %bm1, align 8, !dbg !3985
  store %struct.BMesh* %4, %struct.BMesh** %bm, align 8, !dbg !3982
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %eed, metadata !3986, metadata !DIExpression()), !dbg !3987
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !3988, metadata !DIExpression()), !dbg !3989
  call void @llvm.dbg.declare(metadata i32* %i, metadata !3990, metadata !DIExpression()), !dbg !3991
  %5 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !3992
  %vertexCos = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %5, i32 0, i32 2, !dbg !3994
  %6 = load [3 x float]*, [3 x float]** %vertexCos, align 8, !dbg !3994
  %tobool = icmp ne [3 x float]* %6, null, !dbg !3992
  br i1 %tobool, label %if.then, label %if.else, !dbg !3995

if.then:                                          ; preds = %entry
  %7 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !3996
  call void @BM_mesh_elem_index_ensure(%struct.BMesh* %7, i8 zeroext 1), !dbg !3998
  call void @glBegin(i32 1), !dbg !3999
  %8 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !4000
  %call = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %8, i8 zeroext 2, i8* null), !dbg !4000
  %9 = bitcast i8* %call to %struct.BMEdge*, !dbg !4000
  store %struct.BMEdge* %9, %struct.BMEdge** %eed, align 8, !dbg !4000
  store i32 0, i32* %i, align 4, !dbg !4000
  br label %for.cond, !dbg !4000

for.cond:                                         ; preds = %for.inc, %if.then
  %10 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !4002
  %tobool2 = icmp ne %struct.BMEdge* %10, null, !dbg !4000
  br i1 %tobool2, label %for.body, label %for.end, !dbg !4000

for.body:                                         ; preds = %for.cond
  %11 = load i32 (i8*, i32)*, i32 (i8*, i32)** %setDrawOptions.addr, align 8, !dbg !4004
  %tobool3 = icmp ne i32 (i8*, i32)* %11, null, !dbg !4004
  br i1 %tobool3, label %lor.lhs.false, label %if.then5, !dbg !4007

lor.lhs.false:                                    ; preds = %for.body
  %12 = load i32 (i8*, i32)*, i32 (i8*, i32)** %setDrawOptions.addr, align 8, !dbg !4008
  %13 = load i8*, i8** %userData.addr, align 8, !dbg !4009
  %14 = load i32, i32* %i, align 4, !dbg !4010
  %call4 = call i32 %12(i8* %13, i32 %14), !dbg !4008
  %cmp = icmp ne i32 %call4, 0, !dbg !4011
  br i1 %cmp, label %if.then5, label %if.end, !dbg !4012

if.then5:                                         ; preds = %lor.lhs.false, %for.body
  %15 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !4013
  %vertexCos6 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %15, i32 0, i32 2, !dbg !4015
  %16 = load [3 x float]*, [3 x float]** %vertexCos6, align 8, !dbg !4015
  %17 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !4016
  %v1 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %17, i32 0, i32 2, !dbg !4016
  %18 = load %struct.BMVert*, %struct.BMVert** %v1, align 8, !dbg !4016
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %18, i32 0, i32 0, !dbg !4016
  %call7 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head), !dbg !4016
  %idxprom = sext i32 %call7 to i64, !dbg !4013
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %16, i64 %idxprom, !dbg !4013
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !4013
  call void @glVertex3fv(float* %arraydecay), !dbg !4017
  %19 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !4018
  %vertexCos8 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %19, i32 0, i32 2, !dbg !4019
  %20 = load [3 x float]*, [3 x float]** %vertexCos8, align 8, !dbg !4019
  %21 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !4020
  %v2 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %21, i32 0, i32 3, !dbg !4020
  %22 = load %struct.BMVert*, %struct.BMVert** %v2, align 8, !dbg !4020
  %head9 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %22, i32 0, i32 0, !dbg !4020
  %call10 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head9), !dbg !4020
  %idxprom11 = sext i32 %call10 to i64, !dbg !4018
  %arrayidx12 = getelementptr inbounds [3 x float], [3 x float]* %20, i64 %idxprom11, !dbg !4018
  %arraydecay13 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx12, i64 0, i64 0, !dbg !4018
  call void @glVertex3fv(float* %arraydecay13), !dbg !4021
  br label %if.end, !dbg !4022

if.end:                                           ; preds = %if.then5, %lor.lhs.false
  br label %for.inc, !dbg !4023

for.inc:                                          ; preds = %if.end
  %call14 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !4002
  %23 = bitcast i8* %call14 to %struct.BMEdge*, !dbg !4002
  store %struct.BMEdge* %23, %struct.BMEdge** %eed, align 8, !dbg !4002
  %24 = load i32, i32* %i, align 4, !dbg !4002
  %inc = add nsw i32 %24, 1, !dbg !4002
  store i32 %inc, i32* %i, align 4, !dbg !4002
  br label %for.cond, !dbg !4002, !llvm.loop !4024

for.end:                                          ; preds = %for.cond
  call void @glEnd(), !dbg !4026
  br label %if.end34, !dbg !4027

if.else:                                          ; preds = %entry
  call void @glBegin(i32 1), !dbg !4028
  %25 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !4030
  %call15 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %25, i8 zeroext 2, i8* null), !dbg !4030
  %26 = bitcast i8* %call15 to %struct.BMEdge*, !dbg !4030
  store %struct.BMEdge* %26, %struct.BMEdge** %eed, align 8, !dbg !4030
  store i32 0, i32* %i, align 4, !dbg !4030
  br label %for.cond16, !dbg !4030

for.cond16:                                       ; preds = %for.inc30, %if.else
  %27 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !4032
  %tobool17 = icmp ne %struct.BMEdge* %27, null, !dbg !4030
  br i1 %tobool17, label %for.body18, label %for.end33, !dbg !4030

for.body18:                                       ; preds = %for.cond16
  %28 = load i32 (i8*, i32)*, i32 (i8*, i32)** %setDrawOptions.addr, align 8, !dbg !4034
  %tobool19 = icmp ne i32 (i8*, i32)* %28, null, !dbg !4034
  br i1 %tobool19, label %lor.lhs.false20, label %if.then23, !dbg !4037

lor.lhs.false20:                                  ; preds = %for.body18
  %29 = load i32 (i8*, i32)*, i32 (i8*, i32)** %setDrawOptions.addr, align 8, !dbg !4038
  %30 = load i8*, i8** %userData.addr, align 8, !dbg !4039
  %31 = load i32, i32* %i, align 4, !dbg !4040
  %call21 = call i32 %29(i8* %30, i32 %31), !dbg !4038
  %cmp22 = icmp ne i32 %call21, 0, !dbg !4041
  br i1 %cmp22, label %if.then23, label %if.end29, !dbg !4042

if.then23:                                        ; preds = %lor.lhs.false20, %for.body18
  %32 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !4043
  %v124 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %32, i32 0, i32 2, !dbg !4045
  %33 = load %struct.BMVert*, %struct.BMVert** %v124, align 8, !dbg !4045
  %co = getelementptr inbounds %struct.BMVert, %struct.BMVert* %33, i32 0, i32 2, !dbg !4046
  %arraydecay25 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !4043
  call void @glVertex3fv(float* %arraydecay25), !dbg !4047
  %34 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !4048
  %v226 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %34, i32 0, i32 3, !dbg !4049
  %35 = load %struct.BMVert*, %struct.BMVert** %v226, align 8, !dbg !4049
  %co27 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %35, i32 0, i32 2, !dbg !4050
  %arraydecay28 = getelementptr inbounds [3 x float], [3 x float]* %co27, i64 0, i64 0, !dbg !4048
  call void @glVertex3fv(float* %arraydecay28), !dbg !4051
  br label %if.end29, !dbg !4052

if.end29:                                         ; preds = %if.then23, %lor.lhs.false20
  br label %for.inc30, !dbg !4053

for.inc30:                                        ; preds = %if.end29
  %call31 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !4032
  %36 = bitcast i8* %call31 to %struct.BMEdge*, !dbg !4032
  store %struct.BMEdge* %36, %struct.BMEdge** %eed, align 8, !dbg !4032
  %37 = load i32, i32* %i, align 4, !dbg !4032
  %inc32 = add nsw i32 %37, 1, !dbg !4032
  store i32 %inc32, i32* %i, align 4, !dbg !4032
  br label %for.cond16, !dbg !4032, !llvm.loop !4054

for.end33:                                        ; preds = %for.cond16
  call void @glEnd(), !dbg !4056
  br label %if.end34

if.end34:                                         ; preds = %for.end33, %for.end
  ret void, !dbg !4057
}

; Function Attrs: noinline nounwind uwtable
define internal void @emDM_drawMappedEdgesInterp(%struct.DerivedMesh* %dm, i32 (i8*, i32)* %setDrawOptions, void (i8*, i32, float)* %setDrawInterpOptions, i8* %userData) #0 !dbg !4058 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %setDrawOptions.addr = alloca i32 (i8*, i32)*, align 8
  %setDrawInterpOptions.addr = alloca void (i8*, i32, float)*, align 8
  %userData.addr = alloca i8*, align 8
  %bmdm = alloca %struct.EditDerivedBMesh*, align 8
  %bm = alloca %struct.BMesh*, align 8
  %eed = alloca %struct.BMEdge*, align 8
  %iter = alloca %struct.BMIter, align 8
  %i = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !4059, metadata !DIExpression()), !dbg !4060
  store i32 (i8*, i32)* %setDrawOptions, i32 (i8*, i32)** %setDrawOptions.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i32)** %setDrawOptions.addr, metadata !4061, metadata !DIExpression()), !dbg !4062
  store void (i8*, i32, float)* %setDrawInterpOptions, void (i8*, i32, float)** %setDrawInterpOptions.addr, align 8
  call void @llvm.dbg.declare(metadata void (i8*, i32, float)** %setDrawInterpOptions.addr, metadata !4063, metadata !DIExpression()), !dbg !4064
  store i8* %userData, i8** %userData.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userData.addr, metadata !4065, metadata !DIExpression()), !dbg !4066
  call void @llvm.dbg.declare(metadata %struct.EditDerivedBMesh** %bmdm, metadata !4067, metadata !DIExpression()), !dbg !4068
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4069
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.EditDerivedBMesh*, !dbg !4070
  store %struct.EditDerivedBMesh* %1, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !4068
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm, metadata !4071, metadata !DIExpression()), !dbg !4072
  %2 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !4073
  %em = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %2, i32 0, i32 1, !dbg !4074
  %3 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !4074
  %bm1 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %3, i32 0, i32 0, !dbg !4075
  %4 = load %struct.BMesh*, %struct.BMesh** %bm1, align 8, !dbg !4075
  store %struct.BMesh* %4, %struct.BMesh** %bm, align 8, !dbg !4072
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %eed, metadata !4076, metadata !DIExpression()), !dbg !4077
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !4078, metadata !DIExpression()), !dbg !4079
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4080, metadata !DIExpression()), !dbg !4081
  %5 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !4082
  %vertexCos = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %5, i32 0, i32 2, !dbg !4084
  %6 = load [3 x float]*, [3 x float]** %vertexCos, align 8, !dbg !4084
  %tobool = icmp ne [3 x float]* %6, null, !dbg !4082
  br i1 %tobool, label %if.then, label %if.else, !dbg !4085

if.then:                                          ; preds = %entry
  %7 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !4086
  call void @BM_mesh_elem_index_ensure(%struct.BMesh* %7, i8 zeroext 1), !dbg !4088
  call void @glBegin(i32 1), !dbg !4089
  %8 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !4090
  %call = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %8, i8 zeroext 2, i8* null), !dbg !4090
  %9 = bitcast i8* %call to %struct.BMEdge*, !dbg !4090
  store %struct.BMEdge* %9, %struct.BMEdge** %eed, align 8, !dbg !4090
  store i32 0, i32* %i, align 4, !dbg !4090
  br label %for.cond, !dbg !4090

for.cond:                                         ; preds = %for.inc, %if.then
  %10 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !4092
  %tobool2 = icmp ne %struct.BMEdge* %10, null, !dbg !4090
  br i1 %tobool2, label %for.body, label %for.end, !dbg !4090

for.body:                                         ; preds = %for.cond
  %11 = load i32 (i8*, i32)*, i32 (i8*, i32)** %setDrawOptions.addr, align 8, !dbg !4094
  %tobool3 = icmp ne i32 (i8*, i32)* %11, null, !dbg !4094
  br i1 %tobool3, label %lor.lhs.false, label %if.then5, !dbg !4097

lor.lhs.false:                                    ; preds = %for.body
  %12 = load i32 (i8*, i32)*, i32 (i8*, i32)** %setDrawOptions.addr, align 8, !dbg !4098
  %13 = load i8*, i8** %userData.addr, align 8, !dbg !4099
  %14 = load i32, i32* %i, align 4, !dbg !4100
  %call4 = call i32 %12(i8* %13, i32 %14), !dbg !4098
  %cmp = icmp ne i32 %call4, 0, !dbg !4101
  br i1 %cmp, label %if.then5, label %if.end, !dbg !4102

if.then5:                                         ; preds = %lor.lhs.false, %for.body
  %15 = load void (i8*, i32, float)*, void (i8*, i32, float)** %setDrawInterpOptions.addr, align 8, !dbg !4103
  %16 = load i8*, i8** %userData.addr, align 8, !dbg !4105
  %17 = load i32, i32* %i, align 4, !dbg !4106
  call void %15(i8* %16, i32 %17, float 0.000000e+00), !dbg !4103
  %18 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !4107
  %vertexCos6 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %18, i32 0, i32 2, !dbg !4108
  %19 = load [3 x float]*, [3 x float]** %vertexCos6, align 8, !dbg !4108
  %20 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !4109
  %v1 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %20, i32 0, i32 2, !dbg !4109
  %21 = load %struct.BMVert*, %struct.BMVert** %v1, align 8, !dbg !4109
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %21, i32 0, i32 0, !dbg !4109
  %call7 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head), !dbg !4109
  %idxprom = sext i32 %call7 to i64, !dbg !4107
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %19, i64 %idxprom, !dbg !4107
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !4107
  call void @glVertex3fv(float* %arraydecay), !dbg !4110
  %22 = load void (i8*, i32, float)*, void (i8*, i32, float)** %setDrawInterpOptions.addr, align 8, !dbg !4111
  %23 = load i8*, i8** %userData.addr, align 8, !dbg !4112
  %24 = load i32, i32* %i, align 4, !dbg !4113
  call void %22(i8* %23, i32 %24, float 1.000000e+00), !dbg !4111
  %25 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !4114
  %vertexCos8 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %25, i32 0, i32 2, !dbg !4115
  %26 = load [3 x float]*, [3 x float]** %vertexCos8, align 8, !dbg !4115
  %27 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !4116
  %v2 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %27, i32 0, i32 3, !dbg !4116
  %28 = load %struct.BMVert*, %struct.BMVert** %v2, align 8, !dbg !4116
  %head9 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %28, i32 0, i32 0, !dbg !4116
  %call10 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head9), !dbg !4116
  %idxprom11 = sext i32 %call10 to i64, !dbg !4114
  %arrayidx12 = getelementptr inbounds [3 x float], [3 x float]* %26, i64 %idxprom11, !dbg !4114
  %arraydecay13 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx12, i64 0, i64 0, !dbg !4114
  call void @glVertex3fv(float* %arraydecay13), !dbg !4117
  br label %if.end, !dbg !4118

if.end:                                           ; preds = %if.then5, %lor.lhs.false
  br label %for.inc, !dbg !4119

for.inc:                                          ; preds = %if.end
  %call14 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !4092
  %29 = bitcast i8* %call14 to %struct.BMEdge*, !dbg !4092
  store %struct.BMEdge* %29, %struct.BMEdge** %eed, align 8, !dbg !4092
  %30 = load i32, i32* %i, align 4, !dbg !4092
  %inc = add nsw i32 %30, 1, !dbg !4092
  store i32 %inc, i32* %i, align 4, !dbg !4092
  br label %for.cond, !dbg !4092, !llvm.loop !4120

for.end:                                          ; preds = %for.cond
  call void @glEnd(), !dbg !4122
  br label %if.end34, !dbg !4123

if.else:                                          ; preds = %entry
  call void @glBegin(i32 1), !dbg !4124
  %31 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !4126
  %call15 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %31, i8 zeroext 2, i8* null), !dbg !4126
  %32 = bitcast i8* %call15 to %struct.BMEdge*, !dbg !4126
  store %struct.BMEdge* %32, %struct.BMEdge** %eed, align 8, !dbg !4126
  store i32 0, i32* %i, align 4, !dbg !4126
  br label %for.cond16, !dbg !4126

for.cond16:                                       ; preds = %for.inc30, %if.else
  %33 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !4128
  %tobool17 = icmp ne %struct.BMEdge* %33, null, !dbg !4126
  br i1 %tobool17, label %for.body18, label %for.end33, !dbg !4126

for.body18:                                       ; preds = %for.cond16
  %34 = load i32 (i8*, i32)*, i32 (i8*, i32)** %setDrawOptions.addr, align 8, !dbg !4130
  %tobool19 = icmp ne i32 (i8*, i32)* %34, null, !dbg !4130
  br i1 %tobool19, label %lor.lhs.false20, label %if.then23, !dbg !4133

lor.lhs.false20:                                  ; preds = %for.body18
  %35 = load i32 (i8*, i32)*, i32 (i8*, i32)** %setDrawOptions.addr, align 8, !dbg !4134
  %36 = load i8*, i8** %userData.addr, align 8, !dbg !4135
  %37 = load i32, i32* %i, align 4, !dbg !4136
  %call21 = call i32 %35(i8* %36, i32 %37), !dbg !4134
  %cmp22 = icmp ne i32 %call21, 0, !dbg !4137
  br i1 %cmp22, label %if.then23, label %if.end29, !dbg !4138

if.then23:                                        ; preds = %lor.lhs.false20, %for.body18
  %38 = load void (i8*, i32, float)*, void (i8*, i32, float)** %setDrawInterpOptions.addr, align 8, !dbg !4139
  %39 = load i8*, i8** %userData.addr, align 8, !dbg !4141
  %40 = load i32, i32* %i, align 4, !dbg !4142
  call void %38(i8* %39, i32 %40, float 0.000000e+00), !dbg !4139
  %41 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !4143
  %v124 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %41, i32 0, i32 2, !dbg !4144
  %42 = load %struct.BMVert*, %struct.BMVert** %v124, align 8, !dbg !4144
  %co = getelementptr inbounds %struct.BMVert, %struct.BMVert* %42, i32 0, i32 2, !dbg !4145
  %arraydecay25 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !4143
  call void @glVertex3fv(float* %arraydecay25), !dbg !4146
  %43 = load void (i8*, i32, float)*, void (i8*, i32, float)** %setDrawInterpOptions.addr, align 8, !dbg !4147
  %44 = load i8*, i8** %userData.addr, align 8, !dbg !4148
  %45 = load i32, i32* %i, align 4, !dbg !4149
  call void %43(i8* %44, i32 %45, float 1.000000e+00), !dbg !4147
  %46 = load %struct.BMEdge*, %struct.BMEdge** %eed, align 8, !dbg !4150
  %v226 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %46, i32 0, i32 3, !dbg !4151
  %47 = load %struct.BMVert*, %struct.BMVert** %v226, align 8, !dbg !4151
  %co27 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %47, i32 0, i32 2, !dbg !4152
  %arraydecay28 = getelementptr inbounds [3 x float], [3 x float]* %co27, i64 0, i64 0, !dbg !4150
  call void @glVertex3fv(float* %arraydecay28), !dbg !4153
  br label %if.end29, !dbg !4154

if.end29:                                         ; preds = %if.then23, %lor.lhs.false20
  br label %for.inc30, !dbg !4155

for.inc30:                                        ; preds = %if.end29
  %call31 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !4128
  %48 = bitcast i8* %call31 to %struct.BMEdge*, !dbg !4128
  store %struct.BMEdge* %48, %struct.BMEdge** %eed, align 8, !dbg !4128
  %49 = load i32, i32* %i, align 4, !dbg !4128
  %inc32 = add nsw i32 %49, 1, !dbg !4128
  store i32 %inc32, i32* %i, align 4, !dbg !4128
  br label %for.cond16, !dbg !4128, !llvm.loop !4156

for.end33:                                        ; preds = %for.cond16
  call void @glEnd(), !dbg !4158
  br label %if.end34

if.end34:                                         ; preds = %for.end33, %for.end
  ret void, !dbg !4159
}

; Function Attrs: noinline nounwind uwtable
define internal void @emDM_drawMappedFaces(%struct.DerivedMesh* %dm, i32 (i8*, i32)* %setDrawOptions, i32 (i32, i8*)* %setMaterial, i32 (i8*, i32, i32)* %compareDrawOptions, i8* %userData, i32 %flag) #0 !dbg !4160 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %setDrawOptions.addr = alloca i32 (i8*, i32)*, align 8
  %setMaterial.addr = alloca i32 (i32, i8*)*, align 8
  %compareDrawOptions.addr = alloca i32 (i8*, i32, i32)*, align 8
  %userData.addr = alloca i8*, align 8
  %flag.addr = alloca i32, align 4
  %bmdm = alloca %struct.EditDerivedBMesh*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %bm = alloca %struct.BMesh*, align 8
  %efa = alloca %struct.BMFace*, align 8
  %looptris = alloca [3 x %struct.BMLoop*]*, align 8
  %tottri = alloca i32, align 4
  %lasttri = alloca i32, align 4
  %draw_option = alloca i32, align 4
  %i = alloca i32, align 4
  %flush = alloca i32, align 4
  %skip_normals = alloca i32, align 4
  %lnors = alloca [3 x float]*, align 8
  %lcol = alloca [3 x %struct.MLoopCol*], align 16
  %color_vert_array = alloca [4 x i8]*, align 8
  %color_face_array = alloca [4 x i8]*, align 8
  %has_vcol_preview = alloca i8, align 1
  %has_fcol_preview = alloca i8, align 1
  %has_vcol_any = alloca i8, align 1
  %poly_prev = alloca i32, align 4
  %shade_prev = alloca i32, align 4
  %vertexCos32 = alloca [3 x float]*, align 8
  %vertexNos = alloca [3 x float]*, align 8
  %polyNos = alloca [3 x float]*, align 8
  %ltri = alloca %struct.BMLoop**, align 8
  %drawSmooth = alloca i32, align 4
  %poly_type = alloca i32, align 4
  %shade_type = alloca i32, align 4
  %ltri308 = alloca %struct.BMLoop**, align 8
  %drawSmooth312 = alloca i32, align 4
  %poly_type340 = alloca i32, align 4
  %shade_type398 = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !4161, metadata !DIExpression()), !dbg !4162
  store i32 (i8*, i32)* %setDrawOptions, i32 (i8*, i32)** %setDrawOptions.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i32)** %setDrawOptions.addr, metadata !4163, metadata !DIExpression()), !dbg !4164
  store i32 (i32, i8*)* %setMaterial, i32 (i32, i8*)** %setMaterial.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8*)** %setMaterial.addr, metadata !4165, metadata !DIExpression()), !dbg !4166
  store i32 (i8*, i32, i32)* %compareDrawOptions, i32 (i8*, i32, i32)** %compareDrawOptions.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i32, i32)** %compareDrawOptions.addr, metadata !4167, metadata !DIExpression()), !dbg !4168
  store i8* %userData, i8** %userData.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userData.addr, metadata !4169, metadata !DIExpression()), !dbg !4170
  store i32 %flag, i32* %flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %flag.addr, metadata !4171, metadata !DIExpression()), !dbg !4172
  call void @llvm.dbg.declare(metadata %struct.EditDerivedBMesh** %bmdm, metadata !4173, metadata !DIExpression()), !dbg !4174
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4175
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.EditDerivedBMesh*, !dbg !4176
  store %struct.EditDerivedBMesh* %1, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !4174
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !4177, metadata !DIExpression()), !dbg !4178
  %2 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !4179
  %em1 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %2, i32 0, i32 1, !dbg !4180
  %3 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em1, align 8, !dbg !4180
  store %struct.BMEditMesh* %3, %struct.BMEditMesh** %em, align 8, !dbg !4178
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm, metadata !4181, metadata !DIExpression()), !dbg !4182
  %4 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !4183
  %bm2 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %4, i32 0, i32 0, !dbg !4184
  %5 = load %struct.BMesh*, %struct.BMesh** %bm2, align 8, !dbg !4184
  store %struct.BMesh* %5, %struct.BMesh** %bm, align 8, !dbg !4182
  call void @llvm.dbg.declare(metadata %struct.BMFace** %efa, metadata !4185, metadata !DIExpression()), !dbg !4186
  call void @llvm.dbg.declare(metadata [3 x %struct.BMLoop*]** %looptris, metadata !4187, metadata !DIExpression()), !dbg !4188
  %6 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !4189
  %em3 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %6, i32 0, i32 1, !dbg !4190
  %7 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em3, align 8, !dbg !4190
  %looptris4 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %7, i32 0, i32 3, !dbg !4191
  %8 = load [3 x %struct.BMLoop*]*, [3 x %struct.BMLoop*]** %looptris4, align 8, !dbg !4191
  store [3 x %struct.BMLoop*]* %8, [3 x %struct.BMLoop*]** %looptris, align 8, !dbg !4188
  call void @llvm.dbg.declare(metadata i32* %tottri, metadata !4192, metadata !DIExpression()), !dbg !4193
  %9 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !4194
  %em5 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %9, i32 0, i32 1, !dbg !4195
  %10 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em5, align 8, !dbg !4195
  %tottri6 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %10, i32 0, i32 4, !dbg !4196
  %11 = load i32, i32* %tottri6, align 8, !dbg !4196
  store i32 %11, i32* %tottri, align 4, !dbg !4193
  call void @llvm.dbg.declare(metadata i32* %lasttri, metadata !4197, metadata !DIExpression()), !dbg !4198
  %12 = load i32, i32* %tottri, align 4, !dbg !4199
  %sub = sub nsw i32 %12, 1, !dbg !4200
  store i32 %sub, i32* %lasttri, align 4, !dbg !4198
  call void @llvm.dbg.declare(metadata i32* %draw_option, metadata !4201, metadata !DIExpression()), !dbg !4202
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4203, metadata !DIExpression()), !dbg !4204
  call void @llvm.dbg.declare(metadata i32* %flush, metadata !4205, metadata !DIExpression()), !dbg !4206
  call void @llvm.dbg.declare(metadata i32* %skip_normals, metadata !4207, metadata !DIExpression()), !dbg !4208
  %call = call zeroext i8 @glIsEnabled(i32 2896), !dbg !4209
  %tobool = icmp ne i8 %call, 0, !dbg !4210
  %lnot = xor i1 %tobool, true, !dbg !4210
  %lnot.ext = zext i1 %lnot to i32, !dbg !4210
  store i32 %lnot.ext, i32* %skip_normals, align 4, !dbg !4208
  call void @llvm.dbg.declare(metadata [3 x float]** %lnors, metadata !4211, metadata !DIExpression()), !dbg !4212
  %13 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4213
  %getLoopDataArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %13, i32 0, i32 53, !dbg !4214
  %14 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getLoopDataArray, align 8, !dbg !4214
  %15 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4215
  %call7 = call i8* %14(%struct.DerivedMesh* %15, i32 8), !dbg !4213
  %16 = bitcast i8* %call7 to [3 x float]*, !dbg !4213
  store [3 x float]* %16, [3 x float]** %lnors, align 8, !dbg !4212
  call void @llvm.dbg.declare(metadata [3 x %struct.MLoopCol*]* %lcol, metadata !4216, metadata !DIExpression()), !dbg !4218
  %17 = bitcast [3 x %struct.MLoopCol*]* %lcol to i8*, !dbg !4218
  call void @llvm.memset.p0i8.i64(i8* align 16 %17, i8 0, i64 24, i1 false), !dbg !4218
  call void @llvm.dbg.declare(metadata [4 x i8]** %color_vert_array, metadata !4219, metadata !DIExpression()), !dbg !4220
  %18 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !4221
  %derivedVertColor = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %18, i32 0, i32 8, !dbg !4222
  %19 = load [4 x i8]*, [4 x i8]** %derivedVertColor, align 8, !dbg !4222
  store [4 x i8]* %19, [4 x i8]** %color_vert_array, align 8, !dbg !4220
  call void @llvm.dbg.declare(metadata [4 x i8]** %color_face_array, metadata !4223, metadata !DIExpression()), !dbg !4224
  %20 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !4225
  %derivedFaceColor = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %20, i32 0, i32 10, !dbg !4226
  %21 = load [4 x i8]*, [4 x i8]** %derivedFaceColor, align 8, !dbg !4226
  store [4 x i8]* %21, [4 x i8]** %color_face_array, align 8, !dbg !4224
  call void @llvm.dbg.declare(metadata i8* %has_vcol_preview, metadata !4227, metadata !DIExpression()), !dbg !4228
  %22 = load [4 x i8]*, [4 x i8]** %color_vert_array, align 8, !dbg !4229
  %cmp = icmp ne [4 x i8]* %22, null, !dbg !4230
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !4231

land.rhs:                                         ; preds = %entry
  %23 = load i32, i32* %skip_normals, align 4, !dbg !4232
  %tobool8 = icmp ne i32 %23, 0, !dbg !4233
  %lnot9 = xor i1 %tobool8, true, !dbg !4233
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %24 = phi i1 [ false, %entry ], [ %lnot9, %land.rhs ], !dbg !4234
  %land.ext = zext i1 %24 to i32, !dbg !4231
  %conv = trunc i32 %land.ext to i8, !dbg !4235
  store i8 %conv, i8* %has_vcol_preview, align 1, !dbg !4228
  call void @llvm.dbg.declare(metadata i8* %has_fcol_preview, metadata !4236, metadata !DIExpression()), !dbg !4237
  %25 = load [4 x i8]*, [4 x i8]** %color_face_array, align 8, !dbg !4238
  %cmp11 = icmp ne [4 x i8]* %25, null, !dbg !4239
  br i1 %cmp11, label %land.rhs13, label %land.end17, !dbg !4240

land.rhs13:                                       ; preds = %land.end
  %26 = load i32, i32* %skip_normals, align 4, !dbg !4241
  %tobool14 = icmp ne i32 %26, 0, !dbg !4242
  %lnot15 = xor i1 %tobool14, true, !dbg !4242
  br label %land.end17

land.end17:                                       ; preds = %land.rhs13, %land.end
  %27 = phi i1 [ false, %land.end ], [ %lnot15, %land.rhs13 ], !dbg !4234
  %land.ext18 = zext i1 %27 to i32, !dbg !4240
  %conv19 = trunc i32 %land.ext18 to i8, !dbg !4243
  store i8 %conv19, i8* %has_fcol_preview, align 1, !dbg !4237
  call void @llvm.dbg.declare(metadata i8* %has_vcol_any, metadata !4244, metadata !DIExpression()), !dbg !4245
  %28 = load i8, i8* %has_vcol_preview, align 1, !dbg !4246
  store i8 %28, i8* %has_vcol_any, align 1, !dbg !4245
  call void @llvm.dbg.declare(metadata i32* %poly_prev, metadata !4247, metadata !DIExpression()), !dbg !4249
  store i32 0, i32* %poly_prev, align 4, !dbg !4249
  call void @llvm.dbg.declare(metadata i32* %shade_prev, metadata !4250, metadata !DIExpression()), !dbg !4251
  store i32 0, i32* %shade_prev, align 4, !dbg !4251
  %29 = load i32 (i32, i8*)*, i32 (i32, i8*)** %setMaterial.addr, align 8, !dbg !4252
  %30 = load i32 (i8*, i32, i32)*, i32 (i8*, i32, i32)** %compareDrawOptions.addr, align 8, !dbg !4253
  %31 = load i8, i8* %has_vcol_preview, align 1, !dbg !4254
  %tobool20 = icmp ne i8 %31, 0, !dbg !4254
  br i1 %tobool20, label %if.then, label %if.end, !dbg !4256

if.then:                                          ; preds = %land.end17
  %32 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !4257
  call void @BM_mesh_elem_index_ensure(%struct.BMesh* %32, i8 zeroext 1), !dbg !4259
  br label %if.end, !dbg !4260

if.end:                                           ; preds = %if.then, %land.end17
  %33 = load i8, i8* %has_fcol_preview, align 1, !dbg !4261
  %tobool21 = icmp ne i8 %33, 0, !dbg !4261
  br i1 %tobool21, label %if.then22, label %if.end23, !dbg !4263

if.then22:                                        ; preds = %if.end
  %34 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !4264
  call void @BM_mesh_elem_index_ensure(%struct.BMesh* %34, i8 zeroext 8), !dbg !4266
  br label %if.end23, !dbg !4267

if.end23:                                         ; preds = %if.then22, %if.end
  %35 = load i8, i8* %has_vcol_preview, align 1, !dbg !4268
  %conv24 = zext i8 %35 to i32, !dbg !4268
  %tobool25 = icmp ne i32 %conv24, 0, !dbg !4268
  br i1 %tobool25, label %if.then28, label %lor.lhs.false, !dbg !4270

lor.lhs.false:                                    ; preds = %if.end23
  %36 = load i8, i8* %has_fcol_preview, align 1, !dbg !4271
  %conv26 = zext i8 %36 to i32, !dbg !4271
  %tobool27 = icmp ne i32 %conv26, 0, !dbg !4271
  br i1 %tobool27, label %if.then28, label %if.end29, !dbg !4272

if.then28:                                        ; preds = %lor.lhs.false, %if.end23
  %37 = load i32, i32* %flag.addr, align 4, !dbg !4273
  %or = or i32 %37, 2, !dbg !4273
  store i32 %or, i32* %flag.addr, align 4, !dbg !4273
  call void @glDisable(i32 2896), !dbg !4275
  br label %if.end29, !dbg !4276

if.end29:                                         ; preds = %if.then28, %lor.lhs.false
  %38 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !4277
  %vertexCos = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %38, i32 0, i32 2, !dbg !4279
  %39 = load [3 x float]*, [3 x float]** %vertexCos, align 8, !dbg !4279
  %tobool30 = icmp ne [3 x float]* %39, null, !dbg !4277
  br i1 %tobool30, label %if.then31, label %if.else300, !dbg !4280

if.then31:                                        ; preds = %if.end29
  call void @llvm.dbg.declare(metadata [3 x float]** %vertexCos32, metadata !4281, metadata !DIExpression()), !dbg !4283
  %40 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !4284
  %vertexCos33 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %40, i32 0, i32 2, !dbg !4285
  %41 = load [3 x float]*, [3 x float]** %vertexCos33, align 8, !dbg !4285
  store [3 x float]* %41, [3 x float]** %vertexCos32, align 8, !dbg !4283
  call void @llvm.dbg.declare(metadata [3 x float]** %vertexNos, metadata !4286, metadata !DIExpression()), !dbg !4287
  call void @llvm.dbg.declare(metadata [3 x float]** %polyNos, metadata !4288, metadata !DIExpression()), !dbg !4289
  %42 = load i32, i32* %skip_normals, align 4, !dbg !4290
  %tobool34 = icmp ne i32 %42, 0, !dbg !4290
  br i1 %tobool34, label %if.then35, label %if.else, !dbg !4292

if.then35:                                        ; preds = %if.then31
  store [3 x float]* null, [3 x float]** %vertexNos, align 8, !dbg !4293
  store [3 x float]* null, [3 x float]** %polyNos, align 8, !dbg !4295
  br label %if.end38, !dbg !4296

if.else:                                          ; preds = %if.then31
  %43 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !4297
  call void @emDM_ensureVertNormals(%struct.EditDerivedBMesh* %43), !dbg !4299
  %44 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !4300
  call void @emDM_ensurePolyNormals(%struct.EditDerivedBMesh* %44), !dbg !4301
  %45 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !4302
  %vertexNos36 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %45, i32 0, i32 3, !dbg !4303
  %46 = load [3 x float]*, [3 x float]** %vertexNos36, align 8, !dbg !4303
  store [3 x float]* %46, [3 x float]** %vertexNos, align 8, !dbg !4304
  %47 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !4305
  %polyNos37 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %47, i32 0, i32 4, !dbg !4306
  %48 = load [3 x float]*, [3 x float]** %polyNos37, align 8, !dbg !4306
  store [3 x float]* %48, [3 x float]** %polyNos, align 8, !dbg !4307
  br label %if.end38

if.end38:                                         ; preds = %if.else, %if.then35
  %49 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !4308
  %50 = load [3 x float]*, [3 x float]** %lnors, align 8, !dbg !4309
  %tobool39 = icmp ne [3 x float]* %50, null, !dbg !4309
  %51 = zext i1 %tobool39 to i64, !dbg !4309
  %cond = select i1 %tobool39, i32 13, i32 9, !dbg !4309
  %conv40 = trunc i32 %cond to i8, !dbg !4309
  call void @BM_mesh_elem_index_ensure(%struct.BMesh* %49, i8 zeroext %conv40), !dbg !4310
  store i32 0, i32* %i, align 4, !dbg !4311
  br label %for.cond, !dbg !4313

for.cond:                                         ; preds = %for.inc, %if.end38
  %52 = load i32, i32* %i, align 4, !dbg !4314
  %53 = load i32, i32* %tottri, align 4, !dbg !4316
  %cmp41 = icmp slt i32 %52, %53, !dbg !4317
  br i1 %cmp41, label %for.body, label %for.end, !dbg !4318

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.BMLoop*** %ltri, metadata !4319, metadata !DIExpression()), !dbg !4321
  %54 = load [3 x %struct.BMLoop*]*, [3 x %struct.BMLoop*]** %looptris, align 8, !dbg !4322
  %55 = load i32, i32* %i, align 4, !dbg !4323
  %idxprom = sext i32 %55 to i64, !dbg !4322
  %arrayidx = getelementptr inbounds [3 x %struct.BMLoop*], [3 x %struct.BMLoop*]* %54, i64 %idxprom, !dbg !4322
  %arraydecay = getelementptr inbounds [3 x %struct.BMLoop*], [3 x %struct.BMLoop*]* %arrayidx, i64 0, i64 0, !dbg !4322
  store %struct.BMLoop** %arraydecay, %struct.BMLoop*** %ltri, align 8, !dbg !4321
  call void @llvm.dbg.declare(metadata i32* %drawSmooth, metadata !4324, metadata !DIExpression()), !dbg !4325
  %56 = load %struct.BMLoop**, %struct.BMLoop*** %ltri, align 8, !dbg !4326
  %arrayidx43 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %56, i64 0, !dbg !4326
  %57 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx43, align 8, !dbg !4326
  %f = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %57, i32 0, i32 3, !dbg !4327
  %58 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !4327
  store %struct.BMFace* %58, %struct.BMFace** %efa, align 8, !dbg !4328
  %59 = load [3 x float]*, [3 x float]** %lnors, align 8, !dbg !4329
  %tobool44 = icmp ne [3 x float]* %59, null, !dbg !4329
  br i1 %tobool44, label %lor.end, label %lor.rhs, !dbg !4330

lor.rhs:                                          ; preds = %for.body
  %60 = load i32, i32* %flag.addr, align 4, !dbg !4331
  %and = and i32 %60, 2, !dbg !4332
  %tobool45 = icmp ne i32 %and, 0, !dbg !4332
  br i1 %tobool45, label %cond.true, label %cond.false, !dbg !4333

cond.true:                                        ; preds = %lor.rhs
  br label %cond.end, !dbg !4333

cond.false:                                       ; preds = %lor.rhs
  %61 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !4334
  %head = getelementptr inbounds %struct.BMFace, %struct.BMFace* %61, i32 0, i32 0, !dbg !4334
  %call46 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext 8), !dbg !4334
  %conv47 = zext i8 %call46 to i32, !dbg !4334
  br label %cond.end, !dbg !4333

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond48 = phi i32 [ 1, %cond.true ], [ %conv47, %cond.false ], !dbg !4333
  %tobool49 = icmp ne i32 %cond48, 0, !dbg !4330
  br label %lor.end, !dbg !4330

lor.end:                                          ; preds = %cond.end, %for.body
  %62 = phi i1 [ true, %for.body ], [ %tobool49, %cond.end ]
  %lor.ext = zext i1 %62 to i32, !dbg !4330
  store i32 %lor.ext, i32* %drawSmooth, align 4, !dbg !4335
  %63 = load i32 (i8*, i32)*, i32 (i8*, i32)** %setDrawOptions.addr, align 8, !dbg !4336
  %tobool50 = icmp ne i32 (i8*, i32)* %63, null, !dbg !4336
  br i1 %tobool50, label %cond.false52, label %cond.true51, !dbg !4337

cond.true51:                                      ; preds = %lor.end
  br label %cond.end56, !dbg !4337

cond.false52:                                     ; preds = %lor.end
  %64 = load i32 (i8*, i32)*, i32 (i8*, i32)** %setDrawOptions.addr, align 8, !dbg !4338
  %65 = load i8*, i8** %userData.addr, align 8, !dbg !4339
  %66 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !4340
  %head53 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %66, i32 0, i32 0, !dbg !4340
  %call54 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head53), !dbg !4340
  %call55 = call i32 %64(i8* %65, i32 %call54), !dbg !4338
  br label %cond.end56, !dbg !4337

cond.end56:                                       ; preds = %cond.false52, %cond.true51
  %cond57 = phi i32 [ 1, %cond.true51 ], [ %call55, %cond.false52 ], !dbg !4337
  store i32 %cond57, i32* %draw_option, align 4, !dbg !4341
  %67 = load i32, i32* %draw_option, align 4, !dbg !4342
  %cmp58 = icmp ne i32 %67, 0, !dbg !4344
  br i1 %cmp58, label %if.then60, label %if.end299, !dbg !4345

if.then60:                                        ; preds = %cond.end56
  call void @llvm.dbg.declare(metadata i32* %poly_type, metadata !4346, metadata !DIExpression()), !dbg !4349
  store i32 4, i32* %poly_type, align 4, !dbg !4349
  %68 = load i32, i32* %draw_option, align 4, !dbg !4350
  %cmp61 = icmp eq i32 %68, 3, !dbg !4352
  br i1 %cmp61, label %if.then63, label %if.end68, !dbg !4353

if.then63:                                        ; preds = %if.then60
  %69 = load i32, i32* %poly_prev, align 4, !dbg !4354
  %cmp64 = icmp ne i32 %69, 0, !dbg !4357
  br i1 %cmp64, label %if.then66, label %if.end67, !dbg !4358

if.then66:                                        ; preds = %if.then63
  call void @glEnd(), !dbg !4359
  br label %if.end67, !dbg !4359

if.end67:                                         ; preds = %if.then66, %if.then63
  store i32 0, i32* %poly_prev, align 4, !dbg !4360
  call void @glEnable(i32 2882), !dbg !4361
  call void @glPolygonStipple(i8* getelementptr inbounds ([128 x i8], [128 x i8]* @stipple_quarttone, i64 0, i64 0)), !dbg !4362
  br label %if.end68, !dbg !4363

if.end68:                                         ; preds = %if.end67, %if.then60
  %70 = load i8, i8* %has_vcol_preview, align 1, !dbg !4364
  %tobool69 = icmp ne i8 %70, 0, !dbg !4364
  br i1 %tobool69, label %if.then70, label %if.else72, !dbg !4366

if.then70:                                        ; preds = %if.end68
  %71 = load %struct.BMLoop**, %struct.BMLoop*** %ltri, align 8, !dbg !4367
  %arraydecay71 = getelementptr inbounds [3 x %struct.MLoopCol*], [3 x %struct.MLoopCol*]* %lcol, i64 0, i64 0, !dbg !4368
  %72 = load [4 x i8]*, [4 x i8]** %color_vert_array, align 8, !dbg !4369
  call void @bmdm_get_tri_colpreview(%struct.BMLoop** %71, %struct.MLoopCol** %arraydecay71, [4 x i8]* %72), !dbg !4370
  br label %if.end80, !dbg !4370

if.else72:                                        ; preds = %if.end68
  %73 = load i8, i8* %has_fcol_preview, align 1, !dbg !4371
  %tobool73 = icmp ne i8 %73, 0, !dbg !4371
  br i1 %tobool73, label %if.then74, label %if.end79, !dbg !4373

if.then74:                                        ; preds = %if.else72
  %74 = load [4 x i8]*, [4 x i8]** %color_face_array, align 8, !dbg !4374
  %75 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !4375
  %head75 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %75, i32 0, i32 0, !dbg !4375
  %call76 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head75), !dbg !4375
  %idxprom77 = sext i32 %call76 to i64, !dbg !4374
  %arrayidx78 = getelementptr inbounds [4 x i8], [4 x i8]* %74, i64 %idxprom77, !dbg !4374
  %76 = bitcast [4 x i8]* %arrayidx78 to i8*, !dbg !4376
  call void @glColor3ubv(i8* %76), !dbg !4377
  br label %if.end79, !dbg !4377

if.end79:                                         ; preds = %if.then74, %if.else72
  br label %if.end80

if.end80:                                         ; preds = %if.end79, %if.then70
  %77 = load i32, i32* %skip_normals, align 4, !dbg !4378
  %tobool81 = icmp ne i32 %77, 0, !dbg !4378
  br i1 %tobool81, label %if.then82, label %if.else125, !dbg !4380

if.then82:                                        ; preds = %if.end80
  %78 = load i32, i32* %poly_prev, align 4, !dbg !4381
  %cmp83 = icmp ne i32 4, %78, !dbg !4384
  br i1 %cmp83, label %if.then85, label %if.end90, !dbg !4385

if.then85:                                        ; preds = %if.then82
  %79 = load i32, i32* %poly_prev, align 4, !dbg !4386
  %cmp86 = icmp ne i32 %79, 0, !dbg !4389
  br i1 %cmp86, label %if.then88, label %if.end89, !dbg !4390

if.then88:                                        ; preds = %if.then85
  call void @glEnd(), !dbg !4391
  br label %if.end89, !dbg !4391

if.end89:                                         ; preds = %if.then88, %if.then85
  store i32 4, i32* %poly_prev, align 4, !dbg !4392
  call void @glBegin(i32 4), !dbg !4393
  br label %if.end90, !dbg !4394

if.end90:                                         ; preds = %if.end89, %if.then82
  %80 = load i8, i8* %has_vcol_any, align 1, !dbg !4395
  %tobool91 = icmp ne i8 %80, 0, !dbg !4395
  br i1 %tobool91, label %if.then92, label %if.end94, !dbg !4397

if.then92:                                        ; preds = %if.end90
  %arrayidx93 = getelementptr inbounds [3 x %struct.MLoopCol*], [3 x %struct.MLoopCol*]* %lcol, i64 0, i64 0, !dbg !4398
  %81 = load %struct.MLoopCol*, %struct.MLoopCol** %arrayidx93, align 16, !dbg !4398
  %r = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %81, i32 0, i32 0, !dbg !4399
  call void @glColor3ubv(i8* %r), !dbg !4400
  br label %if.end94, !dbg !4400

if.end94:                                         ; preds = %if.then92, %if.end90
  %82 = load [3 x float]*, [3 x float]** %vertexCos32, align 8, !dbg !4401
  %83 = load %struct.BMLoop**, %struct.BMLoop*** %ltri, align 8, !dbg !4402
  %arrayidx95 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %83, i64 0, !dbg !4402
  %84 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx95, align 8, !dbg !4402
  %v = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %84, i32 0, i32 1, !dbg !4402
  %85 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !4402
  %head96 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %85, i32 0, i32 0, !dbg !4402
  %call97 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head96), !dbg !4402
  %idxprom98 = sext i32 %call97 to i64, !dbg !4401
  %arrayidx99 = getelementptr inbounds [3 x float], [3 x float]* %82, i64 %idxprom98, !dbg !4401
  %arraydecay100 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx99, i64 0, i64 0, !dbg !4401
  call void @glVertex3fv(float* %arraydecay100), !dbg !4403
  %86 = load i8, i8* %has_vcol_any, align 1, !dbg !4404
  %tobool101 = icmp ne i8 %86, 0, !dbg !4404
  br i1 %tobool101, label %if.then102, label %if.end105, !dbg !4406

if.then102:                                       ; preds = %if.end94
  %arrayidx103 = getelementptr inbounds [3 x %struct.MLoopCol*], [3 x %struct.MLoopCol*]* %lcol, i64 0, i64 1, !dbg !4407
  %87 = load %struct.MLoopCol*, %struct.MLoopCol** %arrayidx103, align 8, !dbg !4407
  %r104 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %87, i32 0, i32 0, !dbg !4408
  call void @glColor3ubv(i8* %r104), !dbg !4409
  br label %if.end105, !dbg !4409

if.end105:                                        ; preds = %if.then102, %if.end94
  %88 = load [3 x float]*, [3 x float]** %vertexCos32, align 8, !dbg !4410
  %89 = load %struct.BMLoop**, %struct.BMLoop*** %ltri, align 8, !dbg !4411
  %arrayidx106 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %89, i64 1, !dbg !4411
  %90 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx106, align 8, !dbg !4411
  %v107 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %90, i32 0, i32 1, !dbg !4411
  %91 = load %struct.BMVert*, %struct.BMVert** %v107, align 8, !dbg !4411
  %head108 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %91, i32 0, i32 0, !dbg !4411
  %call109 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head108), !dbg !4411
  %idxprom110 = sext i32 %call109 to i64, !dbg !4410
  %arrayidx111 = getelementptr inbounds [3 x float], [3 x float]* %88, i64 %idxprom110, !dbg !4410
  %arraydecay112 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx111, i64 0, i64 0, !dbg !4410
  call void @glVertex3fv(float* %arraydecay112), !dbg !4412
  %92 = load i8, i8* %has_vcol_any, align 1, !dbg !4413
  %tobool113 = icmp ne i8 %92, 0, !dbg !4413
  br i1 %tobool113, label %if.then114, label %if.end117, !dbg !4415

if.then114:                                       ; preds = %if.end105
  %arrayidx115 = getelementptr inbounds [3 x %struct.MLoopCol*], [3 x %struct.MLoopCol*]* %lcol, i64 0, i64 2, !dbg !4416
  %93 = load %struct.MLoopCol*, %struct.MLoopCol** %arrayidx115, align 16, !dbg !4416
  %r116 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %93, i32 0, i32 0, !dbg !4417
  call void @glColor3ubv(i8* %r116), !dbg !4418
  br label %if.end117, !dbg !4418

if.end117:                                        ; preds = %if.then114, %if.end105
  %94 = load [3 x float]*, [3 x float]** %vertexCos32, align 8, !dbg !4419
  %95 = load %struct.BMLoop**, %struct.BMLoop*** %ltri, align 8, !dbg !4420
  %arrayidx118 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %95, i64 2, !dbg !4420
  %96 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx118, align 8, !dbg !4420
  %v119 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %96, i32 0, i32 1, !dbg !4420
  %97 = load %struct.BMVert*, %struct.BMVert** %v119, align 8, !dbg !4420
  %head120 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %97, i32 0, i32 0, !dbg !4420
  %call121 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head120), !dbg !4420
  %idxprom122 = sext i32 %call121 to i64, !dbg !4419
  %arrayidx123 = getelementptr inbounds [3 x float], [3 x float]* %94, i64 %idxprom122, !dbg !4419
  %arraydecay124 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx123, i64 0, i64 0, !dbg !4419
  call void @glVertex3fv(float* %arraydecay124), !dbg !4421
  br label %if.end276, !dbg !4422

if.else125:                                       ; preds = %if.end80
  call void @llvm.dbg.declare(metadata i32* %shade_type, metadata !4423, metadata !DIExpression()), !dbg !4425
  %98 = load i32, i32* %drawSmooth, align 4, !dbg !4426
  %tobool126 = icmp ne i32 %98, 0, !dbg !4426
  %99 = zext i1 %tobool126 to i64, !dbg !4426
  %cond127 = select i1 %tobool126, i32 7425, i32 7424, !dbg !4426
  store i32 %cond127, i32* %shade_type, align 4, !dbg !4425
  %100 = load i32, i32* %shade_type, align 4, !dbg !4427
  %101 = load i32, i32* %shade_prev, align 4, !dbg !4429
  %cmp128 = icmp ne i32 %100, %101, !dbg !4430
  br i1 %cmp128, label %if.then130, label %if.end135, !dbg !4431

if.then130:                                       ; preds = %if.else125
  %102 = load i32, i32* %poly_prev, align 4, !dbg !4432
  %cmp131 = icmp ne i32 %102, 0, !dbg !4435
  br i1 %cmp131, label %if.then133, label %if.end134, !dbg !4436

if.then133:                                       ; preds = %if.then130
  call void @glEnd(), !dbg !4437
  br label %if.end134, !dbg !4437

if.end134:                                        ; preds = %if.then133, %if.then130
  %103 = load i32, i32* %shade_type, align 4, !dbg !4438
  store i32 %103, i32* %shade_prev, align 4, !dbg !4439
  call void @glShadeModel(i32 %103), !dbg !4440
  store i32 4, i32* %poly_prev, align 4, !dbg !4441
  call void @glBegin(i32 4), !dbg !4442
  br label %if.end135, !dbg !4443

if.end135:                                        ; preds = %if.end134, %if.else125
  %104 = load i32, i32* %poly_prev, align 4, !dbg !4444
  %cmp136 = icmp ne i32 4, %104, !dbg !4446
  br i1 %cmp136, label %if.then138, label %if.end143, !dbg !4447

if.then138:                                       ; preds = %if.end135
  %105 = load i32, i32* %poly_prev, align 4, !dbg !4448
  %cmp139 = icmp ne i32 %105, 0, !dbg !4451
  br i1 %cmp139, label %if.then141, label %if.end142, !dbg !4452

if.then141:                                       ; preds = %if.then138
  call void @glEnd(), !dbg !4453
  br label %if.end142, !dbg !4453

if.end142:                                        ; preds = %if.then141, %if.then138
  store i32 4, i32* %poly_prev, align 4, !dbg !4454
  call void @glBegin(i32 4), !dbg !4455
  br label %if.end143, !dbg !4456

if.end143:                                        ; preds = %if.end142, %if.end135
  %106 = load i32, i32* %drawSmooth, align 4, !dbg !4457
  %tobool144 = icmp ne i32 %106, 0, !dbg !4457
  br i1 %tobool144, label %if.else187, label %if.then145, !dbg !4459

if.then145:                                       ; preds = %if.end143
  %107 = load [3 x float]*, [3 x float]** %polyNos, align 8, !dbg !4460
  %108 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !4462
  %head146 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %108, i32 0, i32 0, !dbg !4462
  %call147 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head146), !dbg !4462
  %idxprom148 = sext i32 %call147 to i64, !dbg !4460
  %arrayidx149 = getelementptr inbounds [3 x float], [3 x float]* %107, i64 %idxprom148, !dbg !4460
  %arraydecay150 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx149, i64 0, i64 0, !dbg !4460
  call void @glNormal3fv(float* %arraydecay150), !dbg !4463
  %109 = load i8, i8* %has_vcol_any, align 1, !dbg !4464
  %tobool151 = icmp ne i8 %109, 0, !dbg !4464
  br i1 %tobool151, label %if.then152, label %if.end155, !dbg !4466

if.then152:                                       ; preds = %if.then145
  %arrayidx153 = getelementptr inbounds [3 x %struct.MLoopCol*], [3 x %struct.MLoopCol*]* %lcol, i64 0, i64 0, !dbg !4467
  %110 = load %struct.MLoopCol*, %struct.MLoopCol** %arrayidx153, align 16, !dbg !4467
  %r154 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %110, i32 0, i32 0, !dbg !4468
  call void @glColor3ubv(i8* %r154), !dbg !4469
  br label %if.end155, !dbg !4469

if.end155:                                        ; preds = %if.then152, %if.then145
  %111 = load [3 x float]*, [3 x float]** %vertexCos32, align 8, !dbg !4470
  %112 = load %struct.BMLoop**, %struct.BMLoop*** %ltri, align 8, !dbg !4471
  %arrayidx156 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %112, i64 0, !dbg !4471
  %113 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx156, align 8, !dbg !4471
  %v157 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %113, i32 0, i32 1, !dbg !4471
  %114 = load %struct.BMVert*, %struct.BMVert** %v157, align 8, !dbg !4471
  %head158 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %114, i32 0, i32 0, !dbg !4471
  %call159 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head158), !dbg !4471
  %idxprom160 = sext i32 %call159 to i64, !dbg !4470
  %arrayidx161 = getelementptr inbounds [3 x float], [3 x float]* %111, i64 %idxprom160, !dbg !4470
  %arraydecay162 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx161, i64 0, i64 0, !dbg !4470
  call void @glVertex3fv(float* %arraydecay162), !dbg !4472
  %115 = load i8, i8* %has_vcol_any, align 1, !dbg !4473
  %tobool163 = icmp ne i8 %115, 0, !dbg !4473
  br i1 %tobool163, label %if.then164, label %if.end167, !dbg !4475

if.then164:                                       ; preds = %if.end155
  %arrayidx165 = getelementptr inbounds [3 x %struct.MLoopCol*], [3 x %struct.MLoopCol*]* %lcol, i64 0, i64 1, !dbg !4476
  %116 = load %struct.MLoopCol*, %struct.MLoopCol** %arrayidx165, align 8, !dbg !4476
  %r166 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %116, i32 0, i32 0, !dbg !4477
  call void @glColor3ubv(i8* %r166), !dbg !4478
  br label %if.end167, !dbg !4478

if.end167:                                        ; preds = %if.then164, %if.end155
  %117 = load [3 x float]*, [3 x float]** %vertexCos32, align 8, !dbg !4479
  %118 = load %struct.BMLoop**, %struct.BMLoop*** %ltri, align 8, !dbg !4480
  %arrayidx168 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %118, i64 1, !dbg !4480
  %119 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx168, align 8, !dbg !4480
  %v169 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %119, i32 0, i32 1, !dbg !4480
  %120 = load %struct.BMVert*, %struct.BMVert** %v169, align 8, !dbg !4480
  %head170 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %120, i32 0, i32 0, !dbg !4480
  %call171 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head170), !dbg !4480
  %idxprom172 = sext i32 %call171 to i64, !dbg !4479
  %arrayidx173 = getelementptr inbounds [3 x float], [3 x float]* %117, i64 %idxprom172, !dbg !4479
  %arraydecay174 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx173, i64 0, i64 0, !dbg !4479
  call void @glVertex3fv(float* %arraydecay174), !dbg !4481
  %121 = load i8, i8* %has_vcol_any, align 1, !dbg !4482
  %tobool175 = icmp ne i8 %121, 0, !dbg !4482
  br i1 %tobool175, label %if.then176, label %if.end179, !dbg !4484

if.then176:                                       ; preds = %if.end167
  %arrayidx177 = getelementptr inbounds [3 x %struct.MLoopCol*], [3 x %struct.MLoopCol*]* %lcol, i64 0, i64 2, !dbg !4485
  %122 = load %struct.MLoopCol*, %struct.MLoopCol** %arrayidx177, align 16, !dbg !4485
  %r178 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %122, i32 0, i32 0, !dbg !4486
  call void @glColor3ubv(i8* %r178), !dbg !4487
  br label %if.end179, !dbg !4487

if.end179:                                        ; preds = %if.then176, %if.end167
  %123 = load [3 x float]*, [3 x float]** %vertexCos32, align 8, !dbg !4488
  %124 = load %struct.BMLoop**, %struct.BMLoop*** %ltri, align 8, !dbg !4489
  %arrayidx180 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %124, i64 2, !dbg !4489
  %125 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx180, align 8, !dbg !4489
  %v181 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %125, i32 0, i32 1, !dbg !4489
  %126 = load %struct.BMVert*, %struct.BMVert** %v181, align 8, !dbg !4489
  %head182 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %126, i32 0, i32 0, !dbg !4489
  %call183 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head182), !dbg !4489
  %idxprom184 = sext i32 %call183 to i64, !dbg !4488
  %arrayidx185 = getelementptr inbounds [3 x float], [3 x float]* %123, i64 %idxprom184, !dbg !4488
  %arraydecay186 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx185, i64 0, i64 0, !dbg !4488
  call void @glVertex3fv(float* %arraydecay186), !dbg !4490
  br label %if.end275, !dbg !4491

if.else187:                                       ; preds = %if.end143
  %127 = load i8, i8* %has_vcol_any, align 1, !dbg !4492
  %tobool188 = icmp ne i8 %127, 0, !dbg !4492
  br i1 %tobool188, label %if.then189, label %if.end192, !dbg !4495

if.then189:                                       ; preds = %if.else187
  %arrayidx190 = getelementptr inbounds [3 x %struct.MLoopCol*], [3 x %struct.MLoopCol*]* %lcol, i64 0, i64 0, !dbg !4496
  %128 = load %struct.MLoopCol*, %struct.MLoopCol** %arrayidx190, align 16, !dbg !4496
  %r191 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %128, i32 0, i32 0, !dbg !4497
  call void @glColor3ubv(i8* %r191), !dbg !4498
  br label %if.end192, !dbg !4498

if.end192:                                        ; preds = %if.then189, %if.else187
  %129 = load [3 x float]*, [3 x float]** %lnors, align 8, !dbg !4499
  %tobool193 = icmp ne [3 x float]* %129, null, !dbg !4499
  br i1 %tobool193, label %if.then194, label %if.else201, !dbg !4501

if.then194:                                       ; preds = %if.end192
  %130 = load [3 x float]*, [3 x float]** %lnors, align 8, !dbg !4502
  %131 = load %struct.BMLoop**, %struct.BMLoop*** %ltri, align 8, !dbg !4503
  %arrayidx195 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %131, i64 0, !dbg !4503
  %132 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx195, align 8, !dbg !4503
  %head196 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %132, i32 0, i32 0, !dbg !4503
  %call197 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head196), !dbg !4503
  %idxprom198 = sext i32 %call197 to i64, !dbg !4502
  %arrayidx199 = getelementptr inbounds [3 x float], [3 x float]* %130, i64 %idxprom198, !dbg !4502
  %arraydecay200 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx199, i64 0, i64 0, !dbg !4502
  call void @glNormal3fv(float* %arraydecay200), !dbg !4504
  br label %if.end209, !dbg !4504

if.else201:                                       ; preds = %if.end192
  %133 = load [3 x float]*, [3 x float]** %vertexNos, align 8, !dbg !4505
  %134 = load %struct.BMLoop**, %struct.BMLoop*** %ltri, align 8, !dbg !4506
  %arrayidx202 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %134, i64 0, !dbg !4506
  %135 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx202, align 8, !dbg !4506
  %v203 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %135, i32 0, i32 1, !dbg !4506
  %136 = load %struct.BMVert*, %struct.BMVert** %v203, align 8, !dbg !4506
  %head204 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %136, i32 0, i32 0, !dbg !4506
  %call205 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head204), !dbg !4506
  %idxprom206 = sext i32 %call205 to i64, !dbg !4505
  %arrayidx207 = getelementptr inbounds [3 x float], [3 x float]* %133, i64 %idxprom206, !dbg !4505
  %arraydecay208 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx207, i64 0, i64 0, !dbg !4505
  call void @glNormal3fv(float* %arraydecay208), !dbg !4507
  br label %if.end209

if.end209:                                        ; preds = %if.else201, %if.then194
  %137 = load [3 x float]*, [3 x float]** %vertexCos32, align 8, !dbg !4508
  %138 = load %struct.BMLoop**, %struct.BMLoop*** %ltri, align 8, !dbg !4509
  %arrayidx210 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %138, i64 0, !dbg !4509
  %139 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx210, align 8, !dbg !4509
  %v211 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %139, i32 0, i32 1, !dbg !4509
  %140 = load %struct.BMVert*, %struct.BMVert** %v211, align 8, !dbg !4509
  %head212 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %140, i32 0, i32 0, !dbg !4509
  %call213 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head212), !dbg !4509
  %idxprom214 = sext i32 %call213 to i64, !dbg !4508
  %arrayidx215 = getelementptr inbounds [3 x float], [3 x float]* %137, i64 %idxprom214, !dbg !4508
  %arraydecay216 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx215, i64 0, i64 0, !dbg !4508
  call void @glVertex3fv(float* %arraydecay216), !dbg !4510
  %141 = load i8, i8* %has_vcol_any, align 1, !dbg !4511
  %tobool217 = icmp ne i8 %141, 0, !dbg !4511
  br i1 %tobool217, label %if.then218, label %if.end221, !dbg !4513

if.then218:                                       ; preds = %if.end209
  %arrayidx219 = getelementptr inbounds [3 x %struct.MLoopCol*], [3 x %struct.MLoopCol*]* %lcol, i64 0, i64 1, !dbg !4514
  %142 = load %struct.MLoopCol*, %struct.MLoopCol** %arrayidx219, align 8, !dbg !4514
  %r220 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %142, i32 0, i32 0, !dbg !4515
  call void @glColor3ubv(i8* %r220), !dbg !4516
  br label %if.end221, !dbg !4516

if.end221:                                        ; preds = %if.then218, %if.end209
  %143 = load [3 x float]*, [3 x float]** %lnors, align 8, !dbg !4517
  %tobool222 = icmp ne [3 x float]* %143, null, !dbg !4517
  br i1 %tobool222, label %if.then223, label %if.else230, !dbg !4519

if.then223:                                       ; preds = %if.end221
  %144 = load [3 x float]*, [3 x float]** %lnors, align 8, !dbg !4520
  %145 = load %struct.BMLoop**, %struct.BMLoop*** %ltri, align 8, !dbg !4521
  %arrayidx224 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %145, i64 1, !dbg !4521
  %146 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx224, align 8, !dbg !4521
  %head225 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %146, i32 0, i32 0, !dbg !4521
  %call226 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head225), !dbg !4521
  %idxprom227 = sext i32 %call226 to i64, !dbg !4520
  %arrayidx228 = getelementptr inbounds [3 x float], [3 x float]* %144, i64 %idxprom227, !dbg !4520
  %arraydecay229 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx228, i64 0, i64 0, !dbg !4520
  call void @glNormal3fv(float* %arraydecay229), !dbg !4522
  br label %if.end238, !dbg !4522

if.else230:                                       ; preds = %if.end221
  %147 = load [3 x float]*, [3 x float]** %vertexNos, align 8, !dbg !4523
  %148 = load %struct.BMLoop**, %struct.BMLoop*** %ltri, align 8, !dbg !4524
  %arrayidx231 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %148, i64 1, !dbg !4524
  %149 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx231, align 8, !dbg !4524
  %v232 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %149, i32 0, i32 1, !dbg !4524
  %150 = load %struct.BMVert*, %struct.BMVert** %v232, align 8, !dbg !4524
  %head233 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %150, i32 0, i32 0, !dbg !4524
  %call234 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head233), !dbg !4524
  %idxprom235 = sext i32 %call234 to i64, !dbg !4523
  %arrayidx236 = getelementptr inbounds [3 x float], [3 x float]* %147, i64 %idxprom235, !dbg !4523
  %arraydecay237 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx236, i64 0, i64 0, !dbg !4523
  call void @glNormal3fv(float* %arraydecay237), !dbg !4525
  br label %if.end238

if.end238:                                        ; preds = %if.else230, %if.then223
  %151 = load [3 x float]*, [3 x float]** %vertexCos32, align 8, !dbg !4526
  %152 = load %struct.BMLoop**, %struct.BMLoop*** %ltri, align 8, !dbg !4527
  %arrayidx239 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %152, i64 1, !dbg !4527
  %153 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx239, align 8, !dbg !4527
  %v240 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %153, i32 0, i32 1, !dbg !4527
  %154 = load %struct.BMVert*, %struct.BMVert** %v240, align 8, !dbg !4527
  %head241 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %154, i32 0, i32 0, !dbg !4527
  %call242 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head241), !dbg !4527
  %idxprom243 = sext i32 %call242 to i64, !dbg !4526
  %arrayidx244 = getelementptr inbounds [3 x float], [3 x float]* %151, i64 %idxprom243, !dbg !4526
  %arraydecay245 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx244, i64 0, i64 0, !dbg !4526
  call void @glVertex3fv(float* %arraydecay245), !dbg !4528
  %155 = load i8, i8* %has_vcol_any, align 1, !dbg !4529
  %tobool246 = icmp ne i8 %155, 0, !dbg !4529
  br i1 %tobool246, label %if.then247, label %if.end250, !dbg !4531

if.then247:                                       ; preds = %if.end238
  %arrayidx248 = getelementptr inbounds [3 x %struct.MLoopCol*], [3 x %struct.MLoopCol*]* %lcol, i64 0, i64 2, !dbg !4532
  %156 = load %struct.MLoopCol*, %struct.MLoopCol** %arrayidx248, align 16, !dbg !4532
  %r249 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %156, i32 0, i32 0, !dbg !4533
  call void @glColor3ubv(i8* %r249), !dbg !4534
  br label %if.end250, !dbg !4534

if.end250:                                        ; preds = %if.then247, %if.end238
  %157 = load [3 x float]*, [3 x float]** %lnors, align 8, !dbg !4535
  %tobool251 = icmp ne [3 x float]* %157, null, !dbg !4535
  br i1 %tobool251, label %if.then252, label %if.else259, !dbg !4537

if.then252:                                       ; preds = %if.end250
  %158 = load [3 x float]*, [3 x float]** %lnors, align 8, !dbg !4538
  %159 = load %struct.BMLoop**, %struct.BMLoop*** %ltri, align 8, !dbg !4539
  %arrayidx253 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %159, i64 2, !dbg !4539
  %160 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx253, align 8, !dbg !4539
  %head254 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %160, i32 0, i32 0, !dbg !4539
  %call255 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head254), !dbg !4539
  %idxprom256 = sext i32 %call255 to i64, !dbg !4538
  %arrayidx257 = getelementptr inbounds [3 x float], [3 x float]* %158, i64 %idxprom256, !dbg !4538
  %arraydecay258 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx257, i64 0, i64 0, !dbg !4538
  call void @glNormal3fv(float* %arraydecay258), !dbg !4540
  br label %if.end267, !dbg !4540

if.else259:                                       ; preds = %if.end250
  %161 = load [3 x float]*, [3 x float]** %vertexNos, align 8, !dbg !4541
  %162 = load %struct.BMLoop**, %struct.BMLoop*** %ltri, align 8, !dbg !4542
  %arrayidx260 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %162, i64 2, !dbg !4542
  %163 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx260, align 8, !dbg !4542
  %v261 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %163, i32 0, i32 1, !dbg !4542
  %164 = load %struct.BMVert*, %struct.BMVert** %v261, align 8, !dbg !4542
  %head262 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %164, i32 0, i32 0, !dbg !4542
  %call263 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head262), !dbg !4542
  %idxprom264 = sext i32 %call263 to i64, !dbg !4541
  %arrayidx265 = getelementptr inbounds [3 x float], [3 x float]* %161, i64 %idxprom264, !dbg !4541
  %arraydecay266 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx265, i64 0, i64 0, !dbg !4541
  call void @glNormal3fv(float* %arraydecay266), !dbg !4543
  br label %if.end267

if.end267:                                        ; preds = %if.else259, %if.then252
  %165 = load [3 x float]*, [3 x float]** %vertexCos32, align 8, !dbg !4544
  %166 = load %struct.BMLoop**, %struct.BMLoop*** %ltri, align 8, !dbg !4545
  %arrayidx268 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %166, i64 2, !dbg !4545
  %167 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx268, align 8, !dbg !4545
  %v269 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %167, i32 0, i32 1, !dbg !4545
  %168 = load %struct.BMVert*, %struct.BMVert** %v269, align 8, !dbg !4545
  %head270 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %168, i32 0, i32 0, !dbg !4545
  %call271 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head270), !dbg !4545
  %idxprom272 = sext i32 %call271 to i64, !dbg !4544
  %arrayidx273 = getelementptr inbounds [3 x float], [3 x float]* %165, i64 %idxprom272, !dbg !4544
  %arraydecay274 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx273, i64 0, i64 0, !dbg !4544
  call void @glVertex3fv(float* %arraydecay274), !dbg !4546
  br label %if.end275

if.end275:                                        ; preds = %if.end267, %if.end179
  br label %if.end276

if.end276:                                        ; preds = %if.end275, %if.end117
  %169 = load i32, i32* %draw_option, align 4, !dbg !4547
  %cmp277 = icmp eq i32 %169, 3, !dbg !4548
  %conv278 = zext i1 %cmp277 to i32, !dbg !4548
  store i32 %conv278, i32* %flush, align 4, !dbg !4549
  %170 = load i32, i32* %skip_normals, align 4, !dbg !4550
  %tobool279 = icmp ne i32 %170, 0, !dbg !4550
  br i1 %tobool279, label %if.end295, label %land.lhs.true, !dbg !4552

land.lhs.true:                                    ; preds = %if.end276
  %171 = load i32, i32* %flush, align 4, !dbg !4553
  %tobool280 = icmp ne i32 %171, 0, !dbg !4553
  br i1 %tobool280, label %if.end295, label %land.lhs.true281, !dbg !4554

land.lhs.true281:                                 ; preds = %land.lhs.true
  %172 = load i32, i32* %i, align 4, !dbg !4555
  %173 = load i32, i32* %lasttri, align 4, !dbg !4556
  %cmp282 = icmp ne i32 %172, %173, !dbg !4557
  br i1 %cmp282, label %if.then284, label %if.end295, !dbg !4558

if.then284:                                       ; preds = %land.lhs.true281
  %174 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !4559
  %mat_nr = getelementptr inbounds %struct.BMFace, %struct.BMFace* %174, i32 0, i32 5, !dbg !4560
  %175 = load i16, i16* %mat_nr, align 8, !dbg !4560
  %conv285 = sext i16 %175 to i32, !dbg !4559
  %176 = load [3 x %struct.BMLoop*]*, [3 x %struct.BMLoop*]** %looptris, align 8, !dbg !4561
  %177 = load i32, i32* %i, align 4, !dbg !4562
  %add = add nsw i32 %177, 1, !dbg !4563
  %idxprom286 = sext i32 %add to i64, !dbg !4561
  %arrayidx287 = getelementptr inbounds [3 x %struct.BMLoop*], [3 x %struct.BMLoop*]* %176, i64 %idxprom286, !dbg !4561
  %arrayidx288 = getelementptr inbounds [3 x %struct.BMLoop*], [3 x %struct.BMLoop*]* %arrayidx287, i64 0, i64 0, !dbg !4561
  %178 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx288, align 8, !dbg !4561
  %f289 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %178, i32 0, i32 3, !dbg !4564
  %179 = load %struct.BMFace*, %struct.BMFace** %f289, align 8, !dbg !4564
  %mat_nr290 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %179, i32 0, i32 5, !dbg !4565
  %180 = load i16, i16* %mat_nr290, align 8, !dbg !4565
  %conv291 = sext i16 %180 to i32, !dbg !4561
  %cmp292 = icmp ne i32 %conv285, %conv291, !dbg !4566
  %conv293 = zext i1 %cmp292 to i32, !dbg !4566
  %181 = load i32, i32* %flush, align 4, !dbg !4567
  %or294 = or i32 %181, %conv293, !dbg !4567
  store i32 %or294, i32* %flush, align 4, !dbg !4567
  br label %if.end295, !dbg !4568

if.end295:                                        ; preds = %if.then284, %land.lhs.true281, %land.lhs.true, %if.end276
  %182 = load i32, i32* %flush, align 4, !dbg !4569
  %tobool296 = icmp ne i32 %182, 0, !dbg !4569
  br i1 %tobool296, label %if.then297, label %if.end298, !dbg !4571

if.then297:                                       ; preds = %if.end295
  call void @glEnd(), !dbg !4572
  store i32 0, i32* %poly_prev, align 4, !dbg !4574
  call void @glDisable(i32 2882), !dbg !4575
  br label %if.end298, !dbg !4576

if.end298:                                        ; preds = %if.then297, %if.end295
  br label %if.end299, !dbg !4577

if.end299:                                        ; preds = %if.end298, %cond.end56
  br label %for.inc, !dbg !4578

for.inc:                                          ; preds = %if.end299
  %183 = load i32, i32* %i, align 4, !dbg !4579
  %inc = add nsw i32 %183, 1, !dbg !4579
  store i32 %inc, i32* %i, align 4, !dbg !4579
  br label %for.cond, !dbg !4580, !llvm.loop !4581

for.end:                                          ; preds = %for.cond
  br label %if.end548, !dbg !4583

if.else300:                                       ; preds = %if.end29
  %184 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !4584
  %185 = load [3 x float]*, [3 x float]** %lnors, align 8, !dbg !4586
  %tobool301 = icmp ne [3 x float]* %185, null, !dbg !4586
  %186 = zext i1 %tobool301 to i64, !dbg !4586
  %cond302 = select i1 %tobool301, i32 12, i32 8, !dbg !4586
  %conv303 = trunc i32 %cond302 to i8, !dbg !4586
  call void @BM_mesh_elem_index_ensure(%struct.BMesh* %184, i8 zeroext %conv303), !dbg !4587
  store i32 0, i32* %i, align 4, !dbg !4588
  br label %for.cond304, !dbg !4590

for.cond304:                                      ; preds = %for.inc545, %if.else300
  %187 = load i32, i32* %i, align 4, !dbg !4591
  %188 = load i32, i32* %tottri, align 4, !dbg !4593
  %cmp305 = icmp slt i32 %187, %188, !dbg !4594
  br i1 %cmp305, label %for.body307, label %for.end547, !dbg !4595

for.body307:                                      ; preds = %for.cond304
  call void @llvm.dbg.declare(metadata %struct.BMLoop*** %ltri308, metadata !4596, metadata !DIExpression()), !dbg !4598
  %189 = load [3 x %struct.BMLoop*]*, [3 x %struct.BMLoop*]** %looptris, align 8, !dbg !4599
  %190 = load i32, i32* %i, align 4, !dbg !4600
  %idxprom309 = sext i32 %190 to i64, !dbg !4599
  %arrayidx310 = getelementptr inbounds [3 x %struct.BMLoop*], [3 x %struct.BMLoop*]* %189, i64 %idxprom309, !dbg !4599
  %arraydecay311 = getelementptr inbounds [3 x %struct.BMLoop*], [3 x %struct.BMLoop*]* %arrayidx310, i64 0, i64 0, !dbg !4599
  store %struct.BMLoop** %arraydecay311, %struct.BMLoop*** %ltri308, align 8, !dbg !4598
  call void @llvm.dbg.declare(metadata i32* %drawSmooth312, metadata !4601, metadata !DIExpression()), !dbg !4602
  %191 = load %struct.BMLoop**, %struct.BMLoop*** %ltri308, align 8, !dbg !4603
  %arrayidx313 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %191, i64 0, !dbg !4603
  %192 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx313, align 8, !dbg !4603
  %f314 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %192, i32 0, i32 3, !dbg !4604
  %193 = load %struct.BMFace*, %struct.BMFace** %f314, align 8, !dbg !4604
  store %struct.BMFace* %193, %struct.BMFace** %efa, align 8, !dbg !4605
  %194 = load [3 x float]*, [3 x float]** %lnors, align 8, !dbg !4606
  %tobool315 = icmp ne [3 x float]* %194, null, !dbg !4606
  br i1 %tobool315, label %lor.end327, label %lor.rhs316, !dbg !4607

lor.rhs316:                                       ; preds = %for.body307
  %195 = load i32, i32* %flag.addr, align 4, !dbg !4608
  %and317 = and i32 %195, 2, !dbg !4609
  %tobool318 = icmp ne i32 %and317, 0, !dbg !4609
  br i1 %tobool318, label %cond.true319, label %cond.false320, !dbg !4610

cond.true319:                                     ; preds = %lor.rhs316
  br label %cond.end324, !dbg !4610

cond.false320:                                    ; preds = %lor.rhs316
  %196 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !4611
  %head321 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %196, i32 0, i32 0, !dbg !4611
  %call322 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head321, i8 zeroext 8), !dbg !4611
  %conv323 = zext i8 %call322 to i32, !dbg !4611
  br label %cond.end324, !dbg !4610

cond.end324:                                      ; preds = %cond.false320, %cond.true319
  %cond325 = phi i32 [ 1, %cond.true319 ], [ %conv323, %cond.false320 ], !dbg !4610
  %tobool326 = icmp ne i32 %cond325, 0, !dbg !4607
  br label %lor.end327, !dbg !4607

lor.end327:                                       ; preds = %cond.end324, %for.body307
  %197 = phi i1 [ true, %for.body307 ], [ %tobool326, %cond.end324 ]
  %lor.ext328 = zext i1 %197 to i32, !dbg !4607
  store i32 %lor.ext328, i32* %drawSmooth312, align 4, !dbg !4612
  %198 = load i32 (i8*, i32)*, i32 (i8*, i32)** %setDrawOptions.addr, align 8, !dbg !4613
  %tobool329 = icmp ne i32 (i8*, i32)* %198, null, !dbg !4613
  br i1 %tobool329, label %cond.false331, label %cond.true330, !dbg !4614

cond.true330:                                     ; preds = %lor.end327
  br label %cond.end335, !dbg !4614

cond.false331:                                    ; preds = %lor.end327
  %199 = load i32 (i8*, i32)*, i32 (i8*, i32)** %setDrawOptions.addr, align 8, !dbg !4615
  %200 = load i8*, i8** %userData.addr, align 8, !dbg !4616
  %201 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !4617
  %head332 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %201, i32 0, i32 0, !dbg !4617
  %call333 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head332), !dbg !4617
  %call334 = call i32 %199(i8* %200, i32 %call333), !dbg !4615
  br label %cond.end335, !dbg !4614

cond.end335:                                      ; preds = %cond.false331, %cond.true330
  %cond336 = phi i32 [ 1, %cond.true330 ], [ %call334, %cond.false331 ], !dbg !4614
  store i32 %cond336, i32* %draw_option, align 4, !dbg !4618
  %202 = load i32, i32* %draw_option, align 4, !dbg !4619
  %cmp337 = icmp ne i32 %202, 0, !dbg !4621
  br i1 %cmp337, label %if.then339, label %if.end544, !dbg !4622

if.then339:                                       ; preds = %cond.end335
  call void @llvm.dbg.declare(metadata i32* %poly_type340, metadata !4623, metadata !DIExpression()), !dbg !4625
  store i32 4, i32* %poly_type340, align 4, !dbg !4625
  %203 = load i32, i32* %draw_option, align 4, !dbg !4626
  %cmp341 = icmp eq i32 %203, 3, !dbg !4628
  br i1 %cmp341, label %if.then343, label %if.end348, !dbg !4629

if.then343:                                       ; preds = %if.then339
  %204 = load i32, i32* %poly_prev, align 4, !dbg !4630
  %cmp344 = icmp ne i32 %204, 0, !dbg !4633
  br i1 %cmp344, label %if.then346, label %if.end347, !dbg !4634

if.then346:                                       ; preds = %if.then343
  call void @glEnd(), !dbg !4635
  br label %if.end347, !dbg !4635

if.end347:                                        ; preds = %if.then346, %if.then343
  store i32 0, i32* %poly_prev, align 4, !dbg !4636
  call void @glEnable(i32 2882), !dbg !4637
  call void @glPolygonStipple(i8* getelementptr inbounds ([128 x i8], [128 x i8]* @stipple_quarttone, i64 0, i64 0)), !dbg !4638
  br label %if.end348, !dbg !4639

if.end348:                                        ; preds = %if.end347, %if.then339
  %205 = load i8, i8* %has_vcol_preview, align 1, !dbg !4640
  %tobool349 = icmp ne i8 %205, 0, !dbg !4640
  br i1 %tobool349, label %if.then350, label %if.else352, !dbg !4642

if.then350:                                       ; preds = %if.end348
  %206 = load %struct.BMLoop**, %struct.BMLoop*** %ltri308, align 8, !dbg !4643
  %arraydecay351 = getelementptr inbounds [3 x %struct.MLoopCol*], [3 x %struct.MLoopCol*]* %lcol, i64 0, i64 0, !dbg !4644
  %207 = load [4 x i8]*, [4 x i8]** %color_vert_array, align 8, !dbg !4645
  call void @bmdm_get_tri_colpreview(%struct.BMLoop** %206, %struct.MLoopCol** %arraydecay351, [4 x i8]* %207), !dbg !4646
  br label %if.end360, !dbg !4646

if.else352:                                       ; preds = %if.end348
  %208 = load i8, i8* %has_fcol_preview, align 1, !dbg !4647
  %tobool353 = icmp ne i8 %208, 0, !dbg !4647
  br i1 %tobool353, label %if.then354, label %if.end359, !dbg !4649

if.then354:                                       ; preds = %if.else352
  %209 = load [4 x i8]*, [4 x i8]** %color_face_array, align 8, !dbg !4650
  %210 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !4651
  %head355 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %210, i32 0, i32 0, !dbg !4651
  %call356 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head355), !dbg !4651
  %idxprom357 = sext i32 %call356 to i64, !dbg !4650
  %arrayidx358 = getelementptr inbounds [4 x i8], [4 x i8]* %209, i64 %idxprom357, !dbg !4650
  %211 = bitcast [4 x i8]* %arrayidx358 to i8*, !dbg !4652
  call void @glColor3ubv(i8* %211), !dbg !4653
  br label %if.end359, !dbg !4653

if.end359:                                        ; preds = %if.then354, %if.else352
  br label %if.end360

if.end360:                                        ; preds = %if.end359, %if.then350
  %212 = load i32, i32* %skip_normals, align 4, !dbg !4654
  %tobool361 = icmp ne i32 %212, 0, !dbg !4654
  br i1 %tobool361, label %if.then362, label %if.else397, !dbg !4656

if.then362:                                       ; preds = %if.end360
  %213 = load i32, i32* %poly_prev, align 4, !dbg !4657
  %cmp363 = icmp ne i32 4, %213, !dbg !4660
  br i1 %cmp363, label %if.then365, label %if.end370, !dbg !4661

if.then365:                                       ; preds = %if.then362
  %214 = load i32, i32* %poly_prev, align 4, !dbg !4662
  %cmp366 = icmp ne i32 %214, 0, !dbg !4665
  br i1 %cmp366, label %if.then368, label %if.end369, !dbg !4666

if.then368:                                       ; preds = %if.then365
  call void @glEnd(), !dbg !4667
  br label %if.end369, !dbg !4667

if.end369:                                        ; preds = %if.then368, %if.then365
  store i32 4, i32* %poly_prev, align 4, !dbg !4668
  call void @glBegin(i32 4), !dbg !4669
  br label %if.end370, !dbg !4670

if.end370:                                        ; preds = %if.end369, %if.then362
  %215 = load i8, i8* %has_vcol_any, align 1, !dbg !4671
  %tobool371 = icmp ne i8 %215, 0, !dbg !4671
  br i1 %tobool371, label %if.then372, label %if.end375, !dbg !4673

if.then372:                                       ; preds = %if.end370
  %arrayidx373 = getelementptr inbounds [3 x %struct.MLoopCol*], [3 x %struct.MLoopCol*]* %lcol, i64 0, i64 0, !dbg !4674
  %216 = load %struct.MLoopCol*, %struct.MLoopCol** %arrayidx373, align 16, !dbg !4674
  %r374 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %216, i32 0, i32 0, !dbg !4675
  call void @glColor3ubv(i8* %r374), !dbg !4676
  br label %if.end375, !dbg !4676

if.end375:                                        ; preds = %if.then372, %if.end370
  %217 = load %struct.BMLoop**, %struct.BMLoop*** %ltri308, align 8, !dbg !4677
  %arrayidx376 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %217, i64 0, !dbg !4677
  %218 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx376, align 8, !dbg !4677
  %v377 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %218, i32 0, i32 1, !dbg !4678
  %219 = load %struct.BMVert*, %struct.BMVert** %v377, align 8, !dbg !4678
  %co = getelementptr inbounds %struct.BMVert, %struct.BMVert* %219, i32 0, i32 2, !dbg !4679
  %arraydecay378 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !4677
  call void @glVertex3fv(float* %arraydecay378), !dbg !4680
  %220 = load i8, i8* %has_vcol_any, align 1, !dbg !4681
  %tobool379 = icmp ne i8 %220, 0, !dbg !4681
  br i1 %tobool379, label %if.then380, label %if.end383, !dbg !4683

if.then380:                                       ; preds = %if.end375
  %arrayidx381 = getelementptr inbounds [3 x %struct.MLoopCol*], [3 x %struct.MLoopCol*]* %lcol, i64 0, i64 1, !dbg !4684
  %221 = load %struct.MLoopCol*, %struct.MLoopCol** %arrayidx381, align 8, !dbg !4684
  %r382 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %221, i32 0, i32 0, !dbg !4685
  call void @glColor3ubv(i8* %r382), !dbg !4686
  br label %if.end383, !dbg !4686

if.end383:                                        ; preds = %if.then380, %if.end375
  %222 = load %struct.BMLoop**, %struct.BMLoop*** %ltri308, align 8, !dbg !4687
  %arrayidx384 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %222, i64 1, !dbg !4687
  %223 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx384, align 8, !dbg !4687
  %v385 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %223, i32 0, i32 1, !dbg !4688
  %224 = load %struct.BMVert*, %struct.BMVert** %v385, align 8, !dbg !4688
  %co386 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %224, i32 0, i32 2, !dbg !4689
  %arraydecay387 = getelementptr inbounds [3 x float], [3 x float]* %co386, i64 0, i64 0, !dbg !4687
  call void @glVertex3fv(float* %arraydecay387), !dbg !4690
  %225 = load i8, i8* %has_vcol_any, align 1, !dbg !4691
  %tobool388 = icmp ne i8 %225, 0, !dbg !4691
  br i1 %tobool388, label %if.then389, label %if.end392, !dbg !4693

if.then389:                                       ; preds = %if.end383
  %arrayidx390 = getelementptr inbounds [3 x %struct.MLoopCol*], [3 x %struct.MLoopCol*]* %lcol, i64 0, i64 2, !dbg !4694
  %226 = load %struct.MLoopCol*, %struct.MLoopCol** %arrayidx390, align 16, !dbg !4694
  %r391 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %226, i32 0, i32 0, !dbg !4695
  call void @glColor3ubv(i8* %r391), !dbg !4696
  br label %if.end392, !dbg !4696

if.end392:                                        ; preds = %if.then389, %if.end383
  %227 = load %struct.BMLoop**, %struct.BMLoop*** %ltri308, align 8, !dbg !4697
  %arrayidx393 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %227, i64 2, !dbg !4697
  %228 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx393, align 8, !dbg !4697
  %v394 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %228, i32 0, i32 1, !dbg !4698
  %229 = load %struct.BMVert*, %struct.BMVert** %v394, align 8, !dbg !4698
  %co395 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %229, i32 0, i32 2, !dbg !4699
  %arraydecay396 = getelementptr inbounds [3 x float], [3 x float]* %co395, i64 0, i64 0, !dbg !4697
  call void @glVertex3fv(float* %arraydecay396), !dbg !4700
  br label %if.end518, !dbg !4701

if.else397:                                       ; preds = %if.end360
  call void @llvm.dbg.declare(metadata i32* %shade_type398, metadata !4702, metadata !DIExpression()), !dbg !4704
  %230 = load i32, i32* %drawSmooth312, align 4, !dbg !4705
  %tobool399 = icmp ne i32 %230, 0, !dbg !4705
  %231 = zext i1 %tobool399 to i64, !dbg !4705
  %cond400 = select i1 %tobool399, i32 7425, i32 7424, !dbg !4705
  store i32 %cond400, i32* %shade_type398, align 4, !dbg !4704
  %232 = load i32, i32* %shade_type398, align 4, !dbg !4706
  %233 = load i32, i32* %shade_prev, align 4, !dbg !4708
  %cmp401 = icmp ne i32 %232, %233, !dbg !4709
  br i1 %cmp401, label %if.then403, label %if.end408, !dbg !4710

if.then403:                                       ; preds = %if.else397
  %234 = load i32, i32* %poly_prev, align 4, !dbg !4711
  %cmp404 = icmp ne i32 %234, 0, !dbg !4714
  br i1 %cmp404, label %if.then406, label %if.end407, !dbg !4715

if.then406:                                       ; preds = %if.then403
  call void @glEnd(), !dbg !4716
  br label %if.end407, !dbg !4716

if.end407:                                        ; preds = %if.then406, %if.then403
  %235 = load i32, i32* %shade_type398, align 4, !dbg !4717
  store i32 %235, i32* %shade_prev, align 4, !dbg !4718
  call void @glShadeModel(i32 %235), !dbg !4719
  store i32 4, i32* %poly_prev, align 4, !dbg !4720
  call void @glBegin(i32 4), !dbg !4721
  br label %if.end408, !dbg !4722

if.end408:                                        ; preds = %if.end407, %if.else397
  %236 = load i32, i32* %poly_prev, align 4, !dbg !4723
  %cmp409 = icmp ne i32 4, %236, !dbg !4725
  br i1 %cmp409, label %if.then411, label %if.end416, !dbg !4726

if.then411:                                       ; preds = %if.end408
  %237 = load i32, i32* %poly_prev, align 4, !dbg !4727
  %cmp412 = icmp ne i32 %237, 0, !dbg !4730
  br i1 %cmp412, label %if.then414, label %if.end415, !dbg !4731

if.then414:                                       ; preds = %if.then411
  call void @glEnd(), !dbg !4732
  br label %if.end415, !dbg !4732

if.end415:                                        ; preds = %if.then414, %if.then411
  store i32 4, i32* %poly_prev, align 4, !dbg !4733
  call void @glBegin(i32 4), !dbg !4734
  br label %if.end416, !dbg !4735

if.end416:                                        ; preds = %if.end415, %if.end408
  %238 = load i32, i32* %drawSmooth312, align 4, !dbg !4736
  %tobool417 = icmp ne i32 %238, 0, !dbg !4736
  br i1 %tobool417, label %if.else447, label %if.then418, !dbg !4738

if.then418:                                       ; preds = %if.end416
  %239 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !4739
  %no = getelementptr inbounds %struct.BMFace, %struct.BMFace* %239, i32 0, i32 4, !dbg !4741
  %arraydecay419 = getelementptr inbounds [3 x float], [3 x float]* %no, i64 0, i64 0, !dbg !4739
  call void @glNormal3fv(float* %arraydecay419), !dbg !4742
  %240 = load i8, i8* %has_vcol_any, align 1, !dbg !4743
  %tobool420 = icmp ne i8 %240, 0, !dbg !4743
  br i1 %tobool420, label %if.then421, label %if.end424, !dbg !4745

if.then421:                                       ; preds = %if.then418
  %arrayidx422 = getelementptr inbounds [3 x %struct.MLoopCol*], [3 x %struct.MLoopCol*]* %lcol, i64 0, i64 0, !dbg !4746
  %241 = load %struct.MLoopCol*, %struct.MLoopCol** %arrayidx422, align 16, !dbg !4746
  %r423 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %241, i32 0, i32 0, !dbg !4747
  call void @glColor3ubv(i8* %r423), !dbg !4748
  br label %if.end424, !dbg !4748

if.end424:                                        ; preds = %if.then421, %if.then418
  %242 = load %struct.BMLoop**, %struct.BMLoop*** %ltri308, align 8, !dbg !4749
  %arrayidx425 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %242, i64 0, !dbg !4749
  %243 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx425, align 8, !dbg !4749
  %v426 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %243, i32 0, i32 1, !dbg !4750
  %244 = load %struct.BMVert*, %struct.BMVert** %v426, align 8, !dbg !4750
  %co427 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %244, i32 0, i32 2, !dbg !4751
  %arraydecay428 = getelementptr inbounds [3 x float], [3 x float]* %co427, i64 0, i64 0, !dbg !4749
  call void @glVertex3fv(float* %arraydecay428), !dbg !4752
  %245 = load i8, i8* %has_vcol_any, align 1, !dbg !4753
  %tobool429 = icmp ne i8 %245, 0, !dbg !4753
  br i1 %tobool429, label %if.then430, label %if.end433, !dbg !4755

if.then430:                                       ; preds = %if.end424
  %arrayidx431 = getelementptr inbounds [3 x %struct.MLoopCol*], [3 x %struct.MLoopCol*]* %lcol, i64 0, i64 1, !dbg !4756
  %246 = load %struct.MLoopCol*, %struct.MLoopCol** %arrayidx431, align 8, !dbg !4756
  %r432 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %246, i32 0, i32 0, !dbg !4757
  call void @glColor3ubv(i8* %r432), !dbg !4758
  br label %if.end433, !dbg !4758

if.end433:                                        ; preds = %if.then430, %if.end424
  %247 = load %struct.BMLoop**, %struct.BMLoop*** %ltri308, align 8, !dbg !4759
  %arrayidx434 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %247, i64 1, !dbg !4759
  %248 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx434, align 8, !dbg !4759
  %v435 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %248, i32 0, i32 1, !dbg !4760
  %249 = load %struct.BMVert*, %struct.BMVert** %v435, align 8, !dbg !4760
  %co436 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %249, i32 0, i32 2, !dbg !4761
  %arraydecay437 = getelementptr inbounds [3 x float], [3 x float]* %co436, i64 0, i64 0, !dbg !4759
  call void @glVertex3fv(float* %arraydecay437), !dbg !4762
  %250 = load i8, i8* %has_vcol_any, align 1, !dbg !4763
  %tobool438 = icmp ne i8 %250, 0, !dbg !4763
  br i1 %tobool438, label %if.then439, label %if.end442, !dbg !4765

if.then439:                                       ; preds = %if.end433
  %arrayidx440 = getelementptr inbounds [3 x %struct.MLoopCol*], [3 x %struct.MLoopCol*]* %lcol, i64 0, i64 2, !dbg !4766
  %251 = load %struct.MLoopCol*, %struct.MLoopCol** %arrayidx440, align 16, !dbg !4766
  %r441 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %251, i32 0, i32 0, !dbg !4767
  call void @glColor3ubv(i8* %r441), !dbg !4768
  br label %if.end442, !dbg !4768

if.end442:                                        ; preds = %if.then439, %if.end433
  %252 = load %struct.BMLoop**, %struct.BMLoop*** %ltri308, align 8, !dbg !4769
  %arrayidx443 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %252, i64 2, !dbg !4769
  %253 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx443, align 8, !dbg !4769
  %v444 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %253, i32 0, i32 1, !dbg !4770
  %254 = load %struct.BMVert*, %struct.BMVert** %v444, align 8, !dbg !4770
  %co445 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %254, i32 0, i32 2, !dbg !4771
  %arraydecay446 = getelementptr inbounds [3 x float], [3 x float]* %co445, i64 0, i64 0, !dbg !4769
  call void @glVertex3fv(float* %arraydecay446), !dbg !4772
  br label %if.end517, !dbg !4773

if.else447:                                       ; preds = %if.end416
  %255 = load i8, i8* %has_vcol_any, align 1, !dbg !4774
  %tobool448 = icmp ne i8 %255, 0, !dbg !4774
  br i1 %tobool448, label %if.then449, label %if.end452, !dbg !4777

if.then449:                                       ; preds = %if.else447
  %arrayidx450 = getelementptr inbounds [3 x %struct.MLoopCol*], [3 x %struct.MLoopCol*]* %lcol, i64 0, i64 0, !dbg !4778
  %256 = load %struct.MLoopCol*, %struct.MLoopCol** %arrayidx450, align 16, !dbg !4778
  %r451 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %256, i32 0, i32 0, !dbg !4779
  call void @glColor3ubv(i8* %r451), !dbg !4780
  br label %if.end452, !dbg !4780

if.end452:                                        ; preds = %if.then449, %if.else447
  %257 = load [3 x float]*, [3 x float]** %lnors, align 8, !dbg !4781
  %tobool453 = icmp ne [3 x float]* %257, null, !dbg !4781
  br i1 %tobool453, label %if.then454, label %if.else461, !dbg !4783

if.then454:                                       ; preds = %if.end452
  %258 = load [3 x float]*, [3 x float]** %lnors, align 8, !dbg !4784
  %259 = load %struct.BMLoop**, %struct.BMLoop*** %ltri308, align 8, !dbg !4785
  %arrayidx455 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %259, i64 0, !dbg !4785
  %260 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx455, align 8, !dbg !4785
  %head456 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %260, i32 0, i32 0, !dbg !4785
  %call457 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head456), !dbg !4785
  %idxprom458 = sext i32 %call457 to i64, !dbg !4784
  %arrayidx459 = getelementptr inbounds [3 x float], [3 x float]* %258, i64 %idxprom458, !dbg !4784
  %arraydecay460 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx459, i64 0, i64 0, !dbg !4784
  call void @glNormal3fv(float* %arraydecay460), !dbg !4786
  br label %if.end466, !dbg !4786

if.else461:                                       ; preds = %if.end452
  %261 = load %struct.BMLoop**, %struct.BMLoop*** %ltri308, align 8, !dbg !4787
  %arrayidx462 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %261, i64 0, !dbg !4787
  %262 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx462, align 8, !dbg !4787
  %v463 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %262, i32 0, i32 1, !dbg !4788
  %263 = load %struct.BMVert*, %struct.BMVert** %v463, align 8, !dbg !4788
  %no464 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %263, i32 0, i32 3, !dbg !4789
  %arraydecay465 = getelementptr inbounds [3 x float], [3 x float]* %no464, i64 0, i64 0, !dbg !4787
  call void @glNormal3fv(float* %arraydecay465), !dbg !4790
  br label %if.end466

if.end466:                                        ; preds = %if.else461, %if.then454
  %264 = load %struct.BMLoop**, %struct.BMLoop*** %ltri308, align 8, !dbg !4791
  %arrayidx467 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %264, i64 0, !dbg !4791
  %265 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx467, align 8, !dbg !4791
  %v468 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %265, i32 0, i32 1, !dbg !4792
  %266 = load %struct.BMVert*, %struct.BMVert** %v468, align 8, !dbg !4792
  %co469 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %266, i32 0, i32 2, !dbg !4793
  %arraydecay470 = getelementptr inbounds [3 x float], [3 x float]* %co469, i64 0, i64 0, !dbg !4791
  call void @glVertex3fv(float* %arraydecay470), !dbg !4794
  %267 = load i8, i8* %has_vcol_any, align 1, !dbg !4795
  %tobool471 = icmp ne i8 %267, 0, !dbg !4795
  br i1 %tobool471, label %if.then472, label %if.end475, !dbg !4797

if.then472:                                       ; preds = %if.end466
  %arrayidx473 = getelementptr inbounds [3 x %struct.MLoopCol*], [3 x %struct.MLoopCol*]* %lcol, i64 0, i64 1, !dbg !4798
  %268 = load %struct.MLoopCol*, %struct.MLoopCol** %arrayidx473, align 8, !dbg !4798
  %r474 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %268, i32 0, i32 0, !dbg !4799
  call void @glColor3ubv(i8* %r474), !dbg !4800
  br label %if.end475, !dbg !4800

if.end475:                                        ; preds = %if.then472, %if.end466
  %269 = load [3 x float]*, [3 x float]** %lnors, align 8, !dbg !4801
  %tobool476 = icmp ne [3 x float]* %269, null, !dbg !4801
  br i1 %tobool476, label %if.then477, label %if.else484, !dbg !4803

if.then477:                                       ; preds = %if.end475
  %270 = load [3 x float]*, [3 x float]** %lnors, align 8, !dbg !4804
  %271 = load %struct.BMLoop**, %struct.BMLoop*** %ltri308, align 8, !dbg !4805
  %arrayidx478 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %271, i64 1, !dbg !4805
  %272 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx478, align 8, !dbg !4805
  %head479 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %272, i32 0, i32 0, !dbg !4805
  %call480 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head479), !dbg !4805
  %idxprom481 = sext i32 %call480 to i64, !dbg !4804
  %arrayidx482 = getelementptr inbounds [3 x float], [3 x float]* %270, i64 %idxprom481, !dbg !4804
  %arraydecay483 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx482, i64 0, i64 0, !dbg !4804
  call void @glNormal3fv(float* %arraydecay483), !dbg !4806
  br label %if.end489, !dbg !4806

if.else484:                                       ; preds = %if.end475
  %273 = load %struct.BMLoop**, %struct.BMLoop*** %ltri308, align 8, !dbg !4807
  %arrayidx485 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %273, i64 1, !dbg !4807
  %274 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx485, align 8, !dbg !4807
  %v486 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %274, i32 0, i32 1, !dbg !4808
  %275 = load %struct.BMVert*, %struct.BMVert** %v486, align 8, !dbg !4808
  %no487 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %275, i32 0, i32 3, !dbg !4809
  %arraydecay488 = getelementptr inbounds [3 x float], [3 x float]* %no487, i64 0, i64 0, !dbg !4807
  call void @glNormal3fv(float* %arraydecay488), !dbg !4810
  br label %if.end489

if.end489:                                        ; preds = %if.else484, %if.then477
  %276 = load %struct.BMLoop**, %struct.BMLoop*** %ltri308, align 8, !dbg !4811
  %arrayidx490 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %276, i64 1, !dbg !4811
  %277 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx490, align 8, !dbg !4811
  %v491 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %277, i32 0, i32 1, !dbg !4812
  %278 = load %struct.BMVert*, %struct.BMVert** %v491, align 8, !dbg !4812
  %co492 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %278, i32 0, i32 2, !dbg !4813
  %arraydecay493 = getelementptr inbounds [3 x float], [3 x float]* %co492, i64 0, i64 0, !dbg !4811
  call void @glVertex3fv(float* %arraydecay493), !dbg !4814
  %279 = load i8, i8* %has_vcol_any, align 1, !dbg !4815
  %tobool494 = icmp ne i8 %279, 0, !dbg !4815
  br i1 %tobool494, label %if.then495, label %if.end498, !dbg !4817

if.then495:                                       ; preds = %if.end489
  %arrayidx496 = getelementptr inbounds [3 x %struct.MLoopCol*], [3 x %struct.MLoopCol*]* %lcol, i64 0, i64 2, !dbg !4818
  %280 = load %struct.MLoopCol*, %struct.MLoopCol** %arrayidx496, align 16, !dbg !4818
  %r497 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %280, i32 0, i32 0, !dbg !4819
  call void @glColor3ubv(i8* %r497), !dbg !4820
  br label %if.end498, !dbg !4820

if.end498:                                        ; preds = %if.then495, %if.end489
  %281 = load [3 x float]*, [3 x float]** %lnors, align 8, !dbg !4821
  %tobool499 = icmp ne [3 x float]* %281, null, !dbg !4821
  br i1 %tobool499, label %if.then500, label %if.else507, !dbg !4823

if.then500:                                       ; preds = %if.end498
  %282 = load [3 x float]*, [3 x float]** %lnors, align 8, !dbg !4824
  %283 = load %struct.BMLoop**, %struct.BMLoop*** %ltri308, align 8, !dbg !4825
  %arrayidx501 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %283, i64 2, !dbg !4825
  %284 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx501, align 8, !dbg !4825
  %head502 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %284, i32 0, i32 0, !dbg !4825
  %call503 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head502), !dbg !4825
  %idxprom504 = sext i32 %call503 to i64, !dbg !4824
  %arrayidx505 = getelementptr inbounds [3 x float], [3 x float]* %282, i64 %idxprom504, !dbg !4824
  %arraydecay506 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx505, i64 0, i64 0, !dbg !4824
  call void @glNormal3fv(float* %arraydecay506), !dbg !4826
  br label %if.end512, !dbg !4826

if.else507:                                       ; preds = %if.end498
  %285 = load %struct.BMLoop**, %struct.BMLoop*** %ltri308, align 8, !dbg !4827
  %arrayidx508 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %285, i64 2, !dbg !4827
  %286 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx508, align 8, !dbg !4827
  %v509 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %286, i32 0, i32 1, !dbg !4828
  %287 = load %struct.BMVert*, %struct.BMVert** %v509, align 8, !dbg !4828
  %no510 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %287, i32 0, i32 3, !dbg !4829
  %arraydecay511 = getelementptr inbounds [3 x float], [3 x float]* %no510, i64 0, i64 0, !dbg !4827
  call void @glNormal3fv(float* %arraydecay511), !dbg !4830
  br label %if.end512

if.end512:                                        ; preds = %if.else507, %if.then500
  %288 = load %struct.BMLoop**, %struct.BMLoop*** %ltri308, align 8, !dbg !4831
  %arrayidx513 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %288, i64 2, !dbg !4831
  %289 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx513, align 8, !dbg !4831
  %v514 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %289, i32 0, i32 1, !dbg !4832
  %290 = load %struct.BMVert*, %struct.BMVert** %v514, align 8, !dbg !4832
  %co515 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %290, i32 0, i32 2, !dbg !4833
  %arraydecay516 = getelementptr inbounds [3 x float], [3 x float]* %co515, i64 0, i64 0, !dbg !4831
  call void @glVertex3fv(float* %arraydecay516), !dbg !4834
  br label %if.end517

if.end517:                                        ; preds = %if.end512, %if.end442
  br label %if.end518

if.end518:                                        ; preds = %if.end517, %if.end392
  %291 = load i32, i32* %draw_option, align 4, !dbg !4835
  %cmp519 = icmp eq i32 %291, 3, !dbg !4836
  %conv520 = zext i1 %cmp519 to i32, !dbg !4836
  store i32 %conv520, i32* %flush, align 4, !dbg !4837
  %292 = load i32, i32* %skip_normals, align 4, !dbg !4838
  %tobool521 = icmp ne i32 %292, 0, !dbg !4838
  br i1 %tobool521, label %if.end540, label %land.lhs.true522, !dbg !4840

land.lhs.true522:                                 ; preds = %if.end518
  %293 = load i32, i32* %flush, align 4, !dbg !4841
  %tobool523 = icmp ne i32 %293, 0, !dbg !4841
  br i1 %tobool523, label %if.end540, label %land.lhs.true524, !dbg !4842

land.lhs.true524:                                 ; preds = %land.lhs.true522
  %294 = load i32, i32* %i, align 4, !dbg !4843
  %295 = load i32, i32* %lasttri, align 4, !dbg !4844
  %cmp525 = icmp ne i32 %294, %295, !dbg !4845
  br i1 %cmp525, label %if.then527, label %if.end540, !dbg !4846

if.then527:                                       ; preds = %land.lhs.true524
  %296 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !4847
  %mat_nr528 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %296, i32 0, i32 5, !dbg !4849
  %297 = load i16, i16* %mat_nr528, align 8, !dbg !4849
  %conv529 = sext i16 %297 to i32, !dbg !4847
  %298 = load [3 x %struct.BMLoop*]*, [3 x %struct.BMLoop*]** %looptris, align 8, !dbg !4850
  %299 = load i32, i32* %i, align 4, !dbg !4851
  %add530 = add nsw i32 %299, 1, !dbg !4852
  %idxprom531 = sext i32 %add530 to i64, !dbg !4850
  %arrayidx532 = getelementptr inbounds [3 x %struct.BMLoop*], [3 x %struct.BMLoop*]* %298, i64 %idxprom531, !dbg !4850
  %arrayidx533 = getelementptr inbounds [3 x %struct.BMLoop*], [3 x %struct.BMLoop*]* %arrayidx532, i64 0, i64 0, !dbg !4850
  %300 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx533, align 8, !dbg !4850
  %f534 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %300, i32 0, i32 3, !dbg !4853
  %301 = load %struct.BMFace*, %struct.BMFace** %f534, align 8, !dbg !4853
  %mat_nr535 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %301, i32 0, i32 5, !dbg !4854
  %302 = load i16, i16* %mat_nr535, align 8, !dbg !4854
  %conv536 = sext i16 %302 to i32, !dbg !4850
  %cmp537 = icmp ne i32 %conv529, %conv536, !dbg !4855
  %conv538 = zext i1 %cmp537 to i32, !dbg !4855
  %303 = load i32, i32* %flush, align 4, !dbg !4856
  %or539 = or i32 %303, %conv538, !dbg !4856
  store i32 %or539, i32* %flush, align 4, !dbg !4856
  br label %if.end540, !dbg !4857

if.end540:                                        ; preds = %if.then527, %land.lhs.true524, %land.lhs.true522, %if.end518
  %304 = load i32, i32* %flush, align 4, !dbg !4858
  %tobool541 = icmp ne i32 %304, 0, !dbg !4858
  br i1 %tobool541, label %if.then542, label %if.end543, !dbg !4860

if.then542:                                       ; preds = %if.end540
  call void @glEnd(), !dbg !4861
  store i32 0, i32* %poly_prev, align 4, !dbg !4863
  call void @glDisable(i32 2882), !dbg !4864
  br label %if.end543, !dbg !4865

if.end543:                                        ; preds = %if.then542, %if.end540
  br label %if.end544, !dbg !4866

if.end544:                                        ; preds = %if.end543, %cond.end335
  br label %for.inc545, !dbg !4867

for.inc545:                                       ; preds = %if.end544
  %305 = load i32, i32* %i, align 4, !dbg !4868
  %inc546 = add nsw i32 %305, 1, !dbg !4868
  store i32 %inc546, i32* %i, align 4, !dbg !4868
  br label %for.cond304, !dbg !4869, !llvm.loop !4870

for.end547:                                       ; preds = %for.cond304
  br label %if.end548

if.end548:                                        ; preds = %for.end547, %for.end
  %306 = load i32, i32* %poly_prev, align 4, !dbg !4872
  %cmp549 = icmp ne i32 %306, 0, !dbg !4874
  br i1 %cmp549, label %if.then551, label %if.end552, !dbg !4875

if.then551:                                       ; preds = %if.end548
  call void @glEnd(), !dbg !4876
  br label %if.end552, !dbg !4876

if.end552:                                        ; preds = %if.then551, %if.end548
  ret void, !dbg !4877
}

; Function Attrs: noinline nounwind uwtable
define internal void @emDM_drawMappedFacesTex(%struct.DerivedMesh* %dm, i32 (i8*, i32)* %setDrawOptions, i32 (i8*, i32, i32)* %compareDrawOptions, i8* %userData, i32 %UNUSED_flag) #0 !dbg !4878 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %setDrawOptions.addr = alloca i32 (i8*, i32)*, align 8
  %compareDrawOptions.addr = alloca i32 (i8*, i32, i32)*, align 8
  %userData.addr = alloca i8*, align 8
  %UNUSED_flag.addr = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !4879, metadata !DIExpression()), !dbg !4880
  store i32 (i8*, i32)* %setDrawOptions, i32 (i8*, i32)** %setDrawOptions.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i32)** %setDrawOptions.addr, metadata !4881, metadata !DIExpression()), !dbg !4882
  store i32 (i8*, i32, i32)* %compareDrawOptions, i32 (i8*, i32, i32)** %compareDrawOptions.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i32, i32)** %compareDrawOptions.addr, metadata !4883, metadata !DIExpression()), !dbg !4884
  store i8* %userData, i8** %userData.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userData.addr, metadata !4885, metadata !DIExpression()), !dbg !4886
  store i32 %UNUSED_flag, i32* %UNUSED_flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %UNUSED_flag.addr, metadata !4887, metadata !DIExpression()), !dbg !4888
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4889
  %1 = load i32 (i8*, i32)*, i32 (i8*, i32)** %setDrawOptions.addr, align 8, !dbg !4890
  %2 = load i32 (i8*, i32, i32)*, i32 (i8*, i32, i32)** %compareDrawOptions.addr, align 8, !dbg !4891
  %3 = load i8*, i8** %userData.addr, align 8, !dbg !4892
  call void @emDM_drawFacesTex_common(%struct.DerivedMesh* %0, i32 (%struct.MTFace*, i8, i32)* null, i32 (i8*, i32)* %1, i32 (i8*, i32, i32)* %2, i8* %3), !dbg !4893
  ret void, !dbg !4894
}

; Function Attrs: noinline nounwind uwtable
define internal void @emDM_drawMappedFacesGLSL(%struct.DerivedMesh* %dm, i32 (i32, i8*)* %setMaterial, i32 (i8*, i32)* %setDrawOptions, i8* %userData) #0 !dbg !4895 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %setMaterial.addr = alloca i32 (i32, i8*)*, align 8
  %setDrawOptions.addr = alloca i32 (i8*, i32)*, align 8
  %userData.addr = alloca i8*, align 8
  %bmdm = alloca %struct.EditDerivedBMesh*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %bm = alloca %struct.BMesh*, align 8
  %looptris = alloca [3 x %struct.BMLoop*]*, align 8
  %vertexCos = alloca [3 x float]*, align 8
  %vertexNos = alloca [3 x float]*, align 8
  %polyNos = alloca [3 x float]*, align 8
  %lnors = alloca [3 x float]*, align 8
  %efa = alloca %struct.BMFace*, align 8
  %attribs = alloca %struct.DMVertexAttribs, align 8
  %gattribs = alloca %struct.GPUVertexAttribs, align 4
  %i = alloca i32, align 4
  %matnr = alloca i32, align 4
  %new_matnr = alloca i32, align 4
  %fi = alloca i32, align 4
  %do_draw = alloca i8, align 1
  %ltri = alloca %struct.BMLoop**, align 8
  %drawSmooth = alloca i32, align 4
  %j = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !4896, metadata !DIExpression()), !dbg !4897
  store i32 (i32, i8*)* %setMaterial, i32 (i32, i8*)** %setMaterial.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8*)** %setMaterial.addr, metadata !4898, metadata !DIExpression()), !dbg !4899
  store i32 (i8*, i32)* %setDrawOptions, i32 (i8*, i32)** %setDrawOptions.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i32)** %setDrawOptions.addr, metadata !4900, metadata !DIExpression()), !dbg !4901
  store i8* %userData, i8** %userData.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userData.addr, metadata !4902, metadata !DIExpression()), !dbg !4903
  call void @llvm.dbg.declare(metadata %struct.EditDerivedBMesh** %bmdm, metadata !4904, metadata !DIExpression()), !dbg !4905
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4906
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.EditDerivedBMesh*, !dbg !4907
  store %struct.EditDerivedBMesh* %1, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !4905
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !4908, metadata !DIExpression()), !dbg !4909
  %2 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !4910
  %em1 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %2, i32 0, i32 1, !dbg !4911
  %3 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em1, align 8, !dbg !4911
  store %struct.BMEditMesh* %3, %struct.BMEditMesh** %em, align 8, !dbg !4909
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm, metadata !4912, metadata !DIExpression()), !dbg !4913
  %4 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !4914
  %bm2 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %4, i32 0, i32 0, !dbg !4915
  %5 = load %struct.BMesh*, %struct.BMesh** %bm2, align 8, !dbg !4915
  store %struct.BMesh* %5, %struct.BMesh** %bm, align 8, !dbg !4913
  call void @llvm.dbg.declare(metadata [3 x %struct.BMLoop*]** %looptris, metadata !4916, metadata !DIExpression()), !dbg !4917
  %6 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !4918
  %looptris3 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %6, i32 0, i32 3, !dbg !4919
  %7 = load [3 x %struct.BMLoop*]*, [3 x %struct.BMLoop*]** %looptris3, align 8, !dbg !4919
  store [3 x %struct.BMLoop*]* %7, [3 x %struct.BMLoop*]** %looptris, align 8, !dbg !4917
  call void @llvm.dbg.declare(metadata [3 x float]** %vertexCos, metadata !4920, metadata !DIExpression()), !dbg !4921
  %8 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !4922
  %vertexCos4 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %8, i32 0, i32 2, !dbg !4923
  %9 = load [3 x float]*, [3 x float]** %vertexCos4, align 8, !dbg !4923
  store [3 x float]* %9, [3 x float]** %vertexCos, align 8, !dbg !4921
  call void @llvm.dbg.declare(metadata [3 x float]** %vertexNos, metadata !4924, metadata !DIExpression()), !dbg !4925
  call void @llvm.dbg.declare(metadata [3 x float]** %polyNos, metadata !4926, metadata !DIExpression()), !dbg !4927
  call void @llvm.dbg.declare(metadata [3 x float]** %lnors, metadata !4928, metadata !DIExpression()), !dbg !4929
  %10 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4930
  %getLoopDataArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %10, i32 0, i32 53, !dbg !4931
  %11 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getLoopDataArray, align 8, !dbg !4931
  %12 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !4932
  %call = call i8* %11(%struct.DerivedMesh* %12, i32 8), !dbg !4930
  %13 = bitcast i8* %call to [3 x float]*, !dbg !4930
  store [3 x float]* %13, [3 x float]** %lnors, align 8, !dbg !4929
  call void @llvm.dbg.declare(metadata %struct.BMFace** %efa, metadata !4933, metadata !DIExpression()), !dbg !4934
  call void @llvm.dbg.declare(metadata %struct.DMVertexAttribs* %attribs, metadata !4935, metadata !DIExpression()), !dbg !4972
  call void @llvm.dbg.declare(metadata %struct.GPUVertexAttribs* %gattribs, metadata !4973, metadata !DIExpression()), !dbg !4988
  call void @llvm.dbg.declare(metadata i32* %i, metadata !4989, metadata !DIExpression()), !dbg !4990
  call void @llvm.dbg.declare(metadata i32* %matnr, metadata !4991, metadata !DIExpression()), !dbg !4992
  call void @llvm.dbg.declare(metadata i32* %new_matnr, metadata !4993, metadata !DIExpression()), !dbg !4994
  call void @llvm.dbg.declare(metadata i32* %fi, metadata !4995, metadata !DIExpression()), !dbg !4996
  call void @llvm.dbg.declare(metadata i8* %do_draw, metadata !4997, metadata !DIExpression()), !dbg !4998
  store i8 0, i8* %do_draw, align 1, !dbg !4999
  store i32 -1, i32* %matnr, align 4, !dbg !5000
  %14 = bitcast %struct.DMVertexAttribs* %attribs to i8*, !dbg !5001
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 376, i1 false), !dbg !5001
  %15 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !5002
  call void @emDM_ensureVertNormals(%struct.EditDerivedBMesh* %15), !dbg !5003
  %16 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !5004
  call void @emDM_ensurePolyNormals(%struct.EditDerivedBMesh* %16), !dbg !5005
  %17 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !5006
  %vertexNos5 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %17, i32 0, i32 3, !dbg !5007
  %18 = load [3 x float]*, [3 x float]** %vertexNos5, align 8, !dbg !5007
  store [3 x float]* %18, [3 x float]** %vertexNos, align 8, !dbg !5008
  %19 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !5009
  %polyNos6 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %19, i32 0, i32 4, !dbg !5010
  %20 = load [3 x float]*, [3 x float]** %polyNos6, align 8, !dbg !5010
  store [3 x float]* %20, [3 x float]** %polyNos, align 8, !dbg !5011
  call void @glShadeModel(i32 7425), !dbg !5012
  %21 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !5013
  %22 = load [3 x float]*, [3 x float]** %lnors, align 8, !dbg !5014
  %tobool = icmp ne [3 x float]* %22, null, !dbg !5014
  %23 = zext i1 %tobool to i64, !dbg !5014
  %cond = select i1 %tobool, i32 13, i32 9, !dbg !5014
  %conv = trunc i32 %cond to i8, !dbg !5014
  call void @BM_mesh_elem_index_ensure(%struct.BMesh* %21, i8 zeroext %conv), !dbg !5015
  store i32 0, i32* %i, align 4, !dbg !5016
  br label %for.cond, !dbg !5018

for.cond:                                         ; preds = %for.inc140, %entry
  %24 = load i32, i32* %i, align 4, !dbg !5019
  %25 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !5021
  %tottri = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %25, i32 0, i32 4, !dbg !5022
  %26 = load i32, i32* %tottri, align 8, !dbg !5022
  %cmp = icmp slt i32 %24, %26, !dbg !5023
  br i1 %cmp, label %for.body, label %for.end142, !dbg !5024

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.BMLoop*** %ltri, metadata !5025, metadata !DIExpression()), !dbg !5027
  %27 = load [3 x %struct.BMLoop*]*, [3 x %struct.BMLoop*]** %looptris, align 8, !dbg !5028
  %28 = load i32, i32* %i, align 4, !dbg !5029
  %idxprom = sext i32 %28 to i64, !dbg !5028
  %arrayidx = getelementptr inbounds [3 x %struct.BMLoop*], [3 x %struct.BMLoop*]* %27, i64 %idxprom, !dbg !5028
  %arraydecay = getelementptr inbounds [3 x %struct.BMLoop*], [3 x %struct.BMLoop*]* %arrayidx, i64 0, i64 0, !dbg !5028
  store %struct.BMLoop** %arraydecay, %struct.BMLoop*** %ltri, align 8, !dbg !5027
  call void @llvm.dbg.declare(metadata i32* %drawSmooth, metadata !5030, metadata !DIExpression()), !dbg !5031
  %29 = load %struct.BMLoop**, %struct.BMLoop*** %ltri, align 8, !dbg !5032
  %arrayidx8 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %29, i64 0, !dbg !5032
  %30 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx8, align 8, !dbg !5032
  %f = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %30, i32 0, i32 3, !dbg !5033
  %31 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !5033
  store %struct.BMFace* %31, %struct.BMFace** %efa, align 8, !dbg !5034
  %32 = load i32 (i8*, i32)*, i32 (i8*, i32)** %setDrawOptions.addr, align 8, !dbg !5035
  %tobool9 = icmp ne i32 (i8*, i32)* %32, null, !dbg !5035
  br i1 %tobool9, label %land.lhs.true, label %if.end, !dbg !5037

land.lhs.true:                                    ; preds = %for.body
  %33 = load i32 (i8*, i32)*, i32 (i8*, i32)** %setDrawOptions.addr, align 8, !dbg !5038
  %34 = load i8*, i8** %userData.addr, align 8, !dbg !5039
  %35 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !5040
  %head = getelementptr inbounds %struct.BMFace, %struct.BMFace* %35, i32 0, i32 0, !dbg !5040
  %call10 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head), !dbg !5040
  %call11 = call i32 %33(i8* %34, i32 %call10), !dbg !5038
  %cmp12 = icmp eq i32 %call11, 0, !dbg !5041
  br i1 %cmp12, label %if.then, label %if.end, !dbg !5042

if.then:                                          ; preds = %land.lhs.true
  br label %for.inc140, !dbg !5043

if.end:                                           ; preds = %land.lhs.true, %for.body
  %36 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !5044
  %mat_nr = getelementptr inbounds %struct.BMFace, %struct.BMFace* %36, i32 0, i32 5, !dbg !5045
  %37 = load i16, i16* %mat_nr, align 8, !dbg !5045
  %conv14 = sext i16 %37 to i32, !dbg !5044
  %add = add nsw i32 %conv14, 1, !dbg !5046
  store i32 %add, i32* %new_matnr, align 4, !dbg !5047
  %38 = load i32, i32* %new_matnr, align 4, !dbg !5048
  %39 = load i32, i32* %matnr, align 4, !dbg !5050
  %cmp15 = icmp ne i32 %38, %39, !dbg !5051
  br i1 %cmp15, label %if.then17, label %if.end27, !dbg !5052

if.then17:                                        ; preds = %if.end
  %40 = load i32, i32* %matnr, align 4, !dbg !5053
  %cmp18 = icmp ne i32 %40, -1, !dbg !5056
  br i1 %cmp18, label %if.then20, label %if.end21, !dbg !5057

if.then20:                                        ; preds = %if.then17
  call void @glEnd(), !dbg !5058
  br label %if.end21, !dbg !5058

if.end21:                                         ; preds = %if.then20, %if.then17
  %41 = load i32 (i32, i8*)*, i32 (i32, i8*)** %setMaterial.addr, align 8, !dbg !5059
  %42 = load i32, i32* %new_matnr, align 4, !dbg !5060
  store i32 %42, i32* %matnr, align 4, !dbg !5061
  %43 = bitcast %struct.GPUVertexAttribs* %gattribs to i8*, !dbg !5062
  %call22 = call i32 %41(i32 %42, i8* %43), !dbg !5059
  %conv23 = trunc i32 %call22 to i8, !dbg !5059
  store i8 %conv23, i8* %do_draw, align 1, !dbg !5063
  %44 = load i8, i8* %do_draw, align 1, !dbg !5064
  %tobool24 = icmp ne i8 %44, 0, !dbg !5064
  br i1 %tobool24, label %if.then25, label %if.end26, !dbg !5066

if.then25:                                        ; preds = %if.end21
  %45 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5067
  call void @DM_vertex_attributes_from_gpu(%struct.DerivedMesh* %45, %struct.GPUVertexAttribs* %gattribs, %struct.DMVertexAttribs* %attribs), !dbg !5068
  br label %if.end26, !dbg !5068

if.end26:                                         ; preds = %if.then25, %if.end21
  call void @glBegin(i32 4), !dbg !5069
  br label %if.end27, !dbg !5070

if.end27:                                         ; preds = %if.end26, %if.end
  %46 = load i8, i8* %do_draw, align 1, !dbg !5071
  %tobool28 = icmp ne i8 %46, 0, !dbg !5071
  br i1 %tobool28, label %if.then29, label %if.end139, !dbg !5073

if.then29:                                        ; preds = %if.end27
  %47 = load [3 x float]*, [3 x float]** %lnors, align 8, !dbg !5074
  %tobool30 = icmp ne [3 x float]* %47, null, !dbg !5074
  br i1 %tobool30, label %lor.end, label %lor.rhs, !dbg !5076

lor.rhs:                                          ; preds = %if.then29
  %48 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !5077
  %head31 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %48, i32 0, i32 0, !dbg !5077
  %call32 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head31, i8 zeroext 8), !dbg !5077
  %conv33 = zext i8 %call32 to i32, !dbg !5077
  %tobool34 = icmp ne i32 %conv33, 0, !dbg !5076
  br label %lor.end, !dbg !5076

lor.end:                                          ; preds = %lor.rhs, %if.then29
  %49 = phi i1 [ true, %if.then29 ], [ %tobool34, %lor.rhs ]
  %lor.ext = zext i1 %49 to i32, !dbg !5076
  store i32 %lor.ext, i32* %drawSmooth, align 4, !dbg !5078
  %50 = load i32, i32* %drawSmooth, align 4, !dbg !5079
  %tobool35 = icmp ne i32 %50, 0, !dbg !5079
  br i1 %tobool35, label %if.else72, label %if.then36, !dbg !5081

if.then36:                                        ; preds = %lor.end
  %51 = load [3 x float]*, [3 x float]** %vertexCos, align 8, !dbg !5082
  %tobool37 = icmp ne [3 x float]* %51, null, !dbg !5082
  br i1 %tobool37, label %if.then38, label %if.else, !dbg !5085

if.then38:                                        ; preds = %if.then36
  %52 = load [3 x float]*, [3 x float]** %polyNos, align 8, !dbg !5086
  %53 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !5088
  %head39 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %53, i32 0, i32 0, !dbg !5088
  %call40 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head39), !dbg !5088
  %idxprom41 = sext i32 %call40 to i64, !dbg !5086
  %arrayidx42 = getelementptr inbounds [3 x float], [3 x float]* %52, i64 %idxprom41, !dbg !5086
  %arraydecay43 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx42, i64 0, i64 0, !dbg !5086
  call void @glNormal3fv(float* %arraydecay43), !dbg !5089
  store i32 0, i32* %fi, align 4, !dbg !5090
  br label %for.cond44, !dbg !5092

for.cond44:                                       ; preds = %for.inc, %if.then38
  %54 = load i32, i32* %fi, align 4, !dbg !5093
  %cmp45 = icmp slt i32 %54, 3, !dbg !5095
  br i1 %cmp45, label %for.body47, label %for.end, !dbg !5096

for.body47:                                       ; preds = %for.cond44
  %55 = load %struct.BMLoop**, %struct.BMLoop*** %ltri, align 8, !dbg !5097
  %56 = load i32, i32* %fi, align 4, !dbg !5099
  %idxprom48 = sext i32 %56 to i64, !dbg !5097
  %arrayidx49 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %55, i64 %idxprom48, !dbg !5097
  %57 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx49, align 8, !dbg !5097
  %58 = load i32, i32* %fi, align 4, !dbg !5100
  call void @emdm_pass_attrib_vertex_glsl(%struct.DMVertexAttribs* %attribs, %struct.BMLoop* %57, i32 %58), !dbg !5101
  %59 = load [3 x float]*, [3 x float]** %vertexCos, align 8, !dbg !5102
  %60 = load %struct.BMLoop**, %struct.BMLoop*** %ltri, align 8, !dbg !5103
  %61 = load i32, i32* %fi, align 4, !dbg !5103
  %idxprom50 = sext i32 %61 to i64, !dbg !5103
  %arrayidx51 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %60, i64 %idxprom50, !dbg !5103
  %62 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx51, align 8, !dbg !5103
  %v = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %62, i32 0, i32 1, !dbg !5103
  %63 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !5103
  %head52 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %63, i32 0, i32 0, !dbg !5103
  %call53 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head52), !dbg !5103
  %idxprom54 = sext i32 %call53 to i64, !dbg !5102
  %arrayidx55 = getelementptr inbounds [3 x float], [3 x float]* %59, i64 %idxprom54, !dbg !5102
  %arraydecay56 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx55, i64 0, i64 0, !dbg !5102
  call void @glVertex3fv(float* %arraydecay56), !dbg !5104
  br label %for.inc, !dbg !5105

for.inc:                                          ; preds = %for.body47
  %64 = load i32, i32* %fi, align 4, !dbg !5106
  %inc = add nsw i32 %64, 1, !dbg !5106
  store i32 %inc, i32* %fi, align 4, !dbg !5106
  br label %for.cond44, !dbg !5107, !llvm.loop !5108

for.end:                                          ; preds = %for.cond44
  br label %if.end71, !dbg !5110

if.else:                                          ; preds = %if.then36
  %65 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !5111
  %no = getelementptr inbounds %struct.BMFace, %struct.BMFace* %65, i32 0, i32 4, !dbg !5113
  %arraydecay57 = getelementptr inbounds [3 x float], [3 x float]* %no, i64 0, i64 0, !dbg !5111
  call void @glNormal3fv(float* %arraydecay57), !dbg !5114
  store i32 0, i32* %fi, align 4, !dbg !5115
  br label %for.cond58, !dbg !5117

for.cond58:                                       ; preds = %for.inc68, %if.else
  %66 = load i32, i32* %fi, align 4, !dbg !5118
  %cmp59 = icmp slt i32 %66, 3, !dbg !5120
  br i1 %cmp59, label %for.body61, label %for.end70, !dbg !5121

for.body61:                                       ; preds = %for.cond58
  %67 = load %struct.BMLoop**, %struct.BMLoop*** %ltri, align 8, !dbg !5122
  %68 = load i32, i32* %fi, align 4, !dbg !5124
  %idxprom62 = sext i32 %68 to i64, !dbg !5122
  %arrayidx63 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %67, i64 %idxprom62, !dbg !5122
  %69 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx63, align 8, !dbg !5122
  %70 = load i32, i32* %fi, align 4, !dbg !5125
  call void @emdm_pass_attrib_vertex_glsl(%struct.DMVertexAttribs* %attribs, %struct.BMLoop* %69, i32 %70), !dbg !5126
  %71 = load %struct.BMLoop**, %struct.BMLoop*** %ltri, align 8, !dbg !5127
  %72 = load i32, i32* %fi, align 4, !dbg !5128
  %idxprom64 = sext i32 %72 to i64, !dbg !5127
  %arrayidx65 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %71, i64 %idxprom64, !dbg !5127
  %73 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx65, align 8, !dbg !5127
  %v66 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %73, i32 0, i32 1, !dbg !5129
  %74 = load %struct.BMVert*, %struct.BMVert** %v66, align 8, !dbg !5129
  %co = getelementptr inbounds %struct.BMVert, %struct.BMVert* %74, i32 0, i32 2, !dbg !5130
  %arraydecay67 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !5127
  call void @glVertex3fv(float* %arraydecay67), !dbg !5131
  br label %for.inc68, !dbg !5132

for.inc68:                                        ; preds = %for.body61
  %75 = load i32, i32* %fi, align 4, !dbg !5133
  %inc69 = add nsw i32 %75, 1, !dbg !5133
  store i32 %inc69, i32* %fi, align 4, !dbg !5133
  br label %for.cond58, !dbg !5134, !llvm.loop !5135

for.end70:                                        ; preds = %for.cond58
  br label %if.end71

if.end71:                                         ; preds = %for.end70, %for.end
  br label %if.end138, !dbg !5137

if.else72:                                        ; preds = %lor.end
  %76 = load [3 x float]*, [3 x float]** %vertexCos, align 8, !dbg !5138
  %tobool73 = icmp ne [3 x float]* %76, null, !dbg !5138
  br i1 %tobool73, label %if.then74, label %if.else106, !dbg !5141

if.then74:                                        ; preds = %if.else72
  store i32 0, i32* %fi, align 4, !dbg !5142
  br label %for.cond75, !dbg !5145

for.cond75:                                       ; preds = %for.inc103, %if.then74
  %77 = load i32, i32* %fi, align 4, !dbg !5146
  %cmp76 = icmp slt i32 %77, 3, !dbg !5148
  br i1 %cmp76, label %for.body78, label %for.end105, !dbg !5149

for.body78:                                       ; preds = %for.cond75
  call void @llvm.dbg.declare(metadata i32* %j, metadata !5150, metadata !DIExpression()), !dbg !5152
  %78 = load %struct.BMLoop**, %struct.BMLoop*** %ltri, align 8, !dbg !5153
  %79 = load i32, i32* %fi, align 4, !dbg !5153
  %idxprom79 = sext i32 %79 to i64, !dbg !5153
  %arrayidx80 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %78, i64 %idxprom79, !dbg !5153
  %80 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx80, align 8, !dbg !5153
  %v81 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %80, i32 0, i32 1, !dbg !5153
  %81 = load %struct.BMVert*, %struct.BMVert** %v81, align 8, !dbg !5153
  %head82 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %81, i32 0, i32 0, !dbg !5153
  %call83 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head82), !dbg !5153
  store i32 %call83, i32* %j, align 4, !dbg !5152
  %82 = load %struct.BMLoop**, %struct.BMLoop*** %ltri, align 8, !dbg !5154
  %83 = load i32, i32* %fi, align 4, !dbg !5155
  %idxprom84 = sext i32 %83 to i64, !dbg !5154
  %arrayidx85 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %82, i64 %idxprom84, !dbg !5154
  %84 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx85, align 8, !dbg !5154
  %85 = load i32, i32* %fi, align 4, !dbg !5156
  call void @emdm_pass_attrib_vertex_glsl(%struct.DMVertexAttribs* %attribs, %struct.BMLoop* %84, i32 %85), !dbg !5157
  %86 = load [3 x float]*, [3 x float]** %lnors, align 8, !dbg !5158
  %tobool86 = icmp ne [3 x float]* %86, null, !dbg !5158
  br i1 %tobool86, label %if.then87, label %if.else95, !dbg !5160

if.then87:                                        ; preds = %for.body78
  %87 = load [3 x float]*, [3 x float]** %lnors, align 8, !dbg !5161
  %88 = load %struct.BMLoop**, %struct.BMLoop*** %ltri, align 8, !dbg !5162
  %89 = load i32, i32* %fi, align 4, !dbg !5162
  %idxprom88 = sext i32 %89 to i64, !dbg !5162
  %arrayidx89 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %88, i64 %idxprom88, !dbg !5162
  %90 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx89, align 8, !dbg !5162
  %head90 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %90, i32 0, i32 0, !dbg !5162
  %call91 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head90), !dbg !5162
  %idxprom92 = sext i32 %call91 to i64, !dbg !5161
  %arrayidx93 = getelementptr inbounds [3 x float], [3 x float]* %87, i64 %idxprom92, !dbg !5161
  %arraydecay94 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx93, i64 0, i64 0, !dbg !5161
  call void @glNormal3fv(float* %arraydecay94), !dbg !5163
  br label %if.end99, !dbg !5163

if.else95:                                        ; preds = %for.body78
  %91 = load [3 x float]*, [3 x float]** %vertexNos, align 8, !dbg !5164
  %92 = load i32, i32* %j, align 4, !dbg !5165
  %idxprom96 = sext i32 %92 to i64, !dbg !5164
  %arrayidx97 = getelementptr inbounds [3 x float], [3 x float]* %91, i64 %idxprom96, !dbg !5164
  %arraydecay98 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx97, i64 0, i64 0, !dbg !5164
  call void @glNormal3fv(float* %arraydecay98), !dbg !5166
  br label %if.end99

if.end99:                                         ; preds = %if.else95, %if.then87
  %93 = load [3 x float]*, [3 x float]** %vertexCos, align 8, !dbg !5167
  %94 = load i32, i32* %j, align 4, !dbg !5168
  %idxprom100 = sext i32 %94 to i64, !dbg !5167
  %arrayidx101 = getelementptr inbounds [3 x float], [3 x float]* %93, i64 %idxprom100, !dbg !5167
  %arraydecay102 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx101, i64 0, i64 0, !dbg !5167
  call void @glVertex3fv(float* %arraydecay102), !dbg !5169
  br label %for.inc103, !dbg !5170

for.inc103:                                       ; preds = %if.end99
  %95 = load i32, i32* %fi, align 4, !dbg !5171
  %inc104 = add nsw i32 %95, 1, !dbg !5171
  store i32 %inc104, i32* %fi, align 4, !dbg !5171
  br label %for.cond75, !dbg !5172, !llvm.loop !5173

for.end105:                                       ; preds = %for.cond75
  br label %if.end137, !dbg !5175

if.else106:                                       ; preds = %if.else72
  store i32 0, i32* %fi, align 4, !dbg !5176
  br label %for.cond107, !dbg !5179

for.cond107:                                      ; preds = %for.inc134, %if.else106
  %96 = load i32, i32* %fi, align 4, !dbg !5180
  %cmp108 = icmp slt i32 %96, 3, !dbg !5182
  br i1 %cmp108, label %for.body110, label %for.end136, !dbg !5183

for.body110:                                      ; preds = %for.cond107
  %97 = load %struct.BMLoop**, %struct.BMLoop*** %ltri, align 8, !dbg !5184
  %98 = load i32, i32* %fi, align 4, !dbg !5186
  %idxprom111 = sext i32 %98 to i64, !dbg !5184
  %arrayidx112 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %97, i64 %idxprom111, !dbg !5184
  %99 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx112, align 8, !dbg !5184
  %100 = load i32, i32* %fi, align 4, !dbg !5187
  call void @emdm_pass_attrib_vertex_glsl(%struct.DMVertexAttribs* %attribs, %struct.BMLoop* %99, i32 %100), !dbg !5188
  %101 = load [3 x float]*, [3 x float]** %lnors, align 8, !dbg !5189
  %tobool113 = icmp ne [3 x float]* %101, null, !dbg !5189
  br i1 %tobool113, label %if.then114, label %if.else122, !dbg !5191

if.then114:                                       ; preds = %for.body110
  %102 = load [3 x float]*, [3 x float]** %lnors, align 8, !dbg !5192
  %103 = load %struct.BMLoop**, %struct.BMLoop*** %ltri, align 8, !dbg !5193
  %104 = load i32, i32* %fi, align 4, !dbg !5193
  %idxprom115 = sext i32 %104 to i64, !dbg !5193
  %arrayidx116 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %103, i64 %idxprom115, !dbg !5193
  %105 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx116, align 8, !dbg !5193
  %head117 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %105, i32 0, i32 0, !dbg !5193
  %call118 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head117), !dbg !5193
  %idxprom119 = sext i32 %call118 to i64, !dbg !5192
  %arrayidx120 = getelementptr inbounds [3 x float], [3 x float]* %102, i64 %idxprom119, !dbg !5192
  %arraydecay121 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx120, i64 0, i64 0, !dbg !5192
  call void @glNormal3fv(float* %arraydecay121), !dbg !5194
  br label %if.end128, !dbg !5194

if.else122:                                       ; preds = %for.body110
  %106 = load %struct.BMLoop**, %struct.BMLoop*** %ltri, align 8, !dbg !5195
  %107 = load i32, i32* %fi, align 4, !dbg !5196
  %idxprom123 = sext i32 %107 to i64, !dbg !5195
  %arrayidx124 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %106, i64 %idxprom123, !dbg !5195
  %108 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx124, align 8, !dbg !5195
  %v125 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %108, i32 0, i32 1, !dbg !5197
  %109 = load %struct.BMVert*, %struct.BMVert** %v125, align 8, !dbg !5197
  %no126 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %109, i32 0, i32 3, !dbg !5198
  %arraydecay127 = getelementptr inbounds [3 x float], [3 x float]* %no126, i64 0, i64 0, !dbg !5195
  call void @glNormal3fv(float* %arraydecay127), !dbg !5199
  br label %if.end128

if.end128:                                        ; preds = %if.else122, %if.then114
  %110 = load %struct.BMLoop**, %struct.BMLoop*** %ltri, align 8, !dbg !5200
  %111 = load i32, i32* %fi, align 4, !dbg !5201
  %idxprom129 = sext i32 %111 to i64, !dbg !5200
  %arrayidx130 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %110, i64 %idxprom129, !dbg !5200
  %112 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx130, align 8, !dbg !5200
  %v131 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %112, i32 0, i32 1, !dbg !5202
  %113 = load %struct.BMVert*, %struct.BMVert** %v131, align 8, !dbg !5202
  %co132 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %113, i32 0, i32 2, !dbg !5203
  %arraydecay133 = getelementptr inbounds [3 x float], [3 x float]* %co132, i64 0, i64 0, !dbg !5200
  call void @glVertex3fv(float* %arraydecay133), !dbg !5204
  br label %for.inc134, !dbg !5205

for.inc134:                                       ; preds = %if.end128
  %114 = load i32, i32* %fi, align 4, !dbg !5206
  %inc135 = add nsw i32 %114, 1, !dbg !5206
  store i32 %inc135, i32* %fi, align 4, !dbg !5206
  br label %for.cond107, !dbg !5207, !llvm.loop !5208

for.end136:                                       ; preds = %for.cond107
  br label %if.end137

if.end137:                                        ; preds = %for.end136, %for.end105
  br label %if.end138

if.end138:                                        ; preds = %if.end137, %if.end71
  br label %if.end139, !dbg !5210

if.end139:                                        ; preds = %if.end138, %if.end27
  br label %for.inc140, !dbg !5211

for.inc140:                                       ; preds = %if.end139, %if.then
  %115 = load i32, i32* %i, align 4, !dbg !5212
  %inc141 = add nsw i32 %115, 1, !dbg !5212
  store i32 %inc141, i32* %i, align 4, !dbg !5212
  br label %for.cond, !dbg !5213, !llvm.loop !5214

for.end142:                                       ; preds = %for.cond
  %116 = load i32, i32* %matnr, align 4, !dbg !5216
  %cmp143 = icmp ne i32 %116, -1, !dbg !5218
  br i1 %cmp143, label %if.then145, label %if.end146, !dbg !5219

if.then145:                                       ; preds = %for.end142
  call void @glEnd(), !dbg !5220
  br label %if.end146, !dbg !5222

if.end146:                                        ; preds = %if.then145, %for.end142
  ret void, !dbg !5223
}

; Function Attrs: noinline nounwind uwtable
define internal void @emDM_drawMappedFacesMat(%struct.DerivedMesh* %dm, void (i8*, i32, i8*)* %setMaterial, i8 (i8*, i32)* %setFace, i8* %userData) #0 !dbg !5224 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %setMaterial.addr = alloca void (i8*, i32, i8*)*, align 8
  %setFace.addr = alloca i8 (i8*, i32)*, align 8
  %userData.addr = alloca i8*, align 8
  %bmdm = alloca %struct.EditDerivedBMesh*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %bm = alloca %struct.BMesh*, align 8
  %looptris = alloca [3 x %struct.BMLoop*]*, align 8
  %vertexCos = alloca [3 x float]*, align 8
  %vertexNos = alloca [3 x float]*, align 8
  %polyNos = alloca [3 x float]*, align 8
  %lnors = alloca [3 x float]*, align 8
  %efa = alloca %struct.BMFace*, align 8
  %attribs = alloca %struct.DMVertexAttribs, align 8
  %gattribs = alloca %struct.GPUVertexAttribs, align 4
  %i = alloca i32, align 4
  %matnr = alloca i32, align 4
  %new_matnr = alloca i32, align 4
  %fi = alloca i32, align 4
  %ltri = alloca %struct.BMLoop**, align 8
  %drawSmooth = alloca i32, align 4
  %j = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !5225, metadata !DIExpression()), !dbg !5226
  store void (i8*, i32, i8*)* %setMaterial, void (i8*, i32, i8*)** %setMaterial.addr, align 8
  call void @llvm.dbg.declare(metadata void (i8*, i32, i8*)** %setMaterial.addr, metadata !5227, metadata !DIExpression()), !dbg !5228
  store i8 (i8*, i32)* %setFace, i8 (i8*, i32)** %setFace.addr, align 8
  call void @llvm.dbg.declare(metadata i8 (i8*, i32)** %setFace.addr, metadata !5229, metadata !DIExpression()), !dbg !5230
  store i8* %userData, i8** %userData.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userData.addr, metadata !5231, metadata !DIExpression()), !dbg !5232
  call void @llvm.dbg.declare(metadata %struct.EditDerivedBMesh** %bmdm, metadata !5233, metadata !DIExpression()), !dbg !5234
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5235
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.EditDerivedBMesh*, !dbg !5236
  store %struct.EditDerivedBMesh* %1, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !5234
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !5237, metadata !DIExpression()), !dbg !5238
  %2 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !5239
  %em1 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %2, i32 0, i32 1, !dbg !5240
  %3 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em1, align 8, !dbg !5240
  store %struct.BMEditMesh* %3, %struct.BMEditMesh** %em, align 8, !dbg !5238
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm, metadata !5241, metadata !DIExpression()), !dbg !5242
  %4 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !5243
  %bm2 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %4, i32 0, i32 0, !dbg !5244
  %5 = load %struct.BMesh*, %struct.BMesh** %bm2, align 8, !dbg !5244
  store %struct.BMesh* %5, %struct.BMesh** %bm, align 8, !dbg !5242
  call void @llvm.dbg.declare(metadata [3 x %struct.BMLoop*]** %looptris, metadata !5245, metadata !DIExpression()), !dbg !5246
  %6 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !5247
  %looptris3 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %6, i32 0, i32 3, !dbg !5248
  %7 = load [3 x %struct.BMLoop*]*, [3 x %struct.BMLoop*]** %looptris3, align 8, !dbg !5248
  store [3 x %struct.BMLoop*]* %7, [3 x %struct.BMLoop*]** %looptris, align 8, !dbg !5246
  call void @llvm.dbg.declare(metadata [3 x float]** %vertexCos, metadata !5249, metadata !DIExpression()), !dbg !5250
  %8 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !5251
  %vertexCos4 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %8, i32 0, i32 2, !dbg !5252
  %9 = load [3 x float]*, [3 x float]** %vertexCos4, align 8, !dbg !5252
  store [3 x float]* %9, [3 x float]** %vertexCos, align 8, !dbg !5250
  call void @llvm.dbg.declare(metadata [3 x float]** %vertexNos, metadata !5253, metadata !DIExpression()), !dbg !5254
  call void @llvm.dbg.declare(metadata [3 x float]** %polyNos, metadata !5255, metadata !DIExpression()), !dbg !5256
  call void @llvm.dbg.declare(metadata [3 x float]** %lnors, metadata !5257, metadata !DIExpression()), !dbg !5258
  %10 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5259
  %getLoopDataArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %10, i32 0, i32 53, !dbg !5260
  %11 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getLoopDataArray, align 8, !dbg !5260
  %12 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5261
  %call = call i8* %11(%struct.DerivedMesh* %12, i32 8), !dbg !5259
  %13 = bitcast i8* %call to [3 x float]*, !dbg !5259
  store [3 x float]* %13, [3 x float]** %lnors, align 8, !dbg !5258
  call void @llvm.dbg.declare(metadata %struct.BMFace** %efa, metadata !5262, metadata !DIExpression()), !dbg !5263
  call void @llvm.dbg.declare(metadata %struct.DMVertexAttribs* %attribs, metadata !5264, metadata !DIExpression()), !dbg !5265
  %14 = bitcast %struct.DMVertexAttribs* %attribs to i8*, !dbg !5265
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 376, i1 false), !dbg !5265
  call void @llvm.dbg.declare(metadata %struct.GPUVertexAttribs* %gattribs, metadata !5266, metadata !DIExpression()), !dbg !5267
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5268, metadata !DIExpression()), !dbg !5269
  call void @llvm.dbg.declare(metadata i32* %matnr, metadata !5270, metadata !DIExpression()), !dbg !5271
  call void @llvm.dbg.declare(metadata i32* %new_matnr, metadata !5272, metadata !DIExpression()), !dbg !5273
  call void @llvm.dbg.declare(metadata i32* %fi, metadata !5274, metadata !DIExpression()), !dbg !5275
  store i32 -1, i32* %matnr, align 4, !dbg !5276
  %15 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !5277
  call void @emDM_ensureVertNormals(%struct.EditDerivedBMesh* %15), !dbg !5278
  %16 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !5279
  call void @emDM_ensurePolyNormals(%struct.EditDerivedBMesh* %16), !dbg !5280
  %17 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !5281
  %vertexNos5 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %17, i32 0, i32 3, !dbg !5282
  %18 = load [3 x float]*, [3 x float]** %vertexNos5, align 8, !dbg !5282
  store [3 x float]* %18, [3 x float]** %vertexNos, align 8, !dbg !5283
  %19 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !5284
  %polyNos6 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %19, i32 0, i32 4, !dbg !5285
  %20 = load [3 x float]*, [3 x float]** %polyNos6, align 8, !dbg !5285
  store [3 x float]* %20, [3 x float]** %polyNos, align 8, !dbg !5286
  call void @glShadeModel(i32 7425), !dbg !5287
  %21 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !5288
  %22 = load [3 x float]*, [3 x float]** %lnors, align 8, !dbg !5289
  %tobool = icmp ne [3 x float]* %22, null, !dbg !5289
  %23 = zext i1 %tobool to i64, !dbg !5289
  %cond = select i1 %tobool, i32 13, i32 9, !dbg !5289
  %conv = trunc i32 %cond to i8, !dbg !5289
  call void @BM_mesh_elem_index_ensure(%struct.BMesh* %21, i8 zeroext %conv), !dbg !5290
  store i32 0, i32* %i, align 4, !dbg !5291
  br label %for.cond, !dbg !5293

for.cond:                                         ; preds = %for.inc131, %entry
  %24 = load i32, i32* %i, align 4, !dbg !5294
  %25 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !5296
  %tottri = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %25, i32 0, i32 4, !dbg !5297
  %26 = load i32, i32* %tottri, align 8, !dbg !5297
  %cmp = icmp slt i32 %24, %26, !dbg !5298
  br i1 %cmp, label %for.body, label %for.end133, !dbg !5299

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.BMLoop*** %ltri, metadata !5300, metadata !DIExpression()), !dbg !5302
  %27 = load [3 x %struct.BMLoop*]*, [3 x %struct.BMLoop*]** %looptris, align 8, !dbg !5303
  %28 = load i32, i32* %i, align 4, !dbg !5304
  %idxprom = sext i32 %28 to i64, !dbg !5303
  %arrayidx = getelementptr inbounds [3 x %struct.BMLoop*], [3 x %struct.BMLoop*]* %27, i64 %idxprom, !dbg !5303
  %arraydecay = getelementptr inbounds [3 x %struct.BMLoop*], [3 x %struct.BMLoop*]* %arrayidx, i64 0, i64 0, !dbg !5303
  store %struct.BMLoop** %arraydecay, %struct.BMLoop*** %ltri, align 8, !dbg !5302
  call void @llvm.dbg.declare(metadata i32* %drawSmooth, metadata !5305, metadata !DIExpression()), !dbg !5306
  %29 = load %struct.BMLoop**, %struct.BMLoop*** %ltri, align 8, !dbg !5307
  %arrayidx8 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %29, i64 0, !dbg !5307
  %30 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx8, align 8, !dbg !5307
  %f = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %30, i32 0, i32 3, !dbg !5308
  %31 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !5308
  store %struct.BMFace* %31, %struct.BMFace** %efa, align 8, !dbg !5309
  %32 = load i8 (i8*, i32)*, i8 (i8*, i32)** %setFace.addr, align 8, !dbg !5310
  %tobool9 = icmp ne i8 (i8*, i32)* %32, null, !dbg !5310
  br i1 %tobool9, label %land.lhs.true, label %if.end, !dbg !5312

land.lhs.true:                                    ; preds = %for.body
  %33 = load i8 (i8*, i32)*, i8 (i8*, i32)** %setFace.addr, align 8, !dbg !5313
  %34 = load i8*, i8** %userData.addr, align 8, !dbg !5314
  %35 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !5315
  %head = getelementptr inbounds %struct.BMFace, %struct.BMFace* %35, i32 0, i32 0, !dbg !5315
  %call10 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head), !dbg !5315
  %call11 = call zeroext i8 %33(i8* %34, i32 %call10), !dbg !5313
  %tobool12 = icmp ne i8 %call11, 0, !dbg !5313
  br i1 %tobool12, label %if.end, label %if.then, !dbg !5316

if.then:                                          ; preds = %land.lhs.true
  br label %for.inc131, !dbg !5317

if.end:                                           ; preds = %land.lhs.true, %for.body
  %36 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !5318
  %mat_nr = getelementptr inbounds %struct.BMFace, %struct.BMFace* %36, i32 0, i32 5, !dbg !5319
  %37 = load i16, i16* %mat_nr, align 8, !dbg !5319
  %conv13 = sext i16 %37 to i32, !dbg !5318
  %add = add nsw i32 %conv13, 1, !dbg !5320
  store i32 %add, i32* %new_matnr, align 4, !dbg !5321
  %38 = load i32, i32* %new_matnr, align 4, !dbg !5322
  %39 = load i32, i32* %matnr, align 4, !dbg !5324
  %cmp14 = icmp ne i32 %38, %39, !dbg !5325
  br i1 %cmp14, label %if.then16, label %if.end21, !dbg !5326

if.then16:                                        ; preds = %if.end
  %40 = load i32, i32* %matnr, align 4, !dbg !5327
  %cmp17 = icmp ne i32 %40, -1, !dbg !5330
  br i1 %cmp17, label %if.then19, label %if.end20, !dbg !5331

if.then19:                                        ; preds = %if.then16
  call void @glEnd(), !dbg !5332
  br label %if.end20, !dbg !5332

if.end20:                                         ; preds = %if.then19, %if.then16
  %41 = load void (i8*, i32, i8*)*, void (i8*, i32, i8*)** %setMaterial.addr, align 8, !dbg !5333
  %42 = load i8*, i8** %userData.addr, align 8, !dbg !5334
  %43 = load i32, i32* %new_matnr, align 4, !dbg !5335
  store i32 %43, i32* %matnr, align 4, !dbg !5336
  %44 = bitcast %struct.GPUVertexAttribs* %gattribs to i8*, !dbg !5337
  call void %41(i8* %42, i32 %43, i8* %44), !dbg !5333
  %45 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5338
  call void @DM_vertex_attributes_from_gpu(%struct.DerivedMesh* %45, %struct.GPUVertexAttribs* %gattribs, %struct.DMVertexAttribs* %attribs), !dbg !5339
  call void @glBegin(i32 4), !dbg !5340
  br label %if.end21, !dbg !5341

if.end21:                                         ; preds = %if.end20, %if.end
  %46 = load [3 x float]*, [3 x float]** %lnors, align 8, !dbg !5342
  %tobool22 = icmp ne [3 x float]* %46, null, !dbg !5342
  br i1 %tobool22, label %lor.end, label %lor.rhs, !dbg !5343

lor.rhs:                                          ; preds = %if.end21
  %47 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !5344
  %head23 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %47, i32 0, i32 0, !dbg !5344
  %call24 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head23, i8 zeroext 8), !dbg !5344
  %conv25 = zext i8 %call24 to i32, !dbg !5344
  %tobool26 = icmp ne i32 %conv25, 0, !dbg !5343
  br label %lor.end, !dbg !5343

lor.end:                                          ; preds = %lor.rhs, %if.end21
  %48 = phi i1 [ true, %if.end21 ], [ %tobool26, %lor.rhs ]
  %lor.ext = zext i1 %48 to i32, !dbg !5343
  store i32 %lor.ext, i32* %drawSmooth, align 4, !dbg !5345
  %49 = load i32, i32* %drawSmooth, align 4, !dbg !5346
  %tobool27 = icmp ne i32 %49, 0, !dbg !5346
  br i1 %tobool27, label %if.else64, label %if.then28, !dbg !5348

if.then28:                                        ; preds = %lor.end
  %50 = load [3 x float]*, [3 x float]** %vertexCos, align 8, !dbg !5349
  %tobool29 = icmp ne [3 x float]* %50, null, !dbg !5349
  br i1 %tobool29, label %if.then30, label %if.else, !dbg !5352

if.then30:                                        ; preds = %if.then28
  %51 = load [3 x float]*, [3 x float]** %polyNos, align 8, !dbg !5353
  %52 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !5355
  %head31 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %52, i32 0, i32 0, !dbg !5355
  %call32 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head31), !dbg !5355
  %idxprom33 = sext i32 %call32 to i64, !dbg !5353
  %arrayidx34 = getelementptr inbounds [3 x float], [3 x float]* %51, i64 %idxprom33, !dbg !5353
  %arraydecay35 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx34, i64 0, i64 0, !dbg !5353
  call void @glNormal3fv(float* %arraydecay35), !dbg !5356
  store i32 0, i32* %fi, align 4, !dbg !5357
  br label %for.cond36, !dbg !5359

for.cond36:                                       ; preds = %for.inc, %if.then30
  %53 = load i32, i32* %fi, align 4, !dbg !5360
  %cmp37 = icmp slt i32 %53, 3, !dbg !5362
  br i1 %cmp37, label %for.body39, label %for.end, !dbg !5363

for.body39:                                       ; preds = %for.cond36
  %54 = load %struct.BMLoop**, %struct.BMLoop*** %ltri, align 8, !dbg !5364
  %55 = load i32, i32* %fi, align 4, !dbg !5366
  %idxprom40 = sext i32 %55 to i64, !dbg !5364
  %arrayidx41 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %54, i64 %idxprom40, !dbg !5364
  %56 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx41, align 8, !dbg !5364
  %57 = load i32, i32* %fi, align 4, !dbg !5367
  call void @emdm_pass_attrib_vertex_glsl(%struct.DMVertexAttribs* %attribs, %struct.BMLoop* %56, i32 %57), !dbg !5368
  %58 = load [3 x float]*, [3 x float]** %vertexCos, align 8, !dbg !5369
  %59 = load %struct.BMLoop**, %struct.BMLoop*** %ltri, align 8, !dbg !5370
  %60 = load i32, i32* %fi, align 4, !dbg !5370
  %idxprom42 = sext i32 %60 to i64, !dbg !5370
  %arrayidx43 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %59, i64 %idxprom42, !dbg !5370
  %61 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx43, align 8, !dbg !5370
  %v = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %61, i32 0, i32 1, !dbg !5370
  %62 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !5370
  %head44 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %62, i32 0, i32 0, !dbg !5370
  %call45 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head44), !dbg !5370
  %idxprom46 = sext i32 %call45 to i64, !dbg !5369
  %arrayidx47 = getelementptr inbounds [3 x float], [3 x float]* %58, i64 %idxprom46, !dbg !5369
  %arraydecay48 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx47, i64 0, i64 0, !dbg !5369
  call void @glVertex3fv(float* %arraydecay48), !dbg !5371
  br label %for.inc, !dbg !5372

for.inc:                                          ; preds = %for.body39
  %63 = load i32, i32* %fi, align 4, !dbg !5373
  %inc = add nsw i32 %63, 1, !dbg !5373
  store i32 %inc, i32* %fi, align 4, !dbg !5373
  br label %for.cond36, !dbg !5374, !llvm.loop !5375

for.end:                                          ; preds = %for.cond36
  br label %if.end63, !dbg !5377

if.else:                                          ; preds = %if.then28
  %64 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !5378
  %no = getelementptr inbounds %struct.BMFace, %struct.BMFace* %64, i32 0, i32 4, !dbg !5380
  %arraydecay49 = getelementptr inbounds [3 x float], [3 x float]* %no, i64 0, i64 0, !dbg !5378
  call void @glNormal3fv(float* %arraydecay49), !dbg !5381
  store i32 0, i32* %fi, align 4, !dbg !5382
  br label %for.cond50, !dbg !5384

for.cond50:                                       ; preds = %for.inc60, %if.else
  %65 = load i32, i32* %fi, align 4, !dbg !5385
  %cmp51 = icmp slt i32 %65, 3, !dbg !5387
  br i1 %cmp51, label %for.body53, label %for.end62, !dbg !5388

for.body53:                                       ; preds = %for.cond50
  %66 = load %struct.BMLoop**, %struct.BMLoop*** %ltri, align 8, !dbg !5389
  %67 = load i32, i32* %fi, align 4, !dbg !5391
  %idxprom54 = sext i32 %67 to i64, !dbg !5389
  %arrayidx55 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %66, i64 %idxprom54, !dbg !5389
  %68 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx55, align 8, !dbg !5389
  %69 = load i32, i32* %fi, align 4, !dbg !5392
  call void @emdm_pass_attrib_vertex_glsl(%struct.DMVertexAttribs* %attribs, %struct.BMLoop* %68, i32 %69), !dbg !5393
  %70 = load %struct.BMLoop**, %struct.BMLoop*** %ltri, align 8, !dbg !5394
  %71 = load i32, i32* %fi, align 4, !dbg !5395
  %idxprom56 = sext i32 %71 to i64, !dbg !5394
  %arrayidx57 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %70, i64 %idxprom56, !dbg !5394
  %72 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx57, align 8, !dbg !5394
  %v58 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %72, i32 0, i32 1, !dbg !5396
  %73 = load %struct.BMVert*, %struct.BMVert** %v58, align 8, !dbg !5396
  %co = getelementptr inbounds %struct.BMVert, %struct.BMVert* %73, i32 0, i32 2, !dbg !5397
  %arraydecay59 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !5394
  call void @glVertex3fv(float* %arraydecay59), !dbg !5398
  br label %for.inc60, !dbg !5399

for.inc60:                                        ; preds = %for.body53
  %74 = load i32, i32* %fi, align 4, !dbg !5400
  %inc61 = add nsw i32 %74, 1, !dbg !5400
  store i32 %inc61, i32* %fi, align 4, !dbg !5400
  br label %for.cond50, !dbg !5401, !llvm.loop !5402

for.end62:                                        ; preds = %for.cond50
  br label %if.end63

if.end63:                                         ; preds = %for.end62, %for.end
  br label %if.end130, !dbg !5404

if.else64:                                        ; preds = %lor.end
  %75 = load [3 x float]*, [3 x float]** %vertexCos, align 8, !dbg !5405
  %tobool65 = icmp ne [3 x float]* %75, null, !dbg !5405
  br i1 %tobool65, label %if.then66, label %if.else98, !dbg !5408

if.then66:                                        ; preds = %if.else64
  store i32 0, i32* %fi, align 4, !dbg !5409
  br label %for.cond67, !dbg !5412

for.cond67:                                       ; preds = %for.inc95, %if.then66
  %76 = load i32, i32* %fi, align 4, !dbg !5413
  %cmp68 = icmp slt i32 %76, 3, !dbg !5415
  br i1 %cmp68, label %for.body70, label %for.end97, !dbg !5416

for.body70:                                       ; preds = %for.cond67
  call void @llvm.dbg.declare(metadata i32* %j, metadata !5417, metadata !DIExpression()), !dbg !5419
  %77 = load %struct.BMLoop**, %struct.BMLoop*** %ltri, align 8, !dbg !5420
  %78 = load i32, i32* %fi, align 4, !dbg !5420
  %idxprom71 = sext i32 %78 to i64, !dbg !5420
  %arrayidx72 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %77, i64 %idxprom71, !dbg !5420
  %79 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx72, align 8, !dbg !5420
  %v73 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %79, i32 0, i32 1, !dbg !5420
  %80 = load %struct.BMVert*, %struct.BMVert** %v73, align 8, !dbg !5420
  %head74 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %80, i32 0, i32 0, !dbg !5420
  %call75 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head74), !dbg !5420
  store i32 %call75, i32* %j, align 4, !dbg !5419
  %81 = load %struct.BMLoop**, %struct.BMLoop*** %ltri, align 8, !dbg !5421
  %82 = load i32, i32* %fi, align 4, !dbg !5422
  %idxprom76 = sext i32 %82 to i64, !dbg !5421
  %arrayidx77 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %81, i64 %idxprom76, !dbg !5421
  %83 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx77, align 8, !dbg !5421
  %84 = load i32, i32* %fi, align 4, !dbg !5423
  call void @emdm_pass_attrib_vertex_glsl(%struct.DMVertexAttribs* %attribs, %struct.BMLoop* %83, i32 %84), !dbg !5424
  %85 = load [3 x float]*, [3 x float]** %lnors, align 8, !dbg !5425
  %tobool78 = icmp ne [3 x float]* %85, null, !dbg !5425
  br i1 %tobool78, label %if.then79, label %if.else87, !dbg !5427

if.then79:                                        ; preds = %for.body70
  %86 = load [3 x float]*, [3 x float]** %lnors, align 8, !dbg !5428
  %87 = load %struct.BMLoop**, %struct.BMLoop*** %ltri, align 8, !dbg !5429
  %88 = load i32, i32* %fi, align 4, !dbg !5429
  %idxprom80 = sext i32 %88 to i64, !dbg !5429
  %arrayidx81 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %87, i64 %idxprom80, !dbg !5429
  %89 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx81, align 8, !dbg !5429
  %head82 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %89, i32 0, i32 0, !dbg !5429
  %call83 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head82), !dbg !5429
  %idxprom84 = sext i32 %call83 to i64, !dbg !5428
  %arrayidx85 = getelementptr inbounds [3 x float], [3 x float]* %86, i64 %idxprom84, !dbg !5428
  %arraydecay86 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx85, i64 0, i64 0, !dbg !5428
  call void @glNormal3fv(float* %arraydecay86), !dbg !5430
  br label %if.end91, !dbg !5430

if.else87:                                        ; preds = %for.body70
  %90 = load [3 x float]*, [3 x float]** %vertexNos, align 8, !dbg !5431
  %91 = load i32, i32* %j, align 4, !dbg !5432
  %idxprom88 = sext i32 %91 to i64, !dbg !5431
  %arrayidx89 = getelementptr inbounds [3 x float], [3 x float]* %90, i64 %idxprom88, !dbg !5431
  %arraydecay90 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx89, i64 0, i64 0, !dbg !5431
  call void @glNormal3fv(float* %arraydecay90), !dbg !5433
  br label %if.end91

if.end91:                                         ; preds = %if.else87, %if.then79
  %92 = load [3 x float]*, [3 x float]** %vertexCos, align 8, !dbg !5434
  %93 = load i32, i32* %j, align 4, !dbg !5435
  %idxprom92 = sext i32 %93 to i64, !dbg !5434
  %arrayidx93 = getelementptr inbounds [3 x float], [3 x float]* %92, i64 %idxprom92, !dbg !5434
  %arraydecay94 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx93, i64 0, i64 0, !dbg !5434
  call void @glVertex3fv(float* %arraydecay94), !dbg !5436
  br label %for.inc95, !dbg !5437

for.inc95:                                        ; preds = %if.end91
  %94 = load i32, i32* %fi, align 4, !dbg !5438
  %inc96 = add nsw i32 %94, 1, !dbg !5438
  store i32 %inc96, i32* %fi, align 4, !dbg !5438
  br label %for.cond67, !dbg !5439, !llvm.loop !5440

for.end97:                                        ; preds = %for.cond67
  br label %if.end129, !dbg !5442

if.else98:                                        ; preds = %if.else64
  store i32 0, i32* %fi, align 4, !dbg !5443
  br label %for.cond99, !dbg !5446

for.cond99:                                       ; preds = %for.inc126, %if.else98
  %95 = load i32, i32* %fi, align 4, !dbg !5447
  %cmp100 = icmp slt i32 %95, 3, !dbg !5449
  br i1 %cmp100, label %for.body102, label %for.end128, !dbg !5450

for.body102:                                      ; preds = %for.cond99
  %96 = load %struct.BMLoop**, %struct.BMLoop*** %ltri, align 8, !dbg !5451
  %97 = load i32, i32* %fi, align 4, !dbg !5453
  %idxprom103 = sext i32 %97 to i64, !dbg !5451
  %arrayidx104 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %96, i64 %idxprom103, !dbg !5451
  %98 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx104, align 8, !dbg !5451
  %99 = load i32, i32* %fi, align 4, !dbg !5454
  call void @emdm_pass_attrib_vertex_glsl(%struct.DMVertexAttribs* %attribs, %struct.BMLoop* %98, i32 %99), !dbg !5455
  %100 = load [3 x float]*, [3 x float]** %lnors, align 8, !dbg !5456
  %tobool105 = icmp ne [3 x float]* %100, null, !dbg !5456
  br i1 %tobool105, label %if.then106, label %if.else114, !dbg !5458

if.then106:                                       ; preds = %for.body102
  %101 = load [3 x float]*, [3 x float]** %lnors, align 8, !dbg !5459
  %102 = load %struct.BMLoop**, %struct.BMLoop*** %ltri, align 8, !dbg !5460
  %103 = load i32, i32* %fi, align 4, !dbg !5460
  %idxprom107 = sext i32 %103 to i64, !dbg !5460
  %arrayidx108 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %102, i64 %idxprom107, !dbg !5460
  %104 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx108, align 8, !dbg !5460
  %head109 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %104, i32 0, i32 0, !dbg !5460
  %call110 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head109), !dbg !5460
  %idxprom111 = sext i32 %call110 to i64, !dbg !5459
  %arrayidx112 = getelementptr inbounds [3 x float], [3 x float]* %101, i64 %idxprom111, !dbg !5459
  %arraydecay113 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx112, i64 0, i64 0, !dbg !5459
  call void @glNormal3fv(float* %arraydecay113), !dbg !5461
  br label %if.end120, !dbg !5461

if.else114:                                       ; preds = %for.body102
  %105 = load %struct.BMLoop**, %struct.BMLoop*** %ltri, align 8, !dbg !5462
  %106 = load i32, i32* %fi, align 4, !dbg !5463
  %idxprom115 = sext i32 %106 to i64, !dbg !5462
  %arrayidx116 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %105, i64 %idxprom115, !dbg !5462
  %107 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx116, align 8, !dbg !5462
  %v117 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %107, i32 0, i32 1, !dbg !5464
  %108 = load %struct.BMVert*, %struct.BMVert** %v117, align 8, !dbg !5464
  %no118 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %108, i32 0, i32 3, !dbg !5465
  %arraydecay119 = getelementptr inbounds [3 x float], [3 x float]* %no118, i64 0, i64 0, !dbg !5462
  call void @glNormal3fv(float* %arraydecay119), !dbg !5466
  br label %if.end120

if.end120:                                        ; preds = %if.else114, %if.then106
  %109 = load %struct.BMLoop**, %struct.BMLoop*** %ltri, align 8, !dbg !5467
  %110 = load i32, i32* %fi, align 4, !dbg !5468
  %idxprom121 = sext i32 %110 to i64, !dbg !5467
  %arrayidx122 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %109, i64 %idxprom121, !dbg !5467
  %111 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx122, align 8, !dbg !5467
  %v123 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %111, i32 0, i32 1, !dbg !5469
  %112 = load %struct.BMVert*, %struct.BMVert** %v123, align 8, !dbg !5469
  %co124 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %112, i32 0, i32 2, !dbg !5470
  %arraydecay125 = getelementptr inbounds [3 x float], [3 x float]* %co124, i64 0, i64 0, !dbg !5467
  call void @glVertex3fv(float* %arraydecay125), !dbg !5471
  br label %for.inc126, !dbg !5472

for.inc126:                                       ; preds = %if.end120
  %113 = load i32, i32* %fi, align 4, !dbg !5473
  %inc127 = add nsw i32 %113, 1, !dbg !5473
  store i32 %inc127, i32* %fi, align 4, !dbg !5473
  br label %for.cond99, !dbg !5474, !llvm.loop !5475

for.end128:                                       ; preds = %for.cond99
  br label %if.end129

if.end129:                                        ; preds = %for.end128, %for.end97
  br label %if.end130

if.end130:                                        ; preds = %if.end129, %if.end63
  br label %for.inc131, !dbg !5477

for.inc131:                                       ; preds = %if.end130, %if.then
  %114 = load i32, i32* %i, align 4, !dbg !5478
  %inc132 = add nsw i32 %114, 1, !dbg !5478
  store i32 %inc132, i32* %i, align 4, !dbg !5478
  br label %for.cond, !dbg !5479, !llvm.loop !5480

for.end133:                                       ; preds = %for.cond
  %115 = load i32, i32* %matnr, align 4, !dbg !5482
  %cmp134 = icmp ne i32 %115, -1, !dbg !5484
  br i1 %cmp134, label %if.then136, label %if.end137, !dbg !5485

if.then136:                                       ; preds = %for.end133
  call void @glEnd(), !dbg !5486
  br label %if.end137, !dbg !5488

if.end137:                                        ; preds = %if.then136, %for.end133
  ret void, !dbg !5489
}

; Function Attrs: noinline nounwind uwtable
define internal void @emDM_drawFacesTex(%struct.DerivedMesh* %dm, i32 (%struct.MTFace*, i8, i32)* %setDrawOptions, i32 (i8*, i32, i32)* %compareDrawOptions, i8* %userData, i32 %UNUSED_flag) #0 !dbg !5490 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %setDrawOptions.addr = alloca i32 (%struct.MTFace*, i8, i32)*, align 8
  %compareDrawOptions.addr = alloca i32 (i8*, i32, i32)*, align 8
  %userData.addr = alloca i8*, align 8
  %UNUSED_flag.addr = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !5491, metadata !DIExpression()), !dbg !5492
  store i32 (%struct.MTFace*, i8, i32)* %setDrawOptions, i32 (%struct.MTFace*, i8, i32)** %setDrawOptions.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (%struct.MTFace*, i8, i32)** %setDrawOptions.addr, metadata !5493, metadata !DIExpression()), !dbg !5494
  store i32 (i8*, i32, i32)* %compareDrawOptions, i32 (i8*, i32, i32)** %compareDrawOptions.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i32, i32)** %compareDrawOptions.addr, metadata !5495, metadata !DIExpression()), !dbg !5496
  store i8* %userData, i8** %userData.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userData.addr, metadata !5497, metadata !DIExpression()), !dbg !5498
  store i32 %UNUSED_flag, i32* %UNUSED_flag.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %UNUSED_flag.addr, metadata !5499, metadata !DIExpression()), !dbg !5500
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5501
  %1 = load i32 (%struct.MTFace*, i8, i32)*, i32 (%struct.MTFace*, i8, i32)** %setDrawOptions.addr, align 8, !dbg !5502
  %2 = load i32 (i8*, i32, i32)*, i32 (i8*, i32, i32)** %compareDrawOptions.addr, align 8, !dbg !5503
  %3 = load i8*, i8** %userData.addr, align 8, !dbg !5504
  call void @emDM_drawFacesTex_common(%struct.DerivedMesh* %0, i32 (%struct.MTFace*, i8, i32)* %1, i32 (i8*, i32)* null, i32 (i8*, i32, i32)* %2, i8* %3), !dbg !5505
  ret void, !dbg !5506
}

; Function Attrs: noinline nounwind uwtable
define internal void @emDM_drawFacesGLSL(%struct.DerivedMesh* %dm, i32 (i32, i8*)* %setMaterial) #0 !dbg !5507 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %setMaterial.addr = alloca i32 (i32, i8*)*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !5510, metadata !DIExpression()), !dbg !5511
  store i32 (i32, i8*)* %setMaterial, i32 (i32, i8*)** %setMaterial.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i32, i8*)** %setMaterial.addr, metadata !5512, metadata !DIExpression()), !dbg !5513
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5514
  %drawMappedFacesGLSL = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %0, i32 0, i32 91, !dbg !5515
  %1 = load void (%struct.DerivedMesh*, i32 (i32, i8*)*, i32 (i8*, i32)*, i8*)*, void (%struct.DerivedMesh*, i32 (i32, i8*)*, i32 (i8*, i32)*, i8*)** %drawMappedFacesGLSL, align 8, !dbg !5515
  %2 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5516
  %3 = load i32 (i32, i8*)*, i32 (i32, i8*)** %setMaterial.addr, align 8, !dbg !5517
  call void %1(%struct.DerivedMesh* %2, i32 (i32, i8*)* %3, i32 (i8*, i32)* null, i8* null), !dbg !5514
  ret void, !dbg !5518
}

; Function Attrs: noinline nounwind uwtable
define internal void @emDM_drawUVEdges(%struct.DerivedMesh* %dm) #0 !dbg !5519 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %bmdm = alloca %struct.EditDerivedBMesh*, align 8
  %bm = alloca %struct.BMesh*, align 8
  %efa = alloca %struct.BMFace*, align 8
  %iter = alloca %struct.BMIter, align 8
  %cd_loop_uv_offset = alloca i32, align 4
  %l_iter = alloca %struct.BMLoop*, align 8
  %l_first = alloca %struct.BMLoop*, align 8
  %uv = alloca float*, align 8
  %uv_prev = alloca float*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !5520, metadata !DIExpression()), !dbg !5521
  call void @llvm.dbg.declare(metadata %struct.EditDerivedBMesh** %bmdm, metadata !5522, metadata !DIExpression()), !dbg !5523
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5524
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.EditDerivedBMesh*, !dbg !5525
  store %struct.EditDerivedBMesh* %1, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !5523
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm, metadata !5526, metadata !DIExpression()), !dbg !5527
  %2 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !5528
  %em = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %2, i32 0, i32 1, !dbg !5529
  %3 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !5529
  %bm1 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %3, i32 0, i32 0, !dbg !5530
  %4 = load %struct.BMesh*, %struct.BMesh** %bm1, align 8, !dbg !5530
  store %struct.BMesh* %4, %struct.BMesh** %bm, align 8, !dbg !5527
  call void @llvm.dbg.declare(metadata %struct.BMFace** %efa, metadata !5531, metadata !DIExpression()), !dbg !5532
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !5533, metadata !DIExpression()), !dbg !5534
  call void @llvm.dbg.declare(metadata i32* %cd_loop_uv_offset, metadata !5535, metadata !DIExpression()), !dbg !5536
  %5 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !5537
  %ldata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %5, i32 0, i32 26, !dbg !5538
  %call = call i32 @CustomData_get_offset(%struct.CustomData* %ldata, i32 16), !dbg !5539
  store i32 %call, i32* %cd_loop_uv_offset, align 4, !dbg !5536
  %6 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !5540
  %cmp = icmp eq i32 %6, -1, !dbg !5540
  br i1 %cmp, label %if.then, label %if.end, !dbg !5542

if.then:                                          ; preds = %entry
  br label %return, !dbg !5543

if.end:                                           ; preds = %entry
  call void @glBegin(i32 1), !dbg !5545
  %7 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !5546
  %call2 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %7, i8 zeroext 3, i8* null), !dbg !5546
  %8 = bitcast i8* %call2 to %struct.BMFace*, !dbg !5546
  store %struct.BMFace* %8, %struct.BMFace** %efa, align 8, !dbg !5546
  br label %for.cond, !dbg !5546

for.cond:                                         ; preds = %for.inc, %if.end
  %9 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !5548
  %tobool = icmp ne %struct.BMFace* %9, null, !dbg !5546
  br i1 %tobool, label %for.body, label %for.end, !dbg !5546

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l_iter, metadata !5550, metadata !DIExpression()), !dbg !5552
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l_first, metadata !5553, metadata !DIExpression()), !dbg !5554
  call void @llvm.dbg.declare(metadata float** %uv, metadata !5555, metadata !DIExpression()), !dbg !5556
  call void @llvm.dbg.declare(metadata float** %uv_prev, metadata !5557, metadata !DIExpression()), !dbg !5558
  %10 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !5559
  %head = getelementptr inbounds %struct.BMFace, %struct.BMFace* %10, i32 0, i32 0, !dbg !5559
  %call3 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext 2), !dbg !5559
  %tobool4 = icmp ne i8 %call3, 0, !dbg !5559
  br i1 %tobool4, label %if.then5, label %if.end6, !dbg !5561

if.then5:                                         ; preds = %for.body
  br label %for.inc, !dbg !5562

if.end6:                                          ; preds = %for.body
  %11 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !5563
  %l_first7 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %11, i32 0, i32 2, !dbg !5563
  %12 = load %struct.BMLoop*, %struct.BMLoop** %l_first7, align 8, !dbg !5563
  store %struct.BMLoop* %12, %struct.BMLoop** %l_first, align 8, !dbg !5564
  store %struct.BMLoop* %12, %struct.BMLoop** %l_iter, align 8, !dbg !5565
  %13 = load %struct.BMLoop*, %struct.BMLoop** %l_iter, align 8, !dbg !5566
  %prev = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %13, i32 0, i32 7, !dbg !5566
  %14 = load %struct.BMLoop*, %struct.BMLoop** %prev, align 8, !dbg !5566
  %head8 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %14, i32 0, i32 0, !dbg !5566
  %data = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head8, i32 0, i32 0, !dbg !5566
  %15 = load i8*, i8** %data, align 8, !dbg !5566
  %16 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !5566
  %idx.ext = sext i32 %16 to i64, !dbg !5566
  %add.ptr = getelementptr inbounds i8, i8* %15, i64 %idx.ext, !dbg !5566
  %17 = bitcast i8* %add.ptr to %struct.MLoopUV*, !dbg !5567
  %uv9 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %17, i32 0, i32 0, !dbg !5568
  %arraydecay = getelementptr inbounds [2 x float], [2 x float]* %uv9, i64 0, i64 0, !dbg !5569
  store float* %arraydecay, float** %uv_prev, align 8, !dbg !5570
  br label %do.body, !dbg !5571

do.body:                                          ; preds = %do.cond, %if.end6
  %18 = load %struct.BMLoop*, %struct.BMLoop** %l_iter, align 8, !dbg !5572
  %head10 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %18, i32 0, i32 0, !dbg !5572
  %data11 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head10, i32 0, i32 0, !dbg !5572
  %19 = load i8*, i8** %data11, align 8, !dbg !5572
  %20 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !5572
  %idx.ext12 = sext i32 %20 to i64, !dbg !5572
  %add.ptr13 = getelementptr inbounds i8, i8* %19, i64 %idx.ext12, !dbg !5572
  %21 = bitcast i8* %add.ptr13 to %struct.MLoopUV*, !dbg !5574
  %uv14 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %21, i32 0, i32 0, !dbg !5575
  %arraydecay15 = getelementptr inbounds [2 x float], [2 x float]* %uv14, i64 0, i64 0, !dbg !5576
  store float* %arraydecay15, float** %uv, align 8, !dbg !5577
  %22 = load float*, float** %uv, align 8, !dbg !5578
  call void @glVertex2fv(float* %22), !dbg !5579
  %23 = load float*, float** %uv_prev, align 8, !dbg !5580
  call void @glVertex2fv(float* %23), !dbg !5581
  %24 = load float*, float** %uv, align 8, !dbg !5582
  store float* %24, float** %uv_prev, align 8, !dbg !5583
  br label %do.cond, !dbg !5584

do.cond:                                          ; preds = %do.body
  %25 = load %struct.BMLoop*, %struct.BMLoop** %l_iter, align 8, !dbg !5585
  %next = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %25, i32 0, i32 6, !dbg !5586
  %26 = load %struct.BMLoop*, %struct.BMLoop** %next, align 8, !dbg !5586
  store %struct.BMLoop* %26, %struct.BMLoop** %l_iter, align 8, !dbg !5587
  %27 = load %struct.BMLoop*, %struct.BMLoop** %l_first, align 8, !dbg !5588
  %cmp16 = icmp ne %struct.BMLoop* %26, %27, !dbg !5589
  br i1 %cmp16, label %do.body, label %do.end, !dbg !5584, !llvm.loop !5590

do.end:                                           ; preds = %do.cond
  br label %for.inc, !dbg !5592

for.inc:                                          ; preds = %do.end, %if.then5
  %call17 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !5548
  %28 = bitcast i8* %call17 to %struct.BMFace*, !dbg !5548
  store %struct.BMFace* %28, %struct.BMFace** %efa, align 8, !dbg !5548
  br label %for.cond, !dbg !5548, !llvm.loop !5593

for.end:                                          ; preds = %for.cond
  call void @glEnd(), !dbg !5595
  br label %return, !dbg !5596

return:                                           ; preds = %for.end, %if.then
  ret void, !dbg !5596
}

; Function Attrs: noinline nounwind uwtable
define internal void @emDM_release(%struct.DerivedMesh* %dm) #0 !dbg !5597 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %bmdm = alloca %struct.EditDerivedBMesh*, align 8
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !5598, metadata !DIExpression()), !dbg !5599
  call void @llvm.dbg.declare(metadata %struct.EditDerivedBMesh** %bmdm, metadata !5600, metadata !DIExpression()), !dbg !5601
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5602
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.EditDerivedBMesh*, !dbg !5603
  store %struct.EditDerivedBMesh* %1, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !5601
  %2 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5604
  %call = call i32 @DM_release(%struct.DerivedMesh* %2), !dbg !5606
  %tobool = icmp ne i32 %call, 0, !dbg !5606
  br i1 %tobool, label %if.then, label %if.end16, !dbg !5607

if.then:                                          ; preds = %entry
  %3 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !5608
  %vertexCos = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %3, i32 0, i32 2, !dbg !5611
  %4 = load [3 x float]*, [3 x float]** %vertexCos, align 8, !dbg !5611
  %tobool1 = icmp ne [3 x float]* %4, null, !dbg !5608
  br i1 %tobool1, label %if.then2, label %if.end11, !dbg !5612

if.then2:                                         ; preds = %if.then
  %5 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5613
  %6 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !5615
  %vertexCos3 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %6, i32 0, i32 2, !dbg !5616
  %7 = load [3 x float]*, [3 x float]** %vertexCos3, align 8, !dbg !5616
  %8 = bitcast [3 x float]* %7 to i8*, !dbg !5617
  call void %5(i8* %8), !dbg !5613
  %9 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !5618
  %vertexNos = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %9, i32 0, i32 3, !dbg !5620
  %10 = load [3 x float]*, [3 x float]** %vertexNos, align 8, !dbg !5620
  %tobool4 = icmp ne [3 x float]* %10, null, !dbg !5618
  br i1 %tobool4, label %if.then5, label %if.end, !dbg !5621

if.then5:                                         ; preds = %if.then2
  %11 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5622
  %12 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !5624
  %vertexNos6 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %12, i32 0, i32 3, !dbg !5625
  %13 = load [3 x float]*, [3 x float]** %vertexNos6, align 8, !dbg !5625
  %14 = bitcast [3 x float]* %13 to i8*, !dbg !5626
  call void %11(i8* %14), !dbg !5622
  br label %if.end, !dbg !5627

if.end:                                           ; preds = %if.then5, %if.then2
  %15 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !5628
  %polyNos = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %15, i32 0, i32 4, !dbg !5630
  %16 = load [3 x float]*, [3 x float]** %polyNos, align 8, !dbg !5630
  %tobool7 = icmp ne [3 x float]* %16, null, !dbg !5628
  br i1 %tobool7, label %if.then8, label %if.end10, !dbg !5631

if.then8:                                         ; preds = %if.end
  %17 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5632
  %18 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !5634
  %polyNos9 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %18, i32 0, i32 4, !dbg !5635
  %19 = load [3 x float]*, [3 x float]** %polyNos9, align 8, !dbg !5635
  %20 = bitcast [3 x float]* %19 to i8*, !dbg !5636
  call void %17(i8* %20), !dbg !5632
  br label %if.end10, !dbg !5637

if.end10:                                         ; preds = %if.then8, %if.end
  br label %if.end11, !dbg !5638

if.end11:                                         ; preds = %if.end10, %if.then
  %21 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !5639
  %polyCos = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %21, i32 0, i32 5, !dbg !5641
  %22 = load [3 x float]*, [3 x float]** %polyCos, align 8, !dbg !5641
  %tobool12 = icmp ne [3 x float]* %22, null, !dbg !5639
  br i1 %tobool12, label %if.then13, label %if.end15, !dbg !5642

if.then13:                                        ; preds = %if.end11
  %23 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5643
  %24 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !5645
  %polyCos14 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %24, i32 0, i32 5, !dbg !5646
  %25 = load [3 x float]*, [3 x float]** %polyCos14, align 8, !dbg !5646
  %26 = bitcast [3 x float]* %25 to i8*, !dbg !5647
  call void %23(i8* %26), !dbg !5643
  br label %if.end15, !dbg !5648

if.end15:                                         ; preds = %if.then13, %if.end11
  %27 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5649
  %28 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !5650
  %29 = bitcast %struct.EditDerivedBMesh* %28 to i8*, !dbg !5650
  call void %27(i8* %29), !dbg !5649
  br label %if.end16, !dbg !5651

if.end16:                                         ; preds = %if.end15, %entry
  ret void, !dbg !5652
}

declare dso_local void @DM_add_vert_layer(%struct.DerivedMesh*, i32, i32, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %bm, i8 zeroext %itype, i8* %data) #0 !dbg !5653 {
entry:
  %retval = alloca i8*, align 8
  %iter.addr = alloca %struct.BMIter*, align 8
  %bm.addr = alloca %struct.BMesh*, align 8
  %itype.addr = alloca i8, align 1
  %data.addr = alloca i8*, align 8
  store %struct.BMIter* %iter, %struct.BMIter** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMIter** %iter.addr, metadata !5658, metadata !DIExpression()), !dbg !5659
  store %struct.BMesh* %bm, %struct.BMesh** %bm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm.addr, metadata !5660, metadata !DIExpression()), !dbg !5661
  store i8 %itype, i8* %itype.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %itype.addr, metadata !5662, metadata !DIExpression()), !dbg !5663
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !5664, metadata !DIExpression()), !dbg !5665
  %0 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !5666
  %1 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !5666
  %2 = load i8, i8* %itype.addr, align 1, !dbg !5666
  %3 = load i8*, i8** %data.addr, align 8, !dbg !5666
  %call = call zeroext i8 @BM_iter_init(%struct.BMIter* %0, %struct.BMesh* %1, i8 zeroext %2, i8* %3), !dbg !5666
  %tobool = icmp ne i8 %call, 0, !dbg !5666
  br i1 %tobool, label %if.then, label %if.else, !dbg !5668

if.then:                                          ; preds = %entry
  %4 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !5669
  %call1 = call i8* @BM_iter_step(%struct.BMIter* %4), !dbg !5671
  store i8* %call1, i8** %retval, align 8, !dbg !5672
  br label %return, !dbg !5672

if.else:                                          ; preds = %entry
  store i8* null, i8** %retval, align 8, !dbg !5673
  br label %return, !dbg !5673

return:                                           ; preds = %if.else, %if.then
  %5 = load i8*, i8** %retval, align 8, !dbg !5675
  ret i8* %5, !dbg !5675
}

declare dso_local void @DM_set_vert_data(%struct.DerivedMesh*, i32, i32, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal i8* @BM_iter_step(%struct.BMIter* %iter) #0 !dbg !5676 {
entry:
  %iter.addr = alloca %struct.BMIter*, align 8
  store %struct.BMIter* %iter, %struct.BMIter** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMIter** %iter.addr, metadata !5679, metadata !DIExpression()), !dbg !5680
  %0 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !5681
  %step = getelementptr inbounds %struct.BMIter, %struct.BMIter* %0, i32 0, i32 2, !dbg !5682
  %1 = load i8* (i8*)*, i8* (i8*)** %step, align 8, !dbg !5682
  %2 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !5683
  %3 = bitcast %struct.BMIter* %2 to i8*, !dbg !5683
  %call = call i8* %1(i8* %3), !dbg !5681
  ret i8* %call, !dbg !5684
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @BKE_editmesh_statvis_calc(%struct.BMEditMesh* %em, %struct.DerivedMesh* %dm, %struct.MeshStatVis* %statvis) #0 !dbg !5685 {
entry:
  %em.addr = alloca %struct.BMEditMesh*, align 8
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %statvis.addr = alloca %struct.MeshStatVis*, align 8
  %bmdm = alloca %struct.EditDerivedBMesh*, align 8
  %scale = alloca float, align 4
  store %struct.BMEditMesh* %em, %struct.BMEditMesh** %em.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em.addr, metadata !5690, metadata !DIExpression()), !dbg !5691
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !5692, metadata !DIExpression()), !dbg !5693
  store %struct.MeshStatVis* %statvis, %struct.MeshStatVis** %statvis.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MeshStatVis** %statvis.addr, metadata !5694, metadata !DIExpression()), !dbg !5695
  call void @llvm.dbg.declare(metadata %struct.EditDerivedBMesh** %bmdm, metadata !5696, metadata !DIExpression()), !dbg !5697
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !5698
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.EditDerivedBMesh*, !dbg !5699
  store %struct.EditDerivedBMesh* %1, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !5697
  %2 = load %struct.MeshStatVis*, %struct.MeshStatVis** %statvis.addr, align 8, !dbg !5700
  %type = getelementptr inbounds %struct.MeshStatVis, %struct.MeshStatVis* %2, i32 0, i32 0, !dbg !5701
  %3 = load i8, i8* %type, align 4, !dbg !5701
  %conv = zext i8 %3 to i32, !dbg !5700
  switch i32 %conv, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb2
    i32 2, label %sw.bb12
    i32 3, label %sw.bb20
    i32 4, label %sw.bb35
  ], !dbg !5702

sw.bb:                                            ; preds = %entry
  %4 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !5703
  call void @BKE_editmesh_color_ensure(%struct.BMEditMesh* %4, i8 zeroext 8), !dbg !5706
  %5 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !5707
  %6 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !5708
  %tobool = icmp ne %struct.EditDerivedBMesh* %6, null, !dbg !5708
  br i1 %tobool, label %cond.true, label %cond.false, !dbg !5708

cond.true:                                        ; preds = %sw.bb
  %7 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !5709
  %polyNos = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %7, i32 0, i32 4, !dbg !5710
  %8 = load [3 x float]*, [3 x float]** %polyNos, align 8, !dbg !5710
  br label %cond.end, !dbg !5708

cond.false:                                       ; preds = %sw.bb
  br label %cond.end, !dbg !5708

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi [3 x float]* [ %8, %cond.true ], [ null, %cond.false ], !dbg !5708
  %9 = load %struct.MeshStatVis*, %struct.MeshStatVis** %statvis.addr, align 8, !dbg !5711
  %overhang_min = getelementptr inbounds %struct.MeshStatVis, %struct.MeshStatVis* %9, i32 0, i32 3, !dbg !5712
  %10 = load float, float* %overhang_min, align 4, !dbg !5712
  %div = fdiv float %10, 0x400921FB60000000, !dbg !5713
  %11 = load %struct.MeshStatVis*, %struct.MeshStatVis** %statvis.addr, align 8, !dbg !5714
  %overhang_max = getelementptr inbounds %struct.MeshStatVis, %struct.MeshStatVis* %11, i32 0, i32 4, !dbg !5715
  %12 = load float, float* %overhang_max, align 4, !dbg !5715
  %div1 = fdiv float %12, 0x400921FB60000000, !dbg !5716
  %13 = load %struct.MeshStatVis*, %struct.MeshStatVis** %statvis.addr, align 8, !dbg !5717
  %overhang_axis = getelementptr inbounds %struct.MeshStatVis, %struct.MeshStatVis* %13, i32 0, i32 2, !dbg !5718
  %14 = load i8, i8* %overhang_axis, align 1, !dbg !5718
  %15 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !5719
  %derivedFaceColor = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %15, i32 0, i32 10, !dbg !5720
  %16 = load [4 x i8]*, [4 x i8]** %derivedFaceColor, align 8, !dbg !5720
  call void @statvis_calc_overhang(%struct.BMEditMesh* %5, [3 x float]* %cond, float %div, float %div1, i8 zeroext %14, [4 x i8]* %16), !dbg !5721
  br label %sw.epilog, !dbg !5722

sw.bb2:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata float* %scale, metadata !5723, metadata !DIExpression()), !dbg !5725
  %17 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !5726
  %ob = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %17, i32 0, i32 14, !dbg !5727
  %18 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5727
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %18, i32 0, i32 47, !dbg !5728
  %arraydecay = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !5726
  %call = call float @mat4_to_scale([4 x float]* %arraydecay), !dbg !5729
  %div3 = fdiv float 1.000000e+00, %call, !dbg !5730
  store float %div3, float* %scale, align 4, !dbg !5725
  %19 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !5731
  call void @BKE_editmesh_color_ensure(%struct.BMEditMesh* %19, i8 zeroext 8), !dbg !5732
  %20 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !5733
  %21 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !5734
  %tobool4 = icmp ne %struct.EditDerivedBMesh* %21, null, !dbg !5734
  br i1 %tobool4, label %cond.true5, label %cond.false6, !dbg !5734

cond.true5:                                       ; preds = %sw.bb2
  %22 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !5735
  %vertexCos = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %22, i32 0, i32 2, !dbg !5736
  %23 = load [3 x float]*, [3 x float]** %vertexCos, align 8, !dbg !5736
  br label %cond.end7, !dbg !5734

cond.false6:                                      ; preds = %sw.bb2
  br label %cond.end7, !dbg !5734

cond.end7:                                        ; preds = %cond.false6, %cond.true5
  %cond8 = phi [3 x float]* [ %23, %cond.true5 ], [ null, %cond.false6 ], !dbg !5734
  %24 = load %struct.MeshStatVis*, %struct.MeshStatVis** %statvis.addr, align 8, !dbg !5737
  %thickness_min = getelementptr inbounds %struct.MeshStatVis, %struct.MeshStatVis* %24, i32 0, i32 5, !dbg !5738
  %25 = load float, float* %thickness_min, align 4, !dbg !5738
  %26 = load float, float* %scale, align 4, !dbg !5739
  %mul = fmul float %25, %26, !dbg !5740
  %27 = load %struct.MeshStatVis*, %struct.MeshStatVis** %statvis.addr, align 8, !dbg !5741
  %thickness_max = getelementptr inbounds %struct.MeshStatVis, %struct.MeshStatVis* %27, i32 0, i32 6, !dbg !5742
  %28 = load float, float* %thickness_max, align 4, !dbg !5742
  %29 = load float, float* %scale, align 4, !dbg !5743
  %mul9 = fmul float %28, %29, !dbg !5744
  %30 = load %struct.MeshStatVis*, %struct.MeshStatVis** %statvis.addr, align 8, !dbg !5745
  %thickness_samples = getelementptr inbounds %struct.MeshStatVis, %struct.MeshStatVis* %30, i32 0, i32 7, !dbg !5746
  %31 = load i8, i8* %thickness_samples, align 4, !dbg !5746
  %conv10 = zext i8 %31 to i32, !dbg !5745
  %32 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !5747
  %derivedFaceColor11 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %32, i32 0, i32 10, !dbg !5748
  %33 = load [4 x i8]*, [4 x i8]** %derivedFaceColor11, align 8, !dbg !5748
  call void @statvis_calc_thickness(%struct.BMEditMesh* %20, [3 x float]* %cond8, float %mul, float %mul9, i32 %conv10, [4 x i8]* %33), !dbg !5749
  br label %sw.epilog, !dbg !5750

sw.bb12:                                          ; preds = %entry
  %34 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !5751
  call void @BKE_editmesh_color_ensure(%struct.BMEditMesh* %34, i8 zeroext 8), !dbg !5753
  %35 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !5754
  %36 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !5755
  %tobool13 = icmp ne %struct.EditDerivedBMesh* %36, null, !dbg !5755
  br i1 %tobool13, label %cond.true14, label %cond.false16, !dbg !5755

cond.true14:                                      ; preds = %sw.bb12
  %37 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !5756
  %vertexCos15 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %37, i32 0, i32 2, !dbg !5757
  %38 = load [3 x float]*, [3 x float]** %vertexCos15, align 8, !dbg !5757
  br label %cond.end17, !dbg !5755

cond.false16:                                     ; preds = %sw.bb12
  br label %cond.end17, !dbg !5755

cond.end17:                                       ; preds = %cond.false16, %cond.true14
  %cond18 = phi [3 x float]* [ %38, %cond.true14 ], [ null, %cond.false16 ], !dbg !5755
  %39 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !5758
  %derivedFaceColor19 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %39, i32 0, i32 10, !dbg !5759
  %40 = load [4 x i8]*, [4 x i8]** %derivedFaceColor19, align 8, !dbg !5759
  call void @statvis_calc_intersect(%struct.BMEditMesh* %35, [3 x float]* %cond18, [4 x i8]* %40), !dbg !5760
  br label %sw.epilog, !dbg !5761

sw.bb20:                                          ; preds = %entry
  %41 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !5762
  call void @BKE_editmesh_color_ensure(%struct.BMEditMesh* %41, i8 zeroext 8), !dbg !5764
  %42 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !5765
  %tobool21 = icmp ne %struct.EditDerivedBMesh* %42, null, !dbg !5765
  br i1 %tobool21, label %if.then, label %if.end, !dbg !5767

if.then:                                          ; preds = %sw.bb20
  %43 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !5768
  call void @emDM_ensurePolyNormals(%struct.EditDerivedBMesh* %43), !dbg !5769
  br label %if.end, !dbg !5769

if.end:                                           ; preds = %if.then, %sw.bb20
  %44 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !5770
  %45 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !5771
  %tobool22 = icmp ne %struct.EditDerivedBMesh* %45, null, !dbg !5771
  br i1 %tobool22, label %cond.true23, label %cond.false25, !dbg !5771

cond.true23:                                      ; preds = %if.end
  %46 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !5772
  %vertexCos24 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %46, i32 0, i32 2, !dbg !5773
  %47 = load [3 x float]*, [3 x float]** %vertexCos24, align 8, !dbg !5773
  br label %cond.end26, !dbg !5771

cond.false25:                                     ; preds = %if.end
  br label %cond.end26, !dbg !5771

cond.end26:                                       ; preds = %cond.false25, %cond.true23
  %cond27 = phi [3 x float]* [ %47, %cond.true23 ], [ null, %cond.false25 ], !dbg !5771
  %48 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !5774
  %tobool28 = icmp ne %struct.EditDerivedBMesh* %48, null, !dbg !5774
  br i1 %tobool28, label %cond.true29, label %cond.false31, !dbg !5774

cond.true29:                                      ; preds = %cond.end26
  %49 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !5775
  %polyNos30 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %49, i32 0, i32 4, !dbg !5776
  %50 = load [3 x float]*, [3 x float]** %polyNos30, align 8, !dbg !5776
  br label %cond.end32, !dbg !5774

cond.false31:                                     ; preds = %cond.end26
  br label %cond.end32, !dbg !5774

cond.end32:                                       ; preds = %cond.false31, %cond.true29
  %cond33 = phi [3 x float]* [ %50, %cond.true29 ], [ null, %cond.false31 ], !dbg !5774
  %51 = load %struct.MeshStatVis*, %struct.MeshStatVis** %statvis.addr, align 8, !dbg !5777
  %distort_min = getelementptr inbounds %struct.MeshStatVis, %struct.MeshStatVis* %51, i32 0, i32 9, !dbg !5778
  %52 = load float, float* %distort_min, align 4, !dbg !5778
  %53 = load %struct.MeshStatVis*, %struct.MeshStatVis** %statvis.addr, align 8, !dbg !5779
  %distort_max = getelementptr inbounds %struct.MeshStatVis, %struct.MeshStatVis* %53, i32 0, i32 10, !dbg !5780
  %54 = load float, float* %distort_max, align 4, !dbg !5780
  %55 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !5781
  %derivedFaceColor34 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %55, i32 0, i32 10, !dbg !5782
  %56 = load [4 x i8]*, [4 x i8]** %derivedFaceColor34, align 8, !dbg !5782
  call void @statvis_calc_distort(%struct.BMEditMesh* %44, [3 x float]* %cond27, [3 x float]* %cond33, float %52, float %54, [4 x i8]* %56), !dbg !5783
  br label %sw.epilog, !dbg !5784

sw.bb35:                                          ; preds = %entry
  %57 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !5785
  call void @BKE_editmesh_color_ensure(%struct.BMEditMesh* %57, i8 zeroext 1), !dbg !5787
  %58 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !5788
  %59 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !5789
  %tobool36 = icmp ne %struct.EditDerivedBMesh* %59, null, !dbg !5789
  br i1 %tobool36, label %cond.true37, label %cond.false39, !dbg !5789

cond.true37:                                      ; preds = %sw.bb35
  %60 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !5790
  %vertexCos38 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %60, i32 0, i32 2, !dbg !5791
  %61 = load [3 x float]*, [3 x float]** %vertexCos38, align 8, !dbg !5791
  br label %cond.end40, !dbg !5789

cond.false39:                                     ; preds = %sw.bb35
  br label %cond.end40, !dbg !5789

cond.end40:                                       ; preds = %cond.false39, %cond.true37
  %cond41 = phi [3 x float]* [ %61, %cond.true37 ], [ null, %cond.false39 ], !dbg !5789
  %62 = load %struct.MeshStatVis*, %struct.MeshStatVis** %statvis.addr, align 8, !dbg !5792
  %sharp_min = getelementptr inbounds %struct.MeshStatVis, %struct.MeshStatVis* %62, i32 0, i32 11, !dbg !5793
  %63 = load float, float* %sharp_min, align 4, !dbg !5793
  %64 = load %struct.MeshStatVis*, %struct.MeshStatVis** %statvis.addr, align 8, !dbg !5794
  %sharp_max = getelementptr inbounds %struct.MeshStatVis, %struct.MeshStatVis* %64, i32 0, i32 12, !dbg !5795
  %65 = load float, float* %sharp_max, align 4, !dbg !5795
  %66 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !5796
  %derivedVertColor = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %66, i32 0, i32 8, !dbg !5797
  %67 = load [4 x i8]*, [4 x i8]** %derivedVertColor, align 8, !dbg !5797
  call void @statvis_calc_sharp(%struct.BMEditMesh* %58, [3 x float]* %cond41, float %63, float %65, [4 x i8]* %67), !dbg !5798
  br label %sw.epilog, !dbg !5799

sw.epilog:                                        ; preds = %entry, %cond.end40, %cond.end32, %cond.end17, %cond.end7, %cond.end
  ret void, !dbg !5800
}

declare dso_local void @BKE_editmesh_color_ensure(%struct.BMEditMesh*, i8 zeroext) #2

; Function Attrs: noinline nounwind uwtable
define internal void @statvis_calc_overhang(%struct.BMEditMesh* %em, [3 x float]* %polyNos, float %min, float %max, i8 zeroext %axis, [4 x i8]* %r_face_colors) #0 !dbg !5801 {
entry:
  %em.addr = alloca %struct.BMEditMesh*, align 8
  %polyNos.addr = alloca [3 x float]*, align 8
  %min.addr = alloca float, align 4
  %max.addr = alloca float, align 4
  %axis.addr = alloca i8, align 1
  %r_face_colors.addr = alloca [4 x i8]*, align 8
  %iter = alloca %struct.BMIter, align 8
  %bm = alloca %struct.BMesh*, align 8
  %f = alloca %struct.BMFace*, align 8
  %dir = alloca [3 x float], align 4
  %index = alloca i32, align 4
  %minmax_irange = alloca float, align 4
  %is_max = alloca i8, align 1
  %col_fallback = alloca [4 x i8], align 1
  %col_fallback_max = alloca [4 x i8], align 1
  %fcol = alloca [3 x float], align 4
  %fac = alloca float, align 4
  %fcol23 = alloca [3 x float], align 4
  %fallback = alloca i8*, align 8
  store %struct.BMEditMesh* %em, %struct.BMEditMesh** %em.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em.addr, metadata !5804, metadata !DIExpression()), !dbg !5805
  store [3 x float]* %polyNos, [3 x float]** %polyNos.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %polyNos.addr, metadata !5806, metadata !DIExpression()), !dbg !5807
  store float %min, float* %min.addr, align 4
  call void @llvm.dbg.declare(metadata float* %min.addr, metadata !5808, metadata !DIExpression()), !dbg !5809
  store float %max, float* %max.addr, align 4
  call void @llvm.dbg.declare(metadata float* %max.addr, metadata !5810, metadata !DIExpression()), !dbg !5811
  store i8 %axis, i8* %axis.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %axis.addr, metadata !5812, metadata !DIExpression()), !dbg !5813
  store [4 x i8]* %r_face_colors, [4 x i8]** %r_face_colors.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x i8]** %r_face_colors.addr, metadata !5814, metadata !DIExpression()), !dbg !5815
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !5816, metadata !DIExpression()), !dbg !5817
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm, metadata !5818, metadata !DIExpression()), !dbg !5819
  %0 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !5820
  %bm1 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %0, i32 0, i32 0, !dbg !5821
  %1 = load %struct.BMesh*, %struct.BMesh** %bm1, align 8, !dbg !5821
  store %struct.BMesh* %1, %struct.BMesh** %bm, align 8, !dbg !5819
  call void @llvm.dbg.declare(metadata %struct.BMFace** %f, metadata !5822, metadata !DIExpression()), !dbg !5823
  call void @llvm.dbg.declare(metadata [3 x float]* %dir, metadata !5824, metadata !DIExpression()), !dbg !5825
  call void @llvm.dbg.declare(metadata i32* %index, metadata !5826, metadata !DIExpression()), !dbg !5827
  call void @llvm.dbg.declare(metadata float* %minmax_irange, metadata !5828, metadata !DIExpression()), !dbg !5829
  %2 = load float, float* %max.addr, align 4, !dbg !5830
  %3 = load float, float* %min.addr, align 4, !dbg !5831
  %sub = fsub float %2, %3, !dbg !5832
  %div = fdiv float 1.000000e+00, %sub, !dbg !5833
  store float %div, float* %minmax_irange, align 4, !dbg !5829
  call void @llvm.dbg.declare(metadata i8* %is_max, metadata !5834, metadata !DIExpression()), !dbg !5835
  call void @llvm.dbg.declare(metadata [4 x i8]* %col_fallback, metadata !5836, metadata !DIExpression()), !dbg !5837
  %4 = bitcast [4 x i8]* %col_fallback to i8*, !dbg !5837
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %4, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @__const.statvis_calc_overhang.col_fallback, i32 0, i32 0), i64 4, i1 false), !dbg !5837
  call void @llvm.dbg.declare(metadata [4 x i8]* %col_fallback_max, metadata !5838, metadata !DIExpression()), !dbg !5839
  %5 = bitcast [4 x i8]* %col_fallback_max to i8*, !dbg !5839
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %5, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @__const.statvis_calc_overhang.col_fallback_max, i32 0, i32 0), i64 4, i1 false), !dbg !5839
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %dir, i64 0, i64 0, !dbg !5840
  %6 = load i8, i8* %axis.addr, align 1, !dbg !5841
  call void @axis_from_enum_v3(float* %arraydecay, i8 zeroext %6), !dbg !5842
  %7 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !5843
  %ob = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %7, i32 0, i32 14, !dbg !5843
  %8 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !5843
  %tobool = icmp ne %struct.Object* %8, null, !dbg !5843
  br i1 %tobool, label %if.then, label %if.end, !dbg !5845

if.then:                                          ; preds = %entry
  %9 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !5846
  %ob2 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %9, i32 0, i32 14, !dbg !5848
  %10 = load %struct.Object*, %struct.Object** %ob2, align 8, !dbg !5848
  %obmat = getelementptr inbounds %struct.Object, %struct.Object* %10, i32 0, i32 47, !dbg !5849
  %arraydecay3 = getelementptr inbounds [4 x [4 x float]], [4 x [4 x float]]* %obmat, i64 0, i64 0, !dbg !5846
  %arraydecay4 = getelementptr inbounds [3 x float], [3 x float]* %dir, i64 0, i64 0, !dbg !5850
  call void @mul_transposed_mat3_m4_v3([4 x float]* %arraydecay3, float* %arraydecay4), !dbg !5851
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %dir, i64 0, i64 0, !dbg !5852
  %call = call float @normalize_v3(float* %arraydecay5), !dbg !5853
  br label %if.end, !dbg !5854

if.end:                                           ; preds = %if.then, %entry
  call void @llvm.dbg.declare(metadata [3 x float]* %fcol, metadata !5855, metadata !DIExpression()), !dbg !5857
  %arraydecay6 = getelementptr inbounds [3 x float], [3 x float]* %fcol, i64 0, i64 0, !dbg !5858
  call void @weight_to_rgb(float* %arraydecay6, float 1.000000e+00), !dbg !5859
  %arraydecay7 = getelementptr inbounds [4 x i8], [4 x i8]* %col_fallback_max, i64 0, i64 0, !dbg !5860
  %arraydecay8 = getelementptr inbounds [3 x float], [3 x float]* %fcol, i64 0, i64 0, !dbg !5861
  call void @rgb_float_to_uchar(i8* %arraydecay7, float* %arraydecay8), !dbg !5862
  %11 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !5863
  %call9 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %11, i8 zeroext 3, i8* null), !dbg !5863
  %12 = bitcast i8* %call9 to %struct.BMFace*, !dbg !5863
  store %struct.BMFace* %12, %struct.BMFace** %f, align 8, !dbg !5863
  store i32 0, i32* %index, align 4, !dbg !5863
  br label %for.cond, !dbg !5863

for.cond:                                         ; preds = %for.inc, %if.end
  %13 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !5865
  %tobool10 = icmp ne %struct.BMFace* %13, null, !dbg !5863
  br i1 %tobool10, label %for.body, label %for.end, !dbg !5863

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata float* %fac, metadata !5867, metadata !DIExpression()), !dbg !5869
  %14 = load [3 x float]*, [3 x float]** %polyNos.addr, align 8, !dbg !5870
  %tobool11 = icmp ne [3 x float]* %14, null, !dbg !5870
  br i1 %tobool11, label %cond.true, label %cond.false, !dbg !5870

cond.true:                                        ; preds = %for.body
  %15 = load [3 x float]*, [3 x float]** %polyNos.addr, align 8, !dbg !5871
  %16 = load i32, i32* %index, align 4, !dbg !5872
  %idxprom = sext i32 %16 to i64, !dbg !5871
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %15, i64 %idxprom, !dbg !5871
  %arraydecay12 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !5871
  br label %cond.end, !dbg !5870

cond.false:                                       ; preds = %for.body
  %17 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !5873
  %no = getelementptr inbounds %struct.BMFace, %struct.BMFace* %17, i32 0, i32 4, !dbg !5874
  %arraydecay13 = getelementptr inbounds [3 x float], [3 x float]* %no, i64 0, i64 0, !dbg !5873
  br label %cond.end, !dbg !5870

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float* [ %arraydecay12, %cond.true ], [ %arraydecay13, %cond.false ], !dbg !5870
  %arraydecay14 = getelementptr inbounds [3 x float], [3 x float]* %dir, i64 0, i64 0, !dbg !5875
  %call15 = call float @angle_normalized_v3v3(float* %cond, float* %arraydecay14), !dbg !5876
  %div16 = fdiv float %call15, 0x400921FB60000000, !dbg !5877
  store float %div16, float* %fac, align 4, !dbg !5869
  %18 = load float, float* %fac, align 4, !dbg !5878
  %19 = load float, float* %max.addr, align 4, !dbg !5880
  %cmp = fcmp ole float %18, %19, !dbg !5881
  %conv = zext i1 %cmp to i32, !dbg !5881
  %conv17 = trunc i32 %conv to i8, !dbg !5882
  store i8 %conv17, i8* %is_max, align 1, !dbg !5883
  %conv18 = zext i8 %conv17 to i32, !dbg !5884
  %tobool19 = icmp ne i32 %conv18, 0, !dbg !5884
  br i1 %tobool19, label %land.lhs.true, label %if.else39, !dbg !5885

land.lhs.true:                                    ; preds = %cond.end
  %20 = load float, float* %fac, align 4, !dbg !5886
  %21 = load float, float* %min.addr, align 4, !dbg !5887
  %cmp20 = fcmp oge float %20, %21, !dbg !5888
  br i1 %cmp20, label %if.then22, label %if.else39, !dbg !5889

if.then22:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata [3 x float]* %fcol23, metadata !5890, metadata !DIExpression()), !dbg !5892
  %22 = load float, float* %fac, align 4, !dbg !5893
  %23 = load float, float* %min.addr, align 4, !dbg !5894
  %sub24 = fsub float %22, %23, !dbg !5895
  %24 = load float, float* %minmax_irange, align 4, !dbg !5896
  %mul = fmul float %sub24, %24, !dbg !5897
  store float %mul, float* %fac, align 4, !dbg !5898
  %25 = load float, float* %fac, align 4, !dbg !5899
  %sub25 = fsub float 1.000000e+00, %25, !dbg !5900
  store float %sub25, float* %fac, align 4, !dbg !5901
  %26 = load float, float* %fac, align 4, !dbg !5902
  %cmp26 = fcmp olt float %26, 0.000000e+00, !dbg !5902
  br i1 %cmp26, label %if.then28, label %if.else, !dbg !5905

if.then28:                                        ; preds = %if.then22
  store float 0.000000e+00, float* %fac, align 4, !dbg !5902
  br label %if.end33, !dbg !5902

if.else:                                          ; preds = %if.then22
  %27 = load float, float* %fac, align 4, !dbg !5906
  %cmp29 = fcmp ogt float %27, 1.000000e+00, !dbg !5906
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !5902

if.then31:                                        ; preds = %if.else
  store float 1.000000e+00, float* %fac, align 4, !dbg !5906
  br label %if.end32, !dbg !5906

if.end32:                                         ; preds = %if.then31, %if.else
  br label %if.end33

if.end33:                                         ; preds = %if.end32, %if.then28
  %arraydecay34 = getelementptr inbounds [3 x float], [3 x float]* %fcol23, i64 0, i64 0, !dbg !5908
  %28 = load float, float* %fac, align 4, !dbg !5909
  call void @weight_to_rgb(float* %arraydecay34, float %28), !dbg !5910
  %29 = load [4 x i8]*, [4 x i8]** %r_face_colors.addr, align 8, !dbg !5911
  %30 = load i32, i32* %index, align 4, !dbg !5912
  %idxprom35 = sext i32 %30 to i64, !dbg !5911
  %arrayidx36 = getelementptr inbounds [4 x i8], [4 x i8]* %29, i64 %idxprom35, !dbg !5911
  %arraydecay37 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx36, i64 0, i64 0, !dbg !5911
  %arraydecay38 = getelementptr inbounds [3 x float], [3 x float]* %fcol23, i64 0, i64 0, !dbg !5913
  call void @rgb_float_to_uchar(i8* %arraydecay37, float* %arraydecay38), !dbg !5914
  br label %if.end51, !dbg !5915

if.else39:                                        ; preds = %land.lhs.true, %cond.end
  call void @llvm.dbg.declare(metadata i8** %fallback, metadata !5916, metadata !DIExpression()), !dbg !5919
  %31 = load i8, i8* %is_max, align 1, !dbg !5920
  %conv40 = zext i8 %31 to i32, !dbg !5920
  %tobool41 = icmp ne i32 %conv40, 0, !dbg !5920
  br i1 %tobool41, label %cond.true42, label %cond.false44, !dbg !5920

cond.true42:                                      ; preds = %if.else39
  %arraydecay43 = getelementptr inbounds [4 x i8], [4 x i8]* %col_fallback_max, i64 0, i64 0, !dbg !5921
  br label %cond.end46, !dbg !5920

cond.false44:                                     ; preds = %if.else39
  %arraydecay45 = getelementptr inbounds [4 x i8], [4 x i8]* %col_fallback, i64 0, i64 0, !dbg !5922
  br label %cond.end46, !dbg !5920

cond.end46:                                       ; preds = %cond.false44, %cond.true42
  %cond47 = phi i8* [ %arraydecay43, %cond.true42 ], [ %arraydecay45, %cond.false44 ], !dbg !5920
  store i8* %cond47, i8** %fallback, align 8, !dbg !5919
  %32 = load [4 x i8]*, [4 x i8]** %r_face_colors.addr, align 8, !dbg !5923
  %33 = load i32, i32* %index, align 4, !dbg !5924
  %idxprom48 = sext i32 %33 to i64, !dbg !5923
  %arrayidx49 = getelementptr inbounds [4 x i8], [4 x i8]* %32, i64 %idxprom48, !dbg !5923
  %arraydecay50 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx49, i64 0, i64 0, !dbg !5923
  %34 = load i8*, i8** %fallback, align 8, !dbg !5925
  call void @copy_v4_v4_char(i8* %arraydecay50, i8* %34), !dbg !5926
  br label %if.end51

if.end51:                                         ; preds = %cond.end46, %if.end33
  br label %for.inc, !dbg !5927

for.inc:                                          ; preds = %if.end51
  %call52 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !5865
  %35 = bitcast i8* %call52 to %struct.BMFace*, !dbg !5865
  store %struct.BMFace* %35, %struct.BMFace** %f, align 8, !dbg !5865
  %36 = load i32, i32* %index, align 4, !dbg !5865
  %inc = add nsw i32 %36, 1, !dbg !5865
  store i32 %inc, i32* %index, align 4, !dbg !5865
  br label %for.cond, !dbg !5865, !llvm.loop !5928

for.end:                                          ; preds = %for.cond
  ret void, !dbg !5930
}

declare dso_local float @mat4_to_scale([4 x float]*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @statvis_calc_thickness(%struct.BMEditMesh* %em, [3 x float]* %vertexCos, float %min, float %max, i32 %samples, [4 x i8]* %r_face_colors) #0 !dbg !5931 {
entry:
  %em.addr = alloca %struct.BMEditMesh*, align 8
  %vertexCos.addr = alloca [3 x float]*, align 8
  %min.addr = alloca float, align 4
  %max.addr = alloca float, align 4
  %samples.addr = alloca i32, align 4
  %r_face_colors.addr = alloca [4 x i8]*, align 8
  %eps_offset = alloca float, align 4
  %face_dists = alloca float*, align 8
  %use_jit = alloca i8, align 1
  %jit_ofs = alloca [32 x [2 x float]], align 16
  %bm = alloca %struct.BMesh*, align 8
  %tottri = alloca i32, align 4
  %minmax_irange = alloca float, align 4
  %i = alloca i32, align 4
  %looptris = alloca [3 x %struct.BMLoop*]*, align 8
  %col_fallback = alloca [4 x i8], align 1
  %bmtree = alloca %struct.BMBVHTree*, align 8
  %j = alloca i32, align 4
  %f_hit = alloca %struct.BMFace*, align 8
  %ltri = alloca %struct.BMLoop**, align 8
  %index = alloca i32, align 4
  %cos = alloca [3 x float*], align 16
  %ray_co = alloca [3 x float], align 4
  %ray_no = alloca [3 x float], align 4
  %j68 = alloca i32, align 4
  %dist = alloca float, align 4
  %angle_fac = alloca float, align 4
  %dist116 = alloca float, align 4
  %angle_fac135 = alloca float, align 4
  %fac = alloca float, align 4
  %fcol = alloca [3 x float], align 4
  store %struct.BMEditMesh* %em, %struct.BMEditMesh** %em.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em.addr, metadata !5934, metadata !DIExpression()), !dbg !5935
  store [3 x float]* %vertexCos, [3 x float]** %vertexCos.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %vertexCos.addr, metadata !5936, metadata !DIExpression()), !dbg !5937
  store float %min, float* %min.addr, align 4
  call void @llvm.dbg.declare(metadata float* %min.addr, metadata !5938, metadata !DIExpression()), !dbg !5939
  store float %max, float* %max.addr, align 4
  call void @llvm.dbg.declare(metadata float* %max.addr, metadata !5940, metadata !DIExpression()), !dbg !5941
  store i32 %samples, i32* %samples.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %samples.addr, metadata !5942, metadata !DIExpression()), !dbg !5943
  store [4 x i8]* %r_face_colors, [4 x i8]** %r_face_colors.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x i8]** %r_face_colors.addr, metadata !5944, metadata !DIExpression()), !dbg !5945
  call void @llvm.dbg.declare(metadata float* %eps_offset, metadata !5946, metadata !DIExpression()), !dbg !5947
  store float 0x3EF4F8B580000000, float* %eps_offset, align 4, !dbg !5947
  call void @llvm.dbg.declare(metadata float** %face_dists, metadata !5948, metadata !DIExpression()), !dbg !5949
  %0 = load [4 x i8]*, [4 x i8]** %r_face_colors.addr, align 8, !dbg !5950
  %1 = bitcast [4 x i8]* %0 to float*, !dbg !5951
  store float* %1, float** %face_dists, align 8, !dbg !5949
  call void @llvm.dbg.declare(metadata i8* %use_jit, metadata !5952, metadata !DIExpression()), !dbg !5953
  %2 = load i32, i32* %samples.addr, align 4, !dbg !5954
  %cmp = icmp slt i32 %2, 32, !dbg !5955
  %conv = zext i1 %cmp to i32, !dbg !5955
  %conv1 = trunc i32 %conv to i8, !dbg !5954
  store i8 %conv1, i8* %use_jit, align 1, !dbg !5953
  call void @llvm.dbg.declare(metadata [32 x [2 x float]]* %jit_ofs, metadata !5956, metadata !DIExpression()), !dbg !5959
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm, metadata !5960, metadata !DIExpression()), !dbg !5961
  %3 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !5962
  %bm2 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %3, i32 0, i32 0, !dbg !5963
  %4 = load %struct.BMesh*, %struct.BMesh** %bm2, align 8, !dbg !5963
  store %struct.BMesh* %4, %struct.BMesh** %bm, align 8, !dbg !5961
  call void @llvm.dbg.declare(metadata i32* %tottri, metadata !5964, metadata !DIExpression()), !dbg !5965
  %5 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !5966
  %tottri3 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %5, i32 0, i32 4, !dbg !5967
  %6 = load i32, i32* %tottri3, align 8, !dbg !5967
  store i32 %6, i32* %tottri, align 4, !dbg !5965
  call void @llvm.dbg.declare(metadata float* %minmax_irange, metadata !5968, metadata !DIExpression()), !dbg !5969
  %7 = load float, float* %max.addr, align 4, !dbg !5970
  %8 = load float, float* %min.addr, align 4, !dbg !5971
  %sub = fsub float %7, %8, !dbg !5972
  %div = fdiv float 1.000000e+00, %sub, !dbg !5973
  store float %div, float* %minmax_irange, align 4, !dbg !5969
  call void @llvm.dbg.declare(metadata i32* %i, metadata !5974, metadata !DIExpression()), !dbg !5975
  call void @llvm.dbg.declare(metadata [3 x %struct.BMLoop*]** %looptris, metadata !5976, metadata !DIExpression()), !dbg !5977
  %9 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !5978
  %looptris4 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %9, i32 0, i32 3, !dbg !5979
  %10 = load [3 x %struct.BMLoop*]*, [3 x %struct.BMLoop*]** %looptris4, align 8, !dbg !5979
  store [3 x %struct.BMLoop*]* %10, [3 x %struct.BMLoop*]** %looptris, align 8, !dbg !5977
  call void @llvm.dbg.declare(metadata [4 x i8]* %col_fallback, metadata !5980, metadata !DIExpression()), !dbg !5982
  %11 = bitcast [4 x i8]* %col_fallback to i8*, !dbg !5982
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %11, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @__const.statvis_calc_thickness.col_fallback, i32 0, i32 0), i64 4, i1 false), !dbg !5982
  call void @llvm.dbg.declare(metadata %struct.BMBVHTree** %bmtree, metadata !5983, metadata !DIExpression()), !dbg !5987
  %12 = load float*, float** %face_dists, align 8, !dbg !5988
  %13 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !5989
  %bm5 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %13, i32 0, i32 0, !dbg !5990
  %14 = load %struct.BMesh*, %struct.BMesh** %bm5, align 8, !dbg !5990
  %totface = getelementptr inbounds %struct.BMesh, %struct.BMesh* %14, i32 0, i32 3, !dbg !5991
  %15 = load i32, i32* %totface, align 4, !dbg !5991
  %16 = load float, float* %max.addr, align 4, !dbg !5992
  call void @fill_vn_fl(float* %12, i32 %15, float %16), !dbg !5993
  %17 = load i8, i8* %use_jit, align 1, !dbg !5994
  %tobool = icmp ne i8 %17, 0, !dbg !5994
  br i1 %tobool, label %if.then, label %if.end, !dbg !5996

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %j, metadata !5997, metadata !DIExpression()), !dbg !5999
  %arraydecay = getelementptr inbounds [32 x [2 x float]], [32 x [2 x float]]* %jit_ofs, i64 0, i64 0, !dbg !6000
  %18 = load i32, i32* %samples.addr, align 4, !dbg !6001
  call void @BLI_jitter_init([2 x float]* %arraydecay, i32 %18), !dbg !6002
  store i32 0, i32* %j, align 4, !dbg !6003
  br label %for.cond, !dbg !6005

for.cond:                                         ; preds = %for.inc, %if.then
  %19 = load i32, i32* %j, align 4, !dbg !6006
  %20 = load i32, i32* %samples.addr, align 4, !dbg !6008
  %cmp6 = icmp slt i32 %19, %20, !dbg !6009
  br i1 %cmp6, label %for.body, label %for.end, !dbg !6010

for.body:                                         ; preds = %for.cond
  %21 = load i32, i32* %j, align 4, !dbg !6011
  %idxprom = sext i32 %21 to i64, !dbg !6013
  %arrayidx = getelementptr inbounds [32 x [2 x float]], [32 x [2 x float]]* %jit_ofs, i64 0, i64 %idxprom, !dbg !6013
  %arraydecay8 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx, i64 0, i64 0, !dbg !6013
  call void @uv_from_jitter_v2(float* %arraydecay8), !dbg !6014
  br label %for.inc, !dbg !6015

for.inc:                                          ; preds = %for.body
  %22 = load i32, i32* %j, align 4, !dbg !6016
  %inc = add nsw i32 %22, 1, !dbg !6016
  store i32 %inc, i32* %j, align 4, !dbg !6016
  br label %for.cond, !dbg !6017, !llvm.loop !6018

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !6020

if.end:                                           ; preds = %for.end, %entry
  %23 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !6021
  call void @BM_mesh_elem_index_ensure(%struct.BMesh* %23, i8 zeroext 8), !dbg !6022
  %24 = load [3 x float]*, [3 x float]** %vertexCos.addr, align 8, !dbg !6023
  %tobool9 = icmp ne [3 x float]* %24, null, !dbg !6023
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !6025

if.then10:                                        ; preds = %if.end
  %25 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !6026
  call void @BM_mesh_elem_index_ensure(%struct.BMesh* %25, i8 zeroext 1), !dbg !6028
  br label %if.end11, !dbg !6029

if.end11:                                         ; preds = %if.then10, %if.end
  %26 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !6030
  %27 = load [3 x float]*, [3 x float]** %vertexCos.addr, align 8, !dbg !6031
  %call = call %struct.BMBVHTree* @BKE_bmbvh_new_from_editmesh(%struct.BMEditMesh* %26, i32 0, [3 x float]* %27, i8 zeroext 0), !dbg !6032
  store %struct.BMBVHTree* %call, %struct.BMBVHTree** %bmtree, align 8, !dbg !6033
  store i32 0, i32* %i, align 4, !dbg !6034
  br label %for.cond12, !dbg !6036

for.cond12:                                       ; preds = %for.inc158, %if.end11
  %28 = load i32, i32* %i, align 4, !dbg !6037
  %29 = load i32, i32* %tottri, align 4, !dbg !6039
  %cmp13 = icmp slt i32 %28, %29, !dbg !6040
  br i1 %cmp13, label %for.body15, label %for.end160, !dbg !6041

for.body15:                                       ; preds = %for.cond12
  call void @llvm.dbg.declare(metadata %struct.BMFace** %f_hit, metadata !6042, metadata !DIExpression()), !dbg !6044
  call void @llvm.dbg.declare(metadata %struct.BMLoop*** %ltri, metadata !6045, metadata !DIExpression()), !dbg !6046
  %30 = load [3 x %struct.BMLoop*]*, [3 x %struct.BMLoop*]** %looptris, align 8, !dbg !6047
  %31 = load i32, i32* %i, align 4, !dbg !6048
  %idxprom16 = sext i32 %31 to i64, !dbg !6047
  %arrayidx17 = getelementptr inbounds [3 x %struct.BMLoop*], [3 x %struct.BMLoop*]* %30, i64 %idxprom16, !dbg !6047
  %arraydecay18 = getelementptr inbounds [3 x %struct.BMLoop*], [3 x %struct.BMLoop*]* %arrayidx17, i64 0, i64 0, !dbg !6047
  store %struct.BMLoop** %arraydecay18, %struct.BMLoop*** %ltri, align 8, !dbg !6046
  call void @llvm.dbg.declare(metadata i32* %index, metadata !6049, metadata !DIExpression()), !dbg !6050
  %32 = load %struct.BMLoop**, %struct.BMLoop*** %ltri, align 8, !dbg !6051
  %arrayidx19 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %32, i64 0, !dbg !6051
  %33 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx19, align 8, !dbg !6051
  %f = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %33, i32 0, i32 3, !dbg !6051
  %34 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !6051
  %head = getelementptr inbounds %struct.BMFace, %struct.BMFace* %34, i32 0, i32 0, !dbg !6051
  %call20 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head), !dbg !6051
  store i32 %call20, i32* %index, align 4, !dbg !6050
  call void @llvm.dbg.declare(metadata [3 x float*]* %cos, metadata !6052, metadata !DIExpression()), !dbg !6054
  call void @llvm.dbg.declare(metadata [3 x float]* %ray_co, metadata !6055, metadata !DIExpression()), !dbg !6056
  call void @llvm.dbg.declare(metadata [3 x float]* %ray_no, metadata !6057, metadata !DIExpression()), !dbg !6058
  %35 = load [3 x float]*, [3 x float]** %vertexCos.addr, align 8, !dbg !6059
  %tobool21 = icmp ne [3 x float]* %35, null, !dbg !6059
  br i1 %tobool21, label %if.then22, label %if.else, !dbg !6061

if.then22:                                        ; preds = %for.body15
  %36 = load [3 x float]*, [3 x float]** %vertexCos.addr, align 8, !dbg !6062
  %37 = load %struct.BMLoop**, %struct.BMLoop*** %ltri, align 8, !dbg !6064
  %arrayidx23 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %37, i64 0, !dbg !6064
  %38 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx23, align 8, !dbg !6064
  %v = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %38, i32 0, i32 1, !dbg !6064
  %39 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !6064
  %head24 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %39, i32 0, i32 0, !dbg !6064
  %call25 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head24), !dbg !6064
  %idxprom26 = sext i32 %call25 to i64, !dbg !6062
  %arrayidx27 = getelementptr inbounds [3 x float], [3 x float]* %36, i64 %idxprom26, !dbg !6062
  %arraydecay28 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx27, i64 0, i64 0, !dbg !6062
  %arrayidx29 = getelementptr inbounds [3 x float*], [3 x float*]* %cos, i64 0, i64 0, !dbg !6065
  store float* %arraydecay28, float** %arrayidx29, align 16, !dbg !6066
  %40 = load [3 x float]*, [3 x float]** %vertexCos.addr, align 8, !dbg !6067
  %41 = load %struct.BMLoop**, %struct.BMLoop*** %ltri, align 8, !dbg !6068
  %arrayidx30 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %41, i64 1, !dbg !6068
  %42 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx30, align 8, !dbg !6068
  %v31 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %42, i32 0, i32 1, !dbg !6068
  %43 = load %struct.BMVert*, %struct.BMVert** %v31, align 8, !dbg !6068
  %head32 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %43, i32 0, i32 0, !dbg !6068
  %call33 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head32), !dbg !6068
  %idxprom34 = sext i32 %call33 to i64, !dbg !6067
  %arrayidx35 = getelementptr inbounds [3 x float], [3 x float]* %40, i64 %idxprom34, !dbg !6067
  %arraydecay36 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx35, i64 0, i64 0, !dbg !6067
  %arrayidx37 = getelementptr inbounds [3 x float*], [3 x float*]* %cos, i64 0, i64 1, !dbg !6069
  store float* %arraydecay36, float** %arrayidx37, align 8, !dbg !6070
  %44 = load [3 x float]*, [3 x float]** %vertexCos.addr, align 8, !dbg !6071
  %45 = load %struct.BMLoop**, %struct.BMLoop*** %ltri, align 8, !dbg !6072
  %arrayidx38 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %45, i64 2, !dbg !6072
  %46 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx38, align 8, !dbg !6072
  %v39 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %46, i32 0, i32 1, !dbg !6072
  %47 = load %struct.BMVert*, %struct.BMVert** %v39, align 8, !dbg !6072
  %head40 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %47, i32 0, i32 0, !dbg !6072
  %call41 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head40), !dbg !6072
  %idxprom42 = sext i32 %call41 to i64, !dbg !6071
  %arrayidx43 = getelementptr inbounds [3 x float], [3 x float]* %44, i64 %idxprom42, !dbg !6071
  %arraydecay44 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx43, i64 0, i64 0, !dbg !6071
  %arrayidx45 = getelementptr inbounds [3 x float*], [3 x float*]* %cos, i64 0, i64 2, !dbg !6073
  store float* %arraydecay44, float** %arrayidx45, align 16, !dbg !6074
  br label %if.end60, !dbg !6075

if.else:                                          ; preds = %for.body15
  %48 = load %struct.BMLoop**, %struct.BMLoop*** %ltri, align 8, !dbg !6076
  %arrayidx46 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %48, i64 0, !dbg !6076
  %49 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx46, align 8, !dbg !6076
  %v47 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %49, i32 0, i32 1, !dbg !6078
  %50 = load %struct.BMVert*, %struct.BMVert** %v47, align 8, !dbg !6078
  %co = getelementptr inbounds %struct.BMVert, %struct.BMVert* %50, i32 0, i32 2, !dbg !6079
  %arraydecay48 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !6076
  %arrayidx49 = getelementptr inbounds [3 x float*], [3 x float*]* %cos, i64 0, i64 0, !dbg !6080
  store float* %arraydecay48, float** %arrayidx49, align 16, !dbg !6081
  %51 = load %struct.BMLoop**, %struct.BMLoop*** %ltri, align 8, !dbg !6082
  %arrayidx50 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %51, i64 1, !dbg !6082
  %52 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx50, align 8, !dbg !6082
  %v51 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %52, i32 0, i32 1, !dbg !6083
  %53 = load %struct.BMVert*, %struct.BMVert** %v51, align 8, !dbg !6083
  %co52 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %53, i32 0, i32 2, !dbg !6084
  %arraydecay53 = getelementptr inbounds [3 x float], [3 x float]* %co52, i64 0, i64 0, !dbg !6082
  %arrayidx54 = getelementptr inbounds [3 x float*], [3 x float*]* %cos, i64 0, i64 1, !dbg !6085
  store float* %arraydecay53, float** %arrayidx54, align 8, !dbg !6086
  %54 = load %struct.BMLoop**, %struct.BMLoop*** %ltri, align 8, !dbg !6087
  %arrayidx55 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %54, i64 2, !dbg !6087
  %55 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx55, align 8, !dbg !6087
  %v56 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %55, i32 0, i32 1, !dbg !6088
  %56 = load %struct.BMVert*, %struct.BMVert** %v56, align 8, !dbg !6088
  %co57 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %56, i32 0, i32 2, !dbg !6089
  %arraydecay58 = getelementptr inbounds [3 x float], [3 x float]* %co57, i64 0, i64 0, !dbg !6087
  %arrayidx59 = getelementptr inbounds [3 x float*], [3 x float*]* %cos, i64 0, i64 2, !dbg !6090
  store float* %arraydecay58, float** %arrayidx59, align 16, !dbg !6091
  br label %if.end60

if.end60:                                         ; preds = %if.else, %if.then22
  %arraydecay61 = getelementptr inbounds [3 x float], [3 x float]* %ray_no, i64 0, i64 0, !dbg !6092
  %arrayidx62 = getelementptr inbounds [3 x float*], [3 x float*]* %cos, i64 0, i64 2, !dbg !6093
  %57 = load float*, float** %arrayidx62, align 16, !dbg !6093
  %arrayidx63 = getelementptr inbounds [3 x float*], [3 x float*]* %cos, i64 0, i64 1, !dbg !6094
  %58 = load float*, float** %arrayidx63, align 8, !dbg !6094
  %arrayidx64 = getelementptr inbounds [3 x float*], [3 x float*]* %cos, i64 0, i64 0, !dbg !6095
  %59 = load float*, float** %arrayidx64, align 16, !dbg !6095
  %call65 = call float @normal_tri_v3(float* %arraydecay61, float* %57, float* %58, float* %59), !dbg !6096
  %60 = load i8, i8* %use_jit, align 1, !dbg !6097
  %tobool66 = icmp ne i8 %60, 0, !dbg !6097
  br i1 %tobool66, label %if.then67, label %if.else115, !dbg !6099

if.then67:                                        ; preds = %if.end60
  call void @llvm.dbg.declare(metadata i32* %j68, metadata !6100, metadata !DIExpression()), !dbg !6102
  store i32 0, i32* %j68, align 4, !dbg !6103
  br label %for.cond69, !dbg !6105

for.cond69:                                       ; preds = %for.inc112, %if.then67
  %61 = load i32, i32* %j68, align 4, !dbg !6106
  %62 = load i32, i32* %samples.addr, align 4, !dbg !6108
  %cmp70 = icmp slt i32 %61, %62, !dbg !6109
  br i1 %cmp70, label %for.body72, label %for.end114, !dbg !6110

for.body72:                                       ; preds = %for.cond69
  call void @llvm.dbg.declare(metadata float* %dist, metadata !6111, metadata !DIExpression()), !dbg !6113
  %63 = load float*, float** %face_dists, align 8, !dbg !6114
  %64 = load i32, i32* %index, align 4, !dbg !6115
  %idxprom73 = sext i32 %64 to i64, !dbg !6114
  %arrayidx74 = getelementptr inbounds float, float* %63, i64 %idxprom73, !dbg !6114
  %65 = load float, float* %arrayidx74, align 4, !dbg !6114
  store float %65, float* %dist, align 4, !dbg !6113
  %arraydecay75 = getelementptr inbounds [3 x float], [3 x float]* %ray_co, i64 0, i64 0, !dbg !6116
  %arrayidx76 = getelementptr inbounds [3 x float*], [3 x float*]* %cos, i64 0, i64 0, !dbg !6117
  %66 = load float*, float** %arrayidx76, align 16, !dbg !6117
  %arrayidx77 = getelementptr inbounds [3 x float*], [3 x float*]* %cos, i64 0, i64 1, !dbg !6118
  %67 = load float*, float** %arrayidx77, align 8, !dbg !6118
  %arrayidx78 = getelementptr inbounds [3 x float*], [3 x float*]* %cos, i64 0, i64 2, !dbg !6119
  %68 = load float*, float** %arrayidx78, align 16, !dbg !6119
  %69 = load i32, i32* %j68, align 4, !dbg !6120
  %idxprom79 = sext i32 %69 to i64, !dbg !6121
  %arrayidx80 = getelementptr inbounds [32 x [2 x float]], [32 x [2 x float]]* %jit_ofs, i64 0, i64 %idxprom79, !dbg !6121
  %arraydecay81 = getelementptr inbounds [2 x float], [2 x float]* %arrayidx80, i64 0, i64 0, !dbg !6121
  call void @interp_v3_v3v3v3_uv(float* %arraydecay75, float* %66, float* %67, float* %68, float* %arraydecay81), !dbg !6122
  %arraydecay82 = getelementptr inbounds [3 x float], [3 x float]* %ray_co, i64 0, i64 0, !dbg !6123
  %arraydecay83 = getelementptr inbounds [3 x float], [3 x float]* %ray_no, i64 0, i64 0, !dbg !6124
  call void @madd_v3_v3fl(float* %arraydecay82, float* %arraydecay83, float 0x3EF4F8B580000000), !dbg !6125
  %70 = load %struct.BMBVHTree*, %struct.BMBVHTree** %bmtree, align 8, !dbg !6126
  %arraydecay84 = getelementptr inbounds [3 x float], [3 x float]* %ray_co, i64 0, i64 0, !dbg !6126
  %arraydecay85 = getelementptr inbounds [3 x float], [3 x float]* %ray_no, i64 0, i64 0, !dbg !6126
  %call86 = call %struct.BMFace* @BKE_bmbvh_ray_cast(%struct.BMBVHTree* %70, float* %arraydecay84, float* %arraydecay85, float 0.000000e+00, float* %dist, float* null, float* null), !dbg !6126
  store %struct.BMFace* %call86, %struct.BMFace** %f_hit, align 8, !dbg !6126
  %71 = load %struct.BMFace*, %struct.BMFace** %f_hit, align 8, !dbg !6127
  %tobool87 = icmp ne %struct.BMFace* %71, null, !dbg !6127
  br i1 %tobool87, label %land.lhs.true, label %if.end111, !dbg !6127

land.lhs.true:                                    ; preds = %for.body72
  %72 = load float, float* %dist, align 4, !dbg !6127
  %73 = load float*, float** %face_dists, align 8, !dbg !6127
  %74 = load i32, i32* %index, align 4, !dbg !6127
  %idxprom88 = sext i32 %74 to i64, !dbg !6127
  %arrayidx89 = getelementptr inbounds float, float* %73, i64 %idxprom88, !dbg !6127
  %75 = load float, float* %arrayidx89, align 4, !dbg !6127
  %cmp90 = fcmp olt float %72, %75, !dbg !6127
  br i1 %cmp90, label %if.then92, label %if.end111, !dbg !6126

if.then92:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata float* %angle_fac, metadata !6129, metadata !DIExpression()), !dbg !6131
  %76 = load %struct.BMLoop**, %struct.BMLoop*** %ltri, align 8, !dbg !6131
  %arrayidx93 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %76, i64 0, !dbg !6131
  %77 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx93, align 8, !dbg !6131
  %f94 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %77, i32 0, i32 3, !dbg !6131
  %78 = load %struct.BMFace*, %struct.BMFace** %f94, align 8, !dbg !6131
  %no = getelementptr inbounds %struct.BMFace, %struct.BMFace* %78, i32 0, i32 4, !dbg !6131
  %arraydecay95 = getelementptr inbounds [3 x float], [3 x float]* %no, i64 0, i64 0, !dbg !6131
  %79 = load %struct.BMFace*, %struct.BMFace** %f_hit, align 8, !dbg !6131
  %no96 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %79, i32 0, i32 4, !dbg !6131
  %arraydecay97 = getelementptr inbounds [3 x float], [3 x float]* %no96, i64 0, i64 0, !dbg !6131
  %call98 = call float @dot_v3v3(float* %arraydecay95, float* %arraydecay97), !dbg !6131
  %80 = call float @llvm.fabs.f32(float %call98), !dbg !6131
  store float %80, float* %angle_fac, align 4, !dbg !6131
  %81 = load float, float* %angle_fac, align 4, !dbg !6131
  %sub99 = fsub float 1.000000e+00, %81, !dbg !6131
  store float %sub99, float* %angle_fac, align 4, !dbg !6131
  %82 = load float, float* %angle_fac, align 4, !dbg !6131
  %83 = load float, float* %angle_fac, align 4, !dbg !6131
  %mul = fmul float %82, %83, !dbg !6131
  %84 = load float, float* %angle_fac, align 4, !dbg !6131
  %mul100 = fmul float %mul, %84, !dbg !6131
  store float %mul100, float* %angle_fac, align 4, !dbg !6131
  %85 = load float, float* %angle_fac, align 4, !dbg !6131
  %sub101 = fsub float 1.000000e+00, %85, !dbg !6131
  store float %sub101, float* %angle_fac, align 4, !dbg !6131
  %86 = load float, float* %angle_fac, align 4, !dbg !6131
  %87 = load float, float* %dist, align 4, !dbg !6131
  %div102 = fdiv float %87, %86, !dbg !6131
  store float %div102, float* %dist, align 4, !dbg !6131
  %88 = load float, float* %dist, align 4, !dbg !6132
  %89 = load float*, float** %face_dists, align 8, !dbg !6132
  %90 = load i32, i32* %index, align 4, !dbg !6132
  %idxprom103 = sext i32 %90 to i64, !dbg !6132
  %arrayidx104 = getelementptr inbounds float, float* %89, i64 %idxprom103, !dbg !6132
  %91 = load float, float* %arrayidx104, align 4, !dbg !6132
  %cmp105 = fcmp olt float %88, %91, !dbg !6132
  br i1 %cmp105, label %if.then107, label %if.end110, !dbg !6131

if.then107:                                       ; preds = %if.then92
  %92 = load float, float* %dist, align 4, !dbg !6134
  %93 = load float*, float** %face_dists, align 8, !dbg !6134
  %94 = load i32, i32* %index, align 4, !dbg !6134
  %idxprom108 = sext i32 %94 to i64, !dbg !6134
  %arrayidx109 = getelementptr inbounds float, float* %93, i64 %idxprom108, !dbg !6134
  store float %92, float* %arrayidx109, align 4, !dbg !6134
  br label %if.end110, !dbg !6134

if.end110:                                        ; preds = %if.then107, %if.then92
  br label %if.end111, !dbg !6131

if.end111:                                        ; preds = %if.end110, %land.lhs.true, %for.body72
  br label %for.inc112, !dbg !6136

for.inc112:                                       ; preds = %if.end111
  %95 = load i32, i32* %j68, align 4, !dbg !6137
  %inc113 = add nsw i32 %95, 1, !dbg !6137
  store i32 %inc113, i32* %j68, align 4, !dbg !6137
  br label %for.cond69, !dbg !6138, !llvm.loop !6139

for.end114:                                       ; preds = %for.cond69
  br label %if.end157, !dbg !6141

if.else115:                                       ; preds = %if.end60
  call void @llvm.dbg.declare(metadata float* %dist116, metadata !6142, metadata !DIExpression()), !dbg !6144
  %96 = load float*, float** %face_dists, align 8, !dbg !6145
  %97 = load i32, i32* %index, align 4, !dbg !6146
  %idxprom117 = sext i32 %97 to i64, !dbg !6145
  %arrayidx118 = getelementptr inbounds float, float* %96, i64 %idxprom117, !dbg !6145
  %98 = load float, float* %arrayidx118, align 4, !dbg !6145
  store float %98, float* %dist116, align 4, !dbg !6144
  %arraydecay119 = getelementptr inbounds [3 x float], [3 x float]* %ray_co, i64 0, i64 0, !dbg !6147
  %arrayidx120 = getelementptr inbounds [3 x float*], [3 x float*]* %cos, i64 0, i64 0, !dbg !6148
  %99 = load float*, float** %arrayidx120, align 16, !dbg !6148
  %arrayidx121 = getelementptr inbounds [3 x float*], [3 x float*]* %cos, i64 0, i64 1, !dbg !6149
  %100 = load float*, float** %arrayidx121, align 8, !dbg !6149
  %arrayidx122 = getelementptr inbounds [3 x float*], [3 x float*]* %cos, i64 0, i64 2, !dbg !6150
  %101 = load float*, float** %arrayidx122, align 16, !dbg !6150
  call void @mid_v3_v3v3v3(float* %arraydecay119, float* %99, float* %100, float* %101), !dbg !6151
  %arraydecay123 = getelementptr inbounds [3 x float], [3 x float]* %ray_co, i64 0, i64 0, !dbg !6152
  %arraydecay124 = getelementptr inbounds [3 x float], [3 x float]* %ray_no, i64 0, i64 0, !dbg !6153
  call void @madd_v3_v3fl(float* %arraydecay123, float* %arraydecay124, float 0x3EF4F8B580000000), !dbg !6154
  %102 = load %struct.BMBVHTree*, %struct.BMBVHTree** %bmtree, align 8, !dbg !6155
  %arraydecay125 = getelementptr inbounds [3 x float], [3 x float]* %ray_co, i64 0, i64 0, !dbg !6155
  %arraydecay126 = getelementptr inbounds [3 x float], [3 x float]* %ray_no, i64 0, i64 0, !dbg !6155
  %call127 = call %struct.BMFace* @BKE_bmbvh_ray_cast(%struct.BMBVHTree* %102, float* %arraydecay125, float* %arraydecay126, float 0.000000e+00, float* %dist116, float* null, float* null), !dbg !6155
  store %struct.BMFace* %call127, %struct.BMFace** %f_hit, align 8, !dbg !6155
  %103 = load %struct.BMFace*, %struct.BMFace** %f_hit, align 8, !dbg !6156
  %tobool128 = icmp ne %struct.BMFace* %103, null, !dbg !6156
  br i1 %tobool128, label %land.lhs.true129, label %if.end156, !dbg !6156

land.lhs.true129:                                 ; preds = %if.else115
  %104 = load float, float* %dist116, align 4, !dbg !6156
  %105 = load float*, float** %face_dists, align 8, !dbg !6156
  %106 = load i32, i32* %index, align 4, !dbg !6156
  %idxprom130 = sext i32 %106 to i64, !dbg !6156
  %arrayidx131 = getelementptr inbounds float, float* %105, i64 %idxprom130, !dbg !6156
  %107 = load float, float* %arrayidx131, align 4, !dbg !6156
  %cmp132 = fcmp olt float %104, %107, !dbg !6156
  br i1 %cmp132, label %if.then134, label %if.end156, !dbg !6155

if.then134:                                       ; preds = %land.lhs.true129
  call void @llvm.dbg.declare(metadata float* %angle_fac135, metadata !6158, metadata !DIExpression()), !dbg !6160
  %108 = load %struct.BMLoop**, %struct.BMLoop*** %ltri, align 8, !dbg !6160
  %arrayidx136 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %108, i64 0, !dbg !6160
  %109 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx136, align 8, !dbg !6160
  %f137 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %109, i32 0, i32 3, !dbg !6160
  %110 = load %struct.BMFace*, %struct.BMFace** %f137, align 8, !dbg !6160
  %no138 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %110, i32 0, i32 4, !dbg !6160
  %arraydecay139 = getelementptr inbounds [3 x float], [3 x float]* %no138, i64 0, i64 0, !dbg !6160
  %111 = load %struct.BMFace*, %struct.BMFace** %f_hit, align 8, !dbg !6160
  %no140 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %111, i32 0, i32 4, !dbg !6160
  %arraydecay141 = getelementptr inbounds [3 x float], [3 x float]* %no140, i64 0, i64 0, !dbg !6160
  %call142 = call float @dot_v3v3(float* %arraydecay139, float* %arraydecay141), !dbg !6160
  %112 = call float @llvm.fabs.f32(float %call142), !dbg !6160
  store float %112, float* %angle_fac135, align 4, !dbg !6160
  %113 = load float, float* %angle_fac135, align 4, !dbg !6160
  %sub143 = fsub float 1.000000e+00, %113, !dbg !6160
  store float %sub143, float* %angle_fac135, align 4, !dbg !6160
  %114 = load float, float* %angle_fac135, align 4, !dbg !6160
  %115 = load float, float* %angle_fac135, align 4, !dbg !6160
  %mul144 = fmul float %114, %115, !dbg !6160
  %116 = load float, float* %angle_fac135, align 4, !dbg !6160
  %mul145 = fmul float %mul144, %116, !dbg !6160
  store float %mul145, float* %angle_fac135, align 4, !dbg !6160
  %117 = load float, float* %angle_fac135, align 4, !dbg !6160
  %sub146 = fsub float 1.000000e+00, %117, !dbg !6160
  store float %sub146, float* %angle_fac135, align 4, !dbg !6160
  %118 = load float, float* %angle_fac135, align 4, !dbg !6160
  %119 = load float, float* %dist116, align 4, !dbg !6160
  %div147 = fdiv float %119, %118, !dbg !6160
  store float %div147, float* %dist116, align 4, !dbg !6160
  %120 = load float, float* %dist116, align 4, !dbg !6161
  %121 = load float*, float** %face_dists, align 8, !dbg !6161
  %122 = load i32, i32* %index, align 4, !dbg !6161
  %idxprom148 = sext i32 %122 to i64, !dbg !6161
  %arrayidx149 = getelementptr inbounds float, float* %121, i64 %idxprom148, !dbg !6161
  %123 = load float, float* %arrayidx149, align 4, !dbg !6161
  %cmp150 = fcmp olt float %120, %123, !dbg !6161
  br i1 %cmp150, label %if.then152, label %if.end155, !dbg !6160

if.then152:                                       ; preds = %if.then134
  %124 = load float, float* %dist116, align 4, !dbg !6163
  %125 = load float*, float** %face_dists, align 8, !dbg !6163
  %126 = load i32, i32* %index, align 4, !dbg !6163
  %idxprom153 = sext i32 %126 to i64, !dbg !6163
  %arrayidx154 = getelementptr inbounds float, float* %125, i64 %idxprom153, !dbg !6163
  store float %124, float* %arrayidx154, align 4, !dbg !6163
  br label %if.end155, !dbg !6163

if.end155:                                        ; preds = %if.then152, %if.then134
  br label %if.end156, !dbg !6160

if.end156:                                        ; preds = %if.end155, %land.lhs.true129, %if.else115
  br label %if.end157

if.end157:                                        ; preds = %if.end156, %for.end114
  br label %for.inc158, !dbg !6165

for.inc158:                                       ; preds = %if.end157
  %127 = load i32, i32* %i, align 4, !dbg !6166
  %inc159 = add nsw i32 %127, 1, !dbg !6166
  store i32 %inc159, i32* %i, align 4, !dbg !6166
  br label %for.cond12, !dbg !6167, !llvm.loop !6168

for.end160:                                       ; preds = %for.cond12
  %128 = load %struct.BMBVHTree*, %struct.BMBVHTree** %bmtree, align 8, !dbg !6170
  call void @BKE_bmbvh_free(%struct.BMBVHTree* %128), !dbg !6171
  store i32 0, i32* %i, align 4, !dbg !6172
  br label %for.cond161, !dbg !6174

for.cond161:                                      ; preds = %for.inc194, %for.end160
  %129 = load i32, i32* %i, align 4, !dbg !6175
  %130 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !6177
  %totface162 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %130, i32 0, i32 3, !dbg !6178
  %131 = load i32, i32* %totface162, align 4, !dbg !6178
  %cmp163 = icmp slt i32 %129, %131, !dbg !6179
  br i1 %cmp163, label %for.body165, label %for.end196, !dbg !6180

for.body165:                                      ; preds = %for.cond161
  call void @llvm.dbg.declare(metadata float* %fac, metadata !6181, metadata !DIExpression()), !dbg !6183
  %132 = load float*, float** %face_dists, align 8, !dbg !6184
  %133 = load i32, i32* %i, align 4, !dbg !6185
  %idxprom166 = sext i32 %133 to i64, !dbg !6184
  %arrayidx167 = getelementptr inbounds float, float* %132, i64 %idxprom166, !dbg !6184
  %134 = load float, float* %arrayidx167, align 4, !dbg !6184
  store float %134, float* %fac, align 4, !dbg !6183
  %135 = load float, float* %fac, align 4, !dbg !6186
  %136 = load float, float* %max.addr, align 4, !dbg !6188
  %cmp168 = fcmp olt float %135, %136, !dbg !6189
  br i1 %cmp168, label %if.then170, label %if.else188, !dbg !6190

if.then170:                                       ; preds = %for.body165
  call void @llvm.dbg.declare(metadata [3 x float]* %fcol, metadata !6191, metadata !DIExpression()), !dbg !6193
  %137 = load float, float* %fac, align 4, !dbg !6194
  %138 = load float, float* %min.addr, align 4, !dbg !6195
  %sub171 = fsub float %137, %138, !dbg !6196
  %139 = load float, float* %minmax_irange, align 4, !dbg !6197
  %mul172 = fmul float %sub171, %139, !dbg !6198
  store float %mul172, float* %fac, align 4, !dbg !6199
  %140 = load float, float* %fac, align 4, !dbg !6200
  %sub173 = fsub float 1.000000e+00, %140, !dbg !6201
  store float %sub173, float* %fac, align 4, !dbg !6202
  %141 = load float, float* %fac, align 4, !dbg !6203
  %cmp174 = fcmp olt float %141, 0.000000e+00, !dbg !6203
  br i1 %cmp174, label %if.then176, label %if.else177, !dbg !6206

if.then176:                                       ; preds = %if.then170
  store float 0.000000e+00, float* %fac, align 4, !dbg !6203
  br label %if.end182, !dbg !6203

if.else177:                                       ; preds = %if.then170
  %142 = load float, float* %fac, align 4, !dbg !6207
  %cmp178 = fcmp ogt float %142, 1.000000e+00, !dbg !6207
  br i1 %cmp178, label %if.then180, label %if.end181, !dbg !6203

if.then180:                                       ; preds = %if.else177
  store float 1.000000e+00, float* %fac, align 4, !dbg !6207
  br label %if.end181, !dbg !6207

if.end181:                                        ; preds = %if.then180, %if.else177
  br label %if.end182

if.end182:                                        ; preds = %if.end181, %if.then176
  %arraydecay183 = getelementptr inbounds [3 x float], [3 x float]* %fcol, i64 0, i64 0, !dbg !6209
  %143 = load float, float* %fac, align 4, !dbg !6210
  call void @weight_to_rgb(float* %arraydecay183, float %143), !dbg !6211
  %144 = load [4 x i8]*, [4 x i8]** %r_face_colors.addr, align 8, !dbg !6212
  %145 = load i32, i32* %i, align 4, !dbg !6213
  %idxprom184 = sext i32 %145 to i64, !dbg !6212
  %arrayidx185 = getelementptr inbounds [4 x i8], [4 x i8]* %144, i64 %idxprom184, !dbg !6212
  %arraydecay186 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx185, i64 0, i64 0, !dbg !6212
  %arraydecay187 = getelementptr inbounds [3 x float], [3 x float]* %fcol, i64 0, i64 0, !dbg !6214
  call void @rgb_float_to_uchar(i8* %arraydecay186, float* %arraydecay187), !dbg !6215
  br label %if.end193, !dbg !6216

if.else188:                                       ; preds = %for.body165
  %146 = load [4 x i8]*, [4 x i8]** %r_face_colors.addr, align 8, !dbg !6217
  %147 = load i32, i32* %i, align 4, !dbg !6219
  %idxprom189 = sext i32 %147 to i64, !dbg !6217
  %arrayidx190 = getelementptr inbounds [4 x i8], [4 x i8]* %146, i64 %idxprom189, !dbg !6217
  %arraydecay191 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx190, i64 0, i64 0, !dbg !6217
  %arraydecay192 = getelementptr inbounds [4 x i8], [4 x i8]* %col_fallback, i64 0, i64 0, !dbg !6220
  call void @copy_v4_v4_char(i8* %arraydecay191, i8* %arraydecay192), !dbg !6221
  br label %if.end193

if.end193:                                        ; preds = %if.else188, %if.end182
  br label %for.inc194, !dbg !6222

for.inc194:                                       ; preds = %if.end193
  %148 = load i32, i32* %i, align 4, !dbg !6223
  %inc195 = add nsw i32 %148, 1, !dbg !6223
  store i32 %inc195, i32* %i, align 4, !dbg !6223
  br label %for.cond161, !dbg !6224, !llvm.loop !6225

for.end196:                                       ; preds = %for.cond161
  ret void, !dbg !6227
}

; Function Attrs: noinline nounwind uwtable
define internal void @statvis_calc_intersect(%struct.BMEditMesh* %em, [3 x float]* %vertexCos, [4 x i8]* %r_face_colors) #0 !dbg !6228 {
entry:
  %em.addr = alloca %struct.BMEditMesh*, align 8
  %vertexCos.addr = alloca [3 x float]*, align 8
  %r_face_colors.addr = alloca [4 x i8]*, align 8
  %iter = alloca %struct.BMIter, align 8
  %bm = alloca %struct.BMesh*, align 8
  %e = alloca %struct.BMEdge*, align 8
  %index = alloca i32, align 4
  %bmtree = alloca %struct.BMBVHTree*, align 8
  %f_hit = alloca %struct.BMFace*, align 8
  %cos = alloca [2 x [3 x float]], align 16
  %cos_mid = alloca [3 x float], align 4
  %ray_no = alloca [3 x float], align 4
  %l_iter = alloca %struct.BMLoop*, align 8
  %l_first = alloca %struct.BMLoop*, align 8
  %fcol = alloca [3 x float], align 4
  store %struct.BMEditMesh* %em, %struct.BMEditMesh** %em.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em.addr, metadata !6231, metadata !DIExpression()), !dbg !6232
  store [3 x float]* %vertexCos, [3 x float]** %vertexCos.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %vertexCos.addr, metadata !6233, metadata !DIExpression()), !dbg !6234
  store [4 x i8]* %r_face_colors, [4 x i8]** %r_face_colors.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x i8]** %r_face_colors.addr, metadata !6235, metadata !DIExpression()), !dbg !6236
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !6237, metadata !DIExpression()), !dbg !6238
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm, metadata !6239, metadata !DIExpression()), !dbg !6240
  %0 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !6241
  %bm1 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %0, i32 0, i32 0, !dbg !6242
  %1 = load %struct.BMesh*, %struct.BMesh** %bm1, align 8, !dbg !6242
  store %struct.BMesh* %1, %struct.BMesh** %bm, align 8, !dbg !6240
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %e, metadata !6243, metadata !DIExpression()), !dbg !6244
  call void @llvm.dbg.declare(metadata i32* %index, metadata !6245, metadata !DIExpression()), !dbg !6246
  call void @llvm.dbg.declare(metadata %struct.BMBVHTree** %bmtree, metadata !6247, metadata !DIExpression()), !dbg !6248
  %2 = load [4 x i8]*, [4 x i8]** %r_face_colors.addr, align 8, !dbg !6249
  %3 = bitcast [4 x i8]* %2 to i8*, !dbg !6250
  %4 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !6251
  %bm2 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %4, i32 0, i32 0, !dbg !6252
  %5 = load %struct.BMesh*, %struct.BMesh** %bm2, align 8, !dbg !6252
  %totface = getelementptr inbounds %struct.BMesh, %struct.BMesh* %5, i32 0, i32 3, !dbg !6253
  %6 = load i32, i32* %totface, align 4, !dbg !6253
  %conv = sext i32 %6 to i64, !dbg !6251
  %mul = mul i64 4, %conv, !dbg !6254
  call void @llvm.memset.p0i8.i64(i8* align 1 %3, i8 64, i64 %mul, i1 false), !dbg !6250
  %7 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !6255
  call void @BM_mesh_elem_index_ensure(%struct.BMesh* %7, i8 zeroext 8), !dbg !6256
  %8 = load [3 x float]*, [3 x float]** %vertexCos.addr, align 8, !dbg !6257
  %tobool = icmp ne [3 x float]* %8, null, !dbg !6257
  br i1 %tobool, label %if.then, label %if.end, !dbg !6259

if.then:                                          ; preds = %entry
  %9 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !6260
  call void @BM_mesh_elem_index_ensure(%struct.BMesh* %9, i8 zeroext 1), !dbg !6262
  br label %if.end, !dbg !6263

if.end:                                           ; preds = %if.then, %entry
  %10 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !6264
  %11 = load [3 x float]*, [3 x float]** %vertexCos.addr, align 8, !dbg !6265
  %call = call %struct.BMBVHTree* @BKE_bmbvh_new_from_editmesh(%struct.BMEditMesh* %10, i32 0, [3 x float]* %11, i8 zeroext 0), !dbg !6266
  store %struct.BMBVHTree* %call, %struct.BMBVHTree** %bmtree, align 8, !dbg !6267
  %12 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !6268
  %call3 = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %12, i8 zeroext 2, i8* null), !dbg !6268
  %13 = bitcast i8* %call3 to %struct.BMEdge*, !dbg !6268
  store %struct.BMEdge* %13, %struct.BMEdge** %e, align 8, !dbg !6268
  br label %for.cond, !dbg !6268

for.cond:                                         ; preds = %for.inc, %if.end
  %14 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !6270
  %tobool4 = icmp ne %struct.BMEdge* %14, null, !dbg !6268
  br i1 %tobool4, label %for.body, label %for.end, !dbg !6268

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.BMFace** %f_hit, metadata !6272, metadata !DIExpression()), !dbg !6274
  call void @llvm.dbg.declare(metadata [2 x [3 x float]]* %cos, metadata !6275, metadata !DIExpression()), !dbg !6278
  call void @llvm.dbg.declare(metadata [3 x float]* %cos_mid, metadata !6279, metadata !DIExpression()), !dbg !6280
  call void @llvm.dbg.declare(metadata [3 x float]* %ray_no, metadata !6281, metadata !DIExpression()), !dbg !6282
  %15 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !6283
  %l = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %15, i32 0, i32 4, !dbg !6285
  %16 = load %struct.BMLoop*, %struct.BMLoop** %l, align 8, !dbg !6285
  %cmp = icmp eq %struct.BMLoop* %16, null, !dbg !6286
  br i1 %cmp, label %if.then6, label %if.end7, !dbg !6287

if.then6:                                         ; preds = %for.body
  br label %for.inc, !dbg !6288

if.end7:                                          ; preds = %for.body
  %17 = load [3 x float]*, [3 x float]** %vertexCos.addr, align 8, !dbg !6289
  %tobool8 = icmp ne [3 x float]* %17, null, !dbg !6289
  br i1 %tobool8, label %if.then9, label %if.else, !dbg !6291

if.then9:                                         ; preds = %if.end7
  %arrayidx = getelementptr inbounds [2 x [3 x float]], [2 x [3 x float]]* %cos, i64 0, i64 0, !dbg !6292
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !6292
  %18 = load [3 x float]*, [3 x float]** %vertexCos.addr, align 8, !dbg !6294
  %19 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !6295
  %v1 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %19, i32 0, i32 2, !dbg !6295
  %20 = load %struct.BMVert*, %struct.BMVert** %v1, align 8, !dbg !6295
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %20, i32 0, i32 0, !dbg !6295
  %call10 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head), !dbg !6295
  %idxprom = sext i32 %call10 to i64, !dbg !6294
  %arrayidx11 = getelementptr inbounds [3 x float], [3 x float]* %18, i64 %idxprom, !dbg !6294
  %arraydecay12 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx11, i64 0, i64 0, !dbg !6294
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay12), !dbg !6296
  %arrayidx13 = getelementptr inbounds [2 x [3 x float]], [2 x [3 x float]]* %cos, i64 0, i64 1, !dbg !6297
  %arraydecay14 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx13, i64 0, i64 0, !dbg !6297
  %21 = load [3 x float]*, [3 x float]** %vertexCos.addr, align 8, !dbg !6298
  %22 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !6299
  %v2 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %22, i32 0, i32 3, !dbg !6299
  %23 = load %struct.BMVert*, %struct.BMVert** %v2, align 8, !dbg !6299
  %head15 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %23, i32 0, i32 0, !dbg !6299
  %call16 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head15), !dbg !6299
  %idxprom17 = sext i32 %call16 to i64, !dbg !6298
  %arrayidx18 = getelementptr inbounds [3 x float], [3 x float]* %21, i64 %idxprom17, !dbg !6298
  %arraydecay19 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx18, i64 0, i64 0, !dbg !6298
  call void @copy_v3_v3(float* %arraydecay14, float* %arraydecay19), !dbg !6300
  br label %if.end29, !dbg !6301

if.else:                                          ; preds = %if.end7
  %arrayidx20 = getelementptr inbounds [2 x [3 x float]], [2 x [3 x float]]* %cos, i64 0, i64 0, !dbg !6302
  %arraydecay21 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx20, i64 0, i64 0, !dbg !6302
  %24 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !6304
  %v122 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %24, i32 0, i32 2, !dbg !6305
  %25 = load %struct.BMVert*, %struct.BMVert** %v122, align 8, !dbg !6305
  %co = getelementptr inbounds %struct.BMVert, %struct.BMVert* %25, i32 0, i32 2, !dbg !6306
  %arraydecay23 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !6304
  call void @copy_v3_v3(float* %arraydecay21, float* %arraydecay23), !dbg !6307
  %arrayidx24 = getelementptr inbounds [2 x [3 x float]], [2 x [3 x float]]* %cos, i64 0, i64 1, !dbg !6308
  %arraydecay25 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx24, i64 0, i64 0, !dbg !6308
  %26 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !6309
  %v226 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %26, i32 0, i32 3, !dbg !6310
  %27 = load %struct.BMVert*, %struct.BMVert** %v226, align 8, !dbg !6310
  %co27 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %27, i32 0, i32 2, !dbg !6311
  %arraydecay28 = getelementptr inbounds [3 x float], [3 x float]* %co27, i64 0, i64 0, !dbg !6309
  call void @copy_v3_v3(float* %arraydecay25, float* %arraydecay28), !dbg !6312
  br label %if.end29

if.end29:                                         ; preds = %if.else, %if.then9
  %arraydecay30 = getelementptr inbounds [3 x float], [3 x float]* %cos_mid, i64 0, i64 0, !dbg !6313
  %arrayidx31 = getelementptr inbounds [2 x [3 x float]], [2 x [3 x float]]* %cos, i64 0, i64 0, !dbg !6314
  %arraydecay32 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx31, i64 0, i64 0, !dbg !6314
  %arrayidx33 = getelementptr inbounds [2 x [3 x float]], [2 x [3 x float]]* %cos, i64 0, i64 1, !dbg !6315
  %arraydecay34 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx33, i64 0, i64 0, !dbg !6315
  call void @mid_v3_v3v3(float* %arraydecay30, float* %arraydecay32, float* %arraydecay34), !dbg !6316
  %arraydecay35 = getelementptr inbounds [3 x float], [3 x float]* %ray_no, i64 0, i64 0, !dbg !6317
  %arrayidx36 = getelementptr inbounds [2 x [3 x float]], [2 x [3 x float]]* %cos, i64 0, i64 1, !dbg !6318
  %arraydecay37 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx36, i64 0, i64 0, !dbg !6318
  %arrayidx38 = getelementptr inbounds [2 x [3 x float]], [2 x [3 x float]]* %cos, i64 0, i64 0, !dbg !6319
  %arraydecay39 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx38, i64 0, i64 0, !dbg !6319
  call void @sub_v3_v3v3(float* %arraydecay35, float* %arraydecay37, float* %arraydecay39), !dbg !6320
  %28 = load %struct.BMBVHTree*, %struct.BMBVHTree** %bmtree, align 8, !dbg !6321
  %arrayidx40 = getelementptr inbounds [2 x [3 x float]], [2 x [3 x float]]* %cos, i64 0, i64 0, !dbg !6322
  %arraydecay41 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx40, i64 0, i64 0, !dbg !6322
  %arrayidx42 = getelementptr inbounds [2 x [3 x float]], [2 x [3 x float]]* %cos, i64 0, i64 1, !dbg !6323
  %arraydecay43 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx42, i64 0, i64 0, !dbg !6323
  %call44 = call %struct.BMFace* @BKE_bmbvh_find_face_segment(%struct.BMBVHTree* %28, float* %arraydecay41, float* %arraydecay43, float* null, float* null, float* null), !dbg !6324
  store %struct.BMFace* %call44, %struct.BMFace** %f_hit, align 8, !dbg !6325
  %29 = load %struct.BMFace*, %struct.BMFace** %f_hit, align 8, !dbg !6326
  %tobool45 = icmp ne %struct.BMFace* %29, null, !dbg !6326
  br i1 %tobool45, label %if.then46, label %if.end64, !dbg !6328

if.then46:                                        ; preds = %if.end29
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l_iter, metadata !6329, metadata !DIExpression()), !dbg !6331
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l_first, metadata !6332, metadata !DIExpression()), !dbg !6333
  call void @llvm.dbg.declare(metadata [3 x float]* %fcol, metadata !6334, metadata !DIExpression()), !dbg !6335
  %30 = load %struct.BMFace*, %struct.BMFace** %f_hit, align 8, !dbg !6336
  %head47 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %30, i32 0, i32 0, !dbg !6336
  %call48 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head47), !dbg !6336
  store i32 %call48, i32* %index, align 4, !dbg !6337
  %arraydecay49 = getelementptr inbounds [3 x float], [3 x float]* %fcol, i64 0, i64 0, !dbg !6338
  call void @weight_to_rgb(float* %arraydecay49, float 1.000000e+00), !dbg !6339
  %31 = load [4 x i8]*, [4 x i8]** %r_face_colors.addr, align 8, !dbg !6340
  %32 = load i32, i32* %index, align 4, !dbg !6341
  %idxprom50 = sext i32 %32 to i64, !dbg !6340
  %arrayidx51 = getelementptr inbounds [4 x i8], [4 x i8]* %31, i64 %idxprom50, !dbg !6340
  %arraydecay52 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx51, i64 0, i64 0, !dbg !6340
  %arraydecay53 = getelementptr inbounds [3 x float], [3 x float]* %fcol, i64 0, i64 0, !dbg !6342
  call void @rgb_float_to_uchar(i8* %arraydecay52, float* %arraydecay53), !dbg !6343
  %33 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !6344
  %l54 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %33, i32 0, i32 4, !dbg !6345
  %34 = load %struct.BMLoop*, %struct.BMLoop** %l54, align 8, !dbg !6345
  store %struct.BMLoop* %34, %struct.BMLoop** %l_first, align 8, !dbg !6346
  store %struct.BMLoop* %34, %struct.BMLoop** %l_iter, align 8, !dbg !6347
  br label %do.body, !dbg !6348

do.body:                                          ; preds = %do.cond, %if.then46
  %35 = load %struct.BMLoop*, %struct.BMLoop** %l_iter, align 8, !dbg !6349
  %f = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %35, i32 0, i32 3, !dbg !6349
  %36 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !6349
  %head55 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %36, i32 0, i32 0, !dbg !6349
  %call56 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head55), !dbg !6349
  store i32 %call56, i32* %index, align 4, !dbg !6351
  %arraydecay57 = getelementptr inbounds [3 x float], [3 x float]* %fcol, i64 0, i64 0, !dbg !6352
  call void @weight_to_rgb(float* %arraydecay57, float 1.000000e+00), !dbg !6353
  %37 = load [4 x i8]*, [4 x i8]** %r_face_colors.addr, align 8, !dbg !6354
  %38 = load i32, i32* %index, align 4, !dbg !6355
  %idxprom58 = sext i32 %38 to i64, !dbg !6354
  %arrayidx59 = getelementptr inbounds [4 x i8], [4 x i8]* %37, i64 %idxprom58, !dbg !6354
  %arraydecay60 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx59, i64 0, i64 0, !dbg !6354
  %arraydecay61 = getelementptr inbounds [3 x float], [3 x float]* %fcol, i64 0, i64 0, !dbg !6356
  call void @rgb_float_to_uchar(i8* %arraydecay60, float* %arraydecay61), !dbg !6357
  br label %do.cond, !dbg !6358

do.cond:                                          ; preds = %do.body
  %39 = load %struct.BMLoop*, %struct.BMLoop** %l_iter, align 8, !dbg !6359
  %radial_next = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %39, i32 0, i32 4, !dbg !6360
  %40 = load %struct.BMLoop*, %struct.BMLoop** %radial_next, align 8, !dbg !6360
  store %struct.BMLoop* %40, %struct.BMLoop** %l_iter, align 8, !dbg !6361
  %41 = load %struct.BMLoop*, %struct.BMLoop** %l_first, align 8, !dbg !6362
  %cmp62 = icmp ne %struct.BMLoop* %40, %41, !dbg !6363
  br i1 %cmp62, label %do.body, label %do.end, !dbg !6358, !llvm.loop !6364

do.end:                                           ; preds = %do.cond
  br label %if.end64, !dbg !6366

if.end64:                                         ; preds = %do.end, %if.end29
  br label %for.inc, !dbg !6367

for.inc:                                          ; preds = %if.end64, %if.then6
  %call65 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !6270
  %42 = bitcast i8* %call65 to %struct.BMEdge*, !dbg !6270
  store %struct.BMEdge* %42, %struct.BMEdge** %e, align 8, !dbg !6270
  br label %for.cond, !dbg !6270, !llvm.loop !6368

for.end:                                          ; preds = %for.cond
  %43 = load %struct.BMBVHTree*, %struct.BMBVHTree** %bmtree, align 8, !dbg !6370
  call void @BKE_bmbvh_free(%struct.BMBVHTree* %43), !dbg !6371
  ret void, !dbg !6372
}

; Function Attrs: noinline nounwind uwtable
define internal void @emDM_ensurePolyNormals(%struct.EditDerivedBMesh* %bmdm) #0 !dbg !6373 {
entry:
  %bmdm.addr = alloca %struct.EditDerivedBMesh*, align 8
  %bm = alloca %struct.BMesh*, align 8
  %vertexCos2 = alloca [3 x float]*, align 8
  %polyNos3 = alloca [3 x float]*, align 8
  %efa = alloca %struct.BMFace*, align 8
  %fiter = alloca %struct.BMIter, align 8
  %i = alloca i32, align 4
  store %struct.EditDerivedBMesh* %bmdm, %struct.EditDerivedBMesh** %bmdm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EditDerivedBMesh** %bmdm.addr, metadata !6376, metadata !DIExpression()), !dbg !6377
  %0 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm.addr, align 8, !dbg !6378
  %vertexCos = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %0, i32 0, i32 2, !dbg !6380
  %1 = load [3 x float]*, [3 x float]** %vertexCos, align 8, !dbg !6380
  %tobool = icmp ne [3 x float]* %1, null, !dbg !6378
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !6381

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm.addr, align 8, !dbg !6382
  %polyNos = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %2, i32 0, i32 4, !dbg !6383
  %3 = load [3 x float]*, [3 x float]** %polyNos, align 8, !dbg !6383
  %cmp = icmp eq [3 x float]* %3, null, !dbg !6384
  br i1 %cmp, label %if.then, label %if.end, !dbg !6385

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm, metadata !6386, metadata !DIExpression()), !dbg !6388
  %4 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm.addr, align 8, !dbg !6389
  %em = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %4, i32 0, i32 1, !dbg !6390
  %5 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !6390
  %bm1 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %5, i32 0, i32 0, !dbg !6391
  %6 = load %struct.BMesh*, %struct.BMesh** %bm1, align 8, !dbg !6391
  store %struct.BMesh* %6, %struct.BMesh** %bm, align 8, !dbg !6388
  call void @llvm.dbg.declare(metadata [3 x float]** %vertexCos2, metadata !6392, metadata !DIExpression()), !dbg !6393
  call void @llvm.dbg.declare(metadata [3 x float]** %polyNos3, metadata !6394, metadata !DIExpression()), !dbg !6395
  call void @llvm.dbg.declare(metadata %struct.BMFace** %efa, metadata !6396, metadata !DIExpression()), !dbg !6397
  call void @llvm.dbg.declare(metadata %struct.BMIter* %fiter, metadata !6398, metadata !DIExpression()), !dbg !6399
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6400, metadata !DIExpression()), !dbg !6401
  %7 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !6402
  call void @BM_mesh_elem_index_ensure(%struct.BMesh* %7, i8 zeroext 1), !dbg !6403
  %8 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !6404
  %9 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !6405
  %totface = getelementptr inbounds %struct.BMesh, %struct.BMesh* %9, i32 0, i32 3, !dbg !6406
  %10 = load i32, i32* %totface, align 4, !dbg !6406
  %conv = sext i32 %10 to i64, !dbg !6405
  %mul = mul i64 12, %conv, !dbg !6407
  %call = call i8* %8(i64 %mul, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.emDM_ensurePolyNormals, i64 0, i64 0)), !dbg !6404
  %11 = bitcast i8* %call to [3 x float]*, !dbg !6404
  store [3 x float]* %11, [3 x float]** %polyNos3, align 8, !dbg !6408
  %12 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm.addr, align 8, !dbg !6409
  %vertexCos4 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %12, i32 0, i32 2, !dbg !6410
  %13 = load [3 x float]*, [3 x float]** %vertexCos4, align 8, !dbg !6410
  store [3 x float]* %13, [3 x float]** %vertexCos2, align 8, !dbg !6411
  %14 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !6412
  %call5 = call i8* @BM_iter_new(%struct.BMIter* %fiter, %struct.BMesh* %14, i8 zeroext 3, i8* null), !dbg !6412
  %15 = bitcast i8* %call5 to %struct.BMFace*, !dbg !6412
  store %struct.BMFace* %15, %struct.BMFace** %efa, align 8, !dbg !6412
  store i32 0, i32* %i, align 4, !dbg !6412
  br label %for.cond, !dbg !6412

for.cond:                                         ; preds = %for.inc, %if.then
  %16 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !6414
  %tobool6 = icmp ne %struct.BMFace* %16, null, !dbg !6412
  br i1 %tobool6, label %for.body, label %for.end, !dbg !6412

for.body:                                         ; preds = %for.cond
  %17 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !6416
  %head = getelementptr inbounds %struct.BMFace, %struct.BMFace* %17, i32 0, i32 0, !dbg !6416
  %18 = load i32, i32* %i, align 4, !dbg !6416
  call void @_bm_elem_index_set(%struct.BMHeader* %head, i32 %18), !dbg !6416
  %19 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !6418
  %20 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !6419
  %21 = load [3 x float]*, [3 x float]** %polyNos3, align 8, !dbg !6420
  %22 = load i32, i32* %i, align 4, !dbg !6421
  %idxprom = sext i32 %22 to i64, !dbg !6420
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %21, i64 %idxprom, !dbg !6420
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !6420
  %23 = load [3 x float]*, [3 x float]** %vertexCos2, align 8, !dbg !6422
  %call7 = call float @BM_face_calc_normal_vcos(%struct.BMesh* %19, %struct.BMFace* %20, float* %arraydecay, [3 x float]* %23), !dbg !6423
  br label %for.inc, !dbg !6424

for.inc:                                          ; preds = %for.body
  %call8 = call i8* @BM_iter_step(%struct.BMIter* %fiter), !dbg !6414
  %24 = bitcast i8* %call8 to %struct.BMFace*, !dbg !6414
  store %struct.BMFace* %24, %struct.BMFace** %efa, align 8, !dbg !6414
  %25 = load i32, i32* %i, align 4, !dbg !6414
  %inc = add nsw i32 %25, 1, !dbg !6414
  store i32 %inc, i32* %i, align 4, !dbg !6414
  br label %for.cond, !dbg !6414, !llvm.loop !6425

for.end:                                          ; preds = %for.cond
  %26 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !6427
  %elem_index_dirty = getelementptr inbounds %struct.BMesh, %struct.BMesh* %26, i32 0, i32 7, !dbg !6428
  %27 = load i8, i8* %elem_index_dirty, align 4, !dbg !6429
  %conv9 = zext i8 %27 to i32, !dbg !6429
  %and = and i32 %conv9, -9, !dbg !6429
  %conv10 = trunc i32 %and to i8, !dbg !6429
  store i8 %conv10, i8* %elem_index_dirty, align 4, !dbg !6429
  %28 = load [3 x float]*, [3 x float]** %polyNos3, align 8, !dbg !6430
  %29 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm.addr, align 8, !dbg !6431
  %polyNos11 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %29, i32 0, i32 4, !dbg !6432
  store [3 x float]* %28, [3 x float]** %polyNos11, align 8, !dbg !6433
  br label %if.end, !dbg !6434

if.end:                                           ; preds = %for.end, %land.lhs.true, %entry
  ret void, !dbg !6435
}

; Function Attrs: noinline nounwind uwtable
define internal void @statvis_calc_distort(%struct.BMEditMesh* %em, [3 x float]* %vertexCos, [3 x float]* %polyNos, float %min, float %max, [4 x i8]* %r_face_colors) #0 !dbg !6436 {
entry:
  %em.addr = alloca %struct.BMEditMesh*, align 8
  %vertexCos.addr = alloca [3 x float]*, align 8
  %polyNos.addr = alloca [3 x float]*, align 8
  %min.addr = alloca float, align 4
  %max.addr = alloca float, align 4
  %r_face_colors.addr = alloca [4 x i8]*, align 8
  %iter = alloca %struct.BMIter, align 8
  %bm = alloca %struct.BMesh*, align 8
  %f = alloca %struct.BMFace*, align 8
  %f_no = alloca float*, align 8
  %index = alloca i32, align 4
  %minmax_irange = alloca float, align 4
  %col_fallback = alloca [4 x i8], align 1
  %fac = alloca float, align 4
  %l_iter = alloca %struct.BMLoop*, align 8
  %l_first = alloca %struct.BMLoop*, align 8
  %no_corner = alloca [3 x float], align 4
  %fcol = alloca [3 x float], align 4
  store %struct.BMEditMesh* %em, %struct.BMEditMesh** %em.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em.addr, metadata !6439, metadata !DIExpression()), !dbg !6440
  store [3 x float]* %vertexCos, [3 x float]** %vertexCos.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %vertexCos.addr, metadata !6441, metadata !DIExpression()), !dbg !6442
  store [3 x float]* %polyNos, [3 x float]** %polyNos.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %polyNos.addr, metadata !6443, metadata !DIExpression()), !dbg !6444
  store float %min, float* %min.addr, align 4
  call void @llvm.dbg.declare(metadata float* %min.addr, metadata !6445, metadata !DIExpression()), !dbg !6446
  store float %max, float* %max.addr, align 4
  call void @llvm.dbg.declare(metadata float* %max.addr, metadata !6447, metadata !DIExpression()), !dbg !6448
  store [4 x i8]* %r_face_colors, [4 x i8]** %r_face_colors.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x i8]** %r_face_colors.addr, metadata !6449, metadata !DIExpression()), !dbg !6450
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !6451, metadata !DIExpression()), !dbg !6452
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm, metadata !6453, metadata !DIExpression()), !dbg !6454
  %0 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !6455
  %bm1 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %0, i32 0, i32 0, !dbg !6456
  %1 = load %struct.BMesh*, %struct.BMesh** %bm1, align 8, !dbg !6456
  store %struct.BMesh* %1, %struct.BMesh** %bm, align 8, !dbg !6454
  call void @llvm.dbg.declare(metadata %struct.BMFace** %f, metadata !6457, metadata !DIExpression()), !dbg !6458
  call void @llvm.dbg.declare(metadata float** %f_no, metadata !6459, metadata !DIExpression()), !dbg !6460
  call void @llvm.dbg.declare(metadata i32* %index, metadata !6461, metadata !DIExpression()), !dbg !6462
  call void @llvm.dbg.declare(metadata float* %minmax_irange, metadata !6463, metadata !DIExpression()), !dbg !6464
  %2 = load float, float* %max.addr, align 4, !dbg !6465
  %3 = load float, float* %min.addr, align 4, !dbg !6466
  %sub = fsub float %2, %3, !dbg !6467
  %div = fdiv float 1.000000e+00, %sub, !dbg !6468
  store float %div, float* %minmax_irange, align 4, !dbg !6464
  call void @llvm.dbg.declare(metadata [4 x i8]* %col_fallback, metadata !6469, metadata !DIExpression()), !dbg !6470
  %4 = bitcast [4 x i8]* %col_fallback to i8*, !dbg !6470
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %4, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @__const.statvis_calc_distort.col_fallback, i32 0, i32 0), i64 4, i1 false), !dbg !6470
  %5 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !6471
  %call = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %5, i8 zeroext 3, i8* null), !dbg !6471
  %6 = bitcast i8* %call to %struct.BMFace*, !dbg !6471
  store %struct.BMFace* %6, %struct.BMFace** %f, align 8, !dbg !6471
  store i32 0, i32* %index, align 4, !dbg !6471
  br label %for.cond, !dbg !6471

for.cond:                                         ; preds = %for.inc, %entry
  %7 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !6473
  %tobool = icmp ne %struct.BMFace* %7, null, !dbg !6471
  br i1 %tobool, label %for.body, label %for.end, !dbg !6471

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata float* %fac, metadata !6475, metadata !DIExpression()), !dbg !6477
  %8 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !6478
  %len = getelementptr inbounds %struct.BMFace, %struct.BMFace* %8, i32 0, i32 3, !dbg !6480
  %9 = load i32, i32* %len, align 8, !dbg !6480
  %cmp = icmp eq i32 %9, 3, !dbg !6481
  br i1 %cmp, label %if.then, label %if.else, !dbg !6482

if.then:                                          ; preds = %for.body
  store float -1.000000e+00, float* %fac, align 4, !dbg !6483
  br label %if.end41, !dbg !6485

if.else:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l_iter, metadata !6486, metadata !DIExpression()), !dbg !6488
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %l_first, metadata !6489, metadata !DIExpression()), !dbg !6490
  %10 = load [3 x float]*, [3 x float]** %vertexCos.addr, align 8, !dbg !6491
  %tobool2 = icmp ne [3 x float]* %10, null, !dbg !6491
  br i1 %tobool2, label %if.then3, label %if.else4, !dbg !6493

if.then3:                                         ; preds = %if.else
  %11 = load [3 x float]*, [3 x float]** %polyNos.addr, align 8, !dbg !6494
  %12 = load i32, i32* %index, align 4, !dbg !6496
  %idxprom = sext i32 %12 to i64, !dbg !6494
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %11, i64 %idxprom, !dbg !6494
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !6494
  store float* %arraydecay, float** %f_no, align 8, !dbg !6497
  br label %if.end, !dbg !6498

if.else4:                                         ; preds = %if.else
  %13 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !6499
  %no = getelementptr inbounds %struct.BMFace, %struct.BMFace* %13, i32 0, i32 4, !dbg !6501
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %no, i64 0, i64 0, !dbg !6499
  store float* %arraydecay5, float** %f_no, align 8, !dbg !6502
  br label %if.end

if.end:                                           ; preds = %if.else4, %if.then3
  store float 0.000000e+00, float* %fac, align 4, !dbg !6503
  %14 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !6504
  %l_first6 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %14, i32 0, i32 2, !dbg !6504
  %15 = load %struct.BMLoop*, %struct.BMLoop** %l_first6, align 8, !dbg !6504
  store %struct.BMLoop* %15, %struct.BMLoop** %l_first, align 8, !dbg !6505
  store %struct.BMLoop* %15, %struct.BMLoop** %l_iter, align 8, !dbg !6506
  br label %do.body, !dbg !6507

do.body:                                          ; preds = %do.cond, %if.end
  call void @llvm.dbg.declare(metadata [3 x float]* %no_corner, metadata !6508, metadata !DIExpression()), !dbg !6510
  %16 = load [3 x float]*, [3 x float]** %vertexCos.addr, align 8, !dbg !6511
  %tobool7 = icmp ne [3 x float]* %16, null, !dbg !6511
  br i1 %tobool7, label %if.then8, label %if.else27, !dbg !6513

if.then8:                                         ; preds = %do.body
  %arraydecay9 = getelementptr inbounds [3 x float], [3 x float]* %no_corner, i64 0, i64 0, !dbg !6514
  %17 = load [3 x float]*, [3 x float]** %vertexCos.addr, align 8, !dbg !6516
  %18 = load %struct.BMLoop*, %struct.BMLoop** %l_iter, align 8, !dbg !6517
  %prev = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %18, i32 0, i32 7, !dbg !6517
  %19 = load %struct.BMLoop*, %struct.BMLoop** %prev, align 8, !dbg !6517
  %v = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %19, i32 0, i32 1, !dbg !6517
  %20 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !6517
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %20, i32 0, i32 0, !dbg !6517
  %call10 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head), !dbg !6517
  %idxprom11 = sext i32 %call10 to i64, !dbg !6516
  %arrayidx12 = getelementptr inbounds [3 x float], [3 x float]* %17, i64 %idxprom11, !dbg !6516
  %arraydecay13 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx12, i64 0, i64 0, !dbg !6516
  %21 = load [3 x float]*, [3 x float]** %vertexCos.addr, align 8, !dbg !6518
  %22 = load %struct.BMLoop*, %struct.BMLoop** %l_iter, align 8, !dbg !6519
  %v14 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %22, i32 0, i32 1, !dbg !6519
  %23 = load %struct.BMVert*, %struct.BMVert** %v14, align 8, !dbg !6519
  %head15 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %23, i32 0, i32 0, !dbg !6519
  %call16 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head15), !dbg !6519
  %idxprom17 = sext i32 %call16 to i64, !dbg !6518
  %arrayidx18 = getelementptr inbounds [3 x float], [3 x float]* %21, i64 %idxprom17, !dbg !6518
  %arraydecay19 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx18, i64 0, i64 0, !dbg !6518
  %24 = load [3 x float]*, [3 x float]** %vertexCos.addr, align 8, !dbg !6520
  %25 = load %struct.BMLoop*, %struct.BMLoop** %l_iter, align 8, !dbg !6521
  %next = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %25, i32 0, i32 6, !dbg !6521
  %26 = load %struct.BMLoop*, %struct.BMLoop** %next, align 8, !dbg !6521
  %v20 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %26, i32 0, i32 1, !dbg !6521
  %27 = load %struct.BMVert*, %struct.BMVert** %v20, align 8, !dbg !6521
  %head21 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %27, i32 0, i32 0, !dbg !6521
  %call22 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head21), !dbg !6521
  %idxprom23 = sext i32 %call22 to i64, !dbg !6520
  %arrayidx24 = getelementptr inbounds [3 x float], [3 x float]* %24, i64 %idxprom23, !dbg !6520
  %arraydecay25 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx24, i64 0, i64 0, !dbg !6520
  %call26 = call float @normal_tri_v3(float* %arraydecay9, float* %arraydecay13, float* %arraydecay19, float* %arraydecay25), !dbg !6522
  br label %if.end29, !dbg !6523

if.else27:                                        ; preds = %do.body
  %28 = load %struct.BMLoop*, %struct.BMLoop** %l_iter, align 8, !dbg !6524
  %arraydecay28 = getelementptr inbounds [3 x float], [3 x float]* %no_corner, i64 0, i64 0, !dbg !6526
  call void @BM_loop_calc_face_normal(%struct.BMLoop* %28, float* %arraydecay28), !dbg !6527
  br label %if.end29

if.end29:                                         ; preds = %if.else27, %if.then8
  %29 = load float*, float** %f_no, align 8, !dbg !6528
  %arraydecay30 = getelementptr inbounds [3 x float], [3 x float]* %no_corner, i64 0, i64 0, !dbg !6530
  %call31 = call float @dot_v3v3(float* %29, float* %arraydecay30), !dbg !6531
  %cmp32 = fcmp olt float %call31, 0.000000e+00, !dbg !6532
  br i1 %cmp32, label %if.then33, label %if.end35, !dbg !6533

if.then33:                                        ; preds = %if.end29
  %arraydecay34 = getelementptr inbounds [3 x float], [3 x float]* %no_corner, i64 0, i64 0, !dbg !6534
  call void @negate_v3(float* %arraydecay34), !dbg !6536
  br label %if.end35, !dbg !6537

if.end35:                                         ; preds = %if.then33, %if.end29
  %30 = load float, float* %fac, align 4, !dbg !6538
  %31 = load float*, float** %f_no, align 8, !dbg !6539
  %arraydecay36 = getelementptr inbounds [3 x float], [3 x float]* %no_corner, i64 0, i64 0, !dbg !6540
  %call37 = call float @angle_normalized_v3v3(float* %31, float* %arraydecay36), !dbg !6541
  %call38 = call float @max_ff(float %30, float %call37), !dbg !6542
  store float %call38, float* %fac, align 4, !dbg !6543
  br label %do.cond, !dbg !6544

do.cond:                                          ; preds = %if.end35
  %32 = load %struct.BMLoop*, %struct.BMLoop** %l_iter, align 8, !dbg !6545
  %next39 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %32, i32 0, i32 6, !dbg !6546
  %33 = load %struct.BMLoop*, %struct.BMLoop** %next39, align 8, !dbg !6546
  store %struct.BMLoop* %33, %struct.BMLoop** %l_iter, align 8, !dbg !6547
  %34 = load %struct.BMLoop*, %struct.BMLoop** %l_first, align 8, !dbg !6548
  %cmp40 = icmp ne %struct.BMLoop* %33, %34, !dbg !6549
  br i1 %cmp40, label %do.body, label %do.end, !dbg !6544, !llvm.loop !6550

do.end:                                           ; preds = %do.cond
  %35 = load float, float* %fac, align 4, !dbg !6552
  %mul = fmul float %35, 2.000000e+00, !dbg !6552
  store float %mul, float* %fac, align 4, !dbg !6552
  br label %if.end41

if.end41:                                         ; preds = %do.end, %if.then
  %36 = load float, float* %fac, align 4, !dbg !6553
  %37 = load float, float* %min.addr, align 4, !dbg !6555
  %cmp42 = fcmp oge float %36, %37, !dbg !6556
  br i1 %cmp42, label %if.then43, label %if.else58, !dbg !6557

if.then43:                                        ; preds = %if.end41
  call void @llvm.dbg.declare(metadata [3 x float]* %fcol, metadata !6558, metadata !DIExpression()), !dbg !6560
  %38 = load float, float* %fac, align 4, !dbg !6561
  %39 = load float, float* %min.addr, align 4, !dbg !6562
  %sub44 = fsub float %38, %39, !dbg !6563
  %40 = load float, float* %minmax_irange, align 4, !dbg !6564
  %mul45 = fmul float %sub44, %40, !dbg !6565
  store float %mul45, float* %fac, align 4, !dbg !6566
  %41 = load float, float* %fac, align 4, !dbg !6567
  %cmp46 = fcmp olt float %41, 0.000000e+00, !dbg !6567
  br i1 %cmp46, label %if.then47, label %if.else48, !dbg !6570

if.then47:                                        ; preds = %if.then43
  store float 0.000000e+00, float* %fac, align 4, !dbg !6567
  br label %if.end52, !dbg !6567

if.else48:                                        ; preds = %if.then43
  %42 = load float, float* %fac, align 4, !dbg !6571
  %cmp49 = fcmp ogt float %42, 1.000000e+00, !dbg !6571
  br i1 %cmp49, label %if.then50, label %if.end51, !dbg !6567

if.then50:                                        ; preds = %if.else48
  store float 1.000000e+00, float* %fac, align 4, !dbg !6571
  br label %if.end51, !dbg !6571

if.end51:                                         ; preds = %if.then50, %if.else48
  br label %if.end52

if.end52:                                         ; preds = %if.end51, %if.then47
  %arraydecay53 = getelementptr inbounds [3 x float], [3 x float]* %fcol, i64 0, i64 0, !dbg !6573
  %43 = load float, float* %fac, align 4, !dbg !6574
  call void @weight_to_rgb(float* %arraydecay53, float %43), !dbg !6575
  %44 = load [4 x i8]*, [4 x i8]** %r_face_colors.addr, align 8, !dbg !6576
  %45 = load i32, i32* %index, align 4, !dbg !6577
  %idxprom54 = sext i32 %45 to i64, !dbg !6576
  %arrayidx55 = getelementptr inbounds [4 x i8], [4 x i8]* %44, i64 %idxprom54, !dbg !6576
  %arraydecay56 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx55, i64 0, i64 0, !dbg !6576
  %arraydecay57 = getelementptr inbounds [3 x float], [3 x float]* %fcol, i64 0, i64 0, !dbg !6578
  call void @rgb_float_to_uchar(i8* %arraydecay56, float* %arraydecay57), !dbg !6579
  br label %if.end63, !dbg !6580

if.else58:                                        ; preds = %if.end41
  %46 = load [4 x i8]*, [4 x i8]** %r_face_colors.addr, align 8, !dbg !6581
  %47 = load i32, i32* %index, align 4, !dbg !6583
  %idxprom59 = sext i32 %47 to i64, !dbg !6581
  %arrayidx60 = getelementptr inbounds [4 x i8], [4 x i8]* %46, i64 %idxprom59, !dbg !6581
  %arraydecay61 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx60, i64 0, i64 0, !dbg !6581
  %arraydecay62 = getelementptr inbounds [4 x i8], [4 x i8]* %col_fallback, i64 0, i64 0, !dbg !6584
  call void @copy_v4_v4_char(i8* %arraydecay61, i8* %arraydecay62), !dbg !6585
  br label %if.end63

if.end63:                                         ; preds = %if.else58, %if.end52
  br label %for.inc, !dbg !6586

for.inc:                                          ; preds = %if.end63
  %call64 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !6473
  %48 = bitcast i8* %call64 to %struct.BMFace*, !dbg !6473
  store %struct.BMFace* %48, %struct.BMFace** %f, align 8, !dbg !6473
  %49 = load i32, i32* %index, align 4, !dbg !6473
  %inc = add nsw i32 %49, 1, !dbg !6473
  store i32 %inc, i32* %index, align 4, !dbg !6473
  br label %for.cond, !dbg !6473, !llvm.loop !6587

for.end:                                          ; preds = %for.cond
  ret void, !dbg !6589
}

; Function Attrs: noinline nounwind uwtable
define internal void @statvis_calc_sharp(%struct.BMEditMesh* %em, [3 x float]* %vertexCos, float %min, float %max, [4 x i8]* %r_vert_colors) #0 !dbg !6590 {
entry:
  %em.addr = alloca %struct.BMEditMesh*, align 8
  %vertexCos.addr = alloca [3 x float]*, align 8
  %min.addr = alloca float, align 4
  %max.addr = alloca float, align 4
  %r_vert_colors.addr = alloca [4 x i8]*, align 8
  %vert_angles = alloca float*, align 8
  %iter = alloca %struct.BMIter, align 8
  %bm = alloca %struct.BMesh*, align 8
  %e = alloca %struct.BMEdge*, align 8
  %minmax_irange = alloca float, align 4
  %i = alloca i32, align 4
  %col_fallback = alloca [4 x i8], align 1
  %angle = alloca float, align 4
  %col1 = alloca float*, align 8
  %col2 = alloca float*, align 8
  %fac = alloca float, align 4
  %fcol = alloca [3 x float], align 4
  store %struct.BMEditMesh* %em, %struct.BMEditMesh** %em.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em.addr, metadata !6593, metadata !DIExpression()), !dbg !6594
  store [3 x float]* %vertexCos, [3 x float]** %vertexCos.addr, align 8
  call void @llvm.dbg.declare(metadata [3 x float]** %vertexCos.addr, metadata !6595, metadata !DIExpression()), !dbg !6596
  store float %min, float* %min.addr, align 4
  call void @llvm.dbg.declare(metadata float* %min.addr, metadata !6597, metadata !DIExpression()), !dbg !6598
  store float %max, float* %max.addr, align 4
  call void @llvm.dbg.declare(metadata float* %max.addr, metadata !6599, metadata !DIExpression()), !dbg !6600
  store [4 x i8]* %r_vert_colors, [4 x i8]** %r_vert_colors.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x i8]** %r_vert_colors.addr, metadata !6601, metadata !DIExpression()), !dbg !6602
  call void @llvm.dbg.declare(metadata float** %vert_angles, metadata !6603, metadata !DIExpression()), !dbg !6604
  %0 = load [4 x i8]*, [4 x i8]** %r_vert_colors.addr, align 8, !dbg !6605
  %1 = bitcast [4 x i8]* %0 to float*, !dbg !6606
  store float* %1, float** %vert_angles, align 8, !dbg !6604
  call void @llvm.dbg.declare(metadata %struct.BMIter* %iter, metadata !6607, metadata !DIExpression()), !dbg !6608
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm, metadata !6609, metadata !DIExpression()), !dbg !6610
  %2 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !6611
  %bm1 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %2, i32 0, i32 0, !dbg !6612
  %3 = load %struct.BMesh*, %struct.BMesh** %bm1, align 8, !dbg !6612
  store %struct.BMesh* %3, %struct.BMesh** %bm, align 8, !dbg !6610
  call void @llvm.dbg.declare(metadata %struct.BMEdge** %e, metadata !6613, metadata !DIExpression()), !dbg !6614
  call void @llvm.dbg.declare(metadata float* %minmax_irange, metadata !6615, metadata !DIExpression()), !dbg !6616
  %4 = load float, float* %max.addr, align 4, !dbg !6617
  %5 = load float, float* %min.addr, align 4, !dbg !6618
  %sub = fsub float %4, %5, !dbg !6619
  %div = fdiv float 1.000000e+00, %sub, !dbg !6620
  store float %div, float* %minmax_irange, align 4, !dbg !6616
  call void @llvm.dbg.declare(metadata i32* %i, metadata !6621, metadata !DIExpression()), !dbg !6622
  call void @llvm.dbg.declare(metadata [4 x i8]* %col_fallback, metadata !6623, metadata !DIExpression()), !dbg !6624
  %6 = bitcast [4 x i8]* %col_fallback to i8*, !dbg !6624
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %6, i8* align 1 getelementptr inbounds ([4 x i8], [4 x i8]* @__const.statvis_calc_sharp.col_fallback, i32 0, i32 0), i64 4, i1 false), !dbg !6624
  %7 = load [3 x float]*, [3 x float]** %vertexCos.addr, align 8, !dbg !6625
  %8 = load float*, float** %vert_angles, align 8, !dbg !6626
  %9 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !6627
  %bm2 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %9, i32 0, i32 0, !dbg !6628
  %10 = load %struct.BMesh*, %struct.BMesh** %bm2, align 8, !dbg !6628
  %totvert = getelementptr inbounds %struct.BMesh, %struct.BMesh* %10, i32 0, i32 0, !dbg !6629
  %11 = load i32, i32* %totvert, align 8, !dbg !6629
  call void @fill_vn_fl(float* %8, i32 %11, float 0xC00921FB60000000), !dbg !6630
  %12 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !6631
  %call = call i8* @BM_iter_new(%struct.BMIter* %iter, %struct.BMesh* %12, i8 zeroext 2, i8* null), !dbg !6631
  %13 = bitcast i8* %call to %struct.BMEdge*, !dbg !6631
  store %struct.BMEdge* %13, %struct.BMEdge** %e, align 8, !dbg !6631
  br label %for.cond, !dbg !6631

for.cond:                                         ; preds = %for.inc, %entry
  %14 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !6633
  %tobool = icmp ne %struct.BMEdge* %14, null, !dbg !6631
  br i1 %tobool, label %for.body, label %for.end, !dbg !6631

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata float* %angle, metadata !6635, metadata !DIExpression()), !dbg !6637
  %15 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !6638
  %call3 = call float @BM_edge_calc_face_angle_signed(%struct.BMEdge* %15), !dbg !6639
  store float %call3, float* %angle, align 4, !dbg !6637
  call void @llvm.dbg.declare(metadata float** %col1, metadata !6640, metadata !DIExpression()), !dbg !6641
  %16 = load float*, float** %vert_angles, align 8, !dbg !6642
  %17 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !6643
  %v1 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %17, i32 0, i32 2, !dbg !6643
  %18 = load %struct.BMVert*, %struct.BMVert** %v1, align 8, !dbg !6643
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %18, i32 0, i32 0, !dbg !6643
  %call4 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head), !dbg !6643
  %idxprom = sext i32 %call4 to i64, !dbg !6642
  %arrayidx = getelementptr inbounds float, float* %16, i64 %idxprom, !dbg !6642
  store float* %arrayidx, float** %col1, align 8, !dbg !6641
  call void @llvm.dbg.declare(metadata float** %col2, metadata !6644, metadata !DIExpression()), !dbg !6645
  %19 = load float*, float** %vert_angles, align 8, !dbg !6646
  %20 = load %struct.BMEdge*, %struct.BMEdge** %e, align 8, !dbg !6647
  %v2 = getelementptr inbounds %struct.BMEdge, %struct.BMEdge* %20, i32 0, i32 3, !dbg !6647
  %21 = load %struct.BMVert*, %struct.BMVert** %v2, align 8, !dbg !6647
  %head5 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %21, i32 0, i32 0, !dbg !6647
  %call6 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head5), !dbg !6647
  %idxprom7 = sext i32 %call6 to i64, !dbg !6646
  %arrayidx8 = getelementptr inbounds float, float* %19, i64 %idxprom7, !dbg !6646
  store float* %arrayidx8, float** %col2, align 8, !dbg !6645
  %22 = load float*, float** %col1, align 8, !dbg !6648
  %23 = load float, float* %22, align 4, !dbg !6649
  %24 = load float, float* %angle, align 4, !dbg !6650
  %call9 = call float @max_ff(float %23, float %24), !dbg !6651
  %25 = load float*, float** %col1, align 8, !dbg !6652
  store float %call9, float* %25, align 4, !dbg !6653
  %26 = load float*, float** %col2, align 8, !dbg !6654
  %27 = load float, float* %26, align 4, !dbg !6655
  %28 = load float, float* %angle, align 4, !dbg !6656
  %call10 = call float @max_ff(float %27, float %28), !dbg !6657
  %29 = load float*, float** %col2, align 8, !dbg !6658
  store float %call10, float* %29, align 4, !dbg !6659
  br label %for.inc, !dbg !6660

for.inc:                                          ; preds = %for.body
  %call11 = call i8* @BM_iter_step(%struct.BMIter* %iter), !dbg !6633
  %30 = bitcast i8* %call11 to %struct.BMEdge*, !dbg !6633
  store %struct.BMEdge* %30, %struct.BMEdge** %e, align 8, !dbg !6633
  br label %for.cond, !dbg !6633, !llvm.loop !6661

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !6663
  br label %for.cond12, !dbg !6665

for.cond12:                                       ; preds = %for.inc34, %for.end
  %31 = load i32, i32* %i, align 4, !dbg !6666
  %32 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !6668
  %totvert13 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %32, i32 0, i32 0, !dbg !6669
  %33 = load i32, i32* %totvert13, align 8, !dbg !6669
  %cmp = icmp slt i32 %31, %33, !dbg !6670
  br i1 %cmp, label %for.body14, label %for.end35, !dbg !6671

for.body14:                                       ; preds = %for.cond12
  call void @llvm.dbg.declare(metadata float* %fac, metadata !6672, metadata !DIExpression()), !dbg !6674
  %34 = load float*, float** %vert_angles, align 8, !dbg !6675
  %35 = load i32, i32* %i, align 4, !dbg !6676
  %idxprom15 = sext i32 %35 to i64, !dbg !6675
  %arrayidx16 = getelementptr inbounds float, float* %34, i64 %idxprom15, !dbg !6675
  %36 = load float, float* %arrayidx16, align 4, !dbg !6675
  store float %36, float* %fac, align 4, !dbg !6674
  %37 = load float, float* %fac, align 4, !dbg !6677
  %38 = load float, float* %min.addr, align 4, !dbg !6679
  %cmp17 = fcmp ogt float %37, %38, !dbg !6680
  br i1 %cmp17, label %if.then, label %if.else28, !dbg !6681

if.then:                                          ; preds = %for.body14
  call void @llvm.dbg.declare(metadata [3 x float]* %fcol, metadata !6682, metadata !DIExpression()), !dbg !6684
  %39 = load float, float* %fac, align 4, !dbg !6685
  %40 = load float, float* %min.addr, align 4, !dbg !6686
  %sub18 = fsub float %39, %40, !dbg !6687
  %41 = load float, float* %minmax_irange, align 4, !dbg !6688
  %mul = fmul float %sub18, %41, !dbg !6689
  store float %mul, float* %fac, align 4, !dbg !6690
  %42 = load float, float* %fac, align 4, !dbg !6691
  %cmp19 = fcmp olt float %42, 0.000000e+00, !dbg !6691
  br i1 %cmp19, label %if.then20, label %if.else, !dbg !6694

if.then20:                                        ; preds = %if.then
  store float 0.000000e+00, float* %fac, align 4, !dbg !6691
  br label %if.end23, !dbg !6691

if.else:                                          ; preds = %if.then
  %43 = load float, float* %fac, align 4, !dbg !6695
  %cmp21 = fcmp ogt float %43, 1.000000e+00, !dbg !6695
  br i1 %cmp21, label %if.then22, label %if.end, !dbg !6691

if.then22:                                        ; preds = %if.else
  store float 1.000000e+00, float* %fac, align 4, !dbg !6695
  br label %if.end, !dbg !6695

if.end:                                           ; preds = %if.then22, %if.else
  br label %if.end23

if.end23:                                         ; preds = %if.end, %if.then20
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %fcol, i64 0, i64 0, !dbg !6697
  %44 = load float, float* %fac, align 4, !dbg !6698
  call void @weight_to_rgb(float* %arraydecay, float %44), !dbg !6699
  %45 = load [4 x i8]*, [4 x i8]** %r_vert_colors.addr, align 8, !dbg !6700
  %46 = load i32, i32* %i, align 4, !dbg !6701
  %idxprom24 = sext i32 %46 to i64, !dbg !6700
  %arrayidx25 = getelementptr inbounds [4 x i8], [4 x i8]* %45, i64 %idxprom24, !dbg !6700
  %arraydecay26 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx25, i64 0, i64 0, !dbg !6700
  %arraydecay27 = getelementptr inbounds [3 x float], [3 x float]* %fcol, i64 0, i64 0, !dbg !6702
  call void @rgb_float_to_uchar(i8* %arraydecay26, float* %arraydecay27), !dbg !6703
  br label %if.end33, !dbg !6704

if.else28:                                        ; preds = %for.body14
  %47 = load [4 x i8]*, [4 x i8]** %r_vert_colors.addr, align 8, !dbg !6705
  %48 = load i32, i32* %i, align 4, !dbg !6707
  %idxprom29 = sext i32 %48 to i64, !dbg !6705
  %arrayidx30 = getelementptr inbounds [4 x i8], [4 x i8]* %47, i64 %idxprom29, !dbg !6705
  %arraydecay31 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx30, i64 0, i64 0, !dbg !6705
  %arraydecay32 = getelementptr inbounds [4 x i8], [4 x i8]* %col_fallback, i64 0, i64 0, !dbg !6708
  call void @copy_v4_v4_char(i8* %arraydecay31, i8* %arraydecay32), !dbg !6709
  br label %if.end33

if.end33:                                         ; preds = %if.else28, %if.end23
  br label %for.inc34, !dbg !6710

for.inc34:                                        ; preds = %if.end33
  %49 = load i32, i32* %i, align 4, !dbg !6711
  %inc = add nsw i32 %49, 1, !dbg !6711
  store i32 %inc, i32* %i, align 4, !dbg !6711
  br label %for.cond12, !dbg !6712, !llvm.loop !6713

for.end35:                                        ; preds = %for.cond12
  ret void, !dbg !6715
}

; Function Attrs: noinline nounwind uwtable
define dso_local [3 x float]* @BKE_editmesh_vertexCos_get(%struct.BMEditMesh* %em, %struct.Scene* %scene, i32* %r_numVerts) #0 !dbg !6716 {
entry:
  %em.addr = alloca %struct.BMEditMesh*, align 8
  %scene.addr = alloca %struct.Scene*, align 8
  %r_numVerts.addr = alloca i32*, align 8
  %cage = alloca %struct.DerivedMesh*, align 8
  %final = alloca %struct.DerivedMesh*, align 8
  %visit_bitmap = alloca i32*, align 8
  %data = alloca %struct.CageUserData, align 8
  %cos_cage = alloca [3 x float]*, align 8
  store %struct.BMEditMesh* %em, %struct.BMEditMesh** %em.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em.addr, metadata !6721, metadata !DIExpression()), !dbg !6722
  store %struct.Scene* %scene, %struct.Scene** %scene.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene.addr, metadata !6723, metadata !DIExpression()), !dbg !6724
  store i32* %r_numVerts, i32** %r_numVerts.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %r_numVerts.addr, metadata !6725, metadata !DIExpression()), !dbg !6726
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %cage, metadata !6727, metadata !DIExpression()), !dbg !6728
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %final, metadata !6729, metadata !DIExpression()), !dbg !6730
  call void @llvm.dbg.declare(metadata i32** %visit_bitmap, metadata !6731, metadata !DIExpression()), !dbg !6732
  call void @llvm.dbg.declare(metadata %struct.CageUserData* %data, metadata !6733, metadata !DIExpression()), !dbg !6739
  call void @llvm.dbg.declare(metadata [3 x float]** %cos_cage, metadata !6740, metadata !DIExpression()), !dbg !6741
  %0 = load %struct.Scene*, %struct.Scene** %scene.addr, align 8, !dbg !6742
  %1 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !6743
  %ob = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %1, i32 0, i32 14, !dbg !6744
  %2 = load %struct.Object*, %struct.Object** %ob, align 8, !dbg !6744
  %3 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !6745
  %4 = load i64, i64* @CD_MASK_BAREMESH, align 8, !dbg !6746
  %call = call %struct.DerivedMesh* @editbmesh_get_derived_cage_and_final(%struct.Scene* %0, %struct.Object* %2, %struct.BMEditMesh* %3, %struct.DerivedMesh** %final, i64 %4), !dbg !6747
  store %struct.DerivedMesh* %call, %struct.DerivedMesh** %cage, align 8, !dbg !6748
  %5 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !6749
  %6 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !6750
  %bm = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %6, i32 0, i32 0, !dbg !6751
  %7 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !6751
  %totvert = getelementptr inbounds %struct.BMesh, %struct.BMesh* %7, i32 0, i32 0, !dbg !6752
  %8 = load i32, i32* %totvert, align 8, !dbg !6752
  %conv = sext i32 %8 to i64, !dbg !6750
  %mul = mul i64 12, %conv, !dbg !6753
  %call1 = call i8* %5(i64 %mul, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0)), !dbg !6749
  %9 = bitcast i8* %call1 to [3 x float]*, !dbg !6749
  store [3 x float]* %9, [3 x float]** %cos_cage, align 8, !dbg !6754
  %10 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !6755
  %11 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !6755
  %bm2 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %11, i32 0, i32 0, !dbg !6755
  %12 = load %struct.BMesh*, %struct.BMesh** %bm2, align 8, !dbg !6755
  %totvert3 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %12, i32 0, i32 0, !dbg !6755
  %13 = load i32, i32* %totvert3, align 8, !dbg !6755
  %shr = ashr i32 %13, 5, !dbg !6755
  %add = add nsw i32 %shr, 1, !dbg !6755
  %conv4 = sext i32 %add to i64, !dbg !6755
  %mul5 = mul i64 %conv4, 4, !dbg !6755
  %call6 = call i8* %10(i64 %mul5, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @__func__.BKE_editmesh_vertexCos_get, i64 0, i64 0)), !dbg !6755
  %14 = bitcast i8* %call6 to i32*, !dbg !6755
  store i32* %14, i32** %visit_bitmap, align 8, !dbg !6756
  %15 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !6757
  %bm7 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %15, i32 0, i32 0, !dbg !6758
  %16 = load %struct.BMesh*, %struct.BMesh** %bm7, align 8, !dbg !6758
  %totvert8 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %16, i32 0, i32 0, !dbg !6759
  %17 = load i32, i32* %totvert8, align 8, !dbg !6759
  %totvert9 = getelementptr inbounds %struct.CageUserData, %struct.CageUserData* %data, i32 0, i32 0, !dbg !6760
  store i32 %17, i32* %totvert9, align 8, !dbg !6761
  %18 = load [3 x float]*, [3 x float]** %cos_cage, align 8, !dbg !6762
  %cos_cage10 = getelementptr inbounds %struct.CageUserData, %struct.CageUserData* %data, i32 0, i32 1, !dbg !6763
  store [3 x float]* %18, [3 x float]** %cos_cage10, align 8, !dbg !6764
  %19 = load i32*, i32** %visit_bitmap, align 8, !dbg !6765
  %visit_bitmap11 = getelementptr inbounds %struct.CageUserData, %struct.CageUserData* %data, i32 0, i32 2, !dbg !6766
  store i32* %19, i32** %visit_bitmap11, align 8, !dbg !6767
  %20 = load %struct.DerivedMesh*, %struct.DerivedMesh** %cage, align 8, !dbg !6768
  %foreachMappedVert = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %20, i32 0, i32 71, !dbg !6769
  %21 = load void (%struct.DerivedMesh*, void (i8*, i32, float*, float*, i16*)*, i8*, i32)*, void (%struct.DerivedMesh*, void (i8*, i32, float*, float*, i16*)*, i8*, i32)** %foreachMappedVert, align 8, !dbg !6769
  %22 = load %struct.DerivedMesh*, %struct.DerivedMesh** %cage, align 8, !dbg !6770
  %23 = bitcast %struct.CageUserData* %data to i8*, !dbg !6771
  call void %21(%struct.DerivedMesh* %22, void (i8*, i32, float*, float*, i16*)* @cage_mapped_verts_callback, i8* %23, i32 0), !dbg !6768
  %24 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !6772
  %25 = load i32*, i32** %visit_bitmap, align 8, !dbg !6773
  %26 = bitcast i32* %25 to i8*, !dbg !6773
  call void %24(i8* %26), !dbg !6772
  %27 = load i32*, i32** %r_numVerts.addr, align 8, !dbg !6774
  %tobool = icmp ne i32* %27, null, !dbg !6774
  br i1 %tobool, label %if.then, label %if.end, !dbg !6776

if.then:                                          ; preds = %entry
  %28 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em.addr, align 8, !dbg !6777
  %bm12 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %28, i32 0, i32 0, !dbg !6779
  %29 = load %struct.BMesh*, %struct.BMesh** %bm12, align 8, !dbg !6779
  %totvert13 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %29, i32 0, i32 0, !dbg !6780
  %30 = load i32, i32* %totvert13, align 8, !dbg !6780
  %31 = load i32*, i32** %r_numVerts.addr, align 8, !dbg !6781
  store i32 %30, i32* %31, align 4, !dbg !6782
  br label %if.end, !dbg !6783

if.end:                                           ; preds = %if.then, %entry
  %32 = load [3 x float]*, [3 x float]** %cos_cage, align 8, !dbg !6784
  ret [3 x float]* %32, !dbg !6785
}

declare dso_local %struct.DerivedMesh* @editbmesh_get_derived_cage_and_final(%struct.Scene*, %struct.Object*, %struct.BMEditMesh*, %struct.DerivedMesh**, i64) #2

; Function Attrs: noinline nounwind uwtable
define internal void @cage_mapped_verts_callback(i8* %userData, i32 %index, float* %co, float* %UNUSED_no_f, i16* %UNUSED_no_s) #0 !dbg !6786 {
entry:
  %userData.addr = alloca i8*, align 8
  %index.addr = alloca i32, align 4
  %co.addr = alloca float*, align 8
  %UNUSED_no_f.addr = alloca float*, align 8
  %UNUSED_no_s.addr = alloca i16*, align 8
  %data = alloca %struct.CageUserData*, align 8
  store i8* %userData, i8** %userData.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userData.addr, metadata !6787, metadata !DIExpression()), !dbg !6788
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !6789, metadata !DIExpression()), !dbg !6790
  store float* %co, float** %co.addr, align 8
  call void @llvm.dbg.declare(metadata float** %co.addr, metadata !6791, metadata !DIExpression()), !dbg !6792
  store float* %UNUSED_no_f, float** %UNUSED_no_f.addr, align 8
  call void @llvm.dbg.declare(metadata float** %UNUSED_no_f.addr, metadata !6793, metadata !DIExpression()), !dbg !6794
  store i16* %UNUSED_no_s, i16** %UNUSED_no_s.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %UNUSED_no_s.addr, metadata !6795, metadata !DIExpression()), !dbg !6796
  call void @llvm.dbg.declare(metadata %struct.CageUserData** %data, metadata !6797, metadata !DIExpression()), !dbg !6799
  %0 = load i8*, i8** %userData.addr, align 8, !dbg !6800
  %1 = bitcast i8* %0 to %struct.CageUserData*, !dbg !6800
  store %struct.CageUserData* %1, %struct.CageUserData** %data, align 8, !dbg !6799
  %2 = load i32, i32* %index.addr, align 4, !dbg !6801
  %cmp = icmp sge i32 %2, 0, !dbg !6803
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !6804

land.lhs.true:                                    ; preds = %entry
  %3 = load i32, i32* %index.addr, align 4, !dbg !6805
  %4 = load %struct.CageUserData*, %struct.CageUserData** %data, align 8, !dbg !6806
  %totvert = getelementptr inbounds %struct.CageUserData, %struct.CageUserData* %4, i32 0, i32 0, !dbg !6807
  %5 = load i32, i32* %totvert, align 8, !dbg !6807
  %cmp1 = icmp slt i32 %3, %5, !dbg !6808
  br i1 %cmp1, label %land.lhs.true2, label %if.end, !dbg !6809

land.lhs.true2:                                   ; preds = %land.lhs.true
  %6 = load %struct.CageUserData*, %struct.CageUserData** %data, align 8, !dbg !6810
  %visit_bitmap = getelementptr inbounds %struct.CageUserData, %struct.CageUserData* %6, i32 0, i32 2, !dbg !6810
  %7 = load i32*, i32** %visit_bitmap, align 8, !dbg !6810
  %8 = load i32, i32* %index.addr, align 4, !dbg !6810
  %shr = ashr i32 %8, 5, !dbg !6810
  %idxprom = sext i32 %shr to i64, !dbg !6810
  %arrayidx = getelementptr inbounds i32, i32* %7, i64 %idxprom, !dbg !6810
  %9 = load i32, i32* %arrayidx, align 4, !dbg !6810
  %10 = load i32, i32* %index.addr, align 4, !dbg !6810
  %and = and i32 %10, 31, !dbg !6810
  %shl = shl i32 1, %and, !dbg !6810
  %and3 = and i32 %9, %shl, !dbg !6810
  %tobool = icmp ne i32 %and3, 0, !dbg !6810
  br i1 %tobool, label %if.end, label %if.then, !dbg !6811

if.then:                                          ; preds = %land.lhs.true2
  %11 = load i32, i32* %index.addr, align 4, !dbg !6812
  %and4 = and i32 %11, 31, !dbg !6812
  %shl5 = shl i32 1, %and4, !dbg !6812
  %12 = load %struct.CageUserData*, %struct.CageUserData** %data, align 8, !dbg !6812
  %visit_bitmap6 = getelementptr inbounds %struct.CageUserData, %struct.CageUserData* %12, i32 0, i32 2, !dbg !6812
  %13 = load i32*, i32** %visit_bitmap6, align 8, !dbg !6812
  %14 = load i32, i32* %index.addr, align 4, !dbg !6812
  %shr7 = ashr i32 %14, 5, !dbg !6812
  %idxprom8 = sext i32 %shr7 to i64, !dbg !6812
  %arrayidx9 = getelementptr inbounds i32, i32* %13, i64 %idxprom8, !dbg !6812
  %15 = load i32, i32* %arrayidx9, align 4, !dbg !6812
  %or = or i32 %15, %shl5, !dbg !6812
  store i32 %or, i32* %arrayidx9, align 4, !dbg !6812
  %16 = load %struct.CageUserData*, %struct.CageUserData** %data, align 8, !dbg !6814
  %cos_cage = getelementptr inbounds %struct.CageUserData, %struct.CageUserData* %16, i32 0, i32 1, !dbg !6815
  %17 = load [3 x float]*, [3 x float]** %cos_cage, align 8, !dbg !6815
  %18 = load i32, i32* %index.addr, align 4, !dbg !6816
  %idxprom10 = sext i32 %18 to i64, !dbg !6814
  %arrayidx11 = getelementptr inbounds [3 x float], [3 x float]* %17, i64 %idxprom10, !dbg !6814
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx11, i64 0, i64 0, !dbg !6814
  %19 = load float*, float** %co.addr, align 8, !dbg !6817
  call void @copy_v3_v3(float* %arraydecay, float* %19), !dbg !6818
  br label %if.end, !dbg !6819

if.end:                                           ; preds = %if.then, %land.lhs.true2, %land.lhs.true, %entry
  ret void, !dbg !6820
}

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v3_v3(float* %r, float* %a) #0 !dbg !6821 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !6825, metadata !DIExpression()), !dbg !6826
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !6827, metadata !DIExpression()), !dbg !6828
  %0 = load float*, float** %a.addr, align 8, !dbg !6829
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !6829
  %1 = load float, float* %arrayidx, align 4, !dbg !6829
  %2 = load float*, float** %r.addr, align 8, !dbg !6830
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !6830
  store float %1, float* %arrayidx1, align 4, !dbg !6831
  %3 = load float*, float** %a.addr, align 8, !dbg !6832
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !6832
  %4 = load float, float* %arrayidx2, align 4, !dbg !6832
  %5 = load float*, float** %r.addr, align 8, !dbg !6833
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !6833
  store float %4, float* %arrayidx3, align 4, !dbg !6834
  %6 = load float*, float** %a.addr, align 8, !dbg !6835
  %arrayidx4 = getelementptr inbounds float, float* %6, i64 2, !dbg !6835
  %7 = load float, float* %arrayidx4, align 4, !dbg !6835
  %8 = load float*, float** %r.addr, align 8, !dbg !6836
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !6836
  store float %7, float* %arrayidx5, align 4, !dbg !6837
  ret void, !dbg !6838
}

declare dso_local void @minmax_v3v3_v3(float*, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @zero_v3(float* %r) #0 !dbg !6839 {
entry:
  %r.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !6842, metadata !DIExpression()), !dbg !6843
  %0 = load float*, float** %r.addr, align 8, !dbg !6844
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !6844
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !6845
  %1 = load float*, float** %r.addr, align 8, !dbg !6846
  %arrayidx1 = getelementptr inbounds float, float* %1, i64 1, !dbg !6846
  store float 0.000000e+00, float* %arrayidx1, align 4, !dbg !6847
  %2 = load float*, float** %r.addr, align 8, !dbg !6848
  %arrayidx2 = getelementptr inbounds float, float* %2, i64 2, !dbg !6848
  store float 0.000000e+00, float* %arrayidx2, align 4, !dbg !6849
  ret void, !dbg !6850
}

; Function Attrs: noinline nounwind uwtable
define internal void @bmvert_to_mvert(%struct.BMesh* %bm, %struct.BMVert* %ev, %struct.MVert* %r_vert) #0 !dbg !6851 {
entry:
  %bm.addr = alloca %struct.BMesh*, align 8
  %ev.addr = alloca %struct.BMVert*, align 8
  %r_vert.addr = alloca %struct.MVert*, align 8
  %f = alloca float*, align 8
  store %struct.BMesh* %bm, %struct.BMesh** %bm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm.addr, metadata !6854, metadata !DIExpression()), !dbg !6855
  store %struct.BMVert* %ev, %struct.BMVert** %ev.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMVert** %ev.addr, metadata !6856, metadata !DIExpression()), !dbg !6857
  store %struct.MVert* %r_vert, %struct.MVert** %r_vert.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MVert** %r_vert.addr, metadata !6858, metadata !DIExpression()), !dbg !6859
  call void @llvm.dbg.declare(metadata float** %f, metadata !6860, metadata !DIExpression()), !dbg !6861
  %0 = load %struct.MVert*, %struct.MVert** %r_vert.addr, align 8, !dbg !6862
  %co = getelementptr inbounds %struct.MVert, %struct.MVert* %0, i32 0, i32 0, !dbg !6863
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !6862
  %1 = load %struct.BMVert*, %struct.BMVert** %ev.addr, align 8, !dbg !6864
  %co1 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %1, i32 0, i32 2, !dbg !6865
  %arraydecay2 = getelementptr inbounds [3 x float], [3 x float]* %co1, i64 0, i64 0, !dbg !6864
  call void @copy_v3_v3(float* %arraydecay, float* %arraydecay2), !dbg !6866
  %2 = load %struct.MVert*, %struct.MVert** %r_vert.addr, align 8, !dbg !6867
  %no = getelementptr inbounds %struct.MVert, %struct.MVert* %2, i32 0, i32 1, !dbg !6868
  %arraydecay3 = getelementptr inbounds [3 x i16], [3 x i16]* %no, i64 0, i64 0, !dbg !6867
  %3 = load %struct.BMVert*, %struct.BMVert** %ev.addr, align 8, !dbg !6869
  %no4 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %3, i32 0, i32 3, !dbg !6870
  %arraydecay5 = getelementptr inbounds [3 x float], [3 x float]* %no4, i64 0, i64 0, !dbg !6869
  call void @normal_float_to_short_v3(i16* %arraydecay3, float* %arraydecay5), !dbg !6871
  %4 = load %struct.BMVert*, %struct.BMVert** %ev.addr, align 8, !dbg !6872
  %call = call zeroext i8 @BM_vert_flag_to_mflag(%struct.BMVert* %4), !dbg !6873
  %5 = load %struct.MVert*, %struct.MVert** %r_vert.addr, align 8, !dbg !6874
  %flag = getelementptr inbounds %struct.MVert, %struct.MVert* %5, i32 0, i32 2, !dbg !6875
  store i8 %call, i8* %flag, align 2, !dbg !6876
  %6 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !6877
  %vdata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %6, i32 0, i32 24, !dbg !6879
  %7 = load %struct.BMVert*, %struct.BMVert** %ev.addr, align 8, !dbg !6880
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %7, i32 0, i32 0, !dbg !6881
  %data = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head, i32 0, i32 0, !dbg !6882
  %8 = load i8*, i8** %data, align 8, !dbg !6882
  %call6 = call i8* @CustomData_bmesh_get(%struct.CustomData* %vdata, i8* %8, i32 29), !dbg !6883
  %9 = bitcast i8* %call6 to float*, !dbg !6883
  store float* %9, float** %f, align 8, !dbg !6884
  %tobool = icmp ne float* %9, null, !dbg !6884
  br i1 %tobool, label %if.then, label %if.end, !dbg !6885

if.then:                                          ; preds = %entry
  %10 = load float*, float** %f, align 8, !dbg !6886
  %11 = load float, float* %10, align 4, !dbg !6888
  %mul = fmul float %11, 2.550000e+02, !dbg !6889
  %conv = fptoui float %mul to i8, !dbg !6890
  %12 = load %struct.MVert*, %struct.MVert** %r_vert.addr, align 8, !dbg !6891
  %bweight = getelementptr inbounds %struct.MVert, %struct.MVert* %12, i32 0, i32 3, !dbg !6892
  store i8 %conv, i8* %bweight, align 1, !dbg !6893
  br label %if.end, !dbg !6894

if.end:                                           ; preds = %if.then, %entry
  ret void, !dbg !6895
}

; Function Attrs: noinline nounwind uwtable
define internal void @normal_float_to_short_v3(i16* %out, float* %in) #0 !dbg !6896 {
entry:
  %out.addr = alloca i16*, align 8
  %in.addr = alloca float*, align 8
  store i16* %out, i16** %out.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %out.addr, metadata !6900, metadata !DIExpression()), !dbg !6901
  store float* %in, float** %in.addr, align 8
  call void @llvm.dbg.declare(metadata float** %in.addr, metadata !6902, metadata !DIExpression()), !dbg !6903
  %0 = load float*, float** %in.addr, align 8, !dbg !6904
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !6904
  %1 = load float, float* %arrayidx, align 4, !dbg !6904
  %mul = fmul float %1, 3.276700e+04, !dbg !6905
  %conv = fptosi float %mul to i16, !dbg !6906
  %2 = load i16*, i16** %out.addr, align 8, !dbg !6907
  %arrayidx1 = getelementptr inbounds i16, i16* %2, i64 0, !dbg !6907
  store i16 %conv, i16* %arrayidx1, align 2, !dbg !6908
  %3 = load float*, float** %in.addr, align 8, !dbg !6909
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !6909
  %4 = load float, float* %arrayidx2, align 4, !dbg !6909
  %mul3 = fmul float %4, 3.276700e+04, !dbg !6910
  %conv4 = fptosi float %mul3 to i16, !dbg !6911
  %5 = load i16*, i16** %out.addr, align 8, !dbg !6912
  %arrayidx5 = getelementptr inbounds i16, i16* %5, i64 1, !dbg !6912
  store i16 %conv4, i16* %arrayidx5, align 2, !dbg !6913
  %6 = load float*, float** %in.addr, align 8, !dbg !6914
  %arrayidx6 = getelementptr inbounds float, float* %6, i64 2, !dbg !6914
  %7 = load float, float* %arrayidx6, align 4, !dbg !6914
  %mul7 = fmul float %7, 3.276700e+04, !dbg !6915
  %conv8 = fptosi float %mul7 to i16, !dbg !6916
  %8 = load i16*, i16** %out.addr, align 8, !dbg !6917
  %arrayidx9 = getelementptr inbounds i16, i16* %8, i64 2, !dbg !6917
  store i16 %conv8, i16* %arrayidx9, align 2, !dbg !6918
  ret void, !dbg !6919
}

declare dso_local zeroext i8 @BM_vert_flag_to_mflag(%struct.BMVert*) #2

declare dso_local i8* @CustomData_bmesh_get(%struct.CustomData*, i8*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @emDM_ensureVertNormals(%struct.EditDerivedBMesh* %bmdm) #0 !dbg !6920 {
entry:
  %bmdm.addr = alloca %struct.EditDerivedBMesh*, align 8
  %bm = alloca %struct.BMesh*, align 8
  %vertexCos2 = alloca [3 x float]*, align 8
  %polyNos = alloca [3 x float]*, align 8
  %vertexNos3 = alloca [3 x float]*, align 8
  store %struct.EditDerivedBMesh* %bmdm, %struct.EditDerivedBMesh** %bmdm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EditDerivedBMesh** %bmdm.addr, metadata !6921, metadata !DIExpression()), !dbg !6922
  %0 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm.addr, align 8, !dbg !6923
  %vertexCos = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %0, i32 0, i32 2, !dbg !6925
  %1 = load [3 x float]*, [3 x float]** %vertexCos, align 8, !dbg !6925
  %tobool = icmp ne [3 x float]* %1, null, !dbg !6923
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !6926

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm.addr, align 8, !dbg !6927
  %vertexNos = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %2, i32 0, i32 3, !dbg !6928
  %3 = load [3 x float]*, [3 x float]** %vertexNos, align 8, !dbg !6928
  %cmp = icmp eq [3 x float]* %3, null, !dbg !6929
  br i1 %cmp, label %if.then, label %if.end, !dbg !6930

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm, metadata !6931, metadata !DIExpression()), !dbg !6933
  %4 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm.addr, align 8, !dbg !6934
  %em = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %4, i32 0, i32 1, !dbg !6935
  %5 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !6935
  %bm1 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %5, i32 0, i32 0, !dbg !6936
  %6 = load %struct.BMesh*, %struct.BMesh** %bm1, align 8, !dbg !6936
  store %struct.BMesh* %6, %struct.BMesh** %bm, align 8, !dbg !6933
  call void @llvm.dbg.declare(metadata [3 x float]** %vertexCos2, metadata !6937, metadata !DIExpression()), !dbg !6938
  call void @llvm.dbg.declare(metadata [3 x float]** %polyNos, metadata !6939, metadata !DIExpression()), !dbg !6940
  call void @llvm.dbg.declare(metadata [3 x float]** %vertexNos3, metadata !6941, metadata !DIExpression()), !dbg !6942
  %7 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm.addr, align 8, !dbg !6943
  call void @emDM_ensurePolyNormals(%struct.EditDerivedBMesh* %7), !dbg !6944
  %8 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !6945
  call void @BM_mesh_elem_index_ensure(%struct.BMesh* %8, i8 zeroext 8), !dbg !6946
  %9 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm.addr, align 8, !dbg !6947
  %polyNos4 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %9, i32 0, i32 4, !dbg !6948
  %10 = load [3 x float]*, [3 x float]** %polyNos4, align 8, !dbg !6948
  store [3 x float]* %10, [3 x float]** %polyNos, align 8, !dbg !6949
  %11 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm.addr, align 8, !dbg !6950
  %vertexCos5 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %11, i32 0, i32 2, !dbg !6951
  %12 = load [3 x float]*, [3 x float]** %vertexCos5, align 8, !dbg !6951
  store [3 x float]* %12, [3 x float]** %vertexCos2, align 8, !dbg !6952
  %13 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !6953
  %14 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !6954
  %totvert = getelementptr inbounds %struct.BMesh, %struct.BMesh* %14, i32 0, i32 0, !dbg !6955
  %15 = load i32, i32* %totvert, align 8, !dbg !6955
  %conv = sext i32 %15 to i64, !dbg !6954
  %mul = mul i64 12, %conv, !dbg !6956
  %call = call i8* %13(i64 %mul, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.emDM_ensureVertNormals, i64 0, i64 0)), !dbg !6953
  %16 = bitcast i8* %call to [3 x float]*, !dbg !6953
  store [3 x float]* %16, [3 x float]** %vertexNos3, align 8, !dbg !6957
  %17 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !6958
  %18 = load [3 x float]*, [3 x float]** %polyNos, align 8, !dbg !6959
  %19 = load [3 x float]*, [3 x float]** %vertexCos2, align 8, !dbg !6960
  %20 = load [3 x float]*, [3 x float]** %vertexNos3, align 8, !dbg !6961
  call void @BM_verts_calc_normal_vcos(%struct.BMesh* %17, [3 x float]* %18, [3 x float]* %19, [3 x float]* %20), !dbg !6962
  %21 = load [3 x float]*, [3 x float]** %vertexNos3, align 8, !dbg !6963
  %22 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm.addr, align 8, !dbg !6964
  %vertexNos6 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %22, i32 0, i32 3, !dbg !6965
  store [3 x float]* %21, [3 x float]** %vertexNos6, align 8, !dbg !6966
  br label %if.end, !dbg !6967

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  ret void, !dbg !6968
}

declare dso_local void @BM_mesh_elem_index_ensure(%struct.BMesh*, i8 zeroext) #2

declare dso_local void @BM_verts_calc_normal_vcos(%struct.BMesh*, [3 x float]*, [3 x float]*, [3 x float]*) #2

declare dso_local signext i16 @BM_edge_flag_to_mflag(%struct.BMEdge*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @_bm_elem_index_get(%struct.BMHeader* %head) #0 !dbg !6969 {
entry:
  %head.addr = alloca %struct.BMHeader*, align 8
  store %struct.BMHeader* %head, %struct.BMHeader** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMHeader** %head.addr, metadata !6975, metadata !DIExpression()), !dbg !6976
  %0 = load %struct.BMHeader*, %struct.BMHeader** %head.addr, align 8, !dbg !6977
  %index = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %0, i32 0, i32 1, !dbg !6978
  %1 = load i32, i32* %index, align 8, !dbg !6978
  ret i32 %1, !dbg !6979
}

declare dso_local zeroext i8 @BM_face_flag_to_mflag(%struct.BMFace*) #2

declare dso_local i32 @test_index_face(%struct.MFace*, %struct.CustomData*, i32, i32) #2

declare dso_local i8* @DM_get_tessface_data_layer(%struct.DerivedMesh*, i32) #2

declare dso_local i32 @CustomData_get_layer_index(%struct.CustomData*, i32) #2

declare dso_local i32 @CustomData_sizeof(i32) #2

declare dso_local void @DM_add_tessface_layer(%struct.DerivedMesh*, i32, i32, i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v2_v2(float* %r, float* %a) #0 !dbg !6980 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !6981, metadata !DIExpression()), !dbg !6982
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !6983, metadata !DIExpression()), !dbg !6984
  %0 = load float*, float** %a.addr, align 8, !dbg !6985
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !6985
  %1 = load float, float* %arrayidx, align 4, !dbg !6985
  %2 = load float*, float** %r.addr, align 8, !dbg !6986
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !6986
  store float %1, float* %arrayidx1, align 4, !dbg !6987
  %3 = load float*, float** %a.addr, align 8, !dbg !6988
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !6988
  %4 = load float, float* %arrayidx2, align 4, !dbg !6988
  %5 = load float*, float** %r.addr, align 8, !dbg !6989
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !6989
  store float %4, float* %arrayidx3, align 4, !dbg !6990
  ret void, !dbg !6991
}

declare dso_local void @DM_add_loop_layer(%struct.DerivedMesh*, i32, i32, i8*) #2

declare dso_local void @BM_loops_calc_normal_vcos(%struct.BMesh*, [3 x float]*, [3 x float]*, [3 x float]*, float, [3 x float]*) #2

declare dso_local i8* @DM_get_loop_data_layer(%struct.DerivedMesh*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @emDM_ensurePolyCenters(%struct.EditDerivedBMesh* %bmdm) #0 !dbg !6992 {
entry:
  %bmdm.addr = alloca %struct.EditDerivedBMesh*, align 8
  %bm = alloca %struct.BMesh*, align 8
  %polyCos2 = alloca [3 x float]*, align 8
  %efa = alloca %struct.BMFace*, align 8
  %fiter = alloca %struct.BMIter, align 8
  %i = alloca i32, align 4
  %vertexCos4 = alloca [3 x float]*, align 8
  store %struct.EditDerivedBMesh* %bmdm, %struct.EditDerivedBMesh** %bmdm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.EditDerivedBMesh** %bmdm.addr, metadata !6993, metadata !DIExpression()), !dbg !6994
  %0 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm.addr, align 8, !dbg !6995
  %polyCos = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %0, i32 0, i32 5, !dbg !6997
  %1 = load [3 x float]*, [3 x float]** %polyCos, align 8, !dbg !6997
  %cmp = icmp eq [3 x float]* %1, null, !dbg !6998
  br i1 %cmp, label %if.then, label %if.end21, !dbg !6999

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm, metadata !7000, metadata !DIExpression()), !dbg !7002
  %2 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm.addr, align 8, !dbg !7003
  %em = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %2, i32 0, i32 1, !dbg !7004
  %3 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7004
  %bm1 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %3, i32 0, i32 0, !dbg !7005
  %4 = load %struct.BMesh*, %struct.BMesh** %bm1, align 8, !dbg !7005
  store %struct.BMesh* %4, %struct.BMesh** %bm, align 8, !dbg !7002
  call void @llvm.dbg.declare(metadata [3 x float]** %polyCos2, metadata !7006, metadata !DIExpression()), !dbg !7007
  call void @llvm.dbg.declare(metadata %struct.BMFace** %efa, metadata !7008, metadata !DIExpression()), !dbg !7009
  call void @llvm.dbg.declare(metadata %struct.BMIter* %fiter, metadata !7010, metadata !DIExpression()), !dbg !7011
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7012, metadata !DIExpression()), !dbg !7013
  %5 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !7014
  %6 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !7015
  %totface = getelementptr inbounds %struct.BMesh, %struct.BMesh* %6, i32 0, i32 3, !dbg !7016
  %7 = load i32, i32* %totface, align 4, !dbg !7016
  %conv = sext i32 %7 to i64, !dbg !7015
  %mul = mul i64 12, %conv, !dbg !7017
  %call = call i8* %5(i64 %mul, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @__func__.emDM_ensurePolyCenters, i64 0, i64 0)), !dbg !7014
  %8 = bitcast i8* %call to [3 x float]*, !dbg !7014
  store [3 x float]* %8, [3 x float]** %polyCos2, align 8, !dbg !7018
  %9 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm.addr, align 8, !dbg !7019
  %vertexCos = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %9, i32 0, i32 2, !dbg !7021
  %10 = load [3 x float]*, [3 x float]** %vertexCos, align 8, !dbg !7021
  %tobool = icmp ne [3 x float]* %10, null, !dbg !7019
  br i1 %tobool, label %if.then3, label %if.else, !dbg !7022

if.then3:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata [3 x float]** %vertexCos4, metadata !7023, metadata !DIExpression()), !dbg !7025
  %11 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm.addr, align 8, !dbg !7026
  %vertexCos5 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %11, i32 0, i32 2, !dbg !7027
  %12 = load [3 x float]*, [3 x float]** %vertexCos5, align 8, !dbg !7027
  store [3 x float]* %12, [3 x float]** %vertexCos4, align 8, !dbg !7028
  %13 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !7029
  %call6 = call i8* @BM_iter_new(%struct.BMIter* %fiter, %struct.BMesh* %13, i8 zeroext 3, i8* null), !dbg !7029
  %14 = bitcast i8* %call6 to %struct.BMFace*, !dbg !7029
  store %struct.BMFace* %14, %struct.BMFace** %efa, align 8, !dbg !7029
  store i32 0, i32* %i, align 4, !dbg !7029
  br label %for.cond, !dbg !7029

for.cond:                                         ; preds = %for.inc, %if.then3
  %15 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !7031
  %tobool7 = icmp ne %struct.BMFace* %15, null, !dbg !7029
  br i1 %tobool7, label %for.body, label %for.end, !dbg !7029

for.body:                                         ; preds = %for.cond
  %16 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !7033
  %17 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !7035
  %18 = load [3 x float]*, [3 x float]** %polyCos2, align 8, !dbg !7036
  %19 = load i32, i32* %i, align 4, !dbg !7037
  %idxprom = sext i32 %19 to i64, !dbg !7036
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %18, i64 %idxprom, !dbg !7036
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !7036
  %20 = load [3 x float]*, [3 x float]** %vertexCos4, align 8, !dbg !7038
  call void @BM_face_calc_center_mean_vcos(%struct.BMesh* %16, %struct.BMFace* %17, float* %arraydecay, [3 x float]* %20), !dbg !7039
  br label %for.inc, !dbg !7040

for.inc:                                          ; preds = %for.body
  %call8 = call i8* @BM_iter_step(%struct.BMIter* %fiter), !dbg !7031
  %21 = bitcast i8* %call8 to %struct.BMFace*, !dbg !7031
  store %struct.BMFace* %21, %struct.BMFace** %efa, align 8, !dbg !7031
  %22 = load i32, i32* %i, align 4, !dbg !7031
  %inc = add nsw i32 %22, 1, !dbg !7031
  store i32 %inc, i32* %i, align 4, !dbg !7031
  br label %for.cond, !dbg !7031, !llvm.loop !7041

for.end:                                          ; preds = %for.cond
  br label %if.end, !dbg !7043

if.else:                                          ; preds = %if.then
  %23 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !7044
  %call9 = call i8* @BM_iter_new(%struct.BMIter* %fiter, %struct.BMesh* %23, i8 zeroext 3, i8* null), !dbg !7044
  %24 = bitcast i8* %call9 to %struct.BMFace*, !dbg !7044
  store %struct.BMFace* %24, %struct.BMFace** %efa, align 8, !dbg !7044
  store i32 0, i32* %i, align 4, !dbg !7044
  br label %for.cond10, !dbg !7044

for.cond10:                                       ; preds = %for.inc16, %if.else
  %25 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !7047
  %tobool11 = icmp ne %struct.BMFace* %25, null, !dbg !7044
  br i1 %tobool11, label %for.body12, label %for.end19, !dbg !7044

for.body12:                                       ; preds = %for.cond10
  %26 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !7049
  %27 = load [3 x float]*, [3 x float]** %polyCos2, align 8, !dbg !7051
  %28 = load i32, i32* %i, align 4, !dbg !7052
  %idxprom13 = sext i32 %28 to i64, !dbg !7051
  %arrayidx14 = getelementptr inbounds [3 x float], [3 x float]* %27, i64 %idxprom13, !dbg !7051
  %arraydecay15 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx14, i64 0, i64 0, !dbg !7051
  call void @BM_face_calc_center_mean(%struct.BMFace* %26, float* %arraydecay15), !dbg !7053
  br label %for.inc16, !dbg !7054

for.inc16:                                        ; preds = %for.body12
  %call17 = call i8* @BM_iter_step(%struct.BMIter* %fiter), !dbg !7047
  %29 = bitcast i8* %call17 to %struct.BMFace*, !dbg !7047
  store %struct.BMFace* %29, %struct.BMFace** %efa, align 8, !dbg !7047
  %30 = load i32, i32* %i, align 4, !dbg !7047
  %inc18 = add nsw i32 %30, 1, !dbg !7047
  store i32 %inc18, i32* %i, align 4, !dbg !7047
  br label %for.cond10, !dbg !7047, !llvm.loop !7055

for.end19:                                        ; preds = %for.cond10
  br label %if.end

if.end:                                           ; preds = %for.end19, %for.end
  %31 = load [3 x float]*, [3 x float]** %polyCos2, align 8, !dbg !7057
  %32 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm.addr, align 8, !dbg !7058
  %polyCos20 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %32, i32 0, i32 5, !dbg !7059
  store [3 x float]* %31, [3 x float]** %polyCos20, align 8, !dbg !7060
  br label %if.end21, !dbg !7061

if.end21:                                         ; preds = %if.end, %entry
  ret void, !dbg !7062
}

declare dso_local void @BM_face_calc_center_mean_vcos(%struct.BMesh*, %struct.BMFace*, float*, [3 x float]*) #2

declare dso_local void @BM_face_calc_center_mean(%struct.BMFace*, float*) #2

declare dso_local void @glBegin(i32) #2

declare dso_local void @glVertex3fv(float*) #2

declare dso_local void @glEnd() #2

declare dso_local zeroext i8 @glIsEnabled(i32) #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare dso_local void @glDisable(i32) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head, i8 zeroext %hflag) #0 !dbg !7063 {
entry:
  %head.addr = alloca %struct.BMHeader*, align 8
  %hflag.addr = alloca i8, align 1
  store %struct.BMHeader* %head, %struct.BMHeader** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMHeader** %head.addr, metadata !7066, metadata !DIExpression()), !dbg !7067
  store i8 %hflag, i8* %hflag.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %hflag.addr, metadata !7068, metadata !DIExpression()), !dbg !7069
  %0 = load %struct.BMHeader*, %struct.BMHeader** %head.addr, align 8, !dbg !7070
  %hflag1 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %0, i32 0, i32 3, !dbg !7071
  %1 = load i8, i8* %hflag1, align 1, !dbg !7071
  %conv = zext i8 %1 to i32, !dbg !7070
  %2 = load i8, i8* %hflag.addr, align 1, !dbg !7072
  %conv2 = zext i8 %2 to i32, !dbg !7072
  %and = and i32 %conv, %conv2, !dbg !7073
  %conv3 = trunc i32 %and to i8, !dbg !7070
  ret i8 %conv3, !dbg !7074
}

declare dso_local void @glEnable(i32) #2

declare dso_local void @glPolygonStipple(i8*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @bmdm_get_tri_colpreview(%struct.BMLoop** %ls, %struct.MLoopCol** %lcol, [4 x i8]* %color_vert_array) #0 !dbg !7075 {
entry:
  %ls.addr = alloca %struct.BMLoop**, align 8
  %lcol.addr = alloca %struct.MLoopCol**, align 8
  %color_vert_array.addr = alloca [4 x i8]*, align 8
  store %struct.BMLoop** %ls, %struct.BMLoop*** %ls.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMLoop*** %ls.addr, metadata !7079, metadata !DIExpression()), !dbg !7080
  store %struct.MLoopCol** %lcol, %struct.MLoopCol*** %lcol.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MLoopCol*** %lcol.addr, metadata !7081, metadata !DIExpression()), !dbg !7082
  store [4 x i8]* %color_vert_array, [4 x i8]** %color_vert_array.addr, align 8
  call void @llvm.dbg.declare(metadata [4 x i8]** %color_vert_array.addr, metadata !7083, metadata !DIExpression()), !dbg !7084
  %0 = load [4 x i8]*, [4 x i8]** %color_vert_array.addr, align 8, !dbg !7085
  %1 = load %struct.BMLoop**, %struct.BMLoop*** %ls.addr, align 8, !dbg !7086
  %arrayidx = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %1, i64 0, !dbg !7086
  %2 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx, align 8, !dbg !7086
  %v = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %2, i32 0, i32 1, !dbg !7086
  %3 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !7086
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %3, i32 0, i32 0, !dbg !7086
  %call = call i32 @_bm_elem_index_get(%struct.BMHeader* %head), !dbg !7086
  %idxprom = sext i32 %call to i64, !dbg !7085
  %arrayidx1 = getelementptr inbounds [4 x i8], [4 x i8]* %0, i64 %idxprom, !dbg !7085
  %arraydecay = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx1, i64 0, i64 0, !dbg !7085
  %4 = bitcast i8* %arraydecay to %struct.MLoopCol*, !dbg !7087
  %5 = load %struct.MLoopCol**, %struct.MLoopCol*** %lcol.addr, align 8, !dbg !7088
  %arrayidx2 = getelementptr inbounds %struct.MLoopCol*, %struct.MLoopCol** %5, i64 0, !dbg !7088
  store %struct.MLoopCol* %4, %struct.MLoopCol** %arrayidx2, align 8, !dbg !7089
  %6 = load [4 x i8]*, [4 x i8]** %color_vert_array.addr, align 8, !dbg !7090
  %7 = load %struct.BMLoop**, %struct.BMLoop*** %ls.addr, align 8, !dbg !7091
  %arrayidx3 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %7, i64 1, !dbg !7091
  %8 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx3, align 8, !dbg !7091
  %v4 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %8, i32 0, i32 1, !dbg !7091
  %9 = load %struct.BMVert*, %struct.BMVert** %v4, align 8, !dbg !7091
  %head5 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %9, i32 0, i32 0, !dbg !7091
  %call6 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head5), !dbg !7091
  %idxprom7 = sext i32 %call6 to i64, !dbg !7090
  %arrayidx8 = getelementptr inbounds [4 x i8], [4 x i8]* %6, i64 %idxprom7, !dbg !7090
  %arraydecay9 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx8, i64 0, i64 0, !dbg !7090
  %10 = bitcast i8* %arraydecay9 to %struct.MLoopCol*, !dbg !7092
  %11 = load %struct.MLoopCol**, %struct.MLoopCol*** %lcol.addr, align 8, !dbg !7093
  %arrayidx10 = getelementptr inbounds %struct.MLoopCol*, %struct.MLoopCol** %11, i64 1, !dbg !7093
  store %struct.MLoopCol* %10, %struct.MLoopCol** %arrayidx10, align 8, !dbg !7094
  %12 = load [4 x i8]*, [4 x i8]** %color_vert_array.addr, align 8, !dbg !7095
  %13 = load %struct.BMLoop**, %struct.BMLoop*** %ls.addr, align 8, !dbg !7096
  %arrayidx11 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %13, i64 2, !dbg !7096
  %14 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx11, align 8, !dbg !7096
  %v12 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %14, i32 0, i32 1, !dbg !7096
  %15 = load %struct.BMVert*, %struct.BMVert** %v12, align 8, !dbg !7096
  %head13 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %15, i32 0, i32 0, !dbg !7096
  %call14 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head13), !dbg !7096
  %idxprom15 = sext i32 %call14 to i64, !dbg !7095
  %arrayidx16 = getelementptr inbounds [4 x i8], [4 x i8]* %12, i64 %idxprom15, !dbg !7095
  %arraydecay17 = getelementptr inbounds [4 x i8], [4 x i8]* %arrayidx16, i64 0, i64 0, !dbg !7095
  %16 = bitcast i8* %arraydecay17 to %struct.MLoopCol*, !dbg !7097
  %17 = load %struct.MLoopCol**, %struct.MLoopCol*** %lcol.addr, align 8, !dbg !7098
  %arrayidx18 = getelementptr inbounds %struct.MLoopCol*, %struct.MLoopCol** %17, i64 2, !dbg !7098
  store %struct.MLoopCol* %16, %struct.MLoopCol** %arrayidx18, align 8, !dbg !7099
  ret void, !dbg !7100
}

declare dso_local void @glColor3ubv(i8*) #2

declare dso_local void @glShadeModel(i32) #2

declare dso_local void @glNormal3fv(float*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @emDM_drawFacesTex_common(%struct.DerivedMesh* %dm, i32 (%struct.MTFace*, i8, i32)* %drawParams, i32 (i8*, i32)* %drawParamsMapped, i32 (i8*, i32, i32)* %compareDrawOptions, i8* %userData) #0 !dbg !7101 {
entry:
  %dm.addr = alloca %struct.DerivedMesh*, align 8
  %drawParams.addr = alloca i32 (%struct.MTFace*, i8, i32)*, align 8
  %drawParamsMapped.addr = alloca i32 (i8*, i32)*, align 8
  %compareDrawOptions.addr = alloca i32 (i8*, i32, i32)*, align 8
  %userData.addr = alloca i8*, align 8
  %bmdm = alloca %struct.EditDerivedBMesh*, align 8
  %em = alloca %struct.BMEditMesh*, align 8
  %bm = alloca %struct.BMesh*, align 8
  %looptris = alloca [3 x %struct.BMLoop*]*, align 8
  %efa = alloca %struct.BMFace*, align 8
  %lnors = alloca [3 x float]*, align 8
  %luv = alloca [3 x %struct.MLoopUV*], align 16
  %dummyluv = alloca %struct.MLoopUV, align 4
  %lcol = alloca [3 x %struct.MLoopCol*], align 16
  %cd_loop_uv_offset = alloca i32, align 4
  %cd_loop_color_offset = alloca i32, align 4
  %cd_poly_tex_offset = alloca i32, align 4
  %color_vert_array = alloca [4 x i8]*, align 8
  %has_uv = alloca i8, align 1
  %has_vcol_preview = alloca i8, align 1
  %has_vcol = alloca i8, align 1
  %has_vcol_any = alloca i8, align 1
  %i = alloca i32, align 4
  %vertexCos27 = alloca [3 x float]*, align 8
  %vertexNos = alloca [3 x float]*, align 8
  %polyNos = alloca [3 x float]*, align 8
  %ltri = alloca %struct.BMLoop**, align 8
  %tp = alloca %struct.MTexPoly*, align 8
  %mtf = alloca %struct.MTFace, align 8
  %drawSmooth = alloca i32, align 4
  %draw_option = alloca i32, align 4
  %ltri246 = alloca %struct.BMLoop**, align 8
  %tp250 = alloca %struct.MTexPoly*, align 8
  %mtf263 = alloca %struct.MTFace, align 8
  %drawSmooth264 = alloca i32, align 4
  %draw_option275 = alloca i32, align 4
  store %struct.DerivedMesh* %dm, %struct.DerivedMesh** %dm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DerivedMesh** %dm.addr, metadata !7104, metadata !DIExpression()), !dbg !7105
  store i32 (%struct.MTFace*, i8, i32)* %drawParams, i32 (%struct.MTFace*, i8, i32)** %drawParams.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (%struct.MTFace*, i8, i32)** %drawParams.addr, metadata !7106, metadata !DIExpression()), !dbg !7107
  store i32 (i8*, i32)* %drawParamsMapped, i32 (i8*, i32)** %drawParamsMapped.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i32)** %drawParamsMapped.addr, metadata !7108, metadata !DIExpression()), !dbg !7109
  store i32 (i8*, i32, i32)* %compareDrawOptions, i32 (i8*, i32, i32)** %compareDrawOptions.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (i8*, i32, i32)** %compareDrawOptions.addr, metadata !7110, metadata !DIExpression()), !dbg !7111
  store i8* %userData, i8** %userData.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userData.addr, metadata !7112, metadata !DIExpression()), !dbg !7113
  call void @llvm.dbg.declare(metadata %struct.EditDerivedBMesh** %bmdm, metadata !7114, metadata !DIExpression()), !dbg !7115
  %0 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7116
  %1 = bitcast %struct.DerivedMesh* %0 to %struct.EditDerivedBMesh*, !dbg !7117
  store %struct.EditDerivedBMesh* %1, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !7115
  call void @llvm.dbg.declare(metadata %struct.BMEditMesh** %em, metadata !7118, metadata !DIExpression()), !dbg !7119
  %2 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !7120
  %em1 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %2, i32 0, i32 1, !dbg !7121
  %3 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em1, align 8, !dbg !7121
  store %struct.BMEditMesh* %3, %struct.BMEditMesh** %em, align 8, !dbg !7119
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm, metadata !7122, metadata !DIExpression()), !dbg !7123
  %4 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7124
  %bm2 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %4, i32 0, i32 0, !dbg !7125
  %5 = load %struct.BMesh*, %struct.BMesh** %bm2, align 8, !dbg !7125
  store %struct.BMesh* %5, %struct.BMesh** %bm, align 8, !dbg !7123
  call void @llvm.dbg.declare(metadata [3 x %struct.BMLoop*]** %looptris, metadata !7126, metadata !DIExpression()), !dbg !7127
  %6 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7128
  %looptris3 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %6, i32 0, i32 3, !dbg !7129
  %7 = load [3 x %struct.BMLoop*]*, [3 x %struct.BMLoop*]** %looptris3, align 8, !dbg !7129
  store [3 x %struct.BMLoop*]* %7, [3 x %struct.BMLoop*]** %looptris, align 8, !dbg !7127
  call void @llvm.dbg.declare(metadata %struct.BMFace** %efa, metadata !7130, metadata !DIExpression()), !dbg !7131
  call void @llvm.dbg.declare(metadata [3 x float]** %lnors, metadata !7132, metadata !DIExpression()), !dbg !7133
  %8 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7134
  %getLoopDataArray = getelementptr inbounds %struct.DerivedMesh, %struct.DerivedMesh* %8, i32 0, i32 53, !dbg !7135
  %9 = load i8* (%struct.DerivedMesh*, i32)*, i8* (%struct.DerivedMesh*, i32)** %getLoopDataArray, align 8, !dbg !7135
  %10 = load %struct.DerivedMesh*, %struct.DerivedMesh** %dm.addr, align 8, !dbg !7136
  %call = call i8* %9(%struct.DerivedMesh* %10, i32 8), !dbg !7134
  %11 = bitcast i8* %call to [3 x float]*, !dbg !7134
  store [3 x float]* %11, [3 x float]** %lnors, align 8, !dbg !7133
  call void @llvm.dbg.declare(metadata [3 x %struct.MLoopUV*]* %luv, metadata !7137, metadata !DIExpression()), !dbg !7139
  call void @llvm.dbg.declare(metadata %struct.MLoopUV* %dummyluv, metadata !7140, metadata !DIExpression()), !dbg !7141
  %12 = bitcast %struct.MLoopUV* %dummyluv to i8*, !dbg !7141
  call void @llvm.memset.p0i8.i64(i8* align 4 %12, i8 0, i64 12, i1 false), !dbg !7141
  call void @llvm.dbg.declare(metadata [3 x %struct.MLoopCol*]* %lcol, metadata !7142, metadata !DIExpression()), !dbg !7143
  %13 = bitcast [3 x %struct.MLoopCol*]* %lcol to i8*, !dbg !7143
  call void @llvm.memset.p0i8.i64(i8* align 16 %13, i8 0, i64 24, i1 false), !dbg !7143
  call void @llvm.dbg.declare(metadata i32* %cd_loop_uv_offset, metadata !7144, metadata !DIExpression()), !dbg !7145
  %14 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !7146
  %ldata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %14, i32 0, i32 26, !dbg !7147
  %call4 = call i32 @CustomData_get_offset(%struct.CustomData* %ldata, i32 16), !dbg !7148
  store i32 %call4, i32* %cd_loop_uv_offset, align 4, !dbg !7145
  call void @llvm.dbg.declare(metadata i32* %cd_loop_color_offset, metadata !7149, metadata !DIExpression()), !dbg !7150
  %15 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !7151
  %ldata5 = getelementptr inbounds %struct.BMesh, %struct.BMesh* %15, i32 0, i32 26, !dbg !7152
  %call6 = call i32 @CustomData_get_offset(%struct.CustomData* %ldata5, i32 17), !dbg !7153
  store i32 %call6, i32* %cd_loop_color_offset, align 4, !dbg !7150
  call void @llvm.dbg.declare(metadata i32* %cd_poly_tex_offset, metadata !7154, metadata !DIExpression()), !dbg !7155
  %16 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !7156
  %pdata = getelementptr inbounds %struct.BMesh, %struct.BMesh* %16, i32 0, i32 27, !dbg !7157
  %call7 = call i32 @CustomData_get_offset(%struct.CustomData* %pdata, i32 15), !dbg !7158
  store i32 %call7, i32* %cd_poly_tex_offset, align 4, !dbg !7155
  call void @llvm.dbg.declare(metadata [4 x i8]** %color_vert_array, metadata !7159, metadata !DIExpression()), !dbg !7160
  %17 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7161
  %derivedVertColor = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %17, i32 0, i32 8, !dbg !7162
  %18 = load [4 x i8]*, [4 x i8]** %derivedVertColor, align 8, !dbg !7162
  store [4 x i8]* %18, [4 x i8]** %color_vert_array, align 8, !dbg !7160
  call void @llvm.dbg.declare(metadata i8* %has_uv, metadata !7163, metadata !DIExpression()), !dbg !7164
  %19 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !7165
  %cmp = icmp ne i32 %19, -1, !dbg !7166
  %conv = zext i1 %cmp to i32, !dbg !7166
  %conv8 = trunc i32 %conv to i8, !dbg !7167
  store i8 %conv8, i8* %has_uv, align 1, !dbg !7164
  call void @llvm.dbg.declare(metadata i8* %has_vcol_preview, metadata !7168, metadata !DIExpression()), !dbg !7169
  %20 = load [4 x i8]*, [4 x i8]** %color_vert_array, align 8, !dbg !7170
  %cmp9 = icmp ne [4 x i8]* %20, null, !dbg !7171
  %conv10 = zext i1 %cmp9 to i32, !dbg !7171
  %conv11 = trunc i32 %conv10 to i8, !dbg !7172
  store i8 %conv11, i8* %has_vcol_preview, align 1, !dbg !7169
  call void @llvm.dbg.declare(metadata i8* %has_vcol, metadata !7173, metadata !DIExpression()), !dbg !7174
  %21 = load i32, i32* %cd_loop_color_offset, align 4, !dbg !7175
  %cmp12 = icmp ne i32 %21, -1, !dbg !7176
  br i1 %cmp12, label %land.rhs, label %land.end, !dbg !7177

land.rhs:                                         ; preds = %entry
  %22 = load i8, i8* %has_vcol_preview, align 1, !dbg !7178
  %conv14 = zext i8 %22 to i32, !dbg !7178
  %cmp15 = icmp eq i32 %conv14, 0, !dbg !7179
  br label %land.end

land.end:                                         ; preds = %land.rhs, %entry
  %23 = phi i1 [ false, %entry ], [ %cmp15, %land.rhs ], !dbg !7180
  %land.ext = zext i1 %23 to i32, !dbg !7177
  %conv17 = trunc i32 %land.ext to i8, !dbg !7181
  store i8 %conv17, i8* %has_vcol, align 1, !dbg !7174
  call void @llvm.dbg.declare(metadata i8* %has_vcol_any, metadata !7182, metadata !DIExpression()), !dbg !7183
  %24 = load i8, i8* %has_vcol_preview, align 1, !dbg !7184
  %conv18 = zext i8 %24 to i32, !dbg !7184
  %tobool = icmp ne i32 %conv18, 0, !dbg !7184
  br i1 %tobool, label %lor.end, label %lor.rhs, !dbg !7185

lor.rhs:                                          ; preds = %land.end
  %25 = load i8, i8* %has_vcol, align 1, !dbg !7186
  %conv19 = zext i8 %25 to i32, !dbg !7186
  %tobool20 = icmp ne i32 %conv19, 0, !dbg !7185
  br label %lor.end, !dbg !7185

lor.end:                                          ; preds = %lor.rhs, %land.end
  %26 = phi i1 [ true, %land.end ], [ %tobool20, %lor.rhs ]
  %lor.ext = zext i1 %26 to i32, !dbg !7185
  %conv21 = trunc i32 %lor.ext to i8, !dbg !7187
  store i8 %conv21, i8* %has_vcol_any, align 1, !dbg !7183
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7188, metadata !DIExpression()), !dbg !7189
  %27 = load i32 (i8*, i32, i32)*, i32 (i8*, i32, i32)** %compareDrawOptions.addr, align 8, !dbg !7190
  %arrayidx = getelementptr inbounds [3 x %struct.MLoopUV*], [3 x %struct.MLoopUV*]* %luv, i64 0, i64 2, !dbg !7191
  store %struct.MLoopUV* %dummyluv, %struct.MLoopUV** %arrayidx, align 16, !dbg !7192
  %arrayidx22 = getelementptr inbounds [3 x %struct.MLoopUV*], [3 x %struct.MLoopUV*]* %luv, i64 0, i64 1, !dbg !7193
  store %struct.MLoopUV* %dummyluv, %struct.MLoopUV** %arrayidx22, align 8, !dbg !7194
  %arrayidx23 = getelementptr inbounds [3 x %struct.MLoopUV*], [3 x %struct.MLoopUV*]* %luv, i64 0, i64 0, !dbg !7195
  store %struct.MLoopUV* %dummyluv, %struct.MLoopUV** %arrayidx23, align 16, !dbg !7196
  call void @glShadeModel(i32 7425), !dbg !7197
  %28 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !7198
  call void @BM_mesh_elem_index_ensure(%struct.BMesh* %28, i8 zeroext 8), !dbg !7199
  %29 = load i8, i8* %has_vcol_preview, align 1, !dbg !7200
  %tobool24 = icmp ne i8 %29, 0, !dbg !7200
  br i1 %tobool24, label %if.then, label %if.end, !dbg !7202

if.then:                                          ; preds = %lor.end
  %30 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !7203
  call void @BM_mesh_elem_index_ensure(%struct.BMesh* %30, i8 zeroext 1), !dbg !7205
  br label %if.end, !dbg !7206

if.end:                                           ; preds = %if.then, %lor.end
  %31 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !7207
  %vertexCos = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %31, i32 0, i32 2, !dbg !7209
  %32 = load [3 x float]*, [3 x float]** %vertexCos, align 8, !dbg !7209
  %tobool25 = icmp ne [3 x float]* %32, null, !dbg !7207
  br i1 %tobool25, label %if.then26, label %if.else237, !dbg !7210

if.then26:                                        ; preds = %if.end
  call void @llvm.dbg.declare(metadata [3 x float]** %vertexCos27, metadata !7211, metadata !DIExpression()), !dbg !7213
  %33 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !7214
  %vertexCos28 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %33, i32 0, i32 2, !dbg !7215
  %34 = load [3 x float]*, [3 x float]** %vertexCos28, align 8, !dbg !7215
  store [3 x float]* %34, [3 x float]** %vertexCos27, align 8, !dbg !7213
  call void @llvm.dbg.declare(metadata [3 x float]** %vertexNos, metadata !7216, metadata !DIExpression()), !dbg !7217
  call void @llvm.dbg.declare(metadata [3 x float]** %polyNos, metadata !7218, metadata !DIExpression()), !dbg !7219
  %35 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !7220
  call void @emDM_ensureVertNormals(%struct.EditDerivedBMesh* %35), !dbg !7221
  %36 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !7222
  call void @emDM_ensurePolyNormals(%struct.EditDerivedBMesh* %36), !dbg !7223
  %37 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !7224
  %vertexNos29 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %37, i32 0, i32 3, !dbg !7225
  %38 = load [3 x float]*, [3 x float]** %vertexNos29, align 8, !dbg !7225
  store [3 x float]* %38, [3 x float]** %vertexNos, align 8, !dbg !7226
  %39 = load %struct.EditDerivedBMesh*, %struct.EditDerivedBMesh** %bmdm, align 8, !dbg !7227
  %polyNos30 = getelementptr inbounds %struct.EditDerivedBMesh, %struct.EditDerivedBMesh* %39, i32 0, i32 4, !dbg !7228
  %40 = load [3 x float]*, [3 x float]** %polyNos30, align 8, !dbg !7228
  store [3 x float]* %40, [3 x float]** %polyNos, align 8, !dbg !7229
  %41 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !7230
  %42 = load [3 x float]*, [3 x float]** %lnors, align 8, !dbg !7231
  %tobool31 = icmp ne [3 x float]* %42, null, !dbg !7231
  %43 = zext i1 %tobool31 to i64, !dbg !7231
  %cond = select i1 %tobool31, i32 5, i32 1, !dbg !7231
  %conv32 = trunc i32 %cond to i8, !dbg !7231
  call void @BM_mesh_elem_index_ensure(%struct.BMesh* %41, i8 zeroext %conv32), !dbg !7232
  store i32 0, i32* %i, align 4, !dbg !7233
  br label %for.cond, !dbg !7235

for.cond:                                         ; preds = %for.inc, %if.then26
  %44 = load i32, i32* %i, align 4, !dbg !7236
  %45 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7238
  %tottri = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %45, i32 0, i32 4, !dbg !7239
  %46 = load i32, i32* %tottri, align 8, !dbg !7239
  %cmp33 = icmp slt i32 %44, %46, !dbg !7240
  br i1 %cmp33, label %for.body, label %for.end, !dbg !7241

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.BMLoop*** %ltri, metadata !7242, metadata !DIExpression()), !dbg !7244
  %47 = load [3 x %struct.BMLoop*]*, [3 x %struct.BMLoop*]** %looptris, align 8, !dbg !7245
  %48 = load i32, i32* %i, align 4, !dbg !7246
  %idxprom = sext i32 %48 to i64, !dbg !7245
  %arrayidx35 = getelementptr inbounds [3 x %struct.BMLoop*], [3 x %struct.BMLoop*]* %47, i64 %idxprom, !dbg !7245
  %arraydecay = getelementptr inbounds [3 x %struct.BMLoop*], [3 x %struct.BMLoop*]* %arrayidx35, i64 0, i64 0, !dbg !7245
  store %struct.BMLoop** %arraydecay, %struct.BMLoop*** %ltri, align 8, !dbg !7244
  call void @llvm.dbg.declare(metadata %struct.MTexPoly** %tp, metadata !7247, metadata !DIExpression()), !dbg !7248
  %49 = load i32, i32* %cd_poly_tex_offset, align 4, !dbg !7249
  %cmp36 = icmp ne i32 %49, -1, !dbg !7250
  br i1 %cmp36, label %cond.true, label %cond.false, !dbg !7251

cond.true:                                        ; preds = %for.body
  %50 = load %struct.BMLoop**, %struct.BMLoop*** %ltri, align 8, !dbg !7252
  %arrayidx38 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %50, i64 0, !dbg !7252
  %51 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx38, align 8, !dbg !7252
  %f = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %51, i32 0, i32 3, !dbg !7252
  %52 = load %struct.BMFace*, %struct.BMFace** %f, align 8, !dbg !7252
  %head = getelementptr inbounds %struct.BMFace, %struct.BMFace* %52, i32 0, i32 0, !dbg !7252
  %data = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head, i32 0, i32 0, !dbg !7252
  %53 = load i8*, i8** %data, align 8, !dbg !7252
  %54 = load i32, i32* %cd_poly_tex_offset, align 4, !dbg !7252
  %idx.ext = sext i32 %54 to i64, !dbg !7252
  %add.ptr = getelementptr inbounds i8, i8* %53, i64 %idx.ext, !dbg !7252
  br label %cond.end, !dbg !7251

cond.false:                                       ; preds = %for.body
  br label %cond.end, !dbg !7251

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond39 = phi i8* [ %add.ptr, %cond.true ], [ null, %cond.false ], !dbg !7251
  %55 = bitcast i8* %cond39 to %struct.MTexPoly*, !dbg !7251
  store %struct.MTexPoly* %55, %struct.MTexPoly** %tp, align 8, !dbg !7248
  call void @llvm.dbg.declare(metadata %struct.MTFace* %mtf, metadata !7253, metadata !DIExpression()), !dbg !7254
  %56 = bitcast %struct.MTFace* %mtf to i8*, !dbg !7254
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 48, i1 false), !dbg !7254
  call void @llvm.dbg.declare(metadata i32* %drawSmooth, metadata !7255, metadata !DIExpression()), !dbg !7256
  %57 = load [3 x float]*, [3 x float]** %lnors, align 8, !dbg !7257
  %tobool40 = icmp ne [3 x float]* %57, null, !dbg !7257
  br i1 %tobool40, label %lor.end48, label %lor.rhs41, !dbg !7258

lor.rhs41:                                        ; preds = %cond.end
  %58 = load %struct.BMLoop**, %struct.BMLoop*** %ltri, align 8, !dbg !7259
  %arrayidx42 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %58, i64 0, !dbg !7259
  %59 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx42, align 8, !dbg !7259
  %f43 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %59, i32 0, i32 3, !dbg !7259
  %60 = load %struct.BMFace*, %struct.BMFace** %f43, align 8, !dbg !7259
  %head44 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %60, i32 0, i32 0, !dbg !7259
  %call45 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head44, i8 zeroext 8), !dbg !7259
  %conv46 = zext i8 %call45 to i32, !dbg !7259
  %tobool47 = icmp ne i32 %conv46, 0, !dbg !7258
  br label %lor.end48, !dbg !7258

lor.end48:                                        ; preds = %lor.rhs41, %cond.end
  %61 = phi i1 [ true, %cond.end ], [ %tobool47, %lor.rhs41 ]
  %lor.ext49 = zext i1 %61 to i32, !dbg !7258
  store i32 %lor.ext49, i32* %drawSmooth, align 4, !dbg !7256
  call void @llvm.dbg.declare(metadata i32* %draw_option, metadata !7260, metadata !DIExpression()), !dbg !7261
  %62 = load %struct.BMLoop**, %struct.BMLoop*** %ltri, align 8, !dbg !7262
  %arrayidx50 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %62, i64 0, !dbg !7262
  %63 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx50, align 8, !dbg !7262
  %f51 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %63, i32 0, i32 3, !dbg !7263
  %64 = load %struct.BMFace*, %struct.BMFace** %f51, align 8, !dbg !7263
  store %struct.BMFace* %64, %struct.BMFace** %efa, align 8, !dbg !7264
  %65 = load i32, i32* %cd_poly_tex_offset, align 4, !dbg !7265
  %cmp52 = icmp ne i32 %65, -1, !dbg !7267
  br i1 %cmp52, label %if.then54, label %if.end60, !dbg !7268

if.then54:                                        ; preds = %lor.end48
  %66 = load %struct.MTexPoly*, %struct.MTexPoly** %tp, align 8, !dbg !7269
  %tpage = getelementptr inbounds %struct.MTexPoly, %struct.MTexPoly* %66, i32 0, i32 0, !dbg !7269
  %67 = load %struct.Image*, %struct.Image** %tpage, align 8, !dbg !7269
  %tpage55 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %mtf, i32 0, i32 1, !dbg !7269
  store %struct.Image* %67, %struct.Image** %tpage55, align 8, !dbg !7269
  %68 = load %struct.MTexPoly*, %struct.MTexPoly** %tp, align 8, !dbg !7269
  %flag = getelementptr inbounds %struct.MTexPoly, %struct.MTexPoly* %68, i32 0, i32 1, !dbg !7269
  %69 = load i8, i8* %flag, align 8, !dbg !7269
  %flag56 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %mtf, i32 0, i32 2, !dbg !7269
  store i8 %69, i8* %flag56, align 8, !dbg !7269
  %70 = load %struct.MTexPoly*, %struct.MTexPoly** %tp, align 8, !dbg !7269
  %transp = getelementptr inbounds %struct.MTexPoly, %struct.MTexPoly* %70, i32 0, i32 2, !dbg !7269
  %71 = load i8, i8* %transp, align 1, !dbg !7269
  %transp57 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %mtf, i32 0, i32 3, !dbg !7269
  store i8 %71, i8* %transp57, align 1, !dbg !7269
  %72 = load %struct.MTexPoly*, %struct.MTexPoly** %tp, align 8, !dbg !7269
  %mode = getelementptr inbounds %struct.MTexPoly, %struct.MTexPoly* %72, i32 0, i32 3, !dbg !7269
  %73 = load i16, i16* %mode, align 2, !dbg !7269
  %mode58 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %mtf, i32 0, i32 4, !dbg !7269
  store i16 %73, i16* %mode58, align 2, !dbg !7269
  %74 = load %struct.MTexPoly*, %struct.MTexPoly** %tp, align 8, !dbg !7269
  %tile = getelementptr inbounds %struct.MTexPoly, %struct.MTexPoly* %74, i32 0, i32 4, !dbg !7269
  %75 = load i16, i16* %tile, align 4, !dbg !7269
  %tile59 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %mtf, i32 0, i32 5, !dbg !7269
  store i16 %75, i16* %tile59, align 4, !dbg !7269
  br label %if.end60, !dbg !7272

if.end60:                                         ; preds = %if.then54, %lor.end48
  %76 = load i32 (%struct.MTFace*, i8, i32)*, i32 (%struct.MTFace*, i8, i32)** %drawParams.addr, align 8, !dbg !7273
  %tobool61 = icmp ne i32 (%struct.MTFace*, i8, i32)* %76, null, !dbg !7273
  br i1 %tobool61, label %if.then62, label %if.else, !dbg !7275

if.then62:                                        ; preds = %if.end60
  %77 = load i32 (%struct.MTFace*, i8, i32)*, i32 (%struct.MTFace*, i8, i32)** %drawParams.addr, align 8, !dbg !7276
  %78 = load i8, i8* %has_vcol, align 1, !dbg !7277
  %79 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !7278
  %mat_nr = getelementptr inbounds %struct.BMFace, %struct.BMFace* %79, i32 0, i32 5, !dbg !7279
  %80 = load i16, i16* %mat_nr, align 8, !dbg !7279
  %conv63 = sext i16 %80 to i32, !dbg !7278
  %call64 = call i32 %77(%struct.MTFace* %mtf, i8 zeroext %78, i32 %conv63), !dbg !7276
  store i32 %call64, i32* %draw_option, align 4, !dbg !7280
  br label %if.end72, !dbg !7281

if.else:                                          ; preds = %if.end60
  %81 = load i32 (i8*, i32)*, i32 (i8*, i32)** %drawParamsMapped.addr, align 8, !dbg !7282
  %tobool65 = icmp ne i32 (i8*, i32)* %81, null, !dbg !7282
  br i1 %tobool65, label %if.then66, label %if.else70, !dbg !7284

if.then66:                                        ; preds = %if.else
  %82 = load i32 (i8*, i32)*, i32 (i8*, i32)** %drawParamsMapped.addr, align 8, !dbg !7285
  %83 = load i8*, i8** %userData.addr, align 8, !dbg !7286
  %84 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !7287
  %head67 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %84, i32 0, i32 0, !dbg !7287
  %call68 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head67), !dbg !7287
  %call69 = call i32 %82(i8* %83, i32 %call68), !dbg !7285
  store i32 %call69, i32* %draw_option, align 4, !dbg !7288
  br label %if.end71, !dbg !7289

if.else70:                                        ; preds = %if.else
  store i32 1, i32* %draw_option, align 4, !dbg !7290
  br label %if.end71

if.end71:                                         ; preds = %if.else70, %if.then66
  br label %if.end72

if.end72:                                         ; preds = %if.end71, %if.then62
  %85 = load i32, i32* %draw_option, align 4, !dbg !7291
  %cmp73 = icmp ne i32 %85, 0, !dbg !7293
  br i1 %cmp73, label %if.then75, label %if.end236, !dbg !7294

if.then75:                                        ; preds = %if.end72
  %86 = load i8, i8* %has_uv, align 1, !dbg !7295
  %tobool76 = icmp ne i8 %86, 0, !dbg !7295
  br i1 %tobool76, label %if.then77, label %if.end79, !dbg !7298

if.then77:                                        ; preds = %if.then75
  %87 = load %struct.BMLoop**, %struct.BMLoop*** %ltri, align 8, !dbg !7299
  %arraydecay78 = getelementptr inbounds [3 x %struct.MLoopUV*], [3 x %struct.MLoopUV*]* %luv, i64 0, i64 0, !dbg !7300
  %88 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !7301
  call void @bmdm_get_tri_uv(%struct.BMLoop** %87, %struct.MLoopUV** %arraydecay78, i32 %88), !dbg !7302
  br label %if.end79, !dbg !7302

if.end79:                                         ; preds = %if.then77, %if.then75
  %89 = load i8, i8* %has_vcol, align 1, !dbg !7303
  %tobool80 = icmp ne i8 %89, 0, !dbg !7303
  br i1 %tobool80, label %if.then81, label %if.else83, !dbg !7305

if.then81:                                        ; preds = %if.end79
  %90 = load %struct.BMLoop**, %struct.BMLoop*** %ltri, align 8, !dbg !7306
  %arraydecay82 = getelementptr inbounds [3 x %struct.MLoopCol*], [3 x %struct.MLoopCol*]* %lcol, i64 0, i64 0, !dbg !7307
  %91 = load i32, i32* %cd_loop_color_offset, align 4, !dbg !7308
  call void @bmdm_get_tri_col(%struct.BMLoop** %90, %struct.MLoopCol** %arraydecay82, i32 %91), !dbg !7309
  br label %if.end88, !dbg !7309

if.else83:                                        ; preds = %if.end79
  %92 = load i8, i8* %has_vcol_preview, align 1, !dbg !7310
  %tobool84 = icmp ne i8 %92, 0, !dbg !7310
  br i1 %tobool84, label %if.then85, label %if.end87, !dbg !7312

if.then85:                                        ; preds = %if.else83
  %93 = load %struct.BMLoop**, %struct.BMLoop*** %ltri, align 8, !dbg !7313
  %arraydecay86 = getelementptr inbounds [3 x %struct.MLoopCol*], [3 x %struct.MLoopCol*]* %lcol, i64 0, i64 0, !dbg !7314
  %94 = load [4 x i8]*, [4 x i8]** %color_vert_array, align 8, !dbg !7315
  call void @bmdm_get_tri_colpreview(%struct.BMLoop** %93, %struct.MLoopCol** %arraydecay86, [4 x i8]* %94), !dbg !7316
  br label %if.end87, !dbg !7316

if.end87:                                         ; preds = %if.then85, %if.else83
  br label %if.end88

if.end88:                                         ; preds = %if.end87, %if.then81
  call void @glBegin(i32 4), !dbg !7317
  %95 = load i32, i32* %drawSmooth, align 4, !dbg !7318
  %tobool89 = icmp ne i32 %95, 0, !dbg !7318
  br i1 %tobool89, label %if.else138, label %if.then90, !dbg !7320

if.then90:                                        ; preds = %if.end88
  %96 = load [3 x float]*, [3 x float]** %polyNos, align 8, !dbg !7321
  %97 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !7323
  %head91 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %97, i32 0, i32 0, !dbg !7323
  %call92 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head91), !dbg !7323
  %idxprom93 = sext i32 %call92 to i64, !dbg !7321
  %arrayidx94 = getelementptr inbounds [3 x float], [3 x float]* %96, i64 %idxprom93, !dbg !7321
  %arraydecay95 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx94, i64 0, i64 0, !dbg !7321
  call void @glNormal3fv(float* %arraydecay95), !dbg !7324
  %arrayidx96 = getelementptr inbounds [3 x %struct.MLoopUV*], [3 x %struct.MLoopUV*]* %luv, i64 0, i64 0, !dbg !7325
  %98 = load %struct.MLoopUV*, %struct.MLoopUV** %arrayidx96, align 16, !dbg !7325
  %uv = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %98, i32 0, i32 0, !dbg !7326
  %arraydecay97 = getelementptr inbounds [2 x float], [2 x float]* %uv, i64 0, i64 0, !dbg !7325
  call void @glTexCoord2fv(float* %arraydecay97), !dbg !7327
  %99 = load i8, i8* %has_vcol_any, align 1, !dbg !7328
  %tobool98 = icmp ne i8 %99, 0, !dbg !7328
  br i1 %tobool98, label %if.then99, label %if.end101, !dbg !7330

if.then99:                                        ; preds = %if.then90
  %arrayidx100 = getelementptr inbounds [3 x %struct.MLoopCol*], [3 x %struct.MLoopCol*]* %lcol, i64 0, i64 0, !dbg !7331
  %100 = load %struct.MLoopCol*, %struct.MLoopCol** %arrayidx100, align 16, !dbg !7331
  %r = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %100, i32 0, i32 0, !dbg !7332
  call void @glColor3ubv(i8* %r), !dbg !7333
  br label %if.end101, !dbg !7333

if.end101:                                        ; preds = %if.then99, %if.then90
  %101 = load [3 x float]*, [3 x float]** %vertexCos27, align 8, !dbg !7334
  %102 = load %struct.BMLoop**, %struct.BMLoop*** %ltri, align 8, !dbg !7335
  %arrayidx102 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %102, i64 0, !dbg !7335
  %103 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx102, align 8, !dbg !7335
  %v = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %103, i32 0, i32 1, !dbg !7335
  %104 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !7335
  %head103 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %104, i32 0, i32 0, !dbg !7335
  %call104 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head103), !dbg !7335
  %idxprom105 = sext i32 %call104 to i64, !dbg !7334
  %arrayidx106 = getelementptr inbounds [3 x float], [3 x float]* %101, i64 %idxprom105, !dbg !7334
  %arraydecay107 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx106, i64 0, i64 0, !dbg !7334
  call void @glVertex3fv(float* %arraydecay107), !dbg !7336
  %arrayidx108 = getelementptr inbounds [3 x %struct.MLoopUV*], [3 x %struct.MLoopUV*]* %luv, i64 0, i64 1, !dbg !7337
  %105 = load %struct.MLoopUV*, %struct.MLoopUV** %arrayidx108, align 8, !dbg !7337
  %uv109 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %105, i32 0, i32 0, !dbg !7338
  %arraydecay110 = getelementptr inbounds [2 x float], [2 x float]* %uv109, i64 0, i64 0, !dbg !7337
  call void @glTexCoord2fv(float* %arraydecay110), !dbg !7339
  %106 = load i8, i8* %has_vcol_any, align 1, !dbg !7340
  %tobool111 = icmp ne i8 %106, 0, !dbg !7340
  br i1 %tobool111, label %if.then112, label %if.end115, !dbg !7342

if.then112:                                       ; preds = %if.end101
  %arrayidx113 = getelementptr inbounds [3 x %struct.MLoopCol*], [3 x %struct.MLoopCol*]* %lcol, i64 0, i64 1, !dbg !7343
  %107 = load %struct.MLoopCol*, %struct.MLoopCol** %arrayidx113, align 8, !dbg !7343
  %r114 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %107, i32 0, i32 0, !dbg !7344
  call void @glColor3ubv(i8* %r114), !dbg !7345
  br label %if.end115, !dbg !7345

if.end115:                                        ; preds = %if.then112, %if.end101
  %108 = load [3 x float]*, [3 x float]** %vertexCos27, align 8, !dbg !7346
  %109 = load %struct.BMLoop**, %struct.BMLoop*** %ltri, align 8, !dbg !7347
  %arrayidx116 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %109, i64 1, !dbg !7347
  %110 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx116, align 8, !dbg !7347
  %v117 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %110, i32 0, i32 1, !dbg !7347
  %111 = load %struct.BMVert*, %struct.BMVert** %v117, align 8, !dbg !7347
  %head118 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %111, i32 0, i32 0, !dbg !7347
  %call119 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head118), !dbg !7347
  %idxprom120 = sext i32 %call119 to i64, !dbg !7346
  %arrayidx121 = getelementptr inbounds [3 x float], [3 x float]* %108, i64 %idxprom120, !dbg !7346
  %arraydecay122 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx121, i64 0, i64 0, !dbg !7346
  call void @glVertex3fv(float* %arraydecay122), !dbg !7348
  %arrayidx123 = getelementptr inbounds [3 x %struct.MLoopUV*], [3 x %struct.MLoopUV*]* %luv, i64 0, i64 2, !dbg !7349
  %112 = load %struct.MLoopUV*, %struct.MLoopUV** %arrayidx123, align 16, !dbg !7349
  %uv124 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %112, i32 0, i32 0, !dbg !7350
  %arraydecay125 = getelementptr inbounds [2 x float], [2 x float]* %uv124, i64 0, i64 0, !dbg !7349
  call void @glTexCoord2fv(float* %arraydecay125), !dbg !7351
  %113 = load i8, i8* %has_vcol_any, align 1, !dbg !7352
  %tobool126 = icmp ne i8 %113, 0, !dbg !7352
  br i1 %tobool126, label %if.then127, label %if.end130, !dbg !7354

if.then127:                                       ; preds = %if.end115
  %arrayidx128 = getelementptr inbounds [3 x %struct.MLoopCol*], [3 x %struct.MLoopCol*]* %lcol, i64 0, i64 2, !dbg !7355
  %114 = load %struct.MLoopCol*, %struct.MLoopCol** %arrayidx128, align 16, !dbg !7355
  %r129 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %114, i32 0, i32 0, !dbg !7356
  call void @glColor3ubv(i8* %r129), !dbg !7357
  br label %if.end130, !dbg !7357

if.end130:                                        ; preds = %if.then127, %if.end115
  %115 = load [3 x float]*, [3 x float]** %vertexCos27, align 8, !dbg !7358
  %116 = load %struct.BMLoop**, %struct.BMLoop*** %ltri, align 8, !dbg !7359
  %arrayidx131 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %116, i64 2, !dbg !7359
  %117 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx131, align 8, !dbg !7359
  %v132 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %117, i32 0, i32 1, !dbg !7359
  %118 = load %struct.BMVert*, %struct.BMVert** %v132, align 8, !dbg !7359
  %head133 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %118, i32 0, i32 0, !dbg !7359
  %call134 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head133), !dbg !7359
  %idxprom135 = sext i32 %call134 to i64, !dbg !7358
  %arrayidx136 = getelementptr inbounds [3 x float], [3 x float]* %115, i64 %idxprom135, !dbg !7358
  %arraydecay137 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx136, i64 0, i64 0, !dbg !7358
  call void @glVertex3fv(float* %arraydecay137), !dbg !7360
  br label %if.end235, !dbg !7361

if.else138:                                       ; preds = %if.end88
  %arrayidx139 = getelementptr inbounds [3 x %struct.MLoopUV*], [3 x %struct.MLoopUV*]* %luv, i64 0, i64 0, !dbg !7362
  %119 = load %struct.MLoopUV*, %struct.MLoopUV** %arrayidx139, align 16, !dbg !7362
  %uv140 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %119, i32 0, i32 0, !dbg !7364
  %arraydecay141 = getelementptr inbounds [2 x float], [2 x float]* %uv140, i64 0, i64 0, !dbg !7362
  call void @glTexCoord2fv(float* %arraydecay141), !dbg !7365
  %120 = load i8, i8* %has_vcol_any, align 1, !dbg !7366
  %tobool142 = icmp ne i8 %120, 0, !dbg !7366
  br i1 %tobool142, label %if.then143, label %if.end146, !dbg !7368

if.then143:                                       ; preds = %if.else138
  %arrayidx144 = getelementptr inbounds [3 x %struct.MLoopCol*], [3 x %struct.MLoopCol*]* %lcol, i64 0, i64 0, !dbg !7369
  %121 = load %struct.MLoopCol*, %struct.MLoopCol** %arrayidx144, align 16, !dbg !7369
  %r145 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %121, i32 0, i32 0, !dbg !7370
  call void @glColor3ubv(i8* %r145), !dbg !7371
  br label %if.end146, !dbg !7371

if.end146:                                        ; preds = %if.then143, %if.else138
  %122 = load [3 x float]*, [3 x float]** %lnors, align 8, !dbg !7372
  %tobool147 = icmp ne [3 x float]* %122, null, !dbg !7372
  br i1 %tobool147, label %if.then148, label %if.else155, !dbg !7374

if.then148:                                       ; preds = %if.end146
  %123 = load [3 x float]*, [3 x float]** %lnors, align 8, !dbg !7375
  %124 = load %struct.BMLoop**, %struct.BMLoop*** %ltri, align 8, !dbg !7376
  %arrayidx149 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %124, i64 0, !dbg !7376
  %125 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx149, align 8, !dbg !7376
  %head150 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %125, i32 0, i32 0, !dbg !7376
  %call151 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head150), !dbg !7376
  %idxprom152 = sext i32 %call151 to i64, !dbg !7375
  %arrayidx153 = getelementptr inbounds [3 x float], [3 x float]* %123, i64 %idxprom152, !dbg !7375
  %arraydecay154 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx153, i64 0, i64 0, !dbg !7375
  call void @glNormal3fv(float* %arraydecay154), !dbg !7377
  br label %if.end163, !dbg !7377

if.else155:                                       ; preds = %if.end146
  %126 = load [3 x float]*, [3 x float]** %vertexNos, align 8, !dbg !7378
  %127 = load %struct.BMLoop**, %struct.BMLoop*** %ltri, align 8, !dbg !7379
  %arrayidx156 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %127, i64 0, !dbg !7379
  %128 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx156, align 8, !dbg !7379
  %v157 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %128, i32 0, i32 1, !dbg !7379
  %129 = load %struct.BMVert*, %struct.BMVert** %v157, align 8, !dbg !7379
  %head158 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %129, i32 0, i32 0, !dbg !7379
  %call159 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head158), !dbg !7379
  %idxprom160 = sext i32 %call159 to i64, !dbg !7378
  %arrayidx161 = getelementptr inbounds [3 x float], [3 x float]* %126, i64 %idxprom160, !dbg !7378
  %arraydecay162 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx161, i64 0, i64 0, !dbg !7378
  call void @glNormal3fv(float* %arraydecay162), !dbg !7380
  br label %if.end163

if.end163:                                        ; preds = %if.else155, %if.then148
  %130 = load [3 x float]*, [3 x float]** %vertexCos27, align 8, !dbg !7381
  %131 = load %struct.BMLoop**, %struct.BMLoop*** %ltri, align 8, !dbg !7382
  %arrayidx164 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %131, i64 0, !dbg !7382
  %132 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx164, align 8, !dbg !7382
  %v165 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %132, i32 0, i32 1, !dbg !7382
  %133 = load %struct.BMVert*, %struct.BMVert** %v165, align 8, !dbg !7382
  %head166 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %133, i32 0, i32 0, !dbg !7382
  %call167 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head166), !dbg !7382
  %idxprom168 = sext i32 %call167 to i64, !dbg !7381
  %arrayidx169 = getelementptr inbounds [3 x float], [3 x float]* %130, i64 %idxprom168, !dbg !7381
  %arraydecay170 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx169, i64 0, i64 0, !dbg !7381
  call void @glVertex3fv(float* %arraydecay170), !dbg !7383
  %arrayidx171 = getelementptr inbounds [3 x %struct.MLoopUV*], [3 x %struct.MLoopUV*]* %luv, i64 0, i64 1, !dbg !7384
  %134 = load %struct.MLoopUV*, %struct.MLoopUV** %arrayidx171, align 8, !dbg !7384
  %uv172 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %134, i32 0, i32 0, !dbg !7385
  %arraydecay173 = getelementptr inbounds [2 x float], [2 x float]* %uv172, i64 0, i64 0, !dbg !7384
  call void @glTexCoord2fv(float* %arraydecay173), !dbg !7386
  %135 = load i8, i8* %has_vcol_any, align 1, !dbg !7387
  %tobool174 = icmp ne i8 %135, 0, !dbg !7387
  br i1 %tobool174, label %if.then175, label %if.end178, !dbg !7389

if.then175:                                       ; preds = %if.end163
  %arrayidx176 = getelementptr inbounds [3 x %struct.MLoopCol*], [3 x %struct.MLoopCol*]* %lcol, i64 0, i64 1, !dbg !7390
  %136 = load %struct.MLoopCol*, %struct.MLoopCol** %arrayidx176, align 8, !dbg !7390
  %r177 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %136, i32 0, i32 0, !dbg !7391
  call void @glColor3ubv(i8* %r177), !dbg !7392
  br label %if.end178, !dbg !7392

if.end178:                                        ; preds = %if.then175, %if.end163
  %137 = load [3 x float]*, [3 x float]** %lnors, align 8, !dbg !7393
  %tobool179 = icmp ne [3 x float]* %137, null, !dbg !7393
  br i1 %tobool179, label %if.then180, label %if.else187, !dbg !7395

if.then180:                                       ; preds = %if.end178
  %138 = load [3 x float]*, [3 x float]** %lnors, align 8, !dbg !7396
  %139 = load %struct.BMLoop**, %struct.BMLoop*** %ltri, align 8, !dbg !7397
  %arrayidx181 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %139, i64 1, !dbg !7397
  %140 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx181, align 8, !dbg !7397
  %head182 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %140, i32 0, i32 0, !dbg !7397
  %call183 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head182), !dbg !7397
  %idxprom184 = sext i32 %call183 to i64, !dbg !7396
  %arrayidx185 = getelementptr inbounds [3 x float], [3 x float]* %138, i64 %idxprom184, !dbg !7396
  %arraydecay186 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx185, i64 0, i64 0, !dbg !7396
  call void @glNormal3fv(float* %arraydecay186), !dbg !7398
  br label %if.end195, !dbg !7398

if.else187:                                       ; preds = %if.end178
  %141 = load [3 x float]*, [3 x float]** %vertexNos, align 8, !dbg !7399
  %142 = load %struct.BMLoop**, %struct.BMLoop*** %ltri, align 8, !dbg !7400
  %arrayidx188 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %142, i64 1, !dbg !7400
  %143 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx188, align 8, !dbg !7400
  %v189 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %143, i32 0, i32 1, !dbg !7400
  %144 = load %struct.BMVert*, %struct.BMVert** %v189, align 8, !dbg !7400
  %head190 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %144, i32 0, i32 0, !dbg !7400
  %call191 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head190), !dbg !7400
  %idxprom192 = sext i32 %call191 to i64, !dbg !7399
  %arrayidx193 = getelementptr inbounds [3 x float], [3 x float]* %141, i64 %idxprom192, !dbg !7399
  %arraydecay194 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx193, i64 0, i64 0, !dbg !7399
  call void @glNormal3fv(float* %arraydecay194), !dbg !7401
  br label %if.end195

if.end195:                                        ; preds = %if.else187, %if.then180
  %145 = load [3 x float]*, [3 x float]** %vertexCos27, align 8, !dbg !7402
  %146 = load %struct.BMLoop**, %struct.BMLoop*** %ltri, align 8, !dbg !7403
  %arrayidx196 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %146, i64 1, !dbg !7403
  %147 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx196, align 8, !dbg !7403
  %v197 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %147, i32 0, i32 1, !dbg !7403
  %148 = load %struct.BMVert*, %struct.BMVert** %v197, align 8, !dbg !7403
  %head198 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %148, i32 0, i32 0, !dbg !7403
  %call199 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head198), !dbg !7403
  %idxprom200 = sext i32 %call199 to i64, !dbg !7402
  %arrayidx201 = getelementptr inbounds [3 x float], [3 x float]* %145, i64 %idxprom200, !dbg !7402
  %arraydecay202 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx201, i64 0, i64 0, !dbg !7402
  call void @glVertex3fv(float* %arraydecay202), !dbg !7404
  %arrayidx203 = getelementptr inbounds [3 x %struct.MLoopUV*], [3 x %struct.MLoopUV*]* %luv, i64 0, i64 2, !dbg !7405
  %149 = load %struct.MLoopUV*, %struct.MLoopUV** %arrayidx203, align 16, !dbg !7405
  %uv204 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %149, i32 0, i32 0, !dbg !7406
  %arraydecay205 = getelementptr inbounds [2 x float], [2 x float]* %uv204, i64 0, i64 0, !dbg !7405
  call void @glTexCoord2fv(float* %arraydecay205), !dbg !7407
  %150 = load i8, i8* %has_vcol_any, align 1, !dbg !7408
  %tobool206 = icmp ne i8 %150, 0, !dbg !7408
  br i1 %tobool206, label %if.then207, label %if.end210, !dbg !7410

if.then207:                                       ; preds = %if.end195
  %arrayidx208 = getelementptr inbounds [3 x %struct.MLoopCol*], [3 x %struct.MLoopCol*]* %lcol, i64 0, i64 2, !dbg !7411
  %151 = load %struct.MLoopCol*, %struct.MLoopCol** %arrayidx208, align 16, !dbg !7411
  %r209 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %151, i32 0, i32 0, !dbg !7412
  call void @glColor3ubv(i8* %r209), !dbg !7413
  br label %if.end210, !dbg !7413

if.end210:                                        ; preds = %if.then207, %if.end195
  %152 = load [3 x float]*, [3 x float]** %lnors, align 8, !dbg !7414
  %tobool211 = icmp ne [3 x float]* %152, null, !dbg !7414
  br i1 %tobool211, label %if.then212, label %if.else219, !dbg !7416

if.then212:                                       ; preds = %if.end210
  %153 = load [3 x float]*, [3 x float]** %lnors, align 8, !dbg !7417
  %154 = load %struct.BMLoop**, %struct.BMLoop*** %ltri, align 8, !dbg !7418
  %arrayidx213 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %154, i64 2, !dbg !7418
  %155 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx213, align 8, !dbg !7418
  %head214 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %155, i32 0, i32 0, !dbg !7418
  %call215 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head214), !dbg !7418
  %idxprom216 = sext i32 %call215 to i64, !dbg !7417
  %arrayidx217 = getelementptr inbounds [3 x float], [3 x float]* %153, i64 %idxprom216, !dbg !7417
  %arraydecay218 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx217, i64 0, i64 0, !dbg !7417
  call void @glNormal3fv(float* %arraydecay218), !dbg !7419
  br label %if.end227, !dbg !7419

if.else219:                                       ; preds = %if.end210
  %156 = load [3 x float]*, [3 x float]** %vertexNos, align 8, !dbg !7420
  %157 = load %struct.BMLoop**, %struct.BMLoop*** %ltri, align 8, !dbg !7421
  %arrayidx220 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %157, i64 2, !dbg !7421
  %158 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx220, align 8, !dbg !7421
  %v221 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %158, i32 0, i32 1, !dbg !7421
  %159 = load %struct.BMVert*, %struct.BMVert** %v221, align 8, !dbg !7421
  %head222 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %159, i32 0, i32 0, !dbg !7421
  %call223 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head222), !dbg !7421
  %idxprom224 = sext i32 %call223 to i64, !dbg !7420
  %arrayidx225 = getelementptr inbounds [3 x float], [3 x float]* %156, i64 %idxprom224, !dbg !7420
  %arraydecay226 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx225, i64 0, i64 0, !dbg !7420
  call void @glNormal3fv(float* %arraydecay226), !dbg !7422
  br label %if.end227

if.end227:                                        ; preds = %if.else219, %if.then212
  %160 = load [3 x float]*, [3 x float]** %vertexCos27, align 8, !dbg !7423
  %161 = load %struct.BMLoop**, %struct.BMLoop*** %ltri, align 8, !dbg !7424
  %arrayidx228 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %161, i64 2, !dbg !7424
  %162 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx228, align 8, !dbg !7424
  %v229 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %162, i32 0, i32 1, !dbg !7424
  %163 = load %struct.BMVert*, %struct.BMVert** %v229, align 8, !dbg !7424
  %head230 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %163, i32 0, i32 0, !dbg !7424
  %call231 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head230), !dbg !7424
  %idxprom232 = sext i32 %call231 to i64, !dbg !7423
  %arrayidx233 = getelementptr inbounds [3 x float], [3 x float]* %160, i64 %idxprom232, !dbg !7423
  %arraydecay234 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx233, i64 0, i64 0, !dbg !7423
  call void @glVertex3fv(float* %arraydecay234), !dbg !7425
  br label %if.end235

if.end235:                                        ; preds = %if.end227, %if.end130
  call void @glEnd(), !dbg !7426
  br label %if.end236, !dbg !7427

if.end236:                                        ; preds = %if.end235, %if.end72
  br label %for.inc, !dbg !7428

for.inc:                                          ; preds = %if.end236
  %164 = load i32, i32* %i, align 4, !dbg !7429
  %inc = add nsw i32 %164, 1, !dbg !7429
  store i32 %inc, i32* %i, align 4, !dbg !7429
  br label %for.cond, !dbg !7430, !llvm.loop !7431

for.end:                                          ; preds = %for.cond
  br label %if.end444, !dbg !7433

if.else237:                                       ; preds = %if.end
  %165 = load %struct.BMesh*, %struct.BMesh** %bm, align 8, !dbg !7434
  %166 = load [3 x float]*, [3 x float]** %lnors, align 8, !dbg !7436
  %tobool238 = icmp ne [3 x float]* %166, null, !dbg !7436
  %167 = zext i1 %tobool238 to i64, !dbg !7436
  %cond239 = select i1 %tobool238, i32 5, i32 1, !dbg !7436
  %conv240 = trunc i32 %cond239 to i8, !dbg !7436
  call void @BM_mesh_elem_index_ensure(%struct.BMesh* %165, i8 zeroext %conv240), !dbg !7437
  store i32 0, i32* %i, align 4, !dbg !7438
  br label %for.cond241, !dbg !7440

for.cond241:                                      ; preds = %for.inc441, %if.else237
  %168 = load i32, i32* %i, align 4, !dbg !7441
  %169 = load %struct.BMEditMesh*, %struct.BMEditMesh** %em, align 8, !dbg !7443
  %tottri242 = getelementptr inbounds %struct.BMEditMesh, %struct.BMEditMesh* %169, i32 0, i32 4, !dbg !7444
  %170 = load i32, i32* %tottri242, align 8, !dbg !7444
  %cmp243 = icmp slt i32 %168, %170, !dbg !7445
  br i1 %cmp243, label %for.body245, label %for.end443, !dbg !7446

for.body245:                                      ; preds = %for.cond241
  call void @llvm.dbg.declare(metadata %struct.BMLoop*** %ltri246, metadata !7447, metadata !DIExpression()), !dbg !7449
  %171 = load [3 x %struct.BMLoop*]*, [3 x %struct.BMLoop*]** %looptris, align 8, !dbg !7450
  %172 = load i32, i32* %i, align 4, !dbg !7451
  %idxprom247 = sext i32 %172 to i64, !dbg !7450
  %arrayidx248 = getelementptr inbounds [3 x %struct.BMLoop*], [3 x %struct.BMLoop*]* %171, i64 %idxprom247, !dbg !7450
  %arraydecay249 = getelementptr inbounds [3 x %struct.BMLoop*], [3 x %struct.BMLoop*]* %arrayidx248, i64 0, i64 0, !dbg !7450
  store %struct.BMLoop** %arraydecay249, %struct.BMLoop*** %ltri246, align 8, !dbg !7449
  call void @llvm.dbg.declare(metadata %struct.MTexPoly** %tp250, metadata !7452, metadata !DIExpression()), !dbg !7453
  %173 = load i32, i32* %cd_poly_tex_offset, align 4, !dbg !7454
  %cmp251 = icmp ne i32 %173, -1, !dbg !7455
  br i1 %cmp251, label %cond.true253, label %cond.false260, !dbg !7456

cond.true253:                                     ; preds = %for.body245
  %174 = load %struct.BMLoop**, %struct.BMLoop*** %ltri246, align 8, !dbg !7457
  %arrayidx254 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %174, i64 0, !dbg !7457
  %175 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx254, align 8, !dbg !7457
  %f255 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %175, i32 0, i32 3, !dbg !7457
  %176 = load %struct.BMFace*, %struct.BMFace** %f255, align 8, !dbg !7457
  %head256 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %176, i32 0, i32 0, !dbg !7457
  %data257 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head256, i32 0, i32 0, !dbg !7457
  %177 = load i8*, i8** %data257, align 8, !dbg !7457
  %178 = load i32, i32* %cd_poly_tex_offset, align 4, !dbg !7457
  %idx.ext258 = sext i32 %178 to i64, !dbg !7457
  %add.ptr259 = getelementptr inbounds i8, i8* %177, i64 %idx.ext258, !dbg !7457
  br label %cond.end261, !dbg !7456

cond.false260:                                    ; preds = %for.body245
  br label %cond.end261, !dbg !7456

cond.end261:                                      ; preds = %cond.false260, %cond.true253
  %cond262 = phi i8* [ %add.ptr259, %cond.true253 ], [ null, %cond.false260 ], !dbg !7456
  %179 = bitcast i8* %cond262 to %struct.MTexPoly*, !dbg !7456
  store %struct.MTexPoly* %179, %struct.MTexPoly** %tp250, align 8, !dbg !7453
  call void @llvm.dbg.declare(metadata %struct.MTFace* %mtf263, metadata !7458, metadata !DIExpression()), !dbg !7459
  %180 = bitcast %struct.MTFace* %mtf263 to i8*, !dbg !7459
  call void @llvm.memset.p0i8.i64(i8* align 8 %180, i8 0, i64 48, i1 false), !dbg !7459
  call void @llvm.dbg.declare(metadata i32* %drawSmooth264, metadata !7460, metadata !DIExpression()), !dbg !7461
  %181 = load [3 x float]*, [3 x float]** %lnors, align 8, !dbg !7462
  %tobool265 = icmp ne [3 x float]* %181, null, !dbg !7462
  br i1 %tobool265, label %lor.end273, label %lor.rhs266, !dbg !7463

lor.rhs266:                                       ; preds = %cond.end261
  %182 = load %struct.BMLoop**, %struct.BMLoop*** %ltri246, align 8, !dbg !7464
  %arrayidx267 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %182, i64 0, !dbg !7464
  %183 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx267, align 8, !dbg !7464
  %f268 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %183, i32 0, i32 3, !dbg !7464
  %184 = load %struct.BMFace*, %struct.BMFace** %f268, align 8, !dbg !7464
  %head269 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %184, i32 0, i32 0, !dbg !7464
  %call270 = call zeroext i8 @_bm_elem_flag_test(%struct.BMHeader* %head269, i8 zeroext 8), !dbg !7464
  %conv271 = zext i8 %call270 to i32, !dbg !7464
  %tobool272 = icmp ne i32 %conv271, 0, !dbg !7463
  br label %lor.end273, !dbg !7463

lor.end273:                                       ; preds = %lor.rhs266, %cond.end261
  %185 = phi i1 [ true, %cond.end261 ], [ %tobool272, %lor.rhs266 ]
  %lor.ext274 = zext i1 %185 to i32, !dbg !7463
  store i32 %lor.ext274, i32* %drawSmooth264, align 4, !dbg !7461
  call void @llvm.dbg.declare(metadata i32* %draw_option275, metadata !7465, metadata !DIExpression()), !dbg !7466
  %186 = load %struct.BMLoop**, %struct.BMLoop*** %ltri246, align 8, !dbg !7467
  %arrayidx276 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %186, i64 0, !dbg !7467
  %187 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx276, align 8, !dbg !7467
  %f277 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %187, i32 0, i32 3, !dbg !7468
  %188 = load %struct.BMFace*, %struct.BMFace** %f277, align 8, !dbg !7468
  store %struct.BMFace* %188, %struct.BMFace** %efa, align 8, !dbg !7469
  %189 = load i32, i32* %cd_poly_tex_offset, align 4, !dbg !7470
  %cmp278 = icmp ne i32 %189, -1, !dbg !7472
  br i1 %cmp278, label %if.then280, label %if.end291, !dbg !7473

if.then280:                                       ; preds = %lor.end273
  %190 = load %struct.MTexPoly*, %struct.MTexPoly** %tp250, align 8, !dbg !7474
  %tpage281 = getelementptr inbounds %struct.MTexPoly, %struct.MTexPoly* %190, i32 0, i32 0, !dbg !7474
  %191 = load %struct.Image*, %struct.Image** %tpage281, align 8, !dbg !7474
  %tpage282 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %mtf263, i32 0, i32 1, !dbg !7474
  store %struct.Image* %191, %struct.Image** %tpage282, align 8, !dbg !7474
  %192 = load %struct.MTexPoly*, %struct.MTexPoly** %tp250, align 8, !dbg !7474
  %flag283 = getelementptr inbounds %struct.MTexPoly, %struct.MTexPoly* %192, i32 0, i32 1, !dbg !7474
  %193 = load i8, i8* %flag283, align 8, !dbg !7474
  %flag284 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %mtf263, i32 0, i32 2, !dbg !7474
  store i8 %193, i8* %flag284, align 8, !dbg !7474
  %194 = load %struct.MTexPoly*, %struct.MTexPoly** %tp250, align 8, !dbg !7474
  %transp285 = getelementptr inbounds %struct.MTexPoly, %struct.MTexPoly* %194, i32 0, i32 2, !dbg !7474
  %195 = load i8, i8* %transp285, align 1, !dbg !7474
  %transp286 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %mtf263, i32 0, i32 3, !dbg !7474
  store i8 %195, i8* %transp286, align 1, !dbg !7474
  %196 = load %struct.MTexPoly*, %struct.MTexPoly** %tp250, align 8, !dbg !7474
  %mode287 = getelementptr inbounds %struct.MTexPoly, %struct.MTexPoly* %196, i32 0, i32 3, !dbg !7474
  %197 = load i16, i16* %mode287, align 2, !dbg !7474
  %mode288 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %mtf263, i32 0, i32 4, !dbg !7474
  store i16 %197, i16* %mode288, align 2, !dbg !7474
  %198 = load %struct.MTexPoly*, %struct.MTexPoly** %tp250, align 8, !dbg !7474
  %tile289 = getelementptr inbounds %struct.MTexPoly, %struct.MTexPoly* %198, i32 0, i32 4, !dbg !7474
  %199 = load i16, i16* %tile289, align 4, !dbg !7474
  %tile290 = getelementptr inbounds %struct.MTFace, %struct.MTFace* %mtf263, i32 0, i32 5, !dbg !7474
  store i16 %199, i16* %tile290, align 4, !dbg !7474
  br label %if.end291, !dbg !7477

if.end291:                                        ; preds = %if.then280, %lor.end273
  %200 = load i32 (%struct.MTFace*, i8, i32)*, i32 (%struct.MTFace*, i8, i32)** %drawParams.addr, align 8, !dbg !7478
  %tobool292 = icmp ne i32 (%struct.MTFace*, i8, i32)* %200, null, !dbg !7478
  br i1 %tobool292, label %if.then293, label %if.else297, !dbg !7480

if.then293:                                       ; preds = %if.end291
  %201 = load i32 (%struct.MTFace*, i8, i32)*, i32 (%struct.MTFace*, i8, i32)** %drawParams.addr, align 8, !dbg !7481
  %202 = load i8, i8* %has_vcol, align 1, !dbg !7482
  %203 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !7483
  %mat_nr294 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %203, i32 0, i32 5, !dbg !7484
  %204 = load i16, i16* %mat_nr294, align 8, !dbg !7484
  %conv295 = sext i16 %204 to i32, !dbg !7483
  %call296 = call i32 %201(%struct.MTFace* %mtf263, i8 zeroext %202, i32 %conv295), !dbg !7481
  store i32 %call296, i32* %draw_option275, align 4, !dbg !7485
  br label %if.end305, !dbg !7486

if.else297:                                       ; preds = %if.end291
  %205 = load i32 (i8*, i32)*, i32 (i8*, i32)** %drawParamsMapped.addr, align 8, !dbg !7487
  %tobool298 = icmp ne i32 (i8*, i32)* %205, null, !dbg !7487
  br i1 %tobool298, label %if.then299, label %if.else303, !dbg !7489

if.then299:                                       ; preds = %if.else297
  %206 = load i32 (i8*, i32)*, i32 (i8*, i32)** %drawParamsMapped.addr, align 8, !dbg !7490
  %207 = load i8*, i8** %userData.addr, align 8, !dbg !7491
  %208 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !7492
  %head300 = getelementptr inbounds %struct.BMFace, %struct.BMFace* %208, i32 0, i32 0, !dbg !7492
  %call301 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head300), !dbg !7492
  %call302 = call i32 %206(i8* %207, i32 %call301), !dbg !7490
  store i32 %call302, i32* %draw_option275, align 4, !dbg !7493
  br label %if.end304, !dbg !7494

if.else303:                                       ; preds = %if.else297
  store i32 1, i32* %draw_option275, align 4, !dbg !7495
  br label %if.end304

if.end304:                                        ; preds = %if.else303, %if.then299
  br label %if.end305

if.end305:                                        ; preds = %if.end304, %if.then293
  %209 = load i32, i32* %draw_option275, align 4, !dbg !7496
  %cmp306 = icmp ne i32 %209, 0, !dbg !7498
  br i1 %cmp306, label %if.then308, label %if.end440, !dbg !7499

if.then308:                                       ; preds = %if.end305
  %210 = load i8, i8* %has_uv, align 1, !dbg !7500
  %tobool309 = icmp ne i8 %210, 0, !dbg !7500
  br i1 %tobool309, label %if.then310, label %if.end312, !dbg !7503

if.then310:                                       ; preds = %if.then308
  %211 = load %struct.BMLoop**, %struct.BMLoop*** %ltri246, align 8, !dbg !7504
  %arraydecay311 = getelementptr inbounds [3 x %struct.MLoopUV*], [3 x %struct.MLoopUV*]* %luv, i64 0, i64 0, !dbg !7505
  %212 = load i32, i32* %cd_loop_uv_offset, align 4, !dbg !7506
  call void @bmdm_get_tri_uv(%struct.BMLoop** %211, %struct.MLoopUV** %arraydecay311, i32 %212), !dbg !7507
  br label %if.end312, !dbg !7507

if.end312:                                        ; preds = %if.then310, %if.then308
  %213 = load i8, i8* %has_vcol, align 1, !dbg !7508
  %tobool313 = icmp ne i8 %213, 0, !dbg !7508
  br i1 %tobool313, label %if.then314, label %if.else316, !dbg !7510

if.then314:                                       ; preds = %if.end312
  %214 = load %struct.BMLoop**, %struct.BMLoop*** %ltri246, align 8, !dbg !7511
  %arraydecay315 = getelementptr inbounds [3 x %struct.MLoopCol*], [3 x %struct.MLoopCol*]* %lcol, i64 0, i64 0, !dbg !7512
  %215 = load i32, i32* %cd_loop_color_offset, align 4, !dbg !7513
  call void @bmdm_get_tri_col(%struct.BMLoop** %214, %struct.MLoopCol** %arraydecay315, i32 %215), !dbg !7514
  br label %if.end321, !dbg !7514

if.else316:                                       ; preds = %if.end312
  %216 = load i8, i8* %has_vcol_preview, align 1, !dbg !7515
  %tobool317 = icmp ne i8 %216, 0, !dbg !7515
  br i1 %tobool317, label %if.then318, label %if.end320, !dbg !7517

if.then318:                                       ; preds = %if.else316
  %217 = load %struct.BMLoop**, %struct.BMLoop*** %ltri246, align 8, !dbg !7518
  %arraydecay319 = getelementptr inbounds [3 x %struct.MLoopCol*], [3 x %struct.MLoopCol*]* %lcol, i64 0, i64 0, !dbg !7519
  %218 = load [4 x i8]*, [4 x i8]** %color_vert_array, align 8, !dbg !7520
  call void @bmdm_get_tri_colpreview(%struct.BMLoop** %217, %struct.MLoopCol** %arraydecay319, [4 x i8]* %218), !dbg !7521
  br label %if.end320, !dbg !7521

if.end320:                                        ; preds = %if.then318, %if.else316
  br label %if.end321

if.end321:                                        ; preds = %if.end320, %if.then314
  call void @glBegin(i32 4), !dbg !7522
  %219 = load i32, i32* %drawSmooth264, align 4, !dbg !7523
  %tobool322 = icmp ne i32 %219, 0, !dbg !7523
  br i1 %tobool322, label %if.else360, label %if.then323, !dbg !7525

if.then323:                                       ; preds = %if.end321
  %220 = load %struct.BMFace*, %struct.BMFace** %efa, align 8, !dbg !7526
  %no = getelementptr inbounds %struct.BMFace, %struct.BMFace* %220, i32 0, i32 4, !dbg !7528
  %arraydecay324 = getelementptr inbounds [3 x float], [3 x float]* %no, i64 0, i64 0, !dbg !7526
  call void @glNormal3fv(float* %arraydecay324), !dbg !7529
  %arrayidx325 = getelementptr inbounds [3 x %struct.MLoopUV*], [3 x %struct.MLoopUV*]* %luv, i64 0, i64 0, !dbg !7530
  %221 = load %struct.MLoopUV*, %struct.MLoopUV** %arrayidx325, align 16, !dbg !7530
  %uv326 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %221, i32 0, i32 0, !dbg !7531
  %arraydecay327 = getelementptr inbounds [2 x float], [2 x float]* %uv326, i64 0, i64 0, !dbg !7530
  call void @glTexCoord2fv(float* %arraydecay327), !dbg !7532
  %222 = load i8, i8* %has_vcol_any, align 1, !dbg !7533
  %tobool328 = icmp ne i8 %222, 0, !dbg !7533
  br i1 %tobool328, label %if.then329, label %if.end332, !dbg !7535

if.then329:                                       ; preds = %if.then323
  %arrayidx330 = getelementptr inbounds [3 x %struct.MLoopCol*], [3 x %struct.MLoopCol*]* %lcol, i64 0, i64 0, !dbg !7536
  %223 = load %struct.MLoopCol*, %struct.MLoopCol** %arrayidx330, align 16, !dbg !7536
  %r331 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %223, i32 0, i32 0, !dbg !7537
  call void @glColor3ubv(i8* %r331), !dbg !7538
  br label %if.end332, !dbg !7538

if.end332:                                        ; preds = %if.then329, %if.then323
  %224 = load %struct.BMLoop**, %struct.BMLoop*** %ltri246, align 8, !dbg !7539
  %arrayidx333 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %224, i64 0, !dbg !7539
  %225 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx333, align 8, !dbg !7539
  %v334 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %225, i32 0, i32 1, !dbg !7540
  %226 = load %struct.BMVert*, %struct.BMVert** %v334, align 8, !dbg !7540
  %co = getelementptr inbounds %struct.BMVert, %struct.BMVert* %226, i32 0, i32 2, !dbg !7541
  %arraydecay335 = getelementptr inbounds [3 x float], [3 x float]* %co, i64 0, i64 0, !dbg !7539
  call void @glVertex3fv(float* %arraydecay335), !dbg !7542
  %arrayidx336 = getelementptr inbounds [3 x %struct.MLoopUV*], [3 x %struct.MLoopUV*]* %luv, i64 0, i64 1, !dbg !7543
  %227 = load %struct.MLoopUV*, %struct.MLoopUV** %arrayidx336, align 8, !dbg !7543
  %uv337 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %227, i32 0, i32 0, !dbg !7544
  %arraydecay338 = getelementptr inbounds [2 x float], [2 x float]* %uv337, i64 0, i64 0, !dbg !7543
  call void @glTexCoord2fv(float* %arraydecay338), !dbg !7545
  %228 = load i8, i8* %has_vcol_any, align 1, !dbg !7546
  %tobool339 = icmp ne i8 %228, 0, !dbg !7546
  br i1 %tobool339, label %if.then340, label %if.end343, !dbg !7548

if.then340:                                       ; preds = %if.end332
  %arrayidx341 = getelementptr inbounds [3 x %struct.MLoopCol*], [3 x %struct.MLoopCol*]* %lcol, i64 0, i64 1, !dbg !7549
  %229 = load %struct.MLoopCol*, %struct.MLoopCol** %arrayidx341, align 8, !dbg !7549
  %r342 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %229, i32 0, i32 0, !dbg !7550
  call void @glColor3ubv(i8* %r342), !dbg !7551
  br label %if.end343, !dbg !7551

if.end343:                                        ; preds = %if.then340, %if.end332
  %230 = load %struct.BMLoop**, %struct.BMLoop*** %ltri246, align 8, !dbg !7552
  %arrayidx344 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %230, i64 1, !dbg !7552
  %231 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx344, align 8, !dbg !7552
  %v345 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %231, i32 0, i32 1, !dbg !7553
  %232 = load %struct.BMVert*, %struct.BMVert** %v345, align 8, !dbg !7553
  %co346 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %232, i32 0, i32 2, !dbg !7554
  %arraydecay347 = getelementptr inbounds [3 x float], [3 x float]* %co346, i64 0, i64 0, !dbg !7552
  call void @glVertex3fv(float* %arraydecay347), !dbg !7555
  %arrayidx348 = getelementptr inbounds [3 x %struct.MLoopUV*], [3 x %struct.MLoopUV*]* %luv, i64 0, i64 2, !dbg !7556
  %233 = load %struct.MLoopUV*, %struct.MLoopUV** %arrayidx348, align 16, !dbg !7556
  %uv349 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %233, i32 0, i32 0, !dbg !7557
  %arraydecay350 = getelementptr inbounds [2 x float], [2 x float]* %uv349, i64 0, i64 0, !dbg !7556
  call void @glTexCoord2fv(float* %arraydecay350), !dbg !7558
  %234 = load i8, i8* %has_vcol_any, align 1, !dbg !7559
  %tobool351 = icmp ne i8 %234, 0, !dbg !7559
  br i1 %tobool351, label %if.then352, label %if.end355, !dbg !7561

if.then352:                                       ; preds = %if.end343
  %arrayidx353 = getelementptr inbounds [3 x %struct.MLoopCol*], [3 x %struct.MLoopCol*]* %lcol, i64 0, i64 2, !dbg !7562
  %235 = load %struct.MLoopCol*, %struct.MLoopCol** %arrayidx353, align 16, !dbg !7562
  %r354 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %235, i32 0, i32 0, !dbg !7563
  call void @glColor3ubv(i8* %r354), !dbg !7564
  br label %if.end355, !dbg !7564

if.end355:                                        ; preds = %if.then352, %if.end343
  %236 = load %struct.BMLoop**, %struct.BMLoop*** %ltri246, align 8, !dbg !7565
  %arrayidx356 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %236, i64 2, !dbg !7565
  %237 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx356, align 8, !dbg !7565
  %v357 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %237, i32 0, i32 1, !dbg !7566
  %238 = load %struct.BMVert*, %struct.BMVert** %v357, align 8, !dbg !7566
  %co358 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %238, i32 0, i32 2, !dbg !7567
  %arraydecay359 = getelementptr inbounds [3 x float], [3 x float]* %co358, i64 0, i64 0, !dbg !7565
  call void @glVertex3fv(float* %arraydecay359), !dbg !7568
  br label %if.end439, !dbg !7569

if.else360:                                       ; preds = %if.end321
  %arrayidx361 = getelementptr inbounds [3 x %struct.MLoopUV*], [3 x %struct.MLoopUV*]* %luv, i64 0, i64 0, !dbg !7570
  %239 = load %struct.MLoopUV*, %struct.MLoopUV** %arrayidx361, align 16, !dbg !7570
  %uv362 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %239, i32 0, i32 0, !dbg !7572
  %arraydecay363 = getelementptr inbounds [2 x float], [2 x float]* %uv362, i64 0, i64 0, !dbg !7570
  call void @glTexCoord2fv(float* %arraydecay363), !dbg !7573
  %240 = load i8, i8* %has_vcol_any, align 1, !dbg !7574
  %tobool364 = icmp ne i8 %240, 0, !dbg !7574
  br i1 %tobool364, label %if.then365, label %if.end368, !dbg !7576

if.then365:                                       ; preds = %if.else360
  %arrayidx366 = getelementptr inbounds [3 x %struct.MLoopCol*], [3 x %struct.MLoopCol*]* %lcol, i64 0, i64 0, !dbg !7577
  %241 = load %struct.MLoopCol*, %struct.MLoopCol** %arrayidx366, align 16, !dbg !7577
  %r367 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %241, i32 0, i32 0, !dbg !7578
  call void @glColor3ubv(i8* %r367), !dbg !7579
  br label %if.end368, !dbg !7579

if.end368:                                        ; preds = %if.then365, %if.else360
  %242 = load [3 x float]*, [3 x float]** %lnors, align 8, !dbg !7580
  %tobool369 = icmp ne [3 x float]* %242, null, !dbg !7580
  br i1 %tobool369, label %if.then370, label %if.else377, !dbg !7582

if.then370:                                       ; preds = %if.end368
  %243 = load [3 x float]*, [3 x float]** %lnors, align 8, !dbg !7583
  %244 = load %struct.BMLoop**, %struct.BMLoop*** %ltri246, align 8, !dbg !7584
  %arrayidx371 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %244, i64 0, !dbg !7584
  %245 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx371, align 8, !dbg !7584
  %head372 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %245, i32 0, i32 0, !dbg !7584
  %call373 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head372), !dbg !7584
  %idxprom374 = sext i32 %call373 to i64, !dbg !7583
  %arrayidx375 = getelementptr inbounds [3 x float], [3 x float]* %243, i64 %idxprom374, !dbg !7583
  %arraydecay376 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx375, i64 0, i64 0, !dbg !7583
  call void @glNormal3fv(float* %arraydecay376), !dbg !7585
  br label %if.end382, !dbg !7585

if.else377:                                       ; preds = %if.end368
  %246 = load %struct.BMLoop**, %struct.BMLoop*** %ltri246, align 8, !dbg !7586
  %arrayidx378 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %246, i64 0, !dbg !7586
  %247 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx378, align 8, !dbg !7586
  %v379 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %247, i32 0, i32 1, !dbg !7587
  %248 = load %struct.BMVert*, %struct.BMVert** %v379, align 8, !dbg !7587
  %no380 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %248, i32 0, i32 3, !dbg !7588
  %arraydecay381 = getelementptr inbounds [3 x float], [3 x float]* %no380, i64 0, i64 0, !dbg !7586
  call void @glNormal3fv(float* %arraydecay381), !dbg !7589
  br label %if.end382

if.end382:                                        ; preds = %if.else377, %if.then370
  %249 = load %struct.BMLoop**, %struct.BMLoop*** %ltri246, align 8, !dbg !7590
  %arrayidx383 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %249, i64 0, !dbg !7590
  %250 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx383, align 8, !dbg !7590
  %v384 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %250, i32 0, i32 1, !dbg !7591
  %251 = load %struct.BMVert*, %struct.BMVert** %v384, align 8, !dbg !7591
  %co385 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %251, i32 0, i32 2, !dbg !7592
  %arraydecay386 = getelementptr inbounds [3 x float], [3 x float]* %co385, i64 0, i64 0, !dbg !7590
  call void @glVertex3fv(float* %arraydecay386), !dbg !7593
  %arrayidx387 = getelementptr inbounds [3 x %struct.MLoopUV*], [3 x %struct.MLoopUV*]* %luv, i64 0, i64 1, !dbg !7594
  %252 = load %struct.MLoopUV*, %struct.MLoopUV** %arrayidx387, align 8, !dbg !7594
  %uv388 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %252, i32 0, i32 0, !dbg !7595
  %arraydecay389 = getelementptr inbounds [2 x float], [2 x float]* %uv388, i64 0, i64 0, !dbg !7594
  call void @glTexCoord2fv(float* %arraydecay389), !dbg !7596
  %253 = load i8, i8* %has_vcol_any, align 1, !dbg !7597
  %tobool390 = icmp ne i8 %253, 0, !dbg !7597
  br i1 %tobool390, label %if.then391, label %if.end394, !dbg !7599

if.then391:                                       ; preds = %if.end382
  %arrayidx392 = getelementptr inbounds [3 x %struct.MLoopCol*], [3 x %struct.MLoopCol*]* %lcol, i64 0, i64 1, !dbg !7600
  %254 = load %struct.MLoopCol*, %struct.MLoopCol** %arrayidx392, align 8, !dbg !7600
  %r393 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %254, i32 0, i32 0, !dbg !7601
  call void @glColor3ubv(i8* %r393), !dbg !7602
  br label %if.end394, !dbg !7602

if.end394:                                        ; preds = %if.then391, %if.end382
  %255 = load [3 x float]*, [3 x float]** %lnors, align 8, !dbg !7603
  %tobool395 = icmp ne [3 x float]* %255, null, !dbg !7603
  br i1 %tobool395, label %if.then396, label %if.else403, !dbg !7605

if.then396:                                       ; preds = %if.end394
  %256 = load [3 x float]*, [3 x float]** %lnors, align 8, !dbg !7606
  %257 = load %struct.BMLoop**, %struct.BMLoop*** %ltri246, align 8, !dbg !7607
  %arrayidx397 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %257, i64 1, !dbg !7607
  %258 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx397, align 8, !dbg !7607
  %head398 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %258, i32 0, i32 0, !dbg !7607
  %call399 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head398), !dbg !7607
  %idxprom400 = sext i32 %call399 to i64, !dbg !7606
  %arrayidx401 = getelementptr inbounds [3 x float], [3 x float]* %256, i64 %idxprom400, !dbg !7606
  %arraydecay402 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx401, i64 0, i64 0, !dbg !7606
  call void @glNormal3fv(float* %arraydecay402), !dbg !7608
  br label %if.end408, !dbg !7608

if.else403:                                       ; preds = %if.end394
  %259 = load %struct.BMLoop**, %struct.BMLoop*** %ltri246, align 8, !dbg !7609
  %arrayidx404 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %259, i64 1, !dbg !7609
  %260 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx404, align 8, !dbg !7609
  %v405 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %260, i32 0, i32 1, !dbg !7610
  %261 = load %struct.BMVert*, %struct.BMVert** %v405, align 8, !dbg !7610
  %no406 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %261, i32 0, i32 3, !dbg !7611
  %arraydecay407 = getelementptr inbounds [3 x float], [3 x float]* %no406, i64 0, i64 0, !dbg !7609
  call void @glNormal3fv(float* %arraydecay407), !dbg !7612
  br label %if.end408

if.end408:                                        ; preds = %if.else403, %if.then396
  %262 = load %struct.BMLoop**, %struct.BMLoop*** %ltri246, align 8, !dbg !7613
  %arrayidx409 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %262, i64 1, !dbg !7613
  %263 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx409, align 8, !dbg !7613
  %v410 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %263, i32 0, i32 1, !dbg !7614
  %264 = load %struct.BMVert*, %struct.BMVert** %v410, align 8, !dbg !7614
  %co411 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %264, i32 0, i32 2, !dbg !7615
  %arraydecay412 = getelementptr inbounds [3 x float], [3 x float]* %co411, i64 0, i64 0, !dbg !7613
  call void @glVertex3fv(float* %arraydecay412), !dbg !7616
  %arrayidx413 = getelementptr inbounds [3 x %struct.MLoopUV*], [3 x %struct.MLoopUV*]* %luv, i64 0, i64 2, !dbg !7617
  %265 = load %struct.MLoopUV*, %struct.MLoopUV** %arrayidx413, align 16, !dbg !7617
  %uv414 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %265, i32 0, i32 0, !dbg !7618
  %arraydecay415 = getelementptr inbounds [2 x float], [2 x float]* %uv414, i64 0, i64 0, !dbg !7617
  call void @glTexCoord2fv(float* %arraydecay415), !dbg !7619
  %266 = load i8, i8* %has_vcol_any, align 1, !dbg !7620
  %tobool416 = icmp ne i8 %266, 0, !dbg !7620
  br i1 %tobool416, label %if.then417, label %if.end420, !dbg !7622

if.then417:                                       ; preds = %if.end408
  %arrayidx418 = getelementptr inbounds [3 x %struct.MLoopCol*], [3 x %struct.MLoopCol*]* %lcol, i64 0, i64 2, !dbg !7623
  %267 = load %struct.MLoopCol*, %struct.MLoopCol** %arrayidx418, align 16, !dbg !7623
  %r419 = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %267, i32 0, i32 0, !dbg !7624
  call void @glColor3ubv(i8* %r419), !dbg !7625
  br label %if.end420, !dbg !7625

if.end420:                                        ; preds = %if.then417, %if.end408
  %268 = load [3 x float]*, [3 x float]** %lnors, align 8, !dbg !7626
  %tobool421 = icmp ne [3 x float]* %268, null, !dbg !7626
  br i1 %tobool421, label %if.then422, label %if.else429, !dbg !7628

if.then422:                                       ; preds = %if.end420
  %269 = load [3 x float]*, [3 x float]** %lnors, align 8, !dbg !7629
  %270 = load %struct.BMLoop**, %struct.BMLoop*** %ltri246, align 8, !dbg !7630
  %arrayidx423 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %270, i64 2, !dbg !7630
  %271 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx423, align 8, !dbg !7630
  %head424 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %271, i32 0, i32 0, !dbg !7630
  %call425 = call i32 @_bm_elem_index_get(%struct.BMHeader* %head424), !dbg !7630
  %idxprom426 = sext i32 %call425 to i64, !dbg !7629
  %arrayidx427 = getelementptr inbounds [3 x float], [3 x float]* %269, i64 %idxprom426, !dbg !7629
  %arraydecay428 = getelementptr inbounds [3 x float], [3 x float]* %arrayidx427, i64 0, i64 0, !dbg !7629
  call void @glNormal3fv(float* %arraydecay428), !dbg !7631
  br label %if.end434, !dbg !7631

if.else429:                                       ; preds = %if.end420
  %272 = load %struct.BMLoop**, %struct.BMLoop*** %ltri246, align 8, !dbg !7632
  %arrayidx430 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %272, i64 2, !dbg !7632
  %273 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx430, align 8, !dbg !7632
  %v431 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %273, i32 0, i32 1, !dbg !7633
  %274 = load %struct.BMVert*, %struct.BMVert** %v431, align 8, !dbg !7633
  %no432 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %274, i32 0, i32 3, !dbg !7634
  %arraydecay433 = getelementptr inbounds [3 x float], [3 x float]* %no432, i64 0, i64 0, !dbg !7632
  call void @glNormal3fv(float* %arraydecay433), !dbg !7635
  br label %if.end434

if.end434:                                        ; preds = %if.else429, %if.then422
  %275 = load %struct.BMLoop**, %struct.BMLoop*** %ltri246, align 8, !dbg !7636
  %arrayidx435 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %275, i64 2, !dbg !7636
  %276 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx435, align 8, !dbg !7636
  %v436 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %276, i32 0, i32 1, !dbg !7637
  %277 = load %struct.BMVert*, %struct.BMVert** %v436, align 8, !dbg !7637
  %co437 = getelementptr inbounds %struct.BMVert, %struct.BMVert* %277, i32 0, i32 2, !dbg !7638
  %arraydecay438 = getelementptr inbounds [3 x float], [3 x float]* %co437, i64 0, i64 0, !dbg !7636
  call void @glVertex3fv(float* %arraydecay438), !dbg !7639
  br label %if.end439

if.end439:                                        ; preds = %if.end434, %if.end355
  call void @glEnd(), !dbg !7640
  br label %if.end440, !dbg !7641

if.end440:                                        ; preds = %if.end439, %if.end305
  br label %for.inc441, !dbg !7642

for.inc441:                                       ; preds = %if.end440
  %278 = load i32, i32* %i, align 4, !dbg !7643
  %inc442 = add nsw i32 %278, 1, !dbg !7643
  store i32 %inc442, i32* %i, align 4, !dbg !7643
  br label %for.cond241, !dbg !7644, !llvm.loop !7645

for.end443:                                       ; preds = %for.cond241
  br label %if.end444

if.end444:                                        ; preds = %for.end443, %for.end
  call void @glShadeModel(i32 7424), !dbg !7647
  ret void, !dbg !7648
}

; Function Attrs: noinline nounwind uwtable
define internal void @bmdm_get_tri_uv(%struct.BMLoop** %ltri, %struct.MLoopUV** %luv, i32 %cd_loop_uv_offset) #0 !dbg !7649 {
entry:
  %ltri.addr = alloca %struct.BMLoop**, align 8
  %luv.addr = alloca %struct.MLoopUV**, align 8
  %cd_loop_uv_offset.addr = alloca i32, align 4
  store %struct.BMLoop** %ltri, %struct.BMLoop*** %ltri.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMLoop*** %ltri.addr, metadata !7653, metadata !DIExpression()), !dbg !7654
  store %struct.MLoopUV** %luv, %struct.MLoopUV*** %luv.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MLoopUV*** %luv.addr, metadata !7655, metadata !DIExpression()), !dbg !7656
  store i32 %cd_loop_uv_offset, i32* %cd_loop_uv_offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cd_loop_uv_offset.addr, metadata !7657, metadata !DIExpression()), !dbg !7658
  %0 = load %struct.BMLoop**, %struct.BMLoop*** %ltri.addr, align 8, !dbg !7659
  %arrayidx = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %0, i64 0, !dbg !7659
  %1 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx, align 8, !dbg !7659
  %head = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %1, i32 0, i32 0, !dbg !7659
  %data = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head, i32 0, i32 0, !dbg !7659
  %2 = load i8*, i8** %data, align 8, !dbg !7659
  %3 = load i32, i32* %cd_loop_uv_offset.addr, align 4, !dbg !7659
  %idx.ext = sext i32 %3 to i64, !dbg !7659
  %add.ptr = getelementptr inbounds i8, i8* %2, i64 %idx.ext, !dbg !7659
  %4 = bitcast i8* %add.ptr to %struct.MLoopUV*, !dbg !7659
  %5 = load %struct.MLoopUV**, %struct.MLoopUV*** %luv.addr, align 8, !dbg !7660
  %arrayidx1 = getelementptr inbounds %struct.MLoopUV*, %struct.MLoopUV** %5, i64 0, !dbg !7660
  store %struct.MLoopUV* %4, %struct.MLoopUV** %arrayidx1, align 8, !dbg !7661
  %6 = load %struct.BMLoop**, %struct.BMLoop*** %ltri.addr, align 8, !dbg !7662
  %arrayidx2 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %6, i64 1, !dbg !7662
  %7 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx2, align 8, !dbg !7662
  %head3 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %7, i32 0, i32 0, !dbg !7662
  %data4 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head3, i32 0, i32 0, !dbg !7662
  %8 = load i8*, i8** %data4, align 8, !dbg !7662
  %9 = load i32, i32* %cd_loop_uv_offset.addr, align 4, !dbg !7662
  %idx.ext5 = sext i32 %9 to i64, !dbg !7662
  %add.ptr6 = getelementptr inbounds i8, i8* %8, i64 %idx.ext5, !dbg !7662
  %10 = bitcast i8* %add.ptr6 to %struct.MLoopUV*, !dbg !7662
  %11 = load %struct.MLoopUV**, %struct.MLoopUV*** %luv.addr, align 8, !dbg !7663
  %arrayidx7 = getelementptr inbounds %struct.MLoopUV*, %struct.MLoopUV** %11, i64 1, !dbg !7663
  store %struct.MLoopUV* %10, %struct.MLoopUV** %arrayidx7, align 8, !dbg !7664
  %12 = load %struct.BMLoop**, %struct.BMLoop*** %ltri.addr, align 8, !dbg !7665
  %arrayidx8 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %12, i64 2, !dbg !7665
  %13 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx8, align 8, !dbg !7665
  %head9 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %13, i32 0, i32 0, !dbg !7665
  %data10 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head9, i32 0, i32 0, !dbg !7665
  %14 = load i8*, i8** %data10, align 8, !dbg !7665
  %15 = load i32, i32* %cd_loop_uv_offset.addr, align 4, !dbg !7665
  %idx.ext11 = sext i32 %15 to i64, !dbg !7665
  %add.ptr12 = getelementptr inbounds i8, i8* %14, i64 %idx.ext11, !dbg !7665
  %16 = bitcast i8* %add.ptr12 to %struct.MLoopUV*, !dbg !7665
  %17 = load %struct.MLoopUV**, %struct.MLoopUV*** %luv.addr, align 8, !dbg !7666
  %arrayidx13 = getelementptr inbounds %struct.MLoopUV*, %struct.MLoopUV** %17, i64 2, !dbg !7666
  store %struct.MLoopUV* %16, %struct.MLoopUV** %arrayidx13, align 8, !dbg !7667
  ret void, !dbg !7668
}

; Function Attrs: noinline nounwind uwtable
define internal void @bmdm_get_tri_col(%struct.BMLoop** %ltri, %struct.MLoopCol** %lcol, i32 %cd_loop_color_offset) #0 !dbg !7669 {
entry:
  %ltri.addr = alloca %struct.BMLoop**, align 8
  %lcol.addr = alloca %struct.MLoopCol**, align 8
  %cd_loop_color_offset.addr = alloca i32, align 4
  store %struct.BMLoop** %ltri, %struct.BMLoop*** %ltri.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMLoop*** %ltri.addr, metadata !7672, metadata !DIExpression()), !dbg !7673
  store %struct.MLoopCol** %lcol, %struct.MLoopCol*** %lcol.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.MLoopCol*** %lcol.addr, metadata !7674, metadata !DIExpression()), !dbg !7675
  store i32 %cd_loop_color_offset, i32* %cd_loop_color_offset.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %cd_loop_color_offset.addr, metadata !7676, metadata !DIExpression()), !dbg !7677
  %0 = load %struct.BMLoop**, %struct.BMLoop*** %ltri.addr, align 8, !dbg !7678
  %arrayidx = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %0, i64 0, !dbg !7678
  %1 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx, align 8, !dbg !7678
  %head = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %1, i32 0, i32 0, !dbg !7678
  %data = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head, i32 0, i32 0, !dbg !7678
  %2 = load i8*, i8** %data, align 8, !dbg !7678
  %3 = load i32, i32* %cd_loop_color_offset.addr, align 4, !dbg !7678
  %idx.ext = sext i32 %3 to i64, !dbg !7678
  %add.ptr = getelementptr inbounds i8, i8* %2, i64 %idx.ext, !dbg !7678
  %4 = bitcast i8* %add.ptr to %struct.MLoopCol*, !dbg !7678
  %5 = load %struct.MLoopCol**, %struct.MLoopCol*** %lcol.addr, align 8, !dbg !7679
  %arrayidx1 = getelementptr inbounds %struct.MLoopCol*, %struct.MLoopCol** %5, i64 0, !dbg !7679
  store %struct.MLoopCol* %4, %struct.MLoopCol** %arrayidx1, align 8, !dbg !7680
  %6 = load %struct.BMLoop**, %struct.BMLoop*** %ltri.addr, align 8, !dbg !7681
  %arrayidx2 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %6, i64 1, !dbg !7681
  %7 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx2, align 8, !dbg !7681
  %head3 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %7, i32 0, i32 0, !dbg !7681
  %data4 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head3, i32 0, i32 0, !dbg !7681
  %8 = load i8*, i8** %data4, align 8, !dbg !7681
  %9 = load i32, i32* %cd_loop_color_offset.addr, align 4, !dbg !7681
  %idx.ext5 = sext i32 %9 to i64, !dbg !7681
  %add.ptr6 = getelementptr inbounds i8, i8* %8, i64 %idx.ext5, !dbg !7681
  %10 = bitcast i8* %add.ptr6 to %struct.MLoopCol*, !dbg !7681
  %11 = load %struct.MLoopCol**, %struct.MLoopCol*** %lcol.addr, align 8, !dbg !7682
  %arrayidx7 = getelementptr inbounds %struct.MLoopCol*, %struct.MLoopCol** %11, i64 1, !dbg !7682
  store %struct.MLoopCol* %10, %struct.MLoopCol** %arrayidx7, align 8, !dbg !7683
  %12 = load %struct.BMLoop**, %struct.BMLoop*** %ltri.addr, align 8, !dbg !7684
  %arrayidx8 = getelementptr inbounds %struct.BMLoop*, %struct.BMLoop** %12, i64 2, !dbg !7684
  %13 = load %struct.BMLoop*, %struct.BMLoop** %arrayidx8, align 8, !dbg !7684
  %head9 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %13, i32 0, i32 0, !dbg !7684
  %data10 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head9, i32 0, i32 0, !dbg !7684
  %14 = load i8*, i8** %data10, align 8, !dbg !7684
  %15 = load i32, i32* %cd_loop_color_offset.addr, align 4, !dbg !7684
  %idx.ext11 = sext i32 %15 to i64, !dbg !7684
  %add.ptr12 = getelementptr inbounds i8, i8* %14, i64 %idx.ext11, !dbg !7684
  %16 = bitcast i8* %add.ptr12 to %struct.MLoopCol*, !dbg !7684
  %17 = load %struct.MLoopCol**, %struct.MLoopCol*** %lcol.addr, align 8, !dbg !7685
  %arrayidx13 = getelementptr inbounds %struct.MLoopCol*, %struct.MLoopCol** %17, i64 2, !dbg !7685
  store %struct.MLoopCol* %16, %struct.MLoopCol** %arrayidx13, align 8, !dbg !7686
  ret void, !dbg !7687
}

declare dso_local void @glTexCoord2fv(float*) #2

declare dso_local void @DM_vertex_attributes_from_gpu(%struct.DerivedMesh*, %struct.GPUVertexAttribs*, %struct.DMVertexAttribs*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @emdm_pass_attrib_vertex_glsl(%struct.DMVertexAttribs* %attribs, %struct.BMLoop* %loop, i32 %index_in_face) #0 !dbg !7688 {
entry:
  %attribs.addr = alloca %struct.DMVertexAttribs*, align 8
  %loop.addr = alloca %struct.BMLoop*, align 8
  %index_in_face.addr = alloca i32, align 4
  %eve = alloca %struct.BMVert*, align 8
  %i = alloca i32, align 4
  %zero = alloca [4 x float], align 16
  %index = alloca i32, align 4
  %orco = alloca float*, align 8
  %uv = alloca float*, align 8
  %luv = alloca %struct.MLoopUV*, align 8
  %col = alloca [4 x i8], align 1
  %cp = alloca %struct.MLoopCol*, align 8
  %index73 = alloca i32, align 4
  %tang = alloca float*, align 8
  store %struct.DMVertexAttribs* %attribs, %struct.DMVertexAttribs** %attribs.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.DMVertexAttribs** %attribs.addr, metadata !7695, metadata !DIExpression()), !dbg !7696
  store %struct.BMLoop* %loop, %struct.BMLoop** %loop.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMLoop** %loop.addr, metadata !7697, metadata !DIExpression()), !dbg !7698
  store i32 %index_in_face, i32* %index_in_face.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index_in_face.addr, metadata !7699, metadata !DIExpression()), !dbg !7700
  call void @llvm.dbg.declare(metadata %struct.BMVert** %eve, metadata !7701, metadata !DIExpression()), !dbg !7702
  %0 = load %struct.BMLoop*, %struct.BMLoop** %loop.addr, align 8, !dbg !7703
  %v = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %0, i32 0, i32 1, !dbg !7704
  %1 = load %struct.BMVert*, %struct.BMVert** %v, align 8, !dbg !7704
  store %struct.BMVert* %1, %struct.BMVert** %eve, align 8, !dbg !7702
  call void @llvm.dbg.declare(metadata i32* %i, metadata !7705, metadata !DIExpression()), !dbg !7706
  call void @llvm.dbg.declare(metadata [4 x float]* %zero, metadata !7707, metadata !DIExpression()), !dbg !7709
  %2 = bitcast [4 x float]* %zero to i8*, !dbg !7709
  call void @llvm.memset.p0i8.i64(i8* align 16 %2, i8 0, i64 16, i1 false), !dbg !7709
  %3 = load %struct.DMVertexAttribs*, %struct.DMVertexAttribs** %attribs.addr, align 8, !dbg !7710
  %totorco = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %3, i32 0, i32 7, !dbg !7712
  %4 = load i32, i32* %totorco, align 4, !dbg !7712
  %tobool = icmp ne i32 %4, 0, !dbg !7710
  br i1 %tobool, label %if.then, label %if.end10, !dbg !7713

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata i32* %index, metadata !7714, metadata !DIExpression()), !dbg !7716
  %5 = load %struct.BMVert*, %struct.BMVert** %eve, align 8, !dbg !7717
  %head = getelementptr inbounds %struct.BMVert, %struct.BMVert* %5, i32 0, i32 0, !dbg !7717
  %call = call i32 @_bm_elem_index_get(%struct.BMHeader* %head), !dbg !7717
  store i32 %call, i32* %index, align 4, !dbg !7716
  call void @llvm.dbg.declare(metadata float** %orco, metadata !7718, metadata !DIExpression()), !dbg !7719
  %6 = load %struct.DMVertexAttribs*, %struct.DMVertexAttribs** %attribs.addr, align 8, !dbg !7720
  %orco1 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %6, i32 0, i32 3, !dbg !7721
  %array = getelementptr inbounds %struct.anon.3, %struct.anon.3* %orco1, i32 0, i32 0, !dbg !7722
  %7 = load [3 x float]*, [3 x float]** %array, align 8, !dbg !7722
  %tobool2 = icmp ne [3 x float]* %7, null, !dbg !7723
  br i1 %tobool2, label %cond.true, label %cond.false, !dbg !7723

cond.true:                                        ; preds = %if.then
  %8 = load %struct.DMVertexAttribs*, %struct.DMVertexAttribs** %attribs.addr, align 8, !dbg !7724
  %orco3 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %8, i32 0, i32 3, !dbg !7725
  %array4 = getelementptr inbounds %struct.anon.3, %struct.anon.3* %orco3, i32 0, i32 0, !dbg !7726
  %9 = load [3 x float]*, [3 x float]** %array4, align 8, !dbg !7726
  %10 = load i32, i32* %index, align 4, !dbg !7727
  %idxprom = sext i32 %10 to i64, !dbg !7724
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %9, i64 %idxprom, !dbg !7724
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %arrayidx, i64 0, i64 0, !dbg !7724
  br label %cond.end, !dbg !7723

cond.false:                                       ; preds = %if.then
  %arraydecay5 = getelementptr inbounds [4 x float], [4 x float]* %zero, i64 0, i64 0, !dbg !7728
  br label %cond.end, !dbg !7723

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float* [ %arraydecay, %cond.true ], [ %arraydecay5, %cond.false ], !dbg !7723
  store float* %cond, float** %orco, align 8, !dbg !7719
  %11 = load %struct.DMVertexAttribs*, %struct.DMVertexAttribs** %attribs.addr, align 8, !dbg !7729
  %orco6 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %11, i32 0, i32 3, !dbg !7731
  %gl_texco = getelementptr inbounds %struct.anon.3, %struct.anon.3* %orco6, i32 0, i32 3, !dbg !7732
  %12 = load i32, i32* %gl_texco, align 8, !dbg !7732
  %tobool7 = icmp ne i32 %12, 0, !dbg !7729
  br i1 %tobool7, label %if.then8, label %if.else, !dbg !7733

if.then8:                                         ; preds = %cond.end
  %13 = load float*, float** %orco, align 8, !dbg !7734
  call void @glTexCoord3fv(float* %13), !dbg !7735
  br label %if.end, !dbg !7735

if.else:                                          ; preds = %cond.end
  %14 = load void (i32, float*)*, void (i32, float*)** @__glewVertexAttrib3fvARB, align 8, !dbg !7736
  %15 = load %struct.DMVertexAttribs*, %struct.DMVertexAttribs** %attribs.addr, align 8, !dbg !7737
  %orco9 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %15, i32 0, i32 3, !dbg !7738
  %gl_index = getelementptr inbounds %struct.anon.3, %struct.anon.3* %orco9, i32 0, i32 2, !dbg !7739
  %16 = load i32, i32* %gl_index, align 4, !dbg !7739
  %17 = load float*, float** %orco, align 8, !dbg !7740
  call void %14(i32 %16, float* %17), !dbg !7736
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then8
  br label %if.end10, !dbg !7741

if.end10:                                         ; preds = %if.end, %entry
  store i32 0, i32* %i, align 4, !dbg !7742
  br label %for.cond, !dbg !7744

for.cond:                                         ; preds = %for.inc, %if.end10
  %18 = load i32, i32* %i, align 4, !dbg !7745
  %19 = load %struct.DMVertexAttribs*, %struct.DMVertexAttribs** %attribs.addr, align 8, !dbg !7747
  %tottface = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %19, i32 0, i32 4, !dbg !7748
  %20 = load i32, i32* %tottface, align 8, !dbg !7748
  %cmp = icmp slt i32 %18, %20, !dbg !7749
  br i1 %cmp, label %for.body, label %for.end, !dbg !7750

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata float** %uv, metadata !7751, metadata !DIExpression()), !dbg !7753
  %21 = load %struct.DMVertexAttribs*, %struct.DMVertexAttribs** %attribs.addr, align 8, !dbg !7754
  %tface = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %21, i32 0, i32 0, !dbg !7756
  %22 = load i32, i32* %i, align 4, !dbg !7757
  %idxprom11 = sext i32 %22 to i64, !dbg !7754
  %arrayidx12 = getelementptr inbounds [8 x %struct.anon], [8 x %struct.anon]* %tface, i64 0, i64 %idxprom11, !dbg !7754
  %em_offset = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx12, i32 0, i32 1, !dbg !7758
  %23 = load i32, i32* %em_offset, align 8, !dbg !7758
  %cmp13 = icmp ne i32 %23, -1, !dbg !7759
  br i1 %cmp13, label %if.then14, label %if.else22, !dbg !7760

if.then14:                                        ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.MLoopUV** %luv, metadata !7761, metadata !DIExpression()), !dbg !7765
  %24 = load %struct.BMLoop*, %struct.BMLoop** %loop.addr, align 8, !dbg !7766
  %head15 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %24, i32 0, i32 0, !dbg !7766
  %data = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head15, i32 0, i32 0, !dbg !7766
  %25 = load i8*, i8** %data, align 8, !dbg !7766
  %26 = load %struct.DMVertexAttribs*, %struct.DMVertexAttribs** %attribs.addr, align 8, !dbg !7766
  %tface16 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %26, i32 0, i32 0, !dbg !7766
  %27 = load i32, i32* %i, align 4, !dbg !7766
  %idxprom17 = sext i32 %27 to i64, !dbg !7766
  %arrayidx18 = getelementptr inbounds [8 x %struct.anon], [8 x %struct.anon]* %tface16, i64 0, i64 %idxprom17, !dbg !7766
  %em_offset19 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx18, i32 0, i32 1, !dbg !7766
  %28 = load i32, i32* %em_offset19, align 8, !dbg !7766
  %idx.ext = sext i32 %28 to i64, !dbg !7766
  %add.ptr = getelementptr inbounds i8, i8* %25, i64 %idx.ext, !dbg !7766
  %29 = bitcast i8* %add.ptr to %struct.MLoopUV*, !dbg !7766
  store %struct.MLoopUV* %29, %struct.MLoopUV** %luv, align 8, !dbg !7765
  %30 = load %struct.MLoopUV*, %struct.MLoopUV** %luv, align 8, !dbg !7767
  %uv20 = getelementptr inbounds %struct.MLoopUV, %struct.MLoopUV* %30, i32 0, i32 0, !dbg !7768
  %arraydecay21 = getelementptr inbounds [2 x float], [2 x float]* %uv20, i64 0, i64 0, !dbg !7767
  store float* %arraydecay21, float** %uv, align 8, !dbg !7769
  br label %if.end24, !dbg !7770

if.else22:                                        ; preds = %for.body
  %arraydecay23 = getelementptr inbounds [4 x float], [4 x float]* %zero, i64 0, i64 0, !dbg !7771
  store float* %arraydecay23, float** %uv, align 8, !dbg !7773
  br label %if.end24

if.end24:                                         ; preds = %if.else22, %if.then14
  %31 = load %struct.DMVertexAttribs*, %struct.DMVertexAttribs** %attribs.addr, align 8, !dbg !7774
  %tface25 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %31, i32 0, i32 0, !dbg !7776
  %32 = load i32, i32* %i, align 4, !dbg !7777
  %idxprom26 = sext i32 %32 to i64, !dbg !7774
  %arrayidx27 = getelementptr inbounds [8 x %struct.anon], [8 x %struct.anon]* %tface25, i64 0, i64 %idxprom26, !dbg !7774
  %gl_texco28 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx27, i32 0, i32 3, !dbg !7778
  %33 = load i32, i32* %gl_texco28, align 8, !dbg !7778
  %tobool29 = icmp ne i32 %33, 0, !dbg !7774
  br i1 %tobool29, label %if.then30, label %if.else31, !dbg !7779

if.then30:                                        ; preds = %if.end24
  %34 = load float*, float** %uv, align 8, !dbg !7780
  call void @glTexCoord2fv(float* %34), !dbg !7781
  br label %if.end36, !dbg !7781

if.else31:                                        ; preds = %if.end24
  %35 = load void (i32, float*)*, void (i32, float*)** @__glewVertexAttrib2fvARB, align 8, !dbg !7782
  %36 = load %struct.DMVertexAttribs*, %struct.DMVertexAttribs** %attribs.addr, align 8, !dbg !7783
  %tface32 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %36, i32 0, i32 0, !dbg !7784
  %37 = load i32, i32* %i, align 4, !dbg !7785
  %idxprom33 = sext i32 %37 to i64, !dbg !7783
  %arrayidx34 = getelementptr inbounds [8 x %struct.anon], [8 x %struct.anon]* %tface32, i64 0, i64 %idxprom33, !dbg !7783
  %gl_index35 = getelementptr inbounds %struct.anon, %struct.anon* %arrayidx34, i32 0, i32 2, !dbg !7786
  %38 = load i32, i32* %gl_index35, align 4, !dbg !7786
  %39 = load float*, float** %uv, align 8, !dbg !7787
  call void %35(i32 %38, float* %39), !dbg !7782
  br label %if.end36

if.end36:                                         ; preds = %if.else31, %if.then30
  br label %for.inc, !dbg !7788

for.inc:                                          ; preds = %if.end36
  %40 = load i32, i32* %i, align 4, !dbg !7789
  %inc = add nsw i32 %40, 1, !dbg !7789
  store i32 %inc, i32* %i, align 4, !dbg !7789
  br label %for.cond, !dbg !7790, !llvm.loop !7791

for.end:                                          ; preds = %for.cond
  store i32 0, i32* %i, align 4, !dbg !7793
  br label %for.cond37, !dbg !7795

for.cond37:                                       ; preds = %for.inc68, %for.end
  %41 = load i32, i32* %i, align 4, !dbg !7796
  %42 = load %struct.DMVertexAttribs*, %struct.DMVertexAttribs** %attribs.addr, align 8, !dbg !7798
  %totmcol = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %42, i32 0, i32 5, !dbg !7799
  %43 = load i32, i32* %totmcol, align 4, !dbg !7799
  %cmp38 = icmp slt i32 %41, %43, !dbg !7800
  br i1 %cmp38, label %for.body39, label %for.end70, !dbg !7801

for.body39:                                       ; preds = %for.cond37
  call void @llvm.dbg.declare(metadata [4 x i8]* %col, metadata !7802, metadata !DIExpression()), !dbg !7805
  %44 = load %struct.DMVertexAttribs*, %struct.DMVertexAttribs** %attribs.addr, align 8, !dbg !7806
  %mcol = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %44, i32 0, i32 1, !dbg !7808
  %45 = load i32, i32* %i, align 4, !dbg !7809
  %idxprom40 = sext i32 %45 to i64, !dbg !7806
  %arrayidx41 = getelementptr inbounds [8 x %struct.anon.1], [8 x %struct.anon.1]* %mcol, i64 0, i64 %idxprom40, !dbg !7806
  %em_offset42 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %arrayidx41, i32 0, i32 1, !dbg !7810
  %46 = load i32, i32* %em_offset42, align 8, !dbg !7810
  %cmp43 = icmp ne i32 %46, -1, !dbg !7811
  br i1 %cmp43, label %if.then44, label %if.else57, !dbg !7812

if.then44:                                        ; preds = %for.body39
  call void @llvm.dbg.declare(metadata %struct.MLoopCol** %cp, metadata !7813, metadata !DIExpression()), !dbg !7815
  %47 = load %struct.BMLoop*, %struct.BMLoop** %loop.addr, align 8, !dbg !7816
  %head45 = getelementptr inbounds %struct.BMLoop, %struct.BMLoop* %47, i32 0, i32 0, !dbg !7816
  %data46 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %head45, i32 0, i32 0, !dbg !7816
  %48 = load i8*, i8** %data46, align 8, !dbg !7816
  %49 = load %struct.DMVertexAttribs*, %struct.DMVertexAttribs** %attribs.addr, align 8, !dbg !7816
  %mcol47 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %49, i32 0, i32 1, !dbg !7816
  %50 = load i32, i32* %i, align 4, !dbg !7816
  %idxprom48 = sext i32 %50 to i64, !dbg !7816
  %arrayidx49 = getelementptr inbounds [8 x %struct.anon.1], [8 x %struct.anon.1]* %mcol47, i64 0, i64 %idxprom48, !dbg !7816
  %em_offset50 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %arrayidx49, i32 0, i32 1, !dbg !7816
  %51 = load i32, i32* %em_offset50, align 8, !dbg !7816
  %idx.ext51 = sext i32 %51 to i64, !dbg !7816
  %add.ptr52 = getelementptr inbounds i8, i8* %48, i64 %idx.ext51, !dbg !7816
  %52 = bitcast i8* %add.ptr52 to %struct.MLoopCol*, !dbg !7816
  store %struct.MLoopCol* %52, %struct.MLoopCol** %cp, align 8, !dbg !7815
  %53 = load %struct.MLoopCol*, %struct.MLoopCol** %cp, align 8, !dbg !7817
  %b = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %53, i32 0, i32 2, !dbg !7818
  %54 = load i8, i8* %b, align 1, !dbg !7818
  %arrayidx53 = getelementptr inbounds [4 x i8], [4 x i8]* %col, i64 0, i64 0, !dbg !7819
  store i8 %54, i8* %arrayidx53, align 1, !dbg !7820
  %55 = load %struct.MLoopCol*, %struct.MLoopCol** %cp, align 8, !dbg !7821
  %g = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %55, i32 0, i32 1, !dbg !7822
  %56 = load i8, i8* %g, align 1, !dbg !7822
  %arrayidx54 = getelementptr inbounds [4 x i8], [4 x i8]* %col, i64 0, i64 1, !dbg !7823
  store i8 %56, i8* %arrayidx54, align 1, !dbg !7824
  %57 = load %struct.MLoopCol*, %struct.MLoopCol** %cp, align 8, !dbg !7825
  %r = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %57, i32 0, i32 0, !dbg !7826
  %58 = load i8, i8* %r, align 1, !dbg !7826
  %arrayidx55 = getelementptr inbounds [4 x i8], [4 x i8]* %col, i64 0, i64 2, !dbg !7827
  store i8 %58, i8* %arrayidx55, align 1, !dbg !7828
  %59 = load %struct.MLoopCol*, %struct.MLoopCol** %cp, align 8, !dbg !7829
  %a = getelementptr inbounds %struct.MLoopCol, %struct.MLoopCol* %59, i32 0, i32 3, !dbg !7830
  %60 = load i8, i8* %a, align 1, !dbg !7830
  %arrayidx56 = getelementptr inbounds [4 x i8], [4 x i8]* %col, i64 0, i64 3, !dbg !7831
  store i8 %60, i8* %arrayidx56, align 1, !dbg !7832
  br label %if.end62, !dbg !7833

if.else57:                                        ; preds = %for.body39
  %arrayidx58 = getelementptr inbounds [4 x i8], [4 x i8]* %col, i64 0, i64 0, !dbg !7834
  store i8 0, i8* %arrayidx58, align 1, !dbg !7836
  %arrayidx59 = getelementptr inbounds [4 x i8], [4 x i8]* %col, i64 0, i64 1, !dbg !7837
  store i8 0, i8* %arrayidx59, align 1, !dbg !7838
  %arrayidx60 = getelementptr inbounds [4 x i8], [4 x i8]* %col, i64 0, i64 2, !dbg !7839
  store i8 0, i8* %arrayidx60, align 1, !dbg !7840
  %arrayidx61 = getelementptr inbounds [4 x i8], [4 x i8]* %col, i64 0, i64 3, !dbg !7841
  store i8 0, i8* %arrayidx61, align 1, !dbg !7842
  br label %if.end62

if.end62:                                         ; preds = %if.else57, %if.then44
  %61 = load void (i32, i8*)*, void (i32, i8*)** @__glewVertexAttrib4ubvARB, align 8, !dbg !7843
  %62 = load %struct.DMVertexAttribs*, %struct.DMVertexAttribs** %attribs.addr, align 8, !dbg !7844
  %mcol63 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %62, i32 0, i32 1, !dbg !7845
  %63 = load i32, i32* %i, align 4, !dbg !7846
  %idxprom64 = sext i32 %63 to i64, !dbg !7844
  %arrayidx65 = getelementptr inbounds [8 x %struct.anon.1], [8 x %struct.anon.1]* %mcol63, i64 0, i64 %idxprom64, !dbg !7844
  %gl_index66 = getelementptr inbounds %struct.anon.1, %struct.anon.1* %arrayidx65, i32 0, i32 2, !dbg !7847
  %64 = load i32, i32* %gl_index66, align 4, !dbg !7847
  %arraydecay67 = getelementptr inbounds [4 x i8], [4 x i8]* %col, i64 0, i64 0, !dbg !7848
  call void %61(i32 %64, i8* %arraydecay67), !dbg !7843
  br label %for.inc68, !dbg !7849

for.inc68:                                        ; preds = %if.end62
  %65 = load i32, i32* %i, align 4, !dbg !7850
  %inc69 = add nsw i32 %65, 1, !dbg !7850
  store i32 %inc69, i32* %i, align 4, !dbg !7850
  br label %for.cond37, !dbg !7851, !llvm.loop !7852

for.end70:                                        ; preds = %for.cond37
  %66 = load %struct.DMVertexAttribs*, %struct.DMVertexAttribs** %attribs.addr, align 8, !dbg !7854
  %tottang = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %66, i32 0, i32 6, !dbg !7856
  %67 = load i32, i32* %tottang, align 8, !dbg !7856
  %tobool71 = icmp ne i32 %67, 0, !dbg !7854
  br i1 %tobool71, label %if.then72, label %if.end89, !dbg !7857

if.then72:                                        ; preds = %for.end70
  call void @llvm.dbg.declare(metadata i32* %index73, metadata !7858, metadata !DIExpression()), !dbg !7860
  %68 = load i32, i32* %i, align 4, !dbg !7861
  %mul = mul nsw i32 %68, 4, !dbg !7862
  %69 = load i32, i32* %index_in_face.addr, align 4, !dbg !7863
  %add = add nsw i32 %mul, %69, !dbg !7864
  store i32 %add, i32* %index73, align 4, !dbg !7860
  call void @llvm.dbg.declare(metadata float** %tang, metadata !7865, metadata !DIExpression()), !dbg !7866
  %70 = load %struct.DMVertexAttribs*, %struct.DMVertexAttribs** %attribs.addr, align 8, !dbg !7867
  %tang74 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %70, i32 0, i32 2, !dbg !7868
  %array75 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %tang74, i32 0, i32 0, !dbg !7869
  %71 = load [4 x float]*, [4 x float]** %array75, align 8, !dbg !7869
  %tobool76 = icmp ne [4 x float]* %71, null, !dbg !7870
  br i1 %tobool76, label %cond.true77, label %cond.false83, !dbg !7870

cond.true77:                                      ; preds = %if.then72
  %72 = load %struct.DMVertexAttribs*, %struct.DMVertexAttribs** %attribs.addr, align 8, !dbg !7871
  %tang78 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %72, i32 0, i32 2, !dbg !7872
  %array79 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %tang78, i32 0, i32 0, !dbg !7873
  %73 = load [4 x float]*, [4 x float]** %array79, align 8, !dbg !7873
  %74 = load i32, i32* %index73, align 4, !dbg !7874
  %idxprom80 = sext i32 %74 to i64, !dbg !7871
  %arrayidx81 = getelementptr inbounds [4 x float], [4 x float]* %73, i64 %idxprom80, !dbg !7871
  %arraydecay82 = getelementptr inbounds [4 x float], [4 x float]* %arrayidx81, i64 0, i64 0, !dbg !7871
  br label %cond.end85, !dbg !7870

cond.false83:                                     ; preds = %if.then72
  %arraydecay84 = getelementptr inbounds [4 x float], [4 x float]* %zero, i64 0, i64 0, !dbg !7875
  br label %cond.end85, !dbg !7870

cond.end85:                                       ; preds = %cond.false83, %cond.true77
  %cond86 = phi float* [ %arraydecay82, %cond.true77 ], [ %arraydecay84, %cond.false83 ], !dbg !7870
  store float* %cond86, float** %tang, align 8, !dbg !7866
  %75 = load void (i32, float*)*, void (i32, float*)** @__glewVertexAttrib4fvARB, align 8, !dbg !7876
  %76 = load %struct.DMVertexAttribs*, %struct.DMVertexAttribs** %attribs.addr, align 8, !dbg !7877
  %tang87 = getelementptr inbounds %struct.DMVertexAttribs, %struct.DMVertexAttribs* %76, i32 0, i32 2, !dbg !7878
  %gl_index88 = getelementptr inbounds %struct.anon.2, %struct.anon.2* %tang87, i32 0, i32 2, !dbg !7879
  %77 = load i32, i32* %gl_index88, align 4, !dbg !7879
  %78 = load float*, float** %tang, align 8, !dbg !7880
  call void %75(i32 %77, float* %78), !dbg !7876
  br label %if.end89, !dbg !7881

if.end89:                                         ; preds = %cond.end85, %for.end70
  ret void, !dbg !7882
}

declare dso_local void @glTexCoord3fv(float*) #2

declare dso_local void @glVertex2fv(float*) #2

declare dso_local i32 @DM_release(%struct.DerivedMesh*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @BM_iter_init(%struct.BMIter* %iter, %struct.BMesh* %bm, i8 zeroext %itype, i8* %data) #0 !dbg !7883 {
entry:
  %retval = alloca i8, align 1
  %iter.addr = alloca %struct.BMIter*, align 8
  %bm.addr = alloca %struct.BMesh*, align 8
  %itype.addr = alloca i8, align 1
  %data.addr = alloca i8*, align 8
  store %struct.BMIter* %iter, %struct.BMIter** %iter.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMIter** %iter.addr, metadata !7886, metadata !DIExpression()), !dbg !7887
  store %struct.BMesh* %bm, %struct.BMesh** %bm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMesh** %bm.addr, metadata !7888, metadata !DIExpression()), !dbg !7889
  store i8 %itype, i8* %itype.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %itype.addr, metadata !7890, metadata !DIExpression()), !dbg !7891
  store i8* %data, i8** %data.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %data.addr, metadata !7892, metadata !DIExpression()), !dbg !7893
  %0 = load i8, i8* %itype.addr, align 1, !dbg !7894
  %1 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !7895
  %itype1 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %1, i32 0, i32 4, !dbg !7896
  store i8 %0, i8* %itype1, align 4, !dbg !7897
  %2 = load i8, i8* %itype.addr, align 1, !dbg !7898
  %conv = zext i8 %2 to i32, !dbg !7899
  switch i32 %conv, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb3
    i32 3, label %sw.bb10
    i32 4, label %sw.bb17
    i32 5, label %sw.bb21
    i32 6, label %sw.bb26
    i32 7, label %sw.bb31
    i32 8, label %sw.bb35
    i32 9, label %sw.bb40
    i32 10, label %sw.bb44
    i32 11, label %sw.bb49
    i32 13, label %sw.bb54
    i32 14, label %sw.bb58
  ], !dbg !7900

sw.bb:                                            ; preds = %entry
  %3 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !7901
  %begin = getelementptr inbounds %struct.BMIter, %struct.BMIter* %3, i32 0, i32 1, !dbg !7903
  store void (i8*)* bitcast (void (%struct.BMIter__elem_of_mesh*)* @bmiter__elem_of_mesh_begin to void (i8*)*), void (i8*)** %begin, align 8, !dbg !7904
  %4 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !7905
  %step = getelementptr inbounds %struct.BMIter, %struct.BMIter* %4, i32 0, i32 2, !dbg !7906
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__elem_of_mesh*)* @bmiter__elem_of_mesh_step to i8* (i8*)*), i8* (i8*)** %step, align 8, !dbg !7907
  %5 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !7908
  %vpool = getelementptr inbounds %struct.BMesh, %struct.BMesh* %5, i32 0, i32 9, !dbg !7909
  %6 = load %struct.BLI_mempool*, %struct.BLI_mempool** %vpool, align 8, !dbg !7909
  %7 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !7910
  %data2 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %7, i32 0, i32 0, !dbg !7911
  %elem_of_mesh = bitcast %union.anon.0* %data2 to %struct.BMIter__elem_of_mesh*, !dbg !7912
  %pooliter = getelementptr inbounds %struct.BMIter__elem_of_mesh, %struct.BMIter__elem_of_mesh* %elem_of_mesh, i32 0, i32 0, !dbg !7913
  %pool = getelementptr inbounds %struct.BLI_mempool_iter, %struct.BLI_mempool_iter* %pooliter, i32 0, i32 0, !dbg !7914
  store %struct.BLI_mempool* %6, %struct.BLI_mempool** %pool, align 8, !dbg !7915
  br label %sw.epilog, !dbg !7916

sw.bb3:                                           ; preds = %entry
  %8 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !7917
  %begin4 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %8, i32 0, i32 1, !dbg !7918
  store void (i8*)* bitcast (void (%struct.BMIter__elem_of_mesh*)* @bmiter__elem_of_mesh_begin to void (i8*)*), void (i8*)** %begin4, align 8, !dbg !7919
  %9 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !7920
  %step5 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %9, i32 0, i32 2, !dbg !7921
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__elem_of_mesh*)* @bmiter__elem_of_mesh_step to i8* (i8*)*), i8* (i8*)** %step5, align 8, !dbg !7922
  %10 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !7923
  %epool = getelementptr inbounds %struct.BMesh, %struct.BMesh* %10, i32 0, i32 10, !dbg !7924
  %11 = load %struct.BLI_mempool*, %struct.BLI_mempool** %epool, align 8, !dbg !7924
  %12 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !7925
  %data6 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %12, i32 0, i32 0, !dbg !7926
  %elem_of_mesh7 = bitcast %union.anon.0* %data6 to %struct.BMIter__elem_of_mesh*, !dbg !7927
  %pooliter8 = getelementptr inbounds %struct.BMIter__elem_of_mesh, %struct.BMIter__elem_of_mesh* %elem_of_mesh7, i32 0, i32 0, !dbg !7928
  %pool9 = getelementptr inbounds %struct.BLI_mempool_iter, %struct.BLI_mempool_iter* %pooliter8, i32 0, i32 0, !dbg !7929
  store %struct.BLI_mempool* %11, %struct.BLI_mempool** %pool9, align 8, !dbg !7930
  br label %sw.epilog, !dbg !7931

sw.bb10:                                          ; preds = %entry
  %13 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !7932
  %begin11 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %13, i32 0, i32 1, !dbg !7933
  store void (i8*)* bitcast (void (%struct.BMIter__elem_of_mesh*)* @bmiter__elem_of_mesh_begin to void (i8*)*), void (i8*)** %begin11, align 8, !dbg !7934
  %14 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !7935
  %step12 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %14, i32 0, i32 2, !dbg !7936
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__elem_of_mesh*)* @bmiter__elem_of_mesh_step to i8* (i8*)*), i8* (i8*)** %step12, align 8, !dbg !7937
  %15 = load %struct.BMesh*, %struct.BMesh** %bm.addr, align 8, !dbg !7938
  %fpool = getelementptr inbounds %struct.BMesh, %struct.BMesh* %15, i32 0, i32 12, !dbg !7939
  %16 = load %struct.BLI_mempool*, %struct.BLI_mempool** %fpool, align 8, !dbg !7939
  %17 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !7940
  %data13 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %17, i32 0, i32 0, !dbg !7941
  %elem_of_mesh14 = bitcast %union.anon.0* %data13 to %struct.BMIter__elem_of_mesh*, !dbg !7942
  %pooliter15 = getelementptr inbounds %struct.BMIter__elem_of_mesh, %struct.BMIter__elem_of_mesh* %elem_of_mesh14, i32 0, i32 0, !dbg !7943
  %pool16 = getelementptr inbounds %struct.BLI_mempool_iter, %struct.BLI_mempool_iter* %pooliter15, i32 0, i32 0, !dbg !7944
  store %struct.BLI_mempool* %16, %struct.BLI_mempool** %pool16, align 8, !dbg !7945
  br label %sw.epilog, !dbg !7946

sw.bb17:                                          ; preds = %entry
  %18 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !7947
  %begin18 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %18, i32 0, i32 1, !dbg !7948
  store void (i8*)* bitcast (void (%struct.BMIter__edge_of_vert*)* @bmiter__edge_of_vert_begin to void (i8*)*), void (i8*)** %begin18, align 8, !dbg !7949
  %19 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !7950
  %step19 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %19, i32 0, i32 2, !dbg !7951
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__edge_of_vert*)* @bmiter__edge_of_vert_step to i8* (i8*)*), i8* (i8*)** %step19, align 8, !dbg !7952
  %20 = load i8*, i8** %data.addr, align 8, !dbg !7953
  %21 = bitcast i8* %20 to %struct.BMVert*, !dbg !7954
  %22 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !7955
  %data20 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %22, i32 0, i32 0, !dbg !7956
  %edge_of_vert = bitcast %union.anon.0* %data20 to %struct.BMIter__edge_of_vert*, !dbg !7957
  %vdata = getelementptr inbounds %struct.BMIter__edge_of_vert, %struct.BMIter__edge_of_vert* %edge_of_vert, i32 0, i32 0, !dbg !7958
  store %struct.BMVert* %21, %struct.BMVert** %vdata, align 8, !dbg !7959
  br label %sw.epilog, !dbg !7960

sw.bb21:                                          ; preds = %entry
  %23 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !7961
  %begin22 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %23, i32 0, i32 1, !dbg !7962
  store void (i8*)* bitcast (void (%struct.BMIter__face_of_vert*)* @bmiter__face_of_vert_begin to void (i8*)*), void (i8*)** %begin22, align 8, !dbg !7963
  %24 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !7964
  %step23 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %24, i32 0, i32 2, !dbg !7965
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__face_of_vert*)* @bmiter__face_of_vert_step to i8* (i8*)*), i8* (i8*)** %step23, align 8, !dbg !7966
  %25 = load i8*, i8** %data.addr, align 8, !dbg !7967
  %26 = bitcast i8* %25 to %struct.BMVert*, !dbg !7968
  %27 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !7969
  %data24 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %27, i32 0, i32 0, !dbg !7970
  %face_of_vert = bitcast %union.anon.0* %data24 to %struct.BMIter__face_of_vert*, !dbg !7971
  %vdata25 = getelementptr inbounds %struct.BMIter__face_of_vert, %struct.BMIter__face_of_vert* %face_of_vert, i32 0, i32 0, !dbg !7972
  store %struct.BMVert* %26, %struct.BMVert** %vdata25, align 8, !dbg !7973
  br label %sw.epilog, !dbg !7974

sw.bb26:                                          ; preds = %entry
  %28 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !7975
  %begin27 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %28, i32 0, i32 1, !dbg !7976
  store void (i8*)* bitcast (void (%struct.BMIter__loop_of_vert*)* @bmiter__loop_of_vert_begin to void (i8*)*), void (i8*)** %begin27, align 8, !dbg !7977
  %29 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !7978
  %step28 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %29, i32 0, i32 2, !dbg !7979
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__loop_of_vert*)* @bmiter__loop_of_vert_step to i8* (i8*)*), i8* (i8*)** %step28, align 8, !dbg !7980
  %30 = load i8*, i8** %data.addr, align 8, !dbg !7981
  %31 = bitcast i8* %30 to %struct.BMVert*, !dbg !7982
  %32 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !7983
  %data29 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %32, i32 0, i32 0, !dbg !7984
  %loop_of_vert = bitcast %union.anon.0* %data29 to %struct.BMIter__loop_of_vert*, !dbg !7985
  %vdata30 = getelementptr inbounds %struct.BMIter__loop_of_vert, %struct.BMIter__loop_of_vert* %loop_of_vert, i32 0, i32 0, !dbg !7986
  store %struct.BMVert* %31, %struct.BMVert** %vdata30, align 8, !dbg !7987
  br label %sw.epilog, !dbg !7988

sw.bb31:                                          ; preds = %entry
  %33 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !7989
  %begin32 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %33, i32 0, i32 1, !dbg !7990
  store void (i8*)* bitcast (void (%struct.BMIter__vert_of_edge*)* @bmiter__vert_of_edge_begin to void (i8*)*), void (i8*)** %begin32, align 8, !dbg !7991
  %34 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !7992
  %step33 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %34, i32 0, i32 2, !dbg !7993
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__vert_of_edge*)* @bmiter__vert_of_edge_step to i8* (i8*)*), i8* (i8*)** %step33, align 8, !dbg !7994
  %35 = load i8*, i8** %data.addr, align 8, !dbg !7995
  %36 = bitcast i8* %35 to %struct.BMEdge*, !dbg !7996
  %37 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !7997
  %data34 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %37, i32 0, i32 0, !dbg !7998
  %vert_of_edge = bitcast %union.anon.0* %data34 to %struct.BMIter__vert_of_edge*, !dbg !7999
  %edata = getelementptr inbounds %struct.BMIter__vert_of_edge, %struct.BMIter__vert_of_edge* %vert_of_edge, i32 0, i32 0, !dbg !8000
  store %struct.BMEdge* %36, %struct.BMEdge** %edata, align 8, !dbg !8001
  br label %sw.epilog, !dbg !8002

sw.bb35:                                          ; preds = %entry
  %38 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !8003
  %begin36 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %38, i32 0, i32 1, !dbg !8004
  store void (i8*)* bitcast (void (%struct.BMIter__face_of_edge*)* @bmiter__face_of_edge_begin to void (i8*)*), void (i8*)** %begin36, align 8, !dbg !8005
  %39 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !8006
  %step37 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %39, i32 0, i32 2, !dbg !8007
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__face_of_edge*)* @bmiter__face_of_edge_step to i8* (i8*)*), i8* (i8*)** %step37, align 8, !dbg !8008
  %40 = load i8*, i8** %data.addr, align 8, !dbg !8009
  %41 = bitcast i8* %40 to %struct.BMEdge*, !dbg !8010
  %42 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !8011
  %data38 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %42, i32 0, i32 0, !dbg !8012
  %face_of_edge = bitcast %union.anon.0* %data38 to %struct.BMIter__face_of_edge*, !dbg !8013
  %edata39 = getelementptr inbounds %struct.BMIter__face_of_edge, %struct.BMIter__face_of_edge* %face_of_edge, i32 0, i32 0, !dbg !8014
  store %struct.BMEdge* %41, %struct.BMEdge** %edata39, align 8, !dbg !8015
  br label %sw.epilog, !dbg !8016

sw.bb40:                                          ; preds = %entry
  %43 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !8017
  %begin41 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %43, i32 0, i32 1, !dbg !8018
  store void (i8*)* bitcast (void (%struct.BMIter__vert_of_face*)* @bmiter__vert_of_face_begin to void (i8*)*), void (i8*)** %begin41, align 8, !dbg !8019
  %44 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !8020
  %step42 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %44, i32 0, i32 2, !dbg !8021
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__vert_of_face*)* @bmiter__vert_of_face_step to i8* (i8*)*), i8* (i8*)** %step42, align 8, !dbg !8022
  %45 = load i8*, i8** %data.addr, align 8, !dbg !8023
  %46 = bitcast i8* %45 to %struct.BMFace*, !dbg !8024
  %47 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !8025
  %data43 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %47, i32 0, i32 0, !dbg !8026
  %vert_of_face = bitcast %union.anon.0* %data43 to %struct.BMIter__vert_of_face*, !dbg !8027
  %pdata = getelementptr inbounds %struct.BMIter__vert_of_face, %struct.BMIter__vert_of_face* %vert_of_face, i32 0, i32 0, !dbg !8028
  store %struct.BMFace* %46, %struct.BMFace** %pdata, align 8, !dbg !8029
  br label %sw.epilog, !dbg !8030

sw.bb44:                                          ; preds = %entry
  %48 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !8031
  %begin45 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %48, i32 0, i32 1, !dbg !8032
  store void (i8*)* bitcast (void (%struct.BMIter__edge_of_face*)* @bmiter__edge_of_face_begin to void (i8*)*), void (i8*)** %begin45, align 8, !dbg !8033
  %49 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !8034
  %step46 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %49, i32 0, i32 2, !dbg !8035
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__edge_of_face*)* @bmiter__edge_of_face_step to i8* (i8*)*), i8* (i8*)** %step46, align 8, !dbg !8036
  %50 = load i8*, i8** %data.addr, align 8, !dbg !8037
  %51 = bitcast i8* %50 to %struct.BMFace*, !dbg !8038
  %52 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !8039
  %data47 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %52, i32 0, i32 0, !dbg !8040
  %edge_of_face = bitcast %union.anon.0* %data47 to %struct.BMIter__edge_of_face*, !dbg !8041
  %pdata48 = getelementptr inbounds %struct.BMIter__edge_of_face, %struct.BMIter__edge_of_face* %edge_of_face, i32 0, i32 0, !dbg !8042
  store %struct.BMFace* %51, %struct.BMFace** %pdata48, align 8, !dbg !8043
  br label %sw.epilog, !dbg !8044

sw.bb49:                                          ; preds = %entry
  %53 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !8045
  %begin50 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %53, i32 0, i32 1, !dbg !8046
  store void (i8*)* bitcast (void (%struct.BMIter__loop_of_face*)* @bmiter__loop_of_face_begin to void (i8*)*), void (i8*)** %begin50, align 8, !dbg !8047
  %54 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !8048
  %step51 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %54, i32 0, i32 2, !dbg !8049
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__loop_of_face*)* @bmiter__loop_of_face_step to i8* (i8*)*), i8* (i8*)** %step51, align 8, !dbg !8050
  %55 = load i8*, i8** %data.addr, align 8, !dbg !8051
  %56 = bitcast i8* %55 to %struct.BMFace*, !dbg !8052
  %57 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !8053
  %data52 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %57, i32 0, i32 0, !dbg !8054
  %loop_of_face = bitcast %union.anon.0* %data52 to %struct.BMIter__loop_of_face*, !dbg !8055
  %pdata53 = getelementptr inbounds %struct.BMIter__loop_of_face, %struct.BMIter__loop_of_face* %loop_of_face, i32 0, i32 0, !dbg !8056
  store %struct.BMFace* %56, %struct.BMFace** %pdata53, align 8, !dbg !8057
  br label %sw.epilog, !dbg !8058

sw.bb54:                                          ; preds = %entry
  %58 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !8059
  %begin55 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %58, i32 0, i32 1, !dbg !8060
  store void (i8*)* bitcast (void (%struct.BMIter__loop_of_loop*)* @bmiter__loop_of_loop_begin to void (i8*)*), void (i8*)** %begin55, align 8, !dbg !8061
  %59 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !8062
  %step56 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %59, i32 0, i32 2, !dbg !8063
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__loop_of_loop*)* @bmiter__loop_of_loop_step to i8* (i8*)*), i8* (i8*)** %step56, align 8, !dbg !8064
  %60 = load i8*, i8** %data.addr, align 8, !dbg !8065
  %61 = bitcast i8* %60 to %struct.BMLoop*, !dbg !8066
  %62 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !8067
  %data57 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %62, i32 0, i32 0, !dbg !8068
  %loop_of_loop = bitcast %union.anon.0* %data57 to %struct.BMIter__loop_of_loop*, !dbg !8069
  %ldata = getelementptr inbounds %struct.BMIter__loop_of_loop, %struct.BMIter__loop_of_loop* %loop_of_loop, i32 0, i32 0, !dbg !8070
  store %struct.BMLoop* %61, %struct.BMLoop** %ldata, align 8, !dbg !8071
  br label %sw.epilog, !dbg !8072

sw.bb58:                                          ; preds = %entry
  %63 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !8073
  %begin59 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %63, i32 0, i32 1, !dbg !8074
  store void (i8*)* bitcast (void (%struct.BMIter__loop_of_edge*)* @bmiter__loop_of_edge_begin to void (i8*)*), void (i8*)** %begin59, align 8, !dbg !8075
  %64 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !8076
  %step60 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %64, i32 0, i32 2, !dbg !8077
  store i8* (i8*)* bitcast (i8* (%struct.BMIter__loop_of_edge*)* @bmiter__loop_of_edge_step to i8* (i8*)*), i8* (i8*)** %step60, align 8, !dbg !8078
  %65 = load i8*, i8** %data.addr, align 8, !dbg !8079
  %66 = bitcast i8* %65 to %struct.BMEdge*, !dbg !8080
  %67 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !8081
  %data61 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %67, i32 0, i32 0, !dbg !8082
  %loop_of_edge = bitcast %union.anon.0* %data61 to %struct.BMIter__loop_of_edge*, !dbg !8083
  %edata62 = getelementptr inbounds %struct.BMIter__loop_of_edge, %struct.BMIter__loop_of_edge* %loop_of_edge, i32 0, i32 0, !dbg !8084
  store %struct.BMEdge* %66, %struct.BMEdge** %edata62, align 8, !dbg !8085
  br label %sw.epilog, !dbg !8086

sw.default:                                       ; preds = %entry
  store i8 0, i8* %retval, align 1, !dbg !8087
  br label %return, !dbg !8087

sw.epilog:                                        ; preds = %sw.bb58, %sw.bb54, %sw.bb49, %sw.bb44, %sw.bb40, %sw.bb35, %sw.bb31, %sw.bb26, %sw.bb21, %sw.bb17, %sw.bb10, %sw.bb3, %sw.bb
  %68 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !8088
  %begin63 = getelementptr inbounds %struct.BMIter, %struct.BMIter* %68, i32 0, i32 1, !dbg !8089
  %69 = load void (i8*)*, void (i8*)** %begin63, align 8, !dbg !8089
  %70 = load %struct.BMIter*, %struct.BMIter** %iter.addr, align 8, !dbg !8090
  %71 = bitcast %struct.BMIter* %70 to i8*, !dbg !8090
  call void %69(i8* %71), !dbg !8088
  store i8 1, i8* %retval, align 1, !dbg !8091
  br label %return, !dbg !8091

return:                                           ; preds = %sw.epilog, %sw.default
  %72 = load i8, i8* %retval, align 1, !dbg !8092
  ret i8 %72, !dbg !8092
}

declare dso_local void @bmiter__elem_of_mesh_begin(%struct.BMIter__elem_of_mesh*) #2

declare dso_local i8* @bmiter__elem_of_mesh_step(%struct.BMIter__elem_of_mesh*) #2

declare dso_local void @bmiter__edge_of_vert_begin(%struct.BMIter__edge_of_vert*) #2

declare dso_local i8* @bmiter__edge_of_vert_step(%struct.BMIter__edge_of_vert*) #2

declare dso_local void @bmiter__face_of_vert_begin(%struct.BMIter__face_of_vert*) #2

declare dso_local i8* @bmiter__face_of_vert_step(%struct.BMIter__face_of_vert*) #2

declare dso_local void @bmiter__loop_of_vert_begin(%struct.BMIter__loop_of_vert*) #2

declare dso_local i8* @bmiter__loop_of_vert_step(%struct.BMIter__loop_of_vert*) #2

declare dso_local void @bmiter__vert_of_edge_begin(%struct.BMIter__vert_of_edge*) #2

declare dso_local i8* @bmiter__vert_of_edge_step(%struct.BMIter__vert_of_edge*) #2

declare dso_local void @bmiter__face_of_edge_begin(%struct.BMIter__face_of_edge*) #2

declare dso_local i8* @bmiter__face_of_edge_step(%struct.BMIter__face_of_edge*) #2

declare dso_local void @bmiter__vert_of_face_begin(%struct.BMIter__vert_of_face*) #2

declare dso_local i8* @bmiter__vert_of_face_step(%struct.BMIter__vert_of_face*) #2

declare dso_local void @bmiter__edge_of_face_begin(%struct.BMIter__edge_of_face*) #2

declare dso_local i8* @bmiter__edge_of_face_step(%struct.BMIter__edge_of_face*) #2

declare dso_local void @bmiter__loop_of_face_begin(%struct.BMIter__loop_of_face*) #2

declare dso_local i8* @bmiter__loop_of_face_step(%struct.BMIter__loop_of_face*) #2

declare dso_local void @bmiter__loop_of_loop_begin(%struct.BMIter__loop_of_loop*) #2

declare dso_local i8* @bmiter__loop_of_loop_step(%struct.BMIter__loop_of_loop*) #2

declare dso_local void @bmiter__loop_of_edge_begin(%struct.BMIter__loop_of_edge*) #2

declare dso_local i8* @bmiter__loop_of_edge_step(%struct.BMIter__loop_of_edge*) #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: noinline nounwind uwtable
define internal void @axis_from_enum_v3(float* %v, i8 zeroext %axis) #0 !dbg !8093 {
entry:
  %v.addr = alloca float*, align 8
  %axis.addr = alloca i8, align 1
  store float* %v, float** %v.addr, align 8
  call void @llvm.dbg.declare(metadata float** %v.addr, metadata !8096, metadata !DIExpression()), !dbg !8097
  store i8 %axis, i8* %axis.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %axis.addr, metadata !8098, metadata !DIExpression()), !dbg !8099
  %0 = load float*, float** %v.addr, align 8, !dbg !8100
  call void @zero_v3(float* %0), !dbg !8101
  %1 = load i8, i8* %axis.addr, align 1, !dbg !8102
  %conv = zext i8 %1 to i32, !dbg !8102
  %cmp = icmp slt i32 %conv, 3, !dbg !8104
  br i1 %cmp, label %if.then, label %if.else, !dbg !8105

if.then:                                          ; preds = %entry
  %2 = load float*, float** %v.addr, align 8, !dbg !8106
  %3 = load i8, i8* %axis.addr, align 1, !dbg !8107
  %idxprom = zext i8 %3 to i64, !dbg !8106
  %arrayidx = getelementptr inbounds float, float* %2, i64 %idxprom, !dbg !8106
  store float 1.000000e+00, float* %arrayidx, align 4, !dbg !8108
  br label %if.end, !dbg !8106

if.else:                                          ; preds = %entry
  %4 = load float*, float** %v.addr, align 8, !dbg !8109
  %5 = load i8, i8* %axis.addr, align 1, !dbg !8110
  %conv2 = zext i8 %5 to i32, !dbg !8110
  %sub = sub nsw i32 %conv2, 3, !dbg !8111
  %idxprom3 = sext i32 %sub to i64, !dbg !8109
  %arrayidx4 = getelementptr inbounds float, float* %4, i64 %idxprom3, !dbg !8109
  store float -1.000000e+00, float* %arrayidx4, align 4, !dbg !8112
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !8113
}

declare dso_local void @mul_transposed_mat3_m4_v3([4 x float]*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal float @normalize_v3(float* %n) #0 !dbg !8114 {
entry:
  %n.addr = alloca float*, align 8
  store float* %n, float** %n.addr, align 8
  call void @llvm.dbg.declare(metadata float** %n.addr, metadata !8117, metadata !DIExpression()), !dbg !8118
  %0 = load float*, float** %n.addr, align 8, !dbg !8119
  %1 = load float*, float** %n.addr, align 8, !dbg !8120
  %call = call float @normalize_v3_v3(float* %0, float* %1), !dbg !8121
  ret float %call, !dbg !8122
}

declare dso_local void @weight_to_rgb(float*, float) #2

declare dso_local void @rgb_float_to_uchar(i8*, float*) #2

declare dso_local float @angle_normalized_v3v3(float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v4_v4_char(i8* %r, i8* %a) #0 !dbg !8123 {
entry:
  %r.addr = alloca i8*, align 8
  %a.addr = alloca i8*, align 8
  store i8* %r, i8** %r.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %r.addr, metadata !8126, metadata !DIExpression()), !dbg !8127
  store i8* %a, i8** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %a.addr, metadata !8128, metadata !DIExpression()), !dbg !8129
  %0 = load i8*, i8** %a.addr, align 8, !dbg !8130
  %arrayidx = getelementptr inbounds i8, i8* %0, i64 0, !dbg !8130
  %1 = load i8, i8* %arrayidx, align 1, !dbg !8130
  %2 = load i8*, i8** %r.addr, align 8, !dbg !8131
  %arrayidx1 = getelementptr inbounds i8, i8* %2, i64 0, !dbg !8131
  store i8 %1, i8* %arrayidx1, align 1, !dbg !8132
  %3 = load i8*, i8** %a.addr, align 8, !dbg !8133
  %arrayidx2 = getelementptr inbounds i8, i8* %3, i64 1, !dbg !8133
  %4 = load i8, i8* %arrayidx2, align 1, !dbg !8133
  %5 = load i8*, i8** %r.addr, align 8, !dbg !8134
  %arrayidx3 = getelementptr inbounds i8, i8* %5, i64 1, !dbg !8134
  store i8 %4, i8* %arrayidx3, align 1, !dbg !8135
  %6 = load i8*, i8** %a.addr, align 8, !dbg !8136
  %arrayidx4 = getelementptr inbounds i8, i8* %6, i64 2, !dbg !8136
  %7 = load i8, i8* %arrayidx4, align 1, !dbg !8136
  %8 = load i8*, i8** %r.addr, align 8, !dbg !8137
  %arrayidx5 = getelementptr inbounds i8, i8* %8, i64 2, !dbg !8137
  store i8 %7, i8* %arrayidx5, align 1, !dbg !8138
  %9 = load i8*, i8** %a.addr, align 8, !dbg !8139
  %arrayidx6 = getelementptr inbounds i8, i8* %9, i64 3, !dbg !8139
  %10 = load i8, i8* %arrayidx6, align 1, !dbg !8139
  %11 = load i8*, i8** %r.addr, align 8, !dbg !8140
  %arrayidx7 = getelementptr inbounds i8, i8* %11, i64 3, !dbg !8140
  store i8 %10, i8* %arrayidx7, align 1, !dbg !8141
  ret void, !dbg !8142
}

; Function Attrs: noinline nounwind uwtable
define internal float @normalize_v3_v3(float* %r, float* %a) #0 !dbg !8143 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %d = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !8146, metadata !DIExpression()), !dbg !8147
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !8148, metadata !DIExpression()), !dbg !8149
  call void @llvm.dbg.declare(metadata float* %d, metadata !8150, metadata !DIExpression()), !dbg !8151
  %0 = load float*, float** %a.addr, align 8, !dbg !8152
  %1 = load float*, float** %a.addr, align 8, !dbg !8153
  %call = call float @dot_v3v3(float* %0, float* %1), !dbg !8154
  store float %call, float* %d, align 4, !dbg !8151
  %2 = load float, float* %d, align 4, !dbg !8155
  %cmp = fcmp ogt float %2, 0x38AA95A5C0000000, !dbg !8157
  br i1 %cmp, label %if.then, label %if.else, !dbg !8158

if.then:                                          ; preds = %entry
  %3 = load float, float* %d, align 4, !dbg !8159
  %call1 = call float @sqrtf(float %3) #5, !dbg !8161
  store float %call1, float* %d, align 4, !dbg !8162
  %4 = load float*, float** %r.addr, align 8, !dbg !8163
  %5 = load float*, float** %a.addr, align 8, !dbg !8164
  %6 = load float, float* %d, align 4, !dbg !8165
  %div = fdiv float 1.000000e+00, %6, !dbg !8166
  call void @mul_v3_v3fl(float* %4, float* %5, float %div), !dbg !8167
  br label %if.end, !dbg !8168

if.else:                                          ; preds = %entry
  %7 = load float*, float** %r.addr, align 8, !dbg !8169
  call void @zero_v3(float* %7), !dbg !8171
  store float 0.000000e+00, float* %d, align 4, !dbg !8172
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load float, float* %d, align 4, !dbg !8173
  ret float %8, !dbg !8174
}

; Function Attrs: noinline nounwind uwtable
define internal float @dot_v3v3(float* %a, float* %b) #0 !dbg !8175 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !8178, metadata !DIExpression()), !dbg !8179
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !8180, metadata !DIExpression()), !dbg !8181
  %0 = load float*, float** %a.addr, align 8, !dbg !8182
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !8182
  %1 = load float, float* %arrayidx, align 4, !dbg !8182
  %2 = load float*, float** %b.addr, align 8, !dbg !8183
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !8183
  %3 = load float, float* %arrayidx1, align 4, !dbg !8183
  %mul = fmul float %1, %3, !dbg !8184
  %4 = load float*, float** %a.addr, align 8, !dbg !8185
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !8185
  %5 = load float, float* %arrayidx2, align 4, !dbg !8185
  %6 = load float*, float** %b.addr, align 8, !dbg !8186
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !8186
  %7 = load float, float* %arrayidx3, align 4, !dbg !8186
  %mul4 = fmul float %5, %7, !dbg !8187
  %add = fadd float %mul, %mul4, !dbg !8188
  %8 = load float*, float** %a.addr, align 8, !dbg !8189
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !8189
  %9 = load float, float* %arrayidx5, align 4, !dbg !8189
  %10 = load float*, float** %b.addr, align 8, !dbg !8190
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !8190
  %11 = load float, float* %arrayidx6, align 4, !dbg !8190
  %mul7 = fmul float %9, %11, !dbg !8191
  %add8 = fadd float %add, %mul7, !dbg !8192
  ret float %add8, !dbg !8193
}

; Function Attrs: nounwind
declare dso_local float @sqrtf(float) #4

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v3_v3fl(float* %r, float* %a, float %f) #0 !dbg !8194 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !8197, metadata !DIExpression()), !dbg !8198
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !8199, metadata !DIExpression()), !dbg !8200
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !8201, metadata !DIExpression()), !dbg !8202
  %0 = load float*, float** %a.addr, align 8, !dbg !8203
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !8203
  %1 = load float, float* %arrayidx, align 4, !dbg !8203
  %2 = load float, float* %f.addr, align 4, !dbg !8204
  %mul = fmul float %1, %2, !dbg !8205
  %3 = load float*, float** %r.addr, align 8, !dbg !8206
  %arrayidx1 = getelementptr inbounds float, float* %3, i64 0, !dbg !8206
  store float %mul, float* %arrayidx1, align 4, !dbg !8207
  %4 = load float*, float** %a.addr, align 8, !dbg !8208
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !8208
  %5 = load float, float* %arrayidx2, align 4, !dbg !8208
  %6 = load float, float* %f.addr, align 4, !dbg !8209
  %mul3 = fmul float %5, %6, !dbg !8210
  %7 = load float*, float** %r.addr, align 8, !dbg !8211
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !8211
  store float %mul3, float* %arrayidx4, align 4, !dbg !8212
  %8 = load float*, float** %a.addr, align 8, !dbg !8213
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !8213
  %9 = load float, float* %arrayidx5, align 4, !dbg !8213
  %10 = load float, float* %f.addr, align 4, !dbg !8214
  %mul6 = fmul float %9, %10, !dbg !8215
  %11 = load float*, float** %r.addr, align 8, !dbg !8216
  %arrayidx7 = getelementptr inbounds float, float* %11, i64 2, !dbg !8216
  store float %mul6, float* %arrayidx7, align 4, !dbg !8217
  ret void, !dbg !8218
}

declare dso_local void @fill_vn_fl(float*, i32, float) #2

declare dso_local void @BLI_jitter_init([2 x float]*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal void @uv_from_jitter_v2(float* %uv) #0 !dbg !8219 {
entry:
  %uv.addr = alloca float*, align 8
  store float* %uv, float** %uv.addr, align 8
  call void @llvm.dbg.declare(metadata float** %uv.addr, metadata !8220, metadata !DIExpression()), !dbg !8221
  %0 = load float*, float** %uv.addr, align 8, !dbg !8222
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !8222
  %1 = load float, float* %arrayidx, align 4, !dbg !8223
  %add = fadd float %1, 5.000000e-01, !dbg !8223
  store float %add, float* %arrayidx, align 4, !dbg !8223
  %2 = load float*, float** %uv.addr, align 8, !dbg !8224
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 1, !dbg !8224
  %3 = load float, float* %arrayidx1, align 4, !dbg !8225
  %add2 = fadd float %3, 5.000000e-01, !dbg !8225
  store float %add2, float* %arrayidx1, align 4, !dbg !8225
  %4 = load float*, float** %uv.addr, align 8, !dbg !8226
  %arrayidx3 = getelementptr inbounds float, float* %4, i64 0, !dbg !8226
  %5 = load float, float* %arrayidx3, align 4, !dbg !8226
  %6 = load float*, float** %uv.addr, align 8, !dbg !8228
  %arrayidx4 = getelementptr inbounds float, float* %6, i64 1, !dbg !8228
  %7 = load float, float* %arrayidx4, align 4, !dbg !8228
  %add5 = fadd float %5, %7, !dbg !8229
  %cmp = fcmp ogt float %add5, 1.000000e+00, !dbg !8230
  br i1 %cmp, label %if.then, label %if.end, !dbg !8231

if.then:                                          ; preds = %entry
  %8 = load float*, float** %uv.addr, align 8, !dbg !8232
  %arrayidx6 = getelementptr inbounds float, float* %8, i64 0, !dbg !8232
  %9 = load float, float* %arrayidx6, align 4, !dbg !8232
  %sub = fsub float 1.000000e+00, %9, !dbg !8234
  %10 = load float*, float** %uv.addr, align 8, !dbg !8235
  %arrayidx7 = getelementptr inbounds float, float* %10, i64 0, !dbg !8235
  store float %sub, float* %arrayidx7, align 4, !dbg !8236
  %11 = load float*, float** %uv.addr, align 8, !dbg !8237
  %arrayidx8 = getelementptr inbounds float, float* %11, i64 1, !dbg !8237
  %12 = load float, float* %arrayidx8, align 4, !dbg !8237
  %sub9 = fsub float 1.000000e+00, %12, !dbg !8238
  %13 = load float*, float** %uv.addr, align 8, !dbg !8239
  %arrayidx10 = getelementptr inbounds float, float* %13, i64 1, !dbg !8239
  store float %sub9, float* %arrayidx10, align 4, !dbg !8240
  br label %if.end, !dbg !8241

if.end:                                           ; preds = %if.then, %entry
  %14 = load float*, float** %uv.addr, align 8, !dbg !8242
  %arrayidx11 = getelementptr inbounds float, float* %14, i64 0, !dbg !8242
  %15 = load float, float* %arrayidx11, align 4, !dbg !8242
  %cmp12 = fcmp olt float %15, 0.000000e+00, !dbg !8242
  br i1 %cmp12, label %if.then13, label %if.else, !dbg !8245

if.then13:                                        ; preds = %if.end
  %16 = load float*, float** %uv.addr, align 8, !dbg !8242
  %arrayidx14 = getelementptr inbounds float, float* %16, i64 0, !dbg !8242
  store float 0.000000e+00, float* %arrayidx14, align 4, !dbg !8242
  br label %if.end20, !dbg !8242

if.else:                                          ; preds = %if.end
  %17 = load float*, float** %uv.addr, align 8, !dbg !8246
  %arrayidx15 = getelementptr inbounds float, float* %17, i64 0, !dbg !8246
  %18 = load float, float* %arrayidx15, align 4, !dbg !8246
  %cmp16 = fcmp ogt float %18, 1.000000e+00, !dbg !8246
  br i1 %cmp16, label %if.then17, label %if.end19, !dbg !8242

if.then17:                                        ; preds = %if.else
  %19 = load float*, float** %uv.addr, align 8, !dbg !8246
  %arrayidx18 = getelementptr inbounds float, float* %19, i64 0, !dbg !8246
  store float 1.000000e+00, float* %arrayidx18, align 4, !dbg !8246
  br label %if.end19, !dbg !8246

if.end19:                                         ; preds = %if.then17, %if.else
  br label %if.end20

if.end20:                                         ; preds = %if.end19, %if.then13
  %20 = load float*, float** %uv.addr, align 8, !dbg !8248
  %arrayidx21 = getelementptr inbounds float, float* %20, i64 1, !dbg !8248
  %21 = load float, float* %arrayidx21, align 4, !dbg !8248
  %cmp22 = fcmp olt float %21, 0.000000e+00, !dbg !8248
  br i1 %cmp22, label %if.then23, label %if.else25, !dbg !8251

if.then23:                                        ; preds = %if.end20
  %22 = load float*, float** %uv.addr, align 8, !dbg !8248
  %arrayidx24 = getelementptr inbounds float, float* %22, i64 1, !dbg !8248
  store float 0.000000e+00, float* %arrayidx24, align 4, !dbg !8248
  br label %if.end31, !dbg !8248

if.else25:                                        ; preds = %if.end20
  %23 = load float*, float** %uv.addr, align 8, !dbg !8252
  %arrayidx26 = getelementptr inbounds float, float* %23, i64 1, !dbg !8252
  %24 = load float, float* %arrayidx26, align 4, !dbg !8252
  %cmp27 = fcmp ogt float %24, 1.000000e+00, !dbg !8252
  br i1 %cmp27, label %if.then28, label %if.end30, !dbg !8248

if.then28:                                        ; preds = %if.else25
  %25 = load float*, float** %uv.addr, align 8, !dbg !8252
  %arrayidx29 = getelementptr inbounds float, float* %25, i64 1, !dbg !8252
  store float 1.000000e+00, float* %arrayidx29, align 4, !dbg !8252
  br label %if.end30, !dbg !8252

if.end30:                                         ; preds = %if.then28, %if.else25
  br label %if.end31

if.end31:                                         ; preds = %if.end30, %if.then23
  ret void, !dbg !8254
}

declare dso_local %struct.BMBVHTree* @BKE_bmbvh_new_from_editmesh(%struct.BMEditMesh*, i32, [3 x float]*, i8 zeroext) #2

declare dso_local float @normal_tri_v3(float*, float*, float*, float*) #2

declare dso_local void @interp_v3_v3v3v3_uv(float*, float*, float*, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @madd_v3_v3fl(float* %r, float* %a, float %f) #0 !dbg !8255 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !8256, metadata !DIExpression()), !dbg !8257
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !8258, metadata !DIExpression()), !dbg !8259
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !8260, metadata !DIExpression()), !dbg !8261
  %0 = load float*, float** %a.addr, align 8, !dbg !8262
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !8262
  %1 = load float, float* %arrayidx, align 4, !dbg !8262
  %2 = load float, float* %f.addr, align 4, !dbg !8263
  %mul = fmul float %1, %2, !dbg !8264
  %3 = load float*, float** %r.addr, align 8, !dbg !8265
  %arrayidx1 = getelementptr inbounds float, float* %3, i64 0, !dbg !8265
  %4 = load float, float* %arrayidx1, align 4, !dbg !8266
  %add = fadd float %4, %mul, !dbg !8266
  store float %add, float* %arrayidx1, align 4, !dbg !8266
  %5 = load float*, float** %a.addr, align 8, !dbg !8267
  %arrayidx2 = getelementptr inbounds float, float* %5, i64 1, !dbg !8267
  %6 = load float, float* %arrayidx2, align 4, !dbg !8267
  %7 = load float, float* %f.addr, align 4, !dbg !8268
  %mul3 = fmul float %6, %7, !dbg !8269
  %8 = load float*, float** %r.addr, align 8, !dbg !8270
  %arrayidx4 = getelementptr inbounds float, float* %8, i64 1, !dbg !8270
  %9 = load float, float* %arrayidx4, align 4, !dbg !8271
  %add5 = fadd float %9, %mul3, !dbg !8271
  store float %add5, float* %arrayidx4, align 4, !dbg !8271
  %10 = load float*, float** %a.addr, align 8, !dbg !8272
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !8272
  %11 = load float, float* %arrayidx6, align 4, !dbg !8272
  %12 = load float, float* %f.addr, align 4, !dbg !8273
  %mul7 = fmul float %11, %12, !dbg !8274
  %13 = load float*, float** %r.addr, align 8, !dbg !8275
  %arrayidx8 = getelementptr inbounds float, float* %13, i64 2, !dbg !8275
  %14 = load float, float* %arrayidx8, align 4, !dbg !8276
  %add9 = fadd float %14, %mul7, !dbg !8276
  store float %add9, float* %arrayidx8, align 4, !dbg !8276
  ret void, !dbg !8277
}

declare dso_local %struct.BMFace* @BKE_bmbvh_ray_cast(%struct.BMBVHTree*, float*, float*, float, float*, float*, float*) #2

; Function Attrs: nounwind readnone speculatable willreturn
declare float @llvm.fabs.f32(float) #1

declare dso_local void @mid_v3_v3v3v3(float*, float*, float*, float*) #2

declare dso_local void @BKE_bmbvh_free(%struct.BMBVHTree*) #2

declare dso_local void @mid_v3_v3v3(float*, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @sub_v3_v3v3(float* %r, float* %a, float* %b) #0 !dbg !8278 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !8281, metadata !DIExpression()), !dbg !8282
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !8283, metadata !DIExpression()), !dbg !8284
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !8285, metadata !DIExpression()), !dbg !8286
  %0 = load float*, float** %a.addr, align 8, !dbg !8287
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !8287
  %1 = load float, float* %arrayidx, align 4, !dbg !8287
  %2 = load float*, float** %b.addr, align 8, !dbg !8288
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !8288
  %3 = load float, float* %arrayidx1, align 4, !dbg !8288
  %sub = fsub float %1, %3, !dbg !8289
  %4 = load float*, float** %r.addr, align 8, !dbg !8290
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 0, !dbg !8290
  store float %sub, float* %arrayidx2, align 4, !dbg !8291
  %5 = load float*, float** %a.addr, align 8, !dbg !8292
  %arrayidx3 = getelementptr inbounds float, float* %5, i64 1, !dbg !8292
  %6 = load float, float* %arrayidx3, align 4, !dbg !8292
  %7 = load float*, float** %b.addr, align 8, !dbg !8293
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !8293
  %8 = load float, float* %arrayidx4, align 4, !dbg !8293
  %sub5 = fsub float %6, %8, !dbg !8294
  %9 = load float*, float** %r.addr, align 8, !dbg !8295
  %arrayidx6 = getelementptr inbounds float, float* %9, i64 1, !dbg !8295
  store float %sub5, float* %arrayidx6, align 4, !dbg !8296
  %10 = load float*, float** %a.addr, align 8, !dbg !8297
  %arrayidx7 = getelementptr inbounds float, float* %10, i64 2, !dbg !8297
  %11 = load float, float* %arrayidx7, align 4, !dbg !8297
  %12 = load float*, float** %b.addr, align 8, !dbg !8298
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 2, !dbg !8298
  %13 = load float, float* %arrayidx8, align 4, !dbg !8298
  %sub9 = fsub float %11, %13, !dbg !8299
  %14 = load float*, float** %r.addr, align 8, !dbg !8300
  %arrayidx10 = getelementptr inbounds float, float* %14, i64 2, !dbg !8300
  store float %sub9, float* %arrayidx10, align 4, !dbg !8301
  ret void, !dbg !8302
}

declare dso_local %struct.BMFace* @BKE_bmbvh_find_face_segment(%struct.BMBVHTree*, float*, float*, float*, float*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @_bm_elem_index_set(%struct.BMHeader* %head, i32 %index) #0 !dbg !8303 {
entry:
  %head.addr = alloca %struct.BMHeader*, align 8
  %index.addr = alloca i32, align 4
  store %struct.BMHeader* %head, %struct.BMHeader** %head.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.BMHeader** %head.addr, metadata !8307, metadata !DIExpression()), !dbg !8308
  store i32 %index, i32* %index.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %index.addr, metadata !8309, metadata !DIExpression()), !dbg !8310
  %0 = load i32, i32* %index.addr, align 4, !dbg !8311
  %1 = load %struct.BMHeader*, %struct.BMHeader** %head.addr, align 8, !dbg !8312
  %index1 = getelementptr inbounds %struct.BMHeader, %struct.BMHeader* %1, i32 0, i32 1, !dbg !8313
  store i32 %0, i32* %index1, align 8, !dbg !8314
  ret void, !dbg !8315
}

declare dso_local float @BM_face_calc_normal_vcos(%struct.BMesh*, %struct.BMFace*, float*, [3 x float]*) #2

declare dso_local void @BM_loop_calc_face_normal(%struct.BMLoop*, float*) #2

; Function Attrs: noinline nounwind uwtable
define internal void @negate_v3(float* %r) #0 !dbg !8316 {
entry:
  %r.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !8317, metadata !DIExpression()), !dbg !8318
  %0 = load float*, float** %r.addr, align 8, !dbg !8319
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !8319
  %1 = load float, float* %arrayidx, align 4, !dbg !8319
  %fneg = fneg float %1, !dbg !8320
  %2 = load float*, float** %r.addr, align 8, !dbg !8321
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !8321
  store float %fneg, float* %arrayidx1, align 4, !dbg !8322
  %3 = load float*, float** %r.addr, align 8, !dbg !8323
  %arrayidx2 = getelementptr inbounds float, float* %3, i64 1, !dbg !8323
  %4 = load float, float* %arrayidx2, align 4, !dbg !8323
  %fneg3 = fneg float %4, !dbg !8324
  %5 = load float*, float** %r.addr, align 8, !dbg !8325
  %arrayidx4 = getelementptr inbounds float, float* %5, i64 1, !dbg !8325
  store float %fneg3, float* %arrayidx4, align 4, !dbg !8326
  %6 = load float*, float** %r.addr, align 8, !dbg !8327
  %arrayidx5 = getelementptr inbounds float, float* %6, i64 2, !dbg !8327
  %7 = load float, float* %arrayidx5, align 4, !dbg !8327
  %fneg6 = fneg float %7, !dbg !8328
  %8 = load float*, float** %r.addr, align 8, !dbg !8329
  %arrayidx7 = getelementptr inbounds float, float* %8, i64 2, !dbg !8329
  store float %fneg6, float* %arrayidx7, align 4, !dbg !8330
  ret void, !dbg !8331
}

; Function Attrs: noinline nounwind uwtable
define internal float @max_ff(float %a, float %b) #0 !dbg !8332 {
entry:
  %a.addr = alloca float, align 4
  %b.addr = alloca float, align 4
  store float %a, float* %a.addr, align 4
  call void @llvm.dbg.declare(metadata float* %a.addr, metadata !8336, metadata !DIExpression()), !dbg !8337
  store float %b, float* %b.addr, align 4
  call void @llvm.dbg.declare(metadata float* %b.addr, metadata !8338, metadata !DIExpression()), !dbg !8339
  %0 = load float, float* %a.addr, align 4, !dbg !8340
  %1 = load float, float* %b.addr, align 4, !dbg !8341
  %cmp = fcmp ogt float %0, %1, !dbg !8342
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !8343

cond.true:                                        ; preds = %entry
  %2 = load float, float* %a.addr, align 4, !dbg !8344
  br label %cond.end, !dbg !8343

cond.false:                                       ; preds = %entry
  %3 = load float, float* %b.addr, align 4, !dbg !8345
  br label %cond.end, !dbg !8343

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi float [ %2, %cond.true ], [ %3, %cond.false ], !dbg !8343
  ret float %cond, !dbg !8346
}

declare dso_local float @BM_edge_calc_face_angle_signed(%struct.BMEdge*) #2

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!1943, !1944, !1945}
!llvm.ident = !{!1946}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !153, splitDebugInlining: false, nameTableKind: None)
!1 = !DIFile(filename: "blender/source/blender/blenkernel/intern/editderivedmesh.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2 = !{!3, !10, !15, !19, !25, !31, !42, !48, !54, !62, !69, !113, !130, !137, !144}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DerivedMeshType", file: !4, line: 128, baseType: !5, size: 32, elements: !6)
!4 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_DerivedMesh.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!6 = !{!7, !8, !9}
!7 = !DIEnumerator(name: "DM_TYPE_CDDM", value: 0, isUnsigned: true)
!8 = !DIEnumerator(name: "DM_TYPE_EDITBMESH", value: 1, isUnsigned: true)
!9 = !DIEnumerator(name: "DM_TYPE_CCGDM", value: 2, isUnsigned: true)
!10 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMDirtyFlag", file: !4, line: 164, baseType: !5, size: 32, elements: !11)
!11 = !{!12, !13, !14}
!12 = !DIEnumerator(name: "DM_DIRTY_TESS_CDLAYERS", value: 1, isUnsigned: true)
!13 = !DIEnumerator(name: "DM_DIRTY_MCOL_UPDATE_DRAW", value: 2, isUnsigned: true)
!14 = !DIEnumerator(name: "DM_DIRTY_NORMALS", value: 4, isUnsigned: true)
!15 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMForeachFlag", file: !4, line: 159, baseType: !5, size: 32, elements: !16)
!16 = !{!17, !18}
!17 = !DIEnumerator(name: "DM_FOREACH_NOP", value: 0, isUnsigned: true)
!18 = !DIEnumerator(name: "DM_FOREACH_USE_NORMAL", value: 1, isUnsigned: true)
!19 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMDrawOption", file: !4, line: 134, baseType: !5, size: 32, elements: !20)
!20 = !{!21, !22, !23, !24}
!21 = !DIEnumerator(name: "DM_DRAW_OPTION_SKIP", value: 0, isUnsigned: true)
!22 = !DIEnumerator(name: "DM_DRAW_OPTION_NORMAL", value: 1, isUnsigned: true)
!23 = !DIEnumerator(name: "DM_DRAW_OPTION_NO_MCOL", value: 2, isUnsigned: true)
!24 = !DIEnumerator(name: "DM_DRAW_OPTION_STIPPLE", value: 3, isUnsigned: true)
!25 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "DMDrawFlag", file: !4, line: 152, baseType: !5, size: 32, elements: !26)
!26 = !{!27, !28, !29, !30}
!27 = !DIEnumerator(name: "DM_DRAW_USE_COLORS", value: 1, isUnsigned: true)
!28 = !DIEnumerator(name: "DM_DRAW_ALWAYS_SMOOTH", value: 2, isUnsigned: true)
!29 = !DIEnumerator(name: "DM_DRAW_USE_ACTIVE_UV", value: 4, isUnsigned: true)
!30 = !DIEnumerator(name: "DM_DRAW_USE_TEXPAINT_UV", value: 8, isUnsigned: true)
!31 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBMOpSlotType", file: !32, line: 94, baseType: !5, size: 32, elements: !33)
!32 = !DIFile(filename: "blender/source/blender/bmesh/intern/bmesh_operator_api.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!33 = !{!34, !35, !36, !37, !38, !39, !40, !41}
!34 = !DIEnumerator(name: "BMO_OP_SLOT_BOOL", value: 1, isUnsigned: true)
!35 = !DIEnumerator(name: "BMO_OP_SLOT_INT", value: 2, isUnsigned: true)
!36 = !DIEnumerator(name: "BMO_OP_SLOT_FLT", value: 3, isUnsigned: true)
!37 = !DIEnumerator(name: "BMO_OP_SLOT_PTR", value: 4, isUnsigned: true)
!38 = !DIEnumerator(name: "BMO_OP_SLOT_MAT", value: 5, isUnsigned: true)
!39 = !DIEnumerator(name: "BMO_OP_SLOT_VEC", value: 8, isUnsigned: true)
!40 = !DIEnumerator(name: "BMO_OP_SLOT_ELEMENT_BUF", value: 9, isUnsigned: true)
!41 = !DIEnumerator(name: "BMO_OP_SLOT_MAPPING", value: 10, isUnsigned: true)
!42 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBMOpSlotSubType_Elem", file: !32, line: 116, baseType: !5, size: 32, elements: !43)
!43 = !{!44, !45, !46, !47}
!44 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_ELEM_VERT", value: 1, isUnsigned: true)
!45 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_ELEM_EDGE", value: 2, isUnsigned: true)
!46 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_ELEM_FACE", value: 8, isUnsigned: true)
!47 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_ELEM_IS_SINGLE", value: 16, isUnsigned: true)
!48 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBMOpSlotSubType_Ptr", file: !32, line: 131, baseType: !5, size: 32, elements: !49)
!49 = !{!50, !51, !52, !53}
!50 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_PTR_BMESH", value: 100, isUnsigned: true)
!51 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_PTR_SCENE", value: 101, isUnsigned: true)
!52 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_PTR_OBJECT", value: 102, isUnsigned: true)
!53 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_PTR_MESH", value: 103, isUnsigned: true)
!54 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eBMOpSlotSubType_Map", file: !32, line: 123, baseType: !5, size: 32, elements: !55)
!55 = !{!56, !57, !58, !59, !60, !61}
!56 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_EMPTY", value: 64, isUnsigned: true)
!57 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_ELEM", value: 65, isUnsigned: true)
!58 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_FLT", value: 66, isUnsigned: true)
!59 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_INT", value: 67, isUnsigned: true)
!60 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_BOOL", value: 68, isUnsigned: true)
!61 = !DIEnumerator(name: "BMO_OP_SLOT_SUBTYPE_MAP_INTERNAL", value: 69, isUnsigned: true)
!62 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !32, line: 182, baseType: !5, size: 32, elements: !63)
!63 = !{!64, !65, !66, !67, !68}
!64 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_NOP", value: 0, isUnsigned: true)
!65 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_UNTAN_MULTIRES", value: 1, isUnsigned: true)
!66 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_NORMALS_CALC", value: 2, isUnsigned: true)
!67 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_SELECT_FLUSH", value: 4, isUnsigned: true)
!68 = !DIEnumerator(name: "BMO_OPTYPE_FLAG_SELECT_VALIDATE", value: 8, isUnsigned: true)
!69 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !70, line: 76, baseType: !5, size: 32, elements: !71)
!70 = !DIFile(filename: "blender/source/blender/makesdna/DNA_customdata_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!71 = !{!72, !73, !74, !75, !76, !77, !78, !79, !80, !81, !82, !83, !84, !85, !86, !87, !88, !89, !90, !91, !92, !93, !94, !95, !96, !97, !98, !99, !100, !101, !102, !103, !104, !105, !106, !107, !108, !109, !110, !111, !112}
!72 = !DIEnumerator(name: "CD_MVERT", value: 0, isUnsigned: true)
!73 = !DIEnumerator(name: "CD_MSTICKY", value: 1, isUnsigned: true)
!74 = !DIEnumerator(name: "CD_MDEFORMVERT", value: 2, isUnsigned: true)
!75 = !DIEnumerator(name: "CD_MEDGE", value: 3, isUnsigned: true)
!76 = !DIEnumerator(name: "CD_MFACE", value: 4, isUnsigned: true)
!77 = !DIEnumerator(name: "CD_MTFACE", value: 5, isUnsigned: true)
!78 = !DIEnumerator(name: "CD_MCOL", value: 6, isUnsigned: true)
!79 = !DIEnumerator(name: "CD_ORIGINDEX", value: 7, isUnsigned: true)
!80 = !DIEnumerator(name: "CD_NORMAL", value: 8, isUnsigned: true)
!81 = !DIEnumerator(name: "CD_PROP_FLT", value: 10, isUnsigned: true)
!82 = !DIEnumerator(name: "CD_PROP_INT", value: 11, isUnsigned: true)
!83 = !DIEnumerator(name: "CD_PROP_STR", value: 12, isUnsigned: true)
!84 = !DIEnumerator(name: "CD_ORIGSPACE", value: 13, isUnsigned: true)
!85 = !DIEnumerator(name: "CD_ORCO", value: 14, isUnsigned: true)
!86 = !DIEnumerator(name: "CD_MTEXPOLY", value: 15, isUnsigned: true)
!87 = !DIEnumerator(name: "CD_MLOOPUV", value: 16, isUnsigned: true)
!88 = !DIEnumerator(name: "CD_MLOOPCOL", value: 17, isUnsigned: true)
!89 = !DIEnumerator(name: "CD_TANGENT", value: 18, isUnsigned: true)
!90 = !DIEnumerator(name: "CD_MDISPS", value: 19, isUnsigned: true)
!91 = !DIEnumerator(name: "CD_PREVIEW_MCOL", value: 20, isUnsigned: true)
!92 = !DIEnumerator(name: "CD_ID_MCOL", value: 21, isUnsigned: true)
!93 = !DIEnumerator(name: "CD_TEXTURE_MCOL", value: 22, isUnsigned: true)
!94 = !DIEnumerator(name: "CD_CLOTH_ORCO", value: 23, isUnsigned: true)
!95 = !DIEnumerator(name: "CD_RECAST", value: 24, isUnsigned: true)
!96 = !DIEnumerator(name: "CD_MPOLY", value: 25, isUnsigned: true)
!97 = !DIEnumerator(name: "CD_MLOOP", value: 26, isUnsigned: true)
!98 = !DIEnumerator(name: "CD_SHAPE_KEYINDEX", value: 27, isUnsigned: true)
!99 = !DIEnumerator(name: "CD_SHAPEKEY", value: 28, isUnsigned: true)
!100 = !DIEnumerator(name: "CD_BWEIGHT", value: 29, isUnsigned: true)
!101 = !DIEnumerator(name: "CD_CREASE", value: 30, isUnsigned: true)
!102 = !DIEnumerator(name: "CD_ORIGSPACE_MLOOP", value: 31, isUnsigned: true)
!103 = !DIEnumerator(name: "CD_PREVIEW_MLOOPCOL", value: 32, isUnsigned: true)
!104 = !DIEnumerator(name: "CD_BM_ELEM_PYPTR", value: 33, isUnsigned: true)
!105 = !DIEnumerator(name: "CD_PAINT_MASK", value: 34, isUnsigned: true)
!106 = !DIEnumerator(name: "CD_GRID_PAINT_MASK", value: 35, isUnsigned: true)
!107 = !DIEnumerator(name: "CD_MVERT_SKIN", value: 36, isUnsigned: true)
!108 = !DIEnumerator(name: "CD_FREESTYLE_EDGE", value: 37, isUnsigned: true)
!109 = !DIEnumerator(name: "CD_FREESTYLE_FACE", value: 38, isUnsigned: true)
!110 = !DIEnumerator(name: "CD_MLOOPTANGENT", value: 39, isUnsigned: true)
!111 = !DIEnumerator(name: "CD_TESSLOOPNORMAL", value: 40, isUnsigned: true)
!112 = !DIEnumerator(name: "CD_NUMTYPES", value: 41, isUnsigned: true)
!113 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "BMIterType", file: !114, line: 57, baseType: !5, size: 32, elements: !115)
!114 = !DIFile(filename: "blender/source/blender/bmesh/intern/bmesh_iterators.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!115 = !{!116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129}
!116 = !DIEnumerator(name: "BM_VERTS_OF_MESH", value: 1, isUnsigned: true)
!117 = !DIEnumerator(name: "BM_EDGES_OF_MESH", value: 2, isUnsigned: true)
!118 = !DIEnumerator(name: "BM_FACES_OF_MESH", value: 3, isUnsigned: true)
!119 = !DIEnumerator(name: "BM_EDGES_OF_VERT", value: 4, isUnsigned: true)
!120 = !DIEnumerator(name: "BM_FACES_OF_VERT", value: 5, isUnsigned: true)
!121 = !DIEnumerator(name: "BM_LOOPS_OF_VERT", value: 6, isUnsigned: true)
!122 = !DIEnumerator(name: "BM_VERTS_OF_EDGE", value: 7, isUnsigned: true)
!123 = !DIEnumerator(name: "BM_FACES_OF_EDGE", value: 8, isUnsigned: true)
!124 = !DIEnumerator(name: "BM_VERTS_OF_FACE", value: 9, isUnsigned: true)
!125 = !DIEnumerator(name: "BM_EDGES_OF_FACE", value: 10, isUnsigned: true)
!126 = !DIEnumerator(name: "BM_LOOPS_OF_FACE", value: 11, isUnsigned: true)
!127 = !DIEnumerator(name: "BM_ALL_LOOPS_OF_FACE", value: 12, isUnsigned: true)
!128 = !DIEnumerator(name: "BM_LOOPS_OF_LOOP", value: 13, isUnsigned: true)
!129 = !DIEnumerator(name: "BM_LOOPS_OF_EDGE", value: 14, isUnsigned: true)
!130 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !131, line: 249, baseType: !5, size: 32, elements: !132)
!131 = !DIFile(filename: "blender/source/blender/bmesh/bmesh_class.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!132 = !{!133, !134, !135, !136}
!133 = !DIEnumerator(name: "BM_VERT", value: 1, isUnsigned: true)
!134 = !DIEnumerator(name: "BM_EDGE", value: 2, isUnsigned: true)
!135 = !DIEnumerator(name: "BM_LOOP", value: 4, isUnsigned: true)
!136 = !DIEnumerator(name: "BM_FACE", value: 8, isUnsigned: true)
!137 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !70, line: 172, baseType: !5, size: 32, elements: !138)
!138 = !{!139, !140, !141, !142, !143}
!139 = !DIEnumerator(name: "CD_FLAG_NOCOPY", value: 1, isUnsigned: true)
!140 = !DIEnumerator(name: "CD_FLAG_NOFREE", value: 2, isUnsigned: true)
!141 = !DIEnumerator(name: "CD_FLAG_TEMPORARY", value: 5, isUnsigned: true)
!142 = !DIEnumerator(name: "CD_FLAG_EXTERNAL", value: 8, isUnsigned: true)
!143 = !DIEnumerator(name: "CD_FLAG_IN_MEMORY", value: 16, isUnsigned: true)
!144 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !131, line: 260, baseType: !5, size: 32, elements: !145)
!145 = !{!146, !147, !148, !149, !150, !151, !152}
!146 = !DIEnumerator(name: "BM_ELEM_SELECT", value: 1, isUnsigned: true)
!147 = !DIEnumerator(name: "BM_ELEM_HIDDEN", value: 2, isUnsigned: true)
!148 = !DIEnumerator(name: "BM_ELEM_SEAM", value: 4, isUnsigned: true)
!149 = !DIEnumerator(name: "BM_ELEM_SMOOTH", value: 8, isUnsigned: true)
!150 = !DIEnumerator(name: "BM_ELEM_TAG", value: 16, isUnsigned: true)
!151 = !DIEnumerator(name: "BM_ELEM_DRAW", value: 32, isUnsigned: true)
!152 = !DIEnumerator(name: "BM_ELEM_INTERNAL_TAG", value: 128, isUnsigned: true)
!153 = !{!154, !1698, !182, !667, !1700, !224, !1893, !871, !265, !464, !1896, !1906, !1908, !1914, !1922, !1930, !1934, !1935, !1939, !1730, !1791, !1795, !1773, !1813}
!154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !155, size: 64)
!155 = !DIDerivedType(tag: DW_TAG_typedef, name: "DerivedMesh", file: !4, line: 177, baseType: !156)
!156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DerivedMesh", file: !4, line: 178, size: 13504, elements: !157)
!157 = !{!158, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !218, !221, !223, !225, !227, !228, !232, !233, !237, !242, !243, !247, !248, !249, !250, !251, !268, !280, !294, !298, !302, !306, !315, !327, !331, !335, !339, !343, !347, !348, !349, !350, !351, !352, !356, !357, !358, !359, !363, !364, !365, !366, !367, !372, !373, !374, !375, !376, !380, !381, !382, !383, !384, !391, !404, !409, !415, !425, !431, !442, !449, !456, !460, !465, !469, !474, !475, !476, !1606, !1612, !1613, !1614, !1618, !1619, !1628, !1655, !1659, !1667, !1671, !1675, !1679, !1687, !1697}
!158 = !DIDerivedType(tag: DW_TAG_member, name: "vertData", scope: !156, file: !4, line: 180, baseType: !159, size: 1600)
!159 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomData", file: !70, line: 73, baseType: !160)
!160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomData", file: !70, line: 64, size: 1600, elements: !161)
!161 = !{!162, !183, !187, !188, !189, !190, !193}
!162 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !160, file: !70, line: 65, baseType: !163, size: 64)
!163 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !164, size: 64)
!164 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomDataLayer", file: !70, line: 53, baseType: !165)
!165 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomDataLayer", file: !70, line: 42, size: 832, elements: !166)
!166 = !{!167, !169, !170, !171, !172, !173, !174, !175, !176, !181}
!167 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !165, file: !70, line: 43, baseType: !168, size: 32)
!168 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!169 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !165, file: !70, line: 44, baseType: !168, size: 32, offset: 32)
!170 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !165, file: !70, line: 45, baseType: !168, size: 32, offset: 64)
!171 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !165, file: !70, line: 46, baseType: !168, size: 32, offset: 96)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "active_rnd", scope: !165, file: !70, line: 47, baseType: !168, size: 32, offset: 128)
!173 = !DIDerivedType(tag: DW_TAG_member, name: "active_clone", scope: !165, file: !70, line: 48, baseType: !168, size: 32, offset: 160)
!174 = !DIDerivedType(tag: DW_TAG_member, name: "active_mask", scope: !165, file: !70, line: 49, baseType: !168, size: 32, offset: 192)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "uid", scope: !165, file: !70, line: 50, baseType: !168, size: 32, offset: 224)
!176 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !165, file: !70, line: 51, baseType: !177, size: 512, offset: 256)
!177 = !DICompositeType(tag: DW_TAG_array_type, baseType: !178, size: 512, elements: !179)
!178 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!179 = !{!180}
!180 = !DISubrange(count: 64)
!181 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !165, file: !70, line: 52, baseType: !182, size: 64, offset: 768)
!182 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!183 = !DIDerivedType(tag: DW_TAG_member, name: "typemap", scope: !160, file: !70, line: 66, baseType: !184, size: 1312, offset: 64)
!184 = !DICompositeType(tag: DW_TAG_array_type, baseType: !168, size: 1312, elements: !185)
!185 = !{!186}
!186 = !DISubrange(count: 41)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "totlayer", scope: !160, file: !70, line: 69, baseType: !168, size: 32, offset: 1376)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "maxlayer", scope: !160, file: !70, line: 69, baseType: !168, size: 32, offset: 1408)
!189 = !DIDerivedType(tag: DW_TAG_member, name: "totsize", scope: !160, file: !70, line: 70, baseType: !168, size: 32, offset: 1440)
!190 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !160, file: !70, line: 71, baseType: !191, size: 64, offset: 1472)
!191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !192, size: 64)
!192 = !DICompositeType(tag: DW_TAG_structure_type, name: "BLI_mempool", file: !70, line: 71, flags: DIFlagFwdDecl)
!193 = !DIDerivedType(tag: DW_TAG_member, name: "external", scope: !160, file: !70, line: 72, baseType: !194, size: 64, offset: 1536)
!194 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !195, size: 64)
!195 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomDataExternal", file: !70, line: 59, baseType: !196)
!196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CustomDataExternal", file: !70, line: 57, size: 8192, elements: !197)
!197 = !{!198}
!198 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !196, file: !70, line: 58, baseType: !199, size: 8192)
!199 = !DICompositeType(tag: DW_TAG_array_type, baseType: !178, size: 8192, elements: !200)
!200 = !{!201}
!201 = !DISubrange(count: 1024)
!202 = !DIDerivedType(tag: DW_TAG_member, name: "edgeData", scope: !156, file: !4, line: 180, baseType: !159, size: 1600, offset: 1600)
!203 = !DIDerivedType(tag: DW_TAG_member, name: "faceData", scope: !156, file: !4, line: 180, baseType: !159, size: 1600, offset: 3200)
!204 = !DIDerivedType(tag: DW_TAG_member, name: "loopData", scope: !156, file: !4, line: 180, baseType: !159, size: 1600, offset: 4800)
!205 = !DIDerivedType(tag: DW_TAG_member, name: "polyData", scope: !156, file: !4, line: 180, baseType: !159, size: 1600, offset: 6400)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "numVertData", scope: !156, file: !4, line: 181, baseType: !168, size: 32, offset: 8000)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "numEdgeData", scope: !156, file: !4, line: 181, baseType: !168, size: 32, offset: 8032)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "numTessFaceData", scope: !156, file: !4, line: 181, baseType: !168, size: 32, offset: 8064)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "numLoopData", scope: !156, file: !4, line: 181, baseType: !168, size: 32, offset: 8096)
!210 = !DIDerivedType(tag: DW_TAG_member, name: "numPolyData", scope: !156, file: !4, line: 181, baseType: !168, size: 32, offset: 8128)
!211 = !DIDerivedType(tag: DW_TAG_member, name: "needsFree", scope: !156, file: !4, line: 182, baseType: !168, size: 32, offset: 8160)
!212 = !DIDerivedType(tag: DW_TAG_member, name: "deformedOnly", scope: !156, file: !4, line: 183, baseType: !168, size: 32, offset: 8192)
!213 = !DIDerivedType(tag: DW_TAG_member, name: "bvhCache", scope: !156, file: !4, line: 184, baseType: !214, size: 64, offset: 8256)
!214 = !DIDerivedType(tag: DW_TAG_typedef, name: "BVHCache", file: !215, line: 124, baseType: !216)
!215 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_bvhutils.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!216 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !217, size: 64)
!217 = !DICompositeType(tag: DW_TAG_structure_type, name: "LinkNode", file: !215, line: 124, flags: DIFlagFwdDecl)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "drawObject", scope: !156, file: !4, line: 185, baseType: !219, size: 64, offset: 8320)
!219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !220, size: 64)
!220 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUDrawObject", file: !4, line: 97, flags: DIFlagFwdDecl)
!221 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !156, file: !4, line: 186, baseType: !222, size: 32, offset: 8384)
!222 = !DIDerivedType(tag: DW_TAG_typedef, name: "DerivedMeshType", file: !4, line: 132, baseType: !3)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "auto_bump_scale", scope: !156, file: !4, line: 187, baseType: !224, size: 32, offset: 8416)
!224 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!225 = !DIDerivedType(tag: DW_TAG_member, name: "dirty", scope: !156, file: !4, line: 188, baseType: !226, size: 32, offset: 8448)
!226 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMDirtyFlag", file: !4, line: 175, baseType: !10)
!227 = !DIDerivedType(tag: DW_TAG_member, name: "totmat", scope: !156, file: !4, line: 189, baseType: !168, size: 32, offset: 8480)
!228 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !156, file: !4, line: 190, baseType: !229, size: 64, offset: 8512)
!229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !230, size: 64)
!230 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !231, size: 64)
!231 = !DICompositeType(tag: DW_TAG_structure_type, name: "Material", file: !4, line: 190, flags: DIFlagFwdDecl)
!232 = !DIDerivedType(tag: DW_TAG_member, name: "cd_flag", scope: !156, file: !4, line: 193, baseType: !178, size: 8, offset: 8576)
!233 = !DIDerivedType(tag: DW_TAG_member, name: "calcNormals", scope: !156, file: !4, line: 196, baseType: !234, size: 64, offset: 8640)
!234 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !235, size: 64)
!235 = !DISubroutineType(types: !236)
!236 = !{null, !154}
!237 = !DIDerivedType(tag: DW_TAG_member, name: "calcLoopNormals", scope: !156, file: !4, line: 199, baseType: !238, size: 64, offset: 8704)
!238 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !239, size: 64)
!239 = !DISubroutineType(types: !240)
!240 = !{null, !154, !241}
!241 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !224)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "recalcTessellation", scope: !156, file: !4, line: 202, baseType: !234, size: 64, offset: 8768)
!243 = !DIDerivedType(tag: DW_TAG_member, name: "getNumVerts", scope: !156, file: !4, line: 207, baseType: !244, size: 64, offset: 8832)
!244 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !245, size: 64)
!245 = !DISubroutineType(types: !246)
!246 = !{!168, !154}
!247 = !DIDerivedType(tag: DW_TAG_member, name: "getNumEdges", scope: !156, file: !4, line: 208, baseType: !244, size: 64, offset: 8896)
!248 = !DIDerivedType(tag: DW_TAG_member, name: "getNumTessFaces", scope: !156, file: !4, line: 209, baseType: !244, size: 64, offset: 8960)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "getNumLoops", scope: !156, file: !4, line: 210, baseType: !244, size: 64, offset: 9024)
!250 = !DIDerivedType(tag: DW_TAG_member, name: "getNumPolys", scope: !156, file: !4, line: 211, baseType: !244, size: 64, offset: 9088)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "getVert", scope: !156, file: !4, line: 218, baseType: !252, size: 64, offset: 9152)
!252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !253, size: 64)
!253 = !DISubroutineType(types: !254)
!254 = !{null, !154, !168, !255}
!255 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !256, size: 64)
!256 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MVert", file: !257, line: 65, size: 160, elements: !258)
!257 = !DIFile(filename: "blender/source/blender/makesdna/DNA_meshdata_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!258 = !{!259, !263, !266, !267}
!259 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !256, file: !257, line: 66, baseType: !260, size: 96)
!260 = !DICompositeType(tag: DW_TAG_array_type, baseType: !224, size: 96, elements: !261)
!261 = !{!262}
!262 = !DISubrange(count: 3)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !256, file: !257, line: 67, baseType: !264, size: 48, offset: 96)
!264 = !DICompositeType(tag: DW_TAG_array_type, baseType: !265, size: 48, elements: !261)
!265 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!266 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !256, file: !257, line: 68, baseType: !178, size: 8, offset: 144)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "bweight", scope: !256, file: !257, line: 68, baseType: !178, size: 8, offset: 152)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "getEdge", scope: !156, file: !4, line: 219, baseType: !269, size: 64, offset: 9216)
!269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !270, size: 64)
!270 = !DISubroutineType(types: !271)
!271 = !{null, !154, !168, !272}
!272 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !273, size: 64)
!273 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MEdge", file: !257, line: 48, size: 96, elements: !274)
!274 = !{!275, !276, !277, !278, !279}
!275 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !273, file: !257, line: 49, baseType: !5, size: 32)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !273, file: !257, line: 49, baseType: !5, size: 32, offset: 32)
!277 = !DIDerivedType(tag: DW_TAG_member, name: "crease", scope: !273, file: !257, line: 50, baseType: !178, size: 8, offset: 64)
!278 = !DIDerivedType(tag: DW_TAG_member, name: "bweight", scope: !273, file: !257, line: 50, baseType: !178, size: 8, offset: 72)
!279 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !273, file: !257, line: 51, baseType: !265, size: 16, offset: 80)
!280 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFace", scope: !156, file: !4, line: 220, baseType: !281, size: 64, offset: 9280)
!281 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !282, size: 64)
!282 = !DISubroutineType(types: !283)
!283 = !{null, !154, !168, !284}
!284 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !285, size: 64)
!285 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MFace", file: !257, line: 42, size: 160, elements: !286)
!286 = !{!287, !288, !289, !290, !291, !292, !293}
!287 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !285, file: !257, line: 43, baseType: !5, size: 32)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !285, file: !257, line: 43, baseType: !5, size: 32, offset: 32)
!289 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !285, file: !257, line: 43, baseType: !5, size: 32, offset: 64)
!290 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !285, file: !257, line: 43, baseType: !5, size: 32, offset: 96)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !285, file: !257, line: 44, baseType: !265, size: 16, offset: 128)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "edcode", scope: !285, file: !257, line: 45, baseType: !178, size: 8, offset: 144)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !285, file: !257, line: 45, baseType: !178, size: 8, offset: 152)
!294 = !DIDerivedType(tag: DW_TAG_member, name: "getVertArray", scope: !156, file: !4, line: 227, baseType: !295, size: 64, offset: 9344)
!295 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !296, size: 64)
!296 = !DISubroutineType(types: !297)
!297 = !{!255, !154}
!298 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeArray", scope: !156, file: !4, line: 228, baseType: !299, size: 64, offset: 9408)
!299 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !300, size: 64)
!300 = !DISubroutineType(types: !301)
!301 = !{!272, !154}
!302 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceArray", scope: !156, file: !4, line: 229, baseType: !303, size: 64, offset: 9472)
!303 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !304, size: 64)
!304 = !DISubroutineType(types: !305)
!305 = !{!284, !154}
!306 = !DIDerivedType(tag: DW_TAG_member, name: "getLoopArray", scope: !156, file: !4, line: 230, baseType: !307, size: 64, offset: 9536)
!307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !308, size: 64)
!308 = !DISubroutineType(types: !309)
!309 = !{!310, !154}
!310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !311, size: 64)
!311 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MLoop", file: !257, line: 88, size: 64, elements: !312)
!312 = !{!313, !314}
!313 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !311, file: !257, line: 89, baseType: !5, size: 32)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !311, file: !257, line: 90, baseType: !5, size: 32, offset: 32)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyArray", scope: !156, file: !4, line: 231, baseType: !316, size: 64, offset: 9600)
!316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !317, size: 64)
!317 = !DISubroutineType(types: !318)
!318 = !{!319, !154}
!319 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !320, size: 64)
!320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MPoly", file: !257, line: 79, size: 96, elements: !321)
!321 = !{!322, !323, !324, !325, !326}
!322 = !DIDerivedType(tag: DW_TAG_member, name: "loopstart", scope: !320, file: !257, line: 81, baseType: !168, size: 32)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "totloop", scope: !320, file: !257, line: 82, baseType: !168, size: 32, offset: 32)
!324 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !320, file: !257, line: 83, baseType: !265, size: 16, offset: 64)
!325 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !320, file: !257, line: 84, baseType: !178, size: 8, offset: 80)
!326 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !320, file: !257, line: 84, baseType: !178, size: 8, offset: 88)
!327 = !DIDerivedType(tag: DW_TAG_member, name: "copyVertArray", scope: !156, file: !4, line: 236, baseType: !328, size: 64, offset: 9664)
!328 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !329, size: 64)
!329 = !DISubroutineType(types: !330)
!330 = !{null, !154, !255}
!331 = !DIDerivedType(tag: DW_TAG_member, name: "copyEdgeArray", scope: !156, file: !4, line: 237, baseType: !332, size: 64, offset: 9728)
!332 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !333, size: 64)
!333 = !DISubroutineType(types: !334)
!334 = !{null, !154, !272}
!335 = !DIDerivedType(tag: DW_TAG_member, name: "copyTessFaceArray", scope: !156, file: !4, line: 238, baseType: !336, size: 64, offset: 9792)
!336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !337, size: 64)
!337 = !DISubroutineType(types: !338)
!338 = !{null, !154, !284}
!339 = !DIDerivedType(tag: DW_TAG_member, name: "copyLoopArray", scope: !156, file: !4, line: 239, baseType: !340, size: 64, offset: 9856)
!340 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !341, size: 64)
!341 = !DISubroutineType(types: !342)
!342 = !{null, !154, !310}
!343 = !DIDerivedType(tag: DW_TAG_member, name: "copyPolyArray", scope: !156, file: !4, line: 240, baseType: !344, size: 64, offset: 9920)
!344 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !345, size: 64)
!345 = !DISubroutineType(types: !346)
!346 = !{null, !154, !319}
!347 = !DIDerivedType(tag: DW_TAG_member, name: "dupVertArray", scope: !156, file: !4, line: 245, baseType: !295, size: 64, offset: 9984)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "dupEdgeArray", scope: !156, file: !4, line: 246, baseType: !299, size: 64, offset: 10048)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "dupTessFaceArray", scope: !156, file: !4, line: 247, baseType: !303, size: 64, offset: 10112)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "dupLoopArray", scope: !156, file: !4, line: 248, baseType: !307, size: 64, offset: 10176)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "dupPolyArray", scope: !156, file: !4, line: 249, baseType: !316, size: 64, offset: 10240)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "getVertData", scope: !156, file: !4, line: 255, baseType: !353, size: 64, offset: 10304)
!353 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !354, size: 64)
!354 = !DISubroutineType(types: !355)
!355 = !{!182, !154, !168, !168}
!356 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeData", scope: !156, file: !4, line: 256, baseType: !353, size: 64, offset: 10368)
!357 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceData", scope: !156, file: !4, line: 257, baseType: !353, size: 64, offset: 10432)
!358 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyData", scope: !156, file: !4, line: 258, baseType: !353, size: 64, offset: 10496)
!359 = !DIDerivedType(tag: DW_TAG_member, name: "getVertDataArray", scope: !156, file: !4, line: 264, baseType: !360, size: 64, offset: 10560)
!360 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !361, size: 64)
!361 = !DISubroutineType(types: !362)
!362 = !{!182, !154, !168}
!363 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeDataArray", scope: !156, file: !4, line: 265, baseType: !360, size: 64, offset: 10624)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceDataArray", scope: !156, file: !4, line: 266, baseType: !360, size: 64, offset: 10688)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "getLoopDataArray", scope: !156, file: !4, line: 267, baseType: !360, size: 64, offset: 10752)
!366 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyDataArray", scope: !156, file: !4, line: 268, baseType: !360, size: 64, offset: 10816)
!367 = !DIDerivedType(tag: DW_TAG_member, name: "getVertDataLayout", scope: !156, file: !4, line: 272, baseType: !368, size: 64, offset: 10880)
!368 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !369, size: 64)
!369 = !DISubroutineType(types: !370)
!370 = !{!371, !154}
!371 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !159, size: 64)
!372 = !DIDerivedType(tag: DW_TAG_member, name: "getEdgeDataLayout", scope: !156, file: !4, line: 273, baseType: !368, size: 64, offset: 10944)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "getTessFaceDataLayout", scope: !156, file: !4, line: 274, baseType: !368, size: 64, offset: 11008)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "getLoopDataLayout", scope: !156, file: !4, line: 275, baseType: !368, size: 64, offset: 11072)
!375 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyDataLayout", scope: !156, file: !4, line: 276, baseType: !368, size: 64, offset: 11136)
!376 = !DIDerivedType(tag: DW_TAG_member, name: "copyFromVertCData", scope: !156, file: !4, line: 279, baseType: !377, size: 64, offset: 11200)
!377 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !378, size: 64)
!378 = !DISubroutineType(types: !379)
!379 = !{null, !154, !168, !371, !168}
!380 = !DIDerivedType(tag: DW_TAG_member, name: "copyFromEdgeCData", scope: !156, file: !4, line: 280, baseType: !377, size: 64, offset: 11264)
!381 = !DIDerivedType(tag: DW_TAG_member, name: "copyFromFaceCData", scope: !156, file: !4, line: 281, baseType: !377, size: 64, offset: 11328)
!382 = !DIDerivedType(tag: DW_TAG_member, name: "getNumGrids", scope: !156, file: !4, line: 284, baseType: !244, size: 64, offset: 11392)
!383 = !DIDerivedType(tag: DW_TAG_member, name: "getGridSize", scope: !156, file: !4, line: 285, baseType: !244, size: 64, offset: 11456)
!384 = !DIDerivedType(tag: DW_TAG_member, name: "getGridData", scope: !156, file: !4, line: 286, baseType: !385, size: 64, offset: 11520)
!385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !386, size: 64)
!386 = !DISubroutineType(types: !387)
!387 = !{!388, !154}
!388 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !389, size: 64)
!389 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !390, size: 64)
!390 = !DICompositeType(tag: DW_TAG_structure_type, name: "CCGElem", file: !4, line: 82, flags: DIFlagFwdDecl)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "getGridAdjacency", scope: !156, file: !4, line: 287, baseType: !392, size: 64, offset: 11584)
!392 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !393, size: 64)
!393 = !DISubroutineType(types: !394)
!394 = !{!395, !154}
!395 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !396, size: 64)
!396 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMGridAdjacency", file: !4, line: 120, baseType: !397)
!397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DMGridAdjacency", file: !4, line: 117, size: 256, elements: !398)
!398 = !{!399, !403}
!399 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !397, file: !4, line: 118, baseType: !400, size: 128)
!400 = !DICompositeType(tag: DW_TAG_array_type, baseType: !168, size: 128, elements: !401)
!401 = !{!402}
!402 = !DISubrange(count: 4)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "rotation", scope: !397, file: !4, line: 119, baseType: !400, size: 128, offset: 128)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "getGridOffset", scope: !156, file: !4, line: 288, baseType: !405, size: 64, offset: 11648)
!405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !406, size: 64)
!406 = !DISubroutineType(types: !407)
!407 = !{!408, !154}
!408 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !168, size: 64)
!409 = !DIDerivedType(tag: DW_TAG_member, name: "getGridKey", scope: !156, file: !4, line: 289, baseType: !410, size: 64, offset: 11712)
!410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !411, size: 64)
!411 = !DISubroutineType(types: !412)
!412 = !{null, !154, !413}
!413 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !414, size: 64)
!414 = !DICompositeType(tag: DW_TAG_structure_type, name: "CCGKey", file: !4, line: 83, flags: DIFlagFwdDecl)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "getGridFlagMats", scope: !156, file: !4, line: 290, baseType: !416, size: 64, offset: 11776)
!416 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !417, size: 64)
!417 = !DISubroutineType(types: !418)
!418 = !{!419, !154}
!419 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !420, size: 64)
!420 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMFlagMat", file: !4, line: 126, baseType: !421)
!421 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DMFlagMat", file: !4, line: 123, size: 32, elements: !422)
!422 = !{!423, !424}
!423 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !421, file: !4, line: 124, baseType: !265, size: 16)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !421, file: !4, line: 125, baseType: !178, size: 8, offset: 16)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "getGridHidden", scope: !156, file: !4, line: 291, baseType: !426, size: 64, offset: 11840)
!426 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !427, size: 64)
!427 = !DISubroutineType(types: !428)
!428 = !{!429, !154}
!429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !430, size: 64)
!430 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5, size: 64)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedVert", scope: !156, file: !4, line: 299, baseType: !432, size: 64, offset: 11904)
!432 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !433, size: 64)
!433 = !DISubroutineType(types: !434)
!434 = !{null, !154, !435, !182, !441}
!435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !436, size: 64)
!436 = !DISubroutineType(types: !437)
!437 = !{null, !182, !168, !438, !438, !439}
!438 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !241, size: 64)
!439 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !440, size: 64)
!440 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !265)
!441 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMForeachFlag", file: !4, line: 162, baseType: !15)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedEdge", scope: !156, file: !4, line: 309, baseType: !443, size: 64, offset: 11968)
!443 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !444, size: 64)
!444 = !DISubroutineType(types: !445)
!445 = !{null, !154, !446, !182}
!446 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !447, size: 64)
!447 = !DISubroutineType(types: !448)
!448 = !{null, !182, !168, !438, !438}
!449 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedLoop", scope: !156, file: !4, line: 317, baseType: !450, size: 64, offset: 12032)
!450 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !451, size: 64)
!451 = !DISubroutineType(types: !452)
!452 = !{null, !154, !453, !182, !441}
!453 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !454, size: 64)
!454 = !DISubroutineType(types: !455)
!455 = !{null, !182, !168, !168, !438, !438}
!456 = !DIDerivedType(tag: DW_TAG_member, name: "foreachMappedFaceCenter", scope: !156, file: !4, line: 327, baseType: !457, size: 64, offset: 12096)
!457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !458, size: 64)
!458 = !DISubroutineType(types: !459)
!459 = !{null, !154, !446, !182, !441}
!460 = !DIDerivedType(tag: DW_TAG_member, name: "getMinMax", scope: !156, file: !4, line: 337, baseType: !461, size: 64, offset: 12160)
!461 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !462, size: 64)
!462 = !DISubroutineType(types: !463)
!463 = !{null, !154, !464, !464}
!464 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !224, size: 64)
!465 = !DIDerivedType(tag: DW_TAG_member, name: "getVertCo", scope: !156, file: !4, line: 344, baseType: !466, size: 64, offset: 12224)
!466 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !467, size: 64)
!467 = !DISubroutineType(types: !468)
!468 = !{null, !154, !168, !464}
!469 = !DIDerivedType(tag: DW_TAG_member, name: "getVertCos", scope: !156, file: !4, line: 347, baseType: !470, size: 64, offset: 12288)
!470 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !471, size: 64)
!471 = !DISubroutineType(types: !472)
!472 = !{null, !154, !473}
!473 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !260, size: 64)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "getVertNo", scope: !156, file: !4, line: 350, baseType: !466, size: 64, offset: 12352)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyNo", scope: !156, file: !4, line: 351, baseType: !466, size: 64, offset: 12416)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "getPolyMap", scope: !156, file: !4, line: 355, baseType: !477, size: 64, offset: 12480)
!477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !478, size: 64)
!478 = !DISubroutineType(types: !479)
!479 = !{!480, !483, !154}
!480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !481, size: 64)
!481 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !482)
!482 = !DICompositeType(tag: DW_TAG_structure_type, name: "MeshElemMap", file: !4, line: 355, flags: DIFlagFwdDecl)
!483 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !484, size: 64)
!484 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Object", file: !485, line: 115, size: 11392, elements: !486)
!485 = !DIFile(filename: "blender/source/blender/makesdna/DNA_object_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!486 = !{!487, !549, !553, !556, !557, !558, !559, !560, !561, !562, !563, !564, !565, !566, !567, !571, !581, !595, !596, !638, !639, !642, !643, !659, !660, !661, !662, !663, !664, !665, !666, !668, !669, !670, !671, !672, !673, !674, !675, !676, !677, !678, !680, !681, !682, !683, !684, !685, !688, !689, !690, !691, !692, !693, !694, !695, !696, !697, !698, !699, !700, !701, !702, !703, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !719, !720, !721, !723, !724, !725, !726, !727, !728, !729, !730, !731, !732, !733, !734, !735, !736, !737, !738, !739, !740, !741, !742, !745, !746, !747, !748, !749, !750, !751, !752, !753, !756, !759, !763, !764, !765, !766, !767, !770, !773, !775, !776, !782, !783, !784, !785, !786, !787, !789, !792, !795, !799, !1594, !1595}
!487 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !484, file: !485, line: 116, baseType: !488, size: 960)
!488 = !DIDerivedType(tag: DW_TAG_typedef, name: "ID", file: !489, line: 130, baseType: !490)
!489 = !DIFile(filename: "blender/source/blender/makesdna/DNA_ID.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ID", file: !489, line: 117, size: 960, elements: !491)
!491 = !{!492, !493, !494, !496, !512, !516, !517, !518, !519, !520}
!492 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !490, file: !489, line: 118, baseType: !182, size: 64)
!493 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !490, file: !489, line: 118, baseType: !182, size: 64, offset: 64)
!494 = !DIDerivedType(tag: DW_TAG_member, name: "newid", scope: !490, file: !489, line: 119, baseType: !495, size: 64, offset: 128)
!495 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !490, size: 64)
!496 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !490, file: !489, line: 120, baseType: !497, size: 64, offset: 192)
!497 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !498, size: 64)
!498 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Library", file: !489, line: 136, size: 17600, elements: !499)
!499 = !{!500, !501, !503, !506, !507, !508, !509}
!500 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !498, file: !489, line: 137, baseType: !488, size: 960)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "idblock", scope: !498, file: !489, line: 138, baseType: !502, size: 64, offset: 960)
!502 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !488, size: 64)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "filedata", scope: !498, file: !489, line: 139, baseType: !504, size: 64, offset: 1024)
!504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !505, size: 64)
!505 = !DICompositeType(tag: DW_TAG_structure_type, name: "FileData", file: !489, line: 43, flags: DIFlagFwdDecl)
!506 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !498, file: !489, line: 140, baseType: !199, size: 8192, offset: 1088)
!507 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !498, file: !489, line: 141, baseType: !199, size: 8192, offset: 9280)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !498, file: !489, line: 148, baseType: !497, size: 64, offset: 17472)
!509 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !498, file: !489, line: 150, baseType: !510, size: 64, offset: 17536)
!510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !511, size: 64)
!511 = !DICompositeType(tag: DW_TAG_structure_type, name: "PackedFile", file: !489, line: 45, flags: DIFlagFwdDecl)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !490, file: !489, line: 121, baseType: !513, size: 528, offset: 256)
!513 = !DICompositeType(tag: DW_TAG_array_type, baseType: !178, size: 528, elements: !514)
!514 = !{!515}
!515 = !DISubrange(count: 66)
!516 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !490, file: !489, line: 126, baseType: !265, size: 16, offset: 784)
!517 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !490, file: !489, line: 127, baseType: !168, size: 32, offset: 800)
!518 = !DIDerivedType(tag: DW_TAG_member, name: "icon_id", scope: !490, file: !489, line: 128, baseType: !168, size: 32, offset: 832)
!519 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !490, file: !489, line: 128, baseType: !168, size: 32, offset: 864)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !490, file: !489, line: 129, baseType: !521, size: 64, offset: 896)
!521 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !522, size: 64)
!522 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDProperty", file: !489, line: 75, baseType: !523)
!523 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDProperty", file: !489, line: 62, size: 1024, elements: !524)
!524 = !{!525, !527, !528, !529, !530, !531, !532, !533, !547, !548}
!525 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !523, file: !489, line: 63, baseType: !526, size: 64)
!526 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !523, size: 64)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !523, file: !489, line: 63, baseType: !526, size: 64, offset: 64)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !523, file: !489, line: 64, baseType: !178, size: 8, offset: 128)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !523, file: !489, line: 64, baseType: !178, size: 8, offset: 136)
!530 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !523, file: !489, line: 65, baseType: !265, size: 16, offset: 144)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !523, file: !489, line: 66, baseType: !177, size: 512, offset: 160)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "saved", scope: !523, file: !489, line: 67, baseType: !168, size: 32, offset: 672)
!533 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !523, file: !489, line: 69, baseType: !534, size: 256, offset: 704)
!534 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDPropertyData", file: !489, line: 60, baseType: !535)
!535 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDPropertyData", file: !489, line: 48, size: 256, elements: !536)
!536 = !{!537, !538, !545, !546}
!537 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !535, file: !489, line: 49, baseType: !182, size: 64)
!538 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !535, file: !489, line: 58, baseType: !539, size: 128, offset: 64)
!539 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListBase", file: !540, line: 71, baseType: !541)
!540 = !DIFile(filename: "blender/source/blender/makesdna/DNA_listBase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!541 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ListBase", file: !540, line: 69, size: 128, elements: !542)
!542 = !{!543, !544}
!543 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !541, file: !540, line: 70, baseType: !182, size: 64)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !541, file: !540, line: 70, baseType: !182, size: 64, offset: 64)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !535, file: !489, line: 59, baseType: !168, size: 32, offset: 192)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "val2", scope: !535, file: !489, line: 59, baseType: !168, size: 32, offset: 224)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !523, file: !489, line: 70, baseType: !168, size: 32, offset: 960)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "totallen", scope: !523, file: !489, line: 74, baseType: !168, size: 32, offset: 992)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !484, file: !485, line: 117, baseType: !550, size: 64, offset: 960)
!550 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !551, size: 64)
!551 = !DICompositeType(tag: DW_TAG_structure_type, name: "AnimData", file: !552, line: 58, flags: DIFlagFwdDecl)
!552 = !DIFile(filename: "blender/source/blender/makesdna/DNA_scene_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!553 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !484, file: !485, line: 119, baseType: !554, size: 64, offset: 1024)
!554 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !555, size: 64)
!555 = !DICompositeType(tag: DW_TAG_structure_type, name: "SculptSession", file: !485, line: 57, flags: DIFlagFwdDecl)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !484, file: !485, line: 121, baseType: !265, size: 16, offset: 1088)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "partype", scope: !484, file: !485, line: 121, baseType: !265, size: 16, offset: 1104)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "par1", scope: !484, file: !485, line: 122, baseType: !168, size: 32, offset: 1120)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "par2", scope: !484, file: !485, line: 122, baseType: !168, size: 32, offset: 1152)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "par3", scope: !484, file: !485, line: 122, baseType: !168, size: 32, offset: 1184)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "parsubstr", scope: !484, file: !485, line: 123, baseType: !177, size: 512, offset: 1216)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !484, file: !485, line: 124, baseType: !483, size: 64, offset: 1728)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "track", scope: !484, file: !485, line: 124, baseType: !483, size: 64, offset: 1792)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !484, file: !485, line: 127, baseType: !483, size: 64, offset: 1856)
!565 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_group", scope: !484, file: !485, line: 127, baseType: !483, size: 64, offset: 1920)
!566 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_from", scope: !484, file: !485, line: 127, baseType: !483, size: 64, offset: 1984)
!567 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !484, file: !485, line: 128, baseType: !568, size: 64, offset: 2048)
!568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !569, size: 64)
!569 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ipo", file: !570, line: 46, flags: DIFlagFwdDecl)
!570 = !DIFile(filename: "blender/source/blender/makesdna/DNA_texture_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!571 = !DIDerivedType(tag: DW_TAG_member, name: "bb", scope: !484, file: !485, line: 130, baseType: !572, size: 64, offset: 2112)
!572 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !573, size: 64)
!573 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BoundBox", file: !485, line: 97, size: 832, elements: !574)
!574 = !{!575, !579, !580}
!575 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !573, file: !485, line: 98, baseType: !576, size: 768)
!576 = !DICompositeType(tag: DW_TAG_array_type, baseType: !224, size: 768, elements: !577)
!577 = !{!578, !262}
!578 = !DISubrange(count: 8)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !573, file: !485, line: 99, baseType: !168, size: 32, offset: 768)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !573, file: !485, line: 99, baseType: !168, size: 32, offset: 800)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !484, file: !485, line: 131, baseType: !582, size: 64, offset: 2176)
!582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !583, size: 64)
!583 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAction", file: !584, line: 486, size: 1600, elements: !585)
!584 = !DIFile(filename: "blender/source/blender/makesdna/DNA_action_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!585 = !{!586, !587, !588, !589, !590, !591, !592, !593, !594}
!586 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !583, file: !584, line: 487, baseType: !488, size: 960)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "curves", scope: !583, file: !584, line: 489, baseType: !539, size: 128, offset: 960)
!588 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !583, file: !584, line: 490, baseType: !539, size: 128, offset: 1088)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "groups", scope: !583, file: !584, line: 491, baseType: !539, size: 128, offset: 1216)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !583, file: !584, line: 492, baseType: !539, size: 128, offset: 1344)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !583, file: !584, line: 494, baseType: !168, size: 32, offset: 1472)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "active_marker", scope: !583, file: !584, line: 495, baseType: !168, size: 32, offset: 1504)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "idroot", scope: !583, file: !584, line: 497, baseType: !168, size: 32, offset: 1536)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !583, file: !584, line: 498, baseType: !168, size: 32, offset: 1568)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "poselib", scope: !484, file: !485, line: 132, baseType: !582, size: 64, offset: 2240)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "pose", scope: !484, file: !485, line: 133, baseType: !597, size: 64, offset: 2304)
!597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !598, size: 64)
!598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bPose", file: !584, line: 334, size: 1728, elements: !599)
!599 = !{!600, !601, !605, !606, !607, !608, !609, !610, !611, !612, !613, !614, !615, !616, !617, !637}
!600 = !DIDerivedType(tag: DW_TAG_member, name: "chanbase", scope: !598, file: !584, line: 335, baseType: !539, size: 128)
!601 = !DIDerivedType(tag: DW_TAG_member, name: "chanhash", scope: !598, file: !584, line: 336, baseType: !602, size: 64, offset: 128)
!602 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !603, size: 64)
!603 = !DICompositeType(tag: DW_TAG_structure_type, name: "GHash", file: !604, line: 48, flags: DIFlagFwdDecl)
!604 = !DIFile(filename: "blender/source/blender/blenlib/BLI_ghash.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!605 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !598, file: !584, line: 338, baseType: !265, size: 16, offset: 192)
!606 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !598, file: !584, line: 338, baseType: !265, size: 16, offset: 208)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_layer", scope: !598, file: !584, line: 339, baseType: !5, size: 32, offset: 224)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !598, file: !584, line: 340, baseType: !168, size: 32, offset: 256)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "ctime", scope: !598, file: !584, line: 342, baseType: !224, size: 32, offset: 288)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "stride_offset", scope: !598, file: !584, line: 343, baseType: !260, size: 96, offset: 320)
!611 = !DIDerivedType(tag: DW_TAG_member, name: "cyclic_offset", scope: !598, file: !584, line: 344, baseType: !260, size: 96, offset: 416)
!612 = !DIDerivedType(tag: DW_TAG_member, name: "agroups", scope: !598, file: !584, line: 347, baseType: !539, size: 128, offset: 512)
!613 = !DIDerivedType(tag: DW_TAG_member, name: "active_group", scope: !598, file: !584, line: 349, baseType: !168, size: 32, offset: 640)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "iksolver", scope: !598, file: !584, line: 350, baseType: !168, size: 32, offset: 672)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "ikdata", scope: !598, file: !584, line: 351, baseType: !182, size: 64, offset: 704)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "ikparam", scope: !598, file: !584, line: 352, baseType: !182, size: 64, offset: 768)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !598, file: !584, line: 354, baseType: !618, size: 384, offset: 832)
!618 = !DIDerivedType(tag: DW_TAG_typedef, name: "bAnimVizSettings", file: !584, line: 116, baseType: !619)
!619 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bAnimVizSettings", file: !584, line: 94, size: 384, elements: !620)
!620 = !{!621, !622, !623, !624, !625, !626, !627, !628, !629, !630, !631, !632, !633, !634, !635, !636}
!621 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_sf", scope: !619, file: !584, line: 96, baseType: !168, size: 32)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ef", scope: !619, file: !584, line: 96, baseType: !168, size: 32, offset: 32)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_bc", scope: !619, file: !584, line: 97, baseType: !168, size: 32, offset: 64)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_ac", scope: !619, file: !584, line: 97, baseType: !168, size: 32, offset: 96)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_type", scope: !619, file: !584, line: 99, baseType: !265, size: 16, offset: 128)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_step", scope: !619, file: !584, line: 100, baseType: !265, size: 16, offset: 144)
!627 = !DIDerivedType(tag: DW_TAG_member, name: "ghost_flag", scope: !619, file: !584, line: 102, baseType: !265, size: 16, offset: 160)
!628 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !619, file: !584, line: 105, baseType: !265, size: 16, offset: 176)
!629 = !DIDerivedType(tag: DW_TAG_member, name: "path_type", scope: !619, file: !584, line: 108, baseType: !265, size: 16, offset: 192)
!630 = !DIDerivedType(tag: DW_TAG_member, name: "path_step", scope: !619, file: !584, line: 109, baseType: !265, size: 16, offset: 208)
!631 = !DIDerivedType(tag: DW_TAG_member, name: "path_viewflag", scope: !619, file: !584, line: 111, baseType: !265, size: 16, offset: 224)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "path_bakeflag", scope: !619, file: !584, line: 112, baseType: !265, size: 16, offset: 240)
!633 = !DIDerivedType(tag: DW_TAG_member, name: "path_sf", scope: !619, file: !584, line: 114, baseType: !168, size: 32, offset: 256)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "path_ef", scope: !619, file: !584, line: 114, baseType: !168, size: 32, offset: 288)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "path_bc", scope: !619, file: !584, line: 115, baseType: !168, size: 32, offset: 320)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "path_ac", scope: !619, file: !584, line: 115, baseType: !168, size: 32, offset: 352)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "proxy_act_bone", scope: !598, file: !584, line: 355, baseType: !177, size: 512, offset: 1216)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !484, file: !485, line: 134, baseType: !182, size: 64, offset: 2368)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !484, file: !485, line: 136, baseType: !640, size: 64, offset: 2432)
!640 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !641, size: 64)
!641 = !DICompositeType(tag: DW_TAG_structure_type, name: "bGPdata", file: !552, line: 61, flags: DIFlagFwdDecl)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "avs", scope: !484, file: !485, line: 138, baseType: !618, size: 384, offset: 2496)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "mpath", scope: !484, file: !485, line: 139, baseType: !644, size: 64, offset: 2880)
!644 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !645, size: 64)
!645 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPath", file: !584, line: 80, baseType: !646)
!646 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPath", file: !584, line: 72, size: 192, elements: !647)
!647 = !{!648, !655, !656, !657, !658}
!648 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !646, file: !584, line: 73, baseType: !649, size: 64)
!649 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !650, size: 64)
!650 = !DIDerivedType(tag: DW_TAG_typedef, name: "bMotionPathVert", file: !584, line: 59, baseType: !651)
!651 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bMotionPathVert", file: !584, line: 56, size: 128, elements: !652)
!652 = !{!653, !654}
!653 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !651, file: !584, line: 57, baseType: !260, size: 96)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !651, file: !584, line: 58, baseType: !168, size: 32, offset: 96)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !646, file: !584, line: 74, baseType: !168, size: 32, offset: 64)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !646, file: !584, line: 76, baseType: !168, size: 32, offset: 96)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "end_frame", scope: !646, file: !584, line: 77, baseType: !168, size: 32, offset: 128)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !646, file: !584, line: 79, baseType: !168, size: 32, offset: 160)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "constraintChannels", scope: !484, file: !485, line: 141, baseType: !539, size: 128, offset: 2944)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "effect", scope: !484, file: !485, line: 142, baseType: !539, size: 128, offset: 3072)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "defbase", scope: !484, file: !485, line: 143, baseType: !539, size: 128, offset: 3200)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !484, file: !485, line: 144, baseType: !539, size: 128, offset: 3328)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !484, file: !485, line: 146, baseType: !168, size: 32, offset: 3456)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "restore_mode", scope: !484, file: !485, line: 147, baseType: !168, size: 32, offset: 3488)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !484, file: !485, line: 150, baseType: !229, size: 64, offset: 3520)
!666 = !DIDerivedType(tag: DW_TAG_member, name: "matbits", scope: !484, file: !485, line: 151, baseType: !667, size: 64, offset: 3584)
!667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !178, size: 64)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "totcol", scope: !484, file: !485, line: 152, baseType: !168, size: 32, offset: 3648)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "actcol", scope: !484, file: !485, line: 153, baseType: !168, size: 32, offset: 3680)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "loc", scope: !484, file: !485, line: 156, baseType: !260, size: 96, offset: 3712)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "dloc", scope: !484, file: !485, line: 156, baseType: !260, size: 96, offset: 3808)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "orig", scope: !484, file: !485, line: 156, baseType: !260, size: 96, offset: 3904)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !484, file: !485, line: 157, baseType: !260, size: 96, offset: 4000)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "dsize", scope: !484, file: !485, line: 158, baseType: !260, size: 96, offset: 4096)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "dscale", scope: !484, file: !485, line: 159, baseType: !260, size: 96, offset: 4192)
!676 = !DIDerivedType(tag: DW_TAG_member, name: "rot", scope: !484, file: !485, line: 160, baseType: !260, size: 96, offset: 4288)
!677 = !DIDerivedType(tag: DW_TAG_member, name: "drot", scope: !484, file: !485, line: 160, baseType: !260, size: 96, offset: 4384)
!678 = !DIDerivedType(tag: DW_TAG_member, name: "quat", scope: !484, file: !485, line: 161, baseType: !679, size: 128, offset: 4480)
!679 = !DICompositeType(tag: DW_TAG_array_type, baseType: !224, size: 128, elements: !401)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "dquat", scope: !484, file: !485, line: 161, baseType: !679, size: 128, offset: 4608)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "rotAxis", scope: !484, file: !485, line: 162, baseType: !260, size: 96, offset: 4736)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "drotAxis", scope: !484, file: !485, line: 162, baseType: !260, size: 96, offset: 4832)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "rotAngle", scope: !484, file: !485, line: 163, baseType: !224, size: 32, offset: 4928)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "drotAngle", scope: !484, file: !485, line: 163, baseType: !224, size: 32, offset: 4960)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "obmat", scope: !484, file: !485, line: 164, baseType: !686, size: 512, offset: 4992)
!686 = !DICompositeType(tag: DW_TAG_array_type, baseType: !224, size: 512, elements: !687)
!687 = !{!402, !402}
!688 = !DIDerivedType(tag: DW_TAG_member, name: "parentinv", scope: !484, file: !485, line: 165, baseType: !686, size: 512, offset: 5504)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "constinv", scope: !484, file: !485, line: 166, baseType: !686, size: 512, offset: 6016)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "imat", scope: !484, file: !485, line: 167, baseType: !686, size: 512, offset: 6528)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "imat_ren", scope: !484, file: !485, line: 176, baseType: !686, size: 512, offset: 7040)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !484, file: !485, line: 178, baseType: !5, size: 32, offset: 7552)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !484, file: !485, line: 180, baseType: !265, size: 16, offset: 7584)
!694 = !DIDerivedType(tag: DW_TAG_member, name: "colbits", scope: !484, file: !485, line: 181, baseType: !265, size: 16, offset: 7600)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "transflag", scope: !484, file: !485, line: 183, baseType: !265, size: 16, offset: 7616)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "protectflag", scope: !484, file: !485, line: 183, baseType: !265, size: 16, offset: 7632)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "trackflag", scope: !484, file: !485, line: 184, baseType: !265, size: 16, offset: 7648)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "upflag", scope: !484, file: !485, line: 184, baseType: !265, size: 16, offset: 7664)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "nlaflag", scope: !484, file: !485, line: 185, baseType: !265, size: 16, offset: 7680)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "ipoflag", scope: !484, file: !485, line: 186, baseType: !265, size: 16, offset: 7696)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "scaflag", scope: !484, file: !485, line: 187, baseType: !265, size: 16, offset: 7712)
!702 = !DIDerivedType(tag: DW_TAG_member, name: "scavisflag", scope: !484, file: !485, line: 188, baseType: !178, size: 8, offset: 7728)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "depsflag", scope: !484, file: !485, line: 189, baseType: !178, size: 8, offset: 7736)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "dupon", scope: !484, file: !485, line: 192, baseType: !168, size: 32, offset: 7744)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "dupoff", scope: !484, file: !485, line: 192, baseType: !168, size: 32, offset: 7776)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "dupsta", scope: !484, file: !485, line: 192, baseType: !168, size: 32, offset: 7808)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "dupend", scope: !484, file: !485, line: 192, baseType: !168, size: 32, offset: 7840)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !484, file: !485, line: 194, baseType: !168, size: 32, offset: 7872)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "mass", scope: !484, file: !485, line: 202, baseType: !224, size: 32, offset: 7904)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "damping", scope: !484, file: !485, line: 202, baseType: !224, size: 32, offset: 7936)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "inertia", scope: !484, file: !485, line: 202, baseType: !224, size: 32, offset: 7968)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "formfactor", scope: !484, file: !485, line: 211, baseType: !224, size: 32, offset: 8000)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "rdamping", scope: !484, file: !485, line: 212, baseType: !224, size: 32, offset: 8032)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !484, file: !485, line: 213, baseType: !224, size: 32, offset: 8064)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "max_vel", scope: !484, file: !485, line: 214, baseType: !224, size: 32, offset: 8096)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "min_vel", scope: !484, file: !485, line: 215, baseType: !224, size: 32, offset: 8128)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleRad", scope: !484, file: !485, line: 216, baseType: !224, size: 32, offset: 8160)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "step_height", scope: !484, file: !485, line: 219, baseType: !224, size: 32, offset: 8192)
!719 = !DIDerivedType(tag: DW_TAG_member, name: "jump_speed", scope: !484, file: !485, line: 220, baseType: !224, size: 32, offset: 8224)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "fall_speed", scope: !484, file: !485, line: 221, baseType: !224, size: 32, offset: 8256)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "col_group", scope: !484, file: !485, line: 224, baseType: !722, size: 16, offset: 8288)
!722 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "col_mask", scope: !484, file: !485, line: 224, baseType: !722, size: 16, offset: 8304)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "rotmode", scope: !484, file: !485, line: 226, baseType: !265, size: 16, offset: 8320)
!725 = !DIDerivedType(tag: DW_TAG_member, name: "boundtype", scope: !484, file: !485, line: 228, baseType: !178, size: 8, offset: 8336)
!726 = !DIDerivedType(tag: DW_TAG_member, name: "collision_boundtype", scope: !484, file: !485, line: 229, baseType: !178, size: 8, offset: 8344)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "dtx", scope: !484, file: !485, line: 231, baseType: !265, size: 16, offset: 8352)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "dt", scope: !484, file: !485, line: 232, baseType: !178, size: 8, offset: 8368)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawtype", scope: !484, file: !485, line: 233, baseType: !178, size: 8, offset: 8376)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "empty_drawsize", scope: !484, file: !485, line: 234, baseType: !224, size: 32, offset: 8384)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "dupfacesca", scope: !484, file: !485, line: 235, baseType: !224, size: 32, offset: 8416)
!732 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !484, file: !485, line: 237, baseType: !539, size: 128, offset: 8448)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "sensors", scope: !484, file: !485, line: 238, baseType: !539, size: 128, offset: 8576)
!734 = !DIDerivedType(tag: DW_TAG_member, name: "controllers", scope: !484, file: !485, line: 239, baseType: !539, size: 128, offset: 8704)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "actuators", scope: !484, file: !485, line: 240, baseType: !539, size: 128, offset: 8832)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "sf", scope: !484, file: !485, line: 242, baseType: !224, size: 32, offset: 8960)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !484, file: !485, line: 244, baseType: !265, size: 16, offset: 8992)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "actdef", scope: !484, file: !485, line: 245, baseType: !722, size: 16, offset: 9008)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !484, file: !485, line: 246, baseType: !679, size: 128, offset: 9024)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag", scope: !484, file: !485, line: 248, baseType: !168, size: 32, offset: 9152)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "gameflag2", scope: !484, file: !485, line: 249, baseType: !168, size: 32, offset: 9184)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "bsoft", scope: !484, file: !485, line: 251, baseType: !743, size: 64, offset: 9216)
!743 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !744, size: 64)
!744 = !DICompositeType(tag: DW_TAG_structure_type, name: "BulletSoftBody", file: !485, line: 251, flags: DIFlagFwdDecl)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "restrictflag", scope: !484, file: !485, line: 253, baseType: !178, size: 8, offset: 9280)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !484, file: !485, line: 254, baseType: !178, size: 8, offset: 9288)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "softflag", scope: !484, file: !485, line: 255, baseType: !265, size: 16, offset: 9296)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "anisotropicFriction", scope: !484, file: !485, line: 256, baseType: !260, size: 96, offset: 9312)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "constraints", scope: !484, file: !485, line: 258, baseType: !539, size: 128, offset: 9408)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "nlastrips", scope: !484, file: !485, line: 259, baseType: !539, size: 128, offset: 9536)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "hooks", scope: !484, file: !485, line: 260, baseType: !539, size: 128, offset: 9664)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "particlesystem", scope: !484, file: !485, line: 261, baseType: !539, size: 128, offset: 9792)
!753 = !DIDerivedType(tag: DW_TAG_member, name: "pd", scope: !484, file: !485, line: 263, baseType: !754, size: 64, offset: 9920)
!754 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !755, size: 64)
!755 = !DICompositeType(tag: DW_TAG_structure_type, name: "PartDeflect", file: !485, line: 52, flags: DIFlagFwdDecl)
!756 = !DIDerivedType(tag: DW_TAG_member, name: "soft", scope: !484, file: !485, line: 264, baseType: !757, size: 64, offset: 9984)
!757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !758, size: 64)
!758 = !DICompositeType(tag: DW_TAG_structure_type, name: "SoftBody", file: !485, line: 53, flags: DIFlagFwdDecl)
!759 = !DIDerivedType(tag: DW_TAG_member, name: "dup_group", scope: !484, file: !485, line: 265, baseType: !760, size: 64, offset: 10048)
!760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !761, size: 64)
!761 = !DICompositeType(tag: DW_TAG_structure_type, name: "Group", file: !762, line: 43, flags: DIFlagFwdDecl)
!762 = !DIFile(filename: "blender/source/blender/makesdna/DNA_freestyle_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!763 = !DIDerivedType(tag: DW_TAG_member, name: "body_type", scope: !484, file: !485, line: 267, baseType: !178, size: 8, offset: 10112)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "shapeflag", scope: !484, file: !485, line: 268, baseType: !178, size: 8, offset: 10120)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !484, file: !485, line: 269, baseType: !265, size: 16, offset: 10128)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "smoothresh", scope: !484, file: !485, line: 270, baseType: !224, size: 32, offset: 10144)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "fluidsimSettings", scope: !484, file: !485, line: 272, baseType: !768, size: 64, offset: 10176)
!768 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !769, size: 64)
!769 = !DICompositeType(tag: DW_TAG_structure_type, name: "FluidsimSettings", file: !485, line: 54, flags: DIFlagFwdDecl)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "curve_cache", scope: !484, file: !485, line: 275, baseType: !771, size: 64, offset: 10240)
!771 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !772, size: 64)
!772 = !DICompositeType(tag: DW_TAG_structure_type, name: "CurveCache", file: !485, line: 275, flags: DIFlagFwdDecl)
!773 = !DIDerivedType(tag: DW_TAG_member, name: "derivedDeform", scope: !484, file: !485, line: 277, baseType: !774, size: 64, offset: 10304)
!774 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !156, size: 64)
!775 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFinal", scope: !484, file: !485, line: 277, baseType: !774, size: 64, offset: 10368)
!776 = !DIDerivedType(tag: DW_TAG_member, name: "lastDataMask", scope: !484, file: !485, line: 278, baseType: !777, size: 64, offset: 10432)
!777 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !778, line: 27, baseType: !779)
!778 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "")
!779 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !780, line: 45, baseType: !781)
!780 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!781 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !484, file: !485, line: 279, baseType: !777, size: 64, offset: 10496)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !484, file: !485, line: 280, baseType: !5, size: 32, offset: 10560)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "init_state", scope: !484, file: !485, line: 281, baseType: !5, size: 32, offset: 10592)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "gpulamp", scope: !484, file: !485, line: 283, baseType: !539, size: 128, offset: 10624)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "pc_ids", scope: !484, file: !485, line: 284, baseType: !539, size: 128, offset: 10752)
!787 = !DIDerivedType(tag: DW_TAG_member, name: "duplilist", scope: !484, file: !485, line: 285, baseType: !788, size: 64, offset: 10880)
!788 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !539, size: 64)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_object", scope: !484, file: !485, line: 287, baseType: !790, size: 64, offset: 10944)
!790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !791, size: 64)
!791 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyOb", file: !485, line: 59, flags: DIFlagFwdDecl)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_constraint", scope: !484, file: !485, line: 288, baseType: !793, size: 64, offset: 11008)
!793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !794, size: 64)
!794 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyCon", file: !485, line: 288, flags: DIFlagFwdDecl)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "ima_ofs", scope: !484, file: !485, line: 290, baseType: !796, size: 64, offset: 11072)
!796 = !DICompositeType(tag: DW_TAG_array_type, baseType: !224, size: 64, elements: !797)
!797 = !{!798}
!798 = !DISubrange(count: 2)
!799 = !DIDerivedType(tag: DW_TAG_member, name: "iuser", scope: !484, file: !485, line: 291, baseType: !800, size: 64, offset: 11136)
!800 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !801, size: 64)
!801 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImageUser", file: !802, line: 65, baseType: !803)
!802 = !DIFile(filename: "blender/source/blender/makesdna/DNA_image_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!803 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageUser", file: !802, line: 50, size: 320, elements: !804)
!804 = !{!805, !1581, !1582, !1583, !1584, !1585, !1586, !1587, !1588, !1589, !1590, !1591, !1592, !1593}
!805 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !803, file: !802, line: 51, baseType: !806, size: 64)
!806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !807, size: 64)
!807 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Scene", file: !552, line: 1216, size: 39680, elements: !808)
!808 = !{!809, !810, !811, !812, !815, !816, !817, !829, !830, !831, !832, !833, !834, !835, !836, !837, !838, !839, !843, !846, !849, !1153, !1156, !1455, !1467, !1468, !1469, !1470, !1471, !1472, !1473, !1474, !1477, !1478, !1479, !1480, !1481, !1489, !1555, !1562, !1563, !1570, !1573, !1574, !1575, !1576, !1577, !1578}
!809 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !807, file: !552, line: 1217, baseType: !488, size: 960)
!810 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !807, file: !552, line: 1218, baseType: !550, size: 64, offset: 960)
!811 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !807, file: !552, line: 1220, baseType: !483, size: 64, offset: 1024)
!812 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !807, file: !552, line: 1221, baseType: !813, size: 64, offset: 1088)
!813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !814, size: 64)
!814 = !DICompositeType(tag: DW_TAG_structure_type, name: "World", file: !552, line: 52, flags: DIFlagFwdDecl)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !807, file: !552, line: 1223, baseType: !806, size: 64, offset: 1152)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !807, file: !552, line: 1225, baseType: !539, size: 128, offset: 1216)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "basact", scope: !807, file: !552, line: 1226, baseType: !818, size: 64, offset: 1344)
!818 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !819, size: 64)
!819 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Base", file: !552, line: 69, size: 320, elements: !820)
!820 = !{!821, !822, !823, !824, !825, !826, !827, !828}
!821 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !819, file: !552, line: 70, baseType: !818, size: 64)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !819, file: !552, line: 70, baseType: !818, size: 64, offset: 64)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !819, file: !552, line: 71, baseType: !5, size: 32, offset: 128)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "selcol", scope: !819, file: !552, line: 71, baseType: !5, size: 32, offset: 160)
!825 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !819, file: !552, line: 72, baseType: !168, size: 32, offset: 192)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "sx", scope: !819, file: !552, line: 73, baseType: !265, size: 16, offset: 224)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "sy", scope: !819, file: !552, line: 73, baseType: !265, size: 16, offset: 240)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !819, file: !552, line: 74, baseType: !483, size: 64, offset: 256)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "obedit", scope: !807, file: !552, line: 1227, baseType: !483, size: 64, offset: 1408)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !807, file: !552, line: 1229, baseType: !260, size: 96, offset: 1472)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "twcent", scope: !807, file: !552, line: 1230, baseType: !260, size: 96, offset: 1568)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "twmin", scope: !807, file: !552, line: 1231, baseType: !260, size: 96, offset: 1664)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "twmax", scope: !807, file: !552, line: 1231, baseType: !260, size: 96, offset: 1760)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !807, file: !552, line: 1233, baseType: !5, size: 32, offset: 1856)
!835 = !DIDerivedType(tag: DW_TAG_member, name: "layact", scope: !807, file: !552, line: 1234, baseType: !168, size: 32, offset: 1888)
!836 = !DIDerivedType(tag: DW_TAG_member, name: "lay_updated", scope: !807, file: !552, line: 1235, baseType: !5, size: 32, offset: 1920)
!837 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !807, file: !552, line: 1237, baseType: !265, size: 16, offset: 1952)
!838 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !807, file: !552, line: 1239, baseType: !178, size: 8, offset: 1968)
!839 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !807, file: !552, line: 1240, baseType: !840, size: 8, offset: 1976)
!840 = !DICompositeType(tag: DW_TAG_array_type, baseType: !178, size: 8, elements: !841)
!841 = !{!842}
!842 = !DISubrange(count: 1)
!843 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !807, file: !552, line: 1242, baseType: !844, size: 64, offset: 1984)
!844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !845, size: 64)
!845 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTree", file: !552, line: 57, flags: DIFlagFwdDecl)
!846 = !DIDerivedType(tag: DW_TAG_member, name: "ed", scope: !807, file: !552, line: 1244, baseType: !847, size: 64, offset: 2048)
!847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !848, size: 64)
!848 = !DICompositeType(tag: DW_TAG_structure_type, name: "Editing", file: !552, line: 59, flags: DIFlagFwdDecl)
!849 = !DIDerivedType(tag: DW_TAG_member, name: "toolsettings", scope: !807, file: !552, line: 1246, baseType: !850, size: 64, offset: 2112)
!850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !851, size: 64)
!851 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ToolSettings", file: !552, line: 1067, size: 5184, elements: !852)
!852 = !{!853, !892, !893, !908, !914, !915, !916, !917, !918, !919, !920, !921, !922, !923, !924, !925, !926, !930, !1025, !1052, !1053, !1054, !1055, !1056, !1057, !1058, !1059, !1060, !1061, !1062, !1063, !1064, !1065, !1066, !1067, !1068, !1069, !1070, !1071, !1072, !1074, !1075, !1076, !1077, !1078, !1079, !1080, !1081, !1083, !1084, !1085, !1086, !1087, !1088, !1089, !1090, !1091, !1092, !1093, !1094, !1095, !1096, !1097, !1098, !1099, !1100, !1101, !1102, !1103, !1104, !1105, !1106, !1107, !1108, !1136}
!853 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint", scope: !851, file: !552, line: 1068, baseType: !854, size: 64)
!854 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !855, size: 64)
!855 = !DIDerivedType(tag: DW_TAG_typedef, name: "VPaint", file: !552, line: 934, baseType: !856)
!856 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VPaint", file: !552, line: 925, size: 576, elements: !857)
!857 = !{!858, !875, !876, !877, !878, !879, !891}
!858 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !856, file: !552, line: 926, baseType: !859, size: 320)
!859 = !DIDerivedType(tag: DW_TAG_typedef, name: "Paint", file: !552, line: 830, baseType: !860)
!860 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Paint", file: !552, line: 813, size: 320, elements: !861)
!861 = !{!862, !865, !868, !869, !872, !873, !874}
!862 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !860, file: !552, line: 814, baseType: !863, size: 64)
!863 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !864, size: 64)
!864 = !DICompositeType(tag: DW_TAG_structure_type, name: "Brush", file: !552, line: 51, flags: DIFlagFwdDecl)
!865 = !DIDerivedType(tag: DW_TAG_member, name: "palette", scope: !860, file: !552, line: 815, baseType: !866, size: 64, offset: 64)
!866 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !867, size: 64)
!867 = !DICompositeType(tag: DW_TAG_structure_type, name: "Palette", file: !552, line: 815, flags: DIFlagFwdDecl)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor", scope: !860, file: !552, line: 818, baseType: !182, size: 64, offset: 128)
!869 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor_col", scope: !860, file: !552, line: 819, baseType: !870, size: 32, offset: 192)
!870 = !DICompositeType(tag: DW_TAG_array_type, baseType: !871, size: 32, elements: !401)
!871 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!872 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !860, file: !552, line: 822, baseType: !168, size: 32, offset: 224)
!873 = !DIDerivedType(tag: DW_TAG_member, name: "num_input_samples", scope: !860, file: !552, line: 826, baseType: !168, size: 32, offset: 256)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_flags", scope: !860, file: !552, line: 829, baseType: !168, size: 32, offset: 288)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !856, file: !552, line: 928, baseType: !265, size: 16, offset: 320)
!876 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !856, file: !552, line: 928, baseType: !265, size: 16, offset: 336)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !856, file: !552, line: 929, baseType: !168, size: 32, offset: 352)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint_prev", scope: !856, file: !552, line: 930, baseType: !430, size: 64, offset: 384)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint_prev", scope: !856, file: !552, line: 931, baseType: !880, size: 64, offset: 448)
!880 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !881, size: 64)
!881 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformVert", file: !257, line: 59, size: 128, elements: !882)
!882 = !{!883, !889, !890}
!883 = !DIDerivedType(tag: DW_TAG_member, name: "dw", scope: !881, file: !257, line: 60, baseType: !884, size: 64)
!884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !885, size: 64)
!885 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformWeight", file: !257, line: 54, size: 64, elements: !886)
!886 = !{!887, !888}
!887 = !DIDerivedType(tag: DW_TAG_member, name: "def_nr", scope: !885, file: !257, line: 55, baseType: !168, size: 32)
!888 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !885, file: !257, line: 56, baseType: !224, size: 32, offset: 32)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "totweight", scope: !881, file: !257, line: 61, baseType: !168, size: 32, offset: 64)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !881, file: !257, line: 62, baseType: !168, size: 32, offset: 96)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !856, file: !552, line: 933, baseType: !182, size: 64, offset: 512)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint", scope: !851, file: !552, line: 1069, baseType: !854, size: 64, offset: 64)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !851, file: !552, line: 1070, baseType: !894, size: 64, offset: 128)
!894 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !895, size: 64)
!895 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sculpt", file: !552, line: 916, baseType: !896)
!896 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sculpt", file: !552, line: 891, size: 704, elements: !897)
!897 = !{!898, !899, !900, !902, !903, !904, !905, !906, !907}
!898 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !896, file: !552, line: 892, baseType: !859, size: 320)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !896, file: !552, line: 896, baseType: !168, size: 32, offset: 320)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "radial_symm", scope: !896, file: !552, line: 900, baseType: !901, size: 96, offset: 352)
!901 = !DICompositeType(tag: DW_TAG_array_type, baseType: !168, size: 96, elements: !261)
!902 = !DIDerivedType(tag: DW_TAG_member, name: "detail_size", scope: !896, file: !552, line: 903, baseType: !224, size: 32, offset: 448)
!903 = !DIDerivedType(tag: DW_TAG_member, name: "symmetrize_direction", scope: !896, file: !552, line: 906, baseType: !168, size: 32, offset: 480)
!904 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_factor", scope: !896, file: !552, line: 909, baseType: !224, size: 32, offset: 512)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "constant_detail", scope: !896, file: !552, line: 912, baseType: !224, size: 32, offset: 544)
!906 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_object", scope: !896, file: !552, line: 914, baseType: !483, size: 64, offset: 576)
!907 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !896, file: !552, line: 915, baseType: !182, size: 64, offset: 640)
!908 = !DIDerivedType(tag: DW_TAG_member, name: "uvsculpt", scope: !851, file: !552, line: 1071, baseType: !909, size: 64, offset: 192)
!909 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !910, size: 64)
!910 = !DIDerivedType(tag: DW_TAG_typedef, name: "UvSculpt", file: !552, line: 920, baseType: !911)
!911 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UvSculpt", file: !552, line: 918, size: 320, elements: !912)
!912 = !{!913}
!913 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !911, file: !552, line: 919, baseType: !859, size: 320)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_weight", scope: !851, file: !552, line: 1075, baseType: !224, size: 32, offset: 256)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "doublimit", scope: !851, file: !552, line: 1077, baseType: !224, size: 32, offset: 288)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "normalsize", scope: !851, file: !552, line: 1078, baseType: !224, size: 32, offset: 320)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "automerge", scope: !851, file: !552, line: 1079, baseType: !265, size: 16, offset: 352)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !851, file: !552, line: 1082, baseType: !265, size: 16, offset: 368)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "unwrapper", scope: !851, file: !552, line: 1085, baseType: !178, size: 8, offset: 384)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_flag", scope: !851, file: !552, line: 1086, baseType: !178, size: 8, offset: 392)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "uv_flag", scope: !851, file: !552, line: 1087, baseType: !178, size: 8, offset: 400)
!922 = !DIDerivedType(tag: DW_TAG_member, name: "uv_selectmode", scope: !851, file: !552, line: 1088, baseType: !178, size: 8, offset: 408)
!923 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_margin", scope: !851, file: !552, line: 1090, baseType: !224, size: 32, offset: 416)
!924 = !DIDerivedType(tag: DW_TAG_member, name: "autoik_chainlen", scope: !851, file: !552, line: 1093, baseType: !265, size: 16, offset: 448)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil_flags", scope: !851, file: !552, line: 1096, baseType: !178, size: 8, offset: 464)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !851, file: !552, line: 1098, baseType: !927, size: 40, offset: 472)
!927 = !DICompositeType(tag: DW_TAG_array_type, baseType: !178, size: 40, elements: !928)
!928 = !{!929}
!929 = !DISubrange(count: 5)
!930 = !DIDerivedType(tag: DW_TAG_member, name: "imapaint", scope: !851, file: !552, line: 1101, baseType: !931, size: 832, offset: 512)
!931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePaintSettings", file: !552, line: 836, size: 832, elements: !932)
!932 = !{!933, !934, !935, !936, !937, !938, !940, !941, !942, !1021, !1022, !1023, !1024}
!933 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !931, file: !552, line: 837, baseType: !859, size: 320)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !931, file: !552, line: 839, baseType: !265, size: 16, offset: 320)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "missing_data", scope: !931, file: !552, line: 839, baseType: !265, size: 16, offset: 336)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "seam_bleed", scope: !931, file: !552, line: 842, baseType: !265, size: 16, offset: 352)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "normal_angle", scope: !931, file: !552, line: 842, baseType: !265, size: 16, offset: 368)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "screen_grab_size", scope: !931, file: !552, line: 843, baseType: !939, size: 32, offset: 384)
!939 = !DICompositeType(tag: DW_TAG_array_type, baseType: !265, size: 32, elements: !797)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !931, file: !552, line: 845, baseType: !168, size: 32, offset: 416)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !931, file: !552, line: 847, baseType: !182, size: 64, offset: 448)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "stencil", scope: !931, file: !552, line: 848, baseType: !943, size: 64, offset: 512)
!943 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !944, size: 64)
!944 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Image", file: !802, line: 77, size: 15424, elements: !945)
!945 = !{!946, !947, !948, !951, !954, !957, !960, !963, !964, !965, !966, !967, !968, !969, !970, !971, !972, !973, !974, !975, !976, !977, !978, !979, !992, !993, !994, !995, !996, !997, !998, !999, !1000, !1001, !1002, !1003, !1004, !1010, !1011, !1015}
!946 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !944, file: !802, line: 78, baseType: !488, size: 960)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !944, file: !802, line: 80, baseType: !199, size: 8192, offset: 960)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !944, file: !802, line: 82, baseType: !949, size: 64, offset: 9152)
!949 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !950, size: 64)
!950 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieCache", file: !802, line: 43, flags: DIFlagFwdDecl)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !944, file: !802, line: 83, baseType: !952, size: 64, offset: 9216)
!952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !953, size: 64)
!953 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUTexture", file: !489, line: 46, flags: DIFlagFwdDecl)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !944, file: !802, line: 86, baseType: !955, size: 64, offset: 9280)
!955 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !956, size: 64)
!956 = !DICompositeType(tag: DW_TAG_structure_type, name: "anim", file: !802, line: 41, flags: DIFlagFwdDecl)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "rr", scope: !944, file: !802, line: 87, baseType: !958, size: 64, offset: 9344)
!958 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !959, size: 64)
!959 = !DICompositeType(tag: DW_TAG_structure_type, name: "RenderResult", file: !802, line: 44, flags: DIFlagFwdDecl)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "renders", scope: !944, file: !802, line: 89, baseType: !961, size: 512, offset: 9408)
!961 = !DICompositeType(tag: DW_TAG_array_type, baseType: !958, size: 512, elements: !962)
!962 = !{!578}
!963 = !DIDerivedType(tag: DW_TAG_member, name: "render_slot", scope: !944, file: !802, line: 90, baseType: !265, size: 16, offset: 9920)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "last_render_slot", scope: !944, file: !802, line: 90, baseType: !265, size: 16, offset: 9936)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !944, file: !802, line: 92, baseType: !265, size: 16, offset: 9952)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !944, file: !802, line: 92, baseType: !265, size: 16, offset: 9968)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !944, file: !802, line: 93, baseType: !265, size: 16, offset: 9984)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !944, file: !802, line: 93, baseType: !265, size: 16, offset: 10000)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !944, file: !802, line: 94, baseType: !168, size: 32, offset: 10016)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "tpageflag", scope: !944, file: !802, line: 97, baseType: !265, size: 16, offset: 10048)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "totbind", scope: !944, file: !802, line: 97, baseType: !265, size: 16, offset: 10064)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "xrep", scope: !944, file: !802, line: 98, baseType: !265, size: 16, offset: 10080)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "yrep", scope: !944, file: !802, line: 98, baseType: !265, size: 16, offset: 10096)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "twsta", scope: !944, file: !802, line: 99, baseType: !265, size: 16, offset: 10112)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "twend", scope: !944, file: !802, line: 99, baseType: !265, size: 16, offset: 10128)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "bindcode", scope: !944, file: !802, line: 100, baseType: !5, size: 32, offset: 10144)
!977 = !DIDerivedType(tag: DW_TAG_member, name: "repbind", scope: !944, file: !802, line: 101, baseType: !430, size: 64, offset: 10176)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !944, file: !802, line: 103, baseType: !510, size: 64, offset: 10240)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !944, file: !802, line: 104, baseType: !980, size: 64, offset: 10304)
!980 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !981, size: 64)
!981 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PreviewImage", file: !489, line: 159, size: 448, elements: !982)
!982 = !{!983, !985, !986, !987, !988, !990}
!983 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !981, file: !489, line: 161, baseType: !984, size: 64)
!984 = !DICompositeType(tag: DW_TAG_array_type, baseType: !5, size: 64, elements: !797)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !981, file: !489, line: 162, baseType: !984, size: 64, offset: 64)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !981, file: !489, line: 163, baseType: !939, size: 32, offset: 128)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !981, file: !489, line: 164, baseType: !939, size: 32, offset: 160)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !981, file: !489, line: 165, baseType: !989, size: 128, offset: 192)
!989 = !DICompositeType(tag: DW_TAG_array_type, baseType: !430, size: 128, elements: !797)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !981, file: !489, line: 166, baseType: !991, size: 128, offset: 320)
!991 = !DICompositeType(tag: DW_TAG_array_type, baseType: !952, size: 128, elements: !797)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "lastupdate", scope: !944, file: !802, line: 107, baseType: !224, size: 32, offset: 10368)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "lastused", scope: !944, file: !802, line: 108, baseType: !168, size: 32, offset: 10400)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "animspeed", scope: !944, file: !802, line: 109, baseType: !265, size: 16, offset: 10432)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !944, file: !802, line: 110, baseType: !265, size: 16, offset: 10448)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "gen_x", scope: !944, file: !802, line: 113, baseType: !168, size: 32, offset: 10464)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "gen_y", scope: !944, file: !802, line: 113, baseType: !168, size: 32, offset: 10496)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "gen_type", scope: !944, file: !802, line: 114, baseType: !178, size: 8, offset: 10528)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "gen_flag", scope: !944, file: !802, line: 114, baseType: !178, size: 8, offset: 10536)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "gen_depth", scope: !944, file: !802, line: 115, baseType: !265, size: 16, offset: 10544)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "gen_color", scope: !944, file: !802, line: 116, baseType: !679, size: 128, offset: 10560)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !944, file: !802, line: 119, baseType: !224, size: 32, offset: 10688)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !944, file: !802, line: 119, baseType: !224, size: 32, offset: 10720)
!1004 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !944, file: !802, line: 122, baseType: !1005, size: 512, offset: 10752)
!1005 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedColorspaceSettings", file: !1006, line: 182, baseType: !1007)
!1006 = !DIFile(filename: "blender/source/blender/makesdna/DNA_color_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1007 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedColorspaceSettings", file: !1006, line: 180, size: 512, elements: !1008)
!1008 = !{!1009}
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1007, file: !1006, line: 181, baseType: !177, size: 512)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !944, file: !802, line: 123, baseType: !178, size: 8, offset: 11264)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !944, file: !802, line: 125, baseType: !1012, size: 56, offset: 11272)
!1012 = !DICompositeType(tag: DW_TAG_array_type, baseType: !178, size: 56, elements: !1013)
!1013 = !{!1014}
!1014 = !DISubrange(count: 7)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "render_slots", scope: !944, file: !802, line: 126, baseType: !1016, size: 4096, offset: 11328)
!1016 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1017, size: 4096, elements: !962)
!1017 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderSlot", file: !802, line: 69, baseType: !1018)
!1018 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderSlot", file: !802, line: 67, size: 512, elements: !1019)
!1019 = !{!1020}
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !1018, file: !802, line: 68, baseType: !177, size: 512)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !931, file: !552, line: 849, baseType: !943, size: 64, offset: 576)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "canvas", scope: !931, file: !552, line: 850, baseType: !943, size: 64, offset: 640)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "stencil_col", scope: !931, file: !552, line: 851, baseType: !260, size: 96, offset: 704)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !931, file: !552, line: 852, baseType: !224, size: 32, offset: 800)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !851, file: !552, line: 1104, baseType: !1026, size: 1344, offset: 1344)
!1026 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleEditSettings", file: !552, line: 867, size: 1344, elements: !1027)
!1027 = !{!1028, !1029, !1030, !1031, !1032, !1043, !1044, !1045, !1046, !1047, !1048, !1049, !1050, !1051}
!1028 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1026, file: !552, line: 868, baseType: !265, size: 16)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "totrekey", scope: !1026, file: !552, line: 869, baseType: !265, size: 16, offset: 16)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "totaddkey", scope: !1026, file: !552, line: 870, baseType: !265, size: 16, offset: 32)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "brushtype", scope: !1026, file: !552, line: 871, baseType: !265, size: 16, offset: 48)
!1032 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !1026, file: !552, line: 873, baseType: !1033, size: 896, offset: 64)
!1033 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1034, size: 896, elements: !1013)
!1034 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleBrushData", file: !552, line: 864, baseType: !1035)
!1035 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleBrushData", file: !552, line: 859, size: 128, elements: !1036)
!1036 = !{!1037, !1038, !1039, !1040, !1041, !1042}
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1035, file: !552, line: 860, baseType: !265, size: 16)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !1035, file: !552, line: 861, baseType: !265, size: 16, offset: 16)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !1035, file: !552, line: 861, baseType: !265, size: 16, offset: 32)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !1035, file: !552, line: 861, baseType: !265, size: 16, offset: 48)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1035, file: !552, line: 862, baseType: !168, size: 32, offset: 64)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "strength", scope: !1035, file: !552, line: 863, baseType: !224, size: 32, offset: 96)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !1026, file: !552, line: 874, baseType: !182, size: 64, offset: 960)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "emitterdist", scope: !1026, file: !552, line: 876, baseType: !224, size: 32, offset: 1024)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1026, file: !552, line: 876, baseType: !224, size: 32, offset: 1056)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !1026, file: !552, line: 878, baseType: !168, size: 32, offset: 1088)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "edittype", scope: !1026, file: !552, line: 879, baseType: !168, size: 32, offset: 1120)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "draw_step", scope: !1026, file: !552, line: 881, baseType: !168, size: 32, offset: 1152)
!1049 = !DIDerivedType(tag: DW_TAG_member, name: "fade_frames", scope: !1026, file: !552, line: 881, baseType: !168, size: 32, offset: 1184)
!1050 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !1026, file: !552, line: 883, baseType: !806, size: 64, offset: 1216)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !1026, file: !552, line: 884, baseType: !483, size: 64, offset: 1280)
!1052 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_size", scope: !851, file: !552, line: 1107, baseType: !224, size: 32, offset: 2688)
!1053 = !DIDerivedType(tag: DW_TAG_member, name: "select_thresh", scope: !851, file: !552, line: 1110, baseType: !224, size: 32, offset: 2720)
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_mode", scope: !851, file: !552, line: 1113, baseType: !265, size: 16, offset: 2752)
!1055 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_flag", scope: !851, file: !552, line: 1113, baseType: !265, size: 16, offset: 2768)
!1056 = !DIDerivedType(tag: DW_TAG_member, name: "multires_subdiv_type", scope: !851, file: !552, line: 1116, baseType: !178, size: 8, offset: 2784)
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !851, file: !552, line: 1117, baseType: !840, size: 8, offset: 2792)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_resolution", scope: !851, file: !552, line: 1120, baseType: !265, size: 16, offset: 2800)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_internal", scope: !851, file: !552, line: 1121, baseType: !224, size: 32, offset: 2816)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_external", scope: !851, file: !552, line: 1122, baseType: !224, size: 32, offset: 2848)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_ratio", scope: !851, file: !552, line: 1123, baseType: !224, size: 32, offset: 2880)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_limit", scope: !851, file: !552, line: 1124, baseType: !224, size: 32, offset: 2912)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_angle_limit", scope: !851, file: !552, line: 1125, baseType: !224, size: 32, offset: 2944)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_correlation_limit", scope: !851, file: !552, line: 1126, baseType: !224, size: 32, offset: 2976)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_symmetry_limit", scope: !851, file: !552, line: 1127, baseType: !224, size: 32, offset: 3008)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_angle_weight", scope: !851, file: !552, line: 1128, baseType: !224, size: 32, offset: 3040)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_length_weight", scope: !851, file: !552, line: 1129, baseType: !224, size: 32, offset: 3072)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_distance_weight", scope: !851, file: !552, line: 1130, baseType: !224, size: 32, offset: 3104)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_options", scope: !851, file: !552, line: 1131, baseType: !265, size: 16, offset: 3136)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro", scope: !851, file: !552, line: 1132, baseType: !178, size: 8, offset: 3152)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro_passes", scope: !851, file: !552, line: 1133, baseType: !178, size: 8, offset: 3160)
!1072 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivisions", scope: !851, file: !552, line: 1134, baseType: !1073, size: 24, offset: 3168)
!1073 = !DICompositeType(tag: DW_TAG_array_type, baseType: !178, size: 24, elements: !261)
!1074 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_multi_level", scope: !851, file: !552, line: 1135, baseType: !178, size: 8, offset: 3192)
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_template", scope: !851, file: !552, line: 1138, baseType: !483, size: 64, offset: 3200)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching", scope: !851, file: !552, line: 1139, baseType: !178, size: 8, offset: 3264)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching_convert", scope: !851, file: !552, line: 1140, baseType: !178, size: 8, offset: 3272)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivision_number", scope: !851, file: !552, line: 1141, baseType: !178, size: 8, offset: 3280)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_options", scope: !851, file: !552, line: 1142, baseType: !178, size: 8, offset: 3288)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_roll", scope: !851, file: !552, line: 1143, baseType: !178, size: 8, offset: 3296)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_side_string", scope: !851, file: !552, line: 1144, baseType: !1082, size: 64, offset: 3304)
!1082 = !DICompositeType(tag: DW_TAG_array_type, baseType: !178, size: 64, elements: !962)
!1083 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_num_string", scope: !851, file: !552, line: 1145, baseType: !1082, size: 64, offset: 3368)
!1084 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode", scope: !851, file: !552, line: 1148, baseType: !178, size: 8, offset: 3432)
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode_live_unwrap", scope: !851, file: !552, line: 1149, baseType: !178, size: 8, offset: 3440)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "snap_mode", scope: !851, file: !552, line: 1152, baseType: !178, size: 8, offset: 3448)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "snap_node_mode", scope: !851, file: !552, line: 1152, baseType: !178, size: 8, offset: 3456)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "snap_uv_mode", scope: !851, file: !552, line: 1153, baseType: !178, size: 8, offset: 3464)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "snap_flag", scope: !851, file: !552, line: 1154, baseType: !265, size: 16, offset: 3472)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "snap_target", scope: !851, file: !552, line: 1154, baseType: !265, size: 16, offset: 3488)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "proportional", scope: !851, file: !552, line: 1155, baseType: !265, size: 16, offset: 3504)
!1092 = !DIDerivedType(tag: DW_TAG_member, name: "prop_mode", scope: !851, file: !552, line: 1155, baseType: !265, size: 16, offset: 3520)
!1093 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_objects", scope: !851, file: !552, line: 1156, baseType: !178, size: 8, offset: 3536)
!1094 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_mask", scope: !851, file: !552, line: 1157, baseType: !178, size: 8, offset: 3544)
!1095 = !DIDerivedType(tag: DW_TAG_member, name: "auto_normalize", scope: !851, file: !552, line: 1159, baseType: !178, size: 8, offset: 3552)
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "multipaint", scope: !851, file: !552, line: 1160, baseType: !178, size: 8, offset: 3560)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "weightuser", scope: !851, file: !552, line: 1161, baseType: !178, size: 8, offset: 3568)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "vgroupsubset", scope: !851, file: !552, line: 1162, baseType: !178, size: 8, offset: 3576)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "use_uv_sculpt", scope: !851, file: !552, line: 1165, baseType: !168, size: 32, offset: 3584)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_settings", scope: !851, file: !552, line: 1166, baseType: !168, size: 32, offset: 3616)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_tool", scope: !851, file: !552, line: 1167, baseType: !168, size: 32, offset: 3648)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "uv_relax_method", scope: !851, file: !552, line: 1168, baseType: !168, size: 32, offset: 3680)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_settings", scope: !851, file: !552, line: 1171, baseType: !265, size: 16, offset: 3712)
!1104 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !851, file: !552, line: 1171, baseType: !265, size: 16, offset: 3728)
!1105 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_size", scope: !851, file: !552, line: 1172, baseType: !168, size: 32, offset: 3744)
!1106 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_unprojected_radius", scope: !851, file: !552, line: 1173, baseType: !224, size: 32, offset: 3776)
!1107 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_alpha", scope: !851, file: !552, line: 1174, baseType: !224, size: 32, offset: 3808)
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "unified_paint_settings", scope: !851, file: !552, line: 1177, baseType: !1109, size: 1024, offset: 3840)
!1109 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnifiedPaintSettings", file: !552, line: 963, size: 1024, elements: !1110)
!1110 = !{!1111, !1112, !1113, !1114, !1115, !1116, !1117, !1118, !1119, !1120, !1121, !1122, !1123, !1124, !1125, !1126, !1127, !1128, !1129, !1130, !1131, !1134, !1135}
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1109, file: !552, line: 965, baseType: !168, size: 32)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "unprojected_radius", scope: !1109, file: !552, line: 968, baseType: !224, size: 32, offset: 32)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !1109, file: !552, line: 971, baseType: !224, size: 32, offset: 64)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1109, file: !552, line: 974, baseType: !224, size: 32, offset: 96)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "rgb", scope: !1109, file: !552, line: 977, baseType: !260, size: 96, offset: 128)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "secondary_rgb", scope: !1109, file: !552, line: 979, baseType: !260, size: 96, offset: 224)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1109, file: !552, line: 982, baseType: !168, size: 32, offset: 320)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "last_rake", scope: !1109, file: !552, line: 987, baseType: !796, size: 64, offset: 352)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "brush_rotation", scope: !1109, file: !552, line: 989, baseType: !224, size: 32, offset: 416)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "draw_anchored", scope: !1109, file: !552, line: 994, baseType: !168, size: 32, offset: 448)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_size", scope: !1109, file: !552, line: 995, baseType: !168, size: 32, offset: 480)
!1122 = !DIDerivedType(tag: DW_TAG_member, name: "draw_inverted", scope: !1109, file: !552, line: 997, baseType: !178, size: 8, offset: 512)
!1123 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1109, file: !552, line: 998, baseType: !1012, size: 56, offset: 520)
!1124 = !DIDerivedType(tag: DW_TAG_member, name: "overlap_factor", scope: !1109, file: !552, line: 1000, baseType: !224, size: 32, offset: 576)
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_initial_mouse", scope: !1109, file: !552, line: 1003, baseType: !796, size: 64, offset: 608)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "stroke_active", scope: !1109, file: !552, line: 1006, baseType: !168, size: 32, offset: 672)
!1127 = !DIDerivedType(tag: DW_TAG_member, name: "size_pressure_value", scope: !1109, file: !552, line: 1009, baseType: !224, size: 32, offset: 704)
!1128 = !DIDerivedType(tag: DW_TAG_member, name: "tex_mouse", scope: !1109, file: !552, line: 1012, baseType: !796, size: 64, offset: 736)
!1129 = !DIDerivedType(tag: DW_TAG_member, name: "mask_tex_mouse", scope: !1109, file: !552, line: 1015, baseType: !796, size: 64, offset: 800)
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "do_linear_conversion", scope: !1109, file: !552, line: 1018, baseType: !168, size: 32, offset: 864)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1109, file: !552, line: 1019, baseType: !1132, size: 64, offset: 896)
!1132 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1133, size: 64)
!1133 = !DICompositeType(tag: DW_TAG_structure_type, name: "ColorSpace", file: !552, line: 63, flags: DIFlagFwdDecl)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_radius", scope: !1109, file: !552, line: 1023, baseType: !224, size: 32, offset: 960)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1109, file: !552, line: 1024, baseType: !168, size: 32, offset: 992)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "statvis", scope: !851, file: !552, line: 1179, baseType: !1137, size: 320, offset: 4864)
!1137 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MeshStatVis", file: !552, line: 1043, size: 320, elements: !1138)
!1138 = !{!1139, !1140, !1142, !1143, !1144, !1145, !1146, !1147, !1148, !1149, !1150, !1151, !1152}
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1137, file: !552, line: 1044, baseType: !178, size: 8)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "_pad1", scope: !1137, file: !552, line: 1045, baseType: !1141, size: 16, offset: 8)
!1141 = !DICompositeType(tag: DW_TAG_array_type, baseType: !178, size: 16, elements: !797)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_axis", scope: !1137, file: !552, line: 1048, baseType: !178, size: 8, offset: 24)
!1143 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_min", scope: !1137, file: !552, line: 1049, baseType: !224, size: 32, offset: 32)
!1144 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_max", scope: !1137, file: !552, line: 1049, baseType: !224, size: 32, offset: 64)
!1145 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_min", scope: !1137, file: !552, line: 1052, baseType: !224, size: 32, offset: 96)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_max", scope: !1137, file: !552, line: 1052, baseType: !224, size: 32, offset: 128)
!1147 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_samples", scope: !1137, file: !552, line: 1053, baseType: !178, size: 8, offset: 160)
!1148 = !DIDerivedType(tag: DW_TAG_member, name: "_pad2", scope: !1137, file: !552, line: 1054, baseType: !1073, size: 24, offset: 168)
!1149 = !DIDerivedType(tag: DW_TAG_member, name: "distort_min", scope: !1137, file: !552, line: 1057, baseType: !224, size: 32, offset: 192)
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "distort_max", scope: !1137, file: !552, line: 1057, baseType: !224, size: 32, offset: 224)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_min", scope: !1137, file: !552, line: 1060, baseType: !224, size: 32, offset: 256)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_max", scope: !1137, file: !552, line: 1060, baseType: !224, size: 32, offset: 288)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !807, file: !552, line: 1247, baseType: !1154, size: 64, offset: 2176)
!1154 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1155, size: 64)
!1155 = !DICompositeType(tag: DW_TAG_structure_type, name: "SceneStats", file: !552, line: 60, flags: DIFlagFwdDecl)
!1156 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !807, file: !552, line: 1251, baseType: !1157, size: 31872, offset: 2240)
!1157 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderData", file: !552, line: 403, size: 31872, elements: !1158)
!1158 = !{!1159, !1242, !1262, !1271, !1291, !1311, !1312, !1313, !1314, !1315, !1316, !1317, !1318, !1319, !1320, !1321, !1322, !1323, !1324, !1325, !1326, !1327, !1328, !1329, !1330, !1331, !1332, !1333, !1334, !1335, !1336, !1337, !1338, !1339, !1340, !1341, !1342, !1343, !1344, !1345, !1346, !1347, !1348, !1349, !1350, !1351, !1352, !1353, !1354, !1355, !1356, !1357, !1358, !1359, !1360, !1361, !1362, !1363, !1364, !1365, !1373, !1374, !1375, !1376, !1377, !1378, !1379, !1380, !1381, !1382, !1383, !1384, !1385, !1386, !1387, !1388, !1389, !1390, !1391, !1392, !1393, !1394, !1395, !1396, !1397, !1398, !1399, !1400, !1401, !1405, !1406, !1407, !1408, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1417, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1431, !1432, !1433, !1437, !1453, !1454}
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !1157, file: !552, line: 404, baseType: !1160, size: 1984)
!1160 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageFormatData", file: !552, line: 259, size: 1984, elements: !1161)
!1161 = !{!1162, !1163, !1164, !1165, !1166, !1167, !1168, !1169, !1170, !1171, !1172, !1173, !1174, !1175, !1179, !1237}
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !1160, file: !552, line: 260, baseType: !178, size: 8)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1160, file: !552, line: 263, baseType: !178, size: 8, offset: 8)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1160, file: !552, line: 266, baseType: !178, size: 8, offset: 16)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1160, file: !552, line: 267, baseType: !178, size: 8, offset: 24)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1160, file: !552, line: 269, baseType: !178, size: 8, offset: 32)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "compress", scope: !1160, file: !552, line: 270, baseType: !178, size: 8, offset: 40)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "exr_codec", scope: !1160, file: !552, line: 276, baseType: !178, size: 8, offset: 48)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_flag", scope: !1160, file: !552, line: 279, baseType: !178, size: 8, offset: 56)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_white", scope: !1160, file: !552, line: 280, baseType: !265, size: 16, offset: 64)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_black", scope: !1160, file: !552, line: 280, baseType: !265, size: 16, offset: 80)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_gamma", scope: !1160, file: !552, line: 281, baseType: !224, size: 32, offset: 96)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_flag", scope: !1160, file: !552, line: 284, baseType: !178, size: 8, offset: 128)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_codec", scope: !1160, file: !552, line: 285, baseType: !178, size: 8, offset: 136)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1160, file: !552, line: 287, baseType: !1176, size: 48, offset: 144)
!1176 = !DICompositeType(tag: DW_TAG_array_type, baseType: !178, size: 48, elements: !1177)
!1177 = !{!1178}
!1178 = !DISubrange(count: 6)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !1160, file: !552, line: 290, baseType: !1180, size: 1280, offset: 192)
!1180 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedViewSettings", file: !1006, line: 174, baseType: !1181)
!1181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedViewSettings", file: !1006, line: 166, size: 1280, elements: !1182)
!1182 = !{!1183, !1184, !1185, !1186, !1187, !1188, !1189, !1236}
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1181, file: !1006, line: 167, baseType: !168, size: 32)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1181, file: !1006, line: 167, baseType: !168, size: 32, offset: 32)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "look", scope: !1181, file: !1006, line: 168, baseType: !177, size: 512, offset: 64)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "view_transform", scope: !1181, file: !1006, line: 169, baseType: !177, size: 512, offset: 576)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "exposure", scope: !1181, file: !1006, line: 170, baseType: !224, size: 32, offset: 1088)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !1181, file: !1006, line: 171, baseType: !224, size: 32, offset: 1120)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "curve_mapping", scope: !1181, file: !1006, line: 172, baseType: !1190, size: 64, offset: 1152)
!1190 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1191, size: 64)
!1191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapping", file: !1006, line: 72, size: 3072, elements: !1192)
!1192 = !{!1193, !1194, !1195, !1196, !1197, !1206, !1207, !1232, !1233, !1234, !1235}
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1191, file: !1006, line: 73, baseType: !168, size: 32)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !1191, file: !1006, line: 73, baseType: !168, size: 32, offset: 32)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "preset", scope: !1191, file: !1006, line: 74, baseType: !168, size: 32, offset: 64)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !1191, file: !1006, line: 75, baseType: !168, size: 32, offset: 96)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "curr", scope: !1191, file: !1006, line: 77, baseType: !1198, size: 128, offset: 128)
!1198 = !DIDerivedType(tag: DW_TAG_typedef, name: "rctf", file: !1199, line: 95, baseType: !1200)
!1199 = !DIFile(filename: "blender/source/blender/makesdna/DNA_vec_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1200 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rctf", file: !1199, line: 92, size: 128, elements: !1201)
!1201 = !{!1202, !1203, !1204, !1205}
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !1200, file: !1199, line: 93, baseType: !224, size: 32)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !1200, file: !1199, line: 93, baseType: !224, size: 32, offset: 32)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !1200, file: !1199, line: 94, baseType: !224, size: 32, offset: 64)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !1200, file: !1199, line: 94, baseType: !224, size: 32, offset: 96)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "clipr", scope: !1191, file: !1006, line: 77, baseType: !1198, size: 128, offset: 256)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "cm", scope: !1191, file: !1006, line: 79, baseType: !1208, size: 2304, offset: 384)
!1208 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1209, size: 2304, elements: !401)
!1209 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMap", file: !1006, line: 67, baseType: !1210)
!1210 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMap", file: !1006, line: 55, size: 576, elements: !1211)
!1211 = !{!1212, !1213, !1214, !1215, !1216, !1217, !1218, !1219, !1228, !1229, !1230, !1231}
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !1210, file: !1006, line: 56, baseType: !265, size: 16)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1210, file: !1006, line: 56, baseType: !265, size: 16, offset: 16)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1210, file: !1006, line: 58, baseType: !224, size: 32, offset: 32)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "mintable", scope: !1210, file: !1006, line: 59, baseType: !224, size: 32, offset: 64)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "maxtable", scope: !1210, file: !1006, line: 59, baseType: !224, size: 32, offset: 96)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "ext_in", scope: !1210, file: !1006, line: 60, baseType: !796, size: 64, offset: 128)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "ext_out", scope: !1210, file: !1006, line: 60, baseType: !796, size: 64, offset: 192)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !1210, file: !1006, line: 61, baseType: !1220, size: 64, offset: 256)
!1220 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1221, size: 64)
!1221 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMapPoint", file: !1006, line: 47, baseType: !1222)
!1222 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapPoint", file: !1006, line: 44, size: 96, elements: !1223)
!1223 = !{!1224, !1225, !1226, !1227}
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1222, file: !1006, line: 45, baseType: !224, size: 32)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1222, file: !1006, line: 45, baseType: !224, size: 32, offset: 32)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1222, file: !1006, line: 46, baseType: !265, size: 16, offset: 64)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "shorty", scope: !1222, file: !1006, line: 46, baseType: !265, size: 16, offset: 80)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !1210, file: !1006, line: 62, baseType: !1220, size: 64, offset: 320)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "premultable", scope: !1210, file: !1006, line: 64, baseType: !1220, size: 64, offset: 384)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_in", scope: !1210, file: !1006, line: 65, baseType: !796, size: 64, offset: 448)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_out", scope: !1210, file: !1006, line: 66, baseType: !796, size: 64, offset: 512)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "black", scope: !1191, file: !1006, line: 80, baseType: !260, size: 96, offset: 2688)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "white", scope: !1191, file: !1006, line: 80, baseType: !260, size: 96, offset: 2784)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "bwmul", scope: !1191, file: !1006, line: 81, baseType: !260, size: 96, offset: 2880)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "sample", scope: !1191, file: !1006, line: 83, baseType: !260, size: 96, offset: 2976)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1181, file: !1006, line: 173, baseType: !182, size: 64, offset: 1216)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !1160, file: !552, line: 291, baseType: !1238, size: 512, offset: 1472)
!1238 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedDisplaySettings", file: !1006, line: 178, baseType: !1239)
!1239 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedDisplaySettings", file: !1006, line: 176, size: 512, elements: !1240)
!1240 = !{!1241}
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "display_device", scope: !1239, file: !1006, line: 177, baseType: !177, size: 512)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecdata", scope: !1157, file: !552, line: 406, baseType: !1243, size: 64, offset: 1984)
!1243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1244, size: 64)
!1244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AviCodecData", file: !552, line: 80, size: 1472, elements: !1245)
!1245 = !{!1246, !1247, !1248, !1249, !1250, !1251, !1252, !1253, !1254, !1255, !1256, !1257, !1258}
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "lpFormat", scope: !1244, file: !552, line: 81, baseType: !182, size: 64)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "lpParms", scope: !1244, file: !552, line: 82, baseType: !182, size: 64, offset: 64)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "cbFormat", scope: !1244, file: !552, line: 83, baseType: !5, size: 32, offset: 128)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "cbParms", scope: !1244, file: !552, line: 84, baseType: !5, size: 32, offset: 160)
!1250 = !DIDerivedType(tag: DW_TAG_member, name: "fccType", scope: !1244, file: !552, line: 86, baseType: !5, size: 32, offset: 192)
!1251 = !DIDerivedType(tag: DW_TAG_member, name: "fccHandler", scope: !1244, file: !552, line: 87, baseType: !5, size: 32, offset: 224)
!1252 = !DIDerivedType(tag: DW_TAG_member, name: "dwKeyFrameEvery", scope: !1244, file: !552, line: 88, baseType: !5, size: 32, offset: 256)
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "dwQuality", scope: !1244, file: !552, line: 89, baseType: !5, size: 32, offset: 288)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "dwBytesPerSecond", scope: !1244, file: !552, line: 90, baseType: !5, size: 32, offset: 320)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "dwFlags", scope: !1244, file: !552, line: 91, baseType: !5, size: 32, offset: 352)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "dwInterleaveEvery", scope: !1244, file: !552, line: 92, baseType: !5, size: 32, offset: 384)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1244, file: !552, line: 93, baseType: !5, size: 32, offset: 416)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecname", scope: !1244, file: !552, line: 95, baseType: !1259, size: 1024, offset: 448)
!1259 = !DICompositeType(tag: DW_TAG_array_type, baseType: !178, size: 1024, elements: !1260)
!1260 = !{!1261}
!1261 = !DISubrange(count: 128)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecdata", scope: !1157, file: !552, line: 407, baseType: !1263, size: 64, offset: 2048)
!1263 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1264, size: 64)
!1264 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecData", file: !552, line: 98, size: 1216, elements: !1265)
!1265 = !{!1266, !1267, !1268, !1269, !1270}
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "cdParms", scope: !1264, file: !552, line: 100, baseType: !182, size: 64)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1264, file: !552, line: 101, baseType: !182, size: 64, offset: 64)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "cdSize", scope: !1264, file: !552, line: 103, baseType: !5, size: 32, offset: 128)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1264, file: !552, line: 104, baseType: !5, size: 32, offset: 160)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecname", scope: !1264, file: !552, line: 106, baseType: !1259, size: 1024, offset: 192)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecsettings", scope: !1157, file: !552, line: 408, baseType: !1272, size: 512, offset: 2112)
!1272 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecSettings", file: !552, line: 109, size: 512, elements: !1273)
!1273 = !{!1274, !1275, !1276, !1277, !1278, !1279, !1280, !1281, !1282, !1283, !1284, !1285, !1286, !1287, !1288, !1289, !1290}
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "codecType", scope: !1272, file: !552, line: 111, baseType: !168, size: 32)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "codecSpatialQuality", scope: !1272, file: !552, line: 112, baseType: !168, size: 32, offset: 32)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1272, file: !552, line: 115, baseType: !168, size: 32, offset: 64)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "codecFlags", scope: !1272, file: !552, line: 116, baseType: !168, size: 32, offset: 96)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "colorDepth", scope: !1272, file: !552, line: 117, baseType: !168, size: 32, offset: 128)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "codecTemporalQuality", scope: !1272, file: !552, line: 118, baseType: !168, size: 32, offset: 160)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "minSpatialQuality", scope: !1272, file: !552, line: 119, baseType: !168, size: 32, offset: 192)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "minTemporalQuality", scope: !1272, file: !552, line: 120, baseType: !168, size: 32, offset: 224)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "keyFrameRate", scope: !1272, file: !552, line: 121, baseType: !168, size: 32, offset: 256)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "bitRate", scope: !1272, file: !552, line: 122, baseType: !168, size: 32, offset: 288)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "audiocodecType", scope: !1272, file: !552, line: 125, baseType: !168, size: 32, offset: 320)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "audioSampleRate", scope: !1272, file: !552, line: 126, baseType: !168, size: 32, offset: 352)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitDepth", scope: !1272, file: !552, line: 127, baseType: !265, size: 16, offset: 384)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "audioChannels", scope: !1272, file: !552, line: 128, baseType: !265, size: 16, offset: 400)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "audioCodecFlags", scope: !1272, file: !552, line: 129, baseType: !168, size: 32, offset: 416)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitRate", scope: !1272, file: !552, line: 130, baseType: !168, size: 32, offset: 448)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1272, file: !552, line: 131, baseType: !168, size: 32, offset: 480)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "ffcodecdata", scope: !1157, file: !552, line: 409, baseType: !1292, size: 576, offset: 2624)
!1292 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFMpegCodecData", file: !552, line: 134, size: 576, elements: !1293)
!1293 = !{!1294, !1295, !1296, !1297, !1298, !1299, !1300, !1301, !1302, !1303, !1304, !1305, !1306, !1307, !1308, !1309, !1310}
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1292, file: !552, line: 135, baseType: !168, size: 32)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1292, file: !552, line: 136, baseType: !168, size: 32, offset: 32)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "audio_codec", scope: !1292, file: !552, line: 137, baseType: !168, size: 32, offset: 64)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "video_bitrate", scope: !1292, file: !552, line: 138, baseType: !168, size: 32, offset: 96)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "audio_bitrate", scope: !1292, file: !552, line: 139, baseType: !168, size: 32, offset: 128)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "audio_mixrate", scope: !1292, file: !552, line: 140, baseType: !168, size: 32, offset: 160)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "audio_channels", scope: !1292, file: !552, line: 141, baseType: !168, size: 32, offset: 192)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "audio_pad", scope: !1292, file: !552, line: 142, baseType: !168, size: 32, offset: 224)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "audio_volume", scope: !1292, file: !552, line: 143, baseType: !224, size: 32, offset: 256)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !1292, file: !552, line: 144, baseType: !168, size: 32, offset: 288)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1292, file: !552, line: 145, baseType: !168, size: 32, offset: 320)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !1292, file: !552, line: 147, baseType: !168, size: 32, offset: 352)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !1292, file: !552, line: 148, baseType: !168, size: 32, offset: 384)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !1292, file: !552, line: 149, baseType: !168, size: 32, offset: 416)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "mux_packet_size", scope: !1292, file: !552, line: 150, baseType: !168, size: 32, offset: 448)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "mux_rate", scope: !1292, file: !552, line: 151, baseType: !168, size: 32, offset: 480)
!1310 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1292, file: !552, line: 152, baseType: !521, size: 64, offset: 512)
!1311 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !1157, file: !552, line: 411, baseType: !168, size: 32, offset: 3200)
!1312 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1157, file: !552, line: 411, baseType: !168, size: 32, offset: 3232)
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "efra", scope: !1157, file: !552, line: 411, baseType: !168, size: 32, offset: 3264)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "subframe", scope: !1157, file: !552, line: 412, baseType: !224, size: 32, offset: 3296)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "psfra", scope: !1157, file: !552, line: 413, baseType: !168, size: 32, offset: 3328)
!1316 = !DIDerivedType(tag: DW_TAG_member, name: "pefra", scope: !1157, file: !552, line: 413, baseType: !168, size: 32, offset: 3360)
!1317 = !DIDerivedType(tag: DW_TAG_member, name: "images", scope: !1157, file: !552, line: 415, baseType: !168, size: 32, offset: 3392)
!1318 = !DIDerivedType(tag: DW_TAG_member, name: "framapto", scope: !1157, file: !552, line: 415, baseType: !168, size: 32, offset: 3424)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1157, file: !552, line: 416, baseType: !265, size: 16, offset: 3456)
!1320 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !1157, file: !552, line: 416, baseType: !265, size: 16, offset: 3472)
!1321 = !DIDerivedType(tag: DW_TAG_member, name: "framelen", scope: !1157, file: !552, line: 418, baseType: !224, size: 32, offset: 3488)
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "blurfac", scope: !1157, file: !552, line: 418, baseType: !224, size: 32, offset: 3520)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "edgeR", scope: !1157, file: !552, line: 421, baseType: !224, size: 32, offset: 3552)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "edgeG", scope: !1157, file: !552, line: 421, baseType: !224, size: 32, offset: 3584)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "edgeB", scope: !1157, file: !552, line: 421, baseType: !224, size: 32, offset: 3616)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "fullscreen", scope: !1157, file: !552, line: 425, baseType: !265, size: 16, offset: 3648)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !1157, file: !552, line: 425, baseType: !265, size: 16, offset: 3664)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !1157, file: !552, line: 425, baseType: !265, size: 16, offset: 3680)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !1157, file: !552, line: 426, baseType: !265, size: 16, offset: 3696)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1157, file: !552, line: 428, baseType: !265, size: 16, offset: 3712)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !1157, file: !552, line: 428, baseType: !265, size: 16, offset: 3728)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "frame_step", scope: !1157, file: !552, line: 431, baseType: !168, size: 32, offset: 3744)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !1157, file: !552, line: 433, baseType: !265, size: 16, offset: 3776)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "dimensionspreset", scope: !1157, file: !552, line: 435, baseType: !265, size: 16, offset: 3792)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "filtertype", scope: !1157, file: !552, line: 437, baseType: !265, size: 16, offset: 3808)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1157, file: !552, line: 439, baseType: !265, size: 16, offset: 3824)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "maximsize", scope: !1157, file: !552, line: 441, baseType: !265, size: 16, offset: 3840)
!1338 = !DIDerivedType(tag: DW_TAG_member, name: "pad6", scope: !1157, file: !552, line: 443, baseType: !265, size: 16, offset: 3856)
!1339 = !DIDerivedType(tag: DW_TAG_member, name: "xsch", scope: !1157, file: !552, line: 449, baseType: !168, size: 32, offset: 3872)
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "ysch", scope: !1157, file: !552, line: 453, baseType: !168, size: 32, offset: 3904)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "xparts", scope: !1157, file: !552, line: 458, baseType: !265, size: 16, offset: 3936)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "yparts", scope: !1157, file: !552, line: 462, baseType: !265, size: 16, offset: 3952)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "tilex", scope: !1157, file: !552, line: 467, baseType: !168, size: 32, offset: 3968)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "tiley", scope: !1157, file: !552, line: 467, baseType: !168, size: 32, offset: 4000)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1157, file: !552, line: 469, baseType: !265, size: 16, offset: 4032)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !1157, file: !552, line: 469, baseType: !265, size: 16, offset: 4048)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "subimtype", scope: !1157, file: !552, line: 469, baseType: !265, size: 16, offset: 4064)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1157, file: !552, line: 469, baseType: !265, size: 16, offset: 4080)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "displaymode", scope: !1157, file: !552, line: 474, baseType: !265, size: 16, offset: 4096)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "use_lock_interface", scope: !1157, file: !552, line: 475, baseType: !178, size: 8, offset: 4112)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "pad7", scope: !1157, file: !552, line: 476, baseType: !178, size: 8, offset: 4120)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "scemode", scope: !1157, file: !552, line: 481, baseType: !168, size: 32, offset: 4128)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1157, file: !552, line: 486, baseType: !168, size: 32, offset: 4160)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_options", scope: !1157, file: !552, line: 491, baseType: !168, size: 32, offset: 4192)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_structure", scope: !1157, file: !552, line: 496, baseType: !265, size: 16, offset: 4224)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1157, file: !552, line: 498, baseType: !265, size: 16, offset: 4240)
!1357 = !DIDerivedType(tag: DW_TAG_member, name: "ocres", scope: !1157, file: !552, line: 501, baseType: !265, size: 16, offset: 4256)
!1358 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1157, file: !552, line: 502, baseType: !265, size: 16, offset: 4272)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "alphamode", scope: !1157, file: !552, line: 508, baseType: !265, size: 16, offset: 4288)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "osa", scope: !1157, file: !552, line: 513, baseType: !265, size: 16, offset: 4304)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec", scope: !1157, file: !552, line: 515, baseType: !265, size: 16, offset: 4320)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "edgeint", scope: !1157, file: !552, line: 515, baseType: !265, size: 16, offset: 4336)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "safety", scope: !1157, file: !552, line: 519, baseType: !1198, size: 128, offset: 4352)
!1364 = !DIDerivedType(tag: DW_TAG_member, name: "border", scope: !1157, file: !552, line: 519, baseType: !1198, size: 128, offset: 4480)
!1365 = !DIDerivedType(tag: DW_TAG_member, name: "disprect", scope: !1157, file: !552, line: 520, baseType: !1366, size: 128, offset: 4608)
!1366 = !DIDerivedType(tag: DW_TAG_typedef, name: "rcti", file: !1199, line: 89, baseType: !1367)
!1367 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcti", file: !1199, line: 86, size: 128, elements: !1368)
!1368 = !{!1369, !1370, !1371, !1372}
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !1367, file: !1199, line: 87, baseType: !168, size: 32)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !1367, file: !1199, line: 87, baseType: !168, size: 32, offset: 32)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !1367, file: !1199, line: 88, baseType: !168, size: 32, offset: 64)
!1372 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !1367, file: !1199, line: 88, baseType: !168, size: 32, offset: 96)
!1373 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !1157, file: !552, line: 523, baseType: !539, size: 128, offset: 4736)
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "actlay", scope: !1157, file: !552, line: 524, baseType: !265, size: 16, offset: 4864)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "mblur_samples", scope: !1157, file: !552, line: 527, baseType: !265, size: 16, offset: 4880)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "xasp", scope: !1157, file: !552, line: 532, baseType: !224, size: 32, offset: 4896)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "yasp", scope: !1157, file: !552, line: 532, baseType: !224, size: 32, offset: 4928)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec_base", scope: !1157, file: !552, line: 534, baseType: !224, size: 32, offset: 4960)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "gauss", scope: !1157, file: !552, line: 538, baseType: !224, size: 32, offset: 4992)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "color_mgt_flag", scope: !1157, file: !552, line: 542, baseType: !168, size: 32, offset: 5024)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "postgamma", scope: !1157, file: !552, line: 545, baseType: !224, size: 32, offset: 5056)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "posthue", scope: !1157, file: !552, line: 545, baseType: !224, size: 32, offset: 5088)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "postsat", scope: !1157, file: !552, line: 545, baseType: !224, size: 32, offset: 5120)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "dither_intensity", scope: !1157, file: !552, line: 548, baseType: !224, size: 32, offset: 5152)
!1385 = !DIDerivedType(tag: DW_TAG_member, name: "bake_osa", scope: !1157, file: !552, line: 551, baseType: !265, size: 16, offset: 5184)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "bake_filter", scope: !1157, file: !552, line: 551, baseType: !265, size: 16, offset: 5200)
!1387 = !DIDerivedType(tag: DW_TAG_member, name: "bake_mode", scope: !1157, file: !552, line: 551, baseType: !265, size: 16, offset: 5216)
!1388 = !DIDerivedType(tag: DW_TAG_member, name: "bake_flag", scope: !1157, file: !552, line: 551, baseType: !265, size: 16, offset: 5232)
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "bake_normal_space", scope: !1157, file: !552, line: 552, baseType: !265, size: 16, offset: 5248)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "bake_quad_split", scope: !1157, file: !552, line: 552, baseType: !265, size: 16, offset: 5264)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "bake_maxdist", scope: !1157, file: !552, line: 553, baseType: !224, size: 32, offset: 5280)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "bake_biasdist", scope: !1157, file: !552, line: 553, baseType: !224, size: 32, offset: 5312)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "bake_samples", scope: !1157, file: !552, line: 554, baseType: !265, size: 16, offset: 5344)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad", scope: !1157, file: !552, line: 554, baseType: !265, size: 16, offset: 5360)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "bake_user_scale", scope: !1157, file: !552, line: 555, baseType: !224, size: 32, offset: 5376)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad1", scope: !1157, file: !552, line: 555, baseType: !224, size: 32, offset: 5408)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "pic", scope: !1157, file: !552, line: 558, baseType: !199, size: 8192, offset: 5440)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !1157, file: !552, line: 561, baseType: !168, size: 32, offset: 13632)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_font_id", scope: !1157, file: !552, line: 562, baseType: !265, size: 16, offset: 13664)
!1400 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1157, file: !552, line: 562, baseType: !265, size: 16, offset: 13680)
!1401 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_udata", scope: !1157, file: !552, line: 565, baseType: !1402, size: 6144, offset: 13696)
!1402 = !DICompositeType(tag: DW_TAG_array_type, baseType: !178, size: 6144, elements: !1403)
!1403 = !{!1404}
!1404 = !DISubrange(count: 768)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "fg_stamp", scope: !1157, file: !552, line: 568, baseType: !679, size: 128, offset: 19840)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "bg_stamp", scope: !1157, file: !552, line: 569, baseType: !679, size: 128, offset: 19968)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "seq_prev_type", scope: !1157, file: !552, line: 572, baseType: !178, size: 8, offset: 20096)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "seq_rend_type", scope: !1157, file: !552, line: 573, baseType: !178, size: 8, offset: 20104)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "seq_flag", scope: !1157, file: !552, line: 574, baseType: !178, size: 8, offset: 20112)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !1157, file: !552, line: 575, baseType: !927, size: 40, offset: 20120)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_flag", scope: !1157, file: !552, line: 578, baseType: !168, size: 32, offset: 20160)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_subsurf", scope: !1157, file: !552, line: 579, baseType: !265, size: 16, offset: 20192)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_shadowsamples", scope: !1157, file: !552, line: 580, baseType: !265, size: 16, offset: 20208)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_particles", scope: !1157, file: !552, line: 581, baseType: !224, size: 32, offset: 20224)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_aosss", scope: !1157, file: !552, line: 582, baseType: !224, size: 32, offset: 20256)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "cineonwhite", scope: !1157, file: !552, line: 585, baseType: !265, size: 16, offset: 20288)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "cineonblack", scope: !1157, file: !552, line: 585, baseType: !265, size: 16, offset: 20304)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "cineongamma", scope: !1157, file: !552, line: 586, baseType: !224, size: 32, offset: 20320)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_preset", scope: !1157, file: !552, line: 589, baseType: !265, size: 16, offset: 20352)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_depth", scope: !1157, file: !552, line: 589, baseType: !265, size: 16, offset: 20368)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "rpad3", scope: !1157, file: !552, line: 590, baseType: !168, size: 32, offset: 20384)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "domeres", scope: !1157, file: !552, line: 593, baseType: !265, size: 16, offset: 20416)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "domemode", scope: !1157, file: !552, line: 593, baseType: !265, size: 16, offset: 20432)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "domeangle", scope: !1157, file: !552, line: 594, baseType: !265, size: 16, offset: 20448)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "dometilt", scope: !1157, file: !552, line: 594, baseType: !265, size: 16, offset: 20464)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "domeresbuf", scope: !1157, file: !552, line: 595, baseType: !224, size: 32, offset: 20480)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1157, file: !552, line: 596, baseType: !224, size: 32, offset: 20512)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "dometext", scope: !1157, file: !552, line: 597, baseType: !1429, size: 64, offset: 20544)
!1429 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1430, size: 64)
!1430 = !DICompositeType(tag: DW_TAG_structure_type, name: "Text", file: !762, line: 44, flags: DIFlagFwdDecl)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "line_thickness_mode", scope: !1157, file: !552, line: 600, baseType: !168, size: 32, offset: 20608)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "unit_line_thickness", scope: !1157, file: !552, line: 601, baseType: !224, size: 32, offset: 20640)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "engine", scope: !1157, file: !552, line: 604, baseType: !1434, size: 256, offset: 20672)
!1434 = !DICompositeType(tag: DW_TAG_array_type, baseType: !178, size: 256, elements: !1435)
!1435 = !{!1436}
!1436 = !DISubrange(count: 32)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "bake", scope: !1157, file: !552, line: 607, baseType: !1438, size: 10880, offset: 20928)
!1438 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BakeData", file: !552, line: 364, size: 10880, elements: !1439)
!1439 = !{!1440, !1441, !1442, !1443, !1444, !1445, !1446, !1447, !1448, !1449, !1450, !1451, !1452}
!1440 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !1438, file: !552, line: 365, baseType: !1160, size: 1984)
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !1438, file: !552, line: 367, baseType: !199, size: 8192, offset: 1984)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1438, file: !552, line: 369, baseType: !265, size: 16, offset: 10176)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1438, file: !552, line: 369, baseType: !265, size: 16, offset: 10192)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !1438, file: !552, line: 370, baseType: !265, size: 16, offset: 10208)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1438, file: !552, line: 370, baseType: !265, size: 16, offset: 10224)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "cage_extrusion", scope: !1438, file: !552, line: 372, baseType: !224, size: 32, offset: 10240)
!1447 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1438, file: !552, line: 373, baseType: !224, size: 32, offset: 10272)
!1448 = !DIDerivedType(tag: DW_TAG_member, name: "normal_swizzle", scope: !1438, file: !552, line: 375, baseType: !1073, size: 24, offset: 10304)
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "normal_space", scope: !1438, file: !552, line: 376, baseType: !178, size: 8, offset: 10328)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "save_mode", scope: !1438, file: !552, line: 378, baseType: !178, size: 8, offset: 10336)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1438, file: !552, line: 379, baseType: !1073, size: 24, offset: 10344)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "cage", scope: !1438, file: !552, line: 381, baseType: !177, size: 512, offset: 10368)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "preview_start_resolution", scope: !1157, file: !552, line: 609, baseType: !168, size: 32, offset: 31808)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1157, file: !552, line: 610, baseType: !168, size: 32, offset: 31840)
!1455 = !DIDerivedType(tag: DW_TAG_member, name: "audio", scope: !807, file: !552, line: 1252, baseType: !1456, size: 256, offset: 34112)
!1456 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AudioData", file: !552, line: 158, size: 256, elements: !1457)
!1457 = !{!1458, !1459, !1460, !1461, !1462, !1463, !1464, !1465, !1466}
!1458 = !DIDerivedType(tag: DW_TAG_member, name: "mixrate", scope: !1456, file: !552, line: 159, baseType: !168, size: 32)
!1459 = !DIDerivedType(tag: DW_TAG_member, name: "main", scope: !1456, file: !552, line: 160, baseType: !224, size: 32, offset: 32)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "speed_of_sound", scope: !1456, file: !552, line: 161, baseType: !224, size: 32, offset: 64)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "doppler_factor", scope: !1456, file: !552, line: 162, baseType: !224, size: 32, offset: 96)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "distance_model", scope: !1456, file: !552, line: 163, baseType: !168, size: 32, offset: 128)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1456, file: !552, line: 164, baseType: !265, size: 16, offset: 160)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1456, file: !552, line: 165, baseType: !265, size: 16, offset: 176)
!1465 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !1456, file: !552, line: 166, baseType: !224, size: 32, offset: 192)
!1466 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1456, file: !552, line: 167, baseType: !224, size: 32, offset: 224)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !807, file: !552, line: 1254, baseType: !539, size: 128, offset: 34368)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "transform_spaces", scope: !807, file: !552, line: 1255, baseType: !539, size: 128, offset: 34496)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene", scope: !807, file: !552, line: 1257, baseType: !182, size: 64, offset: 34624)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene_handle", scope: !807, file: !552, line: 1258, baseType: !182, size: 64, offset: 34688)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scrub_handle", scope: !807, file: !552, line: 1259, baseType: !182, size: 64, offset: 34752)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "speaker_handles", scope: !807, file: !552, line: 1260, baseType: !182, size: 64, offset: 34816)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "fps_info", scope: !807, file: !552, line: 1262, baseType: !182, size: 64, offset: 34880)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "theDag", scope: !807, file: !552, line: 1265, baseType: !1475, size: 64, offset: 34944)
!1475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1476, size: 64)
!1476 = !DICompositeType(tag: DW_TAG_structure_type, name: "DagForest", file: !552, line: 1265, flags: DIFlagFwdDecl)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "dagflags", scope: !807, file: !552, line: 1266, baseType: !265, size: 16, offset: 35008)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !807, file: !552, line: 1267, baseType: !265, size: 16, offset: 35024)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "active_keyingset", scope: !807, file: !552, line: 1270, baseType: !168, size: 32, offset: 35040)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "keyingsets", scope: !807, file: !552, line: 1271, baseType: !539, size: 128, offset: 35072)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !807, file: !552, line: 1274, baseType: !1482, size: 128, offset: 35200)
!1482 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameFraming", file: !552, line: 650, size: 128, elements: !1483)
!1483 = !{!1484, !1485, !1486, !1487, !1488}
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !1482, file: !552, line: 651, baseType: !260, size: 96)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1482, file: !552, line: 652, baseType: !178, size: 8, offset: 96)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1482, file: !552, line: 652, baseType: !178, size: 8, offset: 104)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1482, file: !552, line: 652, baseType: !178, size: 8, offset: 112)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1482, file: !552, line: 652, baseType: !178, size: 8, offset: 120)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "gm", scope: !807, file: !552, line: 1275, baseType: !1490, size: 1472, offset: 35328)
!1490 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameData", file: !552, line: 676, size: 1472, elements: !1491)
!1491 = !{!1492, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1503, !1513, !1514, !1515, !1516, !1535, !1536, !1537, !1538, !1539, !1540, !1541, !1542, !1543, !1544, !1545, !1546, !1547, !1548, !1549, !1550, !1551, !1552, !1553, !1554}
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !1490, file: !552, line: 679, baseType: !1482, size: 128)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "playerflag", scope: !1490, file: !552, line: 680, baseType: !265, size: 16, offset: 128)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !1490, file: !552, line: 680, baseType: !265, size: 16, offset: 144)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !1490, file: !552, line: 680, baseType: !265, size: 16, offset: 160)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !1490, file: !552, line: 680, baseType: !265, size: 16, offset: 176)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1490, file: !552, line: 681, baseType: !265, size: 16, offset: 192)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !1490, file: !552, line: 681, baseType: !265, size: 16, offset: 208)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "rt1", scope: !1490, file: !552, line: 681, baseType: !265, size: 16, offset: 224)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "rt2", scope: !1490, file: !552, line: 681, baseType: !265, size: 16, offset: 240)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "aasamples", scope: !1490, file: !552, line: 682, baseType: !265, size: 16, offset: 256)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1490, file: !552, line: 682, baseType: !264, size: 48, offset: 272)
!1503 = !DIDerivedType(tag: DW_TAG_member, name: "dome", scope: !1490, file: !552, line: 685, baseType: !1504, size: 192, offset: 320)
!1504 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameDome", file: !552, line: 633, size: 192, elements: !1505)
!1505 = !{!1506, !1507, !1508, !1509, !1510, !1511, !1512}
!1506 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !1504, file: !552, line: 634, baseType: !265, size: 16)
!1507 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1504, file: !552, line: 634, baseType: !265, size: 16, offset: 16)
!1508 = !DIDerivedType(tag: DW_TAG_member, name: "angle", scope: !1504, file: !552, line: 635, baseType: !265, size: 16, offset: 32)
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "tilt", scope: !1504, file: !552, line: 635, baseType: !265, size: 16, offset: 48)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "resbuf", scope: !1504, file: !552, line: 636, baseType: !224, size: 32, offset: 64)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1504, file: !552, line: 636, baseType: !224, size: 32, offset: 96)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "warptext", scope: !1504, file: !552, line: 637, baseType: !1429, size: 64, offset: 128)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "stereoflag", scope: !1490, file: !552, line: 686, baseType: !265, size: 16, offset: 512)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !1490, file: !552, line: 686, baseType: !265, size: 16, offset: 528)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "eyeseparation", scope: !1490, file: !552, line: 687, baseType: !224, size: 32, offset: 544)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "recastData", scope: !1490, file: !552, line: 688, baseType: !1517, size: 448, offset: 576)
!1517 = !DIDerivedType(tag: DW_TAG_typedef, name: "RecastData", file: !552, line: 674, baseType: !1518)
!1518 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RecastData", file: !552, line: 659, size: 448, elements: !1519)
!1519 = !{!1520, !1521, !1522, !1523, !1524, !1525, !1526, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534}
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "cellsize", scope: !1518, file: !552, line: 660, baseType: !224, size: 32)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "cellheight", scope: !1518, file: !552, line: 661, baseType: !224, size: 32, offset: 32)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxslope", scope: !1518, file: !552, line: 662, baseType: !224, size: 32, offset: 64)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxclimb", scope: !1518, file: !552, line: 663, baseType: !224, size: 32, offset: 96)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "agentheight", scope: !1518, file: !552, line: 664, baseType: !224, size: 32, offset: 128)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "agentradius", scope: !1518, file: !552, line: 665, baseType: !224, size: 32, offset: 160)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxlen", scope: !1518, file: !552, line: 666, baseType: !224, size: 32, offset: 192)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxerror", scope: !1518, file: !552, line: 667, baseType: !224, size: 32, offset: 224)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "regionminsize", scope: !1518, file: !552, line: 668, baseType: !224, size: 32, offset: 256)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "regionmergesize", scope: !1518, file: !552, line: 669, baseType: !224, size: 32, offset: 288)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "vertsperpoly", scope: !1518, file: !552, line: 670, baseType: !168, size: 32, offset: 320)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "detailsampledist", scope: !1518, file: !552, line: 671, baseType: !224, size: 32, offset: 352)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "detailsamplemaxerror", scope: !1518, file: !552, line: 672, baseType: !224, size: 32, offset: 384)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1518, file: !552, line: 673, baseType: !265, size: 16, offset: 416)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1518, file: !552, line: 673, baseType: !265, size: 16, offset: 432)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !1490, file: !552, line: 692, baseType: !224, size: 32, offset: 1024)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "activityBoxRadius", scope: !1490, file: !552, line: 697, baseType: !224, size: 32, offset: 1056)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1490, file: !552, line: 703, baseType: !168, size: 32, offset: 1088)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1490, file: !552, line: 704, baseType: !265, size: 16, offset: 1120)
!1539 = !DIDerivedType(tag: DW_TAG_member, name: "matmode", scope: !1490, file: !552, line: 704, baseType: !265, size: 16, offset: 1136)
!1540 = !DIDerivedType(tag: DW_TAG_member, name: "occlusionRes", scope: !1490, file: !552, line: 705, baseType: !265, size: 16, offset: 1152)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "physicsEngine", scope: !1490, file: !552, line: 706, baseType: !265, size: 16, offset: 1168)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "exitkey", scope: !1490, file: !552, line: 707, baseType: !265, size: 16, offset: 1184)
!1543 = !DIDerivedType(tag: DW_TAG_member, name: "vsync", scope: !1490, file: !552, line: 708, baseType: !265, size: 16, offset: 1200)
!1544 = !DIDerivedType(tag: DW_TAG_member, name: "ticrate", scope: !1490, file: !552, line: 709, baseType: !265, size: 16, offset: 1216)
!1545 = !DIDerivedType(tag: DW_TAG_member, name: "maxlogicstep", scope: !1490, file: !552, line: 709, baseType: !265, size: 16, offset: 1232)
!1546 = !DIDerivedType(tag: DW_TAG_member, name: "physubstep", scope: !1490, file: !552, line: 709, baseType: !265, size: 16, offset: 1248)
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "maxphystep", scope: !1490, file: !552, line: 709, baseType: !265, size: 16, offset: 1264)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleSimulation", scope: !1490, file: !552, line: 710, baseType: !265, size: 16, offset: 1280)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "raster_storage", scope: !1490, file: !552, line: 711, baseType: !265, size: 16, offset: 1296)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "levelHeight", scope: !1490, file: !552, line: 712, baseType: !224, size: 32, offset: 1312)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "deactivationtime", scope: !1490, file: !552, line: 713, baseType: !224, size: 32, offset: 1344)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "lineardeactthreshold", scope: !1490, file: !552, line: 713, baseType: !224, size: 32, offset: 1376)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "angulardeactthreshold", scope: !1490, file: !552, line: 713, baseType: !224, size: 32, offset: 1408)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1490, file: !552, line: 713, baseType: !224, size: 32, offset: 1440)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !807, file: !552, line: 1278, baseType: !1556, size: 64, offset: 36800)
!1556 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnitSettings", file: !552, line: 1197, size: 64, elements: !1557)
!1557 = !{!1558, !1559, !1560, !1561}
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "scale_length", scope: !1556, file: !552, line: 1199, baseType: !224, size: 32)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "system", scope: !1556, file: !552, line: 1200, baseType: !178, size: 8, offset: 32)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "system_rotation", scope: !1556, file: !552, line: 1201, baseType: !178, size: 8, offset: 40)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1556, file: !552, line: 1202, baseType: !265, size: 16, offset: 48)
!1562 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !807, file: !552, line: 1281, baseType: !640, size: 64, offset: 36864)
!1563 = !DIDerivedType(tag: DW_TAG_member, name: "physics_settings", scope: !807, file: !552, line: 1284, baseType: !1564, size: 192, offset: 36928)
!1564 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PhysicsSettings", file: !552, line: 1208, size: 192, elements: !1565)
!1565 = !{!1566, !1567, !1568, !1569}
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !1564, file: !552, line: 1209, baseType: !260, size: 96)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1564, file: !552, line: 1210, baseType: !168, size: 32, offset: 96)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "quick_cache_step", scope: !1564, file: !552, line: 1210, baseType: !168, size: 32, offset: 128)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1564, file: !552, line: 1210, baseType: !168, size: 32, offset: 160)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !807, file: !552, line: 1287, baseType: !1571, size: 64, offset: 37120)
!1571 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1572, size: 64)
!1572 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClip", file: !552, line: 62, flags: DIFlagFwdDecl)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !807, file: !552, line: 1289, baseType: !777, size: 64, offset: 37184)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask_modal", scope: !807, file: !552, line: 1290, baseType: !777, size: 64, offset: 37248)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !807, file: !552, line: 1293, baseType: !1180, size: 1280, offset: 37312)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !807, file: !552, line: 1294, baseType: !1238, size: 512, offset: 38592)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "sequencer_colorspace_settings", scope: !807, file: !552, line: 1295, baseType: !1005, size: 512, offset: 39104)
!1578 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_world", scope: !807, file: !552, line: 1298, baseType: !1579, size: 64, offset: 39616)
!1579 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1580, size: 64)
!1580 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyWorld", file: !552, line: 1298, flags: DIFlagFwdDecl)
!1581 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !803, file: !802, line: 53, baseType: !168, size: 32, offset: 64)
!1582 = !DIDerivedType(tag: DW_TAG_member, name: "frames", scope: !803, file: !802, line: 54, baseType: !168, size: 32, offset: 96)
!1583 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !803, file: !802, line: 55, baseType: !168, size: 32, offset: 128)
!1584 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !803, file: !802, line: 55, baseType: !168, size: 32, offset: 160)
!1585 = !DIDerivedType(tag: DW_TAG_member, name: "fie_ima", scope: !803, file: !802, line: 56, baseType: !178, size: 8, offset: 192)
!1586 = !DIDerivedType(tag: DW_TAG_member, name: "cycl", scope: !803, file: !802, line: 56, baseType: !178, size: 8, offset: 200)
!1587 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !803, file: !802, line: 57, baseType: !178, size: 8, offset: 208)
!1588 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !803, file: !802, line: 57, baseType: !178, size: 8, offset: 216)
!1589 = !DIDerivedType(tag: DW_TAG_member, name: "multi_index", scope: !803, file: !802, line: 59, baseType: !265, size: 16, offset: 224)
!1590 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !803, file: !802, line: 59, baseType: !265, size: 16, offset: 240)
!1591 = !DIDerivedType(tag: DW_TAG_member, name: "pass", scope: !803, file: !802, line: 59, baseType: !265, size: 16, offset: 256)
!1592 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !803, file: !802, line: 61, baseType: !265, size: 16, offset: 272)
!1593 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !803, file: !802, line: 63, baseType: !168, size: 32, offset: 288)
!1594 = !DIDerivedType(tag: DW_TAG_member, name: "lodlevels", scope: !484, file: !485, line: 293, baseType: !539, size: 128, offset: 11200)
!1595 = !DIDerivedType(tag: DW_TAG_member, name: "currentlod", scope: !484, file: !485, line: 294, baseType: !1596, size: 64, offset: 11328)
!1596 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1597, size: 64)
!1597 = !DIDerivedType(tag: DW_TAG_typedef, name: "LodLevel", file: !485, line: 113, baseType: !1598)
!1598 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "LodLevel", file: !485, line: 108, size: 256, elements: !1599)
!1599 = !{!1600, !1602, !1603, !1604, !1605}
!1600 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1598, file: !485, line: 109, baseType: !1601, size: 64)
!1601 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1598, size: 64)
!1602 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1598, file: !485, line: 109, baseType: !1601, size: 64, offset: 64)
!1603 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !1598, file: !485, line: 110, baseType: !483, size: 64, offset: 128)
!1604 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1598, file: !485, line: 111, baseType: !168, size: 32, offset: 192)
!1605 = !DIDerivedType(tag: DW_TAG_member, name: "distance", scope: !1598, file: !485, line: 112, baseType: !224, size: 32, offset: 224)
!1606 = !DIDerivedType(tag: DW_TAG_member, name: "getPBVH", scope: !156, file: !4, line: 359, baseType: !1607, size: 64, offset: 12544)
!1607 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1608, size: 64)
!1608 = !DISubroutineType(types: !1609)
!1609 = !{!1610, !483, !154}
!1610 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1611, size: 64)
!1611 = !DICompositeType(tag: DW_TAG_structure_type, name: "PBVH", file: !4, line: 100, flags: DIFlagFwdDecl)
!1612 = !DIDerivedType(tag: DW_TAG_member, name: "drawVerts", scope: !156, file: !4, line: 364, baseType: !234, size: 64, offset: 12608)
!1613 = !DIDerivedType(tag: DW_TAG_member, name: "drawUVEdges", scope: !156, file: !4, line: 367, baseType: !234, size: 64, offset: 12672)
!1614 = !DIDerivedType(tag: DW_TAG_member, name: "drawEdges", scope: !156, file: !4, line: 373, baseType: !1615, size: 64, offset: 12736)
!1615 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1616, size: 64)
!1616 = !DISubroutineType(types: !1617)
!1617 = !{null, !154, !871, !871}
!1618 = !DIDerivedType(tag: DW_TAG_member, name: "drawLooseEdges", scope: !156, file: !4, line: 376, baseType: !234, size: 64, offset: 12800)
!1619 = !DIDerivedType(tag: DW_TAG_member, name: "drawFacesSolid", scope: !156, file: !4, line: 385, baseType: !1620, size: 64, offset: 12864)
!1620 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1621, size: 64)
!1621 = !DISubroutineType(types: !1622)
!1622 = !{null, !154, !1623, !871, !1624}
!1623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !679, size: 64)
!1624 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetMaterial", file: !4, line: 146, baseType: !1625)
!1625 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1626, size: 64)
!1626 = !DISubroutineType(types: !1627)
!1627 = !{!168, !168, !182}
!1628 = !DIDerivedType(tag: DW_TAG_member, name: "drawFacesTex", scope: !156, file: !4, line: 391, baseType: !1629, size: 64, offset: 12928)
!1629 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1630, size: 64)
!1630 = !DISubroutineType(types: !1631)
!1631 = !{null, !154, !1632, !1650, !182, !1654}
!1632 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetDrawOptionsTex", file: !4, line: 150, baseType: !1633)
!1633 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1634, size: 64)
!1634 = !DISubroutineType(types: !1635)
!1635 = !{!1636, !1637, !1649, !168}
!1636 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMDrawOption", file: !4, line: 143, baseType: !19)
!1637 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1638, size: 64)
!1638 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTFace", file: !257, line: 160, size: 384, elements: !1639)
!1639 = !{!1640, !1643, !1644, !1645, !1646, !1647, !1648}
!1640 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !1638, file: !257, line: 161, baseType: !1641, size: 256)
!1641 = !DICompositeType(tag: DW_TAG_array_type, baseType: !224, size: 256, elements: !1642)
!1642 = !{!402, !798}
!1643 = !DIDerivedType(tag: DW_TAG_member, name: "tpage", scope: !1638, file: !257, line: 162, baseType: !943, size: 64, offset: 256)
!1644 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1638, file: !257, line: 163, baseType: !178, size: 8, offset: 320)
!1645 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !1638, file: !257, line: 163, baseType: !178, size: 8, offset: 328)
!1646 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1638, file: !257, line: 164, baseType: !265, size: 16, offset: 336)
!1647 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !1638, file: !257, line: 164, baseType: !265, size: 16, offset: 352)
!1648 = !DIDerivedType(tag: DW_TAG_member, name: "unwrap", scope: !1638, file: !257, line: 164, baseType: !265, size: 16, offset: 368)
!1649 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !871)
!1650 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMCompareDrawOptions", file: !4, line: 147, baseType: !1651)
!1651 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1652, size: 64)
!1652 = !DISubroutineType(types: !1653)
!1653 = !{!168, !182, !168, !168}
!1654 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMDrawFlag", file: !4, line: 157, baseType: !25)
!1655 = !DIDerivedType(tag: DW_TAG_member, name: "drawFacesGLSL", scope: !156, file: !4, line: 400, baseType: !1656, size: 64, offset: 12992)
!1656 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1657, size: 64)
!1657 = !DISubroutineType(types: !1658)
!1658 = !{null, !154, !1624}
!1659 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFaces", scope: !156, file: !4, line: 415, baseType: !1660, size: 64, offset: 13056)
!1660 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1661, size: 64)
!1661 = !DISubroutineType(types: !1662)
!1662 = !{null, !154, !1663, !1624, !1650, !182, !1654}
!1663 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetDrawOptions", file: !4, line: 149, baseType: !1664)
!1664 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1665, size: 64)
!1665 = !DISubroutineType(types: !1666)
!1666 = !{!1636, !182, !168}
!1667 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFacesTex", scope: !156, file: !4, line: 425, baseType: !1668, size: 64, offset: 13120)
!1668 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1669, size: 64)
!1669 = !DISubroutineType(types: !1670)
!1670 = !{null, !154, !1663, !1650, !182, !1654}
!1671 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFacesGLSL", scope: !156, file: !4, line: 435, baseType: !1672, size: 64, offset: 13184)
!1672 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1673, size: 64)
!1673 = !DISubroutineType(types: !1674)
!1674 = !{null, !154, !1624, !1663, !182}
!1675 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedEdges", scope: !156, file: !4, line: 444, baseType: !1676, size: 64, offset: 13248)
!1676 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1677, size: 64)
!1677 = !DISubroutineType(types: !1678)
!1678 = !{null, !154, !1663, !182}
!1679 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedEdgesInterp", scope: !156, file: !4, line: 455, baseType: !1680, size: 64, offset: 13312)
!1680 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1681, size: 64)
!1681 = !DISubroutineType(types: !1682)
!1682 = !{null, !154, !1663, !1683, !182}
!1683 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMSetDrawInterpOptions", file: !4, line: 148, baseType: !1684)
!1684 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1685, size: 64)
!1685 = !DISubroutineType(types: !1686)
!1686 = !{null, !182, !168, !224}
!1687 = !DIDerivedType(tag: DW_TAG_member, name: "drawMappedFacesMat", scope: !156, file: !4, line: 464, baseType: !1688, size: 64, offset: 13376)
!1688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1689, size: 64)
!1689 = !DISubroutineType(types: !1690)
!1690 = !{null, !154, !1691, !1694, !182}
!1691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1692, size: 64)
!1692 = !DISubroutineType(types: !1693)
!1693 = !{null, !182, !168, !182}
!1694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1695, size: 64)
!1695 = !DISubroutineType(types: !1696)
!1696 = !{!871, !182, !168}
!1697 = !DIDerivedType(tag: DW_TAG_member, name: "release", scope: !156, file: !4, line: 470, baseType: !234, size: 64, offset: 13440)
!1698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1699, size: 64)
!1699 = !DICompositeType(tag: DW_TAG_array_type, baseType: !241, size: 96, elements: !261)
!1700 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1701, size: 64)
!1701 = !DIDerivedType(tag: DW_TAG_typedef, name: "EditDerivedBMesh", file: !1, line: 78, baseType: !1702)
!1702 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "EditDerivedBMesh", file: !1, line: 65, size: 13824, elements: !1703)
!1703 = !{!1704, !1705, !1889, !1890, !1891, !1892}
!1704 = !DIDerivedType(tag: DW_TAG_member, name: "dm", scope: !1702, file: !1, line: 66, baseType: !155, size: 13504)
!1705 = !DIDerivedType(tag: DW_TAG_member, name: "em", scope: !1702, file: !1, line: 68, baseType: !1706, size: 64, offset: 13504)
!1706 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1707, size: 64)
!1707 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMEditMesh", file: !1708, line: 83, baseType: !1709)
!1708 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_editmesh.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1709 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMEditMesh", file: !1708, line: 54, size: 896, elements: !1710)
!1710 = !{!1711, !1868, !1870, !1871, !1874, !1875, !1876, !1877, !1880, !1882, !1883, !1884, !1885, !1886, !1887, !1888}
!1711 = !DIDerivedType(tag: DW_TAG_member, name: "bm", scope: !1709, file: !1708, line: 55, baseType: !1712, size: 64)
!1712 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1713, size: 64)
!1713 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMesh", file: !131, line: 186, size: 8064, elements: !1714)
!1714 = !{!1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1726, !1727, !1728, !1789, !1793, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1856, !1857, !1858, !1859, !1860, !1861, !1862, !1863, !1864, !1865, !1866, !1867}
!1715 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !1713, file: !131, line: 187, baseType: !168, size: 32)
!1716 = !DIDerivedType(tag: DW_TAG_member, name: "totedge", scope: !1713, file: !131, line: 187, baseType: !168, size: 32, offset: 32)
!1717 = !DIDerivedType(tag: DW_TAG_member, name: "totloop", scope: !1713, file: !131, line: 187, baseType: !168, size: 32, offset: 64)
!1718 = !DIDerivedType(tag: DW_TAG_member, name: "totface", scope: !1713, file: !131, line: 187, baseType: !168, size: 32, offset: 96)
!1719 = !DIDerivedType(tag: DW_TAG_member, name: "totvertsel", scope: !1713, file: !131, line: 188, baseType: !168, size: 32, offset: 128)
!1720 = !DIDerivedType(tag: DW_TAG_member, name: "totedgesel", scope: !1713, file: !131, line: 188, baseType: !168, size: 32, offset: 160)
!1721 = !DIDerivedType(tag: DW_TAG_member, name: "totfacesel", scope: !1713, file: !131, line: 188, baseType: !168, size: 32, offset: 192)
!1722 = !DIDerivedType(tag: DW_TAG_member, name: "elem_index_dirty", scope: !1713, file: !131, line: 193, baseType: !178, size: 8, offset: 224)
!1723 = !DIDerivedType(tag: DW_TAG_member, name: "elem_table_dirty", scope: !1713, file: !131, line: 197, baseType: !178, size: 8, offset: 232)
!1724 = !DIDerivedType(tag: DW_TAG_member, name: "vpool", scope: !1713, file: !131, line: 201, baseType: !191, size: 64, offset: 256)
!1725 = !DIDerivedType(tag: DW_TAG_member, name: "epool", scope: !1713, file: !131, line: 201, baseType: !191, size: 64, offset: 320)
!1726 = !DIDerivedType(tag: DW_TAG_member, name: "lpool", scope: !1713, file: !131, line: 201, baseType: !191, size: 64, offset: 384)
!1727 = !DIDerivedType(tag: DW_TAG_member, name: "fpool", scope: !1713, file: !131, line: 201, baseType: !191, size: 64, offset: 448)
!1728 = !DIDerivedType(tag: DW_TAG_member, name: "vtable", scope: !1713, file: !131, line: 208, baseType: !1729, size: 64, offset: 512)
!1729 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1730, size: 64)
!1730 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1731, size: 64)
!1731 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMVert", file: !131, line: 103, baseType: !1732)
!1732 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMVert", file: !131, line: 90, size: 448, elements: !1733)
!1733 = !{!1734, !1743, !1748, !1749, !1750}
!1734 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1732, file: !131, line: 91, baseType: !1735, size: 128)
!1735 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMHeader", file: !131, line: 82, baseType: !1736)
!1736 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMHeader", file: !131, line: 64, size: 128, elements: !1737)
!1737 = !{!1738, !1739, !1740, !1741, !1742}
!1738 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1736, file: !131, line: 65, baseType: !182, size: 64)
!1739 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !1736, file: !131, line: 66, baseType: !168, size: 32, offset: 64)
!1740 = !DIDerivedType(tag: DW_TAG_member, name: "htype", scope: !1736, file: !131, line: 73, baseType: !178, size: 8, offset: 96)
!1741 = !DIDerivedType(tag: DW_TAG_member, name: "hflag", scope: !1736, file: !131, line: 74, baseType: !178, size: 8, offset: 104)
!1742 = !DIDerivedType(tag: DW_TAG_member, name: "api_flag", scope: !1736, file: !131, line: 80, baseType: !178, size: 8, offset: 112)
!1743 = !DIDerivedType(tag: DW_TAG_member, name: "oflags", scope: !1732, file: !131, line: 92, baseType: !1744, size: 64, offset: 128)
!1744 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1745, size: 64)
!1745 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMFlagLayer", file: !131, line: 180, size: 16, elements: !1746)
!1746 = !{!1747}
!1747 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !1745, file: !131, line: 181, baseType: !265, size: 16)
!1748 = !DIDerivedType(tag: DW_TAG_member, name: "co", scope: !1732, file: !131, line: 94, baseType: !260, size: 96, offset: 192)
!1749 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !1732, file: !131, line: 95, baseType: !260, size: 96, offset: 288)
!1750 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !1732, file: !131, line: 102, baseType: !1751, size: 64, offset: 384)
!1751 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1752, size: 64)
!1752 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMEdge", file: !131, line: 110, size: 640, elements: !1753)
!1753 = !{!1754, !1755, !1756, !1758, !1759, !1782, !1788}
!1754 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1752, file: !131, line: 111, baseType: !1735, size: 128)
!1755 = !DIDerivedType(tag: DW_TAG_member, name: "oflags", scope: !1752, file: !131, line: 112, baseType: !1744, size: 64, offset: 128)
!1756 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !1752, file: !131, line: 114, baseType: !1757, size: 64, offset: 192)
!1757 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1732, size: 64)
!1758 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !1752, file: !131, line: 114, baseType: !1757, size: 64, offset: 256)
!1759 = !DIDerivedType(tag: DW_TAG_member, name: "l", scope: !1752, file: !131, line: 118, baseType: !1760, size: 64, offset: 320)
!1760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1761, size: 64)
!1761 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMLoop", file: !131, line: 125, size: 576, elements: !1762)
!1762 = !{!1763, !1764, !1765, !1766, !1778, !1779, !1780, !1781}
!1763 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1761, file: !131, line: 126, baseType: !1735, size: 128)
!1764 = !DIDerivedType(tag: DW_TAG_member, name: "v", scope: !1761, file: !131, line: 129, baseType: !1757, size: 64, offset: 128)
!1765 = !DIDerivedType(tag: DW_TAG_member, name: "e", scope: !1761, file: !131, line: 130, baseType: !1751, size: 64, offset: 192)
!1766 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !1761, file: !131, line: 131, baseType: !1767, size: 64, offset: 256)
!1767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1768, size: 64)
!1768 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMFace", file: !131, line: 164, size: 448, elements: !1769)
!1769 = !{!1770, !1771, !1772, !1775, !1776, !1777}
!1770 = !DIDerivedType(tag: DW_TAG_member, name: "head", scope: !1768, file: !131, line: 165, baseType: !1735, size: 128)
!1771 = !DIDerivedType(tag: DW_TAG_member, name: "oflags", scope: !1768, file: !131, line: 166, baseType: !1744, size: 64, offset: 128)
!1772 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !1768, file: !131, line: 172, baseType: !1773, size: 64, offset: 192)
!1773 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1774, size: 64)
!1774 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMLoop", file: !131, line: 140, baseType: !1761)
!1775 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1768, file: !131, line: 174, baseType: !168, size: 32, offset: 256)
!1776 = !DIDerivedType(tag: DW_TAG_member, name: "no", scope: !1768, file: !131, line: 175, baseType: !260, size: 96, offset: 288)
!1777 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !1768, file: !131, line: 176, baseType: !265, size: 16, offset: 384)
!1778 = !DIDerivedType(tag: DW_TAG_member, name: "radial_next", scope: !1761, file: !131, line: 135, baseType: !1760, size: 64, offset: 320)
!1779 = !DIDerivedType(tag: DW_TAG_member, name: "radial_prev", scope: !1761, file: !131, line: 135, baseType: !1760, size: 64, offset: 384)
!1780 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1761, file: !131, line: 139, baseType: !1760, size: 64, offset: 448)
!1781 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1761, file: !131, line: 139, baseType: !1760, size: 64, offset: 512)
!1782 = !DIDerivedType(tag: DW_TAG_member, name: "v1_disk_link", scope: !1752, file: !131, line: 122, baseType: !1783, size: 128, offset: 384)
!1783 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMDiskLink", file: !131, line: 108, baseType: !1784)
!1784 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMDiskLink", file: !131, line: 106, size: 128, elements: !1785)
!1785 = !{!1786, !1787}
!1786 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1784, file: !131, line: 107, baseType: !1751, size: 64)
!1787 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1784, file: !131, line: 107, baseType: !1751, size: 64, offset: 64)
!1788 = !DIDerivedType(tag: DW_TAG_member, name: "v2_disk_link", scope: !1752, file: !131, line: 122, baseType: !1783, size: 128, offset: 512)
!1789 = !DIDerivedType(tag: DW_TAG_member, name: "etable", scope: !1713, file: !131, line: 209, baseType: !1790, size: 64, offset: 576)
!1790 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1791, size: 64)
!1791 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1792, size: 64)
!1792 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMEdge", file: !131, line: 123, baseType: !1752)
!1793 = !DIDerivedType(tag: DW_TAG_member, name: "ftable", scope: !1713, file: !131, line: 210, baseType: !1794, size: 64, offset: 640)
!1794 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1795, size: 64)
!1795 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1796, size: 64)
!1796 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMFace", file: !131, line: 178, baseType: !1768)
!1797 = !DIDerivedType(tag: DW_TAG_member, name: "vtable_tot", scope: !1713, file: !131, line: 213, baseType: !168, size: 32, offset: 704)
!1798 = !DIDerivedType(tag: DW_TAG_member, name: "etable_tot", scope: !1713, file: !131, line: 214, baseType: !168, size: 32, offset: 736)
!1799 = !DIDerivedType(tag: DW_TAG_member, name: "ftable_tot", scope: !1713, file: !131, line: 215, baseType: !168, size: 32, offset: 768)
!1800 = !DIDerivedType(tag: DW_TAG_member, name: "vtoolflagpool", scope: !1713, file: !131, line: 218, baseType: !191, size: 64, offset: 832)
!1801 = !DIDerivedType(tag: DW_TAG_member, name: "etoolflagpool", scope: !1713, file: !131, line: 218, baseType: !191, size: 64, offset: 896)
!1802 = !DIDerivedType(tag: DW_TAG_member, name: "ftoolflagpool", scope: !1713, file: !131, line: 218, baseType: !191, size: 64, offset: 960)
!1803 = !DIDerivedType(tag: DW_TAG_member, name: "stackdepth", scope: !1713, file: !131, line: 220, baseType: !168, size: 32, offset: 1024)
!1804 = !DIDerivedType(tag: DW_TAG_member, name: "currentop", scope: !1713, file: !131, line: 221, baseType: !1805, size: 64, offset: 1088)
!1805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1806, size: 64)
!1806 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMOperator", file: !32, line: 190, size: 10496, elements: !1807)
!1807 = !{!1808, !1842, !1843, !1849, !1852, !1853, !1855}
!1808 = !DIDerivedType(tag: DW_TAG_member, name: "slots_in", scope: !1806, file: !32, line: 191, baseType: !1809, size: 5120)
!1809 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1810, size: 5120, elements: !1840)
!1810 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMOpSlot", file: !32, line: 147, size: 320, elements: !1811)
!1811 = !{!1812, !1815, !1817, !1827, !1828}
!1812 = !DIDerivedType(tag: DW_TAG_member, name: "slot_name", scope: !1810, file: !32, line: 148, baseType: !1813, size: 64)
!1813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1814, size: 64)
!1814 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !178)
!1815 = !DIDerivedType(tag: DW_TAG_member, name: "slot_type", scope: !1810, file: !32, line: 149, baseType: !1816, size: 32, offset: 64)
!1816 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotType", file: !32, line: 112, baseType: !31)
!1817 = !DIDerivedType(tag: DW_TAG_member, name: "slot_subtype", scope: !1810, file: !32, line: 150, baseType: !1818, size: 32, offset: 96)
!1818 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotSubType_Union", file: !32, line: 142, baseType: !1819)
!1819 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "eBMOpSlotSubType_Union", file: !32, line: 138, size: 32, elements: !1820)
!1820 = !{!1821, !1823, !1825}
!1821 = !DIDerivedType(tag: DW_TAG_member, name: "elem", scope: !1819, file: !32, line: 139, baseType: !1822, size: 32)
!1822 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotSubType_Elem", file: !32, line: 122, baseType: !42)
!1823 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !1819, file: !32, line: 140, baseType: !1824, size: 32)
!1824 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotSubType_Ptr", file: !32, line: 136, baseType: !48)
!1825 = !DIDerivedType(tag: DW_TAG_member, name: "map", scope: !1819, file: !32, line: 141, baseType: !1826, size: 32)
!1826 = !DIDerivedType(tag: DW_TAG_typedef, name: "eBMOpSlotSubType_Map", file: !32, line: 130, baseType: !54)
!1827 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !1810, file: !32, line: 152, baseType: !168, size: 32, offset: 128)
!1828 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !1810, file: !32, line: 162, baseType: !1829, size: 128, offset: 192)
!1829 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !1810, file: !32, line: 155, size: 128, elements: !1830)
!1830 = !{!1831, !1832, !1833, !1834, !1835, !1837}
!1831 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !1829, file: !32, line: 156, baseType: !168, size: 32)
!1832 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !1829, file: !32, line: 157, baseType: !224, size: 32)
!1833 = !DIDerivedType(tag: DW_TAG_member, name: "p", scope: !1829, file: !32, line: 158, baseType: !182, size: 64)
!1834 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !1829, file: !32, line: 159, baseType: !260, size: 96)
!1835 = !DIDerivedType(tag: DW_TAG_member, name: "buf", scope: !1829, file: !32, line: 160, baseType: !1836, size: 64)
!1836 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !182, size: 64)
!1837 = !DIDerivedType(tag: DW_TAG_member, name: "ghash", scope: !1829, file: !32, line: 161, baseType: !1838, size: 64)
!1838 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1839, size: 64)
!1839 = !DIDerivedType(tag: DW_TAG_typedef, name: "GHash", file: !604, line: 48, baseType: !603)
!1840 = !{!1841}
!1841 = !DISubrange(count: 16)
!1842 = !DIDerivedType(tag: DW_TAG_member, name: "slots_out", scope: !1806, file: !32, line: 192, baseType: !1809, size: 5120, offset: 5120)
!1843 = !DIDerivedType(tag: DW_TAG_member, name: "exec", scope: !1806, file: !32, line: 193, baseType: !1844, size: 64, offset: 10240)
!1844 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1845, size: 64)
!1845 = !DISubroutineType(types: !1846)
!1846 = !{null, !1847, !1805}
!1847 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1848, size: 64)
!1848 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMesh", file: !131, line: 246, baseType: !1713)
!1849 = !DIDerivedType(tag: DW_TAG_member, name: "arena", scope: !1806, file: !32, line: 194, baseType: !1850, size: 64, offset: 10304)
!1850 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1851, size: 64)
!1851 = !DICompositeType(tag: DW_TAG_structure_type, name: "MemArena", file: !32, line: 194, flags: DIFlagFwdDecl)
!1852 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1806, file: !32, line: 195, baseType: !168, size: 32, offset: 10368)
!1853 = !DIDerivedType(tag: DW_TAG_member, name: "type_flag", scope: !1806, file: !32, line: 196, baseType: !1854, size: 32, offset: 10400)
!1854 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMOpTypeFlag", file: !32, line: 188, baseType: !62)
!1855 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1806, file: !32, line: 197, baseType: !168, size: 32, offset: 10432)
!1856 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !1713, file: !131, line: 223, baseType: !159, size: 1600, offset: 1152)
!1857 = !DIDerivedType(tag: DW_TAG_member, name: "edata", scope: !1713, file: !131, line: 223, baseType: !159, size: 1600, offset: 2752)
!1858 = !DIDerivedType(tag: DW_TAG_member, name: "ldata", scope: !1713, file: !131, line: 223, baseType: !159, size: 1600, offset: 4352)
!1859 = !DIDerivedType(tag: DW_TAG_member, name: "pdata", scope: !1713, file: !131, line: 223, baseType: !159, size: 1600, offset: 5952)
!1860 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !1713, file: !131, line: 233, baseType: !265, size: 16, offset: 7552)
!1861 = !DIDerivedType(tag: DW_TAG_member, name: "shapenr", scope: !1713, file: !131, line: 236, baseType: !168, size: 32, offset: 7584)
!1862 = !DIDerivedType(tag: DW_TAG_member, name: "walkers", scope: !1713, file: !131, line: 238, baseType: !168, size: 32, offset: 7616)
!1863 = !DIDerivedType(tag: DW_TAG_member, name: "totflags", scope: !1713, file: !131, line: 238, baseType: !168, size: 32, offset: 7648)
!1864 = !DIDerivedType(tag: DW_TAG_member, name: "selected", scope: !1713, file: !131, line: 239, baseType: !539, size: 128, offset: 7680)
!1865 = !DIDerivedType(tag: DW_TAG_member, name: "act_face", scope: !1713, file: !131, line: 241, baseType: !1795, size: 64, offset: 7808)
!1866 = !DIDerivedType(tag: DW_TAG_member, name: "errorstack", scope: !1713, file: !131, line: 243, baseType: !539, size: 128, offset: 7872)
!1867 = !DIDerivedType(tag: DW_TAG_member, name: "py_handle", scope: !1713, file: !131, line: 245, baseType: !182, size: 64, offset: 8000)
!1868 = !DIDerivedType(tag: DW_TAG_member, name: "emcopy", scope: !1709, file: !1708, line: 58, baseType: !1869, size: 64, offset: 64)
!1869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1709, size: 64)
!1870 = !DIDerivedType(tag: DW_TAG_member, name: "emcopyusers", scope: !1709, file: !1708, line: 59, baseType: !168, size: 32, offset: 128)
!1871 = !DIDerivedType(tag: DW_TAG_member, name: "looptris", scope: !1709, file: !1708, line: 63, baseType: !1872, size: 64, offset: 192)
!1872 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1873, size: 64)
!1873 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1760, size: 192, elements: !261)
!1874 = !DIDerivedType(tag: DW_TAG_member, name: "tottri", scope: !1709, file: !1708, line: 64, baseType: !168, size: 32, offset: 256)
!1875 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFinal", scope: !1709, file: !1708, line: 67, baseType: !774, size: 64, offset: 320)
!1876 = !DIDerivedType(tag: DW_TAG_member, name: "derivedCage", scope: !1709, file: !1708, line: 67, baseType: !774, size: 64, offset: 384)
!1877 = !DIDerivedType(tag: DW_TAG_member, name: "lastDataMask", scope: !1709, file: !1708, line: 68, baseType: !1878, size: 64, offset: 448)
!1878 = !DIDerivedType(tag: DW_TAG_typedef, name: "CustomDataMask", file: !1879, line: 48, baseType: !777)
!1879 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_customdata.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1880 = !DIDerivedType(tag: DW_TAG_member, name: "derivedVertColor", scope: !1709, file: !1708, line: 69, baseType: !1881, size: 64, offset: 512)
!1881 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !870, size: 64)
!1882 = !DIDerivedType(tag: DW_TAG_member, name: "derivedVertColorLen", scope: !1709, file: !1708, line: 70, baseType: !168, size: 32, offset: 576)
!1883 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFaceColor", scope: !1709, file: !1708, line: 71, baseType: !1881, size: 64, offset: 640)
!1884 = !DIDerivedType(tag: DW_TAG_member, name: "derivedFaceColorLen", scope: !1709, file: !1708, line: 72, baseType: !168, size: 32, offset: 704)
!1885 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !1709, file: !1708, line: 75, baseType: !265, size: 16, offset: 736)
!1886 = !DIDerivedType(tag: DW_TAG_member, name: "mat_nr", scope: !1709, file: !1708, line: 76, baseType: !265, size: 16, offset: 752)
!1887 = !DIDerivedType(tag: DW_TAG_member, name: "ob", scope: !1709, file: !1708, line: 79, baseType: !483, size: 64, offset: 768)
!1888 = !DIDerivedType(tag: DW_TAG_member, name: "mirror_cdlayer", scope: !1709, file: !1708, line: 82, baseType: !168, size: 32, offset: 832)
!1889 = !DIDerivedType(tag: DW_TAG_member, name: "vertexCos", scope: !1702, file: !1, line: 71, baseType: !1698, size: 64, offset: 13568)
!1890 = !DIDerivedType(tag: DW_TAG_member, name: "vertexNos", scope: !1702, file: !1, line: 74, baseType: !1698, size: 64, offset: 13632)
!1891 = !DIDerivedType(tag: DW_TAG_member, name: "polyNos", scope: !1702, file: !1, line: 75, baseType: !1698, size: 64, offset: 13696)
!1892 = !DIDerivedType(tag: DW_TAG_member, name: "polyCos", scope: !1702, file: !1, line: 77, baseType: !1698, size: 64, offset: 13760)
!1893 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1894, size: 64)
!1894 = !DIDerivedType(tag: DW_TAG_typedef, name: "BLI_bitmap", file: !1895, line: 33, baseType: !5)
!1895 = !DIFile(filename: "blender/source/blender/blenlib/BLI_bitmap.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1896 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1897, size: 64)
!1897 = !DIDerivedType(tag: DW_TAG_typedef, name: "MTexPoly", file: !257, line: 97, baseType: !1898)
!1898 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MTexPoly", file: !257, line: 93, size: 128, elements: !1899)
!1899 = !{!1900, !1901, !1902, !1903, !1904, !1905}
!1900 = !DIDerivedType(tag: DW_TAG_member, name: "tpage", scope: !1898, file: !257, line: 94, baseType: !943, size: 64)
!1901 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1898, file: !257, line: 95, baseType: !178, size: 8, offset: 64)
!1902 = !DIDerivedType(tag: DW_TAG_member, name: "transp", scope: !1898, file: !257, line: 95, baseType: !178, size: 8, offset: 72)
!1903 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1898, file: !257, line: 96, baseType: !265, size: 16, offset: 80)
!1904 = !DIDerivedType(tag: DW_TAG_member, name: "tile", scope: !1898, file: !257, line: 96, baseType: !265, size: 16, offset: 96)
!1905 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1898, file: !257, line: 96, baseType: !265, size: 16, offset: 112)
!1906 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1907, size: 64)
!1907 = !DIDerivedType(tag: DW_TAG_typedef, name: "MTFace", file: !257, line: 165, baseType: !1638)
!1908 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1909, size: 64)
!1909 = !DIDerivedType(tag: DW_TAG_typedef, name: "MLoopUV", file: !257, line: 112, baseType: !1910)
!1910 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MLoopUV", file: !257, line: 109, size: 96, elements: !1911)
!1911 = !{!1912, !1913}
!1912 = !DIDerivedType(tag: DW_TAG_member, name: "uv", scope: !1910, file: !257, line: 110, baseType: !796, size: 64)
!1913 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1910, file: !257, line: 111, baseType: !168, size: 32, offset: 64)
!1914 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1915, size: 64)
!1915 = !DIDerivedType(tag: DW_TAG_typedef, name: "MLoopCol", file: !257, line: 131, baseType: !1916)
!1916 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MLoopCol", file: !257, line: 129, size: 32, elements: !1917)
!1917 = !{!1918, !1919, !1920, !1921}
!1918 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !1916, file: !257, line: 130, baseType: !178, size: 8)
!1919 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !1916, file: !257, line: 130, baseType: !178, size: 8, offset: 8)
!1920 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !1916, file: !257, line: 130, baseType: !178, size: 8, offset: 16)
!1921 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1916, file: !257, line: 130, baseType: !178, size: 8, offset: 24)
!1922 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1923, size: 64)
!1923 = !DIDerivedType(tag: DW_TAG_typedef, name: "MCol", file: !257, line: 76, baseType: !1924)
!1924 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MCol", file: !257, line: 74, size: 32, elements: !1925)
!1925 = !{!1926, !1927, !1928, !1929}
!1926 = !DIDerivedType(tag: DW_TAG_member, name: "a", scope: !1924, file: !257, line: 75, baseType: !178, size: 8)
!1927 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !1924, file: !257, line: 75, baseType: !178, size: 8, offset: 8)
!1928 = !DIDerivedType(tag: DW_TAG_member, name: "g", scope: !1924, file: !257, line: 75, baseType: !178, size: 8, offset: 16)
!1929 = !DIDerivedType(tag: DW_TAG_member, name: "b", scope: !1924, file: !257, line: 75, baseType: !178, size: 8, offset: 24)
!1930 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1931, size: 64)
!1931 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1932)
!1932 = !DIDerivedType(tag: DW_TAG_typedef, name: "GLubyte", file: !1933, line: 278, baseType: !871)
!1933 = !DIFile(filename: "blender/extern/glew/include/GL/glew.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1934 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMIterType", file: !114, line: 79, baseType: !113)
!1935 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMIter__begin_cb", file: !114, line: 158, baseType: !1936)
!1936 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1937, size: 64)
!1937 = !DISubroutineType(types: !1938)
!1938 = !{null, !182}
!1939 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMIter__step_cb", file: !114, line: 159, baseType: !1940)
!1940 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1941, size: 64)
!1941 = !DISubroutineType(types: !1942)
!1942 = !{!182, !182}
!1943 = !{i32 7, !"Dwarf Version", i32 4}
!1944 = !{i32 2, !"Debug Info Version", i32 3}
!1945 = !{i32 1, !"wchar_size", i32 4}
!1946 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!1947 = distinct !DISubprogram(name: "getEditDerivedBMesh", scope: !1, file: !1, line: 1711, type: !1948, scopeLine: 1714, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1952)
!1948 = !DISubroutineType(types: !1949)
!1949 = !{!154, !1706, !1950, !473}
!1950 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1951, size: 64)
!1951 = !DIDerivedType(tag: DW_TAG_typedef, name: "Object", file: !485, line: 295, baseType: !484)
!1952 = !{}
!1953 = !DILocalVariable(name: "em", arg: 1, scope: !1947, file: !1, line: 1711, type: !1706)
!1954 = !DILocation(line: 1711, column: 46, scope: !1947)
!1955 = !DILocalVariable(name: "UNUSED_ob", arg: 2, scope: !1947, file: !1, line: 1712, type: !1950)
!1956 = !DILocation(line: 1712, column: 42, scope: !1947)
!1957 = !DILocalVariable(name: "vertexCos", arg: 3, scope: !1947, file: !1, line: 1713, type: !473)
!1958 = !DILocation(line: 1713, column: 42, scope: !1947)
!1959 = !DILocalVariable(name: "bmdm", scope: !1947, file: !1, line: 1715, type: !1700)
!1960 = !DILocation(line: 1715, column: 20, scope: !1947)
!1961 = !DILocation(line: 1715, column: 27, scope: !1947)
!1962 = !DILocalVariable(name: "bm", scope: !1947, file: !1, line: 1716, type: !1847)
!1963 = !DILocation(line: 1716, column: 9, scope: !1947)
!1964 = !DILocation(line: 1716, column: 14, scope: !1947)
!1965 = !DILocation(line: 1716, column: 18, scope: !1947)
!1966 = !DILocalVariable(name: "cd_dvert_offset", scope: !1947, file: !1, line: 1717, type: !1967)
!1967 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !168)
!1968 = !DILocation(line: 1717, column: 12, scope: !1947)
!1969 = !DILocation(line: 1717, column: 53, scope: !1947)
!1970 = !DILocation(line: 1717, column: 57, scope: !1947)
!1971 = !DILocation(line: 1717, column: 30, scope: !1947)
!1972 = !DILocalVariable(name: "cd_skin_offset", scope: !1947, file: !1, line: 1718, type: !1967)
!1973 = !DILocation(line: 1718, column: 12, scope: !1947)
!1974 = !DILocation(line: 1718, column: 52, scope: !1947)
!1975 = !DILocation(line: 1718, column: 56, scope: !1947)
!1976 = !DILocation(line: 1718, column: 29, scope: !1947)
!1977 = !DILocation(line: 1720, column: 13, scope: !1947)
!1978 = !DILocation(line: 1720, column: 2, scope: !1947)
!1979 = !DILocation(line: 1720, column: 8, scope: !1947)
!1980 = !DILocation(line: 1720, column: 11, scope: !1947)
!1981 = !DILocation(line: 1722, column: 25, scope: !1947)
!1982 = !DILocation(line: 1722, column: 10, scope: !1947)
!1983 = !DILocation(line: 1722, column: 50, scope: !1947)
!1984 = !DILocation(line: 1722, column: 54, scope: !1947)
!1985 = !DILocation(line: 1723, column: 10, scope: !1947)
!1986 = !DILocation(line: 1723, column: 14, scope: !1947)
!1987 = !DILocation(line: 1723, column: 23, scope: !1947)
!1988 = !DILocation(line: 1723, column: 27, scope: !1947)
!1989 = !DILocation(line: 1723, column: 35, scope: !1947)
!1990 = !DILocation(line: 1723, column: 39, scope: !1947)
!1991 = !DILocation(line: 1723, column: 48, scope: !1947)
!1992 = !DILocation(line: 1723, column: 52, scope: !1947)
!1993 = !DILocation(line: 1722, column: 2, scope: !1947)
!1994 = !DILocation(line: 1726, column: 48, scope: !1947)
!1995 = !DILocation(line: 1726, column: 21, scope: !1947)
!1996 = !DILocation(line: 1726, column: 2, scope: !1947)
!1997 = !DILocation(line: 1726, column: 8, scope: !1947)
!1998 = !DILocation(line: 1726, column: 11, scope: !1947)
!1999 = !DILocation(line: 1726, column: 19, scope: !1947)
!2000 = !DILocation(line: 1728, column: 2, scope: !1947)
!2001 = !DILocation(line: 1728, column: 8, scope: !1947)
!2002 = !DILocation(line: 1728, column: 11, scope: !1947)
!2003 = !DILocation(line: 1728, column: 22, scope: !1947)
!2004 = !DILocation(line: 1729, column: 2, scope: !1947)
!2005 = !DILocation(line: 1729, column: 8, scope: !1947)
!2006 = !DILocation(line: 1729, column: 11, scope: !1947)
!2007 = !DILocation(line: 1729, column: 21, scope: !1947)
!2008 = !DILocation(line: 1731, column: 2, scope: !1947)
!2009 = !DILocation(line: 1731, column: 8, scope: !1947)
!2010 = !DILocation(line: 1731, column: 11, scope: !1947)
!2011 = !DILocation(line: 1731, column: 29, scope: !1947)
!2012 = !DILocation(line: 1732, column: 2, scope: !1947)
!2013 = !DILocation(line: 1732, column: 8, scope: !1947)
!2014 = !DILocation(line: 1732, column: 11, scope: !1947)
!2015 = !DILocation(line: 1732, column: 29, scope: !1947)
!2016 = !DILocation(line: 1733, column: 2, scope: !1947)
!2017 = !DILocation(line: 1733, column: 8, scope: !1947)
!2018 = !DILocation(line: 1733, column: 11, scope: !1947)
!2019 = !DILocation(line: 1733, column: 33, scope: !1947)
!2020 = !DILocation(line: 1734, column: 2, scope: !1947)
!2021 = !DILocation(line: 1734, column: 8, scope: !1947)
!2022 = !DILocation(line: 1734, column: 11, scope: !1947)
!2023 = !DILocation(line: 1734, column: 29, scope: !1947)
!2024 = !DILocation(line: 1735, column: 2, scope: !1947)
!2025 = !DILocation(line: 1735, column: 8, scope: !1947)
!2026 = !DILocation(line: 1735, column: 11, scope: !1947)
!2027 = !DILocation(line: 1735, column: 29, scope: !1947)
!2028 = !DILocation(line: 1737, column: 2, scope: !1947)
!2029 = !DILocation(line: 1737, column: 8, scope: !1947)
!2030 = !DILocation(line: 1737, column: 11, scope: !1947)
!2031 = !DILocation(line: 1737, column: 23, scope: !1947)
!2032 = !DILocation(line: 1738, column: 2, scope: !1947)
!2033 = !DILocation(line: 1738, column: 8, scope: !1947)
!2034 = !DILocation(line: 1738, column: 11, scope: !1947)
!2035 = !DILocation(line: 1738, column: 23, scope: !1947)
!2036 = !DILocation(line: 1739, column: 2, scope: !1947)
!2037 = !DILocation(line: 1739, column: 8, scope: !1947)
!2038 = !DILocation(line: 1739, column: 11, scope: !1947)
!2039 = !DILocation(line: 1739, column: 27, scope: !1947)
!2040 = !DILocation(line: 1740, column: 2, scope: !1947)
!2041 = !DILocation(line: 1740, column: 8, scope: !1947)
!2042 = !DILocation(line: 1740, column: 11, scope: !1947)
!2043 = !DILocation(line: 1740, column: 23, scope: !1947)
!2044 = !DILocation(line: 1741, column: 2, scope: !1947)
!2045 = !DILocation(line: 1741, column: 8, scope: !1947)
!2046 = !DILocation(line: 1741, column: 11, scope: !1947)
!2047 = !DILocation(line: 1741, column: 23, scope: !1947)
!2048 = !DILocation(line: 1743, column: 2, scope: !1947)
!2049 = !DILocation(line: 1743, column: 8, scope: !1947)
!2050 = !DILocation(line: 1743, column: 11, scope: !1947)
!2051 = !DILocation(line: 1743, column: 19, scope: !1947)
!2052 = !DILocation(line: 1744, column: 2, scope: !1947)
!2053 = !DILocation(line: 1744, column: 8, scope: !1947)
!2054 = !DILocation(line: 1744, column: 11, scope: !1947)
!2055 = !DILocation(line: 1744, column: 21, scope: !1947)
!2056 = !DILocation(line: 1745, column: 2, scope: !1947)
!2057 = !DILocation(line: 1745, column: 8, scope: !1947)
!2058 = !DILocation(line: 1745, column: 11, scope: !1947)
!2059 = !DILocation(line: 1745, column: 21, scope: !1947)
!2060 = !DILocation(line: 1746, column: 2, scope: !1947)
!2061 = !DILocation(line: 1746, column: 8, scope: !1947)
!2062 = !DILocation(line: 1746, column: 11, scope: !1947)
!2063 = !DILocation(line: 1746, column: 21, scope: !1947)
!2064 = !DILocation(line: 1747, column: 2, scope: !1947)
!2065 = !DILocation(line: 1747, column: 8, scope: !1947)
!2066 = !DILocation(line: 1747, column: 11, scope: !1947)
!2067 = !DILocation(line: 1747, column: 19, scope: !1947)
!2068 = !DILocation(line: 1748, column: 2, scope: !1947)
!2069 = !DILocation(line: 1748, column: 8, scope: !1947)
!2070 = !DILocation(line: 1748, column: 11, scope: !1947)
!2071 = !DILocation(line: 1748, column: 23, scope: !1947)
!2072 = !DILocation(line: 1749, column: 2, scope: !1947)
!2073 = !DILocation(line: 1749, column: 8, scope: !1947)
!2074 = !DILocation(line: 1749, column: 11, scope: !1947)
!2075 = !DILocation(line: 1749, column: 25, scope: !1947)
!2076 = !DILocation(line: 1750, column: 2, scope: !1947)
!2077 = !DILocation(line: 1750, column: 8, scope: !1947)
!2078 = !DILocation(line: 1750, column: 11, scope: !1947)
!2079 = !DILocation(line: 1750, column: 25, scope: !1947)
!2080 = !DILocation(line: 1751, column: 2, scope: !1947)
!2081 = !DILocation(line: 1751, column: 8, scope: !1947)
!2082 = !DILocation(line: 1751, column: 11, scope: !1947)
!2083 = !DILocation(line: 1751, column: 29, scope: !1947)
!2084 = !DILocation(line: 1752, column: 2, scope: !1947)
!2085 = !DILocation(line: 1752, column: 8, scope: !1947)
!2086 = !DILocation(line: 1752, column: 11, scope: !1947)
!2087 = !DILocation(line: 1752, column: 25, scope: !1947)
!2088 = !DILocation(line: 1753, column: 2, scope: !1947)
!2089 = !DILocation(line: 1753, column: 8, scope: !1947)
!2090 = !DILocation(line: 1753, column: 11, scope: !1947)
!2091 = !DILocation(line: 1753, column: 25, scope: !1947)
!2092 = !DILocation(line: 1755, column: 2, scope: !1947)
!2093 = !DILocation(line: 1755, column: 8, scope: !1947)
!2094 = !DILocation(line: 1755, column: 11, scope: !1947)
!2095 = !DILocation(line: 1755, column: 32, scope: !1947)
!2096 = !DILocation(line: 1757, column: 2, scope: !1947)
!2097 = !DILocation(line: 1757, column: 8, scope: !1947)
!2098 = !DILocation(line: 1757, column: 11, scope: !1947)
!2099 = !DILocation(line: 1757, column: 23, scope: !1947)
!2100 = !DILocation(line: 1758, column: 2, scope: !1947)
!2101 = !DILocation(line: 1758, column: 8, scope: !1947)
!2102 = !DILocation(line: 1758, column: 11, scope: !1947)
!2103 = !DILocation(line: 1758, column: 27, scope: !1947)
!2104 = !DILocation(line: 1759, column: 2, scope: !1947)
!2105 = !DILocation(line: 1759, column: 8, scope: !1947)
!2106 = !DILocation(line: 1759, column: 11, scope: !1947)
!2107 = !DILocation(line: 1759, column: 30, scope: !1947)
!2108 = !DILocation(line: 1761, column: 2, scope: !1947)
!2109 = !DILocation(line: 1761, column: 8, scope: !1947)
!2110 = !DILocation(line: 1761, column: 11, scope: !1947)
!2111 = !DILocation(line: 1761, column: 29, scope: !1947)
!2112 = !DILocation(line: 1762, column: 2, scope: !1947)
!2113 = !DILocation(line: 1762, column: 8, scope: !1947)
!2114 = !DILocation(line: 1762, column: 11, scope: !1947)
!2115 = !DILocation(line: 1762, column: 29, scope: !1947)
!2116 = !DILocation(line: 1763, column: 2, scope: !1947)
!2117 = !DILocation(line: 1763, column: 8, scope: !1947)
!2118 = !DILocation(line: 1763, column: 11, scope: !1947)
!2119 = !DILocation(line: 1763, column: 29, scope: !1947)
!2120 = !DILocation(line: 1764, column: 2, scope: !1947)
!2121 = !DILocation(line: 1764, column: 8, scope: !1947)
!2122 = !DILocation(line: 1764, column: 11, scope: !1947)
!2123 = !DILocation(line: 1764, column: 35, scope: !1947)
!2124 = !DILocation(line: 1766, column: 2, scope: !1947)
!2125 = !DILocation(line: 1766, column: 8, scope: !1947)
!2126 = !DILocation(line: 1766, column: 11, scope: !1947)
!2127 = !DILocation(line: 1766, column: 21, scope: !1947)
!2128 = !DILocation(line: 1767, column: 2, scope: !1947)
!2129 = !DILocation(line: 1767, column: 8, scope: !1947)
!2130 = !DILocation(line: 1767, column: 11, scope: !1947)
!2131 = !DILocation(line: 1767, column: 27, scope: !1947)
!2132 = !DILocation(line: 1768, column: 2, scope: !1947)
!2133 = !DILocation(line: 1768, column: 8, scope: !1947)
!2134 = !DILocation(line: 1768, column: 11, scope: !1947)
!2135 = !DILocation(line: 1768, column: 33, scope: !1947)
!2136 = !DILocation(line: 1769, column: 2, scope: !1947)
!2137 = !DILocation(line: 1769, column: 8, scope: !1947)
!2138 = !DILocation(line: 1769, column: 11, scope: !1947)
!2139 = !DILocation(line: 1769, column: 27, scope: !1947)
!2140 = !DILocation(line: 1770, column: 2, scope: !1947)
!2141 = !DILocation(line: 1770, column: 8, scope: !1947)
!2142 = !DILocation(line: 1770, column: 11, scope: !1947)
!2143 = !DILocation(line: 1770, column: 30, scope: !1947)
!2144 = !DILocation(line: 1771, column: 2, scope: !1947)
!2145 = !DILocation(line: 1771, column: 8, scope: !1947)
!2146 = !DILocation(line: 1771, column: 11, scope: !1947)
!2147 = !DILocation(line: 1771, column: 31, scope: !1947)
!2148 = !DILocation(line: 1772, column: 2, scope: !1947)
!2149 = !DILocation(line: 1772, column: 8, scope: !1947)
!2150 = !DILocation(line: 1772, column: 11, scope: !1947)
!2151 = !DILocation(line: 1772, column: 30, scope: !1947)
!2152 = !DILocation(line: 1773, column: 2, scope: !1947)
!2153 = !DILocation(line: 1773, column: 8, scope: !1947)
!2154 = !DILocation(line: 1773, column: 11, scope: !1947)
!2155 = !DILocation(line: 1773, column: 24, scope: !1947)
!2156 = !DILocation(line: 1774, column: 2, scope: !1947)
!2157 = !DILocation(line: 1774, column: 8, scope: !1947)
!2158 = !DILocation(line: 1774, column: 11, scope: !1947)
!2159 = !DILocation(line: 1774, column: 25, scope: !1947)
!2160 = !DILocation(line: 1775, column: 2, scope: !1947)
!2161 = !DILocation(line: 1775, column: 8, scope: !1947)
!2162 = !DILocation(line: 1775, column: 11, scope: !1947)
!2163 = !DILocation(line: 1775, column: 23, scope: !1947)
!2164 = !DILocation(line: 1777, column: 2, scope: !1947)
!2165 = !DILocation(line: 1777, column: 8, scope: !1947)
!2166 = !DILocation(line: 1777, column: 11, scope: !1947)
!2167 = !DILocation(line: 1777, column: 19, scope: !1947)
!2168 = !DILocation(line: 1779, column: 40, scope: !1947)
!2169 = !DILocation(line: 1779, column: 2, scope: !1947)
!2170 = !DILocation(line: 1779, column: 8, scope: !1947)
!2171 = !DILocation(line: 1779, column: 18, scope: !1947)
!2172 = !DILocation(line: 1780, column: 27, scope: !1947)
!2173 = !DILocation(line: 1780, column: 37, scope: !1947)
!2174 = !DILocation(line: 1780, column: 2, scope: !1947)
!2175 = !DILocation(line: 1780, column: 8, scope: !1947)
!2176 = !DILocation(line: 1780, column: 11, scope: !1947)
!2177 = !DILocation(line: 1780, column: 24, scope: !1947)
!2178 = !DILocation(line: 1782, column: 6, scope: !2179)
!2179 = distinct !DILexicalBlock(scope: !1947, file: !1, line: 1782, column: 6)
!2180 = !DILocation(line: 1782, column: 22, scope: !2179)
!2181 = !DILocation(line: 1782, column: 6, scope: !1947)
!2182 = !DILocalVariable(name: "iter", scope: !2183, file: !1, line: 1783, type: !2184)
!2183 = distinct !DILexicalBlock(scope: !2179, file: !1, line: 1782, column: 29)
!2184 = !DIDerivedType(tag: DW_TAG_typedef, name: "BMIter", file: !114, line: 186, baseType: !2185)
!2185 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter", file: !114, line: 164, size: 512, elements: !2186)
!2186 = !{!2187, !2267, !2268, !2269, !2270}
!2187 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2185, file: !114, line: 179, baseType: !2188, size: 320)
!2188 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !2185, file: !114, line: 166, size: 320, elements: !2189)
!2189 = !{!2190, !2205, !2211, !2219, !2227, !2233, !2239, !2245, !2249, !2255, !2261}
!2190 = !DIDerivedType(tag: DW_TAG_member, name: "elem_of_mesh", scope: !2188, file: !114, line: 167, baseType: !2191, size: 192)
!2191 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__elem_of_mesh", file: !114, line: 113, size: 192, elements: !2192)
!2192 = !{!2193}
!2193 = !DIDerivedType(tag: DW_TAG_member, name: "pooliter", scope: !2191, file: !114, line: 114, baseType: !2194, size: 192)
!2194 = !DIDerivedType(tag: DW_TAG_typedef, name: "BLI_mempool_iter", file: !2195, line: 80, baseType: !2196)
!2195 = !DIFile(filename: "blender/source/blender/blenlib/BLI_mempool.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2196 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BLI_mempool_iter", file: !2195, line: 76, size: 192, elements: !2197)
!2197 = !{!2198, !2201, !2204}
!2198 = !DIDerivedType(tag: DW_TAG_member, name: "pool", scope: !2196, file: !2195, line: 77, baseType: !2199, size: 64)
!2199 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2200, size: 64)
!2200 = !DIDerivedType(tag: DW_TAG_typedef, name: "BLI_mempool", file: !2195, line: 47, baseType: !192)
!2201 = !DIDerivedType(tag: DW_TAG_member, name: "curchunk", scope: !2196, file: !2195, line: 78, baseType: !2202, size: 64, offset: 64)
!2202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2203, size: 64)
!2203 = !DICompositeType(tag: DW_TAG_structure_type, name: "BLI_mempool_chunk", file: !2195, line: 45, flags: DIFlagFwdDecl)
!2204 = !DIDerivedType(tag: DW_TAG_member, name: "curindex", scope: !2196, file: !2195, line: 79, baseType: !5, size: 32, offset: 128)
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "edge_of_vert", scope: !2188, file: !114, line: 169, baseType: !2206, size: 192)
!2206 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__edge_of_vert", file: !114, line: 116, size: 192, elements: !2207)
!2207 = !{!2208, !2209, !2210}
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !2206, file: !114, line: 117, baseType: !1730, size: 64)
!2209 = !DIDerivedType(tag: DW_TAG_member, name: "e_first", scope: !2206, file: !114, line: 118, baseType: !1791, size: 64, offset: 64)
!2210 = !DIDerivedType(tag: DW_TAG_member, name: "e_next", scope: !2206, file: !114, line: 118, baseType: !1791, size: 64, offset: 128)
!2211 = !DIDerivedType(tag: DW_TAG_member, name: "face_of_vert", scope: !2188, file: !114, line: 170, baseType: !2212, size: 320)
!2212 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__face_of_vert", file: !114, line: 120, size: 320, elements: !2213)
!2213 = !{!2214, !2215, !2216, !2217, !2218}
!2214 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !2212, file: !114, line: 121, baseType: !1730, size: 64)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !2212, file: !114, line: 122, baseType: !1773, size: 64, offset: 64)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !2212, file: !114, line: 122, baseType: !1773, size: 64, offset: 128)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "e_first", scope: !2212, file: !114, line: 123, baseType: !1791, size: 64, offset: 192)
!2218 = !DIDerivedType(tag: DW_TAG_member, name: "e_next", scope: !2212, file: !114, line: 123, baseType: !1791, size: 64, offset: 256)
!2219 = !DIDerivedType(tag: DW_TAG_member, name: "loop_of_vert", scope: !2188, file: !114, line: 171, baseType: !2220, size: 320)
!2220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__loop_of_vert", file: !114, line: 125, size: 320, elements: !2221)
!2221 = !{!2222, !2223, !2224, !2225, !2226}
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "vdata", scope: !2220, file: !114, line: 126, baseType: !1730, size: 64)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !2220, file: !114, line: 127, baseType: !1773, size: 64, offset: 64)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !2220, file: !114, line: 127, baseType: !1773, size: 64, offset: 128)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "e_first", scope: !2220, file: !114, line: 128, baseType: !1791, size: 64, offset: 192)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "e_next", scope: !2220, file: !114, line: 128, baseType: !1791, size: 64, offset: 256)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "loop_of_edge", scope: !2188, file: !114, line: 172, baseType: !2228, size: 192)
!2228 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__loop_of_edge", file: !114, line: 130, size: 192, elements: !2229)
!2229 = !{!2230, !2231, !2232}
!2230 = !DIDerivedType(tag: DW_TAG_member, name: "edata", scope: !2228, file: !114, line: 131, baseType: !1791, size: 64)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !2228, file: !114, line: 132, baseType: !1773, size: 64, offset: 64)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !2228, file: !114, line: 132, baseType: !1773, size: 64, offset: 128)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "loop_of_loop", scope: !2188, file: !114, line: 173, baseType: !2234, size: 192)
!2234 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__loop_of_loop", file: !114, line: 134, size: 192, elements: !2235)
!2235 = !{!2236, !2237, !2238}
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "ldata", scope: !2234, file: !114, line: 135, baseType: !1773, size: 64)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !2234, file: !114, line: 136, baseType: !1773, size: 64, offset: 64)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !2234, file: !114, line: 136, baseType: !1773, size: 64, offset: 128)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "face_of_edge", scope: !2188, file: !114, line: 174, baseType: !2240, size: 192)
!2240 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__face_of_edge", file: !114, line: 138, size: 192, elements: !2241)
!2241 = !{!2242, !2243, !2244}
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "edata", scope: !2240, file: !114, line: 139, baseType: !1791, size: 64)
!2243 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !2240, file: !114, line: 140, baseType: !1773, size: 64, offset: 64)
!2244 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !2240, file: !114, line: 140, baseType: !1773, size: 64, offset: 128)
!2245 = !DIDerivedType(tag: DW_TAG_member, name: "vert_of_edge", scope: !2188, file: !114, line: 175, baseType: !2246, size: 64)
!2246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__vert_of_edge", file: !114, line: 142, size: 64, elements: !2247)
!2247 = !{!2248}
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "edata", scope: !2246, file: !114, line: 143, baseType: !1791, size: 64)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "vert_of_face", scope: !2188, file: !114, line: 176, baseType: !2250, size: 192)
!2250 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__vert_of_face", file: !114, line: 145, size: 192, elements: !2251)
!2251 = !{!2252, !2253, !2254}
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "pdata", scope: !2250, file: !114, line: 146, baseType: !1795, size: 64)
!2253 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !2250, file: !114, line: 147, baseType: !1773, size: 64, offset: 64)
!2254 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !2250, file: !114, line: 147, baseType: !1773, size: 64, offset: 128)
!2255 = !DIDerivedType(tag: DW_TAG_member, name: "edge_of_face", scope: !2188, file: !114, line: 177, baseType: !2256, size: 192)
!2256 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__edge_of_face", file: !114, line: 149, size: 192, elements: !2257)
!2257 = !{!2258, !2259, !2260}
!2258 = !DIDerivedType(tag: DW_TAG_member, name: "pdata", scope: !2256, file: !114, line: 150, baseType: !1795, size: 64)
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !2256, file: !114, line: 151, baseType: !1773, size: 64, offset: 64)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !2256, file: !114, line: 151, baseType: !1773, size: 64, offset: 128)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "loop_of_face", scope: !2188, file: !114, line: 178, baseType: !2262, size: 192)
!2262 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BMIter__loop_of_face", file: !114, line: 153, size: 192, elements: !2263)
!2263 = !{!2264, !2265, !2266}
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "pdata", scope: !2262, file: !114, line: 154, baseType: !1795, size: 64)
!2265 = !DIDerivedType(tag: DW_TAG_member, name: "l_first", scope: !2262, file: !114, line: 155, baseType: !1773, size: 64, offset: 64)
!2266 = !DIDerivedType(tag: DW_TAG_member, name: "l_next", scope: !2262, file: !114, line: 155, baseType: !1773, size: 64, offset: 128)
!2267 = !DIDerivedType(tag: DW_TAG_member, name: "begin", scope: !2185, file: !114, line: 181, baseType: !1935, size: 64, offset: 320)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !2185, file: !114, line: 182, baseType: !1939, size: 64, offset: 384)
!2269 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !2185, file: !114, line: 184, baseType: !168, size: 32, offset: 448)
!2270 = !DIDerivedType(tag: DW_TAG_member, name: "itype", scope: !2185, file: !114, line: 185, baseType: !178, size: 8, offset: 480)
!2271 = !DILocation(line: 1783, column: 10, scope: !2183)
!2272 = !DILocalVariable(name: "eve", scope: !2183, file: !1, line: 1784, type: !1730)
!2273 = !DILocation(line: 1784, column: 11, scope: !2183)
!2274 = !DILocalVariable(name: "i", scope: !2183, file: !1, line: 1785, type: !168)
!2275 = !DILocation(line: 1785, column: 7, scope: !2183)
!2276 = !DILocation(line: 1787, column: 22, scope: !2183)
!2277 = !DILocation(line: 1787, column: 28, scope: !2183)
!2278 = !DILocation(line: 1787, column: 3, scope: !2183)
!2279 = !DILocation(line: 1789, column: 3, scope: !2280)
!2280 = distinct !DILexicalBlock(scope: !2183, file: !1, line: 1789, column: 3)
!2281 = !DILocation(line: 1789, column: 3, scope: !2282)
!2282 = distinct !DILexicalBlock(scope: !2280, file: !1, line: 1789, column: 3)
!2283 = !DILocation(line: 1790, column: 22, scope: !2284)
!2284 = distinct !DILexicalBlock(scope: !2282, file: !1, line: 1789, column: 60)
!2285 = !DILocation(line: 1790, column: 28, scope: !2284)
!2286 = !DILocation(line: 1790, column: 32, scope: !2284)
!2287 = !DILocation(line: 1791, column: 21, scope: !2284)
!2288 = !DILocation(line: 1790, column: 4, scope: !2284)
!2289 = !DILocation(line: 1792, column: 3, scope: !2284)
!2290 = distinct !{!2290, !2279, !2291}
!2291 = !DILocation(line: 1792, column: 3, scope: !2280)
!2292 = !DILocation(line: 1793, column: 2, scope: !2183)
!2293 = !DILocation(line: 1795, column: 6, scope: !2294)
!2294 = distinct !DILexicalBlock(scope: !1947, file: !1, line: 1795, column: 6)
!2295 = !DILocation(line: 1795, column: 21, scope: !2294)
!2296 = !DILocation(line: 1795, column: 6, scope: !1947)
!2297 = !DILocalVariable(name: "iter", scope: !2298, file: !1, line: 1796, type: !2184)
!2298 = distinct !DILexicalBlock(scope: !2294, file: !1, line: 1795, column: 28)
!2299 = !DILocation(line: 1796, column: 10, scope: !2298)
!2300 = !DILocalVariable(name: "eve", scope: !2298, file: !1, line: 1797, type: !1730)
!2301 = !DILocation(line: 1797, column: 11, scope: !2298)
!2302 = !DILocalVariable(name: "i", scope: !2298, file: !1, line: 1798, type: !168)
!2303 = !DILocation(line: 1798, column: 7, scope: !2298)
!2304 = !DILocation(line: 1800, column: 22, scope: !2298)
!2305 = !DILocation(line: 1800, column: 28, scope: !2298)
!2306 = !DILocation(line: 1800, column: 3, scope: !2298)
!2307 = !DILocation(line: 1802, column: 3, scope: !2308)
!2308 = distinct !DILexicalBlock(scope: !2298, file: !1, line: 1802, column: 3)
!2309 = !DILocation(line: 1802, column: 3, scope: !2310)
!2310 = distinct !DILexicalBlock(scope: !2308, file: !1, line: 1802, column: 3)
!2311 = !DILocation(line: 1803, column: 22, scope: !2312)
!2312 = distinct !DILexicalBlock(scope: !2310, file: !1, line: 1802, column: 60)
!2313 = !DILocation(line: 1803, column: 28, scope: !2312)
!2314 = !DILocation(line: 1803, column: 32, scope: !2312)
!2315 = !DILocation(line: 1804, column: 21, scope: !2312)
!2316 = !DILocation(line: 1803, column: 4, scope: !2312)
!2317 = !DILocation(line: 1805, column: 3, scope: !2312)
!2318 = distinct !{!2318, !2307, !2319}
!2319 = !DILocation(line: 1805, column: 3, scope: !2308)
!2320 = !DILocation(line: 1806, column: 2, scope: !2298)
!2321 = !DILocation(line: 1808, column: 24, scope: !1947)
!2322 = !DILocation(line: 1808, column: 9, scope: !1947)
!2323 = !DILocation(line: 1808, column: 2, scope: !1947)
!2324 = distinct !DISubprogram(name: "emDM_getVertCos", scope: !1, file: !1, line: 1632, type: !471, scopeLine: 1633, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1952)
!2325 = !DILocalVariable(name: "dm", arg: 1, scope: !2324, file: !1, line: 1632, type: !154)
!2326 = !DILocation(line: 1632, column: 42, scope: !2324)
!2327 = !DILocalVariable(name: "r_cos", arg: 2, scope: !2324, file: !1, line: 1632, type: !473)
!2328 = !DILocation(line: 1632, column: 54, scope: !2324)
!2329 = !DILocalVariable(name: "bmdm", scope: !2324, file: !1, line: 1634, type: !1700)
!2330 = !DILocation(line: 1634, column: 20, scope: !2324)
!2331 = !DILocation(line: 1634, column: 47, scope: !2324)
!2332 = !DILocation(line: 1634, column: 27, scope: !2324)
!2333 = !DILocalVariable(name: "bm", scope: !2324, file: !1, line: 1635, type: !1847)
!2334 = !DILocation(line: 1635, column: 9, scope: !2324)
!2335 = !DILocation(line: 1635, column: 14, scope: !2324)
!2336 = !DILocation(line: 1635, column: 20, scope: !2324)
!2337 = !DILocation(line: 1635, column: 24, scope: !2324)
!2338 = !DILocalVariable(name: "eve", scope: !2324, file: !1, line: 1636, type: !1730)
!2339 = !DILocation(line: 1636, column: 10, scope: !2324)
!2340 = !DILocalVariable(name: "iter", scope: !2324, file: !1, line: 1637, type: !2184)
!2341 = !DILocation(line: 1637, column: 9, scope: !2324)
!2342 = !DILocalVariable(name: "i", scope: !2324, file: !1, line: 1638, type: !168)
!2343 = !DILocation(line: 1638, column: 6, scope: !2324)
!2344 = !DILocation(line: 1640, column: 6, scope: !2345)
!2345 = distinct !DILexicalBlock(scope: !2324, file: !1, line: 1640, column: 6)
!2346 = !DILocation(line: 1640, column: 12, scope: !2345)
!2347 = !DILocation(line: 1640, column: 6, scope: !2324)
!2348 = !DILocation(line: 1641, column: 3, scope: !2349)
!2349 = distinct !DILexicalBlock(scope: !2350, file: !1, line: 1641, column: 3)
!2350 = distinct !DILexicalBlock(scope: !2345, file: !1, line: 1640, column: 23)
!2351 = !DILocation(line: 1641, column: 3, scope: !2352)
!2352 = distinct !DILexicalBlock(scope: !2349, file: !1, line: 1641, column: 3)
!2353 = !DILocation(line: 1642, column: 15, scope: !2354)
!2354 = distinct !DILexicalBlock(scope: !2352, file: !1, line: 1641, column: 60)
!2355 = !DILocation(line: 1642, column: 21, scope: !2354)
!2356 = !DILocation(line: 1642, column: 25, scope: !2354)
!2357 = !DILocation(line: 1642, column: 31, scope: !2354)
!2358 = !DILocation(line: 1642, column: 41, scope: !2354)
!2359 = !DILocation(line: 1642, column: 4, scope: !2354)
!2360 = !DILocation(line: 1643, column: 3, scope: !2354)
!2361 = distinct !{!2361, !2348, !2362}
!2362 = !DILocation(line: 1643, column: 3, scope: !2349)
!2363 = !DILocation(line: 1644, column: 2, scope: !2350)
!2364 = !DILocation(line: 1646, column: 3, scope: !2365)
!2365 = distinct !DILexicalBlock(scope: !2366, file: !1, line: 1646, column: 3)
!2366 = distinct !DILexicalBlock(scope: !2345, file: !1, line: 1645, column: 7)
!2367 = !DILocation(line: 1646, column: 3, scope: !2368)
!2368 = distinct !DILexicalBlock(scope: !2365, file: !1, line: 1646, column: 3)
!2369 = !DILocation(line: 1647, column: 15, scope: !2370)
!2370 = distinct !DILexicalBlock(scope: !2368, file: !1, line: 1646, column: 60)
!2371 = !DILocation(line: 1647, column: 21, scope: !2370)
!2372 = !DILocation(line: 1647, column: 25, scope: !2370)
!2373 = !DILocation(line: 1647, column: 30, scope: !2370)
!2374 = !DILocation(line: 1647, column: 4, scope: !2370)
!2375 = !DILocation(line: 1648, column: 3, scope: !2370)
!2376 = distinct !{!2376, !2364, !2377}
!2377 = !DILocation(line: 1648, column: 3, scope: !2365)
!2378 = !DILocation(line: 1650, column: 1, scope: !2324)
!2379 = distinct !DISubprogram(name: "emDM_getMinMax", scope: !1, file: !1, line: 1195, type: !462, scopeLine: 1196, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1952)
!2380 = !DILocalVariable(name: "dm", arg: 1, scope: !2379, file: !1, line: 1195, type: !154)
!2381 = !DILocation(line: 1195, column: 41, scope: !2379)
!2382 = !DILocalVariable(name: "r_min", arg: 2, scope: !2379, file: !1, line: 1195, type: !464)
!2383 = !DILocation(line: 1195, column: 51, scope: !2379)
!2384 = !DILocalVariable(name: "r_max", arg: 3, scope: !2379, file: !1, line: 1195, type: !464)
!2385 = !DILocation(line: 1195, column: 67, scope: !2379)
!2386 = !DILocalVariable(name: "bmdm", scope: !2379, file: !1, line: 1197, type: !1700)
!2387 = !DILocation(line: 1197, column: 20, scope: !2379)
!2388 = !DILocation(line: 1197, column: 47, scope: !2379)
!2389 = !DILocation(line: 1197, column: 27, scope: !2379)
!2390 = !DILocalVariable(name: "bm", scope: !2379, file: !1, line: 1198, type: !1847)
!2391 = !DILocation(line: 1198, column: 9, scope: !2379)
!2392 = !DILocation(line: 1198, column: 14, scope: !2379)
!2393 = !DILocation(line: 1198, column: 20, scope: !2379)
!2394 = !DILocation(line: 1198, column: 24, scope: !2379)
!2395 = !DILocalVariable(name: "eve", scope: !2379, file: !1, line: 1199, type: !1730)
!2396 = !DILocation(line: 1199, column: 10, scope: !2379)
!2397 = !DILocalVariable(name: "iter", scope: !2379, file: !1, line: 1200, type: !2184)
!2398 = !DILocation(line: 1200, column: 9, scope: !2379)
!2399 = !DILocalVariable(name: "i", scope: !2379, file: !1, line: 1201, type: !168)
!2400 = !DILocation(line: 1201, column: 6, scope: !2379)
!2401 = !DILocation(line: 1203, column: 6, scope: !2402)
!2402 = distinct !DILexicalBlock(scope: !2379, file: !1, line: 1203, column: 6)
!2403 = !DILocation(line: 1203, column: 10, scope: !2402)
!2404 = !DILocation(line: 1203, column: 6, scope: !2379)
!2405 = !DILocation(line: 1204, column: 7, scope: !2406)
!2406 = distinct !DILexicalBlock(scope: !2407, file: !1, line: 1204, column: 7)
!2407 = distinct !DILexicalBlock(scope: !2402, file: !1, line: 1203, column: 19)
!2408 = !DILocation(line: 1204, column: 13, scope: !2406)
!2409 = !DILocation(line: 1204, column: 7, scope: !2407)
!2410 = !DILocation(line: 1205, column: 4, scope: !2411)
!2411 = distinct !DILexicalBlock(scope: !2412, file: !1, line: 1205, column: 4)
!2412 = distinct !DILexicalBlock(scope: !2406, file: !1, line: 1204, column: 24)
!2413 = !DILocation(line: 1205, column: 4, scope: !2414)
!2414 = distinct !DILexicalBlock(scope: !2411, file: !1, line: 1205, column: 4)
!2415 = !DILocation(line: 1206, column: 20, scope: !2416)
!2416 = distinct !DILexicalBlock(scope: !2414, file: !1, line: 1205, column: 61)
!2417 = !DILocation(line: 1206, column: 27, scope: !2416)
!2418 = !DILocation(line: 1206, column: 34, scope: !2416)
!2419 = !DILocation(line: 1206, column: 40, scope: !2416)
!2420 = !DILocation(line: 1206, column: 50, scope: !2416)
!2421 = !DILocation(line: 1206, column: 5, scope: !2416)
!2422 = !DILocation(line: 1207, column: 4, scope: !2416)
!2423 = distinct !{!2423, !2410, !2424}
!2424 = !DILocation(line: 1207, column: 4, scope: !2411)
!2425 = !DILocation(line: 1208, column: 3, scope: !2412)
!2426 = !DILocation(line: 1210, column: 4, scope: !2427)
!2427 = distinct !DILexicalBlock(scope: !2428, file: !1, line: 1210, column: 4)
!2428 = distinct !DILexicalBlock(scope: !2406, file: !1, line: 1209, column: 8)
!2429 = !DILocation(line: 1210, column: 4, scope: !2430)
!2430 = distinct !DILexicalBlock(scope: !2427, file: !1, line: 1210, column: 4)
!2431 = !DILocation(line: 1211, column: 20, scope: !2432)
!2432 = distinct !DILexicalBlock(scope: !2430, file: !1, line: 1210, column: 52)
!2433 = !DILocation(line: 1211, column: 27, scope: !2432)
!2434 = !DILocation(line: 1211, column: 34, scope: !2432)
!2435 = !DILocation(line: 1211, column: 39, scope: !2432)
!2436 = !DILocation(line: 1211, column: 5, scope: !2432)
!2437 = !DILocation(line: 1212, column: 4, scope: !2432)
!2438 = distinct !{!2438, !2426, !2439}
!2439 = !DILocation(line: 1212, column: 4, scope: !2427)
!2440 = !DILocation(line: 1214, column: 2, scope: !2407)
!2441 = !DILocation(line: 1216, column: 11, scope: !2442)
!2442 = distinct !DILexicalBlock(scope: !2402, file: !1, line: 1215, column: 7)
!2443 = !DILocation(line: 1216, column: 3, scope: !2442)
!2444 = !DILocation(line: 1217, column: 11, scope: !2442)
!2445 = !DILocation(line: 1217, column: 3, scope: !2442)
!2446 = !DILocation(line: 1219, column: 1, scope: !2379)
!2447 = distinct !DISubprogram(name: "bmDm_getVertDataLayout", scope: !1, file: !1, line: 1675, type: !369, scopeLine: 1676, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1952)
!2448 = !DILocalVariable(name: "dm", arg: 1, scope: !2447, file: !1, line: 1675, type: !154)
!2449 = !DILocation(line: 1675, column: 56, scope: !2447)
!2450 = !DILocalVariable(name: "bmdm", scope: !2447, file: !1, line: 1677, type: !1700)
!2451 = !DILocation(line: 1677, column: 20, scope: !2447)
!2452 = !DILocation(line: 1677, column: 47, scope: !2447)
!2453 = !DILocation(line: 1677, column: 27, scope: !2447)
!2454 = !DILocation(line: 1679, column: 10, scope: !2447)
!2455 = !DILocation(line: 1679, column: 16, scope: !2447)
!2456 = !DILocation(line: 1679, column: 20, scope: !2447)
!2457 = !DILocation(line: 1679, column: 24, scope: !2447)
!2458 = !DILocation(line: 1679, column: 2, scope: !2447)
!2459 = distinct !DISubprogram(name: "bmDm_getEdgeDataLayout", scope: !1, file: !1, line: 1682, type: !369, scopeLine: 1683, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1952)
!2460 = !DILocalVariable(name: "dm", arg: 1, scope: !2459, file: !1, line: 1682, type: !154)
!2461 = !DILocation(line: 1682, column: 56, scope: !2459)
!2462 = !DILocalVariable(name: "bmdm", scope: !2459, file: !1, line: 1684, type: !1700)
!2463 = !DILocation(line: 1684, column: 20, scope: !2459)
!2464 = !DILocation(line: 1684, column: 47, scope: !2459)
!2465 = !DILocation(line: 1684, column: 27, scope: !2459)
!2466 = !DILocation(line: 1686, column: 10, scope: !2459)
!2467 = !DILocation(line: 1686, column: 16, scope: !2459)
!2468 = !DILocation(line: 1686, column: 20, scope: !2459)
!2469 = !DILocation(line: 1686, column: 24, scope: !2459)
!2470 = !DILocation(line: 1686, column: 2, scope: !2459)
!2471 = distinct !DISubprogram(name: "bmDm_getTessFaceDataLayout", scope: !1, file: !1, line: 1689, type: !369, scopeLine: 1690, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1952)
!2472 = !DILocalVariable(name: "dm", arg: 1, scope: !2471, file: !1, line: 1689, type: !154)
!2473 = !DILocation(line: 1689, column: 60, scope: !2471)
!2474 = !DILocalVariable(name: "bmdm", scope: !2471, file: !1, line: 1691, type: !1700)
!2475 = !DILocation(line: 1691, column: 20, scope: !2471)
!2476 = !DILocation(line: 1691, column: 47, scope: !2471)
!2477 = !DILocation(line: 1691, column: 27, scope: !2471)
!2478 = !DILocation(line: 1693, column: 10, scope: !2471)
!2479 = !DILocation(line: 1693, column: 16, scope: !2471)
!2480 = !DILocation(line: 1693, column: 19, scope: !2471)
!2481 = !DILocation(line: 1693, column: 2, scope: !2471)
!2482 = distinct !DISubprogram(name: "bmDm_getLoopDataLayout", scope: !1, file: !1, line: 1696, type: !369, scopeLine: 1697, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1952)
!2483 = !DILocalVariable(name: "dm", arg: 1, scope: !2482, file: !1, line: 1696, type: !154)
!2484 = !DILocation(line: 1696, column: 56, scope: !2482)
!2485 = !DILocalVariable(name: "bmdm", scope: !2482, file: !1, line: 1698, type: !1700)
!2486 = !DILocation(line: 1698, column: 20, scope: !2482)
!2487 = !DILocation(line: 1698, column: 47, scope: !2482)
!2488 = !DILocation(line: 1698, column: 27, scope: !2482)
!2489 = !DILocation(line: 1700, column: 10, scope: !2482)
!2490 = !DILocation(line: 1700, column: 16, scope: !2482)
!2491 = !DILocation(line: 1700, column: 20, scope: !2482)
!2492 = !DILocation(line: 1700, column: 24, scope: !2482)
!2493 = !DILocation(line: 1700, column: 2, scope: !2482)
!2494 = distinct !DISubprogram(name: "bmDm_getPolyDataLayout", scope: !1, file: !1, line: 1703, type: !369, scopeLine: 1704, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1952)
!2495 = !DILocalVariable(name: "dm", arg: 1, scope: !2494, file: !1, line: 1703, type: !154)
!2496 = !DILocation(line: 1703, column: 56, scope: !2494)
!2497 = !DILocalVariable(name: "bmdm", scope: !2494, file: !1, line: 1705, type: !1700)
!2498 = !DILocation(line: 1705, column: 20, scope: !2494)
!2499 = !DILocation(line: 1705, column: 47, scope: !2494)
!2500 = !DILocation(line: 1705, column: 27, scope: !2494)
!2501 = !DILocation(line: 1707, column: 10, scope: !2494)
!2502 = !DILocation(line: 1707, column: 16, scope: !2494)
!2503 = !DILocation(line: 1707, column: 20, scope: !2494)
!2504 = !DILocation(line: 1707, column: 24, scope: !2494)
!2505 = !DILocation(line: 1707, column: 2, scope: !2494)
!2506 = distinct !DISubprogram(name: "emDM_getNumVerts", scope: !1, file: !1, line: 1220, type: !245, scopeLine: 1221, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1952)
!2507 = !DILocalVariable(name: "dm", arg: 1, scope: !2506, file: !1, line: 1220, type: !154)
!2508 = !DILocation(line: 1220, column: 42, scope: !2506)
!2509 = !DILocalVariable(name: "bmdm", scope: !2506, file: !1, line: 1222, type: !1700)
!2510 = !DILocation(line: 1222, column: 20, scope: !2506)
!2511 = !DILocation(line: 1222, column: 47, scope: !2506)
!2512 = !DILocation(line: 1222, column: 27, scope: !2506)
!2513 = !DILocation(line: 1224, column: 9, scope: !2506)
!2514 = !DILocation(line: 1224, column: 15, scope: !2506)
!2515 = !DILocation(line: 1224, column: 19, scope: !2506)
!2516 = !DILocation(line: 1224, column: 23, scope: !2506)
!2517 = !DILocation(line: 1224, column: 2, scope: !2506)
!2518 = distinct !DISubprogram(name: "emDM_getNumEdges", scope: !1, file: !1, line: 1227, type: !245, scopeLine: 1228, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1952)
!2519 = !DILocalVariable(name: "dm", arg: 1, scope: !2518, file: !1, line: 1227, type: !154)
!2520 = !DILocation(line: 1227, column: 42, scope: !2518)
!2521 = !DILocalVariable(name: "bmdm", scope: !2518, file: !1, line: 1229, type: !1700)
!2522 = !DILocation(line: 1229, column: 20, scope: !2518)
!2523 = !DILocation(line: 1229, column: 47, scope: !2518)
!2524 = !DILocation(line: 1229, column: 27, scope: !2518)
!2525 = !DILocation(line: 1231, column: 9, scope: !2518)
!2526 = !DILocation(line: 1231, column: 15, scope: !2518)
!2527 = !DILocation(line: 1231, column: 19, scope: !2518)
!2528 = !DILocation(line: 1231, column: 23, scope: !2518)
!2529 = !DILocation(line: 1231, column: 2, scope: !2518)
!2530 = distinct !DISubprogram(name: "emDM_getNumTessFaces", scope: !1, file: !1, line: 1234, type: !245, scopeLine: 1235, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1952)
!2531 = !DILocalVariable(name: "dm", arg: 1, scope: !2530, file: !1, line: 1234, type: !154)
!2532 = !DILocation(line: 1234, column: 46, scope: !2530)
!2533 = !DILocalVariable(name: "bmdm", scope: !2530, file: !1, line: 1236, type: !1700)
!2534 = !DILocation(line: 1236, column: 20, scope: !2530)
!2535 = !DILocation(line: 1236, column: 47, scope: !2530)
!2536 = !DILocation(line: 1236, column: 27, scope: !2530)
!2537 = !DILocation(line: 1238, column: 9, scope: !2530)
!2538 = !DILocation(line: 1238, column: 15, scope: !2530)
!2539 = !DILocation(line: 1238, column: 19, scope: !2530)
!2540 = !DILocation(line: 1238, column: 2, scope: !2530)
!2541 = distinct !DISubprogram(name: "emDM_getNumLoops", scope: !1, file: !1, line: 1241, type: !245, scopeLine: 1242, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1952)
!2542 = !DILocalVariable(name: "dm", arg: 1, scope: !2541, file: !1, line: 1241, type: !154)
!2543 = !DILocation(line: 1241, column: 42, scope: !2541)
!2544 = !DILocalVariable(name: "bmdm", scope: !2541, file: !1, line: 1243, type: !1700)
!2545 = !DILocation(line: 1243, column: 20, scope: !2541)
!2546 = !DILocation(line: 1243, column: 47, scope: !2541)
!2547 = !DILocation(line: 1243, column: 27, scope: !2541)
!2548 = !DILocation(line: 1245, column: 9, scope: !2541)
!2549 = !DILocation(line: 1245, column: 15, scope: !2541)
!2550 = !DILocation(line: 1245, column: 19, scope: !2541)
!2551 = !DILocation(line: 1245, column: 23, scope: !2541)
!2552 = !DILocation(line: 1245, column: 2, scope: !2541)
!2553 = distinct !DISubprogram(name: "emDM_getNumPolys", scope: !1, file: !1, line: 1248, type: !245, scopeLine: 1249, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1952)
!2554 = !DILocalVariable(name: "dm", arg: 1, scope: !2553, file: !1, line: 1248, type: !154)
!2555 = !DILocation(line: 1248, column: 42, scope: !2553)
!2556 = !DILocalVariable(name: "bmdm", scope: !2553, file: !1, line: 1250, type: !1700)
!2557 = !DILocation(line: 1250, column: 20, scope: !2553)
!2558 = !DILocation(line: 1250, column: 47, scope: !2553)
!2559 = !DILocation(line: 1250, column: 27, scope: !2553)
!2560 = !DILocation(line: 1252, column: 9, scope: !2553)
!2561 = !DILocation(line: 1252, column: 15, scope: !2553)
!2562 = !DILocation(line: 1252, column: 19, scope: !2553)
!2563 = !DILocation(line: 1252, column: 23, scope: !2553)
!2564 = !DILocation(line: 1252, column: 2, scope: !2553)
!2565 = distinct !DISubprogram(name: "emDM_getVert", scope: !1, file: !1, line: 1270, type: !2566, scopeLine: 1271, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1952)
!2566 = !DISubroutineType(types: !2567)
!2567 = !{null, !154, !168, !2568}
!2568 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2569, size: 64)
!2569 = !DIDerivedType(tag: DW_TAG_typedef, name: "MVert", file: !257, line: 69, baseType: !256)
!2570 = !DILocalVariable(name: "dm", arg: 1, scope: !2565, file: !1, line: 1270, type: !154)
!2571 = !DILocation(line: 1270, column: 39, scope: !2565)
!2572 = !DILocalVariable(name: "index", arg: 2, scope: !2565, file: !1, line: 1270, type: !168)
!2573 = !DILocation(line: 1270, column: 47, scope: !2565)
!2574 = !DILocalVariable(name: "r_vert", arg: 3, scope: !2565, file: !1, line: 1270, type: !2568)
!2575 = !DILocation(line: 1270, column: 61, scope: !2565)
!2576 = !DILocalVariable(name: "bmdm", scope: !2565, file: !1, line: 1272, type: !1700)
!2577 = !DILocation(line: 1272, column: 20, scope: !2565)
!2578 = !DILocation(line: 1272, column: 47, scope: !2565)
!2579 = !DILocation(line: 1272, column: 27, scope: !2565)
!2580 = !DILocalVariable(name: "bm", scope: !2565, file: !1, line: 1273, type: !1847)
!2581 = !DILocation(line: 1273, column: 9, scope: !2565)
!2582 = !DILocation(line: 1273, column: 14, scope: !2565)
!2583 = !DILocation(line: 1273, column: 20, scope: !2565)
!2584 = !DILocation(line: 1273, column: 24, scope: !2565)
!2585 = !DILocalVariable(name: "ev", scope: !2565, file: !1, line: 1274, type: !1730)
!2586 = !DILocation(line: 1274, column: 10, scope: !2565)
!2587 = !DILocation(line: 1276, column: 6, scope: !2588)
!2588 = distinct !DILexicalBlock(scope: !2565, file: !1, line: 1276, column: 6)
!2589 = !DILocation(line: 1276, column: 6, scope: !2565)
!2590 = !DILocation(line: 1278, column: 3, scope: !2591)
!2591 = distinct !DILexicalBlock(scope: !2588, file: !1, line: 1276, column: 51)
!2592 = !DILocation(line: 1282, column: 7, scope: !2565)
!2593 = !DILocation(line: 1282, column: 11, scope: !2565)
!2594 = !DILocation(line: 1282, column: 18, scope: !2565)
!2595 = !DILocation(line: 1282, column: 5, scope: !2565)
!2596 = !DILocation(line: 1285, column: 18, scope: !2565)
!2597 = !DILocation(line: 1285, column: 22, scope: !2565)
!2598 = !DILocation(line: 1285, column: 26, scope: !2565)
!2599 = !DILocation(line: 1285, column: 2, scope: !2565)
!2600 = !DILocation(line: 1286, column: 6, scope: !2601)
!2601 = distinct !DILexicalBlock(scope: !2565, file: !1, line: 1286, column: 6)
!2602 = !DILocation(line: 1286, column: 12, scope: !2601)
!2603 = !DILocation(line: 1286, column: 6, scope: !2565)
!2604 = !DILocation(line: 1287, column: 14, scope: !2601)
!2605 = !DILocation(line: 1287, column: 22, scope: !2601)
!2606 = !DILocation(line: 1287, column: 26, scope: !2601)
!2607 = !DILocation(line: 1287, column: 32, scope: !2601)
!2608 = !DILocation(line: 1287, column: 42, scope: !2601)
!2609 = !DILocation(line: 1287, column: 3, scope: !2601)
!2610 = !DILocation(line: 1288, column: 1, scope: !2565)
!2611 = distinct !DISubprogram(name: "emDM_getVertCo", scope: !1, file: !1, line: 1290, type: !467, scopeLine: 1291, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1952)
!2612 = !DILocalVariable(name: "dm", arg: 1, scope: !2611, file: !1, line: 1290, type: !154)
!2613 = !DILocation(line: 1290, column: 41, scope: !2611)
!2614 = !DILocalVariable(name: "index", arg: 2, scope: !2611, file: !1, line: 1290, type: !168)
!2615 = !DILocation(line: 1290, column: 49, scope: !2611)
!2616 = !DILocalVariable(name: "r_co", arg: 3, scope: !2611, file: !1, line: 1290, type: !464)
!2617 = !DILocation(line: 1290, column: 62, scope: !2611)
!2618 = !DILocalVariable(name: "bmdm", scope: !2611, file: !1, line: 1292, type: !1700)
!2619 = !DILocation(line: 1292, column: 20, scope: !2611)
!2620 = !DILocation(line: 1292, column: 47, scope: !2611)
!2621 = !DILocation(line: 1292, column: 27, scope: !2611)
!2622 = !DILocalVariable(name: "bm", scope: !2611, file: !1, line: 1293, type: !1847)
!2623 = !DILocation(line: 1293, column: 9, scope: !2611)
!2624 = !DILocation(line: 1293, column: 14, scope: !2611)
!2625 = !DILocation(line: 1293, column: 20, scope: !2611)
!2626 = !DILocation(line: 1293, column: 24, scope: !2611)
!2627 = !DILocation(line: 1295, column: 6, scope: !2628)
!2628 = distinct !DILexicalBlock(scope: !2611, file: !1, line: 1295, column: 6)
!2629 = !DILocation(line: 1295, column: 6, scope: !2611)
!2630 = !DILocation(line: 1297, column: 3, scope: !2631)
!2631 = distinct !DILexicalBlock(scope: !2628, file: !1, line: 1295, column: 51)
!2632 = !DILocation(line: 1300, column: 6, scope: !2633)
!2633 = distinct !DILexicalBlock(scope: !2611, file: !1, line: 1300, column: 6)
!2634 = !DILocation(line: 1300, column: 12, scope: !2633)
!2635 = !DILocation(line: 1300, column: 6, scope: !2611)
!2636 = !DILocation(line: 1301, column: 14, scope: !2637)
!2637 = distinct !DILexicalBlock(scope: !2633, file: !1, line: 1300, column: 23)
!2638 = !DILocation(line: 1301, column: 20, scope: !2637)
!2639 = !DILocation(line: 1301, column: 26, scope: !2637)
!2640 = !DILocation(line: 1301, column: 36, scope: !2637)
!2641 = !DILocation(line: 1301, column: 3, scope: !2637)
!2642 = !DILocation(line: 1302, column: 2, scope: !2637)
!2643 = !DILocalVariable(name: "ev", scope: !2644, file: !1, line: 1304, type: !1730)
!2644 = distinct !DILexicalBlock(scope: !2633, file: !1, line: 1303, column: 7)
!2645 = !DILocation(line: 1304, column: 11, scope: !2644)
!2646 = !DILocation(line: 1307, column: 8, scope: !2644)
!2647 = !DILocation(line: 1307, column: 12, scope: !2644)
!2648 = !DILocation(line: 1307, column: 19, scope: !2644)
!2649 = !DILocation(line: 1307, column: 6, scope: !2644)
!2650 = !DILocation(line: 1309, column: 14, scope: !2644)
!2651 = !DILocation(line: 1309, column: 20, scope: !2644)
!2652 = !DILocation(line: 1309, column: 24, scope: !2644)
!2653 = !DILocation(line: 1309, column: 3, scope: !2644)
!2654 = !DILocation(line: 1311, column: 1, scope: !2611)
!2655 = distinct !DISubprogram(name: "emDM_getVertNo", scope: !1, file: !1, line: 1313, type: !467, scopeLine: 1314, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1952)
!2656 = !DILocalVariable(name: "dm", arg: 1, scope: !2655, file: !1, line: 1313, type: !154)
!2657 = !DILocation(line: 1313, column: 41, scope: !2655)
!2658 = !DILocalVariable(name: "index", arg: 2, scope: !2655, file: !1, line: 1313, type: !168)
!2659 = !DILocation(line: 1313, column: 49, scope: !2655)
!2660 = !DILocalVariable(name: "r_no", arg: 3, scope: !2655, file: !1, line: 1313, type: !464)
!2661 = !DILocation(line: 1313, column: 62, scope: !2655)
!2662 = !DILocalVariable(name: "bmdm", scope: !2655, file: !1, line: 1315, type: !1700)
!2663 = !DILocation(line: 1315, column: 20, scope: !2655)
!2664 = !DILocation(line: 1315, column: 47, scope: !2655)
!2665 = !DILocation(line: 1315, column: 27, scope: !2655)
!2666 = !DILocalVariable(name: "bm", scope: !2655, file: !1, line: 1316, type: !1847)
!2667 = !DILocation(line: 1316, column: 9, scope: !2655)
!2668 = !DILocation(line: 1316, column: 14, scope: !2655)
!2669 = !DILocation(line: 1316, column: 20, scope: !2655)
!2670 = !DILocation(line: 1316, column: 24, scope: !2655)
!2671 = !DILocation(line: 1318, column: 6, scope: !2672)
!2672 = distinct !DILexicalBlock(scope: !2655, file: !1, line: 1318, column: 6)
!2673 = !DILocation(line: 1318, column: 6, scope: !2655)
!2674 = !DILocation(line: 1320, column: 3, scope: !2675)
!2675 = distinct !DILexicalBlock(scope: !2672, file: !1, line: 1318, column: 51)
!2676 = !DILocation(line: 1324, column: 6, scope: !2677)
!2677 = distinct !DILexicalBlock(scope: !2655, file: !1, line: 1324, column: 6)
!2678 = !DILocation(line: 1324, column: 12, scope: !2677)
!2679 = !DILocation(line: 1324, column: 6, scope: !2655)
!2680 = !DILocation(line: 1325, column: 26, scope: !2681)
!2681 = distinct !DILexicalBlock(scope: !2677, file: !1, line: 1324, column: 23)
!2682 = !DILocation(line: 1325, column: 3, scope: !2681)
!2683 = !DILocation(line: 1326, column: 14, scope: !2681)
!2684 = !DILocation(line: 1326, column: 20, scope: !2681)
!2685 = !DILocation(line: 1326, column: 26, scope: !2681)
!2686 = !DILocation(line: 1326, column: 36, scope: !2681)
!2687 = !DILocation(line: 1326, column: 3, scope: !2681)
!2688 = !DILocation(line: 1327, column: 2, scope: !2681)
!2689 = !DILocalVariable(name: "ev", scope: !2690, file: !1, line: 1329, type: !1730)
!2690 = distinct !DILexicalBlock(scope: !2677, file: !1, line: 1328, column: 7)
!2691 = !DILocation(line: 1329, column: 11, scope: !2690)
!2692 = !DILocation(line: 1332, column: 8, scope: !2690)
!2693 = !DILocation(line: 1332, column: 12, scope: !2690)
!2694 = !DILocation(line: 1332, column: 19, scope: !2690)
!2695 = !DILocation(line: 1332, column: 6, scope: !2690)
!2696 = !DILocation(line: 1334, column: 14, scope: !2690)
!2697 = !DILocation(line: 1334, column: 20, scope: !2690)
!2698 = !DILocation(line: 1334, column: 24, scope: !2690)
!2699 = !DILocation(line: 1334, column: 3, scope: !2690)
!2700 = !DILocation(line: 1336, column: 1, scope: !2655)
!2701 = distinct !DISubprogram(name: "emDM_getPolyNo", scope: !1, file: !1, line: 1338, type: !467, scopeLine: 1339, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1952)
!2702 = !DILocalVariable(name: "dm", arg: 1, scope: !2701, file: !1, line: 1338, type: !154)
!2703 = !DILocation(line: 1338, column: 41, scope: !2701)
!2704 = !DILocalVariable(name: "index", arg: 2, scope: !2701, file: !1, line: 1338, type: !168)
!2705 = !DILocation(line: 1338, column: 49, scope: !2701)
!2706 = !DILocalVariable(name: "r_no", arg: 3, scope: !2701, file: !1, line: 1338, type: !464)
!2707 = !DILocation(line: 1338, column: 62, scope: !2701)
!2708 = !DILocalVariable(name: "bmdm", scope: !2701, file: !1, line: 1340, type: !1700)
!2709 = !DILocation(line: 1340, column: 20, scope: !2701)
!2710 = !DILocation(line: 1340, column: 47, scope: !2701)
!2711 = !DILocation(line: 1340, column: 27, scope: !2701)
!2712 = !DILocalVariable(name: "bm", scope: !2701, file: !1, line: 1341, type: !1847)
!2713 = !DILocation(line: 1341, column: 9, scope: !2701)
!2714 = !DILocation(line: 1341, column: 14, scope: !2701)
!2715 = !DILocation(line: 1341, column: 20, scope: !2701)
!2716 = !DILocation(line: 1341, column: 24, scope: !2701)
!2717 = !DILocation(line: 1343, column: 6, scope: !2718)
!2718 = distinct !DILexicalBlock(scope: !2701, file: !1, line: 1343, column: 6)
!2719 = !DILocation(line: 1343, column: 6, scope: !2701)
!2720 = !DILocation(line: 1345, column: 3, scope: !2721)
!2721 = distinct !DILexicalBlock(scope: !2718, file: !1, line: 1343, column: 51)
!2722 = !DILocation(line: 1348, column: 6, scope: !2723)
!2723 = distinct !DILexicalBlock(scope: !2701, file: !1, line: 1348, column: 6)
!2724 = !DILocation(line: 1348, column: 12, scope: !2723)
!2725 = !DILocation(line: 1348, column: 6, scope: !2701)
!2726 = !DILocation(line: 1349, column: 26, scope: !2727)
!2727 = distinct !DILexicalBlock(scope: !2723, file: !1, line: 1348, column: 23)
!2728 = !DILocation(line: 1349, column: 3, scope: !2727)
!2729 = !DILocation(line: 1350, column: 14, scope: !2727)
!2730 = !DILocation(line: 1350, column: 20, scope: !2727)
!2731 = !DILocation(line: 1350, column: 26, scope: !2727)
!2732 = !DILocation(line: 1350, column: 34, scope: !2727)
!2733 = !DILocation(line: 1350, column: 3, scope: !2727)
!2734 = !DILocation(line: 1351, column: 2, scope: !2727)
!2735 = !DILocalVariable(name: "efa", scope: !2736, file: !1, line: 1353, type: !1795)
!2736 = distinct !DILexicalBlock(scope: !2723, file: !1, line: 1352, column: 7)
!2737 = !DILocation(line: 1353, column: 11, scope: !2736)
!2738 = !DILocation(line: 1356, column: 9, scope: !2736)
!2739 = !DILocation(line: 1356, column: 13, scope: !2736)
!2740 = !DILocation(line: 1356, column: 20, scope: !2736)
!2741 = !DILocation(line: 1356, column: 7, scope: !2736)
!2742 = !DILocation(line: 1358, column: 14, scope: !2736)
!2743 = !DILocation(line: 1358, column: 20, scope: !2736)
!2744 = !DILocation(line: 1358, column: 25, scope: !2736)
!2745 = !DILocation(line: 1358, column: 3, scope: !2736)
!2746 = !DILocation(line: 1360, column: 1, scope: !2701)
!2747 = distinct !DISubprogram(name: "emDM_getEdge", scope: !1, file: !1, line: 1362, type: !2748, scopeLine: 1363, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1952)
!2748 = !DISubroutineType(types: !2749)
!2749 = !{null, !154, !168, !2750}
!2750 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2751, size: 64)
!2751 = !DIDerivedType(tag: DW_TAG_typedef, name: "MEdge", file: !257, line: 52, baseType: !273)
!2752 = !DILocalVariable(name: "dm", arg: 1, scope: !2747, file: !1, line: 1362, type: !154)
!2753 = !DILocation(line: 1362, column: 39, scope: !2747)
!2754 = !DILocalVariable(name: "index", arg: 2, scope: !2747, file: !1, line: 1362, type: !168)
!2755 = !DILocation(line: 1362, column: 47, scope: !2747)
!2756 = !DILocalVariable(name: "r_edge", arg: 3, scope: !2747, file: !1, line: 1362, type: !2750)
!2757 = !DILocation(line: 1362, column: 61, scope: !2747)
!2758 = !DILocalVariable(name: "bmdm", scope: !2747, file: !1, line: 1364, type: !1700)
!2759 = !DILocation(line: 1364, column: 20, scope: !2747)
!2760 = !DILocation(line: 1364, column: 47, scope: !2747)
!2761 = !DILocation(line: 1364, column: 27, scope: !2747)
!2762 = !DILocalVariable(name: "bm", scope: !2747, file: !1, line: 1365, type: !1847)
!2763 = !DILocation(line: 1365, column: 9, scope: !2747)
!2764 = !DILocation(line: 1365, column: 14, scope: !2747)
!2765 = !DILocation(line: 1365, column: 20, scope: !2747)
!2766 = !DILocation(line: 1365, column: 24, scope: !2747)
!2767 = !DILocalVariable(name: "e", scope: !2747, file: !1, line: 1366, type: !1791)
!2768 = !DILocation(line: 1366, column: 10, scope: !2747)
!2769 = !DILocalVariable(name: "f", scope: !2747, file: !1, line: 1367, type: !438)
!2770 = !DILocation(line: 1367, column: 15, scope: !2747)
!2771 = !DILocation(line: 1369, column: 6, scope: !2772)
!2772 = distinct !DILexicalBlock(scope: !2747, file: !1, line: 1369, column: 6)
!2773 = !DILocation(line: 1369, column: 6, scope: !2747)
!2774 = !DILocation(line: 1371, column: 3, scope: !2775)
!2775 = distinct !DILexicalBlock(scope: !2772, file: !1, line: 1369, column: 51)
!2776 = !DILocation(line: 1375, column: 6, scope: !2747)
!2777 = !DILocation(line: 1375, column: 10, scope: !2747)
!2778 = !DILocation(line: 1375, column: 17, scope: !2747)
!2779 = !DILocation(line: 1375, column: 4, scope: !2747)
!2780 = !DILocation(line: 1378, column: 39, scope: !2747)
!2781 = !DILocation(line: 1378, column: 17, scope: !2747)
!2782 = !DILocation(line: 1378, column: 2, scope: !2747)
!2783 = !DILocation(line: 1378, column: 10, scope: !2747)
!2784 = !DILocation(line: 1378, column: 15, scope: !2747)
!2785 = !DILocation(line: 1380, column: 15, scope: !2747)
!2786 = !DILocation(line: 1380, column: 2, scope: !2747)
!2787 = !DILocation(line: 1380, column: 10, scope: !2747)
!2788 = !DILocation(line: 1380, column: 13, scope: !2747)
!2789 = !DILocation(line: 1381, column: 15, scope: !2747)
!2790 = !DILocation(line: 1381, column: 2, scope: !2747)
!2791 = !DILocation(line: 1381, column: 10, scope: !2747)
!2792 = !DILocation(line: 1381, column: 13, scope: !2747)
!2793 = !DILocation(line: 1383, column: 33, scope: !2794)
!2794 = distinct !DILexicalBlock(scope: !2747, file: !1, line: 1383, column: 6)
!2795 = !DILocation(line: 1383, column: 37, scope: !2794)
!2796 = !DILocation(line: 1383, column: 44, scope: !2794)
!2797 = !DILocation(line: 1383, column: 47, scope: !2794)
!2798 = !DILocation(line: 1383, column: 52, scope: !2794)
!2799 = !DILocation(line: 1383, column: 11, scope: !2794)
!2800 = !DILocation(line: 1383, column: 9, scope: !2794)
!2801 = !DILocation(line: 1383, column: 6, scope: !2747)
!2802 = !DILocation(line: 1384, column: 39, scope: !2803)
!2803 = distinct !DILexicalBlock(scope: !2794, file: !1, line: 1383, column: 72)
!2804 = !DILocation(line: 1384, column: 38, scope: !2803)
!2805 = !DILocation(line: 1384, column: 42, scope: !2803)
!2806 = !DILocation(line: 1384, column: 21, scope: !2803)
!2807 = !DILocation(line: 1384, column: 3, scope: !2803)
!2808 = !DILocation(line: 1384, column: 11, scope: !2803)
!2809 = !DILocation(line: 1384, column: 19, scope: !2803)
!2810 = !DILocation(line: 1385, column: 2, scope: !2803)
!2811 = !DILocation(line: 1386, column: 33, scope: !2812)
!2812 = distinct !DILexicalBlock(scope: !2747, file: !1, line: 1386, column: 6)
!2813 = !DILocation(line: 1386, column: 37, scope: !2812)
!2814 = !DILocation(line: 1386, column: 44, scope: !2812)
!2815 = !DILocation(line: 1386, column: 47, scope: !2812)
!2816 = !DILocation(line: 1386, column: 52, scope: !2812)
!2817 = !DILocation(line: 1386, column: 11, scope: !2812)
!2818 = !DILocation(line: 1386, column: 9, scope: !2812)
!2819 = !DILocation(line: 1386, column: 6, scope: !2747)
!2820 = !DILocation(line: 1387, column: 38, scope: !2821)
!2821 = distinct !DILexicalBlock(scope: !2812, file: !1, line: 1386, column: 71)
!2822 = !DILocation(line: 1387, column: 37, scope: !2821)
!2823 = !DILocation(line: 1387, column: 41, scope: !2821)
!2824 = !DILocation(line: 1387, column: 20, scope: !2821)
!2825 = !DILocation(line: 1387, column: 3, scope: !2821)
!2826 = !DILocation(line: 1387, column: 11, scope: !2821)
!2827 = !DILocation(line: 1387, column: 18, scope: !2821)
!2828 = !DILocation(line: 1388, column: 2, scope: !2821)
!2829 = !DILocation(line: 1389, column: 1, scope: !2747)
!2830 = distinct !DISubprogram(name: "emDM_getTessFace", scope: !1, file: !1, line: 1391, type: !2831, scopeLine: 1392, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1952)
!2831 = !DISubroutineType(types: !2832)
!2832 = !{null, !154, !168, !2833}
!2833 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2834, size: 64)
!2834 = !DIDerivedType(tag: DW_TAG_typedef, name: "MFace", file: !257, line: 46, baseType: !285)
!2835 = !DILocalVariable(name: "dm", arg: 1, scope: !2830, file: !1, line: 1391, type: !154)
!2836 = !DILocation(line: 1391, column: 43, scope: !2830)
!2837 = !DILocalVariable(name: "index", arg: 2, scope: !2830, file: !1, line: 1391, type: !168)
!2838 = !DILocation(line: 1391, column: 51, scope: !2830)
!2839 = !DILocalVariable(name: "r_face", arg: 3, scope: !2830, file: !1, line: 1391, type: !2833)
!2840 = !DILocation(line: 1391, column: 65, scope: !2830)
!2841 = !DILocalVariable(name: "bmdm", scope: !2830, file: !1, line: 1393, type: !1700)
!2842 = !DILocation(line: 1393, column: 20, scope: !2830)
!2843 = !DILocation(line: 1393, column: 47, scope: !2830)
!2844 = !DILocation(line: 1393, column: 27, scope: !2830)
!2845 = !DILocalVariable(name: "ef", scope: !2830, file: !1, line: 1394, type: !1795)
!2846 = !DILocation(line: 1394, column: 10, scope: !2830)
!2847 = !DILocalVariable(name: "ltri", scope: !2830, file: !1, line: 1395, type: !2848)
!2848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1773, size: 64)
!2849 = !DILocation(line: 1395, column: 11, scope: !2830)
!2850 = !DILocation(line: 1397, column: 6, scope: !2851)
!2851 = distinct !DILexicalBlock(scope: !2830, file: !1, line: 1397, column: 6)
!2852 = !DILocation(line: 1397, column: 6, scope: !2830)
!2853 = !DILocation(line: 1399, column: 3, scope: !2854)
!2854 = distinct !DILexicalBlock(scope: !2851, file: !1, line: 1397, column: 56)
!2855 = !DILocation(line: 1402, column: 9, scope: !2830)
!2856 = !DILocation(line: 1402, column: 15, scope: !2830)
!2857 = !DILocation(line: 1402, column: 19, scope: !2830)
!2858 = !DILocation(line: 1402, column: 28, scope: !2830)
!2859 = !DILocation(line: 1402, column: 7, scope: !2830)
!2860 = !DILocation(line: 1404, column: 7, scope: !2830)
!2861 = !DILocation(line: 1404, column: 16, scope: !2830)
!2862 = !DILocation(line: 1404, column: 5, scope: !2830)
!2863 = !DILocation(line: 1406, column: 35, scope: !2830)
!2864 = !DILocation(line: 1406, column: 39, scope: !2830)
!2865 = !DILocation(line: 1406, column: 19, scope: !2830)
!2866 = !DILocation(line: 1406, column: 2, scope: !2830)
!2867 = !DILocation(line: 1406, column: 10, scope: !2830)
!2868 = !DILocation(line: 1406, column: 17, scope: !2830)
!2869 = !DILocation(line: 1407, column: 39, scope: !2830)
!2870 = !DILocation(line: 1407, column: 17, scope: !2830)
!2871 = !DILocation(line: 1407, column: 2, scope: !2830)
!2872 = !DILocation(line: 1407, column: 10, scope: !2830)
!2873 = !DILocation(line: 1407, column: 15, scope: !2830)
!2874 = !DILocation(line: 1409, column: 15, scope: !2830)
!2875 = !DILocation(line: 1409, column: 2, scope: !2830)
!2876 = !DILocation(line: 1409, column: 10, scope: !2830)
!2877 = !DILocation(line: 1409, column: 13, scope: !2830)
!2878 = !DILocation(line: 1410, column: 15, scope: !2830)
!2879 = !DILocation(line: 1410, column: 2, scope: !2830)
!2880 = !DILocation(line: 1410, column: 10, scope: !2830)
!2881 = !DILocation(line: 1410, column: 13, scope: !2830)
!2882 = !DILocation(line: 1411, column: 15, scope: !2830)
!2883 = !DILocation(line: 1411, column: 2, scope: !2830)
!2884 = !DILocation(line: 1411, column: 10, scope: !2830)
!2885 = !DILocation(line: 1411, column: 13, scope: !2830)
!2886 = !DILocation(line: 1412, column: 2, scope: !2830)
!2887 = !DILocation(line: 1412, column: 10, scope: !2830)
!2888 = !DILocation(line: 1412, column: 13, scope: !2830)
!2889 = !DILocation(line: 1414, column: 18, scope: !2830)
!2890 = !DILocation(line: 1414, column: 2, scope: !2830)
!2891 = !DILocation(line: 1415, column: 1, scope: !2830)
!2892 = distinct !DISubprogram(name: "emDM_copyVertArray", scope: !1, file: !1, line: 1417, type: !2893, scopeLine: 1418, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1952)
!2893 = !DISubroutineType(types: !2894)
!2894 = !{null, !154, !2568}
!2895 = !DILocalVariable(name: "dm", arg: 1, scope: !2892, file: !1, line: 1417, type: !154)
!2896 = !DILocation(line: 1417, column: 45, scope: !2892)
!2897 = !DILocalVariable(name: "r_vert", arg: 2, scope: !2892, file: !1, line: 1417, type: !2568)
!2898 = !DILocation(line: 1417, column: 56, scope: !2892)
!2899 = !DILocalVariable(name: "bmdm", scope: !2892, file: !1, line: 1419, type: !1700)
!2900 = !DILocation(line: 1419, column: 20, scope: !2892)
!2901 = !DILocation(line: 1419, column: 47, scope: !2892)
!2902 = !DILocation(line: 1419, column: 27, scope: !2892)
!2903 = !DILocalVariable(name: "bm", scope: !2892, file: !1, line: 1420, type: !1847)
!2904 = !DILocation(line: 1420, column: 9, scope: !2892)
!2905 = !DILocation(line: 1420, column: 14, scope: !2892)
!2906 = !DILocation(line: 1420, column: 20, scope: !2892)
!2907 = !DILocation(line: 1420, column: 24, scope: !2892)
!2908 = !DILocalVariable(name: "eve", scope: !2892, file: !1, line: 1421, type: !1730)
!2909 = !DILocation(line: 1421, column: 10, scope: !2892)
!2910 = !DILocalVariable(name: "iter", scope: !2892, file: !1, line: 1422, type: !2184)
!2911 = !DILocation(line: 1422, column: 9, scope: !2892)
!2912 = !DILocalVariable(name: "cd_vert_bweight_offset", scope: !2892, file: !1, line: 1423, type: !1967)
!2913 = !DILocation(line: 1423, column: 12, scope: !2892)
!2914 = !DILocation(line: 1423, column: 60, scope: !2892)
!2915 = !DILocation(line: 1423, column: 64, scope: !2892)
!2916 = !DILocation(line: 1423, column: 37, scope: !2892)
!2917 = !DILocation(line: 1425, column: 6, scope: !2918)
!2918 = distinct !DILexicalBlock(scope: !2892, file: !1, line: 1425, column: 6)
!2919 = !DILocation(line: 1425, column: 12, scope: !2918)
!2920 = !DILocation(line: 1425, column: 6, scope: !2892)
!2921 = !DILocalVariable(name: "i", scope: !2922, file: !1, line: 1426, type: !168)
!2922 = distinct !DILexicalBlock(scope: !2918, file: !1, line: 1425, column: 23)
!2923 = !DILocation(line: 1426, column: 7, scope: !2922)
!2924 = !DILocation(line: 1428, column: 3, scope: !2925)
!2925 = distinct !DILexicalBlock(scope: !2922, file: !1, line: 1428, column: 3)
!2926 = !DILocation(line: 1428, column: 3, scope: !2927)
!2927 = distinct !DILexicalBlock(scope: !2925, file: !1, line: 1428, column: 3)
!2928 = !DILocation(line: 1429, column: 15, scope: !2929)
!2929 = distinct !DILexicalBlock(scope: !2927, file: !1, line: 1428, column: 60)
!2930 = !DILocation(line: 1429, column: 23, scope: !2929)
!2931 = !DILocation(line: 1429, column: 27, scope: !2929)
!2932 = !DILocation(line: 1429, column: 33, scope: !2929)
!2933 = !DILocation(line: 1429, column: 43, scope: !2929)
!2934 = !DILocation(line: 1429, column: 4, scope: !2929)
!2935 = !DILocation(line: 1430, column: 29, scope: !2929)
!2936 = !DILocation(line: 1430, column: 37, scope: !2929)
!2937 = !DILocation(line: 1430, column: 41, scope: !2929)
!2938 = !DILocation(line: 1430, column: 46, scope: !2929)
!2939 = !DILocation(line: 1430, column: 4, scope: !2929)
!2940 = !DILocation(line: 1431, column: 41, scope: !2929)
!2941 = !DILocation(line: 1431, column: 19, scope: !2929)
!2942 = !DILocation(line: 1431, column: 4, scope: !2929)
!2943 = !DILocation(line: 1431, column: 12, scope: !2929)
!2944 = !DILocation(line: 1431, column: 17, scope: !2929)
!2945 = !DILocation(line: 1433, column: 23, scope: !2929)
!2946 = !DILocation(line: 1433, column: 46, scope: !2929)
!2947 = !DILocation(line: 1433, column: 22, scope: !2929)
!2948 = !DILocation(line: 1433, column: 55, scope: !2929)
!2949 = !DILocation(line: 1433, column: 4, scope: !2929)
!2950 = !DILocation(line: 1433, column: 12, scope: !2929)
!2951 = !DILocation(line: 1433, column: 20, scope: !2929)
!2952 = !DILocation(line: 1435, column: 10, scope: !2929)
!2953 = !DILocation(line: 1436, column: 3, scope: !2929)
!2954 = distinct !{!2954, !2924, !2955}
!2955 = !DILocation(line: 1436, column: 3, scope: !2925)
!2956 = !DILocation(line: 1437, column: 2, scope: !2922)
!2957 = !DILocation(line: 1439, column: 3, scope: !2958)
!2958 = distinct !DILexicalBlock(scope: !2959, file: !1, line: 1439, column: 3)
!2959 = distinct !DILexicalBlock(scope: !2918, file: !1, line: 1438, column: 7)
!2960 = !DILocation(line: 1439, column: 3, scope: !2961)
!2961 = distinct !DILexicalBlock(scope: !2958, file: !1, line: 1439, column: 3)
!2962 = !DILocation(line: 1440, column: 15, scope: !2963)
!2963 = distinct !DILexicalBlock(scope: !2961, file: !1, line: 1439, column: 51)
!2964 = !DILocation(line: 1440, column: 23, scope: !2963)
!2965 = !DILocation(line: 1440, column: 27, scope: !2963)
!2966 = !DILocation(line: 1440, column: 32, scope: !2963)
!2967 = !DILocation(line: 1440, column: 4, scope: !2963)
!2968 = !DILocation(line: 1441, column: 29, scope: !2963)
!2969 = !DILocation(line: 1441, column: 37, scope: !2963)
!2970 = !DILocation(line: 1441, column: 41, scope: !2963)
!2971 = !DILocation(line: 1441, column: 46, scope: !2963)
!2972 = !DILocation(line: 1441, column: 4, scope: !2963)
!2973 = !DILocation(line: 1442, column: 41, scope: !2963)
!2974 = !DILocation(line: 1442, column: 19, scope: !2963)
!2975 = !DILocation(line: 1442, column: 4, scope: !2963)
!2976 = !DILocation(line: 1442, column: 12, scope: !2963)
!2977 = !DILocation(line: 1442, column: 17, scope: !2963)
!2978 = !DILocation(line: 1444, column: 23, scope: !2963)
!2979 = !DILocation(line: 1444, column: 46, scope: !2963)
!2980 = !DILocation(line: 1444, column: 22, scope: !2963)
!2981 = !DILocation(line: 1444, column: 55, scope: !2963)
!2982 = !DILocation(line: 1444, column: 4, scope: !2963)
!2983 = !DILocation(line: 1444, column: 12, scope: !2963)
!2984 = !DILocation(line: 1444, column: 20, scope: !2963)
!2985 = !DILocation(line: 1446, column: 10, scope: !2963)
!2986 = !DILocation(line: 1447, column: 3, scope: !2963)
!2987 = distinct !{!2987, !2957, !2988}
!2988 = !DILocation(line: 1447, column: 3, scope: !2958)
!2989 = !DILocation(line: 1449, column: 1, scope: !2892)
!2990 = distinct !DISubprogram(name: "emDM_copyEdgeArray", scope: !1, file: !1, line: 1451, type: !2991, scopeLine: 1452, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1952)
!2991 = !DISubroutineType(types: !2992)
!2992 = !{null, !154, !2750}
!2993 = !DILocalVariable(name: "dm", arg: 1, scope: !2990, file: !1, line: 1451, type: !154)
!2994 = !DILocation(line: 1451, column: 45, scope: !2990)
!2995 = !DILocalVariable(name: "r_edge", arg: 2, scope: !2990, file: !1, line: 1451, type: !2750)
!2996 = !DILocation(line: 1451, column: 56, scope: !2990)
!2997 = !DILocalVariable(name: "bm", scope: !2990, file: !1, line: 1453, type: !1847)
!2998 = !DILocation(line: 1453, column: 9, scope: !2990)
!2999 = !DILocation(line: 1453, column: 35, scope: !2990)
!3000 = !DILocation(line: 1453, column: 40, scope: !2990)
!3001 = !DILocation(line: 1453, column: 44, scope: !2990)
!3002 = !DILocalVariable(name: "eed", scope: !2990, file: !1, line: 1454, type: !1791)
!3003 = !DILocation(line: 1454, column: 10, scope: !2990)
!3004 = !DILocalVariable(name: "iter", scope: !2990, file: !1, line: 1455, type: !2184)
!3005 = !DILocation(line: 1455, column: 9, scope: !2990)
!3006 = !DILocalVariable(name: "cd_edge_bweight_offset", scope: !2990, file: !1, line: 1457, type: !1967)
!3007 = !DILocation(line: 1457, column: 12, scope: !2990)
!3008 = !DILocation(line: 1457, column: 60, scope: !2990)
!3009 = !DILocation(line: 1457, column: 64, scope: !2990)
!3010 = !DILocation(line: 1457, column: 37, scope: !2990)
!3011 = !DILocalVariable(name: "cd_edge_crease_offset", scope: !2990, file: !1, line: 1458, type: !1967)
!3012 = !DILocation(line: 1458, column: 12, scope: !2990)
!3013 = !DILocation(line: 1458, column: 60, scope: !2990)
!3014 = !DILocation(line: 1458, column: 64, scope: !2990)
!3015 = !DILocation(line: 1458, column: 37, scope: !2990)
!3016 = !DILocation(line: 1460, column: 28, scope: !2990)
!3017 = !DILocation(line: 1460, column: 2, scope: !2990)
!3018 = !DILocation(line: 1462, column: 2, scope: !3019)
!3019 = distinct !DILexicalBlock(scope: !2990, file: !1, line: 1462, column: 2)
!3020 = !DILocation(line: 1462, column: 2, scope: !3021)
!3021 = distinct !DILexicalBlock(scope: !3019, file: !1, line: 1462, column: 2)
!3022 = !DILocation(line: 1463, column: 16, scope: !3023)
!3023 = distinct !DILexicalBlock(scope: !3021, file: !1, line: 1462, column: 50)
!3024 = !DILocation(line: 1463, column: 3, scope: !3023)
!3025 = !DILocation(line: 1463, column: 11, scope: !3023)
!3026 = !DILocation(line: 1463, column: 14, scope: !3023)
!3027 = !DILocation(line: 1464, column: 16, scope: !3023)
!3028 = !DILocation(line: 1464, column: 3, scope: !3023)
!3029 = !DILocation(line: 1464, column: 11, scope: !3023)
!3030 = !DILocation(line: 1464, column: 14, scope: !3023)
!3031 = !DILocation(line: 1466, column: 40, scope: !3023)
!3032 = !DILocation(line: 1466, column: 18, scope: !3023)
!3033 = !DILocation(line: 1466, column: 3, scope: !3023)
!3034 = !DILocation(line: 1466, column: 11, scope: !3023)
!3035 = !DILocation(line: 1466, column: 16, scope: !3023)
!3036 = !DILocation(line: 1468, column: 22, scope: !3023)
!3037 = !DILocation(line: 1468, column: 45, scope: !3023)
!3038 = !DILocation(line: 1468, column: 21, scope: !3023)
!3039 = !DILocation(line: 1468, column: 54, scope: !3023)
!3040 = !DILocation(line: 1468, column: 3, scope: !3023)
!3041 = !DILocation(line: 1468, column: 11, scope: !3023)
!3042 = !DILocation(line: 1468, column: 19, scope: !3023)
!3043 = !DILocation(line: 1469, column: 22, scope: !3023)
!3044 = !DILocation(line: 1469, column: 45, scope: !3023)
!3045 = !DILocation(line: 1469, column: 21, scope: !3023)
!3046 = !DILocation(line: 1469, column: 54, scope: !3023)
!3047 = !DILocation(line: 1469, column: 3, scope: !3023)
!3048 = !DILocation(line: 1469, column: 11, scope: !3023)
!3049 = !DILocation(line: 1469, column: 19, scope: !3023)
!3050 = !DILocation(line: 1471, column: 9, scope: !3023)
!3051 = !DILocation(line: 1472, column: 2, scope: !3023)
!3052 = distinct !{!3052, !3018, !3053}
!3053 = !DILocation(line: 1472, column: 2, scope: !3019)
!3054 = !DILocation(line: 1473, column: 1, scope: !2990)
!3055 = distinct !DISubprogram(name: "emDM_copyTessFaceArray", scope: !1, file: !1, line: 1475, type: !3056, scopeLine: 1476, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1952)
!3056 = !DISubroutineType(types: !3057)
!3057 = !{null, !154, !2833}
!3058 = !DILocalVariable(name: "dm", arg: 1, scope: !3055, file: !1, line: 1475, type: !154)
!3059 = !DILocation(line: 1475, column: 49, scope: !3055)
!3060 = !DILocalVariable(name: "r_face", arg: 2, scope: !3055, file: !1, line: 1475, type: !2833)
!3061 = !DILocation(line: 1475, column: 60, scope: !3055)
!3062 = !DILocalVariable(name: "bmdm", scope: !3055, file: !1, line: 1477, type: !1700)
!3063 = !DILocation(line: 1477, column: 20, scope: !3055)
!3064 = !DILocation(line: 1477, column: 47, scope: !3055)
!3065 = !DILocation(line: 1477, column: 27, scope: !3055)
!3066 = !DILocalVariable(name: "bm", scope: !3055, file: !1, line: 1478, type: !1847)
!3067 = !DILocation(line: 1478, column: 9, scope: !3055)
!3068 = !DILocation(line: 1478, column: 14, scope: !3055)
!3069 = !DILocation(line: 1478, column: 20, scope: !3055)
!3070 = !DILocation(line: 1478, column: 24, scope: !3055)
!3071 = !DILocalVariable(name: "looptris", scope: !3055, file: !1, line: 1479, type: !1872)
!3072 = !DILocation(line: 1479, column: 19, scope: !3055)
!3073 = !DILocation(line: 1479, column: 34, scope: !3055)
!3074 = !DILocation(line: 1479, column: 40, scope: !3055)
!3075 = !DILocation(line: 1479, column: 44, scope: !3055)
!3076 = !DILocalVariable(name: "ef", scope: !3055, file: !1, line: 1480, type: !1795)
!3077 = !DILocation(line: 1480, column: 10, scope: !3055)
!3078 = !DILocalVariable(name: "i", scope: !3055, file: !1, line: 1481, type: !168)
!3079 = !DILocation(line: 1481, column: 6, scope: !3055)
!3080 = !DILocation(line: 1483, column: 28, scope: !3055)
!3081 = !DILocation(line: 1483, column: 2, scope: !3055)
!3082 = !DILocation(line: 1485, column: 9, scope: !3083)
!3083 = distinct !DILexicalBlock(scope: !3055, file: !1, line: 1485, column: 2)
!3084 = !DILocation(line: 1485, column: 7, scope: !3083)
!3085 = !DILocation(line: 1485, column: 14, scope: !3086)
!3086 = distinct !DILexicalBlock(scope: !3083, file: !1, line: 1485, column: 2)
!3087 = !DILocation(line: 1485, column: 18, scope: !3086)
!3088 = !DILocation(line: 1485, column: 24, scope: !3086)
!3089 = !DILocation(line: 1485, column: 28, scope: !3086)
!3090 = !DILocation(line: 1485, column: 16, scope: !3086)
!3091 = !DILocation(line: 1485, column: 2, scope: !3083)
!3092 = !DILocalVariable(name: "ltri", scope: !3093, file: !1, line: 1486, type: !2848)
!3093 = distinct !DILexicalBlock(scope: !3086, file: !1, line: 1485, column: 51)
!3094 = !DILocation(line: 1486, column: 12, scope: !3093)
!3095 = !DILocation(line: 1486, column: 19, scope: !3093)
!3096 = !DILocation(line: 1486, column: 28, scope: !3093)
!3097 = !DILocation(line: 1487, column: 8, scope: !3093)
!3098 = !DILocation(line: 1487, column: 17, scope: !3093)
!3099 = !DILocation(line: 1487, column: 6, scope: !3093)
!3100 = !DILocation(line: 1489, column: 36, scope: !3093)
!3101 = !DILocation(line: 1489, column: 40, scope: !3093)
!3102 = !DILocation(line: 1489, column: 20, scope: !3093)
!3103 = !DILocation(line: 1489, column: 3, scope: !3093)
!3104 = !DILocation(line: 1489, column: 11, scope: !3093)
!3105 = !DILocation(line: 1489, column: 18, scope: !3093)
!3106 = !DILocation(line: 1491, column: 40, scope: !3093)
!3107 = !DILocation(line: 1491, column: 18, scope: !3093)
!3108 = !DILocation(line: 1491, column: 3, scope: !3093)
!3109 = !DILocation(line: 1491, column: 11, scope: !3093)
!3110 = !DILocation(line: 1491, column: 16, scope: !3093)
!3111 = !DILocation(line: 1492, column: 3, scope: !3093)
!3112 = !DILocation(line: 1492, column: 11, scope: !3093)
!3113 = !DILocation(line: 1492, column: 18, scope: !3093)
!3114 = !DILocation(line: 1494, column: 16, scope: !3093)
!3115 = !DILocation(line: 1494, column: 3, scope: !3093)
!3116 = !DILocation(line: 1494, column: 11, scope: !3093)
!3117 = !DILocation(line: 1494, column: 14, scope: !3093)
!3118 = !DILocation(line: 1495, column: 16, scope: !3093)
!3119 = !DILocation(line: 1495, column: 3, scope: !3093)
!3120 = !DILocation(line: 1495, column: 11, scope: !3093)
!3121 = !DILocation(line: 1495, column: 14, scope: !3093)
!3122 = !DILocation(line: 1496, column: 16, scope: !3093)
!3123 = !DILocation(line: 1496, column: 3, scope: !3093)
!3124 = !DILocation(line: 1496, column: 11, scope: !3093)
!3125 = !DILocation(line: 1496, column: 14, scope: !3093)
!3126 = !DILocation(line: 1497, column: 3, scope: !3093)
!3127 = !DILocation(line: 1497, column: 11, scope: !3093)
!3128 = !DILocation(line: 1497, column: 14, scope: !3093)
!3129 = !DILocation(line: 1499, column: 19, scope: !3093)
!3130 = !DILocation(line: 1499, column: 3, scope: !3093)
!3131 = !DILocation(line: 1500, column: 2, scope: !3093)
!3132 = !DILocation(line: 1485, column: 37, scope: !3086)
!3133 = !DILocation(line: 1485, column: 47, scope: !3086)
!3134 = !DILocation(line: 1485, column: 2, scope: !3086)
!3135 = distinct !{!3135, !3091, !3136}
!3136 = !DILocation(line: 1500, column: 2, scope: !3083)
!3137 = !DILocation(line: 1501, column: 1, scope: !3055)
!3138 = distinct !DISubprogram(name: "emDM_copyLoopArray", scope: !1, file: !1, line: 1503, type: !3139, scopeLine: 1504, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1952)
!3139 = !DISubroutineType(types: !3140)
!3140 = !{null, !154, !3141}
!3141 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3142, size: 64)
!3142 = !DIDerivedType(tag: DW_TAG_typedef, name: "MLoop", file: !257, line: 91, baseType: !311)
!3143 = !DILocalVariable(name: "dm", arg: 1, scope: !3138, file: !1, line: 1503, type: !154)
!3144 = !DILocation(line: 1503, column: 45, scope: !3138)
!3145 = !DILocalVariable(name: "r_loop", arg: 2, scope: !3138, file: !1, line: 1503, type: !3141)
!3146 = !DILocation(line: 1503, column: 56, scope: !3138)
!3147 = !DILocalVariable(name: "bmdm", scope: !3138, file: !1, line: 1505, type: !1700)
!3148 = !DILocation(line: 1505, column: 20, scope: !3138)
!3149 = !DILocation(line: 1505, column: 47, scope: !3138)
!3150 = !DILocation(line: 1505, column: 27, scope: !3138)
!3151 = !DILocalVariable(name: "bm", scope: !3138, file: !1, line: 1506, type: !1847)
!3152 = !DILocation(line: 1506, column: 9, scope: !3138)
!3153 = !DILocation(line: 1506, column: 14, scope: !3138)
!3154 = !DILocation(line: 1506, column: 20, scope: !3138)
!3155 = !DILocation(line: 1506, column: 24, scope: !3138)
!3156 = !DILocalVariable(name: "iter", scope: !3138, file: !1, line: 1507, type: !2184)
!3157 = !DILocation(line: 1507, column: 9, scope: !3138)
!3158 = !DILocalVariable(name: "efa", scope: !3138, file: !1, line: 1508, type: !1795)
!3159 = !DILocation(line: 1508, column: 10, scope: !3138)
!3160 = !DILocation(line: 1510, column: 28, scope: !3138)
!3161 = !DILocation(line: 1510, column: 2, scope: !3138)
!3162 = !DILocation(line: 1512, column: 2, scope: !3163)
!3163 = distinct !DILexicalBlock(scope: !3138, file: !1, line: 1512, column: 2)
!3164 = !DILocation(line: 1512, column: 2, scope: !3165)
!3165 = distinct !DILexicalBlock(scope: !3163, file: !1, line: 1512, column: 2)
!3166 = !DILocalVariable(name: "l_iter", scope: !3167, file: !1, line: 1513, type: !1773)
!3167 = distinct !DILexicalBlock(scope: !3165, file: !1, line: 1512, column: 50)
!3168 = !DILocation(line: 1513, column: 11, scope: !3167)
!3169 = !DILocalVariable(name: "l_first", scope: !3167, file: !1, line: 1513, type: !1773)
!3170 = !DILocation(line: 1513, column: 20, scope: !3167)
!3171 = !DILocation(line: 1514, column: 22, scope: !3167)
!3172 = !DILocation(line: 1514, column: 20, scope: !3167)
!3173 = !DILocation(line: 1514, column: 10, scope: !3167)
!3174 = !DILocation(line: 1515, column: 3, scope: !3167)
!3175 = !DILocation(line: 1516, column: 16, scope: !3176)
!3176 = distinct !DILexicalBlock(scope: !3167, file: !1, line: 1515, column: 6)
!3177 = !DILocation(line: 1516, column: 4, scope: !3176)
!3178 = !DILocation(line: 1516, column: 12, scope: !3176)
!3179 = !DILocation(line: 1516, column: 14, scope: !3176)
!3180 = !DILocation(line: 1517, column: 16, scope: !3176)
!3181 = !DILocation(line: 1517, column: 4, scope: !3176)
!3182 = !DILocation(line: 1517, column: 12, scope: !3176)
!3183 = !DILocation(line: 1517, column: 14, scope: !3176)
!3184 = !DILocation(line: 1518, column: 10, scope: !3176)
!3185 = !DILocation(line: 1519, column: 3, scope: !3176)
!3186 = !DILocation(line: 1519, column: 22, scope: !3167)
!3187 = !DILocation(line: 1519, column: 30, scope: !3167)
!3188 = !DILocation(line: 1519, column: 20, scope: !3167)
!3189 = !DILocation(line: 1519, column: 39, scope: !3167)
!3190 = !DILocation(line: 1519, column: 36, scope: !3167)
!3191 = distinct !{!3191, !3174, !3192}
!3192 = !DILocation(line: 1519, column: 46, scope: !3167)
!3193 = !DILocation(line: 1520, column: 2, scope: !3167)
!3194 = distinct !{!3194, !3162, !3195}
!3195 = !DILocation(line: 1520, column: 2, scope: !3163)
!3196 = !DILocation(line: 1521, column: 1, scope: !3138)
!3197 = distinct !DISubprogram(name: "emDM_copyPolyArray", scope: !1, file: !1, line: 1523, type: !3198, scopeLine: 1524, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1952)
!3198 = !DISubroutineType(types: !3199)
!3199 = !{null, !154, !3200}
!3200 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3201, size: 64)
!3201 = !DIDerivedType(tag: DW_TAG_typedef, name: "MPoly", file: !257, line: 85, baseType: !320)
!3202 = !DILocalVariable(name: "dm", arg: 1, scope: !3197, file: !1, line: 1523, type: !154)
!3203 = !DILocation(line: 1523, column: 45, scope: !3197)
!3204 = !DILocalVariable(name: "r_poly", arg: 2, scope: !3197, file: !1, line: 1523, type: !3200)
!3205 = !DILocation(line: 1523, column: 56, scope: !3197)
!3206 = !DILocalVariable(name: "bmdm", scope: !3197, file: !1, line: 1525, type: !1700)
!3207 = !DILocation(line: 1525, column: 20, scope: !3197)
!3208 = !DILocation(line: 1525, column: 47, scope: !3197)
!3209 = !DILocation(line: 1525, column: 27, scope: !3197)
!3210 = !DILocalVariable(name: "bm", scope: !3197, file: !1, line: 1526, type: !1847)
!3211 = !DILocation(line: 1526, column: 9, scope: !3197)
!3212 = !DILocation(line: 1526, column: 14, scope: !3197)
!3213 = !DILocation(line: 1526, column: 20, scope: !3197)
!3214 = !DILocation(line: 1526, column: 24, scope: !3197)
!3215 = !DILocalVariable(name: "iter", scope: !3197, file: !1, line: 1527, type: !2184)
!3216 = !DILocation(line: 1527, column: 9, scope: !3197)
!3217 = !DILocalVariable(name: "efa", scope: !3197, file: !1, line: 1528, type: !1795)
!3218 = !DILocation(line: 1528, column: 10, scope: !3197)
!3219 = !DILocalVariable(name: "i", scope: !3197, file: !1, line: 1529, type: !168)
!3220 = !DILocation(line: 1529, column: 6, scope: !3197)
!3221 = !DILocation(line: 1531, column: 4, scope: !3197)
!3222 = !DILocation(line: 1532, column: 2, scope: !3223)
!3223 = distinct !DILexicalBlock(scope: !3197, file: !1, line: 1532, column: 2)
!3224 = !DILocation(line: 1532, column: 2, scope: !3225)
!3225 = distinct !DILexicalBlock(scope: !3223, file: !1, line: 1532, column: 2)
!3226 = !DILocation(line: 1533, column: 40, scope: !3227)
!3227 = distinct !DILexicalBlock(scope: !3225, file: !1, line: 1532, column: 50)
!3228 = !DILocation(line: 1533, column: 18, scope: !3227)
!3229 = !DILocation(line: 1533, column: 3, scope: !3227)
!3230 = !DILocation(line: 1533, column: 11, scope: !3227)
!3231 = !DILocation(line: 1533, column: 16, scope: !3227)
!3232 = !DILocation(line: 1534, column: 23, scope: !3227)
!3233 = !DILocation(line: 1534, column: 3, scope: !3227)
!3234 = !DILocation(line: 1534, column: 11, scope: !3227)
!3235 = !DILocation(line: 1534, column: 21, scope: !3227)
!3236 = !DILocation(line: 1535, column: 21, scope: !3227)
!3237 = !DILocation(line: 1535, column: 26, scope: !3227)
!3238 = !DILocation(line: 1535, column: 3, scope: !3227)
!3239 = !DILocation(line: 1535, column: 11, scope: !3227)
!3240 = !DILocation(line: 1535, column: 19, scope: !3227)
!3241 = !DILocation(line: 1536, column: 20, scope: !3227)
!3242 = !DILocation(line: 1536, column: 25, scope: !3227)
!3243 = !DILocation(line: 1536, column: 3, scope: !3227)
!3244 = !DILocation(line: 1536, column: 11, scope: !3227)
!3245 = !DILocation(line: 1536, column: 18, scope: !3227)
!3246 = !DILocation(line: 1538, column: 9, scope: !3227)
!3247 = !DILocation(line: 1539, column: 8, scope: !3227)
!3248 = !DILocation(line: 1539, column: 13, scope: !3227)
!3249 = !DILocation(line: 1539, column: 5, scope: !3227)
!3250 = !DILocation(line: 1540, column: 2, scope: !3227)
!3251 = distinct !{!3251, !3222, !3252}
!3252 = !DILocation(line: 1540, column: 2, scope: !3223)
!3253 = !DILocation(line: 1541, column: 1, scope: !3197)
!3254 = distinct !DISubprogram(name: "emDM_getTessFaceDataArray", scope: !1, file: !1, line: 1543, type: !361, scopeLine: 1544, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1952)
!3255 = !DILocalVariable(name: "dm", arg: 1, scope: !3254, file: !1, line: 1543, type: !154)
!3256 = !DILocation(line: 1543, column: 53, scope: !3254)
!3257 = !DILocalVariable(name: "type", arg: 2, scope: !3254, file: !1, line: 1543, type: !168)
!3258 = !DILocation(line: 1543, column: 61, scope: !3254)
!3259 = !DILocalVariable(name: "bmdm", scope: !3254, file: !1, line: 1545, type: !1700)
!3260 = !DILocation(line: 1545, column: 20, scope: !3254)
!3261 = !DILocation(line: 1545, column: 47, scope: !3254)
!3262 = !DILocation(line: 1545, column: 27, scope: !3254)
!3263 = !DILocalVariable(name: "bm", scope: !3254, file: !1, line: 1546, type: !1847)
!3264 = !DILocation(line: 1546, column: 9, scope: !3254)
!3265 = !DILocation(line: 1546, column: 14, scope: !3254)
!3266 = !DILocation(line: 1546, column: 20, scope: !3254)
!3267 = !DILocation(line: 1546, column: 24, scope: !3254)
!3268 = !DILocalVariable(name: "datalayer", scope: !3254, file: !1, line: 1547, type: !182)
!3269 = !DILocation(line: 1547, column: 8, scope: !3254)
!3270 = !DILocation(line: 1549, column: 41, scope: !3254)
!3271 = !DILocation(line: 1549, column: 45, scope: !3254)
!3272 = !DILocation(line: 1549, column: 14, scope: !3254)
!3273 = !DILocation(line: 1549, column: 12, scope: !3254)
!3274 = !DILocation(line: 1550, column: 6, scope: !3275)
!3275 = distinct !DILexicalBlock(scope: !3254, file: !1, line: 1550, column: 6)
!3276 = !DILocation(line: 1550, column: 6, scope: !3254)
!3277 = !DILocation(line: 1551, column: 10, scope: !3275)
!3278 = !DILocation(line: 1551, column: 3, scope: !3275)
!3279 = !DILocation(line: 1555, column: 6, scope: !3280)
!3280 = distinct !DILexicalBlock(scope: !3254, file: !1, line: 1555, column: 6)
!3281 = !DILocation(line: 1555, column: 11, scope: !3280)
!3282 = !DILocation(line: 1555, column: 24, scope: !3280)
!3283 = !DILocation(line: 1555, column: 27, scope: !3280)
!3284 = !DILocation(line: 1555, column: 32, scope: !3280)
!3285 = !DILocation(line: 1555, column: 6, scope: !3254)
!3286 = !DILocalVariable(name: "type_from", scope: !3287, file: !1, line: 1556, type: !1967)
!3287 = distinct !DILexicalBlock(scope: !3280, file: !1, line: 1555, column: 44)
!3288 = !DILocation(line: 1556, column: 13, scope: !3287)
!3289 = !DILocation(line: 1556, column: 26, scope: !3287)
!3290 = !DILocation(line: 1556, column: 31, scope: !3287)
!3291 = !DILocation(line: 1556, column: 25, scope: !3287)
!3292 = !DILocalVariable(name: "index", scope: !3287, file: !1, line: 1557, type: !168)
!3293 = !DILocation(line: 1557, column: 7, scope: !3287)
!3294 = !DILocalVariable(name: "data", scope: !3287, file: !1, line: 1558, type: !1813)
!3295 = !DILocation(line: 1558, column: 15, scope: !3287)
!3296 = !DILocalVariable(name: "bmdata", scope: !3287, file: !1, line: 1558, type: !1813)
!3297 = !DILocation(line: 1558, column: 22, scope: !3287)
!3298 = !DILocation(line: 1559, column: 39, scope: !3287)
!3299 = !DILocation(line: 1559, column: 43, scope: !3287)
!3300 = !DILocation(line: 1559, column: 50, scope: !3287)
!3301 = !DILocation(line: 1559, column: 11, scope: !3287)
!3302 = !DILocation(line: 1559, column: 9, scope: !3287)
!3303 = !DILocation(line: 1561, column: 7, scope: !3304)
!3304 = distinct !DILexicalBlock(scope: !3287, file: !1, line: 1561, column: 7)
!3305 = !DILocation(line: 1561, column: 13, scope: !3304)
!3306 = !DILocation(line: 1561, column: 7, scope: !3287)
!3307 = !DILocalVariable(name: "looptris", scope: !3308, file: !1, line: 1563, type: !3309)
!3308 = distinct !DILexicalBlock(scope: !3304, file: !1, line: 1561, column: 20)
!3309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3310, size: 64)
!3310 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1773, size: 192, elements: !261)
!3311 = !DILocation(line: 1563, column: 14, scope: !3308)
!3312 = !DILocation(line: 1563, column: 29, scope: !3308)
!3313 = !DILocation(line: 1563, column: 35, scope: !3308)
!3314 = !DILocation(line: 1563, column: 39, scope: !3308)
!3315 = !DILocalVariable(name: "size", scope: !3308, file: !1, line: 1564, type: !1967)
!3316 = !DILocation(line: 1564, column: 14, scope: !3308)
!3317 = !DILocation(line: 1564, column: 39, scope: !3308)
!3318 = !DILocation(line: 1564, column: 21, scope: !3308)
!3319 = !DILocalVariable(name: "i", scope: !3308, file: !1, line: 1565, type: !168)
!3320 = !DILocation(line: 1565, column: 8, scope: !3308)
!3321 = !DILocalVariable(name: "j", scope: !3308, file: !1, line: 1565, type: !168)
!3322 = !DILocation(line: 1565, column: 11, scope: !3308)
!3323 = !DILocation(line: 1567, column: 26, scope: !3308)
!3324 = !DILocation(line: 1567, column: 30, scope: !3308)
!3325 = !DILocation(line: 1567, column: 4, scope: !3308)
!3326 = !DILocation(line: 1568, column: 40, scope: !3308)
!3327 = !DILocation(line: 1568, column: 44, scope: !3308)
!3328 = !DILocation(line: 1568, column: 54, scope: !3308)
!3329 = !DILocation(line: 1568, column: 12, scope: !3308)
!3330 = !DILocation(line: 1568, column: 10, scope: !3308)
!3331 = !DILocation(line: 1569, column: 4, scope: !3308)
!3332 = !DILocation(line: 1569, column: 8, scope: !3308)
!3333 = !DILocation(line: 1569, column: 17, scope: !3308)
!3334 = !DILocation(line: 1569, column: 24, scope: !3308)
!3335 = !DILocation(line: 1569, column: 31, scope: !3308)
!3336 = !DILocation(line: 1569, column: 36, scope: !3308)
!3337 = !DILocation(line: 1571, column: 50, scope: !3308)
!3338 = !DILocation(line: 1571, column: 54, scope: !3308)
!3339 = !DILocation(line: 1571, column: 23, scope: !3308)
!3340 = !DILocation(line: 1571, column: 21, scope: !3308)
!3341 = !DILocation(line: 1571, column: 9, scope: !3308)
!3342 = !DILocation(line: 1573, column: 8, scope: !3343)
!3343 = distinct !DILexicalBlock(scope: !3308, file: !1, line: 1573, column: 8)
!3344 = !DILocation(line: 1573, column: 13, scope: !3343)
!3345 = !DILocation(line: 1573, column: 8, scope: !3308)
!3346 = !DILocalVariable(name: "cd_loop_uv_offset", scope: !3347, file: !1, line: 1574, type: !1967)
!3347 = distinct !DILexicalBlock(scope: !3343, file: !1, line: 1573, column: 27)
!3348 = !DILocation(line: 1574, column: 15, scope: !3347)
!3349 = !DILocation(line: 1574, column: 59, scope: !3347)
!3350 = !DILocation(line: 1574, column: 63, scope: !3347)
!3351 = !DILocation(line: 1574, column: 36, scope: !3347)
!3352 = !DILocalVariable(name: "cd_poly_tex_offset", scope: !3347, file: !1, line: 1575, type: !1967)
!3353 = !DILocation(line: 1575, column: 15, scope: !3347)
!3354 = !DILocation(line: 1575, column: 59, scope: !3347)
!3355 = !DILocation(line: 1575, column: 63, scope: !3347)
!3356 = !DILocation(line: 1575, column: 36, scope: !3347)
!3357 = !DILocation(line: 1577, column: 12, scope: !3358)
!3358 = distinct !DILexicalBlock(scope: !3347, file: !1, line: 1577, column: 5)
!3359 = !DILocation(line: 1577, column: 10, scope: !3358)
!3360 = !DILocation(line: 1577, column: 17, scope: !3361)
!3361 = distinct !DILexicalBlock(scope: !3358, file: !1, line: 1577, column: 5)
!3362 = !DILocation(line: 1577, column: 21, scope: !3361)
!3363 = !DILocation(line: 1577, column: 27, scope: !3361)
!3364 = !DILocation(line: 1577, column: 31, scope: !3361)
!3365 = !DILocation(line: 1577, column: 19, scope: !3361)
!3366 = !DILocation(line: 1577, column: 5, scope: !3358)
!3367 = !DILocalVariable(name: "efa", scope: !3368, file: !1, line: 1578, type: !1795)
!3368 = distinct !DILexicalBlock(scope: !3361, file: !1, line: 1577, column: 58)
!3369 = !DILocation(line: 1578, column: 14, scope: !3368)
!3370 = !DILocation(line: 1578, column: 20, scope: !3368)
!3371 = !DILocation(line: 1578, column: 29, scope: !3368)
!3372 = !DILocation(line: 1578, column: 36, scope: !3368)
!3373 = !DILocation(line: 1581, column: 15, scope: !3368)
!3374 = !DILocation(line: 1581, column: 13, scope: !3368)
!3375 = !DILocation(line: 1583, column: 6, scope: !3376)
!3376 = distinct !DILexicalBlock(scope: !3368, file: !1, line: 1583, column: 6)
!3377 = !DILocation(line: 1584, column: 13, scope: !3378)
!3378 = distinct !DILexicalBlock(scope: !3368, file: !1, line: 1584, column: 6)
!3379 = !DILocation(line: 1584, column: 11, scope: !3378)
!3380 = !DILocation(line: 1584, column: 18, scope: !3381)
!3381 = distinct !DILexicalBlock(scope: !3378, file: !1, line: 1584, column: 6)
!3382 = !DILocation(line: 1584, column: 20, scope: !3381)
!3383 = !DILocation(line: 1584, column: 6, scope: !3378)
!3384 = !DILocation(line: 1586, column: 16, scope: !3385)
!3385 = distinct !DILexicalBlock(scope: !3381, file: !1, line: 1584, column: 30)
!3386 = !DILocation(line: 1586, column: 14, scope: !3385)
!3387 = !DILocation(line: 1587, column: 29, scope: !3385)
!3388 = !DILocation(line: 1587, column: 36, scope: !3385)
!3389 = !DILocation(line: 1587, column: 39, scope: !3385)
!3390 = !DILocation(line: 1587, column: 18, scope: !3385)
!3391 = !DILocation(line: 1587, column: 55, scope: !3385)
!3392 = !DILocation(line: 1587, column: 64, scope: !3385)
!3393 = !DILocation(line: 1587, column: 43, scope: !3385)
!3394 = !DILocation(line: 1587, column: 7, scope: !3385)
!3395 = !DILocation(line: 1588, column: 6, scope: !3385)
!3396 = !DILocation(line: 1584, column: 26, scope: !3381)
!3397 = !DILocation(line: 1584, column: 6, scope: !3381)
!3398 = distinct !{!3398, !3383, !3399}
!3399 = !DILocation(line: 1588, column: 6, scope: !3378)
!3400 = !DILocation(line: 1589, column: 5, scope: !3368)
!3401 = !DILocation(line: 1577, column: 40, scope: !3361)
!3402 = !DILocation(line: 1577, column: 52, scope: !3361)
!3403 = !DILocation(line: 1577, column: 49, scope: !3361)
!3404 = !DILocation(line: 1577, column: 5, scope: !3361)
!3405 = distinct !{!3405, !3366, !3406}
!3406 = !DILocation(line: 1589, column: 5, scope: !3358)
!3407 = !DILocation(line: 1590, column: 4, scope: !3347)
!3408 = !DILocalVariable(name: "cd_loop_color_offset", scope: !3409, file: !1, line: 1592, type: !1967)
!3409 = distinct !DILexicalBlock(scope: !3343, file: !1, line: 1591, column: 9)
!3410 = !DILocation(line: 1592, column: 15, scope: !3409)
!3411 = !DILocation(line: 1592, column: 62, scope: !3409)
!3412 = !DILocation(line: 1592, column: 66, scope: !3409)
!3413 = !DILocation(line: 1592, column: 39, scope: !3409)
!3414 = !DILocation(line: 1593, column: 12, scope: !3415)
!3415 = distinct !DILexicalBlock(scope: !3409, file: !1, line: 1593, column: 5)
!3416 = !DILocation(line: 1593, column: 10, scope: !3415)
!3417 = !DILocation(line: 1593, column: 17, scope: !3418)
!3418 = distinct !DILexicalBlock(scope: !3415, file: !1, line: 1593, column: 5)
!3419 = !DILocation(line: 1593, column: 21, scope: !3418)
!3420 = !DILocation(line: 1593, column: 27, scope: !3418)
!3421 = !DILocation(line: 1593, column: 31, scope: !3418)
!3422 = !DILocation(line: 1593, column: 19, scope: !3418)
!3423 = !DILocation(line: 1593, column: 5, scope: !3415)
!3424 = !DILocation(line: 1594, column: 13, scope: !3425)
!3425 = distinct !DILexicalBlock(scope: !3426, file: !1, line: 1594, column: 6)
!3426 = distinct !DILexicalBlock(scope: !3418, file: !1, line: 1593, column: 58)
!3427 = !DILocation(line: 1594, column: 11, scope: !3425)
!3428 = !DILocation(line: 1594, column: 18, scope: !3429)
!3429 = distinct !DILexicalBlock(scope: !3425, file: !1, line: 1594, column: 6)
!3430 = !DILocation(line: 1594, column: 20, scope: !3429)
!3431 = !DILocation(line: 1594, column: 6, scope: !3425)
!3432 = !DILocation(line: 1596, column: 16, scope: !3433)
!3433 = distinct !DILexicalBlock(scope: !3429, file: !1, line: 1594, column: 30)
!3434 = !DILocation(line: 1596, column: 14, scope: !3433)
!3435 = !DILocalVariable(name: "mloopcol__tmp", scope: !3436, file: !1, line: 1597, type: !3437)
!3436 = distinct !DILexicalBlock(scope: !3433, file: !1, line: 1597, column: 7)
!3437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3438, size: 64)
!3438 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1915)
!3439 = !DILocation(line: 1597, column: 7, scope: !3436)
!3440 = !DILocalVariable(name: "mcol__tmp", scope: !3436, file: !1, line: 1597, type: !1922)
!3441 = !DILocation(line: 1598, column: 6, scope: !3433)
!3442 = !DILocation(line: 1594, column: 26, scope: !3429)
!3443 = !DILocation(line: 1594, column: 6, scope: !3429)
!3444 = distinct !{!3444, !3431, !3445}
!3445 = !DILocation(line: 1598, column: 6, scope: !3425)
!3446 = !DILocation(line: 1599, column: 5, scope: !3426)
!3447 = !DILocation(line: 1593, column: 40, scope: !3418)
!3448 = !DILocation(line: 1593, column: 52, scope: !3418)
!3449 = !DILocation(line: 1593, column: 49, scope: !3418)
!3450 = !DILocation(line: 1593, column: 5, scope: !3418)
!3451 = distinct !{!3451, !3423, !3452}
!3452 = !DILocation(line: 1599, column: 5, scope: !3415)
!3453 = !DILocation(line: 1601, column: 3, scope: !3308)
!3454 = !DILocation(line: 1602, column: 2, scope: !3287)
!3455 = !DILocation(line: 1605, column: 6, scope: !3456)
!3456 = distinct !DILexicalBlock(scope: !3254, file: !1, line: 1605, column: 6)
!3457 = !DILocation(line: 1605, column: 11, scope: !3456)
!3458 = !DILocation(line: 1605, column: 6, scope: !3254)
!3459 = !DILocalVariable(name: "lnors", scope: !3460, file: !1, line: 1606, type: !1698)
!3460 = distinct !DILexicalBlock(scope: !3456, file: !1, line: 1605, column: 33)
!3461 = !DILocation(line: 1606, column: 17, scope: !3460)
!3462 = !DILocation(line: 1606, column: 29, scope: !3460)
!3463 = !DILocation(line: 1606, column: 33, scope: !3460)
!3464 = !DILocation(line: 1606, column: 50, scope: !3460)
!3465 = !DILocation(line: 1608, column: 7, scope: !3466)
!3466 = distinct !DILexicalBlock(scope: !3460, file: !1, line: 1608, column: 7)
!3467 = !DILocation(line: 1608, column: 7, scope: !3460)
!3468 = !DILocalVariable(name: "looptris", scope: !3469, file: !1, line: 1609, type: !3309)
!3469 = distinct !DILexicalBlock(scope: !3466, file: !1, line: 1608, column: 14)
!3470 = !DILocation(line: 1609, column: 14, scope: !3469)
!3471 = !DILocation(line: 1609, column: 29, scope: !3469)
!3472 = !DILocation(line: 1609, column: 35, scope: !3469)
!3473 = !DILocation(line: 1609, column: 39, scope: !3469)
!3474 = !DILocalVariable(name: "tlnors", scope: !3469, file: !1, line: 1610, type: !3475)
!3475 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3476, size: 64)
!3476 = !DICompositeType(tag: DW_TAG_array_type, baseType: !265, size: 192, elements: !3477)
!3477 = !{!402, !262}
!3478 = !DILocation(line: 1610, column: 12, scope: !3469)
!3479 = !DILocalVariable(name: "tlnor", scope: !3469, file: !1, line: 1610, type: !3475)
!3480 = !DILocation(line: 1610, column: 29, scope: !3469)
!3481 = !DILocalVariable(name: "index", scope: !3469, file: !1, line: 1611, type: !168)
!3482 = !DILocation(line: 1611, column: 8, scope: !3469)
!3483 = !DILocalVariable(name: "i", scope: !3469, file: !1, line: 1611, type: !168)
!3484 = !DILocation(line: 1611, column: 15, scope: !3469)
!3485 = !DILocalVariable(name: "j", scope: !3469, file: !1, line: 1611, type: !168)
!3486 = !DILocation(line: 1611, column: 18, scope: !3469)
!3487 = !DILocation(line: 1613, column: 26, scope: !3469)
!3488 = !DILocation(line: 1613, column: 30, scope: !3469)
!3489 = !DILocation(line: 1613, column: 4, scope: !3469)
!3490 = !DILocation(line: 1614, column: 40, scope: !3469)
!3491 = !DILocation(line: 1614, column: 44, scope: !3469)
!3492 = !DILocation(line: 1614, column: 54, scope: !3469)
!3493 = !DILocation(line: 1614, column: 12, scope: !3469)
!3494 = !DILocation(line: 1614, column: 10, scope: !3469)
!3495 = !DILocation(line: 1615, column: 4, scope: !3469)
!3496 = !DILocation(line: 1615, column: 8, scope: !3469)
!3497 = !DILocation(line: 1615, column: 17, scope: !3469)
!3498 = !DILocation(line: 1615, column: 24, scope: !3469)
!3499 = !DILocation(line: 1615, column: 31, scope: !3469)
!3500 = !DILocation(line: 1615, column: 36, scope: !3469)
!3501 = !DILocation(line: 1617, column: 48, scope: !3469)
!3502 = !DILocation(line: 1617, column: 52, scope: !3469)
!3503 = !DILocation(line: 1617, column: 21, scope: !3469)
!3504 = !DILocation(line: 1617, column: 19, scope: !3469)
!3505 = !DILocation(line: 1617, column: 10, scope: !3469)
!3506 = !DILocation(line: 1619, column: 30, scope: !3469)
!3507 = !DILocation(line: 1619, column: 4, scope: !3469)
!3508 = !DILocation(line: 1621, column: 11, scope: !3509)
!3509 = distinct !DILexicalBlock(scope: !3469, file: !1, line: 1621, column: 4)
!3510 = !DILocation(line: 1621, column: 9, scope: !3509)
!3511 = !DILocation(line: 1621, column: 16, scope: !3512)
!3512 = distinct !DILexicalBlock(scope: !3509, file: !1, line: 1621, column: 4)
!3513 = !DILocation(line: 1621, column: 20, scope: !3512)
!3514 = !DILocation(line: 1621, column: 26, scope: !3512)
!3515 = !DILocation(line: 1621, column: 30, scope: !3512)
!3516 = !DILocation(line: 1621, column: 18, scope: !3512)
!3517 = !DILocation(line: 1621, column: 4, scope: !3509)
!3518 = !DILocation(line: 1622, column: 12, scope: !3519)
!3519 = distinct !DILexicalBlock(scope: !3520, file: !1, line: 1622, column: 5)
!3520 = distinct !DILexicalBlock(scope: !3512, file: !1, line: 1621, column: 64)
!3521 = !DILocation(line: 1622, column: 10, scope: !3519)
!3522 = !DILocation(line: 1622, column: 17, scope: !3523)
!3523 = distinct !DILexicalBlock(scope: !3519, file: !1, line: 1622, column: 5)
!3524 = !DILocation(line: 1622, column: 19, scope: !3523)
!3525 = !DILocation(line: 1622, column: 5, scope: !3519)
!3526 = !DILocation(line: 1623, column: 33, scope: !3527)
!3527 = distinct !DILexicalBlock(scope: !3523, file: !1, line: 1622, column: 29)
!3528 = !DILocation(line: 1623, column: 40, scope: !3527)
!3529 = !DILocation(line: 1623, column: 31, scope: !3527)
!3530 = !DILocation(line: 1623, column: 44, scope: !3527)
!3531 = !DILocation(line: 1623, column: 50, scope: !3527)
!3532 = !DILocation(line: 1623, column: 6, scope: !3527)
!3533 = !DILocation(line: 1624, column: 5, scope: !3527)
!3534 = !DILocation(line: 1622, column: 25, scope: !3523)
!3535 = !DILocation(line: 1622, column: 5, scope: !3523)
!3536 = distinct !{!3536, !3525, !3537}
!3537 = !DILocation(line: 1624, column: 5, scope: !3519)
!3538 = !DILocation(line: 1625, column: 4, scope: !3520)
!3539 = !DILocation(line: 1621, column: 39, scope: !3512)
!3540 = !DILocation(line: 1621, column: 48, scope: !3512)
!3541 = !DILocation(line: 1621, column: 60, scope: !3512)
!3542 = !DILocation(line: 1621, column: 4, scope: !3512)
!3543 = distinct !{!3543, !3517, !3544}
!3544 = !DILocation(line: 1625, column: 4, scope: !3509)
!3545 = !DILocation(line: 1626, column: 3, scope: !3469)
!3546 = !DILocation(line: 1627, column: 2, scope: !3460)
!3547 = !DILocation(line: 1629, column: 9, scope: !3254)
!3548 = !DILocation(line: 1629, column: 2, scope: !3254)
!3549 = !DILocation(line: 1630, column: 1, scope: !3254)
!3550 = distinct !DISubprogram(name: "emDM_calcNormals", scope: !1, file: !1, line: 165, type: !235, scopeLine: 166, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1952)
!3551 = !DILocalVariable(name: "dm", arg: 1, scope: !3550, file: !1, line: 165, type: !154)
!3552 = !DILocation(line: 165, column: 43, scope: !3550)
!3553 = !DILocation(line: 169, column: 2, scope: !3550)
!3554 = !DILocation(line: 169, column: 6, scope: !3550)
!3555 = !DILocation(line: 169, column: 12, scope: !3550)
!3556 = !DILocation(line: 170, column: 1, scope: !3550)
!3557 = distinct !DISubprogram(name: "emDM_calcLoopNormals", scope: !1, file: !1, line: 172, type: !239, scopeLine: 173, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1952)
!3558 = !DILocalVariable(name: "dm", arg: 1, scope: !3557, file: !1, line: 172, type: !154)
!3559 = !DILocation(line: 172, column: 47, scope: !3557)
!3560 = !DILocalVariable(name: "split_angle", arg: 2, scope: !3557, file: !1, line: 172, type: !241)
!3561 = !DILocation(line: 172, column: 63, scope: !3557)
!3562 = !DILocalVariable(name: "bmdm", scope: !3557, file: !1, line: 174, type: !1700)
!3563 = !DILocation(line: 174, column: 20, scope: !3557)
!3564 = !DILocation(line: 174, column: 47, scope: !3557)
!3565 = !DILocation(line: 174, column: 27, scope: !3557)
!3566 = !DILocalVariable(name: "bm", scope: !3557, file: !1, line: 175, type: !1847)
!3567 = !DILocation(line: 175, column: 9, scope: !3557)
!3568 = !DILocation(line: 175, column: 14, scope: !3557)
!3569 = !DILocation(line: 175, column: 20, scope: !3557)
!3570 = !DILocation(line: 175, column: 24, scope: !3557)
!3571 = !DILocalVariable(name: "vertexCos", scope: !3557, file: !1, line: 176, type: !1698)
!3572 = !DILocation(line: 176, column: 16, scope: !3557)
!3573 = !DILocalVariable(name: "vertexNos", scope: !3557, file: !1, line: 176, type: !1698)
!3574 = !DILocation(line: 176, column: 33, scope: !3557)
!3575 = !DILocalVariable(name: "polyNos", scope: !3557, file: !1, line: 176, type: !1698)
!3576 = !DILocation(line: 176, column: 50, scope: !3557)
!3577 = !DILocalVariable(name: "loopNos", scope: !3557, file: !1, line: 177, type: !473)
!3578 = !DILocation(line: 177, column: 10, scope: !3557)
!3579 = !DILocation(line: 180, column: 25, scope: !3557)
!3580 = !DILocation(line: 180, column: 2, scope: !3557)
!3581 = !DILocation(line: 181, column: 25, scope: !3557)
!3582 = !DILocation(line: 181, column: 2, scope: !3557)
!3583 = !DILocation(line: 182, column: 2, scope: !3557)
!3584 = !DILocation(line: 182, column: 6, scope: !3557)
!3585 = !DILocation(line: 182, column: 12, scope: !3557)
!3586 = !DILocation(line: 184, column: 14, scope: !3557)
!3587 = !DILocation(line: 184, column: 20, scope: !3557)
!3588 = !DILocation(line: 184, column: 12, scope: !3557)
!3589 = !DILocation(line: 185, column: 14, scope: !3557)
!3590 = !DILocation(line: 185, column: 20, scope: !3557)
!3591 = !DILocation(line: 185, column: 12, scope: !3557)
!3592 = !DILocation(line: 186, column: 12, scope: !3557)
!3593 = !DILocation(line: 186, column: 18, scope: !3557)
!3594 = !DILocation(line: 186, column: 10, scope: !3557)
!3595 = !DILocation(line: 188, column: 12, scope: !3557)
!3596 = !DILocation(line: 188, column: 16, scope: !3557)
!3597 = !DILocation(line: 188, column: 33, scope: !3557)
!3598 = !DILocation(line: 188, column: 10, scope: !3557)
!3599 = !DILocation(line: 189, column: 7, scope: !3600)
!3600 = distinct !DILexicalBlock(scope: !3557, file: !1, line: 189, column: 6)
!3601 = !DILocation(line: 189, column: 6, scope: !3557)
!3602 = !DILocation(line: 190, column: 21, scope: !3603)
!3603 = distinct !DILexicalBlock(scope: !3600, file: !1, line: 189, column: 16)
!3604 = !DILocation(line: 190, column: 3, scope: !3603)
!3605 = !DILocation(line: 191, column: 13, scope: !3603)
!3606 = !DILocation(line: 191, column: 17, scope: !3603)
!3607 = !DILocation(line: 191, column: 34, scope: !3603)
!3608 = !DILocation(line: 191, column: 11, scope: !3603)
!3609 = !DILocation(line: 192, column: 2, scope: !3603)
!3610 = !DILocation(line: 194, column: 28, scope: !3557)
!3611 = !DILocation(line: 194, column: 32, scope: !3557)
!3612 = !DILocation(line: 194, column: 43, scope: !3557)
!3613 = !DILocation(line: 194, column: 54, scope: !3557)
!3614 = !DILocation(line: 194, column: 63, scope: !3557)
!3615 = !DILocation(line: 194, column: 76, scope: !3557)
!3616 = !DILocation(line: 194, column: 2, scope: !3557)
!3617 = !DILocation(line: 195, column: 1, scope: !3557)
!3618 = distinct !DISubprogram(name: "emDM_recalcTessellation", scope: !1, file: !1, line: 197, type: !235, scopeLine: 198, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1952)
!3619 = !DILocalVariable(name: "UNUSED_dm", arg: 1, scope: !3618, file: !1, line: 197, type: !154)
!3620 = !DILocation(line: 197, column: 50, scope: !3618)
!3621 = !DILocation(line: 200, column: 1, scope: !3618)
!3622 = distinct !DISubprogram(name: "emDM_foreachMappedVert", scope: !1, file: !1, line: 202, type: !433, scopeLine: 207, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1952)
!3623 = !DILocalVariable(name: "dm", arg: 1, scope: !3622, file: !1, line: 203, type: !154)
!3624 = !DILocation(line: 203, column: 22, scope: !3622)
!3625 = !DILocalVariable(name: "func", arg: 2, scope: !3622, file: !1, line: 204, type: !435)
!3626 = !DILocation(line: 204, column: 16, scope: !3622)
!3627 = !DILocalVariable(name: "userData", arg: 3, scope: !3622, file: !1, line: 205, type: !182)
!3628 = !DILocation(line: 205, column: 15, scope: !3622)
!3629 = !DILocalVariable(name: "flag", arg: 4, scope: !3622, file: !1, line: 206, type: !441)
!3630 = !DILocation(line: 206, column: 23, scope: !3622)
!3631 = !DILocalVariable(name: "bmdm", scope: !3622, file: !1, line: 208, type: !1700)
!3632 = !DILocation(line: 208, column: 20, scope: !3622)
!3633 = !DILocation(line: 208, column: 47, scope: !3622)
!3634 = !DILocation(line: 208, column: 27, scope: !3622)
!3635 = !DILocalVariable(name: "bm", scope: !3622, file: !1, line: 209, type: !1847)
!3636 = !DILocation(line: 209, column: 9, scope: !3622)
!3637 = !DILocation(line: 209, column: 14, scope: !3622)
!3638 = !DILocation(line: 209, column: 20, scope: !3622)
!3639 = !DILocation(line: 209, column: 24, scope: !3622)
!3640 = !DILocalVariable(name: "eve", scope: !3622, file: !1, line: 210, type: !1730)
!3641 = !DILocation(line: 210, column: 10, scope: !3622)
!3642 = !DILocalVariable(name: "iter", scope: !3622, file: !1, line: 211, type: !2184)
!3643 = !DILocation(line: 211, column: 9, scope: !3622)
!3644 = !DILocalVariable(name: "i", scope: !3622, file: !1, line: 212, type: !168)
!3645 = !DILocation(line: 212, column: 6, scope: !3622)
!3646 = !DILocation(line: 214, column: 6, scope: !3647)
!3647 = distinct !DILexicalBlock(scope: !3622, file: !1, line: 214, column: 6)
!3648 = !DILocation(line: 214, column: 12, scope: !3647)
!3649 = !DILocation(line: 214, column: 6, scope: !3622)
!3650 = !DILocalVariable(name: "vertexCos", scope: !3651, file: !1, line: 215, type: !1698)
!3651 = distinct !DILexicalBlock(scope: !3647, file: !1, line: 214, column: 23)
!3652 = !DILocation(line: 215, column: 17, scope: !3651)
!3653 = !DILocation(line: 215, column: 33, scope: !3651)
!3654 = !DILocation(line: 215, column: 39, scope: !3651)
!3655 = !DILocalVariable(name: "vertexNos", scope: !3651, file: !1, line: 216, type: !1698)
!3656 = !DILocation(line: 216, column: 17, scope: !3651)
!3657 = !DILocation(line: 218, column: 7, scope: !3658)
!3658 = distinct !DILexicalBlock(scope: !3651, file: !1, line: 218, column: 7)
!3659 = !DILocation(line: 218, column: 12, scope: !3658)
!3660 = !DILocation(line: 218, column: 7, scope: !3651)
!3661 = !DILocation(line: 219, column: 27, scope: !3662)
!3662 = distinct !DILexicalBlock(scope: !3658, file: !1, line: 218, column: 37)
!3663 = !DILocation(line: 219, column: 4, scope: !3662)
!3664 = !DILocation(line: 220, column: 16, scope: !3662)
!3665 = !DILocation(line: 220, column: 22, scope: !3662)
!3666 = !DILocation(line: 220, column: 14, scope: !3662)
!3667 = !DILocation(line: 221, column: 3, scope: !3662)
!3668 = !DILocation(line: 223, column: 14, scope: !3669)
!3669 = distinct !DILexicalBlock(scope: !3658, file: !1, line: 222, column: 8)
!3670 = !DILocation(line: 226, column: 3, scope: !3671)
!3671 = distinct !DILexicalBlock(scope: !3651, file: !1, line: 226, column: 3)
!3672 = !DILocation(line: 226, column: 3, scope: !3673)
!3673 = distinct !DILexicalBlock(scope: !3671, file: !1, line: 226, column: 3)
!3674 = !DILocalVariable(name: "no", scope: !3675, file: !1, line: 227, type: !438)
!3675 = distinct !DILexicalBlock(scope: !3673, file: !1, line: 226, column: 60)
!3676 = !DILocation(line: 227, column: 17, scope: !3675)
!3677 = !DILocation(line: 227, column: 23, scope: !3675)
!3678 = !DILocation(line: 227, column: 28, scope: !3675)
!3679 = !DILocation(line: 227, column: 22, scope: !3675)
!3680 = !DILocation(line: 227, column: 55, scope: !3675)
!3681 = !DILocation(line: 227, column: 65, scope: !3675)
!3682 = !DILocation(line: 228, column: 4, scope: !3675)
!3683 = !DILocation(line: 228, column: 9, scope: !3675)
!3684 = !DILocation(line: 228, column: 19, scope: !3675)
!3685 = !DILocation(line: 228, column: 22, scope: !3675)
!3686 = !DILocation(line: 228, column: 32, scope: !3675)
!3687 = !DILocation(line: 228, column: 36, scope: !3675)
!3688 = !DILocation(line: 229, column: 3, scope: !3675)
!3689 = distinct !{!3689, !3670, !3690}
!3690 = !DILocation(line: 229, column: 3, scope: !3671)
!3691 = !DILocation(line: 230, column: 2, scope: !3651)
!3692 = !DILocation(line: 232, column: 3, scope: !3693)
!3693 = distinct !DILexicalBlock(scope: !3694, file: !1, line: 232, column: 3)
!3694 = distinct !DILexicalBlock(scope: !3647, file: !1, line: 231, column: 7)
!3695 = !DILocation(line: 232, column: 3, scope: !3696)
!3696 = distinct !DILexicalBlock(scope: !3693, file: !1, line: 232, column: 3)
!3697 = !DILocalVariable(name: "no", scope: !3698, file: !1, line: 233, type: !438)
!3698 = distinct !DILexicalBlock(scope: !3696, file: !1, line: 232, column: 60)
!3699 = !DILocation(line: 233, column: 17, scope: !3698)
!3700 = !DILocation(line: 233, column: 23, scope: !3698)
!3701 = !DILocation(line: 233, column: 28, scope: !3698)
!3702 = !DILocation(line: 233, column: 22, scope: !3698)
!3703 = !DILocation(line: 233, column: 55, scope: !3698)
!3704 = !DILocation(line: 233, column: 60, scope: !3698)
!3705 = !DILocation(line: 234, column: 4, scope: !3698)
!3706 = !DILocation(line: 234, column: 9, scope: !3698)
!3707 = !DILocation(line: 234, column: 19, scope: !3698)
!3708 = !DILocation(line: 234, column: 22, scope: !3698)
!3709 = !DILocation(line: 234, column: 27, scope: !3698)
!3710 = !DILocation(line: 234, column: 31, scope: !3698)
!3711 = !DILocation(line: 235, column: 3, scope: !3698)
!3712 = distinct !{!3712, !3692, !3713}
!3713 = !DILocation(line: 235, column: 3, scope: !3693)
!3714 = !DILocation(line: 237, column: 1, scope: !3622)
!3715 = distinct !DISubprogram(name: "emDM_foreachMappedLoop", scope: !1, file: !1, line: 379, type: !451, scopeLine: 384, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1952)
!3716 = !DILocalVariable(name: "dm", arg: 1, scope: !3715, file: !1, line: 380, type: !154)
!3717 = !DILocation(line: 380, column: 22, scope: !3715)
!3718 = !DILocalVariable(name: "func", arg: 2, scope: !3715, file: !1, line: 381, type: !453)
!3719 = !DILocation(line: 381, column: 16, scope: !3715)
!3720 = !DILocalVariable(name: "userData", arg: 3, scope: !3715, file: !1, line: 382, type: !182)
!3721 = !DILocation(line: 382, column: 15, scope: !3715)
!3722 = !DILocalVariable(name: "flag", arg: 4, scope: !3715, file: !1, line: 383, type: !441)
!3723 = !DILocation(line: 383, column: 23, scope: !3715)
!3724 = !DILocalVariable(name: "lnors", scope: !3715, file: !1, line: 387, type: !1698)
!3725 = !DILocation(line: 387, column: 16, scope: !3715)
!3726 = !DILocation(line: 387, column: 29, scope: !3715)
!3727 = !DILocation(line: 387, column: 34, scope: !3715)
!3728 = !DILocation(line: 387, column: 28, scope: !3715)
!3729 = !DILocation(line: 387, column: 84, scope: !3715)
!3730 = !DILocation(line: 387, column: 61, scope: !3715)
!3731 = !DILocalVariable(name: "bmdm", scope: !3715, file: !1, line: 389, type: !1700)
!3732 = !DILocation(line: 389, column: 20, scope: !3715)
!3733 = !DILocation(line: 389, column: 47, scope: !3715)
!3734 = !DILocation(line: 389, column: 27, scope: !3715)
!3735 = !DILocalVariable(name: "bm", scope: !3715, file: !1, line: 390, type: !1847)
!3736 = !DILocation(line: 390, column: 9, scope: !3715)
!3737 = !DILocation(line: 390, column: 14, scope: !3715)
!3738 = !DILocation(line: 390, column: 20, scope: !3715)
!3739 = !DILocation(line: 390, column: 24, scope: !3715)
!3740 = !DILocalVariable(name: "efa", scope: !3715, file: !1, line: 391, type: !1795)
!3741 = !DILocation(line: 391, column: 10, scope: !3715)
!3742 = !DILocalVariable(name: "iter", scope: !3715, file: !1, line: 392, type: !2184)
!3743 = !DILocation(line: 392, column: 9, scope: !3715)
!3744 = !DILocalVariable(name: "vertexCos", scope: !3715, file: !1, line: 394, type: !1698)
!3745 = !DILocation(line: 394, column: 16, scope: !3715)
!3746 = !DILocation(line: 394, column: 32, scope: !3715)
!3747 = !DILocation(line: 394, column: 38, scope: !3715)
!3748 = !DILocalVariable(name: "f_idx", scope: !3715, file: !1, line: 395, type: !168)
!3749 = !DILocation(line: 395, column: 6, scope: !3715)
!3750 = !DILocation(line: 397, column: 28, scope: !3715)
!3751 = !DILocation(line: 397, column: 2, scope: !3715)
!3752 = !DILocation(line: 399, column: 2, scope: !3753)
!3753 = distinct !DILexicalBlock(scope: !3715, file: !1, line: 399, column: 2)
!3754 = !DILocation(line: 399, column: 2, scope: !3755)
!3755 = distinct !DILexicalBlock(scope: !3753, file: !1, line: 399, column: 2)
!3756 = !DILocalVariable(name: "l_iter", scope: !3757, file: !1, line: 400, type: !1773)
!3757 = distinct !DILexicalBlock(scope: !3755, file: !1, line: 399, column: 63)
!3758 = !DILocation(line: 400, column: 11, scope: !3757)
!3759 = !DILocalVariable(name: "l_first", scope: !3757, file: !1, line: 400, type: !1773)
!3760 = !DILocation(line: 400, column: 20, scope: !3757)
!3761 = !DILocation(line: 402, column: 22, scope: !3757)
!3762 = !DILocation(line: 402, column: 20, scope: !3757)
!3763 = !DILocation(line: 402, column: 10, scope: !3757)
!3764 = !DILocation(line: 403, column: 3, scope: !3757)
!3765 = !DILocalVariable(name: "eve", scope: !3766, file: !1, line: 404, type: !3767)
!3766 = distinct !DILexicalBlock(scope: !3757, file: !1, line: 403, column: 6)
!3767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3768, size: 64)
!3768 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1731)
!3769 = !DILocation(line: 404, column: 18, scope: !3766)
!3770 = !DILocation(line: 404, column: 24, scope: !3766)
!3771 = !DILocation(line: 404, column: 32, scope: !3766)
!3772 = !DILocalVariable(name: "v_idx", scope: !3766, file: !1, line: 405, type: !1967)
!3773 = !DILocation(line: 405, column: 14, scope: !3766)
!3774 = !DILocation(line: 405, column: 22, scope: !3766)
!3775 = !DILocalVariable(name: "no", scope: !3766, file: !1, line: 406, type: !438)
!3776 = !DILocation(line: 406, column: 17, scope: !3766)
!3777 = !DILocation(line: 406, column: 22, scope: !3766)
!3778 = !DILocation(line: 406, column: 36, scope: !3766)
!3779 = !DILocation(line: 406, column: 30, scope: !3766)
!3780 = !DILocation(line: 407, column: 4, scope: !3766)
!3781 = !DILocation(line: 407, column: 9, scope: !3766)
!3782 = !DILocation(line: 407, column: 19, scope: !3766)
!3783 = !DILocation(line: 407, column: 26, scope: !3766)
!3784 = !DILocation(line: 407, column: 33, scope: !3766)
!3785 = !DILocation(line: 407, column: 45, scope: !3766)
!3786 = !DILocation(line: 407, column: 55, scope: !3766)
!3787 = !DILocation(line: 407, column: 64, scope: !3766)
!3788 = !DILocation(line: 407, column: 69, scope: !3766)
!3789 = !DILocation(line: 407, column: 73, scope: !3766)
!3790 = !DILocation(line: 408, column: 3, scope: !3766)
!3791 = !DILocation(line: 408, column: 22, scope: !3757)
!3792 = !DILocation(line: 408, column: 30, scope: !3757)
!3793 = !DILocation(line: 408, column: 20, scope: !3757)
!3794 = !DILocation(line: 408, column: 39, scope: !3757)
!3795 = !DILocation(line: 408, column: 36, scope: !3757)
!3796 = distinct !{!3796, !3764, !3797}
!3797 = !DILocation(line: 408, column: 46, scope: !3757)
!3798 = !DILocation(line: 409, column: 2, scope: !3757)
!3799 = distinct !{!3799, !3752, !3800}
!3800 = !DILocation(line: 409, column: 2, scope: !3753)
!3801 = !DILocation(line: 410, column: 1, scope: !3715)
!3802 = distinct !DISubprogram(name: "emDM_foreachMappedEdge", scope: !1, file: !1, line: 238, type: !444, scopeLine: 241, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1952)
!3803 = !DILocalVariable(name: "dm", arg: 1, scope: !3802, file: !1, line: 238, type: !154)
!3804 = !DILocation(line: 238, column: 49, scope: !3802)
!3805 = !DILocalVariable(name: "func", arg: 2, scope: !3802, file: !1, line: 239, type: !446)
!3806 = !DILocation(line: 239, column: 43, scope: !3802)
!3807 = !DILocalVariable(name: "userData", arg: 3, scope: !3802, file: !1, line: 240, type: !182)
!3808 = !DILocation(line: 240, column: 42, scope: !3802)
!3809 = !DILocalVariable(name: "bmdm", scope: !3802, file: !1, line: 242, type: !1700)
!3810 = !DILocation(line: 242, column: 20, scope: !3802)
!3811 = !DILocation(line: 242, column: 47, scope: !3802)
!3812 = !DILocation(line: 242, column: 27, scope: !3802)
!3813 = !DILocalVariable(name: "bm", scope: !3802, file: !1, line: 243, type: !1847)
!3814 = !DILocation(line: 243, column: 9, scope: !3802)
!3815 = !DILocation(line: 243, column: 14, scope: !3802)
!3816 = !DILocation(line: 243, column: 20, scope: !3802)
!3817 = !DILocation(line: 243, column: 24, scope: !3802)
!3818 = !DILocalVariable(name: "eed", scope: !3802, file: !1, line: 244, type: !1791)
!3819 = !DILocation(line: 244, column: 10, scope: !3802)
!3820 = !DILocalVariable(name: "iter", scope: !3802, file: !1, line: 245, type: !2184)
!3821 = !DILocation(line: 245, column: 9, scope: !3802)
!3822 = !DILocalVariable(name: "i", scope: !3802, file: !1, line: 246, type: !168)
!3823 = !DILocation(line: 246, column: 6, scope: !3802)
!3824 = !DILocation(line: 248, column: 6, scope: !3825)
!3825 = distinct !DILexicalBlock(scope: !3802, file: !1, line: 248, column: 6)
!3826 = !DILocation(line: 248, column: 12, scope: !3825)
!3827 = !DILocation(line: 248, column: 6, scope: !3802)
!3828 = !DILocation(line: 250, column: 29, scope: !3829)
!3829 = distinct !DILexicalBlock(scope: !3825, file: !1, line: 248, column: 23)
!3830 = !DILocation(line: 250, column: 3, scope: !3829)
!3831 = !DILocation(line: 252, column: 3, scope: !3832)
!3832 = distinct !DILexicalBlock(scope: !3829, file: !1, line: 252, column: 3)
!3833 = !DILocation(line: 252, column: 3, scope: !3834)
!3834 = distinct !DILexicalBlock(scope: !3832, file: !1, line: 252, column: 3)
!3835 = !DILocation(line: 253, column: 4, scope: !3836)
!3836 = distinct !DILexicalBlock(scope: !3834, file: !1, line: 252, column: 60)
!3837 = !DILocation(line: 253, column: 9, scope: !3836)
!3838 = !DILocation(line: 253, column: 19, scope: !3836)
!3839 = !DILocation(line: 254, column: 9, scope: !3836)
!3840 = !DILocation(line: 254, column: 15, scope: !3836)
!3841 = !DILocation(line: 254, column: 25, scope: !3836)
!3842 = !DILocation(line: 255, column: 9, scope: !3836)
!3843 = !DILocation(line: 255, column: 15, scope: !3836)
!3844 = !DILocation(line: 255, column: 25, scope: !3836)
!3845 = !DILocation(line: 256, column: 3, scope: !3836)
!3846 = distinct !{!3846, !3831, !3847}
!3847 = !DILocation(line: 256, column: 3, scope: !3832)
!3848 = !DILocation(line: 257, column: 2, scope: !3829)
!3849 = !DILocation(line: 259, column: 3, scope: !3850)
!3850 = distinct !DILexicalBlock(scope: !3851, file: !1, line: 259, column: 3)
!3851 = distinct !DILexicalBlock(scope: !3825, file: !1, line: 258, column: 7)
!3852 = !DILocation(line: 259, column: 3, scope: !3853)
!3853 = distinct !DILexicalBlock(scope: !3850, file: !1, line: 259, column: 3)
!3854 = !DILocation(line: 260, column: 4, scope: !3855)
!3855 = distinct !DILexicalBlock(scope: !3853, file: !1, line: 259, column: 60)
!3856 = !DILocation(line: 260, column: 9, scope: !3855)
!3857 = !DILocation(line: 260, column: 19, scope: !3855)
!3858 = !DILocation(line: 260, column: 22, scope: !3855)
!3859 = !DILocation(line: 260, column: 27, scope: !3855)
!3860 = !DILocation(line: 260, column: 31, scope: !3855)
!3861 = !DILocation(line: 260, column: 35, scope: !3855)
!3862 = !DILocation(line: 260, column: 40, scope: !3855)
!3863 = !DILocation(line: 260, column: 44, scope: !3855)
!3864 = !DILocation(line: 261, column: 3, scope: !3855)
!3865 = distinct !{!3865, !3849, !3866}
!3866 = !DILocation(line: 261, column: 3, scope: !3850)
!3867 = !DILocation(line: 263, column: 1, scope: !3802)
!3868 = distinct !DISubprogram(name: "emDM_foreachMappedFaceCenter", scope: !1, file: !1, line: 412, type: !458, scopeLine: 417, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1952)
!3869 = !DILocalVariable(name: "dm", arg: 1, scope: !3868, file: !1, line: 413, type: !154)
!3870 = !DILocation(line: 413, column: 22, scope: !3868)
!3871 = !DILocalVariable(name: "func", arg: 2, scope: !3868, file: !1, line: 414, type: !446)
!3872 = !DILocation(line: 414, column: 16, scope: !3868)
!3873 = !DILocalVariable(name: "userData", arg: 3, scope: !3868, file: !1, line: 415, type: !182)
!3874 = !DILocation(line: 415, column: 15, scope: !3868)
!3875 = !DILocalVariable(name: "flag", arg: 4, scope: !3868, file: !1, line: 416, type: !441)
!3876 = !DILocation(line: 416, column: 23, scope: !3868)
!3877 = !DILocalVariable(name: "bmdm", scope: !3868, file: !1, line: 418, type: !1700)
!3878 = !DILocation(line: 418, column: 20, scope: !3868)
!3879 = !DILocation(line: 418, column: 47, scope: !3868)
!3880 = !DILocation(line: 418, column: 27, scope: !3868)
!3881 = !DILocalVariable(name: "bm", scope: !3868, file: !1, line: 419, type: !1847)
!3882 = !DILocation(line: 419, column: 9, scope: !3868)
!3883 = !DILocation(line: 419, column: 14, scope: !3868)
!3884 = !DILocation(line: 419, column: 20, scope: !3868)
!3885 = !DILocation(line: 419, column: 24, scope: !3868)
!3886 = !DILocalVariable(name: "polyNos", scope: !3868, file: !1, line: 420, type: !1698)
!3887 = !DILocation(line: 420, column: 16, scope: !3868)
!3888 = !DILocalVariable(name: "polyCos", scope: !3868, file: !1, line: 421, type: !1698)
!3889 = !DILocation(line: 421, column: 16, scope: !3868)
!3890 = !DILocalVariable(name: "efa", scope: !3868, file: !1, line: 422, type: !1795)
!3891 = !DILocation(line: 422, column: 10, scope: !3868)
!3892 = !DILocalVariable(name: "iter", scope: !3868, file: !1, line: 423, type: !2184)
!3893 = !DILocation(line: 423, column: 9, scope: !3868)
!3894 = !DILocalVariable(name: "i", scope: !3868, file: !1, line: 424, type: !168)
!3895 = !DILocation(line: 424, column: 6, scope: !3868)
!3896 = !DILocation(line: 426, column: 25, scope: !3868)
!3897 = !DILocation(line: 426, column: 2, scope: !3868)
!3898 = !DILocation(line: 427, column: 12, scope: !3868)
!3899 = !DILocation(line: 427, column: 18, scope: !3868)
!3900 = !DILocation(line: 427, column: 10, scope: !3868)
!3901 = !DILocation(line: 429, column: 6, scope: !3902)
!3902 = distinct !DILexicalBlock(scope: !3868, file: !1, line: 429, column: 6)
!3903 = !DILocation(line: 429, column: 11, scope: !3902)
!3904 = !DILocation(line: 429, column: 6, scope: !3868)
!3905 = !DILocation(line: 430, column: 26, scope: !3906)
!3906 = distinct !DILexicalBlock(scope: !3902, file: !1, line: 429, column: 36)
!3907 = !DILocation(line: 430, column: 3, scope: !3906)
!3908 = !DILocation(line: 431, column: 13, scope: !3906)
!3909 = !DILocation(line: 431, column: 19, scope: !3906)
!3910 = !DILocation(line: 431, column: 11, scope: !3906)
!3911 = !DILocation(line: 432, column: 2, scope: !3906)
!3912 = !DILocation(line: 434, column: 11, scope: !3913)
!3913 = distinct !DILexicalBlock(scope: !3902, file: !1, line: 433, column: 7)
!3914 = !DILocation(line: 437, column: 6, scope: !3915)
!3915 = distinct !DILexicalBlock(scope: !3868, file: !1, line: 437, column: 6)
!3916 = !DILocation(line: 437, column: 6, scope: !3868)
!3917 = !DILocation(line: 438, column: 3, scope: !3918)
!3918 = distinct !DILexicalBlock(scope: !3919, file: !1, line: 438, column: 3)
!3919 = distinct !DILexicalBlock(scope: !3915, file: !1, line: 437, column: 15)
!3920 = !DILocation(line: 438, column: 3, scope: !3921)
!3921 = distinct !DILexicalBlock(scope: !3918, file: !1, line: 438, column: 3)
!3922 = !DILocalVariable(name: "no", scope: !3923, file: !1, line: 439, type: !438)
!3923 = distinct !DILexicalBlock(scope: !3921, file: !1, line: 438, column: 60)
!3924 = !DILocation(line: 439, column: 17, scope: !3923)
!3925 = !DILocation(line: 439, column: 22, scope: !3923)
!3926 = !DILocation(line: 439, column: 30, scope: !3923)
!3927 = !DILocation(line: 440, column: 4, scope: !3923)
!3928 = !DILocation(line: 440, column: 9, scope: !3923)
!3929 = !DILocation(line: 440, column: 19, scope: !3923)
!3930 = !DILocation(line: 440, column: 22, scope: !3923)
!3931 = !DILocation(line: 440, column: 30, scope: !3923)
!3932 = !DILocation(line: 440, column: 34, scope: !3923)
!3933 = !DILocation(line: 441, column: 3, scope: !3923)
!3934 = distinct !{!3934, !3917, !3935}
!3935 = !DILocation(line: 441, column: 3, scope: !3918)
!3936 = !DILocation(line: 442, column: 2, scope: !3919)
!3937 = !DILocation(line: 444, column: 3, scope: !3938)
!3938 = distinct !DILexicalBlock(scope: !3939, file: !1, line: 444, column: 3)
!3939 = distinct !DILexicalBlock(scope: !3915, file: !1, line: 443, column: 7)
!3940 = !DILocation(line: 444, column: 3, scope: !3941)
!3941 = distinct !DILexicalBlock(scope: !3938, file: !1, line: 444, column: 3)
!3942 = !DILocalVariable(name: "no", scope: !3943, file: !1, line: 445, type: !438)
!3943 = distinct !DILexicalBlock(scope: !3941, file: !1, line: 444, column: 60)
!3944 = !DILocation(line: 445, column: 17, scope: !3943)
!3945 = !DILocation(line: 445, column: 23, scope: !3943)
!3946 = !DILocation(line: 445, column: 28, scope: !3943)
!3947 = !DILocation(line: 445, column: 22, scope: !3943)
!3948 = !DILocation(line: 445, column: 55, scope: !3943)
!3949 = !DILocation(line: 445, column: 60, scope: !3943)
!3950 = !DILocation(line: 446, column: 4, scope: !3943)
!3951 = !DILocation(line: 446, column: 9, scope: !3943)
!3952 = !DILocation(line: 446, column: 19, scope: !3943)
!3953 = !DILocation(line: 446, column: 22, scope: !3943)
!3954 = !DILocation(line: 446, column: 30, scope: !3943)
!3955 = !DILocation(line: 446, column: 34, scope: !3943)
!3956 = !DILocation(line: 447, column: 3, scope: !3943)
!3957 = distinct !{!3957, !3937, !3958}
!3958 = !DILocation(line: 447, column: 3, scope: !3938)
!3959 = !DILocation(line: 449, column: 1, scope: !3868)
!3960 = distinct !DISubprogram(name: "emDM_drawEdges", scope: !1, file: !1, line: 299, type: !1616, scopeLine: 302, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1952)
!3961 = !DILocalVariable(name: "dm", arg: 1, scope: !3960, file: !1, line: 299, type: !154)
!3962 = !DILocation(line: 299, column: 41, scope: !3960)
!3963 = !DILocalVariable(name: "UNUSED_drawLooseEdges", arg: 2, scope: !3960, file: !1, line: 300, type: !871)
!3964 = !DILocation(line: 300, column: 33, scope: !3960)
!3965 = !DILocalVariable(name: "UNUSED_drawAllEdges", arg: 3, scope: !3960, file: !1, line: 301, type: !871)
!3966 = !DILocation(line: 301, column: 33, scope: !3960)
!3967 = !DILocation(line: 303, column: 23, scope: !3960)
!3968 = !DILocation(line: 303, column: 2, scope: !3960)
!3969 = !DILocation(line: 304, column: 1, scope: !3960)
!3970 = distinct !DISubprogram(name: "emDM_drawMappedEdges", scope: !1, file: !1, line: 265, type: !1677, scopeLine: 268, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1952)
!3971 = !DILocalVariable(name: "dm", arg: 1, scope: !3970, file: !1, line: 265, type: !154)
!3972 = !DILocation(line: 265, column: 47, scope: !3970)
!3973 = !DILocalVariable(name: "setDrawOptions", arg: 2, scope: !3970, file: !1, line: 266, type: !1663)
!3974 = !DILocation(line: 266, column: 51, scope: !3970)
!3975 = !DILocalVariable(name: "userData", arg: 3, scope: !3970, file: !1, line: 267, type: !182)
!3976 = !DILocation(line: 267, column: 40, scope: !3970)
!3977 = !DILocalVariable(name: "bmdm", scope: !3970, file: !1, line: 269, type: !1700)
!3978 = !DILocation(line: 269, column: 20, scope: !3970)
!3979 = !DILocation(line: 269, column: 47, scope: !3970)
!3980 = !DILocation(line: 269, column: 27, scope: !3970)
!3981 = !DILocalVariable(name: "bm", scope: !3970, file: !1, line: 270, type: !1847)
!3982 = !DILocation(line: 270, column: 9, scope: !3970)
!3983 = !DILocation(line: 270, column: 14, scope: !3970)
!3984 = !DILocation(line: 270, column: 20, scope: !3970)
!3985 = !DILocation(line: 270, column: 24, scope: !3970)
!3986 = !DILocalVariable(name: "eed", scope: !3970, file: !1, line: 271, type: !1791)
!3987 = !DILocation(line: 271, column: 10, scope: !3970)
!3988 = !DILocalVariable(name: "iter", scope: !3970, file: !1, line: 272, type: !2184)
!3989 = !DILocation(line: 272, column: 9, scope: !3970)
!3990 = !DILocalVariable(name: "i", scope: !3970, file: !1, line: 273, type: !168)
!3991 = !DILocation(line: 273, column: 6, scope: !3970)
!3992 = !DILocation(line: 275, column: 6, scope: !3993)
!3993 = distinct !DILexicalBlock(scope: !3970, file: !1, line: 275, column: 6)
!3994 = !DILocation(line: 275, column: 12, scope: !3993)
!3995 = !DILocation(line: 275, column: 6, scope: !3970)
!3996 = !DILocation(line: 277, column: 29, scope: !3997)
!3997 = distinct !DILexicalBlock(scope: !3993, file: !1, line: 275, column: 23)
!3998 = !DILocation(line: 277, column: 3, scope: !3997)
!3999 = !DILocation(line: 279, column: 3, scope: !3997)
!4000 = !DILocation(line: 280, column: 3, scope: !4001)
!4001 = distinct !DILexicalBlock(scope: !3997, file: !1, line: 280, column: 3)
!4002 = !DILocation(line: 280, column: 3, scope: !4003)
!4003 = distinct !DILexicalBlock(scope: !4001, file: !1, line: 280, column: 3)
!4004 = !DILocation(line: 281, column: 9, scope: !4005)
!4005 = distinct !DILexicalBlock(scope: !4006, file: !1, line: 281, column: 8)
!4006 = distinct !DILexicalBlock(scope: !4003, file: !1, line: 280, column: 60)
!4007 = !DILocation(line: 281, column: 24, scope: !4005)
!4008 = !DILocation(line: 281, column: 28, scope: !4005)
!4009 = !DILocation(line: 281, column: 43, scope: !4005)
!4010 = !DILocation(line: 281, column: 53, scope: !4005)
!4011 = !DILocation(line: 281, column: 56, scope: !4005)
!4012 = !DILocation(line: 281, column: 8, scope: !4006)
!4013 = !DILocation(line: 282, column: 17, scope: !4014)
!4014 = distinct !DILexicalBlock(scope: !4005, file: !1, line: 281, column: 81)
!4015 = !DILocation(line: 282, column: 23, scope: !4014)
!4016 = !DILocation(line: 282, column: 33, scope: !4014)
!4017 = !DILocation(line: 282, column: 5, scope: !4014)
!4018 = !DILocation(line: 283, column: 17, scope: !4014)
!4019 = !DILocation(line: 283, column: 23, scope: !4014)
!4020 = !DILocation(line: 283, column: 33, scope: !4014)
!4021 = !DILocation(line: 283, column: 5, scope: !4014)
!4022 = !DILocation(line: 284, column: 4, scope: !4014)
!4023 = !DILocation(line: 285, column: 3, scope: !4006)
!4024 = distinct !{!4024, !4000, !4025}
!4025 = !DILocation(line: 285, column: 3, scope: !4001)
!4026 = !DILocation(line: 286, column: 3, scope: !3997)
!4027 = !DILocation(line: 287, column: 2, scope: !3997)
!4028 = !DILocation(line: 289, column: 3, scope: !4029)
!4029 = distinct !DILexicalBlock(scope: !3993, file: !1, line: 288, column: 7)
!4030 = !DILocation(line: 290, column: 3, scope: !4031)
!4031 = distinct !DILexicalBlock(scope: !4029, file: !1, line: 290, column: 3)
!4032 = !DILocation(line: 290, column: 3, scope: !4033)
!4033 = distinct !DILexicalBlock(scope: !4031, file: !1, line: 290, column: 3)
!4034 = !DILocation(line: 291, column: 9, scope: !4035)
!4035 = distinct !DILexicalBlock(scope: !4036, file: !1, line: 291, column: 8)
!4036 = distinct !DILexicalBlock(scope: !4033, file: !1, line: 290, column: 60)
!4037 = !DILocation(line: 291, column: 24, scope: !4035)
!4038 = !DILocation(line: 291, column: 28, scope: !4035)
!4039 = !DILocation(line: 291, column: 43, scope: !4035)
!4040 = !DILocation(line: 291, column: 53, scope: !4035)
!4041 = !DILocation(line: 291, column: 56, scope: !4035)
!4042 = !DILocation(line: 291, column: 8, scope: !4036)
!4043 = !DILocation(line: 292, column: 17, scope: !4044)
!4044 = distinct !DILexicalBlock(scope: !4035, file: !1, line: 291, column: 81)
!4045 = !DILocation(line: 292, column: 22, scope: !4044)
!4046 = !DILocation(line: 292, column: 26, scope: !4044)
!4047 = !DILocation(line: 292, column: 5, scope: !4044)
!4048 = !DILocation(line: 293, column: 17, scope: !4044)
!4049 = !DILocation(line: 293, column: 22, scope: !4044)
!4050 = !DILocation(line: 293, column: 26, scope: !4044)
!4051 = !DILocation(line: 293, column: 5, scope: !4044)
!4052 = !DILocation(line: 294, column: 4, scope: !4044)
!4053 = !DILocation(line: 295, column: 3, scope: !4036)
!4054 = distinct !{!4054, !4030, !4055}
!4055 = !DILocation(line: 295, column: 3, scope: !4031)
!4056 = !DILocation(line: 296, column: 3, scope: !4029)
!4057 = !DILocation(line: 298, column: 1, scope: !3970)
!4058 = distinct !DISubprogram(name: "emDM_drawMappedEdgesInterp", scope: !1, file: !1, line: 306, type: !1681, scopeLine: 310, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1952)
!4059 = !DILocalVariable(name: "dm", arg: 1, scope: !4058, file: !1, line: 306, type: !154)
!4060 = !DILocation(line: 306, column: 53, scope: !4058)
!4061 = !DILocalVariable(name: "setDrawOptions", arg: 2, scope: !4058, file: !1, line: 307, type: !1663)
!4062 = !DILocation(line: 307, column: 57, scope: !4058)
!4063 = !DILocalVariable(name: "setDrawInterpOptions", arg: 3, scope: !4058, file: !1, line: 308, type: !1683)
!4064 = !DILocation(line: 308, column: 63, scope: !4058)
!4065 = !DILocalVariable(name: "userData", arg: 4, scope: !4058, file: !1, line: 309, type: !182)
!4066 = !DILocation(line: 309, column: 46, scope: !4058)
!4067 = !DILocalVariable(name: "bmdm", scope: !4058, file: !1, line: 311, type: !1700)
!4068 = !DILocation(line: 311, column: 20, scope: !4058)
!4069 = !DILocation(line: 311, column: 47, scope: !4058)
!4070 = !DILocation(line: 311, column: 27, scope: !4058)
!4071 = !DILocalVariable(name: "bm", scope: !4058, file: !1, line: 312, type: !1847)
!4072 = !DILocation(line: 312, column: 9, scope: !4058)
!4073 = !DILocation(line: 312, column: 14, scope: !4058)
!4074 = !DILocation(line: 312, column: 20, scope: !4058)
!4075 = !DILocation(line: 312, column: 24, scope: !4058)
!4076 = !DILocalVariable(name: "eed", scope: !4058, file: !1, line: 313, type: !1791)
!4077 = !DILocation(line: 313, column: 10, scope: !4058)
!4078 = !DILocalVariable(name: "iter", scope: !4058, file: !1, line: 314, type: !2184)
!4079 = !DILocation(line: 314, column: 9, scope: !4058)
!4080 = !DILocalVariable(name: "i", scope: !4058, file: !1, line: 315, type: !168)
!4081 = !DILocation(line: 315, column: 6, scope: !4058)
!4082 = !DILocation(line: 317, column: 6, scope: !4083)
!4083 = distinct !DILexicalBlock(scope: !4058, file: !1, line: 317, column: 6)
!4084 = !DILocation(line: 317, column: 12, scope: !4083)
!4085 = !DILocation(line: 317, column: 6, scope: !4058)
!4086 = !DILocation(line: 319, column: 29, scope: !4087)
!4087 = distinct !DILexicalBlock(scope: !4083, file: !1, line: 317, column: 23)
!4088 = !DILocation(line: 319, column: 3, scope: !4087)
!4089 = !DILocation(line: 321, column: 3, scope: !4087)
!4090 = !DILocation(line: 322, column: 3, scope: !4091)
!4091 = distinct !DILexicalBlock(scope: !4087, file: !1, line: 322, column: 3)
!4092 = !DILocation(line: 322, column: 3, scope: !4093)
!4093 = distinct !DILexicalBlock(scope: !4091, file: !1, line: 322, column: 3)
!4094 = !DILocation(line: 323, column: 9, scope: !4095)
!4095 = distinct !DILexicalBlock(scope: !4096, file: !1, line: 323, column: 8)
!4096 = distinct !DILexicalBlock(scope: !4093, file: !1, line: 322, column: 60)
!4097 = !DILocation(line: 323, column: 24, scope: !4095)
!4098 = !DILocation(line: 323, column: 28, scope: !4095)
!4099 = !DILocation(line: 323, column: 43, scope: !4095)
!4100 = !DILocation(line: 323, column: 53, scope: !4095)
!4101 = !DILocation(line: 323, column: 56, scope: !4095)
!4102 = !DILocation(line: 323, column: 8, scope: !4096)
!4103 = !DILocation(line: 324, column: 5, scope: !4104)
!4104 = distinct !DILexicalBlock(scope: !4095, file: !1, line: 323, column: 81)
!4105 = !DILocation(line: 324, column: 26, scope: !4104)
!4106 = !DILocation(line: 324, column: 36, scope: !4104)
!4107 = !DILocation(line: 325, column: 17, scope: !4104)
!4108 = !DILocation(line: 325, column: 23, scope: !4104)
!4109 = !DILocation(line: 325, column: 33, scope: !4104)
!4110 = !DILocation(line: 325, column: 5, scope: !4104)
!4111 = !DILocation(line: 326, column: 5, scope: !4104)
!4112 = !DILocation(line: 326, column: 26, scope: !4104)
!4113 = !DILocation(line: 326, column: 36, scope: !4104)
!4114 = !DILocation(line: 327, column: 17, scope: !4104)
!4115 = !DILocation(line: 327, column: 23, scope: !4104)
!4116 = !DILocation(line: 327, column: 33, scope: !4104)
!4117 = !DILocation(line: 327, column: 5, scope: !4104)
!4118 = !DILocation(line: 328, column: 4, scope: !4104)
!4119 = !DILocation(line: 329, column: 3, scope: !4096)
!4120 = distinct !{!4120, !4090, !4121}
!4121 = !DILocation(line: 329, column: 3, scope: !4091)
!4122 = !DILocation(line: 330, column: 3, scope: !4087)
!4123 = !DILocation(line: 331, column: 2, scope: !4087)
!4124 = !DILocation(line: 333, column: 3, scope: !4125)
!4125 = distinct !DILexicalBlock(scope: !4083, file: !1, line: 332, column: 7)
!4126 = !DILocation(line: 334, column: 3, scope: !4127)
!4127 = distinct !DILexicalBlock(scope: !4125, file: !1, line: 334, column: 3)
!4128 = !DILocation(line: 334, column: 3, scope: !4129)
!4129 = distinct !DILexicalBlock(scope: !4127, file: !1, line: 334, column: 3)
!4130 = !DILocation(line: 335, column: 9, scope: !4131)
!4131 = distinct !DILexicalBlock(scope: !4132, file: !1, line: 335, column: 8)
!4132 = distinct !DILexicalBlock(scope: !4129, file: !1, line: 334, column: 60)
!4133 = !DILocation(line: 335, column: 24, scope: !4131)
!4134 = !DILocation(line: 335, column: 28, scope: !4131)
!4135 = !DILocation(line: 335, column: 43, scope: !4131)
!4136 = !DILocation(line: 335, column: 53, scope: !4131)
!4137 = !DILocation(line: 335, column: 56, scope: !4131)
!4138 = !DILocation(line: 335, column: 8, scope: !4132)
!4139 = !DILocation(line: 336, column: 5, scope: !4140)
!4140 = distinct !DILexicalBlock(scope: !4131, file: !1, line: 335, column: 81)
!4141 = !DILocation(line: 336, column: 26, scope: !4140)
!4142 = !DILocation(line: 336, column: 36, scope: !4140)
!4143 = !DILocation(line: 337, column: 17, scope: !4140)
!4144 = !DILocation(line: 337, column: 22, scope: !4140)
!4145 = !DILocation(line: 337, column: 26, scope: !4140)
!4146 = !DILocation(line: 337, column: 5, scope: !4140)
!4147 = !DILocation(line: 338, column: 5, scope: !4140)
!4148 = !DILocation(line: 338, column: 26, scope: !4140)
!4149 = !DILocation(line: 338, column: 36, scope: !4140)
!4150 = !DILocation(line: 339, column: 17, scope: !4140)
!4151 = !DILocation(line: 339, column: 22, scope: !4140)
!4152 = !DILocation(line: 339, column: 26, scope: !4140)
!4153 = !DILocation(line: 339, column: 5, scope: !4140)
!4154 = !DILocation(line: 340, column: 4, scope: !4140)
!4155 = !DILocation(line: 341, column: 3, scope: !4132)
!4156 = distinct !{!4156, !4126, !4157}
!4157 = !DILocation(line: 341, column: 3, scope: !4127)
!4158 = !DILocation(line: 342, column: 3, scope: !4125)
!4159 = !DILocation(line: 344, column: 1, scope: !4058)
!4160 = distinct !DISubprogram(name: "emDM_drawMappedFaces", scope: !1, file: !1, line: 451, type: !1661, scopeLine: 457, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1952)
!4161 = !DILocalVariable(name: "dm", arg: 1, scope: !4160, file: !1, line: 451, type: !154)
!4162 = !DILocation(line: 451, column: 47, scope: !4160)
!4163 = !DILocalVariable(name: "setDrawOptions", arg: 2, scope: !4160, file: !1, line: 452, type: !1663)
!4164 = !DILocation(line: 452, column: 51, scope: !4160)
!4165 = !DILocalVariable(name: "setMaterial", arg: 3, scope: !4160, file: !1, line: 453, type: !1624)
!4166 = !DILocation(line: 453, column: 48, scope: !4160)
!4167 = !DILocalVariable(name: "compareDrawOptions", arg: 4, scope: !4160, file: !1, line: 454, type: !1650)
!4168 = !DILocation(line: 454, column: 55, scope: !4160)
!4169 = !DILocalVariable(name: "userData", arg: 5, scope: !4160, file: !1, line: 455, type: !182)
!4170 = !DILocation(line: 455, column: 40, scope: !4160)
!4171 = !DILocalVariable(name: "flag", arg: 6, scope: !4160, file: !1, line: 456, type: !1654)
!4172 = !DILocation(line: 456, column: 45, scope: !4160)
!4173 = !DILocalVariable(name: "bmdm", scope: !4160, file: !1, line: 458, type: !1700)
!4174 = !DILocation(line: 458, column: 20, scope: !4160)
!4175 = !DILocation(line: 458, column: 47, scope: !4160)
!4176 = !DILocation(line: 458, column: 27, scope: !4160)
!4177 = !DILocalVariable(name: "em", scope: !4160, file: !1, line: 459, type: !1706)
!4178 = !DILocation(line: 459, column: 14, scope: !4160)
!4179 = !DILocation(line: 459, column: 19, scope: !4160)
!4180 = !DILocation(line: 459, column: 25, scope: !4160)
!4181 = !DILocalVariable(name: "bm", scope: !4160, file: !1, line: 460, type: !1847)
!4182 = !DILocation(line: 460, column: 9, scope: !4160)
!4183 = !DILocation(line: 460, column: 14, scope: !4160)
!4184 = !DILocation(line: 460, column: 18, scope: !4160)
!4185 = !DILocalVariable(name: "efa", scope: !4160, file: !1, line: 461, type: !1795)
!4186 = !DILocation(line: 461, column: 10, scope: !4160)
!4187 = !DILocalVariable(name: "looptris", scope: !4160, file: !1, line: 462, type: !1872)
!4188 = !DILocation(line: 462, column: 19, scope: !4160)
!4189 = !DILocation(line: 462, column: 34, scope: !4160)
!4190 = !DILocation(line: 462, column: 40, scope: !4160)
!4191 = !DILocation(line: 462, column: 44, scope: !4160)
!4192 = !DILocalVariable(name: "tottri", scope: !4160, file: !1, line: 463, type: !1967)
!4193 = !DILocation(line: 463, column: 12, scope: !4160)
!4194 = !DILocation(line: 463, column: 21, scope: !4160)
!4195 = !DILocation(line: 463, column: 27, scope: !4160)
!4196 = !DILocation(line: 463, column: 31, scope: !4160)
!4197 = !DILocalVariable(name: "lasttri", scope: !4160, file: !1, line: 464, type: !1967)
!4198 = !DILocation(line: 464, column: 12, scope: !4160)
!4199 = !DILocation(line: 464, column: 22, scope: !4160)
!4200 = !DILocation(line: 464, column: 29, scope: !4160)
!4201 = !DILocalVariable(name: "draw_option", scope: !4160, file: !1, line: 465, type: !1636)
!4202 = !DILocation(line: 465, column: 15, scope: !4160)
!4203 = !DILocalVariable(name: "i", scope: !4160, file: !1, line: 466, type: !168)
!4204 = !DILocation(line: 466, column: 6, scope: !4160)
!4205 = !DILocalVariable(name: "flush", scope: !4160, file: !1, line: 466, type: !168)
!4206 = !DILocation(line: 466, column: 9, scope: !4160)
!4207 = !DILocalVariable(name: "skip_normals", scope: !4160, file: !1, line: 467, type: !1967)
!4208 = !DILocation(line: 467, column: 12, scope: !4160)
!4209 = !DILocation(line: 467, column: 28, scope: !4160)
!4210 = !DILocation(line: 467, column: 27, scope: !4160)
!4211 = !DILocalVariable(name: "lnors", scope: !4160, file: !1, line: 469, type: !1698)
!4212 = !DILocation(line: 469, column: 16, scope: !4160)
!4213 = !DILocation(line: 469, column: 28, scope: !4160)
!4214 = !DILocation(line: 469, column: 32, scope: !4160)
!4215 = !DILocation(line: 469, column: 49, scope: !4160)
!4216 = !DILocalVariable(name: "lcol", scope: !4160, file: !1, line: 470, type: !4217)
!4217 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1914, size: 192, elements: !261)
!4218 = !DILocation(line: 470, column: 12, scope: !4160)
!4219 = !DILocalVariable(name: "color_vert_array", scope: !4160, file: !1, line: 471, type: !1881)
!4220 = !DILocation(line: 471, column: 17, scope: !4160)
!4221 = !DILocation(line: 471, column: 40, scope: !4160)
!4222 = !DILocation(line: 471, column: 44, scope: !4160)
!4223 = !DILocalVariable(name: "color_face_array", scope: !4160, file: !1, line: 472, type: !1881)
!4224 = !DILocation(line: 472, column: 17, scope: !4160)
!4225 = !DILocation(line: 472, column: 40, scope: !4160)
!4226 = !DILocation(line: 472, column: 44, scope: !4160)
!4227 = !DILocalVariable(name: "has_vcol_preview", scope: !4160, file: !1, line: 473, type: !871)
!4228 = !DILocation(line: 473, column: 7, scope: !4160)
!4229 = !DILocation(line: 473, column: 27, scope: !4160)
!4230 = !DILocation(line: 473, column: 44, scope: !4160)
!4231 = !DILocation(line: 473, column: 53, scope: !4160)
!4232 = !DILocation(line: 473, column: 57, scope: !4160)
!4233 = !DILocation(line: 473, column: 56, scope: !4160)
!4234 = !DILocation(line: 0, scope: !4160)
!4235 = !DILocation(line: 473, column: 26, scope: !4160)
!4236 = !DILocalVariable(name: "has_fcol_preview", scope: !4160, file: !1, line: 474, type: !871)
!4237 = !DILocation(line: 474, column: 7, scope: !4160)
!4238 = !DILocation(line: 474, column: 27, scope: !4160)
!4239 = !DILocation(line: 474, column: 44, scope: !4160)
!4240 = !DILocation(line: 474, column: 53, scope: !4160)
!4241 = !DILocation(line: 474, column: 57, scope: !4160)
!4242 = !DILocation(line: 474, column: 56, scope: !4160)
!4243 = !DILocation(line: 474, column: 26, scope: !4160)
!4244 = !DILocalVariable(name: "has_vcol_any", scope: !4160, file: !1, line: 475, type: !871)
!4245 = !DILocation(line: 475, column: 7, scope: !4160)
!4246 = !DILocation(line: 475, column: 22, scope: !4160)
!4247 = !DILocalVariable(name: "poly_prev", scope: !4160, file: !1, line: 478, type: !4248)
!4248 = !DIDerivedType(tag: DW_TAG_typedef, name: "GLenum", file: !1933, line: 270, baseType: !5)
!4249 = !DILocation(line: 478, column: 9, scope: !4160)
!4250 = !DILocalVariable(name: "shade_prev", scope: !4160, file: !1, line: 479, type: !4248)
!4251 = !DILocation(line: 479, column: 9, scope: !4160)
!4252 = !DILocation(line: 481, column: 8, scope: !4160)
!4253 = !DILocation(line: 484, column: 8, scope: !4160)
!4254 = !DILocation(line: 487, column: 6, scope: !4255)
!4255 = distinct !DILexicalBlock(scope: !4160, file: !1, line: 487, column: 6)
!4256 = !DILocation(line: 487, column: 6, scope: !4160)
!4257 = !DILocation(line: 488, column: 29, scope: !4258)
!4258 = distinct !DILexicalBlock(scope: !4255, file: !1, line: 487, column: 24)
!4259 = !DILocation(line: 488, column: 3, scope: !4258)
!4260 = !DILocation(line: 489, column: 2, scope: !4258)
!4261 = !DILocation(line: 490, column: 6, scope: !4262)
!4262 = distinct !DILexicalBlock(scope: !4160, file: !1, line: 490, column: 6)
!4263 = !DILocation(line: 490, column: 6, scope: !4160)
!4264 = !DILocation(line: 491, column: 29, scope: !4265)
!4265 = distinct !DILexicalBlock(scope: !4262, file: !1, line: 490, column: 24)
!4266 = !DILocation(line: 491, column: 3, scope: !4265)
!4267 = !DILocation(line: 492, column: 2, scope: !4265)
!4268 = !DILocation(line: 493, column: 6, scope: !4269)
!4269 = distinct !DILexicalBlock(scope: !4160, file: !1, line: 493, column: 6)
!4270 = !DILocation(line: 493, column: 23, scope: !4269)
!4271 = !DILocation(line: 493, column: 26, scope: !4269)
!4272 = !DILocation(line: 493, column: 6, scope: !4160)
!4273 = !DILocation(line: 494, column: 8, scope: !4274)
!4274 = distinct !DILexicalBlock(scope: !4269, file: !1, line: 493, column: 44)
!4275 = !DILocation(line: 495, column: 3, scope: !4274)
!4276 = !DILocation(line: 496, column: 2, scope: !4274)
!4277 = !DILocation(line: 498, column: 6, scope: !4278)
!4278 = distinct !DILexicalBlock(scope: !4160, file: !1, line: 498, column: 6)
!4279 = !DILocation(line: 498, column: 12, scope: !4278)
!4280 = !DILocation(line: 498, column: 6, scope: !4160)
!4281 = !DILocalVariable(name: "vertexCos", scope: !4282, file: !1, line: 500, type: !1698)
!4282 = distinct !DILexicalBlock(scope: !4278, file: !1, line: 498, column: 23)
!4283 = !DILocation(line: 500, column: 17, scope: !4282)
!4284 = !DILocation(line: 500, column: 33, scope: !4282)
!4285 = !DILocation(line: 500, column: 39, scope: !4282)
!4286 = !DILocalVariable(name: "vertexNos", scope: !4282, file: !1, line: 501, type: !1698)
!4287 = !DILocation(line: 501, column: 17, scope: !4282)
!4288 = !DILocalVariable(name: "polyNos", scope: !4282, file: !1, line: 502, type: !1698)
!4289 = !DILocation(line: 502, column: 17, scope: !4282)
!4290 = !DILocation(line: 504, column: 7, scope: !4291)
!4291 = distinct !DILexicalBlock(scope: !4282, file: !1, line: 504, column: 7)
!4292 = !DILocation(line: 504, column: 7, scope: !4282)
!4293 = !DILocation(line: 505, column: 14, scope: !4294)
!4294 = distinct !DILexicalBlock(scope: !4291, file: !1, line: 504, column: 21)
!4295 = !DILocation(line: 506, column: 12, scope: !4294)
!4296 = !DILocation(line: 507, column: 3, scope: !4294)
!4297 = !DILocation(line: 509, column: 27, scope: !4298)
!4298 = distinct !DILexicalBlock(scope: !4291, file: !1, line: 508, column: 8)
!4299 = !DILocation(line: 509, column: 4, scope: !4298)
!4300 = !DILocation(line: 510, column: 27, scope: !4298)
!4301 = !DILocation(line: 510, column: 4, scope: !4298)
!4302 = !DILocation(line: 511, column: 16, scope: !4298)
!4303 = !DILocation(line: 511, column: 22, scope: !4298)
!4304 = !DILocation(line: 511, column: 14, scope: !4298)
!4305 = !DILocation(line: 512, column: 14, scope: !4298)
!4306 = !DILocation(line: 512, column: 20, scope: !4298)
!4307 = !DILocation(line: 512, column: 12, scope: !4298)
!4308 = !DILocation(line: 515, column: 29, scope: !4282)
!4309 = !DILocation(line: 515, column: 33, scope: !4282)
!4310 = !DILocation(line: 515, column: 3, scope: !4282)
!4311 = !DILocation(line: 517, column: 10, scope: !4312)
!4312 = distinct !DILexicalBlock(scope: !4282, file: !1, line: 517, column: 3)
!4313 = !DILocation(line: 517, column: 8, scope: !4312)
!4314 = !DILocation(line: 517, column: 15, scope: !4315)
!4315 = distinct !DILexicalBlock(scope: !4312, file: !1, line: 517, column: 3)
!4316 = !DILocation(line: 517, column: 19, scope: !4315)
!4317 = !DILocation(line: 517, column: 17, scope: !4315)
!4318 = !DILocation(line: 517, column: 3, scope: !4312)
!4319 = !DILocalVariable(name: "ltri", scope: !4320, file: !1, line: 518, type: !2848)
!4320 = distinct !DILexicalBlock(scope: !4315, file: !1, line: 517, column: 32)
!4321 = !DILocation(line: 518, column: 13, scope: !4320)
!4322 = !DILocation(line: 518, column: 20, scope: !4320)
!4323 = !DILocation(line: 518, column: 29, scope: !4320)
!4324 = !DILocalVariable(name: "drawSmooth", scope: !4320, file: !1, line: 519, type: !168)
!4325 = !DILocation(line: 519, column: 8, scope: !4320)
!4326 = !DILocation(line: 521, column: 10, scope: !4320)
!4327 = !DILocation(line: 521, column: 19, scope: !4320)
!4328 = !DILocation(line: 521, column: 8, scope: !4320)
!4329 = !DILocation(line: 522, column: 17, scope: !4320)
!4330 = !DILocation(line: 522, column: 23, scope: !4320)
!4331 = !DILocation(line: 522, column: 28, scope: !4320)
!4332 = !DILocation(line: 522, column: 33, scope: !4320)
!4333 = !DILocation(line: 522, column: 27, scope: !4320)
!4334 = !DILocation(line: 522, column: 64, scope: !4320)
!4335 = !DILocation(line: 522, column: 15, scope: !4320)
!4336 = !DILocation(line: 524, column: 20, scope: !4320)
!4337 = !DILocation(line: 524, column: 19, scope: !4320)
!4338 = !DILocation(line: 526, column: 19, scope: !4320)
!4339 = !DILocation(line: 526, column: 34, scope: !4320)
!4340 = !DILocation(line: 526, column: 44, scope: !4320)
!4341 = !DILocation(line: 524, column: 16, scope: !4320)
!4342 = !DILocation(line: 527, column: 8, scope: !4343)
!4343 = distinct !DILexicalBlock(scope: !4320, file: !1, line: 527, column: 8)
!4344 = !DILocation(line: 527, column: 20, scope: !4343)
!4345 = !DILocation(line: 527, column: 8, scope: !4320)
!4346 = !DILocalVariable(name: "poly_type", scope: !4347, file: !1, line: 528, type: !4348)
!4347 = distinct !DILexicalBlock(scope: !4343, file: !1, line: 527, column: 44)
!4348 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4248)
!4349 = !DILocation(line: 528, column: 18, scope: !4347)
!4350 = !DILocation(line: 529, column: 9, scope: !4351)
!4351 = distinct !DILexicalBlock(scope: !4347, file: !1, line: 529, column: 9)
!4352 = !DILocation(line: 529, column: 21, scope: !4351)
!4353 = !DILocation(line: 529, column: 9, scope: !4347)
!4354 = !DILocation(line: 531, column: 10, scope: !4355)
!4355 = distinct !DILexicalBlock(scope: !4356, file: !1, line: 531, column: 10)
!4356 = distinct !DILexicalBlock(scope: !4351, file: !1, line: 529, column: 48)
!4357 = !DILocation(line: 531, column: 20, scope: !4355)
!4358 = !DILocation(line: 531, column: 10, scope: !4356)
!4359 = !DILocation(line: 531, column: 32, scope: !4355)
!4360 = !DILocation(line: 532, column: 16, scope: !4356)
!4361 = !DILocation(line: 534, column: 6, scope: !4356)
!4362 = !DILocation(line: 535, column: 6, scope: !4356)
!4363 = !DILocation(line: 536, column: 5, scope: !4356)
!4364 = !DILocation(line: 538, column: 14, scope: !4365)
!4365 = distinct !DILexicalBlock(scope: !4347, file: !1, line: 538, column: 14)
!4366 = !DILocation(line: 538, column: 14, scope: !4347)
!4367 = !DILocation(line: 538, column: 56, scope: !4365)
!4368 = !DILocation(line: 538, column: 62, scope: !4365)
!4369 = !DILocation(line: 538, column: 68, scope: !4365)
!4370 = !DILocation(line: 538, column: 32, scope: !4365)
!4371 = !DILocation(line: 539, column: 14, scope: !4372)
!4372 = distinct !DILexicalBlock(scope: !4365, file: !1, line: 539, column: 14)
!4373 = !DILocation(line: 539, column: 14, scope: !4365)
!4374 = !DILocation(line: 539, column: 63, scope: !4372)
!4375 = !DILocation(line: 539, column: 80, scope: !4372)
!4376 = !DILocation(line: 539, column: 44, scope: !4372)
!4377 = !DILocation(line: 539, column: 32, scope: !4372)
!4378 = !DILocation(line: 540, column: 9, scope: !4379)
!4379 = distinct !DILexicalBlock(scope: !4347, file: !1, line: 540, column: 9)
!4380 = !DILocation(line: 540, column: 9, scope: !4347)
!4381 = !DILocation(line: 541, column: 23, scope: !4382)
!4382 = distinct !DILexicalBlock(scope: !4383, file: !1, line: 541, column: 10)
!4383 = distinct !DILexicalBlock(scope: !4379, file: !1, line: 540, column: 23)
!4384 = !DILocation(line: 541, column: 20, scope: !4382)
!4385 = !DILocation(line: 541, column: 10, scope: !4383)
!4386 = !DILocation(line: 542, column: 11, scope: !4387)
!4387 = distinct !DILexicalBlock(scope: !4388, file: !1, line: 542, column: 11)
!4388 = distinct !DILexicalBlock(scope: !4382, file: !1, line: 541, column: 34)
!4389 = !DILocation(line: 542, column: 21, scope: !4387)
!4390 = !DILocation(line: 542, column: 11, scope: !4388)
!4391 = !DILocation(line: 542, column: 33, scope: !4387)
!4392 = !DILocation(line: 543, column: 26, scope: !4388)
!4393 = !DILocation(line: 543, column: 7, scope: !4388)
!4394 = !DILocation(line: 544, column: 6, scope: !4388)
!4395 = !DILocation(line: 545, column: 10, scope: !4396)
!4396 = distinct !DILexicalBlock(scope: !4383, file: !1, line: 545, column: 10)
!4397 = !DILocation(line: 545, column: 10, scope: !4383)
!4398 = !DILocation(line: 545, column: 55, scope: !4396)
!4399 = !DILocation(line: 545, column: 64, scope: !4396)
!4400 = !DILocation(line: 545, column: 24, scope: !4396)
!4401 = !DILocation(line: 546, column: 18, scope: !4383)
!4402 = !DILocation(line: 546, column: 28, scope: !4383)
!4403 = !DILocation(line: 546, column: 6, scope: !4383)
!4404 = !DILocation(line: 547, column: 10, scope: !4405)
!4405 = distinct !DILexicalBlock(scope: !4383, file: !1, line: 547, column: 10)
!4406 = !DILocation(line: 547, column: 10, scope: !4383)
!4407 = !DILocation(line: 547, column: 55, scope: !4405)
!4408 = !DILocation(line: 547, column: 64, scope: !4405)
!4409 = !DILocation(line: 547, column: 24, scope: !4405)
!4410 = !DILocation(line: 548, column: 18, scope: !4383)
!4411 = !DILocation(line: 548, column: 28, scope: !4383)
!4412 = !DILocation(line: 548, column: 6, scope: !4383)
!4413 = !DILocation(line: 549, column: 10, scope: !4414)
!4414 = distinct !DILexicalBlock(scope: !4383, file: !1, line: 549, column: 10)
!4415 = !DILocation(line: 549, column: 10, scope: !4383)
!4416 = !DILocation(line: 549, column: 55, scope: !4414)
!4417 = !DILocation(line: 549, column: 64, scope: !4414)
!4418 = !DILocation(line: 549, column: 24, scope: !4414)
!4419 = !DILocation(line: 550, column: 18, scope: !4383)
!4420 = !DILocation(line: 550, column: 28, scope: !4383)
!4421 = !DILocation(line: 550, column: 6, scope: !4383)
!4422 = !DILocation(line: 551, column: 5, scope: !4383)
!4423 = !DILocalVariable(name: "shade_type", scope: !4424, file: !1, line: 553, type: !4348)
!4424 = distinct !DILexicalBlock(scope: !4379, file: !1, line: 552, column: 10)
!4425 = !DILocation(line: 553, column: 19, scope: !4424)
!4426 = !DILocation(line: 553, column: 32, scope: !4424)
!4427 = !DILocation(line: 554, column: 10, scope: !4428)
!4428 = distinct !DILexicalBlock(scope: !4424, file: !1, line: 554, column: 10)
!4429 = !DILocation(line: 554, column: 24, scope: !4428)
!4430 = !DILocation(line: 554, column: 21, scope: !4428)
!4431 = !DILocation(line: 554, column: 10, scope: !4424)
!4432 = !DILocation(line: 555, column: 11, scope: !4433)
!4433 = distinct !DILexicalBlock(scope: !4434, file: !1, line: 555, column: 11)
!4434 = distinct !DILexicalBlock(scope: !4428, file: !1, line: 554, column: 36)
!4435 = !DILocation(line: 555, column: 21, scope: !4433)
!4436 = !DILocation(line: 555, column: 11, scope: !4434)
!4437 = !DILocation(line: 555, column: 33, scope: !4433)
!4438 = !DILocation(line: 556, column: 34, scope: !4434)
!4439 = !DILocation(line: 556, column: 32, scope: !4434)
!4440 = !DILocation(line: 556, column: 7, scope: !4434)
!4441 = !DILocation(line: 557, column: 26, scope: !4434)
!4442 = !DILocation(line: 557, column: 7, scope: !4434)
!4443 = !DILocation(line: 558, column: 6, scope: !4434)
!4444 = !DILocation(line: 559, column: 23, scope: !4445)
!4445 = distinct !DILexicalBlock(scope: !4424, file: !1, line: 559, column: 10)
!4446 = !DILocation(line: 559, column: 20, scope: !4445)
!4447 = !DILocation(line: 559, column: 10, scope: !4424)
!4448 = !DILocation(line: 560, column: 11, scope: !4449)
!4449 = distinct !DILexicalBlock(scope: !4450, file: !1, line: 560, column: 11)
!4450 = distinct !DILexicalBlock(scope: !4445, file: !1, line: 559, column: 34)
!4451 = !DILocation(line: 560, column: 21, scope: !4449)
!4452 = !DILocation(line: 560, column: 11, scope: !4450)
!4453 = !DILocation(line: 560, column: 33, scope: !4449)
!4454 = !DILocation(line: 561, column: 26, scope: !4450)
!4455 = !DILocation(line: 561, column: 7, scope: !4450)
!4456 = !DILocation(line: 562, column: 6, scope: !4450)
!4457 = !DILocation(line: 564, column: 11, scope: !4458)
!4458 = distinct !DILexicalBlock(scope: !4424, file: !1, line: 564, column: 10)
!4459 = !DILocation(line: 564, column: 10, scope: !4424)
!4460 = !DILocation(line: 565, column: 19, scope: !4461)
!4461 = distinct !DILexicalBlock(scope: !4458, file: !1, line: 564, column: 23)
!4462 = !DILocation(line: 565, column: 27, scope: !4461)
!4463 = !DILocation(line: 565, column: 7, scope: !4461)
!4464 = !DILocation(line: 566, column: 11, scope: !4465)
!4465 = distinct !DILexicalBlock(scope: !4461, file: !1, line: 566, column: 11)
!4466 = !DILocation(line: 566, column: 11, scope: !4461)
!4467 = !DILocation(line: 566, column: 56, scope: !4465)
!4468 = !DILocation(line: 566, column: 65, scope: !4465)
!4469 = !DILocation(line: 566, column: 25, scope: !4465)
!4470 = !DILocation(line: 567, column: 19, scope: !4461)
!4471 = !DILocation(line: 567, column: 29, scope: !4461)
!4472 = !DILocation(line: 567, column: 7, scope: !4461)
!4473 = !DILocation(line: 568, column: 11, scope: !4474)
!4474 = distinct !DILexicalBlock(scope: !4461, file: !1, line: 568, column: 11)
!4475 = !DILocation(line: 568, column: 11, scope: !4461)
!4476 = !DILocation(line: 568, column: 56, scope: !4474)
!4477 = !DILocation(line: 568, column: 65, scope: !4474)
!4478 = !DILocation(line: 568, column: 25, scope: !4474)
!4479 = !DILocation(line: 569, column: 19, scope: !4461)
!4480 = !DILocation(line: 569, column: 29, scope: !4461)
!4481 = !DILocation(line: 569, column: 7, scope: !4461)
!4482 = !DILocation(line: 570, column: 11, scope: !4483)
!4483 = distinct !DILexicalBlock(scope: !4461, file: !1, line: 570, column: 11)
!4484 = !DILocation(line: 570, column: 11, scope: !4461)
!4485 = !DILocation(line: 570, column: 56, scope: !4483)
!4486 = !DILocation(line: 570, column: 65, scope: !4483)
!4487 = !DILocation(line: 570, column: 25, scope: !4483)
!4488 = !DILocation(line: 571, column: 19, scope: !4461)
!4489 = !DILocation(line: 571, column: 29, scope: !4461)
!4490 = !DILocation(line: 571, column: 7, scope: !4461)
!4491 = !DILocation(line: 572, column: 6, scope: !4461)
!4492 = !DILocation(line: 574, column: 11, scope: !4493)
!4493 = distinct !DILexicalBlock(scope: !4494, file: !1, line: 574, column: 11)
!4494 = distinct !DILexicalBlock(scope: !4458, file: !1, line: 573, column: 11)
!4495 = !DILocation(line: 574, column: 11, scope: !4494)
!4496 = !DILocation(line: 574, column: 56, scope: !4493)
!4497 = !DILocation(line: 574, column: 65, scope: !4493)
!4498 = !DILocation(line: 574, column: 25, scope: !4493)
!4499 = !DILocation(line: 575, column: 11, scope: !4500)
!4500 = distinct !DILexicalBlock(scope: !4494, file: !1, line: 575, column: 11)
!4501 = !DILocation(line: 575, column: 11, scope: !4494)
!4502 = !DILocation(line: 575, column: 30, scope: !4500)
!4503 = !DILocation(line: 575, column: 36, scope: !4500)
!4504 = !DILocation(line: 575, column: 18, scope: !4500)
!4505 = !DILocation(line: 576, column: 24, scope: !4500)
!4506 = !DILocation(line: 576, column: 34, scope: !4500)
!4507 = !DILocation(line: 576, column: 12, scope: !4500)
!4508 = !DILocation(line: 577, column: 19, scope: !4494)
!4509 = !DILocation(line: 577, column: 29, scope: !4494)
!4510 = !DILocation(line: 577, column: 7, scope: !4494)
!4511 = !DILocation(line: 578, column: 11, scope: !4512)
!4512 = distinct !DILexicalBlock(scope: !4494, file: !1, line: 578, column: 11)
!4513 = !DILocation(line: 578, column: 11, scope: !4494)
!4514 = !DILocation(line: 578, column: 56, scope: !4512)
!4515 = !DILocation(line: 578, column: 65, scope: !4512)
!4516 = !DILocation(line: 578, column: 25, scope: !4512)
!4517 = !DILocation(line: 579, column: 11, scope: !4518)
!4518 = distinct !DILexicalBlock(scope: !4494, file: !1, line: 579, column: 11)
!4519 = !DILocation(line: 579, column: 11, scope: !4494)
!4520 = !DILocation(line: 579, column: 30, scope: !4518)
!4521 = !DILocation(line: 579, column: 36, scope: !4518)
!4522 = !DILocation(line: 579, column: 18, scope: !4518)
!4523 = !DILocation(line: 580, column: 24, scope: !4518)
!4524 = !DILocation(line: 580, column: 34, scope: !4518)
!4525 = !DILocation(line: 580, column: 12, scope: !4518)
!4526 = !DILocation(line: 581, column: 19, scope: !4494)
!4527 = !DILocation(line: 581, column: 29, scope: !4494)
!4528 = !DILocation(line: 581, column: 7, scope: !4494)
!4529 = !DILocation(line: 582, column: 11, scope: !4530)
!4530 = distinct !DILexicalBlock(scope: !4494, file: !1, line: 582, column: 11)
!4531 = !DILocation(line: 582, column: 11, scope: !4494)
!4532 = !DILocation(line: 582, column: 56, scope: !4530)
!4533 = !DILocation(line: 582, column: 65, scope: !4530)
!4534 = !DILocation(line: 582, column: 25, scope: !4530)
!4535 = !DILocation(line: 583, column: 11, scope: !4536)
!4536 = distinct !DILexicalBlock(scope: !4494, file: !1, line: 583, column: 11)
!4537 = !DILocation(line: 583, column: 11, scope: !4494)
!4538 = !DILocation(line: 583, column: 30, scope: !4536)
!4539 = !DILocation(line: 583, column: 36, scope: !4536)
!4540 = !DILocation(line: 583, column: 18, scope: !4536)
!4541 = !DILocation(line: 584, column: 24, scope: !4536)
!4542 = !DILocation(line: 584, column: 34, scope: !4536)
!4543 = !DILocation(line: 584, column: 12, scope: !4536)
!4544 = !DILocation(line: 585, column: 19, scope: !4494)
!4545 = !DILocation(line: 585, column: 29, scope: !4494)
!4546 = !DILocation(line: 585, column: 7, scope: !4494)
!4547 = !DILocation(line: 589, column: 14, scope: !4347)
!4548 = !DILocation(line: 589, column: 26, scope: !4347)
!4549 = !DILocation(line: 589, column: 11, scope: !4347)
!4550 = !DILocation(line: 590, column: 10, scope: !4551)
!4551 = distinct !DILexicalBlock(scope: !4347, file: !1, line: 590, column: 9)
!4552 = !DILocation(line: 590, column: 23, scope: !4551)
!4553 = !DILocation(line: 590, column: 27, scope: !4551)
!4554 = !DILocation(line: 590, column: 33, scope: !4551)
!4555 = !DILocation(line: 590, column: 37, scope: !4551)
!4556 = !DILocation(line: 590, column: 42, scope: !4551)
!4557 = !DILocation(line: 590, column: 39, scope: !4551)
!4558 = !DILocation(line: 590, column: 9, scope: !4347)
!4559 = !DILocation(line: 591, column: 15, scope: !4551)
!4560 = !DILocation(line: 591, column: 20, scope: !4551)
!4561 = !DILocation(line: 591, column: 30, scope: !4551)
!4562 = !DILocation(line: 591, column: 39, scope: !4551)
!4563 = !DILocation(line: 591, column: 41, scope: !4551)
!4564 = !DILocation(line: 591, column: 50, scope: !4551)
!4565 = !DILocation(line: 591, column: 53, scope: !4551)
!4566 = !DILocation(line: 591, column: 27, scope: !4551)
!4567 = !DILocation(line: 591, column: 12, scope: !4551)
!4568 = !DILocation(line: 591, column: 6, scope: !4551)
!4569 = !DILocation(line: 593, column: 9, scope: !4570)
!4570 = distinct !DILexicalBlock(scope: !4347, file: !1, line: 593, column: 9)
!4571 = !DILocation(line: 593, column: 9, scope: !4347)
!4572 = !DILocation(line: 594, column: 6, scope: !4573)
!4573 = distinct !DILexicalBlock(scope: !4570, file: !1, line: 593, column: 16)
!4574 = !DILocation(line: 595, column: 16, scope: !4573)
!4575 = !DILocation(line: 597, column: 6, scope: !4573)
!4576 = !DILocation(line: 598, column: 5, scope: !4573)
!4577 = !DILocation(line: 599, column: 4, scope: !4347)
!4578 = !DILocation(line: 600, column: 3, scope: !4320)
!4579 = !DILocation(line: 517, column: 28, scope: !4315)
!4580 = !DILocation(line: 517, column: 3, scope: !4315)
!4581 = distinct !{!4581, !4318, !4582}
!4582 = !DILocation(line: 600, column: 3, scope: !4312)
!4583 = !DILocation(line: 601, column: 2, scope: !4282)
!4584 = !DILocation(line: 603, column: 29, scope: !4585)
!4585 = distinct !DILexicalBlock(scope: !4278, file: !1, line: 602, column: 7)
!4586 = !DILocation(line: 603, column: 33, scope: !4585)
!4587 = !DILocation(line: 603, column: 3, scope: !4585)
!4588 = !DILocation(line: 605, column: 10, scope: !4589)
!4589 = distinct !DILexicalBlock(scope: !4585, file: !1, line: 605, column: 3)
!4590 = !DILocation(line: 605, column: 8, scope: !4589)
!4591 = !DILocation(line: 605, column: 15, scope: !4592)
!4592 = distinct !DILexicalBlock(scope: !4589, file: !1, line: 605, column: 3)
!4593 = !DILocation(line: 605, column: 19, scope: !4592)
!4594 = !DILocation(line: 605, column: 17, scope: !4592)
!4595 = !DILocation(line: 605, column: 3, scope: !4589)
!4596 = !DILocalVariable(name: "ltri", scope: !4597, file: !1, line: 606, type: !2848)
!4597 = distinct !DILexicalBlock(scope: !4592, file: !1, line: 605, column: 32)
!4598 = !DILocation(line: 606, column: 13, scope: !4597)
!4599 = !DILocation(line: 606, column: 20, scope: !4597)
!4600 = !DILocation(line: 606, column: 29, scope: !4597)
!4601 = !DILocalVariable(name: "drawSmooth", scope: !4597, file: !1, line: 607, type: !168)
!4602 = !DILocation(line: 607, column: 8, scope: !4597)
!4603 = !DILocation(line: 609, column: 10, scope: !4597)
!4604 = !DILocation(line: 609, column: 19, scope: !4597)
!4605 = !DILocation(line: 609, column: 8, scope: !4597)
!4606 = !DILocation(line: 610, column: 17, scope: !4597)
!4607 = !DILocation(line: 610, column: 23, scope: !4597)
!4608 = !DILocation(line: 610, column: 28, scope: !4597)
!4609 = !DILocation(line: 610, column: 33, scope: !4597)
!4610 = !DILocation(line: 610, column: 27, scope: !4597)
!4611 = !DILocation(line: 610, column: 64, scope: !4597)
!4612 = !DILocation(line: 610, column: 15, scope: !4597)
!4613 = !DILocation(line: 612, column: 20, scope: !4597)
!4614 = !DILocation(line: 612, column: 19, scope: !4597)
!4615 = !DILocation(line: 614, column: 19, scope: !4597)
!4616 = !DILocation(line: 614, column: 34, scope: !4597)
!4617 = !DILocation(line: 614, column: 44, scope: !4597)
!4618 = !DILocation(line: 612, column: 16, scope: !4597)
!4619 = !DILocation(line: 615, column: 8, scope: !4620)
!4620 = distinct !DILexicalBlock(scope: !4597, file: !1, line: 615, column: 8)
!4621 = !DILocation(line: 615, column: 20, scope: !4620)
!4622 = !DILocation(line: 615, column: 8, scope: !4597)
!4623 = !DILocalVariable(name: "poly_type", scope: !4624, file: !1, line: 616, type: !4348)
!4624 = distinct !DILexicalBlock(scope: !4620, file: !1, line: 615, column: 44)
!4625 = !DILocation(line: 616, column: 18, scope: !4624)
!4626 = !DILocation(line: 617, column: 9, scope: !4627)
!4627 = distinct !DILexicalBlock(scope: !4624, file: !1, line: 617, column: 9)
!4628 = !DILocation(line: 617, column: 21, scope: !4627)
!4629 = !DILocation(line: 617, column: 9, scope: !4624)
!4630 = !DILocation(line: 619, column: 10, scope: !4631)
!4631 = distinct !DILexicalBlock(scope: !4632, file: !1, line: 619, column: 10)
!4632 = distinct !DILexicalBlock(scope: !4627, file: !1, line: 617, column: 48)
!4633 = !DILocation(line: 619, column: 20, scope: !4631)
!4634 = !DILocation(line: 619, column: 10, scope: !4632)
!4635 = !DILocation(line: 619, column: 32, scope: !4631)
!4636 = !DILocation(line: 620, column: 16, scope: !4632)
!4637 = !DILocation(line: 622, column: 6, scope: !4632)
!4638 = !DILocation(line: 623, column: 6, scope: !4632)
!4639 = !DILocation(line: 624, column: 5, scope: !4632)
!4640 = !DILocation(line: 626, column: 14, scope: !4641)
!4641 = distinct !DILexicalBlock(scope: !4624, file: !1, line: 626, column: 14)
!4642 = !DILocation(line: 626, column: 14, scope: !4624)
!4643 = !DILocation(line: 626, column: 56, scope: !4641)
!4644 = !DILocation(line: 626, column: 62, scope: !4641)
!4645 = !DILocation(line: 626, column: 68, scope: !4641)
!4646 = !DILocation(line: 626, column: 32, scope: !4641)
!4647 = !DILocation(line: 627, column: 14, scope: !4648)
!4648 = distinct !DILexicalBlock(scope: !4641, file: !1, line: 627, column: 14)
!4649 = !DILocation(line: 627, column: 14, scope: !4641)
!4650 = !DILocation(line: 627, column: 63, scope: !4648)
!4651 = !DILocation(line: 627, column: 80, scope: !4648)
!4652 = !DILocation(line: 627, column: 44, scope: !4648)
!4653 = !DILocation(line: 627, column: 32, scope: !4648)
!4654 = !DILocation(line: 629, column: 9, scope: !4655)
!4655 = distinct !DILexicalBlock(scope: !4624, file: !1, line: 629, column: 9)
!4656 = !DILocation(line: 629, column: 9, scope: !4624)
!4657 = !DILocation(line: 630, column: 23, scope: !4658)
!4658 = distinct !DILexicalBlock(scope: !4659, file: !1, line: 630, column: 10)
!4659 = distinct !DILexicalBlock(scope: !4655, file: !1, line: 629, column: 23)
!4660 = !DILocation(line: 630, column: 20, scope: !4658)
!4661 = !DILocation(line: 630, column: 10, scope: !4659)
!4662 = !DILocation(line: 631, column: 11, scope: !4663)
!4663 = distinct !DILexicalBlock(scope: !4664, file: !1, line: 631, column: 11)
!4664 = distinct !DILexicalBlock(scope: !4658, file: !1, line: 630, column: 34)
!4665 = !DILocation(line: 631, column: 21, scope: !4663)
!4666 = !DILocation(line: 631, column: 11, scope: !4664)
!4667 = !DILocation(line: 631, column: 33, scope: !4663)
!4668 = !DILocation(line: 632, column: 26, scope: !4664)
!4669 = !DILocation(line: 632, column: 7, scope: !4664)
!4670 = !DILocation(line: 633, column: 6, scope: !4664)
!4671 = !DILocation(line: 634, column: 10, scope: !4672)
!4672 = distinct !DILexicalBlock(scope: !4659, file: !1, line: 634, column: 10)
!4673 = !DILocation(line: 634, column: 10, scope: !4659)
!4674 = !DILocation(line: 634, column: 55, scope: !4672)
!4675 = !DILocation(line: 634, column: 64, scope: !4672)
!4676 = !DILocation(line: 634, column: 24, scope: !4672)
!4677 = !DILocation(line: 635, column: 18, scope: !4659)
!4678 = !DILocation(line: 635, column: 27, scope: !4659)
!4679 = !DILocation(line: 635, column: 30, scope: !4659)
!4680 = !DILocation(line: 635, column: 6, scope: !4659)
!4681 = !DILocation(line: 636, column: 10, scope: !4682)
!4682 = distinct !DILexicalBlock(scope: !4659, file: !1, line: 636, column: 10)
!4683 = !DILocation(line: 636, column: 10, scope: !4659)
!4684 = !DILocation(line: 636, column: 55, scope: !4682)
!4685 = !DILocation(line: 636, column: 64, scope: !4682)
!4686 = !DILocation(line: 636, column: 24, scope: !4682)
!4687 = !DILocation(line: 637, column: 18, scope: !4659)
!4688 = !DILocation(line: 637, column: 27, scope: !4659)
!4689 = !DILocation(line: 637, column: 30, scope: !4659)
!4690 = !DILocation(line: 637, column: 6, scope: !4659)
!4691 = !DILocation(line: 638, column: 10, scope: !4692)
!4692 = distinct !DILexicalBlock(scope: !4659, file: !1, line: 638, column: 10)
!4693 = !DILocation(line: 638, column: 10, scope: !4659)
!4694 = !DILocation(line: 638, column: 55, scope: !4692)
!4695 = !DILocation(line: 638, column: 64, scope: !4692)
!4696 = !DILocation(line: 638, column: 24, scope: !4692)
!4697 = !DILocation(line: 639, column: 18, scope: !4659)
!4698 = !DILocation(line: 639, column: 27, scope: !4659)
!4699 = !DILocation(line: 639, column: 30, scope: !4659)
!4700 = !DILocation(line: 639, column: 6, scope: !4659)
!4701 = !DILocation(line: 640, column: 5, scope: !4659)
!4702 = !DILocalVariable(name: "shade_type", scope: !4703, file: !1, line: 642, type: !4348)
!4703 = distinct !DILexicalBlock(scope: !4655, file: !1, line: 641, column: 10)
!4704 = !DILocation(line: 642, column: 19, scope: !4703)
!4705 = !DILocation(line: 642, column: 32, scope: !4703)
!4706 = !DILocation(line: 643, column: 10, scope: !4707)
!4707 = distinct !DILexicalBlock(scope: !4703, file: !1, line: 643, column: 10)
!4708 = !DILocation(line: 643, column: 24, scope: !4707)
!4709 = !DILocation(line: 643, column: 21, scope: !4707)
!4710 = !DILocation(line: 643, column: 10, scope: !4703)
!4711 = !DILocation(line: 644, column: 11, scope: !4712)
!4712 = distinct !DILexicalBlock(scope: !4713, file: !1, line: 644, column: 11)
!4713 = distinct !DILexicalBlock(scope: !4707, file: !1, line: 643, column: 36)
!4714 = !DILocation(line: 644, column: 21, scope: !4712)
!4715 = !DILocation(line: 644, column: 11, scope: !4713)
!4716 = !DILocation(line: 644, column: 33, scope: !4712)
!4717 = !DILocation(line: 645, column: 34, scope: !4713)
!4718 = !DILocation(line: 645, column: 32, scope: !4713)
!4719 = !DILocation(line: 645, column: 7, scope: !4713)
!4720 = !DILocation(line: 646, column: 26, scope: !4713)
!4721 = !DILocation(line: 646, column: 7, scope: !4713)
!4722 = !DILocation(line: 647, column: 6, scope: !4713)
!4723 = !DILocation(line: 648, column: 23, scope: !4724)
!4724 = distinct !DILexicalBlock(scope: !4703, file: !1, line: 648, column: 10)
!4725 = !DILocation(line: 648, column: 20, scope: !4724)
!4726 = !DILocation(line: 648, column: 10, scope: !4703)
!4727 = !DILocation(line: 649, column: 11, scope: !4728)
!4728 = distinct !DILexicalBlock(scope: !4729, file: !1, line: 649, column: 11)
!4729 = distinct !DILexicalBlock(scope: !4724, file: !1, line: 648, column: 34)
!4730 = !DILocation(line: 649, column: 21, scope: !4728)
!4731 = !DILocation(line: 649, column: 11, scope: !4729)
!4732 = !DILocation(line: 649, column: 33, scope: !4728)
!4733 = !DILocation(line: 650, column: 26, scope: !4729)
!4734 = !DILocation(line: 650, column: 7, scope: !4729)
!4735 = !DILocation(line: 651, column: 6, scope: !4729)
!4736 = !DILocation(line: 653, column: 11, scope: !4737)
!4737 = distinct !DILexicalBlock(scope: !4703, file: !1, line: 653, column: 10)
!4738 = !DILocation(line: 653, column: 10, scope: !4703)
!4739 = !DILocation(line: 654, column: 19, scope: !4740)
!4740 = distinct !DILexicalBlock(scope: !4737, file: !1, line: 653, column: 23)
!4741 = !DILocation(line: 654, column: 24, scope: !4740)
!4742 = !DILocation(line: 654, column: 7, scope: !4740)
!4743 = !DILocation(line: 655, column: 11, scope: !4744)
!4744 = distinct !DILexicalBlock(scope: !4740, file: !1, line: 655, column: 11)
!4745 = !DILocation(line: 655, column: 11, scope: !4740)
!4746 = !DILocation(line: 655, column: 56, scope: !4744)
!4747 = !DILocation(line: 655, column: 65, scope: !4744)
!4748 = !DILocation(line: 655, column: 25, scope: !4744)
!4749 = !DILocation(line: 656, column: 19, scope: !4740)
!4750 = !DILocation(line: 656, column: 28, scope: !4740)
!4751 = !DILocation(line: 656, column: 31, scope: !4740)
!4752 = !DILocation(line: 656, column: 7, scope: !4740)
!4753 = !DILocation(line: 657, column: 11, scope: !4754)
!4754 = distinct !DILexicalBlock(scope: !4740, file: !1, line: 657, column: 11)
!4755 = !DILocation(line: 657, column: 11, scope: !4740)
!4756 = !DILocation(line: 657, column: 56, scope: !4754)
!4757 = !DILocation(line: 657, column: 65, scope: !4754)
!4758 = !DILocation(line: 657, column: 25, scope: !4754)
!4759 = !DILocation(line: 658, column: 19, scope: !4740)
!4760 = !DILocation(line: 658, column: 28, scope: !4740)
!4761 = !DILocation(line: 658, column: 31, scope: !4740)
!4762 = !DILocation(line: 658, column: 7, scope: !4740)
!4763 = !DILocation(line: 659, column: 11, scope: !4764)
!4764 = distinct !DILexicalBlock(scope: !4740, file: !1, line: 659, column: 11)
!4765 = !DILocation(line: 659, column: 11, scope: !4740)
!4766 = !DILocation(line: 659, column: 56, scope: !4764)
!4767 = !DILocation(line: 659, column: 65, scope: !4764)
!4768 = !DILocation(line: 659, column: 25, scope: !4764)
!4769 = !DILocation(line: 660, column: 19, scope: !4740)
!4770 = !DILocation(line: 660, column: 28, scope: !4740)
!4771 = !DILocation(line: 660, column: 31, scope: !4740)
!4772 = !DILocation(line: 660, column: 7, scope: !4740)
!4773 = !DILocation(line: 661, column: 6, scope: !4740)
!4774 = !DILocation(line: 663, column: 11, scope: !4775)
!4775 = distinct !DILexicalBlock(scope: !4776, file: !1, line: 663, column: 11)
!4776 = distinct !DILexicalBlock(scope: !4737, file: !1, line: 662, column: 11)
!4777 = !DILocation(line: 663, column: 11, scope: !4776)
!4778 = !DILocation(line: 663, column: 56, scope: !4775)
!4779 = !DILocation(line: 663, column: 65, scope: !4775)
!4780 = !DILocation(line: 663, column: 25, scope: !4775)
!4781 = !DILocation(line: 664, column: 11, scope: !4782)
!4782 = distinct !DILexicalBlock(scope: !4776, file: !1, line: 664, column: 11)
!4783 = !DILocation(line: 664, column: 11, scope: !4776)
!4784 = !DILocation(line: 664, column: 30, scope: !4782)
!4785 = !DILocation(line: 664, column: 36, scope: !4782)
!4786 = !DILocation(line: 664, column: 18, scope: !4782)
!4787 = !DILocation(line: 665, column: 24, scope: !4782)
!4788 = !DILocation(line: 665, column: 33, scope: !4782)
!4789 = !DILocation(line: 665, column: 36, scope: !4782)
!4790 = !DILocation(line: 665, column: 12, scope: !4782)
!4791 = !DILocation(line: 666, column: 19, scope: !4776)
!4792 = !DILocation(line: 666, column: 28, scope: !4776)
!4793 = !DILocation(line: 666, column: 31, scope: !4776)
!4794 = !DILocation(line: 666, column: 7, scope: !4776)
!4795 = !DILocation(line: 667, column: 11, scope: !4796)
!4796 = distinct !DILexicalBlock(scope: !4776, file: !1, line: 667, column: 11)
!4797 = !DILocation(line: 667, column: 11, scope: !4776)
!4798 = !DILocation(line: 667, column: 56, scope: !4796)
!4799 = !DILocation(line: 667, column: 65, scope: !4796)
!4800 = !DILocation(line: 667, column: 25, scope: !4796)
!4801 = !DILocation(line: 668, column: 11, scope: !4802)
!4802 = distinct !DILexicalBlock(scope: !4776, file: !1, line: 668, column: 11)
!4803 = !DILocation(line: 668, column: 11, scope: !4776)
!4804 = !DILocation(line: 668, column: 30, scope: !4802)
!4805 = !DILocation(line: 668, column: 36, scope: !4802)
!4806 = !DILocation(line: 668, column: 18, scope: !4802)
!4807 = !DILocation(line: 669, column: 24, scope: !4802)
!4808 = !DILocation(line: 669, column: 33, scope: !4802)
!4809 = !DILocation(line: 669, column: 36, scope: !4802)
!4810 = !DILocation(line: 669, column: 12, scope: !4802)
!4811 = !DILocation(line: 670, column: 19, scope: !4776)
!4812 = !DILocation(line: 670, column: 28, scope: !4776)
!4813 = !DILocation(line: 670, column: 31, scope: !4776)
!4814 = !DILocation(line: 670, column: 7, scope: !4776)
!4815 = !DILocation(line: 671, column: 11, scope: !4816)
!4816 = distinct !DILexicalBlock(scope: !4776, file: !1, line: 671, column: 11)
!4817 = !DILocation(line: 671, column: 11, scope: !4776)
!4818 = !DILocation(line: 671, column: 56, scope: !4816)
!4819 = !DILocation(line: 671, column: 65, scope: !4816)
!4820 = !DILocation(line: 671, column: 25, scope: !4816)
!4821 = !DILocation(line: 672, column: 11, scope: !4822)
!4822 = distinct !DILexicalBlock(scope: !4776, file: !1, line: 672, column: 11)
!4823 = !DILocation(line: 672, column: 11, scope: !4776)
!4824 = !DILocation(line: 672, column: 30, scope: !4822)
!4825 = !DILocation(line: 672, column: 36, scope: !4822)
!4826 = !DILocation(line: 672, column: 18, scope: !4822)
!4827 = !DILocation(line: 673, column: 24, scope: !4822)
!4828 = !DILocation(line: 673, column: 33, scope: !4822)
!4829 = !DILocation(line: 673, column: 36, scope: !4822)
!4830 = !DILocation(line: 673, column: 12, scope: !4822)
!4831 = !DILocation(line: 674, column: 19, scope: !4776)
!4832 = !DILocation(line: 674, column: 28, scope: !4776)
!4833 = !DILocation(line: 674, column: 31, scope: !4776)
!4834 = !DILocation(line: 674, column: 7, scope: !4776)
!4835 = !DILocation(line: 678, column: 14, scope: !4624)
!4836 = !DILocation(line: 678, column: 26, scope: !4624)
!4837 = !DILocation(line: 678, column: 11, scope: !4624)
!4838 = !DILocation(line: 679, column: 10, scope: !4839)
!4839 = distinct !DILexicalBlock(scope: !4624, file: !1, line: 679, column: 9)
!4840 = !DILocation(line: 679, column: 23, scope: !4839)
!4841 = !DILocation(line: 679, column: 27, scope: !4839)
!4842 = !DILocation(line: 679, column: 33, scope: !4839)
!4843 = !DILocation(line: 679, column: 37, scope: !4839)
!4844 = !DILocation(line: 679, column: 42, scope: !4839)
!4845 = !DILocation(line: 679, column: 39, scope: !4839)
!4846 = !DILocation(line: 679, column: 9, scope: !4624)
!4847 = !DILocation(line: 680, column: 15, scope: !4848)
!4848 = distinct !DILexicalBlock(scope: !4839, file: !1, line: 679, column: 52)
!4849 = !DILocation(line: 680, column: 20, scope: !4848)
!4850 = !DILocation(line: 680, column: 30, scope: !4848)
!4851 = !DILocation(line: 680, column: 39, scope: !4848)
!4852 = !DILocation(line: 680, column: 41, scope: !4848)
!4853 = !DILocation(line: 680, column: 50, scope: !4848)
!4854 = !DILocation(line: 680, column: 53, scope: !4848)
!4855 = !DILocation(line: 680, column: 27, scope: !4848)
!4856 = !DILocation(line: 680, column: 12, scope: !4848)
!4857 = !DILocation(line: 681, column: 5, scope: !4848)
!4858 = !DILocation(line: 683, column: 9, scope: !4859)
!4859 = distinct !DILexicalBlock(scope: !4624, file: !1, line: 683, column: 9)
!4860 = !DILocation(line: 683, column: 9, scope: !4624)
!4861 = !DILocation(line: 684, column: 6, scope: !4862)
!4862 = distinct !DILexicalBlock(scope: !4859, file: !1, line: 683, column: 16)
!4863 = !DILocation(line: 685, column: 16, scope: !4862)
!4864 = !DILocation(line: 687, column: 6, scope: !4862)
!4865 = !DILocation(line: 688, column: 5, scope: !4862)
!4866 = !DILocation(line: 689, column: 4, scope: !4624)
!4867 = !DILocation(line: 690, column: 3, scope: !4597)
!4868 = !DILocation(line: 605, column: 28, scope: !4592)
!4869 = !DILocation(line: 605, column: 3, scope: !4592)
!4870 = distinct !{!4870, !4595, !4871}
!4871 = !DILocation(line: 690, column: 3, scope: !4589)
!4872 = !DILocation(line: 694, column: 6, scope: !4873)
!4873 = distinct !DILexicalBlock(scope: !4160, file: !1, line: 694, column: 6)
!4874 = !DILocation(line: 694, column: 16, scope: !4873)
!4875 = !DILocation(line: 694, column: 6, scope: !4160)
!4876 = !DILocation(line: 694, column: 28, scope: !4873)
!4877 = !DILocation(line: 695, column: 1, scope: !4160)
!4878 = distinct !DISubprogram(name: "emDM_drawMappedFacesTex", scope: !1, file: !1, line: 918, type: !1669, scopeLine: 922, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1952)
!4879 = !DILocalVariable(name: "dm", arg: 1, scope: !4878, file: !1, line: 918, type: !154)
!4880 = !DILocation(line: 918, column: 50, scope: !4878)
!4881 = !DILocalVariable(name: "setDrawOptions", arg: 2, scope: !4878, file: !1, line: 919, type: !1663)
!4882 = !DILocation(line: 919, column: 54, scope: !4878)
!4883 = !DILocalVariable(name: "compareDrawOptions", arg: 3, scope: !4878, file: !1, line: 920, type: !1650)
!4884 = !DILocation(line: 920, column: 58, scope: !4878)
!4885 = !DILocalVariable(name: "userData", arg: 4, scope: !4878, file: !1, line: 921, type: !182)
!4886 = !DILocation(line: 921, column: 43, scope: !4878)
!4887 = !DILocalVariable(name: "UNUSED_flag", arg: 5, scope: !4878, file: !1, line: 921, type: !1654)
!4888 = !DILocation(line: 921, column: 64, scope: !4878)
!4889 = !DILocation(line: 923, column: 27, scope: !4878)
!4890 = !DILocation(line: 923, column: 37, scope: !4878)
!4891 = !DILocation(line: 923, column: 53, scope: !4878)
!4892 = !DILocation(line: 923, column: 73, scope: !4878)
!4893 = !DILocation(line: 923, column: 2, scope: !4878)
!4894 = !DILocation(line: 924, column: 1, scope: !4878)
!4895 = distinct !DISubprogram(name: "emDM_drawMappedFacesGLSL", scope: !1, file: !1, line: 987, type: !1673, scopeLine: 991, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1952)
!4896 = !DILocalVariable(name: "dm", arg: 1, scope: !4895, file: !1, line: 987, type: !154)
!4897 = !DILocation(line: 987, column: 51, scope: !4895)
!4898 = !DILocalVariable(name: "setMaterial", arg: 2, scope: !4895, file: !1, line: 988, type: !1624)
!4899 = !DILocation(line: 988, column: 52, scope: !4895)
!4900 = !DILocalVariable(name: "setDrawOptions", arg: 3, scope: !4895, file: !1, line: 989, type: !1663)
!4901 = !DILocation(line: 989, column: 55, scope: !4895)
!4902 = !DILocalVariable(name: "userData", arg: 4, scope: !4895, file: !1, line: 990, type: !182)
!4903 = !DILocation(line: 990, column: 44, scope: !4895)
!4904 = !DILocalVariable(name: "bmdm", scope: !4895, file: !1, line: 992, type: !1700)
!4905 = !DILocation(line: 992, column: 20, scope: !4895)
!4906 = !DILocation(line: 992, column: 47, scope: !4895)
!4907 = !DILocation(line: 992, column: 27, scope: !4895)
!4908 = !DILocalVariable(name: "em", scope: !4895, file: !1, line: 993, type: !1706)
!4909 = !DILocation(line: 993, column: 14, scope: !4895)
!4910 = !DILocation(line: 993, column: 19, scope: !4895)
!4911 = !DILocation(line: 993, column: 25, scope: !4895)
!4912 = !DILocalVariable(name: "bm", scope: !4895, file: !1, line: 994, type: !1847)
!4913 = !DILocation(line: 994, column: 9, scope: !4895)
!4914 = !DILocation(line: 994, column: 14, scope: !4895)
!4915 = !DILocation(line: 994, column: 18, scope: !4895)
!4916 = !DILocalVariable(name: "looptris", scope: !4895, file: !1, line: 995, type: !1872)
!4917 = !DILocation(line: 995, column: 19, scope: !4895)
!4918 = !DILocation(line: 995, column: 34, scope: !4895)
!4919 = !DILocation(line: 995, column: 38, scope: !4895)
!4920 = !DILocalVariable(name: "vertexCos", scope: !4895, file: !1, line: 997, type: !1698)
!4921 = !DILocation(line: 997, column: 16, scope: !4895)
!4922 = !DILocation(line: 997, column: 32, scope: !4895)
!4923 = !DILocation(line: 997, column: 38, scope: !4895)
!4924 = !DILocalVariable(name: "vertexNos", scope: !4895, file: !1, line: 998, type: !1698)
!4925 = !DILocation(line: 998, column: 16, scope: !4895)
!4926 = !DILocalVariable(name: "polyNos", scope: !4895, file: !1, line: 999, type: !1698)
!4927 = !DILocation(line: 999, column: 16, scope: !4895)
!4928 = !DILocalVariable(name: "lnors", scope: !4895, file: !1, line: 1000, type: !1698)
!4929 = !DILocation(line: 1000, column: 16, scope: !4895)
!4930 = !DILocation(line: 1000, column: 28, scope: !4895)
!4931 = !DILocation(line: 1000, column: 32, scope: !4895)
!4932 = !DILocation(line: 1000, column: 49, scope: !4895)
!4933 = !DILocalVariable(name: "efa", scope: !4895, file: !1, line: 1002, type: !1795)
!4934 = !DILocation(line: 1002, column: 10, scope: !4895)
!4935 = !DILocalVariable(name: "attribs", scope: !4895, file: !1, line: 1003, type: !4936)
!4936 = !DIDerivedType(tag: DW_TAG_typedef, name: "DMVertexAttribs", file: !4, line: 743, baseType: !4937)
!4937 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "DMVertexAttribs", file: !4, line: 721, size: 3008, elements: !4938)
!4938 = !{!4939, !4947, !4955, !4961, !4968, !4969, !4970, !4971}
!4939 = !DIDerivedType(tag: DW_TAG_member, name: "tface", scope: !4937, file: !4, line: 725, baseType: !4940, size: 1536)
!4940 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4941, size: 1536, elements: !962)
!4941 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4937, file: !4, line: 722, size: 192, elements: !4942)
!4942 = !{!4943, !4944, !4945, !4946}
!4943 = !DIDerivedType(tag: DW_TAG_member, name: "array", scope: !4941, file: !4, line: 723, baseType: !1637, size: 64)
!4944 = !DIDerivedType(tag: DW_TAG_member, name: "em_offset", scope: !4941, file: !4, line: 724, baseType: !168, size: 32, offset: 64)
!4945 = !DIDerivedType(tag: DW_TAG_member, name: "gl_index", scope: !4941, file: !4, line: 724, baseType: !168, size: 32, offset: 96)
!4946 = !DIDerivedType(tag: DW_TAG_member, name: "gl_texco", scope: !4941, file: !4, line: 724, baseType: !168, size: 32, offset: 128)
!4947 = !DIDerivedType(tag: DW_TAG_member, name: "mcol", scope: !4937, file: !4, line: 730, baseType: !4948, size: 1024, offset: 1536)
!4948 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4949, size: 1024, elements: !962)
!4949 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4937, file: !4, line: 727, size: 128, elements: !4950)
!4950 = !{!4951, !4953, !4954}
!4951 = !DIDerivedType(tag: DW_TAG_member, name: "array", scope: !4949, file: !4, line: 728, baseType: !4952, size: 64)
!4952 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1924, size: 64)
!4953 = !DIDerivedType(tag: DW_TAG_member, name: "em_offset", scope: !4949, file: !4, line: 729, baseType: !168, size: 32, offset: 64)
!4954 = !DIDerivedType(tag: DW_TAG_member, name: "gl_index", scope: !4949, file: !4, line: 729, baseType: !168, size: 32, offset: 96)
!4955 = !DIDerivedType(tag: DW_TAG_member, name: "tang", scope: !4937, file: !4, line: 735, baseType: !4956, size: 128, offset: 2560)
!4956 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4937, file: !4, line: 732, size: 128, elements: !4957)
!4957 = !{!4958, !4959, !4960}
!4958 = !DIDerivedType(tag: DW_TAG_member, name: "array", scope: !4956, file: !4, line: 733, baseType: !1623, size: 64)
!4959 = !DIDerivedType(tag: DW_TAG_member, name: "em_offset", scope: !4956, file: !4, line: 734, baseType: !168, size: 32, offset: 64)
!4960 = !DIDerivedType(tag: DW_TAG_member, name: "gl_index", scope: !4956, file: !4, line: 734, baseType: !168, size: 32, offset: 96)
!4961 = !DIDerivedType(tag: DW_TAG_member, name: "orco", scope: !4937, file: !4, line: 740, baseType: !4962, size: 192, offset: 2688)
!4962 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4937, file: !4, line: 737, size: 192, elements: !4963)
!4963 = !{!4964, !4965, !4966, !4967}
!4964 = !DIDerivedType(tag: DW_TAG_member, name: "array", scope: !4962, file: !4, line: 738, baseType: !473, size: 64)
!4965 = !DIDerivedType(tag: DW_TAG_member, name: "em_offset", scope: !4962, file: !4, line: 739, baseType: !168, size: 32, offset: 64)
!4966 = !DIDerivedType(tag: DW_TAG_member, name: "gl_index", scope: !4962, file: !4, line: 739, baseType: !168, size: 32, offset: 96)
!4967 = !DIDerivedType(tag: DW_TAG_member, name: "gl_texco", scope: !4962, file: !4, line: 739, baseType: !168, size: 32, offset: 128)
!4968 = !DIDerivedType(tag: DW_TAG_member, name: "tottface", scope: !4937, file: !4, line: 742, baseType: !168, size: 32, offset: 2880)
!4969 = !DIDerivedType(tag: DW_TAG_member, name: "totmcol", scope: !4937, file: !4, line: 742, baseType: !168, size: 32, offset: 2912)
!4970 = !DIDerivedType(tag: DW_TAG_member, name: "tottang", scope: !4937, file: !4, line: 742, baseType: !168, size: 32, offset: 2944)
!4971 = !DIDerivedType(tag: DW_TAG_member, name: "totorco", scope: !4937, file: !4, line: 742, baseType: !168, size: 32, offset: 2976)
!4972 = !DILocation(line: 1003, column: 18, scope: !4895)
!4973 = !DILocalVariable(name: "gattribs", scope: !4895, file: !1, line: 1004, type: !4974)
!4974 = !DIDerivedType(tag: DW_TAG_typedef, name: "GPUVertexAttribs", file: !4975, line: 206, baseType: !4976)
!4975 = !DIFile(filename: "blender/source/blender/gpu/GPU_extensions.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4976 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GPUVertexAttribs", file: !4975, line: 196, size: 20512, elements: !4977)
!4977 = !{!4978, !4987}
!4978 = !DIDerivedType(tag: DW_TAG_member, name: "layer", scope: !4976, file: !4975, line: 203, baseType: !4979, size: 20480)
!4979 = !DICompositeType(tag: DW_TAG_array_type, baseType: !4980, size: 20480, elements: !1435)
!4980 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4976, file: !4975, line: 197, size: 640, elements: !4981)
!4981 = !{!4982, !4983, !4984, !4985, !4986}
!4982 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4980, file: !4975, line: 198, baseType: !168, size: 32)
!4983 = !DIDerivedType(tag: DW_TAG_member, name: "glindex", scope: !4980, file: !4975, line: 199, baseType: !168, size: 32, offset: 32)
!4984 = !DIDerivedType(tag: DW_TAG_member, name: "gltexco", scope: !4980, file: !4975, line: 200, baseType: !168, size: 32, offset: 64)
!4985 = !DIDerivedType(tag: DW_TAG_member, name: "attribid", scope: !4980, file: !4975, line: 201, baseType: !168, size: 32, offset: 96)
!4986 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !4980, file: !4975, line: 202, baseType: !177, size: 512, offset: 128)
!4987 = !DIDerivedType(tag: DW_TAG_member, name: "totlayer", scope: !4976, file: !4975, line: 205, baseType: !168, size: 32, offset: 20480)
!4988 = !DILocation(line: 1004, column: 19, scope: !4895)
!4989 = !DILocalVariable(name: "i", scope: !4895, file: !1, line: 1006, type: !168)
!4990 = !DILocation(line: 1006, column: 6, scope: !4895)
!4991 = !DILocalVariable(name: "matnr", scope: !4895, file: !1, line: 1006, type: !168)
!4992 = !DILocation(line: 1006, column: 9, scope: !4895)
!4993 = !DILocalVariable(name: "new_matnr", scope: !4895, file: !1, line: 1006, type: !168)
!4994 = !DILocation(line: 1006, column: 16, scope: !4895)
!4995 = !DILocalVariable(name: "fi", scope: !4895, file: !1, line: 1006, type: !168)
!4996 = !DILocation(line: 1006, column: 27, scope: !4895)
!4997 = !DILocalVariable(name: "do_draw", scope: !4895, file: !1, line: 1007, type: !871)
!4998 = !DILocation(line: 1007, column: 7, scope: !4895)
!4999 = !DILocation(line: 1009, column: 10, scope: !4895)
!5000 = !DILocation(line: 1010, column: 8, scope: !4895)
!5001 = !DILocation(line: 1012, column: 2, scope: !4895)
!5002 = !DILocation(line: 1014, column: 25, scope: !4895)
!5003 = !DILocation(line: 1014, column: 2, scope: !4895)
!5004 = !DILocation(line: 1015, column: 25, scope: !4895)
!5005 = !DILocation(line: 1015, column: 2, scope: !4895)
!5006 = !DILocation(line: 1016, column: 14, scope: !4895)
!5007 = !DILocation(line: 1016, column: 20, scope: !4895)
!5008 = !DILocation(line: 1016, column: 12, scope: !4895)
!5009 = !DILocation(line: 1017, column: 12, scope: !4895)
!5010 = !DILocation(line: 1017, column: 18, scope: !4895)
!5011 = !DILocation(line: 1017, column: 10, scope: !4895)
!5012 = !DILocation(line: 1020, column: 2, scope: !4895)
!5013 = !DILocation(line: 1021, column: 28, scope: !4895)
!5014 = !DILocation(line: 1021, column: 32, scope: !4895)
!5015 = !DILocation(line: 1021, column: 2, scope: !4895)
!5016 = !DILocation(line: 1023, column: 9, scope: !5017)
!5017 = distinct !DILexicalBlock(scope: !4895, file: !1, line: 1023, column: 2)
!5018 = !DILocation(line: 1023, column: 7, scope: !5017)
!5019 = !DILocation(line: 1023, column: 14, scope: !5020)
!5020 = distinct !DILexicalBlock(scope: !5017, file: !1, line: 1023, column: 2)
!5021 = !DILocation(line: 1023, column: 18, scope: !5020)
!5022 = !DILocation(line: 1023, column: 22, scope: !5020)
!5023 = !DILocation(line: 1023, column: 16, scope: !5020)
!5024 = !DILocation(line: 1023, column: 2, scope: !5017)
!5025 = !DILocalVariable(name: "ltri", scope: !5026, file: !1, line: 1024, type: !2848)
!5026 = distinct !DILexicalBlock(scope: !5020, file: !1, line: 1023, column: 35)
!5027 = !DILocation(line: 1024, column: 12, scope: !5026)
!5028 = !DILocation(line: 1024, column: 19, scope: !5026)
!5029 = !DILocation(line: 1024, column: 28, scope: !5026)
!5030 = !DILocalVariable(name: "drawSmooth", scope: !5026, file: !1, line: 1025, type: !168)
!5031 = !DILocation(line: 1025, column: 7, scope: !5026)
!5032 = !DILocation(line: 1027, column: 9, scope: !5026)
!5033 = !DILocation(line: 1027, column: 18, scope: !5026)
!5034 = !DILocation(line: 1027, column: 7, scope: !5026)
!5035 = !DILocation(line: 1029, column: 7, scope: !5036)
!5036 = distinct !DILexicalBlock(scope: !5026, file: !1, line: 1029, column: 7)
!5037 = !DILocation(line: 1029, column: 22, scope: !5036)
!5038 = !DILocation(line: 1029, column: 26, scope: !5036)
!5039 = !DILocation(line: 1029, column: 41, scope: !5036)
!5040 = !DILocation(line: 1029, column: 51, scope: !5036)
!5041 = !DILocation(line: 1029, column: 75, scope: !5036)
!5042 = !DILocation(line: 1029, column: 7, scope: !5026)
!5043 = !DILocation(line: 1030, column: 4, scope: !5036)
!5044 = !DILocation(line: 1032, column: 15, scope: !5026)
!5045 = !DILocation(line: 1032, column: 20, scope: !5026)
!5046 = !DILocation(line: 1032, column: 27, scope: !5026)
!5047 = !DILocation(line: 1032, column: 13, scope: !5026)
!5048 = !DILocation(line: 1033, column: 7, scope: !5049)
!5049 = distinct !DILexicalBlock(scope: !5026, file: !1, line: 1033, column: 7)
!5050 = !DILocation(line: 1033, column: 20, scope: !5049)
!5051 = !DILocation(line: 1033, column: 17, scope: !5049)
!5052 = !DILocation(line: 1033, column: 7, scope: !5026)
!5053 = !DILocation(line: 1034, column: 8, scope: !5054)
!5054 = distinct !DILexicalBlock(scope: !5055, file: !1, line: 1034, column: 8)
!5055 = distinct !DILexicalBlock(scope: !5049, file: !1, line: 1033, column: 27)
!5056 = !DILocation(line: 1034, column: 14, scope: !5054)
!5057 = !DILocation(line: 1034, column: 8, scope: !5055)
!5058 = !DILocation(line: 1035, column: 5, scope: !5054)
!5059 = !DILocation(line: 1037, column: 14, scope: !5055)
!5060 = !DILocation(line: 1037, column: 34, scope: !5055)
!5061 = !DILocation(line: 1037, column: 32, scope: !5055)
!5062 = !DILocation(line: 1037, column: 45, scope: !5055)
!5063 = !DILocation(line: 1037, column: 12, scope: !5055)
!5064 = !DILocation(line: 1038, column: 8, scope: !5065)
!5065 = distinct !DILexicalBlock(scope: !5055, file: !1, line: 1038, column: 8)
!5066 = !DILocation(line: 1038, column: 8, scope: !5055)
!5067 = !DILocation(line: 1039, column: 35, scope: !5065)
!5068 = !DILocation(line: 1039, column: 5, scope: !5065)
!5069 = !DILocation(line: 1041, column: 4, scope: !5055)
!5070 = !DILocation(line: 1042, column: 3, scope: !5055)
!5071 = !DILocation(line: 1044, column: 7, scope: !5072)
!5072 = distinct !DILexicalBlock(scope: !5026, file: !1, line: 1044, column: 7)
!5073 = !DILocation(line: 1044, column: 7, scope: !5026)
!5074 = !DILocation(line: 1047, column: 17, scope: !5075)
!5075 = distinct !DILexicalBlock(scope: !5072, file: !1, line: 1044, column: 16)
!5076 = !DILocation(line: 1047, column: 23, scope: !5075)
!5077 = !DILocation(line: 1047, column: 26, scope: !5075)
!5078 = !DILocation(line: 1047, column: 15, scope: !5075)
!5079 = !DILocation(line: 1049, column: 9, scope: !5080)
!5080 = distinct !DILexicalBlock(scope: !5075, file: !1, line: 1049, column: 8)
!5081 = !DILocation(line: 1049, column: 8, scope: !5075)
!5082 = !DILocation(line: 1050, column: 9, scope: !5083)
!5083 = distinct !DILexicalBlock(scope: !5084, file: !1, line: 1050, column: 9)
!5084 = distinct !DILexicalBlock(scope: !5080, file: !1, line: 1049, column: 21)
!5085 = !DILocation(line: 1050, column: 9, scope: !5084)
!5086 = !DILocation(line: 1051, column: 18, scope: !5087)
!5087 = distinct !DILexicalBlock(scope: !5083, file: !1, line: 1050, column: 20)
!5088 = !DILocation(line: 1051, column: 26, scope: !5087)
!5089 = !DILocation(line: 1051, column: 6, scope: !5087)
!5090 = !DILocation(line: 1052, column: 14, scope: !5091)
!5091 = distinct !DILexicalBlock(scope: !5087, file: !1, line: 1052, column: 6)
!5092 = !DILocation(line: 1052, column: 11, scope: !5091)
!5093 = !DILocation(line: 1052, column: 19, scope: !5094)
!5094 = distinct !DILexicalBlock(scope: !5091, file: !1, line: 1052, column: 6)
!5095 = !DILocation(line: 1052, column: 22, scope: !5094)
!5096 = !DILocation(line: 1052, column: 6, scope: !5091)
!5097 = !DILocation(line: 1053, column: 46, scope: !5098)
!5098 = distinct !DILexicalBlock(scope: !5094, file: !1, line: 1052, column: 33)
!5099 = !DILocation(line: 1053, column: 51, scope: !5098)
!5100 = !DILocation(line: 1053, column: 56, scope: !5098)
!5101 = !DILocation(line: 1053, column: 7, scope: !5098)
!5102 = !DILocation(line: 1054, column: 19, scope: !5098)
!5103 = !DILocation(line: 1054, column: 29, scope: !5098)
!5104 = !DILocation(line: 1054, column: 7, scope: !5098)
!5105 = !DILocation(line: 1055, column: 6, scope: !5098)
!5106 = !DILocation(line: 1052, column: 29, scope: !5094)
!5107 = !DILocation(line: 1052, column: 6, scope: !5094)
!5108 = distinct !{!5108, !5096, !5109}
!5109 = !DILocation(line: 1055, column: 6, scope: !5091)
!5110 = !DILocation(line: 1056, column: 5, scope: !5087)
!5111 = !DILocation(line: 1058, column: 18, scope: !5112)
!5112 = distinct !DILexicalBlock(scope: !5083, file: !1, line: 1057, column: 10)
!5113 = !DILocation(line: 1058, column: 23, scope: !5112)
!5114 = !DILocation(line: 1058, column: 6, scope: !5112)
!5115 = !DILocation(line: 1059, column: 14, scope: !5116)
!5116 = distinct !DILexicalBlock(scope: !5112, file: !1, line: 1059, column: 6)
!5117 = !DILocation(line: 1059, column: 11, scope: !5116)
!5118 = !DILocation(line: 1059, column: 19, scope: !5119)
!5119 = distinct !DILexicalBlock(scope: !5116, file: !1, line: 1059, column: 6)
!5120 = !DILocation(line: 1059, column: 22, scope: !5119)
!5121 = !DILocation(line: 1059, column: 6, scope: !5116)
!5122 = !DILocation(line: 1060, column: 46, scope: !5123)
!5123 = distinct !DILexicalBlock(scope: !5119, file: !1, line: 1059, column: 33)
!5124 = !DILocation(line: 1060, column: 51, scope: !5123)
!5125 = !DILocation(line: 1060, column: 56, scope: !5123)
!5126 = !DILocation(line: 1060, column: 7, scope: !5123)
!5127 = !DILocation(line: 1061, column: 19, scope: !5123)
!5128 = !DILocation(line: 1061, column: 24, scope: !5123)
!5129 = !DILocation(line: 1061, column: 29, scope: !5123)
!5130 = !DILocation(line: 1061, column: 32, scope: !5123)
!5131 = !DILocation(line: 1061, column: 7, scope: !5123)
!5132 = !DILocation(line: 1062, column: 6, scope: !5123)
!5133 = !DILocation(line: 1059, column: 29, scope: !5119)
!5134 = !DILocation(line: 1059, column: 6, scope: !5119)
!5135 = distinct !{!5135, !5121, !5136}
!5136 = !DILocation(line: 1062, column: 6, scope: !5116)
!5137 = !DILocation(line: 1064, column: 4, scope: !5084)
!5138 = !DILocation(line: 1066, column: 9, scope: !5139)
!5139 = distinct !DILexicalBlock(scope: !5140, file: !1, line: 1066, column: 9)
!5140 = distinct !DILexicalBlock(scope: !5080, file: !1, line: 1065, column: 9)
!5141 = !DILocation(line: 1066, column: 9, scope: !5140)
!5142 = !DILocation(line: 1067, column: 14, scope: !5143)
!5143 = distinct !DILexicalBlock(scope: !5144, file: !1, line: 1067, column: 6)
!5144 = distinct !DILexicalBlock(scope: !5139, file: !1, line: 1066, column: 20)
!5145 = !DILocation(line: 1067, column: 11, scope: !5143)
!5146 = !DILocation(line: 1067, column: 19, scope: !5147)
!5147 = distinct !DILexicalBlock(scope: !5143, file: !1, line: 1067, column: 6)
!5148 = !DILocation(line: 1067, column: 22, scope: !5147)
!5149 = !DILocation(line: 1067, column: 6, scope: !5143)
!5150 = !DILocalVariable(name: "j", scope: !5151, file: !1, line: 1068, type: !1967)
!5151 = distinct !DILexicalBlock(scope: !5147, file: !1, line: 1067, column: 33)
!5152 = !DILocation(line: 1068, column: 17, scope: !5151)
!5153 = !DILocation(line: 1068, column: 21, scope: !5151)
!5154 = !DILocation(line: 1069, column: 46, scope: !5151)
!5155 = !DILocation(line: 1069, column: 51, scope: !5151)
!5156 = !DILocation(line: 1069, column: 56, scope: !5151)
!5157 = !DILocation(line: 1069, column: 7, scope: !5151)
!5158 = !DILocation(line: 1070, column: 11, scope: !5159)
!5159 = distinct !DILexicalBlock(scope: !5151, file: !1, line: 1070, column: 11)
!5160 = !DILocation(line: 1070, column: 11, scope: !5151)
!5161 = !DILocation(line: 1070, column: 30, scope: !5159)
!5162 = !DILocation(line: 1070, column: 36, scope: !5159)
!5163 = !DILocation(line: 1070, column: 18, scope: !5159)
!5164 = !DILocation(line: 1071, column: 24, scope: !5159)
!5165 = !DILocation(line: 1071, column: 34, scope: !5159)
!5166 = !DILocation(line: 1071, column: 12, scope: !5159)
!5167 = !DILocation(line: 1072, column: 19, scope: !5151)
!5168 = !DILocation(line: 1072, column: 29, scope: !5151)
!5169 = !DILocation(line: 1072, column: 7, scope: !5151)
!5170 = !DILocation(line: 1073, column: 6, scope: !5151)
!5171 = !DILocation(line: 1067, column: 29, scope: !5147)
!5172 = !DILocation(line: 1067, column: 6, scope: !5147)
!5173 = distinct !{!5173, !5149, !5174}
!5174 = !DILocation(line: 1073, column: 6, scope: !5143)
!5175 = !DILocation(line: 1074, column: 5, scope: !5144)
!5176 = !DILocation(line: 1076, column: 14, scope: !5177)
!5177 = distinct !DILexicalBlock(scope: !5178, file: !1, line: 1076, column: 6)
!5178 = distinct !DILexicalBlock(scope: !5139, file: !1, line: 1075, column: 10)
!5179 = !DILocation(line: 1076, column: 11, scope: !5177)
!5180 = !DILocation(line: 1076, column: 19, scope: !5181)
!5181 = distinct !DILexicalBlock(scope: !5177, file: !1, line: 1076, column: 6)
!5182 = !DILocation(line: 1076, column: 22, scope: !5181)
!5183 = !DILocation(line: 1076, column: 6, scope: !5177)
!5184 = !DILocation(line: 1077, column: 46, scope: !5185)
!5185 = distinct !DILexicalBlock(scope: !5181, file: !1, line: 1076, column: 33)
!5186 = !DILocation(line: 1077, column: 51, scope: !5185)
!5187 = !DILocation(line: 1077, column: 56, scope: !5185)
!5188 = !DILocation(line: 1077, column: 7, scope: !5185)
!5189 = !DILocation(line: 1078, column: 11, scope: !5190)
!5190 = distinct !DILexicalBlock(scope: !5185, file: !1, line: 1078, column: 11)
!5191 = !DILocation(line: 1078, column: 11, scope: !5185)
!5192 = !DILocation(line: 1078, column: 30, scope: !5190)
!5193 = !DILocation(line: 1078, column: 36, scope: !5190)
!5194 = !DILocation(line: 1078, column: 18, scope: !5190)
!5195 = !DILocation(line: 1079, column: 24, scope: !5190)
!5196 = !DILocation(line: 1079, column: 29, scope: !5190)
!5197 = !DILocation(line: 1079, column: 34, scope: !5190)
!5198 = !DILocation(line: 1079, column: 37, scope: !5190)
!5199 = !DILocation(line: 1079, column: 12, scope: !5190)
!5200 = !DILocation(line: 1080, column: 19, scope: !5185)
!5201 = !DILocation(line: 1080, column: 24, scope: !5185)
!5202 = !DILocation(line: 1080, column: 29, scope: !5185)
!5203 = !DILocation(line: 1080, column: 32, scope: !5185)
!5204 = !DILocation(line: 1080, column: 7, scope: !5185)
!5205 = !DILocation(line: 1081, column: 6, scope: !5185)
!5206 = !DILocation(line: 1076, column: 29, scope: !5181)
!5207 = !DILocation(line: 1076, column: 6, scope: !5181)
!5208 = distinct !{!5208, !5183, !5209}
!5209 = !DILocation(line: 1081, column: 6, scope: !5177)
!5210 = !DILocation(line: 1084, column: 3, scope: !5075)
!5211 = !DILocation(line: 1085, column: 2, scope: !5026)
!5212 = !DILocation(line: 1023, column: 31, scope: !5020)
!5213 = !DILocation(line: 1023, column: 2, scope: !5020)
!5214 = distinct !{!5214, !5024, !5215}
!5215 = !DILocation(line: 1085, column: 2, scope: !5017)
!5216 = !DILocation(line: 1087, column: 6, scope: !5217)
!5217 = distinct !DILexicalBlock(scope: !4895, file: !1, line: 1087, column: 6)
!5218 = !DILocation(line: 1087, column: 12, scope: !5217)
!5219 = !DILocation(line: 1087, column: 6, scope: !4895)
!5220 = !DILocation(line: 1088, column: 3, scope: !5221)
!5221 = distinct !DILexicalBlock(scope: !5217, file: !1, line: 1087, column: 19)
!5222 = !DILocation(line: 1089, column: 2, scope: !5221)
!5223 = !DILocation(line: 1090, column: 1, scope: !4895)
!5224 = distinct !DISubprogram(name: "emDM_drawMappedFacesMat", scope: !1, file: !1, line: 1098, type: !1689, scopeLine: 1101, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1952)
!5225 = !DILocalVariable(name: "dm", arg: 1, scope: !5224, file: !1, line: 1098, type: !154)
!5226 = !DILocation(line: 1098, column: 50, scope: !5224)
!5227 = !DILocalVariable(name: "setMaterial", arg: 2, scope: !5224, file: !1, line: 1099, type: !1691)
!5228 = !DILocation(line: 1099, column: 44, scope: !5224)
!5229 = !DILocalVariable(name: "setFace", arg: 3, scope: !5224, file: !1, line: 1100, type: !1694)
!5230 = !DILocation(line: 1100, column: 44, scope: !5224)
!5231 = !DILocalVariable(name: "userData", arg: 4, scope: !5224, file: !1, line: 1100, type: !182)
!5232 = !DILocation(line: 1100, column: 87, scope: !5224)
!5233 = !DILocalVariable(name: "bmdm", scope: !5224, file: !1, line: 1102, type: !1700)
!5234 = !DILocation(line: 1102, column: 20, scope: !5224)
!5235 = !DILocation(line: 1102, column: 47, scope: !5224)
!5236 = !DILocation(line: 1102, column: 27, scope: !5224)
!5237 = !DILocalVariable(name: "em", scope: !5224, file: !1, line: 1103, type: !1706)
!5238 = !DILocation(line: 1103, column: 14, scope: !5224)
!5239 = !DILocation(line: 1103, column: 19, scope: !5224)
!5240 = !DILocation(line: 1103, column: 25, scope: !5224)
!5241 = !DILocalVariable(name: "bm", scope: !5224, file: !1, line: 1104, type: !1847)
!5242 = !DILocation(line: 1104, column: 9, scope: !5224)
!5243 = !DILocation(line: 1104, column: 14, scope: !5224)
!5244 = !DILocation(line: 1104, column: 18, scope: !5224)
!5245 = !DILocalVariable(name: "looptris", scope: !5224, file: !1, line: 1105, type: !1872)
!5246 = !DILocation(line: 1105, column: 19, scope: !5224)
!5247 = !DILocation(line: 1105, column: 34, scope: !5224)
!5248 = !DILocation(line: 1105, column: 38, scope: !5224)
!5249 = !DILocalVariable(name: "vertexCos", scope: !5224, file: !1, line: 1106, type: !1698)
!5250 = !DILocation(line: 1106, column: 16, scope: !5224)
!5251 = !DILocation(line: 1106, column: 32, scope: !5224)
!5252 = !DILocation(line: 1106, column: 38, scope: !5224)
!5253 = !DILocalVariable(name: "vertexNos", scope: !5224, file: !1, line: 1107, type: !1698)
!5254 = !DILocation(line: 1107, column: 16, scope: !5224)
!5255 = !DILocalVariable(name: "polyNos", scope: !5224, file: !1, line: 1108, type: !1698)
!5256 = !DILocation(line: 1108, column: 16, scope: !5224)
!5257 = !DILocalVariable(name: "lnors", scope: !5224, file: !1, line: 1109, type: !1698)
!5258 = !DILocation(line: 1109, column: 16, scope: !5224)
!5259 = !DILocation(line: 1109, column: 28, scope: !5224)
!5260 = !DILocation(line: 1109, column: 32, scope: !5224)
!5261 = !DILocation(line: 1109, column: 49, scope: !5224)
!5262 = !DILocalVariable(name: "efa", scope: !5224, file: !1, line: 1110, type: !1795)
!5263 = !DILocation(line: 1110, column: 10, scope: !5224)
!5264 = !DILocalVariable(name: "attribs", scope: !5224, file: !1, line: 1111, type: !4936)
!5265 = !DILocation(line: 1111, column: 18, scope: !5224)
!5266 = !DILocalVariable(name: "gattribs", scope: !5224, file: !1, line: 1112, type: !4974)
!5267 = !DILocation(line: 1112, column: 19, scope: !5224)
!5268 = !DILocalVariable(name: "i", scope: !5224, file: !1, line: 1113, type: !168)
!5269 = !DILocation(line: 1113, column: 6, scope: !5224)
!5270 = !DILocalVariable(name: "matnr", scope: !5224, file: !1, line: 1113, type: !168)
!5271 = !DILocation(line: 1113, column: 9, scope: !5224)
!5272 = !DILocalVariable(name: "new_matnr", scope: !5224, file: !1, line: 1113, type: !168)
!5273 = !DILocation(line: 1113, column: 16, scope: !5224)
!5274 = !DILocalVariable(name: "fi", scope: !5224, file: !1, line: 1113, type: !168)
!5275 = !DILocation(line: 1113, column: 27, scope: !5224)
!5276 = !DILocation(line: 1115, column: 8, scope: !5224)
!5277 = !DILocation(line: 1117, column: 25, scope: !5224)
!5278 = !DILocation(line: 1117, column: 2, scope: !5224)
!5279 = !DILocation(line: 1118, column: 25, scope: !5224)
!5280 = !DILocation(line: 1118, column: 2, scope: !5224)
!5281 = !DILocation(line: 1120, column: 14, scope: !5224)
!5282 = !DILocation(line: 1120, column: 20, scope: !5224)
!5283 = !DILocation(line: 1120, column: 12, scope: !5224)
!5284 = !DILocation(line: 1121, column: 12, scope: !5224)
!5285 = !DILocation(line: 1121, column: 18, scope: !5224)
!5286 = !DILocation(line: 1121, column: 10, scope: !5224)
!5287 = !DILocation(line: 1124, column: 2, scope: !5224)
!5288 = !DILocation(line: 1126, column: 28, scope: !5224)
!5289 = !DILocation(line: 1126, column: 32, scope: !5224)
!5290 = !DILocation(line: 1126, column: 2, scope: !5224)
!5291 = !DILocation(line: 1128, column: 9, scope: !5292)
!5292 = distinct !DILexicalBlock(scope: !5224, file: !1, line: 1128, column: 2)
!5293 = !DILocation(line: 1128, column: 7, scope: !5292)
!5294 = !DILocation(line: 1128, column: 14, scope: !5295)
!5295 = distinct !DILexicalBlock(scope: !5292, file: !1, line: 1128, column: 2)
!5296 = !DILocation(line: 1128, column: 18, scope: !5295)
!5297 = !DILocation(line: 1128, column: 22, scope: !5295)
!5298 = !DILocation(line: 1128, column: 16, scope: !5295)
!5299 = !DILocation(line: 1128, column: 2, scope: !5292)
!5300 = !DILocalVariable(name: "ltri", scope: !5301, file: !1, line: 1129, type: !2848)
!5301 = distinct !DILexicalBlock(scope: !5295, file: !1, line: 1128, column: 35)
!5302 = !DILocation(line: 1129, column: 12, scope: !5301)
!5303 = !DILocation(line: 1129, column: 19, scope: !5301)
!5304 = !DILocation(line: 1129, column: 28, scope: !5301)
!5305 = !DILocalVariable(name: "drawSmooth", scope: !5301, file: !1, line: 1130, type: !168)
!5306 = !DILocation(line: 1130, column: 7, scope: !5301)
!5307 = !DILocation(line: 1132, column: 9, scope: !5301)
!5308 = !DILocation(line: 1132, column: 18, scope: !5301)
!5309 = !DILocation(line: 1132, column: 7, scope: !5301)
!5310 = !DILocation(line: 1135, column: 7, scope: !5311)
!5311 = distinct !DILexicalBlock(scope: !5301, file: !1, line: 1135, column: 7)
!5312 = !DILocation(line: 1135, column: 15, scope: !5311)
!5313 = !DILocation(line: 1135, column: 19, scope: !5311)
!5314 = !DILocation(line: 1135, column: 27, scope: !5311)
!5315 = !DILocation(line: 1135, column: 37, scope: !5311)
!5316 = !DILocation(line: 1135, column: 7, scope: !5301)
!5317 = !DILocation(line: 1136, column: 4, scope: !5311)
!5318 = !DILocation(line: 1139, column: 15, scope: !5301)
!5319 = !DILocation(line: 1139, column: 20, scope: !5301)
!5320 = !DILocation(line: 1139, column: 27, scope: !5301)
!5321 = !DILocation(line: 1139, column: 13, scope: !5301)
!5322 = !DILocation(line: 1140, column: 7, scope: !5323)
!5323 = distinct !DILexicalBlock(scope: !5301, file: !1, line: 1140, column: 7)
!5324 = !DILocation(line: 1140, column: 20, scope: !5323)
!5325 = !DILocation(line: 1140, column: 17, scope: !5323)
!5326 = !DILocation(line: 1140, column: 7, scope: !5301)
!5327 = !DILocation(line: 1141, column: 8, scope: !5328)
!5328 = distinct !DILexicalBlock(scope: !5329, file: !1, line: 1141, column: 8)
!5329 = distinct !DILexicalBlock(scope: !5323, file: !1, line: 1140, column: 27)
!5330 = !DILocation(line: 1141, column: 14, scope: !5328)
!5331 = !DILocation(line: 1141, column: 8, scope: !5329)
!5332 = !DILocation(line: 1142, column: 5, scope: !5328)
!5333 = !DILocation(line: 1144, column: 4, scope: !5329)
!5334 = !DILocation(line: 1144, column: 16, scope: !5329)
!5335 = !DILocation(line: 1144, column: 34, scope: !5329)
!5336 = !DILocation(line: 1144, column: 32, scope: !5329)
!5337 = !DILocation(line: 1144, column: 45, scope: !5329)
!5338 = !DILocation(line: 1145, column: 34, scope: !5329)
!5339 = !DILocation(line: 1145, column: 4, scope: !5329)
!5340 = !DILocation(line: 1147, column: 4, scope: !5329)
!5341 = !DILocation(line: 1148, column: 3, scope: !5329)
!5342 = !DILocation(line: 1151, column: 16, scope: !5301)
!5343 = !DILocation(line: 1151, column: 22, scope: !5301)
!5344 = !DILocation(line: 1151, column: 25, scope: !5301)
!5345 = !DILocation(line: 1151, column: 14, scope: !5301)
!5346 = !DILocation(line: 1153, column: 8, scope: !5347)
!5347 = distinct !DILexicalBlock(scope: !5301, file: !1, line: 1153, column: 7)
!5348 = !DILocation(line: 1153, column: 7, scope: !5301)
!5349 = !DILocation(line: 1154, column: 8, scope: !5350)
!5350 = distinct !DILexicalBlock(scope: !5351, file: !1, line: 1154, column: 8)
!5351 = distinct !DILexicalBlock(scope: !5347, file: !1, line: 1153, column: 20)
!5352 = !DILocation(line: 1154, column: 8, scope: !5351)
!5353 = !DILocation(line: 1155, column: 17, scope: !5354)
!5354 = distinct !DILexicalBlock(scope: !5350, file: !1, line: 1154, column: 19)
!5355 = !DILocation(line: 1155, column: 25, scope: !5354)
!5356 = !DILocation(line: 1155, column: 5, scope: !5354)
!5357 = !DILocation(line: 1156, column: 13, scope: !5358)
!5358 = distinct !DILexicalBlock(scope: !5354, file: !1, line: 1156, column: 5)
!5359 = !DILocation(line: 1156, column: 10, scope: !5358)
!5360 = !DILocation(line: 1156, column: 18, scope: !5361)
!5361 = distinct !DILexicalBlock(scope: !5358, file: !1, line: 1156, column: 5)
!5362 = !DILocation(line: 1156, column: 21, scope: !5361)
!5363 = !DILocation(line: 1156, column: 5, scope: !5358)
!5364 = !DILocation(line: 1157, column: 45, scope: !5365)
!5365 = distinct !DILexicalBlock(scope: !5361, file: !1, line: 1156, column: 32)
!5366 = !DILocation(line: 1157, column: 50, scope: !5365)
!5367 = !DILocation(line: 1157, column: 55, scope: !5365)
!5368 = !DILocation(line: 1157, column: 6, scope: !5365)
!5369 = !DILocation(line: 1158, column: 18, scope: !5365)
!5370 = !DILocation(line: 1158, column: 28, scope: !5365)
!5371 = !DILocation(line: 1158, column: 6, scope: !5365)
!5372 = !DILocation(line: 1159, column: 5, scope: !5365)
!5373 = !DILocation(line: 1156, column: 28, scope: !5361)
!5374 = !DILocation(line: 1156, column: 5, scope: !5361)
!5375 = distinct !{!5375, !5363, !5376}
!5376 = !DILocation(line: 1159, column: 5, scope: !5358)
!5377 = !DILocation(line: 1160, column: 4, scope: !5354)
!5378 = !DILocation(line: 1162, column: 17, scope: !5379)
!5379 = distinct !DILexicalBlock(scope: !5350, file: !1, line: 1161, column: 9)
!5380 = !DILocation(line: 1162, column: 22, scope: !5379)
!5381 = !DILocation(line: 1162, column: 5, scope: !5379)
!5382 = !DILocation(line: 1163, column: 13, scope: !5383)
!5383 = distinct !DILexicalBlock(scope: !5379, file: !1, line: 1163, column: 5)
!5384 = !DILocation(line: 1163, column: 10, scope: !5383)
!5385 = !DILocation(line: 1163, column: 18, scope: !5386)
!5386 = distinct !DILexicalBlock(scope: !5383, file: !1, line: 1163, column: 5)
!5387 = !DILocation(line: 1163, column: 21, scope: !5386)
!5388 = !DILocation(line: 1163, column: 5, scope: !5383)
!5389 = !DILocation(line: 1164, column: 45, scope: !5390)
!5390 = distinct !DILexicalBlock(scope: !5386, file: !1, line: 1163, column: 32)
!5391 = !DILocation(line: 1164, column: 50, scope: !5390)
!5392 = !DILocation(line: 1164, column: 55, scope: !5390)
!5393 = !DILocation(line: 1164, column: 6, scope: !5390)
!5394 = !DILocation(line: 1165, column: 18, scope: !5390)
!5395 = !DILocation(line: 1165, column: 23, scope: !5390)
!5396 = !DILocation(line: 1165, column: 28, scope: !5390)
!5397 = !DILocation(line: 1165, column: 31, scope: !5390)
!5398 = !DILocation(line: 1165, column: 6, scope: !5390)
!5399 = !DILocation(line: 1166, column: 5, scope: !5390)
!5400 = !DILocation(line: 1163, column: 28, scope: !5386)
!5401 = !DILocation(line: 1163, column: 5, scope: !5386)
!5402 = distinct !{!5402, !5388, !5403}
!5403 = !DILocation(line: 1166, column: 5, scope: !5383)
!5404 = !DILocation(line: 1168, column: 3, scope: !5351)
!5405 = !DILocation(line: 1170, column: 8, scope: !5406)
!5406 = distinct !DILexicalBlock(scope: !5407, file: !1, line: 1170, column: 8)
!5407 = distinct !DILexicalBlock(scope: !5347, file: !1, line: 1169, column: 8)
!5408 = !DILocation(line: 1170, column: 8, scope: !5407)
!5409 = !DILocation(line: 1171, column: 13, scope: !5410)
!5410 = distinct !DILexicalBlock(scope: !5411, file: !1, line: 1171, column: 5)
!5411 = distinct !DILexicalBlock(scope: !5406, file: !1, line: 1170, column: 19)
!5412 = !DILocation(line: 1171, column: 10, scope: !5410)
!5413 = !DILocation(line: 1171, column: 18, scope: !5414)
!5414 = distinct !DILexicalBlock(scope: !5410, file: !1, line: 1171, column: 5)
!5415 = !DILocation(line: 1171, column: 21, scope: !5414)
!5416 = !DILocation(line: 1171, column: 5, scope: !5410)
!5417 = !DILocalVariable(name: "j", scope: !5418, file: !1, line: 1172, type: !1967)
!5418 = distinct !DILexicalBlock(scope: !5414, file: !1, line: 1171, column: 32)
!5419 = !DILocation(line: 1172, column: 16, scope: !5418)
!5420 = !DILocation(line: 1172, column: 20, scope: !5418)
!5421 = !DILocation(line: 1173, column: 45, scope: !5418)
!5422 = !DILocation(line: 1173, column: 50, scope: !5418)
!5423 = !DILocation(line: 1173, column: 55, scope: !5418)
!5424 = !DILocation(line: 1173, column: 6, scope: !5418)
!5425 = !DILocation(line: 1174, column: 10, scope: !5426)
!5426 = distinct !DILexicalBlock(scope: !5418, file: !1, line: 1174, column: 10)
!5427 = !DILocation(line: 1174, column: 10, scope: !5418)
!5428 = !DILocation(line: 1174, column: 29, scope: !5426)
!5429 = !DILocation(line: 1174, column: 35, scope: !5426)
!5430 = !DILocation(line: 1174, column: 17, scope: !5426)
!5431 = !DILocation(line: 1175, column: 23, scope: !5426)
!5432 = !DILocation(line: 1175, column: 33, scope: !5426)
!5433 = !DILocation(line: 1175, column: 11, scope: !5426)
!5434 = !DILocation(line: 1176, column: 18, scope: !5418)
!5435 = !DILocation(line: 1176, column: 28, scope: !5418)
!5436 = !DILocation(line: 1176, column: 6, scope: !5418)
!5437 = !DILocation(line: 1177, column: 5, scope: !5418)
!5438 = !DILocation(line: 1171, column: 28, scope: !5414)
!5439 = !DILocation(line: 1171, column: 5, scope: !5414)
!5440 = distinct !{!5440, !5416, !5441}
!5441 = !DILocation(line: 1177, column: 5, scope: !5410)
!5442 = !DILocation(line: 1178, column: 4, scope: !5411)
!5443 = !DILocation(line: 1180, column: 13, scope: !5444)
!5444 = distinct !DILexicalBlock(scope: !5445, file: !1, line: 1180, column: 5)
!5445 = distinct !DILexicalBlock(scope: !5406, file: !1, line: 1179, column: 9)
!5446 = !DILocation(line: 1180, column: 10, scope: !5444)
!5447 = !DILocation(line: 1180, column: 18, scope: !5448)
!5448 = distinct !DILexicalBlock(scope: !5444, file: !1, line: 1180, column: 5)
!5449 = !DILocation(line: 1180, column: 21, scope: !5448)
!5450 = !DILocation(line: 1180, column: 5, scope: !5444)
!5451 = !DILocation(line: 1181, column: 45, scope: !5452)
!5452 = distinct !DILexicalBlock(scope: !5448, file: !1, line: 1180, column: 32)
!5453 = !DILocation(line: 1181, column: 50, scope: !5452)
!5454 = !DILocation(line: 1181, column: 55, scope: !5452)
!5455 = !DILocation(line: 1181, column: 6, scope: !5452)
!5456 = !DILocation(line: 1182, column: 10, scope: !5457)
!5457 = distinct !DILexicalBlock(scope: !5452, file: !1, line: 1182, column: 10)
!5458 = !DILocation(line: 1182, column: 10, scope: !5452)
!5459 = !DILocation(line: 1182, column: 29, scope: !5457)
!5460 = !DILocation(line: 1182, column: 35, scope: !5457)
!5461 = !DILocation(line: 1182, column: 17, scope: !5457)
!5462 = !DILocation(line: 1183, column: 23, scope: !5457)
!5463 = !DILocation(line: 1183, column: 28, scope: !5457)
!5464 = !DILocation(line: 1183, column: 33, scope: !5457)
!5465 = !DILocation(line: 1183, column: 36, scope: !5457)
!5466 = !DILocation(line: 1183, column: 11, scope: !5457)
!5467 = !DILocation(line: 1184, column: 18, scope: !5452)
!5468 = !DILocation(line: 1184, column: 23, scope: !5452)
!5469 = !DILocation(line: 1184, column: 28, scope: !5452)
!5470 = !DILocation(line: 1184, column: 31, scope: !5452)
!5471 = !DILocation(line: 1184, column: 6, scope: !5452)
!5472 = !DILocation(line: 1185, column: 5, scope: !5452)
!5473 = !DILocation(line: 1180, column: 28, scope: !5448)
!5474 = !DILocation(line: 1180, column: 5, scope: !5448)
!5475 = distinct !{!5475, !5450, !5476}
!5476 = !DILocation(line: 1185, column: 5, scope: !5444)
!5477 = !DILocation(line: 1188, column: 2, scope: !5301)
!5478 = !DILocation(line: 1128, column: 31, scope: !5295)
!5479 = !DILocation(line: 1128, column: 2, scope: !5295)
!5480 = distinct !{!5480, !5299, !5481}
!5481 = !DILocation(line: 1188, column: 2, scope: !5292)
!5482 = !DILocation(line: 1190, column: 6, scope: !5483)
!5483 = distinct !DILexicalBlock(scope: !5224, file: !1, line: 1190, column: 6)
!5484 = !DILocation(line: 1190, column: 12, scope: !5483)
!5485 = !DILocation(line: 1190, column: 6, scope: !5224)
!5486 = !DILocation(line: 1191, column: 3, scope: !5487)
!5487 = distinct !DILexicalBlock(scope: !5483, file: !1, line: 1190, column: 19)
!5488 = !DILocation(line: 1192, column: 2, scope: !5487)
!5489 = !DILocation(line: 1193, column: 1, scope: !5224)
!5490 = distinct !DISubprogram(name: "emDM_drawFacesTex", scope: !1, file: !1, line: 910, type: !1630, scopeLine: 914, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1952)
!5491 = !DILocalVariable(name: "dm", arg: 1, scope: !5490, file: !1, line: 910, type: !154)
!5492 = !DILocation(line: 910, column: 44, scope: !5490)
!5493 = !DILocalVariable(name: "setDrawOptions", arg: 2, scope: !5490, file: !1, line: 911, type: !1632)
!5494 = !DILocation(line: 911, column: 51, scope: !5490)
!5495 = !DILocalVariable(name: "compareDrawOptions", arg: 3, scope: !5490, file: !1, line: 912, type: !1650)
!5496 = !DILocation(line: 912, column: 52, scope: !5490)
!5497 = !DILocalVariable(name: "userData", arg: 4, scope: !5490, file: !1, line: 913, type: !182)
!5498 = !DILocation(line: 913, column: 37, scope: !5490)
!5499 = !DILocalVariable(name: "UNUSED_flag", arg: 5, scope: !5490, file: !1, line: 913, type: !1654)
!5500 = !DILocation(line: 913, column: 58, scope: !5490)
!5501 = !DILocation(line: 915, column: 27, scope: !5490)
!5502 = !DILocation(line: 915, column: 31, scope: !5490)
!5503 = !DILocation(line: 915, column: 53, scope: !5490)
!5504 = !DILocation(line: 915, column: 73, scope: !5490)
!5505 = !DILocation(line: 915, column: 2, scope: !5490)
!5506 = !DILocation(line: 916, column: 1, scope: !5490)
!5507 = distinct !DISubprogram(name: "emDM_drawFacesGLSL", scope: !1, file: !1, line: 1092, type: !5508, scopeLine: 1094, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1952)
!5508 = !DISubroutineType(types: !5509)
!5509 = !{null, !154, !1625}
!5510 = !DILocalVariable(name: "dm", arg: 1, scope: !5507, file: !1, line: 1092, type: !154)
!5511 = !DILocation(line: 1092, column: 45, scope: !5507)
!5512 = !DILocalVariable(name: "setMaterial", arg: 2, scope: !5507, file: !1, line: 1093, type: !1625)
!5513 = !DILocation(line: 1093, column: 38, scope: !5507)
!5514 = !DILocation(line: 1095, column: 2, scope: !5507)
!5515 = !DILocation(line: 1095, column: 6, scope: !5507)
!5516 = !DILocation(line: 1095, column: 26, scope: !5507)
!5517 = !DILocation(line: 1095, column: 30, scope: !5507)
!5518 = !DILocation(line: 1096, column: 1, scope: !5507)
!5519 = distinct !DISubprogram(name: "emDM_drawUVEdges", scope: !1, file: !1, line: 346, type: !235, scopeLine: 347, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1952)
!5520 = !DILocalVariable(name: "dm", arg: 1, scope: !5519, file: !1, line: 346, type: !154)
!5521 = !DILocation(line: 346, column: 43, scope: !5519)
!5522 = !DILocalVariable(name: "bmdm", scope: !5519, file: !1, line: 348, type: !1700)
!5523 = !DILocation(line: 348, column: 20, scope: !5519)
!5524 = !DILocation(line: 348, column: 47, scope: !5519)
!5525 = !DILocation(line: 348, column: 27, scope: !5519)
!5526 = !DILocalVariable(name: "bm", scope: !5519, file: !1, line: 349, type: !1847)
!5527 = !DILocation(line: 349, column: 9, scope: !5519)
!5528 = !DILocation(line: 349, column: 14, scope: !5519)
!5529 = !DILocation(line: 349, column: 20, scope: !5519)
!5530 = !DILocation(line: 349, column: 24, scope: !5519)
!5531 = !DILocalVariable(name: "efa", scope: !5519, file: !1, line: 350, type: !1795)
!5532 = !DILocation(line: 350, column: 10, scope: !5519)
!5533 = !DILocalVariable(name: "iter", scope: !5519, file: !1, line: 351, type: !2184)
!5534 = !DILocation(line: 351, column: 9, scope: !5519)
!5535 = !DILocalVariable(name: "cd_loop_uv_offset", scope: !5519, file: !1, line: 353, type: !1967)
!5536 = !DILocation(line: 353, column: 12, scope: !5519)
!5537 = !DILocation(line: 353, column: 55, scope: !5519)
!5538 = !DILocation(line: 353, column: 59, scope: !5519)
!5539 = !DILocation(line: 353, column: 32, scope: !5519)
!5540 = !DILocation(line: 355, column: 6, scope: !5541)
!5541 = distinct !DILexicalBlock(scope: !5519, file: !1, line: 355, column: 6)
!5542 = !DILocation(line: 355, column: 6, scope: !5519)
!5543 = !DILocation(line: 356, column: 3, scope: !5544)
!5544 = distinct !DILexicalBlock(scope: !5541, file: !1, line: 355, column: 41)
!5545 = !DILocation(line: 359, column: 2, scope: !5519)
!5546 = !DILocation(line: 360, column: 2, scope: !5547)
!5547 = distinct !DILexicalBlock(scope: !5519, file: !1, line: 360, column: 2)
!5548 = !DILocation(line: 360, column: 2, scope: !5549)
!5549 = distinct !DILexicalBlock(scope: !5547, file: !1, line: 360, column: 2)
!5550 = !DILocalVariable(name: "l_iter", scope: !5551, file: !1, line: 361, type: !1773)
!5551 = distinct !DILexicalBlock(scope: !5549, file: !1, line: 360, column: 50)
!5552 = !DILocation(line: 361, column: 11, scope: !5551)
!5553 = !DILocalVariable(name: "l_first", scope: !5551, file: !1, line: 361, type: !1773)
!5554 = !DILocation(line: 361, column: 20, scope: !5551)
!5555 = !DILocalVariable(name: "uv", scope: !5551, file: !1, line: 362, type: !438)
!5556 = !DILocation(line: 362, column: 16, scope: !5551)
!5557 = !DILocalVariable(name: "uv_prev", scope: !5551, file: !1, line: 362, type: !438)
!5558 = !DILocation(line: 362, column: 21, scope: !5551)
!5559 = !DILocation(line: 364, column: 7, scope: !5560)
!5560 = distinct !DILexicalBlock(scope: !5551, file: !1, line: 364, column: 7)
!5561 = !DILocation(line: 364, column: 7, scope: !5551)
!5562 = !DILocation(line: 365, column: 4, scope: !5560)
!5563 = !DILocation(line: 367, column: 22, scope: !5551)
!5564 = !DILocation(line: 367, column: 20, scope: !5551)
!5565 = !DILocation(line: 367, column: 10, scope: !5551)
!5566 = !DILocation(line: 368, column: 25, scope: !5551)
!5567 = !DILocation(line: 368, column: 14, scope: !5551)
!5568 = !DILocation(line: 368, column: 82, scope: !5551)
!5569 = !DILocation(line: 368, column: 13, scope: !5551)
!5570 = !DILocation(line: 368, column: 11, scope: !5551)
!5571 = !DILocation(line: 369, column: 3, scope: !5551)
!5572 = !DILocation(line: 370, column: 21, scope: !5573)
!5573 = distinct !DILexicalBlock(scope: !5551, file: !1, line: 369, column: 6)
!5574 = !DILocation(line: 370, column: 10, scope: !5573)
!5575 = !DILocation(line: 370, column: 72, scope: !5573)
!5576 = !DILocation(line: 370, column: 9, scope: !5573)
!5577 = !DILocation(line: 370, column: 7, scope: !5573)
!5578 = !DILocation(line: 371, column: 16, scope: !5573)
!5579 = !DILocation(line: 371, column: 4, scope: !5573)
!5580 = !DILocation(line: 372, column: 16, scope: !5573)
!5581 = !DILocation(line: 372, column: 4, scope: !5573)
!5582 = !DILocation(line: 373, column: 14, scope: !5573)
!5583 = !DILocation(line: 373, column: 12, scope: !5573)
!5584 = !DILocation(line: 374, column: 3, scope: !5573)
!5585 = !DILocation(line: 374, column: 22, scope: !5551)
!5586 = !DILocation(line: 374, column: 30, scope: !5551)
!5587 = !DILocation(line: 374, column: 20, scope: !5551)
!5588 = !DILocation(line: 374, column: 39, scope: !5551)
!5589 = !DILocation(line: 374, column: 36, scope: !5551)
!5590 = distinct !{!5590, !5571, !5591}
!5591 = !DILocation(line: 374, column: 46, scope: !5551)
!5592 = !DILocation(line: 375, column: 2, scope: !5551)
!5593 = distinct !{!5593, !5546, !5594}
!5594 = !DILocation(line: 375, column: 2, scope: !5547)
!5595 = !DILocation(line: 376, column: 2, scope: !5519)
!5596 = !DILocation(line: 377, column: 1, scope: !5519)
!5597 = distinct !DISubprogram(name: "emDM_release", scope: !1, file: !1, line: 1652, type: !235, scopeLine: 1653, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1952)
!5598 = !DILocalVariable(name: "dm", arg: 1, scope: !5597, file: !1, line: 1652, type: !154)
!5599 = !DILocation(line: 1652, column: 39, scope: !5597)
!5600 = !DILocalVariable(name: "bmdm", scope: !5597, file: !1, line: 1654, type: !1700)
!5601 = !DILocation(line: 1654, column: 20, scope: !5597)
!5602 = !DILocation(line: 1654, column: 47, scope: !5597)
!5603 = !DILocation(line: 1654, column: 27, scope: !5597)
!5604 = !DILocation(line: 1656, column: 17, scope: !5605)
!5605 = distinct !DILexicalBlock(scope: !5597, file: !1, line: 1656, column: 6)
!5606 = !DILocation(line: 1656, column: 6, scope: !5605)
!5607 = !DILocation(line: 1656, column: 6, scope: !5597)
!5608 = !DILocation(line: 1657, column: 7, scope: !5609)
!5609 = distinct !DILexicalBlock(scope: !5610, file: !1, line: 1657, column: 7)
!5610 = distinct !DILexicalBlock(scope: !5605, file: !1, line: 1656, column: 22)
!5611 = !DILocation(line: 1657, column: 13, scope: !5609)
!5612 = !DILocation(line: 1657, column: 7, scope: !5610)
!5613 = !DILocation(line: 1658, column: 4, scope: !5614)
!5614 = distinct !DILexicalBlock(scope: !5609, file: !1, line: 1657, column: 24)
!5615 = !DILocation(line: 1658, column: 22, scope: !5614)
!5616 = !DILocation(line: 1658, column: 28, scope: !5614)
!5617 = !DILocation(line: 1658, column: 14, scope: !5614)
!5618 = !DILocation(line: 1659, column: 8, scope: !5619)
!5619 = distinct !DILexicalBlock(scope: !5614, file: !1, line: 1659, column: 8)
!5620 = !DILocation(line: 1659, column: 14, scope: !5619)
!5621 = !DILocation(line: 1659, column: 8, scope: !5614)
!5622 = !DILocation(line: 1660, column: 5, scope: !5623)
!5623 = distinct !DILexicalBlock(scope: !5619, file: !1, line: 1659, column: 25)
!5624 = !DILocation(line: 1660, column: 23, scope: !5623)
!5625 = !DILocation(line: 1660, column: 29, scope: !5623)
!5626 = !DILocation(line: 1660, column: 15, scope: !5623)
!5627 = !DILocation(line: 1661, column: 4, scope: !5623)
!5628 = !DILocation(line: 1662, column: 8, scope: !5629)
!5629 = distinct !DILexicalBlock(scope: !5614, file: !1, line: 1662, column: 8)
!5630 = !DILocation(line: 1662, column: 14, scope: !5629)
!5631 = !DILocation(line: 1662, column: 8, scope: !5614)
!5632 = !DILocation(line: 1663, column: 5, scope: !5633)
!5633 = distinct !DILexicalBlock(scope: !5629, file: !1, line: 1662, column: 23)
!5634 = !DILocation(line: 1663, column: 23, scope: !5633)
!5635 = !DILocation(line: 1663, column: 29, scope: !5633)
!5636 = !DILocation(line: 1663, column: 15, scope: !5633)
!5637 = !DILocation(line: 1664, column: 4, scope: !5633)
!5638 = !DILocation(line: 1665, column: 3, scope: !5614)
!5639 = !DILocation(line: 1667, column: 7, scope: !5640)
!5640 = distinct !DILexicalBlock(scope: !5610, file: !1, line: 1667, column: 7)
!5641 = !DILocation(line: 1667, column: 13, scope: !5640)
!5642 = !DILocation(line: 1667, column: 7, scope: !5610)
!5643 = !DILocation(line: 1668, column: 4, scope: !5644)
!5644 = distinct !DILexicalBlock(scope: !5640, file: !1, line: 1667, column: 22)
!5645 = !DILocation(line: 1668, column: 22, scope: !5644)
!5646 = !DILocation(line: 1668, column: 28, scope: !5644)
!5647 = !DILocation(line: 1668, column: 14, scope: !5644)
!5648 = !DILocation(line: 1669, column: 3, scope: !5644)
!5649 = !DILocation(line: 1671, column: 3, scope: !5610)
!5650 = !DILocation(line: 1671, column: 13, scope: !5610)
!5651 = !DILocation(line: 1672, column: 2, scope: !5610)
!5652 = !DILocation(line: 1673, column: 1, scope: !5597)
!5653 = distinct !DISubprogram(name: "BM_iter_new", scope: !5654, file: !5654, line: 172, type: !5655, scopeLine: 173, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1952)
!5654 = !DIFile(filename: "blender/source/blender/bmesh/intern/bmesh_iterators_inline.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5655 = !DISubroutineType(types: !5656)
!5656 = !{!182, !5657, !1847, !1814, !182}
!5657 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2184, size: 64)
!5658 = !DILocalVariable(name: "iter", arg: 1, scope: !5653, file: !5654, line: 172, type: !5657)
!5659 = !DILocation(line: 172, column: 38, scope: !5653)
!5660 = !DILocalVariable(name: "bm", arg: 2, scope: !5653, file: !5654, line: 172, type: !1847)
!5661 = !DILocation(line: 172, column: 51, scope: !5653)
!5662 = !DILocalVariable(name: "itype", arg: 3, scope: !5653, file: !5654, line: 172, type: !1814)
!5663 = !DILocation(line: 172, column: 66, scope: !5653)
!5664 = !DILocalVariable(name: "data", arg: 4, scope: !5653, file: !5654, line: 172, type: !182)
!5665 = !DILocation(line: 172, column: 79, scope: !5653)
!5666 = !DILocation(line: 174, column: 6, scope: !5667)
!5667 = distinct !DILexicalBlock(scope: !5653, file: !5654, line: 174, column: 6)
!5668 = !DILocation(line: 174, column: 6, scope: !5653)
!5669 = !DILocation(line: 175, column: 23, scope: !5670)
!5670 = distinct !DILexicalBlock(scope: !5667, file: !5654, line: 174, column: 51)
!5671 = !DILocation(line: 175, column: 10, scope: !5670)
!5672 = !DILocation(line: 175, column: 3, scope: !5670)
!5673 = !DILocation(line: 178, column: 3, scope: !5674)
!5674 = distinct !DILexicalBlock(scope: !5667, file: !5654, line: 177, column: 7)
!5675 = !DILocation(line: 180, column: 1, scope: !5653)
!5676 = distinct !DISubprogram(name: "BM_iter_step", scope: !5654, file: !5654, line: 40, type: !5677, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1952)
!5677 = !DISubroutineType(types: !5678)
!5678 = !{!182, !5657}
!5679 = !DILocalVariable(name: "iter", arg: 1, scope: !5676, file: !5654, line: 40, type: !5657)
!5680 = !DILocation(line: 40, column: 39, scope: !5676)
!5681 = !DILocation(line: 42, column: 9, scope: !5676)
!5682 = !DILocation(line: 42, column: 15, scope: !5676)
!5683 = !DILocation(line: 42, column: 20, scope: !5676)
!5684 = !DILocation(line: 42, column: 2, scope: !5676)
!5685 = distinct !DISubprogram(name: "BKE_editmesh_statvis_calc", scope: !1, file: !1, line: 2203, type: !5686, scopeLine: 2205, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1952)
!5686 = !DISubroutineType(types: !5687)
!5687 = !{null, !1706, !154, !5688}
!5688 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5689, size: 64)
!5689 = !DIDerivedType(tag: DW_TAG_typedef, name: "MeshStatVis", file: !552, line: 1061, baseType: !1137)
!5690 = !DILocalVariable(name: "em", arg: 1, scope: !5685, file: !1, line: 2203, type: !1706)
!5691 = !DILocation(line: 2203, column: 44, scope: !5685)
!5692 = !DILocalVariable(name: "dm", arg: 2, scope: !5685, file: !1, line: 2203, type: !154)
!5693 = !DILocation(line: 2203, column: 61, scope: !5685)
!5694 = !DILocalVariable(name: "statvis", arg: 3, scope: !5685, file: !1, line: 2204, type: !5688)
!5695 = !DILocation(line: 2204, column: 45, scope: !5685)
!5696 = !DILocalVariable(name: "bmdm", scope: !5685, file: !1, line: 2206, type: !1700)
!5697 = !DILocation(line: 2206, column: 20, scope: !5685)
!5698 = !DILocation(line: 2206, column: 47, scope: !5685)
!5699 = !DILocation(line: 2206, column: 27, scope: !5685)
!5700 = !DILocation(line: 2209, column: 10, scope: !5685)
!5701 = !DILocation(line: 2209, column: 19, scope: !5685)
!5702 = !DILocation(line: 2209, column: 2, scope: !5685)
!5703 = !DILocation(line: 2212, column: 30, scope: !5704)
!5704 = distinct !DILexicalBlock(scope: !5705, file: !1, line: 2211, column: 3)
!5705 = distinct !DILexicalBlock(scope: !5685, file: !1, line: 2209, column: 25)
!5706 = !DILocation(line: 2212, column: 4, scope: !5704)
!5707 = !DILocation(line: 2214, column: 16, scope: !5704)
!5708 = !DILocation(line: 2214, column: 20, scope: !5704)
!5709 = !DILocation(line: 2214, column: 27, scope: !5704)
!5710 = !DILocation(line: 2214, column: 33, scope: !5704)
!5711 = !DILocation(line: 2215, column: 16, scope: !5704)
!5712 = !DILocation(line: 2215, column: 25, scope: !5704)
!5713 = !DILocation(line: 2215, column: 38, scope: !5704)
!5714 = !DILocation(line: 2216, column: 16, scope: !5704)
!5715 = !DILocation(line: 2216, column: 25, scope: !5704)
!5716 = !DILocation(line: 2216, column: 38, scope: !5704)
!5717 = !DILocation(line: 2217, column: 16, scope: !5704)
!5718 = !DILocation(line: 2217, column: 25, scope: !5704)
!5719 = !DILocation(line: 2218, column: 16, scope: !5704)
!5720 = !DILocation(line: 2218, column: 20, scope: !5704)
!5721 = !DILocation(line: 2213, column: 4, scope: !5704)
!5722 = !DILocation(line: 2219, column: 4, scope: !5704)
!5723 = !DILocalVariable(name: "scale", scope: !5724, file: !1, line: 2223, type: !241)
!5724 = distinct !DILexicalBlock(scope: !5705, file: !1, line: 2222, column: 3)
!5725 = !DILocation(line: 2223, column: 16, scope: !5724)
!5726 = !DILocation(line: 2223, column: 45, scope: !5724)
!5727 = !DILocation(line: 2223, column: 49, scope: !5724)
!5728 = !DILocation(line: 2223, column: 53, scope: !5724)
!5729 = !DILocation(line: 2223, column: 31, scope: !5724)
!5730 = !DILocation(line: 2223, column: 29, scope: !5724)
!5731 = !DILocation(line: 2224, column: 30, scope: !5724)
!5732 = !DILocation(line: 2224, column: 4, scope: !5724)
!5733 = !DILocation(line: 2226, column: 16, scope: !5724)
!5734 = !DILocation(line: 2226, column: 20, scope: !5724)
!5735 = !DILocation(line: 2226, column: 27, scope: !5724)
!5736 = !DILocation(line: 2226, column: 33, scope: !5724)
!5737 = !DILocation(line: 2227, column: 16, scope: !5724)
!5738 = !DILocation(line: 2227, column: 25, scope: !5724)
!5739 = !DILocation(line: 2227, column: 41, scope: !5724)
!5740 = !DILocation(line: 2227, column: 39, scope: !5724)
!5741 = !DILocation(line: 2228, column: 16, scope: !5724)
!5742 = !DILocation(line: 2228, column: 25, scope: !5724)
!5743 = !DILocation(line: 2228, column: 41, scope: !5724)
!5744 = !DILocation(line: 2228, column: 39, scope: !5724)
!5745 = !DILocation(line: 2229, column: 16, scope: !5724)
!5746 = !DILocation(line: 2229, column: 25, scope: !5724)
!5747 = !DILocation(line: 2230, column: 16, scope: !5724)
!5748 = !DILocation(line: 2230, column: 20, scope: !5724)
!5749 = !DILocation(line: 2225, column: 4, scope: !5724)
!5750 = !DILocation(line: 2231, column: 4, scope: !5724)
!5751 = !DILocation(line: 2235, column: 30, scope: !5752)
!5752 = distinct !DILexicalBlock(scope: !5705, file: !1, line: 2234, column: 3)
!5753 = !DILocation(line: 2235, column: 4, scope: !5752)
!5754 = !DILocation(line: 2237, column: 16, scope: !5752)
!5755 = !DILocation(line: 2237, column: 20, scope: !5752)
!5756 = !DILocation(line: 2237, column: 27, scope: !5752)
!5757 = !DILocation(line: 2237, column: 33, scope: !5752)
!5758 = !DILocation(line: 2238, column: 16, scope: !5752)
!5759 = !DILocation(line: 2238, column: 20, scope: !5752)
!5760 = !DILocation(line: 2236, column: 4, scope: !5752)
!5761 = !DILocation(line: 2239, column: 4, scope: !5752)
!5762 = !DILocation(line: 2243, column: 30, scope: !5763)
!5763 = distinct !DILexicalBlock(scope: !5705, file: !1, line: 2242, column: 3)
!5764 = !DILocation(line: 2243, column: 4, scope: !5763)
!5765 = !DILocation(line: 2245, column: 8, scope: !5766)
!5766 = distinct !DILexicalBlock(scope: !5763, file: !1, line: 2245, column: 8)
!5767 = !DILocation(line: 2245, column: 8, scope: !5763)
!5768 = !DILocation(line: 2246, column: 28, scope: !5766)
!5769 = !DILocation(line: 2246, column: 5, scope: !5766)
!5770 = !DILocation(line: 2249, column: 12, scope: !5763)
!5771 = !DILocation(line: 2249, column: 16, scope: !5763)
!5772 = !DILocation(line: 2249, column: 23, scope: !5763)
!5773 = !DILocation(line: 2249, column: 29, scope: !5763)
!5774 = !DILocation(line: 2249, column: 47, scope: !5763)
!5775 = !DILocation(line: 2249, column: 54, scope: !5763)
!5776 = !DILocation(line: 2249, column: 60, scope: !5763)
!5777 = !DILocation(line: 2250, column: 12, scope: !5763)
!5778 = !DILocation(line: 2250, column: 21, scope: !5763)
!5779 = !DILocation(line: 2251, column: 12, scope: !5763)
!5780 = !DILocation(line: 2251, column: 21, scope: !5763)
!5781 = !DILocation(line: 2252, column: 12, scope: !5763)
!5782 = !DILocation(line: 2252, column: 16, scope: !5763)
!5783 = !DILocation(line: 2248, column: 4, scope: !5763)
!5784 = !DILocation(line: 2253, column: 4, scope: !5763)
!5785 = !DILocation(line: 2257, column: 30, scope: !5786)
!5786 = distinct !DILexicalBlock(scope: !5705, file: !1, line: 2256, column: 3)
!5787 = !DILocation(line: 2257, column: 4, scope: !5786)
!5788 = !DILocation(line: 2259, column: 12, scope: !5786)
!5789 = !DILocation(line: 2259, column: 16, scope: !5786)
!5790 = !DILocation(line: 2259, column: 23, scope: !5786)
!5791 = !DILocation(line: 2259, column: 29, scope: !5786)
!5792 = !DILocation(line: 2260, column: 12, scope: !5786)
!5793 = !DILocation(line: 2260, column: 21, scope: !5786)
!5794 = !DILocation(line: 2261, column: 12, scope: !5786)
!5795 = !DILocation(line: 2261, column: 21, scope: !5786)
!5796 = !DILocation(line: 2263, column: 12, scope: !5786)
!5797 = !DILocation(line: 2263, column: 16, scope: !5786)
!5798 = !DILocation(line: 2258, column: 4, scope: !5786)
!5799 = !DILocation(line: 2264, column: 4, scope: !5786)
!5800 = !DILocation(line: 2267, column: 1, scope: !5685)
!5801 = distinct !DISubprogram(name: "statvis_calc_overhang", scope: !1, file: !1, line: 1823, type: !5802, scopeLine: 1830, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1952)
!5802 = !DISubroutineType(types: !5803)
!5803 = !{null, !1706, !1698, !241, !241, !1814, !1881}
!5804 = !DILocalVariable(name: "em", arg: 1, scope: !5801, file: !1, line: 1824, type: !1706)
!5805 = !DILocation(line: 1824, column: 21, scope: !5801)
!5806 = !DILocalVariable(name: "polyNos", arg: 2, scope: !5801, file: !1, line: 1825, type: !1698)
!5807 = !DILocation(line: 1825, column: 23, scope: !5801)
!5808 = !DILocalVariable(name: "min", arg: 3, scope: !5801, file: !1, line: 1827, type: !241)
!5809 = !DILocation(line: 1827, column: 21, scope: !5801)
!5810 = !DILocalVariable(name: "max", arg: 4, scope: !5801, file: !1, line: 1827, type: !241)
!5811 = !DILocation(line: 1827, column: 38, scope: !5801)
!5812 = !DILocalVariable(name: "axis", arg: 5, scope: !5801, file: !1, line: 1827, type: !1814)
!5813 = !DILocation(line: 1827, column: 54, scope: !5801)
!5814 = !DILocalVariable(name: "r_face_colors", arg: 6, scope: !5801, file: !1, line: 1829, type: !1881)
!5815 = !DILocation(line: 1829, column: 25, scope: !5801)
!5816 = !DILocalVariable(name: "iter", scope: !5801, file: !1, line: 1831, type: !2184)
!5817 = !DILocation(line: 1831, column: 9, scope: !5801)
!5818 = !DILocalVariable(name: "bm", scope: !5801, file: !1, line: 1832, type: !1847)
!5819 = !DILocation(line: 1832, column: 9, scope: !5801)
!5820 = !DILocation(line: 1832, column: 14, scope: !5801)
!5821 = !DILocation(line: 1832, column: 18, scope: !5801)
!5822 = !DILocalVariable(name: "f", scope: !5801, file: !1, line: 1833, type: !1795)
!5823 = !DILocation(line: 1833, column: 10, scope: !5801)
!5824 = !DILocalVariable(name: "dir", scope: !5801, file: !1, line: 1834, type: !260)
!5825 = !DILocation(line: 1834, column: 8, scope: !5801)
!5826 = !DILocalVariable(name: "index", scope: !5801, file: !1, line: 1835, type: !168)
!5827 = !DILocation(line: 1835, column: 6, scope: !5801)
!5828 = !DILocalVariable(name: "minmax_irange", scope: !5801, file: !1, line: 1836, type: !241)
!5829 = !DILocation(line: 1836, column: 14, scope: !5801)
!5830 = !DILocation(line: 1836, column: 38, scope: !5801)
!5831 = !DILocation(line: 1836, column: 44, scope: !5801)
!5832 = !DILocation(line: 1836, column: 42, scope: !5801)
!5833 = !DILocation(line: 1836, column: 35, scope: !5801)
!5834 = !DILocalVariable(name: "is_max", scope: !5801, file: !1, line: 1837, type: !871)
!5835 = !DILocation(line: 1837, column: 7, scope: !5801)
!5836 = !DILocalVariable(name: "col_fallback", scope: !5801, file: !1, line: 1840, type: !870)
!5837 = !DILocation(line: 1840, column: 16, scope: !5801)
!5838 = !DILocalVariable(name: "col_fallback_max", scope: !5801, file: !1, line: 1841, type: !870)
!5839 = !DILocation(line: 1841, column: 16, scope: !5801)
!5840 = !DILocation(line: 1845, column: 20, scope: !5801)
!5841 = !DILocation(line: 1845, column: 25, scope: !5801)
!5842 = !DILocation(line: 1845, column: 2, scope: !5801)
!5843 = !DILocation(line: 1847, column: 6, scope: !5844)
!5844 = distinct !DILexicalBlock(scope: !5801, file: !1, line: 1847, column: 6)
!5845 = !DILocation(line: 1847, column: 6, scope: !5801)
!5846 = !DILocation(line: 1848, column: 29, scope: !5847)
!5847 = distinct !DILexicalBlock(scope: !5844, file: !1, line: 1847, column: 22)
!5848 = !DILocation(line: 1848, column: 33, scope: !5847)
!5849 = !DILocation(line: 1848, column: 37, scope: !5847)
!5850 = !DILocation(line: 1848, column: 44, scope: !5847)
!5851 = !DILocation(line: 1848, column: 3, scope: !5847)
!5852 = !DILocation(line: 1849, column: 16, scope: !5847)
!5853 = !DILocation(line: 1849, column: 3, scope: !5847)
!5854 = !DILocation(line: 1850, column: 2, scope: !5847)
!5855 = !DILocalVariable(name: "fcol", scope: !5856, file: !1, line: 1854, type: !260)
!5856 = distinct !DILexicalBlock(scope: !5801, file: !1, line: 1853, column: 2)
!5857 = !DILocation(line: 1854, column: 9, scope: !5856)
!5858 = !DILocation(line: 1855, column: 17, scope: !5856)
!5859 = !DILocation(line: 1855, column: 3, scope: !5856)
!5860 = !DILocation(line: 1856, column: 22, scope: !5856)
!5861 = !DILocation(line: 1856, column: 40, scope: !5856)
!5862 = !DILocation(line: 1856, column: 3, scope: !5856)
!5863 = !DILocation(line: 1860, column: 2, scope: !5864)
!5864 = distinct !DILexicalBlock(scope: !5801, file: !1, line: 1860, column: 2)
!5865 = !DILocation(line: 1860, column: 2, scope: !5866)
!5866 = distinct !DILexicalBlock(scope: !5864, file: !1, line: 1860, column: 2)
!5867 = !DILocalVariable(name: "fac", scope: !5868, file: !1, line: 1861, type: !224)
!5868 = distinct !DILexicalBlock(scope: !5866, file: !1, line: 1860, column: 61)
!5869 = !DILocation(line: 1861, column: 9, scope: !5868)
!5870 = !DILocation(line: 1861, column: 37, scope: !5868)
!5871 = !DILocation(line: 1861, column: 47, scope: !5868)
!5872 = !DILocation(line: 1861, column: 55, scope: !5868)
!5873 = !DILocation(line: 1861, column: 64, scope: !5868)
!5874 = !DILocation(line: 1861, column: 67, scope: !5868)
!5875 = !DILocation(line: 1861, column: 71, scope: !5868)
!5876 = !DILocation(line: 1861, column: 15, scope: !5868)
!5877 = !DILocation(line: 1861, column: 76, scope: !5868)
!5878 = !DILocation(line: 1864, column: 18, scope: !5879)
!5879 = distinct !DILexicalBlock(scope: !5868, file: !1, line: 1864, column: 7)
!5880 = !DILocation(line: 1864, column: 25, scope: !5879)
!5881 = !DILocation(line: 1864, column: 22, scope: !5879)
!5882 = !DILocation(line: 1864, column: 17, scope: !5879)
!5883 = !DILocation(line: 1864, column: 15, scope: !5879)
!5884 = !DILocation(line: 1864, column: 7, scope: !5879)
!5885 = !DILocation(line: 1864, column: 31, scope: !5879)
!5886 = !DILocation(line: 1864, column: 35, scope: !5879)
!5887 = !DILocation(line: 1864, column: 42, scope: !5879)
!5888 = !DILocation(line: 1864, column: 39, scope: !5879)
!5889 = !DILocation(line: 1864, column: 7, scope: !5868)
!5890 = !DILocalVariable(name: "fcol", scope: !5891, file: !1, line: 1865, type: !260)
!5891 = distinct !DILexicalBlock(scope: !5879, file: !1, line: 1864, column: 48)
!5892 = !DILocation(line: 1865, column: 10, scope: !5891)
!5893 = !DILocation(line: 1866, column: 11, scope: !5891)
!5894 = !DILocation(line: 1866, column: 17, scope: !5891)
!5895 = !DILocation(line: 1866, column: 15, scope: !5891)
!5896 = !DILocation(line: 1866, column: 24, scope: !5891)
!5897 = !DILocation(line: 1866, column: 22, scope: !5891)
!5898 = !DILocation(line: 1866, column: 8, scope: !5891)
!5899 = !DILocation(line: 1867, column: 17, scope: !5891)
!5900 = !DILocation(line: 1867, column: 15, scope: !5891)
!5901 = !DILocation(line: 1867, column: 8, scope: !5891)
!5902 = !DILocation(line: 1868, column: 4, scope: !5903)
!5903 = distinct !DILexicalBlock(scope: !5904, file: !1, line: 1868, column: 4)
!5904 = distinct !DILexicalBlock(scope: !5891, file: !1, line: 1868, column: 4)
!5905 = !DILocation(line: 1868, column: 4, scope: !5904)
!5906 = !DILocation(line: 1868, column: 4, scope: !5907)
!5907 = distinct !DILexicalBlock(scope: !5903, file: !1, line: 1868, column: 4)
!5908 = !DILocation(line: 1869, column: 18, scope: !5891)
!5909 = !DILocation(line: 1869, column: 24, scope: !5891)
!5910 = !DILocation(line: 1869, column: 4, scope: !5891)
!5911 = !DILocation(line: 1870, column: 23, scope: !5891)
!5912 = !DILocation(line: 1870, column: 37, scope: !5891)
!5913 = !DILocation(line: 1870, column: 45, scope: !5891)
!5914 = !DILocation(line: 1870, column: 4, scope: !5891)
!5915 = !DILocation(line: 1871, column: 3, scope: !5891)
!5916 = !DILocalVariable(name: "fallback", scope: !5917, file: !1, line: 1873, type: !5918)
!5917 = distinct !DILexicalBlock(scope: !5879, file: !1, line: 1872, column: 8)
!5918 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !871, size: 64)
!5919 = !DILocation(line: 1873, column: 19, scope: !5917)
!5920 = !DILocation(line: 1873, column: 30, scope: !5917)
!5921 = !DILocation(line: 1873, column: 39, scope: !5917)
!5922 = !DILocation(line: 1873, column: 58, scope: !5917)
!5923 = !DILocation(line: 1874, column: 28, scope: !5917)
!5924 = !DILocation(line: 1874, column: 42, scope: !5917)
!5925 = !DILocation(line: 1874, column: 64, scope: !5917)
!5926 = !DILocation(line: 1874, column: 4, scope: !5917)
!5927 = !DILocation(line: 1876, column: 2, scope: !5868)
!5928 = distinct !{!5928, !5863, !5929}
!5929 = !DILocation(line: 1876, column: 2, scope: !5864)
!5930 = !DILocation(line: 1877, column: 1, scope: !5801)
!5931 = distinct !DISubprogram(name: "statvis_calc_thickness", scope: !1, file: !1, line: 1893, type: !5932, scopeLine: 1900, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1952)
!5932 = !DISubroutineType(types: !5933)
!5933 = !{null, !1706, !1698, !241, !241, !1967, !1881}
!5934 = !DILocalVariable(name: "em", arg: 1, scope: !5931, file: !1, line: 1894, type: !1706)
!5935 = !DILocation(line: 1894, column: 21, scope: !5931)
!5936 = !DILocalVariable(name: "vertexCos", arg: 2, scope: !5931, file: !1, line: 1895, type: !1698)
!5937 = !DILocation(line: 1895, column: 23, scope: !5931)
!5938 = !DILocalVariable(name: "min", arg: 3, scope: !5931, file: !1, line: 1897, type: !241)
!5939 = !DILocation(line: 1897, column: 21, scope: !5931)
!5940 = !DILocalVariable(name: "max", arg: 4, scope: !5931, file: !1, line: 1897, type: !241)
!5941 = !DILocation(line: 1897, column: 38, scope: !5931)
!5942 = !DILocalVariable(name: "samples", arg: 5, scope: !5931, file: !1, line: 1897, type: !1967)
!5943 = !DILocation(line: 1897, column: 53, scope: !5931)
!5944 = !DILocalVariable(name: "r_face_colors", arg: 6, scope: !5931, file: !1, line: 1899, type: !1881)
!5945 = !DILocation(line: 1899, column: 25, scope: !5931)
!5946 = !DILocalVariable(name: "eps_offset", scope: !5931, file: !1, line: 1901, type: !241)
!5947 = !DILocation(line: 1901, column: 14, scope: !5931)
!5948 = !DILocalVariable(name: "face_dists", scope: !5931, file: !1, line: 1902, type: !464)
!5949 = !DILocation(line: 1902, column: 9, scope: !5931)
!5950 = !DILocation(line: 1902, column: 31, scope: !5931)
!5951 = !DILocation(line: 1902, column: 22, scope: !5931)
!5952 = !DILocalVariable(name: "use_jit", scope: !5931, file: !1, line: 1903, type: !1649)
!5953 = !DILocation(line: 1903, column: 13, scope: !5931)
!5954 = !DILocation(line: 1903, column: 23, scope: !5931)
!5955 = !DILocation(line: 1903, column: 31, scope: !5931)
!5956 = !DILocalVariable(name: "jit_ofs", scope: !5931, file: !1, line: 1904, type: !5957)
!5957 = !DICompositeType(tag: DW_TAG_array_type, baseType: !224, size: 2048, elements: !5958)
!5958 = !{!1436, !798}
!5959 = !DILocation(line: 1904, column: 8, scope: !5931)
!5960 = !DILocalVariable(name: "bm", scope: !5931, file: !1, line: 1905, type: !1847)
!5961 = !DILocation(line: 1905, column: 9, scope: !5931)
!5962 = !DILocation(line: 1905, column: 14, scope: !5931)
!5963 = !DILocation(line: 1905, column: 18, scope: !5931)
!5964 = !DILocalVariable(name: "tottri", scope: !5931, file: !1, line: 1906, type: !1967)
!5965 = !DILocation(line: 1906, column: 12, scope: !5931)
!5966 = !DILocation(line: 1906, column: 21, scope: !5931)
!5967 = !DILocation(line: 1906, column: 25, scope: !5931)
!5968 = !DILocalVariable(name: "minmax_irange", scope: !5931, file: !1, line: 1907, type: !241)
!5969 = !DILocation(line: 1907, column: 14, scope: !5931)
!5970 = !DILocation(line: 1907, column: 38, scope: !5931)
!5971 = !DILocation(line: 1907, column: 44, scope: !5931)
!5972 = !DILocation(line: 1907, column: 42, scope: !5931)
!5973 = !DILocation(line: 1907, column: 35, scope: !5931)
!5974 = !DILocalVariable(name: "i", scope: !5931, file: !1, line: 1908, type: !168)
!5975 = !DILocation(line: 1908, column: 6, scope: !5931)
!5976 = !DILocalVariable(name: "looptris", scope: !5931, file: !1, line: 1910, type: !1872)
!5977 = !DILocation(line: 1910, column: 19, scope: !5931)
!5978 = !DILocation(line: 1910, column: 34, scope: !5931)
!5979 = !DILocation(line: 1910, column: 38, scope: !5931)
!5980 = !DILocalVariable(name: "col_fallback", scope: !5931, file: !1, line: 1913, type: !5981)
!5981 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1814, size: 32, elements: !401)
!5982 = !DILocation(line: 1913, column: 13, scope: !5931)
!5983 = !DILocalVariable(name: "bmtree", scope: !5931, file: !1, line: 1915, type: !5984)
!5984 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5985, size: 64)
!5985 = !DICompositeType(tag: DW_TAG_structure_type, name: "BMBVHTree", file: !5986, line: 40, flags: DIFlagFwdDecl)
!5986 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_editmesh_bvh.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5987 = !DILocation(line: 1915, column: 20, scope: !5931)
!5988 = !DILocation(line: 1919, column: 13, scope: !5931)
!5989 = !DILocation(line: 1919, column: 25, scope: !5931)
!5990 = !DILocation(line: 1919, column: 29, scope: !5931)
!5991 = !DILocation(line: 1919, column: 33, scope: !5931)
!5992 = !DILocation(line: 1919, column: 42, scope: !5931)
!5993 = !DILocation(line: 1919, column: 2, scope: !5931)
!5994 = !DILocation(line: 1921, column: 6, scope: !5995)
!5995 = distinct !DILexicalBlock(scope: !5931, file: !1, line: 1921, column: 6)
!5996 = !DILocation(line: 1921, column: 6, scope: !5931)
!5997 = !DILocalVariable(name: "j", scope: !5998, file: !1, line: 1922, type: !168)
!5998 = distinct !DILexicalBlock(scope: !5995, file: !1, line: 1921, column: 15)
!5999 = !DILocation(line: 1922, column: 7, scope: !5998)
!6000 = !DILocation(line: 1924, column: 19, scope: !5998)
!6001 = !DILocation(line: 1924, column: 28, scope: !5998)
!6002 = !DILocation(line: 1924, column: 3, scope: !5998)
!6003 = !DILocation(line: 1926, column: 10, scope: !6004)
!6004 = distinct !DILexicalBlock(scope: !5998, file: !1, line: 1926, column: 3)
!6005 = !DILocation(line: 1926, column: 8, scope: !6004)
!6006 = !DILocation(line: 1926, column: 15, scope: !6007)
!6007 = distinct !DILexicalBlock(scope: !6004, file: !1, line: 1926, column: 3)
!6008 = !DILocation(line: 1926, column: 19, scope: !6007)
!6009 = !DILocation(line: 1926, column: 17, scope: !6007)
!6010 = !DILocation(line: 1926, column: 3, scope: !6004)
!6011 = !DILocation(line: 1927, column: 30, scope: !6012)
!6012 = distinct !DILexicalBlock(scope: !6007, file: !1, line: 1926, column: 33)
!6013 = !DILocation(line: 1927, column: 22, scope: !6012)
!6014 = !DILocation(line: 1927, column: 4, scope: !6012)
!6015 = !DILocation(line: 1928, column: 3, scope: !6012)
!6016 = !DILocation(line: 1926, column: 29, scope: !6007)
!6017 = !DILocation(line: 1926, column: 3, scope: !6007)
!6018 = distinct !{!6018, !6010, !6019}
!6019 = !DILocation(line: 1928, column: 3, scope: !6004)
!6020 = !DILocation(line: 1929, column: 2, scope: !5998)
!6021 = !DILocation(line: 1931, column: 28, scope: !5931)
!6022 = !DILocation(line: 1931, column: 2, scope: !5931)
!6023 = !DILocation(line: 1932, column: 6, scope: !6024)
!6024 = distinct !DILexicalBlock(scope: !5931, file: !1, line: 1932, column: 6)
!6025 = !DILocation(line: 1932, column: 6, scope: !5931)
!6026 = !DILocation(line: 1933, column: 29, scope: !6027)
!6027 = distinct !DILexicalBlock(scope: !6024, file: !1, line: 1932, column: 17)
!6028 = !DILocation(line: 1933, column: 3, scope: !6027)
!6029 = !DILocation(line: 1934, column: 2, scope: !6027)
!6030 = !DILocation(line: 1936, column: 39, scope: !5931)
!6031 = !DILocation(line: 1936, column: 46, scope: !5931)
!6032 = !DILocation(line: 1936, column: 11, scope: !5931)
!6033 = !DILocation(line: 1936, column: 9, scope: !5931)
!6034 = !DILocation(line: 1938, column: 9, scope: !6035)
!6035 = distinct !DILexicalBlock(scope: !5931, file: !1, line: 1938, column: 2)
!6036 = !DILocation(line: 1938, column: 7, scope: !6035)
!6037 = !DILocation(line: 1938, column: 14, scope: !6038)
!6038 = distinct !DILexicalBlock(scope: !6035, file: !1, line: 1938, column: 2)
!6039 = !DILocation(line: 1938, column: 18, scope: !6038)
!6040 = !DILocation(line: 1938, column: 16, scope: !6038)
!6041 = !DILocation(line: 1938, column: 2, scope: !6035)
!6042 = !DILocalVariable(name: "f_hit", scope: !6043, file: !1, line: 1939, type: !1795)
!6043 = distinct !DILexicalBlock(scope: !6038, file: !1, line: 1938, column: 31)
!6044 = !DILocation(line: 1939, column: 11, scope: !6043)
!6045 = !DILocalVariable(name: "ltri", scope: !6043, file: !1, line: 1940, type: !2848)
!6046 = !DILocation(line: 1940, column: 12, scope: !6043)
!6047 = !DILocation(line: 1940, column: 19, scope: !6043)
!6048 = !DILocation(line: 1940, column: 28, scope: !6043)
!6049 = !DILocalVariable(name: "index", scope: !6043, file: !1, line: 1941, type: !1967)
!6050 = !DILocation(line: 1941, column: 13, scope: !6043)
!6051 = !DILocation(line: 1941, column: 21, scope: !6043)
!6052 = !DILocalVariable(name: "cos", scope: !6043, file: !1, line: 1942, type: !6053)
!6053 = !DICompositeType(tag: DW_TAG_array_type, baseType: !438, size: 192, elements: !261)
!6054 = !DILocation(line: 1942, column: 16, scope: !6043)
!6055 = !DILocalVariable(name: "ray_co", scope: !6043, file: !1, line: 1943, type: !260)
!6056 = !DILocation(line: 1943, column: 9, scope: !6043)
!6057 = !DILocalVariable(name: "ray_no", scope: !6043, file: !1, line: 1944, type: !260)
!6058 = !DILocation(line: 1944, column: 9, scope: !6043)
!6059 = !DILocation(line: 1946, column: 7, scope: !6060)
!6060 = distinct !DILexicalBlock(scope: !6043, file: !1, line: 1946, column: 7)
!6061 = !DILocation(line: 1946, column: 7, scope: !6043)
!6062 = !DILocation(line: 1947, column: 13, scope: !6063)
!6063 = distinct !DILexicalBlock(scope: !6060, file: !1, line: 1946, column: 18)
!6064 = !DILocation(line: 1947, column: 23, scope: !6063)
!6065 = !DILocation(line: 1947, column: 4, scope: !6063)
!6066 = !DILocation(line: 1947, column: 11, scope: !6063)
!6067 = !DILocation(line: 1948, column: 13, scope: !6063)
!6068 = !DILocation(line: 1948, column: 23, scope: !6063)
!6069 = !DILocation(line: 1948, column: 4, scope: !6063)
!6070 = !DILocation(line: 1948, column: 11, scope: !6063)
!6071 = !DILocation(line: 1949, column: 13, scope: !6063)
!6072 = !DILocation(line: 1949, column: 23, scope: !6063)
!6073 = !DILocation(line: 1949, column: 4, scope: !6063)
!6074 = !DILocation(line: 1949, column: 11, scope: !6063)
!6075 = !DILocation(line: 1950, column: 3, scope: !6063)
!6076 = !DILocation(line: 1952, column: 13, scope: !6077)
!6077 = distinct !DILexicalBlock(scope: !6060, file: !1, line: 1951, column: 8)
!6078 = !DILocation(line: 1952, column: 22, scope: !6077)
!6079 = !DILocation(line: 1952, column: 25, scope: !6077)
!6080 = !DILocation(line: 1952, column: 4, scope: !6077)
!6081 = !DILocation(line: 1952, column: 11, scope: !6077)
!6082 = !DILocation(line: 1953, column: 13, scope: !6077)
!6083 = !DILocation(line: 1953, column: 22, scope: !6077)
!6084 = !DILocation(line: 1953, column: 25, scope: !6077)
!6085 = !DILocation(line: 1953, column: 4, scope: !6077)
!6086 = !DILocation(line: 1953, column: 11, scope: !6077)
!6087 = !DILocation(line: 1954, column: 13, scope: !6077)
!6088 = !DILocation(line: 1954, column: 22, scope: !6077)
!6089 = !DILocation(line: 1954, column: 25, scope: !6077)
!6090 = !DILocation(line: 1954, column: 4, scope: !6077)
!6091 = !DILocation(line: 1954, column: 11, scope: !6077)
!6092 = !DILocation(line: 1957, column: 17, scope: !6043)
!6093 = !DILocation(line: 1957, column: 25, scope: !6043)
!6094 = !DILocation(line: 1957, column: 33, scope: !6043)
!6095 = !DILocation(line: 1957, column: 41, scope: !6043)
!6096 = !DILocation(line: 1957, column: 3, scope: !6043)
!6097 = !DILocation(line: 1973, column: 7, scope: !6098)
!6098 = distinct !DILexicalBlock(scope: !6043, file: !1, line: 1973, column: 7)
!6099 = !DILocation(line: 1973, column: 7, scope: !6043)
!6100 = !DILocalVariable(name: "j", scope: !6101, file: !1, line: 1974, type: !168)
!6101 = distinct !DILexicalBlock(scope: !6098, file: !1, line: 1973, column: 16)
!6102 = !DILocation(line: 1974, column: 8, scope: !6101)
!6103 = !DILocation(line: 1975, column: 11, scope: !6104)
!6104 = distinct !DILexicalBlock(scope: !6101, file: !1, line: 1975, column: 4)
!6105 = !DILocation(line: 1975, column: 9, scope: !6104)
!6106 = !DILocation(line: 1975, column: 16, scope: !6107)
!6107 = distinct !DILexicalBlock(scope: !6104, file: !1, line: 1975, column: 4)
!6108 = !DILocation(line: 1975, column: 20, scope: !6107)
!6109 = !DILocation(line: 1975, column: 18, scope: !6107)
!6110 = !DILocation(line: 1975, column: 4, scope: !6104)
!6111 = !DILocalVariable(name: "dist", scope: !6112, file: !1, line: 1976, type: !224)
!6112 = distinct !DILexicalBlock(scope: !6107, file: !1, line: 1975, column: 34)
!6113 = !DILocation(line: 1976, column: 11, scope: !6112)
!6114 = !DILocation(line: 1976, column: 18, scope: !6112)
!6115 = !DILocation(line: 1976, column: 29, scope: !6112)
!6116 = !DILocation(line: 1977, column: 25, scope: !6112)
!6117 = !DILocation(line: 1977, column: 33, scope: !6112)
!6118 = !DILocation(line: 1977, column: 41, scope: !6112)
!6119 = !DILocation(line: 1977, column: 49, scope: !6112)
!6120 = !DILocation(line: 1977, column: 65, scope: !6112)
!6121 = !DILocation(line: 1977, column: 57, scope: !6112)
!6122 = !DILocation(line: 1977, column: 5, scope: !6112)
!6123 = !DILocation(line: 1978, column: 18, scope: !6112)
!6124 = !DILocation(line: 1978, column: 26, scope: !6112)
!6125 = !DILocation(line: 1978, column: 5, scope: !6112)
!6126 = !DILocation(line: 1980, column: 5, scope: !6112)
!6127 = !DILocation(line: 1980, column: 5, scope: !6128)
!6128 = distinct !DILexicalBlock(scope: !6112, file: !1, line: 1980, column: 5)
!6129 = !DILocalVariable(name: "angle_fac", scope: !6130, file: !1, line: 1980, type: !224)
!6130 = distinct !DILexicalBlock(scope: !6128, file: !1, line: 1980, column: 5)
!6131 = !DILocation(line: 1980, column: 5, scope: !6130)
!6132 = !DILocation(line: 1980, column: 5, scope: !6133)
!6133 = distinct !DILexicalBlock(scope: !6130, file: !1, line: 1980, column: 5)
!6134 = !DILocation(line: 1980, column: 5, scope: !6135)
!6135 = distinct !DILexicalBlock(scope: !6133, file: !1, line: 1980, column: 5)
!6136 = !DILocation(line: 1981, column: 4, scope: !6112)
!6137 = !DILocation(line: 1975, column: 30, scope: !6107)
!6138 = !DILocation(line: 1975, column: 4, scope: !6107)
!6139 = distinct !{!6139, !6110, !6140}
!6140 = !DILocation(line: 1981, column: 4, scope: !6104)
!6141 = !DILocation(line: 1982, column: 3, scope: !6101)
!6142 = !DILocalVariable(name: "dist", scope: !6143, file: !1, line: 1984, type: !224)
!6143 = distinct !DILexicalBlock(scope: !6098, file: !1, line: 1983, column: 8)
!6144 = !DILocation(line: 1984, column: 10, scope: !6143)
!6145 = !DILocation(line: 1984, column: 17, scope: !6143)
!6146 = !DILocation(line: 1984, column: 28, scope: !6143)
!6147 = !DILocation(line: 1985, column: 18, scope: !6143)
!6148 = !DILocation(line: 1985, column: 26, scope: !6143)
!6149 = !DILocation(line: 1985, column: 34, scope: !6143)
!6150 = !DILocation(line: 1985, column: 42, scope: !6143)
!6151 = !DILocation(line: 1985, column: 4, scope: !6143)
!6152 = !DILocation(line: 1986, column: 17, scope: !6143)
!6153 = !DILocation(line: 1986, column: 25, scope: !6143)
!6154 = !DILocation(line: 1986, column: 4, scope: !6143)
!6155 = !DILocation(line: 1988, column: 4, scope: !6143)
!6156 = !DILocation(line: 1988, column: 4, scope: !6157)
!6157 = distinct !DILexicalBlock(scope: !6143, file: !1, line: 1988, column: 4)
!6158 = !DILocalVariable(name: "angle_fac", scope: !6159, file: !1, line: 1988, type: !224)
!6159 = distinct !DILexicalBlock(scope: !6157, file: !1, line: 1988, column: 4)
!6160 = !DILocation(line: 1988, column: 4, scope: !6159)
!6161 = !DILocation(line: 1988, column: 4, scope: !6162)
!6162 = distinct !DILexicalBlock(scope: !6159, file: !1, line: 1988, column: 4)
!6163 = !DILocation(line: 1988, column: 4, scope: !6164)
!6164 = distinct !DILexicalBlock(scope: !6162, file: !1, line: 1988, column: 4)
!6165 = !DILocation(line: 1990, column: 2, scope: !6043)
!6166 = !DILocation(line: 1938, column: 27, scope: !6038)
!6167 = !DILocation(line: 1938, column: 2, scope: !6038)
!6168 = distinct !{!6168, !6041, !6169}
!6169 = !DILocation(line: 1990, column: 2, scope: !6035)
!6170 = !DILocation(line: 1992, column: 17, scope: !5931)
!6171 = !DILocation(line: 1992, column: 2, scope: !5931)
!6172 = !DILocation(line: 1995, column: 9, scope: !6173)
!6173 = distinct !DILexicalBlock(scope: !5931, file: !1, line: 1995, column: 2)
!6174 = !DILocation(line: 1995, column: 7, scope: !6173)
!6175 = !DILocation(line: 1995, column: 14, scope: !6176)
!6176 = distinct !DILexicalBlock(scope: !6173, file: !1, line: 1995, column: 2)
!6177 = !DILocation(line: 1995, column: 18, scope: !6176)
!6178 = !DILocation(line: 1995, column: 22, scope: !6176)
!6179 = !DILocation(line: 1995, column: 16, scope: !6176)
!6180 = !DILocation(line: 1995, column: 2, scope: !6173)
!6181 = !DILocalVariable(name: "fac", scope: !6182, file: !1, line: 1996, type: !224)
!6182 = distinct !DILexicalBlock(scope: !6176, file: !1, line: 1995, column: 36)
!6183 = !DILocation(line: 1996, column: 9, scope: !6182)
!6184 = !DILocation(line: 1996, column: 15, scope: !6182)
!6185 = !DILocation(line: 1996, column: 26, scope: !6182)
!6186 = !DILocation(line: 1999, column: 7, scope: !6187)
!6187 = distinct !DILexicalBlock(scope: !6182, file: !1, line: 1999, column: 7)
!6188 = !DILocation(line: 1999, column: 13, scope: !6187)
!6189 = !DILocation(line: 1999, column: 11, scope: !6187)
!6190 = !DILocation(line: 1999, column: 7, scope: !6182)
!6191 = !DILocalVariable(name: "fcol", scope: !6192, file: !1, line: 2000, type: !260)
!6192 = distinct !DILexicalBlock(scope: !6187, file: !1, line: 1999, column: 18)
!6193 = !DILocation(line: 2000, column: 10, scope: !6192)
!6194 = !DILocation(line: 2001, column: 11, scope: !6192)
!6195 = !DILocation(line: 2001, column: 17, scope: !6192)
!6196 = !DILocation(line: 2001, column: 15, scope: !6192)
!6197 = !DILocation(line: 2001, column: 24, scope: !6192)
!6198 = !DILocation(line: 2001, column: 22, scope: !6192)
!6199 = !DILocation(line: 2001, column: 8, scope: !6192)
!6200 = !DILocation(line: 2002, column: 17, scope: !6192)
!6201 = !DILocation(line: 2002, column: 15, scope: !6192)
!6202 = !DILocation(line: 2002, column: 8, scope: !6192)
!6203 = !DILocation(line: 2003, column: 4, scope: !6204)
!6204 = distinct !DILexicalBlock(scope: !6205, file: !1, line: 2003, column: 4)
!6205 = distinct !DILexicalBlock(scope: !6192, file: !1, line: 2003, column: 4)
!6206 = !DILocation(line: 2003, column: 4, scope: !6205)
!6207 = !DILocation(line: 2003, column: 4, scope: !6208)
!6208 = distinct !DILexicalBlock(scope: !6204, file: !1, line: 2003, column: 4)
!6209 = !DILocation(line: 2004, column: 18, scope: !6192)
!6210 = !DILocation(line: 2004, column: 24, scope: !6192)
!6211 = !DILocation(line: 2004, column: 4, scope: !6192)
!6212 = !DILocation(line: 2005, column: 23, scope: !6192)
!6213 = !DILocation(line: 2005, column: 37, scope: !6192)
!6214 = !DILocation(line: 2005, column: 41, scope: !6192)
!6215 = !DILocation(line: 2005, column: 4, scope: !6192)
!6216 = !DILocation(line: 2006, column: 3, scope: !6192)
!6217 = !DILocation(line: 2008, column: 28, scope: !6218)
!6218 = distinct !DILexicalBlock(scope: !6187, file: !1, line: 2007, column: 8)
!6219 = !DILocation(line: 2008, column: 42, scope: !6218)
!6220 = !DILocation(line: 2008, column: 60, scope: !6218)
!6221 = !DILocation(line: 2008, column: 4, scope: !6218)
!6222 = !DILocation(line: 2010, column: 2, scope: !6182)
!6223 = !DILocation(line: 1995, column: 32, scope: !6176)
!6224 = !DILocation(line: 1995, column: 2, scope: !6176)
!6225 = distinct !{!6225, !6180, !6226}
!6226 = !DILocation(line: 2010, column: 2, scope: !6173)
!6227 = !DILocation(line: 2011, column: 1, scope: !5931)
!6228 = distinct !DISubprogram(name: "statvis_calc_intersect", scope: !1, file: !1, line: 2013, type: !6229, scopeLine: 2018, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1952)
!6229 = !DISubroutineType(types: !6230)
!6230 = !{null, !1706, !1698, !1881}
!6231 = !DILocalVariable(name: "em", arg: 1, scope: !6228, file: !1, line: 2014, type: !1706)
!6232 = !DILocation(line: 2014, column: 21, scope: !6228)
!6233 = !DILocalVariable(name: "vertexCos", arg: 2, scope: !6228, file: !1, line: 2015, type: !1698)
!6234 = !DILocation(line: 2015, column: 23, scope: !6228)
!6235 = !DILocalVariable(name: "r_face_colors", arg: 3, scope: !6228, file: !1, line: 2017, type: !1881)
!6236 = !DILocation(line: 2017, column: 25, scope: !6228)
!6237 = !DILocalVariable(name: "iter", scope: !6228, file: !1, line: 2019, type: !2184)
!6238 = !DILocation(line: 2019, column: 9, scope: !6228)
!6239 = !DILocalVariable(name: "bm", scope: !6228, file: !1, line: 2020, type: !1847)
!6240 = !DILocation(line: 2020, column: 9, scope: !6228)
!6241 = !DILocation(line: 2020, column: 14, scope: !6228)
!6242 = !DILocation(line: 2020, column: 18, scope: !6228)
!6243 = !DILocalVariable(name: "e", scope: !6228, file: !1, line: 2021, type: !1791)
!6244 = !DILocation(line: 2021, column: 10, scope: !6228)
!6245 = !DILocalVariable(name: "index", scope: !6228, file: !1, line: 2022, type: !168)
!6246 = !DILocation(line: 2022, column: 6, scope: !6228)
!6247 = !DILocalVariable(name: "bmtree", scope: !6228, file: !1, line: 2027, type: !5984)
!6248 = !DILocation(line: 2027, column: 20, scope: !6228)
!6249 = !DILocation(line: 2029, column: 9, scope: !6228)
!6250 = !DILocation(line: 2029, column: 2, scope: !6228)
!6251 = !DILocation(line: 2029, column: 42, scope: !6228)
!6252 = !DILocation(line: 2029, column: 46, scope: !6228)
!6253 = !DILocation(line: 2029, column: 50, scope: !6228)
!6254 = !DILocation(line: 2029, column: 40, scope: !6228)
!6255 = !DILocation(line: 2031, column: 28, scope: !6228)
!6256 = !DILocation(line: 2031, column: 2, scope: !6228)
!6257 = !DILocation(line: 2032, column: 6, scope: !6258)
!6258 = distinct !DILexicalBlock(scope: !6228, file: !1, line: 2032, column: 6)
!6259 = !DILocation(line: 2032, column: 6, scope: !6228)
!6260 = !DILocation(line: 2033, column: 29, scope: !6261)
!6261 = distinct !DILexicalBlock(scope: !6258, file: !1, line: 2032, column: 17)
!6262 = !DILocation(line: 2033, column: 3, scope: !6261)
!6263 = !DILocation(line: 2034, column: 2, scope: !6261)
!6264 = !DILocation(line: 2036, column: 39, scope: !6228)
!6265 = !DILocation(line: 2036, column: 46, scope: !6228)
!6266 = !DILocation(line: 2036, column: 11, scope: !6228)
!6267 = !DILocation(line: 2036, column: 9, scope: !6228)
!6268 = !DILocation(line: 2038, column: 2, scope: !6269)
!6269 = distinct !DILexicalBlock(scope: !6228, file: !1, line: 2038, column: 2)
!6270 = !DILocation(line: 2038, column: 2, scope: !6271)
!6271 = distinct !DILexicalBlock(scope: !6269, file: !1, line: 2038, column: 2)
!6272 = !DILocalVariable(name: "f_hit", scope: !6273, file: !1, line: 2039, type: !1795)
!6273 = distinct !DILexicalBlock(scope: !6271, file: !1, line: 2038, column: 48)
!6274 = !DILocation(line: 2039, column: 11, scope: !6273)
!6275 = !DILocalVariable(name: "cos", scope: !6273, file: !1, line: 2040, type: !6276)
!6276 = !DICompositeType(tag: DW_TAG_array_type, baseType: !224, size: 192, elements: !6277)
!6277 = !{!798, !262}
!6278 = !DILocation(line: 2040, column: 9, scope: !6273)
!6279 = !DILocalVariable(name: "cos_mid", scope: !6273, file: !1, line: 2041, type: !260)
!6280 = !DILocation(line: 2041, column: 9, scope: !6273)
!6281 = !DILocalVariable(name: "ray_no", scope: !6273, file: !1, line: 2042, type: !260)
!6282 = !DILocation(line: 2042, column: 9, scope: !6273)
!6283 = !DILocation(line: 2044, column: 7, scope: !6284)
!6284 = distinct !DILexicalBlock(scope: !6273, file: !1, line: 2044, column: 7)
!6285 = !DILocation(line: 2044, column: 10, scope: !6284)
!6286 = !DILocation(line: 2044, column: 12, scope: !6284)
!6287 = !DILocation(line: 2044, column: 7, scope: !6273)
!6288 = !DILocation(line: 2045, column: 4, scope: !6284)
!6289 = !DILocation(line: 2047, column: 7, scope: !6290)
!6290 = distinct !DILexicalBlock(scope: !6273, file: !1, line: 2047, column: 7)
!6291 = !DILocation(line: 2047, column: 7, scope: !6273)
!6292 = !DILocation(line: 2048, column: 15, scope: !6293)
!6293 = distinct !DILexicalBlock(scope: !6290, file: !1, line: 2047, column: 18)
!6294 = !DILocation(line: 2048, column: 23, scope: !6293)
!6295 = !DILocation(line: 2048, column: 33, scope: !6293)
!6296 = !DILocation(line: 2048, column: 4, scope: !6293)
!6297 = !DILocation(line: 2049, column: 15, scope: !6293)
!6298 = !DILocation(line: 2049, column: 23, scope: !6293)
!6299 = !DILocation(line: 2049, column: 33, scope: !6293)
!6300 = !DILocation(line: 2049, column: 4, scope: !6293)
!6301 = !DILocation(line: 2050, column: 3, scope: !6293)
!6302 = !DILocation(line: 2052, column: 15, scope: !6303)
!6303 = distinct !DILexicalBlock(scope: !6290, file: !1, line: 2051, column: 8)
!6304 = !DILocation(line: 2052, column: 23, scope: !6303)
!6305 = !DILocation(line: 2052, column: 26, scope: !6303)
!6306 = !DILocation(line: 2052, column: 30, scope: !6303)
!6307 = !DILocation(line: 2052, column: 4, scope: !6303)
!6308 = !DILocation(line: 2053, column: 15, scope: !6303)
!6309 = !DILocation(line: 2053, column: 23, scope: !6303)
!6310 = !DILocation(line: 2053, column: 26, scope: !6303)
!6311 = !DILocation(line: 2053, column: 30, scope: !6303)
!6312 = !DILocation(line: 2053, column: 4, scope: !6303)
!6313 = !DILocation(line: 2056, column: 15, scope: !6273)
!6314 = !DILocation(line: 2056, column: 24, scope: !6273)
!6315 = !DILocation(line: 2056, column: 32, scope: !6273)
!6316 = !DILocation(line: 2056, column: 3, scope: !6273)
!6317 = !DILocation(line: 2057, column: 15, scope: !6273)
!6318 = !DILocation(line: 2057, column: 23, scope: !6273)
!6319 = !DILocation(line: 2057, column: 31, scope: !6273)
!6320 = !DILocation(line: 2057, column: 3, scope: !6273)
!6321 = !DILocation(line: 2059, column: 39, scope: !6273)
!6322 = !DILocation(line: 2059, column: 47, scope: !6273)
!6323 = !DILocation(line: 2059, column: 55, scope: !6273)
!6324 = !DILocation(line: 2059, column: 11, scope: !6273)
!6325 = !DILocation(line: 2059, column: 9, scope: !6273)
!6326 = !DILocation(line: 2062, column: 7, scope: !6327)
!6327 = distinct !DILexicalBlock(scope: !6273, file: !1, line: 2062, column: 7)
!6328 = !DILocation(line: 2062, column: 7, scope: !6273)
!6329 = !DILocalVariable(name: "l_iter", scope: !6330, file: !1, line: 2063, type: !1773)
!6330 = distinct !DILexicalBlock(scope: !6327, file: !1, line: 2062, column: 14)
!6331 = !DILocation(line: 2063, column: 12, scope: !6330)
!6332 = !DILocalVariable(name: "l_first", scope: !6330, file: !1, line: 2063, type: !1773)
!6333 = !DILocation(line: 2063, column: 21, scope: !6330)
!6334 = !DILocalVariable(name: "fcol", scope: !6330, file: !1, line: 2064, type: !260)
!6335 = !DILocation(line: 2064, column: 10, scope: !6330)
!6336 = !DILocation(line: 2066, column: 12, scope: !6330)
!6337 = !DILocation(line: 2066, column: 10, scope: !6330)
!6338 = !DILocation(line: 2067, column: 18, scope: !6330)
!6339 = !DILocation(line: 2067, column: 4, scope: !6330)
!6340 = !DILocation(line: 2068, column: 23, scope: !6330)
!6341 = !DILocation(line: 2068, column: 37, scope: !6330)
!6342 = !DILocation(line: 2068, column: 45, scope: !6330)
!6343 = !DILocation(line: 2068, column: 4, scope: !6330)
!6344 = !DILocation(line: 2070, column: 23, scope: !6330)
!6345 = !DILocation(line: 2070, column: 26, scope: !6330)
!6346 = !DILocation(line: 2070, column: 21, scope: !6330)
!6347 = !DILocation(line: 2070, column: 11, scope: !6330)
!6348 = !DILocation(line: 2071, column: 4, scope: !6330)
!6349 = !DILocation(line: 2072, column: 13, scope: !6350)
!6350 = distinct !DILexicalBlock(scope: !6330, file: !1, line: 2071, column: 7)
!6351 = !DILocation(line: 2072, column: 11, scope: !6350)
!6352 = !DILocation(line: 2073, column: 19, scope: !6350)
!6353 = !DILocation(line: 2073, column: 5, scope: !6350)
!6354 = !DILocation(line: 2074, column: 24, scope: !6350)
!6355 = !DILocation(line: 2074, column: 38, scope: !6350)
!6356 = !DILocation(line: 2074, column: 46, scope: !6350)
!6357 = !DILocation(line: 2074, column: 5, scope: !6350)
!6358 = !DILocation(line: 2075, column: 4, scope: !6350)
!6359 = !DILocation(line: 2075, column: 23, scope: !6330)
!6360 = !DILocation(line: 2075, column: 31, scope: !6330)
!6361 = !DILocation(line: 2075, column: 21, scope: !6330)
!6362 = !DILocation(line: 2075, column: 47, scope: !6330)
!6363 = !DILocation(line: 2075, column: 44, scope: !6330)
!6364 = distinct !{!6364, !6348, !6365}
!6365 = !DILocation(line: 2075, column: 54, scope: !6330)
!6366 = !DILocation(line: 2076, column: 3, scope: !6330)
!6367 = !DILocation(line: 2078, column: 2, scope: !6273)
!6368 = distinct !{!6368, !6268, !6369}
!6369 = !DILocation(line: 2078, column: 2, scope: !6269)
!6370 = !DILocation(line: 2080, column: 17, scope: !6228)
!6371 = !DILocation(line: 2080, column: 2, scope: !6228)
!6372 = !DILocation(line: 2081, column: 1, scope: !6228)
!6373 = distinct !DISubprogram(name: "emDM_ensurePolyNormals", scope: !1, file: !1, line: 108, type: !6374, scopeLine: 109, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1952)
!6374 = !DISubroutineType(types: !6375)
!6375 = !{null, !1700}
!6376 = !DILocalVariable(name: "bmdm", arg: 1, scope: !6373, file: !1, line: 108, type: !1700)
!6377 = !DILocation(line: 108, column: 54, scope: !6373)
!6378 = !DILocation(line: 110, column: 6, scope: !6379)
!6379 = distinct !DILexicalBlock(scope: !6373, file: !1, line: 110, column: 6)
!6380 = !DILocation(line: 110, column: 12, scope: !6379)
!6381 = !DILocation(line: 110, column: 22, scope: !6379)
!6382 = !DILocation(line: 110, column: 26, scope: !6379)
!6383 = !DILocation(line: 110, column: 32, scope: !6379)
!6384 = !DILocation(line: 110, column: 40, scope: !6379)
!6385 = !DILocation(line: 110, column: 6, scope: !6373)
!6386 = !DILocalVariable(name: "bm", scope: !6387, file: !1, line: 111, type: !1847)
!6387 = distinct !DILexicalBlock(scope: !6379, file: !1, line: 110, column: 50)
!6388 = !DILocation(line: 111, column: 10, scope: !6387)
!6389 = !DILocation(line: 111, column: 15, scope: !6387)
!6390 = !DILocation(line: 111, column: 21, scope: !6387)
!6391 = !DILocation(line: 111, column: 25, scope: !6387)
!6392 = !DILocalVariable(name: "vertexCos", scope: !6387, file: !1, line: 112, type: !1698)
!6393 = !DILocation(line: 112, column: 17, scope: !6387)
!6394 = !DILocalVariable(name: "polyNos", scope: !6387, file: !1, line: 113, type: !473)
!6395 = !DILocation(line: 113, column: 11, scope: !6387)
!6396 = !DILocalVariable(name: "efa", scope: !6387, file: !1, line: 115, type: !1795)
!6397 = !DILocation(line: 115, column: 11, scope: !6387)
!6398 = !DILocalVariable(name: "fiter", scope: !6387, file: !1, line: 116, type: !2184)
!6399 = !DILocation(line: 116, column: 10, scope: !6387)
!6400 = !DILocalVariable(name: "i", scope: !6387, file: !1, line: 117, type: !168)
!6401 = !DILocation(line: 117, column: 7, scope: !6387)
!6402 = !DILocation(line: 119, column: 29, scope: !6387)
!6403 = !DILocation(line: 119, column: 3, scope: !6387)
!6404 = !DILocation(line: 121, column: 13, scope: !6387)
!6405 = !DILocation(line: 121, column: 44, scope: !6387)
!6406 = !DILocation(line: 121, column: 48, scope: !6387)
!6407 = !DILocation(line: 121, column: 42, scope: !6387)
!6408 = !DILocation(line: 121, column: 11, scope: !6387)
!6409 = !DILocation(line: 123, column: 15, scope: !6387)
!6410 = !DILocation(line: 123, column: 21, scope: !6387)
!6411 = !DILocation(line: 123, column: 13, scope: !6387)
!6412 = !DILocation(line: 125, column: 3, scope: !6413)
!6413 = distinct !DILexicalBlock(scope: !6387, file: !1, line: 125, column: 3)
!6414 = !DILocation(line: 125, column: 3, scope: !6415)
!6415 = distinct !DILexicalBlock(scope: !6413, file: !1, line: 125, column: 3)
!6416 = !DILocation(line: 126, column: 4, scope: !6417)
!6417 = distinct !DILexicalBlock(scope: !6415, file: !1, line: 125, column: 61)
!6418 = !DILocation(line: 127, column: 29, scope: !6417)
!6419 = !DILocation(line: 127, column: 33, scope: !6417)
!6420 = !DILocation(line: 127, column: 38, scope: !6417)
!6421 = !DILocation(line: 127, column: 46, scope: !6417)
!6422 = !DILocation(line: 127, column: 50, scope: !6417)
!6423 = !DILocation(line: 127, column: 4, scope: !6417)
!6424 = !DILocation(line: 128, column: 3, scope: !6417)
!6425 = distinct !{!6425, !6412, !6426}
!6426 = !DILocation(line: 128, column: 3, scope: !6413)
!6427 = !DILocation(line: 129, column: 3, scope: !6387)
!6428 = !DILocation(line: 129, column: 7, scope: !6387)
!6429 = !DILocation(line: 129, column: 24, scope: !6387)
!6430 = !DILocation(line: 131, column: 39, scope: !6387)
!6431 = !DILocation(line: 131, column: 3, scope: !6387)
!6432 = !DILocation(line: 131, column: 9, scope: !6387)
!6433 = !DILocation(line: 131, column: 17, scope: !6387)
!6434 = !DILocation(line: 132, column: 2, scope: !6387)
!6435 = !DILocation(line: 133, column: 1, scope: !6373)
!6436 = distinct !DISubprogram(name: "statvis_calc_distort", scope: !1, file: !1, line: 2083, type: !6437, scopeLine: 2090, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1952)
!6437 = !DISubroutineType(types: !6438)
!6438 = !{null, !1706, !1698, !1698, !241, !241, !1881}
!6439 = !DILocalVariable(name: "em", arg: 1, scope: !6436, file: !1, line: 2084, type: !1706)
!6440 = !DILocation(line: 2084, column: 21, scope: !6436)
!6441 = !DILocalVariable(name: "vertexCos", arg: 2, scope: !6436, file: !1, line: 2085, type: !1698)
!6442 = !DILocation(line: 2085, column: 23, scope: !6436)
!6443 = !DILocalVariable(name: "polyNos", arg: 3, scope: !6436, file: !1, line: 2085, type: !1698)
!6444 = !DILocation(line: 2085, column: 52, scope: !6436)
!6445 = !DILocalVariable(name: "min", arg: 4, scope: !6436, file: !1, line: 2087, type: !241)
!6446 = !DILocation(line: 2087, column: 21, scope: !6436)
!6447 = !DILocalVariable(name: "max", arg: 5, scope: !6436, file: !1, line: 2087, type: !241)
!6448 = !DILocation(line: 2087, column: 38, scope: !6436)
!6449 = !DILocalVariable(name: "r_face_colors", arg: 6, scope: !6436, file: !1, line: 2089, type: !1881)
!6450 = !DILocation(line: 2089, column: 25, scope: !6436)
!6451 = !DILocalVariable(name: "iter", scope: !6436, file: !1, line: 2091, type: !2184)
!6452 = !DILocation(line: 2091, column: 9, scope: !6436)
!6453 = !DILocalVariable(name: "bm", scope: !6436, file: !1, line: 2092, type: !1847)
!6454 = !DILocation(line: 2092, column: 9, scope: !6436)
!6455 = !DILocation(line: 2092, column: 14, scope: !6436)
!6456 = !DILocation(line: 2092, column: 18, scope: !6436)
!6457 = !DILocalVariable(name: "f", scope: !6436, file: !1, line: 2093, type: !1795)
!6458 = !DILocation(line: 2093, column: 10, scope: !6436)
!6459 = !DILocalVariable(name: "f_no", scope: !6436, file: !1, line: 2094, type: !438)
!6460 = !DILocation(line: 2094, column: 15, scope: !6436)
!6461 = !DILocalVariable(name: "index", scope: !6436, file: !1, line: 2095, type: !168)
!6462 = !DILocation(line: 2095, column: 6, scope: !6436)
!6463 = !DILocalVariable(name: "minmax_irange", scope: !6436, file: !1, line: 2096, type: !241)
!6464 = !DILocation(line: 2096, column: 14, scope: !6436)
!6465 = !DILocation(line: 2096, column: 38, scope: !6436)
!6466 = !DILocation(line: 2096, column: 44, scope: !6436)
!6467 = !DILocation(line: 2096, column: 42, scope: !6436)
!6468 = !DILocation(line: 2096, column: 35, scope: !6436)
!6469 = !DILocalVariable(name: "col_fallback", scope: !6436, file: !1, line: 2099, type: !5981)
!6470 = !DILocation(line: 2099, column: 13, scope: !6436)
!6471 = !DILocation(line: 2102, column: 2, scope: !6472)
!6472 = distinct !DILexicalBlock(scope: !6436, file: !1, line: 2102, column: 2)
!6473 = !DILocation(line: 2102, column: 2, scope: !6474)
!6474 = distinct !DILexicalBlock(scope: !6472, file: !1, line: 2102, column: 2)
!6475 = !DILocalVariable(name: "fac", scope: !6476, file: !1, line: 2103, type: !224)
!6476 = distinct !DILexicalBlock(scope: !6474, file: !1, line: 2102, column: 61)
!6477 = !DILocation(line: 2103, column: 9, scope: !6476)
!6478 = !DILocation(line: 2105, column: 7, scope: !6479)
!6479 = distinct !DILexicalBlock(scope: !6476, file: !1, line: 2105, column: 7)
!6480 = !DILocation(line: 2105, column: 10, scope: !6479)
!6481 = !DILocation(line: 2105, column: 14, scope: !6479)
!6482 = !DILocation(line: 2105, column: 7, scope: !6476)
!6483 = !DILocation(line: 2106, column: 8, scope: !6484)
!6484 = distinct !DILexicalBlock(scope: !6479, file: !1, line: 2105, column: 20)
!6485 = !DILocation(line: 2107, column: 3, scope: !6484)
!6486 = !DILocalVariable(name: "l_iter", scope: !6487, file: !1, line: 2109, type: !1773)
!6487 = distinct !DILexicalBlock(scope: !6479, file: !1, line: 2108, column: 8)
!6488 = !DILocation(line: 2109, column: 12, scope: !6487)
!6489 = !DILocalVariable(name: "l_first", scope: !6487, file: !1, line: 2109, type: !1773)
!6490 = !DILocation(line: 2109, column: 21, scope: !6487)
!6491 = !DILocation(line: 2110, column: 8, scope: !6492)
!6492 = distinct !DILexicalBlock(scope: !6487, file: !1, line: 2110, column: 8)
!6493 = !DILocation(line: 2110, column: 8, scope: !6487)
!6494 = !DILocation(line: 2111, column: 12, scope: !6495)
!6495 = distinct !DILexicalBlock(scope: !6492, file: !1, line: 2110, column: 19)
!6496 = !DILocation(line: 2111, column: 20, scope: !6495)
!6497 = !DILocation(line: 2111, column: 10, scope: !6495)
!6498 = !DILocation(line: 2112, column: 4, scope: !6495)
!6499 = !DILocation(line: 2114, column: 12, scope: !6500)
!6500 = distinct !DILexicalBlock(scope: !6492, file: !1, line: 2113, column: 9)
!6501 = !DILocation(line: 2114, column: 15, scope: !6500)
!6502 = !DILocation(line: 2114, column: 10, scope: !6500)
!6503 = !DILocation(line: 2117, column: 8, scope: !6487)
!6504 = !DILocation(line: 2118, column: 23, scope: !6487)
!6505 = !DILocation(line: 2118, column: 21, scope: !6487)
!6506 = !DILocation(line: 2118, column: 11, scope: !6487)
!6507 = !DILocation(line: 2119, column: 4, scope: !6487)
!6508 = !DILocalVariable(name: "no_corner", scope: !6509, file: !1, line: 2120, type: !260)
!6509 = distinct !DILexicalBlock(scope: !6487, file: !1, line: 2119, column: 7)
!6510 = !DILocation(line: 2120, column: 11, scope: !6509)
!6511 = !DILocation(line: 2121, column: 9, scope: !6512)
!6512 = distinct !DILexicalBlock(scope: !6509, file: !1, line: 2121, column: 9)
!6513 = !DILocation(line: 2121, column: 9, scope: !6509)
!6514 = !DILocation(line: 2122, column: 20, scope: !6515)
!6515 = distinct !DILexicalBlock(scope: !6512, file: !1, line: 2121, column: 20)
!6516 = !DILocation(line: 2123, column: 20, scope: !6515)
!6517 = !DILocation(line: 2123, column: 30, scope: !6515)
!6518 = !DILocation(line: 2124, column: 20, scope: !6515)
!6519 = !DILocation(line: 2124, column: 30, scope: !6515)
!6520 = !DILocation(line: 2125, column: 20, scope: !6515)
!6521 = !DILocation(line: 2125, column: 30, scope: !6515)
!6522 = !DILocation(line: 2122, column: 6, scope: !6515)
!6523 = !DILocation(line: 2126, column: 5, scope: !6515)
!6524 = !DILocation(line: 2128, column: 31, scope: !6525)
!6525 = distinct !DILexicalBlock(scope: !6512, file: !1, line: 2127, column: 10)
!6526 = !DILocation(line: 2128, column: 39, scope: !6525)
!6527 = !DILocation(line: 2128, column: 6, scope: !6525)
!6528 = !DILocation(line: 2131, column: 18, scope: !6529)
!6529 = distinct !DILexicalBlock(scope: !6509, file: !1, line: 2131, column: 9)
!6530 = !DILocation(line: 2131, column: 24, scope: !6529)
!6531 = !DILocation(line: 2131, column: 9, scope: !6529)
!6532 = !DILocation(line: 2131, column: 35, scope: !6529)
!6533 = !DILocation(line: 2131, column: 9, scope: !6509)
!6534 = !DILocation(line: 2132, column: 16, scope: !6535)
!6535 = distinct !DILexicalBlock(scope: !6529, file: !1, line: 2131, column: 43)
!6536 = !DILocation(line: 2132, column: 6, scope: !6535)
!6537 = !DILocation(line: 2133, column: 5, scope: !6535)
!6538 = !DILocation(line: 2134, column: 18, scope: !6509)
!6539 = !DILocation(line: 2134, column: 45, scope: !6509)
!6540 = !DILocation(line: 2134, column: 51, scope: !6509)
!6541 = !DILocation(line: 2134, column: 23, scope: !6509)
!6542 = !DILocation(line: 2134, column: 11, scope: !6509)
!6543 = !DILocation(line: 2134, column: 9, scope: !6509)
!6544 = !DILocation(line: 2135, column: 4, scope: !6509)
!6545 = !DILocation(line: 2135, column: 23, scope: !6487)
!6546 = !DILocation(line: 2135, column: 31, scope: !6487)
!6547 = !DILocation(line: 2135, column: 21, scope: !6487)
!6548 = !DILocation(line: 2135, column: 40, scope: !6487)
!6549 = !DILocation(line: 2135, column: 37, scope: !6487)
!6550 = distinct !{!6550, !6507, !6551}
!6551 = !DILocation(line: 2135, column: 47, scope: !6487)
!6552 = !DILocation(line: 2136, column: 8, scope: !6487)
!6553 = !DILocation(line: 2140, column: 7, scope: !6554)
!6554 = distinct !DILexicalBlock(scope: !6476, file: !1, line: 2140, column: 7)
!6555 = !DILocation(line: 2140, column: 14, scope: !6554)
!6556 = !DILocation(line: 2140, column: 11, scope: !6554)
!6557 = !DILocation(line: 2140, column: 7, scope: !6476)
!6558 = !DILocalVariable(name: "fcol", scope: !6559, file: !1, line: 2141, type: !260)
!6559 = distinct !DILexicalBlock(scope: !6554, file: !1, line: 2140, column: 19)
!6560 = !DILocation(line: 2141, column: 10, scope: !6559)
!6561 = !DILocation(line: 2142, column: 11, scope: !6559)
!6562 = !DILocation(line: 2142, column: 17, scope: !6559)
!6563 = !DILocation(line: 2142, column: 15, scope: !6559)
!6564 = !DILocation(line: 2142, column: 24, scope: !6559)
!6565 = !DILocation(line: 2142, column: 22, scope: !6559)
!6566 = !DILocation(line: 2142, column: 8, scope: !6559)
!6567 = !DILocation(line: 2143, column: 4, scope: !6568)
!6568 = distinct !DILexicalBlock(scope: !6569, file: !1, line: 2143, column: 4)
!6569 = distinct !DILexicalBlock(scope: !6559, file: !1, line: 2143, column: 4)
!6570 = !DILocation(line: 2143, column: 4, scope: !6569)
!6571 = !DILocation(line: 2143, column: 4, scope: !6572)
!6572 = distinct !DILexicalBlock(scope: !6568, file: !1, line: 2143, column: 4)
!6573 = !DILocation(line: 2144, column: 18, scope: !6559)
!6574 = !DILocation(line: 2144, column: 24, scope: !6559)
!6575 = !DILocation(line: 2144, column: 4, scope: !6559)
!6576 = !DILocation(line: 2145, column: 23, scope: !6559)
!6577 = !DILocation(line: 2145, column: 37, scope: !6559)
!6578 = !DILocation(line: 2145, column: 45, scope: !6559)
!6579 = !DILocation(line: 2145, column: 4, scope: !6559)
!6580 = !DILocation(line: 2146, column: 3, scope: !6559)
!6581 = !DILocation(line: 2148, column: 28, scope: !6582)
!6582 = distinct !DILexicalBlock(scope: !6554, file: !1, line: 2147, column: 8)
!6583 = !DILocation(line: 2148, column: 42, scope: !6582)
!6584 = !DILocation(line: 2148, column: 64, scope: !6582)
!6585 = !DILocation(line: 2148, column: 4, scope: !6582)
!6586 = !DILocation(line: 2150, column: 2, scope: !6476)
!6587 = distinct !{!6587, !6471, !6588}
!6588 = !DILocation(line: 2150, column: 2, scope: !6472)
!6589 = !DILocation(line: 2151, column: 1, scope: !6436)
!6590 = distinct !DISubprogram(name: "statvis_calc_sharp", scope: !1, file: !1, line: 2153, type: !6591, scopeLine: 2160, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1952)
!6591 = !DISubroutineType(types: !6592)
!6592 = !{null, !1706, !1698, !241, !241, !1881}
!6593 = !DILocalVariable(name: "em", arg: 1, scope: !6590, file: !1, line: 2154, type: !1706)
!6594 = !DILocation(line: 2154, column: 21, scope: !6590)
!6595 = !DILocalVariable(name: "vertexCos", arg: 2, scope: !6590, file: !1, line: 2155, type: !1698)
!6596 = !DILocation(line: 2155, column: 23, scope: !6590)
!6597 = !DILocalVariable(name: "min", arg: 3, scope: !6590, file: !1, line: 2157, type: !241)
!6598 = !DILocation(line: 2157, column: 21, scope: !6590)
!6599 = !DILocalVariable(name: "max", arg: 4, scope: !6590, file: !1, line: 2157, type: !241)
!6600 = !DILocation(line: 2157, column: 38, scope: !6590)
!6601 = !DILocalVariable(name: "r_vert_colors", arg: 5, scope: !6590, file: !1, line: 2159, type: !1881)
!6602 = !DILocation(line: 2159, column: 25, scope: !6590)
!6603 = !DILocalVariable(name: "vert_angles", scope: !6590, file: !1, line: 2161, type: !464)
!6604 = !DILocation(line: 2161, column: 9, scope: !6590)
!6605 = !DILocation(line: 2161, column: 32, scope: !6590)
!6606 = !DILocation(line: 2161, column: 23, scope: !6590)
!6607 = !DILocalVariable(name: "iter", scope: !6590, file: !1, line: 2162, type: !2184)
!6608 = !DILocation(line: 2162, column: 9, scope: !6590)
!6609 = !DILocalVariable(name: "bm", scope: !6590, file: !1, line: 2163, type: !1847)
!6610 = !DILocation(line: 2163, column: 9, scope: !6590)
!6611 = !DILocation(line: 2163, column: 14, scope: !6590)
!6612 = !DILocation(line: 2163, column: 18, scope: !6590)
!6613 = !DILocalVariable(name: "e", scope: !6590, file: !1, line: 2164, type: !1791)
!6614 = !DILocation(line: 2164, column: 10, scope: !6590)
!6615 = !DILocalVariable(name: "minmax_irange", scope: !6590, file: !1, line: 2166, type: !241)
!6616 = !DILocation(line: 2166, column: 14, scope: !6590)
!6617 = !DILocation(line: 2166, column: 38, scope: !6590)
!6618 = !DILocation(line: 2166, column: 44, scope: !6590)
!6619 = !DILocation(line: 2166, column: 42, scope: !6590)
!6620 = !DILocation(line: 2166, column: 35, scope: !6590)
!6621 = !DILocalVariable(name: "i", scope: !6590, file: !1, line: 2167, type: !168)
!6622 = !DILocation(line: 2167, column: 6, scope: !6590)
!6623 = !DILocalVariable(name: "col_fallback", scope: !6590, file: !1, line: 2170, type: !5981)
!6624 = !DILocation(line: 2170, column: 13, scope: !6590)
!6625 = !DILocation(line: 2172, column: 8, scope: !6590)
!6626 = !DILocation(line: 2174, column: 13, scope: !6590)
!6627 = !DILocation(line: 2174, column: 26, scope: !6590)
!6628 = !DILocation(line: 2174, column: 30, scope: !6590)
!6629 = !DILocation(line: 2174, column: 34, scope: !6590)
!6630 = !DILocation(line: 2174, column: 2, scope: !6590)
!6631 = !DILocation(line: 2177, column: 2, scope: !6632)
!6632 = distinct !DILexicalBlock(scope: !6590, file: !1, line: 2177, column: 2)
!6633 = !DILocation(line: 2177, column: 2, scope: !6634)
!6634 = distinct !DILexicalBlock(scope: !6632, file: !1, line: 2177, column: 2)
!6635 = !DILocalVariable(name: "angle", scope: !6636, file: !1, line: 2178, type: !224)
!6636 = distinct !DILexicalBlock(scope: !6634, file: !1, line: 2177, column: 48)
!6637 = !DILocation(line: 2178, column: 9, scope: !6636)
!6638 = !DILocation(line: 2178, column: 48, scope: !6636)
!6639 = !DILocation(line: 2178, column: 17, scope: !6636)
!6640 = !DILocalVariable(name: "col1", scope: !6636, file: !1, line: 2179, type: !464)
!6641 = !DILocation(line: 2179, column: 10, scope: !6636)
!6642 = !DILocation(line: 2179, column: 18, scope: !6636)
!6643 = !DILocation(line: 2179, column: 30, scope: !6636)
!6644 = !DILocalVariable(name: "col2", scope: !6636, file: !1, line: 2180, type: !464)
!6645 = !DILocation(line: 2180, column: 10, scope: !6636)
!6646 = !DILocation(line: 2180, column: 18, scope: !6636)
!6647 = !DILocation(line: 2180, column: 30, scope: !6636)
!6648 = !DILocation(line: 2181, column: 19, scope: !6636)
!6649 = !DILocation(line: 2181, column: 18, scope: !6636)
!6650 = !DILocation(line: 2181, column: 25, scope: !6636)
!6651 = !DILocation(line: 2181, column: 11, scope: !6636)
!6652 = !DILocation(line: 2181, column: 4, scope: !6636)
!6653 = !DILocation(line: 2181, column: 9, scope: !6636)
!6654 = !DILocation(line: 2182, column: 19, scope: !6636)
!6655 = !DILocation(line: 2182, column: 18, scope: !6636)
!6656 = !DILocation(line: 2182, column: 25, scope: !6636)
!6657 = !DILocation(line: 2182, column: 11, scope: !6636)
!6658 = !DILocation(line: 2182, column: 4, scope: !6636)
!6659 = !DILocation(line: 2182, column: 9, scope: !6636)
!6660 = !DILocation(line: 2183, column: 2, scope: !6636)
!6661 = distinct !{!6661, !6631, !6662}
!6662 = !DILocation(line: 2183, column: 2, scope: !6632)
!6663 = !DILocation(line: 2186, column: 9, scope: !6664)
!6664 = distinct !DILexicalBlock(scope: !6590, file: !1, line: 2186, column: 2)
!6665 = !DILocation(line: 2186, column: 7, scope: !6664)
!6666 = !DILocation(line: 2186, column: 14, scope: !6667)
!6667 = distinct !DILexicalBlock(scope: !6664, file: !1, line: 2186, column: 2)
!6668 = !DILocation(line: 2186, column: 18, scope: !6667)
!6669 = !DILocation(line: 2186, column: 22, scope: !6667)
!6670 = !DILocation(line: 2186, column: 16, scope: !6667)
!6671 = !DILocation(line: 2186, column: 2, scope: !6664)
!6672 = !DILocalVariable(name: "fac", scope: !6673, file: !1, line: 2187, type: !224)
!6673 = distinct !DILexicalBlock(scope: !6667, file: !1, line: 2186, column: 36)
!6674 = !DILocation(line: 2187, column: 9, scope: !6673)
!6675 = !DILocation(line: 2187, column: 15, scope: !6673)
!6676 = !DILocation(line: 2187, column: 27, scope: !6673)
!6677 = !DILocation(line: 2190, column: 7, scope: !6678)
!6678 = distinct !DILexicalBlock(scope: !6673, file: !1, line: 2190, column: 7)
!6679 = !DILocation(line: 2190, column: 13, scope: !6678)
!6680 = !DILocation(line: 2190, column: 11, scope: !6678)
!6681 = !DILocation(line: 2190, column: 7, scope: !6673)
!6682 = !DILocalVariable(name: "fcol", scope: !6683, file: !1, line: 2191, type: !260)
!6683 = distinct !DILexicalBlock(scope: !6678, file: !1, line: 2190, column: 18)
!6684 = !DILocation(line: 2191, column: 10, scope: !6683)
!6685 = !DILocation(line: 2192, column: 11, scope: !6683)
!6686 = !DILocation(line: 2192, column: 17, scope: !6683)
!6687 = !DILocation(line: 2192, column: 15, scope: !6683)
!6688 = !DILocation(line: 2192, column: 24, scope: !6683)
!6689 = !DILocation(line: 2192, column: 22, scope: !6683)
!6690 = !DILocation(line: 2192, column: 8, scope: !6683)
!6691 = !DILocation(line: 2193, column: 4, scope: !6692)
!6692 = distinct !DILexicalBlock(scope: !6693, file: !1, line: 2193, column: 4)
!6693 = distinct !DILexicalBlock(scope: !6683, file: !1, line: 2193, column: 4)
!6694 = !DILocation(line: 2193, column: 4, scope: !6693)
!6695 = !DILocation(line: 2193, column: 4, scope: !6696)
!6696 = distinct !DILexicalBlock(scope: !6692, file: !1, line: 2193, column: 4)
!6697 = !DILocation(line: 2194, column: 18, scope: !6683)
!6698 = !DILocation(line: 2194, column: 24, scope: !6683)
!6699 = !DILocation(line: 2194, column: 4, scope: !6683)
!6700 = !DILocation(line: 2195, column: 23, scope: !6683)
!6701 = !DILocation(line: 2195, column: 37, scope: !6683)
!6702 = !DILocation(line: 2195, column: 41, scope: !6683)
!6703 = !DILocation(line: 2195, column: 4, scope: !6683)
!6704 = !DILocation(line: 2196, column: 3, scope: !6683)
!6705 = !DILocation(line: 2198, column: 28, scope: !6706)
!6706 = distinct !DILexicalBlock(scope: !6678, file: !1, line: 2197, column: 8)
!6707 = !DILocation(line: 2198, column: 42, scope: !6706)
!6708 = !DILocation(line: 2198, column: 60, scope: !6706)
!6709 = !DILocation(line: 2198, column: 4, scope: !6706)
!6710 = !DILocation(line: 2200, column: 2, scope: !6673)
!6711 = !DILocation(line: 2186, column: 32, scope: !6667)
!6712 = !DILocation(line: 2186, column: 2, scope: !6667)
!6713 = distinct !{!6713, !6671, !6714}
!6714 = !DILocation(line: 2200, column: 2, scope: !6664)
!6715 = !DILocation(line: 2201, column: 1, scope: !6590)
!6716 = distinct !DISubprogram(name: "BKE_editmesh_vertexCos_get", scope: !1, file: !1, line: 2291, type: !6717, scopeLine: 2292, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !1952)
!6717 = !DISubroutineType(types: !6718)
!6718 = !{!473, !1706, !6719, !408}
!6719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6720, size: 64)
!6720 = !DIDerivedType(tag: DW_TAG_typedef, name: "Scene", file: !552, line: 1299, baseType: !807)
!6721 = !DILocalVariable(name: "em", arg: 1, scope: !6716, file: !1, line: 2291, type: !1706)
!6722 = !DILocation(line: 2291, column: 48, scope: !6716)
!6723 = !DILocalVariable(name: "scene", arg: 2, scope: !6716, file: !1, line: 2291, type: !6719)
!6724 = !DILocation(line: 2291, column: 59, scope: !6716)
!6725 = !DILocalVariable(name: "r_numVerts", arg: 3, scope: !6716, file: !1, line: 2291, type: !408)
!6726 = !DILocation(line: 2291, column: 71, scope: !6716)
!6727 = !DILocalVariable(name: "cage", scope: !6716, file: !1, line: 2293, type: !154)
!6728 = !DILocation(line: 2293, column: 15, scope: !6716)
!6729 = !DILocalVariable(name: "final", scope: !6716, file: !1, line: 2293, type: !154)
!6730 = !DILocation(line: 2293, column: 22, scope: !6716)
!6731 = !DILocalVariable(name: "visit_bitmap", scope: !6716, file: !1, line: 2294, type: !1893)
!6732 = !DILocation(line: 2294, column: 14, scope: !6716)
!6733 = !DILocalVariable(name: "data", scope: !6716, file: !1, line: 2295, type: !6734)
!6734 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CageUserData", file: !1, line: 2274, size: 192, elements: !6735)
!6735 = !{!6736, !6737, !6738}
!6736 = !DIDerivedType(tag: DW_TAG_member, name: "totvert", scope: !6734, file: !1, line: 2275, baseType: !168, size: 32)
!6737 = !DIDerivedType(tag: DW_TAG_member, name: "cos_cage", scope: !6734, file: !1, line: 2276, baseType: !473, size: 64, offset: 64)
!6738 = !DIDerivedType(tag: DW_TAG_member, name: "visit_bitmap", scope: !6734, file: !1, line: 2277, baseType: !1893, size: 64, offset: 128)
!6739 = !DILocation(line: 2295, column: 22, scope: !6716)
!6740 = !DILocalVariable(name: "cos_cage", scope: !6716, file: !1, line: 2296, type: !473)
!6741 = !DILocation(line: 2296, column: 10, scope: !6716)
!6742 = !DILocation(line: 2298, column: 46, scope: !6716)
!6743 = !DILocation(line: 2298, column: 53, scope: !6716)
!6744 = !DILocation(line: 2298, column: 57, scope: !6716)
!6745 = !DILocation(line: 2298, column: 61, scope: !6716)
!6746 = !DILocation(line: 2298, column: 73, scope: !6716)
!6747 = !DILocation(line: 2298, column: 9, scope: !6716)
!6748 = !DILocation(line: 2298, column: 7, scope: !6716)
!6749 = !DILocation(line: 2299, column: 13, scope: !6716)
!6750 = !DILocation(line: 2299, column: 45, scope: !6716)
!6751 = !DILocation(line: 2299, column: 49, scope: !6716)
!6752 = !DILocation(line: 2299, column: 53, scope: !6716)
!6753 = !DILocation(line: 2299, column: 43, scope: !6716)
!6754 = !DILocation(line: 2299, column: 11, scope: !6716)
!6755 = !DILocation(line: 2303, column: 17, scope: !6716)
!6756 = !DILocation(line: 2303, column: 15, scope: !6716)
!6757 = !DILocation(line: 2305, column: 17, scope: !6716)
!6758 = !DILocation(line: 2305, column: 21, scope: !6716)
!6759 = !DILocation(line: 2305, column: 25, scope: !6716)
!6760 = !DILocation(line: 2305, column: 7, scope: !6716)
!6761 = !DILocation(line: 2305, column: 15, scope: !6716)
!6762 = !DILocation(line: 2306, column: 18, scope: !6716)
!6763 = !DILocation(line: 2306, column: 7, scope: !6716)
!6764 = !DILocation(line: 2306, column: 16, scope: !6716)
!6765 = !DILocation(line: 2307, column: 22, scope: !6716)
!6766 = !DILocation(line: 2307, column: 7, scope: !6716)
!6767 = !DILocation(line: 2307, column: 20, scope: !6716)
!6768 = !DILocation(line: 2309, column: 2, scope: !6716)
!6769 = !DILocation(line: 2309, column: 8, scope: !6716)
!6770 = !DILocation(line: 2309, column: 26, scope: !6716)
!6771 = !DILocation(line: 2309, column: 60, scope: !6716)
!6772 = !DILocation(line: 2311, column: 2, scope: !6716)
!6773 = !DILocation(line: 2311, column: 12, scope: !6716)
!6774 = !DILocation(line: 2313, column: 6, scope: !6775)
!6775 = distinct !DILexicalBlock(scope: !6716, file: !1, line: 2313, column: 6)
!6776 = !DILocation(line: 2313, column: 6, scope: !6716)
!6777 = !DILocation(line: 2314, column: 17, scope: !6778)
!6778 = distinct !DILexicalBlock(scope: !6775, file: !1, line: 2313, column: 18)
!6779 = !DILocation(line: 2314, column: 21, scope: !6778)
!6780 = !DILocation(line: 2314, column: 25, scope: !6778)
!6781 = !DILocation(line: 2314, column: 4, scope: !6778)
!6782 = !DILocation(line: 2314, column: 15, scope: !6778)
!6783 = !DILocation(line: 2315, column: 2, scope: !6778)
!6784 = !DILocation(line: 2317, column: 9, scope: !6716)
!6785 = !DILocation(line: 2317, column: 2, scope: !6716)
!6786 = distinct !DISubprogram(name: "cage_mapped_verts_callback", scope: !1, file: !1, line: 2280, type: !436, scopeLine: 2282, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1952)
!6787 = !DILocalVariable(name: "userData", arg: 1, scope: !6786, file: !1, line: 2280, type: !182)
!6788 = !DILocation(line: 2280, column: 46, scope: !6786)
!6789 = !DILocalVariable(name: "index", arg: 2, scope: !6786, file: !1, line: 2280, type: !168)
!6790 = !DILocation(line: 2280, column: 60, scope: !6786)
!6791 = !DILocalVariable(name: "co", arg: 3, scope: !6786, file: !1, line: 2280, type: !438)
!6792 = !DILocation(line: 2280, column: 79, scope: !6786)
!6793 = !DILocalVariable(name: "UNUSED_no_f", arg: 4, scope: !6786, file: !1, line: 2281, type: !438)
!6794 = !DILocation(line: 2281, column: 52, scope: !6786)
!6795 = !DILocalVariable(name: "UNUSED_no_s", arg: 5, scope: !6786, file: !1, line: 2281, type: !439)
!6796 = !DILocation(line: 2281, column: 81, scope: !6786)
!6797 = !DILocalVariable(name: "data", scope: !6786, file: !1, line: 2283, type: !6798)
!6798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6734, size: 64)
!6799 = !DILocation(line: 2283, column: 23, scope: !6786)
!6800 = !DILocation(line: 2283, column: 30, scope: !6786)
!6801 = !DILocation(line: 2285, column: 7, scope: !6802)
!6802 = distinct !DILexicalBlock(scope: !6786, file: !1, line: 2285, column: 6)
!6803 = !DILocation(line: 2285, column: 13, scope: !6802)
!6804 = !DILocation(line: 2285, column: 18, scope: !6802)
!6805 = !DILocation(line: 2285, column: 21, scope: !6802)
!6806 = !DILocation(line: 2285, column: 29, scope: !6802)
!6807 = !DILocation(line: 2285, column: 35, scope: !6802)
!6808 = !DILocation(line: 2285, column: 27, scope: !6802)
!6809 = !DILocation(line: 2285, column: 44, scope: !6802)
!6810 = !DILocation(line: 2285, column: 49, scope: !6802)
!6811 = !DILocation(line: 2285, column: 6, scope: !6786)
!6812 = !DILocation(line: 2286, column: 3, scope: !6813)
!6813 = distinct !DILexicalBlock(scope: !6802, file: !1, line: 2285, column: 94)
!6814 = !DILocation(line: 2287, column: 14, scope: !6813)
!6815 = !DILocation(line: 2287, column: 20, scope: !6813)
!6816 = !DILocation(line: 2287, column: 29, scope: !6813)
!6817 = !DILocation(line: 2287, column: 37, scope: !6813)
!6818 = !DILocation(line: 2287, column: 3, scope: !6813)
!6819 = !DILocation(line: 2288, column: 2, scope: !6813)
!6820 = !DILocation(line: 2289, column: 1, scope: !6786)
!6821 = distinct !DISubprogram(name: "copy_v3_v3", scope: !6822, file: !6822, line: 64, type: !6823, scopeLine: 65, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1952)
!6822 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_vector_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!6823 = !DISubroutineType(types: !6824)
!6824 = !{null, !464, !438}
!6825 = !DILocalVariable(name: "r", arg: 1, scope: !6821, file: !6822, line: 64, type: !464)
!6826 = !DILocation(line: 64, column: 31, scope: !6821)
!6827 = !DILocalVariable(name: "a", arg: 2, scope: !6821, file: !6822, line: 64, type: !438)
!6828 = !DILocation(line: 64, column: 49, scope: !6821)
!6829 = !DILocation(line: 66, column: 9, scope: !6821)
!6830 = !DILocation(line: 66, column: 2, scope: !6821)
!6831 = !DILocation(line: 66, column: 7, scope: !6821)
!6832 = !DILocation(line: 67, column: 9, scope: !6821)
!6833 = !DILocation(line: 67, column: 2, scope: !6821)
!6834 = !DILocation(line: 67, column: 7, scope: !6821)
!6835 = !DILocation(line: 68, column: 9, scope: !6821)
!6836 = !DILocation(line: 68, column: 2, scope: !6821)
!6837 = !DILocation(line: 68, column: 7, scope: !6821)
!6838 = !DILocation(line: 69, column: 1, scope: !6821)
!6839 = distinct !DISubprogram(name: "zero_v3", scope: !6822, file: !6822, line: 43, type: !6840, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1952)
!6840 = !DISubroutineType(types: !6841)
!6841 = !{null, !464}
!6842 = !DILocalVariable(name: "r", arg: 1, scope: !6839, file: !6822, line: 43, type: !464)
!6843 = !DILocation(line: 43, column: 28, scope: !6839)
!6844 = !DILocation(line: 45, column: 2, scope: !6839)
!6845 = !DILocation(line: 45, column: 7, scope: !6839)
!6846 = !DILocation(line: 46, column: 2, scope: !6839)
!6847 = !DILocation(line: 46, column: 7, scope: !6839)
!6848 = !DILocation(line: 47, column: 2, scope: !6839)
!6849 = !DILocation(line: 47, column: 7, scope: !6839)
!6850 = !DILocation(line: 48, column: 1, scope: !6839)
!6851 = distinct !DISubprogram(name: "bmvert_to_mvert", scope: !1, file: !1, line: 1255, type: !6852, scopeLine: 1256, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1952)
!6852 = !DISubroutineType(types: !6853)
!6853 = !{null, !1847, !1730, !2568}
!6854 = !DILocalVariable(name: "bm", arg: 1, scope: !6851, file: !1, line: 1255, type: !1847)
!6855 = !DILocation(line: 1255, column: 36, scope: !6851)
!6856 = !DILocalVariable(name: "ev", arg: 2, scope: !6851, file: !1, line: 1255, type: !1730)
!6857 = !DILocation(line: 1255, column: 48, scope: !6851)
!6858 = !DILocalVariable(name: "r_vert", arg: 3, scope: !6851, file: !1, line: 1255, type: !2568)
!6859 = !DILocation(line: 1255, column: 59, scope: !6851)
!6860 = !DILocalVariable(name: "f", scope: !6851, file: !1, line: 1257, type: !438)
!6861 = !DILocation(line: 1257, column: 15, scope: !6851)
!6862 = !DILocation(line: 1259, column: 13, scope: !6851)
!6863 = !DILocation(line: 1259, column: 21, scope: !6851)
!6864 = !DILocation(line: 1259, column: 25, scope: !6851)
!6865 = !DILocation(line: 1259, column: 29, scope: !6851)
!6866 = !DILocation(line: 1259, column: 2, scope: !6851)
!6867 = !DILocation(line: 1261, column: 27, scope: !6851)
!6868 = !DILocation(line: 1261, column: 35, scope: !6851)
!6869 = !DILocation(line: 1261, column: 39, scope: !6851)
!6870 = !DILocation(line: 1261, column: 43, scope: !6851)
!6871 = !DILocation(line: 1261, column: 2, scope: !6851)
!6872 = !DILocation(line: 1263, column: 39, scope: !6851)
!6873 = !DILocation(line: 1263, column: 17, scope: !6851)
!6874 = !DILocation(line: 1263, column: 2, scope: !6851)
!6875 = !DILocation(line: 1263, column: 10, scope: !6851)
!6876 = !DILocation(line: 1263, column: 15, scope: !6851)
!6877 = !DILocation(line: 1265, column: 33, scope: !6878)
!6878 = distinct !DILexicalBlock(scope: !6851, file: !1, line: 1265, column: 6)
!6879 = !DILocation(line: 1265, column: 37, scope: !6878)
!6880 = !DILocation(line: 1265, column: 44, scope: !6878)
!6881 = !DILocation(line: 1265, column: 48, scope: !6878)
!6882 = !DILocation(line: 1265, column: 53, scope: !6878)
!6883 = !DILocation(line: 1265, column: 11, scope: !6878)
!6884 = !DILocation(line: 1265, column: 9, scope: !6878)
!6885 = !DILocation(line: 1265, column: 6, scope: !6851)
!6886 = !DILocation(line: 1266, column: 39, scope: !6887)
!6887 = distinct !DILexicalBlock(scope: !6878, file: !1, line: 1265, column: 73)
!6888 = !DILocation(line: 1266, column: 38, scope: !6887)
!6889 = !DILocation(line: 1266, column: 42, scope: !6887)
!6890 = !DILocation(line: 1266, column: 21, scope: !6887)
!6891 = !DILocation(line: 1266, column: 3, scope: !6887)
!6892 = !DILocation(line: 1266, column: 11, scope: !6887)
!6893 = !DILocation(line: 1266, column: 19, scope: !6887)
!6894 = !DILocation(line: 1267, column: 2, scope: !6887)
!6895 = !DILocation(line: 1268, column: 1, scope: !6851)
!6896 = distinct !DISubprogram(name: "normal_float_to_short_v3", scope: !6822, file: !6822, line: 842, type: !6897, scopeLine: 843, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1952)
!6897 = !DISubroutineType(types: !6898)
!6898 = !{null, !6899, !438}
!6899 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !265, size: 64)
!6900 = !DILocalVariable(name: "out", arg: 1, scope: !6896, file: !6822, line: 842, type: !6899)
!6901 = !DILocation(line: 842, column: 45, scope: !6896)
!6902 = !DILocalVariable(name: "in", arg: 2, scope: !6896, file: !6822, line: 842, type: !438)
!6903 = !DILocation(line: 842, column: 65, scope: !6896)
!6904 = !DILocation(line: 844, column: 20, scope: !6896)
!6905 = !DILocation(line: 844, column: 26, scope: !6896)
!6906 = !DILocation(line: 844, column: 11, scope: !6896)
!6907 = !DILocation(line: 844, column: 2, scope: !6896)
!6908 = !DILocation(line: 844, column: 9, scope: !6896)
!6909 = !DILocation(line: 845, column: 20, scope: !6896)
!6910 = !DILocation(line: 845, column: 26, scope: !6896)
!6911 = !DILocation(line: 845, column: 11, scope: !6896)
!6912 = !DILocation(line: 845, column: 2, scope: !6896)
!6913 = !DILocation(line: 845, column: 9, scope: !6896)
!6914 = !DILocation(line: 846, column: 20, scope: !6896)
!6915 = !DILocation(line: 846, column: 26, scope: !6896)
!6916 = !DILocation(line: 846, column: 11, scope: !6896)
!6917 = !DILocation(line: 846, column: 2, scope: !6896)
!6918 = !DILocation(line: 846, column: 9, scope: !6896)
!6919 = !DILocation(line: 847, column: 1, scope: !6896)
!6920 = distinct !DISubprogram(name: "emDM_ensureVertNormals", scope: !1, file: !1, line: 85, type: !6374, scopeLine: 86, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1952)
!6921 = !DILocalVariable(name: "bmdm", arg: 1, scope: !6920, file: !1, line: 85, type: !1700)
!6922 = !DILocation(line: 85, column: 54, scope: !6920)
!6923 = !DILocation(line: 87, column: 6, scope: !6924)
!6924 = distinct !DILexicalBlock(scope: !6920, file: !1, line: 87, column: 6)
!6925 = !DILocation(line: 87, column: 12, scope: !6924)
!6926 = !DILocation(line: 87, column: 22, scope: !6924)
!6927 = !DILocation(line: 87, column: 26, scope: !6924)
!6928 = !DILocation(line: 87, column: 32, scope: !6924)
!6929 = !DILocation(line: 87, column: 42, scope: !6924)
!6930 = !DILocation(line: 87, column: 6, scope: !6920)
!6931 = !DILocalVariable(name: "bm", scope: !6932, file: !1, line: 89, type: !1847)
!6932 = distinct !DILexicalBlock(scope: !6924, file: !1, line: 87, column: 52)
!6933 = !DILocation(line: 89, column: 10, scope: !6932)
!6934 = !DILocation(line: 89, column: 15, scope: !6932)
!6935 = !DILocation(line: 89, column: 21, scope: !6932)
!6936 = !DILocation(line: 89, column: 25, scope: !6932)
!6937 = !DILocalVariable(name: "vertexCos", scope: !6932, file: !1, line: 90, type: !1698)
!6938 = !DILocation(line: 90, column: 17, scope: !6932)
!6939 = !DILocalVariable(name: "polyNos", scope: !6932, file: !1, line: 90, type: !1698)
!6940 = !DILocation(line: 90, column: 34, scope: !6932)
!6941 = !DILocalVariable(name: "vertexNos", scope: !6932, file: !1, line: 91, type: !473)
!6942 = !DILocation(line: 91, column: 11, scope: !6932)
!6943 = !DILocation(line: 94, column: 26, scope: !6932)
!6944 = !DILocation(line: 94, column: 3, scope: !6932)
!6945 = !DILocation(line: 96, column: 29, scope: !6932)
!6946 = !DILocation(line: 96, column: 3, scope: !6932)
!6947 = !DILocation(line: 98, column: 13, scope: !6932)
!6948 = !DILocation(line: 98, column: 19, scope: !6932)
!6949 = !DILocation(line: 98, column: 11, scope: !6932)
!6950 = !DILocation(line: 99, column: 15, scope: !6932)
!6951 = !DILocation(line: 99, column: 21, scope: !6932)
!6952 = !DILocation(line: 99, column: 13, scope: !6932)
!6953 = !DILocation(line: 100, column: 15, scope: !6932)
!6954 = !DILocation(line: 100, column: 48, scope: !6932)
!6955 = !DILocation(line: 100, column: 52, scope: !6932)
!6956 = !DILocation(line: 100, column: 46, scope: !6932)
!6957 = !DILocation(line: 100, column: 13, scope: !6932)
!6958 = !DILocation(line: 102, column: 29, scope: !6932)
!6959 = !DILocation(line: 102, column: 33, scope: !6932)
!6960 = !DILocation(line: 102, column: 42, scope: !6932)
!6961 = !DILocation(line: 102, column: 53, scope: !6932)
!6962 = !DILocation(line: 102, column: 3, scope: !6932)
!6963 = !DILocation(line: 104, column: 41, scope: !6932)
!6964 = !DILocation(line: 104, column: 3, scope: !6932)
!6965 = !DILocation(line: 104, column: 9, scope: !6932)
!6966 = !DILocation(line: 104, column: 19, scope: !6932)
!6967 = !DILocation(line: 105, column: 2, scope: !6932)
!6968 = !DILocation(line: 106, column: 1, scope: !6920)
!6969 = distinct !DISubprogram(name: "_bm_elem_index_get", scope: !6970, file: !6970, line: 119, type: !6971, scopeLine: 120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1952)
!6970 = !DIFile(filename: "blender/source/blender/bmesh/intern/bmesh_inline.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!6971 = !DISubroutineType(types: !6972)
!6972 = !{!168, !6973}
!6973 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6974, size: 64)
!6974 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1735)
!6975 = !DILocalVariable(name: "head", arg: 1, scope: !6969, file: !6970, line: 119, type: !6973)
!6976 = !DILocation(line: 119, column: 51, scope: !6969)
!6977 = !DILocation(line: 121, column: 9, scope: !6969)
!6978 = !DILocation(line: 121, column: 15, scope: !6969)
!6979 = !DILocation(line: 121, column: 2, scope: !6969)
!6980 = distinct !DISubprogram(name: "copy_v2_v2", scope: !6822, file: !6822, line: 58, type: !6823, scopeLine: 59, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1952)
!6981 = !DILocalVariable(name: "r", arg: 1, scope: !6980, file: !6822, line: 58, type: !464)
!6982 = !DILocation(line: 58, column: 31, scope: !6980)
!6983 = !DILocalVariable(name: "a", arg: 2, scope: !6980, file: !6822, line: 58, type: !438)
!6984 = !DILocation(line: 58, column: 49, scope: !6980)
!6985 = !DILocation(line: 60, column: 9, scope: !6980)
!6986 = !DILocation(line: 60, column: 2, scope: !6980)
!6987 = !DILocation(line: 60, column: 7, scope: !6980)
!6988 = !DILocation(line: 61, column: 9, scope: !6980)
!6989 = !DILocation(line: 61, column: 2, scope: !6980)
!6990 = !DILocation(line: 61, column: 7, scope: !6980)
!6991 = !DILocation(line: 62, column: 1, scope: !6980)
!6992 = distinct !DISubprogram(name: "emDM_ensurePolyCenters", scope: !1, file: !1, line: 135, type: !6374, scopeLine: 136, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1952)
!6993 = !DILocalVariable(name: "bmdm", arg: 1, scope: !6992, file: !1, line: 135, type: !1700)
!6994 = !DILocation(line: 135, column: 54, scope: !6992)
!6995 = !DILocation(line: 137, column: 6, scope: !6996)
!6996 = distinct !DILexicalBlock(scope: !6992, file: !1, line: 137, column: 6)
!6997 = !DILocation(line: 137, column: 12, scope: !6996)
!6998 = !DILocation(line: 137, column: 20, scope: !6996)
!6999 = !DILocation(line: 137, column: 6, scope: !6992)
!7000 = !DILocalVariable(name: "bm", scope: !7001, file: !1, line: 138, type: !1847)
!7001 = distinct !DILexicalBlock(scope: !6996, file: !1, line: 137, column: 29)
!7002 = !DILocation(line: 138, column: 10, scope: !7001)
!7003 = !DILocation(line: 138, column: 15, scope: !7001)
!7004 = !DILocation(line: 138, column: 21, scope: !7001)
!7005 = !DILocation(line: 138, column: 25, scope: !7001)
!7006 = !DILocalVariable(name: "polyCos", scope: !7001, file: !1, line: 139, type: !473)
!7007 = !DILocation(line: 139, column: 11, scope: !7001)
!7008 = !DILocalVariable(name: "efa", scope: !7001, file: !1, line: 141, type: !1795)
!7009 = !DILocation(line: 141, column: 11, scope: !7001)
!7010 = !DILocalVariable(name: "fiter", scope: !7001, file: !1, line: 142, type: !2184)
!7011 = !DILocation(line: 142, column: 10, scope: !7001)
!7012 = !DILocalVariable(name: "i", scope: !7001, file: !1, line: 143, type: !168)
!7013 = !DILocation(line: 143, column: 7, scope: !7001)
!7014 = !DILocation(line: 145, column: 13, scope: !7001)
!7015 = !DILocation(line: 145, column: 44, scope: !7001)
!7016 = !DILocation(line: 145, column: 48, scope: !7001)
!7017 = !DILocation(line: 145, column: 42, scope: !7001)
!7018 = !DILocation(line: 145, column: 11, scope: !7001)
!7019 = !DILocation(line: 147, column: 7, scope: !7020)
!7020 = distinct !DILexicalBlock(scope: !7001, file: !1, line: 147, column: 7)
!7021 = !DILocation(line: 147, column: 13, scope: !7020)
!7022 = !DILocation(line: 147, column: 7, scope: !7001)
!7023 = !DILocalVariable(name: "vertexCos", scope: !7024, file: !1, line: 148, type: !1698)
!7024 = distinct !DILexicalBlock(scope: !7020, file: !1, line: 147, column: 24)
!7025 = !DILocation(line: 148, column: 18, scope: !7024)
!7026 = !DILocation(line: 149, column: 16, scope: !7024)
!7027 = !DILocation(line: 149, column: 22, scope: !7024)
!7028 = !DILocation(line: 149, column: 14, scope: !7024)
!7029 = !DILocation(line: 151, column: 4, scope: !7030)
!7030 = distinct !DILexicalBlock(scope: !7024, file: !1, line: 151, column: 4)
!7031 = !DILocation(line: 151, column: 4, scope: !7032)
!7032 = distinct !DILexicalBlock(scope: !7030, file: !1, line: 151, column: 4)
!7033 = !DILocation(line: 152, column: 35, scope: !7034)
!7034 = distinct !DILexicalBlock(scope: !7032, file: !1, line: 151, column: 62)
!7035 = !DILocation(line: 152, column: 39, scope: !7034)
!7036 = !DILocation(line: 152, column: 44, scope: !7034)
!7037 = !DILocation(line: 152, column: 52, scope: !7034)
!7038 = !DILocation(line: 152, column: 56, scope: !7034)
!7039 = !DILocation(line: 152, column: 5, scope: !7034)
!7040 = !DILocation(line: 153, column: 4, scope: !7034)
!7041 = distinct !{!7041, !7029, !7042}
!7042 = !DILocation(line: 153, column: 4, scope: !7030)
!7043 = !DILocation(line: 154, column: 3, scope: !7024)
!7044 = !DILocation(line: 156, column: 4, scope: !7045)
!7045 = distinct !DILexicalBlock(scope: !7046, file: !1, line: 156, column: 4)
!7046 = distinct !DILexicalBlock(scope: !7020, file: !1, line: 155, column: 8)
!7047 = !DILocation(line: 156, column: 4, scope: !7048)
!7048 = distinct !DILexicalBlock(scope: !7045, file: !1, line: 156, column: 4)
!7049 = !DILocation(line: 157, column: 30, scope: !7050)
!7050 = distinct !DILexicalBlock(scope: !7048, file: !1, line: 156, column: 62)
!7051 = !DILocation(line: 157, column: 35, scope: !7050)
!7052 = !DILocation(line: 157, column: 43, scope: !7050)
!7053 = !DILocation(line: 157, column: 5, scope: !7050)
!7054 = !DILocation(line: 158, column: 4, scope: !7050)
!7055 = distinct !{!7055, !7044, !7056}
!7056 = !DILocation(line: 158, column: 4, scope: !7045)
!7057 = !DILocation(line: 161, column: 39, scope: !7001)
!7058 = !DILocation(line: 161, column: 3, scope: !7001)
!7059 = !DILocation(line: 161, column: 9, scope: !7001)
!7060 = !DILocation(line: 161, column: 17, scope: !7001)
!7061 = !DILocation(line: 162, column: 2, scope: !7001)
!7062 = !DILocation(line: 163, column: 1, scope: !6992)
!7063 = distinct !DISubprogram(name: "_bm_elem_flag_test", scope: !6970, file: !6970, line: 42, type: !7064, scopeLine: 43, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1952)
!7064 = !DISubroutineType(types: !7065)
!7065 = !{!178, !6973, !1814}
!7066 = !DILocalVariable(name: "head", arg: 1, scope: !7063, file: !6970, line: 42, type: !6973)
!7067 = !DILocation(line: 42, column: 52, scope: !7063)
!7068 = !DILocalVariable(name: "hflag", arg: 2, scope: !7063, file: !6970, line: 42, type: !1814)
!7069 = !DILocation(line: 42, column: 69, scope: !7063)
!7070 = !DILocation(line: 44, column: 9, scope: !7063)
!7071 = !DILocation(line: 44, column: 15, scope: !7063)
!7072 = !DILocation(line: 44, column: 23, scope: !7063)
!7073 = !DILocation(line: 44, column: 21, scope: !7063)
!7074 = !DILocation(line: 44, column: 2, scope: !7063)
!7075 = distinct !DISubprogram(name: "bmdm_get_tri_colpreview", scope: !1, file: !1, line: 711, type: !7076, scopeLine: 712, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1952)
!7076 = !DISubroutineType(types: !7077)
!7077 = !{null, !2848, !7078, !1881}
!7078 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1914, size: 64)
!7079 = !DILocalVariable(name: "ls", arg: 1, scope: !7075, file: !1, line: 711, type: !2848)
!7080 = !DILocation(line: 711, column: 45, scope: !7075)
!7081 = !DILocalVariable(name: "lcol", arg: 2, scope: !7075, file: !1, line: 711, type: !7078)
!7082 = !DILocation(line: 711, column: 62, scope: !7075)
!7083 = !DILocalVariable(name: "color_vert_array", arg: 3, scope: !7075, file: !1, line: 711, type: !1881)
!7084 = !DILocation(line: 711, column: 86, scope: !7075)
!7085 = !DILocation(line: 713, column: 24, scope: !7075)
!7086 = !DILocation(line: 713, column: 41, scope: !7075)
!7087 = !DILocation(line: 713, column: 12, scope: !7075)
!7088 = !DILocation(line: 713, column: 2, scope: !7075)
!7089 = !DILocation(line: 713, column: 10, scope: !7075)
!7090 = !DILocation(line: 714, column: 24, scope: !7075)
!7091 = !DILocation(line: 714, column: 41, scope: !7075)
!7092 = !DILocation(line: 714, column: 12, scope: !7075)
!7093 = !DILocation(line: 714, column: 2, scope: !7075)
!7094 = !DILocation(line: 714, column: 10, scope: !7075)
!7095 = !DILocation(line: 715, column: 24, scope: !7075)
!7096 = !DILocation(line: 715, column: 41, scope: !7075)
!7097 = !DILocation(line: 715, column: 12, scope: !7075)
!7098 = !DILocation(line: 715, column: 2, scope: !7075)
!7099 = !DILocation(line: 715, column: 10, scope: !7075)
!7100 = !DILocation(line: 716, column: 1, scope: !7075)
!7101 = distinct !DISubprogram(name: "emDM_drawFacesTex_common", scope: !1, file: !1, line: 718, type: !7102, scopeLine: 723, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1952)
!7102 = !DISubroutineType(types: !7103)
!7103 = !{null, !154, !1632, !1663, !1650, !182}
!7104 = !DILocalVariable(name: "dm", arg: 1, scope: !7101, file: !1, line: 718, type: !154)
!7105 = !DILocation(line: 718, column: 51, scope: !7101)
!7106 = !DILocalVariable(name: "drawParams", arg: 2, scope: !7101, file: !1, line: 719, type: !1632)
!7107 = !DILocation(line: 719, column: 58, scope: !7101)
!7108 = !DILocalVariable(name: "drawParamsMapped", arg: 3, scope: !7101, file: !1, line: 720, type: !1663)
!7109 = !DILocation(line: 720, column: 55, scope: !7101)
!7110 = !DILocalVariable(name: "compareDrawOptions", arg: 4, scope: !7101, file: !1, line: 721, type: !1650)
!7111 = !DILocation(line: 721, column: 59, scope: !7101)
!7112 = !DILocalVariable(name: "userData", arg: 5, scope: !7101, file: !1, line: 722, type: !182)
!7113 = !DILocation(line: 722, column: 44, scope: !7101)
!7114 = !DILocalVariable(name: "bmdm", scope: !7101, file: !1, line: 724, type: !1700)
!7115 = !DILocation(line: 724, column: 20, scope: !7101)
!7116 = !DILocation(line: 724, column: 47, scope: !7101)
!7117 = !DILocation(line: 724, column: 27, scope: !7101)
!7118 = !DILocalVariable(name: "em", scope: !7101, file: !1, line: 725, type: !1706)
!7119 = !DILocation(line: 725, column: 14, scope: !7101)
!7120 = !DILocation(line: 725, column: 19, scope: !7101)
!7121 = !DILocation(line: 725, column: 25, scope: !7101)
!7122 = !DILocalVariable(name: "bm", scope: !7101, file: !1, line: 726, type: !1847)
!7123 = !DILocation(line: 726, column: 9, scope: !7101)
!7124 = !DILocation(line: 726, column: 14, scope: !7101)
!7125 = !DILocation(line: 726, column: 18, scope: !7101)
!7126 = !DILocalVariable(name: "looptris", scope: !7101, file: !1, line: 727, type: !1872)
!7127 = !DILocation(line: 727, column: 19, scope: !7101)
!7128 = !DILocation(line: 727, column: 34, scope: !7101)
!7129 = !DILocation(line: 727, column: 38, scope: !7101)
!7130 = !DILocalVariable(name: "efa", scope: !7101, file: !1, line: 728, type: !1795)
!7131 = !DILocation(line: 728, column: 10, scope: !7101)
!7132 = !DILocalVariable(name: "lnors", scope: !7101, file: !1, line: 729, type: !1698)
!7133 = !DILocation(line: 729, column: 16, scope: !7101)
!7134 = !DILocation(line: 729, column: 28, scope: !7101)
!7135 = !DILocation(line: 729, column: 32, scope: !7101)
!7136 = !DILocation(line: 729, column: 49, scope: !7101)
!7137 = !DILocalVariable(name: "luv", scope: !7101, file: !1, line: 730, type: !7138)
!7138 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1908, size: 192, elements: !261)
!7139 = !DILocation(line: 730, column: 11, scope: !7101)
!7140 = !DILocalVariable(name: "dummyluv", scope: !7101, file: !1, line: 730, type: !1909)
!7141 = !DILocation(line: 730, column: 19, scope: !7101)
!7142 = !DILocalVariable(name: "lcol", scope: !7101, file: !1, line: 731, type: !4217)
!7143 = !DILocation(line: 731, column: 12, scope: !7101)
!7144 = !DILocalVariable(name: "cd_loop_uv_offset", scope: !7101, file: !1, line: 732, type: !1967)
!7145 = !DILocation(line: 732, column: 12, scope: !7101)
!7146 = !DILocation(line: 732, column: 58, scope: !7101)
!7147 = !DILocation(line: 732, column: 62, scope: !7101)
!7148 = !DILocation(line: 732, column: 35, scope: !7101)
!7149 = !DILocalVariable(name: "cd_loop_color_offset", scope: !7101, file: !1, line: 733, type: !1967)
!7150 = !DILocation(line: 733, column: 12, scope: !7101)
!7151 = !DILocation(line: 733, column: 58, scope: !7101)
!7152 = !DILocation(line: 733, column: 62, scope: !7101)
!7153 = !DILocation(line: 733, column: 35, scope: !7101)
!7154 = !DILocalVariable(name: "cd_poly_tex_offset", scope: !7101, file: !1, line: 734, type: !1967)
!7155 = !DILocation(line: 734, column: 12, scope: !7101)
!7156 = !DILocation(line: 734, column: 58, scope: !7101)
!7157 = !DILocation(line: 734, column: 62, scope: !7101)
!7158 = !DILocation(line: 734, column: 35, scope: !7101)
!7159 = !DILocalVariable(name: "color_vert_array", scope: !7101, file: !1, line: 735, type: !1881)
!7160 = !DILocation(line: 735, column: 17, scope: !7101)
!7161 = !DILocation(line: 735, column: 40, scope: !7101)
!7162 = !DILocation(line: 735, column: 44, scope: !7101)
!7163 = !DILocalVariable(name: "has_uv", scope: !7101, file: !1, line: 736, type: !871)
!7164 = !DILocation(line: 736, column: 7, scope: !7101)
!7165 = !DILocation(line: 736, column: 19, scope: !7101)
!7166 = !DILocation(line: 736, column: 40, scope: !7101)
!7167 = !DILocation(line: 736, column: 18, scope: !7101)
!7168 = !DILocalVariable(name: "has_vcol_preview", scope: !7101, file: !1, line: 737, type: !871)
!7169 = !DILocation(line: 737, column: 7, scope: !7101)
!7170 = !DILocation(line: 737, column: 27, scope: !7101)
!7171 = !DILocation(line: 737, column: 44, scope: !7101)
!7172 = !DILocation(line: 737, column: 26, scope: !7101)
!7173 = !DILocalVariable(name: "has_vcol", scope: !7101, file: !1, line: 738, type: !871)
!7174 = !DILocation(line: 738, column: 7, scope: !7101)
!7175 = !DILocation(line: 738, column: 19, scope: !7101)
!7176 = !DILocation(line: 738, column: 40, scope: !7101)
!7177 = !DILocation(line: 738, column: 47, scope: !7101)
!7178 = !DILocation(line: 738, column: 51, scope: !7101)
!7179 = !DILocation(line: 738, column: 68, scope: !7101)
!7180 = !DILocation(line: 0, scope: !7101)
!7181 = !DILocation(line: 738, column: 18, scope: !7101)
!7182 = !DILocalVariable(name: "has_vcol_any", scope: !7101, file: !1, line: 739, type: !871)
!7183 = !DILocation(line: 739, column: 7, scope: !7101)
!7184 = !DILocation(line: 739, column: 23, scope: !7101)
!7185 = !DILocation(line: 739, column: 40, scope: !7101)
!7186 = !DILocation(line: 739, column: 43, scope: !7101)
!7187 = !DILocation(line: 739, column: 22, scope: !7101)
!7188 = !DILocalVariable(name: "i", scope: !7101, file: !1, line: 740, type: !168)
!7189 = !DILocation(line: 740, column: 6, scope: !7101)
!7190 = !DILocation(line: 742, column: 9, scope: !7101)
!7191 = !DILocation(line: 744, column: 20, scope: !7101)
!7192 = !DILocation(line: 744, column: 27, scope: !7101)
!7193 = !DILocation(line: 744, column: 11, scope: !7101)
!7194 = !DILocation(line: 744, column: 18, scope: !7101)
!7195 = !DILocation(line: 744, column: 2, scope: !7101)
!7196 = !DILocation(line: 744, column: 9, scope: !7101)
!7197 = !DILocation(line: 749, column: 2, scope: !7101)
!7198 = !DILocation(line: 751, column: 28, scope: !7101)
!7199 = !DILocation(line: 751, column: 2, scope: !7101)
!7200 = !DILocation(line: 754, column: 6, scope: !7201)
!7201 = distinct !DILexicalBlock(scope: !7101, file: !1, line: 754, column: 6)
!7202 = !DILocation(line: 754, column: 6, scope: !7101)
!7203 = !DILocation(line: 755, column: 29, scope: !7204)
!7204 = distinct !DILexicalBlock(scope: !7201, file: !1, line: 754, column: 24)
!7205 = !DILocation(line: 755, column: 3, scope: !7204)
!7206 = !DILocation(line: 756, column: 2, scope: !7204)
!7207 = !DILocation(line: 758, column: 6, scope: !7208)
!7208 = distinct !DILexicalBlock(scope: !7101, file: !1, line: 758, column: 6)
!7209 = !DILocation(line: 758, column: 12, scope: !7208)
!7210 = !DILocation(line: 758, column: 6, scope: !7101)
!7211 = !DILocalVariable(name: "vertexCos", scope: !7212, file: !1, line: 760, type: !1698)
!7212 = distinct !DILexicalBlock(scope: !7208, file: !1, line: 758, column: 23)
!7213 = !DILocation(line: 760, column: 17, scope: !7212)
!7214 = !DILocation(line: 760, column: 33, scope: !7212)
!7215 = !DILocation(line: 760, column: 39, scope: !7212)
!7216 = !DILocalVariable(name: "vertexNos", scope: !7212, file: !1, line: 761, type: !1698)
!7217 = !DILocation(line: 761, column: 17, scope: !7212)
!7218 = !DILocalVariable(name: "polyNos", scope: !7212, file: !1, line: 762, type: !1698)
!7219 = !DILocation(line: 762, column: 17, scope: !7212)
!7220 = !DILocation(line: 764, column: 26, scope: !7212)
!7221 = !DILocation(line: 764, column: 3, scope: !7212)
!7222 = !DILocation(line: 765, column: 26, scope: !7212)
!7223 = !DILocation(line: 765, column: 3, scope: !7212)
!7224 = !DILocation(line: 766, column: 15, scope: !7212)
!7225 = !DILocation(line: 766, column: 21, scope: !7212)
!7226 = !DILocation(line: 766, column: 13, scope: !7212)
!7227 = !DILocation(line: 767, column: 13, scope: !7212)
!7228 = !DILocation(line: 767, column: 19, scope: !7212)
!7229 = !DILocation(line: 767, column: 11, scope: !7212)
!7230 = !DILocation(line: 769, column: 29, scope: !7212)
!7231 = !DILocation(line: 769, column: 33, scope: !7212)
!7232 = !DILocation(line: 769, column: 3, scope: !7212)
!7233 = !DILocation(line: 771, column: 10, scope: !7234)
!7234 = distinct !DILexicalBlock(scope: !7212, file: !1, line: 771, column: 3)
!7235 = !DILocation(line: 771, column: 8, scope: !7234)
!7236 = !DILocation(line: 771, column: 15, scope: !7237)
!7237 = distinct !DILexicalBlock(scope: !7234, file: !1, line: 771, column: 3)
!7238 = !DILocation(line: 771, column: 19, scope: !7237)
!7239 = !DILocation(line: 771, column: 23, scope: !7237)
!7240 = !DILocation(line: 771, column: 17, scope: !7237)
!7241 = !DILocation(line: 771, column: 3, scope: !7234)
!7242 = !DILocalVariable(name: "ltri", scope: !7243, file: !1, line: 772, type: !2848)
!7243 = distinct !DILexicalBlock(scope: !7237, file: !1, line: 771, column: 36)
!7244 = !DILocation(line: 772, column: 13, scope: !7243)
!7245 = !DILocation(line: 772, column: 20, scope: !7243)
!7246 = !DILocation(line: 772, column: 29, scope: !7243)
!7247 = !DILocalVariable(name: "tp", scope: !7243, file: !1, line: 773, type: !1896)
!7248 = !DILocation(line: 773, column: 14, scope: !7243)
!7249 = !DILocation(line: 773, column: 20, scope: !7243)
!7250 = !DILocation(line: 773, column: 39, scope: !7243)
!7251 = !DILocation(line: 773, column: 19, scope: !7243)
!7252 = !DILocation(line: 773, column: 48, scope: !7243)
!7253 = !DILocalVariable(name: "mtf", scope: !7243, file: !1, line: 774, type: !1907)
!7254 = !DILocation(line: 774, column: 11, scope: !7243)
!7255 = !DILocalVariable(name: "drawSmooth", scope: !7243, file: !1, line: 776, type: !168)
!7256 = !DILocation(line: 776, column: 8, scope: !7243)
!7257 = !DILocation(line: 776, column: 21, scope: !7243)
!7258 = !DILocation(line: 776, column: 27, scope: !7243)
!7259 = !DILocation(line: 776, column: 30, scope: !7243)
!7260 = !DILocalVariable(name: "draw_option", scope: !7243, file: !1, line: 777, type: !1636)
!7261 = !DILocation(line: 777, column: 17, scope: !7243)
!7262 = !DILocation(line: 779, column: 10, scope: !7243)
!7263 = !DILocation(line: 779, column: 19, scope: !7243)
!7264 = !DILocation(line: 779, column: 8, scope: !7243)
!7265 = !DILocation(line: 781, column: 8, scope: !7266)
!7266 = distinct !DILexicalBlock(scope: !7243, file: !1, line: 781, column: 8)
!7267 = !DILocation(line: 781, column: 27, scope: !7266)
!7268 = !DILocation(line: 781, column: 8, scope: !7243)
!7269 = !DILocation(line: 782, column: 5, scope: !7270)
!7270 = distinct !DILexicalBlock(scope: !7271, file: !1, line: 782, column: 5)
!7271 = distinct !DILexicalBlock(scope: !7266, file: !1, line: 781, column: 34)
!7272 = !DILocation(line: 783, column: 4, scope: !7271)
!7273 = !DILocation(line: 785, column: 8, scope: !7274)
!7274 = distinct !DILexicalBlock(scope: !7243, file: !1, line: 785, column: 8)
!7275 = !DILocation(line: 785, column: 8, scope: !7243)
!7276 = !DILocation(line: 786, column: 19, scope: !7274)
!7277 = !DILocation(line: 786, column: 36, scope: !7274)
!7278 = !DILocation(line: 786, column: 46, scope: !7274)
!7279 = !DILocation(line: 786, column: 51, scope: !7274)
!7280 = !DILocation(line: 786, column: 17, scope: !7274)
!7281 = !DILocation(line: 786, column: 5, scope: !7274)
!7282 = !DILocation(line: 787, column: 13, scope: !7283)
!7283 = distinct !DILexicalBlock(scope: !7274, file: !1, line: 787, column: 13)
!7284 = !DILocation(line: 787, column: 13, scope: !7274)
!7285 = !DILocation(line: 788, column: 19, scope: !7283)
!7286 = !DILocation(line: 788, column: 36, scope: !7283)
!7287 = !DILocation(line: 788, column: 46, scope: !7283)
!7288 = !DILocation(line: 788, column: 17, scope: !7283)
!7289 = !DILocation(line: 788, column: 5, scope: !7283)
!7290 = !DILocation(line: 790, column: 17, scope: !7283)
!7291 = !DILocation(line: 792, column: 8, scope: !7292)
!7292 = distinct !DILexicalBlock(scope: !7243, file: !1, line: 792, column: 8)
!7293 = !DILocation(line: 792, column: 20, scope: !7292)
!7294 = !DILocation(line: 792, column: 8, scope: !7243)
!7295 = !DILocation(line: 794, column: 14, scope: !7296)
!7296 = distinct !DILexicalBlock(scope: !7297, file: !1, line: 794, column: 14)
!7297 = distinct !DILexicalBlock(scope: !7292, file: !1, line: 792, column: 44)
!7298 = !DILocation(line: 794, column: 14, scope: !7297)
!7299 = !DILocation(line: 794, column: 49, scope: !7296)
!7300 = !DILocation(line: 794, column: 56, scope: !7296)
!7301 = !DILocation(line: 794, column: 62, scope: !7296)
!7302 = !DILocation(line: 794, column: 33, scope: !7296)
!7303 = !DILocation(line: 795, column: 14, scope: !7304)
!7304 = distinct !DILexicalBlock(scope: !7297, file: !1, line: 795, column: 14)
!7305 = !DILocation(line: 795, column: 14, scope: !7297)
!7306 = !DILocation(line: 795, column: 50, scope: !7304)
!7307 = !DILocation(line: 795, column: 56, scope: !7304)
!7308 = !DILocation(line: 795, column: 62, scope: !7304)
!7309 = !DILocation(line: 795, column: 33, scope: !7304)
!7310 = !DILocation(line: 796, column: 14, scope: !7311)
!7311 = distinct !DILexicalBlock(scope: !7304, file: !1, line: 796, column: 14)
!7312 = !DILocation(line: 796, column: 14, scope: !7304)
!7313 = !DILocation(line: 796, column: 57, scope: !7311)
!7314 = !DILocation(line: 796, column: 63, scope: !7311)
!7315 = !DILocation(line: 796, column: 69, scope: !7311)
!7316 = !DILocation(line: 796, column: 33, scope: !7311)
!7317 = !DILocation(line: 798, column: 5, scope: !7297)
!7318 = !DILocation(line: 799, column: 10, scope: !7319)
!7319 = distinct !DILexicalBlock(scope: !7297, file: !1, line: 799, column: 9)
!7320 = !DILocation(line: 799, column: 9, scope: !7297)
!7321 = !DILocation(line: 800, column: 18, scope: !7322)
!7322 = distinct !DILexicalBlock(scope: !7319, file: !1, line: 799, column: 22)
!7323 = !DILocation(line: 800, column: 26, scope: !7322)
!7324 = !DILocation(line: 800, column: 6, scope: !7322)
!7325 = !DILocation(line: 802, column: 20, scope: !7322)
!7326 = !DILocation(line: 802, column: 28, scope: !7322)
!7327 = !DILocation(line: 802, column: 6, scope: !7322)
!7328 = !DILocation(line: 803, column: 10, scope: !7329)
!7329 = distinct !DILexicalBlock(scope: !7322, file: !1, line: 803, column: 10)
!7330 = !DILocation(line: 803, column: 10, scope: !7322)
!7331 = !DILocation(line: 803, column: 55, scope: !7329)
!7332 = !DILocation(line: 803, column: 64, scope: !7329)
!7333 = !DILocation(line: 803, column: 24, scope: !7329)
!7334 = !DILocation(line: 804, column: 18, scope: !7322)
!7335 = !DILocation(line: 804, column: 28, scope: !7322)
!7336 = !DILocation(line: 804, column: 6, scope: !7322)
!7337 = !DILocation(line: 806, column: 20, scope: !7322)
!7338 = !DILocation(line: 806, column: 28, scope: !7322)
!7339 = !DILocation(line: 806, column: 6, scope: !7322)
!7340 = !DILocation(line: 807, column: 10, scope: !7341)
!7341 = distinct !DILexicalBlock(scope: !7322, file: !1, line: 807, column: 10)
!7342 = !DILocation(line: 807, column: 10, scope: !7322)
!7343 = !DILocation(line: 807, column: 55, scope: !7341)
!7344 = !DILocation(line: 807, column: 64, scope: !7341)
!7345 = !DILocation(line: 807, column: 24, scope: !7341)
!7346 = !DILocation(line: 808, column: 18, scope: !7322)
!7347 = !DILocation(line: 808, column: 28, scope: !7322)
!7348 = !DILocation(line: 808, column: 6, scope: !7322)
!7349 = !DILocation(line: 810, column: 20, scope: !7322)
!7350 = !DILocation(line: 810, column: 28, scope: !7322)
!7351 = !DILocation(line: 810, column: 6, scope: !7322)
!7352 = !DILocation(line: 811, column: 10, scope: !7353)
!7353 = distinct !DILexicalBlock(scope: !7322, file: !1, line: 811, column: 10)
!7354 = !DILocation(line: 811, column: 10, scope: !7322)
!7355 = !DILocation(line: 811, column: 55, scope: !7353)
!7356 = !DILocation(line: 811, column: 64, scope: !7353)
!7357 = !DILocation(line: 811, column: 24, scope: !7353)
!7358 = !DILocation(line: 812, column: 18, scope: !7322)
!7359 = !DILocation(line: 812, column: 28, scope: !7322)
!7360 = !DILocation(line: 812, column: 6, scope: !7322)
!7361 = !DILocation(line: 813, column: 5, scope: !7322)
!7362 = !DILocation(line: 815, column: 20, scope: !7363)
!7363 = distinct !DILexicalBlock(scope: !7319, file: !1, line: 814, column: 10)
!7364 = !DILocation(line: 815, column: 28, scope: !7363)
!7365 = !DILocation(line: 815, column: 6, scope: !7363)
!7366 = !DILocation(line: 816, column: 10, scope: !7367)
!7367 = distinct !DILexicalBlock(scope: !7363, file: !1, line: 816, column: 10)
!7368 = !DILocation(line: 816, column: 10, scope: !7363)
!7369 = !DILocation(line: 816, column: 55, scope: !7367)
!7370 = !DILocation(line: 816, column: 64, scope: !7367)
!7371 = !DILocation(line: 816, column: 24, scope: !7367)
!7372 = !DILocation(line: 817, column: 10, scope: !7373)
!7373 = distinct !DILexicalBlock(scope: !7363, file: !1, line: 817, column: 10)
!7374 = !DILocation(line: 817, column: 10, scope: !7363)
!7375 = !DILocation(line: 817, column: 29, scope: !7373)
!7376 = !DILocation(line: 817, column: 35, scope: !7373)
!7377 = !DILocation(line: 817, column: 17, scope: !7373)
!7378 = !DILocation(line: 818, column: 23, scope: !7373)
!7379 = !DILocation(line: 818, column: 33, scope: !7373)
!7380 = !DILocation(line: 818, column: 11, scope: !7373)
!7381 = !DILocation(line: 819, column: 18, scope: !7363)
!7382 = !DILocation(line: 819, column: 28, scope: !7363)
!7383 = !DILocation(line: 819, column: 6, scope: !7363)
!7384 = !DILocation(line: 821, column: 20, scope: !7363)
!7385 = !DILocation(line: 821, column: 28, scope: !7363)
!7386 = !DILocation(line: 821, column: 6, scope: !7363)
!7387 = !DILocation(line: 822, column: 10, scope: !7388)
!7388 = distinct !DILexicalBlock(scope: !7363, file: !1, line: 822, column: 10)
!7389 = !DILocation(line: 822, column: 10, scope: !7363)
!7390 = !DILocation(line: 822, column: 55, scope: !7388)
!7391 = !DILocation(line: 822, column: 64, scope: !7388)
!7392 = !DILocation(line: 822, column: 24, scope: !7388)
!7393 = !DILocation(line: 823, column: 10, scope: !7394)
!7394 = distinct !DILexicalBlock(scope: !7363, file: !1, line: 823, column: 10)
!7395 = !DILocation(line: 823, column: 10, scope: !7363)
!7396 = !DILocation(line: 823, column: 29, scope: !7394)
!7397 = !DILocation(line: 823, column: 35, scope: !7394)
!7398 = !DILocation(line: 823, column: 17, scope: !7394)
!7399 = !DILocation(line: 824, column: 23, scope: !7394)
!7400 = !DILocation(line: 824, column: 33, scope: !7394)
!7401 = !DILocation(line: 824, column: 11, scope: !7394)
!7402 = !DILocation(line: 825, column: 18, scope: !7363)
!7403 = !DILocation(line: 825, column: 28, scope: !7363)
!7404 = !DILocation(line: 825, column: 6, scope: !7363)
!7405 = !DILocation(line: 827, column: 20, scope: !7363)
!7406 = !DILocation(line: 827, column: 28, scope: !7363)
!7407 = !DILocation(line: 827, column: 6, scope: !7363)
!7408 = !DILocation(line: 828, column: 10, scope: !7409)
!7409 = distinct !DILexicalBlock(scope: !7363, file: !1, line: 828, column: 10)
!7410 = !DILocation(line: 828, column: 10, scope: !7363)
!7411 = !DILocation(line: 828, column: 55, scope: !7409)
!7412 = !DILocation(line: 828, column: 64, scope: !7409)
!7413 = !DILocation(line: 828, column: 24, scope: !7409)
!7414 = !DILocation(line: 829, column: 10, scope: !7415)
!7415 = distinct !DILexicalBlock(scope: !7363, file: !1, line: 829, column: 10)
!7416 = !DILocation(line: 829, column: 10, scope: !7363)
!7417 = !DILocation(line: 829, column: 29, scope: !7415)
!7418 = !DILocation(line: 829, column: 35, scope: !7415)
!7419 = !DILocation(line: 829, column: 17, scope: !7415)
!7420 = !DILocation(line: 830, column: 23, scope: !7415)
!7421 = !DILocation(line: 830, column: 33, scope: !7415)
!7422 = !DILocation(line: 830, column: 11, scope: !7415)
!7423 = !DILocation(line: 831, column: 18, scope: !7363)
!7424 = !DILocation(line: 831, column: 28, scope: !7363)
!7425 = !DILocation(line: 831, column: 6, scope: !7363)
!7426 = !DILocation(line: 833, column: 5, scope: !7297)
!7427 = !DILocation(line: 834, column: 4, scope: !7297)
!7428 = !DILocation(line: 835, column: 3, scope: !7243)
!7429 = !DILocation(line: 771, column: 32, scope: !7237)
!7430 = !DILocation(line: 771, column: 3, scope: !7237)
!7431 = distinct !{!7431, !7241, !7432}
!7432 = !DILocation(line: 835, column: 3, scope: !7234)
!7433 = !DILocation(line: 836, column: 2, scope: !7212)
!7434 = !DILocation(line: 838, column: 29, scope: !7435)
!7435 = distinct !DILexicalBlock(scope: !7208, file: !1, line: 837, column: 7)
!7436 = !DILocation(line: 838, column: 33, scope: !7435)
!7437 = !DILocation(line: 838, column: 3, scope: !7435)
!7438 = !DILocation(line: 840, column: 10, scope: !7439)
!7439 = distinct !DILexicalBlock(scope: !7435, file: !1, line: 840, column: 3)
!7440 = !DILocation(line: 840, column: 8, scope: !7439)
!7441 = !DILocation(line: 840, column: 15, scope: !7442)
!7442 = distinct !DILexicalBlock(scope: !7439, file: !1, line: 840, column: 3)
!7443 = !DILocation(line: 840, column: 19, scope: !7442)
!7444 = !DILocation(line: 840, column: 23, scope: !7442)
!7445 = !DILocation(line: 840, column: 17, scope: !7442)
!7446 = !DILocation(line: 840, column: 3, scope: !7439)
!7447 = !DILocalVariable(name: "ltri", scope: !7448, file: !1, line: 841, type: !2848)
!7448 = distinct !DILexicalBlock(scope: !7442, file: !1, line: 840, column: 36)
!7449 = !DILocation(line: 841, column: 13, scope: !7448)
!7450 = !DILocation(line: 841, column: 20, scope: !7448)
!7451 = !DILocation(line: 841, column: 29, scope: !7448)
!7452 = !DILocalVariable(name: "tp", scope: !7448, file: !1, line: 842, type: !1896)
!7453 = !DILocation(line: 842, column: 14, scope: !7448)
!7454 = !DILocation(line: 842, column: 20, scope: !7448)
!7455 = !DILocation(line: 842, column: 39, scope: !7448)
!7456 = !DILocation(line: 842, column: 19, scope: !7448)
!7457 = !DILocation(line: 842, column: 48, scope: !7448)
!7458 = !DILocalVariable(name: "mtf", scope: !7448, file: !1, line: 843, type: !1907)
!7459 = !DILocation(line: 843, column: 11, scope: !7448)
!7460 = !DILocalVariable(name: "drawSmooth", scope: !7448, file: !1, line: 845, type: !168)
!7461 = !DILocation(line: 845, column: 8, scope: !7448)
!7462 = !DILocation(line: 845, column: 21, scope: !7448)
!7463 = !DILocation(line: 845, column: 27, scope: !7448)
!7464 = !DILocation(line: 845, column: 30, scope: !7448)
!7465 = !DILocalVariable(name: "draw_option", scope: !7448, file: !1, line: 846, type: !1636)
!7466 = !DILocation(line: 846, column: 17, scope: !7448)
!7467 = !DILocation(line: 848, column: 10, scope: !7448)
!7468 = !DILocation(line: 848, column: 19, scope: !7448)
!7469 = !DILocation(line: 848, column: 8, scope: !7448)
!7470 = !DILocation(line: 850, column: 8, scope: !7471)
!7471 = distinct !DILexicalBlock(scope: !7448, file: !1, line: 850, column: 8)
!7472 = !DILocation(line: 850, column: 27, scope: !7471)
!7473 = !DILocation(line: 850, column: 8, scope: !7448)
!7474 = !DILocation(line: 851, column: 5, scope: !7475)
!7475 = distinct !DILexicalBlock(scope: !7476, file: !1, line: 851, column: 5)
!7476 = distinct !DILexicalBlock(scope: !7471, file: !1, line: 850, column: 34)
!7477 = !DILocation(line: 852, column: 4, scope: !7476)
!7478 = !DILocation(line: 854, column: 8, scope: !7479)
!7479 = distinct !DILexicalBlock(scope: !7448, file: !1, line: 854, column: 8)
!7480 = !DILocation(line: 854, column: 8, scope: !7448)
!7481 = !DILocation(line: 855, column: 19, scope: !7479)
!7482 = !DILocation(line: 855, column: 36, scope: !7479)
!7483 = !DILocation(line: 855, column: 46, scope: !7479)
!7484 = !DILocation(line: 855, column: 51, scope: !7479)
!7485 = !DILocation(line: 855, column: 17, scope: !7479)
!7486 = !DILocation(line: 855, column: 5, scope: !7479)
!7487 = !DILocation(line: 856, column: 13, scope: !7488)
!7488 = distinct !DILexicalBlock(scope: !7479, file: !1, line: 856, column: 13)
!7489 = !DILocation(line: 856, column: 13, scope: !7479)
!7490 = !DILocation(line: 857, column: 19, scope: !7488)
!7491 = !DILocation(line: 857, column: 36, scope: !7488)
!7492 = !DILocation(line: 857, column: 46, scope: !7488)
!7493 = !DILocation(line: 857, column: 17, scope: !7488)
!7494 = !DILocation(line: 857, column: 5, scope: !7488)
!7495 = !DILocation(line: 859, column: 17, scope: !7488)
!7496 = !DILocation(line: 861, column: 8, scope: !7497)
!7497 = distinct !DILexicalBlock(scope: !7448, file: !1, line: 861, column: 8)
!7498 = !DILocation(line: 861, column: 20, scope: !7497)
!7499 = !DILocation(line: 861, column: 8, scope: !7448)
!7500 = !DILocation(line: 863, column: 14, scope: !7501)
!7501 = distinct !DILexicalBlock(scope: !7502, file: !1, line: 863, column: 14)
!7502 = distinct !DILexicalBlock(scope: !7497, file: !1, line: 861, column: 44)
!7503 = !DILocation(line: 863, column: 14, scope: !7502)
!7504 = !DILocation(line: 863, column: 49, scope: !7501)
!7505 = !DILocation(line: 863, column: 56, scope: !7501)
!7506 = !DILocation(line: 863, column: 62, scope: !7501)
!7507 = !DILocation(line: 863, column: 33, scope: !7501)
!7508 = !DILocation(line: 864, column: 14, scope: !7509)
!7509 = distinct !DILexicalBlock(scope: !7502, file: !1, line: 864, column: 14)
!7510 = !DILocation(line: 864, column: 14, scope: !7502)
!7511 = !DILocation(line: 864, column: 50, scope: !7509)
!7512 = !DILocation(line: 864, column: 56, scope: !7509)
!7513 = !DILocation(line: 864, column: 62, scope: !7509)
!7514 = !DILocation(line: 864, column: 33, scope: !7509)
!7515 = !DILocation(line: 865, column: 14, scope: !7516)
!7516 = distinct !DILexicalBlock(scope: !7509, file: !1, line: 865, column: 14)
!7517 = !DILocation(line: 865, column: 14, scope: !7509)
!7518 = !DILocation(line: 865, column: 57, scope: !7516)
!7519 = !DILocation(line: 865, column: 63, scope: !7516)
!7520 = !DILocation(line: 865, column: 69, scope: !7516)
!7521 = !DILocation(line: 865, column: 33, scope: !7516)
!7522 = !DILocation(line: 867, column: 5, scope: !7502)
!7523 = !DILocation(line: 868, column: 10, scope: !7524)
!7524 = distinct !DILexicalBlock(scope: !7502, file: !1, line: 868, column: 9)
!7525 = !DILocation(line: 868, column: 9, scope: !7502)
!7526 = !DILocation(line: 869, column: 18, scope: !7527)
!7527 = distinct !DILexicalBlock(scope: !7524, file: !1, line: 868, column: 22)
!7528 = !DILocation(line: 869, column: 23, scope: !7527)
!7529 = !DILocation(line: 869, column: 6, scope: !7527)
!7530 = !DILocation(line: 871, column: 20, scope: !7527)
!7531 = !DILocation(line: 871, column: 28, scope: !7527)
!7532 = !DILocation(line: 871, column: 6, scope: !7527)
!7533 = !DILocation(line: 872, column: 10, scope: !7534)
!7534 = distinct !DILexicalBlock(scope: !7527, file: !1, line: 872, column: 10)
!7535 = !DILocation(line: 872, column: 10, scope: !7527)
!7536 = !DILocation(line: 872, column: 55, scope: !7534)
!7537 = !DILocation(line: 872, column: 64, scope: !7534)
!7538 = !DILocation(line: 872, column: 24, scope: !7534)
!7539 = !DILocation(line: 873, column: 18, scope: !7527)
!7540 = !DILocation(line: 873, column: 27, scope: !7527)
!7541 = !DILocation(line: 873, column: 30, scope: !7527)
!7542 = !DILocation(line: 873, column: 6, scope: !7527)
!7543 = !DILocation(line: 875, column: 20, scope: !7527)
!7544 = !DILocation(line: 875, column: 28, scope: !7527)
!7545 = !DILocation(line: 875, column: 6, scope: !7527)
!7546 = !DILocation(line: 876, column: 10, scope: !7547)
!7547 = distinct !DILexicalBlock(scope: !7527, file: !1, line: 876, column: 10)
!7548 = !DILocation(line: 876, column: 10, scope: !7527)
!7549 = !DILocation(line: 876, column: 55, scope: !7547)
!7550 = !DILocation(line: 876, column: 64, scope: !7547)
!7551 = !DILocation(line: 876, column: 24, scope: !7547)
!7552 = !DILocation(line: 877, column: 18, scope: !7527)
!7553 = !DILocation(line: 877, column: 27, scope: !7527)
!7554 = !DILocation(line: 877, column: 30, scope: !7527)
!7555 = !DILocation(line: 877, column: 6, scope: !7527)
!7556 = !DILocation(line: 879, column: 20, scope: !7527)
!7557 = !DILocation(line: 879, column: 28, scope: !7527)
!7558 = !DILocation(line: 879, column: 6, scope: !7527)
!7559 = !DILocation(line: 880, column: 10, scope: !7560)
!7560 = distinct !DILexicalBlock(scope: !7527, file: !1, line: 880, column: 10)
!7561 = !DILocation(line: 880, column: 10, scope: !7527)
!7562 = !DILocation(line: 880, column: 55, scope: !7560)
!7563 = !DILocation(line: 880, column: 64, scope: !7560)
!7564 = !DILocation(line: 880, column: 24, scope: !7560)
!7565 = !DILocation(line: 881, column: 18, scope: !7527)
!7566 = !DILocation(line: 881, column: 27, scope: !7527)
!7567 = !DILocation(line: 881, column: 30, scope: !7527)
!7568 = !DILocation(line: 881, column: 6, scope: !7527)
!7569 = !DILocation(line: 882, column: 5, scope: !7527)
!7570 = !DILocation(line: 884, column: 20, scope: !7571)
!7571 = distinct !DILexicalBlock(scope: !7524, file: !1, line: 883, column: 10)
!7572 = !DILocation(line: 884, column: 28, scope: !7571)
!7573 = !DILocation(line: 884, column: 6, scope: !7571)
!7574 = !DILocation(line: 885, column: 10, scope: !7575)
!7575 = distinct !DILexicalBlock(scope: !7571, file: !1, line: 885, column: 10)
!7576 = !DILocation(line: 885, column: 10, scope: !7571)
!7577 = !DILocation(line: 885, column: 55, scope: !7575)
!7578 = !DILocation(line: 885, column: 64, scope: !7575)
!7579 = !DILocation(line: 885, column: 24, scope: !7575)
!7580 = !DILocation(line: 886, column: 10, scope: !7581)
!7581 = distinct !DILexicalBlock(scope: !7571, file: !1, line: 886, column: 10)
!7582 = !DILocation(line: 886, column: 10, scope: !7571)
!7583 = !DILocation(line: 886, column: 29, scope: !7581)
!7584 = !DILocation(line: 886, column: 35, scope: !7581)
!7585 = !DILocation(line: 886, column: 17, scope: !7581)
!7586 = !DILocation(line: 887, column: 23, scope: !7581)
!7587 = !DILocation(line: 887, column: 32, scope: !7581)
!7588 = !DILocation(line: 887, column: 35, scope: !7581)
!7589 = !DILocation(line: 887, column: 11, scope: !7581)
!7590 = !DILocation(line: 888, column: 18, scope: !7571)
!7591 = !DILocation(line: 888, column: 27, scope: !7571)
!7592 = !DILocation(line: 888, column: 30, scope: !7571)
!7593 = !DILocation(line: 888, column: 6, scope: !7571)
!7594 = !DILocation(line: 890, column: 20, scope: !7571)
!7595 = !DILocation(line: 890, column: 28, scope: !7571)
!7596 = !DILocation(line: 890, column: 6, scope: !7571)
!7597 = !DILocation(line: 891, column: 10, scope: !7598)
!7598 = distinct !DILexicalBlock(scope: !7571, file: !1, line: 891, column: 10)
!7599 = !DILocation(line: 891, column: 10, scope: !7571)
!7600 = !DILocation(line: 891, column: 55, scope: !7598)
!7601 = !DILocation(line: 891, column: 64, scope: !7598)
!7602 = !DILocation(line: 891, column: 24, scope: !7598)
!7603 = !DILocation(line: 892, column: 10, scope: !7604)
!7604 = distinct !DILexicalBlock(scope: !7571, file: !1, line: 892, column: 10)
!7605 = !DILocation(line: 892, column: 10, scope: !7571)
!7606 = !DILocation(line: 892, column: 29, scope: !7604)
!7607 = !DILocation(line: 892, column: 35, scope: !7604)
!7608 = !DILocation(line: 892, column: 17, scope: !7604)
!7609 = !DILocation(line: 893, column: 23, scope: !7604)
!7610 = !DILocation(line: 893, column: 32, scope: !7604)
!7611 = !DILocation(line: 893, column: 35, scope: !7604)
!7612 = !DILocation(line: 893, column: 11, scope: !7604)
!7613 = !DILocation(line: 894, column: 18, scope: !7571)
!7614 = !DILocation(line: 894, column: 27, scope: !7571)
!7615 = !DILocation(line: 894, column: 30, scope: !7571)
!7616 = !DILocation(line: 894, column: 6, scope: !7571)
!7617 = !DILocation(line: 896, column: 20, scope: !7571)
!7618 = !DILocation(line: 896, column: 28, scope: !7571)
!7619 = !DILocation(line: 896, column: 6, scope: !7571)
!7620 = !DILocation(line: 897, column: 10, scope: !7621)
!7621 = distinct !DILexicalBlock(scope: !7571, file: !1, line: 897, column: 10)
!7622 = !DILocation(line: 897, column: 10, scope: !7571)
!7623 = !DILocation(line: 897, column: 55, scope: !7621)
!7624 = !DILocation(line: 897, column: 64, scope: !7621)
!7625 = !DILocation(line: 897, column: 24, scope: !7621)
!7626 = !DILocation(line: 898, column: 10, scope: !7627)
!7627 = distinct !DILexicalBlock(scope: !7571, file: !1, line: 898, column: 10)
!7628 = !DILocation(line: 898, column: 10, scope: !7571)
!7629 = !DILocation(line: 898, column: 29, scope: !7627)
!7630 = !DILocation(line: 898, column: 35, scope: !7627)
!7631 = !DILocation(line: 898, column: 17, scope: !7627)
!7632 = !DILocation(line: 899, column: 23, scope: !7627)
!7633 = !DILocation(line: 899, column: 32, scope: !7627)
!7634 = !DILocation(line: 899, column: 35, scope: !7627)
!7635 = !DILocation(line: 899, column: 11, scope: !7627)
!7636 = !DILocation(line: 900, column: 18, scope: !7571)
!7637 = !DILocation(line: 900, column: 27, scope: !7571)
!7638 = !DILocation(line: 900, column: 30, scope: !7571)
!7639 = !DILocation(line: 900, column: 6, scope: !7571)
!7640 = !DILocation(line: 902, column: 5, scope: !7502)
!7641 = !DILocation(line: 903, column: 4, scope: !7502)
!7642 = !DILocation(line: 904, column: 3, scope: !7448)
!7643 = !DILocation(line: 840, column: 32, scope: !7442)
!7644 = !DILocation(line: 840, column: 3, scope: !7442)
!7645 = distinct !{!7645, !7446, !7646}
!7646 = !DILocation(line: 904, column: 3, scope: !7439)
!7647 = !DILocation(line: 907, column: 2, scope: !7101)
!7648 = !DILocation(line: 908, column: 1, scope: !7101)
!7649 = distinct !DISubprogram(name: "bmdm_get_tri_uv", scope: !1, file: !1, line: 697, type: !7650, scopeLine: 698, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1952)
!7650 = !DISubroutineType(types: !7651)
!7651 = !{null, !2848, !7652, !1967}
!7652 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1908, size: 64)
!7653 = !DILocalVariable(name: "ltri", arg: 1, scope: !7649, file: !1, line: 697, type: !2848)
!7654 = !DILocation(line: 697, column: 37, scope: !7649)
!7655 = !DILocalVariable(name: "luv", arg: 2, scope: !7649, file: !1, line: 697, type: !7652)
!7656 = !DILocation(line: 697, column: 55, scope: !7649)
!7657 = !DILocalVariable(name: "cd_loop_uv_offset", arg: 3, scope: !7649, file: !1, line: 697, type: !1967)
!7658 = !DILocation(line: 697, column: 73, scope: !7649)
!7659 = !DILocation(line: 699, column: 11, scope: !7649)
!7660 = !DILocation(line: 699, column: 2, scope: !7649)
!7661 = !DILocation(line: 699, column: 9, scope: !7649)
!7662 = !DILocation(line: 700, column: 11, scope: !7649)
!7663 = !DILocation(line: 700, column: 2, scope: !7649)
!7664 = !DILocation(line: 700, column: 9, scope: !7649)
!7665 = !DILocation(line: 701, column: 11, scope: !7649)
!7666 = !DILocation(line: 701, column: 2, scope: !7649)
!7667 = !DILocation(line: 701, column: 9, scope: !7649)
!7668 = !DILocation(line: 702, column: 1, scope: !7649)
!7669 = distinct !DISubprogram(name: "bmdm_get_tri_col", scope: !1, file: !1, line: 704, type: !7670, scopeLine: 705, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1952)
!7670 = !DISubroutineType(types: !7671)
!7671 = !{null, !2848, !7078, !1967}
!7672 = !DILocalVariable(name: "ltri", arg: 1, scope: !7669, file: !1, line: 704, type: !2848)
!7673 = !DILocation(line: 704, column: 38, scope: !7669)
!7674 = !DILocalVariable(name: "lcol", arg: 2, scope: !7669, file: !1, line: 704, type: !7078)
!7675 = !DILocation(line: 704, column: 57, scope: !7669)
!7676 = !DILocalVariable(name: "cd_loop_color_offset", arg: 3, scope: !7669, file: !1, line: 704, type: !1967)
!7677 = !DILocation(line: 704, column: 76, scope: !7669)
!7678 = !DILocation(line: 706, column: 12, scope: !7669)
!7679 = !DILocation(line: 706, column: 2, scope: !7669)
!7680 = !DILocation(line: 706, column: 10, scope: !7669)
!7681 = !DILocation(line: 707, column: 12, scope: !7669)
!7682 = !DILocation(line: 707, column: 2, scope: !7669)
!7683 = !DILocation(line: 707, column: 10, scope: !7669)
!7684 = !DILocation(line: 708, column: 12, scope: !7669)
!7685 = !DILocation(line: 708, column: 2, scope: !7669)
!7686 = !DILocation(line: 708, column: 10, scope: !7669)
!7687 = !DILocation(line: 709, column: 1, scope: !7669)
!7688 = distinct !DISubprogram(name: "emdm_pass_attrib_vertex_glsl", scope: !1, file: !1, line: 938, type: !7689, scopeLine: 939, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1952)
!7689 = !DISubroutineType(types: !7690)
!7690 = !{null, !7691, !7693, !1967}
!7691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7692, size: 64)
!7692 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !4936)
!7693 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7694, size: 64)
!7694 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1774)
!7695 = !DILocalVariable(name: "attribs", arg: 1, scope: !7688, file: !1, line: 938, type: !7691)
!7696 = !DILocation(line: 938, column: 65, scope: !7688)
!7697 = !DILocalVariable(name: "loop", arg: 2, scope: !7688, file: !1, line: 938, type: !7693)
!7698 = !DILocation(line: 938, column: 88, scope: !7688)
!7699 = !DILocalVariable(name: "index_in_face", arg: 3, scope: !7688, file: !1, line: 938, type: !1967)
!7700 = !DILocation(line: 938, column: 104, scope: !7688)
!7701 = !DILocalVariable(name: "eve", scope: !7688, file: !1, line: 940, type: !1730)
!7702 = !DILocation(line: 940, column: 10, scope: !7688)
!7703 = !DILocation(line: 940, column: 16, scope: !7688)
!7704 = !DILocation(line: 940, column: 22, scope: !7688)
!7705 = !DILocalVariable(name: "i", scope: !7688, file: !1, line: 941, type: !168)
!7706 = !DILocation(line: 941, column: 6, scope: !7688)
!7707 = !DILocalVariable(name: "zero", scope: !7688, file: !1, line: 942, type: !7708)
!7708 = !DICompositeType(tag: DW_TAG_array_type, baseType: !241, size: 128, elements: !401)
!7709 = !DILocation(line: 942, column: 14, scope: !7688)
!7710 = !DILocation(line: 944, column: 6, scope: !7711)
!7711 = distinct !DILexicalBlock(scope: !7688, file: !1, line: 944, column: 6)
!7712 = !DILocation(line: 944, column: 15, scope: !7711)
!7713 = !DILocation(line: 944, column: 6, scope: !7688)
!7714 = !DILocalVariable(name: "index", scope: !7715, file: !1, line: 945, type: !168)
!7715 = distinct !DILexicalBlock(scope: !7711, file: !1, line: 944, column: 24)
!7716 = !DILocation(line: 945, column: 7, scope: !7715)
!7717 = !DILocation(line: 945, column: 15, scope: !7715)
!7718 = !DILocalVariable(name: "orco", scope: !7715, file: !1, line: 946, type: !438)
!7719 = !DILocation(line: 946, column: 16, scope: !7715)
!7720 = !DILocation(line: 946, column: 24, scope: !7715)
!7721 = !DILocation(line: 946, column: 33, scope: !7715)
!7722 = !DILocation(line: 946, column: 38, scope: !7715)
!7723 = !DILocation(line: 946, column: 23, scope: !7715)
!7724 = !DILocation(line: 946, column: 47, scope: !7715)
!7725 = !DILocation(line: 946, column: 56, scope: !7715)
!7726 = !DILocation(line: 946, column: 61, scope: !7715)
!7727 = !DILocation(line: 946, column: 67, scope: !7715)
!7728 = !DILocation(line: 946, column: 76, scope: !7715)
!7729 = !DILocation(line: 948, column: 7, scope: !7730)
!7730 = distinct !DILexicalBlock(scope: !7715, file: !1, line: 948, column: 7)
!7731 = !DILocation(line: 948, column: 16, scope: !7730)
!7732 = !DILocation(line: 948, column: 21, scope: !7730)
!7733 = !DILocation(line: 948, column: 7, scope: !7715)
!7734 = !DILocation(line: 949, column: 18, scope: !7730)
!7735 = !DILocation(line: 949, column: 4, scope: !7730)
!7736 = !DILocation(line: 951, column: 4, scope: !7730)
!7737 = !DILocation(line: 951, column: 25, scope: !7730)
!7738 = !DILocation(line: 951, column: 34, scope: !7730)
!7739 = !DILocation(line: 951, column: 39, scope: !7730)
!7740 = !DILocation(line: 951, column: 49, scope: !7730)
!7741 = !DILocation(line: 952, column: 2, scope: !7715)
!7742 = !DILocation(line: 953, column: 9, scope: !7743)
!7743 = distinct !DILexicalBlock(scope: !7688, file: !1, line: 953, column: 2)
!7744 = !DILocation(line: 953, column: 7, scope: !7743)
!7745 = !DILocation(line: 953, column: 14, scope: !7746)
!7746 = distinct !DILexicalBlock(scope: !7743, file: !1, line: 953, column: 2)
!7747 = !DILocation(line: 953, column: 18, scope: !7746)
!7748 = !DILocation(line: 953, column: 27, scope: !7746)
!7749 = !DILocation(line: 953, column: 16, scope: !7746)
!7750 = !DILocation(line: 953, column: 2, scope: !7743)
!7751 = !DILocalVariable(name: "uv", scope: !7752, file: !1, line: 954, type: !438)
!7752 = distinct !DILexicalBlock(scope: !7746, file: !1, line: 953, column: 42)
!7753 = !DILocation(line: 954, column: 16, scope: !7752)
!7754 = !DILocation(line: 956, column: 7, scope: !7755)
!7755 = distinct !DILexicalBlock(scope: !7752, file: !1, line: 956, column: 7)
!7756 = !DILocation(line: 956, column: 16, scope: !7755)
!7757 = !DILocation(line: 956, column: 22, scope: !7755)
!7758 = !DILocation(line: 956, column: 25, scope: !7755)
!7759 = !DILocation(line: 956, column: 35, scope: !7755)
!7760 = !DILocation(line: 956, column: 7, scope: !7752)
!7761 = !DILocalVariable(name: "luv", scope: !7762, file: !1, line: 957, type: !7763)
!7762 = distinct !DILexicalBlock(scope: !7755, file: !1, line: 956, column: 42)
!7763 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7764, size: 64)
!7764 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1909)
!7765 = !DILocation(line: 957, column: 19, scope: !7762)
!7766 = !DILocation(line: 957, column: 25, scope: !7762)
!7767 = !DILocation(line: 958, column: 9, scope: !7762)
!7768 = !DILocation(line: 958, column: 14, scope: !7762)
!7769 = !DILocation(line: 958, column: 7, scope: !7762)
!7770 = !DILocation(line: 959, column: 3, scope: !7762)
!7771 = !DILocation(line: 961, column: 9, scope: !7772)
!7772 = distinct !DILexicalBlock(scope: !7755, file: !1, line: 960, column: 8)
!7773 = !DILocation(line: 961, column: 7, scope: !7772)
!7774 = !DILocation(line: 964, column: 7, scope: !7775)
!7775 = distinct !DILexicalBlock(scope: !7752, file: !1, line: 964, column: 7)
!7776 = !DILocation(line: 964, column: 16, scope: !7775)
!7777 = !DILocation(line: 964, column: 22, scope: !7775)
!7778 = !DILocation(line: 964, column: 25, scope: !7775)
!7779 = !DILocation(line: 964, column: 7, scope: !7752)
!7780 = !DILocation(line: 965, column: 18, scope: !7775)
!7781 = !DILocation(line: 965, column: 4, scope: !7775)
!7782 = !DILocation(line: 967, column: 4, scope: !7775)
!7783 = !DILocation(line: 967, column: 25, scope: !7775)
!7784 = !DILocation(line: 967, column: 34, scope: !7775)
!7785 = !DILocation(line: 967, column: 40, scope: !7775)
!7786 = !DILocation(line: 967, column: 43, scope: !7775)
!7787 = !DILocation(line: 967, column: 53, scope: !7775)
!7788 = !DILocation(line: 968, column: 2, scope: !7752)
!7789 = !DILocation(line: 953, column: 38, scope: !7746)
!7790 = !DILocation(line: 953, column: 2, scope: !7746)
!7791 = distinct !{!7791, !7750, !7792}
!7792 = !DILocation(line: 968, column: 2, scope: !7743)
!7793 = !DILocation(line: 969, column: 9, scope: !7794)
!7794 = distinct !DILexicalBlock(scope: !7688, file: !1, line: 969, column: 2)
!7795 = !DILocation(line: 969, column: 7, scope: !7794)
!7796 = !DILocation(line: 969, column: 14, scope: !7797)
!7797 = distinct !DILexicalBlock(scope: !7794, file: !1, line: 969, column: 2)
!7798 = !DILocation(line: 969, column: 18, scope: !7797)
!7799 = !DILocation(line: 969, column: 27, scope: !7797)
!7800 = !DILocation(line: 969, column: 16, scope: !7797)
!7801 = !DILocation(line: 969, column: 2, scope: !7794)
!7802 = !DILocalVariable(name: "col", scope: !7803, file: !1, line: 970, type: !7804)
!7803 = distinct !DILexicalBlock(scope: !7797, file: !1, line: 969, column: 41)
!7804 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1932, size: 32, elements: !401)
!7805 = !DILocation(line: 970, column: 11, scope: !7803)
!7806 = !DILocation(line: 971, column: 7, scope: !7807)
!7807 = distinct !DILexicalBlock(scope: !7803, file: !1, line: 971, column: 7)
!7808 = !DILocation(line: 971, column: 16, scope: !7807)
!7809 = !DILocation(line: 971, column: 21, scope: !7807)
!7810 = !DILocation(line: 971, column: 24, scope: !7807)
!7811 = !DILocation(line: 971, column: 34, scope: !7807)
!7812 = !DILocation(line: 971, column: 7, scope: !7803)
!7813 = !DILocalVariable(name: "cp", scope: !7814, file: !1, line: 972, type: !3437)
!7814 = distinct !DILexicalBlock(scope: !7807, file: !1, line: 971, column: 41)
!7815 = !DILocation(line: 972, column: 20, scope: !7814)
!7816 = !DILocation(line: 972, column: 25, scope: !7814)
!7817 = !DILocation(line: 973, column: 13, scope: !7814)
!7818 = !DILocation(line: 973, column: 17, scope: !7814)
!7819 = !DILocation(line: 973, column: 4, scope: !7814)
!7820 = !DILocation(line: 973, column: 11, scope: !7814)
!7821 = !DILocation(line: 973, column: 29, scope: !7814)
!7822 = !DILocation(line: 973, column: 33, scope: !7814)
!7823 = !DILocation(line: 973, column: 20, scope: !7814)
!7824 = !DILocation(line: 973, column: 27, scope: !7814)
!7825 = !DILocation(line: 973, column: 45, scope: !7814)
!7826 = !DILocation(line: 973, column: 49, scope: !7814)
!7827 = !DILocation(line: 973, column: 36, scope: !7814)
!7828 = !DILocation(line: 973, column: 43, scope: !7814)
!7829 = !DILocation(line: 973, column: 61, scope: !7814)
!7830 = !DILocation(line: 973, column: 65, scope: !7814)
!7831 = !DILocation(line: 973, column: 52, scope: !7814)
!7832 = !DILocation(line: 973, column: 59, scope: !7814)
!7833 = !DILocation(line: 974, column: 3, scope: !7814)
!7834 = !DILocation(line: 976, column: 4, scope: !7835)
!7835 = distinct !DILexicalBlock(scope: !7807, file: !1, line: 975, column: 8)
!7836 = !DILocation(line: 976, column: 11, scope: !7835)
!7837 = !DILocation(line: 976, column: 16, scope: !7835)
!7838 = !DILocation(line: 976, column: 23, scope: !7835)
!7839 = !DILocation(line: 976, column: 28, scope: !7835)
!7840 = !DILocation(line: 976, column: 35, scope: !7835)
!7841 = !DILocation(line: 976, column: 40, scope: !7835)
!7842 = !DILocation(line: 976, column: 47, scope: !7835)
!7843 = !DILocation(line: 978, column: 3, scope: !7803)
!7844 = !DILocation(line: 978, column: 25, scope: !7803)
!7845 = !DILocation(line: 978, column: 34, scope: !7803)
!7846 = !DILocation(line: 978, column: 39, scope: !7803)
!7847 = !DILocation(line: 978, column: 42, scope: !7803)
!7848 = !DILocation(line: 978, column: 52, scope: !7803)
!7849 = !DILocation(line: 979, column: 2, scope: !7803)
!7850 = !DILocation(line: 969, column: 37, scope: !7797)
!7851 = !DILocation(line: 969, column: 2, scope: !7797)
!7852 = distinct !{!7852, !7801, !7853}
!7853 = !DILocation(line: 979, column: 2, scope: !7794)
!7854 = !DILocation(line: 980, column: 6, scope: !7855)
!7855 = distinct !DILexicalBlock(scope: !7688, file: !1, line: 980, column: 6)
!7856 = !DILocation(line: 980, column: 15, scope: !7855)
!7857 = !DILocation(line: 980, column: 6, scope: !7688)
!7858 = !DILocalVariable(name: "index", scope: !7859, file: !1, line: 981, type: !168)
!7859 = distinct !DILexicalBlock(scope: !7855, file: !1, line: 980, column: 24)
!7860 = !DILocation(line: 981, column: 7, scope: !7859)
!7861 = !DILocation(line: 981, column: 15, scope: !7859)
!7862 = !DILocation(line: 981, column: 17, scope: !7859)
!7863 = !DILocation(line: 981, column: 23, scope: !7859)
!7864 = !DILocation(line: 981, column: 21, scope: !7859)
!7865 = !DILocalVariable(name: "tang", scope: !7859, file: !1, line: 982, type: !438)
!7866 = !DILocation(line: 982, column: 16, scope: !7859)
!7867 = !DILocation(line: 982, column: 24, scope: !7859)
!7868 = !DILocation(line: 982, column: 33, scope: !7859)
!7869 = !DILocation(line: 982, column: 38, scope: !7859)
!7870 = !DILocation(line: 982, column: 23, scope: !7859)
!7871 = !DILocation(line: 982, column: 47, scope: !7859)
!7872 = !DILocation(line: 982, column: 56, scope: !7859)
!7873 = !DILocation(line: 982, column: 61, scope: !7859)
!7874 = !DILocation(line: 982, column: 67, scope: !7859)
!7875 = !DILocation(line: 982, column: 76, scope: !7859)
!7876 = !DILocation(line: 983, column: 3, scope: !7859)
!7877 = !DILocation(line: 983, column: 24, scope: !7859)
!7878 = !DILocation(line: 983, column: 33, scope: !7859)
!7879 = !DILocation(line: 983, column: 38, scope: !7859)
!7880 = !DILocation(line: 983, column: 48, scope: !7859)
!7881 = !DILocation(line: 984, column: 2, scope: !7859)
!7882 = !DILocation(line: 985, column: 1, scope: !7688)
!7883 = distinct !DISubprogram(name: "BM_iter_init", scope: !5654, file: !5654, line: 53, type: !7884, scopeLine: 54, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1952)
!7884 = !DISubroutineType(types: !7885)
!7885 = !{!871, !5657, !1847, !1814, !182}
!7886 = !DILocalVariable(name: "iter", arg: 1, scope: !7883, file: !5654, line: 53, type: !5657)
!7887 = !DILocation(line: 53, column: 38, scope: !7883)
!7888 = !DILocalVariable(name: "bm", arg: 2, scope: !7883, file: !5654, line: 53, type: !1847)
!7889 = !DILocation(line: 53, column: 51, scope: !7883)
!7890 = !DILocalVariable(name: "itype", arg: 3, scope: !7883, file: !5654, line: 53, type: !1814)
!7891 = !DILocation(line: 53, column: 66, scope: !7883)
!7892 = !DILocalVariable(name: "data", arg: 4, scope: !7883, file: !5654, line: 53, type: !182)
!7893 = !DILocation(line: 53, column: 79, scope: !7883)
!7894 = !DILocation(line: 56, column: 16, scope: !7883)
!7895 = !DILocation(line: 56, column: 2, scope: !7883)
!7896 = !DILocation(line: 56, column: 8, scope: !7883)
!7897 = !DILocation(line: 56, column: 14, scope: !7883)
!7898 = !DILocation(line: 59, column: 22, scope: !7883)
!7899 = !DILocation(line: 59, column: 10, scope: !7883)
!7900 = !DILocation(line: 59, column: 2, scope: !7883)
!7901 = !DILocation(line: 63, column: 4, scope: !7902)
!7902 = distinct !DILexicalBlock(scope: !7883, file: !5654, line: 59, column: 29)
!7903 = !DILocation(line: 63, column: 10, scope: !7902)
!7904 = !DILocation(line: 63, column: 16, scope: !7902)
!7905 = !DILocation(line: 64, column: 4, scope: !7902)
!7906 = !DILocation(line: 64, column: 10, scope: !7902)
!7907 = !DILocation(line: 64, column: 16, scope: !7902)
!7908 = !DILocation(line: 65, column: 44, scope: !7902)
!7909 = !DILocation(line: 65, column: 48, scope: !7902)
!7910 = !DILocation(line: 65, column: 4, scope: !7902)
!7911 = !DILocation(line: 65, column: 10, scope: !7902)
!7912 = !DILocation(line: 65, column: 15, scope: !7902)
!7913 = !DILocation(line: 65, column: 28, scope: !7902)
!7914 = !DILocation(line: 65, column: 37, scope: !7902)
!7915 = !DILocation(line: 65, column: 42, scope: !7902)
!7916 = !DILocation(line: 66, column: 4, scope: !7902)
!7917 = !DILocation(line: 70, column: 4, scope: !7902)
!7918 = !DILocation(line: 70, column: 10, scope: !7902)
!7919 = !DILocation(line: 70, column: 16, scope: !7902)
!7920 = !DILocation(line: 71, column: 4, scope: !7902)
!7921 = !DILocation(line: 71, column: 10, scope: !7902)
!7922 = !DILocation(line: 71, column: 16, scope: !7902)
!7923 = !DILocation(line: 72, column: 44, scope: !7902)
!7924 = !DILocation(line: 72, column: 48, scope: !7902)
!7925 = !DILocation(line: 72, column: 4, scope: !7902)
!7926 = !DILocation(line: 72, column: 10, scope: !7902)
!7927 = !DILocation(line: 72, column: 15, scope: !7902)
!7928 = !DILocation(line: 72, column: 28, scope: !7902)
!7929 = !DILocation(line: 72, column: 37, scope: !7902)
!7930 = !DILocation(line: 72, column: 42, scope: !7902)
!7931 = !DILocation(line: 73, column: 4, scope: !7902)
!7932 = !DILocation(line: 77, column: 4, scope: !7902)
!7933 = !DILocation(line: 77, column: 10, scope: !7902)
!7934 = !DILocation(line: 77, column: 16, scope: !7902)
!7935 = !DILocation(line: 78, column: 4, scope: !7902)
!7936 = !DILocation(line: 78, column: 10, scope: !7902)
!7937 = !DILocation(line: 78, column: 16, scope: !7902)
!7938 = !DILocation(line: 79, column: 44, scope: !7902)
!7939 = !DILocation(line: 79, column: 48, scope: !7902)
!7940 = !DILocation(line: 79, column: 4, scope: !7902)
!7941 = !DILocation(line: 79, column: 10, scope: !7902)
!7942 = !DILocation(line: 79, column: 15, scope: !7902)
!7943 = !DILocation(line: 79, column: 28, scope: !7902)
!7944 = !DILocation(line: 79, column: 37, scope: !7902)
!7945 = !DILocation(line: 79, column: 42, scope: !7902)
!7946 = !DILocation(line: 80, column: 4, scope: !7902)
!7947 = !DILocation(line: 84, column: 4, scope: !7902)
!7948 = !DILocation(line: 84, column: 10, scope: !7902)
!7949 = !DILocation(line: 84, column: 16, scope: !7902)
!7950 = !DILocation(line: 85, column: 4, scope: !7902)
!7951 = !DILocation(line: 85, column: 10, scope: !7902)
!7952 = !DILocation(line: 85, column: 16, scope: !7902)
!7953 = !DILocation(line: 86, column: 46, scope: !7902)
!7954 = !DILocation(line: 86, column: 36, scope: !7902)
!7955 = !DILocation(line: 86, column: 4, scope: !7902)
!7956 = !DILocation(line: 86, column: 10, scope: !7902)
!7957 = !DILocation(line: 86, column: 15, scope: !7902)
!7958 = !DILocation(line: 86, column: 28, scope: !7902)
!7959 = !DILocation(line: 86, column: 34, scope: !7902)
!7960 = !DILocation(line: 87, column: 4, scope: !7902)
!7961 = !DILocation(line: 91, column: 4, scope: !7902)
!7962 = !DILocation(line: 91, column: 10, scope: !7902)
!7963 = !DILocation(line: 91, column: 16, scope: !7902)
!7964 = !DILocation(line: 92, column: 4, scope: !7902)
!7965 = !DILocation(line: 92, column: 10, scope: !7902)
!7966 = !DILocation(line: 92, column: 16, scope: !7902)
!7967 = !DILocation(line: 93, column: 46, scope: !7902)
!7968 = !DILocation(line: 93, column: 36, scope: !7902)
!7969 = !DILocation(line: 93, column: 4, scope: !7902)
!7970 = !DILocation(line: 93, column: 10, scope: !7902)
!7971 = !DILocation(line: 93, column: 15, scope: !7902)
!7972 = !DILocation(line: 93, column: 28, scope: !7902)
!7973 = !DILocation(line: 93, column: 34, scope: !7902)
!7974 = !DILocation(line: 94, column: 4, scope: !7902)
!7975 = !DILocation(line: 98, column: 4, scope: !7902)
!7976 = !DILocation(line: 98, column: 10, scope: !7902)
!7977 = !DILocation(line: 98, column: 16, scope: !7902)
!7978 = !DILocation(line: 99, column: 4, scope: !7902)
!7979 = !DILocation(line: 99, column: 10, scope: !7902)
!7980 = !DILocation(line: 99, column: 16, scope: !7902)
!7981 = !DILocation(line: 100, column: 46, scope: !7902)
!7982 = !DILocation(line: 100, column: 36, scope: !7902)
!7983 = !DILocation(line: 100, column: 4, scope: !7902)
!7984 = !DILocation(line: 100, column: 10, scope: !7902)
!7985 = !DILocation(line: 100, column: 15, scope: !7902)
!7986 = !DILocation(line: 100, column: 28, scope: !7902)
!7987 = !DILocation(line: 100, column: 34, scope: !7902)
!7988 = !DILocation(line: 101, column: 4, scope: !7902)
!7989 = !DILocation(line: 105, column: 4, scope: !7902)
!7990 = !DILocation(line: 105, column: 10, scope: !7902)
!7991 = !DILocation(line: 105, column: 16, scope: !7902)
!7992 = !DILocation(line: 106, column: 4, scope: !7902)
!7993 = !DILocation(line: 106, column: 10, scope: !7902)
!7994 = !DILocation(line: 106, column: 16, scope: !7902)
!7995 = !DILocation(line: 107, column: 46, scope: !7902)
!7996 = !DILocation(line: 107, column: 36, scope: !7902)
!7997 = !DILocation(line: 107, column: 4, scope: !7902)
!7998 = !DILocation(line: 107, column: 10, scope: !7902)
!7999 = !DILocation(line: 107, column: 15, scope: !7902)
!8000 = !DILocation(line: 107, column: 28, scope: !7902)
!8001 = !DILocation(line: 107, column: 34, scope: !7902)
!8002 = !DILocation(line: 108, column: 4, scope: !7902)
!8003 = !DILocation(line: 112, column: 4, scope: !7902)
!8004 = !DILocation(line: 112, column: 10, scope: !7902)
!8005 = !DILocation(line: 112, column: 16, scope: !7902)
!8006 = !DILocation(line: 113, column: 4, scope: !7902)
!8007 = !DILocation(line: 113, column: 10, scope: !7902)
!8008 = !DILocation(line: 113, column: 16, scope: !7902)
!8009 = !DILocation(line: 114, column: 46, scope: !7902)
!8010 = !DILocation(line: 114, column: 36, scope: !7902)
!8011 = !DILocation(line: 114, column: 4, scope: !7902)
!8012 = !DILocation(line: 114, column: 10, scope: !7902)
!8013 = !DILocation(line: 114, column: 15, scope: !7902)
!8014 = !DILocation(line: 114, column: 28, scope: !7902)
!8015 = !DILocation(line: 114, column: 34, scope: !7902)
!8016 = !DILocation(line: 115, column: 4, scope: !7902)
!8017 = !DILocation(line: 119, column: 4, scope: !7902)
!8018 = !DILocation(line: 119, column: 10, scope: !7902)
!8019 = !DILocation(line: 119, column: 16, scope: !7902)
!8020 = !DILocation(line: 120, column: 4, scope: !7902)
!8021 = !DILocation(line: 120, column: 10, scope: !7902)
!8022 = !DILocation(line: 120, column: 16, scope: !7902)
!8023 = !DILocation(line: 121, column: 46, scope: !7902)
!8024 = !DILocation(line: 121, column: 36, scope: !7902)
!8025 = !DILocation(line: 121, column: 4, scope: !7902)
!8026 = !DILocation(line: 121, column: 10, scope: !7902)
!8027 = !DILocation(line: 121, column: 15, scope: !7902)
!8028 = !DILocation(line: 121, column: 28, scope: !7902)
!8029 = !DILocation(line: 121, column: 34, scope: !7902)
!8030 = !DILocation(line: 122, column: 4, scope: !7902)
!8031 = !DILocation(line: 126, column: 4, scope: !7902)
!8032 = !DILocation(line: 126, column: 10, scope: !7902)
!8033 = !DILocation(line: 126, column: 16, scope: !7902)
!8034 = !DILocation(line: 127, column: 4, scope: !7902)
!8035 = !DILocation(line: 127, column: 10, scope: !7902)
!8036 = !DILocation(line: 127, column: 16, scope: !7902)
!8037 = !DILocation(line: 128, column: 46, scope: !7902)
!8038 = !DILocation(line: 128, column: 36, scope: !7902)
!8039 = !DILocation(line: 128, column: 4, scope: !7902)
!8040 = !DILocation(line: 128, column: 10, scope: !7902)
!8041 = !DILocation(line: 128, column: 15, scope: !7902)
!8042 = !DILocation(line: 128, column: 28, scope: !7902)
!8043 = !DILocation(line: 128, column: 34, scope: !7902)
!8044 = !DILocation(line: 129, column: 4, scope: !7902)
!8045 = !DILocation(line: 133, column: 4, scope: !7902)
!8046 = !DILocation(line: 133, column: 10, scope: !7902)
!8047 = !DILocation(line: 133, column: 16, scope: !7902)
!8048 = !DILocation(line: 134, column: 4, scope: !7902)
!8049 = !DILocation(line: 134, column: 10, scope: !7902)
!8050 = !DILocation(line: 134, column: 16, scope: !7902)
!8051 = !DILocation(line: 135, column: 46, scope: !7902)
!8052 = !DILocation(line: 135, column: 36, scope: !7902)
!8053 = !DILocation(line: 135, column: 4, scope: !7902)
!8054 = !DILocation(line: 135, column: 10, scope: !7902)
!8055 = !DILocation(line: 135, column: 15, scope: !7902)
!8056 = !DILocation(line: 135, column: 28, scope: !7902)
!8057 = !DILocation(line: 135, column: 34, scope: !7902)
!8058 = !DILocation(line: 136, column: 4, scope: !7902)
!8059 = !DILocation(line: 140, column: 4, scope: !7902)
!8060 = !DILocation(line: 140, column: 10, scope: !7902)
!8061 = !DILocation(line: 140, column: 16, scope: !7902)
!8062 = !DILocation(line: 141, column: 4, scope: !7902)
!8063 = !DILocation(line: 141, column: 10, scope: !7902)
!8064 = !DILocation(line: 141, column: 16, scope: !7902)
!8065 = !DILocation(line: 142, column: 46, scope: !7902)
!8066 = !DILocation(line: 142, column: 36, scope: !7902)
!8067 = !DILocation(line: 142, column: 4, scope: !7902)
!8068 = !DILocation(line: 142, column: 10, scope: !7902)
!8069 = !DILocation(line: 142, column: 15, scope: !7902)
!8070 = !DILocation(line: 142, column: 28, scope: !7902)
!8071 = !DILocation(line: 142, column: 34, scope: !7902)
!8072 = !DILocation(line: 143, column: 4, scope: !7902)
!8073 = !DILocation(line: 147, column: 4, scope: !7902)
!8074 = !DILocation(line: 147, column: 10, scope: !7902)
!8075 = !DILocation(line: 147, column: 16, scope: !7902)
!8076 = !DILocation(line: 148, column: 4, scope: !7902)
!8077 = !DILocation(line: 148, column: 10, scope: !7902)
!8078 = !DILocation(line: 148, column: 16, scope: !7902)
!8079 = !DILocation(line: 149, column: 46, scope: !7902)
!8080 = !DILocation(line: 149, column: 36, scope: !7902)
!8081 = !DILocation(line: 149, column: 4, scope: !7902)
!8082 = !DILocation(line: 149, column: 10, scope: !7902)
!8083 = !DILocation(line: 149, column: 15, scope: !7902)
!8084 = !DILocation(line: 149, column: 28, scope: !7902)
!8085 = !DILocation(line: 149, column: 34, scope: !7902)
!8086 = !DILocation(line: 150, column: 4, scope: !7902)
!8087 = !DILocation(line: 154, column: 4, scope: !7902)
!8088 = !DILocation(line: 158, column: 2, scope: !7883)
!8089 = !DILocation(line: 158, column: 8, scope: !7883)
!8090 = !DILocation(line: 158, column: 14, scope: !7883)
!8091 = !DILocation(line: 160, column: 2, scope: !7883)
!8092 = !DILocation(line: 161, column: 1, scope: !7883)
!8093 = distinct !DISubprogram(name: "axis_from_enum_v3", scope: !1, file: !1, line: 1816, type: !8094, scopeLine: 1817, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1952)
!8094 = !DISubroutineType(types: !8095)
!8095 = !{null, !464, !1814}
!8096 = !DILocalVariable(name: "v", arg: 1, scope: !8093, file: !1, line: 1816, type: !464)
!8097 = !DILocation(line: 1816, column: 37, scope: !8093)
!8098 = !DILocalVariable(name: "axis", arg: 2, scope: !8093, file: !1, line: 1816, type: !1814)
!8099 = !DILocation(line: 1816, column: 54, scope: !8093)
!8100 = !DILocation(line: 1818, column: 10, scope: !8093)
!8101 = !DILocation(line: 1818, column: 2, scope: !8093)
!8102 = !DILocation(line: 1819, column: 6, scope: !8103)
!8103 = distinct !DILexicalBlock(scope: !8093, file: !1, line: 1819, column: 6)
!8104 = !DILocation(line: 1819, column: 11, scope: !8103)
!8105 = !DILocation(line: 1819, column: 6, scope: !8093)
!8106 = !DILocation(line: 1819, column: 16, scope: !8103)
!8107 = !DILocation(line: 1819, column: 18, scope: !8103)
!8108 = !DILocation(line: 1819, column: 28, scope: !8103)
!8109 = !DILocation(line: 1820, column: 16, scope: !8103)
!8110 = !DILocation(line: 1820, column: 18, scope: !8103)
!8111 = !DILocation(line: 1820, column: 23, scope: !8103)
!8112 = !DILocation(line: 1820, column: 28, scope: !8103)
!8113 = !DILocation(line: 1821, column: 1, scope: !8093)
!8114 = distinct !DISubprogram(name: "normalize_v3", scope: !6822, file: !6822, line: 830, type: !8115, scopeLine: 831, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1952)
!8115 = !DISubroutineType(types: !8116)
!8116 = !{!224, !464}
!8117 = !DILocalVariable(name: "n", arg: 1, scope: !8114, file: !6822, line: 830, type: !464)
!8118 = !DILocation(line: 830, column: 34, scope: !8114)
!8119 = !DILocation(line: 832, column: 25, scope: !8114)
!8120 = !DILocation(line: 832, column: 28, scope: !8114)
!8121 = !DILocation(line: 832, column: 9, scope: !8114)
!8122 = !DILocation(line: 832, column: 2, scope: !8114)
!8123 = distinct !DISubprogram(name: "copy_v4_v4_char", scope: !6822, file: !6822, line: 114, type: !8124, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1952)
!8124 = !DISubroutineType(types: !8125)
!8125 = !{null, !667, !1813}
!8126 = !DILocalVariable(name: "r", arg: 1, scope: !8123, file: !6822, line: 114, type: !667)
!8127 = !DILocation(line: 114, column: 35, scope: !8123)
!8128 = !DILocalVariable(name: "a", arg: 2, scope: !8123, file: !6822, line: 114, type: !1813)
!8129 = !DILocation(line: 114, column: 52, scope: !8123)
!8130 = !DILocation(line: 116, column: 9, scope: !8123)
!8131 = !DILocation(line: 116, column: 2, scope: !8123)
!8132 = !DILocation(line: 116, column: 7, scope: !8123)
!8133 = !DILocation(line: 117, column: 9, scope: !8123)
!8134 = !DILocation(line: 117, column: 2, scope: !8123)
!8135 = !DILocation(line: 117, column: 7, scope: !8123)
!8136 = !DILocation(line: 118, column: 9, scope: !8123)
!8137 = !DILocation(line: 118, column: 2, scope: !8123)
!8138 = !DILocation(line: 118, column: 7, scope: !8123)
!8139 = !DILocation(line: 119, column: 9, scope: !8123)
!8140 = !DILocation(line: 119, column: 2, scope: !8123)
!8141 = !DILocation(line: 119, column: 7, scope: !8123)
!8142 = !DILocation(line: 120, column: 1, scope: !8123)
!8143 = distinct !DISubprogram(name: "normalize_v3_v3", scope: !6822, file: !6822, line: 788, type: !8144, scopeLine: 789, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1952)
!8144 = !DISubroutineType(types: !8145)
!8145 = !{!224, !464, !438}
!8146 = !DILocalVariable(name: "r", arg: 1, scope: !8143, file: !6822, line: 788, type: !464)
!8147 = !DILocation(line: 788, column: 37, scope: !8143)
!8148 = !DILocalVariable(name: "a", arg: 2, scope: !8143, file: !6822, line: 788, type: !438)
!8149 = !DILocation(line: 788, column: 55, scope: !8143)
!8150 = !DILocalVariable(name: "d", scope: !8143, file: !6822, line: 790, type: !224)
!8151 = !DILocation(line: 790, column: 8, scope: !8143)
!8152 = !DILocation(line: 790, column: 21, scope: !8143)
!8153 = !DILocation(line: 790, column: 24, scope: !8143)
!8154 = !DILocation(line: 790, column: 12, scope: !8143)
!8155 = !DILocation(line: 794, column: 6, scope: !8156)
!8156 = distinct !DILexicalBlock(scope: !8143, file: !6822, line: 794, column: 6)
!8157 = !DILocation(line: 794, column: 8, scope: !8156)
!8158 = !DILocation(line: 794, column: 6, scope: !8143)
!8159 = !DILocation(line: 795, column: 13, scope: !8160)
!8160 = distinct !DILexicalBlock(scope: !8156, file: !6822, line: 794, column: 20)
!8161 = !DILocation(line: 795, column: 7, scope: !8160)
!8162 = !DILocation(line: 795, column: 5, scope: !8160)
!8163 = !DILocation(line: 796, column: 15, scope: !8160)
!8164 = !DILocation(line: 796, column: 18, scope: !8160)
!8165 = !DILocation(line: 796, column: 28, scope: !8160)
!8166 = !DILocation(line: 796, column: 26, scope: !8160)
!8167 = !DILocation(line: 796, column: 3, scope: !8160)
!8168 = !DILocation(line: 797, column: 2, scope: !8160)
!8169 = !DILocation(line: 799, column: 11, scope: !8170)
!8170 = distinct !DILexicalBlock(scope: !8156, file: !6822, line: 798, column: 7)
!8171 = !DILocation(line: 799, column: 3, scope: !8170)
!8172 = !DILocation(line: 800, column: 5, scope: !8170)
!8173 = !DILocation(line: 803, column: 9, scope: !8143)
!8174 = !DILocation(line: 803, column: 2, scope: !8143)
!8175 = distinct !DISubprogram(name: "dot_v3v3", scope: !6822, file: !6822, line: 619, type: !8176, scopeLine: 620, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1952)
!8176 = !DISubroutineType(types: !8177)
!8177 = !{!224, !438, !438}
!8178 = !DILocalVariable(name: "a", arg: 1, scope: !8175, file: !6822, line: 619, type: !438)
!8179 = !DILocation(line: 619, column: 36, scope: !8175)
!8180 = !DILocalVariable(name: "b", arg: 2, scope: !8175, file: !6822, line: 619, type: !438)
!8181 = !DILocation(line: 619, column: 54, scope: !8175)
!8182 = !DILocation(line: 621, column: 9, scope: !8175)
!8183 = !DILocation(line: 621, column: 16, scope: !8175)
!8184 = !DILocation(line: 621, column: 14, scope: !8175)
!8185 = !DILocation(line: 621, column: 23, scope: !8175)
!8186 = !DILocation(line: 621, column: 30, scope: !8175)
!8187 = !DILocation(line: 621, column: 28, scope: !8175)
!8188 = !DILocation(line: 621, column: 21, scope: !8175)
!8189 = !DILocation(line: 621, column: 37, scope: !8175)
!8190 = !DILocation(line: 621, column: 44, scope: !8175)
!8191 = !DILocation(line: 621, column: 42, scope: !8175)
!8192 = !DILocation(line: 621, column: 35, scope: !8175)
!8193 = !DILocation(line: 621, column: 2, scope: !8175)
!8194 = distinct !DISubprogram(name: "mul_v3_v3fl", scope: !6822, file: !6822, line: 399, type: !8195, scopeLine: 400, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1952)
!8195 = !DISubroutineType(types: !8196)
!8196 = !{null, !464, !438, !224}
!8197 = !DILocalVariable(name: "r", arg: 1, scope: !8194, file: !6822, line: 399, type: !464)
!8198 = !DILocation(line: 399, column: 32, scope: !8194)
!8199 = !DILocalVariable(name: "a", arg: 2, scope: !8194, file: !6822, line: 399, type: !438)
!8200 = !DILocation(line: 399, column: 50, scope: !8194)
!8201 = !DILocalVariable(name: "f", arg: 3, scope: !8194, file: !6822, line: 399, type: !224)
!8202 = !DILocation(line: 399, column: 62, scope: !8194)
!8203 = !DILocation(line: 401, column: 9, scope: !8194)
!8204 = !DILocation(line: 401, column: 16, scope: !8194)
!8205 = !DILocation(line: 401, column: 14, scope: !8194)
!8206 = !DILocation(line: 401, column: 2, scope: !8194)
!8207 = !DILocation(line: 401, column: 7, scope: !8194)
!8208 = !DILocation(line: 402, column: 9, scope: !8194)
!8209 = !DILocation(line: 402, column: 16, scope: !8194)
!8210 = !DILocation(line: 402, column: 14, scope: !8194)
!8211 = !DILocation(line: 402, column: 2, scope: !8194)
!8212 = !DILocation(line: 402, column: 7, scope: !8194)
!8213 = !DILocation(line: 403, column: 9, scope: !8194)
!8214 = !DILocation(line: 403, column: 16, scope: !8194)
!8215 = !DILocation(line: 403, column: 14, scope: !8194)
!8216 = !DILocation(line: 403, column: 2, scope: !8194)
!8217 = !DILocation(line: 403, column: 7, scope: !8194)
!8218 = !DILocation(line: 404, column: 1, scope: !8194)
!8219 = distinct !DISubprogram(name: "uv_from_jitter_v2", scope: !1, file: !1, line: 1880, type: !6840, scopeLine: 1881, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1952)
!8220 = !DILocalVariable(name: "uv", arg: 1, scope: !8219, file: !1, line: 1880, type: !464)
!8221 = !DILocation(line: 1880, column: 37, scope: !8219)
!8222 = !DILocation(line: 1882, column: 2, scope: !8219)
!8223 = !DILocation(line: 1882, column: 8, scope: !8219)
!8224 = !DILocation(line: 1883, column: 2, scope: !8219)
!8225 = !DILocation(line: 1883, column: 8, scope: !8219)
!8226 = !DILocation(line: 1884, column: 6, scope: !8227)
!8227 = distinct !DILexicalBlock(scope: !8219, file: !1, line: 1884, column: 6)
!8228 = !DILocation(line: 1884, column: 14, scope: !8227)
!8229 = !DILocation(line: 1884, column: 12, scope: !8227)
!8230 = !DILocation(line: 1884, column: 20, scope: !8227)
!8231 = !DILocation(line: 1884, column: 6, scope: !8219)
!8232 = !DILocation(line: 1885, column: 18, scope: !8233)
!8233 = distinct !DILexicalBlock(scope: !8227, file: !1, line: 1884, column: 28)
!8234 = !DILocation(line: 1885, column: 16, scope: !8233)
!8235 = !DILocation(line: 1885, column: 3, scope: !8233)
!8236 = !DILocation(line: 1885, column: 9, scope: !8233)
!8237 = !DILocation(line: 1886, column: 18, scope: !8233)
!8238 = !DILocation(line: 1886, column: 16, scope: !8233)
!8239 = !DILocation(line: 1886, column: 3, scope: !8233)
!8240 = !DILocation(line: 1886, column: 9, scope: !8233)
!8241 = !DILocation(line: 1887, column: 2, scope: !8233)
!8242 = !DILocation(line: 1889, column: 2, scope: !8243)
!8243 = distinct !DILexicalBlock(scope: !8244, file: !1, line: 1889, column: 2)
!8244 = distinct !DILexicalBlock(scope: !8219, file: !1, line: 1889, column: 2)
!8245 = !DILocation(line: 1889, column: 2, scope: !8244)
!8246 = !DILocation(line: 1889, column: 2, scope: !8247)
!8247 = distinct !DILexicalBlock(scope: !8243, file: !1, line: 1889, column: 2)
!8248 = !DILocation(line: 1890, column: 2, scope: !8249)
!8249 = distinct !DILexicalBlock(scope: !8250, file: !1, line: 1890, column: 2)
!8250 = distinct !DILexicalBlock(scope: !8219, file: !1, line: 1890, column: 2)
!8251 = !DILocation(line: 1890, column: 2, scope: !8250)
!8252 = !DILocation(line: 1890, column: 2, scope: !8253)
!8253 = distinct !DILexicalBlock(scope: !8249, file: !1, line: 1890, column: 2)
!8254 = !DILocation(line: 1891, column: 1, scope: !8219)
!8255 = distinct !DISubprogram(name: "madd_v3_v3fl", scope: !6822, file: !6822, line: 507, type: !8195, scopeLine: 508, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1952)
!8256 = !DILocalVariable(name: "r", arg: 1, scope: !8255, file: !6822, line: 507, type: !464)
!8257 = !DILocation(line: 507, column: 33, scope: !8255)
!8258 = !DILocalVariable(name: "a", arg: 2, scope: !8255, file: !6822, line: 507, type: !438)
!8259 = !DILocation(line: 507, column: 51, scope: !8255)
!8260 = !DILocalVariable(name: "f", arg: 3, scope: !8255, file: !6822, line: 507, type: !224)
!8261 = !DILocation(line: 507, column: 63, scope: !8255)
!8262 = !DILocation(line: 509, column: 10, scope: !8255)
!8263 = !DILocation(line: 509, column: 17, scope: !8255)
!8264 = !DILocation(line: 509, column: 15, scope: !8255)
!8265 = !DILocation(line: 509, column: 2, scope: !8255)
!8266 = !DILocation(line: 509, column: 7, scope: !8255)
!8267 = !DILocation(line: 510, column: 10, scope: !8255)
!8268 = !DILocation(line: 510, column: 17, scope: !8255)
!8269 = !DILocation(line: 510, column: 15, scope: !8255)
!8270 = !DILocation(line: 510, column: 2, scope: !8255)
!8271 = !DILocation(line: 510, column: 7, scope: !8255)
!8272 = !DILocation(line: 511, column: 10, scope: !8255)
!8273 = !DILocation(line: 511, column: 17, scope: !8255)
!8274 = !DILocation(line: 511, column: 15, scope: !8255)
!8275 = !DILocation(line: 511, column: 2, scope: !8255)
!8276 = !DILocation(line: 511, column: 7, scope: !8255)
!8277 = !DILocation(line: 512, column: 1, scope: !8255)
!8278 = distinct !DISubprogram(name: "sub_v3_v3v3", scope: !6822, file: !6822, line: 357, type: !8279, scopeLine: 358, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1952)
!8279 = !DISubroutineType(types: !8280)
!8280 = !{null, !464, !438, !438}
!8281 = !DILocalVariable(name: "r", arg: 1, scope: !8278, file: !6822, line: 357, type: !464)
!8282 = !DILocation(line: 357, column: 32, scope: !8278)
!8283 = !DILocalVariable(name: "a", arg: 2, scope: !8278, file: !6822, line: 357, type: !438)
!8284 = !DILocation(line: 357, column: 50, scope: !8278)
!8285 = !DILocalVariable(name: "b", arg: 3, scope: !8278, file: !6822, line: 357, type: !438)
!8286 = !DILocation(line: 357, column: 68, scope: !8278)
!8287 = !DILocation(line: 359, column: 9, scope: !8278)
!8288 = !DILocation(line: 359, column: 16, scope: !8278)
!8289 = !DILocation(line: 359, column: 14, scope: !8278)
!8290 = !DILocation(line: 359, column: 2, scope: !8278)
!8291 = !DILocation(line: 359, column: 7, scope: !8278)
!8292 = !DILocation(line: 360, column: 9, scope: !8278)
!8293 = !DILocation(line: 360, column: 16, scope: !8278)
!8294 = !DILocation(line: 360, column: 14, scope: !8278)
!8295 = !DILocation(line: 360, column: 2, scope: !8278)
!8296 = !DILocation(line: 360, column: 7, scope: !8278)
!8297 = !DILocation(line: 361, column: 9, scope: !8278)
!8298 = !DILocation(line: 361, column: 16, scope: !8278)
!8299 = !DILocation(line: 361, column: 14, scope: !8278)
!8300 = !DILocation(line: 361, column: 2, scope: !8278)
!8301 = !DILocation(line: 361, column: 7, scope: !8278)
!8302 = !DILocation(line: 362, column: 1, scope: !8278)
!8303 = distinct !DISubprogram(name: "_bm_elem_index_set", scope: !6970, file: !6970, line: 114, type: !8304, scopeLine: 115, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1952)
!8304 = !DISubroutineType(types: !8305)
!8305 = !{null, !8306, !1967}
!8306 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1735, size: 64)
!8307 = !DILocalVariable(name: "head", arg: 1, scope: !8303, file: !6970, line: 114, type: !8306)
!8308 = !DILocation(line: 114, column: 46, scope: !8303)
!8309 = !DILocalVariable(name: "index", arg: 2, scope: !8303, file: !6970, line: 114, type: !1967)
!8310 = !DILocation(line: 114, column: 62, scope: !8303)
!8311 = !DILocation(line: 116, column: 16, scope: !8303)
!8312 = !DILocation(line: 116, column: 2, scope: !8303)
!8313 = !DILocation(line: 116, column: 8, scope: !8303)
!8314 = !DILocation(line: 116, column: 14, scope: !8303)
!8315 = !DILocation(line: 117, column: 1, scope: !8303)
!8316 = distinct !DISubprogram(name: "negate_v3", scope: !6822, file: !6822, line: 576, type: !6840, scopeLine: 577, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1952)
!8317 = !DILocalVariable(name: "r", arg: 1, scope: !8316, file: !6822, line: 576, type: !464)
!8318 = !DILocation(line: 576, column: 30, scope: !8316)
!8319 = !DILocation(line: 578, column: 10, scope: !8316)
!8320 = !DILocation(line: 578, column: 9, scope: !8316)
!8321 = !DILocation(line: 578, column: 2, scope: !8316)
!8322 = !DILocation(line: 578, column: 7, scope: !8316)
!8323 = !DILocation(line: 579, column: 10, scope: !8316)
!8324 = !DILocation(line: 579, column: 9, scope: !8316)
!8325 = !DILocation(line: 579, column: 2, scope: !8316)
!8326 = !DILocation(line: 579, column: 7, scope: !8316)
!8327 = !DILocation(line: 580, column: 10, scope: !8316)
!8328 = !DILocation(line: 580, column: 9, scope: !8316)
!8329 = !DILocation(line: 580, column: 2, scope: !8316)
!8330 = !DILocation(line: 580, column: 7, scope: !8316)
!8331 = !DILocation(line: 581, column: 1, scope: !8316)
!8332 = distinct !DISubprogram(name: "max_ff", scope: !8333, file: !8333, line: 206, type: !8334, scopeLine: 207, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !1952)
!8333 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_base_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!8334 = !DISubroutineType(types: !8335)
!8335 = !{!224, !224, !224}
!8336 = !DILocalVariable(name: "a", arg: 1, scope: !8332, file: !8333, line: 206, type: !224)
!8337 = !DILocation(line: 206, column: 28, scope: !8332)
!8338 = !DILocalVariable(name: "b", arg: 2, scope: !8332, file: !8333, line: 206, type: !224)
!8339 = !DILocation(line: 206, column: 37, scope: !8332)
!8340 = !DILocation(line: 208, column: 10, scope: !8332)
!8341 = !DILocation(line: 208, column: 14, scope: !8332)
!8342 = !DILocation(line: 208, column: 12, scope: !8332)
!8343 = !DILocation(line: 208, column: 9, scope: !8332)
!8344 = !DILocation(line: 208, column: 19, scope: !8332)
!8345 = !DILocation(line: 208, column: 23, scope: !8332)
!8346 = !DILocation(line: 208, column: 2, scope: !8332)
