; ModuleID = 'magick/statistic.c'
source_filename = "magick/statistic.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._Image = type { i32, i32, i32, i64, i32, i32, i32, i64, i64, i64, i64, %struct._PixelPacket*, %struct._PixelPacket, %struct._PixelPacket, %struct._PixelPacket, double, %struct._ChromaticityInfo, i32, i8*, i32, i8*, i8*, i8*, i64, double, double, %struct._RectangleInfo, %struct._RectangleInfo, %struct._RectangleInfo, double, double, double, i32, i32, i32, i32, i32, i32, %struct._Image*, i64, i64, i64, i64, i64, i64, %struct._ErrorInfo, %struct._TimerInfo, i32 (i8*, i64, i64, i8*)*, i8*, i8*, i8*, %struct._Ascii85Info*, %struct._BlobInfo*, [4096 x i8], [4096 x i8], [4096 x i8], i64, i64, %struct._ExceptionInfo, i32, i64, %struct.SemaphoreInfo*, %struct._ProfileInfo, %struct._ProfileInfo, %struct._ProfileInfo*, i64, i64, %struct._Image*, %struct._Image*, %struct._Image*, i32, i32, %struct._PixelPacket, %struct._Image*, %struct._RectangleInfo, i8*, i8*, i32, i32, i64, i32, i64, i64, i32, i64 }
%struct._ChromaticityInfo = type { %struct._PrimaryInfo, %struct._PrimaryInfo, %struct._PrimaryInfo, %struct._PrimaryInfo }
%struct._PrimaryInfo = type { double, double, double }
%struct._ErrorInfo = type { double, double, double }
%struct._TimerInfo = type { %struct._Timer, %struct._Timer, i32, i64 }
%struct._Timer = type { double, double, double }
%struct._Ascii85Info = type opaque
%struct._BlobInfo = type opaque
%struct._ExceptionInfo = type { i32, i32, i8*, i8*, i8*, i32, %struct.SemaphoreInfo*, i64 }
%struct.SemaphoreInfo = type opaque
%struct._ProfileInfo = type { i8*, i64, i8*, i64 }
%struct._PixelPacket = type { i16, i16, i16, i16 }
%struct._RectangleInfo = type { i64, i64, i64, i64 }
%struct._CacheView = type opaque
%struct._RandomInfo = type opaque
%struct._MagickPixelPacket = type { i32, i32, i32, double, i64, float, float, float, float, float }
%struct._ChannelStatistics = type { i64, double, double, double, double, double, double, double, double, double, double, double }
%struct._ChannelMoments = type { [32 x double], %struct._PointInfo, %struct._PointInfo, double, double, double }
%struct._PointInfo = type { double, double }
%struct._ChannelPerceptualHash = type { [32 x double], [32 x double] }
%struct._PixelList = type { i64, i64, i64, [5 x %struct._SkipList] }
%struct._SkipList = type { i64, %struct._ListNode* }
%struct._ListNode = type { [9 x i64], i64, i64 }

@.str = private unnamed_addr constant [19 x i8] c"magick/statistic.c\00", align 1
@.str.1 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.2 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@.str.3 = private unnamed_addr constant [23 x i8] c"MemoryAllocationFailed\00", align 1
@.str.4 = private unnamed_addr constant [5 x i8] c"`%s'\00", align 1
@.str.5 = private unnamed_addr constant [15 x i8] c"Evaluate/Image\00", align 1
@.str.6 = private unnamed_addr constant [16 x i8] c"Function/Image \00", align 1
@.str.7 = private unnamed_addr constant [17 x i8] c"Polynomial/Image\00", align 1
@.str.8 = private unnamed_addr constant [16 x i8] c"Statistic/Image\00", align 1
@.str.9 = private unnamed_addr constant [6 x i8] c"%s/%s\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @EvaluateImage(%struct._Image* %image, i32 %op, double %value, %struct._ExceptionInfo* %exception) #0 !dbg !819 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %op.addr = alloca i32, align 4
  %value.addr = alloca double, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %status = alloca i32, align 4
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !827, metadata !DIExpression()), !dbg !828
  store i32 %op, i32* %op.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %op.addr, metadata !829, metadata !DIExpression()), !dbg !830
  store double %value, double* %value.addr, align 8
  call void @llvm.dbg.declare(metadata double* %value.addr, metadata !831, metadata !DIExpression()), !dbg !832
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !833, metadata !DIExpression()), !dbg !834
  call void @llvm.dbg.declare(metadata i32* %status, metadata !835, metadata !DIExpression()), !dbg !836
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !837
  %1 = load i32, i32* %op.addr, align 4, !dbg !838
  %2 = load double, double* %value.addr, align 8, !dbg !839
  %3 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !840
  %call = call i32 @EvaluateImageChannel(%struct._Image* %0, i32 47, i32 %1, double %2, %struct._ExceptionInfo* %3), !dbg !841
  store i32 %call, i32* %status, align 4, !dbg !842
  %4 = load i32, i32* %status, align 4, !dbg !843
  ret i32 %4, !dbg !844
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @EvaluateImageChannel(%struct._Image* %image, i32 %channel, i32 %op, double %value, %struct._ExceptionInfo* %exception) #0 !dbg !845 {
entry:
  %retval = alloca i32, align 4
  %image.addr = alloca %struct._Image*, align 8
  %channel.addr = alloca i32, align 4
  %op.addr = alloca i32, align 4
  %value.addr = alloca double, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %image_view = alloca %struct._CacheView*, align 8
  %status = alloca i32, align 4
  %progress = alloca i64, align 8
  %random_info = alloca %struct._RandomInfo**, align 8
  %y = alloca i64, align 8
  %id = alloca i32, align 4
  %indexes = alloca i16*, align 8
  %q = alloca %struct._PixelPacket*, align 8
  %x = alloca i64, align 8
  %proceed = alloca i32, align 4
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !850, metadata !DIExpression()), !dbg !851
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !852, metadata !DIExpression()), !dbg !853
  store i32 %op, i32* %op.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %op.addr, metadata !854, metadata !DIExpression()), !dbg !855
  store double %value, double* %value.addr, align 8
  call void @llvm.dbg.declare(metadata double* %value.addr, metadata !856, metadata !DIExpression()), !dbg !857
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !858, metadata !DIExpression()), !dbg !859
  call void @llvm.dbg.declare(metadata %struct._CacheView** %image_view, metadata !860, metadata !DIExpression()), !dbg !865
  call void @llvm.dbg.declare(metadata i32* %status, metadata !866, metadata !DIExpression()), !dbg !867
  call void @llvm.dbg.declare(metadata i64* %progress, metadata !868, metadata !DIExpression()), !dbg !869
  call void @llvm.dbg.declare(metadata %struct._RandomInfo*** %random_info, metadata !870, metadata !DIExpression()), !dbg !872
  call void @llvm.dbg.declare(metadata i64* %y, metadata !873, metadata !DIExpression()), !dbg !874
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !875
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !877
  %1 = load i32, i32* %debug, align 8, !dbg !877
  %cmp = icmp ne i32 %1, 0, !dbg !878
  br i1 %cmp, label %if.then, label %if.end, !dbg !879

if.then:                                          ; preds = %entry
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !880
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %2, i32 0, i32 53, !dbg !881
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !880
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 773, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !882
  br label %if.end, !dbg !883

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !884
  %call1 = call i32 @SetImageStorageClass(%struct._Image* %3, i32 1), !dbg !886
  %cmp2 = icmp eq i32 %call1, 0, !dbg !887
  br i1 %cmp2, label %if.then3, label %if.end5, !dbg !888

if.then3:                                         ; preds = %if.end
  %4 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !889
  %5 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !891
  %exception4 = getelementptr inbounds %struct._Image, %struct._Image* %5, i32 0, i32 58, !dbg !892
  call void @InheritException(%struct._ExceptionInfo* %4, %struct._ExceptionInfo* %exception4), !dbg !893
  store i32 0, i32* %retval, align 4, !dbg !894
  br label %return, !dbg !894

if.end5:                                          ; preds = %if.end
  store i32 1, i32* %status, align 4, !dbg !895
  store i64 0, i64* %progress, align 8, !dbg !896
  %call6 = call %struct._RandomInfo** @AcquireRandomInfoThreadSet(), !dbg !897
  store %struct._RandomInfo** %call6, %struct._RandomInfo*** %random_info, align 8, !dbg !898
  %6 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !899
  %7 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !900
  %call7 = call %struct._CacheView* @AcquireAuthenticCacheView(%struct._Image* %6, %struct._ExceptionInfo* %7), !dbg !901
  store %struct._CacheView* %call7, %struct._CacheView** %image_view, align 8, !dbg !902
  store i64 0, i64* %y, align 8, !dbg !903
  br label %for.cond, !dbg !905

for.cond:                                         ; preds = %for.inc116, %if.end5
  %8 = load i64, i64* %y, align 8, !dbg !906
  %9 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !908
  %rows = getelementptr inbounds %struct._Image, %struct._Image* %9, i32 0, i32 8, !dbg !909
  %10 = load i64, i64* %rows, align 8, !dbg !909
  %cmp8 = icmp slt i64 %8, %10, !dbg !910
  br i1 %cmp8, label %for.body, label %for.end118, !dbg !911

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %id, metadata !912, metadata !DIExpression()), !dbg !915
  %call9 = call i32 @GetOpenMPThreadId(), !dbg !916
  store i32 %call9, i32* %id, align 4, !dbg !915
  call void @llvm.dbg.declare(metadata i16** %indexes, metadata !917, metadata !DIExpression()), !dbg !919
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q, metadata !920, metadata !DIExpression()), !dbg !922
  call void @llvm.dbg.declare(metadata i64* %x, metadata !923, metadata !DIExpression()), !dbg !924
  %11 = load i32, i32* %status, align 4, !dbg !925
  %cmp10 = icmp eq i32 %11, 0, !dbg !927
  br i1 %cmp10, label %if.then11, label %if.end12, !dbg !928

if.then11:                                        ; preds = %for.body
  br label %for.inc116, !dbg !929

if.end12:                                         ; preds = %for.body
  %12 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !930
  %13 = load i64, i64* %y, align 8, !dbg !931
  %14 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !932
  %columns = getelementptr inbounds %struct._Image, %struct._Image* %14, i32 0, i32 7, !dbg !933
  %15 = load i64, i64* %columns, align 8, !dbg !933
  %16 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !934
  %call13 = call %struct._PixelPacket* @GetCacheViewAuthenticPixels(%struct._CacheView* %12, i64 0, i64 %13, i64 %15, i64 1, %struct._ExceptionInfo* %16), !dbg !935
  store %struct._PixelPacket* %call13, %struct._PixelPacket** %q, align 8, !dbg !936
  %17 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !937
  %cmp14 = icmp eq %struct._PixelPacket* %17, null, !dbg !939
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !940

if.then15:                                        ; preds = %if.end12
  store i32 0, i32* %status, align 4, !dbg !941
  br label %for.inc116, !dbg !943

if.end16:                                         ; preds = %if.end12
  %18 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !944
  %call17 = call i16* @GetCacheViewAuthenticIndexQueue(%struct._CacheView* %18), !dbg !945
  store i16* %call17, i16** %indexes, align 8, !dbg !946
  store i64 0, i64* %x, align 8, !dbg !947
  br label %for.cond18, !dbg !949

for.cond18:                                       ; preds = %for.inc, %if.end16
  %19 = load i64, i64* %x, align 8, !dbg !950
  %20 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !952
  %columns19 = getelementptr inbounds %struct._Image, %struct._Image* %20, i32 0, i32 7, !dbg !953
  %21 = load i64, i64* %columns19, align 8, !dbg !953
  %cmp20 = icmp slt i64 %19, %21, !dbg !954
  br i1 %cmp20, label %for.body21, label %for.end, !dbg !955

for.body21:                                       ; preds = %for.cond18
  %22 = load i32, i32* %channel.addr, align 4, !dbg !956
  %and = and i32 %22, 1, !dbg !959
  %cmp22 = icmp ne i32 %and, 0, !dbg !960
  br i1 %cmp22, label %if.then23, label %if.end27, !dbg !961

if.then23:                                        ; preds = %for.body21
  %23 = load %struct._RandomInfo**, %struct._RandomInfo*** %random_info, align 8, !dbg !962
  %24 = load i32, i32* %id, align 4, !dbg !962
  %idxprom = sext i32 %24 to i64, !dbg !962
  %arrayidx = getelementptr inbounds %struct._RandomInfo*, %struct._RandomInfo** %23, i64 %idxprom, !dbg !962
  %25 = load %struct._RandomInfo*, %struct._RandomInfo** %arrayidx, align 8, !dbg !962
  %26 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !962
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %26, i32 0, i32 2, !dbg !962
  %27 = load i16, i16* %red, align 2, !dbg !962
  %28 = load i32, i32* %op.addr, align 4, !dbg !962
  %29 = load double, double* %value.addr, align 8, !dbg !962
  %conv = fptrunc double %29 to float, !dbg !962
  %call24 = call float @ApplyEvaluateOperator(%struct._RandomInfo* %25, i16 zeroext %27, i32 %28, float %conv), !dbg !962
  %call25 = call zeroext i16 @ClampToQuantum(float %call24), !dbg !962
  %30 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !962
  %red26 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %30, i32 0, i32 2, !dbg !962
  store i16 %call25, i16* %red26, align 2, !dbg !962
  br label %if.end27, !dbg !962

if.end27:                                         ; preds = %if.then23, %for.body21
  %31 = load i32, i32* %channel.addr, align 4, !dbg !963
  %and28 = and i32 %31, 2, !dbg !965
  %cmp29 = icmp ne i32 %and28, 0, !dbg !966
  br i1 %cmp29, label %if.then31, label %if.end38, !dbg !967

if.then31:                                        ; preds = %if.end27
  %32 = load %struct._RandomInfo**, %struct._RandomInfo*** %random_info, align 8, !dbg !968
  %33 = load i32, i32* %id, align 4, !dbg !968
  %idxprom32 = sext i32 %33 to i64, !dbg !968
  %arrayidx33 = getelementptr inbounds %struct._RandomInfo*, %struct._RandomInfo** %32, i64 %idxprom32, !dbg !968
  %34 = load %struct._RandomInfo*, %struct._RandomInfo** %arrayidx33, align 8, !dbg !968
  %35 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !968
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %35, i32 0, i32 1, !dbg !968
  %36 = load i16, i16* %green, align 2, !dbg !968
  %37 = load i32, i32* %op.addr, align 4, !dbg !968
  %38 = load double, double* %value.addr, align 8, !dbg !968
  %conv34 = fptrunc double %38 to float, !dbg !968
  %call35 = call float @ApplyEvaluateOperator(%struct._RandomInfo* %34, i16 zeroext %36, i32 %37, float %conv34), !dbg !968
  %call36 = call zeroext i16 @ClampToQuantum(float %call35), !dbg !968
  %39 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !968
  %green37 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %39, i32 0, i32 1, !dbg !968
  store i16 %call36, i16* %green37, align 2, !dbg !968
  br label %if.end38, !dbg !968

if.end38:                                         ; preds = %if.then31, %if.end27
  %40 = load i32, i32* %channel.addr, align 4, !dbg !969
  %and39 = and i32 %40, 4, !dbg !971
  %cmp40 = icmp ne i32 %and39, 0, !dbg !972
  br i1 %cmp40, label %if.then42, label %if.end49, !dbg !973

if.then42:                                        ; preds = %if.end38
  %41 = load %struct._RandomInfo**, %struct._RandomInfo*** %random_info, align 8, !dbg !974
  %42 = load i32, i32* %id, align 4, !dbg !974
  %idxprom43 = sext i32 %42 to i64, !dbg !974
  %arrayidx44 = getelementptr inbounds %struct._RandomInfo*, %struct._RandomInfo** %41, i64 %idxprom43, !dbg !974
  %43 = load %struct._RandomInfo*, %struct._RandomInfo** %arrayidx44, align 8, !dbg !974
  %44 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !974
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %44, i32 0, i32 0, !dbg !974
  %45 = load i16, i16* %blue, align 2, !dbg !974
  %46 = load i32, i32* %op.addr, align 4, !dbg !974
  %47 = load double, double* %value.addr, align 8, !dbg !974
  %conv45 = fptrunc double %47 to float, !dbg !974
  %call46 = call float @ApplyEvaluateOperator(%struct._RandomInfo* %43, i16 zeroext %45, i32 %46, float %conv45), !dbg !974
  %call47 = call zeroext i16 @ClampToQuantum(float %call46), !dbg !974
  %48 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !974
  %blue48 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %48, i32 0, i32 0, !dbg !974
  store i16 %call47, i16* %blue48, align 2, !dbg !974
  br label %if.end49, !dbg !974

if.end49:                                         ; preds = %if.then42, %if.end38
  %49 = load i32, i32* %channel.addr, align 4, !dbg !975
  %and50 = and i32 %49, 8, !dbg !977
  %cmp51 = icmp ne i32 %and50, 0, !dbg !978
  br i1 %cmp51, label %if.then53, label %if.end76, !dbg !979

if.then53:                                        ; preds = %if.end49
  %50 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !980
  %matte = getelementptr inbounds %struct._Image, %struct._Image* %50, i32 0, i32 6, !dbg !983
  %51 = load i32, i32* %matte, align 8, !dbg !983
  %cmp54 = icmp eq i32 %51, 0, !dbg !984
  br i1 %cmp54, label %if.then56, label %if.else, !dbg !985

if.then56:                                        ; preds = %if.then53
  %52 = load %struct._RandomInfo**, %struct._RandomInfo*** %random_info, align 8, !dbg !986
  %53 = load i32, i32* %id, align 4, !dbg !986
  %idxprom57 = sext i32 %53 to i64, !dbg !986
  %arrayidx58 = getelementptr inbounds %struct._RandomInfo*, %struct._RandomInfo** %52, i64 %idxprom57, !dbg !986
  %54 = load %struct._RandomInfo*, %struct._RandomInfo** %arrayidx58, align 8, !dbg !986
  %55 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !986
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %55, i32 0, i32 3, !dbg !986
  %56 = load i16, i16* %opacity, align 2, !dbg !986
  %57 = load i32, i32* %op.addr, align 4, !dbg !986
  %58 = load double, double* %value.addr, align 8, !dbg !986
  %conv59 = fptrunc double %58 to float, !dbg !986
  %call60 = call float @ApplyEvaluateOperator(%struct._RandomInfo* %54, i16 zeroext %56, i32 %57, float %conv59), !dbg !986
  %call61 = call zeroext i16 @ClampToQuantum(float %call60), !dbg !986
  %59 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !986
  %opacity62 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %59, i32 0, i32 3, !dbg !986
  store i16 %call61, i16* %opacity62, align 2, !dbg !986
  br label %if.end75, !dbg !986

if.else:                                          ; preds = %if.then53
  %60 = load %struct._RandomInfo**, %struct._RandomInfo*** %random_info, align 8, !dbg !987
  %61 = load i32, i32* %id, align 4, !dbg !987
  %idxprom63 = sext i32 %61 to i64, !dbg !987
  %arrayidx64 = getelementptr inbounds %struct._RandomInfo*, %struct._RandomInfo** %60, i64 %idxprom63, !dbg !987
  %62 = load %struct._RandomInfo*, %struct._RandomInfo** %arrayidx64, align 8, !dbg !987
  %63 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !987
  %opacity65 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %63, i32 0, i32 3, !dbg !987
  %64 = load i16, i16* %opacity65, align 2, !dbg !987
  %conv66 = zext i16 %64 to i32, !dbg !987
  %sub = sub nsw i32 65535, %conv66, !dbg !987
  %conv67 = trunc i32 %sub to i16, !dbg !987
  %65 = load i32, i32* %op.addr, align 4, !dbg !987
  %66 = load double, double* %value.addr, align 8, !dbg !987
  %conv68 = fptrunc double %66 to float, !dbg !987
  %call69 = call float @ApplyEvaluateOperator(%struct._RandomInfo* %62, i16 zeroext %conv67, i32 %65, float %conv68), !dbg !987
  %call70 = call zeroext i16 @ClampToQuantum(float %call69), !dbg !987
  %conv71 = zext i16 %call70 to i32, !dbg !987
  %sub72 = sub nsw i32 65535, %conv71, !dbg !987
  %conv73 = trunc i32 %sub72 to i16, !dbg !987
  %67 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !987
  %opacity74 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %67, i32 0, i32 3, !dbg !987
  store i16 %conv73, i16* %opacity74, align 2, !dbg !987
  br label %if.end75

if.end75:                                         ; preds = %if.else, %if.then56
  br label %if.end76, !dbg !988

if.end76:                                         ; preds = %if.end75, %if.end49
  %68 = load i32, i32* %channel.addr, align 4, !dbg !989
  %and77 = and i32 %68, 32, !dbg !991
  %cmp78 = icmp ne i32 %and77, 0, !dbg !992
  br i1 %cmp78, label %land.lhs.true, label %if.end99, !dbg !993

land.lhs.true:                                    ; preds = %if.end76
  %69 = load i16*, i16** %indexes, align 8, !dbg !994
  %cmp80 = icmp ne i16* %69, null, !dbg !995
  br i1 %cmp80, label %if.then82, label %if.end99, !dbg !996

if.then82:                                        ; preds = %land.lhs.true
  %70 = load i16*, i16** %indexes, align 8, !dbg !997
  %71 = load i64, i64* %x, align 8, !dbg !997
  %add.ptr = getelementptr inbounds i16, i16* %70, i64 %71, !dbg !997
  %cmp83 = icmp ne i16* %add.ptr, null, !dbg !997
  br i1 %cmp83, label %if.then85, label %if.end98, !dbg !1000

if.then85:                                        ; preds = %if.then82
  %72 = load %struct._RandomInfo**, %struct._RandomInfo*** %random_info, align 8, !dbg !997
  %73 = load i32, i32* %id, align 4, !dbg !997
  %idxprom86 = sext i32 %73 to i64, !dbg !997
  %arrayidx87 = getelementptr inbounds %struct._RandomInfo*, %struct._RandomInfo** %72, i64 %idxprom86, !dbg !997
  %74 = load %struct._RandomInfo*, %struct._RandomInfo** %arrayidx87, align 8, !dbg !997
  %75 = load i16*, i16** %indexes, align 8, !dbg !997
  %76 = load i64, i64* %x, align 8, !dbg !997
  %add.ptr88 = getelementptr inbounds i16, i16* %75, i64 %76, !dbg !997
  %cmp89 = icmp eq i16* %add.ptr88, null, !dbg !997
  br i1 %cmp89, label %cond.true, label %cond.false, !dbg !997

cond.true:                                        ; preds = %if.then85
  br label %cond.end, !dbg !997

cond.false:                                       ; preds = %if.then85
  %77 = load i16*, i16** %indexes, align 8, !dbg !997
  %78 = load i64, i64* %x, align 8, !dbg !997
  %add.ptr91 = getelementptr inbounds i16, i16* %77, i64 %78, !dbg !997
  %79 = load i16, i16* %add.ptr91, align 2, !dbg !997
  %conv92 = zext i16 %79 to i32, !dbg !997
  br label %cond.end, !dbg !997

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %conv92, %cond.false ], !dbg !997
  %conv93 = trunc i32 %cond to i16, !dbg !997
  %80 = load i32, i32* %op.addr, align 4, !dbg !997
  %81 = load double, double* %value.addr, align 8, !dbg !997
  %conv94 = fptrunc double %81 to float, !dbg !997
  %call95 = call float @ApplyEvaluateOperator(%struct._RandomInfo* %74, i16 zeroext %conv93, i32 %80, float %conv94), !dbg !997
  %call96 = call zeroext i16 @ClampToQuantum(float %call95), !dbg !997
  %82 = load i16*, i16** %indexes, align 8, !dbg !997
  %83 = load i64, i64* %x, align 8, !dbg !997
  %add.ptr97 = getelementptr inbounds i16, i16* %82, i64 %83, !dbg !997
  store i16 %call96, i16* %add.ptr97, align 2, !dbg !997
  br label %if.end98, !dbg !997

if.end98:                                         ; preds = %cond.end, %if.then82
  br label %if.end99, !dbg !1000

if.end99:                                         ; preds = %if.end98, %land.lhs.true, %if.end76
  %84 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !1001
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %84, i32 1, !dbg !1001
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %q, align 8, !dbg !1001
  br label %for.inc, !dbg !1002

for.inc:                                          ; preds = %if.end99
  %85 = load i64, i64* %x, align 8, !dbg !1003
  %inc = add nsw i64 %85, 1, !dbg !1003
  store i64 %inc, i64* %x, align 8, !dbg !1003
  br label %for.cond18, !dbg !1004, !llvm.loop !1005

for.end:                                          ; preds = %for.cond18
  %86 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !1007
  %87 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !1009
  %call100 = call i32 @SyncCacheViewAuthenticPixels(%struct._CacheView* %86, %struct._ExceptionInfo* %87), !dbg !1010
  %cmp101 = icmp eq i32 %call100, 0, !dbg !1011
  br i1 %cmp101, label %if.then103, label %if.end104, !dbg !1012

if.then103:                                       ; preds = %for.end
  store i32 0, i32* %status, align 4, !dbg !1013
  br label %if.end104, !dbg !1014

if.end104:                                        ; preds = %if.then103, %for.end
  %88 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1015
  %progress_monitor = getelementptr inbounds %struct._Image, %struct._Image* %88, i32 0, i32 47, !dbg !1017
  %89 = load i32 (i8*, i64, i64, i8*)*, i32 (i8*, i64, i64, i8*)** %progress_monitor, align 8, !dbg !1017
  %cmp105 = icmp ne i32 (i8*, i64, i64, i8*)* %89, null, !dbg !1018
  br i1 %cmp105, label %if.then107, label %if.end115, !dbg !1019

if.then107:                                       ; preds = %if.end104
  call void @llvm.dbg.declare(metadata i32* %proceed, metadata !1020, metadata !DIExpression()), !dbg !1022
  %90 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1023
  %91 = load i64, i64* %progress, align 8, !dbg !1024
  %inc108 = add nsw i64 %91, 1, !dbg !1024
  store i64 %inc108, i64* %progress, align 8, !dbg !1024
  %92 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1025
  %rows109 = getelementptr inbounds %struct._Image, %struct._Image* %92, i32 0, i32 8, !dbg !1026
  %93 = load i64, i64* %rows109, align 8, !dbg !1026
  %call110 = call i32 @SetImageProgress(%struct._Image* %90, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.5, i64 0, i64 0), i64 %91, i64 %93), !dbg !1027
  store i32 %call110, i32* %proceed, align 4, !dbg !1028
  %94 = load i32, i32* %proceed, align 4, !dbg !1029
  %cmp111 = icmp eq i32 %94, 0, !dbg !1031
  br i1 %cmp111, label %if.then113, label %if.end114, !dbg !1032

if.then113:                                       ; preds = %if.then107
  store i32 0, i32* %status, align 4, !dbg !1033
  br label %if.end114, !dbg !1034

if.end114:                                        ; preds = %if.then113, %if.then107
  br label %if.end115, !dbg !1035

if.end115:                                        ; preds = %if.end114, %if.end104
  br label %for.inc116, !dbg !1036

for.inc116:                                       ; preds = %if.end115, %if.then15, %if.then11
  %95 = load i64, i64* %y, align 8, !dbg !1037
  %inc117 = add nsw i64 %95, 1, !dbg !1037
  store i64 %inc117, i64* %y, align 8, !dbg !1037
  br label %for.cond, !dbg !1038, !llvm.loop !1039

for.end118:                                       ; preds = %for.cond
  %96 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !1041
  %call119 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %96), !dbg !1042
  store %struct._CacheView* %call119, %struct._CacheView** %image_view, align 8, !dbg !1043
  %97 = load %struct._RandomInfo**, %struct._RandomInfo*** %random_info, align 8, !dbg !1044
  %call120 = call %struct._RandomInfo** @DestroyRandomInfoThreadSet(%struct._RandomInfo** %97), !dbg !1045
  store %struct._RandomInfo** %call120, %struct._RandomInfo*** %random_info, align 8, !dbg !1046
  %98 = load i32, i32* %status, align 4, !dbg !1047
  store i32 %98, i32* %retval, align 4, !dbg !1048
  br label %return, !dbg !1048

return:                                           ; preds = %for.end118, %if.then3
  %99 = load i32, i32* %retval, align 4, !dbg !1049
  ret i32 %99, !dbg !1049
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._Image* @EvaluateImages(%struct._Image* %images, i32 %op, %struct._ExceptionInfo* %exception) #0 !dbg !1050 {
entry:
  %retval = alloca %struct._Image*, align 8
  %images.addr = alloca %struct._Image*, align 8
  %op.addr = alloca i32, align 4
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %evaluate_view = alloca %struct._CacheView*, align 8
  %image = alloca %struct._Image*, align 8
  %status = alloca i32, align 4
  %progress = alloca i64, align 8
  %evaluate_pixels = alloca %struct._MagickPixelPacket**, align 8
  %zero = alloca %struct._MagickPixelPacket, align 8
  %random_info = alloca %struct._RandomInfo**, align 8
  %number_images = alloca i64, align 8
  %y = alloca i64, align 8
  %image_view = alloca %struct._CacheView*, align 8
  %next = alloca %struct._Image*, align 8
  %id = alloca i32, align 4
  %evaluate_indexes = alloca i16*, align 8
  %evaluate_pixel = alloca %struct._MagickPixelPacket*, align 8
  %q = alloca %struct._PixelPacket*, align 8
  %x = alloca i64, align 8
  %i = alloca i64, align 8
  %indexes = alloca i16*, align 8
  %p = alloca %struct._PixelPacket*, align 8
  %proceed = alloca i32, align 4
  %image_view161 = alloca %struct._CacheView*, align 8
  %next162 = alloca %struct._Image*, align 8
  %id163 = alloca i32, align 4
  %evaluate_indexes165 = alloca i16*, align 8
  %i166 = alloca i64, align 8
  %x167 = alloca i64, align 8
  %evaluate_pixel168 = alloca %struct._MagickPixelPacket*, align 8
  %q169 = alloca %struct._PixelPacket*, align 8
  %indexes196 = alloca i16*, align 8
  %p197 = alloca %struct._PixelPacket*, align 8
  %j = alloca i64, align 8
  %proceed421 = alloca i32, align 4
  store %struct._Image* %images, %struct._Image** %images.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %images.addr, metadata !1053, metadata !DIExpression()), !dbg !1054
  store i32 %op, i32* %op.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %op.addr, metadata !1055, metadata !DIExpression()), !dbg !1056
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !1057, metadata !DIExpression()), !dbg !1058
  call void @llvm.dbg.declare(metadata %struct._CacheView** %evaluate_view, metadata !1059, metadata !DIExpression()), !dbg !1060
  call void @llvm.dbg.declare(metadata %struct._Image** %image, metadata !1061, metadata !DIExpression()), !dbg !1062
  call void @llvm.dbg.declare(metadata i32* %status, metadata !1063, metadata !DIExpression()), !dbg !1064
  call void @llvm.dbg.declare(metadata i64* %progress, metadata !1065, metadata !DIExpression()), !dbg !1066
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket*** %evaluate_pixels, metadata !1067, metadata !DIExpression()), !dbg !1069
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket* %zero, metadata !1070, metadata !DIExpression()), !dbg !1071
  call void @llvm.dbg.declare(metadata %struct._RandomInfo*** %random_info, metadata !1072, metadata !DIExpression()), !dbg !1073
  call void @llvm.dbg.declare(metadata i64* %number_images, metadata !1074, metadata !DIExpression()), !dbg !1075
  call void @llvm.dbg.declare(metadata i64* %y, metadata !1076, metadata !DIExpression()), !dbg !1077
  %0 = load %struct._Image*, %struct._Image** %images.addr, align 8, !dbg !1078
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !1080
  %1 = load i32, i32* %debug, align 8, !dbg !1080
  %cmp = icmp ne i32 %1, 0, !dbg !1081
  br i1 %cmp, label %if.then, label %if.end, !dbg !1082

if.then:                                          ; preds = %entry
  %2 = load %struct._Image*, %struct._Image** %images.addr, align 8, !dbg !1083
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %2, i32 0, i32 53, !dbg !1084
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !1083
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 465, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !1085
  br label %if.end, !dbg !1086

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._Image*, %struct._Image** %images.addr, align 8, !dbg !1087
  %4 = load %struct._Image*, %struct._Image** %images.addr, align 8, !dbg !1088
  %columns = getelementptr inbounds %struct._Image, %struct._Image* %4, i32 0, i32 7, !dbg !1089
  %5 = load i64, i64* %columns, align 8, !dbg !1089
  %6 = load %struct._Image*, %struct._Image** %images.addr, align 8, !dbg !1090
  %rows = getelementptr inbounds %struct._Image, %struct._Image* %6, i32 0, i32 8, !dbg !1091
  %7 = load i64, i64* %rows, align 8, !dbg !1091
  %8 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !1092
  %call1 = call %struct._Image* @CloneImage(%struct._Image* %3, i64 %5, i64 %7, i32 1, %struct._ExceptionInfo* %8), !dbg !1093
  store %struct._Image* %call1, %struct._Image** %image, align 8, !dbg !1094
  %9 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !1095
  %cmp2 = icmp eq %struct._Image* %9, null, !dbg !1097
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !1098

if.then3:                                         ; preds = %if.end
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !1099
  br label %return, !dbg !1099

if.end4:                                          ; preds = %if.end
  %10 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !1100
  %call5 = call i32 @SetImageStorageClass(%struct._Image* %10, i32 1), !dbg !1102
  %cmp6 = icmp eq i32 %call5, 0, !dbg !1103
  br i1 %cmp6, label %if.then7, label %if.end10, !dbg !1104

if.then7:                                         ; preds = %if.end4
  %11 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !1105
  %12 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !1107
  %exception8 = getelementptr inbounds %struct._Image, %struct._Image* %12, i32 0, i32 58, !dbg !1108
  call void @InheritException(%struct._ExceptionInfo* %11, %struct._ExceptionInfo* %exception8), !dbg !1109
  %13 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !1110
  %call9 = call %struct._Image* @DestroyImage(%struct._Image* %13), !dbg !1111
  store %struct._Image* %call9, %struct._Image** %image, align 8, !dbg !1112
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !1113
  br label %return, !dbg !1113

if.end10:                                         ; preds = %if.end4
  %14 = load %struct._Image*, %struct._Image** %images.addr, align 8, !dbg !1114
  %call11 = call i64 @GetImageListLength(%struct._Image* %14), !dbg !1115
  store i64 %call11, i64* %number_images, align 8, !dbg !1116
  %15 = load %struct._Image*, %struct._Image** %images.addr, align 8, !dbg !1117
  %16 = load i64, i64* %number_images, align 8, !dbg !1118
  %call12 = call %struct._MagickPixelPacket** @AcquirePixelThreadSet(%struct._Image* %15, i64 %16), !dbg !1119
  store %struct._MagickPixelPacket** %call12, %struct._MagickPixelPacket*** %evaluate_pixels, align 8, !dbg !1120
  %17 = load %struct._MagickPixelPacket**, %struct._MagickPixelPacket*** %evaluate_pixels, align 8, !dbg !1121
  %cmp13 = icmp eq %struct._MagickPixelPacket** %17, null, !dbg !1123
  br i1 %cmp13, label %if.then14, label %if.end19, !dbg !1124

if.then14:                                        ; preds = %if.end10
  %18 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !1125
  %call15 = call %struct._Image* @DestroyImage(%struct._Image* %18), !dbg !1127
  store %struct._Image* %call15, %struct._Image** %image, align 8, !dbg !1128
  %19 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !1129
  %20 = load %struct._Image*, %struct._Image** %images.addr, align 8, !dbg !1130
  %filename16 = getelementptr inbounds %struct._Image, %struct._Image* %20, i32 0, i32 53, !dbg !1131
  %arraydecay17 = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename16, i64 0, i64 0, !dbg !1130
  %call18 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %19, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 482, i32 400, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay17), !dbg !1132
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !1133
  br label %return, !dbg !1133

if.end19:                                         ; preds = %if.end10
  store i32 1, i32* %status, align 4, !dbg !1134
  store i64 0, i64* %progress, align 8, !dbg !1135
  %21 = load %struct._Image*, %struct._Image** %images.addr, align 8, !dbg !1136
  call void @GetMagickPixelPacket(%struct._Image* %21, %struct._MagickPixelPacket* %zero), !dbg !1137
  %call20 = call %struct._RandomInfo** @AcquireRandomInfoThreadSet(), !dbg !1138
  store %struct._RandomInfo** %call20, %struct._RandomInfo*** %random_info, align 8, !dbg !1139
  %22 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !1140
  %23 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !1141
  %call21 = call %struct._CacheView* @AcquireAuthenticCacheView(%struct._Image* %22, %struct._ExceptionInfo* %23), !dbg !1142
  store %struct._CacheView* %call21, %struct._CacheView** %evaluate_view, align 8, !dbg !1143
  %24 = load i32, i32* %op.addr, align 4, !dbg !1144
  %cmp22 = icmp eq i32 %24, 30, !dbg !1146
  br i1 %cmp22, label %if.then23, label %if.else, !dbg !1147

if.then23:                                        ; preds = %if.end19
  store i64 0, i64* %y, align 8, !dbg !1148
  br label %for.cond, !dbg !1151

for.cond:                                         ; preds = %for.inc153, %if.then23
  %25 = load i64, i64* %y, align 8, !dbg !1152
  %26 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !1154
  %rows24 = getelementptr inbounds %struct._Image, %struct._Image* %26, i32 0, i32 8, !dbg !1155
  %27 = load i64, i64* %rows24, align 8, !dbg !1155
  %cmp25 = icmp slt i64 %25, %27, !dbg !1156
  br i1 %cmp25, label %for.body, label %for.end155, !dbg !1157

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct._CacheView** %image_view, metadata !1158, metadata !DIExpression()), !dbg !1160
  call void @llvm.dbg.declare(metadata %struct._Image** %next, metadata !1161, metadata !DIExpression()), !dbg !1162
  call void @llvm.dbg.declare(metadata i32* %id, metadata !1163, metadata !DIExpression()), !dbg !1164
  %call26 = call i32 @GetOpenMPThreadId(), !dbg !1165
  store i32 %call26, i32* %id, align 4, !dbg !1164
  call void @llvm.dbg.declare(metadata i16** %evaluate_indexes, metadata !1166, metadata !DIExpression()), !dbg !1167
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %evaluate_pixel, metadata !1168, metadata !DIExpression()), !dbg !1169
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q, metadata !1170, metadata !DIExpression()), !dbg !1171
  call void @llvm.dbg.declare(metadata i64* %x, metadata !1172, metadata !DIExpression()), !dbg !1173
  %28 = load i32, i32* %status, align 4, !dbg !1174
  %cmp27 = icmp eq i32 %28, 0, !dbg !1176
  br i1 %cmp27, label %if.then28, label %if.end29, !dbg !1177

if.then28:                                        ; preds = %for.body
  br label %for.inc153, !dbg !1178

if.end29:                                         ; preds = %for.body
  %29 = load %struct._CacheView*, %struct._CacheView** %evaluate_view, align 8, !dbg !1179
  %30 = load i64, i64* %y, align 8, !dbg !1180
  %31 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !1181
  %columns30 = getelementptr inbounds %struct._Image, %struct._Image* %31, i32 0, i32 7, !dbg !1182
  %32 = load i64, i64* %columns30, align 8, !dbg !1182
  %33 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !1183
  %call31 = call %struct._PixelPacket* @QueueCacheViewAuthenticPixels(%struct._CacheView* %29, i64 0, i64 %30, i64 %32, i64 1, %struct._ExceptionInfo* %33), !dbg !1184
  store %struct._PixelPacket* %call31, %struct._PixelPacket** %q, align 8, !dbg !1185
  %34 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !1186
  %cmp32 = icmp eq %struct._PixelPacket* %34, null, !dbg !1188
  br i1 %cmp32, label %if.then33, label %if.end34, !dbg !1189

if.then33:                                        ; preds = %if.end29
  store i32 0, i32* %status, align 4, !dbg !1190
  br label %for.inc153, !dbg !1192

if.end34:                                         ; preds = %if.end29
  %35 = load %struct._CacheView*, %struct._CacheView** %evaluate_view, align 8, !dbg !1193
  %call35 = call i16* @GetCacheViewAuthenticIndexQueue(%struct._CacheView* %35), !dbg !1194
  store i16* %call35, i16** %evaluate_indexes, align 8, !dbg !1195
  %36 = load %struct._MagickPixelPacket**, %struct._MagickPixelPacket*** %evaluate_pixels, align 8, !dbg !1196
  %37 = load i32, i32* %id, align 4, !dbg !1197
  %idxprom = sext i32 %37 to i64, !dbg !1196
  %arrayidx = getelementptr inbounds %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %36, i64 %idxprom, !dbg !1196
  %38 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %arrayidx, align 8, !dbg !1196
  store %struct._MagickPixelPacket* %38, %struct._MagickPixelPacket** %evaluate_pixel, align 8, !dbg !1198
  store i64 0, i64* %x, align 8, !dbg !1199
  br label %for.cond36, !dbg !1201

for.cond36:                                       ; preds = %for.inc134, %if.end34
  %39 = load i64, i64* %x, align 8, !dbg !1202
  %40 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !1204
  %columns37 = getelementptr inbounds %struct._Image, %struct._Image* %40, i32 0, i32 7, !dbg !1205
  %41 = load i64, i64* %columns37, align 8, !dbg !1205
  %cmp38 = icmp slt i64 %39, %41, !dbg !1206
  br i1 %cmp38, label %for.body39, label %for.end136, !dbg !1207

for.body39:                                       ; preds = %for.cond36
  call void @llvm.dbg.declare(metadata i64* %i, metadata !1208, metadata !DIExpression()), !dbg !1210
  store i64 0, i64* %i, align 8, !dbg !1211
  br label %for.cond40, !dbg !1213

for.cond40:                                       ; preds = %for.inc, %for.body39
  %42 = load i64, i64* %i, align 8, !dbg !1214
  %43 = load i64, i64* %number_images, align 8, !dbg !1216
  %cmp41 = icmp slt i64 %42, %43, !dbg !1217
  br i1 %cmp41, label %for.body42, label %for.end, !dbg !1218

for.body42:                                       ; preds = %for.cond40
  %44 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %evaluate_pixel, align 8, !dbg !1219
  %45 = load i64, i64* %i, align 8, !dbg !1220
  %arrayidx43 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %44, i64 %45, !dbg !1219
  %46 = bitcast %struct._MagickPixelPacket* %arrayidx43 to i8*, !dbg !1221
  %47 = bitcast %struct._MagickPixelPacket* %zero to i8*, !dbg !1221
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* align 8 %47, i64 56, i1 false), !dbg !1221
  br label %for.inc, !dbg !1219

for.inc:                                          ; preds = %for.body42
  %48 = load i64, i64* %i, align 8, !dbg !1222
  %inc = add nsw i64 %48, 1, !dbg !1222
  store i64 %inc, i64* %i, align 8, !dbg !1222
  br label %for.cond40, !dbg !1223, !llvm.loop !1224

for.end:                                          ; preds = %for.cond40
  %49 = load %struct._Image*, %struct._Image** %images.addr, align 8, !dbg !1226
  store %struct._Image* %49, %struct._Image** %next, align 8, !dbg !1227
  store i64 0, i64* %i, align 8, !dbg !1228
  br label %for.cond44, !dbg !1230

for.cond44:                                       ; preds = %for.inc95, %for.end
  %50 = load i64, i64* %i, align 8, !dbg !1231
  %51 = load i64, i64* %number_images, align 8, !dbg !1233
  %cmp45 = icmp slt i64 %50, %51, !dbg !1234
  br i1 %cmp45, label %for.body46, label %for.end97, !dbg !1235

for.body46:                                       ; preds = %for.cond44
  call void @llvm.dbg.declare(metadata i16** %indexes, metadata !1236, metadata !DIExpression()), !dbg !1238
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %p, metadata !1239, metadata !DIExpression()), !dbg !1240
  %52 = load %struct._Image*, %struct._Image** %next, align 8, !dbg !1241
  %53 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !1242
  %call47 = call %struct._CacheView* @AcquireVirtualCacheView(%struct._Image* %52, %struct._ExceptionInfo* %53), !dbg !1243
  store %struct._CacheView* %call47, %struct._CacheView** %image_view, align 8, !dbg !1244
  %54 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !1245
  %55 = load i64, i64* %x, align 8, !dbg !1246
  %56 = load i64, i64* %y, align 8, !dbg !1247
  %57 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !1248
  %call48 = call %struct._PixelPacket* @GetCacheViewVirtualPixels(%struct._CacheView* %54, i64 %55, i64 %56, i64 1, i64 1, %struct._ExceptionInfo* %57), !dbg !1249
  store %struct._PixelPacket* %call48, %struct._PixelPacket** %p, align 8, !dbg !1250
  %58 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !1251
  %cmp49 = icmp eq %struct._PixelPacket* %58, null, !dbg !1253
  br i1 %cmp49, label %if.then50, label %if.end52, !dbg !1254

if.then50:                                        ; preds = %for.body46
  %59 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !1255
  %call51 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %59), !dbg !1257
  store %struct._CacheView* %call51, %struct._CacheView** %image_view, align 8, !dbg !1258
  br label %for.end97, !dbg !1259

if.end52:                                         ; preds = %for.body46
  %60 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !1260
  %call53 = call i16* @GetCacheViewVirtualIndexQueue(%struct._CacheView* %60), !dbg !1261
  store i16* %call53, i16** %indexes, align 8, !dbg !1262
  %61 = load %struct._RandomInfo**, %struct._RandomInfo*** %random_info, align 8, !dbg !1263
  %62 = load i32, i32* %id, align 4, !dbg !1264
  %idxprom54 = sext i32 %62 to i64, !dbg !1263
  %arrayidx55 = getelementptr inbounds %struct._RandomInfo*, %struct._RandomInfo** %61, i64 %idxprom54, !dbg !1263
  %63 = load %struct._RandomInfo*, %struct._RandomInfo** %arrayidx55, align 8, !dbg !1263
  %64 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !1265
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %64, i32 0, i32 2, !dbg !1265
  %65 = load i16, i16* %red, align 2, !dbg !1265
  %66 = load i32, i32* %op.addr, align 4, !dbg !1266
  %67 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %evaluate_pixel, align 8, !dbg !1267
  %68 = load i64, i64* %i, align 8, !dbg !1268
  %arrayidx56 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %67, i64 %68, !dbg !1267
  %red57 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx56, i32 0, i32 5, !dbg !1269
  %69 = load float, float* %red57, align 8, !dbg !1269
  %call58 = call float @ApplyEvaluateOperator(%struct._RandomInfo* %63, i16 zeroext %65, i32 %66, float %69), !dbg !1270
  %70 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %evaluate_pixel, align 8, !dbg !1271
  %71 = load i64, i64* %i, align 8, !dbg !1272
  %arrayidx59 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %70, i64 %71, !dbg !1271
  %red60 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx59, i32 0, i32 5, !dbg !1273
  store float %call58, float* %red60, align 8, !dbg !1274
  %72 = load %struct._RandomInfo**, %struct._RandomInfo*** %random_info, align 8, !dbg !1275
  %73 = load i32, i32* %id, align 4, !dbg !1276
  %idxprom61 = sext i32 %73 to i64, !dbg !1275
  %arrayidx62 = getelementptr inbounds %struct._RandomInfo*, %struct._RandomInfo** %72, i64 %idxprom61, !dbg !1275
  %74 = load %struct._RandomInfo*, %struct._RandomInfo** %arrayidx62, align 8, !dbg !1275
  %75 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !1277
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %75, i32 0, i32 1, !dbg !1277
  %76 = load i16, i16* %green, align 2, !dbg !1277
  %77 = load i32, i32* %op.addr, align 4, !dbg !1278
  %78 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %evaluate_pixel, align 8, !dbg !1279
  %79 = load i64, i64* %i, align 8, !dbg !1280
  %arrayidx63 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %78, i64 %79, !dbg !1279
  %green64 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx63, i32 0, i32 6, !dbg !1281
  %80 = load float, float* %green64, align 4, !dbg !1281
  %call65 = call float @ApplyEvaluateOperator(%struct._RandomInfo* %74, i16 zeroext %76, i32 %77, float %80), !dbg !1282
  %81 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %evaluate_pixel, align 8, !dbg !1283
  %82 = load i64, i64* %i, align 8, !dbg !1284
  %arrayidx66 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %81, i64 %82, !dbg !1283
  %green67 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx66, i32 0, i32 6, !dbg !1285
  store float %call65, float* %green67, align 4, !dbg !1286
  %83 = load %struct._RandomInfo**, %struct._RandomInfo*** %random_info, align 8, !dbg !1287
  %84 = load i32, i32* %id, align 4, !dbg !1288
  %idxprom68 = sext i32 %84 to i64, !dbg !1287
  %arrayidx69 = getelementptr inbounds %struct._RandomInfo*, %struct._RandomInfo** %83, i64 %idxprom68, !dbg !1287
  %85 = load %struct._RandomInfo*, %struct._RandomInfo** %arrayidx69, align 8, !dbg !1287
  %86 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !1289
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %86, i32 0, i32 0, !dbg !1289
  %87 = load i16, i16* %blue, align 2, !dbg !1289
  %88 = load i32, i32* %op.addr, align 4, !dbg !1290
  %89 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %evaluate_pixel, align 8, !dbg !1291
  %90 = load i64, i64* %i, align 8, !dbg !1292
  %arrayidx70 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %89, i64 %90, !dbg !1291
  %blue71 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx70, i32 0, i32 7, !dbg !1293
  %91 = load float, float* %blue71, align 8, !dbg !1293
  %call72 = call float @ApplyEvaluateOperator(%struct._RandomInfo* %85, i16 zeroext %87, i32 %88, float %91), !dbg !1294
  %92 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %evaluate_pixel, align 8, !dbg !1295
  %93 = load i64, i64* %i, align 8, !dbg !1296
  %arrayidx73 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %92, i64 %93, !dbg !1295
  %blue74 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx73, i32 0, i32 7, !dbg !1297
  store float %call72, float* %blue74, align 8, !dbg !1298
  %94 = load %struct._RandomInfo**, %struct._RandomInfo*** %random_info, align 8, !dbg !1299
  %95 = load i32, i32* %id, align 4, !dbg !1300
  %idxprom75 = sext i32 %95 to i64, !dbg !1299
  %arrayidx76 = getelementptr inbounds %struct._RandomInfo*, %struct._RandomInfo** %94, i64 %idxprom75, !dbg !1299
  %96 = load %struct._RandomInfo*, %struct._RandomInfo** %arrayidx76, align 8, !dbg !1299
  %97 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !1301
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %97, i32 0, i32 3, !dbg !1301
  %98 = load i16, i16* %opacity, align 2, !dbg !1301
  %conv = zext i16 %98 to i32, !dbg !1301
  %sub = sub nsw i32 65535, %conv, !dbg !1301
  %conv77 = trunc i32 %sub to i16, !dbg !1301
  %99 = load i32, i32* %op.addr, align 4, !dbg !1302
  %100 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %evaluate_pixel, align 8, !dbg !1303
  %101 = load i64, i64* %i, align 8, !dbg !1304
  %arrayidx78 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %100, i64 %101, !dbg !1303
  %opacity79 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx78, i32 0, i32 8, !dbg !1305
  %102 = load float, float* %opacity79, align 4, !dbg !1305
  %call80 = call float @ApplyEvaluateOperator(%struct._RandomInfo* %96, i16 zeroext %conv77, i32 %99, float %102), !dbg !1306
  %103 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %evaluate_pixel, align 8, !dbg !1307
  %104 = load i64, i64* %i, align 8, !dbg !1308
  %arrayidx81 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %103, i64 %104, !dbg !1307
  %opacity82 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx81, i32 0, i32 8, !dbg !1309
  store float %call80, float* %opacity82, align 4, !dbg !1310
  %105 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !1311
  %colorspace = getelementptr inbounds %struct._Image, %struct._Image* %105, i32 0, i32 1, !dbg !1313
  %106 = load i32, i32* %colorspace, align 4, !dbg !1313
  %cmp83 = icmp eq i32 %106, 12, !dbg !1314
  br i1 %cmp83, label %if.then85, label %if.end92, !dbg !1315

if.then85:                                        ; preds = %if.end52
  %107 = load %struct._RandomInfo**, %struct._RandomInfo*** %random_info, align 8, !dbg !1316
  %108 = load i32, i32* %id, align 4, !dbg !1317
  %idxprom86 = sext i32 %108 to i64, !dbg !1316
  %arrayidx87 = getelementptr inbounds %struct._RandomInfo*, %struct._RandomInfo** %107, i64 %idxprom86, !dbg !1316
  %109 = load %struct._RandomInfo*, %struct._RandomInfo** %arrayidx87, align 8, !dbg !1316
  %110 = load i16*, i16** %indexes, align 8, !dbg !1318
  %111 = load i16, i16* %110, align 2, !dbg !1319
  %112 = load i32, i32* %op.addr, align 4, !dbg !1320
  %113 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %evaluate_pixel, align 8, !dbg !1321
  %114 = load i64, i64* %i, align 8, !dbg !1322
  %arrayidx88 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %113, i64 %114, !dbg !1321
  %index = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx88, i32 0, i32 9, !dbg !1323
  %115 = load float, float* %index, align 8, !dbg !1323
  %call89 = call float @ApplyEvaluateOperator(%struct._RandomInfo* %109, i16 zeroext %111, i32 %112, float %115), !dbg !1324
  %116 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %evaluate_pixel, align 8, !dbg !1325
  %117 = load i64, i64* %i, align 8, !dbg !1326
  %arrayidx90 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %116, i64 %117, !dbg !1325
  %index91 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx90, i32 0, i32 9, !dbg !1327
  store float %call89, float* %index91, align 8, !dbg !1328
  br label %if.end92, !dbg !1325

if.end92:                                         ; preds = %if.then85, %if.end52
  %118 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !1329
  %call93 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %118), !dbg !1330
  store %struct._CacheView* %call93, %struct._CacheView** %image_view, align 8, !dbg !1331
  %119 = load %struct._Image*, %struct._Image** %next, align 8, !dbg !1332
  %call94 = call %struct._Image* @GetNextImageInList(%struct._Image* %119), !dbg !1333
  store %struct._Image* %call94, %struct._Image** %next, align 8, !dbg !1334
  br label %for.inc95, !dbg !1335

for.inc95:                                        ; preds = %if.end92
  %120 = load i64, i64* %i, align 8, !dbg !1336
  %inc96 = add nsw i64 %120, 1, !dbg !1336
  store i64 %inc96, i64* %i, align 8, !dbg !1336
  br label %for.cond44, !dbg !1337, !llvm.loop !1338

for.end97:                                        ; preds = %if.then50, %for.cond44
  %121 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %evaluate_pixel, align 8, !dbg !1340
  %122 = bitcast %struct._MagickPixelPacket* %121 to i8*, !dbg !1341
  %123 = load i64, i64* %number_images, align 8, !dbg !1342
  call void @qsort(i8* %122, i64 %123, i64 56, i32 (i8*, i8*)* @IntensityCompare), !dbg !1343
  %124 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %evaluate_pixel, align 8, !dbg !1344
  %125 = load i64, i64* %i, align 8, !dbg !1344
  %div = sdiv i64 %125, 2, !dbg !1344
  %arrayidx98 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %124, i64 %div, !dbg !1344
  %red99 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx98, i32 0, i32 5, !dbg !1344
  %126 = load float, float* %red99, align 8, !dbg !1344
  %call100 = call zeroext i16 @ClampToQuantum(float %126), !dbg !1344
  %127 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !1344
  %red101 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %127, i32 0, i32 2, !dbg !1344
  store i16 %call100, i16* %red101, align 2, !dbg !1344
  %128 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %evaluate_pixel, align 8, !dbg !1345
  %129 = load i64, i64* %i, align 8, !dbg !1345
  %div102 = sdiv i64 %129, 2, !dbg !1345
  %arrayidx103 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %128, i64 %div102, !dbg !1345
  %green104 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx103, i32 0, i32 6, !dbg !1345
  %130 = load float, float* %green104, align 4, !dbg !1345
  %call105 = call zeroext i16 @ClampToQuantum(float %130), !dbg !1345
  %131 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !1345
  %green106 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %131, i32 0, i32 1, !dbg !1345
  store i16 %call105, i16* %green106, align 2, !dbg !1345
  %132 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %evaluate_pixel, align 8, !dbg !1346
  %133 = load i64, i64* %i, align 8, !dbg !1346
  %div107 = sdiv i64 %133, 2, !dbg !1346
  %arrayidx108 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %132, i64 %div107, !dbg !1346
  %blue109 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx108, i32 0, i32 7, !dbg !1346
  %134 = load float, float* %blue109, align 8, !dbg !1346
  %call110 = call zeroext i16 @ClampToQuantum(float %134), !dbg !1346
  %135 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !1346
  %blue111 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %135, i32 0, i32 0, !dbg !1346
  store i16 %call110, i16* %blue111, align 2, !dbg !1346
  %136 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %evaluate_pixel, align 8, !dbg !1347
  %137 = load i64, i64* %i, align 8, !dbg !1347
  %div112 = sdiv i64 %137, 2, !dbg !1347
  %arrayidx113 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %136, i64 %div112, !dbg !1347
  %opacity114 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx113, i32 0, i32 8, !dbg !1347
  %138 = load float, float* %opacity114, align 4, !dbg !1347
  %call115 = call zeroext i16 @ClampToQuantum(float %138), !dbg !1347
  %conv116 = zext i16 %call115 to i32, !dbg !1347
  %sub117 = sub nsw i32 65535, %conv116, !dbg !1347
  %conv118 = trunc i32 %sub117 to i16, !dbg !1347
  %139 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !1347
  %opacity119 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %139, i32 0, i32 3, !dbg !1347
  store i16 %conv118, i16* %opacity119, align 2, !dbg !1347
  %140 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !1348
  %colorspace120 = getelementptr inbounds %struct._Image, %struct._Image* %140, i32 0, i32 1, !dbg !1350
  %141 = load i32, i32* %colorspace120, align 4, !dbg !1350
  %cmp121 = icmp eq i32 %141, 12, !dbg !1351
  br i1 %cmp121, label %if.then123, label %if.end133, !dbg !1352

if.then123:                                       ; preds = %for.end97
  %142 = load i16*, i16** %evaluate_indexes, align 8, !dbg !1353
  %143 = load i64, i64* %i, align 8, !dbg !1353
  %add.ptr = getelementptr inbounds i16, i16* %142, i64 %143, !dbg !1353
  %cmp124 = icmp ne i16* %add.ptr, null, !dbg !1353
  br i1 %cmp124, label %if.then126, label %if.end132, !dbg !1356

if.then126:                                       ; preds = %if.then123
  %144 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %evaluate_pixel, align 8, !dbg !1353
  %145 = load i64, i64* %i, align 8, !dbg !1353
  %div127 = sdiv i64 %145, 2, !dbg !1353
  %arrayidx128 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %144, i64 %div127, !dbg !1353
  %index129 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx128, i32 0, i32 9, !dbg !1353
  %146 = load float, float* %index129, align 8, !dbg !1353
  %call130 = call zeroext i16 @ClampToQuantum(float %146), !dbg !1353
  %147 = load i16*, i16** %evaluate_indexes, align 8, !dbg !1353
  %148 = load i64, i64* %i, align 8, !dbg !1353
  %add.ptr131 = getelementptr inbounds i16, i16* %147, i64 %148, !dbg !1353
  store i16 %call130, i16* %add.ptr131, align 2, !dbg !1353
  br label %if.end132, !dbg !1353

if.end132:                                        ; preds = %if.then126, %if.then123
  br label %if.end133, !dbg !1356

if.end133:                                        ; preds = %if.end132, %for.end97
  %149 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !1357
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %149, i32 1, !dbg !1357
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %q, align 8, !dbg !1357
  br label %for.inc134, !dbg !1358

for.inc134:                                       ; preds = %if.end133
  %150 = load i64, i64* %x, align 8, !dbg !1359
  %inc135 = add nsw i64 %150, 1, !dbg !1359
  store i64 %inc135, i64* %x, align 8, !dbg !1359
  br label %for.cond36, !dbg !1360, !llvm.loop !1361

for.end136:                                       ; preds = %for.cond36
  %151 = load %struct._CacheView*, %struct._CacheView** %evaluate_view, align 8, !dbg !1363
  %152 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !1365
  %call137 = call i32 @SyncCacheViewAuthenticPixels(%struct._CacheView* %151, %struct._ExceptionInfo* %152), !dbg !1366
  %cmp138 = icmp eq i32 %call137, 0, !dbg !1367
  br i1 %cmp138, label %if.then140, label %if.end141, !dbg !1368

if.then140:                                       ; preds = %for.end136
  store i32 0, i32* %status, align 4, !dbg !1369
  br label %if.end141, !dbg !1370

if.end141:                                        ; preds = %if.then140, %for.end136
  %153 = load %struct._Image*, %struct._Image** %images.addr, align 8, !dbg !1371
  %progress_monitor = getelementptr inbounds %struct._Image, %struct._Image* %153, i32 0, i32 47, !dbg !1373
  %154 = load i32 (i8*, i64, i64, i8*)*, i32 (i8*, i64, i64, i8*)** %progress_monitor, align 8, !dbg !1373
  %cmp142 = icmp ne i32 (i8*, i64, i64, i8*)* %154, null, !dbg !1374
  br i1 %cmp142, label %if.then144, label %if.end152, !dbg !1375

if.then144:                                       ; preds = %if.end141
  call void @llvm.dbg.declare(metadata i32* %proceed, metadata !1376, metadata !DIExpression()), !dbg !1378
  %155 = load %struct._Image*, %struct._Image** %images.addr, align 8, !dbg !1379
  %156 = load i64, i64* %progress, align 8, !dbg !1380
  %inc145 = add nsw i64 %156, 1, !dbg !1380
  store i64 %inc145, i64* %progress, align 8, !dbg !1380
  %157 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !1381
  %rows146 = getelementptr inbounds %struct._Image, %struct._Image* %157, i32 0, i32 8, !dbg !1382
  %158 = load i64, i64* %rows146, align 8, !dbg !1382
  %call147 = call i32 @SetImageProgress(%struct._Image* %155, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.5, i64 0, i64 0), i64 %156, i64 %158), !dbg !1383
  store i32 %call147, i32* %proceed, align 4, !dbg !1384
  %159 = load i32, i32* %proceed, align 4, !dbg !1385
  %cmp148 = icmp eq i32 %159, 0, !dbg !1387
  br i1 %cmp148, label %if.then150, label %if.end151, !dbg !1388

if.then150:                                       ; preds = %if.then144
  store i32 0, i32* %status, align 4, !dbg !1389
  br label %if.end151, !dbg !1390

if.end151:                                        ; preds = %if.then150, %if.then144
  br label %if.end152, !dbg !1391

if.end152:                                        ; preds = %if.end151, %if.end141
  br label %for.inc153, !dbg !1392

for.inc153:                                       ; preds = %if.end152, %if.then33, %if.then28
  %160 = load i64, i64* %y, align 8, !dbg !1393
  %inc154 = add nsw i64 %160, 1, !dbg !1393
  store i64 %inc154, i64* %y, align 8, !dbg !1393
  br label %for.cond, !dbg !1394, !llvm.loop !1395

for.end155:                                       ; preds = %for.cond
  br label %if.end433, !dbg !1397

if.else:                                          ; preds = %if.end19
  store i64 0, i64* %y, align 8, !dbg !1398
  br label %for.cond156, !dbg !1401

for.cond156:                                      ; preds = %for.inc430, %if.else
  %161 = load i64, i64* %y, align 8, !dbg !1402
  %162 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !1404
  %rows157 = getelementptr inbounds %struct._Image, %struct._Image* %162, i32 0, i32 8, !dbg !1405
  %163 = load i64, i64* %rows157, align 8, !dbg !1405
  %cmp158 = icmp slt i64 %161, %163, !dbg !1406
  br i1 %cmp158, label %for.body160, label %for.end432, !dbg !1407

for.body160:                                      ; preds = %for.cond156
  call void @llvm.dbg.declare(metadata %struct._CacheView** %image_view161, metadata !1408, metadata !DIExpression()), !dbg !1410
  call void @llvm.dbg.declare(metadata %struct._Image** %next162, metadata !1411, metadata !DIExpression()), !dbg !1412
  call void @llvm.dbg.declare(metadata i32* %id163, metadata !1413, metadata !DIExpression()), !dbg !1414
  %call164 = call i32 @GetOpenMPThreadId(), !dbg !1415
  store i32 %call164, i32* %id163, align 4, !dbg !1414
  call void @llvm.dbg.declare(metadata i16** %evaluate_indexes165, metadata !1416, metadata !DIExpression()), !dbg !1417
  call void @llvm.dbg.declare(metadata i64* %i166, metadata !1418, metadata !DIExpression()), !dbg !1419
  call void @llvm.dbg.declare(metadata i64* %x167, metadata !1420, metadata !DIExpression()), !dbg !1421
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %evaluate_pixel168, metadata !1422, metadata !DIExpression()), !dbg !1423
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q169, metadata !1424, metadata !DIExpression()), !dbg !1425
  %164 = load i32, i32* %status, align 4, !dbg !1426
  %cmp170 = icmp eq i32 %164, 0, !dbg !1428
  br i1 %cmp170, label %if.then172, label %if.end173, !dbg !1429

if.then172:                                       ; preds = %for.body160
  br label %for.inc430, !dbg !1430

if.end173:                                        ; preds = %for.body160
  %165 = load %struct._CacheView*, %struct._CacheView** %evaluate_view, align 8, !dbg !1431
  %166 = load i64, i64* %y, align 8, !dbg !1432
  %167 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !1433
  %columns174 = getelementptr inbounds %struct._Image, %struct._Image* %167, i32 0, i32 7, !dbg !1434
  %168 = load i64, i64* %columns174, align 8, !dbg !1434
  %169 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !1435
  %call175 = call %struct._PixelPacket* @QueueCacheViewAuthenticPixels(%struct._CacheView* %165, i64 0, i64 %166, i64 %168, i64 1, %struct._ExceptionInfo* %169), !dbg !1436
  store %struct._PixelPacket* %call175, %struct._PixelPacket** %q169, align 8, !dbg !1437
  %170 = load %struct._PixelPacket*, %struct._PixelPacket** %q169, align 8, !dbg !1438
  %cmp176 = icmp eq %struct._PixelPacket* %170, null, !dbg !1440
  br i1 %cmp176, label %if.then178, label %if.end179, !dbg !1441

if.then178:                                       ; preds = %if.end173
  store i32 0, i32* %status, align 4, !dbg !1442
  br label %for.inc430, !dbg !1444

if.end179:                                        ; preds = %if.end173
  %171 = load %struct._CacheView*, %struct._CacheView** %evaluate_view, align 8, !dbg !1445
  %call180 = call i16* @GetCacheViewAuthenticIndexQueue(%struct._CacheView* %171), !dbg !1446
  store i16* %call180, i16** %evaluate_indexes165, align 8, !dbg !1447
  %172 = load %struct._MagickPixelPacket**, %struct._MagickPixelPacket*** %evaluate_pixels, align 8, !dbg !1448
  %173 = load i32, i32* %id163, align 4, !dbg !1449
  %idxprom181 = sext i32 %173 to i64, !dbg !1448
  %arrayidx182 = getelementptr inbounds %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %172, i64 %idxprom181, !dbg !1448
  %174 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %arrayidx182, align 8, !dbg !1448
  store %struct._MagickPixelPacket* %174, %struct._MagickPixelPacket** %evaluate_pixel168, align 8, !dbg !1450
  store i64 0, i64* %x167, align 8, !dbg !1451
  br label %for.cond183, !dbg !1453

for.cond183:                                      ; preds = %for.inc189, %if.end179
  %175 = load i64, i64* %x167, align 8, !dbg !1454
  %176 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !1456
  %columns184 = getelementptr inbounds %struct._Image, %struct._Image* %176, i32 0, i32 7, !dbg !1457
  %177 = load i64, i64* %columns184, align 8, !dbg !1457
  %cmp185 = icmp slt i64 %175, %177, !dbg !1458
  br i1 %cmp185, label %for.body187, label %for.end191, !dbg !1459

for.body187:                                      ; preds = %for.cond183
  %178 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %evaluate_pixel168, align 8, !dbg !1460
  %179 = load i64, i64* %x167, align 8, !dbg !1461
  %arrayidx188 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %178, i64 %179, !dbg !1460
  %180 = bitcast %struct._MagickPixelPacket* %arrayidx188 to i8*, !dbg !1462
  %181 = bitcast %struct._MagickPixelPacket* %zero to i8*, !dbg !1462
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %180, i8* align 8 %181, i64 56, i1 false), !dbg !1462
  br label %for.inc189, !dbg !1460

for.inc189:                                       ; preds = %for.body187
  %182 = load i64, i64* %x167, align 8, !dbg !1463
  %inc190 = add nsw i64 %182, 1, !dbg !1463
  store i64 %inc190, i64* %x167, align 8, !dbg !1463
  br label %for.cond183, !dbg !1464, !llvm.loop !1465

for.end191:                                       ; preds = %for.cond183
  %183 = load %struct._Image*, %struct._Image** %images.addr, align 8, !dbg !1467
  store %struct._Image* %183, %struct._Image** %next162, align 8, !dbg !1468
  store i64 0, i64* %i166, align 8, !dbg !1469
  br label %for.cond192, !dbg !1471

for.cond192:                                      ; preds = %for.inc301, %for.end191
  %184 = load i64, i64* %i166, align 8, !dbg !1472
  %185 = load i64, i64* %number_images, align 8, !dbg !1474
  %cmp193 = icmp slt i64 %184, %185, !dbg !1475
  br i1 %cmp193, label %for.body195, label %for.end303, !dbg !1476

for.body195:                                      ; preds = %for.cond192
  call void @llvm.dbg.declare(metadata i16** %indexes196, metadata !1477, metadata !DIExpression()), !dbg !1479
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %p197, metadata !1480, metadata !DIExpression()), !dbg !1481
  %186 = load %struct._Image*, %struct._Image** %next162, align 8, !dbg !1482
  %187 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !1483
  %call198 = call %struct._CacheView* @AcquireVirtualCacheView(%struct._Image* %186, %struct._ExceptionInfo* %187), !dbg !1484
  store %struct._CacheView* %call198, %struct._CacheView** %image_view161, align 8, !dbg !1485
  %188 = load %struct._CacheView*, %struct._CacheView** %image_view161, align 8, !dbg !1486
  %189 = load i64, i64* %y, align 8, !dbg !1487
  %190 = load %struct._Image*, %struct._Image** %next162, align 8, !dbg !1488
  %columns199 = getelementptr inbounds %struct._Image, %struct._Image* %190, i32 0, i32 7, !dbg !1489
  %191 = load i64, i64* %columns199, align 8, !dbg !1489
  %192 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !1490
  %call200 = call %struct._PixelPacket* @GetCacheViewVirtualPixels(%struct._CacheView* %188, i64 0, i64 %189, i64 %191, i64 1, %struct._ExceptionInfo* %192), !dbg !1491
  store %struct._PixelPacket* %call200, %struct._PixelPacket** %p197, align 8, !dbg !1492
  %193 = load %struct._PixelPacket*, %struct._PixelPacket** %p197, align 8, !dbg !1493
  %cmp201 = icmp eq %struct._PixelPacket* %193, null, !dbg !1495
  br i1 %cmp201, label %if.then203, label %if.end205, !dbg !1496

if.then203:                                       ; preds = %for.body195
  %194 = load %struct._CacheView*, %struct._CacheView** %image_view161, align 8, !dbg !1497
  %call204 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %194), !dbg !1499
  store %struct._CacheView* %call204, %struct._CacheView** %image_view161, align 8, !dbg !1500
  br label %for.end303, !dbg !1501

if.end205:                                        ; preds = %for.body195
  %195 = load %struct._CacheView*, %struct._CacheView** %image_view161, align 8, !dbg !1502
  %call206 = call i16* @GetCacheViewVirtualIndexQueue(%struct._CacheView* %195), !dbg !1503
  store i16* %call206, i16** %indexes196, align 8, !dbg !1504
  store i64 0, i64* %x167, align 8, !dbg !1505
  br label %for.cond207, !dbg !1507

for.cond207:                                      ; preds = %for.inc296, %if.end205
  %196 = load i64, i64* %x167, align 8, !dbg !1508
  %197 = load %struct._Image*, %struct._Image** %next162, align 8, !dbg !1510
  %columns208 = getelementptr inbounds %struct._Image, %struct._Image* %197, i32 0, i32 7, !dbg !1511
  %198 = load i64, i64* %columns208, align 8, !dbg !1511
  %cmp209 = icmp slt i64 %196, %198, !dbg !1512
  br i1 %cmp209, label %for.body211, label %for.end298, !dbg !1513

for.body211:                                      ; preds = %for.cond207
  %199 = load %struct._RandomInfo**, %struct._RandomInfo*** %random_info, align 8, !dbg !1514
  %200 = load i32, i32* %id163, align 4, !dbg !1516
  %idxprom212 = sext i32 %200 to i64, !dbg !1514
  %arrayidx213 = getelementptr inbounds %struct._RandomInfo*, %struct._RandomInfo** %199, i64 %idxprom212, !dbg !1514
  %201 = load %struct._RandomInfo*, %struct._RandomInfo** %arrayidx213, align 8, !dbg !1514
  %202 = load %struct._PixelPacket*, %struct._PixelPacket** %p197, align 8, !dbg !1517
  %red214 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %202, i32 0, i32 2, !dbg !1517
  %203 = load i16, i16* %red214, align 2, !dbg !1517
  %204 = load i64, i64* %i166, align 8, !dbg !1518
  %cmp215 = icmp eq i64 %204, 0, !dbg !1519
  br i1 %cmp215, label %cond.true, label %cond.false, !dbg !1518

cond.true:                                        ; preds = %for.body211
  br label %cond.end, !dbg !1518

cond.false:                                       ; preds = %for.body211
  %205 = load i32, i32* %op.addr, align 4, !dbg !1520
  br label %cond.end, !dbg !1518

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 1, %cond.true ], [ %205, %cond.false ], !dbg !1518
  %206 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %evaluate_pixel168, align 8, !dbg !1521
  %207 = load i64, i64* %x167, align 8, !dbg !1522
  %arrayidx217 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %206, i64 %207, !dbg !1521
  %red218 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx217, i32 0, i32 5, !dbg !1523
  %208 = load float, float* %red218, align 8, !dbg !1523
  %call219 = call float @ApplyEvaluateOperator(%struct._RandomInfo* %201, i16 zeroext %203, i32 %cond, float %208), !dbg !1524
  %209 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %evaluate_pixel168, align 8, !dbg !1525
  %210 = load i64, i64* %x167, align 8, !dbg !1526
  %arrayidx220 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %209, i64 %210, !dbg !1525
  %red221 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx220, i32 0, i32 5, !dbg !1527
  store float %call219, float* %red221, align 8, !dbg !1528
  %211 = load %struct._RandomInfo**, %struct._RandomInfo*** %random_info, align 8, !dbg !1529
  %212 = load i32, i32* %id163, align 4, !dbg !1530
  %idxprom222 = sext i32 %212 to i64, !dbg !1529
  %arrayidx223 = getelementptr inbounds %struct._RandomInfo*, %struct._RandomInfo** %211, i64 %idxprom222, !dbg !1529
  %213 = load %struct._RandomInfo*, %struct._RandomInfo** %arrayidx223, align 8, !dbg !1529
  %214 = load %struct._PixelPacket*, %struct._PixelPacket** %p197, align 8, !dbg !1531
  %green224 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %214, i32 0, i32 1, !dbg !1531
  %215 = load i16, i16* %green224, align 2, !dbg !1531
  %216 = load i64, i64* %i166, align 8, !dbg !1532
  %cmp225 = icmp eq i64 %216, 0, !dbg !1533
  br i1 %cmp225, label %cond.true227, label %cond.false228, !dbg !1532

cond.true227:                                     ; preds = %cond.end
  br label %cond.end229, !dbg !1532

cond.false228:                                    ; preds = %cond.end
  %217 = load i32, i32* %op.addr, align 4, !dbg !1534
  br label %cond.end229, !dbg !1532

cond.end229:                                      ; preds = %cond.false228, %cond.true227
  %cond230 = phi i32 [ 1, %cond.true227 ], [ %217, %cond.false228 ], !dbg !1532
  %218 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %evaluate_pixel168, align 8, !dbg !1535
  %219 = load i64, i64* %x167, align 8, !dbg !1536
  %arrayidx231 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %218, i64 %219, !dbg !1535
  %green232 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx231, i32 0, i32 6, !dbg !1537
  %220 = load float, float* %green232, align 4, !dbg !1537
  %call233 = call float @ApplyEvaluateOperator(%struct._RandomInfo* %213, i16 zeroext %215, i32 %cond230, float %220), !dbg !1538
  %221 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %evaluate_pixel168, align 8, !dbg !1539
  %222 = load i64, i64* %x167, align 8, !dbg !1540
  %arrayidx234 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %221, i64 %222, !dbg !1539
  %green235 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx234, i32 0, i32 6, !dbg !1541
  store float %call233, float* %green235, align 4, !dbg !1542
  %223 = load %struct._RandomInfo**, %struct._RandomInfo*** %random_info, align 8, !dbg !1543
  %224 = load i32, i32* %id163, align 4, !dbg !1544
  %idxprom236 = sext i32 %224 to i64, !dbg !1543
  %arrayidx237 = getelementptr inbounds %struct._RandomInfo*, %struct._RandomInfo** %223, i64 %idxprom236, !dbg !1543
  %225 = load %struct._RandomInfo*, %struct._RandomInfo** %arrayidx237, align 8, !dbg !1543
  %226 = load %struct._PixelPacket*, %struct._PixelPacket** %p197, align 8, !dbg !1545
  %blue238 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %226, i32 0, i32 0, !dbg !1545
  %227 = load i16, i16* %blue238, align 2, !dbg !1545
  %228 = load i64, i64* %i166, align 8, !dbg !1546
  %cmp239 = icmp eq i64 %228, 0, !dbg !1547
  br i1 %cmp239, label %cond.true241, label %cond.false242, !dbg !1546

cond.true241:                                     ; preds = %cond.end229
  br label %cond.end243, !dbg !1546

cond.false242:                                    ; preds = %cond.end229
  %229 = load i32, i32* %op.addr, align 4, !dbg !1548
  br label %cond.end243, !dbg !1546

cond.end243:                                      ; preds = %cond.false242, %cond.true241
  %cond244 = phi i32 [ 1, %cond.true241 ], [ %229, %cond.false242 ], !dbg !1546
  %230 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %evaluate_pixel168, align 8, !dbg !1549
  %231 = load i64, i64* %x167, align 8, !dbg !1550
  %arrayidx245 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %230, i64 %231, !dbg !1549
  %blue246 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx245, i32 0, i32 7, !dbg !1551
  %232 = load float, float* %blue246, align 8, !dbg !1551
  %call247 = call float @ApplyEvaluateOperator(%struct._RandomInfo* %225, i16 zeroext %227, i32 %cond244, float %232), !dbg !1552
  %233 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %evaluate_pixel168, align 8, !dbg !1553
  %234 = load i64, i64* %x167, align 8, !dbg !1554
  %arrayidx248 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %233, i64 %234, !dbg !1553
  %blue249 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx248, i32 0, i32 7, !dbg !1555
  store float %call247, float* %blue249, align 8, !dbg !1556
  %235 = load %struct._RandomInfo**, %struct._RandomInfo*** %random_info, align 8, !dbg !1557
  %236 = load i32, i32* %id163, align 4, !dbg !1558
  %idxprom250 = sext i32 %236 to i64, !dbg !1557
  %arrayidx251 = getelementptr inbounds %struct._RandomInfo*, %struct._RandomInfo** %235, i64 %idxprom250, !dbg !1557
  %237 = load %struct._RandomInfo*, %struct._RandomInfo** %arrayidx251, align 8, !dbg !1557
  %238 = load %struct._PixelPacket*, %struct._PixelPacket** %p197, align 8, !dbg !1559
  %opacity252 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %238, i32 0, i32 3, !dbg !1559
  %239 = load i16, i16* %opacity252, align 2, !dbg !1559
  %conv253 = zext i16 %239 to i32, !dbg !1559
  %sub254 = sub nsw i32 65535, %conv253, !dbg !1559
  %conv255 = trunc i32 %sub254 to i16, !dbg !1559
  %240 = load i64, i64* %i166, align 8, !dbg !1560
  %cmp256 = icmp eq i64 %240, 0, !dbg !1561
  br i1 %cmp256, label %cond.true258, label %cond.false259, !dbg !1560

cond.true258:                                     ; preds = %cond.end243
  br label %cond.end260, !dbg !1560

cond.false259:                                    ; preds = %cond.end243
  %241 = load i32, i32* %op.addr, align 4, !dbg !1562
  br label %cond.end260, !dbg !1560

cond.end260:                                      ; preds = %cond.false259, %cond.true258
  %cond261 = phi i32 [ 1, %cond.true258 ], [ %241, %cond.false259 ], !dbg !1560
  %242 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %evaluate_pixel168, align 8, !dbg !1563
  %243 = load i64, i64* %x167, align 8, !dbg !1564
  %arrayidx262 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %242, i64 %243, !dbg !1563
  %opacity263 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx262, i32 0, i32 8, !dbg !1565
  %244 = load float, float* %opacity263, align 4, !dbg !1565
  %call264 = call float @ApplyEvaluateOperator(%struct._RandomInfo* %237, i16 zeroext %conv255, i32 %cond261, float %244), !dbg !1566
  %245 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %evaluate_pixel168, align 8, !dbg !1567
  %246 = load i64, i64* %x167, align 8, !dbg !1568
  %arrayidx265 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %245, i64 %246, !dbg !1567
  %opacity266 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx265, i32 0, i32 8, !dbg !1569
  store float %call264, float* %opacity266, align 4, !dbg !1570
  %247 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !1571
  %colorspace267 = getelementptr inbounds %struct._Image, %struct._Image* %247, i32 0, i32 1, !dbg !1573
  %248 = load i32, i32* %colorspace267, align 4, !dbg !1573
  %cmp268 = icmp eq i32 %248, 12, !dbg !1574
  br i1 %cmp268, label %if.then270, label %if.end294, !dbg !1575

if.then270:                                       ; preds = %cond.end260
  %249 = load %struct._RandomInfo**, %struct._RandomInfo*** %random_info, align 8, !dbg !1576
  %250 = load i32, i32* %id163, align 4, !dbg !1577
  %idxprom271 = sext i32 %250 to i64, !dbg !1576
  %arrayidx272 = getelementptr inbounds %struct._RandomInfo*, %struct._RandomInfo** %249, i64 %idxprom271, !dbg !1576
  %251 = load %struct._RandomInfo*, %struct._RandomInfo** %arrayidx272, align 8, !dbg !1576
  %252 = load i16*, i16** %indexes196, align 8, !dbg !1578
  %253 = load i64, i64* %x167, align 8, !dbg !1578
  %add.ptr273 = getelementptr inbounds i16, i16* %252, i64 %253, !dbg !1578
  %cmp274 = icmp eq i16* %add.ptr273, null, !dbg !1578
  br i1 %cmp274, label %cond.true276, label %cond.false277, !dbg !1578

cond.true276:                                     ; preds = %if.then270
  br label %cond.end280, !dbg !1578

cond.false277:                                    ; preds = %if.then270
  %254 = load i16*, i16** %indexes196, align 8, !dbg !1578
  %255 = load i64, i64* %x167, align 8, !dbg !1578
  %add.ptr278 = getelementptr inbounds i16, i16* %254, i64 %255, !dbg !1578
  %256 = load i16, i16* %add.ptr278, align 2, !dbg !1578
  %conv279 = zext i16 %256 to i32, !dbg !1578
  br label %cond.end280, !dbg !1578

cond.end280:                                      ; preds = %cond.false277, %cond.true276
  %cond281 = phi i32 [ 0, %cond.true276 ], [ %conv279, %cond.false277 ], !dbg !1578
  %conv282 = trunc i32 %cond281 to i16, !dbg !1578
  %257 = load i64, i64* %i166, align 8, !dbg !1579
  %cmp283 = icmp eq i64 %257, 0, !dbg !1580
  br i1 %cmp283, label %cond.true285, label %cond.false286, !dbg !1579

cond.true285:                                     ; preds = %cond.end280
  br label %cond.end287, !dbg !1579

cond.false286:                                    ; preds = %cond.end280
  %258 = load i32, i32* %op.addr, align 4, !dbg !1581
  br label %cond.end287, !dbg !1579

cond.end287:                                      ; preds = %cond.false286, %cond.true285
  %cond288 = phi i32 [ 1, %cond.true285 ], [ %258, %cond.false286 ], !dbg !1579
  %259 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %evaluate_pixel168, align 8, !dbg !1582
  %260 = load i64, i64* %x167, align 8, !dbg !1583
  %arrayidx289 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %259, i64 %260, !dbg !1582
  %index290 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx289, i32 0, i32 9, !dbg !1584
  %261 = load float, float* %index290, align 8, !dbg !1584
  %call291 = call float @ApplyEvaluateOperator(%struct._RandomInfo* %251, i16 zeroext %conv282, i32 %cond288, float %261), !dbg !1585
  %262 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %evaluate_pixel168, align 8, !dbg !1586
  %263 = load i64, i64* %x167, align 8, !dbg !1587
  %arrayidx292 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %262, i64 %263, !dbg !1586
  %index293 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx292, i32 0, i32 9, !dbg !1588
  store float %call291, float* %index293, align 8, !dbg !1589
  br label %if.end294, !dbg !1586

if.end294:                                        ; preds = %cond.end287, %cond.end260
  %264 = load %struct._PixelPacket*, %struct._PixelPacket** %p197, align 8, !dbg !1590
  %incdec.ptr295 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %264, i32 1, !dbg !1590
  store %struct._PixelPacket* %incdec.ptr295, %struct._PixelPacket** %p197, align 8, !dbg !1590
  br label %for.inc296, !dbg !1591

for.inc296:                                       ; preds = %if.end294
  %265 = load i64, i64* %x167, align 8, !dbg !1592
  %inc297 = add nsw i64 %265, 1, !dbg !1592
  store i64 %inc297, i64* %x167, align 8, !dbg !1592
  br label %for.cond207, !dbg !1593, !llvm.loop !1594

for.end298:                                       ; preds = %for.cond207
  %266 = load %struct._CacheView*, %struct._CacheView** %image_view161, align 8, !dbg !1596
  %call299 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %266), !dbg !1597
  store %struct._CacheView* %call299, %struct._CacheView** %image_view161, align 8, !dbg !1598
  %267 = load %struct._Image*, %struct._Image** %next162, align 8, !dbg !1599
  %call300 = call %struct._Image* @GetNextImageInList(%struct._Image* %267), !dbg !1600
  store %struct._Image* %call300, %struct._Image** %next162, align 8, !dbg !1601
  br label %for.inc301, !dbg !1602

for.inc301:                                       ; preds = %for.end298
  %268 = load i64, i64* %i166, align 8, !dbg !1603
  %inc302 = add nsw i64 %268, 1, !dbg !1603
  store i64 %inc302, i64* %i166, align 8, !dbg !1603
  br label %for.cond192, !dbg !1604, !llvm.loop !1605

for.end303:                                       ; preds = %if.then203, %for.cond192
  %269 = load i32, i32* %op.addr, align 4, !dbg !1607
  %cmp304 = icmp eq i32 %269, 27, !dbg !1609
  br i1 %cmp304, label %if.then306, label %if.end335, !dbg !1610

if.then306:                                       ; preds = %for.end303
  store i64 0, i64* %x167, align 8, !dbg !1611
  br label %for.cond307, !dbg !1613

for.cond307:                                      ; preds = %for.inc332, %if.then306
  %270 = load i64, i64* %x167, align 8, !dbg !1614
  %271 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !1616
  %columns308 = getelementptr inbounds %struct._Image, %struct._Image* %271, i32 0, i32 7, !dbg !1617
  %272 = load i64, i64* %columns308, align 8, !dbg !1617
  %cmp309 = icmp slt i64 %270, %272, !dbg !1618
  br i1 %cmp309, label %for.body311, label %for.end334, !dbg !1619

for.body311:                                      ; preds = %for.cond307
  %273 = load i64, i64* %number_images, align 8, !dbg !1620
  %conv312 = uitofp i64 %273 to float, !dbg !1620
  %274 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %evaluate_pixel168, align 8, !dbg !1622
  %275 = load i64, i64* %x167, align 8, !dbg !1623
  %arrayidx313 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %274, i64 %275, !dbg !1622
  %red314 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx313, i32 0, i32 5, !dbg !1624
  %276 = load float, float* %red314, align 8, !dbg !1625
  %div315 = fdiv float %276, %conv312, !dbg !1625
  store float %div315, float* %red314, align 8, !dbg !1625
  %277 = load i64, i64* %number_images, align 8, !dbg !1626
  %conv316 = uitofp i64 %277 to float, !dbg !1626
  %278 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %evaluate_pixel168, align 8, !dbg !1627
  %279 = load i64, i64* %x167, align 8, !dbg !1628
  %arrayidx317 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %278, i64 %279, !dbg !1627
  %green318 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx317, i32 0, i32 6, !dbg !1629
  %280 = load float, float* %green318, align 4, !dbg !1630
  %div319 = fdiv float %280, %conv316, !dbg !1630
  store float %div319, float* %green318, align 4, !dbg !1630
  %281 = load i64, i64* %number_images, align 8, !dbg !1631
  %conv320 = uitofp i64 %281 to float, !dbg !1631
  %282 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %evaluate_pixel168, align 8, !dbg !1632
  %283 = load i64, i64* %x167, align 8, !dbg !1633
  %arrayidx321 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %282, i64 %283, !dbg !1632
  %blue322 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx321, i32 0, i32 7, !dbg !1634
  %284 = load float, float* %blue322, align 8, !dbg !1635
  %div323 = fdiv float %284, %conv320, !dbg !1635
  store float %div323, float* %blue322, align 8, !dbg !1635
  %285 = load i64, i64* %number_images, align 8, !dbg !1636
  %conv324 = uitofp i64 %285 to float, !dbg !1636
  %286 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %evaluate_pixel168, align 8, !dbg !1637
  %287 = load i64, i64* %x167, align 8, !dbg !1638
  %arrayidx325 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %286, i64 %287, !dbg !1637
  %opacity326 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx325, i32 0, i32 8, !dbg !1639
  %288 = load float, float* %opacity326, align 4, !dbg !1640
  %div327 = fdiv float %288, %conv324, !dbg !1640
  store float %div327, float* %opacity326, align 4, !dbg !1640
  %289 = load i64, i64* %number_images, align 8, !dbg !1641
  %conv328 = uitofp i64 %289 to float, !dbg !1641
  %290 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %evaluate_pixel168, align 8, !dbg !1642
  %291 = load i64, i64* %x167, align 8, !dbg !1643
  %arrayidx329 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %290, i64 %291, !dbg !1642
  %index330 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx329, i32 0, i32 9, !dbg !1644
  %292 = load float, float* %index330, align 8, !dbg !1645
  %div331 = fdiv float %292, %conv328, !dbg !1645
  store float %div331, float* %index330, align 8, !dbg !1645
  br label %for.inc332, !dbg !1646

for.inc332:                                       ; preds = %for.body311
  %293 = load i64, i64* %x167, align 8, !dbg !1647
  %inc333 = add nsw i64 %293, 1, !dbg !1647
  store i64 %inc333, i64* %x167, align 8, !dbg !1647
  br label %for.cond307, !dbg !1648, !llvm.loop !1649

for.end334:                                       ; preds = %for.cond307
  br label %if.end335, !dbg !1650

if.end335:                                        ; preds = %for.end334, %for.end303
  %294 = load i32, i32* %op.addr, align 4, !dbg !1651
  %cmp336 = icmp eq i32 %294, 7, !dbg !1653
  br i1 %cmp336, label %if.then338, label %if.end369, !dbg !1654

if.then338:                                       ; preds = %if.end335
  store i64 0, i64* %x167, align 8, !dbg !1655
  br label %for.cond339, !dbg !1657

for.cond339:                                      ; preds = %for.inc366, %if.then338
  %295 = load i64, i64* %x167, align 8, !dbg !1658
  %296 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !1660
  %columns340 = getelementptr inbounds %struct._Image, %struct._Image* %296, i32 0, i32 7, !dbg !1661
  %297 = load i64, i64* %columns340, align 8, !dbg !1661
  %cmp341 = icmp slt i64 %295, %297, !dbg !1662
  br i1 %cmp341, label %for.body343, label %for.end368, !dbg !1663

for.body343:                                      ; preds = %for.cond339
  call void @llvm.dbg.declare(metadata i64* %j, metadata !1664, metadata !DIExpression()), !dbg !1666
  store i64 0, i64* %j, align 8, !dbg !1667
  br label %for.cond344, !dbg !1669

for.cond344:                                      ; preds = %for.inc363, %for.body343
  %298 = load i64, i64* %j, align 8, !dbg !1670
  %299 = load i64, i64* %number_images, align 8, !dbg !1672
  %sub345 = sub i64 %299, 1, !dbg !1673
  %cmp346 = icmp slt i64 %298, %sub345, !dbg !1674
  br i1 %cmp346, label %for.body348, label %for.end365, !dbg !1675

for.body348:                                      ; preds = %for.cond344
  %300 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %evaluate_pixel168, align 8, !dbg !1676
  %301 = load i64, i64* %x167, align 8, !dbg !1678
  %arrayidx349 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %300, i64 %301, !dbg !1676
  %red350 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx349, i32 0, i32 5, !dbg !1679
  %302 = load float, float* %red350, align 8, !dbg !1680
  %mul = fmul float %302, 0x3EF0001000000000, !dbg !1680
  store float %mul, float* %red350, align 8, !dbg !1680
  %303 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %evaluate_pixel168, align 8, !dbg !1681
  %304 = load i64, i64* %x167, align 8, !dbg !1682
  %arrayidx351 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %303, i64 %304, !dbg !1681
  %green352 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx351, i32 0, i32 6, !dbg !1683
  %305 = load float, float* %green352, align 4, !dbg !1684
  %mul353 = fmul float %305, 0x3EF0001000000000, !dbg !1684
  store float %mul353, float* %green352, align 4, !dbg !1684
  %306 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %evaluate_pixel168, align 8, !dbg !1685
  %307 = load i64, i64* %x167, align 8, !dbg !1686
  %arrayidx354 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %306, i64 %307, !dbg !1685
  %blue355 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx354, i32 0, i32 7, !dbg !1687
  %308 = load float, float* %blue355, align 8, !dbg !1688
  %mul356 = fmul float %308, 0x3EF0001000000000, !dbg !1688
  store float %mul356, float* %blue355, align 8, !dbg !1688
  %309 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %evaluate_pixel168, align 8, !dbg !1689
  %310 = load i64, i64* %x167, align 8, !dbg !1690
  %arrayidx357 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %309, i64 %310, !dbg !1689
  %opacity358 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx357, i32 0, i32 8, !dbg !1691
  %311 = load float, float* %opacity358, align 4, !dbg !1692
  %mul359 = fmul float %311, 0x3EF0001000000000, !dbg !1692
  store float %mul359, float* %opacity358, align 4, !dbg !1692
  %312 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %evaluate_pixel168, align 8, !dbg !1693
  %313 = load i64, i64* %x167, align 8, !dbg !1694
  %arrayidx360 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %312, i64 %313, !dbg !1693
  %index361 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx360, i32 0, i32 9, !dbg !1695
  %314 = load float, float* %index361, align 8, !dbg !1696
  %mul362 = fmul float %314, 0x3EF0001000000000, !dbg !1696
  store float %mul362, float* %index361, align 8, !dbg !1696
  br label %for.inc363, !dbg !1697

for.inc363:                                       ; preds = %for.body348
  %315 = load i64, i64* %j, align 8, !dbg !1698
  %inc364 = add nsw i64 %315, 1, !dbg !1698
  store i64 %inc364, i64* %j, align 8, !dbg !1698
  br label %for.cond344, !dbg !1699, !llvm.loop !1700

for.end365:                                       ; preds = %for.cond344
  br label %for.inc366, !dbg !1702

for.inc366:                                       ; preds = %for.end365
  %316 = load i64, i64* %x167, align 8, !dbg !1703
  %inc367 = add nsw i64 %316, 1, !dbg !1703
  store i64 %inc367, i64* %x167, align 8, !dbg !1703
  br label %for.cond339, !dbg !1704, !llvm.loop !1705

for.end368:                                       ; preds = %for.cond339
  br label %if.end369, !dbg !1706

if.end369:                                        ; preds = %for.end368, %if.end335
  store i64 0, i64* %x167, align 8, !dbg !1707
  br label %for.cond370, !dbg !1709

for.cond370:                                      ; preds = %for.inc409, %if.end369
  %317 = load i64, i64* %x167, align 8, !dbg !1710
  %318 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !1712
  %columns371 = getelementptr inbounds %struct._Image, %struct._Image* %318, i32 0, i32 7, !dbg !1713
  %319 = load i64, i64* %columns371, align 8, !dbg !1713
  %cmp372 = icmp slt i64 %317, %319, !dbg !1714
  br i1 %cmp372, label %for.body374, label %for.end411, !dbg !1715

for.body374:                                      ; preds = %for.cond370
  %320 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %evaluate_pixel168, align 8, !dbg !1716
  %321 = load i64, i64* %x167, align 8, !dbg !1716
  %arrayidx375 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %320, i64 %321, !dbg !1716
  %red376 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx375, i32 0, i32 5, !dbg !1716
  %322 = load float, float* %red376, align 8, !dbg !1716
  %call377 = call zeroext i16 @ClampToQuantum(float %322), !dbg !1716
  %323 = load %struct._PixelPacket*, %struct._PixelPacket** %q169, align 8, !dbg !1716
  %red378 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %323, i32 0, i32 2, !dbg !1716
  store i16 %call377, i16* %red378, align 2, !dbg !1716
  %324 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %evaluate_pixel168, align 8, !dbg !1718
  %325 = load i64, i64* %x167, align 8, !dbg !1718
  %arrayidx379 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %324, i64 %325, !dbg !1718
  %green380 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx379, i32 0, i32 6, !dbg !1718
  %326 = load float, float* %green380, align 4, !dbg !1718
  %call381 = call zeroext i16 @ClampToQuantum(float %326), !dbg !1718
  %327 = load %struct._PixelPacket*, %struct._PixelPacket** %q169, align 8, !dbg !1718
  %green382 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %327, i32 0, i32 1, !dbg !1718
  store i16 %call381, i16* %green382, align 2, !dbg !1718
  %328 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %evaluate_pixel168, align 8, !dbg !1719
  %329 = load i64, i64* %x167, align 8, !dbg !1719
  %arrayidx383 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %328, i64 %329, !dbg !1719
  %blue384 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx383, i32 0, i32 7, !dbg !1719
  %330 = load float, float* %blue384, align 8, !dbg !1719
  %call385 = call zeroext i16 @ClampToQuantum(float %330), !dbg !1719
  %331 = load %struct._PixelPacket*, %struct._PixelPacket** %q169, align 8, !dbg !1719
  %blue386 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %331, i32 0, i32 0, !dbg !1719
  store i16 %call385, i16* %blue386, align 2, !dbg !1719
  %332 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %evaluate_pixel168, align 8, !dbg !1720
  %333 = load i64, i64* %x167, align 8, !dbg !1720
  %arrayidx387 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %332, i64 %333, !dbg !1720
  %opacity388 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx387, i32 0, i32 8, !dbg !1720
  %334 = load float, float* %opacity388, align 4, !dbg !1720
  %call389 = call zeroext i16 @ClampToQuantum(float %334), !dbg !1720
  %conv390 = zext i16 %call389 to i32, !dbg !1720
  %sub391 = sub nsw i32 65535, %conv390, !dbg !1720
  %conv392 = trunc i32 %sub391 to i16, !dbg !1720
  %335 = load %struct._PixelPacket*, %struct._PixelPacket** %q169, align 8, !dbg !1720
  %opacity393 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %335, i32 0, i32 3, !dbg !1720
  store i16 %conv392, i16* %opacity393, align 2, !dbg !1720
  %336 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !1721
  %colorspace394 = getelementptr inbounds %struct._Image, %struct._Image* %336, i32 0, i32 1, !dbg !1723
  %337 = load i32, i32* %colorspace394, align 4, !dbg !1723
  %cmp395 = icmp eq i32 %337, 12, !dbg !1724
  br i1 %cmp395, label %if.then397, label %if.end407, !dbg !1725

if.then397:                                       ; preds = %for.body374
  %338 = load i16*, i16** %evaluate_indexes165, align 8, !dbg !1726
  %339 = load i64, i64* %x167, align 8, !dbg !1726
  %add.ptr398 = getelementptr inbounds i16, i16* %338, i64 %339, !dbg !1726
  %cmp399 = icmp ne i16* %add.ptr398, null, !dbg !1726
  br i1 %cmp399, label %if.then401, label %if.end406, !dbg !1729

if.then401:                                       ; preds = %if.then397
  %340 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %evaluate_pixel168, align 8, !dbg !1726
  %341 = load i64, i64* %x167, align 8, !dbg !1726
  %arrayidx402 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %340, i64 %341, !dbg !1726
  %index403 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx402, i32 0, i32 9, !dbg !1726
  %342 = load float, float* %index403, align 8, !dbg !1726
  %call404 = call zeroext i16 @ClampToQuantum(float %342), !dbg !1726
  %343 = load i16*, i16** %evaluate_indexes165, align 8, !dbg !1726
  %344 = load i64, i64* %x167, align 8, !dbg !1726
  %add.ptr405 = getelementptr inbounds i16, i16* %343, i64 %344, !dbg !1726
  store i16 %call404, i16* %add.ptr405, align 2, !dbg !1726
  br label %if.end406, !dbg !1726

if.end406:                                        ; preds = %if.then401, %if.then397
  br label %if.end407, !dbg !1729

if.end407:                                        ; preds = %if.end406, %for.body374
  %345 = load %struct._PixelPacket*, %struct._PixelPacket** %q169, align 8, !dbg !1730
  %incdec.ptr408 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %345, i32 1, !dbg !1730
  store %struct._PixelPacket* %incdec.ptr408, %struct._PixelPacket** %q169, align 8, !dbg !1730
  br label %for.inc409, !dbg !1731

for.inc409:                                       ; preds = %if.end407
  %346 = load i64, i64* %x167, align 8, !dbg !1732
  %inc410 = add nsw i64 %346, 1, !dbg !1732
  store i64 %inc410, i64* %x167, align 8, !dbg !1732
  br label %for.cond370, !dbg !1733, !llvm.loop !1734

for.end411:                                       ; preds = %for.cond370
  %347 = load %struct._CacheView*, %struct._CacheView** %evaluate_view, align 8, !dbg !1736
  %348 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !1738
  %call412 = call i32 @SyncCacheViewAuthenticPixels(%struct._CacheView* %347, %struct._ExceptionInfo* %348), !dbg !1739
  %cmp413 = icmp eq i32 %call412, 0, !dbg !1740
  br i1 %cmp413, label %if.then415, label %if.end416, !dbg !1741

if.then415:                                       ; preds = %for.end411
  store i32 0, i32* %status, align 4, !dbg !1742
  br label %if.end416, !dbg !1743

if.end416:                                        ; preds = %if.then415, %for.end411
  %349 = load %struct._Image*, %struct._Image** %images.addr, align 8, !dbg !1744
  %progress_monitor417 = getelementptr inbounds %struct._Image, %struct._Image* %349, i32 0, i32 47, !dbg !1746
  %350 = load i32 (i8*, i64, i64, i8*)*, i32 (i8*, i64, i64, i8*)** %progress_monitor417, align 8, !dbg !1746
  %cmp418 = icmp ne i32 (i8*, i64, i64, i8*)* %350, null, !dbg !1747
  br i1 %cmp418, label %if.then420, label %if.end429, !dbg !1748

if.then420:                                       ; preds = %if.end416
  call void @llvm.dbg.declare(metadata i32* %proceed421, metadata !1749, metadata !DIExpression()), !dbg !1751
  %351 = load %struct._Image*, %struct._Image** %images.addr, align 8, !dbg !1752
  %352 = load i64, i64* %progress, align 8, !dbg !1753
  %inc422 = add nsw i64 %352, 1, !dbg !1753
  store i64 %inc422, i64* %progress, align 8, !dbg !1753
  %353 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !1754
  %rows423 = getelementptr inbounds %struct._Image, %struct._Image* %353, i32 0, i32 8, !dbg !1755
  %354 = load i64, i64* %rows423, align 8, !dbg !1755
  %call424 = call i32 @SetImageProgress(%struct._Image* %351, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.5, i64 0, i64 0), i64 %352, i64 %354), !dbg !1756
  store i32 %call424, i32* %proceed421, align 4, !dbg !1757
  %355 = load i32, i32* %proceed421, align 4, !dbg !1758
  %cmp425 = icmp eq i32 %355, 0, !dbg !1760
  br i1 %cmp425, label %if.then427, label %if.end428, !dbg !1761

if.then427:                                       ; preds = %if.then420
  store i32 0, i32* %status, align 4, !dbg !1762
  br label %if.end428, !dbg !1763

if.end428:                                        ; preds = %if.then427, %if.then420
  br label %if.end429, !dbg !1764

if.end429:                                        ; preds = %if.end428, %if.end416
  br label %for.inc430, !dbg !1765

for.inc430:                                       ; preds = %if.end429, %if.then178, %if.then172
  %356 = load i64, i64* %y, align 8, !dbg !1766
  %inc431 = add nsw i64 %356, 1, !dbg !1766
  store i64 %inc431, i64* %y, align 8, !dbg !1766
  br label %for.cond156, !dbg !1767, !llvm.loop !1768

for.end432:                                       ; preds = %for.cond156
  br label %if.end433

if.end433:                                        ; preds = %for.end432, %for.end155
  %357 = load %struct._CacheView*, %struct._CacheView** %evaluate_view, align 8, !dbg !1770
  %call434 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %357), !dbg !1771
  store %struct._CacheView* %call434, %struct._CacheView** %evaluate_view, align 8, !dbg !1772
  %358 = load %struct._MagickPixelPacket**, %struct._MagickPixelPacket*** %evaluate_pixels, align 8, !dbg !1773
  %call435 = call %struct._MagickPixelPacket** @DestroyPixelThreadSet(%struct._MagickPixelPacket** %358), !dbg !1774
  store %struct._MagickPixelPacket** %call435, %struct._MagickPixelPacket*** %evaluate_pixels, align 8, !dbg !1775
  %359 = load %struct._RandomInfo**, %struct._RandomInfo*** %random_info, align 8, !dbg !1776
  %call436 = call %struct._RandomInfo** @DestroyRandomInfoThreadSet(%struct._RandomInfo** %359), !dbg !1777
  store %struct._RandomInfo** %call436, %struct._RandomInfo*** %random_info, align 8, !dbg !1778
  %360 = load i32, i32* %status, align 4, !dbg !1779
  %cmp437 = icmp eq i32 %360, 0, !dbg !1781
  br i1 %cmp437, label %if.then439, label %if.end441, !dbg !1782

if.then439:                                       ; preds = %if.end433
  %361 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !1783
  %call440 = call %struct._Image* @DestroyImage(%struct._Image* %361), !dbg !1784
  store %struct._Image* %call440, %struct._Image** %image, align 8, !dbg !1785
  br label %if.end441, !dbg !1786

if.end441:                                        ; preds = %if.then439, %if.end433
  %362 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !1787
  store %struct._Image* %362, %struct._Image** %retval, align 8, !dbg !1788
  br label %return, !dbg !1788

return:                                           ; preds = %if.end441, %if.then14, %if.then7, %if.then3
  %363 = load %struct._Image*, %struct._Image** %retval, align 8, !dbg !1789
  ret %struct._Image* %363, !dbg !1789
}

declare dso_local i32 @LogMagickEvent(i32, i8*, i8*, i64, i8*, ...) #2

declare dso_local %struct._Image* @CloneImage(%struct._Image*, i64, i64, i32, %struct._ExceptionInfo*) #2

declare dso_local i32 @SetImageStorageClass(%struct._Image*, i32) #2

declare dso_local void @InheritException(%struct._ExceptionInfo*, %struct._ExceptionInfo*) #2

declare dso_local %struct._Image* @DestroyImage(%struct._Image*) #2

declare dso_local i64 @GetImageListLength(%struct._Image*) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct._MagickPixelPacket** @AcquirePixelThreadSet(%struct._Image* %image, i64 %number_images) #0 !dbg !1790 {
entry:
  %retval = alloca %struct._MagickPixelPacket**, align 8
  %image.addr = alloca %struct._Image*, align 8
  %number_images.addr = alloca i64, align 8
  %i = alloca i64, align 8
  %j = alloca i64, align 8
  %pixels = alloca %struct._MagickPixelPacket**, align 8
  %length = alloca i64, align 8
  %number_threads = alloca i64, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !1794, metadata !DIExpression()), !dbg !1795
  store i64 %number_images, i64* %number_images.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %number_images.addr, metadata !1796, metadata !DIExpression()), !dbg !1797
  call void @llvm.dbg.declare(metadata i64* %i, metadata !1798, metadata !DIExpression()), !dbg !1799
  call void @llvm.dbg.declare(metadata i64* %j, metadata !1800, metadata !DIExpression()), !dbg !1801
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket*** %pixels, metadata !1802, metadata !DIExpression()), !dbg !1803
  call void @llvm.dbg.declare(metadata i64* %length, metadata !1804, metadata !DIExpression()), !dbg !1805
  call void @llvm.dbg.declare(metadata i64* %number_threads, metadata !1806, metadata !DIExpression()), !dbg !1807
  %call = call i64 @GetMagickResourceLimit(i32 6), !dbg !1808
  store i64 %call, i64* %number_threads, align 8, !dbg !1809
  %0 = load i64, i64* %number_threads, align 8, !dbg !1810
  %call1 = call i8* @AcquireQuantumMemory(i64 %0, i64 8) #7, !dbg !1811
  %1 = bitcast i8* %call1 to %struct._MagickPixelPacket**, !dbg !1812
  store %struct._MagickPixelPacket** %1, %struct._MagickPixelPacket*** %pixels, align 8, !dbg !1813
  %2 = load %struct._MagickPixelPacket**, %struct._MagickPixelPacket*** %pixels, align 8, !dbg !1814
  %cmp = icmp eq %struct._MagickPixelPacket** %2, null, !dbg !1816
  br i1 %cmp, label %if.then, label %if.end, !dbg !1817

if.then:                                          ; preds = %entry
  store %struct._MagickPixelPacket** null, %struct._MagickPixelPacket*** %retval, align 8, !dbg !1818
  br label %return, !dbg !1818

if.end:                                           ; preds = %entry
  %3 = load %struct._MagickPixelPacket**, %struct._MagickPixelPacket*** %pixels, align 8, !dbg !1819
  %4 = bitcast %struct._MagickPixelPacket** %3 to i8*, !dbg !1819
  %5 = load i64, i64* %number_threads, align 8, !dbg !1820
  %mul = mul i64 %5, 8, !dbg !1821
  %call2 = call i8* @ResetMagickMemory(i8* %4, i32 0, i64 %mul), !dbg !1822
  store i64 0, i64* %i, align 8, !dbg !1823
  br label %for.cond, !dbg !1825

for.cond:                                         ; preds = %for.inc18, %if.end
  %6 = load i64, i64* %i, align 8, !dbg !1826
  %7 = load i64, i64* %number_threads, align 8, !dbg !1828
  %cmp3 = icmp slt i64 %6, %7, !dbg !1829
  br i1 %cmp3, label %for.body, label %for.end20, !dbg !1830

for.body:                                         ; preds = %for.cond
  %8 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1831
  %columns = getelementptr inbounds %struct._Image, %struct._Image* %8, i32 0, i32 7, !dbg !1833
  %9 = load i64, i64* %columns, align 8, !dbg !1833
  store i64 %9, i64* %length, align 8, !dbg !1834
  %10 = load i64, i64* %length, align 8, !dbg !1835
  %11 = load i64, i64* %number_images.addr, align 8, !dbg !1837
  %cmp4 = icmp ult i64 %10, %11, !dbg !1838
  br i1 %cmp4, label %if.then5, label %if.end6, !dbg !1839

if.then5:                                         ; preds = %for.body
  %12 = load i64, i64* %number_images.addr, align 8, !dbg !1840
  store i64 %12, i64* %length, align 8, !dbg !1841
  br label %if.end6, !dbg !1842

if.end6:                                          ; preds = %if.then5, %for.body
  %13 = load i64, i64* %length, align 8, !dbg !1843
  %call7 = call i8* @AcquireQuantumMemory(i64 %13, i64 56) #7, !dbg !1844
  %14 = bitcast i8* %call7 to %struct._MagickPixelPacket*, !dbg !1845
  %15 = load %struct._MagickPixelPacket**, %struct._MagickPixelPacket*** %pixels, align 8, !dbg !1846
  %16 = load i64, i64* %i, align 8, !dbg !1847
  %arrayidx = getelementptr inbounds %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %15, i64 %16, !dbg !1846
  store %struct._MagickPixelPacket* %14, %struct._MagickPixelPacket** %arrayidx, align 8, !dbg !1848
  %17 = load %struct._MagickPixelPacket**, %struct._MagickPixelPacket*** %pixels, align 8, !dbg !1849
  %18 = load i64, i64* %i, align 8, !dbg !1851
  %arrayidx8 = getelementptr inbounds %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %17, i64 %18, !dbg !1849
  %19 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %arrayidx8, align 8, !dbg !1849
  %cmp9 = icmp eq %struct._MagickPixelPacket* %19, null, !dbg !1852
  br i1 %cmp9, label %if.then10, label %if.end12, !dbg !1853

if.then10:                                        ; preds = %if.end6
  %20 = load %struct._MagickPixelPacket**, %struct._MagickPixelPacket*** %pixels, align 8, !dbg !1854
  %call11 = call %struct._MagickPixelPacket** @DestroyPixelThreadSet(%struct._MagickPixelPacket** %20), !dbg !1855
  store %struct._MagickPixelPacket** %call11, %struct._MagickPixelPacket*** %retval, align 8, !dbg !1856
  br label %return, !dbg !1856

if.end12:                                         ; preds = %if.end6
  store i64 0, i64* %j, align 8, !dbg !1857
  br label %for.cond13, !dbg !1859

for.cond13:                                       ; preds = %for.inc, %if.end12
  %21 = load i64, i64* %j, align 8, !dbg !1860
  %22 = load i64, i64* %length, align 8, !dbg !1862
  %cmp14 = icmp slt i64 %21, %22, !dbg !1863
  br i1 %cmp14, label %for.body15, label %for.end, !dbg !1864

for.body15:                                       ; preds = %for.cond13
  %23 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !1865
  %24 = load %struct._MagickPixelPacket**, %struct._MagickPixelPacket*** %pixels, align 8, !dbg !1866
  %25 = load i64, i64* %i, align 8, !dbg !1867
  %arrayidx16 = getelementptr inbounds %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %24, i64 %25, !dbg !1866
  %26 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %arrayidx16, align 8, !dbg !1866
  %27 = load i64, i64* %j, align 8, !dbg !1868
  %arrayidx17 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %26, i64 %27, !dbg !1866
  call void @GetMagickPixelPacket(%struct._Image* %23, %struct._MagickPixelPacket* %arrayidx17), !dbg !1869
  br label %for.inc, !dbg !1869

for.inc:                                          ; preds = %for.body15
  %28 = load i64, i64* %j, align 8, !dbg !1870
  %inc = add nsw i64 %28, 1, !dbg !1870
  store i64 %inc, i64* %j, align 8, !dbg !1870
  br label %for.cond13, !dbg !1871, !llvm.loop !1872

for.end:                                          ; preds = %for.cond13
  br label %for.inc18, !dbg !1874

for.inc18:                                        ; preds = %for.end
  %29 = load i64, i64* %i, align 8, !dbg !1875
  %inc19 = add nsw i64 %29, 1, !dbg !1875
  store i64 %inc19, i64* %i, align 8, !dbg !1875
  br label %for.cond, !dbg !1876, !llvm.loop !1877

for.end20:                                        ; preds = %for.cond
  %30 = load %struct._MagickPixelPacket**, %struct._MagickPixelPacket*** %pixels, align 8, !dbg !1879
  store %struct._MagickPixelPacket** %30, %struct._MagickPixelPacket*** %retval, align 8, !dbg !1880
  br label %return, !dbg !1880

return:                                           ; preds = %for.end20, %if.then10, %if.then
  %31 = load %struct._MagickPixelPacket**, %struct._MagickPixelPacket*** %retval, align 8, !dbg !1881
  ret %struct._MagickPixelPacket** %31, !dbg !1881
}

declare dso_local i32 @ThrowMagickException(%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) #2

declare dso_local void @GetMagickPixelPacket(%struct._Image*, %struct._MagickPixelPacket*) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct._RandomInfo** @AcquireRandomInfoThreadSet() #0 !dbg !1882 {
entry:
  %retval = alloca %struct._RandomInfo**, align 8
  %i = alloca i64, align 8
  %random_info = alloca %struct._RandomInfo**, align 8
  %number_threads = alloca i64, align 8
  call void @llvm.dbg.declare(metadata i64* %i, metadata !1886, metadata !DIExpression()), !dbg !1887
  call void @llvm.dbg.declare(metadata %struct._RandomInfo*** %random_info, metadata !1888, metadata !DIExpression()), !dbg !1889
  call void @llvm.dbg.declare(metadata i64* %number_threads, metadata !1890, metadata !DIExpression()), !dbg !1891
  %call = call i64 @GetMagickResourceLimit(i32 6), !dbg !1892
  store i64 %call, i64* %number_threads, align 8, !dbg !1893
  %0 = load i64, i64* %number_threads, align 8, !dbg !1894
  %call1 = call i8* @AcquireAlignedMemory(i64 %0, i64 8) #7, !dbg !1895
  %1 = bitcast i8* %call1 to %struct._RandomInfo**, !dbg !1896
  store %struct._RandomInfo** %1, %struct._RandomInfo*** %random_info, align 8, !dbg !1897
  %2 = load %struct._RandomInfo**, %struct._RandomInfo*** %random_info, align 8, !dbg !1898
  %cmp = icmp eq %struct._RandomInfo** %2, null, !dbg !1900
  br i1 %cmp, label %if.then, label %if.end, !dbg !1901

if.then:                                          ; preds = %entry
  store %struct._RandomInfo** null, %struct._RandomInfo*** %retval, align 8, !dbg !1902
  br label %return, !dbg !1902

if.end:                                           ; preds = %entry
  %3 = load %struct._RandomInfo**, %struct._RandomInfo*** %random_info, align 8, !dbg !1903
  %4 = bitcast %struct._RandomInfo** %3 to i8*, !dbg !1903
  %5 = load i64, i64* %number_threads, align 8, !dbg !1904
  %mul = mul i64 %5, 8, !dbg !1905
  %call2 = call i8* @ResetMagickMemory(i8* %4, i32 0, i64 %mul), !dbg !1906
  store i64 0, i64* %i, align 8, !dbg !1907
  br label %for.cond, !dbg !1909

for.cond:                                         ; preds = %for.inc, %if.end
  %6 = load i64, i64* %i, align 8, !dbg !1910
  %7 = load i64, i64* %number_threads, align 8, !dbg !1912
  %cmp3 = icmp slt i64 %6, %7, !dbg !1913
  br i1 %cmp3, label %for.body, label %for.end, !dbg !1914

for.body:                                         ; preds = %for.cond
  %call4 = call %struct._RandomInfo* @AcquireRandomInfo(), !dbg !1915
  %8 = load %struct._RandomInfo**, %struct._RandomInfo*** %random_info, align 8, !dbg !1917
  %9 = load i64, i64* %i, align 8, !dbg !1918
  %arrayidx = getelementptr inbounds %struct._RandomInfo*, %struct._RandomInfo** %8, i64 %9, !dbg !1917
  store %struct._RandomInfo* %call4, %struct._RandomInfo** %arrayidx, align 8, !dbg !1919
  %10 = load %struct._RandomInfo**, %struct._RandomInfo*** %random_info, align 8, !dbg !1920
  %11 = load i64, i64* %i, align 8, !dbg !1922
  %arrayidx5 = getelementptr inbounds %struct._RandomInfo*, %struct._RandomInfo** %10, i64 %11, !dbg !1920
  %12 = load %struct._RandomInfo*, %struct._RandomInfo** %arrayidx5, align 8, !dbg !1920
  %cmp6 = icmp eq %struct._RandomInfo* %12, null, !dbg !1923
  br i1 %cmp6, label %if.then7, label %if.end9, !dbg !1924

if.then7:                                         ; preds = %for.body
  %13 = load %struct._RandomInfo**, %struct._RandomInfo*** %random_info, align 8, !dbg !1925
  %call8 = call %struct._RandomInfo** @DestroyRandomInfoThreadSet(%struct._RandomInfo** %13), !dbg !1926
  store %struct._RandomInfo** %call8, %struct._RandomInfo*** %retval, align 8, !dbg !1927
  br label %return, !dbg !1927

if.end9:                                          ; preds = %for.body
  br label %for.inc, !dbg !1928

for.inc:                                          ; preds = %if.end9
  %14 = load i64, i64* %i, align 8, !dbg !1929
  %inc = add nsw i64 %14, 1, !dbg !1929
  store i64 %inc, i64* %i, align 8, !dbg !1929
  br label %for.cond, !dbg !1930, !llvm.loop !1931

for.end:                                          ; preds = %for.cond
  %15 = load %struct._RandomInfo**, %struct._RandomInfo*** %random_info, align 8, !dbg !1933
  store %struct._RandomInfo** %15, %struct._RandomInfo*** %retval, align 8, !dbg !1934
  br label %return, !dbg !1934

return:                                           ; preds = %for.end, %if.then7, %if.then
  %16 = load %struct._RandomInfo**, %struct._RandomInfo*** %retval, align 8, !dbg !1935
  ret %struct._RandomInfo** %16, !dbg !1935
}

declare dso_local %struct._CacheView* @AcquireAuthenticCacheView(%struct._Image*, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @GetOpenMPThreadId() #0 !dbg !1936 {
entry:
  ret i32 0, !dbg !1940
}

declare dso_local %struct._PixelPacket* @QueueCacheViewAuthenticPixels(%struct._CacheView*, i64, i64, i64, i64, %struct._ExceptionInfo*) #2

declare dso_local i16* @GetCacheViewAuthenticIndexQueue(%struct._CacheView*) #2

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #3

declare dso_local %struct._CacheView* @AcquireVirtualCacheView(%struct._Image*, %struct._ExceptionInfo*) #2

declare dso_local %struct._PixelPacket* @GetCacheViewVirtualPixels(%struct._CacheView*, i64, i64, i64, i64, %struct._ExceptionInfo*) #2

declare dso_local %struct._CacheView* @DestroyCacheView(%struct._CacheView*) #2

declare dso_local i16* @GetCacheViewVirtualIndexQueue(%struct._CacheView*) #2

; Function Attrs: noinline nounwind uwtable
define internal float @ApplyEvaluateOperator(%struct._RandomInfo* %random_info, i16 zeroext %pixel, i32 %op, float %value) #0 !dbg !1941 {
entry:
  %random_info.addr = alloca %struct._RandomInfo*, align 8
  %pixel.addr = alloca i16, align 2
  %op.addr = alloca i32, align 4
  %value.addr = alloca float, align 4
  %result = alloca float, align 4
  store %struct._RandomInfo* %random_info, %struct._RandomInfo** %random_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._RandomInfo** %random_info.addr, metadata !1946, metadata !DIExpression()), !dbg !1947
  store i16 %pixel, i16* %pixel.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %pixel.addr, metadata !1948, metadata !DIExpression()), !dbg !1949
  store i32 %op, i32* %op.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %op.addr, metadata !1950, metadata !DIExpression()), !dbg !1951
  store float %value, float* %value.addr, align 4
  call void @llvm.dbg.declare(metadata float* %value.addr, metadata !1952, metadata !DIExpression()), !dbg !1953
  call void @llvm.dbg.declare(metadata float* %result, metadata !1954, metadata !DIExpression()), !dbg !1955
  store float 0.000000e+00, float* %result, align 4, !dbg !1956
  %0 = load i32, i32* %op.addr, align 4, !dbg !1957
  switch i32 %0, label %sw.epilog [
    i32 0, label %sw.bb
    i32 28, label %sw.bb1
    i32 1, label %sw.bb5
    i32 26, label %sw.bb9
    i32 2, label %sw.bb16
    i32 24, label %sw.bb22
    i32 3, label %sw.bb32
    i32 29, label %sw.bb40
    i32 18, label %sw.bb49
    i32 19, label %sw.bb52
    i32 20, label %sw.bb55
    i32 4, label %sw.bb58
    i32 14, label %sw.bb64
    i32 5, label %sw.bb83
    i32 27, label %sw.bb88
    i32 30, label %sw.bb92
    i32 6, label %sw.bb96
    i32 21, label %sw.bb101
    i32 7, label %sw.bb104
    i32 8, label %sw.bb108
    i32 22, label %sw.bb114
    i32 13, label %sw.bb117
    i32 9, label %sw.bb125
    i32 10, label %sw.bb131
    i32 25, label %sw.bb132
    i32 11, label %sw.bb143
    i32 31, label %sw.bb147
    i32 15, label %sw.bb151
    i32 16, label %sw.bb157
    i32 17, label %sw.bb167
    i32 23, label %sw.bb177
    i32 12, label %sw.bb180
  ], !dbg !1958

sw.bb:                                            ; preds = %entry
  br label %sw.epilog, !dbg !1959

sw.bb1:                                           ; preds = %entry
  %1 = load i16, i16* %pixel.addr, align 2, !dbg !1961
  %conv = zext i16 %1 to i32, !dbg !1961
  %conv2 = sitofp i32 %conv to float, !dbg !1961
  %2 = load float, float* %value.addr, align 4, !dbg !1963
  %add = fadd float %conv2, %2, !dbg !1964
  %conv3 = fpext float %add to double, !dbg !1965
  %3 = call double @llvm.fabs.f64(double %conv3), !dbg !1966
  %conv4 = fptrunc double %3 to float, !dbg !1967
  store float %conv4, float* %result, align 4, !dbg !1968
  br label %sw.epilog, !dbg !1969

sw.bb5:                                           ; preds = %entry
  %4 = load i16, i16* %pixel.addr, align 2, !dbg !1970
  %conv6 = zext i16 %4 to i32, !dbg !1970
  %conv7 = sitofp i32 %conv6 to float, !dbg !1970
  %5 = load float, float* %value.addr, align 4, !dbg !1972
  %add8 = fadd float %conv7, %5, !dbg !1973
  store float %add8, float* %result, align 4, !dbg !1974
  br label %sw.epilog, !dbg !1975

sw.bb9:                                           ; preds = %entry
  %6 = load i16, i16* %pixel.addr, align 2, !dbg !1976
  %conv10 = zext i16 %6 to i32, !dbg !1976
  %conv11 = sitofp i32 %conv10 to float, !dbg !1976
  %7 = load float, float* %value.addr, align 4, !dbg !1978
  %add12 = fadd float %conv11, %7, !dbg !1979
  store float %add12, float* %result, align 4, !dbg !1980
  %8 = load float, float* %result, align 4, !dbg !1981
  %conv13 = fpext float %8 to double, !dbg !1982
  %div = fdiv double %conv13, 6.553600e+04, !dbg !1983
  %9 = call double @llvm.floor.f64(double %div), !dbg !1984
  %mul = fmul double 6.553600e+04, %9, !dbg !1985
  %10 = load float, float* %result, align 4, !dbg !1986
  %conv14 = fpext float %10 to double, !dbg !1986
  %sub = fsub double %conv14, %mul, !dbg !1986
  %conv15 = fptrunc double %sub to float, !dbg !1986
  store float %conv15, float* %result, align 4, !dbg !1986
  br label %sw.epilog, !dbg !1987

sw.bb16:                                          ; preds = %entry
  %11 = load i16, i16* %pixel.addr, align 2, !dbg !1988
  %conv17 = zext i16 %11 to i64, !dbg !1990
  %12 = load float, float* %value.addr, align 4, !dbg !1991
  %conv18 = fpext float %12 to double, !dbg !1991
  %add19 = fadd double %conv18, 5.000000e-01, !dbg !1992
  %conv20 = fptoui double %add19 to i64, !dbg !1993
  %and = and i64 %conv17, %conv20, !dbg !1994
  %conv21 = uitofp i64 %and to float, !dbg !1995
  store float %conv21, float* %result, align 4, !dbg !1996
  br label %sw.epilog, !dbg !1997

sw.bb22:                                          ; preds = %entry
  %13 = load i16, i16* %pixel.addr, align 2, !dbg !1998
  %conv23 = zext i16 %13 to i32, !dbg !1998
  %conv24 = sitofp i32 %conv23 to double, !dbg !1998
  %mul25 = fmul double 0x3F1922147658A371, %conv24, !dbg !2000
  %14 = load float, float* %value.addr, align 4, !dbg !2001
  %conv26 = fpext float %14 to double, !dbg !2001
  %mul27 = fmul double %mul25, %conv26, !dbg !2002
  %call = call double @cos(double %mul27) #8, !dbg !2003
  %mul28 = fmul double 5.000000e-01, %call, !dbg !2004
  %add29 = fadd double %mul28, 5.000000e-01, !dbg !2005
  %mul30 = fmul double 6.553500e+04, %add29, !dbg !2006
  %conv31 = fptrunc double %mul30 to float, !dbg !2007
  store float %conv31, float* %result, align 4, !dbg !2008
  br label %sw.epilog, !dbg !2009

sw.bb32:                                          ; preds = %entry
  %15 = load i16, i16* %pixel.addr, align 2, !dbg !2010
  %conv33 = zext i16 %15 to i32, !dbg !2010
  %conv34 = sitofp i32 %conv33 to double, !dbg !2010
  %16 = load float, float* %value.addr, align 4, !dbg !2012
  %conv35 = fpext float %16 to double, !dbg !2012
  %cmp = fcmp oeq double %conv35, 0.000000e+00, !dbg !2013
  br i1 %cmp, label %cond.true, label %cond.false, !dbg !2012

cond.true:                                        ; preds = %sw.bb32
  br label %cond.end, !dbg !2012

cond.false:                                       ; preds = %sw.bb32
  %17 = load float, float* %value.addr, align 4, !dbg !2014
  %conv37 = fpext float %17 to double, !dbg !2014
  br label %cond.end, !dbg !2012

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi double [ 1.000000e+00, %cond.true ], [ %conv37, %cond.false ], !dbg !2012
  %div38 = fdiv double %conv34, %cond, !dbg !2015
  %conv39 = fptrunc double %div38 to float, !dbg !2010
  store float %conv39, float* %result, align 4, !dbg !2016
  br label %sw.epilog, !dbg !2017

sw.bb40:                                          ; preds = %entry
  %18 = load float, float* %value.addr, align 4, !dbg !2018
  %conv41 = fpext float %18 to double, !dbg !2018
  %mul42 = fmul double %conv41, 0x3EF0001000100010, !dbg !2020
  %19 = load i16, i16* %pixel.addr, align 2, !dbg !2021
  %conv43 = zext i16 %19 to i32, !dbg !2021
  %conv44 = sitofp i32 %conv43 to double, !dbg !2021
  %mul45 = fmul double %mul42, %conv44, !dbg !2022
  %call46 = call double @exp(double %mul45) #8, !dbg !2023
  %mul47 = fmul double 6.553500e+04, %call46, !dbg !2024
  %conv48 = fptrunc double %mul47 to float, !dbg !2025
  store float %conv48, float* %result, align 4, !dbg !2026
  br label %sw.epilog, !dbg !2027

sw.bb49:                                          ; preds = %entry
  %20 = load %struct._RandomInfo*, %struct._RandomInfo** %random_info.addr, align 8, !dbg !2028
  %21 = load i16, i16* %pixel.addr, align 2, !dbg !2030
  %22 = load float, float* %value.addr, align 4, !dbg !2031
  %call50 = call double @GenerateDifferentialNoise(%struct._RandomInfo* %20, i16 zeroext %21, i32 2, float %22), !dbg !2032
  %conv51 = fptrunc double %call50 to float, !dbg !2033
  store float %conv51, float* %result, align 4, !dbg !2034
  br label %sw.epilog, !dbg !2035

sw.bb52:                                          ; preds = %entry
  %23 = load %struct._RandomInfo*, %struct._RandomInfo** %random_info.addr, align 8, !dbg !2036
  %24 = load i16, i16* %pixel.addr, align 2, !dbg !2038
  %25 = load float, float* %value.addr, align 4, !dbg !2039
  %call53 = call double @GenerateDifferentialNoise(%struct._RandomInfo* %23, i16 zeroext %24, i32 4, float %25), !dbg !2040
  %conv54 = fptrunc double %call53 to float, !dbg !2041
  store float %conv54, float* %result, align 4, !dbg !2042
  br label %sw.epilog, !dbg !2043

sw.bb55:                                          ; preds = %entry
  %26 = load %struct._RandomInfo*, %struct._RandomInfo** %random_info.addr, align 8, !dbg !2044
  %27 = load i16, i16* %pixel.addr, align 2, !dbg !2046
  %28 = load float, float* %value.addr, align 4, !dbg !2047
  %call56 = call double @GenerateDifferentialNoise(%struct._RandomInfo* %26, i16 zeroext %27, i32 5, float %28), !dbg !2048
  %conv57 = fptrunc double %call56 to float, !dbg !2049
  store float %conv57, float* %result, align 4, !dbg !2050
  br label %sw.epilog, !dbg !2051

sw.bb58:                                          ; preds = %entry
  %29 = load i16, i16* %pixel.addr, align 2, !dbg !2052
  %conv59 = zext i16 %29 to i64, !dbg !2054
  %30 = load float, float* %value.addr, align 4, !dbg !2055
  %conv60 = fpext float %30 to double, !dbg !2055
  %add61 = fadd double %conv60, 5.000000e-01, !dbg !2056
  %conv62 = fptoui double %add61 to i64, !dbg !2057
  %shl = shl i64 %conv59, %conv62, !dbg !2058
  %conv63 = uitofp i64 %shl to float, !dbg !2059
  store float %conv63, float* %result, align 4, !dbg !2060
  br label %sw.epilog, !dbg !2061

sw.bb64:                                          ; preds = %entry
  %31 = load i16, i16* %pixel.addr, align 2, !dbg !2062
  %conv65 = zext i16 %31 to i32, !dbg !2062
  %conv66 = sitofp i32 %conv65 to double, !dbg !2062
  %mul67 = fmul double 0x3EF0001000100010, %conv66, !dbg !2065
  %cmp68 = fcmp oge double %mul67, 1.000000e-15, !dbg !2066
  br i1 %cmp68, label %if.then, label %if.end, !dbg !2067

if.then:                                          ; preds = %sw.bb64
  %32 = load float, float* %value.addr, align 4, !dbg !2068
  %conv70 = fpext float %32 to double, !dbg !2068
  %mul71 = fmul double 0x3EF0001000100010, %conv70, !dbg !2069
  %33 = load i16, i16* %pixel.addr, align 2, !dbg !2070
  %conv72 = zext i16 %33 to i32, !dbg !2070
  %conv73 = sitofp i32 %conv72 to double, !dbg !2070
  %mul74 = fmul double %mul71, %conv73, !dbg !2071
  %add75 = fadd double %mul74, 1.000000e+00, !dbg !2072
  %call76 = call double @log(double %add75) #8, !dbg !2073
  %mul77 = fmul double 6.553500e+04, %call76, !dbg !2074
  %34 = load float, float* %value.addr, align 4, !dbg !2075
  %conv78 = fpext float %34 to double, !dbg !2075
  %add79 = fadd double %conv78, 1.000000e+00, !dbg !2076
  %call80 = call double @log(double %add79) #8, !dbg !2077
  %div81 = fdiv double %mul77, %call80, !dbg !2078
  %conv82 = fptrunc double %div81 to float, !dbg !2079
  store float %conv82, float* %result, align 4, !dbg !2080
  br label %if.end, !dbg !2081

if.end:                                           ; preds = %if.then, %sw.bb64
  br label %sw.epilog, !dbg !2082

sw.bb83:                                          ; preds = %entry
  %35 = load i16, i16* %pixel.addr, align 2, !dbg !2083
  %conv84 = uitofp i16 %35 to double, !dbg !2085
  %36 = load float, float* %value.addr, align 4, !dbg !2086
  %conv85 = fpext float %36 to double, !dbg !2086
  %call86 = call double @EvaluateMax(double %conv84, double %conv85), !dbg !2087
  %conv87 = fptrunc double %call86 to float, !dbg !2088
  store float %conv87, float* %result, align 4, !dbg !2089
  br label %sw.epilog, !dbg !2090

sw.bb88:                                          ; preds = %entry
  %37 = load i16, i16* %pixel.addr, align 2, !dbg !2091
  %conv89 = zext i16 %37 to i32, !dbg !2091
  %conv90 = sitofp i32 %conv89 to float, !dbg !2091
  %38 = load float, float* %value.addr, align 4, !dbg !2093
  %add91 = fadd float %conv90, %38, !dbg !2094
  store float %add91, float* %result, align 4, !dbg !2095
  br label %sw.epilog, !dbg !2096

sw.bb92:                                          ; preds = %entry
  %39 = load i16, i16* %pixel.addr, align 2, !dbg !2097
  %conv93 = zext i16 %39 to i32, !dbg !2097
  %conv94 = sitofp i32 %conv93 to float, !dbg !2097
  %40 = load float, float* %value.addr, align 4, !dbg !2099
  %add95 = fadd float %conv94, %40, !dbg !2100
  store float %add95, float* %result, align 4, !dbg !2101
  br label %sw.epilog, !dbg !2102

sw.bb96:                                          ; preds = %entry
  %41 = load i16, i16* %pixel.addr, align 2, !dbg !2103
  %conv97 = uitofp i16 %41 to double, !dbg !2105
  %42 = load float, float* %value.addr, align 4, !dbg !2106
  %conv98 = fpext float %42 to double, !dbg !2106
  %call99 = call double @MagickMin(double %conv97, double %conv98), !dbg !2107
  %conv100 = fptrunc double %call99 to float, !dbg !2108
  store float %conv100, float* %result, align 4, !dbg !2109
  br label %sw.epilog, !dbg !2110

sw.bb101:                                         ; preds = %entry
  %43 = load %struct._RandomInfo*, %struct._RandomInfo** %random_info.addr, align 8, !dbg !2111
  %44 = load i16, i16* %pixel.addr, align 2, !dbg !2113
  %45 = load float, float* %value.addr, align 4, !dbg !2114
  %call102 = call double @GenerateDifferentialNoise(%struct._RandomInfo* %43, i16 zeroext %44, i32 3, float %45), !dbg !2115
  %conv103 = fptrunc double %call102 to float, !dbg !2116
  store float %conv103, float* %result, align 4, !dbg !2117
  br label %sw.epilog, !dbg !2118

sw.bb104:                                         ; preds = %entry
  %46 = load float, float* %value.addr, align 4, !dbg !2119
  %47 = load i16, i16* %pixel.addr, align 2, !dbg !2121
  %conv105 = zext i16 %47 to i32, !dbg !2121
  %conv106 = sitofp i32 %conv105 to float, !dbg !2121
  %mul107 = fmul float %46, %conv106, !dbg !2122
  store float %mul107, float* %result, align 4, !dbg !2123
  br label %sw.epilog, !dbg !2124

sw.bb108:                                         ; preds = %entry
  %48 = load i16, i16* %pixel.addr, align 2, !dbg !2125
  %conv109 = zext i16 %48 to i64, !dbg !2127
  %49 = load float, float* %value.addr, align 4, !dbg !2128
  %conv110 = fpext float %49 to double, !dbg !2128
  %add111 = fadd double %conv110, 5.000000e-01, !dbg !2129
  %conv112 = fptoui double %add111 to i64, !dbg !2130
  %or = or i64 %conv109, %conv112, !dbg !2131
  %conv113 = uitofp i64 %or to float, !dbg !2132
  store float %conv113, float* %result, align 4, !dbg !2133
  br label %sw.epilog, !dbg !2134

sw.bb114:                                         ; preds = %entry
  %50 = load %struct._RandomInfo*, %struct._RandomInfo** %random_info.addr, align 8, !dbg !2135
  %51 = load i16, i16* %pixel.addr, align 2, !dbg !2137
  %52 = load float, float* %value.addr, align 4, !dbg !2138
  %call115 = call double @GenerateDifferentialNoise(%struct._RandomInfo* %50, i16 zeroext %51, i32 6, float %52), !dbg !2139
  %conv116 = fptrunc double %call115 to float, !dbg !2140
  store float %conv116, float* %result, align 4, !dbg !2141
  br label %sw.epilog, !dbg !2142

sw.bb117:                                         ; preds = %entry
  %53 = load i16, i16* %pixel.addr, align 2, !dbg !2143
  %conv118 = zext i16 %53 to i32, !dbg !2143
  %conv119 = sitofp i32 %conv118 to double, !dbg !2143
  %mul120 = fmul double 0x3EF0001000100010, %conv119, !dbg !2145
  %54 = load float, float* %value.addr, align 4, !dbg !2146
  %conv121 = fpext float %54 to double, !dbg !2147
  %call122 = call double @pow(double %mul120, double %conv121) #8, !dbg !2148
  %mul123 = fmul double 6.553500e+04, %call122, !dbg !2149
  %conv124 = fptrunc double %mul123 to float, !dbg !2150
  store float %conv124, float* %result, align 4, !dbg !2151
  br label %sw.epilog, !dbg !2152

sw.bb125:                                         ; preds = %entry
  %55 = load i16, i16* %pixel.addr, align 2, !dbg !2153
  %conv126 = zext i16 %55 to i64, !dbg !2155
  %56 = load float, float* %value.addr, align 4, !dbg !2156
  %conv127 = fpext float %56 to double, !dbg !2156
  %add128 = fadd double %conv127, 5.000000e-01, !dbg !2157
  %conv129 = fptoui double %add128 to i64, !dbg !2158
  %shr = lshr i64 %conv126, %conv129, !dbg !2159
  %conv130 = uitofp i64 %shr to float, !dbg !2160
  store float %conv130, float* %result, align 4, !dbg !2161
  br label %sw.epilog, !dbg !2162

sw.bb131:                                         ; preds = %entry
  %57 = load float, float* %value.addr, align 4, !dbg !2163
  store float %57, float* %result, align 4, !dbg !2165
  br label %sw.epilog, !dbg !2166

sw.bb132:                                         ; preds = %entry
  %58 = load i16, i16* %pixel.addr, align 2, !dbg !2167
  %conv133 = zext i16 %58 to i32, !dbg !2167
  %conv134 = sitofp i32 %conv133 to double, !dbg !2167
  %mul135 = fmul double 0x3F1922147658A371, %conv134, !dbg !2169
  %59 = load float, float* %value.addr, align 4, !dbg !2170
  %conv136 = fpext float %59 to double, !dbg !2170
  %mul137 = fmul double %mul135, %conv136, !dbg !2171
  %call138 = call double @sin(double %mul137) #8, !dbg !2172
  %mul139 = fmul double 5.000000e-01, %call138, !dbg !2173
  %add140 = fadd double %mul139, 5.000000e-01, !dbg !2174
  %mul141 = fmul double 6.553500e+04, %add140, !dbg !2175
  %conv142 = fptrunc double %mul141 to float, !dbg !2176
  store float %conv142, float* %result, align 4, !dbg !2177
  br label %sw.epilog, !dbg !2178

sw.bb143:                                         ; preds = %entry
  %60 = load i16, i16* %pixel.addr, align 2, !dbg !2179
  %conv144 = zext i16 %60 to i32, !dbg !2179
  %conv145 = sitofp i32 %conv144 to float, !dbg !2179
  %61 = load float, float* %value.addr, align 4, !dbg !2181
  %sub146 = fsub float %conv145, %61, !dbg !2182
  store float %sub146, float* %result, align 4, !dbg !2183
  br label %sw.epilog, !dbg !2184

sw.bb147:                                         ; preds = %entry
  %62 = load i16, i16* %pixel.addr, align 2, !dbg !2185
  %conv148 = zext i16 %62 to i32, !dbg !2185
  %conv149 = sitofp i32 %conv148 to float, !dbg !2185
  %63 = load float, float* %value.addr, align 4, !dbg !2187
  %add150 = fadd float %conv149, %63, !dbg !2188
  store float %add150, float* %result, align 4, !dbg !2189
  br label %sw.epilog, !dbg !2190

sw.bb151:                                         ; preds = %entry
  %64 = load i16, i16* %pixel.addr, align 2, !dbg !2191
  %conv152 = uitofp i16 %64 to float, !dbg !2193
  %65 = load float, float* %value.addr, align 4, !dbg !2194
  %cmp153 = fcmp ole float %conv152, %65, !dbg !2195
  %66 = zext i1 %cmp153 to i64, !dbg !2196
  %cond155 = select i1 %cmp153, i32 0, i32 65535, !dbg !2196
  %conv156 = sitofp i32 %cond155 to float, !dbg !2197
  store float %conv156, float* %result, align 4, !dbg !2198
  br label %sw.epilog, !dbg !2199

sw.bb157:                                         ; preds = %entry
  %67 = load i16, i16* %pixel.addr, align 2, !dbg !2200
  %conv158 = uitofp i16 %67 to float, !dbg !2202
  %68 = load float, float* %value.addr, align 4, !dbg !2203
  %cmp159 = fcmp ole float %conv158, %68, !dbg !2204
  br i1 %cmp159, label %cond.true161, label %cond.false162, !dbg !2205

cond.true161:                                     ; preds = %sw.bb157
  br label %cond.end164, !dbg !2205

cond.false162:                                    ; preds = %sw.bb157
  %69 = load i16, i16* %pixel.addr, align 2, !dbg !2206
  %conv163 = zext i16 %69 to i32, !dbg !2206
  br label %cond.end164, !dbg !2205

cond.end164:                                      ; preds = %cond.false162, %cond.true161
  %cond165 = phi i32 [ 0, %cond.true161 ], [ %conv163, %cond.false162 ], !dbg !2205
  %conv166 = sitofp i32 %cond165 to float, !dbg !2207
  store float %conv166, float* %result, align 4, !dbg !2208
  br label %sw.epilog, !dbg !2209

sw.bb167:                                         ; preds = %entry
  %70 = load i16, i16* %pixel.addr, align 2, !dbg !2210
  %conv168 = uitofp i16 %70 to float, !dbg !2212
  %71 = load float, float* %value.addr, align 4, !dbg !2213
  %cmp169 = fcmp ogt float %conv168, %71, !dbg !2214
  br i1 %cmp169, label %cond.true171, label %cond.false172, !dbg !2215

cond.true171:                                     ; preds = %sw.bb167
  br label %cond.end174, !dbg !2215

cond.false172:                                    ; preds = %sw.bb167
  %72 = load i16, i16* %pixel.addr, align 2, !dbg !2216
  %conv173 = zext i16 %72 to i32, !dbg !2216
  br label %cond.end174, !dbg !2215

cond.end174:                                      ; preds = %cond.false172, %cond.true171
  %cond175 = phi i32 [ 65535, %cond.true171 ], [ %conv173, %cond.false172 ], !dbg !2215
  %conv176 = sitofp i32 %cond175 to float, !dbg !2217
  store float %conv176, float* %result, align 4, !dbg !2218
  br label %sw.epilog, !dbg !2219

sw.bb177:                                         ; preds = %entry
  %73 = load %struct._RandomInfo*, %struct._RandomInfo** %random_info.addr, align 8, !dbg !2220
  %74 = load i16, i16* %pixel.addr, align 2, !dbg !2222
  %75 = load float, float* %value.addr, align 4, !dbg !2223
  %call178 = call double @GenerateDifferentialNoise(%struct._RandomInfo* %73, i16 zeroext %74, i32 1, float %75), !dbg !2224
  %conv179 = fptrunc double %call178 to float, !dbg !2225
  store float %conv179, float* %result, align 4, !dbg !2226
  br label %sw.epilog, !dbg !2227

sw.bb180:                                         ; preds = %entry
  %76 = load i16, i16* %pixel.addr, align 2, !dbg !2228
  %conv181 = zext i16 %76 to i64, !dbg !2230
  %77 = load float, float* %value.addr, align 4, !dbg !2231
  %conv182 = fpext float %77 to double, !dbg !2231
  %add183 = fadd double %conv182, 5.000000e-01, !dbg !2232
  %conv184 = fptoui double %add183 to i64, !dbg !2233
  %xor = xor i64 %conv181, %conv184, !dbg !2234
  %conv185 = uitofp i64 %xor to float, !dbg !2235
  store float %conv185, float* %result, align 4, !dbg !2236
  br label %sw.epilog, !dbg !2237

sw.epilog:                                        ; preds = %entry, %sw.bb180, %sw.bb177, %cond.end174, %cond.end164, %sw.bb151, %sw.bb147, %sw.bb143, %sw.bb132, %sw.bb131, %sw.bb125, %sw.bb117, %sw.bb114, %sw.bb108, %sw.bb104, %sw.bb101, %sw.bb96, %sw.bb92, %sw.bb88, %sw.bb83, %if.end, %sw.bb58, %sw.bb55, %sw.bb52, %sw.bb49, %sw.bb40, %cond.end, %sw.bb22, %sw.bb16, %sw.bb9, %sw.bb5, %sw.bb1, %sw.bb
  %78 = load float, float* %result, align 4, !dbg !2238
  ret float %78, !dbg !2239
}

declare dso_local %struct._Image* @GetNextImageInList(%struct._Image*) #2

declare dso_local void @qsort(i8*, i64, i64, i32 (i8*, i8*)*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @IntensityCompare(i8* %x, i8* %y) #0 !dbg !2240 {
entry:
  %x.addr = alloca i8*, align 8
  %y.addr = alloca i8*, align 8
  %color_1 = alloca %struct._MagickPixelPacket*, align 8
  %color_2 = alloca %struct._MagickPixelPacket*, align 8
  %intensity = alloca i32, align 4
  store i8* %x, i8** %x.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %x.addr, metadata !2245, metadata !DIExpression()), !dbg !2246
  store i8* %y, i8** %y.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %y.addr, metadata !2247, metadata !DIExpression()), !dbg !2248
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %color_1, metadata !2249, metadata !DIExpression()), !dbg !2250
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %color_2, metadata !2251, metadata !DIExpression()), !dbg !2252
  call void @llvm.dbg.declare(metadata i32* %intensity, metadata !2253, metadata !DIExpression()), !dbg !2254
  %0 = load i8*, i8** %x.addr, align 8, !dbg !2255
  %1 = bitcast i8* %0 to %struct._MagickPixelPacket*, !dbg !2256
  store %struct._MagickPixelPacket* %1, %struct._MagickPixelPacket** %color_1, align 8, !dbg !2257
  %2 = load i8*, i8** %y.addr, align 8, !dbg !2258
  %3 = bitcast i8* %2 to %struct._MagickPixelPacket*, !dbg !2259
  store %struct._MagickPixelPacket* %3, %struct._MagickPixelPacket** %color_2, align 8, !dbg !2260
  %4 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %color_2, align 8, !dbg !2261
  %call = call float @MagickPixelIntensity(%struct._MagickPixelPacket* %4), !dbg !2262
  %conv = fptosi float %call to i32, !dbg !2263
  %5 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %color_1, align 8, !dbg !2264
  %call1 = call float @MagickPixelIntensity(%struct._MagickPixelPacket* %5), !dbg !2265
  %conv2 = fptosi float %call1 to i32, !dbg !2266
  %sub = sub nsw i32 %conv, %conv2, !dbg !2267
  store i32 %sub, i32* %intensity, align 4, !dbg !2268
  %6 = load i32, i32* %intensity, align 4, !dbg !2269
  ret i32 %6, !dbg !2270
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i16 @ClampToQuantum(float %value) #0 !dbg !2271 {
entry:
  %retval = alloca i16, align 2
  %value.addr = alloca float, align 4
  store float %value, float* %value.addr, align 4
  call void @llvm.dbg.declare(metadata float* %value.addr, metadata !2274, metadata !DIExpression()), !dbg !2275
  %0 = load float, float* %value.addr, align 4, !dbg !2276
  %cmp = fcmp ole float %0, 0.000000e+00, !dbg !2278
  br i1 %cmp, label %if.then, label %if.end, !dbg !2279

if.then:                                          ; preds = %entry
  store i16 0, i16* %retval, align 2, !dbg !2280
  br label %return, !dbg !2280

if.end:                                           ; preds = %entry
  %1 = load float, float* %value.addr, align 4, !dbg !2281
  %cmp1 = fcmp oge float %1, 6.553500e+04, !dbg !2283
  br i1 %cmp1, label %if.then2, label %if.end3, !dbg !2284

if.then2:                                         ; preds = %if.end
  store i16 -1, i16* %retval, align 2, !dbg !2285
  br label %return, !dbg !2285

if.end3:                                          ; preds = %if.end
  %2 = load float, float* %value.addr, align 4, !dbg !2286
  %add = fadd float %2, 5.000000e-01, !dbg !2287
  %conv = fptoui float %add to i16, !dbg !2288
  store i16 %conv, i16* %retval, align 2, !dbg !2289
  br label %return, !dbg !2289

return:                                           ; preds = %if.end3, %if.then2, %if.then
  %3 = load i16, i16* %retval, align 2, !dbg !2290
  ret i16 %3, !dbg !2290
}

declare dso_local i32 @SyncCacheViewAuthenticPixels(%struct._CacheView*, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define internal i32 @SetImageProgress(%struct._Image* %image, i8* %tag, i64 %offset, i64 %extent) #0 !dbg !2291 {
entry:
  %retval = alloca i32, align 4
  %image.addr = alloca %struct._Image*, align 8
  %tag.addr = alloca i8*, align 8
  %offset.addr = alloca i64, align 8
  %extent.addr = alloca i64, align 8
  %message = alloca [4096 x i8], align 16
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !2295, metadata !DIExpression()), !dbg !2296
  store i8* %tag, i8** %tag.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %tag.addr, metadata !2297, metadata !DIExpression()), !dbg !2298
  store i64 %offset, i64* %offset.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %offset.addr, metadata !2299, metadata !DIExpression()), !dbg !2300
  store i64 %extent, i64* %extent.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %extent.addr, metadata !2301, metadata !DIExpression()), !dbg !2302
  call void @llvm.dbg.declare(metadata [4096 x i8]* %message, metadata !2303, metadata !DIExpression()), !dbg !2304
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2305
  %progress_monitor = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 47, !dbg !2307
  %1 = load i32 (i8*, i64, i64, i8*)*, i32 (i8*, i64, i64, i8*)** %progress_monitor, align 8, !dbg !2307
  %cmp = icmp eq i32 (i8*, i64, i64, i8*)* %1, null, !dbg !2308
  br i1 %cmp, label %if.then, label %if.end, !dbg !2309

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !2310
  br label %return, !dbg !2310

if.end:                                           ; preds = %entry
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %message, i64 0, i64 0, !dbg !2311
  %2 = load i8*, i8** %tag.addr, align 8, !dbg !2312
  %3 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2313
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %3, i32 0, i32 53, !dbg !2314
  %arraydecay1 = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !2313
  %call = call i64 (i8*, i64, i8*, ...) @FormatLocaleString(i8* %arraydecay, i64 4096, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.9, i64 0, i64 0), i8* %2, i8* %arraydecay1), !dbg !2315
  %4 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2316
  %progress_monitor2 = getelementptr inbounds %struct._Image, %struct._Image* %4, i32 0, i32 47, !dbg !2317
  %5 = load i32 (i8*, i64, i64, i8*)*, i32 (i8*, i64, i64, i8*)** %progress_monitor2, align 8, !dbg !2317
  %arraydecay3 = getelementptr inbounds [4096 x i8], [4096 x i8]* %message, i64 0, i64 0, !dbg !2318
  %6 = load i64, i64* %offset.addr, align 8, !dbg !2319
  %7 = load i64, i64* %extent.addr, align 8, !dbg !2320
  %8 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2321
  %client_data = getelementptr inbounds %struct._Image, %struct._Image* %8, i32 0, i32 48, !dbg !2322
  %9 = load i8*, i8** %client_data, align 8, !dbg !2322
  %call4 = call i32 %5(i8* %arraydecay3, i64 %6, i64 %7, i8* %9), !dbg !2316
  store i32 %call4, i32* %retval, align 4, !dbg !2323
  br label %return, !dbg !2323

return:                                           ; preds = %if.end, %if.then
  %10 = load i32, i32* %retval, align 4, !dbg !2324
  ret i32 %10, !dbg !2324
}

; Function Attrs: noinline nounwind uwtable
define internal %struct._MagickPixelPacket** @DestroyPixelThreadSet(%struct._MagickPixelPacket** %pixels) #0 !dbg !2325 {
entry:
  %pixels.addr = alloca %struct._MagickPixelPacket**, align 8
  %i = alloca i64, align 8
  store %struct._MagickPixelPacket** %pixels, %struct._MagickPixelPacket*** %pixels.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket*** %pixels.addr, metadata !2328, metadata !DIExpression()), !dbg !2329
  call void @llvm.dbg.declare(metadata i64* %i, metadata !2330, metadata !DIExpression()), !dbg !2331
  store i64 0, i64* %i, align 8, !dbg !2332
  br label %for.cond, !dbg !2334

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i64, i64* %i, align 8, !dbg !2335
  %call = call i64 @GetMagickResourceLimit(i32 6), !dbg !2337
  %cmp = icmp slt i64 %0, %call, !dbg !2338
  br i1 %cmp, label %for.body, label %for.end, !dbg !2339

for.body:                                         ; preds = %for.cond
  %1 = load %struct._MagickPixelPacket**, %struct._MagickPixelPacket*** %pixels.addr, align 8, !dbg !2340
  %2 = load i64, i64* %i, align 8, !dbg !2342
  %arrayidx = getelementptr inbounds %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %1, i64 %2, !dbg !2340
  %3 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %arrayidx, align 8, !dbg !2340
  %cmp1 = icmp ne %struct._MagickPixelPacket* %3, null, !dbg !2343
  br i1 %cmp1, label %if.then, label %if.end, !dbg !2344

if.then:                                          ; preds = %for.body
  %4 = load %struct._MagickPixelPacket**, %struct._MagickPixelPacket*** %pixels.addr, align 8, !dbg !2345
  %5 = load i64, i64* %i, align 8, !dbg !2346
  %arrayidx2 = getelementptr inbounds %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %4, i64 %5, !dbg !2345
  %6 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %arrayidx2, align 8, !dbg !2345
  %7 = bitcast %struct._MagickPixelPacket* %6 to i8*, !dbg !2345
  %call3 = call i8* @RelinquishMagickMemory(i8* %7), !dbg !2347
  %8 = bitcast i8* %call3 to %struct._MagickPixelPacket*, !dbg !2348
  %9 = load %struct._MagickPixelPacket**, %struct._MagickPixelPacket*** %pixels.addr, align 8, !dbg !2349
  %10 = load i64, i64* %i, align 8, !dbg !2350
  %arrayidx4 = getelementptr inbounds %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %9, i64 %10, !dbg !2349
  store %struct._MagickPixelPacket* %8, %struct._MagickPixelPacket** %arrayidx4, align 8, !dbg !2351
  br label %if.end, !dbg !2349

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !2352

for.inc:                                          ; preds = %if.end
  %11 = load i64, i64* %i, align 8, !dbg !2353
  %inc = add nsw i64 %11, 1, !dbg !2353
  store i64 %inc, i64* %i, align 8, !dbg !2353
  br label %for.cond, !dbg !2354, !llvm.loop !2355

for.end:                                          ; preds = %for.cond
  %12 = load %struct._MagickPixelPacket**, %struct._MagickPixelPacket*** %pixels.addr, align 8, !dbg !2357
  %13 = bitcast %struct._MagickPixelPacket** %12 to i8*, !dbg !2357
  %call5 = call i8* @RelinquishMagickMemory(i8* %13), !dbg !2358
  %14 = bitcast i8* %call5 to %struct._MagickPixelPacket**, !dbg !2359
  store %struct._MagickPixelPacket** %14, %struct._MagickPixelPacket*** %pixels.addr, align 8, !dbg !2360
  %15 = load %struct._MagickPixelPacket**, %struct._MagickPixelPacket*** %pixels.addr, align 8, !dbg !2361
  ret %struct._MagickPixelPacket** %15, !dbg !2362
}

; Function Attrs: noinline nounwind uwtable
define internal %struct._RandomInfo** @DestroyRandomInfoThreadSet(%struct._RandomInfo** %random_info) #0 !dbg !2363 {
entry:
  %random_info.addr = alloca %struct._RandomInfo**, align 8
  %i = alloca i64, align 8
  store %struct._RandomInfo** %random_info, %struct._RandomInfo*** %random_info.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._RandomInfo*** %random_info.addr, metadata !2366, metadata !DIExpression()), !dbg !2367
  call void @llvm.dbg.declare(metadata i64* %i, metadata !2368, metadata !DIExpression()), !dbg !2369
  store i64 0, i64* %i, align 8, !dbg !2370
  br label %for.cond, !dbg !2372

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i64, i64* %i, align 8, !dbg !2373
  %call = call i64 @GetMagickResourceLimit(i32 6), !dbg !2375
  %cmp = icmp slt i64 %0, %call, !dbg !2376
  br i1 %cmp, label %for.body, label %for.end, !dbg !2377

for.body:                                         ; preds = %for.cond
  %1 = load %struct._RandomInfo**, %struct._RandomInfo*** %random_info.addr, align 8, !dbg !2378
  %2 = load i64, i64* %i, align 8, !dbg !2380
  %arrayidx = getelementptr inbounds %struct._RandomInfo*, %struct._RandomInfo** %1, i64 %2, !dbg !2378
  %3 = load %struct._RandomInfo*, %struct._RandomInfo** %arrayidx, align 8, !dbg !2378
  %cmp1 = icmp ne %struct._RandomInfo* %3, null, !dbg !2381
  br i1 %cmp1, label %if.then, label %if.end, !dbg !2382

if.then:                                          ; preds = %for.body
  %4 = load %struct._RandomInfo**, %struct._RandomInfo*** %random_info.addr, align 8, !dbg !2383
  %5 = load i64, i64* %i, align 8, !dbg !2384
  %arrayidx2 = getelementptr inbounds %struct._RandomInfo*, %struct._RandomInfo** %4, i64 %5, !dbg !2383
  %6 = load %struct._RandomInfo*, %struct._RandomInfo** %arrayidx2, align 8, !dbg !2383
  %call3 = call %struct._RandomInfo* @DestroyRandomInfo(%struct._RandomInfo* %6), !dbg !2385
  %7 = load %struct._RandomInfo**, %struct._RandomInfo*** %random_info.addr, align 8, !dbg !2386
  %8 = load i64, i64* %i, align 8, !dbg !2387
  %arrayidx4 = getelementptr inbounds %struct._RandomInfo*, %struct._RandomInfo** %7, i64 %8, !dbg !2386
  store %struct._RandomInfo* %call3, %struct._RandomInfo** %arrayidx4, align 8, !dbg !2388
  br label %if.end, !dbg !2386

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !2389

for.inc:                                          ; preds = %if.end
  %9 = load i64, i64* %i, align 8, !dbg !2390
  %inc = add nsw i64 %9, 1, !dbg !2390
  store i64 %inc, i64* %i, align 8, !dbg !2390
  br label %for.cond, !dbg !2391, !llvm.loop !2392

for.end:                                          ; preds = %for.cond
  %10 = load %struct._RandomInfo**, %struct._RandomInfo*** %random_info.addr, align 8, !dbg !2394
  %11 = bitcast %struct._RandomInfo** %10 to i8*, !dbg !2394
  %call5 = call i8* @RelinquishAlignedMemory(i8* %11), !dbg !2395
  %12 = bitcast i8* %call5 to %struct._RandomInfo**, !dbg !2396
  ret %struct._RandomInfo** %12, !dbg !2397
}

declare dso_local %struct._PixelPacket* @GetCacheViewAuthenticPixels(%struct._CacheView*, i64, i64, i64, i64, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @FunctionImage(%struct._Image* %image, i32 %function, i64 %number_parameters, double* %parameters, %struct._ExceptionInfo* %exception) #0 !dbg !2398 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %function.addr = alloca i32, align 4
  %number_parameters.addr = alloca i64, align 8
  %parameters.addr = alloca double*, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %status = alloca i32, align 4
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !2404, metadata !DIExpression()), !dbg !2405
  store i32 %function, i32* %function.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %function.addr, metadata !2406, metadata !DIExpression()), !dbg !2407
  store i64 %number_parameters, i64* %number_parameters.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %number_parameters.addr, metadata !2408, metadata !DIExpression()), !dbg !2409
  store double* %parameters, double** %parameters.addr, align 8
  call void @llvm.dbg.declare(metadata double** %parameters.addr, metadata !2410, metadata !DIExpression()), !dbg !2411
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !2412, metadata !DIExpression()), !dbg !2413
  call void @llvm.dbg.declare(metadata i32* %status, metadata !2414, metadata !DIExpression()), !dbg !2415
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2416
  %1 = load i32, i32* %function.addr, align 4, !dbg !2417
  %2 = load i64, i64* %number_parameters.addr, align 8, !dbg !2418
  %3 = load double*, double** %parameters.addr, align 8, !dbg !2419
  %4 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !2420
  %call = call i32 @FunctionImageChannel(%struct._Image* %0, i32 47, i32 %1, i64 %2, double* %3, %struct._ExceptionInfo* %4), !dbg !2421
  store i32 %call, i32* %status, align 4, !dbg !2422
  %5 = load i32, i32* %status, align 4, !dbg !2423
  ret i32 %5, !dbg !2424
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @FunctionImageChannel(%struct._Image* %image, i32 %channel, i32 %function, i64 %number_parameters, double* %parameters, %struct._ExceptionInfo* %exception) #0 !dbg !2425 {
entry:
  %retval = alloca i32, align 4
  %image.addr = alloca %struct._Image*, align 8
  %channel.addr = alloca i32, align 4
  %function.addr = alloca i32, align 4
  %number_parameters.addr = alloca i64, align 8
  %parameters.addr = alloca double*, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %image_view = alloca %struct._CacheView*, align 8
  %status = alloca i32, align 4
  %progress = alloca i64, align 8
  %y = alloca i64, align 8
  %indexes = alloca i16*, align 8
  %x = alloca i64, align 8
  %q = alloca %struct._PixelPacket*, align 8
  %proceed = alloca i32, align 4
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !2428, metadata !DIExpression()), !dbg !2429
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !2430, metadata !DIExpression()), !dbg !2431
  store i32 %function, i32* %function.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %function.addr, metadata !2432, metadata !DIExpression()), !dbg !2433
  store i64 %number_parameters, i64* %number_parameters.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %number_parameters.addr, metadata !2434, metadata !DIExpression()), !dbg !2435
  store double* %parameters, double** %parameters.addr, align 8
  call void @llvm.dbg.declare(metadata double** %parameters.addr, metadata !2436, metadata !DIExpression()), !dbg !2437
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !2438, metadata !DIExpression()), !dbg !2439
  call void @llvm.dbg.declare(metadata %struct._CacheView** %image_view, metadata !2440, metadata !DIExpression()), !dbg !2441
  call void @llvm.dbg.declare(metadata i32* %status, metadata !2442, metadata !DIExpression()), !dbg !2443
  call void @llvm.dbg.declare(metadata i64* %progress, metadata !2444, metadata !DIExpression()), !dbg !2445
  call void @llvm.dbg.declare(metadata i64* %y, metadata !2446, metadata !DIExpression()), !dbg !2447
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2448
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !2450
  %1 = load i32, i32* %debug, align 8, !dbg !2450
  %cmp = icmp ne i32 %1, 0, !dbg !2451
  br i1 %cmp, label %if.then, label %if.end, !dbg !2452

if.then:                                          ; preds = %entry
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2453
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %2, i32 0, i32 53, !dbg !2454
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !2453
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1016, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !2455
  br label %if.end, !dbg !2456

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2457
  %call1 = call i32 @SetImageStorageClass(%struct._Image* %3, i32 1), !dbg !2459
  %cmp2 = icmp eq i32 %call1, 0, !dbg !2460
  br i1 %cmp2, label %if.then3, label %if.end5, !dbg !2461

if.then3:                                         ; preds = %if.end
  %4 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !2462
  %5 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2464
  %exception4 = getelementptr inbounds %struct._Image, %struct._Image* %5, i32 0, i32 58, !dbg !2465
  call void @InheritException(%struct._ExceptionInfo* %4, %struct._ExceptionInfo* %exception4), !dbg !2466
  store i32 0, i32* %retval, align 4, !dbg !2467
  br label %return, !dbg !2467

if.end5:                                          ; preds = %if.end
  %6 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2468
  %7 = load i32, i32* %channel.addr, align 4, !dbg !2469
  %8 = load i32, i32* %function.addr, align 4, !dbg !2470
  %9 = load i64, i64* %number_parameters.addr, align 8, !dbg !2471
  %10 = load double*, double** %parameters.addr, align 8, !dbg !2472
  %11 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !2473
  %call6 = call i32 @AccelerateFunctionImage(%struct._Image* %6, i32 %7, i32 %8, i64 %9, double* %10, %struct._ExceptionInfo* %11), !dbg !2474
  store i32 %call6, i32* %status, align 4, !dbg !2475
  %12 = load i32, i32* %status, align 4, !dbg !2476
  %cmp7 = icmp ne i32 %12, 0, !dbg !2478
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !2479

if.then8:                                         ; preds = %if.end5
  %13 = load i32, i32* %status, align 4, !dbg !2480
  store i32 %13, i32* %retval, align 4, !dbg !2481
  br label %return, !dbg !2481

if.end9:                                          ; preds = %if.end5
  store i32 1, i32* %status, align 4, !dbg !2482
  store i64 0, i64* %progress, align 8, !dbg !2483
  %14 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2484
  %15 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !2485
  %call10 = call %struct._CacheView* @AcquireAuthenticCacheView(%struct._Image* %14, %struct._ExceptionInfo* %15), !dbg !2486
  store %struct._CacheView* %call10, %struct._CacheView** %image_view, align 8, !dbg !2487
  store i64 0, i64* %y, align 8, !dbg !2488
  br label %for.cond, !dbg !2490

for.cond:                                         ; preds = %for.inc92, %if.end9
  %16 = load i64, i64* %y, align 8, !dbg !2491
  %17 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2493
  %rows = getelementptr inbounds %struct._Image, %struct._Image* %17, i32 0, i32 8, !dbg !2494
  %18 = load i64, i64* %rows, align 8, !dbg !2494
  %cmp11 = icmp slt i64 %16, %18, !dbg !2495
  br i1 %cmp11, label %for.body, label %for.end94, !dbg !2496

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i16** %indexes, metadata !2497, metadata !DIExpression()), !dbg !2499
  call void @llvm.dbg.declare(metadata i64* %x, metadata !2500, metadata !DIExpression()), !dbg !2501
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q, metadata !2502, metadata !DIExpression()), !dbg !2503
  %19 = load i32, i32* %status, align 4, !dbg !2504
  %cmp12 = icmp eq i32 %19, 0, !dbg !2506
  br i1 %cmp12, label %if.then13, label %if.end14, !dbg !2507

if.then13:                                        ; preds = %for.body
  br label %for.inc92, !dbg !2508

if.end14:                                         ; preds = %for.body
  %20 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !2509
  %21 = load i64, i64* %y, align 8, !dbg !2510
  %22 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2511
  %columns = getelementptr inbounds %struct._Image, %struct._Image* %22, i32 0, i32 7, !dbg !2512
  %23 = load i64, i64* %columns, align 8, !dbg !2512
  %24 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !2513
  %call15 = call %struct._PixelPacket* @GetCacheViewAuthenticPixels(%struct._CacheView* %20, i64 0, i64 %21, i64 %23, i64 1, %struct._ExceptionInfo* %24), !dbg !2514
  store %struct._PixelPacket* %call15, %struct._PixelPacket** %q, align 8, !dbg !2515
  %25 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !2516
  %cmp16 = icmp eq %struct._PixelPacket* %25, null, !dbg !2518
  br i1 %cmp16, label %if.then17, label %if.end18, !dbg !2519

if.then17:                                        ; preds = %if.end14
  store i32 0, i32* %status, align 4, !dbg !2520
  br label %for.inc92, !dbg !2522

if.end18:                                         ; preds = %if.end14
  %26 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !2523
  %call19 = call i16* @GetCacheViewAuthenticIndexQueue(%struct._CacheView* %26), !dbg !2524
  store i16* %call19, i16** %indexes, align 8, !dbg !2525
  store i64 0, i64* %x, align 8, !dbg !2526
  br label %for.cond20, !dbg !2528

for.cond20:                                       ; preds = %for.inc, %if.end18
  %27 = load i64, i64* %x, align 8, !dbg !2529
  %28 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2531
  %columns21 = getelementptr inbounds %struct._Image, %struct._Image* %28, i32 0, i32 7, !dbg !2532
  %29 = load i64, i64* %columns21, align 8, !dbg !2532
  %cmp22 = icmp slt i64 %27, %29, !dbg !2533
  br i1 %cmp22, label %for.body23, label %for.end, !dbg !2534

for.body23:                                       ; preds = %for.cond20
  %30 = load i32, i32* %channel.addr, align 4, !dbg !2535
  %and = and i32 %30, 1, !dbg !2538
  %cmp24 = icmp ne i32 %and, 0, !dbg !2539
  br i1 %cmp24, label %if.then25, label %if.end28, !dbg !2540

if.then25:                                        ; preds = %for.body23
  %31 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !2541
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %31, i32 0, i32 2, !dbg !2541
  %32 = load i16, i16* %red, align 2, !dbg !2541
  %33 = load i32, i32* %function.addr, align 4, !dbg !2541
  %34 = load i64, i64* %number_parameters.addr, align 8, !dbg !2541
  %35 = load double*, double** %parameters.addr, align 8, !dbg !2541
  %36 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !2541
  %call26 = call zeroext i16 @ApplyFunction(i16 zeroext %32, i32 %33, i64 %34, double* %35, %struct._ExceptionInfo* %36), !dbg !2541
  %37 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !2541
  %red27 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %37, i32 0, i32 2, !dbg !2541
  store i16 %call26, i16* %red27, align 2, !dbg !2541
  br label %if.end28, !dbg !2541

if.end28:                                         ; preds = %if.then25, %for.body23
  %38 = load i32, i32* %channel.addr, align 4, !dbg !2542
  %and29 = and i32 %38, 2, !dbg !2544
  %cmp30 = icmp ne i32 %and29, 0, !dbg !2545
  br i1 %cmp30, label %if.then31, label %if.end34, !dbg !2546

if.then31:                                        ; preds = %if.end28
  %39 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !2547
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %39, i32 0, i32 1, !dbg !2547
  %40 = load i16, i16* %green, align 2, !dbg !2547
  %41 = load i32, i32* %function.addr, align 4, !dbg !2547
  %42 = load i64, i64* %number_parameters.addr, align 8, !dbg !2547
  %43 = load double*, double** %parameters.addr, align 8, !dbg !2547
  %44 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !2547
  %call32 = call zeroext i16 @ApplyFunction(i16 zeroext %40, i32 %41, i64 %42, double* %43, %struct._ExceptionInfo* %44), !dbg !2547
  %45 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !2547
  %green33 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %45, i32 0, i32 1, !dbg !2547
  store i16 %call32, i16* %green33, align 2, !dbg !2547
  br label %if.end34, !dbg !2547

if.end34:                                         ; preds = %if.then31, %if.end28
  %46 = load i32, i32* %channel.addr, align 4, !dbg !2548
  %and35 = and i32 %46, 4, !dbg !2550
  %cmp36 = icmp ne i32 %and35, 0, !dbg !2551
  br i1 %cmp36, label %if.then37, label %if.end40, !dbg !2552

if.then37:                                        ; preds = %if.end34
  %47 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !2553
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %47, i32 0, i32 0, !dbg !2553
  %48 = load i16, i16* %blue, align 2, !dbg !2553
  %49 = load i32, i32* %function.addr, align 4, !dbg !2553
  %50 = load i64, i64* %number_parameters.addr, align 8, !dbg !2553
  %51 = load double*, double** %parameters.addr, align 8, !dbg !2553
  %52 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !2553
  %call38 = call zeroext i16 @ApplyFunction(i16 zeroext %48, i32 %49, i64 %50, double* %51, %struct._ExceptionInfo* %52), !dbg !2553
  %53 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !2553
  %blue39 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %53, i32 0, i32 0, !dbg !2553
  store i16 %call38, i16* %blue39, align 2, !dbg !2553
  br label %if.end40, !dbg !2553

if.end40:                                         ; preds = %if.then37, %if.end34
  %54 = load i32, i32* %channel.addr, align 4, !dbg !2554
  %and41 = and i32 %54, 8, !dbg !2556
  %cmp42 = icmp ne i32 %and41, 0, !dbg !2557
  br i1 %cmp42, label %if.then43, label %if.end56, !dbg !2558

if.then43:                                        ; preds = %if.end40
  %55 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2559
  %matte = getelementptr inbounds %struct._Image, %struct._Image* %55, i32 0, i32 6, !dbg !2562
  %56 = load i32, i32* %matte, align 8, !dbg !2562
  %cmp44 = icmp eq i32 %56, 0, !dbg !2563
  br i1 %cmp44, label %if.then45, label %if.else, !dbg !2564

if.then45:                                        ; preds = %if.then43
  %57 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !2565
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %57, i32 0, i32 3, !dbg !2565
  %58 = load i16, i16* %opacity, align 2, !dbg !2565
  %59 = load i32, i32* %function.addr, align 4, !dbg !2565
  %60 = load i64, i64* %number_parameters.addr, align 8, !dbg !2565
  %61 = load double*, double** %parameters.addr, align 8, !dbg !2565
  %62 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !2565
  %call46 = call zeroext i16 @ApplyFunction(i16 zeroext %58, i32 %59, i64 %60, double* %61, %struct._ExceptionInfo* %62), !dbg !2565
  %63 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !2565
  %opacity47 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %63, i32 0, i32 3, !dbg !2565
  store i16 %call46, i16* %opacity47, align 2, !dbg !2565
  br label %if.end55, !dbg !2565

if.else:                                          ; preds = %if.then43
  %64 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !2566
  %opacity48 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %64, i32 0, i32 3, !dbg !2566
  %65 = load i16, i16* %opacity48, align 2, !dbg !2566
  %conv = zext i16 %65 to i32, !dbg !2566
  %sub = sub nsw i32 65535, %conv, !dbg !2566
  %conv49 = trunc i32 %sub to i16, !dbg !2566
  %66 = load i32, i32* %function.addr, align 4, !dbg !2566
  %67 = load i64, i64* %number_parameters.addr, align 8, !dbg !2566
  %68 = load double*, double** %parameters.addr, align 8, !dbg !2566
  %69 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !2566
  %call50 = call zeroext i16 @ApplyFunction(i16 zeroext %conv49, i32 %66, i64 %67, double* %68, %struct._ExceptionInfo* %69), !dbg !2566
  %conv51 = zext i16 %call50 to i32, !dbg !2566
  %sub52 = sub nsw i32 65535, %conv51, !dbg !2566
  %conv53 = trunc i32 %sub52 to i16, !dbg !2566
  %70 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !2566
  %opacity54 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %70, i32 0, i32 3, !dbg !2566
  store i16 %conv53, i16* %opacity54, align 2, !dbg !2566
  br label %if.end55

if.end55:                                         ; preds = %if.else, %if.then45
  br label %if.end56, !dbg !2567

if.end56:                                         ; preds = %if.end55, %if.end40
  %71 = load i32, i32* %channel.addr, align 4, !dbg !2568
  %and57 = and i32 %71, 32, !dbg !2570
  %cmp58 = icmp ne i32 %and57, 0, !dbg !2571
  br i1 %cmp58, label %land.lhs.true, label %if.end75, !dbg !2572

land.lhs.true:                                    ; preds = %if.end56
  %72 = load i16*, i16** %indexes, align 8, !dbg !2573
  %cmp60 = icmp ne i16* %72, null, !dbg !2574
  br i1 %cmp60, label %if.then62, label %if.end75, !dbg !2575

if.then62:                                        ; preds = %land.lhs.true
  %73 = load i16*, i16** %indexes, align 8, !dbg !2576
  %74 = load i64, i64* %x, align 8, !dbg !2576
  %add.ptr = getelementptr inbounds i16, i16* %73, i64 %74, !dbg !2576
  %cmp63 = icmp ne i16* %add.ptr, null, !dbg !2576
  br i1 %cmp63, label %if.then65, label %if.end74, !dbg !2579

if.then65:                                        ; preds = %if.then62
  %75 = load i16*, i16** %indexes, align 8, !dbg !2576
  %76 = load i64, i64* %x, align 8, !dbg !2576
  %add.ptr66 = getelementptr inbounds i16, i16* %75, i64 %76, !dbg !2576
  %cmp67 = icmp eq i16* %add.ptr66, null, !dbg !2576
  br i1 %cmp67, label %cond.true, label %cond.false, !dbg !2576

cond.true:                                        ; preds = %if.then65
  br label %cond.end, !dbg !2576

cond.false:                                       ; preds = %if.then65
  %77 = load i16*, i16** %indexes, align 8, !dbg !2576
  %78 = load i64, i64* %x, align 8, !dbg !2576
  %add.ptr69 = getelementptr inbounds i16, i16* %77, i64 %78, !dbg !2576
  %79 = load i16, i16* %add.ptr69, align 2, !dbg !2576
  %conv70 = zext i16 %79 to i32, !dbg !2576
  br label %cond.end, !dbg !2576

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %conv70, %cond.false ], !dbg !2576
  %conv71 = trunc i32 %cond to i16, !dbg !2576
  %80 = load i32, i32* %function.addr, align 4, !dbg !2576
  %81 = load i64, i64* %number_parameters.addr, align 8, !dbg !2576
  %82 = load double*, double** %parameters.addr, align 8, !dbg !2576
  %83 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !2576
  %call72 = call zeroext i16 @ApplyFunction(i16 zeroext %conv71, i32 %80, i64 %81, double* %82, %struct._ExceptionInfo* %83), !dbg !2576
  %84 = load i16*, i16** %indexes, align 8, !dbg !2576
  %85 = load i64, i64* %x, align 8, !dbg !2576
  %add.ptr73 = getelementptr inbounds i16, i16* %84, i64 %85, !dbg !2576
  store i16 %call72, i16* %add.ptr73, align 2, !dbg !2576
  br label %if.end74, !dbg !2576

if.end74:                                         ; preds = %cond.end, %if.then62
  br label %if.end75, !dbg !2579

if.end75:                                         ; preds = %if.end74, %land.lhs.true, %if.end56
  %86 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !2580
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %86, i32 1, !dbg !2580
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %q, align 8, !dbg !2580
  br label %for.inc, !dbg !2581

for.inc:                                          ; preds = %if.end75
  %87 = load i64, i64* %x, align 8, !dbg !2582
  %inc = add nsw i64 %87, 1, !dbg !2582
  store i64 %inc, i64* %x, align 8, !dbg !2582
  br label %for.cond20, !dbg !2583, !llvm.loop !2584

for.end:                                          ; preds = %for.cond20
  %88 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !2586
  %89 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !2588
  %call76 = call i32 @SyncCacheViewAuthenticPixels(%struct._CacheView* %88, %struct._ExceptionInfo* %89), !dbg !2589
  %cmp77 = icmp eq i32 %call76, 0, !dbg !2590
  br i1 %cmp77, label %if.then79, label %if.end80, !dbg !2591

if.then79:                                        ; preds = %for.end
  store i32 0, i32* %status, align 4, !dbg !2592
  br label %if.end80, !dbg !2593

if.end80:                                         ; preds = %if.then79, %for.end
  %90 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2594
  %progress_monitor = getelementptr inbounds %struct._Image, %struct._Image* %90, i32 0, i32 47, !dbg !2596
  %91 = load i32 (i8*, i64, i64, i8*)*, i32 (i8*, i64, i64, i8*)** %progress_monitor, align 8, !dbg !2596
  %cmp81 = icmp ne i32 (i8*, i64, i64, i8*)* %91, null, !dbg !2597
  br i1 %cmp81, label %if.then83, label %if.end91, !dbg !2598

if.then83:                                        ; preds = %if.end80
  call void @llvm.dbg.declare(metadata i32* %proceed, metadata !2599, metadata !DIExpression()), !dbg !2601
  %92 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2602
  %93 = load i64, i64* %progress, align 8, !dbg !2603
  %inc84 = add nsw i64 %93, 1, !dbg !2603
  store i64 %inc84, i64* %progress, align 8, !dbg !2603
  %94 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2604
  %rows85 = getelementptr inbounds %struct._Image, %struct._Image* %94, i32 0, i32 8, !dbg !2605
  %95 = load i64, i64* %rows85, align 8, !dbg !2605
  %call86 = call i32 @SetImageProgress(%struct._Image* %92, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.6, i64 0, i64 0), i64 %93, i64 %95), !dbg !2606
  store i32 %call86, i32* %proceed, align 4, !dbg !2607
  %96 = load i32, i32* %proceed, align 4, !dbg !2608
  %cmp87 = icmp eq i32 %96, 0, !dbg !2610
  br i1 %cmp87, label %if.then89, label %if.end90, !dbg !2611

if.then89:                                        ; preds = %if.then83
  store i32 0, i32* %status, align 4, !dbg !2612
  br label %if.end90, !dbg !2613

if.end90:                                         ; preds = %if.then89, %if.then83
  br label %if.end91, !dbg !2614

if.end91:                                         ; preds = %if.end90, %if.end80
  br label %for.inc92, !dbg !2615

for.inc92:                                        ; preds = %if.end91, %if.then17, %if.then13
  %97 = load i64, i64* %y, align 8, !dbg !2616
  %inc93 = add nsw i64 %97, 1, !dbg !2616
  store i64 %inc93, i64* %y, align 8, !dbg !2616
  br label %for.cond, !dbg !2617, !llvm.loop !2618

for.end94:                                        ; preds = %for.cond
  %98 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !2620
  %call95 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %98), !dbg !2621
  store %struct._CacheView* %call95, %struct._CacheView** %image_view, align 8, !dbg !2622
  %99 = load i32, i32* %status, align 4, !dbg !2623
  store i32 %99, i32* %retval, align 4, !dbg !2624
  br label %return, !dbg !2624

return:                                           ; preds = %for.end94, %if.then8, %if.then3
  %100 = load i32, i32* %retval, align 4, !dbg !2625
  ret i32 %100, !dbg !2625
}

declare dso_local i32 @AccelerateFunctionImage(%struct._Image*, i32, i32, i64, double*, %struct._ExceptionInfo*) #2

; Function Attrs: noinline nounwind uwtable
define internal zeroext i16 @ApplyFunction(i16 zeroext %pixel, i32 %function, i64 %number_parameters, double* %parameters, %struct._ExceptionInfo* %exception) #0 !dbg !2626 {
entry:
  %pixel.addr = alloca i16, align 2
  %function.addr = alloca i32, align 4
  %number_parameters.addr = alloca i64, align 8
  %parameters.addr = alloca double*, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %result = alloca float, align 4
  %i = alloca i64, align 8
  %freq = alloca double, align 8
  %phase = alloca double, align 8
  %ampl = alloca double, align 8
  %bias = alloca double, align 8
  %width = alloca double, align 8
  %range = alloca double, align 8
  %center = alloca double, align 8
  %bias42 = alloca double, align 8
  %slope = alloca double, align 8
  %range100 = alloca double, align 8
  %center101 = alloca double, align 8
  %bias102 = alloca double, align 8
  store i16 %pixel, i16* %pixel.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %pixel.addr, metadata !2629, metadata !DIExpression()), !dbg !2630
  store i32 %function, i32* %function.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %function.addr, metadata !2631, metadata !DIExpression()), !dbg !2632
  store i64 %number_parameters, i64* %number_parameters.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %number_parameters.addr, metadata !2633, metadata !DIExpression()), !dbg !2634
  store double* %parameters, double** %parameters.addr, align 8
  call void @llvm.dbg.declare(metadata double** %parameters.addr, metadata !2635, metadata !DIExpression()), !dbg !2636
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !2637, metadata !DIExpression()), !dbg !2638
  call void @llvm.dbg.declare(metadata float* %result, metadata !2639, metadata !DIExpression()), !dbg !2640
  call void @llvm.dbg.declare(metadata i64* %i, metadata !2641, metadata !DIExpression()), !dbg !2642
  %0 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !2643
  store float 0.000000e+00, float* %result, align 4, !dbg !2644
  %1 = load i32, i32* %function.addr, align 4, !dbg !2645
  switch i32 %1, label %sw.epilog [
    i32 1, label %sw.bb
    i32 2, label %sw.bb6
    i32 3, label %sw.bb41
    i32 4, label %sw.bb99
    i32 0, label %sw.bb145
  ], !dbg !2646

sw.bb:                                            ; preds = %entry
  store float 0.000000e+00, float* %result, align 4, !dbg !2647
  store i64 0, i64* %i, align 8, !dbg !2650
  br label %for.cond, !dbg !2652

for.cond:                                         ; preds = %for.inc, %sw.bb
  %2 = load i64, i64* %i, align 8, !dbg !2653
  %3 = load i64, i64* %number_parameters.addr, align 8, !dbg !2655
  %cmp = icmp slt i64 %2, %3, !dbg !2656
  br i1 %cmp, label %for.body, label %for.end, !dbg !2657

for.body:                                         ; preds = %for.cond
  %4 = load float, float* %result, align 4, !dbg !2658
  %conv = fpext float %4 to double, !dbg !2658
  %mul = fmul double %conv, 0x3EF0001000100010, !dbg !2659
  %5 = load i16, i16* %pixel.addr, align 2, !dbg !2660
  %conv1 = zext i16 %5 to i32, !dbg !2660
  %conv2 = sitofp i32 %conv1 to double, !dbg !2660
  %mul3 = fmul double %mul, %conv2, !dbg !2661
  %6 = load double*, double** %parameters.addr, align 8, !dbg !2662
  %7 = load i64, i64* %i, align 8, !dbg !2663
  %arrayidx = getelementptr inbounds double, double* %6, i64 %7, !dbg !2662
  %8 = load double, double* %arrayidx, align 8, !dbg !2662
  %add = fadd double %mul3, %8, !dbg !2664
  %conv4 = fptrunc double %add to float, !dbg !2658
  store float %conv4, float* %result, align 4, !dbg !2665
  br label %for.inc, !dbg !2666

for.inc:                                          ; preds = %for.body
  %9 = load i64, i64* %i, align 8, !dbg !2667
  %inc = add nsw i64 %9, 1, !dbg !2667
  store i64 %inc, i64* %i, align 8, !dbg !2667
  br label %for.cond, !dbg !2668, !llvm.loop !2669

for.end:                                          ; preds = %for.cond
  %10 = load float, float* %result, align 4, !dbg !2671
  %mul5 = fmul float %10, 6.553500e+04, !dbg !2671
  store float %mul5, float* %result, align 4, !dbg !2671
  br label %sw.epilog, !dbg !2672

sw.bb6:                                           ; preds = %entry
  call void @llvm.dbg.declare(metadata double* %freq, metadata !2673, metadata !DIExpression()), !dbg !2675
  call void @llvm.dbg.declare(metadata double* %phase, metadata !2676, metadata !DIExpression()), !dbg !2677
  call void @llvm.dbg.declare(metadata double* %ampl, metadata !2678, metadata !DIExpression()), !dbg !2679
  call void @llvm.dbg.declare(metadata double* %bias, metadata !2680, metadata !DIExpression()), !dbg !2681
  %11 = load i64, i64* %number_parameters.addr, align 8, !dbg !2682
  %cmp7 = icmp uge i64 %11, 1, !dbg !2683
  br i1 %cmp7, label %cond.true, label %cond.false, !dbg !2684

cond.true:                                        ; preds = %sw.bb6
  %12 = load double*, double** %parameters.addr, align 8, !dbg !2685
  %arrayidx9 = getelementptr inbounds double, double* %12, i64 0, !dbg !2685
  %13 = load double, double* %arrayidx9, align 8, !dbg !2685
  br label %cond.end, !dbg !2684

cond.false:                                       ; preds = %sw.bb6
  br label %cond.end, !dbg !2684

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi double [ %13, %cond.true ], [ 1.000000e+00, %cond.false ], !dbg !2684
  store double %cond, double* %freq, align 8, !dbg !2686
  %14 = load i64, i64* %number_parameters.addr, align 8, !dbg !2687
  %cmp10 = icmp uge i64 %14, 2, !dbg !2688
  br i1 %cmp10, label %cond.true12, label %cond.false14, !dbg !2689

cond.true12:                                      ; preds = %cond.end
  %15 = load double*, double** %parameters.addr, align 8, !dbg !2690
  %arrayidx13 = getelementptr inbounds double, double* %15, i64 1, !dbg !2690
  %16 = load double, double* %arrayidx13, align 8, !dbg !2690
  br label %cond.end15, !dbg !2689

cond.false14:                                     ; preds = %cond.end
  br label %cond.end15, !dbg !2689

cond.end15:                                       ; preds = %cond.false14, %cond.true12
  %cond16 = phi double [ %16, %cond.true12 ], [ 0.000000e+00, %cond.false14 ], !dbg !2689
  store double %cond16, double* %phase, align 8, !dbg !2691
  %17 = load i64, i64* %number_parameters.addr, align 8, !dbg !2692
  %cmp17 = icmp uge i64 %17, 3, !dbg !2693
  br i1 %cmp17, label %cond.true19, label %cond.false21, !dbg !2694

cond.true19:                                      ; preds = %cond.end15
  %18 = load double*, double** %parameters.addr, align 8, !dbg !2695
  %arrayidx20 = getelementptr inbounds double, double* %18, i64 2, !dbg !2695
  %19 = load double, double* %arrayidx20, align 8, !dbg !2695
  br label %cond.end22, !dbg !2694

cond.false21:                                     ; preds = %cond.end15
  br label %cond.end22, !dbg !2694

cond.end22:                                       ; preds = %cond.false21, %cond.true19
  %cond23 = phi double [ %19, %cond.true19 ], [ 5.000000e-01, %cond.false21 ], !dbg !2694
  store double %cond23, double* %ampl, align 8, !dbg !2696
  %20 = load i64, i64* %number_parameters.addr, align 8, !dbg !2697
  %cmp24 = icmp uge i64 %20, 4, !dbg !2698
  br i1 %cmp24, label %cond.true26, label %cond.false28, !dbg !2699

cond.true26:                                      ; preds = %cond.end22
  %21 = load double*, double** %parameters.addr, align 8, !dbg !2700
  %arrayidx27 = getelementptr inbounds double, double* %21, i64 3, !dbg !2700
  %22 = load double, double* %arrayidx27, align 8, !dbg !2700
  br label %cond.end29, !dbg !2699

cond.false28:                                     ; preds = %cond.end22
  br label %cond.end29, !dbg !2699

cond.end29:                                       ; preds = %cond.false28, %cond.true26
  %cond30 = phi double [ %22, %cond.true26 ], [ 5.000000e-01, %cond.false28 ], !dbg !2699
  store double %cond30, double* %bias, align 8, !dbg !2701
  %23 = load double, double* %ampl, align 8, !dbg !2702
  %24 = load double, double* %freq, align 8, !dbg !2703
  %mul31 = fmul double %24, 0x3EF0001000100010, !dbg !2704
  %25 = load i16, i16* %pixel.addr, align 2, !dbg !2705
  %conv32 = zext i16 %25 to i32, !dbg !2705
  %conv33 = sitofp i32 %conv32 to double, !dbg !2705
  %mul34 = fmul double %mul31, %conv33, !dbg !2706
  %26 = load double, double* %phase, align 8, !dbg !2707
  %div = fdiv double %26, 3.600000e+02, !dbg !2708
  %add35 = fadd double %mul34, %div, !dbg !2709
  %mul36 = fmul double 0x401921FB54442D18, %add35, !dbg !2710
  %call = call double @sin(double %mul36) #8, !dbg !2711
  %mul37 = fmul double %23, %call, !dbg !2712
  %27 = load double, double* %bias, align 8, !dbg !2713
  %add38 = fadd double %mul37, %27, !dbg !2714
  %mul39 = fmul double 6.553500e+04, %add38, !dbg !2715
  %conv40 = fptrunc double %mul39 to float, !dbg !2716
  store float %conv40, float* %result, align 4, !dbg !2717
  br label %sw.epilog, !dbg !2718

sw.bb41:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata double* %width, metadata !2719, metadata !DIExpression()), !dbg !2721
  call void @llvm.dbg.declare(metadata double* %range, metadata !2722, metadata !DIExpression()), !dbg !2723
  call void @llvm.dbg.declare(metadata double* %center, metadata !2724, metadata !DIExpression()), !dbg !2725
  call void @llvm.dbg.declare(metadata double* %bias42, metadata !2726, metadata !DIExpression()), !dbg !2727
  %28 = load i64, i64* %number_parameters.addr, align 8, !dbg !2728
  %cmp43 = icmp uge i64 %28, 1, !dbg !2729
  br i1 %cmp43, label %cond.true45, label %cond.false47, !dbg !2730

cond.true45:                                      ; preds = %sw.bb41
  %29 = load double*, double** %parameters.addr, align 8, !dbg !2731
  %arrayidx46 = getelementptr inbounds double, double* %29, i64 0, !dbg !2731
  %30 = load double, double* %arrayidx46, align 8, !dbg !2731
  br label %cond.end48, !dbg !2730

cond.false47:                                     ; preds = %sw.bb41
  br label %cond.end48, !dbg !2730

cond.end48:                                       ; preds = %cond.false47, %cond.true45
  %cond49 = phi double [ %30, %cond.true45 ], [ 1.000000e+00, %cond.false47 ], !dbg !2730
  store double %cond49, double* %width, align 8, !dbg !2732
  %31 = load i64, i64* %number_parameters.addr, align 8, !dbg !2733
  %cmp50 = icmp uge i64 %31, 2, !dbg !2734
  br i1 %cmp50, label %cond.true52, label %cond.false54, !dbg !2735

cond.true52:                                      ; preds = %cond.end48
  %32 = load double*, double** %parameters.addr, align 8, !dbg !2736
  %arrayidx53 = getelementptr inbounds double, double* %32, i64 1, !dbg !2736
  %33 = load double, double* %arrayidx53, align 8, !dbg !2736
  br label %cond.end55, !dbg !2735

cond.false54:                                     ; preds = %cond.end48
  br label %cond.end55, !dbg !2735

cond.end55:                                       ; preds = %cond.false54, %cond.true52
  %cond56 = phi double [ %33, %cond.true52 ], [ 5.000000e-01, %cond.false54 ], !dbg !2735
  store double %cond56, double* %center, align 8, !dbg !2737
  %34 = load i64, i64* %number_parameters.addr, align 8, !dbg !2738
  %cmp57 = icmp uge i64 %34, 3, !dbg !2739
  br i1 %cmp57, label %cond.true59, label %cond.false61, !dbg !2740

cond.true59:                                      ; preds = %cond.end55
  %35 = load double*, double** %parameters.addr, align 8, !dbg !2741
  %arrayidx60 = getelementptr inbounds double, double* %35, i64 2, !dbg !2741
  %36 = load double, double* %arrayidx60, align 8, !dbg !2741
  br label %cond.end62, !dbg !2740

cond.false61:                                     ; preds = %cond.end55
  br label %cond.end62, !dbg !2740

cond.end62:                                       ; preds = %cond.false61, %cond.true59
  %cond63 = phi double [ %36, %cond.true59 ], [ 1.000000e+00, %cond.false61 ], !dbg !2740
  store double %cond63, double* %range, align 8, !dbg !2742
  %37 = load i64, i64* %number_parameters.addr, align 8, !dbg !2743
  %cmp64 = icmp uge i64 %37, 4, !dbg !2744
  br i1 %cmp64, label %cond.true66, label %cond.false68, !dbg !2745

cond.true66:                                      ; preds = %cond.end62
  %38 = load double*, double** %parameters.addr, align 8, !dbg !2746
  %arrayidx67 = getelementptr inbounds double, double* %38, i64 3, !dbg !2746
  %39 = load double, double* %arrayidx67, align 8, !dbg !2746
  br label %cond.end69, !dbg !2745

cond.false68:                                     ; preds = %cond.end62
  br label %cond.end69, !dbg !2745

cond.end69:                                       ; preds = %cond.false68, %cond.true66
  %cond70 = phi double [ %39, %cond.true66 ], [ 5.000000e-01, %cond.false68 ], !dbg !2745
  store double %cond70, double* %bias42, align 8, !dbg !2747
  %40 = load double, double* %width, align 8, !dbg !2748
  %div71 = fdiv double 2.000000e+00, %40, !dbg !2749
  %41 = load i16, i16* %pixel.addr, align 2, !dbg !2750
  %conv72 = zext i16 %41 to i32, !dbg !2750
  %conv73 = sitofp i32 %conv72 to double, !dbg !2750
  %mul74 = fmul double 0x3EF0001000100010, %conv73, !dbg !2751
  %42 = load double, double* %center, align 8, !dbg !2752
  %sub = fsub double %mul74, %42, !dbg !2753
  %mul75 = fmul double %div71, %sub, !dbg !2754
  %conv76 = fptrunc double %mul75 to float, !dbg !2755
  store float %conv76, float* %result, align 4, !dbg !2756
  %43 = load float, float* %result, align 4, !dbg !2757
  %conv77 = fpext float %43 to double, !dbg !2757
  %cmp78 = fcmp ole double %conv77, -1.000000e+00, !dbg !2759
  br i1 %cmp78, label %if.then, label %if.else, !dbg !2760

if.then:                                          ; preds = %cond.end69
  %44 = load double, double* %bias42, align 8, !dbg !2761
  %45 = load double, double* %range, align 8, !dbg !2762
  %div80 = fdiv double %45, 2.000000e+00, !dbg !2763
  %sub81 = fsub double %44, %div80, !dbg !2764
  %conv82 = fptrunc double %sub81 to float, !dbg !2761
  store float %conv82, float* %result, align 4, !dbg !2765
  br label %if.end97, !dbg !2766

if.else:                                          ; preds = %cond.end69
  %46 = load float, float* %result, align 4, !dbg !2767
  %conv83 = fpext float %46 to double, !dbg !2767
  %cmp84 = fcmp oge double %conv83, 1.000000e+00, !dbg !2769
  br i1 %cmp84, label %if.then86, label %if.else90, !dbg !2770

if.then86:                                        ; preds = %if.else
  %47 = load double, double* %bias42, align 8, !dbg !2771
  %48 = load double, double* %range, align 8, !dbg !2772
  %div87 = fdiv double %48, 2.000000e+00, !dbg !2773
  %add88 = fadd double %47, %div87, !dbg !2774
  %conv89 = fptrunc double %add88 to float, !dbg !2771
  store float %conv89, float* %result, align 4, !dbg !2775
  br label %if.end, !dbg !2776

if.else90:                                        ; preds = %if.else
  %49 = load double, double* %range, align 8, !dbg !2777
  %div91 = fdiv double %49, 0x400921FB54442D18, !dbg !2778
  %50 = load float, float* %result, align 4, !dbg !2779
  %conv92 = fpext float %50 to double, !dbg !2780
  %call93 = call double @asin(double %conv92) #8, !dbg !2781
  %mul94 = fmul double %div91, %call93, !dbg !2782
  %51 = load double, double* %bias42, align 8, !dbg !2783
  %add95 = fadd double %mul94, %51, !dbg !2784
  %conv96 = fptrunc double %add95 to float, !dbg !2785
  store float %conv96, float* %result, align 4, !dbg !2786
  br label %if.end

if.end:                                           ; preds = %if.else90, %if.then86
  br label %if.end97

if.end97:                                         ; preds = %if.end, %if.then
  %52 = load float, float* %result, align 4, !dbg !2787
  %mul98 = fmul float %52, 6.553500e+04, !dbg !2787
  store float %mul98, float* %result, align 4, !dbg !2787
  br label %sw.epilog, !dbg !2788

sw.bb99:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata double* %slope, metadata !2789, metadata !DIExpression()), !dbg !2791
  call void @llvm.dbg.declare(metadata double* %range100, metadata !2792, metadata !DIExpression()), !dbg !2793
  call void @llvm.dbg.declare(metadata double* %center101, metadata !2794, metadata !DIExpression()), !dbg !2795
  call void @llvm.dbg.declare(metadata double* %bias102, metadata !2796, metadata !DIExpression()), !dbg !2797
  %53 = load i64, i64* %number_parameters.addr, align 8, !dbg !2798
  %cmp103 = icmp uge i64 %53, 1, !dbg !2799
  br i1 %cmp103, label %cond.true105, label %cond.false107, !dbg !2800

cond.true105:                                     ; preds = %sw.bb99
  %54 = load double*, double** %parameters.addr, align 8, !dbg !2801
  %arrayidx106 = getelementptr inbounds double, double* %54, i64 0, !dbg !2801
  %55 = load double, double* %arrayidx106, align 8, !dbg !2801
  br label %cond.end108, !dbg !2800

cond.false107:                                    ; preds = %sw.bb99
  br label %cond.end108, !dbg !2800

cond.end108:                                      ; preds = %cond.false107, %cond.true105
  %cond109 = phi double [ %55, %cond.true105 ], [ 1.000000e+00, %cond.false107 ], !dbg !2800
  store double %cond109, double* %slope, align 8, !dbg !2802
  %56 = load i64, i64* %number_parameters.addr, align 8, !dbg !2803
  %cmp110 = icmp uge i64 %56, 2, !dbg !2804
  br i1 %cmp110, label %cond.true112, label %cond.false114, !dbg !2805

cond.true112:                                     ; preds = %cond.end108
  %57 = load double*, double** %parameters.addr, align 8, !dbg !2806
  %arrayidx113 = getelementptr inbounds double, double* %57, i64 1, !dbg !2806
  %58 = load double, double* %arrayidx113, align 8, !dbg !2806
  br label %cond.end115, !dbg !2805

cond.false114:                                    ; preds = %cond.end108
  br label %cond.end115, !dbg !2805

cond.end115:                                      ; preds = %cond.false114, %cond.true112
  %cond116 = phi double [ %58, %cond.true112 ], [ 5.000000e-01, %cond.false114 ], !dbg !2805
  store double %cond116, double* %center101, align 8, !dbg !2807
  %59 = load i64, i64* %number_parameters.addr, align 8, !dbg !2808
  %cmp117 = icmp uge i64 %59, 3, !dbg !2809
  br i1 %cmp117, label %cond.true119, label %cond.false121, !dbg !2810

cond.true119:                                     ; preds = %cond.end115
  %60 = load double*, double** %parameters.addr, align 8, !dbg !2811
  %arrayidx120 = getelementptr inbounds double, double* %60, i64 2, !dbg !2811
  %61 = load double, double* %arrayidx120, align 8, !dbg !2811
  br label %cond.end122, !dbg !2810

cond.false121:                                    ; preds = %cond.end115
  br label %cond.end122, !dbg !2810

cond.end122:                                      ; preds = %cond.false121, %cond.true119
  %cond123 = phi double [ %61, %cond.true119 ], [ 1.000000e+00, %cond.false121 ], !dbg !2810
  store double %cond123, double* %range100, align 8, !dbg !2812
  %62 = load i64, i64* %number_parameters.addr, align 8, !dbg !2813
  %cmp124 = icmp uge i64 %62, 4, !dbg !2814
  br i1 %cmp124, label %cond.true126, label %cond.false128, !dbg !2815

cond.true126:                                     ; preds = %cond.end122
  %63 = load double*, double** %parameters.addr, align 8, !dbg !2816
  %arrayidx127 = getelementptr inbounds double, double* %63, i64 3, !dbg !2816
  %64 = load double, double* %arrayidx127, align 8, !dbg !2816
  br label %cond.end129, !dbg !2815

cond.false128:                                    ; preds = %cond.end122
  br label %cond.end129, !dbg !2815

cond.end129:                                      ; preds = %cond.false128, %cond.true126
  %cond130 = phi double [ %64, %cond.true126 ], [ 5.000000e-01, %cond.false128 ], !dbg !2815
  store double %cond130, double* %bias102, align 8, !dbg !2817
  %65 = load double, double* %slope, align 8, !dbg !2818
  %mul131 = fmul double 0x400921FB54442D18, %65, !dbg !2819
  %66 = load i16, i16* %pixel.addr, align 2, !dbg !2820
  %conv132 = zext i16 %66 to i32, !dbg !2820
  %conv133 = sitofp i32 %conv132 to double, !dbg !2820
  %mul134 = fmul double 0x3EF0001000100010, %conv133, !dbg !2821
  %67 = load double, double* %center101, align 8, !dbg !2822
  %sub135 = fsub double %mul134, %67, !dbg !2823
  %mul136 = fmul double %mul131, %sub135, !dbg !2824
  %conv137 = fptrunc double %mul136 to float, !dbg !2825
  store float %conv137, float* %result, align 4, !dbg !2826
  %68 = load double, double* %range100, align 8, !dbg !2827
  %div138 = fdiv double %68, 0x400921FB54442D18, !dbg !2828
  %69 = load float, float* %result, align 4, !dbg !2829
  %conv139 = fpext float %69 to double, !dbg !2830
  %call140 = call double @atan(double %conv139) #8, !dbg !2831
  %mul141 = fmul double %div138, %call140, !dbg !2832
  %70 = load double, double* %bias102, align 8, !dbg !2833
  %add142 = fadd double %mul141, %70, !dbg !2834
  %mul143 = fmul double 6.553500e+04, %add142, !dbg !2835
  %conv144 = fptrunc double %mul143 to float, !dbg !2836
  store float %conv144, float* %result, align 4, !dbg !2837
  br label %sw.epilog, !dbg !2838

sw.bb145:                                         ; preds = %entry
  br label %sw.epilog, !dbg !2839

sw.epilog:                                        ; preds = %entry, %sw.bb145, %cond.end129, %if.end97, %cond.end29, %for.end
  %71 = load float, float* %result, align 4, !dbg !2840
  %call146 = call zeroext i16 @ClampToQuantum(float %71), !dbg !2841
  ret i16 %call146, !dbg !2842
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @GetImageExtrema(%struct._Image* %image, i64* %minima, i64* %maxima, %struct._ExceptionInfo* %exception) #0 !dbg !2843 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %minima.addr = alloca i64*, align 8
  %maxima.addr = alloca i64*, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !2847, metadata !DIExpression()), !dbg !2848
  store i64* %minima, i64** %minima.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %minima.addr, metadata !2849, metadata !DIExpression()), !dbg !2850
  store i64* %maxima, i64** %maxima.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %maxima.addr, metadata !2851, metadata !DIExpression()), !dbg !2852
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !2853, metadata !DIExpression()), !dbg !2854
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2855
  %1 = load i64*, i64** %minima.addr, align 8, !dbg !2856
  %2 = load i64*, i64** %maxima.addr, align 8, !dbg !2857
  %3 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !2858
  %call = call i32 @GetImageChannelExtrema(%struct._Image* %0, i32 47, i64* %1, i64* %2, %struct._ExceptionInfo* %3), !dbg !2859
  ret i32 %call, !dbg !2860
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @GetImageChannelExtrema(%struct._Image* %image, i32 %channel, i64* %minima, i64* %maxima, %struct._ExceptionInfo* %exception) #0 !dbg !2861 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %channel.addr = alloca i32, align 4
  %minima.addr = alloca i64*, align 8
  %maxima.addr = alloca i64*, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %max = alloca double, align 8
  %min = alloca double, align 8
  %status = alloca i32, align 4
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !2864, metadata !DIExpression()), !dbg !2865
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !2866, metadata !DIExpression()), !dbg !2867
  store i64* %minima, i64** %minima.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %minima.addr, metadata !2868, metadata !DIExpression()), !dbg !2869
  store i64* %maxima, i64** %maxima.addr, align 8
  call void @llvm.dbg.declare(metadata i64** %maxima.addr, metadata !2870, metadata !DIExpression()), !dbg !2871
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !2872, metadata !DIExpression()), !dbg !2873
  call void @llvm.dbg.declare(metadata double* %max, metadata !2874, metadata !DIExpression()), !dbg !2875
  call void @llvm.dbg.declare(metadata double* %min, metadata !2876, metadata !DIExpression()), !dbg !2877
  call void @llvm.dbg.declare(metadata i32* %status, metadata !2878, metadata !DIExpression()), !dbg !2879
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2880
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !2882
  %1 = load i32, i32* %debug, align 8, !dbg !2882
  %cmp = icmp ne i32 %1, 0, !dbg !2883
  br i1 %cmp, label %if.then, label %if.end, !dbg !2884

if.then:                                          ; preds = %entry
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2885
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %2, i32 0, i32 53, !dbg !2886
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !2885
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1152, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !2887
  br label %if.end, !dbg !2888

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2889
  %4 = load i32, i32* %channel.addr, align 4, !dbg !2890
  %5 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !2891
  %call1 = call i32 @GetImageChannelRange(%struct._Image* %3, i32 %4, double* %min, double* %max, %struct._ExceptionInfo* %5), !dbg !2892
  store i32 %call1, i32* %status, align 4, !dbg !2893
  %6 = load double, double* %min, align 8, !dbg !2894
  %sub = fsub double %6, 5.000000e-01, !dbg !2895
  %7 = call double @llvm.ceil.f64(double %sub), !dbg !2896
  %conv = fptoui double %7 to i64, !dbg !2897
  %8 = load i64*, i64** %minima.addr, align 8, !dbg !2898
  store i64 %conv, i64* %8, align 8, !dbg !2899
  %9 = load double, double* %max, align 8, !dbg !2900
  %add = fadd double %9, 5.000000e-01, !dbg !2901
  %10 = call double @llvm.floor.f64(double %add), !dbg !2902
  %conv2 = fptoui double %10 to i64, !dbg !2903
  %11 = load i64*, i64** %maxima.addr, align 8, !dbg !2904
  store i64 %conv2, i64* %11, align 8, !dbg !2905
  %12 = load i32, i32* %status, align 4, !dbg !2906
  ret i32 %12, !dbg !2907
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @GetImageChannelRange(%struct._Image* %image, i32 %channel, double* %minima, double* %maxima, %struct._ExceptionInfo* %exception) #0 !dbg !2908 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %channel.addr = alloca i32, align 4
  %minima.addr = alloca double*, align 8
  %maxima.addr = alloca double*, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %pixel = alloca %struct._MagickPixelPacket, align 8
  %y = alloca i64, align 8
  %indexes = alloca i16*, align 8
  %p = alloca %struct._PixelPacket*, align 8
  %x = alloca i64, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !2912, metadata !DIExpression()), !dbg !2913
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !2914, metadata !DIExpression()), !dbg !2915
  store double* %minima, double** %minima.addr, align 8
  call void @llvm.dbg.declare(metadata double** %minima.addr, metadata !2916, metadata !DIExpression()), !dbg !2917
  store double* %maxima, double** %maxima.addr, align 8
  call void @llvm.dbg.declare(metadata double** %maxima.addr, metadata !2918, metadata !DIExpression()), !dbg !2919
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !2920, metadata !DIExpression()), !dbg !2921
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket* %pixel, metadata !2922, metadata !DIExpression()), !dbg !2923
  call void @llvm.dbg.declare(metadata i64* %y, metadata !2924, metadata !DIExpression()), !dbg !2925
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2926
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !2928
  %1 = load i32, i32* %debug, align 8, !dbg !2928
  %cmp = icmp ne i32 %1, 0, !dbg !2929
  br i1 %cmp, label %if.then, label %if.end, !dbg !2930

if.then:                                          ; preds = %entry
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2931
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %2, i32 0, i32 53, !dbg !2932
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !2931
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2029, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !2933
  br label %if.end, !dbg !2934

if.end:                                           ; preds = %if.then, %entry
  %3 = load double*, double** %maxima.addr, align 8, !dbg !2935
  store double 0xFFEFFFFFFFFFFFFF, double* %3, align 8, !dbg !2936
  %4 = load double*, double** %minima.addr, align 8, !dbg !2937
  store double 0x7FEFFFFFFFFFFFFF, double* %4, align 8, !dbg !2938
  %5 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2939
  call void @GetMagickPixelPacket(%struct._Image* %5, %struct._MagickPixelPacket* %pixel), !dbg !2940
  store i64 0, i64* %y, align 8, !dbg !2941
  br label %for.cond, !dbg !2943

for.cond:                                         ; preds = %for.inc113, %if.end
  %6 = load i64, i64* %y, align 8, !dbg !2944
  %7 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2946
  %rows = getelementptr inbounds %struct._Image, %struct._Image* %7, i32 0, i32 8, !dbg !2947
  %8 = load i64, i64* %rows, align 8, !dbg !2947
  %cmp1 = icmp slt i64 %6, %8, !dbg !2948
  br i1 %cmp1, label %for.body, label %for.end115, !dbg !2949

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i16** %indexes, metadata !2950, metadata !DIExpression()), !dbg !2953
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %p, metadata !2954, metadata !DIExpression()), !dbg !2956
  call void @llvm.dbg.declare(metadata i64* %x, metadata !2957, metadata !DIExpression()), !dbg !2958
  %9 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2959
  %10 = load i64, i64* %y, align 8, !dbg !2960
  %11 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2961
  %columns = getelementptr inbounds %struct._Image, %struct._Image* %11, i32 0, i32 7, !dbg !2962
  %12 = load i64, i64* %columns, align 8, !dbg !2962
  %13 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !2963
  %call2 = call %struct._PixelPacket* @GetVirtualPixels(%struct._Image* %9, i64 0, i64 %10, i64 %12, i64 1, %struct._ExceptionInfo* %13), !dbg !2964
  store %struct._PixelPacket* %call2, %struct._PixelPacket** %p, align 8, !dbg !2965
  %14 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2966
  %cmp3 = icmp eq %struct._PixelPacket* %14, null, !dbg !2968
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !2969

if.then4:                                         ; preds = %for.body
  br label %for.end115, !dbg !2970

if.end5:                                          ; preds = %for.body
  %15 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2971
  %call6 = call i16* @GetVirtualIndexQueue(%struct._Image* %15), !dbg !2972
  store i16* %call6, i16** %indexes, align 8, !dbg !2973
  store i64 0, i64* %x, align 8, !dbg !2974
  br label %for.cond7, !dbg !2976

for.cond7:                                        ; preds = %for.inc, %if.end5
  %16 = load i64, i64* %x, align 8, !dbg !2977
  %17 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2979
  %columns8 = getelementptr inbounds %struct._Image, %struct._Image* %17, i32 0, i32 7, !dbg !2980
  %18 = load i64, i64* %columns8, align 8, !dbg !2980
  %cmp9 = icmp slt i64 %16, %18, !dbg !2981
  br i1 %cmp9, label %for.body10, label %for.end, !dbg !2982

for.body10:                                       ; preds = %for.cond7
  %19 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !2983
  %20 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !2985
  %21 = load i16*, i16** %indexes, align 8, !dbg !2986
  %22 = load i64, i64* %x, align 8, !dbg !2987
  %add.ptr = getelementptr inbounds i16, i16* %21, i64 %22, !dbg !2988
  call void @SetMagickPixelPacket(%struct._Image* %19, %struct._PixelPacket* %20, i16* %add.ptr, %struct._MagickPixelPacket* %pixel), !dbg !2989
  %23 = load i32, i32* %channel.addr, align 4, !dbg !2990
  %and = and i32 %23, 1, !dbg !2992
  %cmp11 = icmp ne i32 %and, 0, !dbg !2993
  br i1 %cmp11, label %if.then12, label %if.end27, !dbg !2994

if.then12:                                        ; preds = %for.body10
  %red = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 5, !dbg !2995
  %24 = load float, float* %red, align 8, !dbg !2995
  %conv = fpext float %24 to double, !dbg !2998
  %25 = load double*, double** %minima.addr, align 8, !dbg !2999
  %26 = load double, double* %25, align 8, !dbg !3000
  %cmp13 = fcmp olt double %conv, %26, !dbg !3001
  br i1 %cmp13, label %if.then15, label %if.end18, !dbg !3002

if.then15:                                        ; preds = %if.then12
  %red16 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 5, !dbg !3003
  %27 = load float, float* %red16, align 8, !dbg !3003
  %conv17 = fpext float %27 to double, !dbg !3004
  %28 = load double*, double** %minima.addr, align 8, !dbg !3005
  store double %conv17, double* %28, align 8, !dbg !3006
  br label %if.end18, !dbg !3007

if.end18:                                         ; preds = %if.then15, %if.then12
  %red19 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 5, !dbg !3008
  %29 = load float, float* %red19, align 8, !dbg !3008
  %conv20 = fpext float %29 to double, !dbg !3010
  %30 = load double*, double** %maxima.addr, align 8, !dbg !3011
  %31 = load double, double* %30, align 8, !dbg !3012
  %cmp21 = fcmp ogt double %conv20, %31, !dbg !3013
  br i1 %cmp21, label %if.then23, label %if.end26, !dbg !3014

if.then23:                                        ; preds = %if.end18
  %red24 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 5, !dbg !3015
  %32 = load float, float* %red24, align 8, !dbg !3015
  %conv25 = fpext float %32 to double, !dbg !3016
  %33 = load double*, double** %maxima.addr, align 8, !dbg !3017
  store double %conv25, double* %33, align 8, !dbg !3018
  br label %if.end26, !dbg !3019

if.end26:                                         ; preds = %if.then23, %if.end18
  br label %if.end27, !dbg !3020

if.end27:                                         ; preds = %if.end26, %for.body10
  %34 = load i32, i32* %channel.addr, align 4, !dbg !3021
  %and28 = and i32 %34, 2, !dbg !3023
  %cmp29 = icmp ne i32 %and28, 0, !dbg !3024
  br i1 %cmp29, label %if.then31, label %if.end47, !dbg !3025

if.then31:                                        ; preds = %if.end27
  %green = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 6, !dbg !3026
  %35 = load float, float* %green, align 4, !dbg !3026
  %conv32 = fpext float %35 to double, !dbg !3029
  %36 = load double*, double** %minima.addr, align 8, !dbg !3030
  %37 = load double, double* %36, align 8, !dbg !3031
  %cmp33 = fcmp olt double %conv32, %37, !dbg !3032
  br i1 %cmp33, label %if.then35, label %if.end38, !dbg !3033

if.then35:                                        ; preds = %if.then31
  %green36 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 6, !dbg !3034
  %38 = load float, float* %green36, align 4, !dbg !3034
  %conv37 = fpext float %38 to double, !dbg !3035
  %39 = load double*, double** %minima.addr, align 8, !dbg !3036
  store double %conv37, double* %39, align 8, !dbg !3037
  br label %if.end38, !dbg !3038

if.end38:                                         ; preds = %if.then35, %if.then31
  %green39 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 6, !dbg !3039
  %40 = load float, float* %green39, align 4, !dbg !3039
  %conv40 = fpext float %40 to double, !dbg !3041
  %41 = load double*, double** %maxima.addr, align 8, !dbg !3042
  %42 = load double, double* %41, align 8, !dbg !3043
  %cmp41 = fcmp ogt double %conv40, %42, !dbg !3044
  br i1 %cmp41, label %if.then43, label %if.end46, !dbg !3045

if.then43:                                        ; preds = %if.end38
  %green44 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 6, !dbg !3046
  %43 = load float, float* %green44, align 4, !dbg !3046
  %conv45 = fpext float %43 to double, !dbg !3047
  %44 = load double*, double** %maxima.addr, align 8, !dbg !3048
  store double %conv45, double* %44, align 8, !dbg !3049
  br label %if.end46, !dbg !3050

if.end46:                                         ; preds = %if.then43, %if.end38
  br label %if.end47, !dbg !3051

if.end47:                                         ; preds = %if.end46, %if.end27
  %45 = load i32, i32* %channel.addr, align 4, !dbg !3052
  %and48 = and i32 %45, 4, !dbg !3054
  %cmp49 = icmp ne i32 %and48, 0, !dbg !3055
  br i1 %cmp49, label %if.then51, label %if.end67, !dbg !3056

if.then51:                                        ; preds = %if.end47
  %blue = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 7, !dbg !3057
  %46 = load float, float* %blue, align 8, !dbg !3057
  %conv52 = fpext float %46 to double, !dbg !3060
  %47 = load double*, double** %minima.addr, align 8, !dbg !3061
  %48 = load double, double* %47, align 8, !dbg !3062
  %cmp53 = fcmp olt double %conv52, %48, !dbg !3063
  br i1 %cmp53, label %if.then55, label %if.end58, !dbg !3064

if.then55:                                        ; preds = %if.then51
  %blue56 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 7, !dbg !3065
  %49 = load float, float* %blue56, align 8, !dbg !3065
  %conv57 = fpext float %49 to double, !dbg !3066
  %50 = load double*, double** %minima.addr, align 8, !dbg !3067
  store double %conv57, double* %50, align 8, !dbg !3068
  br label %if.end58, !dbg !3069

if.end58:                                         ; preds = %if.then55, %if.then51
  %blue59 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 7, !dbg !3070
  %51 = load float, float* %blue59, align 8, !dbg !3070
  %conv60 = fpext float %51 to double, !dbg !3072
  %52 = load double*, double** %maxima.addr, align 8, !dbg !3073
  %53 = load double, double* %52, align 8, !dbg !3074
  %cmp61 = fcmp ogt double %conv60, %53, !dbg !3075
  br i1 %cmp61, label %if.then63, label %if.end66, !dbg !3076

if.then63:                                        ; preds = %if.end58
  %blue64 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 7, !dbg !3077
  %54 = load float, float* %blue64, align 8, !dbg !3077
  %conv65 = fpext float %54 to double, !dbg !3078
  %55 = load double*, double** %maxima.addr, align 8, !dbg !3079
  store double %conv65, double* %55, align 8, !dbg !3080
  br label %if.end66, !dbg !3081

if.end66:                                         ; preds = %if.then63, %if.end58
  br label %if.end67, !dbg !3082

if.end67:                                         ; preds = %if.end66, %if.end47
  %56 = load i32, i32* %channel.addr, align 4, !dbg !3083
  %and68 = and i32 %56, 8, !dbg !3085
  %cmp69 = icmp ne i32 %and68, 0, !dbg !3086
  br i1 %cmp69, label %land.lhs.true, label %if.end89, !dbg !3087

land.lhs.true:                                    ; preds = %if.end67
  %57 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3088
  %matte = getelementptr inbounds %struct._Image, %struct._Image* %57, i32 0, i32 6, !dbg !3089
  %58 = load i32, i32* %matte, align 8, !dbg !3089
  %cmp71 = icmp ne i32 %58, 0, !dbg !3090
  br i1 %cmp71, label %if.then73, label %if.end89, !dbg !3091

if.then73:                                        ; preds = %land.lhs.true
  %opacity = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 8, !dbg !3092
  %59 = load float, float* %opacity, align 4, !dbg !3092
  %conv74 = fpext float %59 to double, !dbg !3095
  %60 = load double*, double** %minima.addr, align 8, !dbg !3096
  %61 = load double, double* %60, align 8, !dbg !3097
  %cmp75 = fcmp olt double %conv74, %61, !dbg !3098
  br i1 %cmp75, label %if.then77, label %if.end80, !dbg !3099

if.then77:                                        ; preds = %if.then73
  %opacity78 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 8, !dbg !3100
  %62 = load float, float* %opacity78, align 4, !dbg !3100
  %conv79 = fpext float %62 to double, !dbg !3101
  %63 = load double*, double** %minima.addr, align 8, !dbg !3102
  store double %conv79, double* %63, align 8, !dbg !3103
  br label %if.end80, !dbg !3104

if.end80:                                         ; preds = %if.then77, %if.then73
  %opacity81 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 8, !dbg !3105
  %64 = load float, float* %opacity81, align 4, !dbg !3105
  %conv82 = fpext float %64 to double, !dbg !3107
  %65 = load double*, double** %maxima.addr, align 8, !dbg !3108
  %66 = load double, double* %65, align 8, !dbg !3109
  %cmp83 = fcmp ogt double %conv82, %66, !dbg !3110
  br i1 %cmp83, label %if.then85, label %if.end88, !dbg !3111

if.then85:                                        ; preds = %if.end80
  %opacity86 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 8, !dbg !3112
  %67 = load float, float* %opacity86, align 4, !dbg !3112
  %conv87 = fpext float %67 to double, !dbg !3113
  %68 = load double*, double** %maxima.addr, align 8, !dbg !3114
  store double %conv87, double* %68, align 8, !dbg !3115
  br label %if.end88, !dbg !3116

if.end88:                                         ; preds = %if.then85, %if.end80
  br label %if.end89, !dbg !3117

if.end89:                                         ; preds = %if.end88, %land.lhs.true, %if.end67
  %69 = load i32, i32* %channel.addr, align 4, !dbg !3118
  %and90 = and i32 %69, 32, !dbg !3120
  %cmp91 = icmp ne i32 %and90, 0, !dbg !3121
  br i1 %cmp91, label %land.lhs.true93, label %if.end112, !dbg !3122

land.lhs.true93:                                  ; preds = %if.end89
  %70 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3123
  %colorspace = getelementptr inbounds %struct._Image, %struct._Image* %70, i32 0, i32 1, !dbg !3124
  %71 = load i32, i32* %colorspace, align 4, !dbg !3124
  %cmp94 = icmp eq i32 %71, 12, !dbg !3125
  br i1 %cmp94, label %if.then96, label %if.end112, !dbg !3126

if.then96:                                        ; preds = %land.lhs.true93
  %index = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 9, !dbg !3127
  %72 = load float, float* %index, align 8, !dbg !3127
  %conv97 = fpext float %72 to double, !dbg !3130
  %73 = load double*, double** %minima.addr, align 8, !dbg !3131
  %74 = load double, double* %73, align 8, !dbg !3132
  %cmp98 = fcmp olt double %conv97, %74, !dbg !3133
  br i1 %cmp98, label %if.then100, label %if.end103, !dbg !3134

if.then100:                                       ; preds = %if.then96
  %index101 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 9, !dbg !3135
  %75 = load float, float* %index101, align 8, !dbg !3135
  %conv102 = fpext float %75 to double, !dbg !3136
  %76 = load double*, double** %minima.addr, align 8, !dbg !3137
  store double %conv102, double* %76, align 8, !dbg !3138
  br label %if.end103, !dbg !3139

if.end103:                                        ; preds = %if.then100, %if.then96
  %index104 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 9, !dbg !3140
  %77 = load float, float* %index104, align 8, !dbg !3140
  %conv105 = fpext float %77 to double, !dbg !3142
  %78 = load double*, double** %maxima.addr, align 8, !dbg !3143
  %79 = load double, double* %78, align 8, !dbg !3144
  %cmp106 = fcmp ogt double %conv105, %79, !dbg !3145
  br i1 %cmp106, label %if.then108, label %if.end111, !dbg !3146

if.then108:                                       ; preds = %if.end103
  %index109 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 9, !dbg !3147
  %80 = load float, float* %index109, align 8, !dbg !3147
  %conv110 = fpext float %80 to double, !dbg !3148
  %81 = load double*, double** %maxima.addr, align 8, !dbg !3149
  store double %conv110, double* %81, align 8, !dbg !3150
  br label %if.end111, !dbg !3151

if.end111:                                        ; preds = %if.then108, %if.end103
  br label %if.end112, !dbg !3152

if.end112:                                        ; preds = %if.end111, %land.lhs.true93, %if.end89
  %82 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3153
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %82, i32 1, !dbg !3153
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %p, align 8, !dbg !3153
  br label %for.inc, !dbg !3154

for.inc:                                          ; preds = %if.end112
  %83 = load i64, i64* %x, align 8, !dbg !3155
  %inc = add nsw i64 %83, 1, !dbg !3155
  store i64 %inc, i64* %x, align 8, !dbg !3155
  br label %for.cond7, !dbg !3156, !llvm.loop !3157

for.end:                                          ; preds = %for.cond7
  br label %for.inc113, !dbg !3159

for.inc113:                                       ; preds = %for.end
  %84 = load i64, i64* %y, align 8, !dbg !3160
  %inc114 = add nsw i64 %84, 1, !dbg !3160
  store i64 %inc114, i64* %y, align 8, !dbg !3160
  br label %for.cond, !dbg !3161, !llvm.loop !3162

for.end115:                                       ; preds = %if.then4, %for.cond
  %85 = load i64, i64* %y, align 8, !dbg !3164
  %86 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3165
  %rows116 = getelementptr inbounds %struct._Image, %struct._Image* %86, i32 0, i32 8, !dbg !3166
  %87 = load i64, i64* %rows116, align 8, !dbg !3166
  %cmp117 = icmp eq i64 %85, %87, !dbg !3167
  %88 = zext i1 %cmp117 to i64, !dbg !3164
  %cond = select i1 %cmp117, i32 1, i32 0, !dbg !3164
  ret i32 %cond, !dbg !3168
}

; Function Attrs: nounwind readnone speculatable willreturn
declare double @llvm.ceil.f64(double) #1

; Function Attrs: nounwind readnone speculatable willreturn
declare double @llvm.floor.f64(double) #1

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @GetImageKurtosis(%struct._Image* %image, double* %kurtosis, double* %skewness, %struct._ExceptionInfo* %exception) #0 !dbg !3169 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %kurtosis.addr = alloca double*, align 8
  %skewness.addr = alloca double*, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %status = alloca i32, align 4
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !3172, metadata !DIExpression()), !dbg !3173
  store double* %kurtosis, double** %kurtosis.addr, align 8
  call void @llvm.dbg.declare(metadata double** %kurtosis.addr, metadata !3174, metadata !DIExpression()), !dbg !3175
  store double* %skewness, double** %skewness.addr, align 8
  call void @llvm.dbg.declare(metadata double** %skewness.addr, metadata !3176, metadata !DIExpression()), !dbg !3177
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !3178, metadata !DIExpression()), !dbg !3179
  call void @llvm.dbg.declare(metadata i32* %status, metadata !3180, metadata !DIExpression()), !dbg !3181
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3182
  %1 = load double*, double** %kurtosis.addr, align 8, !dbg !3183
  %2 = load double*, double** %skewness.addr, align 8, !dbg !3184
  %3 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3185
  %call = call i32 @GetImageChannelKurtosis(%struct._Image* %0, i32 47, double* %1, double* %2, %struct._ExceptionInfo* %3), !dbg !3186
  store i32 %call, i32* %status, align 4, !dbg !3187
  %4 = load i32, i32* %status, align 4, !dbg !3188
  ret i32 %4, !dbg !3189
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @GetImageChannelKurtosis(%struct._Image* %image, i32 %channel, double* %kurtosis, double* %skewness, %struct._ExceptionInfo* %exception) #0 !dbg !3190 {
entry:
  %retval = alloca i32, align 4
  %image.addr = alloca %struct._Image*, align 8
  %channel.addr = alloca i32, align 4
  %kurtosis.addr = alloca double*, align 8
  %skewness.addr = alloca double*, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %area = alloca double, align 8
  %mean = alloca double, align 8
  %standard_deviation = alloca double, align 8
  %sum_squares = alloca double, align 8
  %sum_cubes = alloca double, align 8
  %sum_fourth_power = alloca double, align 8
  %y = alloca i64, align 8
  %indexes = alloca i16*, align 8
  %p = alloca %struct._PixelPacket*, align 8
  %x = alloca i64, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !3191, metadata !DIExpression()), !dbg !3192
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !3193, metadata !DIExpression()), !dbg !3194
  store double* %kurtosis, double** %kurtosis.addr, align 8
  call void @llvm.dbg.declare(metadata double** %kurtosis.addr, metadata !3195, metadata !DIExpression()), !dbg !3196
  store double* %skewness, double** %skewness.addr, align 8
  call void @llvm.dbg.declare(metadata double** %skewness.addr, metadata !3197, metadata !DIExpression()), !dbg !3198
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !3199, metadata !DIExpression()), !dbg !3200
  call void @llvm.dbg.declare(metadata double* %area, metadata !3201, metadata !DIExpression()), !dbg !3202
  call void @llvm.dbg.declare(metadata double* %mean, metadata !3203, metadata !DIExpression()), !dbg !3204
  call void @llvm.dbg.declare(metadata double* %standard_deviation, metadata !3205, metadata !DIExpression()), !dbg !3206
  call void @llvm.dbg.declare(metadata double* %sum_squares, metadata !3207, metadata !DIExpression()), !dbg !3208
  call void @llvm.dbg.declare(metadata double* %sum_cubes, metadata !3209, metadata !DIExpression()), !dbg !3210
  call void @llvm.dbg.declare(metadata double* %sum_fourth_power, metadata !3211, metadata !DIExpression()), !dbg !3212
  call void @llvm.dbg.declare(metadata i64* %y, metadata !3213, metadata !DIExpression()), !dbg !3214
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3215
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !3217
  %1 = load i32, i32* %debug, align 8, !dbg !3217
  %cmp = icmp ne i32 %1, 0, !dbg !3218
  br i1 %cmp, label %if.then, label %if.end, !dbg !3219

if.then:                                          ; preds = %entry
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3220
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %2, i32 0, i32 53, !dbg !3221
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !3220
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1222, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !3222
  br label %if.end, !dbg !3223

if.end:                                           ; preds = %if.then, %entry
  %3 = load double*, double** %kurtosis.addr, align 8, !dbg !3224
  store double 0.000000e+00, double* %3, align 8, !dbg !3225
  %4 = load double*, double** %skewness.addr, align 8, !dbg !3226
  store double 0.000000e+00, double* %4, align 8, !dbg !3227
  store double 0.000000e+00, double* %area, align 8, !dbg !3228
  store double 0.000000e+00, double* %mean, align 8, !dbg !3229
  store double 0.000000e+00, double* %standard_deviation, align 8, !dbg !3230
  store double 0.000000e+00, double* %sum_squares, align 8, !dbg !3231
  store double 0.000000e+00, double* %sum_cubes, align 8, !dbg !3232
  store double 0.000000e+00, double* %sum_fourth_power, align 8, !dbg !3233
  store i64 0, i64* %y, align 8, !dbg !3234
  br label %for.cond, !dbg !3236

for.cond:                                         ; preds = %for.inc287, %if.end
  %5 = load i64, i64* %y, align 8, !dbg !3237
  %6 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3239
  %rows = getelementptr inbounds %struct._Image, %struct._Image* %6, i32 0, i32 8, !dbg !3240
  %7 = load i64, i64* %rows, align 8, !dbg !3240
  %cmp1 = icmp slt i64 %5, %7, !dbg !3241
  br i1 %cmp1, label %for.body, label %for.end289, !dbg !3242

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i16** %indexes, metadata !3243, metadata !DIExpression()), !dbg !3245
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %p, metadata !3246, metadata !DIExpression()), !dbg !3247
  call void @llvm.dbg.declare(metadata i64* %x, metadata !3248, metadata !DIExpression()), !dbg !3249
  %8 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3250
  %9 = load i64, i64* %y, align 8, !dbg !3251
  %10 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3252
  %columns = getelementptr inbounds %struct._Image, %struct._Image* %10, i32 0, i32 7, !dbg !3253
  %11 = load i64, i64* %columns, align 8, !dbg !3253
  %12 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3254
  %call2 = call %struct._PixelPacket* @GetVirtualPixels(%struct._Image* %8, i64 0, i64 %9, i64 %11, i64 1, %struct._ExceptionInfo* %12), !dbg !3255
  store %struct._PixelPacket* %call2, %struct._PixelPacket** %p, align 8, !dbg !3256
  %13 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3257
  %cmp3 = icmp eq %struct._PixelPacket* %13, null, !dbg !3259
  br i1 %cmp3, label %if.then4, label %if.end5, !dbg !3260

if.then4:                                         ; preds = %for.body
  br label %for.end289, !dbg !3261

if.end5:                                          ; preds = %for.body
  %14 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3262
  %call6 = call i16* @GetVirtualIndexQueue(%struct._Image* %14), !dbg !3263
  store i16* %call6, i16** %indexes, align 8, !dbg !3264
  store i64 0, i64* %x, align 8, !dbg !3265
  br label %for.cond7, !dbg !3267

for.cond7:                                        ; preds = %for.inc, %if.end5
  %15 = load i64, i64* %x, align 8, !dbg !3268
  %16 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3270
  %columns8 = getelementptr inbounds %struct._Image, %struct._Image* %16, i32 0, i32 7, !dbg !3271
  %17 = load i64, i64* %columns8, align 8, !dbg !3271
  %cmp9 = icmp slt i64 %15, %17, !dbg !3272
  br i1 %cmp9, label %for.body10, label %for.end, !dbg !3273

for.body10:                                       ; preds = %for.cond7
  %18 = load i32, i32* %channel.addr, align 4, !dbg !3274
  %and = and i32 %18, 1, !dbg !3277
  %cmp11 = icmp ne i32 %and, 0, !dbg !3278
  br i1 %cmp11, label %if.then12, label %if.end46, !dbg !3279

if.then12:                                        ; preds = %for.body10
  %19 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3280
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %19, i32 0, i32 2, !dbg !3280
  %20 = load i16, i16* %red, align 2, !dbg !3280
  %conv = zext i16 %20 to i32, !dbg !3280
  %conv13 = sitofp i32 %conv to double, !dbg !3280
  %21 = load double, double* %mean, align 8, !dbg !3282
  %add = fadd double %21, %conv13, !dbg !3282
  store double %add, double* %mean, align 8, !dbg !3282
  %22 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3283
  %red14 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %22, i32 0, i32 2, !dbg !3283
  %23 = load i16, i16* %red14, align 2, !dbg !3283
  %conv15 = uitofp i16 %23 to double, !dbg !3284
  %24 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3285
  %red16 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %24, i32 0, i32 2, !dbg !3285
  %25 = load i16, i16* %red16, align 2, !dbg !3285
  %conv17 = zext i16 %25 to i32, !dbg !3285
  %conv18 = sitofp i32 %conv17 to double, !dbg !3285
  %mul = fmul double %conv15, %conv18, !dbg !3286
  %26 = load double, double* %sum_squares, align 8, !dbg !3287
  %add19 = fadd double %26, %mul, !dbg !3287
  store double %add19, double* %sum_squares, align 8, !dbg !3287
  %27 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3288
  %red20 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %27, i32 0, i32 2, !dbg !3288
  %28 = load i16, i16* %red20, align 2, !dbg !3288
  %conv21 = uitofp i16 %28 to double, !dbg !3289
  %29 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3290
  %red22 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %29, i32 0, i32 2, !dbg !3290
  %30 = load i16, i16* %red22, align 2, !dbg !3290
  %conv23 = zext i16 %30 to i32, !dbg !3290
  %conv24 = sitofp i32 %conv23 to double, !dbg !3290
  %mul25 = fmul double %conv21, %conv24, !dbg !3291
  %31 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3292
  %red26 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %31, i32 0, i32 2, !dbg !3292
  %32 = load i16, i16* %red26, align 2, !dbg !3292
  %conv27 = zext i16 %32 to i32, !dbg !3292
  %conv28 = sitofp i32 %conv27 to double, !dbg !3292
  %mul29 = fmul double %mul25, %conv28, !dbg !3293
  %33 = load double, double* %sum_cubes, align 8, !dbg !3294
  %add30 = fadd double %33, %mul29, !dbg !3294
  store double %add30, double* %sum_cubes, align 8, !dbg !3294
  %34 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3295
  %red31 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %34, i32 0, i32 2, !dbg !3295
  %35 = load i16, i16* %red31, align 2, !dbg !3295
  %conv32 = uitofp i16 %35 to double, !dbg !3296
  %36 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3297
  %red33 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %36, i32 0, i32 2, !dbg !3297
  %37 = load i16, i16* %red33, align 2, !dbg !3297
  %conv34 = zext i16 %37 to i32, !dbg !3297
  %conv35 = sitofp i32 %conv34 to double, !dbg !3297
  %mul36 = fmul double %conv32, %conv35, !dbg !3298
  %38 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3299
  %red37 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %38, i32 0, i32 2, !dbg !3299
  %39 = load i16, i16* %red37, align 2, !dbg !3299
  %conv38 = zext i16 %39 to i32, !dbg !3299
  %conv39 = sitofp i32 %conv38 to double, !dbg !3299
  %mul40 = fmul double %mul36, %conv39, !dbg !3300
  %40 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3301
  %red41 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %40, i32 0, i32 2, !dbg !3301
  %41 = load i16, i16* %red41, align 2, !dbg !3301
  %conv42 = zext i16 %41 to i32, !dbg !3301
  %conv43 = sitofp i32 %conv42 to double, !dbg !3301
  %mul44 = fmul double %mul40, %conv43, !dbg !3302
  %42 = load double, double* %sum_fourth_power, align 8, !dbg !3303
  %add45 = fadd double %42, %mul44, !dbg !3303
  store double %add45, double* %sum_fourth_power, align 8, !dbg !3303
  %43 = load double, double* %area, align 8, !dbg !3304
  %inc = fadd double %43, 1.000000e+00, !dbg !3304
  store double %inc, double* %area, align 8, !dbg !3304
  br label %if.end46, !dbg !3305

if.end46:                                         ; preds = %if.then12, %for.body10
  %44 = load i32, i32* %channel.addr, align 4, !dbg !3306
  %and47 = and i32 %44, 2, !dbg !3308
  %cmp48 = icmp ne i32 %and47, 0, !dbg !3309
  br i1 %cmp48, label %if.then50, label %if.end88, !dbg !3310

if.then50:                                        ; preds = %if.end46
  %45 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3311
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %45, i32 0, i32 1, !dbg !3311
  %46 = load i16, i16* %green, align 2, !dbg !3311
  %conv51 = zext i16 %46 to i32, !dbg !3311
  %conv52 = sitofp i32 %conv51 to double, !dbg !3311
  %47 = load double, double* %mean, align 8, !dbg !3313
  %add53 = fadd double %47, %conv52, !dbg !3313
  store double %add53, double* %mean, align 8, !dbg !3313
  %48 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3314
  %green54 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %48, i32 0, i32 1, !dbg !3314
  %49 = load i16, i16* %green54, align 2, !dbg !3314
  %conv55 = uitofp i16 %49 to double, !dbg !3315
  %50 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3316
  %green56 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %50, i32 0, i32 1, !dbg !3316
  %51 = load i16, i16* %green56, align 2, !dbg !3316
  %conv57 = zext i16 %51 to i32, !dbg !3316
  %conv58 = sitofp i32 %conv57 to double, !dbg !3316
  %mul59 = fmul double %conv55, %conv58, !dbg !3317
  %52 = load double, double* %sum_squares, align 8, !dbg !3318
  %add60 = fadd double %52, %mul59, !dbg !3318
  store double %add60, double* %sum_squares, align 8, !dbg !3318
  %53 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3319
  %green61 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %53, i32 0, i32 1, !dbg !3319
  %54 = load i16, i16* %green61, align 2, !dbg !3319
  %conv62 = uitofp i16 %54 to double, !dbg !3320
  %55 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3321
  %green63 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %55, i32 0, i32 1, !dbg !3321
  %56 = load i16, i16* %green63, align 2, !dbg !3321
  %conv64 = zext i16 %56 to i32, !dbg !3321
  %conv65 = sitofp i32 %conv64 to double, !dbg !3321
  %mul66 = fmul double %conv62, %conv65, !dbg !3322
  %57 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3323
  %green67 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %57, i32 0, i32 1, !dbg !3323
  %58 = load i16, i16* %green67, align 2, !dbg !3323
  %conv68 = zext i16 %58 to i32, !dbg !3323
  %conv69 = sitofp i32 %conv68 to double, !dbg !3323
  %mul70 = fmul double %mul66, %conv69, !dbg !3324
  %59 = load double, double* %sum_cubes, align 8, !dbg !3325
  %add71 = fadd double %59, %mul70, !dbg !3325
  store double %add71, double* %sum_cubes, align 8, !dbg !3325
  %60 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3326
  %green72 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %60, i32 0, i32 1, !dbg !3326
  %61 = load i16, i16* %green72, align 2, !dbg !3326
  %conv73 = uitofp i16 %61 to double, !dbg !3327
  %62 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3328
  %green74 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %62, i32 0, i32 1, !dbg !3328
  %63 = load i16, i16* %green74, align 2, !dbg !3328
  %conv75 = zext i16 %63 to i32, !dbg !3328
  %conv76 = sitofp i32 %conv75 to double, !dbg !3328
  %mul77 = fmul double %conv73, %conv76, !dbg !3329
  %64 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3330
  %green78 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %64, i32 0, i32 1, !dbg !3330
  %65 = load i16, i16* %green78, align 2, !dbg !3330
  %conv79 = zext i16 %65 to i32, !dbg !3330
  %conv80 = sitofp i32 %conv79 to double, !dbg !3330
  %mul81 = fmul double %mul77, %conv80, !dbg !3331
  %66 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3332
  %green82 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %66, i32 0, i32 1, !dbg !3332
  %67 = load i16, i16* %green82, align 2, !dbg !3332
  %conv83 = zext i16 %67 to i32, !dbg !3332
  %conv84 = sitofp i32 %conv83 to double, !dbg !3332
  %mul85 = fmul double %mul81, %conv84, !dbg !3333
  %68 = load double, double* %sum_fourth_power, align 8, !dbg !3334
  %add86 = fadd double %68, %mul85, !dbg !3334
  store double %add86, double* %sum_fourth_power, align 8, !dbg !3334
  %69 = load double, double* %area, align 8, !dbg !3335
  %inc87 = fadd double %69, 1.000000e+00, !dbg !3335
  store double %inc87, double* %area, align 8, !dbg !3335
  br label %if.end88, !dbg !3336

if.end88:                                         ; preds = %if.then50, %if.end46
  %70 = load i32, i32* %channel.addr, align 4, !dbg !3337
  %and89 = and i32 %70, 4, !dbg !3339
  %cmp90 = icmp ne i32 %and89, 0, !dbg !3340
  br i1 %cmp90, label %if.then92, label %if.end130, !dbg !3341

if.then92:                                        ; preds = %if.end88
  %71 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3342
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %71, i32 0, i32 0, !dbg !3342
  %72 = load i16, i16* %blue, align 2, !dbg !3342
  %conv93 = zext i16 %72 to i32, !dbg !3342
  %conv94 = sitofp i32 %conv93 to double, !dbg !3342
  %73 = load double, double* %mean, align 8, !dbg !3344
  %add95 = fadd double %73, %conv94, !dbg !3344
  store double %add95, double* %mean, align 8, !dbg !3344
  %74 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3345
  %blue96 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %74, i32 0, i32 0, !dbg !3345
  %75 = load i16, i16* %blue96, align 2, !dbg !3345
  %conv97 = uitofp i16 %75 to double, !dbg !3346
  %76 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3347
  %blue98 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %76, i32 0, i32 0, !dbg !3347
  %77 = load i16, i16* %blue98, align 2, !dbg !3347
  %conv99 = zext i16 %77 to i32, !dbg !3347
  %conv100 = sitofp i32 %conv99 to double, !dbg !3347
  %mul101 = fmul double %conv97, %conv100, !dbg !3348
  %78 = load double, double* %sum_squares, align 8, !dbg !3349
  %add102 = fadd double %78, %mul101, !dbg !3349
  store double %add102, double* %sum_squares, align 8, !dbg !3349
  %79 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3350
  %blue103 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %79, i32 0, i32 0, !dbg !3350
  %80 = load i16, i16* %blue103, align 2, !dbg !3350
  %conv104 = uitofp i16 %80 to double, !dbg !3351
  %81 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3352
  %blue105 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %81, i32 0, i32 0, !dbg !3352
  %82 = load i16, i16* %blue105, align 2, !dbg !3352
  %conv106 = zext i16 %82 to i32, !dbg !3352
  %conv107 = sitofp i32 %conv106 to double, !dbg !3352
  %mul108 = fmul double %conv104, %conv107, !dbg !3353
  %83 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3354
  %blue109 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %83, i32 0, i32 0, !dbg !3354
  %84 = load i16, i16* %blue109, align 2, !dbg !3354
  %conv110 = zext i16 %84 to i32, !dbg !3354
  %conv111 = sitofp i32 %conv110 to double, !dbg !3354
  %mul112 = fmul double %mul108, %conv111, !dbg !3355
  %85 = load double, double* %sum_cubes, align 8, !dbg !3356
  %add113 = fadd double %85, %mul112, !dbg !3356
  store double %add113, double* %sum_cubes, align 8, !dbg !3356
  %86 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3357
  %blue114 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %86, i32 0, i32 0, !dbg !3357
  %87 = load i16, i16* %blue114, align 2, !dbg !3357
  %conv115 = uitofp i16 %87 to double, !dbg !3358
  %88 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3359
  %blue116 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %88, i32 0, i32 0, !dbg !3359
  %89 = load i16, i16* %blue116, align 2, !dbg !3359
  %conv117 = zext i16 %89 to i32, !dbg !3359
  %conv118 = sitofp i32 %conv117 to double, !dbg !3359
  %mul119 = fmul double %conv115, %conv118, !dbg !3360
  %90 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3361
  %blue120 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %90, i32 0, i32 0, !dbg !3361
  %91 = load i16, i16* %blue120, align 2, !dbg !3361
  %conv121 = zext i16 %91 to i32, !dbg !3361
  %conv122 = sitofp i32 %conv121 to double, !dbg !3361
  %mul123 = fmul double %mul119, %conv122, !dbg !3362
  %92 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3363
  %blue124 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %92, i32 0, i32 0, !dbg !3363
  %93 = load i16, i16* %blue124, align 2, !dbg !3363
  %conv125 = zext i16 %93 to i32, !dbg !3363
  %conv126 = sitofp i32 %conv125 to double, !dbg !3363
  %mul127 = fmul double %mul123, %conv126, !dbg !3364
  %94 = load double, double* %sum_fourth_power, align 8, !dbg !3365
  %add128 = fadd double %94, %mul127, !dbg !3365
  store double %add128, double* %sum_fourth_power, align 8, !dbg !3365
  %95 = load double, double* %area, align 8, !dbg !3366
  %inc129 = fadd double %95, 1.000000e+00, !dbg !3366
  store double %inc129, double* %area, align 8, !dbg !3366
  br label %if.end130, !dbg !3367

if.end130:                                        ; preds = %if.then92, %if.end88
  %96 = load i32, i32* %channel.addr, align 4, !dbg !3368
  %and131 = and i32 %96, 8, !dbg !3370
  %cmp132 = icmp ne i32 %and131, 0, !dbg !3371
  br i1 %cmp132, label %if.then134, label %if.end172, !dbg !3372

if.then134:                                       ; preds = %if.end130
  %97 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3373
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %97, i32 0, i32 3, !dbg !3373
  %98 = load i16, i16* %opacity, align 2, !dbg !3373
  %conv135 = zext i16 %98 to i32, !dbg !3373
  %conv136 = sitofp i32 %conv135 to double, !dbg !3373
  %99 = load double, double* %mean, align 8, !dbg !3375
  %add137 = fadd double %99, %conv136, !dbg !3375
  store double %add137, double* %mean, align 8, !dbg !3375
  %100 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3376
  %opacity138 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %100, i32 0, i32 3, !dbg !3376
  %101 = load i16, i16* %opacity138, align 2, !dbg !3376
  %conv139 = uitofp i16 %101 to double, !dbg !3377
  %102 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3378
  %opacity140 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %102, i32 0, i32 3, !dbg !3378
  %103 = load i16, i16* %opacity140, align 2, !dbg !3378
  %conv141 = zext i16 %103 to i32, !dbg !3378
  %conv142 = sitofp i32 %conv141 to double, !dbg !3378
  %mul143 = fmul double %conv139, %conv142, !dbg !3379
  %104 = load double, double* %sum_squares, align 8, !dbg !3380
  %add144 = fadd double %104, %mul143, !dbg !3380
  store double %add144, double* %sum_squares, align 8, !dbg !3380
  %105 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3381
  %opacity145 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %105, i32 0, i32 3, !dbg !3381
  %106 = load i16, i16* %opacity145, align 2, !dbg !3381
  %conv146 = uitofp i16 %106 to double, !dbg !3382
  %107 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3383
  %opacity147 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %107, i32 0, i32 3, !dbg !3383
  %108 = load i16, i16* %opacity147, align 2, !dbg !3383
  %conv148 = zext i16 %108 to i32, !dbg !3383
  %conv149 = sitofp i32 %conv148 to double, !dbg !3383
  %mul150 = fmul double %conv146, %conv149, !dbg !3384
  %109 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3385
  %opacity151 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %109, i32 0, i32 3, !dbg !3385
  %110 = load i16, i16* %opacity151, align 2, !dbg !3385
  %conv152 = zext i16 %110 to i32, !dbg !3385
  %conv153 = sitofp i32 %conv152 to double, !dbg !3385
  %mul154 = fmul double %mul150, %conv153, !dbg !3386
  %111 = load double, double* %sum_cubes, align 8, !dbg !3387
  %add155 = fadd double %111, %mul154, !dbg !3387
  store double %add155, double* %sum_cubes, align 8, !dbg !3387
  %112 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3388
  %opacity156 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %112, i32 0, i32 3, !dbg !3388
  %113 = load i16, i16* %opacity156, align 2, !dbg !3388
  %conv157 = uitofp i16 %113 to double, !dbg !3389
  %114 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3390
  %opacity158 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %114, i32 0, i32 3, !dbg !3390
  %115 = load i16, i16* %opacity158, align 2, !dbg !3390
  %conv159 = zext i16 %115 to i32, !dbg !3390
  %conv160 = sitofp i32 %conv159 to double, !dbg !3390
  %mul161 = fmul double %conv157, %conv160, !dbg !3391
  %116 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3392
  %opacity162 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %116, i32 0, i32 3, !dbg !3392
  %117 = load i16, i16* %opacity162, align 2, !dbg !3392
  %conv163 = zext i16 %117 to i32, !dbg !3392
  %conv164 = sitofp i32 %conv163 to double, !dbg !3392
  %mul165 = fmul double %mul161, %conv164, !dbg !3393
  %118 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3394
  %opacity166 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %118, i32 0, i32 3, !dbg !3394
  %119 = load i16, i16* %opacity166, align 2, !dbg !3394
  %conv167 = zext i16 %119 to i32, !dbg !3394
  %conv168 = sitofp i32 %conv167 to double, !dbg !3394
  %mul169 = fmul double %mul165, %conv168, !dbg !3395
  %120 = load double, double* %sum_fourth_power, align 8, !dbg !3396
  %add170 = fadd double %120, %mul169, !dbg !3396
  store double %add170, double* %sum_fourth_power, align 8, !dbg !3396
  %121 = load double, double* %area, align 8, !dbg !3397
  %inc171 = fadd double %121, 1.000000e+00, !dbg !3397
  store double %inc171, double* %area, align 8, !dbg !3397
  br label %if.end172, !dbg !3398

if.end172:                                        ; preds = %if.then134, %if.end130
  %122 = load i32, i32* %channel.addr, align 4, !dbg !3399
  %and173 = and i32 %122, 32, !dbg !3401
  %cmp174 = icmp ne i32 %and173, 0, !dbg !3402
  br i1 %cmp174, label %land.lhs.true, label %if.end285, !dbg !3403

land.lhs.true:                                    ; preds = %if.end172
  %123 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3404
  %colorspace = getelementptr inbounds %struct._Image, %struct._Image* %123, i32 0, i32 1, !dbg !3405
  %124 = load i32, i32* %colorspace, align 4, !dbg !3405
  %cmp176 = icmp eq i32 %124, 12, !dbg !3406
  br i1 %cmp176, label %if.then178, label %if.end285, !dbg !3407

if.then178:                                       ; preds = %land.lhs.true
  %125 = load i16*, i16** %indexes, align 8, !dbg !3408
  %126 = load i64, i64* %x, align 8, !dbg !3408
  %add.ptr = getelementptr inbounds i16, i16* %125, i64 %126, !dbg !3408
  %cmp179 = icmp eq i16* %add.ptr, null, !dbg !3408
  br i1 %cmp179, label %cond.true, label %cond.false, !dbg !3408

cond.true:                                        ; preds = %if.then178
  br label %cond.end, !dbg !3408

cond.false:                                       ; preds = %if.then178
  %127 = load i16*, i16** %indexes, align 8, !dbg !3408
  %128 = load i64, i64* %x, align 8, !dbg !3408
  %add.ptr181 = getelementptr inbounds i16, i16* %127, i64 %128, !dbg !3408
  %129 = load i16, i16* %add.ptr181, align 2, !dbg !3408
  %conv182 = zext i16 %129 to i32, !dbg !3408
  br label %cond.end, !dbg !3408

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %conv182, %cond.false ], !dbg !3408
  %conv183 = sitofp i32 %cond to double, !dbg !3408
  %130 = load double, double* %mean, align 8, !dbg !3410
  %add184 = fadd double %130, %conv183, !dbg !3410
  store double %add184, double* %mean, align 8, !dbg !3410
  %131 = load i16*, i16** %indexes, align 8, !dbg !3411
  %132 = load i64, i64* %x, align 8, !dbg !3411
  %add.ptr185 = getelementptr inbounds i16, i16* %131, i64 %132, !dbg !3411
  %cmp186 = icmp eq i16* %add.ptr185, null, !dbg !3411
  br i1 %cmp186, label %cond.true188, label %cond.false189, !dbg !3411

cond.true188:                                     ; preds = %cond.end
  br label %cond.end192, !dbg !3411

cond.false189:                                    ; preds = %cond.end
  %133 = load i16*, i16** %indexes, align 8, !dbg !3411
  %134 = load i64, i64* %x, align 8, !dbg !3411
  %add.ptr190 = getelementptr inbounds i16, i16* %133, i64 %134, !dbg !3411
  %135 = load i16, i16* %add.ptr190, align 2, !dbg !3411
  %conv191 = zext i16 %135 to i32, !dbg !3411
  br label %cond.end192, !dbg !3411

cond.end192:                                      ; preds = %cond.false189, %cond.true188
  %cond193 = phi i32 [ 0, %cond.true188 ], [ %conv191, %cond.false189 ], !dbg !3411
  %conv194 = sitofp i32 %cond193 to double, !dbg !3412
  %136 = load i16*, i16** %indexes, align 8, !dbg !3413
  %137 = load i64, i64* %x, align 8, !dbg !3413
  %add.ptr195 = getelementptr inbounds i16, i16* %136, i64 %137, !dbg !3413
  %cmp196 = icmp eq i16* %add.ptr195, null, !dbg !3413
  br i1 %cmp196, label %cond.true198, label %cond.false199, !dbg !3413

cond.true198:                                     ; preds = %cond.end192
  br label %cond.end202, !dbg !3413

cond.false199:                                    ; preds = %cond.end192
  %138 = load i16*, i16** %indexes, align 8, !dbg !3413
  %139 = load i64, i64* %x, align 8, !dbg !3413
  %add.ptr200 = getelementptr inbounds i16, i16* %138, i64 %139, !dbg !3413
  %140 = load i16, i16* %add.ptr200, align 2, !dbg !3413
  %conv201 = zext i16 %140 to i32, !dbg !3413
  br label %cond.end202, !dbg !3413

cond.end202:                                      ; preds = %cond.false199, %cond.true198
  %cond203 = phi i32 [ 0, %cond.true198 ], [ %conv201, %cond.false199 ], !dbg !3413
  %conv204 = sitofp i32 %cond203 to double, !dbg !3413
  %mul205 = fmul double %conv194, %conv204, !dbg !3414
  %141 = load double, double* %sum_squares, align 8, !dbg !3415
  %add206 = fadd double %141, %mul205, !dbg !3415
  store double %add206, double* %sum_squares, align 8, !dbg !3415
  %142 = load i16*, i16** %indexes, align 8, !dbg !3416
  %143 = load i64, i64* %x, align 8, !dbg !3416
  %add.ptr207 = getelementptr inbounds i16, i16* %142, i64 %143, !dbg !3416
  %cmp208 = icmp eq i16* %add.ptr207, null, !dbg !3416
  br i1 %cmp208, label %cond.true210, label %cond.false211, !dbg !3416

cond.true210:                                     ; preds = %cond.end202
  br label %cond.end214, !dbg !3416

cond.false211:                                    ; preds = %cond.end202
  %144 = load i16*, i16** %indexes, align 8, !dbg !3416
  %145 = load i64, i64* %x, align 8, !dbg !3416
  %add.ptr212 = getelementptr inbounds i16, i16* %144, i64 %145, !dbg !3416
  %146 = load i16, i16* %add.ptr212, align 2, !dbg !3416
  %conv213 = zext i16 %146 to i32, !dbg !3416
  br label %cond.end214, !dbg !3416

cond.end214:                                      ; preds = %cond.false211, %cond.true210
  %cond215 = phi i32 [ 0, %cond.true210 ], [ %conv213, %cond.false211 ], !dbg !3416
  %conv216 = sitofp i32 %cond215 to double, !dbg !3417
  %147 = load i16*, i16** %indexes, align 8, !dbg !3418
  %148 = load i64, i64* %x, align 8, !dbg !3418
  %add.ptr217 = getelementptr inbounds i16, i16* %147, i64 %148, !dbg !3418
  %cmp218 = icmp eq i16* %add.ptr217, null, !dbg !3418
  br i1 %cmp218, label %cond.true220, label %cond.false221, !dbg !3418

cond.true220:                                     ; preds = %cond.end214
  br label %cond.end224, !dbg !3418

cond.false221:                                    ; preds = %cond.end214
  %149 = load i16*, i16** %indexes, align 8, !dbg !3418
  %150 = load i64, i64* %x, align 8, !dbg !3418
  %add.ptr222 = getelementptr inbounds i16, i16* %149, i64 %150, !dbg !3418
  %151 = load i16, i16* %add.ptr222, align 2, !dbg !3418
  %conv223 = zext i16 %151 to i32, !dbg !3418
  br label %cond.end224, !dbg !3418

cond.end224:                                      ; preds = %cond.false221, %cond.true220
  %cond225 = phi i32 [ 0, %cond.true220 ], [ %conv223, %cond.false221 ], !dbg !3418
  %conv226 = sitofp i32 %cond225 to double, !dbg !3418
  %mul227 = fmul double %conv216, %conv226, !dbg !3419
  %152 = load i16*, i16** %indexes, align 8, !dbg !3420
  %153 = load i64, i64* %x, align 8, !dbg !3420
  %add.ptr228 = getelementptr inbounds i16, i16* %152, i64 %153, !dbg !3420
  %cmp229 = icmp eq i16* %add.ptr228, null, !dbg !3420
  br i1 %cmp229, label %cond.true231, label %cond.false232, !dbg !3420

cond.true231:                                     ; preds = %cond.end224
  br label %cond.end235, !dbg !3420

cond.false232:                                    ; preds = %cond.end224
  %154 = load i16*, i16** %indexes, align 8, !dbg !3420
  %155 = load i64, i64* %x, align 8, !dbg !3420
  %add.ptr233 = getelementptr inbounds i16, i16* %154, i64 %155, !dbg !3420
  %156 = load i16, i16* %add.ptr233, align 2, !dbg !3420
  %conv234 = zext i16 %156 to i32, !dbg !3420
  br label %cond.end235, !dbg !3420

cond.end235:                                      ; preds = %cond.false232, %cond.true231
  %cond236 = phi i32 [ 0, %cond.true231 ], [ %conv234, %cond.false232 ], !dbg !3420
  %conv237 = sitofp i32 %cond236 to double, !dbg !3420
  %mul238 = fmul double %mul227, %conv237, !dbg !3421
  %157 = load double, double* %sum_cubes, align 8, !dbg !3422
  %add239 = fadd double %157, %mul238, !dbg !3422
  store double %add239, double* %sum_cubes, align 8, !dbg !3422
  %158 = load i16*, i16** %indexes, align 8, !dbg !3423
  %159 = load i64, i64* %x, align 8, !dbg !3423
  %add.ptr240 = getelementptr inbounds i16, i16* %158, i64 %159, !dbg !3423
  %cmp241 = icmp eq i16* %add.ptr240, null, !dbg !3423
  br i1 %cmp241, label %cond.true243, label %cond.false244, !dbg !3423

cond.true243:                                     ; preds = %cond.end235
  br label %cond.end247, !dbg !3423

cond.false244:                                    ; preds = %cond.end235
  %160 = load i16*, i16** %indexes, align 8, !dbg !3423
  %161 = load i64, i64* %x, align 8, !dbg !3423
  %add.ptr245 = getelementptr inbounds i16, i16* %160, i64 %161, !dbg !3423
  %162 = load i16, i16* %add.ptr245, align 2, !dbg !3423
  %conv246 = zext i16 %162 to i32, !dbg !3423
  br label %cond.end247, !dbg !3423

cond.end247:                                      ; preds = %cond.false244, %cond.true243
  %cond248 = phi i32 [ 0, %cond.true243 ], [ %conv246, %cond.false244 ], !dbg !3423
  %conv249 = sitofp i32 %cond248 to double, !dbg !3424
  %163 = load i16*, i16** %indexes, align 8, !dbg !3425
  %164 = load i64, i64* %x, align 8, !dbg !3425
  %add.ptr250 = getelementptr inbounds i16, i16* %163, i64 %164, !dbg !3425
  %cmp251 = icmp eq i16* %add.ptr250, null, !dbg !3425
  br i1 %cmp251, label %cond.true253, label %cond.false254, !dbg !3425

cond.true253:                                     ; preds = %cond.end247
  br label %cond.end257, !dbg !3425

cond.false254:                                    ; preds = %cond.end247
  %165 = load i16*, i16** %indexes, align 8, !dbg !3425
  %166 = load i64, i64* %x, align 8, !dbg !3425
  %add.ptr255 = getelementptr inbounds i16, i16* %165, i64 %166, !dbg !3425
  %167 = load i16, i16* %add.ptr255, align 2, !dbg !3425
  %conv256 = zext i16 %167 to i32, !dbg !3425
  br label %cond.end257, !dbg !3425

cond.end257:                                      ; preds = %cond.false254, %cond.true253
  %cond258 = phi i32 [ 0, %cond.true253 ], [ %conv256, %cond.false254 ], !dbg !3425
  %conv259 = sitofp i32 %cond258 to double, !dbg !3425
  %mul260 = fmul double %conv249, %conv259, !dbg !3426
  %168 = load i16*, i16** %indexes, align 8, !dbg !3427
  %169 = load i64, i64* %x, align 8, !dbg !3427
  %add.ptr261 = getelementptr inbounds i16, i16* %168, i64 %169, !dbg !3427
  %cmp262 = icmp eq i16* %add.ptr261, null, !dbg !3427
  br i1 %cmp262, label %cond.true264, label %cond.false265, !dbg !3427

cond.true264:                                     ; preds = %cond.end257
  br label %cond.end268, !dbg !3427

cond.false265:                                    ; preds = %cond.end257
  %170 = load i16*, i16** %indexes, align 8, !dbg !3427
  %171 = load i64, i64* %x, align 8, !dbg !3427
  %add.ptr266 = getelementptr inbounds i16, i16* %170, i64 %171, !dbg !3427
  %172 = load i16, i16* %add.ptr266, align 2, !dbg !3427
  %conv267 = zext i16 %172 to i32, !dbg !3427
  br label %cond.end268, !dbg !3427

cond.end268:                                      ; preds = %cond.false265, %cond.true264
  %cond269 = phi i32 [ 0, %cond.true264 ], [ %conv267, %cond.false265 ], !dbg !3427
  %conv270 = sitofp i32 %cond269 to double, !dbg !3427
  %mul271 = fmul double %mul260, %conv270, !dbg !3428
  %173 = load i16*, i16** %indexes, align 8, !dbg !3429
  %174 = load i64, i64* %x, align 8, !dbg !3429
  %add.ptr272 = getelementptr inbounds i16, i16* %173, i64 %174, !dbg !3429
  %cmp273 = icmp eq i16* %add.ptr272, null, !dbg !3429
  br i1 %cmp273, label %cond.true275, label %cond.false276, !dbg !3429

cond.true275:                                     ; preds = %cond.end268
  br label %cond.end279, !dbg !3429

cond.false276:                                    ; preds = %cond.end268
  %175 = load i16*, i16** %indexes, align 8, !dbg !3429
  %176 = load i64, i64* %x, align 8, !dbg !3429
  %add.ptr277 = getelementptr inbounds i16, i16* %175, i64 %176, !dbg !3429
  %177 = load i16, i16* %add.ptr277, align 2, !dbg !3429
  %conv278 = zext i16 %177 to i32, !dbg !3429
  br label %cond.end279, !dbg !3429

cond.end279:                                      ; preds = %cond.false276, %cond.true275
  %cond280 = phi i32 [ 0, %cond.true275 ], [ %conv278, %cond.false276 ], !dbg !3429
  %conv281 = sitofp i32 %cond280 to double, !dbg !3429
  %mul282 = fmul double %mul271, %conv281, !dbg !3430
  %178 = load double, double* %sum_fourth_power, align 8, !dbg !3431
  %add283 = fadd double %178, %mul282, !dbg !3431
  store double %add283, double* %sum_fourth_power, align 8, !dbg !3431
  %179 = load double, double* %area, align 8, !dbg !3432
  %inc284 = fadd double %179, 1.000000e+00, !dbg !3432
  store double %inc284, double* %area, align 8, !dbg !3432
  br label %if.end285, !dbg !3433

if.end285:                                        ; preds = %cond.end279, %land.lhs.true, %if.end172
  %180 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3434
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %180, i32 1, !dbg !3434
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %p, align 8, !dbg !3434
  br label %for.inc, !dbg !3435

for.inc:                                          ; preds = %if.end285
  %181 = load i64, i64* %x, align 8, !dbg !3436
  %inc286 = add nsw i64 %181, 1, !dbg !3436
  store i64 %inc286, i64* %x, align 8, !dbg !3436
  br label %for.cond7, !dbg !3437, !llvm.loop !3438

for.end:                                          ; preds = %for.cond7
  br label %for.inc287, !dbg !3440

for.inc287:                                       ; preds = %for.end
  %182 = load i64, i64* %y, align 8, !dbg !3441
  %inc288 = add nsw i64 %182, 1, !dbg !3441
  store i64 %inc288, i64* %y, align 8, !dbg !3441
  br label %for.cond, !dbg !3442, !llvm.loop !3443

for.end289:                                       ; preds = %if.then4, %for.cond
  %183 = load i64, i64* %y, align 8, !dbg !3445
  %184 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3447
  %rows290 = getelementptr inbounds %struct._Image, %struct._Image* %184, i32 0, i32 8, !dbg !3448
  %185 = load i64, i64* %rows290, align 8, !dbg !3448
  %cmp291 = icmp slt i64 %183, %185, !dbg !3449
  br i1 %cmp291, label %if.then293, label %if.end294, !dbg !3450

if.then293:                                       ; preds = %for.end289
  store i32 0, i32* %retval, align 4, !dbg !3451
  br label %return, !dbg !3451

if.end294:                                        ; preds = %for.end289
  %186 = load double, double* %area, align 8, !dbg !3452
  %cmp295 = fcmp une double %186, 0.000000e+00, !dbg !3454
  br i1 %cmp295, label %if.then297, label %if.end301, !dbg !3455

if.then297:                                       ; preds = %if.end294
  %187 = load double, double* %area, align 8, !dbg !3456
  %188 = load double, double* %mean, align 8, !dbg !3458
  %div = fdiv double %188, %187, !dbg !3458
  store double %div, double* %mean, align 8, !dbg !3458
  %189 = load double, double* %area, align 8, !dbg !3459
  %190 = load double, double* %sum_squares, align 8, !dbg !3460
  %div298 = fdiv double %190, %189, !dbg !3460
  store double %div298, double* %sum_squares, align 8, !dbg !3460
  %191 = load double, double* %area, align 8, !dbg !3461
  %192 = load double, double* %sum_cubes, align 8, !dbg !3462
  %div299 = fdiv double %192, %191, !dbg !3462
  store double %div299, double* %sum_cubes, align 8, !dbg !3462
  %193 = load double, double* %area, align 8, !dbg !3463
  %194 = load double, double* %sum_fourth_power, align 8, !dbg !3464
  %div300 = fdiv double %194, %193, !dbg !3464
  store double %div300, double* %sum_fourth_power, align 8, !dbg !3464
  br label %if.end301, !dbg !3465

if.end301:                                        ; preds = %if.then297, %if.end294
  %195 = load double, double* %sum_squares, align 8, !dbg !3466
  %196 = load double, double* %mean, align 8, !dbg !3467
  %197 = load double, double* %mean, align 8, !dbg !3468
  %mul302 = fmul double %196, %197, !dbg !3469
  %sub = fsub double %195, %mul302, !dbg !3470
  %call303 = call double @sqrt(double %sub) #8, !dbg !3471
  store double %call303, double* %standard_deviation, align 8, !dbg !3472
  %198 = load double, double* %standard_deviation, align 8, !dbg !3473
  %cmp304 = fcmp une double %198, 0.000000e+00, !dbg !3475
  br i1 %cmp304, label %if.then306, label %if.end334, !dbg !3476

if.then306:                                       ; preds = %if.end301
  %199 = load double, double* %sum_fourth_power, align 8, !dbg !3477
  %200 = load double, double* %mean, align 8, !dbg !3479
  %mul307 = fmul double 4.000000e+00, %200, !dbg !3480
  %201 = load double, double* %sum_cubes, align 8, !dbg !3481
  %mul308 = fmul double %mul307, %201, !dbg !3482
  %sub309 = fsub double %199, %mul308, !dbg !3483
  %202 = load double, double* %mean, align 8, !dbg !3484
  %mul310 = fmul double 6.000000e+00, %202, !dbg !3485
  %203 = load double, double* %mean, align 8, !dbg !3486
  %mul311 = fmul double %mul310, %203, !dbg !3487
  %204 = load double, double* %sum_squares, align 8, !dbg !3488
  %mul312 = fmul double %mul311, %204, !dbg !3489
  %add313 = fadd double %sub309, %mul312, !dbg !3490
  %205 = load double, double* %mean, align 8, !dbg !3491
  %mul314 = fmul double 3.000000e+00, %205, !dbg !3492
  %206 = load double, double* %mean, align 8, !dbg !3493
  %mul315 = fmul double %mul314, %206, !dbg !3494
  %207 = load double, double* %mean, align 8, !dbg !3495
  %mul316 = fmul double %mul315, %207, !dbg !3496
  %208 = load double, double* %mean, align 8, !dbg !3497
  %mul317 = fmul double %mul316, %208, !dbg !3498
  %sub318 = fsub double %add313, %mul317, !dbg !3499
  %209 = load double*, double** %kurtosis.addr, align 8, !dbg !3500
  store double %sub318, double* %209, align 8, !dbg !3501
  %210 = load double, double* %standard_deviation, align 8, !dbg !3502
  %211 = load double, double* %standard_deviation, align 8, !dbg !3503
  %mul319 = fmul double %210, %211, !dbg !3504
  %212 = load double, double* %standard_deviation, align 8, !dbg !3505
  %mul320 = fmul double %mul319, %212, !dbg !3506
  %213 = load double, double* %standard_deviation, align 8, !dbg !3507
  %mul321 = fmul double %mul320, %213, !dbg !3508
  %214 = load double*, double** %kurtosis.addr, align 8, !dbg !3509
  %215 = load double, double* %214, align 8, !dbg !3510
  %div322 = fdiv double %215, %mul321, !dbg !3510
  store double %div322, double* %214, align 8, !dbg !3510
  %216 = load double*, double** %kurtosis.addr, align 8, !dbg !3511
  %217 = load double, double* %216, align 8, !dbg !3512
  %sub323 = fsub double %217, 3.000000e+00, !dbg !3512
  store double %sub323, double* %216, align 8, !dbg !3512
  %218 = load double, double* %sum_cubes, align 8, !dbg !3513
  %219 = load double, double* %mean, align 8, !dbg !3514
  %mul324 = fmul double 3.000000e+00, %219, !dbg !3515
  %220 = load double, double* %sum_squares, align 8, !dbg !3516
  %mul325 = fmul double %mul324, %220, !dbg !3517
  %sub326 = fsub double %218, %mul325, !dbg !3518
  %221 = load double, double* %mean, align 8, !dbg !3519
  %mul327 = fmul double 2.000000e+00, %221, !dbg !3520
  %222 = load double, double* %mean, align 8, !dbg !3521
  %mul328 = fmul double %mul327, %222, !dbg !3522
  %223 = load double, double* %mean, align 8, !dbg !3523
  %mul329 = fmul double %mul328, %223, !dbg !3524
  %add330 = fadd double %sub326, %mul329, !dbg !3525
  %224 = load double*, double** %skewness.addr, align 8, !dbg !3526
  store double %add330, double* %224, align 8, !dbg !3527
  %225 = load double, double* %standard_deviation, align 8, !dbg !3528
  %226 = load double, double* %standard_deviation, align 8, !dbg !3529
  %mul331 = fmul double %225, %226, !dbg !3530
  %227 = load double, double* %standard_deviation, align 8, !dbg !3531
  %mul332 = fmul double %mul331, %227, !dbg !3532
  %228 = load double*, double** %skewness.addr, align 8, !dbg !3533
  %229 = load double, double* %228, align 8, !dbg !3534
  %div333 = fdiv double %229, %mul332, !dbg !3534
  store double %div333, double* %228, align 8, !dbg !3534
  br label %if.end334, !dbg !3535

if.end334:                                        ; preds = %if.then306, %if.end301
  %230 = load i64, i64* %y, align 8, !dbg !3536
  %231 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3537
  %rows335 = getelementptr inbounds %struct._Image, %struct._Image* %231, i32 0, i32 8, !dbg !3538
  %232 = load i64, i64* %rows335, align 8, !dbg !3538
  %cmp336 = icmp eq i64 %230, %232, !dbg !3539
  %233 = zext i1 %cmp336 to i64, !dbg !3536
  %cond338 = select i1 %cmp336, i32 1, i32 0, !dbg !3536
  store i32 %cond338, i32* %retval, align 4, !dbg !3540
  br label %return, !dbg !3540

return:                                           ; preds = %if.end334, %if.then293
  %234 = load i32, i32* %retval, align 4, !dbg !3541
  ret i32 %234, !dbg !3541
}

declare dso_local %struct._PixelPacket* @GetVirtualPixels(%struct._Image*, i64, i64, i64, i64, %struct._ExceptionInfo*) #2

declare dso_local i16* @GetVirtualIndexQueue(%struct._Image*) #2

; Function Attrs: nounwind
declare dso_local double @sqrt(double) #4

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @GetImageMean(%struct._Image* %image, double* %mean, double* %standard_deviation, %struct._ExceptionInfo* %exception) #0 !dbg !3542 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %mean.addr = alloca double*, align 8
  %standard_deviation.addr = alloca double*, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %status = alloca i32, align 4
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !3543, metadata !DIExpression()), !dbg !3544
  store double* %mean, double** %mean.addr, align 8
  call void @llvm.dbg.declare(metadata double** %mean.addr, metadata !3545, metadata !DIExpression()), !dbg !3546
  store double* %standard_deviation, double** %standard_deviation.addr, align 8
  call void @llvm.dbg.declare(metadata double** %standard_deviation.addr, metadata !3547, metadata !DIExpression()), !dbg !3548
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !3549, metadata !DIExpression()), !dbg !3550
  call void @llvm.dbg.declare(metadata i32* %status, metadata !3551, metadata !DIExpression()), !dbg !3552
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3553
  %1 = load double*, double** %mean.addr, align 8, !dbg !3554
  %2 = load double*, double** %standard_deviation.addr, align 8, !dbg !3555
  %3 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3556
  %call = call i32 @GetImageChannelMean(%struct._Image* %0, i32 47, double* %1, double* %2, %struct._ExceptionInfo* %3), !dbg !3557
  store i32 %call, i32* %status, align 4, !dbg !3558
  %4 = load i32, i32* %status, align 4, !dbg !3559
  ret i32 %4, !dbg !3560
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @GetImageChannelMean(%struct._Image* %image, i32 %channel, double* %mean, double* %standard_deviation, %struct._ExceptionInfo* %exception) #0 !dbg !3561 {
entry:
  %retval = alloca i32, align 4
  %image.addr = alloca %struct._Image*, align 8
  %channel.addr = alloca i32, align 4
  %mean.addr = alloca double*, align 8
  %standard_deviation.addr = alloca double*, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %channel_statistics = alloca %struct._ChannelStatistics*, align 8
  %channels = alloca i64, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !3562, metadata !DIExpression()), !dbg !3563
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !3564, metadata !DIExpression()), !dbg !3565
  store double* %mean, double** %mean.addr, align 8
  call void @llvm.dbg.declare(metadata double** %mean.addr, metadata !3566, metadata !DIExpression()), !dbg !3567
  store double* %standard_deviation, double** %standard_deviation.addr, align 8
  call void @llvm.dbg.declare(metadata double** %standard_deviation.addr, metadata !3568, metadata !DIExpression()), !dbg !3569
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !3570, metadata !DIExpression()), !dbg !3571
  call void @llvm.dbg.declare(metadata %struct._ChannelStatistics** %channel_statistics, metadata !3572, metadata !DIExpression()), !dbg !3573
  call void @llvm.dbg.declare(metadata i64* %channels, metadata !3574, metadata !DIExpression()), !dbg !3575
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3576
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !3578
  %1 = load i32, i32* %debug, align 8, !dbg !3578
  %cmp = icmp ne i32 %1, 0, !dbg !3579
  br i1 %cmp, label %if.then, label %if.end, !dbg !3580

if.then:                                          ; preds = %entry
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3581
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %2, i32 0, i32 53, !dbg !3582
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !3581
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1383, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !3583
  br label %if.end, !dbg !3584

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3585
  %4 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3586
  %call1 = call %struct._ChannelStatistics* @GetImageChannelStatistics(%struct._Image* %3, %struct._ExceptionInfo* %4), !dbg !3587
  store %struct._ChannelStatistics* %call1, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !3588
  %5 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !3589
  %cmp2 = icmp eq %struct._ChannelStatistics* %5, null, !dbg !3591
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !3592

if.then3:                                         ; preds = %if.end
  store i32 0, i32* %retval, align 4, !dbg !3593
  br label %return, !dbg !3593

if.end4:                                          ; preds = %if.end
  store i64 0, i64* %channels, align 8, !dbg !3594
  %6 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !3595
  %arrayidx = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %6, i64 47, !dbg !3595
  %mean5 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx, i32 0, i32 7, !dbg !3596
  store double 0.000000e+00, double* %mean5, align 8, !dbg !3597
  %7 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !3598
  %arrayidx6 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %7, i64 47, !dbg !3598
  %standard_deviation7 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx6, i32 0, i32 9, !dbg !3599
  store double 0.000000e+00, double* %standard_deviation7, align 8, !dbg !3600
  %8 = load i32, i32* %channel.addr, align 4, !dbg !3601
  %and = and i32 %8, 1, !dbg !3603
  %cmp8 = icmp ne i32 %and, 0, !dbg !3604
  br i1 %cmp8, label %if.then9, label %if.end22, !dbg !3605

if.then9:                                         ; preds = %if.end4
  %9 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !3606
  %arrayidx10 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %9, i64 1, !dbg !3606
  %mean11 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx10, i32 0, i32 7, !dbg !3608
  %10 = load double, double* %mean11, align 8, !dbg !3608
  %11 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !3609
  %arrayidx12 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %11, i64 47, !dbg !3609
  %mean13 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx12, i32 0, i32 7, !dbg !3610
  %12 = load double, double* %mean13, align 8, !dbg !3611
  %add = fadd double %12, %10, !dbg !3611
  store double %add, double* %mean13, align 8, !dbg !3611
  %13 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !3612
  %arrayidx14 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %13, i64 1, !dbg !3612
  %variance = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx14, i32 0, i32 8, !dbg !3613
  %14 = load double, double* %variance, align 8, !dbg !3613
  %15 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !3614
  %arrayidx15 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %15, i64 1, !dbg !3614
  %mean16 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx15, i32 0, i32 7, !dbg !3615
  %16 = load double, double* %mean16, align 8, !dbg !3615
  %17 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !3616
  %arrayidx17 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %17, i64 1, !dbg !3616
  %mean18 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx17, i32 0, i32 7, !dbg !3617
  %18 = load double, double* %mean18, align 8, !dbg !3617
  %mul = fmul double %16, %18, !dbg !3618
  %sub = fsub double %14, %mul, !dbg !3619
  %19 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !3620
  %arrayidx19 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %19, i64 47, !dbg !3620
  %standard_deviation20 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx19, i32 0, i32 9, !dbg !3621
  %20 = load double, double* %standard_deviation20, align 8, !dbg !3622
  %add21 = fadd double %20, %sub, !dbg !3622
  store double %add21, double* %standard_deviation20, align 8, !dbg !3622
  %21 = load i64, i64* %channels, align 8, !dbg !3623
  %inc = add i64 %21, 1, !dbg !3623
  store i64 %inc, i64* %channels, align 8, !dbg !3623
  br label %if.end22, !dbg !3624

if.end22:                                         ; preds = %if.then9, %if.end4
  %22 = load i32, i32* %channel.addr, align 4, !dbg !3625
  %and23 = and i32 %22, 2, !dbg !3627
  %cmp24 = icmp ne i32 %and23, 0, !dbg !3628
  br i1 %cmp24, label %if.then25, label %if.end43, !dbg !3629

if.then25:                                        ; preds = %if.end22
  %23 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !3630
  %arrayidx26 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %23, i64 2, !dbg !3630
  %mean27 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx26, i32 0, i32 7, !dbg !3632
  %24 = load double, double* %mean27, align 8, !dbg !3632
  %25 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !3633
  %arrayidx28 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %25, i64 47, !dbg !3633
  %mean29 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx28, i32 0, i32 7, !dbg !3634
  %26 = load double, double* %mean29, align 8, !dbg !3635
  %add30 = fadd double %26, %24, !dbg !3635
  store double %add30, double* %mean29, align 8, !dbg !3635
  %27 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !3636
  %arrayidx31 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %27, i64 2, !dbg !3636
  %variance32 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx31, i32 0, i32 8, !dbg !3637
  %28 = load double, double* %variance32, align 8, !dbg !3637
  %29 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !3638
  %arrayidx33 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %29, i64 2, !dbg !3638
  %mean34 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx33, i32 0, i32 7, !dbg !3639
  %30 = load double, double* %mean34, align 8, !dbg !3639
  %31 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !3640
  %arrayidx35 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %31, i64 2, !dbg !3640
  %mean36 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx35, i32 0, i32 7, !dbg !3641
  %32 = load double, double* %mean36, align 8, !dbg !3641
  %mul37 = fmul double %30, %32, !dbg !3642
  %sub38 = fsub double %28, %mul37, !dbg !3643
  %33 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !3644
  %arrayidx39 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %33, i64 47, !dbg !3644
  %standard_deviation40 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx39, i32 0, i32 9, !dbg !3645
  %34 = load double, double* %standard_deviation40, align 8, !dbg !3646
  %add41 = fadd double %34, %sub38, !dbg !3646
  store double %add41, double* %standard_deviation40, align 8, !dbg !3646
  %35 = load i64, i64* %channels, align 8, !dbg !3647
  %inc42 = add i64 %35, 1, !dbg !3647
  store i64 %inc42, i64* %channels, align 8, !dbg !3647
  br label %if.end43, !dbg !3648

if.end43:                                         ; preds = %if.then25, %if.end22
  %36 = load i32, i32* %channel.addr, align 4, !dbg !3649
  %and44 = and i32 %36, 4, !dbg !3651
  %cmp45 = icmp ne i32 %and44, 0, !dbg !3652
  br i1 %cmp45, label %if.then46, label %if.end64, !dbg !3653

if.then46:                                        ; preds = %if.end43
  %37 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !3654
  %arrayidx47 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %37, i64 4, !dbg !3654
  %mean48 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx47, i32 0, i32 7, !dbg !3656
  %38 = load double, double* %mean48, align 8, !dbg !3656
  %39 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !3657
  %arrayidx49 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %39, i64 47, !dbg !3657
  %mean50 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx49, i32 0, i32 7, !dbg !3658
  %40 = load double, double* %mean50, align 8, !dbg !3659
  %add51 = fadd double %40, %38, !dbg !3659
  store double %add51, double* %mean50, align 8, !dbg !3659
  %41 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !3660
  %arrayidx52 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %41, i64 4, !dbg !3660
  %variance53 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx52, i32 0, i32 8, !dbg !3661
  %42 = load double, double* %variance53, align 8, !dbg !3661
  %43 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !3662
  %arrayidx54 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %43, i64 4, !dbg !3662
  %mean55 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx54, i32 0, i32 7, !dbg !3663
  %44 = load double, double* %mean55, align 8, !dbg !3663
  %45 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !3664
  %arrayidx56 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %45, i64 4, !dbg !3664
  %mean57 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx56, i32 0, i32 7, !dbg !3665
  %46 = load double, double* %mean57, align 8, !dbg !3665
  %mul58 = fmul double %44, %46, !dbg !3666
  %sub59 = fsub double %42, %mul58, !dbg !3667
  %47 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !3668
  %arrayidx60 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %47, i64 47, !dbg !3668
  %standard_deviation61 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx60, i32 0, i32 9, !dbg !3669
  %48 = load double, double* %standard_deviation61, align 8, !dbg !3670
  %add62 = fadd double %48, %sub59, !dbg !3670
  store double %add62, double* %standard_deviation61, align 8, !dbg !3670
  %49 = load i64, i64* %channels, align 8, !dbg !3671
  %inc63 = add i64 %49, 1, !dbg !3671
  store i64 %inc63, i64* %channels, align 8, !dbg !3671
  br label %if.end64, !dbg !3672

if.end64:                                         ; preds = %if.then46, %if.end43
  %50 = load i32, i32* %channel.addr, align 4, !dbg !3673
  %and65 = and i32 %50, 8, !dbg !3675
  %cmp66 = icmp ne i32 %and65, 0, !dbg !3676
  br i1 %cmp66, label %land.lhs.true, label %if.end86, !dbg !3677

land.lhs.true:                                    ; preds = %if.end64
  %51 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3678
  %matte = getelementptr inbounds %struct._Image, %struct._Image* %51, i32 0, i32 6, !dbg !3679
  %52 = load i32, i32* %matte, align 8, !dbg !3679
  %cmp67 = icmp ne i32 %52, 0, !dbg !3680
  br i1 %cmp67, label %if.then68, label %if.end86, !dbg !3681

if.then68:                                        ; preds = %land.lhs.true
  %53 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !3682
  %arrayidx69 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %53, i64 8, !dbg !3682
  %mean70 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx69, i32 0, i32 7, !dbg !3684
  %54 = load double, double* %mean70, align 8, !dbg !3684
  %55 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !3685
  %arrayidx71 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %55, i64 47, !dbg !3685
  %mean72 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx71, i32 0, i32 7, !dbg !3686
  %56 = load double, double* %mean72, align 8, !dbg !3687
  %add73 = fadd double %56, %54, !dbg !3687
  store double %add73, double* %mean72, align 8, !dbg !3687
  %57 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !3688
  %arrayidx74 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %57, i64 8, !dbg !3688
  %variance75 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx74, i32 0, i32 8, !dbg !3689
  %58 = load double, double* %variance75, align 8, !dbg !3689
  %59 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !3690
  %arrayidx76 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %59, i64 8, !dbg !3690
  %mean77 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx76, i32 0, i32 7, !dbg !3691
  %60 = load double, double* %mean77, align 8, !dbg !3691
  %61 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !3692
  %arrayidx78 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %61, i64 8, !dbg !3692
  %mean79 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx78, i32 0, i32 7, !dbg !3693
  %62 = load double, double* %mean79, align 8, !dbg !3693
  %mul80 = fmul double %60, %62, !dbg !3694
  %sub81 = fsub double %58, %mul80, !dbg !3695
  %63 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !3696
  %arrayidx82 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %63, i64 47, !dbg !3696
  %standard_deviation83 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx82, i32 0, i32 9, !dbg !3697
  %64 = load double, double* %standard_deviation83, align 8, !dbg !3698
  %add84 = fadd double %64, %sub81, !dbg !3698
  store double %add84, double* %standard_deviation83, align 8, !dbg !3698
  %65 = load i64, i64* %channels, align 8, !dbg !3699
  %inc85 = add i64 %65, 1, !dbg !3699
  store i64 %inc85, i64* %channels, align 8, !dbg !3699
  br label %if.end86, !dbg !3700

if.end86:                                         ; preds = %if.then68, %land.lhs.true, %if.end64
  %66 = load i32, i32* %channel.addr, align 4, !dbg !3701
  %and87 = and i32 %66, 32, !dbg !3703
  %cmp88 = icmp ne i32 %and87, 0, !dbg !3704
  br i1 %cmp88, label %land.lhs.true89, label %if.end109, !dbg !3705

land.lhs.true89:                                  ; preds = %if.end86
  %67 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3706
  %colorspace = getelementptr inbounds %struct._Image, %struct._Image* %67, i32 0, i32 1, !dbg !3707
  %68 = load i32, i32* %colorspace, align 4, !dbg !3707
  %cmp90 = icmp eq i32 %68, 12, !dbg !3708
  br i1 %cmp90, label %if.then91, label %if.end109, !dbg !3709

if.then91:                                        ; preds = %land.lhs.true89
  %69 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !3710
  %arrayidx92 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %69, i64 32, !dbg !3710
  %mean93 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx92, i32 0, i32 7, !dbg !3712
  %70 = load double, double* %mean93, align 8, !dbg !3712
  %71 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !3713
  %arrayidx94 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %71, i64 47, !dbg !3713
  %mean95 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx94, i32 0, i32 7, !dbg !3714
  %72 = load double, double* %mean95, align 8, !dbg !3715
  %add96 = fadd double %72, %70, !dbg !3715
  store double %add96, double* %mean95, align 8, !dbg !3715
  %73 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !3716
  %arrayidx97 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %73, i64 32, !dbg !3716
  %variance98 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx97, i32 0, i32 8, !dbg !3717
  %74 = load double, double* %variance98, align 8, !dbg !3717
  %75 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !3718
  %arrayidx99 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %75, i64 32, !dbg !3718
  %mean100 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx99, i32 0, i32 7, !dbg !3719
  %76 = load double, double* %mean100, align 8, !dbg !3719
  %77 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !3720
  %arrayidx101 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %77, i64 32, !dbg !3720
  %mean102 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx101, i32 0, i32 7, !dbg !3721
  %78 = load double, double* %mean102, align 8, !dbg !3721
  %mul103 = fmul double %76, %78, !dbg !3722
  %sub104 = fsub double %74, %mul103, !dbg !3723
  %79 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !3724
  %arrayidx105 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %79, i64 47, !dbg !3724
  %standard_deviation106 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx105, i32 0, i32 9, !dbg !3725
  %80 = load double, double* %standard_deviation106, align 8, !dbg !3726
  %add107 = fadd double %80, %sub104, !dbg !3726
  store double %add107, double* %standard_deviation106, align 8, !dbg !3726
  %81 = load i64, i64* %channels, align 8, !dbg !3727
  %inc108 = add i64 %81, 1, !dbg !3727
  store i64 %inc108, i64* %channels, align 8, !dbg !3727
  br label %if.end109, !dbg !3728

if.end109:                                        ; preds = %if.then91, %land.lhs.true89, %if.end86
  %82 = load i64, i64* %channels, align 8, !dbg !3729
  %conv = uitofp i64 %82 to double, !dbg !3729
  %83 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !3730
  %arrayidx110 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %83, i64 47, !dbg !3730
  %mean111 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx110, i32 0, i32 7, !dbg !3731
  %84 = load double, double* %mean111, align 8, !dbg !3732
  %div = fdiv double %84, %conv, !dbg !3732
  store double %div, double* %mean111, align 8, !dbg !3732
  %85 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !3733
  %arrayidx112 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %85, i64 47, !dbg !3733
  %standard_deviation113 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx112, i32 0, i32 9, !dbg !3734
  %86 = load double, double* %standard_deviation113, align 8, !dbg !3734
  %87 = load i64, i64* %channels, align 8, !dbg !3735
  %conv114 = uitofp i64 %87 to double, !dbg !3735
  %div115 = fdiv double %86, %conv114, !dbg !3736
  %call116 = call double @sqrt(double %div115) #8, !dbg !3737
  %88 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !3738
  %arrayidx117 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %88, i64 47, !dbg !3738
  %standard_deviation118 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx117, i32 0, i32 9, !dbg !3739
  store double %call116, double* %standard_deviation118, align 8, !dbg !3740
  %89 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !3741
  %arrayidx119 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %89, i64 47, !dbg !3741
  %mean120 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx119, i32 0, i32 7, !dbg !3742
  %90 = load double, double* %mean120, align 8, !dbg !3742
  %91 = load double*, double** %mean.addr, align 8, !dbg !3743
  store double %90, double* %91, align 8, !dbg !3744
  %92 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !3745
  %arrayidx121 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %92, i64 47, !dbg !3745
  %standard_deviation122 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx121, i32 0, i32 9, !dbg !3746
  %93 = load double, double* %standard_deviation122, align 8, !dbg !3746
  %94 = load double*, double** %standard_deviation.addr, align 8, !dbg !3747
  store double %93, double* %94, align 8, !dbg !3748
  %95 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !3749
  %96 = bitcast %struct._ChannelStatistics* %95 to i8*, !dbg !3749
  %call123 = call i8* @RelinquishMagickMemory(i8* %96), !dbg !3750
  %97 = bitcast i8* %call123 to %struct._ChannelStatistics*, !dbg !3751
  store %struct._ChannelStatistics* %97, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !3752
  store i32 1, i32* %retval, align 4, !dbg !3753
  br label %return, !dbg !3753

return:                                           ; preds = %if.end109, %if.then3
  %98 = load i32, i32* %retval, align 4, !dbg !3754
  ret i32 %98, !dbg !3754
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._ChannelStatistics* @GetImageChannelStatistics(%struct._Image* %image, %struct._ExceptionInfo* %exception) #0 !dbg !3755 {
entry:
  %retval = alloca %struct._ChannelStatistics*, align 8
  %image.addr = alloca %struct._Image*, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %channel_statistics = alloca %struct._ChannelStatistics*, align 8
  %area = alloca double, align 8
  %range = alloca i64, align 8
  %i = alloca i64, align 8
  %channels = alloca i64, align 8
  %depth = alloca i64, align 8
  %length = alloca i64, align 8
  %y = alloca i64, align 8
  %indexes = alloca i16*, align 8
  %p = alloca %struct._PixelPacket*, align 8
  %x = alloca i64, align 8
  %sum576 = alloca double, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !3758, metadata !DIExpression()), !dbg !3759
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !3760, metadata !DIExpression()), !dbg !3761
  call void @llvm.dbg.declare(metadata %struct._ChannelStatistics** %channel_statistics, metadata !3762, metadata !DIExpression()), !dbg !3763
  call void @llvm.dbg.declare(metadata double* %area, metadata !3764, metadata !DIExpression()), !dbg !3765
  call void @llvm.dbg.declare(metadata i64* %range, metadata !3766, metadata !DIExpression()), !dbg !3767
  call void @llvm.dbg.declare(metadata i64* %i, metadata !3768, metadata !DIExpression()), !dbg !3769
  call void @llvm.dbg.declare(metadata i64* %channels, metadata !3770, metadata !DIExpression()), !dbg !3771
  call void @llvm.dbg.declare(metadata i64* %depth, metadata !3772, metadata !DIExpression()), !dbg !3773
  call void @llvm.dbg.declare(metadata i64* %length, metadata !3774, metadata !DIExpression()), !dbg !3775
  call void @llvm.dbg.declare(metadata i64* %y, metadata !3776, metadata !DIExpression()), !dbg !3777
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3778
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !3780
  %1 = load i32, i32* %debug, align 8, !dbg !3780
  %cmp = icmp ne i32 %1, 0, !dbg !3781
  br i1 %cmp, label %if.then, label %if.end, !dbg !3782

if.then:                                          ; preds = %entry
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3783
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %2, i32 0, i32 53, !dbg !3784
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !3783
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2153, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !3785
  br label %if.end, !dbg !3786

if.end:                                           ; preds = %if.then, %entry
  store i64 48, i64* %length, align 8, !dbg !3787
  %3 = load i64, i64* %length, align 8, !dbg !3788
  %call1 = call i8* @AcquireQuantumMemory(i64 %3, i64 96) #7, !dbg !3789
  %4 = bitcast i8* %call1 to %struct._ChannelStatistics*, !dbg !3790
  store %struct._ChannelStatistics* %4, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !3791
  %5 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !3792
  %cmp2 = icmp eq %struct._ChannelStatistics* %5, null, !dbg !3794
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !3795

if.then3:                                         ; preds = %if.end
  %6 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !3796
  store %struct._ChannelStatistics* %6, %struct._ChannelStatistics** %retval, align 8, !dbg !3797
  br label %return, !dbg !3797

if.end4:                                          ; preds = %if.end
  %7 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !3798
  %8 = bitcast %struct._ChannelStatistics* %7 to i8*, !dbg !3798
  %9 = load i64, i64* %length, align 8, !dbg !3799
  %mul = mul i64 %9, 96, !dbg !3800
  %call5 = call i8* @ResetMagickMemory(i8* %8, i32 0, i64 %mul), !dbg !3801
  store i64 0, i64* %i, align 8, !dbg !3802
  br label %for.cond, !dbg !3804

for.cond:                                         ; preds = %for.inc, %if.end4
  %10 = load i64, i64* %i, align 8, !dbg !3805
  %cmp6 = icmp sle i64 %10, 47, !dbg !3807
  br i1 %cmp6, label %for.body, label %for.end, !dbg !3808

for.body:                                         ; preds = %for.cond
  %11 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !3809
  %12 = load i64, i64* %i, align 8, !dbg !3811
  %arrayidx = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %11, i64 %12, !dbg !3809
  %depth7 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx, i32 0, i32 0, !dbg !3812
  store i64 1, i64* %depth7, align 8, !dbg !3813
  %13 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !3814
  %14 = load i64, i64* %i, align 8, !dbg !3815
  %arrayidx8 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %13, i64 %14, !dbg !3814
  %maxima = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx8, i32 0, i32 2, !dbg !3816
  store double 0xFFEFFFFFFFFFFFFF, double* %maxima, align 8, !dbg !3817
  %15 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !3818
  %16 = load i64, i64* %i, align 8, !dbg !3819
  %arrayidx9 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %15, i64 %16, !dbg !3818
  %minima = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx9, i32 0, i32 1, !dbg !3820
  store double 0x7FEFFFFFFFFFFFFF, double* %minima, align 8, !dbg !3821
  br label %for.inc, !dbg !3822

for.inc:                                          ; preds = %for.body
  %17 = load i64, i64* %i, align 8, !dbg !3823
  %inc = add nsw i64 %17, 1, !dbg !3823
  store i64 %inc, i64* %i, align 8, !dbg !3823
  br label %for.cond, !dbg !3824, !llvm.loop !3825

for.end:                                          ; preds = %for.cond
  store i64 0, i64* %y, align 8, !dbg !3827
  br label %for.cond10, !dbg !3829

for.cond10:                                       ; preds = %for.inc564, %for.end
  %18 = load i64, i64* %y, align 8, !dbg !3830
  %19 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3832
  %rows = getelementptr inbounds %struct._Image, %struct._Image* %19, i32 0, i32 8, !dbg !3833
  %20 = load i64, i64* %rows, align 8, !dbg !3833
  %cmp11 = icmp slt i64 %18, %20, !dbg !3834
  br i1 %cmp11, label %for.body12, label %for.end566, !dbg !3835

for.body12:                                       ; preds = %for.cond10
  call void @llvm.dbg.declare(metadata i16** %indexes, metadata !3836, metadata !DIExpression()), !dbg !3838
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %p, metadata !3839, metadata !DIExpression()), !dbg !3840
  call void @llvm.dbg.declare(metadata i64* %x, metadata !3841, metadata !DIExpression()), !dbg !3842
  %21 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3843
  %22 = load i64, i64* %y, align 8, !dbg !3844
  %23 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3845
  %columns = getelementptr inbounds %struct._Image, %struct._Image* %23, i32 0, i32 7, !dbg !3846
  %24 = load i64, i64* %columns, align 8, !dbg !3846
  %25 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !3847
  %call13 = call %struct._PixelPacket* @GetVirtualPixels(%struct._Image* %21, i64 0, i64 %22, i64 %24, i64 1, %struct._ExceptionInfo* %25), !dbg !3848
  store %struct._PixelPacket* %call13, %struct._PixelPacket** %p, align 8, !dbg !3849
  %26 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3850
  %cmp14 = icmp eq %struct._PixelPacket* %26, null, !dbg !3852
  br i1 %cmp14, label %if.then15, label %if.end16, !dbg !3853

if.then15:                                        ; preds = %for.body12
  br label %for.end566, !dbg !3854

if.end16:                                         ; preds = %for.body12
  %27 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3855
  %call17 = call i16* @GetVirtualIndexQueue(%struct._Image* %27), !dbg !3856
  store i16* %call17, i16** %indexes, align 8, !dbg !3857
  store i64 0, i64* %x, align 8, !dbg !3858
  br label %for.cond18, !dbg !3860

for.cond18:                                       ; preds = %if.end561, %if.then100, %if.then78, %if.then61, %if.then46, %if.then31, %if.end16
  %28 = load i64, i64* %x, align 8, !dbg !3861
  %29 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3863
  %columns19 = getelementptr inbounds %struct._Image, %struct._Image* %29, i32 0, i32 7, !dbg !3864
  %30 = load i64, i64* %columns19, align 8, !dbg !3864
  %cmp20 = icmp slt i64 %28, %30, !dbg !3865
  br i1 %cmp20, label %for.body21, label %for.end563, !dbg !3866

for.body21:                                       ; preds = %for.cond18
  %31 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !3867
  %arrayidx22 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %31, i64 1, !dbg !3867
  %depth23 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx22, i32 0, i32 0, !dbg !3870
  %32 = load i64, i64* %depth23, align 8, !dbg !3870
  %cmp24 = icmp ne i64 %32, 16, !dbg !3871
  br i1 %cmp24, label %if.then25, label %if.end36, !dbg !3872

if.then25:                                        ; preds = %for.body21
  %33 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !3873
  %arrayidx26 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %33, i64 1, !dbg !3873
  %depth27 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx26, i32 0, i32 0, !dbg !3875
  %34 = load i64, i64* %depth27, align 8, !dbg !3875
  store i64 %34, i64* %depth, align 8, !dbg !3876
  %35 = load i64, i64* %depth, align 8, !dbg !3877
  %call28 = call i64 @GetQuantumRange(i64 %35), !dbg !3878
  store i64 %call28, i64* %range, align 8, !dbg !3879
  %36 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3880
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %36, i32 0, i32 2, !dbg !3880
  %37 = load i16, i16* %red, align 2, !dbg !3880
  %38 = load i64, i64* %range, align 8, !dbg !3882
  %call29 = call i32 @IsPixelAtDepth(i16 zeroext %37, i64 %38), !dbg !3883
  %cmp30 = icmp eq i32 %call29, 0, !dbg !3884
  br i1 %cmp30, label %if.then31, label %if.end35, !dbg !3885

if.then31:                                        ; preds = %if.then25
  %39 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !3886
  %arrayidx32 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %39, i64 1, !dbg !3886
  %depth33 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx32, i32 0, i32 0, !dbg !3888
  %40 = load i64, i64* %depth33, align 8, !dbg !3889
  %inc34 = add i64 %40, 1, !dbg !3889
  store i64 %inc34, i64* %depth33, align 8, !dbg !3889
  br label %for.cond18, !dbg !3890, !llvm.loop !3891

if.end35:                                         ; preds = %if.then25
  br label %if.end36, !dbg !3893

if.end36:                                         ; preds = %if.end35, %for.body21
  %41 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !3894
  %arrayidx37 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %41, i64 2, !dbg !3894
  %depth38 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx37, i32 0, i32 0, !dbg !3896
  %42 = load i64, i64* %depth38, align 8, !dbg !3896
  %cmp39 = icmp ne i64 %42, 16, !dbg !3897
  br i1 %cmp39, label %if.then40, label %if.end51, !dbg !3898

if.then40:                                        ; preds = %if.end36
  %43 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !3899
  %arrayidx41 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %43, i64 2, !dbg !3899
  %depth42 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx41, i32 0, i32 0, !dbg !3901
  %44 = load i64, i64* %depth42, align 8, !dbg !3901
  store i64 %44, i64* %depth, align 8, !dbg !3902
  %45 = load i64, i64* %depth, align 8, !dbg !3903
  %call43 = call i64 @GetQuantumRange(i64 %45), !dbg !3904
  store i64 %call43, i64* %range, align 8, !dbg !3905
  %46 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3906
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %46, i32 0, i32 1, !dbg !3906
  %47 = load i16, i16* %green, align 2, !dbg !3906
  %48 = load i64, i64* %range, align 8, !dbg !3908
  %call44 = call i32 @IsPixelAtDepth(i16 zeroext %47, i64 %48), !dbg !3909
  %cmp45 = icmp eq i32 %call44, 0, !dbg !3910
  br i1 %cmp45, label %if.then46, label %if.end50, !dbg !3911

if.then46:                                        ; preds = %if.then40
  %49 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !3912
  %arrayidx47 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %49, i64 2, !dbg !3912
  %depth48 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx47, i32 0, i32 0, !dbg !3914
  %50 = load i64, i64* %depth48, align 8, !dbg !3915
  %inc49 = add i64 %50, 1, !dbg !3915
  store i64 %inc49, i64* %depth48, align 8, !dbg !3915
  br label %for.cond18, !dbg !3916, !llvm.loop !3891

if.end50:                                         ; preds = %if.then40
  br label %if.end51, !dbg !3917

if.end51:                                         ; preds = %if.end50, %if.end36
  %51 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !3918
  %arrayidx52 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %51, i64 4, !dbg !3918
  %depth53 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx52, i32 0, i32 0, !dbg !3920
  %52 = load i64, i64* %depth53, align 8, !dbg !3920
  %cmp54 = icmp ne i64 %52, 16, !dbg !3921
  br i1 %cmp54, label %if.then55, label %if.end66, !dbg !3922

if.then55:                                        ; preds = %if.end51
  %53 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !3923
  %arrayidx56 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %53, i64 4, !dbg !3923
  %depth57 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx56, i32 0, i32 0, !dbg !3925
  %54 = load i64, i64* %depth57, align 8, !dbg !3925
  store i64 %54, i64* %depth, align 8, !dbg !3926
  %55 = load i64, i64* %depth, align 8, !dbg !3927
  %call58 = call i64 @GetQuantumRange(i64 %55), !dbg !3928
  store i64 %call58, i64* %range, align 8, !dbg !3929
  %56 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3930
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %56, i32 0, i32 0, !dbg !3930
  %57 = load i16, i16* %blue, align 2, !dbg !3930
  %58 = load i64, i64* %range, align 8, !dbg !3932
  %call59 = call i32 @IsPixelAtDepth(i16 zeroext %57, i64 %58), !dbg !3933
  %cmp60 = icmp eq i32 %call59, 0, !dbg !3934
  br i1 %cmp60, label %if.then61, label %if.end65, !dbg !3935

if.then61:                                        ; preds = %if.then55
  %59 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !3936
  %arrayidx62 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %59, i64 4, !dbg !3936
  %depth63 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx62, i32 0, i32 0, !dbg !3938
  %60 = load i64, i64* %depth63, align 8, !dbg !3939
  %inc64 = add i64 %60, 1, !dbg !3939
  store i64 %inc64, i64* %depth63, align 8, !dbg !3939
  br label %for.cond18, !dbg !3940, !llvm.loop !3891

if.end65:                                         ; preds = %if.then55
  br label %if.end66, !dbg !3941

if.end66:                                         ; preds = %if.end65, %if.end51
  %61 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3942
  %matte = getelementptr inbounds %struct._Image, %struct._Image* %61, i32 0, i32 6, !dbg !3944
  %62 = load i32, i32* %matte, align 8, !dbg !3944
  %cmp67 = icmp ne i32 %62, 0, !dbg !3945
  br i1 %cmp67, label %if.then68, label %if.end84, !dbg !3946

if.then68:                                        ; preds = %if.end66
  %63 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !3947
  %arrayidx69 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %63, i64 8, !dbg !3947
  %depth70 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx69, i32 0, i32 0, !dbg !3950
  %64 = load i64, i64* %depth70, align 8, !dbg !3950
  %cmp71 = icmp ne i64 %64, 16, !dbg !3951
  br i1 %cmp71, label %if.then72, label %if.end83, !dbg !3952

if.then72:                                        ; preds = %if.then68
  %65 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !3953
  %arrayidx73 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %65, i64 8, !dbg !3953
  %depth74 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx73, i32 0, i32 0, !dbg !3955
  %66 = load i64, i64* %depth74, align 8, !dbg !3955
  store i64 %66, i64* %depth, align 8, !dbg !3956
  %67 = load i64, i64* %depth, align 8, !dbg !3957
  %call75 = call i64 @GetQuantumRange(i64 %67), !dbg !3958
  store i64 %call75, i64* %range, align 8, !dbg !3959
  %68 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !3960
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %68, i32 0, i32 3, !dbg !3960
  %69 = load i16, i16* %opacity, align 2, !dbg !3960
  %70 = load i64, i64* %range, align 8, !dbg !3962
  %call76 = call i32 @IsPixelAtDepth(i16 zeroext %69, i64 %70), !dbg !3963
  %cmp77 = icmp eq i32 %call76, 0, !dbg !3964
  br i1 %cmp77, label %if.then78, label %if.end82, !dbg !3965

if.then78:                                        ; preds = %if.then72
  %71 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !3966
  %arrayidx79 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %71, i64 8, !dbg !3966
  %depth80 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx79, i32 0, i32 0, !dbg !3968
  %72 = load i64, i64* %depth80, align 8, !dbg !3969
  %inc81 = add i64 %72, 1, !dbg !3969
  store i64 %inc81, i64* %depth80, align 8, !dbg !3969
  br label %for.cond18, !dbg !3970, !llvm.loop !3891

if.end82:                                         ; preds = %if.then72
  br label %if.end83, !dbg !3971

if.end83:                                         ; preds = %if.end82, %if.then68
  br label %if.end84, !dbg !3972

if.end84:                                         ; preds = %if.end83, %if.end66
  %73 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !3973
  %colorspace = getelementptr inbounds %struct._Image, %struct._Image* %73, i32 0, i32 1, !dbg !3975
  %74 = load i32, i32* %colorspace, align 4, !dbg !3975
  %cmp85 = icmp eq i32 %74, 12, !dbg !3976
  br i1 %cmp85, label %if.then86, label %if.end106, !dbg !3977

if.then86:                                        ; preds = %if.end84
  %75 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !3978
  %arrayidx87 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %75, i64 32, !dbg !3978
  %depth88 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx87, i32 0, i32 0, !dbg !3981
  %76 = load i64, i64* %depth88, align 8, !dbg !3981
  %cmp89 = icmp ne i64 %76, 16, !dbg !3982
  br i1 %cmp89, label %if.then90, label %if.end105, !dbg !3983

if.then90:                                        ; preds = %if.then86
  %77 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !3984
  %arrayidx91 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %77, i64 32, !dbg !3984
  %depth92 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx91, i32 0, i32 0, !dbg !3986
  %78 = load i64, i64* %depth92, align 8, !dbg !3986
  store i64 %78, i64* %depth, align 8, !dbg !3987
  %79 = load i64, i64* %depth, align 8, !dbg !3988
  %call93 = call i64 @GetQuantumRange(i64 %79), !dbg !3989
  store i64 %call93, i64* %range, align 8, !dbg !3990
  %80 = load i16*, i16** %indexes, align 8, !dbg !3991
  %81 = load i64, i64* %x, align 8, !dbg !3991
  %add.ptr = getelementptr inbounds i16, i16* %80, i64 %81, !dbg !3991
  %cmp94 = icmp eq i16* %add.ptr, null, !dbg !3991
  br i1 %cmp94, label %cond.true, label %cond.false, !dbg !3991

cond.true:                                        ; preds = %if.then90
  br label %cond.end, !dbg !3991

cond.false:                                       ; preds = %if.then90
  %82 = load i16*, i16** %indexes, align 8, !dbg !3991
  %83 = load i64, i64* %x, align 8, !dbg !3991
  %add.ptr95 = getelementptr inbounds i16, i16* %82, i64 %83, !dbg !3991
  %84 = load i16, i16* %add.ptr95, align 2, !dbg !3991
  %conv = zext i16 %84 to i32, !dbg !3991
  br label %cond.end, !dbg !3991

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %conv, %cond.false ], !dbg !3991
  %conv96 = trunc i32 %cond to i16, !dbg !3991
  %85 = load i64, i64* %range, align 8, !dbg !3993
  %call97 = call i32 @IsPixelAtDepth(i16 zeroext %conv96, i64 %85), !dbg !3994
  %cmp98 = icmp eq i32 %call97, 0, !dbg !3995
  br i1 %cmp98, label %if.then100, label %if.end104, !dbg !3996

if.then100:                                       ; preds = %cond.end
  %86 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !3997
  %arrayidx101 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %86, i64 32, !dbg !3997
  %depth102 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx101, i32 0, i32 0, !dbg !3999
  %87 = load i64, i64* %depth102, align 8, !dbg !4000
  %inc103 = add i64 %87, 1, !dbg !4000
  store i64 %inc103, i64* %depth102, align 8, !dbg !4000
  br label %for.cond18, !dbg !4001, !llvm.loop !3891

if.end104:                                        ; preds = %cond.end
  br label %if.end105, !dbg !4002

if.end105:                                        ; preds = %if.end104, %if.then86
  br label %if.end106, !dbg !4003

if.end106:                                        ; preds = %if.end105, %if.end84
  %88 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4004
  %red107 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %88, i32 0, i32 2, !dbg !4004
  %89 = load i16, i16* %red107, align 2, !dbg !4004
  %conv108 = uitofp i16 %89 to double, !dbg !4006
  %90 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4007
  %arrayidx109 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %90, i64 1, !dbg !4007
  %minima110 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx109, i32 0, i32 1, !dbg !4008
  %91 = load double, double* %minima110, align 8, !dbg !4008
  %cmp111 = fcmp olt double %conv108, %91, !dbg !4009
  br i1 %cmp111, label %if.then113, label %if.end118, !dbg !4010

if.then113:                                       ; preds = %if.end106
  %92 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4011
  %red114 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %92, i32 0, i32 2, !dbg !4011
  %93 = load i16, i16* %red114, align 2, !dbg !4011
  %conv115 = uitofp i16 %93 to double, !dbg !4012
  %94 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4013
  %arrayidx116 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %94, i64 1, !dbg !4013
  %minima117 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx116, i32 0, i32 1, !dbg !4014
  store double %conv115, double* %minima117, align 8, !dbg !4015
  br label %if.end118, !dbg !4013

if.end118:                                        ; preds = %if.then113, %if.end106
  %95 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4016
  %red119 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %95, i32 0, i32 2, !dbg !4016
  %96 = load i16, i16* %red119, align 2, !dbg !4016
  %conv120 = uitofp i16 %96 to double, !dbg !4018
  %97 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4019
  %arrayidx121 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %97, i64 1, !dbg !4019
  %maxima122 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx121, i32 0, i32 2, !dbg !4020
  %98 = load double, double* %maxima122, align 8, !dbg !4020
  %cmp123 = fcmp ogt double %conv120, %98, !dbg !4021
  br i1 %cmp123, label %if.then125, label %if.end130, !dbg !4022

if.then125:                                       ; preds = %if.end118
  %99 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4023
  %red126 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %99, i32 0, i32 2, !dbg !4023
  %100 = load i16, i16* %red126, align 2, !dbg !4023
  %conv127 = uitofp i16 %100 to double, !dbg !4024
  %101 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4025
  %arrayidx128 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %101, i64 1, !dbg !4025
  %maxima129 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx128, i32 0, i32 2, !dbg !4026
  store double %conv127, double* %maxima129, align 8, !dbg !4027
  br label %if.end130, !dbg !4025

if.end130:                                        ; preds = %if.then125, %if.end118
  %102 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4028
  %red131 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %102, i32 0, i32 2, !dbg !4028
  %103 = load i16, i16* %red131, align 2, !dbg !4028
  %conv132 = zext i16 %103 to i32, !dbg !4028
  %conv133 = sitofp i32 %conv132 to double, !dbg !4028
  %104 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4029
  %arrayidx134 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %104, i64 1, !dbg !4029
  %sum = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx134, i32 0, i32 3, !dbg !4030
  %105 = load double, double* %sum, align 8, !dbg !4031
  %add = fadd double %105, %conv133, !dbg !4031
  store double %add, double* %sum, align 8, !dbg !4031
  %106 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4032
  %red135 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %106, i32 0, i32 2, !dbg !4032
  %107 = load i16, i16* %red135, align 2, !dbg !4032
  %conv136 = uitofp i16 %107 to double, !dbg !4033
  %108 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4034
  %red137 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %108, i32 0, i32 2, !dbg !4034
  %109 = load i16, i16* %red137, align 2, !dbg !4034
  %conv138 = zext i16 %109 to i32, !dbg !4034
  %conv139 = sitofp i32 %conv138 to double, !dbg !4034
  %mul140 = fmul double %conv136, %conv139, !dbg !4035
  %110 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4036
  %arrayidx141 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %110, i64 1, !dbg !4036
  %sum_squared = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx141, i32 0, i32 4, !dbg !4037
  %111 = load double, double* %sum_squared, align 8, !dbg !4038
  %add142 = fadd double %111, %mul140, !dbg !4038
  store double %add142, double* %sum_squared, align 8, !dbg !4038
  %112 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4039
  %red143 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %112, i32 0, i32 2, !dbg !4039
  %113 = load i16, i16* %red143, align 2, !dbg !4039
  %conv144 = uitofp i16 %113 to double, !dbg !4040
  %114 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4041
  %red145 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %114, i32 0, i32 2, !dbg !4041
  %115 = load i16, i16* %red145, align 2, !dbg !4041
  %conv146 = zext i16 %115 to i32, !dbg !4041
  %conv147 = sitofp i32 %conv146 to double, !dbg !4041
  %mul148 = fmul double %conv144, %conv147, !dbg !4042
  %116 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4043
  %red149 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %116, i32 0, i32 2, !dbg !4043
  %117 = load i16, i16* %red149, align 2, !dbg !4043
  %conv150 = zext i16 %117 to i32, !dbg !4043
  %conv151 = sitofp i32 %conv150 to double, !dbg !4043
  %mul152 = fmul double %mul148, %conv151, !dbg !4044
  %118 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4045
  %arrayidx153 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %118, i64 1, !dbg !4045
  %sum_cubed = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx153, i32 0, i32 5, !dbg !4046
  %119 = load double, double* %sum_cubed, align 8, !dbg !4047
  %add154 = fadd double %119, %mul152, !dbg !4047
  store double %add154, double* %sum_cubed, align 8, !dbg !4047
  %120 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4048
  %red155 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %120, i32 0, i32 2, !dbg !4048
  %121 = load i16, i16* %red155, align 2, !dbg !4048
  %conv156 = uitofp i16 %121 to double, !dbg !4049
  %122 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4050
  %red157 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %122, i32 0, i32 2, !dbg !4050
  %123 = load i16, i16* %red157, align 2, !dbg !4050
  %conv158 = zext i16 %123 to i32, !dbg !4050
  %conv159 = sitofp i32 %conv158 to double, !dbg !4050
  %mul160 = fmul double %conv156, %conv159, !dbg !4051
  %124 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4052
  %red161 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %124, i32 0, i32 2, !dbg !4052
  %125 = load i16, i16* %red161, align 2, !dbg !4052
  %conv162 = zext i16 %125 to i32, !dbg !4052
  %conv163 = sitofp i32 %conv162 to double, !dbg !4052
  %mul164 = fmul double %mul160, %conv163, !dbg !4053
  %126 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4054
  %red165 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %126, i32 0, i32 2, !dbg !4054
  %127 = load i16, i16* %red165, align 2, !dbg !4054
  %conv166 = zext i16 %127 to i32, !dbg !4054
  %conv167 = sitofp i32 %conv166 to double, !dbg !4054
  %mul168 = fmul double %mul164, %conv167, !dbg !4055
  %128 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4056
  %arrayidx169 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %128, i64 1, !dbg !4056
  %sum_fourth_power = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx169, i32 0, i32 6, !dbg !4057
  %129 = load double, double* %sum_fourth_power, align 8, !dbg !4058
  %add170 = fadd double %129, %mul168, !dbg !4058
  store double %add170, double* %sum_fourth_power, align 8, !dbg !4058
  %130 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4059
  %green171 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %130, i32 0, i32 1, !dbg !4059
  %131 = load i16, i16* %green171, align 2, !dbg !4059
  %conv172 = uitofp i16 %131 to double, !dbg !4061
  %132 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4062
  %arrayidx173 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %132, i64 2, !dbg !4062
  %minima174 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx173, i32 0, i32 1, !dbg !4063
  %133 = load double, double* %minima174, align 8, !dbg !4063
  %cmp175 = fcmp olt double %conv172, %133, !dbg !4064
  br i1 %cmp175, label %if.then177, label %if.end182, !dbg !4065

if.then177:                                       ; preds = %if.end130
  %134 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4066
  %green178 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %134, i32 0, i32 1, !dbg !4066
  %135 = load i16, i16* %green178, align 2, !dbg !4066
  %conv179 = uitofp i16 %135 to double, !dbg !4067
  %136 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4068
  %arrayidx180 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %136, i64 2, !dbg !4068
  %minima181 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx180, i32 0, i32 1, !dbg !4069
  store double %conv179, double* %minima181, align 8, !dbg !4070
  br label %if.end182, !dbg !4068

if.end182:                                        ; preds = %if.then177, %if.end130
  %137 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4071
  %green183 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %137, i32 0, i32 1, !dbg !4071
  %138 = load i16, i16* %green183, align 2, !dbg !4071
  %conv184 = uitofp i16 %138 to double, !dbg !4073
  %139 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4074
  %arrayidx185 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %139, i64 2, !dbg !4074
  %maxima186 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx185, i32 0, i32 2, !dbg !4075
  %140 = load double, double* %maxima186, align 8, !dbg !4075
  %cmp187 = fcmp ogt double %conv184, %140, !dbg !4076
  br i1 %cmp187, label %if.then189, label %if.end194, !dbg !4077

if.then189:                                       ; preds = %if.end182
  %141 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4078
  %green190 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %141, i32 0, i32 1, !dbg !4078
  %142 = load i16, i16* %green190, align 2, !dbg !4078
  %conv191 = uitofp i16 %142 to double, !dbg !4079
  %143 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4080
  %arrayidx192 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %143, i64 2, !dbg !4080
  %maxima193 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx192, i32 0, i32 2, !dbg !4081
  store double %conv191, double* %maxima193, align 8, !dbg !4082
  br label %if.end194, !dbg !4080

if.end194:                                        ; preds = %if.then189, %if.end182
  %144 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4083
  %green195 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %144, i32 0, i32 1, !dbg !4083
  %145 = load i16, i16* %green195, align 2, !dbg !4083
  %conv196 = zext i16 %145 to i32, !dbg !4083
  %conv197 = sitofp i32 %conv196 to double, !dbg !4083
  %146 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4084
  %arrayidx198 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %146, i64 2, !dbg !4084
  %sum199 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx198, i32 0, i32 3, !dbg !4085
  %147 = load double, double* %sum199, align 8, !dbg !4086
  %add200 = fadd double %147, %conv197, !dbg !4086
  store double %add200, double* %sum199, align 8, !dbg !4086
  %148 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4087
  %green201 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %148, i32 0, i32 1, !dbg !4087
  %149 = load i16, i16* %green201, align 2, !dbg !4087
  %conv202 = uitofp i16 %149 to double, !dbg !4088
  %150 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4089
  %green203 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %150, i32 0, i32 1, !dbg !4089
  %151 = load i16, i16* %green203, align 2, !dbg !4089
  %conv204 = zext i16 %151 to i32, !dbg !4089
  %conv205 = sitofp i32 %conv204 to double, !dbg !4089
  %mul206 = fmul double %conv202, %conv205, !dbg !4090
  %152 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4091
  %arrayidx207 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %152, i64 2, !dbg !4091
  %sum_squared208 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx207, i32 0, i32 4, !dbg !4092
  %153 = load double, double* %sum_squared208, align 8, !dbg !4093
  %add209 = fadd double %153, %mul206, !dbg !4093
  store double %add209, double* %sum_squared208, align 8, !dbg !4093
  %154 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4094
  %green210 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %154, i32 0, i32 1, !dbg !4094
  %155 = load i16, i16* %green210, align 2, !dbg !4094
  %conv211 = uitofp i16 %155 to double, !dbg !4095
  %156 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4096
  %green212 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %156, i32 0, i32 1, !dbg !4096
  %157 = load i16, i16* %green212, align 2, !dbg !4096
  %conv213 = zext i16 %157 to i32, !dbg !4096
  %conv214 = sitofp i32 %conv213 to double, !dbg !4096
  %mul215 = fmul double %conv211, %conv214, !dbg !4097
  %158 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4098
  %green216 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %158, i32 0, i32 1, !dbg !4098
  %159 = load i16, i16* %green216, align 2, !dbg !4098
  %conv217 = zext i16 %159 to i32, !dbg !4098
  %conv218 = sitofp i32 %conv217 to double, !dbg !4098
  %mul219 = fmul double %mul215, %conv218, !dbg !4099
  %160 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4100
  %arrayidx220 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %160, i64 2, !dbg !4100
  %sum_cubed221 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx220, i32 0, i32 5, !dbg !4101
  %161 = load double, double* %sum_cubed221, align 8, !dbg !4102
  %add222 = fadd double %161, %mul219, !dbg !4102
  store double %add222, double* %sum_cubed221, align 8, !dbg !4102
  %162 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4103
  %green223 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %162, i32 0, i32 1, !dbg !4103
  %163 = load i16, i16* %green223, align 2, !dbg !4103
  %conv224 = uitofp i16 %163 to double, !dbg !4104
  %164 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4105
  %green225 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %164, i32 0, i32 1, !dbg !4105
  %165 = load i16, i16* %green225, align 2, !dbg !4105
  %conv226 = zext i16 %165 to i32, !dbg !4105
  %conv227 = sitofp i32 %conv226 to double, !dbg !4105
  %mul228 = fmul double %conv224, %conv227, !dbg !4106
  %166 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4107
  %green229 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %166, i32 0, i32 1, !dbg !4107
  %167 = load i16, i16* %green229, align 2, !dbg !4107
  %conv230 = zext i16 %167 to i32, !dbg !4107
  %conv231 = sitofp i32 %conv230 to double, !dbg !4107
  %mul232 = fmul double %mul228, %conv231, !dbg !4108
  %168 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4109
  %green233 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %168, i32 0, i32 1, !dbg !4109
  %169 = load i16, i16* %green233, align 2, !dbg !4109
  %conv234 = zext i16 %169 to i32, !dbg !4109
  %conv235 = sitofp i32 %conv234 to double, !dbg !4109
  %mul236 = fmul double %mul232, %conv235, !dbg !4110
  %170 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4111
  %arrayidx237 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %170, i64 2, !dbg !4111
  %sum_fourth_power238 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx237, i32 0, i32 6, !dbg !4112
  %171 = load double, double* %sum_fourth_power238, align 8, !dbg !4113
  %add239 = fadd double %171, %mul236, !dbg !4113
  store double %add239, double* %sum_fourth_power238, align 8, !dbg !4113
  %172 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4114
  %blue240 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %172, i32 0, i32 0, !dbg !4114
  %173 = load i16, i16* %blue240, align 2, !dbg !4114
  %conv241 = uitofp i16 %173 to double, !dbg !4116
  %174 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4117
  %arrayidx242 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %174, i64 4, !dbg !4117
  %minima243 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx242, i32 0, i32 1, !dbg !4118
  %175 = load double, double* %minima243, align 8, !dbg !4118
  %cmp244 = fcmp olt double %conv241, %175, !dbg !4119
  br i1 %cmp244, label %if.then246, label %if.end251, !dbg !4120

if.then246:                                       ; preds = %if.end194
  %176 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4121
  %blue247 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %176, i32 0, i32 0, !dbg !4121
  %177 = load i16, i16* %blue247, align 2, !dbg !4121
  %conv248 = uitofp i16 %177 to double, !dbg !4122
  %178 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4123
  %arrayidx249 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %178, i64 4, !dbg !4123
  %minima250 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx249, i32 0, i32 1, !dbg !4124
  store double %conv248, double* %minima250, align 8, !dbg !4125
  br label %if.end251, !dbg !4123

if.end251:                                        ; preds = %if.then246, %if.end194
  %179 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4126
  %blue252 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %179, i32 0, i32 0, !dbg !4126
  %180 = load i16, i16* %blue252, align 2, !dbg !4126
  %conv253 = uitofp i16 %180 to double, !dbg !4128
  %181 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4129
  %arrayidx254 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %181, i64 4, !dbg !4129
  %maxima255 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx254, i32 0, i32 2, !dbg !4130
  %182 = load double, double* %maxima255, align 8, !dbg !4130
  %cmp256 = fcmp ogt double %conv253, %182, !dbg !4131
  br i1 %cmp256, label %if.then258, label %if.end263, !dbg !4132

if.then258:                                       ; preds = %if.end251
  %183 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4133
  %blue259 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %183, i32 0, i32 0, !dbg !4133
  %184 = load i16, i16* %blue259, align 2, !dbg !4133
  %conv260 = uitofp i16 %184 to double, !dbg !4134
  %185 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4135
  %arrayidx261 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %185, i64 4, !dbg !4135
  %maxima262 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx261, i32 0, i32 2, !dbg !4136
  store double %conv260, double* %maxima262, align 8, !dbg !4137
  br label %if.end263, !dbg !4135

if.end263:                                        ; preds = %if.then258, %if.end251
  %186 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4138
  %blue264 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %186, i32 0, i32 0, !dbg !4138
  %187 = load i16, i16* %blue264, align 2, !dbg !4138
  %conv265 = zext i16 %187 to i32, !dbg !4138
  %conv266 = sitofp i32 %conv265 to double, !dbg !4138
  %188 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4139
  %arrayidx267 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %188, i64 4, !dbg !4139
  %sum268 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx267, i32 0, i32 3, !dbg !4140
  %189 = load double, double* %sum268, align 8, !dbg !4141
  %add269 = fadd double %189, %conv266, !dbg !4141
  store double %add269, double* %sum268, align 8, !dbg !4141
  %190 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4142
  %blue270 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %190, i32 0, i32 0, !dbg !4142
  %191 = load i16, i16* %blue270, align 2, !dbg !4142
  %conv271 = uitofp i16 %191 to double, !dbg !4143
  %192 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4144
  %blue272 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %192, i32 0, i32 0, !dbg !4144
  %193 = load i16, i16* %blue272, align 2, !dbg !4144
  %conv273 = zext i16 %193 to i32, !dbg !4144
  %conv274 = sitofp i32 %conv273 to double, !dbg !4144
  %mul275 = fmul double %conv271, %conv274, !dbg !4145
  %194 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4146
  %arrayidx276 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %194, i64 4, !dbg !4146
  %sum_squared277 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx276, i32 0, i32 4, !dbg !4147
  %195 = load double, double* %sum_squared277, align 8, !dbg !4148
  %add278 = fadd double %195, %mul275, !dbg !4148
  store double %add278, double* %sum_squared277, align 8, !dbg !4148
  %196 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4149
  %blue279 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %196, i32 0, i32 0, !dbg !4149
  %197 = load i16, i16* %blue279, align 2, !dbg !4149
  %conv280 = uitofp i16 %197 to double, !dbg !4150
  %198 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4151
  %blue281 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %198, i32 0, i32 0, !dbg !4151
  %199 = load i16, i16* %blue281, align 2, !dbg !4151
  %conv282 = zext i16 %199 to i32, !dbg !4151
  %conv283 = sitofp i32 %conv282 to double, !dbg !4151
  %mul284 = fmul double %conv280, %conv283, !dbg !4152
  %200 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4153
  %blue285 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %200, i32 0, i32 0, !dbg !4153
  %201 = load i16, i16* %blue285, align 2, !dbg !4153
  %conv286 = zext i16 %201 to i32, !dbg !4153
  %conv287 = sitofp i32 %conv286 to double, !dbg !4153
  %mul288 = fmul double %mul284, %conv287, !dbg !4154
  %202 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4155
  %arrayidx289 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %202, i64 4, !dbg !4155
  %sum_cubed290 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx289, i32 0, i32 5, !dbg !4156
  %203 = load double, double* %sum_cubed290, align 8, !dbg !4157
  %add291 = fadd double %203, %mul288, !dbg !4157
  store double %add291, double* %sum_cubed290, align 8, !dbg !4157
  %204 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4158
  %blue292 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %204, i32 0, i32 0, !dbg !4158
  %205 = load i16, i16* %blue292, align 2, !dbg !4158
  %conv293 = uitofp i16 %205 to double, !dbg !4159
  %206 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4160
  %blue294 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %206, i32 0, i32 0, !dbg !4160
  %207 = load i16, i16* %blue294, align 2, !dbg !4160
  %conv295 = zext i16 %207 to i32, !dbg !4160
  %conv296 = sitofp i32 %conv295 to double, !dbg !4160
  %mul297 = fmul double %conv293, %conv296, !dbg !4161
  %208 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4162
  %blue298 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %208, i32 0, i32 0, !dbg !4162
  %209 = load i16, i16* %blue298, align 2, !dbg !4162
  %conv299 = zext i16 %209 to i32, !dbg !4162
  %conv300 = sitofp i32 %conv299 to double, !dbg !4162
  %mul301 = fmul double %mul297, %conv300, !dbg !4163
  %210 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4164
  %blue302 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %210, i32 0, i32 0, !dbg !4164
  %211 = load i16, i16* %blue302, align 2, !dbg !4164
  %conv303 = zext i16 %211 to i32, !dbg !4164
  %conv304 = sitofp i32 %conv303 to double, !dbg !4164
  %mul305 = fmul double %mul301, %conv304, !dbg !4165
  %212 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4166
  %arrayidx306 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %212, i64 4, !dbg !4166
  %sum_fourth_power307 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx306, i32 0, i32 6, !dbg !4167
  %213 = load double, double* %sum_fourth_power307, align 8, !dbg !4168
  %add308 = fadd double %213, %mul305, !dbg !4168
  store double %add308, double* %sum_fourth_power307, align 8, !dbg !4168
  %214 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4169
  %matte309 = getelementptr inbounds %struct._Image, %struct._Image* %214, i32 0, i32 6, !dbg !4171
  %215 = load i32, i32* %matte309, align 8, !dbg !4171
  %cmp310 = icmp ne i32 %215, 0, !dbg !4172
  br i1 %cmp310, label %if.then312, label %if.end382, !dbg !4173

if.then312:                                       ; preds = %if.end263
  %216 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4174
  %opacity313 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %216, i32 0, i32 3, !dbg !4174
  %217 = load i16, i16* %opacity313, align 2, !dbg !4174
  %conv314 = uitofp i16 %217 to double, !dbg !4177
  %218 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4178
  %arrayidx315 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %218, i64 8, !dbg !4178
  %minima316 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx315, i32 0, i32 1, !dbg !4179
  %219 = load double, double* %minima316, align 8, !dbg !4179
  %cmp317 = fcmp olt double %conv314, %219, !dbg !4180
  br i1 %cmp317, label %if.then319, label %if.end324, !dbg !4181

if.then319:                                       ; preds = %if.then312
  %220 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4182
  %opacity320 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %220, i32 0, i32 3, !dbg !4182
  %221 = load i16, i16* %opacity320, align 2, !dbg !4182
  %conv321 = uitofp i16 %221 to double, !dbg !4183
  %222 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4184
  %arrayidx322 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %222, i64 8, !dbg !4184
  %minima323 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx322, i32 0, i32 1, !dbg !4185
  store double %conv321, double* %minima323, align 8, !dbg !4186
  br label %if.end324, !dbg !4184

if.end324:                                        ; preds = %if.then319, %if.then312
  %223 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4187
  %opacity325 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %223, i32 0, i32 3, !dbg !4187
  %224 = load i16, i16* %opacity325, align 2, !dbg !4187
  %conv326 = uitofp i16 %224 to double, !dbg !4189
  %225 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4190
  %arrayidx327 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %225, i64 8, !dbg !4190
  %maxima328 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx327, i32 0, i32 2, !dbg !4191
  %226 = load double, double* %maxima328, align 8, !dbg !4191
  %cmp329 = fcmp ogt double %conv326, %226, !dbg !4192
  br i1 %cmp329, label %if.then331, label %if.end336, !dbg !4193

if.then331:                                       ; preds = %if.end324
  %227 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4194
  %opacity332 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %227, i32 0, i32 3, !dbg !4194
  %228 = load i16, i16* %opacity332, align 2, !dbg !4194
  %conv333 = uitofp i16 %228 to double, !dbg !4195
  %229 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4196
  %arrayidx334 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %229, i64 8, !dbg !4196
  %maxima335 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx334, i32 0, i32 2, !dbg !4197
  store double %conv333, double* %maxima335, align 8, !dbg !4198
  br label %if.end336, !dbg !4196

if.end336:                                        ; preds = %if.then331, %if.end324
  %230 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4199
  %opacity337 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %230, i32 0, i32 3, !dbg !4199
  %231 = load i16, i16* %opacity337, align 2, !dbg !4199
  %conv338 = zext i16 %231 to i32, !dbg !4199
  %conv339 = sitofp i32 %conv338 to double, !dbg !4199
  %232 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4200
  %arrayidx340 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %232, i64 8, !dbg !4200
  %sum341 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx340, i32 0, i32 3, !dbg !4201
  %233 = load double, double* %sum341, align 8, !dbg !4202
  %add342 = fadd double %233, %conv339, !dbg !4202
  store double %add342, double* %sum341, align 8, !dbg !4202
  %234 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4203
  %opacity343 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %234, i32 0, i32 3, !dbg !4203
  %235 = load i16, i16* %opacity343, align 2, !dbg !4203
  %conv344 = uitofp i16 %235 to double, !dbg !4204
  %236 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4205
  %opacity345 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %236, i32 0, i32 3, !dbg !4205
  %237 = load i16, i16* %opacity345, align 2, !dbg !4205
  %conv346 = zext i16 %237 to i32, !dbg !4205
  %conv347 = sitofp i32 %conv346 to double, !dbg !4205
  %mul348 = fmul double %conv344, %conv347, !dbg !4206
  %238 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4207
  %arrayidx349 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %238, i64 8, !dbg !4207
  %sum_squared350 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx349, i32 0, i32 4, !dbg !4208
  %239 = load double, double* %sum_squared350, align 8, !dbg !4209
  %add351 = fadd double %239, %mul348, !dbg !4209
  store double %add351, double* %sum_squared350, align 8, !dbg !4209
  %240 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4210
  %opacity352 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %240, i32 0, i32 3, !dbg !4210
  %241 = load i16, i16* %opacity352, align 2, !dbg !4210
  %conv353 = uitofp i16 %241 to double, !dbg !4211
  %242 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4212
  %opacity354 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %242, i32 0, i32 3, !dbg !4212
  %243 = load i16, i16* %opacity354, align 2, !dbg !4212
  %conv355 = zext i16 %243 to i32, !dbg !4212
  %conv356 = sitofp i32 %conv355 to double, !dbg !4212
  %mul357 = fmul double %conv353, %conv356, !dbg !4213
  %244 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4214
  %opacity358 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %244, i32 0, i32 3, !dbg !4214
  %245 = load i16, i16* %opacity358, align 2, !dbg !4214
  %conv359 = zext i16 %245 to i32, !dbg !4214
  %conv360 = sitofp i32 %conv359 to double, !dbg !4214
  %mul361 = fmul double %mul357, %conv360, !dbg !4215
  %246 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4216
  %arrayidx362 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %246, i64 8, !dbg !4216
  %sum_cubed363 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx362, i32 0, i32 5, !dbg !4217
  %247 = load double, double* %sum_cubed363, align 8, !dbg !4218
  %add364 = fadd double %247, %mul361, !dbg !4218
  store double %add364, double* %sum_cubed363, align 8, !dbg !4218
  %248 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4219
  %opacity365 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %248, i32 0, i32 3, !dbg !4219
  %249 = load i16, i16* %opacity365, align 2, !dbg !4219
  %conv366 = uitofp i16 %249 to double, !dbg !4220
  %250 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4221
  %opacity367 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %250, i32 0, i32 3, !dbg !4221
  %251 = load i16, i16* %opacity367, align 2, !dbg !4221
  %conv368 = zext i16 %251 to i32, !dbg !4221
  %conv369 = sitofp i32 %conv368 to double, !dbg !4221
  %mul370 = fmul double %conv366, %conv369, !dbg !4222
  %252 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4223
  %opacity371 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %252, i32 0, i32 3, !dbg !4223
  %253 = load i16, i16* %opacity371, align 2, !dbg !4223
  %conv372 = zext i16 %253 to i32, !dbg !4223
  %conv373 = sitofp i32 %conv372 to double, !dbg !4223
  %mul374 = fmul double %mul370, %conv373, !dbg !4224
  %254 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4225
  %opacity375 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %254, i32 0, i32 3, !dbg !4225
  %255 = load i16, i16* %opacity375, align 2, !dbg !4225
  %conv376 = zext i16 %255 to i32, !dbg !4225
  %conv377 = sitofp i32 %conv376 to double, !dbg !4225
  %mul378 = fmul double %mul374, %conv377, !dbg !4226
  %256 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4227
  %arrayidx379 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %256, i64 8, !dbg !4227
  %sum_fourth_power380 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx379, i32 0, i32 6, !dbg !4228
  %257 = load double, double* %sum_fourth_power380, align 8, !dbg !4229
  %add381 = fadd double %257, %mul378, !dbg !4229
  store double %add381, double* %sum_fourth_power380, align 8, !dbg !4229
  br label %if.end382, !dbg !4230

if.end382:                                        ; preds = %if.end336, %if.end263
  %258 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4231
  %colorspace383 = getelementptr inbounds %struct._Image, %struct._Image* %258, i32 0, i32 1, !dbg !4233
  %259 = load i32, i32* %colorspace383, align 4, !dbg !4233
  %cmp384 = icmp eq i32 %259, 12, !dbg !4234
  br i1 %cmp384, label %if.then386, label %if.end561, !dbg !4235

if.then386:                                       ; preds = %if.end382
  %260 = load i16*, i16** %indexes, align 8, !dbg !4236
  %261 = load i64, i64* %x, align 8, !dbg !4236
  %add.ptr387 = getelementptr inbounds i16, i16* %260, i64 %261, !dbg !4236
  %cmp388 = icmp eq i16* %add.ptr387, null, !dbg !4236
  br i1 %cmp388, label %cond.true390, label %cond.false391, !dbg !4236

cond.true390:                                     ; preds = %if.then386
  br label %cond.end394, !dbg !4236

cond.false391:                                    ; preds = %if.then386
  %262 = load i16*, i16** %indexes, align 8, !dbg !4236
  %263 = load i64, i64* %x, align 8, !dbg !4236
  %add.ptr392 = getelementptr inbounds i16, i16* %262, i64 %263, !dbg !4236
  %264 = load i16, i16* %add.ptr392, align 2, !dbg !4236
  %conv393 = zext i16 %264 to i32, !dbg !4236
  br label %cond.end394, !dbg !4236

cond.end394:                                      ; preds = %cond.false391, %cond.true390
  %cond395 = phi i32 [ 0, %cond.true390 ], [ %conv393, %cond.false391 ], !dbg !4236
  %conv396 = sitofp i32 %cond395 to double, !dbg !4239
  %265 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4240
  %arrayidx397 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %265, i64 32, !dbg !4240
  %minima398 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx397, i32 0, i32 1, !dbg !4241
  %266 = load double, double* %minima398, align 8, !dbg !4241
  %cmp399 = fcmp olt double %conv396, %266, !dbg !4242
  br i1 %cmp399, label %if.then401, label %if.end414, !dbg !4243

if.then401:                                       ; preds = %cond.end394
  %267 = load i16*, i16** %indexes, align 8, !dbg !4244
  %268 = load i64, i64* %x, align 8, !dbg !4244
  %add.ptr402 = getelementptr inbounds i16, i16* %267, i64 %268, !dbg !4244
  %cmp403 = icmp eq i16* %add.ptr402, null, !dbg !4244
  br i1 %cmp403, label %cond.true405, label %cond.false406, !dbg !4244

cond.true405:                                     ; preds = %if.then401
  br label %cond.end409, !dbg !4244

cond.false406:                                    ; preds = %if.then401
  %269 = load i16*, i16** %indexes, align 8, !dbg !4244
  %270 = load i64, i64* %x, align 8, !dbg !4244
  %add.ptr407 = getelementptr inbounds i16, i16* %269, i64 %270, !dbg !4244
  %271 = load i16, i16* %add.ptr407, align 2, !dbg !4244
  %conv408 = zext i16 %271 to i32, !dbg !4244
  br label %cond.end409, !dbg !4244

cond.end409:                                      ; preds = %cond.false406, %cond.true405
  %cond410 = phi i32 [ 0, %cond.true405 ], [ %conv408, %cond.false406 ], !dbg !4244
  %conv411 = sitofp i32 %cond410 to double, !dbg !4245
  %272 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4246
  %arrayidx412 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %272, i64 32, !dbg !4246
  %minima413 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx412, i32 0, i32 1, !dbg !4247
  store double %conv411, double* %minima413, align 8, !dbg !4248
  br label %if.end414, !dbg !4246

if.end414:                                        ; preds = %cond.end409, %cond.end394
  %273 = load i16*, i16** %indexes, align 8, !dbg !4249
  %274 = load i64, i64* %x, align 8, !dbg !4249
  %add.ptr415 = getelementptr inbounds i16, i16* %273, i64 %274, !dbg !4249
  %cmp416 = icmp eq i16* %add.ptr415, null, !dbg !4249
  br i1 %cmp416, label %cond.true418, label %cond.false419, !dbg !4249

cond.true418:                                     ; preds = %if.end414
  br label %cond.end422, !dbg !4249

cond.false419:                                    ; preds = %if.end414
  %275 = load i16*, i16** %indexes, align 8, !dbg !4249
  %276 = load i64, i64* %x, align 8, !dbg !4249
  %add.ptr420 = getelementptr inbounds i16, i16* %275, i64 %276, !dbg !4249
  %277 = load i16, i16* %add.ptr420, align 2, !dbg !4249
  %conv421 = zext i16 %277 to i32, !dbg !4249
  br label %cond.end422, !dbg !4249

cond.end422:                                      ; preds = %cond.false419, %cond.true418
  %cond423 = phi i32 [ 0, %cond.true418 ], [ %conv421, %cond.false419 ], !dbg !4249
  %conv424 = sitofp i32 %cond423 to double, !dbg !4251
  %278 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4252
  %arrayidx425 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %278, i64 32, !dbg !4252
  %maxima426 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx425, i32 0, i32 2, !dbg !4253
  %279 = load double, double* %maxima426, align 8, !dbg !4253
  %cmp427 = fcmp ogt double %conv424, %279, !dbg !4254
  br i1 %cmp427, label %if.then429, label %if.end442, !dbg !4255

if.then429:                                       ; preds = %cond.end422
  %280 = load i16*, i16** %indexes, align 8, !dbg !4256
  %281 = load i64, i64* %x, align 8, !dbg !4256
  %add.ptr430 = getelementptr inbounds i16, i16* %280, i64 %281, !dbg !4256
  %cmp431 = icmp eq i16* %add.ptr430, null, !dbg !4256
  br i1 %cmp431, label %cond.true433, label %cond.false434, !dbg !4256

cond.true433:                                     ; preds = %if.then429
  br label %cond.end437, !dbg !4256

cond.false434:                                    ; preds = %if.then429
  %282 = load i16*, i16** %indexes, align 8, !dbg !4256
  %283 = load i64, i64* %x, align 8, !dbg !4256
  %add.ptr435 = getelementptr inbounds i16, i16* %282, i64 %283, !dbg !4256
  %284 = load i16, i16* %add.ptr435, align 2, !dbg !4256
  %conv436 = zext i16 %284 to i32, !dbg !4256
  br label %cond.end437, !dbg !4256

cond.end437:                                      ; preds = %cond.false434, %cond.true433
  %cond438 = phi i32 [ 0, %cond.true433 ], [ %conv436, %cond.false434 ], !dbg !4256
  %conv439 = sitofp i32 %cond438 to double, !dbg !4257
  %285 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4258
  %arrayidx440 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %285, i64 32, !dbg !4258
  %maxima441 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx440, i32 0, i32 2, !dbg !4259
  store double %conv439, double* %maxima441, align 8, !dbg !4260
  br label %if.end442, !dbg !4258

if.end442:                                        ; preds = %cond.end437, %cond.end422
  %286 = load i16*, i16** %indexes, align 8, !dbg !4261
  %287 = load i64, i64* %x, align 8, !dbg !4261
  %add.ptr443 = getelementptr inbounds i16, i16* %286, i64 %287, !dbg !4261
  %cmp444 = icmp eq i16* %add.ptr443, null, !dbg !4261
  br i1 %cmp444, label %cond.true446, label %cond.false447, !dbg !4261

cond.true446:                                     ; preds = %if.end442
  br label %cond.end450, !dbg !4261

cond.false447:                                    ; preds = %if.end442
  %288 = load i16*, i16** %indexes, align 8, !dbg !4261
  %289 = load i64, i64* %x, align 8, !dbg !4261
  %add.ptr448 = getelementptr inbounds i16, i16* %288, i64 %289, !dbg !4261
  %290 = load i16, i16* %add.ptr448, align 2, !dbg !4261
  %conv449 = zext i16 %290 to i32, !dbg !4261
  br label %cond.end450, !dbg !4261

cond.end450:                                      ; preds = %cond.false447, %cond.true446
  %cond451 = phi i32 [ 0, %cond.true446 ], [ %conv449, %cond.false447 ], !dbg !4261
  %conv452 = sitofp i32 %cond451 to double, !dbg !4261
  %291 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4262
  %arrayidx453 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %291, i64 32, !dbg !4262
  %sum454 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx453, i32 0, i32 3, !dbg !4263
  %292 = load double, double* %sum454, align 8, !dbg !4264
  %add455 = fadd double %292, %conv452, !dbg !4264
  store double %add455, double* %sum454, align 8, !dbg !4264
  %293 = load i16*, i16** %indexes, align 8, !dbg !4265
  %294 = load i64, i64* %x, align 8, !dbg !4265
  %add.ptr456 = getelementptr inbounds i16, i16* %293, i64 %294, !dbg !4265
  %cmp457 = icmp eq i16* %add.ptr456, null, !dbg !4265
  br i1 %cmp457, label %cond.true459, label %cond.false460, !dbg !4265

cond.true459:                                     ; preds = %cond.end450
  br label %cond.end463, !dbg !4265

cond.false460:                                    ; preds = %cond.end450
  %295 = load i16*, i16** %indexes, align 8, !dbg !4265
  %296 = load i64, i64* %x, align 8, !dbg !4265
  %add.ptr461 = getelementptr inbounds i16, i16* %295, i64 %296, !dbg !4265
  %297 = load i16, i16* %add.ptr461, align 2, !dbg !4265
  %conv462 = zext i16 %297 to i32, !dbg !4265
  br label %cond.end463, !dbg !4265

cond.end463:                                      ; preds = %cond.false460, %cond.true459
  %cond464 = phi i32 [ 0, %cond.true459 ], [ %conv462, %cond.false460 ], !dbg !4265
  %conv465 = sitofp i32 %cond464 to double, !dbg !4266
  %298 = load i16*, i16** %indexes, align 8, !dbg !4267
  %299 = load i64, i64* %x, align 8, !dbg !4267
  %add.ptr466 = getelementptr inbounds i16, i16* %298, i64 %299, !dbg !4267
  %cmp467 = icmp eq i16* %add.ptr466, null, !dbg !4267
  br i1 %cmp467, label %cond.true469, label %cond.false470, !dbg !4267

cond.true469:                                     ; preds = %cond.end463
  br label %cond.end473, !dbg !4267

cond.false470:                                    ; preds = %cond.end463
  %300 = load i16*, i16** %indexes, align 8, !dbg !4267
  %301 = load i64, i64* %x, align 8, !dbg !4267
  %add.ptr471 = getelementptr inbounds i16, i16* %300, i64 %301, !dbg !4267
  %302 = load i16, i16* %add.ptr471, align 2, !dbg !4267
  %conv472 = zext i16 %302 to i32, !dbg !4267
  br label %cond.end473, !dbg !4267

cond.end473:                                      ; preds = %cond.false470, %cond.true469
  %cond474 = phi i32 [ 0, %cond.true469 ], [ %conv472, %cond.false470 ], !dbg !4267
  %conv475 = sitofp i32 %cond474 to double, !dbg !4267
  %mul476 = fmul double %conv465, %conv475, !dbg !4268
  %303 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4269
  %arrayidx477 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %303, i64 32, !dbg !4269
  %sum_squared478 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx477, i32 0, i32 4, !dbg !4270
  %304 = load double, double* %sum_squared478, align 8, !dbg !4271
  %add479 = fadd double %304, %mul476, !dbg !4271
  store double %add479, double* %sum_squared478, align 8, !dbg !4271
  %305 = load i16*, i16** %indexes, align 8, !dbg !4272
  %306 = load i64, i64* %x, align 8, !dbg !4272
  %add.ptr480 = getelementptr inbounds i16, i16* %305, i64 %306, !dbg !4272
  %cmp481 = icmp eq i16* %add.ptr480, null, !dbg !4272
  br i1 %cmp481, label %cond.true483, label %cond.false484, !dbg !4272

cond.true483:                                     ; preds = %cond.end473
  br label %cond.end487, !dbg !4272

cond.false484:                                    ; preds = %cond.end473
  %307 = load i16*, i16** %indexes, align 8, !dbg !4272
  %308 = load i64, i64* %x, align 8, !dbg !4272
  %add.ptr485 = getelementptr inbounds i16, i16* %307, i64 %308, !dbg !4272
  %309 = load i16, i16* %add.ptr485, align 2, !dbg !4272
  %conv486 = zext i16 %309 to i32, !dbg !4272
  br label %cond.end487, !dbg !4272

cond.end487:                                      ; preds = %cond.false484, %cond.true483
  %cond488 = phi i32 [ 0, %cond.true483 ], [ %conv486, %cond.false484 ], !dbg !4272
  %conv489 = sitofp i32 %cond488 to double, !dbg !4273
  %310 = load i16*, i16** %indexes, align 8, !dbg !4274
  %311 = load i64, i64* %x, align 8, !dbg !4274
  %add.ptr490 = getelementptr inbounds i16, i16* %310, i64 %311, !dbg !4274
  %cmp491 = icmp eq i16* %add.ptr490, null, !dbg !4274
  br i1 %cmp491, label %cond.true493, label %cond.false494, !dbg !4274

cond.true493:                                     ; preds = %cond.end487
  br label %cond.end497, !dbg !4274

cond.false494:                                    ; preds = %cond.end487
  %312 = load i16*, i16** %indexes, align 8, !dbg !4274
  %313 = load i64, i64* %x, align 8, !dbg !4274
  %add.ptr495 = getelementptr inbounds i16, i16* %312, i64 %313, !dbg !4274
  %314 = load i16, i16* %add.ptr495, align 2, !dbg !4274
  %conv496 = zext i16 %314 to i32, !dbg !4274
  br label %cond.end497, !dbg !4274

cond.end497:                                      ; preds = %cond.false494, %cond.true493
  %cond498 = phi i32 [ 0, %cond.true493 ], [ %conv496, %cond.false494 ], !dbg !4274
  %conv499 = sitofp i32 %cond498 to double, !dbg !4274
  %mul500 = fmul double %conv489, %conv499, !dbg !4275
  %315 = load i16*, i16** %indexes, align 8, !dbg !4276
  %316 = load i64, i64* %x, align 8, !dbg !4276
  %add.ptr501 = getelementptr inbounds i16, i16* %315, i64 %316, !dbg !4276
  %cmp502 = icmp eq i16* %add.ptr501, null, !dbg !4276
  br i1 %cmp502, label %cond.true504, label %cond.false505, !dbg !4276

cond.true504:                                     ; preds = %cond.end497
  br label %cond.end508, !dbg !4276

cond.false505:                                    ; preds = %cond.end497
  %317 = load i16*, i16** %indexes, align 8, !dbg !4276
  %318 = load i64, i64* %x, align 8, !dbg !4276
  %add.ptr506 = getelementptr inbounds i16, i16* %317, i64 %318, !dbg !4276
  %319 = load i16, i16* %add.ptr506, align 2, !dbg !4276
  %conv507 = zext i16 %319 to i32, !dbg !4276
  br label %cond.end508, !dbg !4276

cond.end508:                                      ; preds = %cond.false505, %cond.true504
  %cond509 = phi i32 [ 0, %cond.true504 ], [ %conv507, %cond.false505 ], !dbg !4276
  %conv510 = sitofp i32 %cond509 to double, !dbg !4276
  %mul511 = fmul double %mul500, %conv510, !dbg !4277
  %320 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4278
  %arrayidx512 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %320, i64 32, !dbg !4278
  %sum_cubed513 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx512, i32 0, i32 5, !dbg !4279
  %321 = load double, double* %sum_cubed513, align 8, !dbg !4280
  %add514 = fadd double %321, %mul511, !dbg !4280
  store double %add514, double* %sum_cubed513, align 8, !dbg !4280
  %322 = load i16*, i16** %indexes, align 8, !dbg !4281
  %323 = load i64, i64* %x, align 8, !dbg !4281
  %add.ptr515 = getelementptr inbounds i16, i16* %322, i64 %323, !dbg !4281
  %cmp516 = icmp eq i16* %add.ptr515, null, !dbg !4281
  br i1 %cmp516, label %cond.true518, label %cond.false519, !dbg !4281

cond.true518:                                     ; preds = %cond.end508
  br label %cond.end522, !dbg !4281

cond.false519:                                    ; preds = %cond.end508
  %324 = load i16*, i16** %indexes, align 8, !dbg !4281
  %325 = load i64, i64* %x, align 8, !dbg !4281
  %add.ptr520 = getelementptr inbounds i16, i16* %324, i64 %325, !dbg !4281
  %326 = load i16, i16* %add.ptr520, align 2, !dbg !4281
  %conv521 = zext i16 %326 to i32, !dbg !4281
  br label %cond.end522, !dbg !4281

cond.end522:                                      ; preds = %cond.false519, %cond.true518
  %cond523 = phi i32 [ 0, %cond.true518 ], [ %conv521, %cond.false519 ], !dbg !4281
  %conv524 = sitofp i32 %cond523 to double, !dbg !4282
  %327 = load i16*, i16** %indexes, align 8, !dbg !4283
  %328 = load i64, i64* %x, align 8, !dbg !4283
  %add.ptr525 = getelementptr inbounds i16, i16* %327, i64 %328, !dbg !4283
  %cmp526 = icmp eq i16* %add.ptr525, null, !dbg !4283
  br i1 %cmp526, label %cond.true528, label %cond.false529, !dbg !4283

cond.true528:                                     ; preds = %cond.end522
  br label %cond.end532, !dbg !4283

cond.false529:                                    ; preds = %cond.end522
  %329 = load i16*, i16** %indexes, align 8, !dbg !4283
  %330 = load i64, i64* %x, align 8, !dbg !4283
  %add.ptr530 = getelementptr inbounds i16, i16* %329, i64 %330, !dbg !4283
  %331 = load i16, i16* %add.ptr530, align 2, !dbg !4283
  %conv531 = zext i16 %331 to i32, !dbg !4283
  br label %cond.end532, !dbg !4283

cond.end532:                                      ; preds = %cond.false529, %cond.true528
  %cond533 = phi i32 [ 0, %cond.true528 ], [ %conv531, %cond.false529 ], !dbg !4283
  %conv534 = sitofp i32 %cond533 to double, !dbg !4283
  %mul535 = fmul double %conv524, %conv534, !dbg !4284
  %332 = load i16*, i16** %indexes, align 8, !dbg !4285
  %333 = load i64, i64* %x, align 8, !dbg !4285
  %add.ptr536 = getelementptr inbounds i16, i16* %332, i64 %333, !dbg !4285
  %cmp537 = icmp eq i16* %add.ptr536, null, !dbg !4285
  br i1 %cmp537, label %cond.true539, label %cond.false540, !dbg !4285

cond.true539:                                     ; preds = %cond.end532
  br label %cond.end543, !dbg !4285

cond.false540:                                    ; preds = %cond.end532
  %334 = load i16*, i16** %indexes, align 8, !dbg !4285
  %335 = load i64, i64* %x, align 8, !dbg !4285
  %add.ptr541 = getelementptr inbounds i16, i16* %334, i64 %335, !dbg !4285
  %336 = load i16, i16* %add.ptr541, align 2, !dbg !4285
  %conv542 = zext i16 %336 to i32, !dbg !4285
  br label %cond.end543, !dbg !4285

cond.end543:                                      ; preds = %cond.false540, %cond.true539
  %cond544 = phi i32 [ 0, %cond.true539 ], [ %conv542, %cond.false540 ], !dbg !4285
  %conv545 = sitofp i32 %cond544 to double, !dbg !4285
  %mul546 = fmul double %mul535, %conv545, !dbg !4286
  %337 = load i16*, i16** %indexes, align 8, !dbg !4287
  %338 = load i64, i64* %x, align 8, !dbg !4287
  %add.ptr547 = getelementptr inbounds i16, i16* %337, i64 %338, !dbg !4287
  %cmp548 = icmp eq i16* %add.ptr547, null, !dbg !4287
  br i1 %cmp548, label %cond.true550, label %cond.false551, !dbg !4287

cond.true550:                                     ; preds = %cond.end543
  br label %cond.end554, !dbg !4287

cond.false551:                                    ; preds = %cond.end543
  %339 = load i16*, i16** %indexes, align 8, !dbg !4287
  %340 = load i64, i64* %x, align 8, !dbg !4287
  %add.ptr552 = getelementptr inbounds i16, i16* %339, i64 %340, !dbg !4287
  %341 = load i16, i16* %add.ptr552, align 2, !dbg !4287
  %conv553 = zext i16 %341 to i32, !dbg !4287
  br label %cond.end554, !dbg !4287

cond.end554:                                      ; preds = %cond.false551, %cond.true550
  %cond555 = phi i32 [ 0, %cond.true550 ], [ %conv553, %cond.false551 ], !dbg !4287
  %conv556 = sitofp i32 %cond555 to double, !dbg !4287
  %mul557 = fmul double %mul546, %conv556, !dbg !4288
  %342 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4289
  %arrayidx558 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %342, i64 32, !dbg !4289
  %sum_fourth_power559 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx558, i32 0, i32 6, !dbg !4290
  %343 = load double, double* %sum_fourth_power559, align 8, !dbg !4291
  %add560 = fadd double %343, %mul557, !dbg !4291
  store double %add560, double* %sum_fourth_power559, align 8, !dbg !4291
  br label %if.end561, !dbg !4292

if.end561:                                        ; preds = %cond.end554, %if.end382
  %344 = load i64, i64* %x, align 8, !dbg !4293
  %inc562 = add nsw i64 %344, 1, !dbg !4293
  store i64 %inc562, i64* %x, align 8, !dbg !4293
  %345 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4294
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %345, i32 1, !dbg !4294
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %p, align 8, !dbg !4294
  br label %for.cond18, !dbg !4295, !llvm.loop !3891

for.end563:                                       ; preds = %for.cond18
  br label %for.inc564, !dbg !4296

for.inc564:                                       ; preds = %for.end563
  %346 = load i64, i64* %y, align 8, !dbg !4297
  %inc565 = add nsw i64 %346, 1, !dbg !4297
  store i64 %inc565, i64* %y, align 8, !dbg !4297
  br label %for.cond10, !dbg !4298, !llvm.loop !4299

for.end566:                                       ; preds = %if.then15, %for.cond10
  %347 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4301
  %columns567 = getelementptr inbounds %struct._Image, %struct._Image* %347, i32 0, i32 7, !dbg !4302
  %348 = load i64, i64* %columns567, align 8, !dbg !4302
  %conv568 = uitofp i64 %348 to double, !dbg !4303
  %349 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4304
  %rows569 = getelementptr inbounds %struct._Image, %struct._Image* %349, i32 0, i32 8, !dbg !4305
  %350 = load i64, i64* %rows569, align 8, !dbg !4305
  %conv570 = uitofp i64 %350 to double, !dbg !4304
  %mul571 = fmul double %conv568, %conv570, !dbg !4306
  store double %mul571, double* %area, align 8, !dbg !4307
  store i64 0, i64* %i, align 8, !dbg !4308
  br label %for.cond572, !dbg !4310

for.cond572:                                      ; preds = %for.inc599, %for.end566
  %351 = load i64, i64* %i, align 8, !dbg !4311
  %cmp573 = icmp slt i64 %351, 47, !dbg !4313
  br i1 %cmp573, label %for.body575, label %for.end601, !dbg !4314

for.body575:                                      ; preds = %for.cond572
  call void @llvm.dbg.declare(metadata double* %sum576, metadata !4315, metadata !DIExpression()), !dbg !4317
  %352 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4318
  %353 = load i64, i64* %i, align 8, !dbg !4319
  %arrayidx577 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %352, i64 %353, !dbg !4318
  %sum578 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx577, i32 0, i32 3, !dbg !4320
  %354 = load double, double* %sum578, align 8, !dbg !4320
  %355 = load double, double* %area, align 8, !dbg !4321
  %div = fdiv double %354, %355, !dbg !4322
  store double %div, double* %sum576, align 8, !dbg !4323
  %356 = load double, double* %sum576, align 8, !dbg !4324
  %357 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4325
  %358 = load i64, i64* %i, align 8, !dbg !4326
  %arrayidx579 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %357, i64 %358, !dbg !4325
  %sum580 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx579, i32 0, i32 3, !dbg !4327
  store double %356, double* %sum580, align 8, !dbg !4328
  %359 = load double, double* %area, align 8, !dbg !4329
  %360 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4330
  %361 = load i64, i64* %i, align 8, !dbg !4331
  %arrayidx581 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %360, i64 %361, !dbg !4330
  %sum_squared582 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx581, i32 0, i32 4, !dbg !4332
  %362 = load double, double* %sum_squared582, align 8, !dbg !4333
  %div583 = fdiv double %362, %359, !dbg !4333
  store double %div583, double* %sum_squared582, align 8, !dbg !4333
  %363 = load double, double* %area, align 8, !dbg !4334
  %364 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4335
  %365 = load i64, i64* %i, align 8, !dbg !4336
  %arrayidx584 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %364, i64 %365, !dbg !4335
  %sum_cubed585 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx584, i32 0, i32 5, !dbg !4337
  %366 = load double, double* %sum_cubed585, align 8, !dbg !4338
  %div586 = fdiv double %366, %363, !dbg !4338
  store double %div586, double* %sum_cubed585, align 8, !dbg !4338
  %367 = load double, double* %area, align 8, !dbg !4339
  %368 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4340
  %369 = load i64, i64* %i, align 8, !dbg !4341
  %arrayidx587 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %368, i64 %369, !dbg !4340
  %sum_fourth_power588 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx587, i32 0, i32 6, !dbg !4342
  %370 = load double, double* %sum_fourth_power588, align 8, !dbg !4343
  %div589 = fdiv double %370, %367, !dbg !4343
  store double %div589, double* %sum_fourth_power588, align 8, !dbg !4343
  %371 = load double, double* %sum576, align 8, !dbg !4344
  %372 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4345
  %373 = load i64, i64* %i, align 8, !dbg !4346
  %arrayidx590 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %372, i64 %373, !dbg !4345
  %mean = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx590, i32 0, i32 7, !dbg !4347
  store double %371, double* %mean, align 8, !dbg !4348
  %374 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4349
  %375 = load i64, i64* %i, align 8, !dbg !4350
  %arrayidx591 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %374, i64 %375, !dbg !4349
  %sum_squared592 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx591, i32 0, i32 4, !dbg !4351
  %376 = load double, double* %sum_squared592, align 8, !dbg !4351
  %377 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4352
  %378 = load i64, i64* %i, align 8, !dbg !4353
  %arrayidx593 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %377, i64 %378, !dbg !4352
  %variance = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx593, i32 0, i32 8, !dbg !4354
  store double %376, double* %variance, align 8, !dbg !4355
  %379 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4356
  %380 = load i64, i64* %i, align 8, !dbg !4357
  %arrayidx594 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %379, i64 %380, !dbg !4356
  %variance595 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx594, i32 0, i32 8, !dbg !4358
  %381 = load double, double* %variance595, align 8, !dbg !4358
  %382 = load double, double* %sum576, align 8, !dbg !4359
  %383 = load double, double* %sum576, align 8, !dbg !4360
  %mul596 = fmul double %382, %383, !dbg !4361
  %sub = fsub double %381, %mul596, !dbg !4362
  %call597 = call double @sqrt(double %sub) #8, !dbg !4363
  %384 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4364
  %385 = load i64, i64* %i, align 8, !dbg !4365
  %arrayidx598 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %384, i64 %385, !dbg !4364
  %standard_deviation = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx598, i32 0, i32 9, !dbg !4366
  store double %call597, double* %standard_deviation, align 8, !dbg !4367
  br label %for.inc599, !dbg !4368

for.inc599:                                       ; preds = %for.body575
  %386 = load i64, i64* %i, align 8, !dbg !4369
  %inc600 = add nsw i64 %386, 1, !dbg !4369
  store i64 %inc600, i64* %i, align 8, !dbg !4369
  br label %for.cond572, !dbg !4370, !llvm.loop !4371

for.end601:                                       ; preds = %for.cond572
  store i64 0, i64* %i, align 8, !dbg !4373
  br label %for.cond602, !dbg !4375

for.cond602:                                      ; preds = %for.inc677, %for.end601
  %387 = load i64, i64* %i, align 8, !dbg !4376
  %cmp603 = icmp slt i64 %387, 47, !dbg !4378
  br i1 %cmp603, label %for.body605, label %for.end679, !dbg !4379

for.body605:                                      ; preds = %for.cond602
  %388 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4380
  %arrayidx606 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %388, i64 47, !dbg !4380
  %depth607 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx606, i32 0, i32 0, !dbg !4382
  %389 = load i64, i64* %depth607, align 8, !dbg !4382
  %conv608 = uitofp i64 %389 to double, !dbg !4383
  %390 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4384
  %391 = load i64, i64* %i, align 8, !dbg !4385
  %arrayidx609 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %390, i64 %391, !dbg !4384
  %depth610 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx609, i32 0, i32 0, !dbg !4386
  %392 = load i64, i64* %depth610, align 8, !dbg !4386
  %conv611 = uitofp i64 %392 to double, !dbg !4387
  %call612 = call double @EvaluateMax(double %conv608, double %conv611), !dbg !4388
  %conv613 = fptoui double %call612 to i64, !dbg !4389
  %393 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4390
  %arrayidx614 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %393, i64 47, !dbg !4390
  %depth615 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx614, i32 0, i32 0, !dbg !4391
  store i64 %conv613, i64* %depth615, align 8, !dbg !4392
  %394 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4393
  %arrayidx616 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %394, i64 47, !dbg !4393
  %minima617 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx616, i32 0, i32 1, !dbg !4394
  %395 = load double, double* %minima617, align 8, !dbg !4394
  %396 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4395
  %397 = load i64, i64* %i, align 8, !dbg !4396
  %arrayidx618 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %396, i64 %397, !dbg !4395
  %minima619 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx618, i32 0, i32 1, !dbg !4397
  %398 = load double, double* %minima619, align 8, !dbg !4397
  %call620 = call double @MagickMin(double %395, double %398), !dbg !4398
  %399 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4399
  %arrayidx621 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %399, i64 47, !dbg !4399
  %minima622 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx621, i32 0, i32 1, !dbg !4400
  store double %call620, double* %minima622, align 8, !dbg !4401
  %400 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4402
  %arrayidx623 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %400, i64 47, !dbg !4402
  %maxima624 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx623, i32 0, i32 2, !dbg !4403
  %401 = load double, double* %maxima624, align 8, !dbg !4403
  %402 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4404
  %403 = load i64, i64* %i, align 8, !dbg !4405
  %arrayidx625 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %402, i64 %403, !dbg !4404
  %maxima626 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx625, i32 0, i32 2, !dbg !4406
  %404 = load double, double* %maxima626, align 8, !dbg !4406
  %call627 = call double @EvaluateMax(double %401, double %404), !dbg !4407
  %405 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4408
  %arrayidx628 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %405, i64 47, !dbg !4408
  %maxima629 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx628, i32 0, i32 2, !dbg !4409
  store double %call627, double* %maxima629, align 8, !dbg !4410
  %406 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4411
  %407 = load i64, i64* %i, align 8, !dbg !4412
  %arrayidx630 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %406, i64 %407, !dbg !4411
  %sum631 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx630, i32 0, i32 3, !dbg !4413
  %408 = load double, double* %sum631, align 8, !dbg !4413
  %409 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4414
  %arrayidx632 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %409, i64 47, !dbg !4414
  %sum633 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx632, i32 0, i32 3, !dbg !4415
  %410 = load double, double* %sum633, align 8, !dbg !4416
  %add634 = fadd double %410, %408, !dbg !4416
  store double %add634, double* %sum633, align 8, !dbg !4416
  %411 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4417
  %412 = load i64, i64* %i, align 8, !dbg !4418
  %arrayidx635 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %411, i64 %412, !dbg !4417
  %sum_squared636 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx635, i32 0, i32 4, !dbg !4419
  %413 = load double, double* %sum_squared636, align 8, !dbg !4419
  %414 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4420
  %arrayidx637 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %414, i64 47, !dbg !4420
  %sum_squared638 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx637, i32 0, i32 4, !dbg !4421
  %415 = load double, double* %sum_squared638, align 8, !dbg !4422
  %add639 = fadd double %415, %413, !dbg !4422
  store double %add639, double* %sum_squared638, align 8, !dbg !4422
  %416 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4423
  %417 = load i64, i64* %i, align 8, !dbg !4424
  %arrayidx640 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %416, i64 %417, !dbg !4423
  %sum_cubed641 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx640, i32 0, i32 5, !dbg !4425
  %418 = load double, double* %sum_cubed641, align 8, !dbg !4425
  %419 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4426
  %arrayidx642 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %419, i64 47, !dbg !4426
  %sum_cubed643 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx642, i32 0, i32 5, !dbg !4427
  %420 = load double, double* %sum_cubed643, align 8, !dbg !4428
  %add644 = fadd double %420, %418, !dbg !4428
  store double %add644, double* %sum_cubed643, align 8, !dbg !4428
  %421 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4429
  %422 = load i64, i64* %i, align 8, !dbg !4430
  %arrayidx645 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %421, i64 %422, !dbg !4429
  %sum_fourth_power646 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx645, i32 0, i32 6, !dbg !4431
  %423 = load double, double* %sum_fourth_power646, align 8, !dbg !4431
  %424 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4432
  %arrayidx647 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %424, i64 47, !dbg !4432
  %sum_fourth_power648 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx647, i32 0, i32 6, !dbg !4433
  %425 = load double, double* %sum_fourth_power648, align 8, !dbg !4434
  %add649 = fadd double %425, %423, !dbg !4434
  store double %add649, double* %sum_fourth_power648, align 8, !dbg !4434
  %426 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4435
  %427 = load i64, i64* %i, align 8, !dbg !4436
  %arrayidx650 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %426, i64 %427, !dbg !4435
  %mean651 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx650, i32 0, i32 7, !dbg !4437
  %428 = load double, double* %mean651, align 8, !dbg !4437
  %429 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4438
  %arrayidx652 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %429, i64 47, !dbg !4438
  %mean653 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx652, i32 0, i32 7, !dbg !4439
  %430 = load double, double* %mean653, align 8, !dbg !4440
  %add654 = fadd double %430, %428, !dbg !4440
  store double %add654, double* %mean653, align 8, !dbg !4440
  %431 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4441
  %432 = load i64, i64* %i, align 8, !dbg !4442
  %arrayidx655 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %431, i64 %432, !dbg !4441
  %variance656 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx655, i32 0, i32 8, !dbg !4443
  %433 = load double, double* %variance656, align 8, !dbg !4443
  %434 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4444
  %435 = load i64, i64* %i, align 8, !dbg !4445
  %arrayidx657 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %434, i64 %435, !dbg !4444
  %mean658 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx657, i32 0, i32 7, !dbg !4446
  %436 = load double, double* %mean658, align 8, !dbg !4446
  %437 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4447
  %438 = load i64, i64* %i, align 8, !dbg !4448
  %arrayidx659 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %437, i64 %438, !dbg !4447
  %mean660 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx659, i32 0, i32 7, !dbg !4449
  %439 = load double, double* %mean660, align 8, !dbg !4449
  %mul661 = fmul double %436, %439, !dbg !4450
  %sub662 = fsub double %433, %mul661, !dbg !4451
  %440 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4452
  %arrayidx663 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %440, i64 47, !dbg !4452
  %variance664 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx663, i32 0, i32 8, !dbg !4453
  %441 = load double, double* %variance664, align 8, !dbg !4454
  %add665 = fadd double %441, %sub662, !dbg !4454
  store double %add665, double* %variance664, align 8, !dbg !4454
  %442 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4455
  %443 = load i64, i64* %i, align 8, !dbg !4456
  %arrayidx666 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %442, i64 %443, !dbg !4455
  %variance667 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx666, i32 0, i32 8, !dbg !4457
  %444 = load double, double* %variance667, align 8, !dbg !4457
  %445 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4458
  %446 = load i64, i64* %i, align 8, !dbg !4459
  %arrayidx668 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %445, i64 %446, !dbg !4458
  %mean669 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx668, i32 0, i32 7, !dbg !4460
  %447 = load double, double* %mean669, align 8, !dbg !4460
  %448 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4461
  %449 = load i64, i64* %i, align 8, !dbg !4462
  %arrayidx670 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %448, i64 %449, !dbg !4461
  %mean671 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx670, i32 0, i32 7, !dbg !4463
  %450 = load double, double* %mean671, align 8, !dbg !4463
  %mul672 = fmul double %447, %450, !dbg !4464
  %sub673 = fsub double %444, %mul672, !dbg !4465
  %451 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4466
  %arrayidx674 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %451, i64 47, !dbg !4466
  %standard_deviation675 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx674, i32 0, i32 9, !dbg !4467
  %452 = load double, double* %standard_deviation675, align 8, !dbg !4468
  %add676 = fadd double %452, %sub673, !dbg !4468
  store double %add676, double* %standard_deviation675, align 8, !dbg !4468
  br label %for.inc677, !dbg !4469

for.inc677:                                       ; preds = %for.body605
  %453 = load i64, i64* %i, align 8, !dbg !4470
  %inc678 = add nsw i64 %453, 1, !dbg !4470
  store i64 %inc678, i64* %i, align 8, !dbg !4470
  br label %for.cond602, !dbg !4471, !llvm.loop !4472

for.end679:                                       ; preds = %for.cond602
  store i64 3, i64* %channels, align 8, !dbg !4474
  %454 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4475
  %matte680 = getelementptr inbounds %struct._Image, %struct._Image* %454, i32 0, i32 6, !dbg !4477
  %455 = load i32, i32* %matte680, align 8, !dbg !4477
  %cmp681 = icmp ne i32 %455, 0, !dbg !4478
  br i1 %cmp681, label %if.then683, label %if.end685, !dbg !4479

if.then683:                                       ; preds = %for.end679
  %456 = load i64, i64* %channels, align 8, !dbg !4480
  %inc684 = add i64 %456, 1, !dbg !4480
  store i64 %inc684, i64* %channels, align 8, !dbg !4480
  br label %if.end685, !dbg !4481

if.end685:                                        ; preds = %if.then683, %for.end679
  %457 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4482
  %colorspace686 = getelementptr inbounds %struct._Image, %struct._Image* %457, i32 0, i32 1, !dbg !4484
  %458 = load i32, i32* %colorspace686, align 4, !dbg !4484
  %cmp687 = icmp eq i32 %458, 12, !dbg !4485
  br i1 %cmp687, label %if.then689, label %if.end691, !dbg !4486

if.then689:                                       ; preds = %if.end685
  %459 = load i64, i64* %channels, align 8, !dbg !4487
  %inc690 = add i64 %459, 1, !dbg !4487
  store i64 %inc690, i64* %channels, align 8, !dbg !4487
  br label %if.end691, !dbg !4488

if.end691:                                        ; preds = %if.then689, %if.end685
  %460 = load i64, i64* %channels, align 8, !dbg !4489
  %conv692 = uitofp i64 %460 to double, !dbg !4489
  %461 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4490
  %arrayidx693 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %461, i64 47, !dbg !4490
  %sum694 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx693, i32 0, i32 3, !dbg !4491
  %462 = load double, double* %sum694, align 8, !dbg !4492
  %div695 = fdiv double %462, %conv692, !dbg !4492
  store double %div695, double* %sum694, align 8, !dbg !4492
  %463 = load i64, i64* %channels, align 8, !dbg !4493
  %conv696 = uitofp i64 %463 to double, !dbg !4493
  %464 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4494
  %arrayidx697 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %464, i64 47, !dbg !4494
  %sum_squared698 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx697, i32 0, i32 4, !dbg !4495
  %465 = load double, double* %sum_squared698, align 8, !dbg !4496
  %div699 = fdiv double %465, %conv696, !dbg !4496
  store double %div699, double* %sum_squared698, align 8, !dbg !4496
  %466 = load i64, i64* %channels, align 8, !dbg !4497
  %conv700 = uitofp i64 %466 to double, !dbg !4497
  %467 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4498
  %arrayidx701 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %467, i64 47, !dbg !4498
  %sum_cubed702 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx701, i32 0, i32 5, !dbg !4499
  %468 = load double, double* %sum_cubed702, align 8, !dbg !4500
  %div703 = fdiv double %468, %conv700, !dbg !4500
  store double %div703, double* %sum_cubed702, align 8, !dbg !4500
  %469 = load i64, i64* %channels, align 8, !dbg !4501
  %conv704 = uitofp i64 %469 to double, !dbg !4501
  %470 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4502
  %arrayidx705 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %470, i64 47, !dbg !4502
  %sum_fourth_power706 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx705, i32 0, i32 6, !dbg !4503
  %471 = load double, double* %sum_fourth_power706, align 8, !dbg !4504
  %div707 = fdiv double %471, %conv704, !dbg !4504
  store double %div707, double* %sum_fourth_power706, align 8, !dbg !4504
  %472 = load i64, i64* %channels, align 8, !dbg !4505
  %conv708 = uitofp i64 %472 to double, !dbg !4505
  %473 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4506
  %arrayidx709 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %473, i64 47, !dbg !4506
  %mean710 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx709, i32 0, i32 7, !dbg !4507
  %474 = load double, double* %mean710, align 8, !dbg !4508
  %div711 = fdiv double %474, %conv708, !dbg !4508
  store double %div711, double* %mean710, align 8, !dbg !4508
  %475 = load i64, i64* %channels, align 8, !dbg !4509
  %conv712 = uitofp i64 %475 to double, !dbg !4509
  %476 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4510
  %arrayidx713 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %476, i64 47, !dbg !4510
  %variance714 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx713, i32 0, i32 8, !dbg !4511
  %477 = load double, double* %variance714, align 8, !dbg !4512
  %div715 = fdiv double %477, %conv712, !dbg !4512
  store double %div715, double* %variance714, align 8, !dbg !4512
  %478 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4513
  %arrayidx716 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %478, i64 47, !dbg !4513
  %standard_deviation717 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx716, i32 0, i32 9, !dbg !4514
  %479 = load double, double* %standard_deviation717, align 8, !dbg !4514
  %480 = load i64, i64* %channels, align 8, !dbg !4515
  %conv718 = uitofp i64 %480 to double, !dbg !4515
  %div719 = fdiv double %479, %conv718, !dbg !4516
  %call720 = call double @sqrt(double %div719) #8, !dbg !4517
  %481 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4518
  %arrayidx721 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %481, i64 47, !dbg !4518
  %standard_deviation722 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx721, i32 0, i32 9, !dbg !4519
  store double %call720, double* %standard_deviation722, align 8, !dbg !4520
  %482 = load i64, i64* %channels, align 8, !dbg !4521
  %conv723 = uitofp i64 %482 to double, !dbg !4521
  %483 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4522
  %arrayidx724 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %483, i64 47, !dbg !4522
  %kurtosis = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx724, i32 0, i32 10, !dbg !4523
  %484 = load double, double* %kurtosis, align 8, !dbg !4524
  %div725 = fdiv double %484, %conv723, !dbg !4524
  store double %div725, double* %kurtosis, align 8, !dbg !4524
  %485 = load i64, i64* %channels, align 8, !dbg !4525
  %conv726 = uitofp i64 %485 to double, !dbg !4525
  %486 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4526
  %arrayidx727 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %486, i64 47, !dbg !4526
  %skewness = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx727, i32 0, i32 11, !dbg !4527
  %487 = load double, double* %skewness, align 8, !dbg !4528
  %div728 = fdiv double %487, %conv726, !dbg !4528
  store double %div728, double* %skewness, align 8, !dbg !4528
  store i64 0, i64* %i, align 8, !dbg !4529
  br label %for.cond729, !dbg !4531

for.cond729:                                      ; preds = %for.inc817, %if.end691
  %488 = load i64, i64* %i, align 8, !dbg !4532
  %cmp730 = icmp sle i64 %488, 47, !dbg !4534
  br i1 %cmp730, label %for.body732, label %for.end819, !dbg !4535

for.body732:                                      ; preds = %for.cond729
  %489 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4536
  %490 = load i64, i64* %i, align 8, !dbg !4539
  %arrayidx733 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %489, i64 %490, !dbg !4536
  %standard_deviation734 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx733, i32 0, i32 9, !dbg !4540
  %491 = load double, double* %standard_deviation734, align 8, !dbg !4540
  %cmp735 = fcmp oeq double %491, 0.000000e+00, !dbg !4541
  br i1 %cmp735, label %if.then737, label %if.end738, !dbg !4542

if.then737:                                       ; preds = %for.body732
  br label %for.inc817, !dbg !4543

if.end738:                                        ; preds = %for.body732
  %492 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4544
  %493 = load i64, i64* %i, align 8, !dbg !4545
  %arrayidx739 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %492, i64 %493, !dbg !4544
  %sum_cubed740 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx739, i32 0, i32 5, !dbg !4546
  %494 = load double, double* %sum_cubed740, align 8, !dbg !4546
  %495 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4547
  %496 = load i64, i64* %i, align 8, !dbg !4548
  %arrayidx741 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %495, i64 %496, !dbg !4547
  %mean742 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx741, i32 0, i32 7, !dbg !4549
  %497 = load double, double* %mean742, align 8, !dbg !4549
  %mul743 = fmul double 3.000000e+00, %497, !dbg !4550
  %498 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4551
  %499 = load i64, i64* %i, align 8, !dbg !4552
  %arrayidx744 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %498, i64 %499, !dbg !4551
  %sum_squared745 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx744, i32 0, i32 4, !dbg !4553
  %500 = load double, double* %sum_squared745, align 8, !dbg !4553
  %mul746 = fmul double %mul743, %500, !dbg !4554
  %sub747 = fsub double %494, %mul746, !dbg !4555
  %501 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4556
  %502 = load i64, i64* %i, align 8, !dbg !4557
  %arrayidx748 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %501, i64 %502, !dbg !4556
  %mean749 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx748, i32 0, i32 7, !dbg !4558
  %503 = load double, double* %mean749, align 8, !dbg !4558
  %mul750 = fmul double 2.000000e+00, %503, !dbg !4559
  %504 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4560
  %505 = load i64, i64* %i, align 8, !dbg !4561
  %arrayidx751 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %504, i64 %505, !dbg !4560
  %mean752 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx751, i32 0, i32 7, !dbg !4562
  %506 = load double, double* %mean752, align 8, !dbg !4562
  %mul753 = fmul double %mul750, %506, !dbg !4563
  %507 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4564
  %508 = load i64, i64* %i, align 8, !dbg !4565
  %arrayidx754 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %507, i64 %508, !dbg !4564
  %mean755 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx754, i32 0, i32 7, !dbg !4566
  %509 = load double, double* %mean755, align 8, !dbg !4566
  %mul756 = fmul double %mul753, %509, !dbg !4567
  %add757 = fadd double %sub747, %mul756, !dbg !4568
  %510 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4569
  %511 = load i64, i64* %i, align 8, !dbg !4570
  %arrayidx758 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %510, i64 %511, !dbg !4569
  %standard_deviation759 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx758, i32 0, i32 9, !dbg !4571
  %512 = load double, double* %standard_deviation759, align 8, !dbg !4571
  %513 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4572
  %514 = load i64, i64* %i, align 8, !dbg !4573
  %arrayidx760 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %513, i64 %514, !dbg !4572
  %standard_deviation761 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx760, i32 0, i32 9, !dbg !4574
  %515 = load double, double* %standard_deviation761, align 8, !dbg !4574
  %mul762 = fmul double %512, %515, !dbg !4575
  %516 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4576
  %517 = load i64, i64* %i, align 8, !dbg !4577
  %arrayidx763 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %516, i64 %517, !dbg !4576
  %standard_deviation764 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx763, i32 0, i32 9, !dbg !4578
  %518 = load double, double* %standard_deviation764, align 8, !dbg !4578
  %mul765 = fmul double %mul762, %518, !dbg !4579
  %div766 = fdiv double %add757, %mul765, !dbg !4580
  %519 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4581
  %520 = load i64, i64* %i, align 8, !dbg !4582
  %arrayidx767 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %519, i64 %520, !dbg !4581
  %skewness768 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx767, i32 0, i32 11, !dbg !4583
  store double %div766, double* %skewness768, align 8, !dbg !4584
  %521 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4585
  %522 = load i64, i64* %i, align 8, !dbg !4586
  %arrayidx769 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %521, i64 %522, !dbg !4585
  %sum_fourth_power770 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx769, i32 0, i32 6, !dbg !4587
  %523 = load double, double* %sum_fourth_power770, align 8, !dbg !4587
  %524 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4588
  %525 = load i64, i64* %i, align 8, !dbg !4589
  %arrayidx771 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %524, i64 %525, !dbg !4588
  %mean772 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx771, i32 0, i32 7, !dbg !4590
  %526 = load double, double* %mean772, align 8, !dbg !4590
  %mul773 = fmul double 4.000000e+00, %526, !dbg !4591
  %527 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4592
  %528 = load i64, i64* %i, align 8, !dbg !4593
  %arrayidx774 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %527, i64 %528, !dbg !4592
  %sum_cubed775 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx774, i32 0, i32 5, !dbg !4594
  %529 = load double, double* %sum_cubed775, align 8, !dbg !4594
  %mul776 = fmul double %mul773, %529, !dbg !4595
  %sub777 = fsub double %523, %mul776, !dbg !4596
  %530 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4597
  %531 = load i64, i64* %i, align 8, !dbg !4598
  %arrayidx778 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %530, i64 %531, !dbg !4597
  %mean779 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx778, i32 0, i32 7, !dbg !4599
  %532 = load double, double* %mean779, align 8, !dbg !4599
  %mul780 = fmul double 6.000000e+00, %532, !dbg !4600
  %533 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4601
  %534 = load i64, i64* %i, align 8, !dbg !4602
  %arrayidx781 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %533, i64 %534, !dbg !4601
  %mean782 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx781, i32 0, i32 7, !dbg !4603
  %535 = load double, double* %mean782, align 8, !dbg !4603
  %mul783 = fmul double %mul780, %535, !dbg !4604
  %536 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4605
  %537 = load i64, i64* %i, align 8, !dbg !4606
  %arrayidx784 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %536, i64 %537, !dbg !4605
  %sum_squared785 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx784, i32 0, i32 4, !dbg !4607
  %538 = load double, double* %sum_squared785, align 8, !dbg !4607
  %mul786 = fmul double %mul783, %538, !dbg !4608
  %add787 = fadd double %sub777, %mul786, !dbg !4609
  %539 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4610
  %540 = load i64, i64* %i, align 8, !dbg !4611
  %arrayidx788 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %539, i64 %540, !dbg !4610
  %mean789 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx788, i32 0, i32 7, !dbg !4612
  %541 = load double, double* %mean789, align 8, !dbg !4612
  %mul790 = fmul double 3.000000e+00, %541, !dbg !4613
  %542 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4614
  %543 = load i64, i64* %i, align 8, !dbg !4615
  %arrayidx791 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %542, i64 %543, !dbg !4614
  %mean792 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx791, i32 0, i32 7, !dbg !4616
  %544 = load double, double* %mean792, align 8, !dbg !4616
  %mul793 = fmul double %mul790, %544, !dbg !4617
  %mul794 = fmul double %mul793, 1.000000e+00, !dbg !4618
  %545 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4619
  %546 = load i64, i64* %i, align 8, !dbg !4620
  %arrayidx795 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %545, i64 %546, !dbg !4619
  %mean796 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx795, i32 0, i32 7, !dbg !4621
  %547 = load double, double* %mean796, align 8, !dbg !4621
  %mul797 = fmul double %mul794, %547, !dbg !4622
  %548 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4623
  %549 = load i64, i64* %i, align 8, !dbg !4624
  %arrayidx798 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %548, i64 %549, !dbg !4623
  %mean799 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx798, i32 0, i32 7, !dbg !4625
  %550 = load double, double* %mean799, align 8, !dbg !4625
  %mul800 = fmul double %mul797, %550, !dbg !4626
  %sub801 = fsub double %add787, %mul800, !dbg !4627
  %551 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4628
  %552 = load i64, i64* %i, align 8, !dbg !4629
  %arrayidx802 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %551, i64 %552, !dbg !4628
  %standard_deviation803 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx802, i32 0, i32 9, !dbg !4630
  %553 = load double, double* %standard_deviation803, align 8, !dbg !4630
  %554 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4631
  %555 = load i64, i64* %i, align 8, !dbg !4632
  %arrayidx804 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %554, i64 %555, !dbg !4631
  %standard_deviation805 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx804, i32 0, i32 9, !dbg !4633
  %556 = load double, double* %standard_deviation805, align 8, !dbg !4633
  %mul806 = fmul double %553, %556, !dbg !4634
  %557 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4635
  %558 = load i64, i64* %i, align 8, !dbg !4636
  %arrayidx807 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %557, i64 %558, !dbg !4635
  %standard_deviation808 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx807, i32 0, i32 9, !dbg !4637
  %559 = load double, double* %standard_deviation808, align 8, !dbg !4637
  %mul809 = fmul double %mul806, %559, !dbg !4638
  %560 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4639
  %561 = load i64, i64* %i, align 8, !dbg !4640
  %arrayidx810 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %560, i64 %561, !dbg !4639
  %standard_deviation811 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx810, i32 0, i32 9, !dbg !4641
  %562 = load double, double* %standard_deviation811, align 8, !dbg !4641
  %mul812 = fmul double %mul809, %562, !dbg !4642
  %div813 = fdiv double %sub801, %mul812, !dbg !4643
  %sub814 = fsub double %div813, 3.000000e+00, !dbg !4644
  %563 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4645
  %564 = load i64, i64* %i, align 8, !dbg !4646
  %arrayidx815 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %563, i64 %564, !dbg !4645
  %kurtosis816 = getelementptr inbounds %struct._ChannelStatistics, %struct._ChannelStatistics* %arrayidx815, i32 0, i32 10, !dbg !4647
  store double %sub814, double* %kurtosis816, align 8, !dbg !4648
  br label %for.inc817, !dbg !4649

for.inc817:                                       ; preds = %if.end738, %if.then737
  %565 = load i64, i64* %i, align 8, !dbg !4650
  %inc818 = add nsw i64 %565, 1, !dbg !4650
  store i64 %inc818, i64* %i, align 8, !dbg !4650
  br label %for.cond729, !dbg !4651, !llvm.loop !4652

for.end819:                                       ; preds = %for.cond729
  %566 = load i64, i64* %y, align 8, !dbg !4654
  %567 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4656
  %rows820 = getelementptr inbounds %struct._Image, %struct._Image* %567, i32 0, i32 8, !dbg !4657
  %568 = load i64, i64* %rows820, align 8, !dbg !4657
  %cmp821 = icmp slt i64 %566, %568, !dbg !4658
  br i1 %cmp821, label %if.then823, label %if.end825, !dbg !4659

if.then823:                                       ; preds = %for.end819
  %569 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4660
  %570 = bitcast %struct._ChannelStatistics* %569 to i8*, !dbg !4660
  %call824 = call i8* @RelinquishMagickMemory(i8* %570), !dbg !4661
  %571 = bitcast i8* %call824 to %struct._ChannelStatistics*, !dbg !4662
  store %struct._ChannelStatistics* %571, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4663
  br label %if.end825, !dbg !4664

if.end825:                                        ; preds = %if.then823, %for.end819
  %572 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %channel_statistics, align 8, !dbg !4665
  store %struct._ChannelStatistics* %572, %struct._ChannelStatistics** %retval, align 8, !dbg !4666
  br label %return, !dbg !4666

return:                                           ; preds = %if.end825, %if.then3
  %573 = load %struct._ChannelStatistics*, %struct._ChannelStatistics** %retval, align 8, !dbg !4667
  ret %struct._ChannelStatistics* %573, !dbg !4667
}

declare dso_local i8* @RelinquishMagickMemory(i8*) #2

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._ChannelMoments* @GetImageChannelMoments(%struct._Image* %image, %struct._ExceptionInfo* %exception) #0 !dbg !4668 {
entry:
  %retval = alloca %struct._ChannelMoments*, align 8
  %image.addr = alloca %struct._Image*, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %channel_moments = alloca %struct._ChannelMoments*, align 8
  %M00 = alloca [48 x double], align 16
  %M01 = alloca [48 x double], align 16
  %M02 = alloca [48 x double], align 16
  %M03 = alloca [48 x double], align 16
  %M10 = alloca [48 x double], align 16
  %M11 = alloca [48 x double], align 16
  %M12 = alloca [48 x double], align 16
  %M20 = alloca [48 x double], align 16
  %M21 = alloca [48 x double], align 16
  %M22 = alloca [48 x double], align 16
  %M30 = alloca [48 x double], align 16
  %pixel = alloca %struct._MagickPixelPacket, align 8
  %centroid = alloca [48 x %struct._PointInfo], align 16
  %channel = alloca i64, align 8
  %channels = alloca i64, align 8
  %y = alloca i64, align 8
  %length = alloca i64, align 8
  %indexes = alloca i16*, align 8
  %p = alloca %struct._PixelPacket*, align 8
  %x = alloca i64, align 8
  %indexes178 = alloca i16*, align 8
  %p179 = alloca %struct._PixelPacket*, align 8
  %x180 = alloca i64, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !4671, metadata !DIExpression()), !dbg !4672
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !4673, metadata !DIExpression()), !dbg !4674
  call void @llvm.dbg.declare(metadata %struct._ChannelMoments** %channel_moments, metadata !4675, metadata !DIExpression()), !dbg !4676
  call void @llvm.dbg.declare(metadata [48 x double]* %M00, metadata !4677, metadata !DIExpression()), !dbg !4681
  call void @llvm.dbg.declare(metadata [48 x double]* %M01, metadata !4682, metadata !DIExpression()), !dbg !4683
  call void @llvm.dbg.declare(metadata [48 x double]* %M02, metadata !4684, metadata !DIExpression()), !dbg !4685
  call void @llvm.dbg.declare(metadata [48 x double]* %M03, metadata !4686, metadata !DIExpression()), !dbg !4687
  call void @llvm.dbg.declare(metadata [48 x double]* %M10, metadata !4688, metadata !DIExpression()), !dbg !4689
  call void @llvm.dbg.declare(metadata [48 x double]* %M11, metadata !4690, metadata !DIExpression()), !dbg !4691
  call void @llvm.dbg.declare(metadata [48 x double]* %M12, metadata !4692, metadata !DIExpression()), !dbg !4693
  call void @llvm.dbg.declare(metadata [48 x double]* %M20, metadata !4694, metadata !DIExpression()), !dbg !4695
  call void @llvm.dbg.declare(metadata [48 x double]* %M21, metadata !4696, metadata !DIExpression()), !dbg !4697
  call void @llvm.dbg.declare(metadata [48 x double]* %M22, metadata !4698, metadata !DIExpression()), !dbg !4699
  call void @llvm.dbg.declare(metadata [48 x double]* %M30, metadata !4700, metadata !DIExpression()), !dbg !4701
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket* %pixel, metadata !4702, metadata !DIExpression()), !dbg !4703
  call void @llvm.dbg.declare(metadata [48 x %struct._PointInfo]* %centroid, metadata !4704, metadata !DIExpression()), !dbg !4706
  call void @llvm.dbg.declare(metadata i64* %channel, metadata !4707, metadata !DIExpression()), !dbg !4708
  call void @llvm.dbg.declare(metadata i64* %channels, metadata !4709, metadata !DIExpression()), !dbg !4710
  call void @llvm.dbg.declare(metadata i64* %y, metadata !4711, metadata !DIExpression()), !dbg !4712
  call void @llvm.dbg.declare(metadata i64* %length, metadata !4713, metadata !DIExpression()), !dbg !4714
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4715
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !4717
  %1 = load i32, i32* %debug, align 8, !dbg !4717
  %cmp = icmp ne i32 %1, 0, !dbg !4718
  br i1 %cmp, label %if.then, label %if.end, !dbg !4719

if.then:                                          ; preds = %entry
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4720
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %2, i32 0, i32 53, !dbg !4721
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !4720
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 1516, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !4722
  br label %if.end, !dbg !4723

if.end:                                           ; preds = %if.then, %entry
  store i64 48, i64* %length, align 8, !dbg !4724
  %3 = load i64, i64* %length, align 8, !dbg !4725
  %call1 = call i8* @AcquireQuantumMemory(i64 %3, i64 312) #7, !dbg !4726
  %4 = bitcast i8* %call1 to %struct._ChannelMoments*, !dbg !4727
  store %struct._ChannelMoments* %4, %struct._ChannelMoments** %channel_moments, align 8, !dbg !4728
  %5 = load %struct._ChannelMoments*, %struct._ChannelMoments** %channel_moments, align 8, !dbg !4729
  %cmp2 = icmp eq %struct._ChannelMoments* %5, null, !dbg !4731
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !4732

if.then3:                                         ; preds = %if.end
  %6 = load %struct._ChannelMoments*, %struct._ChannelMoments** %channel_moments, align 8, !dbg !4733
  store %struct._ChannelMoments* %6, %struct._ChannelMoments** %retval, align 8, !dbg !4734
  br label %return, !dbg !4734

if.end4:                                          ; preds = %if.end
  %7 = load %struct._ChannelMoments*, %struct._ChannelMoments** %channel_moments, align 8, !dbg !4735
  %8 = bitcast %struct._ChannelMoments* %7 to i8*, !dbg !4735
  %9 = load i64, i64* %length, align 8, !dbg !4736
  %mul = mul i64 %9, 312, !dbg !4737
  %call5 = call i8* @ResetMagickMemory(i8* %8, i32 0, i64 %mul), !dbg !4738
  %arraydecay6 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 0, !dbg !4739
  %10 = bitcast %struct._PointInfo* %arraydecay6 to i8*, !dbg !4739
  %call7 = call i8* @ResetMagickMemory(i8* %10, i32 0, i64 768), !dbg !4740
  %arraydecay8 = getelementptr inbounds [48 x double], [48 x double]* %M00, i64 0, i64 0, !dbg !4741
  %11 = bitcast double* %arraydecay8 to i8*, !dbg !4741
  %call9 = call i8* @ResetMagickMemory(i8* %11, i32 0, i64 384), !dbg !4742
  %arraydecay10 = getelementptr inbounds [48 x double], [48 x double]* %M01, i64 0, i64 0, !dbg !4743
  %12 = bitcast double* %arraydecay10 to i8*, !dbg !4743
  %call11 = call i8* @ResetMagickMemory(i8* %12, i32 0, i64 384), !dbg !4744
  %arraydecay12 = getelementptr inbounds [48 x double], [48 x double]* %M02, i64 0, i64 0, !dbg !4745
  %13 = bitcast double* %arraydecay12 to i8*, !dbg !4745
  %call13 = call i8* @ResetMagickMemory(i8* %13, i32 0, i64 384), !dbg !4746
  %arraydecay14 = getelementptr inbounds [48 x double], [48 x double]* %M03, i64 0, i64 0, !dbg !4747
  %14 = bitcast double* %arraydecay14 to i8*, !dbg !4747
  %call15 = call i8* @ResetMagickMemory(i8* %14, i32 0, i64 384), !dbg !4748
  %arraydecay16 = getelementptr inbounds [48 x double], [48 x double]* %M10, i64 0, i64 0, !dbg !4749
  %15 = bitcast double* %arraydecay16 to i8*, !dbg !4749
  %call17 = call i8* @ResetMagickMemory(i8* %15, i32 0, i64 384), !dbg !4750
  %arraydecay18 = getelementptr inbounds [48 x double], [48 x double]* %M11, i64 0, i64 0, !dbg !4751
  %16 = bitcast double* %arraydecay18 to i8*, !dbg !4751
  %call19 = call i8* @ResetMagickMemory(i8* %16, i32 0, i64 384), !dbg !4752
  %arraydecay20 = getelementptr inbounds [48 x double], [48 x double]* %M12, i64 0, i64 0, !dbg !4753
  %17 = bitcast double* %arraydecay20 to i8*, !dbg !4753
  %call21 = call i8* @ResetMagickMemory(i8* %17, i32 0, i64 384), !dbg !4754
  %arraydecay22 = getelementptr inbounds [48 x double], [48 x double]* %M20, i64 0, i64 0, !dbg !4755
  %18 = bitcast double* %arraydecay22 to i8*, !dbg !4755
  %call23 = call i8* @ResetMagickMemory(i8* %18, i32 0, i64 384), !dbg !4756
  %arraydecay24 = getelementptr inbounds [48 x double], [48 x double]* %M21, i64 0, i64 0, !dbg !4757
  %19 = bitcast double* %arraydecay24 to i8*, !dbg !4757
  %call25 = call i8* @ResetMagickMemory(i8* %19, i32 0, i64 384), !dbg !4758
  %arraydecay26 = getelementptr inbounds [48 x double], [48 x double]* %M22, i64 0, i64 0, !dbg !4759
  %20 = bitcast double* %arraydecay26 to i8*, !dbg !4759
  %call27 = call i8* @ResetMagickMemory(i8* %20, i32 0, i64 384), !dbg !4760
  %arraydecay28 = getelementptr inbounds [48 x double], [48 x double]* %M30, i64 0, i64 0, !dbg !4761
  %21 = bitcast double* %arraydecay28 to i8*, !dbg !4761
  %call29 = call i8* @ResetMagickMemory(i8* %21, i32 0, i64 384), !dbg !4762
  %22 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4763
  call void @GetMagickPixelPacket(%struct._Image* %22, %struct._MagickPixelPacket* %pixel), !dbg !4764
  store i64 0, i64* %y, align 8, !dbg !4765
  br label %for.cond, !dbg !4767

for.cond:                                         ; preds = %for.inc135, %if.end4
  %23 = load i64, i64* %y, align 8, !dbg !4768
  %24 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4770
  %rows = getelementptr inbounds %struct._Image, %struct._Image* %24, i32 0, i32 8, !dbg !4771
  %25 = load i64, i64* %rows, align 8, !dbg !4771
  %cmp30 = icmp slt i64 %23, %25, !dbg !4772
  br i1 %cmp30, label %for.body, label %for.end137, !dbg !4773

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i16** %indexes, metadata !4774, metadata !DIExpression()), !dbg !4776
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %p, metadata !4777, metadata !DIExpression()), !dbg !4778
  call void @llvm.dbg.declare(metadata i64* %x, metadata !4779, metadata !DIExpression()), !dbg !4780
  %26 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4781
  %27 = load i64, i64* %y, align 8, !dbg !4782
  %28 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4783
  %columns = getelementptr inbounds %struct._Image, %struct._Image* %28, i32 0, i32 7, !dbg !4784
  %29 = load i64, i64* %columns, align 8, !dbg !4784
  %30 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !4785
  %call31 = call %struct._PixelPacket* @GetVirtualPixels(%struct._Image* %26, i64 0, i64 %27, i64 %29, i64 1, %struct._ExceptionInfo* %30), !dbg !4786
  store %struct._PixelPacket* %call31, %struct._PixelPacket** %p, align 8, !dbg !4787
  %31 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4788
  %cmp32 = icmp eq %struct._PixelPacket* %31, null, !dbg !4790
  br i1 %cmp32, label %if.then33, label %if.end34, !dbg !4791

if.then33:                                        ; preds = %for.body
  br label %for.end137, !dbg !4792

if.end34:                                         ; preds = %for.body
  %32 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4793
  %call35 = call i16* @GetVirtualIndexQueue(%struct._Image* %32), !dbg !4794
  store i16* %call35, i16** %indexes, align 8, !dbg !4795
  store i64 0, i64* %x, align 8, !dbg !4796
  br label %for.cond36, !dbg !4798

for.cond36:                                       ; preds = %for.inc, %if.end34
  %33 = load i64, i64* %x, align 8, !dbg !4799
  %34 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4801
  %columns37 = getelementptr inbounds %struct._Image, %struct._Image* %34, i32 0, i32 7, !dbg !4802
  %35 = load i64, i64* %columns37, align 8, !dbg !4802
  %cmp38 = icmp slt i64 %33, %35, !dbg !4803
  br i1 %cmp38, label %for.body39, label %for.end, !dbg !4804

for.body39:                                       ; preds = %for.cond36
  %36 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4805
  %37 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4807
  %38 = load i16*, i16** %indexes, align 8, !dbg !4808
  %39 = load i64, i64* %x, align 8, !dbg !4809
  %add.ptr = getelementptr inbounds i16, i16* %38, i64 %39, !dbg !4810
  call void @SetMagickPixelPacket(%struct._Image* %36, %struct._PixelPacket* %37, i16* %add.ptr, %struct._MagickPixelPacket* %pixel), !dbg !4811
  %red = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 5, !dbg !4812
  %40 = load float, float* %red, align 8, !dbg !4812
  %conv = fpext float %40 to double, !dbg !4813
  %mul40 = fmul double 0x3EF0001000100010, %conv, !dbg !4814
  %arrayidx = getelementptr inbounds [48 x double], [48 x double]* %M00, i64 0, i64 1, !dbg !4815
  %41 = load double, double* %arrayidx, align 8, !dbg !4816
  %add = fadd double %41, %mul40, !dbg !4816
  store double %add, double* %arrayidx, align 8, !dbg !4816
  %42 = load i64, i64* %x, align 8, !dbg !4817
  %conv41 = sitofp i64 %42 to double, !dbg !4817
  %mul42 = fmul double %conv41, 0x3EF0001000100010, !dbg !4818
  %red43 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 5, !dbg !4819
  %43 = load float, float* %red43, align 8, !dbg !4819
  %conv44 = fpext float %43 to double, !dbg !4820
  %mul45 = fmul double %mul42, %conv44, !dbg !4821
  %arrayidx46 = getelementptr inbounds [48 x double], [48 x double]* %M10, i64 0, i64 1, !dbg !4822
  %44 = load double, double* %arrayidx46, align 8, !dbg !4823
  %add47 = fadd double %44, %mul45, !dbg !4823
  store double %add47, double* %arrayidx46, align 8, !dbg !4823
  %45 = load i64, i64* %y, align 8, !dbg !4824
  %conv48 = sitofp i64 %45 to double, !dbg !4824
  %mul49 = fmul double %conv48, 0x3EF0001000100010, !dbg !4825
  %red50 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 5, !dbg !4826
  %46 = load float, float* %red50, align 8, !dbg !4826
  %conv51 = fpext float %46 to double, !dbg !4827
  %mul52 = fmul double %mul49, %conv51, !dbg !4828
  %arrayidx53 = getelementptr inbounds [48 x double], [48 x double]* %M01, i64 0, i64 1, !dbg !4829
  %47 = load double, double* %arrayidx53, align 8, !dbg !4830
  %add54 = fadd double %47, %mul52, !dbg !4830
  store double %add54, double* %arrayidx53, align 8, !dbg !4830
  %green = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 6, !dbg !4831
  %48 = load float, float* %green, align 4, !dbg !4831
  %conv55 = fpext float %48 to double, !dbg !4832
  %mul56 = fmul double 0x3EF0001000100010, %conv55, !dbg !4833
  %arrayidx57 = getelementptr inbounds [48 x double], [48 x double]* %M00, i64 0, i64 2, !dbg !4834
  %49 = load double, double* %arrayidx57, align 16, !dbg !4835
  %add58 = fadd double %49, %mul56, !dbg !4835
  store double %add58, double* %arrayidx57, align 16, !dbg !4835
  %50 = load i64, i64* %x, align 8, !dbg !4836
  %conv59 = sitofp i64 %50 to double, !dbg !4836
  %mul60 = fmul double %conv59, 0x3EF0001000100010, !dbg !4837
  %green61 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 6, !dbg !4838
  %51 = load float, float* %green61, align 4, !dbg !4838
  %conv62 = fpext float %51 to double, !dbg !4839
  %mul63 = fmul double %mul60, %conv62, !dbg !4840
  %arrayidx64 = getelementptr inbounds [48 x double], [48 x double]* %M10, i64 0, i64 2, !dbg !4841
  %52 = load double, double* %arrayidx64, align 16, !dbg !4842
  %add65 = fadd double %52, %mul63, !dbg !4842
  store double %add65, double* %arrayidx64, align 16, !dbg !4842
  %53 = load i64, i64* %y, align 8, !dbg !4843
  %conv66 = sitofp i64 %53 to double, !dbg !4843
  %mul67 = fmul double %conv66, 0x3EF0001000100010, !dbg !4844
  %green68 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 6, !dbg !4845
  %54 = load float, float* %green68, align 4, !dbg !4845
  %conv69 = fpext float %54 to double, !dbg !4846
  %mul70 = fmul double %mul67, %conv69, !dbg !4847
  %arrayidx71 = getelementptr inbounds [48 x double], [48 x double]* %M01, i64 0, i64 2, !dbg !4848
  %55 = load double, double* %arrayidx71, align 16, !dbg !4849
  %add72 = fadd double %55, %mul70, !dbg !4849
  store double %add72, double* %arrayidx71, align 16, !dbg !4849
  %blue = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 7, !dbg !4850
  %56 = load float, float* %blue, align 8, !dbg !4850
  %conv73 = fpext float %56 to double, !dbg !4851
  %mul74 = fmul double 0x3EF0001000100010, %conv73, !dbg !4852
  %arrayidx75 = getelementptr inbounds [48 x double], [48 x double]* %M00, i64 0, i64 4, !dbg !4853
  %57 = load double, double* %arrayidx75, align 16, !dbg !4854
  %add76 = fadd double %57, %mul74, !dbg !4854
  store double %add76, double* %arrayidx75, align 16, !dbg !4854
  %58 = load i64, i64* %x, align 8, !dbg !4855
  %conv77 = sitofp i64 %58 to double, !dbg !4855
  %mul78 = fmul double %conv77, 0x3EF0001000100010, !dbg !4856
  %blue79 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 7, !dbg !4857
  %59 = load float, float* %blue79, align 8, !dbg !4857
  %conv80 = fpext float %59 to double, !dbg !4858
  %mul81 = fmul double %mul78, %conv80, !dbg !4859
  %arrayidx82 = getelementptr inbounds [48 x double], [48 x double]* %M10, i64 0, i64 4, !dbg !4860
  %60 = load double, double* %arrayidx82, align 16, !dbg !4861
  %add83 = fadd double %60, %mul81, !dbg !4861
  store double %add83, double* %arrayidx82, align 16, !dbg !4861
  %61 = load i64, i64* %y, align 8, !dbg !4862
  %conv84 = sitofp i64 %61 to double, !dbg !4862
  %mul85 = fmul double %conv84, 0x3EF0001000100010, !dbg !4863
  %blue86 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 7, !dbg !4864
  %62 = load float, float* %blue86, align 8, !dbg !4864
  %conv87 = fpext float %62 to double, !dbg !4865
  %mul88 = fmul double %mul85, %conv87, !dbg !4866
  %arrayidx89 = getelementptr inbounds [48 x double], [48 x double]* %M01, i64 0, i64 4, !dbg !4867
  %63 = load double, double* %arrayidx89, align 16, !dbg !4868
  %add90 = fadd double %63, %mul88, !dbg !4868
  store double %add90, double* %arrayidx89, align 16, !dbg !4868
  %64 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4869
  %matte = getelementptr inbounds %struct._Image, %struct._Image* %64, i32 0, i32 6, !dbg !4871
  %65 = load i32, i32* %matte, align 8, !dbg !4871
  %cmp91 = icmp ne i32 %65, 0, !dbg !4872
  br i1 %cmp91, label %if.then93, label %if.end112, !dbg !4873

if.then93:                                        ; preds = %for.body39
  %opacity = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 8, !dbg !4874
  %66 = load float, float* %opacity, align 4, !dbg !4874
  %conv94 = fpext float %66 to double, !dbg !4876
  %mul95 = fmul double 0x3EF0001000100010, %conv94, !dbg !4877
  %arrayidx96 = getelementptr inbounds [48 x double], [48 x double]* %M00, i64 0, i64 8, !dbg !4878
  %67 = load double, double* %arrayidx96, align 16, !dbg !4879
  %add97 = fadd double %67, %mul95, !dbg !4879
  store double %add97, double* %arrayidx96, align 16, !dbg !4879
  %68 = load i64, i64* %x, align 8, !dbg !4880
  %conv98 = sitofp i64 %68 to double, !dbg !4880
  %mul99 = fmul double %conv98, 0x3EF0001000100010, !dbg !4881
  %opacity100 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 8, !dbg !4882
  %69 = load float, float* %opacity100, align 4, !dbg !4882
  %conv101 = fpext float %69 to double, !dbg !4883
  %mul102 = fmul double %mul99, %conv101, !dbg !4884
  %arrayidx103 = getelementptr inbounds [48 x double], [48 x double]* %M10, i64 0, i64 8, !dbg !4885
  %70 = load double, double* %arrayidx103, align 16, !dbg !4886
  %add104 = fadd double %70, %mul102, !dbg !4886
  store double %add104, double* %arrayidx103, align 16, !dbg !4886
  %71 = load i64, i64* %y, align 8, !dbg !4887
  %conv105 = sitofp i64 %71 to double, !dbg !4887
  %mul106 = fmul double %conv105, 0x3EF0001000100010, !dbg !4888
  %opacity107 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 8, !dbg !4889
  %72 = load float, float* %opacity107, align 4, !dbg !4889
  %conv108 = fpext float %72 to double, !dbg !4890
  %mul109 = fmul double %mul106, %conv108, !dbg !4891
  %arrayidx110 = getelementptr inbounds [48 x double], [48 x double]* %M01, i64 0, i64 8, !dbg !4892
  %73 = load double, double* %arrayidx110, align 16, !dbg !4893
  %add111 = fadd double %73, %mul109, !dbg !4893
  store double %add111, double* %arrayidx110, align 16, !dbg !4893
  br label %if.end112, !dbg !4894

if.end112:                                        ; preds = %if.then93, %for.body39
  %74 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4895
  %colorspace = getelementptr inbounds %struct._Image, %struct._Image* %74, i32 0, i32 1, !dbg !4897
  %75 = load i32, i32* %colorspace, align 4, !dbg !4897
  %cmp113 = icmp eq i32 %75, 12, !dbg !4898
  br i1 %cmp113, label %if.then115, label %if.end134, !dbg !4899

if.then115:                                       ; preds = %if.end112
  %index = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 9, !dbg !4900
  %76 = load float, float* %index, align 8, !dbg !4900
  %conv116 = fpext float %76 to double, !dbg !4902
  %mul117 = fmul double 0x3EF0001000100010, %conv116, !dbg !4903
  %arrayidx118 = getelementptr inbounds [48 x double], [48 x double]* %M00, i64 0, i64 32, !dbg !4904
  %77 = load double, double* %arrayidx118, align 16, !dbg !4905
  %add119 = fadd double %77, %mul117, !dbg !4905
  store double %add119, double* %arrayidx118, align 16, !dbg !4905
  %78 = load i64, i64* %x, align 8, !dbg !4906
  %conv120 = sitofp i64 %78 to double, !dbg !4906
  %mul121 = fmul double %conv120, 0x3EF0001000100010, !dbg !4907
  %index122 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 9, !dbg !4908
  %79 = load float, float* %index122, align 8, !dbg !4908
  %conv123 = fpext float %79 to double, !dbg !4909
  %mul124 = fmul double %mul121, %conv123, !dbg !4910
  %arrayidx125 = getelementptr inbounds [48 x double], [48 x double]* %M10, i64 0, i64 32, !dbg !4911
  %80 = load double, double* %arrayidx125, align 16, !dbg !4912
  %add126 = fadd double %80, %mul124, !dbg !4912
  store double %add126, double* %arrayidx125, align 16, !dbg !4912
  %81 = load i64, i64* %y, align 8, !dbg !4913
  %conv127 = sitofp i64 %81 to double, !dbg !4913
  %mul128 = fmul double %conv127, 0x3EF0001000100010, !dbg !4914
  %index129 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 9, !dbg !4915
  %82 = load float, float* %index129, align 8, !dbg !4915
  %conv130 = fpext float %82 to double, !dbg !4916
  %mul131 = fmul double %mul128, %conv130, !dbg !4917
  %arrayidx132 = getelementptr inbounds [48 x double], [48 x double]* %M01, i64 0, i64 32, !dbg !4918
  %83 = load double, double* %arrayidx132, align 16, !dbg !4919
  %add133 = fadd double %83, %mul131, !dbg !4919
  store double %add133, double* %arrayidx132, align 16, !dbg !4919
  br label %if.end134, !dbg !4920

if.end134:                                        ; preds = %if.then115, %if.end112
  %84 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !4921
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %84, i32 1, !dbg !4921
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %p, align 8, !dbg !4921
  br label %for.inc, !dbg !4922

for.inc:                                          ; preds = %if.end134
  %85 = load i64, i64* %x, align 8, !dbg !4923
  %inc = add nsw i64 %85, 1, !dbg !4923
  store i64 %inc, i64* %x, align 8, !dbg !4923
  br label %for.cond36, !dbg !4924, !llvm.loop !4925

for.end:                                          ; preds = %for.cond36
  br label %for.inc135, !dbg !4927

for.inc135:                                       ; preds = %for.end
  %86 = load i64, i64* %y, align 8, !dbg !4928
  %inc136 = add nsw i64 %86, 1, !dbg !4928
  store i64 %inc136, i64* %y, align 8, !dbg !4928
  br label %for.cond, !dbg !4929, !llvm.loop !4930

for.end137:                                       ; preds = %if.then33, %for.cond
  store i64 0, i64* %channel, align 8, !dbg !4932
  br label %for.cond138, !dbg !4934

for.cond138:                                      ; preds = %for.inc170, %for.end137
  %87 = load i64, i64* %channel, align 8, !dbg !4935
  %cmp139 = icmp sle i64 %87, 47, !dbg !4937
  br i1 %cmp139, label %for.body141, label %for.end172, !dbg !4938

for.body141:                                      ; preds = %for.cond138
  %88 = load i64, i64* %channel, align 8, !dbg !4939
  %arrayidx142 = getelementptr inbounds [48 x double], [48 x double]* %M00, i64 0, i64 %88, !dbg !4942
  %89 = load double, double* %arrayidx142, align 8, !dbg !4942
  %cmp143 = fcmp olt double %89, 1.000000e-15, !dbg !4943
  br i1 %cmp143, label %if.then145, label %if.end157, !dbg !4944

if.then145:                                       ; preds = %for.body141
  %90 = load i64, i64* %channel, align 8, !dbg !4945
  %arrayidx146 = getelementptr inbounds [48 x double], [48 x double]* %M00, i64 0, i64 %90, !dbg !4947
  %91 = load double, double* %arrayidx146, align 8, !dbg !4948
  %add147 = fadd double %91, 1.000000e-15, !dbg !4948
  store double %add147, double* %arrayidx146, align 8, !dbg !4948
  %92 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4949
  %columns148 = getelementptr inbounds %struct._Image, %struct._Image* %92, i32 0, i32 7, !dbg !4950
  %93 = load i64, i64* %columns148, align 8, !dbg !4950
  %conv149 = uitofp i64 %93 to double, !dbg !4951
  %div = fdiv double %conv149, 2.000000e+00, !dbg !4952
  %94 = load i64, i64* %channel, align 8, !dbg !4953
  %arrayidx150 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 %94, !dbg !4954
  %x151 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx150, i32 0, i32 0, !dbg !4955
  store double %div, double* %x151, align 16, !dbg !4956
  %95 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4957
  %rows152 = getelementptr inbounds %struct._Image, %struct._Image* %95, i32 0, i32 8, !dbg !4958
  %96 = load i64, i64* %rows152, align 8, !dbg !4958
  %conv153 = uitofp i64 %96 to double, !dbg !4959
  %div154 = fdiv double %conv153, 2.000000e+00, !dbg !4960
  %97 = load i64, i64* %channel, align 8, !dbg !4961
  %arrayidx155 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 %97, !dbg !4962
  %y156 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx155, i32 0, i32 1, !dbg !4963
  store double %div154, double* %y156, align 8, !dbg !4964
  br label %for.inc170, !dbg !4965

if.end157:                                        ; preds = %for.body141
  %98 = load i64, i64* %channel, align 8, !dbg !4966
  %arrayidx158 = getelementptr inbounds [48 x double], [48 x double]* %M00, i64 0, i64 %98, !dbg !4967
  %99 = load double, double* %arrayidx158, align 8, !dbg !4968
  %add159 = fadd double %99, 1.000000e-15, !dbg !4968
  store double %add159, double* %arrayidx158, align 8, !dbg !4968
  %100 = load i64, i64* %channel, align 8, !dbg !4969
  %arrayidx160 = getelementptr inbounds [48 x double], [48 x double]* %M10, i64 0, i64 %100, !dbg !4970
  %101 = load double, double* %arrayidx160, align 8, !dbg !4970
  %102 = load i64, i64* %channel, align 8, !dbg !4971
  %arrayidx161 = getelementptr inbounds [48 x double], [48 x double]* %M00, i64 0, i64 %102, !dbg !4972
  %103 = load double, double* %arrayidx161, align 8, !dbg !4972
  %div162 = fdiv double %101, %103, !dbg !4973
  %104 = load i64, i64* %channel, align 8, !dbg !4974
  %arrayidx163 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 %104, !dbg !4975
  %x164 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx163, i32 0, i32 0, !dbg !4976
  store double %div162, double* %x164, align 16, !dbg !4977
  %105 = load i64, i64* %channel, align 8, !dbg !4978
  %arrayidx165 = getelementptr inbounds [48 x double], [48 x double]* %M01, i64 0, i64 %105, !dbg !4979
  %106 = load double, double* %arrayidx165, align 8, !dbg !4979
  %107 = load i64, i64* %channel, align 8, !dbg !4980
  %arrayidx166 = getelementptr inbounds [48 x double], [48 x double]* %M00, i64 0, i64 %107, !dbg !4981
  %108 = load double, double* %arrayidx166, align 8, !dbg !4981
  %div167 = fdiv double %106, %108, !dbg !4982
  %109 = load i64, i64* %channel, align 8, !dbg !4983
  %arrayidx168 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 %109, !dbg !4984
  %y169 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx168, i32 0, i32 1, !dbg !4985
  store double %div167, double* %y169, align 8, !dbg !4986
  br label %for.inc170, !dbg !4987

for.inc170:                                       ; preds = %if.end157, %if.then145
  %110 = load i64, i64* %channel, align 8, !dbg !4988
  %inc171 = add nsw i64 %110, 1, !dbg !4988
  store i64 %inc171, i64* %channel, align 8, !dbg !4988
  br label %for.cond138, !dbg !4989, !llvm.loop !4990

for.end172:                                       ; preds = %for.cond138
  store i64 0, i64* %y, align 8, !dbg !4992
  br label %for.cond173, !dbg !4994

for.cond173:                                      ; preds = %for.inc957, %for.end172
  %111 = load i64, i64* %y, align 8, !dbg !4995
  %112 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !4997
  %rows174 = getelementptr inbounds %struct._Image, %struct._Image* %112, i32 0, i32 8, !dbg !4998
  %113 = load i64, i64* %rows174, align 8, !dbg !4998
  %cmp175 = icmp slt i64 %111, %113, !dbg !4999
  br i1 %cmp175, label %for.body177, label %for.end959, !dbg !5000

for.body177:                                      ; preds = %for.cond173
  call void @llvm.dbg.declare(metadata i16** %indexes178, metadata !5001, metadata !DIExpression()), !dbg !5003
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %p179, metadata !5004, metadata !DIExpression()), !dbg !5005
  call void @llvm.dbg.declare(metadata i64* %x180, metadata !5006, metadata !DIExpression()), !dbg !5007
  %114 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5008
  %115 = load i64, i64* %y, align 8, !dbg !5009
  %116 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5010
  %columns181 = getelementptr inbounds %struct._Image, %struct._Image* %116, i32 0, i32 7, !dbg !5011
  %117 = load i64, i64* %columns181, align 8, !dbg !5011
  %118 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !5012
  %call182 = call %struct._PixelPacket* @GetVirtualPixels(%struct._Image* %114, i64 0, i64 %115, i64 %117, i64 1, %struct._ExceptionInfo* %118), !dbg !5013
  store %struct._PixelPacket* %call182, %struct._PixelPacket** %p179, align 8, !dbg !5014
  %119 = load %struct._PixelPacket*, %struct._PixelPacket** %p179, align 8, !dbg !5015
  %cmp183 = icmp eq %struct._PixelPacket* %119, null, !dbg !5017
  br i1 %cmp183, label %if.then185, label %if.end186, !dbg !5018

if.then185:                                       ; preds = %for.body177
  br label %for.end959, !dbg !5019

if.end186:                                        ; preds = %for.body177
  %120 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5020
  %call187 = call i16* @GetVirtualIndexQueue(%struct._Image* %120), !dbg !5021
  store i16* %call187, i16** %indexes178, align 8, !dbg !5022
  store i64 0, i64* %x180, align 8, !dbg !5023
  br label %for.cond188, !dbg !5025

for.cond188:                                      ; preds = %for.inc954, %if.end186
  %121 = load i64, i64* %x180, align 8, !dbg !5026
  %122 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5028
  %columns189 = getelementptr inbounds %struct._Image, %struct._Image* %122, i32 0, i32 7, !dbg !5029
  %123 = load i64, i64* %columns189, align 8, !dbg !5029
  %cmp190 = icmp slt i64 %121, %123, !dbg !5030
  br i1 %cmp190, label %for.body192, label %for.end956, !dbg !5031

for.body192:                                      ; preds = %for.cond188
  %124 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5032
  %125 = load %struct._PixelPacket*, %struct._PixelPacket** %p179, align 8, !dbg !5034
  %126 = load i16*, i16** %indexes178, align 8, !dbg !5035
  %127 = load i64, i64* %x180, align 8, !dbg !5036
  %add.ptr193 = getelementptr inbounds i16, i16* %126, i64 %127, !dbg !5037
  call void @SetMagickPixelPacket(%struct._Image* %124, %struct._PixelPacket* %125, i16* %add.ptr193, %struct._MagickPixelPacket* %pixel), !dbg !5038
  %128 = load i64, i64* %x180, align 8, !dbg !5039
  %conv194 = sitofp i64 %128 to double, !dbg !5039
  %arrayidx195 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 1, !dbg !5040
  %x196 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx195, i32 0, i32 0, !dbg !5041
  %129 = load double, double* %x196, align 16, !dbg !5041
  %sub = fsub double %conv194, %129, !dbg !5042
  %130 = load i64, i64* %y, align 8, !dbg !5043
  %conv197 = sitofp i64 %130 to double, !dbg !5043
  %arrayidx198 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 1, !dbg !5044
  %y199 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx198, i32 0, i32 1, !dbg !5045
  %131 = load double, double* %y199, align 8, !dbg !5045
  %sub200 = fsub double %conv197, %131, !dbg !5046
  %mul201 = fmul double %sub, %sub200, !dbg !5047
  %mul202 = fmul double %mul201, 0x3EF0001000100010, !dbg !5048
  %red203 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 5, !dbg !5049
  %132 = load float, float* %red203, align 8, !dbg !5049
  %conv204 = fpext float %132 to double, !dbg !5050
  %mul205 = fmul double %mul202, %conv204, !dbg !5051
  %arrayidx206 = getelementptr inbounds [48 x double], [48 x double]* %M11, i64 0, i64 1, !dbg !5052
  %133 = load double, double* %arrayidx206, align 8, !dbg !5053
  %add207 = fadd double %133, %mul205, !dbg !5053
  store double %add207, double* %arrayidx206, align 8, !dbg !5053
  %134 = load i64, i64* %x180, align 8, !dbg !5054
  %conv208 = sitofp i64 %134 to double, !dbg !5054
  %arrayidx209 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 1, !dbg !5055
  %x210 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx209, i32 0, i32 0, !dbg !5056
  %135 = load double, double* %x210, align 16, !dbg !5056
  %sub211 = fsub double %conv208, %135, !dbg !5057
  %136 = load i64, i64* %x180, align 8, !dbg !5058
  %conv212 = sitofp i64 %136 to double, !dbg !5058
  %arrayidx213 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 1, !dbg !5059
  %x214 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx213, i32 0, i32 0, !dbg !5060
  %137 = load double, double* %x214, align 16, !dbg !5060
  %sub215 = fsub double %conv212, %137, !dbg !5061
  %mul216 = fmul double %sub211, %sub215, !dbg !5062
  %mul217 = fmul double %mul216, 0x3EF0001000100010, !dbg !5063
  %red218 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 5, !dbg !5064
  %138 = load float, float* %red218, align 8, !dbg !5064
  %conv219 = fpext float %138 to double, !dbg !5065
  %mul220 = fmul double %mul217, %conv219, !dbg !5066
  %arrayidx221 = getelementptr inbounds [48 x double], [48 x double]* %M20, i64 0, i64 1, !dbg !5067
  %139 = load double, double* %arrayidx221, align 8, !dbg !5068
  %add222 = fadd double %139, %mul220, !dbg !5068
  store double %add222, double* %arrayidx221, align 8, !dbg !5068
  %140 = load i64, i64* %y, align 8, !dbg !5069
  %conv223 = sitofp i64 %140 to double, !dbg !5069
  %arrayidx224 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 1, !dbg !5070
  %y225 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx224, i32 0, i32 1, !dbg !5071
  %141 = load double, double* %y225, align 8, !dbg !5071
  %sub226 = fsub double %conv223, %141, !dbg !5072
  %142 = load i64, i64* %y, align 8, !dbg !5073
  %conv227 = sitofp i64 %142 to double, !dbg !5073
  %arrayidx228 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 1, !dbg !5074
  %y229 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx228, i32 0, i32 1, !dbg !5075
  %143 = load double, double* %y229, align 8, !dbg !5075
  %sub230 = fsub double %conv227, %143, !dbg !5076
  %mul231 = fmul double %sub226, %sub230, !dbg !5077
  %mul232 = fmul double %mul231, 0x3EF0001000100010, !dbg !5078
  %red233 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 5, !dbg !5079
  %144 = load float, float* %red233, align 8, !dbg !5079
  %conv234 = fpext float %144 to double, !dbg !5080
  %mul235 = fmul double %mul232, %conv234, !dbg !5081
  %arrayidx236 = getelementptr inbounds [48 x double], [48 x double]* %M02, i64 0, i64 1, !dbg !5082
  %145 = load double, double* %arrayidx236, align 8, !dbg !5083
  %add237 = fadd double %145, %mul235, !dbg !5083
  store double %add237, double* %arrayidx236, align 8, !dbg !5083
  %146 = load i64, i64* %x180, align 8, !dbg !5084
  %conv238 = sitofp i64 %146 to double, !dbg !5084
  %arrayidx239 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 1, !dbg !5085
  %x240 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx239, i32 0, i32 0, !dbg !5086
  %147 = load double, double* %x240, align 16, !dbg !5086
  %sub241 = fsub double %conv238, %147, !dbg !5087
  %148 = load i64, i64* %x180, align 8, !dbg !5088
  %conv242 = sitofp i64 %148 to double, !dbg !5088
  %arrayidx243 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 1, !dbg !5089
  %x244 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx243, i32 0, i32 0, !dbg !5090
  %149 = load double, double* %x244, align 16, !dbg !5090
  %sub245 = fsub double %conv242, %149, !dbg !5091
  %mul246 = fmul double %sub241, %sub245, !dbg !5092
  %150 = load i64, i64* %y, align 8, !dbg !5093
  %conv247 = sitofp i64 %150 to double, !dbg !5093
  %arrayidx248 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 1, !dbg !5094
  %y249 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx248, i32 0, i32 1, !dbg !5095
  %151 = load double, double* %y249, align 8, !dbg !5095
  %sub250 = fsub double %conv247, %151, !dbg !5096
  %mul251 = fmul double %mul246, %sub250, !dbg !5097
  %mul252 = fmul double %mul251, 0x3EF0001000100010, !dbg !5098
  %red253 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 5, !dbg !5099
  %152 = load float, float* %red253, align 8, !dbg !5099
  %conv254 = fpext float %152 to double, !dbg !5100
  %mul255 = fmul double %mul252, %conv254, !dbg !5101
  %arrayidx256 = getelementptr inbounds [48 x double], [48 x double]* %M21, i64 0, i64 1, !dbg !5102
  %153 = load double, double* %arrayidx256, align 8, !dbg !5103
  %add257 = fadd double %153, %mul255, !dbg !5103
  store double %add257, double* %arrayidx256, align 8, !dbg !5103
  %154 = load i64, i64* %x180, align 8, !dbg !5104
  %conv258 = sitofp i64 %154 to double, !dbg !5104
  %arrayidx259 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 1, !dbg !5105
  %x260 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx259, i32 0, i32 0, !dbg !5106
  %155 = load double, double* %x260, align 16, !dbg !5106
  %sub261 = fsub double %conv258, %155, !dbg !5107
  %156 = load i64, i64* %y, align 8, !dbg !5108
  %conv262 = sitofp i64 %156 to double, !dbg !5108
  %arrayidx263 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 1, !dbg !5109
  %y264 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx263, i32 0, i32 1, !dbg !5110
  %157 = load double, double* %y264, align 8, !dbg !5110
  %sub265 = fsub double %conv262, %157, !dbg !5111
  %mul266 = fmul double %sub261, %sub265, !dbg !5112
  %158 = load i64, i64* %y, align 8, !dbg !5113
  %conv267 = sitofp i64 %158 to double, !dbg !5113
  %arrayidx268 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 1, !dbg !5114
  %y269 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx268, i32 0, i32 1, !dbg !5115
  %159 = load double, double* %y269, align 8, !dbg !5115
  %sub270 = fsub double %conv267, %159, !dbg !5116
  %mul271 = fmul double %mul266, %sub270, !dbg !5117
  %mul272 = fmul double %mul271, 0x3EF0001000100010, !dbg !5118
  %red273 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 5, !dbg !5119
  %160 = load float, float* %red273, align 8, !dbg !5119
  %conv274 = fpext float %160 to double, !dbg !5120
  %mul275 = fmul double %mul272, %conv274, !dbg !5121
  %arrayidx276 = getelementptr inbounds [48 x double], [48 x double]* %M12, i64 0, i64 1, !dbg !5122
  %161 = load double, double* %arrayidx276, align 8, !dbg !5123
  %add277 = fadd double %161, %mul275, !dbg !5123
  store double %add277, double* %arrayidx276, align 8, !dbg !5123
  %162 = load i64, i64* %x180, align 8, !dbg !5124
  %conv278 = sitofp i64 %162 to double, !dbg !5124
  %arrayidx279 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 1, !dbg !5125
  %x280 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx279, i32 0, i32 0, !dbg !5126
  %163 = load double, double* %x280, align 16, !dbg !5126
  %sub281 = fsub double %conv278, %163, !dbg !5127
  %164 = load i64, i64* %x180, align 8, !dbg !5128
  %conv282 = sitofp i64 %164 to double, !dbg !5128
  %arrayidx283 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 1, !dbg !5129
  %x284 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx283, i32 0, i32 0, !dbg !5130
  %165 = load double, double* %x284, align 16, !dbg !5130
  %sub285 = fsub double %conv282, %165, !dbg !5131
  %mul286 = fmul double %sub281, %sub285, !dbg !5132
  %166 = load i64, i64* %y, align 8, !dbg !5133
  %conv287 = sitofp i64 %166 to double, !dbg !5133
  %arrayidx288 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 1, !dbg !5134
  %y289 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx288, i32 0, i32 1, !dbg !5135
  %167 = load double, double* %y289, align 8, !dbg !5135
  %sub290 = fsub double %conv287, %167, !dbg !5136
  %mul291 = fmul double %mul286, %sub290, !dbg !5137
  %168 = load i64, i64* %y, align 8, !dbg !5138
  %conv292 = sitofp i64 %168 to double, !dbg !5138
  %arrayidx293 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 1, !dbg !5139
  %y294 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx293, i32 0, i32 1, !dbg !5140
  %169 = load double, double* %y294, align 8, !dbg !5140
  %sub295 = fsub double %conv292, %169, !dbg !5141
  %mul296 = fmul double %mul291, %sub295, !dbg !5142
  %mul297 = fmul double %mul296, 0x3EF0001000100010, !dbg !5143
  %red298 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 5, !dbg !5144
  %170 = load float, float* %red298, align 8, !dbg !5144
  %conv299 = fpext float %170 to double, !dbg !5145
  %mul300 = fmul double %mul297, %conv299, !dbg !5146
  %arrayidx301 = getelementptr inbounds [48 x double], [48 x double]* %M22, i64 0, i64 1, !dbg !5147
  %171 = load double, double* %arrayidx301, align 8, !dbg !5148
  %add302 = fadd double %171, %mul300, !dbg !5148
  store double %add302, double* %arrayidx301, align 8, !dbg !5148
  %172 = load i64, i64* %x180, align 8, !dbg !5149
  %conv303 = sitofp i64 %172 to double, !dbg !5149
  %arrayidx304 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 1, !dbg !5150
  %x305 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx304, i32 0, i32 0, !dbg !5151
  %173 = load double, double* %x305, align 16, !dbg !5151
  %sub306 = fsub double %conv303, %173, !dbg !5152
  %174 = load i64, i64* %x180, align 8, !dbg !5153
  %conv307 = sitofp i64 %174 to double, !dbg !5153
  %arrayidx308 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 1, !dbg !5154
  %x309 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx308, i32 0, i32 0, !dbg !5155
  %175 = load double, double* %x309, align 16, !dbg !5155
  %sub310 = fsub double %conv307, %175, !dbg !5156
  %mul311 = fmul double %sub306, %sub310, !dbg !5157
  %176 = load i64, i64* %x180, align 8, !dbg !5158
  %conv312 = sitofp i64 %176 to double, !dbg !5158
  %arrayidx313 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 1, !dbg !5159
  %x314 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx313, i32 0, i32 0, !dbg !5160
  %177 = load double, double* %x314, align 16, !dbg !5160
  %sub315 = fsub double %conv312, %177, !dbg !5161
  %mul316 = fmul double %mul311, %sub315, !dbg !5162
  %mul317 = fmul double %mul316, 0x3EF0001000100010, !dbg !5163
  %red318 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 5, !dbg !5164
  %178 = load float, float* %red318, align 8, !dbg !5164
  %conv319 = fpext float %178 to double, !dbg !5165
  %mul320 = fmul double %mul317, %conv319, !dbg !5166
  %arrayidx321 = getelementptr inbounds [48 x double], [48 x double]* %M30, i64 0, i64 1, !dbg !5167
  %179 = load double, double* %arrayidx321, align 8, !dbg !5168
  %add322 = fadd double %179, %mul320, !dbg !5168
  store double %add322, double* %arrayidx321, align 8, !dbg !5168
  %180 = load i64, i64* %y, align 8, !dbg !5169
  %conv323 = sitofp i64 %180 to double, !dbg !5169
  %arrayidx324 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 1, !dbg !5170
  %y325 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx324, i32 0, i32 1, !dbg !5171
  %181 = load double, double* %y325, align 8, !dbg !5171
  %sub326 = fsub double %conv323, %181, !dbg !5172
  %182 = load i64, i64* %y, align 8, !dbg !5173
  %conv327 = sitofp i64 %182 to double, !dbg !5173
  %arrayidx328 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 1, !dbg !5174
  %y329 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx328, i32 0, i32 1, !dbg !5175
  %183 = load double, double* %y329, align 8, !dbg !5175
  %sub330 = fsub double %conv327, %183, !dbg !5176
  %mul331 = fmul double %sub326, %sub330, !dbg !5177
  %184 = load i64, i64* %y, align 8, !dbg !5178
  %conv332 = sitofp i64 %184 to double, !dbg !5178
  %arrayidx333 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 1, !dbg !5179
  %y334 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx333, i32 0, i32 1, !dbg !5180
  %185 = load double, double* %y334, align 8, !dbg !5180
  %sub335 = fsub double %conv332, %185, !dbg !5181
  %mul336 = fmul double %mul331, %sub335, !dbg !5182
  %mul337 = fmul double %mul336, 0x3EF0001000100010, !dbg !5183
  %red338 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 5, !dbg !5184
  %186 = load float, float* %red338, align 8, !dbg !5184
  %conv339 = fpext float %186 to double, !dbg !5185
  %mul340 = fmul double %mul337, %conv339, !dbg !5186
  %arrayidx341 = getelementptr inbounds [48 x double], [48 x double]* %M03, i64 0, i64 1, !dbg !5187
  %187 = load double, double* %arrayidx341, align 8, !dbg !5188
  %add342 = fadd double %187, %mul340, !dbg !5188
  store double %add342, double* %arrayidx341, align 8, !dbg !5188
  %188 = load i64, i64* %x180, align 8, !dbg !5189
  %conv343 = sitofp i64 %188 to double, !dbg !5189
  %arrayidx344 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 2, !dbg !5190
  %x345 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx344, i32 0, i32 0, !dbg !5191
  %189 = load double, double* %x345, align 16, !dbg !5191
  %sub346 = fsub double %conv343, %189, !dbg !5192
  %190 = load i64, i64* %y, align 8, !dbg !5193
  %conv347 = sitofp i64 %190 to double, !dbg !5193
  %arrayidx348 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 2, !dbg !5194
  %y349 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx348, i32 0, i32 1, !dbg !5195
  %191 = load double, double* %y349, align 8, !dbg !5195
  %sub350 = fsub double %conv347, %191, !dbg !5196
  %mul351 = fmul double %sub346, %sub350, !dbg !5197
  %mul352 = fmul double %mul351, 0x3EF0001000100010, !dbg !5198
  %green353 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 6, !dbg !5199
  %192 = load float, float* %green353, align 4, !dbg !5199
  %conv354 = fpext float %192 to double, !dbg !5200
  %mul355 = fmul double %mul352, %conv354, !dbg !5201
  %arrayidx356 = getelementptr inbounds [48 x double], [48 x double]* %M11, i64 0, i64 2, !dbg !5202
  %193 = load double, double* %arrayidx356, align 16, !dbg !5203
  %add357 = fadd double %193, %mul355, !dbg !5203
  store double %add357, double* %arrayidx356, align 16, !dbg !5203
  %194 = load i64, i64* %x180, align 8, !dbg !5204
  %conv358 = sitofp i64 %194 to double, !dbg !5204
  %arrayidx359 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 2, !dbg !5205
  %x360 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx359, i32 0, i32 0, !dbg !5206
  %195 = load double, double* %x360, align 16, !dbg !5206
  %sub361 = fsub double %conv358, %195, !dbg !5207
  %196 = load i64, i64* %x180, align 8, !dbg !5208
  %conv362 = sitofp i64 %196 to double, !dbg !5208
  %arrayidx363 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 2, !dbg !5209
  %x364 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx363, i32 0, i32 0, !dbg !5210
  %197 = load double, double* %x364, align 16, !dbg !5210
  %sub365 = fsub double %conv362, %197, !dbg !5211
  %mul366 = fmul double %sub361, %sub365, !dbg !5212
  %mul367 = fmul double %mul366, 0x3EF0001000100010, !dbg !5213
  %green368 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 6, !dbg !5214
  %198 = load float, float* %green368, align 4, !dbg !5214
  %conv369 = fpext float %198 to double, !dbg !5215
  %mul370 = fmul double %mul367, %conv369, !dbg !5216
  %arrayidx371 = getelementptr inbounds [48 x double], [48 x double]* %M20, i64 0, i64 2, !dbg !5217
  %199 = load double, double* %arrayidx371, align 16, !dbg !5218
  %add372 = fadd double %199, %mul370, !dbg !5218
  store double %add372, double* %arrayidx371, align 16, !dbg !5218
  %200 = load i64, i64* %y, align 8, !dbg !5219
  %conv373 = sitofp i64 %200 to double, !dbg !5219
  %arrayidx374 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 2, !dbg !5220
  %y375 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx374, i32 0, i32 1, !dbg !5221
  %201 = load double, double* %y375, align 8, !dbg !5221
  %sub376 = fsub double %conv373, %201, !dbg !5222
  %202 = load i64, i64* %y, align 8, !dbg !5223
  %conv377 = sitofp i64 %202 to double, !dbg !5223
  %arrayidx378 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 2, !dbg !5224
  %y379 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx378, i32 0, i32 1, !dbg !5225
  %203 = load double, double* %y379, align 8, !dbg !5225
  %sub380 = fsub double %conv377, %203, !dbg !5226
  %mul381 = fmul double %sub376, %sub380, !dbg !5227
  %mul382 = fmul double %mul381, 0x3EF0001000100010, !dbg !5228
  %green383 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 6, !dbg !5229
  %204 = load float, float* %green383, align 4, !dbg !5229
  %conv384 = fpext float %204 to double, !dbg !5230
  %mul385 = fmul double %mul382, %conv384, !dbg !5231
  %arrayidx386 = getelementptr inbounds [48 x double], [48 x double]* %M02, i64 0, i64 2, !dbg !5232
  %205 = load double, double* %arrayidx386, align 16, !dbg !5233
  %add387 = fadd double %205, %mul385, !dbg !5233
  store double %add387, double* %arrayidx386, align 16, !dbg !5233
  %206 = load i64, i64* %x180, align 8, !dbg !5234
  %conv388 = sitofp i64 %206 to double, !dbg !5234
  %arrayidx389 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 2, !dbg !5235
  %x390 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx389, i32 0, i32 0, !dbg !5236
  %207 = load double, double* %x390, align 16, !dbg !5236
  %sub391 = fsub double %conv388, %207, !dbg !5237
  %208 = load i64, i64* %x180, align 8, !dbg !5238
  %conv392 = sitofp i64 %208 to double, !dbg !5238
  %arrayidx393 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 2, !dbg !5239
  %x394 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx393, i32 0, i32 0, !dbg !5240
  %209 = load double, double* %x394, align 16, !dbg !5240
  %sub395 = fsub double %conv392, %209, !dbg !5241
  %mul396 = fmul double %sub391, %sub395, !dbg !5242
  %210 = load i64, i64* %y, align 8, !dbg !5243
  %conv397 = sitofp i64 %210 to double, !dbg !5243
  %arrayidx398 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 2, !dbg !5244
  %y399 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx398, i32 0, i32 1, !dbg !5245
  %211 = load double, double* %y399, align 8, !dbg !5245
  %sub400 = fsub double %conv397, %211, !dbg !5246
  %mul401 = fmul double %mul396, %sub400, !dbg !5247
  %mul402 = fmul double %mul401, 0x3EF0001000100010, !dbg !5248
  %green403 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 6, !dbg !5249
  %212 = load float, float* %green403, align 4, !dbg !5249
  %conv404 = fpext float %212 to double, !dbg !5250
  %mul405 = fmul double %mul402, %conv404, !dbg !5251
  %arrayidx406 = getelementptr inbounds [48 x double], [48 x double]* %M21, i64 0, i64 2, !dbg !5252
  %213 = load double, double* %arrayidx406, align 16, !dbg !5253
  %add407 = fadd double %213, %mul405, !dbg !5253
  store double %add407, double* %arrayidx406, align 16, !dbg !5253
  %214 = load i64, i64* %x180, align 8, !dbg !5254
  %conv408 = sitofp i64 %214 to double, !dbg !5254
  %arrayidx409 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 2, !dbg !5255
  %x410 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx409, i32 0, i32 0, !dbg !5256
  %215 = load double, double* %x410, align 16, !dbg !5256
  %sub411 = fsub double %conv408, %215, !dbg !5257
  %216 = load i64, i64* %y, align 8, !dbg !5258
  %conv412 = sitofp i64 %216 to double, !dbg !5258
  %arrayidx413 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 2, !dbg !5259
  %y414 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx413, i32 0, i32 1, !dbg !5260
  %217 = load double, double* %y414, align 8, !dbg !5260
  %sub415 = fsub double %conv412, %217, !dbg !5261
  %mul416 = fmul double %sub411, %sub415, !dbg !5262
  %218 = load i64, i64* %y, align 8, !dbg !5263
  %conv417 = sitofp i64 %218 to double, !dbg !5263
  %arrayidx418 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 2, !dbg !5264
  %y419 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx418, i32 0, i32 1, !dbg !5265
  %219 = load double, double* %y419, align 8, !dbg !5265
  %sub420 = fsub double %conv417, %219, !dbg !5266
  %mul421 = fmul double %mul416, %sub420, !dbg !5267
  %mul422 = fmul double %mul421, 0x3EF0001000100010, !dbg !5268
  %green423 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 6, !dbg !5269
  %220 = load float, float* %green423, align 4, !dbg !5269
  %conv424 = fpext float %220 to double, !dbg !5270
  %mul425 = fmul double %mul422, %conv424, !dbg !5271
  %arrayidx426 = getelementptr inbounds [48 x double], [48 x double]* %M12, i64 0, i64 2, !dbg !5272
  %221 = load double, double* %arrayidx426, align 16, !dbg !5273
  %add427 = fadd double %221, %mul425, !dbg !5273
  store double %add427, double* %arrayidx426, align 16, !dbg !5273
  %222 = load i64, i64* %x180, align 8, !dbg !5274
  %conv428 = sitofp i64 %222 to double, !dbg !5274
  %arrayidx429 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 2, !dbg !5275
  %x430 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx429, i32 0, i32 0, !dbg !5276
  %223 = load double, double* %x430, align 16, !dbg !5276
  %sub431 = fsub double %conv428, %223, !dbg !5277
  %224 = load i64, i64* %x180, align 8, !dbg !5278
  %conv432 = sitofp i64 %224 to double, !dbg !5278
  %arrayidx433 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 2, !dbg !5279
  %x434 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx433, i32 0, i32 0, !dbg !5280
  %225 = load double, double* %x434, align 16, !dbg !5280
  %sub435 = fsub double %conv432, %225, !dbg !5281
  %mul436 = fmul double %sub431, %sub435, !dbg !5282
  %226 = load i64, i64* %y, align 8, !dbg !5283
  %conv437 = sitofp i64 %226 to double, !dbg !5283
  %arrayidx438 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 2, !dbg !5284
  %y439 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx438, i32 0, i32 1, !dbg !5285
  %227 = load double, double* %y439, align 8, !dbg !5285
  %sub440 = fsub double %conv437, %227, !dbg !5286
  %mul441 = fmul double %mul436, %sub440, !dbg !5287
  %228 = load i64, i64* %y, align 8, !dbg !5288
  %conv442 = sitofp i64 %228 to double, !dbg !5288
  %arrayidx443 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 2, !dbg !5289
  %y444 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx443, i32 0, i32 1, !dbg !5290
  %229 = load double, double* %y444, align 8, !dbg !5290
  %sub445 = fsub double %conv442, %229, !dbg !5291
  %mul446 = fmul double %mul441, %sub445, !dbg !5292
  %mul447 = fmul double %mul446, 0x3EF0001000100010, !dbg !5293
  %green448 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 6, !dbg !5294
  %230 = load float, float* %green448, align 4, !dbg !5294
  %conv449 = fpext float %230 to double, !dbg !5295
  %mul450 = fmul double %mul447, %conv449, !dbg !5296
  %arrayidx451 = getelementptr inbounds [48 x double], [48 x double]* %M22, i64 0, i64 2, !dbg !5297
  %231 = load double, double* %arrayidx451, align 16, !dbg !5298
  %add452 = fadd double %231, %mul450, !dbg !5298
  store double %add452, double* %arrayidx451, align 16, !dbg !5298
  %232 = load i64, i64* %x180, align 8, !dbg !5299
  %conv453 = sitofp i64 %232 to double, !dbg !5299
  %arrayidx454 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 2, !dbg !5300
  %x455 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx454, i32 0, i32 0, !dbg !5301
  %233 = load double, double* %x455, align 16, !dbg !5301
  %sub456 = fsub double %conv453, %233, !dbg !5302
  %234 = load i64, i64* %x180, align 8, !dbg !5303
  %conv457 = sitofp i64 %234 to double, !dbg !5303
  %arrayidx458 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 2, !dbg !5304
  %x459 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx458, i32 0, i32 0, !dbg !5305
  %235 = load double, double* %x459, align 16, !dbg !5305
  %sub460 = fsub double %conv457, %235, !dbg !5306
  %mul461 = fmul double %sub456, %sub460, !dbg !5307
  %236 = load i64, i64* %x180, align 8, !dbg !5308
  %conv462 = sitofp i64 %236 to double, !dbg !5308
  %arrayidx463 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 2, !dbg !5309
  %x464 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx463, i32 0, i32 0, !dbg !5310
  %237 = load double, double* %x464, align 16, !dbg !5310
  %sub465 = fsub double %conv462, %237, !dbg !5311
  %mul466 = fmul double %mul461, %sub465, !dbg !5312
  %mul467 = fmul double %mul466, 0x3EF0001000100010, !dbg !5313
  %green468 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 6, !dbg !5314
  %238 = load float, float* %green468, align 4, !dbg !5314
  %conv469 = fpext float %238 to double, !dbg !5315
  %mul470 = fmul double %mul467, %conv469, !dbg !5316
  %arrayidx471 = getelementptr inbounds [48 x double], [48 x double]* %M30, i64 0, i64 2, !dbg !5317
  %239 = load double, double* %arrayidx471, align 16, !dbg !5318
  %add472 = fadd double %239, %mul470, !dbg !5318
  store double %add472, double* %arrayidx471, align 16, !dbg !5318
  %240 = load i64, i64* %y, align 8, !dbg !5319
  %conv473 = sitofp i64 %240 to double, !dbg !5319
  %arrayidx474 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 2, !dbg !5320
  %y475 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx474, i32 0, i32 1, !dbg !5321
  %241 = load double, double* %y475, align 8, !dbg !5321
  %sub476 = fsub double %conv473, %241, !dbg !5322
  %242 = load i64, i64* %y, align 8, !dbg !5323
  %conv477 = sitofp i64 %242 to double, !dbg !5323
  %arrayidx478 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 2, !dbg !5324
  %y479 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx478, i32 0, i32 1, !dbg !5325
  %243 = load double, double* %y479, align 8, !dbg !5325
  %sub480 = fsub double %conv477, %243, !dbg !5326
  %mul481 = fmul double %sub476, %sub480, !dbg !5327
  %244 = load i64, i64* %y, align 8, !dbg !5328
  %conv482 = sitofp i64 %244 to double, !dbg !5328
  %arrayidx483 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 2, !dbg !5329
  %y484 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx483, i32 0, i32 1, !dbg !5330
  %245 = load double, double* %y484, align 8, !dbg !5330
  %sub485 = fsub double %conv482, %245, !dbg !5331
  %mul486 = fmul double %mul481, %sub485, !dbg !5332
  %mul487 = fmul double %mul486, 0x3EF0001000100010, !dbg !5333
  %green488 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 6, !dbg !5334
  %246 = load float, float* %green488, align 4, !dbg !5334
  %conv489 = fpext float %246 to double, !dbg !5335
  %mul490 = fmul double %mul487, %conv489, !dbg !5336
  %arrayidx491 = getelementptr inbounds [48 x double], [48 x double]* %M03, i64 0, i64 2, !dbg !5337
  %247 = load double, double* %arrayidx491, align 16, !dbg !5338
  %add492 = fadd double %247, %mul490, !dbg !5338
  store double %add492, double* %arrayidx491, align 16, !dbg !5338
  %248 = load i64, i64* %x180, align 8, !dbg !5339
  %conv493 = sitofp i64 %248 to double, !dbg !5339
  %arrayidx494 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 4, !dbg !5340
  %x495 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx494, i32 0, i32 0, !dbg !5341
  %249 = load double, double* %x495, align 16, !dbg !5341
  %sub496 = fsub double %conv493, %249, !dbg !5342
  %250 = load i64, i64* %y, align 8, !dbg !5343
  %conv497 = sitofp i64 %250 to double, !dbg !5343
  %arrayidx498 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 4, !dbg !5344
  %y499 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx498, i32 0, i32 1, !dbg !5345
  %251 = load double, double* %y499, align 8, !dbg !5345
  %sub500 = fsub double %conv497, %251, !dbg !5346
  %mul501 = fmul double %sub496, %sub500, !dbg !5347
  %mul502 = fmul double %mul501, 0x3EF0001000100010, !dbg !5348
  %blue503 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 7, !dbg !5349
  %252 = load float, float* %blue503, align 8, !dbg !5349
  %conv504 = fpext float %252 to double, !dbg !5350
  %mul505 = fmul double %mul502, %conv504, !dbg !5351
  %arrayidx506 = getelementptr inbounds [48 x double], [48 x double]* %M11, i64 0, i64 4, !dbg !5352
  %253 = load double, double* %arrayidx506, align 16, !dbg !5353
  %add507 = fadd double %253, %mul505, !dbg !5353
  store double %add507, double* %arrayidx506, align 16, !dbg !5353
  %254 = load i64, i64* %x180, align 8, !dbg !5354
  %conv508 = sitofp i64 %254 to double, !dbg !5354
  %arrayidx509 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 4, !dbg !5355
  %x510 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx509, i32 0, i32 0, !dbg !5356
  %255 = load double, double* %x510, align 16, !dbg !5356
  %sub511 = fsub double %conv508, %255, !dbg !5357
  %256 = load i64, i64* %x180, align 8, !dbg !5358
  %conv512 = sitofp i64 %256 to double, !dbg !5358
  %arrayidx513 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 4, !dbg !5359
  %x514 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx513, i32 0, i32 0, !dbg !5360
  %257 = load double, double* %x514, align 16, !dbg !5360
  %sub515 = fsub double %conv512, %257, !dbg !5361
  %mul516 = fmul double %sub511, %sub515, !dbg !5362
  %mul517 = fmul double %mul516, 0x3EF0001000100010, !dbg !5363
  %blue518 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 7, !dbg !5364
  %258 = load float, float* %blue518, align 8, !dbg !5364
  %conv519 = fpext float %258 to double, !dbg !5365
  %mul520 = fmul double %mul517, %conv519, !dbg !5366
  %arrayidx521 = getelementptr inbounds [48 x double], [48 x double]* %M20, i64 0, i64 4, !dbg !5367
  %259 = load double, double* %arrayidx521, align 16, !dbg !5368
  %add522 = fadd double %259, %mul520, !dbg !5368
  store double %add522, double* %arrayidx521, align 16, !dbg !5368
  %260 = load i64, i64* %y, align 8, !dbg !5369
  %conv523 = sitofp i64 %260 to double, !dbg !5369
  %arrayidx524 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 4, !dbg !5370
  %y525 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx524, i32 0, i32 1, !dbg !5371
  %261 = load double, double* %y525, align 8, !dbg !5371
  %sub526 = fsub double %conv523, %261, !dbg !5372
  %262 = load i64, i64* %y, align 8, !dbg !5373
  %conv527 = sitofp i64 %262 to double, !dbg !5373
  %arrayidx528 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 4, !dbg !5374
  %y529 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx528, i32 0, i32 1, !dbg !5375
  %263 = load double, double* %y529, align 8, !dbg !5375
  %sub530 = fsub double %conv527, %263, !dbg !5376
  %mul531 = fmul double %sub526, %sub530, !dbg !5377
  %mul532 = fmul double %mul531, 0x3EF0001000100010, !dbg !5378
  %blue533 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 7, !dbg !5379
  %264 = load float, float* %blue533, align 8, !dbg !5379
  %conv534 = fpext float %264 to double, !dbg !5380
  %mul535 = fmul double %mul532, %conv534, !dbg !5381
  %arrayidx536 = getelementptr inbounds [48 x double], [48 x double]* %M02, i64 0, i64 4, !dbg !5382
  %265 = load double, double* %arrayidx536, align 16, !dbg !5383
  %add537 = fadd double %265, %mul535, !dbg !5383
  store double %add537, double* %arrayidx536, align 16, !dbg !5383
  %266 = load i64, i64* %x180, align 8, !dbg !5384
  %conv538 = sitofp i64 %266 to double, !dbg !5384
  %arrayidx539 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 4, !dbg !5385
  %x540 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx539, i32 0, i32 0, !dbg !5386
  %267 = load double, double* %x540, align 16, !dbg !5386
  %sub541 = fsub double %conv538, %267, !dbg !5387
  %268 = load i64, i64* %x180, align 8, !dbg !5388
  %conv542 = sitofp i64 %268 to double, !dbg !5388
  %arrayidx543 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 4, !dbg !5389
  %x544 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx543, i32 0, i32 0, !dbg !5390
  %269 = load double, double* %x544, align 16, !dbg !5390
  %sub545 = fsub double %conv542, %269, !dbg !5391
  %mul546 = fmul double %sub541, %sub545, !dbg !5392
  %270 = load i64, i64* %y, align 8, !dbg !5393
  %conv547 = sitofp i64 %270 to double, !dbg !5393
  %arrayidx548 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 4, !dbg !5394
  %y549 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx548, i32 0, i32 1, !dbg !5395
  %271 = load double, double* %y549, align 8, !dbg !5395
  %sub550 = fsub double %conv547, %271, !dbg !5396
  %mul551 = fmul double %mul546, %sub550, !dbg !5397
  %mul552 = fmul double %mul551, 0x3EF0001000100010, !dbg !5398
  %blue553 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 7, !dbg !5399
  %272 = load float, float* %blue553, align 8, !dbg !5399
  %conv554 = fpext float %272 to double, !dbg !5400
  %mul555 = fmul double %mul552, %conv554, !dbg !5401
  %arrayidx556 = getelementptr inbounds [48 x double], [48 x double]* %M21, i64 0, i64 4, !dbg !5402
  %273 = load double, double* %arrayidx556, align 16, !dbg !5403
  %add557 = fadd double %273, %mul555, !dbg !5403
  store double %add557, double* %arrayidx556, align 16, !dbg !5403
  %274 = load i64, i64* %x180, align 8, !dbg !5404
  %conv558 = sitofp i64 %274 to double, !dbg !5404
  %arrayidx559 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 4, !dbg !5405
  %x560 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx559, i32 0, i32 0, !dbg !5406
  %275 = load double, double* %x560, align 16, !dbg !5406
  %sub561 = fsub double %conv558, %275, !dbg !5407
  %276 = load i64, i64* %y, align 8, !dbg !5408
  %conv562 = sitofp i64 %276 to double, !dbg !5408
  %arrayidx563 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 4, !dbg !5409
  %y564 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx563, i32 0, i32 1, !dbg !5410
  %277 = load double, double* %y564, align 8, !dbg !5410
  %sub565 = fsub double %conv562, %277, !dbg !5411
  %mul566 = fmul double %sub561, %sub565, !dbg !5412
  %278 = load i64, i64* %y, align 8, !dbg !5413
  %conv567 = sitofp i64 %278 to double, !dbg !5413
  %arrayidx568 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 4, !dbg !5414
  %y569 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx568, i32 0, i32 1, !dbg !5415
  %279 = load double, double* %y569, align 8, !dbg !5415
  %sub570 = fsub double %conv567, %279, !dbg !5416
  %mul571 = fmul double %mul566, %sub570, !dbg !5417
  %mul572 = fmul double %mul571, 0x3EF0001000100010, !dbg !5418
  %blue573 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 7, !dbg !5419
  %280 = load float, float* %blue573, align 8, !dbg !5419
  %conv574 = fpext float %280 to double, !dbg !5420
  %mul575 = fmul double %mul572, %conv574, !dbg !5421
  %arrayidx576 = getelementptr inbounds [48 x double], [48 x double]* %M12, i64 0, i64 4, !dbg !5422
  %281 = load double, double* %arrayidx576, align 16, !dbg !5423
  %add577 = fadd double %281, %mul575, !dbg !5423
  store double %add577, double* %arrayidx576, align 16, !dbg !5423
  %282 = load i64, i64* %x180, align 8, !dbg !5424
  %conv578 = sitofp i64 %282 to double, !dbg !5424
  %arrayidx579 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 4, !dbg !5425
  %x580 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx579, i32 0, i32 0, !dbg !5426
  %283 = load double, double* %x580, align 16, !dbg !5426
  %sub581 = fsub double %conv578, %283, !dbg !5427
  %284 = load i64, i64* %x180, align 8, !dbg !5428
  %conv582 = sitofp i64 %284 to double, !dbg !5428
  %arrayidx583 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 4, !dbg !5429
  %x584 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx583, i32 0, i32 0, !dbg !5430
  %285 = load double, double* %x584, align 16, !dbg !5430
  %sub585 = fsub double %conv582, %285, !dbg !5431
  %mul586 = fmul double %sub581, %sub585, !dbg !5432
  %286 = load i64, i64* %y, align 8, !dbg !5433
  %conv587 = sitofp i64 %286 to double, !dbg !5433
  %arrayidx588 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 4, !dbg !5434
  %y589 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx588, i32 0, i32 1, !dbg !5435
  %287 = load double, double* %y589, align 8, !dbg !5435
  %sub590 = fsub double %conv587, %287, !dbg !5436
  %mul591 = fmul double %mul586, %sub590, !dbg !5437
  %288 = load i64, i64* %y, align 8, !dbg !5438
  %conv592 = sitofp i64 %288 to double, !dbg !5438
  %arrayidx593 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 4, !dbg !5439
  %y594 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx593, i32 0, i32 1, !dbg !5440
  %289 = load double, double* %y594, align 8, !dbg !5440
  %sub595 = fsub double %conv592, %289, !dbg !5441
  %mul596 = fmul double %mul591, %sub595, !dbg !5442
  %mul597 = fmul double %mul596, 0x3EF0001000100010, !dbg !5443
  %blue598 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 7, !dbg !5444
  %290 = load float, float* %blue598, align 8, !dbg !5444
  %conv599 = fpext float %290 to double, !dbg !5445
  %mul600 = fmul double %mul597, %conv599, !dbg !5446
  %arrayidx601 = getelementptr inbounds [48 x double], [48 x double]* %M22, i64 0, i64 4, !dbg !5447
  %291 = load double, double* %arrayidx601, align 16, !dbg !5448
  %add602 = fadd double %291, %mul600, !dbg !5448
  store double %add602, double* %arrayidx601, align 16, !dbg !5448
  %292 = load i64, i64* %x180, align 8, !dbg !5449
  %conv603 = sitofp i64 %292 to double, !dbg !5449
  %arrayidx604 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 4, !dbg !5450
  %x605 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx604, i32 0, i32 0, !dbg !5451
  %293 = load double, double* %x605, align 16, !dbg !5451
  %sub606 = fsub double %conv603, %293, !dbg !5452
  %294 = load i64, i64* %x180, align 8, !dbg !5453
  %conv607 = sitofp i64 %294 to double, !dbg !5453
  %arrayidx608 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 4, !dbg !5454
  %x609 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx608, i32 0, i32 0, !dbg !5455
  %295 = load double, double* %x609, align 16, !dbg !5455
  %sub610 = fsub double %conv607, %295, !dbg !5456
  %mul611 = fmul double %sub606, %sub610, !dbg !5457
  %296 = load i64, i64* %x180, align 8, !dbg !5458
  %conv612 = sitofp i64 %296 to double, !dbg !5458
  %arrayidx613 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 4, !dbg !5459
  %x614 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx613, i32 0, i32 0, !dbg !5460
  %297 = load double, double* %x614, align 16, !dbg !5460
  %sub615 = fsub double %conv612, %297, !dbg !5461
  %mul616 = fmul double %mul611, %sub615, !dbg !5462
  %mul617 = fmul double %mul616, 0x3EF0001000100010, !dbg !5463
  %blue618 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 7, !dbg !5464
  %298 = load float, float* %blue618, align 8, !dbg !5464
  %conv619 = fpext float %298 to double, !dbg !5465
  %mul620 = fmul double %mul617, %conv619, !dbg !5466
  %arrayidx621 = getelementptr inbounds [48 x double], [48 x double]* %M30, i64 0, i64 4, !dbg !5467
  %299 = load double, double* %arrayidx621, align 16, !dbg !5468
  %add622 = fadd double %299, %mul620, !dbg !5468
  store double %add622, double* %arrayidx621, align 16, !dbg !5468
  %300 = load i64, i64* %y, align 8, !dbg !5469
  %conv623 = sitofp i64 %300 to double, !dbg !5469
  %arrayidx624 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 4, !dbg !5470
  %y625 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx624, i32 0, i32 1, !dbg !5471
  %301 = load double, double* %y625, align 8, !dbg !5471
  %sub626 = fsub double %conv623, %301, !dbg !5472
  %302 = load i64, i64* %y, align 8, !dbg !5473
  %conv627 = sitofp i64 %302 to double, !dbg !5473
  %arrayidx628 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 4, !dbg !5474
  %y629 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx628, i32 0, i32 1, !dbg !5475
  %303 = load double, double* %y629, align 8, !dbg !5475
  %sub630 = fsub double %conv627, %303, !dbg !5476
  %mul631 = fmul double %sub626, %sub630, !dbg !5477
  %304 = load i64, i64* %y, align 8, !dbg !5478
  %conv632 = sitofp i64 %304 to double, !dbg !5478
  %arrayidx633 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 4, !dbg !5479
  %y634 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx633, i32 0, i32 1, !dbg !5480
  %305 = load double, double* %y634, align 8, !dbg !5480
  %sub635 = fsub double %conv632, %305, !dbg !5481
  %mul636 = fmul double %mul631, %sub635, !dbg !5482
  %mul637 = fmul double %mul636, 0x3EF0001000100010, !dbg !5483
  %blue638 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 7, !dbg !5484
  %306 = load float, float* %blue638, align 8, !dbg !5484
  %conv639 = fpext float %306 to double, !dbg !5485
  %mul640 = fmul double %mul637, %conv639, !dbg !5486
  %arrayidx641 = getelementptr inbounds [48 x double], [48 x double]* %M03, i64 0, i64 4, !dbg !5487
  %307 = load double, double* %arrayidx641, align 16, !dbg !5488
  %add642 = fadd double %307, %mul640, !dbg !5488
  store double %add642, double* %arrayidx641, align 16, !dbg !5488
  %308 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5489
  %matte643 = getelementptr inbounds %struct._Image, %struct._Image* %308, i32 0, i32 6, !dbg !5491
  %309 = load i32, i32* %matte643, align 8, !dbg !5491
  %cmp644 = icmp ne i32 %309, 0, !dbg !5492
  br i1 %cmp644, label %if.then646, label %if.end797, !dbg !5493

if.then646:                                       ; preds = %for.body192
  %310 = load i64, i64* %x180, align 8, !dbg !5494
  %conv647 = sitofp i64 %310 to double, !dbg !5494
  %arrayidx648 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 8, !dbg !5496
  %x649 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx648, i32 0, i32 0, !dbg !5497
  %311 = load double, double* %x649, align 16, !dbg !5497
  %sub650 = fsub double %conv647, %311, !dbg !5498
  %312 = load i64, i64* %y, align 8, !dbg !5499
  %conv651 = sitofp i64 %312 to double, !dbg !5499
  %arrayidx652 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 8, !dbg !5500
  %y653 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx652, i32 0, i32 1, !dbg !5501
  %313 = load double, double* %y653, align 8, !dbg !5501
  %sub654 = fsub double %conv651, %313, !dbg !5502
  %mul655 = fmul double %sub650, %sub654, !dbg !5503
  %mul656 = fmul double %mul655, 0x3EF0001000100010, !dbg !5504
  %opacity657 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 8, !dbg !5505
  %314 = load float, float* %opacity657, align 4, !dbg !5505
  %conv658 = fpext float %314 to double, !dbg !5506
  %mul659 = fmul double %mul656, %conv658, !dbg !5507
  %arrayidx660 = getelementptr inbounds [48 x double], [48 x double]* %M11, i64 0, i64 8, !dbg !5508
  %315 = load double, double* %arrayidx660, align 16, !dbg !5509
  %add661 = fadd double %315, %mul659, !dbg !5509
  store double %add661, double* %arrayidx660, align 16, !dbg !5509
  %316 = load i64, i64* %x180, align 8, !dbg !5510
  %conv662 = sitofp i64 %316 to double, !dbg !5510
  %arrayidx663 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 8, !dbg !5511
  %x664 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx663, i32 0, i32 0, !dbg !5512
  %317 = load double, double* %x664, align 16, !dbg !5512
  %sub665 = fsub double %conv662, %317, !dbg !5513
  %318 = load i64, i64* %x180, align 8, !dbg !5514
  %conv666 = sitofp i64 %318 to double, !dbg !5514
  %arrayidx667 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 8, !dbg !5515
  %x668 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx667, i32 0, i32 0, !dbg !5516
  %319 = load double, double* %x668, align 16, !dbg !5516
  %sub669 = fsub double %conv666, %319, !dbg !5517
  %mul670 = fmul double %sub665, %sub669, !dbg !5518
  %mul671 = fmul double %mul670, 0x3EF0001000100010, !dbg !5519
  %opacity672 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 8, !dbg !5520
  %320 = load float, float* %opacity672, align 4, !dbg !5520
  %conv673 = fpext float %320 to double, !dbg !5521
  %mul674 = fmul double %mul671, %conv673, !dbg !5522
  %arrayidx675 = getelementptr inbounds [48 x double], [48 x double]* %M20, i64 0, i64 8, !dbg !5523
  %321 = load double, double* %arrayidx675, align 16, !dbg !5524
  %add676 = fadd double %321, %mul674, !dbg !5524
  store double %add676, double* %arrayidx675, align 16, !dbg !5524
  %322 = load i64, i64* %y, align 8, !dbg !5525
  %conv677 = sitofp i64 %322 to double, !dbg !5525
  %arrayidx678 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 8, !dbg !5526
  %y679 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx678, i32 0, i32 1, !dbg !5527
  %323 = load double, double* %y679, align 8, !dbg !5527
  %sub680 = fsub double %conv677, %323, !dbg !5528
  %324 = load i64, i64* %y, align 8, !dbg !5529
  %conv681 = sitofp i64 %324 to double, !dbg !5529
  %arrayidx682 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 8, !dbg !5530
  %y683 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx682, i32 0, i32 1, !dbg !5531
  %325 = load double, double* %y683, align 8, !dbg !5531
  %sub684 = fsub double %conv681, %325, !dbg !5532
  %mul685 = fmul double %sub680, %sub684, !dbg !5533
  %mul686 = fmul double %mul685, 0x3EF0001000100010, !dbg !5534
  %opacity687 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 8, !dbg !5535
  %326 = load float, float* %opacity687, align 4, !dbg !5535
  %conv688 = fpext float %326 to double, !dbg !5536
  %mul689 = fmul double %mul686, %conv688, !dbg !5537
  %arrayidx690 = getelementptr inbounds [48 x double], [48 x double]* %M02, i64 0, i64 8, !dbg !5538
  %327 = load double, double* %arrayidx690, align 16, !dbg !5539
  %add691 = fadd double %327, %mul689, !dbg !5539
  store double %add691, double* %arrayidx690, align 16, !dbg !5539
  %328 = load i64, i64* %x180, align 8, !dbg !5540
  %conv692 = sitofp i64 %328 to double, !dbg !5540
  %arrayidx693 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 8, !dbg !5541
  %x694 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx693, i32 0, i32 0, !dbg !5542
  %329 = load double, double* %x694, align 16, !dbg !5542
  %sub695 = fsub double %conv692, %329, !dbg !5543
  %330 = load i64, i64* %x180, align 8, !dbg !5544
  %conv696 = sitofp i64 %330 to double, !dbg !5544
  %arrayidx697 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 8, !dbg !5545
  %x698 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx697, i32 0, i32 0, !dbg !5546
  %331 = load double, double* %x698, align 16, !dbg !5546
  %sub699 = fsub double %conv696, %331, !dbg !5547
  %mul700 = fmul double %sub695, %sub699, !dbg !5548
  %332 = load i64, i64* %y, align 8, !dbg !5549
  %conv701 = sitofp i64 %332 to double, !dbg !5549
  %arrayidx702 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 8, !dbg !5550
  %y703 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx702, i32 0, i32 1, !dbg !5551
  %333 = load double, double* %y703, align 8, !dbg !5551
  %sub704 = fsub double %conv701, %333, !dbg !5552
  %mul705 = fmul double %mul700, %sub704, !dbg !5553
  %mul706 = fmul double %mul705, 0x3EF0001000100010, !dbg !5554
  %opacity707 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 8, !dbg !5555
  %334 = load float, float* %opacity707, align 4, !dbg !5555
  %conv708 = fpext float %334 to double, !dbg !5556
  %mul709 = fmul double %mul706, %conv708, !dbg !5557
  %arrayidx710 = getelementptr inbounds [48 x double], [48 x double]* %M21, i64 0, i64 8, !dbg !5558
  %335 = load double, double* %arrayidx710, align 16, !dbg !5559
  %add711 = fadd double %335, %mul709, !dbg !5559
  store double %add711, double* %arrayidx710, align 16, !dbg !5559
  %336 = load i64, i64* %x180, align 8, !dbg !5560
  %conv712 = sitofp i64 %336 to double, !dbg !5560
  %arrayidx713 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 8, !dbg !5561
  %x714 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx713, i32 0, i32 0, !dbg !5562
  %337 = load double, double* %x714, align 16, !dbg !5562
  %sub715 = fsub double %conv712, %337, !dbg !5563
  %338 = load i64, i64* %y, align 8, !dbg !5564
  %conv716 = sitofp i64 %338 to double, !dbg !5564
  %arrayidx717 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 8, !dbg !5565
  %y718 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx717, i32 0, i32 1, !dbg !5566
  %339 = load double, double* %y718, align 8, !dbg !5566
  %sub719 = fsub double %conv716, %339, !dbg !5567
  %mul720 = fmul double %sub715, %sub719, !dbg !5568
  %340 = load i64, i64* %y, align 8, !dbg !5569
  %conv721 = sitofp i64 %340 to double, !dbg !5569
  %arrayidx722 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 8, !dbg !5570
  %y723 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx722, i32 0, i32 1, !dbg !5571
  %341 = load double, double* %y723, align 8, !dbg !5571
  %sub724 = fsub double %conv721, %341, !dbg !5572
  %mul725 = fmul double %mul720, %sub724, !dbg !5573
  %mul726 = fmul double %mul725, 0x3EF0001000100010, !dbg !5574
  %opacity727 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 8, !dbg !5575
  %342 = load float, float* %opacity727, align 4, !dbg !5575
  %conv728 = fpext float %342 to double, !dbg !5576
  %mul729 = fmul double %mul726, %conv728, !dbg !5577
  %arrayidx730 = getelementptr inbounds [48 x double], [48 x double]* %M12, i64 0, i64 8, !dbg !5578
  %343 = load double, double* %arrayidx730, align 16, !dbg !5579
  %add731 = fadd double %343, %mul729, !dbg !5579
  store double %add731, double* %arrayidx730, align 16, !dbg !5579
  %344 = load i64, i64* %x180, align 8, !dbg !5580
  %conv732 = sitofp i64 %344 to double, !dbg !5580
  %arrayidx733 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 8, !dbg !5581
  %x734 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx733, i32 0, i32 0, !dbg !5582
  %345 = load double, double* %x734, align 16, !dbg !5582
  %sub735 = fsub double %conv732, %345, !dbg !5583
  %346 = load i64, i64* %x180, align 8, !dbg !5584
  %conv736 = sitofp i64 %346 to double, !dbg !5584
  %arrayidx737 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 8, !dbg !5585
  %x738 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx737, i32 0, i32 0, !dbg !5586
  %347 = load double, double* %x738, align 16, !dbg !5586
  %sub739 = fsub double %conv736, %347, !dbg !5587
  %mul740 = fmul double %sub735, %sub739, !dbg !5588
  %348 = load i64, i64* %y, align 8, !dbg !5589
  %conv741 = sitofp i64 %348 to double, !dbg !5589
  %arrayidx742 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 8, !dbg !5590
  %y743 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx742, i32 0, i32 1, !dbg !5591
  %349 = load double, double* %y743, align 8, !dbg !5591
  %sub744 = fsub double %conv741, %349, !dbg !5592
  %mul745 = fmul double %mul740, %sub744, !dbg !5593
  %350 = load i64, i64* %y, align 8, !dbg !5594
  %conv746 = sitofp i64 %350 to double, !dbg !5594
  %arrayidx747 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 8, !dbg !5595
  %y748 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx747, i32 0, i32 1, !dbg !5596
  %351 = load double, double* %y748, align 8, !dbg !5596
  %sub749 = fsub double %conv746, %351, !dbg !5597
  %mul750 = fmul double %mul745, %sub749, !dbg !5598
  %mul751 = fmul double %mul750, 0x3EF0001000100010, !dbg !5599
  %opacity752 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 8, !dbg !5600
  %352 = load float, float* %opacity752, align 4, !dbg !5600
  %conv753 = fpext float %352 to double, !dbg !5601
  %mul754 = fmul double %mul751, %conv753, !dbg !5602
  %arrayidx755 = getelementptr inbounds [48 x double], [48 x double]* %M22, i64 0, i64 8, !dbg !5603
  %353 = load double, double* %arrayidx755, align 16, !dbg !5604
  %add756 = fadd double %353, %mul754, !dbg !5604
  store double %add756, double* %arrayidx755, align 16, !dbg !5604
  %354 = load i64, i64* %x180, align 8, !dbg !5605
  %conv757 = sitofp i64 %354 to double, !dbg !5605
  %arrayidx758 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 8, !dbg !5606
  %x759 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx758, i32 0, i32 0, !dbg !5607
  %355 = load double, double* %x759, align 16, !dbg !5607
  %sub760 = fsub double %conv757, %355, !dbg !5608
  %356 = load i64, i64* %x180, align 8, !dbg !5609
  %conv761 = sitofp i64 %356 to double, !dbg !5609
  %arrayidx762 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 8, !dbg !5610
  %x763 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx762, i32 0, i32 0, !dbg !5611
  %357 = load double, double* %x763, align 16, !dbg !5611
  %sub764 = fsub double %conv761, %357, !dbg !5612
  %mul765 = fmul double %sub760, %sub764, !dbg !5613
  %358 = load i64, i64* %x180, align 8, !dbg !5614
  %conv766 = sitofp i64 %358 to double, !dbg !5614
  %arrayidx767 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 8, !dbg !5615
  %x768 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx767, i32 0, i32 0, !dbg !5616
  %359 = load double, double* %x768, align 16, !dbg !5616
  %sub769 = fsub double %conv766, %359, !dbg !5617
  %mul770 = fmul double %mul765, %sub769, !dbg !5618
  %mul771 = fmul double %mul770, 0x3EF0001000100010, !dbg !5619
  %opacity772 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 8, !dbg !5620
  %360 = load float, float* %opacity772, align 4, !dbg !5620
  %conv773 = fpext float %360 to double, !dbg !5621
  %mul774 = fmul double %mul771, %conv773, !dbg !5622
  %arrayidx775 = getelementptr inbounds [48 x double], [48 x double]* %M30, i64 0, i64 8, !dbg !5623
  %361 = load double, double* %arrayidx775, align 16, !dbg !5624
  %add776 = fadd double %361, %mul774, !dbg !5624
  store double %add776, double* %arrayidx775, align 16, !dbg !5624
  %362 = load i64, i64* %y, align 8, !dbg !5625
  %conv777 = sitofp i64 %362 to double, !dbg !5625
  %arrayidx778 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 8, !dbg !5626
  %y779 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx778, i32 0, i32 1, !dbg !5627
  %363 = load double, double* %y779, align 8, !dbg !5627
  %sub780 = fsub double %conv777, %363, !dbg !5628
  %364 = load i64, i64* %y, align 8, !dbg !5629
  %conv781 = sitofp i64 %364 to double, !dbg !5629
  %arrayidx782 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 8, !dbg !5630
  %y783 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx782, i32 0, i32 1, !dbg !5631
  %365 = load double, double* %y783, align 8, !dbg !5631
  %sub784 = fsub double %conv781, %365, !dbg !5632
  %mul785 = fmul double %sub780, %sub784, !dbg !5633
  %366 = load i64, i64* %y, align 8, !dbg !5634
  %conv786 = sitofp i64 %366 to double, !dbg !5634
  %arrayidx787 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 8, !dbg !5635
  %y788 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx787, i32 0, i32 1, !dbg !5636
  %367 = load double, double* %y788, align 8, !dbg !5636
  %sub789 = fsub double %conv786, %367, !dbg !5637
  %mul790 = fmul double %mul785, %sub789, !dbg !5638
  %mul791 = fmul double %mul790, 0x3EF0001000100010, !dbg !5639
  %opacity792 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 8, !dbg !5640
  %368 = load float, float* %opacity792, align 4, !dbg !5640
  %conv793 = fpext float %368 to double, !dbg !5641
  %mul794 = fmul double %mul791, %conv793, !dbg !5642
  %arrayidx795 = getelementptr inbounds [48 x double], [48 x double]* %M03, i64 0, i64 8, !dbg !5643
  %369 = load double, double* %arrayidx795, align 16, !dbg !5644
  %add796 = fadd double %369, %mul794, !dbg !5644
  store double %add796, double* %arrayidx795, align 16, !dbg !5644
  br label %if.end797, !dbg !5645

if.end797:                                        ; preds = %if.then646, %for.body192
  %370 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5646
  %colorspace798 = getelementptr inbounds %struct._Image, %struct._Image* %370, i32 0, i32 1, !dbg !5648
  %371 = load i32, i32* %colorspace798, align 4, !dbg !5648
  %cmp799 = icmp eq i32 %371, 12, !dbg !5649
  br i1 %cmp799, label %if.then801, label %if.end952, !dbg !5650

if.then801:                                       ; preds = %if.end797
  %372 = load i64, i64* %x180, align 8, !dbg !5651
  %conv802 = sitofp i64 %372 to double, !dbg !5651
  %arrayidx803 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 32, !dbg !5653
  %x804 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx803, i32 0, i32 0, !dbg !5654
  %373 = load double, double* %x804, align 16, !dbg !5654
  %sub805 = fsub double %conv802, %373, !dbg !5655
  %374 = load i64, i64* %y, align 8, !dbg !5656
  %conv806 = sitofp i64 %374 to double, !dbg !5656
  %arrayidx807 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 32, !dbg !5657
  %y808 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx807, i32 0, i32 1, !dbg !5658
  %375 = load double, double* %y808, align 8, !dbg !5658
  %sub809 = fsub double %conv806, %375, !dbg !5659
  %mul810 = fmul double %sub805, %sub809, !dbg !5660
  %mul811 = fmul double %mul810, 0x3EF0001000100010, !dbg !5661
  %index812 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 9, !dbg !5662
  %376 = load float, float* %index812, align 8, !dbg !5662
  %conv813 = fpext float %376 to double, !dbg !5663
  %mul814 = fmul double %mul811, %conv813, !dbg !5664
  %arrayidx815 = getelementptr inbounds [48 x double], [48 x double]* %M11, i64 0, i64 32, !dbg !5665
  %377 = load double, double* %arrayidx815, align 16, !dbg !5666
  %add816 = fadd double %377, %mul814, !dbg !5666
  store double %add816, double* %arrayidx815, align 16, !dbg !5666
  %378 = load i64, i64* %x180, align 8, !dbg !5667
  %conv817 = sitofp i64 %378 to double, !dbg !5667
  %arrayidx818 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 32, !dbg !5668
  %x819 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx818, i32 0, i32 0, !dbg !5669
  %379 = load double, double* %x819, align 16, !dbg !5669
  %sub820 = fsub double %conv817, %379, !dbg !5670
  %380 = load i64, i64* %x180, align 8, !dbg !5671
  %conv821 = sitofp i64 %380 to double, !dbg !5671
  %arrayidx822 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 32, !dbg !5672
  %x823 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx822, i32 0, i32 0, !dbg !5673
  %381 = load double, double* %x823, align 16, !dbg !5673
  %sub824 = fsub double %conv821, %381, !dbg !5674
  %mul825 = fmul double %sub820, %sub824, !dbg !5675
  %mul826 = fmul double %mul825, 0x3EF0001000100010, !dbg !5676
  %index827 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 9, !dbg !5677
  %382 = load float, float* %index827, align 8, !dbg !5677
  %conv828 = fpext float %382 to double, !dbg !5678
  %mul829 = fmul double %mul826, %conv828, !dbg !5679
  %arrayidx830 = getelementptr inbounds [48 x double], [48 x double]* %M20, i64 0, i64 32, !dbg !5680
  %383 = load double, double* %arrayidx830, align 16, !dbg !5681
  %add831 = fadd double %383, %mul829, !dbg !5681
  store double %add831, double* %arrayidx830, align 16, !dbg !5681
  %384 = load i64, i64* %y, align 8, !dbg !5682
  %conv832 = sitofp i64 %384 to double, !dbg !5682
  %arrayidx833 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 32, !dbg !5683
  %y834 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx833, i32 0, i32 1, !dbg !5684
  %385 = load double, double* %y834, align 8, !dbg !5684
  %sub835 = fsub double %conv832, %385, !dbg !5685
  %386 = load i64, i64* %y, align 8, !dbg !5686
  %conv836 = sitofp i64 %386 to double, !dbg !5686
  %arrayidx837 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 32, !dbg !5687
  %y838 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx837, i32 0, i32 1, !dbg !5688
  %387 = load double, double* %y838, align 8, !dbg !5688
  %sub839 = fsub double %conv836, %387, !dbg !5689
  %mul840 = fmul double %sub835, %sub839, !dbg !5690
  %mul841 = fmul double %mul840, 0x3EF0001000100010, !dbg !5691
  %index842 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 9, !dbg !5692
  %388 = load float, float* %index842, align 8, !dbg !5692
  %conv843 = fpext float %388 to double, !dbg !5693
  %mul844 = fmul double %mul841, %conv843, !dbg !5694
  %arrayidx845 = getelementptr inbounds [48 x double], [48 x double]* %M02, i64 0, i64 32, !dbg !5695
  %389 = load double, double* %arrayidx845, align 16, !dbg !5696
  %add846 = fadd double %389, %mul844, !dbg !5696
  store double %add846, double* %arrayidx845, align 16, !dbg !5696
  %390 = load i64, i64* %x180, align 8, !dbg !5697
  %conv847 = sitofp i64 %390 to double, !dbg !5697
  %arrayidx848 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 32, !dbg !5698
  %x849 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx848, i32 0, i32 0, !dbg !5699
  %391 = load double, double* %x849, align 16, !dbg !5699
  %sub850 = fsub double %conv847, %391, !dbg !5700
  %392 = load i64, i64* %x180, align 8, !dbg !5701
  %conv851 = sitofp i64 %392 to double, !dbg !5701
  %arrayidx852 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 32, !dbg !5702
  %x853 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx852, i32 0, i32 0, !dbg !5703
  %393 = load double, double* %x853, align 16, !dbg !5703
  %sub854 = fsub double %conv851, %393, !dbg !5704
  %mul855 = fmul double %sub850, %sub854, !dbg !5705
  %394 = load i64, i64* %y, align 8, !dbg !5706
  %conv856 = sitofp i64 %394 to double, !dbg !5706
  %arrayidx857 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 32, !dbg !5707
  %y858 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx857, i32 0, i32 1, !dbg !5708
  %395 = load double, double* %y858, align 8, !dbg !5708
  %sub859 = fsub double %conv856, %395, !dbg !5709
  %mul860 = fmul double %mul855, %sub859, !dbg !5710
  %mul861 = fmul double %mul860, 0x3EF0001000100010, !dbg !5711
  %index862 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 9, !dbg !5712
  %396 = load float, float* %index862, align 8, !dbg !5712
  %conv863 = fpext float %396 to double, !dbg !5713
  %mul864 = fmul double %mul861, %conv863, !dbg !5714
  %arrayidx865 = getelementptr inbounds [48 x double], [48 x double]* %M21, i64 0, i64 32, !dbg !5715
  %397 = load double, double* %arrayidx865, align 16, !dbg !5716
  %add866 = fadd double %397, %mul864, !dbg !5716
  store double %add866, double* %arrayidx865, align 16, !dbg !5716
  %398 = load i64, i64* %x180, align 8, !dbg !5717
  %conv867 = sitofp i64 %398 to double, !dbg !5717
  %arrayidx868 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 32, !dbg !5718
  %x869 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx868, i32 0, i32 0, !dbg !5719
  %399 = load double, double* %x869, align 16, !dbg !5719
  %sub870 = fsub double %conv867, %399, !dbg !5720
  %400 = load i64, i64* %y, align 8, !dbg !5721
  %conv871 = sitofp i64 %400 to double, !dbg !5721
  %arrayidx872 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 32, !dbg !5722
  %y873 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx872, i32 0, i32 1, !dbg !5723
  %401 = load double, double* %y873, align 8, !dbg !5723
  %sub874 = fsub double %conv871, %401, !dbg !5724
  %mul875 = fmul double %sub870, %sub874, !dbg !5725
  %402 = load i64, i64* %y, align 8, !dbg !5726
  %conv876 = sitofp i64 %402 to double, !dbg !5726
  %arrayidx877 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 32, !dbg !5727
  %y878 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx877, i32 0, i32 1, !dbg !5728
  %403 = load double, double* %y878, align 8, !dbg !5728
  %sub879 = fsub double %conv876, %403, !dbg !5729
  %mul880 = fmul double %mul875, %sub879, !dbg !5730
  %mul881 = fmul double %mul880, 0x3EF0001000100010, !dbg !5731
  %index882 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 9, !dbg !5732
  %404 = load float, float* %index882, align 8, !dbg !5732
  %conv883 = fpext float %404 to double, !dbg !5733
  %mul884 = fmul double %mul881, %conv883, !dbg !5734
  %arrayidx885 = getelementptr inbounds [48 x double], [48 x double]* %M12, i64 0, i64 32, !dbg !5735
  %405 = load double, double* %arrayidx885, align 16, !dbg !5736
  %add886 = fadd double %405, %mul884, !dbg !5736
  store double %add886, double* %arrayidx885, align 16, !dbg !5736
  %406 = load i64, i64* %x180, align 8, !dbg !5737
  %conv887 = sitofp i64 %406 to double, !dbg !5737
  %arrayidx888 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 32, !dbg !5738
  %x889 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx888, i32 0, i32 0, !dbg !5739
  %407 = load double, double* %x889, align 16, !dbg !5739
  %sub890 = fsub double %conv887, %407, !dbg !5740
  %408 = load i64, i64* %x180, align 8, !dbg !5741
  %conv891 = sitofp i64 %408 to double, !dbg !5741
  %arrayidx892 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 32, !dbg !5742
  %x893 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx892, i32 0, i32 0, !dbg !5743
  %409 = load double, double* %x893, align 16, !dbg !5743
  %sub894 = fsub double %conv891, %409, !dbg !5744
  %mul895 = fmul double %sub890, %sub894, !dbg !5745
  %410 = load i64, i64* %y, align 8, !dbg !5746
  %conv896 = sitofp i64 %410 to double, !dbg !5746
  %arrayidx897 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 32, !dbg !5747
  %y898 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx897, i32 0, i32 1, !dbg !5748
  %411 = load double, double* %y898, align 8, !dbg !5748
  %sub899 = fsub double %conv896, %411, !dbg !5749
  %mul900 = fmul double %mul895, %sub899, !dbg !5750
  %412 = load i64, i64* %y, align 8, !dbg !5751
  %conv901 = sitofp i64 %412 to double, !dbg !5751
  %arrayidx902 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 32, !dbg !5752
  %y903 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx902, i32 0, i32 1, !dbg !5753
  %413 = load double, double* %y903, align 8, !dbg !5753
  %sub904 = fsub double %conv901, %413, !dbg !5754
  %mul905 = fmul double %mul900, %sub904, !dbg !5755
  %mul906 = fmul double %mul905, 0x3EF0001000100010, !dbg !5756
  %index907 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 9, !dbg !5757
  %414 = load float, float* %index907, align 8, !dbg !5757
  %conv908 = fpext float %414 to double, !dbg !5758
  %mul909 = fmul double %mul906, %conv908, !dbg !5759
  %arrayidx910 = getelementptr inbounds [48 x double], [48 x double]* %M22, i64 0, i64 32, !dbg !5760
  %415 = load double, double* %arrayidx910, align 16, !dbg !5761
  %add911 = fadd double %415, %mul909, !dbg !5761
  store double %add911, double* %arrayidx910, align 16, !dbg !5761
  %416 = load i64, i64* %x180, align 8, !dbg !5762
  %conv912 = sitofp i64 %416 to double, !dbg !5762
  %arrayidx913 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 32, !dbg !5763
  %x914 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx913, i32 0, i32 0, !dbg !5764
  %417 = load double, double* %x914, align 16, !dbg !5764
  %sub915 = fsub double %conv912, %417, !dbg !5765
  %418 = load i64, i64* %x180, align 8, !dbg !5766
  %conv916 = sitofp i64 %418 to double, !dbg !5766
  %arrayidx917 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 32, !dbg !5767
  %x918 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx917, i32 0, i32 0, !dbg !5768
  %419 = load double, double* %x918, align 16, !dbg !5768
  %sub919 = fsub double %conv916, %419, !dbg !5769
  %mul920 = fmul double %sub915, %sub919, !dbg !5770
  %420 = load i64, i64* %x180, align 8, !dbg !5771
  %conv921 = sitofp i64 %420 to double, !dbg !5771
  %arrayidx922 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 32, !dbg !5772
  %x923 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx922, i32 0, i32 0, !dbg !5773
  %421 = load double, double* %x923, align 16, !dbg !5773
  %sub924 = fsub double %conv921, %421, !dbg !5774
  %mul925 = fmul double %mul920, %sub924, !dbg !5775
  %mul926 = fmul double %mul925, 0x3EF0001000100010, !dbg !5776
  %index927 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 9, !dbg !5777
  %422 = load float, float* %index927, align 8, !dbg !5777
  %conv928 = fpext float %422 to double, !dbg !5778
  %mul929 = fmul double %mul926, %conv928, !dbg !5779
  %arrayidx930 = getelementptr inbounds [48 x double], [48 x double]* %M30, i64 0, i64 32, !dbg !5780
  %423 = load double, double* %arrayidx930, align 16, !dbg !5781
  %add931 = fadd double %423, %mul929, !dbg !5781
  store double %add931, double* %arrayidx930, align 16, !dbg !5781
  %424 = load i64, i64* %y, align 8, !dbg !5782
  %conv932 = sitofp i64 %424 to double, !dbg !5782
  %arrayidx933 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 32, !dbg !5783
  %y934 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx933, i32 0, i32 1, !dbg !5784
  %425 = load double, double* %y934, align 8, !dbg !5784
  %sub935 = fsub double %conv932, %425, !dbg !5785
  %426 = load i64, i64* %y, align 8, !dbg !5786
  %conv936 = sitofp i64 %426 to double, !dbg !5786
  %arrayidx937 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 32, !dbg !5787
  %y938 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx937, i32 0, i32 1, !dbg !5788
  %427 = load double, double* %y938, align 8, !dbg !5788
  %sub939 = fsub double %conv936, %427, !dbg !5789
  %mul940 = fmul double %sub935, %sub939, !dbg !5790
  %428 = load i64, i64* %y, align 8, !dbg !5791
  %conv941 = sitofp i64 %428 to double, !dbg !5791
  %arrayidx942 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 32, !dbg !5792
  %y943 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %arrayidx942, i32 0, i32 1, !dbg !5793
  %429 = load double, double* %y943, align 8, !dbg !5793
  %sub944 = fsub double %conv941, %429, !dbg !5794
  %mul945 = fmul double %mul940, %sub944, !dbg !5795
  %mul946 = fmul double %mul945, 0x3EF0001000100010, !dbg !5796
  %index947 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 9, !dbg !5797
  %430 = load float, float* %index947, align 8, !dbg !5797
  %conv948 = fpext float %430 to double, !dbg !5798
  %mul949 = fmul double %mul946, %conv948, !dbg !5799
  %arrayidx950 = getelementptr inbounds [48 x double], [48 x double]* %M03, i64 0, i64 32, !dbg !5800
  %431 = load double, double* %arrayidx950, align 16, !dbg !5801
  %add951 = fadd double %431, %mul949, !dbg !5801
  store double %add951, double* %arrayidx950, align 16, !dbg !5801
  br label %if.end952, !dbg !5802

if.end952:                                        ; preds = %if.then801, %if.end797
  %432 = load %struct._PixelPacket*, %struct._PixelPacket** %p179, align 8, !dbg !5803
  %incdec.ptr953 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %432, i32 1, !dbg !5803
  store %struct._PixelPacket* %incdec.ptr953, %struct._PixelPacket** %p179, align 8, !dbg !5803
  br label %for.inc954, !dbg !5804

for.inc954:                                       ; preds = %if.end952
  %433 = load i64, i64* %x180, align 8, !dbg !5805
  %inc955 = add nsw i64 %433, 1, !dbg !5805
  store i64 %inc955, i64* %x180, align 8, !dbg !5805
  br label %for.cond188, !dbg !5806, !llvm.loop !5807

for.end956:                                       ; preds = %for.cond188
  br label %for.inc957, !dbg !5809

for.inc957:                                       ; preds = %for.end956
  %434 = load i64, i64* %y, align 8, !dbg !5810
  %inc958 = add nsw i64 %434, 1, !dbg !5810
  store i64 %inc958, i64* %y, align 8, !dbg !5810
  br label %for.cond173, !dbg !5811, !llvm.loop !5812

for.end959:                                       ; preds = %if.then185, %for.cond173
  store i64 3, i64* %channels, align 8, !dbg !5814
  %arrayidx960 = getelementptr inbounds [48 x double], [48 x double]* %M00, i64 0, i64 1, !dbg !5815
  %435 = load double, double* %arrayidx960, align 8, !dbg !5815
  %arrayidx961 = getelementptr inbounds [48 x double], [48 x double]* %M00, i64 0, i64 2, !dbg !5816
  %436 = load double, double* %arrayidx961, align 16, !dbg !5816
  %add962 = fadd double %435, %436, !dbg !5817
  %arrayidx963 = getelementptr inbounds [48 x double], [48 x double]* %M00, i64 0, i64 4, !dbg !5818
  %437 = load double, double* %arrayidx963, align 16, !dbg !5818
  %add964 = fadd double %add962, %437, !dbg !5819
  %arrayidx965 = getelementptr inbounds [48 x double], [48 x double]* %M00, i64 0, i64 47, !dbg !5820
  %438 = load double, double* %arrayidx965, align 8, !dbg !5821
  %add966 = fadd double %438, %add964, !dbg !5821
  store double %add966, double* %arrayidx965, align 8, !dbg !5821
  %arrayidx967 = getelementptr inbounds [48 x double], [48 x double]* %M01, i64 0, i64 1, !dbg !5822
  %439 = load double, double* %arrayidx967, align 8, !dbg !5822
  %arrayidx968 = getelementptr inbounds [48 x double], [48 x double]* %M01, i64 0, i64 2, !dbg !5823
  %440 = load double, double* %arrayidx968, align 16, !dbg !5823
  %add969 = fadd double %439, %440, !dbg !5824
  %arrayidx970 = getelementptr inbounds [48 x double], [48 x double]* %M01, i64 0, i64 4, !dbg !5825
  %441 = load double, double* %arrayidx970, align 16, !dbg !5825
  %add971 = fadd double %add969, %441, !dbg !5826
  %arrayidx972 = getelementptr inbounds [48 x double], [48 x double]* %M01, i64 0, i64 47, !dbg !5827
  %442 = load double, double* %arrayidx972, align 8, !dbg !5828
  %add973 = fadd double %442, %add971, !dbg !5828
  store double %add973, double* %arrayidx972, align 8, !dbg !5828
  %arrayidx974 = getelementptr inbounds [48 x double], [48 x double]* %M02, i64 0, i64 1, !dbg !5829
  %443 = load double, double* %arrayidx974, align 8, !dbg !5829
  %arrayidx975 = getelementptr inbounds [48 x double], [48 x double]* %M02, i64 0, i64 2, !dbg !5830
  %444 = load double, double* %arrayidx975, align 16, !dbg !5830
  %add976 = fadd double %443, %444, !dbg !5831
  %arrayidx977 = getelementptr inbounds [48 x double], [48 x double]* %M02, i64 0, i64 4, !dbg !5832
  %445 = load double, double* %arrayidx977, align 16, !dbg !5832
  %add978 = fadd double %add976, %445, !dbg !5833
  %arrayidx979 = getelementptr inbounds [48 x double], [48 x double]* %M02, i64 0, i64 47, !dbg !5834
  %446 = load double, double* %arrayidx979, align 8, !dbg !5835
  %add980 = fadd double %446, %add978, !dbg !5835
  store double %add980, double* %arrayidx979, align 8, !dbg !5835
  %arrayidx981 = getelementptr inbounds [48 x double], [48 x double]* %M03, i64 0, i64 1, !dbg !5836
  %447 = load double, double* %arrayidx981, align 8, !dbg !5836
  %arrayidx982 = getelementptr inbounds [48 x double], [48 x double]* %M03, i64 0, i64 2, !dbg !5837
  %448 = load double, double* %arrayidx982, align 16, !dbg !5837
  %add983 = fadd double %447, %448, !dbg !5838
  %arrayidx984 = getelementptr inbounds [48 x double], [48 x double]* %M03, i64 0, i64 4, !dbg !5839
  %449 = load double, double* %arrayidx984, align 16, !dbg !5839
  %add985 = fadd double %add983, %449, !dbg !5840
  %arrayidx986 = getelementptr inbounds [48 x double], [48 x double]* %M03, i64 0, i64 47, !dbg !5841
  %450 = load double, double* %arrayidx986, align 8, !dbg !5842
  %add987 = fadd double %450, %add985, !dbg !5842
  store double %add987, double* %arrayidx986, align 8, !dbg !5842
  %arrayidx988 = getelementptr inbounds [48 x double], [48 x double]* %M10, i64 0, i64 1, !dbg !5843
  %451 = load double, double* %arrayidx988, align 8, !dbg !5843
  %arrayidx989 = getelementptr inbounds [48 x double], [48 x double]* %M10, i64 0, i64 2, !dbg !5844
  %452 = load double, double* %arrayidx989, align 16, !dbg !5844
  %add990 = fadd double %451, %452, !dbg !5845
  %arrayidx991 = getelementptr inbounds [48 x double], [48 x double]* %M10, i64 0, i64 4, !dbg !5846
  %453 = load double, double* %arrayidx991, align 16, !dbg !5846
  %add992 = fadd double %add990, %453, !dbg !5847
  %arrayidx993 = getelementptr inbounds [48 x double], [48 x double]* %M10, i64 0, i64 47, !dbg !5848
  %454 = load double, double* %arrayidx993, align 8, !dbg !5849
  %add994 = fadd double %454, %add992, !dbg !5849
  store double %add994, double* %arrayidx993, align 8, !dbg !5849
  %arrayidx995 = getelementptr inbounds [48 x double], [48 x double]* %M11, i64 0, i64 1, !dbg !5850
  %455 = load double, double* %arrayidx995, align 8, !dbg !5850
  %arrayidx996 = getelementptr inbounds [48 x double], [48 x double]* %M11, i64 0, i64 2, !dbg !5851
  %456 = load double, double* %arrayidx996, align 16, !dbg !5851
  %add997 = fadd double %455, %456, !dbg !5852
  %arrayidx998 = getelementptr inbounds [48 x double], [48 x double]* %M11, i64 0, i64 4, !dbg !5853
  %457 = load double, double* %arrayidx998, align 16, !dbg !5853
  %add999 = fadd double %add997, %457, !dbg !5854
  %arrayidx1000 = getelementptr inbounds [48 x double], [48 x double]* %M11, i64 0, i64 47, !dbg !5855
  %458 = load double, double* %arrayidx1000, align 8, !dbg !5856
  %add1001 = fadd double %458, %add999, !dbg !5856
  store double %add1001, double* %arrayidx1000, align 8, !dbg !5856
  %arrayidx1002 = getelementptr inbounds [48 x double], [48 x double]* %M12, i64 0, i64 1, !dbg !5857
  %459 = load double, double* %arrayidx1002, align 8, !dbg !5857
  %arrayidx1003 = getelementptr inbounds [48 x double], [48 x double]* %M12, i64 0, i64 2, !dbg !5858
  %460 = load double, double* %arrayidx1003, align 16, !dbg !5858
  %add1004 = fadd double %459, %460, !dbg !5859
  %arrayidx1005 = getelementptr inbounds [48 x double], [48 x double]* %M12, i64 0, i64 4, !dbg !5860
  %461 = load double, double* %arrayidx1005, align 16, !dbg !5860
  %add1006 = fadd double %add1004, %461, !dbg !5861
  %arrayidx1007 = getelementptr inbounds [48 x double], [48 x double]* %M12, i64 0, i64 47, !dbg !5862
  %462 = load double, double* %arrayidx1007, align 8, !dbg !5863
  %add1008 = fadd double %462, %add1006, !dbg !5863
  store double %add1008, double* %arrayidx1007, align 8, !dbg !5863
  %arrayidx1009 = getelementptr inbounds [48 x double], [48 x double]* %M20, i64 0, i64 1, !dbg !5864
  %463 = load double, double* %arrayidx1009, align 8, !dbg !5864
  %arrayidx1010 = getelementptr inbounds [48 x double], [48 x double]* %M20, i64 0, i64 2, !dbg !5865
  %464 = load double, double* %arrayidx1010, align 16, !dbg !5865
  %add1011 = fadd double %463, %464, !dbg !5866
  %arrayidx1012 = getelementptr inbounds [48 x double], [48 x double]* %M20, i64 0, i64 4, !dbg !5867
  %465 = load double, double* %arrayidx1012, align 16, !dbg !5867
  %add1013 = fadd double %add1011, %465, !dbg !5868
  %arrayidx1014 = getelementptr inbounds [48 x double], [48 x double]* %M20, i64 0, i64 47, !dbg !5869
  %466 = load double, double* %arrayidx1014, align 8, !dbg !5870
  %add1015 = fadd double %466, %add1013, !dbg !5870
  store double %add1015, double* %arrayidx1014, align 8, !dbg !5870
  %arrayidx1016 = getelementptr inbounds [48 x double], [48 x double]* %M21, i64 0, i64 1, !dbg !5871
  %467 = load double, double* %arrayidx1016, align 8, !dbg !5871
  %arrayidx1017 = getelementptr inbounds [48 x double], [48 x double]* %M21, i64 0, i64 2, !dbg !5872
  %468 = load double, double* %arrayidx1017, align 16, !dbg !5872
  %add1018 = fadd double %467, %468, !dbg !5873
  %arrayidx1019 = getelementptr inbounds [48 x double], [48 x double]* %M21, i64 0, i64 4, !dbg !5874
  %469 = load double, double* %arrayidx1019, align 16, !dbg !5874
  %add1020 = fadd double %add1018, %469, !dbg !5875
  %arrayidx1021 = getelementptr inbounds [48 x double], [48 x double]* %M21, i64 0, i64 47, !dbg !5876
  %470 = load double, double* %arrayidx1021, align 8, !dbg !5877
  %add1022 = fadd double %470, %add1020, !dbg !5877
  store double %add1022, double* %arrayidx1021, align 8, !dbg !5877
  %arrayidx1023 = getelementptr inbounds [48 x double], [48 x double]* %M22, i64 0, i64 1, !dbg !5878
  %471 = load double, double* %arrayidx1023, align 8, !dbg !5878
  %arrayidx1024 = getelementptr inbounds [48 x double], [48 x double]* %M22, i64 0, i64 2, !dbg !5879
  %472 = load double, double* %arrayidx1024, align 16, !dbg !5879
  %add1025 = fadd double %471, %472, !dbg !5880
  %arrayidx1026 = getelementptr inbounds [48 x double], [48 x double]* %M22, i64 0, i64 4, !dbg !5881
  %473 = load double, double* %arrayidx1026, align 16, !dbg !5881
  %add1027 = fadd double %add1025, %473, !dbg !5882
  %arrayidx1028 = getelementptr inbounds [48 x double], [48 x double]* %M22, i64 0, i64 47, !dbg !5883
  %474 = load double, double* %arrayidx1028, align 8, !dbg !5884
  %add1029 = fadd double %474, %add1027, !dbg !5884
  store double %add1029, double* %arrayidx1028, align 8, !dbg !5884
  %arrayidx1030 = getelementptr inbounds [48 x double], [48 x double]* %M30, i64 0, i64 1, !dbg !5885
  %475 = load double, double* %arrayidx1030, align 8, !dbg !5885
  %arrayidx1031 = getelementptr inbounds [48 x double], [48 x double]* %M30, i64 0, i64 2, !dbg !5886
  %476 = load double, double* %arrayidx1031, align 16, !dbg !5886
  %add1032 = fadd double %475, %476, !dbg !5887
  %arrayidx1033 = getelementptr inbounds [48 x double], [48 x double]* %M30, i64 0, i64 4, !dbg !5888
  %477 = load double, double* %arrayidx1033, align 16, !dbg !5888
  %add1034 = fadd double %add1032, %477, !dbg !5889
  %arrayidx1035 = getelementptr inbounds [48 x double], [48 x double]* %M30, i64 0, i64 47, !dbg !5890
  %478 = load double, double* %arrayidx1035, align 8, !dbg !5891
  %add1036 = fadd double %478, %add1034, !dbg !5891
  store double %add1036, double* %arrayidx1035, align 8, !dbg !5891
  %479 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5892
  %matte1037 = getelementptr inbounds %struct._Image, %struct._Image* %479, i32 0, i32 6, !dbg !5894
  %480 = load i32, i32* %matte1037, align 8, !dbg !5894
  %cmp1038 = icmp ne i32 %480, 0, !dbg !5895
  br i1 %cmp1038, label %if.then1040, label %if.end1075, !dbg !5896

if.then1040:                                      ; preds = %for.end959
  %481 = load i64, i64* %channels, align 8, !dbg !5897
  %add1041 = add nsw i64 %481, 1, !dbg !5897
  store i64 %add1041, i64* %channels, align 8, !dbg !5897
  %arrayidx1042 = getelementptr inbounds [48 x double], [48 x double]* %M00, i64 0, i64 8, !dbg !5899
  %482 = load double, double* %arrayidx1042, align 16, !dbg !5899
  %arrayidx1043 = getelementptr inbounds [48 x double], [48 x double]* %M00, i64 0, i64 47, !dbg !5900
  %483 = load double, double* %arrayidx1043, align 8, !dbg !5901
  %add1044 = fadd double %483, %482, !dbg !5901
  store double %add1044, double* %arrayidx1043, align 8, !dbg !5901
  %arrayidx1045 = getelementptr inbounds [48 x double], [48 x double]* %M01, i64 0, i64 8, !dbg !5902
  %484 = load double, double* %arrayidx1045, align 16, !dbg !5902
  %arrayidx1046 = getelementptr inbounds [48 x double], [48 x double]* %M01, i64 0, i64 47, !dbg !5903
  %485 = load double, double* %arrayidx1046, align 8, !dbg !5904
  %add1047 = fadd double %485, %484, !dbg !5904
  store double %add1047, double* %arrayidx1046, align 8, !dbg !5904
  %arrayidx1048 = getelementptr inbounds [48 x double], [48 x double]* %M02, i64 0, i64 8, !dbg !5905
  %486 = load double, double* %arrayidx1048, align 16, !dbg !5905
  %arrayidx1049 = getelementptr inbounds [48 x double], [48 x double]* %M02, i64 0, i64 47, !dbg !5906
  %487 = load double, double* %arrayidx1049, align 8, !dbg !5907
  %add1050 = fadd double %487, %486, !dbg !5907
  store double %add1050, double* %arrayidx1049, align 8, !dbg !5907
  %arrayidx1051 = getelementptr inbounds [48 x double], [48 x double]* %M03, i64 0, i64 8, !dbg !5908
  %488 = load double, double* %arrayidx1051, align 16, !dbg !5908
  %arrayidx1052 = getelementptr inbounds [48 x double], [48 x double]* %M03, i64 0, i64 47, !dbg !5909
  %489 = load double, double* %arrayidx1052, align 8, !dbg !5910
  %add1053 = fadd double %489, %488, !dbg !5910
  store double %add1053, double* %arrayidx1052, align 8, !dbg !5910
  %arrayidx1054 = getelementptr inbounds [48 x double], [48 x double]* %M10, i64 0, i64 8, !dbg !5911
  %490 = load double, double* %arrayidx1054, align 16, !dbg !5911
  %arrayidx1055 = getelementptr inbounds [48 x double], [48 x double]* %M10, i64 0, i64 47, !dbg !5912
  %491 = load double, double* %arrayidx1055, align 8, !dbg !5913
  %add1056 = fadd double %491, %490, !dbg !5913
  store double %add1056, double* %arrayidx1055, align 8, !dbg !5913
  %arrayidx1057 = getelementptr inbounds [48 x double], [48 x double]* %M11, i64 0, i64 8, !dbg !5914
  %492 = load double, double* %arrayidx1057, align 16, !dbg !5914
  %arrayidx1058 = getelementptr inbounds [48 x double], [48 x double]* %M11, i64 0, i64 47, !dbg !5915
  %493 = load double, double* %arrayidx1058, align 8, !dbg !5916
  %add1059 = fadd double %493, %492, !dbg !5916
  store double %add1059, double* %arrayidx1058, align 8, !dbg !5916
  %arrayidx1060 = getelementptr inbounds [48 x double], [48 x double]* %M12, i64 0, i64 8, !dbg !5917
  %494 = load double, double* %arrayidx1060, align 16, !dbg !5917
  %arrayidx1061 = getelementptr inbounds [48 x double], [48 x double]* %M12, i64 0, i64 47, !dbg !5918
  %495 = load double, double* %arrayidx1061, align 8, !dbg !5919
  %add1062 = fadd double %495, %494, !dbg !5919
  store double %add1062, double* %arrayidx1061, align 8, !dbg !5919
  %arrayidx1063 = getelementptr inbounds [48 x double], [48 x double]* %M20, i64 0, i64 8, !dbg !5920
  %496 = load double, double* %arrayidx1063, align 16, !dbg !5920
  %arrayidx1064 = getelementptr inbounds [48 x double], [48 x double]* %M20, i64 0, i64 47, !dbg !5921
  %497 = load double, double* %arrayidx1064, align 8, !dbg !5922
  %add1065 = fadd double %497, %496, !dbg !5922
  store double %add1065, double* %arrayidx1064, align 8, !dbg !5922
  %arrayidx1066 = getelementptr inbounds [48 x double], [48 x double]* %M21, i64 0, i64 8, !dbg !5923
  %498 = load double, double* %arrayidx1066, align 16, !dbg !5923
  %arrayidx1067 = getelementptr inbounds [48 x double], [48 x double]* %M21, i64 0, i64 47, !dbg !5924
  %499 = load double, double* %arrayidx1067, align 8, !dbg !5925
  %add1068 = fadd double %499, %498, !dbg !5925
  store double %add1068, double* %arrayidx1067, align 8, !dbg !5925
  %arrayidx1069 = getelementptr inbounds [48 x double], [48 x double]* %M22, i64 0, i64 8, !dbg !5926
  %500 = load double, double* %arrayidx1069, align 16, !dbg !5926
  %arrayidx1070 = getelementptr inbounds [48 x double], [48 x double]* %M22, i64 0, i64 47, !dbg !5927
  %501 = load double, double* %arrayidx1070, align 8, !dbg !5928
  %add1071 = fadd double %501, %500, !dbg !5928
  store double %add1071, double* %arrayidx1070, align 8, !dbg !5928
  %arrayidx1072 = getelementptr inbounds [48 x double], [48 x double]* %M30, i64 0, i64 8, !dbg !5929
  %502 = load double, double* %arrayidx1072, align 16, !dbg !5929
  %arrayidx1073 = getelementptr inbounds [48 x double], [48 x double]* %M30, i64 0, i64 47, !dbg !5930
  %503 = load double, double* %arrayidx1073, align 8, !dbg !5931
  %add1074 = fadd double %503, %502, !dbg !5931
  store double %add1074, double* %arrayidx1073, align 8, !dbg !5931
  br label %if.end1075, !dbg !5932

if.end1075:                                       ; preds = %if.then1040, %for.end959
  %504 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !5933
  %colorspace1076 = getelementptr inbounds %struct._Image, %struct._Image* %504, i32 0, i32 1, !dbg !5935
  %505 = load i32, i32* %colorspace1076, align 4, !dbg !5935
  %cmp1077 = icmp eq i32 %505, 12, !dbg !5936
  br i1 %cmp1077, label %if.then1079, label %if.end1114, !dbg !5937

if.then1079:                                      ; preds = %if.end1075
  %506 = load i64, i64* %channels, align 8, !dbg !5938
  %add1080 = add nsw i64 %506, 1, !dbg !5938
  store i64 %add1080, i64* %channels, align 8, !dbg !5938
  %arrayidx1081 = getelementptr inbounds [48 x double], [48 x double]* %M00, i64 0, i64 32, !dbg !5940
  %507 = load double, double* %arrayidx1081, align 16, !dbg !5940
  %arrayidx1082 = getelementptr inbounds [48 x double], [48 x double]* %M00, i64 0, i64 47, !dbg !5941
  %508 = load double, double* %arrayidx1082, align 8, !dbg !5942
  %add1083 = fadd double %508, %507, !dbg !5942
  store double %add1083, double* %arrayidx1082, align 8, !dbg !5942
  %arrayidx1084 = getelementptr inbounds [48 x double], [48 x double]* %M01, i64 0, i64 32, !dbg !5943
  %509 = load double, double* %arrayidx1084, align 16, !dbg !5943
  %arrayidx1085 = getelementptr inbounds [48 x double], [48 x double]* %M01, i64 0, i64 47, !dbg !5944
  %510 = load double, double* %arrayidx1085, align 8, !dbg !5945
  %add1086 = fadd double %510, %509, !dbg !5945
  store double %add1086, double* %arrayidx1085, align 8, !dbg !5945
  %arrayidx1087 = getelementptr inbounds [48 x double], [48 x double]* %M02, i64 0, i64 32, !dbg !5946
  %511 = load double, double* %arrayidx1087, align 16, !dbg !5946
  %arrayidx1088 = getelementptr inbounds [48 x double], [48 x double]* %M02, i64 0, i64 47, !dbg !5947
  %512 = load double, double* %arrayidx1088, align 8, !dbg !5948
  %add1089 = fadd double %512, %511, !dbg !5948
  store double %add1089, double* %arrayidx1088, align 8, !dbg !5948
  %arrayidx1090 = getelementptr inbounds [48 x double], [48 x double]* %M03, i64 0, i64 32, !dbg !5949
  %513 = load double, double* %arrayidx1090, align 16, !dbg !5949
  %arrayidx1091 = getelementptr inbounds [48 x double], [48 x double]* %M03, i64 0, i64 47, !dbg !5950
  %514 = load double, double* %arrayidx1091, align 8, !dbg !5951
  %add1092 = fadd double %514, %513, !dbg !5951
  store double %add1092, double* %arrayidx1091, align 8, !dbg !5951
  %arrayidx1093 = getelementptr inbounds [48 x double], [48 x double]* %M10, i64 0, i64 32, !dbg !5952
  %515 = load double, double* %arrayidx1093, align 16, !dbg !5952
  %arrayidx1094 = getelementptr inbounds [48 x double], [48 x double]* %M10, i64 0, i64 47, !dbg !5953
  %516 = load double, double* %arrayidx1094, align 8, !dbg !5954
  %add1095 = fadd double %516, %515, !dbg !5954
  store double %add1095, double* %arrayidx1094, align 8, !dbg !5954
  %arrayidx1096 = getelementptr inbounds [48 x double], [48 x double]* %M11, i64 0, i64 32, !dbg !5955
  %517 = load double, double* %arrayidx1096, align 16, !dbg !5955
  %arrayidx1097 = getelementptr inbounds [48 x double], [48 x double]* %M11, i64 0, i64 47, !dbg !5956
  %518 = load double, double* %arrayidx1097, align 8, !dbg !5957
  %add1098 = fadd double %518, %517, !dbg !5957
  store double %add1098, double* %arrayidx1097, align 8, !dbg !5957
  %arrayidx1099 = getelementptr inbounds [48 x double], [48 x double]* %M12, i64 0, i64 32, !dbg !5958
  %519 = load double, double* %arrayidx1099, align 16, !dbg !5958
  %arrayidx1100 = getelementptr inbounds [48 x double], [48 x double]* %M12, i64 0, i64 47, !dbg !5959
  %520 = load double, double* %arrayidx1100, align 8, !dbg !5960
  %add1101 = fadd double %520, %519, !dbg !5960
  store double %add1101, double* %arrayidx1100, align 8, !dbg !5960
  %arrayidx1102 = getelementptr inbounds [48 x double], [48 x double]* %M20, i64 0, i64 32, !dbg !5961
  %521 = load double, double* %arrayidx1102, align 16, !dbg !5961
  %arrayidx1103 = getelementptr inbounds [48 x double], [48 x double]* %M20, i64 0, i64 47, !dbg !5962
  %522 = load double, double* %arrayidx1103, align 8, !dbg !5963
  %add1104 = fadd double %522, %521, !dbg !5963
  store double %add1104, double* %arrayidx1103, align 8, !dbg !5963
  %arrayidx1105 = getelementptr inbounds [48 x double], [48 x double]* %M21, i64 0, i64 32, !dbg !5964
  %523 = load double, double* %arrayidx1105, align 16, !dbg !5964
  %arrayidx1106 = getelementptr inbounds [48 x double], [48 x double]* %M21, i64 0, i64 47, !dbg !5965
  %524 = load double, double* %arrayidx1106, align 8, !dbg !5966
  %add1107 = fadd double %524, %523, !dbg !5966
  store double %add1107, double* %arrayidx1106, align 8, !dbg !5966
  %arrayidx1108 = getelementptr inbounds [48 x double], [48 x double]* %M22, i64 0, i64 32, !dbg !5967
  %525 = load double, double* %arrayidx1108, align 16, !dbg !5967
  %arrayidx1109 = getelementptr inbounds [48 x double], [48 x double]* %M22, i64 0, i64 47, !dbg !5968
  %526 = load double, double* %arrayidx1109, align 8, !dbg !5969
  %add1110 = fadd double %526, %525, !dbg !5969
  store double %add1110, double* %arrayidx1109, align 8, !dbg !5969
  %arrayidx1111 = getelementptr inbounds [48 x double], [48 x double]* %M30, i64 0, i64 32, !dbg !5970
  %527 = load double, double* %arrayidx1111, align 16, !dbg !5970
  %arrayidx1112 = getelementptr inbounds [48 x double], [48 x double]* %M30, i64 0, i64 47, !dbg !5971
  %528 = load double, double* %arrayidx1112, align 8, !dbg !5972
  %add1113 = fadd double %528, %527, !dbg !5972
  store double %add1113, double* %arrayidx1112, align 8, !dbg !5972
  br label %if.end1114, !dbg !5973

if.end1114:                                       ; preds = %if.then1079, %if.end1075
  %529 = load i64, i64* %channels, align 8, !dbg !5974
  %conv1115 = sitofp i64 %529 to double, !dbg !5975
  %arrayidx1116 = getelementptr inbounds [48 x double], [48 x double]* %M00, i64 0, i64 47, !dbg !5976
  %530 = load double, double* %arrayidx1116, align 8, !dbg !5977
  %div1117 = fdiv double %530, %conv1115, !dbg !5977
  store double %div1117, double* %arrayidx1116, align 8, !dbg !5977
  %531 = load i64, i64* %channels, align 8, !dbg !5978
  %conv1118 = sitofp i64 %531 to double, !dbg !5979
  %arrayidx1119 = getelementptr inbounds [48 x double], [48 x double]* %M01, i64 0, i64 47, !dbg !5980
  %532 = load double, double* %arrayidx1119, align 8, !dbg !5981
  %div1120 = fdiv double %532, %conv1118, !dbg !5981
  store double %div1120, double* %arrayidx1119, align 8, !dbg !5981
  %533 = load i64, i64* %channels, align 8, !dbg !5982
  %conv1121 = sitofp i64 %533 to double, !dbg !5983
  %arrayidx1122 = getelementptr inbounds [48 x double], [48 x double]* %M02, i64 0, i64 47, !dbg !5984
  %534 = load double, double* %arrayidx1122, align 8, !dbg !5985
  %div1123 = fdiv double %534, %conv1121, !dbg !5985
  store double %div1123, double* %arrayidx1122, align 8, !dbg !5985
  %535 = load i64, i64* %channels, align 8, !dbg !5986
  %conv1124 = sitofp i64 %535 to double, !dbg !5987
  %arrayidx1125 = getelementptr inbounds [48 x double], [48 x double]* %M03, i64 0, i64 47, !dbg !5988
  %536 = load double, double* %arrayidx1125, align 8, !dbg !5989
  %div1126 = fdiv double %536, %conv1124, !dbg !5989
  store double %div1126, double* %arrayidx1125, align 8, !dbg !5989
  %537 = load i64, i64* %channels, align 8, !dbg !5990
  %conv1127 = sitofp i64 %537 to double, !dbg !5991
  %arrayidx1128 = getelementptr inbounds [48 x double], [48 x double]* %M10, i64 0, i64 47, !dbg !5992
  %538 = load double, double* %arrayidx1128, align 8, !dbg !5993
  %div1129 = fdiv double %538, %conv1127, !dbg !5993
  store double %div1129, double* %arrayidx1128, align 8, !dbg !5993
  %539 = load i64, i64* %channels, align 8, !dbg !5994
  %conv1130 = sitofp i64 %539 to double, !dbg !5995
  %arrayidx1131 = getelementptr inbounds [48 x double], [48 x double]* %M11, i64 0, i64 47, !dbg !5996
  %540 = load double, double* %arrayidx1131, align 8, !dbg !5997
  %div1132 = fdiv double %540, %conv1130, !dbg !5997
  store double %div1132, double* %arrayidx1131, align 8, !dbg !5997
  %541 = load i64, i64* %channels, align 8, !dbg !5998
  %conv1133 = sitofp i64 %541 to double, !dbg !5999
  %arrayidx1134 = getelementptr inbounds [48 x double], [48 x double]* %M12, i64 0, i64 47, !dbg !6000
  %542 = load double, double* %arrayidx1134, align 8, !dbg !6001
  %div1135 = fdiv double %542, %conv1133, !dbg !6001
  store double %div1135, double* %arrayidx1134, align 8, !dbg !6001
  %543 = load i64, i64* %channels, align 8, !dbg !6002
  %conv1136 = sitofp i64 %543 to double, !dbg !6003
  %arrayidx1137 = getelementptr inbounds [48 x double], [48 x double]* %M20, i64 0, i64 47, !dbg !6004
  %544 = load double, double* %arrayidx1137, align 8, !dbg !6005
  %div1138 = fdiv double %544, %conv1136, !dbg !6005
  store double %div1138, double* %arrayidx1137, align 8, !dbg !6005
  %545 = load i64, i64* %channels, align 8, !dbg !6006
  %conv1139 = sitofp i64 %545 to double, !dbg !6007
  %arrayidx1140 = getelementptr inbounds [48 x double], [48 x double]* %M21, i64 0, i64 47, !dbg !6008
  %546 = load double, double* %arrayidx1140, align 8, !dbg !6009
  %div1141 = fdiv double %546, %conv1139, !dbg !6009
  store double %div1141, double* %arrayidx1140, align 8, !dbg !6009
  %547 = load i64, i64* %channels, align 8, !dbg !6010
  %conv1142 = sitofp i64 %547 to double, !dbg !6011
  %arrayidx1143 = getelementptr inbounds [48 x double], [48 x double]* %M22, i64 0, i64 47, !dbg !6012
  %548 = load double, double* %arrayidx1143, align 8, !dbg !6013
  %div1144 = fdiv double %548, %conv1142, !dbg !6013
  store double %div1144, double* %arrayidx1143, align 8, !dbg !6013
  %549 = load i64, i64* %channels, align 8, !dbg !6014
  %conv1145 = sitofp i64 %549 to double, !dbg !6015
  %arrayidx1146 = getelementptr inbounds [48 x double], [48 x double]* %M30, i64 0, i64 47, !dbg !6016
  %550 = load double, double* %arrayidx1146, align 8, !dbg !6017
  %div1147 = fdiv double %550, %conv1145, !dbg !6017
  store double %div1147, double* %arrayidx1146, align 8, !dbg !6017
  store i64 0, i64* %channel, align 8, !dbg !6018
  br label %for.cond1148, !dbg !6020

for.cond1148:                                     ; preds = %for.inc1238, %if.end1114
  %551 = load i64, i64* %channel, align 8, !dbg !6021
  %cmp1149 = icmp sle i64 %551, 47, !dbg !6023
  br i1 %cmp1149, label %for.body1151, label %for.end1240, !dbg !6024

for.body1151:                                     ; preds = %for.cond1148
  %552 = load %struct._ChannelMoments*, %struct._ChannelMoments** %channel_moments, align 8, !dbg !6025
  %553 = load i64, i64* %channel, align 8, !dbg !6027
  %arrayidx1152 = getelementptr inbounds %struct._ChannelMoments, %struct._ChannelMoments* %552, i64 %553, !dbg !6025
  %centroid1153 = getelementptr inbounds %struct._ChannelMoments, %struct._ChannelMoments* %arrayidx1152, i32 0, i32 1, !dbg !6028
  %554 = load i64, i64* %channel, align 8, !dbg !6029
  %arrayidx1154 = getelementptr inbounds [48 x %struct._PointInfo], [48 x %struct._PointInfo]* %centroid, i64 0, i64 %554, !dbg !6030
  %555 = bitcast %struct._PointInfo* %centroid1153 to i8*, !dbg !6030
  %556 = bitcast %struct._PointInfo* %arrayidx1154 to i8*, !dbg !6030
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %555, i8* align 16 %556, i64 16, i1 false), !dbg !6030
  %557 = load i64, i64* %channel, align 8, !dbg !6031
  %arrayidx1155 = getelementptr inbounds [48 x double], [48 x double]* %M00, i64 0, i64 %557, !dbg !6032
  %558 = load double, double* %arrayidx1155, align 8, !dbg !6032
  %div1156 = fdiv double 2.000000e+00, %558, !dbg !6033
  %559 = load i64, i64* %channel, align 8, !dbg !6034
  %arrayidx1157 = getelementptr inbounds [48 x double], [48 x double]* %M20, i64 0, i64 %559, !dbg !6035
  %560 = load double, double* %arrayidx1157, align 8, !dbg !6035
  %561 = load i64, i64* %channel, align 8, !dbg !6036
  %arrayidx1158 = getelementptr inbounds [48 x double], [48 x double]* %M02, i64 0, i64 %561, !dbg !6037
  %562 = load double, double* %arrayidx1158, align 8, !dbg !6037
  %add1159 = fadd double %560, %562, !dbg !6038
  %563 = load i64, i64* %channel, align 8, !dbg !6039
  %arrayidx1160 = getelementptr inbounds [48 x double], [48 x double]* %M11, i64 0, i64 %563, !dbg !6040
  %564 = load double, double* %arrayidx1160, align 8, !dbg !6040
  %mul1161 = fmul double 4.000000e+00, %564, !dbg !6041
  %565 = load i64, i64* %channel, align 8, !dbg !6042
  %arrayidx1162 = getelementptr inbounds [48 x double], [48 x double]* %M11, i64 0, i64 %565, !dbg !6043
  %566 = load double, double* %arrayidx1162, align 8, !dbg !6043
  %mul1163 = fmul double %mul1161, %566, !dbg !6044
  %567 = load i64, i64* %channel, align 8, !dbg !6045
  %arrayidx1164 = getelementptr inbounds [48 x double], [48 x double]* %M20, i64 0, i64 %567, !dbg !6046
  %568 = load double, double* %arrayidx1164, align 8, !dbg !6046
  %569 = load i64, i64* %channel, align 8, !dbg !6047
  %arrayidx1165 = getelementptr inbounds [48 x double], [48 x double]* %M02, i64 0, i64 %569, !dbg !6048
  %570 = load double, double* %arrayidx1165, align 8, !dbg !6048
  %sub1166 = fsub double %568, %570, !dbg !6049
  %571 = load i64, i64* %channel, align 8, !dbg !6050
  %arrayidx1167 = getelementptr inbounds [48 x double], [48 x double]* %M20, i64 0, i64 %571, !dbg !6051
  %572 = load double, double* %arrayidx1167, align 8, !dbg !6051
  %573 = load i64, i64* %channel, align 8, !dbg !6052
  %arrayidx1168 = getelementptr inbounds [48 x double], [48 x double]* %M02, i64 0, i64 %573, !dbg !6053
  %574 = load double, double* %arrayidx1168, align 8, !dbg !6053
  %sub1169 = fsub double %572, %574, !dbg !6054
  %mul1170 = fmul double %sub1166, %sub1169, !dbg !6055
  %add1171 = fadd double %mul1163, %mul1170, !dbg !6056
  %call1172 = call double @sqrt(double %add1171) #8, !dbg !6057
  %add1173 = fadd double %add1159, %call1172, !dbg !6058
  %mul1174 = fmul double %div1156, %add1173, !dbg !6059
  %call1175 = call double @sqrt(double %mul1174) #8, !dbg !6060
  %575 = load %struct._ChannelMoments*, %struct._ChannelMoments** %channel_moments, align 8, !dbg !6061
  %576 = load i64, i64* %channel, align 8, !dbg !6062
  %arrayidx1176 = getelementptr inbounds %struct._ChannelMoments, %struct._ChannelMoments* %575, i64 %576, !dbg !6061
  %ellipse_axis = getelementptr inbounds %struct._ChannelMoments, %struct._ChannelMoments* %arrayidx1176, i32 0, i32 2, !dbg !6063
  %x1177 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %ellipse_axis, i32 0, i32 0, !dbg !6064
  store double %call1175, double* %x1177, align 8, !dbg !6065
  %577 = load i64, i64* %channel, align 8, !dbg !6066
  %arrayidx1178 = getelementptr inbounds [48 x double], [48 x double]* %M00, i64 0, i64 %577, !dbg !6067
  %578 = load double, double* %arrayidx1178, align 8, !dbg !6067
  %div1179 = fdiv double 2.000000e+00, %578, !dbg !6068
  %579 = load i64, i64* %channel, align 8, !dbg !6069
  %arrayidx1180 = getelementptr inbounds [48 x double], [48 x double]* %M20, i64 0, i64 %579, !dbg !6070
  %580 = load double, double* %arrayidx1180, align 8, !dbg !6070
  %581 = load i64, i64* %channel, align 8, !dbg !6071
  %arrayidx1181 = getelementptr inbounds [48 x double], [48 x double]* %M02, i64 0, i64 %581, !dbg !6072
  %582 = load double, double* %arrayidx1181, align 8, !dbg !6072
  %add1182 = fadd double %580, %582, !dbg !6073
  %583 = load i64, i64* %channel, align 8, !dbg !6074
  %arrayidx1183 = getelementptr inbounds [48 x double], [48 x double]* %M11, i64 0, i64 %583, !dbg !6075
  %584 = load double, double* %arrayidx1183, align 8, !dbg !6075
  %mul1184 = fmul double 4.000000e+00, %584, !dbg !6076
  %585 = load i64, i64* %channel, align 8, !dbg !6077
  %arrayidx1185 = getelementptr inbounds [48 x double], [48 x double]* %M11, i64 0, i64 %585, !dbg !6078
  %586 = load double, double* %arrayidx1185, align 8, !dbg !6078
  %mul1186 = fmul double %mul1184, %586, !dbg !6079
  %587 = load i64, i64* %channel, align 8, !dbg !6080
  %arrayidx1187 = getelementptr inbounds [48 x double], [48 x double]* %M20, i64 0, i64 %587, !dbg !6081
  %588 = load double, double* %arrayidx1187, align 8, !dbg !6081
  %589 = load i64, i64* %channel, align 8, !dbg !6082
  %arrayidx1188 = getelementptr inbounds [48 x double], [48 x double]* %M02, i64 0, i64 %589, !dbg !6083
  %590 = load double, double* %arrayidx1188, align 8, !dbg !6083
  %sub1189 = fsub double %588, %590, !dbg !6084
  %591 = load i64, i64* %channel, align 8, !dbg !6085
  %arrayidx1190 = getelementptr inbounds [48 x double], [48 x double]* %M20, i64 0, i64 %591, !dbg !6086
  %592 = load double, double* %arrayidx1190, align 8, !dbg !6086
  %593 = load i64, i64* %channel, align 8, !dbg !6087
  %arrayidx1191 = getelementptr inbounds [48 x double], [48 x double]* %M02, i64 0, i64 %593, !dbg !6088
  %594 = load double, double* %arrayidx1191, align 8, !dbg !6088
  %sub1192 = fsub double %592, %594, !dbg !6089
  %mul1193 = fmul double %sub1189, %sub1192, !dbg !6090
  %add1194 = fadd double %mul1186, %mul1193, !dbg !6091
  %call1195 = call double @sqrt(double %add1194) #8, !dbg !6092
  %sub1196 = fsub double %add1182, %call1195, !dbg !6093
  %mul1197 = fmul double %div1179, %sub1196, !dbg !6094
  %call1198 = call double @sqrt(double %mul1197) #8, !dbg !6095
  %595 = load %struct._ChannelMoments*, %struct._ChannelMoments** %channel_moments, align 8, !dbg !6096
  %596 = load i64, i64* %channel, align 8, !dbg !6097
  %arrayidx1199 = getelementptr inbounds %struct._ChannelMoments, %struct._ChannelMoments* %595, i64 %596, !dbg !6096
  %ellipse_axis1200 = getelementptr inbounds %struct._ChannelMoments, %struct._ChannelMoments* %arrayidx1199, i32 0, i32 2, !dbg !6098
  %y1201 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %ellipse_axis1200, i32 0, i32 1, !dbg !6099
  store double %call1198, double* %y1201, align 8, !dbg !6100
  %597 = load i64, i64* %channel, align 8, !dbg !6101
  %arrayidx1202 = getelementptr inbounds [48 x double], [48 x double]* %M11, i64 0, i64 %597, !dbg !6102
  %598 = load double, double* %arrayidx1202, align 8, !dbg !6102
  %mul1203 = fmul double 2.000000e+00, %598, !dbg !6103
  %599 = load i64, i64* %channel, align 8, !dbg !6104
  %arrayidx1204 = getelementptr inbounds [48 x double], [48 x double]* %M20, i64 0, i64 %599, !dbg !6105
  %600 = load double, double* %arrayidx1204, align 8, !dbg !6105
  %601 = load i64, i64* %channel, align 8, !dbg !6106
  %arrayidx1205 = getelementptr inbounds [48 x double], [48 x double]* %M02, i64 0, i64 %601, !dbg !6107
  %602 = load double, double* %arrayidx1205, align 8, !dbg !6107
  %sub1206 = fsub double %600, %602, !dbg !6108
  %add1207 = fadd double %sub1206, 1.000000e-15, !dbg !6109
  %div1208 = fdiv double %mul1203, %add1207, !dbg !6110
  %call1209 = call double @atan(double %div1208) #8, !dbg !6111
  %mul1210 = fmul double 5.000000e-01, %call1209, !dbg !6112
  %conv1211 = fptrunc double %mul1210 to float, !dbg !6113
  %call1212 = call float @RadiansToDegrees(float %conv1211), !dbg !6114
  %conv1213 = fpext float %call1212 to double, !dbg !6114
  %603 = load %struct._ChannelMoments*, %struct._ChannelMoments** %channel_moments, align 8, !dbg !6115
  %604 = load i64, i64* %channel, align 8, !dbg !6116
  %arrayidx1214 = getelementptr inbounds %struct._ChannelMoments, %struct._ChannelMoments* %603, i64 %604, !dbg !6115
  %ellipse_angle = getelementptr inbounds %struct._ChannelMoments, %struct._ChannelMoments* %arrayidx1214, i32 0, i32 3, !dbg !6117
  store double %conv1213, double* %ellipse_angle, align 8, !dbg !6118
  %605 = load %struct._ChannelMoments*, %struct._ChannelMoments** %channel_moments, align 8, !dbg !6119
  %606 = load i64, i64* %channel, align 8, !dbg !6120
  %arrayidx1215 = getelementptr inbounds %struct._ChannelMoments, %struct._ChannelMoments* %605, i64 %606, !dbg !6119
  %ellipse_axis1216 = getelementptr inbounds %struct._ChannelMoments, %struct._ChannelMoments* %arrayidx1215, i32 0, i32 2, !dbg !6121
  %y1217 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %ellipse_axis1216, i32 0, i32 1, !dbg !6122
  %607 = load double, double* %y1217, align 8, !dbg !6122
  %608 = load %struct._ChannelMoments*, %struct._ChannelMoments** %channel_moments, align 8, !dbg !6123
  %609 = load i64, i64* %channel, align 8, !dbg !6124
  %arrayidx1218 = getelementptr inbounds %struct._ChannelMoments, %struct._ChannelMoments* %608, i64 %609, !dbg !6123
  %ellipse_axis1219 = getelementptr inbounds %struct._ChannelMoments, %struct._ChannelMoments* %arrayidx1218, i32 0, i32 2, !dbg !6125
  %x1220 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %ellipse_axis1219, i32 0, i32 0, !dbg !6126
  %610 = load double, double* %x1220, align 8, !dbg !6126
  %add1221 = fadd double %610, 1.000000e-15, !dbg !6127
  %div1222 = fdiv double %607, %add1221, !dbg !6128
  %sub1223 = fsub double 1.000000e+00, %div1222, !dbg !6129
  %call1224 = call double @sqrt(double %sub1223) #8, !dbg !6130
  %611 = load %struct._ChannelMoments*, %struct._ChannelMoments** %channel_moments, align 8, !dbg !6131
  %612 = load i64, i64* %channel, align 8, !dbg !6132
  %arrayidx1225 = getelementptr inbounds %struct._ChannelMoments, %struct._ChannelMoments* %611, i64 %612, !dbg !6131
  %ellipse_eccentricity = getelementptr inbounds %struct._ChannelMoments, %struct._ChannelMoments* %arrayidx1225, i32 0, i32 4, !dbg !6133
  store double %call1224, double* %ellipse_eccentricity, align 8, !dbg !6134
  %613 = load i64, i64* %channel, align 8, !dbg !6135
  %arrayidx1226 = getelementptr inbounds [48 x double], [48 x double]* %M00, i64 0, i64 %613, !dbg !6136
  %614 = load double, double* %arrayidx1226, align 8, !dbg !6136
  %615 = load %struct._ChannelMoments*, %struct._ChannelMoments** %channel_moments, align 8, !dbg !6137
  %616 = load i64, i64* %channel, align 8, !dbg !6138
  %arrayidx1227 = getelementptr inbounds %struct._ChannelMoments, %struct._ChannelMoments* %615, i64 %616, !dbg !6137
  %ellipse_axis1228 = getelementptr inbounds %struct._ChannelMoments, %struct._ChannelMoments* %arrayidx1227, i32 0, i32 2, !dbg !6139
  %x1229 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %ellipse_axis1228, i32 0, i32 0, !dbg !6140
  %617 = load double, double* %x1229, align 8, !dbg !6140
  %mul1230 = fmul double 0x400921FB54442D18, %617, !dbg !6141
  %618 = load %struct._ChannelMoments*, %struct._ChannelMoments** %channel_moments, align 8, !dbg !6142
  %619 = load i64, i64* %channel, align 8, !dbg !6143
  %arrayidx1231 = getelementptr inbounds %struct._ChannelMoments, %struct._ChannelMoments* %618, i64 %619, !dbg !6142
  %ellipse_axis1232 = getelementptr inbounds %struct._ChannelMoments, %struct._ChannelMoments* %arrayidx1231, i32 0, i32 2, !dbg !6144
  %y1233 = getelementptr inbounds %struct._PointInfo, %struct._PointInfo* %ellipse_axis1232, i32 0, i32 1, !dbg !6145
  %620 = load double, double* %y1233, align 8, !dbg !6145
  %mul1234 = fmul double %mul1230, %620, !dbg !6146
  %add1235 = fadd double %mul1234, 1.000000e-15, !dbg !6147
  %div1236 = fdiv double %614, %add1235, !dbg !6148
  %621 = load %struct._ChannelMoments*, %struct._ChannelMoments** %channel_moments, align 8, !dbg !6149
  %622 = load i64, i64* %channel, align 8, !dbg !6150
  %arrayidx1237 = getelementptr inbounds %struct._ChannelMoments, %struct._ChannelMoments* %621, i64 %622, !dbg !6149
  %ellipse_intensity = getelementptr inbounds %struct._ChannelMoments, %struct._ChannelMoments* %arrayidx1237, i32 0, i32 5, !dbg !6151
  store double %div1236, double* %ellipse_intensity, align 8, !dbg !6152
  br label %for.inc1238, !dbg !6153

for.inc1238:                                      ; preds = %for.body1151
  %623 = load i64, i64* %channel, align 8, !dbg !6154
  %inc1239 = add nsw i64 %623, 1, !dbg !6154
  store i64 %inc1239, i64* %channel, align 8, !dbg !6154
  br label %for.cond1148, !dbg !6155, !llvm.loop !6156

for.end1240:                                      ; preds = %for.cond1148
  store i64 0, i64* %channel, align 8, !dbg !6158
  br label %for.cond1241, !dbg !6160

for.cond1241:                                     ; preds = %for.inc1280, %for.end1240
  %624 = load i64, i64* %channel, align 8, !dbg !6161
  %cmp1242 = icmp sle i64 %624, 47, !dbg !6163
  br i1 %cmp1242, label %for.body1244, label %for.end1282, !dbg !6164

for.body1244:                                     ; preds = %for.cond1241
  %625 = load i64, i64* %channel, align 8, !dbg !6165
  %arrayidx1245 = getelementptr inbounds [48 x double], [48 x double]* %M10, i64 0, i64 %625, !dbg !6167
  store double 0.000000e+00, double* %arrayidx1245, align 8, !dbg !6168
  %626 = load i64, i64* %channel, align 8, !dbg !6169
  %arrayidx1246 = getelementptr inbounds [48 x double], [48 x double]* %M01, i64 0, i64 %626, !dbg !6170
  store double 0.000000e+00, double* %arrayidx1246, align 8, !dbg !6171
  %627 = load i64, i64* %channel, align 8, !dbg !6172
  %arrayidx1247 = getelementptr inbounds [48 x double], [48 x double]* %M00, i64 0, i64 %627, !dbg !6173
  %628 = load double, double* %arrayidx1247, align 8, !dbg !6173
  %call1248 = call double @pow(double %628, double 2.000000e+00) #8, !dbg !6174
  %629 = load i64, i64* %channel, align 8, !dbg !6175
  %arrayidx1249 = getelementptr inbounds [48 x double], [48 x double]* %M11, i64 0, i64 %629, !dbg !6176
  %630 = load double, double* %arrayidx1249, align 8, !dbg !6177
  %div1250 = fdiv double %630, %call1248, !dbg !6177
  store double %div1250, double* %arrayidx1249, align 8, !dbg !6177
  %631 = load i64, i64* %channel, align 8, !dbg !6178
  %arrayidx1251 = getelementptr inbounds [48 x double], [48 x double]* %M00, i64 0, i64 %631, !dbg !6179
  %632 = load double, double* %arrayidx1251, align 8, !dbg !6179
  %call1252 = call double @pow(double %632, double 2.000000e+00) #8, !dbg !6180
  %633 = load i64, i64* %channel, align 8, !dbg !6181
  %arrayidx1253 = getelementptr inbounds [48 x double], [48 x double]* %M20, i64 0, i64 %633, !dbg !6182
  %634 = load double, double* %arrayidx1253, align 8, !dbg !6183
  %div1254 = fdiv double %634, %call1252, !dbg !6183
  store double %div1254, double* %arrayidx1253, align 8, !dbg !6183
  %635 = load i64, i64* %channel, align 8, !dbg !6184
  %arrayidx1255 = getelementptr inbounds [48 x double], [48 x double]* %M00, i64 0, i64 %635, !dbg !6185
  %636 = load double, double* %arrayidx1255, align 8, !dbg !6185
  %call1256 = call double @pow(double %636, double 2.000000e+00) #8, !dbg !6186
  %637 = load i64, i64* %channel, align 8, !dbg !6187
  %arrayidx1257 = getelementptr inbounds [48 x double], [48 x double]* %M02, i64 0, i64 %637, !dbg !6188
  %638 = load double, double* %arrayidx1257, align 8, !dbg !6189
  %div1258 = fdiv double %638, %call1256, !dbg !6189
  store double %div1258, double* %arrayidx1257, align 8, !dbg !6189
  %639 = load i64, i64* %channel, align 8, !dbg !6190
  %arrayidx1259 = getelementptr inbounds [48 x double], [48 x double]* %M00, i64 0, i64 %639, !dbg !6191
  %640 = load double, double* %arrayidx1259, align 8, !dbg !6191
  %call1260 = call double @pow(double %640, double 2.500000e+00) #8, !dbg !6192
  %641 = load i64, i64* %channel, align 8, !dbg !6193
  %arrayidx1261 = getelementptr inbounds [48 x double], [48 x double]* %M21, i64 0, i64 %641, !dbg !6194
  %642 = load double, double* %arrayidx1261, align 8, !dbg !6195
  %div1262 = fdiv double %642, %call1260, !dbg !6195
  store double %div1262, double* %arrayidx1261, align 8, !dbg !6195
  %643 = load i64, i64* %channel, align 8, !dbg !6196
  %arrayidx1263 = getelementptr inbounds [48 x double], [48 x double]* %M00, i64 0, i64 %643, !dbg !6197
  %644 = load double, double* %arrayidx1263, align 8, !dbg !6197
  %call1264 = call double @pow(double %644, double 2.500000e+00) #8, !dbg !6198
  %645 = load i64, i64* %channel, align 8, !dbg !6199
  %arrayidx1265 = getelementptr inbounds [48 x double], [48 x double]* %M12, i64 0, i64 %645, !dbg !6200
  %646 = load double, double* %arrayidx1265, align 8, !dbg !6201
  %div1266 = fdiv double %646, %call1264, !dbg !6201
  store double %div1266, double* %arrayidx1265, align 8, !dbg !6201
  %647 = load i64, i64* %channel, align 8, !dbg !6202
  %arrayidx1267 = getelementptr inbounds [48 x double], [48 x double]* %M00, i64 0, i64 %647, !dbg !6203
  %648 = load double, double* %arrayidx1267, align 8, !dbg !6203
  %call1268 = call double @pow(double %648, double 3.000000e+00) #8, !dbg !6204
  %649 = load i64, i64* %channel, align 8, !dbg !6205
  %arrayidx1269 = getelementptr inbounds [48 x double], [48 x double]* %M22, i64 0, i64 %649, !dbg !6206
  %650 = load double, double* %arrayidx1269, align 8, !dbg !6207
  %div1270 = fdiv double %650, %call1268, !dbg !6207
  store double %div1270, double* %arrayidx1269, align 8, !dbg !6207
  %651 = load i64, i64* %channel, align 8, !dbg !6208
  %arrayidx1271 = getelementptr inbounds [48 x double], [48 x double]* %M00, i64 0, i64 %651, !dbg !6209
  %652 = load double, double* %arrayidx1271, align 8, !dbg !6209
  %call1272 = call double @pow(double %652, double 2.500000e+00) #8, !dbg !6210
  %653 = load i64, i64* %channel, align 8, !dbg !6211
  %arrayidx1273 = getelementptr inbounds [48 x double], [48 x double]* %M30, i64 0, i64 %653, !dbg !6212
  %654 = load double, double* %arrayidx1273, align 8, !dbg !6213
  %div1274 = fdiv double %654, %call1272, !dbg !6213
  store double %div1274, double* %arrayidx1273, align 8, !dbg !6213
  %655 = load i64, i64* %channel, align 8, !dbg !6214
  %arrayidx1275 = getelementptr inbounds [48 x double], [48 x double]* %M00, i64 0, i64 %655, !dbg !6215
  %656 = load double, double* %arrayidx1275, align 8, !dbg !6215
  %call1276 = call double @pow(double %656, double 2.500000e+00) #8, !dbg !6216
  %657 = load i64, i64* %channel, align 8, !dbg !6217
  %arrayidx1277 = getelementptr inbounds [48 x double], [48 x double]* %M03, i64 0, i64 %657, !dbg !6218
  %658 = load double, double* %arrayidx1277, align 8, !dbg !6219
  %div1278 = fdiv double %658, %call1276, !dbg !6219
  store double %div1278, double* %arrayidx1277, align 8, !dbg !6219
  %659 = load i64, i64* %channel, align 8, !dbg !6220
  %arrayidx1279 = getelementptr inbounds [48 x double], [48 x double]* %M00, i64 0, i64 %659, !dbg !6221
  store double 1.000000e+00, double* %arrayidx1279, align 8, !dbg !6222
  br label %for.inc1280, !dbg !6223

for.inc1280:                                      ; preds = %for.body1244
  %660 = load i64, i64* %channel, align 8, !dbg !6224
  %inc1281 = add nsw i64 %660, 1, !dbg !6224
  store i64 %inc1281, i64* %channel, align 8, !dbg !6224
  br label %for.cond1241, !dbg !6225, !llvm.loop !6226

for.end1282:                                      ; preds = %for.cond1241
  store i64 0, i64* %channel, align 8, !dbg !6228
  br label %for.cond1283, !dbg !6230

for.cond1283:                                     ; preds = %for.inc1520, %for.end1282
  %661 = load i64, i64* %channel, align 8, !dbg !6231
  %cmp1284 = icmp sle i64 %661, 47, !dbg !6233
  br i1 %cmp1284, label %for.body1286, label %for.end1522, !dbg !6234

for.body1286:                                     ; preds = %for.cond1283
  %662 = load i64, i64* %channel, align 8, !dbg !6235
  %arrayidx1287 = getelementptr inbounds [48 x double], [48 x double]* %M20, i64 0, i64 %662, !dbg !6237
  %663 = load double, double* %arrayidx1287, align 8, !dbg !6237
  %664 = load i64, i64* %channel, align 8, !dbg !6238
  %arrayidx1288 = getelementptr inbounds [48 x double], [48 x double]* %M02, i64 0, i64 %664, !dbg !6239
  %665 = load double, double* %arrayidx1288, align 8, !dbg !6239
  %add1289 = fadd double %663, %665, !dbg !6240
  %666 = load %struct._ChannelMoments*, %struct._ChannelMoments** %channel_moments, align 8, !dbg !6241
  %667 = load i64, i64* %channel, align 8, !dbg !6242
  %arrayidx1290 = getelementptr inbounds %struct._ChannelMoments, %struct._ChannelMoments* %666, i64 %667, !dbg !6241
  %I = getelementptr inbounds %struct._ChannelMoments, %struct._ChannelMoments* %arrayidx1290, i32 0, i32 0, !dbg !6243
  %arrayidx1291 = getelementptr inbounds [32 x double], [32 x double]* %I, i64 0, i64 0, !dbg !6241
  store double %add1289, double* %arrayidx1291, align 8, !dbg !6244
  %668 = load i64, i64* %channel, align 8, !dbg !6245
  %arrayidx1292 = getelementptr inbounds [48 x double], [48 x double]* %M20, i64 0, i64 %668, !dbg !6246
  %669 = load double, double* %arrayidx1292, align 8, !dbg !6246
  %670 = load i64, i64* %channel, align 8, !dbg !6247
  %arrayidx1293 = getelementptr inbounds [48 x double], [48 x double]* %M02, i64 0, i64 %670, !dbg !6248
  %671 = load double, double* %arrayidx1293, align 8, !dbg !6248
  %sub1294 = fsub double %669, %671, !dbg !6249
  %672 = load i64, i64* %channel, align 8, !dbg !6250
  %arrayidx1295 = getelementptr inbounds [48 x double], [48 x double]* %M20, i64 0, i64 %672, !dbg !6251
  %673 = load double, double* %arrayidx1295, align 8, !dbg !6251
  %674 = load i64, i64* %channel, align 8, !dbg !6252
  %arrayidx1296 = getelementptr inbounds [48 x double], [48 x double]* %M02, i64 0, i64 %674, !dbg !6253
  %675 = load double, double* %arrayidx1296, align 8, !dbg !6253
  %sub1297 = fsub double %673, %675, !dbg !6254
  %mul1298 = fmul double %sub1294, %sub1297, !dbg !6255
  %676 = load i64, i64* %channel, align 8, !dbg !6256
  %arrayidx1299 = getelementptr inbounds [48 x double], [48 x double]* %M11, i64 0, i64 %676, !dbg !6257
  %677 = load double, double* %arrayidx1299, align 8, !dbg !6257
  %mul1300 = fmul double 4.000000e+00, %677, !dbg !6258
  %678 = load i64, i64* %channel, align 8, !dbg !6259
  %arrayidx1301 = getelementptr inbounds [48 x double], [48 x double]* %M11, i64 0, i64 %678, !dbg !6260
  %679 = load double, double* %arrayidx1301, align 8, !dbg !6260
  %mul1302 = fmul double %mul1300, %679, !dbg !6261
  %add1303 = fadd double %mul1298, %mul1302, !dbg !6262
  %680 = load %struct._ChannelMoments*, %struct._ChannelMoments** %channel_moments, align 8, !dbg !6263
  %681 = load i64, i64* %channel, align 8, !dbg !6264
  %arrayidx1304 = getelementptr inbounds %struct._ChannelMoments, %struct._ChannelMoments* %680, i64 %681, !dbg !6263
  %I1305 = getelementptr inbounds %struct._ChannelMoments, %struct._ChannelMoments* %arrayidx1304, i32 0, i32 0, !dbg !6265
  %arrayidx1306 = getelementptr inbounds [32 x double], [32 x double]* %I1305, i64 0, i64 1, !dbg !6263
  store double %add1303, double* %arrayidx1306, align 8, !dbg !6266
  %682 = load i64, i64* %channel, align 8, !dbg !6267
  %arrayidx1307 = getelementptr inbounds [48 x double], [48 x double]* %M30, i64 0, i64 %682, !dbg !6268
  %683 = load double, double* %arrayidx1307, align 8, !dbg !6268
  %684 = load i64, i64* %channel, align 8, !dbg !6269
  %arrayidx1308 = getelementptr inbounds [48 x double], [48 x double]* %M12, i64 0, i64 %684, !dbg !6270
  %685 = load double, double* %arrayidx1308, align 8, !dbg !6270
  %mul1309 = fmul double 3.000000e+00, %685, !dbg !6271
  %sub1310 = fsub double %683, %mul1309, !dbg !6272
  %686 = load i64, i64* %channel, align 8, !dbg !6273
  %arrayidx1311 = getelementptr inbounds [48 x double], [48 x double]* %M30, i64 0, i64 %686, !dbg !6274
  %687 = load double, double* %arrayidx1311, align 8, !dbg !6274
  %688 = load i64, i64* %channel, align 8, !dbg !6275
  %arrayidx1312 = getelementptr inbounds [48 x double], [48 x double]* %M12, i64 0, i64 %688, !dbg !6276
  %689 = load double, double* %arrayidx1312, align 8, !dbg !6276
  %mul1313 = fmul double 3.000000e+00, %689, !dbg !6277
  %sub1314 = fsub double %687, %mul1313, !dbg !6278
  %mul1315 = fmul double %sub1310, %sub1314, !dbg !6279
  %690 = load i64, i64* %channel, align 8, !dbg !6280
  %arrayidx1316 = getelementptr inbounds [48 x double], [48 x double]* %M21, i64 0, i64 %690, !dbg !6281
  %691 = load double, double* %arrayidx1316, align 8, !dbg !6281
  %mul1317 = fmul double 3.000000e+00, %691, !dbg !6282
  %692 = load i64, i64* %channel, align 8, !dbg !6283
  %arrayidx1318 = getelementptr inbounds [48 x double], [48 x double]* %M03, i64 0, i64 %692, !dbg !6284
  %693 = load double, double* %arrayidx1318, align 8, !dbg !6284
  %sub1319 = fsub double %mul1317, %693, !dbg !6285
  %694 = load i64, i64* %channel, align 8, !dbg !6286
  %arrayidx1320 = getelementptr inbounds [48 x double], [48 x double]* %M21, i64 0, i64 %694, !dbg !6287
  %695 = load double, double* %arrayidx1320, align 8, !dbg !6287
  %mul1321 = fmul double 3.000000e+00, %695, !dbg !6288
  %696 = load i64, i64* %channel, align 8, !dbg !6289
  %arrayidx1322 = getelementptr inbounds [48 x double], [48 x double]* %M03, i64 0, i64 %696, !dbg !6290
  %697 = load double, double* %arrayidx1322, align 8, !dbg !6290
  %sub1323 = fsub double %mul1321, %697, !dbg !6291
  %mul1324 = fmul double %sub1319, %sub1323, !dbg !6292
  %add1325 = fadd double %mul1315, %mul1324, !dbg !6293
  %698 = load %struct._ChannelMoments*, %struct._ChannelMoments** %channel_moments, align 8, !dbg !6294
  %699 = load i64, i64* %channel, align 8, !dbg !6295
  %arrayidx1326 = getelementptr inbounds %struct._ChannelMoments, %struct._ChannelMoments* %698, i64 %699, !dbg !6294
  %I1327 = getelementptr inbounds %struct._ChannelMoments, %struct._ChannelMoments* %arrayidx1326, i32 0, i32 0, !dbg !6296
  %arrayidx1328 = getelementptr inbounds [32 x double], [32 x double]* %I1327, i64 0, i64 2, !dbg !6294
  store double %add1325, double* %arrayidx1328, align 8, !dbg !6297
  %700 = load i64, i64* %channel, align 8, !dbg !6298
  %arrayidx1329 = getelementptr inbounds [48 x double], [48 x double]* %M30, i64 0, i64 %700, !dbg !6299
  %701 = load double, double* %arrayidx1329, align 8, !dbg !6299
  %702 = load i64, i64* %channel, align 8, !dbg !6300
  %arrayidx1330 = getelementptr inbounds [48 x double], [48 x double]* %M12, i64 0, i64 %702, !dbg !6301
  %703 = load double, double* %arrayidx1330, align 8, !dbg !6301
  %add1331 = fadd double %701, %703, !dbg !6302
  %704 = load i64, i64* %channel, align 8, !dbg !6303
  %arrayidx1332 = getelementptr inbounds [48 x double], [48 x double]* %M30, i64 0, i64 %704, !dbg !6304
  %705 = load double, double* %arrayidx1332, align 8, !dbg !6304
  %706 = load i64, i64* %channel, align 8, !dbg !6305
  %arrayidx1333 = getelementptr inbounds [48 x double], [48 x double]* %M12, i64 0, i64 %706, !dbg !6306
  %707 = load double, double* %arrayidx1333, align 8, !dbg !6306
  %add1334 = fadd double %705, %707, !dbg !6307
  %mul1335 = fmul double %add1331, %add1334, !dbg !6308
  %708 = load i64, i64* %channel, align 8, !dbg !6309
  %arrayidx1336 = getelementptr inbounds [48 x double], [48 x double]* %M21, i64 0, i64 %708, !dbg !6310
  %709 = load double, double* %arrayidx1336, align 8, !dbg !6310
  %710 = load i64, i64* %channel, align 8, !dbg !6311
  %arrayidx1337 = getelementptr inbounds [48 x double], [48 x double]* %M03, i64 0, i64 %710, !dbg !6312
  %711 = load double, double* %arrayidx1337, align 8, !dbg !6312
  %add1338 = fadd double %709, %711, !dbg !6313
  %712 = load i64, i64* %channel, align 8, !dbg !6314
  %arrayidx1339 = getelementptr inbounds [48 x double], [48 x double]* %M21, i64 0, i64 %712, !dbg !6315
  %713 = load double, double* %arrayidx1339, align 8, !dbg !6315
  %714 = load i64, i64* %channel, align 8, !dbg !6316
  %arrayidx1340 = getelementptr inbounds [48 x double], [48 x double]* %M03, i64 0, i64 %714, !dbg !6317
  %715 = load double, double* %arrayidx1340, align 8, !dbg !6317
  %add1341 = fadd double %713, %715, !dbg !6318
  %mul1342 = fmul double %add1338, %add1341, !dbg !6319
  %add1343 = fadd double %mul1335, %mul1342, !dbg !6320
  %716 = load %struct._ChannelMoments*, %struct._ChannelMoments** %channel_moments, align 8, !dbg !6321
  %717 = load i64, i64* %channel, align 8, !dbg !6322
  %arrayidx1344 = getelementptr inbounds %struct._ChannelMoments, %struct._ChannelMoments* %716, i64 %717, !dbg !6321
  %I1345 = getelementptr inbounds %struct._ChannelMoments, %struct._ChannelMoments* %arrayidx1344, i32 0, i32 0, !dbg !6323
  %arrayidx1346 = getelementptr inbounds [32 x double], [32 x double]* %I1345, i64 0, i64 3, !dbg !6321
  store double %add1343, double* %arrayidx1346, align 8, !dbg !6324
  %718 = load i64, i64* %channel, align 8, !dbg !6325
  %arrayidx1347 = getelementptr inbounds [48 x double], [48 x double]* %M30, i64 0, i64 %718, !dbg !6326
  %719 = load double, double* %arrayidx1347, align 8, !dbg !6326
  %720 = load i64, i64* %channel, align 8, !dbg !6327
  %arrayidx1348 = getelementptr inbounds [48 x double], [48 x double]* %M12, i64 0, i64 %720, !dbg !6328
  %721 = load double, double* %arrayidx1348, align 8, !dbg !6328
  %mul1349 = fmul double 3.000000e+00, %721, !dbg !6329
  %sub1350 = fsub double %719, %mul1349, !dbg !6330
  %722 = load i64, i64* %channel, align 8, !dbg !6331
  %arrayidx1351 = getelementptr inbounds [48 x double], [48 x double]* %M30, i64 0, i64 %722, !dbg !6332
  %723 = load double, double* %arrayidx1351, align 8, !dbg !6332
  %724 = load i64, i64* %channel, align 8, !dbg !6333
  %arrayidx1352 = getelementptr inbounds [48 x double], [48 x double]* %M12, i64 0, i64 %724, !dbg !6334
  %725 = load double, double* %arrayidx1352, align 8, !dbg !6334
  %add1353 = fadd double %723, %725, !dbg !6335
  %mul1354 = fmul double %sub1350, %add1353, !dbg !6336
  %726 = load i64, i64* %channel, align 8, !dbg !6337
  %arrayidx1355 = getelementptr inbounds [48 x double], [48 x double]* %M30, i64 0, i64 %726, !dbg !6338
  %727 = load double, double* %arrayidx1355, align 8, !dbg !6338
  %728 = load i64, i64* %channel, align 8, !dbg !6339
  %arrayidx1356 = getelementptr inbounds [48 x double], [48 x double]* %M12, i64 0, i64 %728, !dbg !6340
  %729 = load double, double* %arrayidx1356, align 8, !dbg !6340
  %add1357 = fadd double %727, %729, !dbg !6341
  %730 = load i64, i64* %channel, align 8, !dbg !6342
  %arrayidx1358 = getelementptr inbounds [48 x double], [48 x double]* %M30, i64 0, i64 %730, !dbg !6343
  %731 = load double, double* %arrayidx1358, align 8, !dbg !6343
  %732 = load i64, i64* %channel, align 8, !dbg !6344
  %arrayidx1359 = getelementptr inbounds [48 x double], [48 x double]* %M12, i64 0, i64 %732, !dbg !6345
  %733 = load double, double* %arrayidx1359, align 8, !dbg !6345
  %add1360 = fadd double %731, %733, !dbg !6346
  %mul1361 = fmul double %add1357, %add1360, !dbg !6347
  %734 = load i64, i64* %channel, align 8, !dbg !6348
  %arrayidx1362 = getelementptr inbounds [48 x double], [48 x double]* %M21, i64 0, i64 %734, !dbg !6349
  %735 = load double, double* %arrayidx1362, align 8, !dbg !6349
  %736 = load i64, i64* %channel, align 8, !dbg !6350
  %arrayidx1363 = getelementptr inbounds [48 x double], [48 x double]* %M03, i64 0, i64 %736, !dbg !6351
  %737 = load double, double* %arrayidx1363, align 8, !dbg !6351
  %add1364 = fadd double %735, %737, !dbg !6352
  %mul1365 = fmul double 3.000000e+00, %add1364, !dbg !6353
  %738 = load i64, i64* %channel, align 8, !dbg !6354
  %arrayidx1366 = getelementptr inbounds [48 x double], [48 x double]* %M21, i64 0, i64 %738, !dbg !6355
  %739 = load double, double* %arrayidx1366, align 8, !dbg !6355
  %740 = load i64, i64* %channel, align 8, !dbg !6356
  %arrayidx1367 = getelementptr inbounds [48 x double], [48 x double]* %M03, i64 0, i64 %740, !dbg !6357
  %741 = load double, double* %arrayidx1367, align 8, !dbg !6357
  %add1368 = fadd double %739, %741, !dbg !6358
  %mul1369 = fmul double %mul1365, %add1368, !dbg !6359
  %sub1370 = fsub double %mul1361, %mul1369, !dbg !6360
  %mul1371 = fmul double %mul1354, %sub1370, !dbg !6361
  %742 = load i64, i64* %channel, align 8, !dbg !6362
  %arrayidx1372 = getelementptr inbounds [48 x double], [48 x double]* %M21, i64 0, i64 %742, !dbg !6363
  %743 = load double, double* %arrayidx1372, align 8, !dbg !6363
  %mul1373 = fmul double 3.000000e+00, %743, !dbg !6364
  %744 = load i64, i64* %channel, align 8, !dbg !6365
  %arrayidx1374 = getelementptr inbounds [48 x double], [48 x double]* %M03, i64 0, i64 %744, !dbg !6366
  %745 = load double, double* %arrayidx1374, align 8, !dbg !6366
  %sub1375 = fsub double %mul1373, %745, !dbg !6367
  %746 = load i64, i64* %channel, align 8, !dbg !6368
  %arrayidx1376 = getelementptr inbounds [48 x double], [48 x double]* %M21, i64 0, i64 %746, !dbg !6369
  %747 = load double, double* %arrayidx1376, align 8, !dbg !6369
  %748 = load i64, i64* %channel, align 8, !dbg !6370
  %arrayidx1377 = getelementptr inbounds [48 x double], [48 x double]* %M03, i64 0, i64 %748, !dbg !6371
  %749 = load double, double* %arrayidx1377, align 8, !dbg !6371
  %add1378 = fadd double %747, %749, !dbg !6372
  %mul1379 = fmul double %sub1375, %add1378, !dbg !6373
  %750 = load i64, i64* %channel, align 8, !dbg !6374
  %arrayidx1380 = getelementptr inbounds [48 x double], [48 x double]* %M30, i64 0, i64 %750, !dbg !6375
  %751 = load double, double* %arrayidx1380, align 8, !dbg !6375
  %752 = load i64, i64* %channel, align 8, !dbg !6376
  %arrayidx1381 = getelementptr inbounds [48 x double], [48 x double]* %M12, i64 0, i64 %752, !dbg !6377
  %753 = load double, double* %arrayidx1381, align 8, !dbg !6377
  %add1382 = fadd double %751, %753, !dbg !6378
  %mul1383 = fmul double 3.000000e+00, %add1382, !dbg !6379
  %754 = load i64, i64* %channel, align 8, !dbg !6380
  %arrayidx1384 = getelementptr inbounds [48 x double], [48 x double]* %M30, i64 0, i64 %754, !dbg !6381
  %755 = load double, double* %arrayidx1384, align 8, !dbg !6381
  %756 = load i64, i64* %channel, align 8, !dbg !6382
  %arrayidx1385 = getelementptr inbounds [48 x double], [48 x double]* %M12, i64 0, i64 %756, !dbg !6383
  %757 = load double, double* %arrayidx1385, align 8, !dbg !6383
  %add1386 = fadd double %755, %757, !dbg !6384
  %mul1387 = fmul double %mul1383, %add1386, !dbg !6385
  %758 = load i64, i64* %channel, align 8, !dbg !6386
  %arrayidx1388 = getelementptr inbounds [48 x double], [48 x double]* %M21, i64 0, i64 %758, !dbg !6387
  %759 = load double, double* %arrayidx1388, align 8, !dbg !6387
  %760 = load i64, i64* %channel, align 8, !dbg !6388
  %arrayidx1389 = getelementptr inbounds [48 x double], [48 x double]* %M03, i64 0, i64 %760, !dbg !6389
  %761 = load double, double* %arrayidx1389, align 8, !dbg !6389
  %add1390 = fadd double %759, %761, !dbg !6390
  %762 = load i64, i64* %channel, align 8, !dbg !6391
  %arrayidx1391 = getelementptr inbounds [48 x double], [48 x double]* %M21, i64 0, i64 %762, !dbg !6392
  %763 = load double, double* %arrayidx1391, align 8, !dbg !6392
  %764 = load i64, i64* %channel, align 8, !dbg !6393
  %arrayidx1392 = getelementptr inbounds [48 x double], [48 x double]* %M03, i64 0, i64 %764, !dbg !6394
  %765 = load double, double* %arrayidx1392, align 8, !dbg !6394
  %add1393 = fadd double %763, %765, !dbg !6395
  %mul1394 = fmul double %add1390, %add1393, !dbg !6396
  %sub1395 = fsub double %mul1387, %mul1394, !dbg !6397
  %mul1396 = fmul double %mul1379, %sub1395, !dbg !6398
  %add1397 = fadd double %mul1371, %mul1396, !dbg !6399
  %766 = load %struct._ChannelMoments*, %struct._ChannelMoments** %channel_moments, align 8, !dbg !6400
  %767 = load i64, i64* %channel, align 8, !dbg !6401
  %arrayidx1398 = getelementptr inbounds %struct._ChannelMoments, %struct._ChannelMoments* %766, i64 %767, !dbg !6400
  %I1399 = getelementptr inbounds %struct._ChannelMoments, %struct._ChannelMoments* %arrayidx1398, i32 0, i32 0, !dbg !6402
  %arrayidx1400 = getelementptr inbounds [32 x double], [32 x double]* %I1399, i64 0, i64 4, !dbg !6400
  store double %add1397, double* %arrayidx1400, align 8, !dbg !6403
  %768 = load i64, i64* %channel, align 8, !dbg !6404
  %arrayidx1401 = getelementptr inbounds [48 x double], [48 x double]* %M20, i64 0, i64 %768, !dbg !6405
  %769 = load double, double* %arrayidx1401, align 8, !dbg !6405
  %770 = load i64, i64* %channel, align 8, !dbg !6406
  %arrayidx1402 = getelementptr inbounds [48 x double], [48 x double]* %M02, i64 0, i64 %770, !dbg !6407
  %771 = load double, double* %arrayidx1402, align 8, !dbg !6407
  %sub1403 = fsub double %769, %771, !dbg !6408
  %772 = load i64, i64* %channel, align 8, !dbg !6409
  %arrayidx1404 = getelementptr inbounds [48 x double], [48 x double]* %M30, i64 0, i64 %772, !dbg !6410
  %773 = load double, double* %arrayidx1404, align 8, !dbg !6410
  %774 = load i64, i64* %channel, align 8, !dbg !6411
  %arrayidx1405 = getelementptr inbounds [48 x double], [48 x double]* %M12, i64 0, i64 %774, !dbg !6412
  %775 = load double, double* %arrayidx1405, align 8, !dbg !6412
  %add1406 = fadd double %773, %775, !dbg !6413
  %776 = load i64, i64* %channel, align 8, !dbg !6414
  %arrayidx1407 = getelementptr inbounds [48 x double], [48 x double]* %M30, i64 0, i64 %776, !dbg !6415
  %777 = load double, double* %arrayidx1407, align 8, !dbg !6415
  %778 = load i64, i64* %channel, align 8, !dbg !6416
  %arrayidx1408 = getelementptr inbounds [48 x double], [48 x double]* %M12, i64 0, i64 %778, !dbg !6417
  %779 = load double, double* %arrayidx1408, align 8, !dbg !6417
  %add1409 = fadd double %777, %779, !dbg !6418
  %mul1410 = fmul double %add1406, %add1409, !dbg !6419
  %780 = load i64, i64* %channel, align 8, !dbg !6420
  %arrayidx1411 = getelementptr inbounds [48 x double], [48 x double]* %M21, i64 0, i64 %780, !dbg !6421
  %781 = load double, double* %arrayidx1411, align 8, !dbg !6421
  %782 = load i64, i64* %channel, align 8, !dbg !6422
  %arrayidx1412 = getelementptr inbounds [48 x double], [48 x double]* %M03, i64 0, i64 %782, !dbg !6423
  %783 = load double, double* %arrayidx1412, align 8, !dbg !6423
  %add1413 = fadd double %781, %783, !dbg !6424
  %784 = load i64, i64* %channel, align 8, !dbg !6425
  %arrayidx1414 = getelementptr inbounds [48 x double], [48 x double]* %M21, i64 0, i64 %784, !dbg !6426
  %785 = load double, double* %arrayidx1414, align 8, !dbg !6426
  %786 = load i64, i64* %channel, align 8, !dbg !6427
  %arrayidx1415 = getelementptr inbounds [48 x double], [48 x double]* %M03, i64 0, i64 %786, !dbg !6428
  %787 = load double, double* %arrayidx1415, align 8, !dbg !6428
  %add1416 = fadd double %785, %787, !dbg !6429
  %mul1417 = fmul double %add1413, %add1416, !dbg !6430
  %sub1418 = fsub double %mul1410, %mul1417, !dbg !6431
  %mul1419 = fmul double %sub1403, %sub1418, !dbg !6432
  %788 = load i64, i64* %channel, align 8, !dbg !6433
  %arrayidx1420 = getelementptr inbounds [48 x double], [48 x double]* %M11, i64 0, i64 %788, !dbg !6434
  %789 = load double, double* %arrayidx1420, align 8, !dbg !6434
  %mul1421 = fmul double 4.000000e+00, %789, !dbg !6435
  %790 = load i64, i64* %channel, align 8, !dbg !6436
  %arrayidx1422 = getelementptr inbounds [48 x double], [48 x double]* %M30, i64 0, i64 %790, !dbg !6437
  %791 = load double, double* %arrayidx1422, align 8, !dbg !6437
  %792 = load i64, i64* %channel, align 8, !dbg !6438
  %arrayidx1423 = getelementptr inbounds [48 x double], [48 x double]* %M12, i64 0, i64 %792, !dbg !6439
  %793 = load double, double* %arrayidx1423, align 8, !dbg !6439
  %add1424 = fadd double %791, %793, !dbg !6440
  %mul1425 = fmul double %mul1421, %add1424, !dbg !6441
  %794 = load i64, i64* %channel, align 8, !dbg !6442
  %arrayidx1426 = getelementptr inbounds [48 x double], [48 x double]* %M21, i64 0, i64 %794, !dbg !6443
  %795 = load double, double* %arrayidx1426, align 8, !dbg !6443
  %796 = load i64, i64* %channel, align 8, !dbg !6444
  %arrayidx1427 = getelementptr inbounds [48 x double], [48 x double]* %M03, i64 0, i64 %796, !dbg !6445
  %797 = load double, double* %arrayidx1427, align 8, !dbg !6445
  %add1428 = fadd double %795, %797, !dbg !6446
  %mul1429 = fmul double %mul1425, %add1428, !dbg !6447
  %add1430 = fadd double %mul1419, %mul1429, !dbg !6448
  %798 = load %struct._ChannelMoments*, %struct._ChannelMoments** %channel_moments, align 8, !dbg !6449
  %799 = load i64, i64* %channel, align 8, !dbg !6450
  %arrayidx1431 = getelementptr inbounds %struct._ChannelMoments, %struct._ChannelMoments* %798, i64 %799, !dbg !6449
  %I1432 = getelementptr inbounds %struct._ChannelMoments, %struct._ChannelMoments* %arrayidx1431, i32 0, i32 0, !dbg !6451
  %arrayidx1433 = getelementptr inbounds [32 x double], [32 x double]* %I1432, i64 0, i64 5, !dbg !6449
  store double %add1430, double* %arrayidx1433, align 8, !dbg !6452
  %800 = load i64, i64* %channel, align 8, !dbg !6453
  %arrayidx1434 = getelementptr inbounds [48 x double], [48 x double]* %M21, i64 0, i64 %800, !dbg !6454
  %801 = load double, double* %arrayidx1434, align 8, !dbg !6454
  %mul1435 = fmul double 3.000000e+00, %801, !dbg !6455
  %802 = load i64, i64* %channel, align 8, !dbg !6456
  %arrayidx1436 = getelementptr inbounds [48 x double], [48 x double]* %M03, i64 0, i64 %802, !dbg !6457
  %803 = load double, double* %arrayidx1436, align 8, !dbg !6457
  %sub1437 = fsub double %mul1435, %803, !dbg !6458
  %804 = load i64, i64* %channel, align 8, !dbg !6459
  %arrayidx1438 = getelementptr inbounds [48 x double], [48 x double]* %M30, i64 0, i64 %804, !dbg !6460
  %805 = load double, double* %arrayidx1438, align 8, !dbg !6460
  %806 = load i64, i64* %channel, align 8, !dbg !6461
  %arrayidx1439 = getelementptr inbounds [48 x double], [48 x double]* %M12, i64 0, i64 %806, !dbg !6462
  %807 = load double, double* %arrayidx1439, align 8, !dbg !6462
  %add1440 = fadd double %805, %807, !dbg !6463
  %mul1441 = fmul double %sub1437, %add1440, !dbg !6464
  %808 = load i64, i64* %channel, align 8, !dbg !6465
  %arrayidx1442 = getelementptr inbounds [48 x double], [48 x double]* %M30, i64 0, i64 %808, !dbg !6466
  %809 = load double, double* %arrayidx1442, align 8, !dbg !6466
  %810 = load i64, i64* %channel, align 8, !dbg !6467
  %arrayidx1443 = getelementptr inbounds [48 x double], [48 x double]* %M12, i64 0, i64 %810, !dbg !6468
  %811 = load double, double* %arrayidx1443, align 8, !dbg !6468
  %add1444 = fadd double %809, %811, !dbg !6469
  %812 = load i64, i64* %channel, align 8, !dbg !6470
  %arrayidx1445 = getelementptr inbounds [48 x double], [48 x double]* %M30, i64 0, i64 %812, !dbg !6471
  %813 = load double, double* %arrayidx1445, align 8, !dbg !6471
  %814 = load i64, i64* %channel, align 8, !dbg !6472
  %arrayidx1446 = getelementptr inbounds [48 x double], [48 x double]* %M12, i64 0, i64 %814, !dbg !6473
  %815 = load double, double* %arrayidx1446, align 8, !dbg !6473
  %add1447 = fadd double %813, %815, !dbg !6474
  %mul1448 = fmul double %add1444, %add1447, !dbg !6475
  %816 = load i64, i64* %channel, align 8, !dbg !6476
  %arrayidx1449 = getelementptr inbounds [48 x double], [48 x double]* %M21, i64 0, i64 %816, !dbg !6477
  %817 = load double, double* %arrayidx1449, align 8, !dbg !6477
  %818 = load i64, i64* %channel, align 8, !dbg !6478
  %arrayidx1450 = getelementptr inbounds [48 x double], [48 x double]* %M03, i64 0, i64 %818, !dbg !6479
  %819 = load double, double* %arrayidx1450, align 8, !dbg !6479
  %add1451 = fadd double %817, %819, !dbg !6480
  %mul1452 = fmul double 3.000000e+00, %add1451, !dbg !6481
  %820 = load i64, i64* %channel, align 8, !dbg !6482
  %arrayidx1453 = getelementptr inbounds [48 x double], [48 x double]* %M21, i64 0, i64 %820, !dbg !6483
  %821 = load double, double* %arrayidx1453, align 8, !dbg !6483
  %822 = load i64, i64* %channel, align 8, !dbg !6484
  %arrayidx1454 = getelementptr inbounds [48 x double], [48 x double]* %M03, i64 0, i64 %822, !dbg !6485
  %823 = load double, double* %arrayidx1454, align 8, !dbg !6485
  %add1455 = fadd double %821, %823, !dbg !6486
  %mul1456 = fmul double %mul1452, %add1455, !dbg !6487
  %sub1457 = fsub double %mul1448, %mul1456, !dbg !6488
  %mul1458 = fmul double %mul1441, %sub1457, !dbg !6489
  %824 = load i64, i64* %channel, align 8, !dbg !6490
  %arrayidx1459 = getelementptr inbounds [48 x double], [48 x double]* %M30, i64 0, i64 %824, !dbg !6491
  %825 = load double, double* %arrayidx1459, align 8, !dbg !6491
  %826 = load i64, i64* %channel, align 8, !dbg !6492
  %arrayidx1460 = getelementptr inbounds [48 x double], [48 x double]* %M12, i64 0, i64 %826, !dbg !6493
  %827 = load double, double* %arrayidx1460, align 8, !dbg !6493
  %mul1461 = fmul double 3.000000e+00, %827, !dbg !6494
  %sub1462 = fsub double %825, %mul1461, !dbg !6495
  %828 = load i64, i64* %channel, align 8, !dbg !6496
  %arrayidx1463 = getelementptr inbounds [48 x double], [48 x double]* %M21, i64 0, i64 %828, !dbg !6497
  %829 = load double, double* %arrayidx1463, align 8, !dbg !6497
  %830 = load i64, i64* %channel, align 8, !dbg !6498
  %arrayidx1464 = getelementptr inbounds [48 x double], [48 x double]* %M03, i64 0, i64 %830, !dbg !6499
  %831 = load double, double* %arrayidx1464, align 8, !dbg !6499
  %add1465 = fadd double %829, %831, !dbg !6500
  %mul1466 = fmul double %sub1462, %add1465, !dbg !6501
  %832 = load i64, i64* %channel, align 8, !dbg !6502
  %arrayidx1467 = getelementptr inbounds [48 x double], [48 x double]* %M30, i64 0, i64 %832, !dbg !6503
  %833 = load double, double* %arrayidx1467, align 8, !dbg !6503
  %834 = load i64, i64* %channel, align 8, !dbg !6504
  %arrayidx1468 = getelementptr inbounds [48 x double], [48 x double]* %M12, i64 0, i64 %834, !dbg !6505
  %835 = load double, double* %arrayidx1468, align 8, !dbg !6505
  %add1469 = fadd double %833, %835, !dbg !6506
  %mul1470 = fmul double 3.000000e+00, %add1469, !dbg !6507
  %836 = load i64, i64* %channel, align 8, !dbg !6508
  %arrayidx1471 = getelementptr inbounds [48 x double], [48 x double]* %M30, i64 0, i64 %836, !dbg !6509
  %837 = load double, double* %arrayidx1471, align 8, !dbg !6509
  %838 = load i64, i64* %channel, align 8, !dbg !6510
  %arrayidx1472 = getelementptr inbounds [48 x double], [48 x double]* %M12, i64 0, i64 %838, !dbg !6511
  %839 = load double, double* %arrayidx1472, align 8, !dbg !6511
  %add1473 = fadd double %837, %839, !dbg !6512
  %mul1474 = fmul double %mul1470, %add1473, !dbg !6513
  %840 = load i64, i64* %channel, align 8, !dbg !6514
  %arrayidx1475 = getelementptr inbounds [48 x double], [48 x double]* %M21, i64 0, i64 %840, !dbg !6515
  %841 = load double, double* %arrayidx1475, align 8, !dbg !6515
  %842 = load i64, i64* %channel, align 8, !dbg !6516
  %arrayidx1476 = getelementptr inbounds [48 x double], [48 x double]* %M03, i64 0, i64 %842, !dbg !6517
  %843 = load double, double* %arrayidx1476, align 8, !dbg !6517
  %add1477 = fadd double %841, %843, !dbg !6518
  %844 = load i64, i64* %channel, align 8, !dbg !6519
  %arrayidx1478 = getelementptr inbounds [48 x double], [48 x double]* %M21, i64 0, i64 %844, !dbg !6520
  %845 = load double, double* %arrayidx1478, align 8, !dbg !6520
  %846 = load i64, i64* %channel, align 8, !dbg !6521
  %arrayidx1479 = getelementptr inbounds [48 x double], [48 x double]* %M03, i64 0, i64 %846, !dbg !6522
  %847 = load double, double* %arrayidx1479, align 8, !dbg !6522
  %add1480 = fadd double %845, %847, !dbg !6523
  %mul1481 = fmul double %add1477, %add1480, !dbg !6524
  %sub1482 = fsub double %mul1474, %mul1481, !dbg !6525
  %mul1483 = fmul double %mul1466, %sub1482, !dbg !6526
  %sub1484 = fsub double %mul1458, %mul1483, !dbg !6527
  %848 = load %struct._ChannelMoments*, %struct._ChannelMoments** %channel_moments, align 8, !dbg !6528
  %849 = load i64, i64* %channel, align 8, !dbg !6529
  %arrayidx1485 = getelementptr inbounds %struct._ChannelMoments, %struct._ChannelMoments* %848, i64 %849, !dbg !6528
  %I1486 = getelementptr inbounds %struct._ChannelMoments, %struct._ChannelMoments* %arrayidx1485, i32 0, i32 0, !dbg !6530
  %arrayidx1487 = getelementptr inbounds [32 x double], [32 x double]* %I1486, i64 0, i64 6, !dbg !6528
  store double %sub1484, double* %arrayidx1487, align 8, !dbg !6531
  %850 = load i64, i64* %channel, align 8, !dbg !6532
  %arrayidx1488 = getelementptr inbounds [48 x double], [48 x double]* %M11, i64 0, i64 %850, !dbg !6533
  %851 = load double, double* %arrayidx1488, align 8, !dbg !6533
  %852 = load i64, i64* %channel, align 8, !dbg !6534
  %arrayidx1489 = getelementptr inbounds [48 x double], [48 x double]* %M30, i64 0, i64 %852, !dbg !6535
  %853 = load double, double* %arrayidx1489, align 8, !dbg !6535
  %854 = load i64, i64* %channel, align 8, !dbg !6536
  %arrayidx1490 = getelementptr inbounds [48 x double], [48 x double]* %M12, i64 0, i64 %854, !dbg !6537
  %855 = load double, double* %arrayidx1490, align 8, !dbg !6537
  %add1491 = fadd double %853, %855, !dbg !6538
  %856 = load i64, i64* %channel, align 8, !dbg !6539
  %arrayidx1492 = getelementptr inbounds [48 x double], [48 x double]* %M30, i64 0, i64 %856, !dbg !6540
  %857 = load double, double* %arrayidx1492, align 8, !dbg !6540
  %858 = load i64, i64* %channel, align 8, !dbg !6541
  %arrayidx1493 = getelementptr inbounds [48 x double], [48 x double]* %M12, i64 0, i64 %858, !dbg !6542
  %859 = load double, double* %arrayidx1493, align 8, !dbg !6542
  %add1494 = fadd double %857, %859, !dbg !6543
  %mul1495 = fmul double %add1491, %add1494, !dbg !6544
  %860 = load i64, i64* %channel, align 8, !dbg !6545
  %arrayidx1496 = getelementptr inbounds [48 x double], [48 x double]* %M03, i64 0, i64 %860, !dbg !6546
  %861 = load double, double* %arrayidx1496, align 8, !dbg !6546
  %862 = load i64, i64* %channel, align 8, !dbg !6547
  %arrayidx1497 = getelementptr inbounds [48 x double], [48 x double]* %M21, i64 0, i64 %862, !dbg !6548
  %863 = load double, double* %arrayidx1497, align 8, !dbg !6548
  %add1498 = fadd double %861, %863, !dbg !6549
  %864 = load i64, i64* %channel, align 8, !dbg !6550
  %arrayidx1499 = getelementptr inbounds [48 x double], [48 x double]* %M03, i64 0, i64 %864, !dbg !6551
  %865 = load double, double* %arrayidx1499, align 8, !dbg !6551
  %866 = load i64, i64* %channel, align 8, !dbg !6552
  %arrayidx1500 = getelementptr inbounds [48 x double], [48 x double]* %M21, i64 0, i64 %866, !dbg !6553
  %867 = load double, double* %arrayidx1500, align 8, !dbg !6553
  %add1501 = fadd double %865, %867, !dbg !6554
  %mul1502 = fmul double %add1498, %add1501, !dbg !6555
  %sub1503 = fsub double %mul1495, %mul1502, !dbg !6556
  %mul1504 = fmul double %851, %sub1503, !dbg !6557
  %868 = load i64, i64* %channel, align 8, !dbg !6558
  %arrayidx1505 = getelementptr inbounds [48 x double], [48 x double]* %M20, i64 0, i64 %868, !dbg !6559
  %869 = load double, double* %arrayidx1505, align 8, !dbg !6559
  %870 = load i64, i64* %channel, align 8, !dbg !6560
  %arrayidx1506 = getelementptr inbounds [48 x double], [48 x double]* %M02, i64 0, i64 %870, !dbg !6561
  %871 = load double, double* %arrayidx1506, align 8, !dbg !6561
  %sub1507 = fsub double %869, %871, !dbg !6562
  %872 = load i64, i64* %channel, align 8, !dbg !6563
  %arrayidx1508 = getelementptr inbounds [48 x double], [48 x double]* %M30, i64 0, i64 %872, !dbg !6564
  %873 = load double, double* %arrayidx1508, align 8, !dbg !6564
  %874 = load i64, i64* %channel, align 8, !dbg !6565
  %arrayidx1509 = getelementptr inbounds [48 x double], [48 x double]* %M12, i64 0, i64 %874, !dbg !6566
  %875 = load double, double* %arrayidx1509, align 8, !dbg !6566
  %add1510 = fadd double %873, %875, !dbg !6567
  %mul1511 = fmul double %sub1507, %add1510, !dbg !6568
  %876 = load i64, i64* %channel, align 8, !dbg !6569
  %arrayidx1512 = getelementptr inbounds [48 x double], [48 x double]* %M03, i64 0, i64 %876, !dbg !6570
  %877 = load double, double* %arrayidx1512, align 8, !dbg !6570
  %878 = load i64, i64* %channel, align 8, !dbg !6571
  %arrayidx1513 = getelementptr inbounds [48 x double], [48 x double]* %M21, i64 0, i64 %878, !dbg !6572
  %879 = load double, double* %arrayidx1513, align 8, !dbg !6572
  %add1514 = fadd double %877, %879, !dbg !6573
  %mul1515 = fmul double %mul1511, %add1514, !dbg !6574
  %sub1516 = fsub double %mul1504, %mul1515, !dbg !6575
  %880 = load %struct._ChannelMoments*, %struct._ChannelMoments** %channel_moments, align 8, !dbg !6576
  %881 = load i64, i64* %channel, align 8, !dbg !6577
  %arrayidx1517 = getelementptr inbounds %struct._ChannelMoments, %struct._ChannelMoments* %880, i64 %881, !dbg !6576
  %I1518 = getelementptr inbounds %struct._ChannelMoments, %struct._ChannelMoments* %arrayidx1517, i32 0, i32 0, !dbg !6578
  %arrayidx1519 = getelementptr inbounds [32 x double], [32 x double]* %I1518, i64 0, i64 7, !dbg !6576
  store double %sub1516, double* %arrayidx1519, align 8, !dbg !6579
  br label %for.inc1520, !dbg !6580

for.inc1520:                                      ; preds = %for.body1286
  %882 = load i64, i64* %channel, align 8, !dbg !6581
  %inc1521 = add nsw i64 %882, 1, !dbg !6581
  store i64 %inc1521, i64* %channel, align 8, !dbg !6581
  br label %for.cond1283, !dbg !6582, !llvm.loop !6583

for.end1522:                                      ; preds = %for.cond1283
  %883 = load i64, i64* %y, align 8, !dbg !6585
  %884 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6587
  %rows1523 = getelementptr inbounds %struct._Image, %struct._Image* %884, i32 0, i32 8, !dbg !6588
  %885 = load i64, i64* %rows1523, align 8, !dbg !6588
  %cmp1524 = icmp slt i64 %883, %885, !dbg !6589
  br i1 %cmp1524, label %if.then1526, label %if.end1528, !dbg !6590

if.then1526:                                      ; preds = %for.end1522
  %886 = load %struct._ChannelMoments*, %struct._ChannelMoments** %channel_moments, align 8, !dbg !6591
  %887 = bitcast %struct._ChannelMoments* %886 to i8*, !dbg !6591
  %call1527 = call i8* @RelinquishMagickMemory(i8* %887), !dbg !6592
  %888 = bitcast i8* %call1527 to %struct._ChannelMoments*, !dbg !6593
  store %struct._ChannelMoments* %888, %struct._ChannelMoments** %channel_moments, align 8, !dbg !6594
  br label %if.end1528, !dbg !6595

if.end1528:                                       ; preds = %if.then1526, %for.end1522
  %889 = load %struct._ChannelMoments*, %struct._ChannelMoments** %channel_moments, align 8, !dbg !6596
  store %struct._ChannelMoments* %889, %struct._ChannelMoments** %retval, align 8, !dbg !6597
  br label %return, !dbg !6597

return:                                           ; preds = %if.end1528, %if.then3
  %890 = load %struct._ChannelMoments*, %struct._ChannelMoments** %retval, align 8, !dbg !6598
  ret %struct._ChannelMoments* %890, !dbg !6598
}

; Function Attrs: allocsize(0,1)
declare dso_local i8* @AcquireQuantumMemory(i64, i64) #5

declare dso_local i8* @ResetMagickMemory(i8*, i32, i64) #2

; Function Attrs: noinline nounwind uwtable
define internal void @SetMagickPixelPacket(%struct._Image* %image, %struct._PixelPacket* %color, i16* %index, %struct._MagickPixelPacket* %pixel) #0 !dbg !6599 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %color.addr = alloca %struct._PixelPacket*, align 8
  %index.addr = alloca i16*, align 8
  %pixel.addr = alloca %struct._MagickPixelPacket*, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !6603, metadata !DIExpression()), !dbg !6604
  store %struct._PixelPacket* %color, %struct._PixelPacket** %color.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %color.addr, metadata !6605, metadata !DIExpression()), !dbg !6606
  store i16* %index, i16** %index.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %index.addr, metadata !6607, metadata !DIExpression()), !dbg !6608
  store %struct._MagickPixelPacket* %pixel, %struct._MagickPixelPacket** %pixel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %pixel.addr, metadata !6609, metadata !DIExpression()), !dbg !6610
  %0 = load %struct._PixelPacket*, %struct._PixelPacket** %color.addr, align 8, !dbg !6611
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %0, i32 0, i32 2, !dbg !6611
  %1 = load i16, i16* %red, align 2, !dbg !6611
  %conv = uitofp i16 %1 to float, !dbg !6612
  %2 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !6613
  %red1 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %2, i32 0, i32 5, !dbg !6614
  store float %conv, float* %red1, align 8, !dbg !6615
  %3 = load %struct._PixelPacket*, %struct._PixelPacket** %color.addr, align 8, !dbg !6616
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %3, i32 0, i32 1, !dbg !6616
  %4 = load i16, i16* %green, align 2, !dbg !6616
  %conv2 = uitofp i16 %4 to float, !dbg !6617
  %5 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !6618
  %green3 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %5, i32 0, i32 6, !dbg !6619
  store float %conv2, float* %green3, align 4, !dbg !6620
  %6 = load %struct._PixelPacket*, %struct._PixelPacket** %color.addr, align 8, !dbg !6621
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %6, i32 0, i32 0, !dbg !6621
  %7 = load i16, i16* %blue, align 2, !dbg !6621
  %conv4 = uitofp i16 %7 to float, !dbg !6622
  %8 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !6623
  %blue5 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %8, i32 0, i32 7, !dbg !6624
  store float %conv4, float* %blue5, align 8, !dbg !6625
  %9 = load %struct._PixelPacket*, %struct._PixelPacket** %color.addr, align 8, !dbg !6626
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %9, i32 0, i32 3, !dbg !6626
  %10 = load i16, i16* %opacity, align 2, !dbg !6626
  %conv6 = uitofp i16 %10 to float, !dbg !6627
  %11 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !6628
  %opacity7 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %11, i32 0, i32 8, !dbg !6629
  store float %conv6, float* %opacity7, align 4, !dbg !6630
  %12 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6631
  %colorspace = getelementptr inbounds %struct._Image, %struct._Image* %12, i32 0, i32 1, !dbg !6633
  %13 = load i32, i32* %colorspace, align 4, !dbg !6633
  %cmp = icmp eq i32 %13, 12, !dbg !6634
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !6635

land.lhs.true:                                    ; preds = %entry
  %14 = load i16*, i16** %index.addr, align 8, !dbg !6636
  %cmp9 = icmp ne i16* %14, null, !dbg !6637
  br i1 %cmp9, label %if.then, label %if.end, !dbg !6638

if.then:                                          ; preds = %land.lhs.true
  %15 = load i16*, i16** %index.addr, align 8, !dbg !6639
  %cmp11 = icmp eq i16* %15, null, !dbg !6639
  br i1 %cmp11, label %cond.true, label %cond.false, !dbg !6639

cond.true:                                        ; preds = %if.then
  br label %cond.end, !dbg !6639

cond.false:                                       ; preds = %if.then
  %16 = load i16*, i16** %index.addr, align 8, !dbg !6639
  %17 = load i16, i16* %16, align 2, !dbg !6639
  %conv13 = zext i16 %17 to i32, !dbg !6639
  br label %cond.end, !dbg !6639

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %conv13, %cond.false ], !dbg !6639
  %conv14 = sitofp i32 %cond to float, !dbg !6640
  %18 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !6641
  %index15 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %18, i32 0, i32 9, !dbg !6642
  store float %conv14, float* %index15, align 8, !dbg !6643
  br label %if.end, !dbg !6641

if.end:                                           ; preds = %cond.end, %land.lhs.true, %entry
  ret void, !dbg !6644
}

; Function Attrs: noinline nounwind uwtable
define internal float @RadiansToDegrees(float %radians) #0 !dbg !6645 {
entry:
  %radians.addr = alloca float, align 4
  store float %radians, float* %radians.addr, align 4
  call void @llvm.dbg.declare(metadata float* %radians.addr, metadata !6649, metadata !DIExpression()), !dbg !6650
  %0 = load float, float* %radians.addr, align 4, !dbg !6651
  %conv = fpext float %0 to double, !dbg !6651
  %mul = fmul double 1.800000e+02, %conv, !dbg !6652
  %div = fdiv double %mul, 0x400921FB54442D18, !dbg !6653
  %conv1 = fptrunc double %div to float, !dbg !6654
  ret float %conv1, !dbg !6655
}

; Function Attrs: nounwind
declare dso_local double @atan(double) #4

; Function Attrs: nounwind
declare dso_local double @pow(double, double) #4

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._ChannelPerceptualHash* @GetImageChannelPerceptualHash(%struct._Image* %image, %struct._ExceptionInfo* %exception) #0 !dbg !6656 {
entry:
  %retval = alloca %struct._ChannelPerceptualHash*, align 8
  %image.addr = alloca %struct._Image*, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %moments = alloca %struct._ChannelMoments*, align 8
  %perceptual_hash = alloca %struct._ChannelPerceptualHash*, align 8
  %hash_image = alloca %struct._Image*, align 8
  %status = alloca i32, align 4
  %i = alloca i64, align 8
  %channel = alloca i64, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !6659, metadata !DIExpression()), !dbg !6660
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !6661, metadata !DIExpression()), !dbg !6662
  call void @llvm.dbg.declare(metadata %struct._ChannelMoments** %moments, metadata !6663, metadata !DIExpression()), !dbg !6664
  call void @llvm.dbg.declare(metadata %struct._ChannelPerceptualHash** %perceptual_hash, metadata !6665, metadata !DIExpression()), !dbg !6666
  call void @llvm.dbg.declare(metadata %struct._Image** %hash_image, metadata !6667, metadata !DIExpression()), !dbg !6668
  call void @llvm.dbg.declare(metadata i32* %status, metadata !6669, metadata !DIExpression()), !dbg !6670
  call void @llvm.dbg.declare(metadata i64* %i, metadata !6671, metadata !DIExpression()), !dbg !6672
  call void @llvm.dbg.declare(metadata i64* %channel, metadata !6673, metadata !DIExpression()), !dbg !6674
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6675
  %1 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !6676
  %call = call %struct._Image* @BlurImage(%struct._Image* %0, double 0.000000e+00, double 1.000000e+00, %struct._ExceptionInfo* %1), !dbg !6677
  store %struct._Image* %call, %struct._Image** %hash_image, align 8, !dbg !6678
  %2 = load %struct._Image*, %struct._Image** %hash_image, align 8, !dbg !6679
  %cmp = icmp eq %struct._Image* %2, null, !dbg !6681
  br i1 %cmp, label %if.then, label %if.end, !dbg !6682

if.then:                                          ; preds = %entry
  store %struct._ChannelPerceptualHash* null, %struct._ChannelPerceptualHash** %retval, align 8, !dbg !6683
  br label %return, !dbg !6683

if.end:                                           ; preds = %entry
  %3 = load %struct._Image*, %struct._Image** %hash_image, align 8, !dbg !6684
  %depth = getelementptr inbounds %struct._Image, %struct._Image* %3, i32 0, i32 9, !dbg !6685
  store i64 8, i64* %depth, align 8, !dbg !6686
  %4 = load %struct._Image*, %struct._Image** %hash_image, align 8, !dbg !6687
  %call1 = call i32 @TransformImageColorspace(%struct._Image* %4, i32 13), !dbg !6688
  store i32 %call1, i32* %status, align 4, !dbg !6689
  %5 = load i32, i32* %status, align 4, !dbg !6690
  %cmp2 = icmp eq i32 %5, 0, !dbg !6692
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !6693

if.then3:                                         ; preds = %if.end
  store %struct._ChannelPerceptualHash* null, %struct._ChannelPerceptualHash** %retval, align 8, !dbg !6694
  br label %return, !dbg !6694

if.end4:                                          ; preds = %if.end
  %6 = load %struct._Image*, %struct._Image** %hash_image, align 8, !dbg !6695
  %7 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !6696
  %call5 = call %struct._ChannelMoments* @GetImageChannelMoments(%struct._Image* %6, %struct._ExceptionInfo* %7), !dbg !6697
  store %struct._ChannelMoments* %call5, %struct._ChannelMoments** %moments, align 8, !dbg !6698
  %8 = load %struct._Image*, %struct._Image** %hash_image, align 8, !dbg !6699
  %call6 = call %struct._Image* @DestroyImage(%struct._Image* %8), !dbg !6700
  store %struct._Image* %call6, %struct._Image** %hash_image, align 8, !dbg !6701
  %9 = load %struct._ChannelMoments*, %struct._ChannelMoments** %moments, align 8, !dbg !6702
  %cmp7 = icmp eq %struct._ChannelMoments* %9, null, !dbg !6704
  br i1 %cmp7, label %if.then8, label %if.end9, !dbg !6705

if.then8:                                         ; preds = %if.end4
  store %struct._ChannelPerceptualHash* null, %struct._ChannelPerceptualHash** %retval, align 8, !dbg !6706
  br label %return, !dbg !6706

if.end9:                                          ; preds = %if.end4
  %call10 = call i8* @AcquireQuantumMemory(i64 48, i64 512) #7, !dbg !6707
  %10 = bitcast i8* %call10 to %struct._ChannelPerceptualHash*, !dbg !6708
  store %struct._ChannelPerceptualHash* %10, %struct._ChannelPerceptualHash** %perceptual_hash, align 8, !dbg !6709
  %11 = load %struct._ChannelPerceptualHash*, %struct._ChannelPerceptualHash** %perceptual_hash, align 8, !dbg !6710
  %cmp11 = icmp eq %struct._ChannelPerceptualHash* %11, null, !dbg !6712
  br i1 %cmp11, label %if.then12, label %if.end13, !dbg !6713

if.then12:                                        ; preds = %if.end9
  store %struct._ChannelPerceptualHash* null, %struct._ChannelPerceptualHash** %retval, align 8, !dbg !6714
  br label %return, !dbg !6714

if.end13:                                         ; preds = %if.end9
  store i64 0, i64* %channel, align 8, !dbg !6715
  br label %for.cond, !dbg !6717

for.cond:                                         ; preds = %for.inc22, %if.end13
  %12 = load i64, i64* %channel, align 8, !dbg !6718
  %cmp14 = icmp sle i64 %12, 47, !dbg !6720
  br i1 %cmp14, label %for.body, label %for.end24, !dbg !6721

for.body:                                         ; preds = %for.cond
  store i64 0, i64* %i, align 8, !dbg !6722
  br label %for.cond15, !dbg !6724

for.cond15:                                       ; preds = %for.inc, %for.body
  %13 = load i64, i64* %i, align 8, !dbg !6725
  %cmp16 = icmp slt i64 %13, 7, !dbg !6727
  br i1 %cmp16, label %for.body17, label %for.end, !dbg !6728

for.body17:                                       ; preds = %for.cond15
  %14 = load %struct._ChannelMoments*, %struct._ChannelMoments** %moments, align 8, !dbg !6729
  %15 = load i64, i64* %channel, align 8, !dbg !6730
  %arrayidx = getelementptr inbounds %struct._ChannelMoments, %struct._ChannelMoments* %14, i64 %15, !dbg !6729
  %I = getelementptr inbounds %struct._ChannelMoments, %struct._ChannelMoments* %arrayidx, i32 0, i32 0, !dbg !6731
  %16 = load i64, i64* %i, align 8, !dbg !6732
  %arrayidx18 = getelementptr inbounds [32 x double], [32 x double]* %I, i64 0, i64 %16, !dbg !6729
  %17 = load double, double* %arrayidx18, align 8, !dbg !6729
  %call19 = call double @MagickLog10(double %17), !dbg !6733
  %fneg = fneg double %call19, !dbg !6734
  %18 = load %struct._ChannelPerceptualHash*, %struct._ChannelPerceptualHash** %perceptual_hash, align 8, !dbg !6735
  %19 = load i64, i64* %channel, align 8, !dbg !6736
  %arrayidx20 = getelementptr inbounds %struct._ChannelPerceptualHash, %struct._ChannelPerceptualHash* %18, i64 %19, !dbg !6735
  %P = getelementptr inbounds %struct._ChannelPerceptualHash, %struct._ChannelPerceptualHash* %arrayidx20, i32 0, i32 0, !dbg !6737
  %20 = load i64, i64* %i, align 8, !dbg !6738
  %arrayidx21 = getelementptr inbounds [32 x double], [32 x double]* %P, i64 0, i64 %20, !dbg !6735
  store double %fneg, double* %arrayidx21, align 8, !dbg !6739
  br label %for.inc, !dbg !6735

for.inc:                                          ; preds = %for.body17
  %21 = load i64, i64* %i, align 8, !dbg !6740
  %inc = add nsw i64 %21, 1, !dbg !6740
  store i64 %inc, i64* %i, align 8, !dbg !6740
  br label %for.cond15, !dbg !6741, !llvm.loop !6742

for.end:                                          ; preds = %for.cond15
  br label %for.inc22, !dbg !6743

for.inc22:                                        ; preds = %for.end
  %22 = load i64, i64* %channel, align 8, !dbg !6744
  %inc23 = add nsw i64 %22, 1, !dbg !6744
  store i64 %inc23, i64* %channel, align 8, !dbg !6744
  br label %for.cond, !dbg !6745, !llvm.loop !6746

for.end24:                                        ; preds = %for.cond
  %23 = load %struct._ChannelMoments*, %struct._ChannelMoments** %moments, align 8, !dbg !6748
  %24 = bitcast %struct._ChannelMoments* %23 to i8*, !dbg !6748
  %call25 = call i8* @RelinquishMagickMemory(i8* %24), !dbg !6749
  %25 = bitcast i8* %call25 to %struct._ChannelMoments*, !dbg !6750
  store %struct._ChannelMoments* %25, %struct._ChannelMoments** %moments, align 8, !dbg !6751
  %26 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6752
  %27 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !6753
  %call26 = call %struct._Image* @BlurImage(%struct._Image* %26, double 0.000000e+00, double 1.000000e+00, %struct._ExceptionInfo* %27), !dbg !6754
  store %struct._Image* %call26, %struct._Image** %hash_image, align 8, !dbg !6755
  %28 = load %struct._Image*, %struct._Image** %hash_image, align 8, !dbg !6756
  %cmp27 = icmp eq %struct._Image* %28, null, !dbg !6758
  br i1 %cmp27, label %if.then28, label %if.end30, !dbg !6759

if.then28:                                        ; preds = %for.end24
  %29 = load %struct._ChannelPerceptualHash*, %struct._ChannelPerceptualHash** %perceptual_hash, align 8, !dbg !6760
  %30 = bitcast %struct._ChannelPerceptualHash* %29 to i8*, !dbg !6760
  %call29 = call i8* @RelinquishMagickMemory(i8* %30), !dbg !6762
  %31 = bitcast i8* %call29 to %struct._ChannelPerceptualHash*, !dbg !6763
  store %struct._ChannelPerceptualHash* %31, %struct._ChannelPerceptualHash** %perceptual_hash, align 8, !dbg !6764
  store %struct._ChannelPerceptualHash* null, %struct._ChannelPerceptualHash** %retval, align 8, !dbg !6765
  br label %return, !dbg !6765

if.end30:                                         ; preds = %for.end24
  %32 = load %struct._Image*, %struct._Image** %hash_image, align 8, !dbg !6766
  %depth31 = getelementptr inbounds %struct._Image, %struct._Image* %32, i32 0, i32 9, !dbg !6767
  store i64 8, i64* %depth31, align 8, !dbg !6768
  %33 = load %struct._Image*, %struct._Image** %hash_image, align 8, !dbg !6769
  %call32 = call i32 @TransformImageColorspace(%struct._Image* %33, i32 32), !dbg !6770
  store i32 %call32, i32* %status, align 4, !dbg !6771
  %34 = load i32, i32* %status, align 4, !dbg !6772
  %cmp33 = icmp eq i32 %34, 0, !dbg !6774
  br i1 %cmp33, label %if.then34, label %if.end36, !dbg !6775

if.then34:                                        ; preds = %if.end30
  %35 = load %struct._ChannelPerceptualHash*, %struct._ChannelPerceptualHash** %perceptual_hash, align 8, !dbg !6776
  %36 = bitcast %struct._ChannelPerceptualHash* %35 to i8*, !dbg !6776
  %call35 = call i8* @RelinquishMagickMemory(i8* %36), !dbg !6778
  %37 = bitcast i8* %call35 to %struct._ChannelPerceptualHash*, !dbg !6779
  store %struct._ChannelPerceptualHash* %37, %struct._ChannelPerceptualHash** %perceptual_hash, align 8, !dbg !6780
  store %struct._ChannelPerceptualHash* null, %struct._ChannelPerceptualHash** %retval, align 8, !dbg !6781
  br label %return, !dbg !6781

if.end36:                                         ; preds = %if.end30
  %38 = load %struct._Image*, %struct._Image** %hash_image, align 8, !dbg !6782
  %39 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !6783
  %call37 = call %struct._ChannelMoments* @GetImageChannelMoments(%struct._Image* %38, %struct._ExceptionInfo* %39), !dbg !6784
  store %struct._ChannelMoments* %call37, %struct._ChannelMoments** %moments, align 8, !dbg !6785
  %40 = load %struct._Image*, %struct._Image** %hash_image, align 8, !dbg !6786
  %call38 = call %struct._Image* @DestroyImage(%struct._Image* %40), !dbg !6787
  store %struct._Image* %call38, %struct._Image** %hash_image, align 8, !dbg !6788
  %41 = load %struct._ChannelMoments*, %struct._ChannelMoments** %moments, align 8, !dbg !6789
  %cmp39 = icmp eq %struct._ChannelMoments* %41, null, !dbg !6791
  br i1 %cmp39, label %if.then40, label %if.end42, !dbg !6792

if.then40:                                        ; preds = %if.end36
  %42 = load %struct._ChannelPerceptualHash*, %struct._ChannelPerceptualHash** %perceptual_hash, align 8, !dbg !6793
  %43 = bitcast %struct._ChannelPerceptualHash* %42 to i8*, !dbg !6793
  %call41 = call i8* @RelinquishMagickMemory(i8* %43), !dbg !6795
  %44 = bitcast i8* %call41 to %struct._ChannelPerceptualHash*, !dbg !6796
  store %struct._ChannelPerceptualHash* %44, %struct._ChannelPerceptualHash** %perceptual_hash, align 8, !dbg !6797
  store %struct._ChannelPerceptualHash* null, %struct._ChannelPerceptualHash** %retval, align 8, !dbg !6798
  br label %return, !dbg !6798

if.end42:                                         ; preds = %if.end36
  store i64 0, i64* %channel, align 8, !dbg !6799
  br label %for.cond43, !dbg !6801

for.cond43:                                       ; preds = %for.inc59, %if.end42
  %45 = load i64, i64* %channel, align 8, !dbg !6802
  %cmp44 = icmp sle i64 %45, 47, !dbg !6804
  br i1 %cmp44, label %for.body45, label %for.end61, !dbg !6805

for.body45:                                       ; preds = %for.cond43
  store i64 0, i64* %i, align 8, !dbg !6806
  br label %for.cond46, !dbg !6808

for.cond46:                                       ; preds = %for.inc56, %for.body45
  %46 = load i64, i64* %i, align 8, !dbg !6809
  %cmp47 = icmp slt i64 %46, 7, !dbg !6811
  br i1 %cmp47, label %for.body48, label %for.end58, !dbg !6812

for.body48:                                       ; preds = %for.cond46
  %47 = load %struct._ChannelMoments*, %struct._ChannelMoments** %moments, align 8, !dbg !6813
  %48 = load i64, i64* %channel, align 8, !dbg !6814
  %arrayidx49 = getelementptr inbounds %struct._ChannelMoments, %struct._ChannelMoments* %47, i64 %48, !dbg !6813
  %I50 = getelementptr inbounds %struct._ChannelMoments, %struct._ChannelMoments* %arrayidx49, i32 0, i32 0, !dbg !6815
  %49 = load i64, i64* %i, align 8, !dbg !6816
  %arrayidx51 = getelementptr inbounds [32 x double], [32 x double]* %I50, i64 0, i64 %49, !dbg !6813
  %50 = load double, double* %arrayidx51, align 8, !dbg !6813
  %call52 = call double @MagickLog10(double %50), !dbg !6817
  %fneg53 = fneg double %call52, !dbg !6818
  %51 = load %struct._ChannelPerceptualHash*, %struct._ChannelPerceptualHash** %perceptual_hash, align 8, !dbg !6819
  %52 = load i64, i64* %channel, align 8, !dbg !6820
  %arrayidx54 = getelementptr inbounds %struct._ChannelPerceptualHash, %struct._ChannelPerceptualHash* %51, i64 %52, !dbg !6819
  %Q = getelementptr inbounds %struct._ChannelPerceptualHash, %struct._ChannelPerceptualHash* %arrayidx54, i32 0, i32 1, !dbg !6821
  %53 = load i64, i64* %i, align 8, !dbg !6822
  %arrayidx55 = getelementptr inbounds [32 x double], [32 x double]* %Q, i64 0, i64 %53, !dbg !6819
  store double %fneg53, double* %arrayidx55, align 8, !dbg !6823
  br label %for.inc56, !dbg !6819

for.inc56:                                        ; preds = %for.body48
  %54 = load i64, i64* %i, align 8, !dbg !6824
  %inc57 = add nsw i64 %54, 1, !dbg !6824
  store i64 %inc57, i64* %i, align 8, !dbg !6824
  br label %for.cond46, !dbg !6825, !llvm.loop !6826

for.end58:                                        ; preds = %for.cond46
  br label %for.inc59, !dbg !6827

for.inc59:                                        ; preds = %for.end58
  %55 = load i64, i64* %channel, align 8, !dbg !6828
  %inc60 = add nsw i64 %55, 1, !dbg !6828
  store i64 %inc60, i64* %channel, align 8, !dbg !6828
  br label %for.cond43, !dbg !6829, !llvm.loop !6830

for.end61:                                        ; preds = %for.cond43
  %56 = load %struct._ChannelMoments*, %struct._ChannelMoments** %moments, align 8, !dbg !6832
  %57 = bitcast %struct._ChannelMoments* %56 to i8*, !dbg !6832
  %call62 = call i8* @RelinquishMagickMemory(i8* %57), !dbg !6833
  %58 = bitcast i8* %call62 to %struct._ChannelMoments*, !dbg !6834
  store %struct._ChannelMoments* %58, %struct._ChannelMoments** %moments, align 8, !dbg !6835
  %59 = load %struct._ChannelPerceptualHash*, %struct._ChannelPerceptualHash** %perceptual_hash, align 8, !dbg !6836
  store %struct._ChannelPerceptualHash* %59, %struct._ChannelPerceptualHash** %retval, align 8, !dbg !6837
  br label %return, !dbg !6837

return:                                           ; preds = %for.end61, %if.then40, %if.then34, %if.then28, %if.then12, %if.then8, %if.then3, %if.then
  %60 = load %struct._ChannelPerceptualHash*, %struct._ChannelPerceptualHash** %retval, align 8, !dbg !6838
  ret %struct._ChannelPerceptualHash* %60, !dbg !6838
}

declare dso_local %struct._Image* @BlurImage(%struct._Image*, double, double, %struct._ExceptionInfo*) #2

declare dso_local i32 @TransformImageColorspace(%struct._Image*, i32) #2

; Function Attrs: noinline nounwind uwtable
define internal double @MagickLog10(double %x) #0 !dbg !6839 {
entry:
  %retval = alloca double, align 8
  %x.addr = alloca double, align 8
  store double %x, double* %x.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x.addr, metadata !6842, metadata !DIExpression()), !dbg !6843
  %0 = load double, double* %x.addr, align 8, !dbg !6844
  %1 = call double @llvm.fabs.f64(double %0), !dbg !6846
  %cmp = fcmp olt double %1, 0x3DA5FD7FE1796495, !dbg !6847
  br i1 %cmp, label %if.then, label %if.end, !dbg !6848

if.then:                                          ; preds = %entry
  %call = call double @log10(double 0x3DA5FD7FE1796495) #8, !dbg !6849
  store double %call, double* %retval, align 8, !dbg !6850
  br label %return, !dbg !6850

if.end:                                           ; preds = %entry
  %2 = load double, double* %x.addr, align 8, !dbg !6851
  %3 = call double @llvm.fabs.f64(double %2), !dbg !6852
  %call1 = call double @log10(double %3) #8, !dbg !6853
  store double %call1, double* %retval, align 8, !dbg !6854
  br label %return, !dbg !6854

return:                                           ; preds = %if.end, %if.then
  %4 = load double, double* %retval, align 8, !dbg !6855
  ret double %4, !dbg !6855
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @GetImageRange(%struct._Image* %image, double* %minima, double* %maxima, %struct._ExceptionInfo* %exception) #0 !dbg !6856 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %minima.addr = alloca double*, align 8
  %maxima.addr = alloca double*, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !6857, metadata !DIExpression()), !dbg !6858
  store double* %minima, double** %minima.addr, align 8
  call void @llvm.dbg.declare(metadata double** %minima.addr, metadata !6859, metadata !DIExpression()), !dbg !6860
  store double* %maxima, double** %maxima.addr, align 8
  call void @llvm.dbg.declare(metadata double** %maxima.addr, metadata !6861, metadata !DIExpression()), !dbg !6862
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !6863, metadata !DIExpression()), !dbg !6864
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !6865
  %1 = load double*, double** %minima.addr, align 8, !dbg !6866
  %2 = load double*, double** %maxima.addr, align 8, !dbg !6867
  %3 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !6868
  %call = call i32 @GetImageChannelRange(%struct._Image* %0, i32 47, double* %1, double* %2, %struct._ExceptionInfo* %3), !dbg !6869
  ret i32 %call, !dbg !6870
}

; Function Attrs: noinline nounwind uwtable
define internal i64 @GetQuantumRange(i64 %depth) #0 !dbg !6871 {
entry:
  %depth.addr = alloca i64, align 8
  %one = alloca i64, align 8
  store i64 %depth, i64* %depth.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %depth.addr, metadata !6875, metadata !DIExpression()), !dbg !6876
  call void @llvm.dbg.declare(metadata i64* %one, metadata !6877, metadata !DIExpression()), !dbg !6878
  store i64 1, i64* %one, align 8, !dbg !6879
  %0 = load i64, i64* %one, align 8, !dbg !6880
  %1 = load i64, i64* %depth.addr, align 8, !dbg !6881
  %sub = sub i64 %1, 1, !dbg !6882
  %shl = shl i64 %0, %sub, !dbg !6883
  %2 = load i64, i64* %one, align 8, !dbg !6884
  %3 = load i64, i64* %depth.addr, align 8, !dbg !6885
  %sub1 = sub i64 %3, 1, !dbg !6886
  %shl2 = shl i64 %2, %sub1, !dbg !6887
  %sub3 = sub i64 %shl2, 1, !dbg !6888
  %add = add i64 %shl, %sub3, !dbg !6889
  ret i64 %add, !dbg !6890
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @IsPixelAtDepth(i16 zeroext %pixel, i64 %range) #0 !dbg !6891 {
entry:
  %pixel.addr = alloca i16, align 2
  %range.addr = alloca i64, align 8
  %quantum = alloca i16, align 2
  store i16 %pixel, i16* %pixel.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %pixel.addr, metadata !6896, metadata !DIExpression()), !dbg !6897
  store i64 %range, i64* %range.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %range.addr, metadata !6898, metadata !DIExpression()), !dbg !6899
  call void @llvm.dbg.declare(metadata i16* %quantum, metadata !6900, metadata !DIExpression()), !dbg !6901
  %0 = load i64, i64* %range.addr, align 8, !dbg !6902
  %conv = uitofp i64 %0 to float, !dbg !6903
  %1 = load i16, i16* %pixel.addr, align 2, !dbg !6904
  %conv1 = zext i16 %1 to i32, !dbg !6904
  %conv2 = sitofp i32 %conv1 to float, !dbg !6904
  %mul = fmul float %conv, %conv2, !dbg !6905
  %div = fdiv float %mul, 6.553500e+04, !dbg !6906
  %conv3 = fpext float %div to double, !dbg !6907
  %add = fadd double %conv3, 5.000000e-01, !dbg !6908
  %conv4 = fptoui double %add to i64, !dbg !6909
  %conv5 = uitofp i64 %conv4 to float, !dbg !6910
  %mul6 = fmul float 6.553500e+04, %conv5, !dbg !6911
  %2 = load i64, i64* %range.addr, align 8, !dbg !6912
  %conv7 = uitofp i64 %2 to float, !dbg !6912
  %div8 = fdiv float %mul6, %conv7, !dbg !6913
  %conv9 = fpext float %div8 to double, !dbg !6914
  %add10 = fadd double %conv9, 5.000000e-01, !dbg !6915
  %conv11 = fptoui double %add10 to i16, !dbg !6916
  store i16 %conv11, i16* %quantum, align 2, !dbg !6917
  %3 = load i16, i16* %pixel.addr, align 2, !dbg !6918
  %conv12 = zext i16 %3 to i32, !dbg !6918
  %4 = load i16, i16* %quantum, align 2, !dbg !6919
  %conv13 = zext i16 %4 to i32, !dbg !6919
  %cmp = icmp eq i32 %conv12, %conv13, !dbg !6920
  %5 = zext i1 %cmp to i64, !dbg !6918
  %cond = select i1 %cmp, i32 1, i32 0, !dbg !6918
  ret i32 %cond, !dbg !6921
}

; Function Attrs: noinline nounwind uwtable
define internal double @EvaluateMax(double %x, double %y) #0 !dbg !6922 {
entry:
  %retval = alloca double, align 8
  %x.addr = alloca double, align 8
  %y.addr = alloca double, align 8
  store double %x, double* %x.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x.addr, metadata !6925, metadata !DIExpression()), !dbg !6926
  store double %y, double* %y.addr, align 8
  call void @llvm.dbg.declare(metadata double* %y.addr, metadata !6927, metadata !DIExpression()), !dbg !6928
  %0 = load double, double* %x.addr, align 8, !dbg !6929
  %1 = load double, double* %y.addr, align 8, !dbg !6931
  %cmp = fcmp ogt double %0, %1, !dbg !6932
  br i1 %cmp, label %if.then, label %if.end, !dbg !6933

if.then:                                          ; preds = %entry
  %2 = load double, double* %x.addr, align 8, !dbg !6934
  store double %2, double* %retval, align 8, !dbg !6935
  br label %return, !dbg !6935

if.end:                                           ; preds = %entry
  %3 = load double, double* %y.addr, align 8, !dbg !6936
  store double %3, double* %retval, align 8, !dbg !6937
  br label %return, !dbg !6937

return:                                           ; preds = %if.end, %if.then
  %4 = load double, double* %retval, align 8, !dbg !6938
  ret double %4, !dbg !6938
}

; Function Attrs: noinline nounwind uwtable
define internal double @MagickMin(double %x, double %y) #0 !dbg !6939 {
entry:
  %retval = alloca double, align 8
  %x.addr = alloca double, align 8
  %y.addr = alloca double, align 8
  store double %x, double* %x.addr, align 8
  call void @llvm.dbg.declare(metadata double* %x.addr, metadata !6940, metadata !DIExpression()), !dbg !6941
  store double %y, double* %y.addr, align 8
  call void @llvm.dbg.declare(metadata double* %y.addr, metadata !6942, metadata !DIExpression()), !dbg !6943
  %0 = load double, double* %x.addr, align 8, !dbg !6944
  %1 = load double, double* %y.addr, align 8, !dbg !6946
  %cmp = fcmp olt double %0, %1, !dbg !6947
  br i1 %cmp, label %if.then, label %if.end, !dbg !6948

if.then:                                          ; preds = %entry
  %2 = load double, double* %x.addr, align 8, !dbg !6949
  store double %2, double* %retval, align 8, !dbg !6950
  br label %return, !dbg !6950

if.end:                                           ; preds = %entry
  %3 = load double, double* %y.addr, align 8, !dbg !6951
  store double %3, double* %retval, align 8, !dbg !6952
  br label %return, !dbg !6952

return:                                           ; preds = %if.end, %if.then
  %4 = load double, double* %retval, align 8, !dbg !6953
  ret double %4, !dbg !6953
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._Image* @PolynomialImage(%struct._Image* %images, i64 %number_terms, double* %terms, %struct._ExceptionInfo* %exception) #0 !dbg !6954 {
entry:
  %images.addr = alloca %struct._Image*, align 8
  %number_terms.addr = alloca i64, align 8
  %terms.addr = alloca double*, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %polynomial_image = alloca %struct._Image*, align 8
  store %struct._Image* %images, %struct._Image** %images.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %images.addr, metadata !6957, metadata !DIExpression()), !dbg !6958
  store i64 %number_terms, i64* %number_terms.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %number_terms.addr, metadata !6959, metadata !DIExpression()), !dbg !6960
  store double* %terms, double** %terms.addr, align 8
  call void @llvm.dbg.declare(metadata double** %terms.addr, metadata !6961, metadata !DIExpression()), !dbg !6962
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !6963, metadata !DIExpression()), !dbg !6964
  call void @llvm.dbg.declare(metadata %struct._Image** %polynomial_image, metadata !6965, metadata !DIExpression()), !dbg !6966
  %0 = load %struct._Image*, %struct._Image** %images.addr, align 8, !dbg !6967
  %1 = load i64, i64* %number_terms.addr, align 8, !dbg !6968
  %2 = load double*, double** %terms.addr, align 8, !dbg !6969
  %3 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !6970
  %call = call %struct._Image* @PolynomialImageChannel(%struct._Image* %0, i32 134217719, i64 %1, double* %2, %struct._ExceptionInfo* %3), !dbg !6971
  store %struct._Image* %call, %struct._Image** %polynomial_image, align 8, !dbg !6972
  %4 = load %struct._Image*, %struct._Image** %polynomial_image, align 8, !dbg !6973
  ret %struct._Image* %4, !dbg !6974
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._Image* @PolynomialImageChannel(%struct._Image* %images, i32 %channel, i64 %number_terms, double* %terms, %struct._ExceptionInfo* %exception) #0 !dbg !6975 {
entry:
  %retval = alloca %struct._Image*, align 8
  %images.addr = alloca %struct._Image*, align 8
  %channel.addr = alloca i32, align 4
  %number_terms.addr = alloca i64, align 8
  %terms.addr = alloca double*, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %polynomial_view = alloca %struct._CacheView*, align 8
  %image = alloca %struct._Image*, align 8
  %status = alloca i32, align 4
  %progress = alloca i64, align 8
  %polynomial_pixels = alloca %struct._MagickPixelPacket**, align 8
  %zero = alloca %struct._MagickPixelPacket, align 8
  %number_images = alloca i64, align 8
  %y = alloca i64, align 8
  %image_view = alloca %struct._CacheView*, align 8
  %next = alloca %struct._Image*, align 8
  %id = alloca i32, align 4
  %polynomial_indexes = alloca i16*, align 8
  %polynomial_pixel = alloca %struct._MagickPixelPacket*, align 8
  %q = alloca %struct._PixelPacket*, align 8
  %i = alloca i64, align 8
  %x = alloca i64, align 8
  %indexes = alloca i16*, align 8
  %p = alloca %struct._PixelPacket*, align 8
  %coefficient = alloca double, align 8
  %degree = alloca double, align 8
  %proceed = alloca i32, align 4
  store %struct._Image* %images, %struct._Image** %images.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %images.addr, metadata !6978, metadata !DIExpression()), !dbg !6979
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !6980, metadata !DIExpression()), !dbg !6981
  store i64 %number_terms, i64* %number_terms.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %number_terms.addr, metadata !6982, metadata !DIExpression()), !dbg !6983
  store double* %terms, double** %terms.addr, align 8
  call void @llvm.dbg.declare(metadata double** %terms.addr, metadata !6984, metadata !DIExpression()), !dbg !6985
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !6986, metadata !DIExpression()), !dbg !6987
  call void @llvm.dbg.declare(metadata %struct._CacheView** %polynomial_view, metadata !6988, metadata !DIExpression()), !dbg !6989
  call void @llvm.dbg.declare(metadata %struct._Image** %image, metadata !6990, metadata !DIExpression()), !dbg !6991
  call void @llvm.dbg.declare(metadata i32* %status, metadata !6992, metadata !DIExpression()), !dbg !6993
  call void @llvm.dbg.declare(metadata i64* %progress, metadata !6994, metadata !DIExpression()), !dbg !6995
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket*** %polynomial_pixels, metadata !6996, metadata !DIExpression()), !dbg !6997
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket* %zero, metadata !6998, metadata !DIExpression()), !dbg !6999
  call void @llvm.dbg.declare(metadata i64* %number_images, metadata !7000, metadata !DIExpression()), !dbg !7001
  call void @llvm.dbg.declare(metadata i64* %y, metadata !7002, metadata !DIExpression()), !dbg !7003
  %0 = load %struct._Image*, %struct._Image** %images.addr, align 8, !dbg !7004
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !7006
  %1 = load i32, i32* %debug, align 8, !dbg !7006
  %cmp = icmp ne i32 %1, 0, !dbg !7007
  br i1 %cmp, label %if.then, label %if.end, !dbg !7008

if.then:                                          ; preds = %entry
  %2 = load %struct._Image*, %struct._Image** %images.addr, align 8, !dbg !7009
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %2, i32 0, i32 53, !dbg !7010
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !7009
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2475, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !7011
  br label %if.end, !dbg !7012

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._Image*, %struct._Image** %images.addr, align 8, !dbg !7013
  %4 = load %struct._Image*, %struct._Image** %images.addr, align 8, !dbg !7014
  %columns = getelementptr inbounds %struct._Image, %struct._Image* %4, i32 0, i32 7, !dbg !7015
  %5 = load i64, i64* %columns, align 8, !dbg !7015
  %6 = load %struct._Image*, %struct._Image** %images.addr, align 8, !dbg !7016
  %rows = getelementptr inbounds %struct._Image, %struct._Image* %6, i32 0, i32 8, !dbg !7017
  %7 = load i64, i64* %rows, align 8, !dbg !7017
  %8 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !7018
  %call1 = call %struct._Image* @CloneImage(%struct._Image* %3, i64 %5, i64 %7, i32 1, %struct._ExceptionInfo* %8), !dbg !7019
  store %struct._Image* %call1, %struct._Image** %image, align 8, !dbg !7020
  %9 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !7021
  %cmp2 = icmp eq %struct._Image* %9, null, !dbg !7023
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !7024

if.then3:                                         ; preds = %if.end
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !7025
  br label %return, !dbg !7025

if.end4:                                          ; preds = %if.end
  %10 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !7026
  %call5 = call i32 @SetImageStorageClass(%struct._Image* %10, i32 1), !dbg !7028
  %cmp6 = icmp eq i32 %call5, 0, !dbg !7029
  br i1 %cmp6, label %if.then7, label %if.end10, !dbg !7030

if.then7:                                         ; preds = %if.end4
  %11 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !7031
  %12 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !7033
  %exception8 = getelementptr inbounds %struct._Image, %struct._Image* %12, i32 0, i32 58, !dbg !7034
  call void @InheritException(%struct._ExceptionInfo* %11, %struct._ExceptionInfo* %exception8), !dbg !7035
  %13 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !7036
  %call9 = call %struct._Image* @DestroyImage(%struct._Image* %13), !dbg !7037
  store %struct._Image* %call9, %struct._Image** %image, align 8, !dbg !7038
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !7039
  br label %return, !dbg !7039

if.end10:                                         ; preds = %if.end4
  %14 = load %struct._Image*, %struct._Image** %images.addr, align 8, !dbg !7040
  %call11 = call i64 @GetImageListLength(%struct._Image* %14), !dbg !7041
  store i64 %call11, i64* %number_images, align 8, !dbg !7042
  %15 = load %struct._Image*, %struct._Image** %images.addr, align 8, !dbg !7043
  %16 = load i64, i64* %number_images, align 8, !dbg !7044
  %call12 = call %struct._MagickPixelPacket** @AcquirePixelThreadSet(%struct._Image* %15, i64 %16), !dbg !7045
  store %struct._MagickPixelPacket** %call12, %struct._MagickPixelPacket*** %polynomial_pixels, align 8, !dbg !7046
  %17 = load %struct._MagickPixelPacket**, %struct._MagickPixelPacket*** %polynomial_pixels, align 8, !dbg !7047
  %cmp13 = icmp eq %struct._MagickPixelPacket** %17, null, !dbg !7049
  br i1 %cmp13, label %if.then14, label %if.end19, !dbg !7050

if.then14:                                        ; preds = %if.end10
  %18 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !7051
  %call15 = call %struct._Image* @DestroyImage(%struct._Image* %18), !dbg !7053
  store %struct._Image* %call15, %struct._Image** %image, align 8, !dbg !7054
  %19 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !7055
  %20 = load %struct._Image*, %struct._Image** %images.addr, align 8, !dbg !7056
  %filename16 = getelementptr inbounds %struct._Image, %struct._Image* %20, i32 0, i32 53, !dbg !7057
  %arraydecay17 = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename16, i64 0, i64 0, !dbg !7056
  %call18 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %19, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 2492, i32 400, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay17), !dbg !7058
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !7059
  br label %return, !dbg !7059

if.end19:                                         ; preds = %if.end10
  store i32 1, i32* %status, align 4, !dbg !7060
  store i64 0, i64* %progress, align 8, !dbg !7061
  %21 = load %struct._Image*, %struct._Image** %images.addr, align 8, !dbg !7062
  call void @GetMagickPixelPacket(%struct._Image* %21, %struct._MagickPixelPacket* %zero), !dbg !7063
  %22 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !7064
  %23 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !7065
  %call20 = call %struct._CacheView* @AcquireAuthenticCacheView(%struct._Image* %22, %struct._ExceptionInfo* %23), !dbg !7066
  store %struct._CacheView* %call20, %struct._CacheView** %polynomial_view, align 8, !dbg !7067
  store i64 0, i64* %y, align 8, !dbg !7068
  br label %for.cond, !dbg !7070

for.cond:                                         ; preds = %for.inc213, %if.end19
  %24 = load i64, i64* %y, align 8, !dbg !7071
  %25 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !7073
  %rows21 = getelementptr inbounds %struct._Image, %struct._Image* %25, i32 0, i32 8, !dbg !7074
  %26 = load i64, i64* %rows21, align 8, !dbg !7074
  %cmp22 = icmp slt i64 %24, %26, !dbg !7075
  br i1 %cmp22, label %for.body, label %for.end215, !dbg !7076

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct._CacheView** %image_view, metadata !7077, metadata !DIExpression()), !dbg !7079
  call void @llvm.dbg.declare(metadata %struct._Image** %next, metadata !7080, metadata !DIExpression()), !dbg !7081
  call void @llvm.dbg.declare(metadata i32* %id, metadata !7082, metadata !DIExpression()), !dbg !7083
  %call23 = call i32 @GetOpenMPThreadId(), !dbg !7084
  store i32 %call23, i32* %id, align 4, !dbg !7083
  call void @llvm.dbg.declare(metadata i16** %polynomial_indexes, metadata !7085, metadata !DIExpression()), !dbg !7086
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %polynomial_pixel, metadata !7087, metadata !DIExpression()), !dbg !7088
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q, metadata !7089, metadata !DIExpression()), !dbg !7090
  call void @llvm.dbg.declare(metadata i64* %i, metadata !7091, metadata !DIExpression()), !dbg !7092
  call void @llvm.dbg.declare(metadata i64* %x, metadata !7093, metadata !DIExpression()), !dbg !7094
  %27 = load i32, i32* %status, align 4, !dbg !7095
  %cmp24 = icmp eq i32 %27, 0, !dbg !7097
  br i1 %cmp24, label %if.then25, label %if.end26, !dbg !7098

if.then25:                                        ; preds = %for.body
  br label %for.inc213, !dbg !7099

if.end26:                                         ; preds = %for.body
  %28 = load %struct._CacheView*, %struct._CacheView** %polynomial_view, align 8, !dbg !7100
  %29 = load i64, i64* %y, align 8, !dbg !7101
  %30 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !7102
  %columns27 = getelementptr inbounds %struct._Image, %struct._Image* %30, i32 0, i32 7, !dbg !7103
  %31 = load i64, i64* %columns27, align 8, !dbg !7103
  %32 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !7104
  %call28 = call %struct._PixelPacket* @QueueCacheViewAuthenticPixels(%struct._CacheView* %28, i64 0, i64 %29, i64 %31, i64 1, %struct._ExceptionInfo* %32), !dbg !7105
  store %struct._PixelPacket* %call28, %struct._PixelPacket** %q, align 8, !dbg !7106
  %33 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7107
  %cmp29 = icmp eq %struct._PixelPacket* %33, null, !dbg !7109
  br i1 %cmp29, label %if.then30, label %if.end31, !dbg !7110

if.then30:                                        ; preds = %if.end26
  store i32 0, i32* %status, align 4, !dbg !7111
  br label %for.inc213, !dbg !7113

if.end31:                                         ; preds = %if.end26
  %34 = load %struct._CacheView*, %struct._CacheView** %polynomial_view, align 8, !dbg !7114
  %call32 = call i16* @GetCacheViewAuthenticIndexQueue(%struct._CacheView* %34), !dbg !7115
  store i16* %call32, i16** %polynomial_indexes, align 8, !dbg !7116
  %35 = load %struct._MagickPixelPacket**, %struct._MagickPixelPacket*** %polynomial_pixels, align 8, !dbg !7117
  %36 = load i32, i32* %id, align 4, !dbg !7118
  %idxprom = sext i32 %36 to i64, !dbg !7117
  %arrayidx = getelementptr inbounds %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %35, i64 %idxprom, !dbg !7117
  %37 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %arrayidx, align 8, !dbg !7117
  store %struct._MagickPixelPacket* %37, %struct._MagickPixelPacket** %polynomial_pixel, align 8, !dbg !7119
  store i64 0, i64* %x, align 8, !dbg !7120
  br label %for.cond33, !dbg !7122

for.cond33:                                       ; preds = %for.inc, %if.end31
  %38 = load i64, i64* %x, align 8, !dbg !7123
  %39 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !7125
  %columns34 = getelementptr inbounds %struct._Image, %struct._Image* %39, i32 0, i32 7, !dbg !7126
  %40 = load i64, i64* %columns34, align 8, !dbg !7126
  %cmp35 = icmp slt i64 %38, %40, !dbg !7127
  br i1 %cmp35, label %for.body36, label %for.end, !dbg !7128

for.body36:                                       ; preds = %for.cond33
  %41 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %polynomial_pixel, align 8, !dbg !7129
  %42 = load i64, i64* %x, align 8, !dbg !7130
  %arrayidx37 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %41, i64 %42, !dbg !7129
  %43 = bitcast %struct._MagickPixelPacket* %arrayidx37 to i8*, !dbg !7131
  %44 = bitcast %struct._MagickPixelPacket* %zero to i8*, !dbg !7131
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %44, i64 56, i1 false), !dbg !7131
  br label %for.inc, !dbg !7129

for.inc:                                          ; preds = %for.body36
  %45 = load i64, i64* %x, align 8, !dbg !7132
  %inc = add nsw i64 %45, 1, !dbg !7132
  store i64 %inc, i64* %x, align 8, !dbg !7132
  br label %for.cond33, !dbg !7133, !llvm.loop !7134

for.end:                                          ; preds = %for.cond33
  %46 = load %struct._Image*, %struct._Image** %images.addr, align 8, !dbg !7136
  store %struct._Image* %46, %struct._Image** %next, align 8, !dbg !7137
  store i64 0, i64* %i, align 8, !dbg !7138
  br label %for.cond38, !dbg !7140

for.cond38:                                       ; preds = %for.inc137, %for.end
  %47 = load i64, i64* %i, align 8, !dbg !7141
  %48 = load i64, i64* %number_images, align 8, !dbg !7143
  %cmp39 = icmp slt i64 %47, %48, !dbg !7144
  br i1 %cmp39, label %for.body40, label %for.end139, !dbg !7145

for.body40:                                       ; preds = %for.cond38
  call void @llvm.dbg.declare(metadata i16** %indexes, metadata !7146, metadata !DIExpression()), !dbg !7148
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %p, metadata !7149, metadata !DIExpression()), !dbg !7150
  %49 = load i64, i64* %i, align 8, !dbg !7151
  %50 = load i64, i64* %number_terms.addr, align 8, !dbg !7153
  %cmp41 = icmp sge i64 %49, %50, !dbg !7154
  br i1 %cmp41, label %if.then42, label %if.end43, !dbg !7155

if.then42:                                        ; preds = %for.body40
  br label %for.end139, !dbg !7156

if.end43:                                         ; preds = %for.body40
  %51 = load %struct._Image*, %struct._Image** %next, align 8, !dbg !7157
  %52 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !7158
  %call44 = call %struct._CacheView* @AcquireVirtualCacheView(%struct._Image* %51, %struct._ExceptionInfo* %52), !dbg !7159
  store %struct._CacheView* %call44, %struct._CacheView** %image_view, align 8, !dbg !7160
  %53 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !7161
  %54 = load i64, i64* %y, align 8, !dbg !7162
  %55 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !7163
  %columns45 = getelementptr inbounds %struct._Image, %struct._Image* %55, i32 0, i32 7, !dbg !7164
  %56 = load i64, i64* %columns45, align 8, !dbg !7164
  %57 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !7165
  %call46 = call %struct._PixelPacket* @GetCacheViewVirtualPixels(%struct._CacheView* %53, i64 0, i64 %54, i64 %56, i64 1, %struct._ExceptionInfo* %57), !dbg !7166
  store %struct._PixelPacket* %call46, %struct._PixelPacket** %p, align 8, !dbg !7167
  %58 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !7168
  %cmp47 = icmp eq %struct._PixelPacket* %58, null, !dbg !7170
  br i1 %cmp47, label %if.then48, label %if.end50, !dbg !7171

if.then48:                                        ; preds = %if.end43
  %59 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !7172
  %call49 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %59), !dbg !7174
  store %struct._CacheView* %call49, %struct._CacheView** %image_view, align 8, !dbg !7175
  br label %for.end139, !dbg !7176

if.end50:                                         ; preds = %if.end43
  %60 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !7177
  %call51 = call i16* @GetCacheViewVirtualIndexQueue(%struct._CacheView* %60), !dbg !7178
  store i16* %call51, i16** %indexes, align 8, !dbg !7179
  store i64 0, i64* %x, align 8, !dbg !7180
  br label %for.cond52, !dbg !7182

for.cond52:                                       ; preds = %for.inc132, %if.end50
  %61 = load i64, i64* %x, align 8, !dbg !7183
  %62 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !7185
  %columns53 = getelementptr inbounds %struct._Image, %struct._Image* %62, i32 0, i32 7, !dbg !7186
  %63 = load i64, i64* %columns53, align 8, !dbg !7186
  %cmp54 = icmp slt i64 %61, %63, !dbg !7187
  br i1 %cmp54, label %for.body55, label %for.end134, !dbg !7188

for.body55:                                       ; preds = %for.cond52
  call void @llvm.dbg.declare(metadata double* %coefficient, metadata !7189, metadata !DIExpression()), !dbg !7191
  call void @llvm.dbg.declare(metadata double* %degree, metadata !7192, metadata !DIExpression()), !dbg !7193
  %64 = load double*, double** %terms.addr, align 8, !dbg !7194
  %65 = load i64, i64* %i, align 8, !dbg !7195
  %shl = shl i64 %65, 1, !dbg !7196
  %arrayidx56 = getelementptr inbounds double, double* %64, i64 %shl, !dbg !7194
  %66 = load double, double* %arrayidx56, align 8, !dbg !7194
  store double %66, double* %coefficient, align 8, !dbg !7197
  %67 = load double*, double** %terms.addr, align 8, !dbg !7198
  %68 = load i64, i64* %i, align 8, !dbg !7199
  %shl57 = shl i64 %68, 1, !dbg !7200
  %add = add nsw i64 %shl57, 1, !dbg !7201
  %arrayidx58 = getelementptr inbounds double, double* %67, i64 %add, !dbg !7198
  %69 = load double, double* %arrayidx58, align 8, !dbg !7198
  store double %69, double* %degree, align 8, !dbg !7202
  %70 = load i32, i32* %channel.addr, align 4, !dbg !7203
  %and = and i32 %70, 1, !dbg !7205
  %cmp59 = icmp ne i32 %and, 0, !dbg !7206
  br i1 %cmp59, label %if.then60, label %if.end69, !dbg !7207

if.then60:                                        ; preds = %for.body55
  %71 = load double, double* %coefficient, align 8, !dbg !7208
  %72 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !7209
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %72, i32 0, i32 2, !dbg !7210
  %73 = load i16, i16* %red, align 2, !dbg !7210
  %conv = zext i16 %73 to i32, !dbg !7209
  %conv61 = sitofp i32 %conv to double, !dbg !7209
  %mul = fmul double 0x3EF0001000100010, %conv61, !dbg !7211
  %74 = load double, double* %degree, align 8, !dbg !7212
  %call62 = call double @pow(double %mul, double %74) #8, !dbg !7213
  %mul63 = fmul double %71, %call62, !dbg !7214
  %75 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %polynomial_pixel, align 8, !dbg !7215
  %76 = load i64, i64* %x, align 8, !dbg !7216
  %arrayidx64 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %75, i64 %76, !dbg !7215
  %red65 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx64, i32 0, i32 5, !dbg !7217
  %77 = load float, float* %red65, align 8, !dbg !7218
  %conv66 = fpext float %77 to double, !dbg !7218
  %add67 = fadd double %conv66, %mul63, !dbg !7218
  %conv68 = fptrunc double %add67 to float, !dbg !7218
  store float %conv68, float* %red65, align 8, !dbg !7218
  br label %if.end69, !dbg !7215

if.end69:                                         ; preds = %if.then60, %for.body55
  %78 = load i32, i32* %channel.addr, align 4, !dbg !7219
  %and70 = and i32 %78, 2, !dbg !7221
  %cmp71 = icmp ne i32 %and70, 0, !dbg !7222
  br i1 %cmp71, label %if.then73, label %if.end84, !dbg !7223

if.then73:                                        ; preds = %if.end69
  %79 = load double, double* %coefficient, align 8, !dbg !7224
  %80 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !7225
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %80, i32 0, i32 1, !dbg !7226
  %81 = load i16, i16* %green, align 2, !dbg !7226
  %conv74 = zext i16 %81 to i32, !dbg !7225
  %conv75 = sitofp i32 %conv74 to double, !dbg !7225
  %mul76 = fmul double 0x3EF0001000100010, %conv75, !dbg !7227
  %82 = load double, double* %degree, align 8, !dbg !7228
  %call77 = call double @pow(double %mul76, double %82) #8, !dbg !7229
  %mul78 = fmul double %79, %call77, !dbg !7230
  %83 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %polynomial_pixel, align 8, !dbg !7231
  %84 = load i64, i64* %x, align 8, !dbg !7232
  %arrayidx79 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %83, i64 %84, !dbg !7231
  %green80 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx79, i32 0, i32 6, !dbg !7233
  %85 = load float, float* %green80, align 4, !dbg !7234
  %conv81 = fpext float %85 to double, !dbg !7234
  %add82 = fadd double %conv81, %mul78, !dbg !7234
  %conv83 = fptrunc double %add82 to float, !dbg !7234
  store float %conv83, float* %green80, align 4, !dbg !7234
  br label %if.end84, !dbg !7231

if.end84:                                         ; preds = %if.then73, %if.end69
  %86 = load i32, i32* %channel.addr, align 4, !dbg !7235
  %and85 = and i32 %86, 4, !dbg !7237
  %cmp86 = icmp ne i32 %and85, 0, !dbg !7238
  br i1 %cmp86, label %if.then88, label %if.end99, !dbg !7239

if.then88:                                        ; preds = %if.end84
  %87 = load double, double* %coefficient, align 8, !dbg !7240
  %88 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !7241
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %88, i32 0, i32 0, !dbg !7242
  %89 = load i16, i16* %blue, align 2, !dbg !7242
  %conv89 = zext i16 %89 to i32, !dbg !7241
  %conv90 = sitofp i32 %conv89 to double, !dbg !7241
  %mul91 = fmul double 0x3EF0001000100010, %conv90, !dbg !7243
  %90 = load double, double* %degree, align 8, !dbg !7244
  %call92 = call double @pow(double %mul91, double %90) #8, !dbg !7245
  %mul93 = fmul double %87, %call92, !dbg !7246
  %91 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %polynomial_pixel, align 8, !dbg !7247
  %92 = load i64, i64* %x, align 8, !dbg !7248
  %arrayidx94 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %91, i64 %92, !dbg !7247
  %blue95 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx94, i32 0, i32 7, !dbg !7249
  %93 = load float, float* %blue95, align 8, !dbg !7250
  %conv96 = fpext float %93 to double, !dbg !7250
  %add97 = fadd double %conv96, %mul93, !dbg !7250
  %conv98 = fptrunc double %add97 to float, !dbg !7250
  store float %conv98, float* %blue95, align 8, !dbg !7250
  br label %if.end99, !dbg !7247

if.end99:                                         ; preds = %if.then88, %if.end84
  %94 = load i32, i32* %channel.addr, align 4, !dbg !7251
  %and100 = and i32 %94, 8, !dbg !7253
  %cmp101 = icmp ne i32 %and100, 0, !dbg !7254
  br i1 %cmp101, label %if.then103, label %if.end114, !dbg !7255

if.then103:                                       ; preds = %if.end99
  %95 = load double, double* %coefficient, align 8, !dbg !7256
  %96 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !7257
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %96, i32 0, i32 3, !dbg !7258
  %97 = load i16, i16* %opacity, align 2, !dbg !7258
  %conv104 = zext i16 %97 to i32, !dbg !7257
  %sub = sub nsw i32 65535, %conv104, !dbg !7259
  %conv105 = sitofp i32 %sub to double, !dbg !7260
  %mul106 = fmul double 0x3EF0001000100010, %conv105, !dbg !7261
  %98 = load double, double* %degree, align 8, !dbg !7262
  %call107 = call double @pow(double %mul106, double %98) #8, !dbg !7263
  %mul108 = fmul double %95, %call107, !dbg !7264
  %99 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %polynomial_pixel, align 8, !dbg !7265
  %100 = load i64, i64* %x, align 8, !dbg !7266
  %arrayidx109 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %99, i64 %100, !dbg !7265
  %opacity110 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx109, i32 0, i32 8, !dbg !7267
  %101 = load float, float* %opacity110, align 4, !dbg !7268
  %conv111 = fpext float %101 to double, !dbg !7268
  %add112 = fadd double %conv111, %mul108, !dbg !7268
  %conv113 = fptrunc double %add112 to float, !dbg !7268
  store float %conv113, float* %opacity110, align 4, !dbg !7268
  br label %if.end114, !dbg !7265

if.end114:                                        ; preds = %if.then103, %if.end99
  %102 = load i32, i32* %channel.addr, align 4, !dbg !7269
  %and115 = and i32 %102, 32, !dbg !7271
  %cmp116 = icmp ne i32 %and115, 0, !dbg !7272
  br i1 %cmp116, label %land.lhs.true, label %if.end131, !dbg !7273

land.lhs.true:                                    ; preds = %if.end114
  %103 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !7274
  %colorspace = getelementptr inbounds %struct._Image, %struct._Image* %103, i32 0, i32 1, !dbg !7275
  %104 = load i32, i32* %colorspace, align 4, !dbg !7275
  %cmp118 = icmp eq i32 %104, 12, !dbg !7276
  br i1 %cmp118, label %if.then120, label %if.end131, !dbg !7277

if.then120:                                       ; preds = %land.lhs.true
  %105 = load double, double* %coefficient, align 8, !dbg !7278
  %106 = load i16*, i16** %indexes, align 8, !dbg !7279
  %107 = load i64, i64* %x, align 8, !dbg !7280
  %arrayidx121 = getelementptr inbounds i16, i16* %106, i64 %107, !dbg !7279
  %108 = load i16, i16* %arrayidx121, align 2, !dbg !7279
  %conv122 = zext i16 %108 to i32, !dbg !7279
  %conv123 = sitofp i32 %conv122 to double, !dbg !7279
  %mul124 = fmul double 0x3EF0001000100010, %conv123, !dbg !7281
  %109 = load double, double* %degree, align 8, !dbg !7282
  %call125 = call double @pow(double %mul124, double %109) #8, !dbg !7283
  %mul126 = fmul double %105, %call125, !dbg !7284
  %110 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %polynomial_pixel, align 8, !dbg !7285
  %111 = load i64, i64* %x, align 8, !dbg !7286
  %arrayidx127 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %110, i64 %111, !dbg !7285
  %index = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx127, i32 0, i32 9, !dbg !7287
  %112 = load float, float* %index, align 8, !dbg !7288
  %conv128 = fpext float %112 to double, !dbg !7288
  %add129 = fadd double %conv128, %mul126, !dbg !7288
  %conv130 = fptrunc double %add129 to float, !dbg !7288
  store float %conv130, float* %index, align 8, !dbg !7288
  br label %if.end131, !dbg !7285

if.end131:                                        ; preds = %if.then120, %land.lhs.true, %if.end114
  %113 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !7289
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %113, i32 1, !dbg !7289
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %p, align 8, !dbg !7289
  br label %for.inc132, !dbg !7290

for.inc132:                                       ; preds = %if.end131
  %114 = load i64, i64* %x, align 8, !dbg !7291
  %inc133 = add nsw i64 %114, 1, !dbg !7291
  store i64 %inc133, i64* %x, align 8, !dbg !7291
  br label %for.cond52, !dbg !7292, !llvm.loop !7293

for.end134:                                       ; preds = %for.cond52
  %115 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !7295
  %call135 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %115), !dbg !7296
  store %struct._CacheView* %call135, %struct._CacheView** %image_view, align 8, !dbg !7297
  %116 = load %struct._Image*, %struct._Image** %next, align 8, !dbg !7298
  %call136 = call %struct._Image* @GetNextImageInList(%struct._Image* %116), !dbg !7299
  store %struct._Image* %call136, %struct._Image** %next, align 8, !dbg !7300
  br label %for.inc137, !dbg !7301

for.inc137:                                       ; preds = %for.end134
  %117 = load i64, i64* %i, align 8, !dbg !7302
  %inc138 = add nsw i64 %117, 1, !dbg !7302
  store i64 %inc138, i64* %i, align 8, !dbg !7302
  br label %for.cond38, !dbg !7303, !llvm.loop !7304

for.end139:                                       ; preds = %if.then48, %if.then42, %for.cond38
  store i64 0, i64* %x, align 8, !dbg !7306
  br label %for.cond140, !dbg !7308

for.cond140:                                      ; preds = %for.inc194, %for.end139
  %118 = load i64, i64* %x, align 8, !dbg !7309
  %119 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !7311
  %columns141 = getelementptr inbounds %struct._Image, %struct._Image* %119, i32 0, i32 7, !dbg !7312
  %120 = load i64, i64* %columns141, align 8, !dbg !7312
  %cmp142 = icmp slt i64 %118, %120, !dbg !7313
  br i1 %cmp142, label %for.body144, label %for.end196, !dbg !7314

for.body144:                                      ; preds = %for.cond140
  %121 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %polynomial_pixel, align 8, !dbg !7315
  %122 = load i64, i64* %x, align 8, !dbg !7315
  %arrayidx145 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %121, i64 %122, !dbg !7315
  %red146 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx145, i32 0, i32 5, !dbg !7315
  %123 = load float, float* %red146, align 8, !dbg !7315
  %mul147 = fmul float 6.553500e+04, %123, !dbg !7315
  %call148 = call zeroext i16 @ClampToQuantum(float %mul147), !dbg !7315
  %124 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7315
  %red149 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %124, i32 0, i32 2, !dbg !7315
  store i16 %call148, i16* %red149, align 2, !dbg !7315
  %125 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %polynomial_pixel, align 8, !dbg !7317
  %126 = load i64, i64* %x, align 8, !dbg !7317
  %arrayidx150 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %125, i64 %126, !dbg !7317
  %green151 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx150, i32 0, i32 6, !dbg !7317
  %127 = load float, float* %green151, align 4, !dbg !7317
  %mul152 = fmul float 6.553500e+04, %127, !dbg !7317
  %call153 = call zeroext i16 @ClampToQuantum(float %mul152), !dbg !7317
  %128 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7317
  %green154 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %128, i32 0, i32 1, !dbg !7317
  store i16 %call153, i16* %green154, align 2, !dbg !7317
  %129 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %polynomial_pixel, align 8, !dbg !7318
  %130 = load i64, i64* %x, align 8, !dbg !7318
  %arrayidx155 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %129, i64 %130, !dbg !7318
  %blue156 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx155, i32 0, i32 7, !dbg !7318
  %131 = load float, float* %blue156, align 8, !dbg !7318
  %mul157 = fmul float 6.553500e+04, %131, !dbg !7318
  %call158 = call zeroext i16 @ClampToQuantum(float %mul157), !dbg !7318
  %132 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7318
  %blue159 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %132, i32 0, i32 0, !dbg !7318
  store i16 %call158, i16* %blue159, align 2, !dbg !7318
  %133 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !7319
  %matte = getelementptr inbounds %struct._Image, %struct._Image* %133, i32 0, i32 6, !dbg !7321
  %134 = load i32, i32* %matte, align 8, !dbg !7321
  %cmp160 = icmp eq i32 %134, 0, !dbg !7322
  br i1 %cmp160, label %if.then162, label %if.else, !dbg !7323

if.then162:                                       ; preds = %for.body144
  %135 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %polynomial_pixel, align 8, !dbg !7324
  %136 = load i64, i64* %x, align 8, !dbg !7324
  %arrayidx163 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %135, i64 %136, !dbg !7324
  %opacity164 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx163, i32 0, i32 8, !dbg !7324
  %137 = load float, float* %opacity164, align 4, !dbg !7324
  %mul165 = fmul float 6.553500e+04, %137, !dbg !7324
  %sub166 = fsub float 6.553500e+04, %mul165, !dbg !7324
  %call167 = call zeroext i16 @ClampToQuantum(float %sub166), !dbg !7324
  %138 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7324
  %opacity168 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %138, i32 0, i32 3, !dbg !7324
  store i16 %call167, i16* %opacity168, align 2, !dbg !7324
  br label %if.end178, !dbg !7324

if.else:                                          ; preds = %for.body144
  %139 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %polynomial_pixel, align 8, !dbg !7325
  %140 = load i64, i64* %x, align 8, !dbg !7325
  %arrayidx169 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %139, i64 %140, !dbg !7325
  %opacity170 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx169, i32 0, i32 8, !dbg !7325
  %141 = load float, float* %opacity170, align 4, !dbg !7325
  %mul171 = fmul float 6.553500e+04, %141, !dbg !7325
  %sub172 = fsub float 6.553500e+04, %mul171, !dbg !7325
  %call173 = call zeroext i16 @ClampToQuantum(float %sub172), !dbg !7325
  %conv174 = zext i16 %call173 to i32, !dbg !7325
  %sub175 = sub nsw i32 65535, %conv174, !dbg !7325
  %conv176 = trunc i32 %sub175 to i16, !dbg !7325
  %142 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7325
  %opacity177 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %142, i32 0, i32 3, !dbg !7325
  store i16 %conv176, i16* %opacity177, align 2, !dbg !7325
  br label %if.end178

if.end178:                                        ; preds = %if.else, %if.then162
  %143 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !7326
  %colorspace179 = getelementptr inbounds %struct._Image, %struct._Image* %143, i32 0, i32 1, !dbg !7328
  %144 = load i32, i32* %colorspace179, align 4, !dbg !7328
  %cmp180 = icmp eq i32 %144, 12, !dbg !7329
  br i1 %cmp180, label %if.then182, label %if.end192, !dbg !7330

if.then182:                                       ; preds = %if.end178
  %145 = load i16*, i16** %polynomial_indexes, align 8, !dbg !7331
  %146 = load i64, i64* %x, align 8, !dbg !7331
  %add.ptr = getelementptr inbounds i16, i16* %145, i64 %146, !dbg !7331
  %cmp183 = icmp ne i16* %add.ptr, null, !dbg !7331
  br i1 %cmp183, label %if.then185, label %if.end191, !dbg !7334

if.then185:                                       ; preds = %if.then182
  %147 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %polynomial_pixel, align 8, !dbg !7331
  %148 = load i64, i64* %x, align 8, !dbg !7331
  %arrayidx186 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %147, i64 %148, !dbg !7331
  %index187 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %arrayidx186, i32 0, i32 9, !dbg !7331
  %149 = load float, float* %index187, align 8, !dbg !7331
  %mul188 = fmul float 6.553500e+04, %149, !dbg !7331
  %call189 = call zeroext i16 @ClampToQuantum(float %mul188), !dbg !7331
  %150 = load i16*, i16** %polynomial_indexes, align 8, !dbg !7331
  %151 = load i64, i64* %x, align 8, !dbg !7331
  %add.ptr190 = getelementptr inbounds i16, i16* %150, i64 %151, !dbg !7331
  store i16 %call189, i16* %add.ptr190, align 2, !dbg !7331
  br label %if.end191, !dbg !7331

if.end191:                                        ; preds = %if.then185, %if.then182
  br label %if.end192, !dbg !7334

if.end192:                                        ; preds = %if.end191, %if.end178
  %152 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7335
  %incdec.ptr193 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %152, i32 1, !dbg !7335
  store %struct._PixelPacket* %incdec.ptr193, %struct._PixelPacket** %q, align 8, !dbg !7335
  br label %for.inc194, !dbg !7336

for.inc194:                                       ; preds = %if.end192
  %153 = load i64, i64* %x, align 8, !dbg !7337
  %inc195 = add nsw i64 %153, 1, !dbg !7337
  store i64 %inc195, i64* %x, align 8, !dbg !7337
  br label %for.cond140, !dbg !7338, !llvm.loop !7339

for.end196:                                       ; preds = %for.cond140
  %154 = load %struct._CacheView*, %struct._CacheView** %polynomial_view, align 8, !dbg !7341
  %155 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !7343
  %call197 = call i32 @SyncCacheViewAuthenticPixels(%struct._CacheView* %154, %struct._ExceptionInfo* %155), !dbg !7344
  %cmp198 = icmp eq i32 %call197, 0, !dbg !7345
  br i1 %cmp198, label %if.then200, label %if.end201, !dbg !7346

if.then200:                                       ; preds = %for.end196
  store i32 0, i32* %status, align 4, !dbg !7347
  br label %if.end201, !dbg !7348

if.end201:                                        ; preds = %if.then200, %for.end196
  %156 = load %struct._Image*, %struct._Image** %images.addr, align 8, !dbg !7349
  %progress_monitor = getelementptr inbounds %struct._Image, %struct._Image* %156, i32 0, i32 47, !dbg !7351
  %157 = load i32 (i8*, i64, i64, i8*)*, i32 (i8*, i64, i64, i8*)** %progress_monitor, align 8, !dbg !7351
  %cmp202 = icmp ne i32 (i8*, i64, i64, i8*)* %157, null, !dbg !7352
  br i1 %cmp202, label %if.then204, label %if.end212, !dbg !7353

if.then204:                                       ; preds = %if.end201
  call void @llvm.dbg.declare(metadata i32* %proceed, metadata !7354, metadata !DIExpression()), !dbg !7356
  %158 = load %struct._Image*, %struct._Image** %images.addr, align 8, !dbg !7357
  %159 = load i64, i64* %progress, align 8, !dbg !7358
  %inc205 = add nsw i64 %159, 1, !dbg !7358
  store i64 %inc205, i64* %progress, align 8, !dbg !7358
  %160 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !7359
  %rows206 = getelementptr inbounds %struct._Image, %struct._Image* %160, i32 0, i32 8, !dbg !7360
  %161 = load i64, i64* %rows206, align 8, !dbg !7360
  %call207 = call i32 @SetImageProgress(%struct._Image* %158, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.7, i64 0, i64 0), i64 %159, i64 %161), !dbg !7361
  store i32 %call207, i32* %proceed, align 4, !dbg !7362
  %162 = load i32, i32* %proceed, align 4, !dbg !7363
  %cmp208 = icmp eq i32 %162, 0, !dbg !7365
  br i1 %cmp208, label %if.then210, label %if.end211, !dbg !7366

if.then210:                                       ; preds = %if.then204
  store i32 0, i32* %status, align 4, !dbg !7367
  br label %if.end211, !dbg !7368

if.end211:                                        ; preds = %if.then210, %if.then204
  br label %if.end212, !dbg !7369

if.end212:                                        ; preds = %if.end211, %if.end201
  br label %for.inc213, !dbg !7370

for.inc213:                                       ; preds = %if.end212, %if.then30, %if.then25
  %163 = load i64, i64* %y, align 8, !dbg !7371
  %inc214 = add nsw i64 %163, 1, !dbg !7371
  store i64 %inc214, i64* %y, align 8, !dbg !7371
  br label %for.cond, !dbg !7372, !llvm.loop !7373

for.end215:                                       ; preds = %for.cond
  %164 = load %struct._CacheView*, %struct._CacheView** %polynomial_view, align 8, !dbg !7375
  %call216 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %164), !dbg !7376
  store %struct._CacheView* %call216, %struct._CacheView** %polynomial_view, align 8, !dbg !7377
  %165 = load %struct._MagickPixelPacket**, %struct._MagickPixelPacket*** %polynomial_pixels, align 8, !dbg !7378
  %call217 = call %struct._MagickPixelPacket** @DestroyPixelThreadSet(%struct._MagickPixelPacket** %165), !dbg !7379
  store %struct._MagickPixelPacket** %call217, %struct._MagickPixelPacket*** %polynomial_pixels, align 8, !dbg !7380
  %166 = load i32, i32* %status, align 4, !dbg !7381
  %cmp218 = icmp eq i32 %166, 0, !dbg !7383
  br i1 %cmp218, label %if.then220, label %if.end222, !dbg !7384

if.then220:                                       ; preds = %for.end215
  %167 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !7385
  %call221 = call %struct._Image* @DestroyImage(%struct._Image* %167), !dbg !7386
  store %struct._Image* %call221, %struct._Image** %image, align 8, !dbg !7387
  br label %if.end222, !dbg !7388

if.end222:                                        ; preds = %if.then220, %for.end215
  %168 = load %struct._Image*, %struct._Image** %image, align 8, !dbg !7389
  store %struct._Image* %168, %struct._Image** %retval, align 8, !dbg !7390
  br label %return, !dbg !7390

return:                                           ; preds = %if.end222, %if.then14, %if.then7, %if.then3
  %169 = load %struct._Image*, %struct._Image** %retval, align 8, !dbg !7391
  ret %struct._Image* %169, !dbg !7391
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._Image* @StatisticImage(%struct._Image* %image, i32 %type, i64 %width, i64 %height, %struct._ExceptionInfo* %exception) #0 !dbg !7392 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %type.addr = alloca i32, align 4
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %statistic_image = alloca %struct._Image*, align 8
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !7397, metadata !DIExpression()), !dbg !7398
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !7399, metadata !DIExpression()), !dbg !7400
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !7401, metadata !DIExpression()), !dbg !7402
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !7403, metadata !DIExpression()), !dbg !7404
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !7405, metadata !DIExpression()), !dbg !7406
  call void @llvm.dbg.declare(metadata %struct._Image** %statistic_image, metadata !7407, metadata !DIExpression()), !dbg !7408
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7409
  %1 = load i32, i32* %type.addr, align 4, !dbg !7410
  %2 = load i64, i64* %width.addr, align 8, !dbg !7411
  %3 = load i64, i64* %height.addr, align 8, !dbg !7412
  %4 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !7413
  %call = call %struct._Image* @StatisticImageChannel(%struct._Image* %0, i32 134217719, i32 %1, i64 %2, i64 %3, %struct._ExceptionInfo* %4), !dbg !7414
  store %struct._Image* %call, %struct._Image** %statistic_image, align 8, !dbg !7415
  %5 = load %struct._Image*, %struct._Image** %statistic_image, align 8, !dbg !7416
  ret %struct._Image* %5, !dbg !7417
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct._Image* @StatisticImageChannel(%struct._Image* %image, i32 %channel, i32 %type, i64 %width, i64 %height, %struct._ExceptionInfo* %exception) #0 !dbg !7418 {
entry:
  %retval = alloca %struct._Image*, align 8
  %image.addr = alloca %struct._Image*, align 8
  %channel.addr = alloca i32, align 4
  %type.addr = alloca i32, align 4
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %exception.addr = alloca %struct._ExceptionInfo*, align 8
  %image_view = alloca %struct._CacheView*, align 8
  %statistic_view = alloca %struct._CacheView*, align 8
  %statistic_image = alloca %struct._Image*, align 8
  %status = alloca i32, align 4
  %progress = alloca i64, align 8
  %pixel_list = alloca %struct._PixelList**, align 8
  %neighbor_height = alloca i64, align 8
  %neighbor_width = alloca i64, align 8
  %y = alloca i64, align 8
  %id = alloca i32, align 4
  %indexes = alloca i16*, align 8
  %p = alloca %struct._PixelPacket*, align 8
  %statistic_indexes = alloca i16*, align 8
  %q = alloca %struct._PixelPacket*, align 8
  %x = alloca i64, align 8
  %pixel = alloca %struct._MagickPixelPacket, align 8
  %s = alloca i16*, align 8
  %r = alloca %struct._PixelPacket*, align 8
  %u = alloca i64, align 8
  %v = alloca i64, align 8
  %maximum = alloca %struct._MagickPixelPacket, align 8
  %minimum = alloca %struct._MagickPixelPacket, align 8
  %proceed = alloca i32, align 4
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !7421, metadata !DIExpression()), !dbg !7422
  store i32 %channel, i32* %channel.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %channel.addr, metadata !7423, metadata !DIExpression()), !dbg !7424
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !7425, metadata !DIExpression()), !dbg !7426
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !7427, metadata !DIExpression()), !dbg !7428
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !7429, metadata !DIExpression()), !dbg !7430
  store %struct._ExceptionInfo* %exception, %struct._ExceptionInfo** %exception.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._ExceptionInfo** %exception.addr, metadata !7431, metadata !DIExpression()), !dbg !7432
  call void @llvm.dbg.declare(metadata %struct._CacheView** %image_view, metadata !7433, metadata !DIExpression()), !dbg !7434
  call void @llvm.dbg.declare(metadata %struct._CacheView** %statistic_view, metadata !7435, metadata !DIExpression()), !dbg !7436
  call void @llvm.dbg.declare(metadata %struct._Image** %statistic_image, metadata !7437, metadata !DIExpression()), !dbg !7438
  call void @llvm.dbg.declare(metadata i32* %status, metadata !7439, metadata !DIExpression()), !dbg !7440
  call void @llvm.dbg.declare(metadata i64* %progress, metadata !7441, metadata !DIExpression()), !dbg !7442
  call void @llvm.dbg.declare(metadata %struct._PixelList*** %pixel_list, metadata !7443, metadata !DIExpression()), !dbg !7445
  call void @llvm.dbg.declare(metadata i64* %neighbor_height, metadata !7446, metadata !DIExpression()), !dbg !7447
  call void @llvm.dbg.declare(metadata i64* %neighbor_width, metadata !7448, metadata !DIExpression()), !dbg !7449
  call void @llvm.dbg.declare(metadata i64* %y, metadata !7450, metadata !DIExpression()), !dbg !7451
  %0 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7452
  %debug = getelementptr inbounds %struct._Image, %struct._Image* %0, i32 0, i32 59, !dbg !7454
  %1 = load i32, i32* %debug, align 8, !dbg !7454
  %cmp = icmp ne i32 %1, 0, !dbg !7455
  br i1 %cmp, label %if.then, label %if.end, !dbg !7456

if.then:                                          ; preds = %entry
  %2 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7457
  %filename = getelementptr inbounds %struct._Image, %struct._Image* %2, i32 0, i32 53, !dbg !7458
  %arraydecay = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename, i64 0, i64 0, !dbg !7457
  %call = call i32 (i32, i8*, i8*, i64, i8*, ...) @LogMagickEvent(i32 1, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3284, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.2, i64 0, i64 0), i8* %arraydecay), !dbg !7459
  br label %if.end, !dbg !7460

if.end:                                           ; preds = %if.then, %entry
  %3 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7461
  %4 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7462
  %columns = getelementptr inbounds %struct._Image, %struct._Image* %4, i32 0, i32 7, !dbg !7463
  %5 = load i64, i64* %columns, align 8, !dbg !7463
  %6 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7464
  %rows = getelementptr inbounds %struct._Image, %struct._Image* %6, i32 0, i32 8, !dbg !7465
  %7 = load i64, i64* %rows, align 8, !dbg !7465
  %8 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !7466
  %call1 = call %struct._Image* @CloneImage(%struct._Image* %3, i64 %5, i64 %7, i32 1, %struct._ExceptionInfo* %8), !dbg !7467
  store %struct._Image* %call1, %struct._Image** %statistic_image, align 8, !dbg !7468
  %9 = load %struct._Image*, %struct._Image** %statistic_image, align 8, !dbg !7469
  %cmp2 = icmp eq %struct._Image* %9, null, !dbg !7471
  br i1 %cmp2, label %if.then3, label %if.end4, !dbg !7472

if.then3:                                         ; preds = %if.end
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !7473
  br label %return, !dbg !7473

if.end4:                                          ; preds = %if.end
  %10 = load %struct._Image*, %struct._Image** %statistic_image, align 8, !dbg !7474
  %call5 = call i32 @SetImageStorageClass(%struct._Image* %10, i32 1), !dbg !7476
  %cmp6 = icmp eq i32 %call5, 0, !dbg !7477
  br i1 %cmp6, label %if.then7, label %if.end10, !dbg !7478

if.then7:                                         ; preds = %if.end4
  %11 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !7479
  %12 = load %struct._Image*, %struct._Image** %statistic_image, align 8, !dbg !7481
  %exception8 = getelementptr inbounds %struct._Image, %struct._Image* %12, i32 0, i32 58, !dbg !7482
  call void @InheritException(%struct._ExceptionInfo* %11, %struct._ExceptionInfo* %exception8), !dbg !7483
  %13 = load %struct._Image*, %struct._Image** %statistic_image, align 8, !dbg !7484
  %call9 = call %struct._Image* @DestroyImage(%struct._Image* %13), !dbg !7485
  store %struct._Image* %call9, %struct._Image** %statistic_image, align 8, !dbg !7486
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !7487
  br label %return, !dbg !7487

if.end10:                                         ; preds = %if.end4
  %14 = load i64, i64* %width.addr, align 8, !dbg !7488
  %cmp11 = icmp eq i64 %14, 0, !dbg !7489
  br i1 %cmp11, label %cond.true, label %cond.false, !dbg !7488

cond.true:                                        ; preds = %if.end10
  %15 = load i64, i64* %width.addr, align 8, !dbg !7490
  %conv = uitofp i64 %15 to double, !dbg !7491
  %call12 = call i64 @GetOptimalKernelWidth2D(double %conv, double 5.000000e-01), !dbg !7492
  br label %cond.end, !dbg !7488

cond.false:                                       ; preds = %if.end10
  %16 = load i64, i64* %width.addr, align 8, !dbg !7493
  br label %cond.end, !dbg !7488

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i64 [ %call12, %cond.true ], [ %16, %cond.false ], !dbg !7488
  store i64 %cond, i64* %neighbor_width, align 8, !dbg !7494
  %17 = load i64, i64* %height.addr, align 8, !dbg !7495
  %cmp13 = icmp eq i64 %17, 0, !dbg !7496
  br i1 %cmp13, label %cond.true15, label %cond.false18, !dbg !7495

cond.true15:                                      ; preds = %cond.end
  %18 = load i64, i64* %height.addr, align 8, !dbg !7497
  %conv16 = uitofp i64 %18 to double, !dbg !7498
  %call17 = call i64 @GetOptimalKernelWidth2D(double %conv16, double 5.000000e-01), !dbg !7499
  br label %cond.end19, !dbg !7495

cond.false18:                                     ; preds = %cond.end
  %19 = load i64, i64* %height.addr, align 8, !dbg !7500
  br label %cond.end19, !dbg !7495

cond.end19:                                       ; preds = %cond.false18, %cond.true15
  %cond20 = phi i64 [ %call17, %cond.true15 ], [ %19, %cond.false18 ], !dbg !7495
  store i64 %cond20, i64* %neighbor_height, align 8, !dbg !7501
  %20 = load i64, i64* %neighbor_width, align 8, !dbg !7502
  %21 = load i64, i64* %neighbor_height, align 8, !dbg !7503
  %call21 = call %struct._PixelList** @AcquirePixelListThreadSet(i64 %20, i64 %21), !dbg !7504
  store %struct._PixelList** %call21, %struct._PixelList*** %pixel_list, align 8, !dbg !7505
  %22 = load %struct._PixelList**, %struct._PixelList*** %pixel_list, align 8, !dbg !7506
  %cmp22 = icmp eq %struct._PixelList** %22, null, !dbg !7508
  br i1 %cmp22, label %if.then24, label %if.end29, !dbg !7509

if.then24:                                        ; preds = %cond.end19
  %23 = load %struct._Image*, %struct._Image** %statistic_image, align 8, !dbg !7510
  %call25 = call %struct._Image* @DestroyImage(%struct._Image* %23), !dbg !7512
  store %struct._Image* %call25, %struct._Image** %statistic_image, align 8, !dbg !7513
  %24 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !7514
  %25 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7514
  %filename26 = getelementptr inbounds %struct._Image, %struct._Image* %25, i32 0, i32 53, !dbg !7514
  %arraydecay27 = getelementptr inbounds [4096 x i8], [4096 x i8]* %filename26, i64 0, i64 0, !dbg !7514
  %call28 = call i32 (%struct._ExceptionInfo*, i8*, i8*, i64, i32, i8*, i8*, ...) @ThrowMagickException(%struct._ExceptionInfo* %24, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 3305, i32 400, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), i8* %arraydecay27), !dbg !7514
  store %struct._Image* null, %struct._Image** %retval, align 8, !dbg !7514
  br label %return, !dbg !7514

if.end29:                                         ; preds = %cond.end19
  store i32 1, i32* %status, align 4, !dbg !7516
  store i64 0, i64* %progress, align 8, !dbg !7517
  %26 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7518
  %27 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !7519
  %call30 = call %struct._CacheView* @AcquireVirtualCacheView(%struct._Image* %26, %struct._ExceptionInfo* %27), !dbg !7520
  store %struct._CacheView* %call30, %struct._CacheView** %image_view, align 8, !dbg !7521
  %28 = load %struct._Image*, %struct._Image** %statistic_image, align 8, !dbg !7522
  %29 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !7523
  %call31 = call %struct._CacheView* @AcquireAuthenticCacheView(%struct._Image* %28, %struct._ExceptionInfo* %29), !dbg !7524
  store %struct._CacheView* %call31, %struct._CacheView** %statistic_view, align 8, !dbg !7525
  store i64 0, i64* %y, align 8, !dbg !7526
  br label %for.cond, !dbg !7528

for.cond:                                         ; preds = %for.inc202, %if.end29
  %30 = load i64, i64* %y, align 8, !dbg !7529
  %31 = load %struct._Image*, %struct._Image** %statistic_image, align 8, !dbg !7531
  %rows32 = getelementptr inbounds %struct._Image, %struct._Image* %31, i32 0, i32 8, !dbg !7532
  %32 = load i64, i64* %rows32, align 8, !dbg !7532
  %cmp33 = icmp slt i64 %30, %32, !dbg !7533
  br i1 %cmp33, label %for.body, label %for.end204, !dbg !7534

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i32* %id, metadata !7535, metadata !DIExpression()), !dbg !7537
  %call35 = call i32 @GetOpenMPThreadId(), !dbg !7538
  store i32 %call35, i32* %id, align 4, !dbg !7537
  call void @llvm.dbg.declare(metadata i16** %indexes, metadata !7539, metadata !DIExpression()), !dbg !7540
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %p, metadata !7541, metadata !DIExpression()), !dbg !7542
  call void @llvm.dbg.declare(metadata i16** %statistic_indexes, metadata !7543, metadata !DIExpression()), !dbg !7544
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %q, metadata !7545, metadata !DIExpression()), !dbg !7546
  call void @llvm.dbg.declare(metadata i64* %x, metadata !7547, metadata !DIExpression()), !dbg !7548
  %33 = load i32, i32* %status, align 4, !dbg !7549
  %cmp36 = icmp eq i32 %33, 0, !dbg !7551
  br i1 %cmp36, label %if.then38, label %if.end39, !dbg !7552

if.then38:                                        ; preds = %for.body
  br label %for.inc202, !dbg !7553

if.end39:                                         ; preds = %for.body
  %34 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !7554
  %35 = load i64, i64* %neighbor_width, align 8, !dbg !7555
  %div = sdiv i64 %35, 2, !dbg !7556
  %sub = sub nsw i64 0, %div, !dbg !7557
  %36 = load i64, i64* %y, align 8, !dbg !7558
  %37 = load i64, i64* %neighbor_height, align 8, !dbg !7559
  %div40 = udiv i64 %37, 2, !dbg !7560
  %sub41 = sub nsw i64 %36, %div40, !dbg !7561
  %38 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7562
  %columns42 = getelementptr inbounds %struct._Image, %struct._Image* %38, i32 0, i32 7, !dbg !7563
  %39 = load i64, i64* %columns42, align 8, !dbg !7563
  %40 = load i64, i64* %neighbor_width, align 8, !dbg !7564
  %add = add i64 %39, %40, !dbg !7565
  %41 = load i64, i64* %neighbor_height, align 8, !dbg !7566
  %42 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !7567
  %call43 = call %struct._PixelPacket* @GetCacheViewVirtualPixels(%struct._CacheView* %34, i64 %sub, i64 %sub41, i64 %add, i64 %41, %struct._ExceptionInfo* %42), !dbg !7568
  store %struct._PixelPacket* %call43, %struct._PixelPacket** %p, align 8, !dbg !7569
  %43 = load %struct._CacheView*, %struct._CacheView** %statistic_view, align 8, !dbg !7570
  %44 = load i64, i64* %y, align 8, !dbg !7571
  %45 = load %struct._Image*, %struct._Image** %statistic_image, align 8, !dbg !7572
  %columns44 = getelementptr inbounds %struct._Image, %struct._Image* %45, i32 0, i32 7, !dbg !7573
  %46 = load i64, i64* %columns44, align 8, !dbg !7573
  %47 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !7574
  %call45 = call %struct._PixelPacket* @QueueCacheViewAuthenticPixels(%struct._CacheView* %43, i64 0, i64 %44, i64 %46, i64 1, %struct._ExceptionInfo* %47), !dbg !7575
  store %struct._PixelPacket* %call45, %struct._PixelPacket** %q, align 8, !dbg !7576
  %48 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !7577
  %cmp46 = icmp eq %struct._PixelPacket* %48, null, !dbg !7579
  br i1 %cmp46, label %if.then50, label %lor.lhs.false, !dbg !7580

lor.lhs.false:                                    ; preds = %if.end39
  %49 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7581
  %cmp48 = icmp eq %struct._PixelPacket* %49, null, !dbg !7582
  br i1 %cmp48, label %if.then50, label %if.end51, !dbg !7583

if.then50:                                        ; preds = %lor.lhs.false, %if.end39
  store i32 0, i32* %status, align 4, !dbg !7584
  br label %for.inc202, !dbg !7586

if.end51:                                         ; preds = %lor.lhs.false
  %50 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !7587
  %call52 = call i16* @GetCacheViewVirtualIndexQueue(%struct._CacheView* %50), !dbg !7588
  store i16* %call52, i16** %indexes, align 8, !dbg !7589
  %51 = load %struct._CacheView*, %struct._CacheView** %statistic_view, align 8, !dbg !7590
  %call53 = call i16* @GetCacheViewAuthenticIndexQueue(%struct._CacheView* %51), !dbg !7591
  store i16* %call53, i16** %statistic_indexes, align 8, !dbg !7592
  store i64 0, i64* %x, align 8, !dbg !7593
  br label %for.cond54, !dbg !7595

for.cond54:                                       ; preds = %for.inc183, %if.end51
  %52 = load i64, i64* %x, align 8, !dbg !7596
  %53 = load %struct._Image*, %struct._Image** %statistic_image, align 8, !dbg !7598
  %columns55 = getelementptr inbounds %struct._Image, %struct._Image* %53, i32 0, i32 7, !dbg !7599
  %54 = load i64, i64* %columns55, align 8, !dbg !7599
  %cmp56 = icmp slt i64 %52, %54, !dbg !7600
  br i1 %cmp56, label %for.body58, label %for.end185, !dbg !7601

for.body58:                                       ; preds = %for.cond54
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket* %pixel, metadata !7602, metadata !DIExpression()), !dbg !7604
  call void @llvm.dbg.declare(metadata i16** %s, metadata !7605, metadata !DIExpression()), !dbg !7606
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %r, metadata !7607, metadata !DIExpression()), !dbg !7608
  call void @llvm.dbg.declare(metadata i64* %u, metadata !7609, metadata !DIExpression()), !dbg !7610
  call void @llvm.dbg.declare(metadata i64* %v, metadata !7611, metadata !DIExpression()), !dbg !7612
  %55 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !7613
  store %struct._PixelPacket* %55, %struct._PixelPacket** %r, align 8, !dbg !7614
  %56 = load i16*, i16** %indexes, align 8, !dbg !7615
  %57 = load i64, i64* %x, align 8, !dbg !7616
  %add.ptr = getelementptr inbounds i16, i16* %56, i64 %57, !dbg !7617
  store i16* %add.ptr, i16** %s, align 8, !dbg !7618
  %58 = load %struct._PixelList**, %struct._PixelList*** %pixel_list, align 8, !dbg !7619
  %59 = load i32, i32* %id, align 4, !dbg !7620
  %idxprom = sext i32 %59 to i64, !dbg !7619
  %arrayidx = getelementptr inbounds %struct._PixelList*, %struct._PixelList** %58, i64 %idxprom, !dbg !7619
  %60 = load %struct._PixelList*, %struct._PixelList** %arrayidx, align 8, !dbg !7619
  call void @ResetPixelList(%struct._PixelList* %60), !dbg !7621
  store i64 0, i64* %v, align 8, !dbg !7622
  br label %for.cond59, !dbg !7624

for.cond59:                                       ; preds = %for.inc77, %for.body58
  %61 = load i64, i64* %v, align 8, !dbg !7625
  %62 = load i64, i64* %neighbor_height, align 8, !dbg !7627
  %cmp60 = icmp slt i64 %61, %62, !dbg !7628
  br i1 %cmp60, label %for.body62, label %for.end79, !dbg !7629

for.body62:                                       ; preds = %for.cond59
  store i64 0, i64* %u, align 8, !dbg !7630
  br label %for.cond63, !dbg !7633

for.cond63:                                       ; preds = %for.inc, %for.body62
  %63 = load i64, i64* %u, align 8, !dbg !7634
  %64 = load i64, i64* %neighbor_width, align 8, !dbg !7636
  %cmp64 = icmp slt i64 %63, %64, !dbg !7637
  br i1 %cmp64, label %for.body66, label %for.end, !dbg !7638

for.body66:                                       ; preds = %for.cond63
  %65 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7639
  %66 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !7640
  %67 = load i64, i64* %u, align 8, !dbg !7641
  %add.ptr67 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %66, i64 %67, !dbg !7642
  %68 = load i16*, i16** %s, align 8, !dbg !7643
  %69 = load i64, i64* %u, align 8, !dbg !7644
  %add.ptr68 = getelementptr inbounds i16, i16* %68, i64 %69, !dbg !7645
  %70 = load %struct._PixelList**, %struct._PixelList*** %pixel_list, align 8, !dbg !7646
  %71 = load i32, i32* %id, align 4, !dbg !7647
  %idxprom69 = sext i32 %71 to i64, !dbg !7646
  %arrayidx70 = getelementptr inbounds %struct._PixelList*, %struct._PixelList** %70, i64 %idxprom69, !dbg !7646
  %72 = load %struct._PixelList*, %struct._PixelList** %arrayidx70, align 8, !dbg !7646
  call void @InsertPixelList(%struct._Image* %65, %struct._PixelPacket* %add.ptr67, i16* %add.ptr68, %struct._PixelList* %72), !dbg !7648
  br label %for.inc, !dbg !7648

for.inc:                                          ; preds = %for.body66
  %73 = load i64, i64* %u, align 8, !dbg !7649
  %inc = add nsw i64 %73, 1, !dbg !7649
  store i64 %inc, i64* %u, align 8, !dbg !7649
  br label %for.cond63, !dbg !7650, !llvm.loop !7651

for.end:                                          ; preds = %for.cond63
  %74 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7653
  %columns71 = getelementptr inbounds %struct._Image, %struct._Image* %74, i32 0, i32 7, !dbg !7654
  %75 = load i64, i64* %columns71, align 8, !dbg !7654
  %76 = load i64, i64* %neighbor_width, align 8, !dbg !7655
  %add72 = add i64 %75, %76, !dbg !7656
  %77 = load %struct._PixelPacket*, %struct._PixelPacket** %r, align 8, !dbg !7657
  %add.ptr73 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %77, i64 %add72, !dbg !7657
  store %struct._PixelPacket* %add.ptr73, %struct._PixelPacket** %r, align 8, !dbg !7657
  %78 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7658
  %columns74 = getelementptr inbounds %struct._Image, %struct._Image* %78, i32 0, i32 7, !dbg !7659
  %79 = load i64, i64* %columns74, align 8, !dbg !7659
  %80 = load i64, i64* %neighbor_width, align 8, !dbg !7660
  %add75 = add i64 %79, %80, !dbg !7661
  %81 = load i16*, i16** %s, align 8, !dbg !7662
  %add.ptr76 = getelementptr inbounds i16, i16* %81, i64 %add75, !dbg !7662
  store i16* %add.ptr76, i16** %s, align 8, !dbg !7662
  br label %for.inc77, !dbg !7663

for.inc77:                                        ; preds = %for.end
  %82 = load i64, i64* %v, align 8, !dbg !7664
  %inc78 = add nsw i64 %82, 1, !dbg !7664
  store i64 %inc78, i64* %v, align 8, !dbg !7664
  br label %for.cond59, !dbg !7665, !llvm.loop !7666

for.end79:                                        ; preds = %for.cond59
  %83 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7668
  call void @GetMagickPixelPacket(%struct._Image* %83, %struct._MagickPixelPacket* %pixel), !dbg !7669
  %84 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7670
  %85 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !7671
  %86 = load i64, i64* %neighbor_width, align 8, !dbg !7672
  %87 = load i64, i64* %neighbor_height, align 8, !dbg !7673
  %mul = mul i64 %86, %87, !dbg !7674
  %div80 = udiv i64 %mul, 2, !dbg !7675
  %add.ptr81 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %85, i64 %div80, !dbg !7676
  %88 = load i16*, i16** %indexes, align 8, !dbg !7677
  %89 = load i64, i64* %x, align 8, !dbg !7678
  %add.ptr82 = getelementptr inbounds i16, i16* %88, i64 %89, !dbg !7679
  %90 = load i64, i64* %neighbor_width, align 8, !dbg !7680
  %91 = load i64, i64* %neighbor_height, align 8, !dbg !7681
  %mul83 = mul i64 %90, %91, !dbg !7682
  %div84 = udiv i64 %mul83, 2, !dbg !7683
  %add.ptr85 = getelementptr inbounds i16, i16* %add.ptr82, i64 %div84, !dbg !7684
  call void @SetMagickPixelPacket(%struct._Image* %84, %struct._PixelPacket* %add.ptr81, i16* %add.ptr85, %struct._MagickPixelPacket* %pixel), !dbg !7685
  %92 = load i32, i32* %type.addr, align 4, !dbg !7686
  switch i32 %92, label %sw.default [
    i32 1, label %sw.bb
    i32 2, label %sw.bb114
    i32 3, label %sw.bb117
    i32 4, label %sw.bb120
    i32 5, label %sw.bb123
    i32 6, label %sw.bb126
    i32 7, label %sw.bb129
    i32 8, label %sw.bb132
  ], !dbg !7687

sw.bb:                                            ; preds = %for.end79
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket* %maximum, metadata !7688, metadata !DIExpression()), !dbg !7691
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket* %minimum, metadata !7692, metadata !DIExpression()), !dbg !7693
  %93 = load %struct._PixelList**, %struct._PixelList*** %pixel_list, align 8, !dbg !7694
  %94 = load i32, i32* %id, align 4, !dbg !7695
  %idxprom86 = sext i32 %94 to i64, !dbg !7694
  %arrayidx87 = getelementptr inbounds %struct._PixelList*, %struct._PixelList** %93, i64 %idxprom86, !dbg !7694
  %95 = load %struct._PixelList*, %struct._PixelList** %arrayidx87, align 8, !dbg !7694
  call void @GetMinimumPixelList(%struct._PixelList* %95, %struct._MagickPixelPacket* %pixel), !dbg !7696
  %96 = bitcast %struct._MagickPixelPacket* %minimum to i8*, !dbg !7697
  %97 = bitcast %struct._MagickPixelPacket* %pixel to i8*, !dbg !7697
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %96, i8* align 8 %97, i64 56, i1 false), !dbg !7697
  %98 = load %struct._PixelList**, %struct._PixelList*** %pixel_list, align 8, !dbg !7698
  %99 = load i32, i32* %id, align 4, !dbg !7699
  %idxprom88 = sext i32 %99 to i64, !dbg !7698
  %arrayidx89 = getelementptr inbounds %struct._PixelList*, %struct._PixelList** %98, i64 %idxprom88, !dbg !7698
  %100 = load %struct._PixelList*, %struct._PixelList** %arrayidx89, align 8, !dbg !7698
  call void @GetMaximumPixelList(%struct._PixelList* %100, %struct._MagickPixelPacket* %pixel), !dbg !7700
  %101 = bitcast %struct._MagickPixelPacket* %maximum to i8*, !dbg !7701
  %102 = bitcast %struct._MagickPixelPacket* %pixel to i8*, !dbg !7701
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %101, i8* align 8 %102, i64 56, i1 false), !dbg !7701
  %red = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %maximum, i32 0, i32 5, !dbg !7702
  %103 = load float, float* %red, align 8, !dbg !7702
  %red90 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %minimum, i32 0, i32 5, !dbg !7703
  %104 = load float, float* %red90, align 8, !dbg !7703
  %sub91 = fsub float %103, %104, !dbg !7704
  %call92 = call float @MagickAbsoluteValue(float %sub91), !dbg !7705
  %red93 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 5, !dbg !7706
  store float %call92, float* %red93, align 8, !dbg !7707
  %green = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %maximum, i32 0, i32 6, !dbg !7708
  %105 = load float, float* %green, align 4, !dbg !7708
  %green94 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %minimum, i32 0, i32 6, !dbg !7709
  %106 = load float, float* %green94, align 4, !dbg !7709
  %sub95 = fsub float %105, %106, !dbg !7710
  %call96 = call float @MagickAbsoluteValue(float %sub95), !dbg !7711
  %green97 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 6, !dbg !7712
  store float %call96, float* %green97, align 4, !dbg !7713
  %blue = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %maximum, i32 0, i32 7, !dbg !7714
  %107 = load float, float* %blue, align 8, !dbg !7714
  %blue98 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %minimum, i32 0, i32 7, !dbg !7715
  %108 = load float, float* %blue98, align 8, !dbg !7715
  %sub99 = fsub float %107, %108, !dbg !7716
  %call100 = call float @MagickAbsoluteValue(float %sub99), !dbg !7717
  %blue101 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 7, !dbg !7718
  store float %call100, float* %blue101, align 8, !dbg !7719
  %opacity = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %maximum, i32 0, i32 8, !dbg !7720
  %109 = load float, float* %opacity, align 4, !dbg !7720
  %opacity102 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %minimum, i32 0, i32 8, !dbg !7721
  %110 = load float, float* %opacity102, align 4, !dbg !7721
  %sub103 = fsub float %109, %110, !dbg !7722
  %call104 = call float @MagickAbsoluteValue(float %sub103), !dbg !7723
  %opacity105 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 8, !dbg !7724
  store float %call104, float* %opacity105, align 4, !dbg !7725
  %111 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7726
  %colorspace = getelementptr inbounds %struct._Image, %struct._Image* %111, i32 0, i32 1, !dbg !7728
  %112 = load i32, i32* %colorspace, align 4, !dbg !7728
  %cmp106 = icmp eq i32 %112, 12, !dbg !7729
  br i1 %cmp106, label %if.then108, label %if.end113, !dbg !7730

if.then108:                                       ; preds = %sw.bb
  %index = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %maximum, i32 0, i32 9, !dbg !7731
  %113 = load float, float* %index, align 8, !dbg !7731
  %index109 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %minimum, i32 0, i32 9, !dbg !7732
  %114 = load float, float* %index109, align 8, !dbg !7732
  %sub110 = fsub float %113, %114, !dbg !7733
  %call111 = call float @MagickAbsoluteValue(float %sub110), !dbg !7734
  %index112 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 9, !dbg !7735
  store float %call111, float* %index112, align 8, !dbg !7736
  br label %if.end113, !dbg !7737

if.end113:                                        ; preds = %if.then108, %sw.bb
  br label %sw.epilog, !dbg !7738

sw.bb114:                                         ; preds = %for.end79
  %115 = load %struct._PixelList**, %struct._PixelList*** %pixel_list, align 8, !dbg !7739
  %116 = load i32, i32* %id, align 4, !dbg !7741
  %idxprom115 = sext i32 %116 to i64, !dbg !7739
  %arrayidx116 = getelementptr inbounds %struct._PixelList*, %struct._PixelList** %115, i64 %idxprom115, !dbg !7739
  %117 = load %struct._PixelList*, %struct._PixelList** %arrayidx116, align 8, !dbg !7739
  call void @GetMaximumPixelList(%struct._PixelList* %117, %struct._MagickPixelPacket* %pixel), !dbg !7742
  br label %sw.epilog, !dbg !7743

sw.bb117:                                         ; preds = %for.end79
  %118 = load %struct._PixelList**, %struct._PixelList*** %pixel_list, align 8, !dbg !7744
  %119 = load i32, i32* %id, align 4, !dbg !7746
  %idxprom118 = sext i32 %119 to i64, !dbg !7744
  %arrayidx119 = getelementptr inbounds %struct._PixelList*, %struct._PixelList** %118, i64 %idxprom118, !dbg !7744
  %120 = load %struct._PixelList*, %struct._PixelList** %arrayidx119, align 8, !dbg !7744
  call void @GetMeanPixelList(%struct._PixelList* %120, %struct._MagickPixelPacket* %pixel), !dbg !7747
  br label %sw.epilog, !dbg !7748

sw.bb120:                                         ; preds = %for.end79
  br label %sw.default, !dbg !7749

sw.default:                                       ; preds = %for.end79, %sw.bb120
  %121 = load %struct._PixelList**, %struct._PixelList*** %pixel_list, align 8, !dbg !7750
  %122 = load i32, i32* %id, align 4, !dbg !7752
  %idxprom121 = sext i32 %122 to i64, !dbg !7750
  %arrayidx122 = getelementptr inbounds %struct._PixelList*, %struct._PixelList** %121, i64 %idxprom121, !dbg !7750
  %123 = load %struct._PixelList*, %struct._PixelList** %arrayidx122, align 8, !dbg !7750
  call void @GetMedianPixelList(%struct._PixelList* %123, %struct._MagickPixelPacket* %pixel), !dbg !7753
  br label %sw.epilog, !dbg !7754

sw.bb123:                                         ; preds = %for.end79
  %124 = load %struct._PixelList**, %struct._PixelList*** %pixel_list, align 8, !dbg !7755
  %125 = load i32, i32* %id, align 4, !dbg !7757
  %idxprom124 = sext i32 %125 to i64, !dbg !7755
  %arrayidx125 = getelementptr inbounds %struct._PixelList*, %struct._PixelList** %124, i64 %idxprom124, !dbg !7755
  %126 = load %struct._PixelList*, %struct._PixelList** %arrayidx125, align 8, !dbg !7755
  call void @GetMinimumPixelList(%struct._PixelList* %126, %struct._MagickPixelPacket* %pixel), !dbg !7758
  br label %sw.epilog, !dbg !7759

sw.bb126:                                         ; preds = %for.end79
  %127 = load %struct._PixelList**, %struct._PixelList*** %pixel_list, align 8, !dbg !7760
  %128 = load i32, i32* %id, align 4, !dbg !7762
  %idxprom127 = sext i32 %128 to i64, !dbg !7760
  %arrayidx128 = getelementptr inbounds %struct._PixelList*, %struct._PixelList** %127, i64 %idxprom127, !dbg !7760
  %129 = load %struct._PixelList*, %struct._PixelList** %arrayidx128, align 8, !dbg !7760
  call void @GetModePixelList(%struct._PixelList* %129, %struct._MagickPixelPacket* %pixel), !dbg !7763
  br label %sw.epilog, !dbg !7764

sw.bb129:                                         ; preds = %for.end79
  %130 = load %struct._PixelList**, %struct._PixelList*** %pixel_list, align 8, !dbg !7765
  %131 = load i32, i32* %id, align 4, !dbg !7767
  %idxprom130 = sext i32 %131 to i64, !dbg !7765
  %arrayidx131 = getelementptr inbounds %struct._PixelList*, %struct._PixelList** %130, i64 %idxprom130, !dbg !7765
  %132 = load %struct._PixelList*, %struct._PixelList** %arrayidx131, align 8, !dbg !7765
  call void @GetNonpeakPixelList(%struct._PixelList* %132, %struct._MagickPixelPacket* %pixel), !dbg !7768
  br label %sw.epilog, !dbg !7769

sw.bb132:                                         ; preds = %for.end79
  %133 = load %struct._PixelList**, %struct._PixelList*** %pixel_list, align 8, !dbg !7770
  %134 = load i32, i32* %id, align 4, !dbg !7772
  %idxprom133 = sext i32 %134 to i64, !dbg !7770
  %arrayidx134 = getelementptr inbounds %struct._PixelList*, %struct._PixelList** %133, i64 %idxprom133, !dbg !7770
  %135 = load %struct._PixelList*, %struct._PixelList** %arrayidx134, align 8, !dbg !7770
  call void @GetStandardDeviationPixelList(%struct._PixelList* %135, %struct._MagickPixelPacket* %pixel), !dbg !7773
  br label %sw.epilog, !dbg !7774

sw.epilog:                                        ; preds = %sw.bb132, %sw.bb129, %sw.bb126, %sw.bb123, %sw.default, %sw.bb117, %sw.bb114, %if.end113
  %136 = load i32, i32* %channel.addr, align 4, !dbg !7775
  %and = and i32 %136, 1, !dbg !7777
  %cmp135 = icmp ne i32 %and, 0, !dbg !7778
  br i1 %cmp135, label %if.then137, label %if.end141, !dbg !7779

if.then137:                                       ; preds = %sw.epilog
  %red138 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 5, !dbg !7780
  %137 = load float, float* %red138, align 8, !dbg !7780
  %call139 = call zeroext i16 @ClampToQuantum(float %137), !dbg !7780
  %138 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7780
  %red140 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %138, i32 0, i32 2, !dbg !7780
  store i16 %call139, i16* %red140, align 2, !dbg !7780
  br label %if.end141, !dbg !7780

if.end141:                                        ; preds = %if.then137, %sw.epilog
  %139 = load i32, i32* %channel.addr, align 4, !dbg !7781
  %and142 = and i32 %139, 2, !dbg !7783
  %cmp143 = icmp ne i32 %and142, 0, !dbg !7784
  br i1 %cmp143, label %if.then145, label %if.end149, !dbg !7785

if.then145:                                       ; preds = %if.end141
  %green146 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 6, !dbg !7786
  %140 = load float, float* %green146, align 4, !dbg !7786
  %call147 = call zeroext i16 @ClampToQuantum(float %140), !dbg !7786
  %141 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7786
  %green148 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %141, i32 0, i32 1, !dbg !7786
  store i16 %call147, i16* %green148, align 2, !dbg !7786
  br label %if.end149, !dbg !7786

if.end149:                                        ; preds = %if.then145, %if.end141
  %142 = load i32, i32* %channel.addr, align 4, !dbg !7787
  %and150 = and i32 %142, 4, !dbg !7789
  %cmp151 = icmp ne i32 %and150, 0, !dbg !7790
  br i1 %cmp151, label %if.then153, label %if.end157, !dbg !7791

if.then153:                                       ; preds = %if.end149
  %blue154 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 7, !dbg !7792
  %143 = load float, float* %blue154, align 8, !dbg !7792
  %call155 = call zeroext i16 @ClampToQuantum(float %143), !dbg !7792
  %144 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7792
  %blue156 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %144, i32 0, i32 0, !dbg !7792
  store i16 %call155, i16* %blue156, align 2, !dbg !7792
  br label %if.end157, !dbg !7792

if.end157:                                        ; preds = %if.then153, %if.end149
  %145 = load i32, i32* %channel.addr, align 4, !dbg !7793
  %and158 = and i32 %145, 8, !dbg !7795
  %cmp159 = icmp ne i32 %and158, 0, !dbg !7796
  br i1 %cmp159, label %if.then161, label %if.end165, !dbg !7797

if.then161:                                       ; preds = %if.end157
  %opacity162 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 8, !dbg !7798
  %146 = load float, float* %opacity162, align 4, !dbg !7798
  %call163 = call zeroext i16 @ClampToQuantum(float %146), !dbg !7798
  %147 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7798
  %opacity164 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %147, i32 0, i32 3, !dbg !7798
  store i16 %call163, i16* %opacity164, align 2, !dbg !7798
  br label %if.end165, !dbg !7798

if.end165:                                        ; preds = %if.then161, %if.end157
  %148 = load i32, i32* %channel.addr, align 4, !dbg !7799
  %and166 = and i32 %148, 32, !dbg !7801
  %cmp167 = icmp ne i32 %and166, 0, !dbg !7802
  br i1 %cmp167, label %land.lhs.true, label %if.end181, !dbg !7803

land.lhs.true:                                    ; preds = %if.end165
  %149 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7804
  %colorspace169 = getelementptr inbounds %struct._Image, %struct._Image* %149, i32 0, i32 1, !dbg !7805
  %150 = load i32, i32* %colorspace169, align 4, !dbg !7805
  %cmp170 = icmp eq i32 %150, 12, !dbg !7806
  br i1 %cmp170, label %if.then172, label %if.end181, !dbg !7807

if.then172:                                       ; preds = %land.lhs.true
  %151 = load i16*, i16** %statistic_indexes, align 8, !dbg !7808
  %152 = load i64, i64* %x, align 8, !dbg !7808
  %add.ptr173 = getelementptr inbounds i16, i16* %151, i64 %152, !dbg !7808
  %cmp174 = icmp ne i16* %add.ptr173, null, !dbg !7808
  br i1 %cmp174, label %if.then176, label %if.end180, !dbg !7811

if.then176:                                       ; preds = %if.then172
  %index177 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %pixel, i32 0, i32 9, !dbg !7808
  %153 = load float, float* %index177, align 8, !dbg !7808
  %call178 = call zeroext i16 @ClampToQuantum(float %153), !dbg !7808
  %154 = load i16*, i16** %statistic_indexes, align 8, !dbg !7808
  %155 = load i64, i64* %x, align 8, !dbg !7808
  %add.ptr179 = getelementptr inbounds i16, i16* %154, i64 %155, !dbg !7808
  store i16 %call178, i16* %add.ptr179, align 2, !dbg !7808
  br label %if.end180, !dbg !7808

if.end180:                                        ; preds = %if.then176, %if.then172
  br label %if.end181, !dbg !7811

if.end181:                                        ; preds = %if.end180, %land.lhs.true, %if.end165
  %156 = load %struct._PixelPacket*, %struct._PixelPacket** %p, align 8, !dbg !7812
  %incdec.ptr = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %156, i32 1, !dbg !7812
  store %struct._PixelPacket* %incdec.ptr, %struct._PixelPacket** %p, align 8, !dbg !7812
  %157 = load %struct._PixelPacket*, %struct._PixelPacket** %q, align 8, !dbg !7813
  %incdec.ptr182 = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %157, i32 1, !dbg !7813
  store %struct._PixelPacket* %incdec.ptr182, %struct._PixelPacket** %q, align 8, !dbg !7813
  br label %for.inc183, !dbg !7814

for.inc183:                                       ; preds = %if.end181
  %158 = load i64, i64* %x, align 8, !dbg !7815
  %inc184 = add nsw i64 %158, 1, !dbg !7815
  store i64 %inc184, i64* %x, align 8, !dbg !7815
  br label %for.cond54, !dbg !7816, !llvm.loop !7817

for.end185:                                       ; preds = %for.cond54
  %159 = load %struct._CacheView*, %struct._CacheView** %statistic_view, align 8, !dbg !7819
  %160 = load %struct._ExceptionInfo*, %struct._ExceptionInfo** %exception.addr, align 8, !dbg !7821
  %call186 = call i32 @SyncCacheViewAuthenticPixels(%struct._CacheView* %159, %struct._ExceptionInfo* %160), !dbg !7822
  %cmp187 = icmp eq i32 %call186, 0, !dbg !7823
  br i1 %cmp187, label %if.then189, label %if.end190, !dbg !7824

if.then189:                                       ; preds = %for.end185
  store i32 0, i32* %status, align 4, !dbg !7825
  br label %if.end190, !dbg !7826

if.end190:                                        ; preds = %if.then189, %for.end185
  %161 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7827
  %progress_monitor = getelementptr inbounds %struct._Image, %struct._Image* %161, i32 0, i32 47, !dbg !7829
  %162 = load i32 (i8*, i64, i64, i8*)*, i32 (i8*, i64, i64, i8*)** %progress_monitor, align 8, !dbg !7829
  %cmp191 = icmp ne i32 (i8*, i64, i64, i8*)* %162, null, !dbg !7830
  br i1 %cmp191, label %if.then193, label %if.end201, !dbg !7831

if.then193:                                       ; preds = %if.end190
  call void @llvm.dbg.declare(metadata i32* %proceed, metadata !7832, metadata !DIExpression()), !dbg !7834
  %163 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7835
  %164 = load i64, i64* %progress, align 8, !dbg !7836
  %inc194 = add nsw i64 %164, 1, !dbg !7836
  store i64 %inc194, i64* %progress, align 8, !dbg !7836
  %165 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !7837
  %rows195 = getelementptr inbounds %struct._Image, %struct._Image* %165, i32 0, i32 8, !dbg !7838
  %166 = load i64, i64* %rows195, align 8, !dbg !7838
  %call196 = call i32 @SetImageProgress(%struct._Image* %163, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.8, i64 0, i64 0), i64 %164, i64 %166), !dbg !7839
  store i32 %call196, i32* %proceed, align 4, !dbg !7840
  %167 = load i32, i32* %proceed, align 4, !dbg !7841
  %cmp197 = icmp eq i32 %167, 0, !dbg !7843
  br i1 %cmp197, label %if.then199, label %if.end200, !dbg !7844

if.then199:                                       ; preds = %if.then193
  store i32 0, i32* %status, align 4, !dbg !7845
  br label %if.end200, !dbg !7846

if.end200:                                        ; preds = %if.then199, %if.then193
  br label %if.end201, !dbg !7847

if.end201:                                        ; preds = %if.end200, %if.end190
  br label %for.inc202, !dbg !7848

for.inc202:                                       ; preds = %if.end201, %if.then50, %if.then38
  %168 = load i64, i64* %y, align 8, !dbg !7849
  %inc203 = add nsw i64 %168, 1, !dbg !7849
  store i64 %inc203, i64* %y, align 8, !dbg !7849
  br label %for.cond, !dbg !7850, !llvm.loop !7851

for.end204:                                       ; preds = %for.cond
  %169 = load %struct._CacheView*, %struct._CacheView** %statistic_view, align 8, !dbg !7853
  %call205 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %169), !dbg !7854
  store %struct._CacheView* %call205, %struct._CacheView** %statistic_view, align 8, !dbg !7855
  %170 = load %struct._CacheView*, %struct._CacheView** %image_view, align 8, !dbg !7856
  %call206 = call %struct._CacheView* @DestroyCacheView(%struct._CacheView* %170), !dbg !7857
  store %struct._CacheView* %call206, %struct._CacheView** %image_view, align 8, !dbg !7858
  %171 = load %struct._PixelList**, %struct._PixelList*** %pixel_list, align 8, !dbg !7859
  %call207 = call %struct._PixelList** @DestroyPixelListThreadSet(%struct._PixelList** %171), !dbg !7860
  store %struct._PixelList** %call207, %struct._PixelList*** %pixel_list, align 8, !dbg !7861
  %172 = load i32, i32* %status, align 4, !dbg !7862
  %cmp208 = icmp eq i32 %172, 0, !dbg !7864
  br i1 %cmp208, label %if.then210, label %if.end212, !dbg !7865

if.then210:                                       ; preds = %for.end204
  %173 = load %struct._Image*, %struct._Image** %statistic_image, align 8, !dbg !7866
  %call211 = call %struct._Image* @DestroyImage(%struct._Image* %173), !dbg !7867
  store %struct._Image* %call211, %struct._Image** %statistic_image, align 8, !dbg !7868
  br label %if.end212, !dbg !7869

if.end212:                                        ; preds = %if.then210, %for.end204
  %174 = load %struct._Image*, %struct._Image** %statistic_image, align 8, !dbg !7870
  store %struct._Image* %174, %struct._Image** %retval, align 8, !dbg !7871
  br label %return, !dbg !7871

return:                                           ; preds = %if.end212, %if.then24, %if.then7, %if.then3
  %175 = load %struct._Image*, %struct._Image** %retval, align 8, !dbg !7872
  ret %struct._Image* %175, !dbg !7872
}

declare dso_local i64 @GetOptimalKernelWidth2D(double, double) #2

; Function Attrs: noinline nounwind uwtable
define internal %struct._PixelList** @AcquirePixelListThreadSet(i64 %width, i64 %height) #0 !dbg !7873 {
entry:
  %retval = alloca %struct._PixelList**, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %pixel_list = alloca %struct._PixelList**, align 8
  %i = alloca i64, align 8
  %number_threads = alloca i64, align 8
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !7876, metadata !DIExpression()), !dbg !7877
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !7878, metadata !DIExpression()), !dbg !7879
  call void @llvm.dbg.declare(metadata %struct._PixelList*** %pixel_list, metadata !7880, metadata !DIExpression()), !dbg !7881
  call void @llvm.dbg.declare(metadata i64* %i, metadata !7882, metadata !DIExpression()), !dbg !7883
  call void @llvm.dbg.declare(metadata i64* %number_threads, metadata !7884, metadata !DIExpression()), !dbg !7885
  %call = call i64 @GetMagickResourceLimit(i32 6), !dbg !7886
  store i64 %call, i64* %number_threads, align 8, !dbg !7887
  %0 = load i64, i64* %number_threads, align 8, !dbg !7888
  %call1 = call i8* @AcquireQuantumMemory(i64 %0, i64 8) #7, !dbg !7889
  %1 = bitcast i8* %call1 to %struct._PixelList**, !dbg !7890
  store %struct._PixelList** %1, %struct._PixelList*** %pixel_list, align 8, !dbg !7891
  %2 = load %struct._PixelList**, %struct._PixelList*** %pixel_list, align 8, !dbg !7892
  %cmp = icmp eq %struct._PixelList** %2, null, !dbg !7894
  br i1 %cmp, label %if.then, label %if.end, !dbg !7895

if.then:                                          ; preds = %entry
  store %struct._PixelList** null, %struct._PixelList*** %retval, align 8, !dbg !7896
  br label %return, !dbg !7896

if.end:                                           ; preds = %entry
  %3 = load %struct._PixelList**, %struct._PixelList*** %pixel_list, align 8, !dbg !7897
  %4 = bitcast %struct._PixelList** %3 to i8*, !dbg !7897
  %5 = load i64, i64* %number_threads, align 8, !dbg !7898
  %mul = mul i64 %5, 8, !dbg !7899
  %call2 = call i8* @ResetMagickMemory(i8* %4, i32 0, i64 %mul), !dbg !7900
  store i64 0, i64* %i, align 8, !dbg !7901
  br label %for.cond, !dbg !7903

for.cond:                                         ; preds = %for.inc, %if.end
  %6 = load i64, i64* %i, align 8, !dbg !7904
  %7 = load i64, i64* %number_threads, align 8, !dbg !7906
  %cmp3 = icmp slt i64 %6, %7, !dbg !7907
  br i1 %cmp3, label %for.body, label %for.end, !dbg !7908

for.body:                                         ; preds = %for.cond
  %8 = load i64, i64* %width.addr, align 8, !dbg !7909
  %9 = load i64, i64* %height.addr, align 8, !dbg !7911
  %call4 = call %struct._PixelList* @AcquirePixelList(i64 %8, i64 %9), !dbg !7912
  %10 = load %struct._PixelList**, %struct._PixelList*** %pixel_list, align 8, !dbg !7913
  %11 = load i64, i64* %i, align 8, !dbg !7914
  %arrayidx = getelementptr inbounds %struct._PixelList*, %struct._PixelList** %10, i64 %11, !dbg !7913
  store %struct._PixelList* %call4, %struct._PixelList** %arrayidx, align 8, !dbg !7915
  %12 = load %struct._PixelList**, %struct._PixelList*** %pixel_list, align 8, !dbg !7916
  %13 = load i64, i64* %i, align 8, !dbg !7918
  %arrayidx5 = getelementptr inbounds %struct._PixelList*, %struct._PixelList** %12, i64 %13, !dbg !7916
  %14 = load %struct._PixelList*, %struct._PixelList** %arrayidx5, align 8, !dbg !7916
  %cmp6 = icmp eq %struct._PixelList* %14, null, !dbg !7919
  br i1 %cmp6, label %if.then7, label %if.end9, !dbg !7920

if.then7:                                         ; preds = %for.body
  %15 = load %struct._PixelList**, %struct._PixelList*** %pixel_list, align 8, !dbg !7921
  %call8 = call %struct._PixelList** @DestroyPixelListThreadSet(%struct._PixelList** %15), !dbg !7922
  store %struct._PixelList** %call8, %struct._PixelList*** %retval, align 8, !dbg !7923
  br label %return, !dbg !7923

if.end9:                                          ; preds = %for.body
  br label %for.inc, !dbg !7924

for.inc:                                          ; preds = %if.end9
  %16 = load i64, i64* %i, align 8, !dbg !7925
  %inc = add nsw i64 %16, 1, !dbg !7925
  store i64 %inc, i64* %i, align 8, !dbg !7925
  br label %for.cond, !dbg !7926, !llvm.loop !7927

for.end:                                          ; preds = %for.cond
  %17 = load %struct._PixelList**, %struct._PixelList*** %pixel_list, align 8, !dbg !7929
  store %struct._PixelList** %17, %struct._PixelList*** %retval, align 8, !dbg !7930
  br label %return, !dbg !7930

return:                                           ; preds = %for.end, %if.then7, %if.then
  %18 = load %struct._PixelList**, %struct._PixelList*** %retval, align 8, !dbg !7931
  ret %struct._PixelList** %18, !dbg !7931
}

; Function Attrs: noinline nounwind uwtable
define internal void @ResetPixelList(%struct._PixelList* %pixel_list) #0 !dbg !7932 {
entry:
  %pixel_list.addr = alloca %struct._PixelList*, align 8
  %level = alloca i32, align 4
  %root = alloca %struct._ListNode*, align 8
  %list = alloca %struct._SkipList*, align 8
  %channel = alloca i64, align 8
  store %struct._PixelList* %pixel_list, %struct._PixelList** %pixel_list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelList** %pixel_list.addr, metadata !7935, metadata !DIExpression()), !dbg !7936
  call void @llvm.dbg.declare(metadata i32* %level, metadata !7937, metadata !DIExpression()), !dbg !7938
  call void @llvm.dbg.declare(metadata %struct._ListNode** %root, metadata !7939, metadata !DIExpression()), !dbg !7940
  call void @llvm.dbg.declare(metadata %struct._SkipList** %list, metadata !7941, metadata !DIExpression()), !dbg !7943
  call void @llvm.dbg.declare(metadata i64* %channel, metadata !7944, metadata !DIExpression()), !dbg !7945
  store i64 0, i64* %channel, align 8, !dbg !7946
  br label %for.cond, !dbg !7948

for.cond:                                         ; preds = %for.inc6, %entry
  %0 = load i64, i64* %channel, align 8, !dbg !7949
  %cmp = icmp slt i64 %0, 5, !dbg !7951
  br i1 %cmp, label %for.body, label %for.end8, !dbg !7952

for.body:                                         ; preds = %for.cond
  %1 = load %struct._PixelList*, %struct._PixelList** %pixel_list.addr, align 8, !dbg !7953
  %lists = getelementptr inbounds %struct._PixelList, %struct._PixelList* %1, i32 0, i32 3, !dbg !7955
  %arraydecay = getelementptr inbounds [5 x %struct._SkipList], [5 x %struct._SkipList]* %lists, i64 0, i64 0, !dbg !7953
  %2 = load i64, i64* %channel, align 8, !dbg !7956
  %add.ptr = getelementptr inbounds %struct._SkipList, %struct._SkipList* %arraydecay, i64 %2, !dbg !7957
  store %struct._SkipList* %add.ptr, %struct._SkipList** %list, align 8, !dbg !7958
  %3 = load %struct._SkipList*, %struct._SkipList** %list, align 8, !dbg !7959
  %nodes = getelementptr inbounds %struct._SkipList, %struct._SkipList* %3, i32 0, i32 1, !dbg !7960
  %4 = load %struct._ListNode*, %struct._ListNode** %nodes, align 8, !dbg !7960
  %add.ptr1 = getelementptr inbounds %struct._ListNode, %struct._ListNode* %4, i64 65536, !dbg !7961
  store %struct._ListNode* %add.ptr1, %struct._ListNode** %root, align 8, !dbg !7962
  %5 = load %struct._SkipList*, %struct._SkipList** %list, align 8, !dbg !7963
  %level2 = getelementptr inbounds %struct._SkipList, %struct._SkipList* %5, i32 0, i32 0, !dbg !7964
  store i64 0, i64* %level2, align 8, !dbg !7965
  store i32 0, i32* %level, align 4, !dbg !7966
  br label %for.cond3, !dbg !7968

for.cond3:                                        ; preds = %for.inc, %for.body
  %6 = load i32, i32* %level, align 4, !dbg !7969
  %cmp4 = icmp slt i32 %6, 9, !dbg !7971
  br i1 %cmp4, label %for.body5, label %for.end, !dbg !7972

for.body5:                                        ; preds = %for.cond3
  %7 = load %struct._ListNode*, %struct._ListNode** %root, align 8, !dbg !7973
  %next = getelementptr inbounds %struct._ListNode, %struct._ListNode* %7, i32 0, i32 0, !dbg !7974
  %8 = load i32, i32* %level, align 4, !dbg !7975
  %idxprom = sext i32 %8 to i64, !dbg !7973
  %arrayidx = getelementptr inbounds [9 x i64], [9 x i64]* %next, i64 0, i64 %idxprom, !dbg !7973
  store i64 65536, i64* %arrayidx, align 8, !dbg !7976
  br label %for.inc, !dbg !7973

for.inc:                                          ; preds = %for.body5
  %9 = load i32, i32* %level, align 4, !dbg !7977
  %inc = add nsw i32 %9, 1, !dbg !7977
  store i32 %inc, i32* %level, align 4, !dbg !7977
  br label %for.cond3, !dbg !7978, !llvm.loop !7979

for.end:                                          ; preds = %for.cond3
  br label %for.inc6, !dbg !7981

for.inc6:                                         ; preds = %for.end
  %10 = load i64, i64* %channel, align 8, !dbg !7982
  %inc7 = add nsw i64 %10, 1, !dbg !7982
  store i64 %inc7, i64* %channel, align 8, !dbg !7982
  br label %for.cond, !dbg !7983, !llvm.loop !7984

for.end8:                                         ; preds = %for.cond
  %11 = load %struct._PixelList*, %struct._PixelList** %pixel_list.addr, align 8, !dbg !7986
  %signature = getelementptr inbounds %struct._PixelList, %struct._PixelList* %11, i32 0, i32 2, !dbg !7987
  %12 = load i64, i64* %signature, align 8, !dbg !7988
  %inc9 = add i64 %12, 1, !dbg !7988
  store i64 %inc9, i64* %signature, align 8, !dbg !7988
  %13 = load %struct._PixelList*, %struct._PixelList** %pixel_list.addr, align 8, !dbg !7989
  %seed = getelementptr inbounds %struct._PixelList, %struct._PixelList* %13, i32 0, i32 1, !dbg !7990
  store i64 %12, i64* %seed, align 8, !dbg !7991
  ret void, !dbg !7992
}

; Function Attrs: noinline nounwind uwtable
define internal void @InsertPixelList(%struct._Image* %image, %struct._PixelPacket* %pixel, i16* %indexes, %struct._PixelList* %pixel_list) #0 !dbg !7993 {
entry:
  %image.addr = alloca %struct._Image*, align 8
  %pixel.addr = alloca %struct._PixelPacket*, align 8
  %indexes.addr = alloca i16*, align 8
  %pixel_list.addr = alloca %struct._PixelList*, align 8
  %signature = alloca i64, align 8
  %index = alloca i16, align 2
  store %struct._Image* %image, %struct._Image** %image.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._Image** %image.addr, metadata !7996, metadata !DIExpression()), !dbg !7997
  store %struct._PixelPacket* %pixel, %struct._PixelPacket** %pixel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelPacket** %pixel.addr, metadata !7998, metadata !DIExpression()), !dbg !7999
  store i16* %indexes, i16** %indexes.addr, align 8
  call void @llvm.dbg.declare(metadata i16** %indexes.addr, metadata !8000, metadata !DIExpression()), !dbg !8001
  store %struct._PixelList* %pixel_list, %struct._PixelList** %pixel_list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelList** %pixel_list.addr, metadata !8002, metadata !DIExpression()), !dbg !8003
  call void @llvm.dbg.declare(metadata i64* %signature, metadata !8004, metadata !DIExpression()), !dbg !8005
  call void @llvm.dbg.declare(metadata i16* %index, metadata !8006, metadata !DIExpression()), !dbg !8007
  %0 = load %struct._PixelPacket*, %struct._PixelPacket** %pixel.addr, align 8, !dbg !8008
  %red = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %0, i32 0, i32 2, !dbg !8008
  %1 = load i16, i16* %red, align 2, !dbg !8008
  %call = call zeroext i16 @ScaleQuantumToShort(i16 zeroext %1), !dbg !8009
  store i16 %call, i16* %index, align 2, !dbg !8010
  %2 = load %struct._PixelList*, %struct._PixelList** %pixel_list.addr, align 8, !dbg !8011
  %lists = getelementptr inbounds %struct._PixelList, %struct._PixelList* %2, i32 0, i32 3, !dbg !8012
  %arrayidx = getelementptr inbounds [5 x %struct._SkipList], [5 x %struct._SkipList]* %lists, i64 0, i64 0, !dbg !8011
  %nodes = getelementptr inbounds %struct._SkipList, %struct._SkipList* %arrayidx, i32 0, i32 1, !dbg !8013
  %3 = load %struct._ListNode*, %struct._ListNode** %nodes, align 8, !dbg !8013
  %4 = load i16, i16* %index, align 2, !dbg !8014
  %idxprom = zext i16 %4 to i64, !dbg !8011
  %arrayidx1 = getelementptr inbounds %struct._ListNode, %struct._ListNode* %3, i64 %idxprom, !dbg !8011
  %signature2 = getelementptr inbounds %struct._ListNode, %struct._ListNode* %arrayidx1, i32 0, i32 2, !dbg !8015
  %5 = load i64, i64* %signature2, align 8, !dbg !8015
  store i64 %5, i64* %signature, align 8, !dbg !8016
  %6 = load i64, i64* %signature, align 8, !dbg !8017
  %7 = load %struct._PixelList*, %struct._PixelList** %pixel_list.addr, align 8, !dbg !8019
  %signature3 = getelementptr inbounds %struct._PixelList, %struct._PixelList* %7, i32 0, i32 2, !dbg !8020
  %8 = load i64, i64* %signature3, align 8, !dbg !8020
  %cmp = icmp eq i64 %6, %8, !dbg !8021
  br i1 %cmp, label %if.then, label %if.else, !dbg !8022

if.then:                                          ; preds = %entry
  %9 = load %struct._PixelList*, %struct._PixelList** %pixel_list.addr, align 8, !dbg !8023
  %lists4 = getelementptr inbounds %struct._PixelList, %struct._PixelList* %9, i32 0, i32 3, !dbg !8024
  %arrayidx5 = getelementptr inbounds [5 x %struct._SkipList], [5 x %struct._SkipList]* %lists4, i64 0, i64 0, !dbg !8023
  %nodes6 = getelementptr inbounds %struct._SkipList, %struct._SkipList* %arrayidx5, i32 0, i32 1, !dbg !8025
  %10 = load %struct._ListNode*, %struct._ListNode** %nodes6, align 8, !dbg !8025
  %11 = load i16, i16* %index, align 2, !dbg !8026
  %idxprom7 = zext i16 %11 to i64, !dbg !8023
  %arrayidx8 = getelementptr inbounds %struct._ListNode, %struct._ListNode* %10, i64 %idxprom7, !dbg !8023
  %count = getelementptr inbounds %struct._ListNode, %struct._ListNode* %arrayidx8, i32 0, i32 1, !dbg !8027
  %12 = load i64, i64* %count, align 8, !dbg !8028
  %inc = add i64 %12, 1, !dbg !8028
  store i64 %inc, i64* %count, align 8, !dbg !8028
  br label %if.end, !dbg !8023

if.else:                                          ; preds = %entry
  %13 = load %struct._PixelList*, %struct._PixelList** %pixel_list.addr, align 8, !dbg !8029
  %14 = load i16, i16* %index, align 2, !dbg !8030
  %conv = zext i16 %14 to i64, !dbg !8030
  call void @AddNodePixelList(%struct._PixelList* %13, i64 0, i64 %conv), !dbg !8031
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %15 = load %struct._PixelPacket*, %struct._PixelPacket** %pixel.addr, align 8, !dbg !8032
  %green = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %15, i32 0, i32 1, !dbg !8032
  %16 = load i16, i16* %green, align 2, !dbg !8032
  %call9 = call zeroext i16 @ScaleQuantumToShort(i16 zeroext %16), !dbg !8033
  store i16 %call9, i16* %index, align 2, !dbg !8034
  %17 = load %struct._PixelList*, %struct._PixelList** %pixel_list.addr, align 8, !dbg !8035
  %lists10 = getelementptr inbounds %struct._PixelList, %struct._PixelList* %17, i32 0, i32 3, !dbg !8036
  %arrayidx11 = getelementptr inbounds [5 x %struct._SkipList], [5 x %struct._SkipList]* %lists10, i64 0, i64 1, !dbg !8035
  %nodes12 = getelementptr inbounds %struct._SkipList, %struct._SkipList* %arrayidx11, i32 0, i32 1, !dbg !8037
  %18 = load %struct._ListNode*, %struct._ListNode** %nodes12, align 8, !dbg !8037
  %19 = load i16, i16* %index, align 2, !dbg !8038
  %idxprom13 = zext i16 %19 to i64, !dbg !8035
  %arrayidx14 = getelementptr inbounds %struct._ListNode, %struct._ListNode* %18, i64 %idxprom13, !dbg !8035
  %signature15 = getelementptr inbounds %struct._ListNode, %struct._ListNode* %arrayidx14, i32 0, i32 2, !dbg !8039
  %20 = load i64, i64* %signature15, align 8, !dbg !8039
  store i64 %20, i64* %signature, align 8, !dbg !8040
  %21 = load i64, i64* %signature, align 8, !dbg !8041
  %22 = load %struct._PixelList*, %struct._PixelList** %pixel_list.addr, align 8, !dbg !8043
  %signature16 = getelementptr inbounds %struct._PixelList, %struct._PixelList* %22, i32 0, i32 2, !dbg !8044
  %23 = load i64, i64* %signature16, align 8, !dbg !8044
  %cmp17 = icmp eq i64 %21, %23, !dbg !8045
  br i1 %cmp17, label %if.then19, label %if.else27, !dbg !8046

if.then19:                                        ; preds = %if.end
  %24 = load %struct._PixelList*, %struct._PixelList** %pixel_list.addr, align 8, !dbg !8047
  %lists20 = getelementptr inbounds %struct._PixelList, %struct._PixelList* %24, i32 0, i32 3, !dbg !8048
  %arrayidx21 = getelementptr inbounds [5 x %struct._SkipList], [5 x %struct._SkipList]* %lists20, i64 0, i64 1, !dbg !8047
  %nodes22 = getelementptr inbounds %struct._SkipList, %struct._SkipList* %arrayidx21, i32 0, i32 1, !dbg !8049
  %25 = load %struct._ListNode*, %struct._ListNode** %nodes22, align 8, !dbg !8049
  %26 = load i16, i16* %index, align 2, !dbg !8050
  %idxprom23 = zext i16 %26 to i64, !dbg !8047
  %arrayidx24 = getelementptr inbounds %struct._ListNode, %struct._ListNode* %25, i64 %idxprom23, !dbg !8047
  %count25 = getelementptr inbounds %struct._ListNode, %struct._ListNode* %arrayidx24, i32 0, i32 1, !dbg !8051
  %27 = load i64, i64* %count25, align 8, !dbg !8052
  %inc26 = add i64 %27, 1, !dbg !8052
  store i64 %inc26, i64* %count25, align 8, !dbg !8052
  br label %if.end29, !dbg !8047

if.else27:                                        ; preds = %if.end
  %28 = load %struct._PixelList*, %struct._PixelList** %pixel_list.addr, align 8, !dbg !8053
  %29 = load i16, i16* %index, align 2, !dbg !8054
  %conv28 = zext i16 %29 to i64, !dbg !8054
  call void @AddNodePixelList(%struct._PixelList* %28, i64 1, i64 %conv28), !dbg !8055
  br label %if.end29

if.end29:                                         ; preds = %if.else27, %if.then19
  %30 = load %struct._PixelPacket*, %struct._PixelPacket** %pixel.addr, align 8, !dbg !8056
  %blue = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %30, i32 0, i32 0, !dbg !8056
  %31 = load i16, i16* %blue, align 2, !dbg !8056
  %call30 = call zeroext i16 @ScaleQuantumToShort(i16 zeroext %31), !dbg !8057
  store i16 %call30, i16* %index, align 2, !dbg !8058
  %32 = load %struct._PixelList*, %struct._PixelList** %pixel_list.addr, align 8, !dbg !8059
  %lists31 = getelementptr inbounds %struct._PixelList, %struct._PixelList* %32, i32 0, i32 3, !dbg !8060
  %arrayidx32 = getelementptr inbounds [5 x %struct._SkipList], [5 x %struct._SkipList]* %lists31, i64 0, i64 2, !dbg !8059
  %nodes33 = getelementptr inbounds %struct._SkipList, %struct._SkipList* %arrayidx32, i32 0, i32 1, !dbg !8061
  %33 = load %struct._ListNode*, %struct._ListNode** %nodes33, align 8, !dbg !8061
  %34 = load i16, i16* %index, align 2, !dbg !8062
  %idxprom34 = zext i16 %34 to i64, !dbg !8059
  %arrayidx35 = getelementptr inbounds %struct._ListNode, %struct._ListNode* %33, i64 %idxprom34, !dbg !8059
  %signature36 = getelementptr inbounds %struct._ListNode, %struct._ListNode* %arrayidx35, i32 0, i32 2, !dbg !8063
  %35 = load i64, i64* %signature36, align 8, !dbg !8063
  store i64 %35, i64* %signature, align 8, !dbg !8064
  %36 = load i64, i64* %signature, align 8, !dbg !8065
  %37 = load %struct._PixelList*, %struct._PixelList** %pixel_list.addr, align 8, !dbg !8067
  %signature37 = getelementptr inbounds %struct._PixelList, %struct._PixelList* %37, i32 0, i32 2, !dbg !8068
  %38 = load i64, i64* %signature37, align 8, !dbg !8068
  %cmp38 = icmp eq i64 %36, %38, !dbg !8069
  br i1 %cmp38, label %if.then40, label %if.else48, !dbg !8070

if.then40:                                        ; preds = %if.end29
  %39 = load %struct._PixelList*, %struct._PixelList** %pixel_list.addr, align 8, !dbg !8071
  %lists41 = getelementptr inbounds %struct._PixelList, %struct._PixelList* %39, i32 0, i32 3, !dbg !8072
  %arrayidx42 = getelementptr inbounds [5 x %struct._SkipList], [5 x %struct._SkipList]* %lists41, i64 0, i64 2, !dbg !8071
  %nodes43 = getelementptr inbounds %struct._SkipList, %struct._SkipList* %arrayidx42, i32 0, i32 1, !dbg !8073
  %40 = load %struct._ListNode*, %struct._ListNode** %nodes43, align 8, !dbg !8073
  %41 = load i16, i16* %index, align 2, !dbg !8074
  %idxprom44 = zext i16 %41 to i64, !dbg !8071
  %arrayidx45 = getelementptr inbounds %struct._ListNode, %struct._ListNode* %40, i64 %idxprom44, !dbg !8071
  %count46 = getelementptr inbounds %struct._ListNode, %struct._ListNode* %arrayidx45, i32 0, i32 1, !dbg !8075
  %42 = load i64, i64* %count46, align 8, !dbg !8076
  %inc47 = add i64 %42, 1, !dbg !8076
  store i64 %inc47, i64* %count46, align 8, !dbg !8076
  br label %if.end50, !dbg !8071

if.else48:                                        ; preds = %if.end29
  %43 = load %struct._PixelList*, %struct._PixelList** %pixel_list.addr, align 8, !dbg !8077
  %44 = load i16, i16* %index, align 2, !dbg !8078
  %conv49 = zext i16 %44 to i64, !dbg !8078
  call void @AddNodePixelList(%struct._PixelList* %43, i64 2, i64 %conv49), !dbg !8079
  br label %if.end50

if.end50:                                         ; preds = %if.else48, %if.then40
  %45 = load %struct._PixelPacket*, %struct._PixelPacket** %pixel.addr, align 8, !dbg !8080
  %opacity = getelementptr inbounds %struct._PixelPacket, %struct._PixelPacket* %45, i32 0, i32 3, !dbg !8080
  %46 = load i16, i16* %opacity, align 2, !dbg !8080
  %call51 = call zeroext i16 @ScaleQuantumToShort(i16 zeroext %46), !dbg !8081
  store i16 %call51, i16* %index, align 2, !dbg !8082
  %47 = load %struct._PixelList*, %struct._PixelList** %pixel_list.addr, align 8, !dbg !8083
  %lists52 = getelementptr inbounds %struct._PixelList, %struct._PixelList* %47, i32 0, i32 3, !dbg !8084
  %arrayidx53 = getelementptr inbounds [5 x %struct._SkipList], [5 x %struct._SkipList]* %lists52, i64 0, i64 3, !dbg !8083
  %nodes54 = getelementptr inbounds %struct._SkipList, %struct._SkipList* %arrayidx53, i32 0, i32 1, !dbg !8085
  %48 = load %struct._ListNode*, %struct._ListNode** %nodes54, align 8, !dbg !8085
  %49 = load i16, i16* %index, align 2, !dbg !8086
  %idxprom55 = zext i16 %49 to i64, !dbg !8083
  %arrayidx56 = getelementptr inbounds %struct._ListNode, %struct._ListNode* %48, i64 %idxprom55, !dbg !8083
  %signature57 = getelementptr inbounds %struct._ListNode, %struct._ListNode* %arrayidx56, i32 0, i32 2, !dbg !8087
  %50 = load i64, i64* %signature57, align 8, !dbg !8087
  store i64 %50, i64* %signature, align 8, !dbg !8088
  %51 = load i64, i64* %signature, align 8, !dbg !8089
  %52 = load %struct._PixelList*, %struct._PixelList** %pixel_list.addr, align 8, !dbg !8091
  %signature58 = getelementptr inbounds %struct._PixelList, %struct._PixelList* %52, i32 0, i32 2, !dbg !8092
  %53 = load i64, i64* %signature58, align 8, !dbg !8092
  %cmp59 = icmp eq i64 %51, %53, !dbg !8093
  br i1 %cmp59, label %if.then61, label %if.else69, !dbg !8094

if.then61:                                        ; preds = %if.end50
  %54 = load %struct._PixelList*, %struct._PixelList** %pixel_list.addr, align 8, !dbg !8095
  %lists62 = getelementptr inbounds %struct._PixelList, %struct._PixelList* %54, i32 0, i32 3, !dbg !8096
  %arrayidx63 = getelementptr inbounds [5 x %struct._SkipList], [5 x %struct._SkipList]* %lists62, i64 0, i64 3, !dbg !8095
  %nodes64 = getelementptr inbounds %struct._SkipList, %struct._SkipList* %arrayidx63, i32 0, i32 1, !dbg !8097
  %55 = load %struct._ListNode*, %struct._ListNode** %nodes64, align 8, !dbg !8097
  %56 = load i16, i16* %index, align 2, !dbg !8098
  %idxprom65 = zext i16 %56 to i64, !dbg !8095
  %arrayidx66 = getelementptr inbounds %struct._ListNode, %struct._ListNode* %55, i64 %idxprom65, !dbg !8095
  %count67 = getelementptr inbounds %struct._ListNode, %struct._ListNode* %arrayidx66, i32 0, i32 1, !dbg !8099
  %57 = load i64, i64* %count67, align 8, !dbg !8100
  %inc68 = add i64 %57, 1, !dbg !8100
  store i64 %inc68, i64* %count67, align 8, !dbg !8100
  br label %if.end71, !dbg !8095

if.else69:                                        ; preds = %if.end50
  %58 = load %struct._PixelList*, %struct._PixelList** %pixel_list.addr, align 8, !dbg !8101
  %59 = load i16, i16* %index, align 2, !dbg !8102
  %conv70 = zext i16 %59 to i64, !dbg !8102
  call void @AddNodePixelList(%struct._PixelList* %58, i64 3, i64 %conv70), !dbg !8103
  br label %if.end71

if.end71:                                         ; preds = %if.else69, %if.then61
  %60 = load %struct._Image*, %struct._Image** %image.addr, align 8, !dbg !8104
  %colorspace = getelementptr inbounds %struct._Image, %struct._Image* %60, i32 0, i32 1, !dbg !8106
  %61 = load i32, i32* %colorspace, align 4, !dbg !8106
  %cmp72 = icmp eq i32 %61, 12, !dbg !8107
  br i1 %cmp72, label %if.then74, label %if.end80, !dbg !8108

if.then74:                                        ; preds = %if.end71
  %62 = load i16*, i16** %indexes.addr, align 8, !dbg !8109
  %cmp75 = icmp eq i16* %62, null, !dbg !8109
  br i1 %cmp75, label %cond.true, label %cond.false, !dbg !8109

cond.true:                                        ; preds = %if.then74
  br label %cond.end, !dbg !8109

cond.false:                                       ; preds = %if.then74
  %63 = load i16*, i16** %indexes.addr, align 8, !dbg !8109
  %64 = load i16, i16* %63, align 2, !dbg !8109
  %conv77 = zext i16 %64 to i32, !dbg !8109
  br label %cond.end, !dbg !8109

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ 0, %cond.true ], [ %conv77, %cond.false ], !dbg !8109
  %conv78 = trunc i32 %cond to i16, !dbg !8109
  %call79 = call zeroext i16 @ScaleQuantumToShort(i16 zeroext %conv78), !dbg !8110
  store i16 %call79, i16* %index, align 2, !dbg !8111
  br label %if.end80, !dbg !8112

if.end80:                                         ; preds = %cond.end, %if.end71
  %65 = load %struct._PixelList*, %struct._PixelList** %pixel_list.addr, align 8, !dbg !8113
  %lists81 = getelementptr inbounds %struct._PixelList, %struct._PixelList* %65, i32 0, i32 3, !dbg !8114
  %arrayidx82 = getelementptr inbounds [5 x %struct._SkipList], [5 x %struct._SkipList]* %lists81, i64 0, i64 4, !dbg !8113
  %nodes83 = getelementptr inbounds %struct._SkipList, %struct._SkipList* %arrayidx82, i32 0, i32 1, !dbg !8115
  %66 = load %struct._ListNode*, %struct._ListNode** %nodes83, align 8, !dbg !8115
  %67 = load i16, i16* %index, align 2, !dbg !8116
  %idxprom84 = zext i16 %67 to i64, !dbg !8113
  %arrayidx85 = getelementptr inbounds %struct._ListNode, %struct._ListNode* %66, i64 %idxprom84, !dbg !8113
  %signature86 = getelementptr inbounds %struct._ListNode, %struct._ListNode* %arrayidx85, i32 0, i32 2, !dbg !8117
  %68 = load i64, i64* %signature86, align 8, !dbg !8117
  store i64 %68, i64* %signature, align 8, !dbg !8118
  %69 = load i64, i64* %signature, align 8, !dbg !8119
  %70 = load %struct._PixelList*, %struct._PixelList** %pixel_list.addr, align 8, !dbg !8121
  %signature87 = getelementptr inbounds %struct._PixelList, %struct._PixelList* %70, i32 0, i32 2, !dbg !8122
  %71 = load i64, i64* %signature87, align 8, !dbg !8122
  %cmp88 = icmp eq i64 %69, %71, !dbg !8123
  br i1 %cmp88, label %if.then90, label %if.else98, !dbg !8124

if.then90:                                        ; preds = %if.end80
  %72 = load %struct._PixelList*, %struct._PixelList** %pixel_list.addr, align 8, !dbg !8125
  %lists91 = getelementptr inbounds %struct._PixelList, %struct._PixelList* %72, i32 0, i32 3, !dbg !8126
  %arrayidx92 = getelementptr inbounds [5 x %struct._SkipList], [5 x %struct._SkipList]* %lists91, i64 0, i64 4, !dbg !8125
  %nodes93 = getelementptr inbounds %struct._SkipList, %struct._SkipList* %arrayidx92, i32 0, i32 1, !dbg !8127
  %73 = load %struct._ListNode*, %struct._ListNode** %nodes93, align 8, !dbg !8127
  %74 = load i16, i16* %index, align 2, !dbg !8128
  %idxprom94 = zext i16 %74 to i64, !dbg !8125
  %arrayidx95 = getelementptr inbounds %struct._ListNode, %struct._ListNode* %73, i64 %idxprom94, !dbg !8125
  %count96 = getelementptr inbounds %struct._ListNode, %struct._ListNode* %arrayidx95, i32 0, i32 1, !dbg !8129
  %75 = load i64, i64* %count96, align 8, !dbg !8130
  %inc97 = add i64 %75, 1, !dbg !8130
  store i64 %inc97, i64* %count96, align 8, !dbg !8130
  br label %if.end100, !dbg !8125

if.else98:                                        ; preds = %if.end80
  %76 = load %struct._PixelList*, %struct._PixelList** %pixel_list.addr, align 8, !dbg !8131
  %77 = load i16, i16* %index, align 2, !dbg !8132
  %conv99 = zext i16 %77 to i64, !dbg !8132
  call void @AddNodePixelList(%struct._PixelList* %76, i64 4, i64 %conv99), !dbg !8133
  br label %if.end100

if.end100:                                        ; preds = %if.else98, %if.then90
  ret void, !dbg !8134
}

; Function Attrs: noinline nounwind uwtable
define internal void @GetMinimumPixelList(%struct._PixelList* %pixel_list, %struct._MagickPixelPacket* %pixel) #0 !dbg !8135 {
entry:
  %pixel_list.addr = alloca %struct._PixelList*, align 8
  %pixel.addr = alloca %struct._MagickPixelPacket*, align 8
  %list = alloca %struct._SkipList*, align 8
  %channel = alloca i64, align 8
  %color = alloca i64, align 8
  %minimum = alloca i64, align 8
  %count = alloca i64, align 8
  %channels = alloca [5 x i16], align 2
  store %struct._PixelList* %pixel_list, %struct._PixelList** %pixel_list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelList** %pixel_list.addr, metadata !8138, metadata !DIExpression()), !dbg !8139
  store %struct._MagickPixelPacket* %pixel, %struct._MagickPixelPacket** %pixel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %pixel.addr, metadata !8140, metadata !DIExpression()), !dbg !8141
  call void @llvm.dbg.declare(metadata %struct._SkipList** %list, metadata !8142, metadata !DIExpression()), !dbg !8143
  call void @llvm.dbg.declare(metadata i64* %channel, metadata !8144, metadata !DIExpression()), !dbg !8145
  call void @llvm.dbg.declare(metadata i64* %color, metadata !8146, metadata !DIExpression()), !dbg !8147
  call void @llvm.dbg.declare(metadata i64* %minimum, metadata !8148, metadata !DIExpression()), !dbg !8149
  call void @llvm.dbg.declare(metadata i64* %count, metadata !8150, metadata !DIExpression()), !dbg !8151
  call void @llvm.dbg.declare(metadata [5 x i16]* %channels, metadata !8152, metadata !DIExpression()), !dbg !8154
  store i64 0, i64* %channel, align 8, !dbg !8155
  br label %for.cond, !dbg !8157

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i64, i64* %channel, align 8, !dbg !8158
  %cmp = icmp slt i64 %0, 5, !dbg !8160
  br i1 %cmp, label %for.body, label %for.end, !dbg !8161

for.body:                                         ; preds = %for.cond
  %1 = load %struct._PixelList*, %struct._PixelList** %pixel_list.addr, align 8, !dbg !8162
  %lists = getelementptr inbounds %struct._PixelList, %struct._PixelList* %1, i32 0, i32 3, !dbg !8164
  %arraydecay = getelementptr inbounds [5 x %struct._SkipList], [5 x %struct._SkipList]* %lists, i64 0, i64 0, !dbg !8162
  %2 = load i64, i64* %channel, align 8, !dbg !8165
  %add.ptr = getelementptr inbounds %struct._SkipList, %struct._SkipList* %arraydecay, i64 %2, !dbg !8166
  store %struct._SkipList* %add.ptr, %struct._SkipList** %list, align 8, !dbg !8167
  store i64 0, i64* %count, align 8, !dbg !8168
  store i64 65536, i64* %color, align 8, !dbg !8169
  %3 = load %struct._SkipList*, %struct._SkipList** %list, align 8, !dbg !8170
  %nodes = getelementptr inbounds %struct._SkipList, %struct._SkipList* %3, i32 0, i32 1, !dbg !8171
  %4 = load %struct._ListNode*, %struct._ListNode** %nodes, align 8, !dbg !8171
  %5 = load i64, i64* %color, align 8, !dbg !8172
  %arrayidx = getelementptr inbounds %struct._ListNode, %struct._ListNode* %4, i64 %5, !dbg !8170
  %next = getelementptr inbounds %struct._ListNode, %struct._ListNode* %arrayidx, i32 0, i32 0, !dbg !8173
  %arrayidx1 = getelementptr inbounds [9 x i64], [9 x i64]* %next, i64 0, i64 0, !dbg !8170
  %6 = load i64, i64* %arrayidx1, align 8, !dbg !8170
  store i64 %6, i64* %minimum, align 8, !dbg !8174
  br label %do.body, !dbg !8175

do.body:                                          ; preds = %do.cond, %for.body
  %7 = load %struct._SkipList*, %struct._SkipList** %list, align 8, !dbg !8176
  %nodes2 = getelementptr inbounds %struct._SkipList, %struct._SkipList* %7, i32 0, i32 1, !dbg !8178
  %8 = load %struct._ListNode*, %struct._ListNode** %nodes2, align 8, !dbg !8178
  %9 = load i64, i64* %color, align 8, !dbg !8179
  %arrayidx3 = getelementptr inbounds %struct._ListNode, %struct._ListNode* %8, i64 %9, !dbg !8176
  %next4 = getelementptr inbounds %struct._ListNode, %struct._ListNode* %arrayidx3, i32 0, i32 0, !dbg !8180
  %arrayidx5 = getelementptr inbounds [9 x i64], [9 x i64]* %next4, i64 0, i64 0, !dbg !8176
  %10 = load i64, i64* %arrayidx5, align 8, !dbg !8176
  store i64 %10, i64* %color, align 8, !dbg !8181
  %11 = load i64, i64* %color, align 8, !dbg !8182
  %12 = load i64, i64* %minimum, align 8, !dbg !8184
  %cmp6 = icmp ult i64 %11, %12, !dbg !8185
  br i1 %cmp6, label %if.then, label %if.end, !dbg !8186

if.then:                                          ; preds = %do.body
  %13 = load i64, i64* %color, align 8, !dbg !8187
  store i64 %13, i64* %minimum, align 8, !dbg !8188
  br label %if.end, !dbg !8189

if.end:                                           ; preds = %if.then, %do.body
  %14 = load %struct._SkipList*, %struct._SkipList** %list, align 8, !dbg !8190
  %nodes7 = getelementptr inbounds %struct._SkipList, %struct._SkipList* %14, i32 0, i32 1, !dbg !8191
  %15 = load %struct._ListNode*, %struct._ListNode** %nodes7, align 8, !dbg !8191
  %16 = load i64, i64* %color, align 8, !dbg !8192
  %arrayidx8 = getelementptr inbounds %struct._ListNode, %struct._ListNode* %15, i64 %16, !dbg !8190
  %count9 = getelementptr inbounds %struct._ListNode, %struct._ListNode* %arrayidx8, i32 0, i32 1, !dbg !8193
  %17 = load i64, i64* %count9, align 8, !dbg !8193
  %18 = load i64, i64* %count, align 8, !dbg !8194
  %add = add i64 %18, %17, !dbg !8194
  store i64 %add, i64* %count, align 8, !dbg !8194
  br label %do.cond, !dbg !8195

do.cond:                                          ; preds = %if.end
  %19 = load i64, i64* %count, align 8, !dbg !8196
  %20 = load %struct._PixelList*, %struct._PixelList** %pixel_list.addr, align 8, !dbg !8197
  %length = getelementptr inbounds %struct._PixelList, %struct._PixelList* %20, i32 0, i32 0, !dbg !8198
  %21 = load i64, i64* %length, align 8, !dbg !8198
  %cmp10 = icmp slt i64 %19, %21, !dbg !8199
  br i1 %cmp10, label %do.body, label %do.end, !dbg !8195, !llvm.loop !8200

do.end:                                           ; preds = %do.cond
  %22 = load i64, i64* %minimum, align 8, !dbg !8202
  %conv = trunc i64 %22 to i16, !dbg !8203
  %23 = load i64, i64* %channel, align 8, !dbg !8204
  %arrayidx11 = getelementptr inbounds [5 x i16], [5 x i16]* %channels, i64 0, i64 %23, !dbg !8205
  store i16 %conv, i16* %arrayidx11, align 2, !dbg !8206
  br label %for.inc, !dbg !8207

for.inc:                                          ; preds = %do.end
  %24 = load i64, i64* %channel, align 8, !dbg !8208
  %inc = add nsw i64 %24, 1, !dbg !8208
  store i64 %inc, i64* %channel, align 8, !dbg !8208
  br label %for.cond, !dbg !8209, !llvm.loop !8210

for.end:                                          ; preds = %for.cond
  %arrayidx12 = getelementptr inbounds [5 x i16], [5 x i16]* %channels, i64 0, i64 0, !dbg !8212
  %25 = load i16, i16* %arrayidx12, align 2, !dbg !8212
  %call = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %25), !dbg !8213
  %conv13 = uitofp i16 %call to float, !dbg !8214
  %26 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !8215
  %red = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %26, i32 0, i32 5, !dbg !8216
  store float %conv13, float* %red, align 8, !dbg !8217
  %arrayidx14 = getelementptr inbounds [5 x i16], [5 x i16]* %channels, i64 0, i64 1, !dbg !8218
  %27 = load i16, i16* %arrayidx14, align 2, !dbg !8218
  %call15 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %27), !dbg !8219
  %conv16 = uitofp i16 %call15 to float, !dbg !8220
  %28 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !8221
  %green = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %28, i32 0, i32 6, !dbg !8222
  store float %conv16, float* %green, align 4, !dbg !8223
  %arrayidx17 = getelementptr inbounds [5 x i16], [5 x i16]* %channels, i64 0, i64 2, !dbg !8224
  %29 = load i16, i16* %arrayidx17, align 2, !dbg !8224
  %call18 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %29), !dbg !8225
  %conv19 = uitofp i16 %call18 to float, !dbg !8226
  %30 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !8227
  %blue = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %30, i32 0, i32 7, !dbg !8228
  store float %conv19, float* %blue, align 8, !dbg !8229
  %arrayidx20 = getelementptr inbounds [5 x i16], [5 x i16]* %channels, i64 0, i64 3, !dbg !8230
  %31 = load i16, i16* %arrayidx20, align 2, !dbg !8230
  %call21 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %31), !dbg !8231
  %conv22 = uitofp i16 %call21 to float, !dbg !8232
  %32 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !8233
  %opacity = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %32, i32 0, i32 8, !dbg !8234
  store float %conv22, float* %opacity, align 4, !dbg !8235
  %arrayidx23 = getelementptr inbounds [5 x i16], [5 x i16]* %channels, i64 0, i64 4, !dbg !8236
  %33 = load i16, i16* %arrayidx23, align 2, !dbg !8236
  %call24 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %33), !dbg !8237
  %conv25 = uitofp i16 %call24 to float, !dbg !8238
  %34 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !8239
  %index = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %34, i32 0, i32 9, !dbg !8240
  store float %conv25, float* %index, align 8, !dbg !8241
  ret void, !dbg !8242
}

; Function Attrs: noinline nounwind uwtable
define internal void @GetMaximumPixelList(%struct._PixelList* %pixel_list, %struct._MagickPixelPacket* %pixel) #0 !dbg !8243 {
entry:
  %pixel_list.addr = alloca %struct._PixelList*, align 8
  %pixel.addr = alloca %struct._MagickPixelPacket*, align 8
  %list = alloca %struct._SkipList*, align 8
  %channel = alloca i64, align 8
  %color = alloca i64, align 8
  %maximum = alloca i64, align 8
  %count = alloca i64, align 8
  %channels = alloca [5 x i16], align 2
  store %struct._PixelList* %pixel_list, %struct._PixelList** %pixel_list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelList** %pixel_list.addr, metadata !8244, metadata !DIExpression()), !dbg !8245
  store %struct._MagickPixelPacket* %pixel, %struct._MagickPixelPacket** %pixel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %pixel.addr, metadata !8246, metadata !DIExpression()), !dbg !8247
  call void @llvm.dbg.declare(metadata %struct._SkipList** %list, metadata !8248, metadata !DIExpression()), !dbg !8249
  call void @llvm.dbg.declare(metadata i64* %channel, metadata !8250, metadata !DIExpression()), !dbg !8251
  call void @llvm.dbg.declare(metadata i64* %color, metadata !8252, metadata !DIExpression()), !dbg !8253
  call void @llvm.dbg.declare(metadata i64* %maximum, metadata !8254, metadata !DIExpression()), !dbg !8255
  call void @llvm.dbg.declare(metadata i64* %count, metadata !8256, metadata !DIExpression()), !dbg !8257
  call void @llvm.dbg.declare(metadata [5 x i16]* %channels, metadata !8258, metadata !DIExpression()), !dbg !8259
  store i64 0, i64* %channel, align 8, !dbg !8260
  br label %for.cond, !dbg !8262

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i64, i64* %channel, align 8, !dbg !8263
  %cmp = icmp slt i64 %0, 5, !dbg !8265
  br i1 %cmp, label %for.body, label %for.end, !dbg !8266

for.body:                                         ; preds = %for.cond
  %1 = load %struct._PixelList*, %struct._PixelList** %pixel_list.addr, align 8, !dbg !8267
  %lists = getelementptr inbounds %struct._PixelList, %struct._PixelList* %1, i32 0, i32 3, !dbg !8269
  %arraydecay = getelementptr inbounds [5 x %struct._SkipList], [5 x %struct._SkipList]* %lists, i64 0, i64 0, !dbg !8267
  %2 = load i64, i64* %channel, align 8, !dbg !8270
  %add.ptr = getelementptr inbounds %struct._SkipList, %struct._SkipList* %arraydecay, i64 %2, !dbg !8271
  store %struct._SkipList* %add.ptr, %struct._SkipList** %list, align 8, !dbg !8272
  store i64 65536, i64* %color, align 8, !dbg !8273
  store i64 0, i64* %count, align 8, !dbg !8274
  %3 = load %struct._SkipList*, %struct._SkipList** %list, align 8, !dbg !8275
  %nodes = getelementptr inbounds %struct._SkipList, %struct._SkipList* %3, i32 0, i32 1, !dbg !8276
  %4 = load %struct._ListNode*, %struct._ListNode** %nodes, align 8, !dbg !8276
  %5 = load i64, i64* %color, align 8, !dbg !8277
  %arrayidx = getelementptr inbounds %struct._ListNode, %struct._ListNode* %4, i64 %5, !dbg !8275
  %next = getelementptr inbounds %struct._ListNode, %struct._ListNode* %arrayidx, i32 0, i32 0, !dbg !8278
  %arrayidx1 = getelementptr inbounds [9 x i64], [9 x i64]* %next, i64 0, i64 0, !dbg !8275
  %6 = load i64, i64* %arrayidx1, align 8, !dbg !8275
  store i64 %6, i64* %maximum, align 8, !dbg !8279
  br label %do.body, !dbg !8280

do.body:                                          ; preds = %do.cond, %for.body
  %7 = load %struct._SkipList*, %struct._SkipList** %list, align 8, !dbg !8281
  %nodes2 = getelementptr inbounds %struct._SkipList, %struct._SkipList* %7, i32 0, i32 1, !dbg !8283
  %8 = load %struct._ListNode*, %struct._ListNode** %nodes2, align 8, !dbg !8283
  %9 = load i64, i64* %color, align 8, !dbg !8284
  %arrayidx3 = getelementptr inbounds %struct._ListNode, %struct._ListNode* %8, i64 %9, !dbg !8281
  %next4 = getelementptr inbounds %struct._ListNode, %struct._ListNode* %arrayidx3, i32 0, i32 0, !dbg !8285
  %arrayidx5 = getelementptr inbounds [9 x i64], [9 x i64]* %next4, i64 0, i64 0, !dbg !8281
  %10 = load i64, i64* %arrayidx5, align 8, !dbg !8281
  store i64 %10, i64* %color, align 8, !dbg !8286
  %11 = load i64, i64* %color, align 8, !dbg !8287
  %12 = load i64, i64* %maximum, align 8, !dbg !8289
  %cmp6 = icmp ugt i64 %11, %12, !dbg !8290
  br i1 %cmp6, label %if.then, label %if.end, !dbg !8291

if.then:                                          ; preds = %do.body
  %13 = load i64, i64* %color, align 8, !dbg !8292
  store i64 %13, i64* %maximum, align 8, !dbg !8293
  br label %if.end, !dbg !8294

if.end:                                           ; preds = %if.then, %do.body
  %14 = load %struct._SkipList*, %struct._SkipList** %list, align 8, !dbg !8295
  %nodes7 = getelementptr inbounds %struct._SkipList, %struct._SkipList* %14, i32 0, i32 1, !dbg !8296
  %15 = load %struct._ListNode*, %struct._ListNode** %nodes7, align 8, !dbg !8296
  %16 = load i64, i64* %color, align 8, !dbg !8297
  %arrayidx8 = getelementptr inbounds %struct._ListNode, %struct._ListNode* %15, i64 %16, !dbg !8295
  %count9 = getelementptr inbounds %struct._ListNode, %struct._ListNode* %arrayidx8, i32 0, i32 1, !dbg !8298
  %17 = load i64, i64* %count9, align 8, !dbg !8298
  %18 = load i64, i64* %count, align 8, !dbg !8299
  %add = add i64 %18, %17, !dbg !8299
  store i64 %add, i64* %count, align 8, !dbg !8299
  br label %do.cond, !dbg !8300

do.cond:                                          ; preds = %if.end
  %19 = load i64, i64* %count, align 8, !dbg !8301
  %20 = load %struct._PixelList*, %struct._PixelList** %pixel_list.addr, align 8, !dbg !8302
  %length = getelementptr inbounds %struct._PixelList, %struct._PixelList* %20, i32 0, i32 0, !dbg !8303
  %21 = load i64, i64* %length, align 8, !dbg !8303
  %cmp10 = icmp slt i64 %19, %21, !dbg !8304
  br i1 %cmp10, label %do.body, label %do.end, !dbg !8300, !llvm.loop !8305

do.end:                                           ; preds = %do.cond
  %22 = load i64, i64* %maximum, align 8, !dbg !8307
  %conv = trunc i64 %22 to i16, !dbg !8308
  %23 = load i64, i64* %channel, align 8, !dbg !8309
  %arrayidx11 = getelementptr inbounds [5 x i16], [5 x i16]* %channels, i64 0, i64 %23, !dbg !8310
  store i16 %conv, i16* %arrayidx11, align 2, !dbg !8311
  br label %for.inc, !dbg !8312

for.inc:                                          ; preds = %do.end
  %24 = load i64, i64* %channel, align 8, !dbg !8313
  %inc = add nsw i64 %24, 1, !dbg !8313
  store i64 %inc, i64* %channel, align 8, !dbg !8313
  br label %for.cond, !dbg !8314, !llvm.loop !8315

for.end:                                          ; preds = %for.cond
  %arrayidx12 = getelementptr inbounds [5 x i16], [5 x i16]* %channels, i64 0, i64 0, !dbg !8317
  %25 = load i16, i16* %arrayidx12, align 2, !dbg !8317
  %call = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %25), !dbg !8318
  %conv13 = uitofp i16 %call to float, !dbg !8319
  %26 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !8320
  %red = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %26, i32 0, i32 5, !dbg !8321
  store float %conv13, float* %red, align 8, !dbg !8322
  %arrayidx14 = getelementptr inbounds [5 x i16], [5 x i16]* %channels, i64 0, i64 1, !dbg !8323
  %27 = load i16, i16* %arrayidx14, align 2, !dbg !8323
  %call15 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %27), !dbg !8324
  %conv16 = uitofp i16 %call15 to float, !dbg !8325
  %28 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !8326
  %green = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %28, i32 0, i32 6, !dbg !8327
  store float %conv16, float* %green, align 4, !dbg !8328
  %arrayidx17 = getelementptr inbounds [5 x i16], [5 x i16]* %channels, i64 0, i64 2, !dbg !8329
  %29 = load i16, i16* %arrayidx17, align 2, !dbg !8329
  %call18 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %29), !dbg !8330
  %conv19 = uitofp i16 %call18 to float, !dbg !8331
  %30 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !8332
  %blue = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %30, i32 0, i32 7, !dbg !8333
  store float %conv19, float* %blue, align 8, !dbg !8334
  %arrayidx20 = getelementptr inbounds [5 x i16], [5 x i16]* %channels, i64 0, i64 3, !dbg !8335
  %31 = load i16, i16* %arrayidx20, align 2, !dbg !8335
  %call21 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %31), !dbg !8336
  %conv22 = uitofp i16 %call21 to float, !dbg !8337
  %32 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !8338
  %opacity = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %32, i32 0, i32 8, !dbg !8339
  store float %conv22, float* %opacity, align 4, !dbg !8340
  %arrayidx23 = getelementptr inbounds [5 x i16], [5 x i16]* %channels, i64 0, i64 4, !dbg !8341
  %33 = load i16, i16* %arrayidx23, align 2, !dbg !8341
  %call24 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %33), !dbg !8342
  %conv25 = uitofp i16 %call24 to float, !dbg !8343
  %34 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !8344
  %index = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %34, i32 0, i32 9, !dbg !8345
  store float %conv25, float* %index, align 8, !dbg !8346
  ret void, !dbg !8347
}

; Function Attrs: noinline nounwind uwtable
define internal float @MagickAbsoluteValue(float %x) #0 !dbg !8348 {
entry:
  %retval = alloca float, align 4
  %x.addr = alloca float, align 4
  store float %x, float* %x.addr, align 4
  call void @llvm.dbg.declare(metadata float* %x.addr, metadata !8349, metadata !DIExpression()), !dbg !8350
  %0 = load float, float* %x.addr, align 4, !dbg !8351
  %cmp = fcmp olt float %0, 0.000000e+00, !dbg !8353
  br i1 %cmp, label %if.then, label %if.end, !dbg !8354

if.then:                                          ; preds = %entry
  %1 = load float, float* %x.addr, align 4, !dbg !8355
  %fneg = fneg float %1, !dbg !8356
  store float %fneg, float* %retval, align 4, !dbg !8357
  br label %return, !dbg !8357

if.end:                                           ; preds = %entry
  %2 = load float, float* %x.addr, align 4, !dbg !8358
  store float %2, float* %retval, align 4, !dbg !8359
  br label %return, !dbg !8359

return:                                           ; preds = %if.end, %if.then
  %3 = load float, float* %retval, align 4, !dbg !8360
  ret float %3, !dbg !8360
}

; Function Attrs: noinline nounwind uwtable
define internal void @GetMeanPixelList(%struct._PixelList* %pixel_list, %struct._MagickPixelPacket* %pixel) #0 !dbg !8361 {
entry:
  %pixel_list.addr = alloca %struct._PixelList*, align 8
  %pixel.addr = alloca %struct._MagickPixelPacket*, align 8
  %sum = alloca float, align 4
  %list = alloca %struct._SkipList*, align 8
  %channel = alloca i64, align 8
  %color = alloca i64, align 8
  %count = alloca i64, align 8
  %channels = alloca [5 x i16], align 2
  store %struct._PixelList* %pixel_list, %struct._PixelList** %pixel_list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelList** %pixel_list.addr, metadata !8362, metadata !DIExpression()), !dbg !8363
  store %struct._MagickPixelPacket* %pixel, %struct._MagickPixelPacket** %pixel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %pixel.addr, metadata !8364, metadata !DIExpression()), !dbg !8365
  call void @llvm.dbg.declare(metadata float* %sum, metadata !8366, metadata !DIExpression()), !dbg !8367
  call void @llvm.dbg.declare(metadata %struct._SkipList** %list, metadata !8368, metadata !DIExpression()), !dbg !8369
  call void @llvm.dbg.declare(metadata i64* %channel, metadata !8370, metadata !DIExpression()), !dbg !8371
  call void @llvm.dbg.declare(metadata i64* %color, metadata !8372, metadata !DIExpression()), !dbg !8373
  call void @llvm.dbg.declare(metadata i64* %count, metadata !8374, metadata !DIExpression()), !dbg !8375
  call void @llvm.dbg.declare(metadata [5 x i16]* %channels, metadata !8376, metadata !DIExpression()), !dbg !8377
  store i64 0, i64* %channel, align 8, !dbg !8378
  br label %for.cond, !dbg !8380

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i64, i64* %channel, align 8, !dbg !8381
  %cmp = icmp slt i64 %0, 5, !dbg !8383
  br i1 %cmp, label %for.body, label %for.end, !dbg !8384

for.body:                                         ; preds = %for.cond
  %1 = load %struct._PixelList*, %struct._PixelList** %pixel_list.addr, align 8, !dbg !8385
  %lists = getelementptr inbounds %struct._PixelList, %struct._PixelList* %1, i32 0, i32 3, !dbg !8387
  %arraydecay = getelementptr inbounds [5 x %struct._SkipList], [5 x %struct._SkipList]* %lists, i64 0, i64 0, !dbg !8385
  %2 = load i64, i64* %channel, align 8, !dbg !8388
  %add.ptr = getelementptr inbounds %struct._SkipList, %struct._SkipList* %arraydecay, i64 %2, !dbg !8389
  store %struct._SkipList* %add.ptr, %struct._SkipList** %list, align 8, !dbg !8390
  store i64 65536, i64* %color, align 8, !dbg !8391
  store i64 0, i64* %count, align 8, !dbg !8392
  store float 0.000000e+00, float* %sum, align 4, !dbg !8393
  br label %do.body, !dbg !8394

do.body:                                          ; preds = %do.cond, %for.body
  %3 = load %struct._SkipList*, %struct._SkipList** %list, align 8, !dbg !8395
  %nodes = getelementptr inbounds %struct._SkipList, %struct._SkipList* %3, i32 0, i32 1, !dbg !8397
  %4 = load %struct._ListNode*, %struct._ListNode** %nodes, align 8, !dbg !8397
  %5 = load i64, i64* %color, align 8, !dbg !8398
  %arrayidx = getelementptr inbounds %struct._ListNode, %struct._ListNode* %4, i64 %5, !dbg !8395
  %next = getelementptr inbounds %struct._ListNode, %struct._ListNode* %arrayidx, i32 0, i32 0, !dbg !8399
  %arrayidx1 = getelementptr inbounds [9 x i64], [9 x i64]* %next, i64 0, i64 0, !dbg !8395
  %6 = load i64, i64* %arrayidx1, align 8, !dbg !8395
  store i64 %6, i64* %color, align 8, !dbg !8400
  %7 = load %struct._SkipList*, %struct._SkipList** %list, align 8, !dbg !8401
  %nodes2 = getelementptr inbounds %struct._SkipList, %struct._SkipList* %7, i32 0, i32 1, !dbg !8402
  %8 = load %struct._ListNode*, %struct._ListNode** %nodes2, align 8, !dbg !8402
  %9 = load i64, i64* %color, align 8, !dbg !8403
  %arrayidx3 = getelementptr inbounds %struct._ListNode, %struct._ListNode* %8, i64 %9, !dbg !8401
  %count4 = getelementptr inbounds %struct._ListNode, %struct._ListNode* %arrayidx3, i32 0, i32 1, !dbg !8404
  %10 = load i64, i64* %count4, align 8, !dbg !8404
  %conv = uitofp i64 %10 to float, !dbg !8405
  %11 = load i64, i64* %color, align 8, !dbg !8406
  %conv5 = uitofp i64 %11 to float, !dbg !8406
  %mul = fmul float %conv, %conv5, !dbg !8407
  %12 = load float, float* %sum, align 4, !dbg !8408
  %add = fadd float %12, %mul, !dbg !8408
  store float %add, float* %sum, align 4, !dbg !8408
  %13 = load %struct._SkipList*, %struct._SkipList** %list, align 8, !dbg !8409
  %nodes6 = getelementptr inbounds %struct._SkipList, %struct._SkipList* %13, i32 0, i32 1, !dbg !8410
  %14 = load %struct._ListNode*, %struct._ListNode** %nodes6, align 8, !dbg !8410
  %15 = load i64, i64* %color, align 8, !dbg !8411
  %arrayidx7 = getelementptr inbounds %struct._ListNode, %struct._ListNode* %14, i64 %15, !dbg !8409
  %count8 = getelementptr inbounds %struct._ListNode, %struct._ListNode* %arrayidx7, i32 0, i32 1, !dbg !8412
  %16 = load i64, i64* %count8, align 8, !dbg !8412
  %17 = load i64, i64* %count, align 8, !dbg !8413
  %add9 = add i64 %17, %16, !dbg !8413
  store i64 %add9, i64* %count, align 8, !dbg !8413
  br label %do.cond, !dbg !8414

do.cond:                                          ; preds = %do.body
  %18 = load i64, i64* %count, align 8, !dbg !8415
  %19 = load %struct._PixelList*, %struct._PixelList** %pixel_list.addr, align 8, !dbg !8416
  %length = getelementptr inbounds %struct._PixelList, %struct._PixelList* %19, i32 0, i32 0, !dbg !8417
  %20 = load i64, i64* %length, align 8, !dbg !8417
  %cmp10 = icmp slt i64 %18, %20, !dbg !8418
  br i1 %cmp10, label %do.body, label %do.end, !dbg !8414, !llvm.loop !8419

do.end:                                           ; preds = %do.cond
  %21 = load %struct._PixelList*, %struct._PixelList** %pixel_list.addr, align 8, !dbg !8421
  %length12 = getelementptr inbounds %struct._PixelList, %struct._PixelList* %21, i32 0, i32 0, !dbg !8422
  %22 = load i64, i64* %length12, align 8, !dbg !8422
  %conv13 = uitofp i64 %22 to float, !dbg !8421
  %23 = load float, float* %sum, align 4, !dbg !8423
  %div = fdiv float %23, %conv13, !dbg !8423
  store float %div, float* %sum, align 4, !dbg !8423
  %24 = load float, float* %sum, align 4, !dbg !8424
  %conv14 = fptoui float %24 to i16, !dbg !8425
  %25 = load i64, i64* %channel, align 8, !dbg !8426
  %arrayidx15 = getelementptr inbounds [5 x i16], [5 x i16]* %channels, i64 0, i64 %25, !dbg !8427
  store i16 %conv14, i16* %arrayidx15, align 2, !dbg !8428
  br label %for.inc, !dbg !8429

for.inc:                                          ; preds = %do.end
  %26 = load i64, i64* %channel, align 8, !dbg !8430
  %inc = add nsw i64 %26, 1, !dbg !8430
  store i64 %inc, i64* %channel, align 8, !dbg !8430
  br label %for.cond, !dbg !8431, !llvm.loop !8432

for.end:                                          ; preds = %for.cond
  %arrayidx16 = getelementptr inbounds [5 x i16], [5 x i16]* %channels, i64 0, i64 0, !dbg !8434
  %27 = load i16, i16* %arrayidx16, align 2, !dbg !8434
  %call = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %27), !dbg !8435
  %conv17 = uitofp i16 %call to float, !dbg !8436
  %28 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !8437
  %red = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %28, i32 0, i32 5, !dbg !8438
  store float %conv17, float* %red, align 8, !dbg !8439
  %arrayidx18 = getelementptr inbounds [5 x i16], [5 x i16]* %channels, i64 0, i64 1, !dbg !8440
  %29 = load i16, i16* %arrayidx18, align 2, !dbg !8440
  %call19 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %29), !dbg !8441
  %conv20 = uitofp i16 %call19 to float, !dbg !8442
  %30 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !8443
  %green = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %30, i32 0, i32 6, !dbg !8444
  store float %conv20, float* %green, align 4, !dbg !8445
  %arrayidx21 = getelementptr inbounds [5 x i16], [5 x i16]* %channels, i64 0, i64 2, !dbg !8446
  %31 = load i16, i16* %arrayidx21, align 2, !dbg !8446
  %call22 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %31), !dbg !8447
  %conv23 = uitofp i16 %call22 to float, !dbg !8448
  %32 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !8449
  %blue = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %32, i32 0, i32 7, !dbg !8450
  store float %conv23, float* %blue, align 8, !dbg !8451
  %arrayidx24 = getelementptr inbounds [5 x i16], [5 x i16]* %channels, i64 0, i64 3, !dbg !8452
  %33 = load i16, i16* %arrayidx24, align 2, !dbg !8452
  %call25 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %33), !dbg !8453
  %conv26 = uitofp i16 %call25 to float, !dbg !8454
  %34 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !8455
  %opacity = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %34, i32 0, i32 8, !dbg !8456
  store float %conv26, float* %opacity, align 4, !dbg !8457
  %arrayidx27 = getelementptr inbounds [5 x i16], [5 x i16]* %channels, i64 0, i64 4, !dbg !8458
  %35 = load i16, i16* %arrayidx27, align 2, !dbg !8458
  %call28 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %35), !dbg !8459
  %conv29 = uitofp i16 %call28 to float, !dbg !8460
  %36 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !8461
  %index = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %36, i32 0, i32 9, !dbg !8462
  store float %conv29, float* %index, align 8, !dbg !8463
  ret void, !dbg !8464
}

; Function Attrs: noinline nounwind uwtable
define internal void @GetMedianPixelList(%struct._PixelList* %pixel_list, %struct._MagickPixelPacket* %pixel) #0 !dbg !8465 {
entry:
  %pixel_list.addr = alloca %struct._PixelList*, align 8
  %pixel.addr = alloca %struct._MagickPixelPacket*, align 8
  %list = alloca %struct._SkipList*, align 8
  %channel = alloca i64, align 8
  %color = alloca i64, align 8
  %count = alloca i64, align 8
  %channels = alloca [5 x i16], align 2
  store %struct._PixelList* %pixel_list, %struct._PixelList** %pixel_list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelList** %pixel_list.addr, metadata !8466, metadata !DIExpression()), !dbg !8467
  store %struct._MagickPixelPacket* %pixel, %struct._MagickPixelPacket** %pixel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %pixel.addr, metadata !8468, metadata !DIExpression()), !dbg !8469
  call void @llvm.dbg.declare(metadata %struct._SkipList** %list, metadata !8470, metadata !DIExpression()), !dbg !8471
  call void @llvm.dbg.declare(metadata i64* %channel, metadata !8472, metadata !DIExpression()), !dbg !8473
  call void @llvm.dbg.declare(metadata i64* %color, metadata !8474, metadata !DIExpression()), !dbg !8475
  call void @llvm.dbg.declare(metadata i64* %count, metadata !8476, metadata !DIExpression()), !dbg !8477
  call void @llvm.dbg.declare(metadata [5 x i16]* %channels, metadata !8478, metadata !DIExpression()), !dbg !8479
  store i64 0, i64* %channel, align 8, !dbg !8480
  br label %for.cond, !dbg !8482

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i64, i64* %channel, align 8, !dbg !8483
  %cmp = icmp slt i64 %0, 5, !dbg !8485
  br i1 %cmp, label %for.body, label %for.end, !dbg !8486

for.body:                                         ; preds = %for.cond
  %1 = load %struct._PixelList*, %struct._PixelList** %pixel_list.addr, align 8, !dbg !8487
  %lists = getelementptr inbounds %struct._PixelList, %struct._PixelList* %1, i32 0, i32 3, !dbg !8489
  %arraydecay = getelementptr inbounds [5 x %struct._SkipList], [5 x %struct._SkipList]* %lists, i64 0, i64 0, !dbg !8487
  %2 = load i64, i64* %channel, align 8, !dbg !8490
  %add.ptr = getelementptr inbounds %struct._SkipList, %struct._SkipList* %arraydecay, i64 %2, !dbg !8491
  store %struct._SkipList* %add.ptr, %struct._SkipList** %list, align 8, !dbg !8492
  store i64 65536, i64* %color, align 8, !dbg !8493
  store i64 0, i64* %count, align 8, !dbg !8494
  br label %do.body, !dbg !8495

do.body:                                          ; preds = %do.cond, %for.body
  %3 = load %struct._SkipList*, %struct._SkipList** %list, align 8, !dbg !8496
  %nodes = getelementptr inbounds %struct._SkipList, %struct._SkipList* %3, i32 0, i32 1, !dbg !8498
  %4 = load %struct._ListNode*, %struct._ListNode** %nodes, align 8, !dbg !8498
  %5 = load i64, i64* %color, align 8, !dbg !8499
  %arrayidx = getelementptr inbounds %struct._ListNode, %struct._ListNode* %4, i64 %5, !dbg !8496
  %next = getelementptr inbounds %struct._ListNode, %struct._ListNode* %arrayidx, i32 0, i32 0, !dbg !8500
  %arrayidx1 = getelementptr inbounds [9 x i64], [9 x i64]* %next, i64 0, i64 0, !dbg !8496
  %6 = load i64, i64* %arrayidx1, align 8, !dbg !8496
  store i64 %6, i64* %color, align 8, !dbg !8501
  %7 = load %struct._SkipList*, %struct._SkipList** %list, align 8, !dbg !8502
  %nodes2 = getelementptr inbounds %struct._SkipList, %struct._SkipList* %7, i32 0, i32 1, !dbg !8503
  %8 = load %struct._ListNode*, %struct._ListNode** %nodes2, align 8, !dbg !8503
  %9 = load i64, i64* %color, align 8, !dbg !8504
  %arrayidx3 = getelementptr inbounds %struct._ListNode, %struct._ListNode* %8, i64 %9, !dbg !8502
  %count4 = getelementptr inbounds %struct._ListNode, %struct._ListNode* %arrayidx3, i32 0, i32 1, !dbg !8505
  %10 = load i64, i64* %count4, align 8, !dbg !8505
  %11 = load i64, i64* %count, align 8, !dbg !8506
  %add = add i64 %11, %10, !dbg !8506
  store i64 %add, i64* %count, align 8, !dbg !8506
  br label %do.cond, !dbg !8507

do.cond:                                          ; preds = %do.body
  %12 = load i64, i64* %count, align 8, !dbg !8508
  %13 = load %struct._PixelList*, %struct._PixelList** %pixel_list.addr, align 8, !dbg !8509
  %length = getelementptr inbounds %struct._PixelList, %struct._PixelList* %13, i32 0, i32 0, !dbg !8510
  %14 = load i64, i64* %length, align 8, !dbg !8510
  %shr = lshr i64 %14, 1, !dbg !8511
  %cmp5 = icmp sle i64 %12, %shr, !dbg !8512
  br i1 %cmp5, label %do.body, label %do.end, !dbg !8507, !llvm.loop !8513

do.end:                                           ; preds = %do.cond
  %15 = load i64, i64* %color, align 8, !dbg !8515
  %conv = trunc i64 %15 to i16, !dbg !8516
  %16 = load i64, i64* %channel, align 8, !dbg !8517
  %arrayidx6 = getelementptr inbounds [5 x i16], [5 x i16]* %channels, i64 0, i64 %16, !dbg !8518
  store i16 %conv, i16* %arrayidx6, align 2, !dbg !8519
  br label %for.inc, !dbg !8520

for.inc:                                          ; preds = %do.end
  %17 = load i64, i64* %channel, align 8, !dbg !8521
  %inc = add nsw i64 %17, 1, !dbg !8521
  store i64 %inc, i64* %channel, align 8, !dbg !8521
  br label %for.cond, !dbg !8522, !llvm.loop !8523

for.end:                                          ; preds = %for.cond
  %18 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !8525
  call void @GetMagickPixelPacket(%struct._Image* null, %struct._MagickPixelPacket* %18), !dbg !8526
  %arrayidx7 = getelementptr inbounds [5 x i16], [5 x i16]* %channels, i64 0, i64 0, !dbg !8527
  %19 = load i16, i16* %arrayidx7, align 2, !dbg !8527
  %call = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %19), !dbg !8528
  %conv8 = uitofp i16 %call to float, !dbg !8529
  %20 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !8530
  %red = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %20, i32 0, i32 5, !dbg !8531
  store float %conv8, float* %red, align 8, !dbg !8532
  %arrayidx9 = getelementptr inbounds [5 x i16], [5 x i16]* %channels, i64 0, i64 1, !dbg !8533
  %21 = load i16, i16* %arrayidx9, align 2, !dbg !8533
  %call10 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %21), !dbg !8534
  %conv11 = uitofp i16 %call10 to float, !dbg !8535
  %22 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !8536
  %green = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %22, i32 0, i32 6, !dbg !8537
  store float %conv11, float* %green, align 4, !dbg !8538
  %arrayidx12 = getelementptr inbounds [5 x i16], [5 x i16]* %channels, i64 0, i64 2, !dbg !8539
  %23 = load i16, i16* %arrayidx12, align 2, !dbg !8539
  %call13 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %23), !dbg !8540
  %conv14 = uitofp i16 %call13 to float, !dbg !8541
  %24 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !8542
  %blue = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %24, i32 0, i32 7, !dbg !8543
  store float %conv14, float* %blue, align 8, !dbg !8544
  %arrayidx15 = getelementptr inbounds [5 x i16], [5 x i16]* %channels, i64 0, i64 3, !dbg !8545
  %25 = load i16, i16* %arrayidx15, align 2, !dbg !8545
  %call16 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %25), !dbg !8546
  %conv17 = uitofp i16 %call16 to float, !dbg !8547
  %26 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !8548
  %opacity = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %26, i32 0, i32 8, !dbg !8549
  store float %conv17, float* %opacity, align 4, !dbg !8550
  %arrayidx18 = getelementptr inbounds [5 x i16], [5 x i16]* %channels, i64 0, i64 4, !dbg !8551
  %27 = load i16, i16* %arrayidx18, align 2, !dbg !8551
  %call19 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %27), !dbg !8552
  %conv20 = uitofp i16 %call19 to float, !dbg !8553
  %28 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !8554
  %index = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %28, i32 0, i32 9, !dbg !8555
  store float %conv20, float* %index, align 8, !dbg !8556
  ret void, !dbg !8557
}

; Function Attrs: noinline nounwind uwtable
define internal void @GetModePixelList(%struct._PixelList* %pixel_list, %struct._MagickPixelPacket* %pixel) #0 !dbg !8558 {
entry:
  %pixel_list.addr = alloca %struct._PixelList*, align 8
  %pixel.addr = alloca %struct._MagickPixelPacket*, align 8
  %list = alloca %struct._SkipList*, align 8
  %channel = alloca i64, align 8
  %color = alloca i64, align 8
  %max_count = alloca i64, align 8
  %mode = alloca i64, align 8
  %count = alloca i64, align 8
  %channels = alloca [5 x i16], align 2
  store %struct._PixelList* %pixel_list, %struct._PixelList** %pixel_list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelList** %pixel_list.addr, metadata !8559, metadata !DIExpression()), !dbg !8560
  store %struct._MagickPixelPacket* %pixel, %struct._MagickPixelPacket** %pixel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %pixel.addr, metadata !8561, metadata !DIExpression()), !dbg !8562
  call void @llvm.dbg.declare(metadata %struct._SkipList** %list, metadata !8563, metadata !DIExpression()), !dbg !8564
  call void @llvm.dbg.declare(metadata i64* %channel, metadata !8565, metadata !DIExpression()), !dbg !8566
  call void @llvm.dbg.declare(metadata i64* %color, metadata !8567, metadata !DIExpression()), !dbg !8568
  call void @llvm.dbg.declare(metadata i64* %max_count, metadata !8569, metadata !DIExpression()), !dbg !8570
  call void @llvm.dbg.declare(metadata i64* %mode, metadata !8571, metadata !DIExpression()), !dbg !8572
  call void @llvm.dbg.declare(metadata i64* %count, metadata !8573, metadata !DIExpression()), !dbg !8574
  call void @llvm.dbg.declare(metadata [5 x i16]* %channels, metadata !8575, metadata !DIExpression()), !dbg !8576
  store i64 0, i64* %channel, align 8, !dbg !8577
  br label %for.cond, !dbg !8579

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i64, i64* %channel, align 8, !dbg !8580
  %cmp = icmp slt i64 %0, 5, !dbg !8582
  br i1 %cmp, label %for.body, label %for.end, !dbg !8583

for.body:                                         ; preds = %for.cond
  %1 = load %struct._PixelList*, %struct._PixelList** %pixel_list.addr, align 8, !dbg !8584
  %lists = getelementptr inbounds %struct._PixelList, %struct._PixelList* %1, i32 0, i32 3, !dbg !8586
  %arraydecay = getelementptr inbounds [5 x %struct._SkipList], [5 x %struct._SkipList]* %lists, i64 0, i64 0, !dbg !8584
  %2 = load i64, i64* %channel, align 8, !dbg !8587
  %add.ptr = getelementptr inbounds %struct._SkipList, %struct._SkipList* %arraydecay, i64 %2, !dbg !8588
  store %struct._SkipList* %add.ptr, %struct._SkipList** %list, align 8, !dbg !8589
  store i64 65536, i64* %color, align 8, !dbg !8590
  %3 = load i64, i64* %color, align 8, !dbg !8591
  store i64 %3, i64* %mode, align 8, !dbg !8592
  %4 = load %struct._SkipList*, %struct._SkipList** %list, align 8, !dbg !8593
  %nodes = getelementptr inbounds %struct._SkipList, %struct._SkipList* %4, i32 0, i32 1, !dbg !8594
  %5 = load %struct._ListNode*, %struct._ListNode** %nodes, align 8, !dbg !8594
  %6 = load i64, i64* %mode, align 8, !dbg !8595
  %arrayidx = getelementptr inbounds %struct._ListNode, %struct._ListNode* %5, i64 %6, !dbg !8593
  %count1 = getelementptr inbounds %struct._ListNode, %struct._ListNode* %arrayidx, i32 0, i32 1, !dbg !8596
  %7 = load i64, i64* %count1, align 8, !dbg !8596
  store i64 %7, i64* %max_count, align 8, !dbg !8597
  store i64 0, i64* %count, align 8, !dbg !8598
  br label %do.body, !dbg !8599

do.body:                                          ; preds = %do.cond, %for.body
  %8 = load %struct._SkipList*, %struct._SkipList** %list, align 8, !dbg !8600
  %nodes2 = getelementptr inbounds %struct._SkipList, %struct._SkipList* %8, i32 0, i32 1, !dbg !8602
  %9 = load %struct._ListNode*, %struct._ListNode** %nodes2, align 8, !dbg !8602
  %10 = load i64, i64* %color, align 8, !dbg !8603
  %arrayidx3 = getelementptr inbounds %struct._ListNode, %struct._ListNode* %9, i64 %10, !dbg !8600
  %next = getelementptr inbounds %struct._ListNode, %struct._ListNode* %arrayidx3, i32 0, i32 0, !dbg !8604
  %arrayidx4 = getelementptr inbounds [9 x i64], [9 x i64]* %next, i64 0, i64 0, !dbg !8600
  %11 = load i64, i64* %arrayidx4, align 8, !dbg !8600
  store i64 %11, i64* %color, align 8, !dbg !8605
  %12 = load %struct._SkipList*, %struct._SkipList** %list, align 8, !dbg !8606
  %nodes5 = getelementptr inbounds %struct._SkipList, %struct._SkipList* %12, i32 0, i32 1, !dbg !8608
  %13 = load %struct._ListNode*, %struct._ListNode** %nodes5, align 8, !dbg !8608
  %14 = load i64, i64* %color, align 8, !dbg !8609
  %arrayidx6 = getelementptr inbounds %struct._ListNode, %struct._ListNode* %13, i64 %14, !dbg !8606
  %count7 = getelementptr inbounds %struct._ListNode, %struct._ListNode* %arrayidx6, i32 0, i32 1, !dbg !8610
  %15 = load i64, i64* %count7, align 8, !dbg !8610
  %16 = load i64, i64* %max_count, align 8, !dbg !8611
  %cmp8 = icmp ugt i64 %15, %16, !dbg !8612
  br i1 %cmp8, label %if.then, label %if.end, !dbg !8613

if.then:                                          ; preds = %do.body
  %17 = load i64, i64* %color, align 8, !dbg !8614
  store i64 %17, i64* %mode, align 8, !dbg !8616
  %18 = load %struct._SkipList*, %struct._SkipList** %list, align 8, !dbg !8617
  %nodes9 = getelementptr inbounds %struct._SkipList, %struct._SkipList* %18, i32 0, i32 1, !dbg !8618
  %19 = load %struct._ListNode*, %struct._ListNode** %nodes9, align 8, !dbg !8618
  %20 = load i64, i64* %mode, align 8, !dbg !8619
  %arrayidx10 = getelementptr inbounds %struct._ListNode, %struct._ListNode* %19, i64 %20, !dbg !8617
  %count11 = getelementptr inbounds %struct._ListNode, %struct._ListNode* %arrayidx10, i32 0, i32 1, !dbg !8620
  %21 = load i64, i64* %count11, align 8, !dbg !8620
  store i64 %21, i64* %max_count, align 8, !dbg !8621
  br label %if.end, !dbg !8622

if.end:                                           ; preds = %if.then, %do.body
  %22 = load %struct._SkipList*, %struct._SkipList** %list, align 8, !dbg !8623
  %nodes12 = getelementptr inbounds %struct._SkipList, %struct._SkipList* %22, i32 0, i32 1, !dbg !8624
  %23 = load %struct._ListNode*, %struct._ListNode** %nodes12, align 8, !dbg !8624
  %24 = load i64, i64* %color, align 8, !dbg !8625
  %arrayidx13 = getelementptr inbounds %struct._ListNode, %struct._ListNode* %23, i64 %24, !dbg !8623
  %count14 = getelementptr inbounds %struct._ListNode, %struct._ListNode* %arrayidx13, i32 0, i32 1, !dbg !8626
  %25 = load i64, i64* %count14, align 8, !dbg !8626
  %26 = load i64, i64* %count, align 8, !dbg !8627
  %add = add i64 %26, %25, !dbg !8627
  store i64 %add, i64* %count, align 8, !dbg !8627
  br label %do.cond, !dbg !8628

do.cond:                                          ; preds = %if.end
  %27 = load i64, i64* %count, align 8, !dbg !8629
  %28 = load %struct._PixelList*, %struct._PixelList** %pixel_list.addr, align 8, !dbg !8630
  %length = getelementptr inbounds %struct._PixelList, %struct._PixelList* %28, i32 0, i32 0, !dbg !8631
  %29 = load i64, i64* %length, align 8, !dbg !8631
  %cmp15 = icmp slt i64 %27, %29, !dbg !8632
  br i1 %cmp15, label %do.body, label %do.end, !dbg !8628, !llvm.loop !8633

do.end:                                           ; preds = %do.cond
  %30 = load i64, i64* %mode, align 8, !dbg !8635
  %conv = trunc i64 %30 to i16, !dbg !8636
  %31 = load i64, i64* %channel, align 8, !dbg !8637
  %arrayidx16 = getelementptr inbounds [5 x i16], [5 x i16]* %channels, i64 0, i64 %31, !dbg !8638
  store i16 %conv, i16* %arrayidx16, align 2, !dbg !8639
  br label %for.inc, !dbg !8640

for.inc:                                          ; preds = %do.end
  %32 = load i64, i64* %channel, align 8, !dbg !8641
  %inc = add nsw i64 %32, 1, !dbg !8641
  store i64 %inc, i64* %channel, align 8, !dbg !8641
  br label %for.cond, !dbg !8642, !llvm.loop !8643

for.end:                                          ; preds = %for.cond
  %arrayidx17 = getelementptr inbounds [5 x i16], [5 x i16]* %channels, i64 0, i64 0, !dbg !8645
  %33 = load i16, i16* %arrayidx17, align 2, !dbg !8645
  %call = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %33), !dbg !8646
  %conv18 = uitofp i16 %call to float, !dbg !8647
  %34 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !8648
  %red = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %34, i32 0, i32 5, !dbg !8649
  store float %conv18, float* %red, align 8, !dbg !8650
  %arrayidx19 = getelementptr inbounds [5 x i16], [5 x i16]* %channels, i64 0, i64 1, !dbg !8651
  %35 = load i16, i16* %arrayidx19, align 2, !dbg !8651
  %call20 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %35), !dbg !8652
  %conv21 = uitofp i16 %call20 to float, !dbg !8653
  %36 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !8654
  %green = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %36, i32 0, i32 6, !dbg !8655
  store float %conv21, float* %green, align 4, !dbg !8656
  %arrayidx22 = getelementptr inbounds [5 x i16], [5 x i16]* %channels, i64 0, i64 2, !dbg !8657
  %37 = load i16, i16* %arrayidx22, align 2, !dbg !8657
  %call23 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %37), !dbg !8658
  %conv24 = uitofp i16 %call23 to float, !dbg !8659
  %38 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !8660
  %blue = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %38, i32 0, i32 7, !dbg !8661
  store float %conv24, float* %blue, align 8, !dbg !8662
  %arrayidx25 = getelementptr inbounds [5 x i16], [5 x i16]* %channels, i64 0, i64 3, !dbg !8663
  %39 = load i16, i16* %arrayidx25, align 2, !dbg !8663
  %call26 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %39), !dbg !8664
  %conv27 = uitofp i16 %call26 to float, !dbg !8665
  %40 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !8666
  %opacity = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %40, i32 0, i32 8, !dbg !8667
  store float %conv27, float* %opacity, align 4, !dbg !8668
  %arrayidx28 = getelementptr inbounds [5 x i16], [5 x i16]* %channels, i64 0, i64 4, !dbg !8669
  %41 = load i16, i16* %arrayidx28, align 2, !dbg !8669
  %call29 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %41), !dbg !8670
  %conv30 = uitofp i16 %call29 to float, !dbg !8671
  %42 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !8672
  %index = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %42, i32 0, i32 9, !dbg !8673
  store float %conv30, float* %index, align 8, !dbg !8674
  ret void, !dbg !8675
}

; Function Attrs: noinline nounwind uwtable
define internal void @GetNonpeakPixelList(%struct._PixelList* %pixel_list, %struct._MagickPixelPacket* %pixel) #0 !dbg !8676 {
entry:
  %pixel_list.addr = alloca %struct._PixelList*, align 8
  %pixel.addr = alloca %struct._MagickPixelPacket*, align 8
  %list = alloca %struct._SkipList*, align 8
  %channel = alloca i64, align 8
  %color = alloca i64, align 8
  %next = alloca i64, align 8
  %previous = alloca i64, align 8
  %count = alloca i64, align 8
  %channels = alloca [5 x i16], align 2
  store %struct._PixelList* %pixel_list, %struct._PixelList** %pixel_list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelList** %pixel_list.addr, metadata !8677, metadata !DIExpression()), !dbg !8678
  store %struct._MagickPixelPacket* %pixel, %struct._MagickPixelPacket** %pixel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %pixel.addr, metadata !8679, metadata !DIExpression()), !dbg !8680
  call void @llvm.dbg.declare(metadata %struct._SkipList** %list, metadata !8681, metadata !DIExpression()), !dbg !8682
  call void @llvm.dbg.declare(metadata i64* %channel, metadata !8683, metadata !DIExpression()), !dbg !8684
  call void @llvm.dbg.declare(metadata i64* %color, metadata !8685, metadata !DIExpression()), !dbg !8686
  call void @llvm.dbg.declare(metadata i64* %next, metadata !8687, metadata !DIExpression()), !dbg !8688
  call void @llvm.dbg.declare(metadata i64* %previous, metadata !8689, metadata !DIExpression()), !dbg !8690
  call void @llvm.dbg.declare(metadata i64* %count, metadata !8691, metadata !DIExpression()), !dbg !8692
  call void @llvm.dbg.declare(metadata [5 x i16]* %channels, metadata !8693, metadata !DIExpression()), !dbg !8694
  store i64 0, i64* %channel, align 8, !dbg !8695
  br label %for.cond, !dbg !8697

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i64, i64* %channel, align 8, !dbg !8698
  %cmp = icmp slt i64 %0, 5, !dbg !8700
  br i1 %cmp, label %for.body, label %for.end, !dbg !8701

for.body:                                         ; preds = %for.cond
  %1 = load %struct._PixelList*, %struct._PixelList** %pixel_list.addr, align 8, !dbg !8702
  %lists = getelementptr inbounds %struct._PixelList, %struct._PixelList* %1, i32 0, i32 3, !dbg !8704
  %arraydecay = getelementptr inbounds [5 x %struct._SkipList], [5 x %struct._SkipList]* %lists, i64 0, i64 0, !dbg !8702
  %2 = load i64, i64* %channel, align 8, !dbg !8705
  %add.ptr = getelementptr inbounds %struct._SkipList, %struct._SkipList* %arraydecay, i64 %2, !dbg !8706
  store %struct._SkipList* %add.ptr, %struct._SkipList** %list, align 8, !dbg !8707
  store i64 65536, i64* %color, align 8, !dbg !8708
  %3 = load %struct._SkipList*, %struct._SkipList** %list, align 8, !dbg !8709
  %nodes = getelementptr inbounds %struct._SkipList, %struct._SkipList* %3, i32 0, i32 1, !dbg !8710
  %4 = load %struct._ListNode*, %struct._ListNode** %nodes, align 8, !dbg !8710
  %5 = load i64, i64* %color, align 8, !dbg !8711
  %arrayidx = getelementptr inbounds %struct._ListNode, %struct._ListNode* %4, i64 %5, !dbg !8709
  %next1 = getelementptr inbounds %struct._ListNode, %struct._ListNode* %arrayidx, i32 0, i32 0, !dbg !8712
  %arrayidx2 = getelementptr inbounds [9 x i64], [9 x i64]* %next1, i64 0, i64 0, !dbg !8709
  %6 = load i64, i64* %arrayidx2, align 8, !dbg !8709
  store i64 %6, i64* %next, align 8, !dbg !8713
  store i64 0, i64* %count, align 8, !dbg !8714
  br label %do.body, !dbg !8715

do.body:                                          ; preds = %do.cond, %for.body
  %7 = load i64, i64* %color, align 8, !dbg !8716
  store i64 %7, i64* %previous, align 8, !dbg !8718
  %8 = load i64, i64* %next, align 8, !dbg !8719
  store i64 %8, i64* %color, align 8, !dbg !8720
  %9 = load %struct._SkipList*, %struct._SkipList** %list, align 8, !dbg !8721
  %nodes3 = getelementptr inbounds %struct._SkipList, %struct._SkipList* %9, i32 0, i32 1, !dbg !8722
  %10 = load %struct._ListNode*, %struct._ListNode** %nodes3, align 8, !dbg !8722
  %11 = load i64, i64* %color, align 8, !dbg !8723
  %arrayidx4 = getelementptr inbounds %struct._ListNode, %struct._ListNode* %10, i64 %11, !dbg !8721
  %next5 = getelementptr inbounds %struct._ListNode, %struct._ListNode* %arrayidx4, i32 0, i32 0, !dbg !8724
  %arrayidx6 = getelementptr inbounds [9 x i64], [9 x i64]* %next5, i64 0, i64 0, !dbg !8721
  %12 = load i64, i64* %arrayidx6, align 8, !dbg !8721
  store i64 %12, i64* %next, align 8, !dbg !8725
  %13 = load %struct._SkipList*, %struct._SkipList** %list, align 8, !dbg !8726
  %nodes7 = getelementptr inbounds %struct._SkipList, %struct._SkipList* %13, i32 0, i32 1, !dbg !8727
  %14 = load %struct._ListNode*, %struct._ListNode** %nodes7, align 8, !dbg !8727
  %15 = load i64, i64* %color, align 8, !dbg !8728
  %arrayidx8 = getelementptr inbounds %struct._ListNode, %struct._ListNode* %14, i64 %15, !dbg !8726
  %count9 = getelementptr inbounds %struct._ListNode, %struct._ListNode* %arrayidx8, i32 0, i32 1, !dbg !8729
  %16 = load i64, i64* %count9, align 8, !dbg !8729
  %17 = load i64, i64* %count, align 8, !dbg !8730
  %add = add i64 %17, %16, !dbg !8730
  store i64 %add, i64* %count, align 8, !dbg !8730
  br label %do.cond, !dbg !8731

do.cond:                                          ; preds = %do.body
  %18 = load i64, i64* %count, align 8, !dbg !8732
  %19 = load %struct._PixelList*, %struct._PixelList** %pixel_list.addr, align 8, !dbg !8733
  %length = getelementptr inbounds %struct._PixelList, %struct._PixelList* %19, i32 0, i32 0, !dbg !8734
  %20 = load i64, i64* %length, align 8, !dbg !8734
  %shr = lshr i64 %20, 1, !dbg !8735
  %cmp10 = icmp sle i64 %18, %shr, !dbg !8736
  br i1 %cmp10, label %do.body, label %do.end, !dbg !8731, !llvm.loop !8737

do.end:                                           ; preds = %do.cond
  %21 = load i64, i64* %previous, align 8, !dbg !8739
  %cmp11 = icmp eq i64 %21, 65536, !dbg !8741
  br i1 %cmp11, label %land.lhs.true, label %if.else, !dbg !8742

land.lhs.true:                                    ; preds = %do.end
  %22 = load i64, i64* %next, align 8, !dbg !8743
  %cmp12 = icmp ne i64 %22, 65536, !dbg !8744
  br i1 %cmp12, label %if.then, label %if.else, !dbg !8745

if.then:                                          ; preds = %land.lhs.true
  %23 = load i64, i64* %next, align 8, !dbg !8746
  store i64 %23, i64* %color, align 8, !dbg !8747
  br label %if.end17, !dbg !8748

if.else:                                          ; preds = %land.lhs.true, %do.end
  %24 = load i64, i64* %previous, align 8, !dbg !8749
  %cmp13 = icmp ne i64 %24, 65536, !dbg !8751
  br i1 %cmp13, label %land.lhs.true14, label %if.end, !dbg !8752

land.lhs.true14:                                  ; preds = %if.else
  %25 = load i64, i64* %next, align 8, !dbg !8753
  %cmp15 = icmp eq i64 %25, 65536, !dbg !8754
  br i1 %cmp15, label %if.then16, label %if.end, !dbg !8755

if.then16:                                        ; preds = %land.lhs.true14
  %26 = load i64, i64* %previous, align 8, !dbg !8756
  store i64 %26, i64* %color, align 8, !dbg !8757
  br label %if.end, !dbg !8758

if.end:                                           ; preds = %if.then16, %land.lhs.true14, %if.else
  br label %if.end17

if.end17:                                         ; preds = %if.end, %if.then
  %27 = load i64, i64* %color, align 8, !dbg !8759
  %conv = trunc i64 %27 to i16, !dbg !8760
  %28 = load i64, i64* %channel, align 8, !dbg !8761
  %arrayidx18 = getelementptr inbounds [5 x i16], [5 x i16]* %channels, i64 0, i64 %28, !dbg !8762
  store i16 %conv, i16* %arrayidx18, align 2, !dbg !8763
  br label %for.inc, !dbg !8764

for.inc:                                          ; preds = %if.end17
  %29 = load i64, i64* %channel, align 8, !dbg !8765
  %inc = add nsw i64 %29, 1, !dbg !8765
  store i64 %inc, i64* %channel, align 8, !dbg !8765
  br label %for.cond, !dbg !8766, !llvm.loop !8767

for.end:                                          ; preds = %for.cond
  %arrayidx19 = getelementptr inbounds [5 x i16], [5 x i16]* %channels, i64 0, i64 0, !dbg !8769
  %30 = load i16, i16* %arrayidx19, align 2, !dbg !8769
  %call = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %30), !dbg !8770
  %conv20 = uitofp i16 %call to float, !dbg !8771
  %31 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !8772
  %red = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %31, i32 0, i32 5, !dbg !8773
  store float %conv20, float* %red, align 8, !dbg !8774
  %arrayidx21 = getelementptr inbounds [5 x i16], [5 x i16]* %channels, i64 0, i64 1, !dbg !8775
  %32 = load i16, i16* %arrayidx21, align 2, !dbg !8775
  %call22 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %32), !dbg !8776
  %conv23 = uitofp i16 %call22 to float, !dbg !8777
  %33 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !8778
  %green = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %33, i32 0, i32 6, !dbg !8779
  store float %conv23, float* %green, align 4, !dbg !8780
  %arrayidx24 = getelementptr inbounds [5 x i16], [5 x i16]* %channels, i64 0, i64 2, !dbg !8781
  %34 = load i16, i16* %arrayidx24, align 2, !dbg !8781
  %call25 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %34), !dbg !8782
  %conv26 = uitofp i16 %call25 to float, !dbg !8783
  %35 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !8784
  %blue = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %35, i32 0, i32 7, !dbg !8785
  store float %conv26, float* %blue, align 8, !dbg !8786
  %arrayidx27 = getelementptr inbounds [5 x i16], [5 x i16]* %channels, i64 0, i64 3, !dbg !8787
  %36 = load i16, i16* %arrayidx27, align 2, !dbg !8787
  %call28 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %36), !dbg !8788
  %conv29 = uitofp i16 %call28 to float, !dbg !8789
  %37 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !8790
  %opacity = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %37, i32 0, i32 8, !dbg !8791
  store float %conv29, float* %opacity, align 4, !dbg !8792
  %arrayidx30 = getelementptr inbounds [5 x i16], [5 x i16]* %channels, i64 0, i64 4, !dbg !8793
  %38 = load i16, i16* %arrayidx30, align 2, !dbg !8793
  %call31 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %38), !dbg !8794
  %conv32 = uitofp i16 %call31 to float, !dbg !8795
  %39 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !8796
  %index = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %39, i32 0, i32 9, !dbg !8797
  store float %conv32, float* %index, align 8, !dbg !8798
  ret void, !dbg !8799
}

; Function Attrs: noinline nounwind uwtable
define internal void @GetStandardDeviationPixelList(%struct._PixelList* %pixel_list, %struct._MagickPixelPacket* %pixel) #0 !dbg !8800 {
entry:
  %pixel_list.addr = alloca %struct._PixelList*, align 8
  %pixel.addr = alloca %struct._MagickPixelPacket*, align 8
  %sum = alloca float, align 4
  %sum_squared = alloca float, align 4
  %list = alloca %struct._SkipList*, align 8
  %channel = alloca i64, align 8
  %color = alloca i64, align 8
  %count = alloca i64, align 8
  %channels = alloca [5 x i16], align 2
  %i = alloca i64, align 8
  store %struct._PixelList* %pixel_list, %struct._PixelList** %pixel_list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelList** %pixel_list.addr, metadata !8801, metadata !DIExpression()), !dbg !8802
  store %struct._MagickPixelPacket* %pixel, %struct._MagickPixelPacket** %pixel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %pixel.addr, metadata !8803, metadata !DIExpression()), !dbg !8804
  call void @llvm.dbg.declare(metadata float* %sum, metadata !8805, metadata !DIExpression()), !dbg !8806
  call void @llvm.dbg.declare(metadata float* %sum_squared, metadata !8807, metadata !DIExpression()), !dbg !8808
  call void @llvm.dbg.declare(metadata %struct._SkipList** %list, metadata !8809, metadata !DIExpression()), !dbg !8810
  call void @llvm.dbg.declare(metadata i64* %channel, metadata !8811, metadata !DIExpression()), !dbg !8812
  call void @llvm.dbg.declare(metadata i64* %color, metadata !8813, metadata !DIExpression()), !dbg !8814
  call void @llvm.dbg.declare(metadata i64* %count, metadata !8815, metadata !DIExpression()), !dbg !8816
  call void @llvm.dbg.declare(metadata [5 x i16]* %channels, metadata !8817, metadata !DIExpression()), !dbg !8818
  store i64 0, i64* %channel, align 8, !dbg !8819
  br label %for.cond, !dbg !8821

for.cond:                                         ; preds = %for.inc32, %entry
  %0 = load i64, i64* %channel, align 8, !dbg !8822
  %cmp = icmp slt i64 %0, 5, !dbg !8824
  br i1 %cmp, label %for.body, label %for.end34, !dbg !8825

for.body:                                         ; preds = %for.cond
  %1 = load %struct._PixelList*, %struct._PixelList** %pixel_list.addr, align 8, !dbg !8826
  %lists = getelementptr inbounds %struct._PixelList, %struct._PixelList* %1, i32 0, i32 3, !dbg !8828
  %arraydecay = getelementptr inbounds [5 x %struct._SkipList], [5 x %struct._SkipList]* %lists, i64 0, i64 0, !dbg !8826
  %2 = load i64, i64* %channel, align 8, !dbg !8829
  %add.ptr = getelementptr inbounds %struct._SkipList, %struct._SkipList* %arraydecay, i64 %2, !dbg !8830
  store %struct._SkipList* %add.ptr, %struct._SkipList** %list, align 8, !dbg !8831
  store i64 65536, i64* %color, align 8, !dbg !8832
  store i64 0, i64* %count, align 8, !dbg !8833
  store float 0.000000e+00, float* %sum, align 4, !dbg !8834
  store float 0.000000e+00, float* %sum_squared, align 4, !dbg !8835
  br label %do.body, !dbg !8836

do.body:                                          ; preds = %do.cond, %for.body
  call void @llvm.dbg.declare(metadata i64* %i, metadata !8837, metadata !DIExpression()), !dbg !8839
  %3 = load %struct._SkipList*, %struct._SkipList** %list, align 8, !dbg !8840
  %nodes = getelementptr inbounds %struct._SkipList, %struct._SkipList* %3, i32 0, i32 1, !dbg !8841
  %4 = load %struct._ListNode*, %struct._ListNode** %nodes, align 8, !dbg !8841
  %5 = load i64, i64* %color, align 8, !dbg !8842
  %arrayidx = getelementptr inbounds %struct._ListNode, %struct._ListNode* %4, i64 %5, !dbg !8840
  %next = getelementptr inbounds %struct._ListNode, %struct._ListNode* %arrayidx, i32 0, i32 0, !dbg !8843
  %arrayidx1 = getelementptr inbounds [9 x i64], [9 x i64]* %next, i64 0, i64 0, !dbg !8840
  %6 = load i64, i64* %arrayidx1, align 8, !dbg !8840
  store i64 %6, i64* %color, align 8, !dbg !8844
  %7 = load %struct._SkipList*, %struct._SkipList** %list, align 8, !dbg !8845
  %nodes2 = getelementptr inbounds %struct._SkipList, %struct._SkipList* %7, i32 0, i32 1, !dbg !8846
  %8 = load %struct._ListNode*, %struct._ListNode** %nodes2, align 8, !dbg !8846
  %9 = load i64, i64* %color, align 8, !dbg !8847
  %arrayidx3 = getelementptr inbounds %struct._ListNode, %struct._ListNode* %8, i64 %9, !dbg !8845
  %count4 = getelementptr inbounds %struct._ListNode, %struct._ListNode* %arrayidx3, i32 0, i32 1, !dbg !8848
  %10 = load i64, i64* %count4, align 8, !dbg !8848
  %conv = uitofp i64 %10 to float, !dbg !8849
  %11 = load i64, i64* %color, align 8, !dbg !8850
  %conv5 = uitofp i64 %11 to float, !dbg !8850
  %mul = fmul float %conv, %conv5, !dbg !8851
  %12 = load float, float* %sum, align 4, !dbg !8852
  %add = fadd float %12, %mul, !dbg !8852
  store float %add, float* %sum, align 4, !dbg !8852
  store i64 0, i64* %i, align 8, !dbg !8853
  br label %for.cond6, !dbg !8855

for.cond6:                                        ; preds = %for.inc, %do.body
  %13 = load i64, i64* %i, align 8, !dbg !8856
  %14 = load %struct._SkipList*, %struct._SkipList** %list, align 8, !dbg !8858
  %nodes7 = getelementptr inbounds %struct._SkipList, %struct._SkipList* %14, i32 0, i32 1, !dbg !8859
  %15 = load %struct._ListNode*, %struct._ListNode** %nodes7, align 8, !dbg !8859
  %16 = load i64, i64* %color, align 8, !dbg !8860
  %arrayidx8 = getelementptr inbounds %struct._ListNode, %struct._ListNode* %15, i64 %16, !dbg !8858
  %count9 = getelementptr inbounds %struct._ListNode, %struct._ListNode* %arrayidx8, i32 0, i32 1, !dbg !8861
  %17 = load i64, i64* %count9, align 8, !dbg !8861
  %cmp10 = icmp slt i64 %13, %17, !dbg !8862
  br i1 %cmp10, label %for.body12, label %for.end, !dbg !8863

for.body12:                                       ; preds = %for.cond6
  %18 = load i64, i64* %color, align 8, !dbg !8864
  %conv13 = uitofp i64 %18 to float, !dbg !8865
  %19 = load i64, i64* %color, align 8, !dbg !8866
  %conv14 = uitofp i64 %19 to float, !dbg !8867
  %mul15 = fmul float %conv13, %conv14, !dbg !8868
  %20 = load float, float* %sum_squared, align 4, !dbg !8869
  %add16 = fadd float %20, %mul15, !dbg !8869
  store float %add16, float* %sum_squared, align 4, !dbg !8869
  br label %for.inc, !dbg !8870

for.inc:                                          ; preds = %for.body12
  %21 = load i64, i64* %i, align 8, !dbg !8871
  %inc = add nsw i64 %21, 1, !dbg !8871
  store i64 %inc, i64* %i, align 8, !dbg !8871
  br label %for.cond6, !dbg !8872, !llvm.loop !8873

for.end:                                          ; preds = %for.cond6
  %22 = load %struct._SkipList*, %struct._SkipList** %list, align 8, !dbg !8875
  %nodes17 = getelementptr inbounds %struct._SkipList, %struct._SkipList* %22, i32 0, i32 1, !dbg !8876
  %23 = load %struct._ListNode*, %struct._ListNode** %nodes17, align 8, !dbg !8876
  %24 = load i64, i64* %color, align 8, !dbg !8877
  %arrayidx18 = getelementptr inbounds %struct._ListNode, %struct._ListNode* %23, i64 %24, !dbg !8875
  %count19 = getelementptr inbounds %struct._ListNode, %struct._ListNode* %arrayidx18, i32 0, i32 1, !dbg !8878
  %25 = load i64, i64* %count19, align 8, !dbg !8878
  %26 = load i64, i64* %count, align 8, !dbg !8879
  %add20 = add i64 %26, %25, !dbg !8879
  store i64 %add20, i64* %count, align 8, !dbg !8879
  br label %do.cond, !dbg !8880

do.cond:                                          ; preds = %for.end
  %27 = load i64, i64* %count, align 8, !dbg !8881
  %28 = load %struct._PixelList*, %struct._PixelList** %pixel_list.addr, align 8, !dbg !8882
  %length = getelementptr inbounds %struct._PixelList, %struct._PixelList* %28, i32 0, i32 0, !dbg !8883
  %29 = load i64, i64* %length, align 8, !dbg !8883
  %cmp21 = icmp slt i64 %27, %29, !dbg !8884
  br i1 %cmp21, label %do.body, label %do.end, !dbg !8880, !llvm.loop !8885

do.end:                                           ; preds = %do.cond
  %30 = load %struct._PixelList*, %struct._PixelList** %pixel_list.addr, align 8, !dbg !8887
  %length23 = getelementptr inbounds %struct._PixelList, %struct._PixelList* %30, i32 0, i32 0, !dbg !8888
  %31 = load i64, i64* %length23, align 8, !dbg !8888
  %conv24 = uitofp i64 %31 to float, !dbg !8887
  %32 = load float, float* %sum, align 4, !dbg !8889
  %div = fdiv float %32, %conv24, !dbg !8889
  store float %div, float* %sum, align 4, !dbg !8889
  %33 = load %struct._PixelList*, %struct._PixelList** %pixel_list.addr, align 8, !dbg !8890
  %length25 = getelementptr inbounds %struct._PixelList, %struct._PixelList* %33, i32 0, i32 0, !dbg !8891
  %34 = load i64, i64* %length25, align 8, !dbg !8891
  %conv26 = uitofp i64 %34 to float, !dbg !8890
  %35 = load float, float* %sum_squared, align 4, !dbg !8892
  %div27 = fdiv float %35, %conv26, !dbg !8892
  store float %div27, float* %sum_squared, align 4, !dbg !8892
  %36 = load float, float* %sum_squared, align 4, !dbg !8893
  %37 = load float, float* %sum, align 4, !dbg !8894
  %38 = load float, float* %sum, align 4, !dbg !8895
  %mul28 = fmul float %37, %38, !dbg !8896
  %sub = fsub float %36, %mul28, !dbg !8897
  %conv29 = fpext float %sub to double, !dbg !8893
  %call = call double @sqrt(double %conv29) #8, !dbg !8898
  %conv30 = fptoui double %call to i16, !dbg !8899
  %39 = load i64, i64* %channel, align 8, !dbg !8900
  %arrayidx31 = getelementptr inbounds [5 x i16], [5 x i16]* %channels, i64 0, i64 %39, !dbg !8901
  store i16 %conv30, i16* %arrayidx31, align 2, !dbg !8902
  br label %for.inc32, !dbg !8903

for.inc32:                                        ; preds = %do.end
  %40 = load i64, i64* %channel, align 8, !dbg !8904
  %inc33 = add nsw i64 %40, 1, !dbg !8904
  store i64 %inc33, i64* %channel, align 8, !dbg !8904
  br label %for.cond, !dbg !8905, !llvm.loop !8906

for.end34:                                        ; preds = %for.cond
  %arrayidx35 = getelementptr inbounds [5 x i16], [5 x i16]* %channels, i64 0, i64 0, !dbg !8908
  %41 = load i16, i16* %arrayidx35, align 2, !dbg !8908
  %call36 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %41), !dbg !8909
  %conv37 = uitofp i16 %call36 to float, !dbg !8910
  %42 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !8911
  %red = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %42, i32 0, i32 5, !dbg !8912
  store float %conv37, float* %red, align 8, !dbg !8913
  %arrayidx38 = getelementptr inbounds [5 x i16], [5 x i16]* %channels, i64 0, i64 1, !dbg !8914
  %43 = load i16, i16* %arrayidx38, align 2, !dbg !8914
  %call39 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %43), !dbg !8915
  %conv40 = uitofp i16 %call39 to float, !dbg !8916
  %44 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !8917
  %green = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %44, i32 0, i32 6, !dbg !8918
  store float %conv40, float* %green, align 4, !dbg !8919
  %arrayidx41 = getelementptr inbounds [5 x i16], [5 x i16]* %channels, i64 0, i64 2, !dbg !8920
  %45 = load i16, i16* %arrayidx41, align 2, !dbg !8920
  %call42 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %45), !dbg !8921
  %conv43 = uitofp i16 %call42 to float, !dbg !8922
  %46 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !8923
  %blue = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %46, i32 0, i32 7, !dbg !8924
  store float %conv43, float* %blue, align 8, !dbg !8925
  %arrayidx44 = getelementptr inbounds [5 x i16], [5 x i16]* %channels, i64 0, i64 3, !dbg !8926
  %47 = load i16, i16* %arrayidx44, align 2, !dbg !8926
  %call45 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %47), !dbg !8927
  %conv46 = uitofp i16 %call45 to float, !dbg !8928
  %48 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !8929
  %opacity = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %48, i32 0, i32 8, !dbg !8930
  store float %conv46, float* %opacity, align 4, !dbg !8931
  %arrayidx47 = getelementptr inbounds [5 x i16], [5 x i16]* %channels, i64 0, i64 4, !dbg !8932
  %49 = load i16, i16* %arrayidx47, align 2, !dbg !8932
  %call48 = call zeroext i16 @ScaleShortToQuantum(i16 zeroext %49), !dbg !8933
  %conv49 = uitofp i16 %call48 to float, !dbg !8934
  %50 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !8935
  %index = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %50, i32 0, i32 9, !dbg !8936
  store float %conv49, float* %index, align 8, !dbg !8937
  ret void, !dbg !8938
}

; Function Attrs: noinline nounwind uwtable
define internal %struct._PixelList** @DestroyPixelListThreadSet(%struct._PixelList** %pixel_list) #0 !dbg !8939 {
entry:
  %pixel_list.addr = alloca %struct._PixelList**, align 8
  %i = alloca i64, align 8
  store %struct._PixelList** %pixel_list, %struct._PixelList*** %pixel_list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelList*** %pixel_list.addr, metadata !8942, metadata !DIExpression()), !dbg !8943
  call void @llvm.dbg.declare(metadata i64* %i, metadata !8944, metadata !DIExpression()), !dbg !8945
  store i64 0, i64* %i, align 8, !dbg !8946
  br label %for.cond, !dbg !8948

for.cond:                                         ; preds = %for.inc, %entry
  %0 = load i64, i64* %i, align 8, !dbg !8949
  %call = call i64 @GetMagickResourceLimit(i32 6), !dbg !8951
  %cmp = icmp slt i64 %0, %call, !dbg !8952
  br i1 %cmp, label %for.body, label %for.end, !dbg !8953

for.body:                                         ; preds = %for.cond
  %1 = load %struct._PixelList**, %struct._PixelList*** %pixel_list.addr, align 8, !dbg !8954
  %2 = load i64, i64* %i, align 8, !dbg !8956
  %arrayidx = getelementptr inbounds %struct._PixelList*, %struct._PixelList** %1, i64 %2, !dbg !8954
  %3 = load %struct._PixelList*, %struct._PixelList** %arrayidx, align 8, !dbg !8954
  %cmp1 = icmp ne %struct._PixelList* %3, null, !dbg !8957
  br i1 %cmp1, label %if.then, label %if.end, !dbg !8958

if.then:                                          ; preds = %for.body
  %4 = load %struct._PixelList**, %struct._PixelList*** %pixel_list.addr, align 8, !dbg !8959
  %5 = load i64, i64* %i, align 8, !dbg !8960
  %arrayidx2 = getelementptr inbounds %struct._PixelList*, %struct._PixelList** %4, i64 %5, !dbg !8959
  %6 = load %struct._PixelList*, %struct._PixelList** %arrayidx2, align 8, !dbg !8959
  %call3 = call %struct._PixelList* @DestroyPixelList(%struct._PixelList* %6), !dbg !8961
  %7 = load %struct._PixelList**, %struct._PixelList*** %pixel_list.addr, align 8, !dbg !8962
  %8 = load i64, i64* %i, align 8, !dbg !8963
  %arrayidx4 = getelementptr inbounds %struct._PixelList*, %struct._PixelList** %7, i64 %8, !dbg !8962
  store %struct._PixelList* %call3, %struct._PixelList** %arrayidx4, align 8, !dbg !8964
  br label %if.end, !dbg !8962

if.end:                                           ; preds = %if.then, %for.body
  br label %for.inc, !dbg !8965

for.inc:                                          ; preds = %if.end
  %9 = load i64, i64* %i, align 8, !dbg !8966
  %inc = add nsw i64 %9, 1, !dbg !8966
  store i64 %inc, i64* %i, align 8, !dbg !8966
  br label %for.cond, !dbg !8967, !llvm.loop !8968

for.end:                                          ; preds = %for.cond
  %10 = load %struct._PixelList**, %struct._PixelList*** %pixel_list.addr, align 8, !dbg !8970
  %11 = bitcast %struct._PixelList** %10 to i8*, !dbg !8970
  %call5 = call i8* @RelinquishMagickMemory(i8* %11), !dbg !8971
  %12 = bitcast i8* %call5 to %struct._PixelList**, !dbg !8972
  store %struct._PixelList** %12, %struct._PixelList*** %pixel_list.addr, align 8, !dbg !8973
  %13 = load %struct._PixelList**, %struct._PixelList*** %pixel_list.addr, align 8, !dbg !8974
  ret %struct._PixelList** %13, !dbg !8975
}

declare dso_local i64 @GetMagickResourceLimit(i32) #2

; Function Attrs: allocsize(0,1)
declare dso_local i8* @AcquireAlignedMemory(i64, i64) #5

declare dso_local %struct._RandomInfo* @AcquireRandomInfo() #2

; Function Attrs: nounwind readnone speculatable willreturn
declare double @llvm.fabs.f64(double) #1

; Function Attrs: nounwind
declare dso_local double @cos(double) #4

; Function Attrs: nounwind
declare dso_local double @exp(double) #4

declare dso_local double @GenerateDifferentialNoise(%struct._RandomInfo*, i16 zeroext, i32, float) #2

; Function Attrs: nounwind
declare dso_local double @log(double) #4

; Function Attrs: nounwind
declare dso_local double @sin(double) #4

; Function Attrs: noinline nounwind uwtable
define internal float @MagickPixelIntensity(%struct._MagickPixelPacket* %pixel) #0 !dbg !8976 {
entry:
  %retval = alloca float, align 4
  %pixel.addr = alloca %struct._MagickPixelPacket*, align 8
  store %struct._MagickPixelPacket* %pixel, %struct._MagickPixelPacket** %pixel.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._MagickPixelPacket** %pixel.addr, metadata !8980, metadata !DIExpression()), !dbg !8981
  %0 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !8982
  %colorspace = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %0, i32 0, i32 1, !dbg !8984
  %1 = load i32, i32* %colorspace, align 4, !dbg !8984
  %cmp = icmp eq i32 %1, 2, !dbg !8985
  br i1 %cmp, label %if.then, label %if.end, !dbg !8986

if.then:                                          ; preds = %entry
  %2 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !8987
  %red = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %2, i32 0, i32 5, !dbg !8988
  %3 = load float, float* %red, align 8, !dbg !8988
  store float %3, float* %retval, align 4, !dbg !8989
  br label %return, !dbg !8989

if.end:                                           ; preds = %entry
  %4 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !8990
  %red1 = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %4, i32 0, i32 5, !dbg !8991
  %5 = load float, float* %red1, align 8, !dbg !8991
  %conv = fpext float %5 to double, !dbg !8990
  %mul = fmul double 2.126560e-01, %conv, !dbg !8992
  %6 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !8993
  %green = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %6, i32 0, i32 6, !dbg !8994
  %7 = load float, float* %green, align 4, !dbg !8994
  %conv2 = fpext float %7 to double, !dbg !8993
  %mul3 = fmul double 0x3FE6E29307AF20EA, %conv2, !dbg !8995
  %add = fadd double %mul, %mul3, !dbg !8996
  %8 = load %struct._MagickPixelPacket*, %struct._MagickPixelPacket** %pixel.addr, align 8, !dbg !8997
  %blue = getelementptr inbounds %struct._MagickPixelPacket, %struct._MagickPixelPacket* %8, i32 0, i32 7, !dbg !8998
  %9 = load float, float* %blue, align 8, !dbg !8998
  %conv4 = fpext float %9 to double, !dbg !8997
  %mul5 = fmul double 7.218600e-02, %conv4, !dbg !8999
  %add6 = fadd double %add, %mul5, !dbg !9000
  %conv7 = fptrunc double %add6 to float, !dbg !9001
  store float %conv7, float* %retval, align 4, !dbg !9002
  br label %return, !dbg !9002

return:                                           ; preds = %if.end, %if.then
  %10 = load float, float* %retval, align 4, !dbg !9003
  ret float %10, !dbg !9003
}

declare dso_local i64 @FormatLocaleString(i8*, i64, i8*, ...) #2

declare dso_local %struct._RandomInfo* @DestroyRandomInfo(%struct._RandomInfo*) #2

declare dso_local i8* @RelinquishAlignedMemory(i8*) #2

; Function Attrs: nounwind
declare dso_local double @asin(double) #4

; Function Attrs: nounwind
declare dso_local double @log10(double) #4

; Function Attrs: noinline nounwind uwtable
define internal %struct._PixelList* @AcquirePixelList(i64 %width, i64 %height) #0 !dbg !9004 {
entry:
  %retval = alloca %struct._PixelList*, align 8
  %width.addr = alloca i64, align 8
  %height.addr = alloca i64, align 8
  %pixel_list = alloca %struct._PixelList*, align 8
  %i = alloca i64, align 8
  store i64 %width, i64* %width.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %width.addr, metadata !9007, metadata !DIExpression()), !dbg !9008
  store i64 %height, i64* %height.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %height.addr, metadata !9009, metadata !DIExpression()), !dbg !9010
  call void @llvm.dbg.declare(metadata %struct._PixelList** %pixel_list, metadata !9011, metadata !DIExpression()), !dbg !9012
  call void @llvm.dbg.declare(metadata i64* %i, metadata !9013, metadata !DIExpression()), !dbg !9014
  %call = call i8* @AcquireMagickMemory(i64 104) #9, !dbg !9015
  %0 = bitcast i8* %call to %struct._PixelList*, !dbg !9016
  store %struct._PixelList* %0, %struct._PixelList** %pixel_list, align 8, !dbg !9017
  %1 = load %struct._PixelList*, %struct._PixelList** %pixel_list, align 8, !dbg !9018
  %cmp = icmp eq %struct._PixelList* %1, null, !dbg !9020
  br i1 %cmp, label %if.then, label %if.end, !dbg !9021

if.then:                                          ; preds = %entry
  %2 = load %struct._PixelList*, %struct._PixelList** %pixel_list, align 8, !dbg !9022
  store %struct._PixelList* %2, %struct._PixelList** %retval, align 8, !dbg !9023
  br label %return, !dbg !9023

if.end:                                           ; preds = %entry
  %3 = load %struct._PixelList*, %struct._PixelList** %pixel_list, align 8, !dbg !9024
  %4 = bitcast %struct._PixelList* %3 to i8*, !dbg !9025
  %call1 = call i8* @ResetMagickMemory(i8* %4, i32 0, i64 104), !dbg !9026
  %5 = load i64, i64* %width.addr, align 8, !dbg !9027
  %6 = load i64, i64* %height.addr, align 8, !dbg !9028
  %mul = mul i64 %5, %6, !dbg !9029
  %7 = load %struct._PixelList*, %struct._PixelList** %pixel_list, align 8, !dbg !9030
  %length = getelementptr inbounds %struct._PixelList, %struct._PixelList* %7, i32 0, i32 0, !dbg !9031
  store i64 %mul, i64* %length, align 8, !dbg !9032
  store i64 0, i64* %i, align 8, !dbg !9033
  br label %for.cond, !dbg !9035

for.cond:                                         ; preds = %for.inc, %if.end
  %8 = load i64, i64* %i, align 8, !dbg !9036
  %cmp2 = icmp slt i64 %8, 5, !dbg !9038
  br i1 %cmp2, label %for.body, label %for.end, !dbg !9039

for.body:                                         ; preds = %for.cond
  %call3 = call i8* @AcquireQuantumMemory(i64 65537, i64 88) #7, !dbg !9040
  %9 = bitcast i8* %call3 to %struct._ListNode*, !dbg !9042
  %10 = load %struct._PixelList*, %struct._PixelList** %pixel_list, align 8, !dbg !9043
  %lists = getelementptr inbounds %struct._PixelList, %struct._PixelList* %10, i32 0, i32 3, !dbg !9044
  %11 = load i64, i64* %i, align 8, !dbg !9045
  %arrayidx = getelementptr inbounds [5 x %struct._SkipList], [5 x %struct._SkipList]* %lists, i64 0, i64 %11, !dbg !9043
  %nodes = getelementptr inbounds %struct._SkipList, %struct._SkipList* %arrayidx, i32 0, i32 1, !dbg !9046
  store %struct._ListNode* %9, %struct._ListNode** %nodes, align 8, !dbg !9047
  %12 = load %struct._PixelList*, %struct._PixelList** %pixel_list, align 8, !dbg !9048
  %lists4 = getelementptr inbounds %struct._PixelList, %struct._PixelList* %12, i32 0, i32 3, !dbg !9050
  %13 = load i64, i64* %i, align 8, !dbg !9051
  %arrayidx5 = getelementptr inbounds [5 x %struct._SkipList], [5 x %struct._SkipList]* %lists4, i64 0, i64 %13, !dbg !9048
  %nodes6 = getelementptr inbounds %struct._SkipList, %struct._SkipList* %arrayidx5, i32 0, i32 1, !dbg !9052
  %14 = load %struct._ListNode*, %struct._ListNode** %nodes6, align 8, !dbg !9052
  %cmp7 = icmp eq %struct._ListNode* %14, null, !dbg !9053
  br i1 %cmp7, label %if.then8, label %if.end10, !dbg !9054

if.then8:                                         ; preds = %for.body
  %15 = load %struct._PixelList*, %struct._PixelList** %pixel_list, align 8, !dbg !9055
  %call9 = call %struct._PixelList* @DestroyPixelList(%struct._PixelList* %15), !dbg !9056
  store %struct._PixelList* %call9, %struct._PixelList** %retval, align 8, !dbg !9057
  br label %return, !dbg !9057

if.end10:                                         ; preds = %for.body
  %16 = load %struct._PixelList*, %struct._PixelList** %pixel_list, align 8, !dbg !9058
  %lists11 = getelementptr inbounds %struct._PixelList, %struct._PixelList* %16, i32 0, i32 3, !dbg !9059
  %17 = load i64, i64* %i, align 8, !dbg !9060
  %arrayidx12 = getelementptr inbounds [5 x %struct._SkipList], [5 x %struct._SkipList]* %lists11, i64 0, i64 %17, !dbg !9058
  %nodes13 = getelementptr inbounds %struct._SkipList, %struct._SkipList* %arrayidx12, i32 0, i32 1, !dbg !9061
  %18 = load %struct._ListNode*, %struct._ListNode** %nodes13, align 8, !dbg !9061
  %19 = bitcast %struct._ListNode* %18 to i8*, !dbg !9058
  %call14 = call i8* @ResetMagickMemory(i8* %19, i32 0, i64 5767256), !dbg !9062
  br label %for.inc, !dbg !9063

for.inc:                                          ; preds = %if.end10
  %20 = load i64, i64* %i, align 8, !dbg !9064
  %inc = add nsw i64 %20, 1, !dbg !9064
  store i64 %inc, i64* %i, align 8, !dbg !9064
  br label %for.cond, !dbg !9065, !llvm.loop !9066

for.end:                                          ; preds = %for.cond
  %21 = load %struct._PixelList*, %struct._PixelList** %pixel_list, align 8, !dbg !9068
  %signature = getelementptr inbounds %struct._PixelList, %struct._PixelList* %21, i32 0, i32 2, !dbg !9069
  store i64 2880220587, i64* %signature, align 8, !dbg !9070
  %22 = load %struct._PixelList*, %struct._PixelList** %pixel_list, align 8, !dbg !9071
  store %struct._PixelList* %22, %struct._PixelList** %retval, align 8, !dbg !9072
  br label %return, !dbg !9072

return:                                           ; preds = %for.end, %if.then8, %if.then
  %23 = load %struct._PixelList*, %struct._PixelList** %retval, align 8, !dbg !9073
  ret %struct._PixelList* %23, !dbg !9073
}

; Function Attrs: allocsize(0)
declare dso_local i8* @AcquireMagickMemory(i64) #6

; Function Attrs: noinline nounwind uwtable
define internal %struct._PixelList* @DestroyPixelList(%struct._PixelList* %pixel_list) #0 !dbg !9074 {
entry:
  %retval = alloca %struct._PixelList*, align 8
  %pixel_list.addr = alloca %struct._PixelList*, align 8
  %i = alloca i64, align 8
  store %struct._PixelList* %pixel_list, %struct._PixelList** %pixel_list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelList** %pixel_list.addr, metadata !9077, metadata !DIExpression()), !dbg !9078
  call void @llvm.dbg.declare(metadata i64* %i, metadata !9079, metadata !DIExpression()), !dbg !9080
  %0 = load %struct._PixelList*, %struct._PixelList** %pixel_list.addr, align 8, !dbg !9081
  %cmp = icmp eq %struct._PixelList* %0, null, !dbg !9083
  br i1 %cmp, label %if.then, label %if.end, !dbg !9084

if.then:                                          ; preds = %entry
  store %struct._PixelList* null, %struct._PixelList** %retval, align 8, !dbg !9085
  br label %return, !dbg !9085

if.end:                                           ; preds = %entry
  store i64 0, i64* %i, align 8, !dbg !9086
  br label %for.cond, !dbg !9088

for.cond:                                         ; preds = %for.inc, %if.end
  %1 = load i64, i64* %i, align 8, !dbg !9089
  %cmp1 = icmp slt i64 %1, 5, !dbg !9091
  br i1 %cmp1, label %for.body, label %for.end, !dbg !9092

for.body:                                         ; preds = %for.cond
  %2 = load %struct._PixelList*, %struct._PixelList** %pixel_list.addr, align 8, !dbg !9093
  %lists = getelementptr inbounds %struct._PixelList, %struct._PixelList* %2, i32 0, i32 3, !dbg !9095
  %3 = load i64, i64* %i, align 8, !dbg !9096
  %arrayidx = getelementptr inbounds [5 x %struct._SkipList], [5 x %struct._SkipList]* %lists, i64 0, i64 %3, !dbg !9093
  %nodes = getelementptr inbounds %struct._SkipList, %struct._SkipList* %arrayidx, i32 0, i32 1, !dbg !9097
  %4 = load %struct._ListNode*, %struct._ListNode** %nodes, align 8, !dbg !9097
  %cmp2 = icmp ne %struct._ListNode* %4, null, !dbg !9098
  br i1 %cmp2, label %if.then3, label %if.end10, !dbg !9099

if.then3:                                         ; preds = %for.body
  %5 = load %struct._PixelList*, %struct._PixelList** %pixel_list.addr, align 8, !dbg !9100
  %lists4 = getelementptr inbounds %struct._PixelList, %struct._PixelList* %5, i32 0, i32 3, !dbg !9101
  %6 = load i64, i64* %i, align 8, !dbg !9102
  %arrayidx5 = getelementptr inbounds [5 x %struct._SkipList], [5 x %struct._SkipList]* %lists4, i64 0, i64 %6, !dbg !9100
  %nodes6 = getelementptr inbounds %struct._SkipList, %struct._SkipList* %arrayidx5, i32 0, i32 1, !dbg !9103
  %7 = load %struct._ListNode*, %struct._ListNode** %nodes6, align 8, !dbg !9103
  %8 = bitcast %struct._ListNode* %7 to i8*, !dbg !9100
  %call = call i8* @RelinquishMagickMemory(i8* %8), !dbg !9104
  %9 = bitcast i8* %call to %struct._ListNode*, !dbg !9105
  %10 = load %struct._PixelList*, %struct._PixelList** %pixel_list.addr, align 8, !dbg !9106
  %lists7 = getelementptr inbounds %struct._PixelList, %struct._PixelList* %10, i32 0, i32 3, !dbg !9107
  %11 = load i64, i64* %i, align 8, !dbg !9108
  %arrayidx8 = getelementptr inbounds [5 x %struct._SkipList], [5 x %struct._SkipList]* %lists7, i64 0, i64 %11, !dbg !9106
  %nodes9 = getelementptr inbounds %struct._SkipList, %struct._SkipList* %arrayidx8, i32 0, i32 1, !dbg !9109
  store %struct._ListNode* %9, %struct._ListNode** %nodes9, align 8, !dbg !9110
  br label %if.end10, !dbg !9106

if.end10:                                         ; preds = %if.then3, %for.body
  br label %for.inc, !dbg !9111

for.inc:                                          ; preds = %if.end10
  %12 = load i64, i64* %i, align 8, !dbg !9112
  %inc = add nsw i64 %12, 1, !dbg !9112
  store i64 %inc, i64* %i, align 8, !dbg !9112
  br label %for.cond, !dbg !9113, !llvm.loop !9114

for.end:                                          ; preds = %for.cond
  %13 = load %struct._PixelList*, %struct._PixelList** %pixel_list.addr, align 8, !dbg !9116
  %14 = bitcast %struct._PixelList* %13 to i8*, !dbg !9116
  %call11 = call i8* @RelinquishMagickMemory(i8* %14), !dbg !9117
  %15 = bitcast i8* %call11 to %struct._PixelList*, !dbg !9118
  store %struct._PixelList* %15, %struct._PixelList** %pixel_list.addr, align 8, !dbg !9119
  %16 = load %struct._PixelList*, %struct._PixelList** %pixel_list.addr, align 8, !dbg !9120
  store %struct._PixelList* %16, %struct._PixelList** %retval, align 8, !dbg !9121
  br label %return, !dbg !9121

return:                                           ; preds = %for.end, %if.then
  %17 = load %struct._PixelList*, %struct._PixelList** %retval, align 8, !dbg !9122
  ret %struct._PixelList* %17, !dbg !9122
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i16 @ScaleQuantumToShort(i16 zeroext %quantum) #0 !dbg !9123 {
entry:
  %quantum.addr = alloca i16, align 2
  store i16 %quantum, i16* %quantum.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %quantum.addr, metadata !9126, metadata !DIExpression()), !dbg !9127
  %0 = load i16, i16* %quantum.addr, align 2, !dbg !9128
  ret i16 %0, !dbg !9129
}

; Function Attrs: noinline nounwind uwtable
define internal void @AddNodePixelList(%struct._PixelList* %pixel_list, i64 %channel, i64 %color) #0 !dbg !9130 {
entry:
  %pixel_list.addr = alloca %struct._PixelList*, align 8
  %channel.addr = alloca i64, align 8
  %color.addr = alloca i64, align 8
  %list = alloca %struct._SkipList*, align 8
  %level = alloca i64, align 8
  %search = alloca i64, align 8
  %update = alloca [9 x i64], align 16
  store %struct._PixelList* %pixel_list, %struct._PixelList** %pixel_list.addr, align 8
  call void @llvm.dbg.declare(metadata %struct._PixelList** %pixel_list.addr, metadata !9134, metadata !DIExpression()), !dbg !9135
  store i64 %channel, i64* %channel.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %channel.addr, metadata !9136, metadata !DIExpression()), !dbg !9137
  store i64 %color, i64* %color.addr, align 8
  call void @llvm.dbg.declare(metadata i64* %color.addr, metadata !9138, metadata !DIExpression()), !dbg !9139
  call void @llvm.dbg.declare(metadata %struct._SkipList** %list, metadata !9140, metadata !DIExpression()), !dbg !9141
  call void @llvm.dbg.declare(metadata i64* %level, metadata !9142, metadata !DIExpression()), !dbg !9143
  call void @llvm.dbg.declare(metadata i64* %search, metadata !9144, metadata !DIExpression()), !dbg !9145
  call void @llvm.dbg.declare(metadata [9 x i64]* %update, metadata !9146, metadata !DIExpression()), !dbg !9147
  %0 = load %struct._PixelList*, %struct._PixelList** %pixel_list.addr, align 8, !dbg !9148
  %lists = getelementptr inbounds %struct._PixelList, %struct._PixelList* %0, i32 0, i32 3, !dbg !9149
  %arraydecay = getelementptr inbounds [5 x %struct._SkipList], [5 x %struct._SkipList]* %lists, i64 0, i64 0, !dbg !9148
  %1 = load i64, i64* %channel.addr, align 8, !dbg !9150
  %add.ptr = getelementptr inbounds %struct._SkipList, %struct._SkipList* %arraydecay, i64 %1, !dbg !9151
  store %struct._SkipList* %add.ptr, %struct._SkipList** %list, align 8, !dbg !9152
  %2 = load %struct._PixelList*, %struct._PixelList** %pixel_list.addr, align 8, !dbg !9153
  %signature = getelementptr inbounds %struct._PixelList, %struct._PixelList* %2, i32 0, i32 2, !dbg !9154
  %3 = load i64, i64* %signature, align 8, !dbg !9154
  %4 = load %struct._SkipList*, %struct._SkipList** %list, align 8, !dbg !9155
  %nodes = getelementptr inbounds %struct._SkipList, %struct._SkipList* %4, i32 0, i32 1, !dbg !9156
  %5 = load %struct._ListNode*, %struct._ListNode** %nodes, align 8, !dbg !9156
  %6 = load i64, i64* %color.addr, align 8, !dbg !9157
  %arrayidx = getelementptr inbounds %struct._ListNode, %struct._ListNode* %5, i64 %6, !dbg !9155
  %signature1 = getelementptr inbounds %struct._ListNode, %struct._ListNode* %arrayidx, i32 0, i32 2, !dbg !9158
  store i64 %3, i64* %signature1, align 8, !dbg !9159
  %7 = load %struct._SkipList*, %struct._SkipList** %list, align 8, !dbg !9160
  %nodes2 = getelementptr inbounds %struct._SkipList, %struct._SkipList* %7, i32 0, i32 1, !dbg !9161
  %8 = load %struct._ListNode*, %struct._ListNode** %nodes2, align 8, !dbg !9161
  %9 = load i64, i64* %color.addr, align 8, !dbg !9162
  %arrayidx3 = getelementptr inbounds %struct._ListNode, %struct._ListNode* %8, i64 %9, !dbg !9160
  %count = getelementptr inbounds %struct._ListNode, %struct._ListNode* %arrayidx3, i32 0, i32 1, !dbg !9163
  store i64 1, i64* %count, align 8, !dbg !9164
  store i64 65536, i64* %search, align 8, !dbg !9165
  %10 = load %struct._SkipList*, %struct._SkipList** %list, align 8, !dbg !9166
  %level4 = getelementptr inbounds %struct._SkipList, %struct._SkipList* %10, i32 0, i32 0, !dbg !9168
  %11 = load i64, i64* %level4, align 8, !dbg !9168
  store i64 %11, i64* %level, align 8, !dbg !9169
  br label %for.cond, !dbg !9170

for.cond:                                         ; preds = %for.inc, %entry
  %12 = load i64, i64* %level, align 8, !dbg !9171
  %cmp = icmp sge i64 %12, 0, !dbg !9173
  br i1 %cmp, label %for.body, label %for.end, !dbg !9174

for.body:                                         ; preds = %for.cond
  br label %while.cond, !dbg !9175

while.cond:                                       ; preds = %while.body, %for.body
  %13 = load %struct._SkipList*, %struct._SkipList** %list, align 8, !dbg !9177
  %nodes5 = getelementptr inbounds %struct._SkipList, %struct._SkipList* %13, i32 0, i32 1, !dbg !9178
  %14 = load %struct._ListNode*, %struct._ListNode** %nodes5, align 8, !dbg !9178
  %15 = load i64, i64* %search, align 8, !dbg !9179
  %arrayidx6 = getelementptr inbounds %struct._ListNode, %struct._ListNode* %14, i64 %15, !dbg !9177
  %next = getelementptr inbounds %struct._ListNode, %struct._ListNode* %arrayidx6, i32 0, i32 0, !dbg !9180
  %16 = load i64, i64* %level, align 8, !dbg !9181
  %arrayidx7 = getelementptr inbounds [9 x i64], [9 x i64]* %next, i64 0, i64 %16, !dbg !9177
  %17 = load i64, i64* %arrayidx7, align 8, !dbg !9177
  %18 = load i64, i64* %color.addr, align 8, !dbg !9182
  %cmp8 = icmp ult i64 %17, %18, !dbg !9183
  br i1 %cmp8, label %while.body, label %while.end, !dbg !9175

while.body:                                       ; preds = %while.cond
  %19 = load %struct._SkipList*, %struct._SkipList** %list, align 8, !dbg !9184
  %nodes9 = getelementptr inbounds %struct._SkipList, %struct._SkipList* %19, i32 0, i32 1, !dbg !9185
  %20 = load %struct._ListNode*, %struct._ListNode** %nodes9, align 8, !dbg !9185
  %21 = load i64, i64* %search, align 8, !dbg !9186
  %arrayidx10 = getelementptr inbounds %struct._ListNode, %struct._ListNode* %20, i64 %21, !dbg !9184
  %next11 = getelementptr inbounds %struct._ListNode, %struct._ListNode* %arrayidx10, i32 0, i32 0, !dbg !9187
  %22 = load i64, i64* %level, align 8, !dbg !9188
  %arrayidx12 = getelementptr inbounds [9 x i64], [9 x i64]* %next11, i64 0, i64 %22, !dbg !9184
  %23 = load i64, i64* %arrayidx12, align 8, !dbg !9184
  store i64 %23, i64* %search, align 8, !dbg !9189
  br label %while.cond, !dbg !9175, !llvm.loop !9190

while.end:                                        ; preds = %while.cond
  %24 = load i64, i64* %search, align 8, !dbg !9192
  %25 = load i64, i64* %level, align 8, !dbg !9193
  %arrayidx13 = getelementptr inbounds [9 x i64], [9 x i64]* %update, i64 0, i64 %25, !dbg !9194
  store i64 %24, i64* %arrayidx13, align 8, !dbg !9195
  br label %for.inc, !dbg !9196

for.inc:                                          ; preds = %while.end
  %26 = load i64, i64* %level, align 8, !dbg !9197
  %dec = add nsw i64 %26, -1, !dbg !9197
  store i64 %dec, i64* %level, align 8, !dbg !9197
  br label %for.cond, !dbg !9198, !llvm.loop !9199

for.end:                                          ; preds = %for.cond
  store i64 0, i64* %level, align 8, !dbg !9201
  br label %for.cond14, !dbg !9203

for.cond14:                                       ; preds = %for.inc18, %for.end
  %27 = load %struct._PixelList*, %struct._PixelList** %pixel_list.addr, align 8, !dbg !9204
  %seed = getelementptr inbounds %struct._PixelList, %struct._PixelList* %27, i32 0, i32 1, !dbg !9207
  %28 = load i64, i64* %seed, align 8, !dbg !9207
  %mul = mul i64 %28, 42893621, !dbg !9208
  %add = add i64 %mul, 1, !dbg !9209
  %29 = load %struct._PixelList*, %struct._PixelList** %pixel_list.addr, align 8, !dbg !9210
  %seed15 = getelementptr inbounds %struct._PixelList, %struct._PixelList* %29, i32 0, i32 1, !dbg !9211
  store i64 %add, i64* %seed15, align 8, !dbg !9212
  %30 = load %struct._PixelList*, %struct._PixelList** %pixel_list.addr, align 8, !dbg !9213
  %seed16 = getelementptr inbounds %struct._PixelList, %struct._PixelList* %30, i32 0, i32 1, !dbg !9215
  %31 = load i64, i64* %seed16, align 8, !dbg !9215
  %and = and i64 %31, 768, !dbg !9216
  %cmp17 = icmp ne i64 %and, 768, !dbg !9217
  br i1 %cmp17, label %if.then, label %if.end, !dbg !9218

if.then:                                          ; preds = %for.cond14
  br label %for.end19, !dbg !9219

if.end:                                           ; preds = %for.cond14
  br label %for.inc18, !dbg !9220

for.inc18:                                        ; preds = %if.end
  %32 = load i64, i64* %level, align 8, !dbg !9221
  %inc = add nsw i64 %32, 1, !dbg !9221
  store i64 %inc, i64* %level, align 8, !dbg !9221
  br label %for.cond14, !dbg !9222, !llvm.loop !9223

for.end19:                                        ; preds = %if.then
  %33 = load i64, i64* %level, align 8, !dbg !9226
  %cmp20 = icmp sgt i64 %33, 8, !dbg !9228
  br i1 %cmp20, label %if.then21, label %if.end22, !dbg !9229

if.then21:                                        ; preds = %for.end19
  store i64 8, i64* %level, align 8, !dbg !9230
  br label %if.end22, !dbg !9231

if.end22:                                         ; preds = %if.then21, %for.end19
  %34 = load i64, i64* %level, align 8, !dbg !9232
  %35 = load %struct._SkipList*, %struct._SkipList** %list, align 8, !dbg !9234
  %level23 = getelementptr inbounds %struct._SkipList, %struct._SkipList* %35, i32 0, i32 0, !dbg !9235
  %36 = load i64, i64* %level23, align 8, !dbg !9235
  %add24 = add nsw i64 %36, 2, !dbg !9236
  %cmp25 = icmp sgt i64 %34, %add24, !dbg !9237
  br i1 %cmp25, label %if.then26, label %if.end29, !dbg !9238

if.then26:                                        ; preds = %if.end22
  %37 = load %struct._SkipList*, %struct._SkipList** %list, align 8, !dbg !9239
  %level27 = getelementptr inbounds %struct._SkipList, %struct._SkipList* %37, i32 0, i32 0, !dbg !9240
  %38 = load i64, i64* %level27, align 8, !dbg !9240
  %add28 = add nsw i64 %38, 2, !dbg !9241
  store i64 %add28, i64* %level, align 8, !dbg !9242
  br label %if.end29, !dbg !9243

if.end29:                                         ; preds = %if.then26, %if.end22
  br label %while.cond30, !dbg !9244

while.cond30:                                     ; preds = %while.body33, %if.end29
  %39 = load i64, i64* %level, align 8, !dbg !9245
  %40 = load %struct._SkipList*, %struct._SkipList** %list, align 8, !dbg !9246
  %level31 = getelementptr inbounds %struct._SkipList, %struct._SkipList* %40, i32 0, i32 0, !dbg !9247
  %41 = load i64, i64* %level31, align 8, !dbg !9247
  %cmp32 = icmp sgt i64 %39, %41, !dbg !9248
  br i1 %cmp32, label %while.body33, label %while.end38, !dbg !9244

while.body33:                                     ; preds = %while.cond30
  %42 = load %struct._SkipList*, %struct._SkipList** %list, align 8, !dbg !9249
  %level34 = getelementptr inbounds %struct._SkipList, %struct._SkipList* %42, i32 0, i32 0, !dbg !9251
  %43 = load i64, i64* %level34, align 8, !dbg !9252
  %inc35 = add nsw i64 %43, 1, !dbg !9252
  store i64 %inc35, i64* %level34, align 8, !dbg !9252
  %44 = load %struct._SkipList*, %struct._SkipList** %list, align 8, !dbg !9253
  %level36 = getelementptr inbounds %struct._SkipList, %struct._SkipList* %44, i32 0, i32 0, !dbg !9254
  %45 = load i64, i64* %level36, align 8, !dbg !9254
  %arrayidx37 = getelementptr inbounds [9 x i64], [9 x i64]* %update, i64 0, i64 %45, !dbg !9255
  store i64 65536, i64* %arrayidx37, align 8, !dbg !9256
  br label %while.cond30, !dbg !9244, !llvm.loop !9257

while.end38:                                      ; preds = %while.cond30
  br label %do.body, !dbg !9259

do.body:                                          ; preds = %do.cond, %while.end38
  %46 = load %struct._SkipList*, %struct._SkipList** %list, align 8, !dbg !9260
  %nodes39 = getelementptr inbounds %struct._SkipList, %struct._SkipList* %46, i32 0, i32 1, !dbg !9262
  %47 = load %struct._ListNode*, %struct._ListNode** %nodes39, align 8, !dbg !9262
  %48 = load i64, i64* %level, align 8, !dbg !9263
  %arrayidx40 = getelementptr inbounds [9 x i64], [9 x i64]* %update, i64 0, i64 %48, !dbg !9264
  %49 = load i64, i64* %arrayidx40, align 8, !dbg !9264
  %arrayidx41 = getelementptr inbounds %struct._ListNode, %struct._ListNode* %47, i64 %49, !dbg !9260
  %next42 = getelementptr inbounds %struct._ListNode, %struct._ListNode* %arrayidx41, i32 0, i32 0, !dbg !9265
  %50 = load i64, i64* %level, align 8, !dbg !9266
  %arrayidx43 = getelementptr inbounds [9 x i64], [9 x i64]* %next42, i64 0, i64 %50, !dbg !9260
  %51 = load i64, i64* %arrayidx43, align 8, !dbg !9260
  %52 = load %struct._SkipList*, %struct._SkipList** %list, align 8, !dbg !9267
  %nodes44 = getelementptr inbounds %struct._SkipList, %struct._SkipList* %52, i32 0, i32 1, !dbg !9268
  %53 = load %struct._ListNode*, %struct._ListNode** %nodes44, align 8, !dbg !9268
  %54 = load i64, i64* %color.addr, align 8, !dbg !9269
  %arrayidx45 = getelementptr inbounds %struct._ListNode, %struct._ListNode* %53, i64 %54, !dbg !9267
  %next46 = getelementptr inbounds %struct._ListNode, %struct._ListNode* %arrayidx45, i32 0, i32 0, !dbg !9270
  %55 = load i64, i64* %level, align 8, !dbg !9271
  %arrayidx47 = getelementptr inbounds [9 x i64], [9 x i64]* %next46, i64 0, i64 %55, !dbg !9267
  store i64 %51, i64* %arrayidx47, align 8, !dbg !9272
  %56 = load i64, i64* %color.addr, align 8, !dbg !9273
  %57 = load %struct._SkipList*, %struct._SkipList** %list, align 8, !dbg !9274
  %nodes48 = getelementptr inbounds %struct._SkipList, %struct._SkipList* %57, i32 0, i32 1, !dbg !9275
  %58 = load %struct._ListNode*, %struct._ListNode** %nodes48, align 8, !dbg !9275
  %59 = load i64, i64* %level, align 8, !dbg !9276
  %arrayidx49 = getelementptr inbounds [9 x i64], [9 x i64]* %update, i64 0, i64 %59, !dbg !9277
  %60 = load i64, i64* %arrayidx49, align 8, !dbg !9277
  %arrayidx50 = getelementptr inbounds %struct._ListNode, %struct._ListNode* %58, i64 %60, !dbg !9274
  %next51 = getelementptr inbounds %struct._ListNode, %struct._ListNode* %arrayidx50, i32 0, i32 0, !dbg !9278
  %61 = load i64, i64* %level, align 8, !dbg !9279
  %arrayidx52 = getelementptr inbounds [9 x i64], [9 x i64]* %next51, i64 0, i64 %61, !dbg !9274
  store i64 %56, i64* %arrayidx52, align 8, !dbg !9280
  br label %do.cond, !dbg !9281

do.cond:                                          ; preds = %do.body
  %62 = load i64, i64* %level, align 8, !dbg !9282
  %dec53 = add nsw i64 %62, -1, !dbg !9282
  store i64 %dec53, i64* %level, align 8, !dbg !9282
  %cmp54 = icmp sgt i64 %62, 0, !dbg !9283
  br i1 %cmp54, label %do.body, label %do.end, !dbg !9281, !llvm.loop !9284

do.end:                                           ; preds = %do.cond
  ret void, !dbg !9286
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i16 @ScaleShortToQuantum(i16 zeroext %value) #0 !dbg !9287 {
entry:
  %value.addr = alloca i16, align 2
  store i16 %value, i16* %value.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %value.addr, metadata !9291, metadata !DIExpression()), !dbg !9292
  %0 = load i16, i16* %value.addr, align 2, !dbg !9293
  ret i16 %0, !dbg !9294
}

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind willreturn }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { allocsize(0,1) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { allocsize(0) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { allocsize(0,1) }
attributes #8 = { nounwind }
attributes #9 = { allocsize(0) }

!llvm.dbg.cu = !{!0}
!llvm.module.flags = !{!815, !816, !817}
!llvm.ident = !{!818}

!0 = distinct !DICompileUnit(language: DW_LANG_C99, file: !1, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !2, retainedTypes: !491, splitDebugInlining: false, nameTableKind: None)
!1 = !DIFile(filename: "magick/statistic.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!2 = !{!3, !9, !14, !51, !76, !88, !96, !101, !136, !146, !152, !167, !238, !246, !252, !325, !342, !356, !368, !403, !425, !450, !457, !468, !480}
!3 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 211, baseType: !5, size: 32, elements: !6)
!4 = !DIFile(filename: "./magick/magick-type.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!5 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!6 = !{!7, !8}
!7 = !DIEnumerator(name: "MagickFalse", value: 0, isUnsigned: true)
!8 = !DIEnumerator(name: "MagickTrue", value: 1, isUnsigned: true)
!9 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 204, baseType: !5, size: 32, elements: !10)
!10 = !{!11, !12, !13}
!11 = !DIEnumerator(name: "UndefinedClass", value: 0, isUnsigned: true)
!12 = !DIEnumerator(name: "DirectClass", value: 1, isUnsigned: true)
!13 = !DIEnumerator(name: "PseudoClass", value: 2, isUnsigned: true)
!14 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !15, line: 25, baseType: !5, size: 32, elements: !16)
!15 = !DIFile(filename: "./magick/colorspace.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!16 = !{!17, !18, !19, !20, !21, !22, !23, !24, !25, !26, !27, !28, !29, !30, !31, !32, !33, !34, !35, !36, !37, !38, !39, !40, !41, !42, !43, !44, !45, !46, !47, !48, !49, !50}
!17 = !DIEnumerator(name: "UndefinedColorspace", value: 0, isUnsigned: true)
!18 = !DIEnumerator(name: "RGBColorspace", value: 1, isUnsigned: true)
!19 = !DIEnumerator(name: "GRAYColorspace", value: 2, isUnsigned: true)
!20 = !DIEnumerator(name: "TransparentColorspace", value: 3, isUnsigned: true)
!21 = !DIEnumerator(name: "OHTAColorspace", value: 4, isUnsigned: true)
!22 = !DIEnumerator(name: "LabColorspace", value: 5, isUnsigned: true)
!23 = !DIEnumerator(name: "XYZColorspace", value: 6, isUnsigned: true)
!24 = !DIEnumerator(name: "YCbCrColorspace", value: 7, isUnsigned: true)
!25 = !DIEnumerator(name: "YCCColorspace", value: 8, isUnsigned: true)
!26 = !DIEnumerator(name: "YIQColorspace", value: 9, isUnsigned: true)
!27 = !DIEnumerator(name: "YPbPrColorspace", value: 10, isUnsigned: true)
!28 = !DIEnumerator(name: "YUVColorspace", value: 11, isUnsigned: true)
!29 = !DIEnumerator(name: "CMYKColorspace", value: 12, isUnsigned: true)
!30 = !DIEnumerator(name: "sRGBColorspace", value: 13, isUnsigned: true)
!31 = !DIEnumerator(name: "HSBColorspace", value: 14, isUnsigned: true)
!32 = !DIEnumerator(name: "HSLColorspace", value: 15, isUnsigned: true)
!33 = !DIEnumerator(name: "HWBColorspace", value: 16, isUnsigned: true)
!34 = !DIEnumerator(name: "Rec601LumaColorspace", value: 17, isUnsigned: true)
!35 = !DIEnumerator(name: "Rec601YCbCrColorspace", value: 18, isUnsigned: true)
!36 = !DIEnumerator(name: "Rec709LumaColorspace", value: 19, isUnsigned: true)
!37 = !DIEnumerator(name: "Rec709YCbCrColorspace", value: 20, isUnsigned: true)
!38 = !DIEnumerator(name: "LogColorspace", value: 21, isUnsigned: true)
!39 = !DIEnumerator(name: "CMYColorspace", value: 22, isUnsigned: true)
!40 = !DIEnumerator(name: "LuvColorspace", value: 23, isUnsigned: true)
!41 = !DIEnumerator(name: "HCLColorspace", value: 24, isUnsigned: true)
!42 = !DIEnumerator(name: "LCHColorspace", value: 25, isUnsigned: true)
!43 = !DIEnumerator(name: "LMSColorspace", value: 26, isUnsigned: true)
!44 = !DIEnumerator(name: "LCHabColorspace", value: 27, isUnsigned: true)
!45 = !DIEnumerator(name: "LCHuvColorspace", value: 28, isUnsigned: true)
!46 = !DIEnumerator(name: "scRGBColorspace", value: 29, isUnsigned: true)
!47 = !DIEnumerator(name: "HSIColorspace", value: 30, isUnsigned: true)
!48 = !DIEnumerator(name: "HSVColorspace", value: 31, isUnsigned: true)
!49 = !DIEnumerator(name: "HCLpColorspace", value: 32, isUnsigned: true)
!50 = !DIEnumerator(name: "YDbDrColorspace", value: 33, isUnsigned: true)
!51 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !52, line: 25, baseType: !5, size: 32, elements: !53)
!52 = !DIFile(filename: "./magick/compress.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!53 = !{!54, !55, !56, !57, !58, !59, !60, !61, !62, !63, !64, !65, !66, !67, !68, !69, !70, !71, !72, !73, !74, !75}
!54 = !DIEnumerator(name: "UndefinedCompression", value: 0, isUnsigned: true)
!55 = !DIEnumerator(name: "NoCompression", value: 1, isUnsigned: true)
!56 = !DIEnumerator(name: "BZipCompression", value: 2, isUnsigned: true)
!57 = !DIEnumerator(name: "DXT1Compression", value: 3, isUnsigned: true)
!58 = !DIEnumerator(name: "DXT3Compression", value: 4, isUnsigned: true)
!59 = !DIEnumerator(name: "DXT5Compression", value: 5, isUnsigned: true)
!60 = !DIEnumerator(name: "FaxCompression", value: 6, isUnsigned: true)
!61 = !DIEnumerator(name: "Group4Compression", value: 7, isUnsigned: true)
!62 = !DIEnumerator(name: "JPEGCompression", value: 8, isUnsigned: true)
!63 = !DIEnumerator(name: "JPEG2000Compression", value: 9, isUnsigned: true)
!64 = !DIEnumerator(name: "LosslessJPEGCompression", value: 10, isUnsigned: true)
!65 = !DIEnumerator(name: "LZWCompression", value: 11, isUnsigned: true)
!66 = !DIEnumerator(name: "RLECompression", value: 12, isUnsigned: true)
!67 = !DIEnumerator(name: "ZipCompression", value: 13, isUnsigned: true)
!68 = !DIEnumerator(name: "ZipSCompression", value: 14, isUnsigned: true)
!69 = !DIEnumerator(name: "PizCompression", value: 15, isUnsigned: true)
!70 = !DIEnumerator(name: "Pxr24Compression", value: 16, isUnsigned: true)
!71 = !DIEnumerator(name: "B44Compression", value: 17, isUnsigned: true)
!72 = !DIEnumerator(name: "B44ACompression", value: 18, isUnsigned: true)
!73 = !DIEnumerator(name: "LZMACompression", value: 19, isUnsigned: true)
!74 = !DIEnumerator(name: "JBIG1Compression", value: 20, isUnsigned: true)
!75 = !DIEnumerator(name: "JBIG2Compression", value: 21, isUnsigned: true)
!76 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !77, line: 75, baseType: !5, size: 32, elements: !78)
!77 = !DIFile(filename: "./magick/image.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!78 = !{!79, !80, !81, !82, !83, !84, !85, !86, !87}
!79 = !DIEnumerator(name: "UndefinedOrientation", value: 0, isUnsigned: true)
!80 = !DIEnumerator(name: "TopLeftOrientation", value: 1, isUnsigned: true)
!81 = !DIEnumerator(name: "TopRightOrientation", value: 2, isUnsigned: true)
!82 = !DIEnumerator(name: "BottomRightOrientation", value: 3, isUnsigned: true)
!83 = !DIEnumerator(name: "BottomLeftOrientation", value: 4, isUnsigned: true)
!84 = !DIEnumerator(name: "LeftTopOrientation", value: 5, isUnsigned: true)
!85 = !DIEnumerator(name: "RightTopOrientation", value: 6, isUnsigned: true)
!86 = !DIEnumerator(name: "RightBottomOrientation", value: 7, isUnsigned: true)
!87 = !DIEnumerator(name: "LeftBottomOrientation", value: 8, isUnsigned: true)
!88 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !89, line: 42, baseType: !5, size: 32, elements: !90)
!89 = !DIFile(filename: "./magick/profile.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!90 = !{!91, !92, !93, !94, !95}
!91 = !DIEnumerator(name: "UndefinedIntent", value: 0, isUnsigned: true)
!92 = !DIEnumerator(name: "SaturationIntent", value: 1, isUnsigned: true)
!93 = !DIEnumerator(name: "PerceptualIntent", value: 2, isUnsigned: true)
!94 = !DIEnumerator(name: "AbsoluteIntent", value: 3, isUnsigned: true)
!95 = !DIEnumerator(name: "RelativeIntent", value: 4, isUnsigned: true)
!96 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !77, line: 88, baseType: !5, size: 32, elements: !97)
!97 = !{!98, !99, !100}
!98 = !DIEnumerator(name: "UndefinedResolution", value: 0, isUnsigned: true)
!99 = !DIEnumerator(name: "PixelsPerInchResolution", value: 1, isUnsigned: true)
!100 = !DIEnumerator(name: "PixelsPerCentimeterResolution", value: 2, isUnsigned: true)
!101 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !102, line: 32, baseType: !5, size: 32, elements: !103)
!102 = !DIFile(filename: "./magick/resample.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!103 = !{!104, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !115, !116, !117, !118, !119, !120, !121, !122, !123, !124, !125, !126, !127, !128, !129, !130, !131, !132, !133, !134, !135}
!104 = !DIEnumerator(name: "UndefinedFilter", value: 0, isUnsigned: true)
!105 = !DIEnumerator(name: "PointFilter", value: 1, isUnsigned: true)
!106 = !DIEnumerator(name: "BoxFilter", value: 2, isUnsigned: true)
!107 = !DIEnumerator(name: "TriangleFilter", value: 3, isUnsigned: true)
!108 = !DIEnumerator(name: "HermiteFilter", value: 4, isUnsigned: true)
!109 = !DIEnumerator(name: "HanningFilter", value: 5, isUnsigned: true)
!110 = !DIEnumerator(name: "HammingFilter", value: 6, isUnsigned: true)
!111 = !DIEnumerator(name: "BlackmanFilter", value: 7, isUnsigned: true)
!112 = !DIEnumerator(name: "GaussianFilter", value: 8, isUnsigned: true)
!113 = !DIEnumerator(name: "QuadraticFilter", value: 9, isUnsigned: true)
!114 = !DIEnumerator(name: "CubicFilter", value: 10, isUnsigned: true)
!115 = !DIEnumerator(name: "CatromFilter", value: 11, isUnsigned: true)
!116 = !DIEnumerator(name: "MitchellFilter", value: 12, isUnsigned: true)
!117 = !DIEnumerator(name: "JincFilter", value: 13, isUnsigned: true)
!118 = !DIEnumerator(name: "SincFilter", value: 14, isUnsigned: true)
!119 = !DIEnumerator(name: "SincFastFilter", value: 15, isUnsigned: true)
!120 = !DIEnumerator(name: "KaiserFilter", value: 16, isUnsigned: true)
!121 = !DIEnumerator(name: "WelshFilter", value: 17, isUnsigned: true)
!122 = !DIEnumerator(name: "ParzenFilter", value: 18, isUnsigned: true)
!123 = !DIEnumerator(name: "BohmanFilter", value: 19, isUnsigned: true)
!124 = !DIEnumerator(name: "BartlettFilter", value: 20, isUnsigned: true)
!125 = !DIEnumerator(name: "LagrangeFilter", value: 21, isUnsigned: true)
!126 = !DIEnumerator(name: "LanczosFilter", value: 22, isUnsigned: true)
!127 = !DIEnumerator(name: "LanczosSharpFilter", value: 23, isUnsigned: true)
!128 = !DIEnumerator(name: "Lanczos2Filter", value: 24, isUnsigned: true)
!129 = !DIEnumerator(name: "Lanczos2SharpFilter", value: 25, isUnsigned: true)
!130 = !DIEnumerator(name: "RobidouxFilter", value: 26, isUnsigned: true)
!131 = !DIEnumerator(name: "RobidouxSharpFilter", value: 27, isUnsigned: true)
!132 = !DIEnumerator(name: "CosineFilter", value: 28, isUnsigned: true)
!133 = !DIEnumerator(name: "SplineFilter", value: 29, isUnsigned: true)
!134 = !DIEnumerator(name: "LanczosRadiusFilter", value: 30, isUnsigned: true)
!135 = !DIEnumerator(name: "SentinelFilter", value: 31, isUnsigned: true)
!136 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !77, line: 63, baseType: !5, size: 32, elements: !137)
!137 = !{!138, !139, !140, !141, !142, !143, !144, !145}
!138 = !DIEnumerator(name: "UndefinedInterlace", value: 0, isUnsigned: true)
!139 = !DIEnumerator(name: "NoInterlace", value: 1, isUnsigned: true)
!140 = !DIEnumerator(name: "LineInterlace", value: 2, isUnsigned: true)
!141 = !DIEnumerator(name: "PlaneInterlace", value: 3, isUnsigned: true)
!142 = !DIEnumerator(name: "PartitionInterlace", value: 4, isUnsigned: true)
!143 = !DIEnumerator(name: "GIFInterlace", value: 5, isUnsigned: true)
!144 = !DIEnumerator(name: "JPEGInterlace", value: 6, isUnsigned: true)
!145 = !DIEnumerator(name: "PNGInterlace", value: 7, isUnsigned: true)
!146 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !147, line: 30, baseType: !5, size: 32, elements: !148)
!147 = !DIFile(filename: "./magick/quantum.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!148 = !{!149, !150, !151}
!149 = !DIEnumerator(name: "UndefinedEndian", value: 0, isUnsigned: true)
!150 = !DIEnumerator(name: "LSBEndian", value: 1, isUnsigned: true)
!151 = !DIEnumerator(name: "MSBEndian", value: 2, isUnsigned: true)
!152 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !153, line: 77, baseType: !5, size: 32, elements: !154)
!153 = !DIFile(filename: "./magick/geometry.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!154 = !{!155, !156, !157, !158, !159, !160, !161, !162, !163, !164, !165, !166}
!155 = !DIEnumerator(name: "UndefinedGravity", value: 0, isUnsigned: true)
!156 = !DIEnumerator(name: "ForgetGravity", value: 0, isUnsigned: true)
!157 = !DIEnumerator(name: "NorthWestGravity", value: 1, isUnsigned: true)
!158 = !DIEnumerator(name: "NorthGravity", value: 2, isUnsigned: true)
!159 = !DIEnumerator(name: "NorthEastGravity", value: 3, isUnsigned: true)
!160 = !DIEnumerator(name: "WestGravity", value: 4, isUnsigned: true)
!161 = !DIEnumerator(name: "CenterGravity", value: 5, isUnsigned: true)
!162 = !DIEnumerator(name: "EastGravity", value: 6, isUnsigned: true)
!163 = !DIEnumerator(name: "SouthWestGravity", value: 7, isUnsigned: true)
!164 = !DIEnumerator(name: "SouthGravity", value: 8, isUnsigned: true)
!165 = !DIEnumerator(name: "SouthEastGravity", value: 9, isUnsigned: true)
!166 = !DIEnumerator(name: "StaticGravity", value: 10, isUnsigned: true)
!167 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !168, line: 25, baseType: !5, size: 32, elements: !169)
!168 = !DIFile(filename: "./magick/composite.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!169 = !{!170, !171, !172, !173, !174, !175, !176, !177, !178, !179, !180, !181, !182, !183, !184, !185, !186, !187, !188, !189, !190, !191, !192, !193, !194, !195, !196, !197, !198, !199, !200, !201, !202, !203, !204, !205, !206, !207, !208, !209, !210, !211, !212, !213, !214, !215, !216, !217, !218, !219, !220, !221, !222, !223, !224, !225, !226, !227, !228, !229, !230, !231, !232, !233, !234, !235, !236, !237}
!170 = !DIEnumerator(name: "UndefinedCompositeOp", value: 0, isUnsigned: true)
!171 = !DIEnumerator(name: "NoCompositeOp", value: 1, isUnsigned: true)
!172 = !DIEnumerator(name: "ModulusAddCompositeOp", value: 2, isUnsigned: true)
!173 = !DIEnumerator(name: "AtopCompositeOp", value: 3, isUnsigned: true)
!174 = !DIEnumerator(name: "BlendCompositeOp", value: 4, isUnsigned: true)
!175 = !DIEnumerator(name: "BumpmapCompositeOp", value: 5, isUnsigned: true)
!176 = !DIEnumerator(name: "ChangeMaskCompositeOp", value: 6, isUnsigned: true)
!177 = !DIEnumerator(name: "ClearCompositeOp", value: 7, isUnsigned: true)
!178 = !DIEnumerator(name: "ColorBurnCompositeOp", value: 8, isUnsigned: true)
!179 = !DIEnumerator(name: "ColorDodgeCompositeOp", value: 9, isUnsigned: true)
!180 = !DIEnumerator(name: "ColorizeCompositeOp", value: 10, isUnsigned: true)
!181 = !DIEnumerator(name: "CopyBlackCompositeOp", value: 11, isUnsigned: true)
!182 = !DIEnumerator(name: "CopyBlueCompositeOp", value: 12, isUnsigned: true)
!183 = !DIEnumerator(name: "CopyCompositeOp", value: 13, isUnsigned: true)
!184 = !DIEnumerator(name: "CopyCyanCompositeOp", value: 14, isUnsigned: true)
!185 = !DIEnumerator(name: "CopyGreenCompositeOp", value: 15, isUnsigned: true)
!186 = !DIEnumerator(name: "CopyMagentaCompositeOp", value: 16, isUnsigned: true)
!187 = !DIEnumerator(name: "CopyOpacityCompositeOp", value: 17, isUnsigned: true)
!188 = !DIEnumerator(name: "CopyRedCompositeOp", value: 18, isUnsigned: true)
!189 = !DIEnumerator(name: "CopyYellowCompositeOp", value: 19, isUnsigned: true)
!190 = !DIEnumerator(name: "DarkenCompositeOp", value: 20, isUnsigned: true)
!191 = !DIEnumerator(name: "DstAtopCompositeOp", value: 21, isUnsigned: true)
!192 = !DIEnumerator(name: "DstCompositeOp", value: 22, isUnsigned: true)
!193 = !DIEnumerator(name: "DstInCompositeOp", value: 23, isUnsigned: true)
!194 = !DIEnumerator(name: "DstOutCompositeOp", value: 24, isUnsigned: true)
!195 = !DIEnumerator(name: "DstOverCompositeOp", value: 25, isUnsigned: true)
!196 = !DIEnumerator(name: "DifferenceCompositeOp", value: 26, isUnsigned: true)
!197 = !DIEnumerator(name: "DisplaceCompositeOp", value: 27, isUnsigned: true)
!198 = !DIEnumerator(name: "DissolveCompositeOp", value: 28, isUnsigned: true)
!199 = !DIEnumerator(name: "ExclusionCompositeOp", value: 29, isUnsigned: true)
!200 = !DIEnumerator(name: "HardLightCompositeOp", value: 30, isUnsigned: true)
!201 = !DIEnumerator(name: "HueCompositeOp", value: 31, isUnsigned: true)
!202 = !DIEnumerator(name: "InCompositeOp", value: 32, isUnsigned: true)
!203 = !DIEnumerator(name: "LightenCompositeOp", value: 33, isUnsigned: true)
!204 = !DIEnumerator(name: "LinearLightCompositeOp", value: 34, isUnsigned: true)
!205 = !DIEnumerator(name: "LuminizeCompositeOp", value: 35, isUnsigned: true)
!206 = !DIEnumerator(name: "MinusDstCompositeOp", value: 36, isUnsigned: true)
!207 = !DIEnumerator(name: "ModulateCompositeOp", value: 37, isUnsigned: true)
!208 = !DIEnumerator(name: "MultiplyCompositeOp", value: 38, isUnsigned: true)
!209 = !DIEnumerator(name: "OutCompositeOp", value: 39, isUnsigned: true)
!210 = !DIEnumerator(name: "OverCompositeOp", value: 40, isUnsigned: true)
!211 = !DIEnumerator(name: "OverlayCompositeOp", value: 41, isUnsigned: true)
!212 = !DIEnumerator(name: "PlusCompositeOp", value: 42, isUnsigned: true)
!213 = !DIEnumerator(name: "ReplaceCompositeOp", value: 43, isUnsigned: true)
!214 = !DIEnumerator(name: "SaturateCompositeOp", value: 44, isUnsigned: true)
!215 = !DIEnumerator(name: "ScreenCompositeOp", value: 45, isUnsigned: true)
!216 = !DIEnumerator(name: "SoftLightCompositeOp", value: 46, isUnsigned: true)
!217 = !DIEnumerator(name: "SrcAtopCompositeOp", value: 47, isUnsigned: true)
!218 = !DIEnumerator(name: "SrcCompositeOp", value: 48, isUnsigned: true)
!219 = !DIEnumerator(name: "SrcInCompositeOp", value: 49, isUnsigned: true)
!220 = !DIEnumerator(name: "SrcOutCompositeOp", value: 50, isUnsigned: true)
!221 = !DIEnumerator(name: "SrcOverCompositeOp", value: 51, isUnsigned: true)
!222 = !DIEnumerator(name: "ModulusSubtractCompositeOp", value: 52, isUnsigned: true)
!223 = !DIEnumerator(name: "ThresholdCompositeOp", value: 53, isUnsigned: true)
!224 = !DIEnumerator(name: "XorCompositeOp", value: 54, isUnsigned: true)
!225 = !DIEnumerator(name: "DivideDstCompositeOp", value: 55, isUnsigned: true)
!226 = !DIEnumerator(name: "DistortCompositeOp", value: 56, isUnsigned: true)
!227 = !DIEnumerator(name: "BlurCompositeOp", value: 57, isUnsigned: true)
!228 = !DIEnumerator(name: "PegtopLightCompositeOp", value: 58, isUnsigned: true)
!229 = !DIEnumerator(name: "VividLightCompositeOp", value: 59, isUnsigned: true)
!230 = !DIEnumerator(name: "PinLightCompositeOp", value: 60, isUnsigned: true)
!231 = !DIEnumerator(name: "LinearDodgeCompositeOp", value: 61, isUnsigned: true)
!232 = !DIEnumerator(name: "LinearBurnCompositeOp", value: 62, isUnsigned: true)
!233 = !DIEnumerator(name: "MathematicsCompositeOp", value: 63, isUnsigned: true)
!234 = !DIEnumerator(name: "DivideSrcCompositeOp", value: 64, isUnsigned: true)
!235 = !DIEnumerator(name: "MinusSrcCompositeOp", value: 65, isUnsigned: true)
!236 = !DIEnumerator(name: "DarkenIntensityCompositeOp", value: 66, isUnsigned: true)
!237 = !DIEnumerator(name: "LightenIntensityCompositeOp", value: 67, isUnsigned: true)
!238 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !239, line: 25, baseType: !5, size: 32, elements: !240)
!239 = !DIFile(filename: "./magick/layer.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!240 = !{!241, !242, !243, !244, !245}
!241 = !DIEnumerator(name: "UnrecognizedDispose", value: 0, isUnsigned: true)
!242 = !DIEnumerator(name: "UndefinedDispose", value: 0, isUnsigned: true)
!243 = !DIEnumerator(name: "NoneDispose", value: 1, isUnsigned: true)
!244 = !DIEnumerator(name: "BackgroundDispose", value: 2, isUnsigned: true)
!245 = !DIEnumerator(name: "PreviousDispose", value: 3, isUnsigned: true)
!246 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !247, line: 25, baseType: !5, size: 32, elements: !248)
!247 = !DIFile(filename: "./magick/timer.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!248 = !{!249, !250, !251}
!249 = !DIEnumerator(name: "UndefinedTimerState", value: 0, isUnsigned: true)
!250 = !DIEnumerator(name: "StoppedTimerState", value: 1, isUnsigned: true)
!251 = !DIEnumerator(name: "RunningTimerState", value: 2, isUnsigned: true)
!252 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !253, line: 28, baseType: !5, size: 32, elements: !254)
!253 = !DIFile(filename: "./magick/exception.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!254 = !{!255, !256, !257, !258, !259, !260, !261, !262, !263, !264, !265, !266, !267, !268, !269, !270, !271, !272, !273, !274, !275, !276, !277, !278, !279, !280, !281, !282, !283, !284, !285, !286, !287, !288, !289, !290, !291, !292, !293, !294, !295, !296, !297, !298, !299, !300, !301, !302, !303, !304, !305, !306, !307, !308, !309, !310, !311, !312, !313, !314, !315, !316, !317, !318, !319, !320, !321, !322, !323, !324}
!255 = !DIEnumerator(name: "UndefinedException", value: 0, isUnsigned: true)
!256 = !DIEnumerator(name: "WarningException", value: 300, isUnsigned: true)
!257 = !DIEnumerator(name: "ResourceLimitWarning", value: 300, isUnsigned: true)
!258 = !DIEnumerator(name: "TypeWarning", value: 305, isUnsigned: true)
!259 = !DIEnumerator(name: "OptionWarning", value: 310, isUnsigned: true)
!260 = !DIEnumerator(name: "DelegateWarning", value: 315, isUnsigned: true)
!261 = !DIEnumerator(name: "MissingDelegateWarning", value: 320, isUnsigned: true)
!262 = !DIEnumerator(name: "CorruptImageWarning", value: 325, isUnsigned: true)
!263 = !DIEnumerator(name: "FileOpenWarning", value: 330, isUnsigned: true)
!264 = !DIEnumerator(name: "BlobWarning", value: 335, isUnsigned: true)
!265 = !DIEnumerator(name: "StreamWarning", value: 340, isUnsigned: true)
!266 = !DIEnumerator(name: "CacheWarning", value: 345, isUnsigned: true)
!267 = !DIEnumerator(name: "CoderWarning", value: 350, isUnsigned: true)
!268 = !DIEnumerator(name: "FilterWarning", value: 352, isUnsigned: true)
!269 = !DIEnumerator(name: "ModuleWarning", value: 355, isUnsigned: true)
!270 = !DIEnumerator(name: "DrawWarning", value: 360, isUnsigned: true)
!271 = !DIEnumerator(name: "ImageWarning", value: 365, isUnsigned: true)
!272 = !DIEnumerator(name: "WandWarning", value: 370, isUnsigned: true)
!273 = !DIEnumerator(name: "RandomWarning", value: 375, isUnsigned: true)
!274 = !DIEnumerator(name: "XServerWarning", value: 380, isUnsigned: true)
!275 = !DIEnumerator(name: "MonitorWarning", value: 385, isUnsigned: true)
!276 = !DIEnumerator(name: "RegistryWarning", value: 390, isUnsigned: true)
!277 = !DIEnumerator(name: "ConfigureWarning", value: 395, isUnsigned: true)
!278 = !DIEnumerator(name: "PolicyWarning", value: 399, isUnsigned: true)
!279 = !DIEnumerator(name: "ErrorException", value: 400, isUnsigned: true)
!280 = !DIEnumerator(name: "ResourceLimitError", value: 400, isUnsigned: true)
!281 = !DIEnumerator(name: "TypeError", value: 405, isUnsigned: true)
!282 = !DIEnumerator(name: "OptionError", value: 410, isUnsigned: true)
!283 = !DIEnumerator(name: "DelegateError", value: 415, isUnsigned: true)
!284 = !DIEnumerator(name: "MissingDelegateError", value: 420, isUnsigned: true)
!285 = !DIEnumerator(name: "CorruptImageError", value: 425, isUnsigned: true)
!286 = !DIEnumerator(name: "FileOpenError", value: 430, isUnsigned: true)
!287 = !DIEnumerator(name: "BlobError", value: 435, isUnsigned: true)
!288 = !DIEnumerator(name: "StreamError", value: 440, isUnsigned: true)
!289 = !DIEnumerator(name: "CacheError", value: 445, isUnsigned: true)
!290 = !DIEnumerator(name: "CoderError", value: 450, isUnsigned: true)
!291 = !DIEnumerator(name: "FilterError", value: 452, isUnsigned: true)
!292 = !DIEnumerator(name: "ModuleError", value: 455, isUnsigned: true)
!293 = !DIEnumerator(name: "DrawError", value: 460, isUnsigned: true)
!294 = !DIEnumerator(name: "ImageError", value: 465, isUnsigned: true)
!295 = !DIEnumerator(name: "WandError", value: 470, isUnsigned: true)
!296 = !DIEnumerator(name: "RandomError", value: 475, isUnsigned: true)
!297 = !DIEnumerator(name: "XServerError", value: 480, isUnsigned: true)
!298 = !DIEnumerator(name: "MonitorError", value: 485, isUnsigned: true)
!299 = !DIEnumerator(name: "RegistryError", value: 490, isUnsigned: true)
!300 = !DIEnumerator(name: "ConfigureError", value: 495, isUnsigned: true)
!301 = !DIEnumerator(name: "PolicyError", value: 499, isUnsigned: true)
!302 = !DIEnumerator(name: "FatalErrorException", value: 700, isUnsigned: true)
!303 = !DIEnumerator(name: "ResourceLimitFatalError", value: 700, isUnsigned: true)
!304 = !DIEnumerator(name: "TypeFatalError", value: 705, isUnsigned: true)
!305 = !DIEnumerator(name: "OptionFatalError", value: 710, isUnsigned: true)
!306 = !DIEnumerator(name: "DelegateFatalError", value: 715, isUnsigned: true)
!307 = !DIEnumerator(name: "MissingDelegateFatalError", value: 720, isUnsigned: true)
!308 = !DIEnumerator(name: "CorruptImageFatalError", value: 725, isUnsigned: true)
!309 = !DIEnumerator(name: "FileOpenFatalError", value: 730, isUnsigned: true)
!310 = !DIEnumerator(name: "BlobFatalError", value: 735, isUnsigned: true)
!311 = !DIEnumerator(name: "StreamFatalError", value: 740, isUnsigned: true)
!312 = !DIEnumerator(name: "CacheFatalError", value: 745, isUnsigned: true)
!313 = !DIEnumerator(name: "CoderFatalError", value: 750, isUnsigned: true)
!314 = !DIEnumerator(name: "FilterFatalError", value: 752, isUnsigned: true)
!315 = !DIEnumerator(name: "ModuleFatalError", value: 755, isUnsigned: true)
!316 = !DIEnumerator(name: "DrawFatalError", value: 760, isUnsigned: true)
!317 = !DIEnumerator(name: "ImageFatalError", value: 765, isUnsigned: true)
!318 = !DIEnumerator(name: "WandFatalError", value: 770, isUnsigned: true)
!319 = !DIEnumerator(name: "RandomFatalError", value: 775, isUnsigned: true)
!320 = !DIEnumerator(name: "XServerFatalError", value: 780, isUnsigned: true)
!321 = !DIEnumerator(name: "MonitorFatalError", value: 785, isUnsigned: true)
!322 = !DIEnumerator(name: "RegistryFatalError", value: 790, isUnsigned: true)
!323 = !DIEnumerator(name: "ConfigureFatalError", value: 795, isUnsigned: true)
!324 = !DIEnumerator(name: "PolicyFatalError", value: 799, isUnsigned: true)
!325 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !326, line: 31, baseType: !5, size: 32, elements: !327)
!326 = !DIFile(filename: "./magick/pixel.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!327 = !{!328, !329, !330, !331, !332, !333, !334, !335, !336, !337, !338, !339, !340, !341}
!328 = !DIEnumerator(name: "UndefinedInterpolatePixel", value: 0, isUnsigned: true)
!329 = !DIEnumerator(name: "AverageInterpolatePixel", value: 1, isUnsigned: true)
!330 = !DIEnumerator(name: "BicubicInterpolatePixel", value: 2, isUnsigned: true)
!331 = !DIEnumerator(name: "BilinearInterpolatePixel", value: 3, isUnsigned: true)
!332 = !DIEnumerator(name: "FilterInterpolatePixel", value: 4, isUnsigned: true)
!333 = !DIEnumerator(name: "IntegerInterpolatePixel", value: 5, isUnsigned: true)
!334 = !DIEnumerator(name: "MeshInterpolatePixel", value: 6, isUnsigned: true)
!335 = !DIEnumerator(name: "NearestNeighborInterpolatePixel", value: 7, isUnsigned: true)
!336 = !DIEnumerator(name: "SplineInterpolatePixel", value: 8, isUnsigned: true)
!337 = !DIEnumerator(name: "Average9InterpolatePixel", value: 9, isUnsigned: true)
!338 = !DIEnumerator(name: "Average16InterpolatePixel", value: 10, isUnsigned: true)
!339 = !DIEnumerator(name: "BlendInterpolatePixel", value: 11, isUnsigned: true)
!340 = !DIEnumerator(name: "BackgroundInterpolatePixel", value: 12, isUnsigned: true)
!341 = !DIEnumerator(name: "CatromInterpolatePixel", value: 13, isUnsigned: true)
!342 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !77, line: 47, baseType: !5, size: 32, elements: !343)
!343 = !{!344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !355}
!344 = !DIEnumerator(name: "UndefinedType", value: 0, isUnsigned: true)
!345 = !DIEnumerator(name: "BilevelType", value: 1, isUnsigned: true)
!346 = !DIEnumerator(name: "GrayscaleType", value: 2, isUnsigned: true)
!347 = !DIEnumerator(name: "GrayscaleMatteType", value: 3, isUnsigned: true)
!348 = !DIEnumerator(name: "PaletteType", value: 4, isUnsigned: true)
!349 = !DIEnumerator(name: "PaletteMatteType", value: 5, isUnsigned: true)
!350 = !DIEnumerator(name: "TrueColorType", value: 6, isUnsigned: true)
!351 = !DIEnumerator(name: "TrueColorMatteType", value: 7, isUnsigned: true)
!352 = !DIEnumerator(name: "ColorSeparationType", value: 8, isUnsigned: true)
!353 = !DIEnumerator(name: "ColorSeparationMatteType", value: 9, isUnsigned: true)
!354 = !DIEnumerator(name: "OptimizeType", value: 10, isUnsigned: true)
!355 = !DIEnumerator(name: "PaletteBilevelMatteType", value: 11, isUnsigned: true)
!356 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !326, line: 67, baseType: !5, size: 32, elements: !357)
!357 = !{!358, !359, !360, !361, !362, !363, !364, !365, !366, !367}
!358 = !DIEnumerator(name: "UndefinedPixelIntensityMethod", value: 0, isUnsigned: true)
!359 = !DIEnumerator(name: "AveragePixelIntensityMethod", value: 1, isUnsigned: true)
!360 = !DIEnumerator(name: "BrightnessPixelIntensityMethod", value: 2, isUnsigned: true)
!361 = !DIEnumerator(name: "LightnessPixelIntensityMethod", value: 3, isUnsigned: true)
!362 = !DIEnumerator(name: "Rec601LumaPixelIntensityMethod", value: 4, isUnsigned: true)
!363 = !DIEnumerator(name: "Rec601LuminancePixelIntensityMethod", value: 5, isUnsigned: true)
!364 = !DIEnumerator(name: "Rec709LumaPixelIntensityMethod", value: 6, isUnsigned: true)
!365 = !DIEnumerator(name: "Rec709LuminancePixelIntensityMethod", value: 7, isUnsigned: true)
!366 = !DIEnumerator(name: "RMSPixelIntensityMethod", value: 8, isUnsigned: true)
!367 = !DIEnumerator(name: "MSPixelIntensityMethod", value: 9, isUnsigned: true)
!368 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !369, line: 68, baseType: !5, size: 32, elements: !370)
!369 = !DIFile(filename: "./magick/statistic.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!370 = !{!371, !372, !373, !374, !375, !376, !377, !378, !379, !380, !381, !382, !383, !384, !385, !386, !387, !388, !389, !390, !391, !392, !393, !394, !395, !396, !397, !398, !399, !400, !401, !402}
!371 = !DIEnumerator(name: "UndefinedEvaluateOperator", value: 0, isUnsigned: true)
!372 = !DIEnumerator(name: "AddEvaluateOperator", value: 1, isUnsigned: true)
!373 = !DIEnumerator(name: "AndEvaluateOperator", value: 2, isUnsigned: true)
!374 = !DIEnumerator(name: "DivideEvaluateOperator", value: 3, isUnsigned: true)
!375 = !DIEnumerator(name: "LeftShiftEvaluateOperator", value: 4, isUnsigned: true)
!376 = !DIEnumerator(name: "MaxEvaluateOperator", value: 5, isUnsigned: true)
!377 = !DIEnumerator(name: "MinEvaluateOperator", value: 6, isUnsigned: true)
!378 = !DIEnumerator(name: "MultiplyEvaluateOperator", value: 7, isUnsigned: true)
!379 = !DIEnumerator(name: "OrEvaluateOperator", value: 8, isUnsigned: true)
!380 = !DIEnumerator(name: "RightShiftEvaluateOperator", value: 9, isUnsigned: true)
!381 = !DIEnumerator(name: "SetEvaluateOperator", value: 10, isUnsigned: true)
!382 = !DIEnumerator(name: "SubtractEvaluateOperator", value: 11, isUnsigned: true)
!383 = !DIEnumerator(name: "XorEvaluateOperator", value: 12, isUnsigned: true)
!384 = !DIEnumerator(name: "PowEvaluateOperator", value: 13, isUnsigned: true)
!385 = !DIEnumerator(name: "LogEvaluateOperator", value: 14, isUnsigned: true)
!386 = !DIEnumerator(name: "ThresholdEvaluateOperator", value: 15, isUnsigned: true)
!387 = !DIEnumerator(name: "ThresholdBlackEvaluateOperator", value: 16, isUnsigned: true)
!388 = !DIEnumerator(name: "ThresholdWhiteEvaluateOperator", value: 17, isUnsigned: true)
!389 = !DIEnumerator(name: "GaussianNoiseEvaluateOperator", value: 18, isUnsigned: true)
!390 = !DIEnumerator(name: "ImpulseNoiseEvaluateOperator", value: 19, isUnsigned: true)
!391 = !DIEnumerator(name: "LaplacianNoiseEvaluateOperator", value: 20, isUnsigned: true)
!392 = !DIEnumerator(name: "MultiplicativeNoiseEvaluateOperator", value: 21, isUnsigned: true)
!393 = !DIEnumerator(name: "PoissonNoiseEvaluateOperator", value: 22, isUnsigned: true)
!394 = !DIEnumerator(name: "UniformNoiseEvaluateOperator", value: 23, isUnsigned: true)
!395 = !DIEnumerator(name: "CosineEvaluateOperator", value: 24, isUnsigned: true)
!396 = !DIEnumerator(name: "SineEvaluateOperator", value: 25, isUnsigned: true)
!397 = !DIEnumerator(name: "AddModulusEvaluateOperator", value: 26, isUnsigned: true)
!398 = !DIEnumerator(name: "MeanEvaluateOperator", value: 27, isUnsigned: true)
!399 = !DIEnumerator(name: "AbsEvaluateOperator", value: 28, isUnsigned: true)
!400 = !DIEnumerator(name: "ExponentialEvaluateOperator", value: 29, isUnsigned: true)
!401 = !DIEnumerator(name: "MedianEvaluateOperator", value: 30, isUnsigned: true)
!402 = !DIEnumerator(name: "SumEvaluateOperator", value: 31, isUnsigned: true)
!403 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !4, line: 177, baseType: !5, size: 32, elements: !404)
!404 = !{!405, !406, !407, !408, !409, !410, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424}
!405 = !DIEnumerator(name: "UndefinedChannel", value: 0, isUnsigned: true)
!406 = !DIEnumerator(name: "RedChannel", value: 1, isUnsigned: true)
!407 = !DIEnumerator(name: "GrayChannel", value: 1, isUnsigned: true)
!408 = !DIEnumerator(name: "CyanChannel", value: 1, isUnsigned: true)
!409 = !DIEnumerator(name: "GreenChannel", value: 2, isUnsigned: true)
!410 = !DIEnumerator(name: "MagentaChannel", value: 2, isUnsigned: true)
!411 = !DIEnumerator(name: "BlueChannel", value: 4, isUnsigned: true)
!412 = !DIEnumerator(name: "YellowChannel", value: 4, isUnsigned: true)
!413 = !DIEnumerator(name: "AlphaChannel", value: 8, isUnsigned: true)
!414 = !DIEnumerator(name: "OpacityChannel", value: 8, isUnsigned: true)
!415 = !DIEnumerator(name: "MatteChannel", value: 8, isUnsigned: true)
!416 = !DIEnumerator(name: "BlackChannel", value: 32, isUnsigned: true)
!417 = !DIEnumerator(name: "IndexChannel", value: 32, isUnsigned: true)
!418 = !DIEnumerator(name: "CompositeChannels", value: 47, isUnsigned: true)
!419 = !DIEnumerator(name: "AllChannels", value: 134217727, isUnsigned: true)
!420 = !DIEnumerator(name: "TrueAlphaChannel", value: 64, isUnsigned: true)
!421 = !DIEnumerator(name: "RGBChannels", value: 128, isUnsigned: true)
!422 = !DIEnumerator(name: "GrayChannels", value: 128, isUnsigned: true)
!423 = !DIEnumerator(name: "SyncChannels", value: 256, isUnsigned: true)
!424 = !DIEnumerator(name: "DefaultChannels", value: 134217719, isUnsigned: true)
!425 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !426, line: 34, baseType: !5, size: 32, elements: !427)
!426 = !DIFile(filename: "./magick/log.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!427 = !{!428, !429, !430, !431, !432, !433, !434, !435, !436, !437, !438, !439, !440, !441, !442, !443, !444, !445, !446, !447, !448, !449}
!428 = !DIEnumerator(name: "UndefinedEvents", value: 0, isUnsigned: true)
!429 = !DIEnumerator(name: "NoEvents", value: 0, isUnsigned: true)
!430 = !DIEnumerator(name: "TraceEvent", value: 1, isUnsigned: true)
!431 = !DIEnumerator(name: "AnnotateEvent", value: 2, isUnsigned: true)
!432 = !DIEnumerator(name: "BlobEvent", value: 4, isUnsigned: true)
!433 = !DIEnumerator(name: "CacheEvent", value: 8, isUnsigned: true)
!434 = !DIEnumerator(name: "CoderEvent", value: 16, isUnsigned: true)
!435 = !DIEnumerator(name: "ConfigureEvent", value: 32, isUnsigned: true)
!436 = !DIEnumerator(name: "DeprecateEvent", value: 64, isUnsigned: true)
!437 = !DIEnumerator(name: "DrawEvent", value: 128, isUnsigned: true)
!438 = !DIEnumerator(name: "ExceptionEvent", value: 256, isUnsigned: true)
!439 = !DIEnumerator(name: "ImageEvent", value: 512, isUnsigned: true)
!440 = !DIEnumerator(name: "LocaleEvent", value: 1024, isUnsigned: true)
!441 = !DIEnumerator(name: "ModuleEvent", value: 2048, isUnsigned: true)
!442 = !DIEnumerator(name: "PolicyEvent", value: 4096, isUnsigned: true)
!443 = !DIEnumerator(name: "ResourceEvent", value: 8192, isUnsigned: true)
!444 = !DIEnumerator(name: "TransformEvent", value: 16384, isUnsigned: true)
!445 = !DIEnumerator(name: "UserEvent", value: 36864, isUnsigned: true)
!446 = !DIEnumerator(name: "WandEvent", value: 65536, isUnsigned: true)
!447 = !DIEnumerator(name: "X11Event", value: 131072, isUnsigned: true)
!448 = !DIEnumerator(name: "AccelerateEvent", value: 262144, isUnsigned: true)
!449 = !DIEnumerator(name: "AllEvents", value: 2147483647, isUnsigned: true)
!450 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !369, line: 104, baseType: !5, size: 32, elements: !451)
!451 = !{!452, !453, !454, !455, !456}
!452 = !DIEnumerator(name: "UndefinedFunction", value: 0, isUnsigned: true)
!453 = !DIEnumerator(name: "PolynomialFunction", value: 1, isUnsigned: true)
!454 = !DIEnumerator(name: "SinusoidFunction", value: 2, isUnsigned: true)
!455 = !DIEnumerator(name: "ArcsinFunction", value: 3, isUnsigned: true)
!456 = !DIEnumerator(name: "ArctanFunction", value: 4, isUnsigned: true)
!457 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !369, line: 113, baseType: !5, size: 32, elements: !458)
!458 = !{!459, !460, !461, !462, !463, !464, !465, !466, !467}
!459 = !DIEnumerator(name: "UndefinedStatistic", value: 0, isUnsigned: true)
!460 = !DIEnumerator(name: "GradientStatistic", value: 1, isUnsigned: true)
!461 = !DIEnumerator(name: "MaximumStatistic", value: 2, isUnsigned: true)
!462 = !DIEnumerator(name: "MeanStatistic", value: 3, isUnsigned: true)
!463 = !DIEnumerator(name: "MedianStatistic", value: 4, isUnsigned: true)
!464 = !DIEnumerator(name: "MinimumStatistic", value: 5, isUnsigned: true)
!465 = !DIEnumerator(name: "ModeStatistic", value: 6, isUnsigned: true)
!466 = !DIEnumerator(name: "NonpeakStatistic", value: 7, isUnsigned: true)
!467 = !DIEnumerator(name: "StandardDeviationStatistic", value: 8, isUnsigned: true)
!468 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !469, line: 25, baseType: !5, size: 32, elements: !470)
!469 = !DIFile(filename: "./magick/resource_.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!470 = !{!471, !472, !473, !474, !475, !476, !477, !478, !479}
!471 = !DIEnumerator(name: "UndefinedResource", value: 0, isUnsigned: true)
!472 = !DIEnumerator(name: "AreaResource", value: 1, isUnsigned: true)
!473 = !DIEnumerator(name: "DiskResource", value: 2, isUnsigned: true)
!474 = !DIEnumerator(name: "FileResource", value: 3, isUnsigned: true)
!475 = !DIEnumerator(name: "MapResource", value: 4, isUnsigned: true)
!476 = !DIEnumerator(name: "MemoryResource", value: 5, isUnsigned: true)
!477 = !DIEnumerator(name: "ThreadResource", value: 6, isUnsigned: true)
!478 = !DIEnumerator(name: "TimeResource", value: 7, isUnsigned: true)
!479 = !DIEnumerator(name: "ThrottleResource", value: 8, isUnsigned: true)
!480 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !481, line: 27, baseType: !5, size: 32, elements: !482)
!481 = !DIFile(filename: "./magick/fx.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!482 = !{!483, !484, !485, !486, !487, !488, !489, !490}
!483 = !DIEnumerator(name: "UndefinedNoise", value: 0, isUnsigned: true)
!484 = !DIEnumerator(name: "UniformNoise", value: 1, isUnsigned: true)
!485 = !DIEnumerator(name: "GaussianNoise", value: 2, isUnsigned: true)
!486 = !DIEnumerator(name: "MultiplicativeGaussianNoise", value: 3, isUnsigned: true)
!487 = !DIEnumerator(name: "ImpulseNoise", value: 4, isUnsigned: true)
!488 = !DIEnumerator(name: "LaplacianNoise", value: 5, isUnsigned: true)
!489 = !DIEnumerator(name: "PoissonNoise", value: 6, isUnsigned: true)
!490 = !DIEnumerator(name: "RandomNoise", value: 7, isUnsigned: true)
!491 = !{!492, !493, !548, !714, !557, !516, !731, !521, !733, !734, !621, !735, !725, !530, !504, !737, !753, !772, !778, !715, !805, !806, !810, !660, !632, !812, !779, !793, !522, !813}
!492 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !494, size: 64)
!494 = !DIDerivedType(tag: DW_TAG_typedef, name: "Image", file: !4, line: 221, baseType: !495)
!495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Image", file: !77, line: 150, size: 105920, elements: !496)
!496 = !{!497, !499, !501, !503, !506, !508, !510, !511, !512, !513, !514, !515, !526, !527, !528, !529, !531, !545, !547, !549, !551, !554, !555, !556, !562, !563, !564, !572, !573, !574, !575, !576, !577, !579, !581, !583, !585, !587, !589, !591, !592, !593, !594, !595, !596, !597, !605, !620, !634, !635, !636, !637, !641, !645, !649, !650, !651, !652, !653, !671, !672, !674, !675, !685, !686, !688, !689, !690, !691, !692, !693, !695, !696, !697, !698, !699, !700, !701, !703, !704, !705, !706, !707, !711, !713}
!497 = !DIDerivedType(tag: DW_TAG_member, name: "storage_class", scope: !495, file: !77, line: 153, baseType: !498, size: 32)
!498 = !DIDerivedType(tag: DW_TAG_typedef, name: "ClassType", file: !4, line: 209, baseType: !9)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !495, file: !77, line: 156, baseType: !500, size: 32, offset: 32)
!500 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorspaceType", file: !15, line: 61, baseType: !14)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "compression", scope: !495, file: !77, line: 159, baseType: !502, size: 32, offset: 64)
!502 = !DIDerivedType(tag: DW_TAG_typedef, name: "CompressionType", file: !52, line: 49, baseType: !51)
!503 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !495, file: !77, line: 162, baseType: !504, size: 64, offset: 128)
!504 = !DIDerivedType(tag: DW_TAG_typedef, name: "size_t", file: !505, line: 46, baseType: !492)
!505 = !DIFile(filename: "Rohit/IR2Vec-LoopOptimizationFramework/build_REL_AsrtON/lib/clang/10.0.1/include/stddef.h", directory: "/home/venkat/IF-DV")
!506 = !DIDerivedType(tag: DW_TAG_member, name: "orientation", scope: !495, file: !77, line: 165, baseType: !507, size: 32, offset: 192)
!507 = !DIDerivedType(tag: DW_TAG_typedef, name: "OrientationType", file: !77, line: 86, baseType: !76)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "taint", scope: !495, file: !77, line: 168, baseType: !509, size: 32, offset: 224)
!509 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickBooleanType", file: !4, line: 215, baseType: !3)
!510 = !DIDerivedType(tag: DW_TAG_member, name: "matte", scope: !495, file: !77, line: 169, baseType: !509, size: 32, offset: 256)
!511 = !DIDerivedType(tag: DW_TAG_member, name: "columns", scope: !495, file: !77, line: 172, baseType: !504, size: 64, offset: 320)
!512 = !DIDerivedType(tag: DW_TAG_member, name: "rows", scope: !495, file: !77, line: 173, baseType: !504, size: 64, offset: 384)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !495, file: !77, line: 174, baseType: !504, size: 64, offset: 448)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "colors", scope: !495, file: !77, line: 175, baseType: !504, size: 64, offset: 512)
!515 = !DIDerivedType(tag: DW_TAG_member, name: "colormap", scope: !495, file: !77, line: 178, baseType: !516, size: 64, offset: 576)
!516 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !517, size: 64)
!517 = !DIDerivedType(tag: DW_TAG_typedef, name: "PixelPacket", file: !326, line: 148, baseType: !518)
!518 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_PixelPacket", file: !326, line: 131, size: 64, elements: !519)
!519 = !{!520, !523, !524, !525}
!520 = !DIDerivedType(tag: DW_TAG_member, name: "blue", scope: !518, file: !326, line: 143, baseType: !521, size: 16)
!521 = !DIDerivedType(tag: DW_TAG_typedef, name: "Quantum", file: !4, line: 93, baseType: !522)
!522 = !DIBasicType(name: "unsigned short", size: 16, encoding: DW_ATE_unsigned)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "green", scope: !518, file: !326, line: 144, baseType: !521, size: 16, offset: 16)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "red", scope: !518, file: !326, line: 145, baseType: !521, size: 16, offset: 32)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "opacity", scope: !518, file: !326, line: 146, baseType: !521, size: 16, offset: 48)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "background_color", scope: !495, file: !77, line: 179, baseType: !517, size: 64, offset: 640)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "border_color", scope: !495, file: !77, line: 180, baseType: !517, size: 64, offset: 704)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "matte_color", scope: !495, file: !77, line: 181, baseType: !517, size: 64, offset: 768)
!529 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !495, file: !77, line: 184, baseType: !530, size: 64, offset: 832)
!530 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "chromaticity", scope: !495, file: !77, line: 187, baseType: !532, size: 768, offset: 896)
!532 = !DIDerivedType(tag: DW_TAG_typedef, name: "ChromaticityInfo", file: !77, line: 128, baseType: !533)
!533 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ChromaticityInfo", file: !77, line: 121, size: 768, elements: !534)
!534 = !{!535, !542, !543, !544}
!535 = !DIDerivedType(tag: DW_TAG_member, name: "red_primary", scope: !533, file: !77, line: 124, baseType: !536, size: 192)
!536 = !DIDerivedType(tag: DW_TAG_typedef, name: "PrimaryInfo", file: !77, line: 101, baseType: !537)
!537 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_PrimaryInfo", file: !77, line: 95, size: 192, elements: !538)
!538 = !{!539, !540, !541}
!539 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !537, file: !77, line: 98, baseType: !530, size: 64)
!540 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !537, file: !77, line: 99, baseType: !530, size: 64, offset: 64)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "z", scope: !537, file: !77, line: 100, baseType: !530, size: 64, offset: 128)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "green_primary", scope: !533, file: !77, line: 125, baseType: !536, size: 192, offset: 192)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "blue_primary", scope: !533, file: !77, line: 126, baseType: !536, size: 192, offset: 384)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "white_point", scope: !533, file: !77, line: 127, baseType: !536, size: 192, offset: 576)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "rendering_intent", scope: !495, file: !77, line: 190, baseType: !546, size: 32, offset: 1664)
!546 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderingIntent", file: !89, line: 49, baseType: !88)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "profiles", scope: !495, file: !77, line: 193, baseType: !548, size: 64, offset: 1728)
!548 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !495, file: !77, line: 196, baseType: !550, size: 32, offset: 1792)
!550 = !DIDerivedType(tag: DW_TAG_typedef, name: "ResolutionType", file: !77, line: 93, baseType: !96)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "montage", scope: !495, file: !77, line: 199, baseType: !552, size: 64, offset: 1856)
!552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !553, size: 64)
!553 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_signed_char)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "directory", scope: !495, file: !77, line: 200, baseType: !552, size: 64, offset: 1920)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "geometry", scope: !495, file: !77, line: 201, baseType: !552, size: 64, offset: 1984)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !495, file: !77, line: 204, baseType: !557, size: 64, offset: 2048)
!557 = !DIDerivedType(tag: DW_TAG_typedef, name: "ssize_t", file: !558, line: 77, baseType: !559)
!558 = !DIFile(filename: "/usr/include/stdio.h", directory: "")
!559 = !DIDerivedType(tag: DW_TAG_typedef, name: "__ssize_t", file: !560, line: 193, baseType: !561)
!560 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!561 = !DIBasicType(name: "long int", size: 64, encoding: DW_ATE_signed)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "x_resolution", scope: !495, file: !77, line: 207, baseType: !530, size: 64, offset: 2112)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "y_resolution", scope: !495, file: !77, line: 208, baseType: !530, size: 64, offset: 2176)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "page", scope: !495, file: !77, line: 211, baseType: !565, size: 256, offset: 2240)
!565 = !DIDerivedType(tag: DW_TAG_typedef, name: "RectangleInfo", file: !153, line: 130, baseType: !566)
!566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_RectangleInfo", file: !153, line: 121, size: 256, elements: !567)
!567 = !{!568, !569, !570, !571}
!568 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !566, file: !153, line: 124, baseType: !504, size: 64)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !566, file: !153, line: 125, baseType: !504, size: 64, offset: 64)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !566, file: !153, line: 128, baseType: !557, size: 64, offset: 128)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !566, file: !153, line: 129, baseType: !557, size: 64, offset: 192)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "extract_info", scope: !495, file: !77, line: 212, baseType: !565, size: 256, offset: 2496)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "tile_info", scope: !495, file: !77, line: 213, baseType: !565, size: 256, offset: 2752)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "bias", scope: !495, file: !77, line: 216, baseType: !530, size: 64, offset: 3008)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "blur", scope: !495, file: !77, line: 217, baseType: !530, size: 64, offset: 3072)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "fuzz", scope: !495, file: !77, line: 218, baseType: !530, size: 64, offset: 3136)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !495, file: !77, line: 221, baseType: !578, size: 32, offset: 3200)
!578 = !DIDerivedType(tag: DW_TAG_typedef, name: "FilterTypes", file: !102, line: 66, baseType: !101)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "interlace", scope: !495, file: !77, line: 224, baseType: !580, size: 32, offset: 3232)
!580 = !DIDerivedType(tag: DW_TAG_typedef, name: "InterlaceType", file: !77, line: 73, baseType: !136)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "endian", scope: !495, file: !77, line: 227, baseType: !582, size: 32, offset: 3264)
!582 = !DIDerivedType(tag: DW_TAG_typedef, name: "EndianType", file: !147, line: 35, baseType: !146)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !495, file: !77, line: 230, baseType: !584, size: 32, offset: 3296)
!584 = !DIDerivedType(tag: DW_TAG_typedef, name: "GravityType", file: !153, line: 91, baseType: !152)
!585 = !DIDerivedType(tag: DW_TAG_member, name: "compose", scope: !495, file: !77, line: 233, baseType: !586, size: 32, offset: 3328)
!586 = !DIDerivedType(tag: DW_TAG_typedef, name: "CompositeOperator", file: !168, line: 99, baseType: !167)
!587 = !DIDerivedType(tag: DW_TAG_member, name: "dispose", scope: !495, file: !77, line: 236, baseType: !588, size: 32, offset: 3360)
!588 = !DIDerivedType(tag: DW_TAG_typedef, name: "DisposeType", file: !239, line: 32, baseType: !238)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "clip_mask", scope: !495, file: !77, line: 239, baseType: !590, size: 64, offset: 3392)
!590 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !495, size: 64)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !495, file: !77, line: 242, baseType: !504, size: 64, offset: 3456)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "delay", scope: !495, file: !77, line: 243, baseType: !504, size: 64, offset: 3520)
!593 = !DIDerivedType(tag: DW_TAG_member, name: "ticks_per_second", scope: !495, file: !77, line: 246, baseType: !557, size: 64, offset: 3584)
!594 = !DIDerivedType(tag: DW_TAG_member, name: "iterations", scope: !495, file: !77, line: 249, baseType: !504, size: 64, offset: 3648)
!595 = !DIDerivedType(tag: DW_TAG_member, name: "total_colors", scope: !495, file: !77, line: 250, baseType: !504, size: 64, offset: 3712)
!596 = !DIDerivedType(tag: DW_TAG_member, name: "start_loop", scope: !495, file: !77, line: 253, baseType: !557, size: 64, offset: 3776)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !495, file: !77, line: 256, baseType: !598, size: 192, offset: 3840)
!598 = !DIDerivedType(tag: DW_TAG_typedef, name: "ErrorInfo", file: !599, line: 68, baseType: !600)
!599 = !DIFile(filename: "./magick/color.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ErrorInfo", file: !599, line: 62, size: 192, elements: !601)
!601 = !{!602, !603, !604}
!602 = !DIDerivedType(tag: DW_TAG_member, name: "mean_error_per_pixel", scope: !600, file: !599, line: 65, baseType: !530, size: 64)
!603 = !DIDerivedType(tag: DW_TAG_member, name: "normalized_mean_error", scope: !600, file: !599, line: 66, baseType: !530, size: 64, offset: 64)
!604 = !DIDerivedType(tag: DW_TAG_member, name: "normalized_maximum_error", scope: !600, file: !599, line: 67, baseType: !530, size: 64, offset: 128)
!605 = !DIDerivedType(tag: DW_TAG_member, name: "timer", scope: !495, file: !77, line: 259, baseType: !606, size: 512, offset: 4032)
!606 = !DIDerivedType(tag: DW_TAG_typedef, name: "TimerInfo", file: !247, line: 51, baseType: !607)
!607 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_TimerInfo", file: !247, line: 40, size: 512, elements: !608)
!608 = !{!609, !616, !617, !619}
!609 = !DIDerivedType(tag: DW_TAG_member, name: "user", scope: !607, file: !247, line: 43, baseType: !610, size: 192)
!610 = !DIDerivedType(tag: DW_TAG_typedef, name: "Timer", file: !247, line: 38, baseType: !611)
!611 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_Timer", file: !247, line: 32, size: 192, elements: !612)
!612 = !{!613, !614, !615}
!613 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !611, file: !247, line: 35, baseType: !530, size: 64)
!614 = !DIDerivedType(tag: DW_TAG_member, name: "stop", scope: !611, file: !247, line: 36, baseType: !530, size: 64, offset: 64)
!615 = !DIDerivedType(tag: DW_TAG_member, name: "total", scope: !611, file: !247, line: 37, baseType: !530, size: 64, offset: 128)
!616 = !DIDerivedType(tag: DW_TAG_member, name: "elapsed", scope: !607, file: !247, line: 44, baseType: !610, size: 192, offset: 192)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !607, file: !247, line: 47, baseType: !618, size: 32, offset: 384)
!618 = !DIDerivedType(tag: DW_TAG_typedef, name: "TimerState", file: !247, line: 30, baseType: !246)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !607, file: !247, line: 50, baseType: !504, size: 64, offset: 448)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "progress_monitor", scope: !495, file: !77, line: 262, baseType: !621, size: 64, offset: 4544)
!621 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickProgressMonitor", file: !622, line: 26, baseType: !623)
!622 = !DIFile(filename: "./magick/monitor.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!623 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !624, size: 64)
!624 = !DISubroutineType(types: !625)
!625 = !{!509, !626, !628, !631, !548}
!626 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !627, size: 64)
!627 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !553)
!628 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !629)
!629 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickOffsetType", file: !4, line: 150, baseType: !630)
!630 = !DIBasicType(name: "long long int", size: 64, encoding: DW_ATE_signed)
!631 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !632)
!632 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickSizeType", file: !4, line: 151, baseType: !633)
!633 = !DIBasicType(name: "long long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!634 = !DIDerivedType(tag: DW_TAG_member, name: "client_data", scope: !495, file: !77, line: 265, baseType: !548, size: 64, offset: 4608)
!635 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !495, file: !77, line: 266, baseType: !548, size: 64, offset: 4672)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "attributes", scope: !495, file: !77, line: 267, baseType: !548, size: 64, offset: 4736)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "ascii85", scope: !495, file: !77, line: 270, baseType: !638, size: 64, offset: 4800)
!638 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !639, size: 64)
!639 = !DIDerivedType(tag: DW_TAG_typedef, name: "Ascii85Info", file: !52, line: 52, baseType: !640)
!640 = !DICompositeType(tag: DW_TAG_structure_type, name: "_Ascii85Info", file: !52, line: 51, flags: DIFlagFwdDecl)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "blob", scope: !495, file: !77, line: 273, baseType: !642, size: 64, offset: 4864)
!642 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !643, size: 64)
!643 = !DIDerivedType(tag: DW_TAG_typedef, name: "BlobInfo", file: !4, line: 217, baseType: !644)
!644 = !DICompositeType(tag: DW_TAG_structure_type, name: "_BlobInfo", file: !4, line: 217, flags: DIFlagFwdDecl)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "filename", scope: !495, file: !77, line: 276, baseType: !646, size: 32768, offset: 4928)
!646 = !DICompositeType(tag: DW_TAG_array_type, baseType: !553, size: 32768, elements: !647)
!647 = !{!648}
!648 = !DISubrange(count: 4096)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "magick_filename", scope: !495, file: !77, line: 277, baseType: !646, size: 32768, offset: 37696)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "magick", scope: !495, file: !77, line: 278, baseType: !646, size: 32768, offset: 70464)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "magick_columns", scope: !495, file: !77, line: 281, baseType: !504, size: 64, offset: 103232)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "magick_rows", scope: !495, file: !77, line: 282, baseType: !504, size: 64, offset: 103296)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "exception", scope: !495, file: !77, line: 285, baseType: !654, size: 448, offset: 103360)
!654 = !DIDerivedType(tag: DW_TAG_typedef, name: "ExceptionInfo", file: !4, line: 219, baseType: !655)
!655 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ExceptionInfo", file: !253, line: 102, size: 448, elements: !656)
!656 = !{!657, !659, !661, !662, !663, !664, !665, !670}
!657 = !DIDerivedType(tag: DW_TAG_member, name: "severity", scope: !655, file: !253, line: 105, baseType: !658, size: 32)
!658 = !DIDerivedType(tag: DW_TAG_typedef, name: "ExceptionType", file: !253, line: 100, baseType: !252)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "error_number", scope: !655, file: !253, line: 108, baseType: !660, size: 32, offset: 32)
!660 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "reason", scope: !655, file: !253, line: 111, baseType: !552, size: 64, offset: 64)
!662 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !655, file: !253, line: 112, baseType: !552, size: 64, offset: 128)
!663 = !DIDerivedType(tag: DW_TAG_member, name: "exceptions", scope: !655, file: !253, line: 115, baseType: !548, size: 64, offset: 192)
!664 = !DIDerivedType(tag: DW_TAG_member, name: "relinquish", scope: !655, file: !253, line: 118, baseType: !509, size: 32, offset: 256)
!665 = !DIDerivedType(tag: DW_TAG_member, name: "semaphore", scope: !655, file: !253, line: 121, baseType: !666, size: 64, offset: 320)
!666 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !667, size: 64)
!667 = !DIDerivedType(tag: DW_TAG_typedef, name: "SemaphoreInfo", file: !668, line: 26, baseType: !669)
!668 = !DIFile(filename: "./magick/semaphore.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!669 = !DICompositeType(tag: DW_TAG_structure_type, name: "SemaphoreInfo", file: !668, line: 25, flags: DIFlagFwdDecl)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !655, file: !253, line: 124, baseType: !504, size: 64, offset: 384)
!671 = !DIDerivedType(tag: DW_TAG_member, name: "debug", scope: !495, file: !77, line: 288, baseType: !509, size: 32, offset: 103808)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "reference_count", scope: !495, file: !77, line: 291, baseType: !673, size: 64, offset: 103872)
!673 = !DIDerivedType(tag: DW_TAG_volatile_type, baseType: !557)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "semaphore", scope: !495, file: !77, line: 294, baseType: !666, size: 64, offset: 103936)
!675 = !DIDerivedType(tag: DW_TAG_member, name: "color_profile", scope: !495, file: !77, line: 297, baseType: !676, size: 256, offset: 104000)
!676 = !DIDerivedType(tag: DW_TAG_typedef, name: "ProfileInfo", file: !89, line: 40, baseType: !677)
!677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ProfileInfo", file: !89, line: 27, size: 256, elements: !678)
!678 = !{!679, !680, !681, !684}
!679 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !677, file: !89, line: 30, baseType: !552, size: 64)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !677, file: !89, line: 33, baseType: !504, size: 64, offset: 64)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "info", scope: !677, file: !89, line: 36, baseType: !682, size: 64, offset: 128)
!682 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !683, size: 64)
!683 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !677, file: !89, line: 39, baseType: !504, size: 64, offset: 192)
!685 = !DIDerivedType(tag: DW_TAG_member, name: "iptc_profile", scope: !495, file: !77, line: 298, baseType: !676, size: 256, offset: 104256)
!686 = !DIDerivedType(tag: DW_TAG_member, name: "generic_profile", scope: !495, file: !77, line: 299, baseType: !687, size: 64, offset: 104512)
!687 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !676, size: 64)
!688 = !DIDerivedType(tag: DW_TAG_member, name: "generic_profiles", scope: !495, file: !77, line: 302, baseType: !504, size: 64, offset: 104576)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !495, file: !77, line: 305, baseType: !504, size: 64, offset: 104640)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "previous", scope: !495, file: !77, line: 308, baseType: !590, size: 64, offset: 104704)
!691 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !495, file: !77, line: 309, baseType: !590, size: 64, offset: 104768)
!692 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !495, file: !77, line: 310, baseType: !590, size: 64, offset: 104832)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "interpolate", scope: !495, file: !77, line: 313, baseType: !694, size: 32, offset: 104896)
!694 = !DIDerivedType(tag: DW_TAG_typedef, name: "InterpolatePixelMethod", file: !326, line: 47, baseType: !325)
!695 = !DIDerivedType(tag: DW_TAG_member, name: "black_point_compensation", scope: !495, file: !77, line: 316, baseType: !509, size: 32, offset: 104928)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "transparent_color", scope: !495, file: !77, line: 319, baseType: !517, size: 64, offset: 104960)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !495, file: !77, line: 322, baseType: !590, size: 64, offset: 105024)
!698 = !DIDerivedType(tag: DW_TAG_member, name: "tile_offset", scope: !495, file: !77, line: 325, baseType: !565, size: 256, offset: 105088)
!699 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !495, file: !77, line: 328, baseType: !548, size: 64, offset: 105344)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "artifacts", scope: !495, file: !77, line: 329, baseType: !548, size: 64, offset: 105408)
!701 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !495, file: !77, line: 332, baseType: !702, size: 32, offset: 105472)
!702 = !DIDerivedType(tag: DW_TAG_typedef, name: "ImageType", file: !77, line: 61, baseType: !342)
!703 = !DIDerivedType(tag: DW_TAG_member, name: "dither", scope: !495, file: !77, line: 335, baseType: !509, size: 32, offset: 105504)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "extent", scope: !495, file: !77, line: 338, baseType: !632, size: 64, offset: 105536)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "ping", scope: !495, file: !77, line: 341, baseType: !509, size: 32, offset: 105600)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !495, file: !77, line: 344, baseType: !504, size: 64, offset: 105664)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "timestamp", scope: !495, file: !77, line: 347, baseType: !708, size: 64, offset: 105728)
!708 = !DIDerivedType(tag: DW_TAG_typedef, name: "time_t", file: !709, line: 7, baseType: !710)
!709 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types/time_t.h", directory: "")
!710 = !DIDerivedType(tag: DW_TAG_typedef, name: "__time_t", file: !560, line: 160, baseType: !561)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "intensity", scope: !495, file: !77, line: 350, baseType: !712, size: 32, offset: 105792)
!712 = !DIDerivedType(tag: DW_TAG_typedef, name: "PixelIntensityMethod", file: !326, line: 79, baseType: !356)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !495, file: !77, line: 353, baseType: !504, size: 64, offset: 105856)
!714 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !715, size: 64)
!715 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !716, size: 64)
!716 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickPixelPacket", file: !326, line: 127, baseType: !717)
!717 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_MagickPixelPacket", file: !326, line: 104, size: 448, elements: !718)
!718 = !{!719, !720, !721, !722, !723, !724, !727, !728, !729, !730}
!719 = !DIDerivedType(tag: DW_TAG_member, name: "storage_class", scope: !717, file: !326, line: 107, baseType: !498, size: 32)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !717, file: !326, line: 110, baseType: !500, size: 32, offset: 32)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "matte", scope: !717, file: !326, line: 113, baseType: !509, size: 32, offset: 64)
!722 = !DIDerivedType(tag: DW_TAG_member, name: "fuzz", scope: !717, file: !326, line: 116, baseType: !530, size: 64, offset: 128)
!723 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !717, file: !326, line: 119, baseType: !504, size: 64, offset: 192)
!724 = !DIDerivedType(tag: DW_TAG_member, name: "red", scope: !717, file: !326, line: 122, baseType: !725, size: 32, offset: 256)
!725 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickRealType", file: !4, line: 78, baseType: !726)
!726 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "green", scope: !717, file: !326, line: 123, baseType: !725, size: 32, offset: 288)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "blue", scope: !717, file: !326, line: 124, baseType: !725, size: 32, offset: 320)
!729 = !DIDerivedType(tag: DW_TAG_member, name: "opacity", scope: !717, file: !326, line: 125, baseType: !725, size: 32, offset: 352)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "index", scope: !717, file: !326, line: 126, baseType: !725, size: 32, offset: 384)
!731 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !732, size: 64)
!732 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !517)
!733 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !734, size: 64)
!734 = !DIDerivedType(tag: DW_TAG_typedef, name: "IndexPacket", file: !326, line: 129, baseType: !521)
!735 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !736, size: 64)
!736 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !734)
!737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !738, size: 64)
!738 = !DIDerivedType(tag: DW_TAG_typedef, name: "ChannelStatistics", file: !369, line: 44, baseType: !739)
!739 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ChannelStatistics", file: !369, line: 27, size: 768, elements: !740)
!740 = !{!741, !742, !743, !744, !745, !746, !747, !748, !749, !750, !751, !752}
!741 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !739, file: !369, line: 30, baseType: !504, size: 64)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "minima", scope: !739, file: !369, line: 33, baseType: !530, size: 64, offset: 64)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "maxima", scope: !739, file: !369, line: 34, baseType: !530, size: 64, offset: 128)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "sum", scope: !739, file: !369, line: 35, baseType: !530, size: 64, offset: 192)
!745 = !DIDerivedType(tag: DW_TAG_member, name: "sum_squared", scope: !739, file: !369, line: 36, baseType: !530, size: 64, offset: 256)
!746 = !DIDerivedType(tag: DW_TAG_member, name: "sum_cubed", scope: !739, file: !369, line: 37, baseType: !530, size: 64, offset: 320)
!747 = !DIDerivedType(tag: DW_TAG_member, name: "sum_fourth_power", scope: !739, file: !369, line: 38, baseType: !530, size: 64, offset: 384)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "mean", scope: !739, file: !369, line: 39, baseType: !530, size: 64, offset: 448)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "variance", scope: !739, file: !369, line: 40, baseType: !530, size: 64, offset: 512)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "standard_deviation", scope: !739, file: !369, line: 41, baseType: !530, size: 64, offset: 576)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "kurtosis", scope: !739, file: !369, line: 42, baseType: !530, size: 64, offset: 640)
!752 = !DIDerivedType(tag: DW_TAG_member, name: "skewness", scope: !739, file: !369, line: 43, baseType: !530, size: 64, offset: 704)
!753 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !754, size: 64)
!754 = !DIDerivedType(tag: DW_TAG_typedef, name: "ChannelMoments", file: !369, line: 59, baseType: !755)
!755 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ChannelMoments", file: !369, line: 46, size: 2496, elements: !756)
!756 = !{!757, !761, !768, !769, !770, !771}
!757 = !DIDerivedType(tag: DW_TAG_member, name: "I", scope: !755, file: !369, line: 49, baseType: !758, size: 2048)
!758 = !DICompositeType(tag: DW_TAG_array_type, baseType: !530, size: 2048, elements: !759)
!759 = !{!760}
!760 = !DISubrange(count: 32)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "centroid", scope: !755, file: !369, line: 52, baseType: !762, size: 128, offset: 2048)
!762 = !DIDerivedType(tag: DW_TAG_typedef, name: "PointInfo", file: !763, line: 142, baseType: !764)
!763 = !DIFile(filename: "./magick/draw.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!764 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_PointInfo", file: !763, line: 137, size: 128, elements: !765)
!765 = !{!766, !767}
!766 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !764, file: !763, line: 140, baseType: !530, size: 64)
!767 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !764, file: !763, line: 141, baseType: !530, size: 64, offset: 64)
!768 = !DIDerivedType(tag: DW_TAG_member, name: "ellipse_axis", scope: !755, file: !369, line: 53, baseType: !762, size: 128, offset: 2176)
!769 = !DIDerivedType(tag: DW_TAG_member, name: "ellipse_angle", scope: !755, file: !369, line: 56, baseType: !530, size: 64, offset: 2304)
!770 = !DIDerivedType(tag: DW_TAG_member, name: "ellipse_eccentricity", scope: !755, file: !369, line: 57, baseType: !530, size: 64, offset: 2368)
!771 = !DIDerivedType(tag: DW_TAG_member, name: "ellipse_intensity", scope: !755, file: !369, line: 58, baseType: !530, size: 64, offset: 2432)
!772 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !773, size: 64)
!773 = !DIDerivedType(tag: DW_TAG_typedef, name: "ChannelPerceptualHash", file: !369, line: 66, baseType: !774)
!774 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ChannelPerceptualHash", file: !369, line: 61, size: 4096, elements: !775)
!775 = !{!776, !777}
!776 = !DIDerivedType(tag: DW_TAG_member, name: "P", scope: !774, file: !369, line: 64, baseType: !758, size: 2048)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "Q", scope: !774, file: !369, line: 65, baseType: !758, size: 2048, offset: 2048)
!778 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !779, size: 64)
!779 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !780, size: 64)
!780 = !DIDerivedType(tag: DW_TAG_typedef, name: "PixelList", file: !1, line: 2696, baseType: !781)
!781 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_PixelList", file: !1, line: 2687, size: 832, elements: !782)
!782 = !{!783, !784, !785, !786}
!783 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !781, file: !1, line: 2690, baseType: !504, size: 64)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "seed", scope: !781, file: !1, line: 2691, baseType: !504, size: 64, offset: 64)
!785 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !781, file: !1, line: 2692, baseType: !504, size: 64, offset: 128)
!786 = !DIDerivedType(tag: DW_TAG_member, name: "lists", scope: !781, file: !1, line: 2695, baseType: !787, size: 640, offset: 192)
!787 = !DICompositeType(tag: DW_TAG_array_type, baseType: !788, size: 640, elements: !803)
!788 = !DIDerivedType(tag: DW_TAG_typedef, name: "SkipList", file: !1, line: 2685, baseType: !789)
!789 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_SkipList", file: !1, line: 2678, size: 128, elements: !790)
!790 = !{!791, !792}
!791 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !789, file: !1, line: 2681, baseType: !557, size: 64)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "nodes", scope: !789, file: !1, line: 2684, baseType: !793, size: 64, offset: 64)
!793 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !794, size: 64)
!794 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListNode", file: !1, line: 2676, baseType: !795)
!795 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "_ListNode", file: !1, line: 2670, size: 704, elements: !796)
!796 = !{!797, !801, !802}
!797 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !795, file: !1, line: 2673, baseType: !798, size: 576)
!798 = !DICompositeType(tag: DW_TAG_array_type, baseType: !504, size: 576, elements: !799)
!799 = !{!800}
!800 = !DISubrange(count: 9)
!801 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !795, file: !1, line: 2674, baseType: !504, size: 64, offset: 576)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "signature", scope: !795, file: !1, line: 2675, baseType: !504, size: 64, offset: 640)
!803 = !{!804}
!804 = !DISubrange(count: 5)
!805 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !806, size: 64)
!806 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !807, size: 64)
!807 = !DIDerivedType(tag: DW_TAG_typedef, name: "RandomInfo", file: !808, line: 31, baseType: !809)
!808 = !DIFile(filename: "./magick/random_.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!809 = !DICompositeType(tag: DW_TAG_structure_type, name: "_RandomInfo", file: !808, line: 30, flags: DIFlagFwdDecl)
!810 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !811, size: 64)
!811 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !716)
!812 = !DIDerivedType(tag: DW_TAG_typedef, name: "QuantumAny", file: !4, line: 170, baseType: !632)
!813 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !814, size: 64)
!814 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !494)
!815 = !{i32 7, !"Dwarf Version", i32 4}
!816 = !{i32 2, !"Debug Info Version", i32 3}
!817 = !{i32 1, !"wchar_size", i32 4}
!818 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!819 = distinct !DISubprogram(name: "EvaluateImage", scope: !1, file: !1, line: 417, type: !820, scopeLine: 419, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !826)
!820 = !DISubroutineType(types: !821)
!821 = !{!509, !493, !822, !824, !825}
!822 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !823)
!823 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickEvaluateOperator", file: !369, line: 102, baseType: !368)
!824 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !530)
!825 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !654, size: 64)
!826 = !{}
!827 = !DILocalVariable(name: "image", arg: 1, scope: !819, file: !1, line: 417, type: !493)
!828 = !DILocation(line: 417, column: 53, scope: !819)
!829 = !DILocalVariable(name: "op", arg: 2, scope: !819, file: !1, line: 418, type: !822)
!830 = !DILocation(line: 418, column: 32, scope: !819)
!831 = !DILocalVariable(name: "value", arg: 3, scope: !819, file: !1, line: 418, type: !824)
!832 = !DILocation(line: 418, column: 48, scope: !819)
!833 = !DILocalVariable(name: "exception", arg: 4, scope: !819, file: !1, line: 418, type: !825)
!834 = !DILocation(line: 418, column: 69, scope: !819)
!835 = !DILocalVariable(name: "status", scope: !819, file: !1, line: 421, type: !509)
!836 = !DILocation(line: 421, column: 5, scope: !819)
!837 = !DILocation(line: 423, column: 31, scope: !819)
!838 = !DILocation(line: 423, column: 55, scope: !819)
!839 = !DILocation(line: 423, column: 58, scope: !819)
!840 = !DILocation(line: 423, column: 64, scope: !819)
!841 = !DILocation(line: 423, column: 10, scope: !819)
!842 = !DILocation(line: 423, column: 9, scope: !819)
!843 = !DILocation(line: 424, column: 10, scope: !819)
!844 = !DILocation(line: 424, column: 3, scope: !819)
!845 = distinct !DISubprogram(name: "EvaluateImageChannel", scope: !1, file: !1, line: 746, type: !846, scopeLine: 749, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !826)
!846 = !DISubroutineType(types: !847)
!847 = !{!509, !493, !848, !822, !824, !825}
!848 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !849)
!849 = !DIDerivedType(tag: DW_TAG_typedef, name: "ChannelType", file: !4, line: 202, baseType: !403)
!850 = !DILocalVariable(name: "image", arg: 1, scope: !845, file: !1, line: 746, type: !493)
!851 = !DILocation(line: 746, column: 60, scope: !845)
!852 = !DILocalVariable(name: "channel", arg: 2, scope: !845, file: !1, line: 747, type: !848)
!853 = !DILocation(line: 747, column: 21, scope: !845)
!854 = !DILocalVariable(name: "op", arg: 3, scope: !845, file: !1, line: 747, type: !822)
!855 = !DILocation(line: 747, column: 58, scope: !845)
!856 = !DILocalVariable(name: "value", arg: 4, scope: !845, file: !1, line: 747, type: !824)
!857 = !DILocation(line: 747, column: 74, scope: !845)
!858 = !DILocalVariable(name: "exception", arg: 5, scope: !845, file: !1, line: 748, type: !825)
!859 = !DILocation(line: 748, column: 18, scope: !845)
!860 = !DILocalVariable(name: "image_view", scope: !845, file: !1, line: 751, type: !861)
!861 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !862, size: 64)
!862 = !DIDerivedType(tag: DW_TAG_typedef, name: "CacheView", file: !863, line: 50, baseType: !864)
!863 = !DIFile(filename: "./magick/cache-view.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!864 = !DICompositeType(tag: DW_TAG_structure_type, name: "_CacheView", file: !326, line: 160, flags: DIFlagFwdDecl)
!865 = !DILocation(line: 751, column: 6, scope: !845)
!866 = !DILocalVariable(name: "status", scope: !845, file: !1, line: 754, type: !509)
!867 = !DILocation(line: 754, column: 5, scope: !845)
!868 = !DILocalVariable(name: "progress", scope: !845, file: !1, line: 757, type: !629)
!869 = !DILocation(line: 757, column: 5, scope: !845)
!870 = !DILocalVariable(name: "random_info", scope: !845, file: !1, line: 760, type: !871)
!871 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !805)
!872 = !DILocation(line: 760, column: 16, scope: !845)
!873 = !DILocalVariable(name: "y", scope: !845, file: !1, line: 763, type: !557)
!874 = !DILocation(line: 763, column: 5, scope: !845)
!875 = !DILocation(line: 772, column: 7, scope: !876)
!876 = distinct !DILexicalBlock(scope: !845, file: !1, line: 772, column: 7)
!877 = !DILocation(line: 772, column: 14, scope: !876)
!878 = !DILocation(line: 772, column: 20, scope: !876)
!879 = !DILocation(line: 772, column: 7, scope: !845)
!880 = !DILocation(line: 773, column: 61, scope: !876)
!881 = !DILocation(line: 773, column: 68, scope: !876)
!882 = !DILocation(line: 773, column: 12, scope: !876)
!883 = !DILocation(line: 773, column: 5, scope: !876)
!884 = !DILocation(line: 776, column: 28, scope: !885)
!885 = distinct !DILexicalBlock(scope: !845, file: !1, line: 776, column: 7)
!886 = !DILocation(line: 776, column: 7, scope: !885)
!887 = !DILocation(line: 776, column: 47, scope: !885)
!888 = !DILocation(line: 776, column: 7, scope: !845)
!889 = !DILocation(line: 778, column: 24, scope: !890)
!890 = distinct !DILexicalBlock(scope: !885, file: !1, line: 777, column: 5)
!891 = !DILocation(line: 778, column: 35, scope: !890)
!892 = !DILocation(line: 778, column: 42, scope: !890)
!893 = !DILocation(line: 778, column: 7, scope: !890)
!894 = !DILocation(line: 779, column: 7, scope: !890)
!895 = !DILocation(line: 781, column: 9, scope: !845)
!896 = !DILocation(line: 782, column: 11, scope: !845)
!897 = !DILocation(line: 783, column: 15, scope: !845)
!898 = !DILocation(line: 783, column: 14, scope: !845)
!899 = !DILocation(line: 787, column: 40, scope: !845)
!900 = !DILocation(line: 787, column: 46, scope: !845)
!901 = !DILocation(line: 787, column: 14, scope: !845)
!902 = !DILocation(line: 787, column: 13, scope: !845)
!903 = !DILocation(line: 792, column: 9, scope: !904)
!904 = distinct !DILexicalBlock(scope: !845, file: !1, line: 792, column: 3)
!905 = !DILocation(line: 792, column: 8, scope: !904)
!906 = !DILocation(line: 792, column: 13, scope: !907)
!907 = distinct !DILexicalBlock(scope: !904, file: !1, line: 792, column: 3)
!908 = !DILocation(line: 792, column: 27, scope: !907)
!909 = !DILocation(line: 792, column: 34, scope: !907)
!910 = !DILocation(line: 792, column: 15, scope: !907)
!911 = !DILocation(line: 792, column: 3, scope: !904)
!912 = !DILocalVariable(name: "id", scope: !913, file: !1, line: 795, type: !914)
!913 = distinct !DILexicalBlock(scope: !907, file: !1, line: 793, column: 3)
!914 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !660)
!915 = !DILocation(line: 795, column: 7, scope: !913)
!916 = !DILocation(line: 795, column: 12, scope: !913)
!917 = !DILocalVariable(name: "indexes", scope: !913, file: !1, line: 798, type: !918)
!918 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !733)
!919 = !DILocation(line: 798, column: 17, scope: !913)
!920 = !DILocalVariable(name: "q", scope: !913, file: !1, line: 801, type: !921)
!921 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !516)
!922 = !DILocation(line: 801, column: 17, scope: !913)
!923 = !DILocalVariable(name: "x", scope: !913, file: !1, line: 804, type: !557)
!924 = !DILocation(line: 804, column: 7, scope: !913)
!925 = !DILocation(line: 806, column: 9, scope: !926)
!926 = distinct !DILexicalBlock(scope: !913, file: !1, line: 806, column: 9)
!927 = !DILocation(line: 806, column: 16, scope: !926)
!928 = !DILocation(line: 806, column: 9, scope: !913)
!929 = !DILocation(line: 807, column: 7, scope: !926)
!930 = !DILocation(line: 808, column: 35, scope: !913)
!931 = !DILocation(line: 808, column: 48, scope: !913)
!932 = !DILocation(line: 808, column: 50, scope: !913)
!933 = !DILocation(line: 808, column: 57, scope: !913)
!934 = !DILocation(line: 808, column: 67, scope: !913)
!935 = !DILocation(line: 808, column: 7, scope: !913)
!936 = !DILocation(line: 808, column: 6, scope: !913)
!937 = !DILocation(line: 809, column: 9, scope: !938)
!938 = distinct !DILexicalBlock(scope: !913, file: !1, line: 809, column: 9)
!939 = !DILocation(line: 809, column: 11, scope: !938)
!940 = !DILocation(line: 809, column: 9, scope: !913)
!941 = !DILocation(line: 811, column: 15, scope: !942)
!942 = distinct !DILexicalBlock(scope: !938, file: !1, line: 810, column: 7)
!943 = !DILocation(line: 812, column: 9, scope: !942)
!944 = !DILocation(line: 814, column: 45, scope: !913)
!945 = !DILocation(line: 814, column: 13, scope: !913)
!946 = !DILocation(line: 814, column: 12, scope: !913)
!947 = !DILocation(line: 815, column: 11, scope: !948)
!948 = distinct !DILexicalBlock(scope: !913, file: !1, line: 815, column: 5)
!949 = !DILocation(line: 815, column: 10, scope: !948)
!950 = !DILocation(line: 815, column: 15, scope: !951)
!951 = distinct !DILexicalBlock(scope: !948, file: !1, line: 815, column: 5)
!952 = !DILocation(line: 815, column: 29, scope: !951)
!953 = !DILocation(line: 815, column: 36, scope: !951)
!954 = !DILocation(line: 815, column: 17, scope: !951)
!955 = !DILocation(line: 815, column: 5, scope: !948)
!956 = !DILocation(line: 817, column: 12, scope: !957)
!957 = distinct !DILexicalBlock(scope: !958, file: !1, line: 817, column: 11)
!958 = distinct !DILexicalBlock(scope: !951, file: !1, line: 816, column: 5)
!959 = !DILocation(line: 817, column: 20, scope: !957)
!960 = !DILocation(line: 817, column: 34, scope: !957)
!961 = !DILocation(line: 817, column: 11, scope: !958)
!962 = !DILocation(line: 818, column: 9, scope: !957)
!963 = !DILocation(line: 820, column: 12, scope: !964)
!964 = distinct !DILexicalBlock(scope: !958, file: !1, line: 820, column: 11)
!965 = !DILocation(line: 820, column: 20, scope: !964)
!966 = !DILocation(line: 820, column: 36, scope: !964)
!967 = !DILocation(line: 820, column: 11, scope: !958)
!968 = !DILocation(line: 821, column: 9, scope: !964)
!969 = !DILocation(line: 823, column: 12, scope: !970)
!970 = distinct !DILexicalBlock(scope: !958, file: !1, line: 823, column: 11)
!971 = !DILocation(line: 823, column: 20, scope: !970)
!972 = !DILocation(line: 823, column: 35, scope: !970)
!973 = !DILocation(line: 823, column: 11, scope: !958)
!974 = !DILocation(line: 824, column: 9, scope: !970)
!975 = !DILocation(line: 826, column: 12, scope: !976)
!976 = distinct !DILexicalBlock(scope: !958, file: !1, line: 826, column: 11)
!977 = !DILocation(line: 826, column: 20, scope: !976)
!978 = !DILocation(line: 826, column: 38, scope: !976)
!979 = !DILocation(line: 826, column: 11, scope: !958)
!980 = !DILocation(line: 828, column: 15, scope: !981)
!981 = distinct !DILexicalBlock(scope: !982, file: !1, line: 828, column: 15)
!982 = distinct !DILexicalBlock(scope: !976, file: !1, line: 827, column: 9)
!983 = !DILocation(line: 828, column: 22, scope: !981)
!984 = !DILocation(line: 828, column: 28, scope: !981)
!985 = !DILocation(line: 828, column: 15, scope: !982)
!986 = !DILocation(line: 829, column: 13, scope: !981)
!987 = !DILocation(line: 832, column: 13, scope: !981)
!988 = !DILocation(line: 834, column: 9, scope: !982)
!989 = !DILocation(line: 835, column: 13, scope: !990)
!990 = distinct !DILexicalBlock(scope: !958, file: !1, line: 835, column: 11)
!991 = !DILocation(line: 835, column: 21, scope: !990)
!992 = !DILocation(line: 835, column: 37, scope: !990)
!993 = !DILocation(line: 835, column: 43, scope: !990)
!994 = !DILocation(line: 835, column: 47, scope: !990)
!995 = !DILocation(line: 835, column: 55, scope: !990)
!996 = !DILocation(line: 835, column: 11, scope: !958)
!997 = !DILocation(line: 836, column: 9, scope: !998)
!998 = distinct !DILexicalBlock(scope: !999, file: !1, line: 836, column: 9)
!999 = distinct !DILexicalBlock(scope: !990, file: !1, line: 836, column: 9)
!1000 = !DILocation(line: 836, column: 9, scope: !999)
!1001 = !DILocation(line: 838, column: 8, scope: !958)
!1002 = !DILocation(line: 839, column: 5, scope: !958)
!1003 = !DILocation(line: 815, column: 46, scope: !951)
!1004 = !DILocation(line: 815, column: 5, scope: !951)
!1005 = distinct !{!1005, !955, !1006}
!1006 = !DILocation(line: 839, column: 5, scope: !948)
!1007 = !DILocation(line: 840, column: 38, scope: !1008)
!1008 = distinct !DILexicalBlock(scope: !913, file: !1, line: 840, column: 9)
!1009 = !DILocation(line: 840, column: 49, scope: !1008)
!1010 = !DILocation(line: 840, column: 9, scope: !1008)
!1011 = !DILocation(line: 840, column: 60, scope: !1008)
!1012 = !DILocation(line: 840, column: 9, scope: !913)
!1013 = !DILocation(line: 841, column: 13, scope: !1008)
!1014 = !DILocation(line: 841, column: 7, scope: !1008)
!1015 = !DILocation(line: 842, column: 9, scope: !1016)
!1016 = distinct !DILexicalBlock(scope: !913, file: !1, line: 842, column: 9)
!1017 = !DILocation(line: 842, column: 16, scope: !1016)
!1018 = !DILocation(line: 842, column: 33, scope: !1016)
!1019 = !DILocation(line: 842, column: 9, scope: !913)
!1020 = !DILocalVariable(name: "proceed", scope: !1021, file: !1, line: 845, type: !509)
!1021 = distinct !DILexicalBlock(scope: !1016, file: !1, line: 843, column: 7)
!1022 = !DILocation(line: 845, column: 11, scope: !1021)
!1023 = !DILocation(line: 850, column: 34, scope: !1021)
!1024 = !DILocation(line: 850, column: 65, scope: !1021)
!1025 = !DILocation(line: 850, column: 68, scope: !1021)
!1026 = !DILocation(line: 850, column: 75, scope: !1021)
!1027 = !DILocation(line: 850, column: 17, scope: !1021)
!1028 = !DILocation(line: 850, column: 16, scope: !1021)
!1029 = !DILocation(line: 851, column: 13, scope: !1030)
!1030 = distinct !DILexicalBlock(scope: !1021, file: !1, line: 851, column: 13)
!1031 = !DILocation(line: 851, column: 21, scope: !1030)
!1032 = !DILocation(line: 851, column: 13, scope: !1021)
!1033 = !DILocation(line: 852, column: 17, scope: !1030)
!1034 = !DILocation(line: 852, column: 11, scope: !1030)
!1035 = !DILocation(line: 853, column: 7, scope: !1021)
!1036 = !DILocation(line: 854, column: 3, scope: !913)
!1037 = !DILocation(line: 792, column: 41, scope: !907)
!1038 = !DILocation(line: 792, column: 3, scope: !907)
!1039 = distinct !{!1039, !911, !1040}
!1040 = !DILocation(line: 854, column: 3, scope: !904)
!1041 = !DILocation(line: 855, column: 31, scope: !845)
!1042 = !DILocation(line: 855, column: 14, scope: !845)
!1043 = !DILocation(line: 855, column: 13, scope: !845)
!1044 = !DILocation(line: 856, column: 42, scope: !845)
!1045 = !DILocation(line: 856, column: 15, scope: !845)
!1046 = !DILocation(line: 856, column: 14, scope: !845)
!1047 = !DILocation(line: 857, column: 10, scope: !845)
!1048 = !DILocation(line: 857, column: 3, scope: !845)
!1049 = !DILocation(line: 858, column: 1, scope: !845)
!1050 = distinct !DISubprogram(name: "EvaluateImages", scope: !1, file: !1, line: 427, type: !1051, scopeLine: 429, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !826)
!1051 = !DISubroutineType(types: !1052)
!1052 = !{!493, !813, !822, !825}
!1053 = !DILocalVariable(name: "images", arg: 1, scope: !1050, file: !1, line: 427, type: !813)
!1054 = !DILocation(line: 427, column: 49, scope: !1050)
!1055 = !DILocalVariable(name: "op", arg: 2, scope: !1050, file: !1, line: 428, type: !822)
!1056 = !DILocation(line: 428, column: 32, scope: !1050)
!1057 = !DILocalVariable(name: "exception", arg: 3, scope: !1050, file: !1, line: 428, type: !825)
!1058 = !DILocation(line: 428, column: 50, scope: !1050)
!1059 = !DILocalVariable(name: "evaluate_view", scope: !1050, file: !1, line: 433, type: !861)
!1060 = !DILocation(line: 433, column: 6, scope: !1050)
!1061 = !DILocalVariable(name: "image", scope: !1050, file: !1, line: 436, type: !493)
!1062 = !DILocation(line: 436, column: 6, scope: !1050)
!1063 = !DILocalVariable(name: "status", scope: !1050, file: !1, line: 439, type: !509)
!1064 = !DILocation(line: 439, column: 5, scope: !1050)
!1065 = !DILocalVariable(name: "progress", scope: !1050, file: !1, line: 442, type: !629)
!1066 = !DILocation(line: 442, column: 5, scope: !1050)
!1067 = !DILocalVariable(name: "evaluate_pixels", scope: !1050, file: !1, line: 445, type: !1068)
!1068 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !714)
!1069 = !DILocation(line: 445, column: 16, scope: !1050)
!1070 = !DILocalVariable(name: "zero", scope: !1050, file: !1, line: 446, type: !716)
!1071 = !DILocation(line: 446, column: 5, scope: !1050)
!1072 = !DILocalVariable(name: "random_info", scope: !1050, file: !1, line: 449, type: !871)
!1073 = !DILocation(line: 449, column: 16, scope: !1050)
!1074 = !DILocalVariable(name: "number_images", scope: !1050, file: !1, line: 452, type: !504)
!1075 = !DILocation(line: 452, column: 5, scope: !1050)
!1076 = !DILocalVariable(name: "y", scope: !1050, file: !1, line: 455, type: !557)
!1077 = !DILocation(line: 455, column: 5, scope: !1050)
!1078 = !DILocation(line: 464, column: 7, scope: !1079)
!1079 = distinct !DILexicalBlock(scope: !1050, file: !1, line: 464, column: 7)
!1080 = !DILocation(line: 464, column: 15, scope: !1079)
!1081 = !DILocation(line: 464, column: 21, scope: !1079)
!1082 = !DILocation(line: 464, column: 7, scope: !1050)
!1083 = !DILocation(line: 465, column: 61, scope: !1079)
!1084 = !DILocation(line: 465, column: 69, scope: !1079)
!1085 = !DILocation(line: 465, column: 12, scope: !1079)
!1086 = !DILocation(line: 465, column: 5, scope: !1079)
!1087 = !DILocation(line: 468, column: 20, scope: !1050)
!1088 = !DILocation(line: 468, column: 27, scope: !1050)
!1089 = !DILocation(line: 468, column: 35, scope: !1050)
!1090 = !DILocation(line: 468, column: 43, scope: !1050)
!1091 = !DILocation(line: 468, column: 51, scope: !1050)
!1092 = !DILocation(line: 468, column: 67, scope: !1050)
!1093 = !DILocation(line: 468, column: 9, scope: !1050)
!1094 = !DILocation(line: 468, column: 8, scope: !1050)
!1095 = !DILocation(line: 469, column: 7, scope: !1096)
!1096 = distinct !DILexicalBlock(scope: !1050, file: !1, line: 469, column: 7)
!1097 = !DILocation(line: 469, column: 13, scope: !1096)
!1098 = !DILocation(line: 469, column: 7, scope: !1050)
!1099 = !DILocation(line: 470, column: 5, scope: !1096)
!1100 = !DILocation(line: 471, column: 28, scope: !1101)
!1101 = distinct !DILexicalBlock(scope: !1050, file: !1, line: 471, column: 7)
!1102 = !DILocation(line: 471, column: 7, scope: !1101)
!1103 = !DILocation(line: 471, column: 47, scope: !1101)
!1104 = !DILocation(line: 471, column: 7, scope: !1050)
!1105 = !DILocation(line: 473, column: 24, scope: !1106)
!1106 = distinct !DILexicalBlock(scope: !1101, file: !1, line: 472, column: 5)
!1107 = !DILocation(line: 473, column: 35, scope: !1106)
!1108 = !DILocation(line: 473, column: 42, scope: !1106)
!1109 = !DILocation(line: 473, column: 7, scope: !1106)
!1110 = !DILocation(line: 474, column: 26, scope: !1106)
!1111 = !DILocation(line: 474, column: 13, scope: !1106)
!1112 = !DILocation(line: 474, column: 12, scope: !1106)
!1113 = !DILocation(line: 475, column: 7, scope: !1106)
!1114 = !DILocation(line: 477, column: 36, scope: !1050)
!1115 = !DILocation(line: 477, column: 17, scope: !1050)
!1116 = !DILocation(line: 477, column: 16, scope: !1050)
!1117 = !DILocation(line: 478, column: 41, scope: !1050)
!1118 = !DILocation(line: 478, column: 48, scope: !1050)
!1119 = !DILocation(line: 478, column: 19, scope: !1050)
!1120 = !DILocation(line: 478, column: 18, scope: !1050)
!1121 = !DILocation(line: 479, column: 7, scope: !1122)
!1122 = distinct !DILexicalBlock(scope: !1050, file: !1, line: 479, column: 7)
!1123 = !DILocation(line: 479, column: 23, scope: !1122)
!1124 = !DILocation(line: 479, column: 7, scope: !1050)
!1125 = !DILocation(line: 481, column: 26, scope: !1126)
!1126 = distinct !DILexicalBlock(scope: !1122, file: !1, line: 480, column: 5)
!1127 = !DILocation(line: 481, column: 13, scope: !1126)
!1128 = !DILocation(line: 481, column: 12, scope: !1126)
!1129 = !DILocation(line: 482, column: 35, scope: !1126)
!1130 = !DILocation(line: 483, column: 60, scope: !1126)
!1131 = !DILocation(line: 483, column: 68, scope: !1126)
!1132 = !DILocation(line: 482, column: 14, scope: !1126)
!1133 = !DILocation(line: 484, column: 7, scope: !1126)
!1134 = !DILocation(line: 489, column: 9, scope: !1050)
!1135 = !DILocation(line: 490, column: 11, scope: !1050)
!1136 = !DILocation(line: 491, column: 24, scope: !1050)
!1137 = !DILocation(line: 491, column: 3, scope: !1050)
!1138 = !DILocation(line: 492, column: 15, scope: !1050)
!1139 = !DILocation(line: 492, column: 14, scope: !1050)
!1140 = !DILocation(line: 496, column: 43, scope: !1050)
!1141 = !DILocation(line: 496, column: 49, scope: !1050)
!1142 = !DILocation(line: 496, column: 17, scope: !1050)
!1143 = !DILocation(line: 496, column: 16, scope: !1050)
!1144 = !DILocation(line: 497, column: 7, scope: !1145)
!1145 = distinct !DILexicalBlock(scope: !1050, file: !1, line: 497, column: 7)
!1146 = !DILocation(line: 497, column: 10, scope: !1145)
!1147 = !DILocation(line: 497, column: 7, scope: !1050)
!1148 = !DILocation(line: 503, column: 13, scope: !1149)
!1149 = distinct !DILexicalBlock(scope: !1150, file: !1, line: 503, column: 7)
!1150 = distinct !DILexicalBlock(scope: !1145, file: !1, line: 498, column: 5)
!1151 = !DILocation(line: 503, column: 12, scope: !1149)
!1152 = !DILocation(line: 503, column: 17, scope: !1153)
!1153 = distinct !DILexicalBlock(scope: !1149, file: !1, line: 503, column: 7)
!1154 = !DILocation(line: 503, column: 31, scope: !1153)
!1155 = !DILocation(line: 503, column: 38, scope: !1153)
!1156 = !DILocation(line: 503, column: 19, scope: !1153)
!1157 = !DILocation(line: 503, column: 7, scope: !1149)
!1158 = !DILocalVariable(name: "image_view", scope: !1159, file: !1, line: 506, type: !861)
!1159 = distinct !DILexicalBlock(scope: !1153, file: !1, line: 504, column: 7)
!1160 = !DILocation(line: 506, column: 12, scope: !1159)
!1161 = !DILocalVariable(name: "next", scope: !1159, file: !1, line: 509, type: !813)
!1162 = !DILocation(line: 509, column: 12, scope: !1159)
!1163 = !DILocalVariable(name: "id", scope: !1159, file: !1, line: 512, type: !914)
!1164 = !DILocation(line: 512, column: 11, scope: !1159)
!1165 = !DILocation(line: 512, column: 16, scope: !1159)
!1166 = !DILocalVariable(name: "evaluate_indexes", scope: !1159, file: !1, line: 515, type: !918)
!1167 = !DILocation(line: 515, column: 21, scope: !1159)
!1168 = !DILocalVariable(name: "evaluate_pixel", scope: !1159, file: !1, line: 518, type: !715)
!1169 = !DILocation(line: 518, column: 12, scope: !1159)
!1170 = !DILocalVariable(name: "q", scope: !1159, file: !1, line: 521, type: !921)
!1171 = !DILocation(line: 521, column: 21, scope: !1159)
!1172 = !DILocalVariable(name: "x", scope: !1159, file: !1, line: 524, type: !557)
!1173 = !DILocation(line: 524, column: 11, scope: !1159)
!1174 = !DILocation(line: 526, column: 13, scope: !1175)
!1175 = distinct !DILexicalBlock(scope: !1159, file: !1, line: 526, column: 13)
!1176 = !DILocation(line: 526, column: 20, scope: !1175)
!1177 = !DILocation(line: 526, column: 13, scope: !1159)
!1178 = !DILocation(line: 527, column: 11, scope: !1175)
!1179 = !DILocation(line: 528, column: 41, scope: !1159)
!1180 = !DILocation(line: 528, column: 57, scope: !1159)
!1181 = !DILocation(line: 529, column: 11, scope: !1159)
!1182 = !DILocation(line: 529, column: 18, scope: !1159)
!1183 = !DILocation(line: 529, column: 28, scope: !1159)
!1184 = !DILocation(line: 528, column: 11, scope: !1159)
!1185 = !DILocation(line: 528, column: 10, scope: !1159)
!1186 = !DILocation(line: 530, column: 13, scope: !1187)
!1187 = distinct !DILexicalBlock(scope: !1159, file: !1, line: 530, column: 13)
!1188 = !DILocation(line: 530, column: 15, scope: !1187)
!1189 = !DILocation(line: 530, column: 13, scope: !1159)
!1190 = !DILocation(line: 532, column: 19, scope: !1191)
!1191 = distinct !DILexicalBlock(scope: !1187, file: !1, line: 531, column: 11)
!1192 = !DILocation(line: 533, column: 13, scope: !1191)
!1193 = !DILocation(line: 535, column: 58, scope: !1159)
!1194 = !DILocation(line: 535, column: 26, scope: !1159)
!1195 = !DILocation(line: 535, column: 25, scope: !1159)
!1196 = !DILocation(line: 536, column: 24, scope: !1159)
!1197 = !DILocation(line: 536, column: 40, scope: !1159)
!1198 = !DILocation(line: 536, column: 23, scope: !1159)
!1199 = !DILocation(line: 537, column: 15, scope: !1200)
!1200 = distinct !DILexicalBlock(scope: !1159, file: !1, line: 537, column: 9)
!1201 = !DILocation(line: 537, column: 14, scope: !1200)
!1202 = !DILocation(line: 537, column: 19, scope: !1203)
!1203 = distinct !DILexicalBlock(scope: !1200, file: !1, line: 537, column: 9)
!1204 = !DILocation(line: 537, column: 33, scope: !1203)
!1205 = !DILocation(line: 537, column: 40, scope: !1203)
!1206 = !DILocation(line: 537, column: 21, scope: !1203)
!1207 = !DILocation(line: 537, column: 9, scope: !1200)
!1208 = !DILocalVariable(name: "i", scope: !1209, file: !1, line: 540, type: !557)
!1209 = distinct !DILexicalBlock(scope: !1203, file: !1, line: 538, column: 9)
!1210 = !DILocation(line: 540, column: 13, scope: !1209)
!1211 = !DILocation(line: 542, column: 17, scope: !1212)
!1212 = distinct !DILexicalBlock(scope: !1209, file: !1, line: 542, column: 11)
!1213 = !DILocation(line: 542, column: 16, scope: !1212)
!1214 = !DILocation(line: 542, column: 21, scope: !1215)
!1215 = distinct !DILexicalBlock(scope: !1212, file: !1, line: 542, column: 11)
!1216 = !DILocation(line: 542, column: 35, scope: !1215)
!1217 = !DILocation(line: 542, column: 23, scope: !1215)
!1218 = !DILocation(line: 542, column: 11, scope: !1212)
!1219 = !DILocation(line: 543, column: 13, scope: !1215)
!1220 = !DILocation(line: 543, column: 28, scope: !1215)
!1221 = !DILocation(line: 543, column: 31, scope: !1215)
!1222 = !DILocation(line: 542, column: 51, scope: !1215)
!1223 = !DILocation(line: 542, column: 11, scope: !1215)
!1224 = distinct !{!1224, !1218, !1225}
!1225 = !DILocation(line: 543, column: 31, scope: !1212)
!1226 = !DILocation(line: 544, column: 16, scope: !1209)
!1227 = !DILocation(line: 544, column: 15, scope: !1209)
!1228 = !DILocation(line: 545, column: 17, scope: !1229)
!1229 = distinct !DILexicalBlock(scope: !1209, file: !1, line: 545, column: 11)
!1230 = !DILocation(line: 545, column: 16, scope: !1229)
!1231 = !DILocation(line: 545, column: 21, scope: !1232)
!1232 = distinct !DILexicalBlock(scope: !1229, file: !1, line: 545, column: 11)
!1233 = !DILocation(line: 545, column: 35, scope: !1232)
!1234 = !DILocation(line: 545, column: 23, scope: !1232)
!1235 = !DILocation(line: 545, column: 11, scope: !1229)
!1236 = !DILocalVariable(name: "indexes", scope: !1237, file: !1, line: 548, type: !735)
!1237 = distinct !DILexicalBlock(scope: !1232, file: !1, line: 546, column: 11)
!1238 = !DILocation(line: 548, column: 16, scope: !1237)
!1239 = !DILocalVariable(name: "p", scope: !1237, file: !1, line: 551, type: !731)
!1240 = !DILocation(line: 551, column: 16, scope: !1237)
!1241 = !DILocation(line: 553, column: 48, scope: !1237)
!1242 = !DILocation(line: 553, column: 53, scope: !1237)
!1243 = !DILocation(line: 553, column: 24, scope: !1237)
!1244 = !DILocation(line: 553, column: 23, scope: !1237)
!1245 = !DILocation(line: 554, column: 41, scope: !1237)
!1246 = !DILocation(line: 554, column: 52, scope: !1237)
!1247 = !DILocation(line: 554, column: 54, scope: !1237)
!1248 = !DILocation(line: 554, column: 60, scope: !1237)
!1249 = !DILocation(line: 554, column: 15, scope: !1237)
!1250 = !DILocation(line: 554, column: 14, scope: !1237)
!1251 = !DILocation(line: 555, column: 17, scope: !1252)
!1252 = distinct !DILexicalBlock(scope: !1237, file: !1, line: 555, column: 17)
!1253 = !DILocation(line: 555, column: 19, scope: !1252)
!1254 = !DILocation(line: 555, column: 17, scope: !1237)
!1255 = !DILocation(line: 557, column: 45, scope: !1256)
!1256 = distinct !DILexicalBlock(scope: !1252, file: !1, line: 556, column: 15)
!1257 = !DILocation(line: 557, column: 28, scope: !1256)
!1258 = !DILocation(line: 557, column: 27, scope: !1256)
!1259 = !DILocation(line: 558, column: 17, scope: !1256)
!1260 = !DILocation(line: 560, column: 51, scope: !1237)
!1261 = !DILocation(line: 560, column: 21, scope: !1237)
!1262 = !DILocation(line: 560, column: 20, scope: !1237)
!1263 = !DILocation(line: 561, column: 57, scope: !1237)
!1264 = !DILocation(line: 561, column: 69, scope: !1237)
!1265 = !DILocation(line: 562, column: 15, scope: !1237)
!1266 = !DILocation(line: 562, column: 30, scope: !1237)
!1267 = !DILocation(line: 562, column: 33, scope: !1237)
!1268 = !DILocation(line: 562, column: 48, scope: !1237)
!1269 = !DILocation(line: 562, column: 51, scope: !1237)
!1270 = !DILocation(line: 561, column: 35, scope: !1237)
!1271 = !DILocation(line: 561, column: 13, scope: !1237)
!1272 = !DILocation(line: 561, column: 28, scope: !1237)
!1273 = !DILocation(line: 561, column: 31, scope: !1237)
!1274 = !DILocation(line: 561, column: 34, scope: !1237)
!1275 = !DILocation(line: 563, column: 59, scope: !1237)
!1276 = !DILocation(line: 563, column: 71, scope: !1237)
!1277 = !DILocation(line: 564, column: 15, scope: !1237)
!1278 = !DILocation(line: 564, column: 32, scope: !1237)
!1279 = !DILocation(line: 564, column: 35, scope: !1237)
!1280 = !DILocation(line: 564, column: 50, scope: !1237)
!1281 = !DILocation(line: 564, column: 53, scope: !1237)
!1282 = !DILocation(line: 563, column: 37, scope: !1237)
!1283 = !DILocation(line: 563, column: 13, scope: !1237)
!1284 = !DILocation(line: 563, column: 28, scope: !1237)
!1285 = !DILocation(line: 563, column: 31, scope: !1237)
!1286 = !DILocation(line: 563, column: 36, scope: !1237)
!1287 = !DILocation(line: 565, column: 58, scope: !1237)
!1288 = !DILocation(line: 565, column: 70, scope: !1237)
!1289 = !DILocation(line: 566, column: 15, scope: !1237)
!1290 = !DILocation(line: 566, column: 31, scope: !1237)
!1291 = !DILocation(line: 566, column: 34, scope: !1237)
!1292 = !DILocation(line: 566, column: 49, scope: !1237)
!1293 = !DILocation(line: 566, column: 52, scope: !1237)
!1294 = !DILocation(line: 565, column: 36, scope: !1237)
!1295 = !DILocation(line: 565, column: 13, scope: !1237)
!1296 = !DILocation(line: 565, column: 28, scope: !1237)
!1297 = !DILocation(line: 565, column: 31, scope: !1237)
!1298 = !DILocation(line: 565, column: 35, scope: !1237)
!1299 = !DILocation(line: 567, column: 61, scope: !1237)
!1300 = !DILocation(line: 567, column: 73, scope: !1237)
!1301 = !DILocation(line: 568, column: 15, scope: !1237)
!1302 = !DILocation(line: 568, column: 32, scope: !1237)
!1303 = !DILocation(line: 568, column: 35, scope: !1237)
!1304 = !DILocation(line: 568, column: 50, scope: !1237)
!1305 = !DILocation(line: 568, column: 53, scope: !1237)
!1306 = !DILocation(line: 567, column: 39, scope: !1237)
!1307 = !DILocation(line: 567, column: 13, scope: !1237)
!1308 = !DILocation(line: 567, column: 28, scope: !1237)
!1309 = !DILocation(line: 567, column: 31, scope: !1237)
!1310 = !DILocation(line: 567, column: 38, scope: !1237)
!1311 = !DILocation(line: 569, column: 17, scope: !1312)
!1312 = distinct !DILexicalBlock(scope: !1237, file: !1, line: 569, column: 17)
!1313 = !DILocation(line: 569, column: 24, scope: !1312)
!1314 = !DILocation(line: 569, column: 35, scope: !1312)
!1315 = !DILocation(line: 569, column: 17, scope: !1237)
!1316 = !DILocation(line: 570, column: 61, scope: !1312)
!1317 = !DILocation(line: 570, column: 73, scope: !1312)
!1318 = !DILocation(line: 571, column: 18, scope: !1312)
!1319 = !DILocation(line: 571, column: 17, scope: !1312)
!1320 = !DILocation(line: 571, column: 26, scope: !1312)
!1321 = !DILocation(line: 571, column: 29, scope: !1312)
!1322 = !DILocation(line: 571, column: 44, scope: !1312)
!1323 = !DILocation(line: 571, column: 47, scope: !1312)
!1324 = !DILocation(line: 570, column: 39, scope: !1312)
!1325 = !DILocation(line: 570, column: 15, scope: !1312)
!1326 = !DILocation(line: 570, column: 30, scope: !1312)
!1327 = !DILocation(line: 570, column: 33, scope: !1312)
!1328 = !DILocation(line: 570, column: 38, scope: !1312)
!1329 = !DILocation(line: 572, column: 41, scope: !1237)
!1330 = !DILocation(line: 572, column: 24, scope: !1237)
!1331 = !DILocation(line: 572, column: 23, scope: !1237)
!1332 = !DILocation(line: 573, column: 37, scope: !1237)
!1333 = !DILocation(line: 573, column: 18, scope: !1237)
!1334 = !DILocation(line: 573, column: 17, scope: !1237)
!1335 = !DILocation(line: 574, column: 11, scope: !1237)
!1336 = !DILocation(line: 545, column: 51, scope: !1232)
!1337 = !DILocation(line: 545, column: 11, scope: !1232)
!1338 = distinct !{!1338, !1235, !1339}
!1339 = !DILocation(line: 574, column: 11, scope: !1229)
!1340 = !DILocation(line: 575, column: 26, scope: !1209)
!1341 = !DILocation(line: 575, column: 17, scope: !1209)
!1342 = !DILocation(line: 575, column: 41, scope: !1209)
!1343 = !DILocation(line: 575, column: 11, scope: !1209)
!1344 = !DILocation(line: 577, column: 11, scope: !1209)
!1345 = !DILocation(line: 578, column: 11, scope: !1209)
!1346 = !DILocation(line: 579, column: 11, scope: !1209)
!1347 = !DILocation(line: 580, column: 11, scope: !1209)
!1348 = !DILocation(line: 581, column: 15, scope: !1349)
!1349 = distinct !DILexicalBlock(scope: !1209, file: !1, line: 581, column: 15)
!1350 = !DILocation(line: 581, column: 22, scope: !1349)
!1351 = !DILocation(line: 581, column: 33, scope: !1349)
!1352 = !DILocation(line: 581, column: 15, scope: !1209)
!1353 = !DILocation(line: 582, column: 13, scope: !1354)
!1354 = distinct !DILexicalBlock(scope: !1355, file: !1, line: 582, column: 13)
!1355 = distinct !DILexicalBlock(scope: !1349, file: !1, line: 582, column: 13)
!1356 = !DILocation(line: 582, column: 13, scope: !1355)
!1357 = !DILocation(line: 584, column: 12, scope: !1209)
!1358 = !DILocation(line: 585, column: 9, scope: !1209)
!1359 = !DILocation(line: 537, column: 50, scope: !1203)
!1360 = !DILocation(line: 537, column: 9, scope: !1203)
!1361 = distinct !{!1361, !1207, !1362}
!1362 = !DILocation(line: 585, column: 9, scope: !1200)
!1363 = !DILocation(line: 586, column: 42, scope: !1364)
!1364 = distinct !DILexicalBlock(scope: !1159, file: !1, line: 586, column: 13)
!1365 = !DILocation(line: 586, column: 56, scope: !1364)
!1366 = !DILocation(line: 586, column: 13, scope: !1364)
!1367 = !DILocation(line: 586, column: 67, scope: !1364)
!1368 = !DILocation(line: 586, column: 13, scope: !1159)
!1369 = !DILocation(line: 587, column: 17, scope: !1364)
!1370 = !DILocation(line: 587, column: 11, scope: !1364)
!1371 = !DILocation(line: 588, column: 13, scope: !1372)
!1372 = distinct !DILexicalBlock(scope: !1159, file: !1, line: 588, column: 13)
!1373 = !DILocation(line: 588, column: 21, scope: !1372)
!1374 = !DILocation(line: 588, column: 38, scope: !1372)
!1375 = !DILocation(line: 588, column: 13, scope: !1159)
!1376 = !DILocalVariable(name: "proceed", scope: !1377, file: !1, line: 591, type: !509)
!1377 = distinct !DILexicalBlock(scope: !1372, file: !1, line: 589, column: 11)
!1378 = !DILocation(line: 591, column: 15, scope: !1377)
!1379 = !DILocation(line: 596, column: 38, scope: !1377)
!1380 = !DILocation(line: 596, column: 70, scope: !1377)
!1381 = !DILocation(line: 597, column: 15, scope: !1377)
!1382 = !DILocation(line: 597, column: 22, scope: !1377)
!1383 = !DILocation(line: 596, column: 21, scope: !1377)
!1384 = !DILocation(line: 596, column: 20, scope: !1377)
!1385 = !DILocation(line: 598, column: 17, scope: !1386)
!1386 = distinct !DILexicalBlock(scope: !1377, file: !1, line: 598, column: 17)
!1387 = !DILocation(line: 598, column: 25, scope: !1386)
!1388 = !DILocation(line: 598, column: 17, scope: !1377)
!1389 = !DILocation(line: 599, column: 21, scope: !1386)
!1390 = !DILocation(line: 599, column: 15, scope: !1386)
!1391 = !DILocation(line: 600, column: 11, scope: !1377)
!1392 = !DILocation(line: 601, column: 7, scope: !1159)
!1393 = !DILocation(line: 503, column: 45, scope: !1153)
!1394 = !DILocation(line: 503, column: 7, scope: !1153)
!1395 = distinct !{!1395, !1157, !1396}
!1396 = !DILocation(line: 601, column: 7, scope: !1149)
!1397 = !DILocation(line: 602, column: 5, scope: !1150)
!1398 = !DILocation(line: 609, column: 13, scope: !1399)
!1399 = distinct !DILexicalBlock(scope: !1400, file: !1, line: 609, column: 7)
!1400 = distinct !DILexicalBlock(scope: !1145, file: !1, line: 604, column: 5)
!1401 = !DILocation(line: 609, column: 12, scope: !1399)
!1402 = !DILocation(line: 609, column: 17, scope: !1403)
!1403 = distinct !DILexicalBlock(scope: !1399, file: !1, line: 609, column: 7)
!1404 = !DILocation(line: 609, column: 31, scope: !1403)
!1405 = !DILocation(line: 609, column: 38, scope: !1403)
!1406 = !DILocation(line: 609, column: 19, scope: !1403)
!1407 = !DILocation(line: 609, column: 7, scope: !1399)
!1408 = !DILocalVariable(name: "image_view", scope: !1409, file: !1, line: 612, type: !861)
!1409 = distinct !DILexicalBlock(scope: !1403, file: !1, line: 610, column: 7)
!1410 = !DILocation(line: 612, column: 12, scope: !1409)
!1411 = !DILocalVariable(name: "next", scope: !1409, file: !1, line: 615, type: !813)
!1412 = !DILocation(line: 615, column: 12, scope: !1409)
!1413 = !DILocalVariable(name: "id", scope: !1409, file: !1, line: 618, type: !914)
!1414 = !DILocation(line: 618, column: 11, scope: !1409)
!1415 = !DILocation(line: 618, column: 16, scope: !1409)
!1416 = !DILocalVariable(name: "evaluate_indexes", scope: !1409, file: !1, line: 621, type: !918)
!1417 = !DILocation(line: 621, column: 21, scope: !1409)
!1418 = !DILocalVariable(name: "i", scope: !1409, file: !1, line: 624, type: !557)
!1419 = !DILocation(line: 624, column: 11, scope: !1409)
!1420 = !DILocalVariable(name: "x", scope: !1409, file: !1, line: 625, type: !557)
!1421 = !DILocation(line: 625, column: 11, scope: !1409)
!1422 = !DILocalVariable(name: "evaluate_pixel", scope: !1409, file: !1, line: 628, type: !715)
!1423 = !DILocation(line: 628, column: 12, scope: !1409)
!1424 = !DILocalVariable(name: "q", scope: !1409, file: !1, line: 631, type: !921)
!1425 = !DILocation(line: 631, column: 21, scope: !1409)
!1426 = !DILocation(line: 633, column: 13, scope: !1427)
!1427 = distinct !DILexicalBlock(scope: !1409, file: !1, line: 633, column: 13)
!1428 = !DILocation(line: 633, column: 20, scope: !1427)
!1429 = !DILocation(line: 633, column: 13, scope: !1409)
!1430 = !DILocation(line: 634, column: 11, scope: !1427)
!1431 = !DILocation(line: 635, column: 41, scope: !1409)
!1432 = !DILocation(line: 635, column: 57, scope: !1409)
!1433 = !DILocation(line: 636, column: 11, scope: !1409)
!1434 = !DILocation(line: 636, column: 18, scope: !1409)
!1435 = !DILocation(line: 636, column: 28, scope: !1409)
!1436 = !DILocation(line: 635, column: 11, scope: !1409)
!1437 = !DILocation(line: 635, column: 10, scope: !1409)
!1438 = !DILocation(line: 637, column: 13, scope: !1439)
!1439 = distinct !DILexicalBlock(scope: !1409, file: !1, line: 637, column: 13)
!1440 = !DILocation(line: 637, column: 15, scope: !1439)
!1441 = !DILocation(line: 637, column: 13, scope: !1409)
!1442 = !DILocation(line: 639, column: 19, scope: !1443)
!1443 = distinct !DILexicalBlock(scope: !1439, file: !1, line: 638, column: 11)
!1444 = !DILocation(line: 640, column: 13, scope: !1443)
!1445 = !DILocation(line: 642, column: 58, scope: !1409)
!1446 = !DILocation(line: 642, column: 26, scope: !1409)
!1447 = !DILocation(line: 642, column: 25, scope: !1409)
!1448 = !DILocation(line: 643, column: 24, scope: !1409)
!1449 = !DILocation(line: 643, column: 40, scope: !1409)
!1450 = !DILocation(line: 643, column: 23, scope: !1409)
!1451 = !DILocation(line: 644, column: 15, scope: !1452)
!1452 = distinct !DILexicalBlock(scope: !1409, file: !1, line: 644, column: 9)
!1453 = !DILocation(line: 644, column: 14, scope: !1452)
!1454 = !DILocation(line: 644, column: 19, scope: !1455)
!1455 = distinct !DILexicalBlock(scope: !1452, file: !1, line: 644, column: 9)
!1456 = !DILocation(line: 644, column: 33, scope: !1455)
!1457 = !DILocation(line: 644, column: 40, scope: !1455)
!1458 = !DILocation(line: 644, column: 21, scope: !1455)
!1459 = !DILocation(line: 644, column: 9, scope: !1452)
!1460 = !DILocation(line: 645, column: 11, scope: !1455)
!1461 = !DILocation(line: 645, column: 26, scope: !1455)
!1462 = !DILocation(line: 645, column: 29, scope: !1455)
!1463 = !DILocation(line: 644, column: 50, scope: !1455)
!1464 = !DILocation(line: 644, column: 9, scope: !1455)
!1465 = distinct !{!1465, !1459, !1466}
!1466 = !DILocation(line: 645, column: 29, scope: !1452)
!1467 = !DILocation(line: 646, column: 14, scope: !1409)
!1468 = !DILocation(line: 646, column: 13, scope: !1409)
!1469 = !DILocation(line: 647, column: 15, scope: !1470)
!1470 = distinct !DILexicalBlock(scope: !1409, file: !1, line: 647, column: 9)
!1471 = !DILocation(line: 647, column: 14, scope: !1470)
!1472 = !DILocation(line: 647, column: 19, scope: !1473)
!1473 = distinct !DILexicalBlock(scope: !1470, file: !1, line: 647, column: 9)
!1474 = !DILocation(line: 647, column: 33, scope: !1473)
!1475 = !DILocation(line: 647, column: 21, scope: !1473)
!1476 = !DILocation(line: 647, column: 9, scope: !1470)
!1477 = !DILocalVariable(name: "indexes", scope: !1478, file: !1, line: 650, type: !735)
!1478 = distinct !DILexicalBlock(scope: !1473, file: !1, line: 648, column: 9)
!1479 = !DILocation(line: 650, column: 14, scope: !1478)
!1480 = !DILocalVariable(name: "p", scope: !1478, file: !1, line: 653, type: !731)
!1481 = !DILocation(line: 653, column: 14, scope: !1478)
!1482 = !DILocation(line: 655, column: 46, scope: !1478)
!1483 = !DILocation(line: 655, column: 51, scope: !1478)
!1484 = !DILocation(line: 655, column: 22, scope: !1478)
!1485 = !DILocation(line: 655, column: 21, scope: !1478)
!1486 = !DILocation(line: 656, column: 39, scope: !1478)
!1487 = !DILocation(line: 656, column: 52, scope: !1478)
!1488 = !DILocation(line: 656, column: 54, scope: !1478)
!1489 = !DILocation(line: 656, column: 60, scope: !1478)
!1490 = !DILocation(line: 656, column: 70, scope: !1478)
!1491 = !DILocation(line: 656, column: 13, scope: !1478)
!1492 = !DILocation(line: 656, column: 12, scope: !1478)
!1493 = !DILocation(line: 657, column: 15, scope: !1494)
!1494 = distinct !DILexicalBlock(scope: !1478, file: !1, line: 657, column: 15)
!1495 = !DILocation(line: 657, column: 17, scope: !1494)
!1496 = !DILocation(line: 657, column: 15, scope: !1478)
!1497 = !DILocation(line: 659, column: 43, scope: !1498)
!1498 = distinct !DILexicalBlock(scope: !1494, file: !1, line: 658, column: 13)
!1499 = !DILocation(line: 659, column: 26, scope: !1498)
!1500 = !DILocation(line: 659, column: 25, scope: !1498)
!1501 = !DILocation(line: 660, column: 15, scope: !1498)
!1502 = !DILocation(line: 662, column: 49, scope: !1478)
!1503 = !DILocation(line: 662, column: 19, scope: !1478)
!1504 = !DILocation(line: 662, column: 18, scope: !1478)
!1505 = !DILocation(line: 663, column: 17, scope: !1506)
!1506 = distinct !DILexicalBlock(scope: !1478, file: !1, line: 663, column: 11)
!1507 = !DILocation(line: 663, column: 16, scope: !1506)
!1508 = !DILocation(line: 663, column: 21, scope: !1509)
!1509 = distinct !DILexicalBlock(scope: !1506, file: !1, line: 663, column: 11)
!1510 = !DILocation(line: 663, column: 35, scope: !1509)
!1511 = !DILocation(line: 663, column: 41, scope: !1509)
!1512 = !DILocation(line: 663, column: 23, scope: !1509)
!1513 = !DILocation(line: 663, column: 11, scope: !1506)
!1514 = !DILocation(line: 665, column: 57, scope: !1515)
!1515 = distinct !DILexicalBlock(scope: !1509, file: !1, line: 664, column: 11)
!1516 = !DILocation(line: 665, column: 69, scope: !1515)
!1517 = !DILocation(line: 666, column: 15, scope: !1515)
!1518 = !DILocation(line: 666, column: 30, scope: !1515)
!1519 = !DILocation(line: 666, column: 32, scope: !1515)
!1520 = !DILocation(line: 666, column: 61, scope: !1515)
!1521 = !DILocation(line: 667, column: 15, scope: !1515)
!1522 = !DILocation(line: 667, column: 30, scope: !1515)
!1523 = !DILocation(line: 667, column: 33, scope: !1515)
!1524 = !DILocation(line: 665, column: 35, scope: !1515)
!1525 = !DILocation(line: 665, column: 13, scope: !1515)
!1526 = !DILocation(line: 665, column: 28, scope: !1515)
!1527 = !DILocation(line: 665, column: 31, scope: !1515)
!1528 = !DILocation(line: 665, column: 34, scope: !1515)
!1529 = !DILocation(line: 668, column: 59, scope: !1515)
!1530 = !DILocation(line: 668, column: 71, scope: !1515)
!1531 = !DILocation(line: 669, column: 15, scope: !1515)
!1532 = !DILocation(line: 669, column: 32, scope: !1515)
!1533 = !DILocation(line: 669, column: 34, scope: !1515)
!1534 = !DILocation(line: 669, column: 63, scope: !1515)
!1535 = !DILocation(line: 670, column: 15, scope: !1515)
!1536 = !DILocation(line: 670, column: 30, scope: !1515)
!1537 = !DILocation(line: 670, column: 33, scope: !1515)
!1538 = !DILocation(line: 668, column: 37, scope: !1515)
!1539 = !DILocation(line: 668, column: 13, scope: !1515)
!1540 = !DILocation(line: 668, column: 28, scope: !1515)
!1541 = !DILocation(line: 668, column: 31, scope: !1515)
!1542 = !DILocation(line: 668, column: 36, scope: !1515)
!1543 = !DILocation(line: 671, column: 58, scope: !1515)
!1544 = !DILocation(line: 671, column: 70, scope: !1515)
!1545 = !DILocation(line: 672, column: 15, scope: !1515)
!1546 = !DILocation(line: 672, column: 31, scope: !1515)
!1547 = !DILocation(line: 672, column: 33, scope: !1515)
!1548 = !DILocation(line: 672, column: 62, scope: !1515)
!1549 = !DILocation(line: 673, column: 15, scope: !1515)
!1550 = !DILocation(line: 673, column: 30, scope: !1515)
!1551 = !DILocation(line: 673, column: 33, scope: !1515)
!1552 = !DILocation(line: 671, column: 36, scope: !1515)
!1553 = !DILocation(line: 671, column: 13, scope: !1515)
!1554 = !DILocation(line: 671, column: 28, scope: !1515)
!1555 = !DILocation(line: 671, column: 31, scope: !1515)
!1556 = !DILocation(line: 671, column: 35, scope: !1515)
!1557 = !DILocation(line: 674, column: 61, scope: !1515)
!1558 = !DILocation(line: 674, column: 73, scope: !1515)
!1559 = !DILocation(line: 675, column: 15, scope: !1515)
!1560 = !DILocation(line: 675, column: 32, scope: !1515)
!1561 = !DILocation(line: 675, column: 34, scope: !1515)
!1562 = !DILocation(line: 675, column: 63, scope: !1515)
!1563 = !DILocation(line: 676, column: 15, scope: !1515)
!1564 = !DILocation(line: 676, column: 30, scope: !1515)
!1565 = !DILocation(line: 676, column: 33, scope: !1515)
!1566 = !DILocation(line: 674, column: 39, scope: !1515)
!1567 = !DILocation(line: 674, column: 13, scope: !1515)
!1568 = !DILocation(line: 674, column: 28, scope: !1515)
!1569 = !DILocation(line: 674, column: 31, scope: !1515)
!1570 = !DILocation(line: 674, column: 38, scope: !1515)
!1571 = !DILocation(line: 677, column: 17, scope: !1572)
!1572 = distinct !DILexicalBlock(scope: !1515, file: !1, line: 677, column: 17)
!1573 = !DILocation(line: 677, column: 24, scope: !1572)
!1574 = !DILocation(line: 677, column: 35, scope: !1572)
!1575 = !DILocation(line: 677, column: 17, scope: !1515)
!1576 = !DILocation(line: 678, column: 61, scope: !1572)
!1577 = !DILocation(line: 678, column: 73, scope: !1572)
!1578 = !DILocation(line: 679, column: 17, scope: !1572)
!1579 = !DILocation(line: 679, column: 42, scope: !1572)
!1580 = !DILocation(line: 679, column: 44, scope: !1572)
!1581 = !DILocation(line: 679, column: 73, scope: !1572)
!1582 = !DILocation(line: 680, column: 17, scope: !1572)
!1583 = !DILocation(line: 680, column: 32, scope: !1572)
!1584 = !DILocation(line: 680, column: 35, scope: !1572)
!1585 = !DILocation(line: 678, column: 39, scope: !1572)
!1586 = !DILocation(line: 678, column: 15, scope: !1572)
!1587 = !DILocation(line: 678, column: 30, scope: !1572)
!1588 = !DILocation(line: 678, column: 33, scope: !1572)
!1589 = !DILocation(line: 678, column: 38, scope: !1572)
!1590 = !DILocation(line: 681, column: 14, scope: !1515)
!1591 = !DILocation(line: 682, column: 11, scope: !1515)
!1592 = !DILocation(line: 663, column: 51, scope: !1509)
!1593 = !DILocation(line: 663, column: 11, scope: !1509)
!1594 = distinct !{!1594, !1513, !1595}
!1595 = !DILocation(line: 682, column: 11, scope: !1506)
!1596 = !DILocation(line: 683, column: 39, scope: !1478)
!1597 = !DILocation(line: 683, column: 22, scope: !1478)
!1598 = !DILocation(line: 683, column: 21, scope: !1478)
!1599 = !DILocation(line: 684, column: 35, scope: !1478)
!1600 = !DILocation(line: 684, column: 16, scope: !1478)
!1601 = !DILocation(line: 684, column: 15, scope: !1478)
!1602 = !DILocation(line: 685, column: 9, scope: !1478)
!1603 = !DILocation(line: 647, column: 49, scope: !1473)
!1604 = !DILocation(line: 647, column: 9, scope: !1473)
!1605 = distinct !{!1605, !1476, !1606}
!1606 = !DILocation(line: 685, column: 9, scope: !1470)
!1607 = !DILocation(line: 686, column: 13, scope: !1608)
!1608 = distinct !DILexicalBlock(scope: !1409, file: !1, line: 686, column: 13)
!1609 = !DILocation(line: 686, column: 16, scope: !1608)
!1610 = !DILocation(line: 686, column: 13, scope: !1409)
!1611 = !DILocation(line: 687, column: 17, scope: !1612)
!1612 = distinct !DILexicalBlock(scope: !1608, file: !1, line: 687, column: 11)
!1613 = !DILocation(line: 687, column: 16, scope: !1612)
!1614 = !DILocation(line: 687, column: 21, scope: !1615)
!1615 = distinct !DILexicalBlock(scope: !1612, file: !1, line: 687, column: 11)
!1616 = !DILocation(line: 687, column: 35, scope: !1615)
!1617 = !DILocation(line: 687, column: 42, scope: !1615)
!1618 = !DILocation(line: 687, column: 23, scope: !1615)
!1619 = !DILocation(line: 687, column: 11, scope: !1612)
!1620 = !DILocation(line: 689, column: 36, scope: !1621)
!1621 = distinct !DILexicalBlock(scope: !1615, file: !1, line: 688, column: 11)
!1622 = !DILocation(line: 689, column: 13, scope: !1621)
!1623 = !DILocation(line: 689, column: 28, scope: !1621)
!1624 = !DILocation(line: 689, column: 31, scope: !1621)
!1625 = !DILocation(line: 689, column: 34, scope: !1621)
!1626 = !DILocation(line: 690, column: 38, scope: !1621)
!1627 = !DILocation(line: 690, column: 13, scope: !1621)
!1628 = !DILocation(line: 690, column: 28, scope: !1621)
!1629 = !DILocation(line: 690, column: 31, scope: !1621)
!1630 = !DILocation(line: 690, column: 36, scope: !1621)
!1631 = !DILocation(line: 691, column: 37, scope: !1621)
!1632 = !DILocation(line: 691, column: 13, scope: !1621)
!1633 = !DILocation(line: 691, column: 28, scope: !1621)
!1634 = !DILocation(line: 691, column: 31, scope: !1621)
!1635 = !DILocation(line: 691, column: 35, scope: !1621)
!1636 = !DILocation(line: 692, column: 40, scope: !1621)
!1637 = !DILocation(line: 692, column: 13, scope: !1621)
!1638 = !DILocation(line: 692, column: 28, scope: !1621)
!1639 = !DILocation(line: 692, column: 31, scope: !1621)
!1640 = !DILocation(line: 692, column: 38, scope: !1621)
!1641 = !DILocation(line: 693, column: 38, scope: !1621)
!1642 = !DILocation(line: 693, column: 13, scope: !1621)
!1643 = !DILocation(line: 693, column: 28, scope: !1621)
!1644 = !DILocation(line: 693, column: 31, scope: !1621)
!1645 = !DILocation(line: 693, column: 36, scope: !1621)
!1646 = !DILocation(line: 694, column: 11, scope: !1621)
!1647 = !DILocation(line: 687, column: 52, scope: !1615)
!1648 = !DILocation(line: 687, column: 11, scope: !1615)
!1649 = distinct !{!1649, !1619, !1650}
!1650 = !DILocation(line: 694, column: 11, scope: !1612)
!1651 = !DILocation(line: 695, column: 13, scope: !1652)
!1652 = distinct !DILexicalBlock(scope: !1409, file: !1, line: 695, column: 13)
!1653 = !DILocation(line: 695, column: 16, scope: !1652)
!1654 = !DILocation(line: 695, column: 13, scope: !1409)
!1655 = !DILocation(line: 696, column: 17, scope: !1656)
!1656 = distinct !DILexicalBlock(scope: !1652, file: !1, line: 696, column: 11)
!1657 = !DILocation(line: 696, column: 16, scope: !1656)
!1658 = !DILocation(line: 696, column: 21, scope: !1659)
!1659 = distinct !DILexicalBlock(scope: !1656, file: !1, line: 696, column: 11)
!1660 = !DILocation(line: 696, column: 35, scope: !1659)
!1661 = !DILocation(line: 696, column: 42, scope: !1659)
!1662 = !DILocation(line: 696, column: 23, scope: !1659)
!1663 = !DILocation(line: 696, column: 11, scope: !1656)
!1664 = !DILocalVariable(name: "j", scope: !1665, file: !1, line: 699, type: !557)
!1665 = distinct !DILexicalBlock(scope: !1659, file: !1, line: 697, column: 11)
!1666 = !DILocation(line: 699, column: 15, scope: !1665)
!1667 = !DILocation(line: 701, column: 19, scope: !1668)
!1668 = distinct !DILexicalBlock(scope: !1665, file: !1, line: 701, column: 13)
!1669 = !DILocation(line: 701, column: 18, scope: !1668)
!1670 = !DILocation(line: 701, column: 23, scope: !1671)
!1671 = distinct !DILexicalBlock(scope: !1668, file: !1, line: 701, column: 13)
!1672 = !DILocation(line: 701, column: 38, scope: !1671)
!1673 = !DILocation(line: 701, column: 51, scope: !1671)
!1674 = !DILocation(line: 701, column: 25, scope: !1671)
!1675 = !DILocation(line: 701, column: 13, scope: !1668)
!1676 = !DILocation(line: 703, column: 15, scope: !1677)
!1677 = distinct !DILexicalBlock(scope: !1671, file: !1, line: 702, column: 13)
!1678 = !DILocation(line: 703, column: 30, scope: !1677)
!1679 = !DILocation(line: 703, column: 33, scope: !1677)
!1680 = !DILocation(line: 703, column: 36, scope: !1677)
!1681 = !DILocation(line: 704, column: 15, scope: !1677)
!1682 = !DILocation(line: 704, column: 30, scope: !1677)
!1683 = !DILocation(line: 704, column: 33, scope: !1677)
!1684 = !DILocation(line: 704, column: 38, scope: !1677)
!1685 = !DILocation(line: 705, column: 15, scope: !1677)
!1686 = !DILocation(line: 705, column: 30, scope: !1677)
!1687 = !DILocation(line: 705, column: 33, scope: !1677)
!1688 = !DILocation(line: 705, column: 37, scope: !1677)
!1689 = !DILocation(line: 706, column: 15, scope: !1677)
!1690 = !DILocation(line: 706, column: 30, scope: !1677)
!1691 = !DILocation(line: 706, column: 33, scope: !1677)
!1692 = !DILocation(line: 706, column: 40, scope: !1677)
!1693 = !DILocation(line: 707, column: 15, scope: !1677)
!1694 = !DILocation(line: 707, column: 30, scope: !1677)
!1695 = !DILocation(line: 707, column: 33, scope: !1677)
!1696 = !DILocation(line: 707, column: 38, scope: !1677)
!1697 = !DILocation(line: 708, column: 13, scope: !1677)
!1698 = !DILocation(line: 701, column: 57, scope: !1671)
!1699 = !DILocation(line: 701, column: 13, scope: !1671)
!1700 = distinct !{!1700, !1675, !1701}
!1701 = !DILocation(line: 708, column: 13, scope: !1668)
!1702 = !DILocation(line: 709, column: 11, scope: !1665)
!1703 = !DILocation(line: 696, column: 52, scope: !1659)
!1704 = !DILocation(line: 696, column: 11, scope: !1659)
!1705 = distinct !{!1705, !1663, !1706}
!1706 = !DILocation(line: 709, column: 11, scope: !1656)
!1707 = !DILocation(line: 710, column: 15, scope: !1708)
!1708 = distinct !DILexicalBlock(scope: !1409, file: !1, line: 710, column: 9)
!1709 = !DILocation(line: 710, column: 14, scope: !1708)
!1710 = !DILocation(line: 710, column: 19, scope: !1711)
!1711 = distinct !DILexicalBlock(scope: !1708, file: !1, line: 710, column: 9)
!1712 = !DILocation(line: 710, column: 33, scope: !1711)
!1713 = !DILocation(line: 710, column: 40, scope: !1711)
!1714 = !DILocation(line: 710, column: 21, scope: !1711)
!1715 = !DILocation(line: 710, column: 9, scope: !1708)
!1716 = !DILocation(line: 712, column: 11, scope: !1717)
!1717 = distinct !DILexicalBlock(scope: !1711, file: !1, line: 711, column: 9)
!1718 = !DILocation(line: 713, column: 11, scope: !1717)
!1719 = !DILocation(line: 714, column: 11, scope: !1717)
!1720 = !DILocation(line: 715, column: 11, scope: !1717)
!1721 = !DILocation(line: 716, column: 15, scope: !1722)
!1722 = distinct !DILexicalBlock(scope: !1717, file: !1, line: 716, column: 15)
!1723 = !DILocation(line: 716, column: 22, scope: !1722)
!1724 = !DILocation(line: 716, column: 33, scope: !1722)
!1725 = !DILocation(line: 716, column: 15, scope: !1717)
!1726 = !DILocation(line: 717, column: 13, scope: !1727)
!1727 = distinct !DILexicalBlock(scope: !1728, file: !1, line: 717, column: 13)
!1728 = distinct !DILexicalBlock(scope: !1722, file: !1, line: 717, column: 13)
!1729 = !DILocation(line: 717, column: 13, scope: !1728)
!1730 = !DILocation(line: 719, column: 12, scope: !1717)
!1731 = !DILocation(line: 720, column: 9, scope: !1717)
!1732 = !DILocation(line: 710, column: 50, scope: !1711)
!1733 = !DILocation(line: 710, column: 9, scope: !1711)
!1734 = distinct !{!1734, !1715, !1735}
!1735 = !DILocation(line: 720, column: 9, scope: !1708)
!1736 = !DILocation(line: 721, column: 42, scope: !1737)
!1737 = distinct !DILexicalBlock(scope: !1409, file: !1, line: 721, column: 13)
!1738 = !DILocation(line: 721, column: 56, scope: !1737)
!1739 = !DILocation(line: 721, column: 13, scope: !1737)
!1740 = !DILocation(line: 721, column: 67, scope: !1737)
!1741 = !DILocation(line: 721, column: 13, scope: !1409)
!1742 = !DILocation(line: 722, column: 17, scope: !1737)
!1743 = !DILocation(line: 722, column: 11, scope: !1737)
!1744 = !DILocation(line: 723, column: 13, scope: !1745)
!1745 = distinct !DILexicalBlock(scope: !1409, file: !1, line: 723, column: 13)
!1746 = !DILocation(line: 723, column: 21, scope: !1745)
!1747 = !DILocation(line: 723, column: 38, scope: !1745)
!1748 = !DILocation(line: 723, column: 13, scope: !1409)
!1749 = !DILocalVariable(name: "proceed", scope: !1750, file: !1, line: 726, type: !509)
!1750 = distinct !DILexicalBlock(scope: !1745, file: !1, line: 724, column: 11)
!1751 = !DILocation(line: 726, column: 15, scope: !1750)
!1752 = !DILocation(line: 731, column: 38, scope: !1750)
!1753 = !DILocation(line: 731, column: 70, scope: !1750)
!1754 = !DILocation(line: 732, column: 15, scope: !1750)
!1755 = !DILocation(line: 732, column: 22, scope: !1750)
!1756 = !DILocation(line: 731, column: 21, scope: !1750)
!1757 = !DILocation(line: 731, column: 20, scope: !1750)
!1758 = !DILocation(line: 733, column: 17, scope: !1759)
!1759 = distinct !DILexicalBlock(scope: !1750, file: !1, line: 733, column: 17)
!1760 = !DILocation(line: 733, column: 25, scope: !1759)
!1761 = !DILocation(line: 733, column: 17, scope: !1750)
!1762 = !DILocation(line: 734, column: 21, scope: !1759)
!1763 = !DILocation(line: 734, column: 15, scope: !1759)
!1764 = !DILocation(line: 735, column: 11, scope: !1750)
!1765 = !DILocation(line: 736, column: 7, scope: !1409)
!1766 = !DILocation(line: 609, column: 45, scope: !1403)
!1767 = !DILocation(line: 609, column: 7, scope: !1403)
!1768 = distinct !{!1768, !1407, !1769}
!1769 = !DILocation(line: 736, column: 7, scope: !1399)
!1770 = !DILocation(line: 738, column: 34, scope: !1050)
!1771 = !DILocation(line: 738, column: 17, scope: !1050)
!1772 = !DILocation(line: 738, column: 16, scope: !1050)
!1773 = !DILocation(line: 739, column: 41, scope: !1050)
!1774 = !DILocation(line: 739, column: 19, scope: !1050)
!1775 = !DILocation(line: 739, column: 18, scope: !1050)
!1776 = !DILocation(line: 740, column: 42, scope: !1050)
!1777 = !DILocation(line: 740, column: 15, scope: !1050)
!1778 = !DILocation(line: 740, column: 14, scope: !1050)
!1779 = !DILocation(line: 741, column: 7, scope: !1780)
!1780 = distinct !DILexicalBlock(scope: !1050, file: !1, line: 741, column: 7)
!1781 = !DILocation(line: 741, column: 14, scope: !1780)
!1782 = !DILocation(line: 741, column: 7, scope: !1050)
!1783 = !DILocation(line: 742, column: 24, scope: !1780)
!1784 = !DILocation(line: 742, column: 11, scope: !1780)
!1785 = !DILocation(line: 742, column: 10, scope: !1780)
!1786 = !DILocation(line: 742, column: 5, scope: !1780)
!1787 = !DILocation(line: 743, column: 10, scope: !1050)
!1788 = !DILocation(line: 743, column: 3, scope: !1050)
!1789 = !DILocation(line: 744, column: 1, scope: !1050)
!1790 = distinct !DISubprogram(name: "AcquirePixelThreadSet", scope: !1, file: !1, line: 152, type: !1791, scopeLine: 154, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !826)
!1791 = !DISubroutineType(types: !1792)
!1792 = !{!714, !813, !1793}
!1793 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !504)
!1794 = !DILocalVariable(name: "image", arg: 1, scope: !1790, file: !1, line: 152, type: !813)
!1795 = !DILocation(line: 152, column: 63, scope: !1790)
!1796 = !DILocalVariable(name: "number_images", arg: 2, scope: !1790, file: !1, line: 153, type: !1793)
!1797 = !DILocation(line: 153, column: 16, scope: !1790)
!1798 = !DILocalVariable(name: "i", scope: !1790, file: !1, line: 156, type: !557)
!1799 = !DILocation(line: 156, column: 5, scope: !1790)
!1800 = !DILocalVariable(name: "j", scope: !1790, file: !1, line: 157, type: !557)
!1801 = !DILocation(line: 157, column: 5, scope: !1790)
!1802 = !DILocalVariable(name: "pixels", scope: !1790, file: !1, line: 160, type: !714)
!1803 = !DILocation(line: 160, column: 7, scope: !1790)
!1804 = !DILocalVariable(name: "length", scope: !1790, file: !1, line: 163, type: !504)
!1805 = !DILocation(line: 163, column: 5, scope: !1790)
!1806 = !DILocalVariable(name: "number_threads", scope: !1790, file: !1, line: 164, type: !504)
!1807 = !DILocation(line: 164, column: 5, scope: !1790)
!1808 = !DILocation(line: 166, column: 27, scope: !1790)
!1809 = !DILocation(line: 166, column: 17, scope: !1790)
!1810 = !DILocation(line: 167, column: 54, scope: !1790)
!1811 = !DILocation(line: 167, column: 33, scope: !1790)
!1812 = !DILocation(line: 167, column: 10, scope: !1790)
!1813 = !DILocation(line: 167, column: 9, scope: !1790)
!1814 = !DILocation(line: 169, column: 7, scope: !1815)
!1815 = distinct !DILexicalBlock(scope: !1790, file: !1, line: 169, column: 7)
!1816 = !DILocation(line: 169, column: 14, scope: !1815)
!1817 = !DILocation(line: 169, column: 7, scope: !1790)
!1818 = !DILocation(line: 170, column: 5, scope: !1815)
!1819 = !DILocation(line: 171, column: 28, scope: !1790)
!1820 = !DILocation(line: 171, column: 37, scope: !1790)
!1821 = !DILocation(line: 171, column: 51, scope: !1790)
!1822 = !DILocation(line: 171, column: 10, scope: !1790)
!1823 = !DILocation(line: 172, column: 9, scope: !1824)
!1824 = distinct !DILexicalBlock(scope: !1790, file: !1, line: 172, column: 3)
!1825 = !DILocation(line: 172, column: 8, scope: !1824)
!1826 = !DILocation(line: 172, column: 13, scope: !1827)
!1827 = distinct !DILexicalBlock(scope: !1824, file: !1, line: 172, column: 3)
!1828 = !DILocation(line: 172, column: 27, scope: !1827)
!1829 = !DILocation(line: 172, column: 15, scope: !1827)
!1830 = !DILocation(line: 172, column: 3, scope: !1824)
!1831 = !DILocation(line: 174, column: 12, scope: !1832)
!1832 = distinct !DILexicalBlock(scope: !1827, file: !1, line: 173, column: 3)
!1833 = !DILocation(line: 174, column: 19, scope: !1832)
!1834 = !DILocation(line: 174, column: 11, scope: !1832)
!1835 = !DILocation(line: 175, column: 9, scope: !1836)
!1836 = distinct !DILexicalBlock(scope: !1832, file: !1, line: 175, column: 9)
!1837 = !DILocation(line: 175, column: 18, scope: !1836)
!1838 = !DILocation(line: 175, column: 16, scope: !1836)
!1839 = !DILocation(line: 175, column: 9, scope: !1832)
!1840 = !DILocation(line: 176, column: 14, scope: !1836)
!1841 = !DILocation(line: 176, column: 13, scope: !1836)
!1842 = !DILocation(line: 176, column: 7, scope: !1836)
!1843 = !DILocation(line: 177, column: 58, scope: !1832)
!1844 = !DILocation(line: 177, column: 37, scope: !1832)
!1845 = !DILocation(line: 177, column: 15, scope: !1832)
!1846 = !DILocation(line: 177, column: 5, scope: !1832)
!1847 = !DILocation(line: 177, column: 12, scope: !1832)
!1848 = !DILocation(line: 177, column: 14, scope: !1832)
!1849 = !DILocation(line: 179, column: 9, scope: !1850)
!1850 = distinct !DILexicalBlock(scope: !1832, file: !1, line: 179, column: 9)
!1851 = !DILocation(line: 179, column: 16, scope: !1850)
!1852 = !DILocation(line: 179, column: 19, scope: !1850)
!1853 = !DILocation(line: 179, column: 9, scope: !1832)
!1854 = !DILocation(line: 180, column: 36, scope: !1850)
!1855 = !DILocation(line: 180, column: 14, scope: !1850)
!1856 = !DILocation(line: 180, column: 7, scope: !1850)
!1857 = !DILocation(line: 181, column: 11, scope: !1858)
!1858 = distinct !DILexicalBlock(scope: !1832, file: !1, line: 181, column: 5)
!1859 = !DILocation(line: 181, column: 10, scope: !1858)
!1860 = !DILocation(line: 181, column: 15, scope: !1861)
!1861 = distinct !DILexicalBlock(scope: !1858, file: !1, line: 181, column: 5)
!1862 = !DILocation(line: 181, column: 29, scope: !1861)
!1863 = !DILocation(line: 181, column: 17, scope: !1861)
!1864 = !DILocation(line: 181, column: 5, scope: !1858)
!1865 = !DILocation(line: 182, column: 28, scope: !1861)
!1866 = !DILocation(line: 182, column: 35, scope: !1861)
!1867 = !DILocation(line: 182, column: 42, scope: !1861)
!1868 = !DILocation(line: 182, column: 45, scope: !1861)
!1869 = !DILocation(line: 182, column: 7, scope: !1861)
!1870 = !DILocation(line: 181, column: 38, scope: !1861)
!1871 = !DILocation(line: 181, column: 5, scope: !1861)
!1872 = distinct !{!1872, !1864, !1873}
!1873 = !DILocation(line: 182, column: 47, scope: !1858)
!1874 = !DILocation(line: 183, column: 3, scope: !1832)
!1875 = !DILocation(line: 172, column: 44, scope: !1827)
!1876 = !DILocation(line: 172, column: 3, scope: !1827)
!1877 = distinct !{!1877, !1830, !1878}
!1878 = !DILocation(line: 183, column: 3, scope: !1824)
!1879 = !DILocation(line: 184, column: 10, scope: !1790)
!1880 = !DILocation(line: 184, column: 3, scope: !1790)
!1881 = !DILocation(line: 185, column: 1, scope: !1790)
!1882 = distinct !DISubprogram(name: "AcquireRandomInfoThreadSet", scope: !1883, file: !1883, line: 40, type: !1884, scopeLine: 41, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !826)
!1883 = !DIFile(filename: "./magick/random-private.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!1884 = !DISubroutineType(types: !1885)
!1885 = !{!805}
!1886 = !DILocalVariable(name: "i", scope: !1882, file: !1883, line: 43, type: !557)
!1887 = !DILocation(line: 43, column: 5, scope: !1882)
!1888 = !DILocalVariable(name: "random_info", scope: !1882, file: !1883, line: 46, type: !805)
!1889 = !DILocation(line: 46, column: 7, scope: !1882)
!1890 = !DILocalVariable(name: "number_threads", scope: !1882, file: !1883, line: 49, type: !504)
!1891 = !DILocation(line: 49, column: 5, scope: !1882)
!1892 = !DILocation(line: 51, column: 27, scope: !1882)
!1893 = !DILocation(line: 51, column: 17, scope: !1882)
!1894 = !DILocation(line: 52, column: 52, scope: !1882)
!1895 = !DILocation(line: 52, column: 31, scope: !1882)
!1896 = !DILocation(line: 52, column: 15, scope: !1882)
!1897 = !DILocation(line: 52, column: 14, scope: !1882)
!1898 = !DILocation(line: 54, column: 7, scope: !1899)
!1899 = distinct !DILexicalBlock(scope: !1882, file: !1883, line: 54, column: 7)
!1900 = !DILocation(line: 54, column: 19, scope: !1899)
!1901 = !DILocation(line: 54, column: 7, scope: !1882)
!1902 = !DILocation(line: 55, column: 5, scope: !1899)
!1903 = !DILocation(line: 56, column: 28, scope: !1882)
!1904 = !DILocation(line: 56, column: 42, scope: !1882)
!1905 = !DILocation(line: 56, column: 56, scope: !1882)
!1906 = !DILocation(line: 56, column: 10, scope: !1882)
!1907 = !DILocation(line: 57, column: 9, scope: !1908)
!1908 = distinct !DILexicalBlock(scope: !1882, file: !1883, line: 57, column: 3)
!1909 = !DILocation(line: 57, column: 8, scope: !1908)
!1910 = !DILocation(line: 57, column: 13, scope: !1911)
!1911 = distinct !DILexicalBlock(scope: !1908, file: !1883, line: 57, column: 3)
!1912 = !DILocation(line: 57, column: 27, scope: !1911)
!1913 = !DILocation(line: 57, column: 15, scope: !1911)
!1914 = !DILocation(line: 57, column: 3, scope: !1908)
!1915 = !DILocation(line: 59, column: 20, scope: !1916)
!1916 = distinct !DILexicalBlock(scope: !1911, file: !1883, line: 58, column: 3)
!1917 = !DILocation(line: 59, column: 5, scope: !1916)
!1918 = !DILocation(line: 59, column: 17, scope: !1916)
!1919 = !DILocation(line: 59, column: 19, scope: !1916)
!1920 = !DILocation(line: 60, column: 9, scope: !1921)
!1921 = distinct !DILexicalBlock(scope: !1916, file: !1883, line: 60, column: 9)
!1922 = !DILocation(line: 60, column: 21, scope: !1921)
!1923 = !DILocation(line: 60, column: 24, scope: !1921)
!1924 = !DILocation(line: 60, column: 9, scope: !1916)
!1925 = !DILocation(line: 61, column: 41, scope: !1921)
!1926 = !DILocation(line: 61, column: 14, scope: !1921)
!1927 = !DILocation(line: 61, column: 7, scope: !1921)
!1928 = !DILocation(line: 62, column: 3, scope: !1916)
!1929 = !DILocation(line: 57, column: 44, scope: !1911)
!1930 = !DILocation(line: 57, column: 3, scope: !1911)
!1931 = distinct !{!1931, !1914, !1932}
!1932 = !DILocation(line: 62, column: 3, scope: !1908)
!1933 = !DILocation(line: 63, column: 10, scope: !1882)
!1934 = !DILocation(line: 63, column: 3, scope: !1882)
!1935 = !DILocation(line: 64, column: 1, scope: !1882)
!1936 = distinct !DISubprogram(name: "GetOpenMPThreadId", scope: !1937, file: !1937, line: 117, type: !1938, scopeLine: 118, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !826)
!1937 = !DIFile(filename: "./magick/thread-private.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!1938 = !DISubroutineType(types: !1939)
!1939 = !{!660}
!1940 = !DILocation(line: 122, column: 3, scope: !1936)
!1941 = distinct !DISubprogram(name: "ApplyEvaluateOperator", scope: !1, file: !1, line: 225, type: !1942, scopeLine: 228, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !826)
!1942 = !DISubroutineType(types: !1943)
!1943 = !{!725, !806, !1944, !822, !1945}
!1944 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !521)
!1945 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !725)
!1946 = !DILocalVariable(name: "random_info", arg: 1, scope: !1941, file: !1, line: 225, type: !806)
!1947 = !DILocation(line: 225, column: 57, scope: !1941)
!1948 = !DILocalVariable(name: "pixel", arg: 2, scope: !1941, file: !1, line: 226, type: !1944)
!1949 = !DILocation(line: 226, column: 17, scope: !1941)
!1950 = !DILocalVariable(name: "op", arg: 3, scope: !1941, file: !1, line: 226, type: !822)
!1951 = !DILocation(line: 226, column: 52, scope: !1941)
!1952 = !DILocalVariable(name: "value", arg: 4, scope: !1941, file: !1, line: 227, type: !1945)
!1953 = !DILocation(line: 227, column: 24, scope: !1941)
!1954 = !DILocalVariable(name: "result", scope: !1941, file: !1, line: 230, type: !725)
!1955 = !DILocation(line: 230, column: 5, scope: !1941)
!1956 = !DILocation(line: 232, column: 9, scope: !1941)
!1957 = !DILocation(line: 233, column: 11, scope: !1941)
!1958 = !DILocation(line: 233, column: 3, scope: !1941)
!1959 = !DILocation(line: 236, column: 7, scope: !1960)
!1960 = distinct !DILexicalBlock(scope: !1941, file: !1, line: 234, column: 3)
!1961 = !DILocation(line: 239, column: 46, scope: !1962)
!1962 = distinct !DILexicalBlock(scope: !1960, file: !1, line: 238, column: 5)
!1963 = !DILocation(line: 239, column: 52, scope: !1962)
!1964 = !DILocation(line: 239, column: 51, scope: !1962)
!1965 = !DILocation(line: 239, column: 36, scope: !1962)
!1966 = !DILocation(line: 239, column: 31, scope: !1962)
!1967 = !DILocation(line: 239, column: 14, scope: !1962)
!1968 = !DILocation(line: 239, column: 13, scope: !1962)
!1969 = !DILocation(line: 240, column: 7, scope: !1962)
!1970 = !DILocation(line: 244, column: 32, scope: !1971)
!1971 = distinct !DILexicalBlock(scope: !1960, file: !1, line: 243, column: 5)
!1972 = !DILocation(line: 244, column: 38, scope: !1971)
!1973 = !DILocation(line: 244, column: 37, scope: !1971)
!1974 = !DILocation(line: 244, column: 13, scope: !1971)
!1975 = !DILocation(line: 245, column: 7, scope: !1971)
!1976 = !DILocation(line: 255, column: 14, scope: !1977)
!1977 = distinct !DILexicalBlock(scope: !1960, file: !1, line: 248, column: 5)
!1978 = !DILocation(line: 255, column: 20, scope: !1977)
!1979 = !DILocation(line: 255, column: 19, scope: !1977)
!1980 = !DILocation(line: 255, column: 13, scope: !1977)
!1981 = !DILocation(line: 256, column: 49, scope: !1977)
!1982 = !DILocation(line: 256, column: 40, scope: !1977)
!1983 = !DILocation(line: 256, column: 55, scope: !1977)
!1984 = !DILocation(line: 256, column: 34, scope: !1977)
!1985 = !DILocation(line: 256, column: 33, scope: !1977)
!1986 = !DILocation(line: 256, column: 13, scope: !1977)
!1987 = !DILocation(line: 257, column: 7, scope: !1977)
!1988 = !DILocation(line: 261, column: 41, scope: !1989)
!1989 = distinct !DILexicalBlock(scope: !1960, file: !1, line: 260, column: 5)
!1990 = !DILocation(line: 261, column: 32, scope: !1989)
!1991 = !DILocation(line: 261, column: 59, scope: !1989)
!1992 = !DILocation(line: 261, column: 64, scope: !1989)
!1993 = !DILocation(line: 261, column: 49, scope: !1989)
!1994 = !DILocation(line: 261, column: 47, scope: !1989)
!1995 = !DILocation(line: 261, column: 14, scope: !1989)
!1996 = !DILocation(line: 261, column: 13, scope: !1989)
!1997 = !DILocation(line: 262, column: 7, scope: !1989)
!1998 = !DILocation(line: 267, column: 22, scope: !1999)
!1999 = distinct !DILexicalBlock(scope: !1960, file: !1, line: 265, column: 5)
!2000 = !DILocation(line: 267, column: 21, scope: !1999)
!2001 = !DILocation(line: 267, column: 28, scope: !1999)
!2002 = !DILocation(line: 267, column: 27, scope: !1999)
!2003 = !DILocation(line: 266, column: 50, scope: !1999)
!2004 = !DILocation(line: 266, column: 49, scope: !1999)
!2005 = !DILocation(line: 267, column: 35, scope: !1999)
!2006 = !DILocation(line: 266, column: 44, scope: !1999)
!2007 = !DILocation(line: 266, column: 14, scope: !1999)
!2008 = !DILocation(line: 266, column: 13, scope: !1999)
!2009 = !DILocation(line: 268, column: 7, scope: !1999)
!2010 = !DILocation(line: 272, column: 14, scope: !2011)
!2011 = distinct !DILexicalBlock(scope: !1960, file: !1, line: 271, column: 5)
!2012 = !DILocation(line: 272, column: 21, scope: !2011)
!2013 = !DILocation(line: 272, column: 27, scope: !2011)
!2014 = !DILocation(line: 272, column: 42, scope: !2011)
!2015 = !DILocation(line: 272, column: 19, scope: !2011)
!2016 = !DILocation(line: 272, column: 13, scope: !2011)
!2017 = !DILocation(line: 273, column: 7, scope: !2011)
!2018 = !DILocation(line: 277, column: 59, scope: !2019)
!2019 = distinct !DILexicalBlock(scope: !1960, file: !1, line: 276, column: 5)
!2020 = !DILocation(line: 277, column: 64, scope: !2019)
!2021 = !DILocation(line: 278, column: 9, scope: !2019)
!2022 = !DILocation(line: 277, column: 77, scope: !2019)
!2023 = !DILocation(line: 277, column: 45, scope: !2019)
!2024 = !DILocation(line: 277, column: 44, scope: !2019)
!2025 = !DILocation(line: 277, column: 14, scope: !2019)
!2026 = !DILocation(line: 277, column: 13, scope: !2019)
!2027 = !DILocation(line: 279, column: 7, scope: !2019)
!2028 = !DILocation(line: 283, column: 57, scope: !2029)
!2029 = distinct !DILexicalBlock(scope: !1960, file: !1, line: 282, column: 5)
!2030 = !DILocation(line: 283, column: 69, scope: !2029)
!2031 = !DILocation(line: 284, column: 23, scope: !2029)
!2032 = !DILocation(line: 283, column: 31, scope: !2029)
!2033 = !DILocation(line: 283, column: 14, scope: !2029)
!2034 = !DILocation(line: 283, column: 13, scope: !2029)
!2035 = !DILocation(line: 285, column: 7, scope: !2029)
!2036 = !DILocation(line: 289, column: 57, scope: !2037)
!2037 = distinct !DILexicalBlock(scope: !1960, file: !1, line: 288, column: 5)
!2038 = !DILocation(line: 289, column: 69, scope: !2037)
!2039 = !DILocation(line: 290, column: 22, scope: !2037)
!2040 = !DILocation(line: 289, column: 31, scope: !2037)
!2041 = !DILocation(line: 289, column: 14, scope: !2037)
!2042 = !DILocation(line: 289, column: 13, scope: !2037)
!2043 = !DILocation(line: 291, column: 7, scope: !2037)
!2044 = !DILocation(line: 295, column: 57, scope: !2045)
!2045 = distinct !DILexicalBlock(scope: !1960, file: !1, line: 294, column: 5)
!2046 = !DILocation(line: 295, column: 69, scope: !2045)
!2047 = !DILocation(line: 296, column: 24, scope: !2045)
!2048 = !DILocation(line: 295, column: 31, scope: !2045)
!2049 = !DILocation(line: 295, column: 14, scope: !2045)
!2050 = !DILocation(line: 295, column: 13, scope: !2045)
!2051 = !DILocation(line: 297, column: 7, scope: !2045)
!2052 = !DILocation(line: 301, column: 41, scope: !2053)
!2053 = distinct !DILexicalBlock(scope: !1960, file: !1, line: 300, column: 5)
!2054 = !DILocation(line: 301, column: 32, scope: !2053)
!2055 = !DILocation(line: 301, column: 60, scope: !2053)
!2056 = !DILocation(line: 301, column: 65, scope: !2053)
!2057 = !DILocation(line: 301, column: 50, scope: !2053)
!2058 = !DILocation(line: 301, column: 47, scope: !2053)
!2059 = !DILocation(line: 301, column: 14, scope: !2053)
!2060 = !DILocation(line: 301, column: 13, scope: !2053)
!2061 = !DILocation(line: 302, column: 7, scope: !2053)
!2062 = !DILocation(line: 306, column: 25, scope: !2063)
!2063 = distinct !DILexicalBlock(scope: !2064, file: !1, line: 306, column: 11)
!2064 = distinct !DILexicalBlock(scope: !1960, file: !1, line: 305, column: 5)
!2065 = !DILocation(line: 306, column: 24, scope: !2063)
!2066 = !DILocation(line: 306, column: 32, scope: !2063)
!2067 = !DILocation(line: 306, column: 11, scope: !2064)
!2068 = !DILocation(line: 307, column: 74, scope: !2063)
!2069 = !DILocation(line: 307, column: 73, scope: !2063)
!2070 = !DILocation(line: 308, column: 11, scope: !2063)
!2071 = !DILocation(line: 307, column: 79, scope: !2063)
!2072 = !DILocation(line: 308, column: 16, scope: !2063)
!2073 = !DILocation(line: 307, column: 47, scope: !2063)
!2074 = !DILocation(line: 307, column: 46, scope: !2063)
!2075 = !DILocation(line: 308, column: 37, scope: !2063)
!2076 = !DILocation(line: 308, column: 42, scope: !2063)
!2077 = !DILocation(line: 308, column: 23, scope: !2063)
!2078 = !DILocation(line: 308, column: 22, scope: !2063)
!2079 = !DILocation(line: 307, column: 16, scope: !2063)
!2080 = !DILocation(line: 307, column: 15, scope: !2063)
!2081 = !DILocation(line: 307, column: 9, scope: !2063)
!2082 = !DILocation(line: 309, column: 7, scope: !2064)
!2083 = !DILocation(line: 313, column: 52, scope: !2084)
!2084 = distinct !DILexicalBlock(scope: !1960, file: !1, line: 312, column: 5)
!2085 = !DILocation(line: 313, column: 43, scope: !2084)
!2086 = !DILocation(line: 313, column: 58, scope: !2084)
!2087 = !DILocation(line: 313, column: 31, scope: !2084)
!2088 = !DILocation(line: 313, column: 14, scope: !2084)
!2089 = !DILocation(line: 313, column: 13, scope: !2084)
!2090 = !DILocation(line: 314, column: 7, scope: !2084)
!2091 = !DILocation(line: 318, column: 32, scope: !2092)
!2092 = distinct !DILexicalBlock(scope: !1960, file: !1, line: 317, column: 5)
!2093 = !DILocation(line: 318, column: 38, scope: !2092)
!2094 = !DILocation(line: 318, column: 37, scope: !2092)
!2095 = !DILocation(line: 318, column: 13, scope: !2092)
!2096 = !DILocation(line: 319, column: 7, scope: !2092)
!2097 = !DILocation(line: 323, column: 32, scope: !2098)
!2098 = distinct !DILexicalBlock(scope: !1960, file: !1, line: 322, column: 5)
!2099 = !DILocation(line: 323, column: 38, scope: !2098)
!2100 = !DILocation(line: 323, column: 37, scope: !2098)
!2101 = !DILocation(line: 323, column: 13, scope: !2098)
!2102 = !DILocation(line: 324, column: 7, scope: !2098)
!2103 = !DILocation(line: 328, column: 50, scope: !2104)
!2104 = distinct !DILexicalBlock(scope: !1960, file: !1, line: 327, column: 5)
!2105 = !DILocation(line: 328, column: 41, scope: !2104)
!2106 = !DILocation(line: 328, column: 56, scope: !2104)
!2107 = !DILocation(line: 328, column: 31, scope: !2104)
!2108 = !DILocation(line: 328, column: 14, scope: !2104)
!2109 = !DILocation(line: 328, column: 13, scope: !2104)
!2110 = !DILocation(line: 329, column: 7, scope: !2104)
!2111 = !DILocation(line: 333, column: 57, scope: !2112)
!2112 = distinct !DILexicalBlock(scope: !1960, file: !1, line: 332, column: 5)
!2113 = !DILocation(line: 333, column: 69, scope: !2112)
!2114 = !DILocation(line: 334, column: 37, scope: !2112)
!2115 = !DILocation(line: 333, column: 31, scope: !2112)
!2116 = !DILocation(line: 333, column: 14, scope: !2112)
!2117 = !DILocation(line: 333, column: 13, scope: !2112)
!2118 = !DILocation(line: 335, column: 7, scope: !2112)
!2119 = !DILocation(line: 339, column: 32, scope: !2120)
!2120 = distinct !DILexicalBlock(scope: !1960, file: !1, line: 338, column: 5)
!2121 = !DILocation(line: 339, column: 38, scope: !2120)
!2122 = !DILocation(line: 339, column: 37, scope: !2120)
!2123 = !DILocation(line: 339, column: 13, scope: !2120)
!2124 = !DILocation(line: 340, column: 7, scope: !2120)
!2125 = !DILocation(line: 344, column: 41, scope: !2126)
!2126 = distinct !DILexicalBlock(scope: !1960, file: !1, line: 343, column: 5)
!2127 = !DILocation(line: 344, column: 32, scope: !2126)
!2128 = !DILocation(line: 344, column: 59, scope: !2126)
!2129 = !DILocation(line: 344, column: 64, scope: !2126)
!2130 = !DILocation(line: 344, column: 49, scope: !2126)
!2131 = !DILocation(line: 344, column: 47, scope: !2126)
!2132 = !DILocation(line: 344, column: 14, scope: !2126)
!2133 = !DILocation(line: 344, column: 13, scope: !2126)
!2134 = !DILocation(line: 345, column: 7, scope: !2126)
!2135 = !DILocation(line: 349, column: 57, scope: !2136)
!2136 = distinct !DILexicalBlock(scope: !1960, file: !1, line: 348, column: 5)
!2137 = !DILocation(line: 349, column: 69, scope: !2136)
!2138 = !DILocation(line: 350, column: 22, scope: !2136)
!2139 = !DILocation(line: 349, column: 31, scope: !2136)
!2140 = !DILocation(line: 349, column: 14, scope: !2136)
!2141 = !DILocation(line: 349, column: 13, scope: !2136)
!2142 = !DILocation(line: 351, column: 7, scope: !2136)
!2143 = !DILocation(line: 355, column: 72, scope: !2144)
!2144 = distinct !DILexicalBlock(scope: !1960, file: !1, line: 354, column: 5)
!2145 = !DILocation(line: 355, column: 71, scope: !2144)
!2146 = !DILocation(line: 356, column: 18, scope: !2144)
!2147 = !DILocation(line: 356, column: 9, scope: !2144)
!2148 = !DILocation(line: 355, column: 45, scope: !2144)
!2149 = !DILocation(line: 355, column: 44, scope: !2144)
!2150 = !DILocation(line: 355, column: 14, scope: !2144)
!2151 = !DILocation(line: 355, column: 13, scope: !2144)
!2152 = !DILocation(line: 357, column: 7, scope: !2144)
!2153 = !DILocation(line: 361, column: 41, scope: !2154)
!2154 = distinct !DILexicalBlock(scope: !1960, file: !1, line: 360, column: 5)
!2155 = !DILocation(line: 361, column: 32, scope: !2154)
!2156 = !DILocation(line: 361, column: 60, scope: !2154)
!2157 = !DILocation(line: 361, column: 65, scope: !2154)
!2158 = !DILocation(line: 361, column: 50, scope: !2154)
!2159 = !DILocation(line: 361, column: 47, scope: !2154)
!2160 = !DILocation(line: 361, column: 14, scope: !2154)
!2161 = !DILocation(line: 361, column: 13, scope: !2154)
!2162 = !DILocation(line: 362, column: 7, scope: !2154)
!2163 = !DILocation(line: 366, column: 14, scope: !2164)
!2164 = distinct !DILexicalBlock(scope: !1960, file: !1, line: 365, column: 5)
!2165 = !DILocation(line: 366, column: 13, scope: !2164)
!2166 = !DILocation(line: 367, column: 7, scope: !2164)
!2167 = !DILocation(line: 372, column: 22, scope: !2168)
!2168 = distinct !DILexicalBlock(scope: !1960, file: !1, line: 370, column: 5)
!2169 = !DILocation(line: 372, column: 21, scope: !2168)
!2170 = !DILocation(line: 372, column: 28, scope: !2168)
!2171 = !DILocation(line: 372, column: 27, scope: !2168)
!2172 = !DILocation(line: 371, column: 50, scope: !2168)
!2173 = !DILocation(line: 371, column: 49, scope: !2168)
!2174 = !DILocation(line: 372, column: 35, scope: !2168)
!2175 = !DILocation(line: 371, column: 44, scope: !2168)
!2176 = !DILocation(line: 371, column: 14, scope: !2168)
!2177 = !DILocation(line: 371, column: 13, scope: !2168)
!2178 = !DILocation(line: 373, column: 7, scope: !2168)
!2179 = !DILocation(line: 377, column: 32, scope: !2180)
!2180 = distinct !DILexicalBlock(scope: !1960, file: !1, line: 376, column: 5)
!2181 = !DILocation(line: 377, column: 38, scope: !2180)
!2182 = !DILocation(line: 377, column: 37, scope: !2180)
!2183 = !DILocation(line: 377, column: 13, scope: !2180)
!2184 = !DILocation(line: 378, column: 7, scope: !2180)
!2185 = !DILocation(line: 382, column: 32, scope: !2186)
!2186 = distinct !DILexicalBlock(scope: !1960, file: !1, line: 381, column: 5)
!2187 = !DILocation(line: 382, column: 38, scope: !2186)
!2188 = !DILocation(line: 382, column: 37, scope: !2186)
!2189 = !DILocation(line: 382, column: 13, scope: !2186)
!2190 = !DILocation(line: 383, column: 7, scope: !2186)
!2191 = !DILocation(line: 387, column: 50, scope: !2192)
!2192 = distinct !DILexicalBlock(scope: !1960, file: !1, line: 386, column: 5)
!2193 = !DILocation(line: 387, column: 33, scope: !2192)
!2194 = !DILocation(line: 387, column: 59, scope: !2192)
!2195 = !DILocation(line: 387, column: 56, scope: !2192)
!2196 = !DILocation(line: 387, column: 32, scope: !2192)
!2197 = !DILocation(line: 387, column: 14, scope: !2192)
!2198 = !DILocation(line: 387, column: 13, scope: !2192)
!2199 = !DILocation(line: 389, column: 7, scope: !2192)
!2200 = !DILocation(line: 393, column: 50, scope: !2201)
!2201 = distinct !DILexicalBlock(scope: !1960, file: !1, line: 392, column: 5)
!2202 = !DILocation(line: 393, column: 33, scope: !2201)
!2203 = !DILocation(line: 393, column: 59, scope: !2201)
!2204 = !DILocation(line: 393, column: 56, scope: !2201)
!2205 = !DILocation(line: 393, column: 32, scope: !2201)
!2206 = !DILocation(line: 393, column: 72, scope: !2201)
!2207 = !DILocation(line: 393, column: 14, scope: !2201)
!2208 = !DILocation(line: 393, column: 13, scope: !2201)
!2209 = !DILocation(line: 394, column: 7, scope: !2201)
!2210 = !DILocation(line: 398, column: 50, scope: !2211)
!2211 = distinct !DILexicalBlock(scope: !1960, file: !1, line: 397, column: 5)
!2212 = !DILocation(line: 398, column: 33, scope: !2211)
!2213 = !DILocation(line: 398, column: 58, scope: !2211)
!2214 = !DILocation(line: 398, column: 56, scope: !2211)
!2215 = !DILocation(line: 398, column: 32, scope: !2211)
!2216 = !DILocation(line: 399, column: 9, scope: !2211)
!2217 = !DILocation(line: 398, column: 14, scope: !2211)
!2218 = !DILocation(line: 398, column: 13, scope: !2211)
!2219 = !DILocation(line: 400, column: 7, scope: !2211)
!2220 = !DILocation(line: 404, column: 57, scope: !2221)
!2221 = distinct !DILexicalBlock(scope: !1960, file: !1, line: 403, column: 5)
!2222 = !DILocation(line: 404, column: 69, scope: !2221)
!2223 = !DILocation(line: 405, column: 22, scope: !2221)
!2224 = !DILocation(line: 404, column: 31, scope: !2221)
!2225 = !DILocation(line: 404, column: 14, scope: !2221)
!2226 = !DILocation(line: 404, column: 13, scope: !2221)
!2227 = !DILocation(line: 406, column: 7, scope: !2221)
!2228 = !DILocation(line: 410, column: 41, scope: !2229)
!2229 = distinct !DILexicalBlock(scope: !1960, file: !1, line: 409, column: 5)
!2230 = !DILocation(line: 410, column: 32, scope: !2229)
!2231 = !DILocation(line: 410, column: 59, scope: !2229)
!2232 = !DILocation(line: 410, column: 64, scope: !2229)
!2233 = !DILocation(line: 410, column: 49, scope: !2229)
!2234 = !DILocation(line: 410, column: 47, scope: !2229)
!2235 = !DILocation(line: 410, column: 14, scope: !2229)
!2236 = !DILocation(line: 410, column: 13, scope: !2229)
!2237 = !DILocation(line: 411, column: 7, scope: !2229)
!2238 = !DILocation(line: 414, column: 10, scope: !1941)
!2239 = !DILocation(line: 414, column: 3, scope: !1941)
!2240 = distinct !DISubprogram(name: "IntensityCompare", scope: !1, file: !1, line: 198, type: !2241, scopeLine: 199, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !826)
!2241 = !DISubroutineType(types: !2242)
!2242 = !{!660, !2243, !2243}
!2243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2244, size: 64)
!2244 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!2245 = !DILocalVariable(name: "x", arg: 1, scope: !2240, file: !1, line: 198, type: !2243)
!2246 = !DILocation(line: 198, column: 41, scope: !2240)
!2247 = !DILocalVariable(name: "y", arg: 2, scope: !2240, file: !1, line: 198, type: !2243)
!2248 = !DILocation(line: 198, column: 55, scope: !2240)
!2249 = !DILocalVariable(name: "color_1", scope: !2240, file: !1, line: 201, type: !810)
!2250 = !DILocation(line: 201, column: 6, scope: !2240)
!2251 = !DILocalVariable(name: "color_2", scope: !2240, file: !1, line: 202, type: !810)
!2252 = !DILocation(line: 202, column: 6, scope: !2240)
!2253 = !DILocalVariable(name: "intensity", scope: !2240, file: !1, line: 205, type: !660)
!2254 = !DILocation(line: 205, column: 5, scope: !2240)
!2255 = !DILocation(line: 207, column: 39, scope: !2240)
!2256 = !DILocation(line: 207, column: 11, scope: !2240)
!2257 = !DILocation(line: 207, column: 10, scope: !2240)
!2258 = !DILocation(line: 208, column: 39, scope: !2240)
!2259 = !DILocation(line: 208, column: 11, scope: !2240)
!2260 = !DILocation(line: 208, column: 10, scope: !2240)
!2261 = !DILocation(line: 209, column: 40, scope: !2240)
!2262 = !DILocation(line: 209, column: 19, scope: !2240)
!2263 = !DILocation(line: 209, column: 13, scope: !2240)
!2264 = !DILocation(line: 210, column: 32, scope: !2240)
!2265 = !DILocation(line: 210, column: 11, scope: !2240)
!2266 = !DILocation(line: 210, column: 5, scope: !2240)
!2267 = !DILocation(line: 209, column: 48, scope: !2240)
!2268 = !DILocation(line: 209, column: 12, scope: !2240)
!2269 = !DILocation(line: 211, column: 10, scope: !2240)
!2270 = !DILocation(line: 211, column: 3, scope: !2240)
!2271 = distinct !DISubprogram(name: "ClampToQuantum", scope: !147, file: !147, line: 87, type: !2272, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !826)
!2272 = !DISubroutineType(types: !2273)
!2273 = !{!521, !1945}
!2274 = !DILocalVariable(name: "value", arg: 1, scope: !2271, file: !147, line: 87, type: !1945)
!2275 = !DILocation(line: 87, column: 59, scope: !2271)
!2276 = !DILocation(line: 92, column: 7, scope: !2277)
!2277 = distinct !DILexicalBlock(scope: !2271, file: !147, line: 92, column: 7)
!2278 = !DILocation(line: 92, column: 13, scope: !2277)
!2279 = !DILocation(line: 92, column: 7, scope: !2271)
!2280 = !DILocation(line: 93, column: 5, scope: !2277)
!2281 = !DILocation(line: 94, column: 7, scope: !2282)
!2282 = distinct !DILexicalBlock(scope: !2271, file: !147, line: 94, column: 7)
!2283 = !DILocation(line: 94, column: 13, scope: !2282)
!2284 = !DILocation(line: 94, column: 7, scope: !2271)
!2285 = !DILocation(line: 95, column: 5, scope: !2282)
!2286 = !DILocation(line: 96, column: 21, scope: !2271)
!2287 = !DILocation(line: 96, column: 26, scope: !2271)
!2288 = !DILocation(line: 96, column: 10, scope: !2271)
!2289 = !DILocation(line: 96, column: 3, scope: !2271)
!2290 = !DILocation(line: 98, column: 1, scope: !2271)
!2291 = distinct !DISubprogram(name: "SetImageProgress", scope: !2292, file: !2292, line: 27, type: !2293, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !826)
!2292 = !DIFile(filename: "./magick/monitor-private.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!2293 = !DISubroutineType(types: !2294)
!2294 = !{!509, !813, !626, !628, !631}
!2295 = !DILocalVariable(name: "image", arg: 1, scope: !2291, file: !2292, line: 27, type: !813)
!2296 = !DILocation(line: 27, column: 63, scope: !2291)
!2297 = !DILocalVariable(name: "tag", arg: 2, scope: !2291, file: !2292, line: 28, type: !626)
!2298 = !DILocation(line: 28, column: 15, scope: !2291)
!2299 = !DILocalVariable(name: "offset", arg: 3, scope: !2291, file: !2292, line: 28, type: !628)
!2300 = !DILocation(line: 28, column: 42, scope: !2291)
!2301 = !DILocalVariable(name: "extent", arg: 4, scope: !2291, file: !2292, line: 28, type: !631)
!2302 = !DILocation(line: 28, column: 70, scope: !2291)
!2303 = !DILocalVariable(name: "message", scope: !2291, file: !2292, line: 31, type: !646)
!2304 = !DILocation(line: 31, column: 5, scope: !2291)
!2305 = !DILocation(line: 33, column: 7, scope: !2306)
!2306 = distinct !DILexicalBlock(scope: !2291, file: !2292, line: 33, column: 7)
!2307 = !DILocation(line: 33, column: 14, scope: !2306)
!2308 = !DILocation(line: 33, column: 31, scope: !2306)
!2309 = !DILocation(line: 33, column: 7, scope: !2291)
!2310 = !DILocation(line: 34, column: 5, scope: !2306)
!2311 = !DILocation(line: 35, column: 29, scope: !2291)
!2312 = !DILocation(line: 35, column: 59, scope: !2291)
!2313 = !DILocation(line: 35, column: 63, scope: !2291)
!2314 = !DILocation(line: 35, column: 70, scope: !2291)
!2315 = !DILocation(line: 35, column: 10, scope: !2291)
!2316 = !DILocation(line: 36, column: 10, scope: !2291)
!2317 = !DILocation(line: 36, column: 17, scope: !2291)
!2318 = !DILocation(line: 36, column: 34, scope: !2291)
!2319 = !DILocation(line: 36, column: 42, scope: !2291)
!2320 = !DILocation(line: 36, column: 49, scope: !2291)
!2321 = !DILocation(line: 36, column: 56, scope: !2291)
!2322 = !DILocation(line: 36, column: 63, scope: !2291)
!2323 = !DILocation(line: 36, column: 3, scope: !2291)
!2324 = !DILocation(line: 37, column: 1, scope: !2291)
!2325 = distinct !DISubprogram(name: "DestroyPixelThreadSet", scope: !1, file: !1, line: 139, type: !2326, scopeLine: 140, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !826)
!2326 = !DISubroutineType(types: !2327)
!2327 = !{!714, !714}
!2328 = !DILocalVariable(name: "pixels", arg: 1, scope: !2325, file: !1, line: 139, type: !714)
!2329 = !DILocation(line: 139, column: 70, scope: !2325)
!2330 = !DILocalVariable(name: "i", scope: !2325, file: !1, line: 142, type: !557)
!2331 = !DILocation(line: 142, column: 5, scope: !2325)
!2332 = !DILocation(line: 145, column: 9, scope: !2333)
!2333 = distinct !DILexicalBlock(scope: !2325, file: !1, line: 145, column: 3)
!2334 = !DILocation(line: 145, column: 8, scope: !2333)
!2335 = !DILocation(line: 145, column: 13, scope: !2336)
!2336 = distinct !DILexicalBlock(scope: !2333, file: !1, line: 145, column: 3)
!2337 = !DILocation(line: 145, column: 27, scope: !2336)
!2338 = !DILocation(line: 145, column: 15, scope: !2336)
!2339 = !DILocation(line: 145, column: 3, scope: !2333)
!2340 = !DILocation(line: 146, column: 9, scope: !2341)
!2341 = distinct !DILexicalBlock(scope: !2336, file: !1, line: 146, column: 9)
!2342 = !DILocation(line: 146, column: 16, scope: !2341)
!2343 = !DILocation(line: 146, column: 19, scope: !2341)
!2344 = !DILocation(line: 146, column: 9, scope: !2336)
!2345 = !DILocation(line: 147, column: 62, scope: !2341)
!2346 = !DILocation(line: 147, column: 69, scope: !2341)
!2347 = !DILocation(line: 147, column: 39, scope: !2341)
!2348 = !DILocation(line: 147, column: 17, scope: !2341)
!2349 = !DILocation(line: 147, column: 7, scope: !2341)
!2350 = !DILocation(line: 147, column: 14, scope: !2341)
!2351 = !DILocation(line: 147, column: 16, scope: !2341)
!2352 = !DILocation(line: 146, column: 44, scope: !2341)
!2353 = !DILocation(line: 145, column: 68, scope: !2336)
!2354 = !DILocation(line: 145, column: 3, scope: !2336)
!2355 = distinct !{!2355, !2339, !2356}
!2356 = !DILocation(line: 147, column: 71, scope: !2333)
!2357 = !DILocation(line: 148, column: 56, scope: !2325)
!2358 = !DILocation(line: 148, column: 33, scope: !2325)
!2359 = !DILocation(line: 148, column: 10, scope: !2325)
!2360 = !DILocation(line: 148, column: 9, scope: !2325)
!2361 = !DILocation(line: 149, column: 10, scope: !2325)
!2362 = !DILocation(line: 149, column: 3, scope: !2325)
!2363 = distinct !DISubprogram(name: "DestroyRandomInfoThreadSet", scope: !1883, file: !1883, line: 27, type: !2364, scopeLine: 29, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !826)
!2364 = !DISubroutineType(types: !2365)
!2365 = !{!805, !805}
!2366 = !DILocalVariable(name: "random_info", arg: 1, scope: !2363, file: !1883, line: 28, type: !805)
!2367 = !DILocation(line: 28, column: 16, scope: !2363)
!2368 = !DILocalVariable(name: "i", scope: !2363, file: !1883, line: 31, type: !557)
!2369 = !DILocation(line: 31, column: 5, scope: !2363)
!2370 = !DILocation(line: 34, column: 9, scope: !2371)
!2371 = distinct !DILexicalBlock(scope: !2363, file: !1883, line: 34, column: 3)
!2372 = !DILocation(line: 34, column: 8, scope: !2371)
!2373 = !DILocation(line: 34, column: 13, scope: !2374)
!2374 = distinct !DILexicalBlock(scope: !2371, file: !1883, line: 34, column: 3)
!2375 = !DILocation(line: 34, column: 27, scope: !2374)
!2376 = !DILocation(line: 34, column: 15, scope: !2374)
!2377 = !DILocation(line: 34, column: 3, scope: !2371)
!2378 = !DILocation(line: 35, column: 9, scope: !2379)
!2379 = distinct !DILexicalBlock(scope: !2374, file: !1883, line: 35, column: 9)
!2380 = !DILocation(line: 35, column: 21, scope: !2379)
!2381 = !DILocation(line: 35, column: 24, scope: !2379)
!2382 = !DILocation(line: 35, column: 9, scope: !2374)
!2383 = !DILocation(line: 36, column: 40, scope: !2379)
!2384 = !DILocation(line: 36, column: 52, scope: !2379)
!2385 = !DILocation(line: 36, column: 22, scope: !2379)
!2386 = !DILocation(line: 36, column: 7, scope: !2379)
!2387 = !DILocation(line: 36, column: 19, scope: !2379)
!2388 = !DILocation(line: 36, column: 21, scope: !2379)
!2389 = !DILocation(line: 35, column: 42, scope: !2379)
!2390 = !DILocation(line: 34, column: 68, scope: !2374)
!2391 = !DILocation(line: 34, column: 3, scope: !2374)
!2392 = distinct !{!2392, !2377, !2393}
!2393 = !DILocation(line: 36, column: 54, scope: !2371)
!2394 = !DILocation(line: 37, column: 50, scope: !2363)
!2395 = !DILocation(line: 37, column: 26, scope: !2363)
!2396 = !DILocation(line: 37, column: 10, scope: !2363)
!2397 = !DILocation(line: 37, column: 3, scope: !2363)
!2398 = distinct !DISubprogram(name: "FunctionImage", scope: !1, file: !1, line: 982, type: !2399, scopeLine: 985, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !826)
!2399 = !DISubroutineType(types: !2400)
!2400 = !{!509, !493, !2401, !1793, !2403, !825}
!2401 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2402)
!2402 = !DIDerivedType(tag: DW_TAG_typedef, name: "MagickFunction", file: !369, line: 111, baseType: !450)
!2403 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !824, size: 64)
!2404 = !DILocalVariable(name: "image", arg: 1, scope: !2398, file: !1, line: 982, type: !493)
!2405 = !DILocation(line: 982, column: 53, scope: !2398)
!2406 = !DILocalVariable(name: "function", arg: 2, scope: !2398, file: !1, line: 983, type: !2401)
!2407 = !DILocation(line: 983, column: 24, scope: !2398)
!2408 = !DILocalVariable(name: "number_parameters", arg: 3, scope: !2398, file: !1, line: 983, type: !1793)
!2409 = !DILocation(line: 983, column: 46, scope: !2398)
!2410 = !DILocalVariable(name: "parameters", arg: 4, scope: !2398, file: !1, line: 984, type: !2403)
!2411 = !DILocation(line: 984, column: 17, scope: !2398)
!2412 = !DILocalVariable(name: "exception", arg: 5, scope: !2398, file: !1, line: 984, type: !825)
!2413 = !DILocation(line: 984, column: 43, scope: !2398)
!2414 = !DILocalVariable(name: "status", scope: !2398, file: !1, line: 987, type: !509)
!2415 = !DILocation(line: 987, column: 5, scope: !2398)
!2416 = !DILocation(line: 989, column: 31, scope: !2398)
!2417 = !DILocation(line: 989, column: 55, scope: !2398)
!2418 = !DILocation(line: 990, column: 5, scope: !2398)
!2419 = !DILocation(line: 990, column: 23, scope: !2398)
!2420 = !DILocation(line: 990, column: 34, scope: !2398)
!2421 = !DILocation(line: 989, column: 10, scope: !2398)
!2422 = !DILocation(line: 989, column: 9, scope: !2398)
!2423 = !DILocation(line: 991, column: 10, scope: !2398)
!2424 = !DILocation(line: 991, column: 3, scope: !2398)
!2425 = distinct !DISubprogram(name: "FunctionImageChannel", scope: !1, file: !1, line: 994, type: !2426, scopeLine: 998, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !826)
!2426 = !DISubroutineType(types: !2427)
!2427 = !{!509, !493, !848, !2401, !1793, !2403, !825}
!2428 = !DILocalVariable(name: "image", arg: 1, scope: !2425, file: !1, line: 994, type: !493)
!2429 = !DILocation(line: 994, column: 60, scope: !2425)
!2430 = !DILocalVariable(name: "channel", arg: 2, scope: !2425, file: !1, line: 995, type: !848)
!2431 = !DILocation(line: 995, column: 21, scope: !2425)
!2432 = !DILocalVariable(name: "function", arg: 3, scope: !2425, file: !1, line: 995, type: !2401)
!2433 = !DILocation(line: 995, column: 50, scope: !2425)
!2434 = !DILocalVariable(name: "number_parameters", arg: 4, scope: !2425, file: !1, line: 996, type: !1793)
!2435 = !DILocation(line: 996, column: 16, scope: !2425)
!2436 = !DILocalVariable(name: "parameters", arg: 5, scope: !2425, file: !1, line: 996, type: !2403)
!2437 = !DILocation(line: 996, column: 48, scope: !2425)
!2438 = !DILocalVariable(name: "exception", arg: 6, scope: !2425, file: !1, line: 997, type: !825)
!2439 = !DILocation(line: 997, column: 18, scope: !2425)
!2440 = !DILocalVariable(name: "image_view", scope: !2425, file: !1, line: 1002, type: !861)
!2441 = !DILocation(line: 1002, column: 6, scope: !2425)
!2442 = !DILocalVariable(name: "status", scope: !2425, file: !1, line: 1005, type: !509)
!2443 = !DILocation(line: 1005, column: 5, scope: !2425)
!2444 = !DILocalVariable(name: "progress", scope: !2425, file: !1, line: 1008, type: !629)
!2445 = !DILocation(line: 1008, column: 5, scope: !2425)
!2446 = !DILocalVariable(name: "y", scope: !2425, file: !1, line: 1011, type: !557)
!2447 = !DILocation(line: 1011, column: 5, scope: !2425)
!2448 = !DILocation(line: 1015, column: 7, scope: !2449)
!2449 = distinct !DILexicalBlock(scope: !2425, file: !1, line: 1015, column: 7)
!2450 = !DILocation(line: 1015, column: 14, scope: !2449)
!2451 = !DILocation(line: 1015, column: 20, scope: !2449)
!2452 = !DILocation(line: 1015, column: 7, scope: !2425)
!2453 = !DILocation(line: 1016, column: 61, scope: !2449)
!2454 = !DILocation(line: 1016, column: 68, scope: !2449)
!2455 = !DILocation(line: 1016, column: 12, scope: !2449)
!2456 = !DILocation(line: 1016, column: 5, scope: !2449)
!2457 = !DILocation(line: 1019, column: 28, scope: !2458)
!2458 = distinct !DILexicalBlock(scope: !2425, file: !1, line: 1019, column: 7)
!2459 = !DILocation(line: 1019, column: 7, scope: !2458)
!2460 = !DILocation(line: 1019, column: 47, scope: !2458)
!2461 = !DILocation(line: 1019, column: 7, scope: !2425)
!2462 = !DILocation(line: 1021, column: 24, scope: !2463)
!2463 = distinct !DILexicalBlock(scope: !2458, file: !1, line: 1020, column: 5)
!2464 = !DILocation(line: 1021, column: 35, scope: !2463)
!2465 = !DILocation(line: 1021, column: 42, scope: !2463)
!2466 = !DILocation(line: 1021, column: 7, scope: !2463)
!2467 = !DILocation(line: 1022, column: 7, scope: !2463)
!2468 = !DILocation(line: 1024, column: 34, scope: !2425)
!2469 = !DILocation(line: 1024, column: 40, scope: !2425)
!2470 = !DILocation(line: 1024, column: 48, scope: !2425)
!2471 = !DILocation(line: 1024, column: 57, scope: !2425)
!2472 = !DILocation(line: 1025, column: 5, scope: !2425)
!2473 = !DILocation(line: 1025, column: 16, scope: !2425)
!2474 = !DILocation(line: 1024, column: 10, scope: !2425)
!2475 = !DILocation(line: 1024, column: 9, scope: !2425)
!2476 = !DILocation(line: 1026, column: 7, scope: !2477)
!2477 = distinct !DILexicalBlock(scope: !2425, file: !1, line: 1026, column: 7)
!2478 = !DILocation(line: 1026, column: 14, scope: !2477)
!2479 = !DILocation(line: 1026, column: 7, scope: !2425)
!2480 = !DILocation(line: 1027, column: 12, scope: !2477)
!2481 = !DILocation(line: 1027, column: 5, scope: !2477)
!2482 = !DILocation(line: 1028, column: 9, scope: !2425)
!2483 = !DILocation(line: 1029, column: 11, scope: !2425)
!2484 = !DILocation(line: 1030, column: 40, scope: !2425)
!2485 = !DILocation(line: 1030, column: 46, scope: !2425)
!2486 = !DILocation(line: 1030, column: 14, scope: !2425)
!2487 = !DILocation(line: 1030, column: 13, scope: !2425)
!2488 = !DILocation(line: 1035, column: 9, scope: !2489)
!2489 = distinct !DILexicalBlock(scope: !2425, file: !1, line: 1035, column: 3)
!2490 = !DILocation(line: 1035, column: 8, scope: !2489)
!2491 = !DILocation(line: 1035, column: 13, scope: !2492)
!2492 = distinct !DILexicalBlock(scope: !2489, file: !1, line: 1035, column: 3)
!2493 = !DILocation(line: 1035, column: 27, scope: !2492)
!2494 = !DILocation(line: 1035, column: 34, scope: !2492)
!2495 = !DILocation(line: 1035, column: 15, scope: !2492)
!2496 = !DILocation(line: 1035, column: 3, scope: !2489)
!2497 = !DILocalVariable(name: "indexes", scope: !2498, file: !1, line: 1038, type: !918)
!2498 = distinct !DILexicalBlock(scope: !2492, file: !1, line: 1036, column: 3)
!2499 = !DILocation(line: 1038, column: 17, scope: !2498)
!2500 = !DILocalVariable(name: "x", scope: !2498, file: !1, line: 1041, type: !557)
!2501 = !DILocation(line: 1041, column: 7, scope: !2498)
!2502 = !DILocalVariable(name: "q", scope: !2498, file: !1, line: 1044, type: !921)
!2503 = !DILocation(line: 1044, column: 17, scope: !2498)
!2504 = !DILocation(line: 1046, column: 9, scope: !2505)
!2505 = distinct !DILexicalBlock(scope: !2498, file: !1, line: 1046, column: 9)
!2506 = !DILocation(line: 1046, column: 16, scope: !2505)
!2507 = !DILocation(line: 1046, column: 9, scope: !2498)
!2508 = !DILocation(line: 1047, column: 7, scope: !2505)
!2509 = !DILocation(line: 1048, column: 35, scope: !2498)
!2510 = !DILocation(line: 1048, column: 48, scope: !2498)
!2511 = !DILocation(line: 1048, column: 50, scope: !2498)
!2512 = !DILocation(line: 1048, column: 57, scope: !2498)
!2513 = !DILocation(line: 1048, column: 67, scope: !2498)
!2514 = !DILocation(line: 1048, column: 7, scope: !2498)
!2515 = !DILocation(line: 1048, column: 6, scope: !2498)
!2516 = !DILocation(line: 1049, column: 9, scope: !2517)
!2517 = distinct !DILexicalBlock(scope: !2498, file: !1, line: 1049, column: 9)
!2518 = !DILocation(line: 1049, column: 11, scope: !2517)
!2519 = !DILocation(line: 1049, column: 9, scope: !2498)
!2520 = !DILocation(line: 1051, column: 15, scope: !2521)
!2521 = distinct !DILexicalBlock(scope: !2517, file: !1, line: 1050, column: 7)
!2522 = !DILocation(line: 1052, column: 9, scope: !2521)
!2523 = !DILocation(line: 1054, column: 45, scope: !2498)
!2524 = !DILocation(line: 1054, column: 13, scope: !2498)
!2525 = !DILocation(line: 1054, column: 12, scope: !2498)
!2526 = !DILocation(line: 1055, column: 11, scope: !2527)
!2527 = distinct !DILexicalBlock(scope: !2498, file: !1, line: 1055, column: 5)
!2528 = !DILocation(line: 1055, column: 10, scope: !2527)
!2529 = !DILocation(line: 1055, column: 15, scope: !2530)
!2530 = distinct !DILexicalBlock(scope: !2527, file: !1, line: 1055, column: 5)
!2531 = !DILocation(line: 1055, column: 29, scope: !2530)
!2532 = !DILocation(line: 1055, column: 36, scope: !2530)
!2533 = !DILocation(line: 1055, column: 17, scope: !2530)
!2534 = !DILocation(line: 1055, column: 5, scope: !2527)
!2535 = !DILocation(line: 1057, column: 12, scope: !2536)
!2536 = distinct !DILexicalBlock(scope: !2537, file: !1, line: 1057, column: 11)
!2537 = distinct !DILexicalBlock(scope: !2530, file: !1, line: 1056, column: 5)
!2538 = !DILocation(line: 1057, column: 20, scope: !2536)
!2539 = !DILocation(line: 1057, column: 34, scope: !2536)
!2540 = !DILocation(line: 1057, column: 11, scope: !2537)
!2541 = !DILocation(line: 1058, column: 9, scope: !2536)
!2542 = !DILocation(line: 1060, column: 12, scope: !2543)
!2543 = distinct !DILexicalBlock(scope: !2537, file: !1, line: 1060, column: 11)
!2544 = !DILocation(line: 1060, column: 20, scope: !2543)
!2545 = !DILocation(line: 1060, column: 36, scope: !2543)
!2546 = !DILocation(line: 1060, column: 11, scope: !2537)
!2547 = !DILocation(line: 1061, column: 9, scope: !2543)
!2548 = !DILocation(line: 1063, column: 12, scope: !2549)
!2549 = distinct !DILexicalBlock(scope: !2537, file: !1, line: 1063, column: 11)
!2550 = !DILocation(line: 1063, column: 20, scope: !2549)
!2551 = !DILocation(line: 1063, column: 35, scope: !2549)
!2552 = !DILocation(line: 1063, column: 11, scope: !2537)
!2553 = !DILocation(line: 1064, column: 9, scope: !2549)
!2554 = !DILocation(line: 1066, column: 12, scope: !2555)
!2555 = distinct !DILexicalBlock(scope: !2537, file: !1, line: 1066, column: 11)
!2556 = !DILocation(line: 1066, column: 20, scope: !2555)
!2557 = !DILocation(line: 1066, column: 38, scope: !2555)
!2558 = !DILocation(line: 1066, column: 11, scope: !2537)
!2559 = !DILocation(line: 1068, column: 15, scope: !2560)
!2560 = distinct !DILexicalBlock(scope: !2561, file: !1, line: 1068, column: 15)
!2561 = distinct !DILexicalBlock(scope: !2555, file: !1, line: 1067, column: 9)
!2562 = !DILocation(line: 1068, column: 22, scope: !2560)
!2563 = !DILocation(line: 1068, column: 28, scope: !2560)
!2564 = !DILocation(line: 1068, column: 15, scope: !2561)
!2565 = !DILocation(line: 1069, column: 13, scope: !2560)
!2566 = !DILocation(line: 1072, column: 13, scope: !2560)
!2567 = !DILocation(line: 1074, column: 9, scope: !2561)
!2568 = !DILocation(line: 1075, column: 13, scope: !2569)
!2569 = distinct !DILexicalBlock(scope: !2537, file: !1, line: 1075, column: 11)
!2570 = !DILocation(line: 1075, column: 21, scope: !2569)
!2571 = !DILocation(line: 1075, column: 37, scope: !2569)
!2572 = !DILocation(line: 1075, column: 43, scope: !2569)
!2573 = !DILocation(line: 1075, column: 47, scope: !2569)
!2574 = !DILocation(line: 1075, column: 55, scope: !2569)
!2575 = !DILocation(line: 1075, column: 11, scope: !2537)
!2576 = !DILocation(line: 1076, column: 9, scope: !2577)
!2577 = distinct !DILexicalBlock(scope: !2578, file: !1, line: 1076, column: 9)
!2578 = distinct !DILexicalBlock(scope: !2569, file: !1, line: 1076, column: 9)
!2579 = !DILocation(line: 1076, column: 9, scope: !2578)
!2580 = !DILocation(line: 1078, column: 8, scope: !2537)
!2581 = !DILocation(line: 1079, column: 5, scope: !2537)
!2582 = !DILocation(line: 1055, column: 46, scope: !2530)
!2583 = !DILocation(line: 1055, column: 5, scope: !2530)
!2584 = distinct !{!2584, !2534, !2585}
!2585 = !DILocation(line: 1079, column: 5, scope: !2527)
!2586 = !DILocation(line: 1080, column: 38, scope: !2587)
!2587 = distinct !DILexicalBlock(scope: !2498, file: !1, line: 1080, column: 9)
!2588 = !DILocation(line: 1080, column: 49, scope: !2587)
!2589 = !DILocation(line: 1080, column: 9, scope: !2587)
!2590 = !DILocation(line: 1080, column: 60, scope: !2587)
!2591 = !DILocation(line: 1080, column: 9, scope: !2498)
!2592 = !DILocation(line: 1081, column: 13, scope: !2587)
!2593 = !DILocation(line: 1081, column: 7, scope: !2587)
!2594 = !DILocation(line: 1082, column: 9, scope: !2595)
!2595 = distinct !DILexicalBlock(scope: !2498, file: !1, line: 1082, column: 9)
!2596 = !DILocation(line: 1082, column: 16, scope: !2595)
!2597 = !DILocation(line: 1082, column: 33, scope: !2595)
!2598 = !DILocation(line: 1082, column: 9, scope: !2498)
!2599 = !DILocalVariable(name: "proceed", scope: !2600, file: !1, line: 1085, type: !509)
!2600 = distinct !DILexicalBlock(scope: !2595, file: !1, line: 1083, column: 7)
!2601 = !DILocation(line: 1085, column: 11, scope: !2600)
!2602 = !DILocation(line: 1090, column: 34, scope: !2600)
!2603 = !DILocation(line: 1090, column: 65, scope: !2600)
!2604 = !DILocation(line: 1090, column: 68, scope: !2600)
!2605 = !DILocation(line: 1090, column: 75, scope: !2600)
!2606 = !DILocation(line: 1090, column: 17, scope: !2600)
!2607 = !DILocation(line: 1090, column: 16, scope: !2600)
!2608 = !DILocation(line: 1091, column: 13, scope: !2609)
!2609 = distinct !DILexicalBlock(scope: !2600, file: !1, line: 1091, column: 13)
!2610 = !DILocation(line: 1091, column: 21, scope: !2609)
!2611 = !DILocation(line: 1091, column: 13, scope: !2600)
!2612 = !DILocation(line: 1092, column: 17, scope: !2609)
!2613 = !DILocation(line: 1092, column: 11, scope: !2609)
!2614 = !DILocation(line: 1093, column: 7, scope: !2600)
!2615 = !DILocation(line: 1094, column: 3, scope: !2498)
!2616 = !DILocation(line: 1035, column: 41, scope: !2492)
!2617 = !DILocation(line: 1035, column: 3, scope: !2492)
!2618 = distinct !{!2618, !2496, !2619}
!2619 = !DILocation(line: 1094, column: 3, scope: !2489)
!2620 = !DILocation(line: 1095, column: 31, scope: !2425)
!2621 = !DILocation(line: 1095, column: 14, scope: !2425)
!2622 = !DILocation(line: 1095, column: 13, scope: !2425)
!2623 = !DILocation(line: 1096, column: 10, scope: !2425)
!2624 = !DILocation(line: 1096, column: 3, scope: !2425)
!2625 = !DILocation(line: 1097, column: 1, scope: !2425)
!2626 = distinct !DISubprogram(name: "ApplyFunction", scope: !1, file: !1, line: 900, type: !2627, scopeLine: 903, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !826)
!2627 = !DISubroutineType(types: !2628)
!2628 = !{!521, !521, !2401, !1793, !2403, !825}
!2629 = !DILocalVariable(name: "pixel", arg: 1, scope: !2626, file: !1, line: 900, type: !521)
!2630 = !DILocation(line: 900, column: 38, scope: !2626)
!2631 = !DILocalVariable(name: "function", arg: 2, scope: !2626, file: !1, line: 900, type: !2401)
!2632 = !DILocation(line: 900, column: 65, scope: !2626)
!2633 = !DILocalVariable(name: "number_parameters", arg: 3, scope: !2626, file: !1, line: 901, type: !1793)
!2634 = !DILocation(line: 901, column: 16, scope: !2626)
!2635 = !DILocalVariable(name: "parameters", arg: 4, scope: !2626, file: !1, line: 901, type: !2403)
!2636 = !DILocation(line: 901, column: 48, scope: !2626)
!2637 = !DILocalVariable(name: "exception", arg: 5, scope: !2626, file: !1, line: 902, type: !825)
!2638 = !DILocation(line: 902, column: 18, scope: !2626)
!2639 = !DILocalVariable(name: "result", scope: !2626, file: !1, line: 905, type: !725)
!2640 = !DILocation(line: 905, column: 5, scope: !2626)
!2641 = !DILocalVariable(name: "i", scope: !2626, file: !1, line: 908, type: !557)
!2642 = !DILocation(line: 908, column: 5, scope: !2626)
!2643 = !DILocation(line: 910, column: 10, scope: !2626)
!2644 = !DILocation(line: 911, column: 9, scope: !2626)
!2645 = !DILocation(line: 912, column: 11, scope: !2626)
!2646 = !DILocation(line: 912, column: 3, scope: !2626)
!2647 = !DILocation(line: 921, column: 13, scope: !2648)
!2648 = distinct !DILexicalBlock(scope: !2649, file: !1, line: 915, column: 5)
!2649 = distinct !DILexicalBlock(scope: !2626, file: !1, line: 913, column: 3)
!2650 = !DILocation(line: 922, column: 13, scope: !2651)
!2651 = distinct !DILexicalBlock(scope: !2648, file: !1, line: 922, column: 7)
!2652 = !DILocation(line: 922, column: 12, scope: !2651)
!2653 = !DILocation(line: 922, column: 17, scope: !2654)
!2654 = distinct !DILexicalBlock(scope: !2651, file: !1, line: 922, column: 7)
!2655 = !DILocation(line: 922, column: 31, scope: !2654)
!2656 = !DILocation(line: 922, column: 19, scope: !2654)
!2657 = !DILocation(line: 922, column: 7, scope: !2651)
!2658 = !DILocation(line: 923, column: 16, scope: !2654)
!2659 = !DILocation(line: 923, column: 22, scope: !2654)
!2660 = !DILocation(line: 923, column: 36, scope: !2654)
!2661 = !DILocation(line: 923, column: 35, scope: !2654)
!2662 = !DILocation(line: 923, column: 44, scope: !2654)
!2663 = !DILocation(line: 923, column: 55, scope: !2654)
!2664 = !DILocation(line: 923, column: 42, scope: !2654)
!2665 = !DILocation(line: 923, column: 15, scope: !2654)
!2666 = !DILocation(line: 923, column: 9, scope: !2654)
!2667 = !DILocation(line: 922, column: 51, scope: !2654)
!2668 = !DILocation(line: 922, column: 7, scope: !2654)
!2669 = distinct !{!2669, !2657, !2670}
!2670 = !DILocation(line: 923, column: 56, scope: !2651)
!2671 = !DILocation(line: 924, column: 13, scope: !2648)
!2672 = !DILocation(line: 925, column: 7, scope: !2648)
!2673 = !DILocalVariable(name: "freq", scope: !2674, file: !1, line: 932, type: !530)
!2674 = distinct !DILexicalBlock(scope: !2649, file: !1, line: 928, column: 5)
!2675 = !DILocation(line: 932, column: 15, scope: !2674)
!2676 = !DILocalVariable(name: "phase", scope: !2674, file: !1, line: 932, type: !530)
!2677 = !DILocation(line: 932, column: 20, scope: !2674)
!2678 = !DILocalVariable(name: "ampl", scope: !2674, file: !1, line: 932, type: !530)
!2679 = !DILocation(line: 932, column: 26, scope: !2674)
!2680 = !DILocalVariable(name: "bias", scope: !2674, file: !1, line: 932, type: !530)
!2681 = !DILocation(line: 932, column: 31, scope: !2674)
!2682 = !DILocation(line: 933, column: 17, scope: !2674)
!2683 = !DILocation(line: 933, column: 35, scope: !2674)
!2684 = !DILocation(line: 933, column: 15, scope: !2674)
!2685 = !DILocation(line: 933, column: 44, scope: !2674)
!2686 = !DILocation(line: 933, column: 13, scope: !2674)
!2687 = !DILocation(line: 934, column: 17, scope: !2674)
!2688 = !DILocation(line: 934, column: 35, scope: !2674)
!2689 = !DILocation(line: 934, column: 15, scope: !2674)
!2690 = !DILocation(line: 934, column: 44, scope: !2674)
!2691 = !DILocation(line: 934, column: 13, scope: !2674)
!2692 = !DILocation(line: 935, column: 17, scope: !2674)
!2693 = !DILocation(line: 935, column: 35, scope: !2674)
!2694 = !DILocation(line: 935, column: 15, scope: !2674)
!2695 = !DILocation(line: 935, column: 44, scope: !2674)
!2696 = !DILocation(line: 935, column: 13, scope: !2674)
!2697 = !DILocation(line: 936, column: 17, scope: !2674)
!2698 = !DILocation(line: 936, column: 35, scope: !2674)
!2699 = !DILocation(line: 936, column: 15, scope: !2674)
!2700 = !DILocation(line: 936, column: 44, scope: !2674)
!2701 = !DILocation(line: 936, column: 13, scope: !2674)
!2702 = !DILocation(line: 937, column: 46, scope: !2674)
!2703 = !DILocation(line: 938, column: 10, scope: !2674)
!2704 = !DILocation(line: 938, column: 14, scope: !2674)
!2705 = !DILocation(line: 938, column: 28, scope: !2674)
!2706 = !DILocation(line: 938, column: 27, scope: !2674)
!2707 = !DILocation(line: 938, column: 36, scope: !2674)
!2708 = !DILocation(line: 938, column: 41, scope: !2674)
!2709 = !DILocation(line: 938, column: 34, scope: !2674)
!2710 = !DILocation(line: 937, column: 77, scope: !2674)
!2711 = !DILocation(line: 937, column: 51, scope: !2674)
!2712 = !DILocation(line: 937, column: 50, scope: !2674)
!2713 = !DILocation(line: 938, column: 54, scope: !2674)
!2714 = !DILocation(line: 938, column: 52, scope: !2674)
!2715 = !DILocation(line: 937, column: 44, scope: !2674)
!2716 = !DILocation(line: 937, column: 14, scope: !2674)
!2717 = !DILocation(line: 937, column: 13, scope: !2674)
!2718 = !DILocation(line: 939, column: 7, scope: !2674)
!2719 = !DILocalVariable(name: "width", scope: !2720, file: !1, line: 946, type: !530)
!2720 = distinct !DILexicalBlock(scope: !2649, file: !1, line: 942, column: 5)
!2721 = !DILocation(line: 946, column: 15, scope: !2720)
!2722 = !DILocalVariable(name: "range", scope: !2720, file: !1, line: 946, type: !530)
!2723 = !DILocation(line: 946, column: 21, scope: !2720)
!2724 = !DILocalVariable(name: "center", scope: !2720, file: !1, line: 946, type: !530)
!2725 = !DILocation(line: 946, column: 27, scope: !2720)
!2726 = !DILocalVariable(name: "bias", scope: !2720, file: !1, line: 946, type: !530)
!2727 = !DILocation(line: 946, column: 34, scope: !2720)
!2728 = !DILocation(line: 947, column: 18, scope: !2720)
!2729 = !DILocation(line: 947, column: 36, scope: !2720)
!2730 = !DILocation(line: 947, column: 16, scope: !2720)
!2731 = !DILocation(line: 947, column: 45, scope: !2720)
!2732 = !DILocation(line: 947, column: 14, scope: !2720)
!2733 = !DILocation(line: 948, column: 18, scope: !2720)
!2734 = !DILocation(line: 948, column: 36, scope: !2720)
!2735 = !DILocation(line: 948, column: 16, scope: !2720)
!2736 = !DILocation(line: 948, column: 45, scope: !2720)
!2737 = !DILocation(line: 948, column: 14, scope: !2720)
!2738 = !DILocation(line: 949, column: 18, scope: !2720)
!2739 = !DILocation(line: 949, column: 36, scope: !2720)
!2740 = !DILocation(line: 949, column: 16, scope: !2720)
!2741 = !DILocation(line: 949, column: 45, scope: !2720)
!2742 = !DILocation(line: 949, column: 14, scope: !2720)
!2743 = !DILocation(line: 950, column: 18, scope: !2720)
!2744 = !DILocation(line: 950, column: 36, scope: !2720)
!2745 = !DILocation(line: 950, column: 16, scope: !2720)
!2746 = !DILocation(line: 950, column: 45, scope: !2720)
!2747 = !DILocation(line: 950, column: 14, scope: !2720)
!2748 = !DILocation(line: 951, column: 20, scope: !2720)
!2749 = !DILocation(line: 951, column: 19, scope: !2720)
!2750 = !DILocation(line: 951, column: 40, scope: !2720)
!2751 = !DILocation(line: 951, column: 39, scope: !2720)
!2752 = !DILocation(line: 951, column: 48, scope: !2720)
!2753 = !DILocation(line: 951, column: 46, scope: !2720)
!2754 = !DILocation(line: 951, column: 25, scope: !2720)
!2755 = !DILocation(line: 951, column: 16, scope: !2720)
!2756 = !DILocation(line: 951, column: 14, scope: !2720)
!2757 = !DILocation(line: 952, column: 12, scope: !2758)
!2758 = distinct !DILexicalBlock(scope: !2720, file: !1, line: 952, column: 12)
!2759 = !DILocation(line: 952, column: 19, scope: !2758)
!2760 = !DILocation(line: 952, column: 12, scope: !2720)
!2761 = !DILocation(line: 953, column: 18, scope: !2758)
!2762 = !DILocation(line: 953, column: 25, scope: !2758)
!2763 = !DILocation(line: 953, column: 30, scope: !2758)
!2764 = !DILocation(line: 953, column: 23, scope: !2758)
!2765 = !DILocation(line: 953, column: 16, scope: !2758)
!2766 = !DILocation(line: 953, column: 9, scope: !2758)
!2767 = !DILocation(line: 954, column: 17, scope: !2768)
!2768 = distinct !DILexicalBlock(scope: !2758, file: !1, line: 954, column: 17)
!2769 = !DILocation(line: 954, column: 24, scope: !2768)
!2770 = !DILocation(line: 954, column: 17, scope: !2758)
!2771 = !DILocation(line: 955, column: 18, scope: !2768)
!2772 = !DILocation(line: 955, column: 25, scope: !2768)
!2773 = !DILocation(line: 955, column: 30, scope: !2768)
!2774 = !DILocation(line: 955, column: 23, scope: !2768)
!2775 = !DILocation(line: 955, column: 16, scope: !2768)
!2776 = !DILocation(line: 955, column: 9, scope: !2768)
!2777 = !DILocation(line: 957, column: 34, scope: !2768)
!2778 = !DILocation(line: 957, column: 39, scope: !2768)
!2779 = !DILocation(line: 957, column: 63, scope: !2768)
!2780 = !DILocation(line: 957, column: 54, scope: !2768)
!2781 = !DILocation(line: 957, column: 49, scope: !2768)
!2782 = !DILocation(line: 957, column: 48, scope: !2768)
!2783 = !DILocation(line: 957, column: 71, scope: !2768)
!2784 = !DILocation(line: 957, column: 70, scope: !2768)
!2785 = !DILocation(line: 957, column: 16, scope: !2768)
!2786 = !DILocation(line: 957, column: 15, scope: !2768)
!2787 = !DILocation(line: 958, column: 14, scope: !2720)
!2788 = !DILocation(line: 959, column: 7, scope: !2720)
!2789 = !DILocalVariable(name: "slope", scope: !2790, file: !1, line: 966, type: !530)
!2790 = distinct !DILexicalBlock(scope: !2649, file: !1, line: 962, column: 5)
!2791 = !DILocation(line: 966, column: 15, scope: !2790)
!2792 = !DILocalVariable(name: "range", scope: !2790, file: !1, line: 966, type: !530)
!2793 = !DILocation(line: 966, column: 21, scope: !2790)
!2794 = !DILocalVariable(name: "center", scope: !2790, file: !1, line: 966, type: !530)
!2795 = !DILocation(line: 966, column: 27, scope: !2790)
!2796 = !DILocalVariable(name: "bias", scope: !2790, file: !1, line: 966, type: !530)
!2797 = !DILocation(line: 966, column: 34, scope: !2790)
!2798 = !DILocation(line: 967, column: 18, scope: !2790)
!2799 = !DILocation(line: 967, column: 36, scope: !2790)
!2800 = !DILocation(line: 967, column: 16, scope: !2790)
!2801 = !DILocation(line: 967, column: 45, scope: !2790)
!2802 = !DILocation(line: 967, column: 14, scope: !2790)
!2803 = !DILocation(line: 968, column: 18, scope: !2790)
!2804 = !DILocation(line: 968, column: 36, scope: !2790)
!2805 = !DILocation(line: 968, column: 16, scope: !2790)
!2806 = !DILocation(line: 968, column: 45, scope: !2790)
!2807 = !DILocation(line: 968, column: 14, scope: !2790)
!2808 = !DILocation(line: 969, column: 18, scope: !2790)
!2809 = !DILocation(line: 969, column: 36, scope: !2790)
!2810 = !DILocation(line: 969, column: 16, scope: !2790)
!2811 = !DILocation(line: 969, column: 45, scope: !2790)
!2812 = !DILocation(line: 969, column: 14, scope: !2790)
!2813 = !DILocation(line: 970, column: 18, scope: !2790)
!2814 = !DILocation(line: 970, column: 36, scope: !2790)
!2815 = !DILocation(line: 970, column: 16, scope: !2790)
!2816 = !DILocation(line: 970, column: 45, scope: !2790)
!2817 = !DILocation(line: 970, column: 14, scope: !2790)
!2818 = !DILocation(line: 971, column: 41, scope: !2790)
!2819 = !DILocation(line: 971, column: 40, scope: !2790)
!2820 = !DILocation(line: 971, column: 61, scope: !2790)
!2821 = !DILocation(line: 971, column: 60, scope: !2790)
!2822 = !DILocation(line: 971, column: 67, scope: !2790)
!2823 = !DILocation(line: 971, column: 66, scope: !2790)
!2824 = !DILocation(line: 971, column: 46, scope: !2790)
!2825 = !DILocation(line: 971, column: 14, scope: !2790)
!2826 = !DILocation(line: 971, column: 13, scope: !2790)
!2827 = !DILocation(line: 972, column: 46, scope: !2790)
!2828 = !DILocation(line: 972, column: 51, scope: !2790)
!2829 = !DILocation(line: 973, column: 19, scope: !2790)
!2830 = !DILocation(line: 972, column: 66, scope: !2790)
!2831 = !DILocation(line: 972, column: 61, scope: !2790)
!2832 = !DILocation(line: 972, column: 60, scope: !2790)
!2833 = !DILocation(line: 973, column: 29, scope: !2790)
!2834 = !DILocation(line: 973, column: 27, scope: !2790)
!2835 = !DILocation(line: 972, column: 44, scope: !2790)
!2836 = !DILocation(line: 972, column: 14, scope: !2790)
!2837 = !DILocation(line: 972, column: 13, scope: !2790)
!2838 = !DILocation(line: 974, column: 7, scope: !2790)
!2839 = !DILocation(line: 977, column: 7, scope: !2649)
!2840 = !DILocation(line: 979, column: 25, scope: !2626)
!2841 = !DILocation(line: 979, column: 10, scope: !2626)
!2842 = !DILocation(line: 979, column: 3, scope: !2626)
!2843 = distinct !DISubprogram(name: "GetImageExtrema", scope: !1, file: !1, line: 1132, type: !2844, scopeLine: 1134, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !826)
!2844 = !DISubroutineType(types: !2845)
!2845 = !{!509, !813, !2846, !2846, !825}
!2846 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !504, size: 64)
!2847 = !DILocalVariable(name: "image", arg: 1, scope: !2843, file: !1, line: 1132, type: !813)
!2848 = !DILocation(line: 1132, column: 61, scope: !2843)
!2849 = !DILocalVariable(name: "minima", arg: 2, scope: !2843, file: !1, line: 1133, type: !2846)
!2850 = !DILocation(line: 1133, column: 11, scope: !2843)
!2851 = !DILocalVariable(name: "maxima", arg: 3, scope: !2843, file: !1, line: 1133, type: !2846)
!2852 = !DILocation(line: 1133, column: 26, scope: !2843)
!2853 = !DILocalVariable(name: "exception", arg: 4, scope: !2843, file: !1, line: 1133, type: !825)
!2854 = !DILocation(line: 1133, column: 48, scope: !2843)
!2855 = !DILocation(line: 1135, column: 33, scope: !2843)
!2856 = !DILocation(line: 1135, column: 57, scope: !2843)
!2857 = !DILocation(line: 1135, column: 64, scope: !2843)
!2858 = !DILocation(line: 1135, column: 71, scope: !2843)
!2859 = !DILocation(line: 1135, column: 10, scope: !2843)
!2860 = !DILocation(line: 1135, column: 3, scope: !2843)
!2861 = distinct !DISubprogram(name: "GetImageChannelExtrema", scope: !1, file: !1, line: 1138, type: !2862, scopeLine: 1141, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !826)
!2862 = !DISubroutineType(types: !2863)
!2863 = !{!509, !813, !848, !2846, !2846, !825}
!2864 = !DILocalVariable(name: "image", arg: 1, scope: !2861, file: !1, line: 1138, type: !813)
!2865 = !DILocation(line: 1138, column: 68, scope: !2861)
!2866 = !DILocalVariable(name: "channel", arg: 2, scope: !2861, file: !1, line: 1139, type: !848)
!2867 = !DILocation(line: 1139, column: 21, scope: !2861)
!2868 = !DILocalVariable(name: "minima", arg: 3, scope: !2861, file: !1, line: 1139, type: !2846)
!2869 = !DILocation(line: 1139, column: 37, scope: !2861)
!2870 = !DILocalVariable(name: "maxima", arg: 4, scope: !2861, file: !1, line: 1139, type: !2846)
!2871 = !DILocation(line: 1139, column: 52, scope: !2861)
!2872 = !DILocalVariable(name: "exception", arg: 5, scope: !2861, file: !1, line: 1140, type: !825)
!2873 = !DILocation(line: 1140, column: 18, scope: !2861)
!2874 = !DILocalVariable(name: "max", scope: !2861, file: !1, line: 1143, type: !530)
!2875 = !DILocation(line: 1143, column: 5, scope: !2861)
!2876 = !DILocalVariable(name: "min", scope: !2861, file: !1, line: 1144, type: !530)
!2877 = !DILocation(line: 1144, column: 5, scope: !2861)
!2878 = !DILocalVariable(name: "status", scope: !2861, file: !1, line: 1147, type: !509)
!2879 = !DILocation(line: 1147, column: 5, scope: !2861)
!2880 = !DILocation(line: 1151, column: 7, scope: !2881)
!2881 = distinct !DILexicalBlock(scope: !2861, file: !1, line: 1151, column: 7)
!2882 = !DILocation(line: 1151, column: 14, scope: !2881)
!2883 = !DILocation(line: 1151, column: 20, scope: !2881)
!2884 = !DILocation(line: 1151, column: 7, scope: !2861)
!2885 = !DILocation(line: 1152, column: 61, scope: !2881)
!2886 = !DILocation(line: 1152, column: 68, scope: !2881)
!2887 = !DILocation(line: 1152, column: 12, scope: !2881)
!2888 = !DILocation(line: 1152, column: 5, scope: !2881)
!2889 = !DILocation(line: 1153, column: 31, scope: !2861)
!2890 = !DILocation(line: 1153, column: 37, scope: !2861)
!2891 = !DILocation(line: 1153, column: 55, scope: !2861)
!2892 = !DILocation(line: 1153, column: 10, scope: !2861)
!2893 = !DILocation(line: 1153, column: 9, scope: !2861)
!2894 = !DILocation(line: 1154, column: 25, scope: !2861)
!2895 = !DILocation(line: 1154, column: 28, scope: !2861)
!2896 = !DILocation(line: 1154, column: 20, scope: !2861)
!2897 = !DILocation(line: 1154, column: 11, scope: !2861)
!2898 = !DILocation(line: 1154, column: 4, scope: !2861)
!2899 = !DILocation(line: 1154, column: 10, scope: !2861)
!2900 = !DILocation(line: 1155, column: 26, scope: !2861)
!2901 = !DILocation(line: 1155, column: 29, scope: !2861)
!2902 = !DILocation(line: 1155, column: 20, scope: !2861)
!2903 = !DILocation(line: 1155, column: 11, scope: !2861)
!2904 = !DILocation(line: 1155, column: 4, scope: !2861)
!2905 = !DILocation(line: 1155, column: 10, scope: !2861)
!2906 = !DILocation(line: 1156, column: 10, scope: !2861)
!2907 = !DILocation(line: 1156, column: 3, scope: !2861)
!2908 = distinct !DISubprogram(name: "GetImageChannelRange", scope: !1, file: !1, line: 2016, type: !2909, scopeLine: 2019, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !826)
!2909 = !DISubroutineType(types: !2910)
!2910 = !{!509, !813, !848, !2911, !2911, !825}
!2911 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !530, size: 64)
!2912 = !DILocalVariable(name: "image", arg: 1, scope: !2908, file: !1, line: 2016, type: !813)
!2913 = !DILocation(line: 2016, column: 66, scope: !2908)
!2914 = !DILocalVariable(name: "channel", arg: 2, scope: !2908, file: !1, line: 2017, type: !848)
!2915 = !DILocation(line: 2017, column: 21, scope: !2908)
!2916 = !DILocalVariable(name: "minima", arg: 3, scope: !2908, file: !1, line: 2017, type: !2911)
!2917 = !DILocation(line: 2017, column: 37, scope: !2908)
!2918 = !DILocalVariable(name: "maxima", arg: 4, scope: !2908, file: !1, line: 2017, type: !2911)
!2919 = !DILocation(line: 2017, column: 52, scope: !2908)
!2920 = !DILocalVariable(name: "exception", arg: 5, scope: !2908, file: !1, line: 2018, type: !825)
!2921 = !DILocation(line: 2018, column: 18, scope: !2908)
!2922 = !DILocalVariable(name: "pixel", scope: !2908, file: !1, line: 2021, type: !716)
!2923 = !DILocation(line: 2021, column: 5, scope: !2908)
!2924 = !DILocalVariable(name: "y", scope: !2908, file: !1, line: 2024, type: !557)
!2925 = !DILocation(line: 2024, column: 5, scope: !2908)
!2926 = !DILocation(line: 2028, column: 7, scope: !2927)
!2927 = distinct !DILexicalBlock(scope: !2908, file: !1, line: 2028, column: 7)
!2928 = !DILocation(line: 2028, column: 14, scope: !2927)
!2929 = !DILocation(line: 2028, column: 20, scope: !2927)
!2930 = !DILocation(line: 2028, column: 7, scope: !2908)
!2931 = !DILocation(line: 2029, column: 61, scope: !2927)
!2932 = !DILocation(line: 2029, column: 68, scope: !2927)
!2933 = !DILocation(line: 2029, column: 12, scope: !2927)
!2934 = !DILocation(line: 2029, column: 5, scope: !2927)
!2935 = !DILocation(line: 2030, column: 4, scope: !2908)
!2936 = !DILocation(line: 2030, column: 10, scope: !2908)
!2937 = !DILocation(line: 2031, column: 4, scope: !2908)
!2938 = !DILocation(line: 2031, column: 10, scope: !2908)
!2939 = !DILocation(line: 2032, column: 24, scope: !2908)
!2940 = !DILocation(line: 2032, column: 3, scope: !2908)
!2941 = !DILocation(line: 2033, column: 9, scope: !2942)
!2942 = distinct !DILexicalBlock(scope: !2908, file: !1, line: 2033, column: 3)
!2943 = !DILocation(line: 2033, column: 8, scope: !2942)
!2944 = !DILocation(line: 2033, column: 13, scope: !2945)
!2945 = distinct !DILexicalBlock(scope: !2942, file: !1, line: 2033, column: 3)
!2946 = !DILocation(line: 2033, column: 27, scope: !2945)
!2947 = !DILocation(line: 2033, column: 34, scope: !2945)
!2948 = !DILocation(line: 2033, column: 15, scope: !2945)
!2949 = !DILocation(line: 2033, column: 3, scope: !2942)
!2950 = !DILocalVariable(name: "indexes", scope: !2951, file: !1, line: 2036, type: !2952)
!2951 = distinct !DILexicalBlock(scope: !2945, file: !1, line: 2034, column: 3)
!2952 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !735)
!2953 = !DILocation(line: 2036, column: 17, scope: !2951)
!2954 = !DILocalVariable(name: "p", scope: !2951, file: !1, line: 2039, type: !2955)
!2955 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !731)
!2956 = !DILocation(line: 2039, column: 17, scope: !2951)
!2957 = !DILocalVariable(name: "x", scope: !2951, file: !1, line: 2042, type: !557)
!2958 = !DILocation(line: 2042, column: 7, scope: !2951)
!2959 = !DILocation(line: 2044, column: 24, scope: !2951)
!2960 = !DILocation(line: 2044, column: 32, scope: !2951)
!2961 = !DILocation(line: 2044, column: 34, scope: !2951)
!2962 = !DILocation(line: 2044, column: 41, scope: !2951)
!2963 = !DILocation(line: 2044, column: 51, scope: !2951)
!2964 = !DILocation(line: 2044, column: 7, scope: !2951)
!2965 = !DILocation(line: 2044, column: 6, scope: !2951)
!2966 = !DILocation(line: 2045, column: 9, scope: !2967)
!2967 = distinct !DILexicalBlock(scope: !2951, file: !1, line: 2045, column: 9)
!2968 = !DILocation(line: 2045, column: 11, scope: !2967)
!2969 = !DILocation(line: 2045, column: 9, scope: !2951)
!2970 = !DILocation(line: 2046, column: 7, scope: !2967)
!2971 = !DILocation(line: 2047, column: 34, scope: !2951)
!2972 = !DILocation(line: 2047, column: 13, scope: !2951)
!2973 = !DILocation(line: 2047, column: 12, scope: !2951)
!2974 = !DILocation(line: 2048, column: 11, scope: !2975)
!2975 = distinct !DILexicalBlock(scope: !2951, file: !1, line: 2048, column: 5)
!2976 = !DILocation(line: 2048, column: 10, scope: !2975)
!2977 = !DILocation(line: 2048, column: 15, scope: !2978)
!2978 = distinct !DILexicalBlock(scope: !2975, file: !1, line: 2048, column: 5)
!2979 = !DILocation(line: 2048, column: 29, scope: !2978)
!2980 = !DILocation(line: 2048, column: 36, scope: !2978)
!2981 = !DILocation(line: 2048, column: 17, scope: !2978)
!2982 = !DILocation(line: 2048, column: 5, scope: !2975)
!2983 = !DILocation(line: 2050, column: 28, scope: !2984)
!2984 = distinct !DILexicalBlock(scope: !2978, file: !1, line: 2049, column: 5)
!2985 = !DILocation(line: 2050, column: 34, scope: !2984)
!2986 = !DILocation(line: 2050, column: 36, scope: !2984)
!2987 = !DILocation(line: 2050, column: 44, scope: !2984)
!2988 = !DILocation(line: 2050, column: 43, scope: !2984)
!2989 = !DILocation(line: 2050, column: 7, scope: !2984)
!2990 = !DILocation(line: 2051, column: 12, scope: !2991)
!2991 = distinct !DILexicalBlock(scope: !2984, file: !1, line: 2051, column: 11)
!2992 = !DILocation(line: 2051, column: 20, scope: !2991)
!2993 = !DILocation(line: 2051, column: 34, scope: !2991)
!2994 = !DILocation(line: 2051, column: 11, scope: !2984)
!2995 = !DILocation(line: 2053, column: 21, scope: !2996)
!2996 = distinct !DILexicalBlock(scope: !2997, file: !1, line: 2053, column: 15)
!2997 = distinct !DILexicalBlock(scope: !2991, file: !1, line: 2052, column: 9)
!2998 = !DILocation(line: 2053, column: 15, scope: !2996)
!2999 = !DILocation(line: 2053, column: 28, scope: !2996)
!3000 = !DILocation(line: 2053, column: 27, scope: !2996)
!3001 = !DILocation(line: 2053, column: 25, scope: !2996)
!3002 = !DILocation(line: 2053, column: 15, scope: !2997)
!3003 = !DILocation(line: 2054, column: 36, scope: !2996)
!3004 = !DILocation(line: 2054, column: 21, scope: !2996)
!3005 = !DILocation(line: 2054, column: 14, scope: !2996)
!3006 = !DILocation(line: 2054, column: 20, scope: !2996)
!3007 = !DILocation(line: 2054, column: 13, scope: !2996)
!3008 = !DILocation(line: 2055, column: 21, scope: !3009)
!3009 = distinct !DILexicalBlock(scope: !2997, file: !1, line: 2055, column: 15)
!3010 = !DILocation(line: 2055, column: 15, scope: !3009)
!3011 = !DILocation(line: 2055, column: 28, scope: !3009)
!3012 = !DILocation(line: 2055, column: 27, scope: !3009)
!3013 = !DILocation(line: 2055, column: 25, scope: !3009)
!3014 = !DILocation(line: 2055, column: 15, scope: !2997)
!3015 = !DILocation(line: 2056, column: 36, scope: !3009)
!3016 = !DILocation(line: 2056, column: 21, scope: !3009)
!3017 = !DILocation(line: 2056, column: 14, scope: !3009)
!3018 = !DILocation(line: 2056, column: 20, scope: !3009)
!3019 = !DILocation(line: 2056, column: 13, scope: !3009)
!3020 = !DILocation(line: 2057, column: 9, scope: !2997)
!3021 = !DILocation(line: 2058, column: 12, scope: !3022)
!3022 = distinct !DILexicalBlock(scope: !2984, file: !1, line: 2058, column: 11)
!3023 = !DILocation(line: 2058, column: 20, scope: !3022)
!3024 = !DILocation(line: 2058, column: 36, scope: !3022)
!3025 = !DILocation(line: 2058, column: 11, scope: !2984)
!3026 = !DILocation(line: 2060, column: 21, scope: !3027)
!3027 = distinct !DILexicalBlock(scope: !3028, file: !1, line: 2060, column: 15)
!3028 = distinct !DILexicalBlock(scope: !3022, file: !1, line: 2059, column: 9)
!3029 = !DILocation(line: 2060, column: 15, scope: !3027)
!3030 = !DILocation(line: 2060, column: 30, scope: !3027)
!3031 = !DILocation(line: 2060, column: 29, scope: !3027)
!3032 = !DILocation(line: 2060, column: 27, scope: !3027)
!3033 = !DILocation(line: 2060, column: 15, scope: !3028)
!3034 = !DILocation(line: 2061, column: 36, scope: !3027)
!3035 = !DILocation(line: 2061, column: 21, scope: !3027)
!3036 = !DILocation(line: 2061, column: 14, scope: !3027)
!3037 = !DILocation(line: 2061, column: 20, scope: !3027)
!3038 = !DILocation(line: 2061, column: 13, scope: !3027)
!3039 = !DILocation(line: 2062, column: 21, scope: !3040)
!3040 = distinct !DILexicalBlock(scope: !3028, file: !1, line: 2062, column: 15)
!3041 = !DILocation(line: 2062, column: 15, scope: !3040)
!3042 = !DILocation(line: 2062, column: 30, scope: !3040)
!3043 = !DILocation(line: 2062, column: 29, scope: !3040)
!3044 = !DILocation(line: 2062, column: 27, scope: !3040)
!3045 = !DILocation(line: 2062, column: 15, scope: !3028)
!3046 = !DILocation(line: 2063, column: 36, scope: !3040)
!3047 = !DILocation(line: 2063, column: 21, scope: !3040)
!3048 = !DILocation(line: 2063, column: 14, scope: !3040)
!3049 = !DILocation(line: 2063, column: 20, scope: !3040)
!3050 = !DILocation(line: 2063, column: 13, scope: !3040)
!3051 = !DILocation(line: 2064, column: 9, scope: !3028)
!3052 = !DILocation(line: 2065, column: 12, scope: !3053)
!3053 = distinct !DILexicalBlock(scope: !2984, file: !1, line: 2065, column: 11)
!3054 = !DILocation(line: 2065, column: 20, scope: !3053)
!3055 = !DILocation(line: 2065, column: 35, scope: !3053)
!3056 = !DILocation(line: 2065, column: 11, scope: !2984)
!3057 = !DILocation(line: 2067, column: 21, scope: !3058)
!3058 = distinct !DILexicalBlock(scope: !3059, file: !1, line: 2067, column: 15)
!3059 = distinct !DILexicalBlock(scope: !3053, file: !1, line: 2066, column: 9)
!3060 = !DILocation(line: 2067, column: 15, scope: !3058)
!3061 = !DILocation(line: 2067, column: 29, scope: !3058)
!3062 = !DILocation(line: 2067, column: 28, scope: !3058)
!3063 = !DILocation(line: 2067, column: 26, scope: !3058)
!3064 = !DILocation(line: 2067, column: 15, scope: !3059)
!3065 = !DILocation(line: 2068, column: 36, scope: !3058)
!3066 = !DILocation(line: 2068, column: 21, scope: !3058)
!3067 = !DILocation(line: 2068, column: 14, scope: !3058)
!3068 = !DILocation(line: 2068, column: 20, scope: !3058)
!3069 = !DILocation(line: 2068, column: 13, scope: !3058)
!3070 = !DILocation(line: 2069, column: 21, scope: !3071)
!3071 = distinct !DILexicalBlock(scope: !3059, file: !1, line: 2069, column: 15)
!3072 = !DILocation(line: 2069, column: 15, scope: !3071)
!3073 = !DILocation(line: 2069, column: 29, scope: !3071)
!3074 = !DILocation(line: 2069, column: 28, scope: !3071)
!3075 = !DILocation(line: 2069, column: 26, scope: !3071)
!3076 = !DILocation(line: 2069, column: 15, scope: !3059)
!3077 = !DILocation(line: 2070, column: 36, scope: !3071)
!3078 = !DILocation(line: 2070, column: 21, scope: !3071)
!3079 = !DILocation(line: 2070, column: 14, scope: !3071)
!3080 = !DILocation(line: 2070, column: 20, scope: !3071)
!3081 = !DILocation(line: 2070, column: 13, scope: !3071)
!3082 = !DILocation(line: 2071, column: 9, scope: !3059)
!3083 = !DILocation(line: 2072, column: 13, scope: !3084)
!3084 = distinct !DILexicalBlock(scope: !2984, file: !1, line: 2072, column: 11)
!3085 = !DILocation(line: 2072, column: 21, scope: !3084)
!3086 = !DILocation(line: 2072, column: 39, scope: !3084)
!3087 = !DILocation(line: 2072, column: 45, scope: !3084)
!3088 = !DILocation(line: 2073, column: 12, scope: !3084)
!3089 = !DILocation(line: 2073, column: 19, scope: !3084)
!3090 = !DILocation(line: 2073, column: 25, scope: !3084)
!3091 = !DILocation(line: 2072, column: 11, scope: !2984)
!3092 = !DILocation(line: 2075, column: 21, scope: !3093)
!3093 = distinct !DILexicalBlock(scope: !3094, file: !1, line: 2075, column: 15)
!3094 = distinct !DILexicalBlock(scope: !3084, file: !1, line: 2074, column: 9)
!3095 = !DILocation(line: 2075, column: 15, scope: !3093)
!3096 = !DILocation(line: 2075, column: 32, scope: !3093)
!3097 = !DILocation(line: 2075, column: 31, scope: !3093)
!3098 = !DILocation(line: 2075, column: 29, scope: !3093)
!3099 = !DILocation(line: 2075, column: 15, scope: !3094)
!3100 = !DILocation(line: 2076, column: 36, scope: !3093)
!3101 = !DILocation(line: 2076, column: 21, scope: !3093)
!3102 = !DILocation(line: 2076, column: 14, scope: !3093)
!3103 = !DILocation(line: 2076, column: 20, scope: !3093)
!3104 = !DILocation(line: 2076, column: 13, scope: !3093)
!3105 = !DILocation(line: 2077, column: 21, scope: !3106)
!3106 = distinct !DILexicalBlock(scope: !3094, file: !1, line: 2077, column: 15)
!3107 = !DILocation(line: 2077, column: 15, scope: !3106)
!3108 = !DILocation(line: 2077, column: 32, scope: !3106)
!3109 = !DILocation(line: 2077, column: 31, scope: !3106)
!3110 = !DILocation(line: 2077, column: 29, scope: !3106)
!3111 = !DILocation(line: 2077, column: 15, scope: !3094)
!3112 = !DILocation(line: 2078, column: 36, scope: !3106)
!3113 = !DILocation(line: 2078, column: 21, scope: !3106)
!3114 = !DILocation(line: 2078, column: 14, scope: !3106)
!3115 = !DILocation(line: 2078, column: 20, scope: !3106)
!3116 = !DILocation(line: 2078, column: 13, scope: !3106)
!3117 = !DILocation(line: 2079, column: 9, scope: !3094)
!3118 = !DILocation(line: 2080, column: 13, scope: !3119)
!3119 = distinct !DILexicalBlock(scope: !2984, file: !1, line: 2080, column: 11)
!3120 = !DILocation(line: 2080, column: 21, scope: !3119)
!3121 = !DILocation(line: 2080, column: 37, scope: !3119)
!3122 = !DILocation(line: 2080, column: 43, scope: !3119)
!3123 = !DILocation(line: 2081, column: 12, scope: !3119)
!3124 = !DILocation(line: 2081, column: 19, scope: !3119)
!3125 = !DILocation(line: 2081, column: 30, scope: !3119)
!3126 = !DILocation(line: 2080, column: 11, scope: !2984)
!3127 = !DILocation(line: 2083, column: 30, scope: !3128)
!3128 = distinct !DILexicalBlock(scope: !3129, file: !1, line: 2083, column: 15)
!3129 = distinct !DILexicalBlock(scope: !3119, file: !1, line: 2082, column: 9)
!3130 = !DILocation(line: 2083, column: 15, scope: !3128)
!3131 = !DILocation(line: 2083, column: 39, scope: !3128)
!3132 = !DILocation(line: 2083, column: 38, scope: !3128)
!3133 = !DILocation(line: 2083, column: 36, scope: !3128)
!3134 = !DILocation(line: 2083, column: 15, scope: !3129)
!3135 = !DILocation(line: 2084, column: 36, scope: !3128)
!3136 = !DILocation(line: 2084, column: 21, scope: !3128)
!3137 = !DILocation(line: 2084, column: 14, scope: !3128)
!3138 = !DILocation(line: 2084, column: 20, scope: !3128)
!3139 = !DILocation(line: 2084, column: 13, scope: !3128)
!3140 = !DILocation(line: 2085, column: 30, scope: !3141)
!3141 = distinct !DILexicalBlock(scope: !3129, file: !1, line: 2085, column: 15)
!3142 = !DILocation(line: 2085, column: 15, scope: !3141)
!3143 = !DILocation(line: 2085, column: 39, scope: !3141)
!3144 = !DILocation(line: 2085, column: 38, scope: !3141)
!3145 = !DILocation(line: 2085, column: 36, scope: !3141)
!3146 = !DILocation(line: 2085, column: 15, scope: !3129)
!3147 = !DILocation(line: 2086, column: 36, scope: !3141)
!3148 = !DILocation(line: 2086, column: 21, scope: !3141)
!3149 = !DILocation(line: 2086, column: 14, scope: !3141)
!3150 = !DILocation(line: 2086, column: 20, scope: !3141)
!3151 = !DILocation(line: 2086, column: 13, scope: !3141)
!3152 = !DILocation(line: 2087, column: 9, scope: !3129)
!3153 = !DILocation(line: 2088, column: 8, scope: !2984)
!3154 = !DILocation(line: 2089, column: 5, scope: !2984)
!3155 = !DILocation(line: 2048, column: 46, scope: !2978)
!3156 = !DILocation(line: 2048, column: 5, scope: !2978)
!3157 = distinct !{!3157, !2982, !3158}
!3158 = !DILocation(line: 2089, column: 5, scope: !2975)
!3159 = !DILocation(line: 2090, column: 3, scope: !2951)
!3160 = !DILocation(line: 2033, column: 41, scope: !2945)
!3161 = !DILocation(line: 2033, column: 3, scope: !2945)
!3162 = distinct !{!3162, !2949, !3163}
!3163 = !DILocation(line: 2090, column: 3, scope: !2942)
!3164 = !DILocation(line: 2091, column: 10, scope: !2908)
!3165 = !DILocation(line: 2091, column: 25, scope: !2908)
!3166 = !DILocation(line: 2091, column: 32, scope: !2908)
!3167 = !DILocation(line: 2091, column: 12, scope: !2908)
!3168 = !DILocation(line: 2091, column: 3, scope: !2908)
!3169 = distinct !DISubprogram(name: "GetImageKurtosis", scope: !1, file: !1, line: 1193, type: !3170, scopeLine: 1195, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !826)
!3170 = !DISubroutineType(types: !3171)
!3171 = !{!509, !813, !2911, !2911, !825}
!3172 = !DILocalVariable(name: "image", arg: 1, scope: !3169, file: !1, line: 1193, type: !813)
!3173 = !DILocation(line: 1193, column: 62, scope: !3169)
!3174 = !DILocalVariable(name: "kurtosis", arg: 2, scope: !3169, file: !1, line: 1194, type: !2911)
!3175 = !DILocation(line: 1194, column: 11, scope: !3169)
!3176 = !DILocalVariable(name: "skewness", arg: 3, scope: !3169, file: !1, line: 1194, type: !2911)
!3177 = !DILocation(line: 1194, column: 28, scope: !3169)
!3178 = !DILocalVariable(name: "exception", arg: 4, scope: !3169, file: !1, line: 1194, type: !825)
!3179 = !DILocation(line: 1194, column: 52, scope: !3169)
!3180 = !DILocalVariable(name: "status", scope: !3169, file: !1, line: 1197, type: !509)
!3181 = !DILocation(line: 1197, column: 5, scope: !3169)
!3182 = !DILocation(line: 1199, column: 34, scope: !3169)
!3183 = !DILocation(line: 1199, column: 58, scope: !3169)
!3184 = !DILocation(line: 1199, column: 67, scope: !3169)
!3185 = !DILocation(line: 1200, column: 5, scope: !3169)
!3186 = !DILocation(line: 1199, column: 10, scope: !3169)
!3187 = !DILocation(line: 1199, column: 9, scope: !3169)
!3188 = !DILocation(line: 1201, column: 10, scope: !3169)
!3189 = !DILocation(line: 1201, column: 3, scope: !3169)
!3190 = distinct !DISubprogram(name: "GetImageChannelKurtosis", scope: !1, file: !1, line: 1204, type: !2909, scopeLine: 1207, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !826)
!3191 = !DILocalVariable(name: "image", arg: 1, scope: !3190, file: !1, line: 1204, type: !813)
!3192 = !DILocation(line: 1204, column: 69, scope: !3190)
!3193 = !DILocalVariable(name: "channel", arg: 2, scope: !3190, file: !1, line: 1205, type: !848)
!3194 = !DILocation(line: 1205, column: 21, scope: !3190)
!3195 = !DILocalVariable(name: "kurtosis", arg: 3, scope: !3190, file: !1, line: 1205, type: !2911)
!3196 = !DILocation(line: 1205, column: 37, scope: !3190)
!3197 = !DILocalVariable(name: "skewness", arg: 4, scope: !3190, file: !1, line: 1205, type: !2911)
!3198 = !DILocation(line: 1205, column: 54, scope: !3190)
!3199 = !DILocalVariable(name: "exception", arg: 5, scope: !3190, file: !1, line: 1206, type: !825)
!3200 = !DILocation(line: 1206, column: 18, scope: !3190)
!3201 = !DILocalVariable(name: "area", scope: !3190, file: !1, line: 1209, type: !530)
!3202 = !DILocation(line: 1209, column: 5, scope: !3190)
!3203 = !DILocalVariable(name: "mean", scope: !3190, file: !1, line: 1210, type: !530)
!3204 = !DILocation(line: 1210, column: 5, scope: !3190)
!3205 = !DILocalVariable(name: "standard_deviation", scope: !3190, file: !1, line: 1211, type: !530)
!3206 = !DILocation(line: 1211, column: 5, scope: !3190)
!3207 = !DILocalVariable(name: "sum_squares", scope: !3190, file: !1, line: 1212, type: !530)
!3208 = !DILocation(line: 1212, column: 5, scope: !3190)
!3209 = !DILocalVariable(name: "sum_cubes", scope: !3190, file: !1, line: 1213, type: !530)
!3210 = !DILocation(line: 1213, column: 5, scope: !3190)
!3211 = !DILocalVariable(name: "sum_fourth_power", scope: !3190, file: !1, line: 1214, type: !530)
!3212 = !DILocation(line: 1214, column: 5, scope: !3190)
!3213 = !DILocalVariable(name: "y", scope: !3190, file: !1, line: 1217, type: !557)
!3214 = !DILocation(line: 1217, column: 5, scope: !3190)
!3215 = !DILocation(line: 1221, column: 7, scope: !3216)
!3216 = distinct !DILexicalBlock(scope: !3190, file: !1, line: 1221, column: 7)
!3217 = !DILocation(line: 1221, column: 14, scope: !3216)
!3218 = !DILocation(line: 1221, column: 20, scope: !3216)
!3219 = !DILocation(line: 1221, column: 7, scope: !3190)
!3220 = !DILocation(line: 1222, column: 61, scope: !3216)
!3221 = !DILocation(line: 1222, column: 68, scope: !3216)
!3222 = !DILocation(line: 1222, column: 12, scope: !3216)
!3223 = !DILocation(line: 1222, column: 5, scope: !3216)
!3224 = !DILocation(line: 1223, column: 4, scope: !3190)
!3225 = !DILocation(line: 1223, column: 12, scope: !3190)
!3226 = !DILocation(line: 1224, column: 4, scope: !3190)
!3227 = !DILocation(line: 1224, column: 12, scope: !3190)
!3228 = !DILocation(line: 1225, column: 7, scope: !3190)
!3229 = !DILocation(line: 1226, column: 7, scope: !3190)
!3230 = !DILocation(line: 1227, column: 21, scope: !3190)
!3231 = !DILocation(line: 1228, column: 14, scope: !3190)
!3232 = !DILocation(line: 1229, column: 12, scope: !3190)
!3233 = !DILocation(line: 1230, column: 19, scope: !3190)
!3234 = !DILocation(line: 1231, column: 9, scope: !3235)
!3235 = distinct !DILexicalBlock(scope: !3190, file: !1, line: 1231, column: 3)
!3236 = !DILocation(line: 1231, column: 8, scope: !3235)
!3237 = !DILocation(line: 1231, column: 13, scope: !3238)
!3238 = distinct !DILexicalBlock(scope: !3235, file: !1, line: 1231, column: 3)
!3239 = !DILocation(line: 1231, column: 27, scope: !3238)
!3240 = !DILocation(line: 1231, column: 34, scope: !3238)
!3241 = !DILocation(line: 1231, column: 15, scope: !3238)
!3242 = !DILocation(line: 1231, column: 3, scope: !3235)
!3243 = !DILocalVariable(name: "indexes", scope: !3244, file: !1, line: 1234, type: !2952)
!3244 = distinct !DILexicalBlock(scope: !3238, file: !1, line: 1232, column: 3)
!3245 = !DILocation(line: 1234, column: 17, scope: !3244)
!3246 = !DILocalVariable(name: "p", scope: !3244, file: !1, line: 1237, type: !2955)
!3247 = !DILocation(line: 1237, column: 17, scope: !3244)
!3248 = !DILocalVariable(name: "x", scope: !3244, file: !1, line: 1240, type: !557)
!3249 = !DILocation(line: 1240, column: 7, scope: !3244)
!3250 = !DILocation(line: 1242, column: 24, scope: !3244)
!3251 = !DILocation(line: 1242, column: 32, scope: !3244)
!3252 = !DILocation(line: 1242, column: 34, scope: !3244)
!3253 = !DILocation(line: 1242, column: 41, scope: !3244)
!3254 = !DILocation(line: 1242, column: 51, scope: !3244)
!3255 = !DILocation(line: 1242, column: 7, scope: !3244)
!3256 = !DILocation(line: 1242, column: 6, scope: !3244)
!3257 = !DILocation(line: 1243, column: 9, scope: !3258)
!3258 = distinct !DILexicalBlock(scope: !3244, file: !1, line: 1243, column: 9)
!3259 = !DILocation(line: 1243, column: 11, scope: !3258)
!3260 = !DILocation(line: 1243, column: 9, scope: !3244)
!3261 = !DILocation(line: 1244, column: 7, scope: !3258)
!3262 = !DILocation(line: 1245, column: 34, scope: !3244)
!3263 = !DILocation(line: 1245, column: 13, scope: !3244)
!3264 = !DILocation(line: 1245, column: 12, scope: !3244)
!3265 = !DILocation(line: 1246, column: 11, scope: !3266)
!3266 = distinct !DILexicalBlock(scope: !3244, file: !1, line: 1246, column: 5)
!3267 = !DILocation(line: 1246, column: 10, scope: !3266)
!3268 = !DILocation(line: 1246, column: 15, scope: !3269)
!3269 = distinct !DILexicalBlock(scope: !3266, file: !1, line: 1246, column: 5)
!3270 = !DILocation(line: 1246, column: 29, scope: !3269)
!3271 = !DILocation(line: 1246, column: 36, scope: !3269)
!3272 = !DILocation(line: 1246, column: 17, scope: !3269)
!3273 = !DILocation(line: 1246, column: 5, scope: !3266)
!3274 = !DILocation(line: 1248, column: 12, scope: !3275)
!3275 = distinct !DILexicalBlock(scope: !3276, file: !1, line: 1248, column: 11)
!3276 = distinct !DILexicalBlock(scope: !3269, file: !1, line: 1247, column: 5)
!3277 = !DILocation(line: 1248, column: 20, scope: !3275)
!3278 = !DILocation(line: 1248, column: 34, scope: !3275)
!3279 = !DILocation(line: 1248, column: 11, scope: !3276)
!3280 = !DILocation(line: 1250, column: 17, scope: !3281)
!3281 = distinct !DILexicalBlock(scope: !3275, file: !1, line: 1249, column: 9)
!3282 = !DILocation(line: 1250, column: 15, scope: !3281)
!3283 = !DILocation(line: 1251, column: 33, scope: !3281)
!3284 = !DILocation(line: 1251, column: 24, scope: !3281)
!3285 = !DILocation(line: 1251, column: 48, scope: !3281)
!3286 = !DILocation(line: 1251, column: 47, scope: !3281)
!3287 = !DILocation(line: 1251, column: 22, scope: !3281)
!3288 = !DILocation(line: 1252, column: 31, scope: !3281)
!3289 = !DILocation(line: 1252, column: 22, scope: !3281)
!3290 = !DILocation(line: 1252, column: 46, scope: !3281)
!3291 = !DILocation(line: 1252, column: 45, scope: !3281)
!3292 = !DILocation(line: 1252, column: 61, scope: !3281)
!3293 = !DILocation(line: 1252, column: 60, scope: !3281)
!3294 = !DILocation(line: 1252, column: 20, scope: !3281)
!3295 = !DILocation(line: 1253, column: 38, scope: !3281)
!3296 = !DILocation(line: 1253, column: 29, scope: !3281)
!3297 = !DILocation(line: 1253, column: 53, scope: !3281)
!3298 = !DILocation(line: 1253, column: 52, scope: !3281)
!3299 = !DILocation(line: 1254, column: 13, scope: !3281)
!3300 = !DILocation(line: 1253, column: 67, scope: !3281)
!3301 = !DILocation(line: 1254, column: 28, scope: !3281)
!3302 = !DILocation(line: 1254, column: 27, scope: !3281)
!3303 = !DILocation(line: 1253, column: 27, scope: !3281)
!3304 = !DILocation(line: 1255, column: 15, scope: !3281)
!3305 = !DILocation(line: 1256, column: 9, scope: !3281)
!3306 = !DILocation(line: 1257, column: 12, scope: !3307)
!3307 = distinct !DILexicalBlock(scope: !3276, file: !1, line: 1257, column: 11)
!3308 = !DILocation(line: 1257, column: 20, scope: !3307)
!3309 = !DILocation(line: 1257, column: 36, scope: !3307)
!3310 = !DILocation(line: 1257, column: 11, scope: !3276)
!3311 = !DILocation(line: 1259, column: 17, scope: !3312)
!3312 = distinct !DILexicalBlock(scope: !3307, file: !1, line: 1258, column: 9)
!3313 = !DILocation(line: 1259, column: 15, scope: !3312)
!3314 = !DILocation(line: 1260, column: 33, scope: !3312)
!3315 = !DILocation(line: 1260, column: 24, scope: !3312)
!3316 = !DILocation(line: 1260, column: 50, scope: !3312)
!3317 = !DILocation(line: 1260, column: 49, scope: !3312)
!3318 = !DILocation(line: 1260, column: 22, scope: !3312)
!3319 = !DILocation(line: 1261, column: 31, scope: !3312)
!3320 = !DILocation(line: 1261, column: 22, scope: !3312)
!3321 = !DILocation(line: 1261, column: 48, scope: !3312)
!3322 = !DILocation(line: 1261, column: 47, scope: !3312)
!3323 = !DILocation(line: 1262, column: 13, scope: !3312)
!3324 = !DILocation(line: 1261, column: 64, scope: !3312)
!3325 = !DILocation(line: 1261, column: 20, scope: !3312)
!3326 = !DILocation(line: 1263, column: 38, scope: !3312)
!3327 = !DILocation(line: 1263, column: 29, scope: !3312)
!3328 = !DILocation(line: 1263, column: 55, scope: !3312)
!3329 = !DILocation(line: 1263, column: 54, scope: !3312)
!3330 = !DILocation(line: 1264, column: 13, scope: !3312)
!3331 = !DILocation(line: 1263, column: 71, scope: !3312)
!3332 = !DILocation(line: 1264, column: 30, scope: !3312)
!3333 = !DILocation(line: 1264, column: 29, scope: !3312)
!3334 = !DILocation(line: 1263, column: 27, scope: !3312)
!3335 = !DILocation(line: 1265, column: 15, scope: !3312)
!3336 = !DILocation(line: 1266, column: 9, scope: !3312)
!3337 = !DILocation(line: 1267, column: 12, scope: !3338)
!3338 = distinct !DILexicalBlock(scope: !3276, file: !1, line: 1267, column: 11)
!3339 = !DILocation(line: 1267, column: 20, scope: !3338)
!3340 = !DILocation(line: 1267, column: 35, scope: !3338)
!3341 = !DILocation(line: 1267, column: 11, scope: !3276)
!3342 = !DILocation(line: 1269, column: 17, scope: !3343)
!3343 = distinct !DILexicalBlock(scope: !3338, file: !1, line: 1268, column: 9)
!3344 = !DILocation(line: 1269, column: 15, scope: !3343)
!3345 = !DILocation(line: 1270, column: 33, scope: !3343)
!3346 = !DILocation(line: 1270, column: 24, scope: !3343)
!3347 = !DILocation(line: 1270, column: 49, scope: !3343)
!3348 = !DILocation(line: 1270, column: 48, scope: !3343)
!3349 = !DILocation(line: 1270, column: 22, scope: !3343)
!3350 = !DILocation(line: 1271, column: 31, scope: !3343)
!3351 = !DILocation(line: 1271, column: 22, scope: !3343)
!3352 = !DILocation(line: 1271, column: 47, scope: !3343)
!3353 = !DILocation(line: 1271, column: 46, scope: !3343)
!3354 = !DILocation(line: 1271, column: 63, scope: !3343)
!3355 = !DILocation(line: 1271, column: 62, scope: !3343)
!3356 = !DILocation(line: 1271, column: 20, scope: !3343)
!3357 = !DILocation(line: 1272, column: 38, scope: !3343)
!3358 = !DILocation(line: 1272, column: 29, scope: !3343)
!3359 = !DILocation(line: 1272, column: 54, scope: !3343)
!3360 = !DILocation(line: 1272, column: 53, scope: !3343)
!3361 = !DILocation(line: 1273, column: 13, scope: !3343)
!3362 = !DILocation(line: 1272, column: 69, scope: !3343)
!3363 = !DILocation(line: 1273, column: 29, scope: !3343)
!3364 = !DILocation(line: 1273, column: 28, scope: !3343)
!3365 = !DILocation(line: 1272, column: 27, scope: !3343)
!3366 = !DILocation(line: 1274, column: 15, scope: !3343)
!3367 = !DILocation(line: 1275, column: 9, scope: !3343)
!3368 = !DILocation(line: 1276, column: 12, scope: !3369)
!3369 = distinct !DILexicalBlock(scope: !3276, file: !1, line: 1276, column: 11)
!3370 = !DILocation(line: 1276, column: 20, scope: !3369)
!3371 = !DILocation(line: 1276, column: 38, scope: !3369)
!3372 = !DILocation(line: 1276, column: 11, scope: !3276)
!3373 = !DILocation(line: 1278, column: 17, scope: !3374)
!3374 = distinct !DILexicalBlock(scope: !3369, file: !1, line: 1277, column: 9)
!3375 = !DILocation(line: 1278, column: 15, scope: !3374)
!3376 = !DILocation(line: 1279, column: 33, scope: !3374)
!3377 = !DILocation(line: 1279, column: 24, scope: !3374)
!3378 = !DILocation(line: 1279, column: 52, scope: !3374)
!3379 = !DILocation(line: 1279, column: 51, scope: !3374)
!3380 = !DILocation(line: 1279, column: 22, scope: !3374)
!3381 = !DILocation(line: 1280, column: 31, scope: !3374)
!3382 = !DILocation(line: 1280, column: 22, scope: !3374)
!3383 = !DILocation(line: 1280, column: 50, scope: !3374)
!3384 = !DILocation(line: 1280, column: 49, scope: !3374)
!3385 = !DILocation(line: 1281, column: 13, scope: !3374)
!3386 = !DILocation(line: 1280, column: 68, scope: !3374)
!3387 = !DILocation(line: 1280, column: 20, scope: !3374)
!3388 = !DILocation(line: 1282, column: 38, scope: !3374)
!3389 = !DILocation(line: 1282, column: 29, scope: !3374)
!3390 = !DILocation(line: 1282, column: 57, scope: !3374)
!3391 = !DILocation(line: 1282, column: 56, scope: !3374)
!3392 = !DILocation(line: 1283, column: 13, scope: !3374)
!3393 = !DILocation(line: 1282, column: 75, scope: !3374)
!3394 = !DILocation(line: 1283, column: 32, scope: !3374)
!3395 = !DILocation(line: 1283, column: 31, scope: !3374)
!3396 = !DILocation(line: 1282, column: 27, scope: !3374)
!3397 = !DILocation(line: 1284, column: 15, scope: !3374)
!3398 = !DILocation(line: 1285, column: 9, scope: !3374)
!3399 = !DILocation(line: 1286, column: 13, scope: !3400)
!3400 = distinct !DILexicalBlock(scope: !3276, file: !1, line: 1286, column: 11)
!3401 = !DILocation(line: 1286, column: 21, scope: !3400)
!3402 = !DILocation(line: 1286, column: 37, scope: !3400)
!3403 = !DILocation(line: 1286, column: 43, scope: !3400)
!3404 = !DILocation(line: 1287, column: 12, scope: !3400)
!3405 = !DILocation(line: 1287, column: 19, scope: !3400)
!3406 = !DILocation(line: 1287, column: 30, scope: !3400)
!3407 = !DILocation(line: 1286, column: 11, scope: !3276)
!3408 = !DILocation(line: 1289, column: 17, scope: !3409)
!3409 = distinct !DILexicalBlock(scope: !3400, file: !1, line: 1288, column: 9)
!3410 = !DILocation(line: 1289, column: 15, scope: !3409)
!3411 = !DILocation(line: 1290, column: 33, scope: !3409)
!3412 = !DILocation(line: 1290, column: 24, scope: !3409)
!3413 = !DILocation(line: 1291, column: 13, scope: !3409)
!3414 = !DILocation(line: 1290, column: 57, scope: !3409)
!3415 = !DILocation(line: 1290, column: 22, scope: !3409)
!3416 = !DILocation(line: 1292, column: 31, scope: !3409)
!3417 = !DILocation(line: 1292, column: 22, scope: !3409)
!3418 = !DILocation(line: 1292, column: 56, scope: !3409)
!3419 = !DILocation(line: 1292, column: 55, scope: !3409)
!3420 = !DILocation(line: 1293, column: 13, scope: !3409)
!3421 = !DILocation(line: 1292, column: 80, scope: !3409)
!3422 = !DILocation(line: 1292, column: 20, scope: !3409)
!3423 = !DILocation(line: 1294, column: 38, scope: !3409)
!3424 = !DILocation(line: 1294, column: 29, scope: !3409)
!3425 = !DILocation(line: 1295, column: 13, scope: !3409)
!3426 = !DILocation(line: 1294, column: 62, scope: !3409)
!3427 = !DILocation(line: 1295, column: 38, scope: !3409)
!3428 = !DILocation(line: 1295, column: 37, scope: !3409)
!3429 = !DILocation(line: 1296, column: 13, scope: !3409)
!3430 = !DILocation(line: 1295, column: 62, scope: !3409)
!3431 = !DILocation(line: 1294, column: 27, scope: !3409)
!3432 = !DILocation(line: 1297, column: 15, scope: !3409)
!3433 = !DILocation(line: 1298, column: 9, scope: !3409)
!3434 = !DILocation(line: 1299, column: 8, scope: !3276)
!3435 = !DILocation(line: 1300, column: 5, scope: !3276)
!3436 = !DILocation(line: 1246, column: 46, scope: !3269)
!3437 = !DILocation(line: 1246, column: 5, scope: !3269)
!3438 = distinct !{!3438, !3273, !3439}
!3439 = !DILocation(line: 1300, column: 5, scope: !3266)
!3440 = !DILocation(line: 1301, column: 3, scope: !3244)
!3441 = !DILocation(line: 1231, column: 41, scope: !3238)
!3442 = !DILocation(line: 1231, column: 3, scope: !3238)
!3443 = distinct !{!3443, !3242, !3444}
!3444 = !DILocation(line: 1301, column: 3, scope: !3235)
!3445 = !DILocation(line: 1302, column: 7, scope: !3446)
!3446 = distinct !DILexicalBlock(scope: !3190, file: !1, line: 1302, column: 7)
!3447 = !DILocation(line: 1302, column: 21, scope: !3446)
!3448 = !DILocation(line: 1302, column: 28, scope: !3446)
!3449 = !DILocation(line: 1302, column: 9, scope: !3446)
!3450 = !DILocation(line: 1302, column: 7, scope: !3190)
!3451 = !DILocation(line: 1303, column: 5, scope: !3446)
!3452 = !DILocation(line: 1304, column: 7, scope: !3453)
!3453 = distinct !DILexicalBlock(scope: !3190, file: !1, line: 1304, column: 7)
!3454 = !DILocation(line: 1304, column: 12, scope: !3453)
!3455 = !DILocation(line: 1304, column: 7, scope: !3190)
!3456 = !DILocation(line: 1306, column: 13, scope: !3457)
!3457 = distinct !DILexicalBlock(scope: !3453, file: !1, line: 1305, column: 5)
!3458 = !DILocation(line: 1306, column: 11, scope: !3457)
!3459 = !DILocation(line: 1307, column: 20, scope: !3457)
!3460 = !DILocation(line: 1307, column: 18, scope: !3457)
!3461 = !DILocation(line: 1308, column: 18, scope: !3457)
!3462 = !DILocation(line: 1308, column: 16, scope: !3457)
!3463 = !DILocation(line: 1309, column: 25, scope: !3457)
!3464 = !DILocation(line: 1309, column: 23, scope: !3457)
!3465 = !DILocation(line: 1310, column: 5, scope: !3457)
!3466 = !DILocation(line: 1311, column: 27, scope: !3190)
!3467 = !DILocation(line: 1311, column: 40, scope: !3190)
!3468 = !DILocation(line: 1311, column: 45, scope: !3190)
!3469 = !DILocation(line: 1311, column: 44, scope: !3190)
!3470 = !DILocation(line: 1311, column: 38, scope: !3190)
!3471 = !DILocation(line: 1311, column: 22, scope: !3190)
!3472 = !DILocation(line: 1311, column: 21, scope: !3190)
!3473 = !DILocation(line: 1312, column: 7, scope: !3474)
!3474 = distinct !DILexicalBlock(scope: !3190, file: !1, line: 1312, column: 7)
!3475 = !DILocation(line: 1312, column: 26, scope: !3474)
!3476 = !DILocation(line: 1312, column: 7, scope: !3190)
!3477 = !DILocation(line: 1314, column: 17, scope: !3478)
!3478 = distinct !DILexicalBlock(scope: !3474, file: !1, line: 1313, column: 5)
!3479 = !DILocation(line: 1314, column: 38, scope: !3478)
!3480 = !DILocation(line: 1314, column: 37, scope: !3478)
!3481 = !DILocation(line: 1314, column: 43, scope: !3478)
!3482 = !DILocation(line: 1314, column: 42, scope: !3478)
!3483 = !DILocation(line: 1314, column: 33, scope: !3478)
!3484 = !DILocation(line: 1314, column: 57, scope: !3478)
!3485 = !DILocation(line: 1314, column: 56, scope: !3478)
!3486 = !DILocation(line: 1314, column: 62, scope: !3478)
!3487 = !DILocation(line: 1314, column: 61, scope: !3478)
!3488 = !DILocation(line: 1314, column: 67, scope: !3478)
!3489 = !DILocation(line: 1314, column: 66, scope: !3478)
!3490 = !DILocation(line: 1314, column: 52, scope: !3478)
!3491 = !DILocation(line: 1315, column: 13, scope: !3478)
!3492 = !DILocation(line: 1315, column: 12, scope: !3478)
!3493 = !DILocation(line: 1315, column: 18, scope: !3478)
!3494 = !DILocation(line: 1315, column: 17, scope: !3478)
!3495 = !DILocation(line: 1315, column: 23, scope: !3478)
!3496 = !DILocation(line: 1315, column: 22, scope: !3478)
!3497 = !DILocation(line: 1315, column: 28, scope: !3478)
!3498 = !DILocation(line: 1315, column: 27, scope: !3478)
!3499 = !DILocation(line: 1314, column: 78, scope: !3478)
!3500 = !DILocation(line: 1314, column: 8, scope: !3478)
!3501 = !DILocation(line: 1314, column: 16, scope: !3478)
!3502 = !DILocation(line: 1316, column: 18, scope: !3478)
!3503 = !DILocation(line: 1316, column: 37, scope: !3478)
!3504 = !DILocation(line: 1316, column: 36, scope: !3478)
!3505 = !DILocation(line: 1316, column: 56, scope: !3478)
!3506 = !DILocation(line: 1316, column: 55, scope: !3478)
!3507 = !DILocation(line: 1317, column: 9, scope: !3478)
!3508 = !DILocation(line: 1316, column: 74, scope: !3478)
!3509 = !DILocation(line: 1316, column: 8, scope: !3478)
!3510 = !DILocation(line: 1316, column: 16, scope: !3478)
!3511 = !DILocation(line: 1318, column: 8, scope: !3478)
!3512 = !DILocation(line: 1318, column: 16, scope: !3478)
!3513 = !DILocation(line: 1319, column: 17, scope: !3478)
!3514 = !DILocation(line: 1319, column: 31, scope: !3478)
!3515 = !DILocation(line: 1319, column: 30, scope: !3478)
!3516 = !DILocation(line: 1319, column: 36, scope: !3478)
!3517 = !DILocation(line: 1319, column: 35, scope: !3478)
!3518 = !DILocation(line: 1319, column: 26, scope: !3478)
!3519 = !DILocation(line: 1319, column: 52, scope: !3478)
!3520 = !DILocation(line: 1319, column: 51, scope: !3478)
!3521 = !DILocation(line: 1319, column: 57, scope: !3478)
!3522 = !DILocation(line: 1319, column: 56, scope: !3478)
!3523 = !DILocation(line: 1319, column: 62, scope: !3478)
!3524 = !DILocation(line: 1319, column: 61, scope: !3478)
!3525 = !DILocation(line: 1319, column: 47, scope: !3478)
!3526 = !DILocation(line: 1319, column: 8, scope: !3478)
!3527 = !DILocation(line: 1319, column: 16, scope: !3478)
!3528 = !DILocation(line: 1320, column: 18, scope: !3478)
!3529 = !DILocation(line: 1320, column: 37, scope: !3478)
!3530 = !DILocation(line: 1320, column: 36, scope: !3478)
!3531 = !DILocation(line: 1320, column: 56, scope: !3478)
!3532 = !DILocation(line: 1320, column: 55, scope: !3478)
!3533 = !DILocation(line: 1320, column: 8, scope: !3478)
!3534 = !DILocation(line: 1320, column: 16, scope: !3478)
!3535 = !DILocation(line: 1321, column: 5, scope: !3478)
!3536 = !DILocation(line: 1322, column: 10, scope: !3190)
!3537 = !DILocation(line: 1322, column: 25, scope: !3190)
!3538 = !DILocation(line: 1322, column: 32, scope: !3190)
!3539 = !DILocation(line: 1322, column: 12, scope: !3190)
!3540 = !DILocation(line: 1322, column: 3, scope: !3190)
!3541 = !DILocation(line: 1323, column: 1, scope: !3190)
!3542 = distinct !DISubprogram(name: "GetImageMean", scope: !1, file: !1, line: 1359, type: !3170, scopeLine: 1361, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !826)
!3543 = !DILocalVariable(name: "image", arg: 1, scope: !3542, file: !1, line: 1359, type: !813)
!3544 = !DILocation(line: 1359, column: 58, scope: !3542)
!3545 = !DILocalVariable(name: "mean", arg: 2, scope: !3542, file: !1, line: 1359, type: !2911)
!3546 = !DILocation(line: 1359, column: 72, scope: !3542)
!3547 = !DILocalVariable(name: "standard_deviation", arg: 3, scope: !3542, file: !1, line: 1360, type: !2911)
!3548 = !DILocation(line: 1360, column: 11, scope: !3542)
!3549 = !DILocalVariable(name: "exception", arg: 4, scope: !3542, file: !1, line: 1360, type: !825)
!3550 = !DILocation(line: 1360, column: 45, scope: !3542)
!3551 = !DILocalVariable(name: "status", scope: !3542, file: !1, line: 1363, type: !509)
!3552 = !DILocation(line: 1363, column: 5, scope: !3542)
!3553 = !DILocation(line: 1365, column: 30, scope: !3542)
!3554 = !DILocation(line: 1365, column: 54, scope: !3542)
!3555 = !DILocation(line: 1365, column: 59, scope: !3542)
!3556 = !DILocation(line: 1366, column: 5, scope: !3542)
!3557 = !DILocation(line: 1365, column: 10, scope: !3542)
!3558 = !DILocation(line: 1365, column: 9, scope: !3542)
!3559 = !DILocation(line: 1367, column: 10, scope: !3542)
!3560 = !DILocation(line: 1367, column: 3, scope: !3542)
!3561 = distinct !DISubprogram(name: "GetImageChannelMean", scope: !1, file: !1, line: 1370, type: !2909, scopeLine: 1373, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !826)
!3562 = !DILocalVariable(name: "image", arg: 1, scope: !3561, file: !1, line: 1370, type: !813)
!3563 = !DILocation(line: 1370, column: 65, scope: !3561)
!3564 = !DILocalVariable(name: "channel", arg: 2, scope: !3561, file: !1, line: 1371, type: !848)
!3565 = !DILocation(line: 1371, column: 21, scope: !3561)
!3566 = !DILocalVariable(name: "mean", arg: 3, scope: !3561, file: !1, line: 1371, type: !2911)
!3567 = !DILocation(line: 1371, column: 37, scope: !3561)
!3568 = !DILocalVariable(name: "standard_deviation", arg: 4, scope: !3561, file: !1, line: 1371, type: !2911)
!3569 = !DILocation(line: 1371, column: 50, scope: !3561)
!3570 = !DILocalVariable(name: "exception", arg: 5, scope: !3561, file: !1, line: 1372, type: !825)
!3571 = !DILocation(line: 1372, column: 18, scope: !3561)
!3572 = !DILocalVariable(name: "channel_statistics", scope: !3561, file: !1, line: 1375, type: !737)
!3573 = !DILocation(line: 1375, column: 6, scope: !3561)
!3574 = !DILocalVariable(name: "channels", scope: !3561, file: !1, line: 1378, type: !504)
!3575 = !DILocation(line: 1378, column: 5, scope: !3561)
!3576 = !DILocation(line: 1382, column: 7, scope: !3577)
!3577 = distinct !DILexicalBlock(scope: !3561, file: !1, line: 1382, column: 7)
!3578 = !DILocation(line: 1382, column: 14, scope: !3577)
!3579 = !DILocation(line: 1382, column: 20, scope: !3577)
!3580 = !DILocation(line: 1382, column: 7, scope: !3561)
!3581 = !DILocation(line: 1383, column: 61, scope: !3577)
!3582 = !DILocation(line: 1383, column: 68, scope: !3577)
!3583 = !DILocation(line: 1383, column: 12, scope: !3577)
!3584 = !DILocation(line: 1383, column: 5, scope: !3577)
!3585 = !DILocation(line: 1384, column: 48, scope: !3561)
!3586 = !DILocation(line: 1384, column: 54, scope: !3561)
!3587 = !DILocation(line: 1384, column: 22, scope: !3561)
!3588 = !DILocation(line: 1384, column: 21, scope: !3561)
!3589 = !DILocation(line: 1385, column: 7, scope: !3590)
!3590 = distinct !DILexicalBlock(scope: !3561, file: !1, line: 1385, column: 7)
!3591 = !DILocation(line: 1385, column: 26, scope: !3590)
!3592 = !DILocation(line: 1385, column: 7, scope: !3561)
!3593 = !DILocation(line: 1386, column: 5, scope: !3590)
!3594 = !DILocation(line: 1387, column: 11, scope: !3561)
!3595 = !DILocation(line: 1388, column: 3, scope: !3561)
!3596 = !DILocation(line: 1388, column: 41, scope: !3561)
!3597 = !DILocation(line: 1388, column: 45, scope: !3561)
!3598 = !DILocation(line: 1389, column: 3, scope: !3561)
!3599 = !DILocation(line: 1389, column: 41, scope: !3561)
!3600 = !DILocation(line: 1389, column: 59, scope: !3561)
!3601 = !DILocation(line: 1390, column: 8, scope: !3602)
!3602 = distinct !DILexicalBlock(scope: !3561, file: !1, line: 1390, column: 7)
!3603 = !DILocation(line: 1390, column: 16, scope: !3602)
!3604 = !DILocation(line: 1390, column: 30, scope: !3602)
!3605 = !DILocation(line: 1390, column: 7, scope: !3561)
!3606 = !DILocation(line: 1393, column: 9, scope: !3607)
!3607 = distinct !DILexicalBlock(scope: !3602, file: !1, line: 1391, column: 5)
!3608 = !DILocation(line: 1393, column: 40, scope: !3607)
!3609 = !DILocation(line: 1392, column: 7, scope: !3607)
!3610 = !DILocation(line: 1392, column: 45, scope: !3607)
!3611 = !DILocation(line: 1392, column: 49, scope: !3607)
!3612 = !DILocation(line: 1395, column: 9, scope: !3607)
!3613 = !DILocation(line: 1395, column: 40, scope: !3607)
!3614 = !DILocation(line: 1396, column: 9, scope: !3607)
!3615 = !DILocation(line: 1396, column: 40, scope: !3607)
!3616 = !DILocation(line: 1397, column: 9, scope: !3607)
!3617 = !DILocation(line: 1397, column: 40, scope: !3607)
!3618 = !DILocation(line: 1396, column: 44, scope: !3607)
!3619 = !DILocation(line: 1395, column: 48, scope: !3607)
!3620 = !DILocation(line: 1394, column: 7, scope: !3607)
!3621 = !DILocation(line: 1394, column: 45, scope: !3607)
!3622 = !DILocation(line: 1394, column: 63, scope: !3607)
!3623 = !DILocation(line: 1398, column: 15, scope: !3607)
!3624 = !DILocation(line: 1399, column: 5, scope: !3607)
!3625 = !DILocation(line: 1400, column: 8, scope: !3626)
!3626 = distinct !DILexicalBlock(scope: !3561, file: !1, line: 1400, column: 7)
!3627 = !DILocation(line: 1400, column: 16, scope: !3626)
!3628 = !DILocation(line: 1400, column: 32, scope: !3626)
!3629 = !DILocation(line: 1400, column: 7, scope: !3561)
!3630 = !DILocation(line: 1403, column: 9, scope: !3631)
!3631 = distinct !DILexicalBlock(scope: !3626, file: !1, line: 1401, column: 5)
!3632 = !DILocation(line: 1403, column: 42, scope: !3631)
!3633 = !DILocation(line: 1402, column: 7, scope: !3631)
!3634 = !DILocation(line: 1402, column: 45, scope: !3631)
!3635 = !DILocation(line: 1402, column: 49, scope: !3631)
!3636 = !DILocation(line: 1405, column: 9, scope: !3631)
!3637 = !DILocation(line: 1405, column: 42, scope: !3631)
!3638 = !DILocation(line: 1406, column: 9, scope: !3631)
!3639 = !DILocation(line: 1406, column: 42, scope: !3631)
!3640 = !DILocation(line: 1407, column: 9, scope: !3631)
!3641 = !DILocation(line: 1407, column: 42, scope: !3631)
!3642 = !DILocation(line: 1406, column: 46, scope: !3631)
!3643 = !DILocation(line: 1405, column: 50, scope: !3631)
!3644 = !DILocation(line: 1404, column: 7, scope: !3631)
!3645 = !DILocation(line: 1404, column: 45, scope: !3631)
!3646 = !DILocation(line: 1404, column: 63, scope: !3631)
!3647 = !DILocation(line: 1408, column: 15, scope: !3631)
!3648 = !DILocation(line: 1409, column: 5, scope: !3631)
!3649 = !DILocation(line: 1410, column: 8, scope: !3650)
!3650 = distinct !DILexicalBlock(scope: !3561, file: !1, line: 1410, column: 7)
!3651 = !DILocation(line: 1410, column: 16, scope: !3650)
!3652 = !DILocation(line: 1410, column: 31, scope: !3650)
!3653 = !DILocation(line: 1410, column: 7, scope: !3561)
!3654 = !DILocation(line: 1413, column: 9, scope: !3655)
!3655 = distinct !DILexicalBlock(scope: !3650, file: !1, line: 1411, column: 5)
!3656 = !DILocation(line: 1413, column: 41, scope: !3655)
!3657 = !DILocation(line: 1412, column: 7, scope: !3655)
!3658 = !DILocation(line: 1412, column: 45, scope: !3655)
!3659 = !DILocation(line: 1412, column: 49, scope: !3655)
!3660 = !DILocation(line: 1415, column: 9, scope: !3655)
!3661 = !DILocation(line: 1415, column: 41, scope: !3655)
!3662 = !DILocation(line: 1416, column: 9, scope: !3655)
!3663 = !DILocation(line: 1416, column: 41, scope: !3655)
!3664 = !DILocation(line: 1417, column: 9, scope: !3655)
!3665 = !DILocation(line: 1417, column: 41, scope: !3655)
!3666 = !DILocation(line: 1416, column: 45, scope: !3655)
!3667 = !DILocation(line: 1415, column: 49, scope: !3655)
!3668 = !DILocation(line: 1414, column: 7, scope: !3655)
!3669 = !DILocation(line: 1414, column: 45, scope: !3655)
!3670 = !DILocation(line: 1414, column: 63, scope: !3655)
!3671 = !DILocation(line: 1418, column: 15, scope: !3655)
!3672 = !DILocation(line: 1419, column: 5, scope: !3655)
!3673 = !DILocation(line: 1420, column: 9, scope: !3674)
!3674 = distinct !DILexicalBlock(scope: !3561, file: !1, line: 1420, column: 7)
!3675 = !DILocation(line: 1420, column: 17, scope: !3674)
!3676 = !DILocation(line: 1420, column: 35, scope: !3674)
!3677 = !DILocation(line: 1420, column: 41, scope: !3674)
!3678 = !DILocation(line: 1421, column: 8, scope: !3674)
!3679 = !DILocation(line: 1421, column: 15, scope: !3674)
!3680 = !DILocation(line: 1421, column: 21, scope: !3674)
!3681 = !DILocation(line: 1420, column: 7, scope: !3561)
!3682 = !DILocation(line: 1424, column: 9, scope: !3683)
!3683 = distinct !DILexicalBlock(scope: !3674, file: !1, line: 1422, column: 5)
!3684 = !DILocation(line: 1424, column: 44, scope: !3683)
!3685 = !DILocation(line: 1423, column: 7, scope: !3683)
!3686 = !DILocation(line: 1423, column: 45, scope: !3683)
!3687 = !DILocation(line: 1423, column: 49, scope: !3683)
!3688 = !DILocation(line: 1426, column: 9, scope: !3683)
!3689 = !DILocation(line: 1426, column: 44, scope: !3683)
!3690 = !DILocation(line: 1427, column: 9, scope: !3683)
!3691 = !DILocation(line: 1427, column: 44, scope: !3683)
!3692 = !DILocation(line: 1428, column: 9, scope: !3683)
!3693 = !DILocation(line: 1428, column: 44, scope: !3683)
!3694 = !DILocation(line: 1427, column: 48, scope: !3683)
!3695 = !DILocation(line: 1426, column: 52, scope: !3683)
!3696 = !DILocation(line: 1425, column: 7, scope: !3683)
!3697 = !DILocation(line: 1425, column: 45, scope: !3683)
!3698 = !DILocation(line: 1425, column: 63, scope: !3683)
!3699 = !DILocation(line: 1429, column: 15, scope: !3683)
!3700 = !DILocation(line: 1430, column: 5, scope: !3683)
!3701 = !DILocation(line: 1431, column: 9, scope: !3702)
!3702 = distinct !DILexicalBlock(scope: !3561, file: !1, line: 1431, column: 7)
!3703 = !DILocation(line: 1431, column: 17, scope: !3702)
!3704 = !DILocation(line: 1431, column: 33, scope: !3702)
!3705 = !DILocation(line: 1431, column: 39, scope: !3702)
!3706 = !DILocation(line: 1432, column: 8, scope: !3702)
!3707 = !DILocation(line: 1432, column: 15, scope: !3702)
!3708 = !DILocation(line: 1432, column: 26, scope: !3702)
!3709 = !DILocation(line: 1431, column: 7, scope: !3561)
!3710 = !DILocation(line: 1435, column: 9, scope: !3711)
!3711 = distinct !DILexicalBlock(scope: !3702, file: !1, line: 1433, column: 5)
!3712 = !DILocation(line: 1435, column: 42, scope: !3711)
!3713 = !DILocation(line: 1434, column: 7, scope: !3711)
!3714 = !DILocation(line: 1434, column: 45, scope: !3711)
!3715 = !DILocation(line: 1434, column: 49, scope: !3711)
!3716 = !DILocation(line: 1437, column: 9, scope: !3711)
!3717 = !DILocation(line: 1437, column: 42, scope: !3711)
!3718 = !DILocation(line: 1438, column: 9, scope: !3711)
!3719 = !DILocation(line: 1438, column: 42, scope: !3711)
!3720 = !DILocation(line: 1439, column: 9, scope: !3711)
!3721 = !DILocation(line: 1439, column: 42, scope: !3711)
!3722 = !DILocation(line: 1438, column: 46, scope: !3711)
!3723 = !DILocation(line: 1437, column: 50, scope: !3711)
!3724 = !DILocation(line: 1436, column: 7, scope: !3711)
!3725 = !DILocation(line: 1436, column: 45, scope: !3711)
!3726 = !DILocation(line: 1436, column: 63, scope: !3711)
!3727 = !DILocation(line: 1440, column: 15, scope: !3711)
!3728 = !DILocation(line: 1441, column: 5, scope: !3711)
!3729 = !DILocation(line: 1442, column: 47, scope: !3561)
!3730 = !DILocation(line: 1442, column: 3, scope: !3561)
!3731 = !DILocation(line: 1442, column: 41, scope: !3561)
!3732 = !DILocation(line: 1442, column: 45, scope: !3561)
!3733 = !DILocation(line: 1444, column: 10, scope: !3561)
!3734 = !DILocation(line: 1444, column: 48, scope: !3561)
!3735 = !DILocation(line: 1444, column: 67, scope: !3561)
!3736 = !DILocation(line: 1444, column: 66, scope: !3561)
!3737 = !DILocation(line: 1444, column: 5, scope: !3561)
!3738 = !DILocation(line: 1443, column: 3, scope: !3561)
!3739 = !DILocation(line: 1443, column: 41, scope: !3561)
!3740 = !DILocation(line: 1443, column: 59, scope: !3561)
!3741 = !DILocation(line: 1445, column: 9, scope: !3561)
!3742 = !DILocation(line: 1445, column: 47, scope: !3561)
!3743 = !DILocation(line: 1445, column: 4, scope: !3561)
!3744 = !DILocation(line: 1445, column: 8, scope: !3561)
!3745 = !DILocation(line: 1446, column: 23, scope: !3561)
!3746 = !DILocation(line: 1446, column: 61, scope: !3561)
!3747 = !DILocation(line: 1446, column: 4, scope: !3561)
!3748 = !DILocation(line: 1446, column: 22, scope: !3561)
!3749 = !DILocation(line: 1448, column: 5, scope: !3561)
!3750 = !DILocation(line: 1447, column: 44, scope: !3561)
!3751 = !DILocation(line: 1447, column: 22, scope: !3561)
!3752 = !DILocation(line: 1447, column: 21, scope: !3561)
!3753 = !DILocation(line: 1449, column: 3, scope: !3561)
!3754 = !DILocation(line: 1450, column: 1, scope: !3561)
!3755 = distinct !DISubprogram(name: "GetImageChannelStatistics", scope: !1, file: !1, line: 2127, type: !3756, scopeLine: 2129, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !826)
!3756 = !DISubroutineType(types: !3757)
!3757 = !{!737, !813, !825}
!3758 = !DILocalVariable(name: "image", arg: 1, scope: !3755, file: !1, line: 2127, type: !813)
!3759 = !DILocation(line: 2127, column: 72, scope: !3755)
!3760 = !DILocalVariable(name: "exception", arg: 2, scope: !3755, file: !1, line: 2128, type: !825)
!3761 = !DILocation(line: 2128, column: 18, scope: !3755)
!3762 = !DILocalVariable(name: "channel_statistics", scope: !3755, file: !1, line: 2131, type: !737)
!3763 = !DILocation(line: 2131, column: 6, scope: !3755)
!3764 = !DILocalVariable(name: "area", scope: !3755, file: !1, line: 2134, type: !530)
!3765 = !DILocation(line: 2134, column: 5, scope: !3755)
!3766 = !DILocalVariable(name: "range", scope: !3755, file: !1, line: 2137, type: !812)
!3767 = !DILocation(line: 2137, column: 5, scope: !3755)
!3768 = !DILocalVariable(name: "i", scope: !3755, file: !1, line: 2140, type: !557)
!3769 = !DILocation(line: 2140, column: 5, scope: !3755)
!3770 = !DILocalVariable(name: "channels", scope: !3755, file: !1, line: 2143, type: !504)
!3771 = !DILocation(line: 2143, column: 5, scope: !3755)
!3772 = !DILocalVariable(name: "depth", scope: !3755, file: !1, line: 2144, type: !504)
!3773 = !DILocation(line: 2144, column: 5, scope: !3755)
!3774 = !DILocalVariable(name: "length", scope: !3755, file: !1, line: 2145, type: !504)
!3775 = !DILocation(line: 2145, column: 5, scope: !3755)
!3776 = !DILocalVariable(name: "y", scope: !3755, file: !1, line: 2148, type: !557)
!3777 = !DILocation(line: 2148, column: 5, scope: !3755)
!3778 = !DILocation(line: 2152, column: 7, scope: !3779)
!3779 = distinct !DILexicalBlock(scope: !3755, file: !1, line: 2152, column: 7)
!3780 = !DILocation(line: 2152, column: 14, scope: !3779)
!3781 = !DILocation(line: 2152, column: 20, scope: !3779)
!3782 = !DILocation(line: 2152, column: 7, scope: !3755)
!3783 = !DILocation(line: 2153, column: 61, scope: !3779)
!3784 = !DILocation(line: 2153, column: 68, scope: !3779)
!3785 = !DILocation(line: 2153, column: 12, scope: !3779)
!3786 = !DILocation(line: 2153, column: 5, scope: !3779)
!3787 = !DILocation(line: 2154, column: 9, scope: !3755)
!3788 = !DILocation(line: 2155, column: 65, scope: !3755)
!3789 = !DILocation(line: 2155, column: 44, scope: !3755)
!3790 = !DILocation(line: 2155, column: 22, scope: !3755)
!3791 = !DILocation(line: 2155, column: 21, scope: !3755)
!3792 = !DILocation(line: 2157, column: 7, scope: !3793)
!3793 = distinct !DILexicalBlock(scope: !3755, file: !1, line: 2157, column: 7)
!3794 = !DILocation(line: 2157, column: 26, scope: !3793)
!3795 = !DILocation(line: 2157, column: 7, scope: !3755)
!3796 = !DILocation(line: 2158, column: 12, scope: !3793)
!3797 = !DILocation(line: 2158, column: 5, scope: !3793)
!3798 = !DILocation(line: 2159, column: 28, scope: !3755)
!3799 = !DILocation(line: 2159, column: 49, scope: !3755)
!3800 = !DILocation(line: 2159, column: 55, scope: !3755)
!3801 = !DILocation(line: 2159, column: 10, scope: !3755)
!3802 = !DILocation(line: 2161, column: 9, scope: !3803)
!3803 = distinct !DILexicalBlock(scope: !3755, file: !1, line: 2161, column: 3)
!3804 = !DILocation(line: 2161, column: 8, scope: !3803)
!3805 = !DILocation(line: 2161, column: 13, scope: !3806)
!3806 = distinct !DILexicalBlock(scope: !3803, file: !1, line: 2161, column: 3)
!3807 = !DILocation(line: 2161, column: 15, scope: !3806)
!3808 = !DILocation(line: 2161, column: 3, scope: !3803)
!3809 = !DILocation(line: 2163, column: 5, scope: !3810)
!3810 = distinct !DILexicalBlock(scope: !3806, file: !1, line: 2162, column: 3)
!3811 = !DILocation(line: 2163, column: 24, scope: !3810)
!3812 = !DILocation(line: 2163, column: 27, scope: !3810)
!3813 = !DILocation(line: 2163, column: 32, scope: !3810)
!3814 = !DILocation(line: 2164, column: 5, scope: !3810)
!3815 = !DILocation(line: 2164, column: 24, scope: !3810)
!3816 = !DILocation(line: 2164, column: 27, scope: !3810)
!3817 = !DILocation(line: 2164, column: 33, scope: !3810)
!3818 = !DILocation(line: 2165, column: 5, scope: !3810)
!3819 = !DILocation(line: 2165, column: 24, scope: !3810)
!3820 = !DILocation(line: 2165, column: 27, scope: !3810)
!3821 = !DILocation(line: 2165, column: 33, scope: !3810)
!3822 = !DILocation(line: 2166, column: 3, scope: !3810)
!3823 = !DILocation(line: 2161, column: 48, scope: !3806)
!3824 = !DILocation(line: 2161, column: 3, scope: !3806)
!3825 = distinct !{!3825, !3808, !3826}
!3826 = !DILocation(line: 2166, column: 3, scope: !3803)
!3827 = !DILocation(line: 2167, column: 9, scope: !3828)
!3828 = distinct !DILexicalBlock(scope: !3755, file: !1, line: 2167, column: 3)
!3829 = !DILocation(line: 2167, column: 8, scope: !3828)
!3830 = !DILocation(line: 2167, column: 13, scope: !3831)
!3831 = distinct !DILexicalBlock(scope: !3828, file: !1, line: 2167, column: 3)
!3832 = !DILocation(line: 2167, column: 27, scope: !3831)
!3833 = !DILocation(line: 2167, column: 34, scope: !3831)
!3834 = !DILocation(line: 2167, column: 15, scope: !3831)
!3835 = !DILocation(line: 2167, column: 3, scope: !3828)
!3836 = !DILocalVariable(name: "indexes", scope: !3837, file: !1, line: 2170, type: !2952)
!3837 = distinct !DILexicalBlock(scope: !3831, file: !1, line: 2168, column: 3)
!3838 = !DILocation(line: 2170, column: 17, scope: !3837)
!3839 = !DILocalVariable(name: "p", scope: !3837, file: !1, line: 2173, type: !2955)
!3840 = !DILocation(line: 2173, column: 17, scope: !3837)
!3841 = !DILocalVariable(name: "x", scope: !3837, file: !1, line: 2176, type: !557)
!3842 = !DILocation(line: 2176, column: 7, scope: !3837)
!3843 = !DILocation(line: 2178, column: 24, scope: !3837)
!3844 = !DILocation(line: 2178, column: 32, scope: !3837)
!3845 = !DILocation(line: 2178, column: 34, scope: !3837)
!3846 = !DILocation(line: 2178, column: 41, scope: !3837)
!3847 = !DILocation(line: 2178, column: 51, scope: !3837)
!3848 = !DILocation(line: 2178, column: 7, scope: !3837)
!3849 = !DILocation(line: 2178, column: 6, scope: !3837)
!3850 = !DILocation(line: 2179, column: 9, scope: !3851)
!3851 = distinct !DILexicalBlock(scope: !3837, file: !1, line: 2179, column: 9)
!3852 = !DILocation(line: 2179, column: 11, scope: !3851)
!3853 = !DILocation(line: 2179, column: 9, scope: !3837)
!3854 = !DILocation(line: 2180, column: 7, scope: !3851)
!3855 = !DILocation(line: 2181, column: 34, scope: !3837)
!3856 = !DILocation(line: 2181, column: 13, scope: !3837)
!3857 = !DILocation(line: 2181, column: 12, scope: !3837)
!3858 = !DILocation(line: 2182, column: 11, scope: !3859)
!3859 = distinct !DILexicalBlock(scope: !3837, file: !1, line: 2182, column: 5)
!3860 = !DILocation(line: 2182, column: 10, scope: !3859)
!3861 = !DILocation(line: 2182, column: 15, scope: !3862)
!3862 = distinct !DILexicalBlock(scope: !3859, file: !1, line: 2182, column: 5)
!3863 = !DILocation(line: 2182, column: 29, scope: !3862)
!3864 = !DILocation(line: 2182, column: 36, scope: !3862)
!3865 = !DILocation(line: 2182, column: 17, scope: !3862)
!3866 = !DILocation(line: 2182, column: 5, scope: !3859)
!3867 = !DILocation(line: 2184, column: 11, scope: !3868)
!3868 = distinct !DILexicalBlock(scope: !3869, file: !1, line: 2184, column: 11)
!3869 = distinct !DILexicalBlock(scope: !3862, file: !1, line: 2183, column: 5)
!3870 = !DILocation(line: 2184, column: 42, scope: !3868)
!3871 = !DILocation(line: 2184, column: 48, scope: !3868)
!3872 = !DILocation(line: 2184, column: 11, scope: !3869)
!3873 = !DILocation(line: 2186, column: 17, scope: !3874)
!3874 = distinct !DILexicalBlock(scope: !3868, file: !1, line: 2185, column: 9)
!3875 = !DILocation(line: 2186, column: 48, scope: !3874)
!3876 = !DILocation(line: 2186, column: 16, scope: !3874)
!3877 = !DILocation(line: 2187, column: 33, scope: !3874)
!3878 = !DILocation(line: 2187, column: 17, scope: !3874)
!3879 = !DILocation(line: 2187, column: 16, scope: !3874)
!3880 = !DILocation(line: 2188, column: 30, scope: !3881)
!3881 = distinct !DILexicalBlock(scope: !3874, file: !1, line: 2188, column: 15)
!3882 = !DILocation(line: 2188, column: 45, scope: !3881)
!3883 = !DILocation(line: 2188, column: 15, scope: !3881)
!3884 = !DILocation(line: 2188, column: 52, scope: !3881)
!3885 = !DILocation(line: 2188, column: 15, scope: !3874)
!3886 = !DILocation(line: 2190, column: 15, scope: !3887)
!3887 = distinct !DILexicalBlock(scope: !3881, file: !1, line: 2189, column: 13)
!3888 = !DILocation(line: 2190, column: 46, scope: !3887)
!3889 = !DILocation(line: 2190, column: 51, scope: !3887)
!3890 = !DILocation(line: 2191, column: 15, scope: !3887)
!3891 = distinct !{!3891, !3866, !3892}
!3892 = !DILocation(line: 2310, column: 5, scope: !3859)
!3893 = !DILocation(line: 2193, column: 9, scope: !3874)
!3894 = !DILocation(line: 2194, column: 11, scope: !3895)
!3895 = distinct !DILexicalBlock(scope: !3869, file: !1, line: 2194, column: 11)
!3896 = !DILocation(line: 2194, column: 44, scope: !3895)
!3897 = !DILocation(line: 2194, column: 50, scope: !3895)
!3898 = !DILocation(line: 2194, column: 11, scope: !3869)
!3899 = !DILocation(line: 2196, column: 17, scope: !3900)
!3900 = distinct !DILexicalBlock(scope: !3895, file: !1, line: 2195, column: 9)
!3901 = !DILocation(line: 2196, column: 50, scope: !3900)
!3902 = !DILocation(line: 2196, column: 16, scope: !3900)
!3903 = !DILocation(line: 2197, column: 33, scope: !3900)
!3904 = !DILocation(line: 2197, column: 17, scope: !3900)
!3905 = !DILocation(line: 2197, column: 16, scope: !3900)
!3906 = !DILocation(line: 2198, column: 30, scope: !3907)
!3907 = distinct !DILexicalBlock(scope: !3900, file: !1, line: 2198, column: 15)
!3908 = !DILocation(line: 2198, column: 47, scope: !3907)
!3909 = !DILocation(line: 2198, column: 15, scope: !3907)
!3910 = !DILocation(line: 2198, column: 54, scope: !3907)
!3911 = !DILocation(line: 2198, column: 15, scope: !3900)
!3912 = !DILocation(line: 2200, column: 15, scope: !3913)
!3913 = distinct !DILexicalBlock(scope: !3907, file: !1, line: 2199, column: 13)
!3914 = !DILocation(line: 2200, column: 48, scope: !3913)
!3915 = !DILocation(line: 2200, column: 53, scope: !3913)
!3916 = !DILocation(line: 2201, column: 15, scope: !3913)
!3917 = !DILocation(line: 2203, column: 9, scope: !3900)
!3918 = !DILocation(line: 2204, column: 11, scope: !3919)
!3919 = distinct !DILexicalBlock(scope: !3869, file: !1, line: 2204, column: 11)
!3920 = !DILocation(line: 2204, column: 43, scope: !3919)
!3921 = !DILocation(line: 2204, column: 49, scope: !3919)
!3922 = !DILocation(line: 2204, column: 11, scope: !3869)
!3923 = !DILocation(line: 2206, column: 17, scope: !3924)
!3924 = distinct !DILexicalBlock(scope: !3919, file: !1, line: 2205, column: 9)
!3925 = !DILocation(line: 2206, column: 49, scope: !3924)
!3926 = !DILocation(line: 2206, column: 16, scope: !3924)
!3927 = !DILocation(line: 2207, column: 33, scope: !3924)
!3928 = !DILocation(line: 2207, column: 17, scope: !3924)
!3929 = !DILocation(line: 2207, column: 16, scope: !3924)
!3930 = !DILocation(line: 2208, column: 30, scope: !3931)
!3931 = distinct !DILexicalBlock(scope: !3924, file: !1, line: 2208, column: 15)
!3932 = !DILocation(line: 2208, column: 46, scope: !3931)
!3933 = !DILocation(line: 2208, column: 15, scope: !3931)
!3934 = !DILocation(line: 2208, column: 53, scope: !3931)
!3935 = !DILocation(line: 2208, column: 15, scope: !3924)
!3936 = !DILocation(line: 2210, column: 15, scope: !3937)
!3937 = distinct !DILexicalBlock(scope: !3931, file: !1, line: 2209, column: 13)
!3938 = !DILocation(line: 2210, column: 47, scope: !3937)
!3939 = !DILocation(line: 2210, column: 52, scope: !3937)
!3940 = !DILocation(line: 2211, column: 15, scope: !3937)
!3941 = !DILocation(line: 2213, column: 9, scope: !3924)
!3942 = !DILocation(line: 2214, column: 11, scope: !3943)
!3943 = distinct !DILexicalBlock(scope: !3869, file: !1, line: 2214, column: 11)
!3944 = !DILocation(line: 2214, column: 18, scope: !3943)
!3945 = !DILocation(line: 2214, column: 24, scope: !3943)
!3946 = !DILocation(line: 2214, column: 11, scope: !3869)
!3947 = !DILocation(line: 2216, column: 15, scope: !3948)
!3948 = distinct !DILexicalBlock(scope: !3949, file: !1, line: 2216, column: 15)
!3949 = distinct !DILexicalBlock(scope: !3943, file: !1, line: 2215, column: 9)
!3950 = !DILocation(line: 2216, column: 50, scope: !3948)
!3951 = !DILocation(line: 2216, column: 56, scope: !3948)
!3952 = !DILocation(line: 2216, column: 15, scope: !3949)
!3953 = !DILocation(line: 2218, column: 21, scope: !3954)
!3954 = distinct !DILexicalBlock(scope: !3948, file: !1, line: 2217, column: 13)
!3955 = !DILocation(line: 2218, column: 56, scope: !3954)
!3956 = !DILocation(line: 2218, column: 20, scope: !3954)
!3957 = !DILocation(line: 2219, column: 37, scope: !3954)
!3958 = !DILocation(line: 2219, column: 21, scope: !3954)
!3959 = !DILocation(line: 2219, column: 20, scope: !3954)
!3960 = !DILocation(line: 2220, column: 34, scope: !3961)
!3961 = distinct !DILexicalBlock(scope: !3954, file: !1, line: 2220, column: 19)
!3962 = !DILocation(line: 2220, column: 53, scope: !3961)
!3963 = !DILocation(line: 2220, column: 19, scope: !3961)
!3964 = !DILocation(line: 2220, column: 60, scope: !3961)
!3965 = !DILocation(line: 2220, column: 19, scope: !3954)
!3966 = !DILocation(line: 2222, column: 19, scope: !3967)
!3967 = distinct !DILexicalBlock(scope: !3961, file: !1, line: 2221, column: 17)
!3968 = !DILocation(line: 2222, column: 54, scope: !3967)
!3969 = !DILocation(line: 2222, column: 59, scope: !3967)
!3970 = !DILocation(line: 2223, column: 19, scope: !3967)
!3971 = !DILocation(line: 2225, column: 13, scope: !3954)
!3972 = !DILocation(line: 2226, column: 11, scope: !3949)
!3973 = !DILocation(line: 2227, column: 11, scope: !3974)
!3974 = distinct !DILexicalBlock(scope: !3869, file: !1, line: 2227, column: 11)
!3975 = !DILocation(line: 2227, column: 18, scope: !3974)
!3976 = !DILocation(line: 2227, column: 29, scope: !3974)
!3977 = !DILocation(line: 2227, column: 11, scope: !3869)
!3978 = !DILocation(line: 2229, column: 15, scope: !3979)
!3979 = distinct !DILexicalBlock(scope: !3980, file: !1, line: 2229, column: 15)
!3980 = distinct !DILexicalBlock(scope: !3974, file: !1, line: 2228, column: 9)
!3981 = !DILocation(line: 2229, column: 48, scope: !3979)
!3982 = !DILocation(line: 2229, column: 54, scope: !3979)
!3983 = !DILocation(line: 2229, column: 15, scope: !3980)
!3984 = !DILocation(line: 2231, column: 21, scope: !3985)
!3985 = distinct !DILexicalBlock(scope: !3979, file: !1, line: 2230, column: 13)
!3986 = !DILocation(line: 2231, column: 54, scope: !3985)
!3987 = !DILocation(line: 2231, column: 20, scope: !3985)
!3988 = !DILocation(line: 2232, column: 37, scope: !3985)
!3989 = !DILocation(line: 2232, column: 21, scope: !3985)
!3990 = !DILocation(line: 2232, column: 20, scope: !3985)
!3991 = !DILocation(line: 2233, column: 34, scope: !3992)
!3992 = distinct !DILexicalBlock(scope: !3985, file: !1, line: 2233, column: 19)
!3993 = !DILocation(line: 2233, column: 59, scope: !3992)
!3994 = !DILocation(line: 2233, column: 19, scope: !3992)
!3995 = !DILocation(line: 2233, column: 66, scope: !3992)
!3996 = !DILocation(line: 2233, column: 19, scope: !3985)
!3997 = !DILocation(line: 2235, column: 19, scope: !3998)
!3998 = distinct !DILexicalBlock(scope: !3992, file: !1, line: 2234, column: 17)
!3999 = !DILocation(line: 2235, column: 52, scope: !3998)
!4000 = !DILocation(line: 2235, column: 57, scope: !3998)
!4001 = !DILocation(line: 2236, column: 19, scope: !3998)
!4002 = !DILocation(line: 2238, column: 13, scope: !3985)
!4003 = !DILocation(line: 2239, column: 9, scope: !3980)
!4004 = !DILocation(line: 2240, column: 20, scope: !4005)
!4005 = distinct !DILexicalBlock(scope: !3869, file: !1, line: 2240, column: 11)
!4006 = !DILocation(line: 2240, column: 11, scope: !4005)
!4007 = !DILocation(line: 2240, column: 37, scope: !4005)
!4008 = !DILocation(line: 2240, column: 68, scope: !4005)
!4009 = !DILocation(line: 2240, column: 35, scope: !4005)
!4010 = !DILocation(line: 2240, column: 11, scope: !3869)
!4011 = !DILocation(line: 2241, column: 56, scope: !4005)
!4012 = !DILocation(line: 2241, column: 47, scope: !4005)
!4013 = !DILocation(line: 2241, column: 9, scope: !4005)
!4014 = !DILocation(line: 2241, column: 40, scope: !4005)
!4015 = !DILocation(line: 2241, column: 46, scope: !4005)
!4016 = !DILocation(line: 2242, column: 20, scope: !4017)
!4017 = distinct !DILexicalBlock(scope: !3869, file: !1, line: 2242, column: 11)
!4018 = !DILocation(line: 2242, column: 11, scope: !4017)
!4019 = !DILocation(line: 2242, column: 37, scope: !4017)
!4020 = !DILocation(line: 2242, column: 68, scope: !4017)
!4021 = !DILocation(line: 2242, column: 35, scope: !4017)
!4022 = !DILocation(line: 2242, column: 11, scope: !3869)
!4023 = !DILocation(line: 2243, column: 56, scope: !4017)
!4024 = !DILocation(line: 2243, column: 47, scope: !4017)
!4025 = !DILocation(line: 2243, column: 9, scope: !4017)
!4026 = !DILocation(line: 2243, column: 40, scope: !4017)
!4027 = !DILocation(line: 2243, column: 46, scope: !4017)
!4028 = !DILocation(line: 2244, column: 43, scope: !3869)
!4029 = !DILocation(line: 2244, column: 7, scope: !3869)
!4030 = !DILocation(line: 2244, column: 38, scope: !3869)
!4031 = !DILocation(line: 2244, column: 41, scope: !3869)
!4032 = !DILocation(line: 2245, column: 60, scope: !3869)
!4033 = !DILocation(line: 2245, column: 51, scope: !3869)
!4034 = !DILocation(line: 2246, column: 9, scope: !3869)
!4035 = !DILocation(line: 2245, column: 74, scope: !3869)
!4036 = !DILocation(line: 2245, column: 7, scope: !3869)
!4037 = !DILocation(line: 2245, column: 38, scope: !3869)
!4038 = !DILocation(line: 2245, column: 49, scope: !3869)
!4039 = !DILocation(line: 2248, column: 9, scope: !3869)
!4040 = !DILocation(line: 2247, column: 49, scope: !3869)
!4041 = !DILocation(line: 2248, column: 24, scope: !3869)
!4042 = !DILocation(line: 2248, column: 23, scope: !3869)
!4043 = !DILocation(line: 2248, column: 39, scope: !3869)
!4044 = !DILocation(line: 2248, column: 38, scope: !3869)
!4045 = !DILocation(line: 2247, column: 7, scope: !3869)
!4046 = !DILocation(line: 2247, column: 38, scope: !3869)
!4047 = !DILocation(line: 2247, column: 47, scope: !3869)
!4048 = !DILocation(line: 2250, column: 9, scope: !3869)
!4049 = !DILocation(line: 2249, column: 56, scope: !3869)
!4050 = !DILocation(line: 2250, column: 24, scope: !3869)
!4051 = !DILocation(line: 2250, column: 23, scope: !3869)
!4052 = !DILocation(line: 2250, column: 39, scope: !3869)
!4053 = !DILocation(line: 2250, column: 38, scope: !3869)
!4054 = !DILocation(line: 2250, column: 54, scope: !3869)
!4055 = !DILocation(line: 2250, column: 53, scope: !3869)
!4056 = !DILocation(line: 2249, column: 7, scope: !3869)
!4057 = !DILocation(line: 2249, column: 38, scope: !3869)
!4058 = !DILocation(line: 2249, column: 54, scope: !3869)
!4059 = !DILocation(line: 2251, column: 20, scope: !4060)
!4060 = distinct !DILexicalBlock(scope: !3869, file: !1, line: 2251, column: 11)
!4061 = !DILocation(line: 2251, column: 11, scope: !4060)
!4062 = !DILocation(line: 2251, column: 39, scope: !4060)
!4063 = !DILocation(line: 2251, column: 72, scope: !4060)
!4064 = !DILocation(line: 2251, column: 37, scope: !4060)
!4065 = !DILocation(line: 2251, column: 11, scope: !3869)
!4066 = !DILocation(line: 2252, column: 58, scope: !4060)
!4067 = !DILocation(line: 2252, column: 49, scope: !4060)
!4068 = !DILocation(line: 2252, column: 9, scope: !4060)
!4069 = !DILocation(line: 2252, column: 42, scope: !4060)
!4070 = !DILocation(line: 2252, column: 48, scope: !4060)
!4071 = !DILocation(line: 2253, column: 20, scope: !4072)
!4072 = distinct !DILexicalBlock(scope: !3869, file: !1, line: 2253, column: 11)
!4073 = !DILocation(line: 2253, column: 11, scope: !4072)
!4074 = !DILocation(line: 2253, column: 39, scope: !4072)
!4075 = !DILocation(line: 2253, column: 72, scope: !4072)
!4076 = !DILocation(line: 2253, column: 37, scope: !4072)
!4077 = !DILocation(line: 2253, column: 11, scope: !3869)
!4078 = !DILocation(line: 2254, column: 58, scope: !4072)
!4079 = !DILocation(line: 2254, column: 49, scope: !4072)
!4080 = !DILocation(line: 2254, column: 9, scope: !4072)
!4081 = !DILocation(line: 2254, column: 42, scope: !4072)
!4082 = !DILocation(line: 2254, column: 48, scope: !4072)
!4083 = !DILocation(line: 2255, column: 45, scope: !3869)
!4084 = !DILocation(line: 2255, column: 7, scope: !3869)
!4085 = !DILocation(line: 2255, column: 40, scope: !3869)
!4086 = !DILocation(line: 2255, column: 43, scope: !3869)
!4087 = !DILocation(line: 2256, column: 62, scope: !3869)
!4088 = !DILocation(line: 2256, column: 53, scope: !3869)
!4089 = !DILocation(line: 2257, column: 9, scope: !3869)
!4090 = !DILocation(line: 2256, column: 78, scope: !3869)
!4091 = !DILocation(line: 2256, column: 7, scope: !3869)
!4092 = !DILocation(line: 2256, column: 40, scope: !3869)
!4093 = !DILocation(line: 2256, column: 51, scope: !3869)
!4094 = !DILocation(line: 2258, column: 60, scope: !3869)
!4095 = !DILocation(line: 2258, column: 51, scope: !3869)
!4096 = !DILocation(line: 2259, column: 9, scope: !3869)
!4097 = !DILocation(line: 2258, column: 76, scope: !3869)
!4098 = !DILocation(line: 2259, column: 26, scope: !3869)
!4099 = !DILocation(line: 2259, column: 25, scope: !3869)
!4100 = !DILocation(line: 2258, column: 7, scope: !3869)
!4101 = !DILocation(line: 2258, column: 40, scope: !3869)
!4102 = !DILocation(line: 2258, column: 49, scope: !3869)
!4103 = !DILocation(line: 2261, column: 9, scope: !3869)
!4104 = !DILocation(line: 2260, column: 58, scope: !3869)
!4105 = !DILocation(line: 2261, column: 26, scope: !3869)
!4106 = !DILocation(line: 2261, column: 25, scope: !3869)
!4107 = !DILocation(line: 2261, column: 43, scope: !3869)
!4108 = !DILocation(line: 2261, column: 42, scope: !3869)
!4109 = !DILocation(line: 2261, column: 60, scope: !3869)
!4110 = !DILocation(line: 2261, column: 59, scope: !3869)
!4111 = !DILocation(line: 2260, column: 7, scope: !3869)
!4112 = !DILocation(line: 2260, column: 40, scope: !3869)
!4113 = !DILocation(line: 2260, column: 56, scope: !3869)
!4114 = !DILocation(line: 2262, column: 20, scope: !4115)
!4115 = distinct !DILexicalBlock(scope: !3869, file: !1, line: 2262, column: 11)
!4116 = !DILocation(line: 2262, column: 11, scope: !4115)
!4117 = !DILocation(line: 2262, column: 38, scope: !4115)
!4118 = !DILocation(line: 2262, column: 70, scope: !4115)
!4119 = !DILocation(line: 2262, column: 36, scope: !4115)
!4120 = !DILocation(line: 2262, column: 11, scope: !3869)
!4121 = !DILocation(line: 2263, column: 57, scope: !4115)
!4122 = !DILocation(line: 2263, column: 48, scope: !4115)
!4123 = !DILocation(line: 2263, column: 9, scope: !4115)
!4124 = !DILocation(line: 2263, column: 41, scope: !4115)
!4125 = !DILocation(line: 2263, column: 47, scope: !4115)
!4126 = !DILocation(line: 2264, column: 20, scope: !4127)
!4127 = distinct !DILexicalBlock(scope: !3869, file: !1, line: 2264, column: 11)
!4128 = !DILocation(line: 2264, column: 11, scope: !4127)
!4129 = !DILocation(line: 2264, column: 38, scope: !4127)
!4130 = !DILocation(line: 2264, column: 70, scope: !4127)
!4131 = !DILocation(line: 2264, column: 36, scope: !4127)
!4132 = !DILocation(line: 2264, column: 11, scope: !3869)
!4133 = !DILocation(line: 2265, column: 57, scope: !4127)
!4134 = !DILocation(line: 2265, column: 48, scope: !4127)
!4135 = !DILocation(line: 2265, column: 9, scope: !4127)
!4136 = !DILocation(line: 2265, column: 41, scope: !4127)
!4137 = !DILocation(line: 2265, column: 47, scope: !4127)
!4138 = !DILocation(line: 2266, column: 44, scope: !3869)
!4139 = !DILocation(line: 2266, column: 7, scope: !3869)
!4140 = !DILocation(line: 2266, column: 39, scope: !3869)
!4141 = !DILocation(line: 2266, column: 42, scope: !3869)
!4142 = !DILocation(line: 2267, column: 61, scope: !3869)
!4143 = !DILocation(line: 2267, column: 52, scope: !3869)
!4144 = !DILocation(line: 2268, column: 9, scope: !3869)
!4145 = !DILocation(line: 2267, column: 76, scope: !3869)
!4146 = !DILocation(line: 2267, column: 7, scope: !3869)
!4147 = !DILocation(line: 2267, column: 39, scope: !3869)
!4148 = !DILocation(line: 2267, column: 50, scope: !3869)
!4149 = !DILocation(line: 2269, column: 59, scope: !3869)
!4150 = !DILocation(line: 2269, column: 50, scope: !3869)
!4151 = !DILocation(line: 2270, column: 9, scope: !3869)
!4152 = !DILocation(line: 2269, column: 74, scope: !3869)
!4153 = !DILocation(line: 2270, column: 25, scope: !3869)
!4154 = !DILocation(line: 2270, column: 24, scope: !3869)
!4155 = !DILocation(line: 2269, column: 7, scope: !3869)
!4156 = !DILocation(line: 2269, column: 39, scope: !3869)
!4157 = !DILocation(line: 2269, column: 48, scope: !3869)
!4158 = !DILocation(line: 2272, column: 9, scope: !3869)
!4159 = !DILocation(line: 2271, column: 57, scope: !3869)
!4160 = !DILocation(line: 2272, column: 25, scope: !3869)
!4161 = !DILocation(line: 2272, column: 24, scope: !3869)
!4162 = !DILocation(line: 2272, column: 41, scope: !3869)
!4163 = !DILocation(line: 2272, column: 40, scope: !3869)
!4164 = !DILocation(line: 2272, column: 57, scope: !3869)
!4165 = !DILocation(line: 2272, column: 56, scope: !3869)
!4166 = !DILocation(line: 2271, column: 7, scope: !3869)
!4167 = !DILocation(line: 2271, column: 39, scope: !3869)
!4168 = !DILocation(line: 2271, column: 55, scope: !3869)
!4169 = !DILocation(line: 2273, column: 11, scope: !4170)
!4170 = distinct !DILexicalBlock(scope: !3869, file: !1, line: 2273, column: 11)
!4171 = !DILocation(line: 2273, column: 18, scope: !4170)
!4172 = !DILocation(line: 2273, column: 24, scope: !4170)
!4173 = !DILocation(line: 2273, column: 11, scope: !3869)
!4174 = !DILocation(line: 2275, column: 24, scope: !4175)
!4175 = distinct !DILexicalBlock(scope: !4176, file: !1, line: 2275, column: 15)
!4176 = distinct !DILexicalBlock(scope: !4170, file: !1, line: 2274, column: 9)
!4177 = !DILocation(line: 2275, column: 15, scope: !4175)
!4178 = !DILocation(line: 2275, column: 45, scope: !4175)
!4179 = !DILocation(line: 2275, column: 80, scope: !4175)
!4180 = !DILocation(line: 2275, column: 43, scope: !4175)
!4181 = !DILocation(line: 2275, column: 15, scope: !4176)
!4182 = !DILocation(line: 2277, column: 15, scope: !4175)
!4183 = !DILocation(line: 2276, column: 55, scope: !4175)
!4184 = !DILocation(line: 2276, column: 13, scope: !4175)
!4185 = !DILocation(line: 2276, column: 48, scope: !4175)
!4186 = !DILocation(line: 2276, column: 54, scope: !4175)
!4187 = !DILocation(line: 2278, column: 24, scope: !4188)
!4188 = distinct !DILexicalBlock(scope: !4176, file: !1, line: 2278, column: 15)
!4189 = !DILocation(line: 2278, column: 15, scope: !4188)
!4190 = !DILocation(line: 2278, column: 45, scope: !4188)
!4191 = !DILocation(line: 2278, column: 80, scope: !4188)
!4192 = !DILocation(line: 2278, column: 43, scope: !4188)
!4193 = !DILocation(line: 2278, column: 15, scope: !4176)
!4194 = !DILocation(line: 2280, column: 15, scope: !4188)
!4195 = !DILocation(line: 2279, column: 55, scope: !4188)
!4196 = !DILocation(line: 2279, column: 13, scope: !4188)
!4197 = !DILocation(line: 2279, column: 48, scope: !4188)
!4198 = !DILocation(line: 2279, column: 54, scope: !4188)
!4199 = !DILocation(line: 2281, column: 51, scope: !4176)
!4200 = !DILocation(line: 2281, column: 11, scope: !4176)
!4201 = !DILocation(line: 2281, column: 46, scope: !4176)
!4202 = !DILocation(line: 2281, column: 49, scope: !4176)
!4203 = !DILocation(line: 2283, column: 13, scope: !4176)
!4204 = !DILocation(line: 2282, column: 59, scope: !4176)
!4205 = !DILocation(line: 2283, column: 32, scope: !4176)
!4206 = !DILocation(line: 2283, column: 31, scope: !4176)
!4207 = !DILocation(line: 2282, column: 11, scope: !4176)
!4208 = !DILocation(line: 2282, column: 46, scope: !4176)
!4209 = !DILocation(line: 2282, column: 57, scope: !4176)
!4210 = !DILocation(line: 2285, column: 13, scope: !4176)
!4211 = !DILocation(line: 2284, column: 57, scope: !4176)
!4212 = !DILocation(line: 2285, column: 32, scope: !4176)
!4213 = !DILocation(line: 2285, column: 31, scope: !4176)
!4214 = !DILocation(line: 2285, column: 51, scope: !4176)
!4215 = !DILocation(line: 2285, column: 50, scope: !4176)
!4216 = !DILocation(line: 2284, column: 11, scope: !4176)
!4217 = !DILocation(line: 2284, column: 46, scope: !4176)
!4218 = !DILocation(line: 2284, column: 55, scope: !4176)
!4219 = !DILocation(line: 2287, column: 13, scope: !4176)
!4220 = !DILocation(line: 2286, column: 64, scope: !4176)
!4221 = !DILocation(line: 2287, column: 32, scope: !4176)
!4222 = !DILocation(line: 2287, column: 31, scope: !4176)
!4223 = !DILocation(line: 2287, column: 51, scope: !4176)
!4224 = !DILocation(line: 2287, column: 50, scope: !4176)
!4225 = !DILocation(line: 2288, column: 13, scope: !4176)
!4226 = !DILocation(line: 2287, column: 69, scope: !4176)
!4227 = !DILocation(line: 2286, column: 11, scope: !4176)
!4228 = !DILocation(line: 2286, column: 46, scope: !4176)
!4229 = !DILocation(line: 2286, column: 62, scope: !4176)
!4230 = !DILocation(line: 2289, column: 9, scope: !4176)
!4231 = !DILocation(line: 2290, column: 11, scope: !4232)
!4232 = distinct !DILexicalBlock(scope: !3869, file: !1, line: 2290, column: 11)
!4233 = !DILocation(line: 2290, column: 18, scope: !4232)
!4234 = !DILocation(line: 2290, column: 29, scope: !4232)
!4235 = !DILocation(line: 2290, column: 11, scope: !3869)
!4236 = !DILocation(line: 2292, column: 24, scope: !4237)
!4237 = distinct !DILexicalBlock(scope: !4238, file: !1, line: 2292, column: 15)
!4238 = distinct !DILexicalBlock(scope: !4232, file: !1, line: 2291, column: 9)
!4239 = !DILocation(line: 2292, column: 15, scope: !4237)
!4240 = !DILocation(line: 2292, column: 51, scope: !4237)
!4241 = !DILocation(line: 2292, column: 84, scope: !4237)
!4242 = !DILocation(line: 2292, column: 49, scope: !4237)
!4243 = !DILocation(line: 2292, column: 15, scope: !4238)
!4244 = !DILocation(line: 2294, column: 15, scope: !4237)
!4245 = !DILocation(line: 2293, column: 53, scope: !4237)
!4246 = !DILocation(line: 2293, column: 13, scope: !4237)
!4247 = !DILocation(line: 2293, column: 46, scope: !4237)
!4248 = !DILocation(line: 2293, column: 52, scope: !4237)
!4249 = !DILocation(line: 2295, column: 24, scope: !4250)
!4250 = distinct !DILexicalBlock(scope: !4238, file: !1, line: 2295, column: 15)
!4251 = !DILocation(line: 2295, column: 15, scope: !4250)
!4252 = !DILocation(line: 2295, column: 51, scope: !4250)
!4253 = !DILocation(line: 2295, column: 84, scope: !4250)
!4254 = !DILocation(line: 2295, column: 49, scope: !4250)
!4255 = !DILocation(line: 2295, column: 15, scope: !4238)
!4256 = !DILocation(line: 2297, column: 15, scope: !4250)
!4257 = !DILocation(line: 2296, column: 53, scope: !4250)
!4258 = !DILocation(line: 2296, column: 13, scope: !4250)
!4259 = !DILocation(line: 2296, column: 46, scope: !4250)
!4260 = !DILocation(line: 2296, column: 52, scope: !4250)
!4261 = !DILocation(line: 2298, column: 49, scope: !4238)
!4262 = !DILocation(line: 2298, column: 11, scope: !4238)
!4263 = !DILocation(line: 2298, column: 44, scope: !4238)
!4264 = !DILocation(line: 2298, column: 47, scope: !4238)
!4265 = !DILocation(line: 2300, column: 13, scope: !4238)
!4266 = !DILocation(line: 2299, column: 57, scope: !4238)
!4267 = !DILocation(line: 2300, column: 38, scope: !4238)
!4268 = !DILocation(line: 2300, column: 37, scope: !4238)
!4269 = !DILocation(line: 2299, column: 11, scope: !4238)
!4270 = !DILocation(line: 2299, column: 44, scope: !4238)
!4271 = !DILocation(line: 2299, column: 55, scope: !4238)
!4272 = !DILocation(line: 2302, column: 13, scope: !4238)
!4273 = !DILocation(line: 2301, column: 55, scope: !4238)
!4274 = !DILocation(line: 2302, column: 38, scope: !4238)
!4275 = !DILocation(line: 2302, column: 37, scope: !4238)
!4276 = !DILocation(line: 2303, column: 13, scope: !4238)
!4277 = !DILocation(line: 2302, column: 62, scope: !4238)
!4278 = !DILocation(line: 2301, column: 11, scope: !4238)
!4279 = !DILocation(line: 2301, column: 44, scope: !4238)
!4280 = !DILocation(line: 2301, column: 53, scope: !4238)
!4281 = !DILocation(line: 2305, column: 13, scope: !4238)
!4282 = !DILocation(line: 2304, column: 62, scope: !4238)
!4283 = !DILocation(line: 2305, column: 38, scope: !4238)
!4284 = !DILocation(line: 2305, column: 37, scope: !4238)
!4285 = !DILocation(line: 2306, column: 13, scope: !4238)
!4286 = !DILocation(line: 2305, column: 62, scope: !4238)
!4287 = !DILocation(line: 2306, column: 38, scope: !4238)
!4288 = !DILocation(line: 2306, column: 37, scope: !4238)
!4289 = !DILocation(line: 2304, column: 11, scope: !4238)
!4290 = !DILocation(line: 2304, column: 44, scope: !4238)
!4291 = !DILocation(line: 2304, column: 60, scope: !4238)
!4292 = !DILocation(line: 2307, column: 9, scope: !4238)
!4293 = !DILocation(line: 2308, column: 8, scope: !3869)
!4294 = !DILocation(line: 2309, column: 8, scope: !3869)
!4295 = !DILocation(line: 2182, column: 5, scope: !3862)
!4296 = !DILocation(line: 2311, column: 3, scope: !3837)
!4297 = !DILocation(line: 2167, column: 41, scope: !3831)
!4298 = !DILocation(line: 2167, column: 3, scope: !3831)
!4299 = distinct !{!4299, !3835, !4300}
!4300 = !DILocation(line: 2311, column: 3, scope: !3828)
!4301 = !DILocation(line: 2312, column: 17, scope: !3755)
!4302 = !DILocation(line: 2312, column: 24, scope: !3755)
!4303 = !DILocation(line: 2312, column: 8, scope: !3755)
!4304 = !DILocation(line: 2312, column: 32, scope: !3755)
!4305 = !DILocation(line: 2312, column: 39, scope: !3755)
!4306 = !DILocation(line: 2312, column: 31, scope: !3755)
!4307 = !DILocation(line: 2312, column: 7, scope: !3755)
!4308 = !DILocation(line: 2313, column: 9, scope: !4309)
!4309 = distinct !DILexicalBlock(scope: !3755, file: !1, line: 2313, column: 3)
!4310 = !DILocation(line: 2313, column: 8, scope: !4309)
!4311 = !DILocation(line: 2313, column: 13, scope: !4312)
!4312 = distinct !DILexicalBlock(scope: !4309, file: !1, line: 2313, column: 3)
!4313 = !DILocation(line: 2313, column: 15, scope: !4312)
!4314 = !DILocation(line: 2313, column: 3, scope: !4309)
!4315 = !DILocalVariable(name: "sum", scope: !4316, file: !1, line: 2316, type: !530)
!4316 = distinct !DILexicalBlock(scope: !4312, file: !1, line: 2314, column: 3)
!4317 = !DILocation(line: 2316, column: 7, scope: !4316)
!4318 = !DILocation(line: 2318, column: 11, scope: !4316)
!4319 = !DILocation(line: 2318, column: 30, scope: !4316)
!4320 = !DILocation(line: 2318, column: 33, scope: !4316)
!4321 = !DILocation(line: 2318, column: 37, scope: !4316)
!4322 = !DILocation(line: 2318, column: 36, scope: !4316)
!4323 = !DILocation(line: 2318, column: 9, scope: !4316)
!4324 = !DILocation(line: 2319, column: 31, scope: !4316)
!4325 = !DILocation(line: 2319, column: 5, scope: !4316)
!4326 = !DILocation(line: 2319, column: 24, scope: !4316)
!4327 = !DILocation(line: 2319, column: 27, scope: !4316)
!4328 = !DILocation(line: 2319, column: 30, scope: !4316)
!4329 = !DILocation(line: 2320, column: 40, scope: !4316)
!4330 = !DILocation(line: 2320, column: 5, scope: !4316)
!4331 = !DILocation(line: 2320, column: 24, scope: !4316)
!4332 = !DILocation(line: 2320, column: 27, scope: !4316)
!4333 = !DILocation(line: 2320, column: 38, scope: !4316)
!4334 = !DILocation(line: 2321, column: 38, scope: !4316)
!4335 = !DILocation(line: 2321, column: 5, scope: !4316)
!4336 = !DILocation(line: 2321, column: 24, scope: !4316)
!4337 = !DILocation(line: 2321, column: 27, scope: !4316)
!4338 = !DILocation(line: 2321, column: 36, scope: !4316)
!4339 = !DILocation(line: 2322, column: 45, scope: !4316)
!4340 = !DILocation(line: 2322, column: 5, scope: !4316)
!4341 = !DILocation(line: 2322, column: 24, scope: !4316)
!4342 = !DILocation(line: 2322, column: 27, scope: !4316)
!4343 = !DILocation(line: 2322, column: 43, scope: !4316)
!4344 = !DILocation(line: 2323, column: 32, scope: !4316)
!4345 = !DILocation(line: 2323, column: 5, scope: !4316)
!4346 = !DILocation(line: 2323, column: 24, scope: !4316)
!4347 = !DILocation(line: 2323, column: 27, scope: !4316)
!4348 = !DILocation(line: 2323, column: 31, scope: !4316)
!4349 = !DILocation(line: 2324, column: 36, scope: !4316)
!4350 = !DILocation(line: 2324, column: 55, scope: !4316)
!4351 = !DILocation(line: 2324, column: 58, scope: !4316)
!4352 = !DILocation(line: 2324, column: 5, scope: !4316)
!4353 = !DILocation(line: 2324, column: 24, scope: !4316)
!4354 = !DILocation(line: 2324, column: 27, scope: !4316)
!4355 = !DILocation(line: 2324, column: 35, scope: !4316)
!4356 = !DILocation(line: 2326, column: 7, scope: !4316)
!4357 = !DILocation(line: 2326, column: 26, scope: !4316)
!4358 = !DILocation(line: 2326, column: 29, scope: !4316)
!4359 = !DILocation(line: 2326, column: 39, scope: !4316)
!4360 = !DILocation(line: 2326, column: 43, scope: !4316)
!4361 = !DILocation(line: 2326, column: 42, scope: !4316)
!4362 = !DILocation(line: 2326, column: 37, scope: !4316)
!4363 = !DILocation(line: 2325, column: 46, scope: !4316)
!4364 = !DILocation(line: 2325, column: 5, scope: !4316)
!4365 = !DILocation(line: 2325, column: 24, scope: !4316)
!4366 = !DILocation(line: 2325, column: 27, scope: !4316)
!4367 = !DILocation(line: 2325, column: 45, scope: !4316)
!4368 = !DILocation(line: 2327, column: 3, scope: !4316)
!4369 = !DILocation(line: 2313, column: 47, scope: !4312)
!4370 = !DILocation(line: 2313, column: 3, scope: !4312)
!4371 = distinct !{!4371, !4314, !4372}
!4372 = !DILocation(line: 2327, column: 3, scope: !4309)
!4373 = !DILocation(line: 2328, column: 9, scope: !4374)
!4374 = distinct !DILexicalBlock(scope: !3755, file: !1, line: 2328, column: 3)
!4375 = !DILocation(line: 2328, column: 8, scope: !4374)
!4376 = !DILocation(line: 2328, column: 13, scope: !4377)
!4377 = distinct !DILexicalBlock(scope: !4374, file: !1, line: 2328, column: 3)
!4378 = !DILocation(line: 2328, column: 15, scope: !4377)
!4379 = !DILocation(line: 2328, column: 3, scope: !4374)
!4380 = !DILocation(line: 2331, column: 7, scope: !4381)
!4381 = distinct !DILexicalBlock(scope: !4377, file: !1, line: 2329, column: 3)
!4382 = !DILocation(line: 2331, column: 45, scope: !4381)
!4383 = !DILocation(line: 2330, column: 70, scope: !4381)
!4384 = !DILocation(line: 2332, column: 7, scope: !4381)
!4385 = !DILocation(line: 2332, column: 26, scope: !4381)
!4386 = !DILocation(line: 2332, column: 29, scope: !4381)
!4387 = !DILocation(line: 2331, column: 51, scope: !4381)
!4388 = !DILocation(line: 2330, column: 58, scope: !4381)
!4389 = !DILocation(line: 2330, column: 49, scope: !4381)
!4390 = !DILocation(line: 2330, column: 5, scope: !4381)
!4391 = !DILocation(line: 2330, column: 43, scope: !4381)
!4392 = !DILocation(line: 2330, column: 48, scope: !4381)
!4393 = !DILocation(line: 2334, column: 7, scope: !4381)
!4394 = !DILocation(line: 2334, column: 45, scope: !4381)
!4395 = !DILocation(line: 2335, column: 7, scope: !4381)
!4396 = !DILocation(line: 2335, column: 26, scope: !4381)
!4397 = !DILocation(line: 2335, column: 29, scope: !4381)
!4398 = !DILocation(line: 2333, column: 50, scope: !4381)
!4399 = !DILocation(line: 2333, column: 5, scope: !4381)
!4400 = !DILocation(line: 2333, column: 43, scope: !4381)
!4401 = !DILocation(line: 2333, column: 49, scope: !4381)
!4402 = !DILocation(line: 2337, column: 7, scope: !4381)
!4403 = !DILocation(line: 2337, column: 45, scope: !4381)
!4404 = !DILocation(line: 2338, column: 7, scope: !4381)
!4405 = !DILocation(line: 2338, column: 26, scope: !4381)
!4406 = !DILocation(line: 2338, column: 29, scope: !4381)
!4407 = !DILocation(line: 2336, column: 50, scope: !4381)
!4408 = !DILocation(line: 2336, column: 5, scope: !4381)
!4409 = !DILocation(line: 2336, column: 43, scope: !4381)
!4410 = !DILocation(line: 2336, column: 49, scope: !4381)
!4411 = !DILocation(line: 2339, column: 48, scope: !4381)
!4412 = !DILocation(line: 2339, column: 67, scope: !4381)
!4413 = !DILocation(line: 2339, column: 70, scope: !4381)
!4414 = !DILocation(line: 2339, column: 5, scope: !4381)
!4415 = !DILocation(line: 2339, column: 43, scope: !4381)
!4416 = !DILocation(line: 2339, column: 46, scope: !4381)
!4417 = !DILocation(line: 2341, column: 7, scope: !4381)
!4418 = !DILocation(line: 2341, column: 26, scope: !4381)
!4419 = !DILocation(line: 2341, column: 29, scope: !4381)
!4420 = !DILocation(line: 2340, column: 5, scope: !4381)
!4421 = !DILocation(line: 2340, column: 43, scope: !4381)
!4422 = !DILocation(line: 2340, column: 54, scope: !4381)
!4423 = !DILocation(line: 2343, column: 7, scope: !4381)
!4424 = !DILocation(line: 2343, column: 26, scope: !4381)
!4425 = !DILocation(line: 2343, column: 29, scope: !4381)
!4426 = !DILocation(line: 2342, column: 5, scope: !4381)
!4427 = !DILocation(line: 2342, column: 43, scope: !4381)
!4428 = !DILocation(line: 2342, column: 52, scope: !4381)
!4429 = !DILocation(line: 2345, column: 7, scope: !4381)
!4430 = !DILocation(line: 2345, column: 26, scope: !4381)
!4431 = !DILocation(line: 2345, column: 29, scope: !4381)
!4432 = !DILocation(line: 2344, column: 5, scope: !4381)
!4433 = !DILocation(line: 2344, column: 43, scope: !4381)
!4434 = !DILocation(line: 2344, column: 59, scope: !4381)
!4435 = !DILocation(line: 2346, column: 49, scope: !4381)
!4436 = !DILocation(line: 2346, column: 68, scope: !4381)
!4437 = !DILocation(line: 2346, column: 71, scope: !4381)
!4438 = !DILocation(line: 2346, column: 5, scope: !4381)
!4439 = !DILocation(line: 2346, column: 43, scope: !4381)
!4440 = !DILocation(line: 2346, column: 47, scope: !4381)
!4441 = !DILocation(line: 2348, column: 7, scope: !4381)
!4442 = !DILocation(line: 2348, column: 26, scope: !4381)
!4443 = !DILocation(line: 2348, column: 29, scope: !4381)
!4444 = !DILocation(line: 2348, column: 38, scope: !4381)
!4445 = !DILocation(line: 2348, column: 57, scope: !4381)
!4446 = !DILocation(line: 2348, column: 60, scope: !4381)
!4447 = !DILocation(line: 2349, column: 7, scope: !4381)
!4448 = !DILocation(line: 2349, column: 26, scope: !4381)
!4449 = !DILocation(line: 2349, column: 29, scope: !4381)
!4450 = !DILocation(line: 2348, column: 64, scope: !4381)
!4451 = !DILocation(line: 2348, column: 37, scope: !4381)
!4452 = !DILocation(line: 2347, column: 5, scope: !4381)
!4453 = !DILocation(line: 2347, column: 43, scope: !4381)
!4454 = !DILocation(line: 2347, column: 51, scope: !4381)
!4455 = !DILocation(line: 2351, column: 7, scope: !4381)
!4456 = !DILocation(line: 2351, column: 26, scope: !4381)
!4457 = !DILocation(line: 2351, column: 29, scope: !4381)
!4458 = !DILocation(line: 2351, column: 38, scope: !4381)
!4459 = !DILocation(line: 2351, column: 57, scope: !4381)
!4460 = !DILocation(line: 2351, column: 60, scope: !4381)
!4461 = !DILocation(line: 2352, column: 7, scope: !4381)
!4462 = !DILocation(line: 2352, column: 26, scope: !4381)
!4463 = !DILocation(line: 2352, column: 29, scope: !4381)
!4464 = !DILocation(line: 2351, column: 64, scope: !4381)
!4465 = !DILocation(line: 2351, column: 37, scope: !4381)
!4466 = !DILocation(line: 2350, column: 5, scope: !4381)
!4467 = !DILocation(line: 2350, column: 43, scope: !4381)
!4468 = !DILocation(line: 2350, column: 61, scope: !4381)
!4469 = !DILocation(line: 2353, column: 3, scope: !4381)
!4470 = !DILocation(line: 2328, column: 47, scope: !4377)
!4471 = !DILocation(line: 2328, column: 3, scope: !4377)
!4472 = distinct !{!4472, !4379, !4473}
!4473 = !DILocation(line: 2353, column: 3, scope: !4374)
!4474 = !DILocation(line: 2354, column: 11, scope: !3755)
!4475 = !DILocation(line: 2355, column: 7, scope: !4476)
!4476 = distinct !DILexicalBlock(scope: !3755, file: !1, line: 2355, column: 7)
!4477 = !DILocation(line: 2355, column: 14, scope: !4476)
!4478 = !DILocation(line: 2355, column: 20, scope: !4476)
!4479 = !DILocation(line: 2355, column: 7, scope: !3755)
!4480 = !DILocation(line: 2356, column: 13, scope: !4476)
!4481 = !DILocation(line: 2356, column: 5, scope: !4476)
!4482 = !DILocation(line: 2357, column: 7, scope: !4483)
!4483 = distinct !DILexicalBlock(scope: !3755, file: !1, line: 2357, column: 7)
!4484 = !DILocation(line: 2357, column: 14, scope: !4483)
!4485 = !DILocation(line: 2357, column: 25, scope: !4483)
!4486 = !DILocation(line: 2357, column: 7, scope: !3755)
!4487 = !DILocation(line: 2358, column: 13, scope: !4483)
!4488 = !DILocation(line: 2358, column: 5, scope: !4483)
!4489 = !DILocation(line: 2359, column: 46, scope: !3755)
!4490 = !DILocation(line: 2359, column: 3, scope: !3755)
!4491 = !DILocation(line: 2359, column: 41, scope: !3755)
!4492 = !DILocation(line: 2359, column: 44, scope: !3755)
!4493 = !DILocation(line: 2360, column: 54, scope: !3755)
!4494 = !DILocation(line: 2360, column: 3, scope: !3755)
!4495 = !DILocation(line: 2360, column: 41, scope: !3755)
!4496 = !DILocation(line: 2360, column: 52, scope: !3755)
!4497 = !DILocation(line: 2361, column: 52, scope: !3755)
!4498 = !DILocation(line: 2361, column: 3, scope: !3755)
!4499 = !DILocation(line: 2361, column: 41, scope: !3755)
!4500 = !DILocation(line: 2361, column: 50, scope: !3755)
!4501 = !DILocation(line: 2362, column: 59, scope: !3755)
!4502 = !DILocation(line: 2362, column: 3, scope: !3755)
!4503 = !DILocation(line: 2362, column: 41, scope: !3755)
!4504 = !DILocation(line: 2362, column: 57, scope: !3755)
!4505 = !DILocation(line: 2363, column: 47, scope: !3755)
!4506 = !DILocation(line: 2363, column: 3, scope: !3755)
!4507 = !DILocation(line: 2363, column: 41, scope: !3755)
!4508 = !DILocation(line: 2363, column: 45, scope: !3755)
!4509 = !DILocation(line: 2364, column: 51, scope: !3755)
!4510 = !DILocation(line: 2364, column: 3, scope: !3755)
!4511 = !DILocation(line: 2364, column: 41, scope: !3755)
!4512 = !DILocation(line: 2364, column: 49, scope: !3755)
!4513 = !DILocation(line: 2366, column: 10, scope: !3755)
!4514 = !DILocation(line: 2366, column: 48, scope: !3755)
!4515 = !DILocation(line: 2366, column: 67, scope: !3755)
!4516 = !DILocation(line: 2366, column: 66, scope: !3755)
!4517 = !DILocation(line: 2366, column: 5, scope: !3755)
!4518 = !DILocation(line: 2365, column: 3, scope: !3755)
!4519 = !DILocation(line: 2365, column: 41, scope: !3755)
!4520 = !DILocation(line: 2365, column: 59, scope: !3755)
!4521 = !DILocation(line: 2367, column: 51, scope: !3755)
!4522 = !DILocation(line: 2367, column: 3, scope: !3755)
!4523 = !DILocation(line: 2367, column: 41, scope: !3755)
!4524 = !DILocation(line: 2367, column: 49, scope: !3755)
!4525 = !DILocation(line: 2368, column: 51, scope: !3755)
!4526 = !DILocation(line: 2368, column: 3, scope: !3755)
!4527 = !DILocation(line: 2368, column: 41, scope: !3755)
!4528 = !DILocation(line: 2368, column: 49, scope: !3755)
!4529 = !DILocation(line: 2369, column: 9, scope: !4530)
!4530 = distinct !DILexicalBlock(scope: !3755, file: !1, line: 2369, column: 3)
!4531 = !DILocation(line: 2369, column: 8, scope: !4530)
!4532 = !DILocation(line: 2369, column: 13, scope: !4533)
!4533 = distinct !DILexicalBlock(scope: !4530, file: !1, line: 2369, column: 3)
!4534 = !DILocation(line: 2369, column: 15, scope: !4533)
!4535 = !DILocation(line: 2369, column: 3, scope: !4530)
!4536 = !DILocation(line: 2371, column: 9, scope: !4537)
!4537 = distinct !DILexicalBlock(scope: !4538, file: !1, line: 2371, column: 9)
!4538 = distinct !DILexicalBlock(scope: !4533, file: !1, line: 2370, column: 3)
!4539 = !DILocation(line: 2371, column: 28, scope: !4537)
!4540 = !DILocation(line: 2371, column: 31, scope: !4537)
!4541 = !DILocation(line: 2371, column: 50, scope: !4537)
!4542 = !DILocation(line: 2371, column: 9, scope: !4538)
!4543 = !DILocation(line: 2372, column: 7, scope: !4537)
!4544 = !DILocation(line: 2373, column: 37, scope: !4538)
!4545 = !DILocation(line: 2373, column: 56, scope: !4538)
!4546 = !DILocation(line: 2373, column: 59, scope: !4538)
!4547 = !DILocation(line: 2374, column: 11, scope: !4538)
!4548 = !DILocation(line: 2374, column: 30, scope: !4538)
!4549 = !DILocation(line: 2374, column: 33, scope: !4538)
!4550 = !DILocation(line: 2374, column: 10, scope: !4538)
!4551 = !DILocation(line: 2374, column: 38, scope: !4538)
!4552 = !DILocation(line: 2374, column: 57, scope: !4538)
!4553 = !DILocation(line: 2374, column: 60, scope: !4538)
!4554 = !DILocation(line: 2374, column: 37, scope: !4538)
!4555 = !DILocation(line: 2373, column: 68, scope: !4538)
!4556 = !DILocation(line: 2375, column: 11, scope: !4538)
!4557 = !DILocation(line: 2375, column: 30, scope: !4538)
!4558 = !DILocation(line: 2375, column: 33, scope: !4538)
!4559 = !DILocation(line: 2375, column: 10, scope: !4538)
!4560 = !DILocation(line: 2375, column: 38, scope: !4538)
!4561 = !DILocation(line: 2375, column: 57, scope: !4538)
!4562 = !DILocation(line: 2375, column: 60, scope: !4538)
!4563 = !DILocation(line: 2375, column: 37, scope: !4538)
!4564 = !DILocation(line: 2376, column: 7, scope: !4538)
!4565 = !DILocation(line: 2376, column: 26, scope: !4538)
!4566 = !DILocation(line: 2376, column: 29, scope: !4538)
!4567 = !DILocation(line: 2375, column: 64, scope: !4538)
!4568 = !DILocation(line: 2374, column: 71, scope: !4538)
!4569 = !DILocation(line: 2376, column: 36, scope: !4538)
!4570 = !DILocation(line: 2376, column: 55, scope: !4538)
!4571 = !DILocation(line: 2376, column: 58, scope: !4538)
!4572 = !DILocation(line: 2377, column: 7, scope: !4538)
!4573 = !DILocation(line: 2377, column: 26, scope: !4538)
!4574 = !DILocation(line: 2377, column: 29, scope: !4538)
!4575 = !DILocation(line: 2376, column: 76, scope: !4538)
!4576 = !DILocation(line: 2378, column: 7, scope: !4538)
!4577 = !DILocation(line: 2378, column: 26, scope: !4538)
!4578 = !DILocation(line: 2378, column: 29, scope: !4538)
!4579 = !DILocation(line: 2377, column: 47, scope: !4538)
!4580 = !DILocation(line: 2376, column: 34, scope: !4538)
!4581 = !DILocation(line: 2373, column: 5, scope: !4538)
!4582 = !DILocation(line: 2373, column: 24, scope: !4538)
!4583 = !DILocation(line: 2373, column: 27, scope: !4538)
!4584 = !DILocation(line: 2373, column: 35, scope: !4538)
!4585 = !DILocation(line: 2379, column: 37, scope: !4538)
!4586 = !DILocation(line: 2379, column: 56, scope: !4538)
!4587 = !DILocation(line: 2379, column: 59, scope: !4538)
!4588 = !DILocation(line: 2380, column: 11, scope: !4538)
!4589 = !DILocation(line: 2380, column: 30, scope: !4538)
!4590 = !DILocation(line: 2380, column: 33, scope: !4538)
!4591 = !DILocation(line: 2380, column: 10, scope: !4538)
!4592 = !DILocation(line: 2380, column: 38, scope: !4538)
!4593 = !DILocation(line: 2380, column: 57, scope: !4538)
!4594 = !DILocation(line: 2380, column: 60, scope: !4538)
!4595 = !DILocation(line: 2380, column: 37, scope: !4538)
!4596 = !DILocation(line: 2379, column: 75, scope: !4538)
!4597 = !DILocation(line: 2381, column: 11, scope: !4538)
!4598 = !DILocation(line: 2381, column: 30, scope: !4538)
!4599 = !DILocation(line: 2381, column: 33, scope: !4538)
!4600 = !DILocation(line: 2381, column: 10, scope: !4538)
!4601 = !DILocation(line: 2381, column: 38, scope: !4538)
!4602 = !DILocation(line: 2381, column: 57, scope: !4538)
!4603 = !DILocation(line: 2381, column: 60, scope: !4538)
!4604 = !DILocation(line: 2381, column: 37, scope: !4538)
!4605 = !DILocation(line: 2382, column: 7, scope: !4538)
!4606 = !DILocation(line: 2382, column: 26, scope: !4538)
!4607 = !DILocation(line: 2382, column: 29, scope: !4538)
!4608 = !DILocation(line: 2381, column: 64, scope: !4538)
!4609 = !DILocation(line: 2380, column: 69, scope: !4538)
!4610 = !DILocation(line: 2382, column: 45, scope: !4538)
!4611 = !DILocation(line: 2382, column: 64, scope: !4538)
!4612 = !DILocation(line: 2382, column: 67, scope: !4538)
!4613 = !DILocation(line: 2382, column: 44, scope: !4538)
!4614 = !DILocation(line: 2383, column: 7, scope: !4538)
!4615 = !DILocation(line: 2383, column: 26, scope: !4538)
!4616 = !DILocation(line: 2383, column: 29, scope: !4538)
!4617 = !DILocation(line: 2382, column: 71, scope: !4538)
!4618 = !DILocation(line: 2383, column: 33, scope: !4538)
!4619 = !DILocation(line: 2383, column: 38, scope: !4538)
!4620 = !DILocation(line: 2383, column: 57, scope: !4538)
!4621 = !DILocation(line: 2383, column: 60, scope: !4538)
!4622 = !DILocation(line: 2383, column: 37, scope: !4538)
!4623 = !DILocation(line: 2384, column: 7, scope: !4538)
!4624 = !DILocation(line: 2384, column: 26, scope: !4538)
!4625 = !DILocation(line: 2384, column: 29, scope: !4538)
!4626 = !DILocation(line: 2383, column: 64, scope: !4538)
!4627 = !DILocation(line: 2382, column: 40, scope: !4538)
!4628 = !DILocation(line: 2384, column: 36, scope: !4538)
!4629 = !DILocation(line: 2384, column: 55, scope: !4538)
!4630 = !DILocation(line: 2384, column: 58, scope: !4538)
!4631 = !DILocation(line: 2385, column: 7, scope: !4538)
!4632 = !DILocation(line: 2385, column: 26, scope: !4538)
!4633 = !DILocation(line: 2385, column: 29, scope: !4538)
!4634 = !DILocation(line: 2384, column: 76, scope: !4538)
!4635 = !DILocation(line: 2386, column: 7, scope: !4538)
!4636 = !DILocation(line: 2386, column: 26, scope: !4538)
!4637 = !DILocation(line: 2386, column: 29, scope: !4538)
!4638 = !DILocation(line: 2385, column: 47, scope: !4538)
!4639 = !DILocation(line: 2387, column: 7, scope: !4538)
!4640 = !DILocation(line: 2387, column: 26, scope: !4538)
!4641 = !DILocation(line: 2387, column: 29, scope: !4538)
!4642 = !DILocation(line: 2386, column: 47, scope: !4538)
!4643 = !DILocation(line: 2384, column: 34, scope: !4538)
!4644 = !DILocation(line: 2387, column: 48, scope: !4538)
!4645 = !DILocation(line: 2379, column: 5, scope: !4538)
!4646 = !DILocation(line: 2379, column: 24, scope: !4538)
!4647 = !DILocation(line: 2379, column: 27, scope: !4538)
!4648 = !DILocation(line: 2379, column: 35, scope: !4538)
!4649 = !DILocation(line: 2388, column: 3, scope: !4538)
!4650 = !DILocation(line: 2369, column: 48, scope: !4533)
!4651 = !DILocation(line: 2369, column: 3, scope: !4533)
!4652 = distinct !{!4652, !4535, !4653}
!4653 = !DILocation(line: 2388, column: 3, scope: !4530)
!4654 = !DILocation(line: 2389, column: 7, scope: !4655)
!4655 = distinct !DILexicalBlock(scope: !3755, file: !1, line: 2389, column: 7)
!4656 = !DILocation(line: 2389, column: 21, scope: !4655)
!4657 = !DILocation(line: 2389, column: 28, scope: !4655)
!4658 = !DILocation(line: 2389, column: 9, scope: !4655)
!4659 = !DILocation(line: 2389, column: 7, scope: !3755)
!4660 = !DILocation(line: 2391, column: 7, scope: !4655)
!4661 = !DILocation(line: 2390, column: 46, scope: !4655)
!4662 = !DILocation(line: 2390, column: 24, scope: !4655)
!4663 = !DILocation(line: 2390, column: 23, scope: !4655)
!4664 = !DILocation(line: 2390, column: 5, scope: !4655)
!4665 = !DILocation(line: 2392, column: 10, scope: !3755)
!4666 = !DILocation(line: 2392, column: 3, scope: !3755)
!4667 = !DILocation(line: 2393, column: 1, scope: !3755)
!4668 = distinct !DISubprogram(name: "GetImageChannelMoments", scope: !1, file: !1, line: 1478, type: !4669, scopeLine: 1480, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !826)
!4669 = !DISubroutineType(types: !4670)
!4670 = !{!753, !813, !825}
!4671 = !DILocalVariable(name: "image", arg: 1, scope: !4668, file: !1, line: 1478, type: !813)
!4672 = !DILocation(line: 1478, column: 66, scope: !4668)
!4673 = !DILocalVariable(name: "exception", arg: 2, scope: !4668, file: !1, line: 1479, type: !825)
!4674 = !DILocation(line: 1479, column: 18, scope: !4668)
!4675 = !DILocalVariable(name: "channel_moments", scope: !4668, file: !1, line: 1484, type: !753)
!4676 = !DILocation(line: 1484, column: 6, scope: !4668)
!4677 = !DILocalVariable(name: "M00", scope: !4668, file: !1, line: 1487, type: !4678)
!4678 = !DICompositeType(tag: DW_TAG_array_type, baseType: !530, size: 3072, elements: !4679)
!4679 = !{!4680}
!4680 = !DISubrange(count: 48)
!4681 = !DILocation(line: 1487, column: 5, scope: !4668)
!4682 = !DILocalVariable(name: "M01", scope: !4668, file: !1, line: 1488, type: !4678)
!4683 = !DILocation(line: 1488, column: 5, scope: !4668)
!4684 = !DILocalVariable(name: "M02", scope: !4668, file: !1, line: 1489, type: !4678)
!4685 = !DILocation(line: 1489, column: 5, scope: !4668)
!4686 = !DILocalVariable(name: "M03", scope: !4668, file: !1, line: 1490, type: !4678)
!4687 = !DILocation(line: 1490, column: 5, scope: !4668)
!4688 = !DILocalVariable(name: "M10", scope: !4668, file: !1, line: 1491, type: !4678)
!4689 = !DILocation(line: 1491, column: 5, scope: !4668)
!4690 = !DILocalVariable(name: "M11", scope: !4668, file: !1, line: 1492, type: !4678)
!4691 = !DILocation(line: 1492, column: 5, scope: !4668)
!4692 = !DILocalVariable(name: "M12", scope: !4668, file: !1, line: 1493, type: !4678)
!4693 = !DILocation(line: 1493, column: 5, scope: !4668)
!4694 = !DILocalVariable(name: "M20", scope: !4668, file: !1, line: 1494, type: !4678)
!4695 = !DILocation(line: 1494, column: 5, scope: !4668)
!4696 = !DILocalVariable(name: "M21", scope: !4668, file: !1, line: 1495, type: !4678)
!4697 = !DILocation(line: 1495, column: 5, scope: !4668)
!4698 = !DILocalVariable(name: "M22", scope: !4668, file: !1, line: 1496, type: !4678)
!4699 = !DILocation(line: 1496, column: 5, scope: !4668)
!4700 = !DILocalVariable(name: "M30", scope: !4668, file: !1, line: 1497, type: !4678)
!4701 = !DILocation(line: 1497, column: 5, scope: !4668)
!4702 = !DILocalVariable(name: "pixel", scope: !4668, file: !1, line: 1500, type: !716)
!4703 = !DILocation(line: 1500, column: 5, scope: !4668)
!4704 = !DILocalVariable(name: "centroid", scope: !4668, file: !1, line: 1503, type: !4705)
!4705 = !DICompositeType(tag: DW_TAG_array_type, baseType: !762, size: 6144, elements: !4679)
!4706 = !DILocation(line: 1503, column: 5, scope: !4668)
!4707 = !DILocalVariable(name: "channel", scope: !4668, file: !1, line: 1506, type: !557)
!4708 = !DILocation(line: 1506, column: 5, scope: !4668)
!4709 = !DILocalVariable(name: "channels", scope: !4668, file: !1, line: 1507, type: !557)
!4710 = !DILocation(line: 1507, column: 5, scope: !4668)
!4711 = !DILocalVariable(name: "y", scope: !4668, file: !1, line: 1508, type: !557)
!4712 = !DILocation(line: 1508, column: 5, scope: !4668)
!4713 = !DILocalVariable(name: "length", scope: !4668, file: !1, line: 1511, type: !504)
!4714 = !DILocation(line: 1511, column: 5, scope: !4668)
!4715 = !DILocation(line: 1515, column: 7, scope: !4716)
!4716 = distinct !DILexicalBlock(scope: !4668, file: !1, line: 1515, column: 7)
!4717 = !DILocation(line: 1515, column: 14, scope: !4716)
!4718 = !DILocation(line: 1515, column: 20, scope: !4716)
!4719 = !DILocation(line: 1515, column: 7, scope: !4668)
!4720 = !DILocation(line: 1516, column: 61, scope: !4716)
!4721 = !DILocation(line: 1516, column: 68, scope: !4716)
!4722 = !DILocation(line: 1516, column: 12, scope: !4716)
!4723 = !DILocation(line: 1516, column: 5, scope: !4716)
!4724 = !DILocation(line: 1517, column: 9, scope: !4668)
!4725 = !DILocation(line: 1518, column: 59, scope: !4668)
!4726 = !DILocation(line: 1518, column: 38, scope: !4668)
!4727 = !DILocation(line: 1518, column: 19, scope: !4668)
!4728 = !DILocation(line: 1518, column: 18, scope: !4668)
!4729 = !DILocation(line: 1520, column: 7, scope: !4730)
!4730 = distinct !DILexicalBlock(scope: !4668, file: !1, line: 1520, column: 7)
!4731 = !DILocation(line: 1520, column: 23, scope: !4730)
!4732 = !DILocation(line: 1520, column: 7, scope: !4668)
!4733 = !DILocation(line: 1521, column: 12, scope: !4730)
!4734 = !DILocation(line: 1521, column: 5, scope: !4730)
!4735 = !DILocation(line: 1522, column: 28, scope: !4668)
!4736 = !DILocation(line: 1522, column: 46, scope: !4668)
!4737 = !DILocation(line: 1522, column: 52, scope: !4668)
!4738 = !DILocation(line: 1522, column: 10, scope: !4668)
!4739 = !DILocation(line: 1523, column: 28, scope: !4668)
!4740 = !DILocation(line: 1523, column: 10, scope: !4668)
!4741 = !DILocation(line: 1524, column: 28, scope: !4668)
!4742 = !DILocation(line: 1524, column: 10, scope: !4668)
!4743 = !DILocation(line: 1525, column: 28, scope: !4668)
!4744 = !DILocation(line: 1525, column: 10, scope: !4668)
!4745 = !DILocation(line: 1526, column: 28, scope: !4668)
!4746 = !DILocation(line: 1526, column: 10, scope: !4668)
!4747 = !DILocation(line: 1527, column: 28, scope: !4668)
!4748 = !DILocation(line: 1527, column: 10, scope: !4668)
!4749 = !DILocation(line: 1528, column: 28, scope: !4668)
!4750 = !DILocation(line: 1528, column: 10, scope: !4668)
!4751 = !DILocation(line: 1529, column: 28, scope: !4668)
!4752 = !DILocation(line: 1529, column: 10, scope: !4668)
!4753 = !DILocation(line: 1530, column: 28, scope: !4668)
!4754 = !DILocation(line: 1530, column: 10, scope: !4668)
!4755 = !DILocation(line: 1531, column: 28, scope: !4668)
!4756 = !DILocation(line: 1531, column: 10, scope: !4668)
!4757 = !DILocation(line: 1532, column: 28, scope: !4668)
!4758 = !DILocation(line: 1532, column: 10, scope: !4668)
!4759 = !DILocation(line: 1533, column: 28, scope: !4668)
!4760 = !DILocation(line: 1533, column: 10, scope: !4668)
!4761 = !DILocation(line: 1534, column: 28, scope: !4668)
!4762 = !DILocation(line: 1534, column: 10, scope: !4668)
!4763 = !DILocation(line: 1535, column: 24, scope: !4668)
!4764 = !DILocation(line: 1535, column: 3, scope: !4668)
!4765 = !DILocation(line: 1536, column: 9, scope: !4766)
!4766 = distinct !DILexicalBlock(scope: !4668, file: !1, line: 1536, column: 3)
!4767 = !DILocation(line: 1536, column: 8, scope: !4766)
!4768 = !DILocation(line: 1536, column: 13, scope: !4769)
!4769 = distinct !DILexicalBlock(scope: !4766, file: !1, line: 1536, column: 3)
!4770 = !DILocation(line: 1536, column: 27, scope: !4769)
!4771 = !DILocation(line: 1536, column: 34, scope: !4769)
!4772 = !DILocation(line: 1536, column: 15, scope: !4769)
!4773 = !DILocation(line: 1536, column: 3, scope: !4766)
!4774 = !DILocalVariable(name: "indexes", scope: !4775, file: !1, line: 1539, type: !2952)
!4775 = distinct !DILexicalBlock(scope: !4769, file: !1, line: 1537, column: 3)
!4776 = !DILocation(line: 1539, column: 17, scope: !4775)
!4777 = !DILocalVariable(name: "p", scope: !4775, file: !1, line: 1542, type: !2955)
!4778 = !DILocation(line: 1542, column: 17, scope: !4775)
!4779 = !DILocalVariable(name: "x", scope: !4775, file: !1, line: 1545, type: !557)
!4780 = !DILocation(line: 1545, column: 7, scope: !4775)
!4781 = !DILocation(line: 1550, column: 24, scope: !4775)
!4782 = !DILocation(line: 1550, column: 32, scope: !4775)
!4783 = !DILocation(line: 1550, column: 34, scope: !4775)
!4784 = !DILocation(line: 1550, column: 41, scope: !4775)
!4785 = !DILocation(line: 1550, column: 51, scope: !4775)
!4786 = !DILocation(line: 1550, column: 7, scope: !4775)
!4787 = !DILocation(line: 1550, column: 6, scope: !4775)
!4788 = !DILocation(line: 1551, column: 9, scope: !4789)
!4789 = distinct !DILexicalBlock(scope: !4775, file: !1, line: 1551, column: 9)
!4790 = !DILocation(line: 1551, column: 11, scope: !4789)
!4791 = !DILocation(line: 1551, column: 9, scope: !4775)
!4792 = !DILocation(line: 1552, column: 7, scope: !4789)
!4793 = !DILocation(line: 1553, column: 34, scope: !4775)
!4794 = !DILocation(line: 1553, column: 13, scope: !4775)
!4795 = !DILocation(line: 1553, column: 12, scope: !4775)
!4796 = !DILocation(line: 1554, column: 11, scope: !4797)
!4797 = distinct !DILexicalBlock(scope: !4775, file: !1, line: 1554, column: 5)
!4798 = !DILocation(line: 1554, column: 10, scope: !4797)
!4799 = !DILocation(line: 1554, column: 15, scope: !4800)
!4800 = distinct !DILexicalBlock(scope: !4797, file: !1, line: 1554, column: 5)
!4801 = !DILocation(line: 1554, column: 29, scope: !4800)
!4802 = !DILocation(line: 1554, column: 36, scope: !4800)
!4803 = !DILocation(line: 1554, column: 17, scope: !4800)
!4804 = !DILocation(line: 1554, column: 5, scope: !4797)
!4805 = !DILocation(line: 1556, column: 28, scope: !4806)
!4806 = distinct !DILexicalBlock(scope: !4800, file: !1, line: 1555, column: 5)
!4807 = !DILocation(line: 1556, column: 34, scope: !4806)
!4808 = !DILocation(line: 1556, column: 36, scope: !4806)
!4809 = !DILocation(line: 1556, column: 44, scope: !4806)
!4810 = !DILocation(line: 1556, column: 43, scope: !4806)
!4811 = !DILocation(line: 1556, column: 7, scope: !4806)
!4812 = !DILocation(line: 1557, column: 43, scope: !4806)
!4813 = !DILocation(line: 1557, column: 37, scope: !4806)
!4814 = !DILocation(line: 1557, column: 36, scope: !4806)
!4815 = !DILocation(line: 1557, column: 7, scope: !4806)
!4816 = !DILocation(line: 1557, column: 22, scope: !4806)
!4817 = !DILocation(line: 1558, column: 24, scope: !4806)
!4818 = !DILocation(line: 1558, column: 25, scope: !4806)
!4819 = !DILocation(line: 1558, column: 45, scope: !4806)
!4820 = !DILocation(line: 1558, column: 39, scope: !4806)
!4821 = !DILocation(line: 1558, column: 38, scope: !4806)
!4822 = !DILocation(line: 1558, column: 7, scope: !4806)
!4823 = !DILocation(line: 1558, column: 22, scope: !4806)
!4824 = !DILocation(line: 1559, column: 24, scope: !4806)
!4825 = !DILocation(line: 1559, column: 25, scope: !4806)
!4826 = !DILocation(line: 1559, column: 45, scope: !4806)
!4827 = !DILocation(line: 1559, column: 39, scope: !4806)
!4828 = !DILocation(line: 1559, column: 38, scope: !4806)
!4829 = !DILocation(line: 1559, column: 7, scope: !4806)
!4830 = !DILocation(line: 1559, column: 22, scope: !4806)
!4831 = !DILocation(line: 1560, column: 45, scope: !4806)
!4832 = !DILocation(line: 1560, column: 39, scope: !4806)
!4833 = !DILocation(line: 1560, column: 38, scope: !4806)
!4834 = !DILocation(line: 1560, column: 7, scope: !4806)
!4835 = !DILocation(line: 1560, column: 24, scope: !4806)
!4836 = !DILocation(line: 1561, column: 26, scope: !4806)
!4837 = !DILocation(line: 1561, column: 27, scope: !4806)
!4838 = !DILocation(line: 1561, column: 47, scope: !4806)
!4839 = !DILocation(line: 1561, column: 41, scope: !4806)
!4840 = !DILocation(line: 1561, column: 40, scope: !4806)
!4841 = !DILocation(line: 1561, column: 7, scope: !4806)
!4842 = !DILocation(line: 1561, column: 24, scope: !4806)
!4843 = !DILocation(line: 1562, column: 26, scope: !4806)
!4844 = !DILocation(line: 1562, column: 27, scope: !4806)
!4845 = !DILocation(line: 1562, column: 47, scope: !4806)
!4846 = !DILocation(line: 1562, column: 41, scope: !4806)
!4847 = !DILocation(line: 1562, column: 40, scope: !4806)
!4848 = !DILocation(line: 1562, column: 7, scope: !4806)
!4849 = !DILocation(line: 1562, column: 24, scope: !4806)
!4850 = !DILocation(line: 1563, column: 44, scope: !4806)
!4851 = !DILocation(line: 1563, column: 38, scope: !4806)
!4852 = !DILocation(line: 1563, column: 37, scope: !4806)
!4853 = !DILocation(line: 1563, column: 7, scope: !4806)
!4854 = !DILocation(line: 1563, column: 23, scope: !4806)
!4855 = !DILocation(line: 1564, column: 25, scope: !4806)
!4856 = !DILocation(line: 1564, column: 26, scope: !4806)
!4857 = !DILocation(line: 1564, column: 46, scope: !4806)
!4858 = !DILocation(line: 1564, column: 40, scope: !4806)
!4859 = !DILocation(line: 1564, column: 39, scope: !4806)
!4860 = !DILocation(line: 1564, column: 7, scope: !4806)
!4861 = !DILocation(line: 1564, column: 23, scope: !4806)
!4862 = !DILocation(line: 1565, column: 25, scope: !4806)
!4863 = !DILocation(line: 1565, column: 26, scope: !4806)
!4864 = !DILocation(line: 1565, column: 46, scope: !4806)
!4865 = !DILocation(line: 1565, column: 40, scope: !4806)
!4866 = !DILocation(line: 1565, column: 39, scope: !4806)
!4867 = !DILocation(line: 1565, column: 7, scope: !4806)
!4868 = !DILocation(line: 1565, column: 23, scope: !4806)
!4869 = !DILocation(line: 1566, column: 11, scope: !4870)
!4870 = distinct !DILexicalBlock(scope: !4806, file: !1, line: 1566, column: 11)
!4871 = !DILocation(line: 1566, column: 18, scope: !4870)
!4872 = !DILocation(line: 1566, column: 24, scope: !4870)
!4873 = !DILocation(line: 1566, column: 11, scope: !4806)
!4874 = !DILocation(line: 1568, column: 51, scope: !4875)
!4875 = distinct !DILexicalBlock(scope: !4870, file: !1, line: 1567, column: 9)
!4876 = !DILocation(line: 1568, column: 45, scope: !4875)
!4877 = !DILocation(line: 1568, column: 44, scope: !4875)
!4878 = !DILocation(line: 1568, column: 11, scope: !4875)
!4879 = !DILocation(line: 1568, column: 30, scope: !4875)
!4880 = !DILocation(line: 1569, column: 32, scope: !4875)
!4881 = !DILocation(line: 1569, column: 33, scope: !4875)
!4882 = !DILocation(line: 1569, column: 53, scope: !4875)
!4883 = !DILocation(line: 1569, column: 47, scope: !4875)
!4884 = !DILocation(line: 1569, column: 46, scope: !4875)
!4885 = !DILocation(line: 1569, column: 11, scope: !4875)
!4886 = !DILocation(line: 1569, column: 30, scope: !4875)
!4887 = !DILocation(line: 1570, column: 32, scope: !4875)
!4888 = !DILocation(line: 1570, column: 33, scope: !4875)
!4889 = !DILocation(line: 1570, column: 53, scope: !4875)
!4890 = !DILocation(line: 1570, column: 47, scope: !4875)
!4891 = !DILocation(line: 1570, column: 46, scope: !4875)
!4892 = !DILocation(line: 1570, column: 11, scope: !4875)
!4893 = !DILocation(line: 1570, column: 30, scope: !4875)
!4894 = !DILocation(line: 1571, column: 9, scope: !4875)
!4895 = !DILocation(line: 1572, column: 11, scope: !4896)
!4896 = distinct !DILexicalBlock(scope: !4806, file: !1, line: 1572, column: 11)
!4897 = !DILocation(line: 1572, column: 18, scope: !4896)
!4898 = !DILocation(line: 1572, column: 29, scope: !4896)
!4899 = !DILocation(line: 1572, column: 11, scope: !4806)
!4900 = !DILocation(line: 1574, column: 49, scope: !4901)
!4901 = distinct !DILexicalBlock(scope: !4896, file: !1, line: 1573, column: 9)
!4902 = !DILocation(line: 1574, column: 43, scope: !4901)
!4903 = !DILocation(line: 1574, column: 42, scope: !4901)
!4904 = !DILocation(line: 1574, column: 11, scope: !4901)
!4905 = !DILocation(line: 1574, column: 28, scope: !4901)
!4906 = !DILocation(line: 1575, column: 30, scope: !4901)
!4907 = !DILocation(line: 1575, column: 31, scope: !4901)
!4908 = !DILocation(line: 1575, column: 51, scope: !4901)
!4909 = !DILocation(line: 1575, column: 45, scope: !4901)
!4910 = !DILocation(line: 1575, column: 44, scope: !4901)
!4911 = !DILocation(line: 1575, column: 11, scope: !4901)
!4912 = !DILocation(line: 1575, column: 28, scope: !4901)
!4913 = !DILocation(line: 1576, column: 30, scope: !4901)
!4914 = !DILocation(line: 1576, column: 31, scope: !4901)
!4915 = !DILocation(line: 1576, column: 51, scope: !4901)
!4916 = !DILocation(line: 1576, column: 45, scope: !4901)
!4917 = !DILocation(line: 1576, column: 44, scope: !4901)
!4918 = !DILocation(line: 1576, column: 11, scope: !4901)
!4919 = !DILocation(line: 1576, column: 28, scope: !4901)
!4920 = !DILocation(line: 1577, column: 9, scope: !4901)
!4921 = !DILocation(line: 1578, column: 8, scope: !4806)
!4922 = !DILocation(line: 1579, column: 5, scope: !4806)
!4923 = !DILocation(line: 1554, column: 46, scope: !4800)
!4924 = !DILocation(line: 1554, column: 5, scope: !4800)
!4925 = distinct !{!4925, !4804, !4926}
!4926 = !DILocation(line: 1579, column: 5, scope: !4797)
!4927 = !DILocation(line: 1580, column: 3, scope: !4775)
!4928 = !DILocation(line: 1536, column: 41, scope: !4769)
!4929 = !DILocation(line: 1536, column: 3, scope: !4769)
!4930 = distinct !{!4930, !4773, !4931}
!4931 = !DILocation(line: 1580, column: 3, scope: !4766)
!4932 = !DILocation(line: 1581, column: 15, scope: !4933)
!4933 = distinct !DILexicalBlock(scope: !4668, file: !1, line: 1581, column: 3)
!4934 = !DILocation(line: 1581, column: 8, scope: !4933)
!4935 = !DILocation(line: 1581, column: 19, scope: !4936)
!4936 = distinct !DILexicalBlock(scope: !4933, file: !1, line: 1581, column: 3)
!4937 = !DILocation(line: 1581, column: 27, scope: !4936)
!4938 = !DILocation(line: 1581, column: 3, scope: !4933)
!4939 = !DILocation(line: 1586, column: 13, scope: !4940)
!4940 = distinct !DILexicalBlock(scope: !4941, file: !1, line: 1586, column: 9)
!4941 = distinct !DILexicalBlock(scope: !4936, file: !1, line: 1582, column: 3)
!4942 = !DILocation(line: 1586, column: 9, scope: !4940)
!4943 = !DILocation(line: 1586, column: 22, scope: !4940)
!4944 = !DILocation(line: 1586, column: 9, scope: !4941)
!4945 = !DILocation(line: 1588, column: 13, scope: !4946)
!4946 = distinct !DILexicalBlock(scope: !4940, file: !1, line: 1587, column: 7)
!4947 = !DILocation(line: 1588, column: 9, scope: !4946)
!4948 = !DILocation(line: 1588, column: 21, scope: !4946)
!4949 = !DILocation(line: 1589, column: 38, scope: !4946)
!4950 = !DILocation(line: 1589, column: 45, scope: !4946)
!4951 = !DILocation(line: 1589, column: 29, scope: !4946)
!4952 = !DILocation(line: 1589, column: 52, scope: !4946)
!4953 = !DILocation(line: 1589, column: 18, scope: !4946)
!4954 = !DILocation(line: 1589, column: 9, scope: !4946)
!4955 = !DILocation(line: 1589, column: 27, scope: !4946)
!4956 = !DILocation(line: 1589, column: 28, scope: !4946)
!4957 = !DILocation(line: 1590, column: 38, scope: !4946)
!4958 = !DILocation(line: 1590, column: 45, scope: !4946)
!4959 = !DILocation(line: 1590, column: 29, scope: !4946)
!4960 = !DILocation(line: 1590, column: 49, scope: !4946)
!4961 = !DILocation(line: 1590, column: 18, scope: !4946)
!4962 = !DILocation(line: 1590, column: 9, scope: !4946)
!4963 = !DILocation(line: 1590, column: 27, scope: !4946)
!4964 = !DILocation(line: 1590, column: 28, scope: !4946)
!4965 = !DILocation(line: 1591, column: 9, scope: !4946)
!4966 = !DILocation(line: 1593, column: 9, scope: !4941)
!4967 = !DILocation(line: 1593, column: 5, scope: !4941)
!4968 = !DILocation(line: 1593, column: 17, scope: !4941)
!4969 = !DILocation(line: 1594, column: 29, scope: !4941)
!4970 = !DILocation(line: 1594, column: 25, scope: !4941)
!4971 = !DILocation(line: 1594, column: 42, scope: !4941)
!4972 = !DILocation(line: 1594, column: 38, scope: !4941)
!4973 = !DILocation(line: 1594, column: 37, scope: !4941)
!4974 = !DILocation(line: 1594, column: 14, scope: !4941)
!4975 = !DILocation(line: 1594, column: 5, scope: !4941)
!4976 = !DILocation(line: 1594, column: 23, scope: !4941)
!4977 = !DILocation(line: 1594, column: 24, scope: !4941)
!4978 = !DILocation(line: 1595, column: 29, scope: !4941)
!4979 = !DILocation(line: 1595, column: 25, scope: !4941)
!4980 = !DILocation(line: 1595, column: 42, scope: !4941)
!4981 = !DILocation(line: 1595, column: 38, scope: !4941)
!4982 = !DILocation(line: 1595, column: 37, scope: !4941)
!4983 = !DILocation(line: 1595, column: 14, scope: !4941)
!4984 = !DILocation(line: 1595, column: 5, scope: !4941)
!4985 = !DILocation(line: 1595, column: 23, scope: !4941)
!4986 = !DILocation(line: 1595, column: 24, scope: !4941)
!4987 = !DILocation(line: 1596, column: 3, scope: !4941)
!4988 = !DILocation(line: 1581, column: 56, scope: !4936)
!4989 = !DILocation(line: 1581, column: 3, scope: !4936)
!4990 = distinct !{!4990, !4938, !4991}
!4991 = !DILocation(line: 1596, column: 3, scope: !4933)
!4992 = !DILocation(line: 1597, column: 9, scope: !4993)
!4993 = distinct !DILexicalBlock(scope: !4668, file: !1, line: 1597, column: 3)
!4994 = !DILocation(line: 1597, column: 8, scope: !4993)
!4995 = !DILocation(line: 1597, column: 13, scope: !4996)
!4996 = distinct !DILexicalBlock(scope: !4993, file: !1, line: 1597, column: 3)
!4997 = !DILocation(line: 1597, column: 27, scope: !4996)
!4998 = !DILocation(line: 1597, column: 34, scope: !4996)
!4999 = !DILocation(line: 1597, column: 15, scope: !4996)
!5000 = !DILocation(line: 1597, column: 3, scope: !4993)
!5001 = !DILocalVariable(name: "indexes", scope: !5002, file: !1, line: 1600, type: !2952)
!5002 = distinct !DILexicalBlock(scope: !4996, file: !1, line: 1598, column: 3)
!5003 = !DILocation(line: 1600, column: 17, scope: !5002)
!5004 = !DILocalVariable(name: "p", scope: !5002, file: !1, line: 1603, type: !2955)
!5005 = !DILocation(line: 1603, column: 17, scope: !5002)
!5006 = !DILocalVariable(name: "x", scope: !5002, file: !1, line: 1606, type: !557)
!5007 = !DILocation(line: 1606, column: 7, scope: !5002)
!5008 = !DILocation(line: 1611, column: 24, scope: !5002)
!5009 = !DILocation(line: 1611, column: 32, scope: !5002)
!5010 = !DILocation(line: 1611, column: 34, scope: !5002)
!5011 = !DILocation(line: 1611, column: 41, scope: !5002)
!5012 = !DILocation(line: 1611, column: 51, scope: !5002)
!5013 = !DILocation(line: 1611, column: 7, scope: !5002)
!5014 = !DILocation(line: 1611, column: 6, scope: !5002)
!5015 = !DILocation(line: 1612, column: 9, scope: !5016)
!5016 = distinct !DILexicalBlock(scope: !5002, file: !1, line: 1612, column: 9)
!5017 = !DILocation(line: 1612, column: 11, scope: !5016)
!5018 = !DILocation(line: 1612, column: 9, scope: !5002)
!5019 = !DILocation(line: 1613, column: 7, scope: !5016)
!5020 = !DILocation(line: 1614, column: 34, scope: !5002)
!5021 = !DILocation(line: 1614, column: 13, scope: !5002)
!5022 = !DILocation(line: 1614, column: 12, scope: !5002)
!5023 = !DILocation(line: 1615, column: 11, scope: !5024)
!5024 = distinct !DILexicalBlock(scope: !5002, file: !1, line: 1615, column: 5)
!5025 = !DILocation(line: 1615, column: 10, scope: !5024)
!5026 = !DILocation(line: 1615, column: 15, scope: !5027)
!5027 = distinct !DILexicalBlock(scope: !5024, file: !1, line: 1615, column: 5)
!5028 = !DILocation(line: 1615, column: 29, scope: !5027)
!5029 = !DILocation(line: 1615, column: 36, scope: !5027)
!5030 = !DILocation(line: 1615, column: 17, scope: !5027)
!5031 = !DILocation(line: 1615, column: 5, scope: !5024)
!5032 = !DILocation(line: 1617, column: 28, scope: !5033)
!5033 = distinct !DILexicalBlock(scope: !5027, file: !1, line: 1616, column: 5)
!5034 = !DILocation(line: 1617, column: 34, scope: !5033)
!5035 = !DILocation(line: 1617, column: 36, scope: !5033)
!5036 = !DILocation(line: 1617, column: 44, scope: !5033)
!5037 = !DILocation(line: 1617, column: 43, scope: !5033)
!5038 = !DILocation(line: 1617, column: 7, scope: !5033)
!5039 = !DILocation(line: 1618, column: 25, scope: !5033)
!5040 = !DILocation(line: 1618, column: 27, scope: !5033)
!5041 = !DILocation(line: 1618, column: 48, scope: !5033)
!5042 = !DILocation(line: 1618, column: 26, scope: !5033)
!5043 = !DILocation(line: 1618, column: 52, scope: !5033)
!5044 = !DILocation(line: 1619, column: 9, scope: !5033)
!5045 = !DILocation(line: 1619, column: 30, scope: !5033)
!5046 = !DILocation(line: 1618, column: 53, scope: !5033)
!5047 = !DILocation(line: 1618, column: 50, scope: !5033)
!5048 = !DILocation(line: 1619, column: 32, scope: !5033)
!5049 = !DILocation(line: 1619, column: 52, scope: !5033)
!5050 = !DILocation(line: 1619, column: 46, scope: !5033)
!5051 = !DILocation(line: 1619, column: 45, scope: !5033)
!5052 = !DILocation(line: 1618, column: 7, scope: !5033)
!5053 = !DILocation(line: 1618, column: 22, scope: !5033)
!5054 = !DILocation(line: 1620, column: 25, scope: !5033)
!5055 = !DILocation(line: 1620, column: 27, scope: !5033)
!5056 = !DILocation(line: 1620, column: 48, scope: !5033)
!5057 = !DILocation(line: 1620, column: 26, scope: !5033)
!5058 = !DILocation(line: 1620, column: 52, scope: !5033)
!5059 = !DILocation(line: 1621, column: 9, scope: !5033)
!5060 = !DILocation(line: 1621, column: 30, scope: !5033)
!5061 = !DILocation(line: 1620, column: 53, scope: !5033)
!5062 = !DILocation(line: 1620, column: 50, scope: !5033)
!5063 = !DILocation(line: 1621, column: 32, scope: !5033)
!5064 = !DILocation(line: 1621, column: 52, scope: !5033)
!5065 = !DILocation(line: 1621, column: 46, scope: !5033)
!5066 = !DILocation(line: 1621, column: 45, scope: !5033)
!5067 = !DILocation(line: 1620, column: 7, scope: !5033)
!5068 = !DILocation(line: 1620, column: 22, scope: !5033)
!5069 = !DILocation(line: 1622, column: 25, scope: !5033)
!5070 = !DILocation(line: 1622, column: 27, scope: !5033)
!5071 = !DILocation(line: 1622, column: 48, scope: !5033)
!5072 = !DILocation(line: 1622, column: 26, scope: !5033)
!5073 = !DILocation(line: 1622, column: 52, scope: !5033)
!5074 = !DILocation(line: 1623, column: 9, scope: !5033)
!5075 = !DILocation(line: 1623, column: 30, scope: !5033)
!5076 = !DILocation(line: 1622, column: 53, scope: !5033)
!5077 = !DILocation(line: 1622, column: 50, scope: !5033)
!5078 = !DILocation(line: 1623, column: 32, scope: !5033)
!5079 = !DILocation(line: 1623, column: 52, scope: !5033)
!5080 = !DILocation(line: 1623, column: 46, scope: !5033)
!5081 = !DILocation(line: 1623, column: 45, scope: !5033)
!5082 = !DILocation(line: 1622, column: 7, scope: !5033)
!5083 = !DILocation(line: 1622, column: 22, scope: !5033)
!5084 = !DILocation(line: 1624, column: 25, scope: !5033)
!5085 = !DILocation(line: 1624, column: 27, scope: !5033)
!5086 = !DILocation(line: 1624, column: 48, scope: !5033)
!5087 = !DILocation(line: 1624, column: 26, scope: !5033)
!5088 = !DILocation(line: 1624, column: 52, scope: !5033)
!5089 = !DILocation(line: 1625, column: 9, scope: !5033)
!5090 = !DILocation(line: 1625, column: 30, scope: !5033)
!5091 = !DILocation(line: 1624, column: 53, scope: !5033)
!5092 = !DILocation(line: 1624, column: 50, scope: !5033)
!5093 = !DILocation(line: 1625, column: 34, scope: !5033)
!5094 = !DILocation(line: 1625, column: 36, scope: !5033)
!5095 = !DILocation(line: 1625, column: 57, scope: !5033)
!5096 = !DILocation(line: 1625, column: 35, scope: !5033)
!5097 = !DILocation(line: 1625, column: 32, scope: !5033)
!5098 = !DILocation(line: 1625, column: 59, scope: !5033)
!5099 = !DILocation(line: 1626, column: 15, scope: !5033)
!5100 = !DILocation(line: 1626, column: 9, scope: !5033)
!5101 = !DILocation(line: 1625, column: 72, scope: !5033)
!5102 = !DILocation(line: 1624, column: 7, scope: !5033)
!5103 = !DILocation(line: 1624, column: 22, scope: !5033)
!5104 = !DILocation(line: 1627, column: 25, scope: !5033)
!5105 = !DILocation(line: 1627, column: 27, scope: !5033)
!5106 = !DILocation(line: 1627, column: 48, scope: !5033)
!5107 = !DILocation(line: 1627, column: 26, scope: !5033)
!5108 = !DILocation(line: 1627, column: 52, scope: !5033)
!5109 = !DILocation(line: 1628, column: 9, scope: !5033)
!5110 = !DILocation(line: 1628, column: 30, scope: !5033)
!5111 = !DILocation(line: 1627, column: 53, scope: !5033)
!5112 = !DILocation(line: 1627, column: 50, scope: !5033)
!5113 = !DILocation(line: 1628, column: 34, scope: !5033)
!5114 = !DILocation(line: 1628, column: 36, scope: !5033)
!5115 = !DILocation(line: 1628, column: 57, scope: !5033)
!5116 = !DILocation(line: 1628, column: 35, scope: !5033)
!5117 = !DILocation(line: 1628, column: 32, scope: !5033)
!5118 = !DILocation(line: 1628, column: 59, scope: !5033)
!5119 = !DILocation(line: 1629, column: 15, scope: !5033)
!5120 = !DILocation(line: 1629, column: 9, scope: !5033)
!5121 = !DILocation(line: 1628, column: 72, scope: !5033)
!5122 = !DILocation(line: 1627, column: 7, scope: !5033)
!5123 = !DILocation(line: 1627, column: 22, scope: !5033)
!5124 = !DILocation(line: 1630, column: 25, scope: !5033)
!5125 = !DILocation(line: 1630, column: 27, scope: !5033)
!5126 = !DILocation(line: 1630, column: 48, scope: !5033)
!5127 = !DILocation(line: 1630, column: 26, scope: !5033)
!5128 = !DILocation(line: 1630, column: 52, scope: !5033)
!5129 = !DILocation(line: 1631, column: 9, scope: !5033)
!5130 = !DILocation(line: 1631, column: 30, scope: !5033)
!5131 = !DILocation(line: 1630, column: 53, scope: !5033)
!5132 = !DILocation(line: 1630, column: 50, scope: !5033)
!5133 = !DILocation(line: 1631, column: 34, scope: !5033)
!5134 = !DILocation(line: 1631, column: 36, scope: !5033)
!5135 = !DILocation(line: 1631, column: 57, scope: !5033)
!5136 = !DILocation(line: 1631, column: 35, scope: !5033)
!5137 = !DILocation(line: 1631, column: 32, scope: !5033)
!5138 = !DILocation(line: 1631, column: 61, scope: !5033)
!5139 = !DILocation(line: 1632, column: 9, scope: !5033)
!5140 = !DILocation(line: 1632, column: 30, scope: !5033)
!5141 = !DILocation(line: 1631, column: 62, scope: !5033)
!5142 = !DILocation(line: 1631, column: 59, scope: !5033)
!5143 = !DILocation(line: 1632, column: 32, scope: !5033)
!5144 = !DILocation(line: 1632, column: 52, scope: !5033)
!5145 = !DILocation(line: 1632, column: 46, scope: !5033)
!5146 = !DILocation(line: 1632, column: 45, scope: !5033)
!5147 = !DILocation(line: 1630, column: 7, scope: !5033)
!5148 = !DILocation(line: 1630, column: 22, scope: !5033)
!5149 = !DILocation(line: 1633, column: 25, scope: !5033)
!5150 = !DILocation(line: 1633, column: 27, scope: !5033)
!5151 = !DILocation(line: 1633, column: 48, scope: !5033)
!5152 = !DILocation(line: 1633, column: 26, scope: !5033)
!5153 = !DILocation(line: 1633, column: 52, scope: !5033)
!5154 = !DILocation(line: 1634, column: 9, scope: !5033)
!5155 = !DILocation(line: 1634, column: 30, scope: !5033)
!5156 = !DILocation(line: 1633, column: 53, scope: !5033)
!5157 = !DILocation(line: 1633, column: 50, scope: !5033)
!5158 = !DILocation(line: 1634, column: 34, scope: !5033)
!5159 = !DILocation(line: 1634, column: 36, scope: !5033)
!5160 = !DILocation(line: 1634, column: 57, scope: !5033)
!5161 = !DILocation(line: 1634, column: 35, scope: !5033)
!5162 = !DILocation(line: 1634, column: 32, scope: !5033)
!5163 = !DILocation(line: 1634, column: 59, scope: !5033)
!5164 = !DILocation(line: 1635, column: 15, scope: !5033)
!5165 = !DILocation(line: 1635, column: 9, scope: !5033)
!5166 = !DILocation(line: 1634, column: 72, scope: !5033)
!5167 = !DILocation(line: 1633, column: 7, scope: !5033)
!5168 = !DILocation(line: 1633, column: 22, scope: !5033)
!5169 = !DILocation(line: 1636, column: 25, scope: !5033)
!5170 = !DILocation(line: 1636, column: 27, scope: !5033)
!5171 = !DILocation(line: 1636, column: 48, scope: !5033)
!5172 = !DILocation(line: 1636, column: 26, scope: !5033)
!5173 = !DILocation(line: 1636, column: 52, scope: !5033)
!5174 = !DILocation(line: 1637, column: 9, scope: !5033)
!5175 = !DILocation(line: 1637, column: 30, scope: !5033)
!5176 = !DILocation(line: 1636, column: 53, scope: !5033)
!5177 = !DILocation(line: 1636, column: 50, scope: !5033)
!5178 = !DILocation(line: 1637, column: 34, scope: !5033)
!5179 = !DILocation(line: 1637, column: 36, scope: !5033)
!5180 = !DILocation(line: 1637, column: 57, scope: !5033)
!5181 = !DILocation(line: 1637, column: 35, scope: !5033)
!5182 = !DILocation(line: 1637, column: 32, scope: !5033)
!5183 = !DILocation(line: 1637, column: 59, scope: !5033)
!5184 = !DILocation(line: 1638, column: 15, scope: !5033)
!5185 = !DILocation(line: 1638, column: 9, scope: !5033)
!5186 = !DILocation(line: 1637, column: 72, scope: !5033)
!5187 = !DILocation(line: 1636, column: 7, scope: !5033)
!5188 = !DILocation(line: 1636, column: 22, scope: !5033)
!5189 = !DILocation(line: 1639, column: 27, scope: !5033)
!5190 = !DILocation(line: 1639, column: 29, scope: !5033)
!5191 = !DILocation(line: 1639, column: 52, scope: !5033)
!5192 = !DILocation(line: 1639, column: 28, scope: !5033)
!5193 = !DILocation(line: 1639, column: 56, scope: !5033)
!5194 = !DILocation(line: 1640, column: 9, scope: !5033)
!5195 = !DILocation(line: 1640, column: 32, scope: !5033)
!5196 = !DILocation(line: 1639, column: 57, scope: !5033)
!5197 = !DILocation(line: 1639, column: 54, scope: !5033)
!5198 = !DILocation(line: 1640, column: 34, scope: !5033)
!5199 = !DILocation(line: 1640, column: 54, scope: !5033)
!5200 = !DILocation(line: 1640, column: 48, scope: !5033)
!5201 = !DILocation(line: 1640, column: 47, scope: !5033)
!5202 = !DILocation(line: 1639, column: 7, scope: !5033)
!5203 = !DILocation(line: 1639, column: 24, scope: !5033)
!5204 = !DILocation(line: 1641, column: 27, scope: !5033)
!5205 = !DILocation(line: 1641, column: 29, scope: !5033)
!5206 = !DILocation(line: 1641, column: 52, scope: !5033)
!5207 = !DILocation(line: 1641, column: 28, scope: !5033)
!5208 = !DILocation(line: 1641, column: 56, scope: !5033)
!5209 = !DILocation(line: 1642, column: 9, scope: !5033)
!5210 = !DILocation(line: 1642, column: 32, scope: !5033)
!5211 = !DILocation(line: 1641, column: 57, scope: !5033)
!5212 = !DILocation(line: 1641, column: 54, scope: !5033)
!5213 = !DILocation(line: 1642, column: 34, scope: !5033)
!5214 = !DILocation(line: 1642, column: 54, scope: !5033)
!5215 = !DILocation(line: 1642, column: 48, scope: !5033)
!5216 = !DILocation(line: 1642, column: 47, scope: !5033)
!5217 = !DILocation(line: 1641, column: 7, scope: !5033)
!5218 = !DILocation(line: 1641, column: 24, scope: !5033)
!5219 = !DILocation(line: 1643, column: 27, scope: !5033)
!5220 = !DILocation(line: 1643, column: 29, scope: !5033)
!5221 = !DILocation(line: 1643, column: 52, scope: !5033)
!5222 = !DILocation(line: 1643, column: 28, scope: !5033)
!5223 = !DILocation(line: 1643, column: 56, scope: !5033)
!5224 = !DILocation(line: 1644, column: 9, scope: !5033)
!5225 = !DILocation(line: 1644, column: 32, scope: !5033)
!5226 = !DILocation(line: 1643, column: 57, scope: !5033)
!5227 = !DILocation(line: 1643, column: 54, scope: !5033)
!5228 = !DILocation(line: 1644, column: 34, scope: !5033)
!5229 = !DILocation(line: 1644, column: 54, scope: !5033)
!5230 = !DILocation(line: 1644, column: 48, scope: !5033)
!5231 = !DILocation(line: 1644, column: 47, scope: !5033)
!5232 = !DILocation(line: 1643, column: 7, scope: !5033)
!5233 = !DILocation(line: 1643, column: 24, scope: !5033)
!5234 = !DILocation(line: 1645, column: 27, scope: !5033)
!5235 = !DILocation(line: 1645, column: 29, scope: !5033)
!5236 = !DILocation(line: 1645, column: 52, scope: !5033)
!5237 = !DILocation(line: 1645, column: 28, scope: !5033)
!5238 = !DILocation(line: 1645, column: 56, scope: !5033)
!5239 = !DILocation(line: 1646, column: 9, scope: !5033)
!5240 = !DILocation(line: 1646, column: 32, scope: !5033)
!5241 = !DILocation(line: 1645, column: 57, scope: !5033)
!5242 = !DILocation(line: 1645, column: 54, scope: !5033)
!5243 = !DILocation(line: 1646, column: 36, scope: !5033)
!5244 = !DILocation(line: 1646, column: 38, scope: !5033)
!5245 = !DILocation(line: 1646, column: 61, scope: !5033)
!5246 = !DILocation(line: 1646, column: 37, scope: !5033)
!5247 = !DILocation(line: 1646, column: 34, scope: !5033)
!5248 = !DILocation(line: 1646, column: 63, scope: !5033)
!5249 = !DILocation(line: 1647, column: 15, scope: !5033)
!5250 = !DILocation(line: 1647, column: 9, scope: !5033)
!5251 = !DILocation(line: 1646, column: 76, scope: !5033)
!5252 = !DILocation(line: 1645, column: 7, scope: !5033)
!5253 = !DILocation(line: 1645, column: 24, scope: !5033)
!5254 = !DILocation(line: 1648, column: 27, scope: !5033)
!5255 = !DILocation(line: 1648, column: 29, scope: !5033)
!5256 = !DILocation(line: 1648, column: 52, scope: !5033)
!5257 = !DILocation(line: 1648, column: 28, scope: !5033)
!5258 = !DILocation(line: 1648, column: 56, scope: !5033)
!5259 = !DILocation(line: 1649, column: 9, scope: !5033)
!5260 = !DILocation(line: 1649, column: 32, scope: !5033)
!5261 = !DILocation(line: 1648, column: 57, scope: !5033)
!5262 = !DILocation(line: 1648, column: 54, scope: !5033)
!5263 = !DILocation(line: 1649, column: 36, scope: !5033)
!5264 = !DILocation(line: 1649, column: 38, scope: !5033)
!5265 = !DILocation(line: 1649, column: 61, scope: !5033)
!5266 = !DILocation(line: 1649, column: 37, scope: !5033)
!5267 = !DILocation(line: 1649, column: 34, scope: !5033)
!5268 = !DILocation(line: 1649, column: 63, scope: !5033)
!5269 = !DILocation(line: 1650, column: 15, scope: !5033)
!5270 = !DILocation(line: 1650, column: 9, scope: !5033)
!5271 = !DILocation(line: 1649, column: 76, scope: !5033)
!5272 = !DILocation(line: 1648, column: 7, scope: !5033)
!5273 = !DILocation(line: 1648, column: 24, scope: !5033)
!5274 = !DILocation(line: 1651, column: 27, scope: !5033)
!5275 = !DILocation(line: 1651, column: 29, scope: !5033)
!5276 = !DILocation(line: 1651, column: 52, scope: !5033)
!5277 = !DILocation(line: 1651, column: 28, scope: !5033)
!5278 = !DILocation(line: 1651, column: 56, scope: !5033)
!5279 = !DILocation(line: 1652, column: 9, scope: !5033)
!5280 = !DILocation(line: 1652, column: 32, scope: !5033)
!5281 = !DILocation(line: 1651, column: 57, scope: !5033)
!5282 = !DILocation(line: 1651, column: 54, scope: !5033)
!5283 = !DILocation(line: 1652, column: 36, scope: !5033)
!5284 = !DILocation(line: 1652, column: 38, scope: !5033)
!5285 = !DILocation(line: 1652, column: 61, scope: !5033)
!5286 = !DILocation(line: 1652, column: 37, scope: !5033)
!5287 = !DILocation(line: 1652, column: 34, scope: !5033)
!5288 = !DILocation(line: 1652, column: 65, scope: !5033)
!5289 = !DILocation(line: 1653, column: 9, scope: !5033)
!5290 = !DILocation(line: 1653, column: 32, scope: !5033)
!5291 = !DILocation(line: 1652, column: 66, scope: !5033)
!5292 = !DILocation(line: 1652, column: 63, scope: !5033)
!5293 = !DILocation(line: 1653, column: 34, scope: !5033)
!5294 = !DILocation(line: 1653, column: 54, scope: !5033)
!5295 = !DILocation(line: 1653, column: 48, scope: !5033)
!5296 = !DILocation(line: 1653, column: 47, scope: !5033)
!5297 = !DILocation(line: 1651, column: 7, scope: !5033)
!5298 = !DILocation(line: 1651, column: 24, scope: !5033)
!5299 = !DILocation(line: 1654, column: 27, scope: !5033)
!5300 = !DILocation(line: 1654, column: 29, scope: !5033)
!5301 = !DILocation(line: 1654, column: 52, scope: !5033)
!5302 = !DILocation(line: 1654, column: 28, scope: !5033)
!5303 = !DILocation(line: 1654, column: 56, scope: !5033)
!5304 = !DILocation(line: 1655, column: 9, scope: !5033)
!5305 = !DILocation(line: 1655, column: 32, scope: !5033)
!5306 = !DILocation(line: 1654, column: 57, scope: !5033)
!5307 = !DILocation(line: 1654, column: 54, scope: !5033)
!5308 = !DILocation(line: 1655, column: 36, scope: !5033)
!5309 = !DILocation(line: 1655, column: 38, scope: !5033)
!5310 = !DILocation(line: 1655, column: 61, scope: !5033)
!5311 = !DILocation(line: 1655, column: 37, scope: !5033)
!5312 = !DILocation(line: 1655, column: 34, scope: !5033)
!5313 = !DILocation(line: 1655, column: 63, scope: !5033)
!5314 = !DILocation(line: 1656, column: 15, scope: !5033)
!5315 = !DILocation(line: 1656, column: 9, scope: !5033)
!5316 = !DILocation(line: 1655, column: 76, scope: !5033)
!5317 = !DILocation(line: 1654, column: 7, scope: !5033)
!5318 = !DILocation(line: 1654, column: 24, scope: !5033)
!5319 = !DILocation(line: 1657, column: 27, scope: !5033)
!5320 = !DILocation(line: 1657, column: 29, scope: !5033)
!5321 = !DILocation(line: 1657, column: 52, scope: !5033)
!5322 = !DILocation(line: 1657, column: 28, scope: !5033)
!5323 = !DILocation(line: 1657, column: 56, scope: !5033)
!5324 = !DILocation(line: 1658, column: 9, scope: !5033)
!5325 = !DILocation(line: 1658, column: 32, scope: !5033)
!5326 = !DILocation(line: 1657, column: 57, scope: !5033)
!5327 = !DILocation(line: 1657, column: 54, scope: !5033)
!5328 = !DILocation(line: 1658, column: 36, scope: !5033)
!5329 = !DILocation(line: 1658, column: 38, scope: !5033)
!5330 = !DILocation(line: 1658, column: 61, scope: !5033)
!5331 = !DILocation(line: 1658, column: 37, scope: !5033)
!5332 = !DILocation(line: 1658, column: 34, scope: !5033)
!5333 = !DILocation(line: 1658, column: 63, scope: !5033)
!5334 = !DILocation(line: 1659, column: 15, scope: !5033)
!5335 = !DILocation(line: 1659, column: 9, scope: !5033)
!5336 = !DILocation(line: 1658, column: 76, scope: !5033)
!5337 = !DILocation(line: 1657, column: 7, scope: !5033)
!5338 = !DILocation(line: 1657, column: 24, scope: !5033)
!5339 = !DILocation(line: 1660, column: 26, scope: !5033)
!5340 = !DILocation(line: 1660, column: 28, scope: !5033)
!5341 = !DILocation(line: 1660, column: 50, scope: !5033)
!5342 = !DILocation(line: 1660, column: 27, scope: !5033)
!5343 = !DILocation(line: 1660, column: 54, scope: !5033)
!5344 = !DILocation(line: 1661, column: 9, scope: !5033)
!5345 = !DILocation(line: 1661, column: 31, scope: !5033)
!5346 = !DILocation(line: 1660, column: 55, scope: !5033)
!5347 = !DILocation(line: 1660, column: 52, scope: !5033)
!5348 = !DILocation(line: 1661, column: 33, scope: !5033)
!5349 = !DILocation(line: 1661, column: 53, scope: !5033)
!5350 = !DILocation(line: 1661, column: 47, scope: !5033)
!5351 = !DILocation(line: 1661, column: 46, scope: !5033)
!5352 = !DILocation(line: 1660, column: 7, scope: !5033)
!5353 = !DILocation(line: 1660, column: 23, scope: !5033)
!5354 = !DILocation(line: 1662, column: 26, scope: !5033)
!5355 = !DILocation(line: 1662, column: 28, scope: !5033)
!5356 = !DILocation(line: 1662, column: 50, scope: !5033)
!5357 = !DILocation(line: 1662, column: 27, scope: !5033)
!5358 = !DILocation(line: 1662, column: 54, scope: !5033)
!5359 = !DILocation(line: 1663, column: 9, scope: !5033)
!5360 = !DILocation(line: 1663, column: 31, scope: !5033)
!5361 = !DILocation(line: 1662, column: 55, scope: !5033)
!5362 = !DILocation(line: 1662, column: 52, scope: !5033)
!5363 = !DILocation(line: 1663, column: 33, scope: !5033)
!5364 = !DILocation(line: 1663, column: 53, scope: !5033)
!5365 = !DILocation(line: 1663, column: 47, scope: !5033)
!5366 = !DILocation(line: 1663, column: 46, scope: !5033)
!5367 = !DILocation(line: 1662, column: 7, scope: !5033)
!5368 = !DILocation(line: 1662, column: 23, scope: !5033)
!5369 = !DILocation(line: 1664, column: 26, scope: !5033)
!5370 = !DILocation(line: 1664, column: 28, scope: !5033)
!5371 = !DILocation(line: 1664, column: 50, scope: !5033)
!5372 = !DILocation(line: 1664, column: 27, scope: !5033)
!5373 = !DILocation(line: 1664, column: 54, scope: !5033)
!5374 = !DILocation(line: 1665, column: 9, scope: !5033)
!5375 = !DILocation(line: 1665, column: 31, scope: !5033)
!5376 = !DILocation(line: 1664, column: 55, scope: !5033)
!5377 = !DILocation(line: 1664, column: 52, scope: !5033)
!5378 = !DILocation(line: 1665, column: 33, scope: !5033)
!5379 = !DILocation(line: 1665, column: 53, scope: !5033)
!5380 = !DILocation(line: 1665, column: 47, scope: !5033)
!5381 = !DILocation(line: 1665, column: 46, scope: !5033)
!5382 = !DILocation(line: 1664, column: 7, scope: !5033)
!5383 = !DILocation(line: 1664, column: 23, scope: !5033)
!5384 = !DILocation(line: 1666, column: 26, scope: !5033)
!5385 = !DILocation(line: 1666, column: 28, scope: !5033)
!5386 = !DILocation(line: 1666, column: 50, scope: !5033)
!5387 = !DILocation(line: 1666, column: 27, scope: !5033)
!5388 = !DILocation(line: 1666, column: 54, scope: !5033)
!5389 = !DILocation(line: 1667, column: 9, scope: !5033)
!5390 = !DILocation(line: 1667, column: 31, scope: !5033)
!5391 = !DILocation(line: 1666, column: 55, scope: !5033)
!5392 = !DILocation(line: 1666, column: 52, scope: !5033)
!5393 = !DILocation(line: 1667, column: 35, scope: !5033)
!5394 = !DILocation(line: 1667, column: 37, scope: !5033)
!5395 = !DILocation(line: 1667, column: 59, scope: !5033)
!5396 = !DILocation(line: 1667, column: 36, scope: !5033)
!5397 = !DILocation(line: 1667, column: 33, scope: !5033)
!5398 = !DILocation(line: 1667, column: 61, scope: !5033)
!5399 = !DILocation(line: 1668, column: 15, scope: !5033)
!5400 = !DILocation(line: 1668, column: 9, scope: !5033)
!5401 = !DILocation(line: 1667, column: 74, scope: !5033)
!5402 = !DILocation(line: 1666, column: 7, scope: !5033)
!5403 = !DILocation(line: 1666, column: 23, scope: !5033)
!5404 = !DILocation(line: 1669, column: 26, scope: !5033)
!5405 = !DILocation(line: 1669, column: 28, scope: !5033)
!5406 = !DILocation(line: 1669, column: 50, scope: !5033)
!5407 = !DILocation(line: 1669, column: 27, scope: !5033)
!5408 = !DILocation(line: 1669, column: 54, scope: !5033)
!5409 = !DILocation(line: 1670, column: 9, scope: !5033)
!5410 = !DILocation(line: 1670, column: 31, scope: !5033)
!5411 = !DILocation(line: 1669, column: 55, scope: !5033)
!5412 = !DILocation(line: 1669, column: 52, scope: !5033)
!5413 = !DILocation(line: 1670, column: 35, scope: !5033)
!5414 = !DILocation(line: 1670, column: 37, scope: !5033)
!5415 = !DILocation(line: 1670, column: 59, scope: !5033)
!5416 = !DILocation(line: 1670, column: 36, scope: !5033)
!5417 = !DILocation(line: 1670, column: 33, scope: !5033)
!5418 = !DILocation(line: 1670, column: 61, scope: !5033)
!5419 = !DILocation(line: 1671, column: 15, scope: !5033)
!5420 = !DILocation(line: 1671, column: 9, scope: !5033)
!5421 = !DILocation(line: 1670, column: 74, scope: !5033)
!5422 = !DILocation(line: 1669, column: 7, scope: !5033)
!5423 = !DILocation(line: 1669, column: 23, scope: !5033)
!5424 = !DILocation(line: 1672, column: 26, scope: !5033)
!5425 = !DILocation(line: 1672, column: 28, scope: !5033)
!5426 = !DILocation(line: 1672, column: 50, scope: !5033)
!5427 = !DILocation(line: 1672, column: 27, scope: !5033)
!5428 = !DILocation(line: 1672, column: 54, scope: !5033)
!5429 = !DILocation(line: 1673, column: 9, scope: !5033)
!5430 = !DILocation(line: 1673, column: 31, scope: !5033)
!5431 = !DILocation(line: 1672, column: 55, scope: !5033)
!5432 = !DILocation(line: 1672, column: 52, scope: !5033)
!5433 = !DILocation(line: 1673, column: 35, scope: !5033)
!5434 = !DILocation(line: 1673, column: 37, scope: !5033)
!5435 = !DILocation(line: 1673, column: 59, scope: !5033)
!5436 = !DILocation(line: 1673, column: 36, scope: !5033)
!5437 = !DILocation(line: 1673, column: 33, scope: !5033)
!5438 = !DILocation(line: 1673, column: 63, scope: !5033)
!5439 = !DILocation(line: 1674, column: 9, scope: !5033)
!5440 = !DILocation(line: 1674, column: 31, scope: !5033)
!5441 = !DILocation(line: 1673, column: 64, scope: !5033)
!5442 = !DILocation(line: 1673, column: 61, scope: !5033)
!5443 = !DILocation(line: 1674, column: 33, scope: !5033)
!5444 = !DILocation(line: 1674, column: 53, scope: !5033)
!5445 = !DILocation(line: 1674, column: 47, scope: !5033)
!5446 = !DILocation(line: 1674, column: 46, scope: !5033)
!5447 = !DILocation(line: 1672, column: 7, scope: !5033)
!5448 = !DILocation(line: 1672, column: 23, scope: !5033)
!5449 = !DILocation(line: 1675, column: 26, scope: !5033)
!5450 = !DILocation(line: 1675, column: 28, scope: !5033)
!5451 = !DILocation(line: 1675, column: 50, scope: !5033)
!5452 = !DILocation(line: 1675, column: 27, scope: !5033)
!5453 = !DILocation(line: 1675, column: 54, scope: !5033)
!5454 = !DILocation(line: 1676, column: 9, scope: !5033)
!5455 = !DILocation(line: 1676, column: 31, scope: !5033)
!5456 = !DILocation(line: 1675, column: 55, scope: !5033)
!5457 = !DILocation(line: 1675, column: 52, scope: !5033)
!5458 = !DILocation(line: 1676, column: 35, scope: !5033)
!5459 = !DILocation(line: 1676, column: 37, scope: !5033)
!5460 = !DILocation(line: 1676, column: 59, scope: !5033)
!5461 = !DILocation(line: 1676, column: 36, scope: !5033)
!5462 = !DILocation(line: 1676, column: 33, scope: !5033)
!5463 = !DILocation(line: 1676, column: 61, scope: !5033)
!5464 = !DILocation(line: 1677, column: 15, scope: !5033)
!5465 = !DILocation(line: 1677, column: 9, scope: !5033)
!5466 = !DILocation(line: 1676, column: 74, scope: !5033)
!5467 = !DILocation(line: 1675, column: 7, scope: !5033)
!5468 = !DILocation(line: 1675, column: 23, scope: !5033)
!5469 = !DILocation(line: 1678, column: 26, scope: !5033)
!5470 = !DILocation(line: 1678, column: 28, scope: !5033)
!5471 = !DILocation(line: 1678, column: 50, scope: !5033)
!5472 = !DILocation(line: 1678, column: 27, scope: !5033)
!5473 = !DILocation(line: 1678, column: 54, scope: !5033)
!5474 = !DILocation(line: 1679, column: 9, scope: !5033)
!5475 = !DILocation(line: 1679, column: 31, scope: !5033)
!5476 = !DILocation(line: 1678, column: 55, scope: !5033)
!5477 = !DILocation(line: 1678, column: 52, scope: !5033)
!5478 = !DILocation(line: 1679, column: 35, scope: !5033)
!5479 = !DILocation(line: 1679, column: 37, scope: !5033)
!5480 = !DILocation(line: 1679, column: 59, scope: !5033)
!5481 = !DILocation(line: 1679, column: 36, scope: !5033)
!5482 = !DILocation(line: 1679, column: 33, scope: !5033)
!5483 = !DILocation(line: 1679, column: 61, scope: !5033)
!5484 = !DILocation(line: 1680, column: 15, scope: !5033)
!5485 = !DILocation(line: 1680, column: 9, scope: !5033)
!5486 = !DILocation(line: 1679, column: 74, scope: !5033)
!5487 = !DILocation(line: 1678, column: 7, scope: !5033)
!5488 = !DILocation(line: 1678, column: 23, scope: !5033)
!5489 = !DILocation(line: 1681, column: 11, scope: !5490)
!5490 = distinct !DILexicalBlock(scope: !5033, file: !1, line: 1681, column: 11)
!5491 = !DILocation(line: 1681, column: 18, scope: !5490)
!5492 = !DILocation(line: 1681, column: 24, scope: !5490)
!5493 = !DILocation(line: 1681, column: 11, scope: !5033)
!5494 = !DILocation(line: 1683, column: 33, scope: !5495)
!5495 = distinct !DILexicalBlock(scope: !5490, file: !1, line: 1682, column: 9)
!5496 = !DILocation(line: 1683, column: 35, scope: !5495)
!5497 = !DILocation(line: 1683, column: 60, scope: !5495)
!5498 = !DILocation(line: 1683, column: 34, scope: !5495)
!5499 = !DILocation(line: 1683, column: 64, scope: !5495)
!5500 = !DILocation(line: 1684, column: 13, scope: !5495)
!5501 = !DILocation(line: 1684, column: 38, scope: !5495)
!5502 = !DILocation(line: 1683, column: 65, scope: !5495)
!5503 = !DILocation(line: 1683, column: 62, scope: !5495)
!5504 = !DILocation(line: 1684, column: 40, scope: !5495)
!5505 = !DILocation(line: 1684, column: 60, scope: !5495)
!5506 = !DILocation(line: 1684, column: 54, scope: !5495)
!5507 = !DILocation(line: 1684, column: 53, scope: !5495)
!5508 = !DILocation(line: 1683, column: 11, scope: !5495)
!5509 = !DILocation(line: 1683, column: 30, scope: !5495)
!5510 = !DILocation(line: 1685, column: 33, scope: !5495)
!5511 = !DILocation(line: 1685, column: 35, scope: !5495)
!5512 = !DILocation(line: 1685, column: 60, scope: !5495)
!5513 = !DILocation(line: 1685, column: 34, scope: !5495)
!5514 = !DILocation(line: 1685, column: 64, scope: !5495)
!5515 = !DILocation(line: 1686, column: 13, scope: !5495)
!5516 = !DILocation(line: 1686, column: 38, scope: !5495)
!5517 = !DILocation(line: 1685, column: 65, scope: !5495)
!5518 = !DILocation(line: 1685, column: 62, scope: !5495)
!5519 = !DILocation(line: 1686, column: 40, scope: !5495)
!5520 = !DILocation(line: 1686, column: 60, scope: !5495)
!5521 = !DILocation(line: 1686, column: 54, scope: !5495)
!5522 = !DILocation(line: 1686, column: 53, scope: !5495)
!5523 = !DILocation(line: 1685, column: 11, scope: !5495)
!5524 = !DILocation(line: 1685, column: 30, scope: !5495)
!5525 = !DILocation(line: 1687, column: 33, scope: !5495)
!5526 = !DILocation(line: 1687, column: 35, scope: !5495)
!5527 = !DILocation(line: 1687, column: 60, scope: !5495)
!5528 = !DILocation(line: 1687, column: 34, scope: !5495)
!5529 = !DILocation(line: 1687, column: 64, scope: !5495)
!5530 = !DILocation(line: 1688, column: 13, scope: !5495)
!5531 = !DILocation(line: 1688, column: 38, scope: !5495)
!5532 = !DILocation(line: 1687, column: 65, scope: !5495)
!5533 = !DILocation(line: 1687, column: 62, scope: !5495)
!5534 = !DILocation(line: 1688, column: 40, scope: !5495)
!5535 = !DILocation(line: 1688, column: 60, scope: !5495)
!5536 = !DILocation(line: 1688, column: 54, scope: !5495)
!5537 = !DILocation(line: 1688, column: 53, scope: !5495)
!5538 = !DILocation(line: 1687, column: 11, scope: !5495)
!5539 = !DILocation(line: 1687, column: 30, scope: !5495)
!5540 = !DILocation(line: 1689, column: 33, scope: !5495)
!5541 = !DILocation(line: 1689, column: 35, scope: !5495)
!5542 = !DILocation(line: 1689, column: 60, scope: !5495)
!5543 = !DILocation(line: 1689, column: 34, scope: !5495)
!5544 = !DILocation(line: 1689, column: 64, scope: !5495)
!5545 = !DILocation(line: 1690, column: 13, scope: !5495)
!5546 = !DILocation(line: 1690, column: 38, scope: !5495)
!5547 = !DILocation(line: 1689, column: 65, scope: !5495)
!5548 = !DILocation(line: 1689, column: 62, scope: !5495)
!5549 = !DILocation(line: 1690, column: 42, scope: !5495)
!5550 = !DILocation(line: 1690, column: 44, scope: !5495)
!5551 = !DILocation(line: 1690, column: 69, scope: !5495)
!5552 = !DILocation(line: 1690, column: 43, scope: !5495)
!5553 = !DILocation(line: 1690, column: 40, scope: !5495)
!5554 = !DILocation(line: 1690, column: 71, scope: !5495)
!5555 = !DILocation(line: 1691, column: 32, scope: !5495)
!5556 = !DILocation(line: 1691, column: 26, scope: !5495)
!5557 = !DILocation(line: 1691, column: 25, scope: !5495)
!5558 = !DILocation(line: 1689, column: 11, scope: !5495)
!5559 = !DILocation(line: 1689, column: 30, scope: !5495)
!5560 = !DILocation(line: 1692, column: 33, scope: !5495)
!5561 = !DILocation(line: 1692, column: 35, scope: !5495)
!5562 = !DILocation(line: 1692, column: 60, scope: !5495)
!5563 = !DILocation(line: 1692, column: 34, scope: !5495)
!5564 = !DILocation(line: 1692, column: 64, scope: !5495)
!5565 = !DILocation(line: 1693, column: 13, scope: !5495)
!5566 = !DILocation(line: 1693, column: 38, scope: !5495)
!5567 = !DILocation(line: 1692, column: 65, scope: !5495)
!5568 = !DILocation(line: 1692, column: 62, scope: !5495)
!5569 = !DILocation(line: 1693, column: 42, scope: !5495)
!5570 = !DILocation(line: 1693, column: 44, scope: !5495)
!5571 = !DILocation(line: 1693, column: 69, scope: !5495)
!5572 = !DILocation(line: 1693, column: 43, scope: !5495)
!5573 = !DILocation(line: 1693, column: 40, scope: !5495)
!5574 = !DILocation(line: 1693, column: 71, scope: !5495)
!5575 = !DILocation(line: 1694, column: 32, scope: !5495)
!5576 = !DILocation(line: 1694, column: 26, scope: !5495)
!5577 = !DILocation(line: 1694, column: 25, scope: !5495)
!5578 = !DILocation(line: 1692, column: 11, scope: !5495)
!5579 = !DILocation(line: 1692, column: 30, scope: !5495)
!5580 = !DILocation(line: 1695, column: 33, scope: !5495)
!5581 = !DILocation(line: 1695, column: 35, scope: !5495)
!5582 = !DILocation(line: 1695, column: 60, scope: !5495)
!5583 = !DILocation(line: 1695, column: 34, scope: !5495)
!5584 = !DILocation(line: 1695, column: 64, scope: !5495)
!5585 = !DILocation(line: 1696, column: 13, scope: !5495)
!5586 = !DILocation(line: 1696, column: 38, scope: !5495)
!5587 = !DILocation(line: 1695, column: 65, scope: !5495)
!5588 = !DILocation(line: 1695, column: 62, scope: !5495)
!5589 = !DILocation(line: 1696, column: 42, scope: !5495)
!5590 = !DILocation(line: 1696, column: 44, scope: !5495)
!5591 = !DILocation(line: 1696, column: 69, scope: !5495)
!5592 = !DILocation(line: 1696, column: 43, scope: !5495)
!5593 = !DILocation(line: 1696, column: 40, scope: !5495)
!5594 = !DILocation(line: 1696, column: 73, scope: !5495)
!5595 = !DILocation(line: 1697, column: 13, scope: !5495)
!5596 = !DILocation(line: 1697, column: 38, scope: !5495)
!5597 = !DILocation(line: 1696, column: 74, scope: !5495)
!5598 = !DILocation(line: 1696, column: 71, scope: !5495)
!5599 = !DILocation(line: 1697, column: 40, scope: !5495)
!5600 = !DILocation(line: 1697, column: 60, scope: !5495)
!5601 = !DILocation(line: 1697, column: 54, scope: !5495)
!5602 = !DILocation(line: 1697, column: 53, scope: !5495)
!5603 = !DILocation(line: 1695, column: 11, scope: !5495)
!5604 = !DILocation(line: 1695, column: 30, scope: !5495)
!5605 = !DILocation(line: 1698, column: 33, scope: !5495)
!5606 = !DILocation(line: 1698, column: 35, scope: !5495)
!5607 = !DILocation(line: 1698, column: 60, scope: !5495)
!5608 = !DILocation(line: 1698, column: 34, scope: !5495)
!5609 = !DILocation(line: 1698, column: 64, scope: !5495)
!5610 = !DILocation(line: 1699, column: 13, scope: !5495)
!5611 = !DILocation(line: 1699, column: 38, scope: !5495)
!5612 = !DILocation(line: 1698, column: 65, scope: !5495)
!5613 = !DILocation(line: 1698, column: 62, scope: !5495)
!5614 = !DILocation(line: 1699, column: 42, scope: !5495)
!5615 = !DILocation(line: 1699, column: 44, scope: !5495)
!5616 = !DILocation(line: 1699, column: 69, scope: !5495)
!5617 = !DILocation(line: 1699, column: 43, scope: !5495)
!5618 = !DILocation(line: 1699, column: 40, scope: !5495)
!5619 = !DILocation(line: 1699, column: 71, scope: !5495)
!5620 = !DILocation(line: 1700, column: 32, scope: !5495)
!5621 = !DILocation(line: 1700, column: 26, scope: !5495)
!5622 = !DILocation(line: 1700, column: 25, scope: !5495)
!5623 = !DILocation(line: 1698, column: 11, scope: !5495)
!5624 = !DILocation(line: 1698, column: 30, scope: !5495)
!5625 = !DILocation(line: 1701, column: 33, scope: !5495)
!5626 = !DILocation(line: 1701, column: 35, scope: !5495)
!5627 = !DILocation(line: 1701, column: 60, scope: !5495)
!5628 = !DILocation(line: 1701, column: 34, scope: !5495)
!5629 = !DILocation(line: 1701, column: 64, scope: !5495)
!5630 = !DILocation(line: 1702, column: 13, scope: !5495)
!5631 = !DILocation(line: 1702, column: 38, scope: !5495)
!5632 = !DILocation(line: 1701, column: 65, scope: !5495)
!5633 = !DILocation(line: 1701, column: 62, scope: !5495)
!5634 = !DILocation(line: 1702, column: 42, scope: !5495)
!5635 = !DILocation(line: 1702, column: 44, scope: !5495)
!5636 = !DILocation(line: 1702, column: 69, scope: !5495)
!5637 = !DILocation(line: 1702, column: 43, scope: !5495)
!5638 = !DILocation(line: 1702, column: 40, scope: !5495)
!5639 = !DILocation(line: 1702, column: 71, scope: !5495)
!5640 = !DILocation(line: 1703, column: 32, scope: !5495)
!5641 = !DILocation(line: 1703, column: 26, scope: !5495)
!5642 = !DILocation(line: 1703, column: 25, scope: !5495)
!5643 = !DILocation(line: 1701, column: 11, scope: !5495)
!5644 = !DILocation(line: 1701, column: 30, scope: !5495)
!5645 = !DILocation(line: 1704, column: 9, scope: !5495)
!5646 = !DILocation(line: 1705, column: 11, scope: !5647)
!5647 = distinct !DILexicalBlock(scope: !5033, file: !1, line: 1705, column: 11)
!5648 = !DILocation(line: 1705, column: 18, scope: !5647)
!5649 = !DILocation(line: 1705, column: 29, scope: !5647)
!5650 = !DILocation(line: 1705, column: 11, scope: !5033)
!5651 = !DILocation(line: 1707, column: 31, scope: !5652)
!5652 = distinct !DILexicalBlock(scope: !5647, file: !1, line: 1706, column: 9)
!5653 = !DILocation(line: 1707, column: 33, scope: !5652)
!5654 = !DILocation(line: 1707, column: 56, scope: !5652)
!5655 = !DILocation(line: 1707, column: 32, scope: !5652)
!5656 = !DILocation(line: 1707, column: 60, scope: !5652)
!5657 = !DILocation(line: 1708, column: 13, scope: !5652)
!5658 = !DILocation(line: 1708, column: 36, scope: !5652)
!5659 = !DILocation(line: 1707, column: 61, scope: !5652)
!5660 = !DILocation(line: 1707, column: 58, scope: !5652)
!5661 = !DILocation(line: 1708, column: 38, scope: !5652)
!5662 = !DILocation(line: 1708, column: 58, scope: !5652)
!5663 = !DILocation(line: 1708, column: 52, scope: !5652)
!5664 = !DILocation(line: 1708, column: 51, scope: !5652)
!5665 = !DILocation(line: 1707, column: 11, scope: !5652)
!5666 = !DILocation(line: 1707, column: 28, scope: !5652)
!5667 = !DILocation(line: 1709, column: 31, scope: !5652)
!5668 = !DILocation(line: 1709, column: 33, scope: !5652)
!5669 = !DILocation(line: 1709, column: 56, scope: !5652)
!5670 = !DILocation(line: 1709, column: 32, scope: !5652)
!5671 = !DILocation(line: 1709, column: 60, scope: !5652)
!5672 = !DILocation(line: 1710, column: 13, scope: !5652)
!5673 = !DILocation(line: 1710, column: 36, scope: !5652)
!5674 = !DILocation(line: 1709, column: 61, scope: !5652)
!5675 = !DILocation(line: 1709, column: 58, scope: !5652)
!5676 = !DILocation(line: 1710, column: 38, scope: !5652)
!5677 = !DILocation(line: 1710, column: 58, scope: !5652)
!5678 = !DILocation(line: 1710, column: 52, scope: !5652)
!5679 = !DILocation(line: 1710, column: 51, scope: !5652)
!5680 = !DILocation(line: 1709, column: 11, scope: !5652)
!5681 = !DILocation(line: 1709, column: 28, scope: !5652)
!5682 = !DILocation(line: 1711, column: 31, scope: !5652)
!5683 = !DILocation(line: 1711, column: 33, scope: !5652)
!5684 = !DILocation(line: 1711, column: 56, scope: !5652)
!5685 = !DILocation(line: 1711, column: 32, scope: !5652)
!5686 = !DILocation(line: 1711, column: 60, scope: !5652)
!5687 = !DILocation(line: 1712, column: 13, scope: !5652)
!5688 = !DILocation(line: 1712, column: 36, scope: !5652)
!5689 = !DILocation(line: 1711, column: 61, scope: !5652)
!5690 = !DILocation(line: 1711, column: 58, scope: !5652)
!5691 = !DILocation(line: 1712, column: 38, scope: !5652)
!5692 = !DILocation(line: 1712, column: 58, scope: !5652)
!5693 = !DILocation(line: 1712, column: 52, scope: !5652)
!5694 = !DILocation(line: 1712, column: 51, scope: !5652)
!5695 = !DILocation(line: 1711, column: 11, scope: !5652)
!5696 = !DILocation(line: 1711, column: 28, scope: !5652)
!5697 = !DILocation(line: 1713, column: 31, scope: !5652)
!5698 = !DILocation(line: 1713, column: 33, scope: !5652)
!5699 = !DILocation(line: 1713, column: 56, scope: !5652)
!5700 = !DILocation(line: 1713, column: 32, scope: !5652)
!5701 = !DILocation(line: 1713, column: 60, scope: !5652)
!5702 = !DILocation(line: 1714, column: 13, scope: !5652)
!5703 = !DILocation(line: 1714, column: 36, scope: !5652)
!5704 = !DILocation(line: 1713, column: 61, scope: !5652)
!5705 = !DILocation(line: 1713, column: 58, scope: !5652)
!5706 = !DILocation(line: 1714, column: 40, scope: !5652)
!5707 = !DILocation(line: 1714, column: 42, scope: !5652)
!5708 = !DILocation(line: 1714, column: 65, scope: !5652)
!5709 = !DILocation(line: 1714, column: 41, scope: !5652)
!5710 = !DILocation(line: 1714, column: 38, scope: !5652)
!5711 = !DILocation(line: 1714, column: 67, scope: !5652)
!5712 = !DILocation(line: 1715, column: 32, scope: !5652)
!5713 = !DILocation(line: 1715, column: 26, scope: !5652)
!5714 = !DILocation(line: 1715, column: 25, scope: !5652)
!5715 = !DILocation(line: 1713, column: 11, scope: !5652)
!5716 = !DILocation(line: 1713, column: 28, scope: !5652)
!5717 = !DILocation(line: 1716, column: 31, scope: !5652)
!5718 = !DILocation(line: 1716, column: 33, scope: !5652)
!5719 = !DILocation(line: 1716, column: 56, scope: !5652)
!5720 = !DILocation(line: 1716, column: 32, scope: !5652)
!5721 = !DILocation(line: 1716, column: 60, scope: !5652)
!5722 = !DILocation(line: 1717, column: 13, scope: !5652)
!5723 = !DILocation(line: 1717, column: 36, scope: !5652)
!5724 = !DILocation(line: 1716, column: 61, scope: !5652)
!5725 = !DILocation(line: 1716, column: 58, scope: !5652)
!5726 = !DILocation(line: 1717, column: 40, scope: !5652)
!5727 = !DILocation(line: 1717, column: 42, scope: !5652)
!5728 = !DILocation(line: 1717, column: 65, scope: !5652)
!5729 = !DILocation(line: 1717, column: 41, scope: !5652)
!5730 = !DILocation(line: 1717, column: 38, scope: !5652)
!5731 = !DILocation(line: 1717, column: 67, scope: !5652)
!5732 = !DILocation(line: 1718, column: 32, scope: !5652)
!5733 = !DILocation(line: 1718, column: 26, scope: !5652)
!5734 = !DILocation(line: 1718, column: 25, scope: !5652)
!5735 = !DILocation(line: 1716, column: 11, scope: !5652)
!5736 = !DILocation(line: 1716, column: 28, scope: !5652)
!5737 = !DILocation(line: 1719, column: 31, scope: !5652)
!5738 = !DILocation(line: 1719, column: 33, scope: !5652)
!5739 = !DILocation(line: 1719, column: 56, scope: !5652)
!5740 = !DILocation(line: 1719, column: 32, scope: !5652)
!5741 = !DILocation(line: 1719, column: 60, scope: !5652)
!5742 = !DILocation(line: 1720, column: 13, scope: !5652)
!5743 = !DILocation(line: 1720, column: 36, scope: !5652)
!5744 = !DILocation(line: 1719, column: 61, scope: !5652)
!5745 = !DILocation(line: 1719, column: 58, scope: !5652)
!5746 = !DILocation(line: 1720, column: 40, scope: !5652)
!5747 = !DILocation(line: 1720, column: 42, scope: !5652)
!5748 = !DILocation(line: 1720, column: 65, scope: !5652)
!5749 = !DILocation(line: 1720, column: 41, scope: !5652)
!5750 = !DILocation(line: 1720, column: 38, scope: !5652)
!5751 = !DILocation(line: 1720, column: 69, scope: !5652)
!5752 = !DILocation(line: 1721, column: 13, scope: !5652)
!5753 = !DILocation(line: 1721, column: 36, scope: !5652)
!5754 = !DILocation(line: 1720, column: 70, scope: !5652)
!5755 = !DILocation(line: 1720, column: 67, scope: !5652)
!5756 = !DILocation(line: 1721, column: 38, scope: !5652)
!5757 = !DILocation(line: 1721, column: 58, scope: !5652)
!5758 = !DILocation(line: 1721, column: 52, scope: !5652)
!5759 = !DILocation(line: 1721, column: 51, scope: !5652)
!5760 = !DILocation(line: 1719, column: 11, scope: !5652)
!5761 = !DILocation(line: 1719, column: 28, scope: !5652)
!5762 = !DILocation(line: 1722, column: 31, scope: !5652)
!5763 = !DILocation(line: 1722, column: 33, scope: !5652)
!5764 = !DILocation(line: 1722, column: 56, scope: !5652)
!5765 = !DILocation(line: 1722, column: 32, scope: !5652)
!5766 = !DILocation(line: 1722, column: 60, scope: !5652)
!5767 = !DILocation(line: 1723, column: 13, scope: !5652)
!5768 = !DILocation(line: 1723, column: 36, scope: !5652)
!5769 = !DILocation(line: 1722, column: 61, scope: !5652)
!5770 = !DILocation(line: 1722, column: 58, scope: !5652)
!5771 = !DILocation(line: 1723, column: 40, scope: !5652)
!5772 = !DILocation(line: 1723, column: 42, scope: !5652)
!5773 = !DILocation(line: 1723, column: 65, scope: !5652)
!5774 = !DILocation(line: 1723, column: 41, scope: !5652)
!5775 = !DILocation(line: 1723, column: 38, scope: !5652)
!5776 = !DILocation(line: 1723, column: 67, scope: !5652)
!5777 = !DILocation(line: 1724, column: 32, scope: !5652)
!5778 = !DILocation(line: 1724, column: 26, scope: !5652)
!5779 = !DILocation(line: 1724, column: 25, scope: !5652)
!5780 = !DILocation(line: 1722, column: 11, scope: !5652)
!5781 = !DILocation(line: 1722, column: 28, scope: !5652)
!5782 = !DILocation(line: 1725, column: 31, scope: !5652)
!5783 = !DILocation(line: 1725, column: 33, scope: !5652)
!5784 = !DILocation(line: 1725, column: 56, scope: !5652)
!5785 = !DILocation(line: 1725, column: 32, scope: !5652)
!5786 = !DILocation(line: 1725, column: 60, scope: !5652)
!5787 = !DILocation(line: 1726, column: 13, scope: !5652)
!5788 = !DILocation(line: 1726, column: 36, scope: !5652)
!5789 = !DILocation(line: 1725, column: 61, scope: !5652)
!5790 = !DILocation(line: 1725, column: 58, scope: !5652)
!5791 = !DILocation(line: 1726, column: 40, scope: !5652)
!5792 = !DILocation(line: 1726, column: 42, scope: !5652)
!5793 = !DILocation(line: 1726, column: 65, scope: !5652)
!5794 = !DILocation(line: 1726, column: 41, scope: !5652)
!5795 = !DILocation(line: 1726, column: 38, scope: !5652)
!5796 = !DILocation(line: 1726, column: 67, scope: !5652)
!5797 = !DILocation(line: 1727, column: 32, scope: !5652)
!5798 = !DILocation(line: 1727, column: 26, scope: !5652)
!5799 = !DILocation(line: 1727, column: 25, scope: !5652)
!5800 = !DILocation(line: 1725, column: 11, scope: !5652)
!5801 = !DILocation(line: 1725, column: 28, scope: !5652)
!5802 = !DILocation(line: 1728, column: 9, scope: !5652)
!5803 = !DILocation(line: 1729, column: 8, scope: !5033)
!5804 = !DILocation(line: 1730, column: 5, scope: !5033)
!5805 = !DILocation(line: 1615, column: 46, scope: !5027)
!5806 = !DILocation(line: 1615, column: 5, scope: !5027)
!5807 = distinct !{!5807, !5031, !5808}
!5808 = !DILocation(line: 1730, column: 5, scope: !5024)
!5809 = !DILocation(line: 1731, column: 3, scope: !5002)
!5810 = !DILocation(line: 1597, column: 41, scope: !4996)
!5811 = !DILocation(line: 1597, column: 3, scope: !4996)
!5812 = distinct !{!5812, !5000, !5813}
!5813 = !DILocation(line: 1731, column: 3, scope: !4993)
!5814 = !DILocation(line: 1732, column: 11, scope: !4668)
!5815 = !DILocation(line: 1733, column: 28, scope: !4668)
!5816 = !DILocation(line: 1733, column: 44, scope: !4668)
!5817 = !DILocation(line: 1733, column: 43, scope: !4668)
!5818 = !DILocation(line: 1733, column: 62, scope: !4668)
!5819 = !DILocation(line: 1733, column: 61, scope: !4668)
!5820 = !DILocation(line: 1733, column: 3, scope: !4668)
!5821 = !DILocation(line: 1733, column: 25, scope: !4668)
!5822 = !DILocation(line: 1734, column: 28, scope: !4668)
!5823 = !DILocation(line: 1734, column: 44, scope: !4668)
!5824 = !DILocation(line: 1734, column: 43, scope: !4668)
!5825 = !DILocation(line: 1734, column: 62, scope: !4668)
!5826 = !DILocation(line: 1734, column: 61, scope: !4668)
!5827 = !DILocation(line: 1734, column: 3, scope: !4668)
!5828 = !DILocation(line: 1734, column: 25, scope: !4668)
!5829 = !DILocation(line: 1735, column: 28, scope: !4668)
!5830 = !DILocation(line: 1735, column: 44, scope: !4668)
!5831 = !DILocation(line: 1735, column: 43, scope: !4668)
!5832 = !DILocation(line: 1735, column: 62, scope: !4668)
!5833 = !DILocation(line: 1735, column: 61, scope: !4668)
!5834 = !DILocation(line: 1735, column: 3, scope: !4668)
!5835 = !DILocation(line: 1735, column: 25, scope: !4668)
!5836 = !DILocation(line: 1736, column: 28, scope: !4668)
!5837 = !DILocation(line: 1736, column: 44, scope: !4668)
!5838 = !DILocation(line: 1736, column: 43, scope: !4668)
!5839 = !DILocation(line: 1736, column: 62, scope: !4668)
!5840 = !DILocation(line: 1736, column: 61, scope: !4668)
!5841 = !DILocation(line: 1736, column: 3, scope: !4668)
!5842 = !DILocation(line: 1736, column: 25, scope: !4668)
!5843 = !DILocation(line: 1737, column: 28, scope: !4668)
!5844 = !DILocation(line: 1737, column: 44, scope: !4668)
!5845 = !DILocation(line: 1737, column: 43, scope: !4668)
!5846 = !DILocation(line: 1737, column: 62, scope: !4668)
!5847 = !DILocation(line: 1737, column: 61, scope: !4668)
!5848 = !DILocation(line: 1737, column: 3, scope: !4668)
!5849 = !DILocation(line: 1737, column: 25, scope: !4668)
!5850 = !DILocation(line: 1738, column: 28, scope: !4668)
!5851 = !DILocation(line: 1738, column: 44, scope: !4668)
!5852 = !DILocation(line: 1738, column: 43, scope: !4668)
!5853 = !DILocation(line: 1738, column: 62, scope: !4668)
!5854 = !DILocation(line: 1738, column: 61, scope: !4668)
!5855 = !DILocation(line: 1738, column: 3, scope: !4668)
!5856 = !DILocation(line: 1738, column: 25, scope: !4668)
!5857 = !DILocation(line: 1739, column: 28, scope: !4668)
!5858 = !DILocation(line: 1739, column: 44, scope: !4668)
!5859 = !DILocation(line: 1739, column: 43, scope: !4668)
!5860 = !DILocation(line: 1739, column: 62, scope: !4668)
!5861 = !DILocation(line: 1739, column: 61, scope: !4668)
!5862 = !DILocation(line: 1739, column: 3, scope: !4668)
!5863 = !DILocation(line: 1739, column: 25, scope: !4668)
!5864 = !DILocation(line: 1740, column: 28, scope: !4668)
!5865 = !DILocation(line: 1740, column: 44, scope: !4668)
!5866 = !DILocation(line: 1740, column: 43, scope: !4668)
!5867 = !DILocation(line: 1740, column: 62, scope: !4668)
!5868 = !DILocation(line: 1740, column: 61, scope: !4668)
!5869 = !DILocation(line: 1740, column: 3, scope: !4668)
!5870 = !DILocation(line: 1740, column: 25, scope: !4668)
!5871 = !DILocation(line: 1741, column: 28, scope: !4668)
!5872 = !DILocation(line: 1741, column: 44, scope: !4668)
!5873 = !DILocation(line: 1741, column: 43, scope: !4668)
!5874 = !DILocation(line: 1741, column: 62, scope: !4668)
!5875 = !DILocation(line: 1741, column: 61, scope: !4668)
!5876 = !DILocation(line: 1741, column: 3, scope: !4668)
!5877 = !DILocation(line: 1741, column: 25, scope: !4668)
!5878 = !DILocation(line: 1742, column: 28, scope: !4668)
!5879 = !DILocation(line: 1742, column: 44, scope: !4668)
!5880 = !DILocation(line: 1742, column: 43, scope: !4668)
!5881 = !DILocation(line: 1742, column: 62, scope: !4668)
!5882 = !DILocation(line: 1742, column: 61, scope: !4668)
!5883 = !DILocation(line: 1742, column: 3, scope: !4668)
!5884 = !DILocation(line: 1742, column: 25, scope: !4668)
!5885 = !DILocation(line: 1743, column: 28, scope: !4668)
!5886 = !DILocation(line: 1743, column: 44, scope: !4668)
!5887 = !DILocation(line: 1743, column: 43, scope: !4668)
!5888 = !DILocation(line: 1743, column: 62, scope: !4668)
!5889 = !DILocation(line: 1743, column: 61, scope: !4668)
!5890 = !DILocation(line: 1743, column: 3, scope: !4668)
!5891 = !DILocation(line: 1743, column: 25, scope: !4668)
!5892 = !DILocation(line: 1744, column: 7, scope: !5893)
!5893 = distinct !DILexicalBlock(scope: !4668, file: !1, line: 1744, column: 7)
!5894 = !DILocation(line: 1744, column: 14, scope: !5893)
!5895 = !DILocation(line: 1744, column: 20, scope: !5893)
!5896 = !DILocation(line: 1744, column: 7, scope: !4668)
!5897 = !DILocation(line: 1746, column: 15, scope: !5898)
!5898 = distinct !DILexicalBlock(scope: !5893, file: !1, line: 1745, column: 5)
!5899 = !DILocation(line: 1747, column: 31, scope: !5898)
!5900 = !DILocation(line: 1747, column: 7, scope: !5898)
!5901 = !DILocation(line: 1747, column: 29, scope: !5898)
!5902 = !DILocation(line: 1748, column: 31, scope: !5898)
!5903 = !DILocation(line: 1748, column: 7, scope: !5898)
!5904 = !DILocation(line: 1748, column: 29, scope: !5898)
!5905 = !DILocation(line: 1749, column: 31, scope: !5898)
!5906 = !DILocation(line: 1749, column: 7, scope: !5898)
!5907 = !DILocation(line: 1749, column: 29, scope: !5898)
!5908 = !DILocation(line: 1750, column: 31, scope: !5898)
!5909 = !DILocation(line: 1750, column: 7, scope: !5898)
!5910 = !DILocation(line: 1750, column: 29, scope: !5898)
!5911 = !DILocation(line: 1751, column: 31, scope: !5898)
!5912 = !DILocation(line: 1751, column: 7, scope: !5898)
!5913 = !DILocation(line: 1751, column: 29, scope: !5898)
!5914 = !DILocation(line: 1752, column: 31, scope: !5898)
!5915 = !DILocation(line: 1752, column: 7, scope: !5898)
!5916 = !DILocation(line: 1752, column: 29, scope: !5898)
!5917 = !DILocation(line: 1753, column: 31, scope: !5898)
!5918 = !DILocation(line: 1753, column: 7, scope: !5898)
!5919 = !DILocation(line: 1753, column: 29, scope: !5898)
!5920 = !DILocation(line: 1754, column: 31, scope: !5898)
!5921 = !DILocation(line: 1754, column: 7, scope: !5898)
!5922 = !DILocation(line: 1754, column: 29, scope: !5898)
!5923 = !DILocation(line: 1755, column: 31, scope: !5898)
!5924 = !DILocation(line: 1755, column: 7, scope: !5898)
!5925 = !DILocation(line: 1755, column: 29, scope: !5898)
!5926 = !DILocation(line: 1756, column: 31, scope: !5898)
!5927 = !DILocation(line: 1756, column: 7, scope: !5898)
!5928 = !DILocation(line: 1756, column: 29, scope: !5898)
!5929 = !DILocation(line: 1757, column: 31, scope: !5898)
!5930 = !DILocation(line: 1757, column: 7, scope: !5898)
!5931 = !DILocation(line: 1757, column: 29, scope: !5898)
!5932 = !DILocation(line: 1758, column: 5, scope: !5898)
!5933 = !DILocation(line: 1759, column: 7, scope: !5934)
!5934 = distinct !DILexicalBlock(scope: !4668, file: !1, line: 1759, column: 7)
!5935 = !DILocation(line: 1759, column: 14, scope: !5934)
!5936 = !DILocation(line: 1759, column: 25, scope: !5934)
!5937 = !DILocation(line: 1759, column: 7, scope: !4668)
!5938 = !DILocation(line: 1761, column: 15, scope: !5939)
!5939 = distinct !DILexicalBlock(scope: !5934, file: !1, line: 1760, column: 5)
!5940 = !DILocation(line: 1762, column: 31, scope: !5939)
!5941 = !DILocation(line: 1762, column: 7, scope: !5939)
!5942 = !DILocation(line: 1762, column: 29, scope: !5939)
!5943 = !DILocation(line: 1763, column: 31, scope: !5939)
!5944 = !DILocation(line: 1763, column: 7, scope: !5939)
!5945 = !DILocation(line: 1763, column: 29, scope: !5939)
!5946 = !DILocation(line: 1764, column: 31, scope: !5939)
!5947 = !DILocation(line: 1764, column: 7, scope: !5939)
!5948 = !DILocation(line: 1764, column: 29, scope: !5939)
!5949 = !DILocation(line: 1765, column: 31, scope: !5939)
!5950 = !DILocation(line: 1765, column: 7, scope: !5939)
!5951 = !DILocation(line: 1765, column: 29, scope: !5939)
!5952 = !DILocation(line: 1766, column: 31, scope: !5939)
!5953 = !DILocation(line: 1766, column: 7, scope: !5939)
!5954 = !DILocation(line: 1766, column: 29, scope: !5939)
!5955 = !DILocation(line: 1767, column: 31, scope: !5939)
!5956 = !DILocation(line: 1767, column: 7, scope: !5939)
!5957 = !DILocation(line: 1767, column: 29, scope: !5939)
!5958 = !DILocation(line: 1768, column: 31, scope: !5939)
!5959 = !DILocation(line: 1768, column: 7, scope: !5939)
!5960 = !DILocation(line: 1768, column: 29, scope: !5939)
!5961 = !DILocation(line: 1769, column: 31, scope: !5939)
!5962 = !DILocation(line: 1769, column: 7, scope: !5939)
!5963 = !DILocation(line: 1769, column: 29, scope: !5939)
!5964 = !DILocation(line: 1770, column: 31, scope: !5939)
!5965 = !DILocation(line: 1770, column: 7, scope: !5939)
!5966 = !DILocation(line: 1770, column: 29, scope: !5939)
!5967 = !DILocation(line: 1771, column: 31, scope: !5939)
!5968 = !DILocation(line: 1771, column: 7, scope: !5939)
!5969 = !DILocation(line: 1771, column: 29, scope: !5939)
!5970 = !DILocation(line: 1772, column: 31, scope: !5939)
!5971 = !DILocation(line: 1772, column: 7, scope: !5939)
!5972 = !DILocation(line: 1772, column: 29, scope: !5939)
!5973 = !DILocation(line: 1773, column: 5, scope: !5939)
!5974 = !DILocation(line: 1774, column: 36, scope: !4668)
!5975 = !DILocation(line: 1774, column: 27, scope: !4668)
!5976 = !DILocation(line: 1774, column: 3, scope: !4668)
!5977 = !DILocation(line: 1774, column: 25, scope: !4668)
!5978 = !DILocation(line: 1775, column: 36, scope: !4668)
!5979 = !DILocation(line: 1775, column: 27, scope: !4668)
!5980 = !DILocation(line: 1775, column: 3, scope: !4668)
!5981 = !DILocation(line: 1775, column: 25, scope: !4668)
!5982 = !DILocation(line: 1776, column: 36, scope: !4668)
!5983 = !DILocation(line: 1776, column: 27, scope: !4668)
!5984 = !DILocation(line: 1776, column: 3, scope: !4668)
!5985 = !DILocation(line: 1776, column: 25, scope: !4668)
!5986 = !DILocation(line: 1777, column: 36, scope: !4668)
!5987 = !DILocation(line: 1777, column: 27, scope: !4668)
!5988 = !DILocation(line: 1777, column: 3, scope: !4668)
!5989 = !DILocation(line: 1777, column: 25, scope: !4668)
!5990 = !DILocation(line: 1778, column: 36, scope: !4668)
!5991 = !DILocation(line: 1778, column: 27, scope: !4668)
!5992 = !DILocation(line: 1778, column: 3, scope: !4668)
!5993 = !DILocation(line: 1778, column: 25, scope: !4668)
!5994 = !DILocation(line: 1779, column: 36, scope: !4668)
!5995 = !DILocation(line: 1779, column: 27, scope: !4668)
!5996 = !DILocation(line: 1779, column: 3, scope: !4668)
!5997 = !DILocation(line: 1779, column: 25, scope: !4668)
!5998 = !DILocation(line: 1780, column: 36, scope: !4668)
!5999 = !DILocation(line: 1780, column: 27, scope: !4668)
!6000 = !DILocation(line: 1780, column: 3, scope: !4668)
!6001 = !DILocation(line: 1780, column: 25, scope: !4668)
!6002 = !DILocation(line: 1781, column: 36, scope: !4668)
!6003 = !DILocation(line: 1781, column: 27, scope: !4668)
!6004 = !DILocation(line: 1781, column: 3, scope: !4668)
!6005 = !DILocation(line: 1781, column: 25, scope: !4668)
!6006 = !DILocation(line: 1782, column: 36, scope: !4668)
!6007 = !DILocation(line: 1782, column: 27, scope: !4668)
!6008 = !DILocation(line: 1782, column: 3, scope: !4668)
!6009 = !DILocation(line: 1782, column: 25, scope: !4668)
!6010 = !DILocation(line: 1783, column: 36, scope: !4668)
!6011 = !DILocation(line: 1783, column: 27, scope: !4668)
!6012 = !DILocation(line: 1783, column: 3, scope: !4668)
!6013 = !DILocation(line: 1783, column: 25, scope: !4668)
!6014 = !DILocation(line: 1784, column: 36, scope: !4668)
!6015 = !DILocation(line: 1784, column: 27, scope: !4668)
!6016 = !DILocation(line: 1784, column: 3, scope: !4668)
!6017 = !DILocation(line: 1784, column: 25, scope: !4668)
!6018 = !DILocation(line: 1785, column: 15, scope: !6019)
!6019 = distinct !DILexicalBlock(scope: !4668, file: !1, line: 1785, column: 3)
!6020 = !DILocation(line: 1785, column: 8, scope: !6019)
!6021 = !DILocation(line: 1785, column: 19, scope: !6022)
!6022 = distinct !DILexicalBlock(scope: !6019, file: !1, line: 1785, column: 3)
!6023 = !DILocation(line: 1785, column: 27, scope: !6022)
!6024 = !DILocation(line: 1785, column: 3, scope: !6019)
!6025 = !DILocation(line: 1790, column: 5, scope: !6026)
!6026 = distinct !DILexicalBlock(scope: !6022, file: !1, line: 1786, column: 3)
!6027 = !DILocation(line: 1790, column: 21, scope: !6026)
!6028 = !DILocation(line: 1790, column: 30, scope: !6026)
!6029 = !DILocation(line: 1790, column: 48, scope: !6026)
!6030 = !DILocation(line: 1790, column: 39, scope: !6026)
!6031 = !DILocation(line: 1791, column: 59, scope: !6026)
!6032 = !DILocation(line: 1791, column: 55, scope: !6026)
!6033 = !DILocation(line: 1791, column: 54, scope: !6026)
!6034 = !DILocation(line: 1792, column: 13, scope: !6026)
!6035 = !DILocation(line: 1792, column: 9, scope: !6026)
!6036 = !DILocation(line: 1792, column: 26, scope: !6026)
!6037 = !DILocation(line: 1792, column: 22, scope: !6026)
!6038 = !DILocation(line: 1792, column: 21, scope: !6026)
!6039 = !DILocation(line: 1792, column: 49, scope: !6026)
!6040 = !DILocation(line: 1792, column: 45, scope: !6026)
!6041 = !DILocation(line: 1792, column: 44, scope: !6026)
!6042 = !DILocation(line: 1792, column: 62, scope: !6026)
!6043 = !DILocation(line: 1792, column: 58, scope: !6026)
!6044 = !DILocation(line: 1792, column: 57, scope: !6026)
!6045 = !DILocation(line: 1793, column: 12, scope: !6026)
!6046 = !DILocation(line: 1793, column: 8, scope: !6026)
!6047 = !DILocation(line: 1793, column: 25, scope: !6026)
!6048 = !DILocation(line: 1793, column: 21, scope: !6026)
!6049 = !DILocation(line: 1793, column: 20, scope: !6026)
!6050 = !DILocation(line: 1793, column: 40, scope: !6026)
!6051 = !DILocation(line: 1793, column: 36, scope: !6026)
!6052 = !DILocation(line: 1793, column: 53, scope: !6026)
!6053 = !DILocation(line: 1793, column: 49, scope: !6026)
!6054 = !DILocation(line: 1793, column: 48, scope: !6026)
!6055 = !DILocation(line: 1793, column: 34, scope: !6026)
!6056 = !DILocation(line: 1792, column: 70, scope: !6026)
!6057 = !DILocation(line: 1792, column: 36, scope: !6026)
!6058 = !DILocation(line: 1792, column: 35, scope: !6026)
!6059 = !DILocation(line: 1791, column: 68, scope: !6026)
!6060 = !DILocation(line: 1791, column: 45, scope: !6026)
!6061 = !DILocation(line: 1791, column: 5, scope: !6026)
!6062 = !DILocation(line: 1791, column: 21, scope: !6026)
!6063 = !DILocation(line: 1791, column: 30, scope: !6026)
!6064 = !DILocation(line: 1791, column: 43, scope: !6026)
!6065 = !DILocation(line: 1791, column: 44, scope: !6026)
!6066 = !DILocation(line: 1794, column: 59, scope: !6026)
!6067 = !DILocation(line: 1794, column: 55, scope: !6026)
!6068 = !DILocation(line: 1794, column: 54, scope: !6026)
!6069 = !DILocation(line: 1795, column: 13, scope: !6026)
!6070 = !DILocation(line: 1795, column: 9, scope: !6026)
!6071 = !DILocation(line: 1795, column: 26, scope: !6026)
!6072 = !DILocation(line: 1795, column: 22, scope: !6026)
!6073 = !DILocation(line: 1795, column: 21, scope: !6026)
!6074 = !DILocation(line: 1795, column: 49, scope: !6026)
!6075 = !DILocation(line: 1795, column: 45, scope: !6026)
!6076 = !DILocation(line: 1795, column: 44, scope: !6026)
!6077 = !DILocation(line: 1795, column: 62, scope: !6026)
!6078 = !DILocation(line: 1795, column: 58, scope: !6026)
!6079 = !DILocation(line: 1795, column: 57, scope: !6026)
!6080 = !DILocation(line: 1796, column: 12, scope: !6026)
!6081 = !DILocation(line: 1796, column: 8, scope: !6026)
!6082 = !DILocation(line: 1796, column: 25, scope: !6026)
!6083 = !DILocation(line: 1796, column: 21, scope: !6026)
!6084 = !DILocation(line: 1796, column: 20, scope: !6026)
!6085 = !DILocation(line: 1796, column: 40, scope: !6026)
!6086 = !DILocation(line: 1796, column: 36, scope: !6026)
!6087 = !DILocation(line: 1796, column: 53, scope: !6026)
!6088 = !DILocation(line: 1796, column: 49, scope: !6026)
!6089 = !DILocation(line: 1796, column: 48, scope: !6026)
!6090 = !DILocation(line: 1796, column: 34, scope: !6026)
!6091 = !DILocation(line: 1795, column: 70, scope: !6026)
!6092 = !DILocation(line: 1795, column: 36, scope: !6026)
!6093 = !DILocation(line: 1795, column: 35, scope: !6026)
!6094 = !DILocation(line: 1794, column: 68, scope: !6026)
!6095 = !DILocation(line: 1794, column: 45, scope: !6026)
!6096 = !DILocation(line: 1794, column: 5, scope: !6026)
!6097 = !DILocation(line: 1794, column: 21, scope: !6026)
!6098 = !DILocation(line: 1794, column: 30, scope: !6026)
!6099 = !DILocation(line: 1794, column: 43, scope: !6026)
!6100 = !DILocation(line: 1794, column: 44, scope: !6026)
!6101 = !DILocation(line: 1798, column: 11, scope: !6026)
!6102 = !DILocation(line: 1798, column: 7, scope: !6026)
!6103 = !DILocation(line: 1797, column: 73, scope: !6026)
!6104 = !DILocation(line: 1798, column: 25, scope: !6026)
!6105 = !DILocation(line: 1798, column: 21, scope: !6026)
!6106 = !DILocation(line: 1798, column: 38, scope: !6026)
!6107 = !DILocation(line: 1798, column: 34, scope: !6026)
!6108 = !DILocation(line: 1798, column: 33, scope: !6026)
!6109 = !DILocation(line: 1798, column: 46, scope: !6026)
!6110 = !DILocation(line: 1798, column: 19, scope: !6026)
!6111 = !DILocation(line: 1797, column: 65, scope: !6026)
!6112 = !DILocation(line: 1797, column: 64, scope: !6026)
!6113 = !DILocation(line: 1797, column: 61, scope: !6026)
!6114 = !DILocation(line: 1797, column: 44, scope: !6026)
!6115 = !DILocation(line: 1797, column: 5, scope: !6026)
!6116 = !DILocation(line: 1797, column: 21, scope: !6026)
!6117 = !DILocation(line: 1797, column: 30, scope: !6026)
!6118 = !DILocation(line: 1797, column: 43, scope: !6026)
!6119 = !DILocation(line: 1800, column: 7, scope: !6026)
!6120 = !DILocation(line: 1800, column: 23, scope: !6026)
!6121 = !DILocation(line: 1800, column: 32, scope: !6026)
!6122 = !DILocation(line: 1800, column: 45, scope: !6026)
!6123 = !DILocation(line: 1801, column: 8, scope: !6026)
!6124 = !DILocation(line: 1801, column: 24, scope: !6026)
!6125 = !DILocation(line: 1801, column: 33, scope: !6026)
!6126 = !DILocation(line: 1801, column: 46, scope: !6026)
!6127 = !DILocation(line: 1801, column: 47, scope: !6026)
!6128 = !DILocation(line: 1800, column: 46, scope: !6026)
!6129 = !DILocation(line: 1799, column: 59, scope: !6026)
!6130 = !DILocation(line: 1799, column: 51, scope: !6026)
!6131 = !DILocation(line: 1799, column: 5, scope: !6026)
!6132 = !DILocation(line: 1799, column: 21, scope: !6026)
!6133 = !DILocation(line: 1799, column: 30, scope: !6026)
!6134 = !DILocation(line: 1799, column: 50, scope: !6026)
!6135 = !DILocation(line: 1802, column: 52, scope: !6026)
!6136 = !DILocation(line: 1802, column: 48, scope: !6026)
!6137 = !DILocation(line: 1803, column: 17, scope: !6026)
!6138 = !DILocation(line: 1803, column: 33, scope: !6026)
!6139 = !DILocation(line: 1803, column: 42, scope: !6026)
!6140 = !DILocation(line: 1803, column: 55, scope: !6026)
!6141 = !DILocation(line: 1803, column: 16, scope: !6026)
!6142 = !DILocation(line: 1804, column: 7, scope: !6026)
!6143 = !DILocation(line: 1804, column: 23, scope: !6026)
!6144 = !DILocation(line: 1804, column: 32, scope: !6026)
!6145 = !DILocation(line: 1804, column: 45, scope: !6026)
!6146 = !DILocation(line: 1803, column: 56, scope: !6026)
!6147 = !DILocation(line: 1804, column: 46, scope: !6026)
!6148 = !DILocation(line: 1802, column: 60, scope: !6026)
!6149 = !DILocation(line: 1802, column: 5, scope: !6026)
!6150 = !DILocation(line: 1802, column: 21, scope: !6026)
!6151 = !DILocation(line: 1802, column: 30, scope: !6026)
!6152 = !DILocation(line: 1802, column: 47, scope: !6026)
!6153 = !DILocation(line: 1805, column: 3, scope: !6026)
!6154 = !DILocation(line: 1785, column: 56, scope: !6022)
!6155 = !DILocation(line: 1785, column: 3, scope: !6022)
!6156 = distinct !{!6156, !6024, !6157}
!6157 = !DILocation(line: 1805, column: 3, scope: !6019)
!6158 = !DILocation(line: 1806, column: 15, scope: !6159)
!6159 = distinct !DILexicalBlock(scope: !4668, file: !1, line: 1806, column: 3)
!6160 = !DILocation(line: 1806, column: 8, scope: !6159)
!6161 = !DILocation(line: 1806, column: 19, scope: !6162)
!6162 = distinct !DILexicalBlock(scope: !6159, file: !1, line: 1806, column: 3)
!6163 = !DILocation(line: 1806, column: 27, scope: !6162)
!6164 = !DILocation(line: 1806, column: 3, scope: !6159)
!6165 = !DILocation(line: 1811, column: 9, scope: !6166)
!6166 = distinct !DILexicalBlock(scope: !6162, file: !1, line: 1807, column: 3)
!6167 = !DILocation(line: 1811, column: 5, scope: !6166)
!6168 = !DILocation(line: 1811, column: 17, scope: !6166)
!6169 = !DILocation(line: 1812, column: 9, scope: !6166)
!6170 = !DILocation(line: 1812, column: 5, scope: !6166)
!6171 = !DILocation(line: 1812, column: 17, scope: !6166)
!6172 = !DILocation(line: 1813, column: 27, scope: !6166)
!6173 = !DILocation(line: 1813, column: 23, scope: !6166)
!6174 = !DILocation(line: 1813, column: 19, scope: !6166)
!6175 = !DILocation(line: 1813, column: 9, scope: !6166)
!6176 = !DILocation(line: 1813, column: 5, scope: !6166)
!6177 = !DILocation(line: 1813, column: 17, scope: !6166)
!6178 = !DILocation(line: 1814, column: 27, scope: !6166)
!6179 = !DILocation(line: 1814, column: 23, scope: !6166)
!6180 = !DILocation(line: 1814, column: 19, scope: !6166)
!6181 = !DILocation(line: 1814, column: 9, scope: !6166)
!6182 = !DILocation(line: 1814, column: 5, scope: !6166)
!6183 = !DILocation(line: 1814, column: 17, scope: !6166)
!6184 = !DILocation(line: 1815, column: 27, scope: !6166)
!6185 = !DILocation(line: 1815, column: 23, scope: !6166)
!6186 = !DILocation(line: 1815, column: 19, scope: !6166)
!6187 = !DILocation(line: 1815, column: 9, scope: !6166)
!6188 = !DILocation(line: 1815, column: 5, scope: !6166)
!6189 = !DILocation(line: 1815, column: 17, scope: !6166)
!6190 = !DILocation(line: 1816, column: 27, scope: !6166)
!6191 = !DILocation(line: 1816, column: 23, scope: !6166)
!6192 = !DILocation(line: 1816, column: 19, scope: !6166)
!6193 = !DILocation(line: 1816, column: 9, scope: !6166)
!6194 = !DILocation(line: 1816, column: 5, scope: !6166)
!6195 = !DILocation(line: 1816, column: 17, scope: !6166)
!6196 = !DILocation(line: 1817, column: 27, scope: !6166)
!6197 = !DILocation(line: 1817, column: 23, scope: !6166)
!6198 = !DILocation(line: 1817, column: 19, scope: !6166)
!6199 = !DILocation(line: 1817, column: 9, scope: !6166)
!6200 = !DILocation(line: 1817, column: 5, scope: !6166)
!6201 = !DILocation(line: 1817, column: 17, scope: !6166)
!6202 = !DILocation(line: 1818, column: 27, scope: !6166)
!6203 = !DILocation(line: 1818, column: 23, scope: !6166)
!6204 = !DILocation(line: 1818, column: 19, scope: !6166)
!6205 = !DILocation(line: 1818, column: 9, scope: !6166)
!6206 = !DILocation(line: 1818, column: 5, scope: !6166)
!6207 = !DILocation(line: 1818, column: 17, scope: !6166)
!6208 = !DILocation(line: 1819, column: 27, scope: !6166)
!6209 = !DILocation(line: 1819, column: 23, scope: !6166)
!6210 = !DILocation(line: 1819, column: 19, scope: !6166)
!6211 = !DILocation(line: 1819, column: 9, scope: !6166)
!6212 = !DILocation(line: 1819, column: 5, scope: !6166)
!6213 = !DILocation(line: 1819, column: 17, scope: !6166)
!6214 = !DILocation(line: 1820, column: 27, scope: !6166)
!6215 = !DILocation(line: 1820, column: 23, scope: !6166)
!6216 = !DILocation(line: 1820, column: 19, scope: !6166)
!6217 = !DILocation(line: 1820, column: 9, scope: !6166)
!6218 = !DILocation(line: 1820, column: 5, scope: !6166)
!6219 = !DILocation(line: 1820, column: 17, scope: !6166)
!6220 = !DILocation(line: 1821, column: 9, scope: !6166)
!6221 = !DILocation(line: 1821, column: 5, scope: !6166)
!6222 = !DILocation(line: 1821, column: 17, scope: !6166)
!6223 = !DILocation(line: 1822, column: 3, scope: !6166)
!6224 = !DILocation(line: 1806, column: 56, scope: !6162)
!6225 = !DILocation(line: 1806, column: 3, scope: !6162)
!6226 = distinct !{!6226, !6164, !6227}
!6227 = !DILocation(line: 1822, column: 3, scope: !6159)
!6228 = !DILocation(line: 1823, column: 15, scope: !6229)
!6229 = distinct !DILexicalBlock(scope: !4668, file: !1, line: 1823, column: 3)
!6230 = !DILocation(line: 1823, column: 8, scope: !6229)
!6231 = !DILocation(line: 1823, column: 19, scope: !6232)
!6232 = distinct !DILexicalBlock(scope: !6229, file: !1, line: 1823, column: 3)
!6233 = !DILocation(line: 1823, column: 27, scope: !6232)
!6234 = !DILocation(line: 1823, column: 3, scope: !6229)
!6235 = !DILocation(line: 1828, column: 39, scope: !6236)
!6236 = distinct !DILexicalBlock(scope: !6232, file: !1, line: 1824, column: 3)
!6237 = !DILocation(line: 1828, column: 35, scope: !6236)
!6238 = !DILocation(line: 1828, column: 52, scope: !6236)
!6239 = !DILocation(line: 1828, column: 48, scope: !6236)
!6240 = !DILocation(line: 1828, column: 47, scope: !6236)
!6241 = !DILocation(line: 1828, column: 5, scope: !6236)
!6242 = !DILocation(line: 1828, column: 21, scope: !6236)
!6243 = !DILocation(line: 1828, column: 30, scope: !6236)
!6244 = !DILocation(line: 1828, column: 34, scope: !6236)
!6245 = !DILocation(line: 1829, column: 40, scope: !6236)
!6246 = !DILocation(line: 1829, column: 36, scope: !6236)
!6247 = !DILocation(line: 1829, column: 53, scope: !6236)
!6248 = !DILocation(line: 1829, column: 49, scope: !6236)
!6249 = !DILocation(line: 1829, column: 48, scope: !6236)
!6250 = !DILocation(line: 1830, column: 12, scope: !6236)
!6251 = !DILocation(line: 1830, column: 8, scope: !6236)
!6252 = !DILocation(line: 1830, column: 25, scope: !6236)
!6253 = !DILocation(line: 1830, column: 21, scope: !6236)
!6254 = !DILocation(line: 1830, column: 20, scope: !6236)
!6255 = !DILocation(line: 1829, column: 62, scope: !6236)
!6256 = !DILocation(line: 1830, column: 43, scope: !6236)
!6257 = !DILocation(line: 1830, column: 39, scope: !6236)
!6258 = !DILocation(line: 1830, column: 38, scope: !6236)
!6259 = !DILocation(line: 1830, column: 56, scope: !6236)
!6260 = !DILocation(line: 1830, column: 52, scope: !6236)
!6261 = !DILocation(line: 1830, column: 51, scope: !6236)
!6262 = !DILocation(line: 1830, column: 34, scope: !6236)
!6263 = !DILocation(line: 1829, column: 5, scope: !6236)
!6264 = !DILocation(line: 1829, column: 21, scope: !6236)
!6265 = !DILocation(line: 1829, column: 30, scope: !6236)
!6266 = !DILocation(line: 1829, column: 34, scope: !6236)
!6267 = !DILocation(line: 1831, column: 40, scope: !6236)
!6268 = !DILocation(line: 1831, column: 36, scope: !6236)
!6269 = !DILocation(line: 1831, column: 57, scope: !6236)
!6270 = !DILocation(line: 1831, column: 53, scope: !6236)
!6271 = !DILocation(line: 1831, column: 52, scope: !6236)
!6272 = !DILocation(line: 1831, column: 48, scope: !6236)
!6273 = !DILocation(line: 1832, column: 12, scope: !6236)
!6274 = !DILocation(line: 1832, column: 8, scope: !6236)
!6275 = !DILocation(line: 1832, column: 29, scope: !6236)
!6276 = !DILocation(line: 1832, column: 25, scope: !6236)
!6277 = !DILocation(line: 1832, column: 24, scope: !6236)
!6278 = !DILocation(line: 1832, column: 20, scope: !6236)
!6279 = !DILocation(line: 1831, column: 66, scope: !6236)
!6280 = !DILocation(line: 1832, column: 48, scope: !6236)
!6281 = !DILocation(line: 1832, column: 44, scope: !6236)
!6282 = !DILocation(line: 1832, column: 43, scope: !6236)
!6283 = !DILocation(line: 1832, column: 61, scope: !6236)
!6284 = !DILocation(line: 1832, column: 57, scope: !6236)
!6285 = !DILocation(line: 1832, column: 56, scope: !6236)
!6286 = !DILocation(line: 1833, column: 16, scope: !6236)
!6287 = !DILocation(line: 1833, column: 12, scope: !6236)
!6288 = !DILocation(line: 1833, column: 11, scope: !6236)
!6289 = !DILocation(line: 1833, column: 29, scope: !6236)
!6290 = !DILocation(line: 1833, column: 25, scope: !6236)
!6291 = !DILocation(line: 1833, column: 24, scope: !6236)
!6292 = !DILocation(line: 1832, column: 70, scope: !6236)
!6293 = !DILocation(line: 1832, column: 38, scope: !6236)
!6294 = !DILocation(line: 1831, column: 5, scope: !6236)
!6295 = !DILocation(line: 1831, column: 21, scope: !6236)
!6296 = !DILocation(line: 1831, column: 30, scope: !6236)
!6297 = !DILocation(line: 1831, column: 34, scope: !6236)
!6298 = !DILocation(line: 1834, column: 40, scope: !6236)
!6299 = !DILocation(line: 1834, column: 36, scope: !6236)
!6300 = !DILocation(line: 1834, column: 53, scope: !6236)
!6301 = !DILocation(line: 1834, column: 49, scope: !6236)
!6302 = !DILocation(line: 1834, column: 48, scope: !6236)
!6303 = !DILocation(line: 1835, column: 12, scope: !6236)
!6304 = !DILocation(line: 1835, column: 8, scope: !6236)
!6305 = !DILocation(line: 1835, column: 25, scope: !6236)
!6306 = !DILocation(line: 1835, column: 21, scope: !6236)
!6307 = !DILocation(line: 1835, column: 20, scope: !6236)
!6308 = !DILocation(line: 1834, column: 62, scope: !6236)
!6309 = !DILocation(line: 1835, column: 40, scope: !6236)
!6310 = !DILocation(line: 1835, column: 36, scope: !6236)
!6311 = !DILocation(line: 1835, column: 53, scope: !6236)
!6312 = !DILocation(line: 1835, column: 49, scope: !6236)
!6313 = !DILocation(line: 1835, column: 48, scope: !6236)
!6314 = !DILocation(line: 1836, column: 12, scope: !6236)
!6315 = !DILocation(line: 1836, column: 8, scope: !6236)
!6316 = !DILocation(line: 1836, column: 25, scope: !6236)
!6317 = !DILocation(line: 1836, column: 21, scope: !6236)
!6318 = !DILocation(line: 1836, column: 20, scope: !6236)
!6319 = !DILocation(line: 1835, column: 62, scope: !6236)
!6320 = !DILocation(line: 1835, column: 34, scope: !6236)
!6321 = !DILocation(line: 1834, column: 5, scope: !6236)
!6322 = !DILocation(line: 1834, column: 21, scope: !6236)
!6323 = !DILocation(line: 1834, column: 30, scope: !6236)
!6324 = !DILocation(line: 1834, column: 34, scope: !6236)
!6325 = !DILocation(line: 1837, column: 40, scope: !6236)
!6326 = !DILocation(line: 1837, column: 36, scope: !6236)
!6327 = !DILocation(line: 1837, column: 57, scope: !6236)
!6328 = !DILocation(line: 1837, column: 53, scope: !6236)
!6329 = !DILocation(line: 1837, column: 52, scope: !6236)
!6330 = !DILocation(line: 1837, column: 48, scope: !6236)
!6331 = !DILocation(line: 1838, column: 12, scope: !6236)
!6332 = !DILocation(line: 1838, column: 8, scope: !6236)
!6333 = !DILocation(line: 1838, column: 25, scope: !6236)
!6334 = !DILocation(line: 1838, column: 21, scope: !6236)
!6335 = !DILocation(line: 1838, column: 20, scope: !6236)
!6336 = !DILocation(line: 1837, column: 66, scope: !6236)
!6337 = !DILocation(line: 1838, column: 41, scope: !6236)
!6338 = !DILocation(line: 1838, column: 37, scope: !6236)
!6339 = !DILocation(line: 1838, column: 54, scope: !6236)
!6340 = !DILocation(line: 1838, column: 50, scope: !6236)
!6341 = !DILocation(line: 1838, column: 49, scope: !6236)
!6342 = !DILocation(line: 1839, column: 12, scope: !6236)
!6343 = !DILocation(line: 1839, column: 8, scope: !6236)
!6344 = !DILocation(line: 1839, column: 25, scope: !6236)
!6345 = !DILocation(line: 1839, column: 21, scope: !6236)
!6346 = !DILocation(line: 1839, column: 20, scope: !6236)
!6347 = !DILocation(line: 1838, column: 63, scope: !6236)
!6348 = !DILocation(line: 1839, column: 44, scope: !6236)
!6349 = !DILocation(line: 1839, column: 40, scope: !6236)
!6350 = !DILocation(line: 1839, column: 57, scope: !6236)
!6351 = !DILocation(line: 1839, column: 53, scope: !6236)
!6352 = !DILocation(line: 1839, column: 52, scope: !6236)
!6353 = !DILocation(line: 1839, column: 38, scope: !6236)
!6354 = !DILocation(line: 1840, column: 12, scope: !6236)
!6355 = !DILocation(line: 1840, column: 8, scope: !6236)
!6356 = !DILocation(line: 1840, column: 25, scope: !6236)
!6357 = !DILocation(line: 1840, column: 21, scope: !6236)
!6358 = !DILocation(line: 1840, column: 20, scope: !6236)
!6359 = !DILocation(line: 1839, column: 66, scope: !6236)
!6360 = !DILocation(line: 1839, column: 34, scope: !6236)
!6361 = !DILocation(line: 1838, column: 34, scope: !6236)
!6362 = !DILocation(line: 1840, column: 45, scope: !6236)
!6363 = !DILocation(line: 1840, column: 41, scope: !6236)
!6364 = !DILocation(line: 1840, column: 40, scope: !6236)
!6365 = !DILocation(line: 1840, column: 58, scope: !6236)
!6366 = !DILocation(line: 1840, column: 54, scope: !6236)
!6367 = !DILocation(line: 1840, column: 53, scope: !6236)
!6368 = !DILocation(line: 1841, column: 12, scope: !6236)
!6369 = !DILocation(line: 1841, column: 8, scope: !6236)
!6370 = !DILocation(line: 1841, column: 25, scope: !6236)
!6371 = !DILocation(line: 1841, column: 21, scope: !6236)
!6372 = !DILocation(line: 1841, column: 20, scope: !6236)
!6373 = !DILocation(line: 1840, column: 67, scope: !6236)
!6374 = !DILocation(line: 1841, column: 45, scope: !6236)
!6375 = !DILocation(line: 1841, column: 41, scope: !6236)
!6376 = !DILocation(line: 1841, column: 58, scope: !6236)
!6377 = !DILocation(line: 1841, column: 54, scope: !6236)
!6378 = !DILocation(line: 1841, column: 53, scope: !6236)
!6379 = !DILocation(line: 1841, column: 39, scope: !6236)
!6380 = !DILocation(line: 1842, column: 12, scope: !6236)
!6381 = !DILocation(line: 1842, column: 8, scope: !6236)
!6382 = !DILocation(line: 1842, column: 25, scope: !6236)
!6383 = !DILocation(line: 1842, column: 21, scope: !6236)
!6384 = !DILocation(line: 1842, column: 20, scope: !6236)
!6385 = !DILocation(line: 1841, column: 67, scope: !6236)
!6386 = !DILocation(line: 1842, column: 40, scope: !6236)
!6387 = !DILocation(line: 1842, column: 36, scope: !6236)
!6388 = !DILocation(line: 1842, column: 53, scope: !6236)
!6389 = !DILocation(line: 1842, column: 49, scope: !6236)
!6390 = !DILocation(line: 1842, column: 48, scope: !6236)
!6391 = !DILocation(line: 1843, column: 12, scope: !6236)
!6392 = !DILocation(line: 1843, column: 8, scope: !6236)
!6393 = !DILocation(line: 1843, column: 25, scope: !6236)
!6394 = !DILocation(line: 1843, column: 21, scope: !6236)
!6395 = !DILocation(line: 1843, column: 20, scope: !6236)
!6396 = !DILocation(line: 1842, column: 62, scope: !6236)
!6397 = !DILocation(line: 1842, column: 34, scope: !6236)
!6398 = !DILocation(line: 1841, column: 34, scope: !6236)
!6399 = !DILocation(line: 1840, column: 35, scope: !6236)
!6400 = !DILocation(line: 1837, column: 5, scope: !6236)
!6401 = !DILocation(line: 1837, column: 21, scope: !6236)
!6402 = !DILocation(line: 1837, column: 30, scope: !6236)
!6403 = !DILocation(line: 1837, column: 34, scope: !6236)
!6404 = !DILocation(line: 1844, column: 40, scope: !6236)
!6405 = !DILocation(line: 1844, column: 36, scope: !6236)
!6406 = !DILocation(line: 1844, column: 53, scope: !6236)
!6407 = !DILocation(line: 1844, column: 49, scope: !6236)
!6408 = !DILocation(line: 1844, column: 48, scope: !6236)
!6409 = !DILocation(line: 1845, column: 13, scope: !6236)
!6410 = !DILocation(line: 1845, column: 9, scope: !6236)
!6411 = !DILocation(line: 1845, column: 26, scope: !6236)
!6412 = !DILocation(line: 1845, column: 22, scope: !6236)
!6413 = !DILocation(line: 1845, column: 21, scope: !6236)
!6414 = !DILocation(line: 1845, column: 41, scope: !6236)
!6415 = !DILocation(line: 1845, column: 37, scope: !6236)
!6416 = !DILocation(line: 1845, column: 54, scope: !6236)
!6417 = !DILocation(line: 1845, column: 50, scope: !6236)
!6418 = !DILocation(line: 1845, column: 49, scope: !6236)
!6419 = !DILocation(line: 1845, column: 35, scope: !6236)
!6420 = !DILocation(line: 1846, column: 12, scope: !6236)
!6421 = !DILocation(line: 1846, column: 8, scope: !6236)
!6422 = !DILocation(line: 1846, column: 25, scope: !6236)
!6423 = !DILocation(line: 1846, column: 21, scope: !6236)
!6424 = !DILocation(line: 1846, column: 20, scope: !6236)
!6425 = !DILocation(line: 1846, column: 40, scope: !6236)
!6426 = !DILocation(line: 1846, column: 36, scope: !6236)
!6427 = !DILocation(line: 1846, column: 53, scope: !6236)
!6428 = !DILocation(line: 1846, column: 49, scope: !6236)
!6429 = !DILocation(line: 1846, column: 48, scope: !6236)
!6430 = !DILocation(line: 1846, column: 34, scope: !6236)
!6431 = !DILocation(line: 1845, column: 63, scope: !6236)
!6432 = !DILocation(line: 1844, column: 62, scope: !6236)
!6433 = !DILocation(line: 1847, column: 15, scope: !6236)
!6434 = !DILocation(line: 1847, column: 11, scope: !6236)
!6435 = !DILocation(line: 1847, column: 10, scope: !6236)
!6436 = !DILocation(line: 1847, column: 29, scope: !6236)
!6437 = !DILocation(line: 1847, column: 25, scope: !6236)
!6438 = !DILocation(line: 1847, column: 42, scope: !6236)
!6439 = !DILocation(line: 1847, column: 38, scope: !6236)
!6440 = !DILocation(line: 1847, column: 37, scope: !6236)
!6441 = !DILocation(line: 1847, column: 23, scope: !6236)
!6442 = !DILocation(line: 1847, column: 57, scope: !6236)
!6443 = !DILocation(line: 1847, column: 53, scope: !6236)
!6444 = !DILocation(line: 1847, column: 70, scope: !6236)
!6445 = !DILocation(line: 1847, column: 66, scope: !6236)
!6446 = !DILocation(line: 1847, column: 65, scope: !6236)
!6447 = !DILocation(line: 1847, column: 51, scope: !6236)
!6448 = !DILocation(line: 1846, column: 63, scope: !6236)
!6449 = !DILocation(line: 1844, column: 5, scope: !6236)
!6450 = !DILocation(line: 1844, column: 21, scope: !6236)
!6451 = !DILocation(line: 1844, column: 30, scope: !6236)
!6452 = !DILocation(line: 1844, column: 34, scope: !6236)
!6453 = !DILocation(line: 1848, column: 44, scope: !6236)
!6454 = !DILocation(line: 1848, column: 40, scope: !6236)
!6455 = !DILocation(line: 1848, column: 39, scope: !6236)
!6456 = !DILocation(line: 1848, column: 57, scope: !6236)
!6457 = !DILocation(line: 1848, column: 53, scope: !6236)
!6458 = !DILocation(line: 1848, column: 52, scope: !6236)
!6459 = !DILocation(line: 1849, column: 12, scope: !6236)
!6460 = !DILocation(line: 1849, column: 8, scope: !6236)
!6461 = !DILocation(line: 1849, column: 25, scope: !6236)
!6462 = !DILocation(line: 1849, column: 21, scope: !6236)
!6463 = !DILocation(line: 1849, column: 20, scope: !6236)
!6464 = !DILocation(line: 1848, column: 66, scope: !6236)
!6465 = !DILocation(line: 1849, column: 41, scope: !6236)
!6466 = !DILocation(line: 1849, column: 37, scope: !6236)
!6467 = !DILocation(line: 1849, column: 54, scope: !6236)
!6468 = !DILocation(line: 1849, column: 50, scope: !6236)
!6469 = !DILocation(line: 1849, column: 49, scope: !6236)
!6470 = !DILocation(line: 1850, column: 12, scope: !6236)
!6471 = !DILocation(line: 1850, column: 8, scope: !6236)
!6472 = !DILocation(line: 1850, column: 25, scope: !6236)
!6473 = !DILocation(line: 1850, column: 21, scope: !6236)
!6474 = !DILocation(line: 1850, column: 20, scope: !6236)
!6475 = !DILocation(line: 1849, column: 63, scope: !6236)
!6476 = !DILocation(line: 1850, column: 44, scope: !6236)
!6477 = !DILocation(line: 1850, column: 40, scope: !6236)
!6478 = !DILocation(line: 1850, column: 57, scope: !6236)
!6479 = !DILocation(line: 1850, column: 53, scope: !6236)
!6480 = !DILocation(line: 1850, column: 52, scope: !6236)
!6481 = !DILocation(line: 1850, column: 38, scope: !6236)
!6482 = !DILocation(line: 1851, column: 12, scope: !6236)
!6483 = !DILocation(line: 1851, column: 8, scope: !6236)
!6484 = !DILocation(line: 1851, column: 25, scope: !6236)
!6485 = !DILocation(line: 1851, column: 21, scope: !6236)
!6486 = !DILocation(line: 1851, column: 20, scope: !6236)
!6487 = !DILocation(line: 1850, column: 66, scope: !6236)
!6488 = !DILocation(line: 1850, column: 34, scope: !6236)
!6489 = !DILocation(line: 1849, column: 34, scope: !6236)
!6490 = !DILocation(line: 1851, column: 41, scope: !6236)
!6491 = !DILocation(line: 1851, column: 37, scope: !6236)
!6492 = !DILocation(line: 1851, column: 56, scope: !6236)
!6493 = !DILocation(line: 1851, column: 52, scope: !6236)
!6494 = !DILocation(line: 1851, column: 51, scope: !6236)
!6495 = !DILocation(line: 1851, column: 49, scope: !6236)
!6496 = !DILocation(line: 1852, column: 12, scope: !6236)
!6497 = !DILocation(line: 1852, column: 8, scope: !6236)
!6498 = !DILocation(line: 1852, column: 25, scope: !6236)
!6499 = !DILocation(line: 1852, column: 21, scope: !6236)
!6500 = !DILocation(line: 1852, column: 20, scope: !6236)
!6501 = !DILocation(line: 1851, column: 65, scope: !6236)
!6502 = !DILocation(line: 1852, column: 45, scope: !6236)
!6503 = !DILocation(line: 1852, column: 41, scope: !6236)
!6504 = !DILocation(line: 1852, column: 58, scope: !6236)
!6505 = !DILocation(line: 1852, column: 54, scope: !6236)
!6506 = !DILocation(line: 1852, column: 53, scope: !6236)
!6507 = !DILocation(line: 1852, column: 39, scope: !6236)
!6508 = !DILocation(line: 1853, column: 12, scope: !6236)
!6509 = !DILocation(line: 1853, column: 8, scope: !6236)
!6510 = !DILocation(line: 1853, column: 25, scope: !6236)
!6511 = !DILocation(line: 1853, column: 21, scope: !6236)
!6512 = !DILocation(line: 1853, column: 20, scope: !6236)
!6513 = !DILocation(line: 1852, column: 67, scope: !6236)
!6514 = !DILocation(line: 1853, column: 40, scope: !6236)
!6515 = !DILocation(line: 1853, column: 36, scope: !6236)
!6516 = !DILocation(line: 1853, column: 53, scope: !6236)
!6517 = !DILocation(line: 1853, column: 49, scope: !6236)
!6518 = !DILocation(line: 1853, column: 48, scope: !6236)
!6519 = !DILocation(line: 1854, column: 12, scope: !6236)
!6520 = !DILocation(line: 1854, column: 8, scope: !6236)
!6521 = !DILocation(line: 1854, column: 25, scope: !6236)
!6522 = !DILocation(line: 1854, column: 21, scope: !6236)
!6523 = !DILocation(line: 1854, column: 20, scope: !6236)
!6524 = !DILocation(line: 1853, column: 62, scope: !6236)
!6525 = !DILocation(line: 1853, column: 34, scope: !6236)
!6526 = !DILocation(line: 1852, column: 34, scope: !6236)
!6527 = !DILocation(line: 1851, column: 35, scope: !6236)
!6528 = !DILocation(line: 1848, column: 5, scope: !6236)
!6529 = !DILocation(line: 1848, column: 21, scope: !6236)
!6530 = !DILocation(line: 1848, column: 30, scope: !6236)
!6531 = !DILocation(line: 1848, column: 34, scope: !6236)
!6532 = !DILocation(line: 1855, column: 39, scope: !6236)
!6533 = !DILocation(line: 1855, column: 35, scope: !6236)
!6534 = !DILocation(line: 1855, column: 54, scope: !6236)
!6535 = !DILocation(line: 1855, column: 50, scope: !6236)
!6536 = !DILocation(line: 1855, column: 67, scope: !6236)
!6537 = !DILocation(line: 1855, column: 63, scope: !6236)
!6538 = !DILocation(line: 1855, column: 62, scope: !6236)
!6539 = !DILocation(line: 1856, column: 12, scope: !6236)
!6540 = !DILocation(line: 1856, column: 8, scope: !6236)
!6541 = !DILocation(line: 1856, column: 25, scope: !6236)
!6542 = !DILocation(line: 1856, column: 21, scope: !6236)
!6543 = !DILocation(line: 1856, column: 20, scope: !6236)
!6544 = !DILocation(line: 1855, column: 76, scope: !6236)
!6545 = !DILocation(line: 1856, column: 40, scope: !6236)
!6546 = !DILocation(line: 1856, column: 36, scope: !6236)
!6547 = !DILocation(line: 1856, column: 53, scope: !6236)
!6548 = !DILocation(line: 1856, column: 49, scope: !6236)
!6549 = !DILocation(line: 1856, column: 48, scope: !6236)
!6550 = !DILocation(line: 1857, column: 12, scope: !6236)
!6551 = !DILocation(line: 1857, column: 8, scope: !6236)
!6552 = !DILocation(line: 1857, column: 25, scope: !6236)
!6553 = !DILocation(line: 1857, column: 21, scope: !6236)
!6554 = !DILocation(line: 1857, column: 20, scope: !6236)
!6555 = !DILocation(line: 1856, column: 62, scope: !6236)
!6556 = !DILocation(line: 1856, column: 34, scope: !6236)
!6557 = !DILocation(line: 1855, column: 47, scope: !6236)
!6558 = !DILocation(line: 1857, column: 41, scope: !6236)
!6559 = !DILocation(line: 1857, column: 37, scope: !6236)
!6560 = !DILocation(line: 1857, column: 54, scope: !6236)
!6561 = !DILocation(line: 1857, column: 50, scope: !6236)
!6562 = !DILocation(line: 1857, column: 49, scope: !6236)
!6563 = !DILocation(line: 1858, column: 12, scope: !6236)
!6564 = !DILocation(line: 1858, column: 8, scope: !6236)
!6565 = !DILocation(line: 1858, column: 25, scope: !6236)
!6566 = !DILocation(line: 1858, column: 21, scope: !6236)
!6567 = !DILocation(line: 1858, column: 20, scope: !6236)
!6568 = !DILocation(line: 1857, column: 63, scope: !6236)
!6569 = !DILocation(line: 1858, column: 40, scope: !6236)
!6570 = !DILocation(line: 1858, column: 36, scope: !6236)
!6571 = !DILocation(line: 1858, column: 53, scope: !6236)
!6572 = !DILocation(line: 1858, column: 49, scope: !6236)
!6573 = !DILocation(line: 1858, column: 48, scope: !6236)
!6574 = !DILocation(line: 1858, column: 34, scope: !6236)
!6575 = !DILocation(line: 1857, column: 35, scope: !6236)
!6576 = !DILocation(line: 1855, column: 5, scope: !6236)
!6577 = !DILocation(line: 1855, column: 21, scope: !6236)
!6578 = !DILocation(line: 1855, column: 30, scope: !6236)
!6579 = !DILocation(line: 1855, column: 34, scope: !6236)
!6580 = !DILocation(line: 1859, column: 3, scope: !6236)
!6581 = !DILocation(line: 1823, column: 56, scope: !6232)
!6582 = !DILocation(line: 1823, column: 3, scope: !6232)
!6583 = distinct !{!6583, !6234, !6584}
!6584 = !DILocation(line: 1859, column: 3, scope: !6229)
!6585 = !DILocation(line: 1860, column: 7, scope: !6586)
!6586 = distinct !DILexicalBlock(scope: !4668, file: !1, line: 1860, column: 7)
!6587 = !DILocation(line: 1860, column: 21, scope: !6586)
!6588 = !DILocation(line: 1860, column: 28, scope: !6586)
!6589 = !DILocation(line: 1860, column: 9, scope: !6586)
!6590 = !DILocation(line: 1860, column: 7, scope: !4668)
!6591 = !DILocation(line: 1861, column: 63, scope: !6586)
!6592 = !DILocation(line: 1861, column: 40, scope: !6586)
!6593 = !DILocation(line: 1861, column: 21, scope: !6586)
!6594 = !DILocation(line: 1861, column: 20, scope: !6586)
!6595 = !DILocation(line: 1861, column: 5, scope: !6586)
!6596 = !DILocation(line: 1862, column: 10, scope: !4668)
!6597 = !DILocation(line: 1862, column: 3, scope: !4668)
!6598 = !DILocation(line: 1863, column: 1, scope: !4668)
!6599 = distinct !DISubprogram(name: "SetMagickPixelPacket", scope: !6600, file: !6600, line: 92, type: !6601, scopeLine: 94, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !826)
!6600 = !DIFile(filename: "./magick/pixel-private.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!6601 = !DISubroutineType(types: !6602)
!6602 = !{null, !813, !731, !735, !715}
!6603 = !DILocalVariable(name: "image", arg: 1, scope: !6599, file: !6600, line: 92, type: !813)
!6604 = !DILocation(line: 92, column: 54, scope: !6599)
!6605 = !DILocalVariable(name: "color", arg: 2, scope: !6599, file: !6600, line: 93, type: !731)
!6606 = !DILocation(line: 93, column: 22, scope: !6599)
!6607 = !DILocalVariable(name: "index", arg: 3, scope: !6599, file: !6600, line: 93, type: !735)
!6608 = !DILocation(line: 93, column: 47, scope: !6599)
!6609 = !DILocalVariable(name: "pixel", arg: 4, scope: !6599, file: !6600, line: 93, type: !715)
!6610 = !DILocation(line: 93, column: 72, scope: !6599)
!6611 = !DILocation(line: 95, column: 31, scope: !6599)
!6612 = !DILocation(line: 95, column: 14, scope: !6599)
!6613 = !DILocation(line: 95, column: 3, scope: !6599)
!6614 = !DILocation(line: 95, column: 10, scope: !6599)
!6615 = !DILocation(line: 95, column: 13, scope: !6599)
!6616 = !DILocation(line: 96, column: 33, scope: !6599)
!6617 = !DILocation(line: 96, column: 16, scope: !6599)
!6618 = !DILocation(line: 96, column: 3, scope: !6599)
!6619 = !DILocation(line: 96, column: 10, scope: !6599)
!6620 = !DILocation(line: 96, column: 15, scope: !6599)
!6621 = !DILocation(line: 97, column: 32, scope: !6599)
!6622 = !DILocation(line: 97, column: 15, scope: !6599)
!6623 = !DILocation(line: 97, column: 3, scope: !6599)
!6624 = !DILocation(line: 97, column: 10, scope: !6599)
!6625 = !DILocation(line: 97, column: 14, scope: !6599)
!6626 = !DILocation(line: 98, column: 35, scope: !6599)
!6627 = !DILocation(line: 98, column: 18, scope: !6599)
!6628 = !DILocation(line: 98, column: 3, scope: !6599)
!6629 = !DILocation(line: 98, column: 10, scope: !6599)
!6630 = !DILocation(line: 98, column: 17, scope: !6599)
!6631 = !DILocation(line: 99, column: 8, scope: !6632)
!6632 = distinct !DILexicalBlock(scope: !6599, file: !6600, line: 99, column: 7)
!6633 = !DILocation(line: 99, column: 15, scope: !6632)
!6634 = !DILocation(line: 99, column: 26, scope: !6632)
!6635 = !DILocation(line: 99, column: 45, scope: !6632)
!6636 = !DILocation(line: 100, column: 8, scope: !6632)
!6637 = !DILocation(line: 100, column: 14, scope: !6632)
!6638 = !DILocation(line: 99, column: 7, scope: !6599)
!6639 = !DILocation(line: 101, column: 35, scope: !6632)
!6640 = !DILocation(line: 101, column: 18, scope: !6632)
!6641 = !DILocation(line: 101, column: 5, scope: !6632)
!6642 = !DILocation(line: 101, column: 12, scope: !6632)
!6643 = !DILocation(line: 101, column: 17, scope: !6632)
!6644 = !DILocation(line: 102, column: 1, scope: !6599)
!6645 = distinct !DISubprogram(name: "RadiansToDegrees", scope: !6646, file: !6646, line: 59, type: !6647, scopeLine: 60, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !826)
!6646 = !DIFile(filename: "./magick/image-private.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!6647 = !DISubroutineType(types: !6648)
!6648 = !{!725, !1945}
!6649 = !DILocalVariable(name: "radians", arg: 1, scope: !6645, file: !6646, line: 59, type: !1945)
!6650 = !DILocation(line: 59, column: 68, scope: !6645)
!6651 = !DILocation(line: 61, column: 34, scope: !6645)
!6652 = !DILocation(line: 61, column: 33, scope: !6645)
!6653 = !DILocation(line: 61, column: 41, scope: !6645)
!6654 = !DILocation(line: 61, column: 10, scope: !6645)
!6655 = !DILocation(line: 61, column: 3, scope: !6645)
!6656 = distinct !DISubprogram(name: "GetImageChannelPerceptualHash", scope: !1, file: !1, line: 1901, type: !6657, scopeLine: 1903, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !826)
!6657 = !DISubroutineType(types: !6658)
!6658 = !{!772, !813, !825}
!6659 = !DILocalVariable(name: "image", arg: 1, scope: !6656, file: !1, line: 1902, type: !813)
!6660 = !DILocation(line: 1902, column: 16, scope: !6656)
!6661 = !DILocalVariable(name: "exception", arg: 2, scope: !6656, file: !1, line: 1902, type: !825)
!6662 = !DILocation(line: 1902, column: 37, scope: !6656)
!6663 = !DILocalVariable(name: "moments", scope: !6656, file: !1, line: 1905, type: !753)
!6664 = !DILocation(line: 1905, column: 6, scope: !6656)
!6665 = !DILocalVariable(name: "perceptual_hash", scope: !6656, file: !1, line: 1908, type: !772)
!6666 = !DILocation(line: 1908, column: 6, scope: !6656)
!6667 = !DILocalVariable(name: "hash_image", scope: !6656, file: !1, line: 1911, type: !493)
!6668 = !DILocation(line: 1911, column: 6, scope: !6656)
!6669 = !DILocalVariable(name: "status", scope: !6656, file: !1, line: 1914, type: !509)
!6670 = !DILocation(line: 1914, column: 5, scope: !6656)
!6671 = !DILocalVariable(name: "i", scope: !6656, file: !1, line: 1917, type: !557)
!6672 = !DILocation(line: 1917, column: 5, scope: !6656)
!6673 = !DILocalVariable(name: "channel", scope: !6656, file: !1, line: 1920, type: !557)
!6674 = !DILocation(line: 1920, column: 5, scope: !6656)
!6675 = !DILocation(line: 1925, column: 24, scope: !6656)
!6676 = !DILocation(line: 1925, column: 38, scope: !6656)
!6677 = !DILocation(line: 1925, column: 14, scope: !6656)
!6678 = !DILocation(line: 1925, column: 13, scope: !6656)
!6679 = !DILocation(line: 1926, column: 7, scope: !6680)
!6680 = distinct !DILexicalBlock(scope: !6656, file: !1, line: 1926, column: 7)
!6681 = !DILocation(line: 1926, column: 18, scope: !6680)
!6682 = !DILocation(line: 1926, column: 7, scope: !6656)
!6683 = !DILocation(line: 1927, column: 5, scope: !6680)
!6684 = !DILocation(line: 1928, column: 3, scope: !6656)
!6685 = !DILocation(line: 1928, column: 15, scope: !6656)
!6686 = !DILocation(line: 1928, column: 20, scope: !6656)
!6687 = !DILocation(line: 1929, column: 35, scope: !6656)
!6688 = !DILocation(line: 1929, column: 10, scope: !6656)
!6689 = !DILocation(line: 1929, column: 9, scope: !6656)
!6690 = !DILocation(line: 1930, column: 7, scope: !6691)
!6691 = distinct !DILexicalBlock(scope: !6656, file: !1, line: 1930, column: 7)
!6692 = !DILocation(line: 1930, column: 14, scope: !6691)
!6693 = !DILocation(line: 1930, column: 7, scope: !6656)
!6694 = !DILocation(line: 1931, column: 5, scope: !6691)
!6695 = !DILocation(line: 1932, column: 34, scope: !6656)
!6696 = !DILocation(line: 1932, column: 45, scope: !6656)
!6697 = !DILocation(line: 1932, column: 11, scope: !6656)
!6698 = !DILocation(line: 1932, column: 10, scope: !6656)
!6699 = !DILocation(line: 1933, column: 27, scope: !6656)
!6700 = !DILocation(line: 1933, column: 14, scope: !6656)
!6701 = !DILocation(line: 1933, column: 13, scope: !6656)
!6702 = !DILocation(line: 1934, column: 7, scope: !6703)
!6703 = distinct !DILexicalBlock(scope: !6656, file: !1, line: 1934, column: 7)
!6704 = !DILocation(line: 1934, column: 15, scope: !6703)
!6705 = !DILocation(line: 1934, column: 7, scope: !6656)
!6706 = !DILocation(line: 1935, column: 5, scope: !6703)
!6707 = !DILocation(line: 1936, column: 45, scope: !6656)
!6708 = !DILocation(line: 1936, column: 19, scope: !6656)
!6709 = !DILocation(line: 1936, column: 18, scope: !6656)
!6710 = !DILocation(line: 1938, column: 7, scope: !6711)
!6711 = distinct !DILexicalBlock(scope: !6656, file: !1, line: 1938, column: 7)
!6712 = !DILocation(line: 1938, column: 23, scope: !6711)
!6713 = !DILocation(line: 1938, column: 7, scope: !6656)
!6714 = !DILocation(line: 1939, column: 5, scope: !6711)
!6715 = !DILocation(line: 1940, column: 15, scope: !6716)
!6716 = distinct !DILexicalBlock(scope: !6656, file: !1, line: 1940, column: 3)
!6717 = !DILocation(line: 1940, column: 8, scope: !6716)
!6718 = !DILocation(line: 1940, column: 19, scope: !6719)
!6719 = distinct !DILexicalBlock(scope: !6716, file: !1, line: 1940, column: 3)
!6720 = !DILocation(line: 1940, column: 27, scope: !6719)
!6721 = !DILocation(line: 1940, column: 3, scope: !6716)
!6722 = !DILocation(line: 1941, column: 11, scope: !6723)
!6723 = distinct !DILexicalBlock(scope: !6719, file: !1, line: 1941, column: 5)
!6724 = !DILocation(line: 1941, column: 10, scope: !6723)
!6725 = !DILocation(line: 1941, column: 15, scope: !6726)
!6726 = distinct !DILexicalBlock(scope: !6723, file: !1, line: 1941, column: 5)
!6727 = !DILocation(line: 1941, column: 17, scope: !6726)
!6728 = !DILocation(line: 1941, column: 5, scope: !6723)
!6729 = !DILocation(line: 1942, column: 51, scope: !6726)
!6730 = !DILocation(line: 1942, column: 59, scope: !6726)
!6731 = !DILocation(line: 1942, column: 68, scope: !6726)
!6732 = !DILocation(line: 1942, column: 70, scope: !6726)
!6733 = !DILocation(line: 1942, column: 39, scope: !6726)
!6734 = !DILocation(line: 1942, column: 38, scope: !6726)
!6735 = !DILocation(line: 1942, column: 7, scope: !6726)
!6736 = !DILocation(line: 1942, column: 23, scope: !6726)
!6737 = !DILocation(line: 1942, column: 32, scope: !6726)
!6738 = !DILocation(line: 1942, column: 34, scope: !6726)
!6739 = !DILocation(line: 1942, column: 36, scope: !6726)
!6740 = !DILocation(line: 1941, column: 23, scope: !6726)
!6741 = !DILocation(line: 1941, column: 5, scope: !6726)
!6742 = distinct !{!6742, !6728, !6743}
!6743 = !DILocation(line: 1942, column: 73, scope: !6723)
!6744 = !DILocation(line: 1940, column: 56, scope: !6719)
!6745 = !DILocation(line: 1940, column: 3, scope: !6719)
!6746 = distinct !{!6746, !6721, !6747}
!6747 = !DILocation(line: 1942, column: 73, scope: !6716)
!6748 = !DILocation(line: 1943, column: 53, scope: !6656)
!6749 = !DILocation(line: 1943, column: 30, scope: !6656)
!6750 = !DILocation(line: 1943, column: 11, scope: !6656)
!6751 = !DILocation(line: 1943, column: 10, scope: !6656)
!6752 = !DILocation(line: 1947, column: 24, scope: !6656)
!6753 = !DILocation(line: 1947, column: 38, scope: !6656)
!6754 = !DILocation(line: 1947, column: 14, scope: !6656)
!6755 = !DILocation(line: 1947, column: 13, scope: !6656)
!6756 = !DILocation(line: 1948, column: 7, scope: !6757)
!6757 = distinct !DILexicalBlock(scope: !6656, file: !1, line: 1948, column: 7)
!6758 = !DILocation(line: 1948, column: 18, scope: !6757)
!6759 = !DILocation(line: 1948, column: 7, scope: !6656)
!6760 = !DILocation(line: 1951, column: 9, scope: !6761)
!6761 = distinct !DILexicalBlock(scope: !6757, file: !1, line: 1949, column: 5)
!6762 = !DILocation(line: 1950, column: 49, scope: !6761)
!6763 = !DILocation(line: 1950, column: 23, scope: !6761)
!6764 = !DILocation(line: 1950, column: 22, scope: !6761)
!6765 = !DILocation(line: 1952, column: 7, scope: !6761)
!6766 = !DILocation(line: 1954, column: 3, scope: !6656)
!6767 = !DILocation(line: 1954, column: 15, scope: !6656)
!6768 = !DILocation(line: 1954, column: 20, scope: !6656)
!6769 = !DILocation(line: 1955, column: 35, scope: !6656)
!6770 = !DILocation(line: 1955, column: 10, scope: !6656)
!6771 = !DILocation(line: 1955, column: 9, scope: !6656)
!6772 = !DILocation(line: 1956, column: 7, scope: !6773)
!6773 = distinct !DILexicalBlock(scope: !6656, file: !1, line: 1956, column: 7)
!6774 = !DILocation(line: 1956, column: 14, scope: !6773)
!6775 = !DILocation(line: 1956, column: 7, scope: !6656)
!6776 = !DILocation(line: 1959, column: 9, scope: !6777)
!6777 = distinct !DILexicalBlock(scope: !6773, file: !1, line: 1957, column: 5)
!6778 = !DILocation(line: 1958, column: 49, scope: !6777)
!6779 = !DILocation(line: 1958, column: 23, scope: !6777)
!6780 = !DILocation(line: 1958, column: 22, scope: !6777)
!6781 = !DILocation(line: 1960, column: 7, scope: !6777)
!6782 = !DILocation(line: 1962, column: 34, scope: !6656)
!6783 = !DILocation(line: 1962, column: 45, scope: !6656)
!6784 = !DILocation(line: 1962, column: 11, scope: !6656)
!6785 = !DILocation(line: 1962, column: 10, scope: !6656)
!6786 = !DILocation(line: 1963, column: 27, scope: !6656)
!6787 = !DILocation(line: 1963, column: 14, scope: !6656)
!6788 = !DILocation(line: 1963, column: 13, scope: !6656)
!6789 = !DILocation(line: 1964, column: 7, scope: !6790)
!6790 = distinct !DILexicalBlock(scope: !6656, file: !1, line: 1964, column: 7)
!6791 = !DILocation(line: 1964, column: 15, scope: !6790)
!6792 = !DILocation(line: 1964, column: 7, scope: !6656)
!6793 = !DILocation(line: 1967, column: 9, scope: !6794)
!6794 = distinct !DILexicalBlock(scope: !6790, file: !1, line: 1965, column: 5)
!6795 = !DILocation(line: 1966, column: 49, scope: !6794)
!6796 = !DILocation(line: 1966, column: 23, scope: !6794)
!6797 = !DILocation(line: 1966, column: 22, scope: !6794)
!6798 = !DILocation(line: 1968, column: 7, scope: !6794)
!6799 = !DILocation(line: 1970, column: 15, scope: !6800)
!6800 = distinct !DILexicalBlock(scope: !6656, file: !1, line: 1970, column: 3)
!6801 = !DILocation(line: 1970, column: 8, scope: !6800)
!6802 = !DILocation(line: 1970, column: 19, scope: !6803)
!6803 = distinct !DILexicalBlock(scope: !6800, file: !1, line: 1970, column: 3)
!6804 = !DILocation(line: 1970, column: 27, scope: !6803)
!6805 = !DILocation(line: 1970, column: 3, scope: !6800)
!6806 = !DILocation(line: 1971, column: 11, scope: !6807)
!6807 = distinct !DILexicalBlock(scope: !6803, file: !1, line: 1971, column: 5)
!6808 = !DILocation(line: 1971, column: 10, scope: !6807)
!6809 = !DILocation(line: 1971, column: 15, scope: !6810)
!6810 = distinct !DILexicalBlock(scope: !6807, file: !1, line: 1971, column: 5)
!6811 = !DILocation(line: 1971, column: 17, scope: !6810)
!6812 = !DILocation(line: 1971, column: 5, scope: !6807)
!6813 = !DILocation(line: 1972, column: 51, scope: !6810)
!6814 = !DILocation(line: 1972, column: 59, scope: !6810)
!6815 = !DILocation(line: 1972, column: 68, scope: !6810)
!6816 = !DILocation(line: 1972, column: 70, scope: !6810)
!6817 = !DILocation(line: 1972, column: 39, scope: !6810)
!6818 = !DILocation(line: 1972, column: 38, scope: !6810)
!6819 = !DILocation(line: 1972, column: 7, scope: !6810)
!6820 = !DILocation(line: 1972, column: 23, scope: !6810)
!6821 = !DILocation(line: 1972, column: 32, scope: !6810)
!6822 = !DILocation(line: 1972, column: 34, scope: !6810)
!6823 = !DILocation(line: 1972, column: 36, scope: !6810)
!6824 = !DILocation(line: 1971, column: 23, scope: !6810)
!6825 = !DILocation(line: 1971, column: 5, scope: !6810)
!6826 = distinct !{!6826, !6812, !6827}
!6827 = !DILocation(line: 1972, column: 73, scope: !6807)
!6828 = !DILocation(line: 1970, column: 56, scope: !6803)
!6829 = !DILocation(line: 1970, column: 3, scope: !6803)
!6830 = distinct !{!6830, !6805, !6831}
!6831 = !DILocation(line: 1972, column: 73, scope: !6800)
!6832 = !DILocation(line: 1973, column: 53, scope: !6656)
!6833 = !DILocation(line: 1973, column: 30, scope: !6656)
!6834 = !DILocation(line: 1973, column: 11, scope: !6656)
!6835 = !DILocation(line: 1973, column: 10, scope: !6656)
!6836 = !DILocation(line: 1974, column: 10, scope: !6656)
!6837 = !DILocation(line: 1974, column: 3, scope: !6656)
!6838 = !DILocation(line: 1975, column: 1, scope: !6656)
!6839 = distinct !DISubprogram(name: "MagickLog10", scope: !1, file: !1, line: 1892, type: !6840, scopeLine: 1893, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !826)
!6840 = !DISubroutineType(types: !6841)
!6841 = !{!530, !824}
!6842 = !DILocalVariable(name: "x", arg: 1, scope: !6839, file: !1, line: 1892, type: !824)
!6843 = !DILocation(line: 1892, column: 47, scope: !6839)
!6844 = !DILocation(line: 1896, column: 11, scope: !6845)
!6845 = distinct !DILexicalBlock(scope: !6839, file: !1, line: 1896, column: 6)
!6846 = !DILocation(line: 1896, column: 6, scope: !6845)
!6847 = !DILocation(line: 1896, column: 14, scope: !6845)
!6848 = !DILocation(line: 1896, column: 6, scope: !6839)
!6849 = !DILocation(line: 1897, column: 11, scope: !6845)
!6850 = !DILocation(line: 1897, column: 4, scope: !6845)
!6851 = !DILocation(line: 1898, column: 20, scope: !6839)
!6852 = !DILocation(line: 1898, column: 15, scope: !6839)
!6853 = !DILocation(line: 1898, column: 9, scope: !6839)
!6854 = !DILocation(line: 1898, column: 2, scope: !6839)
!6855 = !DILocation(line: 1899, column: 1, scope: !6839)
!6856 = distinct !DISubprogram(name: "GetImageRange", scope: !1, file: !1, line: 2010, type: !3170, scopeLine: 2012, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !826)
!6857 = !DILocalVariable(name: "image", arg: 1, scope: !6856, file: !1, line: 2010, type: !813)
!6858 = !DILocation(line: 2010, column: 59, scope: !6856)
!6859 = !DILocalVariable(name: "minima", arg: 2, scope: !6856, file: !1, line: 2011, type: !2911)
!6860 = !DILocation(line: 2011, column: 11, scope: !6856)
!6861 = !DILocalVariable(name: "maxima", arg: 3, scope: !6856, file: !1, line: 2011, type: !2911)
!6862 = !DILocation(line: 2011, column: 26, scope: !6856)
!6863 = !DILocalVariable(name: "exception", arg: 4, scope: !6856, file: !1, line: 2011, type: !825)
!6864 = !DILocation(line: 2011, column: 48, scope: !6856)
!6865 = !DILocation(line: 2013, column: 31, scope: !6856)
!6866 = !DILocation(line: 2013, column: 55, scope: !6856)
!6867 = !DILocation(line: 2013, column: 62, scope: !6856)
!6868 = !DILocation(line: 2013, column: 69, scope: !6856)
!6869 = !DILocation(line: 2013, column: 10, scope: !6856)
!6870 = !DILocation(line: 2013, column: 3, scope: !6856)
!6871 = distinct !DISubprogram(name: "GetQuantumRange", scope: !6872, file: !6872, line: 91, type: !6873, scopeLine: 92, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !826)
!6872 = !DIFile(filename: "./magick/quantum-private.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!6873 = !DISubroutineType(types: !6874)
!6874 = !{!632, !1793}
!6875 = !DILocalVariable(name: "depth", arg: 1, scope: !6871, file: !6872, line: 91, type: !1793)
!6876 = !DILocation(line: 91, column: 59, scope: !6871)
!6877 = !DILocalVariable(name: "one", scope: !6871, file: !6872, line: 94, type: !632)
!6878 = !DILocation(line: 94, column: 5, scope: !6871)
!6879 = !DILocation(line: 96, column: 6, scope: !6871)
!6880 = !DILocation(line: 97, column: 29, scope: !6871)
!6881 = !DILocation(line: 97, column: 37, scope: !6871)
!6882 = !DILocation(line: 97, column: 42, scope: !6871)
!6883 = !DILocation(line: 97, column: 33, scope: !6871)
!6884 = !DILocation(line: 97, column: 49, scope: !6871)
!6885 = !DILocation(line: 97, column: 57, scope: !6871)
!6886 = !DILocation(line: 97, column: 62, scope: !6871)
!6887 = !DILocation(line: 97, column: 53, scope: !6871)
!6888 = !DILocation(line: 97, column: 66, scope: !6871)
!6889 = !DILocation(line: 97, column: 46, scope: !6871)
!6890 = !DILocation(line: 97, column: 3, scope: !6871)
!6891 = distinct !DISubprogram(name: "IsPixelAtDepth", scope: !6892, file: !6892, line: 142, type: !6893, scopeLine: 144, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !826)
!6892 = !DIFile(filename: "./magick/pixel-accessor.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!6893 = !DISubroutineType(types: !6894)
!6894 = !{!509, !1944, !6895}
!6895 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !812)
!6896 = !DILocalVariable(name: "pixel", arg: 1, scope: !6891, file: !6892, line: 142, type: !1944)
!6897 = !DILocation(line: 142, column: 62, scope: !6891)
!6898 = !DILocalVariable(name: "range", arg: 2, scope: !6891, file: !6892, line: 143, type: !6895)
!6899 = !DILocation(line: 143, column: 20, scope: !6891)
!6900 = !DILocalVariable(name: "quantum", scope: !6891, file: !6892, line: 146, type: !521)
!6901 = !DILocation(line: 146, column: 5, scope: !6891)
!6902 = !DILocation(line: 150, column: 24, scope: !6891)
!6903 = !DILocation(line: 150, column: 7, scope: !6891)
!6904 = !DILocation(line: 150, column: 30, scope: !6891)
!6905 = !DILocation(line: 150, column: 29, scope: !6891)
!6906 = !DILocation(line: 150, column: 36, scope: !6891)
!6907 = !DILocation(line: 150, column: 6, scope: !6891)
!6908 = !DILocation(line: 150, column: 49, scope: !6891)
!6909 = !DILocation(line: 149, column: 54, scope: !6891)
!6910 = !DILocation(line: 149, column: 53, scope: !6891)
!6911 = !DILocation(line: 149, column: 52, scope: !6891)
!6912 = !DILocation(line: 150, column: 57, scope: !6891)
!6913 = !DILocation(line: 150, column: 56, scope: !6891)
!6914 = !DILocation(line: 149, column: 22, scope: !6891)
!6915 = !DILocation(line: 150, column: 62, scope: !6891)
!6916 = !DILocation(line: 149, column: 11, scope: !6891)
!6917 = !DILocation(line: 149, column: 10, scope: !6891)
!6918 = !DILocation(line: 155, column: 10, scope: !6891)
!6919 = !DILocation(line: 155, column: 19, scope: !6891)
!6920 = !DILocation(line: 155, column: 16, scope: !6891)
!6921 = !DILocation(line: 155, column: 3, scope: !6891)
!6922 = distinct !DISubprogram(name: "EvaluateMax", scope: !1, file: !1, line: 187, type: !6923, scopeLine: 188, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !826)
!6923 = !DISubroutineType(types: !6924)
!6924 = !{!530, !824, !824}
!6925 = !DILocalVariable(name: "x", arg: 1, scope: !6922, file: !1, line: 187, type: !824)
!6926 = !DILocation(line: 187, column: 47, scope: !6922)
!6927 = !DILocalVariable(name: "y", arg: 2, scope: !6922, file: !1, line: 187, type: !824)
!6928 = !DILocation(line: 187, column: 62, scope: !6922)
!6929 = !DILocation(line: 189, column: 7, scope: !6930)
!6930 = distinct !DILexicalBlock(scope: !6922, file: !1, line: 189, column: 7)
!6931 = !DILocation(line: 189, column: 11, scope: !6930)
!6932 = !DILocation(line: 189, column: 9, scope: !6930)
!6933 = !DILocation(line: 189, column: 7, scope: !6922)
!6934 = !DILocation(line: 190, column: 12, scope: !6930)
!6935 = !DILocation(line: 190, column: 5, scope: !6930)
!6936 = !DILocation(line: 191, column: 10, scope: !6922)
!6937 = !DILocation(line: 191, column: 3, scope: !6922)
!6938 = !DILocation(line: 192, column: 1, scope: !6922)
!6939 = distinct !DISubprogram(name: "MagickMin", scope: !1, file: !1, line: 218, type: !6923, scopeLine: 219, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !826)
!6940 = !DILocalVariable(name: "x", arg: 1, scope: !6939, file: !1, line: 218, type: !824)
!6941 = !DILocation(line: 218, column: 45, scope: !6939)
!6942 = !DILocalVariable(name: "y", arg: 2, scope: !6939, file: !1, line: 218, type: !824)
!6943 = !DILocation(line: 218, column: 60, scope: !6939)
!6944 = !DILocation(line: 220, column: 7, scope: !6945)
!6945 = distinct !DILexicalBlock(scope: !6939, file: !1, line: 220, column: 7)
!6946 = !DILocation(line: 220, column: 11, scope: !6945)
!6947 = !DILocation(line: 220, column: 9, scope: !6945)
!6948 = !DILocation(line: 220, column: 7, scope: !6939)
!6949 = !DILocation(line: 221, column: 12, scope: !6945)
!6950 = !DILocation(line: 221, column: 5, scope: !6945)
!6951 = !DILocation(line: 222, column: 10, scope: !6939)
!6952 = !DILocation(line: 222, column: 3, scope: !6939)
!6953 = !DILocation(line: 223, column: 1, scope: !6939)
!6954 = distinct !DISubprogram(name: "PolynomialImage", scope: !1, file: !1, line: 2433, type: !6955, scopeLine: 2435, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !826)
!6955 = !DISubroutineType(types: !6956)
!6956 = !{!493, !813, !1793, !2403, !825}
!6957 = !DILocalVariable(name: "images", arg: 1, scope: !6954, file: !1, line: 2433, type: !813)
!6958 = !DILocation(line: 2433, column: 50, scope: !6954)
!6959 = !DILocalVariable(name: "number_terms", arg: 2, scope: !6954, file: !1, line: 2434, type: !1793)
!6960 = !DILocation(line: 2434, column: 16, scope: !6954)
!6961 = !DILocalVariable(name: "terms", arg: 3, scope: !6954, file: !1, line: 2434, type: !2403)
!6962 = !DILocation(line: 2434, column: 43, scope: !6954)
!6963 = !DILocalVariable(name: "exception", arg: 4, scope: !6954, file: !1, line: 2434, type: !825)
!6964 = !DILocation(line: 2434, column: 64, scope: !6954)
!6965 = !DILocalVariable(name: "polynomial_image", scope: !6954, file: !1, line: 2437, type: !493)
!6966 = !DILocation(line: 2437, column: 6, scope: !6954)
!6967 = !DILocation(line: 2439, column: 43, scope: !6954)
!6968 = !DILocation(line: 2439, column: 66, scope: !6954)
!6969 = !DILocation(line: 2440, column: 5, scope: !6954)
!6970 = !DILocation(line: 2440, column: 11, scope: !6954)
!6971 = !DILocation(line: 2439, column: 20, scope: !6954)
!6972 = !DILocation(line: 2439, column: 19, scope: !6954)
!6973 = !DILocation(line: 2441, column: 10, scope: !6954)
!6974 = !DILocation(line: 2441, column: 3, scope: !6954)
!6975 = distinct !DISubprogram(name: "PolynomialImageChannel", scope: !1, file: !1, line: 2444, type: !6976, scopeLine: 2447, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !826)
!6976 = !DISubroutineType(types: !6977)
!6977 = !{!493, !813, !848, !1793, !2403, !825}
!6978 = !DILocalVariable(name: "images", arg: 1, scope: !6975, file: !1, line: 2444, type: !813)
!6979 = !DILocation(line: 2444, column: 57, scope: !6975)
!6980 = !DILocalVariable(name: "channel", arg: 2, scope: !6975, file: !1, line: 2445, type: !848)
!6981 = !DILocation(line: 2445, column: 21, scope: !6975)
!6982 = !DILocalVariable(name: "number_terms", arg: 3, scope: !6975, file: !1, line: 2445, type: !1793)
!6983 = !DILocation(line: 2445, column: 42, scope: !6975)
!6984 = !DILocalVariable(name: "terms", arg: 4, scope: !6975, file: !1, line: 2445, type: !2403)
!6985 = !DILocation(line: 2445, column: 69, scope: !6975)
!6986 = !DILocalVariable(name: "exception", arg: 5, scope: !6975, file: !1, line: 2446, type: !825)
!6987 = !DILocation(line: 2446, column: 18, scope: !6975)
!6988 = !DILocalVariable(name: "polynomial_view", scope: !6975, file: !1, line: 2451, type: !861)
!6989 = !DILocation(line: 2451, column: 6, scope: !6975)
!6990 = !DILocalVariable(name: "image", scope: !6975, file: !1, line: 2454, type: !493)
!6991 = !DILocation(line: 2454, column: 6, scope: !6975)
!6992 = !DILocalVariable(name: "status", scope: !6975, file: !1, line: 2457, type: !509)
!6993 = !DILocation(line: 2457, column: 5, scope: !6975)
!6994 = !DILocalVariable(name: "progress", scope: !6975, file: !1, line: 2460, type: !629)
!6995 = !DILocation(line: 2460, column: 5, scope: !6975)
!6996 = !DILocalVariable(name: "polynomial_pixels", scope: !6975, file: !1, line: 2463, type: !1068)
!6997 = !DILocation(line: 2463, column: 16, scope: !6975)
!6998 = !DILocalVariable(name: "zero", scope: !6975, file: !1, line: 2464, type: !716)
!6999 = !DILocation(line: 2464, column: 5, scope: !6975)
!7000 = !DILocalVariable(name: "number_images", scope: !6975, file: !1, line: 2467, type: !504)
!7001 = !DILocation(line: 2467, column: 5, scope: !6975)
!7002 = !DILocalVariable(name: "y", scope: !6975, file: !1, line: 2470, type: !557)
!7003 = !DILocation(line: 2470, column: 5, scope: !6975)
!7004 = !DILocation(line: 2474, column: 7, scope: !7005)
!7005 = distinct !DILexicalBlock(scope: !6975, file: !1, line: 2474, column: 7)
!7006 = !DILocation(line: 2474, column: 15, scope: !7005)
!7007 = !DILocation(line: 2474, column: 21, scope: !7005)
!7008 = !DILocation(line: 2474, column: 7, scope: !6975)
!7009 = !DILocation(line: 2475, column: 61, scope: !7005)
!7010 = !DILocation(line: 2475, column: 69, scope: !7005)
!7011 = !DILocation(line: 2475, column: 12, scope: !7005)
!7012 = !DILocation(line: 2475, column: 5, scope: !7005)
!7013 = !DILocation(line: 2478, column: 20, scope: !6975)
!7014 = !DILocation(line: 2478, column: 27, scope: !6975)
!7015 = !DILocation(line: 2478, column: 35, scope: !6975)
!7016 = !DILocation(line: 2478, column: 43, scope: !6975)
!7017 = !DILocation(line: 2478, column: 51, scope: !6975)
!7018 = !DILocation(line: 2478, column: 67, scope: !6975)
!7019 = !DILocation(line: 2478, column: 9, scope: !6975)
!7020 = !DILocation(line: 2478, column: 8, scope: !6975)
!7021 = !DILocation(line: 2479, column: 7, scope: !7022)
!7022 = distinct !DILexicalBlock(scope: !6975, file: !1, line: 2479, column: 7)
!7023 = !DILocation(line: 2479, column: 13, scope: !7022)
!7024 = !DILocation(line: 2479, column: 7, scope: !6975)
!7025 = !DILocation(line: 2480, column: 5, scope: !7022)
!7026 = !DILocation(line: 2481, column: 28, scope: !7027)
!7027 = distinct !DILexicalBlock(scope: !6975, file: !1, line: 2481, column: 7)
!7028 = !DILocation(line: 2481, column: 7, scope: !7027)
!7029 = !DILocation(line: 2481, column: 47, scope: !7027)
!7030 = !DILocation(line: 2481, column: 7, scope: !6975)
!7031 = !DILocation(line: 2483, column: 24, scope: !7032)
!7032 = distinct !DILexicalBlock(scope: !7027, file: !1, line: 2482, column: 5)
!7033 = !DILocation(line: 2483, column: 35, scope: !7032)
!7034 = !DILocation(line: 2483, column: 42, scope: !7032)
!7035 = !DILocation(line: 2483, column: 7, scope: !7032)
!7036 = !DILocation(line: 2484, column: 26, scope: !7032)
!7037 = !DILocation(line: 2484, column: 13, scope: !7032)
!7038 = !DILocation(line: 2484, column: 12, scope: !7032)
!7039 = !DILocation(line: 2485, column: 7, scope: !7032)
!7040 = !DILocation(line: 2487, column: 36, scope: !6975)
!7041 = !DILocation(line: 2487, column: 17, scope: !6975)
!7042 = !DILocation(line: 2487, column: 16, scope: !6975)
!7043 = !DILocation(line: 2488, column: 43, scope: !6975)
!7044 = !DILocation(line: 2488, column: 50, scope: !6975)
!7045 = !DILocation(line: 2488, column: 21, scope: !6975)
!7046 = !DILocation(line: 2488, column: 20, scope: !6975)
!7047 = !DILocation(line: 2489, column: 7, scope: !7048)
!7048 = distinct !DILexicalBlock(scope: !6975, file: !1, line: 2489, column: 7)
!7049 = !DILocation(line: 2489, column: 25, scope: !7048)
!7050 = !DILocation(line: 2489, column: 7, scope: !6975)
!7051 = !DILocation(line: 2491, column: 26, scope: !7052)
!7052 = distinct !DILexicalBlock(scope: !7048, file: !1, line: 2490, column: 5)
!7053 = !DILocation(line: 2491, column: 13, scope: !7052)
!7054 = !DILocation(line: 2491, column: 12, scope: !7052)
!7055 = !DILocation(line: 2492, column: 35, scope: !7052)
!7056 = !DILocation(line: 2493, column: 60, scope: !7052)
!7057 = !DILocation(line: 2493, column: 68, scope: !7052)
!7058 = !DILocation(line: 2492, column: 14, scope: !7052)
!7059 = !DILocation(line: 2494, column: 7, scope: !7052)
!7060 = !DILocation(line: 2499, column: 9, scope: !6975)
!7061 = !DILocation(line: 2500, column: 11, scope: !6975)
!7062 = !DILocation(line: 2501, column: 24, scope: !6975)
!7063 = !DILocation(line: 2501, column: 3, scope: !6975)
!7064 = !DILocation(line: 2502, column: 45, scope: !6975)
!7065 = !DILocation(line: 2502, column: 51, scope: !6975)
!7066 = !DILocation(line: 2502, column: 19, scope: !6975)
!7067 = !DILocation(line: 2502, column: 18, scope: !6975)
!7068 = !DILocation(line: 2507, column: 9, scope: !7069)
!7069 = distinct !DILexicalBlock(scope: !6975, file: !1, line: 2507, column: 3)
!7070 = !DILocation(line: 2507, column: 8, scope: !7069)
!7071 = !DILocation(line: 2507, column: 13, scope: !7072)
!7072 = distinct !DILexicalBlock(scope: !7069, file: !1, line: 2507, column: 3)
!7073 = !DILocation(line: 2507, column: 27, scope: !7072)
!7074 = !DILocation(line: 2507, column: 34, scope: !7072)
!7075 = !DILocation(line: 2507, column: 15, scope: !7072)
!7076 = !DILocation(line: 2507, column: 3, scope: !7069)
!7077 = !DILocalVariable(name: "image_view", scope: !7078, file: !1, line: 2510, type: !861)
!7078 = distinct !DILexicalBlock(scope: !7072, file: !1, line: 2508, column: 3)
!7079 = !DILocation(line: 2510, column: 8, scope: !7078)
!7080 = !DILocalVariable(name: "next", scope: !7078, file: !1, line: 2513, type: !813)
!7081 = !DILocation(line: 2513, column: 8, scope: !7078)
!7082 = !DILocalVariable(name: "id", scope: !7078, file: !1, line: 2516, type: !914)
!7083 = !DILocation(line: 2516, column: 7, scope: !7078)
!7084 = !DILocation(line: 2516, column: 12, scope: !7078)
!7085 = !DILocalVariable(name: "polynomial_indexes", scope: !7078, file: !1, line: 2519, type: !918)
!7086 = !DILocation(line: 2519, column: 17, scope: !7078)
!7087 = !DILocalVariable(name: "polynomial_pixel", scope: !7078, file: !1, line: 2522, type: !715)
!7088 = !DILocation(line: 2522, column: 8, scope: !7078)
!7089 = !DILocalVariable(name: "q", scope: !7078, file: !1, line: 2525, type: !921)
!7090 = !DILocation(line: 2525, column: 17, scope: !7078)
!7091 = !DILocalVariable(name: "i", scope: !7078, file: !1, line: 2528, type: !557)
!7092 = !DILocation(line: 2528, column: 7, scope: !7078)
!7093 = !DILocalVariable(name: "x", scope: !7078, file: !1, line: 2529, type: !557)
!7094 = !DILocation(line: 2529, column: 7, scope: !7078)
!7095 = !DILocation(line: 2531, column: 9, scope: !7096)
!7096 = distinct !DILexicalBlock(scope: !7078, file: !1, line: 2531, column: 9)
!7097 = !DILocation(line: 2531, column: 16, scope: !7096)
!7098 = !DILocation(line: 2531, column: 9, scope: !7078)
!7099 = !DILocation(line: 2532, column: 7, scope: !7096)
!7100 = !DILocation(line: 2533, column: 37, scope: !7078)
!7101 = !DILocation(line: 2533, column: 55, scope: !7078)
!7102 = !DILocation(line: 2533, column: 57, scope: !7078)
!7103 = !DILocation(line: 2533, column: 64, scope: !7078)
!7104 = !DILocation(line: 2534, column: 7, scope: !7078)
!7105 = !DILocation(line: 2533, column: 7, scope: !7078)
!7106 = !DILocation(line: 2533, column: 6, scope: !7078)
!7107 = !DILocation(line: 2535, column: 9, scope: !7108)
!7108 = distinct !DILexicalBlock(scope: !7078, file: !1, line: 2535, column: 9)
!7109 = !DILocation(line: 2535, column: 11, scope: !7108)
!7110 = !DILocation(line: 2535, column: 9, scope: !7078)
!7111 = !DILocation(line: 2537, column: 15, scope: !7112)
!7112 = distinct !DILexicalBlock(scope: !7108, file: !1, line: 2536, column: 7)
!7113 = !DILocation(line: 2538, column: 9, scope: !7112)
!7114 = !DILocation(line: 2540, column: 56, scope: !7078)
!7115 = !DILocation(line: 2540, column: 24, scope: !7078)
!7116 = !DILocation(line: 2540, column: 23, scope: !7078)
!7117 = !DILocation(line: 2541, column: 22, scope: !7078)
!7118 = !DILocation(line: 2541, column: 40, scope: !7078)
!7119 = !DILocation(line: 2541, column: 21, scope: !7078)
!7120 = !DILocation(line: 2542, column: 11, scope: !7121)
!7121 = distinct !DILexicalBlock(scope: !7078, file: !1, line: 2542, column: 5)
!7122 = !DILocation(line: 2542, column: 10, scope: !7121)
!7123 = !DILocation(line: 2542, column: 15, scope: !7124)
!7124 = distinct !DILexicalBlock(scope: !7121, file: !1, line: 2542, column: 5)
!7125 = !DILocation(line: 2542, column: 29, scope: !7124)
!7126 = !DILocation(line: 2542, column: 36, scope: !7124)
!7127 = !DILocation(line: 2542, column: 17, scope: !7124)
!7128 = !DILocation(line: 2542, column: 5, scope: !7121)
!7129 = !DILocation(line: 2543, column: 7, scope: !7124)
!7130 = !DILocation(line: 2543, column: 24, scope: !7124)
!7131 = !DILocation(line: 2543, column: 27, scope: !7124)
!7132 = !DILocation(line: 2542, column: 46, scope: !7124)
!7133 = !DILocation(line: 2542, column: 5, scope: !7124)
!7134 = distinct !{!7134, !7128, !7135}
!7135 = !DILocation(line: 2543, column: 27, scope: !7121)
!7136 = !DILocation(line: 2544, column: 10, scope: !7078)
!7137 = !DILocation(line: 2544, column: 9, scope: !7078)
!7138 = !DILocation(line: 2545, column: 11, scope: !7139)
!7139 = distinct !DILexicalBlock(scope: !7078, file: !1, line: 2545, column: 5)
!7140 = !DILocation(line: 2545, column: 10, scope: !7139)
!7141 = !DILocation(line: 2545, column: 15, scope: !7142)
!7142 = distinct !DILexicalBlock(scope: !7139, file: !1, line: 2545, column: 5)
!7143 = !DILocation(line: 2545, column: 29, scope: !7142)
!7144 = !DILocation(line: 2545, column: 17, scope: !7142)
!7145 = !DILocation(line: 2545, column: 5, scope: !7139)
!7146 = !DILocalVariable(name: "indexes", scope: !7147, file: !1, line: 2548, type: !735)
!7147 = distinct !DILexicalBlock(scope: !7142, file: !1, line: 2546, column: 5)
!7148 = !DILocation(line: 2548, column: 10, scope: !7147)
!7149 = !DILocalVariable(name: "p", scope: !7147, file: !1, line: 2551, type: !731)
!7150 = !DILocation(line: 2551, column: 10, scope: !7147)
!7151 = !DILocation(line: 2553, column: 11, scope: !7152)
!7152 = distinct !DILexicalBlock(scope: !7147, file: !1, line: 2553, column: 11)
!7153 = !DILocation(line: 2553, column: 26, scope: !7152)
!7154 = !DILocation(line: 2553, column: 13, scope: !7152)
!7155 = !DILocation(line: 2553, column: 11, scope: !7147)
!7156 = !DILocation(line: 2554, column: 9, scope: !7152)
!7157 = !DILocation(line: 2555, column: 42, scope: !7147)
!7158 = !DILocation(line: 2555, column: 47, scope: !7147)
!7159 = !DILocation(line: 2555, column: 18, scope: !7147)
!7160 = !DILocation(line: 2555, column: 17, scope: !7147)
!7161 = !DILocation(line: 2556, column: 35, scope: !7147)
!7162 = !DILocation(line: 2556, column: 48, scope: !7147)
!7163 = !DILocation(line: 2556, column: 50, scope: !7147)
!7164 = !DILocation(line: 2556, column: 57, scope: !7147)
!7165 = !DILocation(line: 2556, column: 67, scope: !7147)
!7166 = !DILocation(line: 2556, column: 9, scope: !7147)
!7167 = !DILocation(line: 2556, column: 8, scope: !7147)
!7168 = !DILocation(line: 2557, column: 11, scope: !7169)
!7169 = distinct !DILexicalBlock(scope: !7147, file: !1, line: 2557, column: 11)
!7170 = !DILocation(line: 2557, column: 13, scope: !7169)
!7171 = !DILocation(line: 2557, column: 11, scope: !7147)
!7172 = !DILocation(line: 2559, column: 39, scope: !7173)
!7173 = distinct !DILexicalBlock(scope: !7169, file: !1, line: 2558, column: 9)
!7174 = !DILocation(line: 2559, column: 22, scope: !7173)
!7175 = !DILocation(line: 2559, column: 21, scope: !7173)
!7176 = !DILocation(line: 2560, column: 11, scope: !7173)
!7177 = !DILocation(line: 2562, column: 45, scope: !7147)
!7178 = !DILocation(line: 2562, column: 15, scope: !7147)
!7179 = !DILocation(line: 2562, column: 14, scope: !7147)
!7180 = !DILocation(line: 2563, column: 13, scope: !7181)
!7181 = distinct !DILexicalBlock(scope: !7147, file: !1, line: 2563, column: 7)
!7182 = !DILocation(line: 2563, column: 12, scope: !7181)
!7183 = !DILocation(line: 2563, column: 17, scope: !7184)
!7184 = distinct !DILexicalBlock(scope: !7181, file: !1, line: 2563, column: 7)
!7185 = !DILocation(line: 2563, column: 31, scope: !7184)
!7186 = !DILocation(line: 2563, column: 38, scope: !7184)
!7187 = !DILocation(line: 2563, column: 19, scope: !7184)
!7188 = !DILocation(line: 2563, column: 7, scope: !7181)
!7189 = !DILocalVariable(name: "coefficient", scope: !7190, file: !1, line: 2566, type: !530)
!7190 = distinct !DILexicalBlock(scope: !7184, file: !1, line: 2564, column: 7)
!7191 = !DILocation(line: 2566, column: 11, scope: !7190)
!7192 = !DILocalVariable(name: "degree", scope: !7190, file: !1, line: 2567, type: !530)
!7193 = !DILocation(line: 2567, column: 11, scope: !7190)
!7194 = !DILocation(line: 2569, column: 21, scope: !7190)
!7195 = !DILocation(line: 2569, column: 27, scope: !7190)
!7196 = !DILocation(line: 2569, column: 29, scope: !7190)
!7197 = !DILocation(line: 2569, column: 20, scope: !7190)
!7198 = !DILocation(line: 2570, column: 16, scope: !7190)
!7199 = !DILocation(line: 2570, column: 23, scope: !7190)
!7200 = !DILocation(line: 2570, column: 25, scope: !7190)
!7201 = !DILocation(line: 2570, column: 30, scope: !7190)
!7202 = !DILocation(line: 2570, column: 15, scope: !7190)
!7203 = !DILocation(line: 2571, column: 14, scope: !7204)
!7204 = distinct !DILexicalBlock(scope: !7190, file: !1, line: 2571, column: 13)
!7205 = !DILocation(line: 2571, column: 22, scope: !7204)
!7206 = !DILocation(line: 2571, column: 36, scope: !7204)
!7207 = !DILocation(line: 2571, column: 13, scope: !7190)
!7208 = !DILocation(line: 2572, column: 36, scope: !7204)
!7209 = !DILocation(line: 2572, column: 65, scope: !7204)
!7210 = !DILocation(line: 2572, column: 68, scope: !7204)
!7211 = !DILocation(line: 2572, column: 64, scope: !7204)
!7212 = !DILocation(line: 2572, column: 72, scope: !7204)
!7213 = !DILocation(line: 2572, column: 48, scope: !7204)
!7214 = !DILocation(line: 2572, column: 47, scope: !7204)
!7215 = !DILocation(line: 2572, column: 11, scope: !7204)
!7216 = !DILocation(line: 2572, column: 28, scope: !7204)
!7217 = !DILocation(line: 2572, column: 31, scope: !7204)
!7218 = !DILocation(line: 2572, column: 34, scope: !7204)
!7219 = !DILocation(line: 2573, column: 14, scope: !7220)
!7220 = distinct !DILexicalBlock(scope: !7190, file: !1, line: 2573, column: 13)
!7221 = !DILocation(line: 2573, column: 22, scope: !7220)
!7222 = !DILocation(line: 2573, column: 38, scope: !7220)
!7223 = !DILocation(line: 2573, column: 13, scope: !7190)
!7224 = !DILocation(line: 2574, column: 38, scope: !7220)
!7225 = !DILocation(line: 2574, column: 67, scope: !7220)
!7226 = !DILocation(line: 2574, column: 70, scope: !7220)
!7227 = !DILocation(line: 2574, column: 66, scope: !7220)
!7228 = !DILocation(line: 2575, column: 13, scope: !7220)
!7229 = !DILocation(line: 2574, column: 50, scope: !7220)
!7230 = !DILocation(line: 2574, column: 49, scope: !7220)
!7231 = !DILocation(line: 2574, column: 11, scope: !7220)
!7232 = !DILocation(line: 2574, column: 28, scope: !7220)
!7233 = !DILocation(line: 2574, column: 31, scope: !7220)
!7234 = !DILocation(line: 2574, column: 36, scope: !7220)
!7235 = !DILocation(line: 2576, column: 14, scope: !7236)
!7236 = distinct !DILexicalBlock(scope: !7190, file: !1, line: 2576, column: 13)
!7237 = !DILocation(line: 2576, column: 22, scope: !7236)
!7238 = !DILocation(line: 2576, column: 37, scope: !7236)
!7239 = !DILocation(line: 2576, column: 13, scope: !7190)
!7240 = !DILocation(line: 2577, column: 37, scope: !7236)
!7241 = !DILocation(line: 2577, column: 66, scope: !7236)
!7242 = !DILocation(line: 2577, column: 69, scope: !7236)
!7243 = !DILocation(line: 2577, column: 65, scope: !7236)
!7244 = !DILocation(line: 2578, column: 13, scope: !7236)
!7245 = !DILocation(line: 2577, column: 49, scope: !7236)
!7246 = !DILocation(line: 2577, column: 48, scope: !7236)
!7247 = !DILocation(line: 2577, column: 11, scope: !7236)
!7248 = !DILocation(line: 2577, column: 28, scope: !7236)
!7249 = !DILocation(line: 2577, column: 31, scope: !7236)
!7250 = !DILocation(line: 2577, column: 35, scope: !7236)
!7251 = !DILocation(line: 2579, column: 14, scope: !7252)
!7252 = distinct !DILexicalBlock(scope: !7190, file: !1, line: 2579, column: 13)
!7253 = !DILocation(line: 2579, column: 22, scope: !7252)
!7254 = !DILocation(line: 2579, column: 40, scope: !7252)
!7255 = !DILocation(line: 2579, column: 13, scope: !7190)
!7256 = !DILocation(line: 2580, column: 40, scope: !7252)
!7257 = !DILocation(line: 2581, column: 27, scope: !7252)
!7258 = !DILocation(line: 2581, column: 30, scope: !7252)
!7259 = !DILocation(line: 2581, column: 26, scope: !7252)
!7260 = !DILocation(line: 2581, column: 13, scope: !7252)
!7261 = !DILocation(line: 2580, column: 68, scope: !7252)
!7262 = !DILocation(line: 2581, column: 39, scope: !7252)
!7263 = !DILocation(line: 2580, column: 52, scope: !7252)
!7264 = !DILocation(line: 2580, column: 51, scope: !7252)
!7265 = !DILocation(line: 2580, column: 11, scope: !7252)
!7266 = !DILocation(line: 2580, column: 28, scope: !7252)
!7267 = !DILocation(line: 2580, column: 31, scope: !7252)
!7268 = !DILocation(line: 2580, column: 38, scope: !7252)
!7269 = !DILocation(line: 2582, column: 15, scope: !7270)
!7270 = distinct !DILexicalBlock(scope: !7190, file: !1, line: 2582, column: 13)
!7271 = !DILocation(line: 2582, column: 23, scope: !7270)
!7272 = !DILocation(line: 2582, column: 39, scope: !7270)
!7273 = !DILocation(line: 2582, column: 45, scope: !7270)
!7274 = !DILocation(line: 2583, column: 14, scope: !7270)
!7275 = !DILocation(line: 2583, column: 21, scope: !7270)
!7276 = !DILocation(line: 2583, column: 32, scope: !7270)
!7277 = !DILocation(line: 2582, column: 13, scope: !7190)
!7278 = !DILocation(line: 2584, column: 38, scope: !7270)
!7279 = !DILocation(line: 2584, column: 67, scope: !7270)
!7280 = !DILocation(line: 2584, column: 75, scope: !7270)
!7281 = !DILocation(line: 2584, column: 66, scope: !7270)
!7282 = !DILocation(line: 2585, column: 13, scope: !7270)
!7283 = !DILocation(line: 2584, column: 50, scope: !7270)
!7284 = !DILocation(line: 2584, column: 49, scope: !7270)
!7285 = !DILocation(line: 2584, column: 11, scope: !7270)
!7286 = !DILocation(line: 2584, column: 28, scope: !7270)
!7287 = !DILocation(line: 2584, column: 31, scope: !7270)
!7288 = !DILocation(line: 2584, column: 36, scope: !7270)
!7289 = !DILocation(line: 2586, column: 10, scope: !7190)
!7290 = !DILocation(line: 2587, column: 7, scope: !7190)
!7291 = !DILocation(line: 2563, column: 48, scope: !7184)
!7292 = !DILocation(line: 2563, column: 7, scope: !7184)
!7293 = distinct !{!7293, !7188, !7294}
!7294 = !DILocation(line: 2587, column: 7, scope: !7181)
!7295 = !DILocation(line: 2588, column: 35, scope: !7147)
!7296 = !DILocation(line: 2588, column: 18, scope: !7147)
!7297 = !DILocation(line: 2588, column: 17, scope: !7147)
!7298 = !DILocation(line: 2589, column: 31, scope: !7147)
!7299 = !DILocation(line: 2589, column: 12, scope: !7147)
!7300 = !DILocation(line: 2589, column: 11, scope: !7147)
!7301 = !DILocation(line: 2590, column: 5, scope: !7147)
!7302 = !DILocation(line: 2545, column: 45, scope: !7142)
!7303 = !DILocation(line: 2545, column: 5, scope: !7142)
!7304 = distinct !{!7304, !7145, !7305}
!7305 = !DILocation(line: 2590, column: 5, scope: !7139)
!7306 = !DILocation(line: 2591, column: 11, scope: !7307)
!7307 = distinct !DILexicalBlock(scope: !7078, file: !1, line: 2591, column: 5)
!7308 = !DILocation(line: 2591, column: 10, scope: !7307)
!7309 = !DILocation(line: 2591, column: 15, scope: !7310)
!7310 = distinct !DILexicalBlock(scope: !7307, file: !1, line: 2591, column: 5)
!7311 = !DILocation(line: 2591, column: 29, scope: !7310)
!7312 = !DILocation(line: 2591, column: 36, scope: !7310)
!7313 = !DILocation(line: 2591, column: 17, scope: !7310)
!7314 = !DILocation(line: 2591, column: 5, scope: !7307)
!7315 = !DILocation(line: 2593, column: 7, scope: !7316)
!7316 = distinct !DILexicalBlock(scope: !7310, file: !1, line: 2592, column: 5)
!7317 = !DILocation(line: 2594, column: 7, scope: !7316)
!7318 = !DILocation(line: 2595, column: 7, scope: !7316)
!7319 = !DILocation(line: 2596, column: 11, scope: !7320)
!7320 = distinct !DILexicalBlock(scope: !7316, file: !1, line: 2596, column: 11)
!7321 = !DILocation(line: 2596, column: 18, scope: !7320)
!7322 = !DILocation(line: 2596, column: 24, scope: !7320)
!7323 = !DILocation(line: 2596, column: 11, scope: !7316)
!7324 = !DILocation(line: 2597, column: 9, scope: !7320)
!7325 = !DILocation(line: 2600, column: 9, scope: !7320)
!7326 = !DILocation(line: 2602, column: 11, scope: !7327)
!7327 = distinct !DILexicalBlock(scope: !7316, file: !1, line: 2602, column: 11)
!7328 = !DILocation(line: 2602, column: 18, scope: !7327)
!7329 = !DILocation(line: 2602, column: 29, scope: !7327)
!7330 = !DILocation(line: 2602, column: 11, scope: !7316)
!7331 = !DILocation(line: 2603, column: 9, scope: !7332)
!7332 = distinct !DILexicalBlock(scope: !7333, file: !1, line: 2603, column: 9)
!7333 = distinct !DILexicalBlock(scope: !7327, file: !1, line: 2603, column: 9)
!7334 = !DILocation(line: 2603, column: 9, scope: !7333)
!7335 = !DILocation(line: 2605, column: 8, scope: !7316)
!7336 = !DILocation(line: 2606, column: 5, scope: !7316)
!7337 = !DILocation(line: 2591, column: 46, scope: !7310)
!7338 = !DILocation(line: 2591, column: 5, scope: !7310)
!7339 = distinct !{!7339, !7314, !7340}
!7340 = !DILocation(line: 2606, column: 5, scope: !7307)
!7341 = !DILocation(line: 2607, column: 38, scope: !7342)
!7342 = distinct !DILexicalBlock(scope: !7078, file: !1, line: 2607, column: 9)
!7343 = !DILocation(line: 2607, column: 54, scope: !7342)
!7344 = !DILocation(line: 2607, column: 9, scope: !7342)
!7345 = !DILocation(line: 2607, column: 65, scope: !7342)
!7346 = !DILocation(line: 2607, column: 9, scope: !7078)
!7347 = !DILocation(line: 2608, column: 13, scope: !7342)
!7348 = !DILocation(line: 2608, column: 7, scope: !7342)
!7349 = !DILocation(line: 2609, column: 9, scope: !7350)
!7350 = distinct !DILexicalBlock(scope: !7078, file: !1, line: 2609, column: 9)
!7351 = !DILocation(line: 2609, column: 17, scope: !7350)
!7352 = !DILocation(line: 2609, column: 34, scope: !7350)
!7353 = !DILocation(line: 2609, column: 9, scope: !7078)
!7354 = !DILocalVariable(name: "proceed", scope: !7355, file: !1, line: 2612, type: !509)
!7355 = distinct !DILexicalBlock(scope: !7350, file: !1, line: 2610, column: 7)
!7356 = !DILocation(line: 2612, column: 11, scope: !7355)
!7357 = !DILocation(line: 2617, column: 34, scope: !7355)
!7358 = !DILocation(line: 2617, column: 68, scope: !7355)
!7359 = !DILocation(line: 2618, column: 11, scope: !7355)
!7360 = !DILocation(line: 2618, column: 18, scope: !7355)
!7361 = !DILocation(line: 2617, column: 17, scope: !7355)
!7362 = !DILocation(line: 2617, column: 16, scope: !7355)
!7363 = !DILocation(line: 2619, column: 13, scope: !7364)
!7364 = distinct !DILexicalBlock(scope: !7355, file: !1, line: 2619, column: 13)
!7365 = !DILocation(line: 2619, column: 21, scope: !7364)
!7366 = !DILocation(line: 2619, column: 13, scope: !7355)
!7367 = !DILocation(line: 2620, column: 17, scope: !7364)
!7368 = !DILocation(line: 2620, column: 11, scope: !7364)
!7369 = !DILocation(line: 2621, column: 7, scope: !7355)
!7370 = !DILocation(line: 2622, column: 3, scope: !7078)
!7371 = !DILocation(line: 2507, column: 41, scope: !7072)
!7372 = !DILocation(line: 2507, column: 3, scope: !7072)
!7373 = distinct !{!7373, !7076, !7374}
!7374 = !DILocation(line: 2622, column: 3, scope: !7069)
!7375 = !DILocation(line: 2623, column: 36, scope: !6975)
!7376 = !DILocation(line: 2623, column: 19, scope: !6975)
!7377 = !DILocation(line: 2623, column: 18, scope: !6975)
!7378 = !DILocation(line: 2624, column: 43, scope: !6975)
!7379 = !DILocation(line: 2624, column: 21, scope: !6975)
!7380 = !DILocation(line: 2624, column: 20, scope: !6975)
!7381 = !DILocation(line: 2625, column: 7, scope: !7382)
!7382 = distinct !DILexicalBlock(scope: !6975, file: !1, line: 2625, column: 7)
!7383 = !DILocation(line: 2625, column: 14, scope: !7382)
!7384 = !DILocation(line: 2625, column: 7, scope: !6975)
!7385 = !DILocation(line: 2626, column: 24, scope: !7382)
!7386 = !DILocation(line: 2626, column: 11, scope: !7382)
!7387 = !DILocation(line: 2626, column: 10, scope: !7382)
!7388 = !DILocation(line: 2626, column: 5, scope: !7382)
!7389 = !DILocation(line: 2627, column: 10, scope: !6975)
!7390 = !DILocation(line: 2627, column: 3, scope: !6975)
!7391 = !DILocation(line: 2628, column: 1, scope: !6975)
!7392 = distinct !DISubprogram(name: "StatisticImage", scope: !1, file: !1, line: 3238, type: !7393, scopeLine: 3240, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !826)
!7393 = !DISubroutineType(types: !7394)
!7394 = !{!493, !813, !7395, !1793, !1793, !825}
!7395 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !7396)
!7396 = !DIDerivedType(tag: DW_TAG_typedef, name: "StatisticType", file: !369, line: 124, baseType: !457)
!7397 = !DILocalVariable(name: "image", arg: 1, scope: !7392, file: !1, line: 3238, type: !813)
!7398 = !DILocation(line: 3238, column: 49, scope: !7392)
!7399 = !DILocalVariable(name: "type", arg: 2, scope: !7392, file: !1, line: 3238, type: !7395)
!7400 = !DILocation(line: 3238, column: 75, scope: !7392)
!7401 = !DILocalVariable(name: "width", arg: 3, scope: !7392, file: !1, line: 3239, type: !1793)
!7402 = !DILocation(line: 3239, column: 16, scope: !7392)
!7403 = !DILocalVariable(name: "height", arg: 4, scope: !7392, file: !1, line: 3239, type: !1793)
!7404 = !DILocation(line: 3239, column: 35, scope: !7392)
!7405 = !DILocalVariable(name: "exception", arg: 5, scope: !7392, file: !1, line: 3239, type: !825)
!7406 = !DILocation(line: 3239, column: 57, scope: !7392)
!7407 = !DILocalVariable(name: "statistic_image", scope: !7392, file: !1, line: 3242, type: !493)
!7408 = !DILocation(line: 3242, column: 6, scope: !7392)
!7409 = !DILocation(line: 3244, column: 41, scope: !7392)
!7410 = !DILocation(line: 3244, column: 63, scope: !7392)
!7411 = !DILocation(line: 3244, column: 68, scope: !7392)
!7412 = !DILocation(line: 3245, column: 5, scope: !7392)
!7413 = !DILocation(line: 3245, column: 12, scope: !7392)
!7414 = !DILocation(line: 3244, column: 19, scope: !7392)
!7415 = !DILocation(line: 3244, column: 18, scope: !7392)
!7416 = !DILocation(line: 3246, column: 10, scope: !7392)
!7417 = !DILocation(line: 3246, column: 3, scope: !7392)
!7418 = distinct !DISubprogram(name: "StatisticImageChannel", scope: !1, file: !1, line: 3249, type: !7419, scopeLine: 3252, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !0, retainedNodes: !826)
!7419 = !DISubroutineType(types: !7420)
!7420 = !{!493, !813, !848, !7395, !1793, !1793, !825}
!7421 = !DILocalVariable(name: "image", arg: 1, scope: !7418, file: !1, line: 3249, type: !813)
!7422 = !DILocation(line: 3249, column: 56, scope: !7418)
!7423 = !DILocalVariable(name: "channel", arg: 2, scope: !7418, file: !1, line: 3250, type: !848)
!7424 = !DILocation(line: 3250, column: 21, scope: !7418)
!7425 = !DILocalVariable(name: "type", arg: 3, scope: !7418, file: !1, line: 3250, type: !7395)
!7426 = !DILocation(line: 3250, column: 49, scope: !7418)
!7427 = !DILocalVariable(name: "width", arg: 4, scope: !7418, file: !1, line: 3250, type: !1793)
!7428 = !DILocation(line: 3250, column: 67, scope: !7418)
!7429 = !DILocalVariable(name: "height", arg: 5, scope: !7418, file: !1, line: 3251, type: !1793)
!7430 = !DILocation(line: 3251, column: 16, scope: !7418)
!7431 = !DILocalVariable(name: "exception", arg: 6, scope: !7418, file: !1, line: 3251, type: !825)
!7432 = !DILocation(line: 3251, column: 38, scope: !7418)
!7433 = !DILocalVariable(name: "image_view", scope: !7418, file: !1, line: 3256, type: !861)
!7434 = !DILocation(line: 3256, column: 6, scope: !7418)
!7435 = !DILocalVariable(name: "statistic_view", scope: !7418, file: !1, line: 3257, type: !861)
!7436 = !DILocation(line: 3257, column: 6, scope: !7418)
!7437 = !DILocalVariable(name: "statistic_image", scope: !7418, file: !1, line: 3260, type: !493)
!7438 = !DILocation(line: 3260, column: 6, scope: !7418)
!7439 = !DILocalVariable(name: "status", scope: !7418, file: !1, line: 3263, type: !509)
!7440 = !DILocation(line: 3263, column: 5, scope: !7418)
!7441 = !DILocalVariable(name: "progress", scope: !7418, file: !1, line: 3266, type: !629)
!7442 = !DILocation(line: 3266, column: 5, scope: !7418)
!7443 = !DILocalVariable(name: "pixel_list", scope: !7418, file: !1, line: 3269, type: !7444)
!7444 = !DIDerivedType(tag: DW_TAG_restrict_type, baseType: !778)
!7445 = !DILocation(line: 3269, column: 16, scope: !7418)
!7446 = !DILocalVariable(name: "neighbor_height", scope: !7418, file: !1, line: 3272, type: !504)
!7447 = !DILocation(line: 3272, column: 5, scope: !7418)
!7448 = !DILocalVariable(name: "neighbor_width", scope: !7418, file: !1, line: 3273, type: !504)
!7449 = !DILocation(line: 3273, column: 5, scope: !7418)
!7450 = !DILocalVariable(name: "y", scope: !7418, file: !1, line: 3276, type: !557)
!7451 = !DILocation(line: 3276, column: 5, scope: !7418)
!7452 = !DILocation(line: 3283, column: 7, scope: !7453)
!7453 = distinct !DILexicalBlock(scope: !7418, file: !1, line: 3283, column: 7)
!7454 = !DILocation(line: 3283, column: 14, scope: !7453)
!7455 = !DILocation(line: 3283, column: 20, scope: !7453)
!7456 = !DILocation(line: 3283, column: 7, scope: !7418)
!7457 = !DILocation(line: 3284, column: 61, scope: !7453)
!7458 = !DILocation(line: 3284, column: 68, scope: !7453)
!7459 = !DILocation(line: 3284, column: 12, scope: !7453)
!7460 = !DILocation(line: 3284, column: 5, scope: !7453)
!7461 = !DILocation(line: 3287, column: 30, scope: !7418)
!7462 = !DILocation(line: 3287, column: 36, scope: !7418)
!7463 = !DILocation(line: 3287, column: 43, scope: !7418)
!7464 = !DILocation(line: 3287, column: 51, scope: !7418)
!7465 = !DILocation(line: 3287, column: 58, scope: !7418)
!7466 = !DILocation(line: 3288, column: 5, scope: !7418)
!7467 = !DILocation(line: 3287, column: 19, scope: !7418)
!7468 = !DILocation(line: 3287, column: 18, scope: !7418)
!7469 = !DILocation(line: 3289, column: 7, scope: !7470)
!7470 = distinct !DILexicalBlock(scope: !7418, file: !1, line: 3289, column: 7)
!7471 = !DILocation(line: 3289, column: 23, scope: !7470)
!7472 = !DILocation(line: 3289, column: 7, scope: !7418)
!7473 = !DILocation(line: 3290, column: 5, scope: !7470)
!7474 = !DILocation(line: 3291, column: 28, scope: !7475)
!7475 = distinct !DILexicalBlock(scope: !7418, file: !1, line: 3291, column: 7)
!7476 = !DILocation(line: 3291, column: 7, scope: !7475)
!7477 = !DILocation(line: 3291, column: 57, scope: !7475)
!7478 = !DILocation(line: 3291, column: 7, scope: !7418)
!7479 = !DILocation(line: 3293, column: 24, scope: !7480)
!7480 = distinct !DILexicalBlock(scope: !7475, file: !1, line: 3292, column: 5)
!7481 = !DILocation(line: 3293, column: 35, scope: !7480)
!7482 = !DILocation(line: 3293, column: 52, scope: !7480)
!7483 = !DILocation(line: 3293, column: 7, scope: !7480)
!7484 = !DILocation(line: 3294, column: 36, scope: !7480)
!7485 = !DILocation(line: 3294, column: 23, scope: !7480)
!7486 = !DILocation(line: 3294, column: 22, scope: !7480)
!7487 = !DILocation(line: 3295, column: 7, scope: !7480)
!7488 = !DILocation(line: 3297, column: 18, scope: !7418)
!7489 = !DILocation(line: 3297, column: 24, scope: !7418)
!7490 = !DILocation(line: 3297, column: 64, scope: !7418)
!7491 = !DILocation(line: 3297, column: 55, scope: !7418)
!7492 = !DILocation(line: 3297, column: 31, scope: !7418)
!7493 = !DILocation(line: 3298, column: 5, scope: !7418)
!7494 = !DILocation(line: 3297, column: 17, scope: !7418)
!7495 = !DILocation(line: 3299, column: 19, scope: !7418)
!7496 = !DILocation(line: 3299, column: 26, scope: !7418)
!7497 = !DILocation(line: 3299, column: 66, scope: !7418)
!7498 = !DILocation(line: 3299, column: 57, scope: !7418)
!7499 = !DILocation(line: 3299, column: 33, scope: !7418)
!7500 = !DILocation(line: 3300, column: 5, scope: !7418)
!7501 = !DILocation(line: 3299, column: 18, scope: !7418)
!7502 = !DILocation(line: 3301, column: 40, scope: !7418)
!7503 = !DILocation(line: 3301, column: 55, scope: !7418)
!7504 = !DILocation(line: 3301, column: 14, scope: !7418)
!7505 = !DILocation(line: 3301, column: 13, scope: !7418)
!7506 = !DILocation(line: 3302, column: 7, scope: !7507)
!7507 = distinct !DILexicalBlock(scope: !7418, file: !1, line: 3302, column: 7)
!7508 = !DILocation(line: 3302, column: 18, scope: !7507)
!7509 = !DILocation(line: 3302, column: 7, scope: !7418)
!7510 = !DILocation(line: 3304, column: 36, scope: !7511)
!7511 = distinct !DILexicalBlock(scope: !7507, file: !1, line: 3303, column: 5)
!7512 = !DILocation(line: 3304, column: 23, scope: !7511)
!7513 = !DILocation(line: 3304, column: 22, scope: !7511)
!7514 = !DILocation(line: 3305, column: 7, scope: !7515)
!7515 = distinct !DILexicalBlock(scope: !7511, file: !1, line: 3305, column: 7)
!7516 = !DILocation(line: 3310, column: 9, scope: !7418)
!7517 = !DILocation(line: 3311, column: 11, scope: !7418)
!7518 = !DILocation(line: 3312, column: 38, scope: !7418)
!7519 = !DILocation(line: 3312, column: 44, scope: !7418)
!7520 = !DILocation(line: 3312, column: 14, scope: !7418)
!7521 = !DILocation(line: 3312, column: 13, scope: !7418)
!7522 = !DILocation(line: 3313, column: 44, scope: !7418)
!7523 = !DILocation(line: 3313, column: 60, scope: !7418)
!7524 = !DILocation(line: 3313, column: 18, scope: !7418)
!7525 = !DILocation(line: 3313, column: 17, scope: !7418)
!7526 = !DILocation(line: 3318, column: 9, scope: !7527)
!7527 = distinct !DILexicalBlock(scope: !7418, file: !1, line: 3318, column: 3)
!7528 = !DILocation(line: 3318, column: 8, scope: !7527)
!7529 = !DILocation(line: 3318, column: 13, scope: !7530)
!7530 = distinct !DILexicalBlock(scope: !7527, file: !1, line: 3318, column: 3)
!7531 = !DILocation(line: 3318, column: 27, scope: !7530)
!7532 = !DILocation(line: 3318, column: 44, scope: !7530)
!7533 = !DILocation(line: 3318, column: 15, scope: !7530)
!7534 = !DILocation(line: 3318, column: 3, scope: !7527)
!7535 = !DILocalVariable(name: "id", scope: !7536, file: !1, line: 3321, type: !914)
!7536 = distinct !DILexicalBlock(scope: !7530, file: !1, line: 3319, column: 3)
!7537 = !DILocation(line: 3321, column: 7, scope: !7536)
!7538 = !DILocation(line: 3321, column: 12, scope: !7536)
!7539 = !DILocalVariable(name: "indexes", scope: !7536, file: !1, line: 3324, type: !2952)
!7540 = !DILocation(line: 3324, column: 17, scope: !7536)
!7541 = !DILocalVariable(name: "p", scope: !7536, file: !1, line: 3327, type: !2955)
!7542 = !DILocation(line: 3327, column: 17, scope: !7536)
!7543 = !DILocalVariable(name: "statistic_indexes", scope: !7536, file: !1, line: 3330, type: !918)
!7544 = !DILocation(line: 3330, column: 17, scope: !7536)
!7545 = !DILocalVariable(name: "q", scope: !7536, file: !1, line: 3333, type: !921)
!7546 = !DILocation(line: 3333, column: 17, scope: !7536)
!7547 = !DILocalVariable(name: "x", scope: !7536, file: !1, line: 3336, type: !557)
!7548 = !DILocation(line: 3336, column: 7, scope: !7536)
!7549 = !DILocation(line: 3338, column: 9, scope: !7550)
!7550 = distinct !DILexicalBlock(scope: !7536, file: !1, line: 3338, column: 9)
!7551 = !DILocation(line: 3338, column: 16, scope: !7550)
!7552 = !DILocation(line: 3338, column: 9, scope: !7536)
!7553 = !DILocation(line: 3339, column: 7, scope: !7550)
!7554 = !DILocation(line: 3340, column: 33, scope: !7536)
!7555 = !DILocation(line: 3340, column: 56, scope: !7536)
!7556 = !DILocation(line: 3340, column: 70, scope: !7536)
!7557 = !DILocation(line: 3340, column: 44, scope: !7536)
!7558 = !DILocation(line: 3340, column: 75, scope: !7536)
!7559 = !DILocation(line: 3341, column: 18, scope: !7536)
!7560 = !DILocation(line: 3341, column: 33, scope: !7536)
!7561 = !DILocation(line: 3340, column: 76, scope: !7536)
!7562 = !DILocation(line: 3341, column: 38, scope: !7536)
!7563 = !DILocation(line: 3341, column: 45, scope: !7536)
!7564 = !DILocation(line: 3341, column: 53, scope: !7536)
!7565 = !DILocation(line: 3341, column: 52, scope: !7536)
!7566 = !DILocation(line: 3342, column: 7, scope: !7536)
!7567 = !DILocation(line: 3342, column: 23, scope: !7536)
!7568 = !DILocation(line: 3340, column: 7, scope: !7536)
!7569 = !DILocation(line: 3340, column: 6, scope: !7536)
!7570 = !DILocation(line: 3343, column: 37, scope: !7536)
!7571 = !DILocation(line: 3343, column: 54, scope: !7536)
!7572 = !DILocation(line: 3343, column: 56, scope: !7536)
!7573 = !DILocation(line: 3343, column: 73, scope: !7536)
!7574 = !DILocation(line: 3343, column: 89, scope: !7536)
!7575 = !DILocation(line: 3343, column: 7, scope: !7536)
!7576 = !DILocation(line: 3343, column: 6, scope: !7536)
!7577 = !DILocation(line: 3344, column: 10, scope: !7578)
!7578 = distinct !DILexicalBlock(scope: !7536, file: !1, line: 3344, column: 9)
!7579 = !DILocation(line: 3344, column: 12, scope: !7578)
!7580 = !DILocation(line: 3344, column: 43, scope: !7578)
!7581 = !DILocation(line: 3344, column: 47, scope: !7578)
!7582 = !DILocation(line: 3344, column: 49, scope: !7578)
!7583 = !DILocation(line: 3344, column: 9, scope: !7536)
!7584 = !DILocation(line: 3346, column: 15, scope: !7585)
!7585 = distinct !DILexicalBlock(scope: !7578, file: !1, line: 3345, column: 7)
!7586 = !DILocation(line: 3347, column: 9, scope: !7585)
!7587 = !DILocation(line: 3349, column: 43, scope: !7536)
!7588 = !DILocation(line: 3349, column: 13, scope: !7536)
!7589 = !DILocation(line: 3349, column: 12, scope: !7536)
!7590 = !DILocation(line: 3350, column: 55, scope: !7536)
!7591 = !DILocation(line: 3350, column: 23, scope: !7536)
!7592 = !DILocation(line: 3350, column: 22, scope: !7536)
!7593 = !DILocation(line: 3351, column: 11, scope: !7594)
!7594 = distinct !DILexicalBlock(scope: !7536, file: !1, line: 3351, column: 5)
!7595 = !DILocation(line: 3351, column: 10, scope: !7594)
!7596 = !DILocation(line: 3351, column: 15, scope: !7597)
!7597 = distinct !DILexicalBlock(scope: !7594, file: !1, line: 3351, column: 5)
!7598 = !DILocation(line: 3351, column: 29, scope: !7597)
!7599 = !DILocation(line: 3351, column: 46, scope: !7597)
!7600 = !DILocation(line: 3351, column: 17, scope: !7597)
!7601 = !DILocation(line: 3351, column: 5, scope: !7594)
!7602 = !DILocalVariable(name: "pixel", scope: !7603, file: !1, line: 3354, type: !716)
!7603 = distinct !DILexicalBlock(scope: !7597, file: !1, line: 3352, column: 5)
!7604 = !DILocation(line: 3354, column: 9, scope: !7603)
!7605 = !DILocalVariable(name: "s", scope: !7603, file: !1, line: 3357, type: !2952)
!7606 = !DILocation(line: 3357, column: 19, scope: !7603)
!7607 = !DILocalVariable(name: "r", scope: !7603, file: !1, line: 3360, type: !2955)
!7608 = !DILocation(line: 3360, column: 19, scope: !7603)
!7609 = !DILocalVariable(name: "u", scope: !7603, file: !1, line: 3363, type: !557)
!7610 = !DILocation(line: 3363, column: 9, scope: !7603)
!7611 = !DILocalVariable(name: "v", scope: !7603, file: !1, line: 3364, type: !557)
!7612 = !DILocation(line: 3364, column: 9, scope: !7603)
!7613 = !DILocation(line: 3366, column: 9, scope: !7603)
!7614 = !DILocation(line: 3366, column: 8, scope: !7603)
!7615 = !DILocation(line: 3367, column: 9, scope: !7603)
!7616 = !DILocation(line: 3367, column: 17, scope: !7603)
!7617 = !DILocation(line: 3367, column: 16, scope: !7603)
!7618 = !DILocation(line: 3367, column: 8, scope: !7603)
!7619 = !DILocation(line: 3368, column: 22, scope: !7603)
!7620 = !DILocation(line: 3368, column: 33, scope: !7603)
!7621 = !DILocation(line: 3368, column: 7, scope: !7603)
!7622 = !DILocation(line: 3369, column: 13, scope: !7623)
!7623 = distinct !DILexicalBlock(scope: !7603, file: !1, line: 3369, column: 7)
!7624 = !DILocation(line: 3369, column: 12, scope: !7623)
!7625 = !DILocation(line: 3369, column: 17, scope: !7626)
!7626 = distinct !DILexicalBlock(scope: !7623, file: !1, line: 3369, column: 7)
!7627 = !DILocation(line: 3369, column: 31, scope: !7626)
!7628 = !DILocation(line: 3369, column: 19, scope: !7626)
!7629 = !DILocation(line: 3369, column: 7, scope: !7623)
!7630 = !DILocation(line: 3371, column: 15, scope: !7631)
!7631 = distinct !DILexicalBlock(scope: !7632, file: !1, line: 3371, column: 9)
!7632 = distinct !DILexicalBlock(scope: !7626, file: !1, line: 3370, column: 7)
!7633 = !DILocation(line: 3371, column: 14, scope: !7631)
!7634 = !DILocation(line: 3371, column: 19, scope: !7635)
!7635 = distinct !DILexicalBlock(scope: !7631, file: !1, line: 3371, column: 9)
!7636 = !DILocation(line: 3371, column: 33, scope: !7635)
!7637 = !DILocation(line: 3371, column: 21, scope: !7635)
!7638 = !DILocation(line: 3371, column: 9, scope: !7631)
!7639 = !DILocation(line: 3372, column: 27, scope: !7635)
!7640 = !DILocation(line: 3372, column: 33, scope: !7635)
!7641 = !DILocation(line: 3372, column: 35, scope: !7635)
!7642 = !DILocation(line: 3372, column: 34, scope: !7635)
!7643 = !DILocation(line: 3372, column: 37, scope: !7635)
!7644 = !DILocation(line: 3372, column: 39, scope: !7635)
!7645 = !DILocation(line: 3372, column: 38, scope: !7635)
!7646 = !DILocation(line: 3372, column: 41, scope: !7635)
!7647 = !DILocation(line: 3372, column: 52, scope: !7635)
!7648 = !DILocation(line: 3372, column: 11, scope: !7635)
!7649 = !DILocation(line: 3371, column: 50, scope: !7635)
!7650 = !DILocation(line: 3371, column: 9, scope: !7635)
!7651 = distinct !{!7651, !7638, !7652}
!7652 = !DILocation(line: 3372, column: 55, scope: !7631)
!7653 = !DILocation(line: 3373, column: 12, scope: !7632)
!7654 = !DILocation(line: 3373, column: 19, scope: !7632)
!7655 = !DILocation(line: 3373, column: 27, scope: !7632)
!7656 = !DILocation(line: 3373, column: 26, scope: !7632)
!7657 = !DILocation(line: 3373, column: 10, scope: !7632)
!7658 = !DILocation(line: 3374, column: 12, scope: !7632)
!7659 = !DILocation(line: 3374, column: 19, scope: !7632)
!7660 = !DILocation(line: 3374, column: 27, scope: !7632)
!7661 = !DILocation(line: 3374, column: 26, scope: !7632)
!7662 = !DILocation(line: 3374, column: 10, scope: !7632)
!7663 = !DILocation(line: 3375, column: 7, scope: !7632)
!7664 = !DILocation(line: 3369, column: 49, scope: !7626)
!7665 = !DILocation(line: 3369, column: 7, scope: !7626)
!7666 = distinct !{!7666, !7629, !7667}
!7667 = !DILocation(line: 3375, column: 7, scope: !7623)
!7668 = !DILocation(line: 3376, column: 28, scope: !7603)
!7669 = !DILocation(line: 3376, column: 7, scope: !7603)
!7670 = !DILocation(line: 3377, column: 28, scope: !7603)
!7671 = !DILocation(line: 3377, column: 34, scope: !7603)
!7672 = !DILocation(line: 3377, column: 36, scope: !7603)
!7673 = !DILocation(line: 3377, column: 51, scope: !7603)
!7674 = !DILocation(line: 3377, column: 50, scope: !7603)
!7675 = !DILocation(line: 3377, column: 66, scope: !7603)
!7676 = !DILocation(line: 3377, column: 35, scope: !7603)
!7677 = !DILocation(line: 3377, column: 69, scope: !7603)
!7678 = !DILocation(line: 3377, column: 77, scope: !7603)
!7679 = !DILocation(line: 3377, column: 76, scope: !7603)
!7680 = !DILocation(line: 3378, column: 9, scope: !7603)
!7681 = !DILocation(line: 3378, column: 24, scope: !7603)
!7682 = !DILocation(line: 3378, column: 23, scope: !7603)
!7683 = !DILocation(line: 3378, column: 39, scope: !7603)
!7684 = !DILocation(line: 3377, column: 78, scope: !7603)
!7685 = !DILocation(line: 3377, column: 7, scope: !7603)
!7686 = !DILocation(line: 3379, column: 15, scope: !7603)
!7687 = !DILocation(line: 3379, column: 7, scope: !7603)
!7688 = !DILocalVariable(name: "maximum", scope: !7689, file: !1, line: 3384, type: !716)
!7689 = distinct !DILexicalBlock(scope: !7690, file: !1, line: 3382, column: 9)
!7690 = distinct !DILexicalBlock(scope: !7603, file: !1, line: 3380, column: 7)
!7691 = !DILocation(line: 3384, column: 13, scope: !7689)
!7692 = !DILocalVariable(name: "minimum", scope: !7689, file: !1, line: 3385, type: !716)
!7693 = !DILocation(line: 3385, column: 13, scope: !7689)
!7694 = !DILocation(line: 3387, column: 31, scope: !7689)
!7695 = !DILocation(line: 3387, column: 42, scope: !7689)
!7696 = !DILocation(line: 3387, column: 11, scope: !7689)
!7697 = !DILocation(line: 3388, column: 19, scope: !7689)
!7698 = !DILocation(line: 3389, column: 31, scope: !7689)
!7699 = !DILocation(line: 3389, column: 42, scope: !7689)
!7700 = !DILocation(line: 3389, column: 11, scope: !7689)
!7701 = !DILocation(line: 3390, column: 19, scope: !7689)
!7702 = !DILocation(line: 3391, column: 49, scope: !7689)
!7703 = !DILocation(line: 3391, column: 61, scope: !7689)
!7704 = !DILocation(line: 3391, column: 52, scope: !7689)
!7705 = !DILocation(line: 3391, column: 21, scope: !7689)
!7706 = !DILocation(line: 3391, column: 17, scope: !7689)
!7707 = !DILocation(line: 3391, column: 20, scope: !7689)
!7708 = !DILocation(line: 3392, column: 51, scope: !7689)
!7709 = !DILocation(line: 3392, column: 65, scope: !7689)
!7710 = !DILocation(line: 3392, column: 56, scope: !7689)
!7711 = !DILocation(line: 3392, column: 23, scope: !7689)
!7712 = !DILocation(line: 3392, column: 17, scope: !7689)
!7713 = !DILocation(line: 3392, column: 22, scope: !7689)
!7714 = !DILocation(line: 3393, column: 50, scope: !7689)
!7715 = !DILocation(line: 3393, column: 63, scope: !7689)
!7716 = !DILocation(line: 3393, column: 54, scope: !7689)
!7717 = !DILocation(line: 3393, column: 22, scope: !7689)
!7718 = !DILocation(line: 3393, column: 17, scope: !7689)
!7719 = !DILocation(line: 3393, column: 21, scope: !7689)
!7720 = !DILocation(line: 3394, column: 53, scope: !7689)
!7721 = !DILocation(line: 3394, column: 69, scope: !7689)
!7722 = !DILocation(line: 3394, column: 60, scope: !7689)
!7723 = !DILocation(line: 3394, column: 25, scope: !7689)
!7724 = !DILocation(line: 3394, column: 17, scope: !7689)
!7725 = !DILocation(line: 3394, column: 24, scope: !7689)
!7726 = !DILocation(line: 3395, column: 15, scope: !7727)
!7727 = distinct !DILexicalBlock(scope: !7689, file: !1, line: 3395, column: 15)
!7728 = !DILocation(line: 3395, column: 22, scope: !7727)
!7729 = !DILocation(line: 3395, column: 33, scope: !7727)
!7730 = !DILocation(line: 3395, column: 15, scope: !7689)
!7731 = !DILocation(line: 3396, column: 53, scope: !7727)
!7732 = !DILocation(line: 3396, column: 67, scope: !7727)
!7733 = !DILocation(line: 3396, column: 58, scope: !7727)
!7734 = !DILocation(line: 3396, column: 25, scope: !7727)
!7735 = !DILocation(line: 3396, column: 19, scope: !7727)
!7736 = !DILocation(line: 3396, column: 24, scope: !7727)
!7737 = !DILocation(line: 3396, column: 13, scope: !7727)
!7738 = !DILocation(line: 3397, column: 11, scope: !7689)
!7739 = !DILocation(line: 3401, column: 31, scope: !7740)
!7740 = distinct !DILexicalBlock(scope: !7690, file: !1, line: 3400, column: 9)
!7741 = !DILocation(line: 3401, column: 42, scope: !7740)
!7742 = !DILocation(line: 3401, column: 11, scope: !7740)
!7743 = !DILocation(line: 3402, column: 11, scope: !7740)
!7744 = !DILocation(line: 3406, column: 28, scope: !7745)
!7745 = distinct !DILexicalBlock(scope: !7690, file: !1, line: 3405, column: 9)
!7746 = !DILocation(line: 3406, column: 39, scope: !7745)
!7747 = !DILocation(line: 3406, column: 11, scope: !7745)
!7748 = !DILocation(line: 3407, column: 11, scope: !7745)
!7749 = !DILocation(line: 3408, column: 9, scope: !7745)
!7750 = !DILocation(line: 3412, column: 30, scope: !7751)
!7751 = distinct !DILexicalBlock(scope: !7690, file: !1, line: 3411, column: 9)
!7752 = !DILocation(line: 3412, column: 41, scope: !7751)
!7753 = !DILocation(line: 3412, column: 11, scope: !7751)
!7754 = !DILocation(line: 3413, column: 11, scope: !7751)
!7755 = !DILocation(line: 3417, column: 31, scope: !7756)
!7756 = distinct !DILexicalBlock(scope: !7690, file: !1, line: 3416, column: 9)
!7757 = !DILocation(line: 3417, column: 42, scope: !7756)
!7758 = !DILocation(line: 3417, column: 11, scope: !7756)
!7759 = !DILocation(line: 3418, column: 11, scope: !7756)
!7760 = !DILocation(line: 3422, column: 28, scope: !7761)
!7761 = distinct !DILexicalBlock(scope: !7690, file: !1, line: 3421, column: 9)
!7762 = !DILocation(line: 3422, column: 39, scope: !7761)
!7763 = !DILocation(line: 3422, column: 11, scope: !7761)
!7764 = !DILocation(line: 3423, column: 11, scope: !7761)
!7765 = !DILocation(line: 3427, column: 31, scope: !7766)
!7766 = distinct !DILexicalBlock(scope: !7690, file: !1, line: 3426, column: 9)
!7767 = !DILocation(line: 3427, column: 42, scope: !7766)
!7768 = !DILocation(line: 3427, column: 11, scope: !7766)
!7769 = !DILocation(line: 3428, column: 11, scope: !7766)
!7770 = !DILocation(line: 3432, column: 41, scope: !7771)
!7771 = distinct !DILexicalBlock(scope: !7690, file: !1, line: 3431, column: 9)
!7772 = !DILocation(line: 3432, column: 52, scope: !7771)
!7773 = !DILocation(line: 3432, column: 11, scope: !7771)
!7774 = !DILocation(line: 3433, column: 11, scope: !7771)
!7775 = !DILocation(line: 3436, column: 12, scope: !7776)
!7776 = distinct !DILexicalBlock(scope: !7603, file: !1, line: 3436, column: 11)
!7777 = !DILocation(line: 3436, column: 20, scope: !7776)
!7778 = !DILocation(line: 3436, column: 34, scope: !7776)
!7779 = !DILocation(line: 3436, column: 11, scope: !7603)
!7780 = !DILocation(line: 3437, column: 9, scope: !7776)
!7781 = !DILocation(line: 3438, column: 12, scope: !7782)
!7782 = distinct !DILexicalBlock(scope: !7603, file: !1, line: 3438, column: 11)
!7783 = !DILocation(line: 3438, column: 20, scope: !7782)
!7784 = !DILocation(line: 3438, column: 36, scope: !7782)
!7785 = !DILocation(line: 3438, column: 11, scope: !7603)
!7786 = !DILocation(line: 3439, column: 9, scope: !7782)
!7787 = !DILocation(line: 3440, column: 12, scope: !7788)
!7788 = distinct !DILexicalBlock(scope: !7603, file: !1, line: 3440, column: 11)
!7789 = !DILocation(line: 3440, column: 20, scope: !7788)
!7790 = !DILocation(line: 3440, column: 35, scope: !7788)
!7791 = !DILocation(line: 3440, column: 11, scope: !7603)
!7792 = !DILocation(line: 3441, column: 9, scope: !7788)
!7793 = !DILocation(line: 3442, column: 12, scope: !7794)
!7794 = distinct !DILexicalBlock(scope: !7603, file: !1, line: 3442, column: 11)
!7795 = !DILocation(line: 3442, column: 20, scope: !7794)
!7796 = !DILocation(line: 3442, column: 38, scope: !7794)
!7797 = !DILocation(line: 3442, column: 11, scope: !7603)
!7798 = !DILocation(line: 3443, column: 9, scope: !7794)
!7799 = !DILocation(line: 3444, column: 13, scope: !7800)
!7800 = distinct !DILexicalBlock(scope: !7603, file: !1, line: 3444, column: 11)
!7801 = !DILocation(line: 3444, column: 21, scope: !7800)
!7802 = !DILocation(line: 3444, column: 37, scope: !7800)
!7803 = !DILocation(line: 3444, column: 43, scope: !7800)
!7804 = !DILocation(line: 3445, column: 12, scope: !7800)
!7805 = !DILocation(line: 3445, column: 19, scope: !7800)
!7806 = !DILocation(line: 3445, column: 30, scope: !7800)
!7807 = !DILocation(line: 3444, column: 11, scope: !7603)
!7808 = !DILocation(line: 3446, column: 9, scope: !7809)
!7809 = distinct !DILexicalBlock(scope: !7810, file: !1, line: 3446, column: 9)
!7810 = distinct !DILexicalBlock(scope: !7800, file: !1, line: 3446, column: 9)
!7811 = !DILocation(line: 3446, column: 9, scope: !7810)
!7812 = !DILocation(line: 3447, column: 8, scope: !7603)
!7813 = !DILocation(line: 3448, column: 8, scope: !7603)
!7814 = !DILocation(line: 3449, column: 5, scope: !7603)
!7815 = !DILocation(line: 3351, column: 56, scope: !7597)
!7816 = !DILocation(line: 3351, column: 5, scope: !7597)
!7817 = distinct !{!7817, !7601, !7818}
!7818 = !DILocation(line: 3449, column: 5, scope: !7594)
!7819 = !DILocation(line: 3450, column: 38, scope: !7820)
!7820 = distinct !DILexicalBlock(scope: !7536, file: !1, line: 3450, column: 9)
!7821 = !DILocation(line: 3450, column: 53, scope: !7820)
!7822 = !DILocation(line: 3450, column: 9, scope: !7820)
!7823 = !DILocation(line: 3450, column: 64, scope: !7820)
!7824 = !DILocation(line: 3450, column: 9, scope: !7536)
!7825 = !DILocation(line: 3451, column: 13, scope: !7820)
!7826 = !DILocation(line: 3451, column: 7, scope: !7820)
!7827 = !DILocation(line: 3452, column: 9, scope: !7828)
!7828 = distinct !DILexicalBlock(scope: !7536, file: !1, line: 3452, column: 9)
!7829 = !DILocation(line: 3452, column: 16, scope: !7828)
!7830 = !DILocation(line: 3452, column: 33, scope: !7828)
!7831 = !DILocation(line: 3452, column: 9, scope: !7536)
!7832 = !DILocalVariable(name: "proceed", scope: !7833, file: !1, line: 3455, type: !509)
!7833 = distinct !DILexicalBlock(scope: !7828, file: !1, line: 3453, column: 7)
!7834 = !DILocation(line: 3455, column: 11, scope: !7833)
!7835 = !DILocation(line: 3460, column: 34, scope: !7833)
!7836 = !DILocation(line: 3460, column: 66, scope: !7833)
!7837 = !DILocation(line: 3461, column: 11, scope: !7833)
!7838 = !DILocation(line: 3461, column: 18, scope: !7833)
!7839 = !DILocation(line: 3460, column: 17, scope: !7833)
!7840 = !DILocation(line: 3460, column: 16, scope: !7833)
!7841 = !DILocation(line: 3462, column: 13, scope: !7842)
!7842 = distinct !DILexicalBlock(scope: !7833, file: !1, line: 3462, column: 13)
!7843 = !DILocation(line: 3462, column: 21, scope: !7842)
!7844 = !DILocation(line: 3462, column: 13, scope: !7833)
!7845 = !DILocation(line: 3463, column: 17, scope: !7842)
!7846 = !DILocation(line: 3463, column: 11, scope: !7842)
!7847 = !DILocation(line: 3464, column: 7, scope: !7833)
!7848 = !DILocation(line: 3465, column: 3, scope: !7536)
!7849 = !DILocation(line: 3318, column: 51, scope: !7530)
!7850 = !DILocation(line: 3318, column: 3, scope: !7530)
!7851 = distinct !{!7851, !7534, !7852}
!7852 = !DILocation(line: 3465, column: 3, scope: !7527)
!7853 = !DILocation(line: 3466, column: 35, scope: !7418)
!7854 = !DILocation(line: 3466, column: 18, scope: !7418)
!7855 = !DILocation(line: 3466, column: 17, scope: !7418)
!7856 = !DILocation(line: 3467, column: 31, scope: !7418)
!7857 = !DILocation(line: 3467, column: 14, scope: !7418)
!7858 = !DILocation(line: 3467, column: 13, scope: !7418)
!7859 = !DILocation(line: 3468, column: 40, scope: !7418)
!7860 = !DILocation(line: 3468, column: 14, scope: !7418)
!7861 = !DILocation(line: 3468, column: 13, scope: !7418)
!7862 = !DILocation(line: 3469, column: 7, scope: !7863)
!7863 = distinct !DILexicalBlock(scope: !7418, file: !1, line: 3469, column: 7)
!7864 = !DILocation(line: 3469, column: 14, scope: !7863)
!7865 = !DILocation(line: 3469, column: 7, scope: !7418)
!7866 = !DILocation(line: 3470, column: 34, scope: !7863)
!7867 = !DILocation(line: 3470, column: 21, scope: !7863)
!7868 = !DILocation(line: 3470, column: 20, scope: !7863)
!7869 = !DILocation(line: 3470, column: 5, scope: !7863)
!7870 = !DILocation(line: 3471, column: 10, scope: !7418)
!7871 = !DILocation(line: 3471, column: 3, scope: !7418)
!7872 = !DILocation(line: 3472, column: 1, scope: !7418)
!7873 = distinct !DISubprogram(name: "AcquirePixelListThreadSet", scope: !1, file: !1, line: 2752, type: !7874, scopeLine: 2754, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !826)
!7874 = !DISubroutineType(types: !7875)
!7875 = !{!778, !1793, !1793}
!7876 = !DILocalVariable(name: "width", arg: 1, scope: !7873, file: !1, line: 2752, type: !1793)
!7877 = !DILocation(line: 2752, column: 59, scope: !7873)
!7878 = !DILocalVariable(name: "height", arg: 2, scope: !7873, file: !1, line: 2753, type: !1793)
!7879 = !DILocation(line: 2753, column: 16, scope: !7873)
!7880 = !DILocalVariable(name: "pixel_list", scope: !7873, file: !1, line: 2756, type: !778)
!7881 = !DILocation(line: 2756, column: 7, scope: !7873)
!7882 = !DILocalVariable(name: "i", scope: !7873, file: !1, line: 2759, type: !557)
!7883 = !DILocation(line: 2759, column: 5, scope: !7873)
!7884 = !DILocalVariable(name: "number_threads", scope: !7873, file: !1, line: 2762, type: !504)
!7885 = !DILocation(line: 2762, column: 5, scope: !7873)
!7886 = !DILocation(line: 2764, column: 27, scope: !7873)
!7887 = !DILocation(line: 2764, column: 17, scope: !7873)
!7888 = !DILocation(line: 2765, column: 50, scope: !7873)
!7889 = !DILocation(line: 2765, column: 29, scope: !7873)
!7890 = !DILocation(line: 2765, column: 14, scope: !7873)
!7891 = !DILocation(line: 2765, column: 13, scope: !7873)
!7892 = !DILocation(line: 2767, column: 7, scope: !7893)
!7893 = distinct !DILexicalBlock(scope: !7873, file: !1, line: 2767, column: 7)
!7894 = !DILocation(line: 2767, column: 18, scope: !7893)
!7895 = !DILocation(line: 2767, column: 7, scope: !7873)
!7896 = !DILocation(line: 2768, column: 5, scope: !7893)
!7897 = !DILocation(line: 2769, column: 28, scope: !7873)
!7898 = !DILocation(line: 2769, column: 41, scope: !7873)
!7899 = !DILocation(line: 2769, column: 55, scope: !7873)
!7900 = !DILocation(line: 2769, column: 10, scope: !7873)
!7901 = !DILocation(line: 2770, column: 9, scope: !7902)
!7902 = distinct !DILexicalBlock(scope: !7873, file: !1, line: 2770, column: 3)
!7903 = !DILocation(line: 2770, column: 8, scope: !7902)
!7904 = !DILocation(line: 2770, column: 13, scope: !7905)
!7905 = distinct !DILexicalBlock(scope: !7902, file: !1, line: 2770, column: 3)
!7906 = !DILocation(line: 2770, column: 27, scope: !7905)
!7907 = !DILocation(line: 2770, column: 15, scope: !7905)
!7908 = !DILocation(line: 2770, column: 3, scope: !7902)
!7909 = !DILocation(line: 2772, column: 36, scope: !7910)
!7910 = distinct !DILexicalBlock(scope: !7905, file: !1, line: 2771, column: 3)
!7911 = !DILocation(line: 2772, column: 42, scope: !7910)
!7912 = !DILocation(line: 2772, column: 19, scope: !7910)
!7913 = !DILocation(line: 2772, column: 5, scope: !7910)
!7914 = !DILocation(line: 2772, column: 16, scope: !7910)
!7915 = !DILocation(line: 2772, column: 18, scope: !7910)
!7916 = !DILocation(line: 2773, column: 9, scope: !7917)
!7917 = distinct !DILexicalBlock(scope: !7910, file: !1, line: 2773, column: 9)
!7918 = !DILocation(line: 2773, column: 20, scope: !7917)
!7919 = !DILocation(line: 2773, column: 23, scope: !7917)
!7920 = !DILocation(line: 2773, column: 9, scope: !7910)
!7921 = !DILocation(line: 2774, column: 40, scope: !7917)
!7922 = !DILocation(line: 2774, column: 14, scope: !7917)
!7923 = !DILocation(line: 2774, column: 7, scope: !7917)
!7924 = !DILocation(line: 2775, column: 3, scope: !7910)
!7925 = !DILocation(line: 2770, column: 44, scope: !7905)
!7926 = !DILocation(line: 2770, column: 3, scope: !7905)
!7927 = distinct !{!7927, !7908, !7928}
!7928 = !DILocation(line: 2775, column: 3, scope: !7902)
!7929 = !DILocation(line: 2776, column: 10, scope: !7873)
!7930 = !DILocation(line: 2776, column: 3, scope: !7873)
!7931 = !DILocation(line: 2777, column: 1, scope: !7873)
!7932 = distinct !DISubprogram(name: "ResetPixelList", scope: !1, file: !1, line: 3210, type: !7933, scopeLine: 3211, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !826)
!7933 = !DISubroutineType(types: !7934)
!7934 = !{null, !779}
!7935 = !DILocalVariable(name: "pixel_list", arg: 1, scope: !7932, file: !1, line: 3210, type: !779)
!7936 = !DILocation(line: 3210, column: 39, scope: !7932)
!7937 = !DILocalVariable(name: "level", scope: !7932, file: !1, line: 3213, type: !660)
!7938 = !DILocation(line: 3213, column: 5, scope: !7932)
!7939 = !DILocalVariable(name: "root", scope: !7932, file: !1, line: 3216, type: !793)
!7940 = !DILocation(line: 3216, column: 6, scope: !7932)
!7941 = !DILocalVariable(name: "list", scope: !7932, file: !1, line: 3219, type: !7942)
!7942 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !788, size: 64)
!7943 = !DILocation(line: 3219, column: 6, scope: !7932)
!7944 = !DILocalVariable(name: "channel", scope: !7932, file: !1, line: 3222, type: !557)
!7945 = !DILocation(line: 3222, column: 5, scope: !7932)
!7946 = !DILocation(line: 3227, column: 15, scope: !7947)
!7947 = distinct !DILexicalBlock(scope: !7932, file: !1, line: 3227, column: 3)
!7948 = !DILocation(line: 3227, column: 8, scope: !7947)
!7949 = !DILocation(line: 3227, column: 19, scope: !7950)
!7950 = distinct !DILexicalBlock(scope: !7947, file: !1, line: 3227, column: 3)
!7951 = !DILocation(line: 3227, column: 27, scope: !7950)
!7952 = !DILocation(line: 3227, column: 3, scope: !7947)
!7953 = !DILocation(line: 3229, column: 10, scope: !7954)
!7954 = distinct !DILexicalBlock(scope: !7950, file: !1, line: 3228, column: 3)
!7955 = !DILocation(line: 3229, column: 22, scope: !7954)
!7956 = !DILocation(line: 3229, column: 28, scope: !7954)
!7957 = !DILocation(line: 3229, column: 27, scope: !7954)
!7958 = !DILocation(line: 3229, column: 9, scope: !7954)
!7959 = !DILocation(line: 3230, column: 10, scope: !7954)
!7960 = !DILocation(line: 3230, column: 16, scope: !7954)
!7961 = !DILocation(line: 3230, column: 21, scope: !7954)
!7962 = !DILocation(line: 3230, column: 9, scope: !7954)
!7963 = !DILocation(line: 3231, column: 5, scope: !7954)
!7964 = !DILocation(line: 3231, column: 11, scope: !7954)
!7965 = !DILocation(line: 3231, column: 16, scope: !7954)
!7966 = !DILocation(line: 3232, column: 15, scope: !7967)
!7967 = distinct !DILexicalBlock(scope: !7954, file: !1, line: 3232, column: 5)
!7968 = !DILocation(line: 3232, column: 10, scope: !7967)
!7969 = !DILocation(line: 3232, column: 19, scope: !7970)
!7970 = distinct !DILexicalBlock(scope: !7967, file: !1, line: 3232, column: 5)
!7971 = !DILocation(line: 3232, column: 25, scope: !7970)
!7972 = !DILocation(line: 3232, column: 5, scope: !7967)
!7973 = !DILocation(line: 3233, column: 7, scope: !7970)
!7974 = !DILocation(line: 3233, column: 13, scope: !7970)
!7975 = !DILocation(line: 3233, column: 18, scope: !7970)
!7976 = !DILocation(line: 3233, column: 24, scope: !7970)
!7977 = !DILocation(line: 3232, column: 35, scope: !7970)
!7978 = !DILocation(line: 3232, column: 5, scope: !7970)
!7979 = distinct !{!7979, !7972, !7980}
!7980 = !DILocation(line: 3233, column: 25, scope: !7967)
!7981 = !DILocation(line: 3234, column: 3, scope: !7954)
!7982 = !DILocation(line: 3227, column: 39, scope: !7950)
!7983 = !DILocation(line: 3227, column: 3, scope: !7950)
!7984 = distinct !{!7984, !7952, !7985}
!7985 = !DILocation(line: 3234, column: 3, scope: !7947)
!7986 = !DILocation(line: 3235, column: 20, scope: !7932)
!7987 = !DILocation(line: 3235, column: 32, scope: !7932)
!7988 = !DILocation(line: 3235, column: 41, scope: !7932)
!7989 = !DILocation(line: 3235, column: 3, scope: !7932)
!7990 = !DILocation(line: 3235, column: 15, scope: !7932)
!7991 = !DILocation(line: 3235, column: 19, scope: !7932)
!7992 = !DILocation(line: 3236, column: 1, scope: !7932)
!7993 = distinct !DISubprogram(name: "InsertPixelList", scope: !1, file: !1, line: 3161, type: !7994, scopeLine: 3163, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !826)
!7994 = !DISubroutineType(types: !7995)
!7995 = !{null, !813, !731, !735, !779}
!7996 = !DILocalVariable(name: "image", arg: 1, scope: !7993, file: !1, line: 3161, type: !813)
!7997 = !DILocation(line: 3161, column: 49, scope: !7993)
!7998 = !DILocalVariable(name: "pixel", arg: 2, scope: !7993, file: !1, line: 3161, type: !731)
!7999 = !DILocation(line: 3161, column: 74, scope: !7993)
!8000 = !DILocalVariable(name: "indexes", arg: 3, scope: !7993, file: !1, line: 3162, type: !735)
!8001 = !DILocation(line: 3162, column: 22, scope: !7993)
!8002 = !DILocalVariable(name: "pixel_list", arg: 4, scope: !7993, file: !1, line: 3162, type: !779)
!8003 = !DILocation(line: 3162, column: 41, scope: !7993)
!8004 = !DILocalVariable(name: "signature", scope: !7993, file: !1, line: 3165, type: !504)
!8005 = !DILocation(line: 3165, column: 5, scope: !7993)
!8006 = !DILocalVariable(name: "index", scope: !7993, file: !1, line: 3168, type: !522)
!8007 = !DILocation(line: 3168, column: 5, scope: !7993)
!8008 = !DILocation(line: 3170, column: 29, scope: !7993)
!8009 = !DILocation(line: 3170, column: 9, scope: !7993)
!8010 = !DILocation(line: 3170, column: 8, scope: !7993)
!8011 = !DILocation(line: 3171, column: 13, scope: !7993)
!8012 = !DILocation(line: 3171, column: 25, scope: !7993)
!8013 = !DILocation(line: 3171, column: 34, scope: !7993)
!8014 = !DILocation(line: 3171, column: 40, scope: !7993)
!8015 = !DILocation(line: 3171, column: 47, scope: !7993)
!8016 = !DILocation(line: 3171, column: 12, scope: !7993)
!8017 = !DILocation(line: 3172, column: 7, scope: !8018)
!8018 = distinct !DILexicalBlock(scope: !7993, file: !1, line: 3172, column: 7)
!8019 = !DILocation(line: 3172, column: 20, scope: !8018)
!8020 = !DILocation(line: 3172, column: 32, scope: !8018)
!8021 = !DILocation(line: 3172, column: 17, scope: !8018)
!8022 = !DILocation(line: 3172, column: 7, scope: !7993)
!8023 = !DILocation(line: 3173, column: 5, scope: !8018)
!8024 = !DILocation(line: 3173, column: 17, scope: !8018)
!8025 = !DILocation(line: 3173, column: 26, scope: !8018)
!8026 = !DILocation(line: 3173, column: 32, scope: !8018)
!8027 = !DILocation(line: 3173, column: 39, scope: !8018)
!8028 = !DILocation(line: 3173, column: 44, scope: !8018)
!8029 = !DILocation(line: 3175, column: 22, scope: !8018)
!8030 = !DILocation(line: 3175, column: 35, scope: !8018)
!8031 = !DILocation(line: 3175, column: 5, scope: !8018)
!8032 = !DILocation(line: 3176, column: 29, scope: !7993)
!8033 = !DILocation(line: 3176, column: 9, scope: !7993)
!8034 = !DILocation(line: 3176, column: 8, scope: !7993)
!8035 = !DILocation(line: 3177, column: 13, scope: !7993)
!8036 = !DILocation(line: 3177, column: 25, scope: !7993)
!8037 = !DILocation(line: 3177, column: 34, scope: !7993)
!8038 = !DILocation(line: 3177, column: 40, scope: !7993)
!8039 = !DILocation(line: 3177, column: 47, scope: !7993)
!8040 = !DILocation(line: 3177, column: 12, scope: !7993)
!8041 = !DILocation(line: 3178, column: 7, scope: !8042)
!8042 = distinct !DILexicalBlock(scope: !7993, file: !1, line: 3178, column: 7)
!8043 = !DILocation(line: 3178, column: 20, scope: !8042)
!8044 = !DILocation(line: 3178, column: 32, scope: !8042)
!8045 = !DILocation(line: 3178, column: 17, scope: !8042)
!8046 = !DILocation(line: 3178, column: 7, scope: !7993)
!8047 = !DILocation(line: 3179, column: 5, scope: !8042)
!8048 = !DILocation(line: 3179, column: 17, scope: !8042)
!8049 = !DILocation(line: 3179, column: 26, scope: !8042)
!8050 = !DILocation(line: 3179, column: 32, scope: !8042)
!8051 = !DILocation(line: 3179, column: 39, scope: !8042)
!8052 = !DILocation(line: 3179, column: 44, scope: !8042)
!8053 = !DILocation(line: 3181, column: 22, scope: !8042)
!8054 = !DILocation(line: 3181, column: 35, scope: !8042)
!8055 = !DILocation(line: 3181, column: 5, scope: !8042)
!8056 = !DILocation(line: 3182, column: 29, scope: !7993)
!8057 = !DILocation(line: 3182, column: 9, scope: !7993)
!8058 = !DILocation(line: 3182, column: 8, scope: !7993)
!8059 = !DILocation(line: 3183, column: 13, scope: !7993)
!8060 = !DILocation(line: 3183, column: 25, scope: !7993)
!8061 = !DILocation(line: 3183, column: 34, scope: !7993)
!8062 = !DILocation(line: 3183, column: 40, scope: !7993)
!8063 = !DILocation(line: 3183, column: 47, scope: !7993)
!8064 = !DILocation(line: 3183, column: 12, scope: !7993)
!8065 = !DILocation(line: 3184, column: 7, scope: !8066)
!8066 = distinct !DILexicalBlock(scope: !7993, file: !1, line: 3184, column: 7)
!8067 = !DILocation(line: 3184, column: 20, scope: !8066)
!8068 = !DILocation(line: 3184, column: 32, scope: !8066)
!8069 = !DILocation(line: 3184, column: 17, scope: !8066)
!8070 = !DILocation(line: 3184, column: 7, scope: !7993)
!8071 = !DILocation(line: 3185, column: 5, scope: !8066)
!8072 = !DILocation(line: 3185, column: 17, scope: !8066)
!8073 = !DILocation(line: 3185, column: 26, scope: !8066)
!8074 = !DILocation(line: 3185, column: 32, scope: !8066)
!8075 = !DILocation(line: 3185, column: 39, scope: !8066)
!8076 = !DILocation(line: 3185, column: 44, scope: !8066)
!8077 = !DILocation(line: 3187, column: 22, scope: !8066)
!8078 = !DILocation(line: 3187, column: 35, scope: !8066)
!8079 = !DILocation(line: 3187, column: 5, scope: !8066)
!8080 = !DILocation(line: 3188, column: 29, scope: !7993)
!8081 = !DILocation(line: 3188, column: 9, scope: !7993)
!8082 = !DILocation(line: 3188, column: 8, scope: !7993)
!8083 = !DILocation(line: 3189, column: 13, scope: !7993)
!8084 = !DILocation(line: 3189, column: 25, scope: !7993)
!8085 = !DILocation(line: 3189, column: 34, scope: !7993)
!8086 = !DILocation(line: 3189, column: 40, scope: !7993)
!8087 = !DILocation(line: 3189, column: 47, scope: !7993)
!8088 = !DILocation(line: 3189, column: 12, scope: !7993)
!8089 = !DILocation(line: 3190, column: 7, scope: !8090)
!8090 = distinct !DILexicalBlock(scope: !7993, file: !1, line: 3190, column: 7)
!8091 = !DILocation(line: 3190, column: 20, scope: !8090)
!8092 = !DILocation(line: 3190, column: 32, scope: !8090)
!8093 = !DILocation(line: 3190, column: 17, scope: !8090)
!8094 = !DILocation(line: 3190, column: 7, scope: !7993)
!8095 = !DILocation(line: 3191, column: 5, scope: !8090)
!8096 = !DILocation(line: 3191, column: 17, scope: !8090)
!8097 = !DILocation(line: 3191, column: 26, scope: !8090)
!8098 = !DILocation(line: 3191, column: 32, scope: !8090)
!8099 = !DILocation(line: 3191, column: 39, scope: !8090)
!8100 = !DILocation(line: 3191, column: 44, scope: !8090)
!8101 = !DILocation(line: 3193, column: 22, scope: !8090)
!8102 = !DILocation(line: 3193, column: 35, scope: !8090)
!8103 = !DILocation(line: 3193, column: 5, scope: !8090)
!8104 = !DILocation(line: 3194, column: 7, scope: !8105)
!8105 = distinct !DILexicalBlock(scope: !7993, file: !1, line: 3194, column: 7)
!8106 = !DILocation(line: 3194, column: 14, scope: !8105)
!8107 = !DILocation(line: 3194, column: 25, scope: !8105)
!8108 = !DILocation(line: 3194, column: 7, scope: !7993)
!8109 = !DILocation(line: 3195, column: 31, scope: !8105)
!8110 = !DILocation(line: 3195, column: 11, scope: !8105)
!8111 = !DILocation(line: 3195, column: 10, scope: !8105)
!8112 = !DILocation(line: 3195, column: 5, scope: !8105)
!8113 = !DILocation(line: 3196, column: 13, scope: !7993)
!8114 = !DILocation(line: 3196, column: 25, scope: !7993)
!8115 = !DILocation(line: 3196, column: 34, scope: !7993)
!8116 = !DILocation(line: 3196, column: 40, scope: !7993)
!8117 = !DILocation(line: 3196, column: 47, scope: !7993)
!8118 = !DILocation(line: 3196, column: 12, scope: !7993)
!8119 = !DILocation(line: 3197, column: 7, scope: !8120)
!8120 = distinct !DILexicalBlock(scope: !7993, file: !1, line: 3197, column: 7)
!8121 = !DILocation(line: 3197, column: 20, scope: !8120)
!8122 = !DILocation(line: 3197, column: 32, scope: !8120)
!8123 = !DILocation(line: 3197, column: 17, scope: !8120)
!8124 = !DILocation(line: 3197, column: 7, scope: !7993)
!8125 = !DILocation(line: 3198, column: 5, scope: !8120)
!8126 = !DILocation(line: 3198, column: 17, scope: !8120)
!8127 = !DILocation(line: 3198, column: 26, scope: !8120)
!8128 = !DILocation(line: 3198, column: 32, scope: !8120)
!8129 = !DILocation(line: 3198, column: 39, scope: !8120)
!8130 = !DILocation(line: 3198, column: 44, scope: !8120)
!8131 = !DILocation(line: 3200, column: 22, scope: !8120)
!8132 = !DILocation(line: 3200, column: 35, scope: !8120)
!8133 = !DILocation(line: 3200, column: 5, scope: !8120)
!8134 = !DILocation(line: 3201, column: 1, scope: !7993)
!8135 = distinct !DISubprogram(name: "GetMinimumPixelList", scope: !1, file: !1, line: 2967, type: !8136, scopeLine: 2968, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !826)
!8136 = !DISubroutineType(types: !8137)
!8137 = !{null, !779, !715}
!8138 = !DILocalVariable(name: "pixel_list", arg: 1, scope: !8135, file: !1, line: 2967, type: !779)
!8139 = !DILocation(line: 2967, column: 44, scope: !8135)
!8140 = !DILocalVariable(name: "pixel", arg: 2, scope: !8135, file: !1, line: 2967, type: !715)
!8141 = !DILocation(line: 2967, column: 74, scope: !8135)
!8142 = !DILocalVariable(name: "list", scope: !8135, file: !1, line: 2970, type: !7942)
!8143 = !DILocation(line: 2970, column: 6, scope: !8135)
!8144 = !DILocalVariable(name: "channel", scope: !8135, file: !1, line: 2973, type: !557)
!8145 = !DILocation(line: 2973, column: 5, scope: !8135)
!8146 = !DILocalVariable(name: "color", scope: !8135, file: !1, line: 2976, type: !504)
!8147 = !DILocation(line: 2976, column: 5, scope: !8135)
!8148 = !DILocalVariable(name: "minimum", scope: !8135, file: !1, line: 2977, type: !504)
!8149 = !DILocation(line: 2977, column: 5, scope: !8135)
!8150 = !DILocalVariable(name: "count", scope: !8135, file: !1, line: 2980, type: !557)
!8151 = !DILocation(line: 2980, column: 5, scope: !8135)
!8152 = !DILocalVariable(name: "channels", scope: !8135, file: !1, line: 2983, type: !8153)
!8153 = !DICompositeType(tag: DW_TAG_array_type, baseType: !522, size: 80, elements: !803)
!8154 = !DILocation(line: 2983, column: 5, scope: !8135)
!8155 = !DILocation(line: 2988, column: 15, scope: !8156)
!8156 = distinct !DILexicalBlock(scope: !8135, file: !1, line: 2988, column: 3)
!8157 = !DILocation(line: 2988, column: 8, scope: !8156)
!8158 = !DILocation(line: 2988, column: 19, scope: !8159)
!8159 = distinct !DILexicalBlock(scope: !8156, file: !1, line: 2988, column: 3)
!8160 = !DILocation(line: 2988, column: 27, scope: !8159)
!8161 = !DILocation(line: 2988, column: 3, scope: !8156)
!8162 = !DILocation(line: 2990, column: 10, scope: !8163)
!8163 = distinct !DILexicalBlock(scope: !8159, file: !1, line: 2989, column: 3)
!8164 = !DILocation(line: 2990, column: 22, scope: !8163)
!8165 = !DILocation(line: 2990, column: 28, scope: !8163)
!8166 = !DILocation(line: 2990, column: 27, scope: !8163)
!8167 = !DILocation(line: 2990, column: 9, scope: !8163)
!8168 = !DILocation(line: 2991, column: 10, scope: !8163)
!8169 = !DILocation(line: 2992, column: 10, scope: !8163)
!8170 = !DILocation(line: 2993, column: 13, scope: !8163)
!8171 = !DILocation(line: 2993, column: 19, scope: !8163)
!8172 = !DILocation(line: 2993, column: 25, scope: !8163)
!8173 = !DILocation(line: 2993, column: 32, scope: !8163)
!8174 = !DILocation(line: 2993, column: 12, scope: !8163)
!8175 = !DILocation(line: 2994, column: 5, scope: !8163)
!8176 = !DILocation(line: 2996, column: 13, scope: !8177)
!8177 = distinct !DILexicalBlock(scope: !8163, file: !1, line: 2995, column: 5)
!8178 = !DILocation(line: 2996, column: 19, scope: !8177)
!8179 = !DILocation(line: 2996, column: 25, scope: !8177)
!8180 = !DILocation(line: 2996, column: 32, scope: !8177)
!8181 = !DILocation(line: 2996, column: 12, scope: !8177)
!8182 = !DILocation(line: 2997, column: 11, scope: !8183)
!8183 = distinct !DILexicalBlock(scope: !8177, file: !1, line: 2997, column: 11)
!8184 = !DILocation(line: 2997, column: 19, scope: !8183)
!8185 = !DILocation(line: 2997, column: 17, scope: !8183)
!8186 = !DILocation(line: 2997, column: 11, scope: !8177)
!8187 = !DILocation(line: 2998, column: 17, scope: !8183)
!8188 = !DILocation(line: 2998, column: 16, scope: !8183)
!8189 = !DILocation(line: 2998, column: 9, scope: !8183)
!8190 = !DILocation(line: 2999, column: 14, scope: !8177)
!8191 = !DILocation(line: 2999, column: 20, scope: !8177)
!8192 = !DILocation(line: 2999, column: 26, scope: !8177)
!8193 = !DILocation(line: 2999, column: 33, scope: !8177)
!8194 = !DILocation(line: 2999, column: 12, scope: !8177)
!8195 = !DILocation(line: 3000, column: 5, scope: !8177)
!8196 = !DILocation(line: 3000, column: 14, scope: !8163)
!8197 = !DILocation(line: 3000, column: 32, scope: !8163)
!8198 = !DILocation(line: 3000, column: 44, scope: !8163)
!8199 = !DILocation(line: 3000, column: 20, scope: !8163)
!8200 = distinct !{!8200, !8175, !8201}
!8201 = !DILocation(line: 3000, column: 50, scope: !8163)
!8202 = !DILocation(line: 3001, column: 40, scope: !8163)
!8203 = !DILocation(line: 3001, column: 23, scope: !8163)
!8204 = !DILocation(line: 3001, column: 14, scope: !8163)
!8205 = !DILocation(line: 3001, column: 5, scope: !8163)
!8206 = !DILocation(line: 3001, column: 22, scope: !8163)
!8207 = !DILocation(line: 3002, column: 3, scope: !8163)
!8208 = !DILocation(line: 2988, column: 39, scope: !8159)
!8209 = !DILocation(line: 2988, column: 3, scope: !8159)
!8210 = distinct !{!8210, !8161, !8211}
!8211 = !DILocation(line: 3002, column: 3, scope: !8156)
!8212 = !DILocation(line: 3003, column: 51, scope: !8135)
!8213 = !DILocation(line: 3003, column: 31, scope: !8135)
!8214 = !DILocation(line: 3003, column: 14, scope: !8135)
!8215 = !DILocation(line: 3003, column: 3, scope: !8135)
!8216 = !DILocation(line: 3003, column: 10, scope: !8135)
!8217 = !DILocation(line: 3003, column: 13, scope: !8135)
!8218 = !DILocation(line: 3004, column: 53, scope: !8135)
!8219 = !DILocation(line: 3004, column: 33, scope: !8135)
!8220 = !DILocation(line: 3004, column: 16, scope: !8135)
!8221 = !DILocation(line: 3004, column: 3, scope: !8135)
!8222 = !DILocation(line: 3004, column: 10, scope: !8135)
!8223 = !DILocation(line: 3004, column: 15, scope: !8135)
!8224 = !DILocation(line: 3005, column: 52, scope: !8135)
!8225 = !DILocation(line: 3005, column: 32, scope: !8135)
!8226 = !DILocation(line: 3005, column: 15, scope: !8135)
!8227 = !DILocation(line: 3005, column: 3, scope: !8135)
!8228 = !DILocation(line: 3005, column: 10, scope: !8135)
!8229 = !DILocation(line: 3005, column: 14, scope: !8135)
!8230 = !DILocation(line: 3006, column: 55, scope: !8135)
!8231 = !DILocation(line: 3006, column: 35, scope: !8135)
!8232 = !DILocation(line: 3006, column: 18, scope: !8135)
!8233 = !DILocation(line: 3006, column: 3, scope: !8135)
!8234 = !DILocation(line: 3006, column: 10, scope: !8135)
!8235 = !DILocation(line: 3006, column: 17, scope: !8135)
!8236 = !DILocation(line: 3007, column: 53, scope: !8135)
!8237 = !DILocation(line: 3007, column: 33, scope: !8135)
!8238 = !DILocation(line: 3007, column: 16, scope: !8135)
!8239 = !DILocation(line: 3007, column: 3, scope: !8135)
!8240 = !DILocation(line: 3007, column: 10, scope: !8135)
!8241 = !DILocation(line: 3007, column: 15, scope: !8135)
!8242 = !DILocation(line: 3008, column: 1, scope: !8135)
!8243 = distinct !DISubprogram(name: "GetMaximumPixelList", scope: !1, file: !1, line: 2839, type: !8136, scopeLine: 2840, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !826)
!8244 = !DILocalVariable(name: "pixel_list", arg: 1, scope: !8243, file: !1, line: 2839, type: !779)
!8245 = !DILocation(line: 2839, column: 44, scope: !8243)
!8246 = !DILocalVariable(name: "pixel", arg: 2, scope: !8243, file: !1, line: 2839, type: !715)
!8247 = !DILocation(line: 2839, column: 74, scope: !8243)
!8248 = !DILocalVariable(name: "list", scope: !8243, file: !1, line: 2842, type: !7942)
!8249 = !DILocation(line: 2842, column: 6, scope: !8243)
!8250 = !DILocalVariable(name: "channel", scope: !8243, file: !1, line: 2845, type: !557)
!8251 = !DILocation(line: 2845, column: 5, scope: !8243)
!8252 = !DILocalVariable(name: "color", scope: !8243, file: !1, line: 2848, type: !504)
!8253 = !DILocation(line: 2848, column: 5, scope: !8243)
!8254 = !DILocalVariable(name: "maximum", scope: !8243, file: !1, line: 2849, type: !504)
!8255 = !DILocation(line: 2849, column: 5, scope: !8243)
!8256 = !DILocalVariable(name: "count", scope: !8243, file: !1, line: 2852, type: !557)
!8257 = !DILocation(line: 2852, column: 5, scope: !8243)
!8258 = !DILocalVariable(name: "channels", scope: !8243, file: !1, line: 2855, type: !8153)
!8259 = !DILocation(line: 2855, column: 5, scope: !8243)
!8260 = !DILocation(line: 2860, column: 15, scope: !8261)
!8261 = distinct !DILexicalBlock(scope: !8243, file: !1, line: 2860, column: 3)
!8262 = !DILocation(line: 2860, column: 8, scope: !8261)
!8263 = !DILocation(line: 2860, column: 19, scope: !8264)
!8264 = distinct !DILexicalBlock(scope: !8261, file: !1, line: 2860, column: 3)
!8265 = !DILocation(line: 2860, column: 27, scope: !8264)
!8266 = !DILocation(line: 2860, column: 3, scope: !8261)
!8267 = !DILocation(line: 2862, column: 10, scope: !8268)
!8268 = distinct !DILexicalBlock(scope: !8264, file: !1, line: 2861, column: 3)
!8269 = !DILocation(line: 2862, column: 22, scope: !8268)
!8270 = !DILocation(line: 2862, column: 28, scope: !8268)
!8271 = !DILocation(line: 2862, column: 27, scope: !8268)
!8272 = !DILocation(line: 2862, column: 9, scope: !8268)
!8273 = !DILocation(line: 2863, column: 10, scope: !8268)
!8274 = !DILocation(line: 2864, column: 10, scope: !8268)
!8275 = !DILocation(line: 2865, column: 13, scope: !8268)
!8276 = !DILocation(line: 2865, column: 19, scope: !8268)
!8277 = !DILocation(line: 2865, column: 25, scope: !8268)
!8278 = !DILocation(line: 2865, column: 32, scope: !8268)
!8279 = !DILocation(line: 2865, column: 12, scope: !8268)
!8280 = !DILocation(line: 2866, column: 5, scope: !8268)
!8281 = !DILocation(line: 2868, column: 13, scope: !8282)
!8282 = distinct !DILexicalBlock(scope: !8268, file: !1, line: 2867, column: 5)
!8283 = !DILocation(line: 2868, column: 19, scope: !8282)
!8284 = !DILocation(line: 2868, column: 25, scope: !8282)
!8285 = !DILocation(line: 2868, column: 32, scope: !8282)
!8286 = !DILocation(line: 2868, column: 12, scope: !8282)
!8287 = !DILocation(line: 2869, column: 11, scope: !8288)
!8288 = distinct !DILexicalBlock(scope: !8282, file: !1, line: 2869, column: 11)
!8289 = !DILocation(line: 2869, column: 19, scope: !8288)
!8290 = !DILocation(line: 2869, column: 17, scope: !8288)
!8291 = !DILocation(line: 2869, column: 11, scope: !8282)
!8292 = !DILocation(line: 2870, column: 17, scope: !8288)
!8293 = !DILocation(line: 2870, column: 16, scope: !8288)
!8294 = !DILocation(line: 2870, column: 9, scope: !8288)
!8295 = !DILocation(line: 2871, column: 14, scope: !8282)
!8296 = !DILocation(line: 2871, column: 20, scope: !8282)
!8297 = !DILocation(line: 2871, column: 26, scope: !8282)
!8298 = !DILocation(line: 2871, column: 33, scope: !8282)
!8299 = !DILocation(line: 2871, column: 12, scope: !8282)
!8300 = !DILocation(line: 2872, column: 5, scope: !8282)
!8301 = !DILocation(line: 2872, column: 14, scope: !8268)
!8302 = !DILocation(line: 2872, column: 32, scope: !8268)
!8303 = !DILocation(line: 2872, column: 44, scope: !8268)
!8304 = !DILocation(line: 2872, column: 20, scope: !8268)
!8305 = distinct !{!8305, !8280, !8306}
!8306 = !DILocation(line: 2872, column: 50, scope: !8268)
!8307 = !DILocation(line: 2873, column: 40, scope: !8268)
!8308 = !DILocation(line: 2873, column: 23, scope: !8268)
!8309 = !DILocation(line: 2873, column: 14, scope: !8268)
!8310 = !DILocation(line: 2873, column: 5, scope: !8268)
!8311 = !DILocation(line: 2873, column: 22, scope: !8268)
!8312 = !DILocation(line: 2874, column: 3, scope: !8268)
!8313 = !DILocation(line: 2860, column: 39, scope: !8264)
!8314 = !DILocation(line: 2860, column: 3, scope: !8264)
!8315 = distinct !{!8315, !8266, !8316}
!8316 = !DILocation(line: 2874, column: 3, scope: !8261)
!8317 = !DILocation(line: 2875, column: 51, scope: !8243)
!8318 = !DILocation(line: 2875, column: 31, scope: !8243)
!8319 = !DILocation(line: 2875, column: 14, scope: !8243)
!8320 = !DILocation(line: 2875, column: 3, scope: !8243)
!8321 = !DILocation(line: 2875, column: 10, scope: !8243)
!8322 = !DILocation(line: 2875, column: 13, scope: !8243)
!8323 = !DILocation(line: 2876, column: 53, scope: !8243)
!8324 = !DILocation(line: 2876, column: 33, scope: !8243)
!8325 = !DILocation(line: 2876, column: 16, scope: !8243)
!8326 = !DILocation(line: 2876, column: 3, scope: !8243)
!8327 = !DILocation(line: 2876, column: 10, scope: !8243)
!8328 = !DILocation(line: 2876, column: 15, scope: !8243)
!8329 = !DILocation(line: 2877, column: 52, scope: !8243)
!8330 = !DILocation(line: 2877, column: 32, scope: !8243)
!8331 = !DILocation(line: 2877, column: 15, scope: !8243)
!8332 = !DILocation(line: 2877, column: 3, scope: !8243)
!8333 = !DILocation(line: 2877, column: 10, scope: !8243)
!8334 = !DILocation(line: 2877, column: 14, scope: !8243)
!8335 = !DILocation(line: 2878, column: 55, scope: !8243)
!8336 = !DILocation(line: 2878, column: 35, scope: !8243)
!8337 = !DILocation(line: 2878, column: 18, scope: !8243)
!8338 = !DILocation(line: 2878, column: 3, scope: !8243)
!8339 = !DILocation(line: 2878, column: 10, scope: !8243)
!8340 = !DILocation(line: 2878, column: 17, scope: !8243)
!8341 = !DILocation(line: 2879, column: 53, scope: !8243)
!8342 = !DILocation(line: 2879, column: 33, scope: !8243)
!8343 = !DILocation(line: 2879, column: 16, scope: !8243)
!8344 = !DILocation(line: 2879, column: 3, scope: !8243)
!8345 = !DILocation(line: 2879, column: 10, scope: !8243)
!8346 = !DILocation(line: 2879, column: 15, scope: !8243)
!8347 = !DILocation(line: 2880, column: 1, scope: !8243)
!8348 = distinct !DISubprogram(name: "MagickAbsoluteValue", scope: !1, file: !1, line: 3203, type: !6647, scopeLine: 3204, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !826)
!8349 = !DILocalVariable(name: "x", arg: 1, scope: !8348, file: !1, line: 3203, type: !1945)
!8350 = !DILocation(line: 3203, column: 71, scope: !8348)
!8351 = !DILocation(line: 3205, column: 7, scope: !8352)
!8352 = distinct !DILexicalBlock(scope: !8348, file: !1, line: 3205, column: 7)
!8353 = !DILocation(line: 3205, column: 9, scope: !8352)
!8354 = !DILocation(line: 3205, column: 7, scope: !8348)
!8355 = !DILocation(line: 3206, column: 13, scope: !8352)
!8356 = !DILocation(line: 3206, column: 12, scope: !8352)
!8357 = !DILocation(line: 3206, column: 5, scope: !8352)
!8358 = !DILocation(line: 3207, column: 10, scope: !8348)
!8359 = !DILocation(line: 3207, column: 3, scope: !8348)
!8360 = !DILocation(line: 3208, column: 1, scope: !8348)
!8361 = distinct !DISubprogram(name: "GetMeanPixelList", scope: !1, file: !1, line: 2882, type: !8136, scopeLine: 2883, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !826)
!8362 = !DILocalVariable(name: "pixel_list", arg: 1, scope: !8361, file: !1, line: 2882, type: !779)
!8363 = !DILocation(line: 2882, column: 41, scope: !8361)
!8364 = !DILocalVariable(name: "pixel", arg: 2, scope: !8361, file: !1, line: 2882, type: !715)
!8365 = !DILocation(line: 2882, column: 71, scope: !8361)
!8366 = !DILocalVariable(name: "sum", scope: !8361, file: !1, line: 2885, type: !725)
!8367 = !DILocation(line: 2885, column: 5, scope: !8361)
!8368 = !DILocalVariable(name: "list", scope: !8361, file: !1, line: 2888, type: !7942)
!8369 = !DILocation(line: 2888, column: 6, scope: !8361)
!8370 = !DILocalVariable(name: "channel", scope: !8361, file: !1, line: 2891, type: !557)
!8371 = !DILocation(line: 2891, column: 5, scope: !8361)
!8372 = !DILocalVariable(name: "color", scope: !8361, file: !1, line: 2894, type: !504)
!8373 = !DILocation(line: 2894, column: 5, scope: !8361)
!8374 = !DILocalVariable(name: "count", scope: !8361, file: !1, line: 2897, type: !557)
!8375 = !DILocation(line: 2897, column: 5, scope: !8361)
!8376 = !DILocalVariable(name: "channels", scope: !8361, file: !1, line: 2900, type: !8153)
!8377 = !DILocation(line: 2900, column: 5, scope: !8361)
!8378 = !DILocation(line: 2905, column: 15, scope: !8379)
!8379 = distinct !DILexicalBlock(scope: !8361, file: !1, line: 2905, column: 3)
!8380 = !DILocation(line: 2905, column: 8, scope: !8379)
!8381 = !DILocation(line: 2905, column: 19, scope: !8382)
!8382 = distinct !DILexicalBlock(scope: !8379, file: !1, line: 2905, column: 3)
!8383 = !DILocation(line: 2905, column: 27, scope: !8382)
!8384 = !DILocation(line: 2905, column: 3, scope: !8379)
!8385 = !DILocation(line: 2907, column: 10, scope: !8386)
!8386 = distinct !DILexicalBlock(scope: !8382, file: !1, line: 2906, column: 3)
!8387 = !DILocation(line: 2907, column: 22, scope: !8386)
!8388 = !DILocation(line: 2907, column: 28, scope: !8386)
!8389 = !DILocation(line: 2907, column: 27, scope: !8386)
!8390 = !DILocation(line: 2907, column: 9, scope: !8386)
!8391 = !DILocation(line: 2908, column: 10, scope: !8386)
!8392 = !DILocation(line: 2909, column: 10, scope: !8386)
!8393 = !DILocation(line: 2910, column: 8, scope: !8386)
!8394 = !DILocation(line: 2911, column: 5, scope: !8386)
!8395 = !DILocation(line: 2913, column: 13, scope: !8396)
!8396 = distinct !DILexicalBlock(scope: !8386, file: !1, line: 2912, column: 5)
!8397 = !DILocation(line: 2913, column: 19, scope: !8396)
!8398 = !DILocation(line: 2913, column: 25, scope: !8396)
!8399 = !DILocation(line: 2913, column: 32, scope: !8396)
!8400 = !DILocation(line: 2913, column: 12, scope: !8396)
!8401 = !DILocation(line: 2914, column: 29, scope: !8396)
!8402 = !DILocation(line: 2914, column: 35, scope: !8396)
!8403 = !DILocation(line: 2914, column: 41, scope: !8396)
!8404 = !DILocation(line: 2914, column: 48, scope: !8396)
!8405 = !DILocation(line: 2914, column: 12, scope: !8396)
!8406 = !DILocation(line: 2914, column: 54, scope: !8396)
!8407 = !DILocation(line: 2914, column: 53, scope: !8396)
!8408 = !DILocation(line: 2914, column: 10, scope: !8396)
!8409 = !DILocation(line: 2915, column: 14, scope: !8396)
!8410 = !DILocation(line: 2915, column: 20, scope: !8396)
!8411 = !DILocation(line: 2915, column: 26, scope: !8396)
!8412 = !DILocation(line: 2915, column: 33, scope: !8396)
!8413 = !DILocation(line: 2915, column: 12, scope: !8396)
!8414 = !DILocation(line: 2916, column: 5, scope: !8396)
!8415 = !DILocation(line: 2916, column: 14, scope: !8386)
!8416 = !DILocation(line: 2916, column: 32, scope: !8386)
!8417 = !DILocation(line: 2916, column: 44, scope: !8386)
!8418 = !DILocation(line: 2916, column: 20, scope: !8386)
!8419 = distinct !{!8419, !8394, !8420}
!8420 = !DILocation(line: 2916, column: 50, scope: !8386)
!8421 = !DILocation(line: 2917, column: 10, scope: !8386)
!8422 = !DILocation(line: 2917, column: 22, scope: !8386)
!8423 = !DILocation(line: 2917, column: 8, scope: !8386)
!8424 = !DILocation(line: 2918, column: 40, scope: !8386)
!8425 = !DILocation(line: 2918, column: 23, scope: !8386)
!8426 = !DILocation(line: 2918, column: 14, scope: !8386)
!8427 = !DILocation(line: 2918, column: 5, scope: !8386)
!8428 = !DILocation(line: 2918, column: 22, scope: !8386)
!8429 = !DILocation(line: 2919, column: 3, scope: !8386)
!8430 = !DILocation(line: 2905, column: 39, scope: !8382)
!8431 = !DILocation(line: 2905, column: 3, scope: !8382)
!8432 = distinct !{!8432, !8384, !8433}
!8433 = !DILocation(line: 2919, column: 3, scope: !8379)
!8434 = !DILocation(line: 2920, column: 51, scope: !8361)
!8435 = !DILocation(line: 2920, column: 31, scope: !8361)
!8436 = !DILocation(line: 2920, column: 14, scope: !8361)
!8437 = !DILocation(line: 2920, column: 3, scope: !8361)
!8438 = !DILocation(line: 2920, column: 10, scope: !8361)
!8439 = !DILocation(line: 2920, column: 13, scope: !8361)
!8440 = !DILocation(line: 2921, column: 53, scope: !8361)
!8441 = !DILocation(line: 2921, column: 33, scope: !8361)
!8442 = !DILocation(line: 2921, column: 16, scope: !8361)
!8443 = !DILocation(line: 2921, column: 3, scope: !8361)
!8444 = !DILocation(line: 2921, column: 10, scope: !8361)
!8445 = !DILocation(line: 2921, column: 15, scope: !8361)
!8446 = !DILocation(line: 2922, column: 52, scope: !8361)
!8447 = !DILocation(line: 2922, column: 32, scope: !8361)
!8448 = !DILocation(line: 2922, column: 15, scope: !8361)
!8449 = !DILocation(line: 2922, column: 3, scope: !8361)
!8450 = !DILocation(line: 2922, column: 10, scope: !8361)
!8451 = !DILocation(line: 2922, column: 14, scope: !8361)
!8452 = !DILocation(line: 2923, column: 55, scope: !8361)
!8453 = !DILocation(line: 2923, column: 35, scope: !8361)
!8454 = !DILocation(line: 2923, column: 18, scope: !8361)
!8455 = !DILocation(line: 2923, column: 3, scope: !8361)
!8456 = !DILocation(line: 2923, column: 10, scope: !8361)
!8457 = !DILocation(line: 2923, column: 17, scope: !8361)
!8458 = !DILocation(line: 2924, column: 53, scope: !8361)
!8459 = !DILocation(line: 2924, column: 33, scope: !8361)
!8460 = !DILocation(line: 2924, column: 16, scope: !8361)
!8461 = !DILocation(line: 2924, column: 3, scope: !8361)
!8462 = !DILocation(line: 2924, column: 10, scope: !8361)
!8463 = !DILocation(line: 2924, column: 15, scope: !8361)
!8464 = !DILocation(line: 2925, column: 1, scope: !8361)
!8465 = distinct !DISubprogram(name: "GetMedianPixelList", scope: !1, file: !1, line: 2927, type: !8136, scopeLine: 2928, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !826)
!8466 = !DILocalVariable(name: "pixel_list", arg: 1, scope: !8465, file: !1, line: 2927, type: !779)
!8467 = !DILocation(line: 2927, column: 43, scope: !8465)
!8468 = !DILocalVariable(name: "pixel", arg: 2, scope: !8465, file: !1, line: 2927, type: !715)
!8469 = !DILocation(line: 2927, column: 73, scope: !8465)
!8470 = !DILocalVariable(name: "list", scope: !8465, file: !1, line: 2930, type: !7942)
!8471 = !DILocation(line: 2930, column: 6, scope: !8465)
!8472 = !DILocalVariable(name: "channel", scope: !8465, file: !1, line: 2933, type: !557)
!8473 = !DILocation(line: 2933, column: 5, scope: !8465)
!8474 = !DILocalVariable(name: "color", scope: !8465, file: !1, line: 2936, type: !504)
!8475 = !DILocation(line: 2936, column: 5, scope: !8465)
!8476 = !DILocalVariable(name: "count", scope: !8465, file: !1, line: 2939, type: !557)
!8477 = !DILocation(line: 2939, column: 5, scope: !8465)
!8478 = !DILocalVariable(name: "channels", scope: !8465, file: !1, line: 2942, type: !8153)
!8479 = !DILocation(line: 2942, column: 5, scope: !8465)
!8480 = !DILocation(line: 2947, column: 15, scope: !8481)
!8481 = distinct !DILexicalBlock(scope: !8465, file: !1, line: 2947, column: 3)
!8482 = !DILocation(line: 2947, column: 8, scope: !8481)
!8483 = !DILocation(line: 2947, column: 19, scope: !8484)
!8484 = distinct !DILexicalBlock(scope: !8481, file: !1, line: 2947, column: 3)
!8485 = !DILocation(line: 2947, column: 27, scope: !8484)
!8486 = !DILocation(line: 2947, column: 3, scope: !8481)
!8487 = !DILocation(line: 2949, column: 10, scope: !8488)
!8488 = distinct !DILexicalBlock(scope: !8484, file: !1, line: 2948, column: 3)
!8489 = !DILocation(line: 2949, column: 22, scope: !8488)
!8490 = !DILocation(line: 2949, column: 28, scope: !8488)
!8491 = !DILocation(line: 2949, column: 27, scope: !8488)
!8492 = !DILocation(line: 2949, column: 9, scope: !8488)
!8493 = !DILocation(line: 2950, column: 10, scope: !8488)
!8494 = !DILocation(line: 2951, column: 10, scope: !8488)
!8495 = !DILocation(line: 2952, column: 5, scope: !8488)
!8496 = !DILocation(line: 2954, column: 13, scope: !8497)
!8497 = distinct !DILexicalBlock(scope: !8488, file: !1, line: 2953, column: 5)
!8498 = !DILocation(line: 2954, column: 19, scope: !8497)
!8499 = !DILocation(line: 2954, column: 25, scope: !8497)
!8500 = !DILocation(line: 2954, column: 32, scope: !8497)
!8501 = !DILocation(line: 2954, column: 12, scope: !8497)
!8502 = !DILocation(line: 2955, column: 14, scope: !8497)
!8503 = !DILocation(line: 2955, column: 20, scope: !8497)
!8504 = !DILocation(line: 2955, column: 26, scope: !8497)
!8505 = !DILocation(line: 2955, column: 33, scope: !8497)
!8506 = !DILocation(line: 2955, column: 12, scope: !8497)
!8507 = !DILocation(line: 2956, column: 5, scope: !8497)
!8508 = !DILocation(line: 2956, column: 14, scope: !8488)
!8509 = !DILocation(line: 2956, column: 34, scope: !8488)
!8510 = !DILocation(line: 2956, column: 46, scope: !8488)
!8511 = !DILocation(line: 2956, column: 53, scope: !8488)
!8512 = !DILocation(line: 2956, column: 20, scope: !8488)
!8513 = distinct !{!8513, !8495, !8514}
!8514 = !DILocation(line: 2956, column: 58, scope: !8488)
!8515 = !DILocation(line: 2957, column: 40, scope: !8488)
!8516 = !DILocation(line: 2957, column: 23, scope: !8488)
!8517 = !DILocation(line: 2957, column: 14, scope: !8488)
!8518 = !DILocation(line: 2957, column: 5, scope: !8488)
!8519 = !DILocation(line: 2957, column: 22, scope: !8488)
!8520 = !DILocation(line: 2958, column: 3, scope: !8488)
!8521 = !DILocation(line: 2947, column: 39, scope: !8484)
!8522 = !DILocation(line: 2947, column: 3, scope: !8484)
!8523 = distinct !{!8523, !8486, !8524}
!8524 = !DILocation(line: 2958, column: 3, scope: !8481)
!8525 = !DILocation(line: 2959, column: 45, scope: !8465)
!8526 = !DILocation(line: 2959, column: 3, scope: !8465)
!8527 = !DILocation(line: 2960, column: 51, scope: !8465)
!8528 = !DILocation(line: 2960, column: 31, scope: !8465)
!8529 = !DILocation(line: 2960, column: 14, scope: !8465)
!8530 = !DILocation(line: 2960, column: 3, scope: !8465)
!8531 = !DILocation(line: 2960, column: 10, scope: !8465)
!8532 = !DILocation(line: 2960, column: 13, scope: !8465)
!8533 = !DILocation(line: 2961, column: 53, scope: !8465)
!8534 = !DILocation(line: 2961, column: 33, scope: !8465)
!8535 = !DILocation(line: 2961, column: 16, scope: !8465)
!8536 = !DILocation(line: 2961, column: 3, scope: !8465)
!8537 = !DILocation(line: 2961, column: 10, scope: !8465)
!8538 = !DILocation(line: 2961, column: 15, scope: !8465)
!8539 = !DILocation(line: 2962, column: 52, scope: !8465)
!8540 = !DILocation(line: 2962, column: 32, scope: !8465)
!8541 = !DILocation(line: 2962, column: 15, scope: !8465)
!8542 = !DILocation(line: 2962, column: 3, scope: !8465)
!8543 = !DILocation(line: 2962, column: 10, scope: !8465)
!8544 = !DILocation(line: 2962, column: 14, scope: !8465)
!8545 = !DILocation(line: 2963, column: 55, scope: !8465)
!8546 = !DILocation(line: 2963, column: 35, scope: !8465)
!8547 = !DILocation(line: 2963, column: 18, scope: !8465)
!8548 = !DILocation(line: 2963, column: 3, scope: !8465)
!8549 = !DILocation(line: 2963, column: 10, scope: !8465)
!8550 = !DILocation(line: 2963, column: 17, scope: !8465)
!8551 = !DILocation(line: 2964, column: 53, scope: !8465)
!8552 = !DILocation(line: 2964, column: 33, scope: !8465)
!8553 = !DILocation(line: 2964, column: 16, scope: !8465)
!8554 = !DILocation(line: 2964, column: 3, scope: !8465)
!8555 = !DILocation(line: 2964, column: 10, scope: !8465)
!8556 = !DILocation(line: 2964, column: 15, scope: !8465)
!8557 = !DILocation(line: 2965, column: 1, scope: !8465)
!8558 = distinct !DISubprogram(name: "GetModePixelList", scope: !1, file: !1, line: 3010, type: !8136, scopeLine: 3011, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !826)
!8559 = !DILocalVariable(name: "pixel_list", arg: 1, scope: !8558, file: !1, line: 3010, type: !779)
!8560 = !DILocation(line: 3010, column: 41, scope: !8558)
!8561 = !DILocalVariable(name: "pixel", arg: 2, scope: !8558, file: !1, line: 3010, type: !715)
!8562 = !DILocation(line: 3010, column: 71, scope: !8558)
!8563 = !DILocalVariable(name: "list", scope: !8558, file: !1, line: 3013, type: !7942)
!8564 = !DILocation(line: 3013, column: 6, scope: !8558)
!8565 = !DILocalVariable(name: "channel", scope: !8558, file: !1, line: 3016, type: !557)
!8566 = !DILocation(line: 3016, column: 5, scope: !8558)
!8567 = !DILocalVariable(name: "color", scope: !8558, file: !1, line: 3019, type: !504)
!8568 = !DILocation(line: 3019, column: 5, scope: !8558)
!8569 = !DILocalVariable(name: "max_count", scope: !8558, file: !1, line: 3020, type: !504)
!8570 = !DILocation(line: 3020, column: 5, scope: !8558)
!8571 = !DILocalVariable(name: "mode", scope: !8558, file: !1, line: 3021, type: !504)
!8572 = !DILocation(line: 3021, column: 5, scope: !8558)
!8573 = !DILocalVariable(name: "count", scope: !8558, file: !1, line: 3024, type: !557)
!8574 = !DILocation(line: 3024, column: 5, scope: !8558)
!8575 = !DILocalVariable(name: "channels", scope: !8558, file: !1, line: 3027, type: !8153)
!8576 = !DILocation(line: 3027, column: 5, scope: !8558)
!8577 = !DILocation(line: 3032, column: 15, scope: !8578)
!8578 = distinct !DILexicalBlock(scope: !8558, file: !1, line: 3032, column: 3)
!8579 = !DILocation(line: 3032, column: 8, scope: !8578)
!8580 = !DILocation(line: 3032, column: 19, scope: !8581)
!8581 = distinct !DILexicalBlock(scope: !8578, file: !1, line: 3032, column: 3)
!8582 = !DILocation(line: 3032, column: 27, scope: !8581)
!8583 = !DILocation(line: 3032, column: 3, scope: !8578)
!8584 = !DILocation(line: 3034, column: 10, scope: !8585)
!8585 = distinct !DILexicalBlock(scope: !8581, file: !1, line: 3033, column: 3)
!8586 = !DILocation(line: 3034, column: 22, scope: !8585)
!8587 = !DILocation(line: 3034, column: 28, scope: !8585)
!8588 = !DILocation(line: 3034, column: 27, scope: !8585)
!8589 = !DILocation(line: 3034, column: 9, scope: !8585)
!8590 = !DILocation(line: 3035, column: 10, scope: !8585)
!8591 = !DILocation(line: 3036, column: 10, scope: !8585)
!8592 = !DILocation(line: 3036, column: 9, scope: !8585)
!8593 = !DILocation(line: 3037, column: 15, scope: !8585)
!8594 = !DILocation(line: 3037, column: 21, scope: !8585)
!8595 = !DILocation(line: 3037, column: 27, scope: !8585)
!8596 = !DILocation(line: 3037, column: 33, scope: !8585)
!8597 = !DILocation(line: 3037, column: 14, scope: !8585)
!8598 = !DILocation(line: 3038, column: 10, scope: !8585)
!8599 = !DILocation(line: 3039, column: 5, scope: !8585)
!8600 = !DILocation(line: 3041, column: 13, scope: !8601)
!8601 = distinct !DILexicalBlock(scope: !8585, file: !1, line: 3040, column: 5)
!8602 = !DILocation(line: 3041, column: 19, scope: !8601)
!8603 = !DILocation(line: 3041, column: 25, scope: !8601)
!8604 = !DILocation(line: 3041, column: 32, scope: !8601)
!8605 = !DILocation(line: 3041, column: 12, scope: !8601)
!8606 = !DILocation(line: 3042, column: 11, scope: !8607)
!8607 = distinct !DILexicalBlock(scope: !8601, file: !1, line: 3042, column: 11)
!8608 = !DILocation(line: 3042, column: 17, scope: !8607)
!8609 = !DILocation(line: 3042, column: 23, scope: !8607)
!8610 = !DILocation(line: 3042, column: 30, scope: !8607)
!8611 = !DILocation(line: 3042, column: 38, scope: !8607)
!8612 = !DILocation(line: 3042, column: 36, scope: !8607)
!8613 = !DILocation(line: 3042, column: 11, scope: !8601)
!8614 = !DILocation(line: 3044, column: 16, scope: !8615)
!8615 = distinct !DILexicalBlock(scope: !8607, file: !1, line: 3043, column: 9)
!8616 = !DILocation(line: 3044, column: 15, scope: !8615)
!8617 = !DILocation(line: 3045, column: 21, scope: !8615)
!8618 = !DILocation(line: 3045, column: 27, scope: !8615)
!8619 = !DILocation(line: 3045, column: 33, scope: !8615)
!8620 = !DILocation(line: 3045, column: 39, scope: !8615)
!8621 = !DILocation(line: 3045, column: 20, scope: !8615)
!8622 = !DILocation(line: 3046, column: 9, scope: !8615)
!8623 = !DILocation(line: 3047, column: 14, scope: !8601)
!8624 = !DILocation(line: 3047, column: 20, scope: !8601)
!8625 = !DILocation(line: 3047, column: 26, scope: !8601)
!8626 = !DILocation(line: 3047, column: 33, scope: !8601)
!8627 = !DILocation(line: 3047, column: 12, scope: !8601)
!8628 = !DILocation(line: 3048, column: 5, scope: !8601)
!8629 = !DILocation(line: 3048, column: 14, scope: !8585)
!8630 = !DILocation(line: 3048, column: 32, scope: !8585)
!8631 = !DILocation(line: 3048, column: 44, scope: !8585)
!8632 = !DILocation(line: 3048, column: 20, scope: !8585)
!8633 = distinct !{!8633, !8599, !8634}
!8634 = !DILocation(line: 3048, column: 50, scope: !8585)
!8635 = !DILocation(line: 3049, column: 40, scope: !8585)
!8636 = !DILocation(line: 3049, column: 23, scope: !8585)
!8637 = !DILocation(line: 3049, column: 14, scope: !8585)
!8638 = !DILocation(line: 3049, column: 5, scope: !8585)
!8639 = !DILocation(line: 3049, column: 22, scope: !8585)
!8640 = !DILocation(line: 3050, column: 3, scope: !8585)
!8641 = !DILocation(line: 3032, column: 39, scope: !8581)
!8642 = !DILocation(line: 3032, column: 3, scope: !8581)
!8643 = distinct !{!8643, !8583, !8644}
!8644 = !DILocation(line: 3050, column: 3, scope: !8578)
!8645 = !DILocation(line: 3051, column: 51, scope: !8558)
!8646 = !DILocation(line: 3051, column: 31, scope: !8558)
!8647 = !DILocation(line: 3051, column: 14, scope: !8558)
!8648 = !DILocation(line: 3051, column: 3, scope: !8558)
!8649 = !DILocation(line: 3051, column: 10, scope: !8558)
!8650 = !DILocation(line: 3051, column: 13, scope: !8558)
!8651 = !DILocation(line: 3052, column: 53, scope: !8558)
!8652 = !DILocation(line: 3052, column: 33, scope: !8558)
!8653 = !DILocation(line: 3052, column: 16, scope: !8558)
!8654 = !DILocation(line: 3052, column: 3, scope: !8558)
!8655 = !DILocation(line: 3052, column: 10, scope: !8558)
!8656 = !DILocation(line: 3052, column: 15, scope: !8558)
!8657 = !DILocation(line: 3053, column: 52, scope: !8558)
!8658 = !DILocation(line: 3053, column: 32, scope: !8558)
!8659 = !DILocation(line: 3053, column: 15, scope: !8558)
!8660 = !DILocation(line: 3053, column: 3, scope: !8558)
!8661 = !DILocation(line: 3053, column: 10, scope: !8558)
!8662 = !DILocation(line: 3053, column: 14, scope: !8558)
!8663 = !DILocation(line: 3054, column: 55, scope: !8558)
!8664 = !DILocation(line: 3054, column: 35, scope: !8558)
!8665 = !DILocation(line: 3054, column: 18, scope: !8558)
!8666 = !DILocation(line: 3054, column: 3, scope: !8558)
!8667 = !DILocation(line: 3054, column: 10, scope: !8558)
!8668 = !DILocation(line: 3054, column: 17, scope: !8558)
!8669 = !DILocation(line: 3055, column: 53, scope: !8558)
!8670 = !DILocation(line: 3055, column: 33, scope: !8558)
!8671 = !DILocation(line: 3055, column: 16, scope: !8558)
!8672 = !DILocation(line: 3055, column: 3, scope: !8558)
!8673 = !DILocation(line: 3055, column: 10, scope: !8558)
!8674 = !DILocation(line: 3055, column: 15, scope: !8558)
!8675 = !DILocation(line: 3056, column: 1, scope: !8558)
!8676 = distinct !DISubprogram(name: "GetNonpeakPixelList", scope: !1, file: !1, line: 3058, type: !8136, scopeLine: 3059, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !826)
!8677 = !DILocalVariable(name: "pixel_list", arg: 1, scope: !8676, file: !1, line: 3058, type: !779)
!8678 = !DILocation(line: 3058, column: 44, scope: !8676)
!8679 = !DILocalVariable(name: "pixel", arg: 2, scope: !8676, file: !1, line: 3058, type: !715)
!8680 = !DILocation(line: 3058, column: 74, scope: !8676)
!8681 = !DILocalVariable(name: "list", scope: !8676, file: !1, line: 3061, type: !7942)
!8682 = !DILocation(line: 3061, column: 6, scope: !8676)
!8683 = !DILocalVariable(name: "channel", scope: !8676, file: !1, line: 3064, type: !557)
!8684 = !DILocation(line: 3064, column: 5, scope: !8676)
!8685 = !DILocalVariable(name: "color", scope: !8676, file: !1, line: 3067, type: !504)
!8686 = !DILocation(line: 3067, column: 5, scope: !8676)
!8687 = !DILocalVariable(name: "next", scope: !8676, file: !1, line: 3068, type: !504)
!8688 = !DILocation(line: 3068, column: 5, scope: !8676)
!8689 = !DILocalVariable(name: "previous", scope: !8676, file: !1, line: 3069, type: !504)
!8690 = !DILocation(line: 3069, column: 5, scope: !8676)
!8691 = !DILocalVariable(name: "count", scope: !8676, file: !1, line: 3072, type: !557)
!8692 = !DILocation(line: 3072, column: 5, scope: !8676)
!8693 = !DILocalVariable(name: "channels", scope: !8676, file: !1, line: 3075, type: !8153)
!8694 = !DILocation(line: 3075, column: 5, scope: !8676)
!8695 = !DILocation(line: 3080, column: 15, scope: !8696)
!8696 = distinct !DILexicalBlock(scope: !8676, file: !1, line: 3080, column: 3)
!8697 = !DILocation(line: 3080, column: 8, scope: !8696)
!8698 = !DILocation(line: 3080, column: 19, scope: !8699)
!8699 = distinct !DILexicalBlock(scope: !8696, file: !1, line: 3080, column: 3)
!8700 = !DILocation(line: 3080, column: 27, scope: !8699)
!8701 = !DILocation(line: 3080, column: 3, scope: !8696)
!8702 = !DILocation(line: 3082, column: 10, scope: !8703)
!8703 = distinct !DILexicalBlock(scope: !8699, file: !1, line: 3081, column: 3)
!8704 = !DILocation(line: 3082, column: 22, scope: !8703)
!8705 = !DILocation(line: 3082, column: 28, scope: !8703)
!8706 = !DILocation(line: 3082, column: 27, scope: !8703)
!8707 = !DILocation(line: 3082, column: 9, scope: !8703)
!8708 = !DILocation(line: 3083, column: 10, scope: !8703)
!8709 = !DILocation(line: 3084, column: 10, scope: !8703)
!8710 = !DILocation(line: 3084, column: 16, scope: !8703)
!8711 = !DILocation(line: 3084, column: 22, scope: !8703)
!8712 = !DILocation(line: 3084, column: 29, scope: !8703)
!8713 = !DILocation(line: 3084, column: 9, scope: !8703)
!8714 = !DILocation(line: 3085, column: 10, scope: !8703)
!8715 = !DILocation(line: 3086, column: 5, scope: !8703)
!8716 = !DILocation(line: 3088, column: 16, scope: !8717)
!8717 = distinct !DILexicalBlock(scope: !8703, file: !1, line: 3087, column: 5)
!8718 = !DILocation(line: 3088, column: 15, scope: !8717)
!8719 = !DILocation(line: 3089, column: 13, scope: !8717)
!8720 = !DILocation(line: 3089, column: 12, scope: !8717)
!8721 = !DILocation(line: 3090, column: 12, scope: !8717)
!8722 = !DILocation(line: 3090, column: 18, scope: !8717)
!8723 = !DILocation(line: 3090, column: 24, scope: !8717)
!8724 = !DILocation(line: 3090, column: 31, scope: !8717)
!8725 = !DILocation(line: 3090, column: 11, scope: !8717)
!8726 = !DILocation(line: 3091, column: 14, scope: !8717)
!8727 = !DILocation(line: 3091, column: 20, scope: !8717)
!8728 = !DILocation(line: 3091, column: 26, scope: !8717)
!8729 = !DILocation(line: 3091, column: 33, scope: !8717)
!8730 = !DILocation(line: 3091, column: 12, scope: !8717)
!8731 = !DILocation(line: 3092, column: 5, scope: !8717)
!8732 = !DILocation(line: 3092, column: 14, scope: !8703)
!8733 = !DILocation(line: 3092, column: 34, scope: !8703)
!8734 = !DILocation(line: 3092, column: 46, scope: !8703)
!8735 = !DILocation(line: 3092, column: 53, scope: !8703)
!8736 = !DILocation(line: 3092, column: 20, scope: !8703)
!8737 = distinct !{!8737, !8715, !8738}
!8738 = !DILocation(line: 3092, column: 58, scope: !8703)
!8739 = !DILocation(line: 3093, column: 10, scope: !8740)
!8740 = distinct !DILexicalBlock(scope: !8703, file: !1, line: 3093, column: 9)
!8741 = !DILocation(line: 3093, column: 19, scope: !8740)
!8742 = !DILocation(line: 3093, column: 31, scope: !8740)
!8743 = !DILocation(line: 3093, column: 35, scope: !8740)
!8744 = !DILocation(line: 3093, column: 40, scope: !8740)
!8745 = !DILocation(line: 3093, column: 9, scope: !8703)
!8746 = !DILocation(line: 3094, column: 13, scope: !8740)
!8747 = !DILocation(line: 3094, column: 12, scope: !8740)
!8748 = !DILocation(line: 3094, column: 7, scope: !8740)
!8749 = !DILocation(line: 3096, column: 12, scope: !8750)
!8750 = distinct !DILexicalBlock(scope: !8740, file: !1, line: 3096, column: 11)
!8751 = !DILocation(line: 3096, column: 21, scope: !8750)
!8752 = !DILocation(line: 3096, column: 33, scope: !8750)
!8753 = !DILocation(line: 3096, column: 37, scope: !8750)
!8754 = !DILocation(line: 3096, column: 42, scope: !8750)
!8755 = !DILocation(line: 3096, column: 11, scope: !8740)
!8756 = !DILocation(line: 3097, column: 15, scope: !8750)
!8757 = !DILocation(line: 3097, column: 14, scope: !8750)
!8758 = !DILocation(line: 3097, column: 9, scope: !8750)
!8759 = !DILocation(line: 3098, column: 40, scope: !8703)
!8760 = !DILocation(line: 3098, column: 23, scope: !8703)
!8761 = !DILocation(line: 3098, column: 14, scope: !8703)
!8762 = !DILocation(line: 3098, column: 5, scope: !8703)
!8763 = !DILocation(line: 3098, column: 22, scope: !8703)
!8764 = !DILocation(line: 3099, column: 3, scope: !8703)
!8765 = !DILocation(line: 3080, column: 39, scope: !8699)
!8766 = !DILocation(line: 3080, column: 3, scope: !8699)
!8767 = distinct !{!8767, !8701, !8768}
!8768 = !DILocation(line: 3099, column: 3, scope: !8696)
!8769 = !DILocation(line: 3100, column: 51, scope: !8676)
!8770 = !DILocation(line: 3100, column: 31, scope: !8676)
!8771 = !DILocation(line: 3100, column: 14, scope: !8676)
!8772 = !DILocation(line: 3100, column: 3, scope: !8676)
!8773 = !DILocation(line: 3100, column: 10, scope: !8676)
!8774 = !DILocation(line: 3100, column: 13, scope: !8676)
!8775 = !DILocation(line: 3101, column: 53, scope: !8676)
!8776 = !DILocation(line: 3101, column: 33, scope: !8676)
!8777 = !DILocation(line: 3101, column: 16, scope: !8676)
!8778 = !DILocation(line: 3101, column: 3, scope: !8676)
!8779 = !DILocation(line: 3101, column: 10, scope: !8676)
!8780 = !DILocation(line: 3101, column: 15, scope: !8676)
!8781 = !DILocation(line: 3102, column: 52, scope: !8676)
!8782 = !DILocation(line: 3102, column: 32, scope: !8676)
!8783 = !DILocation(line: 3102, column: 15, scope: !8676)
!8784 = !DILocation(line: 3102, column: 3, scope: !8676)
!8785 = !DILocation(line: 3102, column: 10, scope: !8676)
!8786 = !DILocation(line: 3102, column: 14, scope: !8676)
!8787 = !DILocation(line: 3103, column: 55, scope: !8676)
!8788 = !DILocation(line: 3103, column: 35, scope: !8676)
!8789 = !DILocation(line: 3103, column: 18, scope: !8676)
!8790 = !DILocation(line: 3103, column: 3, scope: !8676)
!8791 = !DILocation(line: 3103, column: 10, scope: !8676)
!8792 = !DILocation(line: 3103, column: 17, scope: !8676)
!8793 = !DILocation(line: 3104, column: 53, scope: !8676)
!8794 = !DILocation(line: 3104, column: 33, scope: !8676)
!8795 = !DILocation(line: 3104, column: 16, scope: !8676)
!8796 = !DILocation(line: 3104, column: 3, scope: !8676)
!8797 = !DILocation(line: 3104, column: 10, scope: !8676)
!8798 = !DILocation(line: 3104, column: 15, scope: !8676)
!8799 = !DILocation(line: 3105, column: 1, scope: !8676)
!8800 = distinct !DISubprogram(name: "GetStandardDeviationPixelList", scope: !1, file: !1, line: 3107, type: !8136, scopeLine: 3109, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !826)
!8801 = !DILocalVariable(name: "pixel_list", arg: 1, scope: !8800, file: !1, line: 3107, type: !779)
!8802 = !DILocation(line: 3107, column: 54, scope: !8800)
!8803 = !DILocalVariable(name: "pixel", arg: 2, scope: !8800, file: !1, line: 3108, type: !715)
!8804 = !DILocation(line: 3108, column: 22, scope: !8800)
!8805 = !DILocalVariable(name: "sum", scope: !8800, file: !1, line: 3111, type: !725)
!8806 = !DILocation(line: 3111, column: 5, scope: !8800)
!8807 = !DILocalVariable(name: "sum_squared", scope: !8800, file: !1, line: 3112, type: !725)
!8808 = !DILocation(line: 3112, column: 5, scope: !8800)
!8809 = !DILocalVariable(name: "list", scope: !8800, file: !1, line: 3115, type: !7942)
!8810 = !DILocation(line: 3115, column: 6, scope: !8800)
!8811 = !DILocalVariable(name: "channel", scope: !8800, file: !1, line: 3118, type: !557)
!8812 = !DILocation(line: 3118, column: 5, scope: !8800)
!8813 = !DILocalVariable(name: "color", scope: !8800, file: !1, line: 3121, type: !504)
!8814 = !DILocation(line: 3121, column: 5, scope: !8800)
!8815 = !DILocalVariable(name: "count", scope: !8800, file: !1, line: 3124, type: !557)
!8816 = !DILocation(line: 3124, column: 5, scope: !8800)
!8817 = !DILocalVariable(name: "channels", scope: !8800, file: !1, line: 3127, type: !8153)
!8818 = !DILocation(line: 3127, column: 5, scope: !8800)
!8819 = !DILocation(line: 3132, column: 15, scope: !8820)
!8820 = distinct !DILexicalBlock(scope: !8800, file: !1, line: 3132, column: 3)
!8821 = !DILocation(line: 3132, column: 8, scope: !8820)
!8822 = !DILocation(line: 3132, column: 19, scope: !8823)
!8823 = distinct !DILexicalBlock(scope: !8820, file: !1, line: 3132, column: 3)
!8824 = !DILocation(line: 3132, column: 27, scope: !8823)
!8825 = !DILocation(line: 3132, column: 3, scope: !8820)
!8826 = !DILocation(line: 3134, column: 10, scope: !8827)
!8827 = distinct !DILexicalBlock(scope: !8823, file: !1, line: 3133, column: 3)
!8828 = !DILocation(line: 3134, column: 22, scope: !8827)
!8829 = !DILocation(line: 3134, column: 28, scope: !8827)
!8830 = !DILocation(line: 3134, column: 27, scope: !8827)
!8831 = !DILocation(line: 3134, column: 9, scope: !8827)
!8832 = !DILocation(line: 3135, column: 10, scope: !8827)
!8833 = !DILocation(line: 3136, column: 10, scope: !8827)
!8834 = !DILocation(line: 3137, column: 8, scope: !8827)
!8835 = !DILocation(line: 3138, column: 16, scope: !8827)
!8836 = !DILocation(line: 3139, column: 5, scope: !8827)
!8837 = !DILocalVariable(name: "i", scope: !8838, file: !1, line: 3142, type: !557)
!8838 = distinct !DILexicalBlock(scope: !8827, file: !1, line: 3140, column: 5)
!8839 = !DILocation(line: 3142, column: 9, scope: !8838)
!8840 = !DILocation(line: 3144, column: 13, scope: !8838)
!8841 = !DILocation(line: 3144, column: 19, scope: !8838)
!8842 = !DILocation(line: 3144, column: 25, scope: !8838)
!8843 = !DILocation(line: 3144, column: 32, scope: !8838)
!8844 = !DILocation(line: 3144, column: 12, scope: !8838)
!8845 = !DILocation(line: 3145, column: 29, scope: !8838)
!8846 = !DILocation(line: 3145, column: 35, scope: !8838)
!8847 = !DILocation(line: 3145, column: 41, scope: !8838)
!8848 = !DILocation(line: 3145, column: 48, scope: !8838)
!8849 = !DILocation(line: 3145, column: 12, scope: !8838)
!8850 = !DILocation(line: 3145, column: 54, scope: !8838)
!8851 = !DILocation(line: 3145, column: 53, scope: !8838)
!8852 = !DILocation(line: 3145, column: 10, scope: !8838)
!8853 = !DILocation(line: 3146, column: 13, scope: !8854)
!8854 = distinct !DILexicalBlock(scope: !8838, file: !1, line: 3146, column: 7)
!8855 = !DILocation(line: 3146, column: 12, scope: !8854)
!8856 = !DILocation(line: 3146, column: 17, scope: !8857)
!8857 = distinct !DILexicalBlock(scope: !8854, file: !1, line: 3146, column: 7)
!8858 = !DILocation(line: 3146, column: 31, scope: !8857)
!8859 = !DILocation(line: 3146, column: 37, scope: !8857)
!8860 = !DILocation(line: 3146, column: 43, scope: !8857)
!8861 = !DILocation(line: 3146, column: 50, scope: !8857)
!8862 = !DILocation(line: 3146, column: 19, scope: !8857)
!8863 = !DILocation(line: 3146, column: 7, scope: !8854)
!8864 = !DILocation(line: 3147, column: 40, scope: !8857)
!8865 = !DILocation(line: 3147, column: 23, scope: !8857)
!8866 = !DILocation(line: 3147, column: 65, scope: !8857)
!8867 = !DILocation(line: 3147, column: 48, scope: !8857)
!8868 = !DILocation(line: 3147, column: 46, scope: !8857)
!8869 = !DILocation(line: 3147, column: 20, scope: !8857)
!8870 = !DILocation(line: 3147, column: 9, scope: !8857)
!8871 = !DILocation(line: 3146, column: 58, scope: !8857)
!8872 = !DILocation(line: 3146, column: 7, scope: !8857)
!8873 = distinct !{!8873, !8863, !8874}
!8874 = !DILocation(line: 3147, column: 70, scope: !8854)
!8875 = !DILocation(line: 3148, column: 14, scope: !8838)
!8876 = !DILocation(line: 3148, column: 20, scope: !8838)
!8877 = !DILocation(line: 3148, column: 26, scope: !8838)
!8878 = !DILocation(line: 3148, column: 33, scope: !8838)
!8879 = !DILocation(line: 3148, column: 12, scope: !8838)
!8880 = !DILocation(line: 3149, column: 5, scope: !8838)
!8881 = !DILocation(line: 3149, column: 14, scope: !8827)
!8882 = !DILocation(line: 3149, column: 32, scope: !8827)
!8883 = !DILocation(line: 3149, column: 44, scope: !8827)
!8884 = !DILocation(line: 3149, column: 20, scope: !8827)
!8885 = distinct !{!8885, !8836, !8886}
!8886 = !DILocation(line: 3149, column: 50, scope: !8827)
!8887 = !DILocation(line: 3150, column: 10, scope: !8827)
!8888 = !DILocation(line: 3150, column: 22, scope: !8827)
!8889 = !DILocation(line: 3150, column: 8, scope: !8827)
!8890 = !DILocation(line: 3151, column: 18, scope: !8827)
!8891 = !DILocation(line: 3151, column: 30, scope: !8827)
!8892 = !DILocation(line: 3151, column: 16, scope: !8827)
!8893 = !DILocation(line: 3152, column: 45, scope: !8827)
!8894 = !DILocation(line: 3152, column: 58, scope: !8827)
!8895 = !DILocation(line: 3152, column: 62, scope: !8827)
!8896 = !DILocation(line: 3152, column: 61, scope: !8827)
!8897 = !DILocation(line: 3152, column: 56, scope: !8827)
!8898 = !DILocation(line: 3152, column: 40, scope: !8827)
!8899 = !DILocation(line: 3152, column: 23, scope: !8827)
!8900 = !DILocation(line: 3152, column: 14, scope: !8827)
!8901 = !DILocation(line: 3152, column: 5, scope: !8827)
!8902 = !DILocation(line: 3152, column: 22, scope: !8827)
!8903 = !DILocation(line: 3153, column: 3, scope: !8827)
!8904 = !DILocation(line: 3132, column: 39, scope: !8823)
!8905 = !DILocation(line: 3132, column: 3, scope: !8823)
!8906 = distinct !{!8906, !8825, !8907}
!8907 = !DILocation(line: 3153, column: 3, scope: !8820)
!8908 = !DILocation(line: 3154, column: 51, scope: !8800)
!8909 = !DILocation(line: 3154, column: 31, scope: !8800)
!8910 = !DILocation(line: 3154, column: 14, scope: !8800)
!8911 = !DILocation(line: 3154, column: 3, scope: !8800)
!8912 = !DILocation(line: 3154, column: 10, scope: !8800)
!8913 = !DILocation(line: 3154, column: 13, scope: !8800)
!8914 = !DILocation(line: 3155, column: 53, scope: !8800)
!8915 = !DILocation(line: 3155, column: 33, scope: !8800)
!8916 = !DILocation(line: 3155, column: 16, scope: !8800)
!8917 = !DILocation(line: 3155, column: 3, scope: !8800)
!8918 = !DILocation(line: 3155, column: 10, scope: !8800)
!8919 = !DILocation(line: 3155, column: 15, scope: !8800)
!8920 = !DILocation(line: 3156, column: 52, scope: !8800)
!8921 = !DILocation(line: 3156, column: 32, scope: !8800)
!8922 = !DILocation(line: 3156, column: 15, scope: !8800)
!8923 = !DILocation(line: 3156, column: 3, scope: !8800)
!8924 = !DILocation(line: 3156, column: 10, scope: !8800)
!8925 = !DILocation(line: 3156, column: 14, scope: !8800)
!8926 = !DILocation(line: 3157, column: 55, scope: !8800)
!8927 = !DILocation(line: 3157, column: 35, scope: !8800)
!8928 = !DILocation(line: 3157, column: 18, scope: !8800)
!8929 = !DILocation(line: 3157, column: 3, scope: !8800)
!8930 = !DILocation(line: 3157, column: 10, scope: !8800)
!8931 = !DILocation(line: 3157, column: 17, scope: !8800)
!8932 = !DILocation(line: 3158, column: 53, scope: !8800)
!8933 = !DILocation(line: 3158, column: 33, scope: !8800)
!8934 = !DILocation(line: 3158, column: 16, scope: !8800)
!8935 = !DILocation(line: 3158, column: 3, scope: !8800)
!8936 = !DILocation(line: 3158, column: 10, scope: !8800)
!8937 = !DILocation(line: 3158, column: 15, scope: !8800)
!8938 = !DILocation(line: 3159, column: 1, scope: !8800)
!8939 = distinct !DISubprogram(name: "DestroyPixelListThreadSet", scope: !1, file: !1, line: 2713, type: !8940, scopeLine: 2714, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !826)
!8940 = !DISubroutineType(types: !8941)
!8941 = !{!778, !778}
!8942 = !DILocalVariable(name: "pixel_list", arg: 1, scope: !8939, file: !1, line: 2713, type: !778)
!8943 = !DILocation(line: 2713, column: 58, scope: !8939)
!8944 = !DILocalVariable(name: "i", scope: !8939, file: !1, line: 2716, type: !557)
!8945 = !DILocation(line: 2716, column: 5, scope: !8939)
!8946 = !DILocation(line: 2719, column: 9, scope: !8947)
!8947 = distinct !DILexicalBlock(scope: !8939, file: !1, line: 2719, column: 3)
!8948 = !DILocation(line: 2719, column: 8, scope: !8947)
!8949 = !DILocation(line: 2719, column: 13, scope: !8950)
!8950 = distinct !DILexicalBlock(scope: !8947, file: !1, line: 2719, column: 3)
!8951 = !DILocation(line: 2719, column: 27, scope: !8950)
!8952 = !DILocation(line: 2719, column: 15, scope: !8950)
!8953 = !DILocation(line: 2719, column: 3, scope: !8947)
!8954 = !DILocation(line: 2720, column: 9, scope: !8955)
!8955 = distinct !DILexicalBlock(scope: !8950, file: !1, line: 2720, column: 9)
!8956 = !DILocation(line: 2720, column: 20, scope: !8955)
!8957 = !DILocation(line: 2720, column: 23, scope: !8955)
!8958 = !DILocation(line: 2720, column: 9, scope: !8950)
!8959 = !DILocation(line: 2721, column: 38, scope: !8955)
!8960 = !DILocation(line: 2721, column: 49, scope: !8955)
!8961 = !DILocation(line: 2721, column: 21, scope: !8955)
!8962 = !DILocation(line: 2721, column: 7, scope: !8955)
!8963 = !DILocation(line: 2721, column: 18, scope: !8955)
!8964 = !DILocation(line: 2721, column: 20, scope: !8955)
!8965 = !DILocation(line: 2720, column: 40, scope: !8955)
!8966 = !DILocation(line: 2719, column: 68, scope: !8950)
!8967 = !DILocation(line: 2719, column: 3, scope: !8950)
!8968 = distinct !{!8968, !8953, !8969}
!8969 = !DILocation(line: 2721, column: 51, scope: !8947)
!8970 = !DILocation(line: 2722, column: 52, scope: !8939)
!8971 = !DILocation(line: 2722, column: 29, scope: !8939)
!8972 = !DILocation(line: 2722, column: 14, scope: !8939)
!8973 = !DILocation(line: 2722, column: 13, scope: !8939)
!8974 = !DILocation(line: 2723, column: 10, scope: !8939)
!8975 = !DILocation(line: 2723, column: 3, scope: !8939)
!8976 = distinct !DISubprogram(name: "MagickPixelIntensity", scope: !8977, file: !8977, line: 87, type: !8978, scopeLine: 89, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !826)
!8977 = !DIFile(filename: "./magick/color-private.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/538.imagick_r/build/build_base_ld-loop-ext-m64.0000")
!8978 = !DISubroutineType(types: !8979)
!8979 = !{!725, !810}
!8980 = !DILocalVariable(name: "pixel", arg: 1, scope: !8976, file: !8977, line: 88, type: !810)
!8981 = !DILocation(line: 88, column: 28, scope: !8976)
!8982 = !DILocation(line: 90, column: 7, scope: !8983)
!8983 = distinct !DILexicalBlock(scope: !8976, file: !8977, line: 90, column: 7)
!8984 = !DILocation(line: 90, column: 14, scope: !8983)
!8985 = !DILocation(line: 90, column: 25, scope: !8983)
!8986 = !DILocation(line: 90, column: 7, scope: !8976)
!8987 = !DILocation(line: 91, column: 12, scope: !8983)
!8988 = !DILocation(line: 91, column: 19, scope: !8983)
!8989 = !DILocation(line: 91, column: 5, scope: !8983)
!8990 = !DILocation(line: 92, column: 19, scope: !8976)
!8991 = !DILocation(line: 92, column: 26, scope: !8976)
!8992 = !DILocation(line: 92, column: 18, scope: !8976)
!8993 = !DILocation(line: 92, column: 39, scope: !8976)
!8994 = !DILocation(line: 92, column: 46, scope: !8976)
!8995 = !DILocation(line: 92, column: 38, scope: !8976)
!8996 = !DILocation(line: 92, column: 29, scope: !8976)
!8997 = !DILocation(line: 92, column: 61, scope: !8976)
!8998 = !DILocation(line: 92, column: 68, scope: !8976)
!8999 = !DILocation(line: 92, column: 60, scope: !8976)
!9000 = !DILocation(line: 92, column: 51, scope: !8976)
!9001 = !DILocation(line: 92, column: 9, scope: !8976)
!9002 = !DILocation(line: 92, column: 3, scope: !8976)
!9003 = !DILocation(line: 93, column: 1, scope: !8976)
!9004 = distinct !DISubprogram(name: "AcquirePixelList", scope: !1, file: !1, line: 2726, type: !9005, scopeLine: 2727, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !826)
!9005 = !DISubroutineType(types: !9006)
!9006 = !{!779, !1793, !1793}
!9007 = !DILocalVariable(name: "width", arg: 1, scope: !9004, file: !1, line: 2726, type: !1793)
!9008 = !DILocation(line: 2726, column: 49, scope: !9004)
!9009 = !DILocalVariable(name: "height", arg: 2, scope: !9004, file: !1, line: 2726, type: !1793)
!9010 = !DILocation(line: 2726, column: 68, scope: !9004)
!9011 = !DILocalVariable(name: "pixel_list", scope: !9004, file: !1, line: 2729, type: !779)
!9012 = !DILocation(line: 2729, column: 6, scope: !9004)
!9013 = !DILocalVariable(name: "i", scope: !9004, file: !1, line: 2732, type: !557)
!9014 = !DILocation(line: 2732, column: 5, scope: !9004)
!9015 = !DILocation(line: 2734, column: 28, scope: !9004)
!9016 = !DILocation(line: 2734, column: 14, scope: !9004)
!9017 = !DILocation(line: 2734, column: 13, scope: !9004)
!9018 = !DILocation(line: 2735, column: 7, scope: !9019)
!9019 = distinct !DILexicalBlock(scope: !9004, file: !1, line: 2735, column: 7)
!9020 = !DILocation(line: 2735, column: 18, scope: !9019)
!9021 = !DILocation(line: 2735, column: 7, scope: !9004)
!9022 = !DILocation(line: 2736, column: 12, scope: !9019)
!9023 = !DILocation(line: 2736, column: 5, scope: !9019)
!9024 = !DILocation(line: 2737, column: 37, scope: !9004)
!9025 = !DILocation(line: 2737, column: 28, scope: !9004)
!9026 = !DILocation(line: 2737, column: 10, scope: !9004)
!9027 = !DILocation(line: 2738, column: 22, scope: !9004)
!9028 = !DILocation(line: 2738, column: 28, scope: !9004)
!9029 = !DILocation(line: 2738, column: 27, scope: !9004)
!9030 = !DILocation(line: 2738, column: 3, scope: !9004)
!9031 = !DILocation(line: 2738, column: 15, scope: !9004)
!9032 = !DILocation(line: 2738, column: 21, scope: !9004)
!9033 = !DILocation(line: 2739, column: 9, scope: !9034)
!9034 = distinct !DILexicalBlock(scope: !9004, file: !1, line: 2739, column: 3)
!9035 = !DILocation(line: 2739, column: 8, scope: !9034)
!9036 = !DILocation(line: 2739, column: 13, scope: !9037)
!9037 = distinct !DILexicalBlock(scope: !9034, file: !1, line: 2739, column: 3)
!9038 = !DILocation(line: 2739, column: 15, scope: !9037)
!9039 = !DILocation(line: 2739, column: 3, scope: !9034)
!9040 = !DILocation(line: 2741, column: 45, scope: !9041)
!9041 = distinct !DILexicalBlock(scope: !9037, file: !1, line: 2740, column: 3)
!9042 = !DILocation(line: 2741, column: 32, scope: !9041)
!9043 = !DILocation(line: 2741, column: 5, scope: !9041)
!9044 = !DILocation(line: 2741, column: 17, scope: !9041)
!9045 = !DILocation(line: 2741, column: 23, scope: !9041)
!9046 = !DILocation(line: 2741, column: 26, scope: !9041)
!9047 = !DILocation(line: 2741, column: 31, scope: !9041)
!9048 = !DILocation(line: 2743, column: 9, scope: !9049)
!9049 = distinct !DILexicalBlock(scope: !9041, file: !1, line: 2743, column: 9)
!9050 = !DILocation(line: 2743, column: 21, scope: !9049)
!9051 = !DILocation(line: 2743, column: 27, scope: !9049)
!9052 = !DILocation(line: 2743, column: 30, scope: !9049)
!9053 = !DILocation(line: 2743, column: 36, scope: !9049)
!9054 = !DILocation(line: 2743, column: 9, scope: !9041)
!9055 = !DILocation(line: 2744, column: 31, scope: !9049)
!9056 = !DILocation(line: 2744, column: 14, scope: !9049)
!9057 = !DILocation(line: 2744, column: 7, scope: !9049)
!9058 = !DILocation(line: 2745, column: 30, scope: !9041)
!9059 = !DILocation(line: 2745, column: 42, scope: !9041)
!9060 = !DILocation(line: 2745, column: 48, scope: !9041)
!9061 = !DILocation(line: 2745, column: 51, scope: !9041)
!9062 = !DILocation(line: 2745, column: 12, scope: !9041)
!9063 = !DILocation(line: 2747, column: 3, scope: !9041)
!9064 = !DILocation(line: 2739, column: 32, scope: !9037)
!9065 = !DILocation(line: 2739, column: 3, scope: !9037)
!9066 = distinct !{!9066, !9039, !9067}
!9067 = !DILocation(line: 2747, column: 3, scope: !9034)
!9068 = !DILocation(line: 2748, column: 3, scope: !9004)
!9069 = !DILocation(line: 2748, column: 15, scope: !9004)
!9070 = !DILocation(line: 2748, column: 24, scope: !9004)
!9071 = !DILocation(line: 2749, column: 10, scope: !9004)
!9072 = !DILocation(line: 2749, column: 3, scope: !9004)
!9073 = !DILocation(line: 2750, column: 1, scope: !9004)
!9074 = distinct !DISubprogram(name: "DestroyPixelList", scope: !1, file: !1, line: 2698, type: !9075, scopeLine: 2699, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !826)
!9075 = !DISubroutineType(types: !9076)
!9076 = !{!779, !779}
!9077 = !DILocalVariable(name: "pixel_list", arg: 1, scope: !9074, file: !1, line: 2698, type: !779)
!9078 = !DILocation(line: 2698, column: 47, scope: !9074)
!9079 = !DILocalVariable(name: "i", scope: !9074, file: !1, line: 2701, type: !557)
!9080 = !DILocation(line: 2701, column: 5, scope: !9074)
!9081 = !DILocation(line: 2703, column: 7, scope: !9082)
!9082 = distinct !DILexicalBlock(scope: !9074, file: !1, line: 2703, column: 7)
!9083 = !DILocation(line: 2703, column: 18, scope: !9082)
!9084 = !DILocation(line: 2703, column: 7, scope: !9074)
!9085 = !DILocation(line: 2704, column: 5, scope: !9082)
!9086 = !DILocation(line: 2705, column: 9, scope: !9087)
!9087 = distinct !DILexicalBlock(scope: !9074, file: !1, line: 2705, column: 3)
!9088 = !DILocation(line: 2705, column: 8, scope: !9087)
!9089 = !DILocation(line: 2705, column: 13, scope: !9090)
!9090 = distinct !DILexicalBlock(scope: !9087, file: !1, line: 2705, column: 3)
!9091 = !DILocation(line: 2705, column: 15, scope: !9090)
!9092 = !DILocation(line: 2705, column: 3, scope: !9087)
!9093 = !DILocation(line: 2706, column: 9, scope: !9094)
!9094 = distinct !DILexicalBlock(scope: !9090, file: !1, line: 2706, column: 9)
!9095 = !DILocation(line: 2706, column: 21, scope: !9094)
!9096 = !DILocation(line: 2706, column: 27, scope: !9094)
!9097 = !DILocation(line: 2706, column: 30, scope: !9094)
!9098 = !DILocation(line: 2706, column: 36, scope: !9094)
!9099 = !DILocation(line: 2706, column: 9, scope: !9090)
!9100 = !DILocation(line: 2708, column: 9, scope: !9094)
!9101 = !DILocation(line: 2708, column: 21, scope: !9094)
!9102 = !DILocation(line: 2708, column: 27, scope: !9094)
!9103 = !DILocation(line: 2708, column: 30, scope: !9094)
!9104 = !DILocation(line: 2707, column: 47, scope: !9094)
!9105 = !DILocation(line: 2707, column: 34, scope: !9094)
!9106 = !DILocation(line: 2707, column: 7, scope: !9094)
!9107 = !DILocation(line: 2707, column: 19, scope: !9094)
!9108 = !DILocation(line: 2707, column: 25, scope: !9094)
!9109 = !DILocation(line: 2707, column: 28, scope: !9094)
!9110 = !DILocation(line: 2707, column: 33, scope: !9094)
!9111 = !DILocation(line: 2706, column: 52, scope: !9094)
!9112 = !DILocation(line: 2705, column: 32, scope: !9090)
!9113 = !DILocation(line: 2705, column: 3, scope: !9090)
!9114 = distinct !{!9114, !9092, !9115}
!9115 = !DILocation(line: 2708, column: 35, scope: !9087)
!9116 = !DILocation(line: 2709, column: 51, scope: !9074)
!9117 = !DILocation(line: 2709, column: 28, scope: !9074)
!9118 = !DILocation(line: 2709, column: 14, scope: !9074)
!9119 = !DILocation(line: 2709, column: 13, scope: !9074)
!9120 = !DILocation(line: 2710, column: 10, scope: !9074)
!9121 = !DILocation(line: 2710, column: 3, scope: !9074)
!9122 = !DILocation(line: 2711, column: 1, scope: !9074)
!9123 = distinct !DISubprogram(name: "ScaleQuantumToShort", scope: !6872, file: !6872, line: 421, type: !9124, scopeLine: 422, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !826)
!9124 = !DISubroutineType(types: !9125)
!9125 = !{!522, !1944}
!9126 = !DILocalVariable(name: "quantum", arg: 1, scope: !9123, file: !6872, line: 421, type: !1944)
!9127 = !DILocation(line: 421, column: 64, scope: !9123)
!9128 = !DILocation(line: 424, column: 27, scope: !9123)
!9129 = !DILocation(line: 424, column: 3, scope: !9123)
!9130 = distinct !DISubprogram(name: "AddNodePixelList", scope: !1, file: !1, line: 2779, type: !9131, scopeLine: 2781, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !826)
!9131 = !DISubroutineType(types: !9132)
!9132 = !{null, !779, !9133, !1793}
!9133 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !557)
!9134 = !DILocalVariable(name: "pixel_list", arg: 1, scope: !9130, file: !1, line: 2779, type: !779)
!9135 = !DILocation(line: 2779, column: 41, scope: !9130)
!9136 = !DILocalVariable(name: "channel", arg: 2, scope: !9130, file: !1, line: 2779, type: !9133)
!9137 = !DILocation(line: 2779, column: 66, scope: !9130)
!9138 = !DILocalVariable(name: "color", arg: 3, scope: !9130, file: !1, line: 2780, type: !1793)
!9139 = !DILocation(line: 2780, column: 16, scope: !9130)
!9140 = !DILocalVariable(name: "list", scope: !9130, file: !1, line: 2783, type: !7942)
!9141 = !DILocation(line: 2783, column: 6, scope: !9130)
!9142 = !DILocalVariable(name: "level", scope: !9130, file: !1, line: 2786, type: !557)
!9143 = !DILocation(line: 2786, column: 5, scope: !9130)
!9144 = !DILocalVariable(name: "search", scope: !9130, file: !1, line: 2789, type: !504)
!9145 = !DILocation(line: 2789, column: 5, scope: !9130)
!9146 = !DILocalVariable(name: "update", scope: !9130, file: !1, line: 2790, type: !798)
!9147 = !DILocation(line: 2790, column: 5, scope: !9130)
!9148 = !DILocation(line: 2795, column: 8, scope: !9130)
!9149 = !DILocation(line: 2795, column: 20, scope: !9130)
!9150 = !DILocation(line: 2795, column: 26, scope: !9130)
!9151 = !DILocation(line: 2795, column: 25, scope: !9130)
!9152 = !DILocation(line: 2795, column: 7, scope: !9130)
!9153 = !DILocation(line: 2796, column: 32, scope: !9130)
!9154 = !DILocation(line: 2796, column: 44, scope: !9130)
!9155 = !DILocation(line: 2796, column: 3, scope: !9130)
!9156 = !DILocation(line: 2796, column: 9, scope: !9130)
!9157 = !DILocation(line: 2796, column: 15, scope: !9130)
!9158 = !DILocation(line: 2796, column: 22, scope: !9130)
!9159 = !DILocation(line: 2796, column: 31, scope: !9130)
!9160 = !DILocation(line: 2797, column: 3, scope: !9130)
!9161 = !DILocation(line: 2797, column: 9, scope: !9130)
!9162 = !DILocation(line: 2797, column: 15, scope: !9130)
!9163 = !DILocation(line: 2797, column: 22, scope: !9130)
!9164 = !DILocation(line: 2797, column: 27, scope: !9130)
!9165 = !DILocation(line: 2801, column: 9, scope: !9130)
!9166 = !DILocation(line: 2802, column: 14, scope: !9167)
!9167 = distinct !DILexicalBlock(scope: !9130, file: !1, line: 2802, column: 3)
!9168 = !DILocation(line: 2802, column: 20, scope: !9167)
!9169 = !DILocation(line: 2802, column: 13, scope: !9167)
!9170 = !DILocation(line: 2802, column: 8, scope: !9167)
!9171 = !DILocation(line: 2802, column: 27, scope: !9172)
!9172 = distinct !DILexicalBlock(scope: !9167, file: !1, line: 2802, column: 3)
!9173 = !DILocation(line: 2802, column: 33, scope: !9172)
!9174 = !DILocation(line: 2802, column: 3, scope: !9167)
!9175 = !DILocation(line: 2804, column: 5, scope: !9176)
!9176 = distinct !DILexicalBlock(scope: !9172, file: !1, line: 2803, column: 3)
!9177 = !DILocation(line: 2804, column: 12, scope: !9176)
!9178 = !DILocation(line: 2804, column: 18, scope: !9176)
!9179 = !DILocation(line: 2804, column: 24, scope: !9176)
!9180 = !DILocation(line: 2804, column: 32, scope: !9176)
!9181 = !DILocation(line: 2804, column: 37, scope: !9176)
!9182 = !DILocation(line: 2804, column: 46, scope: !9176)
!9183 = !DILocation(line: 2804, column: 44, scope: !9176)
!9184 = !DILocation(line: 2805, column: 14, scope: !9176)
!9185 = !DILocation(line: 2805, column: 20, scope: !9176)
!9186 = !DILocation(line: 2805, column: 26, scope: !9176)
!9187 = !DILocation(line: 2805, column: 34, scope: !9176)
!9188 = !DILocation(line: 2805, column: 39, scope: !9176)
!9189 = !DILocation(line: 2805, column: 13, scope: !9176)
!9190 = distinct !{!9190, !9175, !9191}
!9191 = !DILocation(line: 2805, column: 44, scope: !9176)
!9192 = !DILocation(line: 2806, column: 19, scope: !9176)
!9193 = !DILocation(line: 2806, column: 12, scope: !9176)
!9194 = !DILocation(line: 2806, column: 5, scope: !9176)
!9195 = !DILocation(line: 2806, column: 18, scope: !9176)
!9196 = !DILocation(line: 2807, column: 3, scope: !9176)
!9197 = !DILocation(line: 2802, column: 44, scope: !9172)
!9198 = !DILocation(line: 2802, column: 3, scope: !9172)
!9199 = distinct !{!9199, !9174, !9200}
!9200 = !DILocation(line: 2807, column: 3, scope: !9167)
!9201 = !DILocation(line: 2811, column: 13, scope: !9202)
!9202 = distinct !DILexicalBlock(scope: !9130, file: !1, line: 2811, column: 3)
!9203 = !DILocation(line: 2811, column: 8, scope: !9202)
!9204 = !DILocation(line: 2813, column: 23, scope: !9205)
!9205 = distinct !DILexicalBlock(scope: !9206, file: !1, line: 2812, column: 3)
!9206 = distinct !DILexicalBlock(scope: !9202, file: !1, line: 2811, column: 3)
!9207 = !DILocation(line: 2813, column: 35, scope: !9205)
!9208 = !DILocation(line: 2813, column: 39, scope: !9205)
!9209 = !DILocation(line: 2813, column: 50, scope: !9205)
!9210 = !DILocation(line: 2813, column: 5, scope: !9205)
!9211 = !DILocation(line: 2813, column: 17, scope: !9205)
!9212 = !DILocation(line: 2813, column: 21, scope: !9205)
!9213 = !DILocation(line: 2814, column: 10, scope: !9214)
!9214 = distinct !DILexicalBlock(scope: !9205, file: !1, line: 2814, column: 9)
!9215 = !DILocation(line: 2814, column: 22, scope: !9214)
!9216 = !DILocation(line: 2814, column: 27, scope: !9214)
!9217 = !DILocation(line: 2814, column: 36, scope: !9214)
!9218 = !DILocation(line: 2814, column: 9, scope: !9205)
!9219 = !DILocation(line: 2815, column: 7, scope: !9214)
!9220 = !DILocation(line: 2816, column: 3, scope: !9205)
!9221 = !DILocation(line: 2811, column: 24, scope: !9206)
!9222 = !DILocation(line: 2811, column: 3, scope: !9206)
!9223 = distinct !{!9223, !9224, !9225}
!9224 = !DILocation(line: 2811, column: 3, scope: !9202)
!9225 = !DILocation(line: 2816, column: 3, scope: !9202)
!9226 = !DILocation(line: 2817, column: 7, scope: !9227)
!9227 = distinct !DILexicalBlock(scope: !9130, file: !1, line: 2817, column: 7)
!9228 = !DILocation(line: 2817, column: 13, scope: !9227)
!9229 = !DILocation(line: 2817, column: 7, scope: !9130)
!9230 = !DILocation(line: 2818, column: 10, scope: !9227)
!9231 = !DILocation(line: 2818, column: 5, scope: !9227)
!9232 = !DILocation(line: 2819, column: 7, scope: !9233)
!9233 = distinct !DILexicalBlock(scope: !9130, file: !1, line: 2819, column: 7)
!9234 = !DILocation(line: 2819, column: 16, scope: !9233)
!9235 = !DILocation(line: 2819, column: 22, scope: !9233)
!9236 = !DILocation(line: 2819, column: 27, scope: !9233)
!9237 = !DILocation(line: 2819, column: 13, scope: !9233)
!9238 = !DILocation(line: 2819, column: 7, scope: !9130)
!9239 = !DILocation(line: 2820, column: 11, scope: !9233)
!9240 = !DILocation(line: 2820, column: 17, scope: !9233)
!9241 = !DILocation(line: 2820, column: 22, scope: !9233)
!9242 = !DILocation(line: 2820, column: 10, scope: !9233)
!9243 = !DILocation(line: 2820, column: 5, scope: !9233)
!9244 = !DILocation(line: 2824, column: 3, scope: !9130)
!9245 = !DILocation(line: 2824, column: 10, scope: !9130)
!9246 = !DILocation(line: 2824, column: 18, scope: !9130)
!9247 = !DILocation(line: 2824, column: 24, scope: !9130)
!9248 = !DILocation(line: 2824, column: 16, scope: !9130)
!9249 = !DILocation(line: 2826, column: 5, scope: !9250)
!9250 = distinct !DILexicalBlock(scope: !9130, file: !1, line: 2825, column: 3)
!9251 = !DILocation(line: 2826, column: 11, scope: !9250)
!9252 = !DILocation(line: 2826, column: 16, scope: !9250)
!9253 = !DILocation(line: 2827, column: 12, scope: !9250)
!9254 = !DILocation(line: 2827, column: 18, scope: !9250)
!9255 = !DILocation(line: 2827, column: 5, scope: !9250)
!9256 = !DILocation(line: 2827, column: 24, scope: !9250)
!9257 = distinct !{!9257, !9244, !9258}
!9258 = !DILocation(line: 2828, column: 3, scope: !9130)
!9259 = !DILocation(line: 2832, column: 3, scope: !9130)
!9260 = !DILocation(line: 2834, column: 36, scope: !9261)
!9261 = distinct !DILexicalBlock(scope: !9130, file: !1, line: 2833, column: 3)
!9262 = !DILocation(line: 2834, column: 42, scope: !9261)
!9263 = !DILocation(line: 2834, column: 55, scope: !9261)
!9264 = !DILocation(line: 2834, column: 48, scope: !9261)
!9265 = !DILocation(line: 2834, column: 63, scope: !9261)
!9266 = !DILocation(line: 2834, column: 68, scope: !9261)
!9267 = !DILocation(line: 2834, column: 5, scope: !9261)
!9268 = !DILocation(line: 2834, column: 11, scope: !9261)
!9269 = !DILocation(line: 2834, column: 17, scope: !9261)
!9270 = !DILocation(line: 2834, column: 24, scope: !9261)
!9271 = !DILocation(line: 2834, column: 29, scope: !9261)
!9272 = !DILocation(line: 2834, column: 35, scope: !9261)
!9273 = !DILocation(line: 2835, column: 44, scope: !9261)
!9274 = !DILocation(line: 2835, column: 5, scope: !9261)
!9275 = !DILocation(line: 2835, column: 11, scope: !9261)
!9276 = !DILocation(line: 2835, column: 24, scope: !9261)
!9277 = !DILocation(line: 2835, column: 17, scope: !9261)
!9278 = !DILocation(line: 2835, column: 32, scope: !9261)
!9279 = !DILocation(line: 2835, column: 37, scope: !9261)
!9280 = !DILocation(line: 2835, column: 43, scope: !9261)
!9281 = !DILocation(line: 2836, column: 3, scope: !9261)
!9282 = !DILocation(line: 2836, column: 17, scope: !9130)
!9283 = !DILocation(line: 2836, column: 20, scope: !9130)
!9284 = distinct !{!9284, !9259, !9285}
!9285 = !DILocation(line: 2836, column: 23, scope: !9130)
!9286 = !DILocation(line: 2837, column: 1, scope: !9130)
!9287 = distinct !DISubprogram(name: "ScaleShortToQuantum", scope: !6872, file: !6872, line: 434, type: !9288, scopeLine: 435, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !0, retainedNodes: !826)
!9288 = !DISubroutineType(types: !9289)
!9289 = !{!521, !9290}
!9290 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !522)
!9291 = !DILocalVariable(name: "value", arg: 1, scope: !9287, file: !6872, line: 434, type: !9290)
!9292 = !DILocation(line: 434, column: 64, scope: !9287)
!9293 = !DILocation(line: 436, column: 20, scope: !9287)
!9294 = !DILocation(line: 436, column: 3, scope: !9287)
