; ModuleID = 'blender/source/blender/windowmanager/intern/wm_event_system.c'
source_filename = "blender/source/blender/windowmanager/intern/wm_event_system.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.Global = type { %struct.Main*, [1024 x i8], [1024 x i8], i8, i8, i8, %struct.ListBase, i8, i8, i8, i16, i16, i16, i8, i16, i32, i32, i8, i32, i32, [200 x i8] }
%struct.Main = type { %struct.Main*, %struct.Main*, [1024 x i8], i16, i16, i16, i16, i64, [16 x i8], i16, %struct.Library*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, [256 x i8], %struct.EvaluationContext*, %struct.MainLock* }
%struct.Library = type { %struct.ID, %struct.ID*, %struct.FileData*, [1024 x i8], [1024 x i8], %struct.Library*, %struct.PackedFile* }
%struct.ID = type { i8*, i8*, %struct.ID*, %struct.Library*, [66 x i8], i16, i32, i32, i32, %struct.IDProperty* }
%struct.IDProperty = type { %struct.IDProperty*, %struct.IDProperty*, i8, i8, i16, [64 x i8], i32, %struct.IDPropertyData, i32, i32 }
%struct.IDPropertyData = type { i8*, %struct.ListBase, i32, i32 }
%struct.FileData = type opaque
%struct.PackedFile = type opaque
%struct.EvaluationContext = type opaque
%struct.MainLock = type opaque
%struct.ListBase = type { i8*, i8* }
%struct.UserDef = type { i32, i32, i32, i32, i32, [768 x i8], [768 x i8], [1024 x i8], [768 x i8], [768 x i8], [768 x i8], [768 x i8], [768 x i8], [1024 x i8], [1024 x i8], i32, i16, i16, i16, i16, i16, i16, i32, i32, i32, i16, i16, i32, i32, i32, i32, i32, i32, i32, i16, i16, i16, i16, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, [64 x i8], i16, i16, i16, i16, i16, i16, i16, i16, [3 x %struct.SolidLight], i16, i16, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i8, i8, i8, i8, i16, i16, i16, i16, i16, i16, float, float, i32, i16, i16, float, i16, i16, i16, i16, %struct.ColorBand, [3 x float], [4 x float], i16, i8, i8, [80 x i8], [1024 x i8], i32, i32, float, float, i32, i16, i16, i16, i16, i16, i16, %struct.WalkNavigation }
%struct.SolidLight = type { i32, i32, [4 x float], [4 x float], [4 x float] }
%struct.ColorBand = type { i16, i16, i8, i8, i8, [1 x i8], [32 x %struct.CBData] }
%struct.CBData = type { float, float, float, float, float, i32 }
%struct.WalkNavigation = type { float, float, float, float, float, float, i16, [3 x i16] }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.wmOperator = type { %struct.wmOperator*, %struct.wmOperator*, [64 x i8], %struct.IDProperty*, %struct.wmOperatorType*, i8*, i8*, %struct.PointerRNA*, %struct.ReportList*, %struct.ListBase, %struct.wmOperator*, %struct.uiLayout*, i16, [3 x i16] }
%struct.wmOperatorType = type { i8*, i8*, i8*, i8*, i32 (%struct.bContext*, %struct.wmOperator*)*, i8 (%struct.bContext*, %struct.wmOperator*)*, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)*, void (%struct.bContext*, %struct.wmOperator*)*, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)*, i32 (%struct.bContext*)*, void (%struct.bContext*, %struct.wmOperator*)*, %struct.StructRNA*, %struct.IDProperty*, %struct.PropertyRNA*, %struct.ListBase, %struct.wmKeyMap*, i8*, {}*, %struct.ExtensionRNA, i16 }
%struct.bContext = type opaque
%struct.wmEvent = type { %struct.wmEvent*, %struct.wmEvent*, i16, i16, i32, i32, [2 x i32], [6 x i8], i8, i8, i16, i16, i32, i32, double, i32, i32, i16, i16, i16, i16, i16, i16, i8*, %struct.wmTabletData*, i16, i16, i32, i8* }
%struct.wmTabletData = type { i32, float, float, float }
%struct.StructRNA = type opaque
%struct.PropertyRNA = type opaque
%struct.wmKeyMap = type { %struct.wmKeyMap*, %struct.wmKeyMap*, %struct.ListBase, %struct.ListBase, [64 x i8], i16, i16, i16, i16, i32 (%struct.bContext*)*, i8* }
%struct.ExtensionRNA = type { i8*, %struct.StructRNA*, i32 (%struct.bContext*, %struct.PointerRNA*, %struct.FunctionRNA*, %struct.ParameterList*)*, void (i8*)* }
%struct.FunctionRNA = type opaque
%struct.ParameterList = type { i8*, %struct.FunctionRNA*, i32, i32, i32 }
%struct.PointerRNA = type { %struct.anon, %struct.StructRNA*, i8* }
%struct.anon = type { i8* }
%struct.ReportList = type { %struct.ListBase, i32, i32, i32, i32, %struct.wmTimer* }
%struct.wmTimer = type { %struct.wmTimer*, %struct.wmTimer*, %struct.wmWindow*, double, i32, i8*, double, double, double, double, double, i32 }
%struct.wmWindow = type { %struct.wmWindow*, %struct.wmWindow*, i8*, %struct.bScreen*, %struct.bScreen*, [64 x i8], i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i32, i16, i16, %struct.wmEvent*, %struct.wmSubWindow*, %struct.wmGesture*, i32, i32, i8*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase }
%struct.bScreen = type { %struct.ID, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.Scene*, %struct.Scene*, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, %struct.wmTimer*, i8* }
%struct.Scene = type { %struct.ID, %struct.AnimData*, %struct.Object*, %struct.World*, %struct.Scene*, %struct.ListBase, %struct.Base*, %struct.Object*, [3 x float], [3 x float], [3 x float], [3 x float], i32, i32, i32, i16, i8, [1 x i8], %struct.bNodeTree*, %struct.Editing*, %struct.ToolSettings*, %struct.SceneStats*, %struct.RenderData, %struct.AudioData, %struct.ListBase, %struct.ListBase, i8*, i8*, i8*, i8*, i8*, %struct.DagForest*, i16, i16, i32, %struct.ListBase, %struct.GameFraming, %struct.GameData, %struct.UnitSettings, %struct.bGPdata*, %struct.PhysicsSettings, %struct.MovieClip*, i64, i64, %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings, %struct.ColorManagedColorspaceSettings, %struct.RigidBodyWorld* }
%struct.AnimData = type opaque
%struct.World = type opaque
%struct.Base = type { %struct.Base*, %struct.Base*, i32, i32, i32, i16, i16, %struct.Object* }
%struct.Object = type opaque
%struct.bNodeTree = type { %struct.ID, %struct.AnimData*, %struct.bNodeTreeType*, [64 x i8], %struct.StructRNA*, %struct.bGPdata*, [2 x float], %struct.ListBase, %struct.ListBase, i32, i32, i32, i32, i32, i16, i16, i32, i32, i16, i16, i32, %struct.rctf, %struct.ListBase, %struct.ListBase, %struct.bNodeInstanceHash*, %struct.bNodeInstanceKey, i32, %struct.bNodeTreeExec*, void (i8*, float)*, void (i8*, i8*)*, i32 (i8*)*, void (i8*)*, i8*, i8*, i8*, i8* }
%struct.bNodeTreeType = type opaque
%struct.rctf = type { float, float, float, float }
%struct.bNodeInstanceHash = type opaque
%struct.bNodeInstanceKey = type { i32 }
%struct.bNodeTreeExec = type opaque
%struct.Editing = type { %struct.ListBase*, %struct.ListBase, %struct.ListBase, %struct.Sequence*, [1024 x i8], [1024 x i8], i32, i32, i32, i32, %struct.rctf }
%struct.Sequence = type { %struct.Sequence*, %struct.Sequence*, i8*, i8*, [64 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, float, i16, i16, i32, i32, %struct.Strip*, %struct.Ipo*, %struct.Scene*, %struct.Object*, %struct.MovieClip*, %struct.Mask*, %struct.anim*, float, float, %struct.Sequence*, %struct.Sequence*, %struct.Sequence*, %struct.ListBase, %struct.bSound*, i8*, float, float, float, float, i8*, i32, i32, i32, float, i32, i8, [3 x i8], %struct.ListBase }
%struct.Strip = type { %struct.Strip*, %struct.Strip*, i32, i32, i32, i32, %struct.StripElem*, [768 x i8], %struct.StripProxy*, %struct.StripCrop*, %struct.StripTransform*, %struct.StripColorBalance*, %struct.ColorManagedColorspaceSettings }
%struct.StripElem = type { [256 x i8], i32, i32 }
%struct.StripProxy = type { [768 x i8], [256 x i8], %struct.anim*, i16, i16, i16, i16 }
%struct.StripCrop = type { i32, i32, i32, i32 }
%struct.StripTransform = type { i32, i32 }
%struct.StripColorBalance = type { [3 x float], [3 x float], [3 x float], i32, i32 }
%struct.Ipo = type opaque
%struct.Mask = type opaque
%struct.anim = type opaque
%struct.bSound = type opaque
%struct.ToolSettings = type { %struct.VPaint*, %struct.VPaint*, %struct.Sculpt*, %struct.UvSculpt*, float, float, float, i16, i16, i8, i8, i8, i8, float, i16, i8, [5 x i8], %struct.ImagePaintSettings, %struct.ParticleEditSettings, float, float, i16, i16, i8, [1 x i8], i16, float, float, float, float, float, float, float, float, float, float, i16, i8, i8, [3 x i8], i8, %struct.Object*, i8, i8, i8, i8, i8, [8 x i8], [8 x i8], i8, i8, i8, i8, i8, i16, i16, i16, i16, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i16, i16, i32, float, float, %struct.UnifiedPaintSettings, %struct.MeshStatVis }
%struct.VPaint = type { %struct.Paint, i16, i16, i32, i32*, %struct.MDeformVert*, i8* }
%struct.Paint = type { %struct.Brush*, %struct.Palette*, i8*, [4 x i8], i32, i32, i32 }
%struct.Brush = type opaque
%struct.Palette = type opaque
%struct.MDeformVert = type opaque
%struct.Sculpt = type { %struct.Paint, i32, [3 x i32], float, i32, float, float, %struct.Object*, i8* }
%struct.UvSculpt = type { %struct.Paint }
%struct.ImagePaintSettings = type { %struct.Paint, i16, i16, i16, i16, [2 x i16], i32, i8*, %struct.Image*, %struct.Image*, %struct.Image*, [3 x float], float }
%struct.Image = type { %struct.ID, [1024 x i8], %struct.MovieCache*, %struct.GPUTexture*, %struct.anim*, %struct.RenderResult*, [8 x %struct.RenderResult*], i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32*, %struct.PackedFile*, %struct.PreviewImage*, float, i32, i16, i16, i32, i32, i8, i8, i16, [4 x float], float, float, %struct.ColorManagedColorspaceSettings, i8, [7 x i8], [8 x %struct.RenderSlot] }
%struct.MovieCache = type opaque
%struct.GPUTexture = type opaque
%struct.RenderResult = type opaque
%struct.PreviewImage = type { [2 x i32], [2 x i32], [2 x i16], [2 x i16], [2 x i32*], [2 x %struct.GPUTexture*] }
%struct.RenderSlot = type { [64 x i8] }
%struct.ParticleEditSettings = type { i16, i16, i16, i16, [7 x %struct.ParticleBrushData], i8*, float, float, i32, i32, i32, i32, %struct.Scene*, %struct.Object* }
%struct.ParticleBrushData = type { i16, i16, i16, i16, i32, float }
%struct.UnifiedPaintSettings = type { i32, float, float, float, [3 x float], [3 x float], i32, [2 x float], float, i32, i32, i8, [7 x i8], float, [2 x float], i32, float, [2 x float], [2 x float], i32, %struct.ColorSpace*, float, i32 }
%struct.ColorSpace = type opaque
%struct.MeshStatVis = type { i8, [2 x i8], i8, float, float, float, float, i8, [3 x i8], float, float, float, float }
%struct.SceneStats = type opaque
%struct.RenderData = type { %struct.ImageFormatData, %struct.AviCodecData*, %struct.QuicktimeCodecData*, %struct.QuicktimeCodecSettings, %struct.FFMpegCodecData, i32, i32, i32, float, i32, i32, i32, i32, i16, i16, float, float, float, float, float, i16, i16, i16, i16, i16, i16, i32, i16, i16, i16, i16, i16, i16, i32, i32, i16, i16, i32, i32, i16, i16, i16, i16, i16, i8, i8, i32, i32, i32, i16, i16, i16, i16, i16, i16, i16, i16, %struct.rctf, %struct.rctf, %struct.rcti, %struct.ListBase, i16, i16, float, float, float, float, i32, float, float, float, float, i16, i16, i16, i16, i16, i16, float, float, i16, i16, float, float, [1024 x i8], i32, i16, i16, [768 x i8], [4 x float], [4 x float], i8, i8, i8, [5 x i8], i32, i16, i16, float, float, i16, i16, float, i16, i16, i32, i16, i16, i16, i16, float, float, %struct.Text*, i32, float, [32 x i8], %struct.BakeData, i32, i32 }
%struct.ImageFormatData = type { i8, i8, i8, i8, i8, i8, i8, i8, i16, i16, float, i8, i8, [6 x i8], %struct.ColorManagedViewSettings, %struct.ColorManagedDisplaySettings }
%struct.AviCodecData = type { i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [128 x i8] }
%struct.QuicktimeCodecData = type { i8*, i8*, i32, i32, [128 x i8] }
%struct.QuicktimeCodecSettings = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i16, i16, i32, i32, i32 }
%struct.FFMpegCodecData = type { i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, %struct.IDProperty* }
%struct.rcti = type { i32, i32, i32, i32 }
%struct.Text = type opaque
%struct.BakeData = type { %struct.ImageFormatData, [1024 x i8], i16, i16, i16, i16, float, float, [3 x i8], i8, i8, [3 x i8], [64 x i8] }
%struct.AudioData = type { i32, float, float, float, i32, i16, i16, float, float }
%struct.DagForest = type opaque
%struct.GameFraming = type { [3 x float], i8, i8, i8, i8 }
%struct.GameData = type { %struct.GameFraming, i16, i16, i16, i16, i16, i16, i16, i16, i16, [3 x i16], %struct.GameDome, i16, i16, float, %struct.RecastData, float, float, i32, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float, float, float, float, float }
%struct.GameDome = type { i16, i16, i16, i16, float, float, %struct.Text* }
%struct.RecastData = type { float, float, float, float, float, float, float, float, float, float, i32, float, float, i16, i16 }
%struct.UnitSettings = type { float, i8, i8, i16 }
%struct.bGPdata = type opaque
%struct.PhysicsSettings = type { [3 x float], i32, i32, i32 }
%struct.MovieClip = type { %struct.ID, %struct.AnimData*, [1024 x i8], i32, i32, [2 x i32], float, float, %struct.anim*, %struct.MovieClipCache*, %struct.bGPdata*, %struct.MovieTracking, i8*, %struct.MovieClipProxy, i32, i32, i32, i32, %struct.ColorManagedColorspaceSettings }
%struct.MovieClipCache = type opaque
%struct.MovieTracking = type { %struct.MovieTrackingSettings, %struct.MovieTrackingCamera, %struct.ListBase, %struct.ListBase, %struct.MovieTrackingReconstruction, %struct.MovieTrackingStabilization, %struct.MovieTrackingTrack*, %struct.MovieTrackingPlaneTrack*, %struct.ListBase, i32, i32, %struct.MovieTrackingStats*, %struct.MovieTrackingDopesheet }
%struct.MovieTrackingSettings = type { i32, i16, i16, float, i16, i16, i16, i16, i16, i16, float, i16, i16, i32, i32, i32, i16, i16, float, i32, i32, float, float, i32 }
%struct.MovieTrackingCamera = type { i8*, i16, i16, float, float, float, i16, i16, [2 x float], float, float, float, float, float }
%struct.MovieTrackingReconstruction = type { i32, float, i32, i32, %struct.MovieReconstructedCamera* }
%struct.MovieReconstructedCamera = type { i32, float, [4 x [4 x float]] }
%struct.MovieTrackingStabilization = type { i32, i32, i32, float, %struct.MovieTrackingTrack*, float, float, float, i32, i32, float }
%struct.MovieTrackingTrack = type { %struct.MovieTrackingTrack*, %struct.MovieTrackingTrack*, [64 x i8], [2 x float], [2 x float], [2 x float], [2 x float], [2 x float], i32, i32, %struct.MovieTrackingMarker*, [3 x float], float, i32, i32, i32, [3 x float], i16, i16, i16, i16, i32, float, %struct.bGPdata*, float, float }
%struct.MovieTrackingMarker = type { [2 x float], [4 x [2 x float]], [2 x float], [2 x float], i32, i32 }
%struct.MovieTrackingPlaneTrack = type { %struct.MovieTrackingPlaneTrack*, %struct.MovieTrackingPlaneTrack*, [64 x i8], %struct.MovieTrackingTrack**, i32, i32, %struct.MovieTrackingPlaneMarker*, i32, i32, %struct.Image*, float, i32 }
%struct.MovieTrackingPlaneMarker = type { [4 x [2 x float]], i32, i32 }
%struct.MovieTrackingStats = type { [256 x i8] }
%struct.MovieTrackingDopesheet = type { i32, i16, i16, %struct.ListBase, %struct.ListBase, i32, i32 }
%struct.MovieClipProxy = type { [768 x i8], i16, i16, i16, i16 }
%struct.ColorManagedViewSettings = type { i32, i32, [64 x i8], [64 x i8], float, float, %struct.CurveMapping*, i8* }
%struct.CurveMapping = type { i32, i32, i32, i32, %struct.rctf, %struct.rctf, [4 x %struct.CurveMap], [3 x float], [3 x float], [3 x float], [3 x float] }
%struct.CurveMap = type { i16, i16, float, float, float, [2 x float], [2 x float], %struct.CurveMapPoint*, %struct.CurveMapPoint*, %struct.CurveMapPoint*, [2 x float], [2 x float] }
%struct.CurveMapPoint = type { float, float, i16, i16 }
%struct.ColorManagedDisplaySettings = type { [64 x i8] }
%struct.ColorManagedColorspaceSettings = type { [64 x i8] }
%struct.RigidBodyWorld = type opaque
%struct.wmSubWindow = type opaque
%struct.wmGesture = type { %struct.wmGesture*, %struct.wmGesture*, i32, i32, i32, i32, i32, i32, i8*, i8* }
%struct.uiLayout = type opaque
%struct.GHOST_TabletData = type { i32, float, float, float }
%struct.GHOST_WindowHandle__ = type { i32 }
%struct.ARegion = type { %struct.ARegion*, %struct.ARegion*, %struct.View2D, %struct.rcti, %struct.rcti, i16, i16, i16, i16, i16, i16, float, i16, i16, i16, i16, i16, i16, i16, i16, %struct.ARegionType*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.wmTimer*, i8*, i8* }
%struct.View2D = type { %struct.rctf, %struct.rctf, %struct.rcti, %struct.rcti, %struct.rcti, [2 x float], [2 x float], float, float, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, float*, i32, i32, %struct.SmoothView2DStore*, %struct.wmTimer* }
%struct.SmoothView2DStore = type opaque
%struct.ARegionType = type { %struct.ARegionType*, %struct.ARegionType*, i32, void (%struct.wmWindowManager*, %struct.ARegion*)*, void (%struct.wmWindowManager*, %struct.ARegion*)*, void (%struct.bContext*, %struct.ARegion*)*, void (%struct.bScreen*, %struct.ScrArea*, %struct.ARegion*, %struct.wmNotifier*)*, void (%struct.ARegion*)*, i8* (i8*)*, void ()*, void (%struct.wmKeyConfig*)*, void (%struct.wmWindow*, %struct.ScrArea*, %struct.ARegion*)*, i32 (%struct.bContext*, i8*, %struct.bContextDataResult*)*, %struct.ListBase, %struct.ListBase, %struct.ListBase, i32, i32, i32, i32, i32, i16, i16, i16 }
%struct.wmWindowManager = type { %struct.ID, %struct.wmWindow*, %struct.wmWindow*, %struct.ListBase, i32, i16, i16, %struct.ListBase, %struct.ListBase, %struct.ReportList, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.wmKeyConfig*, %struct.wmKeyConfig*, %struct.wmKeyConfig*, %struct.ListBase, %struct.wmTimer*, i8, [7 x i8] }
%struct.wmKeyConfig = type { %struct.wmKeyConfig*, %struct.wmKeyConfig*, [64 x i8], [64 x i8], %struct.ListBase, i32, i32 }
%struct.ScrArea = type { %struct.ScrArea*, %struct.ScrArea*, %struct.ScrVert*, %struct.ScrVert*, %struct.ScrVert*, %struct.ScrVert*, %struct.bScreen*, %struct.rcti, i8, i8, i16, i16, i16, i16, i16, i16, i8, i8, %struct.SpaceType*, %struct.ListBase, %struct.ListBase, %struct.ListBase, %struct.ListBase }
%struct.ScrVert = type { %struct.ScrVert*, %struct.ScrVert*, %struct.ScrVert*, %struct.vec2s, i16, i16 }
%struct.vec2s = type { i16, i16 }
%struct.SpaceType = type { %struct.SpaceType*, %struct.SpaceType*, [64 x i8], i32, i32, %struct.SpaceLink* (%struct.bContext*)*, void (%struct.SpaceLink*)*, void (%struct.wmWindowManager*, %struct.ScrArea*)*, void (%struct.wmWindowManager*, %struct.ScrArea*)*, void (%struct.bScreen*, %struct.ScrArea*, %struct.wmNotifier*)*, void (%struct.bContext*, %struct.ScrArea*)*, %struct.SpaceLink* (%struct.SpaceLink*)*, void ()*, void (%struct.wmKeyConfig*)*, void ()*, i32 (%struct.bContext*, i8*, %struct.bContextDataResult*)*, %struct.ListBase, %struct.ListBase, i32 }
%struct.SpaceLink = type { %struct.SpaceLink*, %struct.SpaceLink*, %struct.ListBase, i32, float, [8 x i16] }
%struct.wmNotifier = type { %struct.wmNotifier*, %struct.wmNotifier*, %struct.wmWindowManager*, %struct.wmWindow*, i32, i32, i32, i32, i32, i8* }
%struct.bContextDataResult = type opaque
%struct.wmOperatorTypeMacro = type { %struct.wmOperatorTypeMacro*, %struct.wmOperatorTypeMacro*, [64 x i8], %struct.IDProperty*, %struct.PointerRNA* }
%struct.ReportTimerInfo = type { [3 x float], float, float }
%struct.DynStr = type opaque
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%union.IDPropertyTemplate = type { %struct.anon.0 }
%struct.anon.0 = type { i8*, i16, i8 }
%struct.CollectionPropertyIterator = type { %struct.PointerRNA, %struct.PointerRNA, %struct.PropertyRNA*, %union.anon, i32, i32, %struct.PointerRNA, i32 }
%union.anon = type { %struct.ArrayIterator }
%struct.ArrayIterator = type { i8*, i8*, i8*, i32, i32, i32 (%struct.CollectionPropertyIterator*, i8*)* }
%struct.wmEventHandler = type { %struct.wmEventHandler*, %struct.wmEventHandler*, i32, i32, %struct.wmKeyMap*, %struct.rcti*, %struct.rcti*, %struct.wmOperator*, %struct.ScrArea*, %struct.ARegion*, i32 (%struct.bContext*, %struct.wmEvent*, i8*)*, void (%struct.bContext*, i8*)*, i8*, %struct.ScrArea*, %struct.ARegion*, %struct.ARegion*, %struct.bScreen*, %struct.ListBase* }
%struct.wmPaintCursor = type { %struct.wmPaintCursor*, %struct.wmPaintCursor*, i8*, i32 (%struct.bContext*)*, void (%struct.bContext*, i32, i32, i8*)* }
%struct.SpaceFile = type { %struct.SpaceLink*, %struct.SpaceLink*, %struct.ListBase, i32, i32, %struct.FileSelectParams*, %struct.FileList*, %struct.ListBase*, %struct.ListBase*, %struct.wmOperator*, %struct.wmTimer*, %struct.FileLayout*, i16, i16, i16, i16 }
%struct.FileSelectParams = type { [96 x i8], [1056 x i8], [256 x i8], [256 x i8], [256 x i8], [64 x i8], i32, i32, i32, i16, i16, i16, i16, i16, i16, [8 x i8] }
%struct.FileList = type opaque
%struct.FileLayout = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [8 x float] }
%struct.GHOST_TEventCursorData = type { i32, i32 }
%struct.GHOST_TEventTrackpadData = type { i32, i32, i32, i32, i32 }
%struct.GHOST_TEventButtonData = type { i32 }
%struct.GHOST_TEventKeyData = type { i32, i8, [6 x i8] }
%struct.GHOST_TEventWheelData = type { i32 }
%struct.GHOST_TEventNDOFButtonData = type { i32, i16 }
%struct.GHOST_TEventNDOFMotionData = type { float, float, float, float, float, float, float, i32 }
%struct.wmNDOFMotionData = type { [3 x float], [3 x float], float, i32 }
%struct.wmKeyMapItem = type { %struct.wmKeyMapItem*, %struct.wmKeyMapItem*, [64 x i8], %struct.IDProperty*, [64 x i8], i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, i16, %struct.PointerRNA* }
%struct.wmDropBox = type { %struct.wmDropBox*, %struct.wmDropBox*, i32 (%struct.bContext*, %struct.wmDrag*, %struct.wmEvent*)*, void (%struct.wmDrag*, %struct.wmDropBox*)*, %struct.wmOperatorType*, %struct.IDProperty*, %struct.PointerRNA*, i16 }
%struct.wmDrag = type { %struct.wmDrag*, %struct.wmDrag*, i32, i32, i8*, [1024 x i8], double, %struct.ImBuf*, float, i32, i32, [200 x i8], i32 }
%struct.ImBuf = type opaque

@MEM_mallocN = external dso_local global i8* (i64, i8*)*, align 8
@.str = private unnamed_addr constant [8 x i8] c"wmEvent\00", align 1
@MEM_freeN = external dso_local global void (i8*)*, align 8
@MEM_callocN = external dso_local global i8* (i64, i8*)*, align 8
@.str.1 = private unnamed_addr constant [9 x i8] c"notifier\00", align 1
@G = external dso_local global %struct.Global, align 8
@.str.2 = private unnamed_addr constant [19 x i8] c"%s: screen set %p\0A\00", align 1
@__func__.wm_event_do_notifiers = private unnamed_addr constant [22 x i8] c"wm_event_do_notifiers\00", align 1
@.str.3 = private unnamed_addr constant [22 x i8] c"%s: screen delete %p\0A\00", align 1
@__const.WM_operator_last_properties_init.val = private unnamed_addr constant { i32, [12 x i8] } { i32 0, [12 x i8] undef }, align 8
@.str.4 = private unnamed_addr constant [21 x i8] c"wmOperatorProperties\00", align 1
@.str.5 = private unnamed_addr constant [42 x i8] c"%s: loading previous properties for '%s'\0A\00", align 1
@__func__.WM_operator_last_properties_init = private unnamed_addr constant [33 x i8] c"WM_operator_last_properties_init\00", align 1
@.str.6 = private unnamed_addr constant [33 x i8] c"%s: storing properties for '%s'\0A\00", align 1
@__func__.WM_operator_last_properties_store = private unnamed_addr constant [34 x i8] c"WM_operator_last_properties_store\00", align 1
@U = external dso_local global %struct.UserDef, align 8
@stderr = external dso_local global %struct._IO_FILE*, align 8
@.str.7 = private unnamed_addr constant [55 x i8] c"Entered region unintended for SPEC CPU purposes %s:%d\0A\00", align 1
@.str.8 = private unnamed_addr constant [62 x i8] c"blender/source/blender/windowmanager/intern/wm_event_system.c\00", align 1
@.str.9 = private unnamed_addr constant [14 x i8] c"GL error: %s\0A\00", align 1
@.str.10 = private unnamed_addr constant [19 x i8] c"fileselect handler\00", align 1
@.str.11 = private unnamed_addr constant [20 x i8] c"event modal handler\00", align 1
@.str.12 = private unnamed_addr constant [29 x i8] c"%s: called with NULL keymap\0A\00", align 1
@__func__.WM_event_add_keymap_handler = private unnamed_addr constant [28 x i8] c"WM_event_add_keymap_handler\00", align 1
@.str.13 = private unnamed_addr constant [21 x i8] c"event keymap handler\00", align 1
@.str.14 = private unnamed_addr constant [17 x i8] c"event ui handler\00", align 1
@.str.15 = private unnamed_addr constant [16 x i8] c"dropbox handler\00", align 1
@.str.16 = private unnamed_addr constant [22 x i8] c"%s Send double click\0A\00", align 1
@__func__.wm_event_add_ghostevent = private unnamed_addr constant [24 x i8] c"wm_event_add_ghostevent\00", align 1
@.str.17 = private unnamed_addr constant [67 x i8] c"%s: ghost on your platform is misbehaving, utf8 events on key up!\0A\00", align 1
@.str.18 = private unnamed_addr constant [55 x i8] c"%s: ghost detected an invalid unicode character '%d'!\0A\00", align 1
@.str.19 = private unnamed_addr constant [38 x i8] c"%s sending NDOF_MOTION, prev = %d %d\0A\00", align 1
@.str.20 = private unnamed_addr constant [16 x i8] c"ReportTimerInfo\00", align 1
@.str.21 = private unnamed_addr constant [28 x i8] c"Missing 'window' in context\00", align 1
@.str.22 = private unnamed_addr constant [32 x i8] c"%s: handle evt %d win %d op %s\0A\00", align 1
@__func__.wm_operator_invoke = private unnamed_addr constant [19 x i8] c"wm_operator_invoke\00", align 1
@.str.23 = private unnamed_addr constant [32 x i8] c"%s: invalid operator call '%s'\0A\00", align 1
@__const.wm_operator_invoke.bounds = private unnamed_addr constant [4 x i32] [i32 -1, i32 -1, i32 -1, i32 -1], align 16
@.str.24 = private unnamed_addr constant [17 x i8] c"wmOperatorPtrRNA\00", align 1
@__const.wm_operator_create.val = private unnamed_addr constant { i32, [12 x i8] } { i32 0, [12 x i8] undef }, align 8
@.str.25 = private unnamed_addr constant [21 x i8] c"wmOperatorReportList\00", align 1
@wm_operator_create.motherop = internal global %struct.wmOperator* null, align 8, !dbg !0
@.str.26 = private unnamed_addr constant [47 x i8] c"internal error: handler (%s) has invalid area\0A\00", align 1
@.str.27 = private unnamed_addr constant [20 x i8] c"%s: handling CLICK\0A\00", align 1
@__func__.wm_handlers_do = private unnamed_addr constant [15 x i8] c"wm_handlers_do\00", align 1
@.str.28 = private unnamed_addr constant [25 x i8] c"%s:       handled! '%s'\0A\00", align 1
@__func__.wm_handlers_do_intern = private unnamed_addr constant [22 x i8] c"wm_handlers_do_intern\00", align 1
@.str.29 = private unnamed_addr constant [39 x i8] c"%s:       handled - and pass on! '%s'\0A\00", align 1
@.str.30 = private unnamed_addr constant [30 x i8] c"%s: error '%s' missing modal\0A\00", align 1
@__func__.wm_handler_operator_call = private unnamed_addr constant [25 x i8] c"wm_handler_operator_call\00", align 1
@wm_handler_ui_call.do_wheel_ui = internal global i8 1, align 1, !dbg !2397
@.str.31 = private unnamed_addr constant [18 x i8] c"customdata tablet\00", align 1
@wm_eventemulation.mmb_emulated = internal global i32 0, align 4, !dbg !2555
@.str.32 = private unnamed_addr constant [16 x i8] c"customdata NDOF\00", align 1

; Function Attrs: noinline nounwind uwtable
define dso_local void @wm_event_add(%struct.wmWindow* %win, %struct.wmEvent* %event_to_add) #0 !dbg !2564 {
entry:
  %win.addr = alloca %struct.wmWindow*, align 8
  %event_to_add.addr = alloca %struct.wmEvent*, align 8
  %event = alloca %struct.wmEvent*, align 8
  store %struct.wmWindow* %win, %struct.wmWindow** %win.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmWindow** %win.addr, metadata !2571, metadata !DIExpression()), !dbg !2572
  store %struct.wmEvent* %event_to_add, %struct.wmEvent** %event_to_add.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event_to_add.addr, metadata !2573, metadata !DIExpression()), !dbg !2574
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event, metadata !2575, metadata !DIExpression()), !dbg !2576
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !2577
  %call = call i8* %0(i64 120, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0)), !dbg !2577
  %1 = bitcast i8* %call to %struct.wmEvent*, !dbg !2577
  store %struct.wmEvent* %1, %struct.wmEvent** %event, align 8, !dbg !2576
  %2 = load %struct.wmEvent*, %struct.wmEvent** %event, align 8, !dbg !2578
  %3 = load %struct.wmEvent*, %struct.wmEvent** %event_to_add.addr, align 8, !dbg !2579
  %4 = bitcast %struct.wmEvent* %2 to i8*, !dbg !2580
  %5 = bitcast %struct.wmEvent* %3 to i8*, !dbg !2580
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 120, i1 false), !dbg !2580
  %6 = load %struct.wmWindow*, %struct.wmWindow** %win.addr, align 8, !dbg !2581
  %7 = load %struct.wmEvent*, %struct.wmEvent** %event, align 8, !dbg !2582
  call void @update_tablet_data(%struct.wmWindow* %6, %struct.wmEvent* %7), !dbg !2583
  %8 = load %struct.wmWindow*, %struct.wmWindow** %win.addr, align 8, !dbg !2584
  %queue = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %8, i32 0, i32 27, !dbg !2585
  %9 = load %struct.wmEvent*, %struct.wmEvent** %event, align 8, !dbg !2586
  %10 = bitcast %struct.wmEvent* %9 to i8*, !dbg !2586
  call void @BLI_addtail(%struct.ListBase* %queue, i8* %10), !dbg !2587
  ret void, !dbg !2588
}

; Function Attrs: nounwind readnone speculatable willreturn
declare void @llvm.dbg.declare(metadata, metadata, metadata) #1

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* noalias nocapture writeonly, i8* noalias nocapture readonly, i64, i1 immarg) #2

; Function Attrs: noinline nounwind uwtable
define internal void @update_tablet_data(%struct.wmWindow* %win, %struct.wmEvent* %event) #0 !dbg !2589 {
entry:
  %win.addr = alloca %struct.wmWindow*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %td = alloca %struct.GHOST_TabletData*, align 8
  %wmtab = alloca %struct.wmTabletData*, align 8
  store %struct.wmWindow* %win, %struct.wmWindow** %win.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmWindow** %win.addr, metadata !2592, metadata !DIExpression()), !dbg !2593
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !2594, metadata !DIExpression()), !dbg !2595
  call void @llvm.dbg.declare(metadata %struct.GHOST_TabletData** %td, metadata !2596, metadata !DIExpression()), !dbg !2607
  %0 = load %struct.wmWindow*, %struct.wmWindow** %win.addr, align 8, !dbg !2608
  %ghostwin = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %0, i32 0, i32 2, !dbg !2609
  %1 = load i8*, i8** %ghostwin, align 8, !dbg !2609
  %2 = bitcast i8* %1 to %struct.GHOST_WindowHandle__*, !dbg !2608
  %call = call %struct.GHOST_TabletData* @GHOST_GetTabletData(%struct.GHOST_WindowHandle__* %2), !dbg !2610
  store %struct.GHOST_TabletData* %call, %struct.GHOST_TabletData** %td, align 8, !dbg !2607
  %3 = load %struct.GHOST_TabletData*, %struct.GHOST_TabletData** %td, align 8, !dbg !2611
  %cmp = icmp ne %struct.GHOST_TabletData* %3, null, !dbg !2613
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !2614

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.GHOST_TabletData*, %struct.GHOST_TabletData** %td, align 8, !dbg !2615
  %Active = getelementptr inbounds %struct.GHOST_TabletData, %struct.GHOST_TabletData* %4, i32 0, i32 0, !dbg !2616
  %5 = load i32, i32* %Active, align 4, !dbg !2616
  %cmp1 = icmp ne i32 %5, 0, !dbg !2617
  br i1 %cmp1, label %if.then, label %if.else, !dbg !2618

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.wmTabletData** %wmtab, metadata !2619, metadata !DIExpression()), !dbg !2621
  %6 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !2622
  %call2 = call i8* %6(i64 16, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.31, i64 0, i64 0)), !dbg !2622
  %7 = bitcast i8* %call2 to %struct.wmTabletData*, !dbg !2622
  store %struct.wmTabletData* %7, %struct.wmTabletData** %wmtab, align 8, !dbg !2621
  %8 = load %struct.GHOST_TabletData*, %struct.GHOST_TabletData** %td, align 8, !dbg !2623
  %Active3 = getelementptr inbounds %struct.GHOST_TabletData, %struct.GHOST_TabletData* %8, i32 0, i32 0, !dbg !2624
  %9 = load i32, i32* %Active3, align 4, !dbg !2624
  %10 = load %struct.wmTabletData*, %struct.wmTabletData** %wmtab, align 8, !dbg !2625
  %Active4 = getelementptr inbounds %struct.wmTabletData, %struct.wmTabletData* %10, i32 0, i32 0, !dbg !2626
  store i32 %9, i32* %Active4, align 4, !dbg !2627
  %11 = load %struct.GHOST_TabletData*, %struct.GHOST_TabletData** %td, align 8, !dbg !2628
  %Pressure = getelementptr inbounds %struct.GHOST_TabletData, %struct.GHOST_TabletData* %11, i32 0, i32 1, !dbg !2629
  %12 = load float, float* %Pressure, align 4, !dbg !2629
  %13 = load %struct.wmTabletData*, %struct.wmTabletData** %wmtab, align 8, !dbg !2630
  %Pressure5 = getelementptr inbounds %struct.wmTabletData, %struct.wmTabletData* %13, i32 0, i32 1, !dbg !2631
  store float %12, float* %Pressure5, align 4, !dbg !2632
  %14 = load %struct.GHOST_TabletData*, %struct.GHOST_TabletData** %td, align 8, !dbg !2633
  %Xtilt = getelementptr inbounds %struct.GHOST_TabletData, %struct.GHOST_TabletData* %14, i32 0, i32 2, !dbg !2634
  %15 = load float, float* %Xtilt, align 4, !dbg !2634
  %16 = load %struct.wmTabletData*, %struct.wmTabletData** %wmtab, align 8, !dbg !2635
  %Xtilt6 = getelementptr inbounds %struct.wmTabletData, %struct.wmTabletData* %16, i32 0, i32 2, !dbg !2636
  store float %15, float* %Xtilt6, align 4, !dbg !2637
  %17 = load %struct.GHOST_TabletData*, %struct.GHOST_TabletData** %td, align 8, !dbg !2638
  %Ytilt = getelementptr inbounds %struct.GHOST_TabletData, %struct.GHOST_TabletData* %17, i32 0, i32 3, !dbg !2639
  %18 = load float, float* %Ytilt, align 4, !dbg !2639
  %19 = load %struct.wmTabletData*, %struct.wmTabletData** %wmtab, align 8, !dbg !2640
  %Ytilt7 = getelementptr inbounds %struct.wmTabletData, %struct.wmTabletData* %19, i32 0, i32 3, !dbg !2641
  store float %18, float* %Ytilt7, align 4, !dbg !2642
  %20 = load %struct.wmTabletData*, %struct.wmTabletData** %wmtab, align 8, !dbg !2643
  %21 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !2644
  %tablet_data = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %21, i32 0, i32 24, !dbg !2645
  store %struct.wmTabletData* %20, %struct.wmTabletData** %tablet_data, align 8, !dbg !2646
  br label %if.end, !dbg !2647

if.else:                                          ; preds = %land.lhs.true, %entry
  %22 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !2648
  %tablet_data8 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %22, i32 0, i32 24, !dbg !2650
  store %struct.wmTabletData* null, %struct.wmTabletData** %tablet_data8, align 8, !dbg !2651
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !2652
}

declare dso_local void @BLI_addtail(%struct.ListBase*, i8*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @wm_event_free(%struct.wmEvent* %event) #0 !dbg !2653 {
entry:
  %event.addr = alloca %struct.wmEvent*, align 8
  %lb = alloca %struct.ListBase*, align 8
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !2654, metadata !DIExpression()), !dbg !2655
  %0 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !2656
  %customdata = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %0, i32 0, i32 28, !dbg !2658
  %1 = load i8*, i8** %customdata, align 8, !dbg !2658
  %tobool = icmp ne i8* %1, null, !dbg !2656
  br i1 %tobool, label %if.then, label %if.end8, !dbg !2659

if.then:                                          ; preds = %entry
  %2 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !2660
  %customdatafree = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %2, i32 0, i32 26, !dbg !2663
  %3 = load i16, i16* %customdatafree, align 2, !dbg !2663
  %tobool1 = icmp ne i16 %3, 0, !dbg !2660
  br i1 %tobool1, label %if.then2, label %if.end7, !dbg !2664

if.then2:                                         ; preds = %if.then
  %4 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !2665
  %custom = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %4, i32 0, i32 25, !dbg !2668
  %5 = load i16, i16* %custom, align 8, !dbg !2668
  %conv = sext i16 %5 to i32, !dbg !2665
  %cmp = icmp eq i32 %conv, 3, !dbg !2669
  br i1 %cmp, label %if.then4, label %if.else, !dbg !2670

if.then4:                                         ; preds = %if.then2
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb, metadata !2671, metadata !DIExpression()), !dbg !2673
  %6 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !2674
  %customdata5 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %6, i32 0, i32 28, !dbg !2675
  %7 = load i8*, i8** %customdata5, align 8, !dbg !2675
  %8 = bitcast i8* %7 to %struct.ListBase*, !dbg !2674
  store %struct.ListBase* %8, %struct.ListBase** %lb, align 8, !dbg !2673
  %9 = load %struct.ListBase*, %struct.ListBase** %lb, align 8, !dbg !2676
  call void @WM_drag_free_list(%struct.ListBase* %9), !dbg !2677
  br label %if.end, !dbg !2678

if.else:                                          ; preds = %if.then2
  %10 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !2679
  %11 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !2681
  %customdata6 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %11, i32 0, i32 28, !dbg !2682
  %12 = load i8*, i8** %customdata6, align 8, !dbg !2682
  call void %10(i8* %12), !dbg !2679
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then4
  br label %if.end7, !dbg !2683

if.end7:                                          ; preds = %if.end, %if.then
  br label %if.end8, !dbg !2684

if.end8:                                          ; preds = %if.end7, %entry
  %13 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !2685
  %tablet_data = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %13, i32 0, i32 24, !dbg !2687
  %14 = load %struct.wmTabletData*, %struct.wmTabletData** %tablet_data, align 8, !dbg !2687
  %tobool9 = icmp ne %struct.wmTabletData* %14, null, !dbg !2685
  br i1 %tobool9, label %if.then10, label %if.end12, !dbg !2688

if.then10:                                        ; preds = %if.end8
  %15 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !2689
  %16 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !2691
  %tablet_data11 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %16, i32 0, i32 24, !dbg !2692
  %17 = load %struct.wmTabletData*, %struct.wmTabletData** %tablet_data11, align 8, !dbg !2692
  %18 = bitcast %struct.wmTabletData* %17 to i8*, !dbg !2691
  call void %15(i8* %18), !dbg !2689
  br label %if.end12, !dbg !2693

if.end12:                                         ; preds = %if.then10, %if.end8
  %19 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !2694
  %20 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !2695
  %21 = bitcast %struct.wmEvent* %20 to i8*, !dbg !2695
  call void %19(i8* %21), !dbg !2694
  ret void, !dbg !2696
}

declare dso_local void @WM_drag_free_list(%struct.ListBase*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @wm_event_free_all(%struct.wmWindow* %win) #0 !dbg !2697 {
entry:
  %win.addr = alloca %struct.wmWindow*, align 8
  %event = alloca %struct.wmEvent*, align 8
  store %struct.wmWindow* %win, %struct.wmWindow** %win.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmWindow** %win.addr, metadata !2700, metadata !DIExpression()), !dbg !2701
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event, metadata !2702, metadata !DIExpression()), !dbg !2703
  br label %while.cond, !dbg !2704

while.cond:                                       ; preds = %while.body, %entry
  %0 = load %struct.wmWindow*, %struct.wmWindow** %win.addr, align 8, !dbg !2705
  %queue = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %0, i32 0, i32 27, !dbg !2706
  %call = call i8* @BLI_pophead(%struct.ListBase* %queue), !dbg !2707
  %1 = bitcast i8* %call to %struct.wmEvent*, !dbg !2707
  store %struct.wmEvent* %1, %struct.wmEvent** %event, align 8, !dbg !2708
  %tobool = icmp ne %struct.wmEvent* %1, null, !dbg !2704
  br i1 %tobool, label %while.body, label %while.end, !dbg !2704

while.body:                                       ; preds = %while.cond
  %2 = load %struct.wmEvent*, %struct.wmEvent** %event, align 8, !dbg !2709
  call void @wm_event_free(%struct.wmEvent* %2), !dbg !2711
  br label %while.cond, !dbg !2704, !llvm.loop !2712

while.end:                                        ; preds = %while.cond
  ret void, !dbg !2714
}

declare dso_local i8* @BLI_pophead(%struct.ListBase*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @wm_event_init_from_window(%struct.wmWindow* %win, %struct.wmEvent* %event) #0 !dbg !2715 {
entry:
  %win.addr = alloca %struct.wmWindow*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  store %struct.wmWindow* %win, %struct.wmWindow** %win.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmWindow** %win.addr, metadata !2716, metadata !DIExpression()), !dbg !2717
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !2718, metadata !DIExpression()), !dbg !2719
  %0 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !2720
  %1 = load %struct.wmWindow*, %struct.wmWindow** %win.addr, align 8, !dbg !2721
  %eventstate = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %1, i32 0, i32 21, !dbg !2722
  %2 = load %struct.wmEvent*, %struct.wmEvent** %eventstate, align 8, !dbg !2722
  %3 = bitcast %struct.wmEvent* %0 to i8*, !dbg !2723
  %4 = bitcast %struct.wmEvent* %2 to i8*, !dbg !2723
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 120, i1 false), !dbg !2723
  ret void, !dbg !2724
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @WM_event_add_notifier(%struct.bContext* %C, i32 %type, i8* %reference) #0 !dbg !2725 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %type.addr = alloca i32, align 4
  %reference.addr = alloca i8*, align 8
  %ar = alloca %struct.ARegion*, align 8
  %wm = alloca %struct.wmWindowManager*, align 8
  %note = alloca %struct.wmNotifier*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !2730, metadata !DIExpression()), !dbg !2731
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !2732, metadata !DIExpression()), !dbg !2733
  store i8* %reference, i8** %reference.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %reference.addr, metadata !2734, metadata !DIExpression()), !dbg !2735
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar, metadata !2736, metadata !DIExpression()), !dbg !2739
  call void @llvm.dbg.declare(metadata %struct.wmWindowManager** %wm, metadata !2740, metadata !DIExpression()), !dbg !2741
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !2742
  %call = call %struct.wmWindowManager* @CTX_wm_manager(%struct.bContext* %0), !dbg !2743
  store %struct.wmWindowManager* %call, %struct.wmWindowManager** %wm, align 8, !dbg !2741
  call void @llvm.dbg.declare(metadata %struct.wmNotifier** %note, metadata !2744, metadata !DIExpression()), !dbg !2747
  %1 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !2748
  %2 = load i32, i32* %type.addr, align 4, !dbg !2750
  %3 = load i8*, i8** %reference.addr, align 8, !dbg !2751
  %call1 = call zeroext i8 @wm_test_duplicate_notifier(%struct.wmWindowManager* %1, i32 %2, i8* %3), !dbg !2752
  %tobool = icmp ne i8 %call1, 0, !dbg !2752
  br i1 %tobool, label %if.then, label %if.end, !dbg !2753

if.then:                                          ; preds = %entry
  br label %return, !dbg !2754

if.end:                                           ; preds = %entry
  %4 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !2755
  %call2 = call i8* %4(i64 64, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0)), !dbg !2755
  %5 = bitcast i8* %call2 to %struct.wmNotifier*, !dbg !2755
  store %struct.wmNotifier* %5, %struct.wmNotifier** %note, align 8, !dbg !2756
  %6 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !2757
  %7 = load %struct.wmNotifier*, %struct.wmNotifier** %note, align 8, !dbg !2758
  %wm3 = getelementptr inbounds %struct.wmNotifier, %struct.wmNotifier* %7, i32 0, i32 2, !dbg !2759
  store %struct.wmWindowManager* %6, %struct.wmWindowManager** %wm3, align 8, !dbg !2760
  %8 = load %struct.wmNotifier*, %struct.wmNotifier** %note, align 8, !dbg !2761
  %wm4 = getelementptr inbounds %struct.wmNotifier, %struct.wmNotifier* %8, i32 0, i32 2, !dbg !2762
  %9 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm4, align 8, !dbg !2762
  %queue = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %9, i32 0, i32 8, !dbg !2763
  %10 = load %struct.wmNotifier*, %struct.wmNotifier** %note, align 8, !dbg !2764
  %11 = bitcast %struct.wmNotifier* %10 to i8*, !dbg !2764
  call void @BLI_addtail(%struct.ListBase* %queue, i8* %11), !dbg !2765
  %12 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !2766
  %call5 = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %12), !dbg !2767
  %13 = load %struct.wmNotifier*, %struct.wmNotifier** %note, align 8, !dbg !2768
  %window = getelementptr inbounds %struct.wmNotifier, %struct.wmNotifier* %13, i32 0, i32 3, !dbg !2769
  store %struct.wmWindow* %call5, %struct.wmWindow** %window, align 8, !dbg !2770
  %14 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !2771
  %call6 = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %14), !dbg !2772
  store %struct.ARegion* %call6, %struct.ARegion** %ar, align 8, !dbg !2773
  %15 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !2774
  %tobool7 = icmp ne %struct.ARegion* %15, null, !dbg !2774
  br i1 %tobool7, label %if.then8, label %if.end10, !dbg !2776

if.then8:                                         ; preds = %if.end
  %16 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !2777
  %swinid = getelementptr inbounds %struct.ARegion, %struct.ARegion* %16, i32 0, i32 7, !dbg !2778
  %17 = load i16, i16* %swinid, align 4, !dbg !2778
  %conv = sext i16 %17 to i32, !dbg !2777
  %18 = load %struct.wmNotifier*, %struct.wmNotifier** %note, align 8, !dbg !2779
  %swinid9 = getelementptr inbounds %struct.wmNotifier, %struct.wmNotifier* %18, i32 0, i32 4, !dbg !2780
  store i32 %conv, i32* %swinid9, align 8, !dbg !2781
  br label %if.end10, !dbg !2779

if.end10:                                         ; preds = %if.then8, %if.end
  %19 = load i32, i32* %type.addr, align 4, !dbg !2782
  %and = and i32 %19, -16777216, !dbg !2783
  %20 = load %struct.wmNotifier*, %struct.wmNotifier** %note, align 8, !dbg !2784
  %category = getelementptr inbounds %struct.wmNotifier, %struct.wmNotifier* %20, i32 0, i32 5, !dbg !2785
  store i32 %and, i32* %category, align 4, !dbg !2786
  %21 = load i32, i32* %type.addr, align 4, !dbg !2787
  %and11 = and i32 %21, 16711680, !dbg !2788
  %22 = load %struct.wmNotifier*, %struct.wmNotifier** %note, align 8, !dbg !2789
  %data = getelementptr inbounds %struct.wmNotifier, %struct.wmNotifier* %22, i32 0, i32 6, !dbg !2790
  store i32 %and11, i32* %data, align 8, !dbg !2791
  %23 = load i32, i32* %type.addr, align 4, !dbg !2792
  %and12 = and i32 %23, 65280, !dbg !2793
  %24 = load %struct.wmNotifier*, %struct.wmNotifier** %note, align 8, !dbg !2794
  %subtype = getelementptr inbounds %struct.wmNotifier, %struct.wmNotifier* %24, i32 0, i32 7, !dbg !2795
  store i32 %and12, i32* %subtype, align 4, !dbg !2796
  %25 = load i32, i32* %type.addr, align 4, !dbg !2797
  %and13 = and i32 %25, 255, !dbg !2798
  %26 = load %struct.wmNotifier*, %struct.wmNotifier** %note, align 8, !dbg !2799
  %action = getelementptr inbounds %struct.wmNotifier, %struct.wmNotifier* %26, i32 0, i32 8, !dbg !2800
  store i32 %and13, i32* %action, align 8, !dbg !2801
  %27 = load i8*, i8** %reference.addr, align 8, !dbg !2802
  %28 = load %struct.wmNotifier*, %struct.wmNotifier** %note, align 8, !dbg !2803
  %reference14 = getelementptr inbounds %struct.wmNotifier, %struct.wmNotifier* %28, i32 0, i32 9, !dbg !2804
  store i8* %27, i8** %reference14, align 8, !dbg !2805
  br label %return, !dbg !2806

return:                                           ; preds = %if.end10, %if.then
  ret void, !dbg !2806
}

declare dso_local %struct.wmWindowManager* @CTX_wm_manager(%struct.bContext*) #3

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @wm_test_duplicate_notifier(%struct.wmWindowManager* %wm, i32 %type, i8* %reference) #0 !dbg !2807 {
entry:
  %retval = alloca i8, align 1
  %wm.addr = alloca %struct.wmWindowManager*, align 8
  %type.addr = alloca i32, align 4
  %reference.addr = alloca i8*, align 8
  %note = alloca %struct.wmNotifier*, align 8
  store %struct.wmWindowManager* %wm, %struct.wmWindowManager** %wm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmWindowManager** %wm.addr, metadata !2810, metadata !DIExpression()), !dbg !2811
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !2812, metadata !DIExpression()), !dbg !2813
  store i8* %reference, i8** %reference.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %reference.addr, metadata !2814, metadata !DIExpression()), !dbg !2815
  call void @llvm.dbg.declare(metadata %struct.wmNotifier** %note, metadata !2816, metadata !DIExpression()), !dbg !2817
  %0 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm.addr, align 8, !dbg !2818
  %queue = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %0, i32 0, i32 8, !dbg !2820
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %queue, i32 0, i32 0, !dbg !2821
  %1 = load i8*, i8** %first, align 8, !dbg !2821
  %2 = bitcast i8* %1 to %struct.wmNotifier*, !dbg !2818
  store %struct.wmNotifier* %2, %struct.wmNotifier** %note, align 8, !dbg !2822
  br label %for.cond, !dbg !2823

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.wmNotifier*, %struct.wmNotifier** %note, align 8, !dbg !2824
  %tobool = icmp ne %struct.wmNotifier* %3, null, !dbg !2826
  br i1 %tobool, label %for.body, label %for.end, !dbg !2826

for.body:                                         ; preds = %for.cond
  %4 = load %struct.wmNotifier*, %struct.wmNotifier** %note, align 8, !dbg !2827
  %category = getelementptr inbounds %struct.wmNotifier, %struct.wmNotifier* %4, i32 0, i32 5, !dbg !2829
  %5 = load i32, i32* %category, align 4, !dbg !2829
  %6 = load %struct.wmNotifier*, %struct.wmNotifier** %note, align 8, !dbg !2830
  %data = getelementptr inbounds %struct.wmNotifier, %struct.wmNotifier* %6, i32 0, i32 6, !dbg !2831
  %7 = load i32, i32* %data, align 8, !dbg !2831
  %or = or i32 %5, %7, !dbg !2832
  %8 = load %struct.wmNotifier*, %struct.wmNotifier** %note, align 8, !dbg !2833
  %subtype = getelementptr inbounds %struct.wmNotifier, %struct.wmNotifier* %8, i32 0, i32 7, !dbg !2834
  %9 = load i32, i32* %subtype, align 4, !dbg !2834
  %or1 = or i32 %or, %9, !dbg !2835
  %10 = load %struct.wmNotifier*, %struct.wmNotifier** %note, align 8, !dbg !2836
  %action = getelementptr inbounds %struct.wmNotifier, %struct.wmNotifier* %10, i32 0, i32 8, !dbg !2837
  %11 = load i32, i32* %action, align 8, !dbg !2837
  %or2 = or i32 %or1, %11, !dbg !2838
  %12 = load i32, i32* %type.addr, align 4, !dbg !2839
  %cmp = icmp eq i32 %or2, %12, !dbg !2840
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !2841

land.lhs.true:                                    ; preds = %for.body
  %13 = load %struct.wmNotifier*, %struct.wmNotifier** %note, align 8, !dbg !2842
  %reference3 = getelementptr inbounds %struct.wmNotifier, %struct.wmNotifier* %13, i32 0, i32 9, !dbg !2843
  %14 = load i8*, i8** %reference3, align 8, !dbg !2843
  %15 = load i8*, i8** %reference.addr, align 8, !dbg !2844
  %cmp4 = icmp eq i8* %14, %15, !dbg !2845
  br i1 %cmp4, label %if.then, label %if.end, !dbg !2846

if.then:                                          ; preds = %land.lhs.true
  store i8 1, i8* %retval, align 1, !dbg !2847
  br label %return, !dbg !2847

if.end:                                           ; preds = %land.lhs.true, %for.body
  br label %for.inc, !dbg !2844

for.inc:                                          ; preds = %if.end
  %16 = load %struct.wmNotifier*, %struct.wmNotifier** %note, align 8, !dbg !2848
  %next = getelementptr inbounds %struct.wmNotifier, %struct.wmNotifier* %16, i32 0, i32 0, !dbg !2849
  %17 = load %struct.wmNotifier*, %struct.wmNotifier** %next, align 8, !dbg !2849
  store %struct.wmNotifier* %17, %struct.wmNotifier** %note, align 8, !dbg !2850
  br label %for.cond, !dbg !2851, !llvm.loop !2852

for.end:                                          ; preds = %for.cond
  store i8 0, i8* %retval, align 1, !dbg !2854
  br label %return, !dbg !2854

return:                                           ; preds = %for.end, %if.then
  %18 = load i8, i8* %retval, align 1, !dbg !2855
  ret i8 %18, !dbg !2855
}

declare dso_local %struct.wmWindow* @CTX_wm_window(%struct.bContext*) #3

declare dso_local %struct.ARegion* @CTX_wm_region(%struct.bContext*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @WM_main_add_notifier(i32 %type, i8* %reference) #0 !dbg !2856 {
entry:
  %type.addr = alloca i32, align 4
  %reference.addr = alloca i8*, align 8
  %bmain = alloca %struct.Main*, align 8
  %wm = alloca %struct.wmWindowManager*, align 8
  %note = alloca %struct.wmNotifier*, align 8
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !2859, metadata !DIExpression()), !dbg !2860
  store i8* %reference, i8** %reference.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %reference.addr, metadata !2861, metadata !DIExpression()), !dbg !2862
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain, metadata !2863, metadata !DIExpression()), !dbg !2925
  %0 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !2926
  store %struct.Main* %0, %struct.Main** %bmain, align 8, !dbg !2925
  call void @llvm.dbg.declare(metadata %struct.wmWindowManager** %wm, metadata !2927, metadata !DIExpression()), !dbg !2928
  %1 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !2929
  %wm1 = getelementptr inbounds %struct.Main, %struct.Main* %1, i32 0, i32 40, !dbg !2930
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %wm1, i32 0, i32 0, !dbg !2931
  %2 = load i8*, i8** %first, align 8, !dbg !2931
  %3 = bitcast i8* %2 to %struct.wmWindowManager*, !dbg !2929
  store %struct.wmWindowManager* %3, %struct.wmWindowManager** %wm, align 8, !dbg !2928
  call void @llvm.dbg.declare(metadata %struct.wmNotifier** %note, metadata !2932, metadata !DIExpression()), !dbg !2933
  %4 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !2934
  %tobool = icmp ne %struct.wmWindowManager* %4, null, !dbg !2934
  br i1 %tobool, label %lor.lhs.false, label %if.then, !dbg !2936

lor.lhs.false:                                    ; preds = %entry
  %5 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !2937
  %6 = load i32, i32* %type.addr, align 4, !dbg !2938
  %7 = load i8*, i8** %reference.addr, align 8, !dbg !2939
  %call = call zeroext i8 @wm_test_duplicate_notifier(%struct.wmWindowManager* %5, i32 %6, i8* %7), !dbg !2940
  %conv = zext i8 %call to i32, !dbg !2940
  %tobool2 = icmp ne i32 %conv, 0, !dbg !2940
  br i1 %tobool2, label %if.then, label %if.end, !dbg !2941

if.then:                                          ; preds = %lor.lhs.false, %entry
  br label %return, !dbg !2942

if.end:                                           ; preds = %lor.lhs.false
  %8 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !2943
  %call3 = call i8* %8(i64 64, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0)), !dbg !2943
  %9 = bitcast i8* %call3 to %struct.wmNotifier*, !dbg !2943
  store %struct.wmNotifier* %9, %struct.wmNotifier** %note, align 8, !dbg !2944
  %10 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !2945
  %11 = load %struct.wmNotifier*, %struct.wmNotifier** %note, align 8, !dbg !2946
  %wm4 = getelementptr inbounds %struct.wmNotifier, %struct.wmNotifier* %11, i32 0, i32 2, !dbg !2947
  store %struct.wmWindowManager* %10, %struct.wmWindowManager** %wm4, align 8, !dbg !2948
  %12 = load %struct.wmNotifier*, %struct.wmNotifier** %note, align 8, !dbg !2949
  %wm5 = getelementptr inbounds %struct.wmNotifier, %struct.wmNotifier* %12, i32 0, i32 2, !dbg !2950
  %13 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm5, align 8, !dbg !2950
  %queue = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %13, i32 0, i32 8, !dbg !2951
  %14 = load %struct.wmNotifier*, %struct.wmNotifier** %note, align 8, !dbg !2952
  %15 = bitcast %struct.wmNotifier* %14 to i8*, !dbg !2952
  call void @BLI_addtail(%struct.ListBase* %queue, i8* %15), !dbg !2953
  %16 = load i32, i32* %type.addr, align 4, !dbg !2954
  %and = and i32 %16, -16777216, !dbg !2955
  %17 = load %struct.wmNotifier*, %struct.wmNotifier** %note, align 8, !dbg !2956
  %category = getelementptr inbounds %struct.wmNotifier, %struct.wmNotifier* %17, i32 0, i32 5, !dbg !2957
  store i32 %and, i32* %category, align 4, !dbg !2958
  %18 = load i32, i32* %type.addr, align 4, !dbg !2959
  %and6 = and i32 %18, 16711680, !dbg !2960
  %19 = load %struct.wmNotifier*, %struct.wmNotifier** %note, align 8, !dbg !2961
  %data = getelementptr inbounds %struct.wmNotifier, %struct.wmNotifier* %19, i32 0, i32 6, !dbg !2962
  store i32 %and6, i32* %data, align 8, !dbg !2963
  %20 = load i32, i32* %type.addr, align 4, !dbg !2964
  %and7 = and i32 %20, 65280, !dbg !2965
  %21 = load %struct.wmNotifier*, %struct.wmNotifier** %note, align 8, !dbg !2966
  %subtype = getelementptr inbounds %struct.wmNotifier, %struct.wmNotifier* %21, i32 0, i32 7, !dbg !2967
  store i32 %and7, i32* %subtype, align 4, !dbg !2968
  %22 = load i32, i32* %type.addr, align 4, !dbg !2969
  %and8 = and i32 %22, 255, !dbg !2970
  %23 = load %struct.wmNotifier*, %struct.wmNotifier** %note, align 8, !dbg !2971
  %action = getelementptr inbounds %struct.wmNotifier, %struct.wmNotifier* %23, i32 0, i32 8, !dbg !2972
  store i32 %and8, i32* %action, align 8, !dbg !2973
  %24 = load i8*, i8** %reference.addr, align 8, !dbg !2974
  %25 = load %struct.wmNotifier*, %struct.wmNotifier** %note, align 8, !dbg !2975
  %reference9 = getelementptr inbounds %struct.wmNotifier, %struct.wmNotifier* %25, i32 0, i32 9, !dbg !2976
  store i8* %24, i8** %reference9, align 8, !dbg !2977
  br label %return, !dbg !2978

return:                                           ; preds = %if.end, %if.then
  ret void, !dbg !2978
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @WM_main_remove_notifier_reference(i8* %reference) #0 !dbg !2979 {
entry:
  %reference.addr = alloca i8*, align 8
  %bmain = alloca %struct.Main*, align 8
  %wm = alloca %struct.wmWindowManager*, align 8
  %note = alloca %struct.wmNotifier*, align 8
  %note_next = alloca %struct.wmNotifier*, align 8
  store i8* %reference, i8** %reference.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %reference.addr, metadata !2984, metadata !DIExpression()), !dbg !2985
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain, metadata !2986, metadata !DIExpression()), !dbg !2987
  %0 = load %struct.Main*, %struct.Main** getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 0), align 8, !dbg !2988
  store %struct.Main* %0, %struct.Main** %bmain, align 8, !dbg !2987
  call void @llvm.dbg.declare(metadata %struct.wmWindowManager** %wm, metadata !2989, metadata !DIExpression()), !dbg !2990
  %1 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !2991
  %wm1 = getelementptr inbounds %struct.Main, %struct.Main* %1, i32 0, i32 40, !dbg !2992
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %wm1, i32 0, i32 0, !dbg !2993
  %2 = load i8*, i8** %first, align 8, !dbg !2993
  %3 = bitcast i8* %2 to %struct.wmWindowManager*, !dbg !2991
  store %struct.wmWindowManager* %3, %struct.wmWindowManager** %wm, align 8, !dbg !2990
  %4 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !2994
  %tobool = icmp ne %struct.wmWindowManager* %4, null, !dbg !2994
  br i1 %tobool, label %if.then, label %if.end6, !dbg !2996

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.wmNotifier** %note, metadata !2997, metadata !DIExpression()), !dbg !2999
  call void @llvm.dbg.declare(metadata %struct.wmNotifier** %note_next, metadata !3000, metadata !DIExpression()), !dbg !3001
  %5 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !3002
  %queue = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %5, i32 0, i32 8, !dbg !3004
  %first2 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %queue, i32 0, i32 0, !dbg !3005
  %6 = load i8*, i8** %first2, align 8, !dbg !3005
  %7 = bitcast i8* %6 to %struct.wmNotifier*, !dbg !3002
  store %struct.wmNotifier* %7, %struct.wmNotifier** %note, align 8, !dbg !3006
  br label %for.cond, !dbg !3007

for.cond:                                         ; preds = %for.inc, %if.then
  %8 = load %struct.wmNotifier*, %struct.wmNotifier** %note, align 8, !dbg !3008
  %tobool3 = icmp ne %struct.wmNotifier* %8, null, !dbg !3010
  br i1 %tobool3, label %for.body, label %for.end, !dbg !3010

for.body:                                         ; preds = %for.cond
  %9 = load %struct.wmNotifier*, %struct.wmNotifier** %note, align 8, !dbg !3011
  %next = getelementptr inbounds %struct.wmNotifier, %struct.wmNotifier* %9, i32 0, i32 0, !dbg !3013
  %10 = load %struct.wmNotifier*, %struct.wmNotifier** %next, align 8, !dbg !3013
  store %struct.wmNotifier* %10, %struct.wmNotifier** %note_next, align 8, !dbg !3014
  %11 = load %struct.wmNotifier*, %struct.wmNotifier** %note, align 8, !dbg !3015
  %reference4 = getelementptr inbounds %struct.wmNotifier, %struct.wmNotifier* %11, i32 0, i32 9, !dbg !3017
  %12 = load i8*, i8** %reference4, align 8, !dbg !3017
  %13 = load i8*, i8** %reference.addr, align 8, !dbg !3018
  %cmp = icmp eq i8* %12, %13, !dbg !3019
  br i1 %cmp, label %if.then5, label %if.end, !dbg !3020

if.then5:                                         ; preds = %for.body
  %14 = load %struct.wmNotifier*, %struct.wmNotifier** %note, align 8, !dbg !3021
  call void @wm_notifier_clear(%struct.wmNotifier* %14), !dbg !3023
  br label %if.end, !dbg !3024

if.end:                                           ; preds = %if.then5, %for.body
  br label %for.inc, !dbg !3025

for.inc:                                          ; preds = %if.end
  %15 = load %struct.wmNotifier*, %struct.wmNotifier** %note_next, align 8, !dbg !3026
  store %struct.wmNotifier* %15, %struct.wmNotifier** %note, align 8, !dbg !3027
  br label %for.cond, !dbg !3028, !llvm.loop !3029

for.end:                                          ; preds = %for.cond
  br label %if.end6, !dbg !3031

if.end6:                                          ; preds = %for.end, %entry
  ret void, !dbg !3032
}

; Function Attrs: noinline nounwind uwtable
define internal void @wm_notifier_clear(%struct.wmNotifier* %note) #0 !dbg !3033 {
entry:
  %note.addr = alloca %struct.wmNotifier*, align 8
  store %struct.wmNotifier* %note, %struct.wmNotifier** %note.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmNotifier** %note.addr, metadata !3036, metadata !DIExpression()), !dbg !3037
  %0 = load %struct.wmNotifier*, %struct.wmNotifier** %note.addr, align 8, !dbg !3038
  %1 = bitcast %struct.wmNotifier* %0 to i8*, !dbg !3039
  %add.ptr = getelementptr inbounds i8, i8* %1, i64 16, !dbg !3040
  call void @llvm.memset.p0i8.i64(i8* align 1 %add.ptr, i8 0, i64 48, i1 false), !dbg !3041
  ret void, !dbg !3042
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @wm_event_do_notifiers(%struct.bContext* %C) #0 !dbg !3043 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %wm = alloca %struct.wmWindowManager*, align 8
  %note = alloca %struct.wmNotifier*, align 8
  %next = alloca %struct.wmNotifier*, align 8
  %win = alloca %struct.wmWindow*, align 8
  %win_combine_v3d_datamask = alloca i64, align 8
  %do_anim = alloca i8, align 1
  %sa = alloca %struct.ScrArea*, align 8
  %ar = alloca %struct.ARegion*, align 8
  %sa179 = alloca %struct.ScrArea*, align 8
  %bmain = alloca %struct.Main*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !3046, metadata !DIExpression()), !dbg !3047
  call void @llvm.dbg.declare(metadata %struct.wmWindowManager** %wm, metadata !3048, metadata !DIExpression()), !dbg !3049
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3050
  %call = call %struct.wmWindowManager* @CTX_wm_manager(%struct.bContext* %0), !dbg !3051
  store %struct.wmWindowManager* %call, %struct.wmWindowManager** %wm, align 8, !dbg !3049
  call void @llvm.dbg.declare(metadata %struct.wmNotifier** %note, metadata !3052, metadata !DIExpression()), !dbg !3053
  call void @llvm.dbg.declare(metadata %struct.wmNotifier** %next, metadata !3054, metadata !DIExpression()), !dbg !3055
  call void @llvm.dbg.declare(metadata %struct.wmWindow** %win, metadata !3056, metadata !DIExpression()), !dbg !3057
  call void @llvm.dbg.declare(metadata i64* %win_combine_v3d_datamask, metadata !3058, metadata !DIExpression()), !dbg !3059
  store i64 0, i64* %win_combine_v3d_datamask, align 8, !dbg !3059
  %1 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !3060
  %cmp = icmp eq %struct.wmWindowManager* %1, null, !dbg !3062
  br i1 %cmp, label %if.then, label %if.end, !dbg !3063

if.then:                                          ; preds = %entry
  br label %return, !dbg !3064

if.end:                                           ; preds = %entry
  %2 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !3065
  %windows = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %2, i32 0, i32 3, !dbg !3067
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %windows, i32 0, i32 0, !dbg !3068
  %3 = load i8*, i8** %first, align 8, !dbg !3068
  %4 = bitcast i8* %3 to %struct.wmWindow*, !dbg !3065
  store %struct.wmWindow* %4, %struct.wmWindow** %win, align 8, !dbg !3069
  br label %for.cond, !dbg !3070

for.cond:                                         ; preds = %for.inc94, %if.end
  %5 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !3071
  %tobool = icmp ne %struct.wmWindow* %5, null, !dbg !3073
  br i1 %tobool, label %for.body, label %for.end96, !dbg !3073

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata i8* %do_anim, metadata !3074, metadata !DIExpression()), !dbg !3076
  store i8 0, i8* %do_anim, align 1, !dbg !3076
  %6 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3077
  %7 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !3078
  call void @CTX_wm_window_set(%struct.bContext* %6, %struct.wmWindow* %7), !dbg !3079
  %8 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !3080
  %queue = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %8, i32 0, i32 8, !dbg !3082
  %first1 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %queue, i32 0, i32 0, !dbg !3083
  %9 = load i8*, i8** %first1, align 8, !dbg !3083
  %10 = bitcast i8* %9 to %struct.wmNotifier*, !dbg !3080
  store %struct.wmNotifier* %10, %struct.wmNotifier** %note, align 8, !dbg !3084
  br label %for.cond2, !dbg !3085

for.cond2:                                        ; preds = %for.inc, %for.body
  %11 = load %struct.wmNotifier*, %struct.wmNotifier** %note, align 8, !dbg !3086
  %tobool3 = icmp ne %struct.wmNotifier* %11, null, !dbg !3088
  br i1 %tobool3, label %for.body4, label %for.end, !dbg !3088

for.body4:                                        ; preds = %for.cond2
  %12 = load %struct.wmNotifier*, %struct.wmNotifier** %note, align 8, !dbg !3089
  %next5 = getelementptr inbounds %struct.wmNotifier, %struct.wmNotifier* %12, i32 0, i32 0, !dbg !3091
  %13 = load %struct.wmNotifier*, %struct.wmNotifier** %next5, align 8, !dbg !3091
  store %struct.wmNotifier* %13, %struct.wmNotifier** %next, align 8, !dbg !3092
  %14 = load %struct.wmNotifier*, %struct.wmNotifier** %note, align 8, !dbg !3093
  %category = getelementptr inbounds %struct.wmNotifier, %struct.wmNotifier* %14, i32 0, i32 5, !dbg !3095
  %15 = load i32, i32* %category, align 4, !dbg !3095
  %cmp6 = icmp eq i32 %15, 16777216, !dbg !3096
  br i1 %cmp6, label %if.then7, label %if.end17, !dbg !3097

if.then7:                                         ; preds = %for.body4
  %16 = load %struct.wmNotifier*, %struct.wmNotifier** %note, align 8, !dbg !3098
  %data = getelementptr inbounds %struct.wmNotifier, %struct.wmNotifier* %16, i32 0, i32 6, !dbg !3098
  %17 = load i32, i32* %data, align 8, !dbg !3098
  %cmp8 = icmp eq i32 %17, 65536, !dbg !3098
  br i1 %cmp8, label %if.then11, label %lor.lhs.false, !dbg !3098

lor.lhs.false:                                    ; preds = %if.then7
  %18 = load %struct.wmNotifier*, %struct.wmNotifier** %note, align 8, !dbg !3098
  %data9 = getelementptr inbounds %struct.wmNotifier, %struct.wmNotifier* %18, i32 0, i32 6, !dbg !3098
  %19 = load i32, i32* %data9, align 8, !dbg !3098
  %cmp10 = icmp eq i32 %19, 131072, !dbg !3098
  br i1 %cmp10, label %if.then11, label %if.else, !dbg !3101

if.then11:                                        ; preds = %lor.lhs.false, %if.then7
  %20 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !3102
  %file_saved = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %20, i32 0, i32 5, !dbg !3104
  store i16 1, i16* %file_saved, align 4, !dbg !3105
  %21 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !3106
  %22 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !3107
  call void @wm_window_title(%struct.wmWindowManager* %21, %struct.wmWindow* %22), !dbg !3108
  br label %if.end16, !dbg !3109

if.else:                                          ; preds = %lor.lhs.false
  %23 = load %struct.wmNotifier*, %struct.wmNotifier** %note, align 8, !dbg !3110
  %data12 = getelementptr inbounds %struct.wmNotifier, %struct.wmNotifier* %23, i32 0, i32 6, !dbg !3112
  %24 = load i32, i32* %data12, align 8, !dbg !3112
  %cmp13 = icmp eq i32 %24, 196608, !dbg !3113
  br i1 %cmp13, label %if.then14, label %if.end15, !dbg !3114

if.then14:                                        ; preds = %if.else
  %25 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !3115
  %26 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !3116
  call void @wm_window_title(%struct.wmWindowManager* %25, %struct.wmWindow* %26), !dbg !3117
  br label %if.end15, !dbg !3117

if.end15:                                         ; preds = %if.then14, %if.else
  br label %if.end16

if.end16:                                         ; preds = %if.end15, %if.then11
  br label %if.end17, !dbg !3118

if.end17:                                         ; preds = %if.end16, %for.body4
  %27 = load %struct.wmNotifier*, %struct.wmNotifier** %note, align 8, !dbg !3119
  %window = getelementptr inbounds %struct.wmNotifier, %struct.wmNotifier* %27, i32 0, i32 3, !dbg !3121
  %28 = load %struct.wmWindow*, %struct.wmWindow** %window, align 8, !dbg !3121
  %29 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !3122
  %cmp18 = icmp eq %struct.wmWindow* %28, %29, !dbg !3123
  br i1 %cmp18, label %if.then19, label %if.end45, !dbg !3124

if.then19:                                        ; preds = %if.end17
  %30 = load %struct.wmNotifier*, %struct.wmNotifier** %note, align 8, !dbg !3125
  %category20 = getelementptr inbounds %struct.wmNotifier, %struct.wmNotifier* %30, i32 0, i32 5, !dbg !3128
  %31 = load i32, i32* %category20, align 4, !dbg !3128
  %cmp21 = icmp eq i32 %31, 50331648, !dbg !3129
  br i1 %cmp21, label %if.then22, label %if.end44, !dbg !3130

if.then22:                                        ; preds = %if.then19
  %32 = load %struct.wmNotifier*, %struct.wmNotifier** %note, align 8, !dbg !3131
  %data23 = getelementptr inbounds %struct.wmNotifier, %struct.wmNotifier* %32, i32 0, i32 6, !dbg !3134
  %33 = load i32, i32* %data23, align 8, !dbg !3134
  %cmp24 = icmp eq i32 %33, 65536, !dbg !3135
  br i1 %cmp24, label %if.then25, label %if.else31, !dbg !3136

if.then25:                                        ; preds = %if.then22
  %34 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3137
  %35 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !3139
  %modalhandlers = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %35, i32 0, i32 29, !dbg !3140
  call void @UI_remove_popup_handlers_all(%struct.bContext* %34, %struct.ListBase* %modalhandlers), !dbg !3141
  %36 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3142
  %37 = load %struct.wmNotifier*, %struct.wmNotifier** %note, align 8, !dbg !3143
  %reference = getelementptr inbounds %struct.wmNotifier, %struct.wmNotifier* %37, i32 0, i32 9, !dbg !3144
  %38 = load i8*, i8** %reference, align 8, !dbg !3144
  %39 = bitcast i8* %38 to %struct.bScreen*, !dbg !3143
  call void @ED_screen_set(%struct.bContext* %36, %struct.bScreen* %39), !dbg !3145
  %40 = load i32, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 16), align 4, !dbg !3146
  %and = and i32 %40, 8, !dbg !3148
  %tobool26 = icmp ne i32 %and, 0, !dbg !3148
  br i1 %tobool26, label %if.then27, label %if.end30, !dbg !3149

if.then27:                                        ; preds = %if.then25
  %41 = load %struct.wmNotifier*, %struct.wmNotifier** %note, align 8, !dbg !3150
  %reference28 = getelementptr inbounds %struct.wmNotifier, %struct.wmNotifier* %41, i32 0, i32 9, !dbg !3151
  %42 = load i8*, i8** %reference28, align 8, !dbg !3151
  %call29 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.wm_event_do_notifiers, i64 0, i64 0), i8* %42), !dbg !3152
  br label %if.end30, !dbg !3152

if.end30:                                         ; preds = %if.then27, %if.then25
  br label %if.end43, !dbg !3153

if.else31:                                        ; preds = %if.then22
  %43 = load %struct.wmNotifier*, %struct.wmNotifier** %note, align 8, !dbg !3154
  %data32 = getelementptr inbounds %struct.wmNotifier, %struct.wmNotifier* %43, i32 0, i32 6, !dbg !3156
  %44 = load i32, i32* %data32, align 8, !dbg !3156
  %cmp33 = icmp eq i32 %44, 131072, !dbg !3157
  br i1 %cmp33, label %if.then34, label %if.end42, !dbg !3158

if.then34:                                        ; preds = %if.else31
  %45 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3159
  %46 = load %struct.wmNotifier*, %struct.wmNotifier** %note, align 8, !dbg !3161
  %reference35 = getelementptr inbounds %struct.wmNotifier, %struct.wmNotifier* %46, i32 0, i32 9, !dbg !3162
  %47 = load i8*, i8** %reference35, align 8, !dbg !3162
  %48 = bitcast i8* %47 to %struct.bScreen*, !dbg !3161
  call void @ED_screen_delete(%struct.bContext* %45, %struct.bScreen* %48), !dbg !3163
  %49 = load i32, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 16), align 4, !dbg !3164
  %and36 = and i32 %49, 8, !dbg !3166
  %tobool37 = icmp ne i32 %and36, 0, !dbg !3166
  br i1 %tobool37, label %if.then38, label %if.end41, !dbg !3167

if.then38:                                        ; preds = %if.then34
  %50 = load %struct.wmNotifier*, %struct.wmNotifier** %note, align 8, !dbg !3168
  %reference39 = getelementptr inbounds %struct.wmNotifier, %struct.wmNotifier* %50, i32 0, i32 9, !dbg !3169
  %51 = load i8*, i8** %reference39, align 8, !dbg !3169
  %call40 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.wm_event_do_notifiers, i64 0, i64 0), i8* %51), !dbg !3170
  br label %if.end41, !dbg !3170

if.end41:                                         ; preds = %if.then38, %if.then34
  br label %if.end42, !dbg !3171

if.end42:                                         ; preds = %if.end41, %if.else31
  br label %if.end43

if.end43:                                         ; preds = %if.end42, %if.end30
  br label %if.end44, !dbg !3172

if.end44:                                         ; preds = %if.end43, %if.then19
  br label %if.end45, !dbg !3173

if.end45:                                         ; preds = %if.end44, %if.end17
  %52 = load %struct.wmNotifier*, %struct.wmNotifier** %note, align 8, !dbg !3174
  %window46 = getelementptr inbounds %struct.wmNotifier, %struct.wmNotifier* %52, i32 0, i32 3, !dbg !3176
  %53 = load %struct.wmWindow*, %struct.wmWindow** %window46, align 8, !dbg !3176
  %54 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !3177
  %cmp47 = icmp eq %struct.wmWindow* %53, %54, !dbg !3178
  br i1 %cmp47, label %if.then56, label %lor.lhs.false48, !dbg !3179

lor.lhs.false48:                                  ; preds = %if.end45
  %55 = load %struct.wmNotifier*, %struct.wmNotifier** %note, align 8, !dbg !3180
  %window49 = getelementptr inbounds %struct.wmNotifier, %struct.wmNotifier* %55, i32 0, i32 3, !dbg !3181
  %56 = load %struct.wmWindow*, %struct.wmWindow** %window49, align 8, !dbg !3181
  %cmp50 = icmp eq %struct.wmWindow* %56, null, !dbg !3182
  br i1 %cmp50, label %land.lhs.true, label %if.end65, !dbg !3183

land.lhs.true:                                    ; preds = %lor.lhs.false48
  %57 = load %struct.wmNotifier*, %struct.wmNotifier** %note, align 8, !dbg !3184
  %reference51 = getelementptr inbounds %struct.wmNotifier, %struct.wmNotifier* %57, i32 0, i32 9, !dbg !3185
  %58 = load i8*, i8** %reference51, align 8, !dbg !3185
  %cmp52 = icmp eq i8* %58, null, !dbg !3186
  br i1 %cmp52, label %if.then56, label %lor.lhs.false53, !dbg !3187

lor.lhs.false53:                                  ; preds = %land.lhs.true
  %59 = load %struct.wmNotifier*, %struct.wmNotifier** %note, align 8, !dbg !3188
  %reference54 = getelementptr inbounds %struct.wmNotifier, %struct.wmNotifier* %59, i32 0, i32 9, !dbg !3189
  %60 = load i8*, i8** %reference54, align 8, !dbg !3189
  %61 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !3190
  %screen = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %61, i32 0, i32 3, !dbg !3191
  %62 = load %struct.bScreen*, %struct.bScreen** %screen, align 8, !dbg !3191
  %scene = getelementptr inbounds %struct.bScreen, %struct.bScreen* %62, i32 0, i32 5, !dbg !3192
  %63 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !3192
  %64 = bitcast %struct.Scene* %63 to i8*, !dbg !3190
  %cmp55 = icmp eq i8* %60, %64, !dbg !3193
  br i1 %cmp55, label %if.then56, label %if.end65, !dbg !3194

if.then56:                                        ; preds = %lor.lhs.false53, %land.lhs.true, %if.end45
  %65 = load %struct.wmNotifier*, %struct.wmNotifier** %note, align 8, !dbg !3195
  %category57 = getelementptr inbounds %struct.wmNotifier, %struct.wmNotifier* %65, i32 0, i32 5, !dbg !3198
  %66 = load i32, i32* %category57, align 4, !dbg !3198
  %cmp58 = icmp eq i32 %66, 67108864, !dbg !3199
  br i1 %cmp58, label %if.then59, label %if.end64, !dbg !3200

if.then59:                                        ; preds = %if.then56
  %67 = load %struct.wmNotifier*, %struct.wmNotifier** %note, align 8, !dbg !3201
  %data60 = getelementptr inbounds %struct.wmNotifier, %struct.wmNotifier* %67, i32 0, i32 6, !dbg !3204
  %68 = load i32, i32* %data60, align 8, !dbg !3204
  %cmp61 = icmp eq i32 %68, 196608, !dbg !3205
  br i1 %cmp61, label %if.then62, label %if.end63, !dbg !3206

if.then62:                                        ; preds = %if.then59
  store i8 1, i8* %do_anim, align 1, !dbg !3207
  br label %if.end63, !dbg !3208

if.end63:                                         ; preds = %if.then62, %if.then59
  br label %if.end64, !dbg !3209

if.end64:                                         ; preds = %if.end63, %if.then56
  br label %if.end65, !dbg !3210

if.end65:                                         ; preds = %if.end64, %lor.lhs.false53, %lor.lhs.false48
  %69 = load %struct.wmNotifier*, %struct.wmNotifier** %note, align 8, !dbg !3211
  %category66 = getelementptr inbounds %struct.wmNotifier, %struct.wmNotifier* %69, i32 0, i32 5, !dbg !3211
  %70 = load i32, i32* %category66, align 4, !dbg !3211
  %cmp67 = icmp eq i32 %70, 67108864, !dbg !3211
  br i1 %cmp67, label %if.then80, label %lor.lhs.false68, !dbg !3211

lor.lhs.false68:                                  ; preds = %if.end65
  %71 = load %struct.wmNotifier*, %struct.wmNotifier** %note, align 8, !dbg !3211
  %category69 = getelementptr inbounds %struct.wmNotifier, %struct.wmNotifier* %71, i32 0, i32 5, !dbg !3211
  %72 = load i32, i32* %category69, align 4, !dbg !3211
  %cmp70 = icmp eq i32 %72, 83886080, !dbg !3211
  br i1 %cmp70, label %if.then80, label %lor.lhs.false71, !dbg !3211

lor.lhs.false71:                                  ; preds = %lor.lhs.false68
  %73 = load %struct.wmNotifier*, %struct.wmNotifier** %note, align 8, !dbg !3211
  %category72 = getelementptr inbounds %struct.wmNotifier, %struct.wmNotifier* %73, i32 0, i32 5, !dbg !3211
  %74 = load i32, i32* %category72, align 4, !dbg !3211
  %cmp73 = icmp eq i32 %74, 268435456, !dbg !3211
  br i1 %cmp73, label %if.then80, label %lor.lhs.false74, !dbg !3211

lor.lhs.false74:                                  ; preds = %lor.lhs.false71
  %75 = load %struct.wmNotifier*, %struct.wmNotifier** %note, align 8, !dbg !3211
  %category75 = getelementptr inbounds %struct.wmNotifier, %struct.wmNotifier* %75, i32 0, i32 5, !dbg !3211
  %76 = load i32, i32* %category75, align 4, !dbg !3211
  %cmp76 = icmp eq i32 %76, 67108864, !dbg !3211
  br i1 %cmp76, label %if.then80, label %lor.lhs.false77, !dbg !3211

lor.lhs.false77:                                  ; preds = %lor.lhs.false74
  %77 = load %struct.wmNotifier*, %struct.wmNotifier** %note, align 8, !dbg !3211
  %category78 = getelementptr inbounds %struct.wmNotifier, %struct.wmNotifier* %77, i32 0, i32 5, !dbg !3211
  %78 = load i32, i32* %category78, align 4, !dbg !3211
  %cmp79 = icmp eq i32 %78, 16777216, !dbg !3211
  br i1 %cmp79, label %if.then80, label %if.end83, !dbg !3213

if.then80:                                        ; preds = %lor.lhs.false77, %lor.lhs.false74, %lor.lhs.false71, %lor.lhs.false68, %if.end65
  %79 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !3214
  %screen81 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %79, i32 0, i32 3, !dbg !3216
  %80 = load %struct.bScreen*, %struct.bScreen** %screen81, align 8, !dbg !3216
  %scene82 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %80, i32 0, i32 5, !dbg !3217
  %81 = load %struct.Scene*, %struct.Scene** %scene82, align 8, !dbg !3217
  call void @ED_info_stats_clear(%struct.Scene* %81), !dbg !3218
  %82 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3219
  call void @WM_event_add_notifier(%struct.bContext* %82, i32 251854848, i8* null), !dbg !3220
  br label %if.end83, !dbg !3221

if.end83:                                         ; preds = %if.then80, %lor.lhs.false77
  br label %for.inc, !dbg !3222

for.inc:                                          ; preds = %if.end83
  %83 = load %struct.wmNotifier*, %struct.wmNotifier** %next, align 8, !dbg !3223
  store %struct.wmNotifier* %83, %struct.wmNotifier** %note, align 8, !dbg !3224
  br label %for.cond2, !dbg !3225, !llvm.loop !3226

for.end:                                          ; preds = %for.cond2
  %84 = load i8, i8* %do_anim, align 1, !dbg !3228
  %tobool84 = icmp ne i8 %84, 0, !dbg !3228
  br i1 %tobool84, label %if.then85, label %if.end93, !dbg !3230

if.then85:                                        ; preds = %for.end
  %85 = load i8, i8* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 13), align 2, !dbg !3231
  %conv = zext i8 %85 to i32, !dbg !3234
  %cmp86 = icmp eq i32 %conv, 0, !dbg !3235
  br i1 %cmp86, label %if.then88, label %if.end92, !dbg !3236

if.then88:                                        ; preds = %if.then85
  %86 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3237
  %call89 = call %struct.Main* @CTX_data_main(%struct.bContext* %86), !dbg !3239
  %87 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !3240
  %screen90 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %87, i32 0, i32 3, !dbg !3241
  %88 = load %struct.bScreen*, %struct.bScreen** %screen90, align 8, !dbg !3241
  %scene91 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %88, i32 0, i32 5, !dbg !3242
  %89 = load %struct.Scene*, %struct.Scene** %scene91, align 8, !dbg !3242
  call void @ED_update_for_newframe(%struct.Main* %call89, %struct.Scene* %89, i32 1), !dbg !3243
  br label %if.end92, !dbg !3244

if.end92:                                         ; preds = %if.then88, %if.then85
  br label %if.end93, !dbg !3245

if.end93:                                         ; preds = %if.end92, %for.end
  br label %for.inc94, !dbg !3246

for.inc94:                                        ; preds = %if.end93
  %90 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !3247
  %next95 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %90, i32 0, i32 0, !dbg !3248
  %91 = load %struct.wmWindow*, %struct.wmWindow** %next95, align 8, !dbg !3248
  store %struct.wmWindow* %91, %struct.wmWindow** %win, align 8, !dbg !3249
  br label %for.cond, !dbg !3250, !llvm.loop !3251

for.end96:                                        ; preds = %for.cond
  br label %while.cond, !dbg !3253

while.cond:                                       ; preds = %for.end163, %for.end96
  %92 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !3254
  %queue97 = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %92, i32 0, i32 8, !dbg !3255
  %call98 = call i8* @BLI_pophead(%struct.ListBase* %queue97), !dbg !3256
  %93 = bitcast i8* %call98 to %struct.wmNotifier*, !dbg !3256
  store %struct.wmNotifier* %93, %struct.wmNotifier** %note, align 8, !dbg !3257
  %tobool99 = icmp ne %struct.wmNotifier* %93, null, !dbg !3253
  br i1 %tobool99, label %while.body, label %while.end, !dbg !3253

while.body:                                       ; preds = %while.cond
  %94 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !3258
  %windows100 = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %94, i32 0, i32 3, !dbg !3261
  %first101 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %windows100, i32 0, i32 0, !dbg !3262
  %95 = load i8*, i8** %first101, align 8, !dbg !3262
  %96 = bitcast i8* %95 to %struct.wmWindow*, !dbg !3258
  store %struct.wmWindow* %96, %struct.wmWindow** %win, align 8, !dbg !3263
  br label %for.cond102, !dbg !3264

for.cond102:                                      ; preds = %for.inc161, %while.body
  %97 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !3265
  %tobool103 = icmp ne %struct.wmWindow* %97, null, !dbg !3267
  br i1 %tobool103, label %for.body104, label %for.end163, !dbg !3267

for.body104:                                      ; preds = %for.cond102
  %98 = load %struct.wmNotifier*, %struct.wmNotifier** %note, align 8, !dbg !3268
  %category105 = getelementptr inbounds %struct.wmNotifier, %struct.wmNotifier* %98, i32 0, i32 5, !dbg !3271
  %99 = load i32, i32* %category105, align 4, !dbg !3271
  %cmp106 = icmp eq i32 %99, 50331648, !dbg !3272
  br i1 %cmp106, label %land.lhs.true108, label %if.else117, !dbg !3273

land.lhs.true108:                                 ; preds = %for.body104
  %100 = load %struct.wmNotifier*, %struct.wmNotifier** %note, align 8, !dbg !3274
  %reference109 = getelementptr inbounds %struct.wmNotifier, %struct.wmNotifier* %100, i32 0, i32 9, !dbg !3275
  %101 = load i8*, i8** %reference109, align 8, !dbg !3275
  %tobool110 = icmp ne i8* %101, null, !dbg !3274
  br i1 %tobool110, label %land.lhs.true111, label %if.else117, !dbg !3276

land.lhs.true111:                                 ; preds = %land.lhs.true108
  %102 = load %struct.wmNotifier*, %struct.wmNotifier** %note, align 8, !dbg !3277
  %reference112 = getelementptr inbounds %struct.wmNotifier, %struct.wmNotifier* %102, i32 0, i32 9, !dbg !3278
  %103 = load i8*, i8** %reference112, align 8, !dbg !3278
  %104 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !3279
  %screen113 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %104, i32 0, i32 3, !dbg !3280
  %105 = load %struct.bScreen*, %struct.bScreen** %screen113, align 8, !dbg !3280
  %106 = bitcast %struct.bScreen* %105 to i8*, !dbg !3279
  %cmp114 = icmp ne i8* %103, %106, !dbg !3281
  br i1 %cmp114, label %if.then116, label %if.else117, !dbg !3282

if.then116:                                       ; preds = %land.lhs.true111
  br label %if.end160, !dbg !3283

if.else117:                                       ; preds = %land.lhs.true111, %land.lhs.true108, %for.body104
  %107 = load %struct.wmNotifier*, %struct.wmNotifier** %note, align 8, !dbg !3285
  %category118 = getelementptr inbounds %struct.wmNotifier, %struct.wmNotifier* %107, i32 0, i32 5, !dbg !3287
  %108 = load i32, i32* %category118, align 4, !dbg !3287
  %cmp119 = icmp eq i32 %108, 67108864, !dbg !3288
  br i1 %cmp119, label %land.lhs.true121, label %if.else131, !dbg !3289

land.lhs.true121:                                 ; preds = %if.else117
  %109 = load %struct.wmNotifier*, %struct.wmNotifier** %note, align 8, !dbg !3290
  %reference122 = getelementptr inbounds %struct.wmNotifier, %struct.wmNotifier* %109, i32 0, i32 9, !dbg !3291
  %110 = load i8*, i8** %reference122, align 8, !dbg !3291
  %tobool123 = icmp ne i8* %110, null, !dbg !3290
  br i1 %tobool123, label %land.lhs.true124, label %if.else131, !dbg !3292

land.lhs.true124:                                 ; preds = %land.lhs.true121
  %111 = load %struct.wmNotifier*, %struct.wmNotifier** %note, align 8, !dbg !3293
  %reference125 = getelementptr inbounds %struct.wmNotifier, %struct.wmNotifier* %111, i32 0, i32 9, !dbg !3294
  %112 = load i8*, i8** %reference125, align 8, !dbg !3294
  %113 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !3295
  %screen126 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %113, i32 0, i32 3, !dbg !3296
  %114 = load %struct.bScreen*, %struct.bScreen** %screen126, align 8, !dbg !3296
  %scene127 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %114, i32 0, i32 5, !dbg !3297
  %115 = load %struct.Scene*, %struct.Scene** %scene127, align 8, !dbg !3297
  %116 = bitcast %struct.Scene* %115 to i8*, !dbg !3295
  %cmp128 = icmp ne i8* %112, %116, !dbg !3298
  br i1 %cmp128, label %if.then130, label %if.else131, !dbg !3299

if.then130:                                       ; preds = %land.lhs.true124
  br label %if.end159, !dbg !3300

if.else131:                                       ; preds = %land.lhs.true124, %land.lhs.true121, %if.else117
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa, metadata !3302, metadata !DIExpression()), !dbg !3304
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar, metadata !3305, metadata !DIExpression()), !dbg !3306
  %117 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3307
  %118 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !3308
  call void @CTX_wm_window_set(%struct.bContext* %117, %struct.wmWindow* %118), !dbg !3309
  %119 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3310
  %120 = load %struct.wmNotifier*, %struct.wmNotifier** %note, align 8, !dbg !3311
  call void @ED_screen_do_listen(%struct.bContext* %119, %struct.wmNotifier* %120), !dbg !3312
  %121 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !3313
  %screen132 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %121, i32 0, i32 3, !dbg !3315
  %122 = load %struct.bScreen*, %struct.bScreen** %screen132, align 8, !dbg !3315
  %regionbase = getelementptr inbounds %struct.bScreen, %struct.bScreen* %122, i32 0, i32 4, !dbg !3316
  %first133 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %regionbase, i32 0, i32 0, !dbg !3317
  %123 = load i8*, i8** %first133, align 8, !dbg !3317
  %124 = bitcast i8* %123 to %struct.ARegion*, !dbg !3313
  store %struct.ARegion* %124, %struct.ARegion** %ar, align 8, !dbg !3318
  br label %for.cond134, !dbg !3319

for.cond134:                                      ; preds = %for.inc138, %if.else131
  %125 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !3320
  %tobool135 = icmp ne %struct.ARegion* %125, null, !dbg !3322
  br i1 %tobool135, label %for.body136, label %for.end140, !dbg !3322

for.body136:                                      ; preds = %for.cond134
  %126 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !3323
  %screen137 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %126, i32 0, i32 3, !dbg !3325
  %127 = load %struct.bScreen*, %struct.bScreen** %screen137, align 8, !dbg !3325
  %128 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !3326
  %129 = load %struct.wmNotifier*, %struct.wmNotifier** %note, align 8, !dbg !3327
  call void @ED_region_do_listen(%struct.bScreen* %127, %struct.ScrArea* null, %struct.ARegion* %128, %struct.wmNotifier* %129), !dbg !3328
  br label %for.inc138, !dbg !3329

for.inc138:                                       ; preds = %for.body136
  %130 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !3330
  %next139 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %130, i32 0, i32 0, !dbg !3331
  %131 = load %struct.ARegion*, %struct.ARegion** %next139, align 8, !dbg !3331
  store %struct.ARegion* %131, %struct.ARegion** %ar, align 8, !dbg !3332
  br label %for.cond134, !dbg !3333, !llvm.loop !3334

for.end140:                                       ; preds = %for.cond134
  %132 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !3336
  %screen141 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %132, i32 0, i32 3, !dbg !3338
  %133 = load %struct.bScreen*, %struct.bScreen** %screen141, align 8, !dbg !3338
  %areabase = getelementptr inbounds %struct.bScreen, %struct.bScreen* %133, i32 0, i32 3, !dbg !3339
  %first142 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %areabase, i32 0, i32 0, !dbg !3340
  %134 = load i8*, i8** %first142, align 8, !dbg !3340
  %135 = bitcast i8* %134 to %struct.ScrArea*, !dbg !3336
  store %struct.ScrArea* %135, %struct.ScrArea** %sa, align 8, !dbg !3341
  br label %for.cond143, !dbg !3342

for.cond143:                                      ; preds = %for.inc156, %for.end140
  %136 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !3343
  %tobool144 = icmp ne %struct.ScrArea* %136, null, !dbg !3345
  br i1 %tobool144, label %for.body145, label %for.end158, !dbg !3345

for.body145:                                      ; preds = %for.cond143
  %137 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !3346
  %screen146 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %137, i32 0, i32 3, !dbg !3348
  %138 = load %struct.bScreen*, %struct.bScreen** %screen146, align 8, !dbg !3348
  %139 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !3349
  %140 = load %struct.wmNotifier*, %struct.wmNotifier** %note, align 8, !dbg !3350
  call void @ED_area_do_listen(%struct.bScreen* %138, %struct.ScrArea* %139, %struct.wmNotifier* %140), !dbg !3351
  %141 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !3352
  %regionbase147 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %141, i32 0, i32 20, !dbg !3354
  %first148 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %regionbase147, i32 0, i32 0, !dbg !3355
  %142 = load i8*, i8** %first148, align 8, !dbg !3355
  %143 = bitcast i8* %142 to %struct.ARegion*, !dbg !3352
  store %struct.ARegion* %143, %struct.ARegion** %ar, align 8, !dbg !3356
  br label %for.cond149, !dbg !3357

for.cond149:                                      ; preds = %for.inc153, %for.body145
  %144 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !3358
  %tobool150 = icmp ne %struct.ARegion* %144, null, !dbg !3360
  br i1 %tobool150, label %for.body151, label %for.end155, !dbg !3360

for.body151:                                      ; preds = %for.cond149
  %145 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !3361
  %screen152 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %145, i32 0, i32 3, !dbg !3363
  %146 = load %struct.bScreen*, %struct.bScreen** %screen152, align 8, !dbg !3363
  %147 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !3364
  %148 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !3365
  %149 = load %struct.wmNotifier*, %struct.wmNotifier** %note, align 8, !dbg !3366
  call void @ED_region_do_listen(%struct.bScreen* %146, %struct.ScrArea* %147, %struct.ARegion* %148, %struct.wmNotifier* %149), !dbg !3367
  br label %for.inc153, !dbg !3368

for.inc153:                                       ; preds = %for.body151
  %150 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !3369
  %next154 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %150, i32 0, i32 0, !dbg !3370
  %151 = load %struct.ARegion*, %struct.ARegion** %next154, align 8, !dbg !3370
  store %struct.ARegion* %151, %struct.ARegion** %ar, align 8, !dbg !3371
  br label %for.cond149, !dbg !3372, !llvm.loop !3373

for.end155:                                       ; preds = %for.cond149
  br label %for.inc156, !dbg !3375

for.inc156:                                       ; preds = %for.end155
  %152 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !3376
  %next157 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %152, i32 0, i32 0, !dbg !3377
  %153 = load %struct.ScrArea*, %struct.ScrArea** %next157, align 8, !dbg !3377
  store %struct.ScrArea* %153, %struct.ScrArea** %sa, align 8, !dbg !3378
  br label %for.cond143, !dbg !3379, !llvm.loop !3380

for.end158:                                       ; preds = %for.cond143
  br label %if.end159

if.end159:                                        ; preds = %for.end158, %if.then130
  br label %if.end160

if.end160:                                        ; preds = %if.end159, %if.then116
  br label %for.inc161, !dbg !3382

for.inc161:                                       ; preds = %if.end160
  %154 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !3383
  %next162 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %154, i32 0, i32 0, !dbg !3384
  %155 = load %struct.wmWindow*, %struct.wmWindow** %next162, align 8, !dbg !3384
  store %struct.wmWindow* %155, %struct.wmWindow** %win, align 8, !dbg !3385
  br label %for.cond102, !dbg !3386, !llvm.loop !3387

for.end163:                                       ; preds = %for.cond102
  %156 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !3389
  %157 = load %struct.wmNotifier*, %struct.wmNotifier** %note, align 8, !dbg !3390
  %158 = bitcast %struct.wmNotifier* %157 to i8*, !dbg !3390
  call void %156(i8* %158), !dbg !3389
  br label %while.cond, !dbg !3253, !llvm.loop !3391

while.end:                                        ; preds = %while.cond
  %159 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !3393
  %windows164 = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %159, i32 0, i32 3, !dbg !3395
  %first165 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %windows164, i32 0, i32 0, !dbg !3396
  %160 = load i8*, i8** %first165, align 8, !dbg !3396
  %161 = bitcast i8* %160 to %struct.wmWindow*, !dbg !3393
  store %struct.wmWindow* %161, %struct.wmWindow** %win, align 8, !dbg !3397
  br label %for.cond166, !dbg !3398

for.cond166:                                      ; preds = %for.inc171, %while.end
  %162 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !3399
  %tobool167 = icmp ne %struct.wmWindow* %162, null, !dbg !3401
  br i1 %tobool167, label %for.body168, label %for.end173, !dbg !3401

for.body168:                                      ; preds = %for.cond166
  %163 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !3402
  %screen169 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %163, i32 0, i32 3, !dbg !3404
  %164 = load %struct.bScreen*, %struct.bScreen** %screen169, align 8, !dbg !3404
  %call170 = call i64 @ED_view3d_screen_datamask(%struct.bScreen* %164), !dbg !3405
  %165 = load i64, i64* %win_combine_v3d_datamask, align 8, !dbg !3406
  %or = or i64 %165, %call170, !dbg !3406
  store i64 %or, i64* %win_combine_v3d_datamask, align 8, !dbg !3406
  br label %for.inc171, !dbg !3407

for.inc171:                                       ; preds = %for.body168
  %166 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !3408
  %next172 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %166, i32 0, i32 0, !dbg !3409
  %167 = load %struct.wmWindow*, %struct.wmWindow** %next172, align 8, !dbg !3409
  store %struct.wmWindow* %167, %struct.wmWindow** %win, align 8, !dbg !3410
  br label %for.cond166, !dbg !3411, !llvm.loop !3412

for.end173:                                       ; preds = %for.cond166
  %168 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !3414
  %windows174 = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %168, i32 0, i32 3, !dbg !3416
  %first175 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %windows174, i32 0, i32 0, !dbg !3417
  %169 = load i8*, i8** %first175, align 8, !dbg !3417
  %170 = bitcast i8* %169 to %struct.wmWindow*, !dbg !3414
  store %struct.wmWindow* %170, %struct.wmWindow** %win, align 8, !dbg !3418
  br label %for.cond176, !dbg !3419

for.cond176:                                      ; preds = %for.inc208, %for.end173
  %171 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !3420
  %tobool177 = icmp ne %struct.wmWindow* %171, null, !dbg !3422
  br i1 %tobool177, label %for.body178, label %for.end210, !dbg !3422

for.body178:                                      ; preds = %for.cond176
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa179, metadata !3423, metadata !DIExpression()), !dbg !3425
  %172 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3426
  %173 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !3427
  call void @CTX_wm_window_set(%struct.bContext* %172, %struct.wmWindow* %173), !dbg !3428
  %174 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !3429
  %screen180 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %174, i32 0, i32 3, !dbg !3431
  %175 = load %struct.bScreen*, %struct.bScreen** %screen180, align 8, !dbg !3431
  %areabase181 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %175, i32 0, i32 3, !dbg !3432
  %first182 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %areabase181, i32 0, i32 0, !dbg !3433
  %176 = load i8*, i8** %first182, align 8, !dbg !3433
  %177 = bitcast i8* %176 to %struct.ScrArea*, !dbg !3429
  store %struct.ScrArea* %177, %struct.ScrArea** %sa179, align 8, !dbg !3434
  br label %for.cond183, !dbg !3435

for.cond183:                                      ; preds = %for.inc189, %for.body178
  %178 = load %struct.ScrArea*, %struct.ScrArea** %sa179, align 8, !dbg !3436
  %tobool184 = icmp ne %struct.ScrArea* %178, null, !dbg !3438
  br i1 %tobool184, label %for.body185, label %for.end191, !dbg !3438

for.body185:                                      ; preds = %for.cond183
  %179 = load %struct.ScrArea*, %struct.ScrArea** %sa179, align 8, !dbg !3439
  %do_refresh = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %179, i32 0, i32 13, !dbg !3442
  %180 = load i16, i16* %do_refresh, align 8, !dbg !3442
  %tobool186 = icmp ne i16 %180, 0, !dbg !3439
  br i1 %tobool186, label %if.then187, label %if.end188, !dbg !3443

if.then187:                                       ; preds = %for.body185
  %181 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3444
  %182 = load %struct.ScrArea*, %struct.ScrArea** %sa179, align 8, !dbg !3446
  call void @CTX_wm_area_set(%struct.bContext* %181, %struct.ScrArea* %182), !dbg !3447
  %183 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3448
  %184 = load %struct.ScrArea*, %struct.ScrArea** %sa179, align 8, !dbg !3449
  call void @ED_area_do_refresh(%struct.bContext* %183, %struct.ScrArea* %184), !dbg !3450
  br label %if.end188, !dbg !3451

if.end188:                                        ; preds = %if.then187, %for.body185
  br label %for.inc189, !dbg !3452

for.inc189:                                       ; preds = %if.end188
  %185 = load %struct.ScrArea*, %struct.ScrArea** %sa179, align 8, !dbg !3453
  %next190 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %185, i32 0, i32 0, !dbg !3454
  %186 = load %struct.ScrArea*, %struct.ScrArea** %next190, align 8, !dbg !3454
  store %struct.ScrArea* %186, %struct.ScrArea** %sa179, align 8, !dbg !3455
  br label %for.cond183, !dbg !3456, !llvm.loop !3457

for.end191:                                       ; preds = %for.cond183
  %187 = load i8, i8* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 13), align 2, !dbg !3459
  %conv192 = zext i8 %187 to i32, !dbg !3461
  %cmp193 = icmp eq i32 %conv192, 0, !dbg !3462
  br i1 %cmp193, label %if.then195, label %if.end207, !dbg !3463

if.then195:                                       ; preds = %for.end191
  call void @llvm.dbg.declare(metadata %struct.Main** %bmain, metadata !3464, metadata !DIExpression()), !dbg !3466
  %188 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3467
  %call196 = call %struct.Main* @CTX_data_main(%struct.bContext* %188), !dbg !3468
  store %struct.Main* %call196, %struct.Main** %bmain, align 8, !dbg !3466
  %189 = load i64, i64* %win_combine_v3d_datamask, align 8, !dbg !3469
  %190 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !3470
  %screen197 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %190, i32 0, i32 3, !dbg !3471
  %191 = load %struct.bScreen*, %struct.bScreen** %screen197, align 8, !dbg !3471
  %scene198 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %191, i32 0, i32 5, !dbg !3472
  %192 = load %struct.Scene*, %struct.Scene** %scene198, align 8, !dbg !3472
  %customdata_mask = getelementptr inbounds %struct.Scene, %struct.Scene* %192, i32 0, i32 42, !dbg !3473
  store i64 %189, i64* %customdata_mask, align 8, !dbg !3474
  %193 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !3475
  %screen199 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %193, i32 0, i32 3, !dbg !3476
  %194 = load %struct.bScreen*, %struct.bScreen** %screen199, align 8, !dbg !3476
  %scene200 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %194, i32 0, i32 5, !dbg !3477
  %195 = load %struct.Scene*, %struct.Scene** %scene200, align 8, !dbg !3477
  %customdata_mask_modal = getelementptr inbounds %struct.Scene, %struct.Scene* %195, i32 0, i32 43, !dbg !3478
  %196 = load i64, i64* %customdata_mask_modal, align 8, !dbg !3478
  %197 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !3479
  %screen201 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %197, i32 0, i32 3, !dbg !3480
  %198 = load %struct.bScreen*, %struct.bScreen** %screen201, align 8, !dbg !3480
  %scene202 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %198, i32 0, i32 5, !dbg !3481
  %199 = load %struct.Scene*, %struct.Scene** %scene202, align 8, !dbg !3481
  %customdata_mask203 = getelementptr inbounds %struct.Scene, %struct.Scene* %199, i32 0, i32 42, !dbg !3482
  %200 = load i64, i64* %customdata_mask203, align 8, !dbg !3483
  %or204 = or i64 %200, %196, !dbg !3483
  store i64 %or204, i64* %customdata_mask203, align 8, !dbg !3483
  %201 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !3484
  %eval_ctx = getelementptr inbounds %struct.Main, %struct.Main* %201, i32 0, i32 46, !dbg !3485
  %202 = load %struct.EvaluationContext*, %struct.EvaluationContext** %eval_ctx, align 8, !dbg !3485
  %203 = load %struct.Main*, %struct.Main** %bmain, align 8, !dbg !3486
  %204 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !3487
  %screen205 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %204, i32 0, i32 3, !dbg !3488
  %205 = load %struct.bScreen*, %struct.bScreen** %screen205, align 8, !dbg !3488
  %scene206 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %205, i32 0, i32 5, !dbg !3489
  %206 = load %struct.Scene*, %struct.Scene** %scene206, align 8, !dbg !3489
  call void @BKE_scene_update_tagged(%struct.EvaluationContext* %202, %struct.Main* %203, %struct.Scene* %206), !dbg !3490
  br label %if.end207, !dbg !3491

if.end207:                                        ; preds = %if.then195, %for.end191
  br label %for.inc208, !dbg !3492

for.inc208:                                       ; preds = %if.end207
  %207 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !3493
  %next209 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %207, i32 0, i32 0, !dbg !3494
  %208 = load %struct.wmWindow*, %struct.wmWindow** %next209, align 8, !dbg !3494
  store %struct.wmWindow* %208, %struct.wmWindow** %win, align 8, !dbg !3495
  br label %for.cond176, !dbg !3496, !llvm.loop !3497

for.end210:                                       ; preds = %for.cond176
  %209 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3499
  call void @CTX_wm_window_set(%struct.bContext* %209, %struct.wmWindow* null), !dbg !3500
  br label %return, !dbg !3501

return:                                           ; preds = %for.end210, %if.then
  ret void, !dbg !3501
}

declare dso_local void @CTX_wm_window_set(%struct.bContext*, %struct.wmWindow*) #3

declare dso_local void @wm_window_title(%struct.wmWindowManager*, %struct.wmWindow*) #3

declare dso_local void @UI_remove_popup_handlers_all(%struct.bContext*, %struct.ListBase*) #3

declare dso_local void @ED_screen_set(%struct.bContext*, %struct.bScreen*) #3

declare dso_local i32 @printf(i8*, ...) #3

declare dso_local void @ED_screen_delete(%struct.bContext*, %struct.bScreen*) #3

declare dso_local void @ED_info_stats_clear(%struct.Scene*) #3

declare dso_local void @ED_update_for_newframe(%struct.Main*, %struct.Scene*, i32) #3

declare dso_local %struct.Main* @CTX_data_main(%struct.bContext*) #3

declare dso_local void @ED_screen_do_listen(%struct.bContext*, %struct.wmNotifier*) #3

declare dso_local void @ED_region_do_listen(%struct.bScreen*, %struct.ScrArea*, %struct.ARegion*, %struct.wmNotifier*) #3

declare dso_local void @ED_area_do_listen(%struct.bScreen*, %struct.ScrArea*, %struct.wmNotifier*) #3

declare dso_local i64 @ED_view3d_screen_datamask(%struct.bScreen*) #3

declare dso_local void @CTX_wm_area_set(%struct.bContext*, %struct.ScrArea*) #3

declare dso_local void @ED_area_do_refresh(%struct.bContext*, %struct.ScrArea*) #3

declare dso_local void @BKE_scene_update_tagged(%struct.EvaluationContext*, %struct.Main*, %struct.Scene*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @WM_operator_poll(%struct.bContext* %C, %struct.wmOperatorType* %ot) #0 !dbg !3502 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  %otmacro = alloca %struct.wmOperatorTypeMacro*, align 8
  %ot_macro = alloca %struct.wmOperatorType*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !3505, metadata !DIExpression()), !dbg !3506
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !3507, metadata !DIExpression()), !dbg !3508
  call void @llvm.dbg.declare(metadata %struct.wmOperatorTypeMacro** %otmacro, metadata !3509, metadata !DIExpression()), !dbg !3520
  %0 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3521
  %macro = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %0, i32 0, i32 14, !dbg !3523
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %macro, i32 0, i32 0, !dbg !3524
  %1 = load i8*, i8** %first, align 8, !dbg !3524
  %2 = bitcast i8* %1 to %struct.wmOperatorTypeMacro*, !dbg !3521
  store %struct.wmOperatorTypeMacro* %2, %struct.wmOperatorTypeMacro** %otmacro, align 8, !dbg !3525
  br label %for.cond, !dbg !3526

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.wmOperatorTypeMacro*, %struct.wmOperatorTypeMacro** %otmacro, align 8, !dbg !3527
  %tobool = icmp ne %struct.wmOperatorTypeMacro* %3, null, !dbg !3529
  br i1 %tobool, label %for.body, label %for.end, !dbg !3529

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot_macro, metadata !3530, metadata !DIExpression()), !dbg !3532
  %4 = load %struct.wmOperatorTypeMacro*, %struct.wmOperatorTypeMacro** %otmacro, align 8, !dbg !3533
  %idname = getelementptr inbounds %struct.wmOperatorTypeMacro, %struct.wmOperatorTypeMacro* %4, i32 0, i32 2, !dbg !3534
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %idname, i64 0, i64 0, !dbg !3533
  %call = call %struct.wmOperatorType* @WM_operatortype_find(i8* %arraydecay, i8 zeroext 0), !dbg !3535
  store %struct.wmOperatorType* %call, %struct.wmOperatorType** %ot_macro, align 8, !dbg !3532
  %5 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3536
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot_macro, align 8, !dbg !3538
  %call1 = call i32 @WM_operator_poll(%struct.bContext* %5, %struct.wmOperatorType* %6), !dbg !3539
  %cmp = icmp eq i32 0, %call1, !dbg !3540
  br i1 %cmp, label %if.then, label %if.end, !dbg !3541

if.then:                                          ; preds = %for.body
  store i32 0, i32* %retval, align 4, !dbg !3542
  br label %return, !dbg !3542

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !3543

for.inc:                                          ; preds = %if.end
  %7 = load %struct.wmOperatorTypeMacro*, %struct.wmOperatorTypeMacro** %otmacro, align 8, !dbg !3544
  %next = getelementptr inbounds %struct.wmOperatorTypeMacro, %struct.wmOperatorTypeMacro* %7, i32 0, i32 0, !dbg !3545
  %8 = load %struct.wmOperatorTypeMacro*, %struct.wmOperatorTypeMacro** %next, align 8, !dbg !3545
  store %struct.wmOperatorTypeMacro* %8, %struct.wmOperatorTypeMacro** %otmacro, align 8, !dbg !3546
  br label %for.cond, !dbg !3547, !llvm.loop !3548

for.end:                                          ; preds = %for.cond
  %9 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3550
  %pyop_poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %9, i32 0, i32 17, !dbg !3552
  %pyop_poll2 = bitcast {}** %pyop_poll to i32 (%struct.bContext*, %struct.wmOperatorType*)**, !dbg !3552
  %10 = load i32 (%struct.bContext*, %struct.wmOperatorType*)*, i32 (%struct.bContext*, %struct.wmOperatorType*)** %pyop_poll2, align 8, !dbg !3552
  %tobool3 = icmp ne i32 (%struct.bContext*, %struct.wmOperatorType*)* %10, null, !dbg !3550
  br i1 %tobool3, label %if.then4, label %if.else, !dbg !3553

if.then4:                                         ; preds = %for.end
  %11 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3554
  %pyop_poll5 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %11, i32 0, i32 17, !dbg !3555
  %pyop_poll6 = bitcast {}** %pyop_poll5 to i32 (%struct.bContext*, %struct.wmOperatorType*)**, !dbg !3555
  %12 = load i32 (%struct.bContext*, %struct.wmOperatorType*)*, i32 (%struct.bContext*, %struct.wmOperatorType*)** %pyop_poll6, align 8, !dbg !3555
  %13 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3556
  %14 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3557
  %call7 = call i32 %12(%struct.bContext* %13, %struct.wmOperatorType* %14), !dbg !3554
  store i32 %call7, i32* %retval, align 4, !dbg !3558
  br label %return, !dbg !3558

if.else:                                          ; preds = %for.end
  %15 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3559
  %poll = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %15, i32 0, i32 9, !dbg !3561
  %16 = load i32 (%struct.bContext*)*, i32 (%struct.bContext*)** %poll, align 8, !dbg !3561
  %tobool8 = icmp ne i32 (%struct.bContext*)* %16, null, !dbg !3559
  br i1 %tobool8, label %if.then9, label %if.end12, !dbg !3562

if.then9:                                         ; preds = %if.else
  %17 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3563
  %poll10 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %17, i32 0, i32 9, !dbg !3564
  %18 = load i32 (%struct.bContext*)*, i32 (%struct.bContext*)** %poll10, align 8, !dbg !3564
  %19 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3565
  %call11 = call i32 %18(%struct.bContext* %19), !dbg !3563
  store i32 %call11, i32* %retval, align 4, !dbg !3566
  br label %return, !dbg !3566

if.end12:                                         ; preds = %if.else
  br label %if.end13

if.end13:                                         ; preds = %if.end12
  store i32 1, i32* %retval, align 4, !dbg !3567
  br label %return, !dbg !3567

return:                                           ; preds = %if.end13, %if.then9, %if.then4, %if.then
  %20 = load i32, i32* %retval, align 4, !dbg !3568
  ret i32 %20, !dbg !3568
}

declare dso_local %struct.wmOperatorType* @WM_operatortype_find(i8*, i8 zeroext) #3

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @WM_operator_poll_context(%struct.bContext* %C, %struct.wmOperatorType* %ot, i16 signext %context) #0 !dbg !3569 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  %context.addr = alloca i16, align 2
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !3572, metadata !DIExpression()), !dbg !3573
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !3574, metadata !DIExpression()), !dbg !3575
  store i16 %context, i16* %context.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %context.addr, metadata !3576, metadata !DIExpression()), !dbg !3577
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3578
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3579
  %2 = load i16, i16* %context.addr, align 2, !dbg !3580
  %call = call i32 @wm_operator_call_internal(%struct.bContext* %0, %struct.wmOperatorType* %1, %struct.PointerRNA* null, %struct.ReportList* null, i16 signext %2, i8 zeroext 1), !dbg !3581
  ret i32 %call, !dbg !3582
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @wm_operator_call_internal(%struct.bContext* %C, %struct.wmOperatorType* %ot, %struct.PointerRNA* %properties, %struct.ReportList* %reports, i16 signext %context, i8 zeroext %poll_only) #0 !dbg !3583 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  %properties.addr = alloca %struct.PointerRNA*, align 8
  %reports.addr = alloca %struct.ReportList*, align 8
  %context.addr = alloca i16, align 2
  %poll_only.addr = alloca i8, align 1
  %event = alloca %struct.wmEvent*, align 8
  %retval1 = alloca i32, align 4
  %window = alloca %struct.wmWindow*, align 8
  %ar = alloca %struct.ARegion*, align 8
  %area = alloca %struct.ScrArea*, align 8
  %type = alloca i32, align 4
  %ar1 = alloca %struct.ARegion*, align 8
  %ar39 = alloca %struct.ARegion*, align 8
  %ar43 = alloca %struct.ARegion*, align 8
  %area45 = alloca %struct.ScrArea*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !3588, metadata !DIExpression()), !dbg !3589
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !3590, metadata !DIExpression()), !dbg !3591
  store %struct.PointerRNA* %properties, %struct.PointerRNA** %properties.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %properties.addr, metadata !3592, metadata !DIExpression()), !dbg !3593
  store %struct.ReportList* %reports, %struct.ReportList** %reports.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ReportList** %reports.addr, metadata !3594, metadata !DIExpression()), !dbg !3595
  store i16 %context, i16* %context.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %context.addr, metadata !3596, metadata !DIExpression()), !dbg !3597
  store i8 %poll_only, i8* %poll_only.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %poll_only.addr, metadata !3598, metadata !DIExpression()), !dbg !3599
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event, metadata !3600, metadata !DIExpression()), !dbg !3601
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !3602, metadata !DIExpression()), !dbg !3603
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3604
  call void @CTX_wm_operator_poll_msg_set(%struct.bContext* %0, i8* null), !dbg !3605
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3606
  %tobool = icmp ne %struct.wmOperatorType* %1, null, !dbg !3606
  br i1 %tobool, label %land.lhs.true, label %if.end51, !dbg !3608

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3609
  %tobool2 = icmp ne %struct.bContext* %2, null, !dbg !3609
  br i1 %tobool2, label %if.then, label %if.end51, !dbg !3610

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.wmWindow** %window, metadata !3611, metadata !DIExpression()), !dbg !3613
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3614
  %call = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %3), !dbg !3615
  store %struct.wmWindow* %call, %struct.wmWindow** %window, align 8, !dbg !3613
  %4 = load i16, i16* %context.addr, align 2, !dbg !3616
  %conv = sext i16 %4 to i32, !dbg !3616
  switch i32 %conv, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb
    i32 4, label %sw.bb
    i32 5, label %sw.bb
  ], !dbg !3617

sw.bb:                                            ; preds = %if.then, %if.then, %if.then, %if.then
  %5 = load %struct.wmWindow*, %struct.wmWindow** %window, align 8, !dbg !3618
  %cmp = icmp eq %struct.wmWindow* %5, null, !dbg !3621
  br i1 %cmp, label %if.then4, label %if.else, !dbg !3622

if.then4:                                         ; preds = %sw.bb
  %6 = load i8, i8* %poll_only.addr, align 1, !dbg !3623
  %tobool5 = icmp ne i8 %6, 0, !dbg !3623
  br i1 %tobool5, label %if.then6, label %if.end, !dbg !3626

if.then6:                                         ; preds = %if.then4
  %7 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3627
  call void @CTX_wm_operator_poll_msg_set(%struct.bContext* %7, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.21, i64 0, i64 0)), !dbg !3629
  br label %if.end, !dbg !3630

if.end:                                           ; preds = %if.then6, %if.then4
  store i32 0, i32* %retval, align 4, !dbg !3631
  br label %return, !dbg !3631

if.else:                                          ; preds = %sw.bb
  %8 = load %struct.wmWindow*, %struct.wmWindow** %window, align 8, !dbg !3632
  %eventstate = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %8, i32 0, i32 21, !dbg !3634
  %9 = load %struct.wmEvent*, %struct.wmEvent** %eventstate, align 8, !dbg !3634
  store %struct.wmEvent* %9, %struct.wmEvent** %event, align 8, !dbg !3635
  br label %if.end7

if.end7:                                          ; preds = %if.else
  br label %sw.epilog, !dbg !3636

sw.default:                                       ; preds = %if.then
  store %struct.wmEvent* null, %struct.wmEvent** %event, align 8, !dbg !3637
  br label %sw.epilog, !dbg !3638

sw.epilog:                                        ; preds = %sw.default, %if.end7
  %10 = load i16, i16* %context.addr, align 2, !dbg !3639
  %conv8 = sext i16 %10 to i32, !dbg !3639
  switch i32 %conv8, label %sw.epilog50 [
    i32 7, label %sw.bb9
    i32 1, label %sw.bb9
    i32 8, label %sw.bb9
    i32 2, label %sw.bb9
    i32 9, label %sw.bb9
    i32 3, label %sw.bb9
    i32 10, label %sw.bb38
    i32 4, label %sw.bb38
    i32 11, label %sw.bb42
    i32 5, label %sw.bb42
    i32 6, label %sw.bb48
    i32 0, label %sw.bb48
  ], !dbg !3640

sw.bb9:                                           ; preds = %sw.epilog, %sw.epilog, %sw.epilog, %sw.epilog, %sw.epilog, %sw.epilog
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar, metadata !3641, metadata !DIExpression()), !dbg !3644
  %11 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3645
  %call10 = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %11), !dbg !3646
  store %struct.ARegion* %call10, %struct.ARegion** %ar, align 8, !dbg !3644
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %area, metadata !3647, metadata !DIExpression()), !dbg !3648
  %12 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3649
  %call11 = call %struct.ScrArea* @CTX_wm_area(%struct.bContext* %12), !dbg !3650
  store %struct.ScrArea* %call11, %struct.ScrArea** %area, align 8, !dbg !3648
  call void @llvm.dbg.declare(metadata i32* %type, metadata !3651, metadata !DIExpression()), !dbg !3652
  store i32 0, i32* %type, align 4, !dbg !3652
  %13 = load i16, i16* %context.addr, align 2, !dbg !3653
  %conv12 = sext i16 %13 to i32, !dbg !3653
  switch i32 %conv12, label %sw.default16 [
    i32 8, label %sw.bb13
    i32 2, label %sw.bb13
    i32 9, label %sw.bb14
    i32 3, label %sw.bb14
    i32 7, label %sw.bb15
    i32 1, label %sw.bb15
  ], !dbg !3654

sw.bb13:                                          ; preds = %sw.bb9, %sw.bb9
  store i32 2, i32* %type, align 4, !dbg !3655
  br label %sw.epilog17, !dbg !3657

sw.bb14:                                          ; preds = %sw.bb9, %sw.bb9
  store i32 7, i32* %type, align 4, !dbg !3658
  br label %sw.epilog17, !dbg !3659

sw.bb15:                                          ; preds = %sw.bb9, %sw.bb9
  br label %sw.default16, !dbg !3659

sw.default16:                                     ; preds = %sw.bb9, %sw.bb15
  store i32 0, i32* %type, align 4, !dbg !3660
  br label %sw.epilog17, !dbg !3661

sw.epilog17:                                      ; preds = %sw.default16, %sw.bb14, %sw.bb13
  %14 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !3662
  %tobool18 = icmp ne %struct.ARegion* %14, null, !dbg !3662
  br i1 %tobool18, label %land.lhs.true19, label %land.lhs.true23, !dbg !3664

land.lhs.true19:                                  ; preds = %sw.epilog17
  %15 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !3665
  %regiontype = getelementptr inbounds %struct.ARegion, %struct.ARegion* %15, i32 0, i32 8, !dbg !3666
  %16 = load i16, i16* %regiontype, align 2, !dbg !3666
  %conv20 = sext i16 %16 to i32, !dbg !3665
  %17 = load i32, i32* %type, align 4, !dbg !3667
  %cmp21 = icmp eq i32 %conv20, %17, !dbg !3668
  br i1 %cmp21, label %if.end36, label %land.lhs.true23, !dbg !3669

land.lhs.true23:                                  ; preds = %land.lhs.true19, %sw.epilog17
  %18 = load %struct.ScrArea*, %struct.ScrArea** %area, align 8, !dbg !3670
  %tobool24 = icmp ne %struct.ScrArea* %18, null, !dbg !3670
  br i1 %tobool24, label %if.then25, label %if.end36, !dbg !3671

if.then25:                                        ; preds = %land.lhs.true23
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar1, metadata !3672, metadata !DIExpression()), !dbg !3674
  %19 = load i32, i32* %type, align 4, !dbg !3675
  %cmp26 = icmp eq i32 %19, 0, !dbg !3677
  br i1 %cmp26, label %if.then28, label %if.else30, !dbg !3678

if.then28:                                        ; preds = %if.then25
  %20 = load %struct.ScrArea*, %struct.ScrArea** %area, align 8, !dbg !3679
  %call29 = call %struct.ARegion* @BKE_area_find_region_active_win(%struct.ScrArea* %20), !dbg !3681
  store %struct.ARegion* %call29, %struct.ARegion** %ar1, align 8, !dbg !3682
  br label %if.end32, !dbg !3683

if.else30:                                        ; preds = %if.then25
  %21 = load %struct.ScrArea*, %struct.ScrArea** %area, align 8, !dbg !3684
  %22 = load i32, i32* %type, align 4, !dbg !3686
  %call31 = call %struct.ARegion* @BKE_area_find_region_type(%struct.ScrArea* %21, i32 %22), !dbg !3687
  store %struct.ARegion* %call31, %struct.ARegion** %ar1, align 8, !dbg !3688
  br label %if.end32

if.end32:                                         ; preds = %if.else30, %if.then28
  %23 = load %struct.ARegion*, %struct.ARegion** %ar1, align 8, !dbg !3689
  %tobool33 = icmp ne %struct.ARegion* %23, null, !dbg !3689
  br i1 %tobool33, label %if.then34, label %if.end35, !dbg !3691

if.then34:                                        ; preds = %if.end32
  %24 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3692
  %25 = load %struct.ARegion*, %struct.ARegion** %ar1, align 8, !dbg !3693
  call void @CTX_wm_region_set(%struct.bContext* %24, %struct.ARegion* %25), !dbg !3694
  br label %if.end35, !dbg !3694

if.end35:                                         ; preds = %if.then34, %if.end32
  br label %if.end36, !dbg !3695

if.end36:                                         ; preds = %if.end35, %land.lhs.true23, %land.lhs.true19
  %26 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3696
  %27 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3697
  %28 = load %struct.wmEvent*, %struct.wmEvent** %event, align 8, !dbg !3698
  %29 = load %struct.PointerRNA*, %struct.PointerRNA** %properties.addr, align 8, !dbg !3699
  %30 = load %struct.ReportList*, %struct.ReportList** %reports.addr, align 8, !dbg !3700
  %31 = load i8, i8* %poll_only.addr, align 1, !dbg !3701
  %call37 = call i32 @wm_operator_invoke(%struct.bContext* %26, %struct.wmOperatorType* %27, %struct.wmEvent* %28, %struct.PointerRNA* %29, %struct.ReportList* %30, i8 zeroext %31), !dbg !3702
  store i32 %call37, i32* %retval1, align 4, !dbg !3703
  %32 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3704
  %33 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !3705
  call void @CTX_wm_region_set(%struct.bContext* %32, %struct.ARegion* %33), !dbg !3706
  %34 = load i32, i32* %retval1, align 4, !dbg !3707
  store i32 %34, i32* %retval, align 4, !dbg !3708
  br label %return, !dbg !3708

sw.bb38:                                          ; preds = %sw.epilog, %sw.epilog
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar39, metadata !3709, metadata !DIExpression()), !dbg !3711
  %35 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3712
  %call40 = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %35), !dbg !3713
  store %struct.ARegion* %call40, %struct.ARegion** %ar39, align 8, !dbg !3711
  %36 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3714
  call void @CTX_wm_region_set(%struct.bContext* %36, %struct.ARegion* null), !dbg !3715
  %37 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3716
  %38 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3717
  %39 = load %struct.wmEvent*, %struct.wmEvent** %event, align 8, !dbg !3718
  %40 = load %struct.PointerRNA*, %struct.PointerRNA** %properties.addr, align 8, !dbg !3719
  %41 = load %struct.ReportList*, %struct.ReportList** %reports.addr, align 8, !dbg !3720
  %42 = load i8, i8* %poll_only.addr, align 1, !dbg !3721
  %call41 = call i32 @wm_operator_invoke(%struct.bContext* %37, %struct.wmOperatorType* %38, %struct.wmEvent* %39, %struct.PointerRNA* %40, %struct.ReportList* %41, i8 zeroext %42), !dbg !3722
  store i32 %call41, i32* %retval1, align 4, !dbg !3723
  %43 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3724
  %44 = load %struct.ARegion*, %struct.ARegion** %ar39, align 8, !dbg !3725
  call void @CTX_wm_region_set(%struct.bContext* %43, %struct.ARegion* %44), !dbg !3726
  %45 = load i32, i32* %retval1, align 4, !dbg !3727
  store i32 %45, i32* %retval, align 4, !dbg !3728
  br label %return, !dbg !3728

sw.bb42:                                          ; preds = %sw.epilog, %sw.epilog
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar43, metadata !3729, metadata !DIExpression()), !dbg !3731
  %46 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3732
  %call44 = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %46), !dbg !3733
  store %struct.ARegion* %call44, %struct.ARegion** %ar43, align 8, !dbg !3731
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %area45, metadata !3734, metadata !DIExpression()), !dbg !3735
  %47 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3736
  %call46 = call %struct.ScrArea* @CTX_wm_area(%struct.bContext* %47), !dbg !3737
  store %struct.ScrArea* %call46, %struct.ScrArea** %area45, align 8, !dbg !3735
  %48 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3738
  call void @CTX_wm_region_set(%struct.bContext* %48, %struct.ARegion* null), !dbg !3739
  %49 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3740
  call void @CTX_wm_area_set(%struct.bContext* %49, %struct.ScrArea* null), !dbg !3741
  %50 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3742
  %51 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3743
  %52 = load %struct.wmEvent*, %struct.wmEvent** %event, align 8, !dbg !3744
  %53 = load %struct.PointerRNA*, %struct.PointerRNA** %properties.addr, align 8, !dbg !3745
  %54 = load %struct.ReportList*, %struct.ReportList** %reports.addr, align 8, !dbg !3746
  %55 = load i8, i8* %poll_only.addr, align 1, !dbg !3747
  %call47 = call i32 @wm_operator_invoke(%struct.bContext* %50, %struct.wmOperatorType* %51, %struct.wmEvent* %52, %struct.PointerRNA* %53, %struct.ReportList* %54, i8 zeroext %55), !dbg !3748
  store i32 %call47, i32* %retval1, align 4, !dbg !3749
  %56 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3750
  %57 = load %struct.ScrArea*, %struct.ScrArea** %area45, align 8, !dbg !3751
  call void @CTX_wm_area_set(%struct.bContext* %56, %struct.ScrArea* %57), !dbg !3752
  %58 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3753
  %59 = load %struct.ARegion*, %struct.ARegion** %ar43, align 8, !dbg !3754
  call void @CTX_wm_region_set(%struct.bContext* %58, %struct.ARegion* %59), !dbg !3755
  %60 = load i32, i32* %retval1, align 4, !dbg !3756
  store i32 %60, i32* %retval, align 4, !dbg !3757
  br label %return, !dbg !3757

sw.bb48:                                          ; preds = %sw.epilog, %sw.epilog
  %61 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3758
  %62 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !3759
  %63 = load %struct.wmEvent*, %struct.wmEvent** %event, align 8, !dbg !3760
  %64 = load %struct.PointerRNA*, %struct.PointerRNA** %properties.addr, align 8, !dbg !3761
  %65 = load %struct.ReportList*, %struct.ReportList** %reports.addr, align 8, !dbg !3762
  %66 = load i8, i8* %poll_only.addr, align 1, !dbg !3763
  %call49 = call i32 @wm_operator_invoke(%struct.bContext* %61, %struct.wmOperatorType* %62, %struct.wmEvent* %63, %struct.PointerRNA* %64, %struct.ReportList* %65, i8 zeroext %66), !dbg !3764
  store i32 %call49, i32* %retval, align 4, !dbg !3765
  br label %return, !dbg !3765

sw.epilog50:                                      ; preds = %sw.epilog
  br label %if.end51, !dbg !3766

if.end51:                                         ; preds = %sw.epilog50, %land.lhs.true, %entry
  store i32 0, i32* %retval, align 4, !dbg !3767
  br label %return, !dbg !3767

return:                                           ; preds = %if.end51, %sw.bb48, %sw.bb42, %sw.bb38, %if.end36, %if.end
  %67 = load i32, i32* %retval, align 4, !dbg !3768
  ret i32 %67, !dbg !3768
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @WM_operator_region_active_win_set(%struct.bContext* %C) #0 !dbg !3769 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %sa = alloca %struct.ScrArea*, align 8
  %ar = alloca %struct.ARegion*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !3770, metadata !DIExpression()), !dbg !3771
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa, metadata !3772, metadata !DIExpression()), !dbg !3773
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3774
  %call = call %struct.ScrArea* @CTX_wm_area(%struct.bContext* %0), !dbg !3775
  store %struct.ScrArea* %call, %struct.ScrArea** %sa, align 8, !dbg !3773
  %1 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !3776
  %tobool = icmp ne %struct.ScrArea* %1, null, !dbg !3776
  br i1 %tobool, label %if.then, label %if.end7, !dbg !3778

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar, metadata !3779, metadata !DIExpression()), !dbg !3781
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3782
  %call1 = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %2), !dbg !3783
  store %struct.ARegion* %call1, %struct.ARegion** %ar, align 8, !dbg !3781
  %3 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !3784
  %tobool2 = icmp ne %struct.ARegion* %3, null, !dbg !3784
  br i1 %tobool2, label %land.lhs.true, label %if.end, !dbg !3786

land.lhs.true:                                    ; preds = %if.then
  %4 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !3787
  %regiontype = getelementptr inbounds %struct.ARegion, %struct.ARegion* %4, i32 0, i32 8, !dbg !3788
  %5 = load i16, i16* %regiontype, align 2, !dbg !3788
  %conv = sext i16 %5 to i32, !dbg !3787
  %cmp = icmp eq i32 %conv, 0, !dbg !3789
  br i1 %cmp, label %if.then4, label %if.end, !dbg !3790

if.then4:                                         ; preds = %land.lhs.true
  %6 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !3791
  %regionbase = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %6, i32 0, i32 20, !dbg !3793
  %7 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !3794
  %8 = bitcast %struct.ARegion* %7 to i8*, !dbg !3794
  %call5 = call i32 @BLI_findindex(%struct.ListBase* %regionbase, i8* %8), !dbg !3795
  %conv6 = trunc i32 %call5 to i16, !dbg !3795
  %9 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !3796
  %region_active_win = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %9, i32 0, i32 15, !dbg !3797
  store i16 %conv6, i16* %region_active_win, align 4, !dbg !3798
  br label %if.end, !dbg !3799

if.end:                                           ; preds = %if.then4, %land.lhs.true, %if.then
  br label %if.end7, !dbg !3800

if.end7:                                          ; preds = %if.end, %entry
  ret void, !dbg !3801
}

declare dso_local %struct.ScrArea* @CTX_wm_area(%struct.bContext*) #3

declare dso_local i32 @BLI_findindex(%struct.ListBase*, i8*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @WM_report(%struct.bContext* %C, i32 %type, i8* %message) #0 !dbg !3802 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %type.addr = alloca i32, align 4
  %message.addr = alloca i8*, align 8
  %reports = alloca %struct.ReportList, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !3806, metadata !DIExpression()), !dbg !3807
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !3808, metadata !DIExpression()), !dbg !3809
  store i8* %message, i8** %message.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %message.addr, metadata !3810, metadata !DIExpression()), !dbg !3811
  call void @llvm.dbg.declare(metadata %struct.ReportList* %reports, metadata !3812, metadata !DIExpression()), !dbg !3813
  call void @BKE_reports_init(%struct.ReportList* %reports, i32 2), !dbg !3814
  %0 = load i32, i32* %type.addr, align 4, !dbg !3815
  %1 = load i8*, i8** %message.addr, align 8, !dbg !3816
  call void @BKE_report(%struct.ReportList* %reports, i32 %0, i8* %1), !dbg !3817
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3818
  call void @wm_add_reports(%struct.bContext* %2, %struct.ReportList* %reports), !dbg !3819
  call void @BKE_reports_clear(%struct.ReportList* %reports), !dbg !3820
  ret void, !dbg !3821
}

declare dso_local void @BKE_reports_init(%struct.ReportList*, i32) #3

declare dso_local void @BKE_report(%struct.ReportList*, i32, i8*) #3

; Function Attrs: noinline nounwind uwtable
define internal void @wm_add_reports(%struct.bContext* %C, %struct.ReportList* %reports) #0 !dbg !3822 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %reports.addr = alloca %struct.ReportList*, align 8
  %wm = alloca %struct.wmWindowManager*, align 8
  %wm_reports = alloca %struct.ReportList*, align 8
  %rti = alloca %struct.ReportTimerInfo*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !3825, metadata !DIExpression()), !dbg !3826
  store %struct.ReportList* %reports, %struct.ReportList** %reports.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ReportList** %reports.addr, metadata !3827, metadata !DIExpression()), !dbg !3828
  %0 = load %struct.ReportList*, %struct.ReportList** %reports.addr, align 8, !dbg !3829
  %list = getelementptr inbounds %struct.ReportList, %struct.ReportList* %0, i32 0, i32 0, !dbg !3831
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %list, i32 0, i32 0, !dbg !3832
  %1 = load i8*, i8** %first, align 8, !dbg !3832
  %tobool = icmp ne i8* %1, null, !dbg !3829
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !3833

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.ReportList*, %struct.ReportList** %reports.addr, align 8, !dbg !3834
  %flag = getelementptr inbounds %struct.ReportList, %struct.ReportList* %2, i32 0, i32 3, !dbg !3835
  %3 = load i32, i32* %flag, align 8, !dbg !3835
  %and = and i32 %3, 8, !dbg !3836
  %cmp = icmp eq i32 %and, 0, !dbg !3837
  br i1 %cmp, label %if.then, label %if.end, !dbg !3838

if.then:                                          ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.wmWindowManager** %wm, metadata !3839, metadata !DIExpression()), !dbg !3841
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3842
  %call = call %struct.wmWindowManager* @CTX_wm_manager(%struct.bContext* %4), !dbg !3843
  store %struct.wmWindowManager* %call, %struct.wmWindowManager** %wm, align 8, !dbg !3841
  call void @llvm.dbg.declare(metadata %struct.ReportList** %wm_reports, metadata !3844, metadata !DIExpression()), !dbg !3845
  %5 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3846
  %call1 = call %struct.ReportList* @CTX_wm_reports(%struct.bContext* %5), !dbg !3847
  store %struct.ReportList* %call1, %struct.ReportList** %wm_reports, align 8, !dbg !3845
  call void @llvm.dbg.declare(metadata %struct.ReportTimerInfo** %rti, metadata !3848, metadata !DIExpression()), !dbg !3856
  %6 = load %struct.ReportList*, %struct.ReportList** %wm_reports, align 8, !dbg !3857
  %list2 = getelementptr inbounds %struct.ReportList, %struct.ReportList* %6, i32 0, i32 0, !dbg !3858
  %7 = load %struct.ReportList*, %struct.ReportList** %reports.addr, align 8, !dbg !3859
  %list3 = getelementptr inbounds %struct.ReportList, %struct.ReportList* %7, i32 0, i32 0, !dbg !3860
  call void @BLI_movelisttolist(%struct.ListBase* %list2, %struct.ListBase* %list3), !dbg !3861
  %8 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !3862
  %9 = load %struct.ReportList*, %struct.ReportList** %wm_reports, align 8, !dbg !3863
  %reporttimer = getelementptr inbounds %struct.ReportList, %struct.ReportList* %9, i32 0, i32 5, !dbg !3864
  %10 = load %struct.wmTimer*, %struct.wmTimer** %reporttimer, align 8, !dbg !3864
  call void @WM_event_remove_timer(%struct.wmWindowManager* %8, %struct.wmWindow* null, %struct.wmTimer* %10), !dbg !3865
  %11 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !3866
  %12 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3867
  %call4 = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %12), !dbg !3868
  %call5 = call %struct.wmTimer* @WM_event_add_timer(%struct.wmWindowManager* %11, %struct.wmWindow* %call4, i32 278, double 5.000000e-02), !dbg !3869
  %13 = load %struct.ReportList*, %struct.ReportList** %wm_reports, align 8, !dbg !3870
  %reporttimer6 = getelementptr inbounds %struct.ReportList, %struct.ReportList* %13, i32 0, i32 5, !dbg !3871
  store %struct.wmTimer* %call5, %struct.wmTimer** %reporttimer6, align 8, !dbg !3872
  %14 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !3873
  %call7 = call i8* %14(i64 20, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.20, i64 0, i64 0)), !dbg !3873
  %15 = bitcast i8* %call7 to %struct.ReportTimerInfo*, !dbg !3873
  store %struct.ReportTimerInfo* %15, %struct.ReportTimerInfo** %rti, align 8, !dbg !3874
  %16 = load %struct.ReportTimerInfo*, %struct.ReportTimerInfo** %rti, align 8, !dbg !3875
  %17 = bitcast %struct.ReportTimerInfo* %16 to i8*, !dbg !3875
  %18 = load %struct.ReportList*, %struct.ReportList** %wm_reports, align 8, !dbg !3876
  %reporttimer8 = getelementptr inbounds %struct.ReportList, %struct.ReportList* %18, i32 0, i32 5, !dbg !3877
  %19 = load %struct.wmTimer*, %struct.wmTimer** %reporttimer8, align 8, !dbg !3877
  %customdata = getelementptr inbounds %struct.wmTimer, %struct.wmTimer* %19, i32 0, i32 5, !dbg !3878
  store i8* %17, i8** %customdata, align 8, !dbg !3879
  br label %if.end, !dbg !3880

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  ret void, !dbg !3881
}

declare dso_local void @BKE_reports_clear(%struct.ReportList*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @WM_reportf(%struct.bContext* %C, i32 %type, i8* %format, ...) #0 !dbg !3882 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %type.addr = alloca i32, align 4
  %format.addr = alloca i8*, align 8
  %ds = alloca %struct.DynStr*, align 8
  %args = alloca [1 x %struct.__va_list_tag], align 16
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !3885, metadata !DIExpression()), !dbg !3886
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !3887, metadata !DIExpression()), !dbg !3888
  store i8* %format, i8** %format.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %format.addr, metadata !3889, metadata !DIExpression()), !dbg !3890
  call void @llvm.dbg.declare(metadata %struct.DynStr** %ds, metadata !3891, metadata !DIExpression()), !dbg !3896
  call void @llvm.dbg.declare(metadata [1 x %struct.__va_list_tag]* %args, metadata !3897, metadata !DIExpression()), !dbg !3910
  %call = call %struct.DynStr* @BLI_dynstr_new(), !dbg !3911
  store %struct.DynStr* %call, %struct.DynStr** %ds, align 8, !dbg !3912
  %arraydecay = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %args, i64 0, i64 0, !dbg !3913
  %arraydecay1 = bitcast %struct.__va_list_tag* %arraydecay to i8*, !dbg !3913
  call void @llvm.va_start(i8* %arraydecay1), !dbg !3913
  %0 = load %struct.DynStr*, %struct.DynStr** %ds, align 8, !dbg !3914
  %1 = load i8*, i8** %format.addr, align 8, !dbg !3915
  %arraydecay2 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %args, i64 0, i64 0, !dbg !3916
  call void @BLI_dynstr_vappendf(%struct.DynStr* %0, i8* %1, %struct.__va_list_tag* %arraydecay2), !dbg !3917
  %arraydecay3 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %args, i64 0, i64 0, !dbg !3918
  %arraydecay34 = bitcast %struct.__va_list_tag* %arraydecay3 to i8*, !dbg !3918
  call void @llvm.va_end(i8* %arraydecay34), !dbg !3918
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3919
  %3 = load i32, i32* %type.addr, align 4, !dbg !3920
  %4 = load %struct.DynStr*, %struct.DynStr** %ds, align 8, !dbg !3921
  %call5 = call i8* @BLI_dynstr_get_cstring(%struct.DynStr* %4), !dbg !3922
  call void @WM_report(%struct.bContext* %2, i32 %3, i8* %call5), !dbg !3923
  %5 = load %struct.DynStr*, %struct.DynStr** %ds, align 8, !dbg !3924
  call void @BLI_dynstr_free(%struct.DynStr* %5), !dbg !3925
  ret void, !dbg !3926
}

declare dso_local %struct.DynStr* @BLI_dynstr_new() #3

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #4

declare dso_local void @BLI_dynstr_vappendf(%struct.DynStr*, i8*, %struct.__va_list_tag*) #3

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #4

declare dso_local i8* @BLI_dynstr_get_cstring(%struct.DynStr*) #3

declare dso_local void @BLI_dynstr_free(%struct.DynStr*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @WM_operator_call_ex(%struct.bContext* %C, %struct.wmOperator* %op, i8 zeroext %store) #0 !dbg !3927 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %store.addr = alloca i8, align 1
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !3930, metadata !DIExpression()), !dbg !3931
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !3932, metadata !DIExpression()), !dbg !3933
  store i8 %store, i8* %store.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %store.addr, metadata !3934, metadata !DIExpression()), !dbg !3935
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3936
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !3937
  %2 = load i8, i8* %store.addr, align 1, !dbg !3938
  %call = call i32 @wm_operator_exec(%struct.bContext* %0, %struct.wmOperator* %1, i8 zeroext 0, i8 zeroext %2), !dbg !3939
  ret i32 %call, !dbg !3940
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @wm_operator_exec(%struct.bContext* %C, %struct.wmOperator* %op, i8 zeroext %repeat, i8 zeroext %store) #0 !dbg !3941 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %repeat.addr = alloca i8, align 1
  %store.addr = alloca i8, align 1
  %wm = alloca %struct.wmWindowManager*, align 8
  %retval1 = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !3944, metadata !DIExpression()), !dbg !3945
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !3946, metadata !DIExpression()), !dbg !3947
  store i8 %repeat, i8* %repeat.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %repeat.addr, metadata !3948, metadata !DIExpression()), !dbg !3949
  store i8 %store, i8* %store.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %store.addr, metadata !3950, metadata !DIExpression()), !dbg !3951
  call void @llvm.dbg.declare(metadata %struct.wmWindowManager** %wm, metadata !3952, metadata !DIExpression()), !dbg !3953
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3954
  %call = call %struct.wmWindowManager* @CTX_wm_manager(%struct.bContext* %0), !dbg !3955
  store %struct.wmWindowManager* %call, %struct.wmWindowManager** %wm, align 8, !dbg !3953
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !3956, metadata !DIExpression()), !dbg !3957
  store i32 2, i32* %retval1, align 4, !dbg !3957
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3958
  call void @CTX_wm_operator_poll_msg_set(%struct.bContext* %1, i8* null), !dbg !3959
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !3960
  %cmp = icmp eq %struct.wmOperator* %2, null, !dbg !3962
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !3963

lor.lhs.false:                                    ; preds = %entry
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !3964
  %type = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %3, i32 0, i32 4, !dbg !3965
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type, align 8, !dbg !3965
  %cmp2 = icmp eq %struct.wmOperatorType* %4, null, !dbg !3966
  br i1 %cmp2, label %if.then, label %if.end, !dbg !3967

if.then:                                          ; preds = %lor.lhs.false, %entry
  %5 = load i32, i32* %retval1, align 4, !dbg !3968
  store i32 %5, i32* %retval, align 4, !dbg !3969
  br label %return, !dbg !3969

if.end:                                           ; preds = %lor.lhs.false
  %6 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3970
  %7 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !3972
  %type3 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %7, i32 0, i32 4, !dbg !3973
  %8 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type3, align 8, !dbg !3973
  %call4 = call i32 @WM_operator_poll(%struct.bContext* %6, %struct.wmOperatorType* %8), !dbg !3974
  %cmp5 = icmp eq i32 0, %call4, !dbg !3975
  br i1 %cmp5, label %if.then6, label %if.end7, !dbg !3976

if.then6:                                         ; preds = %if.end
  %9 = load i32, i32* %retval1, align 4, !dbg !3977
  store i32 %9, i32* %retval, align 4, !dbg !3978
  br label %return, !dbg !3978

if.end7:                                          ; preds = %if.end
  %10 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !3979
  %type8 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %10, i32 0, i32 4, !dbg !3981
  %11 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type8, align 8, !dbg !3981
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %11, i32 0, i32 4, !dbg !3982
  %12 = load i32 (%struct.bContext*, %struct.wmOperator*)*, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !3982
  %tobool = icmp ne i32 (%struct.bContext*, %struct.wmOperator*)* %12, null, !dbg !3979
  br i1 %tobool, label %if.then9, label %if.end28, !dbg !3983

if.then9:                                         ; preds = %if.end7
  %13 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !3984
  %type10 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %13, i32 0, i32 4, !dbg !3987
  %14 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type10, align 8, !dbg !3987
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %14, i32 0, i32 19, !dbg !3988
  %15 = load i16, i16* %flag, align 8, !dbg !3988
  %conv = sext i16 %15 to i32, !dbg !3984
  %and = and i32 %conv, 2, !dbg !3989
  %tobool11 = icmp ne i32 %and, 0, !dbg !3989
  br i1 %tobool11, label %if.then12, label %if.end13, !dbg !3990

if.then12:                                        ; preds = %if.then9
  %16 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !3991
  %op_undo_depth = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %16, i32 0, i32 6, !dbg !3992
  %17 = load i16, i16* %op_undo_depth, align 2, !dbg !3993
  %inc = add i16 %17, 1, !dbg !3993
  store i16 %inc, i16* %op_undo_depth, align 2, !dbg !3993
  br label %if.end13, !dbg !3991

if.end13:                                         ; preds = %if.then12, %if.then9
  %18 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !3994
  %type14 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %18, i32 0, i32 4, !dbg !3995
  %19 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type14, align 8, !dbg !3995
  %exec15 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %19, i32 0, i32 4, !dbg !3996
  %20 = load i32 (%struct.bContext*, %struct.wmOperator*)*, i32 (%struct.bContext*, %struct.wmOperator*)** %exec15, align 8, !dbg !3996
  %21 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !3997
  %22 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !3998
  %call16 = call i32 %20(%struct.bContext* %21, %struct.wmOperator* %22), !dbg !3994
  store i32 %call16, i32* %retval1, align 4, !dbg !3999
  %23 = load i32, i32* %retval1, align 4, !dbg !4000
  %24 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4001
  %type17 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %24, i32 0, i32 4, !dbg !4003
  %25 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type17, align 8, !dbg !4003
  %flag18 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %25, i32 0, i32 19, !dbg !4004
  %26 = load i16, i16* %flag18, align 8, !dbg !4004
  %conv19 = sext i16 %26 to i32, !dbg !4001
  %and20 = and i32 %conv19, 2, !dbg !4005
  %tobool21 = icmp ne i32 %and20, 0, !dbg !4005
  br i1 %tobool21, label %land.lhs.true, label %if.end27, !dbg !4006

land.lhs.true:                                    ; preds = %if.end13
  %27 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4007
  %call22 = call %struct.wmWindowManager* @CTX_wm_manager(%struct.bContext* %27), !dbg !4008
  %28 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !4009
  %cmp23 = icmp eq %struct.wmWindowManager* %call22, %28, !dbg !4010
  br i1 %cmp23, label %if.then25, label %if.end27, !dbg !4011

if.then25:                                        ; preds = %land.lhs.true
  %29 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !4012
  %op_undo_depth26 = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %29, i32 0, i32 6, !dbg !4013
  %30 = load i16, i16* %op_undo_depth26, align 2, !dbg !4014
  %dec = add i16 %30, -1, !dbg !4014
  store i16 %dec, i16* %op_undo_depth26, align 2, !dbg !4014
  br label %if.end27, !dbg !4012

if.end27:                                         ; preds = %if.then25, %land.lhs.true, %if.end13
  br label %if.end28, !dbg !4015

if.end28:                                         ; preds = %if.end27, %if.end7
  %31 = load i32, i32* %retval1, align 4, !dbg !4016
  %and29 = and i32 %31, 6, !dbg !4018
  %tobool30 = icmp ne i32 %and29, 0, !dbg !4018
  br i1 %tobool30, label %if.then31, label %if.end32, !dbg !4019

if.then31:                                        ; preds = %if.end28
  %32 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4020
  %33 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4021
  %34 = load i32, i32* %retval1, align 4, !dbg !4022
  call void @wm_operator_reports(%struct.bContext* %32, %struct.wmOperator* %33, i32 %34, i8 zeroext 0), !dbg !4023
  br label %if.end32, !dbg !4023

if.end32:                                         ; preds = %if.then31, %if.end28
  %35 = load i32, i32* %retval1, align 4, !dbg !4024
  %and33 = and i32 %35, 4, !dbg !4026
  %tobool34 = icmp ne i32 %and33, 0, !dbg !4026
  br i1 %tobool34, label %if.then35, label %if.else, !dbg !4027

if.then35:                                        ; preds = %if.end32
  %36 = load i8, i8* %store.addr, align 1, !dbg !4028
  %tobool36 = icmp ne i8 %36, 0, !dbg !4028
  br i1 %tobool36, label %if.then37, label %if.end45, !dbg !4031

if.then37:                                        ; preds = %if.then35
  %37 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !4032
  %op_undo_depth38 = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %37, i32 0, i32 6, !dbg !4035
  %38 = load i16, i16* %op_undo_depth38, align 2, !dbg !4035
  %conv39 = sext i16 %38 to i32, !dbg !4032
  %cmp40 = icmp eq i32 %conv39, 0, !dbg !4036
  br i1 %cmp40, label %if.then42, label %if.end44, !dbg !4037

if.then42:                                        ; preds = %if.then37
  %39 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4038
  %call43 = call zeroext i8 @WM_operator_last_properties_store(%struct.wmOperator* %39), !dbg !4040
  br label %if.end44, !dbg !4041

if.end44:                                         ; preds = %if.then42, %if.then37
  br label %if.end45, !dbg !4042

if.end45:                                         ; preds = %if.end44, %if.then35
  %40 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4043
  %41 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4044
  %42 = load i8, i8* %repeat.addr, align 1, !dbg !4045
  call void @wm_operator_finished(%struct.bContext* %40, %struct.wmOperator* %41, i8 zeroext %42), !dbg !4046
  br label %if.end51, !dbg !4047

if.else:                                          ; preds = %if.end32
  %43 = load i8, i8* %repeat.addr, align 1, !dbg !4048
  %conv46 = zext i8 %43 to i32, !dbg !4048
  %cmp47 = icmp eq i32 %conv46, 0, !dbg !4050
  br i1 %cmp47, label %if.then49, label %if.end50, !dbg !4051

if.then49:                                        ; preds = %if.else
  %44 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4052
  call void @WM_operator_free(%struct.wmOperator* %44), !dbg !4054
  br label %if.end50, !dbg !4055

if.end50:                                         ; preds = %if.then49, %if.else
  br label %if.end51

if.end51:                                         ; preds = %if.end50, %if.end45
  %45 = load i32, i32* %retval1, align 4, !dbg !4056
  %or = or i32 %45, 16, !dbg !4057
  store i32 %or, i32* %retval, align 4, !dbg !4058
  br label %return, !dbg !4058

return:                                           ; preds = %if.end51, %if.then6, %if.then
  %46 = load i32, i32* %retval, align 4, !dbg !4059
  ret i32 %46, !dbg !4059
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @WM_operator_call(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !4060 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4063, metadata !DIExpression()), !dbg !4064
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !4065, metadata !DIExpression()), !dbg !4066
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4067
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4068
  %call = call i32 @WM_operator_call_ex(%struct.bContext* %0, %struct.wmOperator* %1, i8 zeroext 0), !dbg !4069
  ret i32 %call, !dbg !4070
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @WM_operator_call_notest(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !4071 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4072, metadata !DIExpression()), !dbg !4073
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !4074, metadata !DIExpression()), !dbg !4075
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4076
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4077
  %call = call i32 @wm_operator_exec_notest(%struct.bContext* %0, %struct.wmOperator* %1), !dbg !4078
  ret i32 %call, !dbg !4079
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @wm_operator_exec_notest(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !4080 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %retval1 = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4081, metadata !DIExpression()), !dbg !4082
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !4083, metadata !DIExpression()), !dbg !4084
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !4085, metadata !DIExpression()), !dbg !4086
  store i32 2, i32* %retval1, align 4, !dbg !4086
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4087
  %cmp = icmp eq %struct.wmOperator* %0, null, !dbg !4089
  br i1 %cmp, label %if.then, label %lor.lhs.false, !dbg !4090

lor.lhs.false:                                    ; preds = %entry
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4091
  %type = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %1, i32 0, i32 4, !dbg !4092
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type, align 8, !dbg !4092
  %cmp2 = icmp eq %struct.wmOperatorType* %2, null, !dbg !4093
  br i1 %cmp2, label %if.then, label %lor.lhs.false3, !dbg !4094

lor.lhs.false3:                                   ; preds = %lor.lhs.false
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4095
  %type4 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %3, i32 0, i32 4, !dbg !4096
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type4, align 8, !dbg !4096
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 4, !dbg !4097
  %5 = load i32 (%struct.bContext*, %struct.wmOperator*)*, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !4097
  %cmp5 = icmp eq i32 (%struct.bContext*, %struct.wmOperator*)* %5, null, !dbg !4098
  br i1 %cmp5, label %if.then, label %if.end, !dbg !4099

if.then:                                          ; preds = %lor.lhs.false3, %lor.lhs.false, %entry
  %6 = load i32, i32* %retval1, align 4, !dbg !4100
  store i32 %6, i32* %retval, align 4, !dbg !4101
  br label %return, !dbg !4101

if.end:                                           ; preds = %lor.lhs.false3
  %7 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4102
  %type6 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %7, i32 0, i32 4, !dbg !4103
  %8 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type6, align 8, !dbg !4103
  %exec7 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %8, i32 0, i32 4, !dbg !4104
  %9 = load i32 (%struct.bContext*, %struct.wmOperator*)*, i32 (%struct.bContext*, %struct.wmOperator*)** %exec7, align 8, !dbg !4104
  %10 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4105
  %11 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4106
  %call = call i32 %9(%struct.bContext* %10, %struct.wmOperator* %11), !dbg !4102
  store i32 %call, i32* %retval1, align 4, !dbg !4107
  %12 = load i32, i32* %retval1, align 4, !dbg !4108
  %13 = load i32, i32* %retval1, align 4, !dbg !4109
  store i32 %13, i32* %retval, align 4, !dbg !4110
  br label %return, !dbg !4110

return:                                           ; preds = %if.end, %if.then
  %14 = load i32, i32* %retval, align 4, !dbg !4111
  ret i32 %14, !dbg !4111
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @WM_operator_repeat(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !4112 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4113, metadata !DIExpression()), !dbg !4114
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !4115, metadata !DIExpression()), !dbg !4116
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4117
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4118
  %call = call i32 @wm_operator_exec(%struct.bContext* %0, %struct.wmOperator* %1, i8 zeroext 1, i8 zeroext 1), !dbg !4119
  ret i32 %call, !dbg !4120
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @WM_operator_repeat_check(%struct.bContext* %UNUSED_C, %struct.wmOperator* %op) #0 !dbg !4121 {
entry:
  %retval = alloca i8, align 1
  %UNUSED_C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %otmacro = alloca %struct.wmOperatorTypeMacro*, align 8
  %otm = alloca %struct.wmOperatorType*, align 8
  store %struct.bContext* %UNUSED_C, %struct.bContext** %UNUSED_C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %UNUSED_C.addr, metadata !4124, metadata !DIExpression()), !dbg !4125
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !4126, metadata !DIExpression()), !dbg !4127
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4128
  %type = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %0, i32 0, i32 4, !dbg !4130
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type, align 8, !dbg !4130
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 4, !dbg !4131
  %2 = load i32 (%struct.bContext*, %struct.wmOperator*)*, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !4131
  %cmp = icmp ne i32 (%struct.bContext*, %struct.wmOperator*)* %2, null, !dbg !4132
  br i1 %cmp, label %if.then, label %if.else, !dbg !4133

if.then:                                          ; preds = %entry
  store i8 1, i8* %retval, align 1, !dbg !4134
  br label %return, !dbg !4134

if.else:                                          ; preds = %entry
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4136
  %opm = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %3, i32 0, i32 10, !dbg !4138
  %4 = load %struct.wmOperator*, %struct.wmOperator** %opm, align 8, !dbg !4138
  %tobool = icmp ne %struct.wmOperator* %4, null, !dbg !4136
  br i1 %tobool, label %if.then1, label %if.end9, !dbg !4139

if.then1:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.wmOperatorTypeMacro** %otmacro, metadata !4140, metadata !DIExpression()), !dbg !4142
  %5 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4143
  %opm2 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %5, i32 0, i32 10, !dbg !4145
  %6 = load %struct.wmOperator*, %struct.wmOperator** %opm2, align 8, !dbg !4145
  %type3 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %6, i32 0, i32 4, !dbg !4146
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type3, align 8, !dbg !4146
  %macro = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %7, i32 0, i32 14, !dbg !4147
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %macro, i32 0, i32 0, !dbg !4148
  %8 = load i8*, i8** %first, align 8, !dbg !4148
  %9 = bitcast i8* %8 to %struct.wmOperatorTypeMacro*, !dbg !4143
  store %struct.wmOperatorTypeMacro* %9, %struct.wmOperatorTypeMacro** %otmacro, align 8, !dbg !4149
  br label %for.cond, !dbg !4150

for.cond:                                         ; preds = %for.inc, %if.then1
  %10 = load %struct.wmOperatorTypeMacro*, %struct.wmOperatorTypeMacro** %otmacro, align 8, !dbg !4151
  %tobool4 = icmp ne %struct.wmOperatorTypeMacro* %10, null, !dbg !4153
  br i1 %tobool4, label %for.body, label %for.end, !dbg !4153

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %otm, metadata !4154, metadata !DIExpression()), !dbg !4156
  %11 = load %struct.wmOperatorTypeMacro*, %struct.wmOperatorTypeMacro** %otmacro, align 8, !dbg !4157
  %idname = getelementptr inbounds %struct.wmOperatorTypeMacro, %struct.wmOperatorTypeMacro* %11, i32 0, i32 2, !dbg !4158
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %idname, i64 0, i64 0, !dbg !4157
  %call = call %struct.wmOperatorType* @WM_operatortype_find(i8* %arraydecay, i8 zeroext 0), !dbg !4159
  store %struct.wmOperatorType* %call, %struct.wmOperatorType** %otm, align 8, !dbg !4156
  %12 = load %struct.wmOperatorType*, %struct.wmOperatorType** %otm, align 8, !dbg !4160
  %tobool5 = icmp ne %struct.wmOperatorType* %12, null, !dbg !4160
  br i1 %tobool5, label %land.lhs.true, label %if.end, !dbg !4162

land.lhs.true:                                    ; preds = %for.body
  %13 = load %struct.wmOperatorType*, %struct.wmOperatorType** %otm, align 8, !dbg !4163
  %exec6 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %13, i32 0, i32 4, !dbg !4164
  %14 = load i32 (%struct.bContext*, %struct.wmOperator*)*, i32 (%struct.bContext*, %struct.wmOperator*)** %exec6, align 8, !dbg !4164
  %cmp7 = icmp eq i32 (%struct.bContext*, %struct.wmOperator*)* %14, null, !dbg !4165
  br i1 %cmp7, label %if.then8, label %if.end, !dbg !4166

if.then8:                                         ; preds = %land.lhs.true
  store i8 0, i8* %retval, align 1, !dbg !4167
  br label %return, !dbg !4167

if.end:                                           ; preds = %land.lhs.true, %for.body
  br label %for.inc, !dbg !4169

for.inc:                                          ; preds = %if.end
  %15 = load %struct.wmOperatorTypeMacro*, %struct.wmOperatorTypeMacro** %otmacro, align 8, !dbg !4170
  %next = getelementptr inbounds %struct.wmOperatorTypeMacro, %struct.wmOperatorTypeMacro* %15, i32 0, i32 0, !dbg !4171
  %16 = load %struct.wmOperatorTypeMacro*, %struct.wmOperatorTypeMacro** %next, align 8, !dbg !4171
  store %struct.wmOperatorTypeMacro* %16, %struct.wmOperatorTypeMacro** %otmacro, align 8, !dbg !4172
  br label %for.cond, !dbg !4173, !llvm.loop !4174

for.end:                                          ; preds = %for.cond
  store i8 1, i8* %retval, align 1, !dbg !4176
  br label %return, !dbg !4176

if.end9:                                          ; preds = %if.else
  br label %if.end10

if.end10:                                         ; preds = %if.end9
  store i8 0, i8* %retval, align 1, !dbg !4177
  br label %return, !dbg !4177

return:                                           ; preds = %if.end10, %for.end, %if.then8, %if.then
  %17 = load i8, i8* %retval, align 1, !dbg !4178
  ret i8 %17, !dbg !4178
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @WM_operator_last_properties_init(%struct.wmOperator* %op) #0 !dbg !4179 {
entry:
  %op.addr = alloca %struct.wmOperator*, align 8
  %changed = alloca i8, align 1
  %val = alloca %union.IDPropertyTemplate, align 8
  %replaceprops = alloca %struct.IDProperty*, align 8
  %iterprop = alloca %struct.PropertyRNA*, align 8
  %rna_macro_iter = alloca %struct.CollectionPropertyIterator, align 8
  %itemptr = alloca %struct.PointerRNA, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  %identifier = alloca i8*, align 8
  %idp_src = alloca %struct.IDProperty*, align 8
  %idp_dst = alloca %struct.IDProperty*, align 8
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !4182, metadata !DIExpression()), !dbg !4183
  call void @llvm.dbg.declare(metadata i8* %changed, metadata !4184, metadata !DIExpression()), !dbg !4185
  store i8 0, i8* %changed, align 1, !dbg !4185
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4186
  %type = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %0, i32 0, i32 4, !dbg !4188
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type, align 8, !dbg !4188
  %last_properties = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 12, !dbg !4189
  %2 = load %struct.IDProperty*, %struct.IDProperty** %last_properties, align 8, !dbg !4189
  %tobool = icmp ne %struct.IDProperty* %2, null, !dbg !4186
  br i1 %tobool, label %if.then, label %if.end28, !dbg !4190

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %union.IDPropertyTemplate* %val, metadata !4191, metadata !DIExpression()), !dbg !4217
  %3 = bitcast %union.IDPropertyTemplate* %val to i8*, !dbg !4217
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 bitcast ({ i32, [12 x i8] }* @__const.WM_operator_last_properties_init.val to i8*), i64 16, i1 false), !dbg !4217
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %replaceprops, metadata !4218, metadata !DIExpression()), !dbg !4219
  %call = call %struct.IDProperty* @IDP_New(i32 6, %union.IDPropertyTemplate* %val, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i64 0, i64 0)), !dbg !4220
  store %struct.IDProperty* %call, %struct.IDProperty** %replaceprops, align 8, !dbg !4219
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %iterprop, metadata !4221, metadata !DIExpression()), !dbg !4222
  %4 = load i32, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 16), align 4, !dbg !4223
  %and = and i32 %4, 32, !dbg !4225
  %tobool1 = icmp ne i32 %and, 0, !dbg !4225
  br i1 %tobool1, label %if.then2, label %if.end, !dbg !4226

if.then2:                                         ; preds = %if.then
  %5 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4227
  %type3 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %5, i32 0, i32 4, !dbg !4229
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type3, align 8, !dbg !4229
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %6, i32 0, i32 1, !dbg !4230
  %7 = load i8*, i8** %idname, align 8, !dbg !4230
  %call4 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @__func__.WM_operator_last_properties_init, i64 0, i64 0), i8* %7), !dbg !4231
  br label %if.end, !dbg !4232

if.end:                                           ; preds = %if.then2, %if.then
  %8 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4233
  %type5 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %8, i32 0, i32 4, !dbg !4234
  %9 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type5, align 8, !dbg !4234
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %9, i32 0, i32 11, !dbg !4235
  %10 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !4235
  %call6 = call %struct.PropertyRNA* @RNA_struct_iterator_property(%struct.StructRNA* %10), !dbg !4236
  store %struct.PropertyRNA* %call6, %struct.PropertyRNA** %iterprop, align 8, !dbg !4237
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyIterator* %rna_macro_iter, metadata !4238, metadata !DIExpression()), !dbg !4281
  %11 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4282
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %11, i32 0, i32 7, !dbg !4282
  %12 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !4282
  %13 = load %struct.PropertyRNA*, %struct.PropertyRNA** %iterprop, align 8, !dbg !4282
  call void @RNA_property_collection_begin(%struct.PointerRNA* %12, %struct.PropertyRNA* %13, %struct.CollectionPropertyIterator* %rna_macro_iter), !dbg !4282
  br label %for.cond, !dbg !4282

for.cond:                                         ; preds = %for.inc, %if.end
  %valid = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %rna_macro_iter, i32 0, i32 7, !dbg !4284
  %14 = load i32, i32* %valid, align 8, !dbg !4284
  %tobool7 = icmp ne i32 %14, 0, !dbg !4282
  br i1 %tobool7, label %for.body, label %for.end, !dbg !4282

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %itemptr, metadata !4286, metadata !DIExpression()), !dbg !4288
  %ptr8 = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %rna_macro_iter, i32 0, i32 6, !dbg !4288
  %15 = bitcast %struct.PointerRNA* %itemptr to i8*, !dbg !4288
  %16 = bitcast %struct.PointerRNA* %ptr8 to i8*, !dbg !4288
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 24, i1 false), !dbg !4288
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !4289, metadata !DIExpression()), !dbg !4291
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %itemptr, i32 0, i32 2, !dbg !4292
  %17 = load i8*, i8** %data, align 8, !dbg !4292
  %18 = bitcast i8* %17 to %struct.PropertyRNA*, !dbg !4293
  store %struct.PropertyRNA* %18, %struct.PropertyRNA** %prop, align 8, !dbg !4291
  %19 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !4294
  %call9 = call i32 @RNA_property_flag(%struct.PropertyRNA* %19), !dbg !4296
  %and10 = and i32 %call9, 268435456, !dbg !4297
  %cmp = icmp eq i32 %and10, 0, !dbg !4298
  br i1 %cmp, label %if.then11, label %if.end27, !dbg !4299

if.then11:                                        ; preds = %for.body
  %20 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4300
  %ptr12 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %20, i32 0, i32 7, !dbg !4303
  %21 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr12, align 8, !dbg !4303
  %22 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !4304
  %call13 = call zeroext i8 @RNA_property_is_set(%struct.PointerRNA* %21, %struct.PropertyRNA* %22), !dbg !4305
  %tobool14 = icmp ne i8 %call13, 0, !dbg !4305
  br i1 %tobool14, label %if.end26, label %if.then15, !dbg !4306

if.then15:                                        ; preds = %if.then11
  call void @llvm.dbg.declare(metadata i8** %identifier, metadata !4307, metadata !DIExpression()), !dbg !4309
  %23 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !4310
  %call16 = call i8* @RNA_property_identifier(%struct.PropertyRNA* %23), !dbg !4311
  store i8* %call16, i8** %identifier, align 8, !dbg !4309
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %idp_src, metadata !4312, metadata !DIExpression()), !dbg !4313
  %24 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4314
  %type17 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %24, i32 0, i32 4, !dbg !4315
  %25 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type17, align 8, !dbg !4315
  %last_properties18 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %25, i32 0, i32 12, !dbg !4316
  %26 = load %struct.IDProperty*, %struct.IDProperty** %last_properties18, align 8, !dbg !4316
  %27 = load i8*, i8** %identifier, align 8, !dbg !4317
  %call19 = call %struct.IDProperty* @IDP_GetPropertyFromGroup(%struct.IDProperty* %26, i8* %27), !dbg !4318
  store %struct.IDProperty* %call19, %struct.IDProperty** %idp_src, align 8, !dbg !4313
  %28 = load %struct.IDProperty*, %struct.IDProperty** %idp_src, align 8, !dbg !4319
  %tobool20 = icmp ne %struct.IDProperty* %28, null, !dbg !4319
  br i1 %tobool20, label %if.then21, label %if.end25, !dbg !4321

if.then21:                                        ; preds = %if.then15
  call void @llvm.dbg.declare(metadata %struct.IDProperty** %idp_dst, metadata !4322, metadata !DIExpression()), !dbg !4324
  %29 = load %struct.IDProperty*, %struct.IDProperty** %idp_src, align 8, !dbg !4325
  %call22 = call %struct.IDProperty* @IDP_CopyProperty(%struct.IDProperty* %29), !dbg !4326
  store %struct.IDProperty* %call22, %struct.IDProperty** %idp_dst, align 8, !dbg !4324
  %30 = load %struct.IDProperty*, %struct.IDProperty** %idp_dst, align 8, !dbg !4327
  %flag = getelementptr inbounds %struct.IDProperty, %struct.IDProperty* %30, i32 0, i32 4, !dbg !4328
  %31 = load i16, i16* %flag, align 2, !dbg !4329
  %conv = sext i16 %31 to i32, !dbg !4329
  %or = or i32 %conv, 128, !dbg !4329
  %conv23 = trunc i32 %or to i16, !dbg !4329
  store i16 %conv23, i16* %flag, align 2, !dbg !4329
  %32 = load %struct.IDProperty*, %struct.IDProperty** %replaceprops, align 8, !dbg !4330
  %33 = load %struct.IDProperty*, %struct.IDProperty** %idp_dst, align 8, !dbg !4331
  %call24 = call zeroext i8 @IDP_AddToGroup(%struct.IDProperty* %32, %struct.IDProperty* %33), !dbg !4332
  store i8 1, i8* %changed, align 1, !dbg !4333
  br label %if.end25, !dbg !4334

if.end25:                                         ; preds = %if.then21, %if.then15
  br label %if.end26, !dbg !4335

if.end26:                                         ; preds = %if.end25, %if.then11
  br label %if.end27, !dbg !4336

if.end27:                                         ; preds = %if.end26, %for.body
  br label %for.inc, !dbg !4337

for.inc:                                          ; preds = %if.end27
  call void @RNA_property_collection_next(%struct.CollectionPropertyIterator* %rna_macro_iter), !dbg !4284
  br label %for.cond, !dbg !4284, !llvm.loop !4338

for.end:                                          ; preds = %for.cond
  call void @RNA_property_collection_end(%struct.CollectionPropertyIterator* %rna_macro_iter), !dbg !4340
  %34 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4341
  %properties = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %34, i32 0, i32 3, !dbg !4342
  %35 = load %struct.IDProperty*, %struct.IDProperty** %properties, align 8, !dbg !4342
  %36 = load %struct.IDProperty*, %struct.IDProperty** %replaceprops, align 8, !dbg !4343
  call void @IDP_MergeGroup(%struct.IDProperty* %35, %struct.IDProperty* %36, i8 zeroext 1), !dbg !4344
  %37 = load %struct.IDProperty*, %struct.IDProperty** %replaceprops, align 8, !dbg !4345
  call void @IDP_FreeProperty(%struct.IDProperty* %37), !dbg !4346
  %38 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4347
  %39 = load %struct.IDProperty*, %struct.IDProperty** %replaceprops, align 8, !dbg !4348
  %40 = bitcast %struct.IDProperty* %39 to i8*, !dbg !4348
  call void %38(i8* %40), !dbg !4347
  br label %if.end28, !dbg !4349

if.end28:                                         ; preds = %for.end, %entry
  %41 = load i8, i8* %changed, align 1, !dbg !4350
  ret i8 %41, !dbg !4351
}

declare dso_local %struct.IDProperty* @IDP_New(i32, %union.IDPropertyTemplate*, i8*) #3

declare dso_local %struct.PropertyRNA* @RNA_struct_iterator_property(%struct.StructRNA*) #3

declare dso_local void @RNA_property_collection_begin(%struct.PointerRNA*, %struct.PropertyRNA*, %struct.CollectionPropertyIterator*) #3

declare dso_local i32 @RNA_property_flag(%struct.PropertyRNA*) #3

declare dso_local zeroext i8 @RNA_property_is_set(%struct.PointerRNA*, %struct.PropertyRNA*) #3

declare dso_local i8* @RNA_property_identifier(%struct.PropertyRNA*) #3

declare dso_local %struct.IDProperty* @IDP_GetPropertyFromGroup(%struct.IDProperty*, i8*) #3

declare dso_local %struct.IDProperty* @IDP_CopyProperty(%struct.IDProperty*) #3

declare dso_local zeroext i8 @IDP_AddToGroup(%struct.IDProperty*, %struct.IDProperty*) #3

declare dso_local void @RNA_property_collection_next(%struct.CollectionPropertyIterator*) #3

declare dso_local void @RNA_property_collection_end(%struct.CollectionPropertyIterator*) #3

declare dso_local void @IDP_MergeGroup(%struct.IDProperty*, %struct.IDProperty*, i8 zeroext) #3

declare dso_local void @IDP_FreeProperty(%struct.IDProperty*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @WM_operator_last_properties_store(%struct.wmOperator* %op) #0 !dbg !4352 {
entry:
  %retval = alloca i8, align 1
  %op.addr = alloca %struct.wmOperator*, align 8
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !4353, metadata !DIExpression()), !dbg !4354
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4355
  %type = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %0, i32 0, i32 4, !dbg !4357
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type, align 8, !dbg !4357
  %last_properties = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 12, !dbg !4358
  %2 = load %struct.IDProperty*, %struct.IDProperty** %last_properties, align 8, !dbg !4358
  %tobool = icmp ne %struct.IDProperty* %2, null, !dbg !4355
  br i1 %tobool, label %if.then, label %if.end, !dbg !4359

if.then:                                          ; preds = %entry
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4360
  %type1 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %3, i32 0, i32 4, !dbg !4362
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type1, align 8, !dbg !4362
  %last_properties2 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %4, i32 0, i32 12, !dbg !4363
  %5 = load %struct.IDProperty*, %struct.IDProperty** %last_properties2, align 8, !dbg !4363
  call void @IDP_FreeProperty(%struct.IDProperty* %5), !dbg !4364
  %6 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4365
  %7 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4366
  %type3 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %7, i32 0, i32 4, !dbg !4367
  %8 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type3, align 8, !dbg !4367
  %last_properties4 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %8, i32 0, i32 12, !dbg !4368
  %9 = load %struct.IDProperty*, %struct.IDProperty** %last_properties4, align 8, !dbg !4368
  %10 = bitcast %struct.IDProperty* %9 to i8*, !dbg !4366
  call void %6(i8* %10), !dbg !4365
  %11 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4369
  %type5 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %11, i32 0, i32 4, !dbg !4370
  %12 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type5, align 8, !dbg !4370
  %last_properties6 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %12, i32 0, i32 12, !dbg !4371
  store %struct.IDProperty* null, %struct.IDProperty** %last_properties6, align 8, !dbg !4372
  br label %if.end, !dbg !4373

if.end:                                           ; preds = %if.then, %entry
  %13 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4374
  %properties = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %13, i32 0, i32 3, !dbg !4376
  %14 = load %struct.IDProperty*, %struct.IDProperty** %properties, align 8, !dbg !4376
  %tobool7 = icmp ne %struct.IDProperty* %14, null, !dbg !4374
  br i1 %tobool7, label %if.then8, label %if.else, !dbg !4377

if.then8:                                         ; preds = %if.end
  %15 = load i32, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 16), align 4, !dbg !4378
  %and = and i32 %15, 32, !dbg !4381
  %tobool9 = icmp ne i32 %and, 0, !dbg !4381
  br i1 %tobool9, label %if.then10, label %if.end12, !dbg !4382

if.then10:                                        ; preds = %if.then8
  %16 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4383
  %type11 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %16, i32 0, i32 4, !dbg !4385
  %17 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type11, align 8, !dbg !4385
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %17, i32 0, i32 1, !dbg !4386
  %18 = load i8*, i8** %idname, align 8, !dbg !4386
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @__func__.WM_operator_last_properties_store, i64 0, i64 0), i8* %18), !dbg !4387
  br label %if.end12, !dbg !4388

if.end12:                                         ; preds = %if.then10, %if.then8
  %19 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4389
  %properties13 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %19, i32 0, i32 3, !dbg !4390
  %20 = load %struct.IDProperty*, %struct.IDProperty** %properties13, align 8, !dbg !4390
  %call14 = call %struct.IDProperty* @IDP_CopyProperty(%struct.IDProperty* %20), !dbg !4391
  %21 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !4392
  %type15 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %21, i32 0, i32 4, !dbg !4393
  %22 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type15, align 8, !dbg !4393
  %last_properties16 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %22, i32 0, i32 12, !dbg !4394
  store %struct.IDProperty* %call14, %struct.IDProperty** %last_properties16, align 8, !dbg !4395
  store i8 1, i8* %retval, align 1, !dbg !4396
  br label %return, !dbg !4396

if.else:                                          ; preds = %if.end
  store i8 0, i8* %retval, align 1, !dbg !4397
  br label %return, !dbg !4397

return:                                           ; preds = %if.else, %if.end12
  %23 = load i8, i8* %retval, align 1, !dbg !4399
  ret i8 %23, !dbg !4399
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @WM_operator_name_call_ptr(%struct.bContext* %C, %struct.wmOperatorType* %ot, i16 signext %context, %struct.PointerRNA* %properties) #0 !dbg !4400 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  %context.addr = alloca i16, align 2
  %properties.addr = alloca %struct.PointerRNA*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4403, metadata !DIExpression()), !dbg !4404
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !4405, metadata !DIExpression()), !dbg !4406
  store i16 %context, i16* %context.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %context.addr, metadata !4407, metadata !DIExpression()), !dbg !4408
  store %struct.PointerRNA* %properties, %struct.PointerRNA** %properties.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %properties.addr, metadata !4409, metadata !DIExpression()), !dbg !4410
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4411
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4412
  %2 = load %struct.PointerRNA*, %struct.PointerRNA** %properties.addr, align 8, !dbg !4413
  %3 = load i16, i16* %context.addr, align 2, !dbg !4414
  %call = call i32 @wm_operator_call_internal(%struct.bContext* %0, %struct.wmOperatorType* %1, %struct.PointerRNA* %2, %struct.ReportList* null, i16 signext %3, i8 zeroext 0), !dbg !4415
  ret i32 %call, !dbg !4416
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @WM_operator_name_call(%struct.bContext* %C, i8* %opstring, i16 signext %context, %struct.PointerRNA* %properties) #0 !dbg !4417 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %opstring.addr = alloca i8*, align 8
  %context.addr = alloca i16, align 2
  %properties.addr = alloca %struct.PointerRNA*, align 8
  %ot = alloca %struct.wmOperatorType*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4420, metadata !DIExpression()), !dbg !4421
  store i8* %opstring, i8** %opstring.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %opstring.addr, metadata !4422, metadata !DIExpression()), !dbg !4423
  store i16 %context, i16* %context.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %context.addr, metadata !4424, metadata !DIExpression()), !dbg !4425
  store %struct.PointerRNA* %properties, %struct.PointerRNA** %properties.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %properties.addr, metadata !4426, metadata !DIExpression()), !dbg !4427
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot, metadata !4428, metadata !DIExpression()), !dbg !4429
  %0 = load i8*, i8** %opstring.addr, align 8, !dbg !4430
  %call = call %struct.wmOperatorType* @WM_operatortype_find(i8* %0, i8 zeroext 0), !dbg !4431
  store %struct.wmOperatorType* %call, %struct.wmOperatorType** %ot, align 8, !dbg !4429
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !4432
  %tobool = icmp ne %struct.wmOperatorType* %1, null, !dbg !4432
  br i1 %tobool, label %if.then, label %if.end, !dbg !4434

if.then:                                          ; preds = %entry
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4435
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !4437
  %4 = load i16, i16* %context.addr, align 2, !dbg !4438
  %5 = load %struct.PointerRNA*, %struct.PointerRNA** %properties.addr, align 8, !dbg !4439
  %call1 = call i32 @WM_operator_name_call_ptr(%struct.bContext* %2, %struct.wmOperatorType* %3, i16 signext %4, %struct.PointerRNA* %5), !dbg !4440
  store i32 %call1, i32* %retval, align 4, !dbg !4441
  br label %return, !dbg !4441

if.end:                                           ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !4442
  br label %return, !dbg !4442

return:                                           ; preds = %if.end, %if.then
  %6 = load i32, i32* %retval, align 4, !dbg !4443
  ret i32 %6, !dbg !4443
}

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @WM_operator_call_py(%struct.bContext* %C, %struct.wmOperatorType* %ot, i16 signext %context, %struct.PointerRNA* %properties, %struct.ReportList* %reports, i8 zeroext %is_undo) #0 !dbg !4444 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  %context.addr = alloca i16, align 2
  %properties.addr = alloca %struct.PointerRNA*, align 8
  %reports.addr = alloca %struct.ReportList*, align 8
  %is_undo.addr = alloca i8, align 1
  %retval1 = alloca i32, align 4
  %wm = alloca %struct.wmWindowManager*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4447, metadata !DIExpression()), !dbg !4448
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !4449, metadata !DIExpression()), !dbg !4450
  store i16 %context, i16* %context.addr, align 2
  call void @llvm.dbg.declare(metadata i16* %context.addr, metadata !4451, metadata !DIExpression()), !dbg !4452
  store %struct.PointerRNA* %properties, %struct.PointerRNA** %properties.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %properties.addr, metadata !4453, metadata !DIExpression()), !dbg !4454
  store %struct.ReportList* %reports, %struct.ReportList** %reports.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ReportList** %reports.addr, metadata !4455, metadata !DIExpression()), !dbg !4456
  store i8 %is_undo, i8* %is_undo.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %is_undo.addr, metadata !4457, metadata !DIExpression()), !dbg !4458
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !4459, metadata !DIExpression()), !dbg !4460
  store i32 2, i32* %retval1, align 4, !dbg !4460
  call void @llvm.dbg.declare(metadata %struct.wmWindowManager** %wm, metadata !4461, metadata !DIExpression()), !dbg !4462
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4463
  %call = call %struct.wmWindowManager* @CTX_wm_manager(%struct.bContext* %0), !dbg !4464
  store %struct.wmWindowManager* %call, %struct.wmWindowManager** %wm, align 8, !dbg !4462
  %1 = load i8, i8* %is_undo.addr, align 1, !dbg !4465
  %tobool = icmp ne i8 %1, 0, !dbg !4465
  br i1 %tobool, label %if.end, label %land.lhs.true, !dbg !4467

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !4468
  %tobool2 = icmp ne %struct.wmWindowManager* %2, null, !dbg !4468
  br i1 %tobool2, label %if.then, label %if.end, !dbg !4469

if.then:                                          ; preds = %land.lhs.true
  %3 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !4470
  %op_undo_depth = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %3, i32 0, i32 6, !dbg !4471
  %4 = load i16, i16* %op_undo_depth, align 2, !dbg !4472
  %inc = add i16 %4, 1, !dbg !4472
  store i16 %inc, i16* %op_undo_depth, align 2, !dbg !4472
  br label %if.end, !dbg !4470

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %5 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4473
  %6 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !4474
  %7 = load %struct.PointerRNA*, %struct.PointerRNA** %properties.addr, align 8, !dbg !4475
  %8 = load %struct.ReportList*, %struct.ReportList** %reports.addr, align 8, !dbg !4476
  %9 = load i16, i16* %context.addr, align 2, !dbg !4477
  %call3 = call i32 @wm_operator_call_internal(%struct.bContext* %5, %struct.wmOperatorType* %6, %struct.PointerRNA* %7, %struct.ReportList* %8, i16 signext %9, i8 zeroext 0), !dbg !4478
  store i32 %call3, i32* %retval1, align 4, !dbg !4479
  %10 = load i8, i8* %is_undo.addr, align 1, !dbg !4480
  %tobool4 = icmp ne i8 %10, 0, !dbg !4480
  br i1 %tobool4, label %if.end11, label %land.lhs.true5, !dbg !4482

land.lhs.true5:                                   ; preds = %if.end
  %11 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !4483
  %tobool6 = icmp ne %struct.wmWindowManager* %11, null, !dbg !4483
  br i1 %tobool6, label %land.lhs.true7, label %if.end11, !dbg !4484

land.lhs.true7:                                   ; preds = %land.lhs.true5
  %12 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !4485
  %13 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4486
  %call8 = call %struct.wmWindowManager* @CTX_wm_manager(%struct.bContext* %13), !dbg !4487
  %cmp = icmp eq %struct.wmWindowManager* %12, %call8, !dbg !4488
  br i1 %cmp, label %if.then9, label %if.end11, !dbg !4489

if.then9:                                         ; preds = %land.lhs.true7
  %14 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !4490
  %op_undo_depth10 = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %14, i32 0, i32 6, !dbg !4491
  %15 = load i16, i16* %op_undo_depth10, align 2, !dbg !4492
  %dec = add i16 %15, -1, !dbg !4492
  store i16 %dec, i16* %op_undo_depth10, align 2, !dbg !4492
  br label %if.end11, !dbg !4490

if.end11:                                         ; preds = %if.then9, %land.lhs.true7, %land.lhs.true5, %if.end
  %16 = load i32, i32* %retval1, align 4, !dbg !4493
  ret i32 %16, !dbg !4494
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @wm_event_free_handler(%struct.wmEventHandler* %handler) #0 !dbg !4495 {
entry:
  %handler.addr = alloca %struct.wmEventHandler*, align 8
  store %struct.wmEventHandler* %handler, %struct.wmEventHandler** %handler.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEventHandler** %handler.addr, metadata !4498, metadata !DIExpression()), !dbg !4499
  %0 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !4500
  %1 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler.addr, align 8, !dbg !4501
  %2 = bitcast %struct.wmEventHandler* %1 to i8*, !dbg !4501
  call void %0(i8* %2), !dbg !4500
  ret void, !dbg !4502
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @WM_event_remove_handlers(%struct.bContext* %C, %struct.ListBase* %handlers) #0 !dbg !4503 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %handlers.addr = alloca %struct.ListBase*, align 8
  %handler = alloca %struct.wmEventHandler*, align 8
  %wm = alloca %struct.wmWindowManager*, align 8
  %area = alloca %struct.ScrArea*, align 8
  %region = alloca %struct.ARegion*, align 8
  %area30 = alloca %struct.ScrArea*, align 8
  %region32 = alloca %struct.ARegion*, align 8
  %menu = alloca %struct.ARegion*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4506, metadata !DIExpression()), !dbg !4507
  store %struct.ListBase* %handlers, %struct.ListBase** %handlers.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %handlers.addr, metadata !4508, metadata !DIExpression()), !dbg !4509
  call void @llvm.dbg.declare(metadata %struct.wmEventHandler** %handler, metadata !4510, metadata !DIExpression()), !dbg !4511
  call void @llvm.dbg.declare(metadata %struct.wmWindowManager** %wm, metadata !4512, metadata !DIExpression()), !dbg !4513
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4514
  %call = call %struct.wmWindowManager* @CTX_wm_manager(%struct.bContext* %0), !dbg !4515
  store %struct.wmWindowManager* %call, %struct.wmWindowManager** %wm, align 8, !dbg !4513
  br label %while.cond, !dbg !4516

while.cond:                                       ; preds = %if.end49, %entry
  %1 = load %struct.ListBase*, %struct.ListBase** %handlers.addr, align 8, !dbg !4517
  %call1 = call i8* @BLI_pophead(%struct.ListBase* %1), !dbg !4518
  %2 = bitcast i8* %call1 to %struct.wmEventHandler*, !dbg !4518
  store %struct.wmEventHandler* %2, %struct.wmEventHandler** %handler, align 8, !dbg !4519
  %tobool = icmp ne %struct.wmEventHandler* %2, null, !dbg !4516
  br i1 %tobool, label %while.body, label %while.end, !dbg !4516

while.body:                                       ; preds = %while.cond
  %3 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !4520
  %op = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %3, i32 0, i32 7, !dbg !4523
  %4 = load %struct.wmOperator*, %struct.wmOperator** %op, align 8, !dbg !4523
  %tobool2 = icmp ne %struct.wmOperator* %4, null, !dbg !4520
  br i1 %tobool2, label %if.then, label %if.else, !dbg !4524

if.then:                                          ; preds = %while.body
  %5 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !4525
  %op3 = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %5, i32 0, i32 7, !dbg !4528
  %6 = load %struct.wmOperator*, %struct.wmOperator** %op3, align 8, !dbg !4528
  %type = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %6, i32 0, i32 4, !dbg !4529
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type, align 8, !dbg !4529
  %cancel = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %7, i32 0, i32 7, !dbg !4530
  %8 = load void (%struct.bContext*, %struct.wmOperator*)*, void (%struct.bContext*, %struct.wmOperator*)** %cancel, align 8, !dbg !4530
  %tobool4 = icmp ne void (%struct.bContext*, %struct.wmOperator*)* %8, null, !dbg !4525
  br i1 %tobool4, label %if.then5, label %if.end25, !dbg !4531

if.then5:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %area, metadata !4532, metadata !DIExpression()), !dbg !4534
  %9 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4535
  %call6 = call %struct.ScrArea* @CTX_wm_area(%struct.bContext* %9), !dbg !4536
  store %struct.ScrArea* %call6, %struct.ScrArea** %area, align 8, !dbg !4534
  call void @llvm.dbg.declare(metadata %struct.ARegion** %region, metadata !4537, metadata !DIExpression()), !dbg !4538
  %10 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4539
  %call7 = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %10), !dbg !4540
  store %struct.ARegion* %call7, %struct.ARegion** %region, align 8, !dbg !4538
  %11 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4541
  %12 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !4542
  call void @wm_handler_op_context(%struct.bContext* %11, %struct.wmEventHandler* %12), !dbg !4543
  %13 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !4544
  %op8 = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %13, i32 0, i32 7, !dbg !4546
  %14 = load %struct.wmOperator*, %struct.wmOperator** %op8, align 8, !dbg !4546
  %type9 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %14, i32 0, i32 4, !dbg !4547
  %15 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type9, align 8, !dbg !4547
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %15, i32 0, i32 19, !dbg !4548
  %16 = load i16, i16* %flag, align 8, !dbg !4548
  %conv = sext i16 %16 to i32, !dbg !4544
  %and = and i32 %conv, 2, !dbg !4549
  %tobool10 = icmp ne i32 %and, 0, !dbg !4549
  br i1 %tobool10, label %if.then11, label %if.end, !dbg !4550

if.then11:                                        ; preds = %if.then5
  %17 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !4551
  %op_undo_depth = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %17, i32 0, i32 6, !dbg !4552
  %18 = load i16, i16* %op_undo_depth, align 2, !dbg !4553
  %inc = add i16 %18, 1, !dbg !4553
  store i16 %inc, i16* %op_undo_depth, align 2, !dbg !4553
  br label %if.end, !dbg !4551

if.end:                                           ; preds = %if.then11, %if.then5
  %19 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !4554
  %op12 = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %19, i32 0, i32 7, !dbg !4555
  %20 = load %struct.wmOperator*, %struct.wmOperator** %op12, align 8, !dbg !4555
  %type13 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %20, i32 0, i32 4, !dbg !4556
  %21 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type13, align 8, !dbg !4556
  %cancel14 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %21, i32 0, i32 7, !dbg !4557
  %22 = load void (%struct.bContext*, %struct.wmOperator*)*, void (%struct.bContext*, %struct.wmOperator*)** %cancel14, align 8, !dbg !4557
  %23 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4558
  %24 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !4559
  %op15 = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %24, i32 0, i32 7, !dbg !4560
  %25 = load %struct.wmOperator*, %struct.wmOperator** %op15, align 8, !dbg !4560
  call void %22(%struct.bContext* %23, %struct.wmOperator* %25), !dbg !4554
  %26 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !4561
  %op16 = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %26, i32 0, i32 7, !dbg !4563
  %27 = load %struct.wmOperator*, %struct.wmOperator** %op16, align 8, !dbg !4563
  %type17 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %27, i32 0, i32 4, !dbg !4564
  %28 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type17, align 8, !dbg !4564
  %flag18 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %28, i32 0, i32 19, !dbg !4565
  %29 = load i16, i16* %flag18, align 8, !dbg !4565
  %conv19 = sext i16 %29 to i32, !dbg !4561
  %and20 = and i32 %conv19, 2, !dbg !4566
  %tobool21 = icmp ne i32 %and20, 0, !dbg !4566
  br i1 %tobool21, label %if.then22, label %if.end24, !dbg !4567

if.then22:                                        ; preds = %if.end
  %30 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !4568
  %op_undo_depth23 = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %30, i32 0, i32 6, !dbg !4569
  %31 = load i16, i16* %op_undo_depth23, align 2, !dbg !4570
  %dec = add i16 %31, -1, !dbg !4570
  store i16 %dec, i16* %op_undo_depth23, align 2, !dbg !4570
  br label %if.end24, !dbg !4568

if.end24:                                         ; preds = %if.then22, %if.end
  %32 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4571
  %33 = load %struct.ScrArea*, %struct.ScrArea** %area, align 8, !dbg !4572
  call void @CTX_wm_area_set(%struct.bContext* %32, %struct.ScrArea* %33), !dbg !4573
  %34 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4574
  %35 = load %struct.ARegion*, %struct.ARegion** %region, align 8, !dbg !4575
  call void @CTX_wm_region_set(%struct.bContext* %34, %struct.ARegion* %35), !dbg !4576
  br label %if.end25, !dbg !4577

if.end25:                                         ; preds = %if.end24, %if.then
  %36 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4578
  %call26 = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %36), !dbg !4579
  call void @WM_cursor_grab_disable(%struct.wmWindow* %call26, i32* null), !dbg !4580
  %37 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !4581
  %op27 = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %37, i32 0, i32 7, !dbg !4582
  %38 = load %struct.wmOperator*, %struct.wmOperator** %op27, align 8, !dbg !4582
  call void @WM_operator_free(%struct.wmOperator* %38), !dbg !4583
  br label %if.end49, !dbg !4584

if.else:                                          ; preds = %while.body
  %39 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !4585
  %ui_remove = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %39, i32 0, i32 11, !dbg !4587
  %40 = load void (%struct.bContext*, i8*)*, void (%struct.bContext*, i8*)** %ui_remove, align 8, !dbg !4587
  %tobool28 = icmp ne void (%struct.bContext*, i8*)* %40, null, !dbg !4585
  br i1 %tobool28, label %if.then29, label %if.end48, !dbg !4588

if.then29:                                        ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %area30, metadata !4589, metadata !DIExpression()), !dbg !4591
  %41 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4592
  %call31 = call %struct.ScrArea* @CTX_wm_area(%struct.bContext* %41), !dbg !4593
  store %struct.ScrArea* %call31, %struct.ScrArea** %area30, align 8, !dbg !4591
  call void @llvm.dbg.declare(metadata %struct.ARegion** %region32, metadata !4594, metadata !DIExpression()), !dbg !4595
  %42 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4596
  %call33 = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %42), !dbg !4597
  store %struct.ARegion* %call33, %struct.ARegion** %region32, align 8, !dbg !4595
  call void @llvm.dbg.declare(metadata %struct.ARegion** %menu, metadata !4598, metadata !DIExpression()), !dbg !4599
  %43 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4600
  %call34 = call %struct.ARegion* @CTX_wm_menu(%struct.bContext* %43), !dbg !4601
  store %struct.ARegion* %call34, %struct.ARegion** %menu, align 8, !dbg !4599
  %44 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !4602
  %ui_area = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %44, i32 0, i32 13, !dbg !4604
  %45 = load %struct.ScrArea*, %struct.ScrArea** %ui_area, align 8, !dbg !4604
  %tobool35 = icmp ne %struct.ScrArea* %45, null, !dbg !4602
  br i1 %tobool35, label %if.then36, label %if.end38, !dbg !4605

if.then36:                                        ; preds = %if.then29
  %46 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4606
  %47 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !4607
  %ui_area37 = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %47, i32 0, i32 13, !dbg !4608
  %48 = load %struct.ScrArea*, %struct.ScrArea** %ui_area37, align 8, !dbg !4608
  call void @CTX_wm_area_set(%struct.bContext* %46, %struct.ScrArea* %48), !dbg !4609
  br label %if.end38, !dbg !4609

if.end38:                                         ; preds = %if.then36, %if.then29
  %49 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !4610
  %ui_region = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %49, i32 0, i32 14, !dbg !4612
  %50 = load %struct.ARegion*, %struct.ARegion** %ui_region, align 8, !dbg !4612
  %tobool39 = icmp ne %struct.ARegion* %50, null, !dbg !4610
  br i1 %tobool39, label %if.then40, label %if.end42, !dbg !4613

if.then40:                                        ; preds = %if.end38
  %51 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4614
  %52 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !4615
  %ui_region41 = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %52, i32 0, i32 14, !dbg !4616
  %53 = load %struct.ARegion*, %struct.ARegion** %ui_region41, align 8, !dbg !4616
  call void @CTX_wm_region_set(%struct.bContext* %51, %struct.ARegion* %53), !dbg !4617
  br label %if.end42, !dbg !4617

if.end42:                                         ; preds = %if.then40, %if.end38
  %54 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !4618
  %ui_menu = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %54, i32 0, i32 15, !dbg !4620
  %55 = load %struct.ARegion*, %struct.ARegion** %ui_menu, align 8, !dbg !4620
  %tobool43 = icmp ne %struct.ARegion* %55, null, !dbg !4618
  br i1 %tobool43, label %if.then44, label %if.end46, !dbg !4621

if.then44:                                        ; preds = %if.end42
  %56 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4622
  %57 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !4623
  %ui_menu45 = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %57, i32 0, i32 15, !dbg !4624
  %58 = load %struct.ARegion*, %struct.ARegion** %ui_menu45, align 8, !dbg !4624
  call void @CTX_wm_menu_set(%struct.bContext* %56, %struct.ARegion* %58), !dbg !4625
  br label %if.end46, !dbg !4625

if.end46:                                         ; preds = %if.then44, %if.end42
  %59 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !4626
  %ui_remove47 = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %59, i32 0, i32 11, !dbg !4627
  %60 = load void (%struct.bContext*, i8*)*, void (%struct.bContext*, i8*)** %ui_remove47, align 8, !dbg !4627
  %61 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4628
  %62 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !4629
  %ui_userdata = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %62, i32 0, i32 12, !dbg !4630
  %63 = load i8*, i8** %ui_userdata, align 8, !dbg !4630
  call void %60(%struct.bContext* %61, i8* %63), !dbg !4626
  %64 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4631
  %65 = load %struct.ScrArea*, %struct.ScrArea** %area30, align 8, !dbg !4632
  call void @CTX_wm_area_set(%struct.bContext* %64, %struct.ScrArea* %65), !dbg !4633
  %66 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4634
  %67 = load %struct.ARegion*, %struct.ARegion** %region32, align 8, !dbg !4635
  call void @CTX_wm_region_set(%struct.bContext* %66, %struct.ARegion* %67), !dbg !4636
  %68 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4637
  %69 = load %struct.ARegion*, %struct.ARegion** %menu, align 8, !dbg !4638
  call void @CTX_wm_menu_set(%struct.bContext* %68, %struct.ARegion* %69), !dbg !4639
  br label %if.end48, !dbg !4640

if.end48:                                         ; preds = %if.end46, %if.else
  br label %if.end49

if.end49:                                         ; preds = %if.end48, %if.end25
  %70 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !4641
  call void @wm_event_free_handler(%struct.wmEventHandler* %70), !dbg !4642
  br label %while.cond, !dbg !4516, !llvm.loop !4643

while.end:                                        ; preds = %while.cond
  ret void, !dbg !4645
}

; Function Attrs: noinline nounwind uwtable
define internal void @wm_handler_op_context(%struct.bContext* %C, %struct.wmEventHandler* %handler) #0 !dbg !4646 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %handler.addr = alloca %struct.wmEventHandler*, align 8
  %screen = alloca %struct.bScreen*, align 8
  %sa = alloca %struct.ScrArea*, align 8
  %ar = alloca %struct.ARegion*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4649, metadata !DIExpression()), !dbg !4650
  store %struct.wmEventHandler* %handler, %struct.wmEventHandler** %handler.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEventHandler** %handler.addr, metadata !4651, metadata !DIExpression()), !dbg !4652
  call void @llvm.dbg.declare(metadata %struct.bScreen** %screen, metadata !4653, metadata !DIExpression()), !dbg !4654
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4655
  %call = call %struct.bScreen* @CTX_wm_screen(%struct.bContext* %0), !dbg !4656
  store %struct.bScreen* %call, %struct.bScreen** %screen, align 8, !dbg !4654
  %1 = load %struct.bScreen*, %struct.bScreen** %screen, align 8, !dbg !4657
  %tobool = icmp ne %struct.bScreen* %1, null, !dbg !4657
  br i1 %tobool, label %land.lhs.true, label %if.end31, !dbg !4659

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler.addr, align 8, !dbg !4660
  %op = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %2, i32 0, i32 7, !dbg !4661
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op, align 8, !dbg !4661
  %tobool1 = icmp ne %struct.wmOperator* %3, null, !dbg !4660
  br i1 %tobool1, label %if.then, label %if.end31, !dbg !4662

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler.addr, align 8, !dbg !4663
  %op_area = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %4, i32 0, i32 8, !dbg !4666
  %5 = load %struct.ScrArea*, %struct.ScrArea** %op_area, align 8, !dbg !4666
  %cmp = icmp eq %struct.ScrArea* %5, null, !dbg !4667
  br i1 %cmp, label %if.then2, label %if.else, !dbg !4668

if.then2:                                         ; preds = %if.then
  %6 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4669
  call void @CTX_wm_area_set(%struct.bContext* %6, %struct.ScrArea* null), !dbg !4670
  br label %if.end30, !dbg !4670

if.else:                                          ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa, metadata !4671, metadata !DIExpression()), !dbg !4673
  %7 = load %struct.bScreen*, %struct.bScreen** %screen, align 8, !dbg !4674
  %areabase = getelementptr inbounds %struct.bScreen, %struct.bScreen* %7, i32 0, i32 3, !dbg !4676
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %areabase, i32 0, i32 0, !dbg !4677
  %8 = load i8*, i8** %first, align 8, !dbg !4677
  %9 = bitcast i8* %8 to %struct.ScrArea*, !dbg !4674
  store %struct.ScrArea* %9, %struct.ScrArea** %sa, align 8, !dbg !4678
  br label %for.cond, !dbg !4679

for.cond:                                         ; preds = %for.inc, %if.else
  %10 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !4680
  %tobool3 = icmp ne %struct.ScrArea* %10, null, !dbg !4682
  br i1 %tobool3, label %for.body, label %for.end, !dbg !4682

for.body:                                         ; preds = %for.cond
  %11 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !4683
  %12 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler.addr, align 8, !dbg !4685
  %op_area4 = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %12, i32 0, i32 8, !dbg !4686
  %13 = load %struct.ScrArea*, %struct.ScrArea** %op_area4, align 8, !dbg !4686
  %cmp5 = icmp eq %struct.ScrArea* %11, %13, !dbg !4687
  br i1 %cmp5, label %if.then6, label %if.end, !dbg !4688

if.then6:                                         ; preds = %for.body
  br label %for.end, !dbg !4689

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !4686

for.inc:                                          ; preds = %if.end
  %14 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !4690
  %next = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %14, i32 0, i32 0, !dbg !4691
  %15 = load %struct.ScrArea*, %struct.ScrArea** %next, align 8, !dbg !4691
  store %struct.ScrArea* %15, %struct.ScrArea** %sa, align 8, !dbg !4692
  br label %for.cond, !dbg !4693, !llvm.loop !4694

for.end:                                          ; preds = %if.then6, %for.cond
  %16 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !4696
  %cmp7 = icmp eq %struct.ScrArea* %16, null, !dbg !4698
  br i1 %cmp7, label %if.then8, label %if.else15, !dbg !4699

if.then8:                                         ; preds = %for.end
  %17 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler.addr, align 8, !dbg !4700
  %op9 = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %17, i32 0, i32 7, !dbg !4703
  %18 = load %struct.wmOperator*, %struct.wmOperator** %op9, align 8, !dbg !4703
  %cmp10 = icmp eq %struct.wmOperator* %18, null, !dbg !4704
  br i1 %cmp10, label %if.then11, label %if.end14, !dbg !4705

if.then11:                                        ; preds = %if.then8
  %19 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler.addr, align 8, !dbg !4706
  %op12 = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %19, i32 0, i32 7, !dbg !4707
  %20 = load %struct.wmOperator*, %struct.wmOperator** %op12, align 8, !dbg !4707
  %type = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %20, i32 0, i32 4, !dbg !4708
  %21 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type, align 8, !dbg !4708
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %21, i32 0, i32 1, !dbg !4709
  %22 = load i8*, i8** %idname, align 8, !dbg !4709
  %call13 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.26, i64 0, i64 0), i8* %22), !dbg !4710
  br label %if.end14, !dbg !4710

if.end14:                                         ; preds = %if.then11, %if.then8
  br label %if.end29, !dbg !4711

if.else15:                                        ; preds = %for.end
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar, metadata !4712, metadata !DIExpression()), !dbg !4714
  %23 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4715
  %24 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !4716
  call void @CTX_wm_area_set(%struct.bContext* %23, %struct.ScrArea* %24), !dbg !4717
  %25 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !4718
  %regionbase = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %25, i32 0, i32 20, !dbg !4720
  %first16 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %regionbase, i32 0, i32 0, !dbg !4721
  %26 = load i8*, i8** %first16, align 8, !dbg !4721
  %27 = bitcast i8* %26 to %struct.ARegion*, !dbg !4718
  store %struct.ARegion* %27, %struct.ARegion** %ar, align 8, !dbg !4722
  br label %for.cond17, !dbg !4723

for.cond17:                                       ; preds = %for.inc23, %if.else15
  %28 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !4724
  %tobool18 = icmp ne %struct.ARegion* %28, null, !dbg !4726
  br i1 %tobool18, label %for.body19, label %for.end25, !dbg !4726

for.body19:                                       ; preds = %for.cond17
  %29 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !4727
  %30 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler.addr, align 8, !dbg !4729
  %op_region = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %30, i32 0, i32 9, !dbg !4730
  %31 = load %struct.ARegion*, %struct.ARegion** %op_region, align 8, !dbg !4730
  %cmp20 = icmp eq %struct.ARegion* %29, %31, !dbg !4731
  br i1 %cmp20, label %if.then21, label %if.end22, !dbg !4732

if.then21:                                        ; preds = %for.body19
  br label %for.end25, !dbg !4733

if.end22:                                         ; preds = %for.body19
  br label %for.inc23, !dbg !4730

for.inc23:                                        ; preds = %if.end22
  %32 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !4734
  %next24 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %32, i32 0, i32 0, !dbg !4735
  %33 = load %struct.ARegion*, %struct.ARegion** %next24, align 8, !dbg !4735
  store %struct.ARegion* %33, %struct.ARegion** %ar, align 8, !dbg !4736
  br label %for.cond17, !dbg !4737, !llvm.loop !4738

for.end25:                                        ; preds = %if.then21, %for.cond17
  %34 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !4740
  %tobool26 = icmp ne %struct.ARegion* %34, null, !dbg !4740
  br i1 %tobool26, label %if.then27, label %if.end28, !dbg !4742

if.then27:                                        ; preds = %for.end25
  %35 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4743
  %36 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !4744
  call void @CTX_wm_region_set(%struct.bContext* %35, %struct.ARegion* %36), !dbg !4745
  br label %if.end28, !dbg !4745

if.end28:                                         ; preds = %if.then27, %for.end25
  br label %if.end29

if.end29:                                         ; preds = %if.end28, %if.end14
  br label %if.end30

if.end30:                                         ; preds = %if.end29, %if.then2
  br label %if.end31, !dbg !4746

if.end31:                                         ; preds = %if.end30, %land.lhs.true, %entry
  ret void, !dbg !4747
}

declare dso_local void @CTX_wm_region_set(%struct.bContext*, %struct.ARegion*) #3

declare dso_local void @WM_cursor_grab_disable(%struct.wmWindow*, i32*) #3

declare dso_local void @WM_operator_free(%struct.wmOperator*) #3

declare dso_local %struct.ARegion* @CTX_wm_menu(%struct.bContext*) #3

declare dso_local void @CTX_wm_menu_set(%struct.bContext*, %struct.ARegion*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local i32 @WM_userdef_event_map(i32 %kmitype) #0 !dbg !4748 {
entry:
  %retval = alloca i32, align 4
  %kmitype.addr = alloca i32, align 4
  store i32 %kmitype, i32* %kmitype.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %kmitype.addr, metadata !4751, metadata !DIExpression()), !dbg !4752
  %0 = load i32, i32* %kmitype.addr, align 4, !dbg !4753
  switch i32 %0, label %sw.epilog [
    i32 6, label %sw.bb
    i32 5, label %sw.bb1
    i32 20486, label %sw.bb5
    i32 20487, label %sw.bb9
    i32 13, label %sw.bb13
    i32 12, label %sw.bb17
  ], !dbg !4754

sw.bb:                                            ; preds = %entry
  %1 = load i32, i32* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 2), align 8, !dbg !4755
  %and = and i32 %1, 16384, !dbg !4757
  %tobool = icmp ne i32 %and, 0, !dbg !4758
  %2 = zext i1 %tobool to i64, !dbg !4758
  %cond = select i1 %tobool, i32 1, i32 3, !dbg !4758
  store i32 %cond, i32* %retval, align 4, !dbg !4759
  br label %return, !dbg !4759

sw.bb1:                                           ; preds = %entry
  %3 = load i32, i32* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 2), align 8, !dbg !4760
  %and2 = and i32 %3, 16384, !dbg !4761
  %tobool3 = icmp ne i32 %and2, 0, !dbg !4762
  %4 = zext i1 %tobool3 to i64, !dbg !4762
  %cond4 = select i1 %tobool3, i32 3, i32 1, !dbg !4762
  store i32 %cond4, i32* %retval, align 4, !dbg !4763
  br label %return, !dbg !4763

sw.bb5:                                           ; preds = %entry
  %5 = load i32, i32* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 2), align 8, !dbg !4764
  %and6 = and i32 %5, 16384, !dbg !4765
  %tobool7 = icmp ne i32 %and6, 0, !dbg !4766
  %6 = zext i1 %tobool7 to i64, !dbg !4766
  %cond8 = select i1 %tobool7, i32 20485, i32 20483, !dbg !4766
  store i32 %cond8, i32* %retval, align 4, !dbg !4767
  br label %return, !dbg !4767

sw.bb9:                                           ; preds = %entry
  %7 = load i32, i32* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 2), align 8, !dbg !4768
  %and10 = and i32 %7, 16384, !dbg !4769
  %tobool11 = icmp ne i32 %and10, 0, !dbg !4770
  %8 = zext i1 %tobool11 to i64, !dbg !4770
  %cond12 = select i1 %tobool11, i32 20483, i32 20485, !dbg !4770
  store i32 %cond12, i32* %retval, align 4, !dbg !4771
  br label %return, !dbg !4771

sw.bb13:                                          ; preds = %entry
  %9 = load i32, i32* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 22), align 4, !dbg !4772
  %and14 = and i32 %9, 4, !dbg !4773
  %tobool15 = icmp ne i32 %and14, 0, !dbg !4774
  %10 = zext i1 %tobool15 to i64, !dbg !4774
  %cond16 = select i1 %tobool15, i32 10, i32 11, !dbg !4774
  store i32 %cond16, i32* %retval, align 4, !dbg !4775
  br label %return, !dbg !4775

sw.bb17:                                          ; preds = %entry
  %11 = load i32, i32* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 22), align 4, !dbg !4776
  %and18 = and i32 %11, 4, !dbg !4777
  %tobool19 = icmp ne i32 %and18, 0, !dbg !4778
  %12 = zext i1 %tobool19 to i64, !dbg !4778
  %cond20 = select i1 %tobool19, i32 11, i32 10, !dbg !4778
  store i32 %cond20, i32* %retval, align 4, !dbg !4779
  br label %return, !dbg !4779

sw.epilog:                                        ; preds = %entry
  %13 = load i32, i32* %kmitype.addr, align 4, !dbg !4780
  store i32 %13, i32* %retval, align 4, !dbg !4781
  br label %return, !dbg !4781

return:                                           ; preds = %sw.epilog, %sw.bb17, %sw.bb13, %sw.bb9, %sw.bb5, %sw.bb1, %sw.bb
  %14 = load i32, i32* %retval, align 4, !dbg !4782
  ret i32 %14, !dbg !4782
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @wm_event_do_handlers(%struct.bContext* %C) #0 !dbg !4783 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %wm = alloca %struct.wmWindowManager*, align 8
  %win = alloca %struct.wmWindow*, align 8
  %event = alloca %struct.wmEvent*, align 8
  %scene = alloca %struct.Scene*, align 8
  %is_playing_sound = alloca i32, align 4
  %is_playing_screen = alloca i8, align 1
  %action = alloca i32, align 4
  %sa = alloca %struct.ScrArea*, align 8
  %ar = alloca %struct.ARegion*, align 8
  %doit = alloca i32, align 4
  %tevent = alloca %struct.wmEvent, align 8
  %error = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !4784, metadata !DIExpression()), !dbg !4785
  call void @llvm.dbg.declare(metadata %struct.wmWindowManager** %wm, metadata !4786, metadata !DIExpression()), !dbg !4787
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4788
  %call = call %struct.wmWindowManager* @CTX_wm_manager(%struct.bContext* %0), !dbg !4789
  store %struct.wmWindowManager* %call, %struct.wmWindowManager** %wm, align 8, !dbg !4787
  call void @llvm.dbg.declare(metadata %struct.wmWindow** %win, metadata !4790, metadata !DIExpression()), !dbg !4791
  %1 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !4792
  call void @WM_keyconfig_update(%struct.wmWindowManager* %1), !dbg !4793
  %2 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !4794
  %windows = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %2, i32 0, i32 3, !dbg !4796
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %windows, i32 0, i32 0, !dbg !4797
  %3 = load i8*, i8** %first, align 8, !dbg !4797
  %4 = bitcast i8* %3 to %struct.wmWindow*, !dbg !4794
  store %struct.wmWindow* %4, %struct.wmWindow** %win, align 8, !dbg !4798
  br label %for.cond, !dbg !4799

for.cond:                                         ; preds = %for.inc195, %entry
  %5 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !4800
  %tobool = icmp ne %struct.wmWindow* %5, null, !dbg !4802
  br i1 %tobool, label %for.body, label %for.end197, !dbg !4802

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event, metadata !4803, metadata !DIExpression()), !dbg !4805
  %6 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !4806
  %screen = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %6, i32 0, i32 3, !dbg !4808
  %7 = load %struct.bScreen*, %struct.bScreen** %screen, align 8, !dbg !4808
  %cmp = icmp eq %struct.bScreen* %7, null, !dbg !4809
  br i1 %cmp, label %if.then, label %if.else, !dbg !4810

if.then:                                          ; preds = %for.body
  %8 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !4811
  call void @wm_event_free_all(%struct.wmWindow* %8), !dbg !4812
  br label %if.end34, !dbg !4812

if.else:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.Scene** %scene, metadata !4813, metadata !DIExpression()), !dbg !4817
  %9 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !4818
  %screen1 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %9, i32 0, i32 3, !dbg !4819
  %10 = load %struct.bScreen*, %struct.bScreen** %screen1, align 8, !dbg !4819
  %scene2 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %10, i32 0, i32 5, !dbg !4820
  %11 = load %struct.Scene*, %struct.Scene** %scene2, align 8, !dbg !4820
  store %struct.Scene* %11, %struct.Scene** %scene, align 8, !dbg !4817
  %12 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !4821
  %tobool3 = icmp ne %struct.Scene* %12, null, !dbg !4821
  br i1 %tobool3, label %if.then4, label %if.end33, !dbg !4823

if.then4:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata i32* %is_playing_sound, metadata !4824, metadata !DIExpression()), !dbg !4826
  %13 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !4827
  %screen5 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %13, i32 0, i32 3, !dbg !4828
  %14 = load %struct.bScreen*, %struct.bScreen** %screen5, align 8, !dbg !4828
  %scene6 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %14, i32 0, i32 5, !dbg !4829
  %15 = load %struct.Scene*, %struct.Scene** %scene6, align 8, !dbg !4829
  %call7 = call i32 @sound_scene_playing(%struct.Scene* %15), !dbg !4830
  store i32 %call7, i32* %is_playing_sound, align 4, !dbg !4826
  %16 = load i32, i32* %is_playing_sound, align 4, !dbg !4831
  %cmp8 = icmp ne i32 %16, -1, !dbg !4833
  br i1 %cmp8, label %if.then9, label %if.end32, !dbg !4834

if.then9:                                         ; preds = %if.then4
  call void @llvm.dbg.declare(metadata i8* %is_playing_screen, metadata !4835, metadata !DIExpression()), !dbg !4837
  %17 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4838
  %18 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !4839
  call void @CTX_wm_window_set(%struct.bContext* %17, %struct.wmWindow* %18), !dbg !4840
  %19 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4841
  %20 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !4842
  %screen10 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %20, i32 0, i32 3, !dbg !4843
  %21 = load %struct.bScreen*, %struct.bScreen** %screen10, align 8, !dbg !4843
  call void @CTX_wm_screen_set(%struct.bContext* %19, %struct.bScreen* %21), !dbg !4844
  %22 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4845
  %23 = load %struct.Scene*, %struct.Scene** %scene, align 8, !dbg !4846
  call void @CTX_data_scene_set(%struct.bContext* %22, %struct.Scene* %23), !dbg !4847
  %24 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !4848
  %call11 = call %struct.bScreen* @ED_screen_animation_playing(%struct.wmWindowManager* %24), !dbg !4849
  %cmp12 = icmp ne %struct.bScreen* %call11, null, !dbg !4850
  %conv = zext i1 %cmp12 to i32, !dbg !4850
  %conv13 = trunc i32 %conv to i8, !dbg !4851
  store i8 %conv13, i8* %is_playing_screen, align 1, !dbg !4852
  %25 = load i32, i32* %is_playing_sound, align 4, !dbg !4853
  %cmp14 = icmp eq i32 %25, 1, !dbg !4855
  br i1 %cmp14, label %land.lhs.true, label %lor.lhs.false, !dbg !4856

land.lhs.true:                                    ; preds = %if.then9
  %26 = load i8, i8* %is_playing_screen, align 1, !dbg !4857
  %conv16 = zext i8 %26 to i32, !dbg !4857
  %cmp17 = icmp eq i32 %conv16, 0, !dbg !4858
  br i1 %cmp17, label %if.then25, label %lor.lhs.false, !dbg !4859

lor.lhs.false:                                    ; preds = %land.lhs.true, %if.then9
  %27 = load i32, i32* %is_playing_sound, align 4, !dbg !4860
  %cmp19 = icmp eq i32 %27, 0, !dbg !4861
  br i1 %cmp19, label %land.lhs.true21, label %if.end, !dbg !4862

land.lhs.true21:                                  ; preds = %lor.lhs.false
  %28 = load i8, i8* %is_playing_screen, align 1, !dbg !4863
  %conv22 = zext i8 %28 to i32, !dbg !4863
  %cmp23 = icmp eq i32 %conv22, 1, !dbg !4864
  br i1 %cmp23, label %if.then25, label %if.end, !dbg !4865

if.then25:                                        ; preds = %land.lhs.true21, %land.lhs.true
  %29 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4866
  %call26 = call i32 @ED_screen_animation_play(%struct.bContext* %29, i32 -1, i32 1), !dbg !4868
  br label %if.end, !dbg !4869

if.end:                                           ; preds = %if.then25, %land.lhs.true21, %lor.lhs.false
  %30 = load i32, i32* %is_playing_sound, align 4, !dbg !4870
  %cmp27 = icmp eq i32 %30, 0, !dbg !4872
  br i1 %cmp27, label %if.then29, label %if.end31, !dbg !4873

if.then29:                                        ; preds = %if.end
  %31 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8, !dbg !4874
  %call30 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %31, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.7, i64 0, i64 0), i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.8, i64 0, i64 0), i32 2253), !dbg !4876
  call void @exit(i32 -1) #8, !dbg !4877
  unreachable, !dbg !4877

if.end31:                                         ; preds = %if.end
  %32 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4878
  call void @CTX_data_scene_set(%struct.bContext* %32, %struct.Scene* null), !dbg !4879
  %33 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4880
  call void @CTX_wm_screen_set(%struct.bContext* %33, %struct.bScreen* null), !dbg !4881
  %34 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4882
  call void @CTX_wm_window_set(%struct.bContext* %34, %struct.wmWindow* null), !dbg !4883
  br label %if.end32, !dbg !4884

if.end32:                                         ; preds = %if.end31, %if.then4
  br label %if.end33, !dbg !4885

if.end33:                                         ; preds = %if.end32, %if.else
  br label %if.end34

if.end34:                                         ; preds = %if.end33, %if.then
  br label %while.cond, !dbg !4886

while.cond:                                       ; preds = %if.end178, %if.then39, %if.end34
  %35 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !4887
  %queue = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %35, i32 0, i32 27, !dbg !4888
  %first35 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %queue, i32 0, i32 0, !dbg !4889
  %36 = load i8*, i8** %first35, align 8, !dbg !4889
  %37 = bitcast i8* %36 to %struct.wmEvent*, !dbg !4887
  store %struct.wmEvent* %37, %struct.wmEvent** %event, align 8, !dbg !4890
  %tobool36 = icmp ne %struct.wmEvent* %37, null, !dbg !4886
  br i1 %tobool36, label %while.body, label %while.end, !dbg !4886

while.body:                                       ; preds = %while.cond
  call void @llvm.dbg.declare(metadata i32* %action, metadata !4891, metadata !DIExpression()), !dbg !4893
  store i32 0, i32* %action, align 4, !dbg !4893
  %38 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !4894
  %39 = load %struct.wmEvent*, %struct.wmEvent** %event, align 8, !dbg !4896
  %call37 = call zeroext i8 @wm_event_pie_filter(%struct.wmWindow* %38, %struct.wmEvent* %39), !dbg !4897
  %tobool38 = icmp ne i8 %call37, 0, !dbg !4897
  br i1 %tobool38, label %if.then39, label %if.end41, !dbg !4898

if.then39:                                        ; preds = %while.body
  %40 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !4899
  %queue40 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %40, i32 0, i32 27, !dbg !4901
  %41 = load %struct.wmEvent*, %struct.wmEvent** %event, align 8, !dbg !4902
  %42 = bitcast %struct.wmEvent* %41 to i8*, !dbg !4902
  call void @BLI_remlink(%struct.ListBase* %queue40, i8* %42), !dbg !4903
  %43 = load %struct.wmEvent*, %struct.wmEvent** %event, align 8, !dbg !4904
  call void @wm_event_free(%struct.wmEvent* %43), !dbg !4905
  br label %while.cond, !dbg !4906, !llvm.loop !4907

if.end41:                                         ; preds = %while.body
  %44 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4909
  %45 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !4910
  call void @CTX_wm_window_set(%struct.bContext* %44, %struct.wmWindow* %45), !dbg !4911
  %46 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4912
  %47 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4913
  %48 = load %struct.wmEvent*, %struct.wmEvent** %event, align 8, !dbg !4914
  %x = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %48, i32 0, i32 4, !dbg !4915
  %call42 = call %struct.ScrArea* @area_event_inside(%struct.bContext* %47, i32* %x), !dbg !4916
  call void @CTX_wm_area_set(%struct.bContext* %46, %struct.ScrArea* %call42), !dbg !4917
  %49 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4918
  %50 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4919
  %51 = load %struct.wmEvent*, %struct.wmEvent** %event, align 8, !dbg !4920
  %x43 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %51, i32 0, i32 4, !dbg !4921
  %call44 = call %struct.ARegion* @region_event_inside(%struct.bContext* %50, i32* %x43), !dbg !4922
  call void @CTX_wm_region_set(%struct.bContext* %49, %struct.ARegion* %call44), !dbg !4923
  %52 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !4924
  %53 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !4925
  call void @wm_window_make_drawable(%struct.wmWindowManager* %52, %struct.wmWindow* %53), !dbg !4926
  %54 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4927
  %55 = load %struct.wmEvent*, %struct.wmEvent** %event, align 8, !dbg !4928
  call void @wm_region_mouse_co(%struct.bContext* %54, %struct.wmEvent* %55), !dbg !4929
  %56 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4930
  %57 = load %struct.wmEvent*, %struct.wmEvent** %event, align 8, !dbg !4931
  %58 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !4932
  %modalhandlers = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %58, i32 0, i32 29, !dbg !4933
  %call45 = call i32 @wm_handlers_do(%struct.bContext* %56, %struct.wmEvent* %57, %struct.ListBase* %modalhandlers), !dbg !4934
  %59 = load i32, i32* %action, align 4, !dbg !4935
  %or = or i32 %59, %call45, !dbg !4935
  store i32 %or, i32* %action, align 4, !dbg !4935
  %60 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4936
  %call46 = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %60), !dbg !4938
  %cmp47 = icmp eq %struct.wmWindow* %call46, null, !dbg !4939
  br i1 %cmp47, label %if.then49, label %if.end50, !dbg !4940

if.then49:                                        ; preds = %if.end41
  br label %if.end207, !dbg !4941

if.end50:                                         ; preds = %if.end41
  %61 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !4942
  %62 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !4943
  %63 = load %struct.wmEvent*, %struct.wmEvent** %event, align 8, !dbg !4944
  call void @wm_event_drag_test(%struct.wmWindowManager* %61, %struct.wmWindow* %62, %struct.wmEvent* %63), !dbg !4945
  %64 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4946
  %65 = load %struct.wmEvent*, %struct.wmEvent** %event, align 8, !dbg !4947
  %66 = load i32, i32* %action, align 4, !dbg !4948
  call void @wm_tweakevent_test(%struct.bContext* %64, %struct.wmEvent* %65, i32 %66), !dbg !4949
  %67 = load i32, i32* %action, align 4, !dbg !4950
  %and = and i32 %67, 1, !dbg !4952
  %cmp51 = icmp eq i32 %and, 0, !dbg !4953
  br i1 %cmp51, label %if.then53, label %if.end178, !dbg !4954

if.then53:                                        ; preds = %if.end50
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa, metadata !4955, metadata !DIExpression()), !dbg !4957
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar, metadata !4958, metadata !DIExpression()), !dbg !4959
  call void @llvm.dbg.declare(metadata i32* %doit, metadata !4960, metadata !DIExpression()), !dbg !4961
  store i32 0, i32* %doit, align 4, !dbg !4961
  %68 = load %struct.wmEvent*, %struct.wmEvent** %event, align 8, !dbg !4962
  %type = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %68, i32 0, i32 2, !dbg !4964
  %69 = load i16, i16* %type, align 8, !dbg !4964
  %conv54 = sext i16 %69 to i32, !dbg !4962
  %cmp55 = icmp eq i32 %conv54, 4, !dbg !4965
  br i1 %cmp55, label %if.then57, label %if.else58, !dbg !4966

if.then57:                                        ; preds = %if.then53
  %70 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4967
  %71 = load %struct.wmEvent*, %struct.wmEvent** %event, align 8, !dbg !4969
  call void @ED_screen_set_subwinactive(%struct.bContext* %70, %struct.wmEvent* %71), !dbg !4970
  %72 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !4971
  %73 = load %struct.wmEvent*, %struct.wmEvent** %event, align 8, !dbg !4972
  call void @wm_paintcursor_test(%struct.bContext* %72, %struct.wmEvent* %73), !dbg !4973
  br label %if.end65, !dbg !4974

if.else58:                                        ; preds = %if.then53
  %74 = load %struct.wmEvent*, %struct.wmEvent** %event, align 8, !dbg !4975
  %type59 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %74, i32 0, i32 2, !dbg !4977
  %75 = load i16, i16* %type59, align 8, !dbg !4977
  %conv60 = sext i16 %75 to i32, !dbg !4975
  %cmp61 = icmp eq i32 %conv60, 400, !dbg !4978
  br i1 %cmp61, label %if.then63, label %if.end64, !dbg !4979

if.then63:                                        ; preds = %if.else58
  %76 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !4980
  %addmousemove = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %76, i32 0, i32 17, !dbg !4982
  store i16 1, i16* %addmousemove, align 2, !dbg !4983
  br label %if.end64, !dbg !4984

if.end64:                                         ; preds = %if.then63, %if.else58
  br label %if.end65

if.end65:                                         ; preds = %if.end64, %if.then57
  %77 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !4985
  %screen66 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %77, i32 0, i32 3, !dbg !4987
  %78 = load %struct.bScreen*, %struct.bScreen** %screen66, align 8, !dbg !4987
  %areabase = getelementptr inbounds %struct.bScreen, %struct.bScreen* %78, i32 0, i32 3, !dbg !4988
  %first67 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %areabase, i32 0, i32 0, !dbg !4989
  %79 = load i8*, i8** %first67, align 8, !dbg !4989
  %80 = bitcast i8* %79 to %struct.ScrArea*, !dbg !4985
  store %struct.ScrArea* %80, %struct.ScrArea** %sa, align 8, !dbg !4990
  br label %for.cond68, !dbg !4991

for.cond68:                                       ; preds = %for.inc142, %if.end65
  %81 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !4992
  %tobool69 = icmp ne %struct.ScrArea* %81, null, !dbg !4994
  br i1 %tobool69, label %for.body70, label %for.end144, !dbg !4994

for.body70:                                       ; preds = %for.cond68
  %82 = load %struct.wmEvent*, %struct.wmEvent** %event, align 8, !dbg !4995
  %83 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !4998
  %totrct = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %83, i32 0, i32 7, !dbg !4999
  %call71 = call i32 @wm_event_inside_i(%struct.wmEvent* %82, %struct.rcti* %totrct), !dbg !5000
  %tobool72 = icmp ne i32 %call71, 0, !dbg !5000
  br i1 %tobool72, label %if.then73, label %if.end141, !dbg !5001

if.then73:                                        ; preds = %for.body70
  %84 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5002
  %85 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !5004
  call void @CTX_wm_area_set(%struct.bContext* %84, %struct.ScrArea* %85), !dbg !5005
  %86 = load i32, i32* %action, align 4, !dbg !5006
  %and74 = and i32 %86, 1, !dbg !5008
  %cmp75 = icmp eq i32 %and74, 0, !dbg !5009
  br i1 %cmp75, label %if.then77, label %if.end132, !dbg !5010

if.then77:                                        ; preds = %if.then73
  %87 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !5011
  %regionbase = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %87, i32 0, i32 20, !dbg !5014
  %first78 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %regionbase, i32 0, i32 0, !dbg !5015
  %88 = load i8*, i8** %first78, align 8, !dbg !5015
  %89 = bitcast i8* %88 to %struct.ARegion*, !dbg !5011
  store %struct.ARegion* %89, %struct.ARegion** %ar, align 8, !dbg !5016
  br label %for.cond79, !dbg !5017

for.cond79:                                       ; preds = %for.inc, %if.then77
  %90 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !5018
  %tobool80 = icmp ne %struct.ARegion* %90, null, !dbg !5020
  br i1 %tobool80, label %for.body81, label %for.end, !dbg !5020

for.body81:                                       ; preds = %for.cond79
  %91 = load %struct.wmEvent*, %struct.wmEvent** %event, align 8, !dbg !5021
  %92 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !5024
  %winrct = getelementptr inbounds %struct.ARegion, %struct.ARegion* %92, i32 0, i32 3, !dbg !5025
  %call82 = call i32 @wm_event_inside_i(%struct.wmEvent* %91, %struct.rcti* %winrct), !dbg !5026
  %tobool83 = icmp ne i32 %call82, 0, !dbg !5026
  br i1 %tobool83, label %if.then84, label %if.end131, !dbg !5027

if.then84:                                        ; preds = %for.body81
  %93 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5028
  %94 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !5030
  call void @CTX_wm_region_set(%struct.bContext* %93, %struct.ARegion* %94), !dbg !5031
  %95 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5032
  %96 = load %struct.wmEvent*, %struct.wmEvent** %event, align 8, !dbg !5033
  call void @wm_region_mouse_co(%struct.bContext* %95, %struct.wmEvent* %96), !dbg !5034
  %97 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !5035
  %drags = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %97, i32 0, i32 12, !dbg !5037
  %call85 = call zeroext i8 @BLI_listbase_is_empty(%struct.ListBase* %drags), !dbg !5038
  %tobool86 = icmp ne i8 %call85, 0, !dbg !5038
  br i1 %tobool86, label %if.end114, label %if.then87, !dbg !5039

if.then87:                                        ; preds = %if.then84
  %98 = load %struct.wmEvent*, %struct.wmEvent** %event, align 8, !dbg !5040
  %type88 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %98, i32 0, i32 2, !dbg !5040
  %99 = load i16, i16* %type88, align 8, !dbg !5040
  %conv89 = sext i16 %99 to i32, !dbg !5040
  %cmp90 = icmp eq i32 %conv89, 4, !dbg !5040
  br i1 %cmp90, label %if.then112, label %lor.lhs.false92, !dbg !5040

lor.lhs.false92:                                  ; preds = %if.then87
  %100 = load %struct.wmEvent*, %struct.wmEvent** %event, align 8, !dbg !5040
  %type93 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %100, i32 0, i32 2, !dbg !5040
  %101 = load i16, i16* %type93, align 8, !dbg !5040
  %conv94 = sext i16 %101 to i32, !dbg !5040
  %cmp95 = icmp eq i32 %conv94, 20515, !dbg !5040
  br i1 %cmp95, label %if.then112, label %lor.lhs.false97, !dbg !5043

lor.lhs.false97:                                  ; preds = %lor.lhs.false92
  %102 = load %struct.wmEvent*, %struct.wmEvent** %event, align 8, !dbg !5044
  %type98 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %102, i32 0, i32 2, !dbg !5044
  %103 = load i16, i16* %type98, align 8, !dbg !5044
  %conv99 = sext i16 %103 to i32, !dbg !5044
  %cmp100 = icmp sge i32 %conv99, 212, !dbg !5044
  br i1 %cmp100, label %land.lhs.true102, label %lor.lhs.false107, !dbg !5044

land.lhs.true102:                                 ; preds = %lor.lhs.false97
  %104 = load %struct.wmEvent*, %struct.wmEvent** %event, align 8, !dbg !5044
  %type103 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %104, i32 0, i32 2, !dbg !5044
  %105 = load i16, i16* %type103, align 8, !dbg !5044
  %conv104 = sext i16 %105 to i32, !dbg !5044
  %cmp105 = icmp sle i32 %conv104, 217, !dbg !5044
  br i1 %cmp105, label %if.then112, label %lor.lhs.false107, !dbg !5044

lor.lhs.false107:                                 ; preds = %land.lhs.true102, %lor.lhs.false97
  %106 = load %struct.wmEvent*, %struct.wmEvent** %event, align 8, !dbg !5044
  %type108 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %106, i32 0, i32 2, !dbg !5044
  %107 = load i16, i16* %type108, align 8, !dbg !5044
  %conv109 = sext i16 %107 to i32, !dbg !5044
  %cmp110 = icmp eq i32 %conv109, 172, !dbg !5044
  br i1 %cmp110, label %if.then112, label %if.end113, !dbg !5045

if.then112:                                       ; preds = %lor.lhs.false107, %land.lhs.true102, %lor.lhs.false92, %if.then87
  %108 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5046
  %109 = load %struct.wmEvent*, %struct.wmEvent** %event, align 8, !dbg !5048
  call void @wm_drags_check_ops(%struct.bContext* %108, %struct.wmEvent* %109), !dbg !5049
  br label %if.end113, !dbg !5050

if.end113:                                        ; preds = %if.then112, %lor.lhs.false107
  br label %if.end114, !dbg !5051

if.end114:                                        ; preds = %if.end113, %if.then84
  %110 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5052
  %111 = load %struct.wmEvent*, %struct.wmEvent** %event, align 8, !dbg !5053
  %112 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !5054
  %handlers = getelementptr inbounds %struct.ARegion, %struct.ARegion* %112, i32 0, i32 26, !dbg !5055
  %call115 = call i32 @wm_handlers_do(%struct.bContext* %110, %struct.wmEvent* %111, %struct.ListBase* %handlers), !dbg !5056
  %113 = load i32, i32* %action, align 4, !dbg !5057
  %or116 = or i32 %113, %call115, !dbg !5057
  store i32 %or116, i32* %action, align 4, !dbg !5057
  %114 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5058
  %call117 = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %114), !dbg !5060
  %cmp118 = icmp eq %struct.wmWindow* %call117, null, !dbg !5061
  br i1 %cmp118, label %if.then120, label %if.end121, !dbg !5062

if.then120:                                       ; preds = %if.end114
  br label %if.end207, !dbg !5063

if.end121:                                        ; preds = %if.end114
  %115 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !5064
  %winrct122 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %115, i32 0, i32 3, !dbg !5065
  %116 = load %struct.wmEvent*, %struct.wmEvent** %event, align 8, !dbg !5066
  %x123 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %116, i32 0, i32 4, !dbg !5067
  %call124 = call zeroext i8 @BLI_rcti_isect_pt_v(%struct.rcti* %winrct122, i32* %x123), !dbg !5068
  %conv125 = zext i8 %call124 to i32, !dbg !5069
  %117 = load i32, i32* %doit, align 4, !dbg !5070
  %or126 = or i32 %117, %conv125, !dbg !5070
  store i32 %or126, i32* %doit, align 4, !dbg !5070
  %118 = load i32, i32* %action, align 4, !dbg !5071
  %and127 = and i32 %118, 1, !dbg !5073
  %tobool128 = icmp ne i32 %and127, 0, !dbg !5073
  br i1 %tobool128, label %if.then129, label %if.end130, !dbg !5074

if.then129:                                       ; preds = %if.end121
  br label %for.end, !dbg !5075

if.end130:                                        ; preds = %if.end121
  br label %if.end131, !dbg !5076

if.end131:                                        ; preds = %if.end130, %for.body81
  br label %for.inc, !dbg !5077

for.inc:                                          ; preds = %if.end131
  %119 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !5078
  %next = getelementptr inbounds %struct.ARegion, %struct.ARegion* %119, i32 0, i32 0, !dbg !5079
  %120 = load %struct.ARegion*, %struct.ARegion** %next, align 8, !dbg !5079
  store %struct.ARegion* %120, %struct.ARegion** %ar, align 8, !dbg !5080
  br label %for.cond79, !dbg !5081, !llvm.loop !5082

for.end:                                          ; preds = %if.then129, %for.cond79
  br label %if.end132, !dbg !5084

if.end132:                                        ; preds = %for.end, %if.then73
  %121 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5085
  call void @CTX_wm_region_set(%struct.bContext* %121, %struct.ARegion* null), !dbg !5086
  %122 = load i32, i32* %action, align 4, !dbg !5087
  %and133 = and i32 %122, 1, !dbg !5089
  %cmp134 = icmp eq i32 %and133, 0, !dbg !5090
  br i1 %cmp134, label %if.then136, label %if.end140, !dbg !5091

if.then136:                                       ; preds = %if.end132
  %123 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5092
  %124 = load %struct.wmEvent*, %struct.wmEvent** %event, align 8, !dbg !5094
  call void @wm_region_mouse_co(%struct.bContext* %123, %struct.wmEvent* %124), !dbg !5095
  %125 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5096
  %126 = load %struct.wmEvent*, %struct.wmEvent** %event, align 8, !dbg !5097
  %127 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !5098
  %handlers137 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %127, i32 0, i32 21, !dbg !5099
  %call138 = call i32 @wm_handlers_do(%struct.bContext* %125, %struct.wmEvent* %126, %struct.ListBase* %handlers137), !dbg !5100
  %128 = load i32, i32* %action, align 4, !dbg !5101
  %or139 = or i32 %128, %call138, !dbg !5101
  store i32 %or139, i32* %action, align 4, !dbg !5101
  br label %if.end140, !dbg !5102

if.end140:                                        ; preds = %if.then136, %if.end132
  %129 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5103
  call void @CTX_wm_area_set(%struct.bContext* %129, %struct.ScrArea* null), !dbg !5104
  br label %if.end141, !dbg !5105

if.end141:                                        ; preds = %if.end140, %for.body70
  br label %for.inc142, !dbg !5106

for.inc142:                                       ; preds = %if.end141
  %130 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !5107
  %next143 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %130, i32 0, i32 0, !dbg !5108
  %131 = load %struct.ScrArea*, %struct.ScrArea** %next143, align 8, !dbg !5108
  store %struct.ScrArea* %131, %struct.ScrArea** %sa, align 8, !dbg !5109
  br label %for.cond68, !dbg !5110, !llvm.loop !5111

for.end144:                                       ; preds = %for.cond68
  %132 = load i32, i32* %action, align 4, !dbg !5113
  %and145 = and i32 %132, 1, !dbg !5115
  %cmp146 = icmp eq i32 %and145, 0, !dbg !5116
  br i1 %cmp146, label %if.then148, label %if.end161, !dbg !5117

if.then148:                                       ; preds = %for.end144
  %133 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5118
  %134 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5120
  %135 = load %struct.wmEvent*, %struct.wmEvent** %event, align 8, !dbg !5121
  %x149 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %135, i32 0, i32 4, !dbg !5122
  %call150 = call %struct.ScrArea* @area_event_inside(%struct.bContext* %134, i32* %x149), !dbg !5123
  call void @CTX_wm_area_set(%struct.bContext* %133, %struct.ScrArea* %call150), !dbg !5124
  %136 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5125
  %137 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5126
  %138 = load %struct.wmEvent*, %struct.wmEvent** %event, align 8, !dbg !5127
  %x151 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %138, i32 0, i32 4, !dbg !5128
  %call152 = call %struct.ARegion* @region_event_inside(%struct.bContext* %137, i32* %x151), !dbg !5129
  call void @CTX_wm_region_set(%struct.bContext* %136, %struct.ARegion* %call152), !dbg !5130
  %139 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5131
  %140 = load %struct.wmEvent*, %struct.wmEvent** %event, align 8, !dbg !5132
  call void @wm_region_mouse_co(%struct.bContext* %139, %struct.wmEvent* %140), !dbg !5133
  %141 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5134
  %142 = load %struct.wmEvent*, %struct.wmEvent** %event, align 8, !dbg !5135
  %143 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !5136
  %handlers153 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %143, i32 0, i32 28, !dbg !5137
  %call154 = call i32 @wm_handlers_do(%struct.bContext* %141, %struct.wmEvent* %142, %struct.ListBase* %handlers153), !dbg !5138
  %144 = load i32, i32* %action, align 4, !dbg !5139
  %or155 = or i32 %144, %call154, !dbg !5139
  store i32 %or155, i32* %action, align 4, !dbg !5139
  %145 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5140
  %call156 = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %145), !dbg !5142
  %cmp157 = icmp eq %struct.wmWindow* %call156, null, !dbg !5143
  br i1 %cmp157, label %if.then159, label %if.end160, !dbg !5144

if.then159:                                       ; preds = %if.then148
  br label %if.end207, !dbg !5145

if.end160:                                        ; preds = %if.then148
  br label %if.end161, !dbg !5146

if.end161:                                        ; preds = %if.end160, %for.end144
  %146 = load i32, i32* %doit, align 4, !dbg !5147
  %tobool162 = icmp ne i32 %146, 0, !dbg !5147
  br i1 %tobool162, label %land.lhs.true163, label %if.else176, !dbg !5149

land.lhs.true163:                                 ; preds = %if.end161
  %147 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !5150
  %screen164 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %147, i32 0, i32 3, !dbg !5151
  %148 = load %struct.bScreen*, %struct.bScreen** %screen164, align 8, !dbg !5151
  %tobool165 = icmp ne %struct.bScreen* %148, null, !dbg !5150
  br i1 %tobool165, label %land.lhs.true166, label %if.else176, !dbg !5152

land.lhs.true166:                                 ; preds = %land.lhs.true163
  %149 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !5153
  %screen167 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %149, i32 0, i32 3, !dbg !5154
  %150 = load %struct.bScreen*, %struct.bScreen** %screen167, align 8, !dbg !5154
  %subwinactive = getelementptr inbounds %struct.bScreen, %struct.bScreen* %150, i32 0, i32 19, !dbg !5155
  %151 = load i16, i16* %subwinactive, align 4, !dbg !5155
  %conv168 = sext i16 %151 to i32, !dbg !5153
  %152 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !5156
  %screen169 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %152, i32 0, i32 3, !dbg !5157
  %153 = load %struct.bScreen*, %struct.bScreen** %screen169, align 8, !dbg !5157
  %mainwin = getelementptr inbounds %struct.bScreen, %struct.bScreen* %153, i32 0, i32 18, !dbg !5158
  %154 = load i16, i16* %mainwin, align 2, !dbg !5158
  %conv170 = sext i16 %154 to i32, !dbg !5156
  %cmp171 = icmp ne i32 %conv168, %conv170, !dbg !5159
  br i1 %cmp171, label %if.then173, label %if.else176, !dbg !5160

if.then173:                                       ; preds = %land.lhs.true166
  %155 = load %struct.wmEvent*, %struct.wmEvent** %event, align 8, !dbg !5161
  %x174 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %155, i32 0, i32 4, !dbg !5163
  %156 = load i32, i32* %x174, align 4, !dbg !5163
  %157 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !5164
  %eventstate = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %157, i32 0, i32 21, !dbg !5165
  %158 = load %struct.wmEvent*, %struct.wmEvent** %eventstate, align 8, !dbg !5165
  %prevx = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %158, i32 0, i32 12, !dbg !5166
  store i32 %156, i32* %prevx, align 8, !dbg !5167
  %159 = load %struct.wmEvent*, %struct.wmEvent** %event, align 8, !dbg !5168
  %y = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %159, i32 0, i32 5, !dbg !5169
  %160 = load i32, i32* %y, align 8, !dbg !5169
  %161 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !5170
  %eventstate175 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %161, i32 0, i32 21, !dbg !5171
  %162 = load %struct.wmEvent*, %struct.wmEvent** %eventstate175, align 8, !dbg !5171
  %prevy = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %162, i32 0, i32 13, !dbg !5172
  store i32 %160, i32* %prevy, align 4, !dbg !5173
  br label %if.end177, !dbg !5174

if.else176:                                       ; preds = %land.lhs.true166, %land.lhs.true163, %if.end161
  br label %if.end177

if.end177:                                        ; preds = %if.else176, %if.then173
  br label %if.end178, !dbg !5175

if.end178:                                        ; preds = %if.end177, %if.end50
  %163 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !5176
  %queue179 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %163, i32 0, i32 27, !dbg !5177
  %164 = load %struct.wmEvent*, %struct.wmEvent** %event, align 8, !dbg !5178
  %165 = bitcast %struct.wmEvent* %164 to i8*, !dbg !5178
  call void @BLI_remlink(%struct.ListBase* %queue179, i8* %165), !dbg !5179
  %166 = load %struct.wmEvent*, %struct.wmEvent** %event, align 8, !dbg !5180
  call void @wm_event_free(%struct.wmEvent* %166), !dbg !5181
  br label %while.cond, !dbg !4886, !llvm.loop !4907

while.end:                                        ; preds = %while.cond
  %167 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !5182
  %addmousemove180 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %167, i32 0, i32 17, !dbg !5184
  %168 = load i16, i16* %addmousemove180, align 2, !dbg !5184
  %conv181 = sext i16 %168 to i32, !dbg !5182
  %tobool182 = icmp ne i32 %conv181, 0, !dbg !5182
  br i1 %tobool182, label %land.lhs.true183, label %if.end194, !dbg !5185

land.lhs.true183:                                 ; preds = %while.end
  %169 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !5186
  %eventstate184 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %169, i32 0, i32 21, !dbg !5187
  %170 = load %struct.wmEvent*, %struct.wmEvent** %eventstate184, align 8, !dbg !5187
  %tobool185 = icmp ne %struct.wmEvent* %170, null, !dbg !5186
  br i1 %tobool185, label %if.then186, label %if.end194, !dbg !5188

if.then186:                                       ; preds = %land.lhs.true183
  call void @llvm.dbg.declare(metadata %struct.wmEvent* %tevent, metadata !5189, metadata !DIExpression()), !dbg !5191
  %171 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !5192
  %eventstate187 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %171, i32 0, i32 21, !dbg !5193
  %172 = load %struct.wmEvent*, %struct.wmEvent** %eventstate187, align 8, !dbg !5193
  %173 = bitcast %struct.wmEvent* %tevent to i8*, !dbg !5194
  %174 = bitcast %struct.wmEvent* %172 to i8*, !dbg !5194
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %173, i8* align 8 %174, i64 120, i1 false), !dbg !5194
  %type188 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %tevent, i32 0, i32 2, !dbg !5195
  store i16 4, i16* %type188, align 8, !dbg !5196
  %x189 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %tevent, i32 0, i32 4, !dbg !5197
  %175 = load i32, i32* %x189, align 4, !dbg !5197
  %prevx190 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %tevent, i32 0, i32 12, !dbg !5198
  store i32 %175, i32* %prevx190, align 8, !dbg !5199
  %y191 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %tevent, i32 0, i32 5, !dbg !5200
  %176 = load i32, i32* %y191, align 8, !dbg !5200
  %prevy192 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %tevent, i32 0, i32 13, !dbg !5201
  store i32 %176, i32* %prevy192, align 4, !dbg !5202
  %177 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !5203
  call void @wm_event_add(%struct.wmWindow* %177, %struct.wmEvent* %tevent), !dbg !5204
  %178 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !5205
  %addmousemove193 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %178, i32 0, i32 17, !dbg !5206
  store i16 0, i16* %addmousemove193, align 2, !dbg !5207
  br label %if.end194, !dbg !5208

if.end194:                                        ; preds = %if.then186, %land.lhs.true183, %while.end
  %179 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5209
  call void @CTX_wm_window_set(%struct.bContext* %179, %struct.wmWindow* null), !dbg !5210
  br label %for.inc195, !dbg !5211

for.inc195:                                       ; preds = %if.end194
  %180 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !5212
  %next196 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %180, i32 0, i32 0, !dbg !5213
  %181 = load %struct.wmWindow*, %struct.wmWindow** %next196, align 8, !dbg !5213
  store %struct.wmWindow* %181, %struct.wmWindow** %win, align 8, !dbg !5214
  br label %for.cond, !dbg !5215, !llvm.loop !5216

for.end197:                                       ; preds = %for.cond
  %182 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !5218
  call void @WM_keyconfig_update(%struct.wmWindowManager* %182), !dbg !5219
  %183 = load i32, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 16), align 4, !dbg !5220
  %tobool198 = icmp ne i32 %183, 0, !dbg !5222
  br i1 %tobool198, label %if.then199, label %if.end207, !dbg !5223

if.then199:                                       ; preds = %for.end197
  call void @llvm.dbg.declare(metadata i32* %error, metadata !5224, metadata !DIExpression()), !dbg !5228
  %call200 = call i32 @glGetError(), !dbg !5229
  store i32 %call200, i32* %error, align 4, !dbg !5228
  %184 = load i32, i32* %error, align 4, !dbg !5230
  %cmp201 = icmp ne i32 %184, 0, !dbg !5232
  br i1 %cmp201, label %if.then203, label %if.end206, !dbg !5233

if.then203:                                       ; preds = %if.then199
  %185 = load i32, i32* %error, align 4, !dbg !5234
  %call204 = call i8* @gluErrorString(i32 %185), !dbg !5236
  %call205 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9, i64 0, i64 0), i8* %call204), !dbg !5237
  br label %if.end206, !dbg !5238

if.end206:                                        ; preds = %if.then203, %if.then199
  br label %if.end207, !dbg !5239

if.end207:                                        ; preds = %if.then49, %if.then120, %if.then159, %if.end206, %for.end197
  ret void, !dbg !5240
}

declare dso_local void @WM_keyconfig_update(%struct.wmWindowManager*) #3

declare dso_local i32 @sound_scene_playing(%struct.Scene*) #3

declare dso_local void @CTX_wm_screen_set(%struct.bContext*, %struct.bScreen*) #3

declare dso_local void @CTX_data_scene_set(%struct.bContext*, %struct.Scene*) #3

declare dso_local %struct.bScreen* @ED_screen_animation_playing(%struct.wmWindowManager*) #3

declare dso_local i32 @ED_screen_animation_play(%struct.bContext*, i32, i32) #3

declare dso_local i32 @fprintf(%struct._IO_FILE*, i8*, ...) #3

; Function Attrs: noreturn nounwind
declare dso_local void @exit(i32) #5

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @wm_event_pie_filter(%struct.wmWindow* %win, %struct.wmEvent* %event) #0 !dbg !5241 {
entry:
  %retval = alloca i8, align 1
  %win.addr = alloca %struct.wmWindow*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  store %struct.wmWindow* %win, %struct.wmWindow** %win.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmWindow** %win.addr, metadata !5244, metadata !DIExpression()), !dbg !5245
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !5246, metadata !DIExpression()), !dbg !5247
  %0 = load %struct.wmWindow*, %struct.wmWindow** %win.addr, align 8, !dbg !5248
  %lock_pie_event = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %0, i32 0, i32 19, !dbg !5250
  %1 = load i16, i16* %lock_pie_event, align 4, !dbg !5250
  %conv = sext i16 %1 to i32, !dbg !5248
  %tobool = icmp ne i32 %conv, 0, !dbg !5248
  br i1 %tobool, label %land.lhs.true, label %if.else10, !dbg !5251

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.wmWindow*, %struct.wmWindow** %win.addr, align 8, !dbg !5252
  %lock_pie_event1 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %2, i32 0, i32 19, !dbg !5253
  %3 = load i16, i16* %lock_pie_event1, align 4, !dbg !5253
  %conv2 = sext i16 %3 to i32, !dbg !5252
  %4 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !5254
  %type = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %4, i32 0, i32 2, !dbg !5255
  %5 = load i16, i16* %type, align 8, !dbg !5255
  %conv3 = sext i16 %5 to i32, !dbg !5254
  %cmp = icmp eq i32 %conv2, %conv3, !dbg !5256
  br i1 %cmp, label %if.then, label %if.else10, !dbg !5257

if.then:                                          ; preds = %land.lhs.true
  %6 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !5258
  %val = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %6, i32 0, i32 3, !dbg !5261
  %7 = load i16, i16* %val, align 2, !dbg !5261
  %conv5 = sext i16 %7 to i32, !dbg !5258
  %cmp6 = icmp eq i32 %conv5, 2, !dbg !5262
  br i1 %cmp6, label %if.then8, label %if.else, !dbg !5263

if.then8:                                         ; preds = %if.then
  %8 = load %struct.wmWindow*, %struct.wmWindow** %win.addr, align 8, !dbg !5264
  %lock_pie_event9 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %8, i32 0, i32 19, !dbg !5266
  store i16 0, i16* %lock_pie_event9, align 4, !dbg !5267
  store i8 0, i8* %retval, align 1, !dbg !5268
  br label %return, !dbg !5268

if.else:                                          ; preds = %if.then
  store i8 1, i8* %retval, align 1, !dbg !5269
  br label %return, !dbg !5269

if.else10:                                        ; preds = %land.lhs.true, %entry
  store i8 0, i8* %retval, align 1, !dbg !5271
  br label %return, !dbg !5271

return:                                           ; preds = %if.else10, %if.else, %if.then8
  %9 = load i8, i8* %retval, align 1, !dbg !5273
  ret i8 %9, !dbg !5273
}

declare dso_local void @BLI_remlink(%struct.ListBase*, i8*) #3

; Function Attrs: noinline nounwind uwtable
define internal %struct.ScrArea* @area_event_inside(%struct.bContext* %C, i32* %xy) #0 !dbg !5274 {
entry:
  %retval = alloca %struct.ScrArea*, align 8
  %C.addr = alloca %struct.bContext*, align 8
  %xy.addr = alloca i32*, align 8
  %screen = alloca %struct.bScreen*, align 8
  %sa = alloca %struct.ScrArea*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5279, metadata !DIExpression()), !dbg !5280
  store i32* %xy, i32** %xy.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %xy.addr, metadata !5281, metadata !DIExpression()), !dbg !5282
  call void @llvm.dbg.declare(metadata %struct.bScreen** %screen, metadata !5283, metadata !DIExpression()), !dbg !5284
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5285
  %call = call %struct.bScreen* @CTX_wm_screen(%struct.bContext* %0), !dbg !5286
  store %struct.bScreen* %call, %struct.bScreen** %screen, align 8, !dbg !5284
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa, metadata !5287, metadata !DIExpression()), !dbg !5288
  %1 = load %struct.bScreen*, %struct.bScreen** %screen, align 8, !dbg !5289
  %tobool = icmp ne %struct.bScreen* %1, null, !dbg !5289
  br i1 %tobool, label %if.then, label %if.end5, !dbg !5291

if.then:                                          ; preds = %entry
  %2 = load %struct.bScreen*, %struct.bScreen** %screen, align 8, !dbg !5292
  %areabase = getelementptr inbounds %struct.bScreen, %struct.bScreen* %2, i32 0, i32 3, !dbg !5294
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %areabase, i32 0, i32 0, !dbg !5295
  %3 = load i8*, i8** %first, align 8, !dbg !5295
  %4 = bitcast i8* %3 to %struct.ScrArea*, !dbg !5292
  store %struct.ScrArea* %4, %struct.ScrArea** %sa, align 8, !dbg !5296
  br label %for.cond, !dbg !5297

for.cond:                                         ; preds = %for.inc, %if.then
  %5 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !5298
  %tobool1 = icmp ne %struct.ScrArea* %5, null, !dbg !5300
  br i1 %tobool1, label %for.body, label %for.end, !dbg !5300

for.body:                                         ; preds = %for.cond
  %6 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !5301
  %totrct = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %6, i32 0, i32 7, !dbg !5303
  %7 = load i32*, i32** %xy.addr, align 8, !dbg !5304
  %call2 = call zeroext i8 @BLI_rcti_isect_pt_v(%struct.rcti* %totrct, i32* %7), !dbg !5305
  %tobool3 = icmp ne i8 %call2, 0, !dbg !5305
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !5306

if.then4:                                         ; preds = %for.body
  %8 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !5307
  store %struct.ScrArea* %8, %struct.ScrArea** %retval, align 8, !dbg !5308
  br label %return, !dbg !5308

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !5309

for.inc:                                          ; preds = %if.end
  %9 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !5310
  %next = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %9, i32 0, i32 0, !dbg !5311
  %10 = load %struct.ScrArea*, %struct.ScrArea** %next, align 8, !dbg !5311
  store %struct.ScrArea* %10, %struct.ScrArea** %sa, align 8, !dbg !5312
  br label %for.cond, !dbg !5313, !llvm.loop !5314

for.end:                                          ; preds = %for.cond
  br label %if.end5, !dbg !5315

if.end5:                                          ; preds = %for.end, %entry
  store %struct.ScrArea* null, %struct.ScrArea** %retval, align 8, !dbg !5316
  br label %return, !dbg !5316

return:                                           ; preds = %if.end5, %if.then4
  %11 = load %struct.ScrArea*, %struct.ScrArea** %retval, align 8, !dbg !5317
  ret %struct.ScrArea* %11, !dbg !5317
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.ARegion* @region_event_inside(%struct.bContext* %C, i32* %xy) #0 !dbg !5318 {
entry:
  %retval = alloca %struct.ARegion*, align 8
  %C.addr = alloca %struct.bContext*, align 8
  %xy.addr = alloca i32*, align 8
  %screen = alloca %struct.bScreen*, align 8
  %area = alloca %struct.ScrArea*, align 8
  %ar = alloca %struct.ARegion*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5321, metadata !DIExpression()), !dbg !5322
  store i32* %xy, i32** %xy.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %xy.addr, metadata !5323, metadata !DIExpression()), !dbg !5324
  call void @llvm.dbg.declare(metadata %struct.bScreen** %screen, metadata !5325, metadata !DIExpression()), !dbg !5326
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5327
  %call = call %struct.bScreen* @CTX_wm_screen(%struct.bContext* %0), !dbg !5328
  store %struct.bScreen* %call, %struct.bScreen** %screen, align 8, !dbg !5326
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %area, metadata !5329, metadata !DIExpression()), !dbg !5330
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5331
  %call1 = call %struct.ScrArea* @CTX_wm_area(%struct.bContext* %1), !dbg !5332
  store %struct.ScrArea* %call1, %struct.ScrArea** %area, align 8, !dbg !5330
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar, metadata !5333, metadata !DIExpression()), !dbg !5334
  %2 = load %struct.bScreen*, %struct.bScreen** %screen, align 8, !dbg !5335
  %tobool = icmp ne %struct.bScreen* %2, null, !dbg !5335
  br i1 %tobool, label %land.lhs.true, label %if.end7, !dbg !5337

land.lhs.true:                                    ; preds = %entry
  %3 = load %struct.ScrArea*, %struct.ScrArea** %area, align 8, !dbg !5338
  %tobool2 = icmp ne %struct.ScrArea* %3, null, !dbg !5338
  br i1 %tobool2, label %if.then, label %if.end7, !dbg !5339

if.then:                                          ; preds = %land.lhs.true
  %4 = load %struct.ScrArea*, %struct.ScrArea** %area, align 8, !dbg !5340
  %regionbase = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %4, i32 0, i32 20, !dbg !5342
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %regionbase, i32 0, i32 0, !dbg !5343
  %5 = load i8*, i8** %first, align 8, !dbg !5343
  %6 = bitcast i8* %5 to %struct.ARegion*, !dbg !5340
  store %struct.ARegion* %6, %struct.ARegion** %ar, align 8, !dbg !5344
  br label %for.cond, !dbg !5345

for.cond:                                         ; preds = %for.inc, %if.then
  %7 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !5346
  %tobool3 = icmp ne %struct.ARegion* %7, null, !dbg !5348
  br i1 %tobool3, label %for.body, label %for.end, !dbg !5348

for.body:                                         ; preds = %for.cond
  %8 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !5349
  %winrct = getelementptr inbounds %struct.ARegion, %struct.ARegion* %8, i32 0, i32 3, !dbg !5351
  %9 = load i32*, i32** %xy.addr, align 8, !dbg !5352
  %call4 = call zeroext i8 @BLI_rcti_isect_pt_v(%struct.rcti* %winrct, i32* %9), !dbg !5353
  %tobool5 = icmp ne i8 %call4, 0, !dbg !5353
  br i1 %tobool5, label %if.then6, label %if.end, !dbg !5354

if.then6:                                         ; preds = %for.body
  %10 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !5355
  store %struct.ARegion* %10, %struct.ARegion** %retval, align 8, !dbg !5356
  br label %return, !dbg !5356

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !5357

for.inc:                                          ; preds = %if.end
  %11 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !5358
  %next = getelementptr inbounds %struct.ARegion, %struct.ARegion* %11, i32 0, i32 0, !dbg !5359
  %12 = load %struct.ARegion*, %struct.ARegion** %next, align 8, !dbg !5359
  store %struct.ARegion* %12, %struct.ARegion** %ar, align 8, !dbg !5360
  br label %for.cond, !dbg !5361, !llvm.loop !5362

for.end:                                          ; preds = %for.cond
  br label %if.end7, !dbg !5363

if.end7:                                          ; preds = %for.end, %land.lhs.true, %entry
  store %struct.ARegion* null, %struct.ARegion** %retval, align 8, !dbg !5364
  br label %return, !dbg !5364

return:                                           ; preds = %if.end7, %if.then6
  %13 = load %struct.ARegion*, %struct.ARegion** %retval, align 8, !dbg !5365
  ret %struct.ARegion* %13, !dbg !5365
}

declare dso_local void @wm_window_make_drawable(%struct.wmWindowManager*, %struct.wmWindow*) #3

; Function Attrs: noinline nounwind uwtable
define internal void @wm_region_mouse_co(%struct.bContext* %C, %struct.wmEvent* %event) #0 !dbg !5366 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %ar = alloca %struct.ARegion*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5369, metadata !DIExpression()), !dbg !5370
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !5371, metadata !DIExpression()), !dbg !5372
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar, metadata !5373, metadata !DIExpression()), !dbg !5374
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5375
  %call = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %0), !dbg !5376
  store %struct.ARegion* %call, %struct.ARegion** %ar, align 8, !dbg !5374
  %1 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !5377
  %tobool = icmp ne %struct.ARegion* %1, null, !dbg !5377
  br i1 %tobool, label %if.then, label %if.else, !dbg !5379

if.then:                                          ; preds = %entry
  %2 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !5380
  %x = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %2, i32 0, i32 4, !dbg !5382
  %3 = load i32, i32* %x, align 4, !dbg !5382
  %4 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !5383
  %winrct = getelementptr inbounds %struct.ARegion, %struct.ARegion* %4, i32 0, i32 3, !dbg !5384
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %winrct, i32 0, i32 0, !dbg !5385
  %5 = load i32, i32* %xmin, align 8, !dbg !5385
  %sub = sub nsw i32 %3, %5, !dbg !5386
  %6 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !5387
  %mval = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %6, i32 0, i32 6, !dbg !5388
  %arrayidx = getelementptr inbounds [2 x i32], [2 x i32]* %mval, i64 0, i64 0, !dbg !5387
  store i32 %sub, i32* %arrayidx, align 4, !dbg !5389
  %7 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !5390
  %y = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %7, i32 0, i32 5, !dbg !5391
  %8 = load i32, i32* %y, align 8, !dbg !5391
  %9 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !5392
  %winrct1 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %9, i32 0, i32 3, !dbg !5393
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %winrct1, i32 0, i32 2, !dbg !5394
  %10 = load i32, i32* %ymin, align 8, !dbg !5394
  %sub2 = sub nsw i32 %8, %10, !dbg !5395
  %11 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !5396
  %mval3 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %11, i32 0, i32 6, !dbg !5397
  %arrayidx4 = getelementptr inbounds [2 x i32], [2 x i32]* %mval3, i64 0, i64 1, !dbg !5396
  store i32 %sub2, i32* %arrayidx4, align 4, !dbg !5398
  br label %if.end, !dbg !5399

if.else:                                          ; preds = %entry
  %12 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !5400
  %mval5 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %12, i32 0, i32 6, !dbg !5402
  %arrayidx6 = getelementptr inbounds [2 x i32], [2 x i32]* %mval5, i64 0, i64 0, !dbg !5400
  store i32 -1, i32* %arrayidx6, align 4, !dbg !5403
  %13 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !5404
  %mval7 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %13, i32 0, i32 6, !dbg !5405
  %arrayidx8 = getelementptr inbounds [2 x i32], [2 x i32]* %mval7, i64 0, i64 1, !dbg !5404
  store i32 -1, i32* %arrayidx8, align 4, !dbg !5406
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  ret void, !dbg !5407
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @wm_handlers_do(%struct.bContext* %C, %struct.wmEvent* %event, %struct.ListBase* %handlers) #0 !dbg !5408 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %handlers.addr = alloca %struct.ListBase*, align 8
  %action = alloca i32, align 4
  %win = alloca %struct.wmWindow*, align 8
  %win82 = alloca %struct.wmWindow*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5411, metadata !DIExpression()), !dbg !5412
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !5413, metadata !DIExpression()), !dbg !5414
  store %struct.ListBase* %handlers, %struct.ListBase** %handlers.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %handlers.addr, metadata !5415, metadata !DIExpression()), !dbg !5416
  call void @llvm.dbg.declare(metadata i32* %action, metadata !5417, metadata !DIExpression()), !dbg !5418
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5419
  %1 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !5420
  %2 = load %struct.ListBase*, %struct.ListBase** %handlers.addr, align 8, !dbg !5421
  %call = call i32 @wm_handlers_do_intern(%struct.bContext* %0, %struct.wmEvent* %1, %struct.ListBase* %2), !dbg !5422
  store i32 %call, i32* %action, align 4, !dbg !5418
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5423
  %call1 = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %3), !dbg !5425
  %cmp = icmp eq %struct.wmWindow* %call1, null, !dbg !5426
  br i1 %cmp, label %if.then, label %if.end, !dbg !5427

if.then:                                          ; preds = %entry
  %4 = load i32, i32* %action, align 4, !dbg !5428
  store i32 %4, i32* %retval, align 4, !dbg !5429
  br label %return, !dbg !5429

if.end:                                           ; preds = %entry
  %5 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !5430
  %type = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %5, i32 0, i32 2, !dbg !5430
  %6 = load i16, i16* %type, align 8, !dbg !5430
  %conv = sext i16 %6 to i32, !dbg !5430
  %cmp2 = icmp eq i32 %conv, 4, !dbg !5430
  br i1 %cmp2, label %if.end90, label %lor.lhs.false, !dbg !5430

lor.lhs.false:                                    ; preds = %if.end
  %7 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !5430
  %type4 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %7, i32 0, i32 2, !dbg !5430
  %8 = load i16, i16* %type4, align 8, !dbg !5430
  %conv5 = sext i16 %8 to i32, !dbg !5430
  %cmp6 = icmp eq i32 %conv5, 17, !dbg !5430
  br i1 %cmp6, label %if.end90, label %lor.lhs.false8, !dbg !5430

lor.lhs.false8:                                   ; preds = %lor.lhs.false
  %9 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !5430
  %type9 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %9, i32 0, i32 2, !dbg !5430
  %10 = load i16, i16* %type9, align 8, !dbg !5430
  %conv10 = sext i16 %10 to i32, !dbg !5430
  %cmp11 = icmp eq i32 %conv10, 0, !dbg !5430
  br i1 %cmp11, label %if.end90, label %land.lhs.true, !dbg !5432

land.lhs.true:                                    ; preds = %lor.lhs.false8
  %11 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !5433
  %type13 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %11, i32 0, i32 2, !dbg !5433
  %12 = load i16, i16* %type13, align 8, !dbg !5433
  %conv14 = sext i16 %12 to i32, !dbg !5433
  %cmp15 = icmp sge i32 %conv14, 272, !dbg !5433
  br i1 %cmp15, label %land.lhs.true17, label %if.then22, !dbg !5433

land.lhs.true17:                                  ; preds = %land.lhs.true
  %13 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !5433
  %type18 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %13, i32 0, i32 2, !dbg !5433
  %14 = load i16, i16* %type18, align 8, !dbg !5433
  %conv19 = sext i16 %14 to i32, !dbg !5433
  %cmp20 = icmp sle i32 %conv19, 287, !dbg !5433
  br i1 %cmp20, label %if.end90, label %if.then22, !dbg !5434

if.then22:                                        ; preds = %land.lhs.true17, %land.lhs.true
  %15 = load i32, i32* %action, align 4, !dbg !5435
  %call23 = call i32 @wm_action_not_handled(i32 %15), !dbg !5438
  %tobool = icmp ne i32 %call23, 0, !dbg !5438
  br i1 %tobool, label %if.then24, label %if.else81, !dbg !5439

if.then24:                                        ; preds = %if.then22
  call void @llvm.dbg.declare(metadata %struct.wmWindow** %win, metadata !5440, metadata !DIExpression()), !dbg !5442
  %16 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5443
  %call25 = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %16), !dbg !5444
  store %struct.wmWindow* %call25, %struct.wmWindow** %win, align 8, !dbg !5442
  %17 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !5445
  %tobool26 = icmp ne %struct.wmWindow* %17, null, !dbg !5445
  br i1 %tobool26, label %land.lhs.true27, label %if.end32, !dbg !5447

land.lhs.true27:                                  ; preds = %if.then24
  %18 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !5448
  %val = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %18, i32 0, i32 3, !dbg !5449
  %19 = load i16, i16* %val, align 2, !dbg !5449
  %conv28 = sext i16 %19 to i32, !dbg !5448
  %cmp29 = icmp eq i32 %conv28, 1, !dbg !5450
  br i1 %cmp29, label %if.then31, label %if.end32, !dbg !5451

if.then31:                                        ; preds = %land.lhs.true27
  %20 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !5452
  %eventstate = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %20, i32 0, i32 21, !dbg !5454
  %21 = load %struct.wmEvent*, %struct.wmEvent** %eventstate, align 8, !dbg !5454
  %check_click = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %21, i32 0, i32 22, !dbg !5455
  store i16 1, i16* %check_click, align 2, !dbg !5456
  br label %if.end32, !dbg !5457

if.end32:                                         ; preds = %if.then31, %land.lhs.true27, %if.then24
  %22 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !5458
  %tobool33 = icmp ne %struct.wmWindow* %22, null, !dbg !5458
  br i1 %tobool33, label %land.lhs.true34, label %if.end80, !dbg !5460

land.lhs.true34:                                  ; preds = %if.end32
  %23 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !5461
  %eventstate35 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %23, i32 0, i32 21, !dbg !5462
  %24 = load %struct.wmEvent*, %struct.wmEvent** %eventstate35, align 8, !dbg !5462
  %prevtype = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %24, i32 0, i32 10, !dbg !5463
  %25 = load i16, i16* %prevtype, align 4, !dbg !5463
  %conv36 = sext i16 %25 to i32, !dbg !5461
  %26 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !5464
  %type37 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %26, i32 0, i32 2, !dbg !5465
  %27 = load i16, i16* %type37, align 8, !dbg !5465
  %conv38 = sext i16 %27 to i32, !dbg !5464
  %cmp39 = icmp eq i32 %conv36, %conv38, !dbg !5466
  br i1 %cmp39, label %if.then41, label %if.end80, !dbg !5467

if.then41:                                        ; preds = %land.lhs.true34
  %28 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !5468
  %val42 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %28, i32 0, i32 3, !dbg !5471
  %29 = load i16, i16* %val42, align 2, !dbg !5471
  %conv43 = sext i16 %29 to i32, !dbg !5468
  %cmp44 = icmp eq i32 %conv43, 2, !dbg !5472
  br i1 %cmp44, label %land.lhs.true46, label %if.else, !dbg !5473

land.lhs.true46:                                  ; preds = %if.then41
  %30 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !5474
  %eventstate47 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %30, i32 0, i32 21, !dbg !5475
  %31 = load %struct.wmEvent*, %struct.wmEvent** %eventstate47, align 8, !dbg !5475
  %prevval = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %31, i32 0, i32 11, !dbg !5476
  %32 = load i16, i16* %prevval, align 2, !dbg !5476
  %conv48 = sext i16 %32 to i32, !dbg !5474
  %cmp49 = icmp eq i32 %conv48, 1, !dbg !5477
  br i1 %cmp49, label %land.lhs.true51, label %if.else, !dbg !5478

land.lhs.true51:                                  ; preds = %land.lhs.true46
  %33 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !5479
  %eventstate52 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %33, i32 0, i32 21, !dbg !5480
  %34 = load %struct.wmEvent*, %struct.wmEvent** %eventstate52, align 8, !dbg !5480
  %check_click53 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %34, i32 0, i32 22, !dbg !5481
  %35 = load i16, i16* %check_click53, align 2, !dbg !5481
  %conv54 = sext i16 %35 to i32, !dbg !5479
  %cmp55 = icmp eq i32 %conv54, 1, !dbg !5482
  br i1 %cmp55, label %if.then57, label %if.else, !dbg !5483

if.then57:                                        ; preds = %land.lhs.true51
  %36 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !5484
  %val58 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %36, i32 0, i32 3, !dbg !5486
  store i16 3, i16* %val58, align 2, !dbg !5487
  %37 = load i32, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 16), align 4, !dbg !5488
  %and = and i32 %37, 16, !dbg !5490
  %tobool59 = icmp ne i32 %and, 0, !dbg !5490
  br i1 %tobool59, label %if.then60, label %if.end62, !dbg !5491

if.then60:                                        ; preds = %if.then57
  %call61 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.27, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @__func__.wm_handlers_do, i64 0, i64 0)), !dbg !5492
  br label %if.end62, !dbg !5494

if.end62:                                         ; preds = %if.then60, %if.then57
  %38 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5495
  %39 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !5496
  %40 = load %struct.ListBase*, %struct.ListBase** %handlers.addr, align 8, !dbg !5497
  %call63 = call i32 @wm_handlers_do_intern(%struct.bContext* %38, %struct.wmEvent* %39, %struct.ListBase* %40), !dbg !5498
  %41 = load i32, i32* %action, align 4, !dbg !5499
  %or = or i32 %41, %call63, !dbg !5499
  store i32 %or, i32* %action, align 4, !dbg !5499
  %42 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !5500
  %val64 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %42, i32 0, i32 3, !dbg !5501
  store i16 2, i16* %val64, align 2, !dbg !5502
  br label %if.end79, !dbg !5503

if.else:                                          ; preds = %land.lhs.true51, %land.lhs.true46, %if.then41
  %43 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !5504
  %val65 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %43, i32 0, i32 3, !dbg !5506
  %44 = load i16, i16* %val65, align 2, !dbg !5506
  %conv66 = sext i16 %44 to i32, !dbg !5504
  %cmp67 = icmp eq i32 %conv66, 4, !dbg !5507
  br i1 %cmp67, label %if.then69, label %if.end78, !dbg !5508

if.then69:                                        ; preds = %if.else
  %45 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !5509
  %val70 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %45, i32 0, i32 3, !dbg !5511
  store i16 1, i16* %val70, align 2, !dbg !5512
  %46 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5513
  %47 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !5514
  %48 = load %struct.ListBase*, %struct.ListBase** %handlers.addr, align 8, !dbg !5515
  %call71 = call i32 @wm_handlers_do_intern(%struct.bContext* %46, %struct.wmEvent* %47, %struct.ListBase* %48), !dbg !5516
  %49 = load i32, i32* %action, align 4, !dbg !5517
  %or72 = or i32 %49, %call71, !dbg !5517
  store i32 %or72, i32* %action, align 4, !dbg !5517
  %50 = load i32, i32* %action, align 4, !dbg !5518
  %call73 = call i32 @wm_action_not_handled(i32 %50), !dbg !5520
  %tobool74 = icmp ne i32 %call73, 0, !dbg !5520
  br i1 %tobool74, label %if.then75, label %if.end77, !dbg !5521

if.then75:                                        ; preds = %if.then69
  %51 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !5522
  %val76 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %51, i32 0, i32 3, !dbg !5524
  store i16 4, i16* %val76, align 2, !dbg !5525
  br label %if.end77, !dbg !5526

if.end77:                                         ; preds = %if.then75, %if.then69
  br label %if.end78, !dbg !5527

if.end78:                                         ; preds = %if.end77, %if.else
  br label %if.end79

if.end79:                                         ; preds = %if.end78, %if.end62
  br label %if.end80, !dbg !5528

if.end80:                                         ; preds = %if.end79, %land.lhs.true34, %if.end32
  br label %if.end89, !dbg !5529

if.else81:                                        ; preds = %if.then22
  call void @llvm.dbg.declare(metadata %struct.wmWindow** %win82, metadata !5530, metadata !DIExpression()), !dbg !5532
  %52 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5533
  %call83 = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %52), !dbg !5534
  store %struct.wmWindow* %call83, %struct.wmWindow** %win82, align 8, !dbg !5532
  %53 = load %struct.wmWindow*, %struct.wmWindow** %win82, align 8, !dbg !5535
  %tobool84 = icmp ne %struct.wmWindow* %53, null, !dbg !5535
  br i1 %tobool84, label %if.then85, label %if.end88, !dbg !5537

if.then85:                                        ; preds = %if.else81
  %54 = load %struct.wmWindow*, %struct.wmWindow** %win82, align 8, !dbg !5538
  %eventstate86 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %54, i32 0, i32 21, !dbg !5539
  %55 = load %struct.wmEvent*, %struct.wmEvent** %eventstate86, align 8, !dbg !5539
  %check_click87 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %55, i32 0, i32 22, !dbg !5540
  store i16 0, i16* %check_click87, align 2, !dbg !5541
  br label %if.end88, !dbg !5538

if.end88:                                         ; preds = %if.then85, %if.else81
  br label %if.end89

if.end89:                                         ; preds = %if.end88, %if.end80
  br label %if.end90, !dbg !5542

if.end90:                                         ; preds = %if.end89, %land.lhs.true17, %lor.lhs.false8, %lor.lhs.false, %if.end
  %56 = load i32, i32* %action, align 4, !dbg !5543
  store i32 %56, i32* %retval, align 4, !dbg !5544
  br label %return, !dbg !5544

return:                                           ; preds = %if.end90, %if.then
  %57 = load i32, i32* %retval, align 4, !dbg !5545
  ret i32 %57, !dbg !5545
}

; Function Attrs: noinline nounwind uwtable
define internal void @wm_event_drag_test(%struct.wmWindowManager* %wm, %struct.wmWindow* %win, %struct.wmEvent* %event) #0 !dbg !5546 {
entry:
  %wm.addr = alloca %struct.wmWindowManager*, align 8
  %win.addr = alloca %struct.wmWindow*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  store %struct.wmWindowManager* %wm, %struct.wmWindowManager** %wm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmWindowManager** %wm.addr, metadata !5549, metadata !DIExpression()), !dbg !5550
  store %struct.wmWindow* %win, %struct.wmWindow** %win.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmWindow** %win.addr, metadata !5551, metadata !DIExpression()), !dbg !5552
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !5553, metadata !DIExpression()), !dbg !5554
  %0 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm.addr, align 8, !dbg !5555
  %drags = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %0, i32 0, i32 12, !dbg !5557
  %call = call zeroext i8 @BLI_listbase_is_empty(%struct.ListBase* %drags), !dbg !5558
  %tobool = icmp ne i8 %call, 0, !dbg !5558
  br i1 %tobool, label %if.then, label %if.end, !dbg !5559

if.then:                                          ; preds = %entry
  br label %if.end59, !dbg !5560

if.end:                                           ; preds = %entry
  %1 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !5562
  %type = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %1, i32 0, i32 2, !dbg !5564
  %2 = load i16, i16* %type, align 8, !dbg !5564
  %conv = sext i16 %2 to i32, !dbg !5562
  %cmp = icmp eq i32 %conv, 4, !dbg !5565
  br i1 %cmp, label %if.then15, label %lor.lhs.false, !dbg !5566

lor.lhs.false:                                    ; preds = %if.end
  %3 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !5567
  %type2 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %3, i32 0, i32 2, !dbg !5567
  %4 = load i16, i16* %type2, align 8, !dbg !5567
  %conv3 = sext i16 %4 to i32, !dbg !5567
  %cmp4 = icmp sge i32 %conv3, 212, !dbg !5567
  br i1 %cmp4, label %land.lhs.true, label %lor.lhs.false10, !dbg !5567

land.lhs.true:                                    ; preds = %lor.lhs.false
  %5 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !5567
  %type6 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %5, i32 0, i32 2, !dbg !5567
  %6 = load i16, i16* %type6, align 8, !dbg !5567
  %conv7 = sext i16 %6 to i32, !dbg !5567
  %cmp8 = icmp sle i32 %conv7, 217, !dbg !5567
  br i1 %cmp8, label %if.then15, label %lor.lhs.false10, !dbg !5567

lor.lhs.false10:                                  ; preds = %land.lhs.true, %lor.lhs.false
  %7 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !5567
  %type11 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %7, i32 0, i32 2, !dbg !5567
  %8 = load i16, i16* %type11, align 8, !dbg !5567
  %conv12 = sext i16 %8 to i32, !dbg !5567
  %cmp13 = icmp eq i32 %conv12, 172, !dbg !5567
  br i1 %cmp13, label %if.then15, label %if.else, !dbg !5568

if.then15:                                        ; preds = %lor.lhs.false10, %land.lhs.true, %if.end
  %9 = load %struct.wmWindow*, %struct.wmWindow** %win.addr, align 8, !dbg !5569
  %screen = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %9, i32 0, i32 3, !dbg !5571
  %10 = load %struct.bScreen*, %struct.bScreen** %screen, align 8, !dbg !5571
  %do_draw_drag = getelementptr inbounds %struct.bScreen, %struct.bScreen* %10, i32 0, i32 16, !dbg !5572
  store i16 1, i16* %do_draw_drag, align 2, !dbg !5573
  br label %if.end49, !dbg !5574

if.else:                                          ; preds = %lor.lhs.false10
  %11 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !5575
  %type16 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %11, i32 0, i32 2, !dbg !5577
  %12 = load i16, i16* %type16, align 8, !dbg !5577
  %conv17 = sext i16 %12 to i32, !dbg !5575
  %cmp18 = icmp eq i32 %conv17, 218, !dbg !5578
  br i1 %cmp18, label %if.then20, label %if.else24, !dbg !5579

if.then20:                                        ; preds = %if.else
  %13 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm.addr, align 8, !dbg !5580
  %drags21 = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %13, i32 0, i32 12, !dbg !5582
  call void @WM_drag_free_list(%struct.ListBase* %drags21), !dbg !5583
  %14 = load %struct.wmWindow*, %struct.wmWindow** %win.addr, align 8, !dbg !5584
  %screen22 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %14, i32 0, i32 3, !dbg !5585
  %15 = load %struct.bScreen*, %struct.bScreen** %screen22, align 8, !dbg !5585
  %do_draw_drag23 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %15, i32 0, i32 16, !dbg !5586
  store i16 1, i16* %do_draw_drag23, align 2, !dbg !5587
  br label %if.end48, !dbg !5588

if.else24:                                        ; preds = %if.else
  %16 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !5589
  %type25 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %16, i32 0, i32 2, !dbg !5591
  %17 = load i16, i16* %type25, align 8, !dbg !5591
  %conv26 = sext i16 %17 to i32, !dbg !5589
  %cmp27 = icmp eq i32 %conv26, 1, !dbg !5592
  br i1 %cmp27, label %land.lhs.true29, label %if.end47, !dbg !5593

land.lhs.true29:                                  ; preds = %if.else24
  %18 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !5594
  %val = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %18, i32 0, i32 3, !dbg !5595
  %19 = load i16, i16* %val, align 2, !dbg !5595
  %conv30 = sext i16 %19 to i32, !dbg !5594
  %cmp31 = icmp eq i32 %conv30, 2, !dbg !5596
  br i1 %cmp31, label %if.then33, label %if.end47, !dbg !5597

if.then33:                                        ; preds = %land.lhs.true29
  %20 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !5598
  %type34 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %20, i32 0, i32 2, !dbg !5600
  store i16 20515, i16* %type34, align 8, !dbg !5601
  %21 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !5602
  %customdata = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %21, i32 0, i32 28, !dbg !5604
  %22 = load i8*, i8** %customdata, align 8, !dbg !5604
  %tobool35 = icmp ne i8* %22, null, !dbg !5602
  br i1 %tobool35, label %if.then36, label %if.end41, !dbg !5605

if.then36:                                        ; preds = %if.then33
  %23 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !5606
  %customdatafree = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %23, i32 0, i32 26, !dbg !5609
  %24 = load i16, i16* %customdatafree, align 2, !dbg !5609
  %tobool37 = icmp ne i16 %24, 0, !dbg !5606
  br i1 %tobool37, label %if.then38, label %if.end40, !dbg !5610

if.then38:                                        ; preds = %if.then36
  %25 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !5611
  %26 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !5612
  %customdata39 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %26, i32 0, i32 28, !dbg !5613
  %27 = load i8*, i8** %customdata39, align 8, !dbg !5613
  call void %25(i8* %27), !dbg !5611
  br label %if.end40, !dbg !5611

if.end40:                                         ; preds = %if.then38, %if.then36
  br label %if.end41, !dbg !5614

if.end41:                                         ; preds = %if.end40, %if.then33
  %28 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !5615
  %custom = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %28, i32 0, i32 25, !dbg !5616
  store i16 3, i16* %custom, align 8, !dbg !5617
  %29 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm.addr, align 8, !dbg !5618
  %drags42 = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %29, i32 0, i32 12, !dbg !5619
  %30 = bitcast %struct.ListBase* %drags42 to i8*, !dbg !5620
  %31 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !5621
  %customdata43 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %31, i32 0, i32 28, !dbg !5622
  store i8* %30, i8** %customdata43, align 8, !dbg !5623
  %32 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !5624
  %customdatafree44 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %32, i32 0, i32 26, !dbg !5625
  store i16 1, i16* %customdatafree44, align 2, !dbg !5626
  %33 = load %struct.wmWindow*, %struct.wmWindow** %win.addr, align 8, !dbg !5627
  %screen45 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %33, i32 0, i32 3, !dbg !5628
  %34 = load %struct.bScreen*, %struct.bScreen** %screen45, align 8, !dbg !5628
  %do_draw_drag46 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %34, i32 0, i32 16, !dbg !5629
  store i16 1, i16* %do_draw_drag46, align 2, !dbg !5630
  br label %if.end47, !dbg !5631

if.end47:                                         ; preds = %if.end41, %land.lhs.true29, %if.else24
  br label %if.end48

if.end48:                                         ; preds = %if.end47, %if.then20
  br label %if.end49

if.end49:                                         ; preds = %if.end48, %if.then15
  %35 = load %struct.wmWindow*, %struct.wmWindow** %win.addr, align 8, !dbg !5632
  %screen50 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %35, i32 0, i32 3, !dbg !5634
  %36 = load %struct.bScreen*, %struct.bScreen** %screen50, align 8, !dbg !5634
  %do_draw_drag51 = getelementptr inbounds %struct.bScreen, %struct.bScreen* %36, i32 0, i32 16, !dbg !5635
  %37 = load i16, i16* %do_draw_drag51, align 2, !dbg !5635
  %tobool52 = icmp ne i16 %37, 0, !dbg !5632
  br i1 %tobool52, label %if.then53, label %if.end59, !dbg !5636

if.then53:                                        ; preds = %if.end49
  %38 = load %struct.wmWindow*, %struct.wmWindow** %win.addr, align 8, !dbg !5637
  %drawmethod = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %38, i32 0, i32 24, !dbg !5639
  %39 = load i32, i32* %drawmethod, align 8, !dbg !5639
  %cmp54 = icmp eq i32 %39, 1, !dbg !5640
  br i1 %cmp54, label %if.then56, label %if.end58, !dbg !5641

if.then56:                                        ; preds = %if.then53
  %40 = load %struct.wmWindow*, %struct.wmWindow** %win.addr, align 8, !dbg !5642
  %screen57 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %40, i32 0, i32 3, !dbg !5643
  %41 = load %struct.bScreen*, %struct.bScreen** %screen57, align 8, !dbg !5643
  %do_draw = getelementptr inbounds %struct.bScreen, %struct.bScreen* %41, i32 0, i32 12, !dbg !5644
  store i16 1, i16* %do_draw, align 2, !dbg !5645
  br label %if.end58, !dbg !5642

if.end58:                                         ; preds = %if.then56, %if.then53
  br label %if.end59, !dbg !5646

if.end59:                                         ; preds = %if.then, %if.end58, %if.end49
  ret void, !dbg !5647
}

declare dso_local void @wm_tweakevent_test(%struct.bContext*, %struct.wmEvent*, i32) #3

declare dso_local void @ED_screen_set_subwinactive(%struct.bContext*, %struct.wmEvent*) #3

; Function Attrs: noinline nounwind uwtable
define internal void @wm_paintcursor_test(%struct.bContext* %C, %struct.wmEvent* %event) #0 !dbg !5648 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %wm = alloca %struct.wmWindowManager*, align 8
  %ar = alloca %struct.ARegion*, align 8
  %sa = alloca %struct.ScrArea*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5649, metadata !DIExpression()), !dbg !5650
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !5651, metadata !DIExpression()), !dbg !5652
  call void @llvm.dbg.declare(metadata %struct.wmWindowManager** %wm, metadata !5653, metadata !DIExpression()), !dbg !5654
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5655
  %call = call %struct.wmWindowManager* @CTX_wm_manager(%struct.bContext* %0), !dbg !5656
  store %struct.wmWindowManager* %call, %struct.wmWindowManager** %wm, align 8, !dbg !5654
  %1 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !5657
  %paintcursors = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %1, i32 0, i32 11, !dbg !5659
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %paintcursors, i32 0, i32 0, !dbg !5660
  %2 = load i8*, i8** %first, align 8, !dbg !5660
  %tobool = icmp ne i8* %2, null, !dbg !5657
  br i1 %tobool, label %if.then, label %if.end18, !dbg !5661

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar, metadata !5662, metadata !DIExpression()), !dbg !5664
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5665
  %call1 = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %3), !dbg !5666
  store %struct.ARegion* %call1, %struct.ARegion** %ar, align 8, !dbg !5664
  %4 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !5667
  %tobool2 = icmp ne %struct.ARegion* %4, null, !dbg !5667
  br i1 %tobool2, label %if.then3, label %if.end, !dbg !5669

if.then3:                                         ; preds = %if.then
  %5 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5670
  %6 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !5671
  %paintcursors4 = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %6, i32 0, i32 11, !dbg !5672
  %first5 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %paintcursors4, i32 0, i32 0, !dbg !5673
  %7 = load i8*, i8** %first5, align 8, !dbg !5673
  %8 = bitcast i8* %7 to %struct.wmPaintCursor*, !dbg !5671
  %9 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !5674
  call void @wm_paintcursor_tag(%struct.bContext* %5, %struct.wmPaintCursor* %8, %struct.ARegion* %9), !dbg !5675
  br label %if.end, !dbg !5675

if.end:                                           ; preds = %if.then3, %if.then
  %10 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !5676
  %cmp = icmp eq %struct.ARegion* %10, null, !dbg !5678
  br i1 %cmp, label %if.then8, label %lor.lhs.false, !dbg !5679

lor.lhs.false:                                    ; preds = %if.end
  %11 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !5680
  %winrct = getelementptr inbounds %struct.ARegion, %struct.ARegion* %11, i32 0, i32 3, !dbg !5681
  %12 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !5682
  %prevx = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %12, i32 0, i32 12, !dbg !5683
  %call6 = call zeroext i8 @BLI_rcti_isect_pt_v(%struct.rcti* %winrct, i32* %prevx), !dbg !5684
  %tobool7 = icmp ne i8 %call6, 0, !dbg !5684
  br i1 %tobool7, label %if.end17, label %if.then8, !dbg !5685

if.then8:                                         ; preds = %lor.lhs.false, %if.end
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa, metadata !5686, metadata !DIExpression()), !dbg !5688
  %13 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5689
  %call9 = call %struct.ScrArea* @CTX_wm_area(%struct.bContext* %13), !dbg !5690
  store %struct.ScrArea* %call9, %struct.ScrArea** %sa, align 8, !dbg !5688
  %14 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5691
  %15 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5692
  %16 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !5693
  %prevx10 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %16, i32 0, i32 12, !dbg !5694
  %call11 = call %struct.ScrArea* @area_event_inside(%struct.bContext* %15, i32* %prevx10), !dbg !5695
  call void @CTX_wm_area_set(%struct.bContext* %14, %struct.ScrArea* %call11), !dbg !5696
  %17 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5697
  %18 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5698
  %19 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !5699
  %prevx12 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %19, i32 0, i32 12, !dbg !5700
  %call13 = call %struct.ARegion* @region_event_inside(%struct.bContext* %18, i32* %prevx12), !dbg !5701
  call void @CTX_wm_region_set(%struct.bContext* %17, %struct.ARegion* %call13), !dbg !5702
  %20 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5703
  %21 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !5704
  %paintcursors14 = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %21, i32 0, i32 11, !dbg !5705
  %first15 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %paintcursors14, i32 0, i32 0, !dbg !5706
  %22 = load i8*, i8** %first15, align 8, !dbg !5706
  %23 = bitcast i8* %22 to %struct.wmPaintCursor*, !dbg !5704
  %24 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5707
  %call16 = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %24), !dbg !5708
  call void @wm_paintcursor_tag(%struct.bContext* %20, %struct.wmPaintCursor* %23, %struct.ARegion* %call16), !dbg !5709
  %25 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5710
  %26 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !5711
  call void @CTX_wm_area_set(%struct.bContext* %25, %struct.ScrArea* %26), !dbg !5712
  %27 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5713
  %28 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !5714
  call void @CTX_wm_region_set(%struct.bContext* %27, %struct.ARegion* %28), !dbg !5715
  br label %if.end17, !dbg !5716

if.end17:                                         ; preds = %if.then8, %lor.lhs.false
  br label %if.end18, !dbg !5717

if.end18:                                         ; preds = %if.end17, %entry
  ret void, !dbg !5718
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @wm_event_inside_i(%struct.wmEvent* %event, %struct.rcti* %rect) #0 !dbg !5719 {
entry:
  %retval = alloca i32, align 4
  %event.addr = alloca %struct.wmEvent*, align 8
  %rect.addr = alloca %struct.rcti*, align 8
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !5723, metadata !DIExpression()), !dbg !5724
  store %struct.rcti* %rect, %struct.rcti** %rect.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %rect.addr, metadata !5725, metadata !DIExpression()), !dbg !5726
  %0 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !5727
  %call = call i32 @wm_event_always_pass(%struct.wmEvent* %0), !dbg !5729
  %tobool = icmp ne i32 %call, 0, !dbg !5729
  br i1 %tobool, label %if.then, label %if.end, !dbg !5730

if.then:                                          ; preds = %entry
  store i32 1, i32* %retval, align 4, !dbg !5731
  br label %return, !dbg !5731

if.end:                                           ; preds = %entry
  %1 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !5732
  %2 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !5734
  %x = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %2, i32 0, i32 4, !dbg !5735
  %call1 = call zeroext i8 @BLI_rcti_isect_pt_v(%struct.rcti* %1, i32* %x), !dbg !5736
  %tobool2 = icmp ne i8 %call1, 0, !dbg !5736
  br i1 %tobool2, label %if.then3, label %if.end4, !dbg !5737

if.then3:                                         ; preds = %if.end
  store i32 1, i32* %retval, align 4, !dbg !5738
  br label %return, !dbg !5738

if.end4:                                          ; preds = %if.end
  %3 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !5739
  %type = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %3, i32 0, i32 2, !dbg !5741
  %4 = load i16, i16* %type, align 8, !dbg !5741
  %conv = sext i16 %4 to i32, !dbg !5739
  %cmp = icmp eq i32 %conv, 4, !dbg !5742
  br i1 %cmp, label %if.then6, label %if.end11, !dbg !5743

if.then6:                                         ; preds = %if.end4
  %5 = load %struct.rcti*, %struct.rcti** %rect.addr, align 8, !dbg !5744
  %6 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !5747
  %prevx = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %6, i32 0, i32 12, !dbg !5748
  %call7 = call zeroext i8 @BLI_rcti_isect_pt_v(%struct.rcti* %5, i32* %prevx), !dbg !5749
  %tobool8 = icmp ne i8 %call7, 0, !dbg !5749
  br i1 %tobool8, label %if.then9, label %if.end10, !dbg !5750

if.then9:                                         ; preds = %if.then6
  store i32 1, i32* %retval, align 4, !dbg !5751
  br label %return, !dbg !5751

if.end10:                                         ; preds = %if.then6
  store i32 0, i32* %retval, align 4, !dbg !5753
  br label %return, !dbg !5753

if.end11:                                         ; preds = %if.end4
  store i32 0, i32* %retval, align 4, !dbg !5754
  br label %return, !dbg !5754

return:                                           ; preds = %if.end11, %if.end10, %if.then9, %if.then3, %if.then
  %7 = load i32, i32* %retval, align 4, !dbg !5755
  ret i32 %7, !dbg !5755
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @BLI_listbase_is_empty(%struct.ListBase* %lb) #0 !dbg !5756 {
entry:
  %lb.addr = alloca %struct.ListBase*, align 8
  store %struct.ListBase* %lb, %struct.ListBase** %lb.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb.addr, metadata !5762, metadata !DIExpression()), !dbg !5763
  %0 = load %struct.ListBase*, %struct.ListBase** %lb.addr, align 8, !dbg !5764
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !5765
  %1 = load i8*, i8** %first, align 8, !dbg !5765
  %cmp = icmp eq i8* %1, null, !dbg !5766
  %conv = zext i1 %cmp to i32, !dbg !5766
  %conv1 = trunc i32 %conv to i8, !dbg !5767
  ret i8 %conv1, !dbg !5768
}

declare dso_local void @wm_drags_check_ops(%struct.bContext*, %struct.wmEvent*) #3

declare dso_local zeroext i8 @BLI_rcti_isect_pt_v(%struct.rcti*, i32*) #3

declare dso_local i32 @glGetError() #3

declare dso_local i8* @gluErrorString(i32) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @WM_event_fileselect_event(%struct.wmWindowManager* %wm, i8* %ophandle, i32 %eventval) #0 !dbg !5769 {
entry:
  %wm.addr = alloca %struct.wmWindowManager*, align 8
  %ophandle.addr = alloca i8*, align 8
  %eventval.addr = alloca i32, align 4
  %win = alloca %struct.wmWindow*, align 8
  %event = alloca %struct.wmEvent, align 8
  store %struct.wmWindowManager* %wm, %struct.wmWindowManager** %wm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmWindowManager** %wm.addr, metadata !5772, metadata !DIExpression()), !dbg !5773
  store i8* %ophandle, i8** %ophandle.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %ophandle.addr, metadata !5774, metadata !DIExpression()), !dbg !5775
  store i32 %eventval, i32* %eventval.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %eventval.addr, metadata !5776, metadata !DIExpression()), !dbg !5777
  call void @llvm.dbg.declare(metadata %struct.wmWindow** %win, metadata !5778, metadata !DIExpression()), !dbg !5779
  %0 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm.addr, align 8, !dbg !5780
  %windows = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %0, i32 0, i32 3, !dbg !5782
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %windows, i32 0, i32 0, !dbg !5783
  %1 = load i8*, i8** %first, align 8, !dbg !5783
  %2 = bitcast i8* %1 to %struct.wmWindow*, !dbg !5780
  store %struct.wmWindow* %2, %struct.wmWindow** %win, align 8, !dbg !5784
  br label %for.cond, !dbg !5785

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !5786
  %tobool = icmp ne %struct.wmWindow* %3, null, !dbg !5788
  br i1 %tobool, label %for.body, label %for.end, !dbg !5788

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.wmEvent* %event, metadata !5789, metadata !DIExpression()), !dbg !5791
  %4 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !5792
  %eventstate = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %4, i32 0, i32 21, !dbg !5793
  %5 = load %struct.wmEvent*, %struct.wmEvent** %eventstate, align 8, !dbg !5793
  %6 = bitcast %struct.wmEvent* %event to i8*, !dbg !5794
  %7 = bitcast %struct.wmEvent* %5 to i8*, !dbg !5794
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 120, i1 false), !dbg !5794
  %type = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 2, !dbg !5795
  store i16 20512, i16* %type, align 8, !dbg !5796
  %8 = load i32, i32* %eventval.addr, align 4, !dbg !5797
  %conv = trunc i32 %8 to i16, !dbg !5797
  %val = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 3, !dbg !5798
  store i16 %conv, i16* %val, align 2, !dbg !5799
  %9 = load i8*, i8** %ophandle.addr, align 8, !dbg !5800
  %customdata = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 28, !dbg !5801
  store i8* %9, i8** %customdata, align 8, !dbg !5802
  %10 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !5803
  call void @wm_event_add(%struct.wmWindow* %10, %struct.wmEvent* %event), !dbg !5804
  br label %for.inc, !dbg !5805

for.inc:                                          ; preds = %for.body
  %11 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !5806
  %next = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %11, i32 0, i32 0, !dbg !5807
  %12 = load %struct.wmWindow*, %struct.wmWindow** %next, align 8, !dbg !5807
  store %struct.wmWindow* %12, %struct.wmWindow** %win, align 8, !dbg !5808
  br label %for.cond, !dbg !5809, !llvm.loop !5810

for.end:                                          ; preds = %for.cond
  ret void, !dbg !5812
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @WM_event_add_fileselect(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !5813 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %handler = alloca %struct.wmEventHandler*, align 8
  %handlernext = alloca %struct.wmEventHandler*, align 8
  %wm = alloca %struct.wmWindowManager*, align 8
  %win = alloca %struct.wmWindow*, align 8
  %full = alloca i32, align 4
  %screen = alloca %struct.bScreen*, align 8
  %sa = alloca %struct.ScrArea*, align 8
  %sfile = alloca %struct.SpaceFile*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5816, metadata !DIExpression()), !dbg !5817
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !5818, metadata !DIExpression()), !dbg !5819
  call void @llvm.dbg.declare(metadata %struct.wmEventHandler** %handler, metadata !5820, metadata !DIExpression()), !dbg !5821
  call void @llvm.dbg.declare(metadata %struct.wmEventHandler** %handlernext, metadata !5822, metadata !DIExpression()), !dbg !5823
  call void @llvm.dbg.declare(metadata %struct.wmWindowManager** %wm, metadata !5824, metadata !DIExpression()), !dbg !5825
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5826
  %call = call %struct.wmWindowManager* @CTX_wm_manager(%struct.bContext* %0), !dbg !5827
  store %struct.wmWindowManager* %call, %struct.wmWindowManager** %wm, align 8, !dbg !5825
  call void @llvm.dbg.declare(metadata %struct.wmWindow** %win, metadata !5828, metadata !DIExpression()), !dbg !5829
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5830
  %call1 = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %1), !dbg !5831
  store %struct.wmWindow* %call1, %struct.wmWindow** %win, align 8, !dbg !5829
  call void @llvm.dbg.declare(metadata i32* %full, metadata !5832, metadata !DIExpression()), !dbg !5833
  store i32 1, i32* %full, align 4, !dbg !5833
  %2 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !5834
  %modalhandlers = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %2, i32 0, i32 29, !dbg !5836
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %modalhandlers, i32 0, i32 0, !dbg !5837
  %3 = load i8*, i8** %first, align 8, !dbg !5837
  %4 = bitcast i8* %3 to %struct.wmEventHandler*, !dbg !5834
  store %struct.wmEventHandler* %4, %struct.wmEventHandler** %handler, align 8, !dbg !5838
  br label %for.cond, !dbg !5839

for.cond:                                         ; preds = %for.inc26, %entry
  %5 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !5840
  %tobool = icmp ne %struct.wmEventHandler* %5, null, !dbg !5842
  br i1 %tobool, label %for.body, label %for.end27, !dbg !5842

for.body:                                         ; preds = %for.cond
  %6 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !5843
  %next = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %6, i32 0, i32 0, !dbg !5845
  %7 = load %struct.wmEventHandler*, %struct.wmEventHandler** %next, align 8, !dbg !5845
  store %struct.wmEventHandler* %7, %struct.wmEventHandler** %handlernext, align 8, !dbg !5846
  %8 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !5847
  %type = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %8, i32 0, i32 2, !dbg !5849
  %9 = load i32, i32* %type, align 8, !dbg !5849
  %cmp = icmp eq i32 %9, 1, !dbg !5850
  br i1 %cmp, label %if.then, label %if.end25, !dbg !5851

if.then:                                          ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.bScreen** %screen, metadata !5852, metadata !DIExpression()), !dbg !5854
  %10 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5855
  %call2 = call %struct.bScreen* @CTX_wm_screen(%struct.bContext* %10), !dbg !5856
  store %struct.bScreen* %call2, %struct.bScreen** %screen, align 8, !dbg !5854
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa, metadata !5857, metadata !DIExpression()), !dbg !5858
  %11 = load %struct.bScreen*, %struct.bScreen** %screen, align 8, !dbg !5859
  %areabase = getelementptr inbounds %struct.bScreen, %struct.bScreen* %11, i32 0, i32 3, !dbg !5861
  %first3 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %areabase, i32 0, i32 0, !dbg !5862
  %12 = load i8*, i8** %first3, align 8, !dbg !5862
  %13 = bitcast i8* %12 to %struct.ScrArea*, !dbg !5859
  store %struct.ScrArea* %13, %struct.ScrArea** %sa, align 8, !dbg !5863
  br label %for.cond4, !dbg !5864

for.cond4:                                        ; preds = %for.inc, %if.then
  %14 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !5865
  %tobool5 = icmp ne %struct.ScrArea* %14, null, !dbg !5867
  br i1 %tobool5, label %for.body6, label %for.end, !dbg !5867

for.body6:                                        ; preds = %for.cond4
  %15 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !5868
  %spacetype = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %15, i32 0, i32 8, !dbg !5871
  %16 = load i8, i8* %spacetype, align 8, !dbg !5871
  %conv = zext i8 %16 to i32, !dbg !5868
  %cmp7 = icmp eq i32 %conv, 5, !dbg !5872
  br i1 %cmp7, label %if.then9, label %if.end18, !dbg !5873

if.then9:                                         ; preds = %for.body6
  call void @llvm.dbg.declare(metadata %struct.SpaceFile** %sfile, metadata !5874, metadata !DIExpression()), !dbg !5876
  %17 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !5877
  %spacedata = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %17, i32 0, i32 19, !dbg !5878
  %first10 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %spacedata, i32 0, i32 0, !dbg !5879
  %18 = load i8*, i8** %first10, align 8, !dbg !5879
  %19 = bitcast i8* %18 to %struct.SpaceFile*, !dbg !5877
  store %struct.SpaceFile* %19, %struct.SpaceFile** %sfile, align 8, !dbg !5876
  %20 = load %struct.SpaceFile*, %struct.SpaceFile** %sfile, align 8, !dbg !5880
  %op11 = getelementptr inbounds %struct.SpaceFile, %struct.SpaceFile* %20, i32 0, i32 9, !dbg !5882
  %21 = load %struct.wmOperator*, %struct.wmOperator** %op11, align 8, !dbg !5882
  %22 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !5883
  %op12 = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %22, i32 0, i32 7, !dbg !5884
  %23 = load %struct.wmOperator*, %struct.wmOperator** %op12, align 8, !dbg !5884
  %cmp13 = icmp eq %struct.wmOperator* %21, %23, !dbg !5885
  br i1 %cmp13, label %if.then15, label %if.end, !dbg !5886

if.then15:                                        ; preds = %if.then9
  %24 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5887
  %25 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !5889
  call void @CTX_wm_area_set(%struct.bContext* %24, %struct.ScrArea* %25), !dbg !5890
  %26 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5891
  %27 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !5892
  %modalhandlers16 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %27, i32 0, i32 29, !dbg !5893
  %28 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !5894
  %call17 = call i32 @wm_handler_fileselect_do(%struct.bContext* %26, %struct.ListBase* %modalhandlers16, %struct.wmEventHandler* %28, i32 4), !dbg !5895
  br label %for.end, !dbg !5896

if.end:                                           ; preds = %if.then9
  br label %if.end18, !dbg !5897

if.end18:                                         ; preds = %if.end, %for.body6
  br label %for.inc, !dbg !5898

for.inc:                                          ; preds = %if.end18
  %29 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !5899
  %next19 = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %29, i32 0, i32 0, !dbg !5900
  %30 = load %struct.ScrArea*, %struct.ScrArea** %next19, align 8, !dbg !5900
  store %struct.ScrArea* %30, %struct.ScrArea** %sa, align 8, !dbg !5901
  br label %for.cond4, !dbg !5902, !llvm.loop !5903

for.end:                                          ; preds = %if.then15, %for.cond4
  %31 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !5905
  %tobool20 = icmp ne %struct.ScrArea* %31, null, !dbg !5905
  br i1 %tobool20, label %if.end24, label %if.then21, !dbg !5907

if.then21:                                        ; preds = %for.end
  %32 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5908
  %33 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !5909
  %modalhandlers22 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %33, i32 0, i32 29, !dbg !5910
  %34 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !5911
  %call23 = call i32 @wm_handler_fileselect_do(%struct.bContext* %32, %struct.ListBase* %modalhandlers22, %struct.wmEventHandler* %34, i32 5), !dbg !5912
  br label %if.end24, !dbg !5912

if.end24:                                         ; preds = %if.then21, %for.end
  br label %if.end25, !dbg !5913

if.end25:                                         ; preds = %if.end24, %for.body
  br label %for.inc26, !dbg !5914

for.inc26:                                        ; preds = %if.end25
  %35 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handlernext, align 8, !dbg !5915
  store %struct.wmEventHandler* %35, %struct.wmEventHandler** %handler, align 8, !dbg !5916
  br label %for.cond, !dbg !5917, !llvm.loop !5918

for.end27:                                        ; preds = %for.cond
  %36 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !5920
  %call28 = call i8* %36(i64 136, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.10, i64 0, i64 0)), !dbg !5920
  %37 = bitcast i8* %call28 to %struct.wmEventHandler*, !dbg !5920
  store %struct.wmEventHandler* %37, %struct.wmEventHandler** %handler, align 8, !dbg !5921
  %38 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !5922
  %type29 = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %38, i32 0, i32 2, !dbg !5923
  store i32 1, i32* %type29, align 8, !dbg !5924
  %39 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5925
  %40 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !5926
  %op30 = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %40, i32 0, i32 7, !dbg !5927
  store %struct.wmOperator* %39, %struct.wmOperator** %op30, align 8, !dbg !5928
  %41 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5929
  %call31 = call %struct.ScrArea* @CTX_wm_area(%struct.bContext* %41), !dbg !5930
  %42 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !5931
  %op_area = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %42, i32 0, i32 8, !dbg !5932
  store %struct.ScrArea* %call31, %struct.ScrArea** %op_area, align 8, !dbg !5933
  %43 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5934
  %call32 = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %43), !dbg !5935
  %44 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !5936
  %op_region = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %44, i32 0, i32 9, !dbg !5937
  store %struct.ARegion* %call32, %struct.ARegion** %op_region, align 8, !dbg !5938
  %45 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5939
  %call33 = call %struct.bScreen* @CTX_wm_screen(%struct.bContext* %45), !dbg !5940
  %46 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !5941
  %filescreen = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %46, i32 0, i32 16, !dbg !5942
  store %struct.bScreen* %call33, %struct.bScreen** %filescreen, align 8, !dbg !5943
  %47 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !5944
  %modalhandlers34 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %47, i32 0, i32 29, !dbg !5945
  %48 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !5946
  %49 = bitcast %struct.wmEventHandler* %48 to i8*, !dbg !5946
  call void @BLI_addhead(%struct.ListBase* %modalhandlers34, i8* %49), !dbg !5947
  %50 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5948
  %type35 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %50, i32 0, i32 4, !dbg !5950
  %51 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type35, align 8, !dbg !5950
  %check = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %51, i32 0, i32 5, !dbg !5951
  %52 = load i8 (%struct.bContext*, %struct.wmOperator*)*, i8 (%struct.bContext*, %struct.wmOperator*)** %check, align 8, !dbg !5951
  %tobool36 = icmp ne i8 (%struct.bContext*, %struct.wmOperator*)* %52, null, !dbg !5948
  br i1 %tobool36, label %if.then37, label %if.end41, !dbg !5952

if.then37:                                        ; preds = %for.end27
  %53 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5953
  %type38 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %53, i32 0, i32 4, !dbg !5955
  %54 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type38, align 8, !dbg !5955
  %check39 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %54, i32 0, i32 5, !dbg !5956
  %55 = load i8 (%struct.bContext*, %struct.wmOperator*)*, i8 (%struct.bContext*, %struct.wmOperator*)** %check39, align 8, !dbg !5956
  %56 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5957
  %57 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5958
  %call40 = call zeroext i8 %55(%struct.bContext* %56, %struct.wmOperator* %57), !dbg !5953
  br label %if.end41, !dbg !5959

if.end41:                                         ; preds = %if.then37, %for.end27
  %58 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !5960
  %59 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !5961
  %60 = bitcast %struct.wmOperator* %59 to i8*, !dbg !5961
  %61 = load i32, i32* %full, align 4, !dbg !5962
  %tobool42 = icmp ne i32 %61, 0, !dbg !5962
  %62 = zext i1 %tobool42 to i64, !dbg !5962
  %cond = select i1 %tobool42, i32 2, i32 1, !dbg !5962
  call void @WM_event_fileselect_event(%struct.wmWindowManager* %58, i8* %60, i32 %cond), !dbg !5963
  ret void, !dbg !5964
}

declare dso_local %struct.bScreen* @CTX_wm_screen(%struct.bContext*) #3

; Function Attrs: noinline nounwind uwtable
define internal i32 @wm_handler_fileselect_do(%struct.bContext* %C, %struct.ListBase* %handlers, %struct.wmEventHandler* %handler, i32 %val) #0 !dbg !5965 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %handlers.addr = alloca %struct.ListBase*, align 8
  %handler.addr = alloca %struct.wmEventHandler*, align 8
  %val.addr = alloca i32, align 4
  %wm = alloca %struct.wmWindowManager*, align 8
  %sfile = alloca %struct.SpaceFile*, align 8
  %action = alloca i32, align 4
  %sa = alloca %struct.ScrArea*, align 8
  %screen = alloca %struct.bScreen*, align 8
  %screen12 = alloca %struct.bScreen*, align 8
  %retval25 = alloca i32, align 4
  %win_prev = alloca %struct.wmWindow*, align 8
  %area_prev = alloca %struct.ScrArea*, align 8
  %ar_prev = alloca %struct.ARegion*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !5968, metadata !DIExpression()), !dbg !5969
  store %struct.ListBase* %handlers, %struct.ListBase** %handlers.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %handlers.addr, metadata !5970, metadata !DIExpression()), !dbg !5971
  store %struct.wmEventHandler* %handler, %struct.wmEventHandler** %handler.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEventHandler** %handler.addr, metadata !5972, metadata !DIExpression()), !dbg !5973
  store i32 %val, i32* %val.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %val.addr, metadata !5974, metadata !DIExpression()), !dbg !5975
  call void @llvm.dbg.declare(metadata %struct.wmWindowManager** %wm, metadata !5976, metadata !DIExpression()), !dbg !5977
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5978
  %call = call %struct.wmWindowManager* @CTX_wm_manager(%struct.bContext* %0), !dbg !5979
  store %struct.wmWindowManager* %call, %struct.wmWindowManager** %wm, align 8, !dbg !5977
  call void @llvm.dbg.declare(metadata %struct.SpaceFile** %sfile, metadata !5980, metadata !DIExpression()), !dbg !5981
  call void @llvm.dbg.declare(metadata i32* %action, metadata !5982, metadata !DIExpression()), !dbg !5983
  store i32 0, i32* %action, align 4, !dbg !5983
  %1 = load i32, i32* %val.addr, align 4, !dbg !5984
  switch i32 %1, label %sw.epilog [
    i32 1, label %sw.bb
    i32 2, label %sw.bb
    i32 3, label %sw.bb11
    i32 4, label %sw.bb11
    i32 5, label %sw.bb11
  ], !dbg !5985

sw.bb:                                            ; preds = %entry, %entry
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa, metadata !5986, metadata !DIExpression()), !dbg !5989
  %2 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler.addr, align 8, !dbg !5990
  %op_area = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %2, i32 0, i32 8, !dbg !5992
  %3 = load %struct.ScrArea*, %struct.ScrArea** %op_area, align 8, !dbg !5992
  %cmp = icmp eq %struct.ScrArea* %3, null, !dbg !5993
  br i1 %cmp, label %if.then, label %if.else, !dbg !5994

if.then:                                          ; preds = %sw.bb
  call void @llvm.dbg.declare(metadata %struct.bScreen** %screen, metadata !5995, metadata !DIExpression()), !dbg !5997
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !5998
  %call1 = call %struct.bScreen* @CTX_wm_screen(%struct.bContext* %4), !dbg !5999
  store %struct.bScreen* %call1, %struct.bScreen** %screen, align 8, !dbg !5997
  %5 = load %struct.bScreen*, %struct.bScreen** %screen, align 8, !dbg !6000
  %areabase = getelementptr inbounds %struct.bScreen, %struct.bScreen* %5, i32 0, i32 3, !dbg !6001
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %areabase, i32 0, i32 0, !dbg !6002
  %6 = load i8*, i8** %first, align 8, !dbg !6002
  %7 = bitcast i8* %6 to %struct.ScrArea*, !dbg !6003
  store %struct.ScrArea* %7, %struct.ScrArea** %sa, align 8, !dbg !6004
  br label %if.end, !dbg !6005

if.else:                                          ; preds = %sw.bb
  %8 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler.addr, align 8, !dbg !6006
  %op_area2 = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %8, i32 0, i32 8, !dbg !6008
  %9 = load %struct.ScrArea*, %struct.ScrArea** %op_area2, align 8, !dbg !6008
  store %struct.ScrArea* %9, %struct.ScrArea** %sa, align 8, !dbg !6009
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %10 = load i32, i32* %val.addr, align 4, !dbg !6010
  %cmp3 = icmp eq i32 %10, 1, !dbg !6012
  br i1 %cmp3, label %if.then4, label %if.else5, !dbg !6013

if.then4:                                         ; preds = %if.end
  %11 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6014
  %12 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !6016
  call void @ED_area_newspace(%struct.bContext* %11, %struct.ScrArea* %12, i32 5), !dbg !6017
  br label %if.end7, !dbg !6018

if.else5:                                         ; preds = %if.end
  %13 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6019
  %14 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !6021
  %call6 = call %struct.ScrArea* @ED_screen_full_newspace(%struct.bContext* %13, %struct.ScrArea* %14, i32 5), !dbg !6022
  store %struct.ScrArea* %call6, %struct.ScrArea** %sa, align 8, !dbg !6023
  br label %if.end7

if.end7:                                          ; preds = %if.else5, %if.then4
  %15 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !6024
  %spacedata = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %15, i32 0, i32 19, !dbg !6025
  %first8 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %spacedata, i32 0, i32 0, !dbg !6026
  %16 = load i8*, i8** %first8, align 8, !dbg !6026
  %17 = bitcast i8* %16 to %struct.SpaceFile*, !dbg !6027
  store %struct.SpaceFile* %17, %struct.SpaceFile** %sfile, align 8, !dbg !6028
  %18 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler.addr, align 8, !dbg !6029
  %op = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %18, i32 0, i32 7, !dbg !6030
  %19 = load %struct.wmOperator*, %struct.wmOperator** %op, align 8, !dbg !6030
  %20 = load %struct.SpaceFile*, %struct.SpaceFile** %sfile, align 8, !dbg !6031
  %op9 = getelementptr inbounds %struct.SpaceFile, %struct.SpaceFile* %20, i32 0, i32 9, !dbg !6032
  store %struct.wmOperator* %19, %struct.wmOperator** %op9, align 8, !dbg !6033
  %21 = load %struct.SpaceFile*, %struct.SpaceFile** %sfile, align 8, !dbg !6034
  %call10 = call signext i16 @ED_fileselect_set_params(%struct.SpaceFile* %21), !dbg !6035
  store i32 1, i32* %action, align 4, !dbg !6036
  br label %sw.epilog, !dbg !6037

sw.bb11:                                          ; preds = %entry, %entry, %entry
  call void @llvm.dbg.declare(metadata %struct.bScreen** %screen12, metadata !6038, metadata !DIExpression()), !dbg !6040
  %22 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6041
  %call13 = call %struct.bScreen* @CTX_wm_screen(%struct.bContext* %22), !dbg !6042
  store %struct.bScreen* %call13, %struct.bScreen** %screen12, align 8, !dbg !6040
  %23 = load %struct.ListBase*, %struct.ListBase** %handlers.addr, align 8, !dbg !6043
  %24 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler.addr, align 8, !dbg !6044
  %25 = bitcast %struct.wmEventHandler* %24 to i8*, !dbg !6044
  call void @BLI_remlink(%struct.ListBase* %23, i8* %25), !dbg !6045
  %26 = load i32, i32* %val.addr, align 4, !dbg !6046
  %cmp14 = icmp ne i32 %26, 5, !dbg !6048
  br i1 %cmp14, label %if.then15, label %if.end22, !dbg !6049

if.then15:                                        ; preds = %sw.bb11
  %27 = load %struct.bScreen*, %struct.bScreen** %screen12, align 8, !dbg !6050
  %28 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler.addr, align 8, !dbg !6053
  %filescreen = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %28, i32 0, i32 16, !dbg !6054
  %29 = load %struct.bScreen*, %struct.bScreen** %filescreen, align 8, !dbg !6054
  %cmp16 = icmp ne %struct.bScreen* %27, %29, !dbg !6055
  br i1 %cmp16, label %if.then17, label %if.else19, !dbg !6056

if.then17:                                        ; preds = %if.then15
  %30 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6057
  %31 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6059
  %call18 = call %struct.ScrArea* @CTX_wm_area(%struct.bContext* %31), !dbg !6060
  call void @ED_screen_full_prevspace(%struct.bContext* %30, %struct.ScrArea* %call18), !dbg !6061
  br label %if.end21, !dbg !6062

if.else19:                                        ; preds = %if.then15
  %32 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6063
  %33 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6065
  %call20 = call %struct.ScrArea* @CTX_wm_area(%struct.bContext* %33), !dbg !6066
  call void @ED_area_prevspace(%struct.bContext* %32, %struct.ScrArea* %call20), !dbg !6067
  br label %if.end21

if.end21:                                         ; preds = %if.else19, %if.then17
  br label %if.end22, !dbg !6068

if.end22:                                         ; preds = %if.end21, %sw.bb11
  %34 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6069
  %35 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler.addr, align 8, !dbg !6070
  call void @wm_handler_op_context(%struct.bContext* %34, %struct.wmEventHandler* %35), !dbg !6071
  %36 = load i32, i32* %val.addr, align 4, !dbg !6072
  %cmp23 = icmp eq i32 %36, 3, !dbg !6074
  br i1 %cmp23, label %if.then24, label %if.else95, !dbg !6075

if.then24:                                        ; preds = %if.end22
  call void @llvm.dbg.declare(metadata i32* %retval25, metadata !6076, metadata !DIExpression()), !dbg !6078
  %37 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler.addr, align 8, !dbg !6079
  %op26 = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %37, i32 0, i32 7, !dbg !6081
  %38 = load %struct.wmOperator*, %struct.wmOperator** %op26, align 8, !dbg !6081
  %type = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %38, i32 0, i32 4, !dbg !6082
  %39 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type, align 8, !dbg !6082
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %39, i32 0, i32 19, !dbg !6083
  %40 = load i16, i16* %flag, align 8, !dbg !6083
  %conv = sext i16 %40 to i32, !dbg !6079
  %and = and i32 %conv, 2, !dbg !6084
  %tobool = icmp ne i32 %and, 0, !dbg !6084
  br i1 %tobool, label %if.then27, label %if.end28, !dbg !6085

if.then27:                                        ; preds = %if.then24
  %41 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !6086
  %op_undo_depth = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %41, i32 0, i32 6, !dbg !6087
  %42 = load i16, i16* %op_undo_depth, align 2, !dbg !6088
  %inc = add i16 %42, 1, !dbg !6088
  store i16 %inc, i16* %op_undo_depth, align 2, !dbg !6088
  br label %if.end28, !dbg !6086

if.end28:                                         ; preds = %if.then27, %if.then24
  %43 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler.addr, align 8, !dbg !6089
  %op29 = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %43, i32 0, i32 7, !dbg !6090
  %44 = load %struct.wmOperator*, %struct.wmOperator** %op29, align 8, !dbg !6090
  %type30 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %44, i32 0, i32 4, !dbg !6091
  %45 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type30, align 8, !dbg !6091
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %45, i32 0, i32 4, !dbg !6092
  %46 = load i32 (%struct.bContext*, %struct.wmOperator*)*, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !6092
  %47 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6093
  %48 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler.addr, align 8, !dbg !6094
  %op31 = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %48, i32 0, i32 7, !dbg !6095
  %49 = load %struct.wmOperator*, %struct.wmOperator** %op31, align 8, !dbg !6095
  %call32 = call i32 %46(%struct.bContext* %47, %struct.wmOperator* %49), !dbg !6089
  store i32 %call32, i32* %retval25, align 4, !dbg !6096
  %50 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler.addr, align 8, !dbg !6097
  %op33 = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %50, i32 0, i32 7, !dbg !6099
  %51 = load %struct.wmOperator*, %struct.wmOperator** %op33, align 8, !dbg !6099
  %type34 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %51, i32 0, i32 4, !dbg !6100
  %52 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type34, align 8, !dbg !6100
  %flag35 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %52, i32 0, i32 19, !dbg !6101
  %53 = load i16, i16* %flag35, align 8, !dbg !6101
  %conv36 = sext i16 %53 to i32, !dbg !6097
  %and37 = and i32 %conv36, 2, !dbg !6102
  %tobool38 = icmp ne i32 %and37, 0, !dbg !6102
  br i1 %tobool38, label %land.lhs.true, label %if.end44, !dbg !6103

land.lhs.true:                                    ; preds = %if.end28
  %54 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6104
  %call39 = call %struct.wmWindowManager* @CTX_wm_manager(%struct.bContext* %54), !dbg !6105
  %55 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !6106
  %cmp40 = icmp eq %struct.wmWindowManager* %call39, %55, !dbg !6107
  br i1 %cmp40, label %if.then42, label %if.end44, !dbg !6108

if.then42:                                        ; preds = %land.lhs.true
  %56 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !6109
  %op_undo_depth43 = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %56, i32 0, i32 6, !dbg !6110
  %57 = load i16, i16* %op_undo_depth43, align 2, !dbg !6111
  %dec = add i16 %57, -1, !dbg !6111
  store i16 %dec, i16* %op_undo_depth43, align 2, !dbg !6111
  br label %if.end44, !dbg !6109

if.end44:                                         ; preds = %if.then42, %land.lhs.true, %if.end28
  %58 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6112
  %call45 = call %struct.wmWindowManager* @CTX_wm_manager(%struct.bContext* %58), !dbg !6114
  %59 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !6115
  %cmp46 = icmp eq %struct.wmWindowManager* %call45, %59, !dbg !6116
  br i1 %cmp46, label %land.lhs.true48, label %if.end63, !dbg !6117

land.lhs.true48:                                  ; preds = %if.end44
  %60 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !6118
  %op_undo_depth49 = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %60, i32 0, i32 6, !dbg !6119
  %61 = load i16, i16* %op_undo_depth49, align 2, !dbg !6119
  %conv50 = sext i16 %61 to i32, !dbg !6118
  %cmp51 = icmp eq i32 %conv50, 0, !dbg !6120
  br i1 %cmp51, label %if.then53, label %if.end63, !dbg !6121

if.then53:                                        ; preds = %land.lhs.true48
  %62 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler.addr, align 8, !dbg !6122
  %op54 = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %62, i32 0, i32 7, !dbg !6124
  %63 = load %struct.wmOperator*, %struct.wmOperator** %op54, align 8, !dbg !6124
  %type55 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %63, i32 0, i32 4, !dbg !6125
  %64 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type55, align 8, !dbg !6125
  %flag56 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %64, i32 0, i32 19, !dbg !6126
  %65 = load i16, i16* %flag56, align 8, !dbg !6126
  %conv57 = sext i16 %65 to i32, !dbg !6122
  %and58 = and i32 %conv57, 2, !dbg !6127
  %tobool59 = icmp ne i32 %and58, 0, !dbg !6127
  br i1 %tobool59, label %if.then60, label %if.end62, !dbg !6128

if.then60:                                        ; preds = %if.then53
  %66 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6129
  %67 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler.addr, align 8, !dbg !6130
  %op61 = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %67, i32 0, i32 7, !dbg !6131
  %68 = load %struct.wmOperator*, %struct.wmOperator** %op61, align 8, !dbg !6131
  call void @ED_undo_push_op(%struct.bContext* %66, %struct.wmOperator* %68), !dbg !6132
  br label %if.end62, !dbg !6132

if.end62:                                         ; preds = %if.then60, %if.then53
  br label %if.end63, !dbg !6133

if.end63:                                         ; preds = %if.end62, %land.lhs.true48, %if.end44
  %69 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler.addr, align 8, !dbg !6134
  %op64 = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %69, i32 0, i32 7, !dbg !6136
  %70 = load %struct.wmOperator*, %struct.wmOperator** %op64, align 8, !dbg !6136
  %reports = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %70, i32 0, i32 8, !dbg !6137
  %71 = load %struct.ReportList*, %struct.ReportList** %reports, align 8, !dbg !6137
  %list = getelementptr inbounds %struct.ReportList, %struct.ReportList* %71, i32 0, i32 0, !dbg !6138
  %first65 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %list, i32 0, i32 0, !dbg !6139
  %72 = load i8*, i8** %first65, align 8, !dbg !6139
  %tobool66 = icmp ne i8* %72, null, !dbg !6134
  br i1 %tobool66, label %if.then67, label %if.end86, !dbg !6140

if.then67:                                        ; preds = %if.end63
  call void @llvm.dbg.declare(metadata %struct.wmWindow** %win_prev, metadata !6141, metadata !DIExpression()), !dbg !6143
  %73 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6144
  %call68 = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %73), !dbg !6145
  store %struct.wmWindow* %call68, %struct.wmWindow** %win_prev, align 8, !dbg !6143
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %area_prev, metadata !6146, metadata !DIExpression()), !dbg !6147
  %74 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6148
  %call69 = call %struct.ScrArea* @CTX_wm_area(%struct.bContext* %74), !dbg !6149
  store %struct.ScrArea* %call69, %struct.ScrArea** %area_prev, align 8, !dbg !6147
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar_prev, metadata !6150, metadata !DIExpression()), !dbg !6151
  %75 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6152
  %call70 = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %75), !dbg !6153
  store %struct.ARegion* %call70, %struct.ARegion** %ar_prev, align 8, !dbg !6151
  %76 = load %struct.wmWindow*, %struct.wmWindow** %win_prev, align 8, !dbg !6154
  %cmp71 = icmp eq %struct.wmWindow* %76, null, !dbg !6156
  br i1 %cmp71, label %if.then73, label %if.end76, !dbg !6157

if.then73:                                        ; preds = %if.then67
  %77 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6158
  %78 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6159
  %call74 = call %struct.wmWindowManager* @CTX_wm_manager(%struct.bContext* %78), !dbg !6160
  %windows = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %call74, i32 0, i32 3, !dbg !6161
  %first75 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %windows, i32 0, i32 0, !dbg !6162
  %79 = load i8*, i8** %first75, align 8, !dbg !6162
  %80 = bitcast i8* %79 to %struct.wmWindow*, !dbg !6160
  call void @CTX_wm_window_set(%struct.bContext* %77, %struct.wmWindow* %80), !dbg !6163
  br label %if.end76, !dbg !6163

if.end76:                                         ; preds = %if.then73, %if.then67
  %81 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler.addr, align 8, !dbg !6164
  %op77 = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %81, i32 0, i32 7, !dbg !6165
  %82 = load %struct.wmOperator*, %struct.wmOperator** %op77, align 8, !dbg !6165
  %reports78 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %82, i32 0, i32 8, !dbg !6166
  %83 = load %struct.ReportList*, %struct.ReportList** %reports78, align 8, !dbg !6166
  call void @BKE_report_print_level_set(%struct.ReportList* %83, i32 16), !dbg !6167
  %84 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6168
  %85 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler.addr, align 8, !dbg !6169
  %op79 = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %85, i32 0, i32 7, !dbg !6170
  %86 = load %struct.wmOperator*, %struct.wmOperator** %op79, align 8, !dbg !6170
  %reports80 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %86, i32 0, i32 8, !dbg !6171
  %87 = load %struct.ReportList*, %struct.ReportList** %reports80, align 8, !dbg !6171
  call void @uiPupMenuReports(%struct.bContext* %84, %struct.ReportList* %87), !dbg !6172
  %88 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6173
  %call81 = call %struct.ReportList* @CTX_wm_reports(%struct.bContext* %88), !dbg !6174
  %list82 = getelementptr inbounds %struct.ReportList, %struct.ReportList* %call81, i32 0, i32 0, !dbg !6175
  %89 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler.addr, align 8, !dbg !6176
  %op83 = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %89, i32 0, i32 7, !dbg !6177
  %90 = load %struct.wmOperator*, %struct.wmOperator** %op83, align 8, !dbg !6177
  %reports84 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %90, i32 0, i32 8, !dbg !6178
  %91 = load %struct.ReportList*, %struct.ReportList** %reports84, align 8, !dbg !6178
  %list85 = getelementptr inbounds %struct.ReportList, %struct.ReportList* %91, i32 0, i32 0, !dbg !6179
  call void @BLI_movelisttolist(%struct.ListBase* %list82, %struct.ListBase* %list85), !dbg !6180
  %92 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6181
  %93 = load %struct.wmWindow*, %struct.wmWindow** %win_prev, align 8, !dbg !6182
  call void @CTX_wm_window_set(%struct.bContext* %92, %struct.wmWindow* %93), !dbg !6183
  %94 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6184
  %95 = load %struct.ScrArea*, %struct.ScrArea** %area_prev, align 8, !dbg !6185
  call void @CTX_wm_area_set(%struct.bContext* %94, %struct.ScrArea* %95), !dbg !6186
  %96 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6187
  %97 = load %struct.ARegion*, %struct.ARegion** %ar_prev, align 8, !dbg !6188
  call void @CTX_wm_region_set(%struct.bContext* %96, %struct.ARegion* %97), !dbg !6189
  br label %if.end86, !dbg !6190

if.end86:                                         ; preds = %if.end76, %if.end63
  %98 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6191
  %99 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler.addr, align 8, !dbg !6192
  %op87 = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %99, i32 0, i32 7, !dbg !6193
  %100 = load %struct.wmOperator*, %struct.wmOperator** %op87, align 8, !dbg !6193
  %101 = load i32, i32* %retval25, align 4, !dbg !6194
  call void @wm_operator_reports(%struct.bContext* %98, %struct.wmOperator* %100, i32 %101, i8 zeroext 1), !dbg !6195
  %102 = load i32, i32* %retval25, align 4, !dbg !6196
  %and88 = and i32 %102, 4, !dbg !6198
  %tobool89 = icmp ne i32 %and88, 0, !dbg !6198
  br i1 %tobool89, label %if.then90, label %if.end93, !dbg !6199

if.then90:                                        ; preds = %if.end86
  %103 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler.addr, align 8, !dbg !6200
  %op91 = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %103, i32 0, i32 7, !dbg !6202
  %104 = load %struct.wmOperator*, %struct.wmOperator** %op91, align 8, !dbg !6202
  %call92 = call zeroext i8 @WM_operator_last_properties_store(%struct.wmOperator* %104), !dbg !6203
  br label %if.end93, !dbg !6204

if.end93:                                         ; preds = %if.then90, %if.end86
  %105 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler.addr, align 8, !dbg !6205
  %op94 = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %105, i32 0, i32 7, !dbg !6206
  %106 = load %struct.wmOperator*, %struct.wmOperator** %op94, align 8, !dbg !6206
  call void @WM_operator_free(%struct.wmOperator* %106), !dbg !6207
  br label %if.end126, !dbg !6208

if.else95:                                        ; preds = %if.end22
  %107 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler.addr, align 8, !dbg !6209
  %op96 = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %107, i32 0, i32 7, !dbg !6212
  %108 = load %struct.wmOperator*, %struct.wmOperator** %op96, align 8, !dbg !6212
  %type97 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %108, i32 0, i32 4, !dbg !6213
  %109 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type97, align 8, !dbg !6213
  %cancel = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %109, i32 0, i32 7, !dbg !6214
  %110 = load void (%struct.bContext*, %struct.wmOperator*)*, void (%struct.bContext*, %struct.wmOperator*)** %cancel, align 8, !dbg !6214
  %tobool98 = icmp ne void (%struct.bContext*, %struct.wmOperator*)* %110, null, !dbg !6209
  br i1 %tobool98, label %if.then99, label %if.end124, !dbg !6215

if.then99:                                        ; preds = %if.else95
  %111 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler.addr, align 8, !dbg !6216
  %op100 = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %111, i32 0, i32 7, !dbg !6219
  %112 = load %struct.wmOperator*, %struct.wmOperator** %op100, align 8, !dbg !6219
  %type101 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %112, i32 0, i32 4, !dbg !6220
  %113 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type101, align 8, !dbg !6220
  %flag102 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %113, i32 0, i32 19, !dbg !6221
  %114 = load i16, i16* %flag102, align 8, !dbg !6221
  %conv103 = sext i16 %114 to i32, !dbg !6216
  %and104 = and i32 %conv103, 2, !dbg !6222
  %tobool105 = icmp ne i32 %and104, 0, !dbg !6222
  br i1 %tobool105, label %if.then106, label %if.end109, !dbg !6223

if.then106:                                       ; preds = %if.then99
  %115 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !6224
  %op_undo_depth107 = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %115, i32 0, i32 6, !dbg !6225
  %116 = load i16, i16* %op_undo_depth107, align 2, !dbg !6226
  %inc108 = add i16 %116, 1, !dbg !6226
  store i16 %inc108, i16* %op_undo_depth107, align 2, !dbg !6226
  br label %if.end109, !dbg !6224

if.end109:                                        ; preds = %if.then106, %if.then99
  %117 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler.addr, align 8, !dbg !6227
  %op110 = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %117, i32 0, i32 7, !dbg !6228
  %118 = load %struct.wmOperator*, %struct.wmOperator** %op110, align 8, !dbg !6228
  %type111 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %118, i32 0, i32 4, !dbg !6229
  %119 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type111, align 8, !dbg !6229
  %cancel112 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %119, i32 0, i32 7, !dbg !6230
  %120 = load void (%struct.bContext*, %struct.wmOperator*)*, void (%struct.bContext*, %struct.wmOperator*)** %cancel112, align 8, !dbg !6230
  %121 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6231
  %122 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler.addr, align 8, !dbg !6232
  %op113 = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %122, i32 0, i32 7, !dbg !6233
  %123 = load %struct.wmOperator*, %struct.wmOperator** %op113, align 8, !dbg !6233
  call void %120(%struct.bContext* %121, %struct.wmOperator* %123), !dbg !6227
  %124 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler.addr, align 8, !dbg !6234
  %op114 = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %124, i32 0, i32 7, !dbg !6236
  %125 = load %struct.wmOperator*, %struct.wmOperator** %op114, align 8, !dbg !6236
  %type115 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %125, i32 0, i32 4, !dbg !6237
  %126 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type115, align 8, !dbg !6237
  %flag116 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %126, i32 0, i32 19, !dbg !6238
  %127 = load i16, i16* %flag116, align 8, !dbg !6238
  %conv117 = sext i16 %127 to i32, !dbg !6234
  %and118 = and i32 %conv117, 2, !dbg !6239
  %tobool119 = icmp ne i32 %and118, 0, !dbg !6239
  br i1 %tobool119, label %if.then120, label %if.end123, !dbg !6240

if.then120:                                       ; preds = %if.end109
  %128 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !6241
  %op_undo_depth121 = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %128, i32 0, i32 6, !dbg !6242
  %129 = load i16, i16* %op_undo_depth121, align 2, !dbg !6243
  %dec122 = add i16 %129, -1, !dbg !6243
  store i16 %dec122, i16* %op_undo_depth121, align 2, !dbg !6243
  br label %if.end123, !dbg !6241

if.end123:                                        ; preds = %if.then120, %if.end109
  br label %if.end124, !dbg !6244

if.end124:                                        ; preds = %if.end123, %if.else95
  %130 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler.addr, align 8, !dbg !6245
  %op125 = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %130, i32 0, i32 7, !dbg !6246
  %131 = load %struct.wmOperator*, %struct.wmOperator** %op125, align 8, !dbg !6246
  call void @WM_operator_free(%struct.wmOperator* %131), !dbg !6247
  br label %if.end126

if.end126:                                        ; preds = %if.end124, %if.end93
  %132 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6248
  call void @CTX_wm_area_set(%struct.bContext* %132, %struct.ScrArea* null), !dbg !6249
  %133 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler.addr, align 8, !dbg !6250
  call void @wm_event_free_handler(%struct.wmEventHandler* %133), !dbg !6251
  store i32 1, i32* %action, align 4, !dbg !6252
  br label %sw.epilog, !dbg !6253

sw.epilog:                                        ; preds = %entry, %if.end126, %if.end7
  %134 = load i32, i32* %action, align 4, !dbg !6254
  ret i32 %134, !dbg !6255
}

declare dso_local void @BLI_addhead(%struct.ListBase*, i8*) #3

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.wmEventHandler* @WM_event_add_modal_handler(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !6256 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %handler = alloca %struct.wmEventHandler*, align 8
  %win = alloca %struct.wmWindow*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6259, metadata !DIExpression()), !dbg !6260
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !6261, metadata !DIExpression()), !dbg !6262
  call void @llvm.dbg.declare(metadata %struct.wmEventHandler** %handler, metadata !6263, metadata !DIExpression()), !dbg !6264
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !6265
  %call = call i8* %0(i64 136, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.11, i64 0, i64 0)), !dbg !6265
  %1 = bitcast i8* %call to %struct.wmEventHandler*, !dbg !6265
  store %struct.wmEventHandler* %1, %struct.wmEventHandler** %handler, align 8, !dbg !6264
  call void @llvm.dbg.declare(metadata %struct.wmWindow** %win, metadata !6266, metadata !DIExpression()), !dbg !6267
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6268
  %call1 = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %2), !dbg !6269
  store %struct.wmWindow* %call1, %struct.wmWindow** %win, align 8, !dbg !6267
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6270
  %opm = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %3, i32 0, i32 10, !dbg !6272
  %4 = load %struct.wmOperator*, %struct.wmOperator** %opm, align 8, !dbg !6272
  %tobool = icmp ne %struct.wmOperator* %4, null, !dbg !6270
  br i1 %tobool, label %if.then, label %if.else, !dbg !6273

if.then:                                          ; preds = %entry
  %5 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6274
  %opm2 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %5, i32 0, i32 10, !dbg !6276
  %6 = load %struct.wmOperator*, %struct.wmOperator** %opm2, align 8, !dbg !6276
  %7 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !6277
  %op3 = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %7, i32 0, i32 7, !dbg !6278
  store %struct.wmOperator* %6, %struct.wmOperator** %op3, align 8, !dbg !6279
  %8 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6280
  %9 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !6281
  %op4 = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %9, i32 0, i32 7, !dbg !6282
  %10 = load %struct.wmOperator*, %struct.wmOperator** %op4, align 8, !dbg !6282
  %opm5 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %10, i32 0, i32 10, !dbg !6283
  store %struct.wmOperator* %8, %struct.wmOperator** %opm5, align 8, !dbg !6284
  br label %if.end, !dbg !6285

if.else:                                          ; preds = %entry
  %11 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !6286
  %12 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !6287
  %op6 = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %12, i32 0, i32 7, !dbg !6288
  store %struct.wmOperator* %11, %struct.wmOperator** %op6, align 8, !dbg !6289
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %13 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6290
  %call7 = call %struct.ScrArea* @CTX_wm_area(%struct.bContext* %13), !dbg !6291
  %14 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !6292
  %op_area = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %14, i32 0, i32 8, !dbg !6293
  store %struct.ScrArea* %call7, %struct.ScrArea** %op_area, align 8, !dbg !6294
  %15 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6295
  %call8 = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %15), !dbg !6296
  %16 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !6297
  %op_region = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %16, i32 0, i32 9, !dbg !6298
  store %struct.ARegion* %call8, %struct.ARegion** %op_region, align 8, !dbg !6299
  %17 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !6300
  %modalhandlers = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %17, i32 0, i32 29, !dbg !6301
  %18 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !6302
  %19 = bitcast %struct.wmEventHandler* %18 to i8*, !dbg !6302
  call void @BLI_addhead(%struct.ListBase* %modalhandlers, i8* %19), !dbg !6303
  %20 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !6304
  ret %struct.wmEventHandler* %20, !dbg !6305
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.wmEventHandler* @WM_event_add_keymap_handler(%struct.ListBase* %handlers, %struct.wmKeyMap* %keymap) #0 !dbg !6306 {
entry:
  %retval = alloca %struct.wmEventHandler*, align 8
  %handlers.addr = alloca %struct.ListBase*, align 8
  %keymap.addr = alloca %struct.wmKeyMap*, align 8
  %handler = alloca %struct.wmEventHandler*, align 8
  store %struct.ListBase* %handlers, %struct.ListBase** %handlers.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %handlers.addr, metadata !6309, metadata !DIExpression()), !dbg !6310
  store %struct.wmKeyMap* %keymap, %struct.wmKeyMap** %keymap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmKeyMap** %keymap.addr, metadata !6311, metadata !DIExpression()), !dbg !6312
  call void @llvm.dbg.declare(metadata %struct.wmEventHandler** %handler, metadata !6313, metadata !DIExpression()), !dbg !6314
  %0 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap.addr, align 8, !dbg !6315
  %tobool = icmp ne %struct.wmKeyMap* %0, null, !dbg !6315
  br i1 %tobool, label %if.end, label %if.then, !dbg !6317

if.then:                                          ; preds = %entry
  %call = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @__func__.WM_event_add_keymap_handler, i64 0, i64 0)), !dbg !6318
  store %struct.wmEventHandler* null, %struct.wmEventHandler** %retval, align 8, !dbg !6320
  br label %return, !dbg !6320

if.end:                                           ; preds = %entry
  %1 = load %struct.ListBase*, %struct.ListBase** %handlers.addr, align 8, !dbg !6321
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %1, i32 0, i32 0, !dbg !6323
  %2 = load i8*, i8** %first, align 8, !dbg !6323
  %3 = bitcast i8* %2 to %struct.wmEventHandler*, !dbg !6321
  store %struct.wmEventHandler* %3, %struct.wmEventHandler** %handler, align 8, !dbg !6324
  br label %for.cond, !dbg !6325

for.cond:                                         ; preds = %for.inc, %if.end
  %4 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !6326
  %tobool1 = icmp ne %struct.wmEventHandler* %4, null, !dbg !6328
  br i1 %tobool1, label %for.body, label %for.end, !dbg !6328

for.body:                                         ; preds = %for.cond
  %5 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !6329
  %keymap2 = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %5, i32 0, i32 4, !dbg !6331
  %6 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap2, align 8, !dbg !6331
  %7 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap.addr, align 8, !dbg !6332
  %cmp = icmp eq %struct.wmKeyMap* %6, %7, !dbg !6333
  br i1 %cmp, label %if.then3, label %if.end4, !dbg !6334

if.then3:                                         ; preds = %for.body
  %8 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !6335
  store %struct.wmEventHandler* %8, %struct.wmEventHandler** %retval, align 8, !dbg !6336
  br label %return, !dbg !6336

if.end4:                                          ; preds = %for.body
  br label %for.inc, !dbg !6332

for.inc:                                          ; preds = %if.end4
  %9 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !6337
  %next = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %9, i32 0, i32 0, !dbg !6338
  %10 = load %struct.wmEventHandler*, %struct.wmEventHandler** %next, align 8, !dbg !6338
  store %struct.wmEventHandler* %10, %struct.wmEventHandler** %handler, align 8, !dbg !6339
  br label %for.cond, !dbg !6340, !llvm.loop !6341

for.end:                                          ; preds = %for.cond
  %11 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !6343
  %call5 = call i8* %11(i64 136, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13, i64 0, i64 0)), !dbg !6343
  %12 = bitcast i8* %call5 to %struct.wmEventHandler*, !dbg !6343
  store %struct.wmEventHandler* %12, %struct.wmEventHandler** %handler, align 8, !dbg !6344
  %13 = load %struct.ListBase*, %struct.ListBase** %handlers.addr, align 8, !dbg !6345
  %14 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !6346
  %15 = bitcast %struct.wmEventHandler* %14 to i8*, !dbg !6346
  call void @BLI_addtail(%struct.ListBase* %13, i8* %15), !dbg !6347
  %16 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap.addr, align 8, !dbg !6348
  %17 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !6349
  %keymap6 = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %17, i32 0, i32 4, !dbg !6350
  store %struct.wmKeyMap* %16, %struct.wmKeyMap** %keymap6, align 8, !dbg !6351
  %18 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !6352
  store %struct.wmEventHandler* %18, %struct.wmEventHandler** %retval, align 8, !dbg !6353
  br label %return, !dbg !6353

return:                                           ; preds = %for.end, %if.then3, %if.then
  %19 = load %struct.wmEventHandler*, %struct.wmEventHandler** %retval, align 8, !dbg !6354
  ret %struct.wmEventHandler* %19, !dbg !6354
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.wmEventHandler* @WM_event_add_keymap_handler_priority(%struct.ListBase* %handlers, %struct.wmKeyMap* %keymap, i32 %UNUSED_priority) #0 !dbg !6355 {
entry:
  %handlers.addr = alloca %struct.ListBase*, align 8
  %keymap.addr = alloca %struct.wmKeyMap*, align 8
  %UNUSED_priority.addr = alloca i32, align 4
  %handler = alloca %struct.wmEventHandler*, align 8
  store %struct.ListBase* %handlers, %struct.ListBase** %handlers.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %handlers.addr, metadata !6358, metadata !DIExpression()), !dbg !6359
  store %struct.wmKeyMap* %keymap, %struct.wmKeyMap** %keymap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmKeyMap** %keymap.addr, metadata !6360, metadata !DIExpression()), !dbg !6361
  store i32 %UNUSED_priority, i32* %UNUSED_priority.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %UNUSED_priority.addr, metadata !6362, metadata !DIExpression()), !dbg !6363
  call void @llvm.dbg.declare(metadata %struct.wmEventHandler** %handler, metadata !6364, metadata !DIExpression()), !dbg !6365
  %0 = load %struct.ListBase*, %struct.ListBase** %handlers.addr, align 8, !dbg !6366
  %1 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap.addr, align 8, !dbg !6367
  call void @WM_event_remove_keymap_handler(%struct.ListBase* %0, %struct.wmKeyMap* %1), !dbg !6368
  %2 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !6369
  %call = call i8* %2(i64 136, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.13, i64 0, i64 0)), !dbg !6369
  %3 = bitcast i8* %call to %struct.wmEventHandler*, !dbg !6369
  store %struct.wmEventHandler* %3, %struct.wmEventHandler** %handler, align 8, !dbg !6370
  %4 = load %struct.ListBase*, %struct.ListBase** %handlers.addr, align 8, !dbg !6371
  %5 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !6372
  %6 = bitcast %struct.wmEventHandler* %5 to i8*, !dbg !6372
  call void @BLI_addhead(%struct.ListBase* %4, i8* %6), !dbg !6373
  %7 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap.addr, align 8, !dbg !6374
  %8 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !6375
  %keymap1 = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %8, i32 0, i32 4, !dbg !6376
  store %struct.wmKeyMap* %7, %struct.wmKeyMap** %keymap1, align 8, !dbg !6377
  %9 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !6378
  ret %struct.wmEventHandler* %9, !dbg !6379
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @WM_event_remove_keymap_handler(%struct.ListBase* %handlers, %struct.wmKeyMap* %keymap) #0 !dbg !6380 {
entry:
  %handlers.addr = alloca %struct.ListBase*, align 8
  %keymap.addr = alloca %struct.wmKeyMap*, align 8
  %handler = alloca %struct.wmEventHandler*, align 8
  store %struct.ListBase* %handlers, %struct.ListBase** %handlers.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %handlers.addr, metadata !6383, metadata !DIExpression()), !dbg !6384
  store %struct.wmKeyMap* %keymap, %struct.wmKeyMap** %keymap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmKeyMap** %keymap.addr, metadata !6385, metadata !DIExpression()), !dbg !6386
  call void @llvm.dbg.declare(metadata %struct.wmEventHandler** %handler, metadata !6387, metadata !DIExpression()), !dbg !6388
  %0 = load %struct.ListBase*, %struct.ListBase** %handlers.addr, align 8, !dbg !6389
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !6391
  %1 = load i8*, i8** %first, align 8, !dbg !6391
  %2 = bitcast i8* %1 to %struct.wmEventHandler*, !dbg !6389
  store %struct.wmEventHandler* %2, %struct.wmEventHandler** %handler, align 8, !dbg !6392
  br label %for.cond, !dbg !6393

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !6394
  %tobool = icmp ne %struct.wmEventHandler* %3, null, !dbg !6396
  br i1 %tobool, label %for.body, label %for.end, !dbg !6396

for.body:                                         ; preds = %for.cond
  %4 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !6397
  %keymap1 = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %4, i32 0, i32 4, !dbg !6400
  %5 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap1, align 8, !dbg !6400
  %6 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap.addr, align 8, !dbg !6401
  %cmp = icmp eq %struct.wmKeyMap* %5, %6, !dbg !6402
  br i1 %cmp, label %if.then, label %if.end, !dbg !6403

if.then:                                          ; preds = %for.body
  %7 = load %struct.ListBase*, %struct.ListBase** %handlers.addr, align 8, !dbg !6404
  %8 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !6406
  %9 = bitcast %struct.wmEventHandler* %8 to i8*, !dbg !6406
  call void @BLI_remlink(%struct.ListBase* %7, i8* %9), !dbg !6407
  %10 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !6408
  call void @wm_event_free_handler(%struct.wmEventHandler* %10), !dbg !6409
  br label %for.end, !dbg !6410

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !6411

for.inc:                                          ; preds = %if.end
  %11 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !6412
  %next = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %11, i32 0, i32 0, !dbg !6413
  %12 = load %struct.wmEventHandler*, %struct.wmEventHandler** %next, align 8, !dbg !6413
  store %struct.wmEventHandler* %12, %struct.wmEventHandler** %handler, align 8, !dbg !6414
  br label %for.cond, !dbg !6415, !llvm.loop !6416

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !6418
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.wmEventHandler* @WM_event_add_keymap_handler_bb(%struct.ListBase* %handlers, %struct.wmKeyMap* %keymap, %struct.rcti* %bblocal, %struct.rcti* %bbwin) #0 !dbg !6419 {
entry:
  %handlers.addr = alloca %struct.ListBase*, align 8
  %keymap.addr = alloca %struct.wmKeyMap*, align 8
  %bblocal.addr = alloca %struct.rcti*, align 8
  %bbwin.addr = alloca %struct.rcti*, align 8
  %handler = alloca %struct.wmEventHandler*, align 8
  store %struct.ListBase* %handlers, %struct.ListBase** %handlers.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %handlers.addr, metadata !6422, metadata !DIExpression()), !dbg !6423
  store %struct.wmKeyMap* %keymap, %struct.wmKeyMap** %keymap.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmKeyMap** %keymap.addr, metadata !6424, metadata !DIExpression()), !dbg !6425
  store %struct.rcti* %bblocal, %struct.rcti** %bblocal.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %bblocal.addr, metadata !6426, metadata !DIExpression()), !dbg !6427
  store %struct.rcti* %bbwin, %struct.rcti** %bbwin.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.rcti** %bbwin.addr, metadata !6428, metadata !DIExpression()), !dbg !6429
  call void @llvm.dbg.declare(metadata %struct.wmEventHandler** %handler, metadata !6430, metadata !DIExpression()), !dbg !6431
  %0 = load %struct.ListBase*, %struct.ListBase** %handlers.addr, align 8, !dbg !6432
  %1 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap.addr, align 8, !dbg !6433
  %call = call %struct.wmEventHandler* @WM_event_add_keymap_handler(%struct.ListBase* %0, %struct.wmKeyMap* %1), !dbg !6434
  store %struct.wmEventHandler* %call, %struct.wmEventHandler** %handler, align 8, !dbg !6431
  %2 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !6435
  %tobool = icmp ne %struct.wmEventHandler* %2, null, !dbg !6435
  br i1 %tobool, label %if.then, label %if.end, !dbg !6437

if.then:                                          ; preds = %entry
  %3 = load %struct.rcti*, %struct.rcti** %bblocal.addr, align 8, !dbg !6438
  %4 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !6440
  %bblocal1 = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %4, i32 0, i32 5, !dbg !6441
  store %struct.rcti* %3, %struct.rcti** %bblocal1, align 8, !dbg !6442
  %5 = load %struct.rcti*, %struct.rcti** %bbwin.addr, align 8, !dbg !6443
  %6 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !6444
  %bbwin2 = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %6, i32 0, i32 6, !dbg !6445
  store %struct.rcti* %5, %struct.rcti** %bbwin2, align 8, !dbg !6446
  br label %if.end, !dbg !6447

if.end:                                           ; preds = %if.then, %entry
  %7 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !6448
  ret %struct.wmEventHandler* %7, !dbg !6449
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.wmEventHandler* @WM_event_add_ui_handler(%struct.bContext* %C, %struct.ListBase* %handlers, i32 (%struct.bContext*, %struct.wmEvent*, i8*)* %ui_handle, void (%struct.bContext*, i8*)* %ui_remove, i8* %userdata, i8 zeroext %accept_dbl_click) #0 !dbg !6450 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %handlers.addr = alloca %struct.ListBase*, align 8
  %ui_handle.addr = alloca i32 (%struct.bContext*, %struct.wmEvent*, i8*)*, align 8
  %ui_remove.addr = alloca void (%struct.bContext*, i8*)*, align 8
  %userdata.addr = alloca i8*, align 8
  %accept_dbl_click.addr = alloca i8, align 1
  %handler = alloca %struct.wmEventHandler*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6453, metadata !DIExpression()), !dbg !6454
  store %struct.ListBase* %handlers, %struct.ListBase** %handlers.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %handlers.addr, metadata !6455, metadata !DIExpression()), !dbg !6456
  store i32 (%struct.bContext*, %struct.wmEvent*, i8*)* %ui_handle, i32 (%struct.bContext*, %struct.wmEvent*, i8*)** %ui_handle.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (%struct.bContext*, %struct.wmEvent*, i8*)** %ui_handle.addr, metadata !6457, metadata !DIExpression()), !dbg !6458
  store void (%struct.bContext*, i8*)* %ui_remove, void (%struct.bContext*, i8*)** %ui_remove.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.bContext*, i8*)** %ui_remove.addr, metadata !6459, metadata !DIExpression()), !dbg !6460
  store i8* %userdata, i8** %userdata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userdata.addr, metadata !6461, metadata !DIExpression()), !dbg !6462
  store i8 %accept_dbl_click, i8* %accept_dbl_click.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %accept_dbl_click.addr, metadata !6463, metadata !DIExpression()), !dbg !6464
  call void @llvm.dbg.declare(metadata %struct.wmEventHandler** %handler, metadata !6465, metadata !DIExpression()), !dbg !6466
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !6467
  %call = call i8* %0(i64 136, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.14, i64 0, i64 0)), !dbg !6467
  %1 = bitcast i8* %call to %struct.wmEventHandler*, !dbg !6467
  store %struct.wmEventHandler* %1, %struct.wmEventHandler** %handler, align 8, !dbg !6466
  %2 = load i32 (%struct.bContext*, %struct.wmEvent*, i8*)*, i32 (%struct.bContext*, %struct.wmEvent*, i8*)** %ui_handle.addr, align 8, !dbg !6468
  %3 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !6469
  %ui_handle1 = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %3, i32 0, i32 10, !dbg !6470
  store i32 (%struct.bContext*, %struct.wmEvent*, i8*)* %2, i32 (%struct.bContext*, %struct.wmEvent*, i8*)** %ui_handle1, align 8, !dbg !6471
  %4 = load void (%struct.bContext*, i8*)*, void (%struct.bContext*, i8*)** %ui_remove.addr, align 8, !dbg !6472
  %5 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !6473
  %ui_remove2 = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %5, i32 0, i32 11, !dbg !6474
  store void (%struct.bContext*, i8*)* %4, void (%struct.bContext*, i8*)** %ui_remove2, align 8, !dbg !6475
  %6 = load i8*, i8** %userdata.addr, align 8, !dbg !6476
  %7 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !6477
  %ui_userdata = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %7, i32 0, i32 12, !dbg !6478
  store i8* %6, i8** %ui_userdata, align 8, !dbg !6479
  %8 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6480
  %tobool = icmp ne %struct.bContext* %8, null, !dbg !6480
  br i1 %tobool, label %if.then, label %if.else, !dbg !6482

if.then:                                          ; preds = %entry
  %9 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6483
  %call3 = call %struct.ScrArea* @CTX_wm_area(%struct.bContext* %9), !dbg !6485
  %10 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !6486
  %ui_area = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %10, i32 0, i32 13, !dbg !6487
  store %struct.ScrArea* %call3, %struct.ScrArea** %ui_area, align 8, !dbg !6488
  %11 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6489
  %call4 = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %11), !dbg !6490
  %12 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !6491
  %ui_region = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %12, i32 0, i32 14, !dbg !6492
  store %struct.ARegion* %call4, %struct.ARegion** %ui_region, align 8, !dbg !6493
  %13 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6494
  %call5 = call %struct.ARegion* @CTX_wm_menu(%struct.bContext* %13), !dbg !6495
  %14 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !6496
  %ui_menu = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %14, i32 0, i32 15, !dbg !6497
  store %struct.ARegion* %call5, %struct.ARegion** %ui_menu, align 8, !dbg !6498
  br label %if.end, !dbg !6499

if.else:                                          ; preds = %entry
  %15 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !6500
  %ui_area6 = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %15, i32 0, i32 13, !dbg !6502
  store %struct.ScrArea* null, %struct.ScrArea** %ui_area6, align 8, !dbg !6503
  %16 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !6504
  %ui_region7 = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %16, i32 0, i32 14, !dbg !6505
  store %struct.ARegion* null, %struct.ARegion** %ui_region7, align 8, !dbg !6506
  %17 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !6507
  %ui_menu8 = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %17, i32 0, i32 15, !dbg !6508
  store %struct.ARegion* null, %struct.ARegion** %ui_menu8, align 8, !dbg !6509
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %18 = load i8, i8* %accept_dbl_click.addr, align 1, !dbg !6510
  %tobool9 = icmp ne i8 %18, 0, !dbg !6510
  br i1 %tobool9, label %if.then10, label %if.end11, !dbg !6512

if.then10:                                        ; preds = %if.end
  %19 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !6513
  %flag = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %19, i32 0, i32 3, !dbg !6515
  %20 = load i32, i32* %flag, align 4, !dbg !6516
  %or = or i32 %20, 4, !dbg !6516
  store i32 %or, i32* %flag, align 4, !dbg !6516
  br label %if.end11, !dbg !6517

if.end11:                                         ; preds = %if.then10, %if.end
  %21 = load %struct.ListBase*, %struct.ListBase** %handlers.addr, align 8, !dbg !6518
  %22 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !6519
  %23 = bitcast %struct.wmEventHandler* %22 to i8*, !dbg !6519
  call void @BLI_addhead(%struct.ListBase* %21, i8* %23), !dbg !6520
  %24 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !6521
  ret %struct.wmEventHandler* %24, !dbg !6522
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @WM_event_remove_ui_handler(%struct.ListBase* %handlers, i32 (%struct.bContext*, %struct.wmEvent*, i8*)* %ui_handle, void (%struct.bContext*, i8*)* %ui_remove, i8* %userdata, i8 zeroext %postpone) #0 !dbg !6523 {
entry:
  %handlers.addr = alloca %struct.ListBase*, align 8
  %ui_handle.addr = alloca i32 (%struct.bContext*, %struct.wmEvent*, i8*)*, align 8
  %ui_remove.addr = alloca void (%struct.bContext*, i8*)*, align 8
  %userdata.addr = alloca i8*, align 8
  %postpone.addr = alloca i8, align 1
  %handler = alloca %struct.wmEventHandler*, align 8
  store %struct.ListBase* %handlers, %struct.ListBase** %handlers.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %handlers.addr, metadata !6526, metadata !DIExpression()), !dbg !6527
  store i32 (%struct.bContext*, %struct.wmEvent*, i8*)* %ui_handle, i32 (%struct.bContext*, %struct.wmEvent*, i8*)** %ui_handle.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (%struct.bContext*, %struct.wmEvent*, i8*)** %ui_handle.addr, metadata !6528, metadata !DIExpression()), !dbg !6529
  store void (%struct.bContext*, i8*)* %ui_remove, void (%struct.bContext*, i8*)** %ui_remove.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.bContext*, i8*)** %ui_remove.addr, metadata !6530, metadata !DIExpression()), !dbg !6531
  store i8* %userdata, i8** %userdata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %userdata.addr, metadata !6532, metadata !DIExpression()), !dbg !6533
  store i8 %postpone, i8* %postpone.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %postpone.addr, metadata !6534, metadata !DIExpression()), !dbg !6535
  call void @llvm.dbg.declare(metadata %struct.wmEventHandler** %handler, metadata !6536, metadata !DIExpression()), !dbg !6537
  %0 = load %struct.ListBase*, %struct.ListBase** %handlers.addr, align 8, !dbg !6538
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !6540
  %1 = load i8*, i8** %first, align 8, !dbg !6540
  %2 = bitcast i8* %1 to %struct.wmEventHandler*, !dbg !6538
  store %struct.wmEventHandler* %2, %struct.wmEventHandler** %handler, align 8, !dbg !6541
  br label %for.cond, !dbg !6542

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !6543
  %tobool = icmp ne %struct.wmEventHandler* %3, null, !dbg !6545
  br i1 %tobool, label %for.body, label %for.end, !dbg !6545

for.body:                                         ; preds = %for.cond
  %4 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !6546
  %ui_handle1 = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %4, i32 0, i32 10, !dbg !6549
  %5 = load i32 (%struct.bContext*, %struct.wmEvent*, i8*)*, i32 (%struct.bContext*, %struct.wmEvent*, i8*)** %ui_handle1, align 8, !dbg !6549
  %6 = load i32 (%struct.bContext*, %struct.wmEvent*, i8*)*, i32 (%struct.bContext*, %struct.wmEvent*, i8*)** %ui_handle.addr, align 8, !dbg !6550
  %cmp = icmp eq i32 (%struct.bContext*, %struct.wmEvent*, i8*)* %5, %6, !dbg !6551
  br i1 %cmp, label %land.lhs.true, label %if.end8, !dbg !6552

land.lhs.true:                                    ; preds = %for.body
  %7 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !6553
  %ui_remove2 = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %7, i32 0, i32 11, !dbg !6554
  %8 = load void (%struct.bContext*, i8*)*, void (%struct.bContext*, i8*)** %ui_remove2, align 8, !dbg !6554
  %9 = load void (%struct.bContext*, i8*)*, void (%struct.bContext*, i8*)** %ui_remove.addr, align 8, !dbg !6555
  %cmp3 = icmp eq void (%struct.bContext*, i8*)* %8, %9, !dbg !6556
  br i1 %cmp3, label %land.lhs.true4, label %if.end8, !dbg !6557

land.lhs.true4:                                   ; preds = %land.lhs.true
  %10 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !6558
  %ui_userdata = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %10, i32 0, i32 12, !dbg !6559
  %11 = load i8*, i8** %ui_userdata, align 8, !dbg !6559
  %12 = load i8*, i8** %userdata.addr, align 8, !dbg !6560
  %cmp5 = icmp eq i8* %11, %12, !dbg !6561
  br i1 %cmp5, label %if.then, label %if.end8, !dbg !6562

if.then:                                          ; preds = %land.lhs.true4
  %13 = load i8, i8* %postpone.addr, align 1, !dbg !6563
  %tobool6 = icmp ne i8 %13, 0, !dbg !6563
  br i1 %tobool6, label %if.then7, label %if.else, !dbg !6566

if.then7:                                         ; preds = %if.then
  %14 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !6567
  %flag = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %14, i32 0, i32 3, !dbg !6569
  %15 = load i32, i32* %flag, align 4, !dbg !6570
  %or = or i32 %15, 2, !dbg !6570
  store i32 %or, i32* %flag, align 4, !dbg !6570
  br label %if.end, !dbg !6571

if.else:                                          ; preds = %if.then
  %16 = load %struct.ListBase*, %struct.ListBase** %handlers.addr, align 8, !dbg !6572
  %17 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !6574
  %18 = bitcast %struct.wmEventHandler* %17 to i8*, !dbg !6574
  call void @BLI_remlink(%struct.ListBase* %16, i8* %18), !dbg !6575
  %19 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !6576
  call void @wm_event_free_handler(%struct.wmEventHandler* %19), !dbg !6577
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then7
  br label %for.end, !dbg !6578

if.end8:                                          ; preds = %land.lhs.true4, %land.lhs.true, %for.body
  br label %for.inc, !dbg !6579

for.inc:                                          ; preds = %if.end8
  %20 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !6580
  %next = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %20, i32 0, i32 0, !dbg !6581
  %21 = load %struct.wmEventHandler*, %struct.wmEventHandler** %next, align 8, !dbg !6581
  store %struct.wmEventHandler* %21, %struct.wmEventHandler** %handler, align 8, !dbg !6582
  br label %for.cond, !dbg !6583, !llvm.loop !6584

for.end:                                          ; preds = %if.end, %for.cond
  ret void, !dbg !6586
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @WM_event_free_ui_handler_all(%struct.bContext* %C, %struct.ListBase* %handlers, i32 (%struct.bContext*, %struct.wmEvent*, i8*)* %ui_handle, void (%struct.bContext*, i8*)* %ui_remove) #0 !dbg !6587 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %handlers.addr = alloca %struct.ListBase*, align 8
  %ui_handle.addr = alloca i32 (%struct.bContext*, %struct.wmEvent*, i8*)*, align 8
  %ui_remove.addr = alloca void (%struct.bContext*, i8*)*, align 8
  %handler = alloca %struct.wmEventHandler*, align 8
  %handler_next = alloca %struct.wmEventHandler*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6590, metadata !DIExpression()), !dbg !6591
  store %struct.ListBase* %handlers, %struct.ListBase** %handlers.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %handlers.addr, metadata !6592, metadata !DIExpression()), !dbg !6593
  store i32 (%struct.bContext*, %struct.wmEvent*, i8*)* %ui_handle, i32 (%struct.bContext*, %struct.wmEvent*, i8*)** %ui_handle.addr, align 8
  call void @llvm.dbg.declare(metadata i32 (%struct.bContext*, %struct.wmEvent*, i8*)** %ui_handle.addr, metadata !6594, metadata !DIExpression()), !dbg !6595
  store void (%struct.bContext*, i8*)* %ui_remove, void (%struct.bContext*, i8*)** %ui_remove.addr, align 8
  call void @llvm.dbg.declare(metadata void (%struct.bContext*, i8*)** %ui_remove.addr, metadata !6596, metadata !DIExpression()), !dbg !6597
  call void @llvm.dbg.declare(metadata %struct.wmEventHandler** %handler, metadata !6598, metadata !DIExpression()), !dbg !6599
  call void @llvm.dbg.declare(metadata %struct.wmEventHandler** %handler_next, metadata !6600, metadata !DIExpression()), !dbg !6601
  %0 = load %struct.ListBase*, %struct.ListBase** %handlers.addr, align 8, !dbg !6602
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !6604
  %1 = load i8*, i8** %first, align 8, !dbg !6604
  %2 = bitcast i8* %1 to %struct.wmEventHandler*, !dbg !6602
  store %struct.wmEventHandler* %2, %struct.wmEventHandler** %handler, align 8, !dbg !6605
  br label %for.cond, !dbg !6606

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !6607
  %tobool = icmp ne %struct.wmEventHandler* %3, null, !dbg !6609
  br i1 %tobool, label %for.body, label %for.end, !dbg !6609

for.body:                                         ; preds = %for.cond
  %4 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !6610
  %next = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %4, i32 0, i32 0, !dbg !6612
  %5 = load %struct.wmEventHandler*, %struct.wmEventHandler** %next, align 8, !dbg !6612
  store %struct.wmEventHandler* %5, %struct.wmEventHandler** %handler_next, align 8, !dbg !6613
  %6 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !6614
  %ui_handle1 = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %6, i32 0, i32 10, !dbg !6616
  %7 = load i32 (%struct.bContext*, %struct.wmEvent*, i8*)*, i32 (%struct.bContext*, %struct.wmEvent*, i8*)** %ui_handle1, align 8, !dbg !6616
  %8 = load i32 (%struct.bContext*, %struct.wmEvent*, i8*)*, i32 (%struct.bContext*, %struct.wmEvent*, i8*)** %ui_handle.addr, align 8, !dbg !6617
  %cmp = icmp eq i32 (%struct.bContext*, %struct.wmEvent*, i8*)* %7, %8, !dbg !6618
  br i1 %cmp, label %land.lhs.true, label %if.end, !dbg !6619

land.lhs.true:                                    ; preds = %for.body
  %9 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !6620
  %ui_remove2 = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %9, i32 0, i32 11, !dbg !6621
  %10 = load void (%struct.bContext*, i8*)*, void (%struct.bContext*, i8*)** %ui_remove2, align 8, !dbg !6621
  %11 = load void (%struct.bContext*, i8*)*, void (%struct.bContext*, i8*)** %ui_remove.addr, align 8, !dbg !6622
  %cmp3 = icmp eq void (%struct.bContext*, i8*)* %10, %11, !dbg !6623
  br i1 %cmp3, label %if.then, label %if.end, !dbg !6624

if.then:                                          ; preds = %land.lhs.true
  %12 = load void (%struct.bContext*, i8*)*, void (%struct.bContext*, i8*)** %ui_remove.addr, align 8, !dbg !6625
  %13 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6627
  %14 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !6628
  %ui_userdata = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %14, i32 0, i32 12, !dbg !6629
  %15 = load i8*, i8** %ui_userdata, align 8, !dbg !6629
  call void %12(%struct.bContext* %13, i8* %15), !dbg !6625
  %16 = load %struct.ListBase*, %struct.ListBase** %handlers.addr, align 8, !dbg !6630
  %17 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !6631
  %18 = bitcast %struct.wmEventHandler* %17 to i8*, !dbg !6631
  call void @BLI_remlink(%struct.ListBase* %16, i8* %18), !dbg !6632
  %19 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !6633
  call void @wm_event_free_handler(%struct.wmEventHandler* %19), !dbg !6634
  br label %if.end, !dbg !6635

if.end:                                           ; preds = %if.then, %land.lhs.true, %for.body
  br label %for.inc, !dbg !6636

for.inc:                                          ; preds = %if.end
  %20 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler_next, align 8, !dbg !6637
  store %struct.wmEventHandler* %20, %struct.wmEventHandler** %handler, align 8, !dbg !6638
  br label %for.cond, !dbg !6639, !llvm.loop !6640

for.end:                                          ; preds = %for.cond
  ret void, !dbg !6642
}

; Function Attrs: noinline nounwind uwtable
define dso_local %struct.wmEventHandler* @WM_event_add_dropbox_handler(%struct.ListBase* %handlers, %struct.ListBase* %dropboxes) #0 !dbg !6643 {
entry:
  %retval = alloca %struct.wmEventHandler*, align 8
  %handlers.addr = alloca %struct.ListBase*, align 8
  %dropboxes.addr = alloca %struct.ListBase*, align 8
  %handler = alloca %struct.wmEventHandler*, align 8
  store %struct.ListBase* %handlers, %struct.ListBase** %handlers.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %handlers.addr, metadata !6646, metadata !DIExpression()), !dbg !6647
  store %struct.ListBase* %dropboxes, %struct.ListBase** %dropboxes.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %dropboxes.addr, metadata !6648, metadata !DIExpression()), !dbg !6649
  call void @llvm.dbg.declare(metadata %struct.wmEventHandler** %handler, metadata !6650, metadata !DIExpression()), !dbg !6651
  %0 = load %struct.ListBase*, %struct.ListBase** %handlers.addr, align 8, !dbg !6652
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !6654
  %1 = load i8*, i8** %first, align 8, !dbg !6654
  %2 = bitcast i8* %1 to %struct.wmEventHandler*, !dbg !6652
  store %struct.wmEventHandler* %2, %struct.wmEventHandler** %handler, align 8, !dbg !6655
  br label %for.cond, !dbg !6656

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !6657
  %tobool = icmp ne %struct.wmEventHandler* %3, null, !dbg !6659
  br i1 %tobool, label %for.body, label %for.end, !dbg !6659

for.body:                                         ; preds = %for.cond
  %4 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !6660
  %dropboxes1 = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %4, i32 0, i32 17, !dbg !6662
  %5 = load %struct.ListBase*, %struct.ListBase** %dropboxes1, align 8, !dbg !6662
  %6 = load %struct.ListBase*, %struct.ListBase** %dropboxes.addr, align 8, !dbg !6663
  %cmp = icmp eq %struct.ListBase* %5, %6, !dbg !6664
  br i1 %cmp, label %if.then, label %if.end, !dbg !6665

if.then:                                          ; preds = %for.body
  %7 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !6666
  store %struct.wmEventHandler* %7, %struct.wmEventHandler** %retval, align 8, !dbg !6667
  br label %return, !dbg !6667

if.end:                                           ; preds = %for.body
  br label %for.inc, !dbg !6663

for.inc:                                          ; preds = %if.end
  %8 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !6668
  %next = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %8, i32 0, i32 0, !dbg !6669
  %9 = load %struct.wmEventHandler*, %struct.wmEventHandler** %next, align 8, !dbg !6669
  store %struct.wmEventHandler* %9, %struct.wmEventHandler** %handler, align 8, !dbg !6670
  br label %for.cond, !dbg !6671, !llvm.loop !6672

for.end:                                          ; preds = %for.cond
  %10 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !6674
  %call = call i8* %10(i64 136, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.15, i64 0, i64 0)), !dbg !6674
  %11 = bitcast i8* %call to %struct.wmEventHandler*, !dbg !6674
  store %struct.wmEventHandler* %11, %struct.wmEventHandler** %handler, align 8, !dbg !6675
  %12 = load %struct.ListBase*, %struct.ListBase** %dropboxes.addr, align 8, !dbg !6676
  %13 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !6677
  %dropboxes2 = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %13, i32 0, i32 17, !dbg !6678
  store %struct.ListBase* %12, %struct.ListBase** %dropboxes2, align 8, !dbg !6679
  %14 = load %struct.ListBase*, %struct.ListBase** %handlers.addr, align 8, !dbg !6680
  %15 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !6681
  %16 = bitcast %struct.wmEventHandler* %15 to i8*, !dbg !6681
  call void @BLI_addhead(%struct.ListBase* %14, i8* %16), !dbg !6682
  %17 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !6683
  store %struct.wmEventHandler* %17, %struct.wmEventHandler** %retval, align 8, !dbg !6684
  br label %return, !dbg !6684

return:                                           ; preds = %for.end, %if.then
  %18 = load %struct.wmEventHandler*, %struct.wmEventHandler** %retval, align 8, !dbg !6685
  ret %struct.wmEventHandler* %18, !dbg !6685
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @WM_event_remove_area_handler(%struct.ListBase* %handlers, i8* %area) #0 !dbg !6686 {
entry:
  %handlers.addr = alloca %struct.ListBase*, align 8
  %area.addr = alloca i8*, align 8
  %handler = alloca %struct.wmEventHandler*, align 8
  %nexthandler = alloca %struct.wmEventHandler*, align 8
  store %struct.ListBase* %handlers, %struct.ListBase** %handlers.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %handlers.addr, metadata !6689, metadata !DIExpression()), !dbg !6690
  store i8* %area, i8** %area.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %area.addr, metadata !6691, metadata !DIExpression()), !dbg !6692
  call void @llvm.dbg.declare(metadata %struct.wmEventHandler** %handler, metadata !6693, metadata !DIExpression()), !dbg !6694
  call void @llvm.dbg.declare(metadata %struct.wmEventHandler** %nexthandler, metadata !6695, metadata !DIExpression()), !dbg !6696
  %0 = load %struct.ListBase*, %struct.ListBase** %handlers.addr, align 8, !dbg !6697
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %0, i32 0, i32 0, !dbg !6699
  %1 = load i8*, i8** %first, align 8, !dbg !6699
  %2 = bitcast i8* %1 to %struct.wmEventHandler*, !dbg !6697
  store %struct.wmEventHandler* %2, %struct.wmEventHandler** %handler, align 8, !dbg !6700
  br label %for.cond, !dbg !6701

for.cond:                                         ; preds = %for.inc, %entry
  %3 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !6702
  %tobool = icmp ne %struct.wmEventHandler* %3, null, !dbg !6704
  br i1 %tobool, label %for.body, label %for.end, !dbg !6704

for.body:                                         ; preds = %for.cond
  %4 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !6705
  %next = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %4, i32 0, i32 0, !dbg !6707
  %5 = load %struct.wmEventHandler*, %struct.wmEventHandler** %next, align 8, !dbg !6707
  store %struct.wmEventHandler* %5, %struct.wmEventHandler** %nexthandler, align 8, !dbg !6708
  %6 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !6709
  %type = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %6, i32 0, i32 2, !dbg !6711
  %7 = load i32, i32* %type, align 8, !dbg !6711
  %cmp = icmp ne i32 %7, 1, !dbg !6712
  br i1 %cmp, label %if.then, label %if.end3, !dbg !6713

if.then:                                          ; preds = %for.body
  %8 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !6714
  %ui_area = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %8, i32 0, i32 13, !dbg !6717
  %9 = load %struct.ScrArea*, %struct.ScrArea** %ui_area, align 8, !dbg !6717
  %10 = load i8*, i8** %area.addr, align 8, !dbg !6718
  %11 = bitcast i8* %10 to %struct.ScrArea*, !dbg !6718
  %cmp1 = icmp eq %struct.ScrArea* %9, %11, !dbg !6719
  br i1 %cmp1, label %if.then2, label %if.end, !dbg !6720

if.then2:                                         ; preds = %if.then
  %12 = load %struct.ListBase*, %struct.ListBase** %handlers.addr, align 8, !dbg !6721
  %13 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !6723
  %14 = bitcast %struct.wmEventHandler* %13 to i8*, !dbg !6723
  call void @BLI_remlink(%struct.ListBase* %12, i8* %14), !dbg !6724
  %15 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !6725
  call void @wm_event_free_handler(%struct.wmEventHandler* %15), !dbg !6726
  br label %if.end, !dbg !6727

if.end:                                           ; preds = %if.then2, %if.then
  br label %if.end3, !dbg !6728

if.end3:                                          ; preds = %if.end, %for.body
  br label %for.inc, !dbg !6729

for.inc:                                          ; preds = %if.end3
  %16 = load %struct.wmEventHandler*, %struct.wmEventHandler** %nexthandler, align 8, !dbg !6730
  store %struct.wmEventHandler* %16, %struct.wmEventHandler** %handler, align 8, !dbg !6731
  br label %for.cond, !dbg !6732, !llvm.loop !6733

for.end:                                          ; preds = %for.cond
  ret void, !dbg !6735
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @WM_event_add_mousemove(%struct.bContext* %C) #0 !dbg !6736 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %window = alloca %struct.wmWindow*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !6737, metadata !DIExpression()), !dbg !6738
  call void @llvm.dbg.declare(metadata %struct.wmWindow** %window, metadata !6739, metadata !DIExpression()), !dbg !6740
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !6741
  %call = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %0), !dbg !6742
  store %struct.wmWindow* %call, %struct.wmWindow** %window, align 8, !dbg !6740
  %1 = load %struct.wmWindow*, %struct.wmWindow** %window, align 8, !dbg !6743
  %addmousemove = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %1, i32 0, i32 17, !dbg !6744
  store i16 1, i16* %addmousemove, align 2, !dbg !6745
  ret void, !dbg !6746
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @WM_modal_tweak_exit(%struct.wmEvent* %event, i32 %tweak_event) #0 !dbg !6747 {
entry:
  %retval = alloca i8, align 1
  %event.addr = alloca %struct.wmEvent*, align 8
  %tweak_event.addr = alloca i32, align 4
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !6750, metadata !DIExpression()), !dbg !6751
  store i32 %tweak_event, i32* %tweak_event.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %tweak_event.addr, metadata !6752, metadata !DIExpression()), !dbg !6753
  %0 = load i32, i32* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 2), align 8, !dbg !6754
  %and = and i32 %0, 2097152, !dbg !6756
  %tobool = icmp ne i32 %and, 0, !dbg !6756
  br i1 %tobool, label %if.then, label %if.else13, !dbg !6757

if.then:                                          ; preds = %entry
  %1 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !6758
  %val = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %1, i32 0, i32 3, !dbg !6761
  %2 = load i16, i16* %val, align 2, !dbg !6761
  %conv = sext i16 %2 to i32, !dbg !6758
  %cmp = icmp eq i32 %conv, 2, !dbg !6762
  br i1 %cmp, label %if.then2, label %if.else, !dbg !6763

if.then2:                                         ; preds = %if.then
  %3 = load i32, i32* %tweak_event.addr, align 4, !dbg !6764
  switch i32 %3, label %sw.epilog [
    i32 20483, label %sw.bb
    i32 20484, label %sw.bb
    i32 20485, label %sw.bb
  ], !dbg !6766

sw.bb:                                            ; preds = %if.then2, %if.then2, %if.then2
  store i8 1, i8* %retval, align 1, !dbg !6767
  br label %return, !dbg !6767

sw.epilog:                                        ; preds = %if.then2
  br label %if.end12, !dbg !6769

if.else:                                          ; preds = %if.then
  %4 = load i32, i32* %tweak_event.addr, align 4, !dbg !6770
  %cmp3 = icmp eq i32 %4, 20483, !dbg !6770
  br i1 %cmp3, label %lor.end, label %lor.lhs.false, !dbg !6770

lor.lhs.false:                                    ; preds = %if.else
  %5 = load i32, i32* %tweak_event.addr, align 4, !dbg !6770
  %cmp5 = icmp eq i32 %5, 20484, !dbg !6770
  br i1 %cmp5, label %lor.end, label %lor.rhs, !dbg !6770

lor.rhs:                                          ; preds = %lor.lhs.false
  %6 = load i32, i32* %tweak_event.addr, align 4, !dbg !6770
  %cmp7 = icmp eq i32 %6, 20485, !dbg !6770
  br label %lor.end, !dbg !6770

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %if.else
  %7 = phi i1 [ true, %lor.lhs.false ], [ true, %if.else ], [ %cmp7, %lor.rhs ]
  %lor.ext = zext i1 %7 to i32, !dbg !6770
  %cmp9 = icmp eq i32 %lor.ext, 0, !dbg !6773
  br i1 %cmp9, label %if.then11, label %if.end, !dbg !6774

if.then11:                                        ; preds = %lor.end
  store i8 1, i8* %retval, align 1, !dbg !6775
  br label %return, !dbg !6775

if.end:                                           ; preds = %lor.end
  br label %if.end12

if.end12:                                         ; preds = %if.end, %sw.epilog
  br label %if.end20, !dbg !6777

if.else13:                                        ; preds = %entry
  %8 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !6778
  %val14 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %8, i32 0, i32 3, !dbg !6781
  %9 = load i16, i16* %val14, align 2, !dbg !6781
  %conv15 = sext i16 %9 to i32, !dbg !6778
  %cmp16 = icmp ne i32 %conv15, 2, !dbg !6782
  br i1 %cmp16, label %if.then18, label %if.end19, !dbg !6783

if.then18:                                        ; preds = %if.else13
  store i8 1, i8* %retval, align 1, !dbg !6784
  br label %return, !dbg !6784

if.end19:                                         ; preds = %if.else13
  br label %if.end20

if.end20:                                         ; preds = %if.end19, %if.end12
  store i8 0, i8* %retval, align 1, !dbg !6785
  br label %return, !dbg !6785

return:                                           ; preds = %if.end20, %if.then18, %if.then11, %sw.bb
  %10 = load i8, i8* %retval, align 1, !dbg !6786
  ret i8 %10, !dbg !6786
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @wm_event_add_ghostevent(%struct.wmWindowManager* %wm, %struct.wmWindow* %win, i32 %type, i32 %UNUSED_time, i8* %customdata) #0 !dbg !6787 {
entry:
  %wm.addr = alloca %struct.wmWindowManager*, align 8
  %win.addr = alloca %struct.wmWindow*, align 8
  %type.addr = alloca i32, align 4
  %UNUSED_time.addr = alloca i32, align 4
  %customdata.addr = alloca i8*, align 8
  %owin = alloca %struct.wmWindow*, align 8
  %event = alloca %struct.wmEvent, align 8
  %evt = alloca %struct.wmEvent*, align 8
  %cd = alloca %struct.GHOST_TEventCursorData*, align 8
  %oevent = alloca %struct.wmEvent, align 8
  %oevt = alloca %struct.wmEvent*, align 8
  %pd = alloca %struct.GHOST_TEventTrackpadData*, align 8
  %bd = alloca %struct.GHOST_TEventButtonData*, align 8
  %cx = alloca i32, align 4
  %cy = alloca i32, align 4
  %oevent112 = alloca %struct.wmEvent, align 8
  %kd = alloca %struct.GHOST_TEventKeyData*, align 8
  %wheelData = alloca %struct.GHOST_TEventWheelData*, align 8
  %e = alloca %struct.GHOST_TEventNDOFButtonData*, align 8
  store %struct.wmWindowManager* %wm, %struct.wmWindowManager** %wm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmWindowManager** %wm.addr, metadata !6790, metadata !DIExpression()), !dbg !6791
  store %struct.wmWindow* %win, %struct.wmWindow** %win.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmWindow** %win.addr, metadata !6792, metadata !DIExpression()), !dbg !6793
  store i32 %type, i32* %type.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %type.addr, metadata !6794, metadata !DIExpression()), !dbg !6795
  store i32 %UNUSED_time, i32* %UNUSED_time.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %UNUSED_time.addr, metadata !6796, metadata !DIExpression()), !dbg !6797
  store i8* %customdata, i8** %customdata.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %customdata.addr, metadata !6798, metadata !DIExpression()), !dbg !6799
  call void @llvm.dbg.declare(metadata %struct.wmWindow** %owin, metadata !6800, metadata !DIExpression()), !dbg !6801
  call void @llvm.dbg.declare(metadata %struct.wmEvent* %event, metadata !6802, metadata !DIExpression()), !dbg !6803
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %evt, metadata !6804, metadata !DIExpression()), !dbg !6805
  %0 = load %struct.wmWindow*, %struct.wmWindow** %win.addr, align 8, !dbg !6806
  %eventstate = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %0, i32 0, i32 21, !dbg !6807
  %1 = load %struct.wmEvent*, %struct.wmEvent** %eventstate, align 8, !dbg !6807
  store %struct.wmEvent* %1, %struct.wmEvent** %evt, align 8, !dbg !6805
  %2 = load %struct.wmEvent*, %struct.wmEvent** %evt, align 8, !dbg !6808
  %3 = bitcast %struct.wmEvent* %event to i8*, !dbg !6809
  %4 = bitcast %struct.wmEvent* %2 to i8*, !dbg !6809
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 120, i1 false), !dbg !6809
  %5 = load i32, i32* %type.addr, align 4, !dbg !6810
  switch i32 %5, label %sw.epilog423 [
    i32 1, label %sw.bb
    i32 5, label %sw.bb11
    i32 2, label %sw.bb33
    i32 3, label %sw.bb33
    i32 8, label %sw.bb124
    i32 9, label %sw.bb124
    i32 4, label %sw.bb384
    i32 23, label %sw.bb393
    i32 6, label %sw.bb398
    i32 7, label %sw.bb408
    i32 0, label %sw.bb420
    i32 24, label %sw.bb420
    i32 13, label %sw.bb421
  ], !dbg !6811

sw.bb:                                            ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.GHOST_TEventCursorData** %cd, metadata !6812, metadata !DIExpression()), !dbg !6822
  %6 = load i8*, i8** %customdata.addr, align 8, !dbg !6823
  %7 = bitcast i8* %6 to %struct.GHOST_TEventCursorData*, !dbg !6823
  store %struct.GHOST_TEventCursorData* %7, %struct.GHOST_TEventCursorData** %cd, align 8, !dbg !6822
  %x = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 4, !dbg !6824
  %8 = load %struct.GHOST_TEventCursorData*, %struct.GHOST_TEventCursorData** %cd, align 8, !dbg !6825
  %x1 = getelementptr inbounds %struct.GHOST_TEventCursorData, %struct.GHOST_TEventCursorData* %8, i32 0, i32 0, !dbg !6826
  call void @copy_v2_v2_int(i32* %x, i32* %x1), !dbg !6827
  %type2 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 2, !dbg !6828
  store i16 4, i16* %type2, align 8, !dbg !6829
  %9 = load %struct.wmWindow*, %struct.wmWindow** %win.addr, align 8, !dbg !6830
  call void @wm_event_add_mousemove(%struct.wmWindow* %9, %struct.wmEvent* %event), !dbg !6831
  %10 = load %struct.wmEvent*, %struct.wmEvent** %evt, align 8, !dbg !6832
  %x3 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %10, i32 0, i32 4, !dbg !6833
  %x4 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 4, !dbg !6834
  call void @copy_v2_v2_int(i32* %x3, i32* %x4), !dbg !6835
  %11 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm.addr, align 8, !dbg !6836
  %12 = load %struct.wmWindow*, %struct.wmWindow** %win.addr, align 8, !dbg !6837
  %call = call %struct.wmWindow* @wm_event_cursor_other_windows(%struct.wmWindowManager* %11, %struct.wmWindow* %12, %struct.wmEvent* %event), !dbg !6838
  store %struct.wmWindow* %call, %struct.wmWindow** %owin, align 8, !dbg !6839
  %13 = load %struct.wmWindow*, %struct.wmWindow** %owin, align 8, !dbg !6840
  %tobool = icmp ne %struct.wmWindow* %13, null, !dbg !6840
  br i1 %tobool, label %if.then, label %if.end, !dbg !6842

if.then:                                          ; preds = %sw.bb
  call void @llvm.dbg.declare(metadata %struct.wmEvent* %oevent, metadata !6843, metadata !DIExpression()), !dbg !6845
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %oevt, metadata !6846, metadata !DIExpression()), !dbg !6847
  %14 = load %struct.wmWindow*, %struct.wmWindow** %owin, align 8, !dbg !6848
  %eventstate5 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %14, i32 0, i32 21, !dbg !6849
  %15 = load %struct.wmEvent*, %struct.wmEvent** %eventstate5, align 8, !dbg !6849
  store %struct.wmEvent* %15, %struct.wmEvent** %oevt, align 8, !dbg !6847
  %16 = load %struct.wmEvent*, %struct.wmEvent** %oevt, align 8, !dbg !6850
  %17 = bitcast %struct.wmEvent* %oevent to i8*, !dbg !6851
  %18 = bitcast %struct.wmEvent* %16 to i8*, !dbg !6851
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 120, i1 false), !dbg !6851
  %x6 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %oevent, i32 0, i32 4, !dbg !6852
  %x7 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 4, !dbg !6853
  call void @copy_v2_v2_int(i32* %x6, i32* %x7), !dbg !6854
  %type8 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %oevent, i32 0, i32 2, !dbg !6855
  store i16 4, i16* %type8, align 8, !dbg !6856
  %19 = load %struct.wmWindow*, %struct.wmWindow** %owin, align 8, !dbg !6857
  call void @wm_event_add_mousemove(%struct.wmWindow* %19, %struct.wmEvent* %oevent), !dbg !6858
  %20 = load %struct.wmEvent*, %struct.wmEvent** %oevt, align 8, !dbg !6859
  %x9 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %20, i32 0, i32 4, !dbg !6860
  %x10 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %oevent, i32 0, i32 4, !dbg !6861
  call void @copy_v2_v2_int(i32* %x9, i32* %x10), !dbg !6862
  br label %if.end, !dbg !6863

if.end:                                           ; preds = %if.then, %sw.bb
  br label %sw.epilog423, !dbg !6864

sw.bb11:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.GHOST_TEventTrackpadData** %pd, metadata !6865, metadata !DIExpression()), !dbg !6877
  %21 = load i8*, i8** %customdata.addr, align 8, !dbg !6878
  %22 = bitcast i8* %21 to %struct.GHOST_TEventTrackpadData*, !dbg !6878
  store %struct.GHOST_TEventTrackpadData* %22, %struct.GHOST_TEventTrackpadData** %pd, align 8, !dbg !6877
  %23 = load %struct.GHOST_TEventTrackpadData*, %struct.GHOST_TEventTrackpadData** %pd, align 8, !dbg !6879
  %subtype = getelementptr inbounds %struct.GHOST_TEventTrackpadData, %struct.GHOST_TEventTrackpadData* %23, i32 0, i32 0, !dbg !6880
  %24 = load i32, i32* %subtype, align 4, !dbg !6880
  switch i32 %24, label %sw.default [
    i32 4, label %sw.bb12
    i32 2, label %sw.bb17
    i32 1, label %sw.bb19
  ], !dbg !6881

sw.bb12:                                          ; preds = %sw.bb11
  %type13 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 2, !dbg !6882
  store i16 15, i16* %type13, align 8, !dbg !6884
  %25 = load %struct.GHOST_TEventTrackpadData*, %struct.GHOST_TEventTrackpadData** %pd, align 8, !dbg !6885
  %deltaX = getelementptr inbounds %struct.GHOST_TEventTrackpadData, %struct.GHOST_TEventTrackpadData* %25, i32 0, i32 3, !dbg !6886
  %26 = load i32, i32* %deltaX, align 4, !dbg !6886
  %sub = sub nsw i32 0, %26, !dbg !6887
  %27 = load %struct.GHOST_TEventTrackpadData*, %struct.GHOST_TEventTrackpadData** %pd, align 8, !dbg !6888
  %deltaX14 = getelementptr inbounds %struct.GHOST_TEventTrackpadData, %struct.GHOST_TEventTrackpadData* %27, i32 0, i32 3, !dbg !6889
  store i32 %sub, i32* %deltaX14, align 4, !dbg !6890
  %28 = load %struct.GHOST_TEventTrackpadData*, %struct.GHOST_TEventTrackpadData** %pd, align 8, !dbg !6891
  %deltaY = getelementptr inbounds %struct.GHOST_TEventTrackpadData, %struct.GHOST_TEventTrackpadData* %28, i32 0, i32 4, !dbg !6892
  %29 = load i32, i32* %deltaY, align 4, !dbg !6892
  %sub15 = sub nsw i32 0, %29, !dbg !6893
  %30 = load %struct.GHOST_TEventTrackpadData*, %struct.GHOST_TEventTrackpadData** %pd, align 8, !dbg !6894
  %deltaY16 = getelementptr inbounds %struct.GHOST_TEventTrackpadData, %struct.GHOST_TEventTrackpadData* %30, i32 0, i32 4, !dbg !6895
  store i32 %sub15, i32* %deltaY16, align 4, !dbg !6896
  br label %sw.epilog, !dbg !6897

sw.bb17:                                          ; preds = %sw.bb11
  %type18 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 2, !dbg !6898
  store i16 16, i16* %type18, align 8, !dbg !6899
  br label %sw.epilog, !dbg !6900

sw.bb19:                                          ; preds = %sw.bb11
  br label %sw.default, !dbg !6900

sw.default:                                       ; preds = %sw.bb11, %sw.bb19
  %type20 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 2, !dbg !6901
  store i16 14, i16* %type20, align 8, !dbg !6902
  br label %sw.epilog, !dbg !6903

sw.epilog:                                        ; preds = %sw.default, %sw.bb17, %sw.bb12
  %31 = load %struct.GHOST_TEventTrackpadData*, %struct.GHOST_TEventTrackpadData** %pd, align 8, !dbg !6904
  %x21 = getelementptr inbounds %struct.GHOST_TEventTrackpadData, %struct.GHOST_TEventTrackpadData* %31, i32 0, i32 1, !dbg !6905
  %32 = load i32, i32* %x21, align 4, !dbg !6905
  %33 = load %struct.wmEvent*, %struct.wmEvent** %evt, align 8, !dbg !6906
  %x22 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %33, i32 0, i32 4, !dbg !6907
  store i32 %32, i32* %x22, align 4, !dbg !6908
  %x23 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 4, !dbg !6909
  store i32 %32, i32* %x23, align 4, !dbg !6910
  %34 = load %struct.GHOST_TEventTrackpadData*, %struct.GHOST_TEventTrackpadData** %pd, align 8, !dbg !6911
  %y = getelementptr inbounds %struct.GHOST_TEventTrackpadData, %struct.GHOST_TEventTrackpadData* %34, i32 0, i32 2, !dbg !6912
  %35 = load i32, i32* %y, align 4, !dbg !6912
  %36 = load %struct.wmEvent*, %struct.wmEvent** %evt, align 8, !dbg !6913
  %y24 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %36, i32 0, i32 5, !dbg !6914
  store i32 %35, i32* %y24, align 8, !dbg !6915
  %y25 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 5, !dbg !6916
  store i32 %35, i32* %y25, align 8, !dbg !6917
  %val = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 3, !dbg !6918
  store i16 0, i16* %val, align 2, !dbg !6919
  %x26 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 4, !dbg !6920
  %37 = load i32, i32* %x26, align 4, !dbg !6920
  %38 = load %struct.GHOST_TEventTrackpadData*, %struct.GHOST_TEventTrackpadData** %pd, align 8, !dbg !6921
  %deltaX27 = getelementptr inbounds %struct.GHOST_TEventTrackpadData, %struct.GHOST_TEventTrackpadData* %38, i32 0, i32 3, !dbg !6922
  %39 = load i32, i32* %deltaX27, align 4, !dbg !6922
  %sub28 = sub nsw i32 %37, %39, !dbg !6923
  %prevx = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 12, !dbg !6924
  store i32 %sub28, i32* %prevx, align 8, !dbg !6925
  %y29 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 5, !dbg !6926
  %40 = load i32, i32* %y29, align 8, !dbg !6926
  %41 = load %struct.GHOST_TEventTrackpadData*, %struct.GHOST_TEventTrackpadData** %pd, align 8, !dbg !6927
  %deltaY30 = getelementptr inbounds %struct.GHOST_TEventTrackpadData, %struct.GHOST_TEventTrackpadData* %41, i32 0, i32 4, !dbg !6928
  %42 = load i32, i32* %deltaY30, align 4, !dbg !6928
  %sub31 = sub nsw i32 0, %42, !dbg !6929
  %sub32 = sub nsw i32 %40, %sub31, !dbg !6930
  %prevy = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 13, !dbg !6931
  store i32 %sub32, i32* %prevy, align 4, !dbg !6932
  %43 = load %struct.wmWindow*, %struct.wmWindow** %win.addr, align 8, !dbg !6933
  call void @wm_event_add(%struct.wmWindow* %43, %struct.wmEvent* %event), !dbg !6934
  br label %sw.epilog423, !dbg !6935

sw.bb33:                                          ; preds = %entry, %entry
  call void @llvm.dbg.declare(metadata %struct.GHOST_TEventButtonData** %bd, metadata !6936, metadata !DIExpression()), !dbg !6944
  %44 = load i8*, i8** %customdata.addr, align 8, !dbg !6945
  %45 = bitcast i8* %44 to %struct.GHOST_TEventButtonData*, !dbg !6945
  store %struct.GHOST_TEventButtonData* %45, %struct.GHOST_TEventButtonData** %bd, align 8, !dbg !6944
  %46 = load i32, i32* %type.addr, align 4, !dbg !6946
  %cmp = icmp eq i32 %46, 2, !dbg !6947
  %47 = zext i1 %cmp to i64, !dbg !6948
  %cond = select i1 %cmp, i32 1, i32 2, !dbg !6948
  %conv = trunc i32 %cond to i16, !dbg !6948
  %val34 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 3, !dbg !6949
  store i16 %conv, i16* %val34, align 2, !dbg !6950
  %48 = load %struct.GHOST_TEventButtonData*, %struct.GHOST_TEventButtonData** %bd, align 8, !dbg !6951
  %button = getelementptr inbounds %struct.GHOST_TEventButtonData, %struct.GHOST_TEventButtonData* %48, i32 0, i32 0, !dbg !6953
  %49 = load i32, i32* %button, align 4, !dbg !6953
  %cmp35 = icmp eq i32 %49, 0, !dbg !6954
  br i1 %cmp35, label %if.then37, label %if.else, !dbg !6955

if.then37:                                        ; preds = %sw.bb33
  %type38 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 2, !dbg !6956
  store i16 1, i16* %type38, align 8, !dbg !6957
  br label %if.end75, !dbg !6958

if.else:                                          ; preds = %sw.bb33
  %50 = load %struct.GHOST_TEventButtonData*, %struct.GHOST_TEventButtonData** %bd, align 8, !dbg !6959
  %button39 = getelementptr inbounds %struct.GHOST_TEventButtonData, %struct.GHOST_TEventButtonData* %50, i32 0, i32 0, !dbg !6961
  %51 = load i32, i32* %button39, align 4, !dbg !6961
  %cmp40 = icmp eq i32 %51, 2, !dbg !6962
  br i1 %cmp40, label %if.then42, label %if.else44, !dbg !6963

if.then42:                                        ; preds = %if.else
  %type43 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 2, !dbg !6964
  store i16 3, i16* %type43, align 8, !dbg !6965
  br label %if.end74, !dbg !6966

if.else44:                                        ; preds = %if.else
  %52 = load %struct.GHOST_TEventButtonData*, %struct.GHOST_TEventButtonData** %bd, align 8, !dbg !6967
  %button45 = getelementptr inbounds %struct.GHOST_TEventButtonData, %struct.GHOST_TEventButtonData* %52, i32 0, i32 0, !dbg !6969
  %53 = load i32, i32* %button45, align 4, !dbg !6969
  %cmp46 = icmp eq i32 %53, 3, !dbg !6970
  br i1 %cmp46, label %if.then48, label %if.else50, !dbg !6971

if.then48:                                        ; preds = %if.else44
  %type49 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 2, !dbg !6972
  store i16 7, i16* %type49, align 8, !dbg !6973
  br label %if.end73, !dbg !6974

if.else50:                                        ; preds = %if.else44
  %54 = load %struct.GHOST_TEventButtonData*, %struct.GHOST_TEventButtonData** %bd, align 8, !dbg !6975
  %button51 = getelementptr inbounds %struct.GHOST_TEventButtonData, %struct.GHOST_TEventButtonData* %54, i32 0, i32 0, !dbg !6977
  %55 = load i32, i32* %button51, align 4, !dbg !6977
  %cmp52 = icmp eq i32 %55, 4, !dbg !6978
  br i1 %cmp52, label %if.then54, label %if.else56, !dbg !6979

if.then54:                                        ; preds = %if.else50
  %type55 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 2, !dbg !6980
  store i16 8, i16* %type55, align 8, !dbg !6981
  br label %if.end72, !dbg !6982

if.else56:                                        ; preds = %if.else50
  %56 = load %struct.GHOST_TEventButtonData*, %struct.GHOST_TEventButtonData** %bd, align 8, !dbg !6983
  %button57 = getelementptr inbounds %struct.GHOST_TEventButtonData, %struct.GHOST_TEventButtonData* %56, i32 0, i32 0, !dbg !6985
  %57 = load i32, i32* %button57, align 4, !dbg !6985
  %cmp58 = icmp eq i32 %57, 5, !dbg !6986
  br i1 %cmp58, label %if.then60, label %if.else62, !dbg !6987

if.then60:                                        ; preds = %if.else56
  %type61 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 2, !dbg !6988
  store i16 18, i16* %type61, align 8, !dbg !6989
  br label %if.end71, !dbg !6990

if.else62:                                        ; preds = %if.else56
  %58 = load %struct.GHOST_TEventButtonData*, %struct.GHOST_TEventButtonData** %bd, align 8, !dbg !6991
  %button63 = getelementptr inbounds %struct.GHOST_TEventButtonData, %struct.GHOST_TEventButtonData* %58, i32 0, i32 0, !dbg !6993
  %59 = load i32, i32* %button63, align 4, !dbg !6993
  %cmp64 = icmp eq i32 %59, 6, !dbg !6994
  br i1 %cmp64, label %if.then66, label %if.else68, !dbg !6995

if.then66:                                        ; preds = %if.else62
  %type67 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 2, !dbg !6996
  store i16 19, i16* %type67, align 8, !dbg !6997
  br label %if.end70, !dbg !6998

if.else68:                                        ; preds = %if.else62
  %type69 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 2, !dbg !6999
  store i16 2, i16* %type69, align 8, !dbg !7000
  br label %if.end70

if.end70:                                         ; preds = %if.else68, %if.then66
  br label %if.end71

if.end71:                                         ; preds = %if.end70, %if.then60
  br label %if.end72

if.end72:                                         ; preds = %if.end71, %if.then54
  br label %if.end73

if.end73:                                         ; preds = %if.end72, %if.then48
  br label %if.end74

if.end74:                                         ; preds = %if.end73, %if.then42
  br label %if.end75

if.end75:                                         ; preds = %if.end74, %if.then37
  call void @wm_eventemulation(%struct.wmEvent* %event), !dbg !7001
  %60 = load %struct.wmEvent*, %struct.wmEvent** %evt, align 8, !dbg !7002
  %val76 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %60, i32 0, i32 3, !dbg !7003
  %61 = load i16, i16* %val76, align 2, !dbg !7003
  %62 = load %struct.wmEvent*, %struct.wmEvent** %evt, align 8, !dbg !7004
  %prevval = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %62, i32 0, i32 11, !dbg !7005
  store i16 %61, i16* %prevval, align 2, !dbg !7006
  %63 = load %struct.wmEvent*, %struct.wmEvent** %evt, align 8, !dbg !7007
  %type77 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %63, i32 0, i32 2, !dbg !7008
  %64 = load i16, i16* %type77, align 8, !dbg !7008
  %65 = load %struct.wmEvent*, %struct.wmEvent** %evt, align 8, !dbg !7009
  %prevtype = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %65, i32 0, i32 10, !dbg !7010
  store i16 %64, i16* %prevtype, align 4, !dbg !7011
  %val78 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 3, !dbg !7012
  %66 = load i16, i16* %val78, align 2, !dbg !7012
  %67 = load %struct.wmEvent*, %struct.wmEvent** %evt, align 8, !dbg !7013
  %val79 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %67, i32 0, i32 3, !dbg !7014
  store i16 %66, i16* %val79, align 2, !dbg !7015
  %type80 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 2, !dbg !7016
  %68 = load i16, i16* %type80, align 8, !dbg !7016
  %69 = load %struct.wmEvent*, %struct.wmEvent** %evt, align 8, !dbg !7017
  %type81 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %69, i32 0, i32 2, !dbg !7018
  store i16 %68, i16* %type81, align 8, !dbg !7019
  %70 = load %struct.wmWindow*, %struct.wmWindow** %win.addr, align 8, !dbg !7020
  %active = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %70, i32 0, i32 12, !dbg !7022
  %71 = load i16, i16* %active, align 4, !dbg !7022
  %conv82 = sext i16 %71 to i32, !dbg !7020
  %cmp83 = icmp eq i32 %conv82, 0, !dbg !7023
  br i1 %cmp83, label %if.then85, label %if.end90, !dbg !7024

if.then85:                                        ; preds = %if.end75
  call void @llvm.dbg.declare(metadata i32* %cx, metadata !7025, metadata !DIExpression()), !dbg !7027
  call void @llvm.dbg.declare(metadata i32* %cy, metadata !7028, metadata !DIExpression()), !dbg !7029
  %72 = load %struct.wmWindow*, %struct.wmWindow** %win.addr, align 8, !dbg !7030
  call void @wm_get_cursor_position(%struct.wmWindow* %72, i32* %cx, i32* %cy), !dbg !7031
  %73 = load i32, i32* %cx, align 4, !dbg !7032
  %74 = load %struct.wmEvent*, %struct.wmEvent** %evt, align 8, !dbg !7033
  %x86 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %74, i32 0, i32 4, !dbg !7034
  store i32 %73, i32* %x86, align 4, !dbg !7035
  %x87 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 4, !dbg !7036
  store i32 %73, i32* %x87, align 4, !dbg !7037
  %75 = load i32, i32* %cy, align 4, !dbg !7038
  %76 = load %struct.wmEvent*, %struct.wmEvent** %evt, align 8, !dbg !7039
  %y88 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %76, i32 0, i32 5, !dbg !7040
  store i32 %75, i32* %y88, align 8, !dbg !7041
  %y89 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 5, !dbg !7042
  store i32 %75, i32* %y89, align 8, !dbg !7043
  br label %if.end90, !dbg !7044

if.end90:                                         ; preds = %if.then85, %if.end75
  %77 = load %struct.wmEvent*, %struct.wmEvent** %evt, align 8, !dbg !7045
  %call91 = call zeroext i8 @wm_event_is_double_click(%struct.wmEvent* %event, %struct.wmEvent* %77), !dbg !7047
  %tobool92 = icmp ne i8 %call91, 0, !dbg !7047
  br i1 %tobool92, label %if.then93, label %if.end99, !dbg !7048

if.then93:                                        ; preds = %if.end90
  %78 = load i32, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 16), align 4, !dbg !7049
  %and = and i32 %78, 24, !dbg !7052
  %tobool94 = icmp ne i32 %and, 0, !dbg !7052
  br i1 %tobool94, label %if.then95, label %if.end97, !dbg !7053

if.then95:                                        ; preds = %if.then93
  %call96 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.wm_event_add_ghostevent, i64 0, i64 0)), !dbg !7054
  br label %if.end97, !dbg !7054

if.end97:                                         ; preds = %if.then95, %if.then93
  %val98 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 3, !dbg !7055
  store i16 4, i16* %val98, align 2, !dbg !7056
  br label %if.end99, !dbg !7057

if.end99:                                         ; preds = %if.end97, %if.end90
  %val100 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 3, !dbg !7058
  %79 = load i16, i16* %val100, align 2, !dbg !7058
  %conv101 = sext i16 %79 to i32, !dbg !7060
  %cmp102 = icmp eq i32 %conv101, 1, !dbg !7061
  br i1 %cmp102, label %if.then104, label %if.end108, !dbg !7062

if.then104:                                       ; preds = %if.end99
  %call105 = call double @PIL_check_seconds_timer(), !dbg !7063
  %80 = load %struct.wmEvent*, %struct.wmEvent** %evt, align 8, !dbg !7065
  %prevclicktime = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %80, i32 0, i32 14, !dbg !7066
  store double %call105, double* %prevclicktime, align 8, !dbg !7067
  %x106 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 4, !dbg !7068
  %81 = load i32, i32* %x106, align 4, !dbg !7068
  %82 = load %struct.wmEvent*, %struct.wmEvent** %evt, align 8, !dbg !7069
  %prevclickx = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %82, i32 0, i32 15, !dbg !7070
  store i32 %81, i32* %prevclickx, align 8, !dbg !7071
  %y107 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 5, !dbg !7072
  %83 = load i32, i32* %y107, align 8, !dbg !7072
  %84 = load %struct.wmEvent*, %struct.wmEvent** %evt, align 8, !dbg !7073
  %prevclicky = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %84, i32 0, i32 16, !dbg !7074
  store i32 %83, i32* %prevclicky, align 4, !dbg !7075
  br label %if.end108, !dbg !7076

if.end108:                                        ; preds = %if.then104, %if.end99
  %85 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm.addr, align 8, !dbg !7077
  %86 = load %struct.wmWindow*, %struct.wmWindow** %win.addr, align 8, !dbg !7078
  %call109 = call %struct.wmWindow* @wm_event_cursor_other_windows(%struct.wmWindowManager* %85, %struct.wmWindow* %86, %struct.wmEvent* %event), !dbg !7079
  store %struct.wmWindow* %call109, %struct.wmWindow** %owin, align 8, !dbg !7080
  %87 = load %struct.wmWindow*, %struct.wmWindow** %owin, align 8, !dbg !7081
  %tobool110 = icmp ne %struct.wmWindow* %87, null, !dbg !7081
  br i1 %tobool110, label %if.then111, label %if.else122, !dbg !7083

if.then111:                                       ; preds = %if.end108
  call void @llvm.dbg.declare(metadata %struct.wmEvent* %oevent112, metadata !7084, metadata !DIExpression()), !dbg !7086
  %88 = load %struct.wmWindow*, %struct.wmWindow** %owin, align 8, !dbg !7087
  %eventstate113 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %88, i32 0, i32 21, !dbg !7088
  %89 = load %struct.wmEvent*, %struct.wmEvent** %eventstate113, align 8, !dbg !7088
  %90 = bitcast %struct.wmEvent* %oevent112 to i8*, !dbg !7089
  %91 = bitcast %struct.wmEvent* %89 to i8*, !dbg !7089
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %90, i8* align 8 %91, i64 120, i1 false), !dbg !7089
  %x114 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 4, !dbg !7090
  %92 = load i32, i32* %x114, align 4, !dbg !7090
  %x115 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %oevent112, i32 0, i32 4, !dbg !7091
  store i32 %92, i32* %x115, align 4, !dbg !7092
  %y116 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 5, !dbg !7093
  %93 = load i32, i32* %y116, align 8, !dbg !7093
  %y117 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %oevent112, i32 0, i32 5, !dbg !7094
  store i32 %93, i32* %y117, align 8, !dbg !7095
  %type118 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 2, !dbg !7096
  %94 = load i16, i16* %type118, align 8, !dbg !7096
  %type119 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %oevent112, i32 0, i32 2, !dbg !7097
  store i16 %94, i16* %type119, align 8, !dbg !7098
  %val120 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 3, !dbg !7099
  %95 = load i16, i16* %val120, align 2, !dbg !7099
  %val121 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %oevent112, i32 0, i32 3, !dbg !7100
  store i16 %95, i16* %val121, align 2, !dbg !7101
  %96 = load %struct.wmWindow*, %struct.wmWindow** %owin, align 8, !dbg !7102
  call void @wm_event_add(%struct.wmWindow* %96, %struct.wmEvent* %oevent112), !dbg !7103
  br label %if.end123, !dbg !7104

if.else122:                                       ; preds = %if.end108
  %97 = load %struct.wmWindow*, %struct.wmWindow** %win.addr, align 8, !dbg !7105
  call void @wm_event_add(%struct.wmWindow* %97, %struct.wmEvent* %event), !dbg !7107
  br label %if.end123

if.end123:                                        ; preds = %if.else122, %if.then111
  br label %sw.epilog423, !dbg !7108

sw.bb124:                                         ; preds = %entry, %entry
  call void @llvm.dbg.declare(metadata %struct.GHOST_TEventKeyData** %kd, metadata !7109, metadata !DIExpression()), !dbg !7119
  %98 = load i8*, i8** %customdata.addr, align 8, !dbg !7120
  %99 = bitcast i8* %98 to %struct.GHOST_TEventKeyData*, !dbg !7120
  store %struct.GHOST_TEventKeyData* %99, %struct.GHOST_TEventKeyData** %kd, align 8, !dbg !7119
  %100 = load %struct.GHOST_TEventKeyData*, %struct.GHOST_TEventKeyData** %kd, align 8, !dbg !7121
  %key = getelementptr inbounds %struct.GHOST_TEventKeyData, %struct.GHOST_TEventKeyData* %100, i32 0, i32 0, !dbg !7122
  %101 = load i32, i32* %key, align 4, !dbg !7122
  %call125 = call i32 @convert_key(i32 %101), !dbg !7123
  %conv126 = trunc i32 %call125 to i16, !dbg !7123
  %type127 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 2, !dbg !7124
  store i16 %conv126, i16* %type127, align 8, !dbg !7125
  %102 = load %struct.GHOST_TEventKeyData*, %struct.GHOST_TEventKeyData** %kd, align 8, !dbg !7126
  %ascii = getelementptr inbounds %struct.GHOST_TEventKeyData, %struct.GHOST_TEventKeyData* %102, i32 0, i32 1, !dbg !7127
  %103 = load i8, i8* %ascii, align 4, !dbg !7127
  %ascii128 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 8, !dbg !7128
  store i8 %103, i8* %ascii128, align 2, !dbg !7129
  %utf8_buf = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 7, !dbg !7130
  %arraydecay = getelementptr inbounds [6 x i8], [6 x i8]* %utf8_buf, i64 0, i64 0, !dbg !7131
  %104 = load %struct.GHOST_TEventKeyData*, %struct.GHOST_TEventKeyData** %kd, align 8, !dbg !7132
  %utf8_buf129 = getelementptr inbounds %struct.GHOST_TEventKeyData, %struct.GHOST_TEventKeyData* %104, i32 0, i32 2, !dbg !7133
  %arraydecay130 = getelementptr inbounds [6 x i8], [6 x i8]* %utf8_buf129, i64 0, i64 0, !dbg !7131
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %arraydecay, i8* align 1 %arraydecay130, i64 6, i1 false), !dbg !7131
  %105 = load i32, i32* %type.addr, align 4, !dbg !7134
  %cmp131 = icmp eq i32 %105, 8, !dbg !7135
  %106 = zext i1 %cmp131 to i64, !dbg !7136
  %cond133 = select i1 %cmp131, i32 1, i32 2, !dbg !7136
  %conv134 = trunc i32 %cond133 to i16, !dbg !7136
  %val135 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 3, !dbg !7137
  store i16 %conv134, i16* %val135, align 2, !dbg !7138
  call void @wm_eventemulation(%struct.wmEvent* %event), !dbg !7139
  %107 = load %struct.wmEvent*, %struct.wmEvent** %evt, align 8, !dbg !7140
  %val136 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %107, i32 0, i32 3, !dbg !7141
  %108 = load i16, i16* %val136, align 2, !dbg !7141
  %109 = load %struct.wmEvent*, %struct.wmEvent** %evt, align 8, !dbg !7142
  %prevval137 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %109, i32 0, i32 11, !dbg !7143
  store i16 %108, i16* %prevval137, align 2, !dbg !7144
  %110 = load %struct.wmEvent*, %struct.wmEvent** %evt, align 8, !dbg !7145
  %type138 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %110, i32 0, i32 2, !dbg !7146
  %111 = load i16, i16* %type138, align 8, !dbg !7146
  %112 = load %struct.wmEvent*, %struct.wmEvent** %evt, align 8, !dbg !7147
  %prevtype139 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %112, i32 0, i32 10, !dbg !7148
  store i16 %111, i16* %prevtype139, align 4, !dbg !7149
  %val140 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 3, !dbg !7150
  %113 = load i16, i16* %val140, align 2, !dbg !7150
  %114 = load %struct.wmEvent*, %struct.wmEvent** %evt, align 8, !dbg !7151
  %val141 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %114, i32 0, i32 3, !dbg !7152
  store i16 %113, i16* %val141, align 2, !dbg !7153
  %type142 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 2, !dbg !7154
  %115 = load i16, i16* %type142, align 8, !dbg !7154
  %116 = load %struct.wmEvent*, %struct.wmEvent** %evt, align 8, !dbg !7155
  %type143 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %116, i32 0, i32 2, !dbg !7156
  store i16 %115, i16* %type143, align 8, !dbg !7157
  %117 = load i32, i32* %type.addr, align 4, !dbg !7158
  %cmp144 = icmp eq i32 %117, 9, !dbg !7160
  br i1 %cmp144, label %if.then146, label %if.else155, !dbg !7161

if.then146:                                       ; preds = %sw.bb124
  %ascii147 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 8, !dbg !7162
  store i8 0, i8* %ascii147, align 2, !dbg !7164
  %utf8_buf148 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 7, !dbg !7165
  %arrayidx = getelementptr inbounds [6 x i8], [6 x i8]* %utf8_buf148, i64 0, i64 0, !dbg !7167
  %118 = load i8, i8* %arrayidx, align 4, !dbg !7167
  %tobool149 = icmp ne i8 %118, 0, !dbg !7167
  br i1 %tobool149, label %if.then150, label %if.end152, !dbg !7168

if.then150:                                       ; preds = %if.then146
  %call151 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.wm_event_add_ghostevent, i64 0, i64 0)), !dbg !7169
  br label %if.end152, !dbg !7171

if.end152:                                        ; preds = %if.then150, %if.then146
  %utf8_buf153 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 7, !dbg !7172
  %arrayidx154 = getelementptr inbounds [6 x i8], [6 x i8]* %utf8_buf153, i64 0, i64 0, !dbg !7173
  store i8 0, i8* %arrayidx154, align 4, !dbg !7174
  br label %if.end182, !dbg !7175

if.else155:                                       ; preds = %sw.bb124
  %ascii156 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 8, !dbg !7176
  %119 = load i8, i8* %ascii156, align 2, !dbg !7176
  %conv157 = zext i8 %119 to i32, !dbg !7179
  %cmp158 = icmp slt i32 %conv157, 32, !dbg !7180
  br i1 %cmp158, label %land.lhs.true, label %if.end166, !dbg !7181

land.lhs.true:                                    ; preds = %if.else155
  %ascii160 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 8, !dbg !7182
  %120 = load i8, i8* %ascii160, align 2, !dbg !7182
  %conv161 = zext i8 %120 to i32, !dbg !7183
  %cmp162 = icmp sgt i32 %conv161, 0, !dbg !7184
  br i1 %cmp162, label %if.then164, label %if.end166, !dbg !7185

if.then164:                                       ; preds = %land.lhs.true
  %ascii165 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 8, !dbg !7186
  store i8 0, i8* %ascii165, align 2, !dbg !7187
  br label %if.end166, !dbg !7188

if.end166:                                        ; preds = %if.then164, %land.lhs.true, %if.else155
  %utf8_buf167 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 7, !dbg !7189
  %arrayidx168 = getelementptr inbounds [6 x i8], [6 x i8]* %utf8_buf167, i64 0, i64 0, !dbg !7191
  %121 = load i8, i8* %arrayidx168, align 4, !dbg !7191
  %conv169 = zext i8 %121 to i32, !dbg !7191
  %cmp170 = icmp slt i32 %conv169, 32, !dbg !7192
  br i1 %cmp170, label %land.lhs.true172, label %if.end181, !dbg !7193

land.lhs.true172:                                 ; preds = %if.end166
  %utf8_buf173 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 7, !dbg !7194
  %arrayidx174 = getelementptr inbounds [6 x i8], [6 x i8]* %utf8_buf173, i64 0, i64 0, !dbg !7195
  %122 = load i8, i8* %arrayidx174, align 4, !dbg !7195
  %conv175 = zext i8 %122 to i32, !dbg !7195
  %cmp176 = icmp sgt i32 %conv175, 0, !dbg !7196
  br i1 %cmp176, label %if.then178, label %if.end181, !dbg !7197

if.then178:                                       ; preds = %land.lhs.true172
  %utf8_buf179 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 7, !dbg !7198
  %arrayidx180 = getelementptr inbounds [6 x i8], [6 x i8]* %utf8_buf179, i64 0, i64 0, !dbg !7199
  store i8 0, i8* %arrayidx180, align 4, !dbg !7200
  br label %if.end181, !dbg !7199

if.end181:                                        ; preds = %if.then178, %land.lhs.true172, %if.end166
  br label %if.end182

if.end182:                                        ; preds = %if.end181, %if.end152
  %utf8_buf183 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 7, !dbg !7201
  %arrayidx184 = getelementptr inbounds [6 x i8], [6 x i8]* %utf8_buf183, i64 0, i64 0, !dbg !7203
  %123 = load i8, i8* %arrayidx184, align 4, !dbg !7203
  %tobool185 = icmp ne i8 %123, 0, !dbg !7203
  br i1 %tobool185, label %if.then186, label %if.end200, !dbg !7204

if.then186:                                       ; preds = %if.end182
  %utf8_buf187 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 7, !dbg !7205
  %arraydecay188 = getelementptr inbounds [6 x i8], [6 x i8]* %utf8_buf187, i64 0, i64 0, !dbg !7208
  %call189 = call i32 @BLI_str_utf8_size(i8* %arraydecay188), !dbg !7209
  %cmp190 = icmp eq i32 %call189, -1, !dbg !7210
  br i1 %cmp190, label %if.then192, label %if.end199, !dbg !7211

if.then192:                                       ; preds = %if.then186
  %utf8_buf193 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 7, !dbg !7212
  %arrayidx194 = getelementptr inbounds [6 x i8], [6 x i8]* %utf8_buf193, i64 0, i64 0, !dbg !7214
  %124 = load i8, i8* %arrayidx194, align 4, !dbg !7214
  %conv195 = zext i8 %124 to i32, !dbg !7215
  %call196 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.18, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.wm_event_add_ghostevent, i64 0, i64 0), i32 %conv195), !dbg !7216
  %utf8_buf197 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 7, !dbg !7217
  %arrayidx198 = getelementptr inbounds [6 x i8], [6 x i8]* %utf8_buf197, i64 0, i64 0, !dbg !7218
  store i8 0, i8* %arrayidx198, align 4, !dbg !7219
  br label %if.end199, !dbg !7220

if.end199:                                        ; preds = %if.then192, %if.then186
  br label %if.end200, !dbg !7221

if.end200:                                        ; preds = %if.end199, %if.end182
  %type201 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 2, !dbg !7222
  %125 = load i16, i16* %type201, align 8, !dbg !7222
  %conv202 = sext i16 %125 to i32, !dbg !7223
  switch i32 %conv202, label %sw.default289 [
    i32 217, label %sw.bb203
    i32 216, label %sw.bb203
    i32 212, label %sw.bb217
    i32 215, label %sw.bb217
    i32 213, label %sw.bb241
    i32 214, label %sw.bb241
    i32 172, label %sw.bb265
  ], !dbg !7224

sw.bb203:                                         ; preds = %if.end200, %if.end200
  %val204 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 3, !dbg !7225
  %126 = load i16, i16* %val204, align 2, !dbg !7225
  %conv205 = sext i16 %126 to i32, !dbg !7227
  %cmp206 = icmp eq i32 %conv205, 1, !dbg !7228
  br i1 %cmp206, label %cond.true, label %cond.false, !dbg !7229

cond.true:                                        ; preds = %sw.bb203
  %127 = load %struct.wmEvent*, %struct.wmEvent** %evt, align 8, !dbg !7230
  %ctrl = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %127, i32 0, i32 18, !dbg !7231
  %128 = load i16, i16* %ctrl, align 2, !dbg !7231
  %conv208 = sext i16 %128 to i32, !dbg !7230
  %tobool209 = icmp ne i32 %conv208, 0, !dbg !7230
  br i1 %tobool209, label %lor.end, label %lor.lhs.false, !dbg !7232

lor.lhs.false:                                    ; preds = %cond.true
  %129 = load %struct.wmEvent*, %struct.wmEvent** %evt, align 8, !dbg !7233
  %alt = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %129, i32 0, i32 19, !dbg !7234
  %130 = load i16, i16* %alt, align 4, !dbg !7234
  %conv210 = sext i16 %130 to i32, !dbg !7233
  %tobool211 = icmp ne i32 %conv210, 0, !dbg !7233
  br i1 %tobool211, label %lor.end, label %lor.rhs, !dbg !7235

lor.rhs:                                          ; preds = %lor.lhs.false
  %131 = load %struct.wmEvent*, %struct.wmEvent** %evt, align 8, !dbg !7236
  %oskey = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %131, i32 0, i32 20, !dbg !7237
  %132 = load i16, i16* %oskey, align 2, !dbg !7237
  %conv212 = sext i16 %132 to i32, !dbg !7236
  %tobool213 = icmp ne i32 %conv212, 0, !dbg !7235
  br label %lor.end, !dbg !7235

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %cond.true
  %133 = phi i1 [ true, %lor.lhs.false ], [ true, %cond.true ], [ %tobool213, %lor.rhs ]
  %134 = zext i1 %133 to i64, !dbg !7238
  %cond214 = select i1 %133, i32 3, i32 1, !dbg !7238
  br label %cond.end, !dbg !7229

cond.false:                                       ; preds = %sw.bb203
  br label %cond.end, !dbg !7229

cond.end:                                         ; preds = %cond.false, %lor.end
  %cond215 = phi i32 [ %cond214, %lor.end ], [ 0, %cond.false ], !dbg !7229
  %conv216 = trunc i32 %cond215 to i16, !dbg !7229
  %135 = load %struct.wmEvent*, %struct.wmEvent** %evt, align 8, !dbg !7239
  %shift = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %135, i32 0, i32 17, !dbg !7240
  store i16 %conv216, i16* %shift, align 8, !dbg !7241
  br label %sw.epilog318, !dbg !7242

sw.bb217:                                         ; preds = %if.end200, %if.end200
  %val218 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 3, !dbg !7243
  %136 = load i16, i16* %val218, align 2, !dbg !7243
  %conv219 = sext i16 %136 to i32, !dbg !7244
  %cmp220 = icmp eq i32 %conv219, 1, !dbg !7245
  br i1 %cmp220, label %cond.true222, label %cond.false236, !dbg !7246

cond.true222:                                     ; preds = %sw.bb217
  %137 = load %struct.wmEvent*, %struct.wmEvent** %evt, align 8, !dbg !7247
  %shift223 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %137, i32 0, i32 17, !dbg !7248
  %138 = load i16, i16* %shift223, align 8, !dbg !7248
  %conv224 = sext i16 %138 to i32, !dbg !7247
  %tobool225 = icmp ne i32 %conv224, 0, !dbg !7247
  br i1 %tobool225, label %lor.end234, label %lor.lhs.false226, !dbg !7249

lor.lhs.false226:                                 ; preds = %cond.true222
  %139 = load %struct.wmEvent*, %struct.wmEvent** %evt, align 8, !dbg !7250
  %alt227 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %139, i32 0, i32 19, !dbg !7251
  %140 = load i16, i16* %alt227, align 4, !dbg !7251
  %conv228 = sext i16 %140 to i32, !dbg !7250
  %tobool229 = icmp ne i32 %conv228, 0, !dbg !7250
  br i1 %tobool229, label %lor.end234, label %lor.rhs230, !dbg !7252

lor.rhs230:                                       ; preds = %lor.lhs.false226
  %141 = load %struct.wmEvent*, %struct.wmEvent** %evt, align 8, !dbg !7253
  %oskey231 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %141, i32 0, i32 20, !dbg !7254
  %142 = load i16, i16* %oskey231, align 2, !dbg !7254
  %conv232 = sext i16 %142 to i32, !dbg !7253
  %tobool233 = icmp ne i32 %conv232, 0, !dbg !7252
  br label %lor.end234, !dbg !7252

lor.end234:                                       ; preds = %lor.rhs230, %lor.lhs.false226, %cond.true222
  %143 = phi i1 [ true, %lor.lhs.false226 ], [ true, %cond.true222 ], [ %tobool233, %lor.rhs230 ]
  %144 = zext i1 %143 to i64, !dbg !7255
  %cond235 = select i1 %143, i32 3, i32 1, !dbg !7255
  br label %cond.end237, !dbg !7246

cond.false236:                                    ; preds = %sw.bb217
  br label %cond.end237, !dbg !7246

cond.end237:                                      ; preds = %cond.false236, %lor.end234
  %cond238 = phi i32 [ %cond235, %lor.end234 ], [ 0, %cond.false236 ], !dbg !7246
  %conv239 = trunc i32 %cond238 to i16, !dbg !7246
  %145 = load %struct.wmEvent*, %struct.wmEvent** %evt, align 8, !dbg !7256
  %ctrl240 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %145, i32 0, i32 18, !dbg !7257
  store i16 %conv239, i16* %ctrl240, align 2, !dbg !7258
  br label %sw.epilog318, !dbg !7259

sw.bb241:                                         ; preds = %if.end200, %if.end200
  %val242 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 3, !dbg !7260
  %146 = load i16, i16* %val242, align 2, !dbg !7260
  %conv243 = sext i16 %146 to i32, !dbg !7261
  %cmp244 = icmp eq i32 %conv243, 1, !dbg !7262
  br i1 %cmp244, label %cond.true246, label %cond.false260, !dbg !7263

cond.true246:                                     ; preds = %sw.bb241
  %147 = load %struct.wmEvent*, %struct.wmEvent** %evt, align 8, !dbg !7264
  %ctrl247 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %147, i32 0, i32 18, !dbg !7265
  %148 = load i16, i16* %ctrl247, align 2, !dbg !7265
  %conv248 = sext i16 %148 to i32, !dbg !7264
  %tobool249 = icmp ne i32 %conv248, 0, !dbg !7264
  br i1 %tobool249, label %lor.end258, label %lor.lhs.false250, !dbg !7266

lor.lhs.false250:                                 ; preds = %cond.true246
  %149 = load %struct.wmEvent*, %struct.wmEvent** %evt, align 8, !dbg !7267
  %shift251 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %149, i32 0, i32 17, !dbg !7268
  %150 = load i16, i16* %shift251, align 8, !dbg !7268
  %conv252 = sext i16 %150 to i32, !dbg !7267
  %tobool253 = icmp ne i32 %conv252, 0, !dbg !7267
  br i1 %tobool253, label %lor.end258, label %lor.rhs254, !dbg !7269

lor.rhs254:                                       ; preds = %lor.lhs.false250
  %151 = load %struct.wmEvent*, %struct.wmEvent** %evt, align 8, !dbg !7270
  %oskey255 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %151, i32 0, i32 20, !dbg !7271
  %152 = load i16, i16* %oskey255, align 2, !dbg !7271
  %conv256 = sext i16 %152 to i32, !dbg !7270
  %tobool257 = icmp ne i32 %conv256, 0, !dbg !7269
  br label %lor.end258, !dbg !7269

lor.end258:                                       ; preds = %lor.rhs254, %lor.lhs.false250, %cond.true246
  %153 = phi i1 [ true, %lor.lhs.false250 ], [ true, %cond.true246 ], [ %tobool257, %lor.rhs254 ]
  %154 = zext i1 %153 to i64, !dbg !7272
  %cond259 = select i1 %153, i32 3, i32 1, !dbg !7272
  br label %cond.end261, !dbg !7263

cond.false260:                                    ; preds = %sw.bb241
  br label %cond.end261, !dbg !7263

cond.end261:                                      ; preds = %cond.false260, %lor.end258
  %cond262 = phi i32 [ %cond259, %lor.end258 ], [ 0, %cond.false260 ], !dbg !7263
  %conv263 = trunc i32 %cond262 to i16, !dbg !7263
  %155 = load %struct.wmEvent*, %struct.wmEvent** %evt, align 8, !dbg !7273
  %alt264 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %155, i32 0, i32 19, !dbg !7274
  store i16 %conv263, i16* %alt264, align 4, !dbg !7275
  br label %sw.epilog318, !dbg !7276

sw.bb265:                                         ; preds = %if.end200
  %val266 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 3, !dbg !7277
  %156 = load i16, i16* %val266, align 2, !dbg !7277
  %conv267 = sext i16 %156 to i32, !dbg !7278
  %cmp268 = icmp eq i32 %conv267, 1, !dbg !7279
  br i1 %cmp268, label %cond.true270, label %cond.false284, !dbg !7280

cond.true270:                                     ; preds = %sw.bb265
  %157 = load %struct.wmEvent*, %struct.wmEvent** %evt, align 8, !dbg !7281
  %ctrl271 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %157, i32 0, i32 18, !dbg !7282
  %158 = load i16, i16* %ctrl271, align 2, !dbg !7282
  %conv272 = sext i16 %158 to i32, !dbg !7281
  %tobool273 = icmp ne i32 %conv272, 0, !dbg !7281
  br i1 %tobool273, label %lor.end282, label %lor.lhs.false274, !dbg !7283

lor.lhs.false274:                                 ; preds = %cond.true270
  %159 = load %struct.wmEvent*, %struct.wmEvent** %evt, align 8, !dbg !7284
  %alt275 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %159, i32 0, i32 19, !dbg !7285
  %160 = load i16, i16* %alt275, align 4, !dbg !7285
  %conv276 = sext i16 %160 to i32, !dbg !7284
  %tobool277 = icmp ne i32 %conv276, 0, !dbg !7284
  br i1 %tobool277, label %lor.end282, label %lor.rhs278, !dbg !7286

lor.rhs278:                                       ; preds = %lor.lhs.false274
  %161 = load %struct.wmEvent*, %struct.wmEvent** %evt, align 8, !dbg !7287
  %shift279 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %161, i32 0, i32 17, !dbg !7288
  %162 = load i16, i16* %shift279, align 8, !dbg !7288
  %conv280 = sext i16 %162 to i32, !dbg !7287
  %tobool281 = icmp ne i32 %conv280, 0, !dbg !7286
  br label %lor.end282, !dbg !7286

lor.end282:                                       ; preds = %lor.rhs278, %lor.lhs.false274, %cond.true270
  %163 = phi i1 [ true, %lor.lhs.false274 ], [ true, %cond.true270 ], [ %tobool281, %lor.rhs278 ]
  %164 = zext i1 %163 to i64, !dbg !7289
  %cond283 = select i1 %163, i32 3, i32 1, !dbg !7289
  br label %cond.end285, !dbg !7280

cond.false284:                                    ; preds = %sw.bb265
  br label %cond.end285, !dbg !7280

cond.end285:                                      ; preds = %cond.false284, %lor.end282
  %cond286 = phi i32 [ %cond283, %lor.end282 ], [ 0, %cond.false284 ], !dbg !7280
  %conv287 = trunc i32 %cond286 to i16, !dbg !7280
  %165 = load %struct.wmEvent*, %struct.wmEvent** %evt, align 8, !dbg !7290
  %oskey288 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %165, i32 0, i32 20, !dbg !7291
  store i16 %conv287, i16* %oskey288, align 2, !dbg !7292
  br label %sw.epilog318, !dbg !7293

sw.default289:                                    ; preds = %if.end200
  %val290 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 3, !dbg !7294
  %166 = load i16, i16* %val290, align 2, !dbg !7294
  %conv291 = sext i16 %166 to i32, !dbg !7296
  %cmp292 = icmp eq i32 %conv291, 1, !dbg !7297
  br i1 %cmp292, label %land.lhs.true294, label %if.else301, !dbg !7298

land.lhs.true294:                                 ; preds = %sw.default289
  %keymodifier = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 21, !dbg !7299
  %167 = load i16, i16* %keymodifier, align 8, !dbg !7299
  %conv295 = sext i16 %167 to i32, !dbg !7300
  %cmp296 = icmp eq i32 %conv295, 0, !dbg !7301
  br i1 %cmp296, label %if.then298, label %if.else301, !dbg !7302

if.then298:                                       ; preds = %land.lhs.true294
  %type299 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 2, !dbg !7303
  %168 = load i16, i16* %type299, align 8, !dbg !7303
  %169 = load %struct.wmEvent*, %struct.wmEvent** %evt, align 8, !dbg !7304
  %keymodifier300 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %169, i32 0, i32 21, !dbg !7305
  store i16 %168, i16* %keymodifier300, align 8, !dbg !7306
  br label %if.end317, !dbg !7304

if.else301:                                       ; preds = %land.lhs.true294, %sw.default289
  %val302 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 3, !dbg !7307
  %170 = load i16, i16* %val302, align 2, !dbg !7307
  %conv303 = sext i16 %170 to i32, !dbg !7309
  %cmp304 = icmp eq i32 %conv303, 2, !dbg !7310
  br i1 %cmp304, label %land.lhs.true306, label %if.end316, !dbg !7311

land.lhs.true306:                                 ; preds = %if.else301
  %keymodifier307 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 21, !dbg !7312
  %171 = load i16, i16* %keymodifier307, align 8, !dbg !7312
  %conv308 = sext i16 %171 to i32, !dbg !7313
  %type309 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 2, !dbg !7314
  %172 = load i16, i16* %type309, align 8, !dbg !7314
  %conv310 = sext i16 %172 to i32, !dbg !7315
  %cmp311 = icmp eq i32 %conv308, %conv310, !dbg !7316
  br i1 %cmp311, label %if.then313, label %if.end316, !dbg !7317

if.then313:                                       ; preds = %land.lhs.true306
  %173 = load %struct.wmEvent*, %struct.wmEvent** %evt, align 8, !dbg !7318
  %keymodifier314 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %173, i32 0, i32 21, !dbg !7319
  store i16 0, i16* %keymodifier314, align 8, !dbg !7320
  %keymodifier315 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 21, !dbg !7321
  store i16 0, i16* %keymodifier315, align 8, !dbg !7322
  br label %if.end316, !dbg !7323

if.end316:                                        ; preds = %if.then313, %land.lhs.true306, %if.else301
  br label %if.end317

if.end317:                                        ; preds = %if.end316, %if.then298
  br label %sw.epilog318, !dbg !7324

sw.epilog318:                                     ; preds = %if.end317, %cond.end285, %cond.end261, %cond.end237, %cond.end
  %174 = load %struct.wmEvent*, %struct.wmEvent** %evt, align 8, !dbg !7325
  %call319 = call zeroext i8 @wm_event_is_double_click(%struct.wmEvent* %event, %struct.wmEvent* %174), !dbg !7327
  %tobool320 = icmp ne i8 %call319, 0, !dbg !7327
  br i1 %tobool320, label %if.then321, label %if.end329, !dbg !7328

if.then321:                                       ; preds = %sw.epilog318
  %175 = load i32, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 16), align 4, !dbg !7329
  %and322 = and i32 %175, 24, !dbg !7332
  %tobool323 = icmp ne i32 %and322, 0, !dbg !7332
  br i1 %tobool323, label %if.then324, label %if.end326, !dbg !7333

if.then324:                                       ; preds = %if.then321
  %call325 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.wm_event_add_ghostevent, i64 0, i64 0)), !dbg !7334
  br label %if.end326, !dbg !7334

if.end326:                                        ; preds = %if.then324, %if.then321
  %val327 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 3, !dbg !7335
  store i16 4, i16* %val327, align 2, !dbg !7336
  %176 = load %struct.wmEvent*, %struct.wmEvent** %evt, align 8, !dbg !7337
  %val328 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %176, i32 0, i32 3, !dbg !7338
  store i16 4, i16* %val328, align 2, !dbg !7339
  br label %if.end329, !dbg !7340

if.end329:                                        ; preds = %if.end326, %sw.epilog318
  %keymodifier330 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 21, !dbg !7341
  %177 = load i16, i16* %keymodifier330, align 8, !dbg !7341
  %conv331 = sext i16 %177 to i32, !dbg !7343
  %type332 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 2, !dbg !7344
  %178 = load i16, i16* %type332, align 8, !dbg !7344
  %conv333 = sext i16 %178 to i32, !dbg !7345
  %cmp334 = icmp eq i32 %conv331, %conv333, !dbg !7346
  br i1 %cmp334, label %if.then336, label %if.end338, !dbg !7347

if.then336:                                       ; preds = %if.end329
  %keymodifier337 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 21, !dbg !7348
  store i16 0, i16* %keymodifier337, align 8, !dbg !7349
  br label %if.end338, !dbg !7350

if.end338:                                        ; preds = %if.then336, %if.end329
  %keymodifier339 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 21, !dbg !7351
  %179 = load i16, i16* %keymodifier339, align 8, !dbg !7351
  %conv340 = sext i16 %179 to i32, !dbg !7353
  %cmp341 = icmp eq i32 %conv340, 171, !dbg !7354
  br i1 %cmp341, label %if.then343, label %if.end345, !dbg !7355

if.then343:                                       ; preds = %if.end338
  %keymodifier344 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 21, !dbg !7356
  store i16 0, i16* %keymodifier344, align 8, !dbg !7357
  br label %if.end345, !dbg !7358

if.end345:                                        ; preds = %if.then343, %if.end338
  %type346 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 2, !dbg !7359
  %180 = load i16, i16* %type346, align 8, !dbg !7359
  %conv347 = sext i16 %180 to i32, !dbg !7361
  %cmp348 = icmp eq i32 %conv347, 218, !dbg !7362
  br i1 %cmp348, label %land.lhs.true350, label %if.end371, !dbg !7363

land.lhs.true350:                                 ; preds = %if.end345
  %val351 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 3, !dbg !7364
  %181 = load i16, i16* %val351, align 2, !dbg !7364
  %conv352 = sext i16 %181 to i32, !dbg !7365
  %cmp353 = icmp eq i32 %conv352, 1, !dbg !7366
  br i1 %cmp353, label %land.lhs.true355, label %if.end371, !dbg !7367

land.lhs.true355:                                 ; preds = %land.lhs.true350
  %shift356 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 17, !dbg !7368
  %182 = load i16, i16* %shift356, align 8, !dbg !7368
  %conv357 = sext i16 %182 to i32, !dbg !7369
  %cmp358 = icmp eq i32 %conv357, 0, !dbg !7370
  br i1 %cmp358, label %land.lhs.true360, label %if.end371, !dbg !7371

land.lhs.true360:                                 ; preds = %land.lhs.true355
  %ctrl361 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 18, !dbg !7372
  %183 = load i16, i16* %ctrl361, align 2, !dbg !7372
  %conv362 = sext i16 %183 to i32, !dbg !7373
  %cmp363 = icmp eq i32 %conv362, 0, !dbg !7374
  br i1 %cmp363, label %land.lhs.true365, label %if.end371, !dbg !7375

land.lhs.true365:                                 ; preds = %land.lhs.true360
  %alt366 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 19, !dbg !7376
  %184 = load i16, i16* %alt366, align 4, !dbg !7376
  %conv367 = sext i16 %184 to i32, !dbg !7377
  %cmp368 = icmp eq i32 %conv367, 0, !dbg !7378
  br i1 %cmp368, label %if.then370, label %if.end371, !dbg !7379

if.then370:                                       ; preds = %land.lhs.true365
  store i8 1, i8* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 7), align 8, !dbg !7380
  br label %if.end371, !dbg !7382

if.end371:                                        ; preds = %if.then370, %land.lhs.true365, %land.lhs.true360, %land.lhs.true355, %land.lhs.true350, %if.end345
  %val372 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 3, !dbg !7383
  %185 = load i16, i16* %val372, align 2, !dbg !7383
  %conv373 = sext i16 %185 to i32, !dbg !7385
  %cmp374 = icmp eq i32 %conv373, 1, !dbg !7386
  br i1 %cmp374, label %if.then376, label %if.end383, !dbg !7387

if.then376:                                       ; preds = %if.end371
  %call377 = call double @PIL_check_seconds_timer(), !dbg !7388
  %186 = load %struct.wmEvent*, %struct.wmEvent** %evt, align 8, !dbg !7390
  %prevclicktime378 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %186, i32 0, i32 14, !dbg !7391
  store double %call377, double* %prevclicktime378, align 8, !dbg !7392
  %x379 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 4, !dbg !7393
  %187 = load i32, i32* %x379, align 4, !dbg !7393
  %188 = load %struct.wmEvent*, %struct.wmEvent** %evt, align 8, !dbg !7394
  %prevclickx380 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %188, i32 0, i32 15, !dbg !7395
  store i32 %187, i32* %prevclickx380, align 8, !dbg !7396
  %y381 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 5, !dbg !7397
  %189 = load i32, i32* %y381, align 8, !dbg !7397
  %190 = load %struct.wmEvent*, %struct.wmEvent** %evt, align 8, !dbg !7398
  %prevclicky382 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %190, i32 0, i32 16, !dbg !7399
  store i32 %189, i32* %prevclicky382, align 4, !dbg !7400
  br label %if.end383, !dbg !7401

if.end383:                                        ; preds = %if.then376, %if.end371
  %191 = load %struct.wmWindow*, %struct.wmWindow** %win.addr, align 8, !dbg !7402
  call void @wm_event_add(%struct.wmWindow* %191, %struct.wmEvent* %event), !dbg !7403
  br label %sw.epilog423, !dbg !7404

sw.bb384:                                         ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.GHOST_TEventWheelData** %wheelData, metadata !7405, metadata !DIExpression()), !dbg !7412
  %192 = load i8*, i8** %customdata.addr, align 8, !dbg !7413
  %193 = bitcast i8* %192 to %struct.GHOST_TEventWheelData*, !dbg !7413
  store %struct.GHOST_TEventWheelData* %193, %struct.GHOST_TEventWheelData** %wheelData, align 8, !dbg !7412
  %194 = load %struct.GHOST_TEventWheelData*, %struct.GHOST_TEventWheelData** %wheelData, align 8, !dbg !7414
  %z = getelementptr inbounds %struct.GHOST_TEventWheelData, %struct.GHOST_TEventWheelData* %194, i32 0, i32 0, !dbg !7416
  %195 = load i32, i32* %z, align 4, !dbg !7416
  %cmp385 = icmp sgt i32 %195, 0, !dbg !7417
  br i1 %cmp385, label %if.then387, label %if.else389, !dbg !7418

if.then387:                                       ; preds = %sw.bb384
  %type388 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 2, !dbg !7419
  store i16 10, i16* %type388, align 8, !dbg !7420
  br label %if.end391, !dbg !7421

if.else389:                                       ; preds = %sw.bb384
  %type390 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 2, !dbg !7422
  store i16 11, i16* %type390, align 8, !dbg !7423
  br label %if.end391

if.end391:                                        ; preds = %if.else389, %if.then387
  %val392 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 3, !dbg !7424
  store i16 1, i16* %val392, align 2, !dbg !7425
  %196 = load %struct.wmWindow*, %struct.wmWindow** %win.addr, align 8, !dbg !7426
  call void @wm_event_add(%struct.wmWindow* %196, %struct.wmEvent* %event), !dbg !7427
  br label %sw.epilog423, !dbg !7428

sw.bb393:                                         ; preds = %entry
  %type394 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 2, !dbg !7429
  store i16 272, i16* %type394, align 8, !dbg !7431
  %custom = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 25, !dbg !7432
  store i16 2, i16* %custom, align 8, !dbg !7433
  %197 = load i8*, i8** %customdata.addr, align 8, !dbg !7434
  %customdata395 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 28, !dbg !7435
  store i8* %197, i8** %customdata395, align 8, !dbg !7436
  %val396 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 3, !dbg !7437
  store i16 0, i16* %val396, align 2, !dbg !7438
  %keymodifier397 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 21, !dbg !7439
  store i16 0, i16* %keymodifier397, align 8, !dbg !7440
  %198 = load %struct.wmWindow*, %struct.wmWindow** %win.addr, align 8, !dbg !7441
  call void @wm_event_add(%struct.wmWindow* %198, %struct.wmEvent* %event), !dbg !7442
  br label %sw.epilog423, !dbg !7443

sw.bb398:                                         ; preds = %entry
  %type399 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 2, !dbg !7444
  store i16 400, i16* %type399, align 8, !dbg !7446
  %val400 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 3, !dbg !7447
  store i16 0, i16* %val400, align 2, !dbg !7448
  %199 = load i8*, i8** %customdata.addr, align 8, !dbg !7449
  %200 = bitcast i8* %199 to %struct.GHOST_TEventNDOFMotionData*, !dbg !7449
  call void @attach_ndof_data(%struct.wmEvent* %event, %struct.GHOST_TEventNDOFMotionData* %200), !dbg !7450
  %201 = load %struct.wmWindow*, %struct.wmWindow** %win.addr, align 8, !dbg !7451
  call void @wm_event_add(%struct.wmWindow* %201, %struct.wmEvent* %event), !dbg !7452
  %202 = load i32, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 16), align 4, !dbg !7453
  %and401 = and i32 %202, 24, !dbg !7455
  %tobool402 = icmp ne i32 %and401, 0, !dbg !7455
  br i1 %tobool402, label %if.then403, label %if.end407, !dbg !7456

if.then403:                                       ; preds = %sw.bb398
  %x404 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 4, !dbg !7457
  %203 = load i32, i32* %x404, align 4, !dbg !7457
  %y405 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 5, !dbg !7458
  %204 = load i32, i32* %y405, align 8, !dbg !7458
  %call406 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @__func__.wm_event_add_ghostevent, i64 0, i64 0), i32 %203, i32 %204), !dbg !7459
  br label %if.end407, !dbg !7459

if.end407:                                        ; preds = %if.then403, %sw.bb398
  br label %sw.epilog423, !dbg !7460

sw.bb408:                                         ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.GHOST_TEventNDOFButtonData** %e, metadata !7461, metadata !DIExpression()), !dbg !7470
  %205 = load i8*, i8** %customdata.addr, align 8, !dbg !7471
  %206 = bitcast i8* %205 to %struct.GHOST_TEventNDOFButtonData*, !dbg !7471
  store %struct.GHOST_TEventNDOFButtonData* %206, %struct.GHOST_TEventNDOFButtonData** %e, align 8, !dbg !7470
  %207 = load %struct.GHOST_TEventNDOFButtonData*, %struct.GHOST_TEventNDOFButtonData** %e, align 8, !dbg !7472
  %button409 = getelementptr inbounds %struct.GHOST_TEventNDOFButtonData, %struct.GHOST_TEventNDOFButtonData* %207, i32 0, i32 1, !dbg !7473
  %208 = load i16, i16* %button409, align 4, !dbg !7473
  %conv410 = sext i16 %208 to i32, !dbg !7472
  %add = add nsw i32 400, %conv410, !dbg !7474
  %conv411 = trunc i32 %add to i16, !dbg !7475
  %type412 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 2, !dbg !7476
  store i16 %conv411, i16* %type412, align 8, !dbg !7477
  %209 = load %struct.GHOST_TEventNDOFButtonData*, %struct.GHOST_TEventNDOFButtonData** %e, align 8, !dbg !7478
  %action = getelementptr inbounds %struct.GHOST_TEventNDOFButtonData, %struct.GHOST_TEventNDOFButtonData* %209, i32 0, i32 0, !dbg !7479
  %210 = load i32, i32* %action, align 4, !dbg !7479
  switch i32 %210, label %sw.epilog417 [
    i32 0, label %sw.bb413
    i32 1, label %sw.bb415
  ], !dbg !7480

sw.bb413:                                         ; preds = %sw.bb408
  %val414 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 3, !dbg !7481
  store i16 1, i16* %val414, align 2, !dbg !7483
  br label %sw.epilog417, !dbg !7484

sw.bb415:                                         ; preds = %sw.bb408
  %val416 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 3, !dbg !7485
  store i16 2, i16* %val416, align 2, !dbg !7486
  br label %sw.epilog417, !dbg !7487

sw.epilog417:                                     ; preds = %sw.bb408, %sw.bb415, %sw.bb413
  %custom418 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 25, !dbg !7488
  store i16 0, i16* %custom418, align 8, !dbg !7489
  %customdata419 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 28, !dbg !7490
  store i8* null, i8** %customdata419, align 8, !dbg !7491
  %211 = load %struct.wmWindow*, %struct.wmWindow** %win.addr, align 8, !dbg !7492
  call void @wm_event_add(%struct.wmWindow* %211, %struct.wmEvent* %event), !dbg !7493
  br label %sw.epilog423, !dbg !7494

sw.bb420:                                         ; preds = %entry, %entry
  br label %sw.epilog423, !dbg !7495

sw.bb421:                                         ; preds = %entry
  %type422 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 2, !dbg !7496
  store i16 260, i16* %type422, align 8, !dbg !7498
  %212 = load %struct.wmWindow*, %struct.wmWindow** %win.addr, align 8, !dbg !7499
  call void @wm_event_add(%struct.wmWindow* %212, %struct.wmEvent* %event), !dbg !7500
  br label %sw.epilog423, !dbg !7501

sw.epilog423:                                     ; preds = %entry, %sw.bb421, %sw.bb420, %sw.epilog417, %if.end407, %sw.bb393, %if.end391, %if.end383, %if.end123, %sw.epilog, %if.end
  ret void, !dbg !7502
}

; Function Attrs: noinline nounwind uwtable
define internal void @copy_v2_v2_int(i32* %r, i32* %a) #0 !dbg !7503 {
entry:
  %r.addr = alloca i32*, align 8
  %a.addr = alloca i32*, align 8
  store i32* %r, i32** %r.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %r.addr, metadata !7508, metadata !DIExpression()), !dbg !7509
  store i32* %a, i32** %a.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %a.addr, metadata !7510, metadata !DIExpression()), !dbg !7511
  %0 = load i32*, i32** %a.addr, align 8, !dbg !7512
  %arrayidx = getelementptr inbounds i32, i32* %0, i64 0, !dbg !7512
  %1 = load i32, i32* %arrayidx, align 4, !dbg !7512
  %2 = load i32*, i32** %r.addr, align 8, !dbg !7513
  %arrayidx1 = getelementptr inbounds i32, i32* %2, i64 0, !dbg !7513
  store i32 %1, i32* %arrayidx1, align 4, !dbg !7514
  %3 = load i32*, i32** %a.addr, align 8, !dbg !7515
  %arrayidx2 = getelementptr inbounds i32, i32* %3, i64 1, !dbg !7515
  %4 = load i32, i32* %arrayidx2, align 4, !dbg !7515
  %5 = load i32*, i32** %r.addr, align 8, !dbg !7516
  %arrayidx3 = getelementptr inbounds i32, i32* %5, i64 1, !dbg !7516
  store i32 %4, i32* %arrayidx3, align 4, !dbg !7517
  ret void, !dbg !7518
}

; Function Attrs: noinline nounwind uwtable
define internal void @wm_event_add_mousemove(%struct.wmWindow* %win, %struct.wmEvent* %event) #0 !dbg !7519 {
entry:
  %win.addr = alloca %struct.wmWindow*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %event_last = alloca %struct.wmEvent*, align 8
  %event_new = alloca %struct.wmEvent*, align 8
  store %struct.wmWindow* %win, %struct.wmWindow** %win.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmWindow** %win.addr, metadata !7520, metadata !DIExpression()), !dbg !7521
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !7522, metadata !DIExpression()), !dbg !7523
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event_last, metadata !7524, metadata !DIExpression()), !dbg !7525
  %0 = load %struct.wmWindow*, %struct.wmWindow** %win.addr, align 8, !dbg !7526
  %queue = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %0, i32 0, i32 27, !dbg !7527
  %last = getelementptr inbounds %struct.ListBase, %struct.ListBase* %queue, i32 0, i32 1, !dbg !7528
  %1 = load i8*, i8** %last, align 8, !dbg !7528
  %2 = bitcast i8* %1 to %struct.wmEvent*, !dbg !7526
  store %struct.wmEvent* %2, %struct.wmEvent** %event_last, align 8, !dbg !7525
  %3 = load %struct.wmEvent*, %struct.wmEvent** %event_last, align 8, !dbg !7529
  %tobool = icmp ne %struct.wmEvent* %3, null, !dbg !7529
  br i1 %tobool, label %land.lhs.true, label %if.end, !dbg !7531

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.wmEvent*, %struct.wmEvent** %event_last, align 8, !dbg !7532
  %type = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %4, i32 0, i32 2, !dbg !7533
  %5 = load i16, i16* %type, align 8, !dbg !7533
  %conv = sext i16 %5 to i32, !dbg !7532
  %cmp = icmp eq i32 %conv, 4, !dbg !7534
  br i1 %cmp, label %if.then, label %if.end, !dbg !7535

if.then:                                          ; preds = %land.lhs.true
  %6 = load %struct.wmEvent*, %struct.wmEvent** %event_last, align 8, !dbg !7536
  %type2 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %6, i32 0, i32 2, !dbg !7537
  store i16 17, i16* %type2, align 8, !dbg !7538
  br label %if.end, !dbg !7536

if.end:                                           ; preds = %if.then, %land.lhs.true, %entry
  %7 = load %struct.wmWindow*, %struct.wmWindow** %win.addr, align 8, !dbg !7539
  %8 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7540
  call void @wm_event_add(%struct.wmWindow* %7, %struct.wmEvent* %8), !dbg !7541
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event_new, metadata !7542, metadata !DIExpression()), !dbg !7544
  %9 = load %struct.wmWindow*, %struct.wmWindow** %win.addr, align 8, !dbg !7545
  %queue3 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %9, i32 0, i32 27, !dbg !7546
  %last4 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %queue3, i32 0, i32 1, !dbg !7547
  %10 = load i8*, i8** %last4, align 8, !dbg !7547
  %11 = bitcast i8* %10 to %struct.wmEvent*, !dbg !7545
  store %struct.wmEvent* %11, %struct.wmEvent** %event_new, align 8, !dbg !7544
  %12 = load %struct.wmEvent*, %struct.wmEvent** %event_last, align 8, !dbg !7548
  %cmp5 = icmp eq %struct.wmEvent* %12, null, !dbg !7550
  br i1 %cmp5, label %if.then7, label %if.end8, !dbg !7551

if.then7:                                         ; preds = %if.end
  %13 = load %struct.wmWindow*, %struct.wmWindow** %win.addr, align 8, !dbg !7552
  %eventstate = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %13, i32 0, i32 21, !dbg !7554
  %14 = load %struct.wmEvent*, %struct.wmEvent** %eventstate, align 8, !dbg !7554
  store %struct.wmEvent* %14, %struct.wmEvent** %event_last, align 8, !dbg !7555
  br label %if.end8, !dbg !7556

if.end8:                                          ; preds = %if.then7, %if.end
  %15 = load %struct.wmEvent*, %struct.wmEvent** %event_new, align 8, !dbg !7557
  %prevx = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %15, i32 0, i32 12, !dbg !7558
  %16 = load %struct.wmEvent*, %struct.wmEvent** %event_last, align 8, !dbg !7559
  %x = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %16, i32 0, i32 4, !dbg !7560
  call void @copy_v2_v2_int(i32* %prevx, i32* %x), !dbg !7561
  ret void, !dbg !7562
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.wmWindow* @wm_event_cursor_other_windows(%struct.wmWindowManager* %wm, %struct.wmWindow* %win, %struct.wmEvent* %event) #0 !dbg !7563 {
entry:
  %retval = alloca %struct.wmWindow*, align 8
  %wm.addr = alloca %struct.wmWindowManager*, align 8
  %win.addr = alloca %struct.wmWindow*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %mx = alloca i32, align 4
  %my = alloca i32, align 4
  %owin = alloca %struct.wmWindow*, align 8
  %handler = alloca %struct.wmEventHandler*, align 8
  %posx32 = alloca i32, align 4
  %posy38 = alloca i32, align 4
  store %struct.wmWindowManager* %wm, %struct.wmWindowManager** %wm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmWindowManager** %wm.addr, metadata !7566, metadata !DIExpression()), !dbg !7567
  store %struct.wmWindow* %win, %struct.wmWindow** %win.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmWindow** %win.addr, metadata !7568, metadata !DIExpression()), !dbg !7569
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !7570, metadata !DIExpression()), !dbg !7571
  call void @llvm.dbg.declare(metadata i32* %mx, metadata !7572, metadata !DIExpression()), !dbg !7573
  %0 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7574
  %x = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %0, i32 0, i32 4, !dbg !7575
  %1 = load i32, i32* %x, align 4, !dbg !7575
  store i32 %1, i32* %mx, align 4, !dbg !7573
  call void @llvm.dbg.declare(metadata i32* %my, metadata !7576, metadata !DIExpression()), !dbg !7577
  %2 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7578
  %y = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %2, i32 0, i32 5, !dbg !7579
  %3 = load i32, i32* %y, align 8, !dbg !7579
  store i32 %3, i32* %my, align 4, !dbg !7577
  %4 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm.addr, align 8, !dbg !7580
  %windows = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %4, i32 0, i32 3, !dbg !7582
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %windows, i32 0, i32 0, !dbg !7583
  %5 = load i8*, i8** %first, align 8, !dbg !7583
  %6 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm.addr, align 8, !dbg !7584
  %windows1 = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %6, i32 0, i32 3, !dbg !7585
  %last = getelementptr inbounds %struct.ListBase, %struct.ListBase* %windows1, i32 0, i32 1, !dbg !7586
  %7 = load i8*, i8** %last, align 8, !dbg !7586
  %cmp = icmp eq i8* %5, %7, !dbg !7587
  br i1 %cmp, label %if.then, label %if.end, !dbg !7588

if.then:                                          ; preds = %entry
  store %struct.wmWindow* null, %struct.wmWindow** %retval, align 8, !dbg !7589
  br label %return, !dbg !7589

if.end:                                           ; preds = %entry
  %8 = load i32, i32* %mx, align 4, !dbg !7590
  %cmp2 = icmp slt i32 %8, 0, !dbg !7592
  br i1 %cmp2, label %if.then9, label %lor.lhs.false, !dbg !7593

lor.lhs.false:                                    ; preds = %if.end
  %9 = load i32, i32* %my, align 4, !dbg !7594
  %cmp3 = icmp slt i32 %9, 0, !dbg !7595
  br i1 %cmp3, label %if.then9, label %lor.lhs.false4, !dbg !7596

lor.lhs.false4:                                   ; preds = %lor.lhs.false
  %10 = load i32, i32* %mx, align 4, !dbg !7597
  %11 = load %struct.wmWindow*, %struct.wmWindow** %win.addr, align 8, !dbg !7598
  %call = call i32 @WM_window_pixels_x(%struct.wmWindow* %11), !dbg !7599
  %cmp5 = icmp sgt i32 %10, %call, !dbg !7600
  br i1 %cmp5, label %if.then9, label %lor.lhs.false6, !dbg !7601

lor.lhs.false6:                                   ; preds = %lor.lhs.false4
  %12 = load i32, i32* %my, align 4, !dbg !7602
  %13 = load %struct.wmWindow*, %struct.wmWindow** %win.addr, align 8, !dbg !7603
  %call7 = call i32 @WM_window_pixels_y(%struct.wmWindow* %13), !dbg !7604
  %add = add nsw i32 %call7, 30, !dbg !7605
  %cmp8 = icmp sgt i32 %12, %add, !dbg !7606
  br i1 %cmp8, label %if.then9, label %if.end80, !dbg !7607

if.then9:                                         ; preds = %lor.lhs.false6, %lor.lhs.false4, %lor.lhs.false, %if.end
  call void @llvm.dbg.declare(metadata %struct.wmWindow** %owin, metadata !7608, metadata !DIExpression()), !dbg !7610
  call void @llvm.dbg.declare(metadata %struct.wmEventHandler** %handler, metadata !7611, metadata !DIExpression()), !dbg !7612
  %14 = load %struct.wmWindow*, %struct.wmWindow** %win.addr, align 8, !dbg !7613
  %modalhandlers = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %14, i32 0, i32 29, !dbg !7615
  %first10 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %modalhandlers, i32 0, i32 0, !dbg !7616
  %15 = load i8*, i8** %first10, align 8, !dbg !7616
  %16 = bitcast i8* %15 to %struct.wmEventHandler*, !dbg !7613
  store %struct.wmEventHandler* %16, %struct.wmEventHandler** %handler, align 8, !dbg !7617
  br label %for.cond, !dbg !7618

for.cond:                                         ; preds = %for.inc, %if.then9
  %17 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !7619
  %tobool = icmp ne %struct.wmEventHandler* %17, null, !dbg !7621
  br i1 %tobool, label %for.body, label %for.end, !dbg !7621

for.body:                                         ; preds = %for.cond
  %18 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !7622
  %ui_handle = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %18, i32 0, i32 10, !dbg !7624
  %19 = load i32 (%struct.bContext*, %struct.wmEvent*, i8*)*, i32 (%struct.bContext*, %struct.wmEvent*, i8*)** %ui_handle, align 8, !dbg !7624
  %tobool11 = icmp ne i32 (%struct.bContext*, %struct.wmEvent*, i8*)* %19, null, !dbg !7622
  br i1 %tobool11, label %if.then14, label %lor.lhs.false12, !dbg !7625

lor.lhs.false12:                                  ; preds = %for.body
  %20 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !7626
  %op = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %20, i32 0, i32 7, !dbg !7627
  %21 = load %struct.wmOperator*, %struct.wmOperator** %op, align 8, !dbg !7627
  %tobool13 = icmp ne %struct.wmOperator* %21, null, !dbg !7626
  br i1 %tobool13, label %if.then14, label %if.end15, !dbg !7628

if.then14:                                        ; preds = %lor.lhs.false12, %for.body
  store %struct.wmWindow* null, %struct.wmWindow** %retval, align 8, !dbg !7629
  br label %return, !dbg !7629

if.end15:                                         ; preds = %lor.lhs.false12
  br label %for.inc, !dbg !7627

for.inc:                                          ; preds = %if.end15
  %22 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !7630
  %next = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %22, i32 0, i32 0, !dbg !7631
  %23 = load %struct.wmEventHandler*, %struct.wmEventHandler** %next, align 8, !dbg !7631
  store %struct.wmEventHandler* %23, %struct.wmEventHandler** %handler, align 8, !dbg !7632
  br label %for.cond, !dbg !7633, !llvm.loop !7634

for.end:                                          ; preds = %for.cond
  %24 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !7636
  %25 = load %struct.wmWindow*, %struct.wmWindow** %win.addr, align 8, !dbg !7637
  %posx = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %25, i32 0, i32 6, !dbg !7638
  %26 = load i16, i16* %posx, align 8, !dbg !7638
  %conv = sext i16 %26 to i32, !dbg !7637
  %conv16 = sitofp i32 %conv to float, !dbg !7637
  %mul = fmul float %24, %conv16, !dbg !7639
  %conv17 = fptosi float %mul to i32, !dbg !7640
  %27 = load i32, i32* %mx, align 4, !dbg !7641
  %add18 = add nsw i32 %27, %conv17, !dbg !7641
  store i32 %add18, i32* %mx, align 4, !dbg !7641
  %28 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !7642
  %29 = load %struct.wmWindow*, %struct.wmWindow** %win.addr, align 8, !dbg !7643
  %posy = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %29, i32 0, i32 7, !dbg !7644
  %30 = load i16, i16* %posy, align 2, !dbg !7644
  %conv19 = sext i16 %30 to i32, !dbg !7643
  %conv20 = sitofp i32 %conv19 to float, !dbg !7643
  %mul21 = fmul float %28, %conv20, !dbg !7645
  %conv22 = fptosi float %mul21 to i32, !dbg !7646
  %31 = load i32, i32* %my, align 4, !dbg !7647
  %add23 = add nsw i32 %31, %conv22, !dbg !7647
  store i32 %add23, i32* %my, align 4, !dbg !7647
  %32 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm.addr, align 8, !dbg !7648
  %windows24 = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %32, i32 0, i32 3, !dbg !7650
  %first25 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %windows24, i32 0, i32 0, !dbg !7651
  %33 = load i8*, i8** %first25, align 8, !dbg !7651
  %34 = bitcast i8* %33 to %struct.wmWindow*, !dbg !7648
  store %struct.wmWindow* %34, %struct.wmWindow** %owin, align 8, !dbg !7652
  br label %for.cond26, !dbg !7653

for.cond26:                                       ; preds = %for.inc77, %for.end
  %35 = load %struct.wmWindow*, %struct.wmWindow** %owin, align 8, !dbg !7654
  %tobool27 = icmp ne %struct.wmWindow* %35, null, !dbg !7656
  br i1 %tobool27, label %for.body28, label %for.end79, !dbg !7656

for.body28:                                       ; preds = %for.cond26
  %36 = load %struct.wmWindow*, %struct.wmWindow** %owin, align 8, !dbg !7657
  %37 = load %struct.wmWindow*, %struct.wmWindow** %win.addr, align 8, !dbg !7660
  %cmp29 = icmp ne %struct.wmWindow* %36, %37, !dbg !7661
  br i1 %cmp29, label %if.then31, label %if.end76, !dbg !7662

if.then31:                                        ; preds = %for.body28
  call void @llvm.dbg.declare(metadata i32* %posx32, metadata !7663, metadata !DIExpression()), !dbg !7665
  %38 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !7666
  %39 = load %struct.wmWindow*, %struct.wmWindow** %owin, align 8, !dbg !7667
  %posx33 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %39, i32 0, i32 6, !dbg !7668
  %40 = load i16, i16* %posx33, align 8, !dbg !7668
  %conv34 = sext i16 %40 to i32, !dbg !7667
  %conv35 = sitofp i32 %conv34 to float, !dbg !7667
  %mul36 = fmul float %38, %conv35, !dbg !7669
  %conv37 = fptosi float %mul36 to i32, !dbg !7670
  store i32 %conv37, i32* %posx32, align 4, !dbg !7665
  call void @llvm.dbg.declare(metadata i32* %posy38, metadata !7671, metadata !DIExpression()), !dbg !7672
  %41 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !7673
  %42 = load %struct.wmWindow*, %struct.wmWindow** %owin, align 8, !dbg !7674
  %posy39 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %42, i32 0, i32 7, !dbg !7675
  %43 = load i16, i16* %posy39, align 2, !dbg !7675
  %conv40 = sext i16 %43 to i32, !dbg !7674
  %conv41 = sitofp i32 %conv40 to float, !dbg !7674
  %mul42 = fmul float %41, %conv41, !dbg !7676
  %conv43 = fptosi float %mul42 to i32, !dbg !7677
  store i32 %conv43, i32* %posy38, align 4, !dbg !7672
  %44 = load i32, i32* %mx, align 4, !dbg !7678
  %45 = load i32, i32* %posx32, align 4, !dbg !7680
  %sub = sub nsw i32 %44, %45, !dbg !7681
  %cmp44 = icmp sge i32 %sub, 0, !dbg !7682
  br i1 %cmp44, label %land.lhs.true, label %if.end75, !dbg !7683

land.lhs.true:                                    ; preds = %if.then31
  %46 = load %struct.wmWindow*, %struct.wmWindow** %owin, align 8, !dbg !7684
  %posy46 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %46, i32 0, i32 7, !dbg !7685
  %47 = load i16, i16* %posy46, align 2, !dbg !7685
  %conv47 = sext i16 %47 to i32, !dbg !7684
  %cmp48 = icmp sge i32 %conv47, 0, !dbg !7686
  br i1 %cmp48, label %land.lhs.true50, label %if.end75, !dbg !7687

land.lhs.true50:                                  ; preds = %land.lhs.true
  %48 = load i32, i32* %mx, align 4, !dbg !7688
  %49 = load i32, i32* %posx32, align 4, !dbg !7689
  %sub51 = sub nsw i32 %48, %49, !dbg !7690
  %50 = load %struct.wmWindow*, %struct.wmWindow** %owin, align 8, !dbg !7691
  %call52 = call i32 @WM_window_pixels_x(%struct.wmWindow* %50), !dbg !7692
  %cmp53 = icmp sle i32 %sub51, %call52, !dbg !7693
  br i1 %cmp53, label %land.lhs.true55, label %if.end75, !dbg !7694

land.lhs.true55:                                  ; preds = %land.lhs.true50
  %51 = load i32, i32* %my, align 4, !dbg !7695
  %52 = load i32, i32* %posy38, align 4, !dbg !7696
  %sub56 = sub nsw i32 %51, %52, !dbg !7697
  %53 = load %struct.wmWindow*, %struct.wmWindow** %owin, align 8, !dbg !7698
  %call57 = call i32 @WM_window_pixels_y(%struct.wmWindow* %53), !dbg !7699
  %cmp58 = icmp sle i32 %sub56, %call57, !dbg !7700
  br i1 %cmp58, label %if.then60, label %if.end75, !dbg !7701

if.then60:                                        ; preds = %land.lhs.true55
  %54 = load i32, i32* %mx, align 4, !dbg !7702
  %55 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !7704
  %56 = load %struct.wmWindow*, %struct.wmWindow** %owin, align 8, !dbg !7705
  %posx61 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %56, i32 0, i32 6, !dbg !7706
  %57 = load i16, i16* %posx61, align 8, !dbg !7706
  %conv62 = sext i16 %57 to i32, !dbg !7705
  %conv63 = sitofp i32 %conv62 to float, !dbg !7705
  %mul64 = fmul float %55, %conv63, !dbg !7707
  %conv65 = fptosi float %mul64 to i32, !dbg !7708
  %sub66 = sub nsw i32 %54, %conv65, !dbg !7709
  %58 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7710
  %x67 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %58, i32 0, i32 4, !dbg !7711
  store i32 %sub66, i32* %x67, align 4, !dbg !7712
  %59 = load i32, i32* %my, align 4, !dbg !7713
  %60 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 106), align 4, !dbg !7714
  %61 = load %struct.wmWindow*, %struct.wmWindow** %owin, align 8, !dbg !7715
  %posy68 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %61, i32 0, i32 7, !dbg !7716
  %62 = load i16, i16* %posy68, align 2, !dbg !7716
  %conv69 = sext i16 %62 to i32, !dbg !7715
  %conv70 = sitofp i32 %conv69 to float, !dbg !7715
  %mul71 = fmul float %60, %conv70, !dbg !7717
  %conv72 = fptosi float %mul71 to i32, !dbg !7718
  %sub73 = sub nsw i32 %59, %conv72, !dbg !7719
  %63 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7720
  %y74 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %63, i32 0, i32 5, !dbg !7721
  store i32 %sub73, i32* %y74, align 8, !dbg !7722
  %64 = load %struct.wmWindow*, %struct.wmWindow** %owin, align 8, !dbg !7723
  store %struct.wmWindow* %64, %struct.wmWindow** %retval, align 8, !dbg !7724
  br label %return, !dbg !7724

if.end75:                                         ; preds = %land.lhs.true55, %land.lhs.true50, %land.lhs.true, %if.then31
  br label %if.end76, !dbg !7725

if.end76:                                         ; preds = %if.end75, %for.body28
  br label %for.inc77, !dbg !7726

for.inc77:                                        ; preds = %if.end76
  %65 = load %struct.wmWindow*, %struct.wmWindow** %owin, align 8, !dbg !7727
  %next78 = getelementptr inbounds %struct.wmWindow, %struct.wmWindow* %65, i32 0, i32 0, !dbg !7728
  %66 = load %struct.wmWindow*, %struct.wmWindow** %next78, align 8, !dbg !7728
  store %struct.wmWindow* %66, %struct.wmWindow** %owin, align 8, !dbg !7729
  br label %for.cond26, !dbg !7730, !llvm.loop !7731

for.end79:                                        ; preds = %for.cond26
  br label %if.end80, !dbg !7733

if.end80:                                         ; preds = %for.end79, %lor.lhs.false6
  store %struct.wmWindow* null, %struct.wmWindow** %retval, align 8, !dbg !7734
  br label %return, !dbg !7734

return:                                           ; preds = %if.end80, %if.then60, %if.then14, %if.then
  %67 = load %struct.wmWindow*, %struct.wmWindow** %retval, align 8, !dbg !7735
  ret %struct.wmWindow* %67, !dbg !7735
}

; Function Attrs: noinline nounwind uwtable
define internal void @wm_eventemulation(%struct.wmEvent* %event) #0 !dbg !2557 {
entry:
  %event.addr = alloca %struct.wmEvent*, align 8
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !7736, metadata !DIExpression()), !dbg !7737
  %0 = load i32, i32* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 2), align 8, !dbg !7738
  %and = and i32 %0, 4096, !dbg !7740
  %tobool = icmp ne i32 %and, 0, !dbg !7740
  br i1 %tobool, label %if.then, label %if.end23, !dbg !7741

if.then:                                          ; preds = %entry
  %1 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7742
  %type = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %1, i32 0, i32 2, !dbg !7745
  %2 = load i16, i16* %type, align 8, !dbg !7745
  %conv = sext i16 %2 to i32, !dbg !7742
  %cmp = icmp eq i32 %conv, 1, !dbg !7746
  br i1 %cmp, label %if.then2, label %if.end22, !dbg !7747

if.then2:                                         ; preds = %if.then
  %3 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7748
  %val = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %3, i32 0, i32 3, !dbg !7751
  %4 = load i16, i16* %val, align 2, !dbg !7751
  %conv3 = sext i16 %4 to i32, !dbg !7748
  %cmp4 = icmp eq i32 %conv3, 1, !dbg !7752
  br i1 %cmp4, label %land.lhs.true, label %if.else, !dbg !7753

land.lhs.true:                                    ; preds = %if.then2
  %5 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7754
  %alt = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %5, i32 0, i32 19, !dbg !7755
  %6 = load i16, i16* %alt, align 4, !dbg !7755
  %conv6 = sext i16 %6 to i32, !dbg !7754
  %tobool7 = icmp ne i32 %conv6, 0, !dbg !7754
  br i1 %tobool7, label %if.then8, label %if.else, !dbg !7756

if.then8:                                         ; preds = %land.lhs.true
  %7 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7757
  %type9 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %7, i32 0, i32 2, !dbg !7759
  store i16 2, i16* %type9, align 8, !dbg !7760
  %8 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7761
  %alt10 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %8, i32 0, i32 19, !dbg !7762
  store i16 0, i16* %alt10, align 4, !dbg !7763
  store i32 1, i32* @wm_eventemulation.mmb_emulated, align 4, !dbg !7764
  br label %if.end21, !dbg !7765

if.else:                                          ; preds = %land.lhs.true, %if.then2
  %9 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7766
  %val11 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %9, i32 0, i32 3, !dbg !7768
  %10 = load i16, i16* %val11, align 2, !dbg !7768
  %conv12 = sext i16 %10 to i32, !dbg !7766
  %cmp13 = icmp eq i32 %conv12, 2, !dbg !7769
  br i1 %cmp13, label %if.then15, label %if.end20, !dbg !7770

if.then15:                                        ; preds = %if.else
  %11 = load i32, i32* @wm_eventemulation.mmb_emulated, align 4, !dbg !7771
  %tobool16 = icmp ne i32 %11, 0, !dbg !7771
  br i1 %tobool16, label %if.then17, label %if.end, !dbg !7774

if.then17:                                        ; preds = %if.then15
  %12 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7775
  %type18 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %12, i32 0, i32 2, !dbg !7777
  store i16 2, i16* %type18, align 8, !dbg !7778
  %13 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7779
  %alt19 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %13, i32 0, i32 19, !dbg !7780
  store i16 0, i16* %alt19, align 4, !dbg !7781
  br label %if.end, !dbg !7782

if.end:                                           ; preds = %if.then17, %if.then15
  store i32 0, i32* @wm_eventemulation.mmb_emulated, align 4, !dbg !7783
  br label %if.end20, !dbg !7784

if.end20:                                         ; preds = %if.end, %if.else
  br label %if.end21

if.end21:                                         ; preds = %if.end20, %if.then8
  br label %if.end22, !dbg !7785

if.end22:                                         ; preds = %if.end21, %if.then
  br label %if.end23, !dbg !7786

if.end23:                                         ; preds = %if.end22, %entry
  %14 = load i32, i32* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 2), align 8, !dbg !7787
  %and24 = and i32 %14, 8192, !dbg !7789
  %tobool25 = icmp ne i32 %and24, 0, !dbg !7789
  br i1 %tobool25, label %if.then26, label %if.end54, !dbg !7790

if.then26:                                        ; preds = %if.end23
  %15 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7791
  %type27 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %15, i32 0, i32 2, !dbg !7793
  %16 = load i16, i16* %type27, align 8, !dbg !7793
  %conv28 = sext i16 %16 to i32, !dbg !7791
  switch i32 %conv28, label %sw.epilog [
    i32 48, label %sw.bb
    i32 49, label %sw.bb30
    i32 50, label %sw.bb32
    i32 51, label %sw.bb34
    i32 52, label %sw.bb36
    i32 53, label %sw.bb38
    i32 54, label %sw.bb40
    i32 55, label %sw.bb42
    i32 56, label %sw.bb44
    i32 57, label %sw.bb46
    i32 230, label %sw.bb48
    i32 234, label %sw.bb50
    i32 233, label %sw.bb52
  ], !dbg !7794

sw.bb:                                            ; preds = %if.then26
  %17 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7795
  %type29 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %17, i32 0, i32 2, !dbg !7797
  store i16 150, i16* %type29, align 8, !dbg !7798
  br label %sw.epilog, !dbg !7799

sw.bb30:                                          ; preds = %if.then26
  %18 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7800
  %type31 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %18, i32 0, i32 2, !dbg !7801
  store i16 151, i16* %type31, align 8, !dbg !7802
  br label %sw.epilog, !dbg !7803

sw.bb32:                                          ; preds = %if.then26
  %19 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7804
  %type33 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %19, i32 0, i32 2, !dbg !7805
  store i16 152, i16* %type33, align 8, !dbg !7806
  br label %sw.epilog, !dbg !7807

sw.bb34:                                          ; preds = %if.then26
  %20 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7808
  %type35 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %20, i32 0, i32 2, !dbg !7809
  store i16 153, i16* %type35, align 8, !dbg !7810
  br label %sw.epilog, !dbg !7811

sw.bb36:                                          ; preds = %if.then26
  %21 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7812
  %type37 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %21, i32 0, i32 2, !dbg !7813
  store i16 154, i16* %type37, align 8, !dbg !7814
  br label %sw.epilog, !dbg !7815

sw.bb38:                                          ; preds = %if.then26
  %22 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7816
  %type39 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %22, i32 0, i32 2, !dbg !7817
  store i16 155, i16* %type39, align 8, !dbg !7818
  br label %sw.epilog, !dbg !7819

sw.bb40:                                          ; preds = %if.then26
  %23 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7820
  %type41 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %23, i32 0, i32 2, !dbg !7821
  store i16 156, i16* %type41, align 8, !dbg !7822
  br label %sw.epilog, !dbg !7823

sw.bb42:                                          ; preds = %if.then26
  %24 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7824
  %type43 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %24, i32 0, i32 2, !dbg !7825
  store i16 157, i16* %type43, align 8, !dbg !7826
  br label %sw.epilog, !dbg !7827

sw.bb44:                                          ; preds = %if.then26
  %25 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7828
  %type45 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %25, i32 0, i32 2, !dbg !7829
  store i16 158, i16* %type45, align 8, !dbg !7830
  br label %sw.epilog, !dbg !7831

sw.bb46:                                          ; preds = %if.then26
  %26 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7832
  %type47 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %26, i32 0, i32 2, !dbg !7833
  store i16 159, i16* %type47, align 8, !dbg !7834
  br label %sw.epilog, !dbg !7835

sw.bb48:                                          ; preds = %if.then26
  %27 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7836
  %type49 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %27, i32 0, i32 2, !dbg !7837
  store i16 162, i16* %type49, align 8, !dbg !7838
  br label %sw.epilog, !dbg !7839

sw.bb50:                                          ; preds = %if.then26
  %28 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7840
  %type51 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %28, i32 0, i32 2, !dbg !7841
  store i16 164, i16* %type51, align 8, !dbg !7842
  br label %sw.epilog, !dbg !7843

sw.bb52:                                          ; preds = %if.then26
  %29 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7844
  %type53 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %29, i32 0, i32 2, !dbg !7845
  store i16 161, i16* %type53, align 8, !dbg !7846
  br label %sw.epilog, !dbg !7847

sw.epilog:                                        ; preds = %if.then26, %sw.bb52, %sw.bb50, %sw.bb48, %sw.bb46, %sw.bb44, %sw.bb42, %sw.bb40, %sw.bb38, %sw.bb36, %sw.bb34, %sw.bb32, %sw.bb30, %sw.bb
  br label %if.end54, !dbg !7848

if.end54:                                         ; preds = %sw.epilog, %if.end23
  ret void, !dbg !7849
}

declare dso_local void @wm_get_cursor_position(%struct.wmWindow*, i32*, i32*) #3

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @wm_event_is_double_click(%struct.wmEvent* %event, %struct.wmEvent* %event_state) #0 !dbg !7850 {
entry:
  %retval = alloca i8, align 1
  %event.addr = alloca %struct.wmEvent*, align 8
  %event_state.addr = alloca %struct.wmEvent*, align 8
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !7853, metadata !DIExpression()), !dbg !7854
  store %struct.wmEvent* %event_state, %struct.wmEvent** %event_state.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event_state.addr, metadata !7855, metadata !DIExpression()), !dbg !7856
  %0 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7857
  %type = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %0, i32 0, i32 2, !dbg !7859
  %1 = load i16, i16* %type, align 8, !dbg !7859
  %conv = sext i16 %1 to i32, !dbg !7857
  %2 = load %struct.wmEvent*, %struct.wmEvent** %event_state.addr, align 8, !dbg !7860
  %prevtype = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %2, i32 0, i32 10, !dbg !7861
  %3 = load i16, i16* %prevtype, align 4, !dbg !7861
  %conv1 = sext i16 %3 to i32, !dbg !7860
  %cmp = icmp eq i32 %conv, %conv1, !dbg !7862
  br i1 %cmp, label %land.lhs.true, label %if.end56, !dbg !7863

land.lhs.true:                                    ; preds = %entry
  %4 = load %struct.wmEvent*, %struct.wmEvent** %event_state.addr, align 8, !dbg !7864
  %prevval = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %4, i32 0, i32 11, !dbg !7865
  %5 = load i16, i16* %prevval, align 2, !dbg !7865
  %conv3 = sext i16 %5 to i32, !dbg !7864
  %cmp4 = icmp eq i32 %conv3, 2, !dbg !7866
  br i1 %cmp4, label %land.lhs.true6, label %if.end56, !dbg !7867

land.lhs.true6:                                   ; preds = %land.lhs.true
  %6 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7868
  %val = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %6, i32 0, i32 3, !dbg !7869
  %7 = load i16, i16* %val, align 2, !dbg !7869
  %conv7 = sext i16 %7 to i32, !dbg !7868
  %cmp8 = icmp eq i32 %conv7, 1, !dbg !7870
  br i1 %cmp8, label %if.then, label %if.end56, !dbg !7871

if.then:                                          ; preds = %land.lhs.true6
  %8 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7872
  %type10 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %8, i32 0, i32 2, !dbg !7872
  %9 = load i16, i16* %type10, align 8, !dbg !7872
  %conv11 = sext i16 %9 to i32, !dbg !7872
  %cmp12 = icmp sge i32 %conv11, 1, !dbg !7872
  br i1 %cmp12, label %land.rhs, label %land.end, !dbg !7872

land.rhs:                                         ; preds = %if.then
  %10 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7872
  %type14 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %10, i32 0, i32 2, !dbg !7872
  %11 = load i16, i16* %type14, align 8, !dbg !7872
  %conv15 = sext i16 %11 to i32, !dbg !7872
  %cmp16 = icmp sle i32 %conv15, 19, !dbg !7872
  br label %land.end

land.end:                                         ; preds = %land.rhs, %if.then
  %12 = phi i1 [ false, %if.then ], [ %cmp16, %land.rhs ], !dbg !7875
  %land.ext = zext i1 %12 to i32, !dbg !7872
  %cmp18 = icmp eq i32 %land.ext, 0, !dbg !7876
  br i1 %cmp18, label %if.then48, label %lor.lhs.false, !dbg !7877

lor.lhs.false:                                    ; preds = %land.end
  %13 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7878
  %x = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %13, i32 0, i32 4, !dbg !7878
  %14 = load i32, i32* %x, align 4, !dbg !7878
  %15 = load %struct.wmEvent*, %struct.wmEvent** %event_state.addr, align 8, !dbg !7878
  %prevclickx = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %15, i32 0, i32 15, !dbg !7878
  %16 = load i32, i32* %prevclickx, align 8, !dbg !7878
  %sub = sub nsw i32 %14, %16, !dbg !7878
  %cmp20 = icmp slt i32 %sub, 0, !dbg !7878
  br i1 %cmp20, label %cond.true, label %cond.false, !dbg !7878

cond.true:                                        ; preds = %lor.lhs.false
  %17 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7878
  %x22 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %17, i32 0, i32 4, !dbg !7878
  %18 = load i32, i32* %x22, align 4, !dbg !7878
  %19 = load %struct.wmEvent*, %struct.wmEvent** %event_state.addr, align 8, !dbg !7878
  %prevclickx23 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %19, i32 0, i32 15, !dbg !7878
  %20 = load i32, i32* %prevclickx23, align 8, !dbg !7878
  %sub24 = sub nsw i32 %18, %20, !dbg !7878
  %sub25 = sub nsw i32 0, %sub24, !dbg !7878
  br label %cond.end, !dbg !7878

cond.false:                                       ; preds = %lor.lhs.false
  %21 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7878
  %x26 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %21, i32 0, i32 4, !dbg !7878
  %22 = load i32, i32* %x26, align 4, !dbg !7878
  %23 = load %struct.wmEvent*, %struct.wmEvent** %event_state.addr, align 8, !dbg !7878
  %prevclickx27 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %23, i32 0, i32 15, !dbg !7878
  %24 = load i32, i32* %prevclickx27, align 8, !dbg !7878
  %sub28 = sub nsw i32 %22, %24, !dbg !7878
  br label %cond.end, !dbg !7878

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %sub25, %cond.true ], [ %sub28, %cond.false ], !dbg !7878
  %cmp29 = icmp sle i32 %cond, 2, !dbg !7879
  br i1 %cmp29, label %land.lhs.true31, label %if.end55, !dbg !7880

land.lhs.true31:                                  ; preds = %cond.end
  %25 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7881
  %y = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %25, i32 0, i32 5, !dbg !7881
  %26 = load i32, i32* %y, align 8, !dbg !7881
  %27 = load %struct.wmEvent*, %struct.wmEvent** %event_state.addr, align 8, !dbg !7881
  %prevclicky = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %27, i32 0, i32 16, !dbg !7881
  %28 = load i32, i32* %prevclicky, align 4, !dbg !7881
  %sub32 = sub nsw i32 %26, %28, !dbg !7881
  %cmp33 = icmp slt i32 %sub32, 0, !dbg !7881
  br i1 %cmp33, label %cond.true35, label %cond.false40, !dbg !7881

cond.true35:                                      ; preds = %land.lhs.true31
  %29 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7881
  %y36 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %29, i32 0, i32 5, !dbg !7881
  %30 = load i32, i32* %y36, align 8, !dbg !7881
  %31 = load %struct.wmEvent*, %struct.wmEvent** %event_state.addr, align 8, !dbg !7881
  %prevclicky37 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %31, i32 0, i32 16, !dbg !7881
  %32 = load i32, i32* %prevclicky37, align 4, !dbg !7881
  %sub38 = sub nsw i32 %30, %32, !dbg !7881
  %sub39 = sub nsw i32 0, %sub38, !dbg !7881
  br label %cond.end44, !dbg !7881

cond.false40:                                     ; preds = %land.lhs.true31
  %33 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !7881
  %y41 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %33, i32 0, i32 5, !dbg !7881
  %34 = load i32, i32* %y41, align 8, !dbg !7881
  %35 = load %struct.wmEvent*, %struct.wmEvent** %event_state.addr, align 8, !dbg !7881
  %prevclicky42 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %35, i32 0, i32 16, !dbg !7881
  %36 = load i32, i32* %prevclicky42, align 4, !dbg !7881
  %sub43 = sub nsw i32 %34, %36, !dbg !7881
  br label %cond.end44, !dbg !7881

cond.end44:                                       ; preds = %cond.false40, %cond.true35
  %cond45 = phi i32 [ %sub39, %cond.true35 ], [ %sub43, %cond.false40 ], !dbg !7881
  %cmp46 = icmp sle i32 %cond45, 2, !dbg !7882
  br i1 %cmp46, label %if.then48, label %if.end55, !dbg !7883

if.then48:                                        ; preds = %cond.end44, %land.end
  %call = call double @PIL_check_seconds_timer(), !dbg !7884
  %37 = load %struct.wmEvent*, %struct.wmEvent** %event_state.addr, align 8, !dbg !7887
  %prevclicktime = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %37, i32 0, i32 14, !dbg !7888
  %38 = load double, double* %prevclicktime, align 8, !dbg !7888
  %sub49 = fsub double %call, %38, !dbg !7889
  %mul = fmul double %sub49, 1.000000e+03, !dbg !7890
  %39 = load i16, i16* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 19), align 2, !dbg !7891
  %conv50 = sext i16 %39 to i32, !dbg !7892
  %conv51 = sitofp i32 %conv50 to double, !dbg !7892
  %cmp52 = fcmp olt double %mul, %conv51, !dbg !7893
  br i1 %cmp52, label %if.then54, label %if.end, !dbg !7894

if.then54:                                        ; preds = %if.then48
  store i8 1, i8* %retval, align 1, !dbg !7895
  br label %return, !dbg !7895

if.end:                                           ; preds = %if.then48
  br label %if.end55, !dbg !7897

if.end55:                                         ; preds = %if.end, %cond.end44, %cond.end
  br label %if.end56, !dbg !7898

if.end56:                                         ; preds = %if.end55, %land.lhs.true6, %land.lhs.true, %entry
  store i8 0, i8* %retval, align 1, !dbg !7899
  br label %return, !dbg !7899

return:                                           ; preds = %if.end56, %if.then54
  %40 = load i8, i8* %retval, align 1, !dbg !7900
  ret i8 %40, !dbg !7900
}

declare dso_local double @PIL_check_seconds_timer() #3

; Function Attrs: noinline nounwind uwtable
define internal i32 @convert_key(i32 %key) #0 !dbg !7901 {
entry:
  %retval = alloca i32, align 4
  %key.addr = alloca i32, align 4
  store i32 %key, i32* %key.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %key.addr, metadata !7904, metadata !DIExpression()), !dbg !7905
  %0 = load i32, i32* %key.addr, align 4, !dbg !7906
  %cmp = icmp sge i32 %0, 65, !dbg !7908
  br i1 %cmp, label %land.lhs.true, label %if.else, !dbg !7909

land.lhs.true:                                    ; preds = %entry
  %1 = load i32, i32* %key.addr, align 4, !dbg !7910
  %cmp1 = icmp sle i32 %1, 90, !dbg !7911
  br i1 %cmp1, label %if.then, label %if.else, !dbg !7912

if.then:                                          ; preds = %land.lhs.true
  %2 = load i32, i32* %key.addr, align 4, !dbg !7913
  %sub = sub nsw i32 %2, 65, !dbg !7915
  %add = add nsw i32 97, %sub, !dbg !7916
  store i32 %add, i32* %retval, align 4, !dbg !7917
  br label %return, !dbg !7917

if.else:                                          ; preds = %land.lhs.true, %entry
  %3 = load i32, i32* %key.addr, align 4, !dbg !7918
  %cmp2 = icmp sge i32 %3, 48, !dbg !7920
  br i1 %cmp2, label %land.lhs.true3, label %if.else8, !dbg !7921

land.lhs.true3:                                   ; preds = %if.else
  %4 = load i32, i32* %key.addr, align 4, !dbg !7922
  %cmp4 = icmp sle i32 %4, 57, !dbg !7923
  br i1 %cmp4, label %if.then5, label %if.else8, !dbg !7924

if.then5:                                         ; preds = %land.lhs.true3
  %5 = load i32, i32* %key.addr, align 4, !dbg !7925
  %sub6 = sub nsw i32 %5, 48, !dbg !7927
  %add7 = add nsw i32 48, %sub6, !dbg !7928
  store i32 %add7, i32* %retval, align 4, !dbg !7929
  br label %return, !dbg !7929

if.else8:                                         ; preds = %land.lhs.true3, %if.else
  %6 = load i32, i32* %key.addr, align 4, !dbg !7930
  %cmp9 = icmp sge i32 %6, 279, !dbg !7932
  br i1 %cmp9, label %land.lhs.true10, label %if.else15, !dbg !7933

land.lhs.true10:                                  ; preds = %if.else8
  %7 = load i32, i32* %key.addr, align 4, !dbg !7934
  %cmp11 = icmp sle i32 %7, 288, !dbg !7935
  br i1 %cmp11, label %if.then12, label %if.else15, !dbg !7936

if.then12:                                        ; preds = %land.lhs.true10
  %8 = load i32, i32* %key.addr, align 4, !dbg !7937
  %sub13 = sub nsw i32 %8, 279, !dbg !7939
  %add14 = add nsw i32 150, %sub13, !dbg !7940
  store i32 %add14, i32* %retval, align 4, !dbg !7941
  br label %return, !dbg !7941

if.else15:                                        ; preds = %land.lhs.true10, %if.else8
  %9 = load i32, i32* %key.addr, align 4, !dbg !7942
  %cmp16 = icmp sge i32 %9, 295, !dbg !7944
  br i1 %cmp16, label %land.lhs.true17, label %if.else22, !dbg !7945

land.lhs.true17:                                  ; preds = %if.else15
  %10 = load i32, i32* %key.addr, align 4, !dbg !7946
  %cmp18 = icmp sle i32 %10, 313, !dbg !7947
  br i1 %cmp18, label %if.then19, label %if.else22, !dbg !7948

if.then19:                                        ; preds = %land.lhs.true17
  %11 = load i32, i32* %key.addr, align 4, !dbg !7949
  %sub20 = sub nsw i32 %11, 295, !dbg !7951
  %add21 = add nsw i32 300, %sub20, !dbg !7952
  store i32 %add21, i32* %retval, align 4, !dbg !7953
  br label %return, !dbg !7953

if.else22:                                        ; preds = %land.lhs.true17, %if.else15
  %12 = load i32, i32* %key.addr, align 4, !dbg !7954
  switch i32 %12, label %sw.default [
    i32 0, label %sw.bb
    i32 1, label %sw.bb23
    i32 2, label %sw.bb24
    i32 3, label %sw.bb25
    i32 13, label %sw.bb26
    i32 27, label %sw.bb27
    i32 32, label %sw.bb28
    i32 39, label %sw.bb29
    i32 44, label %sw.bb30
    i32 45, label %sw.bb31
    i32 46, label %sw.bb32
    i32 47, label %sw.bb33
    i32 59, label %sw.bb34
    i32 61, label %sw.bb35
    i32 91, label %sw.bb36
    i32 93, label %sw.bb37
    i32 92, label %sw.bb38
    i32 96, label %sw.bb39
    i32 256, label %sw.bb40
    i32 257, label %sw.bb41
    i32 258, label %sw.bb42
    i32 259, label %sw.bb43
    i32 262, label %sw.bb44
    i32 260, label %sw.bb45
    i32 261, label %sw.bb46
    i32 264, label %sw.bb47
    i32 265, label %sw.bb48
    i32 266, label %sw.bb49
    i32 267, label %sw.bb50
    i32 268, label %sw.bb51
    i32 269, label %sw.bb52
    i32 270, label %sw.bb53
    i32 271, label %sw.bb54
    i32 272, label %sw.bb55
    i32 273, label %sw.bb56
    i32 274, label %sw.bb57
    i32 275, label %sw.bb58
    i32 276, label %sw.bb59
    i32 277, label %sw.bb60
    i32 278, label %sw.bb61
    i32 289, label %sw.bb62
    i32 290, label %sw.bb63
    i32 291, label %sw.bb64
    i32 292, label %sw.bb65
    i32 293, label %sw.bb66
    i32 294, label %sw.bb67
    i32 263, label %sw.bb68
    i32 319, label %sw.bb69
    i32 320, label %sw.bb70
    i32 321, label %sw.bb71
    i32 322, label %sw.bb72
  ], !dbg !7956

sw.bb:                                            ; preds = %if.else22
  store i32 223, i32* %retval, align 4, !dbg !7957
  br label %return, !dbg !7957

sw.bb23:                                          ; preds = %if.else22
  store i32 219, i32* %retval, align 4, !dbg !7959
  br label %return, !dbg !7959

sw.bb24:                                          ; preds = %if.else22
  store i32 222, i32* %retval, align 4, !dbg !7960
  br label %return, !dbg !7960

sw.bb25:                                          ; preds = %if.else22
  store i32 0, i32* %retval, align 4, !dbg !7961
  br label %return, !dbg !7961

sw.bb26:                                          ; preds = %if.else22
  store i32 220, i32* %retval, align 4, !dbg !7962
  br label %return, !dbg !7962

sw.bb27:                                          ; preds = %if.else22
  store i32 218, i32* %retval, align 4, !dbg !7963
  br label %return, !dbg !7963

sw.bb28:                                          ; preds = %if.else22
  store i32 221, i32* %retval, align 4, !dbg !7964
  br label %return, !dbg !7964

sw.bb29:                                          ; preds = %if.else22
  store i32 228, i32* %retval, align 4, !dbg !7965
  br label %return, !dbg !7965

sw.bb30:                                          ; preds = %if.else22
  store i32 227, i32* %retval, align 4, !dbg !7966
  br label %return, !dbg !7966

sw.bb31:                                          ; preds = %if.else22
  store i32 230, i32* %retval, align 4, !dbg !7967
  br label %return, !dbg !7967

sw.bb32:                                          ; preds = %if.else22
  store i32 226, i32* %retval, align 4, !dbg !7968
  br label %return, !dbg !7968

sw.bb33:                                          ; preds = %if.else22
  store i32 232, i32* %retval, align 4, !dbg !7969
  br label %return, !dbg !7969

sw.bb34:                                          ; preds = %if.else22
  store i32 225, i32* %retval, align 4, !dbg !7970
  br label %return, !dbg !7970

sw.bb35:                                          ; preds = %if.else22
  store i32 234, i32* %retval, align 4, !dbg !7971
  br label %return, !dbg !7971

sw.bb36:                                          ; preds = %if.else22
  store i32 235, i32* %retval, align 4, !dbg !7972
  br label %return, !dbg !7972

sw.bb37:                                          ; preds = %if.else22
  store i32 236, i32* %retval, align 4, !dbg !7973
  br label %return, !dbg !7973

sw.bb38:                                          ; preds = %if.else22
  store i32 233, i32* %retval, align 4, !dbg !7974
  br label %return, !dbg !7974

sw.bb39:                                          ; preds = %if.else22
  store i32 229, i32* %retval, align 4, !dbg !7975
  br label %return, !dbg !7975

sw.bb40:                                          ; preds = %if.else22
  store i32 217, i32* %retval, align 4, !dbg !7976
  br label %return, !dbg !7976

sw.bb41:                                          ; preds = %if.else22
  store i32 216, i32* %retval, align 4, !dbg !7977
  br label %return, !dbg !7977

sw.bb42:                                          ; preds = %if.else22
  store i32 212, i32* %retval, align 4, !dbg !7978
  br label %return, !dbg !7978

sw.bb43:                                          ; preds = %if.else22
  store i32 215, i32* %retval, align 4, !dbg !7979
  br label %return, !dbg !7979

sw.bb44:                                          ; preds = %if.else22
  store i32 172, i32* %retval, align 4, !dbg !7980
  br label %return, !dbg !7980

sw.bb45:                                          ; preds = %if.else22
  store i32 213, i32* %retval, align 4, !dbg !7981
  br label %return, !dbg !7981

sw.bb46:                                          ; preds = %if.else22
  store i32 214, i32* %retval, align 4, !dbg !7982
  br label %return, !dbg !7982

sw.bb47:                                          ; preds = %if.else22
  store i32 211, i32* %retval, align 4, !dbg !7983
  br label %return, !dbg !7983

sw.bb48:                                          ; preds = %if.else22
  store i32 0, i32* %retval, align 4, !dbg !7984
  br label %return, !dbg !7984

sw.bb49:                                          ; preds = %if.else22
  store i32 0, i32* %retval, align 4, !dbg !7985
  br label %return, !dbg !7985

sw.bb50:                                          ; preds = %if.else22
  store i32 137, i32* %retval, align 4, !dbg !7986
  br label %return, !dbg !7986

sw.bb51:                                          ; preds = %if.else22
  store i32 139, i32* %retval, align 4, !dbg !7987
  br label %return, !dbg !7987

sw.bb52:                                          ; preds = %if.else22
  store i32 140, i32* %retval, align 4, !dbg !7988
  br label %return, !dbg !7988

sw.bb53:                                          ; preds = %if.else22
  store i32 138, i32* %retval, align 4, !dbg !7989
  br label %return, !dbg !7989

sw.bb54:                                          ; preds = %if.else22
  store i32 0, i32* %retval, align 4, !dbg !7990
  br label %return, !dbg !7990

sw.bb55:                                          ; preds = %if.else22
  store i32 165, i32* %retval, align 4, !dbg !7991
  br label %return, !dbg !7991

sw.bb56:                                          ; preds = %if.else22
  store i32 166, i32* %retval, align 4, !dbg !7992
  br label %return, !dbg !7992

sw.bb57:                                          ; preds = %if.else22
  store i32 224, i32* %retval, align 4, !dbg !7993
  br label %return, !dbg !7993

sw.bb58:                                          ; preds = %if.else22
  store i32 167, i32* %retval, align 4, !dbg !7994
  br label %return, !dbg !7994

sw.bb59:                                          ; preds = %if.else22
  store i32 170, i32* %retval, align 4, !dbg !7995
  br label %return, !dbg !7995

sw.bb60:                                          ; preds = %if.else22
  store i32 168, i32* %retval, align 4, !dbg !7996
  br label %return, !dbg !7996

sw.bb61:                                          ; preds = %if.else22
  store i32 169, i32* %retval, align 4, !dbg !7997
  br label %return, !dbg !7997

sw.bb62:                                          ; preds = %if.else22
  store i32 199, i32* %retval, align 4, !dbg !7998
  br label %return, !dbg !7998

sw.bb63:                                          ; preds = %if.else22
  store i32 163, i32* %retval, align 4, !dbg !7999
  br label %return, !dbg !7999

sw.bb64:                                          ; preds = %if.else22
  store i32 164, i32* %retval, align 4, !dbg !8000
  br label %return, !dbg !8000

sw.bb65:                                          ; preds = %if.else22
  store i32 162, i32* %retval, align 4, !dbg !8001
  br label %return, !dbg !8001

sw.bb66:                                          ; preds = %if.else22
  store i32 160, i32* %retval, align 4, !dbg !8002
  br label %return, !dbg !8002

sw.bb67:                                          ; preds = %if.else22
  store i32 161, i32* %retval, align 4, !dbg !8003
  br label %return, !dbg !8003

sw.bb68:                                          ; preds = %if.else22
  store i32 173, i32* %retval, align 4, !dbg !8004
  br label %return, !dbg !8004

sw.bb69:                                          ; preds = %if.else22
  store i32 174, i32* %retval, align 4, !dbg !8005
  br label %return, !dbg !8005

sw.bb70:                                          ; preds = %if.else22
  store i32 175, i32* %retval, align 4, !dbg !8006
  br label %return, !dbg !8006

sw.bb71:                                          ; preds = %if.else22
  store i32 176, i32* %retval, align 4, !dbg !8007
  br label %return, !dbg !8007

sw.bb72:                                          ; preds = %if.else22
  store i32 177, i32* %retval, align 4, !dbg !8008
  br label %return, !dbg !8008

sw.default:                                       ; preds = %if.else22
  store i32 171, i32* %retval, align 4, !dbg !8009
  br label %return, !dbg !8009

return:                                           ; preds = %sw.default, %sw.bb72, %sw.bb71, %sw.bb70, %sw.bb69, %sw.bb68, %sw.bb67, %sw.bb66, %sw.bb65, %sw.bb64, %sw.bb63, %sw.bb62, %sw.bb61, %sw.bb60, %sw.bb59, %sw.bb58, %sw.bb57, %sw.bb56, %sw.bb55, %sw.bb54, %sw.bb53, %sw.bb52, %sw.bb51, %sw.bb50, %sw.bb49, %sw.bb48, %sw.bb47, %sw.bb46, %sw.bb45, %sw.bb44, %sw.bb43, %sw.bb42, %sw.bb41, %sw.bb40, %sw.bb39, %sw.bb38, %sw.bb37, %sw.bb36, %sw.bb35, %sw.bb34, %sw.bb33, %sw.bb32, %sw.bb31, %sw.bb30, %sw.bb29, %sw.bb28, %sw.bb27, %sw.bb26, %sw.bb25, %sw.bb24, %sw.bb23, %sw.bb, %if.then19, %if.then12, %if.then5, %if.then
  %13 = load i32, i32* %retval, align 4, !dbg !8010
  ret i32 %13, !dbg !8010
}

declare dso_local i32 @BLI_str_utf8_size(i8*) #3

; Function Attrs: noinline nounwind uwtable
define internal void @attach_ndof_data(%struct.wmEvent* %event, %struct.GHOST_TEventNDOFMotionData* %ghost) #0 !dbg !8011 {
entry:
  %event.addr = alloca %struct.wmEvent*, align 8
  %ghost.addr = alloca %struct.GHOST_TEventNDOFMotionData*, align 8
  %data = alloca %struct.wmNDOFMotionData*, align 8
  %ts = alloca float, align 4
  %rs = alloca float, align 4
  %t = alloca float, align 4
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !8028, metadata !DIExpression()), !dbg !8029
  store %struct.GHOST_TEventNDOFMotionData* %ghost, %struct.GHOST_TEventNDOFMotionData** %ghost.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.GHOST_TEventNDOFMotionData** %ghost.addr, metadata !8030, metadata !DIExpression()), !dbg !8031
  call void @llvm.dbg.declare(metadata %struct.wmNDOFMotionData** %data, metadata !8032, metadata !DIExpression()), !dbg !8041
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !8042
  %call = call i8* %0(i64 32, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.32, i64 0, i64 0)), !dbg !8042
  %1 = bitcast i8* %call to %struct.wmNDOFMotionData*, !dbg !8042
  store %struct.wmNDOFMotionData* %1, %struct.wmNDOFMotionData** %data, align 8, !dbg !8041
  call void @llvm.dbg.declare(metadata float* %ts, metadata !8043, metadata !DIExpression()), !dbg !8045
  %2 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 85), align 4, !dbg !8046
  store float %2, float* %ts, align 4, !dbg !8045
  call void @llvm.dbg.declare(metadata float* %rs, metadata !8047, metadata !DIExpression()), !dbg !8048
  %3 = load float, float* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 86), align 8, !dbg !8049
  store float %3, float* %rs, align 4, !dbg !8048
  %4 = load %struct.wmNDOFMotionData*, %struct.wmNDOFMotionData** %data, align 8, !dbg !8050
  %tvec = getelementptr inbounds %struct.wmNDOFMotionData, %struct.wmNDOFMotionData* %4, i32 0, i32 0, !dbg !8051
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %tvec, i64 0, i64 0, !dbg !8050
  %5 = load %struct.GHOST_TEventNDOFMotionData*, %struct.GHOST_TEventNDOFMotionData** %ghost.addr, align 8, !dbg !8052
  %tx = getelementptr inbounds %struct.GHOST_TEventNDOFMotionData, %struct.GHOST_TEventNDOFMotionData* %5, i32 0, i32 0, !dbg !8053
  %6 = load float, float* %ts, align 4, !dbg !8054
  call void @mul_v3_v3fl(float* %arraydecay, float* %tx, float %6), !dbg !8055
  %7 = load %struct.wmNDOFMotionData*, %struct.wmNDOFMotionData** %data, align 8, !dbg !8056
  %rvec = getelementptr inbounds %struct.wmNDOFMotionData, %struct.wmNDOFMotionData* %7, i32 0, i32 1, !dbg !8057
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %rvec, i64 0, i64 0, !dbg !8056
  %8 = load %struct.GHOST_TEventNDOFMotionData*, %struct.GHOST_TEventNDOFMotionData** %ghost.addr, align 8, !dbg !8058
  %rx = getelementptr inbounds %struct.GHOST_TEventNDOFMotionData, %struct.GHOST_TEventNDOFMotionData* %8, i32 0, i32 3, !dbg !8059
  %9 = load float, float* %rs, align 4, !dbg !8060
  call void @mul_v3_v3fl(float* %arraydecay1, float* %rx, float %9), !dbg !8061
  %10 = load i32, i32* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 87), align 4, !dbg !8062
  %and = and i32 %10, 128, !dbg !8064
  %tobool = icmp ne i32 %and, 0, !dbg !8064
  br i1 %tobool, label %if.then, label %if.end, !dbg !8065

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata float* %t, metadata !8066, metadata !DIExpression()), !dbg !8068
  %11 = load %struct.wmNDOFMotionData*, %struct.wmNDOFMotionData** %data, align 8, !dbg !8069
  %tvec2 = getelementptr inbounds %struct.wmNDOFMotionData, %struct.wmNDOFMotionData* %11, i32 0, i32 0, !dbg !8070
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %tvec2, i64 0, i64 1, !dbg !8069
  %12 = load float, float* %arrayidx, align 4, !dbg !8069
  store float %12, float* %t, align 4, !dbg !8071
  %13 = load %struct.wmNDOFMotionData*, %struct.wmNDOFMotionData** %data, align 8, !dbg !8072
  %tvec3 = getelementptr inbounds %struct.wmNDOFMotionData, %struct.wmNDOFMotionData* %13, i32 0, i32 0, !dbg !8073
  %arrayidx4 = getelementptr inbounds [3 x float], [3 x float]* %tvec3, i64 0, i64 2, !dbg !8072
  %14 = load float, float* %arrayidx4, align 4, !dbg !8072
  %fneg = fneg float %14, !dbg !8074
  %15 = load %struct.wmNDOFMotionData*, %struct.wmNDOFMotionData** %data, align 8, !dbg !8075
  %tvec5 = getelementptr inbounds %struct.wmNDOFMotionData, %struct.wmNDOFMotionData* %15, i32 0, i32 0, !dbg !8076
  %arrayidx6 = getelementptr inbounds [3 x float], [3 x float]* %tvec5, i64 0, i64 1, !dbg !8075
  store float %fneg, float* %arrayidx6, align 4, !dbg !8077
  %16 = load float, float* %t, align 4, !dbg !8078
  %17 = load %struct.wmNDOFMotionData*, %struct.wmNDOFMotionData** %data, align 8, !dbg !8079
  %tvec7 = getelementptr inbounds %struct.wmNDOFMotionData, %struct.wmNDOFMotionData* %17, i32 0, i32 0, !dbg !8080
  %arrayidx8 = getelementptr inbounds [3 x float], [3 x float]* %tvec7, i64 0, i64 2, !dbg !8079
  store float %16, float* %arrayidx8, align 4, !dbg !8081
  br label %if.end, !dbg !8082

if.end:                                           ; preds = %if.then, %entry
  %18 = load %struct.GHOST_TEventNDOFMotionData*, %struct.GHOST_TEventNDOFMotionData** %ghost.addr, align 8, !dbg !8083
  %dt = getelementptr inbounds %struct.GHOST_TEventNDOFMotionData, %struct.GHOST_TEventNDOFMotionData* %18, i32 0, i32 6, !dbg !8084
  %19 = load float, float* %dt, align 4, !dbg !8084
  %20 = load %struct.wmNDOFMotionData*, %struct.wmNDOFMotionData** %data, align 8, !dbg !8085
  %dt9 = getelementptr inbounds %struct.wmNDOFMotionData, %struct.wmNDOFMotionData* %20, i32 0, i32 2, !dbg !8086
  store float %19, float* %dt9, align 4, !dbg !8087
  %21 = load %struct.GHOST_TEventNDOFMotionData*, %struct.GHOST_TEventNDOFMotionData** %ghost.addr, align 8, !dbg !8088
  %progress = getelementptr inbounds %struct.GHOST_TEventNDOFMotionData, %struct.GHOST_TEventNDOFMotionData* %21, i32 0, i32 7, !dbg !8089
  %22 = load i32, i32* %progress, align 4, !dbg !8089
  %23 = load %struct.wmNDOFMotionData*, %struct.wmNDOFMotionData** %data, align 8, !dbg !8090
  %progress10 = getelementptr inbounds %struct.wmNDOFMotionData, %struct.wmNDOFMotionData* %23, i32 0, i32 3, !dbg !8091
  store i32 %22, i32* %progress10, align 4, !dbg !8092
  %24 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !8093
  %custom = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %24, i32 0, i32 25, !dbg !8094
  store i16 4, i16* %custom, align 8, !dbg !8095
  %25 = load %struct.wmNDOFMotionData*, %struct.wmNDOFMotionData** %data, align 8, !dbg !8096
  %26 = bitcast %struct.wmNDOFMotionData* %25 to i8*, !dbg !8096
  %27 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !8097
  %customdata = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %27, i32 0, i32 28, !dbg !8098
  store i8* %26, i8** %customdata, align 8, !dbg !8099
  %28 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !8100
  %customdatafree = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %28, i32 0, i32 26, !dbg !8101
  store i16 1, i16* %customdatafree, align 2, !dbg !8102
  ret void, !dbg !8103
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @WM_set_locked_interface(%struct.wmWindowManager* %wm, i8 zeroext %lock) #0 !dbg !8104 {
entry:
  %wm.addr = alloca %struct.wmWindowManager*, align 8
  %lock.addr = alloca i8, align 1
  store %struct.wmWindowManager* %wm, %struct.wmWindowManager** %wm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmWindowManager** %wm.addr, metadata !8107, metadata !DIExpression()), !dbg !8108
  store i8 %lock, i8* %lock.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %lock.addr, metadata !8109, metadata !DIExpression()), !dbg !8110
  %0 = load i8, i8* %lock.addr, align 1, !dbg !8111
  %conv = zext i8 %0 to i32, !dbg !8111
  %tobool = icmp ne i32 %conv, 0, !dbg !8111
  %1 = zext i1 %tobool to i64, !dbg !8111
  %cond = select i1 %tobool, i32 1, i32 0, !dbg !8111
  %conv1 = trunc i32 %cond to i8, !dbg !8111
  %2 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm.addr, align 8, !dbg !8112
  %is_interface_locked = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %2, i32 0, i32 19, !dbg !8113
  store i8 %conv1, i8* %is_interface_locked, align 8, !dbg !8114
  %3 = load i8, i8* %lock.addr, align 1, !dbg !8115
  %conv2 = zext i8 %3 to i32, !dbg !8115
  call void @BKE_spacedata_draw_locks(i32 %conv2), !dbg !8116
  ret void, !dbg !8117
}

declare dso_local void @BKE_spacedata_draw_locks(i32) #3

; Function Attrs: noinline nounwind uwtable
define dso_local void @WM_event_ndof_pan_get(%struct.wmNDOFMotionData* %ndof, float* %r_pan, i8 zeroext %use_zoom) #0 !dbg !8118 {
entry:
  %ndof.addr = alloca %struct.wmNDOFMotionData*, align 8
  %r_pan.addr = alloca float*, align 8
  %use_zoom.addr = alloca i8, align 1
  %z_flag = alloca i32, align 4
  store %struct.wmNDOFMotionData* %ndof, %struct.wmNDOFMotionData** %ndof.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmNDOFMotionData** %ndof.addr, metadata !8123, metadata !DIExpression()), !dbg !8124
  store float* %r_pan, float** %r_pan.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_pan.addr, metadata !8125, metadata !DIExpression()), !dbg !8126
  store i8 %use_zoom, i8* %use_zoom.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %use_zoom.addr, metadata !8127, metadata !DIExpression()), !dbg !8128
  call void @llvm.dbg.declare(metadata i32* %z_flag, metadata !8129, metadata !DIExpression()), !dbg !8130
  %0 = load i8, i8* %use_zoom.addr, align 1, !dbg !8131
  %conv = zext i8 %0 to i32, !dbg !8131
  %tobool = icmp ne i32 %conv, 0, !dbg !8131
  %1 = zext i1 %tobool to i64, !dbg !8131
  %cond = select i1 %tobool, i32 256, i32 16384, !dbg !8131
  store i32 %cond, i32* %z_flag, align 4, !dbg !8130
  %2 = load %struct.wmNDOFMotionData*, %struct.wmNDOFMotionData** %ndof.addr, align 8, !dbg !8132
  %tvec = getelementptr inbounds %struct.wmNDOFMotionData, %struct.wmNDOFMotionData* %2, i32 0, i32 0, !dbg !8133
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %tvec, i64 0, i64 0, !dbg !8132
  %3 = load float, float* %arrayidx, align 4, !dbg !8132
  %4 = load i32, i32* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 87), align 4, !dbg !8134
  %and = and i32 %4, 4096, !dbg !8135
  %tobool1 = icmp ne i32 %and, 0, !dbg !8136
  %5 = zext i1 %tobool1 to i64, !dbg !8136
  %cond2 = select i1 %tobool1, float -1.000000e+00, float 1.000000e+00, !dbg !8136
  %mul = fmul float %3, %cond2, !dbg !8137
  %6 = load float*, float** %r_pan.addr, align 8, !dbg !8138
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 0, !dbg !8138
  store float %mul, float* %arrayidx3, align 4, !dbg !8139
  %7 = load %struct.wmNDOFMotionData*, %struct.wmNDOFMotionData** %ndof.addr, align 8, !dbg !8140
  %tvec4 = getelementptr inbounds %struct.wmNDOFMotionData, %struct.wmNDOFMotionData* %7, i32 0, i32 0, !dbg !8141
  %arrayidx5 = getelementptr inbounds [3 x float], [3 x float]* %tvec4, i64 0, i64 1, !dbg !8140
  %8 = load float, float* %arrayidx5, align 4, !dbg !8140
  %9 = load i32, i32* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 87), align 4, !dbg !8142
  %and6 = and i32 %9, 8192, !dbg !8143
  %tobool7 = icmp ne i32 %and6, 0, !dbg !8144
  %10 = zext i1 %tobool7 to i64, !dbg !8144
  %cond8 = select i1 %tobool7, float -1.000000e+00, float 1.000000e+00, !dbg !8144
  %mul9 = fmul float %8, %cond8, !dbg !8145
  %11 = load float*, float** %r_pan.addr, align 8, !dbg !8146
  %arrayidx10 = getelementptr inbounds float, float* %11, i64 1, !dbg !8146
  store float %mul9, float* %arrayidx10, align 4, !dbg !8147
  %12 = load %struct.wmNDOFMotionData*, %struct.wmNDOFMotionData** %ndof.addr, align 8, !dbg !8148
  %tvec11 = getelementptr inbounds %struct.wmNDOFMotionData, %struct.wmNDOFMotionData* %12, i32 0, i32 0, !dbg !8149
  %arrayidx12 = getelementptr inbounds [3 x float], [3 x float]* %tvec11, i64 0, i64 2, !dbg !8148
  %13 = load float, float* %arrayidx12, align 4, !dbg !8148
  %14 = load i32, i32* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 87), align 4, !dbg !8150
  %15 = load i32, i32* %z_flag, align 4, !dbg !8151
  %and13 = and i32 %14, %15, !dbg !8152
  %tobool14 = icmp ne i32 %and13, 0, !dbg !8153
  %16 = zext i1 %tobool14 to i64, !dbg !8153
  %cond15 = select i1 %tobool14, float -1.000000e+00, float 1.000000e+00, !dbg !8153
  %mul16 = fmul float %13, %cond15, !dbg !8154
  %17 = load float*, float** %r_pan.addr, align 8, !dbg !8155
  %arrayidx17 = getelementptr inbounds float, float* %17, i64 2, !dbg !8155
  store float %mul16, float* %arrayidx17, align 4, !dbg !8156
  ret void, !dbg !8157
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @WM_event_ndof_rotate_get(%struct.wmNDOFMotionData* %ndof, float* %r_rot) #0 !dbg !8158 {
entry:
  %ndof.addr = alloca %struct.wmNDOFMotionData*, align 8
  %r_rot.addr = alloca float*, align 8
  store %struct.wmNDOFMotionData* %ndof, %struct.wmNDOFMotionData** %ndof.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmNDOFMotionData** %ndof.addr, metadata !8161, metadata !DIExpression()), !dbg !8162
  store float* %r_rot, float** %r_rot.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r_rot.addr, metadata !8163, metadata !DIExpression()), !dbg !8164
  %0 = load %struct.wmNDOFMotionData*, %struct.wmNDOFMotionData** %ndof.addr, align 8, !dbg !8165
  %rvec = getelementptr inbounds %struct.wmNDOFMotionData, %struct.wmNDOFMotionData* %0, i32 0, i32 1, !dbg !8166
  %arrayidx = getelementptr inbounds [3 x float], [3 x float]* %rvec, i64 0, i64 0, !dbg !8165
  %1 = load float, float* %arrayidx, align 4, !dbg !8165
  %2 = load i32, i32* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 87), align 4, !dbg !8167
  %and = and i32 %2, 512, !dbg !8168
  %tobool = icmp ne i32 %and, 0, !dbg !8169
  %3 = zext i1 %tobool to i64, !dbg !8169
  %cond = select i1 %tobool, float -1.000000e+00, float 1.000000e+00, !dbg !8169
  %mul = fmul float %1, %cond, !dbg !8170
  %4 = load float*, float** %r_rot.addr, align 8, !dbg !8171
  %arrayidx1 = getelementptr inbounds float, float* %4, i64 0, !dbg !8171
  store float %mul, float* %arrayidx1, align 4, !dbg !8172
  %5 = load %struct.wmNDOFMotionData*, %struct.wmNDOFMotionData** %ndof.addr, align 8, !dbg !8173
  %rvec2 = getelementptr inbounds %struct.wmNDOFMotionData, %struct.wmNDOFMotionData* %5, i32 0, i32 1, !dbg !8174
  %arrayidx3 = getelementptr inbounds [3 x float], [3 x float]* %rvec2, i64 0, i64 1, !dbg !8173
  %6 = load float, float* %arrayidx3, align 4, !dbg !8173
  %7 = load i32, i32* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 87), align 4, !dbg !8175
  %and4 = and i32 %7, 1024, !dbg !8176
  %tobool5 = icmp ne i32 %and4, 0, !dbg !8177
  %8 = zext i1 %tobool5 to i64, !dbg !8177
  %cond6 = select i1 %tobool5, float -1.000000e+00, float 1.000000e+00, !dbg !8177
  %mul7 = fmul float %6, %cond6, !dbg !8178
  %9 = load float*, float** %r_rot.addr, align 8, !dbg !8179
  %arrayidx8 = getelementptr inbounds float, float* %9, i64 1, !dbg !8179
  store float %mul7, float* %arrayidx8, align 4, !dbg !8180
  %10 = load %struct.wmNDOFMotionData*, %struct.wmNDOFMotionData** %ndof.addr, align 8, !dbg !8181
  %rvec9 = getelementptr inbounds %struct.wmNDOFMotionData, %struct.wmNDOFMotionData* %10, i32 0, i32 1, !dbg !8182
  %arrayidx10 = getelementptr inbounds [3 x float], [3 x float]* %rvec9, i64 0, i64 2, !dbg !8181
  %11 = load float, float* %arrayidx10, align 4, !dbg !8181
  %12 = load i32, i32* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 87), align 4, !dbg !8183
  %and11 = and i32 %12, 2048, !dbg !8184
  %tobool12 = icmp ne i32 %and11, 0, !dbg !8185
  %13 = zext i1 %tobool12 to i64, !dbg !8185
  %cond13 = select i1 %tobool12, float -1.000000e+00, float 1.000000e+00, !dbg !8185
  %mul14 = fmul float %11, %cond13, !dbg !8186
  %14 = load float*, float** %r_rot.addr, align 8, !dbg !8187
  %arrayidx15 = getelementptr inbounds float, float* %14, i64 2, !dbg !8187
  store float %mul14, float* %arrayidx15, align 4, !dbg !8188
  ret void, !dbg !8189
}

; Function Attrs: noinline nounwind uwtable
define dso_local float @WM_event_ndof_to_axis_angle(%struct.wmNDOFMotionData* %ndof, float* %axis) #0 !dbg !8190 {
entry:
  %ndof.addr = alloca %struct.wmNDOFMotionData*, align 8
  %axis.addr = alloca float*, align 8
  %angle = alloca float, align 4
  store %struct.wmNDOFMotionData* %ndof, %struct.wmNDOFMotionData** %ndof.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmNDOFMotionData** %ndof.addr, metadata !8195, metadata !DIExpression()), !dbg !8196
  store float* %axis, float** %axis.addr, align 8
  call void @llvm.dbg.declare(metadata float** %axis.addr, metadata !8197, metadata !DIExpression()), !dbg !8198
  call void @llvm.dbg.declare(metadata float* %angle, metadata !8199, metadata !DIExpression()), !dbg !8200
  %0 = load float*, float** %axis.addr, align 8, !dbg !8201
  %1 = load %struct.wmNDOFMotionData*, %struct.wmNDOFMotionData** %ndof.addr, align 8, !dbg !8202
  %rvec = getelementptr inbounds %struct.wmNDOFMotionData, %struct.wmNDOFMotionData* %1, i32 0, i32 1, !dbg !8203
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %rvec, i64 0, i64 0, !dbg !8202
  %call = call float @normalize_v3_v3(float* %0, float* %arraydecay), !dbg !8204
  store float %call, float* %angle, align 4, !dbg !8205
  %2 = load float*, float** %axis.addr, align 8, !dbg !8206
  %arrayidx = getelementptr inbounds float, float* %2, i64 0, !dbg !8206
  %3 = load float, float* %arrayidx, align 4, !dbg !8206
  %4 = load i32, i32* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 87), align 4, !dbg !8207
  %and = and i32 %4, 512, !dbg !8208
  %tobool = icmp ne i32 %and, 0, !dbg !8209
  %5 = zext i1 %tobool to i64, !dbg !8209
  %cond = select i1 %tobool, float -1.000000e+00, float 1.000000e+00, !dbg !8209
  %mul = fmul float %3, %cond, !dbg !8210
  %6 = load float*, float** %axis.addr, align 8, !dbg !8211
  %arrayidx1 = getelementptr inbounds float, float* %6, i64 0, !dbg !8211
  store float %mul, float* %arrayidx1, align 4, !dbg !8212
  %7 = load float*, float** %axis.addr, align 8, !dbg !8213
  %arrayidx2 = getelementptr inbounds float, float* %7, i64 1, !dbg !8213
  %8 = load float, float* %arrayidx2, align 4, !dbg !8213
  %9 = load i32, i32* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 87), align 4, !dbg !8214
  %and3 = and i32 %9, 1024, !dbg !8215
  %tobool4 = icmp ne i32 %and3, 0, !dbg !8216
  %10 = zext i1 %tobool4 to i64, !dbg !8216
  %cond5 = select i1 %tobool4, float -1.000000e+00, float 1.000000e+00, !dbg !8216
  %mul6 = fmul float %8, %cond5, !dbg !8217
  %11 = load float*, float** %axis.addr, align 8, !dbg !8218
  %arrayidx7 = getelementptr inbounds float, float* %11, i64 1, !dbg !8218
  store float %mul6, float* %arrayidx7, align 4, !dbg !8219
  %12 = load float*, float** %axis.addr, align 8, !dbg !8220
  %arrayidx8 = getelementptr inbounds float, float* %12, i64 2, !dbg !8220
  %13 = load float, float* %arrayidx8, align 4, !dbg !8220
  %14 = load i32, i32* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 87), align 4, !dbg !8221
  %and9 = and i32 %14, 2048, !dbg !8222
  %tobool10 = icmp ne i32 %and9, 0, !dbg !8223
  %15 = zext i1 %tobool10 to i64, !dbg !8223
  %cond11 = select i1 %tobool10, float -1.000000e+00, float 1.000000e+00, !dbg !8223
  %mul12 = fmul float %13, %cond11, !dbg !8224
  %16 = load float*, float** %axis.addr, align 8, !dbg !8225
  %arrayidx13 = getelementptr inbounds float, float* %16, i64 2, !dbg !8225
  store float %mul12, float* %arrayidx13, align 4, !dbg !8226
  %17 = load %struct.wmNDOFMotionData*, %struct.wmNDOFMotionData** %ndof.addr, align 8, !dbg !8227
  %dt = getelementptr inbounds %struct.wmNDOFMotionData, %struct.wmNDOFMotionData* %17, i32 0, i32 2, !dbg !8228
  %18 = load float, float* %dt, align 4, !dbg !8228
  %19 = load float, float* %angle, align 4, !dbg !8229
  %mul14 = fmul float %18, %19, !dbg !8230
  ret float %mul14, !dbg !8231
}

; Function Attrs: noinline nounwind uwtable
define internal float @normalize_v3_v3(float* %r, float* %a) #0 !dbg !8232 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %d = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !8236, metadata !DIExpression()), !dbg !8237
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !8238, metadata !DIExpression()), !dbg !8239
  call void @llvm.dbg.declare(metadata float* %d, metadata !8240, metadata !DIExpression()), !dbg !8241
  %0 = load float*, float** %a.addr, align 8, !dbg !8242
  %1 = load float*, float** %a.addr, align 8, !dbg !8243
  %call = call float @dot_v3v3(float* %0, float* %1), !dbg !8244
  store float %call, float* %d, align 4, !dbg !8241
  %2 = load float, float* %d, align 4, !dbg !8245
  %cmp = fcmp ogt float %2, 0x38AA95A5C0000000, !dbg !8247
  br i1 %cmp, label %if.then, label %if.else, !dbg !8248

if.then:                                          ; preds = %entry
  %3 = load float, float* %d, align 4, !dbg !8249
  %call1 = call float @sqrtf(float %3) #4, !dbg !8251
  store float %call1, float* %d, align 4, !dbg !8252
  %4 = load float*, float** %r.addr, align 8, !dbg !8253
  %5 = load float*, float** %a.addr, align 8, !dbg !8254
  %6 = load float, float* %d, align 4, !dbg !8255
  %div = fdiv float 1.000000e+00, %6, !dbg !8256
  call void @mul_v3_v3fl(float* %4, float* %5, float %div), !dbg !8257
  br label %if.end, !dbg !8258

if.else:                                          ; preds = %entry
  %7 = load float*, float** %r.addr, align 8, !dbg !8259
  call void @zero_v3(float* %7), !dbg !8261
  store float 0.000000e+00, float* %d, align 4, !dbg !8262
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %8 = load float, float* %d, align 4, !dbg !8263
  ret float %8, !dbg !8264
}

; Function Attrs: noinline nounwind uwtable
define dso_local void @WM_event_ndof_to_quat(%struct.wmNDOFMotionData* %ndof, float* %q) #0 !dbg !8265 {
entry:
  %ndof.addr = alloca %struct.wmNDOFMotionData*, align 8
  %q.addr = alloca float*, align 8
  %axis = alloca [3 x float], align 4
  %angle = alloca float, align 4
  store %struct.wmNDOFMotionData* %ndof, %struct.wmNDOFMotionData** %ndof.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmNDOFMotionData** %ndof.addr, metadata !8268, metadata !DIExpression()), !dbg !8269
  store float* %q, float** %q.addr, align 8
  call void @llvm.dbg.declare(metadata float** %q.addr, metadata !8270, metadata !DIExpression()), !dbg !8271
  call void @llvm.dbg.declare(metadata [3 x float]* %axis, metadata !8272, metadata !DIExpression()), !dbg !8273
  call void @llvm.dbg.declare(metadata float* %angle, metadata !8274, metadata !DIExpression()), !dbg !8275
  %0 = load %struct.wmNDOFMotionData*, %struct.wmNDOFMotionData** %ndof.addr, align 8, !dbg !8276
  %arraydecay = getelementptr inbounds [3 x float], [3 x float]* %axis, i64 0, i64 0, !dbg !8277
  %call = call float @WM_event_ndof_to_axis_angle(%struct.wmNDOFMotionData* %0, float* %arraydecay), !dbg !8278
  store float %call, float* %angle, align 4, !dbg !8279
  %1 = load float*, float** %q.addr, align 8, !dbg !8280
  %arraydecay1 = getelementptr inbounds [3 x float], [3 x float]* %axis, i64 0, i64 0, !dbg !8281
  %2 = load float, float* %angle, align 4, !dbg !8282
  call void @axis_angle_to_quat(float* %1, float* %arraydecay1, float %2), !dbg !8283
  ret void, !dbg !8284
}

declare dso_local void @axis_angle_to_quat(float*, float*, float) #3

; Function Attrs: noinline nounwind uwtable
define dso_local float @WM_event_tablet_data(%struct.wmEvent* %event, i32* %pen_flip, float* %tilt) #0 !dbg !8285 {
entry:
  %event.addr = alloca %struct.wmEvent*, align 8
  %pen_flip.addr = alloca i32*, align 8
  %tilt.addr = alloca float*, align 8
  %erasor = alloca i32, align 4
  %pressure = alloca float, align 4
  %wmtab = alloca %struct.wmTabletData*, align 8
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !8288, metadata !DIExpression()), !dbg !8289
  store i32* %pen_flip, i32** %pen_flip.addr, align 8
  call void @llvm.dbg.declare(metadata i32** %pen_flip.addr, metadata !8290, metadata !DIExpression()), !dbg !8291
  store float* %tilt, float** %tilt.addr, align 8
  call void @llvm.dbg.declare(metadata float** %tilt.addr, metadata !8292, metadata !DIExpression()), !dbg !8293
  call void @llvm.dbg.declare(metadata i32* %erasor, metadata !8294, metadata !DIExpression()), !dbg !8295
  store i32 0, i32* %erasor, align 4, !dbg !8295
  call void @llvm.dbg.declare(metadata float* %pressure, metadata !8296, metadata !DIExpression()), !dbg !8297
  store float 1.000000e+00, float* %pressure, align 4, !dbg !8297
  %0 = load float*, float** %tilt.addr, align 8, !dbg !8298
  %tobool = icmp ne float* %0, null, !dbg !8298
  br i1 %tobool, label %if.then, label %if.end, !dbg !8300

if.then:                                          ; preds = %entry
  %1 = load float*, float** %tilt.addr, align 8, !dbg !8301
  call void @zero_v2(float* %1), !dbg !8302
  br label %if.end, !dbg !8302

if.end:                                           ; preds = %if.then, %entry
  %2 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !8303
  %tablet_data = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %2, i32 0, i32 24, !dbg !8305
  %3 = load %struct.wmTabletData*, %struct.wmTabletData** %tablet_data, align 8, !dbg !8305
  %tobool1 = icmp ne %struct.wmTabletData* %3, null, !dbg !8303
  br i1 %tobool1, label %if.then2, label %if.end13, !dbg !8306

if.then2:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.wmTabletData** %wmtab, metadata !8307, metadata !DIExpression()), !dbg !8311
  %4 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !8312
  %tablet_data3 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %4, i32 0, i32 24, !dbg !8313
  %5 = load %struct.wmTabletData*, %struct.wmTabletData** %tablet_data3, align 8, !dbg !8313
  store %struct.wmTabletData* %5, %struct.wmTabletData** %wmtab, align 8, !dbg !8311
  %6 = load %struct.wmTabletData*, %struct.wmTabletData** %wmtab, align 8, !dbg !8314
  %Active = getelementptr inbounds %struct.wmTabletData, %struct.wmTabletData* %6, i32 0, i32 0, !dbg !8315
  %7 = load i32, i32* %Active, align 4, !dbg !8315
  %cmp = icmp eq i32 %7, 2, !dbg !8316
  %conv = zext i1 %cmp to i32, !dbg !8316
  store i32 %conv, i32* %erasor, align 4, !dbg !8317
  %8 = load %struct.wmTabletData*, %struct.wmTabletData** %wmtab, align 8, !dbg !8318
  %Active4 = getelementptr inbounds %struct.wmTabletData, %struct.wmTabletData* %8, i32 0, i32 0, !dbg !8320
  %9 = load i32, i32* %Active4, align 4, !dbg !8320
  %cmp5 = icmp ne i32 %9, 0, !dbg !8321
  br i1 %cmp5, label %if.then7, label %if.end12, !dbg !8322

if.then7:                                         ; preds = %if.then2
  %10 = load %struct.wmTabletData*, %struct.wmTabletData** %wmtab, align 8, !dbg !8323
  %Pressure = getelementptr inbounds %struct.wmTabletData, %struct.wmTabletData* %10, i32 0, i32 1, !dbg !8325
  %11 = load float, float* %Pressure, align 4, !dbg !8325
  store float %11, float* %pressure, align 4, !dbg !8326
  %12 = load float*, float** %tilt.addr, align 8, !dbg !8327
  %tobool8 = icmp ne float* %12, null, !dbg !8327
  br i1 %tobool8, label %if.then9, label %if.end11, !dbg !8329

if.then9:                                         ; preds = %if.then7
  %13 = load %struct.wmTabletData*, %struct.wmTabletData** %wmtab, align 8, !dbg !8330
  %Xtilt = getelementptr inbounds %struct.wmTabletData, %struct.wmTabletData* %13, i32 0, i32 2, !dbg !8332
  %14 = load float, float* %Xtilt, align 4, !dbg !8332
  %15 = load float*, float** %tilt.addr, align 8, !dbg !8333
  %arrayidx = getelementptr inbounds float, float* %15, i64 0, !dbg !8333
  store float %14, float* %arrayidx, align 4, !dbg !8334
  %16 = load %struct.wmTabletData*, %struct.wmTabletData** %wmtab, align 8, !dbg !8335
  %Ytilt = getelementptr inbounds %struct.wmTabletData, %struct.wmTabletData* %16, i32 0, i32 3, !dbg !8336
  %17 = load float, float* %Ytilt, align 4, !dbg !8336
  %18 = load float*, float** %tilt.addr, align 8, !dbg !8337
  %arrayidx10 = getelementptr inbounds float, float* %18, i64 1, !dbg !8337
  store float %17, float* %arrayidx10, align 4, !dbg !8338
  br label %if.end11, !dbg !8339

if.end11:                                         ; preds = %if.then9, %if.then7
  br label %if.end12, !dbg !8340

if.end12:                                         ; preds = %if.end11, %if.then2
  br label %if.end13, !dbg !8341

if.end13:                                         ; preds = %if.end12, %if.end
  %19 = load i32*, i32** %pen_flip.addr, align 8, !dbg !8342
  %tobool14 = icmp ne i32* %19, null, !dbg !8342
  br i1 %tobool14, label %if.then15, label %if.end16, !dbg !8344

if.then15:                                        ; preds = %if.end13
  %20 = load i32, i32* %erasor, align 4, !dbg !8345
  %21 = load i32*, i32** %pen_flip.addr, align 8, !dbg !8346
  store i32 %20, i32* %21, align 4, !dbg !8347
  br label %if.end16, !dbg !8348

if.end16:                                         ; preds = %if.then15, %if.end13
  %22 = load float, float* %pressure, align 4, !dbg !8349
  ret float %22, !dbg !8350
}

; Function Attrs: noinline nounwind uwtable
define internal void @zero_v2(float* %r) #0 !dbg !8351 {
entry:
  %r.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !8354, metadata !DIExpression()), !dbg !8355
  %0 = load float*, float** %r.addr, align 8, !dbg !8356
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !8356
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !8357
  %1 = load float*, float** %r.addr, align 8, !dbg !8358
  %arrayidx1 = getelementptr inbounds float, float* %1, i64 1, !dbg !8358
  store float 0.000000e+00, float* %arrayidx1, align 4, !dbg !8359
  ret void, !dbg !8360
}

; Function Attrs: noinline nounwind uwtable
define dso_local zeroext i8 @WM_event_is_tablet(%struct.wmEvent* %event) #0 !dbg !8361 {
entry:
  %event.addr = alloca %struct.wmEvent*, align 8
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !8364, metadata !DIExpression()), !dbg !8365
  %0 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !8366
  %tablet_data = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %0, i32 0, i32 24, !dbg !8367
  %1 = load %struct.wmTabletData*, %struct.wmTabletData** %tablet_data, align 8, !dbg !8367
  %tobool = icmp ne %struct.wmTabletData* %1, null, !dbg !8368
  %2 = zext i1 %tobool to i64, !dbg !8368
  %cond = select i1 %tobool, i32 1, i32 0, !dbg !8368
  %conv = trunc i32 %cond to i8, !dbg !8368
  ret i8 %conv, !dbg !8369
}

; Function Attrs: argmemonly nounwind willreturn
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare dso_local %struct.ReportList* @CTX_wm_reports(%struct.bContext*) #3

declare dso_local void @BLI_movelisttolist(%struct.ListBase*, %struct.ListBase*) #3

declare dso_local void @WM_event_remove_timer(%struct.wmWindowManager*, %struct.wmWindow*, %struct.wmTimer*) #3

declare dso_local %struct.wmTimer* @WM_event_add_timer(%struct.wmWindowManager*, %struct.wmWindow*, i32, double) #3

declare dso_local void @CTX_wm_operator_poll_msg_set(%struct.bContext*, i8*) #3

; Function Attrs: noinline nounwind uwtable
define internal void @wm_operator_reports(%struct.bContext* %C, %struct.wmOperator* %op, i32 %retval, i8 zeroext %caller_owns_reports) #0 !dbg !8370 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %retval.addr = alloca i32, align 4
  %caller_owns_reports.addr = alloca i8, align 1
  %win_prev = alloca %struct.wmWindow*, align 8
  %area_prev = alloca %struct.ScrArea*, align 8
  %ar_prev = alloca %struct.ARegion*, align 8
  %buf = alloca i8*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8373, metadata !DIExpression()), !dbg !8374
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !8375, metadata !DIExpression()), !dbg !8376
  store i32 %retval, i32* %retval.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %retval.addr, metadata !8377, metadata !DIExpression()), !dbg !8378
  store i8 %caller_owns_reports, i8* %caller_owns_reports.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %caller_owns_reports.addr, metadata !8379, metadata !DIExpression()), !dbg !8380
  %0 = load i8, i8* %caller_owns_reports.addr, align 1, !dbg !8381
  %conv = zext i8 %0 to i32, !dbg !8381
  %cmp = icmp eq i32 %conv, 0, !dbg !8383
  br i1 %cmp, label %if.then, label %if.end12, !dbg !8384

if.then:                                          ; preds = %entry
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8385
  %reports = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %1, i32 0, i32 8, !dbg !8388
  %2 = load %struct.ReportList*, %struct.ReportList** %reports, align 8, !dbg !8388
  %list = getelementptr inbounds %struct.ReportList, %struct.ReportList* %2, i32 0, i32 0, !dbg !8389
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %list, i32 0, i32 0, !dbg !8390
  %3 = load i8*, i8** %first, align 8, !dbg !8390
  %tobool = icmp ne i8* %3, null, !dbg !8385
  br i1 %tobool, label %if.then2, label %if.end11, !dbg !8391

if.then2:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.wmWindow** %win_prev, metadata !8392, metadata !DIExpression()), !dbg !8394
  %4 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8395
  %call = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %4), !dbg !8396
  store %struct.wmWindow* %call, %struct.wmWindow** %win_prev, align 8, !dbg !8394
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %area_prev, metadata !8397, metadata !DIExpression()), !dbg !8398
  %5 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8399
  %call3 = call %struct.ScrArea* @CTX_wm_area(%struct.bContext* %5), !dbg !8400
  store %struct.ScrArea* %call3, %struct.ScrArea** %area_prev, align 8, !dbg !8398
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar_prev, metadata !8401, metadata !DIExpression()), !dbg !8402
  %6 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8403
  %call4 = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %6), !dbg !8404
  store %struct.ARegion* %call4, %struct.ARegion** %ar_prev, align 8, !dbg !8402
  %7 = load %struct.wmWindow*, %struct.wmWindow** %win_prev, align 8, !dbg !8405
  %cmp5 = icmp eq %struct.wmWindow* %7, null, !dbg !8407
  br i1 %cmp5, label %if.then7, label %if.end, !dbg !8408

if.then7:                                         ; preds = %if.then2
  %8 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8409
  %9 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8410
  %call8 = call %struct.wmWindowManager* @CTX_wm_manager(%struct.bContext* %9), !dbg !8411
  %windows = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %call8, i32 0, i32 3, !dbg !8412
  %first9 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %windows, i32 0, i32 0, !dbg !8413
  %10 = load i8*, i8** %first9, align 8, !dbg !8413
  %11 = bitcast i8* %10 to %struct.wmWindow*, !dbg !8411
  call void @CTX_wm_window_set(%struct.bContext* %8, %struct.wmWindow* %11), !dbg !8414
  br label %if.end, !dbg !8414

if.end:                                           ; preds = %if.then7, %if.then2
  %12 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8415
  %13 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8416
  %reports10 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %13, i32 0, i32 8, !dbg !8417
  %14 = load %struct.ReportList*, %struct.ReportList** %reports10, align 8, !dbg !8417
  call void @uiPupMenuReports(%struct.bContext* %12, %struct.ReportList* %14), !dbg !8418
  %15 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8419
  %16 = load %struct.wmWindow*, %struct.wmWindow** %win_prev, align 8, !dbg !8420
  call void @CTX_wm_window_set(%struct.bContext* %15, %struct.wmWindow* %16), !dbg !8421
  %17 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8422
  %18 = load %struct.ScrArea*, %struct.ScrArea** %area_prev, align 8, !dbg !8423
  call void @CTX_wm_area_set(%struct.bContext* %17, %struct.ScrArea* %18), !dbg !8424
  %19 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8425
  %20 = load %struct.ARegion*, %struct.ARegion** %ar_prev, align 8, !dbg !8426
  call void @CTX_wm_region_set(%struct.bContext* %19, %struct.ARegion* %20), !dbg !8427
  br label %if.end11, !dbg !8428

if.end11:                                         ; preds = %if.end, %if.then
  br label %if.end12, !dbg !8429

if.end12:                                         ; preds = %if.end11, %entry
  %21 = load i32, i32* %retval.addr, align 4, !dbg !8430
  %and = and i32 %21, 4, !dbg !8432
  %tobool13 = icmp ne i32 %and, 0, !dbg !8432
  br i1 %tobool13, label %if.then14, label %if.end37, !dbg !8433

if.then14:                                        ; preds = %if.end12
  %22 = load i32, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 16), align 4, !dbg !8434
  %and15 = and i32 %22, 32, !dbg !8437
  %tobool16 = icmp ne i32 %and15, 0, !dbg !8437
  br i1 %tobool16, label %if.then17, label %if.end18, !dbg !8438

if.then17:                                        ; preds = %if.then14
  %23 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8439
  %24 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8441
  call void @wm_operator_print(%struct.bContext* %23, %struct.wmOperator* %24), !dbg !8442
  br label %if.end18, !dbg !8443

if.end18:                                         ; preds = %if.then17, %if.then14
  %25 = load i8, i8* %caller_owns_reports.addr, align 1, !dbg !8444
  %conv19 = zext i8 %25 to i32, !dbg !8444
  %cmp20 = icmp eq i32 %conv19, 0, !dbg !8446
  br i1 %cmp20, label %if.then22, label %if.end24, !dbg !8447

if.then22:                                        ; preds = %if.end18
  %26 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8448
  %reports23 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %26, i32 0, i32 8, !dbg !8450
  %27 = load %struct.ReportList*, %struct.ReportList** %reports23, align 8, !dbg !8450
  call void @BKE_reports_print(%struct.ReportList* %27, i32 1), !dbg !8451
  br label %if.end24, !dbg !8452

if.end24:                                         ; preds = %if.then22, %if.end18
  %28 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8453
  %type = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %28, i32 0, i32 4, !dbg !8455
  %29 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type, align 8, !dbg !8455
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %29, i32 0, i32 19, !dbg !8456
  %30 = load i16, i16* %flag, align 8, !dbg !8456
  %conv25 = sext i16 %30 to i32, !dbg !8453
  %and26 = and i32 %conv25, 1, !dbg !8457
  %tobool27 = icmp ne i32 %and26, 0, !dbg !8457
  br i1 %tobool27, label %if.then28, label %if.end36, !dbg !8458

if.then28:                                        ; preds = %if.end24
  %31 = load i8, i8* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 8), align 1, !dbg !8459
  %conv29 = zext i8 %31 to i32, !dbg !8462
  %cmp30 = icmp eq i32 %conv29, 0, !dbg !8463
  br i1 %cmp30, label %if.then32, label %if.end35, !dbg !8464

if.then32:                                        ; preds = %if.then28
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !8465, metadata !DIExpression()), !dbg !8467
  %32 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8468
  %33 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8469
  %call33 = call i8* @WM_operator_pystring(%struct.bContext* %32, %struct.wmOperator* %33, i8 zeroext 0, i8 zeroext 1), !dbg !8470
  store i8* %call33, i8** %buf, align 8, !dbg !8467
  %34 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8471
  %call34 = call %struct.ReportList* @CTX_wm_reports(%struct.bContext* %34), !dbg !8472
  %35 = load i8*, i8** %buf, align 8, !dbg !8473
  call void @BKE_report(%struct.ReportList* %call34, i32 4, i8* %35), !dbg !8474
  %36 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !8475
  %37 = load i8*, i8** %buf, align 8, !dbg !8476
  call void %36(i8* %37), !dbg !8475
  br label %if.end35, !dbg !8477

if.end35:                                         ; preds = %if.then32, %if.then28
  br label %if.end36, !dbg !8478

if.end36:                                         ; preds = %if.end35, %if.end24
  br label %if.end37, !dbg !8479

if.end37:                                         ; preds = %if.end36, %if.end12
  %38 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8480
  %39 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8481
  %reports38 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %39, i32 0, i32 8, !dbg !8482
  %40 = load %struct.ReportList*, %struct.ReportList** %reports38, align 8, !dbg !8482
  call void @wm_add_reports(%struct.bContext* %38, %struct.ReportList* %40), !dbg !8483
  ret void, !dbg !8484
}

; Function Attrs: noinline nounwind uwtable
define internal void @wm_operator_finished(%struct.bContext* %C, %struct.wmOperator* %op, i8 zeroext %repeat) #0 !dbg !8485 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %repeat.addr = alloca i8, align 1
  %wm = alloca %struct.wmWindowManager*, align 8
  %buf = alloca i8*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8488, metadata !DIExpression()), !dbg !8489
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !8490, metadata !DIExpression()), !dbg !8491
  store i8 %repeat, i8* %repeat.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %repeat.addr, metadata !8492, metadata !DIExpression()), !dbg !8493
  call void @llvm.dbg.declare(metadata %struct.wmWindowManager** %wm, metadata !8494, metadata !DIExpression()), !dbg !8495
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8496
  %call = call %struct.wmWindowManager* @CTX_wm_manager(%struct.bContext* %0), !dbg !8497
  store %struct.wmWindowManager* %call, %struct.wmWindowManager** %wm, align 8, !dbg !8495
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8498
  %customdata = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %1, i32 0, i32 5, !dbg !8499
  store i8* null, i8** %customdata, align 8, !dbg !8500
  %2 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !8501
  %op_undo_depth = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %2, i32 0, i32 6, !dbg !8503
  %3 = load i16, i16* %op_undo_depth, align 2, !dbg !8503
  %conv = sext i16 %3 to i32, !dbg !8501
  %cmp = icmp eq i32 %conv, 0, !dbg !8504
  br i1 %cmp, label %if.then, label %if.end4, !dbg !8505

if.then:                                          ; preds = %entry
  %4 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8506
  %type = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %4, i32 0, i32 4, !dbg !8508
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type, align 8, !dbg !8508
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 19, !dbg !8509
  %6 = load i16, i16* %flag, align 8, !dbg !8509
  %conv2 = sext i16 %6 to i32, !dbg !8506
  %and = and i32 %conv2, 2, !dbg !8510
  %tobool = icmp ne i32 %and, 0, !dbg !8510
  br i1 %tobool, label %if.then3, label %if.end, !dbg !8511

if.then3:                                         ; preds = %if.then
  %7 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8512
  %8 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8513
  call void @ED_undo_push_op(%struct.bContext* %7, %struct.wmOperator* %8), !dbg !8514
  br label %if.end, !dbg !8514

if.end:                                           ; preds = %if.then3, %if.then
  br label %if.end4, !dbg !8515

if.end4:                                          ; preds = %if.end, %entry
  %9 = load i8, i8* %repeat.addr, align 1, !dbg !8516
  %conv5 = zext i8 %9 to i32, !dbg !8516
  %cmp6 = icmp eq i32 %conv5, 0, !dbg !8518
  br i1 %cmp6, label %if.then8, label %if.end21, !dbg !8519

if.then8:                                         ; preds = %if.end4
  %10 = load i32, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 16), align 4, !dbg !8520
  %and9 = and i32 %10, 32, !dbg !8523
  %tobool10 = icmp ne i32 %and9, 0, !dbg !8523
  br i1 %tobool10, label %if.then11, label %if.end14, !dbg !8524

if.then11:                                        ; preds = %if.then8
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !8525, metadata !DIExpression()), !dbg !8527
  %11 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8528
  %12 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8529
  %call12 = call i8* @WM_operator_pystring(%struct.bContext* %11, %struct.wmOperator* %12, i8 zeroext 0, i8 zeroext 1), !dbg !8530
  store i8* %call12, i8** %buf, align 8, !dbg !8527
  %13 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8531
  %call13 = call %struct.ReportList* @CTX_wm_reports(%struct.bContext* %13), !dbg !8532
  %14 = load i8*, i8** %buf, align 8, !dbg !8533
  call void @BKE_report(%struct.ReportList* %call13, i32 4, i8* %14), !dbg !8534
  %15 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !8535
  %16 = load i8*, i8** %buf, align 8, !dbg !8536
  call void %15(i8* %16), !dbg !8535
  br label %if.end14, !dbg !8537

if.end14:                                         ; preds = %if.then11, %if.then8
  %17 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !8538
  %18 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8540
  %type15 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %18, i32 0, i32 4, !dbg !8541
  %19 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type15, align 8, !dbg !8541
  %call16 = call zeroext i8 @wm_operator_register_check(%struct.wmWindowManager* %17, %struct.wmOperatorType* %19), !dbg !8542
  %tobool17 = icmp ne i8 %call16, 0, !dbg !8542
  br i1 %tobool17, label %if.then18, label %if.else, !dbg !8543

if.then18:                                        ; preds = %if.end14
  %20 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8544
  %reports = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %20, i32 0, i32 8, !dbg !8546
  %21 = load %struct.ReportList*, %struct.ReportList** %reports, align 8, !dbg !8546
  %flag19 = getelementptr inbounds %struct.ReportList, %struct.ReportList* %21, i32 0, i32 3, !dbg !8547
  %22 = load i32, i32* %flag19, align 8, !dbg !8548
  %or = or i32 %22, 4, !dbg !8548
  store i32 %or, i32* %flag19, align 8, !dbg !8548
  %23 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8549
  %24 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8550
  call void @wm_operator_register(%struct.bContext* %23, %struct.wmOperator* %24), !dbg !8551
  %25 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8552
  call void @WM_operator_region_active_win_set(%struct.bContext* %25), !dbg !8553
  br label %if.end20, !dbg !8554

if.else:                                          ; preds = %if.end14
  %26 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8555
  call void @WM_operator_free(%struct.wmOperator* %26), !dbg !8557
  br label %if.end20

if.end20:                                         ; preds = %if.else, %if.then18
  br label %if.end21, !dbg !8558

if.end21:                                         ; preds = %if.end20, %if.end4
  ret void, !dbg !8559
}

declare dso_local void @uiPupMenuReports(%struct.bContext*, %struct.ReportList*) #3

; Function Attrs: noinline nounwind uwtable
define internal void @wm_operator_print(%struct.bContext* %C, %struct.wmOperator* %op) #0 !dbg !8560 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %buf = alloca i8*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8561, metadata !DIExpression()), !dbg !8562
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !8563, metadata !DIExpression()), !dbg !8564
  call void @llvm.dbg.declare(metadata i8** %buf, metadata !8565, metadata !DIExpression()), !dbg !8566
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8567
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !8568
  %call = call i8* @WM_operator_pystring(%struct.bContext* %0, %struct.wmOperator* %1, i8 zeroext 0, i8 zeroext 1), !dbg !8569
  store i8* %call, i8** %buf, align 8, !dbg !8566
  %2 = load i8*, i8** %buf, align 8, !dbg !8570
  %call1 = call i32 @puts(i8* %2), !dbg !8571
  %3 = load void (i8*)*, void (i8*)** @MEM_freeN, align 8, !dbg !8572
  %4 = load i8*, i8** %buf, align 8, !dbg !8573
  call void %3(i8* %4), !dbg !8572
  ret void, !dbg !8574
}

declare dso_local void @BKE_reports_print(%struct.ReportList*, i32) #3

declare dso_local i8* @WM_operator_pystring(%struct.bContext*, %struct.wmOperator*, i8 zeroext, i8 zeroext) #3

declare dso_local i32 @puts(i8*) #3

declare dso_local void @ED_undo_push_op(%struct.bContext*, %struct.wmOperator*) #3

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @wm_operator_register_check(%struct.wmWindowManager* %wm, %struct.wmOperatorType* %ot) #0 !dbg !8575 {
entry:
  %wm.addr = alloca %struct.wmWindowManager*, align 8
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  store %struct.wmWindowManager* %wm, %struct.wmWindowManager** %wm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmWindowManager** %wm.addr, metadata !8578, metadata !DIExpression()), !dbg !8579
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !8580, metadata !DIExpression()), !dbg !8581
  %0 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm.addr, align 8, !dbg !8582
  %tobool = icmp ne %struct.wmWindowManager* %0, null, !dbg !8582
  br i1 %tobool, label %land.lhs.true, label %land.end, !dbg !8583

land.lhs.true:                                    ; preds = %entry
  %1 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm.addr, align 8, !dbg !8584
  %op_undo_depth = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %1, i32 0, i32 6, !dbg !8585
  %2 = load i16, i16* %op_undo_depth, align 2, !dbg !8585
  %conv = sext i16 %2 to i32, !dbg !8584
  %cmp = icmp eq i32 %conv, 0, !dbg !8586
  br i1 %cmp, label %land.rhs, label %land.end, !dbg !8587

land.rhs:                                         ; preds = %land.lhs.true
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8588
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 19, !dbg !8589
  %4 = load i16, i16* %flag, align 8, !dbg !8589
  %conv2 = sext i16 %4 to i32, !dbg !8588
  %and = and i32 %conv2, 1, !dbg !8590
  %tobool3 = icmp ne i32 %and, 0, !dbg !8587
  br label %land.end

land.end:                                         ; preds = %land.rhs, %land.lhs.true, %entry
  %5 = phi i1 [ false, %land.lhs.true ], [ false, %entry ], [ %tobool3, %land.rhs ], !dbg !8591
  %land.ext = zext i1 %5 to i32, !dbg !8587
  %conv4 = trunc i32 %land.ext to i8, !dbg !8582
  ret i8 %conv4, !dbg !8592
}

declare dso_local void @wm_operator_register(%struct.bContext*, %struct.wmOperator*) #3

declare dso_local %struct.ARegion* @BKE_area_find_region_active_win(%struct.ScrArea*) #3

declare dso_local %struct.ARegion* @BKE_area_find_region_type(%struct.ScrArea*, i32) #3

; Function Attrs: noinline nounwind uwtable
define internal i32 @wm_operator_invoke(%struct.bContext* %C, %struct.wmOperatorType* %ot, %struct.wmEvent* %event, %struct.PointerRNA* %properties, %struct.ReportList* %reports, i8 zeroext %poll_only) #0 !dbg !8593 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %properties.addr = alloca %struct.PointerRNA*, align 8
  %reports.addr = alloca %struct.ReportList*, align 8
  %poll_only.addr = alloca i8, align 1
  %retval1 = alloca i32, align 4
  %wm = alloca %struct.wmWindowManager*, align 8
  %op = alloca %struct.wmOperator*, align 8
  %is_nested_call = alloca i8, align 1
  %bounds = alloca [4 x i32], align 16
  %wrap = alloca i8, align 1
  %ar = alloca %struct.ARegion*, align 8
  %winrect = alloca %struct.rcti*, align 8
  %ar180 = alloca %struct.ARegion*, align 8
  %sa = alloca %struct.ScrArea*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !8596, metadata !DIExpression()), !dbg !8597
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !8598, metadata !DIExpression()), !dbg !8599
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !8600, metadata !DIExpression()), !dbg !8601
  store %struct.PointerRNA* %properties, %struct.PointerRNA** %properties.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %properties.addr, metadata !8602, metadata !DIExpression()), !dbg !8603
  store %struct.ReportList* %reports, %struct.ReportList** %reports.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ReportList** %reports.addr, metadata !8604, metadata !DIExpression()), !dbg !8605
  store i8 %poll_only, i8* %poll_only.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %poll_only.addr, metadata !8606, metadata !DIExpression()), !dbg !8607
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !8608, metadata !DIExpression()), !dbg !8609
  store i32 8, i32* %retval1, align 4, !dbg !8609
  %0 = load i8, i8* %poll_only.addr, align 1, !dbg !8610
  %tobool = icmp ne i8 %0, 0, !dbg !8610
  br i1 %tobool, label %if.then, label %if.end, !dbg !8612

if.then:                                          ; preds = %entry
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8613
  %2 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8614
  %call = call i32 @WM_operator_poll(%struct.bContext* %1, %struct.wmOperatorType* %2), !dbg !8615
  store i32 %call, i32* %retval, align 4, !dbg !8616
  br label %return, !dbg !8616

if.end:                                           ; preds = %entry
  %3 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8617
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8619
  %call2 = call i32 @WM_operator_poll(%struct.bContext* %3, %struct.wmOperatorType* %4), !dbg !8620
  %tobool3 = icmp ne i32 %call2, 0, !dbg !8620
  br i1 %tobool3, label %if.then4, label %if.end215, !dbg !8621

if.then4:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.wmWindowManager** %wm, metadata !8622, metadata !DIExpression()), !dbg !8624
  %5 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8625
  %call5 = call %struct.wmWindowManager* @CTX_wm_manager(%struct.bContext* %5), !dbg !8626
  store %struct.wmWindowManager* %call5, %struct.wmWindowManager** %wm, align 8, !dbg !8624
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op, metadata !8627, metadata !DIExpression()), !dbg !8628
  %6 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !8629
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8630
  %8 = load %struct.PointerRNA*, %struct.PointerRNA** %properties.addr, align 8, !dbg !8631
  %9 = load %struct.ReportList*, %struct.ReportList** %reports.addr, align 8, !dbg !8632
  %call6 = call %struct.wmOperator* @wm_operator_create(%struct.wmWindowManager* %6, %struct.wmOperatorType* %7, %struct.PointerRNA* %8, %struct.ReportList* %9), !dbg !8633
  store %struct.wmOperator* %call6, %struct.wmOperator** %op, align 8, !dbg !8628
  call void @llvm.dbg.declare(metadata i8* %is_nested_call, metadata !8634, metadata !DIExpression()), !dbg !8635
  %10 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !8636
  %op_undo_depth = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %10, i32 0, i32 6, !dbg !8637
  %11 = load i16, i16* %op_undo_depth, align 2, !dbg !8637
  %conv = sext i16 %11 to i32, !dbg !8636
  %cmp = icmp ne i32 %conv, 0, !dbg !8638
  %conv7 = zext i1 %cmp to i32, !dbg !8638
  %conv8 = trunc i32 %conv7 to i8, !dbg !8639
  store i8 %conv8, i8* %is_nested_call, align 1, !dbg !8635
  %12 = load %struct.wmOperator*, %struct.wmOperator** %op, align 8, !dbg !8640
  %flag = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %12, i32 0, i32 12, !dbg !8641
  %13 = load i16, i16* %flag, align 8, !dbg !8642
  %conv9 = sext i16 %13 to i32, !dbg !8642
  %or = or i32 %conv9, 2, !dbg !8642
  %conv10 = trunc i32 %or to i16, !dbg !8642
  store i16 %conv10, i16* %flag, align 8, !dbg !8642
  %14 = load i8, i8* %is_nested_call, align 1, !dbg !8643
  %tobool11 = icmp ne i8 %14, 0, !dbg !8643
  br i1 %tobool11, label %if.end14, label %if.then12, !dbg !8645

if.then12:                                        ; preds = %if.then4
  %15 = load %struct.wmOperator*, %struct.wmOperator** %op, align 8, !dbg !8646
  %call13 = call zeroext i8 @WM_operator_last_properties_init(%struct.wmOperator* %15), !dbg !8648
  br label %if.end14, !dbg !8649

if.end14:                                         ; preds = %if.then12, %if.then4
  %16 = load i32, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 16), align 4, !dbg !8650
  %and = and i32 %16, 16, !dbg !8652
  %tobool15 = icmp ne i32 %and, 0, !dbg !8652
  br i1 %tobool15, label %land.lhs.true, label %if.end28, !dbg !8653

land.lhs.true:                                    ; preds = %if.end14
  %17 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !8654
  %cmp16 = icmp eq %struct.wmEvent* %17, null, !dbg !8655
  br i1 %cmp16, label %if.then21, label %lor.lhs.false, !dbg !8656

lor.lhs.false:                                    ; preds = %land.lhs.true
  %18 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !8657
  %type = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %18, i32 0, i32 2, !dbg !8658
  %19 = load i16, i16* %type, align 8, !dbg !8658
  %conv18 = sext i16 %19 to i32, !dbg !8657
  %cmp19 = icmp ne i32 %conv18, 4, !dbg !8659
  br i1 %cmp19, label %if.then21, label %if.end28, !dbg !8660

if.then21:                                        ; preds = %lor.lhs.false, %land.lhs.true
  %20 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !8661
  %tobool22 = icmp ne %struct.wmEvent* %20, null, !dbg !8661
  br i1 %tobool22, label %cond.true, label %cond.false, !dbg !8661

cond.true:                                        ; preds = %if.then21
  %21 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !8663
  %type23 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %21, i32 0, i32 2, !dbg !8664
  %22 = load i16, i16* %type23, align 8, !dbg !8664
  %conv24 = sext i16 %22 to i32, !dbg !8663
  br label %cond.end, !dbg !8661

cond.false:                                       ; preds = %if.then21
  br label %cond.end, !dbg !8661

cond.end:                                         ; preds = %cond.false, %cond.true
  %cond = phi i32 [ %conv24, %cond.true ], [ 0, %cond.false ], !dbg !8661
  %23 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8665
  %call25 = call %struct.bScreen* @CTX_wm_screen(%struct.bContext* %23), !dbg !8666
  %subwinactive = getelementptr inbounds %struct.bScreen, %struct.bScreen* %call25, i32 0, i32 19, !dbg !8667
  %24 = load i16, i16* %subwinactive, align 4, !dbg !8667
  %conv26 = sext i16 %24 to i32, !dbg !8666
  %25 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8668
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %25, i32 0, i32 1, !dbg !8669
  %26 = load i8*, i8** %idname, align 8, !dbg !8669
  %call27 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.22, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.wm_operator_invoke, i64 0, i64 0), i32 %cond, i32 %conv26, i8* %26), !dbg !8670
  br label %if.end28, !dbg !8671

if.end28:                                         ; preds = %cond.end, %lor.lhs.false, %if.end14
  %27 = load %struct.wmOperator*, %struct.wmOperator** %op, align 8, !dbg !8672
  %type29 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %27, i32 0, i32 4, !dbg !8674
  %28 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type29, align 8, !dbg !8674
  %invoke = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %28, i32 0, i32 6, !dbg !8675
  %29 = load i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)*, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke, align 8, !dbg !8675
  %tobool30 = icmp ne i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* %29, null, !dbg !8672
  br i1 %tobool30, label %land.lhs.true31, label %if.else, !dbg !8676

land.lhs.true31:                                  ; preds = %if.end28
  %30 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !8677
  %tobool32 = icmp ne %struct.wmEvent* %30, null, !dbg !8677
  br i1 %tobool32, label %if.then33, label %if.else, !dbg !8678

if.then33:                                        ; preds = %land.lhs.true31
  %31 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8679
  %32 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !8681
  call void @wm_region_mouse_co(%struct.bContext* %31, %struct.wmEvent* %32), !dbg !8682
  %33 = load %struct.wmOperator*, %struct.wmOperator** %op, align 8, !dbg !8683
  %type34 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %33, i32 0, i32 4, !dbg !8685
  %34 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type34, align 8, !dbg !8685
  %flag35 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %34, i32 0, i32 19, !dbg !8686
  %35 = load i16, i16* %flag35, align 8, !dbg !8686
  %conv36 = sext i16 %35 to i32, !dbg !8683
  %and37 = and i32 %conv36, 2, !dbg !8687
  %tobool38 = icmp ne i32 %and37, 0, !dbg !8687
  br i1 %tobool38, label %if.then39, label %if.end41, !dbg !8688

if.then39:                                        ; preds = %if.then33
  %36 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !8689
  %op_undo_depth40 = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %36, i32 0, i32 6, !dbg !8690
  %37 = load i16, i16* %op_undo_depth40, align 2, !dbg !8691
  %inc = add i16 %37, 1, !dbg !8691
  store i16 %inc, i16* %op_undo_depth40, align 2, !dbg !8691
  br label %if.end41, !dbg !8689

if.end41:                                         ; preds = %if.then39, %if.then33
  %38 = load %struct.wmOperator*, %struct.wmOperator** %op, align 8, !dbg !8692
  %type42 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %38, i32 0, i32 4, !dbg !8693
  %39 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type42, align 8, !dbg !8693
  %invoke43 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %39, i32 0, i32 6, !dbg !8694
  %40 = load i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)*, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %invoke43, align 8, !dbg !8694
  %41 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8695
  %42 = load %struct.wmOperator*, %struct.wmOperator** %op, align 8, !dbg !8696
  %43 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !8697
  %call44 = call i32 %40(%struct.bContext* %41, %struct.wmOperator* %42, %struct.wmEvent* %43), !dbg !8692
  store i32 %call44, i32* %retval1, align 4, !dbg !8698
  %44 = load i32, i32* %retval1, align 4, !dbg !8699
  %45 = load %struct.wmOperator*, %struct.wmOperator** %op, align 8, !dbg !8700
  %type45 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %45, i32 0, i32 4, !dbg !8702
  %46 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type45, align 8, !dbg !8702
  %flag46 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %46, i32 0, i32 19, !dbg !8703
  %47 = load i16, i16* %flag46, align 8, !dbg !8703
  %conv47 = sext i16 %47 to i32, !dbg !8700
  %and48 = and i32 %conv47, 2, !dbg !8704
  %tobool49 = icmp ne i32 %and48, 0, !dbg !8704
  br i1 %tobool49, label %land.lhs.true50, label %if.end56, !dbg !8705

land.lhs.true50:                                  ; preds = %if.end41
  %48 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8706
  %call51 = call %struct.wmWindowManager* @CTX_wm_manager(%struct.bContext* %48), !dbg !8707
  %49 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !8708
  %cmp52 = icmp eq %struct.wmWindowManager* %call51, %49, !dbg !8709
  br i1 %cmp52, label %if.then54, label %if.end56, !dbg !8710

if.then54:                                        ; preds = %land.lhs.true50
  %50 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !8711
  %op_undo_depth55 = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %50, i32 0, i32 6, !dbg !8712
  %51 = load i16, i16* %op_undo_depth55, align 2, !dbg !8713
  %dec = add i16 %51, -1, !dbg !8713
  store i16 %dec, i16* %op_undo_depth55, align 2, !dbg !8713
  br label %if.end56, !dbg !8711

if.end56:                                         ; preds = %if.then54, %land.lhs.true50, %if.end41
  br label %if.end89, !dbg !8714

if.else:                                          ; preds = %land.lhs.true31, %if.end28
  %52 = load %struct.wmOperator*, %struct.wmOperator** %op, align 8, !dbg !8715
  %type57 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %52, i32 0, i32 4, !dbg !8717
  %53 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type57, align 8, !dbg !8717
  %exec = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %53, i32 0, i32 4, !dbg !8718
  %54 = load i32 (%struct.bContext*, %struct.wmOperator*)*, i32 (%struct.bContext*, %struct.wmOperator*)** %exec, align 8, !dbg !8718
  %tobool58 = icmp ne i32 (%struct.bContext*, %struct.wmOperator*)* %54, null, !dbg !8715
  br i1 %tobool58, label %if.then59, label %if.else85, !dbg !8719

if.then59:                                        ; preds = %if.else
  %55 = load %struct.wmOperator*, %struct.wmOperator** %op, align 8, !dbg !8720
  %type60 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %55, i32 0, i32 4, !dbg !8723
  %56 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type60, align 8, !dbg !8723
  %flag61 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %56, i32 0, i32 19, !dbg !8724
  %57 = load i16, i16* %flag61, align 8, !dbg !8724
  %conv62 = sext i16 %57 to i32, !dbg !8720
  %and63 = and i32 %conv62, 2, !dbg !8725
  %tobool64 = icmp ne i32 %and63, 0, !dbg !8725
  br i1 %tobool64, label %if.then65, label %if.end68, !dbg !8726

if.then65:                                        ; preds = %if.then59
  %58 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !8727
  %op_undo_depth66 = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %58, i32 0, i32 6, !dbg !8728
  %59 = load i16, i16* %op_undo_depth66, align 2, !dbg !8729
  %inc67 = add i16 %59, 1, !dbg !8729
  store i16 %inc67, i16* %op_undo_depth66, align 2, !dbg !8729
  br label %if.end68, !dbg !8727

if.end68:                                         ; preds = %if.then65, %if.then59
  %60 = load %struct.wmOperator*, %struct.wmOperator** %op, align 8, !dbg !8730
  %type69 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %60, i32 0, i32 4, !dbg !8731
  %61 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type69, align 8, !dbg !8731
  %exec70 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %61, i32 0, i32 4, !dbg !8732
  %62 = load i32 (%struct.bContext*, %struct.wmOperator*)*, i32 (%struct.bContext*, %struct.wmOperator*)** %exec70, align 8, !dbg !8732
  %63 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8733
  %64 = load %struct.wmOperator*, %struct.wmOperator** %op, align 8, !dbg !8734
  %call71 = call i32 %62(%struct.bContext* %63, %struct.wmOperator* %64), !dbg !8730
  store i32 %call71, i32* %retval1, align 4, !dbg !8735
  %65 = load i32, i32* %retval1, align 4, !dbg !8736
  %66 = load %struct.wmOperator*, %struct.wmOperator** %op, align 8, !dbg !8737
  %type72 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %66, i32 0, i32 4, !dbg !8739
  %67 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type72, align 8, !dbg !8739
  %flag73 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %67, i32 0, i32 19, !dbg !8740
  %68 = load i16, i16* %flag73, align 8, !dbg !8740
  %conv74 = sext i16 %68 to i32, !dbg !8737
  %and75 = and i32 %conv74, 2, !dbg !8741
  %tobool76 = icmp ne i32 %and75, 0, !dbg !8741
  br i1 %tobool76, label %land.lhs.true77, label %if.end84, !dbg !8742

land.lhs.true77:                                  ; preds = %if.end68
  %69 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8743
  %call78 = call %struct.wmWindowManager* @CTX_wm_manager(%struct.bContext* %69), !dbg !8744
  %70 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !8745
  %cmp79 = icmp eq %struct.wmWindowManager* %call78, %70, !dbg !8746
  br i1 %cmp79, label %if.then81, label %if.end84, !dbg !8747

if.then81:                                        ; preds = %land.lhs.true77
  %71 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !8748
  %op_undo_depth82 = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %71, i32 0, i32 6, !dbg !8749
  %72 = load i16, i16* %op_undo_depth82, align 2, !dbg !8750
  %dec83 = add i16 %72, -1, !dbg !8750
  store i16 %dec83, i16* %op_undo_depth82, align 2, !dbg !8750
  br label %if.end84, !dbg !8748

if.end84:                                         ; preds = %if.then81, %land.lhs.true77, %if.end68
  br label %if.end88, !dbg !8751

if.else85:                                        ; preds = %if.else
  %73 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8752
  %idname86 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %73, i32 0, i32 1, !dbg !8754
  %74 = load i8*, i8** %idname86, align 8, !dbg !8754
  %call87 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.23, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @__func__.wm_operator_invoke, i64 0, i64 0), i8* %74), !dbg !8755
  br label %if.end88

if.end88:                                         ; preds = %if.else85, %if.end84
  br label %if.end89

if.end89:                                         ; preds = %if.end88, %if.end56
  %75 = load i32, i32* %retval1, align 4, !dbg !8756
  %and90 = and i32 %75, 16, !dbg !8758
  %tobool91 = icmp ne i32 %and90, 0, !dbg !8758
  br i1 %tobool91, label %if.end99, label %land.lhs.true92, !dbg !8759

land.lhs.true92:                                  ; preds = %if.end89
  %76 = load i32, i32* %retval1, align 4, !dbg !8760
  %and93 = and i32 %76, 6, !dbg !8761
  %tobool94 = icmp ne i32 %and93, 0, !dbg !8761
  br i1 %tobool94, label %if.then95, label %if.end99, !dbg !8762

if.then95:                                        ; preds = %land.lhs.true92
  %77 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8763
  %78 = load %struct.wmOperator*, %struct.wmOperator** %op, align 8, !dbg !8765
  %79 = load i32, i32* %retval1, align 4, !dbg !8766
  %80 = load %struct.ReportList*, %struct.ReportList** %reports.addr, align 8, !dbg !8767
  %cmp96 = icmp ne %struct.ReportList* %80, null, !dbg !8768
  %conv97 = zext i1 %cmp96 to i32, !dbg !8768
  %conv98 = trunc i32 %conv97 to i8, !dbg !8769
  call void @wm_operator_reports(%struct.bContext* %77, %struct.wmOperator* %78, i32 %79, i8 zeroext %conv98), !dbg !8770
  br label %if.end99, !dbg !8771

if.end99:                                         ; preds = %if.then95, %land.lhs.true92, %if.end89
  %81 = load i32, i32* %retval1, align 4, !dbg !8772
  %and100 = and i32 %81, 16, !dbg !8774
  %tobool101 = icmp ne i32 %and100, 0, !dbg !8774
  br i1 %tobool101, label %if.then102, label %if.else103, !dbg !8775

if.then102:                                       ; preds = %if.end99
  br label %if.end214, !dbg !8776

if.else103:                                       ; preds = %if.end99
  %82 = load i32, i32* %retval1, align 4, !dbg !8778
  %and104 = and i32 %82, 4, !dbg !8780
  %tobool105 = icmp ne i32 %and104, 0, !dbg !8780
  br i1 %tobool105, label %if.then106, label %if.else111, !dbg !8781

if.then106:                                       ; preds = %if.else103
  %83 = load i8, i8* %is_nested_call, align 1, !dbg !8782
  %tobool107 = icmp ne i8 %83, 0, !dbg !8782
  br i1 %tobool107, label %if.end110, label %if.then108, !dbg !8785

if.then108:                                       ; preds = %if.then106
  %84 = load %struct.wmOperator*, %struct.wmOperator** %op, align 8, !dbg !8786
  %call109 = call zeroext i8 @WM_operator_last_properties_store(%struct.wmOperator* %84), !dbg !8788
  br label %if.end110, !dbg !8789

if.end110:                                        ; preds = %if.then108, %if.then106
  %85 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8790
  %86 = load %struct.wmOperator*, %struct.wmOperator** %op, align 8, !dbg !8791
  call void @wm_operator_finished(%struct.bContext* %85, %struct.wmOperator* %86, i8 zeroext 0), !dbg !8792
  br label %if.end213, !dbg !8793

if.else111:                                       ; preds = %if.else103
  %87 = load i32, i32* %retval1, align 4, !dbg !8794
  %and112 = and i32 %87, 1, !dbg !8796
  %tobool113 = icmp ne i32 %and112, 0, !dbg !8796
  br i1 %tobool113, label %if.then114, label %if.else211, !dbg !8797

if.then114:                                       ; preds = %if.else111
  %88 = load %struct.wmOperator*, %struct.wmOperator** %op, align 8, !dbg !8798
  %reports115 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %88, i32 0, i32 8, !dbg !8800
  %89 = load %struct.ReportList*, %struct.ReportList** %reports115, align 8, !dbg !8800
  %flag116 = getelementptr inbounds %struct.ReportList, %struct.ReportList* %89, i32 0, i32 3, !dbg !8801
  %90 = load i32, i32* %flag116, align 8, !dbg !8802
  %or117 = or i32 %90, 4, !dbg !8802
  store i32 %or117, i32* %flag116, align 8, !dbg !8802
  %91 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8803
  %flag118 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %91, i32 0, i32 19, !dbg !8805
  %92 = load i16, i16* %flag118, align 8, !dbg !8805
  %conv119 = sext i16 %92 to i32, !dbg !8803
  %and120 = and i32 %conv119, 4, !dbg !8806
  %tobool121 = icmp ne i32 %and120, 0, !dbg !8806
  br i1 %tobool121, label %if.then131, label %lor.lhs.false122, !dbg !8807

lor.lhs.false122:                                 ; preds = %if.then114
  %93 = load %struct.wmOperator*, %struct.wmOperator** %op, align 8, !dbg !8808
  %opm = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %93, i32 0, i32 10, !dbg !8809
  %94 = load %struct.wmOperator*, %struct.wmOperator** %opm, align 8, !dbg !8809
  %tobool123 = icmp ne %struct.wmOperator* %94, null, !dbg !8808
  br i1 %tobool123, label %land.lhs.true124, label %if.end210, !dbg !8810

land.lhs.true124:                                 ; preds = %lor.lhs.false122
  %95 = load %struct.wmOperator*, %struct.wmOperator** %op, align 8, !dbg !8811
  %opm125 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %95, i32 0, i32 10, !dbg !8812
  %96 = load %struct.wmOperator*, %struct.wmOperator** %opm125, align 8, !dbg !8812
  %type126 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %96, i32 0, i32 4, !dbg !8813
  %97 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type126, align 8, !dbg !8813
  %flag127 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %97, i32 0, i32 19, !dbg !8814
  %98 = load i16, i16* %flag127, align 8, !dbg !8814
  %conv128 = sext i16 %98 to i32, !dbg !8811
  %and129 = and i32 %conv128, 4, !dbg !8815
  %tobool130 = icmp ne i32 %and129, 0, !dbg !8815
  br i1 %tobool130, label %if.then131, label %if.end210, !dbg !8816

if.then131:                                       ; preds = %land.lhs.true124, %if.then114
  call void @llvm.dbg.declare(metadata [4 x i32]* %bounds, metadata !8817, metadata !DIExpression()), !dbg !8820
  %99 = bitcast [4 x i32]* %bounds to i8*, !dbg !8820
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %99, i8* align 16 bitcast ([4 x i32]* @__const.wm_operator_invoke.bounds to i8*), i64 16, i1 false), !dbg !8820
  call void @llvm.dbg.declare(metadata i8* %wrap, metadata !8821, metadata !DIExpression()), !dbg !8822
  %100 = load %struct.wmOperator*, %struct.wmOperator** %op, align 8, !dbg !8823
  %opm132 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %100, i32 0, i32 10, !dbg !8825
  %101 = load %struct.wmOperator*, %struct.wmOperator** %opm132, align 8, !dbg !8825
  %tobool133 = icmp ne %struct.wmOperator* %101, null, !dbg !8823
  br i1 %tobool133, label %if.then134, label %if.else149, !dbg !8826

if.then134:                                       ; preds = %if.then131
  %102 = load i32, i32* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 22), align 4, !dbg !8827
  %and135 = and i32 %102, 16777216, !dbg !8829
  %tobool136 = icmp ne i32 %and135, 0, !dbg !8829
  br i1 %tobool136, label %land.rhs, label %land.end, !dbg !8830

land.rhs:                                         ; preds = %if.then134
  %103 = load %struct.wmOperator*, %struct.wmOperator** %op, align 8, !dbg !8831
  %opm137 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %103, i32 0, i32 10, !dbg !8832
  %104 = load %struct.wmOperator*, %struct.wmOperator** %opm137, align 8, !dbg !8832
  %flag138 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %104, i32 0, i32 12, !dbg !8833
  %105 = load i16, i16* %flag138, align 8, !dbg !8833
  %conv139 = sext i16 %105 to i32, !dbg !8831
  %and140 = and i32 %conv139, 1, !dbg !8834
  %tobool141 = icmp ne i32 %and140, 0, !dbg !8834
  br i1 %tobool141, label %lor.end, label %lor.rhs, !dbg !8835

lor.rhs:                                          ; preds = %land.rhs
  %106 = load %struct.wmOperator*, %struct.wmOperator** %op, align 8, !dbg !8836
  %opm142 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %106, i32 0, i32 10, !dbg !8837
  %107 = load %struct.wmOperator*, %struct.wmOperator** %opm142, align 8, !dbg !8837
  %type143 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %107, i32 0, i32 4, !dbg !8838
  %108 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type143, align 8, !dbg !8838
  %flag144 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %108, i32 0, i32 19, !dbg !8839
  %109 = load i16, i16* %flag144, align 8, !dbg !8839
  %conv145 = sext i16 %109 to i32, !dbg !8836
  %and146 = and i32 %conv145, 16, !dbg !8840
  %tobool147 = icmp ne i32 %and146, 0, !dbg !8835
  br label %lor.end, !dbg !8835

lor.end:                                          ; preds = %lor.rhs, %land.rhs
  %110 = phi i1 [ true, %land.rhs ], [ %tobool147, %lor.rhs ]
  br label %land.end

land.end:                                         ; preds = %lor.end, %if.then134
  %111 = phi i1 [ false, %if.then134 ], [ %110, %lor.end ], !dbg !8841
  %land.ext = zext i1 %111 to i32, !dbg !8830
  %conv148 = trunc i32 %land.ext to i8, !dbg !8842
  store i8 %conv148, i8* %wrap, align 1, !dbg !8843
  br label %if.end166, !dbg !8844

if.else149:                                       ; preds = %if.then131
  %112 = load i32, i32* getelementptr inbounds (%struct.UserDef, %struct.UserDef* @U, i32 0, i32 22), align 4, !dbg !8845
  %and150 = and i32 %112, 16777216, !dbg !8847
  %tobool151 = icmp ne i32 %and150, 0, !dbg !8847
  br i1 %tobool151, label %land.rhs152, label %land.end163, !dbg !8848

land.rhs152:                                      ; preds = %if.else149
  %113 = load %struct.wmOperator*, %struct.wmOperator** %op, align 8, !dbg !8849
  %flag153 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %113, i32 0, i32 12, !dbg !8850
  %114 = load i16, i16* %flag153, align 8, !dbg !8850
  %conv154 = sext i16 %114 to i32, !dbg !8849
  %and155 = and i32 %conv154, 1, !dbg !8851
  %tobool156 = icmp ne i32 %and155, 0, !dbg !8851
  br i1 %tobool156, label %lor.end162, label %lor.rhs157, !dbg !8852

lor.rhs157:                                       ; preds = %land.rhs152
  %115 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8853
  %flag158 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %115, i32 0, i32 19, !dbg !8854
  %116 = load i16, i16* %flag158, align 8, !dbg !8854
  %conv159 = sext i16 %116 to i32, !dbg !8853
  %and160 = and i32 %conv159, 16, !dbg !8855
  %tobool161 = icmp ne i32 %and160, 0, !dbg !8852
  br label %lor.end162, !dbg !8852

lor.end162:                                       ; preds = %lor.rhs157, %land.rhs152
  %117 = phi i1 [ true, %land.rhs152 ], [ %tobool161, %lor.rhs157 ]
  br label %land.end163

land.end163:                                      ; preds = %lor.end162, %if.else149
  %118 = phi i1 [ false, %if.else149 ], [ %117, %lor.end162 ], !dbg !8856
  %land.ext164 = zext i1 %118 to i32, !dbg !8848
  %conv165 = trunc i32 %land.ext164 to i8, !dbg !8857
  store i8 %conv165, i8* %wrap, align 1, !dbg !8858
  br label %if.end166

if.end166:                                        ; preds = %land.end163, %land.end
  %119 = load i8, i8* %wrap, align 1, !dbg !8859
  %tobool167 = icmp ne i8 %119, 0, !dbg !8859
  br i1 %tobool167, label %if.then168, label %if.end177, !dbg !8861

if.then168:                                       ; preds = %if.end166
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar, metadata !8862, metadata !DIExpression()), !dbg !8864
  %120 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8865
  %call169 = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %120), !dbg !8866
  store %struct.ARegion* %call169, %struct.ARegion** %ar, align 8, !dbg !8864
  %121 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !8867
  %tobool170 = icmp ne %struct.ARegion* %121, null, !dbg !8867
  br i1 %tobool170, label %land.lhs.true171, label %if.end176, !dbg !8869

land.lhs.true171:                                 ; preds = %if.then168
  %122 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !8870
  %regiontype = getelementptr inbounds %struct.ARegion, %struct.ARegion* %122, i32 0, i32 8, !dbg !8871
  %123 = load i16, i16* %regiontype, align 2, !dbg !8871
  %conv172 = sext i16 %123 to i32, !dbg !8870
  %cmp173 = icmp eq i32 %conv172, 1, !dbg !8872
  br i1 %cmp173, label %if.then175, label %if.end176, !dbg !8873

if.then175:                                       ; preds = %land.lhs.true171
  store i8 0, i8* %wrap, align 1, !dbg !8874
  br label %if.end176, !dbg !8876

if.end176:                                        ; preds = %if.then175, %land.lhs.true171, %if.then168
  br label %if.end177, !dbg !8877

if.end177:                                        ; preds = %if.end176, %if.end166
  %124 = load i8, i8* %wrap, align 1, !dbg !8878
  %tobool178 = icmp ne i8 %124, 0, !dbg !8878
  br i1 %tobool178, label %if.then179, label %if.end208, !dbg !8880

if.then179:                                       ; preds = %if.end177
  call void @llvm.dbg.declare(metadata %struct.rcti** %winrect, metadata !8881, metadata !DIExpression()), !dbg !8883
  store %struct.rcti* null, %struct.rcti** %winrect, align 8, !dbg !8883
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar180, metadata !8884, metadata !DIExpression()), !dbg !8885
  %125 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8886
  %call181 = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %125), !dbg !8887
  store %struct.ARegion* %call181, %struct.ARegion** %ar180, align 8, !dbg !8885
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %sa, metadata !8888, metadata !DIExpression()), !dbg !8889
  %126 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8890
  %call182 = call %struct.ScrArea* @CTX_wm_area(%struct.bContext* %126), !dbg !8891
  store %struct.ScrArea* %call182, %struct.ScrArea** %sa, align 8, !dbg !8889
  %127 = load %struct.ARegion*, %struct.ARegion** %ar180, align 8, !dbg !8892
  %tobool183 = icmp ne %struct.ARegion* %127, null, !dbg !8892
  br i1 %tobool183, label %land.lhs.true184, label %if.else197, !dbg !8894

land.lhs.true184:                                 ; preds = %if.then179
  %128 = load %struct.ARegion*, %struct.ARegion** %ar180, align 8, !dbg !8895
  %regiontype185 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %128, i32 0, i32 8, !dbg !8896
  %129 = load i16, i16* %regiontype185, align 2, !dbg !8896
  %conv186 = sext i16 %129 to i32, !dbg !8895
  %cmp187 = icmp eq i32 %conv186, 0, !dbg !8897
  br i1 %cmp187, label %land.lhs.true189, label %if.else197, !dbg !8898

land.lhs.true189:                                 ; preds = %land.lhs.true184
  %130 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !8899
  %tobool190 = icmp ne %struct.wmEvent* %130, null, !dbg !8899
  br i1 %tobool190, label %land.lhs.true191, label %if.else197, !dbg !8900

land.lhs.true191:                                 ; preds = %land.lhs.true189
  %131 = load %struct.ARegion*, %struct.ARegion** %ar180, align 8, !dbg !8901
  %winrct = getelementptr inbounds %struct.ARegion, %struct.ARegion* %131, i32 0, i32 3, !dbg !8902
  %132 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !8903
  %x = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %132, i32 0, i32 4, !dbg !8904
  %call192 = call zeroext i8 @BLI_rcti_isect_pt_v(%struct.rcti* %winrct, i32* %x), !dbg !8905
  %conv193 = zext i8 %call192 to i32, !dbg !8905
  %tobool194 = icmp ne i32 %conv193, 0, !dbg !8905
  br i1 %tobool194, label %if.then195, label %if.else197, !dbg !8906

if.then195:                                       ; preds = %land.lhs.true191
  %133 = load %struct.ARegion*, %struct.ARegion** %ar180, align 8, !dbg !8907
  %winrct196 = getelementptr inbounds %struct.ARegion, %struct.ARegion* %133, i32 0, i32 3, !dbg !8909
  store %struct.rcti* %winrct196, %struct.rcti** %winrect, align 8, !dbg !8910
  br label %if.end201, !dbg !8911

if.else197:                                       ; preds = %land.lhs.true191, %land.lhs.true189, %land.lhs.true184, %if.then179
  %134 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !8912
  %tobool198 = icmp ne %struct.ScrArea* %134, null, !dbg !8912
  br i1 %tobool198, label %if.then199, label %if.end200, !dbg !8914

if.then199:                                       ; preds = %if.else197
  %135 = load %struct.ScrArea*, %struct.ScrArea** %sa, align 8, !dbg !8915
  %totrct = getelementptr inbounds %struct.ScrArea, %struct.ScrArea* %135, i32 0, i32 7, !dbg !8917
  store %struct.rcti* %totrct, %struct.rcti** %winrect, align 8, !dbg !8918
  br label %if.end200, !dbg !8919

if.end200:                                        ; preds = %if.then199, %if.else197
  br label %if.end201

if.end201:                                        ; preds = %if.end200, %if.then195
  %136 = load %struct.rcti*, %struct.rcti** %winrect, align 8, !dbg !8920
  %tobool202 = icmp ne %struct.rcti* %136, null, !dbg !8920
  br i1 %tobool202, label %if.then203, label %if.end207, !dbg !8922

if.then203:                                       ; preds = %if.end201
  %137 = load %struct.rcti*, %struct.rcti** %winrect, align 8, !dbg !8923
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %137, i32 0, i32 0, !dbg !8925
  %138 = load i32, i32* %xmin, align 4, !dbg !8925
  %arrayidx = getelementptr inbounds [4 x i32], [4 x i32]* %bounds, i64 0, i64 0, !dbg !8926
  store i32 %138, i32* %arrayidx, align 16, !dbg !8927
  %139 = load %struct.rcti*, %struct.rcti** %winrect, align 8, !dbg !8928
  %ymax = getelementptr inbounds %struct.rcti, %struct.rcti* %139, i32 0, i32 3, !dbg !8929
  %140 = load i32, i32* %ymax, align 4, !dbg !8929
  %arrayidx204 = getelementptr inbounds [4 x i32], [4 x i32]* %bounds, i64 0, i64 1, !dbg !8930
  store i32 %140, i32* %arrayidx204, align 4, !dbg !8931
  %141 = load %struct.rcti*, %struct.rcti** %winrect, align 8, !dbg !8932
  %xmax = getelementptr inbounds %struct.rcti, %struct.rcti* %141, i32 0, i32 1, !dbg !8933
  %142 = load i32, i32* %xmax, align 4, !dbg !8933
  %arrayidx205 = getelementptr inbounds [4 x i32], [4 x i32]* %bounds, i64 0, i64 2, !dbg !8934
  store i32 %142, i32* %arrayidx205, align 8, !dbg !8935
  %143 = load %struct.rcti*, %struct.rcti** %winrect, align 8, !dbg !8936
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %143, i32 0, i32 2, !dbg !8937
  %144 = load i32, i32* %ymin, align 4, !dbg !8937
  %arrayidx206 = getelementptr inbounds [4 x i32], [4 x i32]* %bounds, i64 0, i64 3, !dbg !8938
  store i32 %144, i32* %arrayidx206, align 4, !dbg !8939
  br label %if.end207, !dbg !8940

if.end207:                                        ; preds = %if.then203, %if.end201
  br label %if.end208, !dbg !8941

if.end208:                                        ; preds = %if.end207, %if.end177
  %145 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8942
  %call209 = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %145), !dbg !8943
  %146 = load i8, i8* %wrap, align 1, !dbg !8944
  %arraydecay = getelementptr inbounds [4 x i32], [4 x i32]* %bounds, i64 0, i64 0, !dbg !8945
  call void @WM_cursor_grab_enable(%struct.wmWindow* %call209, i8 zeroext %146, i8 zeroext 0, i32* %arraydecay), !dbg !8946
  br label %if.end210, !dbg !8947

if.end210:                                        ; preds = %if.end208, %land.lhs.true124, %lor.lhs.false122
  %147 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !8948
  call void @wm_handler_ui_cancel(%struct.bContext* %147), !dbg !8949
  br label %if.end212, !dbg !8950

if.else211:                                       ; preds = %if.else111
  %148 = load %struct.wmOperator*, %struct.wmOperator** %op, align 8, !dbg !8951
  call void @WM_operator_free(%struct.wmOperator* %148), !dbg !8953
  br label %if.end212

if.end212:                                        ; preds = %if.else211, %if.end210
  br label %if.end213

if.end213:                                        ; preds = %if.end212, %if.end110
  br label %if.end214

if.end214:                                        ; preds = %if.end213, %if.then102
  br label %if.end215, !dbg !8954

if.end215:                                        ; preds = %if.end214, %if.end
  %149 = load i32, i32* %retval1, align 4, !dbg !8955
  store i32 %149, i32* %retval, align 4, !dbg !8956
  br label %return, !dbg !8956

return:                                           ; preds = %if.end215, %if.then
  %150 = load i32, i32* %retval, align 4, !dbg !8957
  ret i32 %150, !dbg !8957
}

; Function Attrs: noinline nounwind uwtable
define internal %struct.wmOperator* @wm_operator_create(%struct.wmWindowManager* %wm, %struct.wmOperatorType* %ot, %struct.PointerRNA* %properties, %struct.ReportList* %reports) #0 !dbg !2 {
entry:
  %wm.addr = alloca %struct.wmWindowManager*, align 8
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  %properties.addr = alloca %struct.PointerRNA*, align 8
  %reports.addr = alloca %struct.ReportList*, align 8
  %op = alloca %struct.wmOperator*, align 8
  %val = alloca %union.IDPropertyTemplate, align 8
  %otmacro = alloca %struct.wmOperatorTypeMacro*, align 8
  %root = alloca i32, align 4
  %rna_macro_iter = alloca %struct.CollectionPropertyIterator, align 8
  %prop = alloca %struct.PropertyRNA*, align 8
  %otm = alloca %struct.wmOperatorType*, align 8
  %someptr = alloca %struct.PointerRNA, align 8
  %opm = alloca %struct.wmOperator*, align 8
  %otm58 = alloca %struct.wmOperatorType*, align 8
  %opm62 = alloca %struct.wmOperator*, align 8
  store %struct.wmWindowManager* %wm, %struct.wmWindowManager** %wm.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmWindowManager** %wm.addr, metadata !8958, metadata !DIExpression()), !dbg !8959
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !8960, metadata !DIExpression()), !dbg !8961
  store %struct.PointerRNA* %properties, %struct.PointerRNA** %properties.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %properties.addr, metadata !8962, metadata !DIExpression()), !dbg !8963
  store %struct.ReportList* %reports, %struct.ReportList** %reports.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ReportList** %reports.addr, metadata !8964, metadata !DIExpression()), !dbg !8965
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op, metadata !8966, metadata !DIExpression()), !dbg !8967
  %0 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !8968
  %1 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8969
  %idname = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %1, i32 0, i32 1, !dbg !8970
  %2 = load i8*, i8** %idname, align 8, !dbg !8970
  %call = call i8* %0(i64 168, i8* %2), !dbg !8968
  %3 = bitcast i8* %call to %struct.wmOperator*, !dbg !8968
  store %struct.wmOperator* %3, %struct.wmOperator** %op, align 8, !dbg !8967
  %4 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8971
  %5 = load %struct.wmOperator*, %struct.wmOperator** %op, align 8, !dbg !8972
  %type = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %5, i32 0, i32 4, !dbg !8973
  store %struct.wmOperatorType* %4, %struct.wmOperatorType** %type, align 8, !dbg !8974
  %6 = load %struct.wmOperator*, %struct.wmOperator** %op, align 8, !dbg !8975
  %idname1 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %6, i32 0, i32 2, !dbg !8976
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %idname1, i64 0, i64 0, !dbg !8975
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !8977
  %idname2 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %7, i32 0, i32 1, !dbg !8978
  %8 = load i8*, i8** %idname2, align 8, !dbg !8978
  %call3 = call i8* @BLI_strncpy(i8* %arraydecay, i8* %8, i64 64), !dbg !8979
  %9 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_callocN, align 8, !dbg !8980
  %call4 = call i8* %9(i64 24, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.24, i64 0, i64 0)), !dbg !8980
  %10 = bitcast i8* %call4 to %struct.PointerRNA*, !dbg !8980
  %11 = load %struct.wmOperator*, %struct.wmOperator** %op, align 8, !dbg !8981
  %ptr = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %11, i32 0, i32 7, !dbg !8982
  store %struct.PointerRNA* %10, %struct.PointerRNA** %ptr, align 8, !dbg !8983
  %12 = load %struct.PointerRNA*, %struct.PointerRNA** %properties.addr, align 8, !dbg !8984
  %tobool = icmp ne %struct.PointerRNA* %12, null, !dbg !8984
  br i1 %tobool, label %land.lhs.true, label %if.else, !dbg !8986

land.lhs.true:                                    ; preds = %entry
  %13 = load %struct.PointerRNA*, %struct.PointerRNA** %properties.addr, align 8, !dbg !8987
  %data = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %13, i32 0, i32 2, !dbg !8988
  %14 = load i8*, i8** %data, align 8, !dbg !8988
  %tobool5 = icmp ne i8* %14, null, !dbg !8987
  br i1 %tobool5, label %if.then, label %if.else, !dbg !8989

if.then:                                          ; preds = %land.lhs.true
  %15 = load %struct.PointerRNA*, %struct.PointerRNA** %properties.addr, align 8, !dbg !8990
  %data6 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %15, i32 0, i32 2, !dbg !8992
  %16 = load i8*, i8** %data6, align 8, !dbg !8992
  %17 = bitcast i8* %16 to %struct.IDProperty*, !dbg !8990
  %call7 = call %struct.IDProperty* @IDP_CopyProperty(%struct.IDProperty* %17), !dbg !8993
  %18 = load %struct.wmOperator*, %struct.wmOperator** %op, align 8, !dbg !8994
  %properties8 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %18, i32 0, i32 3, !dbg !8995
  store %struct.IDProperty* %call7, %struct.IDProperty** %properties8, align 8, !dbg !8996
  br label %if.end, !dbg !8997

if.else:                                          ; preds = %land.lhs.true, %entry
  call void @llvm.dbg.declare(metadata %union.IDPropertyTemplate* %val, metadata !8998, metadata !DIExpression()), !dbg !9000
  %19 = bitcast %union.IDPropertyTemplate* %val to i8*, !dbg !9000
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 bitcast ({ i32, [12 x i8] }* @__const.wm_operator_create.val to i8*), i64 16, i1 false), !dbg !9000
  %call9 = call %struct.IDProperty* @IDP_New(i32 6, %union.IDPropertyTemplate* %val, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.4, i64 0, i64 0)), !dbg !9001
  %20 = load %struct.wmOperator*, %struct.wmOperator** %op, align 8, !dbg !9002
  %properties10 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %20, i32 0, i32 3, !dbg !9003
  store %struct.IDProperty* %call9, %struct.IDProperty** %properties10, align 8, !dbg !9004
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %21 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm.addr, align 8, !dbg !9005
  %id = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %21, i32 0, i32 0, !dbg !9006
  %22 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9007
  %srna = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %22, i32 0, i32 11, !dbg !9008
  %23 = load %struct.StructRNA*, %struct.StructRNA** %srna, align 8, !dbg !9008
  %24 = load %struct.wmOperator*, %struct.wmOperator** %op, align 8, !dbg !9009
  %properties11 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %24, i32 0, i32 3, !dbg !9010
  %25 = load %struct.IDProperty*, %struct.IDProperty** %properties11, align 8, !dbg !9010
  %26 = bitcast %struct.IDProperty* %25 to i8*, !dbg !9009
  %27 = load %struct.wmOperator*, %struct.wmOperator** %op, align 8, !dbg !9011
  %ptr12 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %27, i32 0, i32 7, !dbg !9012
  %28 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr12, align 8, !dbg !9012
  call void @RNA_pointer_create(%struct.ID* %id, %struct.StructRNA* %23, i8* %26, %struct.PointerRNA* %28), !dbg !9013
  %29 = load %struct.ReportList*, %struct.ReportList** %reports.addr, align 8, !dbg !9014
  %tobool13 = icmp ne %struct.ReportList* %29, null, !dbg !9014
  br i1 %tobool13, label %if.then14, label %if.else16, !dbg !9016

if.then14:                                        ; preds = %if.end
  %30 = load %struct.ReportList*, %struct.ReportList** %reports.addr, align 8, !dbg !9017
  %31 = load %struct.wmOperator*, %struct.wmOperator** %op, align 8, !dbg !9019
  %reports15 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %31, i32 0, i32 8, !dbg !9020
  store %struct.ReportList* %30, %struct.ReportList** %reports15, align 8, !dbg !9021
  br label %if.end20, !dbg !9022

if.else16:                                        ; preds = %if.end
  %32 = load i8* (i64, i8*)*, i8* (i64, i8*)** @MEM_mallocN, align 8, !dbg !9023
  %call17 = call i8* %32(i64 40, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.25, i64 0, i64 0)), !dbg !9023
  %33 = bitcast i8* %call17 to %struct.ReportList*, !dbg !9023
  %34 = load %struct.wmOperator*, %struct.wmOperator** %op, align 8, !dbg !9025
  %reports18 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %34, i32 0, i32 8, !dbg !9026
  store %struct.ReportList* %33, %struct.ReportList** %reports18, align 8, !dbg !9027
  %35 = load %struct.wmOperator*, %struct.wmOperator** %op, align 8, !dbg !9028
  %reports19 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %35, i32 0, i32 8, !dbg !9029
  %36 = load %struct.ReportList*, %struct.ReportList** %reports19, align 8, !dbg !9029
  call void @BKE_reports_init(%struct.ReportList* %36, i32 6), !dbg !9030
  br label %if.end20

if.end20:                                         ; preds = %if.else16, %if.then14
  %37 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9031
  %macro = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %37, i32 0, i32 14, !dbg !9033
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %macro, i32 0, i32 0, !dbg !9034
  %38 = load i8*, i8** %first, align 8, !dbg !9034
  %tobool21 = icmp ne i8* %38, null, !dbg !9031
  br i1 %tobool21, label %if.then22, label %if.end74, !dbg !9035

if.then22:                                        ; preds = %if.end20
  call void @llvm.dbg.declare(metadata %struct.wmOperatorTypeMacro** %otmacro, metadata !9036, metadata !DIExpression()), !dbg !9038
  call void @llvm.dbg.declare(metadata i32* %root, metadata !9039, metadata !DIExpression()), !dbg !9040
  store i32 0, i32* %root, align 4, !dbg !9040
  %39 = load %struct.wmOperator*, %struct.wmOperator** @wm_operator_create.motherop, align 8, !dbg !9041
  %cmp = icmp eq %struct.wmOperator* %39, null, !dbg !9043
  br i1 %cmp, label %if.then23, label %if.end24, !dbg !9044

if.then23:                                        ; preds = %if.then22
  %40 = load %struct.wmOperator*, %struct.wmOperator** %op, align 8, !dbg !9045
  store %struct.wmOperator* %40, %struct.wmOperator** @wm_operator_create.motherop, align 8, !dbg !9047
  store i32 1, i32* %root, align 4, !dbg !9048
  br label %if.end24, !dbg !9049

if.end24:                                         ; preds = %if.then23, %if.then22
  %41 = load %struct.PointerRNA*, %struct.PointerRNA** %properties.addr, align 8, !dbg !9050
  %tobool25 = icmp ne %struct.PointerRNA* %41, null, !dbg !9050
  br i1 %tobool25, label %if.then26, label %if.else52, !dbg !9052

if.then26:                                        ; preds = %if.end24
  %42 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9053
  %macro27 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %42, i32 0, i32 14, !dbg !9055
  %first28 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %macro27, i32 0, i32 0, !dbg !9056
  %43 = load i8*, i8** %first28, align 8, !dbg !9056
  %44 = bitcast i8* %43 to %struct.wmOperatorTypeMacro*, !dbg !9053
  store %struct.wmOperatorTypeMacro* %44, %struct.wmOperatorTypeMacro** %otmacro, align 8, !dbg !9057
  call void @llvm.dbg.declare(metadata %struct.CollectionPropertyIterator* %rna_macro_iter, metadata !9058, metadata !DIExpression()), !dbg !9060
  %45 = load %struct.PointerRNA*, %struct.PointerRNA** %properties.addr, align 8, !dbg !9061
  %46 = load %struct.PointerRNA*, %struct.PointerRNA** %properties.addr, align 8, !dbg !9061
  %type29 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %46, i32 0, i32 1, !dbg !9061
  %47 = load %struct.StructRNA*, %struct.StructRNA** %type29, align 8, !dbg !9061
  %call30 = call %struct.PropertyRNA* @RNA_struct_iterator_property(%struct.StructRNA* %47), !dbg !9061
  call void @RNA_property_collection_begin(%struct.PointerRNA* %45, %struct.PropertyRNA* %call30, %struct.CollectionPropertyIterator* %rna_macro_iter), !dbg !9061
  br label %for.cond, !dbg !9061

for.cond:                                         ; preds = %for.inc, %if.then26
  %valid = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %rna_macro_iter, i32 0, i32 7, !dbg !9063
  %48 = load i32, i32* %valid, align 8, !dbg !9063
  %tobool31 = icmp ne i32 %48, 0, !dbg !9061
  br i1 %tobool31, label %for.body, label %for.end, !dbg !9061

for.body:                                         ; preds = %for.cond
  call void @llvm.dbg.declare(metadata %struct.PropertyRNA** %prop, metadata !9065, metadata !DIExpression()), !dbg !9067
  %ptr32 = getelementptr inbounds %struct.CollectionPropertyIterator, %struct.CollectionPropertyIterator* %rna_macro_iter, i32 0, i32 6, !dbg !9067
  %data33 = getelementptr inbounds %struct.PointerRNA, %struct.PointerRNA* %ptr32, i32 0, i32 2, !dbg !9067
  %49 = load i8*, i8** %data33, align 8, !dbg !9067
  %50 = bitcast i8* %49 to %struct.PropertyRNA*, !dbg !9067
  store %struct.PropertyRNA* %50, %struct.PropertyRNA** %prop, align 8, !dbg !9067
  %51 = load %struct.wmOperatorTypeMacro*, %struct.wmOperatorTypeMacro** %otmacro, align 8, !dbg !9068
  %cmp34 = icmp eq %struct.wmOperatorTypeMacro* %51, null, !dbg !9071
  br i1 %cmp34, label %if.then35, label %if.end36, !dbg !9072

if.then35:                                        ; preds = %for.body
  br label %for.end, !dbg !9073

if.end36:                                         ; preds = %for.body
  %52 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !9074
  %call37 = call i8* @RNA_property_identifier(%struct.PropertyRNA* %52), !dbg !9076
  %53 = load %struct.wmOperatorTypeMacro*, %struct.wmOperatorTypeMacro** %otmacro, align 8, !dbg !9077
  %idname38 = getelementptr inbounds %struct.wmOperatorTypeMacro, %struct.wmOperatorTypeMacro* %53, i32 0, i32 2, !dbg !9078
  %arraydecay39 = getelementptr inbounds [64 x i8], [64 x i8]* %idname38, i64 0, i64 0, !dbg !9077
  %call40 = call i32 @strcmp(i8* %call37, i8* %arraydecay39) #9, !dbg !9079
  %cmp41 = icmp eq i32 %call40, 0, !dbg !9080
  br i1 %cmp41, label %if.then42, label %if.end51, !dbg !9081

if.then42:                                        ; preds = %if.end36
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %otm, metadata !9082, metadata !DIExpression()), !dbg !9084
  %54 = load %struct.wmOperatorTypeMacro*, %struct.wmOperatorTypeMacro** %otmacro, align 8, !dbg !9085
  %idname43 = getelementptr inbounds %struct.wmOperatorTypeMacro, %struct.wmOperatorTypeMacro* %54, i32 0, i32 2, !dbg !9086
  %arraydecay44 = getelementptr inbounds [64 x i8], [64 x i8]* %idname43, i64 0, i64 0, !dbg !9085
  %call45 = call %struct.wmOperatorType* @WM_operatortype_find(i8* %arraydecay44, i8 zeroext 0), !dbg !9087
  store %struct.wmOperatorType* %call45, %struct.wmOperatorType** %otm, align 8, !dbg !9084
  call void @llvm.dbg.declare(metadata %struct.PointerRNA* %someptr, metadata !9088, metadata !DIExpression()), !dbg !9089
  %55 = load %struct.PointerRNA*, %struct.PointerRNA** %properties.addr, align 8, !dbg !9090
  %56 = load %struct.PropertyRNA*, %struct.PropertyRNA** %prop, align 8, !dbg !9091
  call void @RNA_property_pointer_get(%struct.PointerRNA* sret %someptr, %struct.PointerRNA* %55, %struct.PropertyRNA* %56), !dbg !9092
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %opm, metadata !9093, metadata !DIExpression()), !dbg !9094
  %57 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm.addr, align 8, !dbg !9095
  %58 = load %struct.wmOperatorType*, %struct.wmOperatorType** %otm, align 8, !dbg !9096
  %call46 = call %struct.wmOperator* @wm_operator_create(%struct.wmWindowManager* %57, %struct.wmOperatorType* %58, %struct.PointerRNA* %someptr, %struct.ReportList* null), !dbg !9097
  store %struct.wmOperator* %call46, %struct.wmOperator** %opm, align 8, !dbg !9094
  %59 = load %struct.wmOperator*, %struct.wmOperator** %opm, align 8, !dbg !9098
  %properties47 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %59, i32 0, i32 3, !dbg !9099
  %60 = load %struct.IDProperty*, %struct.IDProperty** %properties47, align 8, !dbg !9099
  %61 = load %struct.wmOperatorTypeMacro*, %struct.wmOperatorTypeMacro** %otmacro, align 8, !dbg !9100
  %properties48 = getelementptr inbounds %struct.wmOperatorTypeMacro, %struct.wmOperatorTypeMacro* %61, i32 0, i32 3, !dbg !9101
  %62 = load %struct.IDProperty*, %struct.IDProperty** %properties48, align 8, !dbg !9101
  call void @IDP_ReplaceGroupInGroup(%struct.IDProperty* %60, %struct.IDProperty* %62), !dbg !9102
  %63 = load %struct.wmOperator*, %struct.wmOperator** @wm_operator_create.motherop, align 8, !dbg !9103
  %macro49 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %63, i32 0, i32 9, !dbg !9104
  %64 = load %struct.wmOperator*, %struct.wmOperator** %opm, align 8, !dbg !9105
  %65 = bitcast %struct.wmOperator* %64 to i8*, !dbg !9105
  call void @BLI_addtail(%struct.ListBase* %macro49, i8* %65), !dbg !9106
  %66 = load %struct.wmOperator*, %struct.wmOperator** @wm_operator_create.motherop, align 8, !dbg !9107
  %67 = load %struct.wmOperator*, %struct.wmOperator** %opm, align 8, !dbg !9108
  %opm50 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %67, i32 0, i32 10, !dbg !9109
  store %struct.wmOperator* %66, %struct.wmOperator** %opm50, align 8, !dbg !9110
  %68 = load %struct.wmOperatorTypeMacro*, %struct.wmOperatorTypeMacro** %otmacro, align 8, !dbg !9111
  %next = getelementptr inbounds %struct.wmOperatorTypeMacro, %struct.wmOperatorTypeMacro* %68, i32 0, i32 0, !dbg !9112
  %69 = load %struct.wmOperatorTypeMacro*, %struct.wmOperatorTypeMacro** %next, align 8, !dbg !9112
  store %struct.wmOperatorTypeMacro* %69, %struct.wmOperatorTypeMacro** %otmacro, align 8, !dbg !9113
  br label %if.end51, !dbg !9114

if.end51:                                         ; preds = %if.then42, %if.end36
  br label %for.inc, !dbg !9115

for.inc:                                          ; preds = %if.end51
  call void @RNA_property_collection_next(%struct.CollectionPropertyIterator* %rna_macro_iter), !dbg !9063
  br label %for.cond, !dbg !9063, !llvm.loop !9116

for.end:                                          ; preds = %if.then35, %for.cond
  call void @RNA_property_collection_end(%struct.CollectionPropertyIterator* %rna_macro_iter), !dbg !9118
  br label %if.end70, !dbg !9119

if.else52:                                        ; preds = %if.end24
  %70 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !9120
  %macro53 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %70, i32 0, i32 14, !dbg !9123
  %first54 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %macro53, i32 0, i32 0, !dbg !9124
  %71 = load i8*, i8** %first54, align 8, !dbg !9124
  %72 = bitcast i8* %71 to %struct.wmOperatorTypeMacro*, !dbg !9120
  store %struct.wmOperatorTypeMacro* %72, %struct.wmOperatorTypeMacro** %otmacro, align 8, !dbg !9125
  br label %for.cond55, !dbg !9126

for.cond55:                                       ; preds = %for.inc67, %if.else52
  %73 = load %struct.wmOperatorTypeMacro*, %struct.wmOperatorTypeMacro** %otmacro, align 8, !dbg !9127
  %tobool56 = icmp ne %struct.wmOperatorTypeMacro* %73, null, !dbg !9129
  br i1 %tobool56, label %for.body57, label %for.end69, !dbg !9129

for.body57:                                       ; preds = %for.cond55
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %otm58, metadata !9130, metadata !DIExpression()), !dbg !9132
  %74 = load %struct.wmOperatorTypeMacro*, %struct.wmOperatorTypeMacro** %otmacro, align 8, !dbg !9133
  %idname59 = getelementptr inbounds %struct.wmOperatorTypeMacro, %struct.wmOperatorTypeMacro* %74, i32 0, i32 2, !dbg !9134
  %arraydecay60 = getelementptr inbounds [64 x i8], [64 x i8]* %idname59, i64 0, i64 0, !dbg !9133
  %call61 = call %struct.wmOperatorType* @WM_operatortype_find(i8* %arraydecay60, i8 zeroext 0), !dbg !9135
  store %struct.wmOperatorType* %call61, %struct.wmOperatorType** %otm58, align 8, !dbg !9132
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %opm62, metadata !9136, metadata !DIExpression()), !dbg !9137
  %75 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm.addr, align 8, !dbg !9138
  %76 = load %struct.wmOperatorType*, %struct.wmOperatorType** %otm58, align 8, !dbg !9139
  %77 = load %struct.wmOperatorTypeMacro*, %struct.wmOperatorTypeMacro** %otmacro, align 8, !dbg !9140
  %ptr63 = getelementptr inbounds %struct.wmOperatorTypeMacro, %struct.wmOperatorTypeMacro* %77, i32 0, i32 4, !dbg !9141
  %78 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr63, align 8, !dbg !9141
  %call64 = call %struct.wmOperator* @wm_operator_create(%struct.wmWindowManager* %75, %struct.wmOperatorType* %76, %struct.PointerRNA* %78, %struct.ReportList* null), !dbg !9142
  store %struct.wmOperator* %call64, %struct.wmOperator** %opm62, align 8, !dbg !9137
  %79 = load %struct.wmOperator*, %struct.wmOperator** @wm_operator_create.motherop, align 8, !dbg !9143
  %macro65 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %79, i32 0, i32 9, !dbg !9144
  %80 = load %struct.wmOperator*, %struct.wmOperator** %opm62, align 8, !dbg !9145
  %81 = bitcast %struct.wmOperator* %80 to i8*, !dbg !9145
  call void @BLI_addtail(%struct.ListBase* %macro65, i8* %81), !dbg !9146
  %82 = load %struct.wmOperator*, %struct.wmOperator** @wm_operator_create.motherop, align 8, !dbg !9147
  %83 = load %struct.wmOperator*, %struct.wmOperator** %opm62, align 8, !dbg !9148
  %opm66 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %83, i32 0, i32 10, !dbg !9149
  store %struct.wmOperator* %82, %struct.wmOperator** %opm66, align 8, !dbg !9150
  br label %for.inc67, !dbg !9151

for.inc67:                                        ; preds = %for.body57
  %84 = load %struct.wmOperatorTypeMacro*, %struct.wmOperatorTypeMacro** %otmacro, align 8, !dbg !9152
  %next68 = getelementptr inbounds %struct.wmOperatorTypeMacro, %struct.wmOperatorTypeMacro* %84, i32 0, i32 0, !dbg !9153
  %85 = load %struct.wmOperatorTypeMacro*, %struct.wmOperatorTypeMacro** %next68, align 8, !dbg !9153
  store %struct.wmOperatorTypeMacro* %85, %struct.wmOperatorTypeMacro** %otmacro, align 8, !dbg !9154
  br label %for.cond55, !dbg !9155, !llvm.loop !9156

for.end69:                                        ; preds = %for.cond55
  br label %if.end70

if.end70:                                         ; preds = %for.end69, %for.end
  %86 = load i32, i32* %root, align 4, !dbg !9158
  %tobool71 = icmp ne i32 %86, 0, !dbg !9158
  br i1 %tobool71, label %if.then72, label %if.end73, !dbg !9160

if.then72:                                        ; preds = %if.end70
  store %struct.wmOperator* null, %struct.wmOperator** @wm_operator_create.motherop, align 8, !dbg !9161
  br label %if.end73, !dbg !9162

if.end73:                                         ; preds = %if.then72, %if.end70
  br label %if.end74, !dbg !9163

if.end74:                                         ; preds = %if.end73, %if.end20
  %87 = load %struct.wmOperator*, %struct.wmOperator** %op, align 8, !dbg !9164
  %ptr75 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %87, i32 0, i32 7, !dbg !9165
  %88 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr75, align 8, !dbg !9165
  call void @WM_operator_properties_sanitize(%struct.PointerRNA* %88, i8 zeroext 0), !dbg !9166
  %89 = load %struct.wmOperator*, %struct.wmOperator** %op, align 8, !dbg !9167
  ret %struct.wmOperator* %89, !dbg !9168
}

declare dso_local void @WM_cursor_grab_enable(%struct.wmWindow*, i8 zeroext, i8 zeroext, i32*) #3

; Function Attrs: noinline nounwind uwtable
define internal void @wm_handler_ui_cancel(%struct.bContext* %C) #0 !dbg !9169 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %win = alloca %struct.wmWindow*, align 8
  %ar = alloca %struct.ARegion*, align 8
  %handler = alloca %struct.wmEventHandler*, align 8
  %nexthandler = alloca %struct.wmEventHandler*, align 8
  %event = alloca %struct.wmEvent, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !9170, metadata !DIExpression()), !dbg !9171
  call void @llvm.dbg.declare(metadata %struct.wmWindow** %win, metadata !9172, metadata !DIExpression()), !dbg !9173
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9174
  %call = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %0), !dbg !9175
  store %struct.wmWindow* %call, %struct.wmWindow** %win, align 8, !dbg !9173
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar, metadata !9176, metadata !DIExpression()), !dbg !9177
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9178
  %call1 = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %1), !dbg !9179
  store %struct.ARegion* %call1, %struct.ARegion** %ar, align 8, !dbg !9177
  call void @llvm.dbg.declare(metadata %struct.wmEventHandler** %handler, metadata !9180, metadata !DIExpression()), !dbg !9181
  call void @llvm.dbg.declare(metadata %struct.wmEventHandler** %nexthandler, metadata !9182, metadata !DIExpression()), !dbg !9183
  %2 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !9184
  %tobool = icmp ne %struct.ARegion* %2, null, !dbg !9184
  br i1 %tobool, label %if.end, label %if.then, !dbg !9186

if.then:                                          ; preds = %entry
  br label %for.end, !dbg !9187

if.end:                                           ; preds = %entry
  %3 = load %struct.ARegion*, %struct.ARegion** %ar, align 8, !dbg !9188
  %handlers = getelementptr inbounds %struct.ARegion, %struct.ARegion* %3, i32 0, i32 26, !dbg !9190
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %handlers, i32 0, i32 0, !dbg !9191
  %4 = load i8*, i8** %first, align 8, !dbg !9191
  %5 = bitcast i8* %4 to %struct.wmEventHandler*, !dbg !9188
  store %struct.wmEventHandler* %5, %struct.wmEventHandler** %handler, align 8, !dbg !9192
  br label %for.cond, !dbg !9193

for.cond:                                         ; preds = %for.inc, %if.end
  %6 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !9194
  %tobool2 = icmp ne %struct.wmEventHandler* %6, null, !dbg !9196
  br i1 %tobool2, label %for.body, label %for.end, !dbg !9196

for.body:                                         ; preds = %for.cond
  %7 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !9197
  %next = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %7, i32 0, i32 0, !dbg !9199
  %8 = load %struct.wmEventHandler*, %struct.wmEventHandler** %next, align 8, !dbg !9199
  store %struct.wmEventHandler* %8, %struct.wmEventHandler** %nexthandler, align 8, !dbg !9200
  %9 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !9201
  %ui_handle = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %9, i32 0, i32 10, !dbg !9203
  %10 = load i32 (%struct.bContext*, %struct.wmEvent*, i8*)*, i32 (%struct.bContext*, %struct.wmEvent*, i8*)** %ui_handle, align 8, !dbg !9203
  %tobool3 = icmp ne i32 (%struct.bContext*, %struct.wmEvent*, i8*)* %10, null, !dbg !9201
  br i1 %tobool3, label %if.then4, label %if.end7, !dbg !9204

if.then4:                                         ; preds = %for.body
  call void @llvm.dbg.declare(metadata %struct.wmEvent* %event, metadata !9205, metadata !DIExpression()), !dbg !9207
  %11 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !9208
  call void @wm_event_init_from_window(%struct.wmWindow* %11, %struct.wmEvent* %event), !dbg !9209
  %type = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %event, i32 0, i32 2, !dbg !9210
  store i16 20516, i16* %type, align 8, !dbg !9211
  %12 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !9212
  %ui_handle5 = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %12, i32 0, i32 10, !dbg !9213
  %13 = load i32 (%struct.bContext*, %struct.wmEvent*, i8*)*, i32 (%struct.bContext*, %struct.wmEvent*, i8*)** %ui_handle5, align 8, !dbg !9213
  %14 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9214
  %15 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !9215
  %ui_userdata = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %15, i32 0, i32 12, !dbg !9216
  %16 = load i8*, i8** %ui_userdata, align 8, !dbg !9216
  %call6 = call i32 %13(%struct.bContext* %14, %struct.wmEvent* %event, i8* %16), !dbg !9212
  br label %if.end7, !dbg !9217

if.end7:                                          ; preds = %if.then4, %for.body
  br label %for.inc, !dbg !9218

for.inc:                                          ; preds = %if.end7
  %17 = load %struct.wmEventHandler*, %struct.wmEventHandler** %nexthandler, align 8, !dbg !9219
  store %struct.wmEventHandler* %17, %struct.wmEventHandler** %handler, align 8, !dbg !9220
  br label %for.cond, !dbg !9221, !llvm.loop !9222

for.end:                                          ; preds = %if.then, %for.cond
  ret void, !dbg !9224
}

declare dso_local i8* @BLI_strncpy(i8*, i8*, i64) #3

declare dso_local void @RNA_pointer_create(%struct.ID*, %struct.StructRNA*, i8*, %struct.PointerRNA*) #3

; Function Attrs: nounwind readonly
declare dso_local i32 @strcmp(i8*, i8*) #6

declare dso_local void @RNA_property_pointer_get(%struct.PointerRNA* sret, %struct.PointerRNA*, %struct.PropertyRNA*) #3

declare dso_local void @IDP_ReplaceGroupInGroup(%struct.IDProperty*, %struct.IDProperty*) #3

declare dso_local void @WM_operator_properties_sanitize(%struct.PointerRNA*, i8 zeroext) #3

; Function Attrs: noinline nounwind uwtable
define internal i32 @wm_handlers_do_intern(%struct.bContext* %C, %struct.wmEvent* %event, %struct.ListBase* %handlers) #0 !dbg !9225 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %handlers.addr = alloca %struct.ListBase*, align 8
  %wm = alloca %struct.wmWindowManager*, align 8
  %handler = alloca %struct.wmEventHandler*, align 8
  %nexthandler = alloca %struct.wmEventHandler*, align 8
  %action = alloca i32, align 4
  %always_pass = alloca i32, align 4
  %keymap16 = alloca %struct.wmKeyMap*, align 8
  %kmi = alloca %struct.wmKeyMapItem*, align 8
  %drop = alloca %struct.wmDropBox*, align 8
  %lb = alloca %struct.ListBase*, align 8
  %drag = alloca %struct.wmDrag*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !9226, metadata !DIExpression()), !dbg !9227
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !9228, metadata !DIExpression()), !dbg !9229
  store %struct.ListBase* %handlers, %struct.ListBase** %handlers.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %handlers.addr, metadata !9230, metadata !DIExpression()), !dbg !9231
  call void @llvm.dbg.declare(metadata %struct.wmWindowManager** %wm, metadata !9232, metadata !DIExpression()), !dbg !9233
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9234
  %call = call %struct.wmWindowManager* @CTX_wm_manager(%struct.bContext* %0), !dbg !9235
  store %struct.wmWindowManager* %call, %struct.wmWindowManager** %wm, align 8, !dbg !9233
  call void @llvm.dbg.declare(metadata %struct.wmEventHandler** %handler, metadata !9236, metadata !DIExpression()), !dbg !9237
  call void @llvm.dbg.declare(metadata %struct.wmEventHandler** %nexthandler, metadata !9238, metadata !DIExpression()), !dbg !9239
  call void @llvm.dbg.declare(metadata i32* %action, metadata !9240, metadata !DIExpression()), !dbg !9241
  store i32 0, i32* %action, align 4, !dbg !9241
  call void @llvm.dbg.declare(metadata i32* %always_pass, metadata !9242, metadata !DIExpression()), !dbg !9243
  %1 = load %struct.ListBase*, %struct.ListBase** %handlers.addr, align 8, !dbg !9244
  %cmp = icmp eq %struct.ListBase* %1, null, !dbg !9246
  br i1 %cmp, label %if.then, label %if.end, !dbg !9247

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %action, align 4, !dbg !9248
  store i32 %2, i32* %retval, align 4, !dbg !9250
  br label %return, !dbg !9250

if.end:                                           ; preds = %entry
  %3 = load %struct.ListBase*, %struct.ListBase** %handlers.addr, align 8, !dbg !9251
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %3, i32 0, i32 0, !dbg !9253
  %4 = load i8*, i8** %first, align 8, !dbg !9253
  %5 = bitcast i8* %4 to %struct.wmEventHandler*, !dbg !9251
  store %struct.wmEventHandler* %5, %struct.wmEventHandler** %handler, align 8, !dbg !9254
  br label %for.cond, !dbg !9255

for.cond:                                         ; preds = %for.inc156, %if.end
  %6 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !9256
  %tobool = icmp ne %struct.wmEventHandler* %6, null, !dbg !9256
  br i1 %tobool, label %land.rhs, label %land.end, !dbg !9258

land.rhs:                                         ; preds = %for.cond
  %7 = load %struct.ListBase*, %struct.ListBase** %handlers.addr, align 8, !dbg !9259
  %first1 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %7, i32 0, i32 0, !dbg !9260
  %8 = load i8*, i8** %first1, align 8, !dbg !9260
  %tobool2 = icmp ne i8* %8, null, !dbg !9258
  br label %land.end

land.end:                                         ; preds = %land.rhs, %for.cond
  %9 = phi i1 [ false, %for.cond ], [ %tobool2, %land.rhs ], !dbg !9261
  br i1 %9, label %for.body, label %for.end157, !dbg !9262

for.body:                                         ; preds = %land.end
  %10 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !9263
  %next = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %10, i32 0, i32 0, !dbg !9265
  %11 = load %struct.wmEventHandler*, %struct.wmEventHandler** %next, align 8, !dbg !9265
  store %struct.wmEventHandler* %11, %struct.wmEventHandler** %nexthandler, align 8, !dbg !9266
  %12 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !9267
  %flag = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %12, i32 0, i32 3, !dbg !9269
  %13 = load i32, i32* %flag, align 4, !dbg !9269
  %and = and i32 %13, 2, !dbg !9270
  %tobool3 = icmp ne i32 %and, 0, !dbg !9270
  br i1 %tobool3, label %if.then4, label %if.else, !dbg !9271

if.then4:                                         ; preds = %for.body
  br label %if.end140, !dbg !9272

if.else:                                          ; preds = %for.body
  %14 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !9274
  %15 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !9276
  %call5 = call zeroext i8 @handler_boundbox_test(%struct.wmEventHandler* %14, %struct.wmEvent* %15), !dbg !9277
  %tobool6 = icmp ne i8 %call5, 0, !dbg !9277
  br i1 %tobool6, label %if.then7, label %if.end139, !dbg !9278

if.then7:                                         ; preds = %if.else
  %16 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !9279
  %call8 = call i32 @wm_event_always_pass(%struct.wmEvent* %16), !dbg !9281
  store i32 %call8, i32* %always_pass, align 4, !dbg !9282
  %17 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !9283
  %flag9 = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %17, i32 0, i32 3, !dbg !9285
  %18 = load i32, i32* %flag9, align 4, !dbg !9285
  %and10 = and i32 %18, 1, !dbg !9286
  %tobool11 = icmp ne i32 %and10, 0, !dbg !9286
  br i1 %tobool11, label %if.then12, label %if.end13, !dbg !9287

if.then12:                                        ; preds = %if.then7
  %19 = load i32, i32* %action, align 4, !dbg !9288
  %or = or i32 %19, 1, !dbg !9288
  store i32 %or, i32* %action, align 4, !dbg !9288
  br label %if.end13, !dbg !9289

if.end13:                                         ; preds = %if.then12, %if.then7
  %20 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !9290
  %keymap = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %20, i32 0, i32 4, !dbg !9292
  %21 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !9292
  %tobool14 = icmp ne %struct.wmKeyMap* %21, null, !dbg !9290
  br i1 %tobool14, label %if.then15, label %if.else60, !dbg !9293

if.then15:                                        ; preds = %if.end13
  call void @llvm.dbg.declare(metadata %struct.wmKeyMap** %keymap16, metadata !9294, metadata !DIExpression()), !dbg !9296
  %22 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !9297
  %23 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !9298
  %keymap17 = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %23, i32 0, i32 4, !dbg !9299
  %24 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap17, align 8, !dbg !9299
  %call18 = call %struct.wmKeyMap* @WM_keymap_active(%struct.wmWindowManager* %22, %struct.wmKeyMap* %24), !dbg !9300
  store %struct.wmKeyMap* %call18, %struct.wmKeyMap** %keymap16, align 8, !dbg !9296
  call void @llvm.dbg.declare(metadata %struct.wmKeyMapItem** %kmi, metadata !9301, metadata !DIExpression()), !dbg !9325
  %25 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap16, align 8, !dbg !9326
  %poll = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %25, i32 0, i32 9, !dbg !9328
  %26 = load i32 (%struct.bContext*)*, i32 (%struct.bContext*)** %poll, align 8, !dbg !9328
  %tobool19 = icmp ne i32 (%struct.bContext*)* %26, null, !dbg !9326
  br i1 %tobool19, label %lor.lhs.false, label %if.then23, !dbg !9329

lor.lhs.false:                                    ; preds = %if.then15
  %27 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap16, align 8, !dbg !9330
  %poll20 = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %27, i32 0, i32 9, !dbg !9331
  %28 = load i32 (%struct.bContext*)*, i32 (%struct.bContext*)** %poll20, align 8, !dbg !9331
  %29 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9332
  %call21 = call i32 %28(%struct.bContext* %29), !dbg !9330
  %tobool22 = icmp ne i32 %call21, 0, !dbg !9330
  br i1 %tobool22, label %if.then23, label %if.else58, !dbg !9333

if.then23:                                        ; preds = %lor.lhs.false, %if.then15
  %30 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap16, align 8, !dbg !9334
  %items = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %30, i32 0, i32 2, !dbg !9337
  %first24 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %items, i32 0, i32 0, !dbg !9338
  %31 = load i8*, i8** %first24, align 8, !dbg !9338
  %32 = bitcast i8* %31 to %struct.wmKeyMapItem*, !dbg !9334
  store %struct.wmKeyMapItem* %32, %struct.wmKeyMapItem** %kmi, align 8, !dbg !9339
  br label %for.cond25, !dbg !9340

for.cond25:                                       ; preds = %for.inc, %if.then23
  %33 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !9341
  %tobool26 = icmp ne %struct.wmKeyMapItem* %33, null, !dbg !9343
  br i1 %tobool26, label %for.body27, label %for.end, !dbg !9343

for.body27:                                       ; preds = %for.cond25
  %34 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !9344
  %35 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !9347
  %call28 = call i32 @wm_eventmatch(%struct.wmEvent* %34, %struct.wmKeyMapItem* %35), !dbg !9348
  %tobool29 = icmp ne i32 %call28, 0, !dbg !9348
  br i1 %tobool29, label %if.then30, label %if.end56, !dbg !9349

if.then30:                                        ; preds = %for.body27
  %36 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !9350
  %idname = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %36, i32 0, i32 2, !dbg !9352
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %idname, i64 0, i64 0, !dbg !9350
  %37 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !9353
  %keymap_idname = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %37, i32 0, i32 23, !dbg !9354
  store i8* %arraydecay, i8** %keymap_idname, align 8, !dbg !9355
  %38 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9356
  %39 = load %struct.ListBase*, %struct.ListBase** %handlers.addr, align 8, !dbg !9357
  %40 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !9358
  %41 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !9359
  %42 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !9360
  %ptr = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %42, i32 0, i32 17, !dbg !9361
  %43 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr, align 8, !dbg !9361
  %call31 = call i32 @wm_handler_operator_call(%struct.bContext* %38, %struct.ListBase* %39, %struct.wmEventHandler* %40, %struct.wmEvent* %41, %struct.PointerRNA* %43), !dbg !9362
  %44 = load i32, i32* %action, align 4, !dbg !9363
  %or32 = or i32 %44, %call31, !dbg !9363
  store i32 %or32, i32* %action, align 4, !dbg !9363
  %45 = load i32, i32* %action, align 4, !dbg !9364
  %and33 = and i32 %45, 1, !dbg !9366
  %tobool34 = icmp ne i32 %and33, 0, !dbg !9366
  br i1 %tobool34, label %if.then35, label %if.else43, !dbg !9367

if.then35:                                        ; preds = %if.then30
  %46 = load i32, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 16), align 4, !dbg !9368
  %and36 = and i32 %46, 24, !dbg !9371
  %tobool37 = icmp ne i32 %and36, 0, !dbg !9371
  br i1 %tobool37, label %if.then38, label %if.end42, !dbg !9372

if.then38:                                        ; preds = %if.then35
  %47 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !9373
  %idname39 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %47, i32 0, i32 2, !dbg !9374
  %arraydecay40 = getelementptr inbounds [64 x i8], [64 x i8]* %idname39, i64 0, i64 0, !dbg !9373
  %call41 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.28, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.wm_handlers_do_intern, i64 0, i64 0), i8* %arraydecay40), !dbg !9375
  br label %if.end42, !dbg !9375

if.end42:                                         ; preds = %if.then38, %if.then35
  br label %for.end, !dbg !9376

if.else43:                                        ; preds = %if.then30
  %48 = load i32, i32* %action, align 4, !dbg !9377
  %and44 = and i32 %48, 2, !dbg !9380
  %tobool45 = icmp ne i32 %and44, 0, !dbg !9380
  br i1 %tobool45, label %if.then46, label %if.end54, !dbg !9381

if.then46:                                        ; preds = %if.else43
  %49 = load i32, i32* getelementptr inbounds (%struct.Global, %struct.Global* @G, i32 0, i32 16), align 4, !dbg !9382
  %and47 = and i32 %49, 24, !dbg !9384
  %tobool48 = icmp ne i32 %and47, 0, !dbg !9384
  br i1 %tobool48, label %if.then49, label %if.end53, !dbg !9385

if.then49:                                        ; preds = %if.then46
  %50 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !9386
  %idname50 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %50, i32 0, i32 2, !dbg !9387
  %arraydecay51 = getelementptr inbounds [64 x i8], [64 x i8]* %idname50, i64 0, i64 0, !dbg !9386
  %call52 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.29, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @__func__.wm_handlers_do_intern, i64 0, i64 0), i8* %arraydecay51), !dbg !9388
  br label %if.end53, !dbg !9388

if.end53:                                         ; preds = %if.then49, %if.then46
  br label %if.end54, !dbg !9389

if.end54:                                         ; preds = %if.end53, %if.else43
  br label %if.end55

if.end55:                                         ; preds = %if.end54
  br label %if.end56, !dbg !9390

if.end56:                                         ; preds = %if.end55, %for.body27
  br label %for.inc, !dbg !9391

for.inc:                                          ; preds = %if.end56
  %51 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !9392
  %next57 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %51, i32 0, i32 0, !dbg !9393
  %52 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %next57, align 8, !dbg !9393
  store %struct.wmKeyMapItem* %52, %struct.wmKeyMapItem** %kmi, align 8, !dbg !9394
  br label %for.cond25, !dbg !9395, !llvm.loop !9396

for.end:                                          ; preds = %if.end42, %for.cond25
  br label %if.end59, !dbg !9398

if.else58:                                        ; preds = %lor.lhs.false
  br label %if.end59

if.end59:                                         ; preds = %if.else58, %for.end
  br label %if.end129, !dbg !9399

if.else60:                                        ; preds = %if.end13
  %53 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !9400
  %ui_handle = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %53, i32 0, i32 10, !dbg !9402
  %54 = load i32 (%struct.bContext*, %struct.wmEvent*, i8*)*, i32 (%struct.bContext*, %struct.wmEvent*, i8*)** %ui_handle, align 8, !dbg !9402
  %tobool61 = icmp ne i32 (%struct.bContext*, %struct.wmEvent*, i8*)* %54, null, !dbg !9400
  br i1 %tobool61, label %if.then62, label %if.else68, !dbg !9403

if.then62:                                        ; preds = %if.else60
  %55 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !9404
  %is_interface_locked = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %55, i32 0, i32 19, !dbg !9407
  %56 = load i8, i8* %is_interface_locked, align 8, !dbg !9407
  %tobool63 = icmp ne i8 %56, 0, !dbg !9404
  br i1 %tobool63, label %if.end67, label %if.then64, !dbg !9408

if.then64:                                        ; preds = %if.then62
  %57 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9409
  %58 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !9411
  %59 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !9412
  %60 = load i32, i32* %always_pass, align 4, !dbg !9413
  %call65 = call i32 @wm_handler_ui_call(%struct.bContext* %57, %struct.wmEventHandler* %58, %struct.wmEvent* %59, i32 %60), !dbg !9414
  %61 = load i32, i32* %action, align 4, !dbg !9415
  %or66 = or i32 %61, %call65, !dbg !9415
  store i32 %or66, i32* %action, align 4, !dbg !9415
  br label %if.end67, !dbg !9416

if.end67:                                         ; preds = %if.then64, %if.then62
  br label %if.end128, !dbg !9417

if.else68:                                        ; preds = %if.else60
  %62 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !9418
  %type = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %62, i32 0, i32 2, !dbg !9420
  %63 = load i32, i32* %type, align 8, !dbg !9420
  %cmp69 = icmp eq i32 %63, 1, !dbg !9421
  br i1 %cmp69, label %if.then70, label %if.else77, !dbg !9422

if.then70:                                        ; preds = %if.else68
  %64 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !9423
  %is_interface_locked71 = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %64, i32 0, i32 19, !dbg !9426
  %65 = load i8, i8* %is_interface_locked71, align 8, !dbg !9426
  %tobool72 = icmp ne i8 %65, 0, !dbg !9423
  br i1 %tobool72, label %if.end76, label %if.then73, !dbg !9427

if.then73:                                        ; preds = %if.then70
  %66 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9428
  %67 = load %struct.ListBase*, %struct.ListBase** %handlers.addr, align 8, !dbg !9430
  %68 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !9431
  %69 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !9432
  %call74 = call i32 @wm_handler_fileselect_call(%struct.bContext* %66, %struct.ListBase* %67, %struct.wmEventHandler* %68, %struct.wmEvent* %69), !dbg !9433
  %70 = load i32, i32* %action, align 4, !dbg !9434
  %or75 = or i32 %70, %call74, !dbg !9434
  store i32 %or75, i32* %action, align 4, !dbg !9434
  br label %if.end76, !dbg !9435

if.end76:                                         ; preds = %if.then73, %if.then70
  br label %if.end127, !dbg !9436

if.else77:                                        ; preds = %if.else68
  %71 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !9437
  %dropboxes = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %71, i32 0, i32 17, !dbg !9439
  %72 = load %struct.ListBase*, %struct.ListBase** %dropboxes, align 8, !dbg !9439
  %tobool78 = icmp ne %struct.ListBase* %72, null, !dbg !9437
  br i1 %tobool78, label %if.then79, label %if.else123, !dbg !9440

if.then79:                                        ; preds = %if.else77
  %73 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !9441
  %is_interface_locked80 = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %73, i32 0, i32 19, !dbg !9444
  %74 = load i8, i8* %is_interface_locked80, align 8, !dbg !9444
  %tobool81 = icmp ne i8 %74, 0, !dbg !9441
  br i1 %tobool81, label %if.end122, label %land.lhs.true, !dbg !9445

land.lhs.true:                                    ; preds = %if.then79
  %75 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !9446
  %type82 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %75, i32 0, i32 2, !dbg !9447
  %76 = load i16, i16* %type82, align 8, !dbg !9447
  %conv = sext i16 %76 to i32, !dbg !9446
  %cmp83 = icmp eq i32 %conv, 20515, !dbg !9448
  br i1 %cmp83, label %if.then85, label %if.end122, !dbg !9449

if.then85:                                        ; preds = %land.lhs.true
  call void @llvm.dbg.declare(metadata %struct.wmDropBox** %drop, metadata !9450, metadata !DIExpression()), !dbg !9492
  %77 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !9493
  %dropboxes86 = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %77, i32 0, i32 17, !dbg !9494
  %78 = load %struct.ListBase*, %struct.ListBase** %dropboxes86, align 8, !dbg !9494
  %first87 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %78, i32 0, i32 0, !dbg !9495
  %79 = load i8*, i8** %first87, align 8, !dbg !9495
  %80 = bitcast i8* %79 to %struct.wmDropBox*, !dbg !9493
  store %struct.wmDropBox* %80, %struct.wmDropBox** %drop, align 8, !dbg !9492
  br label %for.cond88, !dbg !9496

for.cond88:                                       ; preds = %for.inc119, %if.then85
  %81 = load %struct.wmDropBox*, %struct.wmDropBox** %drop, align 8, !dbg !9497
  %tobool89 = icmp ne %struct.wmDropBox* %81, null, !dbg !9500
  br i1 %tobool89, label %for.body90, label %for.end121, !dbg !9500

for.body90:                                       ; preds = %for.cond88
  %82 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !9501
  %custom = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %82, i32 0, i32 25, !dbg !9504
  %83 = load i16, i16* %custom, align 8, !dbg !9504
  %conv91 = sext i16 %83 to i32, !dbg !9501
  %cmp92 = icmp eq i32 %conv91, 3, !dbg !9505
  br i1 %cmp92, label %if.then94, label %if.end118, !dbg !9506

if.then94:                                        ; preds = %for.body90
  call void @llvm.dbg.declare(metadata %struct.ListBase** %lb, metadata !9507, metadata !DIExpression()), !dbg !9509
  %84 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !9510
  %customdata = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %84, i32 0, i32 28, !dbg !9511
  %85 = load i8*, i8** %customdata, align 8, !dbg !9511
  %86 = bitcast i8* %85 to %struct.ListBase*, !dbg !9512
  store %struct.ListBase* %86, %struct.ListBase** %lb, align 8, !dbg !9509
  call void @llvm.dbg.declare(metadata %struct.wmDrag** %drag, metadata !9513, metadata !DIExpression()), !dbg !9516
  %87 = load %struct.ListBase*, %struct.ListBase** %lb, align 8, !dbg !9517
  %first95 = getelementptr inbounds %struct.ListBase, %struct.ListBase* %87, i32 0, i32 0, !dbg !9519
  %88 = load i8*, i8** %first95, align 8, !dbg !9519
  %89 = bitcast i8* %88 to %struct.wmDrag*, !dbg !9517
  store %struct.wmDrag* %89, %struct.wmDrag** %drag, align 8, !dbg !9520
  br label %for.cond96, !dbg !9521

for.cond96:                                       ; preds = %for.inc115, %if.then94
  %90 = load %struct.wmDrag*, %struct.wmDrag** %drag, align 8, !dbg !9522
  %tobool97 = icmp ne %struct.wmDrag* %90, null, !dbg !9524
  br i1 %tobool97, label %for.body98, label %for.end117, !dbg !9524

for.body98:                                       ; preds = %for.cond96
  %91 = load %struct.wmDropBox*, %struct.wmDropBox** %drop, align 8, !dbg !9525
  %poll99 = getelementptr inbounds %struct.wmDropBox, %struct.wmDropBox* %91, i32 0, i32 2, !dbg !9528
  %92 = load i32 (%struct.bContext*, %struct.wmDrag*, %struct.wmEvent*)*, i32 (%struct.bContext*, %struct.wmDrag*, %struct.wmEvent*)** %poll99, align 8, !dbg !9528
  %93 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9529
  %94 = load %struct.wmDrag*, %struct.wmDrag** %drag, align 8, !dbg !9530
  %95 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !9531
  %call100 = call i32 %92(%struct.bContext* %93, %struct.wmDrag* %94, %struct.wmEvent* %95), !dbg !9525
  %tobool101 = icmp ne i32 %call100, 0, !dbg !9525
  br i1 %tobool101, label %if.then102, label %if.end114, !dbg !9532

if.then102:                                       ; preds = %for.body98
  %96 = load %struct.wmDropBox*, %struct.wmDropBox** %drop, align 8, !dbg !9533
  %copy = getelementptr inbounds %struct.wmDropBox, %struct.wmDropBox* %96, i32 0, i32 3, !dbg !9535
  %97 = load void (%struct.wmDrag*, %struct.wmDropBox*)*, void (%struct.wmDrag*, %struct.wmDropBox*)** %copy, align 8, !dbg !9535
  %98 = load %struct.wmDrag*, %struct.wmDrag** %drag, align 8, !dbg !9536
  %99 = load %struct.wmDropBox*, %struct.wmDropBox** %drop, align 8, !dbg !9537
  call void %97(%struct.wmDrag* %98, %struct.wmDropBox* %99), !dbg !9533
  %100 = load %struct.ListBase*, %struct.ListBase** %lb, align 8, !dbg !9538
  call void @WM_drag_free_list(%struct.ListBase* %100), !dbg !9539
  %101 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !9540
  %customdata103 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %101, i32 0, i32 28, !dbg !9541
  store i8* null, i8** %customdata103, align 8, !dbg !9542
  %102 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !9543
  %custom104 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %102, i32 0, i32 25, !dbg !9544
  store i16 0, i16* %custom104, align 8, !dbg !9545
  %103 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9546
  %104 = load %struct.wmDropBox*, %struct.wmDropBox** %drop, align 8, !dbg !9547
  %ot = getelementptr inbounds %struct.wmDropBox, %struct.wmDropBox* %104, i32 0, i32 4, !dbg !9548
  %105 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !9548
  %idname105 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %105, i32 0, i32 1, !dbg !9549
  %106 = load i8*, i8** %idname105, align 8, !dbg !9549
  %107 = load %struct.wmDropBox*, %struct.wmDropBox** %drop, align 8, !dbg !9550
  %opcontext = getelementptr inbounds %struct.wmDropBox, %struct.wmDropBox* %107, i32 0, i32 7, !dbg !9551
  %108 = load i16, i16* %opcontext, align 8, !dbg !9551
  %109 = load %struct.wmDropBox*, %struct.wmDropBox** %drop, align 8, !dbg !9552
  %ptr106 = getelementptr inbounds %struct.wmDropBox, %struct.wmDropBox* %109, i32 0, i32 6, !dbg !9553
  %110 = load %struct.PointerRNA*, %struct.PointerRNA** %ptr106, align 8, !dbg !9553
  %call107 = call i32 @WM_operator_name_call(%struct.bContext* %103, i8* %106, i16 signext %108, %struct.PointerRNA* %110), !dbg !9554
  %111 = load i32, i32* %action, align 4, !dbg !9555
  %or108 = or i32 %111, 1, !dbg !9555
  store i32 %or108, i32* %action, align 4, !dbg !9555
  %112 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9556
  %call109 = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %112), !dbg !9558
  %cmp110 = icmp eq %struct.wmWindow* %call109, null, !dbg !9559
  br i1 %cmp110, label %if.then112, label %if.end113, !dbg !9560

if.then112:                                       ; preds = %if.then102
  %113 = load i32, i32* %action, align 4, !dbg !9561
  store i32 %113, i32* %retval, align 4, !dbg !9562
  br label %return, !dbg !9562

if.end113:                                        ; preds = %if.then102
  br label %for.end117, !dbg !9563

if.end114:                                        ; preds = %for.body98
  br label %for.inc115, !dbg !9564

for.inc115:                                       ; preds = %if.end114
  %114 = load %struct.wmDrag*, %struct.wmDrag** %drag, align 8, !dbg !9565
  %next116 = getelementptr inbounds %struct.wmDrag, %struct.wmDrag* %114, i32 0, i32 0, !dbg !9566
  %115 = load %struct.wmDrag*, %struct.wmDrag** %next116, align 8, !dbg !9566
  store %struct.wmDrag* %115, %struct.wmDrag** %drag, align 8, !dbg !9567
  br label %for.cond96, !dbg !9568, !llvm.loop !9569

for.end117:                                       ; preds = %if.end113, %for.cond96
  br label %if.end118, !dbg !9571

if.end118:                                        ; preds = %for.end117, %for.body90
  br label %for.inc119, !dbg !9572

for.inc119:                                       ; preds = %if.end118
  %116 = load %struct.wmDropBox*, %struct.wmDropBox** %drop, align 8, !dbg !9573
  %next120 = getelementptr inbounds %struct.wmDropBox, %struct.wmDropBox* %116, i32 0, i32 0, !dbg !9574
  %117 = load %struct.wmDropBox*, %struct.wmDropBox** %next120, align 8, !dbg !9574
  store %struct.wmDropBox* %117, %struct.wmDropBox** %drop, align 8, !dbg !9575
  br label %for.cond88, !dbg !9576, !llvm.loop !9577

for.end121:                                       ; preds = %for.cond88
  br label %if.end122, !dbg !9579

if.end122:                                        ; preds = %for.end121, %land.lhs.true, %if.then79
  br label %if.end126, !dbg !9580

if.else123:                                       ; preds = %if.else77
  %118 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9581
  %119 = load %struct.ListBase*, %struct.ListBase** %handlers.addr, align 8, !dbg !9583
  %120 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !9584
  %121 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !9585
  %call124 = call i32 @wm_handler_operator_call(%struct.bContext* %118, %struct.ListBase* %119, %struct.wmEventHandler* %120, %struct.wmEvent* %121, %struct.PointerRNA* null), !dbg !9586
  %122 = load i32, i32* %action, align 4, !dbg !9587
  %or125 = or i32 %122, %call124, !dbg !9587
  store i32 %or125, i32* %action, align 4, !dbg !9587
  br label %if.end126

if.end126:                                        ; preds = %if.else123, %if.end122
  br label %if.end127

if.end127:                                        ; preds = %if.end126, %if.end76
  br label %if.end128

if.end128:                                        ; preds = %if.end127, %if.end67
  br label %if.end129

if.end129:                                        ; preds = %if.end128, %if.end59
  %123 = load i32, i32* %action, align 4, !dbg !9588
  %and130 = and i32 %123, 1, !dbg !9590
  %tobool131 = icmp ne i32 %and130, 0, !dbg !9590
  br i1 %tobool131, label %if.then132, label %if.end138, !dbg !9591

if.then132:                                       ; preds = %if.end129
  %124 = load i32, i32* %always_pass, align 4, !dbg !9592
  %tobool133 = icmp ne i32 %124, 0, !dbg !9592
  br i1 %tobool133, label %if.then134, label %if.else136, !dbg !9595

if.then134:                                       ; preds = %if.then132
  %125 = load i32, i32* %action, align 4, !dbg !9596
  %and135 = and i32 %125, -2, !dbg !9596
  store i32 %and135, i32* %action, align 4, !dbg !9596
  br label %if.end137, !dbg !9597

if.else136:                                       ; preds = %if.then132
  br label %for.end157, !dbg !9598

if.end137:                                        ; preds = %if.then134
  br label %if.end138, !dbg !9599

if.end138:                                        ; preds = %if.end137, %if.end129
  br label %if.end139, !dbg !9600

if.end139:                                        ; preds = %if.end138, %if.else
  br label %if.end140

if.end140:                                        ; preds = %if.end139, %if.then4
  %126 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9601
  %call141 = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %126), !dbg !9603
  %cmp142 = icmp eq %struct.wmWindow* %call141, null, !dbg !9604
  br i1 %cmp142, label %if.then144, label %if.end145, !dbg !9605

if.then144:                                       ; preds = %if.end140
  %127 = load i32, i32* %action, align 4, !dbg !9606
  store i32 %127, i32* %retval, align 4, !dbg !9608
  br label %return, !dbg !9608

if.end145:                                        ; preds = %if.end140
  %128 = load %struct.ListBase*, %struct.ListBase** %handlers.addr, align 8, !dbg !9609
  %129 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !9611
  %130 = bitcast %struct.wmEventHandler* %129 to i8*, !dbg !9611
  %call146 = call i32 @BLI_findindex(%struct.ListBase* %128, i8* %130), !dbg !9612
  %cmp147 = icmp ne i32 %call146, -1, !dbg !9613
  br i1 %cmp147, label %if.then149, label %if.end155, !dbg !9614

if.then149:                                       ; preds = %if.end145
  %131 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !9615
  %flag150 = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %131, i32 0, i32 3, !dbg !9618
  %132 = load i32, i32* %flag150, align 4, !dbg !9618
  %and151 = and i32 %132, 2, !dbg !9619
  %tobool152 = icmp ne i32 %and151, 0, !dbg !9619
  br i1 %tobool152, label %if.then153, label %if.end154, !dbg !9620

if.then153:                                       ; preds = %if.then149
  %133 = load %struct.ListBase*, %struct.ListBase** %handlers.addr, align 8, !dbg !9621
  %134 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !9623
  %135 = bitcast %struct.wmEventHandler* %134 to i8*, !dbg !9623
  call void @BLI_remlink(%struct.ListBase* %133, i8* %135), !dbg !9624
  %136 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler, align 8, !dbg !9625
  call void @wm_event_free_handler(%struct.wmEventHandler* %136), !dbg !9626
  br label %if.end154, !dbg !9627

if.end154:                                        ; preds = %if.then153, %if.then149
  br label %if.end155, !dbg !9628

if.end155:                                        ; preds = %if.end154, %if.end145
  br label %for.inc156, !dbg !9629

for.inc156:                                       ; preds = %if.end155
  %137 = load %struct.wmEventHandler*, %struct.wmEventHandler** %nexthandler, align 8, !dbg !9630
  store %struct.wmEventHandler* %137, %struct.wmEventHandler** %handler, align 8, !dbg !9631
  br label %for.cond, !dbg !9632, !llvm.loop !9633

for.end157:                                       ; preds = %if.else136, %land.end
  %138 = load i32, i32* %action, align 4, !dbg !9635
  %cmp158 = icmp eq i32 %138, 5, !dbg !9637
  br i1 %cmp158, label %if.then160, label %if.end163, !dbg !9638

if.then160:                                       ; preds = %for.end157
  %139 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9639
  %call161 = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %139), !dbg !9640
  %140 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !9641
  %call162 = call i32 @wm_cursor_arrow_move(%struct.wmWindow* %call161, %struct.wmEvent* %140), !dbg !9642
  br label %if.end163, !dbg !9642

if.end163:                                        ; preds = %if.then160, %for.end157
  %141 = load i32, i32* %action, align 4, !dbg !9643
  store i32 %141, i32* %retval, align 4, !dbg !9644
  br label %return, !dbg !9644

return:                                           ; preds = %if.end163, %if.then144, %if.then112, %if.then
  %142 = load i32, i32* %retval, align 4, !dbg !9645
  ret i32 %142, !dbg !9645
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @wm_action_not_handled(i32 %action) #0 !dbg !9646 {
entry:
  %action.addr = alloca i32, align 4
  store i32 %action, i32* %action.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %action.addr, metadata !9647, metadata !DIExpression()), !dbg !9648
  %0 = load i32, i32* %action.addr, align 4, !dbg !9649
  %cmp = icmp eq i32 %0, 0, !dbg !9650
  br i1 %cmp, label %lor.end, label %lor.rhs, !dbg !9651

lor.rhs:                                          ; preds = %entry
  %1 = load i32, i32* %action.addr, align 4, !dbg !9652
  %cmp1 = icmp eq i32 %1, 5, !dbg !9653
  br label %lor.end, !dbg !9651

lor.end:                                          ; preds = %lor.rhs, %entry
  %2 = phi i1 [ true, %entry ], [ %cmp1, %lor.rhs ]
  %lor.ext = zext i1 %2 to i32, !dbg !9651
  ret i32 %lor.ext, !dbg !9654
}

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @handler_boundbox_test(%struct.wmEventHandler* %handler, %struct.wmEvent* %event) #0 !dbg !9655 {
entry:
  %retval = alloca i8, align 1
  %handler.addr = alloca %struct.wmEventHandler*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %rect = alloca %struct.rcti, align 4
  store %struct.wmEventHandler* %handler, %struct.wmEventHandler** %handler.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEventHandler** %handler.addr, metadata !9658, metadata !DIExpression()), !dbg !9659
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !9660, metadata !DIExpression()), !dbg !9661
  %0 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler.addr, align 8, !dbg !9662
  %bbwin = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %0, i32 0, i32 6, !dbg !9664
  %1 = load %struct.rcti*, %struct.rcti** %bbwin, align 8, !dbg !9664
  %tobool = icmp ne %struct.rcti* %1, null, !dbg !9662
  br i1 %tobool, label %if.then, label %if.end, !dbg !9665

if.then:                                          ; preds = %entry
  %2 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler.addr, align 8, !dbg !9666
  %bblocal = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %2, i32 0, i32 5, !dbg !9669
  %3 = load %struct.rcti*, %struct.rcti** %bblocal, align 8, !dbg !9669
  %tobool1 = icmp ne %struct.rcti* %3, null, !dbg !9666
  br i1 %tobool1, label %if.then2, label %if.else14, !dbg !9670

if.then2:                                         ; preds = %if.then
  call void @llvm.dbg.declare(metadata %struct.rcti* %rect, metadata !9671, metadata !DIExpression()), !dbg !9673
  %4 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler.addr, align 8, !dbg !9674
  %bblocal3 = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %4, i32 0, i32 5, !dbg !9675
  %5 = load %struct.rcti*, %struct.rcti** %bblocal3, align 8, !dbg !9675
  %6 = bitcast %struct.rcti* %rect to i8*, !dbg !9676
  %7 = bitcast %struct.rcti* %5 to i8*, !dbg !9676
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %7, i64 16, i1 false), !dbg !9676
  %8 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler.addr, align 8, !dbg !9677
  %bbwin4 = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %8, i32 0, i32 6, !dbg !9678
  %9 = load %struct.rcti*, %struct.rcti** %bbwin4, align 8, !dbg !9678
  %xmin = getelementptr inbounds %struct.rcti, %struct.rcti* %9, i32 0, i32 0, !dbg !9679
  %10 = load i32, i32* %xmin, align 4, !dbg !9679
  %11 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler.addr, align 8, !dbg !9680
  %bbwin5 = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %11, i32 0, i32 6, !dbg !9681
  %12 = load %struct.rcti*, %struct.rcti** %bbwin5, align 8, !dbg !9681
  %ymin = getelementptr inbounds %struct.rcti, %struct.rcti* %12, i32 0, i32 2, !dbg !9682
  %13 = load i32, i32* %ymin, align 4, !dbg !9682
  call void @BLI_rcti_translate(%struct.rcti* %rect, i32 %10, i32 %13), !dbg !9683
  %14 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !9684
  %x = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %14, i32 0, i32 4, !dbg !9686
  %call = call zeroext i8 @BLI_rcti_isect_pt_v(%struct.rcti* %rect, i32* %x), !dbg !9687
  %tobool6 = icmp ne i8 %call, 0, !dbg !9687
  br i1 %tobool6, label %if.then7, label %if.else, !dbg !9688

if.then7:                                         ; preds = %if.then2
  store i8 1, i8* %retval, align 1, !dbg !9689
  br label %return, !dbg !9689

if.else:                                          ; preds = %if.then2
  %15 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !9690
  %type = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %15, i32 0, i32 2, !dbg !9692
  %16 = load i16, i16* %type, align 8, !dbg !9692
  %conv = sext i16 %16 to i32, !dbg !9690
  %cmp = icmp eq i32 %conv, 4, !dbg !9693
  br i1 %cmp, label %land.lhs.true, label %if.else13, !dbg !9694

land.lhs.true:                                    ; preds = %if.else
  %17 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !9695
  %prevx = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %17, i32 0, i32 12, !dbg !9696
  %call9 = call zeroext i8 @BLI_rcti_isect_pt_v(%struct.rcti* %rect, i32* %prevx), !dbg !9697
  %conv10 = zext i8 %call9 to i32, !dbg !9697
  %tobool11 = icmp ne i32 %conv10, 0, !dbg !9697
  br i1 %tobool11, label %if.then12, label %if.else13, !dbg !9698

if.then12:                                        ; preds = %land.lhs.true
  store i8 1, i8* %retval, align 1, !dbg !9699
  br label %return, !dbg !9699

if.else13:                                        ; preds = %land.lhs.true, %if.else
  store i8 0, i8* %retval, align 1, !dbg !9700
  br label %return, !dbg !9700

if.else14:                                        ; preds = %if.then
  %18 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler.addr, align 8, !dbg !9701
  %bbwin15 = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %18, i32 0, i32 6, !dbg !9704
  %19 = load %struct.rcti*, %struct.rcti** %bbwin15, align 8, !dbg !9704
  %20 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !9705
  %x16 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %20, i32 0, i32 4, !dbg !9706
  %call17 = call zeroext i8 @BLI_rcti_isect_pt_v(%struct.rcti* %19, i32* %x16), !dbg !9707
  %tobool18 = icmp ne i8 %call17, 0, !dbg !9707
  br i1 %tobool18, label %if.then19, label %if.else20, !dbg !9708

if.then19:                                        ; preds = %if.else14
  store i8 1, i8* %retval, align 1, !dbg !9709
  br label %return, !dbg !9709

if.else20:                                        ; preds = %if.else14
  %21 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !9710
  %type21 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %21, i32 0, i32 2, !dbg !9712
  %22 = load i16, i16* %type21, align 8, !dbg !9712
  %conv22 = sext i16 %22 to i32, !dbg !9710
  %cmp23 = icmp eq i32 %conv22, 4, !dbg !9713
  br i1 %cmp23, label %land.lhs.true25, label %if.else32, !dbg !9714

land.lhs.true25:                                  ; preds = %if.else20
  %23 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler.addr, align 8, !dbg !9715
  %bbwin26 = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %23, i32 0, i32 6, !dbg !9716
  %24 = load %struct.rcti*, %struct.rcti** %bbwin26, align 8, !dbg !9716
  %25 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !9717
  %prevx27 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %25, i32 0, i32 12, !dbg !9718
  %call28 = call zeroext i8 @BLI_rcti_isect_pt_v(%struct.rcti* %24, i32* %prevx27), !dbg !9719
  %conv29 = zext i8 %call28 to i32, !dbg !9719
  %tobool30 = icmp ne i32 %conv29, 0, !dbg !9719
  br i1 %tobool30, label %if.then31, label %if.else32, !dbg !9720

if.then31:                                        ; preds = %land.lhs.true25
  store i8 1, i8* %retval, align 1, !dbg !9721
  br label %return, !dbg !9721

if.else32:                                        ; preds = %land.lhs.true25, %if.else20
  store i8 0, i8* %retval, align 1, !dbg !9722
  br label %return, !dbg !9722

if.end:                                           ; preds = %entry
  store i8 1, i8* %retval, align 1, !dbg !9723
  br label %return, !dbg !9723

return:                                           ; preds = %if.end, %if.else32, %if.then31, %if.then19, %if.else13, %if.then12, %if.then7
  %26 = load i8, i8* %retval, align 1, !dbg !9724
  ret i8 %26, !dbg !9724
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @wm_event_always_pass(%struct.wmEvent* %event) #0 !dbg !9725 {
entry:
  %event.addr = alloca %struct.wmEvent*, align 8
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !9728, metadata !DIExpression()), !dbg !9729
  %0 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !9730
  %type = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %0, i32 0, i32 2, !dbg !9730
  %1 = load i16, i16* %type, align 8, !dbg !9730
  %conv = sext i16 %1 to i32, !dbg !9730
  %cmp = icmp sge i32 %conv, 272, !dbg !9730
  br i1 %cmp, label %land.lhs.true, label %lor.lhs.false, !dbg !9730

land.lhs.true:                                    ; preds = %entry
  %2 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !9730
  %type2 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %2, i32 0, i32 2, !dbg !9730
  %3 = load i16, i16* %type2, align 8, !dbg !9730
  %conv3 = sext i16 %3 to i32, !dbg !9730
  %cmp4 = icmp sle i32 %conv3, 287, !dbg !9730
  br i1 %cmp4, label %lor.end, label %lor.lhs.false, !dbg !9731

lor.lhs.false:                                    ; preds = %land.lhs.true, %entry
  %4 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !9732
  %type6 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %4, i32 0, i32 2, !dbg !9733
  %5 = load i16, i16* %type6, align 8, !dbg !9733
  %conv7 = sext i16 %5 to i32, !dbg !9732
  %cmp8 = icmp eq i32 %conv7, 260, !dbg !9734
  br i1 %cmp8, label %lor.end, label %lor.rhs, !dbg !9735

lor.rhs:                                          ; preds = %lor.lhs.false
  %6 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !9736
  %type10 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %6, i32 0, i32 2, !dbg !9737
  %7 = load i16, i16* %type10, align 8, !dbg !9737
  %conv11 = sext i16 %7 to i32, !dbg !9736
  %cmp12 = icmp eq i32 %conv11, 20513, !dbg !9738
  br label %lor.end, !dbg !9735

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %land.lhs.true
  %8 = phi i1 [ true, %lor.lhs.false ], [ true, %land.lhs.true ], [ %cmp12, %lor.rhs ]
  %lor.ext = zext i1 %8 to i32, !dbg !9735
  ret i32 %lor.ext, !dbg !9739
}

declare dso_local %struct.wmKeyMap* @WM_keymap_active(%struct.wmWindowManager*, %struct.wmKeyMap*) #3

; Function Attrs: noinline nounwind uwtable
define internal i32 @wm_eventmatch(%struct.wmEvent* %winevent, %struct.wmKeyMapItem* %kmi) #0 !dbg !9740 {
entry:
  %retval = alloca i32, align 4
  %winevent.addr = alloca %struct.wmEvent*, align 8
  %kmi.addr = alloca %struct.wmKeyMapItem*, align 8
  %kmitype = alloca i32, align 4
  store %struct.wmEvent* %winevent, %struct.wmEvent** %winevent.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %winevent.addr, metadata !9743, metadata !DIExpression()), !dbg !9744
  store %struct.wmKeyMapItem* %kmi, %struct.wmKeyMapItem** %kmi.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmKeyMapItem** %kmi.addr, metadata !9745, metadata !DIExpression()), !dbg !9746
  call void @llvm.dbg.declare(metadata i32* %kmitype, metadata !9747, metadata !DIExpression()), !dbg !9748
  %0 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !9749
  %type = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %0, i32 0, i32 6, !dbg !9750
  %1 = load i16, i16* %type, align 2, !dbg !9750
  %conv = sext i16 %1 to i32, !dbg !9749
  %call = call i32 @WM_userdef_event_map(i32 %conv), !dbg !9751
  store i32 %call, i32* %kmitype, align 4, !dbg !9748
  %2 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !9752
  %flag = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %2, i32 0, i32 13, !dbg !9754
  %3 = load i16, i16* %flag, align 8, !dbg !9754
  %conv1 = sext i16 %3 to i32, !dbg !9752
  %and = and i32 %conv1, 1, !dbg !9755
  %tobool = icmp ne i32 %and, 0, !dbg !9755
  br i1 %tobool, label %if.then, label %if.end, !dbg !9756

if.then:                                          ; preds = %entry
  store i32 0, i32* %retval, align 4, !dbg !9757
  br label %return, !dbg !9757

if.end:                                           ; preds = %entry
  %4 = load i32, i32* %kmitype, align 4, !dbg !9758
  %cmp = icmp eq i32 %4, -2, !dbg !9760
  br i1 %cmp, label %if.then3, label %if.end34, !dbg !9761

if.then3:                                         ; preds = %if.end
  %5 = load %struct.wmEvent*, %struct.wmEvent** %winevent.addr, align 8, !dbg !9762
  %val = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %5, i32 0, i32 3, !dbg !9764
  %6 = load i16, i16* %val, align 2, !dbg !9764
  %conv4 = sext i16 %6 to i32, !dbg !9762
  %cmp5 = icmp eq i32 %conv4, 1, !dbg !9765
  br i1 %cmp5, label %if.then7, label %if.end33, !dbg !9766

if.then7:                                         ; preds = %if.then3
  %7 = load %struct.wmEvent*, %struct.wmEvent** %winevent.addr, align 8, !dbg !9767
  %type8 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %7, i32 0, i32 2, !dbg !9767
  %8 = load i16, i16* %type8, align 8, !dbg !9767
  %conv9 = sext i16 %8 to i32, !dbg !9767
  %cmp10 = icmp sge i32 %conv9, 32, !dbg !9767
  br i1 %cmp10, label %land.lhs.true, label %lor.lhs.false, !dbg !9767

land.lhs.true:                                    ; preds = %if.then7
  %9 = load %struct.wmEvent*, %struct.wmEvent** %winevent.addr, align 8, !dbg !9767
  %type12 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %9, i32 0, i32 2, !dbg !9767
  %10 = load i16, i16* %type12, align 8, !dbg !9767
  %conv13 = sext i16 %10 to i32, !dbg !9767
  %cmp14 = icmp sle i32 %conv13, 255, !dbg !9767
  br i1 %cmp14, label %land.lhs.true25, label %lor.lhs.false, !dbg !9767

lor.lhs.false:                                    ; preds = %land.lhs.true, %if.then7
  %11 = load %struct.wmEvent*, %struct.wmEvent** %winevent.addr, align 8, !dbg !9767
  %type16 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %11, i32 0, i32 2, !dbg !9767
  %12 = load i16, i16* %type16, align 8, !dbg !9767
  %conv17 = sext i16 %12 to i32, !dbg !9767
  %cmp18 = icmp sge i32 %conv17, 300, !dbg !9767
  br i1 %cmp18, label %land.lhs.true20, label %if.end32, !dbg !9767

land.lhs.true20:                                  ; preds = %lor.lhs.false
  %13 = load %struct.wmEvent*, %struct.wmEvent** %winevent.addr, align 8, !dbg !9767
  %type21 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %13, i32 0, i32 2, !dbg !9767
  %14 = load i16, i16* %type21, align 8, !dbg !9767
  %conv22 = sext i16 %14 to i32, !dbg !9767
  %cmp23 = icmp sle i32 %conv22, 319, !dbg !9767
  br i1 %cmp23, label %land.lhs.true25, label %if.end32, !dbg !9770

land.lhs.true25:                                  ; preds = %land.lhs.true20, %land.lhs.true
  %15 = load %struct.wmEvent*, %struct.wmEvent** %winevent.addr, align 8, !dbg !9771
  %ascii = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %15, i32 0, i32 8, !dbg !9772
  %16 = load i8, i8* %ascii, align 2, !dbg !9772
  %conv26 = zext i8 %16 to i32, !dbg !9771
  %tobool27 = icmp ne i32 %conv26, 0, !dbg !9771
  br i1 %tobool27, label %if.then31, label %lor.lhs.false28, !dbg !9773

lor.lhs.false28:                                  ; preds = %land.lhs.true25
  %17 = load %struct.wmEvent*, %struct.wmEvent** %winevent.addr, align 8, !dbg !9774
  %utf8_buf = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %17, i32 0, i32 7, !dbg !9775
  %arrayidx = getelementptr inbounds [6 x i8], [6 x i8]* %utf8_buf, i64 0, i64 0, !dbg !9774
  %18 = load i8, i8* %arrayidx, align 4, !dbg !9774
  %conv29 = zext i8 %18 to i32, !dbg !9774
  %tobool30 = icmp ne i32 %conv29, 0, !dbg !9774
  br i1 %tobool30, label %if.then31, label %if.end32, !dbg !9776

if.then31:                                        ; preds = %lor.lhs.false28, %land.lhs.true25
  store i32 1, i32* %retval, align 4, !dbg !9777
  br label %return, !dbg !9777

if.end32:                                         ; preds = %lor.lhs.false28, %land.lhs.true20, %lor.lhs.false
  br label %if.end33, !dbg !9778

if.end33:                                         ; preds = %if.end32, %if.then3
  br label %if.end34, !dbg !9779

if.end34:                                         ; preds = %if.end33, %if.end
  %19 = load i32, i32* %kmitype, align 4, !dbg !9780
  %cmp35 = icmp ne i32 %19, -1, !dbg !9782
  br i1 %cmp35, label %if.then37, label %if.end44, !dbg !9783

if.then37:                                        ; preds = %if.end34
  %20 = load %struct.wmEvent*, %struct.wmEvent** %winevent.addr, align 8, !dbg !9784
  %type38 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %20, i32 0, i32 2, !dbg !9786
  %21 = load i16, i16* %type38, align 8, !dbg !9786
  %conv39 = sext i16 %21 to i32, !dbg !9784
  %22 = load i32, i32* %kmitype, align 4, !dbg !9787
  %cmp40 = icmp ne i32 %conv39, %22, !dbg !9788
  br i1 %cmp40, label %if.then42, label %if.end43, !dbg !9789

if.then42:                                        ; preds = %if.then37
  store i32 0, i32* %retval, align 4, !dbg !9790
  br label %return, !dbg !9790

if.end43:                                         ; preds = %if.then37
  br label %if.end44, !dbg !9787

if.end44:                                         ; preds = %if.end43, %if.end34
  %23 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !9791
  %val45 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %23, i32 0, i32 7, !dbg !9793
  %24 = load i16, i16* %val45, align 4, !dbg !9793
  %conv46 = sext i16 %24 to i32, !dbg !9791
  %cmp47 = icmp ne i32 %conv46, -1, !dbg !9794
  br i1 %cmp47, label %if.then49, label %if.end58, !dbg !9795

if.then49:                                        ; preds = %if.end44
  %25 = load %struct.wmEvent*, %struct.wmEvent** %winevent.addr, align 8, !dbg !9796
  %val50 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %25, i32 0, i32 3, !dbg !9798
  %26 = load i16, i16* %val50, align 2, !dbg !9798
  %conv51 = sext i16 %26 to i32, !dbg !9796
  %27 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !9799
  %val52 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %27, i32 0, i32 7, !dbg !9800
  %28 = load i16, i16* %val52, align 4, !dbg !9800
  %conv53 = sext i16 %28 to i32, !dbg !9799
  %cmp54 = icmp ne i32 %conv51, %conv53, !dbg !9801
  br i1 %cmp54, label %if.then56, label %if.end57, !dbg !9802

if.then56:                                        ; preds = %if.then49
  store i32 0, i32* %retval, align 4, !dbg !9803
  br label %return, !dbg !9803

if.end57:                                         ; preds = %if.then49
  br label %if.end58, !dbg !9800

if.end58:                                         ; preds = %if.end57, %if.end44
  %29 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !9804
  %shift = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %29, i32 0, i32 8, !dbg !9806
  %30 = load i16, i16* %shift, align 2, !dbg !9806
  %conv59 = sext i16 %30 to i32, !dbg !9804
  %cmp60 = icmp ne i32 %conv59, -1, !dbg !9807
  br i1 %cmp60, label %if.then62, label %if.end78, !dbg !9808

if.then62:                                        ; preds = %if.end58
  %31 = load %struct.wmEvent*, %struct.wmEvent** %winevent.addr, align 8, !dbg !9809
  %shift63 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %31, i32 0, i32 17, !dbg !9811
  %32 = load i16, i16* %shift63, align 8, !dbg !9811
  %conv64 = sext i16 %32 to i32, !dbg !9809
  %33 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !9812
  %shift65 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %33, i32 0, i32 8, !dbg !9813
  %34 = load i16, i16* %shift65, align 2, !dbg !9813
  %conv66 = sext i16 %34 to i32, !dbg !9812
  %cmp67 = icmp ne i32 %conv64, %conv66, !dbg !9814
  br i1 %cmp67, label %land.lhs.true69, label %if.end77, !dbg !9815

land.lhs.true69:                                  ; preds = %if.then62
  %35 = load %struct.wmEvent*, %struct.wmEvent** %winevent.addr, align 8, !dbg !9816
  %shift70 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %35, i32 0, i32 17, !dbg !9817
  %36 = load i16, i16* %shift70, align 8, !dbg !9817
  %conv71 = sext i16 %36 to i32, !dbg !9816
  %37 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !9818
  %shift72 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %37, i32 0, i32 8, !dbg !9819
  %38 = load i16, i16* %shift72, align 2, !dbg !9819
  %conv73 = sext i16 %38 to i32, !dbg !9818
  %and74 = and i32 %conv71, %conv73, !dbg !9820
  %tobool75 = icmp ne i32 %and74, 0, !dbg !9820
  br i1 %tobool75, label %if.end77, label %if.then76, !dbg !9821

if.then76:                                        ; preds = %land.lhs.true69
  store i32 0, i32* %retval, align 4, !dbg !9822
  br label %return, !dbg !9822

if.end77:                                         ; preds = %land.lhs.true69, %if.then62
  br label %if.end78, !dbg !9823

if.end78:                                         ; preds = %if.end77, %if.end58
  %39 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !9824
  %ctrl = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %39, i32 0, i32 9, !dbg !9826
  %40 = load i16, i16* %ctrl, align 8, !dbg !9826
  %conv79 = sext i16 %40 to i32, !dbg !9824
  %cmp80 = icmp ne i32 %conv79, -1, !dbg !9827
  br i1 %cmp80, label %if.then82, label %if.end98, !dbg !9828

if.then82:                                        ; preds = %if.end78
  %41 = load %struct.wmEvent*, %struct.wmEvent** %winevent.addr, align 8, !dbg !9829
  %ctrl83 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %41, i32 0, i32 18, !dbg !9831
  %42 = load i16, i16* %ctrl83, align 2, !dbg !9831
  %conv84 = sext i16 %42 to i32, !dbg !9829
  %43 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !9832
  %ctrl85 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %43, i32 0, i32 9, !dbg !9833
  %44 = load i16, i16* %ctrl85, align 8, !dbg !9833
  %conv86 = sext i16 %44 to i32, !dbg !9832
  %cmp87 = icmp ne i32 %conv84, %conv86, !dbg !9834
  br i1 %cmp87, label %land.lhs.true89, label %if.end97, !dbg !9835

land.lhs.true89:                                  ; preds = %if.then82
  %45 = load %struct.wmEvent*, %struct.wmEvent** %winevent.addr, align 8, !dbg !9836
  %ctrl90 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %45, i32 0, i32 18, !dbg !9837
  %46 = load i16, i16* %ctrl90, align 2, !dbg !9837
  %conv91 = sext i16 %46 to i32, !dbg !9836
  %47 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !9838
  %ctrl92 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %47, i32 0, i32 9, !dbg !9839
  %48 = load i16, i16* %ctrl92, align 8, !dbg !9839
  %conv93 = sext i16 %48 to i32, !dbg !9838
  %and94 = and i32 %conv91, %conv93, !dbg !9840
  %tobool95 = icmp ne i32 %and94, 0, !dbg !9840
  br i1 %tobool95, label %if.end97, label %if.then96, !dbg !9841

if.then96:                                        ; preds = %land.lhs.true89
  store i32 0, i32* %retval, align 4, !dbg !9842
  br label %return, !dbg !9842

if.end97:                                         ; preds = %land.lhs.true89, %if.then82
  br label %if.end98, !dbg !9843

if.end98:                                         ; preds = %if.end97, %if.end78
  %49 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !9844
  %alt = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %49, i32 0, i32 10, !dbg !9846
  %50 = load i16, i16* %alt, align 2, !dbg !9846
  %conv99 = sext i16 %50 to i32, !dbg !9844
  %cmp100 = icmp ne i32 %conv99, -1, !dbg !9847
  br i1 %cmp100, label %if.then102, label %if.end118, !dbg !9848

if.then102:                                       ; preds = %if.end98
  %51 = load %struct.wmEvent*, %struct.wmEvent** %winevent.addr, align 8, !dbg !9849
  %alt103 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %51, i32 0, i32 19, !dbg !9851
  %52 = load i16, i16* %alt103, align 4, !dbg !9851
  %conv104 = sext i16 %52 to i32, !dbg !9849
  %53 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !9852
  %alt105 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %53, i32 0, i32 10, !dbg !9853
  %54 = load i16, i16* %alt105, align 2, !dbg !9853
  %conv106 = sext i16 %54 to i32, !dbg !9852
  %cmp107 = icmp ne i32 %conv104, %conv106, !dbg !9854
  br i1 %cmp107, label %land.lhs.true109, label %if.end117, !dbg !9855

land.lhs.true109:                                 ; preds = %if.then102
  %55 = load %struct.wmEvent*, %struct.wmEvent** %winevent.addr, align 8, !dbg !9856
  %alt110 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %55, i32 0, i32 19, !dbg !9857
  %56 = load i16, i16* %alt110, align 4, !dbg !9857
  %conv111 = sext i16 %56 to i32, !dbg !9856
  %57 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !9858
  %alt112 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %57, i32 0, i32 10, !dbg !9859
  %58 = load i16, i16* %alt112, align 2, !dbg !9859
  %conv113 = sext i16 %58 to i32, !dbg !9858
  %and114 = and i32 %conv111, %conv113, !dbg !9860
  %tobool115 = icmp ne i32 %and114, 0, !dbg !9860
  br i1 %tobool115, label %if.end117, label %if.then116, !dbg !9861

if.then116:                                       ; preds = %land.lhs.true109
  store i32 0, i32* %retval, align 4, !dbg !9862
  br label %return, !dbg !9862

if.end117:                                        ; preds = %land.lhs.true109, %if.then102
  br label %if.end118, !dbg !9863

if.end118:                                        ; preds = %if.end117, %if.end98
  %59 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !9864
  %oskey = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %59, i32 0, i32 11, !dbg !9866
  %60 = load i16, i16* %oskey, align 4, !dbg !9866
  %conv119 = sext i16 %60 to i32, !dbg !9864
  %cmp120 = icmp ne i32 %conv119, -1, !dbg !9867
  br i1 %cmp120, label %if.then122, label %if.end138, !dbg !9868

if.then122:                                       ; preds = %if.end118
  %61 = load %struct.wmEvent*, %struct.wmEvent** %winevent.addr, align 8, !dbg !9869
  %oskey123 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %61, i32 0, i32 20, !dbg !9871
  %62 = load i16, i16* %oskey123, align 2, !dbg !9871
  %conv124 = sext i16 %62 to i32, !dbg !9869
  %63 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !9872
  %oskey125 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %63, i32 0, i32 11, !dbg !9873
  %64 = load i16, i16* %oskey125, align 4, !dbg !9873
  %conv126 = sext i16 %64 to i32, !dbg !9872
  %cmp127 = icmp ne i32 %conv124, %conv126, !dbg !9874
  br i1 %cmp127, label %land.lhs.true129, label %if.end137, !dbg !9875

land.lhs.true129:                                 ; preds = %if.then122
  %65 = load %struct.wmEvent*, %struct.wmEvent** %winevent.addr, align 8, !dbg !9876
  %oskey130 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %65, i32 0, i32 20, !dbg !9877
  %66 = load i16, i16* %oskey130, align 2, !dbg !9877
  %conv131 = sext i16 %66 to i32, !dbg !9876
  %67 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !9878
  %oskey132 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %67, i32 0, i32 11, !dbg !9879
  %68 = load i16, i16* %oskey132, align 4, !dbg !9879
  %conv133 = sext i16 %68 to i32, !dbg !9878
  %and134 = and i32 %conv131, %conv133, !dbg !9880
  %tobool135 = icmp ne i32 %and134, 0, !dbg !9880
  br i1 %tobool135, label %if.end137, label %if.then136, !dbg !9881

if.then136:                                       ; preds = %land.lhs.true129
  store i32 0, i32* %retval, align 4, !dbg !9882
  br label %return, !dbg !9882

if.end137:                                        ; preds = %land.lhs.true129, %if.then122
  br label %if.end138, !dbg !9883

if.end138:                                        ; preds = %if.end137, %if.end118
  %69 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !9884
  %keymodifier = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %69, i32 0, i32 12, !dbg !9886
  %70 = load i16, i16* %keymodifier, align 2, !dbg !9886
  %tobool139 = icmp ne i16 %70, 0, !dbg !9884
  br i1 %tobool139, label %if.then140, label %if.end149, !dbg !9887

if.then140:                                       ; preds = %if.end138
  %71 = load %struct.wmEvent*, %struct.wmEvent** %winevent.addr, align 8, !dbg !9888
  %keymodifier141 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %71, i32 0, i32 21, !dbg !9890
  %72 = load i16, i16* %keymodifier141, align 8, !dbg !9890
  %conv142 = sext i16 %72 to i32, !dbg !9888
  %73 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi.addr, align 8, !dbg !9891
  %keymodifier143 = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %73, i32 0, i32 12, !dbg !9892
  %74 = load i16, i16* %keymodifier143, align 2, !dbg !9892
  %conv144 = sext i16 %74 to i32, !dbg !9891
  %cmp145 = icmp ne i32 %conv142, %conv144, !dbg !9893
  br i1 %cmp145, label %if.then147, label %if.end148, !dbg !9894

if.then147:                                       ; preds = %if.then140
  store i32 0, i32* %retval, align 4, !dbg !9895
  br label %return, !dbg !9895

if.end148:                                        ; preds = %if.then140
  br label %if.end149, !dbg !9892

if.end149:                                        ; preds = %if.end148, %if.end138
  store i32 1, i32* %retval, align 4, !dbg !9896
  br label %return, !dbg !9896

return:                                           ; preds = %if.end149, %if.then147, %if.then136, %if.then116, %if.then96, %if.then76, %if.then56, %if.then42, %if.then31, %if.then
  %75 = load i32, i32* %retval, align 4, !dbg !9897
  ret i32 %75, !dbg !9897
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @wm_handler_operator_call(%struct.bContext* %C, %struct.ListBase* %handlers, %struct.wmEventHandler* %handler, %struct.wmEvent* %event, %struct.PointerRNA* %properties) #0 !dbg !9898 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %handlers.addr = alloca %struct.ListBase*, align 8
  %handler.addr = alloca %struct.wmEventHandler*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %properties.addr = alloca %struct.PointerRNA*, align 8
  %retval1 = alloca i32, align 4
  %op2 = alloca %struct.wmOperator*, align 8
  %ot = alloca %struct.wmOperatorType*, align 8
  %wm = alloca %struct.wmWindowManager*, align 8
  %area = alloca %struct.ScrArea*, align 8
  %region = alloca %struct.ARegion*, align 8
  %dbl_click_disabled = alloca i8, align 1
  %ot58 = alloca %struct.wmOperatorType*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !9901, metadata !DIExpression()), !dbg !9902
  store %struct.ListBase* %handlers, %struct.ListBase** %handlers.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %handlers.addr, metadata !9903, metadata !DIExpression()), !dbg !9904
  store %struct.wmEventHandler* %handler, %struct.wmEventHandler** %handler.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEventHandler** %handler.addr, metadata !9905, metadata !DIExpression()), !dbg !9906
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !9907, metadata !DIExpression()), !dbg !9908
  store %struct.PointerRNA* %properties, %struct.PointerRNA** %properties.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.PointerRNA** %properties.addr, metadata !9909, metadata !DIExpression()), !dbg !9910
  call void @llvm.dbg.declare(metadata i32* %retval1, metadata !9911, metadata !DIExpression()), !dbg !9912
  store i32 8, i32* %retval1, align 4, !dbg !9912
  %0 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler.addr, align 8, !dbg !9913
  %op = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %0, i32 0, i32 7, !dbg !9915
  %1 = load %struct.wmOperator*, %struct.wmOperator** %op, align 8, !dbg !9915
  %tobool = icmp ne %struct.wmOperator* %1, null, !dbg !9913
  br i1 %tobool, label %if.then, label %if.else57, !dbg !9916

if.then:                                          ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op2, metadata !9917, metadata !DIExpression()), !dbg !9919
  %2 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler.addr, align 8, !dbg !9920
  %op3 = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %2, i32 0, i32 7, !dbg !9921
  %3 = load %struct.wmOperator*, %struct.wmOperator** %op3, align 8, !dbg !9921
  store %struct.wmOperator* %3, %struct.wmOperator** %op2, align 8, !dbg !9919
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot, metadata !9922, metadata !DIExpression()), !dbg !9923
  %4 = load %struct.wmOperator*, %struct.wmOperator** %op2, align 8, !dbg !9924
  %type = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %4, i32 0, i32 4, !dbg !9925
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type, align 8, !dbg !9925
  store %struct.wmOperatorType* %5, %struct.wmOperatorType** %ot, align 8, !dbg !9923
  %6 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9926
  %7 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !9928
  %call = call zeroext i8 @wm_operator_check_locked_interface(%struct.bContext* %6, %struct.wmOperatorType* %7), !dbg !9929
  %tobool4 = icmp ne i8 %call, 0, !dbg !9929
  br i1 %tobool4, label %if.else, label %if.then5, !dbg !9930

if.then5:                                         ; preds = %if.then
  br label %if.end56, !dbg !9931

if.else:                                          ; preds = %if.then
  %8 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !9933
  %modal = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %8, i32 0, i32 8, !dbg !9935
  %9 = load i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)*, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %modal, align 8, !dbg !9935
  %tobool6 = icmp ne i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)* %9, null, !dbg !9933
  br i1 %tobool6, label %if.then7, label %if.else53, !dbg !9936

if.then7:                                         ; preds = %if.else
  call void @llvm.dbg.declare(metadata %struct.wmWindowManager** %wm, metadata !9937, metadata !DIExpression()), !dbg !9939
  %10 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9940
  %call8 = call %struct.wmWindowManager* @CTX_wm_manager(%struct.bContext* %10), !dbg !9941
  store %struct.wmWindowManager* %call8, %struct.wmWindowManager** %wm, align 8, !dbg !9939
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %area, metadata !9942, metadata !DIExpression()), !dbg !9943
  %11 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9944
  %call9 = call %struct.ScrArea* @CTX_wm_area(%struct.bContext* %11), !dbg !9945
  store %struct.ScrArea* %call9, %struct.ScrArea** %area, align 8, !dbg !9943
  call void @llvm.dbg.declare(metadata %struct.ARegion** %region, metadata !9946, metadata !DIExpression()), !dbg !9947
  %12 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9948
  %call10 = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %12), !dbg !9949
  store %struct.ARegion* %call10, %struct.ARegion** %region, align 8, !dbg !9947
  call void @llvm.dbg.declare(metadata i8* %dbl_click_disabled, metadata !9950, metadata !DIExpression()), !dbg !9951
  store i8 0, i8* %dbl_click_disabled, align 1, !dbg !9951
  %13 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9952
  %14 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler.addr, align 8, !dbg !9953
  call void @wm_handler_op_context(%struct.bContext* %13, %struct.wmEventHandler* %14), !dbg !9954
  %15 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9955
  %16 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !9956
  call void @wm_region_mouse_co(%struct.bContext* %15, %struct.wmEvent* %16), !dbg !9957
  %17 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9958
  %18 = load %struct.wmOperator*, %struct.wmOperator** %op2, align 8, !dbg !9959
  %19 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !9960
  call void @wm_event_modalkeymap(%struct.bContext* %17, %struct.wmOperator* %18, %struct.wmEvent* %19, i8* %dbl_click_disabled), !dbg !9961
  %20 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !9962
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %20, i32 0, i32 19, !dbg !9964
  %21 = load i16, i16* %flag, align 8, !dbg !9964
  %conv = sext i16 %21 to i32, !dbg !9962
  %and = and i32 %conv, 2, !dbg !9965
  %tobool11 = icmp ne i32 %and, 0, !dbg !9965
  br i1 %tobool11, label %if.then12, label %if.end, !dbg !9966

if.then12:                                        ; preds = %if.then7
  %22 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !9967
  %op_undo_depth = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %22, i32 0, i32 6, !dbg !9968
  %23 = load i16, i16* %op_undo_depth, align 2, !dbg !9969
  %inc = add i16 %23, 1, !dbg !9969
  store i16 %inc, i16* %op_undo_depth, align 2, !dbg !9969
  br label %if.end, !dbg !9967

if.end:                                           ; preds = %if.then12, %if.then7
  %24 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !9970
  %modal13 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %24, i32 0, i32 8, !dbg !9971
  %25 = load i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)*, i32 (%struct.bContext*, %struct.wmOperator*, %struct.wmEvent*)** %modal13, align 8, !dbg !9971
  %26 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9972
  %27 = load %struct.wmOperator*, %struct.wmOperator** %op2, align 8, !dbg !9973
  %28 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !9974
  %call14 = call i32 %25(%struct.bContext* %26, %struct.wmOperator* %27, %struct.wmEvent* %28), !dbg !9970
  store i32 %call14, i32* %retval1, align 4, !dbg !9975
  %29 = load i32, i32* %retval1, align 4, !dbg !9976
  %30 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9977
  %call15 = call %struct.wmWindowManager* @CTX_wm_manager(%struct.bContext* %30), !dbg !9979
  %31 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !9980
  %cmp = icmp eq %struct.wmWindowManager* %call15, %31, !dbg !9981
  br i1 %cmp, label %if.then17, label %if.end52, !dbg !9982

if.then17:                                        ; preds = %if.end
  %32 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !9983
  %33 = load i8, i8* %dbl_click_disabled, align 1, !dbg !9985
  call void @wm_event_modalmap_end(%struct.wmEvent* %32, i8 zeroext %33), !dbg !9986
  %34 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot, align 8, !dbg !9987
  %flag18 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %34, i32 0, i32 19, !dbg !9989
  %35 = load i16, i16* %flag18, align 8, !dbg !9989
  %conv19 = sext i16 %35 to i32, !dbg !9987
  %and20 = and i32 %conv19, 2, !dbg !9990
  %tobool21 = icmp ne i32 %and20, 0, !dbg !9990
  br i1 %tobool21, label %if.then22, label %if.end24, !dbg !9991

if.then22:                                        ; preds = %if.then17
  %36 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !9992
  %op_undo_depth23 = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %36, i32 0, i32 6, !dbg !9993
  %37 = load i16, i16* %op_undo_depth23, align 2, !dbg !9994
  %dec = add i16 %37, -1, !dbg !9994
  store i16 %dec, i16* %op_undo_depth23, align 2, !dbg !9994
  br label %if.end24, !dbg !9992

if.end24:                                         ; preds = %if.then22, %if.then17
  %38 = load i32, i32* %retval1, align 4, !dbg !9995
  %and25 = and i32 %38, 6, !dbg !9997
  %tobool26 = icmp ne i32 %and25, 0, !dbg !9997
  br i1 %tobool26, label %if.then27, label %if.end28, !dbg !9998

if.then27:                                        ; preds = %if.end24
  %39 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !9999
  %40 = load %struct.wmOperator*, %struct.wmOperator** %op2, align 8, !dbg !10000
  %41 = load i32, i32* %retval1, align 4, !dbg !10001
  call void @wm_operator_reports(%struct.bContext* %39, %struct.wmOperator* %40, i32 %41, i8 zeroext 0), !dbg !10002
  br label %if.end28, !dbg !10002

if.end28:                                         ; preds = %if.then27, %if.end24
  %42 = load i32, i32* %retval1, align 4, !dbg !10003
  %and29 = and i32 %42, 4, !dbg !10005
  %tobool30 = icmp ne i32 %and29, 0, !dbg !10005
  br i1 %tobool30, label %if.then31, label %if.else33, !dbg !10006

if.then31:                                        ; preds = %if.end28
  %43 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10007
  %44 = load %struct.wmOperator*, %struct.wmOperator** %op2, align 8, !dbg !10009
  call void @wm_operator_finished(%struct.bContext* %43, %struct.wmOperator* %44, i8 zeroext 0), !dbg !10010
  %45 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler.addr, align 8, !dbg !10011
  %op32 = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %45, i32 0, i32 7, !dbg !10012
  store %struct.wmOperator* null, %struct.wmOperator** %op32, align 8, !dbg !10013
  br label %if.end39, !dbg !10014

if.else33:                                        ; preds = %if.end28
  %46 = load i32, i32* %retval1, align 4, !dbg !10015
  %and34 = and i32 %46, 6, !dbg !10017
  %tobool35 = icmp ne i32 %and34, 0, !dbg !10017
  br i1 %tobool35, label %if.then36, label %if.end38, !dbg !10018

if.then36:                                        ; preds = %if.else33
  %47 = load %struct.wmOperator*, %struct.wmOperator** %op2, align 8, !dbg !10019
  call void @WM_operator_free(%struct.wmOperator* %47), !dbg !10021
  %48 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler.addr, align 8, !dbg !10022
  %op37 = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %48, i32 0, i32 7, !dbg !10023
  store %struct.wmOperator* null, %struct.wmOperator** %op37, align 8, !dbg !10024
  br label %if.end38, !dbg !10025

if.end38:                                         ; preds = %if.then36, %if.else33
  br label %if.end39

if.end39:                                         ; preds = %if.end38, %if.then31
  %49 = load i32, i32* %retval1, align 4, !dbg !10026
  %and40 = and i32 %49, 8, !dbg !10028
  %tobool41 = icmp ne i32 %and40, 0, !dbg !10028
  br i1 %tobool41, label %if.then44, label %lor.lhs.false, !dbg !10029

lor.lhs.false:                                    ; preds = %if.end39
  %50 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !10030
  %call42 = call i32 @wm_event_always_pass(%struct.wmEvent* %50), !dbg !10031
  %tobool43 = icmp ne i32 %call42, 0, !dbg !10031
  br i1 %tobool43, label %if.then44, label %if.else45, !dbg !10032

if.then44:                                        ; preds = %lor.lhs.false, %if.end39
  %51 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10033
  %52 = load %struct.ScrArea*, %struct.ScrArea** %area, align 8, !dbg !10035
  call void @CTX_wm_area_set(%struct.bContext* %51, %struct.ScrArea* %52), !dbg !10036
  %53 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10037
  %54 = load %struct.ARegion*, %struct.ARegion** %region, align 8, !dbg !10038
  call void @CTX_wm_region_set(%struct.bContext* %53, %struct.ARegion* %54), !dbg !10039
  br label %if.end46, !dbg !10040

if.else45:                                        ; preds = %lor.lhs.false
  %55 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10041
  call void @CTX_wm_area_set(%struct.bContext* %55, %struct.ScrArea* null), !dbg !10043
  %56 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10044
  call void @CTX_wm_region_set(%struct.bContext* %56, %struct.ARegion* null), !dbg !10045
  br label %if.end46

if.end46:                                         ; preds = %if.else45, %if.then44
  %57 = load i32, i32* %retval1, align 4, !dbg !10046
  %and47 = and i32 %57, 6, !dbg !10048
  %tobool48 = icmp ne i32 %and47, 0, !dbg !10048
  br i1 %tobool48, label %if.then49, label %if.end51, !dbg !10049

if.then49:                                        ; preds = %if.end46
  %58 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10050
  %call50 = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %58), !dbg !10052
  call void @WM_cursor_grab_disable(%struct.wmWindow* %call50, i32* null), !dbg !10053
  %59 = load %struct.ListBase*, %struct.ListBase** %handlers.addr, align 8, !dbg !10054
  %60 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler.addr, align 8, !dbg !10055
  %61 = bitcast %struct.wmEventHandler* %60 to i8*, !dbg !10055
  call void @BLI_remlink(%struct.ListBase* %59, i8* %61), !dbg !10056
  %62 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler.addr, align 8, !dbg !10057
  call void @wm_event_free_handler(%struct.wmEventHandler* %62), !dbg !10058
  br label %if.end51, !dbg !10059

if.end51:                                         ; preds = %if.then49, %if.end46
  br label %if.end52, !dbg !10060

if.end52:                                         ; preds = %if.end51, %if.end
  br label %if.end55, !dbg !10061

if.else53:                                        ; preds = %if.else
  %63 = load %struct.wmOperator*, %struct.wmOperator** %op2, align 8, !dbg !10062
  %idname = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %63, i32 0, i32 2, !dbg !10064
  %arraydecay = getelementptr inbounds [64 x i8], [64 x i8]* %idname, i64 0, i64 0, !dbg !10062
  %call54 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.30, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @__func__.wm_handler_operator_call, i64 0, i64 0), i8* %arraydecay), !dbg !10065
  br label %if.end55

if.end55:                                         ; preds = %if.else53, %if.end52
  br label %if.end56

if.end56:                                         ; preds = %if.end55, %if.then5
  br label %if.end68, !dbg !10066

if.else57:                                        ; preds = %entry
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot58, metadata !10067, metadata !DIExpression()), !dbg !10069
  %64 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !10070
  %keymap_idname = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %64, i32 0, i32 23, !dbg !10071
  %65 = load i8*, i8** %keymap_idname, align 8, !dbg !10071
  %call59 = call %struct.wmOperatorType* @WM_operatortype_find(i8* %65, i8 zeroext 0), !dbg !10072
  store %struct.wmOperatorType* %call59, %struct.wmOperatorType** %ot58, align 8, !dbg !10069
  %66 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot58, align 8, !dbg !10073
  %tobool60 = icmp ne %struct.wmOperatorType* %66, null, !dbg !10073
  br i1 %tobool60, label %if.then61, label %if.end67, !dbg !10075

if.then61:                                        ; preds = %if.else57
  %67 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10076
  %68 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot58, align 8, !dbg !10079
  %call62 = call zeroext i8 @wm_operator_check_locked_interface(%struct.bContext* %67, %struct.wmOperatorType* %68), !dbg !10080
  %tobool63 = icmp ne i8 %call62, 0, !dbg !10080
  br i1 %tobool63, label %if.then64, label %if.end66, !dbg !10081

if.then64:                                        ; preds = %if.then61
  %69 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10082
  %70 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot58, align 8, !dbg !10084
  %71 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !10085
  %72 = load %struct.PointerRNA*, %struct.PointerRNA** %properties.addr, align 8, !dbg !10086
  %call65 = call i32 @wm_operator_invoke(%struct.bContext* %69, %struct.wmOperatorType* %70, %struct.wmEvent* %71, %struct.PointerRNA* %72, %struct.ReportList* null, i8 zeroext 0), !dbg !10087
  store i32 %call65, i32* %retval1, align 4, !dbg !10088
  br label %if.end66, !dbg !10089

if.end66:                                         ; preds = %if.then64, %if.then61
  br label %if.end67, !dbg !10090

if.end67:                                         ; preds = %if.end66, %if.else57
  br label %if.end68

if.end68:                                         ; preds = %if.end67, %if.end56
  %73 = load i32, i32* %retval1, align 4, !dbg !10091
  %cmp69 = icmp eq i32 %73, 12, !dbg !10093
  br i1 %cmp69, label %if.then71, label %if.end72, !dbg !10094

if.then71:                                        ; preds = %if.end68
  store i32 2, i32* %retval, align 4, !dbg !10095
  br label %return, !dbg !10095

if.end72:                                         ; preds = %if.end68
  %74 = load i32, i32* %retval1, align 4, !dbg !10096
  %cmp73 = icmp eq i32 %74, 9, !dbg !10098
  br i1 %cmp73, label %if.then75, label %if.end76, !dbg !10099

if.then75:                                        ; preds = %if.end72
  store i32 5, i32* %retval, align 4, !dbg !10100
  br label %return, !dbg !10100

if.end76:                                         ; preds = %if.end72
  %75 = load i32, i32* %retval1, align 4, !dbg !10101
  %and77 = and i32 %75, 8, !dbg !10103
  %tobool78 = icmp ne i32 %and77, 0, !dbg !10103
  br i1 %tobool78, label %if.then79, label %if.end80, !dbg !10104

if.then79:                                        ; preds = %if.end76
  store i32 0, i32* %retval, align 4, !dbg !10105
  br label %return, !dbg !10105

if.end80:                                         ; preds = %if.end76
  store i32 1, i32* %retval, align 4, !dbg !10106
  br label %return, !dbg !10106

return:                                           ; preds = %if.end80, %if.then79, %if.then75, %if.then71
  %76 = load i32, i32* %retval, align 4, !dbg !10107
  ret i32 %76, !dbg !10107
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @wm_handler_ui_call(%struct.bContext* %C, %struct.wmEventHandler* %handler, %struct.wmEvent* %event, i32 %always_pass) #0 !dbg !2399 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %handler.addr = alloca %struct.wmEventHandler*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %always_pass.addr = alloca i32, align 4
  %area = alloca %struct.ScrArea*, align 8
  %region = alloca %struct.ARegion*, align 8
  %menu = alloca %struct.ARegion*, align 8
  %is_wheel = alloca i8, align 1
  %retval13 = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !10108, metadata !DIExpression()), !dbg !10109
  store %struct.wmEventHandler* %handler, %struct.wmEventHandler** %handler.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEventHandler** %handler.addr, metadata !10110, metadata !DIExpression()), !dbg !10111
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !10112, metadata !DIExpression()), !dbg !10113
  store i32 %always_pass, i32* %always_pass.addr, align 4
  call void @llvm.dbg.declare(metadata i32* %always_pass.addr, metadata !10114, metadata !DIExpression()), !dbg !10115
  call void @llvm.dbg.declare(metadata %struct.ScrArea** %area, metadata !10116, metadata !DIExpression()), !dbg !10117
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10118
  %call = call %struct.ScrArea* @CTX_wm_area(%struct.bContext* %0), !dbg !10119
  store %struct.ScrArea* %call, %struct.ScrArea** %area, align 8, !dbg !10117
  call void @llvm.dbg.declare(metadata %struct.ARegion** %region, metadata !10120, metadata !DIExpression()), !dbg !10121
  %1 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10122
  %call1 = call %struct.ARegion* @CTX_wm_region(%struct.bContext* %1), !dbg !10123
  store %struct.ARegion* %call1, %struct.ARegion** %region, align 8, !dbg !10121
  call void @llvm.dbg.declare(metadata %struct.ARegion** %menu, metadata !10124, metadata !DIExpression()), !dbg !10125
  %2 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10126
  %call2 = call %struct.ARegion* @CTX_wm_menu(%struct.bContext* %2), !dbg !10127
  store %struct.ARegion* %call2, %struct.ARegion** %menu, align 8, !dbg !10125
  call void @llvm.dbg.declare(metadata i8* %is_wheel, metadata !10128, metadata !DIExpression()), !dbg !10129
  %3 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !10130
  %type = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %3, i32 0, i32 2, !dbg !10130
  %4 = load i16, i16* %type, align 8, !dbg !10130
  %conv = sext i16 %4 to i32, !dbg !10130
  %cmp = icmp eq i32 %conv, 10, !dbg !10130
  br i1 %cmp, label %lor.end, label %lor.lhs.false, !dbg !10130

lor.lhs.false:                                    ; preds = %entry
  %5 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !10130
  %type4 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %5, i32 0, i32 2, !dbg !10130
  %6 = load i16, i16* %type4, align 8, !dbg !10130
  %conv5 = sext i16 %6 to i32, !dbg !10130
  %cmp6 = icmp eq i32 %conv5, 11, !dbg !10130
  br i1 %cmp6, label %lor.end, label %lor.rhs, !dbg !10130

lor.rhs:                                          ; preds = %lor.lhs.false
  %7 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !10130
  %type8 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %7, i32 0, i32 2, !dbg !10130
  %8 = load i16, i16* %type8, align 8, !dbg !10130
  %conv9 = sext i16 %8 to i32, !dbg !10130
  %cmp10 = icmp eq i32 %conv9, 14, !dbg !10130
  br label %lor.end, !dbg !10130

lor.end:                                          ; preds = %lor.rhs, %lor.lhs.false, %entry
  %9 = phi i1 [ true, %lor.lhs.false ], [ true, %entry ], [ %cmp10, %lor.rhs ]
  %lor.ext = zext i1 %9 to i32, !dbg !10130
  %conv12 = trunc i32 %lor.ext to i8, !dbg !10130
  store i8 %conv12, i8* %is_wheel, align 1, !dbg !10129
  call void @llvm.dbg.declare(metadata i32* %retval13, metadata !10131, metadata !DIExpression()), !dbg !10132
  %10 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler.addr, align 8, !dbg !10133
  %flag = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %10, i32 0, i32 3, !dbg !10135
  %11 = load i32, i32* %flag, align 4, !dbg !10135
  %and = and i32 %11, 4, !dbg !10136
  %cmp14 = icmp eq i32 %and, 0, !dbg !10137
  br i1 %cmp14, label %land.lhs.true, label %if.end, !dbg !10138

land.lhs.true:                                    ; preds = %lor.end
  %12 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !10139
  %type16 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %12, i32 0, i32 2, !dbg !10140
  %13 = load i16, i16* %type16, align 8, !dbg !10140
  %conv17 = sext i16 %13 to i32, !dbg !10139
  %cmp18 = icmp ne i32 %conv17, 1, !dbg !10141
  br i1 %cmp18, label %land.lhs.true20, label %if.end, !dbg !10142

land.lhs.true20:                                  ; preds = %land.lhs.true
  %14 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !10143
  %val = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %14, i32 0, i32 3, !dbg !10144
  %15 = load i16, i16* %val, align 2, !dbg !10144
  %conv21 = sext i16 %15 to i32, !dbg !10143
  %cmp22 = icmp eq i32 %conv21, 4, !dbg !10145
  br i1 %cmp22, label %if.then, label %if.end, !dbg !10146

if.then:                                          ; preds = %land.lhs.true20
  store i32 0, i32* %retval, align 4, !dbg !10147
  br label %return, !dbg !10147

if.end:                                           ; preds = %land.lhs.true20, %land.lhs.true, %lor.end
  %16 = load i8, i8* @wm_handler_ui_call.do_wheel_ui, align 1, !dbg !10149
  %conv24 = zext i8 %16 to i32, !dbg !10149
  %cmp25 = icmp eq i32 %conv24, 0, !dbg !10151
  br i1 %cmp25, label %if.then27, label %if.end35, !dbg !10152

if.then27:                                        ; preds = %if.end
  %17 = load i8, i8* %is_wheel, align 1, !dbg !10153
  %tobool = icmp ne i8 %17, 0, !dbg !10153
  br i1 %tobool, label %if.then28, label %if.else, !dbg !10156

if.then28:                                        ; preds = %if.then27
  store i32 0, i32* %retval, align 4, !dbg !10157
  br label %return, !dbg !10157

if.else:                                          ; preds = %if.then27
  %18 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !10158
  %call29 = call i32 @wm_event_always_pass(%struct.wmEvent* %18), !dbg !10160
  %cmp30 = icmp eq i32 %call29, 0, !dbg !10161
  br i1 %cmp30, label %if.then32, label %if.end33, !dbg !10162

if.then32:                                        ; preds = %if.else
  store i8 1, i8* @wm_handler_ui_call.do_wheel_ui, align 1, !dbg !10163
  br label %if.end33, !dbg !10164

if.end33:                                         ; preds = %if.then32, %if.else
  br label %if.end34

if.end34:                                         ; preds = %if.end33
  br label %if.end35, !dbg !10165

if.end35:                                         ; preds = %if.end34, %if.end
  %19 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler.addr, align 8, !dbg !10166
  %ui_area = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %19, i32 0, i32 13, !dbg !10168
  %20 = load %struct.ScrArea*, %struct.ScrArea** %ui_area, align 8, !dbg !10168
  %tobool36 = icmp ne %struct.ScrArea* %20, null, !dbg !10166
  br i1 %tobool36, label %if.then37, label %if.end39, !dbg !10169

if.then37:                                        ; preds = %if.end35
  %21 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10170
  %22 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler.addr, align 8, !dbg !10171
  %ui_area38 = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %22, i32 0, i32 13, !dbg !10172
  %23 = load %struct.ScrArea*, %struct.ScrArea** %ui_area38, align 8, !dbg !10172
  call void @CTX_wm_area_set(%struct.bContext* %21, %struct.ScrArea* %23), !dbg !10173
  br label %if.end39, !dbg !10173

if.end39:                                         ; preds = %if.then37, %if.end35
  %24 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler.addr, align 8, !dbg !10174
  %ui_region = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %24, i32 0, i32 14, !dbg !10176
  %25 = load %struct.ARegion*, %struct.ARegion** %ui_region, align 8, !dbg !10176
  %tobool40 = icmp ne %struct.ARegion* %25, null, !dbg !10174
  br i1 %tobool40, label %if.then41, label %if.end43, !dbg !10177

if.then41:                                        ; preds = %if.end39
  %26 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10178
  %27 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler.addr, align 8, !dbg !10179
  %ui_region42 = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %27, i32 0, i32 14, !dbg !10180
  %28 = load %struct.ARegion*, %struct.ARegion** %ui_region42, align 8, !dbg !10180
  call void @CTX_wm_region_set(%struct.bContext* %26, %struct.ARegion* %28), !dbg !10181
  br label %if.end43, !dbg !10181

if.end43:                                         ; preds = %if.then41, %if.end39
  %29 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler.addr, align 8, !dbg !10182
  %ui_menu = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %29, i32 0, i32 15, !dbg !10184
  %30 = load %struct.ARegion*, %struct.ARegion** %ui_menu, align 8, !dbg !10184
  %tobool44 = icmp ne %struct.ARegion* %30, null, !dbg !10182
  br i1 %tobool44, label %if.then45, label %if.end47, !dbg !10185

if.then45:                                        ; preds = %if.end43
  %31 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10186
  %32 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler.addr, align 8, !dbg !10187
  %ui_menu46 = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %32, i32 0, i32 15, !dbg !10188
  %33 = load %struct.ARegion*, %struct.ARegion** %ui_menu46, align 8, !dbg !10188
  call void @CTX_wm_menu_set(%struct.bContext* %31, %struct.ARegion* %33), !dbg !10189
  br label %if.end47, !dbg !10189

if.end47:                                         ; preds = %if.then45, %if.end43
  %34 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler.addr, align 8, !dbg !10190
  %ui_handle = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %34, i32 0, i32 10, !dbg !10191
  %35 = load i32 (%struct.bContext*, %struct.wmEvent*, i8*)*, i32 (%struct.bContext*, %struct.wmEvent*, i8*)** %ui_handle, align 8, !dbg !10191
  %36 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10192
  %37 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !10193
  %38 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler.addr, align 8, !dbg !10194
  %ui_userdata = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %38, i32 0, i32 12, !dbg !10195
  %39 = load i8*, i8** %ui_userdata, align 8, !dbg !10195
  %call48 = call i32 %35(%struct.bContext* %36, %struct.wmEvent* %37, i8* %39), !dbg !10190
  store i32 %call48, i32* %retval13, align 4, !dbg !10196
  %40 = load i32, i32* %retval13, align 4, !dbg !10197
  %cmp49 = icmp ne i32 %40, 1, !dbg !10199
  br i1 %cmp49, label %if.then53, label %lor.lhs.false51, !dbg !10200

lor.lhs.false51:                                  ; preds = %if.end47
  %41 = load i32, i32* %always_pass.addr, align 4, !dbg !10201
  %tobool52 = icmp ne i32 %41, 0, !dbg !10201
  br i1 %tobool52, label %if.then53, label %if.else54, !dbg !10202

if.then53:                                        ; preds = %lor.lhs.false51, %if.end47
  %42 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10203
  %43 = load %struct.ScrArea*, %struct.ScrArea** %area, align 8, !dbg !10205
  call void @CTX_wm_area_set(%struct.bContext* %42, %struct.ScrArea* %43), !dbg !10206
  %44 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10207
  %45 = load %struct.ARegion*, %struct.ARegion** %region, align 8, !dbg !10208
  call void @CTX_wm_region_set(%struct.bContext* %44, %struct.ARegion* %45), !dbg !10209
  %46 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10210
  %47 = load %struct.ARegion*, %struct.ARegion** %menu, align 8, !dbg !10211
  call void @CTX_wm_menu_set(%struct.bContext* %46, %struct.ARegion* %47), !dbg !10212
  br label %if.end55, !dbg !10213

if.else54:                                        ; preds = %lor.lhs.false51
  %48 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10214
  call void @CTX_wm_area_set(%struct.bContext* %48, %struct.ScrArea* null), !dbg !10216
  %49 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10217
  call void @CTX_wm_region_set(%struct.bContext* %49, %struct.ARegion* null), !dbg !10218
  %50 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10219
  call void @CTX_wm_menu_set(%struct.bContext* %50, %struct.ARegion* null), !dbg !10220
  br label %if.end55

if.end55:                                         ; preds = %if.else54, %if.then53
  %51 = load i32, i32* %retval13, align 4, !dbg !10221
  %cmp56 = icmp eq i32 %51, 1, !dbg !10223
  br i1 %cmp56, label %if.then58, label %if.end59, !dbg !10224

if.then58:                                        ; preds = %if.end55
  store i32 1, i32* %retval, align 4, !dbg !10225
  br label %return, !dbg !10225

if.end59:                                         ; preds = %if.end55
  %52 = load i8, i8* %is_wheel, align 1, !dbg !10226
  %tobool60 = icmp ne i8 %52, 0, !dbg !10226
  br i1 %tobool60, label %if.then61, label %if.end62, !dbg !10228

if.then61:                                        ; preds = %if.end59
  store i8 0, i8* @wm_handler_ui_call.do_wheel_ui, align 1, !dbg !10229
  br label %if.end62, !dbg !10230

if.end62:                                         ; preds = %if.then61, %if.end59
  store i32 0, i32* %retval, align 4, !dbg !10231
  br label %return, !dbg !10231

return:                                           ; preds = %if.end62, %if.then58, %if.then28, %if.then
  %53 = load i32, i32* %retval, align 4, !dbg !10232
  ret i32 %53, !dbg !10232
}

; Function Attrs: noinline nounwind uwtable
define internal i32 @wm_handler_fileselect_call(%struct.bContext* %C, %struct.ListBase* %handlers, %struct.wmEventHandler* %handler, %struct.wmEvent* %event) #0 !dbg !10233 {
entry:
  %retval = alloca i32, align 4
  %C.addr = alloca %struct.bContext*, align 8
  %handlers.addr = alloca %struct.ListBase*, align 8
  %handler.addr = alloca %struct.wmEventHandler*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %action = alloca i32, align 4
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !10236, metadata !DIExpression()), !dbg !10237
  store %struct.ListBase* %handlers, %struct.ListBase** %handlers.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ListBase** %handlers.addr, metadata !10238, metadata !DIExpression()), !dbg !10239
  store %struct.wmEventHandler* %handler, %struct.wmEventHandler** %handler.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEventHandler** %handler.addr, metadata !10240, metadata !DIExpression()), !dbg !10241
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !10242, metadata !DIExpression()), !dbg !10243
  call void @llvm.dbg.declare(metadata i32* %action, metadata !10244, metadata !DIExpression()), !dbg !10245
  store i32 0, i32* %action, align 4, !dbg !10245
  %0 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !10246
  %type = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %0, i32 0, i32 2, !dbg !10248
  %1 = load i16, i16* %type, align 8, !dbg !10248
  %conv = sext i16 %1 to i32, !dbg !10246
  %cmp = icmp ne i32 %conv, 20512, !dbg !10249
  br i1 %cmp, label %if.then, label %if.end, !dbg !10250

if.then:                                          ; preds = %entry
  %2 = load i32, i32* %action, align 4, !dbg !10251
  store i32 %2, i32* %retval, align 4, !dbg !10252
  br label %return, !dbg !10252

if.end:                                           ; preds = %entry
  %3 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler.addr, align 8, !dbg !10253
  %op = getelementptr inbounds %struct.wmEventHandler, %struct.wmEventHandler* %3, i32 0, i32 7, !dbg !10255
  %4 = load %struct.wmOperator*, %struct.wmOperator** %op, align 8, !dbg !10255
  %5 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !10256
  %customdata = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %5, i32 0, i32 28, !dbg !10257
  %6 = load i8*, i8** %customdata, align 8, !dbg !10257
  %7 = bitcast i8* %6 to %struct.wmOperator*, !dbg !10258
  %cmp2 = icmp ne %struct.wmOperator* %4, %7, !dbg !10259
  br i1 %cmp2, label %if.then4, label %if.end5, !dbg !10260

if.then4:                                         ; preds = %if.end
  %8 = load i32, i32* %action, align 4, !dbg !10261
  store i32 %8, i32* %retval, align 4, !dbg !10262
  br label %return, !dbg !10262

if.end5:                                          ; preds = %if.end
  %9 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10263
  %10 = load %struct.ListBase*, %struct.ListBase** %handlers.addr, align 8, !dbg !10264
  %11 = load %struct.wmEventHandler*, %struct.wmEventHandler** %handler.addr, align 8, !dbg !10265
  %12 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !10266
  %val = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %12, i32 0, i32 3, !dbg !10267
  %13 = load i16, i16* %val, align 2, !dbg !10267
  %conv6 = sext i16 %13 to i32, !dbg !10266
  %call = call i32 @wm_handler_fileselect_do(%struct.bContext* %9, %struct.ListBase* %10, %struct.wmEventHandler* %11, i32 %conv6), !dbg !10268
  store i32 %call, i32* %retval, align 4, !dbg !10269
  br label %return, !dbg !10269

return:                                           ; preds = %if.end5, %if.then4, %if.then
  %14 = load i32, i32* %retval, align 4, !dbg !10270
  ret i32 %14, !dbg !10270
}

declare dso_local i32 @wm_cursor_arrow_move(%struct.wmWindow*, %struct.wmEvent*) #3

declare dso_local void @BLI_rcti_translate(%struct.rcti*, i32, i32) #3

; Function Attrs: noinline nounwind uwtable
define internal zeroext i8 @wm_operator_check_locked_interface(%struct.bContext* %C, %struct.wmOperatorType* %ot) #0 !dbg !10271 {
entry:
  %retval = alloca i8, align 1
  %C.addr = alloca %struct.bContext*, align 8
  %ot.addr = alloca %struct.wmOperatorType*, align 8
  %wm = alloca %struct.wmWindowManager*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !10274, metadata !DIExpression()), !dbg !10275
  store %struct.wmOperatorType* %ot, %struct.wmOperatorType** %ot.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperatorType** %ot.addr, metadata !10276, metadata !DIExpression()), !dbg !10277
  call void @llvm.dbg.declare(metadata %struct.wmWindowManager** %wm, metadata !10278, metadata !DIExpression()), !dbg !10279
  %0 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10280
  %call = call %struct.wmWindowManager* @CTX_wm_manager(%struct.bContext* %0), !dbg !10281
  store %struct.wmWindowManager* %call, %struct.wmWindowManager** %wm, align 8, !dbg !10279
  %1 = load %struct.wmWindowManager*, %struct.wmWindowManager** %wm, align 8, !dbg !10282
  %is_interface_locked = getelementptr inbounds %struct.wmWindowManager, %struct.wmWindowManager* %1, i32 0, i32 19, !dbg !10284
  %2 = load i8, i8* %is_interface_locked, align 8, !dbg !10284
  %tobool = icmp ne i8 %2, 0, !dbg !10282
  br i1 %tobool, label %if.then, label %if.end3, !dbg !10285

if.then:                                          ; preds = %entry
  %3 = load %struct.wmOperatorType*, %struct.wmOperatorType** %ot.addr, align 8, !dbg !10286
  %flag = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %3, i32 0, i32 19, !dbg !10289
  %4 = load i16, i16* %flag, align 8, !dbg !10289
  %conv = sext i16 %4 to i32, !dbg !10286
  %and = and i32 %conv, 128, !dbg !10290
  %cmp = icmp eq i32 %and, 0, !dbg !10291
  br i1 %cmp, label %if.then2, label %if.end, !dbg !10292

if.then2:                                         ; preds = %if.then
  store i8 0, i8* %retval, align 1, !dbg !10293
  br label %return, !dbg !10293

if.end:                                           ; preds = %if.then
  br label %if.end3, !dbg !10295

if.end3:                                          ; preds = %if.end, %entry
  store i8 1, i8* %retval, align 1, !dbg !10296
  br label %return, !dbg !10296

return:                                           ; preds = %if.end3, %if.then2
  %5 = load i8, i8* %retval, align 1, !dbg !10297
  ret i8 %5, !dbg !10297
}

; Function Attrs: noinline nounwind uwtable
define internal void @wm_event_modalkeymap(%struct.bContext* %C, %struct.wmOperator* %op, %struct.wmEvent* %event, i8* %dbl_click_disabled) #0 !dbg !10298 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %op.addr = alloca %struct.wmOperator*, align 8
  %event.addr = alloca %struct.wmEvent*, align 8
  %dbl_click_disabled.addr = alloca i8*, align 8
  %keymap = alloca %struct.wmKeyMap*, align 8
  %kmi = alloca %struct.wmKeyMapItem*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !10302, metadata !DIExpression()), !dbg !10303
  store %struct.wmOperator* %op, %struct.wmOperator** %op.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmOperator** %op.addr, metadata !10304, metadata !DIExpression()), !dbg !10305
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !10306, metadata !DIExpression()), !dbg !10307
  store i8* %dbl_click_disabled, i8** %dbl_click_disabled.addr, align 8
  call void @llvm.dbg.declare(metadata i8** %dbl_click_disabled.addr, metadata !10308, metadata !DIExpression()), !dbg !10309
  %0 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10310
  %opm = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %0, i32 0, i32 10, !dbg !10312
  %1 = load %struct.wmOperator*, %struct.wmOperator** %opm, align 8, !dbg !10312
  %tobool = icmp ne %struct.wmOperator* %1, null, !dbg !10310
  br i1 %tobool, label %if.then, label %if.end, !dbg !10313

if.then:                                          ; preds = %entry
  %2 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10314
  %opm1 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %2, i32 0, i32 10, !dbg !10315
  %3 = load %struct.wmOperator*, %struct.wmOperator** %opm1, align 8, !dbg !10315
  store %struct.wmOperator* %3, %struct.wmOperator** %op.addr, align 8, !dbg !10316
  br label %if.end, !dbg !10317

if.end:                                           ; preds = %if.then, %entry
  %4 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10318
  %type = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %4, i32 0, i32 4, !dbg !10320
  %5 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type, align 8, !dbg !10320
  %modalkeymap = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %5, i32 0, i32 15, !dbg !10321
  %6 = load %struct.wmKeyMap*, %struct.wmKeyMap** %modalkeymap, align 8, !dbg !10321
  %tobool2 = icmp ne %struct.wmKeyMap* %6, null, !dbg !10318
  br i1 %tobool2, label %if.then3, label %if.else, !dbg !10322

if.then3:                                         ; preds = %if.end
  call void @llvm.dbg.declare(metadata %struct.wmKeyMap** %keymap, metadata !10323, metadata !DIExpression()), !dbg !10325
  %7 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10326
  %call = call %struct.wmWindowManager* @CTX_wm_manager(%struct.bContext* %7), !dbg !10327
  %8 = load %struct.wmOperator*, %struct.wmOperator** %op.addr, align 8, !dbg !10328
  %type4 = getelementptr inbounds %struct.wmOperator, %struct.wmOperator* %8, i32 0, i32 4, !dbg !10329
  %9 = load %struct.wmOperatorType*, %struct.wmOperatorType** %type4, align 8, !dbg !10329
  %modalkeymap5 = getelementptr inbounds %struct.wmOperatorType, %struct.wmOperatorType* %9, i32 0, i32 15, !dbg !10330
  %10 = load %struct.wmKeyMap*, %struct.wmKeyMap** %modalkeymap5, align 8, !dbg !10330
  %call6 = call %struct.wmKeyMap* @WM_keymap_active(%struct.wmWindowManager* %call, %struct.wmKeyMap* %10), !dbg !10331
  store %struct.wmKeyMap* %call6, %struct.wmKeyMap** %keymap, align 8, !dbg !10325
  call void @llvm.dbg.declare(metadata %struct.wmKeyMapItem** %kmi, metadata !10332, metadata !DIExpression()), !dbg !10333
  %11 = load %struct.wmKeyMap*, %struct.wmKeyMap** %keymap, align 8, !dbg !10334
  %items = getelementptr inbounds %struct.wmKeyMap, %struct.wmKeyMap* %11, i32 0, i32 2, !dbg !10336
  %first = getelementptr inbounds %struct.ListBase, %struct.ListBase* %items, i32 0, i32 0, !dbg !10337
  %12 = load i8*, i8** %first, align 8, !dbg !10337
  %13 = bitcast i8* %12 to %struct.wmKeyMapItem*, !dbg !10334
  store %struct.wmKeyMapItem* %13, %struct.wmKeyMapItem** %kmi, align 8, !dbg !10338
  br label %for.cond, !dbg !10339

for.cond:                                         ; preds = %for.inc, %if.then3
  %14 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !10340
  %tobool7 = icmp ne %struct.wmKeyMapItem* %14, null, !dbg !10342
  br i1 %tobool7, label %for.body, label %for.end, !dbg !10342

for.body:                                         ; preds = %for.cond
  %15 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !10343
  %16 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !10346
  %call8 = call i32 @wm_eventmatch(%struct.wmEvent* %15, %struct.wmKeyMapItem* %16), !dbg !10347
  %tobool9 = icmp ne i32 %call8, 0, !dbg !10347
  br i1 %tobool9, label %if.then10, label %if.end14, !dbg !10348

if.then10:                                        ; preds = %for.body
  %17 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !10349
  %type11 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %17, i32 0, i32 2, !dbg !10351
  %18 = load i16, i16* %type11, align 8, !dbg !10351
  %19 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !10352
  %prevtype = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %19, i32 0, i32 10, !dbg !10353
  store i16 %18, i16* %prevtype, align 4, !dbg !10354
  %20 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !10355
  %val = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %20, i32 0, i32 3, !dbg !10356
  %21 = load i16, i16* %val, align 2, !dbg !10356
  %22 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !10357
  %prevval = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %22, i32 0, i32 11, !dbg !10358
  store i16 %21, i16* %prevval, align 2, !dbg !10359
  %23 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !10360
  %type12 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %23, i32 0, i32 2, !dbg !10361
  store i16 20514, i16* %type12, align 8, !dbg !10362
  %24 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !10363
  %propvalue = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %24, i32 0, i32 5, !dbg !10364
  %25 = load i16, i16* %propvalue, align 8, !dbg !10364
  %26 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !10365
  %val13 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %26, i32 0, i32 3, !dbg !10366
  store i16 %25, i16* %val13, align 2, !dbg !10367
  br label %for.end, !dbg !10368

if.end14:                                         ; preds = %for.body
  br label %for.inc, !dbg !10369

for.inc:                                          ; preds = %if.end14
  %27 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %kmi, align 8, !dbg !10370
  %next = getelementptr inbounds %struct.wmKeyMapItem, %struct.wmKeyMapItem* %27, i32 0, i32 0, !dbg !10371
  %28 = load %struct.wmKeyMapItem*, %struct.wmKeyMapItem** %next, align 8, !dbg !10371
  store %struct.wmKeyMapItem* %28, %struct.wmKeyMapItem** %kmi, align 8, !dbg !10372
  br label %for.cond, !dbg !10373, !llvm.loop !10374

for.end:                                          ; preds = %if.then10, %for.cond
  br label %if.end20, !dbg !10376

if.else:                                          ; preds = %if.end
  %29 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !10377
  %val15 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %29, i32 0, i32 3, !dbg !10380
  %30 = load i16, i16* %val15, align 2, !dbg !10380
  %conv = sext i16 %30 to i32, !dbg !10377
  %cmp = icmp eq i32 %conv, 4, !dbg !10381
  br i1 %cmp, label %if.then17, label %if.end19, !dbg !10382

if.then17:                                        ; preds = %if.else
  %31 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !10383
  %val18 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %31, i32 0, i32 3, !dbg !10385
  store i16 1, i16* %val18, align 2, !dbg !10386
  %32 = load i8*, i8** %dbl_click_disabled.addr, align 8, !dbg !10387
  store i8 1, i8* %32, align 1, !dbg !10388
  br label %if.end19, !dbg !10389

if.end19:                                         ; preds = %if.then17, %if.else
  br label %if.end20

if.end20:                                         ; preds = %if.end19, %for.end
  ret void, !dbg !10390
}

; Function Attrs: noinline nounwind uwtable
define internal void @wm_event_modalmap_end(%struct.wmEvent* %event, i8 zeroext %dbl_click_disabled) #0 !dbg !10391 {
entry:
  %event.addr = alloca %struct.wmEvent*, align 8
  %dbl_click_disabled.addr = alloca i8, align 1
  store %struct.wmEvent* %event, %struct.wmEvent** %event.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmEvent** %event.addr, metadata !10394, metadata !DIExpression()), !dbg !10395
  store i8 %dbl_click_disabled, i8* %dbl_click_disabled.addr, align 1
  call void @llvm.dbg.declare(metadata i8* %dbl_click_disabled.addr, metadata !10396, metadata !DIExpression()), !dbg !10397
  %0 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !10398
  %type = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %0, i32 0, i32 2, !dbg !10400
  %1 = load i16, i16* %type, align 8, !dbg !10400
  %conv = sext i16 %1 to i32, !dbg !10398
  %cmp = icmp eq i32 %conv, 20514, !dbg !10401
  br i1 %cmp, label %if.then, label %if.else, !dbg !10402

if.then:                                          ; preds = %entry
  %2 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !10403
  %prevtype = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %2, i32 0, i32 10, !dbg !10405
  %3 = load i16, i16* %prevtype, align 4, !dbg !10405
  %4 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !10406
  %type2 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %4, i32 0, i32 2, !dbg !10407
  store i16 %3, i16* %type2, align 8, !dbg !10408
  %5 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !10409
  %prevtype3 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %5, i32 0, i32 10, !dbg !10410
  store i16 0, i16* %prevtype3, align 4, !dbg !10411
  %6 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !10412
  %prevval = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %6, i32 0, i32 11, !dbg !10413
  %7 = load i16, i16* %prevval, align 2, !dbg !10413
  %8 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !10414
  %val = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %8, i32 0, i32 3, !dbg !10415
  store i16 %7, i16* %val, align 2, !dbg !10416
  %9 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !10417
  %prevval4 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %9, i32 0, i32 11, !dbg !10418
  store i16 0, i16* %prevval4, align 2, !dbg !10419
  br label %if.end7, !dbg !10420

if.else:                                          ; preds = %entry
  %10 = load i8, i8* %dbl_click_disabled.addr, align 1, !dbg !10421
  %tobool = icmp ne i8 %10, 0, !dbg !10421
  br i1 %tobool, label %if.then5, label %if.end, !dbg !10423

if.then5:                                         ; preds = %if.else
  %11 = load %struct.wmEvent*, %struct.wmEvent** %event.addr, align 8, !dbg !10424
  %val6 = getelementptr inbounds %struct.wmEvent, %struct.wmEvent* %11, i32 0, i32 3, !dbg !10425
  store i16 4, i16* %val6, align 2, !dbg !10426
  br label %if.end, !dbg !10424

if.end:                                           ; preds = %if.then5, %if.else
  br label %if.end7

if.end7:                                          ; preds = %if.end, %if.then
  ret void, !dbg !10427
}

; Function Attrs: noinline nounwind uwtable
define internal void @wm_paintcursor_tag(%struct.bContext* %C, %struct.wmPaintCursor* %pc, %struct.ARegion* %ar) #0 !dbg !10428 {
entry:
  %C.addr = alloca %struct.bContext*, align 8
  %pc.addr = alloca %struct.wmPaintCursor*, align 8
  %ar.addr = alloca %struct.ARegion*, align 8
  %win = alloca %struct.wmWindow*, align 8
  store %struct.bContext* %C, %struct.bContext** %C.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.bContext** %C.addr, metadata !10445, metadata !DIExpression()), !dbg !10446
  store %struct.wmPaintCursor* %pc, %struct.wmPaintCursor** %pc.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.wmPaintCursor** %pc.addr, metadata !10447, metadata !DIExpression()), !dbg !10448
  store %struct.ARegion* %ar, %struct.ARegion** %ar.addr, align 8
  call void @llvm.dbg.declare(metadata %struct.ARegion** %ar.addr, metadata !10449, metadata !DIExpression()), !dbg !10450
  %0 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !10451
  %tobool = icmp ne %struct.ARegion* %0, null, !dbg !10451
  br i1 %tobool, label %if.then, label %if.end6, !dbg !10453

if.then:                                          ; preds = %entry
  br label %for.cond, !dbg !10454

for.cond:                                         ; preds = %for.inc, %if.then
  %1 = load %struct.wmPaintCursor*, %struct.wmPaintCursor** %pc.addr, align 8, !dbg !10456
  %tobool1 = icmp ne %struct.wmPaintCursor* %1, null, !dbg !10459
  br i1 %tobool1, label %for.body, label %for.end, !dbg !10459

for.body:                                         ; preds = %for.cond
  %2 = load %struct.wmPaintCursor*, %struct.wmPaintCursor** %pc.addr, align 8, !dbg !10460
  %poll = getelementptr inbounds %struct.wmPaintCursor, %struct.wmPaintCursor* %2, i32 0, i32 3, !dbg !10463
  %3 = load i32 (%struct.bContext*)*, i32 (%struct.bContext*)** %poll, align 8, !dbg !10463
  %cmp = icmp eq i32 (%struct.bContext*)* %3, null, !dbg !10464
  br i1 %cmp, label %if.then4, label %lor.lhs.false, !dbg !10465

lor.lhs.false:                                    ; preds = %for.body
  %4 = load %struct.wmPaintCursor*, %struct.wmPaintCursor** %pc.addr, align 8, !dbg !10466
  %poll2 = getelementptr inbounds %struct.wmPaintCursor, %struct.wmPaintCursor* %4, i32 0, i32 3, !dbg !10467
  %5 = load i32 (%struct.bContext*)*, i32 (%struct.bContext*)** %poll2, align 8, !dbg !10467
  %6 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10468
  %call = call i32 %5(%struct.bContext* %6), !dbg !10466
  %tobool3 = icmp ne i32 %call, 0, !dbg !10466
  br i1 %tobool3, label %if.then4, label %if.end, !dbg !10469

if.then4:                                         ; preds = %lor.lhs.false, %for.body
  call void @llvm.dbg.declare(metadata %struct.wmWindow** %win, metadata !10470, metadata !DIExpression()), !dbg !10472
  %7 = load %struct.bContext*, %struct.bContext** %C.addr, align 8, !dbg !10473
  %call5 = call %struct.wmWindow* @CTX_wm_window(%struct.bContext* %7), !dbg !10474
  store %struct.wmWindow* %call5, %struct.wmWindow** %win, align 8, !dbg !10472
  %8 = load %struct.wmWindow*, %struct.wmWindow** %win, align 8, !dbg !10475
  %9 = load %struct.ARegion*, %struct.ARegion** %ar.addr, align 8, !dbg !10476
  call void @WM_paint_cursor_tag_redraw(%struct.wmWindow* %8, %struct.ARegion* %9), !dbg !10477
  br label %if.end, !dbg !10478

if.end:                                           ; preds = %if.then4, %lor.lhs.false
  br label %for.inc, !dbg !10479

for.inc:                                          ; preds = %if.end
  %10 = load %struct.wmPaintCursor*, %struct.wmPaintCursor** %pc.addr, align 8, !dbg !10480
  %next = getelementptr inbounds %struct.wmPaintCursor, %struct.wmPaintCursor* %10, i32 0, i32 0, !dbg !10481
  %11 = load %struct.wmPaintCursor*, %struct.wmPaintCursor** %next, align 8, !dbg !10481
  store %struct.wmPaintCursor* %11, %struct.wmPaintCursor** %pc.addr, align 8, !dbg !10482
  br label %for.cond, !dbg !10483, !llvm.loop !10484

for.end:                                          ; preds = %for.cond
  br label %if.end6, !dbg !10486

if.end6:                                          ; preds = %for.end, %entry
  ret void, !dbg !10487
}

declare dso_local void @WM_paint_cursor_tag_redraw(%struct.wmWindow*, %struct.ARegion*) #3

declare dso_local void @ED_area_newspace(%struct.bContext*, %struct.ScrArea*, i32) #3

declare dso_local %struct.ScrArea* @ED_screen_full_newspace(%struct.bContext*, %struct.ScrArea*, i32) #3

declare dso_local signext i16 @ED_fileselect_set_params(%struct.SpaceFile*) #3

declare dso_local void @ED_screen_full_prevspace(%struct.bContext*, %struct.ScrArea*) #3

declare dso_local void @ED_area_prevspace(%struct.bContext*, %struct.ScrArea*) #3

declare dso_local void @BKE_report_print_level_set(%struct.ReportList*, i32) #3

declare dso_local %struct.GHOST_TabletData* @GHOST_GetTabletData(%struct.GHOST_WindowHandle__*) #3

declare dso_local i32 @WM_window_pixels_x(%struct.wmWindow*) #3

declare dso_local i32 @WM_window_pixels_y(%struct.wmWindow*) #3

; Function Attrs: noinline nounwind uwtable
define internal void @mul_v3_v3fl(float* %r, float* %a, float %f) #0 !dbg !10488 {
entry:
  %r.addr = alloca float*, align 8
  %a.addr = alloca float*, align 8
  %f.addr = alloca float, align 4
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !10491, metadata !DIExpression()), !dbg !10492
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !10493, metadata !DIExpression()), !dbg !10494
  store float %f, float* %f.addr, align 4
  call void @llvm.dbg.declare(metadata float* %f.addr, metadata !10495, metadata !DIExpression()), !dbg !10496
  %0 = load float*, float** %a.addr, align 8, !dbg !10497
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !10497
  %1 = load float, float* %arrayidx, align 4, !dbg !10497
  %2 = load float, float* %f.addr, align 4, !dbg !10498
  %mul = fmul float %1, %2, !dbg !10499
  %3 = load float*, float** %r.addr, align 8, !dbg !10500
  %arrayidx1 = getelementptr inbounds float, float* %3, i64 0, !dbg !10500
  store float %mul, float* %arrayidx1, align 4, !dbg !10501
  %4 = load float*, float** %a.addr, align 8, !dbg !10502
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !10502
  %5 = load float, float* %arrayidx2, align 4, !dbg !10502
  %6 = load float, float* %f.addr, align 4, !dbg !10503
  %mul3 = fmul float %5, %6, !dbg !10504
  %7 = load float*, float** %r.addr, align 8, !dbg !10505
  %arrayidx4 = getelementptr inbounds float, float* %7, i64 1, !dbg !10505
  store float %mul3, float* %arrayidx4, align 4, !dbg !10506
  %8 = load float*, float** %a.addr, align 8, !dbg !10507
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !10507
  %9 = load float, float* %arrayidx5, align 4, !dbg !10507
  %10 = load float, float* %f.addr, align 4, !dbg !10508
  %mul6 = fmul float %9, %10, !dbg !10509
  %11 = load float*, float** %r.addr, align 8, !dbg !10510
  %arrayidx7 = getelementptr inbounds float, float* %11, i64 2, !dbg !10510
  store float %mul6, float* %arrayidx7, align 4, !dbg !10511
  ret void, !dbg !10512
}

; Function Attrs: noinline nounwind uwtable
define internal float @dot_v3v3(float* %a, float* %b) #0 !dbg !10513 {
entry:
  %a.addr = alloca float*, align 8
  %b.addr = alloca float*, align 8
  store float* %a, float** %a.addr, align 8
  call void @llvm.dbg.declare(metadata float** %a.addr, metadata !10516, metadata !DIExpression()), !dbg !10517
  store float* %b, float** %b.addr, align 8
  call void @llvm.dbg.declare(metadata float** %b.addr, metadata !10518, metadata !DIExpression()), !dbg !10519
  %0 = load float*, float** %a.addr, align 8, !dbg !10520
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !10520
  %1 = load float, float* %arrayidx, align 4, !dbg !10520
  %2 = load float*, float** %b.addr, align 8, !dbg !10521
  %arrayidx1 = getelementptr inbounds float, float* %2, i64 0, !dbg !10521
  %3 = load float, float* %arrayidx1, align 4, !dbg !10521
  %mul = fmul float %1, %3, !dbg !10522
  %4 = load float*, float** %a.addr, align 8, !dbg !10523
  %arrayidx2 = getelementptr inbounds float, float* %4, i64 1, !dbg !10523
  %5 = load float, float* %arrayidx2, align 4, !dbg !10523
  %6 = load float*, float** %b.addr, align 8, !dbg !10524
  %arrayidx3 = getelementptr inbounds float, float* %6, i64 1, !dbg !10524
  %7 = load float, float* %arrayidx3, align 4, !dbg !10524
  %mul4 = fmul float %5, %7, !dbg !10525
  %add = fadd float %mul, %mul4, !dbg !10526
  %8 = load float*, float** %a.addr, align 8, !dbg !10527
  %arrayidx5 = getelementptr inbounds float, float* %8, i64 2, !dbg !10527
  %9 = load float, float* %arrayidx5, align 4, !dbg !10527
  %10 = load float*, float** %b.addr, align 8, !dbg !10528
  %arrayidx6 = getelementptr inbounds float, float* %10, i64 2, !dbg !10528
  %11 = load float, float* %arrayidx6, align 4, !dbg !10528
  %mul7 = fmul float %9, %11, !dbg !10529
  %add8 = fadd float %add, %mul7, !dbg !10530
  ret float %add8, !dbg !10531
}

; Function Attrs: nounwind
declare dso_local float @sqrtf(float) #7

; Function Attrs: noinline nounwind uwtable
define internal void @zero_v3(float* %r) #0 !dbg !10532 {
entry:
  %r.addr = alloca float*, align 8
  store float* %r, float** %r.addr, align 8
  call void @llvm.dbg.declare(metadata float** %r.addr, metadata !10533, metadata !DIExpression()), !dbg !10534
  %0 = load float*, float** %r.addr, align 8, !dbg !10535
  %arrayidx = getelementptr inbounds float, float* %0, i64 0, !dbg !10535
  store float 0.000000e+00, float* %arrayidx, align 4, !dbg !10536
  %1 = load float*, float** %r.addr, align 8, !dbg !10537
  %arrayidx1 = getelementptr inbounds float, float* %1, i64 1, !dbg !10537
  store float 0.000000e+00, float* %arrayidx1, align 4, !dbg !10538
  %2 = load float*, float** %r.addr, align 8, !dbg !10539
  %arrayidx2 = getelementptr inbounds float, float* %2, i64 2, !dbg !10539
  store float 0.000000e+00, float* %arrayidx2, align 4, !dbg !10540
  ret void, !dbg !10541
}

attributes #0 = { noinline nounwind uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone speculatable willreturn }
attributes #2 = { argmemonly nounwind willreturn }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "frame-pointer"="all" "less-precise-fpmad"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind }
attributes #9 = { nounwind readonly }

!llvm.dbg.cu = !{!1584}
!llvm.module.flags = !{!2560, !2561, !2562}
!llvm.ident = !{!2563}

!0 = !DIGlobalVariableExpression(var: !1, expr: !DIExpression())
!1 = distinct !DIGlobalVariable(name: "motherop", scope: !2, file: !3, line: 852, type: !6, isLocal: true, isDefinition: true)
!2 = distinct !DISubprogram(name: "wm_operator_create", scope: !3, file: !3, line: 820, type: !4, scopeLine: 822, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!3 = !DIFile(filename: "blender/source/blender/windowmanager/intern/wm_event_system.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4 = !DISubroutineType(types: !5)
!5 = !{!6, !1543, !1578, !1580, !1582}
!6 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7, size: 64)
!7 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmOperator", file: !8, line: 348, baseType: !9)
!8 = !DIFile(filename: "blender/source/blender/makesdna/DNA_windowmanager_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!9 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmOperator", file: !8, line: 328, size: 1344, elements: !10)
!10 = !{!11, !13, !14, !19, !52, !206, !207, !208, !209, !1536, !1537, !1538, !1541, !1542}
!11 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9, file: !8, line: 329, baseType: !12, size: 64)
!12 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9, size: 64)
!13 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !9, file: !8, line: 329, baseType: !12, size: 64, offset: 64)
!14 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !9, file: !8, line: 332, baseType: !15, size: 512, offset: 128)
!15 = !DICompositeType(tag: DW_TAG_array_type, baseType: !16, size: 512, elements: !17)
!16 = !DIBasicType(name: "char", size: 8, encoding: DW_ATE_unsigned_char)
!17 = !{!18}
!18 = !DISubrange(count: 64)
!19 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !9, file: !8, line: 333, baseType: !20, size: 64, offset: 640)
!20 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !21, size: 64)
!21 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDProperty", file: !22, line: 75, baseType: !23)
!22 = !DIFile(filename: "blender/source/blender/makesdna/DNA_ID.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!23 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDProperty", file: !22, line: 62, size: 1024, elements: !24)
!24 = !{!25, !27, !28, !29, !30, !32, !33, !35, !50, !51}
!25 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !23, file: !22, line: 63, baseType: !26, size: 64)
!26 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !23, size: 64)
!27 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !23, file: !22, line: 63, baseType: !26, size: 64, offset: 64)
!28 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !23, file: !22, line: 64, baseType: !16, size: 8, offset: 128)
!29 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !23, file: !22, line: 64, baseType: !16, size: 8, offset: 136)
!30 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !23, file: !22, line: 65, baseType: !31, size: 16, offset: 144)
!31 = !DIBasicType(name: "short", size: 16, encoding: DW_ATE_signed)
!32 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !23, file: !22, line: 66, baseType: !15, size: 512, offset: 160)
!33 = !DIDerivedType(tag: DW_TAG_member, name: "saved", scope: !23, file: !22, line: 67, baseType: !34, size: 32, offset: 672)
!34 = !DIBasicType(name: "int", size: 32, encoding: DW_ATE_signed)
!35 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !23, file: !22, line: 69, baseType: !36, size: 256, offset: 704)
!36 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDPropertyData", file: !22, line: 60, baseType: !37)
!37 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "IDPropertyData", file: !22, line: 48, size: 256, elements: !38)
!38 = !{!39, !41, !48, !49}
!39 = !DIDerivedType(tag: DW_TAG_member, name: "pointer", scope: !37, file: !22, line: 49, baseType: !40, size: 64)
!40 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: null, size: 64)
!41 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !37, file: !22, line: 58, baseType: !42, size: 128, offset: 64)
!42 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListBase", file: !43, line: 71, baseType: !44)
!43 = !DIFile(filename: "blender/source/blender/makesdna/DNA_listBase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!44 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ListBase", file: !43, line: 69, size: 128, elements: !45)
!45 = !{!46, !47}
!46 = !DIDerivedType(tag: DW_TAG_member, name: "first", scope: !44, file: !43, line: 70, baseType: !40, size: 64)
!47 = !DIDerivedType(tag: DW_TAG_member, name: "last", scope: !44, file: !43, line: 70, baseType: !40, size: 64, offset: 64)
!48 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !37, file: !22, line: 59, baseType: !34, size: 32, offset: 192)
!49 = !DIDerivedType(tag: DW_TAG_member, name: "val2", scope: !37, file: !22, line: 59, baseType: !34, size: 32, offset: 224)
!50 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !23, file: !22, line: 70, baseType: !34, size: 32, offset: 960)
!51 = !DIDerivedType(tag: DW_TAG_member, name: "totallen", scope: !23, file: !22, line: 74, baseType: !34, size: 32, offset: 992)
!52 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !9, file: !8, line: 336, baseType: !53, size: 64, offset: 704)
!53 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !54, size: 64)
!54 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmOperatorType", file: !55, line: 508, size: 1536, elements: !56)
!55 = !DIFile(filename: "blender/source/blender/windowmanager/WM_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!56 = !{!57, !60, !61, !62, !63, !69, !74, !127, !131, !132, !136, !137, !140, !141, !146, !147, !162, !163, !167, !205}
!57 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !54, file: !55, line: 509, baseType: !58, size: 64)
!58 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !59, size: 64)
!59 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !16)
!60 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !54, file: !55, line: 510, baseType: !58, size: 64, offset: 64)
!61 = !DIDerivedType(tag: DW_TAG_member, name: "translation_context", scope: !54, file: !55, line: 511, baseType: !58, size: 64, offset: 128)
!62 = !DIDerivedType(tag: DW_TAG_member, name: "description", scope: !54, file: !55, line: 512, baseType: !58, size: 64, offset: 192)
!63 = !DIDerivedType(tag: DW_TAG_member, name: "exec", scope: !54, file: !55, line: 518, baseType: !64, size: 64, offset: 256)
!64 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !65, size: 64)
!65 = !DISubroutineType(types: !66)
!66 = !{!34, !67, !12}
!67 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !68, size: 64)
!68 = !DICompositeType(tag: DW_TAG_structure_type, name: "bContext", file: !8, line: 51, flags: DIFlagFwdDecl)
!69 = !DIDerivedType(tag: DW_TAG_member, name: "check", scope: !54, file: !55, line: 524, baseType: !70, size: 64, offset: 320)
!70 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !71, size: 64)
!71 = !DISubroutineType(types: !72)
!72 = !{!73, !67, !12}
!73 = !DIBasicType(name: "unsigned char", size: 8, encoding: DW_ATE_unsigned_char)
!74 = !DIDerivedType(tag: DW_TAG_member, name: "invoke", scope: !54, file: !55, line: 530, baseType: !75, size: 64, offset: 384)
!75 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !76, size: 64)
!76 = !DISubroutineType(types: !77)
!77 = !{!34, !67, !12, !78}
!78 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !79, size: 64)
!79 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !80)
!80 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmEvent", file: !55, line: 421, size: 960, elements: !81)
!81 = !{!82, !84, !85, !86, !87, !88, !89, !93, !97, !98, !99, !100, !101, !102, !103, !105, !106, !107, !108, !109, !110, !111, !112, !113, !114, !123, !124, !125, !126}
!82 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !80, file: !55, line: 422, baseType: !83, size: 64)
!83 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !80, size: 64)
!84 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !80, file: !55, line: 422, baseType: !83, size: 64, offset: 64)
!85 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !80, file: !55, line: 424, baseType: !31, size: 16, offset: 128)
!86 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !80, file: !55, line: 425, baseType: !31, size: 16, offset: 144)
!87 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !80, file: !55, line: 426, baseType: !34, size: 32, offset: 160)
!88 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !80, file: !55, line: 426, baseType: !34, size: 32, offset: 192)
!89 = !DIDerivedType(tag: DW_TAG_member, name: "mval", scope: !80, file: !55, line: 427, baseType: !90, size: 64, offset: 224)
!90 = !DICompositeType(tag: DW_TAG_array_type, baseType: !34, size: 64, elements: !91)
!91 = !{!92}
!92 = !DISubrange(count: 2)
!93 = !DIDerivedType(tag: DW_TAG_member, name: "utf8_buf", scope: !80, file: !55, line: 428, baseType: !94, size: 48, offset: 288)
!94 = !DICompositeType(tag: DW_TAG_array_type, baseType: !16, size: 48, elements: !95)
!95 = !{!96}
!96 = !DISubrange(count: 6)
!97 = !DIDerivedType(tag: DW_TAG_member, name: "ascii", scope: !80, file: !55, line: 431, baseType: !16, size: 8, offset: 336)
!98 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !80, file: !55, line: 432, baseType: !16, size: 8, offset: 344)
!99 = !DIDerivedType(tag: DW_TAG_member, name: "prevtype", scope: !80, file: !55, line: 435, baseType: !31, size: 16, offset: 352)
!100 = !DIDerivedType(tag: DW_TAG_member, name: "prevval", scope: !80, file: !55, line: 436, baseType: !31, size: 16, offset: 368)
!101 = !DIDerivedType(tag: DW_TAG_member, name: "prevx", scope: !80, file: !55, line: 437, baseType: !34, size: 32, offset: 384)
!102 = !DIDerivedType(tag: DW_TAG_member, name: "prevy", scope: !80, file: !55, line: 437, baseType: !34, size: 32, offset: 416)
!103 = !DIDerivedType(tag: DW_TAG_member, name: "prevclicktime", scope: !80, file: !55, line: 438, baseType: !104, size: 64, offset: 448)
!104 = !DIBasicType(name: "double", size: 64, encoding: DW_ATE_float)
!105 = !DIDerivedType(tag: DW_TAG_member, name: "prevclickx", scope: !80, file: !55, line: 439, baseType: !34, size: 32, offset: 512)
!106 = !DIDerivedType(tag: DW_TAG_member, name: "prevclicky", scope: !80, file: !55, line: 439, baseType: !34, size: 32, offset: 544)
!107 = !DIDerivedType(tag: DW_TAG_member, name: "shift", scope: !80, file: !55, line: 442, baseType: !31, size: 16, offset: 576)
!108 = !DIDerivedType(tag: DW_TAG_member, name: "ctrl", scope: !80, file: !55, line: 442, baseType: !31, size: 16, offset: 592)
!109 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !80, file: !55, line: 442, baseType: !31, size: 16, offset: 608)
!110 = !DIDerivedType(tag: DW_TAG_member, name: "oskey", scope: !80, file: !55, line: 442, baseType: !31, size: 16, offset: 624)
!111 = !DIDerivedType(tag: DW_TAG_member, name: "keymodifier", scope: !80, file: !55, line: 443, baseType: !31, size: 16, offset: 640)
!112 = !DIDerivedType(tag: DW_TAG_member, name: "check_click", scope: !80, file: !55, line: 446, baseType: !31, size: 16, offset: 656)
!113 = !DIDerivedType(tag: DW_TAG_member, name: "keymap_idname", scope: !80, file: !55, line: 449, baseType: !58, size: 64, offset: 704)
!114 = !DIDerivedType(tag: DW_TAG_member, name: "tablet_data", scope: !80, file: !55, line: 452, baseType: !115, size: 64, offset: 768)
!115 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !116, size: 64)
!116 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmTabletData", file: !55, line: 463, size: 128, elements: !117)
!117 = !{!118, !119, !121, !122}
!118 = !DIDerivedType(tag: DW_TAG_member, name: "Active", scope: !116, file: !55, line: 464, baseType: !34, size: 32)
!119 = !DIDerivedType(tag: DW_TAG_member, name: "Pressure", scope: !116, file: !55, line: 465, baseType: !120, size: 32, offset: 32)
!120 = !DIBasicType(name: "float", size: 32, encoding: DW_ATE_float)
!121 = !DIDerivedType(tag: DW_TAG_member, name: "Xtilt", scope: !116, file: !55, line: 466, baseType: !120, size: 32, offset: 64)
!122 = !DIDerivedType(tag: DW_TAG_member, name: "Ytilt", scope: !116, file: !55, line: 467, baseType: !120, size: 32, offset: 96)
!123 = !DIDerivedType(tag: DW_TAG_member, name: "custom", scope: !80, file: !55, line: 455, baseType: !31, size: 16, offset: 832)
!124 = !DIDerivedType(tag: DW_TAG_member, name: "customdatafree", scope: !80, file: !55, line: 456, baseType: !31, size: 16, offset: 848)
!125 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !80, file: !55, line: 457, baseType: !34, size: 32, offset: 864)
!126 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !80, file: !55, line: 458, baseType: !40, size: 64, offset: 896)
!127 = !DIDerivedType(tag: DW_TAG_member, name: "cancel", scope: !54, file: !55, line: 531, baseType: !128, size: 64, offset: 448)
!128 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !129, size: 64)
!129 = !DISubroutineType(types: !130)
!130 = !{null, !67, !12}
!131 = !DIDerivedType(tag: DW_TAG_member, name: "modal", scope: !54, file: !55, line: 532, baseType: !75, size: 64, offset: 512)
!132 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !54, file: !55, line: 536, baseType: !133, size: 64, offset: 576)
!133 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !134, size: 64)
!134 = !DISubroutineType(types: !135)
!135 = !{!34, !67}
!136 = !DIDerivedType(tag: DW_TAG_member, name: "ui", scope: !54, file: !55, line: 539, baseType: !128, size: 64, offset: 640)
!137 = !DIDerivedType(tag: DW_TAG_member, name: "srna", scope: !54, file: !55, line: 542, baseType: !138, size: 64, offset: 704)
!138 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !139, size: 64)
!139 = !DICompositeType(tag: DW_TAG_structure_type, name: "StructRNA", file: !8, line: 57, flags: DIFlagFwdDecl)
!140 = !DIDerivedType(tag: DW_TAG_member, name: "last_properties", scope: !54, file: !55, line: 545, baseType: !26, size: 64, offset: 768)
!141 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !54, file: !55, line: 549, baseType: !142, size: 64, offset: 832)
!142 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !143, size: 64)
!143 = !DIDerivedType(tag: DW_TAG_typedef, name: "PropertyRNA", file: !144, line: 333, baseType: !145)
!144 = !DIFile(filename: "blender/source/blender/makesrna/RNA_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!145 = !DICompositeType(tag: DW_TAG_structure_type, name: "PropertyRNA", file: !144, line: 39, flags: DIFlagFwdDecl)
!146 = !DIDerivedType(tag: DW_TAG_member, name: "macro", scope: !54, file: !55, line: 552, baseType: !42, size: 128, offset: 896)
!147 = !DIDerivedType(tag: DW_TAG_member, name: "modalkeymap", scope: !54, file: !55, line: 555, baseType: !148, size: 64, offset: 1024)
!148 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !149, size: 64)
!149 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmKeyMap", file: !8, line: 281, size: 1088, elements: !150)
!150 = !{!151, !152, !153, !154, !155, !156, !157, !158, !159, !160, !161}
!151 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !149, file: !8, line: 282, baseType: !148, size: 64)
!152 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !149, file: !8, line: 282, baseType: !148, size: 64, offset: 64)
!153 = !DIDerivedType(tag: DW_TAG_member, name: "items", scope: !149, file: !8, line: 284, baseType: !42, size: 128, offset: 128)
!154 = !DIDerivedType(tag: DW_TAG_member, name: "diff_items", scope: !149, file: !8, line: 285, baseType: !42, size: 128, offset: 256)
!155 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !149, file: !8, line: 287, baseType: !15, size: 512, offset: 384)
!156 = !DIDerivedType(tag: DW_TAG_member, name: "spaceid", scope: !149, file: !8, line: 288, baseType: !31, size: 16, offset: 896)
!157 = !DIDerivedType(tag: DW_TAG_member, name: "regionid", scope: !149, file: !8, line: 289, baseType: !31, size: 16, offset: 912)
!158 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !149, file: !8, line: 291, baseType: !31, size: 16, offset: 928)
!159 = !DIDerivedType(tag: DW_TAG_member, name: "kmi_id", scope: !149, file: !8, line: 292, baseType: !31, size: 16, offset: 944)
!160 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !149, file: !8, line: 295, baseType: !133, size: 64, offset: 960)
!161 = !DIDerivedType(tag: DW_TAG_member, name: "modal_items", scope: !149, file: !8, line: 296, baseType: !40, size: 64, offset: 1024)
!162 = !DIDerivedType(tag: DW_TAG_member, name: "pyop_data", scope: !54, file: !55, line: 559, baseType: !40, size: 64, offset: 1088)
!163 = !DIDerivedType(tag: DW_TAG_member, name: "pyop_poll", scope: !54, file: !55, line: 560, baseType: !164, size: 64, offset: 1152)
!164 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !165, size: 64)
!165 = !DISubroutineType(types: !166)
!166 = !{!34, !67, !53}
!167 = !DIDerivedType(tag: DW_TAG_member, name: "ext", scope: !54, file: !55, line: 563, baseType: !168, size: 256, offset: 1216)
!168 = !DIDerivedType(tag: DW_TAG_typedef, name: "ExtensionRNA", file: !144, line: 436, baseType: !169)
!169 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ExtensionRNA", file: !144, line: 430, size: 256, elements: !170)
!170 = !{!171, !172, !175, !200}
!171 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !169, file: !144, line: 431, baseType: !40, size: 64)
!172 = !DIDerivedType(tag: DW_TAG_member, name: "srna", scope: !169, file: !144, line: 432, baseType: !173, size: 64, offset: 64)
!173 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !174, size: 64)
!174 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructRNA", file: !144, line: 417, baseType: !139)
!175 = !DIDerivedType(tag: DW_TAG_member, name: "call", scope: !169, file: !144, line: 433, baseType: !176, size: 64, offset: 128)
!176 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructCallbackFunc", file: !144, line: 408, baseType: !177)
!177 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !178, size: 64)
!178 = !DISubroutineType(types: !179)
!179 = !{!34, !67, !180, !189, !191}
!180 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !181, size: 64)
!181 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PointerRNA", file: !144, line: 55, size: 192, elements: !182)
!182 = !{!183, !187, !188}
!183 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !181, file: !144, line: 58, baseType: !184, size: 64)
!184 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !181, file: !144, line: 56, size: 64, elements: !185)
!185 = !{!186}
!186 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !184, file: !144, line: 57, baseType: !40, size: 64)
!187 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !181, file: !144, line: 60, baseType: !138, size: 64, offset: 64)
!188 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !181, file: !144, line: 61, baseType: !40, size: 64, offset: 128)
!189 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !190, size: 64)
!190 = !DICompositeType(tag: DW_TAG_structure_type, name: "FunctionRNA", file: !144, line: 38, flags: DIFlagFwdDecl)
!191 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !192, size: 64)
!192 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParameterList", file: !144, line: 348, baseType: !193)
!193 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParameterList", file: !144, line: 337, size: 256, elements: !194)
!194 = !{!195, !196, !197, !198, !199}
!195 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !193, file: !144, line: 339, baseType: !40, size: 64)
!196 = !DIDerivedType(tag: DW_TAG_member, name: "func", scope: !193, file: !144, line: 342, baseType: !189, size: 64, offset: 64)
!197 = !DIDerivedType(tag: DW_TAG_member, name: "alloc_size", scope: !193, file: !144, line: 345, baseType: !34, size: 32, offset: 128)
!198 = !DIDerivedType(tag: DW_TAG_member, name: "arg_count", scope: !193, file: !144, line: 347, baseType: !34, size: 32, offset: 160)
!199 = !DIDerivedType(tag: DW_TAG_member, name: "ret_count", scope: !193, file: !144, line: 347, baseType: !34, size: 32, offset: 192)
!200 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !169, file: !144, line: 434, baseType: !201, size: 64, offset: 192)
!201 = !DIDerivedType(tag: DW_TAG_typedef, name: "StructFreeFunc", file: !144, line: 409, baseType: !202)
!202 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !203, size: 64)
!203 = !DISubroutineType(types: !204)
!204 = !{null, !40}
!205 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !54, file: !55, line: 566, baseType: !31, size: 16, offset: 1472)
!206 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !9, file: !8, line: 337, baseType: !40, size: 64, offset: 768)
!207 = !DIDerivedType(tag: DW_TAG_member, name: "py_instance", scope: !9, file: !8, line: 338, baseType: !40, size: 64, offset: 832)
!208 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !9, file: !8, line: 340, baseType: !180, size: 64, offset: 896)
!209 = !DIDerivedType(tag: DW_TAG_member, name: "reports", scope: !9, file: !8, line: 341, baseType: !210, size: 64, offset: 960)
!210 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !211, size: 64)
!211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ReportList", file: !8, line: 106, size: 320, elements: !212)
!212 = !{!213, !214, !215, !216, !217, !218}
!213 = !DIDerivedType(tag: DW_TAG_member, name: "list", scope: !211, file: !8, line: 107, baseType: !42, size: 128)
!214 = !DIDerivedType(tag: DW_TAG_member, name: "printlevel", scope: !211, file: !8, line: 108, baseType: !34, size: 32, offset: 128)
!215 = !DIDerivedType(tag: DW_TAG_member, name: "storelevel", scope: !211, file: !8, line: 109, baseType: !34, size: 32, offset: 160)
!216 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !211, file: !8, line: 110, baseType: !34, size: 32, offset: 192)
!217 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !211, file: !8, line: 110, baseType: !34, size: 32, offset: 224)
!218 = !DIDerivedType(tag: DW_TAG_member, name: "reporttimer", scope: !211, file: !8, line: 111, baseType: !219, size: 64, offset: 256)
!219 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !220, size: 64)
!220 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmTimer", file: !55, line: 490, size: 768, elements: !221)
!221 = !{!222, !223, !224, !1527, !1528, !1529, !1530, !1531, !1532, !1533, !1534, !1535}
!222 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !220, file: !55, line: 491, baseType: !219, size: 64)
!223 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !220, file: !55, line: 491, baseType: !219, size: 64, offset: 64)
!224 = !DIDerivedType(tag: DW_TAG_member, name: "win", scope: !220, file: !55, line: 493, baseType: !225, size: 64, offset: 128)
!225 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !226, size: 64)
!226 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmWindow", file: !8, line: 169, size: 2048, elements: !227)
!227 = !{!228, !229, !230, !231, !1484, !1485, !1486, !1487, !1488, !1489, !1490, !1491, !1492, !1493, !1494, !1495, !1496, !1497, !1498, !1499, !1500, !1501, !1502, !1505, !1519, !1520, !1521, !1522, !1523, !1524, !1525, !1526}
!228 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !226, file: !8, line: 170, baseType: !225, size: 64)
!229 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !226, file: !8, line: 170, baseType: !225, size: 64, offset: 64)
!230 = !DIDerivedType(tag: DW_TAG_member, name: "ghostwin", scope: !226, file: !8, line: 172, baseType: !40, size: 64, offset: 128)
!231 = !DIDerivedType(tag: DW_TAG_member, name: "screen", scope: !226, file: !8, line: 174, baseType: !232, size: 64, offset: 192)
!232 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !233, size: 64)
!233 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bScreen", file: !234, line: 49, size: 1984, elements: !235)
!234 = !DIFile(filename: "blender/source/blender/makesdna/DNA_screen_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!235 = !{!236, !272, !273, !274, !275, !276, !1467, !1468, !1469, !1470, !1471, !1472, !1473, !1474, !1475, !1476, !1477, !1478, !1479, !1480, !1481, !1482, !1483}
!236 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !233, file: !234, line: 50, baseType: !237, size: 960)
!237 = !DIDerivedType(tag: DW_TAG_typedef, name: "ID", file: !22, line: 130, baseType: !238)
!238 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ID", file: !22, line: 117, size: 960, elements: !239)
!239 = !{!240, !241, !242, !244, !263, !267, !268, !269, !270, !271}
!240 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !238, file: !22, line: 118, baseType: !40, size: 64)
!241 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !238, file: !22, line: 118, baseType: !40, size: 64, offset: 64)
!242 = !DIDerivedType(tag: DW_TAG_member, name: "newid", scope: !238, file: !22, line: 119, baseType: !243, size: 64, offset: 128)
!243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !238, size: 64)
!244 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !238, file: !22, line: 120, baseType: !245, size: 64, offset: 192)
!245 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !246, size: 64)
!246 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Library", file: !22, line: 136, size: 17600, elements: !247)
!247 = !{!248, !249, !251, !254, !258, !259, !260}
!248 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !246, file: !22, line: 137, baseType: !237, size: 960)
!249 = !DIDerivedType(tag: DW_TAG_member, name: "idblock", scope: !246, file: !22, line: 138, baseType: !250, size: 64, offset: 960)
!250 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !237, size: 64)
!251 = !DIDerivedType(tag: DW_TAG_member, name: "filedata", scope: !246, file: !22, line: 139, baseType: !252, size: 64, offset: 1024)
!252 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !253, size: 64)
!253 = !DICompositeType(tag: DW_TAG_structure_type, name: "FileData", file: !22, line: 43, flags: DIFlagFwdDecl)
!254 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !246, file: !22, line: 140, baseType: !255, size: 8192, offset: 1088)
!255 = !DICompositeType(tag: DW_TAG_array_type, baseType: !16, size: 8192, elements: !256)
!256 = !{!257}
!257 = !DISubrange(count: 1024)
!258 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !246, file: !22, line: 141, baseType: !255, size: 8192, offset: 9280)
!259 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !246, file: !22, line: 148, baseType: !245, size: 64, offset: 17472)
!260 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !246, file: !22, line: 150, baseType: !261, size: 64, offset: 17536)
!261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !262, size: 64)
!262 = !DICompositeType(tag: DW_TAG_structure_type, name: "PackedFile", file: !22, line: 45, flags: DIFlagFwdDecl)
!263 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !238, file: !22, line: 121, baseType: !264, size: 528, offset: 256)
!264 = !DICompositeType(tag: DW_TAG_array_type, baseType: !16, size: 528, elements: !265)
!265 = !{!266}
!266 = !DISubrange(count: 66)
!267 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !238, file: !22, line: 126, baseType: !31, size: 16, offset: 784)
!268 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !238, file: !22, line: 127, baseType: !34, size: 32, offset: 800)
!269 = !DIDerivedType(tag: DW_TAG_member, name: "icon_id", scope: !238, file: !22, line: 128, baseType: !34, size: 32, offset: 832)
!270 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !238, file: !22, line: 128, baseType: !34, size: 32, offset: 864)
!271 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !238, file: !22, line: 129, baseType: !20, size: 64, offset: 896)
!272 = !DIDerivedType(tag: DW_TAG_member, name: "vertbase", scope: !233, file: !234, line: 52, baseType: !42, size: 128, offset: 960)
!273 = !DIDerivedType(tag: DW_TAG_member, name: "edgebase", scope: !233, file: !234, line: 53, baseType: !42, size: 128, offset: 1088)
!274 = !DIDerivedType(tag: DW_TAG_member, name: "areabase", scope: !233, file: !234, line: 54, baseType: !42, size: 128, offset: 1216)
!275 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !233, file: !234, line: 55, baseType: !42, size: 128, offset: 1344)
!276 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !233, file: !234, line: 57, baseType: !277, size: 64, offset: 1472)
!277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !278, size: 64)
!278 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Scene", file: !279, line: 1216, size: 39680, elements: !280)
!279 = !DIFile(filename: "blender/source/blender/makesdna/DNA_scene_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!280 = !{!281, !282, !285, !288, !291, !292, !293, !306, !307, !311, !312, !313, !314, !315, !316, !317, !318, !319, !323, !395, !834, !1048, !1051, !1337, !1349, !1350, !1351, !1352, !1353, !1354, !1355, !1356, !1359, !1360, !1361, !1362, !1363, !1371, !1438, !1445, !1446, !1453, !1454, !1460, !1461, !1462, !1463, !1464}
!281 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !278, file: !279, line: 1217, baseType: !237, size: 960)
!282 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !278, file: !279, line: 1218, baseType: !283, size: 64, offset: 960)
!283 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !284, size: 64)
!284 = !DICompositeType(tag: DW_TAG_structure_type, name: "AnimData", file: !279, line: 58, flags: DIFlagFwdDecl)
!285 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !278, file: !279, line: 1220, baseType: !286, size: 64, offset: 1024)
!286 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !287, size: 64)
!287 = !DICompositeType(tag: DW_TAG_structure_type, name: "Object", file: !279, line: 50, flags: DIFlagFwdDecl)
!288 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !278, file: !279, line: 1221, baseType: !289, size: 64, offset: 1088)
!289 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !290, size: 64)
!290 = !DICompositeType(tag: DW_TAG_structure_type, name: "World", file: !279, line: 52, flags: DIFlagFwdDecl)
!291 = !DIDerivedType(tag: DW_TAG_member, name: "set", scope: !278, file: !279, line: 1223, baseType: !277, size: 64, offset: 1152)
!292 = !DIDerivedType(tag: DW_TAG_member, name: "base", scope: !278, file: !279, line: 1225, baseType: !42, size: 128, offset: 1216)
!293 = !DIDerivedType(tag: DW_TAG_member, name: "basact", scope: !278, file: !279, line: 1226, baseType: !294, size: 64, offset: 1344)
!294 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !295, size: 64)
!295 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Base", file: !279, line: 69, size: 320, elements: !296)
!296 = !{!297, !298, !299, !301, !302, !303, !304, !305}
!297 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !295, file: !279, line: 70, baseType: !294, size: 64)
!298 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !295, file: !279, line: 70, baseType: !294, size: 64, offset: 64)
!299 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !295, file: !279, line: 71, baseType: !300, size: 32, offset: 128)
!300 = !DIBasicType(name: "unsigned int", size: 32, encoding: DW_ATE_unsigned)
!301 = !DIDerivedType(tag: DW_TAG_member, name: "selcol", scope: !295, file: !279, line: 71, baseType: !300, size: 32, offset: 160)
!302 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !295, file: !279, line: 72, baseType: !34, size: 32, offset: 192)
!303 = !DIDerivedType(tag: DW_TAG_member, name: "sx", scope: !295, file: !279, line: 73, baseType: !31, size: 16, offset: 224)
!304 = !DIDerivedType(tag: DW_TAG_member, name: "sy", scope: !295, file: !279, line: 73, baseType: !31, size: 16, offset: 240)
!305 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !295, file: !279, line: 74, baseType: !286, size: 64, offset: 256)
!306 = !DIDerivedType(tag: DW_TAG_member, name: "obedit", scope: !278, file: !279, line: 1227, baseType: !286, size: 64, offset: 1408)
!307 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !278, file: !279, line: 1229, baseType: !308, size: 96, offset: 1472)
!308 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 96, elements: !309)
!309 = !{!310}
!310 = !DISubrange(count: 3)
!311 = !DIDerivedType(tag: DW_TAG_member, name: "twcent", scope: !278, file: !279, line: 1230, baseType: !308, size: 96, offset: 1568)
!312 = !DIDerivedType(tag: DW_TAG_member, name: "twmin", scope: !278, file: !279, line: 1231, baseType: !308, size: 96, offset: 1664)
!313 = !DIDerivedType(tag: DW_TAG_member, name: "twmax", scope: !278, file: !279, line: 1231, baseType: !308, size: 96, offset: 1760)
!314 = !DIDerivedType(tag: DW_TAG_member, name: "lay", scope: !278, file: !279, line: 1233, baseType: !300, size: 32, offset: 1856)
!315 = !DIDerivedType(tag: DW_TAG_member, name: "layact", scope: !278, file: !279, line: 1234, baseType: !34, size: 32, offset: 1888)
!316 = !DIDerivedType(tag: DW_TAG_member, name: "lay_updated", scope: !278, file: !279, line: 1235, baseType: !300, size: 32, offset: 1920)
!317 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !278, file: !279, line: 1237, baseType: !31, size: 16, offset: 1952)
!318 = !DIDerivedType(tag: DW_TAG_member, name: "use_nodes", scope: !278, file: !279, line: 1239, baseType: !16, size: 8, offset: 1968)
!319 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !278, file: !279, line: 1240, baseType: !320, size: 8, offset: 1976)
!320 = !DICompositeType(tag: DW_TAG_array_type, baseType: !16, size: 8, elements: !321)
!321 = !{!322}
!322 = !DISubrange(count: 1)
!323 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !278, file: !279, line: 1242, baseType: !324, size: 64, offset: 1984)
!324 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !325, size: 64)
!325 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTree", file: !326, line: 328, size: 3456, elements: !327)
!326 = !DIFile(filename: "blender/source/blender/makesdna/DNA_node_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!327 = !{!328, !329, !330, !333, !334, !335, !338, !340, !341, !342, !343, !344, !345, !346, !347, !348, !349, !350, !351, !352, !353, !354, !363, !364, !365, !368, !373, !374, !377, !381, !386, !390, !391, !392, !393, !394}
!328 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !325, file: !326, line: 329, baseType: !237, size: 960)
!329 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !325, file: !326, line: 330, baseType: !283, size: 64, offset: 960)
!330 = !DIDerivedType(tag: DW_TAG_member, name: "typeinfo", scope: !325, file: !326, line: 332, baseType: !331, size: 64, offset: 1024)
!331 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !332, size: 64)
!332 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTreeType", file: !326, line: 332, flags: DIFlagFwdDecl)
!333 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !325, file: !326, line: 333, baseType: !15, size: 512, offset: 1088)
!334 = !DIDerivedType(tag: DW_TAG_member, name: "interface_type", scope: !325, file: !326, line: 335, baseType: !138, size: 64, offset: 1600)
!335 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !325, file: !326, line: 337, baseType: !336, size: 64, offset: 1664)
!336 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !337, size: 64)
!337 = !DICompositeType(tag: DW_TAG_structure_type, name: "bGPdata", file: !279, line: 61, flags: DIFlagFwdDecl)
!338 = !DIDerivedType(tag: DW_TAG_member, name: "view_center", scope: !325, file: !326, line: 338, baseType: !339, size: 64, offset: 1728)
!339 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 64, elements: !91)
!340 = !DIDerivedType(tag: DW_TAG_member, name: "nodes", scope: !325, file: !326, line: 340, baseType: !42, size: 128, offset: 1792)
!341 = !DIDerivedType(tag: DW_TAG_member, name: "links", scope: !325, file: !326, line: 340, baseType: !42, size: 128, offset: 1920)
!342 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !325, file: !326, line: 342, baseType: !34, size: 32, offset: 2048)
!343 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !325, file: !326, line: 342, baseType: !34, size: 32, offset: 2080)
!344 = !DIDerivedType(tag: DW_TAG_member, name: "cur_index", scope: !325, file: !326, line: 343, baseType: !34, size: 32, offset: 2112)
!345 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !325, file: !326, line: 345, baseType: !34, size: 32, offset: 2144)
!346 = !DIDerivedType(tag: DW_TAG_member, name: "update", scope: !325, file: !326, line: 346, baseType: !34, size: 32, offset: 2176)
!347 = !DIDerivedType(tag: DW_TAG_member, name: "is_updating", scope: !325, file: !326, line: 347, baseType: !31, size: 16, offset: 2208)
!348 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !325, file: !326, line: 348, baseType: !31, size: 16, offset: 2224)
!349 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !325, file: !326, line: 349, baseType: !34, size: 32, offset: 2240)
!350 = !DIDerivedType(tag: DW_TAG_member, name: "nodetype", scope: !325, file: !326, line: 351, baseType: !34, size: 32, offset: 2272)
!351 = !DIDerivedType(tag: DW_TAG_member, name: "edit_quality", scope: !325, file: !326, line: 353, baseType: !31, size: 16, offset: 2304)
!352 = !DIDerivedType(tag: DW_TAG_member, name: "render_quality", scope: !325, file: !326, line: 354, baseType: !31, size: 16, offset: 2320)
!353 = !DIDerivedType(tag: DW_TAG_member, name: "chunksize", scope: !325, file: !326, line: 355, baseType: !34, size: 32, offset: 2336)
!354 = !DIDerivedType(tag: DW_TAG_member, name: "viewer_border", scope: !325, file: !326, line: 357, baseType: !355, size: 128, offset: 2368)
!355 = !DIDerivedType(tag: DW_TAG_typedef, name: "rctf", file: !356, line: 95, baseType: !357)
!356 = !DIFile(filename: "blender/source/blender/makesdna/DNA_vec_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!357 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rctf", file: !356, line: 92, size: 128, elements: !358)
!358 = !{!359, !360, !361, !362}
!359 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !357, file: !356, line: 93, baseType: !120, size: 32)
!360 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !357, file: !356, line: 93, baseType: !120, size: 32, offset: 32)
!361 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !357, file: !356, line: 94, baseType: !120, size: 32, offset: 64)
!362 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !357, file: !356, line: 94, baseType: !120, size: 32, offset: 96)
!363 = !DIDerivedType(tag: DW_TAG_member, name: "inputs", scope: !325, file: !326, line: 363, baseType: !42, size: 128, offset: 2496)
!364 = !DIDerivedType(tag: DW_TAG_member, name: "outputs", scope: !325, file: !326, line: 363, baseType: !42, size: 128, offset: 2624)
!365 = !DIDerivedType(tag: DW_TAG_member, name: "previews", scope: !325, file: !326, line: 368, baseType: !366, size: 64, offset: 2752)
!366 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !367, size: 64)
!367 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeInstanceHash", file: !326, line: 48, flags: DIFlagFwdDecl)
!368 = !DIDerivedType(tag: DW_TAG_member, name: "active_viewer_key", scope: !325, file: !326, line: 372, baseType: !369, size: 32, offset: 2816)
!369 = !DIDerivedType(tag: DW_TAG_typedef, name: "bNodeInstanceKey", file: !326, line: 274, baseType: !370)
!370 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeInstanceKey", file: !326, line: 271, size: 32, elements: !371)
!371 = !{!372}
!372 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !370, file: !326, line: 273, baseType: !300, size: 32)
!373 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !325, file: !326, line: 373, baseType: !34, size: 32, offset: 2848)
!374 = !DIDerivedType(tag: DW_TAG_member, name: "execdata", scope: !325, file: !326, line: 382, baseType: !375, size: 64, offset: 2880)
!375 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !376, size: 64)
!376 = !DICompositeType(tag: DW_TAG_structure_type, name: "bNodeTreeExec", file: !326, line: 46, flags: DIFlagFwdDecl)
!377 = !DIDerivedType(tag: DW_TAG_member, name: "progress", scope: !325, file: !326, line: 385, baseType: !378, size: 64, offset: 2944)
!378 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !379, size: 64)
!379 = !DISubroutineType(types: !380)
!380 = !{null, !40, !120}
!381 = !DIDerivedType(tag: DW_TAG_member, name: "stats_draw", scope: !325, file: !326, line: 386, baseType: !382, size: 64, offset: 3008)
!382 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !383, size: 64)
!383 = !DISubroutineType(types: !384)
!384 = !{null, !40, !385}
!385 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !16, size: 64)
!386 = !DIDerivedType(tag: DW_TAG_member, name: "test_break", scope: !325, file: !326, line: 387, baseType: !387, size: 64, offset: 3072)
!387 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !388, size: 64)
!388 = !DISubroutineType(types: !389)
!389 = !{!34, !40}
!390 = !DIDerivedType(tag: DW_TAG_member, name: "update_draw", scope: !325, file: !326, line: 388, baseType: !202, size: 64, offset: 3136)
!391 = !DIDerivedType(tag: DW_TAG_member, name: "tbh", scope: !325, file: !326, line: 389, baseType: !40, size: 64, offset: 3200)
!392 = !DIDerivedType(tag: DW_TAG_member, name: "prh", scope: !325, file: !326, line: 389, baseType: !40, size: 64, offset: 3264)
!393 = !DIDerivedType(tag: DW_TAG_member, name: "sdh", scope: !325, file: !326, line: 389, baseType: !40, size: 64, offset: 3328)
!394 = !DIDerivedType(tag: DW_TAG_member, name: "udh", scope: !325, file: !326, line: 389, baseType: !40, size: 64, offset: 3392)
!395 = !DIDerivedType(tag: DW_TAG_member, name: "ed", scope: !278, file: !279, line: 1244, baseType: !396, size: 64, offset: 2048)
!396 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !397, size: 64)
!397 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Editing", file: !398, line: 200, size: 17024, elements: !399)
!398 = !DIFile(filename: "blender/source/blender/makesdna/DNA_sequence_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!399 = !{!400, !402, !403, !404, !827, !828, !829, !830, !831, !832, !833}
!400 = !DIDerivedType(tag: DW_TAG_member, name: "seqbasep", scope: !397, file: !398, line: 201, baseType: !401, size: 64)
!401 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !42, size: 64)
!402 = !DIDerivedType(tag: DW_TAG_member, name: "seqbase", scope: !397, file: !398, line: 202, baseType: !42, size: 128, offset: 64)
!403 = !DIDerivedType(tag: DW_TAG_member, name: "metastack", scope: !397, file: !398, line: 203, baseType: !42, size: 128, offset: 192)
!404 = !DIDerivedType(tag: DW_TAG_member, name: "act_seq", scope: !397, file: !398, line: 206, baseType: !405, size: 64, offset: 320)
!405 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !406, size: 64)
!406 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sequence", file: !398, line: 190, baseType: !407)
!407 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sequence", file: !398, line: 126, size: 2816, elements: !408)
!408 = !{!409, !411, !412, !413, !414, !415, !416, !417, !418, !419, !420, !421, !422, !423, !424, !425, !426, !427, !428, !429, !430, !431, !432, !433, !434, !508, !512, !513, !514, !797, !801, !802, !803, !804, !805, !806, !807, !808, !812, !813, !814, !815, !816, !817, !818, !819, !820, !821, !822, !823, !824, !826}
!409 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !407, file: !398, line: 127, baseType: !410, size: 64)
!410 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !407, size: 64)
!411 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !407, file: !398, line: 127, baseType: !410, size: 64, offset: 64)
!412 = !DIDerivedType(tag: DW_TAG_member, name: "tmp", scope: !407, file: !398, line: 128, baseType: !40, size: 64, offset: 128)
!413 = !DIDerivedType(tag: DW_TAG_member, name: "lib", scope: !407, file: !398, line: 129, baseType: !40, size: 64, offset: 192)
!414 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !407, file: !398, line: 130, baseType: !15, size: 512, offset: 256)
!415 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !407, file: !398, line: 132, baseType: !34, size: 32, offset: 768)
!416 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !407, file: !398, line: 132, baseType: !34, size: 32, offset: 800)
!417 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !407, file: !398, line: 133, baseType: !34, size: 32, offset: 832)
!418 = !DIDerivedType(tag: DW_TAG_member, name: "start", scope: !407, file: !398, line: 134, baseType: !34, size: 32, offset: 864)
!419 = !DIDerivedType(tag: DW_TAG_member, name: "startofs", scope: !407, file: !398, line: 134, baseType: !34, size: 32, offset: 896)
!420 = !DIDerivedType(tag: DW_TAG_member, name: "endofs", scope: !407, file: !398, line: 134, baseType: !34, size: 32, offset: 928)
!421 = !DIDerivedType(tag: DW_TAG_member, name: "startstill", scope: !407, file: !398, line: 135, baseType: !34, size: 32, offset: 960)
!422 = !DIDerivedType(tag: DW_TAG_member, name: "endstill", scope: !407, file: !398, line: 135, baseType: !34, size: 32, offset: 992)
!423 = !DIDerivedType(tag: DW_TAG_member, name: "machine", scope: !407, file: !398, line: 136, baseType: !34, size: 32, offset: 1024)
!424 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !407, file: !398, line: 136, baseType: !34, size: 32, offset: 1056)
!425 = !DIDerivedType(tag: DW_TAG_member, name: "startdisp", scope: !407, file: !398, line: 137, baseType: !34, size: 32, offset: 1088)
!426 = !DIDerivedType(tag: DW_TAG_member, name: "enddisp", scope: !407, file: !398, line: 137, baseType: !34, size: 32, offset: 1120)
!427 = !DIDerivedType(tag: DW_TAG_member, name: "sat", scope: !407, file: !398, line: 138, baseType: !120, size: 32, offset: 1152)
!428 = !DIDerivedType(tag: DW_TAG_member, name: "mul", scope: !407, file: !398, line: 139, baseType: !120, size: 32, offset: 1184)
!429 = !DIDerivedType(tag: DW_TAG_member, name: "handsize", scope: !407, file: !398, line: 139, baseType: !120, size: 32, offset: 1216)
!430 = !DIDerivedType(tag: DW_TAG_member, name: "anim_preseek", scope: !407, file: !398, line: 141, baseType: !31, size: 16, offset: 1248)
!431 = !DIDerivedType(tag: DW_TAG_member, name: "streamindex", scope: !407, file: !398, line: 142, baseType: !31, size: 16, offset: 1264)
!432 = !DIDerivedType(tag: DW_TAG_member, name: "multicam_source", scope: !407, file: !398, line: 143, baseType: !34, size: 32, offset: 1280)
!433 = !DIDerivedType(tag: DW_TAG_member, name: "clip_flag", scope: !407, file: !398, line: 144, baseType: !34, size: 32, offset: 1312)
!434 = !DIDerivedType(tag: DW_TAG_member, name: "strip", scope: !407, file: !398, line: 146, baseType: !435, size: 64, offset: 1344)
!435 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !436, size: 64)
!436 = !DIDerivedType(tag: DW_TAG_typedef, name: "Strip", file: !398, line: 114, baseType: !437)
!437 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Strip", file: !398, line: 99, size: 7232, elements: !438)
!438 = !{!439, !441, !442, !443, !444, !445, !446, !457, !461, !476, !485, !492, !502}
!439 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !437, file: !398, line: 100, baseType: !440, size: 64)
!440 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !437, size: 64)
!441 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !437, file: !398, line: 100, baseType: !440, size: 64, offset: 64)
!442 = !DIDerivedType(tag: DW_TAG_member, name: "us", scope: !437, file: !398, line: 101, baseType: !34, size: 32, offset: 128)
!443 = !DIDerivedType(tag: DW_TAG_member, name: "done", scope: !437, file: !398, line: 101, baseType: !34, size: 32, offset: 160)
!444 = !DIDerivedType(tag: DW_TAG_member, name: "startstill", scope: !437, file: !398, line: 102, baseType: !34, size: 32, offset: 192)
!445 = !DIDerivedType(tag: DW_TAG_member, name: "endstill", scope: !437, file: !398, line: 102, baseType: !34, size: 32, offset: 224)
!446 = !DIDerivedType(tag: DW_TAG_member, name: "stripdata", scope: !437, file: !398, line: 103, baseType: !447, size: 64, offset: 256)
!447 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !448, size: 64)
!448 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripElem", file: !398, line: 59, baseType: !449)
!449 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripElem", file: !398, line: 56, size: 2112, elements: !450)
!450 = !{!451, !455, !456}
!451 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !449, file: !398, line: 57, baseType: !452, size: 2048)
!452 = !DICompositeType(tag: DW_TAG_array_type, baseType: !16, size: 2048, elements: !453)
!453 = !{!454}
!454 = !DISubrange(count: 256)
!455 = !DIDerivedType(tag: DW_TAG_member, name: "orig_width", scope: !449, file: !398, line: 58, baseType: !34, size: 32, offset: 2048)
!456 = !DIDerivedType(tag: DW_TAG_member, name: "orig_height", scope: !449, file: !398, line: 58, baseType: !34, size: 32, offset: 2080)
!457 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !437, file: !398, line: 106, baseType: !458, size: 6144, offset: 320)
!458 = !DICompositeType(tag: DW_TAG_array_type, baseType: !16, size: 6144, elements: !459)
!459 = !{!460}
!460 = !DISubrange(count: 768)
!461 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !437, file: !398, line: 107, baseType: !462, size: 64, offset: 6464)
!462 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !463, size: 64)
!463 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripProxy", file: !398, line: 97, baseType: !464)
!464 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripProxy", file: !398, line: 83, size: 8320, elements: !465)
!465 = !{!466, !467, !468, !472, !473, !474, !475}
!466 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !464, file: !398, line: 84, baseType: !458, size: 6144)
!467 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !464, file: !398, line: 87, baseType: !452, size: 2048, offset: 6144)
!468 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !464, file: !398, line: 88, baseType: !469, size: 64, offset: 8192)
!469 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !470, size: 64)
!470 = !DICompositeType(tag: DW_TAG_structure_type, name: "anim", file: !471, line: 41, flags: DIFlagFwdDecl)
!471 = !DIFile(filename: "blender/source/blender/makesdna/DNA_image_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!472 = !DIDerivedType(tag: DW_TAG_member, name: "tc", scope: !464, file: !398, line: 90, baseType: !31, size: 16, offset: 8256)
!473 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !464, file: !398, line: 92, baseType: !31, size: 16, offset: 8272)
!474 = !DIDerivedType(tag: DW_TAG_member, name: "build_size_flags", scope: !464, file: !398, line: 93, baseType: !31, size: 16, offset: 8288)
!475 = !DIDerivedType(tag: DW_TAG_member, name: "build_tc_flags", scope: !464, file: !398, line: 95, baseType: !31, size: 16, offset: 8304)
!476 = !DIDerivedType(tag: DW_TAG_member, name: "crop", scope: !437, file: !398, line: 108, baseType: !477, size: 64, offset: 6528)
!477 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !478, size: 64)
!478 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripCrop", file: !398, line: 66, baseType: !479)
!479 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripCrop", file: !398, line: 61, size: 128, elements: !480)
!480 = !{!481, !482, !483, !484}
!481 = !DIDerivedType(tag: DW_TAG_member, name: "top", scope: !479, file: !398, line: 62, baseType: !34, size: 32)
!482 = !DIDerivedType(tag: DW_TAG_member, name: "bottom", scope: !479, file: !398, line: 63, baseType: !34, size: 32, offset: 32)
!483 = !DIDerivedType(tag: DW_TAG_member, name: "left", scope: !479, file: !398, line: 64, baseType: !34, size: 32, offset: 64)
!484 = !DIDerivedType(tag: DW_TAG_member, name: "right", scope: !479, file: !398, line: 65, baseType: !34, size: 32, offset: 96)
!485 = !DIDerivedType(tag: DW_TAG_member, name: "transform", scope: !437, file: !398, line: 109, baseType: !486, size: 64, offset: 6592)
!486 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !487, size: 64)
!487 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripTransform", file: !398, line: 71, baseType: !488)
!488 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripTransform", file: !398, line: 68, size: 64, elements: !489)
!489 = !{!490, !491}
!490 = !DIDerivedType(tag: DW_TAG_member, name: "xofs", scope: !488, file: !398, line: 69, baseType: !34, size: 32)
!491 = !DIDerivedType(tag: DW_TAG_member, name: "yofs", scope: !488, file: !398, line: 70, baseType: !34, size: 32, offset: 32)
!492 = !DIDerivedType(tag: DW_TAG_member, name: "color_balance", scope: !437, file: !398, line: 110, baseType: !493, size: 64, offset: 6656)
!493 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !494, size: 64)
!494 = !DIDerivedType(tag: DW_TAG_typedef, name: "StripColorBalance", file: !398, line: 81, baseType: !495)
!495 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "StripColorBalance", file: !398, line: 73, size: 352, elements: !496)
!496 = !{!497, !498, !499, !500, !501}
!497 = !DIDerivedType(tag: DW_TAG_member, name: "lift", scope: !495, file: !398, line: 74, baseType: !308, size: 96)
!498 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !495, file: !398, line: 75, baseType: !308, size: 96, offset: 96)
!499 = !DIDerivedType(tag: DW_TAG_member, name: "gain", scope: !495, file: !398, line: 76, baseType: !308, size: 96, offset: 192)
!500 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !495, file: !398, line: 77, baseType: !34, size: 32, offset: 288)
!501 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !495, file: !398, line: 78, baseType: !34, size: 32, offset: 320)
!502 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !437, file: !398, line: 113, baseType: !503, size: 512, offset: 6720)
!503 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedColorspaceSettings", file: !504, line: 182, baseType: !505)
!504 = !DIFile(filename: "blender/source/blender/makesdna/DNA_color_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!505 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedColorspaceSettings", file: !504, line: 180, size: 512, elements: !506)
!506 = !{!507}
!507 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !505, file: !504, line: 181, baseType: !15, size: 512)
!508 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !407, file: !398, line: 148, baseType: !509, size: 64, offset: 1408)
!509 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !510, size: 64)
!510 = !DICompositeType(tag: DW_TAG_structure_type, name: "Ipo", file: !511, line: 46, flags: DIFlagFwdDecl)
!511 = !DIFile(filename: "blender/source/blender/makesdna/DNA_texture_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!512 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !407, file: !398, line: 151, baseType: !277, size: 64, offset: 1472)
!513 = !DIDerivedType(tag: DW_TAG_member, name: "scene_camera", scope: !407, file: !398, line: 152, baseType: !286, size: 64, offset: 1536)
!514 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !407, file: !398, line: 153, baseType: !515, size: 64, offset: 1600)
!515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !516, size: 64)
!516 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClip", file: !517, line: 64, size: 19136, elements: !518)
!517 = !DIFile(filename: "blender/source/blender/makesdna/DNA_movieclip_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!518 = !{!519, !520, !521, !522, !523, !524, !525, !526, !527, !528, !531, !532, !783, !784, !792, !793, !794, !795, !796}
!519 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !516, file: !517, line: 65, baseType: !237, size: 960)
!520 = !DIDerivedType(tag: DW_TAG_member, name: "adt", scope: !516, file: !517, line: 66, baseType: !283, size: 64, offset: 960)
!521 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !516, file: !517, line: 68, baseType: !255, size: 8192, offset: 1024)
!522 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !516, file: !517, line: 70, baseType: !34, size: 32, offset: 9216)
!523 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !516, file: !517, line: 71, baseType: !34, size: 32, offset: 9248)
!524 = !DIDerivedType(tag: DW_TAG_member, name: "lastsize", scope: !516, file: !517, line: 72, baseType: !90, size: 64, offset: 9280)
!525 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !516, file: !517, line: 74, baseType: !120, size: 32, offset: 9344)
!526 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !516, file: !517, line: 74, baseType: !120, size: 32, offset: 9376)
!527 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !516, file: !517, line: 76, baseType: !469, size: 64, offset: 9408)
!528 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !516, file: !517, line: 77, baseType: !529, size: 64, offset: 9472)
!529 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !530, size: 64)
!530 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClipCache", file: !517, line: 77, flags: DIFlagFwdDecl)
!531 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !516, file: !517, line: 78, baseType: !336, size: 64, offset: 9536)
!532 = !DIDerivedType(tag: DW_TAG_member, name: "tracking", scope: !516, file: !517, line: 80, baseType: !533, size: 2624, offset: 9600)
!533 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTracking", file: !534, line: 340, size: 2624, elements: !535)
!534 = !DIFile(filename: "blender/source/blender/makesdna/DNA_tracking_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!535 = !{!536, !564, !582, !583, !584, !602, !660, !661, !763, !764, !765, !766, !772}
!536 = !DIDerivedType(tag: DW_TAG_member, name: "settings", scope: !533, file: !534, line: 341, baseType: !537, size: 576)
!537 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingSettings", file: !534, line: 251, baseType: !538)
!538 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingSettings", file: !534, line: 207, size: 576, elements: !539)
!539 = !{!540, !541, !542, !543, !544, !545, !546, !547, !548, !549, !550, !551, !552, !553, !554, !555, !556, !557, !558, !559, !560, !561, !562, !563}
!540 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !538, file: !534, line: 208, baseType: !34, size: 32)
!541 = !DIDerivedType(tag: DW_TAG_member, name: "default_motion_model", scope: !538, file: !534, line: 211, baseType: !31, size: 16, offset: 32)
!542 = !DIDerivedType(tag: DW_TAG_member, name: "default_algorithm_flag", scope: !538, file: !534, line: 212, baseType: !31, size: 16, offset: 48)
!543 = !DIDerivedType(tag: DW_TAG_member, name: "default_minimum_correlation", scope: !538, file: !534, line: 213, baseType: !120, size: 32, offset: 64)
!544 = !DIDerivedType(tag: DW_TAG_member, name: "default_pattern_size", scope: !538, file: !534, line: 214, baseType: !31, size: 16, offset: 96)
!545 = !DIDerivedType(tag: DW_TAG_member, name: "default_search_size", scope: !538, file: !534, line: 215, baseType: !31, size: 16, offset: 112)
!546 = !DIDerivedType(tag: DW_TAG_member, name: "default_frames_limit", scope: !538, file: !534, line: 216, baseType: !31, size: 16, offset: 128)
!547 = !DIDerivedType(tag: DW_TAG_member, name: "default_margin", scope: !538, file: !534, line: 217, baseType: !31, size: 16, offset: 144)
!548 = !DIDerivedType(tag: DW_TAG_member, name: "default_pattern_match", scope: !538, file: !534, line: 218, baseType: !31, size: 16, offset: 160)
!549 = !DIDerivedType(tag: DW_TAG_member, name: "default_flag", scope: !538, file: !534, line: 219, baseType: !31, size: 16, offset: 176)
!550 = !DIDerivedType(tag: DW_TAG_member, name: "default_weight", scope: !538, file: !534, line: 220, baseType: !120, size: 32, offset: 192)
!551 = !DIDerivedType(tag: DW_TAG_member, name: "motion_flag", scope: !538, file: !534, line: 222, baseType: !31, size: 16, offset: 224)
!552 = !DIDerivedType(tag: DW_TAG_member, name: "speed", scope: !538, file: !534, line: 225, baseType: !31, size: 16, offset: 240)
!553 = !DIDerivedType(tag: DW_TAG_member, name: "keyframe1", scope: !538, file: !534, line: 228, baseType: !34, size: 32, offset: 256)
!554 = !DIDerivedType(tag: DW_TAG_member, name: "keyframe2", scope: !538, file: !534, line: 229, baseType: !34, size: 32, offset: 288)
!555 = !DIDerivedType(tag: DW_TAG_member, name: "reconstruction_flag", scope: !538, file: !534, line: 233, baseType: !34, size: 32, offset: 320)
!556 = !DIDerivedType(tag: DW_TAG_member, name: "refine_camera_intrinsics", scope: !538, file: !534, line: 236, baseType: !31, size: 16, offset: 352)
!557 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !538, file: !534, line: 236, baseType: !31, size: 16, offset: 368)
!558 = !DIDerivedType(tag: DW_TAG_member, name: "dist", scope: !538, file: !534, line: 241, baseType: !120, size: 32, offset: 384)
!559 = !DIDerivedType(tag: DW_TAG_member, name: "clean_frames", scope: !538, file: !534, line: 244, baseType: !34, size: 32, offset: 416)
!560 = !DIDerivedType(tag: DW_TAG_member, name: "clean_action", scope: !538, file: !534, line: 244, baseType: !34, size: 32, offset: 448)
!561 = !DIDerivedType(tag: DW_TAG_member, name: "clean_error", scope: !538, file: !534, line: 245, baseType: !120, size: 32, offset: 480)
!562 = !DIDerivedType(tag: DW_TAG_member, name: "object_distance", scope: !538, file: !534, line: 248, baseType: !120, size: 32, offset: 512)
!563 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !538, file: !534, line: 250, baseType: !34, size: 32, offset: 544)
!564 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !533, file: !534, line: 342, baseType: !565, size: 448, offset: 576)
!565 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingCamera", file: !534, line: 79, baseType: !566)
!566 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingCamera", file: !534, line: 61, size: 448, elements: !567)
!567 = !{!568, !569, !570, !571, !572, !573, !574, !575, !576, !577, !578, !579, !580, !581}
!568 = !DIDerivedType(tag: DW_TAG_member, name: "intrinsics", scope: !566, file: !534, line: 62, baseType: !40, size: 64)
!569 = !DIDerivedType(tag: DW_TAG_member, name: "distortion_model", scope: !566, file: !534, line: 64, baseType: !31, size: 16, offset: 64)
!570 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !566, file: !534, line: 65, baseType: !31, size: 16, offset: 80)
!571 = !DIDerivedType(tag: DW_TAG_member, name: "sensor_width", scope: !566, file: !534, line: 67, baseType: !120, size: 32, offset: 96)
!572 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_aspect", scope: !566, file: !534, line: 68, baseType: !120, size: 32, offset: 128)
!573 = !DIDerivedType(tag: DW_TAG_member, name: "focal", scope: !566, file: !534, line: 69, baseType: !120, size: 32, offset: 160)
!574 = !DIDerivedType(tag: DW_TAG_member, name: "units", scope: !566, file: !534, line: 70, baseType: !31, size: 16, offset: 192)
!575 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !566, file: !534, line: 71, baseType: !31, size: 16, offset: 208)
!576 = !DIDerivedType(tag: DW_TAG_member, name: "principal", scope: !566, file: !534, line: 72, baseType: !339, size: 64, offset: 224)
!577 = !DIDerivedType(tag: DW_TAG_member, name: "k1", scope: !566, file: !534, line: 75, baseType: !120, size: 32, offset: 288)
!578 = !DIDerivedType(tag: DW_TAG_member, name: "k2", scope: !566, file: !534, line: 75, baseType: !120, size: 32, offset: 320)
!579 = !DIDerivedType(tag: DW_TAG_member, name: "k3", scope: !566, file: !534, line: 75, baseType: !120, size: 32, offset: 352)
!580 = !DIDerivedType(tag: DW_TAG_member, name: "division_k1", scope: !566, file: !534, line: 78, baseType: !120, size: 32, offset: 384)
!581 = !DIDerivedType(tag: DW_TAG_member, name: "division_k2", scope: !566, file: !534, line: 78, baseType: !120, size: 32, offset: 416)
!582 = !DIDerivedType(tag: DW_TAG_member, name: "tracks", scope: !533, file: !534, line: 343, baseType: !42, size: 128, offset: 1024)
!583 = !DIDerivedType(tag: DW_TAG_member, name: "plane_tracks", scope: !533, file: !534, line: 344, baseType: !42, size: 128, offset: 1152)
!584 = !DIDerivedType(tag: DW_TAG_member, name: "reconstruction", scope: !533, file: !534, line: 345, baseType: !585, size: 192, offset: 1280)
!585 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingReconstruction", file: !534, line: 278, baseType: !586)
!586 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingReconstruction", file: !534, line: 270, size: 192, elements: !587)
!587 = !{!588, !589, !590, !591, !592}
!588 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !586, file: !534, line: 271, baseType: !34, size: 32)
!589 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !586, file: !534, line: 273, baseType: !120, size: 32, offset: 32)
!590 = !DIDerivedType(tag: DW_TAG_member, name: "last_camera", scope: !586, file: !534, line: 275, baseType: !34, size: 32, offset: 64)
!591 = !DIDerivedType(tag: DW_TAG_member, name: "camnr", scope: !586, file: !534, line: 276, baseType: !34, size: 32, offset: 96)
!592 = !DIDerivedType(tag: DW_TAG_member, name: "cameras", scope: !586, file: !534, line: 277, baseType: !593, size: 64, offset: 128)
!593 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !594, size: 64)
!594 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieReconstructedCamera", file: !534, line: 55, size: 576, elements: !595)
!595 = !{!596, !597, !598}
!596 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !594, file: !534, line: 56, baseType: !34, size: 32)
!597 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !594, file: !534, line: 57, baseType: !120, size: 32, offset: 32)
!598 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !594, file: !534, line: 58, baseType: !599, size: 512, offset: 64)
!599 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 512, elements: !600)
!600 = !{!601, !601}
!601 = !DISubrange(count: 4)
!602 = !DIDerivedType(tag: DW_TAG_member, name: "stabilization", scope: !533, file: !534, line: 346, baseType: !603, size: 384, offset: 1472)
!603 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingStabilization", file: !534, line: 268, baseType: !604)
!604 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingStabilization", file: !534, line: 253, size: 384, elements: !605)
!605 = !{!606, !607, !608, !609, !610, !654, !655, !656, !657, !658, !659}
!606 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !604, file: !534, line: 254, baseType: !34, size: 32)
!607 = !DIDerivedType(tag: DW_TAG_member, name: "tot_track", scope: !604, file: !534, line: 255, baseType: !34, size: 32, offset: 32)
!608 = !DIDerivedType(tag: DW_TAG_member, name: "act_track", scope: !604, file: !534, line: 255, baseType: !34, size: 32, offset: 64)
!609 = !DIDerivedType(tag: DW_TAG_member, name: "maxscale", scope: !604, file: !534, line: 258, baseType: !120, size: 32, offset: 96)
!610 = !DIDerivedType(tag: DW_TAG_member, name: "rot_track", scope: !604, file: !534, line: 259, baseType: !611, size: 64, offset: 128)
!611 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !612, size: 64)
!612 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingTrack", file: !534, line: 164, baseType: !613)
!613 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingTrack", file: !534, line: 108, size: 1664, elements: !614)
!614 = !{!615, !617, !618, !619, !620, !621, !622, !623, !624, !625, !626, !639, !640, !641, !642, !643, !644, !645, !646, !647, !648, !649, !650, !651, !652, !653}
!615 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !613, file: !534, line: 109, baseType: !616, size: 64)
!616 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !613, size: 64)
!617 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !613, file: !534, line: 109, baseType: !616, size: 64, offset: 64)
!618 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !613, file: !534, line: 111, baseType: !15, size: 512, offset: 128)
!619 = !DIDerivedType(tag: DW_TAG_member, name: "pat_min", scope: !613, file: !534, line: 119, baseType: !339, size: 64, offset: 640)
!620 = !DIDerivedType(tag: DW_TAG_member, name: "pat_max", scope: !613, file: !534, line: 119, baseType: !339, size: 64, offset: 704)
!621 = !DIDerivedType(tag: DW_TAG_member, name: "search_min", scope: !613, file: !534, line: 125, baseType: !339, size: 64, offset: 768)
!622 = !DIDerivedType(tag: DW_TAG_member, name: "search_max", scope: !613, file: !534, line: 125, baseType: !339, size: 64, offset: 832)
!623 = !DIDerivedType(tag: DW_TAG_member, name: "offset", scope: !613, file: !534, line: 127, baseType: !339, size: 64, offset: 896)
!624 = !DIDerivedType(tag: DW_TAG_member, name: "markersnr", scope: !613, file: !534, line: 130, baseType: !34, size: 32, offset: 960)
!625 = !DIDerivedType(tag: DW_TAG_member, name: "last_marker", scope: !613, file: !534, line: 131, baseType: !34, size: 32, offset: 992)
!626 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !613, file: !534, line: 132, baseType: !627, size: 64, offset: 1024)
!627 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !628, size: 64)
!628 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingMarker", file: !534, line: 106, baseType: !629)
!629 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingMarker", file: !534, line: 81, size: 512, elements: !630)
!630 = !{!631, !632, !635, !636, !637, !638}
!631 = !DIDerivedType(tag: DW_TAG_member, name: "pos", scope: !629, file: !534, line: 82, baseType: !339, size: 64)
!632 = !DIDerivedType(tag: DW_TAG_member, name: "pattern_corners", scope: !629, file: !534, line: 97, baseType: !633, size: 256, offset: 64)
!633 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 256, elements: !634)
!634 = !{!601, !92}
!635 = !DIDerivedType(tag: DW_TAG_member, name: "search_min", scope: !629, file: !534, line: 102, baseType: !339, size: 64, offset: 320)
!636 = !DIDerivedType(tag: DW_TAG_member, name: "search_max", scope: !629, file: !534, line: 102, baseType: !339, size: 64, offset: 384)
!637 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !629, file: !534, line: 104, baseType: !34, size: 32, offset: 448)
!638 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !629, file: !534, line: 105, baseType: !34, size: 32, offset: 480)
!639 = !DIDerivedType(tag: DW_TAG_member, name: "bundle_pos", scope: !613, file: !534, line: 135, baseType: !308, size: 96, offset: 1088)
!640 = !DIDerivedType(tag: DW_TAG_member, name: "error", scope: !613, file: !534, line: 136, baseType: !120, size: 32, offset: 1184)
!641 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !613, file: !534, line: 139, baseType: !34, size: 32, offset: 1216)
!642 = !DIDerivedType(tag: DW_TAG_member, name: "pat_flag", scope: !613, file: !534, line: 139, baseType: !34, size: 32, offset: 1248)
!643 = !DIDerivedType(tag: DW_TAG_member, name: "search_flag", scope: !613, file: !534, line: 139, baseType: !34, size: 32, offset: 1280)
!644 = !DIDerivedType(tag: DW_TAG_member, name: "color", scope: !613, file: !534, line: 140, baseType: !308, size: 96, offset: 1312)
!645 = !DIDerivedType(tag: DW_TAG_member, name: "frames_limit", scope: !613, file: !534, line: 143, baseType: !31, size: 16, offset: 1408)
!646 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !613, file: !534, line: 144, baseType: !31, size: 16, offset: 1424)
!647 = !DIDerivedType(tag: DW_TAG_member, name: "pattern_match", scope: !613, file: !534, line: 145, baseType: !31, size: 16, offset: 1440)
!648 = !DIDerivedType(tag: DW_TAG_member, name: "motion_model", scope: !613, file: !534, line: 148, baseType: !31, size: 16, offset: 1456)
!649 = !DIDerivedType(tag: DW_TAG_member, name: "algorithm_flag", scope: !613, file: !534, line: 149, baseType: !34, size: 32, offset: 1472)
!650 = !DIDerivedType(tag: DW_TAG_member, name: "minimum_correlation", scope: !613, file: !534, line: 150, baseType: !120, size: 32, offset: 1504)
!651 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !613, file: !534, line: 152, baseType: !336, size: 64, offset: 1536)
!652 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !613, file: !534, line: 163, baseType: !120, size: 32, offset: 1600)
!653 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !613, file: !534, line: 163, baseType: !120, size: 32, offset: 1632)
!654 = !DIDerivedType(tag: DW_TAG_member, name: "locinf", scope: !604, file: !534, line: 261, baseType: !120, size: 32, offset: 192)
!655 = !DIDerivedType(tag: DW_TAG_member, name: "scaleinf", scope: !604, file: !534, line: 261, baseType: !120, size: 32, offset: 224)
!656 = !DIDerivedType(tag: DW_TAG_member, name: "rotinf", scope: !604, file: !534, line: 261, baseType: !120, size: 32, offset: 256)
!657 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !604, file: !534, line: 263, baseType: !34, size: 32, offset: 288)
!658 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !604, file: !534, line: 266, baseType: !34, size: 32, offset: 320)
!659 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !604, file: !534, line: 267, baseType: !120, size: 32, offset: 352)
!660 = !DIDerivedType(tag: DW_TAG_member, name: "act_track", scope: !533, file: !534, line: 347, baseType: !611, size: 64, offset: 1856)
!661 = !DIDerivedType(tag: DW_TAG_member, name: "act_plane_track", scope: !533, file: !534, line: 348, baseType: !662, size: 64, offset: 1920)
!662 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !663, size: 64)
!663 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingPlaneTrack", file: !534, line: 205, baseType: !664)
!664 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingPlaneTrack", file: !534, line: 186, size: 1024, elements: !665)
!665 = !{!666, !668, !669, !670, !672, !673, !674, !682, !683, !684, !761, !762}
!666 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !664, file: !534, line: 187, baseType: !667, size: 64)
!667 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !664, size: 64)
!668 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !664, file: !534, line: 187, baseType: !667, size: 64, offset: 64)
!669 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !664, file: !534, line: 189, baseType: !15, size: 512, offset: 128)
!670 = !DIDerivedType(tag: DW_TAG_member, name: "point_tracks", scope: !664, file: !534, line: 191, baseType: !671, size: 64, offset: 640)
!671 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !611, size: 64)
!672 = !DIDerivedType(tag: DW_TAG_member, name: "point_tracksnr", scope: !664, file: !534, line: 193, baseType: !34, size: 32, offset: 704)
!673 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !664, file: !534, line: 193, baseType: !34, size: 32, offset: 736)
!674 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !664, file: !534, line: 195, baseType: !675, size: 64, offset: 768)
!675 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !676, size: 64)
!676 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingPlaneMarker", file: !534, line: 184, baseType: !677)
!677 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingPlaneMarker", file: !534, line: 166, size: 320, elements: !678)
!678 = !{!679, !680, !681}
!679 = !DIDerivedType(tag: DW_TAG_member, name: "corners", scope: !677, file: !534, line: 180, baseType: !633, size: 256)
!680 = !DIDerivedType(tag: DW_TAG_member, name: "framenr", scope: !677, file: !534, line: 182, baseType: !34, size: 32, offset: 256)
!681 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !677, file: !534, line: 183, baseType: !34, size: 32, offset: 288)
!682 = !DIDerivedType(tag: DW_TAG_member, name: "markersnr", scope: !664, file: !534, line: 196, baseType: !34, size: 32, offset: 832)
!683 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !664, file: !534, line: 198, baseType: !34, size: 32, offset: 864)
!684 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !664, file: !534, line: 200, baseType: !685, size: 64, offset: 896)
!685 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !686, size: 64)
!686 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Image", file: !471, line: 77, size: 15424, elements: !687)
!687 = !{!688, !689, !690, !693, !696, !697, !700, !704, !705, !706, !707, !708, !709, !710, !711, !712, !713, !714, !715, !716, !717, !718, !720, !721, !735, !736, !737, !738, !739, !740, !741, !742, !743, !744, !747, !748, !749, !750, !751, !755}
!688 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !686, file: !471, line: 78, baseType: !237, size: 960)
!689 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !686, file: !471, line: 80, baseType: !255, size: 8192, offset: 960)
!690 = !DIDerivedType(tag: DW_TAG_member, name: "cache", scope: !686, file: !471, line: 82, baseType: !691, size: 64, offset: 9152)
!691 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !692, size: 64)
!692 = !DICompositeType(tag: DW_TAG_structure_type, name: "MovieCache", file: !471, line: 43, flags: DIFlagFwdDecl)
!693 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !686, file: !471, line: 83, baseType: !694, size: 64, offset: 9216)
!694 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !695, size: 64)
!695 = !DICompositeType(tag: DW_TAG_structure_type, name: "GPUTexture", file: !22, line: 46, flags: DIFlagFwdDecl)
!696 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !686, file: !471, line: 86, baseType: !469, size: 64, offset: 9280)
!697 = !DIDerivedType(tag: DW_TAG_member, name: "rr", scope: !686, file: !471, line: 87, baseType: !698, size: 64, offset: 9344)
!698 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !699, size: 64)
!699 = !DICompositeType(tag: DW_TAG_structure_type, name: "RenderResult", file: !471, line: 44, flags: DIFlagFwdDecl)
!700 = !DIDerivedType(tag: DW_TAG_member, name: "renders", scope: !686, file: !471, line: 89, baseType: !701, size: 512, offset: 9408)
!701 = !DICompositeType(tag: DW_TAG_array_type, baseType: !698, size: 512, elements: !702)
!702 = !{!703}
!703 = !DISubrange(count: 8)
!704 = !DIDerivedType(tag: DW_TAG_member, name: "render_slot", scope: !686, file: !471, line: 90, baseType: !31, size: 16, offset: 9920)
!705 = !DIDerivedType(tag: DW_TAG_member, name: "last_render_slot", scope: !686, file: !471, line: 90, baseType: !31, size: 16, offset: 9936)
!706 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !686, file: !471, line: 92, baseType: !31, size: 16, offset: 9952)
!707 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !686, file: !471, line: 92, baseType: !31, size: 16, offset: 9968)
!708 = !DIDerivedType(tag: DW_TAG_member, name: "source", scope: !686, file: !471, line: 93, baseType: !31, size: 16, offset: 9984)
!709 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !686, file: !471, line: 93, baseType: !31, size: 16, offset: 10000)
!710 = !DIDerivedType(tag: DW_TAG_member, name: "lastframe", scope: !686, file: !471, line: 94, baseType: !34, size: 32, offset: 10016)
!711 = !DIDerivedType(tag: DW_TAG_member, name: "tpageflag", scope: !686, file: !471, line: 97, baseType: !31, size: 16, offset: 10048)
!712 = !DIDerivedType(tag: DW_TAG_member, name: "totbind", scope: !686, file: !471, line: 97, baseType: !31, size: 16, offset: 10064)
!713 = !DIDerivedType(tag: DW_TAG_member, name: "xrep", scope: !686, file: !471, line: 98, baseType: !31, size: 16, offset: 10080)
!714 = !DIDerivedType(tag: DW_TAG_member, name: "yrep", scope: !686, file: !471, line: 98, baseType: !31, size: 16, offset: 10096)
!715 = !DIDerivedType(tag: DW_TAG_member, name: "twsta", scope: !686, file: !471, line: 99, baseType: !31, size: 16, offset: 10112)
!716 = !DIDerivedType(tag: DW_TAG_member, name: "twend", scope: !686, file: !471, line: 99, baseType: !31, size: 16, offset: 10128)
!717 = !DIDerivedType(tag: DW_TAG_member, name: "bindcode", scope: !686, file: !471, line: 100, baseType: !300, size: 32, offset: 10144)
!718 = !DIDerivedType(tag: DW_TAG_member, name: "repbind", scope: !686, file: !471, line: 101, baseType: !719, size: 64, offset: 10176)
!719 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !300, size: 64)
!720 = !DIDerivedType(tag: DW_TAG_member, name: "packedfile", scope: !686, file: !471, line: 103, baseType: !261, size: 64, offset: 10240)
!721 = !DIDerivedType(tag: DW_TAG_member, name: "preview", scope: !686, file: !471, line: 104, baseType: !722, size: 64, offset: 10304)
!722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !723, size: 64)
!723 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PreviewImage", file: !22, line: 159, size: 448, elements: !724)
!724 = !{!725, !727, !728, !730, !731, !733}
!725 = !DIDerivedType(tag: DW_TAG_member, name: "w", scope: !723, file: !22, line: 161, baseType: !726, size: 64)
!726 = !DICompositeType(tag: DW_TAG_array_type, baseType: !300, size: 64, elements: !91)
!727 = !DIDerivedType(tag: DW_TAG_member, name: "h", scope: !723, file: !22, line: 162, baseType: !726, size: 64, offset: 64)
!728 = !DIDerivedType(tag: DW_TAG_member, name: "changed", scope: !723, file: !22, line: 163, baseType: !729, size: 32, offset: 128)
!729 = !DICompositeType(tag: DW_TAG_array_type, baseType: !31, size: 32, elements: !91)
!730 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !723, file: !22, line: 164, baseType: !729, size: 32, offset: 160)
!731 = !DIDerivedType(tag: DW_TAG_member, name: "rect", scope: !723, file: !22, line: 165, baseType: !732, size: 128, offset: 192)
!732 = !DICompositeType(tag: DW_TAG_array_type, baseType: !719, size: 128, elements: !91)
!733 = !DIDerivedType(tag: DW_TAG_member, name: "gputexture", scope: !723, file: !22, line: 166, baseType: !734, size: 128, offset: 320)
!734 = !DICompositeType(tag: DW_TAG_array_type, baseType: !694, size: 128, elements: !91)
!735 = !DIDerivedType(tag: DW_TAG_member, name: "lastupdate", scope: !686, file: !471, line: 107, baseType: !120, size: 32, offset: 10368)
!736 = !DIDerivedType(tag: DW_TAG_member, name: "lastused", scope: !686, file: !471, line: 108, baseType: !34, size: 32, offset: 10400)
!737 = !DIDerivedType(tag: DW_TAG_member, name: "animspeed", scope: !686, file: !471, line: 109, baseType: !31, size: 16, offset: 10432)
!738 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !686, file: !471, line: 110, baseType: !31, size: 16, offset: 10448)
!739 = !DIDerivedType(tag: DW_TAG_member, name: "gen_x", scope: !686, file: !471, line: 113, baseType: !34, size: 32, offset: 10464)
!740 = !DIDerivedType(tag: DW_TAG_member, name: "gen_y", scope: !686, file: !471, line: 113, baseType: !34, size: 32, offset: 10496)
!741 = !DIDerivedType(tag: DW_TAG_member, name: "gen_type", scope: !686, file: !471, line: 114, baseType: !16, size: 8, offset: 10528)
!742 = !DIDerivedType(tag: DW_TAG_member, name: "gen_flag", scope: !686, file: !471, line: 114, baseType: !16, size: 8, offset: 10536)
!743 = !DIDerivedType(tag: DW_TAG_member, name: "gen_depth", scope: !686, file: !471, line: 115, baseType: !31, size: 16, offset: 10544)
!744 = !DIDerivedType(tag: DW_TAG_member, name: "gen_color", scope: !686, file: !471, line: 116, baseType: !745, size: 128, offset: 10560)
!745 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 128, elements: !746)
!746 = !{!601}
!747 = !DIDerivedType(tag: DW_TAG_member, name: "aspx", scope: !686, file: !471, line: 119, baseType: !120, size: 32, offset: 10688)
!748 = !DIDerivedType(tag: DW_TAG_member, name: "aspy", scope: !686, file: !471, line: 119, baseType: !120, size: 32, offset: 10720)
!749 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !686, file: !471, line: 122, baseType: !503, size: 512, offset: 10752)
!750 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !686, file: !471, line: 123, baseType: !16, size: 8, offset: 11264)
!751 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !686, file: !471, line: 125, baseType: !752, size: 56, offset: 11272)
!752 = !DICompositeType(tag: DW_TAG_array_type, baseType: !16, size: 56, elements: !753)
!753 = !{!754}
!754 = !DISubrange(count: 7)
!755 = !DIDerivedType(tag: DW_TAG_member, name: "render_slots", scope: !686, file: !471, line: 126, baseType: !756, size: 4096, offset: 11328)
!756 = !DICompositeType(tag: DW_TAG_array_type, baseType: !757, size: 4096, elements: !702)
!757 = !DIDerivedType(tag: DW_TAG_typedef, name: "RenderSlot", file: !471, line: 69, baseType: !758)
!758 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderSlot", file: !471, line: 67, size: 512, elements: !759)
!759 = !{!760}
!760 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !758, file: !471, line: 68, baseType: !15, size: 512)
!761 = !DIDerivedType(tag: DW_TAG_member, name: "image_opacity", scope: !664, file: !534, line: 201, baseType: !120, size: 32, offset: 960)
!762 = !DIDerivedType(tag: DW_TAG_member, name: "last_marker", scope: !664, file: !534, line: 204, baseType: !34, size: 32, offset: 992)
!763 = !DIDerivedType(tag: DW_TAG_member, name: "objects", scope: !533, file: !534, line: 350, baseType: !42, size: 128, offset: 1984)
!764 = !DIDerivedType(tag: DW_TAG_member, name: "objectnr", scope: !533, file: !534, line: 351, baseType: !34, size: 32, offset: 2112)
!765 = !DIDerivedType(tag: DW_TAG_member, name: "tot_object", scope: !533, file: !534, line: 351, baseType: !34, size: 32, offset: 2144)
!766 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !533, file: !534, line: 353, baseType: !767, size: 64, offset: 2176)
!767 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !768, size: 64)
!768 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingStats", file: !534, line: 297, baseType: !769)
!769 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingStats", file: !534, line: 295, size: 2048, elements: !770)
!770 = !{!771}
!771 = !DIDerivedType(tag: DW_TAG_member, name: "message", scope: !769, file: !534, line: 296, baseType: !452, size: 2048)
!772 = !DIDerivedType(tag: DW_TAG_member, name: "dopesheet", scope: !533, file: !534, line: 355, baseType: !773, size: 384, offset: 2240)
!773 = !DIDerivedType(tag: DW_TAG_typedef, name: "MovieTrackingDopesheet", file: !534, line: 338, baseType: !774)
!774 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieTrackingDopesheet", file: !534, line: 322, size: 384, elements: !775)
!775 = !{!776, !777, !778, !779, !780, !781, !782}
!776 = !DIDerivedType(tag: DW_TAG_member, name: "ok", scope: !774, file: !534, line: 323, baseType: !34, size: 32)
!777 = !DIDerivedType(tag: DW_TAG_member, name: "sort_method", scope: !774, file: !534, line: 325, baseType: !31, size: 16, offset: 32)
!778 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !774, file: !534, line: 326, baseType: !31, size: 16, offset: 48)
!779 = !DIDerivedType(tag: DW_TAG_member, name: "coverage_segments", scope: !774, file: !534, line: 331, baseType: !42, size: 128, offset: 64)
!780 = !DIDerivedType(tag: DW_TAG_member, name: "channels", scope: !774, file: !534, line: 334, baseType: !42, size: 128, offset: 192)
!781 = !DIDerivedType(tag: DW_TAG_member, name: "tot_channel", scope: !774, file: !534, line: 335, baseType: !34, size: 32, offset: 320)
!782 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !774, file: !534, line: 337, baseType: !34, size: 32, offset: 352)
!783 = !DIDerivedType(tag: DW_TAG_member, name: "tracking_context", scope: !516, file: !517, line: 81, baseType: !40, size: 64, offset: 12224)
!784 = !DIDerivedType(tag: DW_TAG_member, name: "proxy", scope: !516, file: !517, line: 85, baseType: !785, size: 6208, offset: 12288)
!785 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MovieClipProxy", file: !517, line: 55, size: 6208, elements: !786)
!786 = !{!787, !788, !789, !790, !791}
!787 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !785, file: !517, line: 56, baseType: !458, size: 6144)
!788 = !DIDerivedType(tag: DW_TAG_member, name: "tc", scope: !785, file: !517, line: 58, baseType: !31, size: 16, offset: 6144)
!789 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !785, file: !517, line: 59, baseType: !31, size: 16, offset: 6160)
!790 = !DIDerivedType(tag: DW_TAG_member, name: "build_size_flag", scope: !785, file: !517, line: 60, baseType: !31, size: 16, offset: 6176)
!791 = !DIDerivedType(tag: DW_TAG_member, name: "build_tc_flag", scope: !785, file: !517, line: 61, baseType: !31, size: 16, offset: 6192)
!792 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !516, file: !517, line: 86, baseType: !34, size: 32, offset: 18496)
!793 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !516, file: !517, line: 88, baseType: !34, size: 32, offset: 18528)
!794 = !DIDerivedType(tag: DW_TAG_member, name: "start_frame", scope: !516, file: !517, line: 90, baseType: !34, size: 32, offset: 18560)
!795 = !DIDerivedType(tag: DW_TAG_member, name: "frame_offset", scope: !516, file: !517, line: 94, baseType: !34, size: 32, offset: 18592)
!796 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace_settings", scope: !516, file: !517, line: 100, baseType: !503, size: 512, offset: 18624)
!797 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !407, file: !398, line: 154, baseType: !798, size: 64, offset: 1664)
!798 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !799, size: 64)
!799 = !DICompositeType(tag: DW_TAG_structure_type, name: "Mask", file: !800, line: 264, flags: DIFlagFwdDecl)
!800 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_context.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!801 = !DIDerivedType(tag: DW_TAG_member, name: "anim", scope: !407, file: !398, line: 156, baseType: !469, size: 64, offset: 1728)
!802 = !DIDerivedType(tag: DW_TAG_member, name: "effect_fader", scope: !407, file: !398, line: 158, baseType: !120, size: 32, offset: 1792)
!803 = !DIDerivedType(tag: DW_TAG_member, name: "speed_fader", scope: !407, file: !398, line: 159, baseType: !120, size: 32, offset: 1824)
!804 = !DIDerivedType(tag: DW_TAG_member, name: "seq1", scope: !407, file: !398, line: 162, baseType: !410, size: 64, offset: 1856)
!805 = !DIDerivedType(tag: DW_TAG_member, name: "seq2", scope: !407, file: !398, line: 162, baseType: !410, size: 64, offset: 1920)
!806 = !DIDerivedType(tag: DW_TAG_member, name: "seq3", scope: !407, file: !398, line: 162, baseType: !410, size: 64, offset: 1984)
!807 = !DIDerivedType(tag: DW_TAG_member, name: "seqbase", scope: !407, file: !398, line: 164, baseType: !42, size: 128, offset: 2048)
!808 = !DIDerivedType(tag: DW_TAG_member, name: "sound", scope: !407, file: !398, line: 166, baseType: !809, size: 64, offset: 2176)
!809 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !810, size: 64)
!810 = !DICompositeType(tag: DW_TAG_structure_type, name: "bSound", file: !811, line: 39, flags: DIFlagFwdDecl)
!811 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_sound.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!812 = !DIDerivedType(tag: DW_TAG_member, name: "scene_sound", scope: !407, file: !398, line: 167, baseType: !40, size: 64, offset: 2240)
!813 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !407, file: !398, line: 168, baseType: !120, size: 32, offset: 2304)
!814 = !DIDerivedType(tag: DW_TAG_member, name: "pitch", scope: !407, file: !398, line: 170, baseType: !120, size: 32, offset: 2336)
!815 = !DIDerivedType(tag: DW_TAG_member, name: "pan", scope: !407, file: !398, line: 170, baseType: !120, size: 32, offset: 2368)
!816 = !DIDerivedType(tag: DW_TAG_member, name: "strobe", scope: !407, file: !398, line: 171, baseType: !120, size: 32, offset: 2400)
!817 = !DIDerivedType(tag: DW_TAG_member, name: "effectdata", scope: !407, file: !398, line: 173, baseType: !40, size: 64, offset: 2432)
!818 = !DIDerivedType(tag: DW_TAG_member, name: "anim_startofs", scope: !407, file: !398, line: 175, baseType: !34, size: 32, offset: 2496)
!819 = !DIDerivedType(tag: DW_TAG_member, name: "anim_endofs", scope: !407, file: !398, line: 176, baseType: !34, size: 32, offset: 2528)
!820 = !DIDerivedType(tag: DW_TAG_member, name: "blend_mode", scope: !407, file: !398, line: 179, baseType: !34, size: 32, offset: 2560)
!821 = !DIDerivedType(tag: DW_TAG_member, name: "blend_opacity", scope: !407, file: !398, line: 180, baseType: !120, size: 32, offset: 2592)
!822 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !407, file: !398, line: 183, baseType: !34, size: 32, offset: 2624)
!823 = !DIDerivedType(tag: DW_TAG_member, name: "alpha_mode", scope: !407, file: !398, line: 185, baseType: !16, size: 8, offset: 2656)
!824 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !407, file: !398, line: 186, baseType: !825, size: 24, offset: 2664)
!825 = !DICompositeType(tag: DW_TAG_array_type, baseType: !16, size: 24, elements: !309)
!826 = !DIDerivedType(tag: DW_TAG_member, name: "modifiers", scope: !407, file: !398, line: 189, baseType: !42, size: 128, offset: 2688)
!827 = !DIDerivedType(tag: DW_TAG_member, name: "act_imagedir", scope: !397, file: !398, line: 207, baseType: !255, size: 8192, offset: 384)
!828 = !DIDerivedType(tag: DW_TAG_member, name: "act_sounddir", scope: !397, file: !398, line: 208, baseType: !255, size: 8192, offset: 8576)
!829 = !DIDerivedType(tag: DW_TAG_member, name: "over_ofs", scope: !397, file: !398, line: 210, baseType: !34, size: 32, offset: 16768)
!830 = !DIDerivedType(tag: DW_TAG_member, name: "over_cfra", scope: !397, file: !398, line: 210, baseType: !34, size: 32, offset: 16800)
!831 = !DIDerivedType(tag: DW_TAG_member, name: "over_flag", scope: !397, file: !398, line: 211, baseType: !34, size: 32, offset: 16832)
!832 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !397, file: !398, line: 211, baseType: !34, size: 32, offset: 16864)
!833 = !DIDerivedType(tag: DW_TAG_member, name: "over_border", scope: !397, file: !398, line: 212, baseType: !355, size: 128, offset: 16896)
!834 = !DIDerivedType(tag: DW_TAG_member, name: "toolsettings", scope: !278, file: !279, line: 1246, baseType: !835, size: 64, offset: 2112)
!835 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !836, size: 64)
!836 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ToolSettings", file: !279, line: 1067, size: 5184, elements: !837)
!837 = !{!838, !867, !868, !883, !889, !890, !891, !892, !893, !894, !895, !896, !897, !898, !899, !900, !901, !905, !921, !948, !949, !950, !951, !952, !953, !954, !955, !956, !957, !958, !959, !960, !961, !962, !963, !964, !965, !966, !967, !968, !969, !970, !971, !972, !973, !974, !975, !976, !978, !979, !980, !981, !982, !983, !984, !985, !986, !987, !988, !989, !990, !991, !992, !993, !994, !995, !996, !997, !998, !999, !1000, !1001, !1002, !1003, !1031}
!838 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint", scope: !836, file: !279, line: 1068, baseType: !839, size: 64)
!839 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !840, size: 64)
!840 = !DIDerivedType(tag: DW_TAG_typedef, name: "VPaint", file: !279, line: 934, baseType: !841)
!841 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "VPaint", file: !279, line: 925, size: 576, elements: !842)
!842 = !{!843, !859, !860, !861, !862, !863, !866}
!843 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !841, file: !279, line: 926, baseType: !844, size: 320)
!844 = !DIDerivedType(tag: DW_TAG_typedef, name: "Paint", file: !279, line: 830, baseType: !845)
!845 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Paint", file: !279, line: 813, size: 320, elements: !846)
!846 = !{!847, !850, !853, !854, !856, !857, !858}
!847 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !845, file: !279, line: 814, baseType: !848, size: 64)
!848 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !849, size: 64)
!849 = !DICompositeType(tag: DW_TAG_structure_type, name: "Brush", file: !279, line: 51, flags: DIFlagFwdDecl)
!850 = !DIDerivedType(tag: DW_TAG_member, name: "palette", scope: !845, file: !279, line: 815, baseType: !851, size: 64, offset: 64)
!851 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !852, size: 64)
!852 = !DICompositeType(tag: DW_TAG_structure_type, name: "Palette", file: !279, line: 815, flags: DIFlagFwdDecl)
!853 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor", scope: !845, file: !279, line: 818, baseType: !40, size: 64, offset: 128)
!854 = !DIDerivedType(tag: DW_TAG_member, name: "paint_cursor_col", scope: !845, file: !279, line: 819, baseType: !855, size: 32, offset: 192)
!855 = !DICompositeType(tag: DW_TAG_array_type, baseType: !73, size: 32, elements: !746)
!856 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !845, file: !279, line: 822, baseType: !34, size: 32, offset: 224)
!857 = !DIDerivedType(tag: DW_TAG_member, name: "num_input_samples", scope: !845, file: !279, line: 826, baseType: !34, size: 32, offset: 256)
!858 = !DIDerivedType(tag: DW_TAG_member, name: "symmetry_flags", scope: !845, file: !279, line: 829, baseType: !34, size: 32, offset: 288)
!859 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !841, file: !279, line: 928, baseType: !31, size: 16, offset: 320)
!860 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !841, file: !279, line: 928, baseType: !31, size: 16, offset: 336)
!861 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !841, file: !279, line: 929, baseType: !34, size: 32, offset: 352)
!862 = !DIDerivedType(tag: DW_TAG_member, name: "vpaint_prev", scope: !841, file: !279, line: 930, baseType: !719, size: 64, offset: 384)
!863 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint_prev", scope: !841, file: !279, line: 931, baseType: !864, size: 64, offset: 448)
!864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !865, size: 64)
!865 = !DICompositeType(tag: DW_TAG_structure_type, name: "MDeformVert", file: !279, line: 931, flags: DIFlagFwdDecl)
!866 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !841, file: !279, line: 933, baseType: !40, size: 64, offset: 512)
!867 = !DIDerivedType(tag: DW_TAG_member, name: "wpaint", scope: !836, file: !279, line: 1069, baseType: !839, size: 64, offset: 64)
!868 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt", scope: !836, file: !279, line: 1070, baseType: !869, size: 64, offset: 128)
!869 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !870, size: 64)
!870 = !DIDerivedType(tag: DW_TAG_typedef, name: "Sculpt", file: !279, line: 916, baseType: !871)
!871 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Sculpt", file: !279, line: 891, size: 704, elements: !872)
!872 = !{!873, !874, !875, !877, !878, !879, !880, !881, !882}
!873 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !871, file: !279, line: 892, baseType: !844, size: 320)
!874 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !871, file: !279, line: 896, baseType: !34, size: 32, offset: 320)
!875 = !DIDerivedType(tag: DW_TAG_member, name: "radial_symm", scope: !871, file: !279, line: 900, baseType: !876, size: 96, offset: 352)
!876 = !DICompositeType(tag: DW_TAG_array_type, baseType: !34, size: 96, elements: !309)
!877 = !DIDerivedType(tag: DW_TAG_member, name: "detail_size", scope: !871, file: !279, line: 903, baseType: !120, size: 32, offset: 448)
!878 = !DIDerivedType(tag: DW_TAG_member, name: "symmetrize_direction", scope: !871, file: !279, line: 906, baseType: !34, size: 32, offset: 480)
!879 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_factor", scope: !871, file: !279, line: 909, baseType: !120, size: 32, offset: 512)
!880 = !DIDerivedType(tag: DW_TAG_member, name: "constant_detail", scope: !871, file: !279, line: 912, baseType: !120, size: 32, offset: 544)
!881 = !DIDerivedType(tag: DW_TAG_member, name: "gravity_object", scope: !871, file: !279, line: 914, baseType: !286, size: 64, offset: 576)
!882 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !871, file: !279, line: 915, baseType: !40, size: 64, offset: 640)
!883 = !DIDerivedType(tag: DW_TAG_member, name: "uvsculpt", scope: !836, file: !279, line: 1071, baseType: !884, size: 64, offset: 192)
!884 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !885, size: 64)
!885 = !DIDerivedType(tag: DW_TAG_typedef, name: "UvSculpt", file: !279, line: 920, baseType: !886)
!886 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UvSculpt", file: !279, line: 918, size: 320, elements: !887)
!887 = !{!888}
!888 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !886, file: !279, line: 919, baseType: !844, size: 320)
!889 = !DIDerivedType(tag: DW_TAG_member, name: "vgroup_weight", scope: !836, file: !279, line: 1075, baseType: !120, size: 32, offset: 256)
!890 = !DIDerivedType(tag: DW_TAG_member, name: "doublimit", scope: !836, file: !279, line: 1077, baseType: !120, size: 32, offset: 288)
!891 = !DIDerivedType(tag: DW_TAG_member, name: "normalsize", scope: !836, file: !279, line: 1078, baseType: !120, size: 32, offset: 320)
!892 = !DIDerivedType(tag: DW_TAG_member, name: "automerge", scope: !836, file: !279, line: 1079, baseType: !31, size: 16, offset: 352)
!893 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !836, file: !279, line: 1082, baseType: !31, size: 16, offset: 368)
!894 = !DIDerivedType(tag: DW_TAG_member, name: "unwrapper", scope: !836, file: !279, line: 1085, baseType: !16, size: 8, offset: 384)
!895 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_flag", scope: !836, file: !279, line: 1086, baseType: !16, size: 8, offset: 392)
!896 = !DIDerivedType(tag: DW_TAG_member, name: "uv_flag", scope: !836, file: !279, line: 1087, baseType: !16, size: 8, offset: 400)
!897 = !DIDerivedType(tag: DW_TAG_member, name: "uv_selectmode", scope: !836, file: !279, line: 1088, baseType: !16, size: 8, offset: 408)
!898 = !DIDerivedType(tag: DW_TAG_member, name: "uvcalc_margin", scope: !836, file: !279, line: 1090, baseType: !120, size: 32, offset: 416)
!899 = !DIDerivedType(tag: DW_TAG_member, name: "autoik_chainlen", scope: !836, file: !279, line: 1093, baseType: !31, size: 16, offset: 448)
!900 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil_flags", scope: !836, file: !279, line: 1096, baseType: !16, size: 8, offset: 464)
!901 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !836, file: !279, line: 1098, baseType: !902, size: 40, offset: 472)
!902 = !DICompositeType(tag: DW_TAG_array_type, baseType: !16, size: 40, elements: !903)
!903 = !{!904}
!904 = !DISubrange(count: 5)
!905 = !DIDerivedType(tag: DW_TAG_member, name: "imapaint", scope: !836, file: !279, line: 1101, baseType: !906, size: 832, offset: 512)
!906 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImagePaintSettings", file: !279, line: 836, size: 832, elements: !907)
!907 = !{!908, !909, !910, !911, !912, !913, !914, !915, !916, !917, !918, !919, !920}
!908 = !DIDerivedType(tag: DW_TAG_member, name: "paint", scope: !906, file: !279, line: 837, baseType: !844, size: 320)
!909 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !906, file: !279, line: 839, baseType: !31, size: 16, offset: 320)
!910 = !DIDerivedType(tag: DW_TAG_member, name: "missing_data", scope: !906, file: !279, line: 839, baseType: !31, size: 16, offset: 336)
!911 = !DIDerivedType(tag: DW_TAG_member, name: "seam_bleed", scope: !906, file: !279, line: 842, baseType: !31, size: 16, offset: 352)
!912 = !DIDerivedType(tag: DW_TAG_member, name: "normal_angle", scope: !906, file: !279, line: 842, baseType: !31, size: 16, offset: 368)
!913 = !DIDerivedType(tag: DW_TAG_member, name: "screen_grab_size", scope: !906, file: !279, line: 843, baseType: !729, size: 32, offset: 384)
!914 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !906, file: !279, line: 845, baseType: !34, size: 32, offset: 416)
!915 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !906, file: !279, line: 847, baseType: !40, size: 64, offset: 448)
!916 = !DIDerivedType(tag: DW_TAG_member, name: "stencil", scope: !906, file: !279, line: 848, baseType: !685, size: 64, offset: 512)
!917 = !DIDerivedType(tag: DW_TAG_member, name: "clone", scope: !906, file: !279, line: 849, baseType: !685, size: 64, offset: 576)
!918 = !DIDerivedType(tag: DW_TAG_member, name: "canvas", scope: !906, file: !279, line: 850, baseType: !685, size: 64, offset: 640)
!919 = !DIDerivedType(tag: DW_TAG_member, name: "stencil_col", scope: !906, file: !279, line: 851, baseType: !308, size: 96, offset: 704)
!920 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !906, file: !279, line: 852, baseType: !120, size: 32, offset: 800)
!921 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !836, file: !279, line: 1104, baseType: !922, size: 1344, offset: 1344)
!922 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleEditSettings", file: !279, line: 867, size: 1344, elements: !923)
!923 = !{!924, !925, !926, !927, !928, !939, !940, !941, !942, !943, !944, !945, !946, !947}
!924 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !922, file: !279, line: 868, baseType: !31, size: 16)
!925 = !DIDerivedType(tag: DW_TAG_member, name: "totrekey", scope: !922, file: !279, line: 869, baseType: !31, size: 16, offset: 16)
!926 = !DIDerivedType(tag: DW_TAG_member, name: "totaddkey", scope: !922, file: !279, line: 870, baseType: !31, size: 16, offset: 32)
!927 = !DIDerivedType(tag: DW_TAG_member, name: "brushtype", scope: !922, file: !279, line: 871, baseType: !31, size: 16, offset: 48)
!928 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !922, file: !279, line: 873, baseType: !929, size: 896, offset: 64)
!929 = !DICompositeType(tag: DW_TAG_array_type, baseType: !930, size: 896, elements: !753)
!930 = !DIDerivedType(tag: DW_TAG_typedef, name: "ParticleBrushData", file: !279, line: 864, baseType: !931)
!931 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ParticleBrushData", file: !279, line: 859, size: 128, elements: !932)
!932 = !{!933, !934, !935, !936, !937, !938}
!933 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !931, file: !279, line: 860, baseType: !31, size: 16)
!934 = !DIDerivedType(tag: DW_TAG_member, name: "step", scope: !931, file: !279, line: 861, baseType: !31, size: 16, offset: 16)
!935 = !DIDerivedType(tag: DW_TAG_member, name: "invert", scope: !931, file: !279, line: 861, baseType: !31, size: 16, offset: 32)
!936 = !DIDerivedType(tag: DW_TAG_member, name: "count", scope: !931, file: !279, line: 861, baseType: !31, size: 16, offset: 48)
!937 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !931, file: !279, line: 862, baseType: !34, size: 32, offset: 64)
!938 = !DIDerivedType(tag: DW_TAG_member, name: "strength", scope: !931, file: !279, line: 863, baseType: !120, size: 32, offset: 96)
!939 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursor", scope: !922, file: !279, line: 874, baseType: !40, size: 64, offset: 960)
!940 = !DIDerivedType(tag: DW_TAG_member, name: "emitterdist", scope: !922, file: !279, line: 876, baseType: !120, size: 32, offset: 1024)
!941 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !922, file: !279, line: 876, baseType: !120, size: 32, offset: 1056)
!942 = !DIDerivedType(tag: DW_TAG_member, name: "selectmode", scope: !922, file: !279, line: 878, baseType: !34, size: 32, offset: 1088)
!943 = !DIDerivedType(tag: DW_TAG_member, name: "edittype", scope: !922, file: !279, line: 879, baseType: !34, size: 32, offset: 1120)
!944 = !DIDerivedType(tag: DW_TAG_member, name: "draw_step", scope: !922, file: !279, line: 881, baseType: !34, size: 32, offset: 1152)
!945 = !DIDerivedType(tag: DW_TAG_member, name: "fade_frames", scope: !922, file: !279, line: 881, baseType: !34, size: 32, offset: 1184)
!946 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !922, file: !279, line: 883, baseType: !277, size: 64, offset: 1216)
!947 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !922, file: !279, line: 884, baseType: !286, size: 64, offset: 1280)
!948 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_size", scope: !836, file: !279, line: 1107, baseType: !120, size: 32, offset: 2688)
!949 = !DIDerivedType(tag: DW_TAG_member, name: "select_thresh", scope: !836, file: !279, line: 1110, baseType: !120, size: 32, offset: 2720)
!950 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_mode", scope: !836, file: !279, line: 1113, baseType: !31, size: 16, offset: 2752)
!951 = !DIDerivedType(tag: DW_TAG_member, name: "autokey_flag", scope: !836, file: !279, line: 1113, baseType: !31, size: 16, offset: 2768)
!952 = !DIDerivedType(tag: DW_TAG_member, name: "multires_subdiv_type", scope: !836, file: !279, line: 1116, baseType: !16, size: 8, offset: 2784)
!953 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !836, file: !279, line: 1117, baseType: !320, size: 8, offset: 2792)
!954 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_resolution", scope: !836, file: !279, line: 1120, baseType: !31, size: 16, offset: 2800)
!955 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_internal", scope: !836, file: !279, line: 1121, baseType: !120, size: 32, offset: 2816)
!956 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_threshold_external", scope: !836, file: !279, line: 1122, baseType: !120, size: 32, offset: 2848)
!957 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_ratio", scope: !836, file: !279, line: 1123, baseType: !120, size: 32, offset: 2880)
!958 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_length_limit", scope: !836, file: !279, line: 1124, baseType: !120, size: 32, offset: 2912)
!959 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_angle_limit", scope: !836, file: !279, line: 1125, baseType: !120, size: 32, offset: 2944)
!960 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_correlation_limit", scope: !836, file: !279, line: 1126, baseType: !120, size: 32, offset: 2976)
!961 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_symmetry_limit", scope: !836, file: !279, line: 1127, baseType: !120, size: 32, offset: 3008)
!962 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_angle_weight", scope: !836, file: !279, line: 1128, baseType: !120, size: 32, offset: 3040)
!963 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_length_weight", scope: !836, file: !279, line: 1129, baseType: !120, size: 32, offset: 3072)
!964 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_distance_weight", scope: !836, file: !279, line: 1130, baseType: !120, size: 32, offset: 3104)
!965 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_options", scope: !836, file: !279, line: 1131, baseType: !31, size: 16, offset: 3136)
!966 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro", scope: !836, file: !279, line: 1132, baseType: !16, size: 8, offset: 3152)
!967 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_postpro_passes", scope: !836, file: !279, line: 1133, baseType: !16, size: 8, offset: 3160)
!968 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivisions", scope: !836, file: !279, line: 1134, baseType: !825, size: 24, offset: 3168)
!969 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_multi_level", scope: !836, file: !279, line: 1135, baseType: !16, size: 8, offset: 3192)
!970 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_template", scope: !836, file: !279, line: 1138, baseType: !286, size: 64, offset: 3200)
!971 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching", scope: !836, file: !279, line: 1139, baseType: !16, size: 8, offset: 3264)
!972 = !DIDerivedType(tag: DW_TAG_member, name: "bone_sketching_convert", scope: !836, file: !279, line: 1140, baseType: !16, size: 8, offset: 3272)
!973 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_subdivision_number", scope: !836, file: !279, line: 1141, baseType: !16, size: 8, offset: 3280)
!974 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_options", scope: !836, file: !279, line: 1142, baseType: !16, size: 8, offset: 3288)
!975 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_retarget_roll", scope: !836, file: !279, line: 1143, baseType: !16, size: 8, offset: 3296)
!976 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_side_string", scope: !836, file: !279, line: 1144, baseType: !977, size: 64, offset: 3304)
!977 = !DICompositeType(tag: DW_TAG_array_type, baseType: !16, size: 64, elements: !702)
!978 = !DIDerivedType(tag: DW_TAG_member, name: "skgen_num_string", scope: !836, file: !279, line: 1145, baseType: !977, size: 64, offset: 3368)
!979 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode", scope: !836, file: !279, line: 1148, baseType: !16, size: 8, offset: 3432)
!980 = !DIDerivedType(tag: DW_TAG_member, name: "edge_mode_live_unwrap", scope: !836, file: !279, line: 1149, baseType: !16, size: 8, offset: 3440)
!981 = !DIDerivedType(tag: DW_TAG_member, name: "snap_mode", scope: !836, file: !279, line: 1152, baseType: !16, size: 8, offset: 3448)
!982 = !DIDerivedType(tag: DW_TAG_member, name: "snap_node_mode", scope: !836, file: !279, line: 1152, baseType: !16, size: 8, offset: 3456)
!983 = !DIDerivedType(tag: DW_TAG_member, name: "snap_uv_mode", scope: !836, file: !279, line: 1153, baseType: !16, size: 8, offset: 3464)
!984 = !DIDerivedType(tag: DW_TAG_member, name: "snap_flag", scope: !836, file: !279, line: 1154, baseType: !31, size: 16, offset: 3472)
!985 = !DIDerivedType(tag: DW_TAG_member, name: "snap_target", scope: !836, file: !279, line: 1154, baseType: !31, size: 16, offset: 3488)
!986 = !DIDerivedType(tag: DW_TAG_member, name: "proportional", scope: !836, file: !279, line: 1155, baseType: !31, size: 16, offset: 3504)
!987 = !DIDerivedType(tag: DW_TAG_member, name: "prop_mode", scope: !836, file: !279, line: 1155, baseType: !31, size: 16, offset: 3520)
!988 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_objects", scope: !836, file: !279, line: 1156, baseType: !16, size: 8, offset: 3536)
!989 = !DIDerivedType(tag: DW_TAG_member, name: "proportional_mask", scope: !836, file: !279, line: 1157, baseType: !16, size: 8, offset: 3544)
!990 = !DIDerivedType(tag: DW_TAG_member, name: "auto_normalize", scope: !836, file: !279, line: 1159, baseType: !16, size: 8, offset: 3552)
!991 = !DIDerivedType(tag: DW_TAG_member, name: "multipaint", scope: !836, file: !279, line: 1160, baseType: !16, size: 8, offset: 3560)
!992 = !DIDerivedType(tag: DW_TAG_member, name: "weightuser", scope: !836, file: !279, line: 1161, baseType: !16, size: 8, offset: 3568)
!993 = !DIDerivedType(tag: DW_TAG_member, name: "vgroupsubset", scope: !836, file: !279, line: 1162, baseType: !16, size: 8, offset: 3576)
!994 = !DIDerivedType(tag: DW_TAG_member, name: "use_uv_sculpt", scope: !836, file: !279, line: 1165, baseType: !34, size: 32, offset: 3584)
!995 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_settings", scope: !836, file: !279, line: 1166, baseType: !34, size: 32, offset: 3616)
!996 = !DIDerivedType(tag: DW_TAG_member, name: "uv_sculpt_tool", scope: !836, file: !279, line: 1167, baseType: !34, size: 32, offset: 3648)
!997 = !DIDerivedType(tag: DW_TAG_member, name: "uv_relax_method", scope: !836, file: !279, line: 1168, baseType: !34, size: 32, offset: 3680)
!998 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_settings", scope: !836, file: !279, line: 1171, baseType: !31, size: 16, offset: 3712)
!999 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !836, file: !279, line: 1171, baseType: !31, size: 16, offset: 3728)
!1000 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_size", scope: !836, file: !279, line: 1172, baseType: !34, size: 32, offset: 3744)
!1001 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_unprojected_radius", scope: !836, file: !279, line: 1173, baseType: !120, size: 32, offset: 3776)
!1002 = !DIDerivedType(tag: DW_TAG_member, name: "sculpt_paint_unified_alpha", scope: !836, file: !279, line: 1174, baseType: !120, size: 32, offset: 3808)
!1003 = !DIDerivedType(tag: DW_TAG_member, name: "unified_paint_settings", scope: !836, file: !279, line: 1177, baseType: !1004, size: 1024, offset: 3840)
!1004 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnifiedPaintSettings", file: !279, line: 963, size: 1024, elements: !1005)
!1005 = !{!1006, !1007, !1008, !1009, !1010, !1011, !1012, !1013, !1014, !1015, !1016, !1017, !1018, !1019, !1020, !1021, !1022, !1023, !1024, !1025, !1026, !1029, !1030}
!1006 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1004, file: !279, line: 965, baseType: !34, size: 32)
!1007 = !DIDerivedType(tag: DW_TAG_member, name: "unprojected_radius", scope: !1004, file: !279, line: 968, baseType: !120, size: 32, offset: 32)
!1008 = !DIDerivedType(tag: DW_TAG_member, name: "alpha", scope: !1004, file: !279, line: 971, baseType: !120, size: 32, offset: 64)
!1009 = !DIDerivedType(tag: DW_TAG_member, name: "weight", scope: !1004, file: !279, line: 974, baseType: !120, size: 32, offset: 96)
!1010 = !DIDerivedType(tag: DW_TAG_member, name: "rgb", scope: !1004, file: !279, line: 977, baseType: !308, size: 96, offset: 128)
!1011 = !DIDerivedType(tag: DW_TAG_member, name: "secondary_rgb", scope: !1004, file: !279, line: 979, baseType: !308, size: 96, offset: 224)
!1012 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1004, file: !279, line: 982, baseType: !34, size: 32, offset: 320)
!1013 = !DIDerivedType(tag: DW_TAG_member, name: "last_rake", scope: !1004, file: !279, line: 987, baseType: !339, size: 64, offset: 352)
!1014 = !DIDerivedType(tag: DW_TAG_member, name: "brush_rotation", scope: !1004, file: !279, line: 989, baseType: !120, size: 32, offset: 416)
!1015 = !DIDerivedType(tag: DW_TAG_member, name: "draw_anchored", scope: !1004, file: !279, line: 994, baseType: !34, size: 32, offset: 448)
!1016 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_size", scope: !1004, file: !279, line: 995, baseType: !34, size: 32, offset: 480)
!1017 = !DIDerivedType(tag: DW_TAG_member, name: "draw_inverted", scope: !1004, file: !279, line: 997, baseType: !16, size: 8, offset: 512)
!1018 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1004, file: !279, line: 998, baseType: !752, size: 56, offset: 520)
!1019 = !DIDerivedType(tag: DW_TAG_member, name: "overlap_factor", scope: !1004, file: !279, line: 1000, baseType: !120, size: 32, offset: 576)
!1020 = !DIDerivedType(tag: DW_TAG_member, name: "anchored_initial_mouse", scope: !1004, file: !279, line: 1003, baseType: !339, size: 64, offset: 608)
!1021 = !DIDerivedType(tag: DW_TAG_member, name: "stroke_active", scope: !1004, file: !279, line: 1006, baseType: !34, size: 32, offset: 672)
!1022 = !DIDerivedType(tag: DW_TAG_member, name: "size_pressure_value", scope: !1004, file: !279, line: 1009, baseType: !120, size: 32, offset: 704)
!1023 = !DIDerivedType(tag: DW_TAG_member, name: "tex_mouse", scope: !1004, file: !279, line: 1012, baseType: !339, size: 64, offset: 736)
!1024 = !DIDerivedType(tag: DW_TAG_member, name: "mask_tex_mouse", scope: !1004, file: !279, line: 1015, baseType: !339, size: 64, offset: 800)
!1025 = !DIDerivedType(tag: DW_TAG_member, name: "do_linear_conversion", scope: !1004, file: !279, line: 1018, baseType: !34, size: 32, offset: 864)
!1026 = !DIDerivedType(tag: DW_TAG_member, name: "colorspace", scope: !1004, file: !279, line: 1019, baseType: !1027, size: 64, offset: 896)
!1027 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1028, size: 64)
!1028 = !DICompositeType(tag: DW_TAG_structure_type, name: "ColorSpace", file: !279, line: 63, flags: DIFlagFwdDecl)
!1029 = !DIDerivedType(tag: DW_TAG_member, name: "pixel_radius", scope: !1004, file: !279, line: 1023, baseType: !120, size: 32, offset: 960)
!1030 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1004, file: !279, line: 1024, baseType: !34, size: 32, offset: 992)
!1031 = !DIDerivedType(tag: DW_TAG_member, name: "statvis", scope: !836, file: !279, line: 1179, baseType: !1032, size: 320, offset: 4864)
!1032 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "MeshStatVis", file: !279, line: 1043, size: 320, elements: !1033)
!1033 = !{!1034, !1035, !1037, !1038, !1039, !1040, !1041, !1042, !1043, !1044, !1045, !1046, !1047}
!1034 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1032, file: !279, line: 1044, baseType: !16, size: 8)
!1035 = !DIDerivedType(tag: DW_TAG_member, name: "_pad1", scope: !1032, file: !279, line: 1045, baseType: !1036, size: 16, offset: 8)
!1036 = !DICompositeType(tag: DW_TAG_array_type, baseType: !16, size: 16, elements: !91)
!1037 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_axis", scope: !1032, file: !279, line: 1048, baseType: !16, size: 8, offset: 24)
!1038 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_min", scope: !1032, file: !279, line: 1049, baseType: !120, size: 32, offset: 32)
!1039 = !DIDerivedType(tag: DW_TAG_member, name: "overhang_max", scope: !1032, file: !279, line: 1049, baseType: !120, size: 32, offset: 64)
!1040 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_min", scope: !1032, file: !279, line: 1052, baseType: !120, size: 32, offset: 96)
!1041 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_max", scope: !1032, file: !279, line: 1052, baseType: !120, size: 32, offset: 128)
!1042 = !DIDerivedType(tag: DW_TAG_member, name: "thickness_samples", scope: !1032, file: !279, line: 1053, baseType: !16, size: 8, offset: 160)
!1043 = !DIDerivedType(tag: DW_TAG_member, name: "_pad2", scope: !1032, file: !279, line: 1054, baseType: !825, size: 24, offset: 168)
!1044 = !DIDerivedType(tag: DW_TAG_member, name: "distort_min", scope: !1032, file: !279, line: 1057, baseType: !120, size: 32, offset: 192)
!1045 = !DIDerivedType(tag: DW_TAG_member, name: "distort_max", scope: !1032, file: !279, line: 1057, baseType: !120, size: 32, offset: 224)
!1046 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_min", scope: !1032, file: !279, line: 1060, baseType: !120, size: 32, offset: 256)
!1047 = !DIDerivedType(tag: DW_TAG_member, name: "sharp_max", scope: !1032, file: !279, line: 1060, baseType: !120, size: 32, offset: 288)
!1048 = !DIDerivedType(tag: DW_TAG_member, name: "stats", scope: !278, file: !279, line: 1247, baseType: !1049, size: 64, offset: 2176)
!1049 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1050, size: 64)
!1050 = !DICompositeType(tag: DW_TAG_structure_type, name: "SceneStats", file: !279, line: 60, flags: DIFlagFwdDecl)
!1051 = !DIDerivedType(tag: DW_TAG_member, name: "r", scope: !278, file: !279, line: 1251, baseType: !1052, size: 31872, offset: 2240)
!1052 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RenderData", file: !279, line: 403, size: 31872, elements: !1053)
!1053 = !{!1054, !1126, !1146, !1155, !1175, !1195, !1196, !1197, !1198, !1199, !1200, !1201, !1202, !1203, !1204, !1205, !1206, !1207, !1208, !1209, !1210, !1211, !1212, !1213, !1214, !1215, !1216, !1217, !1218, !1219, !1220, !1221, !1222, !1223, !1224, !1225, !1226, !1227, !1228, !1229, !1230, !1231, !1232, !1233, !1234, !1235, !1236, !1237, !1238, !1239, !1240, !1241, !1242, !1243, !1244, !1245, !1246, !1247, !1248, !1249, !1257, !1258, !1259, !1260, !1261, !1262, !1263, !1264, !1265, !1266, !1267, !1268, !1269, !1270, !1271, !1272, !1273, !1274, !1275, !1276, !1277, !1278, !1279, !1280, !1281, !1282, !1283, !1284, !1285, !1286, !1287, !1288, !1289, !1290, !1291, !1292, !1293, !1294, !1295, !1296, !1297, !1298, !1299, !1300, !1301, !1302, !1303, !1304, !1305, !1306, !1307, !1308, !1309, !1313, !1314, !1315, !1319, !1335, !1336}
!1054 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !1052, file: !279, line: 404, baseType: !1055, size: 1984)
!1055 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ImageFormatData", file: !279, line: 259, size: 1984, elements: !1056)
!1056 = !{!1057, !1058, !1059, !1060, !1061, !1062, !1063, !1064, !1065, !1066, !1067, !1068, !1069, !1070, !1071, !1121}
!1057 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !1055, file: !279, line: 260, baseType: !16, size: 8)
!1058 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1055, file: !279, line: 263, baseType: !16, size: 8, offset: 8)
!1059 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1055, file: !279, line: 266, baseType: !16, size: 8, offset: 16)
!1060 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1055, file: !279, line: 267, baseType: !16, size: 8, offset: 24)
!1061 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1055, file: !279, line: 269, baseType: !16, size: 8, offset: 32)
!1062 = !DIDerivedType(tag: DW_TAG_member, name: "compress", scope: !1055, file: !279, line: 270, baseType: !16, size: 8, offset: 40)
!1063 = !DIDerivedType(tag: DW_TAG_member, name: "exr_codec", scope: !1055, file: !279, line: 276, baseType: !16, size: 8, offset: 48)
!1064 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_flag", scope: !1055, file: !279, line: 279, baseType: !16, size: 8, offset: 56)
!1065 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_white", scope: !1055, file: !279, line: 280, baseType: !31, size: 16, offset: 64)
!1066 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_black", scope: !1055, file: !279, line: 280, baseType: !31, size: 16, offset: 80)
!1067 = !DIDerivedType(tag: DW_TAG_member, name: "cineon_gamma", scope: !1055, file: !279, line: 281, baseType: !120, size: 32, offset: 96)
!1068 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_flag", scope: !1055, file: !279, line: 284, baseType: !16, size: 8, offset: 128)
!1069 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_codec", scope: !1055, file: !279, line: 285, baseType: !16, size: 8, offset: 136)
!1070 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1055, file: !279, line: 287, baseType: !94, size: 48, offset: 144)
!1071 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !1055, file: !279, line: 290, baseType: !1072, size: 1280, offset: 192)
!1072 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedViewSettings", file: !504, line: 174, baseType: !1073)
!1073 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedViewSettings", file: !504, line: 166, size: 1280, elements: !1074)
!1074 = !{!1075, !1076, !1077, !1078, !1079, !1080, !1081, !1120}
!1075 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1073, file: !504, line: 167, baseType: !34, size: 32)
!1076 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1073, file: !504, line: 167, baseType: !34, size: 32, offset: 32)
!1077 = !DIDerivedType(tag: DW_TAG_member, name: "look", scope: !1073, file: !504, line: 168, baseType: !15, size: 512, offset: 64)
!1078 = !DIDerivedType(tag: DW_TAG_member, name: "view_transform", scope: !1073, file: !504, line: 169, baseType: !15, size: 512, offset: 576)
!1079 = !DIDerivedType(tag: DW_TAG_member, name: "exposure", scope: !1073, file: !504, line: 170, baseType: !120, size: 32, offset: 1088)
!1080 = !DIDerivedType(tag: DW_TAG_member, name: "gamma", scope: !1073, file: !504, line: 171, baseType: !120, size: 32, offset: 1120)
!1081 = !DIDerivedType(tag: DW_TAG_member, name: "curve_mapping", scope: !1073, file: !504, line: 172, baseType: !1082, size: 64, offset: 1152)
!1082 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1083, size: 64)
!1083 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapping", file: !504, line: 72, size: 3072, elements: !1084)
!1084 = !{!1085, !1086, !1087, !1088, !1089, !1090, !1091, !1116, !1117, !1118, !1119}
!1085 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1083, file: !504, line: 73, baseType: !34, size: 32)
!1086 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !1083, file: !504, line: 73, baseType: !34, size: 32, offset: 32)
!1087 = !DIDerivedType(tag: DW_TAG_member, name: "preset", scope: !1083, file: !504, line: 74, baseType: !34, size: 32, offset: 64)
!1088 = !DIDerivedType(tag: DW_TAG_member, name: "changed_timestamp", scope: !1083, file: !504, line: 75, baseType: !34, size: 32, offset: 96)
!1089 = !DIDerivedType(tag: DW_TAG_member, name: "curr", scope: !1083, file: !504, line: 77, baseType: !355, size: 128, offset: 128)
!1090 = !DIDerivedType(tag: DW_TAG_member, name: "clipr", scope: !1083, file: !504, line: 77, baseType: !355, size: 128, offset: 256)
!1091 = !DIDerivedType(tag: DW_TAG_member, name: "cm", scope: !1083, file: !504, line: 79, baseType: !1092, size: 2304, offset: 384)
!1092 = !DICompositeType(tag: DW_TAG_array_type, baseType: !1093, size: 2304, elements: !746)
!1093 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMap", file: !504, line: 67, baseType: !1094)
!1094 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMap", file: !504, line: 55, size: 576, elements: !1095)
!1095 = !{!1096, !1097, !1098, !1099, !1100, !1101, !1102, !1103, !1112, !1113, !1114, !1115}
!1096 = !DIDerivedType(tag: DW_TAG_member, name: "totpoint", scope: !1094, file: !504, line: 56, baseType: !31, size: 16)
!1097 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1094, file: !504, line: 56, baseType: !31, size: 16, offset: 16)
!1098 = !DIDerivedType(tag: DW_TAG_member, name: "range", scope: !1094, file: !504, line: 58, baseType: !120, size: 32, offset: 32)
!1099 = !DIDerivedType(tag: DW_TAG_member, name: "mintable", scope: !1094, file: !504, line: 59, baseType: !120, size: 32, offset: 64)
!1100 = !DIDerivedType(tag: DW_TAG_member, name: "maxtable", scope: !1094, file: !504, line: 59, baseType: !120, size: 32, offset: 96)
!1101 = !DIDerivedType(tag: DW_TAG_member, name: "ext_in", scope: !1094, file: !504, line: 60, baseType: !339, size: 64, offset: 128)
!1102 = !DIDerivedType(tag: DW_TAG_member, name: "ext_out", scope: !1094, file: !504, line: 60, baseType: !339, size: 64, offset: 192)
!1103 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !1094, file: !504, line: 61, baseType: !1104, size: 64, offset: 256)
!1104 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1105, size: 64)
!1105 = !DIDerivedType(tag: DW_TAG_typedef, name: "CurveMapPoint", file: !504, line: 47, baseType: !1106)
!1106 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CurveMapPoint", file: !504, line: 44, size: 96, elements: !1107)
!1107 = !{!1108, !1109, !1110, !1111}
!1108 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !1106, file: !504, line: 45, baseType: !120, size: 32)
!1109 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !1106, file: !504, line: 45, baseType: !120, size: 32, offset: 32)
!1110 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1106, file: !504, line: 46, baseType: !31, size: 16, offset: 64)
!1111 = !DIDerivedType(tag: DW_TAG_member, name: "shorty", scope: !1106, file: !504, line: 46, baseType: !31, size: 16, offset: 80)
!1112 = !DIDerivedType(tag: DW_TAG_member, name: "table", scope: !1094, file: !504, line: 62, baseType: !1104, size: 64, offset: 320)
!1113 = !DIDerivedType(tag: DW_TAG_member, name: "premultable", scope: !1094, file: !504, line: 64, baseType: !1104, size: 64, offset: 384)
!1114 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_in", scope: !1094, file: !504, line: 65, baseType: !339, size: 64, offset: 448)
!1115 = !DIDerivedType(tag: DW_TAG_member, name: "premul_ext_out", scope: !1094, file: !504, line: 66, baseType: !339, size: 64, offset: 512)
!1116 = !DIDerivedType(tag: DW_TAG_member, name: "black", scope: !1083, file: !504, line: 80, baseType: !308, size: 96, offset: 2688)
!1117 = !DIDerivedType(tag: DW_TAG_member, name: "white", scope: !1083, file: !504, line: 80, baseType: !308, size: 96, offset: 2784)
!1118 = !DIDerivedType(tag: DW_TAG_member, name: "bwmul", scope: !1083, file: !504, line: 81, baseType: !308, size: 96, offset: 2880)
!1119 = !DIDerivedType(tag: DW_TAG_member, name: "sample", scope: !1083, file: !504, line: 83, baseType: !308, size: 96, offset: 2976)
!1120 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1073, file: !504, line: 173, baseType: !40, size: 64, offset: 1216)
!1121 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !1055, file: !279, line: 291, baseType: !1122, size: 512, offset: 1472)
!1122 = !DIDerivedType(tag: DW_TAG_typedef, name: "ColorManagedDisplaySettings", file: !504, line: 178, baseType: !1123)
!1123 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ColorManagedDisplaySettings", file: !504, line: 176, size: 512, elements: !1124)
!1124 = !{!1125}
!1125 = !DIDerivedType(tag: DW_TAG_member, name: "display_device", scope: !1123, file: !504, line: 177, baseType: !15, size: 512)
!1126 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecdata", scope: !1052, file: !279, line: 406, baseType: !1127, size: 64, offset: 1984)
!1127 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1128, size: 64)
!1128 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AviCodecData", file: !279, line: 80, size: 1472, elements: !1129)
!1129 = !{!1130, !1131, !1132, !1133, !1134, !1135, !1136, !1137, !1138, !1139, !1140, !1141, !1142}
!1130 = !DIDerivedType(tag: DW_TAG_member, name: "lpFormat", scope: !1128, file: !279, line: 81, baseType: !40, size: 64)
!1131 = !DIDerivedType(tag: DW_TAG_member, name: "lpParms", scope: !1128, file: !279, line: 82, baseType: !40, size: 64, offset: 64)
!1132 = !DIDerivedType(tag: DW_TAG_member, name: "cbFormat", scope: !1128, file: !279, line: 83, baseType: !300, size: 32, offset: 128)
!1133 = !DIDerivedType(tag: DW_TAG_member, name: "cbParms", scope: !1128, file: !279, line: 84, baseType: !300, size: 32, offset: 160)
!1134 = !DIDerivedType(tag: DW_TAG_member, name: "fccType", scope: !1128, file: !279, line: 86, baseType: !300, size: 32, offset: 192)
!1135 = !DIDerivedType(tag: DW_TAG_member, name: "fccHandler", scope: !1128, file: !279, line: 87, baseType: !300, size: 32, offset: 224)
!1136 = !DIDerivedType(tag: DW_TAG_member, name: "dwKeyFrameEvery", scope: !1128, file: !279, line: 88, baseType: !300, size: 32, offset: 256)
!1137 = !DIDerivedType(tag: DW_TAG_member, name: "dwQuality", scope: !1128, file: !279, line: 89, baseType: !300, size: 32, offset: 288)
!1138 = !DIDerivedType(tag: DW_TAG_member, name: "dwBytesPerSecond", scope: !1128, file: !279, line: 90, baseType: !300, size: 32, offset: 320)
!1139 = !DIDerivedType(tag: DW_TAG_member, name: "dwFlags", scope: !1128, file: !279, line: 91, baseType: !300, size: 32, offset: 352)
!1140 = !DIDerivedType(tag: DW_TAG_member, name: "dwInterleaveEvery", scope: !1128, file: !279, line: 92, baseType: !300, size: 32, offset: 384)
!1141 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1128, file: !279, line: 93, baseType: !300, size: 32, offset: 416)
!1142 = !DIDerivedType(tag: DW_TAG_member, name: "avicodecname", scope: !1128, file: !279, line: 95, baseType: !1143, size: 1024, offset: 448)
!1143 = !DICompositeType(tag: DW_TAG_array_type, baseType: !16, size: 1024, elements: !1144)
!1144 = !{!1145}
!1145 = !DISubrange(count: 128)
!1146 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecdata", scope: !1052, file: !279, line: 407, baseType: !1147, size: 64, offset: 2048)
!1147 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1148, size: 64)
!1148 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecData", file: !279, line: 98, size: 1216, elements: !1149)
!1149 = !{!1150, !1151, !1152, !1153, !1154}
!1150 = !DIDerivedType(tag: DW_TAG_member, name: "cdParms", scope: !1148, file: !279, line: 100, baseType: !40, size: 64)
!1151 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1148, file: !279, line: 101, baseType: !40, size: 64, offset: 64)
!1152 = !DIDerivedType(tag: DW_TAG_member, name: "cdSize", scope: !1148, file: !279, line: 103, baseType: !300, size: 32, offset: 128)
!1153 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1148, file: !279, line: 104, baseType: !300, size: 32, offset: 160)
!1154 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecname", scope: !1148, file: !279, line: 106, baseType: !1143, size: 1024, offset: 192)
!1155 = !DIDerivedType(tag: DW_TAG_member, name: "qtcodecsettings", scope: !1052, file: !279, line: 408, baseType: !1156, size: 512, offset: 2112)
!1156 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "QuicktimeCodecSettings", file: !279, line: 109, size: 512, elements: !1157)
!1157 = !{!1158, !1159, !1160, !1161, !1162, !1163, !1164, !1165, !1166, !1167, !1168, !1169, !1170, !1171, !1172, !1173, !1174}
!1158 = !DIDerivedType(tag: DW_TAG_member, name: "codecType", scope: !1156, file: !279, line: 111, baseType: !34, size: 32)
!1159 = !DIDerivedType(tag: DW_TAG_member, name: "codecSpatialQuality", scope: !1156, file: !279, line: 112, baseType: !34, size: 32, offset: 32)
!1160 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1156, file: !279, line: 115, baseType: !34, size: 32, offset: 64)
!1161 = !DIDerivedType(tag: DW_TAG_member, name: "codecFlags", scope: !1156, file: !279, line: 116, baseType: !34, size: 32, offset: 96)
!1162 = !DIDerivedType(tag: DW_TAG_member, name: "colorDepth", scope: !1156, file: !279, line: 117, baseType: !34, size: 32, offset: 128)
!1163 = !DIDerivedType(tag: DW_TAG_member, name: "codecTemporalQuality", scope: !1156, file: !279, line: 118, baseType: !34, size: 32, offset: 160)
!1164 = !DIDerivedType(tag: DW_TAG_member, name: "minSpatialQuality", scope: !1156, file: !279, line: 119, baseType: !34, size: 32, offset: 192)
!1165 = !DIDerivedType(tag: DW_TAG_member, name: "minTemporalQuality", scope: !1156, file: !279, line: 120, baseType: !34, size: 32, offset: 224)
!1166 = !DIDerivedType(tag: DW_TAG_member, name: "keyFrameRate", scope: !1156, file: !279, line: 121, baseType: !34, size: 32, offset: 256)
!1167 = !DIDerivedType(tag: DW_TAG_member, name: "bitRate", scope: !1156, file: !279, line: 122, baseType: !34, size: 32, offset: 288)
!1168 = !DIDerivedType(tag: DW_TAG_member, name: "audiocodecType", scope: !1156, file: !279, line: 125, baseType: !34, size: 32, offset: 320)
!1169 = !DIDerivedType(tag: DW_TAG_member, name: "audioSampleRate", scope: !1156, file: !279, line: 126, baseType: !34, size: 32, offset: 352)
!1170 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitDepth", scope: !1156, file: !279, line: 127, baseType: !31, size: 16, offset: 384)
!1171 = !DIDerivedType(tag: DW_TAG_member, name: "audioChannels", scope: !1156, file: !279, line: 128, baseType: !31, size: 16, offset: 400)
!1172 = !DIDerivedType(tag: DW_TAG_member, name: "audioCodecFlags", scope: !1156, file: !279, line: 129, baseType: !34, size: 32, offset: 416)
!1173 = !DIDerivedType(tag: DW_TAG_member, name: "audioBitRate", scope: !1156, file: !279, line: 130, baseType: !34, size: 32, offset: 448)
!1174 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1156, file: !279, line: 131, baseType: !34, size: 32, offset: 480)
!1175 = !DIDerivedType(tag: DW_TAG_member, name: "ffcodecdata", scope: !1052, file: !279, line: 409, baseType: !1176, size: 576, offset: 2624)
!1176 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FFMpegCodecData", file: !279, line: 134, size: 576, elements: !1177)
!1177 = !{!1178, !1179, !1180, !1181, !1182, !1183, !1184, !1185, !1186, !1187, !1188, !1189, !1190, !1191, !1192, !1193, !1194}
!1178 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1176, file: !279, line: 135, baseType: !34, size: 32)
!1179 = !DIDerivedType(tag: DW_TAG_member, name: "codec", scope: !1176, file: !279, line: 136, baseType: !34, size: 32, offset: 32)
!1180 = !DIDerivedType(tag: DW_TAG_member, name: "audio_codec", scope: !1176, file: !279, line: 137, baseType: !34, size: 32, offset: 64)
!1181 = !DIDerivedType(tag: DW_TAG_member, name: "video_bitrate", scope: !1176, file: !279, line: 138, baseType: !34, size: 32, offset: 96)
!1182 = !DIDerivedType(tag: DW_TAG_member, name: "audio_bitrate", scope: !1176, file: !279, line: 139, baseType: !34, size: 32, offset: 128)
!1183 = !DIDerivedType(tag: DW_TAG_member, name: "audio_mixrate", scope: !1176, file: !279, line: 140, baseType: !34, size: 32, offset: 160)
!1184 = !DIDerivedType(tag: DW_TAG_member, name: "audio_channels", scope: !1176, file: !279, line: 141, baseType: !34, size: 32, offset: 192)
!1185 = !DIDerivedType(tag: DW_TAG_member, name: "audio_pad", scope: !1176, file: !279, line: 142, baseType: !34, size: 32, offset: 224)
!1186 = !DIDerivedType(tag: DW_TAG_member, name: "audio_volume", scope: !1176, file: !279, line: 143, baseType: !120, size: 32, offset: 256)
!1187 = !DIDerivedType(tag: DW_TAG_member, name: "gop_size", scope: !1176, file: !279, line: 144, baseType: !34, size: 32, offset: 288)
!1188 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !1176, file: !279, line: 145, baseType: !34, size: 32, offset: 320)
!1189 = !DIDerivedType(tag: DW_TAG_member, name: "rc_min_rate", scope: !1176, file: !279, line: 147, baseType: !34, size: 32, offset: 352)
!1190 = !DIDerivedType(tag: DW_TAG_member, name: "rc_max_rate", scope: !1176, file: !279, line: 148, baseType: !34, size: 32, offset: 384)
!1191 = !DIDerivedType(tag: DW_TAG_member, name: "rc_buffer_size", scope: !1176, file: !279, line: 149, baseType: !34, size: 32, offset: 416)
!1192 = !DIDerivedType(tag: DW_TAG_member, name: "mux_packet_size", scope: !1176, file: !279, line: 150, baseType: !34, size: 32, offset: 448)
!1193 = !DIDerivedType(tag: DW_TAG_member, name: "mux_rate", scope: !1176, file: !279, line: 151, baseType: !34, size: 32, offset: 480)
!1194 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !1176, file: !279, line: 152, baseType: !20, size: 64, offset: 512)
!1195 = !DIDerivedType(tag: DW_TAG_member, name: "cfra", scope: !1052, file: !279, line: 411, baseType: !34, size: 32, offset: 3200)
!1196 = !DIDerivedType(tag: DW_TAG_member, name: "sfra", scope: !1052, file: !279, line: 411, baseType: !34, size: 32, offset: 3232)
!1197 = !DIDerivedType(tag: DW_TAG_member, name: "efra", scope: !1052, file: !279, line: 411, baseType: !34, size: 32, offset: 3264)
!1198 = !DIDerivedType(tag: DW_TAG_member, name: "subframe", scope: !1052, file: !279, line: 412, baseType: !120, size: 32, offset: 3296)
!1199 = !DIDerivedType(tag: DW_TAG_member, name: "psfra", scope: !1052, file: !279, line: 413, baseType: !34, size: 32, offset: 3328)
!1200 = !DIDerivedType(tag: DW_TAG_member, name: "pefra", scope: !1052, file: !279, line: 413, baseType: !34, size: 32, offset: 3360)
!1201 = !DIDerivedType(tag: DW_TAG_member, name: "images", scope: !1052, file: !279, line: 415, baseType: !34, size: 32, offset: 3392)
!1202 = !DIDerivedType(tag: DW_TAG_member, name: "framapto", scope: !1052, file: !279, line: 415, baseType: !34, size: 32, offset: 3424)
!1203 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1052, file: !279, line: 416, baseType: !31, size: 16, offset: 3456)
!1204 = !DIDerivedType(tag: DW_TAG_member, name: "threads", scope: !1052, file: !279, line: 416, baseType: !31, size: 16, offset: 3472)
!1205 = !DIDerivedType(tag: DW_TAG_member, name: "framelen", scope: !1052, file: !279, line: 418, baseType: !120, size: 32, offset: 3488)
!1206 = !DIDerivedType(tag: DW_TAG_member, name: "blurfac", scope: !1052, file: !279, line: 418, baseType: !120, size: 32, offset: 3520)
!1207 = !DIDerivedType(tag: DW_TAG_member, name: "edgeR", scope: !1052, file: !279, line: 421, baseType: !120, size: 32, offset: 3552)
!1208 = !DIDerivedType(tag: DW_TAG_member, name: "edgeG", scope: !1052, file: !279, line: 421, baseType: !120, size: 32, offset: 3584)
!1209 = !DIDerivedType(tag: DW_TAG_member, name: "edgeB", scope: !1052, file: !279, line: 421, baseType: !120, size: 32, offset: 3616)
!1210 = !DIDerivedType(tag: DW_TAG_member, name: "fullscreen", scope: !1052, file: !279, line: 425, baseType: !31, size: 16, offset: 3648)
!1211 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !1052, file: !279, line: 425, baseType: !31, size: 16, offset: 3664)
!1212 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !1052, file: !279, line: 425, baseType: !31, size: 16, offset: 3680)
!1213 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !1052, file: !279, line: 426, baseType: !31, size: 16, offset: 3696)
!1214 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1052, file: !279, line: 428, baseType: !31, size: 16, offset: 3712)
!1215 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !1052, file: !279, line: 428, baseType: !31, size: 16, offset: 3728)
!1216 = !DIDerivedType(tag: DW_TAG_member, name: "frame_step", scope: !1052, file: !279, line: 431, baseType: !34, size: 32, offset: 3744)
!1217 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !1052, file: !279, line: 433, baseType: !31, size: 16, offset: 3776)
!1218 = !DIDerivedType(tag: DW_TAG_member, name: "dimensionspreset", scope: !1052, file: !279, line: 435, baseType: !31, size: 16, offset: 3792)
!1219 = !DIDerivedType(tag: DW_TAG_member, name: "filtertype", scope: !1052, file: !279, line: 437, baseType: !31, size: 16, offset: 3808)
!1220 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1052, file: !279, line: 439, baseType: !31, size: 16, offset: 3824)
!1221 = !DIDerivedType(tag: DW_TAG_member, name: "maximsize", scope: !1052, file: !279, line: 441, baseType: !31, size: 16, offset: 3840)
!1222 = !DIDerivedType(tag: DW_TAG_member, name: "pad6", scope: !1052, file: !279, line: 443, baseType: !31, size: 16, offset: 3856)
!1223 = !DIDerivedType(tag: DW_TAG_member, name: "xsch", scope: !1052, file: !279, line: 449, baseType: !34, size: 32, offset: 3872)
!1224 = !DIDerivedType(tag: DW_TAG_member, name: "ysch", scope: !1052, file: !279, line: 453, baseType: !34, size: 32, offset: 3904)
!1225 = !DIDerivedType(tag: DW_TAG_member, name: "xparts", scope: !1052, file: !279, line: 458, baseType: !31, size: 16, offset: 3936)
!1226 = !DIDerivedType(tag: DW_TAG_member, name: "yparts", scope: !1052, file: !279, line: 462, baseType: !31, size: 16, offset: 3952)
!1227 = !DIDerivedType(tag: DW_TAG_member, name: "tilex", scope: !1052, file: !279, line: 467, baseType: !34, size: 32, offset: 3968)
!1228 = !DIDerivedType(tag: DW_TAG_member, name: "tiley", scope: !1052, file: !279, line: 467, baseType: !34, size: 32, offset: 4000)
!1229 = !DIDerivedType(tag: DW_TAG_member, name: "planes", scope: !1052, file: !279, line: 469, baseType: !31, size: 16, offset: 4032)
!1230 = !DIDerivedType(tag: DW_TAG_member, name: "imtype", scope: !1052, file: !279, line: 469, baseType: !31, size: 16, offset: 4048)
!1231 = !DIDerivedType(tag: DW_TAG_member, name: "subimtype", scope: !1052, file: !279, line: 469, baseType: !31, size: 16, offset: 4064)
!1232 = !DIDerivedType(tag: DW_TAG_member, name: "quality", scope: !1052, file: !279, line: 469, baseType: !31, size: 16, offset: 4080)
!1233 = !DIDerivedType(tag: DW_TAG_member, name: "displaymode", scope: !1052, file: !279, line: 474, baseType: !31, size: 16, offset: 4096)
!1234 = !DIDerivedType(tag: DW_TAG_member, name: "use_lock_interface", scope: !1052, file: !279, line: 475, baseType: !16, size: 8, offset: 4112)
!1235 = !DIDerivedType(tag: DW_TAG_member, name: "pad7", scope: !1052, file: !279, line: 476, baseType: !16, size: 8, offset: 4120)
!1236 = !DIDerivedType(tag: DW_TAG_member, name: "scemode", scope: !1052, file: !279, line: 481, baseType: !34, size: 32, offset: 4128)
!1237 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1052, file: !279, line: 486, baseType: !34, size: 32, offset: 4160)
!1238 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_options", scope: !1052, file: !279, line: 491, baseType: !34, size: 32, offset: 4192)
!1239 = !DIDerivedType(tag: DW_TAG_member, name: "raytrace_structure", scope: !1052, file: !279, line: 496, baseType: !31, size: 16, offset: 4224)
!1240 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1052, file: !279, line: 498, baseType: !31, size: 16, offset: 4240)
!1241 = !DIDerivedType(tag: DW_TAG_member, name: "ocres", scope: !1052, file: !279, line: 501, baseType: !31, size: 16, offset: 4256)
!1242 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1052, file: !279, line: 502, baseType: !31, size: 16, offset: 4272)
!1243 = !DIDerivedType(tag: DW_TAG_member, name: "alphamode", scope: !1052, file: !279, line: 508, baseType: !31, size: 16, offset: 4288)
!1244 = !DIDerivedType(tag: DW_TAG_member, name: "osa", scope: !1052, file: !279, line: 513, baseType: !31, size: 16, offset: 4304)
!1245 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec", scope: !1052, file: !279, line: 515, baseType: !31, size: 16, offset: 4320)
!1246 = !DIDerivedType(tag: DW_TAG_member, name: "edgeint", scope: !1052, file: !279, line: 515, baseType: !31, size: 16, offset: 4336)
!1247 = !DIDerivedType(tag: DW_TAG_member, name: "safety", scope: !1052, file: !279, line: 519, baseType: !355, size: 128, offset: 4352)
!1248 = !DIDerivedType(tag: DW_TAG_member, name: "border", scope: !1052, file: !279, line: 519, baseType: !355, size: 128, offset: 4480)
!1249 = !DIDerivedType(tag: DW_TAG_member, name: "disprect", scope: !1052, file: !279, line: 520, baseType: !1250, size: 128, offset: 4608)
!1250 = !DIDerivedType(tag: DW_TAG_typedef, name: "rcti", file: !356, line: 89, baseType: !1251)
!1251 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "rcti", file: !356, line: 86, size: 128, elements: !1252)
!1252 = !{!1253, !1254, !1255, !1256}
!1253 = !DIDerivedType(tag: DW_TAG_member, name: "xmin", scope: !1251, file: !356, line: 87, baseType: !34, size: 32)
!1254 = !DIDerivedType(tag: DW_TAG_member, name: "xmax", scope: !1251, file: !356, line: 87, baseType: !34, size: 32, offset: 32)
!1255 = !DIDerivedType(tag: DW_TAG_member, name: "ymin", scope: !1251, file: !356, line: 88, baseType: !34, size: 32, offset: 64)
!1256 = !DIDerivedType(tag: DW_TAG_member, name: "ymax", scope: !1251, file: !356, line: 88, baseType: !34, size: 32, offset: 96)
!1257 = !DIDerivedType(tag: DW_TAG_member, name: "layers", scope: !1052, file: !279, line: 523, baseType: !42, size: 128, offset: 4736)
!1258 = !DIDerivedType(tag: DW_TAG_member, name: "actlay", scope: !1052, file: !279, line: 524, baseType: !31, size: 16, offset: 4864)
!1259 = !DIDerivedType(tag: DW_TAG_member, name: "mblur_samples", scope: !1052, file: !279, line: 527, baseType: !31, size: 16, offset: 4880)
!1260 = !DIDerivedType(tag: DW_TAG_member, name: "xasp", scope: !1052, file: !279, line: 532, baseType: !120, size: 32, offset: 4896)
!1261 = !DIDerivedType(tag: DW_TAG_member, name: "yasp", scope: !1052, file: !279, line: 532, baseType: !120, size: 32, offset: 4928)
!1262 = !DIDerivedType(tag: DW_TAG_member, name: "frs_sec_base", scope: !1052, file: !279, line: 534, baseType: !120, size: 32, offset: 4960)
!1263 = !DIDerivedType(tag: DW_TAG_member, name: "gauss", scope: !1052, file: !279, line: 538, baseType: !120, size: 32, offset: 4992)
!1264 = !DIDerivedType(tag: DW_TAG_member, name: "color_mgt_flag", scope: !1052, file: !279, line: 542, baseType: !34, size: 32, offset: 5024)
!1265 = !DIDerivedType(tag: DW_TAG_member, name: "postgamma", scope: !1052, file: !279, line: 545, baseType: !120, size: 32, offset: 5056)
!1266 = !DIDerivedType(tag: DW_TAG_member, name: "posthue", scope: !1052, file: !279, line: 545, baseType: !120, size: 32, offset: 5088)
!1267 = !DIDerivedType(tag: DW_TAG_member, name: "postsat", scope: !1052, file: !279, line: 545, baseType: !120, size: 32, offset: 5120)
!1268 = !DIDerivedType(tag: DW_TAG_member, name: "dither_intensity", scope: !1052, file: !279, line: 548, baseType: !120, size: 32, offset: 5152)
!1269 = !DIDerivedType(tag: DW_TAG_member, name: "bake_osa", scope: !1052, file: !279, line: 551, baseType: !31, size: 16, offset: 5184)
!1270 = !DIDerivedType(tag: DW_TAG_member, name: "bake_filter", scope: !1052, file: !279, line: 551, baseType: !31, size: 16, offset: 5200)
!1271 = !DIDerivedType(tag: DW_TAG_member, name: "bake_mode", scope: !1052, file: !279, line: 551, baseType: !31, size: 16, offset: 5216)
!1272 = !DIDerivedType(tag: DW_TAG_member, name: "bake_flag", scope: !1052, file: !279, line: 551, baseType: !31, size: 16, offset: 5232)
!1273 = !DIDerivedType(tag: DW_TAG_member, name: "bake_normal_space", scope: !1052, file: !279, line: 552, baseType: !31, size: 16, offset: 5248)
!1274 = !DIDerivedType(tag: DW_TAG_member, name: "bake_quad_split", scope: !1052, file: !279, line: 552, baseType: !31, size: 16, offset: 5264)
!1275 = !DIDerivedType(tag: DW_TAG_member, name: "bake_maxdist", scope: !1052, file: !279, line: 553, baseType: !120, size: 32, offset: 5280)
!1276 = !DIDerivedType(tag: DW_TAG_member, name: "bake_biasdist", scope: !1052, file: !279, line: 553, baseType: !120, size: 32, offset: 5312)
!1277 = !DIDerivedType(tag: DW_TAG_member, name: "bake_samples", scope: !1052, file: !279, line: 554, baseType: !31, size: 16, offset: 5344)
!1278 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad", scope: !1052, file: !279, line: 554, baseType: !31, size: 16, offset: 5360)
!1279 = !DIDerivedType(tag: DW_TAG_member, name: "bake_user_scale", scope: !1052, file: !279, line: 555, baseType: !120, size: 32, offset: 5376)
!1280 = !DIDerivedType(tag: DW_TAG_member, name: "bake_pad1", scope: !1052, file: !279, line: 555, baseType: !120, size: 32, offset: 5408)
!1281 = !DIDerivedType(tag: DW_TAG_member, name: "pic", scope: !1052, file: !279, line: 558, baseType: !255, size: 8192, offset: 5440)
!1282 = !DIDerivedType(tag: DW_TAG_member, name: "stamp", scope: !1052, file: !279, line: 561, baseType: !34, size: 32, offset: 13632)
!1283 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_font_id", scope: !1052, file: !279, line: 562, baseType: !31, size: 16, offset: 13664)
!1284 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1052, file: !279, line: 562, baseType: !31, size: 16, offset: 13680)
!1285 = !DIDerivedType(tag: DW_TAG_member, name: "stamp_udata", scope: !1052, file: !279, line: 565, baseType: !458, size: 6144, offset: 13696)
!1286 = !DIDerivedType(tag: DW_TAG_member, name: "fg_stamp", scope: !1052, file: !279, line: 568, baseType: !745, size: 128, offset: 19840)
!1287 = !DIDerivedType(tag: DW_TAG_member, name: "bg_stamp", scope: !1052, file: !279, line: 569, baseType: !745, size: 128, offset: 19968)
!1288 = !DIDerivedType(tag: DW_TAG_member, name: "seq_prev_type", scope: !1052, file: !279, line: 572, baseType: !16, size: 8, offset: 20096)
!1289 = !DIDerivedType(tag: DW_TAG_member, name: "seq_rend_type", scope: !1052, file: !279, line: 573, baseType: !16, size: 8, offset: 20104)
!1290 = !DIDerivedType(tag: DW_TAG_member, name: "seq_flag", scope: !1052, file: !279, line: 574, baseType: !16, size: 8, offset: 20112)
!1291 = !DIDerivedType(tag: DW_TAG_member, name: "pad5", scope: !1052, file: !279, line: 575, baseType: !902, size: 40, offset: 20120)
!1292 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_flag", scope: !1052, file: !279, line: 578, baseType: !34, size: 32, offset: 20160)
!1293 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_subsurf", scope: !1052, file: !279, line: 579, baseType: !31, size: 16, offset: 20192)
!1294 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_shadowsamples", scope: !1052, file: !279, line: 580, baseType: !31, size: 16, offset: 20208)
!1295 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_particles", scope: !1052, file: !279, line: 581, baseType: !120, size: 32, offset: 20224)
!1296 = !DIDerivedType(tag: DW_TAG_member, name: "simplify_aosss", scope: !1052, file: !279, line: 582, baseType: !120, size: 32, offset: 20256)
!1297 = !DIDerivedType(tag: DW_TAG_member, name: "cineonwhite", scope: !1052, file: !279, line: 585, baseType: !31, size: 16, offset: 20288)
!1298 = !DIDerivedType(tag: DW_TAG_member, name: "cineonblack", scope: !1052, file: !279, line: 585, baseType: !31, size: 16, offset: 20304)
!1299 = !DIDerivedType(tag: DW_TAG_member, name: "cineongamma", scope: !1052, file: !279, line: 586, baseType: !120, size: 32, offset: 20320)
!1300 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_preset", scope: !1052, file: !279, line: 589, baseType: !31, size: 16, offset: 20352)
!1301 = !DIDerivedType(tag: DW_TAG_member, name: "jp2_depth", scope: !1052, file: !279, line: 589, baseType: !31, size: 16, offset: 20368)
!1302 = !DIDerivedType(tag: DW_TAG_member, name: "rpad3", scope: !1052, file: !279, line: 590, baseType: !34, size: 32, offset: 20384)
!1303 = !DIDerivedType(tag: DW_TAG_member, name: "domeres", scope: !1052, file: !279, line: 593, baseType: !31, size: 16, offset: 20416)
!1304 = !DIDerivedType(tag: DW_TAG_member, name: "domemode", scope: !1052, file: !279, line: 593, baseType: !31, size: 16, offset: 20432)
!1305 = !DIDerivedType(tag: DW_TAG_member, name: "domeangle", scope: !1052, file: !279, line: 594, baseType: !31, size: 16, offset: 20448)
!1306 = !DIDerivedType(tag: DW_TAG_member, name: "dometilt", scope: !1052, file: !279, line: 594, baseType: !31, size: 16, offset: 20464)
!1307 = !DIDerivedType(tag: DW_TAG_member, name: "domeresbuf", scope: !1052, file: !279, line: 595, baseType: !120, size: 32, offset: 20480)
!1308 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1052, file: !279, line: 596, baseType: !120, size: 32, offset: 20512)
!1309 = !DIDerivedType(tag: DW_TAG_member, name: "dometext", scope: !1052, file: !279, line: 597, baseType: !1310, size: 64, offset: 20544)
!1310 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1311, size: 64)
!1311 = !DICompositeType(tag: DW_TAG_structure_type, name: "Text", file: !1312, line: 44, flags: DIFlagFwdDecl)
!1312 = !DIFile(filename: "blender/source/blender/makesdna/DNA_freestyle_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1313 = !DIDerivedType(tag: DW_TAG_member, name: "line_thickness_mode", scope: !1052, file: !279, line: 600, baseType: !34, size: 32, offset: 20608)
!1314 = !DIDerivedType(tag: DW_TAG_member, name: "unit_line_thickness", scope: !1052, file: !279, line: 601, baseType: !120, size: 32, offset: 20640)
!1315 = !DIDerivedType(tag: DW_TAG_member, name: "engine", scope: !1052, file: !279, line: 604, baseType: !1316, size: 256, offset: 20672)
!1316 = !DICompositeType(tag: DW_TAG_array_type, baseType: !16, size: 256, elements: !1317)
!1317 = !{!1318}
!1318 = !DISubrange(count: 32)
!1319 = !DIDerivedType(tag: DW_TAG_member, name: "bake", scope: !1052, file: !279, line: 607, baseType: !1320, size: 10880, offset: 20928)
!1320 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "BakeData", file: !279, line: 364, size: 10880, elements: !1321)
!1321 = !{!1322, !1323, !1324, !1325, !1326, !1327, !1328, !1329, !1330, !1331, !1332, !1333, !1334}
!1322 = !DIDerivedType(tag: DW_TAG_member, name: "im_format", scope: !1320, file: !279, line: 365, baseType: !1055, size: 1984)
!1323 = !DIDerivedType(tag: DW_TAG_member, name: "filepath", scope: !1320, file: !279, line: 367, baseType: !255, size: 8192, offset: 1984)
!1324 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !1320, file: !279, line: 369, baseType: !31, size: 16, offset: 10176)
!1325 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !1320, file: !279, line: 369, baseType: !31, size: 16, offset: 10192)
!1326 = !DIDerivedType(tag: DW_TAG_member, name: "margin", scope: !1320, file: !279, line: 370, baseType: !31, size: 16, offset: 10208)
!1327 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1320, file: !279, line: 370, baseType: !31, size: 16, offset: 10224)
!1328 = !DIDerivedType(tag: DW_TAG_member, name: "cage_extrusion", scope: !1320, file: !279, line: 372, baseType: !120, size: 32, offset: 10240)
!1329 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1320, file: !279, line: 373, baseType: !120, size: 32, offset: 10272)
!1330 = !DIDerivedType(tag: DW_TAG_member, name: "normal_swizzle", scope: !1320, file: !279, line: 375, baseType: !825, size: 24, offset: 10304)
!1331 = !DIDerivedType(tag: DW_TAG_member, name: "normal_space", scope: !1320, file: !279, line: 376, baseType: !16, size: 8, offset: 10328)
!1332 = !DIDerivedType(tag: DW_TAG_member, name: "save_mode", scope: !1320, file: !279, line: 378, baseType: !16, size: 8, offset: 10336)
!1333 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1320, file: !279, line: 379, baseType: !825, size: 24, offset: 10344)
!1334 = !DIDerivedType(tag: DW_TAG_member, name: "cage", scope: !1320, file: !279, line: 381, baseType: !15, size: 512, offset: 10368)
!1335 = !DIDerivedType(tag: DW_TAG_member, name: "preview_start_resolution", scope: !1052, file: !279, line: 609, baseType: !34, size: 32, offset: 31808)
!1336 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1052, file: !279, line: 610, baseType: !34, size: 32, offset: 31840)
!1337 = !DIDerivedType(tag: DW_TAG_member, name: "audio", scope: !278, file: !279, line: 1252, baseType: !1338, size: 256, offset: 34112)
!1338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "AudioData", file: !279, line: 158, size: 256, elements: !1339)
!1339 = !{!1340, !1341, !1342, !1343, !1344, !1345, !1346, !1347, !1348}
!1340 = !DIDerivedType(tag: DW_TAG_member, name: "mixrate", scope: !1338, file: !279, line: 159, baseType: !34, size: 32)
!1341 = !DIDerivedType(tag: DW_TAG_member, name: "main", scope: !1338, file: !279, line: 160, baseType: !120, size: 32, offset: 32)
!1342 = !DIDerivedType(tag: DW_TAG_member, name: "speed_of_sound", scope: !1338, file: !279, line: 161, baseType: !120, size: 32, offset: 64)
!1343 = !DIDerivedType(tag: DW_TAG_member, name: "doppler_factor", scope: !1338, file: !279, line: 162, baseType: !120, size: 32, offset: 96)
!1344 = !DIDerivedType(tag: DW_TAG_member, name: "distance_model", scope: !1338, file: !279, line: 163, baseType: !34, size: 32, offset: 128)
!1345 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1338, file: !279, line: 164, baseType: !31, size: 16, offset: 160)
!1346 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !1338, file: !279, line: 165, baseType: !31, size: 16, offset: 176)
!1347 = !DIDerivedType(tag: DW_TAG_member, name: "volume", scope: !1338, file: !279, line: 166, baseType: !120, size: 32, offset: 192)
!1348 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1338, file: !279, line: 167, baseType: !120, size: 32, offset: 224)
!1349 = !DIDerivedType(tag: DW_TAG_member, name: "markers", scope: !278, file: !279, line: 1254, baseType: !42, size: 128, offset: 34368)
!1350 = !DIDerivedType(tag: DW_TAG_member, name: "transform_spaces", scope: !278, file: !279, line: 1255, baseType: !42, size: 128, offset: 34496)
!1351 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene", scope: !278, file: !279, line: 1257, baseType: !40, size: 64, offset: 34624)
!1352 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scene_handle", scope: !278, file: !279, line: 1258, baseType: !40, size: 64, offset: 34688)
!1353 = !DIDerivedType(tag: DW_TAG_member, name: "sound_scrub_handle", scope: !278, file: !279, line: 1259, baseType: !40, size: 64, offset: 34752)
!1354 = !DIDerivedType(tag: DW_TAG_member, name: "speaker_handles", scope: !278, file: !279, line: 1260, baseType: !40, size: 64, offset: 34816)
!1355 = !DIDerivedType(tag: DW_TAG_member, name: "fps_info", scope: !278, file: !279, line: 1262, baseType: !40, size: 64, offset: 34880)
!1356 = !DIDerivedType(tag: DW_TAG_member, name: "theDag", scope: !278, file: !279, line: 1265, baseType: !1357, size: 64, offset: 34944)
!1357 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1358, size: 64)
!1358 = !DICompositeType(tag: DW_TAG_structure_type, name: "DagForest", file: !279, line: 1265, flags: DIFlagFwdDecl)
!1359 = !DIDerivedType(tag: DW_TAG_member, name: "dagflags", scope: !278, file: !279, line: 1266, baseType: !31, size: 16, offset: 35008)
!1360 = !DIDerivedType(tag: DW_TAG_member, name: "recalc", scope: !278, file: !279, line: 1267, baseType: !31, size: 16, offset: 35024)
!1361 = !DIDerivedType(tag: DW_TAG_member, name: "active_keyingset", scope: !278, file: !279, line: 1270, baseType: !34, size: 32, offset: 35040)
!1362 = !DIDerivedType(tag: DW_TAG_member, name: "keyingsets", scope: !278, file: !279, line: 1271, baseType: !42, size: 128, offset: 35072)
!1363 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !278, file: !279, line: 1274, baseType: !1364, size: 128, offset: 35200)
!1364 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameFraming", file: !279, line: 650, size: 128, elements: !1365)
!1365 = !{!1366, !1367, !1368, !1369, !1370}
!1366 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !1364, file: !279, line: 651, baseType: !308, size: 96)
!1367 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1364, file: !279, line: 652, baseType: !16, size: 8, offset: 96)
!1368 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1364, file: !279, line: 652, baseType: !16, size: 8, offset: 104)
!1369 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1364, file: !279, line: 652, baseType: !16, size: 8, offset: 112)
!1370 = !DIDerivedType(tag: DW_TAG_member, name: "pad3", scope: !1364, file: !279, line: 652, baseType: !16, size: 8, offset: 120)
!1371 = !DIDerivedType(tag: DW_TAG_member, name: "gm", scope: !278, file: !279, line: 1275, baseType: !1372, size: 1472, offset: 35328)
!1372 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameData", file: !279, line: 676, size: 1472, elements: !1373)
!1373 = !{!1374, !1375, !1376, !1377, !1378, !1379, !1380, !1381, !1382, !1383, !1384, !1386, !1396, !1397, !1398, !1399, !1418, !1419, !1420, !1421, !1422, !1423, !1424, !1425, !1426, !1427, !1428, !1429, !1430, !1431, !1432, !1433, !1434, !1435, !1436, !1437}
!1374 = !DIDerivedType(tag: DW_TAG_member, name: "framing", scope: !1372, file: !279, line: 679, baseType: !1364, size: 128)
!1375 = !DIDerivedType(tag: DW_TAG_member, name: "playerflag", scope: !1372, file: !279, line: 680, baseType: !31, size: 16, offset: 128)
!1376 = !DIDerivedType(tag: DW_TAG_member, name: "xplay", scope: !1372, file: !279, line: 680, baseType: !31, size: 16, offset: 144)
!1377 = !DIDerivedType(tag: DW_TAG_member, name: "yplay", scope: !1372, file: !279, line: 680, baseType: !31, size: 16, offset: 160)
!1378 = !DIDerivedType(tag: DW_TAG_member, name: "freqplay", scope: !1372, file: !279, line: 680, baseType: !31, size: 16, offset: 176)
!1379 = !DIDerivedType(tag: DW_TAG_member, name: "depth", scope: !1372, file: !279, line: 681, baseType: !31, size: 16, offset: 192)
!1380 = !DIDerivedType(tag: DW_TAG_member, name: "attrib", scope: !1372, file: !279, line: 681, baseType: !31, size: 16, offset: 208)
!1381 = !DIDerivedType(tag: DW_TAG_member, name: "rt1", scope: !1372, file: !279, line: 681, baseType: !31, size: 16, offset: 224)
!1382 = !DIDerivedType(tag: DW_TAG_member, name: "rt2", scope: !1372, file: !279, line: 681, baseType: !31, size: 16, offset: 240)
!1383 = !DIDerivedType(tag: DW_TAG_member, name: "aasamples", scope: !1372, file: !279, line: 682, baseType: !31, size: 16, offset: 256)
!1384 = !DIDerivedType(tag: DW_TAG_member, name: "pad4", scope: !1372, file: !279, line: 682, baseType: !1385, size: 48, offset: 272)
!1385 = !DICompositeType(tag: DW_TAG_array_type, baseType: !31, size: 48, elements: !309)
!1386 = !DIDerivedType(tag: DW_TAG_member, name: "dome", scope: !1372, file: !279, line: 685, baseType: !1387, size: 192, offset: 320)
!1387 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GameDome", file: !279, line: 633, size: 192, elements: !1388)
!1388 = !{!1389, !1390, !1391, !1392, !1393, !1394, !1395}
!1389 = !DIDerivedType(tag: DW_TAG_member, name: "res", scope: !1387, file: !279, line: 634, baseType: !31, size: 16)
!1390 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1387, file: !279, line: 634, baseType: !31, size: 16, offset: 16)
!1391 = !DIDerivedType(tag: DW_TAG_member, name: "angle", scope: !1387, file: !279, line: 635, baseType: !31, size: 16, offset: 32)
!1392 = !DIDerivedType(tag: DW_TAG_member, name: "tilt", scope: !1387, file: !279, line: 635, baseType: !31, size: 16, offset: 48)
!1393 = !DIDerivedType(tag: DW_TAG_member, name: "resbuf", scope: !1387, file: !279, line: 636, baseType: !120, size: 32, offset: 64)
!1394 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1387, file: !279, line: 636, baseType: !120, size: 32, offset: 96)
!1395 = !DIDerivedType(tag: DW_TAG_member, name: "warptext", scope: !1387, file: !279, line: 637, baseType: !1310, size: 64, offset: 128)
!1396 = !DIDerivedType(tag: DW_TAG_member, name: "stereoflag", scope: !1372, file: !279, line: 686, baseType: !31, size: 16, offset: 512)
!1397 = !DIDerivedType(tag: DW_TAG_member, name: "stereomode", scope: !1372, file: !279, line: 686, baseType: !31, size: 16, offset: 528)
!1398 = !DIDerivedType(tag: DW_TAG_member, name: "eyeseparation", scope: !1372, file: !279, line: 687, baseType: !120, size: 32, offset: 544)
!1399 = !DIDerivedType(tag: DW_TAG_member, name: "recastData", scope: !1372, file: !279, line: 688, baseType: !1400, size: 448, offset: 576)
!1400 = !DIDerivedType(tag: DW_TAG_typedef, name: "RecastData", file: !279, line: 674, baseType: !1401)
!1401 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "RecastData", file: !279, line: 659, size: 448, elements: !1402)
!1402 = !{!1403, !1404, !1405, !1406, !1407, !1408, !1409, !1410, !1411, !1412, !1413, !1414, !1415, !1416, !1417}
!1403 = !DIDerivedType(tag: DW_TAG_member, name: "cellsize", scope: !1401, file: !279, line: 660, baseType: !120, size: 32)
!1404 = !DIDerivedType(tag: DW_TAG_member, name: "cellheight", scope: !1401, file: !279, line: 661, baseType: !120, size: 32, offset: 32)
!1405 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxslope", scope: !1401, file: !279, line: 662, baseType: !120, size: 32, offset: 64)
!1406 = !DIDerivedType(tag: DW_TAG_member, name: "agentmaxclimb", scope: !1401, file: !279, line: 663, baseType: !120, size: 32, offset: 96)
!1407 = !DIDerivedType(tag: DW_TAG_member, name: "agentheight", scope: !1401, file: !279, line: 664, baseType: !120, size: 32, offset: 128)
!1408 = !DIDerivedType(tag: DW_TAG_member, name: "agentradius", scope: !1401, file: !279, line: 665, baseType: !120, size: 32, offset: 160)
!1409 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxlen", scope: !1401, file: !279, line: 666, baseType: !120, size: 32, offset: 192)
!1410 = !DIDerivedType(tag: DW_TAG_member, name: "edgemaxerror", scope: !1401, file: !279, line: 667, baseType: !120, size: 32, offset: 224)
!1411 = !DIDerivedType(tag: DW_TAG_member, name: "regionminsize", scope: !1401, file: !279, line: 668, baseType: !120, size: 32, offset: 256)
!1412 = !DIDerivedType(tag: DW_TAG_member, name: "regionmergesize", scope: !1401, file: !279, line: 669, baseType: !120, size: 32, offset: 288)
!1413 = !DIDerivedType(tag: DW_TAG_member, name: "vertsperpoly", scope: !1401, file: !279, line: 670, baseType: !34, size: 32, offset: 320)
!1414 = !DIDerivedType(tag: DW_TAG_member, name: "detailsampledist", scope: !1401, file: !279, line: 671, baseType: !120, size: 32, offset: 352)
!1415 = !DIDerivedType(tag: DW_TAG_member, name: "detailsamplemaxerror", scope: !1401, file: !279, line: 672, baseType: !120, size: 32, offset: 384)
!1416 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !1401, file: !279, line: 673, baseType: !31, size: 16, offset: 416)
!1417 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1401, file: !279, line: 673, baseType: !31, size: 16, offset: 432)
!1418 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !1372, file: !279, line: 692, baseType: !120, size: 32, offset: 1024)
!1419 = !DIDerivedType(tag: DW_TAG_member, name: "activityBoxRadius", scope: !1372, file: !279, line: 697, baseType: !120, size: 32, offset: 1056)
!1420 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1372, file: !279, line: 703, baseType: !34, size: 32, offset: 1088)
!1421 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1372, file: !279, line: 704, baseType: !31, size: 16, offset: 1120)
!1422 = !DIDerivedType(tag: DW_TAG_member, name: "matmode", scope: !1372, file: !279, line: 704, baseType: !31, size: 16, offset: 1136)
!1423 = !DIDerivedType(tag: DW_TAG_member, name: "occlusionRes", scope: !1372, file: !279, line: 705, baseType: !31, size: 16, offset: 1152)
!1424 = !DIDerivedType(tag: DW_TAG_member, name: "physicsEngine", scope: !1372, file: !279, line: 706, baseType: !31, size: 16, offset: 1168)
!1425 = !DIDerivedType(tag: DW_TAG_member, name: "exitkey", scope: !1372, file: !279, line: 707, baseType: !31, size: 16, offset: 1184)
!1426 = !DIDerivedType(tag: DW_TAG_member, name: "vsync", scope: !1372, file: !279, line: 708, baseType: !31, size: 16, offset: 1200)
!1427 = !DIDerivedType(tag: DW_TAG_member, name: "ticrate", scope: !1372, file: !279, line: 709, baseType: !31, size: 16, offset: 1216)
!1428 = !DIDerivedType(tag: DW_TAG_member, name: "maxlogicstep", scope: !1372, file: !279, line: 709, baseType: !31, size: 16, offset: 1232)
!1429 = !DIDerivedType(tag: DW_TAG_member, name: "physubstep", scope: !1372, file: !279, line: 709, baseType: !31, size: 16, offset: 1248)
!1430 = !DIDerivedType(tag: DW_TAG_member, name: "maxphystep", scope: !1372, file: !279, line: 709, baseType: !31, size: 16, offset: 1264)
!1431 = !DIDerivedType(tag: DW_TAG_member, name: "obstacleSimulation", scope: !1372, file: !279, line: 710, baseType: !31, size: 16, offset: 1280)
!1432 = !DIDerivedType(tag: DW_TAG_member, name: "raster_storage", scope: !1372, file: !279, line: 711, baseType: !31, size: 16, offset: 1296)
!1433 = !DIDerivedType(tag: DW_TAG_member, name: "levelHeight", scope: !1372, file: !279, line: 712, baseType: !120, size: 32, offset: 1312)
!1434 = !DIDerivedType(tag: DW_TAG_member, name: "deactivationtime", scope: !1372, file: !279, line: 713, baseType: !120, size: 32, offset: 1344)
!1435 = !DIDerivedType(tag: DW_TAG_member, name: "lineardeactthreshold", scope: !1372, file: !279, line: 713, baseType: !120, size: 32, offset: 1376)
!1436 = !DIDerivedType(tag: DW_TAG_member, name: "angulardeactthreshold", scope: !1372, file: !279, line: 713, baseType: !120, size: 32, offset: 1408)
!1437 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !1372, file: !279, line: 713, baseType: !120, size: 32, offset: 1440)
!1438 = !DIDerivedType(tag: DW_TAG_member, name: "unit", scope: !278, file: !279, line: 1278, baseType: !1439, size: 64, offset: 36800)
!1439 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "UnitSettings", file: !279, line: 1197, size: 64, elements: !1440)
!1440 = !{!1441, !1442, !1443, !1444}
!1441 = !DIDerivedType(tag: DW_TAG_member, name: "scale_length", scope: !1439, file: !279, line: 1199, baseType: !120, size: 32)
!1442 = !DIDerivedType(tag: DW_TAG_member, name: "system", scope: !1439, file: !279, line: 1200, baseType: !16, size: 8, offset: 32)
!1443 = !DIDerivedType(tag: DW_TAG_member, name: "system_rotation", scope: !1439, file: !279, line: 1201, baseType: !16, size: 8, offset: 40)
!1444 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1439, file: !279, line: 1202, baseType: !31, size: 16, offset: 48)
!1445 = !DIDerivedType(tag: DW_TAG_member, name: "gpd", scope: !278, file: !279, line: 1281, baseType: !336, size: 64, offset: 36864)
!1446 = !DIDerivedType(tag: DW_TAG_member, name: "physics_settings", scope: !278, file: !279, line: 1284, baseType: !1447, size: 192, offset: 36928)
!1447 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "PhysicsSettings", file: !279, line: 1208, size: 192, elements: !1448)
!1448 = !{!1449, !1450, !1451, !1452}
!1449 = !DIDerivedType(tag: DW_TAG_member, name: "gravity", scope: !1447, file: !279, line: 1209, baseType: !308, size: 96)
!1450 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1447, file: !279, line: 1210, baseType: !34, size: 32, offset: 96)
!1451 = !DIDerivedType(tag: DW_TAG_member, name: "quick_cache_step", scope: !1447, file: !279, line: 1210, baseType: !34, size: 32, offset: 128)
!1452 = !DIDerivedType(tag: DW_TAG_member, name: "rt", scope: !1447, file: !279, line: 1210, baseType: !34, size: 32, offset: 160)
!1453 = !DIDerivedType(tag: DW_TAG_member, name: "clip", scope: !278, file: !279, line: 1287, baseType: !515, size: 64, offset: 37120)
!1454 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask", scope: !278, file: !279, line: 1289, baseType: !1455, size: 64, offset: 37184)
!1455 = !DIDerivedType(tag: DW_TAG_typedef, name: "uint64_t", file: !1456, line: 27, baseType: !1457)
!1456 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/stdint-uintn.h", directory: "")
!1457 = !DIDerivedType(tag: DW_TAG_typedef, name: "__uint64_t", file: !1458, line: 45, baseType: !1459)
!1458 = !DIFile(filename: "/usr/include/x86_64-linux-gnu/bits/types.h", directory: "")
!1459 = !DIBasicType(name: "long unsigned int", size: 64, encoding: DW_ATE_unsigned)
!1460 = !DIDerivedType(tag: DW_TAG_member, name: "customdata_mask_modal", scope: !278, file: !279, line: 1290, baseType: !1455, size: 64, offset: 37248)
!1461 = !DIDerivedType(tag: DW_TAG_member, name: "view_settings", scope: !278, file: !279, line: 1293, baseType: !1072, size: 1280, offset: 37312)
!1462 = !DIDerivedType(tag: DW_TAG_member, name: "display_settings", scope: !278, file: !279, line: 1294, baseType: !1122, size: 512, offset: 38592)
!1463 = !DIDerivedType(tag: DW_TAG_member, name: "sequencer_colorspace_settings", scope: !278, file: !279, line: 1295, baseType: !503, size: 512, offset: 39104)
!1464 = !DIDerivedType(tag: DW_TAG_member, name: "rigidbody_world", scope: !278, file: !279, line: 1298, baseType: !1465, size: 64, offset: 39616)
!1465 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1466, size: 64)
!1466 = !DICompositeType(tag: DW_TAG_structure_type, name: "RigidBodyWorld", file: !279, line: 1298, flags: DIFlagFwdDecl)
!1467 = !DIDerivedType(tag: DW_TAG_member, name: "newscene", scope: !233, file: !234, line: 58, baseType: !277, size: 64, offset: 1536)
!1468 = !DIDerivedType(tag: DW_TAG_member, name: "redraws_flag", scope: !233, file: !234, line: 60, baseType: !34, size: 32, offset: 1600)
!1469 = !DIDerivedType(tag: DW_TAG_member, name: "pad1", scope: !233, file: !234, line: 61, baseType: !34, size: 32, offset: 1632)
!1470 = !DIDerivedType(tag: DW_TAG_member, name: "state", scope: !233, file: !234, line: 63, baseType: !31, size: 16, offset: 1664)
!1471 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !233, file: !234, line: 64, baseType: !31, size: 16, offset: 1680)
!1472 = !DIDerivedType(tag: DW_TAG_member, name: "winid", scope: !233, file: !234, line: 65, baseType: !31, size: 16, offset: 1696)
!1473 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw", scope: !233, file: !234, line: 66, baseType: !31, size: 16, offset: 1712)
!1474 = !DIDerivedType(tag: DW_TAG_member, name: "do_refresh", scope: !233, file: !234, line: 67, baseType: !31, size: 16, offset: 1728)
!1475 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_gesture", scope: !233, file: !234, line: 68, baseType: !31, size: 16, offset: 1744)
!1476 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_paintcursor", scope: !233, file: !234, line: 69, baseType: !31, size: 16, offset: 1760)
!1477 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_drag", scope: !233, file: !234, line: 70, baseType: !31, size: 16, offset: 1776)
!1478 = !DIDerivedType(tag: DW_TAG_member, name: "swap", scope: !233, file: !234, line: 71, baseType: !31, size: 16, offset: 1792)
!1479 = !DIDerivedType(tag: DW_TAG_member, name: "mainwin", scope: !233, file: !234, line: 73, baseType: !31, size: 16, offset: 1808)
!1480 = !DIDerivedType(tag: DW_TAG_member, name: "subwinactive", scope: !233, file: !234, line: 74, baseType: !31, size: 16, offset: 1824)
!1481 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !233, file: !234, line: 76, baseType: !31, size: 16, offset: 1840)
!1482 = !DIDerivedType(tag: DW_TAG_member, name: "animtimer", scope: !233, file: !234, line: 78, baseType: !219, size: 64, offset: 1856)
!1483 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !233, file: !234, line: 79, baseType: !40, size: 64, offset: 1920)
!1484 = !DIDerivedType(tag: DW_TAG_member, name: "newscreen", scope: !226, file: !8, line: 175, baseType: !232, size: 64, offset: 256)
!1485 = !DIDerivedType(tag: DW_TAG_member, name: "screenname", scope: !226, file: !8, line: 176, baseType: !15, size: 512, offset: 320)
!1486 = !DIDerivedType(tag: DW_TAG_member, name: "posx", scope: !226, file: !8, line: 178, baseType: !31, size: 16, offset: 832)
!1487 = !DIDerivedType(tag: DW_TAG_member, name: "posy", scope: !226, file: !8, line: 178, baseType: !31, size: 16, offset: 848)
!1488 = !DIDerivedType(tag: DW_TAG_member, name: "sizex", scope: !226, file: !8, line: 178, baseType: !31, size: 16, offset: 864)
!1489 = !DIDerivedType(tag: DW_TAG_member, name: "sizey", scope: !226, file: !8, line: 178, baseType: !31, size: 16, offset: 880)
!1490 = !DIDerivedType(tag: DW_TAG_member, name: "windowstate", scope: !226, file: !8, line: 179, baseType: !31, size: 16, offset: 896)
!1491 = !DIDerivedType(tag: DW_TAG_member, name: "monitor", scope: !226, file: !8, line: 180, baseType: !31, size: 16, offset: 912)
!1492 = !DIDerivedType(tag: DW_TAG_member, name: "active", scope: !226, file: !8, line: 181, baseType: !31, size: 16, offset: 928)
!1493 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !226, file: !8, line: 182, baseType: !31, size: 16, offset: 944)
!1494 = !DIDerivedType(tag: DW_TAG_member, name: "lastcursor", scope: !226, file: !8, line: 183, baseType: !31, size: 16, offset: 960)
!1495 = !DIDerivedType(tag: DW_TAG_member, name: "modalcursor", scope: !226, file: !8, line: 184, baseType: !31, size: 16, offset: 976)
!1496 = !DIDerivedType(tag: DW_TAG_member, name: "grabcursor", scope: !226, file: !8, line: 185, baseType: !31, size: 16, offset: 992)
!1497 = !DIDerivedType(tag: DW_TAG_member, name: "addmousemove", scope: !226, file: !8, line: 186, baseType: !31, size: 16, offset: 1008)
!1498 = !DIDerivedType(tag: DW_TAG_member, name: "winid", scope: !226, file: !8, line: 188, baseType: !34, size: 32, offset: 1024)
!1499 = !DIDerivedType(tag: DW_TAG_member, name: "lock_pie_event", scope: !226, file: !8, line: 190, baseType: !31, size: 16, offset: 1056)
!1500 = !DIDerivedType(tag: DW_TAG_member, name: "last_pie_event", scope: !226, file: !8, line: 191, baseType: !31, size: 16, offset: 1072)
!1501 = !DIDerivedType(tag: DW_TAG_member, name: "eventstate", scope: !226, file: !8, line: 194, baseType: !83, size: 64, offset: 1088)
!1502 = !DIDerivedType(tag: DW_TAG_member, name: "curswin", scope: !226, file: !8, line: 196, baseType: !1503, size: 64, offset: 1152)
!1503 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1504, size: 64)
!1504 = !DICompositeType(tag: DW_TAG_structure_type, name: "wmSubWindow", file: !8, line: 55, flags: DIFlagFwdDecl)
!1505 = !DIDerivedType(tag: DW_TAG_member, name: "tweak", scope: !226, file: !8, line: 198, baseType: !1506, size: 64, offset: 1216)
!1506 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1507, size: 64)
!1507 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmGesture", file: !55, line: 398, size: 448, elements: !1508)
!1508 = !{!1509, !1510, !1511, !1512, !1513, !1514, !1515, !1516, !1517, !1518}
!1509 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1507, file: !55, line: 399, baseType: !1506, size: 64)
!1510 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1507, file: !55, line: 399, baseType: !1506, size: 64, offset: 64)
!1511 = !DIDerivedType(tag: DW_TAG_member, name: "event_type", scope: !1507, file: !55, line: 400, baseType: !34, size: 32, offset: 128)
!1512 = !DIDerivedType(tag: DW_TAG_member, name: "mode", scope: !1507, file: !55, line: 401, baseType: !34, size: 32, offset: 160)
!1513 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !1507, file: !55, line: 402, baseType: !34, size: 32, offset: 192)
!1514 = !DIDerivedType(tag: DW_TAG_member, name: "swinid", scope: !1507, file: !55, line: 403, baseType: !34, size: 32, offset: 224)
!1515 = !DIDerivedType(tag: DW_TAG_member, name: "points", scope: !1507, file: !55, line: 404, baseType: !34, size: 32, offset: 256)
!1516 = !DIDerivedType(tag: DW_TAG_member, name: "size", scope: !1507, file: !55, line: 405, baseType: !34, size: 32, offset: 288)
!1517 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !1507, file: !55, line: 407, baseType: !40, size: 64, offset: 320)
!1518 = !DIDerivedType(tag: DW_TAG_member, name: "userdata", scope: !1507, file: !55, line: 414, baseType: !40, size: 64, offset: 384)
!1519 = !DIDerivedType(tag: DW_TAG_member, name: "drawmethod", scope: !226, file: !8, line: 200, baseType: !34, size: 32, offset: 1280)
!1520 = !DIDerivedType(tag: DW_TAG_member, name: "drawfail", scope: !226, file: !8, line: 200, baseType: !34, size: 32, offset: 1312)
!1521 = !DIDerivedType(tag: DW_TAG_member, name: "drawdata", scope: !226, file: !8, line: 201, baseType: !40, size: 64, offset: 1344)
!1522 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !226, file: !8, line: 203, baseType: !42, size: 128, offset: 1408)
!1523 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !226, file: !8, line: 204, baseType: !42, size: 128, offset: 1536)
!1524 = !DIDerivedType(tag: DW_TAG_member, name: "modalhandlers", scope: !226, file: !8, line: 205, baseType: !42, size: 128, offset: 1664)
!1525 = !DIDerivedType(tag: DW_TAG_member, name: "subwindows", scope: !226, file: !8, line: 207, baseType: !42, size: 128, offset: 1792)
!1526 = !DIDerivedType(tag: DW_TAG_member, name: "gesture", scope: !226, file: !8, line: 208, baseType: !42, size: 128, offset: 1920)
!1527 = !DIDerivedType(tag: DW_TAG_member, name: "timestep", scope: !220, file: !55, line: 495, baseType: !104, size: 64, offset: 192)
!1528 = !DIDerivedType(tag: DW_TAG_member, name: "event_type", scope: !220, file: !55, line: 496, baseType: !34, size: 32, offset: 256)
!1529 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !220, file: !55, line: 497, baseType: !40, size: 64, offset: 320)
!1530 = !DIDerivedType(tag: DW_TAG_member, name: "duration", scope: !220, file: !55, line: 499, baseType: !104, size: 64, offset: 384)
!1531 = !DIDerivedType(tag: DW_TAG_member, name: "delta", scope: !220, file: !55, line: 500, baseType: !104, size: 64, offset: 448)
!1532 = !DIDerivedType(tag: DW_TAG_member, name: "ltime", scope: !220, file: !55, line: 502, baseType: !104, size: 64, offset: 512)
!1533 = !DIDerivedType(tag: DW_TAG_member, name: "ntime", scope: !220, file: !55, line: 503, baseType: !104, size: 64, offset: 576)
!1534 = !DIDerivedType(tag: DW_TAG_member, name: "stime", scope: !220, file: !55, line: 504, baseType: !104, size: 64, offset: 640)
!1535 = !DIDerivedType(tag: DW_TAG_member, name: "sleep", scope: !220, file: !55, line: 505, baseType: !34, size: 32, offset: 704)
!1536 = !DIDerivedType(tag: DW_TAG_member, name: "macro", scope: !9, file: !8, line: 343, baseType: !42, size: 128, offset: 1024)
!1537 = !DIDerivedType(tag: DW_TAG_member, name: "opm", scope: !9, file: !8, line: 344, baseType: !12, size: 64, offset: 1152)
!1538 = !DIDerivedType(tag: DW_TAG_member, name: "layout", scope: !9, file: !8, line: 345, baseType: !1539, size: 64, offset: 1216)
!1539 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1540, size: 64)
!1540 = !DICompositeType(tag: DW_TAG_structure_type, name: "uiLayout", file: !234, line: 46, flags: DIFlagFwdDecl)
!1541 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !9, file: !8, line: 346, baseType: !31, size: 16, offset: 1280)
!1542 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !9, file: !8, line: 346, baseType: !1385, size: 48, offset: 1296)
!1543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1544, size: 64)
!1544 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmWindowManager", file: !8, line: 160, baseType: !1545)
!1545 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmWindowManager", file: !8, line: 128, size: 2816, elements: !1546)
!1546 = !{!1547, !1548, !1549, !1550, !1551, !1552, !1553, !1554, !1555, !1556, !1557, !1558, !1559, !1560, !1561, !1572, !1573, !1574, !1575, !1576, !1577}
!1547 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !1545, file: !8, line: 129, baseType: !237, size: 960)
!1548 = !DIDerivedType(tag: DW_TAG_member, name: "windrawable", scope: !1545, file: !8, line: 131, baseType: !225, size: 64, offset: 960)
!1549 = !DIDerivedType(tag: DW_TAG_member, name: "winactive", scope: !1545, file: !8, line: 131, baseType: !225, size: 64, offset: 1024)
!1550 = !DIDerivedType(tag: DW_TAG_member, name: "windows", scope: !1545, file: !8, line: 132, baseType: !42, size: 128, offset: 1088)
!1551 = !DIDerivedType(tag: DW_TAG_member, name: "initialized", scope: !1545, file: !8, line: 134, baseType: !34, size: 32, offset: 1216)
!1552 = !DIDerivedType(tag: DW_TAG_member, name: "file_saved", scope: !1545, file: !8, line: 135, baseType: !31, size: 16, offset: 1248)
!1553 = !DIDerivedType(tag: DW_TAG_member, name: "op_undo_depth", scope: !1545, file: !8, line: 136, baseType: !31, size: 16, offset: 1264)
!1554 = !DIDerivedType(tag: DW_TAG_member, name: "operators", scope: !1545, file: !8, line: 138, baseType: !42, size: 128, offset: 1280)
!1555 = !DIDerivedType(tag: DW_TAG_member, name: "queue", scope: !1545, file: !8, line: 140, baseType: !42, size: 128, offset: 1408)
!1556 = !DIDerivedType(tag: DW_TAG_member, name: "reports", scope: !1545, file: !8, line: 142, baseType: !211, size: 320, offset: 1536)
!1557 = !DIDerivedType(tag: DW_TAG_member, name: "jobs", scope: !1545, file: !8, line: 144, baseType: !42, size: 128, offset: 1856)
!1558 = !DIDerivedType(tag: DW_TAG_member, name: "paintcursors", scope: !1545, file: !8, line: 146, baseType: !42, size: 128, offset: 1984)
!1559 = !DIDerivedType(tag: DW_TAG_member, name: "drags", scope: !1545, file: !8, line: 148, baseType: !42, size: 128, offset: 2112)
!1560 = !DIDerivedType(tag: DW_TAG_member, name: "keyconfigs", scope: !1545, file: !8, line: 150, baseType: !42, size: 128, offset: 2240)
!1561 = !DIDerivedType(tag: DW_TAG_member, name: "defaultconf", scope: !1545, file: !8, line: 151, baseType: !1562, size: 64, offset: 2368)
!1562 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1563, size: 64)
!1563 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmKeyConfig", file: !8, line: 310, size: 1344, elements: !1564)
!1564 = !{!1565, !1566, !1567, !1568, !1569, !1570, !1571}
!1565 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !1563, file: !8, line: 311, baseType: !1562, size: 64)
!1566 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !1563, file: !8, line: 311, baseType: !1562, size: 64, offset: 64)
!1567 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !1563, file: !8, line: 313, baseType: !15, size: 512, offset: 128)
!1568 = !DIDerivedType(tag: DW_TAG_member, name: "basename", scope: !1563, file: !8, line: 314, baseType: !15, size: 512, offset: 640)
!1569 = !DIDerivedType(tag: DW_TAG_member, name: "keymaps", scope: !1563, file: !8, line: 316, baseType: !42, size: 128, offset: 1152)
!1570 = !DIDerivedType(tag: DW_TAG_member, name: "actkeymap", scope: !1563, file: !8, line: 317, baseType: !34, size: 32, offset: 1280)
!1571 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !1563, file: !8, line: 317, baseType: !34, size: 32, offset: 1312)
!1572 = !DIDerivedType(tag: DW_TAG_member, name: "addonconf", scope: !1545, file: !8, line: 152, baseType: !1562, size: 64, offset: 2432)
!1573 = !DIDerivedType(tag: DW_TAG_member, name: "userconf", scope: !1545, file: !8, line: 153, baseType: !1562, size: 64, offset: 2496)
!1574 = !DIDerivedType(tag: DW_TAG_member, name: "timers", scope: !1545, file: !8, line: 155, baseType: !42, size: 128, offset: 2560)
!1575 = !DIDerivedType(tag: DW_TAG_member, name: "autosavetimer", scope: !1545, file: !8, line: 156, baseType: !219, size: 64, offset: 2688)
!1576 = !DIDerivedType(tag: DW_TAG_member, name: "is_interface_locked", scope: !1545, file: !8, line: 158, baseType: !16, size: 8, offset: 2752)
!1577 = !DIDerivedType(tag: DW_TAG_member, name: "par", scope: !1545, file: !8, line: 159, baseType: !752, size: 56, offset: 2760)
!1578 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1579, size: 64)
!1579 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmOperatorType", file: !55, line: 568, baseType: !54)
!1580 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1581, size: 64)
!1581 = !DIDerivedType(tag: DW_TAG_typedef, name: "PointerRNA", file: !144, line: 62, baseType: !181)
!1582 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1583, size: 64)
!1583 = !DIDerivedType(tag: DW_TAG_typedef, name: "ReportList", file: !8, line: 112, baseType: !211)
!1584 = distinct !DICompileUnit(language: DW_LANG_C99, file: !3, producer: "clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)", isOptimized: false, runtimeVersion: 0, emissionKind: FullDebug, enums: !1585, retainedTypes: !2200, globals: !2396, splitDebugInlining: false, nameTableKind: None)
!1585 = !{!1586, !1593, !1605, !1615, !1626, !1632, !1665, !1673, !1696, !1896, !1926, !1931, !1956, !1963, !1968, !1976, !1986, !2013, !2137, !2141, !2148, !2166, !2171, !2175, !2181, !2188, !2193}
!1586 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1587, line: 39, baseType: !300, size: 32, elements: !1588)
!1587 = !DIFile(filename: "blender/source/blender/windowmanager/wm_event_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1588 = !{!1589, !1590, !1591, !1592}
!1589 = !DIEnumerator(name: "EVT_DATA_GESTURE", value: 1, isUnsigned: true)
!1590 = !DIEnumerator(name: "EVT_DATA_TIMER", value: 2, isUnsigned: true)
!1591 = !DIEnumerator(name: "EVT_DATA_DRAGDROP", value: 3, isUnsigned: true)
!1592 = !DIEnumerator(name: "EVT_DATA_NDOF_MOTION", value: 4, isUnsigned: true)
!1593 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1594, line: 123, baseType: !300, size: 32, elements: !1595)
!1594 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_global.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1595 = !{!1596, !1597, !1598, !1599, !1600, !1601, !1602, !1603, !1604}
!1596 = !DIEnumerator(name: "G_DEBUG", value: 1, isUnsigned: true)
!1597 = !DIEnumerator(name: "G_DEBUG_FFMPEG", value: 2, isUnsigned: true)
!1598 = !DIEnumerator(name: "G_DEBUG_PYTHON", value: 4, isUnsigned: true)
!1599 = !DIEnumerator(name: "G_DEBUG_EVENTS", value: 8, isUnsigned: true)
!1600 = !DIEnumerator(name: "G_DEBUG_HANDLERS", value: 16, isUnsigned: true)
!1601 = !DIEnumerator(name: "G_DEBUG_WM", value: 32, isUnsigned: true)
!1602 = !DIEnumerator(name: "G_DEBUG_JOBS", value: 64, isUnsigned: true)
!1603 = !DIEnumerator(name: "G_DEBUG_FREESTYLE", value: 128, isUnsigned: true)
!1604 = !DIEnumerator(name: "G_DEBUG_DEPSGRAPH", value: 256, isUnsigned: true)
!1605 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !234, line: 361, baseType: !300, size: 32, elements: !1606)
!1606 = !{!1607, !1608, !1609, !1610, !1611, !1612, !1613, !1614}
!1607 = !DIEnumerator(name: "RGN_TYPE_WINDOW", value: 0, isUnsigned: true)
!1608 = !DIEnumerator(name: "RGN_TYPE_HEADER", value: 1, isUnsigned: true)
!1609 = !DIEnumerator(name: "RGN_TYPE_CHANNELS", value: 2, isUnsigned: true)
!1610 = !DIEnumerator(name: "RGN_TYPE_TEMPORARY", value: 3, isUnsigned: true)
!1611 = !DIEnumerator(name: "RGN_TYPE_UI", value: 4, isUnsigned: true)
!1612 = !DIEnumerator(name: "RGN_TYPE_TOOLS", value: 5, isUnsigned: true)
!1613 = !DIEnumerator(name: "RGN_TYPE_TOOL_PROPS", value: 6, isUnsigned: true)
!1614 = !DIEnumerator(name: "RGN_TYPE_PREVIEW", value: 7, isUnsigned: true)
!1615 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ReportType", file: !8, line: 67, baseType: !300, size: 32, elements: !1616)
!1616 = !{!1617, !1618, !1619, !1620, !1621, !1622, !1623, !1624, !1625}
!1617 = !DIEnumerator(name: "RPT_DEBUG", value: 1, isUnsigned: true)
!1618 = !DIEnumerator(name: "RPT_INFO", value: 2, isUnsigned: true)
!1619 = !DIEnumerator(name: "RPT_OPERATOR", value: 4, isUnsigned: true)
!1620 = !DIEnumerator(name: "RPT_PROPERTY", value: 8, isUnsigned: true)
!1621 = !DIEnumerator(name: "RPT_WARNING", value: 16, isUnsigned: true)
!1622 = !DIEnumerator(name: "RPT_ERROR", value: 32, isUnsigned: true)
!1623 = !DIEnumerator(name: "RPT_ERROR_INVALID_INPUT", value: 64, isUnsigned: true)
!1624 = !DIEnumerator(name: "RPT_ERROR_INVALID_CONTEXT", value: 128, isUnsigned: true)
!1625 = !DIEnumerator(name: "RPT_ERROR_OUT_OF_MEMORY", value: 256, isUnsigned: true)
!1626 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "ReportListFlags", file: !8, line: 86, baseType: !300, size: 32, elements: !1627)
!1627 = !{!1628, !1629, !1630, !1631}
!1628 = !DIEnumerator(name: "RPT_PRINT", value: 1, isUnsigned: true)
!1629 = !DIEnumerator(name: "RPT_STORE", value: 2, isUnsigned: true)
!1630 = !DIEnumerator(name: "RPT_FREE", value: 4, isUnsigned: true)
!1631 = !DIEnumerator(name: "RPT_OP_HOLD", value: 8, isUnsigned: true)
!1632 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "PropertyFlag", file: !144, line: 151, baseType: !300, size: 32, elements: !1633)
!1633 = !{!1634, !1635, !1636, !1637, !1638, !1639, !1640, !1641, !1642, !1643, !1644, !1645, !1646, !1647, !1648, !1649, !1650, !1651, !1652, !1653, !1654, !1655, !1656, !1657, !1658, !1659, !1660, !1661, !1662, !1663, !1664}
!1634 = !DIEnumerator(name: "PROP_EDITABLE", value: 1, isUnsigned: true)
!1635 = !DIEnumerator(name: "PROP_LIB_EXCEPTION", value: 65536, isUnsigned: true)
!1636 = !DIEnumerator(name: "PROP_ANIMATABLE", value: 2, isUnsigned: true)
!1637 = !DIEnumerator(name: "PROP_ICONS_CONSECUTIVE", value: 4096, isUnsigned: true)
!1638 = !DIEnumerator(name: "PROP_HIDDEN", value: 524288, isUnsigned: true)
!1639 = !DIEnumerator(name: "PROP_SKIP_SAVE", value: 268435456, isUnsigned: true)
!1640 = !DIEnumerator(name: "PROP_REQUIRED", value: 4, isUnsigned: true)
!1641 = !DIEnumerator(name: "PROP_OUTPUT", value: 8, isUnsigned: true)
!1642 = !DIEnumerator(name: "PROP_RNAPTR", value: 2048, isUnsigned: true)
!1643 = !DIEnumerator(name: "PROP_PYFUNC_OPTIONAL", value: 1073741824, isUnsigned: true)
!1644 = !DIEnumerator(name: "PROP_REGISTER", value: 16, isUnsigned: true)
!1645 = !DIEnumerator(name: "PROP_REGISTER_OPTIONAL", value: 48, isUnsigned: true)
!1646 = !DIEnumerator(name: "PROP_PROPORTIONAL", value: 67108864, isUnsigned: true)
!1647 = !DIEnumerator(name: "PROP_ID_REFCOUNT", value: 64, isUnsigned: true)
!1648 = !DIEnumerator(name: "PROP_ID_SELF_CHECK", value: 1048576, isUnsigned: true)
!1649 = !DIEnumerator(name: "PROP_NEVER_NULL", value: 262144, isUnsigned: true)
!1650 = !DIEnumerator(name: "PROP_NEVER_UNLINK", value: 33554432, isUnsigned: true)
!1651 = !DIEnumerator(name: "PROP_ENUM_FLAG", value: 2097152, isUnsigned: true)
!1652 = !DIEnumerator(name: "PROP_CONTEXT_UPDATE", value: 4194304, isUnsigned: true)
!1653 = !DIEnumerator(name: "PROP_CONTEXT_PROPERTY_UPDATE", value: 138412032, isUnsigned: true)
!1654 = !DIEnumerator(name: "PROP_THICK_WRAP", value: 8388608, isUnsigned: true)
!1655 = !DIEnumerator(name: "PROP_BUILTIN", value: 128, isUnsigned: true)
!1656 = !DIEnumerator(name: "PROP_EXPORT", value: 256, isUnsigned: true)
!1657 = !DIEnumerator(name: "PROP_RUNTIME", value: 512, isUnsigned: true)
!1658 = !DIEnumerator(name: "PROP_IDPROPERTY", value: 1024, isUnsigned: true)
!1659 = !DIEnumerator(name: "PROP_RAW_ACCESS", value: 8192, isUnsigned: true)
!1660 = !DIEnumerator(name: "PROP_RAW_ARRAY", value: 16384, isUnsigned: true)
!1661 = !DIEnumerator(name: "PROP_FREE_POINTERS", value: 32768, isUnsigned: true)
!1662 = !DIEnumerator(name: "PROP_DYNAMIC", value: 131072, isUnsigned: true)
!1663 = !DIEnumerator(name: "PROP_ENUM_NO_CONTEXT", value: 16777216, isUnsigned: true)
!1664 = !DIEnumerator(name: "PROP_ENUM_NO_TRANSLATE", value: 536870912, isUnsigned: true)
!1665 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !8, line: 351, baseType: !300, size: 32, elements: !1666)
!1666 = !{!1667, !1668, !1669, !1670, !1671, !1672}
!1667 = !DIEnumerator(name: "OPERATOR_RUNNING_MODAL", value: 1, isUnsigned: true)
!1668 = !DIEnumerator(name: "OPERATOR_CANCELLED", value: 2, isUnsigned: true)
!1669 = !DIEnumerator(name: "OPERATOR_FINISHED", value: 4, isUnsigned: true)
!1670 = !DIEnumerator(name: "OPERATOR_PASS_THROUGH", value: 8, isUnsigned: true)
!1671 = !DIEnumerator(name: "OPERATOR_HANDLED", value: 16, isUnsigned: true)
!1672 = !DIEnumerator(name: "OPERATOR_INTERFACE", value: 32, isUnsigned: true)
!1673 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eUserPref_Flag", file: !1674, line: 569, baseType: !300, size: 32, elements: !1675)
!1674 = !DIFile(filename: "blender/source/blender/makesdna/DNA_userdef_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1675 = !{!1676, !1677, !1678, !1679, !1680, !1681, !1682, !1683, !1684, !1685, !1686, !1687, !1688, !1689, !1690, !1691, !1692, !1693, !1694, !1695}
!1676 = !DIEnumerator(name: "USER_AUTOSAVE", value: 1, isUnsigned: true)
!1677 = !DIEnumerator(name: "USER_SCENEGLOBAL", value: 16, isUnsigned: true)
!1678 = !DIEnumerator(name: "USER_TRACKBALL", value: 32, isUnsigned: true)
!1679 = !DIEnumerator(name: "USER_MAT_ON_OB", value: 256, isUnsigned: true)
!1680 = !DIEnumerator(name: "USER_TOOLTIPS", value: 2048, isUnsigned: true)
!1681 = !DIEnumerator(name: "USER_TWOBUTTONMOUSE", value: 4096, isUnsigned: true)
!1682 = !DIEnumerator(name: "USER_NONUMPAD", value: 8192, isUnsigned: true)
!1683 = !DIEnumerator(name: "USER_LMOUSESELECT", value: 16384, isUnsigned: true)
!1684 = !DIEnumerator(name: "USER_FILECOMPRESS", value: 32768, isUnsigned: true)
!1685 = !DIEnumerator(name: "USER_SAVE_PREVIEWS", value: 65536, isUnsigned: true)
!1686 = !DIEnumerator(name: "USER_CUSTOM_RANGE", value: 131072, isUnsigned: true)
!1687 = !DIEnumerator(name: "USER_ADD_EDITMODE", value: 262144, isUnsigned: true)
!1688 = !DIEnumerator(name: "USER_ADD_VIEWALIGNED", value: 524288, isUnsigned: true)
!1689 = !DIEnumerator(name: "USER_RELPATHS", value: 1048576, isUnsigned: true)
!1690 = !DIEnumerator(name: "USER_RELEASECONFIRM", value: 2097152, isUnsigned: true)
!1691 = !DIEnumerator(name: "USER_SCRIPT_AUTOEXEC_DISABLE", value: 4194304, isUnsigned: true)
!1692 = !DIEnumerator(name: "USER_FILENOUI", value: 8388608, isUnsigned: true)
!1693 = !DIEnumerator(name: "USER_NONEGFRAMES", value: 16777216, isUnsigned: true)
!1694 = !DIEnumerator(name: "USER_TXT_TABSTOSPACES_DISABLE", value: 33554432, isUnsigned: true)
!1695 = !DIEnumerator(name: "USER_TOOLTIPS_PYTHON", value: 67108864, isUnsigned: true)
!1696 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1587, line: 54, baseType: !300, size: 32, elements: !1697)
!1697 = !{!1698, !1699, !1700, !1701, !1702, !1703, !1704, !1705, !1706, !1707, !1708, !1709, !1710, !1711, !1712, !1713, !1714, !1715, !1716, !1717, !1718, !1719, !1720, !1721, !1722, !1723, !1724, !1725, !1726, !1727, !1728, !1729, !1730, !1731, !1732, !1733, !1734, !1735, !1736, !1737, !1738, !1739, !1740, !1741, !1742, !1743, !1744, !1745, !1746, !1747, !1748, !1749, !1750, !1751, !1752, !1753, !1754, !1755, !1756, !1757, !1758, !1759, !1760, !1761, !1762, !1763, !1764, !1765, !1766, !1767, !1768, !1769, !1770, !1771, !1772, !1773, !1774, !1775, !1776, !1777, !1778, !1779, !1780, !1781, !1782, !1783, !1784, !1785, !1786, !1787, !1788, !1789, !1790, !1791, !1792, !1793, !1794, !1795, !1796, !1797, !1798, !1799, !1800, !1801, !1802, !1803, !1804, !1805, !1806, !1807, !1808, !1809, !1810, !1811, !1812, !1813, !1814, !1815, !1816, !1817, !1818, !1819, !1820, !1821, !1822, !1823, !1824, !1825, !1826, !1827, !1828, !1829, !1830, !1831, !1832, !1833, !1834, !1835, !1836, !1837, !1838, !1839, !1840, !1841, !1842, !1843, !1844, !1845, !1846, !1847, !1848, !1849, !1850, !1851, !1852, !1853, !1854, !1855, !1856, !1857, !1858, !1859, !1860, !1861, !1862, !1863, !1864, !1865, !1866, !1867, !1868, !1869, !1870, !1871, !1872, !1873, !1874, !1875, !1876, !1877, !1878, !1879, !1880, !1881, !1882, !1883, !1884, !1885, !1886, !1887, !1888, !1889, !1890, !1891, !1892, !1893, !1894, !1895}
!1698 = !DIEnumerator(name: "EVENT_NONE", value: 0, isUnsigned: true)
!1699 = !DIEnumerator(name: "LEFTMOUSE", value: 1, isUnsigned: true)
!1700 = !DIEnumerator(name: "MIDDLEMOUSE", value: 2, isUnsigned: true)
!1701 = !DIEnumerator(name: "RIGHTMOUSE", value: 3, isUnsigned: true)
!1702 = !DIEnumerator(name: "MOUSEMOVE", value: 4, isUnsigned: true)
!1703 = !DIEnumerator(name: "ACTIONMOUSE", value: 5, isUnsigned: true)
!1704 = !DIEnumerator(name: "SELECTMOUSE", value: 6, isUnsigned: true)
!1705 = !DIEnumerator(name: "BUTTON4MOUSE", value: 7, isUnsigned: true)
!1706 = !DIEnumerator(name: "BUTTON5MOUSE", value: 8, isUnsigned: true)
!1707 = !DIEnumerator(name: "BUTTON6MOUSE", value: 18, isUnsigned: true)
!1708 = !DIEnumerator(name: "BUTTON7MOUSE", value: 19, isUnsigned: true)
!1709 = !DIEnumerator(name: "MOUSEPAN", value: 14, isUnsigned: true)
!1710 = !DIEnumerator(name: "MOUSEZOOM", value: 15, isUnsigned: true)
!1711 = !DIEnumerator(name: "MOUSEROTATE", value: 16, isUnsigned: true)
!1712 = !DIEnumerator(name: "WHEELUPMOUSE", value: 10, isUnsigned: true)
!1713 = !DIEnumerator(name: "WHEELDOWNMOUSE", value: 11, isUnsigned: true)
!1714 = !DIEnumerator(name: "WHEELINMOUSE", value: 12, isUnsigned: true)
!1715 = !DIEnumerator(name: "WHEELOUTMOUSE", value: 13, isUnsigned: true)
!1716 = !DIEnumerator(name: "INBETWEEN_MOUSEMOVE", value: 17, isUnsigned: true)
!1717 = !DIEnumerator(name: "AKEY", value: 97, isUnsigned: true)
!1718 = !DIEnumerator(name: "BKEY", value: 98, isUnsigned: true)
!1719 = !DIEnumerator(name: "CKEY", value: 99, isUnsigned: true)
!1720 = !DIEnumerator(name: "DKEY", value: 100, isUnsigned: true)
!1721 = !DIEnumerator(name: "EKEY", value: 101, isUnsigned: true)
!1722 = !DIEnumerator(name: "FKEY", value: 102, isUnsigned: true)
!1723 = !DIEnumerator(name: "GKEY", value: 103, isUnsigned: true)
!1724 = !DIEnumerator(name: "HKEY", value: 104, isUnsigned: true)
!1725 = !DIEnumerator(name: "IKEY", value: 105, isUnsigned: true)
!1726 = !DIEnumerator(name: "JKEY", value: 106, isUnsigned: true)
!1727 = !DIEnumerator(name: "KKEY", value: 107, isUnsigned: true)
!1728 = !DIEnumerator(name: "LKEY", value: 108, isUnsigned: true)
!1729 = !DIEnumerator(name: "MKEY", value: 109, isUnsigned: true)
!1730 = !DIEnumerator(name: "NKEY", value: 110, isUnsigned: true)
!1731 = !DIEnumerator(name: "OKEY", value: 111, isUnsigned: true)
!1732 = !DIEnumerator(name: "PKEY", value: 112, isUnsigned: true)
!1733 = !DIEnumerator(name: "QKEY", value: 113, isUnsigned: true)
!1734 = !DIEnumerator(name: "RKEY", value: 114, isUnsigned: true)
!1735 = !DIEnumerator(name: "SKEY", value: 115, isUnsigned: true)
!1736 = !DIEnumerator(name: "TKEY", value: 116, isUnsigned: true)
!1737 = !DIEnumerator(name: "UKEY", value: 117, isUnsigned: true)
!1738 = !DIEnumerator(name: "VKEY", value: 118, isUnsigned: true)
!1739 = !DIEnumerator(name: "WKEY", value: 119, isUnsigned: true)
!1740 = !DIEnumerator(name: "XKEY", value: 120, isUnsigned: true)
!1741 = !DIEnumerator(name: "YKEY", value: 121, isUnsigned: true)
!1742 = !DIEnumerator(name: "ZKEY", value: 122, isUnsigned: true)
!1743 = !DIEnumerator(name: "ZEROKEY", value: 48, isUnsigned: true)
!1744 = !DIEnumerator(name: "ONEKEY", value: 49, isUnsigned: true)
!1745 = !DIEnumerator(name: "TWOKEY", value: 50, isUnsigned: true)
!1746 = !DIEnumerator(name: "THREEKEY", value: 51, isUnsigned: true)
!1747 = !DIEnumerator(name: "FOURKEY", value: 52, isUnsigned: true)
!1748 = !DIEnumerator(name: "FIVEKEY", value: 53, isUnsigned: true)
!1749 = !DIEnumerator(name: "SIXKEY", value: 54, isUnsigned: true)
!1750 = !DIEnumerator(name: "SEVENKEY", value: 55, isUnsigned: true)
!1751 = !DIEnumerator(name: "EIGHTKEY", value: 56, isUnsigned: true)
!1752 = !DIEnumerator(name: "NINEKEY", value: 57, isUnsigned: true)
!1753 = !DIEnumerator(name: "CAPSLOCKKEY", value: 211, isUnsigned: true)
!1754 = !DIEnumerator(name: "LEFTCTRLKEY", value: 212, isUnsigned: true)
!1755 = !DIEnumerator(name: "LEFTALTKEY", value: 213, isUnsigned: true)
!1756 = !DIEnumerator(name: "RIGHTALTKEY", value: 214, isUnsigned: true)
!1757 = !DIEnumerator(name: "RIGHTCTRLKEY", value: 215, isUnsigned: true)
!1758 = !DIEnumerator(name: "RIGHTSHIFTKEY", value: 216, isUnsigned: true)
!1759 = !DIEnumerator(name: "LEFTSHIFTKEY", value: 217, isUnsigned: true)
!1760 = !DIEnumerator(name: "ESCKEY", value: 218, isUnsigned: true)
!1761 = !DIEnumerator(name: "TABKEY", value: 219, isUnsigned: true)
!1762 = !DIEnumerator(name: "RETKEY", value: 220, isUnsigned: true)
!1763 = !DIEnumerator(name: "SPACEKEY", value: 221, isUnsigned: true)
!1764 = !DIEnumerator(name: "LINEFEEDKEY", value: 222, isUnsigned: true)
!1765 = !DIEnumerator(name: "BACKSPACEKEY", value: 223, isUnsigned: true)
!1766 = !DIEnumerator(name: "DELKEY", value: 224, isUnsigned: true)
!1767 = !DIEnumerator(name: "SEMICOLONKEY", value: 225, isUnsigned: true)
!1768 = !DIEnumerator(name: "PERIODKEY", value: 226, isUnsigned: true)
!1769 = !DIEnumerator(name: "COMMAKEY", value: 227, isUnsigned: true)
!1770 = !DIEnumerator(name: "QUOTEKEY", value: 228, isUnsigned: true)
!1771 = !DIEnumerator(name: "ACCENTGRAVEKEY", value: 229, isUnsigned: true)
!1772 = !DIEnumerator(name: "MINUSKEY", value: 230, isUnsigned: true)
!1773 = !DIEnumerator(name: "SLASHKEY", value: 232, isUnsigned: true)
!1774 = !DIEnumerator(name: "BACKSLASHKEY", value: 233, isUnsigned: true)
!1775 = !DIEnumerator(name: "EQUALKEY", value: 234, isUnsigned: true)
!1776 = !DIEnumerator(name: "LEFTBRACKETKEY", value: 235, isUnsigned: true)
!1777 = !DIEnumerator(name: "RIGHTBRACKETKEY", value: 236, isUnsigned: true)
!1778 = !DIEnumerator(name: "LEFTARROWKEY", value: 137, isUnsigned: true)
!1779 = !DIEnumerator(name: "DOWNARROWKEY", value: 138, isUnsigned: true)
!1780 = !DIEnumerator(name: "RIGHTARROWKEY", value: 139, isUnsigned: true)
!1781 = !DIEnumerator(name: "UPARROWKEY", value: 140, isUnsigned: true)
!1782 = !DIEnumerator(name: "PAD0", value: 150, isUnsigned: true)
!1783 = !DIEnumerator(name: "PAD1", value: 151, isUnsigned: true)
!1784 = !DIEnumerator(name: "PAD2", value: 152, isUnsigned: true)
!1785 = !DIEnumerator(name: "PAD3", value: 153, isUnsigned: true)
!1786 = !DIEnumerator(name: "PAD4", value: 154, isUnsigned: true)
!1787 = !DIEnumerator(name: "PAD5", value: 155, isUnsigned: true)
!1788 = !DIEnumerator(name: "PAD6", value: 156, isUnsigned: true)
!1789 = !DIEnumerator(name: "PAD7", value: 157, isUnsigned: true)
!1790 = !DIEnumerator(name: "PAD8", value: 158, isUnsigned: true)
!1791 = !DIEnumerator(name: "PAD9", value: 159, isUnsigned: true)
!1792 = !DIEnumerator(name: "PADPERIOD", value: 199, isUnsigned: true)
!1793 = !DIEnumerator(name: "PADASTERKEY", value: 160, isUnsigned: true)
!1794 = !DIEnumerator(name: "PADSLASHKEY", value: 161, isUnsigned: true)
!1795 = !DIEnumerator(name: "PADMINUS", value: 162, isUnsigned: true)
!1796 = !DIEnumerator(name: "PADENTER", value: 163, isUnsigned: true)
!1797 = !DIEnumerator(name: "PADPLUSKEY", value: 164, isUnsigned: true)
!1798 = !DIEnumerator(name: "PAUSEKEY", value: 165, isUnsigned: true)
!1799 = !DIEnumerator(name: "INSERTKEY", value: 166, isUnsigned: true)
!1800 = !DIEnumerator(name: "HOMEKEY", value: 167, isUnsigned: true)
!1801 = !DIEnumerator(name: "PAGEUPKEY", value: 168, isUnsigned: true)
!1802 = !DIEnumerator(name: "PAGEDOWNKEY", value: 169, isUnsigned: true)
!1803 = !DIEnumerator(name: "ENDKEY", value: 170, isUnsigned: true)
!1804 = !DIEnumerator(name: "UNKNOWNKEY", value: 171, isUnsigned: true)
!1805 = !DIEnumerator(name: "OSKEY", value: 172, isUnsigned: true)
!1806 = !DIEnumerator(name: "GRLESSKEY", value: 173, isUnsigned: true)
!1807 = !DIEnumerator(name: "MEDIAPLAY", value: 174, isUnsigned: true)
!1808 = !DIEnumerator(name: "MEDIASTOP", value: 175, isUnsigned: true)
!1809 = !DIEnumerator(name: "MEDIAFIRST", value: 176, isUnsigned: true)
!1810 = !DIEnumerator(name: "MEDIALAST", value: 177, isUnsigned: true)
!1811 = !DIEnumerator(name: "F1KEY", value: 300, isUnsigned: true)
!1812 = !DIEnumerator(name: "F2KEY", value: 301, isUnsigned: true)
!1813 = !DIEnumerator(name: "F3KEY", value: 302, isUnsigned: true)
!1814 = !DIEnumerator(name: "F4KEY", value: 303, isUnsigned: true)
!1815 = !DIEnumerator(name: "F5KEY", value: 304, isUnsigned: true)
!1816 = !DIEnumerator(name: "F6KEY", value: 305, isUnsigned: true)
!1817 = !DIEnumerator(name: "F7KEY", value: 306, isUnsigned: true)
!1818 = !DIEnumerator(name: "F8KEY", value: 307, isUnsigned: true)
!1819 = !DIEnumerator(name: "F9KEY", value: 308, isUnsigned: true)
!1820 = !DIEnumerator(name: "F10KEY", value: 309, isUnsigned: true)
!1821 = !DIEnumerator(name: "F11KEY", value: 310, isUnsigned: true)
!1822 = !DIEnumerator(name: "F12KEY", value: 311, isUnsigned: true)
!1823 = !DIEnumerator(name: "F13KEY", value: 312, isUnsigned: true)
!1824 = !DIEnumerator(name: "F14KEY", value: 313, isUnsigned: true)
!1825 = !DIEnumerator(name: "F15KEY", value: 314, isUnsigned: true)
!1826 = !DIEnumerator(name: "F16KEY", value: 315, isUnsigned: true)
!1827 = !DIEnumerator(name: "F17KEY", value: 316, isUnsigned: true)
!1828 = !DIEnumerator(name: "F18KEY", value: 317, isUnsigned: true)
!1829 = !DIEnumerator(name: "F19KEY", value: 318, isUnsigned: true)
!1830 = !DIEnumerator(name: "NDOF_MOTION", value: 400, isUnsigned: true)
!1831 = !DIEnumerator(name: "NDOF_BUTTON_NONE", value: 400, isUnsigned: true)
!1832 = !DIEnumerator(name: "NDOF_BUTTON_MENU", value: 401, isUnsigned: true)
!1833 = !DIEnumerator(name: "NDOF_BUTTON_FIT", value: 402, isUnsigned: true)
!1834 = !DIEnumerator(name: "NDOF_BUTTON_TOP", value: 403, isUnsigned: true)
!1835 = !DIEnumerator(name: "NDOF_BUTTON_BOTTOM", value: 404, isUnsigned: true)
!1836 = !DIEnumerator(name: "NDOF_BUTTON_LEFT", value: 405, isUnsigned: true)
!1837 = !DIEnumerator(name: "NDOF_BUTTON_RIGHT", value: 406, isUnsigned: true)
!1838 = !DIEnumerator(name: "NDOF_BUTTON_FRONT", value: 407, isUnsigned: true)
!1839 = !DIEnumerator(name: "NDOF_BUTTON_BACK", value: 408, isUnsigned: true)
!1840 = !DIEnumerator(name: "NDOF_BUTTON_ISO1", value: 409, isUnsigned: true)
!1841 = !DIEnumerator(name: "NDOF_BUTTON_ISO2", value: 410, isUnsigned: true)
!1842 = !DIEnumerator(name: "NDOF_BUTTON_ROLL_CW", value: 411, isUnsigned: true)
!1843 = !DIEnumerator(name: "NDOF_BUTTON_ROLL_CCW", value: 412, isUnsigned: true)
!1844 = !DIEnumerator(name: "NDOF_BUTTON_SPIN_CW", value: 413, isUnsigned: true)
!1845 = !DIEnumerator(name: "NDOF_BUTTON_SPIN_CCW", value: 414, isUnsigned: true)
!1846 = !DIEnumerator(name: "NDOF_BUTTON_TILT_CW", value: 415, isUnsigned: true)
!1847 = !DIEnumerator(name: "NDOF_BUTTON_TILT_CCW", value: 416, isUnsigned: true)
!1848 = !DIEnumerator(name: "NDOF_BUTTON_ROTATE", value: 417, isUnsigned: true)
!1849 = !DIEnumerator(name: "NDOF_BUTTON_PANZOOM", value: 418, isUnsigned: true)
!1850 = !DIEnumerator(name: "NDOF_BUTTON_DOMINANT", value: 419, isUnsigned: true)
!1851 = !DIEnumerator(name: "NDOF_BUTTON_PLUS", value: 420, isUnsigned: true)
!1852 = !DIEnumerator(name: "NDOF_BUTTON_MINUS", value: 421, isUnsigned: true)
!1853 = !DIEnumerator(name: "NDOF_BUTTON_ESC", value: 422, isUnsigned: true)
!1854 = !DIEnumerator(name: "NDOF_BUTTON_ALT", value: 423, isUnsigned: true)
!1855 = !DIEnumerator(name: "NDOF_BUTTON_SHIFT", value: 424, isUnsigned: true)
!1856 = !DIEnumerator(name: "NDOF_BUTTON_CTRL", value: 425, isUnsigned: true)
!1857 = !DIEnumerator(name: "NDOF_BUTTON_1", value: 426, isUnsigned: true)
!1858 = !DIEnumerator(name: "NDOF_BUTTON_2", value: 427, isUnsigned: true)
!1859 = !DIEnumerator(name: "NDOF_BUTTON_3", value: 428, isUnsigned: true)
!1860 = !DIEnumerator(name: "NDOF_BUTTON_4", value: 429, isUnsigned: true)
!1861 = !DIEnumerator(name: "NDOF_BUTTON_5", value: 430, isUnsigned: true)
!1862 = !DIEnumerator(name: "NDOF_BUTTON_6", value: 431, isUnsigned: true)
!1863 = !DIEnumerator(name: "NDOF_BUTTON_7", value: 432, isUnsigned: true)
!1864 = !DIEnumerator(name: "NDOF_BUTTON_8", value: 433, isUnsigned: true)
!1865 = !DIEnumerator(name: "NDOF_BUTTON_9", value: 434, isUnsigned: true)
!1866 = !DIEnumerator(name: "NDOF_BUTTON_10", value: 435, isUnsigned: true)
!1867 = !DIEnumerator(name: "NDOF_BUTTON_A", value: 436, isUnsigned: true)
!1868 = !DIEnumerator(name: "NDOF_BUTTON_B", value: 437, isUnsigned: true)
!1869 = !DIEnumerator(name: "NDOF_BUTTON_C", value: 438, isUnsigned: true)
!1870 = !DIEnumerator(name: "NDOF_LAST", value: 439, isUnsigned: true)
!1871 = !DIEnumerator(name: "INPUTCHANGE", value: 259, isUnsigned: true)
!1872 = !DIEnumerator(name: "WINDEACTIVATE", value: 260, isUnsigned: true)
!1873 = !DIEnumerator(name: "TIMER", value: 272, isUnsigned: true)
!1874 = !DIEnumerator(name: "TIMER0", value: 273, isUnsigned: true)
!1875 = !DIEnumerator(name: "TIMER1", value: 274, isUnsigned: true)
!1876 = !DIEnumerator(name: "TIMER2", value: 275, isUnsigned: true)
!1877 = !DIEnumerator(name: "TIMERJOBS", value: 276, isUnsigned: true)
!1878 = !DIEnumerator(name: "TIMERAUTOSAVE", value: 277, isUnsigned: true)
!1879 = !DIEnumerator(name: "TIMERREPORT", value: 278, isUnsigned: true)
!1880 = !DIEnumerator(name: "TIMERREGION", value: 279, isUnsigned: true)
!1881 = !DIEnumerator(name: "TIMERF", value: 287, isUnsigned: true)
!1882 = !DIEnumerator(name: "EVT_ACTIONZONE_AREA", value: 20480, isUnsigned: true)
!1883 = !DIEnumerator(name: "EVT_ACTIONZONE_REGION", value: 20481, isUnsigned: true)
!1884 = !DIEnumerator(name: "EVT_ACTIONZONE_FULLSCREEN", value: 20482, isUnsigned: true)
!1885 = !DIEnumerator(name: "EVT_TWEAK_L", value: 20483, isUnsigned: true)
!1886 = !DIEnumerator(name: "EVT_TWEAK_M", value: 20484, isUnsigned: true)
!1887 = !DIEnumerator(name: "EVT_TWEAK_R", value: 20485, isUnsigned: true)
!1888 = !DIEnumerator(name: "EVT_TWEAK_A", value: 20486, isUnsigned: true)
!1889 = !DIEnumerator(name: "EVT_TWEAK_S", value: 20487, isUnsigned: true)
!1890 = !DIEnumerator(name: "EVT_GESTURE", value: 20496, isUnsigned: true)
!1891 = !DIEnumerator(name: "EVT_FILESELECT", value: 20512, isUnsigned: true)
!1892 = !DIEnumerator(name: "EVT_BUT_OPEN", value: 20513, isUnsigned: true)
!1893 = !DIEnumerator(name: "EVT_MODAL_MAP", value: 20514, isUnsigned: true)
!1894 = !DIEnumerator(name: "EVT_DROP", value: 20515, isUnsigned: true)
!1895 = !DIEnumerator(name: "EVT_BUT_CANCEL", value: 20516, isUnsigned: true)
!1896 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eUserpref_UI_Flag", file: !1674, line: 630, baseType: !34, size: 32, elements: !1897)
!1897 = !{!1898, !1899, !1900, !1901, !1902, !1903, !1904, !1905, !1906, !1907, !1908, !1909, !1910, !1911, !1912, !1913, !1914, !1915, !1916, !1917, !1918, !1919, !1920, !1921, !1922, !1923, !1924, !1925}
!1898 = !DIEnumerator(name: "USER_WHEELZOOMDIR", value: 4)
!1899 = !DIEnumerator(name: "USER_FILTERFILEEXTS", value: 8)
!1900 = !DIEnumerator(name: "USER_DRAWVIEWINFO", value: 16)
!1901 = !DIEnumerator(name: "USER_PLAINMENUS", value: 32)
!1902 = !DIEnumerator(name: "USER_ALLWINCODECS", value: 256)
!1903 = !DIEnumerator(name: "USER_MENUOPENAUTO", value: 512)
!1904 = !DIEnumerator(name: "USER_ZBUF_CURSOR", value: 1024)
!1905 = !DIEnumerator(name: "USER_AUTOPERSP", value: 2048)
!1906 = !DIEnumerator(name: "USER_LOCKAROUND", value: 4096)
!1907 = !DIEnumerator(name: "USER_GLOBALUNDO", value: 8192)
!1908 = !DIEnumerator(name: "USER_ORBIT_SELECTION", value: 16384)
!1909 = !DIEnumerator(name: "USER_ZBUF_ORBIT", value: 32768)
!1910 = !DIEnumerator(name: "USER_HIDE_DOT", value: 65536)
!1911 = !DIEnumerator(name: "USER_SHOW_ROTVIEWICON", value: 131072)
!1912 = !DIEnumerator(name: "USER_SHOW_VIEWPORTNAME", value: 262144)
!1913 = !DIEnumerator(name: "USER_CAM_LOCK_NO_PARENT", value: 524288)
!1914 = !DIEnumerator(name: "USER_ZOOM_TO_MOUSEPOS", value: 1048576)
!1915 = !DIEnumerator(name: "USER_SHOW_FPS", value: 2097152)
!1916 = !DIEnumerator(name: "USER_MMB_PASTE", value: 4194304)
!1917 = !DIEnumerator(name: "USER_MENUFIXEDORDER", value: 8388608)
!1918 = !DIEnumerator(name: "USER_CONTINUOUS_MOUSE", value: 16777216)
!1919 = !DIEnumerator(name: "USER_ZOOM_INVERT", value: 33554432)
!1920 = !DIEnumerator(name: "USER_ZOOM_HORIZ", value: 67108864)
!1921 = !DIEnumerator(name: "USER_SPLASH_DISABLE", value: 134217728)
!1922 = !DIEnumerator(name: "USER_HIDE_RECENT", value: 268435456)
!1923 = !DIEnumerator(name: "USER_SHOW_THUMBNAILS", value: 536870912)
!1924 = !DIEnumerator(name: "USER_QUIT_PROMPT", value: 1073741824)
!1925 = !DIEnumerator(name: "USER_HIDE_SYSTEM_BOOKMARKS", value: -2147483648)
!1926 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1927, line: 77, baseType: !300, size: 32, elements: !1928)
!1927 = !DIFile(filename: "blender/source/blender/windowmanager/wm_event_system.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1928 = !{!1929, !1930}
!1929 = !DIEnumerator(name: "WM_HANDLER_DEFAULT", value: 0, isUnsigned: true)
!1930 = !DIEnumerator(name: "WM_HANDLER_FILESELECT", value: 1, isUnsigned: true)
!1931 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eSpace_Type", file: !1932, line: 1163, baseType: !300, size: 32, elements: !1933)
!1932 = !DIFile(filename: "blender/source/blender/makesdna/DNA_space_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1933 = !{!1934, !1935, !1936, !1937, !1938, !1939, !1940, !1941, !1942, !1943, !1944, !1945, !1946, !1947, !1948, !1949, !1950, !1951, !1952, !1953, !1954, !1955}
!1934 = !DIEnumerator(name: "SPACE_EMPTY", value: 0, isUnsigned: true)
!1935 = !DIEnumerator(name: "SPACE_VIEW3D", value: 1, isUnsigned: true)
!1936 = !DIEnumerator(name: "SPACE_IPO", value: 2, isUnsigned: true)
!1937 = !DIEnumerator(name: "SPACE_OUTLINER", value: 3, isUnsigned: true)
!1938 = !DIEnumerator(name: "SPACE_BUTS", value: 4, isUnsigned: true)
!1939 = !DIEnumerator(name: "SPACE_FILE", value: 5, isUnsigned: true)
!1940 = !DIEnumerator(name: "SPACE_IMAGE", value: 6, isUnsigned: true)
!1941 = !DIEnumerator(name: "SPACE_INFO", value: 7, isUnsigned: true)
!1942 = !DIEnumerator(name: "SPACE_SEQ", value: 8, isUnsigned: true)
!1943 = !DIEnumerator(name: "SPACE_TEXT", value: 9, isUnsigned: true)
!1944 = !DIEnumerator(name: "SPACE_IMASEL", value: 10, isUnsigned: true)
!1945 = !DIEnumerator(name: "SPACE_SOUND", value: 11, isUnsigned: true)
!1946 = !DIEnumerator(name: "SPACE_ACTION", value: 12, isUnsigned: true)
!1947 = !DIEnumerator(name: "SPACE_NLA", value: 13, isUnsigned: true)
!1948 = !DIEnumerator(name: "SPACE_SCRIPT", value: 14, isUnsigned: true)
!1949 = !DIEnumerator(name: "SPACE_TIME", value: 15, isUnsigned: true)
!1950 = !DIEnumerator(name: "SPACE_NODE", value: 16, isUnsigned: true)
!1951 = !DIEnumerator(name: "SPACE_LOGIC", value: 17, isUnsigned: true)
!1952 = !DIEnumerator(name: "SPACE_CONSOLE", value: 18, isUnsigned: true)
!1953 = !DIEnumerator(name: "SPACE_USERPREF", value: 19, isUnsigned: true)
!1954 = !DIEnumerator(name: "SPACE_CLIP", value: 20, isUnsigned: true)
!1955 = !DIEnumerator(name: "SPACEICONMAX", value: 20, isUnsigned: true)
!1956 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1587, line: 384, baseType: !300, size: 32, elements: !1957)
!1957 = !{!1958, !1959, !1960, !1961, !1962}
!1958 = !DIEnumerator(name: "EVT_FILESELECT_OPEN", value: 1, isUnsigned: true)
!1959 = !DIEnumerator(name: "EVT_FILESELECT_FULL_OPEN", value: 2, isUnsigned: true)
!1960 = !DIEnumerator(name: "EVT_FILESELECT_EXEC", value: 3, isUnsigned: true)
!1961 = !DIEnumerator(name: "EVT_FILESELECT_CANCEL", value: 4, isUnsigned: true)
!1962 = !DIEnumerator(name: "EVT_FILESELECT_EXTERNAL_CANCEL", value: 5, isUnsigned: true)
!1963 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1927, line: 83, baseType: !300, size: 32, elements: !1964)
!1964 = !{!1965, !1966, !1967}
!1965 = !DIEnumerator(name: "WM_HANDLER_BLOCKING", value: 1, isUnsigned: true)
!1966 = !DIEnumerator(name: "WM_HANDLER_DO_FREE", value: 2, isUnsigned: true)
!1967 = !DIEnumerator(name: "WM_HANDLER_ACCEPT_DBL_CLICK", value: 4, isUnsigned: true)
!1968 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1969, line: 398, baseType: !300, size: 32, elements: !1970)
!1969 = !DIFile(filename: "blender/intern/ghost/GHOST_Types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!1970 = !{!1971, !1972, !1973, !1974, !1975}
!1971 = !DIEnumerator(name: "GHOST_kTrackpadEventUnknown", value: 0, isUnsigned: true)
!1972 = !DIEnumerator(name: "GHOST_kTrackpadEventScroll", value: 1, isUnsigned: true)
!1973 = !DIEnumerator(name: "GHOST_kTrackpadEventRotate", value: 2, isUnsigned: true)
!1974 = !DIEnumerator(name: "GHOST_kTrackpadEventSwipe", value: 3, isUnsigned: true)
!1975 = !DIEnumerator(name: "GHOST_kTrackpadEventMagnify", value: 4, isUnsigned: true)
!1976 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1969, line: 145, baseType: !300, size: 32, elements: !1977)
!1977 = !{!1978, !1979, !1980, !1981, !1982, !1983, !1984, !1985}
!1978 = !DIEnumerator(name: "GHOST_kButtonMaskLeft", value: 0, isUnsigned: true)
!1979 = !DIEnumerator(name: "GHOST_kButtonMaskMiddle", value: 1, isUnsigned: true)
!1980 = !DIEnumerator(name: "GHOST_kButtonMaskRight", value: 2, isUnsigned: true)
!1981 = !DIEnumerator(name: "GHOST_kButtonMaskButton4", value: 3, isUnsigned: true)
!1982 = !DIEnumerator(name: "GHOST_kButtonMaskButton5", value: 4, isUnsigned: true)
!1983 = !DIEnumerator(name: "GHOST_kButtonMaskButton6", value: 5, isUnsigned: true)
!1984 = !DIEnumerator(name: "GHOST_kButtonMaskButton7", value: 6, isUnsigned: true)
!1985 = !DIEnumerator(name: "GHOST_kButtonNumMasks", value: 7, isUnsigned: true)
!1986 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1969, line: 158, baseType: !300, size: 32, elements: !1987)
!1987 = !{!1988, !1989, !1990, !1991, !1992, !1993, !1994, !1995, !1996, !1997, !1998, !1999, !2000, !2001, !2002, !2003, !2004, !2005, !2006, !2007, !2008, !2009, !2010, !2011, !2012}
!1988 = !DIEnumerator(name: "GHOST_kEventUnknown", value: 0, isUnsigned: true)
!1989 = !DIEnumerator(name: "GHOST_kEventCursorMove", value: 1, isUnsigned: true)
!1990 = !DIEnumerator(name: "GHOST_kEventButtonDown", value: 2, isUnsigned: true)
!1991 = !DIEnumerator(name: "GHOST_kEventButtonUp", value: 3, isUnsigned: true)
!1992 = !DIEnumerator(name: "GHOST_kEventWheel", value: 4, isUnsigned: true)
!1993 = !DIEnumerator(name: "GHOST_kEventTrackpad", value: 5, isUnsigned: true)
!1994 = !DIEnumerator(name: "GHOST_kEventNDOFMotion", value: 6, isUnsigned: true)
!1995 = !DIEnumerator(name: "GHOST_kEventNDOFButton", value: 7, isUnsigned: true)
!1996 = !DIEnumerator(name: "GHOST_kEventKeyDown", value: 8, isUnsigned: true)
!1997 = !DIEnumerator(name: "GHOST_kEventKeyUp", value: 9, isUnsigned: true)
!1998 = !DIEnumerator(name: "GHOST_kEventQuit", value: 10, isUnsigned: true)
!1999 = !DIEnumerator(name: "GHOST_kEventWindowClose", value: 11, isUnsigned: true)
!2000 = !DIEnumerator(name: "GHOST_kEventWindowActivate", value: 12, isUnsigned: true)
!2001 = !DIEnumerator(name: "GHOST_kEventWindowDeactivate", value: 13, isUnsigned: true)
!2002 = !DIEnumerator(name: "GHOST_kEventWindowUpdate", value: 14, isUnsigned: true)
!2003 = !DIEnumerator(name: "GHOST_kEventWindowSize", value: 15, isUnsigned: true)
!2004 = !DIEnumerator(name: "GHOST_kEventWindowMove", value: 16, isUnsigned: true)
!2005 = !DIEnumerator(name: "GHOST_kEventDraggingEntered", value: 17, isUnsigned: true)
!2006 = !DIEnumerator(name: "GHOST_kEventDraggingUpdated", value: 18, isUnsigned: true)
!2007 = !DIEnumerator(name: "GHOST_kEventDraggingExited", value: 19, isUnsigned: true)
!2008 = !DIEnumerator(name: "GHOST_kEventDraggingDropDone", value: 20, isUnsigned: true)
!2009 = !DIEnumerator(name: "GHOST_kEventOpenMainFile", value: 21, isUnsigned: true)
!2010 = !DIEnumerator(name: "GHOST_kEventNativeResolutionChange", value: 22, isUnsigned: true)
!2011 = !DIEnumerator(name: "GHOST_kEventTimer", value: 23, isUnsigned: true)
!2012 = !DIEnumerator(name: "GHOST_kNumEventTypes", value: 24, isUnsigned: true)
!2013 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1969, line: 228, baseType: !34, size: 32, elements: !2014)
!2014 = !{!2015, !2016, !2017, !2018, !2019, !2020, !2021, !2022, !2023, !2024, !2025, !2026, !2027, !2028, !2029, !2030, !2031, !2032, !2033, !2034, !2035, !2036, !2037, !2038, !2039, !2040, !2041, !2042, !2043, !2044, !2045, !2046, !2047, !2048, !2049, !2050, !2051, !2052, !2053, !2054, !2055, !2056, !2057, !2058, !2059, !2060, !2061, !2062, !2063, !2064, !2065, !2066, !2067, !2068, !2069, !2070, !2071, !2072, !2073, !2074, !2075, !2076, !2077, !2078, !2079, !2080, !2081, !2082, !2083, !2084, !2085, !2086, !2087, !2088, !2089, !2090, !2091, !2092, !2093, !2094, !2095, !2096, !2097, !2098, !2099, !2100, !2101, !2102, !2103, !2104, !2105, !2106, !2107, !2108, !2109, !2110, !2111, !2112, !2113, !2114, !2115, !2116, !2117, !2118, !2119, !2120, !2121, !2122, !2123, !2124, !2125, !2126, !2127, !2128, !2129, !2130, !2131, !2132, !2133, !2134, !2135, !2136}
!2015 = !DIEnumerator(name: "GHOST_kKeyUnknown", value: -1)
!2016 = !DIEnumerator(name: "GHOST_kKeyBackSpace", value: 0)
!2017 = !DIEnumerator(name: "GHOST_kKeyTab", value: 1)
!2018 = !DIEnumerator(name: "GHOST_kKeyLinefeed", value: 2)
!2019 = !DIEnumerator(name: "GHOST_kKeyClear", value: 3)
!2020 = !DIEnumerator(name: "GHOST_kKeyEnter", value: 13)
!2021 = !DIEnumerator(name: "GHOST_kKeyEsc", value: 27)
!2022 = !DIEnumerator(name: "GHOST_kKeySpace", value: 32)
!2023 = !DIEnumerator(name: "GHOST_kKeyQuote", value: 39)
!2024 = !DIEnumerator(name: "GHOST_kKeyComma", value: 44)
!2025 = !DIEnumerator(name: "GHOST_kKeyMinus", value: 45)
!2026 = !DIEnumerator(name: "GHOST_kKeyPeriod", value: 46)
!2027 = !DIEnumerator(name: "GHOST_kKeySlash", value: 47)
!2028 = !DIEnumerator(name: "GHOST_kKey0", value: 48)
!2029 = !DIEnumerator(name: "GHOST_kKey1", value: 49)
!2030 = !DIEnumerator(name: "GHOST_kKey2", value: 50)
!2031 = !DIEnumerator(name: "GHOST_kKey3", value: 51)
!2032 = !DIEnumerator(name: "GHOST_kKey4", value: 52)
!2033 = !DIEnumerator(name: "GHOST_kKey5", value: 53)
!2034 = !DIEnumerator(name: "GHOST_kKey6", value: 54)
!2035 = !DIEnumerator(name: "GHOST_kKey7", value: 55)
!2036 = !DIEnumerator(name: "GHOST_kKey8", value: 56)
!2037 = !DIEnumerator(name: "GHOST_kKey9", value: 57)
!2038 = !DIEnumerator(name: "GHOST_kKeySemicolon", value: 59)
!2039 = !DIEnumerator(name: "GHOST_kKeyEqual", value: 61)
!2040 = !DIEnumerator(name: "GHOST_kKeyA", value: 65)
!2041 = !DIEnumerator(name: "GHOST_kKeyB", value: 66)
!2042 = !DIEnumerator(name: "GHOST_kKeyC", value: 67)
!2043 = !DIEnumerator(name: "GHOST_kKeyD", value: 68)
!2044 = !DIEnumerator(name: "GHOST_kKeyE", value: 69)
!2045 = !DIEnumerator(name: "GHOST_kKeyF", value: 70)
!2046 = !DIEnumerator(name: "GHOST_kKeyG", value: 71)
!2047 = !DIEnumerator(name: "GHOST_kKeyH", value: 72)
!2048 = !DIEnumerator(name: "GHOST_kKeyI", value: 73)
!2049 = !DIEnumerator(name: "GHOST_kKeyJ", value: 74)
!2050 = !DIEnumerator(name: "GHOST_kKeyK", value: 75)
!2051 = !DIEnumerator(name: "GHOST_kKeyL", value: 76)
!2052 = !DIEnumerator(name: "GHOST_kKeyM", value: 77)
!2053 = !DIEnumerator(name: "GHOST_kKeyN", value: 78)
!2054 = !DIEnumerator(name: "GHOST_kKeyO", value: 79)
!2055 = !DIEnumerator(name: "GHOST_kKeyP", value: 80)
!2056 = !DIEnumerator(name: "GHOST_kKeyQ", value: 81)
!2057 = !DIEnumerator(name: "GHOST_kKeyR", value: 82)
!2058 = !DIEnumerator(name: "GHOST_kKeyS", value: 83)
!2059 = !DIEnumerator(name: "GHOST_kKeyT", value: 84)
!2060 = !DIEnumerator(name: "GHOST_kKeyU", value: 85)
!2061 = !DIEnumerator(name: "GHOST_kKeyV", value: 86)
!2062 = !DIEnumerator(name: "GHOST_kKeyW", value: 87)
!2063 = !DIEnumerator(name: "GHOST_kKeyX", value: 88)
!2064 = !DIEnumerator(name: "GHOST_kKeyY", value: 89)
!2065 = !DIEnumerator(name: "GHOST_kKeyZ", value: 90)
!2066 = !DIEnumerator(name: "GHOST_kKeyLeftBracket", value: 91)
!2067 = !DIEnumerator(name: "GHOST_kKeyRightBracket", value: 93)
!2068 = !DIEnumerator(name: "GHOST_kKeyBackslash", value: 92)
!2069 = !DIEnumerator(name: "GHOST_kKeyAccentGrave", value: 96)
!2070 = !DIEnumerator(name: "GHOST_kKeyLeftShift", value: 256)
!2071 = !DIEnumerator(name: "GHOST_kKeyRightShift", value: 257)
!2072 = !DIEnumerator(name: "GHOST_kKeyLeftControl", value: 258)
!2073 = !DIEnumerator(name: "GHOST_kKeyRightControl", value: 259)
!2074 = !DIEnumerator(name: "GHOST_kKeyLeftAlt", value: 260)
!2075 = !DIEnumerator(name: "GHOST_kKeyRightAlt", value: 261)
!2076 = !DIEnumerator(name: "GHOST_kKeyOS", value: 262)
!2077 = !DIEnumerator(name: "GHOST_kKeyGrLess", value: 263)
!2078 = !DIEnumerator(name: "GHOST_kKeyCapsLock", value: 264)
!2079 = !DIEnumerator(name: "GHOST_kKeyNumLock", value: 265)
!2080 = !DIEnumerator(name: "GHOST_kKeyScrollLock", value: 266)
!2081 = !DIEnumerator(name: "GHOST_kKeyLeftArrow", value: 267)
!2082 = !DIEnumerator(name: "GHOST_kKeyRightArrow", value: 268)
!2083 = !DIEnumerator(name: "GHOST_kKeyUpArrow", value: 269)
!2084 = !DIEnumerator(name: "GHOST_kKeyDownArrow", value: 270)
!2085 = !DIEnumerator(name: "GHOST_kKeyPrintScreen", value: 271)
!2086 = !DIEnumerator(name: "GHOST_kKeyPause", value: 272)
!2087 = !DIEnumerator(name: "GHOST_kKeyInsert", value: 273)
!2088 = !DIEnumerator(name: "GHOST_kKeyDelete", value: 274)
!2089 = !DIEnumerator(name: "GHOST_kKeyHome", value: 275)
!2090 = !DIEnumerator(name: "GHOST_kKeyEnd", value: 276)
!2091 = !DIEnumerator(name: "GHOST_kKeyUpPage", value: 277)
!2092 = !DIEnumerator(name: "GHOST_kKeyDownPage", value: 278)
!2093 = !DIEnumerator(name: "GHOST_kKeyNumpad0", value: 279)
!2094 = !DIEnumerator(name: "GHOST_kKeyNumpad1", value: 280)
!2095 = !DIEnumerator(name: "GHOST_kKeyNumpad2", value: 281)
!2096 = !DIEnumerator(name: "GHOST_kKeyNumpad3", value: 282)
!2097 = !DIEnumerator(name: "GHOST_kKeyNumpad4", value: 283)
!2098 = !DIEnumerator(name: "GHOST_kKeyNumpad5", value: 284)
!2099 = !DIEnumerator(name: "GHOST_kKeyNumpad6", value: 285)
!2100 = !DIEnumerator(name: "GHOST_kKeyNumpad7", value: 286)
!2101 = !DIEnumerator(name: "GHOST_kKeyNumpad8", value: 287)
!2102 = !DIEnumerator(name: "GHOST_kKeyNumpad9", value: 288)
!2103 = !DIEnumerator(name: "GHOST_kKeyNumpadPeriod", value: 289)
!2104 = !DIEnumerator(name: "GHOST_kKeyNumpadEnter", value: 290)
!2105 = !DIEnumerator(name: "GHOST_kKeyNumpadPlus", value: 291)
!2106 = !DIEnumerator(name: "GHOST_kKeyNumpadMinus", value: 292)
!2107 = !DIEnumerator(name: "GHOST_kKeyNumpadAsterisk", value: 293)
!2108 = !DIEnumerator(name: "GHOST_kKeyNumpadSlash", value: 294)
!2109 = !DIEnumerator(name: "GHOST_kKeyF1", value: 295)
!2110 = !DIEnumerator(name: "GHOST_kKeyF2", value: 296)
!2111 = !DIEnumerator(name: "GHOST_kKeyF3", value: 297)
!2112 = !DIEnumerator(name: "GHOST_kKeyF4", value: 298)
!2113 = !DIEnumerator(name: "GHOST_kKeyF5", value: 299)
!2114 = !DIEnumerator(name: "GHOST_kKeyF6", value: 300)
!2115 = !DIEnumerator(name: "GHOST_kKeyF7", value: 301)
!2116 = !DIEnumerator(name: "GHOST_kKeyF8", value: 302)
!2117 = !DIEnumerator(name: "GHOST_kKeyF9", value: 303)
!2118 = !DIEnumerator(name: "GHOST_kKeyF10", value: 304)
!2119 = !DIEnumerator(name: "GHOST_kKeyF11", value: 305)
!2120 = !DIEnumerator(name: "GHOST_kKeyF12", value: 306)
!2121 = !DIEnumerator(name: "GHOST_kKeyF13", value: 307)
!2122 = !DIEnumerator(name: "GHOST_kKeyF14", value: 308)
!2123 = !DIEnumerator(name: "GHOST_kKeyF15", value: 309)
!2124 = !DIEnumerator(name: "GHOST_kKeyF16", value: 310)
!2125 = !DIEnumerator(name: "GHOST_kKeyF17", value: 311)
!2126 = !DIEnumerator(name: "GHOST_kKeyF18", value: 312)
!2127 = !DIEnumerator(name: "GHOST_kKeyF19", value: 313)
!2128 = !DIEnumerator(name: "GHOST_kKeyF20", value: 314)
!2129 = !DIEnumerator(name: "GHOST_kKeyF21", value: 315)
!2130 = !DIEnumerator(name: "GHOST_kKeyF22", value: 316)
!2131 = !DIEnumerator(name: "GHOST_kKeyF23", value: 317)
!2132 = !DIEnumerator(name: "GHOST_kKeyF24", value: 318)
!2133 = !DIEnumerator(name: "GHOST_kKeyMediaPlay", value: 319)
!2134 = !DIEnumerator(name: "GHOST_kKeyMediaStop", value: 320)
!2135 = !DIEnumerator(name: "GHOST_kKeyMediaFirst", value: 321)
!2136 = !DIEnumerator(name: "GHOST_kKeyMediaLast", value: 322)
!2137 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1969, line: 464, baseType: !300, size: 32, elements: !2138)
!2138 = !{!2139, !2140}
!2139 = !DIEnumerator(name: "GHOST_kPress", value: 0, isUnsigned: true)
!2140 = !DIEnumerator(name: "GHOST_kRelease", value: 1, isUnsigned: true)
!2141 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !55, line: 470, baseType: !300, size: 32, elements: !2142)
!2142 = !{!2143, !2144, !2145, !2146, !2147}
!2143 = !DIEnumerator(name: "P_NOT_STARTED", value: 0, isUnsigned: true)
!2144 = !DIEnumerator(name: "P_STARTING", value: 1, isUnsigned: true)
!2145 = !DIEnumerator(name: "P_IN_PROGRESS", value: 2, isUnsigned: true)
!2146 = !DIEnumerator(name: "P_FINISHING", value: 3, isUnsigned: true)
!2147 = !DIEnumerator(name: "P_FINISHED", value: 4, isUnsigned: true)
!2148 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eNdof_Flag", file: !1674, line: 805, baseType: !300, size: 32, elements: !2149)
!2149 = !{!2150, !2151, !2152, !2153, !2154, !2155, !2156, !2157, !2158, !2159, !2160, !2161, !2162, !2163, !2164, !2165}
!2150 = !DIEnumerator(name: "NDOF_SHOW_GUIDE", value: 1, isUnsigned: true)
!2151 = !DIEnumerator(name: "NDOF_FLY_HELICOPTER", value: 2, isUnsigned: true)
!2152 = !DIEnumerator(name: "NDOF_LOCK_HORIZON", value: 4, isUnsigned: true)
!2153 = !DIEnumerator(name: "NDOF_SHOULD_PAN", value: 8, isUnsigned: true)
!2154 = !DIEnumerator(name: "NDOF_SHOULD_ZOOM", value: 16, isUnsigned: true)
!2155 = !DIEnumerator(name: "NDOF_SHOULD_ROTATE", value: 32, isUnsigned: true)
!2156 = !DIEnumerator(name: "NDOF_MODE_ORBIT", value: 64, isUnsigned: true)
!2157 = !DIEnumerator(name: "NDOF_PAN_YZ_SWAP_AXIS", value: 128, isUnsigned: true)
!2158 = !DIEnumerator(name: "NDOF_ZOOM_INVERT", value: 256, isUnsigned: true)
!2159 = !DIEnumerator(name: "NDOF_ROTX_INVERT_AXIS", value: 512, isUnsigned: true)
!2160 = !DIEnumerator(name: "NDOF_ROTY_INVERT_AXIS", value: 1024, isUnsigned: true)
!2161 = !DIEnumerator(name: "NDOF_ROTZ_INVERT_AXIS", value: 2048, isUnsigned: true)
!2162 = !DIEnumerator(name: "NDOF_PANX_INVERT_AXIS", value: 4096, isUnsigned: true)
!2163 = !DIEnumerator(name: "NDOF_PANY_INVERT_AXIS", value: 8192, isUnsigned: true)
!2164 = !DIEnumerator(name: "NDOF_PANZ_INVERT_AXIS", value: 16384, isUnsigned: true)
!2165 = !DIEnumerator(name: "NDOF_TURNTABLE", value: 32768, isUnsigned: true)
!2166 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1587, line: 47, baseType: !300, size: 32, elements: !2167)
!2167 = !{!2168, !2169, !2170}
!2168 = !DIEnumerator(name: "EVT_TABLET_NONE", value: 0, isUnsigned: true)
!2169 = !DIEnumerator(name: "EVT_TABLET_STYLUS", value: 1, isUnsigned: true)
!2170 = !DIEnumerator(name: "EVT_TABLET_ERASER", value: 2, isUnsigned: true)
!2171 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !8, line: 376, baseType: !300, size: 32, elements: !2172)
!2172 = !{!2173, !2174}
!2173 = !DIEnumerator(name: "OP_GRAB_POINTER", value: 1, isUnsigned: true)
!2174 = !DIEnumerator(name: "OP_IS_INVOKE", value: 2, isUnsigned: true)
!2175 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !8, line: 263, baseType: !300, size: 32, elements: !2176)
!2176 = !{!2177, !2178, !2179, !2180}
!2177 = !DIEnumerator(name: "KMI_INACTIVE", value: 1, isUnsigned: true)
!2178 = !DIEnumerator(name: "KMI_EXPANDED", value: 2, isUnsigned: true)
!2179 = !DIEnumerator(name: "KMI_USER_MODIFIED", value: 4, isUnsigned: true)
!2180 = !DIEnumerator(name: "KMI_UPDATE", value: 8, isUnsigned: true)
!2181 = !DICompositeType(tag: DW_TAG_enumeration_type, name: "eWM_DrawMethod", file: !1674, line: 743, baseType: !300, size: 32, elements: !2182)
!2182 = !{!2183, !2184, !2185, !2186, !2187}
!2183 = !DIEnumerator(name: "USER_DRAW_TRIPLE", value: 0, isUnsigned: true)
!2184 = !DIEnumerator(name: "USER_DRAW_OVERLAP", value: 1, isUnsigned: true)
!2185 = !DIEnumerator(name: "USER_DRAW_FULL", value: 2, isUnsigned: true)
!2186 = !DIEnumerator(name: "USER_DRAW_AUTOMATIC", value: 3, isUnsigned: true)
!2187 = !DIEnumerator(name: "USER_DRAW_OVERLAP_FLIP", value: 4, isUnsigned: true)
!2188 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1969, line: 75, baseType: !300, size: 32, elements: !2189)
!2189 = !{!2190, !2191, !2192}
!2190 = !DIEnumerator(name: "GHOST_kTabletModeNone", value: 0, isUnsigned: true)
!2191 = !DIEnumerator(name: "GHOST_kTabletModeStylus", value: 1, isUnsigned: true)
!2192 = !DIEnumerator(name: "GHOST_kTabletModeEraser", value: 2, isUnsigned: true)
!2193 = !DICompositeType(tag: DW_TAG_enumeration_type, file: !1969, line: 444, baseType: !300, size: 32, elements: !2194)
!2194 = !{!2195, !2196, !2197, !2198, !2199}
!2195 = !DIEnumerator(name: "GHOST_kNotStarted", value: 0, isUnsigned: true)
!2196 = !DIEnumerator(name: "GHOST_kStarting", value: 1, isUnsigned: true)
!2197 = !DIEnumerator(name: "GHOST_kInProgress", value: 2, isUnsigned: true)
!2198 = !DIEnumerator(name: "GHOST_kFinishing", value: 3, isUnsigned: true)
!2199 = !DIEnumerator(name: "GHOST_kFinished", value: 4, isUnsigned: true)
!2200 = !{!40, !34, !73, !385, !142, !401, !6, !2201, !2325, !2395}
!2201 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2202, size: 64)
!2202 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScrArea", file: !234, line: 228, baseType: !2203)
!2203 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ScrArea", file: !234, line: 203, size: 1280, elements: !2204)
!2204 = !{!2205, !2207, !2208, !2225, !2226, !2227, !2228, !2231, !2232, !2233, !2234, !2235, !2236, !2237, !2238, !2239, !2240, !2241, !2242, !2321, !2322, !2323, !2324}
!2205 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2203, file: !234, line: 204, baseType: !2206, size: 64)
!2206 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2203, size: 64)
!2207 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2203, file: !234, line: 204, baseType: !2206, size: 64, offset: 64)
!2208 = !DIDerivedType(tag: DW_TAG_member, name: "v1", scope: !2203, file: !234, line: 206, baseType: !2209, size: 64, offset: 128)
!2209 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2210, size: 64)
!2210 = !DIDerivedType(tag: DW_TAG_typedef, name: "ScrVert", file: !234, line: 87, baseType: !2211)
!2211 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ScrVert", file: !234, line: 82, size: 256, elements: !2212)
!2212 = !{!2213, !2215, !2216, !2217, !2223, !2224}
!2213 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2211, file: !234, line: 83, baseType: !2214, size: 64)
!2214 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2211, size: 64)
!2215 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2211, file: !234, line: 83, baseType: !2214, size: 64, offset: 64)
!2216 = !DIDerivedType(tag: DW_TAG_member, name: "newv", scope: !2211, file: !234, line: 83, baseType: !2214, size: 64, offset: 128)
!2217 = !DIDerivedType(tag: DW_TAG_member, name: "vec", scope: !2211, file: !234, line: 84, baseType: !2218, size: 32, offset: 192)
!2218 = !DIDerivedType(tag: DW_TAG_typedef, name: "vec2s", file: !356, line: 43, baseType: !2219)
!2219 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "vec2s", file: !356, line: 41, size: 32, elements: !2220)
!2220 = !{!2221, !2222}
!2221 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !2219, file: !356, line: 42, baseType: !31, size: 16)
!2222 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !2219, file: !356, line: 42, baseType: !31, size: 16, offset: 16)
!2223 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2211, file: !234, line: 86, baseType: !31, size: 16, offset: 224)
!2224 = !DIDerivedType(tag: DW_TAG_member, name: "editflag", scope: !2211, file: !234, line: 86, baseType: !31, size: 16, offset: 240)
!2225 = !DIDerivedType(tag: DW_TAG_member, name: "v2", scope: !2203, file: !234, line: 206, baseType: !2209, size: 64, offset: 192)
!2226 = !DIDerivedType(tag: DW_TAG_member, name: "v3", scope: !2203, file: !234, line: 206, baseType: !2209, size: 64, offset: 256)
!2227 = !DIDerivedType(tag: DW_TAG_member, name: "v4", scope: !2203, file: !234, line: 206, baseType: !2209, size: 64, offset: 320)
!2228 = !DIDerivedType(tag: DW_TAG_member, name: "full", scope: !2203, file: !234, line: 207, baseType: !2229, size: 64, offset: 384)
!2229 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2230, size: 64)
!2230 = !DIDerivedType(tag: DW_TAG_typedef, name: "bScreen", file: !234, line: 80, baseType: !233)
!2231 = !DIDerivedType(tag: DW_TAG_member, name: "totrct", scope: !2203, file: !234, line: 209, baseType: !1250, size: 128, offset: 448)
!2232 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !2203, file: !234, line: 211, baseType: !16, size: 8, offset: 576)
!2233 = !DIDerivedType(tag: DW_TAG_member, name: "butspacetype", scope: !2203, file: !234, line: 211, baseType: !16, size: 8, offset: 584)
!2234 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !2203, file: !234, line: 212, baseType: !31, size: 16, offset: 592)
!2235 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !2203, file: !234, line: 212, baseType: !31, size: 16, offset: 608)
!2236 = !DIDerivedType(tag: DW_TAG_member, name: "headertype", scope: !2203, file: !234, line: 214, baseType: !31, size: 16, offset: 624)
!2237 = !DIDerivedType(tag: DW_TAG_member, name: "do_refresh", scope: !2203, file: !234, line: 215, baseType: !31, size: 16, offset: 640)
!2238 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2203, file: !234, line: 216, baseType: !31, size: 16, offset: 656)
!2239 = !DIDerivedType(tag: DW_TAG_member, name: "region_active_win", scope: !2203, file: !234, line: 217, baseType: !31, size: 16, offset: 672)
!2240 = !DIDerivedType(tag: DW_TAG_member, name: "temp", scope: !2203, file: !234, line: 219, baseType: !16, size: 8, offset: 688)
!2241 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2203, file: !234, line: 219, baseType: !16, size: 8, offset: 696)
!2242 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2203, file: !234, line: 221, baseType: !2243, size: 64, offset: 704)
!2243 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2244, size: 64)
!2244 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceType", file: !2245, line: 66, size: 1728, elements: !2246)
!2245 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_screen.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2246 = !{!2247, !2248, !2249, !2250, !2251, !2252, !2268, !2272, !2277, !2278, !2295, !2299, !2303, !2307, !2311, !2312, !2318, !2319, !2320}
!2247 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2244, file: !2245, line: 67, baseType: !2243, size: 64)
!2248 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2244, file: !2245, line: 67, baseType: !2243, size: 64, offset: 64)
!2249 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2244, file: !2245, line: 69, baseType: !15, size: 512, offset: 128)
!2250 = !DIDerivedType(tag: DW_TAG_member, name: "spaceid", scope: !2244, file: !2245, line: 70, baseType: !34, size: 32, offset: 640)
!2251 = !DIDerivedType(tag: DW_TAG_member, name: "iconid", scope: !2244, file: !2245, line: 71, baseType: !34, size: 32, offset: 672)
!2252 = !DIDerivedType(tag: DW_TAG_member, name: "new", scope: !2244, file: !2245, line: 74, baseType: !2253, size: 64, offset: 704)
!2253 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2254, size: 64)
!2254 = !DISubroutineType(types: !2255)
!2255 = !{!2256, !2266}
!2256 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2257, size: 64)
!2257 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceLink", file: !1932, line: 85, size: 448, elements: !2258)
!2258 = !{!2259, !2260, !2261, !2262, !2263, !2264}
!2259 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2257, file: !1932, line: 86, baseType: !2256, size: 64)
!2260 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2257, file: !1932, line: 86, baseType: !2256, size: 64, offset: 64)
!2261 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !2257, file: !1932, line: 87, baseType: !42, size: 128, offset: 128)
!2262 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !2257, file: !1932, line: 88, baseType: !34, size: 32, offset: 256)
!2263 = !DIDerivedType(tag: DW_TAG_member, name: "blockscale", scope: !2257, file: !1932, line: 89, baseType: !120, size: 32, offset: 288)
!2264 = !DIDerivedType(tag: DW_TAG_member, name: "blockhandler", scope: !2257, file: !1932, line: 90, baseType: !2265, size: 128, offset: 320)
!2265 = !DICompositeType(tag: DW_TAG_array_type, baseType: !31, size: 128, elements: !702)
!2266 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2267, size: 64)
!2267 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !68)
!2268 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !2244, file: !2245, line: 76, baseType: !2269, size: 64, offset: 768)
!2269 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2270, size: 64)
!2270 = !DISubroutineType(types: !2271)
!2271 = !{null, !2256}
!2272 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2244, file: !2245, line: 79, baseType: !2273, size: 64, offset: 832)
!2273 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2274, size: 64)
!2274 = !DISubroutineType(types: !2275)
!2275 = !{null, !2276, !2206}
!2276 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1545, size: 64)
!2277 = !DIDerivedType(tag: DW_TAG_member, name: "exit", scope: !2244, file: !2245, line: 81, baseType: !2273, size: 64, offset: 896)
!2278 = !DIDerivedType(tag: DW_TAG_member, name: "listener", scope: !2244, file: !2245, line: 83, baseType: !2279, size: 64, offset: 960)
!2279 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2280, size: 64)
!2280 = !DISubroutineType(types: !2281)
!2281 = !{null, !232, !2206, !2282}
!2282 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2283, size: 64)
!2283 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmNotifier", file: !55, line: 195, size: 512, elements: !2284)
!2284 = !{!2285, !2286, !2287, !2288, !2289, !2290, !2291, !2292, !2293, !2294}
!2285 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2283, file: !55, line: 196, baseType: !2282, size: 64)
!2286 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2283, file: !55, line: 196, baseType: !2282, size: 64, offset: 64)
!2287 = !DIDerivedType(tag: DW_TAG_member, name: "wm", scope: !2283, file: !55, line: 198, baseType: !2276, size: 64, offset: 128)
!2288 = !DIDerivedType(tag: DW_TAG_member, name: "window", scope: !2283, file: !55, line: 199, baseType: !225, size: 64, offset: 192)
!2289 = !DIDerivedType(tag: DW_TAG_member, name: "swinid", scope: !2283, file: !55, line: 201, baseType: !34, size: 32, offset: 256)
!2290 = !DIDerivedType(tag: DW_TAG_member, name: "category", scope: !2283, file: !55, line: 202, baseType: !300, size: 32, offset: 288)
!2291 = !DIDerivedType(tag: DW_TAG_member, name: "data", scope: !2283, file: !55, line: 202, baseType: !300, size: 32, offset: 320)
!2292 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !2283, file: !55, line: 202, baseType: !300, size: 32, offset: 352)
!2293 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !2283, file: !55, line: 202, baseType: !300, size: 32, offset: 384)
!2294 = !DIDerivedType(tag: DW_TAG_member, name: "reference", scope: !2283, file: !55, line: 204, baseType: !40, size: 64, offset: 448)
!2295 = !DIDerivedType(tag: DW_TAG_member, name: "refresh", scope: !2244, file: !2245, line: 86, baseType: !2296, size: 64, offset: 1024)
!2296 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2297, size: 64)
!2297 = !DISubroutineType(types: !2298)
!2298 = !{null, !2266, !2206}
!2299 = !DIDerivedType(tag: DW_TAG_member, name: "duplicate", scope: !2244, file: !2245, line: 89, baseType: !2300, size: 64, offset: 1088)
!2300 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2301, size: 64)
!2301 = !DISubroutineType(types: !2302)
!2302 = !{!2256, !2256}
!2303 = !DIDerivedType(tag: DW_TAG_member, name: "operatortypes", scope: !2244, file: !2245, line: 92, baseType: !2304, size: 64, offset: 1152)
!2304 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2305, size: 64)
!2305 = !DISubroutineType(types: !2306)
!2306 = !{null}
!2307 = !DIDerivedType(tag: DW_TAG_member, name: "keymap", scope: !2244, file: !2245, line: 94, baseType: !2308, size: 64, offset: 1216)
!2308 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2309, size: 64)
!2309 = !DISubroutineType(types: !2310)
!2310 = !{null, !1562}
!2311 = !DIDerivedType(tag: DW_TAG_member, name: "dropboxes", scope: !2244, file: !2245, line: 96, baseType: !2304, size: 64, offset: 1280)
!2312 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !2244, file: !2245, line: 99, baseType: !2313, size: 64, offset: 1344)
!2313 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2314, size: 64)
!2314 = !DISubroutineType(types: !2315)
!2315 = !{!34, !2266, !58, !2316}
!2316 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2317, size: 64)
!2317 = !DICompositeType(tag: DW_TAG_structure_type, name: "bContextDataResult", file: !800, line: 71, flags: DIFlagFwdDecl)
!2318 = !DIDerivedType(tag: DW_TAG_member, name: "regiontypes", scope: !2244, file: !2245, line: 102, baseType: !42, size: 128, offset: 1408)
!2319 = !DIDerivedType(tag: DW_TAG_member, name: "toolshelf", scope: !2244, file: !2245, line: 105, baseType: !42, size: 128, offset: 1536)
!2320 = !DIDerivedType(tag: DW_TAG_member, name: "keymapflag", scope: !2244, file: !2245, line: 110, baseType: !34, size: 32, offset: 1664)
!2321 = !DIDerivedType(tag: DW_TAG_member, name: "spacedata", scope: !2203, file: !234, line: 223, baseType: !42, size: 128, offset: 768)
!2322 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !2203, file: !234, line: 224, baseType: !42, size: 128, offset: 896)
!2323 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !2203, file: !234, line: 225, baseType: !42, size: 128, offset: 1024)
!2324 = !DIDerivedType(tag: DW_TAG_member, name: "actionzones", scope: !2203, file: !234, line: 227, baseType: !42, size: 128, offset: 1152)
!2325 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2326, size: 64)
!2326 = !DIDerivedType(tag: DW_TAG_typedef, name: "SpaceFile", file: !1932, line: 622, baseType: !2327)
!2327 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "SpaceFile", file: !1932, line: 595, size: 832, elements: !2328)
!2328 = !{!2329, !2332, !2333, !2334, !2335, !2336, !2362, !2365, !2366, !2367, !2368, !2369, !2391, !2392, !2393, !2394}
!2329 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2327, file: !1932, line: 596, baseType: !2330, size: 64)
!2330 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2331, size: 64)
!2331 = !DIDerivedType(tag: DW_TAG_typedef, name: "SpaceLink", file: !1932, line: 91, baseType: !2257)
!2332 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2327, file: !1932, line: 596, baseType: !2330, size: 64, offset: 64)
!2333 = !DIDerivedType(tag: DW_TAG_member, name: "regionbase", scope: !2327, file: !1932, line: 597, baseType: !42, size: 128, offset: 128)
!2334 = !DIDerivedType(tag: DW_TAG_member, name: "spacetype", scope: !2327, file: !1932, line: 598, baseType: !34, size: 32, offset: 256)
!2335 = !DIDerivedType(tag: DW_TAG_member, name: "scroll_offset", scope: !2327, file: !1932, line: 600, baseType: !34, size: 32, offset: 288)
!2336 = !DIDerivedType(tag: DW_TAG_member, name: "params", scope: !2327, file: !1932, line: 602, baseType: !2337, size: 64, offset: 320)
!2337 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2338, size: 64)
!2338 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FileSelectParams", file: !1932, line: 566, size: 16128, elements: !2339)
!2339 = !{!2340, !2344, !2348, !2349, !2350, !2351, !2352, !2353, !2354, !2355, !2356, !2357, !2358, !2359, !2360, !2361}
!2340 = !DIDerivedType(tag: DW_TAG_member, name: "title", scope: !2338, file: !1932, line: 567, baseType: !2341, size: 768)
!2341 = !DICompositeType(tag: DW_TAG_array_type, baseType: !16, size: 768, elements: !2342)
!2342 = !{!2343}
!2343 = !DISubrange(count: 96)
!2344 = !DIDerivedType(tag: DW_TAG_member, name: "dir", scope: !2338, file: !1932, line: 568, baseType: !2345, size: 8448, offset: 768)
!2345 = !DICompositeType(tag: DW_TAG_array_type, baseType: !16, size: 8448, elements: !2346)
!2346 = !{!2347}
!2347 = !DISubrange(count: 1056)
!2348 = !DIDerivedType(tag: DW_TAG_member, name: "file", scope: !2338, file: !1932, line: 570, baseType: !452, size: 2048, offset: 9216)
!2349 = !DIDerivedType(tag: DW_TAG_member, name: "renamefile", scope: !2338, file: !1932, line: 571, baseType: !452, size: 2048, offset: 11264)
!2350 = !DIDerivedType(tag: DW_TAG_member, name: "renameedit", scope: !2338, file: !1932, line: 572, baseType: !452, size: 2048, offset: 13312)
!2351 = !DIDerivedType(tag: DW_TAG_member, name: "filter_glob", scope: !2338, file: !1932, line: 574, baseType: !15, size: 512, offset: 15360)
!2352 = !DIDerivedType(tag: DW_TAG_member, name: "active_file", scope: !2338, file: !1932, line: 576, baseType: !34, size: 32, offset: 15872)
!2353 = !DIDerivedType(tag: DW_TAG_member, name: "sel_first", scope: !2338, file: !1932, line: 577, baseType: !34, size: 32, offset: 15904)
!2354 = !DIDerivedType(tag: DW_TAG_member, name: "sel_last", scope: !2338, file: !1932, line: 578, baseType: !34, size: 32, offset: 15936)
!2355 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2338, file: !1932, line: 581, baseType: !31, size: 16, offset: 15968)
!2356 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2338, file: !1932, line: 582, baseType: !31, size: 16, offset: 15984)
!2357 = !DIDerivedType(tag: DW_TAG_member, name: "sort", scope: !2338, file: !1932, line: 583, baseType: !31, size: 16, offset: 16000)
!2358 = !DIDerivedType(tag: DW_TAG_member, name: "display", scope: !2338, file: !1932, line: 584, baseType: !31, size: 16, offset: 16016)
!2359 = !DIDerivedType(tag: DW_TAG_member, name: "filter", scope: !2338, file: !1932, line: 585, baseType: !31, size: 16, offset: 16032)
!2360 = !DIDerivedType(tag: DW_TAG_member, name: "f_fp", scope: !2338, file: !1932, line: 588, baseType: !31, size: 16, offset: 16048)
!2361 = !DIDerivedType(tag: DW_TAG_member, name: "fp_str", scope: !2338, file: !1932, line: 589, baseType: !977, size: 64, offset: 16064)
!2362 = !DIDerivedType(tag: DW_TAG_member, name: "files", scope: !2327, file: !1932, line: 604, baseType: !2363, size: 64, offset: 384)
!2363 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2364, size: 64)
!2364 = !DICompositeType(tag: DW_TAG_structure_type, name: "FileList", file: !1932, line: 62, flags: DIFlagFwdDecl)
!2365 = !DIDerivedType(tag: DW_TAG_member, name: "folders_prev", scope: !2327, file: !1932, line: 606, baseType: !401, size: 64, offset: 448)
!2366 = !DIDerivedType(tag: DW_TAG_member, name: "folders_next", scope: !2327, file: !1932, line: 607, baseType: !401, size: 64, offset: 512)
!2367 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !2327, file: !1932, line: 614, baseType: !12, size: 64, offset: 576)
!2368 = !DIDerivedType(tag: DW_TAG_member, name: "smoothscroll_timer", scope: !2327, file: !1932, line: 616, baseType: !219, size: 64, offset: 640)
!2369 = !DIDerivedType(tag: DW_TAG_member, name: "layout", scope: !2327, file: !1932, line: 618, baseType: !2370, size: 64, offset: 704)
!2370 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2371, size: 64)
!2371 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "FileLayout", file: !2372, line: 56, size: 736, elements: !2373)
!2372 = !DIFile(filename: "blender/source/blender/editors/include/ED_fileselect.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2373 = !{!2374, !2375, !2376, !2377, !2378, !2379, !2380, !2381, !2382, !2383, !2384, !2385, !2386, !2387, !2388, !2389}
!2374 = !DIDerivedType(tag: DW_TAG_member, name: "prv_w", scope: !2371, file: !2372, line: 58, baseType: !34, size: 32)
!2375 = !DIDerivedType(tag: DW_TAG_member, name: "prv_h", scope: !2371, file: !2372, line: 59, baseType: !34, size: 32, offset: 32)
!2376 = !DIDerivedType(tag: DW_TAG_member, name: "tile_w", scope: !2371, file: !2372, line: 60, baseType: !34, size: 32, offset: 64)
!2377 = !DIDerivedType(tag: DW_TAG_member, name: "tile_h", scope: !2371, file: !2372, line: 61, baseType: !34, size: 32, offset: 96)
!2378 = !DIDerivedType(tag: DW_TAG_member, name: "tile_border_x", scope: !2371, file: !2372, line: 62, baseType: !34, size: 32, offset: 128)
!2379 = !DIDerivedType(tag: DW_TAG_member, name: "tile_border_y", scope: !2371, file: !2372, line: 63, baseType: !34, size: 32, offset: 160)
!2380 = !DIDerivedType(tag: DW_TAG_member, name: "prv_border_x", scope: !2371, file: !2372, line: 64, baseType: !34, size: 32, offset: 192)
!2381 = !DIDerivedType(tag: DW_TAG_member, name: "prv_border_y", scope: !2371, file: !2372, line: 65, baseType: !34, size: 32, offset: 224)
!2382 = !DIDerivedType(tag: DW_TAG_member, name: "rows", scope: !2371, file: !2372, line: 66, baseType: !34, size: 32, offset: 256)
!2383 = !DIDerivedType(tag: DW_TAG_member, name: "columns", scope: !2371, file: !2372, line: 67, baseType: !34, size: 32, offset: 288)
!2384 = !DIDerivedType(tag: DW_TAG_member, name: "width", scope: !2371, file: !2372, line: 68, baseType: !34, size: 32, offset: 320)
!2385 = !DIDerivedType(tag: DW_TAG_member, name: "height", scope: !2371, file: !2372, line: 69, baseType: !34, size: 32, offset: 352)
!2386 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2371, file: !2372, line: 70, baseType: !34, size: 32, offset: 384)
!2387 = !DIDerivedType(tag: DW_TAG_member, name: "dirty", scope: !2371, file: !2372, line: 71, baseType: !34, size: 32, offset: 416)
!2388 = !DIDerivedType(tag: DW_TAG_member, name: "textheight", scope: !2371, file: !2372, line: 72, baseType: !34, size: 32, offset: 448)
!2389 = !DIDerivedType(tag: DW_TAG_member, name: "column_widths", scope: !2371, file: !2372, line: 73, baseType: !2390, size: 256, offset: 480)
!2390 = !DICompositeType(tag: DW_TAG_array_type, baseType: !120, size: 256, elements: !702)
!2391 = !DIDerivedType(tag: DW_TAG_member, name: "recentnr", scope: !2327, file: !1932, line: 620, baseType: !31, size: 16, offset: 768)
!2392 = !DIDerivedType(tag: DW_TAG_member, name: "bookmarknr", scope: !2327, file: !1932, line: 620, baseType: !31, size: 16, offset: 784)
!2393 = !DIDerivedType(tag: DW_TAG_member, name: "systemnr", scope: !2327, file: !1932, line: 621, baseType: !31, size: 16, offset: 800)
!2394 = !DIDerivedType(tag: DW_TAG_member, name: "pad2", scope: !2327, file: !1932, line: 621, baseType: !31, size: 16, offset: 816)
!2395 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmProgress", file: !55, line: 476, baseType: !2141)
!2396 = !{!0, !2397, !2555}
!2397 = !DIGlobalVariableExpression(var: !2398, expr: !DIExpression())
!2398 = distinct !DIGlobalVariable(name: "do_wheel_ui", scope: !2399, file: !3, line: 398, type: !73, isLocal: true, isDefinition: true)
!2399 = distinct !DISubprogram(name: "wm_handler_ui_call", scope: !3, file: !3, line: 393, type: !2400, scopeLine: 394, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!2400 = !DISubroutineType(types: !2401)
!2401 = !{!34, !2402, !2404, !2552, !34}
!2402 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2403, size: 64)
!2403 = !DIDerivedType(tag: DW_TAG_typedef, name: "bContext", file: !800, line: 69, baseType: !68)
!2404 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2405, size: 64)
!2405 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmEventHandler", file: !1927, line: 74, baseType: !2406)
!2406 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmEventHandler", file: !1927, line: 45, size: 1088, elements: !2407)
!2407 = !{!2408, !2410, !2411, !2412, !2413, !2416, !2419, !2420, !2421, !2422, !2535, !2541, !2546, !2547, !2548, !2549, !2550, !2551}
!2408 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2406, file: !1927, line: 46, baseType: !2409, size: 64)
!2409 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2406, size: 64)
!2410 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2406, file: !1927, line: 46, baseType: !2409, size: 64, offset: 64)
!2411 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2406, file: !1927, line: 48, baseType: !34, size: 32, offset: 128)
!2412 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2406, file: !1927, line: 49, baseType: !34, size: 32, offset: 160)
!2413 = !DIDerivedType(tag: DW_TAG_member, name: "keymap", scope: !2406, file: !1927, line: 52, baseType: !2414, size: 64, offset: 192)
!2414 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2415, size: 64)
!2415 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmKeyMap", file: !8, line: 297, baseType: !149)
!2416 = !DIDerivedType(tag: DW_TAG_member, name: "bblocal", scope: !2406, file: !1927, line: 53, baseType: !2417, size: 64, offset: 256)
!2417 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2418, size: 64)
!2418 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !1250)
!2419 = !DIDerivedType(tag: DW_TAG_member, name: "bbwin", scope: !2406, file: !1927, line: 53, baseType: !2417, size: 64, offset: 320)
!2420 = !DIDerivedType(tag: DW_TAG_member, name: "op", scope: !2406, file: !1927, line: 56, baseType: !6, size: 64, offset: 384)
!2421 = !DIDerivedType(tag: DW_TAG_member, name: "op_area", scope: !2406, file: !1927, line: 57, baseType: !2206, size: 64, offset: 448)
!2422 = !DIDerivedType(tag: DW_TAG_member, name: "op_region", scope: !2406, file: !1927, line: 58, baseType: !2423, size: 64, offset: 512)
!2423 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2424, size: 64)
!2424 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ARegion", file: !234, line: 230, size: 3072, elements: !2425)
!2425 = !{!2426, !2427, !2428, !2462, !2463, !2464, !2465, !2466, !2467, !2468, !2469, !2470, !2471, !2472, !2473, !2474, !2475, !2476, !2477, !2478, !2479, !2525, !2526, !2527, !2528, !2529, !2530, !2531, !2532, !2533, !2534}
!2426 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2424, file: !234, line: 231, baseType: !2423, size: 64)
!2427 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2424, file: !234, line: 231, baseType: !2423, size: 64, offset: 64)
!2428 = !DIDerivedType(tag: DW_TAG_member, name: "v2d", scope: !2424, file: !234, line: 233, baseType: !2429, size: 1280, offset: 128)
!2429 = !DIDerivedType(tag: DW_TAG_typedef, name: "View2D", file: !2430, line: 71, baseType: !2431)
!2430 = !DIFile(filename: "blender/source/blender/makesdna/DNA_view2d_types.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2431 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "View2D", file: !2430, line: 40, size: 1280, elements: !2432)
!2432 = !{!2433, !2434, !2435, !2436, !2437, !2438, !2439, !2440, !2441, !2442, !2443, !2444, !2445, !2446, !2447, !2448, !2449, !2450, !2451, !2452, !2453, !2454, !2456, !2457, !2458, !2461}
!2433 = !DIDerivedType(tag: DW_TAG_member, name: "tot", scope: !2431, file: !2430, line: 41, baseType: !355, size: 128)
!2434 = !DIDerivedType(tag: DW_TAG_member, name: "cur", scope: !2431, file: !2430, line: 41, baseType: !355, size: 128, offset: 128)
!2435 = !DIDerivedType(tag: DW_TAG_member, name: "vert", scope: !2431, file: !2430, line: 42, baseType: !1250, size: 128, offset: 256)
!2436 = !DIDerivedType(tag: DW_TAG_member, name: "hor", scope: !2431, file: !2430, line: 42, baseType: !1250, size: 128, offset: 384)
!2437 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !2431, file: !2430, line: 43, baseType: !1250, size: 128, offset: 512)
!2438 = !DIDerivedType(tag: DW_TAG_member, name: "min", scope: !2431, file: !2430, line: 45, baseType: !339, size: 64, offset: 640)
!2439 = !DIDerivedType(tag: DW_TAG_member, name: "max", scope: !2431, file: !2430, line: 45, baseType: !339, size: 64, offset: 704)
!2440 = !DIDerivedType(tag: DW_TAG_member, name: "minzoom", scope: !2431, file: !2430, line: 46, baseType: !120, size: 32, offset: 768)
!2441 = !DIDerivedType(tag: DW_TAG_member, name: "maxzoom", scope: !2431, file: !2430, line: 46, baseType: !120, size: 32, offset: 800)
!2442 = !DIDerivedType(tag: DW_TAG_member, name: "scroll", scope: !2431, file: !2430, line: 48, baseType: !31, size: 16, offset: 832)
!2443 = !DIDerivedType(tag: DW_TAG_member, name: "scroll_ui", scope: !2431, file: !2430, line: 49, baseType: !31, size: 16, offset: 848)
!2444 = !DIDerivedType(tag: DW_TAG_member, name: "keeptot", scope: !2431, file: !2430, line: 51, baseType: !31, size: 16, offset: 864)
!2445 = !DIDerivedType(tag: DW_TAG_member, name: "keepzoom", scope: !2431, file: !2430, line: 52, baseType: !31, size: 16, offset: 880)
!2446 = !DIDerivedType(tag: DW_TAG_member, name: "keepofs", scope: !2431, file: !2430, line: 53, baseType: !31, size: 16, offset: 896)
!2447 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2431, file: !2430, line: 55, baseType: !31, size: 16, offset: 912)
!2448 = !DIDerivedType(tag: DW_TAG_member, name: "align", scope: !2431, file: !2430, line: 56, baseType: !31, size: 16, offset: 928)
!2449 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !2431, file: !2430, line: 58, baseType: !31, size: 16, offset: 944)
!2450 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !2431, file: !2430, line: 58, baseType: !31, size: 16, offset: 960)
!2451 = !DIDerivedType(tag: DW_TAG_member, name: "oldwinx", scope: !2431, file: !2430, line: 59, baseType: !31, size: 16, offset: 976)
!2452 = !DIDerivedType(tag: DW_TAG_member, name: "oldwiny", scope: !2431, file: !2430, line: 59, baseType: !31, size: 16, offset: 992)
!2453 = !DIDerivedType(tag: DW_TAG_member, name: "around", scope: !2431, file: !2430, line: 61, baseType: !31, size: 16, offset: 1008)
!2454 = !DIDerivedType(tag: DW_TAG_member, name: "tab_offset", scope: !2431, file: !2430, line: 63, baseType: !2455, size: 64, offset: 1024)
!2455 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !120, size: 64)
!2456 = !DIDerivedType(tag: DW_TAG_member, name: "tab_num", scope: !2431, file: !2430, line: 64, baseType: !34, size: 32, offset: 1088)
!2457 = !DIDerivedType(tag: DW_TAG_member, name: "tab_cur", scope: !2431, file: !2430, line: 65, baseType: !34, size: 32, offset: 1120)
!2458 = !DIDerivedType(tag: DW_TAG_member, name: "sms", scope: !2431, file: !2430, line: 68, baseType: !2459, size: 64, offset: 1152)
!2459 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2460, size: 64)
!2460 = !DICompositeType(tag: DW_TAG_structure_type, name: "SmoothView2DStore", file: !2430, line: 68, flags: DIFlagFwdDecl)
!2461 = !DIDerivedType(tag: DW_TAG_member, name: "smooth_timer", scope: !2431, file: !2430, line: 69, baseType: !219, size: 64, offset: 1216)
!2462 = !DIDerivedType(tag: DW_TAG_member, name: "winrct", scope: !2424, file: !234, line: 234, baseType: !1250, size: 128, offset: 1408)
!2463 = !DIDerivedType(tag: DW_TAG_member, name: "drawrct", scope: !2424, file: !234, line: 235, baseType: !1250, size: 128, offset: 1536)
!2464 = !DIDerivedType(tag: DW_TAG_member, name: "winx", scope: !2424, file: !234, line: 236, baseType: !31, size: 16, offset: 1664)
!2465 = !DIDerivedType(tag: DW_TAG_member, name: "winy", scope: !2424, file: !234, line: 236, baseType: !31, size: 16, offset: 1680)
!2466 = !DIDerivedType(tag: DW_TAG_member, name: "swinid", scope: !2424, file: !234, line: 238, baseType: !31, size: 16, offset: 1696)
!2467 = !DIDerivedType(tag: DW_TAG_member, name: "regiontype", scope: !2424, file: !234, line: 239, baseType: !31, size: 16, offset: 1712)
!2468 = !DIDerivedType(tag: DW_TAG_member, name: "alignment", scope: !2424, file: !234, line: 240, baseType: !31, size: 16, offset: 1728)
!2469 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !2424, file: !234, line: 241, baseType: !31, size: 16, offset: 1744)
!2470 = !DIDerivedType(tag: DW_TAG_member, name: "fsize", scope: !2424, file: !234, line: 243, baseType: !120, size: 32, offset: 1760)
!2471 = !DIDerivedType(tag: DW_TAG_member, name: "sizex", scope: !2424, file: !234, line: 244, baseType: !31, size: 16, offset: 1792)
!2472 = !DIDerivedType(tag: DW_TAG_member, name: "sizey", scope: !2424, file: !234, line: 244, baseType: !31, size: 16, offset: 1808)
!2473 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw", scope: !2424, file: !234, line: 246, baseType: !31, size: 16, offset: 1824)
!2474 = !DIDerivedType(tag: DW_TAG_member, name: "do_draw_overlay", scope: !2424, file: !234, line: 247, baseType: !31, size: 16, offset: 1840)
!2475 = !DIDerivedType(tag: DW_TAG_member, name: "swap", scope: !2424, file: !234, line: 248, baseType: !31, size: 16, offset: 1856)
!2476 = !DIDerivedType(tag: DW_TAG_member, name: "overlap", scope: !2424, file: !234, line: 249, baseType: !31, size: 16, offset: 1872)
!2477 = !DIDerivedType(tag: DW_TAG_member, name: "flagfullscreen", scope: !2424, file: !234, line: 250, baseType: !31, size: 16, offset: 1888)
!2478 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !2424, file: !234, line: 251, baseType: !31, size: 16, offset: 1904)
!2479 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !2424, file: !234, line: 253, baseType: !2480, size: 64, offset: 1920)
!2480 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2481, size: 64)
!2481 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ARegionType", file: !2245, line: 116, size: 1472, elements: !2482)
!2482 = !{!2483, !2484, !2485, !2486, !2490, !2491, !2495, !2499, !2503, !2507, !2508, !2509, !2513, !2514, !2515, !2516, !2517, !2518, !2519, !2520, !2521, !2522, !2523, !2524}
!2483 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2481, file: !2245, line: 117, baseType: !2480, size: 64)
!2484 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2481, file: !2245, line: 117, baseType: !2480, size: 64, offset: 64)
!2485 = !DIDerivedType(tag: DW_TAG_member, name: "regionid", scope: !2481, file: !2245, line: 119, baseType: !34, size: 32, offset: 128)
!2486 = !DIDerivedType(tag: DW_TAG_member, name: "init", scope: !2481, file: !2245, line: 122, baseType: !2487, size: 64, offset: 192)
!2487 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2488, size: 64)
!2488 = !DISubroutineType(types: !2489)
!2489 = !{null, !2276, !2423}
!2490 = !DIDerivedType(tag: DW_TAG_member, name: "exit", scope: !2481, file: !2245, line: 124, baseType: !2487, size: 64, offset: 256)
!2491 = !DIDerivedType(tag: DW_TAG_member, name: "draw", scope: !2481, file: !2245, line: 126, baseType: !2492, size: 64, offset: 320)
!2492 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2493, size: 64)
!2493 = !DISubroutineType(types: !2494)
!2494 = !{null, !2266, !2423}
!2495 = !DIDerivedType(tag: DW_TAG_member, name: "listener", scope: !2481, file: !2245, line: 128, baseType: !2496, size: 64, offset: 384)
!2496 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2497, size: 64)
!2497 = !DISubroutineType(types: !2498)
!2498 = !{null, !232, !2206, !2423, !2282}
!2499 = !DIDerivedType(tag: DW_TAG_member, name: "free", scope: !2481, file: !2245, line: 130, baseType: !2500, size: 64, offset: 448)
!2500 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2501, size: 64)
!2501 = !DISubroutineType(types: !2502)
!2502 = !{null, !2423}
!2503 = !DIDerivedType(tag: DW_TAG_member, name: "duplicate", scope: !2481, file: !2245, line: 133, baseType: !2504, size: 64, offset: 512)
!2504 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2505, size: 64)
!2505 = !DISubroutineType(types: !2506)
!2506 = !{!40, !40}
!2507 = !DIDerivedType(tag: DW_TAG_member, name: "operatortypes", scope: !2481, file: !2245, line: 137, baseType: !2304, size: 64, offset: 576)
!2508 = !DIDerivedType(tag: DW_TAG_member, name: "keymap", scope: !2481, file: !2245, line: 139, baseType: !2308, size: 64, offset: 640)
!2509 = !DIDerivedType(tag: DW_TAG_member, name: "cursor", scope: !2481, file: !2245, line: 141, baseType: !2510, size: 64, offset: 704)
!2510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2511, size: 64)
!2511 = !DISubroutineType(types: !2512)
!2512 = !{null, !225, !2206, !2423}
!2513 = !DIDerivedType(tag: DW_TAG_member, name: "context", scope: !2481, file: !2245, line: 144, baseType: !2313, size: 64, offset: 768)
!2514 = !DIDerivedType(tag: DW_TAG_member, name: "drawcalls", scope: !2481, file: !2245, line: 147, baseType: !42, size: 128, offset: 832)
!2515 = !DIDerivedType(tag: DW_TAG_member, name: "paneltypes", scope: !2481, file: !2245, line: 150, baseType: !42, size: 128, offset: 960)
!2516 = !DIDerivedType(tag: DW_TAG_member, name: "headertypes", scope: !2481, file: !2245, line: 153, baseType: !42, size: 128, offset: 1088)
!2517 = !DIDerivedType(tag: DW_TAG_member, name: "minsizex", scope: !2481, file: !2245, line: 156, baseType: !34, size: 32, offset: 1216)
!2518 = !DIDerivedType(tag: DW_TAG_member, name: "minsizey", scope: !2481, file: !2245, line: 156, baseType: !34, size: 32, offset: 1248)
!2519 = !DIDerivedType(tag: DW_TAG_member, name: "prefsizex", scope: !2481, file: !2245, line: 158, baseType: !34, size: 32, offset: 1280)
!2520 = !DIDerivedType(tag: DW_TAG_member, name: "prefsizey", scope: !2481, file: !2245, line: 158, baseType: !34, size: 32, offset: 1312)
!2521 = !DIDerivedType(tag: DW_TAG_member, name: "keymapflag", scope: !2481, file: !2245, line: 160, baseType: !34, size: 32, offset: 1344)
!2522 = !DIDerivedType(tag: DW_TAG_member, name: "do_lock", scope: !2481, file: !2245, line: 162, baseType: !31, size: 16, offset: 1376)
!2523 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2481, file: !2245, line: 162, baseType: !31, size: 16, offset: 1392)
!2524 = !DIDerivedType(tag: DW_TAG_member, name: "event_cursor", scope: !2481, file: !2245, line: 164, baseType: !31, size: 16, offset: 1408)
!2525 = !DIDerivedType(tag: DW_TAG_member, name: "uiblocks", scope: !2424, file: !234, line: 255, baseType: !42, size: 128, offset: 1984)
!2526 = !DIDerivedType(tag: DW_TAG_member, name: "panels", scope: !2424, file: !234, line: 256, baseType: !42, size: 128, offset: 2112)
!2527 = !DIDerivedType(tag: DW_TAG_member, name: "panels_category_active", scope: !2424, file: !234, line: 257, baseType: !42, size: 128, offset: 2240)
!2528 = !DIDerivedType(tag: DW_TAG_member, name: "ui_lists", scope: !2424, file: !234, line: 258, baseType: !42, size: 128, offset: 2368)
!2529 = !DIDerivedType(tag: DW_TAG_member, name: "ui_previews", scope: !2424, file: !234, line: 259, baseType: !42, size: 128, offset: 2496)
!2530 = !DIDerivedType(tag: DW_TAG_member, name: "handlers", scope: !2424, file: !234, line: 260, baseType: !42, size: 128, offset: 2624)
!2531 = !DIDerivedType(tag: DW_TAG_member, name: "panels_category", scope: !2424, file: !234, line: 261, baseType: !42, size: 128, offset: 2752)
!2532 = !DIDerivedType(tag: DW_TAG_member, name: "regiontimer", scope: !2424, file: !234, line: 263, baseType: !219, size: 64, offset: 2880)
!2533 = !DIDerivedType(tag: DW_TAG_member, name: "headerstr", scope: !2424, file: !234, line: 265, baseType: !385, size: 64, offset: 2944)
!2534 = !DIDerivedType(tag: DW_TAG_member, name: "regiondata", scope: !2424, file: !234, line: 266, baseType: !40, size: 64, offset: 3008)
!2535 = !DIDerivedType(tag: DW_TAG_member, name: "ui_handle", scope: !2406, file: !1927, line: 61, baseType: !2536, size: 64, offset: 576)
!2536 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmUIHandlerFunc", file: !2537, line: 149, baseType: !2538)
!2537 = !DIFile(filename: "blender/source/blender/windowmanager/WM_api.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2538 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2539, size: 64)
!2539 = !DISubroutineType(types: !2540)
!2540 = !{!34, !67, !78, !40}
!2541 = !DIDerivedType(tag: DW_TAG_member, name: "ui_remove", scope: !2406, file: !1927, line: 62, baseType: !2542, size: 64, offset: 640)
!2542 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmUIHandlerRemoveFunc", file: !2537, line: 150, baseType: !2543)
!2543 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2544, size: 64)
!2544 = !DISubroutineType(types: !2545)
!2545 = !{null, !67, !40}
!2546 = !DIDerivedType(tag: DW_TAG_member, name: "ui_userdata", scope: !2406, file: !1927, line: 63, baseType: !40, size: 64, offset: 704)
!2547 = !DIDerivedType(tag: DW_TAG_member, name: "ui_area", scope: !2406, file: !1927, line: 64, baseType: !2206, size: 64, offset: 768)
!2548 = !DIDerivedType(tag: DW_TAG_member, name: "ui_region", scope: !2406, file: !1927, line: 65, baseType: !2423, size: 64, offset: 832)
!2549 = !DIDerivedType(tag: DW_TAG_member, name: "ui_menu", scope: !2406, file: !1927, line: 66, baseType: !2423, size: 64, offset: 896)
!2550 = !DIDerivedType(tag: DW_TAG_member, name: "filescreen", scope: !2406, file: !1927, line: 69, baseType: !232, size: 64, offset: 960)
!2551 = !DIDerivedType(tag: DW_TAG_member, name: "dropboxes", scope: !2406, file: !1927, line: 72, baseType: !401, size: 64, offset: 1024)
!2552 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2553, size: 64)
!2553 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmEvent", file: !55, line: 460, baseType: !80)
!2554 = !{}
!2555 = !DIGlobalVariableExpression(var: !2556, expr: !DIExpression())
!2556 = distinct !DIGlobalVariable(name: "mmb_emulated", scope: !2557, file: !3, line: 2859, type: !34, isLocal: true, isDefinition: true)
!2557 = distinct !DISubprogram(name: "wm_eventemulation", scope: !3, file: !3, line: 2856, type: !2558, scopeLine: 2857, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!2558 = !DISubroutineType(types: !2559)
!2559 = !{null, !2552}
!2560 = !{i32 7, !"Dwarf Version", i32 4}
!2561 = !{i32 2, !"Debug Info Version", i32 3}
!2562 = !{i32 1, !"wchar_size", i32 4}
!2563 = !{!"clang version 10.0.1 (https://github.com/svkeerthy/IR2Vec-LoopOptimizationFramework.git 561ac470e63b728263a0ac06ef987886ac648486)"}
!2564 = distinct !DISubprogram(name: "wm_event_add", scope: !3, file: !3, line: 98, type: !2565, scopeLine: 99, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!2565 = !DISubroutineType(types: !2566)
!2566 = !{null, !2567, !2569}
!2567 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2568, size: 64)
!2568 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmWindow", file: !8, line: 209, baseType: !226)
!2569 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2570, size: 64)
!2570 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2553)
!2571 = !DILocalVariable(name: "win", arg: 1, scope: !2564, file: !3, line: 98, type: !2567)
!2572 = !DILocation(line: 98, column: 29, scope: !2564)
!2573 = !DILocalVariable(name: "event_to_add", arg: 2, scope: !2564, file: !3, line: 98, type: !2569)
!2574 = !DILocation(line: 98, column: 49, scope: !2564)
!2575 = !DILocalVariable(name: "event", scope: !2564, file: !3, line: 100, type: !2552)
!2576 = !DILocation(line: 100, column: 11, scope: !2564)
!2577 = !DILocation(line: 100, column: 19, scope: !2564)
!2578 = !DILocation(line: 102, column: 3, scope: !2564)
!2579 = !DILocation(line: 102, column: 12, scope: !2564)
!2580 = !DILocation(line: 102, column: 11, scope: !2564)
!2581 = !DILocation(line: 104, column: 21, scope: !2564)
!2582 = !DILocation(line: 104, column: 26, scope: !2564)
!2583 = !DILocation(line: 104, column: 2, scope: !2564)
!2584 = !DILocation(line: 106, column: 15, scope: !2564)
!2585 = !DILocation(line: 106, column: 20, scope: !2564)
!2586 = !DILocation(line: 106, column: 27, scope: !2564)
!2587 = !DILocation(line: 106, column: 2, scope: !2564)
!2588 = !DILocation(line: 107, column: 1, scope: !2564)
!2589 = distinct !DISubprogram(name: "update_tablet_data", scope: !3, file: !3, line: 2926, type: !2590, scopeLine: 2927, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!2590 = !DISubroutineType(types: !2591)
!2591 = !{null, !2567, !2552}
!2592 = !DILocalVariable(name: "win", arg: 1, scope: !2589, file: !3, line: 2926, type: !2567)
!2593 = !DILocation(line: 2926, column: 42, scope: !2589)
!2594 = !DILocalVariable(name: "event", arg: 2, scope: !2589, file: !3, line: 2926, type: !2552)
!2595 = !DILocation(line: 2926, column: 56, scope: !2589)
!2596 = !DILocalVariable(name: "td", scope: !2589, file: !3, line: 2928, type: !2597)
!2597 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2598, size: 64)
!2598 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2599)
!2599 = !DIDerivedType(tag: DW_TAG_typedef, name: "GHOST_TabletData", file: !1969, line: 86, baseType: !2600)
!2600 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "GHOST_TabletData", file: !1969, line: 81, size: 128, elements: !2601)
!2601 = !{!2602, !2604, !2605, !2606}
!2602 = !DIDerivedType(tag: DW_TAG_member, name: "Active", scope: !2600, file: !1969, line: 82, baseType: !2603, size: 32)
!2603 = !DIDerivedType(tag: DW_TAG_typedef, name: "GHOST_TTabletMode", file: !1969, line: 79, baseType: !2188)
!2604 = !DIDerivedType(tag: DW_TAG_member, name: "Pressure", scope: !2600, file: !1969, line: 83, baseType: !120, size: 32, offset: 32)
!2605 = !DIDerivedType(tag: DW_TAG_member, name: "Xtilt", scope: !2600, file: !1969, line: 84, baseType: !120, size: 32, offset: 64)
!2606 = !DIDerivedType(tag: DW_TAG_member, name: "Ytilt", scope: !2600, file: !1969, line: 85, baseType: !120, size: 32, offset: 96)
!2607 = !DILocation(line: 2928, column: 26, scope: !2589)
!2608 = !DILocation(line: 2928, column: 51, scope: !2589)
!2609 = !DILocation(line: 2928, column: 56, scope: !2589)
!2610 = !DILocation(line: 2928, column: 31, scope: !2589)
!2611 = !DILocation(line: 2931, column: 7, scope: !2612)
!2612 = distinct !DILexicalBlock(scope: !2589, file: !3, line: 2931, column: 6)
!2613 = !DILocation(line: 2931, column: 10, scope: !2612)
!2614 = !DILocation(line: 2931, column: 19, scope: !2612)
!2615 = !DILocation(line: 2931, column: 22, scope: !2612)
!2616 = !DILocation(line: 2931, column: 26, scope: !2612)
!2617 = !DILocation(line: 2931, column: 33, scope: !2612)
!2618 = !DILocation(line: 2931, column: 6, scope: !2589)
!2619 = !DILocalVariable(name: "wmtab", scope: !2620, file: !3, line: 2932, type: !115)
!2620 = distinct !DILexicalBlock(scope: !2612, file: !3, line: 2931, column: 59)
!2621 = !DILocation(line: 2932, column: 24, scope: !2620)
!2622 = !DILocation(line: 2932, column: 32, scope: !2620)
!2623 = !DILocation(line: 2934, column: 24, scope: !2620)
!2624 = !DILocation(line: 2934, column: 28, scope: !2620)
!2625 = !DILocation(line: 2934, column: 3, scope: !2620)
!2626 = !DILocation(line: 2934, column: 10, scope: !2620)
!2627 = !DILocation(line: 2934, column: 17, scope: !2620)
!2628 = !DILocation(line: 2935, column: 21, scope: !2620)
!2629 = !DILocation(line: 2935, column: 25, scope: !2620)
!2630 = !DILocation(line: 2935, column: 3, scope: !2620)
!2631 = !DILocation(line: 2935, column: 10, scope: !2620)
!2632 = !DILocation(line: 2935, column: 19, scope: !2620)
!2633 = !DILocation(line: 2936, column: 18, scope: !2620)
!2634 = !DILocation(line: 2936, column: 22, scope: !2620)
!2635 = !DILocation(line: 2936, column: 3, scope: !2620)
!2636 = !DILocation(line: 2936, column: 10, scope: !2620)
!2637 = !DILocation(line: 2936, column: 16, scope: !2620)
!2638 = !DILocation(line: 2937, column: 18, scope: !2620)
!2639 = !DILocation(line: 2937, column: 22, scope: !2620)
!2640 = !DILocation(line: 2937, column: 3, scope: !2620)
!2641 = !DILocation(line: 2937, column: 10, scope: !2620)
!2642 = !DILocation(line: 2937, column: 16, scope: !2620)
!2643 = !DILocation(line: 2939, column: 24, scope: !2620)
!2644 = !DILocation(line: 2939, column: 3, scope: !2620)
!2645 = !DILocation(line: 2939, column: 10, scope: !2620)
!2646 = !DILocation(line: 2939, column: 22, scope: !2620)
!2647 = !DILocation(line: 2941, column: 2, scope: !2620)
!2648 = !DILocation(line: 2943, column: 3, scope: !2649)
!2649 = distinct !DILexicalBlock(scope: !2612, file: !3, line: 2942, column: 7)
!2650 = !DILocation(line: 2943, column: 10, scope: !2649)
!2651 = !DILocation(line: 2943, column: 22, scope: !2649)
!2652 = !DILocation(line: 2946, column: 1, scope: !2589)
!2653 = distinct !DISubprogram(name: "wm_event_free", scope: !3, file: !3, line: 109, type: !2558, scopeLine: 110, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!2654 = !DILocalVariable(name: "event", arg: 1, scope: !2653, file: !3, line: 109, type: !2552)
!2655 = !DILocation(line: 109, column: 29, scope: !2653)
!2656 = !DILocation(line: 111, column: 6, scope: !2657)
!2657 = distinct !DILexicalBlock(scope: !2653, file: !3, line: 111, column: 6)
!2658 = !DILocation(line: 111, column: 13, scope: !2657)
!2659 = !DILocation(line: 111, column: 6, scope: !2653)
!2660 = !DILocation(line: 112, column: 7, scope: !2661)
!2661 = distinct !DILexicalBlock(scope: !2662, file: !3, line: 112, column: 7)
!2662 = distinct !DILexicalBlock(scope: !2657, file: !3, line: 111, column: 25)
!2663 = !DILocation(line: 112, column: 14, scope: !2661)
!2664 = !DILocation(line: 112, column: 7, scope: !2662)
!2665 = !DILocation(line: 114, column: 8, scope: !2666)
!2666 = distinct !DILexicalBlock(scope: !2667, file: !3, line: 114, column: 8)
!2667 = distinct !DILexicalBlock(scope: !2661, file: !3, line: 112, column: 30)
!2668 = !DILocation(line: 114, column: 15, scope: !2666)
!2669 = !DILocation(line: 114, column: 22, scope: !2666)
!2670 = !DILocation(line: 114, column: 8, scope: !2667)
!2671 = !DILocalVariable(name: "lb", scope: !2672, file: !3, line: 115, type: !401)
!2672 = distinct !DILexicalBlock(scope: !2666, file: !3, line: 114, column: 44)
!2673 = !DILocation(line: 115, column: 15, scope: !2672)
!2674 = !DILocation(line: 115, column: 20, scope: !2672)
!2675 = !DILocation(line: 115, column: 27, scope: !2672)
!2676 = !DILocation(line: 116, column: 23, scope: !2672)
!2677 = !DILocation(line: 116, column: 5, scope: !2672)
!2678 = !DILocation(line: 117, column: 4, scope: !2672)
!2679 = !DILocation(line: 119, column: 5, scope: !2680)
!2680 = distinct !DILexicalBlock(scope: !2666, file: !3, line: 118, column: 9)
!2681 = !DILocation(line: 119, column: 15, scope: !2680)
!2682 = !DILocation(line: 119, column: 22, scope: !2680)
!2683 = !DILocation(line: 121, column: 3, scope: !2667)
!2684 = !DILocation(line: 122, column: 2, scope: !2662)
!2685 = !DILocation(line: 124, column: 6, scope: !2686)
!2686 = distinct !DILexicalBlock(scope: !2653, file: !3, line: 124, column: 6)
!2687 = !DILocation(line: 124, column: 13, scope: !2686)
!2688 = !DILocation(line: 124, column: 6, scope: !2653)
!2689 = !DILocation(line: 125, column: 3, scope: !2690)
!2690 = distinct !DILexicalBlock(scope: !2686, file: !3, line: 124, column: 26)
!2691 = !DILocation(line: 125, column: 13, scope: !2690)
!2692 = !DILocation(line: 125, column: 20, scope: !2690)
!2693 = !DILocation(line: 126, column: 2, scope: !2690)
!2694 = !DILocation(line: 128, column: 2, scope: !2653)
!2695 = !DILocation(line: 128, column: 12, scope: !2653)
!2696 = !DILocation(line: 129, column: 1, scope: !2653)
!2697 = distinct !DISubprogram(name: "wm_event_free_all", scope: !3, file: !3, line: 131, type: !2698, scopeLine: 132, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!2698 = !DISubroutineType(types: !2699)
!2699 = !{null, !2567}
!2700 = !DILocalVariable(name: "win", arg: 1, scope: !2697, file: !3, line: 131, type: !2567)
!2701 = !DILocation(line: 131, column: 34, scope: !2697)
!2702 = !DILocalVariable(name: "event", scope: !2697, file: !3, line: 133, type: !2552)
!2703 = !DILocation(line: 133, column: 11, scope: !2697)
!2704 = !DILocation(line: 135, column: 2, scope: !2697)
!2705 = !DILocation(line: 135, column: 31, scope: !2697)
!2706 = !DILocation(line: 135, column: 36, scope: !2697)
!2707 = !DILocation(line: 135, column: 18, scope: !2697)
!2708 = !DILocation(line: 135, column: 16, scope: !2697)
!2709 = !DILocation(line: 136, column: 17, scope: !2710)
!2710 = distinct !DILexicalBlock(scope: !2697, file: !3, line: 135, column: 45)
!2711 = !DILocation(line: 136, column: 3, scope: !2710)
!2712 = distinct !{!2712, !2704, !2713}
!2713 = !DILocation(line: 137, column: 2, scope: !2697)
!2714 = !DILocation(line: 138, column: 1, scope: !2697)
!2715 = distinct !DISubprogram(name: "wm_event_init_from_window", scope: !3, file: !3, line: 140, type: !2590, scopeLine: 141, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!2716 = !DILocalVariable(name: "win", arg: 1, scope: !2715, file: !3, line: 140, type: !2567)
!2717 = !DILocation(line: 140, column: 42, scope: !2715)
!2718 = !DILocalVariable(name: "event", arg: 2, scope: !2715, file: !3, line: 140, type: !2552)
!2719 = !DILocation(line: 140, column: 56, scope: !2715)
!2720 = !DILocation(line: 145, column: 3, scope: !2715)
!2721 = !DILocation(line: 145, column: 13, scope: !2715)
!2722 = !DILocation(line: 145, column: 18, scope: !2715)
!2723 = !DILocation(line: 145, column: 11, scope: !2715)
!2724 = !DILocation(line: 146, column: 1, scope: !2715)
!2725 = distinct !DISubprogram(name: "WM_event_add_notifier", scope: !3, file: !3, line: 162, type: !2726, scopeLine: 163, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!2726 = !DISubroutineType(types: !2727)
!2727 = !{null, !2728, !300, !40}
!2728 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2729, size: 64)
!2729 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !2403)
!2730 = !DILocalVariable(name: "C", arg: 1, scope: !2725, file: !3, line: 162, type: !2728)
!2731 = !DILocation(line: 162, column: 44, scope: !2725)
!2732 = !DILocalVariable(name: "type", arg: 2, scope: !2725, file: !3, line: 162, type: !300)
!2733 = !DILocation(line: 162, column: 60, scope: !2725)
!2734 = !DILocalVariable(name: "reference", arg: 3, scope: !2725, file: !3, line: 162, type: !40)
!2735 = !DILocation(line: 162, column: 72, scope: !2725)
!2736 = !DILocalVariable(name: "ar", scope: !2725, file: !3, line: 164, type: !2737)
!2737 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2738, size: 64)
!2738 = !DIDerivedType(tag: DW_TAG_typedef, name: "ARegion", file: !234, line: 267, baseType: !2424)
!2739 = !DILocation(line: 164, column: 11, scope: !2725)
!2740 = !DILocalVariable(name: "wm", scope: !2725, file: !3, line: 165, type: !1543)
!2741 = !DILocation(line: 165, column: 19, scope: !2725)
!2742 = !DILocation(line: 165, column: 39, scope: !2725)
!2743 = !DILocation(line: 165, column: 24, scope: !2725)
!2744 = !DILocalVariable(name: "note", scope: !2725, file: !3, line: 166, type: !2745)
!2745 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2746, size: 64)
!2746 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmNotifier", file: !55, line: 206, baseType: !2283)
!2747 = !DILocation(line: 166, column: 14, scope: !2725)
!2748 = !DILocation(line: 168, column: 33, scope: !2749)
!2749 = distinct !DILexicalBlock(scope: !2725, file: !3, line: 168, column: 6)
!2750 = !DILocation(line: 168, column: 37, scope: !2749)
!2751 = !DILocation(line: 168, column: 43, scope: !2749)
!2752 = !DILocation(line: 168, column: 6, scope: !2749)
!2753 = !DILocation(line: 168, column: 6, scope: !2725)
!2754 = !DILocation(line: 169, column: 3, scope: !2749)
!2755 = !DILocation(line: 171, column: 9, scope: !2725)
!2756 = !DILocation(line: 171, column: 7, scope: !2725)
!2757 = !DILocation(line: 173, column: 13, scope: !2725)
!2758 = !DILocation(line: 173, column: 2, scope: !2725)
!2759 = !DILocation(line: 173, column: 8, scope: !2725)
!2760 = !DILocation(line: 173, column: 11, scope: !2725)
!2761 = !DILocation(line: 174, column: 15, scope: !2725)
!2762 = !DILocation(line: 174, column: 21, scope: !2725)
!2763 = !DILocation(line: 174, column: 25, scope: !2725)
!2764 = !DILocation(line: 174, column: 32, scope: !2725)
!2765 = !DILocation(line: 174, column: 2, scope: !2725)
!2766 = !DILocation(line: 176, column: 31, scope: !2725)
!2767 = !DILocation(line: 176, column: 17, scope: !2725)
!2768 = !DILocation(line: 176, column: 2, scope: !2725)
!2769 = !DILocation(line: 176, column: 8, scope: !2725)
!2770 = !DILocation(line: 176, column: 15, scope: !2725)
!2771 = !DILocation(line: 178, column: 21, scope: !2725)
!2772 = !DILocation(line: 178, column: 7, scope: !2725)
!2773 = !DILocation(line: 178, column: 5, scope: !2725)
!2774 = !DILocation(line: 179, column: 6, scope: !2775)
!2775 = distinct !DILexicalBlock(scope: !2725, file: !3, line: 179, column: 6)
!2776 = !DILocation(line: 179, column: 6, scope: !2725)
!2777 = !DILocation(line: 180, column: 18, scope: !2775)
!2778 = !DILocation(line: 180, column: 22, scope: !2775)
!2779 = !DILocation(line: 180, column: 3, scope: !2775)
!2780 = !DILocation(line: 180, column: 9, scope: !2775)
!2781 = !DILocation(line: 180, column: 16, scope: !2775)
!2782 = !DILocation(line: 182, column: 19, scope: !2725)
!2783 = !DILocation(line: 182, column: 24, scope: !2725)
!2784 = !DILocation(line: 182, column: 2, scope: !2725)
!2785 = !DILocation(line: 182, column: 8, scope: !2725)
!2786 = !DILocation(line: 182, column: 17, scope: !2725)
!2787 = !DILocation(line: 183, column: 15, scope: !2725)
!2788 = !DILocation(line: 183, column: 20, scope: !2725)
!2789 = !DILocation(line: 183, column: 2, scope: !2725)
!2790 = !DILocation(line: 183, column: 8, scope: !2725)
!2791 = !DILocation(line: 183, column: 13, scope: !2725)
!2792 = !DILocation(line: 184, column: 18, scope: !2725)
!2793 = !DILocation(line: 184, column: 23, scope: !2725)
!2794 = !DILocation(line: 184, column: 2, scope: !2725)
!2795 = !DILocation(line: 184, column: 8, scope: !2725)
!2796 = !DILocation(line: 184, column: 16, scope: !2725)
!2797 = !DILocation(line: 185, column: 17, scope: !2725)
!2798 = !DILocation(line: 185, column: 22, scope: !2725)
!2799 = !DILocation(line: 185, column: 2, scope: !2725)
!2800 = !DILocation(line: 185, column: 8, scope: !2725)
!2801 = !DILocation(line: 185, column: 15, scope: !2725)
!2802 = !DILocation(line: 187, column: 20, scope: !2725)
!2803 = !DILocation(line: 187, column: 2, scope: !2725)
!2804 = !DILocation(line: 187, column: 8, scope: !2725)
!2805 = !DILocation(line: 187, column: 18, scope: !2725)
!2806 = !DILocation(line: 188, column: 1, scope: !2725)
!2807 = distinct !DISubprogram(name: "wm_test_duplicate_notifier", scope: !3, file: !3, line: 150, type: !2808, scopeLine: 151, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!2808 = !DISubroutineType(types: !2809)
!2809 = !{!73, !1543, !300, !40}
!2810 = !DILocalVariable(name: "wm", arg: 1, scope: !2807, file: !3, line: 150, type: !1543)
!2811 = !DILocation(line: 150, column: 57, scope: !2807)
!2812 = !DILocalVariable(name: "type", arg: 2, scope: !2807, file: !3, line: 150, type: !300)
!2813 = !DILocation(line: 150, column: 74, scope: !2807)
!2814 = !DILocalVariable(name: "reference", arg: 3, scope: !2807, file: !3, line: 150, type: !40)
!2815 = !DILocation(line: 150, column: 86, scope: !2807)
!2816 = !DILocalVariable(name: "note", scope: !2807, file: !3, line: 152, type: !2745)
!2817 = !DILocation(line: 152, column: 14, scope: !2807)
!2818 = !DILocation(line: 154, column: 14, scope: !2819)
!2819 = distinct !DILexicalBlock(scope: !2807, file: !3, line: 154, column: 2)
!2820 = !DILocation(line: 154, column: 18, scope: !2819)
!2821 = !DILocation(line: 154, column: 24, scope: !2819)
!2822 = !DILocation(line: 154, column: 12, scope: !2819)
!2823 = !DILocation(line: 154, column: 7, scope: !2819)
!2824 = !DILocation(line: 154, column: 31, scope: !2825)
!2825 = distinct !DILexicalBlock(scope: !2819, file: !3, line: 154, column: 2)
!2826 = !DILocation(line: 154, column: 2, scope: !2819)
!2827 = !DILocation(line: 155, column: 8, scope: !2828)
!2828 = distinct !DILexicalBlock(scope: !2825, file: !3, line: 155, column: 7)
!2829 = !DILocation(line: 155, column: 14, scope: !2828)
!2830 = !DILocation(line: 155, column: 25, scope: !2828)
!2831 = !DILocation(line: 155, column: 31, scope: !2828)
!2832 = !DILocation(line: 155, column: 23, scope: !2828)
!2833 = !DILocation(line: 155, column: 38, scope: !2828)
!2834 = !DILocation(line: 155, column: 44, scope: !2828)
!2835 = !DILocation(line: 155, column: 36, scope: !2828)
!2836 = !DILocation(line: 155, column: 54, scope: !2828)
!2837 = !DILocation(line: 155, column: 60, scope: !2828)
!2838 = !DILocation(line: 155, column: 52, scope: !2828)
!2839 = !DILocation(line: 155, column: 71, scope: !2828)
!2840 = !DILocation(line: 155, column: 68, scope: !2828)
!2841 = !DILocation(line: 155, column: 76, scope: !2828)
!2842 = !DILocation(line: 155, column: 79, scope: !2828)
!2843 = !DILocation(line: 155, column: 85, scope: !2828)
!2844 = !DILocation(line: 155, column: 98, scope: !2828)
!2845 = !DILocation(line: 155, column: 95, scope: !2828)
!2846 = !DILocation(line: 155, column: 7, scope: !2825)
!2847 = !DILocation(line: 156, column: 4, scope: !2828)
!2848 = !DILocation(line: 154, column: 44, scope: !2825)
!2849 = !DILocation(line: 154, column: 50, scope: !2825)
!2850 = !DILocation(line: 154, column: 42, scope: !2825)
!2851 = !DILocation(line: 154, column: 2, scope: !2825)
!2852 = distinct !{!2852, !2826, !2853}
!2853 = !DILocation(line: 156, column: 11, scope: !2819)
!2854 = !DILocation(line: 158, column: 2, scope: !2807)
!2855 = !DILocation(line: 159, column: 1, scope: !2807)
!2856 = distinct !DISubprogram(name: "WM_main_add_notifier", scope: !3, file: !3, line: 190, type: !2857, scopeLine: 191, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!2857 = !DISubroutineType(types: !2858)
!2858 = !{null, !300, !40}
!2859 = !DILocalVariable(name: "type", arg: 1, scope: !2856, file: !3, line: 190, type: !300)
!2860 = !DILocation(line: 190, column: 40, scope: !2856)
!2861 = !DILocalVariable(name: "reference", arg: 2, scope: !2856, file: !3, line: 190, type: !40)
!2862 = !DILocation(line: 190, column: 52, scope: !2856)
!2863 = !DILocalVariable(name: "bmain", scope: !2856, file: !3, line: 192, type: !2864)
!2864 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2865, size: 64)
!2865 = !DIDerivedType(tag: DW_TAG_typedef, name: "Main", file: !2866, line: 104, baseType: !2867)
!2866 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_main.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!2867 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Main", file: !2866, line: 53, size: 15232, elements: !2868)
!2868 = !{!2869, !2871, !2872, !2873, !2874, !2875, !2876, !2877, !2878, !2882, !2883, !2884, !2885, !2886, !2887, !2888, !2889, !2890, !2891, !2892, !2893, !2894, !2895, !2896, !2897, !2898, !2899, !2900, !2901, !2902, !2903, !2904, !2905, !2906, !2907, !2908, !2909, !2910, !2911, !2912, !2913, !2914, !2915, !2916, !2917, !2918, !2919, !2922}
!2869 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !2867, file: !2866, line: 54, baseType: !2870, size: 64)
!2870 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2867, size: 64)
!2871 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !2867, file: !2866, line: 54, baseType: !2870, size: 64, offset: 64)
!2872 = !DIDerivedType(tag: DW_TAG_member, name: "name", scope: !2867, file: !2866, line: 55, baseType: !255, size: 8192, offset: 128)
!2873 = !DIDerivedType(tag: DW_TAG_member, name: "versionfile", scope: !2867, file: !2866, line: 56, baseType: !31, size: 16, offset: 8320)
!2874 = !DIDerivedType(tag: DW_TAG_member, name: "subversionfile", scope: !2867, file: !2866, line: 56, baseType: !31, size: 16, offset: 8336)
!2875 = !DIDerivedType(tag: DW_TAG_member, name: "minversionfile", scope: !2867, file: !2866, line: 57, baseType: !31, size: 16, offset: 8352)
!2876 = !DIDerivedType(tag: DW_TAG_member, name: "minsubversionfile", scope: !2867, file: !2866, line: 57, baseType: !31, size: 16, offset: 8368)
!2877 = !DIDerivedType(tag: DW_TAG_member, name: "build_commit_timestamp", scope: !2867, file: !2866, line: 58, baseType: !1455, size: 64, offset: 8384)
!2878 = !DIDerivedType(tag: DW_TAG_member, name: "build_hash", scope: !2867, file: !2866, line: 59, baseType: !2879, size: 128, offset: 8448)
!2879 = !DICompositeType(tag: DW_TAG_array_type, baseType: !16, size: 128, elements: !2880)
!2880 = !{!2881}
!2881 = !DISubrange(count: 16)
!2882 = !DIDerivedType(tag: DW_TAG_member, name: "recovered", scope: !2867, file: !2866, line: 60, baseType: !31, size: 16, offset: 8576)
!2883 = !DIDerivedType(tag: DW_TAG_member, name: "curlib", scope: !2867, file: !2866, line: 62, baseType: !245, size: 64, offset: 8640)
!2884 = !DIDerivedType(tag: DW_TAG_member, name: "scene", scope: !2867, file: !2866, line: 63, baseType: !42, size: 128, offset: 8704)
!2885 = !DIDerivedType(tag: DW_TAG_member, name: "library", scope: !2867, file: !2866, line: 64, baseType: !42, size: 128, offset: 8832)
!2886 = !DIDerivedType(tag: DW_TAG_member, name: "object", scope: !2867, file: !2866, line: 65, baseType: !42, size: 128, offset: 8960)
!2887 = !DIDerivedType(tag: DW_TAG_member, name: "mesh", scope: !2867, file: !2866, line: 66, baseType: !42, size: 128, offset: 9088)
!2888 = !DIDerivedType(tag: DW_TAG_member, name: "curve", scope: !2867, file: !2866, line: 67, baseType: !42, size: 128, offset: 9216)
!2889 = !DIDerivedType(tag: DW_TAG_member, name: "mball", scope: !2867, file: !2866, line: 68, baseType: !42, size: 128, offset: 9344)
!2890 = !DIDerivedType(tag: DW_TAG_member, name: "mat", scope: !2867, file: !2866, line: 69, baseType: !42, size: 128, offset: 9472)
!2891 = !DIDerivedType(tag: DW_TAG_member, name: "tex", scope: !2867, file: !2866, line: 70, baseType: !42, size: 128, offset: 9600)
!2892 = !DIDerivedType(tag: DW_TAG_member, name: "image", scope: !2867, file: !2866, line: 71, baseType: !42, size: 128, offset: 9728)
!2893 = !DIDerivedType(tag: DW_TAG_member, name: "latt", scope: !2867, file: !2866, line: 72, baseType: !42, size: 128, offset: 9856)
!2894 = !DIDerivedType(tag: DW_TAG_member, name: "lamp", scope: !2867, file: !2866, line: 73, baseType: !42, size: 128, offset: 9984)
!2895 = !DIDerivedType(tag: DW_TAG_member, name: "camera", scope: !2867, file: !2866, line: 74, baseType: !42, size: 128, offset: 10112)
!2896 = !DIDerivedType(tag: DW_TAG_member, name: "ipo", scope: !2867, file: !2866, line: 75, baseType: !42, size: 128, offset: 10240)
!2897 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !2867, file: !2866, line: 76, baseType: !42, size: 128, offset: 10368)
!2898 = !DIDerivedType(tag: DW_TAG_member, name: "world", scope: !2867, file: !2866, line: 77, baseType: !42, size: 128, offset: 10496)
!2899 = !DIDerivedType(tag: DW_TAG_member, name: "screen", scope: !2867, file: !2866, line: 78, baseType: !42, size: 128, offset: 10624)
!2900 = !DIDerivedType(tag: DW_TAG_member, name: "script", scope: !2867, file: !2866, line: 79, baseType: !42, size: 128, offset: 10752)
!2901 = !DIDerivedType(tag: DW_TAG_member, name: "vfont", scope: !2867, file: !2866, line: 80, baseType: !42, size: 128, offset: 10880)
!2902 = !DIDerivedType(tag: DW_TAG_member, name: "text", scope: !2867, file: !2866, line: 81, baseType: !42, size: 128, offset: 11008)
!2903 = !DIDerivedType(tag: DW_TAG_member, name: "speaker", scope: !2867, file: !2866, line: 82, baseType: !42, size: 128, offset: 11136)
!2904 = !DIDerivedType(tag: DW_TAG_member, name: "sound", scope: !2867, file: !2866, line: 83, baseType: !42, size: 128, offset: 11264)
!2905 = !DIDerivedType(tag: DW_TAG_member, name: "group", scope: !2867, file: !2866, line: 84, baseType: !42, size: 128, offset: 11392)
!2906 = !DIDerivedType(tag: DW_TAG_member, name: "armature", scope: !2867, file: !2866, line: 85, baseType: !42, size: 128, offset: 11520)
!2907 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !2867, file: !2866, line: 86, baseType: !42, size: 128, offset: 11648)
!2908 = !DIDerivedType(tag: DW_TAG_member, name: "nodetree", scope: !2867, file: !2866, line: 87, baseType: !42, size: 128, offset: 11776)
!2909 = !DIDerivedType(tag: DW_TAG_member, name: "brush", scope: !2867, file: !2866, line: 88, baseType: !42, size: 128, offset: 11904)
!2910 = !DIDerivedType(tag: DW_TAG_member, name: "particle", scope: !2867, file: !2866, line: 89, baseType: !42, size: 128, offset: 12032)
!2911 = !DIDerivedType(tag: DW_TAG_member, name: "palettes", scope: !2867, file: !2866, line: 90, baseType: !42, size: 128, offset: 12160)
!2912 = !DIDerivedType(tag: DW_TAG_member, name: "paintcurves", scope: !2867, file: !2866, line: 91, baseType: !42, size: 128, offset: 12288)
!2913 = !DIDerivedType(tag: DW_TAG_member, name: "wm", scope: !2867, file: !2866, line: 92, baseType: !42, size: 128, offset: 12416)
!2914 = !DIDerivedType(tag: DW_TAG_member, name: "gpencil", scope: !2867, file: !2866, line: 93, baseType: !42, size: 128, offset: 12544)
!2915 = !DIDerivedType(tag: DW_TAG_member, name: "movieclip", scope: !2867, file: !2866, line: 94, baseType: !42, size: 128, offset: 12672)
!2916 = !DIDerivedType(tag: DW_TAG_member, name: "mask", scope: !2867, file: !2866, line: 95, baseType: !42, size: 128, offset: 12800)
!2917 = !DIDerivedType(tag: DW_TAG_member, name: "linestyle", scope: !2867, file: !2866, line: 96, baseType: !42, size: 128, offset: 12928)
!2918 = !DIDerivedType(tag: DW_TAG_member, name: "id_tag_update", scope: !2867, file: !2866, line: 98, baseType: !452, size: 2048, offset: 13056)
!2919 = !DIDerivedType(tag: DW_TAG_member, name: "eval_ctx", scope: !2867, file: !2866, line: 101, baseType: !2920, size: 64, offset: 15104)
!2920 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2921, size: 64)
!2921 = !DICompositeType(tag: DW_TAG_structure_type, name: "EvaluationContext", file: !2866, line: 49, flags: DIFlagFwdDecl)
!2922 = !DIDerivedType(tag: DW_TAG_member, name: "lock", scope: !2867, file: !2866, line: 103, baseType: !2923, size: 64, offset: 15168)
!2923 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2924, size: 64)
!2924 = !DICompositeType(tag: DW_TAG_structure_type, name: "MainLock", file: !2866, line: 51, flags: DIFlagFwdDecl)
!2925 = !DILocation(line: 192, column: 8, scope: !2856)
!2926 = !DILocation(line: 192, column: 18, scope: !2856)
!2927 = !DILocalVariable(name: "wm", scope: !2856, file: !3, line: 193, type: !1543)
!2928 = !DILocation(line: 193, column: 19, scope: !2856)
!2929 = !DILocation(line: 193, column: 24, scope: !2856)
!2930 = !DILocation(line: 193, column: 31, scope: !2856)
!2931 = !DILocation(line: 193, column: 34, scope: !2856)
!2932 = !DILocalVariable(name: "note", scope: !2856, file: !3, line: 194, type: !2745)
!2933 = !DILocation(line: 194, column: 14, scope: !2856)
!2934 = !DILocation(line: 196, column: 7, scope: !2935)
!2935 = distinct !DILexicalBlock(scope: !2856, file: !3, line: 196, column: 6)
!2936 = !DILocation(line: 196, column: 10, scope: !2935)
!2937 = !DILocation(line: 196, column: 40, scope: !2935)
!2938 = !DILocation(line: 196, column: 44, scope: !2935)
!2939 = !DILocation(line: 196, column: 50, scope: !2935)
!2940 = !DILocation(line: 196, column: 13, scope: !2935)
!2941 = !DILocation(line: 196, column: 6, scope: !2856)
!2942 = !DILocation(line: 197, column: 3, scope: !2935)
!2943 = !DILocation(line: 199, column: 9, scope: !2856)
!2944 = !DILocation(line: 199, column: 7, scope: !2856)
!2945 = !DILocation(line: 201, column: 13, scope: !2856)
!2946 = !DILocation(line: 201, column: 2, scope: !2856)
!2947 = !DILocation(line: 201, column: 8, scope: !2856)
!2948 = !DILocation(line: 201, column: 11, scope: !2856)
!2949 = !DILocation(line: 202, column: 15, scope: !2856)
!2950 = !DILocation(line: 202, column: 21, scope: !2856)
!2951 = !DILocation(line: 202, column: 25, scope: !2856)
!2952 = !DILocation(line: 202, column: 32, scope: !2856)
!2953 = !DILocation(line: 202, column: 2, scope: !2856)
!2954 = !DILocation(line: 204, column: 19, scope: !2856)
!2955 = !DILocation(line: 204, column: 24, scope: !2856)
!2956 = !DILocation(line: 204, column: 2, scope: !2856)
!2957 = !DILocation(line: 204, column: 8, scope: !2856)
!2958 = !DILocation(line: 204, column: 17, scope: !2856)
!2959 = !DILocation(line: 205, column: 15, scope: !2856)
!2960 = !DILocation(line: 205, column: 20, scope: !2856)
!2961 = !DILocation(line: 205, column: 2, scope: !2856)
!2962 = !DILocation(line: 205, column: 8, scope: !2856)
!2963 = !DILocation(line: 205, column: 13, scope: !2856)
!2964 = !DILocation(line: 206, column: 18, scope: !2856)
!2965 = !DILocation(line: 206, column: 23, scope: !2856)
!2966 = !DILocation(line: 206, column: 2, scope: !2856)
!2967 = !DILocation(line: 206, column: 8, scope: !2856)
!2968 = !DILocation(line: 206, column: 16, scope: !2856)
!2969 = !DILocation(line: 207, column: 17, scope: !2856)
!2970 = !DILocation(line: 207, column: 22, scope: !2856)
!2971 = !DILocation(line: 207, column: 2, scope: !2856)
!2972 = !DILocation(line: 207, column: 8, scope: !2856)
!2973 = !DILocation(line: 207, column: 15, scope: !2856)
!2974 = !DILocation(line: 209, column: 20, scope: !2856)
!2975 = !DILocation(line: 209, column: 2, scope: !2856)
!2976 = !DILocation(line: 209, column: 8, scope: !2856)
!2977 = !DILocation(line: 209, column: 18, scope: !2856)
!2978 = !DILocation(line: 210, column: 1, scope: !2856)
!2979 = distinct !DISubprogram(name: "WM_main_remove_notifier_reference", scope: !3, file: !3, line: 215, type: !2980, scopeLine: 216, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!2980 = !DISubroutineType(types: !2981)
!2981 = !{null, !2982}
!2982 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !2983, size: 64)
!2983 = !DIDerivedType(tag: DW_TAG_const_type, baseType: null)
!2984 = !DILocalVariable(name: "reference", arg: 1, scope: !2979, file: !3, line: 215, type: !2982)
!2985 = !DILocation(line: 215, column: 52, scope: !2979)
!2986 = !DILocalVariable(name: "bmain", scope: !2979, file: !3, line: 217, type: !2864)
!2987 = !DILocation(line: 217, column: 8, scope: !2979)
!2988 = !DILocation(line: 217, column: 18, scope: !2979)
!2989 = !DILocalVariable(name: "wm", scope: !2979, file: !3, line: 218, type: !1543)
!2990 = !DILocation(line: 218, column: 19, scope: !2979)
!2991 = !DILocation(line: 218, column: 24, scope: !2979)
!2992 = !DILocation(line: 218, column: 31, scope: !2979)
!2993 = !DILocation(line: 218, column: 34, scope: !2979)
!2994 = !DILocation(line: 219, column: 6, scope: !2995)
!2995 = distinct !DILexicalBlock(scope: !2979, file: !3, line: 219, column: 6)
!2996 = !DILocation(line: 219, column: 6, scope: !2979)
!2997 = !DILocalVariable(name: "note", scope: !2998, file: !3, line: 220, type: !2745)
!2998 = distinct !DILexicalBlock(scope: !2995, file: !3, line: 219, column: 10)
!2999 = !DILocation(line: 220, column: 15, scope: !2998)
!3000 = !DILocalVariable(name: "note_next", scope: !2998, file: !3, line: 220, type: !2745)
!3001 = !DILocation(line: 220, column: 22, scope: !2998)
!3002 = !DILocation(line: 222, column: 15, scope: !3003)
!3003 = distinct !DILexicalBlock(scope: !2998, file: !3, line: 222, column: 3)
!3004 = !DILocation(line: 222, column: 19, scope: !3003)
!3005 = !DILocation(line: 222, column: 25, scope: !3003)
!3006 = !DILocation(line: 222, column: 13, scope: !3003)
!3007 = !DILocation(line: 222, column: 8, scope: !3003)
!3008 = !DILocation(line: 222, column: 32, scope: !3009)
!3009 = distinct !DILexicalBlock(scope: !3003, file: !3, line: 222, column: 3)
!3010 = !DILocation(line: 222, column: 3, scope: !3003)
!3011 = !DILocation(line: 223, column: 16, scope: !3012)
!3012 = distinct !DILexicalBlock(scope: !3009, file: !3, line: 222, column: 56)
!3013 = !DILocation(line: 223, column: 22, scope: !3012)
!3014 = !DILocation(line: 223, column: 14, scope: !3012)
!3015 = !DILocation(line: 225, column: 8, scope: !3016)
!3016 = distinct !DILexicalBlock(scope: !3012, file: !3, line: 225, column: 8)
!3017 = !DILocation(line: 225, column: 14, scope: !3016)
!3018 = !DILocation(line: 225, column: 27, scope: !3016)
!3019 = !DILocation(line: 225, column: 24, scope: !3016)
!3020 = !DILocation(line: 225, column: 8, scope: !3012)
!3021 = !DILocation(line: 228, column: 23, scope: !3022)
!3022 = distinct !DILexicalBlock(scope: !3016, file: !3, line: 225, column: 38)
!3023 = !DILocation(line: 228, column: 5, scope: !3022)
!3024 = !DILocation(line: 229, column: 4, scope: !3022)
!3025 = !DILocation(line: 230, column: 3, scope: !3012)
!3026 = !DILocation(line: 222, column: 45, scope: !3009)
!3027 = !DILocation(line: 222, column: 43, scope: !3009)
!3028 = !DILocation(line: 222, column: 3, scope: !3009)
!3029 = distinct !{!3029, !3010, !3030}
!3030 = !DILocation(line: 230, column: 3, scope: !3003)
!3031 = !DILocation(line: 231, column: 2, scope: !2998)
!3032 = !DILocation(line: 232, column: 1, scope: !2979)
!3033 = distinct !DISubprogram(name: "wm_notifier_clear", scope: !3, file: !3, line: 234, type: !3034, scopeLine: 235, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!3034 = !DISubroutineType(types: !3035)
!3035 = !{null, !2745}
!3036 = !DILocalVariable(name: "note", arg: 1, scope: !3033, file: !3, line: 234, type: !2745)
!3037 = !DILocation(line: 234, column: 43, scope: !3033)
!3038 = !DILocation(line: 237, column: 18, scope: !3033)
!3039 = !DILocation(line: 237, column: 10, scope: !3033)
!3040 = !DILocation(line: 237, column: 24, scope: !3033)
!3041 = !DILocation(line: 237, column: 2, scope: !3033)
!3042 = !DILocation(line: 238, column: 1, scope: !3033)
!3043 = distinct !DISubprogram(name: "wm_event_do_notifiers", scope: !3, file: !3, line: 241, type: !3044, scopeLine: 242, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!3044 = !DISubroutineType(types: !3045)
!3045 = !{null, !2402}
!3046 = !DILocalVariable(name: "C", arg: 1, scope: !3043, file: !3, line: 241, type: !2402)
!3047 = !DILocation(line: 241, column: 38, scope: !3043)
!3048 = !DILocalVariable(name: "wm", scope: !3043, file: !3, line: 243, type: !1543)
!3049 = !DILocation(line: 243, column: 19, scope: !3043)
!3050 = !DILocation(line: 243, column: 39, scope: !3043)
!3051 = !DILocation(line: 243, column: 24, scope: !3043)
!3052 = !DILocalVariable(name: "note", scope: !3043, file: !3, line: 244, type: !2745)
!3053 = !DILocation(line: 244, column: 14, scope: !3043)
!3054 = !DILocalVariable(name: "next", scope: !3043, file: !3, line: 244, type: !2745)
!3055 = !DILocation(line: 244, column: 21, scope: !3043)
!3056 = !DILocalVariable(name: "win", scope: !3043, file: !3, line: 245, type: !2567)
!3057 = !DILocation(line: 245, column: 12, scope: !3043)
!3058 = !DILocalVariable(name: "win_combine_v3d_datamask", scope: !3043, file: !3, line: 246, type: !1455)
!3059 = !DILocation(line: 246, column: 11, scope: !3043)
!3060 = !DILocation(line: 248, column: 6, scope: !3061)
!3061 = distinct !DILexicalBlock(scope: !3043, file: !3, line: 248, column: 6)
!3062 = !DILocation(line: 248, column: 9, scope: !3061)
!3063 = !DILocation(line: 248, column: 6, scope: !3043)
!3064 = !DILocation(line: 249, column: 3, scope: !3061)
!3065 = !DILocation(line: 252, column: 13, scope: !3066)
!3066 = distinct !DILexicalBlock(scope: !3043, file: !3, line: 252, column: 2)
!3067 = !DILocation(line: 252, column: 17, scope: !3066)
!3068 = !DILocation(line: 252, column: 25, scope: !3066)
!3069 = !DILocation(line: 252, column: 11, scope: !3066)
!3070 = !DILocation(line: 252, column: 7, scope: !3066)
!3071 = !DILocation(line: 252, column: 32, scope: !3072)
!3072 = distinct !DILexicalBlock(scope: !3066, file: !3, line: 252, column: 2)
!3073 = !DILocation(line: 252, column: 2, scope: !3066)
!3074 = !DILocalVariable(name: "do_anim", scope: !3075, file: !3, line: 253, type: !73)
!3075 = distinct !DILexicalBlock(scope: !3072, file: !3, line: 252, column: 54)
!3076 = !DILocation(line: 253, column: 8, scope: !3075)
!3077 = !DILocation(line: 255, column: 21, scope: !3075)
!3078 = !DILocation(line: 255, column: 24, scope: !3075)
!3079 = !DILocation(line: 255, column: 3, scope: !3075)
!3080 = !DILocation(line: 257, column: 15, scope: !3081)
!3081 = distinct !DILexicalBlock(scope: !3075, file: !3, line: 257, column: 3)
!3082 = !DILocation(line: 257, column: 19, scope: !3081)
!3083 = !DILocation(line: 257, column: 25, scope: !3081)
!3084 = !DILocation(line: 257, column: 13, scope: !3081)
!3085 = !DILocation(line: 257, column: 8, scope: !3081)
!3086 = !DILocation(line: 257, column: 32, scope: !3087)
!3087 = distinct !DILexicalBlock(scope: !3081, file: !3, line: 257, column: 3)
!3088 = !DILocation(line: 257, column: 3, scope: !3081)
!3089 = !DILocation(line: 258, column: 11, scope: !3090)
!3090 = distinct !DILexicalBlock(scope: !3087, file: !3, line: 257, column: 51)
!3091 = !DILocation(line: 258, column: 17, scope: !3090)
!3092 = !DILocation(line: 258, column: 9, scope: !3090)
!3093 = !DILocation(line: 260, column: 8, scope: !3094)
!3094 = distinct !DILexicalBlock(scope: !3090, file: !3, line: 260, column: 8)
!3095 = !DILocation(line: 260, column: 14, scope: !3094)
!3096 = !DILocation(line: 260, column: 23, scope: !3094)
!3097 = !DILocation(line: 260, column: 8, scope: !3090)
!3098 = !DILocation(line: 261, column: 9, scope: !3099)
!3099 = distinct !DILexicalBlock(scope: !3100, file: !3, line: 261, column: 9)
!3100 = distinct !DILexicalBlock(scope: !3094, file: !3, line: 260, column: 33)
!3101 = !DILocation(line: 261, column: 9, scope: !3100)
!3102 = !DILocation(line: 262, column: 6, scope: !3103)
!3103 = distinct !DILexicalBlock(scope: !3099, file: !3, line: 261, column: 53)
!3104 = !DILocation(line: 262, column: 10, scope: !3103)
!3105 = !DILocation(line: 262, column: 21, scope: !3103)
!3106 = !DILocation(line: 263, column: 22, scope: !3103)
!3107 = !DILocation(line: 263, column: 26, scope: !3103)
!3108 = !DILocation(line: 263, column: 6, scope: !3103)
!3109 = !DILocation(line: 264, column: 5, scope: !3103)
!3110 = !DILocation(line: 265, column: 14, scope: !3111)
!3111 = distinct !DILexicalBlock(scope: !3099, file: !3, line: 265, column: 14)
!3112 = !DILocation(line: 265, column: 20, scope: !3111)
!3113 = !DILocation(line: 265, column: 25, scope: !3111)
!3114 = !DILocation(line: 265, column: 14, scope: !3099)
!3115 = !DILocation(line: 266, column: 22, scope: !3111)
!3116 = !DILocation(line: 266, column: 26, scope: !3111)
!3117 = !DILocation(line: 266, column: 6, scope: !3111)
!3118 = !DILocation(line: 267, column: 4, scope: !3100)
!3119 = !DILocation(line: 268, column: 8, scope: !3120)
!3120 = distinct !DILexicalBlock(scope: !3090, file: !3, line: 268, column: 8)
!3121 = !DILocation(line: 268, column: 14, scope: !3120)
!3122 = !DILocation(line: 268, column: 24, scope: !3120)
!3123 = !DILocation(line: 268, column: 21, scope: !3120)
!3124 = !DILocation(line: 268, column: 8, scope: !3090)
!3125 = !DILocation(line: 269, column: 9, scope: !3126)
!3126 = distinct !DILexicalBlock(scope: !3127, file: !3, line: 269, column: 9)
!3127 = distinct !DILexicalBlock(scope: !3120, file: !3, line: 268, column: 29)
!3128 = !DILocation(line: 269, column: 15, scope: !3126)
!3129 = !DILocation(line: 269, column: 24, scope: !3126)
!3130 = !DILocation(line: 269, column: 9, scope: !3127)
!3131 = !DILocation(line: 270, column: 10, scope: !3132)
!3132 = distinct !DILexicalBlock(scope: !3133, file: !3, line: 270, column: 10)
!3133 = distinct !DILexicalBlock(scope: !3126, file: !3, line: 269, column: 38)
!3134 = !DILocation(line: 270, column: 16, scope: !3132)
!3135 = !DILocation(line: 270, column: 21, scope: !3132)
!3136 = !DILocation(line: 270, column: 10, scope: !3133)
!3137 = !DILocation(line: 272, column: 36, scope: !3138)
!3138 = distinct !DILexicalBlock(scope: !3132, file: !3, line: 270, column: 41)
!3139 = !DILocation(line: 272, column: 40, scope: !3138)
!3140 = !DILocation(line: 272, column: 45, scope: !3138)
!3141 = !DILocation(line: 272, column: 7, scope: !3138)
!3142 = !DILocation(line: 275, column: 21, scope: !3138)
!3143 = !DILocation(line: 275, column: 24, scope: !3138)
!3144 = !DILocation(line: 275, column: 30, scope: !3138)
!3145 = !DILocation(line: 275, column: 7, scope: !3138)
!3146 = !DILocation(line: 276, column: 13, scope: !3147)
!3147 = distinct !DILexicalBlock(scope: !3138, file: !3, line: 276, column: 11)
!3148 = !DILocation(line: 276, column: 19, scope: !3147)
!3149 = !DILocation(line: 276, column: 11, scope: !3138)
!3150 = !DILocation(line: 277, column: 48, scope: !3147)
!3151 = !DILocation(line: 277, column: 54, scope: !3147)
!3152 = !DILocation(line: 277, column: 8, scope: !3147)
!3153 = !DILocation(line: 278, column: 6, scope: !3138)
!3154 = !DILocation(line: 279, column: 15, scope: !3155)
!3155 = distinct !DILexicalBlock(scope: !3132, file: !3, line: 279, column: 15)
!3156 = !DILocation(line: 279, column: 21, scope: !3155)
!3157 = !DILocation(line: 279, column: 26, scope: !3155)
!3158 = !DILocation(line: 279, column: 15, scope: !3132)
!3159 = !DILocation(line: 280, column: 24, scope: !3160)
!3160 = distinct !DILexicalBlock(scope: !3155, file: !3, line: 279, column: 46)
!3161 = !DILocation(line: 280, column: 27, scope: !3160)
!3162 = !DILocation(line: 280, column: 33, scope: !3160)
!3163 = !DILocation(line: 280, column: 7, scope: !3160)
!3164 = !DILocation(line: 281, column: 13, scope: !3165)
!3165 = distinct !DILexicalBlock(scope: !3160, file: !3, line: 281, column: 11)
!3166 = !DILocation(line: 281, column: 19, scope: !3165)
!3167 = !DILocation(line: 281, column: 11, scope: !3160)
!3168 = !DILocation(line: 282, column: 51, scope: !3165)
!3169 = !DILocation(line: 282, column: 57, scope: !3165)
!3170 = !DILocation(line: 282, column: 8, scope: !3165)
!3171 = !DILocation(line: 283, column: 6, scope: !3160)
!3172 = !DILocation(line: 284, column: 5, scope: !3133)
!3173 = !DILocation(line: 285, column: 4, scope: !3127)
!3174 = !DILocation(line: 287, column: 8, scope: !3175)
!3175 = distinct !DILexicalBlock(scope: !3090, file: !3, line: 287, column: 8)
!3176 = !DILocation(line: 287, column: 14, scope: !3175)
!3177 = !DILocation(line: 287, column: 24, scope: !3175)
!3178 = !DILocation(line: 287, column: 21, scope: !3175)
!3179 = !DILocation(line: 287, column: 28, scope: !3175)
!3180 = !DILocation(line: 288, column: 9, scope: !3175)
!3181 = !DILocation(line: 288, column: 15, scope: !3175)
!3182 = !DILocation(line: 288, column: 22, scope: !3175)
!3183 = !DILocation(line: 288, column: 30, scope: !3175)
!3184 = !DILocation(line: 288, column: 34, scope: !3175)
!3185 = !DILocation(line: 288, column: 40, scope: !3175)
!3186 = !DILocation(line: 288, column: 50, scope: !3175)
!3187 = !DILocation(line: 288, column: 58, scope: !3175)
!3188 = !DILocation(line: 288, column: 61, scope: !3175)
!3189 = !DILocation(line: 288, column: 67, scope: !3175)
!3190 = !DILocation(line: 288, column: 80, scope: !3175)
!3191 = !DILocation(line: 288, column: 85, scope: !3175)
!3192 = !DILocation(line: 288, column: 93, scope: !3175)
!3193 = !DILocation(line: 288, column: 77, scope: !3175)
!3194 = !DILocation(line: 287, column: 8, scope: !3090)
!3195 = !DILocation(line: 290, column: 9, scope: !3196)
!3196 = distinct !DILexicalBlock(scope: !3197, file: !3, line: 290, column: 9)
!3197 = distinct !DILexicalBlock(scope: !3175, file: !3, line: 289, column: 4)
!3198 = !DILocation(line: 290, column: 15, scope: !3196)
!3199 = !DILocation(line: 290, column: 24, scope: !3196)
!3200 = !DILocation(line: 290, column: 9, scope: !3197)
!3201 = !DILocation(line: 291, column: 10, scope: !3202)
!3202 = distinct !DILexicalBlock(scope: !3203, file: !3, line: 291, column: 10)
!3203 = distinct !DILexicalBlock(scope: !3196, file: !3, line: 290, column: 37)
!3204 = !DILocation(line: 291, column: 16, scope: !3202)
!3205 = !DILocation(line: 291, column: 21, scope: !3202)
!3206 = !DILocation(line: 291, column: 10, scope: !3203)
!3207 = !DILocation(line: 292, column: 15, scope: !3202)
!3208 = !DILocation(line: 292, column: 7, scope: !3202)
!3209 = !DILocation(line: 293, column: 5, scope: !3203)
!3210 = !DILocation(line: 294, column: 4, scope: !3197)
!3211 = !DILocation(line: 295, column: 8, scope: !3212)
!3212 = distinct !DILexicalBlock(scope: !3090, file: !3, line: 295, column: 8)
!3213 = !DILocation(line: 295, column: 8, scope: !3090)
!3214 = !DILocation(line: 296, column: 25, scope: !3215)
!3215 = distinct !DILexicalBlock(scope: !3212, file: !3, line: 295, column: 77)
!3216 = !DILocation(line: 296, column: 30, scope: !3215)
!3217 = !DILocation(line: 296, column: 38, scope: !3215)
!3218 = !DILocation(line: 296, column: 5, scope: !3215)
!3219 = !DILocation(line: 297, column: 27, scope: !3215)
!3220 = !DILocation(line: 297, column: 5, scope: !3215)
!3221 = !DILocation(line: 298, column: 4, scope: !3215)
!3222 = !DILocation(line: 299, column: 3, scope: !3090)
!3223 = !DILocation(line: 257, column: 45, scope: !3087)
!3224 = !DILocation(line: 257, column: 43, scope: !3087)
!3225 = !DILocation(line: 257, column: 3, scope: !3087)
!3226 = distinct !{!3226, !3088, !3227}
!3227 = !DILocation(line: 299, column: 3, scope: !3081)
!3228 = !DILocation(line: 300, column: 7, scope: !3229)
!3229 = distinct !DILexicalBlock(scope: !3075, file: !3, line: 300, column: 7)
!3230 = !DILocation(line: 300, column: 7, scope: !3075)
!3231 = !DILocation(line: 305, column: 10, scope: !3232)
!3232 = distinct !DILexicalBlock(scope: !3233, file: !3, line: 305, column: 8)
!3233 = distinct !DILexicalBlock(scope: !3229, file: !3, line: 300, column: 16)
!3234 = !DILocation(line: 305, column: 8, scope: !3232)
!3235 = !DILocation(line: 305, column: 23, scope: !3232)
!3236 = !DILocation(line: 305, column: 8, scope: !3233)
!3237 = !DILocation(line: 308, column: 42, scope: !3238)
!3238 = distinct !DILexicalBlock(scope: !3232, file: !3, line: 305, column: 33)
!3239 = !DILocation(line: 308, column: 28, scope: !3238)
!3240 = !DILocation(line: 308, column: 46, scope: !3238)
!3241 = !DILocation(line: 308, column: 51, scope: !3238)
!3242 = !DILocation(line: 308, column: 59, scope: !3238)
!3243 = !DILocation(line: 308, column: 5, scope: !3238)
!3244 = !DILocation(line: 309, column: 4, scope: !3238)
!3245 = !DILocation(line: 310, column: 3, scope: !3233)
!3246 = !DILocation(line: 311, column: 2, scope: !3075)
!3247 = !DILocation(line: 252, column: 43, scope: !3072)
!3248 = !DILocation(line: 252, column: 48, scope: !3072)
!3249 = !DILocation(line: 252, column: 41, scope: !3072)
!3250 = !DILocation(line: 252, column: 2, scope: !3072)
!3251 = distinct !{!3251, !3073, !3252}
!3252 = !DILocation(line: 311, column: 2, scope: !3066)
!3253 = !DILocation(line: 314, column: 2, scope: !3043)
!3254 = !DILocation(line: 314, column: 30, scope: !3043)
!3255 = !DILocation(line: 314, column: 34, scope: !3043)
!3256 = !DILocation(line: 314, column: 17, scope: !3043)
!3257 = !DILocation(line: 314, column: 15, scope: !3043)
!3258 = !DILocation(line: 315, column: 14, scope: !3259)
!3259 = distinct !DILexicalBlock(scope: !3260, file: !3, line: 315, column: 3)
!3260 = distinct !DILexicalBlock(scope: !3043, file: !3, line: 314, column: 43)
!3261 = !DILocation(line: 315, column: 18, scope: !3259)
!3262 = !DILocation(line: 315, column: 26, scope: !3259)
!3263 = !DILocation(line: 315, column: 12, scope: !3259)
!3264 = !DILocation(line: 315, column: 8, scope: !3259)
!3265 = !DILocation(line: 315, column: 33, scope: !3266)
!3266 = distinct !DILexicalBlock(scope: !3259, file: !3, line: 315, column: 3)
!3267 = !DILocation(line: 315, column: 3, scope: !3259)
!3268 = !DILocation(line: 318, column: 8, scope: !3269)
!3269 = distinct !DILexicalBlock(scope: !3270, file: !3, line: 318, column: 8)
!3270 = distinct !DILexicalBlock(scope: !3266, file: !3, line: 315, column: 55)
!3271 = !DILocation(line: 318, column: 14, scope: !3269)
!3272 = !DILocation(line: 318, column: 23, scope: !3269)
!3273 = !DILocation(line: 318, column: 36, scope: !3269)
!3274 = !DILocation(line: 318, column: 39, scope: !3269)
!3275 = !DILocation(line: 318, column: 45, scope: !3269)
!3276 = !DILocation(line: 318, column: 55, scope: !3269)
!3277 = !DILocation(line: 318, column: 58, scope: !3269)
!3278 = !DILocation(line: 318, column: 64, scope: !3269)
!3279 = !DILocation(line: 318, column: 77, scope: !3269)
!3280 = !DILocation(line: 318, column: 82, scope: !3269)
!3281 = !DILocation(line: 318, column: 74, scope: !3269)
!3282 = !DILocation(line: 318, column: 8, scope: !3270)
!3283 = !DILocation(line: 320, column: 4, scope: !3284)
!3284 = distinct !DILexicalBlock(scope: !3269, file: !3, line: 318, column: 90)
!3285 = !DILocation(line: 321, column: 13, scope: !3286)
!3286 = distinct !DILexicalBlock(scope: !3269, file: !3, line: 321, column: 13)
!3287 = !DILocation(line: 321, column: 19, scope: !3286)
!3288 = !DILocation(line: 321, column: 28, scope: !3286)
!3289 = !DILocation(line: 321, column: 40, scope: !3286)
!3290 = !DILocation(line: 321, column: 43, scope: !3286)
!3291 = !DILocation(line: 321, column: 49, scope: !3286)
!3292 = !DILocation(line: 321, column: 59, scope: !3286)
!3293 = !DILocation(line: 321, column: 62, scope: !3286)
!3294 = !DILocation(line: 321, column: 68, scope: !3286)
!3295 = !DILocation(line: 321, column: 81, scope: !3286)
!3296 = !DILocation(line: 321, column: 86, scope: !3286)
!3297 = !DILocation(line: 321, column: 94, scope: !3286)
!3298 = !DILocation(line: 321, column: 78, scope: !3286)
!3299 = !DILocation(line: 321, column: 13, scope: !3269)
!3300 = !DILocation(line: 323, column: 4, scope: !3301)
!3301 = distinct !DILexicalBlock(scope: !3286, file: !3, line: 321, column: 101)
!3302 = !DILocalVariable(name: "sa", scope: !3303, file: !3, line: 325, type: !2201)
!3303 = distinct !DILexicalBlock(scope: !3286, file: !3, line: 324, column: 9)
!3304 = !DILocation(line: 325, column: 14, scope: !3303)
!3305 = !DILocalVariable(name: "ar", scope: !3303, file: !3, line: 326, type: !2737)
!3306 = !DILocation(line: 326, column: 14, scope: !3303)
!3307 = !DILocation(line: 329, column: 23, scope: !3303)
!3308 = !DILocation(line: 329, column: 26, scope: !3303)
!3309 = !DILocation(line: 329, column: 5, scope: !3303)
!3310 = !DILocation(line: 332, column: 25, scope: !3303)
!3311 = !DILocation(line: 332, column: 28, scope: !3303)
!3312 = !DILocation(line: 332, column: 5, scope: !3303)
!3313 = !DILocation(line: 334, column: 15, scope: !3314)
!3314 = distinct !DILexicalBlock(scope: !3303, file: !3, line: 334, column: 5)
!3315 = !DILocation(line: 334, column: 20, scope: !3314)
!3316 = !DILocation(line: 334, column: 28, scope: !3314)
!3317 = !DILocation(line: 334, column: 39, scope: !3314)
!3318 = !DILocation(line: 334, column: 13, scope: !3314)
!3319 = !DILocation(line: 334, column: 10, scope: !3314)
!3320 = !DILocation(line: 334, column: 46, scope: !3321)
!3321 = distinct !DILexicalBlock(scope: !3314, file: !3, line: 334, column: 5)
!3322 = !DILocation(line: 334, column: 5, scope: !3314)
!3323 = !DILocation(line: 335, column: 26, scope: !3324)
!3324 = distinct !DILexicalBlock(scope: !3321, file: !3, line: 334, column: 65)
!3325 = !DILocation(line: 335, column: 31, scope: !3324)
!3326 = !DILocation(line: 335, column: 45, scope: !3324)
!3327 = !DILocation(line: 335, column: 49, scope: !3324)
!3328 = !DILocation(line: 335, column: 6, scope: !3324)
!3329 = !DILocation(line: 336, column: 5, scope: !3324)
!3330 = !DILocation(line: 334, column: 55, scope: !3321)
!3331 = !DILocation(line: 334, column: 59, scope: !3321)
!3332 = !DILocation(line: 334, column: 53, scope: !3321)
!3333 = !DILocation(line: 334, column: 5, scope: !3321)
!3334 = distinct !{!3334, !3322, !3335}
!3335 = !DILocation(line: 336, column: 5, scope: !3314)
!3336 = !DILocation(line: 338, column: 15, scope: !3337)
!3337 = distinct !DILexicalBlock(scope: !3303, file: !3, line: 338, column: 5)
!3338 = !DILocation(line: 338, column: 20, scope: !3337)
!3339 = !DILocation(line: 338, column: 28, scope: !3337)
!3340 = !DILocation(line: 338, column: 37, scope: !3337)
!3341 = !DILocation(line: 338, column: 13, scope: !3337)
!3342 = !DILocation(line: 338, column: 10, scope: !3337)
!3343 = !DILocation(line: 338, column: 44, scope: !3344)
!3344 = distinct !DILexicalBlock(scope: !3337, file: !3, line: 338, column: 5)
!3345 = !DILocation(line: 338, column: 5, scope: !3337)
!3346 = !DILocation(line: 339, column: 24, scope: !3347)
!3347 = distinct !DILexicalBlock(scope: !3344, file: !3, line: 338, column: 63)
!3348 = !DILocation(line: 339, column: 29, scope: !3347)
!3349 = !DILocation(line: 339, column: 37, scope: !3347)
!3350 = !DILocation(line: 339, column: 41, scope: !3347)
!3351 = !DILocation(line: 339, column: 6, scope: !3347)
!3352 = !DILocation(line: 340, column: 16, scope: !3353)
!3353 = distinct !DILexicalBlock(scope: !3347, file: !3, line: 340, column: 6)
!3354 = !DILocation(line: 340, column: 20, scope: !3353)
!3355 = !DILocation(line: 340, column: 31, scope: !3353)
!3356 = !DILocation(line: 340, column: 14, scope: !3353)
!3357 = !DILocation(line: 340, column: 11, scope: !3353)
!3358 = !DILocation(line: 340, column: 38, scope: !3359)
!3359 = distinct !DILexicalBlock(scope: !3353, file: !3, line: 340, column: 6)
!3360 = !DILocation(line: 340, column: 6, scope: !3353)
!3361 = !DILocation(line: 341, column: 27, scope: !3362)
!3362 = distinct !DILexicalBlock(scope: !3359, file: !3, line: 340, column: 57)
!3363 = !DILocation(line: 341, column: 32, scope: !3362)
!3364 = !DILocation(line: 341, column: 40, scope: !3362)
!3365 = !DILocation(line: 341, column: 44, scope: !3362)
!3366 = !DILocation(line: 341, column: 48, scope: !3362)
!3367 = !DILocation(line: 341, column: 7, scope: !3362)
!3368 = !DILocation(line: 342, column: 6, scope: !3362)
!3369 = !DILocation(line: 340, column: 47, scope: !3359)
!3370 = !DILocation(line: 340, column: 51, scope: !3359)
!3371 = !DILocation(line: 340, column: 45, scope: !3359)
!3372 = !DILocation(line: 340, column: 6, scope: !3359)
!3373 = distinct !{!3373, !3360, !3374}
!3374 = !DILocation(line: 342, column: 6, scope: !3353)
!3375 = !DILocation(line: 343, column: 5, scope: !3347)
!3376 = !DILocation(line: 338, column: 53, scope: !3344)
!3377 = !DILocation(line: 338, column: 57, scope: !3344)
!3378 = !DILocation(line: 338, column: 51, scope: !3344)
!3379 = !DILocation(line: 338, column: 5, scope: !3344)
!3380 = distinct !{!3380, !3345, !3381}
!3381 = !DILocation(line: 343, column: 5, scope: !3337)
!3382 = !DILocation(line: 345, column: 3, scope: !3270)
!3383 = !DILocation(line: 315, column: 44, scope: !3266)
!3384 = !DILocation(line: 315, column: 49, scope: !3266)
!3385 = !DILocation(line: 315, column: 42, scope: !3266)
!3386 = !DILocation(line: 315, column: 3, scope: !3266)
!3387 = distinct !{!3387, !3267, !3388}
!3388 = !DILocation(line: 345, column: 3, scope: !3259)
!3389 = !DILocation(line: 347, column: 3, scope: !3260)
!3390 = !DILocation(line: 347, column: 13, scope: !3260)
!3391 = distinct !{!3391, !3253, !3392}
!3392 = !DILocation(line: 348, column: 2, scope: !3043)
!3393 = !DILocation(line: 351, column: 13, scope: !3394)
!3394 = distinct !DILexicalBlock(scope: !3043, file: !3, line: 351, column: 2)
!3395 = !DILocation(line: 351, column: 17, scope: !3394)
!3396 = !DILocation(line: 351, column: 25, scope: !3394)
!3397 = !DILocation(line: 351, column: 11, scope: !3394)
!3398 = !DILocation(line: 351, column: 7, scope: !3394)
!3399 = !DILocation(line: 351, column: 32, scope: !3400)
!3400 = distinct !DILexicalBlock(scope: !3394, file: !3, line: 351, column: 2)
!3401 = !DILocation(line: 351, column: 2, scope: !3394)
!3402 = !DILocation(line: 352, column: 57, scope: !3403)
!3403 = distinct !DILexicalBlock(scope: !3400, file: !3, line: 351, column: 54)
!3404 = !DILocation(line: 352, column: 62, scope: !3403)
!3405 = !DILocation(line: 352, column: 31, scope: !3403)
!3406 = !DILocation(line: 352, column: 28, scope: !3403)
!3407 = !DILocation(line: 353, column: 2, scope: !3403)
!3408 = !DILocation(line: 351, column: 43, scope: !3400)
!3409 = !DILocation(line: 351, column: 48, scope: !3400)
!3410 = !DILocation(line: 351, column: 41, scope: !3400)
!3411 = !DILocation(line: 351, column: 2, scope: !3400)
!3412 = distinct !{!3412, !3401, !3413}
!3413 = !DILocation(line: 353, column: 2, scope: !3394)
!3414 = !DILocation(line: 356, column: 13, scope: !3415)
!3415 = distinct !DILexicalBlock(scope: !3043, file: !3, line: 356, column: 2)
!3416 = !DILocation(line: 356, column: 17, scope: !3415)
!3417 = !DILocation(line: 356, column: 25, scope: !3415)
!3418 = !DILocation(line: 356, column: 11, scope: !3415)
!3419 = !DILocation(line: 356, column: 7, scope: !3415)
!3420 = !DILocation(line: 356, column: 32, scope: !3421)
!3421 = distinct !DILexicalBlock(scope: !3415, file: !3, line: 356, column: 2)
!3422 = !DILocation(line: 356, column: 2, scope: !3415)
!3423 = !DILocalVariable(name: "sa", scope: !3424, file: !3, line: 357, type: !2201)
!3424 = distinct !DILexicalBlock(scope: !3421, file: !3, line: 356, column: 54)
!3425 = !DILocation(line: 357, column: 12, scope: !3424)
!3426 = !DILocation(line: 359, column: 21, scope: !3424)
!3427 = !DILocation(line: 359, column: 24, scope: !3424)
!3428 = !DILocation(line: 359, column: 3, scope: !3424)
!3429 = !DILocation(line: 360, column: 13, scope: !3430)
!3430 = distinct !DILexicalBlock(scope: !3424, file: !3, line: 360, column: 3)
!3431 = !DILocation(line: 360, column: 18, scope: !3430)
!3432 = !DILocation(line: 360, column: 26, scope: !3430)
!3433 = !DILocation(line: 360, column: 35, scope: !3430)
!3434 = !DILocation(line: 360, column: 11, scope: !3430)
!3435 = !DILocation(line: 360, column: 8, scope: !3430)
!3436 = !DILocation(line: 360, column: 42, scope: !3437)
!3437 = distinct !DILexicalBlock(scope: !3430, file: !3, line: 360, column: 3)
!3438 = !DILocation(line: 360, column: 3, scope: !3430)
!3439 = !DILocation(line: 361, column: 8, scope: !3440)
!3440 = distinct !DILexicalBlock(scope: !3441, file: !3, line: 361, column: 8)
!3441 = distinct !DILexicalBlock(scope: !3437, file: !3, line: 360, column: 61)
!3442 = !DILocation(line: 361, column: 12, scope: !3440)
!3443 = !DILocation(line: 361, column: 8, scope: !3441)
!3444 = !DILocation(line: 362, column: 21, scope: !3445)
!3445 = distinct !DILexicalBlock(scope: !3440, file: !3, line: 361, column: 24)
!3446 = !DILocation(line: 362, column: 24, scope: !3445)
!3447 = !DILocation(line: 362, column: 5, scope: !3445)
!3448 = !DILocation(line: 363, column: 24, scope: !3445)
!3449 = !DILocation(line: 363, column: 27, scope: !3445)
!3450 = !DILocation(line: 363, column: 5, scope: !3445)
!3451 = !DILocation(line: 364, column: 4, scope: !3445)
!3452 = !DILocation(line: 365, column: 3, scope: !3441)
!3453 = !DILocation(line: 360, column: 51, scope: !3437)
!3454 = !DILocation(line: 360, column: 55, scope: !3437)
!3455 = !DILocation(line: 360, column: 49, scope: !3437)
!3456 = !DILocation(line: 360, column: 3, scope: !3437)
!3457 = distinct !{!3457, !3438, !3458}
!3458 = !DILocation(line: 365, column: 3, scope: !3430)
!3459 = !DILocation(line: 368, column: 9, scope: !3460)
!3460 = distinct !DILexicalBlock(scope: !3424, file: !3, line: 368, column: 7)
!3461 = !DILocation(line: 368, column: 7, scope: !3460)
!3462 = !DILocation(line: 368, column: 22, scope: !3460)
!3463 = !DILocation(line: 368, column: 7, scope: !3424)
!3464 = !DILocalVariable(name: "bmain", scope: !3465, file: !3, line: 370, type: !2864)
!3465 = distinct !DILexicalBlock(scope: !3460, file: !3, line: 368, column: 32)
!3466 = !DILocation(line: 370, column: 10, scope: !3465)
!3467 = !DILocation(line: 370, column: 32, scope: !3465)
!3468 = !DILocation(line: 370, column: 18, scope: !3465)
!3469 = !DILocation(line: 373, column: 42, scope: !3465)
!3470 = !DILocation(line: 373, column: 4, scope: !3465)
!3471 = !DILocation(line: 373, column: 9, scope: !3465)
!3472 = !DILocation(line: 373, column: 17, scope: !3465)
!3473 = !DILocation(line: 373, column: 24, scope: !3465)
!3474 = !DILocation(line: 373, column: 40, scope: !3465)
!3475 = !DILocation(line: 376, column: 43, scope: !3465)
!3476 = !DILocation(line: 376, column: 48, scope: !3465)
!3477 = !DILocation(line: 376, column: 56, scope: !3465)
!3478 = !DILocation(line: 376, column: 63, scope: !3465)
!3479 = !DILocation(line: 376, column: 4, scope: !3465)
!3480 = !DILocation(line: 376, column: 9, scope: !3465)
!3481 = !DILocation(line: 376, column: 17, scope: !3465)
!3482 = !DILocation(line: 376, column: 24, scope: !3465)
!3483 = !DILocation(line: 376, column: 40, scope: !3465)
!3484 = !DILocation(line: 378, column: 28, scope: !3465)
!3485 = !DILocation(line: 378, column: 35, scope: !3465)
!3486 = !DILocation(line: 378, column: 45, scope: !3465)
!3487 = !DILocation(line: 378, column: 52, scope: !3465)
!3488 = !DILocation(line: 378, column: 57, scope: !3465)
!3489 = !DILocation(line: 378, column: 65, scope: !3465)
!3490 = !DILocation(line: 378, column: 4, scope: !3465)
!3491 = !DILocation(line: 379, column: 3, scope: !3465)
!3492 = !DILocation(line: 380, column: 2, scope: !3424)
!3493 = !DILocation(line: 356, column: 43, scope: !3421)
!3494 = !DILocation(line: 356, column: 48, scope: !3421)
!3495 = !DILocation(line: 356, column: 41, scope: !3421)
!3496 = !DILocation(line: 356, column: 2, scope: !3421)
!3497 = distinct !{!3497, !3422, !3498}
!3498 = !DILocation(line: 380, column: 2, scope: !3415)
!3499 = !DILocation(line: 382, column: 20, scope: !3043)
!3500 = !DILocation(line: 382, column: 2, scope: !3043)
!3501 = !DILocation(line: 383, column: 1, scope: !3043)
!3502 = distinct !DISubprogram(name: "WM_operator_poll", scope: !3, file: !3, line: 474, type: !3503, scopeLine: 475, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!3503 = !DISubroutineType(types: !3504)
!3504 = !{!34, !2402, !1578}
!3505 = !DILocalVariable(name: "C", arg: 1, scope: !3502, file: !3, line: 474, type: !2402)
!3506 = !DILocation(line: 474, column: 32, scope: !3502)
!3507 = !DILocalVariable(name: "ot", arg: 2, scope: !3502, file: !3, line: 474, type: !1578)
!3508 = !DILocation(line: 474, column: 51, scope: !3502)
!3509 = !DILocalVariable(name: "otmacro", scope: !3502, file: !3, line: 476, type: !3510)
!3510 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3511, size: 64)
!3511 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmOperatorTypeMacro", file: !8, line: 224, baseType: !3512)
!3512 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmOperatorTypeMacro", file: !8, line: 216, size: 768, elements: !3513)
!3513 = !{!3514, !3516, !3517, !3518, !3519}
!3514 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !3512, file: !8, line: 217, baseType: !3515, size: 64)
!3515 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3512, size: 64)
!3516 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !3512, file: !8, line: 217, baseType: !3515, size: 64, offset: 64)
!3517 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !3512, file: !8, line: 220, baseType: !15, size: 512, offset: 128)
!3518 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !3512, file: !8, line: 222, baseType: !26, size: 64, offset: 640)
!3519 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !3512, file: !8, line: 223, baseType: !180, size: 64, offset: 704)
!3520 = !DILocation(line: 476, column: 23, scope: !3502)
!3521 = !DILocation(line: 478, column: 17, scope: !3522)
!3522 = distinct !DILexicalBlock(scope: !3502, file: !3, line: 478, column: 2)
!3523 = !DILocation(line: 478, column: 21, scope: !3522)
!3524 = !DILocation(line: 478, column: 27, scope: !3522)
!3525 = !DILocation(line: 478, column: 15, scope: !3522)
!3526 = !DILocation(line: 478, column: 7, scope: !3522)
!3527 = !DILocation(line: 478, column: 34, scope: !3528)
!3528 = distinct !DILexicalBlock(scope: !3522, file: !3, line: 478, column: 2)
!3529 = !DILocation(line: 478, column: 2, scope: !3522)
!3530 = !DILocalVariable(name: "ot_macro", scope: !3531, file: !3, line: 479, type: !1578)
!3531 = distinct !DILexicalBlock(scope: !3528, file: !3, line: 478, column: 68)
!3532 = !DILocation(line: 479, column: 19, scope: !3531)
!3533 = !DILocation(line: 479, column: 51, scope: !3531)
!3534 = !DILocation(line: 479, column: 60, scope: !3531)
!3535 = !DILocation(line: 479, column: 30, scope: !3531)
!3536 = !DILocation(line: 481, column: 29, scope: !3537)
!3537 = distinct !DILexicalBlock(scope: !3531, file: !3, line: 481, column: 7)
!3538 = !DILocation(line: 481, column: 32, scope: !3537)
!3539 = !DILocation(line: 481, column: 12, scope: !3537)
!3540 = !DILocation(line: 481, column: 9, scope: !3537)
!3541 = !DILocation(line: 481, column: 7, scope: !3531)
!3542 = !DILocation(line: 482, column: 4, scope: !3537)
!3543 = !DILocation(line: 483, column: 2, scope: !3531)
!3544 = !DILocation(line: 478, column: 53, scope: !3528)
!3545 = !DILocation(line: 478, column: 62, scope: !3528)
!3546 = !DILocation(line: 478, column: 51, scope: !3528)
!3547 = !DILocation(line: 478, column: 2, scope: !3528)
!3548 = distinct !{!3548, !3529, !3549}
!3549 = !DILocation(line: 483, column: 2, scope: !3522)
!3550 = !DILocation(line: 486, column: 6, scope: !3551)
!3551 = distinct !DILexicalBlock(scope: !3502, file: !3, line: 486, column: 6)
!3552 = !DILocation(line: 486, column: 10, scope: !3551)
!3553 = !DILocation(line: 486, column: 6, scope: !3502)
!3554 = !DILocation(line: 487, column: 10, scope: !3551)
!3555 = !DILocation(line: 487, column: 14, scope: !3551)
!3556 = !DILocation(line: 487, column: 24, scope: !3551)
!3557 = !DILocation(line: 487, column: 27, scope: !3551)
!3558 = !DILocation(line: 487, column: 3, scope: !3551)
!3559 = !DILocation(line: 488, column: 11, scope: !3560)
!3560 = distinct !DILexicalBlock(scope: !3551, file: !3, line: 488, column: 11)
!3561 = !DILocation(line: 488, column: 15, scope: !3560)
!3562 = !DILocation(line: 488, column: 11, scope: !3551)
!3563 = !DILocation(line: 489, column: 10, scope: !3560)
!3564 = !DILocation(line: 489, column: 14, scope: !3560)
!3565 = !DILocation(line: 489, column: 19, scope: !3560)
!3566 = !DILocation(line: 489, column: 3, scope: !3560)
!3567 = !DILocation(line: 491, column: 2, scope: !3502)
!3568 = !DILocation(line: 492, column: 1, scope: !3502)
!3569 = distinct !DISubprogram(name: "WM_operator_poll_context", scope: !3, file: !3, line: 495, type: !3570, scopeLine: 496, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!3570 = !DISubroutineType(types: !3571)
!3571 = !{!34, !2402, !1578, !31}
!3572 = !DILocalVariable(name: "C", arg: 1, scope: !3569, file: !3, line: 495, type: !2402)
!3573 = !DILocation(line: 495, column: 40, scope: !3569)
!3574 = !DILocalVariable(name: "ot", arg: 2, scope: !3569, file: !3, line: 495, type: !1578)
!3575 = !DILocation(line: 495, column: 59, scope: !3569)
!3576 = !DILocalVariable(name: "context", arg: 3, scope: !3569, file: !3, line: 495, type: !31)
!3577 = !DILocation(line: 495, column: 69, scope: !3569)
!3578 = !DILocation(line: 497, column: 35, scope: !3569)
!3579 = !DILocation(line: 497, column: 38, scope: !3569)
!3580 = !DILocation(line: 497, column: 54, scope: !3569)
!3581 = !DILocation(line: 497, column: 9, scope: !3569)
!3582 = !DILocation(line: 497, column: 2, scope: !3569)
!3583 = distinct !DISubprogram(name: "wm_operator_call_internal", scope: !3, file: !3, line: 1145, type: !3584, scopeLine: 1147, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!3584 = !DISubroutineType(types: !3585)
!3585 = !{!34, !2402, !1578, !1580, !1582, !3586, !3587}
!3586 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !31)
!3587 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !73)
!3588 = !DILocalVariable(name: "C", arg: 1, scope: !3583, file: !3, line: 1145, type: !2402)
!3589 = !DILocation(line: 1145, column: 48, scope: !3583)
!3590 = !DILocalVariable(name: "ot", arg: 2, scope: !3583, file: !3, line: 1145, type: !1578)
!3591 = !DILocation(line: 1145, column: 67, scope: !3583)
!3592 = !DILocalVariable(name: "properties", arg: 3, scope: !3583, file: !3, line: 1145, type: !1580)
!3593 = !DILocation(line: 1145, column: 83, scope: !3583)
!3594 = !DILocalVariable(name: "reports", arg: 4, scope: !3583, file: !3, line: 1145, type: !1582)
!3595 = !DILocation(line: 1145, column: 107, scope: !3583)
!3596 = !DILocalVariable(name: "context", arg: 5, scope: !3583, file: !3, line: 1146, type: !3586)
!3597 = !DILocation(line: 1146, column: 50, scope: !3583)
!3598 = !DILocalVariable(name: "poll_only", arg: 6, scope: !3583, file: !3, line: 1146, type: !3587)
!3599 = !DILocation(line: 1146, column: 70, scope: !3583)
!3600 = !DILocalVariable(name: "event", scope: !3583, file: !3, line: 1148, type: !2552)
!3601 = !DILocation(line: 1148, column: 11, scope: !3583)
!3602 = !DILocalVariable(name: "retval", scope: !3583, file: !3, line: 1150, type: !34)
!3603 = !DILocation(line: 1150, column: 6, scope: !3583)
!3604 = !DILocation(line: 1152, column: 31, scope: !3583)
!3605 = !DILocation(line: 1152, column: 2, scope: !3583)
!3606 = !DILocation(line: 1155, column: 6, scope: !3607)
!3607 = distinct !DILexicalBlock(scope: !3583, file: !3, line: 1155, column: 6)
!3608 = !DILocation(line: 1155, column: 9, scope: !3607)
!3609 = !DILocation(line: 1155, column: 12, scope: !3607)
!3610 = !DILocation(line: 1155, column: 6, scope: !3583)
!3611 = !DILocalVariable(name: "window", scope: !3612, file: !3, line: 1156, type: !2567)
!3612 = distinct !DILexicalBlock(scope: !3607, file: !3, line: 1155, column: 15)
!3613 = !DILocation(line: 1156, column: 13, scope: !3612)
!3614 = !DILocation(line: 1156, column: 36, scope: !3612)
!3615 = !DILocation(line: 1156, column: 22, scope: !3612)
!3616 = !DILocation(line: 1158, column: 11, scope: !3612)
!3617 = !DILocation(line: 1158, column: 3, scope: !3612)
!3618 = !DILocation(line: 1164, column: 9, scope: !3619)
!3619 = distinct !DILexicalBlock(scope: !3620, file: !3, line: 1164, column: 9)
!3620 = distinct !DILexicalBlock(scope: !3612, file: !3, line: 1158, column: 20)
!3621 = !DILocation(line: 1164, column: 16, scope: !3619)
!3622 = !DILocation(line: 1164, column: 9, scope: !3620)
!3623 = !DILocation(line: 1165, column: 10, scope: !3624)
!3624 = distinct !DILexicalBlock(scope: !3625, file: !3, line: 1165, column: 10)
!3625 = distinct !DILexicalBlock(scope: !3619, file: !3, line: 1164, column: 25)
!3626 = !DILocation(line: 1165, column: 10, scope: !3625)
!3627 = !DILocation(line: 1166, column: 36, scope: !3628)
!3628 = distinct !DILexicalBlock(scope: !3624, file: !3, line: 1165, column: 21)
!3629 = !DILocation(line: 1166, column: 7, scope: !3628)
!3630 = !DILocation(line: 1167, column: 6, scope: !3628)
!3631 = !DILocation(line: 1168, column: 6, scope: !3625)
!3632 = !DILocation(line: 1171, column: 14, scope: !3633)
!3633 = distinct !DILexicalBlock(scope: !3619, file: !3, line: 1170, column: 10)
!3634 = !DILocation(line: 1171, column: 22, scope: !3633)
!3635 = !DILocation(line: 1171, column: 12, scope: !3633)
!3636 = !DILocation(line: 1173, column: 5, scope: !3620)
!3637 = !DILocation(line: 1175, column: 11, scope: !3620)
!3638 = !DILocation(line: 1176, column: 5, scope: !3620)
!3639 = !DILocation(line: 1179, column: 11, scope: !3612)
!3640 = !DILocation(line: 1179, column: 3, scope: !3612)
!3641 = !DILocalVariable(name: "ar", scope: !3642, file: !3, line: 1191, type: !2737)
!3642 = distinct !DILexicalBlock(scope: !3643, file: !3, line: 1187, column: 4)
!3643 = distinct !DILexicalBlock(scope: !3612, file: !3, line: 1179, column: 20)
!3644 = !DILocation(line: 1191, column: 14, scope: !3642)
!3645 = !DILocation(line: 1191, column: 33, scope: !3642)
!3646 = !DILocation(line: 1191, column: 19, scope: !3642)
!3647 = !DILocalVariable(name: "area", scope: !3642, file: !3, line: 1192, type: !2201)
!3648 = !DILocation(line: 1192, column: 14, scope: !3642)
!3649 = !DILocation(line: 1192, column: 33, scope: !3642)
!3650 = !DILocation(line: 1192, column: 21, scope: !3642)
!3651 = !DILocalVariable(name: "type", scope: !3642, file: !3, line: 1193, type: !34)
!3652 = !DILocation(line: 1193, column: 9, scope: !3642)
!3653 = !DILocation(line: 1195, column: 13, scope: !3642)
!3654 = !DILocation(line: 1195, column: 5, scope: !3642)
!3655 = !DILocation(line: 1198, column: 12, scope: !3656)
!3656 = distinct !DILexicalBlock(scope: !3642, file: !3, line: 1195, column: 22)
!3657 = !DILocation(line: 1199, column: 7, scope: !3656)
!3658 = !DILocation(line: 1203, column: 12, scope: !3656)
!3659 = !DILocation(line: 1204, column: 7, scope: !3656)
!3660 = !DILocation(line: 1209, column: 12, scope: !3656)
!3661 = !DILocation(line: 1210, column: 7, scope: !3656)
!3662 = !DILocation(line: 1213, column: 11, scope: !3663)
!3663 = distinct !DILexicalBlock(scope: !3642, file: !3, line: 1213, column: 9)
!3664 = !DILocation(line: 1213, column: 14, scope: !3663)
!3665 = !DILocation(line: 1213, column: 17, scope: !3663)
!3666 = !DILocation(line: 1213, column: 21, scope: !3663)
!3667 = !DILocation(line: 1213, column: 35, scope: !3663)
!3668 = !DILocation(line: 1213, column: 32, scope: !3663)
!3669 = !DILocation(line: 1213, column: 41, scope: !3663)
!3670 = !DILocation(line: 1213, column: 44, scope: !3663)
!3671 = !DILocation(line: 1213, column: 9, scope: !3642)
!3672 = !DILocalVariable(name: "ar1", scope: !3673, file: !3, line: 1214, type: !2737)
!3673 = distinct !DILexicalBlock(scope: !3663, file: !3, line: 1213, column: 50)
!3674 = !DILocation(line: 1214, column: 15, scope: !3673)
!3675 = !DILocation(line: 1215, column: 10, scope: !3676)
!3676 = distinct !DILexicalBlock(scope: !3673, file: !3, line: 1215, column: 10)
!3677 = !DILocation(line: 1215, column: 15, scope: !3676)
!3678 = !DILocation(line: 1215, column: 10, scope: !3673)
!3679 = !DILocation(line: 1216, column: 45, scope: !3680)
!3680 = distinct !DILexicalBlock(scope: !3676, file: !3, line: 1215, column: 35)
!3681 = !DILocation(line: 1216, column: 13, scope: !3680)
!3682 = !DILocation(line: 1216, column: 11, scope: !3680)
!3683 = !DILocation(line: 1217, column: 6, scope: !3680)
!3684 = !DILocation(line: 1219, column: 39, scope: !3685)
!3685 = distinct !DILexicalBlock(scope: !3676, file: !3, line: 1218, column: 11)
!3686 = !DILocation(line: 1219, column: 45, scope: !3685)
!3687 = !DILocation(line: 1219, column: 13, scope: !3685)
!3688 = !DILocation(line: 1219, column: 11, scope: !3685)
!3689 = !DILocation(line: 1222, column: 10, scope: !3690)
!3690 = distinct !DILexicalBlock(scope: !3673, file: !3, line: 1222, column: 10)
!3691 = !DILocation(line: 1222, column: 10, scope: !3673)
!3692 = !DILocation(line: 1223, column: 25, scope: !3690)
!3693 = !DILocation(line: 1223, column: 28, scope: !3690)
!3694 = !DILocation(line: 1223, column: 7, scope: !3690)
!3695 = !DILocation(line: 1224, column: 5, scope: !3673)
!3696 = !DILocation(line: 1226, column: 33, scope: !3642)
!3697 = !DILocation(line: 1226, column: 36, scope: !3642)
!3698 = !DILocation(line: 1226, column: 40, scope: !3642)
!3699 = !DILocation(line: 1226, column: 47, scope: !3642)
!3700 = !DILocation(line: 1226, column: 59, scope: !3642)
!3701 = !DILocation(line: 1226, column: 68, scope: !3642)
!3702 = !DILocation(line: 1226, column: 14, scope: !3642)
!3703 = !DILocation(line: 1226, column: 12, scope: !3642)
!3704 = !DILocation(line: 1229, column: 23, scope: !3642)
!3705 = !DILocation(line: 1229, column: 26, scope: !3642)
!3706 = !DILocation(line: 1229, column: 5, scope: !3642)
!3707 = !DILocation(line: 1231, column: 12, scope: !3642)
!3708 = !DILocation(line: 1231, column: 5, scope: !3642)
!3709 = !DILocalVariable(name: "ar", scope: !3710, file: !3, line: 1237, type: !2737)
!3710 = distinct !DILexicalBlock(scope: !3643, file: !3, line: 1235, column: 4)
!3711 = !DILocation(line: 1237, column: 14, scope: !3710)
!3712 = !DILocation(line: 1237, column: 33, scope: !3710)
!3713 = !DILocation(line: 1237, column: 19, scope: !3710)
!3714 = !DILocation(line: 1239, column: 23, scope: !3710)
!3715 = !DILocation(line: 1239, column: 5, scope: !3710)
!3716 = !DILocation(line: 1240, column: 33, scope: !3710)
!3717 = !DILocation(line: 1240, column: 36, scope: !3710)
!3718 = !DILocation(line: 1240, column: 40, scope: !3710)
!3719 = !DILocation(line: 1240, column: 47, scope: !3710)
!3720 = !DILocation(line: 1240, column: 59, scope: !3710)
!3721 = !DILocation(line: 1240, column: 68, scope: !3710)
!3722 = !DILocation(line: 1240, column: 14, scope: !3710)
!3723 = !DILocation(line: 1240, column: 12, scope: !3710)
!3724 = !DILocation(line: 1241, column: 23, scope: !3710)
!3725 = !DILocation(line: 1241, column: 26, scope: !3710)
!3726 = !DILocation(line: 1241, column: 5, scope: !3710)
!3727 = !DILocation(line: 1243, column: 12, scope: !3710)
!3728 = !DILocation(line: 1243, column: 5, scope: !3710)
!3729 = !DILocalVariable(name: "ar", scope: !3730, file: !3, line: 1249, type: !2737)
!3730 = distinct !DILexicalBlock(scope: !3643, file: !3, line: 1247, column: 4)
!3731 = !DILocation(line: 1249, column: 14, scope: !3730)
!3732 = !DILocation(line: 1249, column: 33, scope: !3730)
!3733 = !DILocation(line: 1249, column: 19, scope: !3730)
!3734 = !DILocalVariable(name: "area", scope: !3730, file: !3, line: 1250, type: !2201)
!3735 = !DILocation(line: 1250, column: 14, scope: !3730)
!3736 = !DILocation(line: 1250, column: 33, scope: !3730)
!3737 = !DILocation(line: 1250, column: 21, scope: !3730)
!3738 = !DILocation(line: 1252, column: 23, scope: !3730)
!3739 = !DILocation(line: 1252, column: 5, scope: !3730)
!3740 = !DILocation(line: 1253, column: 21, scope: !3730)
!3741 = !DILocation(line: 1253, column: 5, scope: !3730)
!3742 = !DILocation(line: 1254, column: 33, scope: !3730)
!3743 = !DILocation(line: 1254, column: 36, scope: !3730)
!3744 = !DILocation(line: 1254, column: 40, scope: !3730)
!3745 = !DILocation(line: 1254, column: 47, scope: !3730)
!3746 = !DILocation(line: 1254, column: 59, scope: !3730)
!3747 = !DILocation(line: 1254, column: 68, scope: !3730)
!3748 = !DILocation(line: 1254, column: 14, scope: !3730)
!3749 = !DILocation(line: 1254, column: 12, scope: !3730)
!3750 = !DILocation(line: 1255, column: 21, scope: !3730)
!3751 = !DILocation(line: 1255, column: 24, scope: !3730)
!3752 = !DILocation(line: 1255, column: 5, scope: !3730)
!3753 = !DILocation(line: 1256, column: 23, scope: !3730)
!3754 = !DILocation(line: 1256, column: 26, scope: !3730)
!3755 = !DILocation(line: 1256, column: 5, scope: !3730)
!3756 = !DILocation(line: 1258, column: 12, scope: !3730)
!3757 = !DILocation(line: 1258, column: 5, scope: !3730)
!3758 = !DILocation(line: 1262, column: 31, scope: !3643)
!3759 = !DILocation(line: 1262, column: 34, scope: !3643)
!3760 = !DILocation(line: 1262, column: 38, scope: !3643)
!3761 = !DILocation(line: 1262, column: 45, scope: !3643)
!3762 = !DILocation(line: 1262, column: 57, scope: !3643)
!3763 = !DILocation(line: 1262, column: 66, scope: !3643)
!3764 = !DILocation(line: 1262, column: 12, scope: !3643)
!3765 = !DILocation(line: 1262, column: 5, scope: !3643)
!3766 = !DILocation(line: 1264, column: 2, scope: !3612)
!3767 = !DILocation(line: 1266, column: 2, scope: !3583)
!3768 = !DILocation(line: 1267, column: 1, scope: !3583)
!3769 = distinct !DISubprogram(name: "WM_operator_region_active_win_set", scope: !3, file: !3, line: 513, type: !3044, scopeLine: 514, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!3770 = !DILocalVariable(name: "C", arg: 1, scope: !3769, file: !3, line: 513, type: !2402)
!3771 = !DILocation(line: 513, column: 50, scope: !3769)
!3772 = !DILocalVariable(name: "sa", scope: !3769, file: !3, line: 515, type: !2201)
!3773 = !DILocation(line: 515, column: 11, scope: !3769)
!3774 = !DILocation(line: 515, column: 28, scope: !3769)
!3775 = !DILocation(line: 515, column: 16, scope: !3769)
!3776 = !DILocation(line: 516, column: 6, scope: !3777)
!3777 = distinct !DILexicalBlock(scope: !3769, file: !3, line: 516, column: 6)
!3778 = !DILocation(line: 516, column: 6, scope: !3769)
!3779 = !DILocalVariable(name: "ar", scope: !3780, file: !3, line: 517, type: !2737)
!3780 = distinct !DILexicalBlock(scope: !3777, file: !3, line: 516, column: 10)
!3781 = !DILocation(line: 517, column: 12, scope: !3780)
!3782 = !DILocation(line: 517, column: 31, scope: !3780)
!3783 = !DILocation(line: 517, column: 17, scope: !3780)
!3784 = !DILocation(line: 518, column: 7, scope: !3785)
!3785 = distinct !DILexicalBlock(scope: !3780, file: !3, line: 518, column: 7)
!3786 = !DILocation(line: 518, column: 10, scope: !3785)
!3787 = !DILocation(line: 518, column: 13, scope: !3785)
!3788 = !DILocation(line: 518, column: 17, scope: !3785)
!3789 = !DILocation(line: 518, column: 28, scope: !3785)
!3790 = !DILocation(line: 518, column: 7, scope: !3780)
!3791 = !DILocation(line: 519, column: 43, scope: !3792)
!3792 = distinct !DILexicalBlock(scope: !3785, file: !3, line: 518, column: 48)
!3793 = !DILocation(line: 519, column: 47, scope: !3792)
!3794 = !DILocation(line: 519, column: 59, scope: !3792)
!3795 = !DILocation(line: 519, column: 28, scope: !3792)
!3796 = !DILocation(line: 519, column: 4, scope: !3792)
!3797 = !DILocation(line: 519, column: 8, scope: !3792)
!3798 = !DILocation(line: 519, column: 26, scope: !3792)
!3799 = !DILocation(line: 520, column: 3, scope: !3792)
!3800 = !DILocation(line: 521, column: 2, scope: !3780)
!3801 = !DILocation(line: 522, column: 1, scope: !3769)
!3802 = distinct !DISubprogram(name: "WM_report", scope: !3, file: !3, line: 592, type: !3803, scopeLine: 593, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!3803 = !DISubroutineType(types: !3804)
!3804 = !{null, !2728, !3805, !58}
!3805 = !DIDerivedType(tag: DW_TAG_typedef, name: "ReportType", file: !8, line: 77, baseType: !1615)
!3806 = !DILocalVariable(name: "C", arg: 1, scope: !3802, file: !3, line: 592, type: !2728)
!3807 = !DILocation(line: 592, column: 32, scope: !3802)
!3808 = !DILocalVariable(name: "type", arg: 2, scope: !3802, file: !3, line: 592, type: !3805)
!3809 = !DILocation(line: 592, column: 46, scope: !3802)
!3810 = !DILocalVariable(name: "message", arg: 3, scope: !3802, file: !3, line: 592, type: !58)
!3811 = !DILocation(line: 592, column: 64, scope: !3802)
!3812 = !DILocalVariable(name: "reports", scope: !3802, file: !3, line: 594, type: !1583)
!3813 = !DILocation(line: 594, column: 13, scope: !3802)
!3814 = !DILocation(line: 596, column: 2, scope: !3802)
!3815 = !DILocation(line: 597, column: 23, scope: !3802)
!3816 = !DILocation(line: 597, column: 29, scope: !3802)
!3817 = !DILocation(line: 597, column: 2, scope: !3802)
!3818 = !DILocation(line: 599, column: 17, scope: !3802)
!3819 = !DILocation(line: 599, column: 2, scope: !3802)
!3820 = !DILocation(line: 601, column: 2, scope: !3802)
!3821 = !DILocation(line: 602, column: 1, scope: !3802)
!3822 = distinct !DISubprogram(name: "wm_add_reports", scope: !3, file: !3, line: 569, type: !3823, scopeLine: 570, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!3823 = !DISubroutineType(types: !3824)
!3824 = !{null, !2728, !1582}
!3825 = !DILocalVariable(name: "C", arg: 1, scope: !3822, file: !3, line: 569, type: !2728)
!3826 = !DILocation(line: 569, column: 44, scope: !3822)
!3827 = !DILocalVariable(name: "reports", arg: 2, scope: !3822, file: !3, line: 569, type: !1582)
!3828 = !DILocation(line: 569, column: 59, scope: !3822)
!3829 = !DILocation(line: 572, column: 6, scope: !3830)
!3830 = distinct !DILexicalBlock(scope: !3822, file: !3, line: 572, column: 6)
!3831 = !DILocation(line: 572, column: 15, scope: !3830)
!3832 = !DILocation(line: 572, column: 20, scope: !3830)
!3833 = !DILocation(line: 572, column: 26, scope: !3830)
!3834 = !DILocation(line: 572, column: 30, scope: !3830)
!3835 = !DILocation(line: 572, column: 39, scope: !3830)
!3836 = !DILocation(line: 572, column: 44, scope: !3830)
!3837 = !DILocation(line: 572, column: 59, scope: !3830)
!3838 = !DILocation(line: 572, column: 6, scope: !3822)
!3839 = !DILocalVariable(name: "wm", scope: !3840, file: !3, line: 574, type: !1543)
!3840 = distinct !DILexicalBlock(scope: !3830, file: !3, line: 572, column: 65)
!3841 = !DILocation(line: 574, column: 20, scope: !3840)
!3842 = !DILocation(line: 574, column: 40, scope: !3840)
!3843 = !DILocation(line: 574, column: 25, scope: !3840)
!3844 = !DILocalVariable(name: "wm_reports", scope: !3840, file: !3, line: 575, type: !1582)
!3845 = !DILocation(line: 575, column: 15, scope: !3840)
!3846 = !DILocation(line: 575, column: 43, scope: !3840)
!3847 = !DILocation(line: 575, column: 28, scope: !3840)
!3848 = !DILocalVariable(name: "rti", scope: !3840, file: !3, line: 576, type: !3849)
!3849 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3850, size: 64)
!3850 = !DIDerivedType(tag: DW_TAG_typedef, name: "ReportTimerInfo", file: !8, line: 122, baseType: !3851)
!3851 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ReportTimerInfo", file: !8, line: 118, size: 160, elements: !3852)
!3852 = !{!3853, !3854, !3855}
!3853 = !DIDerivedType(tag: DW_TAG_member, name: "col", scope: !3851, file: !8, line: 119, baseType: !308, size: 96)
!3854 = !DIDerivedType(tag: DW_TAG_member, name: "grayscale", scope: !3851, file: !8, line: 120, baseType: !120, size: 32, offset: 96)
!3855 = !DIDerivedType(tag: DW_TAG_member, name: "widthfac", scope: !3851, file: !8, line: 121, baseType: !120, size: 32, offset: 128)
!3856 = !DILocation(line: 576, column: 20, scope: !3840)
!3857 = !DILocation(line: 579, column: 23, scope: !3840)
!3858 = !DILocation(line: 579, column: 35, scope: !3840)
!3859 = !DILocation(line: 579, column: 42, scope: !3840)
!3860 = !DILocation(line: 579, column: 51, scope: !3840)
!3861 = !DILocation(line: 579, column: 3, scope: !3840)
!3862 = !DILocation(line: 582, column: 25, scope: !3840)
!3863 = !DILocation(line: 582, column: 35, scope: !3840)
!3864 = !DILocation(line: 582, column: 47, scope: !3840)
!3865 = !DILocation(line: 582, column: 3, scope: !3840)
!3866 = !DILocation(line: 585, column: 48, scope: !3840)
!3867 = !DILocation(line: 585, column: 66, scope: !3840)
!3868 = !DILocation(line: 585, column: 52, scope: !3840)
!3869 = !DILocation(line: 585, column: 29, scope: !3840)
!3870 = !DILocation(line: 585, column: 3, scope: !3840)
!3871 = !DILocation(line: 585, column: 15, scope: !3840)
!3872 = !DILocation(line: 585, column: 27, scope: !3840)
!3873 = !DILocation(line: 587, column: 9, scope: !3840)
!3874 = !DILocation(line: 587, column: 7, scope: !3840)
!3875 = !DILocation(line: 588, column: 41, scope: !3840)
!3876 = !DILocation(line: 588, column: 3, scope: !3840)
!3877 = !DILocation(line: 588, column: 15, scope: !3840)
!3878 = !DILocation(line: 588, column: 28, scope: !3840)
!3879 = !DILocation(line: 588, column: 39, scope: !3840)
!3880 = !DILocation(line: 589, column: 2, scope: !3840)
!3881 = !DILocation(line: 590, column: 1, scope: !3822)
!3882 = distinct !DISubprogram(name: "WM_reportf", scope: !3, file: !3, line: 604, type: !3883, scopeLine: 605, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!3883 = !DISubroutineType(types: !3884)
!3884 = !{null, !2728, !3805, !58, null}
!3885 = !DILocalVariable(name: "C", arg: 1, scope: !3882, file: !3, line: 604, type: !2728)
!3886 = !DILocation(line: 604, column: 33, scope: !3882)
!3887 = !DILocalVariable(name: "type", arg: 2, scope: !3882, file: !3, line: 604, type: !3805)
!3888 = !DILocation(line: 604, column: 47, scope: !3882)
!3889 = !DILocalVariable(name: "format", arg: 3, scope: !3882, file: !3, line: 604, type: !58)
!3890 = !DILocation(line: 604, column: 65, scope: !3882)
!3891 = !DILocalVariable(name: "ds", scope: !3882, file: !3, line: 606, type: !3892)
!3892 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !3893, size: 64)
!3893 = !DIDerivedType(tag: DW_TAG_typedef, name: "DynStr", file: !3894, line: 48, baseType: !3895)
!3894 = !DIFile(filename: "blender/source/blender/blenlib/BLI_dynstr.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!3895 = !DICompositeType(tag: DW_TAG_structure_type, name: "DynStr", file: !3894, line: 45, flags: DIFlagFwdDecl)
!3896 = !DILocation(line: 606, column: 10, scope: !3882)
!3897 = !DILocalVariable(name: "args", scope: !3882, file: !3, line: 607, type: !3898)
!3898 = !DIDerivedType(tag: DW_TAG_typedef, name: "va_list", file: !3899, line: 52, baseType: !3900)
!3899 = !DIFile(filename: "/usr/include/stdio.h", directory: "")
!3900 = !DIDerivedType(tag: DW_TAG_typedef, name: "__gnuc_va_list", file: !3901, line: 32, baseType: !3902)
!3901 = !DIFile(filename: "Rohit/IR2Vec-LoopOptimizationFramework/build_REL_AsrtON/lib/clang/10.0.1/include/stdarg.h", directory: "/home/venkat/IF-DV")
!3902 = !DIDerivedType(tag: DW_TAG_typedef, name: "__builtin_va_list", file: !3, line: 607, baseType: !3903)
!3903 = !DICompositeType(tag: DW_TAG_array_type, baseType: !3904, size: 192, elements: !321)
!3904 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "__va_list_tag", file: !3, line: 607, size: 192, elements: !3905)
!3905 = !{!3906, !3907, !3908, !3909}
!3906 = !DIDerivedType(tag: DW_TAG_member, name: "gp_offset", scope: !3904, file: !3, line: 607, baseType: !300, size: 32)
!3907 = !DIDerivedType(tag: DW_TAG_member, name: "fp_offset", scope: !3904, file: !3, line: 607, baseType: !300, size: 32, offset: 32)
!3908 = !DIDerivedType(tag: DW_TAG_member, name: "overflow_arg_area", scope: !3904, file: !3, line: 607, baseType: !40, size: 64, offset: 64)
!3909 = !DIDerivedType(tag: DW_TAG_member, name: "reg_save_area", scope: !3904, file: !3, line: 607, baseType: !40, size: 64, offset: 128)
!3910 = !DILocation(line: 607, column: 10, scope: !3882)
!3911 = !DILocation(line: 609, column: 7, scope: !3882)
!3912 = !DILocation(line: 609, column: 5, scope: !3882)
!3913 = !DILocation(line: 610, column: 2, scope: !3882)
!3914 = !DILocation(line: 611, column: 22, scope: !3882)
!3915 = !DILocation(line: 611, column: 26, scope: !3882)
!3916 = !DILocation(line: 611, column: 34, scope: !3882)
!3917 = !DILocation(line: 611, column: 2, scope: !3882)
!3918 = !DILocation(line: 612, column: 2, scope: !3882)
!3919 = !DILocation(line: 614, column: 12, scope: !3882)
!3920 = !DILocation(line: 614, column: 15, scope: !3882)
!3921 = !DILocation(line: 614, column: 44, scope: !3882)
!3922 = !DILocation(line: 614, column: 21, scope: !3882)
!3923 = !DILocation(line: 614, column: 2, scope: !3882)
!3924 = !DILocation(line: 616, column: 18, scope: !3882)
!3925 = !DILocation(line: 616, column: 2, scope: !3882)
!3926 = !DILocation(line: 617, column: 1, scope: !3882)
!3927 = distinct !DISubprogram(name: "WM_operator_call_ex", scope: !3, file: !3, line: 772, type: !3928, scopeLine: 774, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!3928 = !DISubroutineType(types: !3929)
!3929 = !{!34, !2402, !6, !3587}
!3930 = !DILocalVariable(name: "C", arg: 1, scope: !3927, file: !3, line: 772, type: !2402)
!3931 = !DILocation(line: 772, column: 35, scope: !3927)
!3932 = !DILocalVariable(name: "op", arg: 2, scope: !3927, file: !3, line: 772, type: !6)
!3933 = !DILocation(line: 772, column: 50, scope: !3927)
!3934 = !DILocalVariable(name: "store", arg: 3, scope: !3927, file: !3, line: 773, type: !3587)
!3935 = !DILocation(line: 773, column: 36, scope: !3927)
!3936 = !DILocation(line: 775, column: 26, scope: !3927)
!3937 = !DILocation(line: 775, column: 29, scope: !3927)
!3938 = !DILocation(line: 775, column: 40, scope: !3927)
!3939 = !DILocation(line: 775, column: 9, scope: !3927)
!3940 = !DILocation(line: 775, column: 2, scope: !3927)
!3941 = distinct !DISubprogram(name: "wm_operator_exec", scope: !3, file: !3, line: 706, type: !3942, scopeLine: 707, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!3942 = !DISubroutineType(types: !3943)
!3943 = !{!34, !2402, !6, !3587, !3587}
!3944 = !DILocalVariable(name: "C", arg: 1, scope: !3941, file: !3, line: 706, type: !2402)
!3945 = !DILocation(line: 706, column: 39, scope: !3941)
!3946 = !DILocalVariable(name: "op", arg: 2, scope: !3941, file: !3, line: 706, type: !6)
!3947 = !DILocation(line: 706, column: 54, scope: !3941)
!3948 = !DILocalVariable(name: "repeat", arg: 3, scope: !3941, file: !3, line: 706, type: !3587)
!3949 = !DILocation(line: 706, column: 69, scope: !3941)
!3950 = !DILocalVariable(name: "store", arg: 4, scope: !3941, file: !3, line: 706, type: !3587)
!3951 = !DILocation(line: 706, column: 88, scope: !3941)
!3952 = !DILocalVariable(name: "wm", scope: !3941, file: !3, line: 708, type: !1543)
!3953 = !DILocation(line: 708, column: 19, scope: !3941)
!3954 = !DILocation(line: 708, column: 39, scope: !3941)
!3955 = !DILocation(line: 708, column: 24, scope: !3941)
!3956 = !DILocalVariable(name: "retval", scope: !3941, file: !3, line: 709, type: !34)
!3957 = !DILocation(line: 709, column: 6, scope: !3941)
!3958 = !DILocation(line: 711, column: 31, scope: !3941)
!3959 = !DILocation(line: 711, column: 2, scope: !3941)
!3960 = !DILocation(line: 713, column: 6, scope: !3961)
!3961 = distinct !DILexicalBlock(scope: !3941, file: !3, line: 713, column: 6)
!3962 = !DILocation(line: 713, column: 9, scope: !3961)
!3963 = !DILocation(line: 713, column: 17, scope: !3961)
!3964 = !DILocation(line: 713, column: 20, scope: !3961)
!3965 = !DILocation(line: 713, column: 24, scope: !3961)
!3966 = !DILocation(line: 713, column: 29, scope: !3961)
!3967 = !DILocation(line: 713, column: 6, scope: !3941)
!3968 = !DILocation(line: 714, column: 10, scope: !3961)
!3969 = !DILocation(line: 714, column: 3, scope: !3961)
!3970 = !DILocation(line: 716, column: 28, scope: !3971)
!3971 = distinct !DILexicalBlock(scope: !3941, file: !3, line: 716, column: 6)
!3972 = !DILocation(line: 716, column: 31, scope: !3971)
!3973 = !DILocation(line: 716, column: 35, scope: !3971)
!3974 = !DILocation(line: 716, column: 11, scope: !3971)
!3975 = !DILocation(line: 716, column: 8, scope: !3971)
!3976 = !DILocation(line: 716, column: 6, scope: !3941)
!3977 = !DILocation(line: 717, column: 10, scope: !3971)
!3978 = !DILocation(line: 717, column: 3, scope: !3971)
!3979 = !DILocation(line: 719, column: 6, scope: !3980)
!3980 = distinct !DILexicalBlock(scope: !3941, file: !3, line: 719, column: 6)
!3981 = !DILocation(line: 719, column: 10, scope: !3980)
!3982 = !DILocation(line: 719, column: 16, scope: !3980)
!3983 = !DILocation(line: 719, column: 6, scope: !3941)
!3984 = !DILocation(line: 720, column: 7, scope: !3985)
!3985 = distinct !DILexicalBlock(scope: !3986, file: !3, line: 720, column: 7)
!3986 = distinct !DILexicalBlock(scope: !3980, file: !3, line: 719, column: 22)
!3987 = !DILocation(line: 720, column: 11, scope: !3985)
!3988 = !DILocation(line: 720, column: 17, scope: !3985)
!3989 = !DILocation(line: 720, column: 22, scope: !3985)
!3990 = !DILocation(line: 720, column: 7, scope: !3986)
!3991 = !DILocation(line: 721, column: 4, scope: !3985)
!3992 = !DILocation(line: 721, column: 8, scope: !3985)
!3993 = !DILocation(line: 721, column: 21, scope: !3985)
!3994 = !DILocation(line: 723, column: 12, scope: !3986)
!3995 = !DILocation(line: 723, column: 16, scope: !3986)
!3996 = !DILocation(line: 723, column: 22, scope: !3986)
!3997 = !DILocation(line: 723, column: 27, scope: !3986)
!3998 = !DILocation(line: 723, column: 30, scope: !3986)
!3999 = !DILocation(line: 723, column: 10, scope: !3986)
!4000 = !DILocation(line: 724, column: 3, scope: !3986)
!4001 = !DILocation(line: 726, column: 7, scope: !4002)
!4002 = distinct !DILexicalBlock(scope: !3986, file: !3, line: 726, column: 7)
!4003 = !DILocation(line: 726, column: 11, scope: !4002)
!4004 = !DILocation(line: 726, column: 17, scope: !4002)
!4005 = !DILocation(line: 726, column: 22, scope: !4002)
!4006 = !DILocation(line: 726, column: 36, scope: !4002)
!4007 = !DILocation(line: 726, column: 54, scope: !4002)
!4008 = !DILocation(line: 726, column: 39, scope: !4002)
!4009 = !DILocation(line: 726, column: 60, scope: !4002)
!4010 = !DILocation(line: 726, column: 57, scope: !4002)
!4011 = !DILocation(line: 726, column: 7, scope: !3986)
!4012 = !DILocation(line: 727, column: 4, scope: !4002)
!4013 = !DILocation(line: 727, column: 8, scope: !4002)
!4014 = !DILocation(line: 727, column: 21, scope: !4002)
!4015 = !DILocation(line: 728, column: 2, scope: !3986)
!4016 = !DILocation(line: 733, column: 6, scope: !4017)
!4017 = distinct !DILexicalBlock(scope: !3941, file: !3, line: 733, column: 6)
!4018 = !DILocation(line: 733, column: 13, scope: !4017)
!4019 = !DILocation(line: 733, column: 6, scope: !3941)
!4020 = !DILocation(line: 734, column: 23, scope: !4017)
!4021 = !DILocation(line: 734, column: 26, scope: !4017)
!4022 = !DILocation(line: 734, column: 30, scope: !4017)
!4023 = !DILocation(line: 734, column: 3, scope: !4017)
!4024 = !DILocation(line: 736, column: 6, scope: !4025)
!4025 = distinct !DILexicalBlock(scope: !3941, file: !3, line: 736, column: 6)
!4026 = !DILocation(line: 736, column: 13, scope: !4025)
!4027 = !DILocation(line: 736, column: 6, scope: !3941)
!4028 = !DILocation(line: 737, column: 7, scope: !4029)
!4029 = distinct !DILexicalBlock(scope: !4030, file: !3, line: 737, column: 7)
!4030 = distinct !DILexicalBlock(scope: !4025, file: !3, line: 736, column: 34)
!4031 = !DILocation(line: 737, column: 7, scope: !4030)
!4032 = !DILocation(line: 738, column: 8, scope: !4033)
!4033 = distinct !DILexicalBlock(scope: !4034, file: !3, line: 738, column: 8)
!4034 = distinct !DILexicalBlock(scope: !4029, file: !3, line: 737, column: 14)
!4035 = !DILocation(line: 738, column: 12, scope: !4033)
!4036 = !DILocation(line: 738, column: 26, scope: !4033)
!4037 = !DILocation(line: 738, column: 8, scope: !4034)
!4038 = !DILocation(line: 739, column: 39, scope: !4039)
!4039 = distinct !DILexicalBlock(scope: !4033, file: !3, line: 738, column: 32)
!4040 = !DILocation(line: 739, column: 5, scope: !4039)
!4041 = !DILocation(line: 740, column: 4, scope: !4039)
!4042 = !DILocation(line: 741, column: 3, scope: !4034)
!4043 = !DILocation(line: 742, column: 24, scope: !4030)
!4044 = !DILocation(line: 742, column: 27, scope: !4030)
!4045 = !DILocation(line: 742, column: 31, scope: !4030)
!4046 = !DILocation(line: 742, column: 3, scope: !4030)
!4047 = !DILocation(line: 743, column: 2, scope: !4030)
!4048 = !DILocation(line: 744, column: 11, scope: !4049)
!4049 = distinct !DILexicalBlock(scope: !4025, file: !3, line: 744, column: 11)
!4050 = !DILocation(line: 744, column: 18, scope: !4049)
!4051 = !DILocation(line: 744, column: 11, scope: !4025)
!4052 = !DILocation(line: 745, column: 20, scope: !4053)
!4053 = distinct !DILexicalBlock(scope: !4049, file: !3, line: 744, column: 24)
!4054 = !DILocation(line: 745, column: 3, scope: !4053)
!4055 = !DILocation(line: 746, column: 2, scope: !4053)
!4056 = !DILocation(line: 748, column: 9, scope: !3941)
!4057 = !DILocation(line: 748, column: 16, scope: !3941)
!4058 = !DILocation(line: 748, column: 2, scope: !3941)
!4059 = !DILocation(line: 750, column: 1, scope: !3941)
!4060 = distinct !DISubprogram(name: "WM_operator_call", scope: !3, file: !3, line: 778, type: !4061, scopeLine: 779, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!4061 = !DISubroutineType(types: !4062)
!4062 = !{!34, !2402, !6}
!4063 = !DILocalVariable(name: "C", arg: 1, scope: !4060, file: !3, line: 778, type: !2402)
!4064 = !DILocation(line: 778, column: 32, scope: !4060)
!4065 = !DILocalVariable(name: "op", arg: 2, scope: !4060, file: !3, line: 778, type: !6)
!4066 = !DILocation(line: 778, column: 47, scope: !4060)
!4067 = !DILocation(line: 780, column: 29, scope: !4060)
!4068 = !DILocation(line: 780, column: 32, scope: !4060)
!4069 = !DILocation(line: 780, column: 9, scope: !4060)
!4070 = !DILocation(line: 780, column: 2, scope: !4060)
!4071 = distinct !DISubprogram(name: "WM_operator_call_notest", scope: !3, file: !3, line: 786, type: !4061, scopeLine: 787, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!4072 = !DILocalVariable(name: "C", arg: 1, scope: !4071, file: !3, line: 786, type: !2402)
!4073 = !DILocation(line: 786, column: 39, scope: !4071)
!4074 = !DILocalVariable(name: "op", arg: 2, scope: !4071, file: !3, line: 786, type: !6)
!4075 = !DILocation(line: 786, column: 54, scope: !4071)
!4076 = !DILocation(line: 788, column: 33, scope: !4071)
!4077 = !DILocation(line: 788, column: 36, scope: !4071)
!4078 = !DILocation(line: 788, column: 9, scope: !4071)
!4079 = !DILocation(line: 788, column: 2, scope: !4071)
!4080 = distinct !DISubprogram(name: "wm_operator_exec_notest", scope: !3, file: !3, line: 753, type: !4061, scopeLine: 754, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!4081 = !DILocalVariable(name: "C", arg: 1, scope: !4080, file: !3, line: 753, type: !2402)
!4082 = !DILocation(line: 753, column: 46, scope: !4080)
!4083 = !DILocalVariable(name: "op", arg: 2, scope: !4080, file: !3, line: 753, type: !6)
!4084 = !DILocation(line: 753, column: 61, scope: !4080)
!4085 = !DILocalVariable(name: "retval", scope: !4080, file: !3, line: 755, type: !34)
!4086 = !DILocation(line: 755, column: 6, scope: !4080)
!4087 = !DILocation(line: 757, column: 6, scope: !4088)
!4088 = distinct !DILexicalBlock(scope: !4080, file: !3, line: 757, column: 6)
!4089 = !DILocation(line: 757, column: 9, scope: !4088)
!4090 = !DILocation(line: 757, column: 17, scope: !4088)
!4091 = !DILocation(line: 757, column: 20, scope: !4088)
!4092 = !DILocation(line: 757, column: 24, scope: !4088)
!4093 = !DILocation(line: 757, column: 29, scope: !4088)
!4094 = !DILocation(line: 757, column: 37, scope: !4088)
!4095 = !DILocation(line: 757, column: 40, scope: !4088)
!4096 = !DILocation(line: 757, column: 44, scope: !4088)
!4097 = !DILocation(line: 757, column: 50, scope: !4088)
!4098 = !DILocation(line: 757, column: 55, scope: !4088)
!4099 = !DILocation(line: 757, column: 6, scope: !4080)
!4100 = !DILocation(line: 758, column: 10, scope: !4088)
!4101 = !DILocation(line: 758, column: 3, scope: !4088)
!4102 = !DILocation(line: 760, column: 11, scope: !4080)
!4103 = !DILocation(line: 760, column: 15, scope: !4080)
!4104 = !DILocation(line: 760, column: 21, scope: !4080)
!4105 = !DILocation(line: 760, column: 26, scope: !4080)
!4106 = !DILocation(line: 760, column: 29, scope: !4080)
!4107 = !DILocation(line: 760, column: 9, scope: !4080)
!4108 = !DILocation(line: 761, column: 2, scope: !4080)
!4109 = !DILocation(line: 763, column: 9, scope: !4080)
!4110 = !DILocation(line: 763, column: 2, scope: !4080)
!4111 = !DILocation(line: 764, column: 1, scope: !4080)
!4112 = distinct !DISubprogram(name: "WM_operator_repeat", scope: !3, file: !3, line: 792, type: !4061, scopeLine: 793, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!4113 = !DILocalVariable(name: "C", arg: 1, scope: !4112, file: !3, line: 792, type: !2402)
!4114 = !DILocation(line: 792, column: 34, scope: !4112)
!4115 = !DILocalVariable(name: "op", arg: 2, scope: !4112, file: !3, line: 792, type: !6)
!4116 = !DILocation(line: 792, column: 49, scope: !4112)
!4117 = !DILocation(line: 794, column: 26, scope: !4112)
!4118 = !DILocation(line: 794, column: 29, scope: !4112)
!4119 = !DILocation(line: 794, column: 9, scope: !4112)
!4120 = !DILocation(line: 794, column: 2, scope: !4112)
!4121 = distinct !DISubprogram(name: "WM_operator_repeat_check", scope: !3, file: !3, line: 800, type: !4122, scopeLine: 801, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!4122 = !DISubroutineType(types: !4123)
!4123 = !{!73, !2728, !6}
!4124 = !DILocalVariable(name: "UNUSED_C", arg: 1, scope: !4121, file: !3, line: 800, type: !2728)
!4125 = !DILocation(line: 800, column: 47, scope: !4121)
!4126 = !DILocalVariable(name: "op", arg: 2, scope: !4121, file: !3, line: 800, type: !6)
!4127 = !DILocation(line: 800, column: 70, scope: !4121)
!4128 = !DILocation(line: 802, column: 6, scope: !4129)
!4129 = distinct !DILexicalBlock(scope: !4121, file: !3, line: 802, column: 6)
!4130 = !DILocation(line: 802, column: 10, scope: !4129)
!4131 = !DILocation(line: 802, column: 16, scope: !4129)
!4132 = !DILocation(line: 802, column: 21, scope: !4129)
!4133 = !DILocation(line: 802, column: 6, scope: !4121)
!4134 = !DILocation(line: 803, column: 3, scope: !4135)
!4135 = distinct !DILexicalBlock(scope: !4129, file: !3, line: 802, column: 30)
!4136 = !DILocation(line: 805, column: 11, scope: !4137)
!4137 = distinct !DILexicalBlock(scope: !4129, file: !3, line: 805, column: 11)
!4138 = !DILocation(line: 805, column: 15, scope: !4137)
!4139 = !DILocation(line: 805, column: 11, scope: !4129)
!4140 = !DILocalVariable(name: "otmacro", scope: !4141, file: !3, line: 807, type: !3510)
!4141 = distinct !DILexicalBlock(scope: !4137, file: !3, line: 805, column: 20)
!4142 = !DILocation(line: 807, column: 24, scope: !4141)
!4143 = !DILocation(line: 808, column: 18, scope: !4144)
!4144 = distinct !DILexicalBlock(scope: !4141, file: !3, line: 808, column: 3)
!4145 = !DILocation(line: 808, column: 22, scope: !4144)
!4146 = !DILocation(line: 808, column: 27, scope: !4144)
!4147 = !DILocation(line: 808, column: 33, scope: !4144)
!4148 = !DILocation(line: 808, column: 39, scope: !4144)
!4149 = !DILocation(line: 808, column: 16, scope: !4144)
!4150 = !DILocation(line: 808, column: 8, scope: !4144)
!4151 = !DILocation(line: 808, column: 46, scope: !4152)
!4152 = distinct !DILexicalBlock(scope: !4144, file: !3, line: 808, column: 3)
!4153 = !DILocation(line: 808, column: 3, scope: !4144)
!4154 = !DILocalVariable(name: "otm", scope: !4155, file: !3, line: 809, type: !1578)
!4155 = distinct !DILexicalBlock(scope: !4152, file: !3, line: 808, column: 80)
!4156 = !DILocation(line: 809, column: 20, scope: !4155)
!4157 = !DILocation(line: 809, column: 47, scope: !4155)
!4158 = !DILocation(line: 809, column: 56, scope: !4155)
!4159 = !DILocation(line: 809, column: 26, scope: !4155)
!4160 = !DILocation(line: 810, column: 8, scope: !4161)
!4161 = distinct !DILexicalBlock(scope: !4155, file: !3, line: 810, column: 8)
!4162 = !DILocation(line: 810, column: 12, scope: !4161)
!4163 = !DILocation(line: 810, column: 15, scope: !4161)
!4164 = !DILocation(line: 810, column: 20, scope: !4161)
!4165 = !DILocation(line: 810, column: 25, scope: !4161)
!4166 = !DILocation(line: 810, column: 8, scope: !4155)
!4167 = !DILocation(line: 811, column: 5, scope: !4168)
!4168 = distinct !DILexicalBlock(scope: !4161, file: !3, line: 810, column: 34)
!4169 = !DILocation(line: 813, column: 3, scope: !4155)
!4170 = !DILocation(line: 808, column: 65, scope: !4152)
!4171 = !DILocation(line: 808, column: 74, scope: !4152)
!4172 = !DILocation(line: 808, column: 63, scope: !4152)
!4173 = !DILocation(line: 808, column: 3, scope: !4152)
!4174 = distinct !{!4174, !4153, !4175}
!4175 = !DILocation(line: 813, column: 3, scope: !4144)
!4176 = !DILocation(line: 814, column: 3, scope: !4141)
!4177 = !DILocation(line: 817, column: 2, scope: !4121)
!4178 = !DILocation(line: 818, column: 1, scope: !4121)
!4179 = distinct !DISubprogram(name: "WM_operator_last_properties_init", scope: !3, file: !3, line: 924, type: !4180, scopeLine: 925, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!4180 = !DISubroutineType(types: !4181)
!4181 = !{!73, !6}
!4182 = !DILocalVariable(name: "op", arg: 1, scope: !4179, file: !3, line: 924, type: !6)
!4183 = !DILocation(line: 924, column: 51, scope: !4179)
!4184 = !DILocalVariable(name: "changed", scope: !4179, file: !3, line: 926, type: !73)
!4185 = !DILocation(line: 926, column: 7, scope: !4179)
!4186 = !DILocation(line: 928, column: 6, scope: !4187)
!4187 = distinct !DILexicalBlock(scope: !4179, file: !3, line: 928, column: 6)
!4188 = !DILocation(line: 928, column: 10, scope: !4187)
!4189 = !DILocation(line: 928, column: 16, scope: !4187)
!4190 = !DILocation(line: 928, column: 6, scope: !4179)
!4191 = !DILocalVariable(name: "val", scope: !4192, file: !3, line: 929, type: !4193)
!4192 = distinct !DILexicalBlock(scope: !4187, file: !3, line: 928, column: 33)
!4193 = !DIDerivedType(tag: DW_TAG_typedef, name: "IDPropertyTemplate", file: !4194, line: 56, baseType: !4195)
!4194 = !DIFile(filename: "blender/source/blender/blenkernel/BKE_idprop.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!4195 = distinct !DICompositeType(tag: DW_TAG_union_type, name: "IDPropertyTemplate", file: !4194, line: 38, size: 128, elements: !4196)
!4196 = !{!4197, !4198, !4199, !4200, !4206, !4207, !4212}
!4197 = !DIDerivedType(tag: DW_TAG_member, name: "i", scope: !4195, file: !4194, line: 39, baseType: !34, size: 32)
!4198 = !DIDerivedType(tag: DW_TAG_member, name: "f", scope: !4195, file: !4194, line: 40, baseType: !120, size: 32)
!4199 = !DIDerivedType(tag: DW_TAG_member, name: "d", scope: !4195, file: !4194, line: 41, baseType: !104, size: 64)
!4200 = !DIDerivedType(tag: DW_TAG_member, name: "string", scope: !4195, file: !4194, line: 46, baseType: !4201, size: 128)
!4201 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4195, file: !4194, line: 42, size: 128, elements: !4202)
!4202 = !{!4203, !4204, !4205}
!4203 = !DIDerivedType(tag: DW_TAG_member, name: "str", scope: !4201, file: !4194, line: 43, baseType: !385, size: 64)
!4204 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !4201, file: !4194, line: 44, baseType: !31, size: 16, offset: 64)
!4205 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !4201, file: !4194, line: 45, baseType: !16, size: 8, offset: 80)
!4206 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !4195, file: !4194, line: 47, baseType: !243, size: 64)
!4207 = !DIDerivedType(tag: DW_TAG_member, name: "array", scope: !4195, file: !4194, line: 51, baseType: !4208, size: 32)
!4208 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4195, file: !4194, line: 48, size: 32, elements: !4209)
!4209 = !{!4210, !4211}
!4210 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !4208, file: !4194, line: 49, baseType: !31, size: 16)
!4211 = !DIDerivedType(tag: DW_TAG_member, name: "len", scope: !4208, file: !4194, line: 50, baseType: !31, size: 16, offset: 16)
!4212 = !DIDerivedType(tag: DW_TAG_member, name: "matrix_or_vector", scope: !4195, file: !4194, line: 55, baseType: !4213, size: 128)
!4213 = distinct !DICompositeType(tag: DW_TAG_structure_type, scope: !4195, file: !4194, line: 52, size: 128, elements: !4214)
!4214 = !{!4215, !4216}
!4215 = !DIDerivedType(tag: DW_TAG_member, name: "matvec_size", scope: !4213, file: !4194, line: 53, baseType: !34, size: 32)
!4216 = !DIDerivedType(tag: DW_TAG_member, name: "example", scope: !4213, file: !4194, line: 54, baseType: !2455, size: 64, offset: 64)
!4217 = !DILocation(line: 929, column: 22, scope: !4192)
!4218 = !DILocalVariable(name: "replaceprops", scope: !4192, file: !3, line: 930, type: !20)
!4219 = !DILocation(line: 930, column: 15, scope: !4192)
!4220 = !DILocation(line: 930, column: 30, scope: !4192)
!4221 = !DILocalVariable(name: "iterprop", scope: !4192, file: !3, line: 931, type: !142)
!4222 = !DILocation(line: 931, column: 16, scope: !4192)
!4223 = !DILocation(line: 933, column: 9, scope: !4224)
!4224 = distinct !DILexicalBlock(scope: !4192, file: !3, line: 933, column: 7)
!4225 = !DILocation(line: 933, column: 15, scope: !4224)
!4226 = !DILocation(line: 933, column: 7, scope: !4192)
!4227 = !DILocation(line: 934, column: 67, scope: !4228)
!4228 = distinct !DILexicalBlock(scope: !4224, file: !3, line: 933, column: 29)
!4229 = !DILocation(line: 934, column: 71, scope: !4228)
!4230 = !DILocation(line: 934, column: 77, scope: !4228)
!4231 = !DILocation(line: 934, column: 4, scope: !4228)
!4232 = !DILocation(line: 935, column: 3, scope: !4228)
!4233 = !DILocation(line: 937, column: 43, scope: !4192)
!4234 = !DILocation(line: 937, column: 47, scope: !4192)
!4235 = !DILocation(line: 937, column: 53, scope: !4192)
!4236 = !DILocation(line: 937, column: 14, scope: !4192)
!4237 = !DILocation(line: 937, column: 12, scope: !4192)
!4238 = !DILocalVariable(name: "rna_macro_iter", scope: !4239, file: !3, line: 939, type: !4240)
!4239 = distinct !DILexicalBlock(scope: !4192, file: !3, line: 939, column: 3)
!4240 = !DIDerivedType(tag: DW_TAG_typedef, name: "CollectionPropertyIterator", file: !144, line: 279, baseType: !4241)
!4241 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "CollectionPropertyIterator", file: !144, line: 264, size: 1088, elements: !4242)
!4242 = !{!4243, !4244, !4245, !4247, !4277, !4278, !4279, !4280}
!4243 = !DIDerivedType(tag: DW_TAG_member, name: "parent", scope: !4241, file: !144, line: 266, baseType: !1581, size: 192)
!4244 = !DIDerivedType(tag: DW_TAG_member, name: "builtin_parent", scope: !4241, file: !144, line: 267, baseType: !1581, size: 192, offset: 192)
!4245 = !DIDerivedType(tag: DW_TAG_member, name: "prop", scope: !4241, file: !144, line: 268, baseType: !4246, size: 64, offset: 384)
!4246 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !145, size: 64)
!4247 = !DIDerivedType(tag: DW_TAG_member, name: "internal", scope: !4241, file: !144, line: 272, baseType: !4248, size: 320, offset: 448)
!4248 = distinct !DICompositeType(tag: DW_TAG_union_type, scope: !4241, file: !144, line: 269, size: 320, elements: !4249)
!4249 = !{!4250, !4265}
!4250 = !DIDerivedType(tag: DW_TAG_member, name: "array", scope: !4248, file: !144, line: 270, baseType: !4251, size: 320)
!4251 = !DIDerivedType(tag: DW_TAG_typedef, name: "ArrayIterator", file: !144, line: 262, baseType: !4252)
!4252 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ArrayIterator", file: !144, line: 249, size: 320, elements: !4253)
!4253 = !{!4254, !4255, !4256, !4257, !4258, !4259}
!4254 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4252, file: !144, line: 250, baseType: !385, size: 64)
!4255 = !DIDerivedType(tag: DW_TAG_member, name: "endptr", scope: !4252, file: !144, line: 251, baseType: !385, size: 64, offset: 64)
!4256 = !DIDerivedType(tag: DW_TAG_member, name: "free_ptr", scope: !4252, file: !144, line: 252, baseType: !40, size: 64, offset: 128)
!4257 = !DIDerivedType(tag: DW_TAG_member, name: "itemsize", scope: !4252, file: !144, line: 253, baseType: !34, size: 32, offset: 192)
!4258 = !DIDerivedType(tag: DW_TAG_member, name: "length", scope: !4252, file: !144, line: 257, baseType: !34, size: 32, offset: 224)
!4259 = !DIDerivedType(tag: DW_TAG_member, name: "skip", scope: !4252, file: !144, line: 261, baseType: !4260, size: 64, offset: 256)
!4260 = !DIDerivedType(tag: DW_TAG_typedef, name: "IteratorSkipFunc", file: !144, line: 241, baseType: !4261)
!4261 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4262, size: 64)
!4262 = !DISubroutineType(types: !4263)
!4263 = !{!34, !4264, !40}
!4264 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4241, size: 64)
!4265 = !DIDerivedType(tag: DW_TAG_member, name: "listbase", scope: !4248, file: !144, line: 271, baseType: !4266, size: 192)
!4266 = !DIDerivedType(tag: DW_TAG_typedef, name: "ListBaseIterator", file: !144, line: 247, baseType: !4267)
!4267 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "ListBaseIterator", file: !144, line: 243, size: 192, elements: !4268)
!4268 = !{!4269, !4275, !4276}
!4269 = !DIDerivedType(tag: DW_TAG_member, name: "link", scope: !4267, file: !144, line: 244, baseType: !4270, size: 64)
!4270 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4271, size: 64)
!4271 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "Link", file: !43, line: 57, size: 128, elements: !4272)
!4272 = !{!4273, !4274}
!4273 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !4271, file: !43, line: 58, baseType: !4270, size: 64)
!4274 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !4271, file: !43, line: 58, baseType: !4270, size: 64, offset: 64)
!4275 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !4267, file: !144, line: 245, baseType: !34, size: 32, offset: 64)
!4276 = !DIDerivedType(tag: DW_TAG_member, name: "skip", scope: !4267, file: !144, line: 246, baseType: !4260, size: 64, offset: 128)
!4277 = !DIDerivedType(tag: DW_TAG_member, name: "idprop", scope: !4241, file: !144, line: 273, baseType: !34, size: 32, offset: 768)
!4278 = !DIDerivedType(tag: DW_TAG_member, name: "level", scope: !4241, file: !144, line: 274, baseType: !34, size: 32, offset: 800)
!4279 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !4241, file: !144, line: 277, baseType: !1581, size: 192, offset: 832)
!4280 = !DIDerivedType(tag: DW_TAG_member, name: "valid", scope: !4241, file: !144, line: 278, baseType: !34, size: 32, offset: 1024)
!4281 = !DILocation(line: 939, column: 3, scope: !4239)
!4282 = !DILocation(line: 939, column: 3, scope: !4283)
!4283 = distinct !DILexicalBlock(scope: !4239, file: !3, line: 939, column: 3)
!4284 = !DILocation(line: 939, column: 3, scope: !4285)
!4285 = distinct !DILexicalBlock(scope: !4283, file: !3, line: 939, column: 3)
!4286 = !DILocalVariable(name: "itemptr", scope: !4287, file: !3, line: 939, type: !1581)
!4287 = distinct !DILexicalBlock(scope: !4285, file: !3, line: 939, column: 3)
!4288 = !DILocation(line: 939, column: 3, scope: !4287)
!4289 = !DILocalVariable(name: "prop", scope: !4290, file: !3, line: 941, type: !142)
!4290 = distinct !DILexicalBlock(scope: !4287, file: !3, line: 940, column: 3)
!4291 = !DILocation(line: 941, column: 17, scope: !4290)
!4292 = !DILocation(line: 941, column: 32, scope: !4290)
!4293 = !DILocation(line: 941, column: 24, scope: !4290)
!4294 = !DILocation(line: 942, column: 27, scope: !4295)
!4295 = distinct !DILexicalBlock(scope: !4290, file: !3, line: 942, column: 8)
!4296 = !DILocation(line: 942, column: 9, scope: !4295)
!4297 = !DILocation(line: 942, column: 33, scope: !4295)
!4298 = !DILocation(line: 942, column: 51, scope: !4295)
!4299 = !DILocation(line: 942, column: 8, scope: !4290)
!4300 = !DILocation(line: 943, column: 30, scope: !4301)
!4301 = distinct !DILexicalBlock(scope: !4302, file: !3, line: 943, column: 9)
!4302 = distinct !DILexicalBlock(scope: !4295, file: !3, line: 942, column: 57)
!4303 = !DILocation(line: 943, column: 34, scope: !4301)
!4304 = !DILocation(line: 943, column: 39, scope: !4301)
!4305 = !DILocation(line: 943, column: 10, scope: !4301)
!4306 = !DILocation(line: 943, column: 9, scope: !4302)
!4307 = !DILocalVariable(name: "identifier", scope: !4308, file: !3, line: 944, type: !58)
!4308 = distinct !DILexicalBlock(scope: !4301, file: !3, line: 943, column: 46)
!4309 = !DILocation(line: 944, column: 18, scope: !4308)
!4310 = !DILocation(line: 944, column: 55, scope: !4308)
!4311 = !DILocation(line: 944, column: 31, scope: !4308)
!4312 = !DILocalVariable(name: "idp_src", scope: !4308, file: !3, line: 945, type: !20)
!4313 = !DILocation(line: 945, column: 18, scope: !4308)
!4314 = !DILocation(line: 945, column: 53, scope: !4308)
!4315 = !DILocation(line: 945, column: 57, scope: !4308)
!4316 = !DILocation(line: 945, column: 63, scope: !4308)
!4317 = !DILocation(line: 945, column: 80, scope: !4308)
!4318 = !DILocation(line: 945, column: 28, scope: !4308)
!4319 = !DILocation(line: 946, column: 10, scope: !4320)
!4320 = distinct !DILexicalBlock(scope: !4308, file: !3, line: 946, column: 10)
!4321 = !DILocation(line: 946, column: 10, scope: !4308)
!4322 = !DILocalVariable(name: "idp_dst", scope: !4323, file: !3, line: 947, type: !20)
!4323 = distinct !DILexicalBlock(scope: !4320, file: !3, line: 946, column: 19)
!4324 = !DILocation(line: 947, column: 19, scope: !4323)
!4325 = !DILocation(line: 947, column: 46, scope: !4323)
!4326 = !DILocation(line: 947, column: 29, scope: !4323)
!4327 = !DILocation(line: 951, column: 7, scope: !4323)
!4328 = !DILocation(line: 951, column: 16, scope: !4323)
!4329 = !DILocation(line: 951, column: 21, scope: !4323)
!4330 = !DILocation(line: 955, column: 22, scope: !4323)
!4331 = !DILocation(line: 955, column: 36, scope: !4323)
!4332 = !DILocation(line: 955, column: 7, scope: !4323)
!4333 = !DILocation(line: 956, column: 15, scope: !4323)
!4334 = !DILocation(line: 957, column: 6, scope: !4323)
!4335 = !DILocation(line: 958, column: 5, scope: !4308)
!4336 = !DILocation(line: 959, column: 4, scope: !4302)
!4337 = !DILocation(line: 961, column: 3, scope: !4287)
!4338 = distinct !{!4338, !4282, !4339}
!4339 = !DILocation(line: 961, column: 3, scope: !4283)
!4340 = !DILocation(line: 961, column: 3, scope: !4239)
!4341 = !DILocation(line: 963, column: 18, scope: !4192)
!4342 = !DILocation(line: 963, column: 22, scope: !4192)
!4343 = !DILocation(line: 963, column: 34, scope: !4192)
!4344 = !DILocation(line: 963, column: 3, scope: !4192)
!4345 = !DILocation(line: 964, column: 20, scope: !4192)
!4346 = !DILocation(line: 964, column: 3, scope: !4192)
!4347 = !DILocation(line: 965, column: 3, scope: !4192)
!4348 = !DILocation(line: 965, column: 13, scope: !4192)
!4349 = !DILocation(line: 966, column: 2, scope: !4192)
!4350 = !DILocation(line: 968, column: 9, scope: !4179)
!4351 = !DILocation(line: 968, column: 2, scope: !4179)
!4352 = distinct !DISubprogram(name: "WM_operator_last_properties_store", scope: !3, file: !3, line: 971, type: !4180, scopeLine: 972, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!4353 = !DILocalVariable(name: "op", arg: 1, scope: !4352, file: !3, line: 971, type: !6)
!4354 = !DILocation(line: 971, column: 52, scope: !4352)
!4355 = !DILocation(line: 973, column: 6, scope: !4356)
!4356 = distinct !DILexicalBlock(scope: !4352, file: !3, line: 973, column: 6)
!4357 = !DILocation(line: 973, column: 10, scope: !4356)
!4358 = !DILocation(line: 973, column: 16, scope: !4356)
!4359 = !DILocation(line: 973, column: 6, scope: !4352)
!4360 = !DILocation(line: 974, column: 20, scope: !4361)
!4361 = distinct !DILexicalBlock(scope: !4356, file: !3, line: 973, column: 33)
!4362 = !DILocation(line: 974, column: 24, scope: !4361)
!4363 = !DILocation(line: 974, column: 30, scope: !4361)
!4364 = !DILocation(line: 974, column: 3, scope: !4361)
!4365 = !DILocation(line: 975, column: 3, scope: !4361)
!4366 = !DILocation(line: 975, column: 13, scope: !4361)
!4367 = !DILocation(line: 975, column: 17, scope: !4361)
!4368 = !DILocation(line: 975, column: 23, scope: !4361)
!4369 = !DILocation(line: 976, column: 3, scope: !4361)
!4370 = !DILocation(line: 976, column: 7, scope: !4361)
!4371 = !DILocation(line: 976, column: 13, scope: !4361)
!4372 = !DILocation(line: 976, column: 29, scope: !4361)
!4373 = !DILocation(line: 977, column: 2, scope: !4361)
!4374 = !DILocation(line: 979, column: 6, scope: !4375)
!4375 = distinct !DILexicalBlock(scope: !4352, file: !3, line: 979, column: 6)
!4376 = !DILocation(line: 979, column: 10, scope: !4375)
!4377 = !DILocation(line: 979, column: 6, scope: !4352)
!4378 = !DILocation(line: 980, column: 9, scope: !4379)
!4379 = distinct !DILexicalBlock(scope: !4380, file: !3, line: 980, column: 7)
!4380 = distinct !DILexicalBlock(scope: !4375, file: !3, line: 979, column: 22)
!4381 = !DILocation(line: 980, column: 15, scope: !4379)
!4382 = !DILocation(line: 980, column: 7, scope: !4380)
!4383 = !DILocation(line: 981, column: 58, scope: !4384)
!4384 = distinct !DILexicalBlock(scope: !4379, file: !3, line: 980, column: 29)
!4385 = !DILocation(line: 981, column: 62, scope: !4384)
!4386 = !DILocation(line: 981, column: 68, scope: !4384)
!4387 = !DILocation(line: 981, column: 4, scope: !4384)
!4388 = !DILocation(line: 982, column: 3, scope: !4384)
!4389 = !DILocation(line: 983, column: 48, scope: !4380)
!4390 = !DILocation(line: 983, column: 52, scope: !4380)
!4391 = !DILocation(line: 983, column: 31, scope: !4380)
!4392 = !DILocation(line: 983, column: 3, scope: !4380)
!4393 = !DILocation(line: 983, column: 7, scope: !4380)
!4394 = !DILocation(line: 983, column: 13, scope: !4380)
!4395 = !DILocation(line: 983, column: 29, scope: !4380)
!4396 = !DILocation(line: 984, column: 3, scope: !4380)
!4397 = !DILocation(line: 987, column: 3, scope: !4398)
!4398 = distinct !DILexicalBlock(scope: !4375, file: !3, line: 986, column: 7)
!4399 = !DILocation(line: 989, column: 1, scope: !4352)
!4400 = distinct !DISubprogram(name: "WM_operator_name_call_ptr", scope: !3, file: !3, line: 1271, type: !4401, scopeLine: 1272, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!4401 = !DISubroutineType(types: !4402)
!4402 = !{!34, !2402, !1578, !31, !1580}
!4403 = !DILocalVariable(name: "C", arg: 1, scope: !4400, file: !3, line: 1271, type: !2402)
!4404 = !DILocation(line: 1271, column: 41, scope: !4400)
!4405 = !DILocalVariable(name: "ot", arg: 2, scope: !4400, file: !3, line: 1271, type: !1578)
!4406 = !DILocation(line: 1271, column: 60, scope: !4400)
!4407 = !DILocalVariable(name: "context", arg: 3, scope: !4400, file: !3, line: 1271, type: !31)
!4408 = !DILocation(line: 1271, column: 70, scope: !4400)
!4409 = !DILocalVariable(name: "properties", arg: 4, scope: !4400, file: !3, line: 1271, type: !1580)
!4410 = !DILocation(line: 1271, column: 91, scope: !4400)
!4411 = !DILocation(line: 1274, column: 35, scope: !4400)
!4412 = !DILocation(line: 1274, column: 38, scope: !4400)
!4413 = !DILocation(line: 1274, column: 42, scope: !4400)
!4414 = !DILocation(line: 1274, column: 60, scope: !4400)
!4415 = !DILocation(line: 1274, column: 9, scope: !4400)
!4416 = !DILocation(line: 1274, column: 2, scope: !4400)
!4417 = distinct !DISubprogram(name: "WM_operator_name_call", scope: !3, file: !3, line: 1276, type: !4418, scopeLine: 1277, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!4418 = !DISubroutineType(types: !4419)
!4419 = !{!34, !2402, !58, !31, !1580}
!4420 = !DILocalVariable(name: "C", arg: 1, scope: !4417, file: !3, line: 1276, type: !2402)
!4421 = !DILocation(line: 1276, column: 37, scope: !4417)
!4422 = !DILocalVariable(name: "opstring", arg: 2, scope: !4417, file: !3, line: 1276, type: !58)
!4423 = !DILocation(line: 1276, column: 52, scope: !4417)
!4424 = !DILocalVariable(name: "context", arg: 3, scope: !4417, file: !3, line: 1276, type: !31)
!4425 = !DILocation(line: 1276, column: 68, scope: !4417)
!4426 = !DILocalVariable(name: "properties", arg: 4, scope: !4417, file: !3, line: 1276, type: !1580)
!4427 = !DILocation(line: 1276, column: 89, scope: !4417)
!4428 = !DILocalVariable(name: "ot", scope: !4417, file: !3, line: 1278, type: !1578)
!4429 = !DILocation(line: 1278, column: 18, scope: !4417)
!4430 = !DILocation(line: 1278, column: 44, scope: !4417)
!4431 = !DILocation(line: 1278, column: 23, scope: !4417)
!4432 = !DILocation(line: 1279, column: 6, scope: !4433)
!4433 = distinct !DILexicalBlock(scope: !4417, file: !3, line: 1279, column: 6)
!4434 = !DILocation(line: 1279, column: 6, scope: !4417)
!4435 = !DILocation(line: 1280, column: 36, scope: !4436)
!4436 = distinct !DILexicalBlock(scope: !4433, file: !3, line: 1279, column: 10)
!4437 = !DILocation(line: 1280, column: 39, scope: !4436)
!4438 = !DILocation(line: 1280, column: 43, scope: !4436)
!4439 = !DILocation(line: 1280, column: 52, scope: !4436)
!4440 = !DILocation(line: 1280, column: 10, scope: !4436)
!4441 = !DILocation(line: 1280, column: 3, scope: !4436)
!4442 = !DILocation(line: 1283, column: 2, scope: !4417)
!4443 = !DILocation(line: 1284, column: 1, scope: !4417)
!4444 = distinct !DISubprogram(name: "WM_operator_call_py", scope: !3, file: !3, line: 1291, type: !4445, scopeLine: 1293, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!4445 = !DISubroutineType(types: !4446)
!4446 = !{!34, !2402, !1578, !31, !1580, !1582, !3587}
!4447 = !DILocalVariable(name: "C", arg: 1, scope: !4444, file: !3, line: 1291, type: !2402)
!4448 = !DILocation(line: 1291, column: 35, scope: !4444)
!4449 = !DILocalVariable(name: "ot", arg: 2, scope: !4444, file: !3, line: 1291, type: !1578)
!4450 = !DILocation(line: 1291, column: 54, scope: !4444)
!4451 = !DILocalVariable(name: "context", arg: 3, scope: !4444, file: !3, line: 1291, type: !31)
!4452 = !DILocation(line: 1291, column: 64, scope: !4444)
!4453 = !DILocalVariable(name: "properties", arg: 4, scope: !4444, file: !3, line: 1292, type: !1580)
!4454 = !DILocation(line: 1292, column: 37, scope: !4444)
!4455 = !DILocalVariable(name: "reports", arg: 5, scope: !4444, file: !3, line: 1292, type: !1582)
!4456 = !DILocation(line: 1292, column: 61, scope: !4444)
!4457 = !DILocalVariable(name: "is_undo", arg: 6, scope: !4444, file: !3, line: 1292, type: !3587)
!4458 = !DILocation(line: 1292, column: 81, scope: !4444)
!4459 = !DILocalVariable(name: "retval", scope: !4444, file: !3, line: 1294, type: !34)
!4460 = !DILocation(line: 1294, column: 6, scope: !4444)
!4461 = !DILocalVariable(name: "wm", scope: !4444, file: !3, line: 1319, type: !1543)
!4462 = !DILocation(line: 1319, column: 19, scope: !4444)
!4463 = !DILocation(line: 1319, column: 39, scope: !4444)
!4464 = !DILocation(line: 1319, column: 24, scope: !4444)
!4465 = !DILocation(line: 1320, column: 7, scope: !4466)
!4466 = distinct !DILexicalBlock(scope: !4444, file: !3, line: 1320, column: 6)
!4467 = !DILocation(line: 1320, column: 15, scope: !4466)
!4468 = !DILocation(line: 1320, column: 18, scope: !4466)
!4469 = !DILocation(line: 1320, column: 6, scope: !4444)
!4470 = !DILocation(line: 1320, column: 22, scope: !4466)
!4471 = !DILocation(line: 1320, column: 26, scope: !4466)
!4472 = !DILocation(line: 1320, column: 39, scope: !4466)
!4473 = !DILocation(line: 1322, column: 37, scope: !4444)
!4474 = !DILocation(line: 1322, column: 40, scope: !4444)
!4475 = !DILocation(line: 1322, column: 44, scope: !4444)
!4476 = !DILocation(line: 1322, column: 56, scope: !4444)
!4477 = !DILocation(line: 1322, column: 65, scope: !4444)
!4478 = !DILocation(line: 1322, column: 11, scope: !4444)
!4479 = !DILocation(line: 1322, column: 9, scope: !4444)
!4480 = !DILocation(line: 1324, column: 7, scope: !4481)
!4481 = distinct !DILexicalBlock(scope: !4444, file: !3, line: 1324, column: 6)
!4482 = !DILocation(line: 1324, column: 15, scope: !4481)
!4483 = !DILocation(line: 1324, column: 18, scope: !4481)
!4484 = !DILocation(line: 1324, column: 21, scope: !4481)
!4485 = !DILocation(line: 1324, column: 25, scope: !4481)
!4486 = !DILocation(line: 1324, column: 46, scope: !4481)
!4487 = !DILocation(line: 1324, column: 31, scope: !4481)
!4488 = !DILocation(line: 1324, column: 28, scope: !4481)
!4489 = !DILocation(line: 1324, column: 6, scope: !4444)
!4490 = !DILocation(line: 1324, column: 51, scope: !4481)
!4491 = !DILocation(line: 1324, column: 55, scope: !4481)
!4492 = !DILocation(line: 1324, column: 68, scope: !4481)
!4493 = !DILocation(line: 1326, column: 9, scope: !4444)
!4494 = !DILocation(line: 1326, column: 2, scope: !4444)
!4495 = distinct !DISubprogram(name: "wm_event_free_handler", scope: !3, file: !3, line: 1333, type: !4496, scopeLine: 1334, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!4496 = !DISubroutineType(types: !4497)
!4497 = !{null, !2404}
!4498 = !DILocalVariable(name: "handler", arg: 1, scope: !4495, file: !3, line: 1333, type: !2404)
!4499 = !DILocation(line: 1333, column: 44, scope: !4495)
!4500 = !DILocation(line: 1335, column: 2, scope: !4495)
!4501 = !DILocation(line: 1335, column: 12, scope: !4495)
!4502 = !DILocation(line: 1336, column: 1, scope: !4495)
!4503 = distinct !DISubprogram(name: "WM_event_remove_handlers", scope: !3, file: !3, line: 1373, type: !4504, scopeLine: 1374, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!4504 = !DISubroutineType(types: !4505)
!4505 = !{null, !2402, !401}
!4506 = !DILocalVariable(name: "C", arg: 1, scope: !4503, file: !3, line: 1373, type: !2402)
!4507 = !DILocation(line: 1373, column: 41, scope: !4503)
!4508 = !DILocalVariable(name: "handlers", arg: 2, scope: !4503, file: !3, line: 1373, type: !401)
!4509 = !DILocation(line: 1373, column: 54, scope: !4503)
!4510 = !DILocalVariable(name: "handler", scope: !4503, file: !3, line: 1375, type: !2404)
!4511 = !DILocation(line: 1375, column: 18, scope: !4503)
!4512 = !DILocalVariable(name: "wm", scope: !4503, file: !3, line: 1376, type: !1543)
!4513 = !DILocation(line: 1376, column: 19, scope: !4503)
!4514 = !DILocation(line: 1376, column: 39, scope: !4503)
!4515 = !DILocation(line: 1376, column: 24, scope: !4503)
!4516 = !DILocation(line: 1379, column: 2, scope: !4503)
!4517 = !DILocation(line: 1379, column: 32, scope: !4503)
!4518 = !DILocation(line: 1379, column: 20, scope: !4503)
!4519 = !DILocation(line: 1379, column: 18, scope: !4503)
!4520 = !DILocation(line: 1380, column: 7, scope: !4521)
!4521 = distinct !DILexicalBlock(scope: !4522, file: !3, line: 1380, column: 7)
!4522 = distinct !DILexicalBlock(scope: !4503, file: !3, line: 1379, column: 44)
!4523 = !DILocation(line: 1380, column: 16, scope: !4521)
!4524 = !DILocation(line: 1380, column: 7, scope: !4522)
!4525 = !DILocation(line: 1381, column: 8, scope: !4526)
!4526 = distinct !DILexicalBlock(scope: !4527, file: !3, line: 1381, column: 8)
!4527 = distinct !DILexicalBlock(scope: !4521, file: !3, line: 1380, column: 20)
!4528 = !DILocation(line: 1381, column: 17, scope: !4526)
!4529 = !DILocation(line: 1381, column: 21, scope: !4526)
!4530 = !DILocation(line: 1381, column: 27, scope: !4526)
!4531 = !DILocation(line: 1381, column: 8, scope: !4527)
!4532 = !DILocalVariable(name: "area", scope: !4533, file: !3, line: 1382, type: !2201)
!4533 = distinct !DILexicalBlock(scope: !4526, file: !3, line: 1381, column: 35)
!4534 = !DILocation(line: 1382, column: 14, scope: !4533)
!4535 = !DILocation(line: 1382, column: 33, scope: !4533)
!4536 = !DILocation(line: 1382, column: 21, scope: !4533)
!4537 = !DILocalVariable(name: "region", scope: !4533, file: !3, line: 1383, type: !2737)
!4538 = !DILocation(line: 1383, column: 14, scope: !4533)
!4539 = !DILocation(line: 1383, column: 37, scope: !4533)
!4540 = !DILocation(line: 1383, column: 23, scope: !4533)
!4541 = !DILocation(line: 1385, column: 27, scope: !4533)
!4542 = !DILocation(line: 1385, column: 30, scope: !4533)
!4543 = !DILocation(line: 1385, column: 5, scope: !4533)
!4544 = !DILocation(line: 1387, column: 9, scope: !4545)
!4545 = distinct !DILexicalBlock(scope: !4533, file: !3, line: 1387, column: 9)
!4546 = !DILocation(line: 1387, column: 18, scope: !4545)
!4547 = !DILocation(line: 1387, column: 22, scope: !4545)
!4548 = !DILocation(line: 1387, column: 28, scope: !4545)
!4549 = !DILocation(line: 1387, column: 33, scope: !4545)
!4550 = !DILocation(line: 1387, column: 9, scope: !4533)
!4551 = !DILocation(line: 1388, column: 6, scope: !4545)
!4552 = !DILocation(line: 1388, column: 10, scope: !4545)
!4553 = !DILocation(line: 1388, column: 23, scope: !4545)
!4554 = !DILocation(line: 1390, column: 5, scope: !4533)
!4555 = !DILocation(line: 1390, column: 14, scope: !4533)
!4556 = !DILocation(line: 1390, column: 18, scope: !4533)
!4557 = !DILocation(line: 1390, column: 24, scope: !4533)
!4558 = !DILocation(line: 1390, column: 31, scope: !4533)
!4559 = !DILocation(line: 1390, column: 34, scope: !4533)
!4560 = !DILocation(line: 1390, column: 43, scope: !4533)
!4561 = !DILocation(line: 1392, column: 9, scope: !4562)
!4562 = distinct !DILexicalBlock(scope: !4533, file: !3, line: 1392, column: 9)
!4563 = !DILocation(line: 1392, column: 18, scope: !4562)
!4564 = !DILocation(line: 1392, column: 22, scope: !4562)
!4565 = !DILocation(line: 1392, column: 28, scope: !4562)
!4566 = !DILocation(line: 1392, column: 33, scope: !4562)
!4567 = !DILocation(line: 1392, column: 9, scope: !4533)
!4568 = !DILocation(line: 1393, column: 6, scope: !4562)
!4569 = !DILocation(line: 1393, column: 10, scope: !4562)
!4570 = !DILocation(line: 1393, column: 23, scope: !4562)
!4571 = !DILocation(line: 1395, column: 21, scope: !4533)
!4572 = !DILocation(line: 1395, column: 24, scope: !4533)
!4573 = !DILocation(line: 1395, column: 5, scope: !4533)
!4574 = !DILocation(line: 1396, column: 23, scope: !4533)
!4575 = !DILocation(line: 1396, column: 26, scope: !4533)
!4576 = !DILocation(line: 1396, column: 5, scope: !4533)
!4577 = !DILocation(line: 1397, column: 4, scope: !4533)
!4578 = !DILocation(line: 1399, column: 41, scope: !4527)
!4579 = !DILocation(line: 1399, column: 27, scope: !4527)
!4580 = !DILocation(line: 1399, column: 4, scope: !4527)
!4581 = !DILocation(line: 1400, column: 21, scope: !4527)
!4582 = !DILocation(line: 1400, column: 30, scope: !4527)
!4583 = !DILocation(line: 1400, column: 4, scope: !4527)
!4584 = !DILocation(line: 1401, column: 3, scope: !4527)
!4585 = !DILocation(line: 1402, column: 12, scope: !4586)
!4586 = distinct !DILexicalBlock(scope: !4521, file: !3, line: 1402, column: 12)
!4587 = !DILocation(line: 1402, column: 21, scope: !4586)
!4588 = !DILocation(line: 1402, column: 12, scope: !4521)
!4589 = !DILocalVariable(name: "area", scope: !4590, file: !3, line: 1403, type: !2201)
!4590 = distinct !DILexicalBlock(scope: !4586, file: !3, line: 1402, column: 32)
!4591 = !DILocation(line: 1403, column: 13, scope: !4590)
!4592 = !DILocation(line: 1403, column: 32, scope: !4590)
!4593 = !DILocation(line: 1403, column: 20, scope: !4590)
!4594 = !DILocalVariable(name: "region", scope: !4590, file: !3, line: 1404, type: !2737)
!4595 = !DILocation(line: 1404, column: 13, scope: !4590)
!4596 = !DILocation(line: 1404, column: 36, scope: !4590)
!4597 = !DILocation(line: 1404, column: 22, scope: !4590)
!4598 = !DILocalVariable(name: "menu", scope: !4590, file: !3, line: 1405, type: !2737)
!4599 = !DILocation(line: 1405, column: 13, scope: !4590)
!4600 = !DILocation(line: 1405, column: 32, scope: !4590)
!4601 = !DILocation(line: 1405, column: 20, scope: !4590)
!4602 = !DILocation(line: 1407, column: 8, scope: !4603)
!4603 = distinct !DILexicalBlock(scope: !4590, file: !3, line: 1407, column: 8)
!4604 = !DILocation(line: 1407, column: 17, scope: !4603)
!4605 = !DILocation(line: 1407, column: 8, scope: !4590)
!4606 = !DILocation(line: 1407, column: 42, scope: !4603)
!4607 = !DILocation(line: 1407, column: 45, scope: !4603)
!4608 = !DILocation(line: 1407, column: 54, scope: !4603)
!4609 = !DILocation(line: 1407, column: 26, scope: !4603)
!4610 = !DILocation(line: 1408, column: 8, scope: !4611)
!4611 = distinct !DILexicalBlock(scope: !4590, file: !3, line: 1408, column: 8)
!4612 = !DILocation(line: 1408, column: 17, scope: !4611)
!4613 = !DILocation(line: 1408, column: 8, scope: !4590)
!4614 = !DILocation(line: 1408, column: 46, scope: !4611)
!4615 = !DILocation(line: 1408, column: 49, scope: !4611)
!4616 = !DILocation(line: 1408, column: 58, scope: !4611)
!4617 = !DILocation(line: 1408, column: 28, scope: !4611)
!4618 = !DILocation(line: 1409, column: 8, scope: !4619)
!4619 = distinct !DILexicalBlock(scope: !4590, file: !3, line: 1409, column: 8)
!4620 = !DILocation(line: 1409, column: 17, scope: !4619)
!4621 = !DILocation(line: 1409, column: 8, scope: !4590)
!4622 = !DILocation(line: 1409, column: 42, scope: !4619)
!4623 = !DILocation(line: 1409, column: 45, scope: !4619)
!4624 = !DILocation(line: 1409, column: 54, scope: !4619)
!4625 = !DILocation(line: 1409, column: 26, scope: !4619)
!4626 = !DILocation(line: 1411, column: 4, scope: !4590)
!4627 = !DILocation(line: 1411, column: 13, scope: !4590)
!4628 = !DILocation(line: 1411, column: 23, scope: !4590)
!4629 = !DILocation(line: 1411, column: 26, scope: !4590)
!4630 = !DILocation(line: 1411, column: 35, scope: !4590)
!4631 = !DILocation(line: 1413, column: 20, scope: !4590)
!4632 = !DILocation(line: 1413, column: 23, scope: !4590)
!4633 = !DILocation(line: 1413, column: 4, scope: !4590)
!4634 = !DILocation(line: 1414, column: 22, scope: !4590)
!4635 = !DILocation(line: 1414, column: 25, scope: !4590)
!4636 = !DILocation(line: 1414, column: 4, scope: !4590)
!4637 = !DILocation(line: 1415, column: 20, scope: !4590)
!4638 = !DILocation(line: 1415, column: 23, scope: !4590)
!4639 = !DILocation(line: 1415, column: 4, scope: !4590)
!4640 = !DILocation(line: 1416, column: 3, scope: !4590)
!4641 = !DILocation(line: 1418, column: 25, scope: !4522)
!4642 = !DILocation(line: 1418, column: 3, scope: !4522)
!4643 = distinct !{!4643, !4516, !4644}
!4644 = !DILocation(line: 1419, column: 2, scope: !4503)
!4645 = !DILocation(line: 1420, column: 1, scope: !4503)
!4646 = distinct !DISubprogram(name: "wm_handler_op_context", scope: !3, file: !3, line: 1339, type: !4647, scopeLine: 1340, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!4647 = !DISubroutineType(types: !4648)
!4648 = !{null, !2402, !2404}
!4649 = !DILocalVariable(name: "C", arg: 1, scope: !4646, file: !3, line: 1339, type: !2402)
!4650 = !DILocation(line: 1339, column: 45, scope: !4646)
!4651 = !DILocalVariable(name: "handler", arg: 2, scope: !4646, file: !3, line: 1339, type: !2404)
!4652 = !DILocation(line: 1339, column: 64, scope: !4646)
!4653 = !DILocalVariable(name: "screen", scope: !4646, file: !3, line: 1341, type: !2229)
!4654 = !DILocation(line: 1341, column: 11, scope: !4646)
!4655 = !DILocation(line: 1341, column: 34, scope: !4646)
!4656 = !DILocation(line: 1341, column: 20, scope: !4646)
!4657 = !DILocation(line: 1343, column: 6, scope: !4658)
!4658 = distinct !DILexicalBlock(scope: !4646, file: !3, line: 1343, column: 6)
!4659 = !DILocation(line: 1343, column: 13, scope: !4658)
!4660 = !DILocation(line: 1343, column: 16, scope: !4658)
!4661 = !DILocation(line: 1343, column: 25, scope: !4658)
!4662 = !DILocation(line: 1343, column: 6, scope: !4646)
!4663 = !DILocation(line: 1344, column: 7, scope: !4664)
!4664 = distinct !DILexicalBlock(scope: !4665, file: !3, line: 1344, column: 7)
!4665 = distinct !DILexicalBlock(scope: !4658, file: !3, line: 1343, column: 29)
!4666 = !DILocation(line: 1344, column: 16, scope: !4664)
!4667 = !DILocation(line: 1344, column: 24, scope: !4664)
!4668 = !DILocation(line: 1344, column: 7, scope: !4665)
!4669 = !DILocation(line: 1345, column: 20, scope: !4664)
!4670 = !DILocation(line: 1345, column: 4, scope: !4664)
!4671 = !DILocalVariable(name: "sa", scope: !4672, file: !3, line: 1347, type: !2201)
!4672 = distinct !DILexicalBlock(scope: !4664, file: !3, line: 1346, column: 8)
!4673 = !DILocation(line: 1347, column: 13, scope: !4672)
!4674 = !DILocation(line: 1349, column: 14, scope: !4675)
!4675 = distinct !DILexicalBlock(scope: !4672, file: !3, line: 1349, column: 4)
!4676 = !DILocation(line: 1349, column: 22, scope: !4675)
!4677 = !DILocation(line: 1349, column: 31, scope: !4675)
!4678 = !DILocation(line: 1349, column: 12, scope: !4675)
!4679 = !DILocation(line: 1349, column: 9, scope: !4675)
!4680 = !DILocation(line: 1349, column: 38, scope: !4681)
!4681 = distinct !DILexicalBlock(scope: !4675, file: !3, line: 1349, column: 4)
!4682 = !DILocation(line: 1349, column: 4, scope: !4675)
!4683 = !DILocation(line: 1350, column: 9, scope: !4684)
!4684 = distinct !DILexicalBlock(scope: !4681, file: !3, line: 1350, column: 9)
!4685 = !DILocation(line: 1350, column: 15, scope: !4684)
!4686 = !DILocation(line: 1350, column: 24, scope: !4684)
!4687 = !DILocation(line: 1350, column: 12, scope: !4684)
!4688 = !DILocation(line: 1350, column: 9, scope: !4681)
!4689 = !DILocation(line: 1351, column: 6, scope: !4684)
!4690 = !DILocation(line: 1349, column: 47, scope: !4681)
!4691 = !DILocation(line: 1349, column: 51, scope: !4681)
!4692 = !DILocation(line: 1349, column: 45, scope: !4681)
!4693 = !DILocation(line: 1349, column: 4, scope: !4681)
!4694 = distinct !{!4694, !4682, !4695}
!4695 = !DILocation(line: 1351, column: 6, scope: !4675)
!4696 = !DILocation(line: 1352, column: 8, scope: !4697)
!4697 = distinct !DILexicalBlock(scope: !4672, file: !3, line: 1352, column: 8)
!4698 = !DILocation(line: 1352, column: 11, scope: !4697)
!4699 = !DILocation(line: 1352, column: 8, scope: !4672)
!4700 = !DILocation(line: 1355, column: 9, scope: !4701)
!4701 = distinct !DILexicalBlock(scope: !4702, file: !3, line: 1355, column: 9)
!4702 = distinct !DILexicalBlock(scope: !4697, file: !3, line: 1352, column: 20)
!4703 = !DILocation(line: 1355, column: 18, scope: !4701)
!4704 = !DILocation(line: 1355, column: 21, scope: !4701)
!4705 = !DILocation(line: 1355, column: 9, scope: !4702)
!4706 = !DILocation(line: 1356, column: 64, scope: !4701)
!4707 = !DILocation(line: 1356, column: 73, scope: !4701)
!4708 = !DILocation(line: 1356, column: 77, scope: !4701)
!4709 = !DILocation(line: 1356, column: 83, scope: !4701)
!4710 = !DILocation(line: 1356, column: 6, scope: !4701)
!4711 = !DILocation(line: 1357, column: 4, scope: !4702)
!4712 = !DILocalVariable(name: "ar", scope: !4713, file: !3, line: 1359, type: !2737)
!4713 = distinct !DILexicalBlock(scope: !4697, file: !3, line: 1358, column: 9)
!4714 = !DILocation(line: 1359, column: 14, scope: !4713)
!4715 = !DILocation(line: 1360, column: 21, scope: !4713)
!4716 = !DILocation(line: 1360, column: 24, scope: !4713)
!4717 = !DILocation(line: 1360, column: 5, scope: !4713)
!4718 = !DILocation(line: 1361, column: 15, scope: !4719)
!4719 = distinct !DILexicalBlock(scope: !4713, file: !3, line: 1361, column: 5)
!4720 = !DILocation(line: 1361, column: 19, scope: !4719)
!4721 = !DILocation(line: 1361, column: 30, scope: !4719)
!4722 = !DILocation(line: 1361, column: 13, scope: !4719)
!4723 = !DILocation(line: 1361, column: 10, scope: !4719)
!4724 = !DILocation(line: 1361, column: 37, scope: !4725)
!4725 = distinct !DILexicalBlock(scope: !4719, file: !3, line: 1361, column: 5)
!4726 = !DILocation(line: 1361, column: 5, scope: !4719)
!4727 = !DILocation(line: 1362, column: 10, scope: !4728)
!4728 = distinct !DILexicalBlock(scope: !4725, file: !3, line: 1362, column: 10)
!4729 = !DILocation(line: 1362, column: 16, scope: !4728)
!4730 = !DILocation(line: 1362, column: 25, scope: !4728)
!4731 = !DILocation(line: 1362, column: 13, scope: !4728)
!4732 = !DILocation(line: 1362, column: 10, scope: !4725)
!4733 = !DILocation(line: 1363, column: 7, scope: !4728)
!4734 = !DILocation(line: 1361, column: 46, scope: !4725)
!4735 = !DILocation(line: 1361, column: 50, scope: !4725)
!4736 = !DILocation(line: 1361, column: 44, scope: !4725)
!4737 = !DILocation(line: 1361, column: 5, scope: !4725)
!4738 = distinct !{!4738, !4726, !4739}
!4739 = !DILocation(line: 1363, column: 7, scope: !4719)
!4740 = !DILocation(line: 1365, column: 9, scope: !4741)
!4741 = distinct !DILexicalBlock(scope: !4713, file: !3, line: 1365, column: 9)
!4742 = !DILocation(line: 1365, column: 9, scope: !4713)
!4743 = !DILocation(line: 1366, column: 24, scope: !4741)
!4744 = !DILocation(line: 1366, column: 27, scope: !4741)
!4745 = !DILocation(line: 1366, column: 6, scope: !4741)
!4746 = !DILocation(line: 1369, column: 2, scope: !4665)
!4747 = !DILocation(line: 1370, column: 1, scope: !4646)
!4748 = distinct !DISubprogram(name: "WM_userdef_event_map", scope: !3, file: !3, line: 1423, type: !4749, scopeLine: 1424, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!4749 = !DISubroutineType(types: !4750)
!4750 = !{!34, !34}
!4751 = !DILocalVariable(name: "kmitype", arg: 1, scope: !4748, file: !3, line: 1423, type: !34)
!4752 = !DILocation(line: 1423, column: 30, scope: !4748)
!4753 = !DILocation(line: 1425, column: 10, scope: !4748)
!4754 = !DILocation(line: 1425, column: 2, scope: !4748)
!4755 = !DILocation(line: 1427, column: 14, scope: !4756)
!4756 = distinct !DILexicalBlock(scope: !4748, file: !3, line: 1425, column: 19)
!4757 = !DILocation(line: 1427, column: 19, scope: !4756)
!4758 = !DILocation(line: 1427, column: 11, scope: !4756)
!4759 = !DILocation(line: 1427, column: 4, scope: !4756)
!4760 = !DILocation(line: 1429, column: 14, scope: !4756)
!4761 = !DILocation(line: 1429, column: 19, scope: !4756)
!4762 = !DILocation(line: 1429, column: 11, scope: !4756)
!4763 = !DILocation(line: 1429, column: 4, scope: !4756)
!4764 = !DILocation(line: 1431, column: 14, scope: !4756)
!4765 = !DILocation(line: 1431, column: 19, scope: !4756)
!4766 = !DILocation(line: 1431, column: 11, scope: !4756)
!4767 = !DILocation(line: 1431, column: 4, scope: !4756)
!4768 = !DILocation(line: 1433, column: 14, scope: !4756)
!4769 = !DILocation(line: 1433, column: 19, scope: !4756)
!4770 = !DILocation(line: 1433, column: 11, scope: !4756)
!4771 = !DILocation(line: 1433, column: 4, scope: !4756)
!4772 = !DILocation(line: 1435, column: 14, scope: !4756)
!4773 = !DILocation(line: 1435, column: 21, scope: !4756)
!4774 = !DILocation(line: 1435, column: 11, scope: !4756)
!4775 = !DILocation(line: 1435, column: 4, scope: !4756)
!4776 = !DILocation(line: 1437, column: 14, scope: !4756)
!4777 = !DILocation(line: 1437, column: 21, scope: !4756)
!4778 = !DILocation(line: 1437, column: 11, scope: !4756)
!4779 = !DILocation(line: 1437, column: 4, scope: !4756)
!4780 = !DILocation(line: 1440, column: 9, scope: !4748)
!4781 = !DILocation(line: 1440, column: 2, scope: !4748)
!4782 = !DILocation(line: 1441, column: 1, scope: !4748)
!4783 = distinct !DISubprogram(name: "wm_event_do_handlers", scope: !3, file: !3, line: 2218, type: !3044, scopeLine: 2219, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!4784 = !DILocalVariable(name: "C", arg: 1, scope: !4783, file: !3, line: 2218, type: !2402)
!4785 = !DILocation(line: 2218, column: 37, scope: !4783)
!4786 = !DILocalVariable(name: "wm", scope: !4783, file: !3, line: 2220, type: !1543)
!4787 = !DILocation(line: 2220, column: 19, scope: !4783)
!4788 = !DILocation(line: 2220, column: 39, scope: !4783)
!4789 = !DILocation(line: 2220, column: 24, scope: !4783)
!4790 = !DILocalVariable(name: "win", scope: !4783, file: !3, line: 2221, type: !2567)
!4791 = !DILocation(line: 2221, column: 12, scope: !4783)
!4792 = !DILocation(line: 2224, column: 22, scope: !4783)
!4793 = !DILocation(line: 2224, column: 2, scope: !4783)
!4794 = !DILocation(line: 2226, column: 13, scope: !4795)
!4795 = distinct !DILexicalBlock(scope: !4783, file: !3, line: 2226, column: 2)
!4796 = !DILocation(line: 2226, column: 17, scope: !4795)
!4797 = !DILocation(line: 2226, column: 25, scope: !4795)
!4798 = !DILocation(line: 2226, column: 11, scope: !4795)
!4799 = !DILocation(line: 2226, column: 7, scope: !4795)
!4800 = !DILocation(line: 2226, column: 32, scope: !4801)
!4801 = distinct !DILexicalBlock(scope: !4795, file: !3, line: 2226, column: 2)
!4802 = !DILocation(line: 2226, column: 2, scope: !4795)
!4803 = !DILocalVariable(name: "event", scope: !4804, file: !3, line: 2227, type: !2552)
!4804 = distinct !DILexicalBlock(scope: !4801, file: !3, line: 2226, column: 54)
!4805 = !DILocation(line: 2227, column: 12, scope: !4804)
!4806 = !DILocation(line: 2229, column: 7, scope: !4807)
!4807 = distinct !DILexicalBlock(scope: !4804, file: !3, line: 2229, column: 7)
!4808 = !DILocation(line: 2229, column: 12, scope: !4807)
!4809 = !DILocation(line: 2229, column: 19, scope: !4807)
!4810 = !DILocation(line: 2229, column: 7, scope: !4804)
!4811 = !DILocation(line: 2230, column: 22, scope: !4807)
!4812 = !DILocation(line: 2230, column: 4, scope: !4807)
!4813 = !DILocalVariable(name: "scene", scope: !4814, file: !3, line: 2232, type: !4815)
!4814 = distinct !DILexicalBlock(scope: !4807, file: !3, line: 2231, column: 8)
!4815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !4816, size: 64)
!4816 = !DIDerivedType(tag: DW_TAG_typedef, name: "Scene", file: !279, line: 1299, baseType: !278)
!4817 = !DILocation(line: 2232, column: 11, scope: !4814)
!4818 = !DILocation(line: 2232, column: 19, scope: !4814)
!4819 = !DILocation(line: 2232, column: 24, scope: !4814)
!4820 = !DILocation(line: 2232, column: 32, scope: !4814)
!4821 = !DILocation(line: 2234, column: 8, scope: !4822)
!4822 = distinct !DILexicalBlock(scope: !4814, file: !3, line: 2234, column: 8)
!4823 = !DILocation(line: 2234, column: 8, scope: !4814)
!4824 = !DILocalVariable(name: "is_playing_sound", scope: !4825, file: !3, line: 2235, type: !34)
!4825 = distinct !DILexicalBlock(scope: !4822, file: !3, line: 2234, column: 15)
!4826 = !DILocation(line: 2235, column: 9, scope: !4825)
!4827 = !DILocation(line: 2235, column: 48, scope: !4825)
!4828 = !DILocation(line: 2235, column: 53, scope: !4825)
!4829 = !DILocation(line: 2235, column: 61, scope: !4825)
!4830 = !DILocation(line: 2235, column: 28, scope: !4825)
!4831 = !DILocation(line: 2237, column: 9, scope: !4832)
!4832 = distinct !DILexicalBlock(scope: !4825, file: !3, line: 2237, column: 9)
!4833 = !DILocation(line: 2237, column: 26, scope: !4832)
!4834 = !DILocation(line: 2237, column: 9, scope: !4825)
!4835 = !DILocalVariable(name: "is_playing_screen", scope: !4836, file: !3, line: 2238, type: !73)
!4836 = distinct !DILexicalBlock(scope: !4832, file: !3, line: 2237, column: 33)
!4837 = !DILocation(line: 2238, column: 11, scope: !4836)
!4838 = !DILocation(line: 2239, column: 24, scope: !4836)
!4839 = !DILocation(line: 2239, column: 27, scope: !4836)
!4840 = !DILocation(line: 2239, column: 6, scope: !4836)
!4841 = !DILocation(line: 2240, column: 24, scope: !4836)
!4842 = !DILocation(line: 2240, column: 27, scope: !4836)
!4843 = !DILocation(line: 2240, column: 32, scope: !4836)
!4844 = !DILocation(line: 2240, column: 6, scope: !4836)
!4845 = !DILocation(line: 2241, column: 25, scope: !4836)
!4846 = !DILocation(line: 2241, column: 28, scope: !4836)
!4847 = !DILocation(line: 2241, column: 6, scope: !4836)
!4848 = !DILocation(line: 2243, column: 55, scope: !4836)
!4849 = !DILocation(line: 2243, column: 27, scope: !4836)
!4850 = !DILocation(line: 2243, column: 59, scope: !4836)
!4851 = !DILocation(line: 2243, column: 26, scope: !4836)
!4852 = !DILocation(line: 2243, column: 24, scope: !4836)
!4853 = !DILocation(line: 2245, column: 12, scope: !4854)
!4854 = distinct !DILexicalBlock(scope: !4836, file: !3, line: 2245, column: 10)
!4855 = !DILocation(line: 2245, column: 29, scope: !4854)
!4856 = !DILocation(line: 2245, column: 35, scope: !4854)
!4857 = !DILocation(line: 2245, column: 39, scope: !4854)
!4858 = !DILocation(line: 2245, column: 57, scope: !4854)
!4859 = !DILocation(line: 2245, column: 64, scope: !4854)
!4860 = !DILocation(line: 2246, column: 12, scope: !4854)
!4861 = !DILocation(line: 2246, column: 29, scope: !4854)
!4862 = !DILocation(line: 2246, column: 35, scope: !4854)
!4863 = !DILocation(line: 2246, column: 39, scope: !4854)
!4864 = !DILocation(line: 2246, column: 57, scope: !4854)
!4865 = !DILocation(line: 2245, column: 10, scope: !4836)
!4866 = !DILocation(line: 2248, column: 32, scope: !4867)
!4867 = distinct !DILexicalBlock(scope: !4854, file: !3, line: 2247, column: 6)
!4868 = !DILocation(line: 2248, column: 7, scope: !4867)
!4869 = !DILocation(line: 2249, column: 6, scope: !4867)
!4870 = !DILocation(line: 2251, column: 10, scope: !4871)
!4871 = distinct !DILexicalBlock(scope: !4836, file: !3, line: 2251, column: 10)
!4872 = !DILocation(line: 2251, column: 27, scope: !4871)
!4873 = !DILocation(line: 2251, column: 10, scope: !4836)
!4874 = !DILocation(line: 2253, column: 15, scope: !4875)
!4875 = distinct !DILexicalBlock(scope: !4871, file: !3, line: 2251, column: 33)
!4876 = !DILocation(line: 2253, column: 7, scope: !4875)
!4877 = !DILocation(line: 2254, column: 7, scope: !4875)
!4878 = !DILocation(line: 2268, column: 25, scope: !4836)
!4879 = !DILocation(line: 2268, column: 6, scope: !4836)
!4880 = !DILocation(line: 2269, column: 24, scope: !4836)
!4881 = !DILocation(line: 2269, column: 6, scope: !4836)
!4882 = !DILocation(line: 2270, column: 24, scope: !4836)
!4883 = !DILocation(line: 2270, column: 6, scope: !4836)
!4884 = !DILocation(line: 2271, column: 5, scope: !4836)
!4885 = !DILocation(line: 2272, column: 4, scope: !4825)
!4886 = !DILocation(line: 2275, column: 3, scope: !4804)
!4887 = !DILocation(line: 2275, column: 20, scope: !4804)
!4888 = !DILocation(line: 2275, column: 25, scope: !4804)
!4889 = !DILocation(line: 2275, column: 31, scope: !4804)
!4890 = !DILocation(line: 2275, column: 18, scope: !4804)
!4891 = !DILocalVariable(name: "action", scope: !4892, file: !3, line: 2276, type: !34)
!4892 = distinct !DILexicalBlock(scope: !4804, file: !3, line: 2275, column: 40)
!4893 = !DILocation(line: 2276, column: 8, scope: !4892)
!4894 = !DILocation(line: 2286, column: 28, scope: !4895)
!4895 = distinct !DILexicalBlock(scope: !4892, file: !3, line: 2286, column: 8)
!4896 = !DILocation(line: 2286, column: 33, scope: !4895)
!4897 = !DILocation(line: 2286, column: 8, scope: !4895)
!4898 = !DILocation(line: 2286, column: 8, scope: !4892)
!4899 = !DILocation(line: 2292, column: 18, scope: !4900)
!4900 = distinct !DILexicalBlock(scope: !4895, file: !3, line: 2286, column: 41)
!4901 = !DILocation(line: 2292, column: 23, scope: !4900)
!4902 = !DILocation(line: 2292, column: 30, scope: !4900)
!4903 = !DILocation(line: 2292, column: 5, scope: !4900)
!4904 = !DILocation(line: 2293, column: 19, scope: !4900)
!4905 = !DILocation(line: 2293, column: 5, scope: !4900)
!4906 = !DILocation(line: 2294, column: 5, scope: !4900)
!4907 = distinct !{!4907, !4886, !4908}
!4908 = !DILocation(line: 2414, column: 3, scope: !4804)
!4909 = !DILocation(line: 2297, column: 22, scope: !4892)
!4910 = !DILocation(line: 2297, column: 25, scope: !4892)
!4911 = !DILocation(line: 2297, column: 4, scope: !4892)
!4912 = !DILocation(line: 2300, column: 20, scope: !4892)
!4913 = !DILocation(line: 2300, column: 41, scope: !4892)
!4914 = !DILocation(line: 2300, column: 45, scope: !4892)
!4915 = !DILocation(line: 2300, column: 52, scope: !4892)
!4916 = !DILocation(line: 2300, column: 23, scope: !4892)
!4917 = !DILocation(line: 2300, column: 4, scope: !4892)
!4918 = !DILocation(line: 2301, column: 22, scope: !4892)
!4919 = !DILocation(line: 2301, column: 45, scope: !4892)
!4920 = !DILocation(line: 2301, column: 49, scope: !4892)
!4921 = !DILocation(line: 2301, column: 56, scope: !4892)
!4922 = !DILocation(line: 2301, column: 25, scope: !4892)
!4923 = !DILocation(line: 2301, column: 4, scope: !4892)
!4924 = !DILocation(line: 2304, column: 28, scope: !4892)
!4925 = !DILocation(line: 2304, column: 32, scope: !4892)
!4926 = !DILocation(line: 2304, column: 4, scope: !4892)
!4927 = !DILocation(line: 2306, column: 23, scope: !4892)
!4928 = !DILocation(line: 2306, column: 26, scope: !4892)
!4929 = !DILocation(line: 2306, column: 4, scope: !4892)
!4930 = !DILocation(line: 2310, column: 29, scope: !4892)
!4931 = !DILocation(line: 2310, column: 32, scope: !4892)
!4932 = !DILocation(line: 2310, column: 40, scope: !4892)
!4933 = !DILocation(line: 2310, column: 45, scope: !4892)
!4934 = !DILocation(line: 2310, column: 14, scope: !4892)
!4935 = !DILocation(line: 2310, column: 11, scope: !4892)
!4936 = !DILocation(line: 2313, column: 22, scope: !4937)
!4937 = distinct !DILexicalBlock(scope: !4892, file: !3, line: 2313, column: 8)
!4938 = !DILocation(line: 2313, column: 8, scope: !4937)
!4939 = !DILocation(line: 2313, column: 25, scope: !4937)
!4940 = !DILocation(line: 2313, column: 8, scope: !4892)
!4941 = !DILocation(line: 2314, column: 5, scope: !4937)
!4942 = !DILocation(line: 2317, column: 23, scope: !4892)
!4943 = !DILocation(line: 2317, column: 27, scope: !4892)
!4944 = !DILocation(line: 2317, column: 32, scope: !4892)
!4945 = !DILocation(line: 2317, column: 4, scope: !4892)
!4946 = !DILocation(line: 2320, column: 23, scope: !4892)
!4947 = !DILocation(line: 2320, column: 26, scope: !4892)
!4948 = !DILocation(line: 2320, column: 33, scope: !4892)
!4949 = !DILocation(line: 2320, column: 4, scope: !4892)
!4950 = !DILocation(line: 2322, column: 9, scope: !4951)
!4951 = distinct !DILexicalBlock(scope: !4892, file: !3, line: 2322, column: 8)
!4952 = !DILocation(line: 2322, column: 16, scope: !4951)
!4953 = !DILocation(line: 2322, column: 36, scope: !4951)
!4954 = !DILocation(line: 2322, column: 8, scope: !4892)
!4955 = !DILocalVariable(name: "sa", scope: !4956, file: !3, line: 2323, type: !2201)
!4956 = distinct !DILexicalBlock(scope: !4951, file: !3, line: 2322, column: 42)
!4957 = !DILocation(line: 2323, column: 14, scope: !4956)
!4958 = !DILocalVariable(name: "ar", scope: !4956, file: !3, line: 2324, type: !2737)
!4959 = !DILocation(line: 2324, column: 14, scope: !4956)
!4960 = !DILocalVariable(name: "doit", scope: !4956, file: !3, line: 2325, type: !34)
!4961 = !DILocation(line: 2325, column: 9, scope: !4956)
!4962 = !DILocation(line: 2328, column: 9, scope: !4963)
!4963 = distinct !DILexicalBlock(scope: !4956, file: !3, line: 2328, column: 9)
!4964 = !DILocation(line: 2328, column: 16, scope: !4963)
!4965 = !DILocation(line: 2328, column: 21, scope: !4963)
!4966 = !DILocation(line: 2328, column: 9, scope: !4956)
!4967 = !DILocation(line: 2330, column: 33, scope: !4968)
!4968 = distinct !DILexicalBlock(scope: !4963, file: !3, line: 2328, column: 35)
!4969 = !DILocation(line: 2330, column: 36, scope: !4968)
!4970 = !DILocation(line: 2330, column: 6, scope: !4968)
!4971 = !DILocation(line: 2332, column: 26, scope: !4968)
!4972 = !DILocation(line: 2332, column: 29, scope: !4968)
!4973 = !DILocation(line: 2332, column: 6, scope: !4968)
!4974 = !DILocation(line: 2333, column: 5, scope: !4968)
!4975 = !DILocation(line: 2334, column: 14, scope: !4976)
!4976 = distinct !DILexicalBlock(scope: !4963, file: !3, line: 2334, column: 14)
!4977 = !DILocation(line: 2334, column: 21, scope: !4976)
!4978 = !DILocation(line: 2334, column: 26, scope: !4976)
!4979 = !DILocation(line: 2334, column: 14, scope: !4963)
!4980 = !DILocation(line: 2335, column: 6, scope: !4981)
!4981 = distinct !DILexicalBlock(scope: !4976, file: !3, line: 2334, column: 42)
!4982 = !DILocation(line: 2335, column: 11, scope: !4981)
!4983 = !DILocation(line: 2335, column: 24, scope: !4981)
!4984 = !DILocation(line: 2336, column: 5, scope: !4981)
!4985 = !DILocation(line: 2338, column: 15, scope: !4986)
!4986 = distinct !DILexicalBlock(scope: !4956, file: !3, line: 2338, column: 5)
!4987 = !DILocation(line: 2338, column: 20, scope: !4986)
!4988 = !DILocation(line: 2338, column: 28, scope: !4986)
!4989 = !DILocation(line: 2338, column: 37, scope: !4986)
!4990 = !DILocation(line: 2338, column: 13, scope: !4986)
!4991 = !DILocation(line: 2338, column: 10, scope: !4986)
!4992 = !DILocation(line: 2338, column: 44, scope: !4993)
!4993 = distinct !DILexicalBlock(scope: !4986, file: !3, line: 2338, column: 5)
!4994 = !DILocation(line: 2338, column: 5, scope: !4986)
!4995 = !DILocation(line: 2339, column: 28, scope: !4996)
!4996 = distinct !DILexicalBlock(scope: !4997, file: !3, line: 2339, column: 10)
!4997 = distinct !DILexicalBlock(scope: !4993, file: !3, line: 2338, column: 63)
!4998 = !DILocation(line: 2339, column: 36, scope: !4996)
!4999 = !DILocation(line: 2339, column: 40, scope: !4996)
!5000 = !DILocation(line: 2339, column: 10, scope: !4996)
!5001 = !DILocation(line: 2339, column: 10, scope: !4997)
!5002 = !DILocation(line: 2340, column: 23, scope: !5003)
!5003 = distinct !DILexicalBlock(scope: !4996, file: !3, line: 2339, column: 49)
!5004 = !DILocation(line: 2340, column: 26, scope: !5003)
!5005 = !DILocation(line: 2340, column: 7, scope: !5003)
!5006 = !DILocation(line: 2342, column: 12, scope: !5007)
!5007 = distinct !DILexicalBlock(scope: !5003, file: !3, line: 2342, column: 11)
!5008 = !DILocation(line: 2342, column: 19, scope: !5007)
!5009 = !DILocation(line: 2342, column: 39, scope: !5007)
!5010 = !DILocation(line: 2342, column: 11, scope: !5003)
!5011 = !DILocation(line: 2343, column: 18, scope: !5012)
!5012 = distinct !DILexicalBlock(scope: !5013, file: !3, line: 2343, column: 8)
!5013 = distinct !DILexicalBlock(scope: !5007, file: !3, line: 2342, column: 45)
!5014 = !DILocation(line: 2343, column: 22, scope: !5012)
!5015 = !DILocation(line: 2343, column: 33, scope: !5012)
!5016 = !DILocation(line: 2343, column: 16, scope: !5012)
!5017 = !DILocation(line: 2343, column: 13, scope: !5012)
!5018 = !DILocation(line: 2343, column: 40, scope: !5019)
!5019 = distinct !DILexicalBlock(scope: !5012, file: !3, line: 2343, column: 8)
!5020 = !DILocation(line: 2343, column: 8, scope: !5012)
!5021 = !DILocation(line: 2344, column: 31, scope: !5022)
!5022 = distinct !DILexicalBlock(scope: !5023, file: !3, line: 2344, column: 13)
!5023 = distinct !DILexicalBlock(scope: !5019, file: !3, line: 2343, column: 59)
!5024 = !DILocation(line: 2344, column: 39, scope: !5022)
!5025 = !DILocation(line: 2344, column: 43, scope: !5022)
!5026 = !DILocation(line: 2344, column: 13, scope: !5022)
!5027 = !DILocation(line: 2344, column: 13, scope: !5023)
!5028 = !DILocation(line: 2345, column: 28, scope: !5029)
!5029 = distinct !DILexicalBlock(scope: !5022, file: !3, line: 2344, column: 52)
!5030 = !DILocation(line: 2345, column: 31, scope: !5029)
!5031 = !DILocation(line: 2345, column: 10, scope: !5029)
!5032 = !DILocation(line: 2348, column: 29, scope: !5029)
!5033 = !DILocation(line: 2348, column: 32, scope: !5029)
!5034 = !DILocation(line: 2348, column: 10, scope: !5029)
!5035 = !DILocation(line: 2350, column: 38, scope: !5036)
!5036 = distinct !DILexicalBlock(scope: !5029, file: !3, line: 2350, column: 14)
!5037 = !DILocation(line: 2350, column: 42, scope: !5036)
!5038 = !DILocation(line: 2350, column: 15, scope: !5036)
!5039 = !DILocation(line: 2350, column: 14, scope: !5029)
!5040 = !DILocation(line: 2353, column: 15, scope: !5041)
!5041 = distinct !DILexicalBlock(scope: !5042, file: !3, line: 2353, column: 15)
!5042 = distinct !DILexicalBlock(scope: !5036, file: !3, line: 2350, column: 50)
!5043 = !DILocation(line: 2353, column: 54, scope: !5041)
!5044 = !DILocation(line: 2353, column: 57, scope: !5041)
!5045 = !DILocation(line: 2353, column: 15, scope: !5042)
!5046 = !DILocation(line: 2354, column: 31, scope: !5047)
!5047 = distinct !DILexicalBlock(scope: !5041, file: !3, line: 2353, column: 85)
!5048 = !DILocation(line: 2354, column: 34, scope: !5047)
!5049 = !DILocation(line: 2354, column: 12, scope: !5047)
!5050 = !DILocation(line: 2355, column: 11, scope: !5047)
!5051 = !DILocation(line: 2356, column: 10, scope: !5042)
!5052 = !DILocation(line: 2358, column: 35, scope: !5029)
!5053 = !DILocation(line: 2358, column: 38, scope: !5029)
!5054 = !DILocation(line: 2358, column: 46, scope: !5029)
!5055 = !DILocation(line: 2358, column: 50, scope: !5029)
!5056 = !DILocation(line: 2358, column: 20, scope: !5029)
!5057 = !DILocation(line: 2358, column: 17, scope: !5029)
!5058 = !DILocation(line: 2361, column: 28, scope: !5059)
!5059 = distinct !DILexicalBlock(scope: !5029, file: !3, line: 2361, column: 14)
!5060 = !DILocation(line: 2361, column: 14, scope: !5059)
!5061 = !DILocation(line: 2361, column: 31, scope: !5059)
!5062 = !DILocation(line: 2361, column: 14, scope: !5029)
!5063 = !DILocation(line: 2362, column: 11, scope: !5059)
!5064 = !DILocation(line: 2364, column: 40, scope: !5029)
!5065 = !DILocation(line: 2364, column: 44, scope: !5029)
!5066 = !DILocation(line: 2364, column: 53, scope: !5029)
!5067 = !DILocation(line: 2364, column: 60, scope: !5029)
!5068 = !DILocation(line: 2364, column: 19, scope: !5029)
!5069 = !DILocation(line: 2364, column: 18, scope: !5029)
!5070 = !DILocation(line: 2364, column: 15, scope: !5029)
!5071 = !DILocation(line: 2366, column: 14, scope: !5072)
!5072 = distinct !DILexicalBlock(scope: !5029, file: !3, line: 2366, column: 14)
!5073 = !DILocation(line: 2366, column: 21, scope: !5072)
!5074 = !DILocation(line: 2366, column: 14, scope: !5029)
!5075 = !DILocation(line: 2367, column: 11, scope: !5072)
!5076 = !DILocation(line: 2368, column: 9, scope: !5029)
!5077 = !DILocation(line: 2369, column: 8, scope: !5023)
!5078 = !DILocation(line: 2343, column: 49, scope: !5019)
!5079 = !DILocation(line: 2343, column: 53, scope: !5019)
!5080 = !DILocation(line: 2343, column: 47, scope: !5019)
!5081 = !DILocation(line: 2343, column: 8, scope: !5019)
!5082 = distinct !{!5082, !5020, !5083}
!5083 = !DILocation(line: 2369, column: 8, scope: !5012)
!5084 = !DILocation(line: 2370, column: 7, scope: !5013)
!5085 = !DILocation(line: 2372, column: 25, scope: !5003)
!5086 = !DILocation(line: 2372, column: 7, scope: !5003)
!5087 = !DILocation(line: 2374, column: 12, scope: !5088)
!5088 = distinct !DILexicalBlock(scope: !5003, file: !3, line: 2374, column: 11)
!5089 = !DILocation(line: 2374, column: 19, scope: !5088)
!5090 = !DILocation(line: 2374, column: 39, scope: !5088)
!5091 = !DILocation(line: 2374, column: 11, scope: !5003)
!5092 = !DILocation(line: 2375, column: 27, scope: !5093)
!5093 = distinct !DILexicalBlock(scope: !5088, file: !3, line: 2374, column: 45)
!5094 = !DILocation(line: 2375, column: 30, scope: !5093)
!5095 = !DILocation(line: 2375, column: 8, scope: !5093)
!5096 = !DILocation(line: 2376, column: 33, scope: !5093)
!5097 = !DILocation(line: 2376, column: 36, scope: !5093)
!5098 = !DILocation(line: 2376, column: 44, scope: !5093)
!5099 = !DILocation(line: 2376, column: 48, scope: !5093)
!5100 = !DILocation(line: 2376, column: 18, scope: !5093)
!5101 = !DILocation(line: 2376, column: 15, scope: !5093)
!5102 = !DILocation(line: 2377, column: 7, scope: !5093)
!5103 = !DILocation(line: 2378, column: 23, scope: !5003)
!5104 = !DILocation(line: 2378, column: 7, scope: !5003)
!5105 = !DILocation(line: 2381, column: 6, scope: !5003)
!5106 = !DILocation(line: 2382, column: 5, scope: !4997)
!5107 = !DILocation(line: 2338, column: 53, scope: !4993)
!5108 = !DILocation(line: 2338, column: 57, scope: !4993)
!5109 = !DILocation(line: 2338, column: 51, scope: !4993)
!5110 = !DILocation(line: 2338, column: 5, scope: !4993)
!5111 = distinct !{!5111, !4994, !5112}
!5112 = !DILocation(line: 2382, column: 5, scope: !4986)
!5113 = !DILocation(line: 2384, column: 10, scope: !5114)
!5114 = distinct !DILexicalBlock(scope: !4956, file: !3, line: 2384, column: 9)
!5115 = !DILocation(line: 2384, column: 17, scope: !5114)
!5116 = !DILocation(line: 2384, column: 37, scope: !5114)
!5117 = !DILocation(line: 2384, column: 9, scope: !4956)
!5118 = !DILocation(line: 2386, column: 22, scope: !5119)
!5119 = distinct !DILexicalBlock(scope: !5114, file: !3, line: 2384, column: 43)
!5120 = !DILocation(line: 2386, column: 43, scope: !5119)
!5121 = !DILocation(line: 2386, column: 47, scope: !5119)
!5122 = !DILocation(line: 2386, column: 54, scope: !5119)
!5123 = !DILocation(line: 2386, column: 25, scope: !5119)
!5124 = !DILocation(line: 2386, column: 6, scope: !5119)
!5125 = !DILocation(line: 2387, column: 24, scope: !5119)
!5126 = !DILocation(line: 2387, column: 47, scope: !5119)
!5127 = !DILocation(line: 2387, column: 51, scope: !5119)
!5128 = !DILocation(line: 2387, column: 58, scope: !5119)
!5129 = !DILocation(line: 2387, column: 27, scope: !5119)
!5130 = !DILocation(line: 2387, column: 6, scope: !5119)
!5131 = !DILocation(line: 2389, column: 25, scope: !5119)
!5132 = !DILocation(line: 2389, column: 28, scope: !5119)
!5133 = !DILocation(line: 2389, column: 6, scope: !5119)
!5134 = !DILocation(line: 2391, column: 31, scope: !5119)
!5135 = !DILocation(line: 2391, column: 34, scope: !5119)
!5136 = !DILocation(line: 2391, column: 42, scope: !5119)
!5137 = !DILocation(line: 2391, column: 47, scope: !5119)
!5138 = !DILocation(line: 2391, column: 16, scope: !5119)
!5139 = !DILocation(line: 2391, column: 13, scope: !5119)
!5140 = !DILocation(line: 2394, column: 24, scope: !5141)
!5141 = distinct !DILexicalBlock(scope: !5119, file: !3, line: 2394, column: 10)
!5142 = !DILocation(line: 2394, column: 10, scope: !5141)
!5143 = !DILocation(line: 2394, column: 27, scope: !5141)
!5144 = !DILocation(line: 2394, column: 10, scope: !5119)
!5145 = !DILocation(line: 2395, column: 7, scope: !5141)
!5146 = !DILocation(line: 2396, column: 5, scope: !5119)
!5147 = !DILocation(line: 2400, column: 9, scope: !5148)
!5148 = distinct !DILexicalBlock(scope: !4956, file: !3, line: 2400, column: 9)
!5149 = !DILocation(line: 2400, column: 14, scope: !5148)
!5150 = !DILocation(line: 2400, column: 17, scope: !5148)
!5151 = !DILocation(line: 2400, column: 22, scope: !5148)
!5152 = !DILocation(line: 2400, column: 29, scope: !5148)
!5153 = !DILocation(line: 2400, column: 32, scope: !5148)
!5154 = !DILocation(line: 2400, column: 37, scope: !5148)
!5155 = !DILocation(line: 2400, column: 45, scope: !5148)
!5156 = !DILocation(line: 2400, column: 61, scope: !5148)
!5157 = !DILocation(line: 2400, column: 66, scope: !5148)
!5158 = !DILocation(line: 2400, column: 74, scope: !5148)
!5159 = !DILocation(line: 2400, column: 58, scope: !5148)
!5160 = !DILocation(line: 2400, column: 9, scope: !4956)
!5161 = !DILocation(line: 2401, column: 31, scope: !5162)
!5162 = distinct !DILexicalBlock(scope: !5148, file: !3, line: 2400, column: 83)
!5163 = !DILocation(line: 2401, column: 38, scope: !5162)
!5164 = !DILocation(line: 2401, column: 6, scope: !5162)
!5165 = !DILocation(line: 2401, column: 11, scope: !5162)
!5166 = !DILocation(line: 2401, column: 23, scope: !5162)
!5167 = !DILocation(line: 2401, column: 29, scope: !5162)
!5168 = !DILocation(line: 2402, column: 31, scope: !5162)
!5169 = !DILocation(line: 2402, column: 38, scope: !5162)
!5170 = !DILocation(line: 2402, column: 6, scope: !5162)
!5171 = !DILocation(line: 2402, column: 11, scope: !5162)
!5172 = !DILocation(line: 2402, column: 23, scope: !5162)
!5173 = !DILocation(line: 2402, column: 29, scope: !5162)
!5174 = !DILocation(line: 2404, column: 5, scope: !5162)
!5175 = !DILocation(line: 2408, column: 4, scope: !4956)
!5176 = !DILocation(line: 2411, column: 17, scope: !4892)
!5177 = !DILocation(line: 2411, column: 22, scope: !4892)
!5178 = !DILocation(line: 2411, column: 29, scope: !4892)
!5179 = !DILocation(line: 2411, column: 4, scope: !4892)
!5180 = !DILocation(line: 2412, column: 18, scope: !4892)
!5181 = !DILocation(line: 2412, column: 4, scope: !4892)
!5182 = !DILocation(line: 2417, column: 7, scope: !5183)
!5183 = distinct !DILexicalBlock(scope: !4804, file: !3, line: 2417, column: 7)
!5184 = !DILocation(line: 2417, column: 12, scope: !5183)
!5185 = !DILocation(line: 2417, column: 25, scope: !5183)
!5186 = !DILocation(line: 2417, column: 28, scope: !5183)
!5187 = !DILocation(line: 2417, column: 33, scope: !5183)
!5188 = !DILocation(line: 2417, column: 7, scope: !4804)
!5189 = !DILocalVariable(name: "tevent", scope: !5190, file: !3, line: 2418, type: !2553)
!5190 = distinct !DILexicalBlock(scope: !5183, file: !3, line: 2417, column: 45)
!5191 = !DILocation(line: 2418, column: 12, scope: !5190)
!5192 = !DILocation(line: 2418, column: 23, scope: !5190)
!5193 = !DILocation(line: 2418, column: 28, scope: !5190)
!5194 = !DILocation(line: 2418, column: 21, scope: !5190)
!5195 = !DILocation(line: 2420, column: 11, scope: !5190)
!5196 = !DILocation(line: 2420, column: 16, scope: !5190)
!5197 = !DILocation(line: 2421, column: 26, scope: !5190)
!5198 = !DILocation(line: 2421, column: 11, scope: !5190)
!5199 = !DILocation(line: 2421, column: 17, scope: !5190)
!5200 = !DILocation(line: 2422, column: 26, scope: !5190)
!5201 = !DILocation(line: 2422, column: 11, scope: !5190)
!5202 = !DILocation(line: 2422, column: 17, scope: !5190)
!5203 = !DILocation(line: 2423, column: 17, scope: !5190)
!5204 = !DILocation(line: 2423, column: 4, scope: !5190)
!5205 = !DILocation(line: 2424, column: 4, scope: !5190)
!5206 = !DILocation(line: 2424, column: 9, scope: !5190)
!5207 = !DILocation(line: 2424, column: 22, scope: !5190)
!5208 = !DILocation(line: 2425, column: 3, scope: !5190)
!5209 = !DILocation(line: 2427, column: 21, scope: !4804)
!5210 = !DILocation(line: 2427, column: 3, scope: !4804)
!5211 = !DILocation(line: 2428, column: 2, scope: !4804)
!5212 = !DILocation(line: 2226, column: 43, scope: !4801)
!5213 = !DILocation(line: 2226, column: 48, scope: !4801)
!5214 = !DILocation(line: 2226, column: 41, scope: !4801)
!5215 = !DILocation(line: 2226, column: 2, scope: !4801)
!5216 = distinct !{!5216, !4802, !5217}
!5217 = !DILocation(line: 2428, column: 2, scope: !4795)
!5218 = !DILocation(line: 2431, column: 22, scope: !4783)
!5219 = !DILocation(line: 2431, column: 2, scope: !4783)
!5220 = !DILocation(line: 2433, column: 8, scope: !5221)
!5221 = distinct !DILexicalBlock(scope: !4783, file: !3, line: 2433, column: 6)
!5222 = !DILocation(line: 2433, column: 6, scope: !5221)
!5223 = !DILocation(line: 2433, column: 6, scope: !4783)
!5224 = !DILocalVariable(name: "error", scope: !5225, file: !3, line: 2434, type: !5226)
!5225 = distinct !DILexicalBlock(scope: !5221, file: !3, line: 2433, column: 15)
!5226 = !DIDerivedType(tag: DW_TAG_typedef, name: "GLenum", file: !5227, line: 270, baseType: !300)
!5227 = !DIFile(filename: "blender/extern/glew/include/GL/glew.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5228 = !DILocation(line: 2434, column: 10, scope: !5225)
!5229 = !DILocation(line: 2434, column: 18, scope: !5225)
!5230 = !DILocation(line: 2435, column: 7, scope: !5231)
!5231 = distinct !DILexicalBlock(scope: !5225, file: !3, line: 2435, column: 7)
!5232 = !DILocation(line: 2435, column: 13, scope: !5231)
!5233 = !DILocation(line: 2435, column: 7, scope: !5225)
!5234 = !DILocation(line: 2436, column: 44, scope: !5235)
!5235 = distinct !DILexicalBlock(scope: !5231, file: !3, line: 2435, column: 29)
!5236 = !DILocation(line: 2436, column: 29, scope: !5235)
!5237 = !DILocation(line: 2436, column: 4, scope: !5235)
!5238 = !DILocation(line: 2437, column: 3, scope: !5235)
!5239 = !DILocation(line: 2438, column: 2, scope: !5225)
!5240 = !DILocation(line: 2439, column: 1, scope: !4783)
!5241 = distinct !DISubprogram(name: "wm_event_pie_filter", scope: !3, file: !3, line: 2200, type: !5242, scopeLine: 2201, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!5242 = !DISubroutineType(types: !5243)
!5243 = !{!73, !2567, !2552}
!5244 = !DILocalVariable(name: "win", arg: 1, scope: !5241, file: !3, line: 2200, type: !2567)
!5245 = !DILocation(line: 2200, column: 43, scope: !5241)
!5246 = !DILocalVariable(name: "event", arg: 2, scope: !5241, file: !3, line: 2200, type: !2552)
!5247 = !DILocation(line: 2200, column: 57, scope: !5241)
!5248 = !DILocation(line: 2202, column: 6, scope: !5249)
!5249 = distinct !DILexicalBlock(scope: !5241, file: !3, line: 2202, column: 6)
!5250 = !DILocation(line: 2202, column: 11, scope: !5249)
!5251 = !DILocation(line: 2202, column: 26, scope: !5249)
!5252 = !DILocation(line: 2202, column: 29, scope: !5249)
!5253 = !DILocation(line: 2202, column: 34, scope: !5249)
!5254 = !DILocation(line: 2202, column: 52, scope: !5249)
!5255 = !DILocation(line: 2202, column: 59, scope: !5249)
!5256 = !DILocation(line: 2202, column: 49, scope: !5249)
!5257 = !DILocation(line: 2202, column: 6, scope: !5241)
!5258 = !DILocation(line: 2203, column: 7, scope: !5259)
!5259 = distinct !DILexicalBlock(scope: !5260, file: !3, line: 2203, column: 7)
!5260 = distinct !DILexicalBlock(scope: !5249, file: !3, line: 2202, column: 65)
!5261 = !DILocation(line: 2203, column: 14, scope: !5259)
!5262 = !DILocation(line: 2203, column: 18, scope: !5259)
!5263 = !DILocation(line: 2203, column: 7, scope: !5260)
!5264 = !DILocation(line: 2204, column: 4, scope: !5265)
!5265 = distinct !DILexicalBlock(scope: !5259, file: !3, line: 2203, column: 33)
!5266 = !DILocation(line: 2204, column: 9, scope: !5265)
!5267 = !DILocation(line: 2204, column: 24, scope: !5265)
!5268 = !DILocation(line: 2205, column: 4, scope: !5265)
!5269 = !DILocation(line: 2208, column: 4, scope: !5270)
!5270 = distinct !DILexicalBlock(scope: !5259, file: !3, line: 2207, column: 8)
!5271 = !DILocation(line: 2212, column: 3, scope: !5272)
!5272 = distinct !DILexicalBlock(scope: !5249, file: !3, line: 2211, column: 7)
!5273 = !DILocation(line: 2214, column: 1, scope: !5241)
!5274 = distinct !DISubprogram(name: "area_event_inside", scope: !3, file: !3, line: 2094, type: !5275, scopeLine: 2095, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!5275 = !DISubroutineType(types: !5276)
!5276 = !{!2201, !2402, !5277}
!5277 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5278, size: 64)
!5278 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !34)
!5279 = !DILocalVariable(name: "C", arg: 1, scope: !5274, file: !3, line: 2094, type: !2402)
!5280 = !DILocation(line: 2094, column: 45, scope: !5274)
!5281 = !DILocalVariable(name: "xy", arg: 2, scope: !5274, file: !3, line: 2094, type: !5277)
!5282 = !DILocation(line: 2094, column: 58, scope: !5274)
!5283 = !DILocalVariable(name: "screen", scope: !5274, file: !3, line: 2096, type: !2229)
!5284 = !DILocation(line: 2096, column: 11, scope: !5274)
!5285 = !DILocation(line: 2096, column: 34, scope: !5274)
!5286 = !DILocation(line: 2096, column: 20, scope: !5274)
!5287 = !DILocalVariable(name: "sa", scope: !5274, file: !3, line: 2097, type: !2201)
!5288 = !DILocation(line: 2097, column: 11, scope: !5274)
!5289 = !DILocation(line: 2099, column: 6, scope: !5290)
!5290 = distinct !DILexicalBlock(scope: !5274, file: !3, line: 2099, column: 6)
!5291 = !DILocation(line: 2099, column: 6, scope: !5274)
!5292 = !DILocation(line: 2100, column: 13, scope: !5293)
!5293 = distinct !DILexicalBlock(scope: !5290, file: !3, line: 2100, column: 3)
!5294 = !DILocation(line: 2100, column: 21, scope: !5293)
!5295 = !DILocation(line: 2100, column: 30, scope: !5293)
!5296 = !DILocation(line: 2100, column: 11, scope: !5293)
!5297 = !DILocation(line: 2100, column: 8, scope: !5293)
!5298 = !DILocation(line: 2100, column: 37, scope: !5299)
!5299 = distinct !DILexicalBlock(scope: !5293, file: !3, line: 2100, column: 3)
!5300 = !DILocation(line: 2100, column: 3, scope: !5293)
!5301 = !DILocation(line: 2101, column: 29, scope: !5302)
!5302 = distinct !DILexicalBlock(scope: !5299, file: !3, line: 2101, column: 8)
!5303 = !DILocation(line: 2101, column: 33, scope: !5302)
!5304 = !DILocation(line: 2101, column: 41, scope: !5302)
!5305 = !DILocation(line: 2101, column: 8, scope: !5302)
!5306 = !DILocation(line: 2101, column: 8, scope: !5299)
!5307 = !DILocation(line: 2102, column: 12, scope: !5302)
!5308 = !DILocation(line: 2102, column: 5, scope: !5302)
!5309 = !DILocation(line: 2101, column: 43, scope: !5302)
!5310 = !DILocation(line: 2100, column: 46, scope: !5299)
!5311 = !DILocation(line: 2100, column: 50, scope: !5299)
!5312 = !DILocation(line: 2100, column: 44, scope: !5299)
!5313 = !DILocation(line: 2100, column: 3, scope: !5299)
!5314 = distinct !{!5314, !5300, !5315}
!5315 = !DILocation(line: 2102, column: 12, scope: !5293)
!5316 = !DILocation(line: 2103, column: 2, scope: !5274)
!5317 = !DILocation(line: 2104, column: 1, scope: !5274)
!5318 = distinct !DISubprogram(name: "region_event_inside", scope: !3, file: !3, line: 2106, type: !5319, scopeLine: 2107, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!5319 = !DISubroutineType(types: !5320)
!5320 = !{!2737, !2402, !5277}
!5321 = !DILocalVariable(name: "C", arg: 1, scope: !5318, file: !3, line: 2106, type: !2402)
!5322 = !DILocation(line: 2106, column: 47, scope: !5318)
!5323 = !DILocalVariable(name: "xy", arg: 2, scope: !5318, file: !3, line: 2106, type: !5277)
!5324 = !DILocation(line: 2106, column: 60, scope: !5318)
!5325 = !DILocalVariable(name: "screen", scope: !5318, file: !3, line: 2108, type: !2229)
!5326 = !DILocation(line: 2108, column: 11, scope: !5318)
!5327 = !DILocation(line: 2108, column: 34, scope: !5318)
!5328 = !DILocation(line: 2108, column: 20, scope: !5318)
!5329 = !DILocalVariable(name: "area", scope: !5318, file: !3, line: 2109, type: !2201)
!5330 = !DILocation(line: 2109, column: 11, scope: !5318)
!5331 = !DILocation(line: 2109, column: 30, scope: !5318)
!5332 = !DILocation(line: 2109, column: 18, scope: !5318)
!5333 = !DILocalVariable(name: "ar", scope: !5318, file: !3, line: 2110, type: !2737)
!5334 = !DILocation(line: 2110, column: 11, scope: !5318)
!5335 = !DILocation(line: 2112, column: 6, scope: !5336)
!5336 = distinct !DILexicalBlock(scope: !5318, file: !3, line: 2112, column: 6)
!5337 = !DILocation(line: 2112, column: 13, scope: !5336)
!5338 = !DILocation(line: 2112, column: 16, scope: !5336)
!5339 = !DILocation(line: 2112, column: 6, scope: !5318)
!5340 = !DILocation(line: 2113, column: 13, scope: !5341)
!5341 = distinct !DILexicalBlock(scope: !5336, file: !3, line: 2113, column: 3)
!5342 = !DILocation(line: 2113, column: 19, scope: !5341)
!5343 = !DILocation(line: 2113, column: 30, scope: !5341)
!5344 = !DILocation(line: 2113, column: 11, scope: !5341)
!5345 = !DILocation(line: 2113, column: 8, scope: !5341)
!5346 = !DILocation(line: 2113, column: 37, scope: !5347)
!5347 = distinct !DILexicalBlock(scope: !5341, file: !3, line: 2113, column: 3)
!5348 = !DILocation(line: 2113, column: 3, scope: !5341)
!5349 = !DILocation(line: 2114, column: 29, scope: !5350)
!5350 = distinct !DILexicalBlock(scope: !5347, file: !3, line: 2114, column: 8)
!5351 = !DILocation(line: 2114, column: 33, scope: !5350)
!5352 = !DILocation(line: 2114, column: 41, scope: !5350)
!5353 = !DILocation(line: 2114, column: 8, scope: !5350)
!5354 = !DILocation(line: 2114, column: 8, scope: !5347)
!5355 = !DILocation(line: 2115, column: 12, scope: !5350)
!5356 = !DILocation(line: 2115, column: 5, scope: !5350)
!5357 = !DILocation(line: 2114, column: 43, scope: !5350)
!5358 = !DILocation(line: 2113, column: 46, scope: !5347)
!5359 = !DILocation(line: 2113, column: 50, scope: !5347)
!5360 = !DILocation(line: 2113, column: 44, scope: !5347)
!5361 = !DILocation(line: 2113, column: 3, scope: !5347)
!5362 = distinct !{!5362, !5348, !5363}
!5363 = !DILocation(line: 2115, column: 12, scope: !5341)
!5364 = !DILocation(line: 2116, column: 2, scope: !5318)
!5365 = !DILocation(line: 2117, column: 1, scope: !5318)
!5366 = distinct !DISubprogram(name: "wm_region_mouse_co", scope: !3, file: !3, line: 908, type: !5367, scopeLine: 909, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!5367 = !DISubroutineType(types: !5368)
!5368 = !{null, !2402, !2552}
!5369 = !DILocalVariable(name: "C", arg: 1, scope: !5366, file: !3, line: 908, type: !2402)
!5370 = !DILocation(line: 908, column: 42, scope: !5366)
!5371 = !DILocalVariable(name: "event", arg: 2, scope: !5366, file: !3, line: 908, type: !2552)
!5372 = !DILocation(line: 908, column: 54, scope: !5366)
!5373 = !DILocalVariable(name: "ar", scope: !5366, file: !3, line: 910, type: !2737)
!5374 = !DILocation(line: 910, column: 11, scope: !5366)
!5375 = !DILocation(line: 910, column: 30, scope: !5366)
!5376 = !DILocation(line: 910, column: 16, scope: !5366)
!5377 = !DILocation(line: 911, column: 6, scope: !5378)
!5378 = distinct !DILexicalBlock(scope: !5366, file: !3, line: 911, column: 6)
!5379 = !DILocation(line: 911, column: 6, scope: !5366)
!5380 = !DILocation(line: 913, column: 20, scope: !5381)
!5381 = distinct !DILexicalBlock(scope: !5378, file: !3, line: 911, column: 10)
!5382 = !DILocation(line: 913, column: 27, scope: !5381)
!5383 = !DILocation(line: 913, column: 31, scope: !5381)
!5384 = !DILocation(line: 913, column: 35, scope: !5381)
!5385 = !DILocation(line: 913, column: 42, scope: !5381)
!5386 = !DILocation(line: 913, column: 29, scope: !5381)
!5387 = !DILocation(line: 913, column: 3, scope: !5381)
!5388 = !DILocation(line: 913, column: 10, scope: !5381)
!5389 = !DILocation(line: 913, column: 18, scope: !5381)
!5390 = !DILocation(line: 914, column: 20, scope: !5381)
!5391 = !DILocation(line: 914, column: 27, scope: !5381)
!5392 = !DILocation(line: 914, column: 31, scope: !5381)
!5393 = !DILocation(line: 914, column: 35, scope: !5381)
!5394 = !DILocation(line: 914, column: 42, scope: !5381)
!5395 = !DILocation(line: 914, column: 29, scope: !5381)
!5396 = !DILocation(line: 914, column: 3, scope: !5381)
!5397 = !DILocation(line: 914, column: 10, scope: !5381)
!5398 = !DILocation(line: 914, column: 18, scope: !5381)
!5399 = !DILocation(line: 915, column: 2, scope: !5381)
!5400 = !DILocation(line: 918, column: 3, scope: !5401)
!5401 = distinct !DILexicalBlock(scope: !5378, file: !3, line: 916, column: 7)
!5402 = !DILocation(line: 918, column: 10, scope: !5401)
!5403 = !DILocation(line: 918, column: 18, scope: !5401)
!5404 = !DILocation(line: 919, column: 3, scope: !5401)
!5405 = !DILocation(line: 919, column: 10, scope: !5401)
!5406 = !DILocation(line: 919, column: 18, scope: !5401)
!5407 = !DILocation(line: 921, column: 1, scope: !5366)
!5408 = distinct !DISubprogram(name: "wm_handlers_do", scope: !3, file: !3, line: 2020, type: !5409, scopeLine: 2021, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!5409 = !DISubroutineType(types: !5410)
!5410 = !{!34, !2402, !2552, !401}
!5411 = !DILocalVariable(name: "C", arg: 1, scope: !5408, file: !3, line: 2020, type: !2402)
!5412 = !DILocation(line: 2020, column: 37, scope: !5408)
!5413 = !DILocalVariable(name: "event", arg: 2, scope: !5408, file: !3, line: 2020, type: !2552)
!5414 = !DILocation(line: 2020, column: 49, scope: !5408)
!5415 = !DILocalVariable(name: "handlers", arg: 3, scope: !5408, file: !3, line: 2020, type: !401)
!5416 = !DILocation(line: 2020, column: 66, scope: !5408)
!5417 = !DILocalVariable(name: "action", scope: !5408, file: !3, line: 2022, type: !34)
!5418 = !DILocation(line: 2022, column: 6, scope: !5408)
!5419 = !DILocation(line: 2022, column: 37, scope: !5408)
!5420 = !DILocation(line: 2022, column: 40, scope: !5408)
!5421 = !DILocation(line: 2022, column: 47, scope: !5408)
!5422 = !DILocation(line: 2022, column: 15, scope: !5408)
!5423 = !DILocation(line: 2025, column: 20, scope: !5424)
!5424 = distinct !DILexicalBlock(scope: !5408, file: !3, line: 2025, column: 6)
!5425 = !DILocation(line: 2025, column: 6, scope: !5424)
!5426 = !DILocation(line: 2025, column: 23, scope: !5424)
!5427 = !DILocation(line: 2025, column: 6, scope: !5408)
!5428 = !DILocation(line: 2026, column: 10, scope: !5424)
!5429 = !DILocation(line: 2026, column: 3, scope: !5424)
!5430 = !DILocation(line: 2028, column: 7, scope: !5431)
!5431 = distinct !DILexicalBlock(scope: !5408, file: !3, line: 2028, column: 6)
!5432 = !DILocation(line: 2028, column: 69, scope: !5431)
!5433 = !DILocation(line: 2028, column: 73, scope: !5431)
!5434 = !DILocation(line: 2028, column: 6, scope: !5408)
!5435 = !DILocation(line: 2031, column: 29, scope: !5436)
!5436 = distinct !DILexicalBlock(scope: !5437, file: !3, line: 2031, column: 7)
!5437 = distinct !DILexicalBlock(scope: !5431, file: !3, line: 2028, column: 95)
!5438 = !DILocation(line: 2031, column: 7, scope: !5436)
!5439 = !DILocation(line: 2031, column: 7, scope: !5437)
!5440 = !DILocalVariable(name: "win", scope: !5441, file: !3, line: 2032, type: !2567)
!5441 = distinct !DILexicalBlock(scope: !5436, file: !3, line: 2031, column: 38)
!5442 = !DILocation(line: 2032, column: 14, scope: !5441)
!5443 = !DILocation(line: 2032, column: 34, scope: !5441)
!5444 = !DILocation(line: 2032, column: 20, scope: !5441)
!5445 = !DILocation(line: 2037, column: 8, scope: !5446)
!5446 = distinct !DILexicalBlock(scope: !5441, file: !3, line: 2037, column: 8)
!5447 = !DILocation(line: 2037, column: 12, scope: !5446)
!5448 = !DILocation(line: 2037, column: 15, scope: !5446)
!5449 = !DILocation(line: 2037, column: 22, scope: !5446)
!5450 = !DILocation(line: 2037, column: 26, scope: !5446)
!5451 = !DILocation(line: 2037, column: 8, scope: !5441)
!5452 = !DILocation(line: 2038, column: 5, scope: !5453)
!5453 = distinct !DILexicalBlock(scope: !5446, file: !3, line: 2037, column: 39)
!5454 = !DILocation(line: 2038, column: 10, scope: !5453)
!5455 = !DILocation(line: 2038, column: 22, scope: !5453)
!5456 = !DILocation(line: 2038, column: 34, scope: !5453)
!5457 = !DILocation(line: 2039, column: 4, scope: !5453)
!5458 = !DILocation(line: 2041, column: 8, scope: !5459)
!5459 = distinct !DILexicalBlock(scope: !5441, file: !3, line: 2041, column: 8)
!5460 = !DILocation(line: 2041, column: 12, scope: !5459)
!5461 = !DILocation(line: 2041, column: 15, scope: !5459)
!5462 = !DILocation(line: 2041, column: 20, scope: !5459)
!5463 = !DILocation(line: 2041, column: 32, scope: !5459)
!5464 = !DILocation(line: 2041, column: 44, scope: !5459)
!5465 = !DILocation(line: 2041, column: 51, scope: !5459)
!5466 = !DILocation(line: 2041, column: 41, scope: !5459)
!5467 = !DILocation(line: 2041, column: 8, scope: !5441)
!5468 = !DILocation(line: 2043, column: 10, scope: !5469)
!5469 = distinct !DILexicalBlock(scope: !5470, file: !3, line: 2043, column: 9)
!5470 = distinct !DILexicalBlock(scope: !5459, file: !3, line: 2041, column: 57)
!5471 = !DILocation(line: 2043, column: 17, scope: !5469)
!5472 = !DILocation(line: 2043, column: 21, scope: !5469)
!5473 = !DILocation(line: 2043, column: 36, scope: !5469)
!5474 = !DILocation(line: 2044, column: 10, scope: !5469)
!5475 = !DILocation(line: 2044, column: 15, scope: !5469)
!5476 = !DILocation(line: 2044, column: 27, scope: !5469)
!5477 = !DILocation(line: 2044, column: 35, scope: !5469)
!5478 = !DILocation(line: 2044, column: 48, scope: !5469)
!5479 = !DILocation(line: 2045, column: 10, scope: !5469)
!5480 = !DILocation(line: 2045, column: 15, scope: !5469)
!5481 = !DILocation(line: 2045, column: 27, scope: !5469)
!5482 = !DILocation(line: 2045, column: 39, scope: !5469)
!5483 = !DILocation(line: 2043, column: 9, scope: !5470)
!5484 = !DILocation(line: 2047, column: 6, scope: !5485)
!5485 = distinct !DILexicalBlock(scope: !5469, file: !3, line: 2046, column: 5)
!5486 = !DILocation(line: 2047, column: 13, scope: !5485)
!5487 = !DILocation(line: 2047, column: 17, scope: !5485)
!5488 = !DILocation(line: 2049, column: 12, scope: !5489)
!5489 = distinct !DILexicalBlock(scope: !5485, file: !3, line: 2049, column: 10)
!5490 = !DILocation(line: 2049, column: 18, scope: !5489)
!5491 = !DILocation(line: 2049, column: 10, scope: !5485)
!5492 = !DILocation(line: 2050, column: 7, scope: !5493)
!5493 = distinct !DILexicalBlock(scope: !5489, file: !3, line: 2049, column: 40)
!5494 = !DILocation(line: 2051, column: 6, scope: !5493)
!5495 = !DILocation(line: 2053, column: 38, scope: !5485)
!5496 = !DILocation(line: 2053, column: 41, scope: !5485)
!5497 = !DILocation(line: 2053, column: 48, scope: !5485)
!5498 = !DILocation(line: 2053, column: 16, scope: !5485)
!5499 = !DILocation(line: 2053, column: 13, scope: !5485)
!5500 = !DILocation(line: 2055, column: 6, scope: !5485)
!5501 = !DILocation(line: 2055, column: 13, scope: !5485)
!5502 = !DILocation(line: 2055, column: 17, scope: !5485)
!5503 = !DILocation(line: 2056, column: 5, scope: !5485)
!5504 = !DILocation(line: 2057, column: 14, scope: !5505)
!5505 = distinct !DILexicalBlock(scope: !5469, file: !3, line: 2057, column: 14)
!5506 = !DILocation(line: 2057, column: 21, scope: !5505)
!5507 = !DILocation(line: 2057, column: 25, scope: !5505)
!5508 = !DILocation(line: 2057, column: 14, scope: !5469)
!5509 = !DILocation(line: 2058, column: 6, scope: !5510)
!5510 = distinct !DILexicalBlock(scope: !5505, file: !3, line: 2057, column: 42)
!5511 = !DILocation(line: 2058, column: 13, scope: !5510)
!5512 = !DILocation(line: 2058, column: 17, scope: !5510)
!5513 = !DILocation(line: 2059, column: 38, scope: !5510)
!5514 = !DILocation(line: 2059, column: 41, scope: !5510)
!5515 = !DILocation(line: 2059, column: 48, scope: !5510)
!5516 = !DILocation(line: 2059, column: 16, scope: !5510)
!5517 = !DILocation(line: 2059, column: 13, scope: !5510)
!5518 = !DILocation(line: 2062, column: 32, scope: !5519)
!5519 = distinct !DILexicalBlock(scope: !5510, file: !3, line: 2062, column: 10)
!5520 = !DILocation(line: 2062, column: 10, scope: !5519)
!5521 = !DILocation(line: 2062, column: 10, scope: !5510)
!5522 = !DILocation(line: 2063, column: 7, scope: !5523)
!5523 = distinct !DILexicalBlock(scope: !5519, file: !3, line: 2062, column: 41)
!5524 = !DILocation(line: 2063, column: 14, scope: !5523)
!5525 = !DILocation(line: 2063, column: 18, scope: !5523)
!5526 = !DILocation(line: 2064, column: 6, scope: !5523)
!5527 = !DILocation(line: 2065, column: 5, scope: !5510)
!5528 = !DILocation(line: 2066, column: 4, scope: !5470)
!5529 = !DILocation(line: 2067, column: 3, scope: !5441)
!5530 = !DILocalVariable(name: "win", scope: !5531, file: !3, line: 2069, type: !2567)
!5531 = distinct !DILexicalBlock(scope: !5436, file: !3, line: 2068, column: 8)
!5532 = !DILocation(line: 2069, column: 14, scope: !5531)
!5533 = !DILocation(line: 2069, column: 34, scope: !5531)
!5534 = !DILocation(line: 2069, column: 20, scope: !5531)
!5535 = !DILocation(line: 2071, column: 8, scope: !5536)
!5536 = distinct !DILexicalBlock(scope: !5531, file: !3, line: 2071, column: 8)
!5537 = !DILocation(line: 2071, column: 8, scope: !5531)
!5538 = !DILocation(line: 2072, column: 5, scope: !5536)
!5539 = !DILocation(line: 2072, column: 10, scope: !5536)
!5540 = !DILocation(line: 2072, column: 22, scope: !5536)
!5541 = !DILocation(line: 2072, column: 34, scope: !5536)
!5542 = !DILocation(line: 2074, column: 2, scope: !5437)
!5543 = !DILocation(line: 2076, column: 9, scope: !5408)
!5544 = !DILocation(line: 2076, column: 2, scope: !5408)
!5545 = !DILocation(line: 2077, column: 1, scope: !5408)
!5546 = distinct !DISubprogram(name: "wm_event_drag_test", scope: !3, file: !3, line: 2158, type: !5547, scopeLine: 2159, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!5547 = !DISubroutineType(types: !5548)
!5548 = !{null, !1543, !2567, !2552}
!5549 = !DILocalVariable(name: "wm", arg: 1, scope: !5546, file: !3, line: 2158, type: !1543)
!5550 = !DILocation(line: 2158, column: 49, scope: !5546)
!5551 = !DILocalVariable(name: "win", arg: 2, scope: !5546, file: !3, line: 2158, type: !2567)
!5552 = !DILocation(line: 2158, column: 63, scope: !5546)
!5553 = !DILocalVariable(name: "event", arg: 3, scope: !5546, file: !3, line: 2158, type: !2552)
!5554 = !DILocation(line: 2158, column: 77, scope: !5546)
!5555 = !DILocation(line: 2160, column: 29, scope: !5556)
!5556 = distinct !DILexicalBlock(scope: !5546, file: !3, line: 2160, column: 6)
!5557 = !DILocation(line: 2160, column: 33, scope: !5556)
!5558 = !DILocation(line: 2160, column: 6, scope: !5556)
!5559 = !DILocation(line: 2160, column: 6, scope: !5546)
!5560 = !DILocation(line: 2161, column: 3, scope: !5561)
!5561 = distinct !DILexicalBlock(scope: !5556, file: !3, line: 2160, column: 41)
!5562 = !DILocation(line: 2164, column: 6, scope: !5563)
!5563 = distinct !DILexicalBlock(scope: !5546, file: !3, line: 2164, column: 6)
!5564 = !DILocation(line: 2164, column: 13, scope: !5563)
!5565 = !DILocation(line: 2164, column: 18, scope: !5563)
!5566 = !DILocation(line: 2164, column: 31, scope: !5563)
!5567 = !DILocation(line: 2164, column: 34, scope: !5563)
!5568 = !DILocation(line: 2164, column: 6, scope: !5546)
!5569 = !DILocation(line: 2165, column: 3, scope: !5570)
!5570 = distinct !DILexicalBlock(scope: !5563, file: !3, line: 2164, column: 62)
!5571 = !DILocation(line: 2165, column: 8, scope: !5570)
!5572 = !DILocation(line: 2165, column: 16, scope: !5570)
!5573 = !DILocation(line: 2165, column: 29, scope: !5570)
!5574 = !DILocation(line: 2166, column: 2, scope: !5570)
!5575 = !DILocation(line: 2167, column: 11, scope: !5576)
!5576 = distinct !DILexicalBlock(scope: !5563, file: !3, line: 2167, column: 11)
!5577 = !DILocation(line: 2167, column: 18, scope: !5576)
!5578 = !DILocation(line: 2167, column: 23, scope: !5576)
!5579 = !DILocation(line: 2167, column: 11, scope: !5563)
!5580 = !DILocation(line: 2168, column: 22, scope: !5581)
!5581 = distinct !DILexicalBlock(scope: !5576, file: !3, line: 2167, column: 34)
!5582 = !DILocation(line: 2168, column: 26, scope: !5581)
!5583 = !DILocation(line: 2168, column: 3, scope: !5581)
!5584 = !DILocation(line: 2170, column: 3, scope: !5581)
!5585 = !DILocation(line: 2170, column: 8, scope: !5581)
!5586 = !DILocation(line: 2170, column: 16, scope: !5581)
!5587 = !DILocation(line: 2170, column: 29, scope: !5581)
!5588 = !DILocation(line: 2171, column: 2, scope: !5581)
!5589 = !DILocation(line: 2172, column: 11, scope: !5590)
!5590 = distinct !DILexicalBlock(scope: !5576, file: !3, line: 2172, column: 11)
!5591 = !DILocation(line: 2172, column: 18, scope: !5590)
!5592 = !DILocation(line: 2172, column: 23, scope: !5590)
!5593 = !DILocation(line: 2172, column: 36, scope: !5590)
!5594 = !DILocation(line: 2172, column: 39, scope: !5590)
!5595 = !DILocation(line: 2172, column: 46, scope: !5590)
!5596 = !DILocation(line: 2172, column: 50, scope: !5590)
!5597 = !DILocation(line: 2172, column: 11, scope: !5576)
!5598 = !DILocation(line: 2173, column: 3, scope: !5599)
!5599 = distinct !DILexicalBlock(scope: !5590, file: !3, line: 2172, column: 65)
!5600 = !DILocation(line: 2173, column: 10, scope: !5599)
!5601 = !DILocation(line: 2173, column: 15, scope: !5599)
!5602 = !DILocation(line: 2176, column: 7, scope: !5603)
!5603 = distinct !DILexicalBlock(scope: !5599, file: !3, line: 2176, column: 7)
!5604 = !DILocation(line: 2176, column: 14, scope: !5603)
!5605 = !DILocation(line: 2176, column: 7, scope: !5599)
!5606 = !DILocation(line: 2177, column: 8, scope: !5607)
!5607 = distinct !DILexicalBlock(scope: !5608, file: !3, line: 2177, column: 8)
!5608 = distinct !DILexicalBlock(scope: !5603, file: !3, line: 2176, column: 26)
!5609 = !DILocation(line: 2177, column: 15, scope: !5607)
!5610 = !DILocation(line: 2177, column: 8, scope: !5608)
!5611 = !DILocation(line: 2178, column: 5, scope: !5607)
!5612 = !DILocation(line: 2178, column: 15, scope: !5607)
!5613 = !DILocation(line: 2178, column: 22, scope: !5607)
!5614 = !DILocation(line: 2179, column: 3, scope: !5608)
!5615 = !DILocation(line: 2181, column: 3, scope: !5599)
!5616 = !DILocation(line: 2181, column: 10, scope: !5599)
!5617 = !DILocation(line: 2181, column: 17, scope: !5599)
!5618 = !DILocation(line: 2182, column: 24, scope: !5599)
!5619 = !DILocation(line: 2182, column: 28, scope: !5599)
!5620 = !DILocation(line: 2182, column: 23, scope: !5599)
!5621 = !DILocation(line: 2182, column: 3, scope: !5599)
!5622 = !DILocation(line: 2182, column: 10, scope: !5599)
!5623 = !DILocation(line: 2182, column: 21, scope: !5599)
!5624 = !DILocation(line: 2183, column: 3, scope: !5599)
!5625 = !DILocation(line: 2183, column: 10, scope: !5599)
!5626 = !DILocation(line: 2183, column: 25, scope: !5599)
!5627 = !DILocation(line: 2186, column: 3, scope: !5599)
!5628 = !DILocation(line: 2186, column: 8, scope: !5599)
!5629 = !DILocation(line: 2186, column: 16, scope: !5599)
!5630 = !DILocation(line: 2186, column: 29, scope: !5599)
!5631 = !DILocation(line: 2190, column: 2, scope: !5599)
!5632 = !DILocation(line: 2193, column: 6, scope: !5633)
!5633 = distinct !DILexicalBlock(scope: !5546, file: !3, line: 2193, column: 6)
!5634 = !DILocation(line: 2193, column: 11, scope: !5633)
!5635 = !DILocation(line: 2193, column: 19, scope: !5633)
!5636 = !DILocation(line: 2193, column: 6, scope: !5546)
!5637 = !DILocation(line: 2194, column: 7, scope: !5638)
!5638 = distinct !DILexicalBlock(scope: !5633, file: !3, line: 2194, column: 7)
!5639 = !DILocation(line: 2194, column: 12, scope: !5638)
!5640 = !DILocation(line: 2194, column: 23, scope: !5638)
!5641 = !DILocation(line: 2194, column: 7, scope: !5633)
!5642 = !DILocation(line: 2195, column: 4, scope: !5638)
!5643 = !DILocation(line: 2195, column: 9, scope: !5638)
!5644 = !DILocation(line: 2195, column: 17, scope: !5638)
!5645 = !DILocation(line: 2195, column: 25, scope: !5638)
!5646 = !DILocation(line: 2194, column: 26, scope: !5638)
!5647 = !DILocation(line: 2197, column: 1, scope: !5546)
!5648 = distinct !DISubprogram(name: "wm_paintcursor_test", scope: !3, file: !3, line: 2133, type: !5367, scopeLine: 2134, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!5649 = !DILocalVariable(name: "C", arg: 1, scope: !5648, file: !3, line: 2133, type: !2402)
!5650 = !DILocation(line: 2133, column: 43, scope: !5648)
!5651 = !DILocalVariable(name: "event", arg: 2, scope: !5648, file: !3, line: 2133, type: !2552)
!5652 = !DILocation(line: 2133, column: 55, scope: !5648)
!5653 = !DILocalVariable(name: "wm", scope: !5648, file: !3, line: 2135, type: !1543)
!5654 = !DILocation(line: 2135, column: 19, scope: !5648)
!5655 = !DILocation(line: 2135, column: 39, scope: !5648)
!5656 = !DILocation(line: 2135, column: 24, scope: !5648)
!5657 = !DILocation(line: 2137, column: 6, scope: !5658)
!5658 = distinct !DILexicalBlock(scope: !5648, file: !3, line: 2137, column: 6)
!5659 = !DILocation(line: 2137, column: 10, scope: !5658)
!5660 = !DILocation(line: 2137, column: 23, scope: !5658)
!5661 = !DILocation(line: 2137, column: 6, scope: !5648)
!5662 = !DILocalVariable(name: "ar", scope: !5663, file: !3, line: 2138, type: !2737)
!5663 = distinct !DILexicalBlock(scope: !5658, file: !3, line: 2137, column: 30)
!5664 = !DILocation(line: 2138, column: 12, scope: !5663)
!5665 = !DILocation(line: 2138, column: 31, scope: !5663)
!5666 = !DILocation(line: 2138, column: 17, scope: !5663)
!5667 = !DILocation(line: 2140, column: 7, scope: !5668)
!5668 = distinct !DILexicalBlock(scope: !5663, file: !3, line: 2140, column: 7)
!5669 = !DILocation(line: 2140, column: 7, scope: !5663)
!5670 = !DILocation(line: 2141, column: 23, scope: !5668)
!5671 = !DILocation(line: 2141, column: 26, scope: !5668)
!5672 = !DILocation(line: 2141, column: 30, scope: !5668)
!5673 = !DILocation(line: 2141, column: 43, scope: !5668)
!5674 = !DILocation(line: 2141, column: 50, scope: !5668)
!5675 = !DILocation(line: 2141, column: 4, scope: !5668)
!5676 = !DILocation(line: 2144, column: 7, scope: !5677)
!5677 = distinct !DILexicalBlock(scope: !5663, file: !3, line: 2144, column: 7)
!5678 = !DILocation(line: 2144, column: 10, scope: !5677)
!5679 = !DILocation(line: 2144, column: 18, scope: !5677)
!5680 = !DILocation(line: 2144, column: 43, scope: !5677)
!5681 = !DILocation(line: 2144, column: 47, scope: !5677)
!5682 = !DILocation(line: 2144, column: 56, scope: !5677)
!5683 = !DILocation(line: 2144, column: 63, scope: !5677)
!5684 = !DILocation(line: 2144, column: 22, scope: !5677)
!5685 = !DILocation(line: 2144, column: 7, scope: !5663)
!5686 = !DILocalVariable(name: "sa", scope: !5687, file: !3, line: 2145, type: !2201)
!5687 = distinct !DILexicalBlock(scope: !5677, file: !3, line: 2144, column: 71)
!5688 = !DILocation(line: 2145, column: 13, scope: !5687)
!5689 = !DILocation(line: 2145, column: 30, scope: !5687)
!5690 = !DILocation(line: 2145, column: 18, scope: !5687)
!5691 = !DILocation(line: 2147, column: 20, scope: !5687)
!5692 = !DILocation(line: 2147, column: 41, scope: !5687)
!5693 = !DILocation(line: 2147, column: 45, scope: !5687)
!5694 = !DILocation(line: 2147, column: 52, scope: !5687)
!5695 = !DILocation(line: 2147, column: 23, scope: !5687)
!5696 = !DILocation(line: 2147, column: 4, scope: !5687)
!5697 = !DILocation(line: 2148, column: 22, scope: !5687)
!5698 = !DILocation(line: 2148, column: 45, scope: !5687)
!5699 = !DILocation(line: 2148, column: 49, scope: !5687)
!5700 = !DILocation(line: 2148, column: 56, scope: !5687)
!5701 = !DILocation(line: 2148, column: 25, scope: !5687)
!5702 = !DILocation(line: 2148, column: 4, scope: !5687)
!5703 = !DILocation(line: 2150, column: 23, scope: !5687)
!5704 = !DILocation(line: 2150, column: 26, scope: !5687)
!5705 = !DILocation(line: 2150, column: 30, scope: !5687)
!5706 = !DILocation(line: 2150, column: 43, scope: !5687)
!5707 = !DILocation(line: 2150, column: 64, scope: !5687)
!5708 = !DILocation(line: 2150, column: 50, scope: !5687)
!5709 = !DILocation(line: 2150, column: 4, scope: !5687)
!5710 = !DILocation(line: 2152, column: 20, scope: !5687)
!5711 = !DILocation(line: 2152, column: 23, scope: !5687)
!5712 = !DILocation(line: 2152, column: 4, scope: !5687)
!5713 = !DILocation(line: 2153, column: 22, scope: !5687)
!5714 = !DILocation(line: 2153, column: 25, scope: !5687)
!5715 = !DILocation(line: 2153, column: 4, scope: !5687)
!5716 = !DILocation(line: 2154, column: 3, scope: !5687)
!5717 = !DILocation(line: 2155, column: 2, scope: !5663)
!5718 = !DILocation(line: 2156, column: 1, scope: !5648)
!5719 = distinct !DISubprogram(name: "wm_event_inside_i", scope: !3, file: !3, line: 2079, type: !5720, scopeLine: 2080, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!5720 = !DISubroutineType(types: !5721)
!5721 = !{!34, !2552, !5722}
!5722 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !1250, size: 64)
!5723 = !DILocalVariable(name: "event", arg: 1, scope: !5719, file: !3, line: 2079, type: !2552)
!5724 = !DILocation(line: 2079, column: 39, scope: !5719)
!5725 = !DILocalVariable(name: "rect", arg: 2, scope: !5719, file: !3, line: 2079, type: !5722)
!5726 = !DILocation(line: 2079, column: 52, scope: !5719)
!5727 = !DILocation(line: 2081, column: 27, scope: !5728)
!5728 = distinct !DILexicalBlock(scope: !5719, file: !3, line: 2081, column: 6)
!5729 = !DILocation(line: 2081, column: 6, scope: !5728)
!5730 = !DILocation(line: 2081, column: 6, scope: !5719)
!5731 = !DILocation(line: 2082, column: 3, scope: !5728)
!5732 = !DILocation(line: 2083, column: 26, scope: !5733)
!5733 = distinct !DILexicalBlock(scope: !5719, file: !3, line: 2083, column: 6)
!5734 = !DILocation(line: 2083, column: 33, scope: !5733)
!5735 = !DILocation(line: 2083, column: 40, scope: !5733)
!5736 = !DILocation(line: 2083, column: 6, scope: !5733)
!5737 = !DILocation(line: 2083, column: 6, scope: !5719)
!5738 = !DILocation(line: 2084, column: 3, scope: !5733)
!5739 = !DILocation(line: 2085, column: 6, scope: !5740)
!5740 = distinct !DILexicalBlock(scope: !5719, file: !3, line: 2085, column: 6)
!5741 = !DILocation(line: 2085, column: 13, scope: !5740)
!5742 = !DILocation(line: 2085, column: 18, scope: !5740)
!5743 = !DILocation(line: 2085, column: 6, scope: !5719)
!5744 = !DILocation(line: 2086, column: 27, scope: !5745)
!5745 = distinct !DILexicalBlock(scope: !5746, file: !3, line: 2086, column: 7)
!5746 = distinct !DILexicalBlock(scope: !5740, file: !3, line: 2085, column: 32)
!5747 = !DILocation(line: 2086, column: 34, scope: !5745)
!5748 = !DILocation(line: 2086, column: 41, scope: !5745)
!5749 = !DILocation(line: 2086, column: 7, scope: !5745)
!5750 = !DILocation(line: 2086, column: 7, scope: !5746)
!5751 = !DILocation(line: 2087, column: 4, scope: !5752)
!5752 = distinct !DILexicalBlock(scope: !5745, file: !3, line: 2086, column: 49)
!5753 = !DILocation(line: 2089, column: 3, scope: !5746)
!5754 = !DILocation(line: 2091, column: 2, scope: !5719)
!5755 = !DILocation(line: 2092, column: 1, scope: !5719)
!5756 = distinct !DISubprogram(name: "BLI_listbase_is_empty", scope: !5757, file: !5757, line: 88, type: !5758, scopeLine: 88, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!5757 = !DIFile(filename: "blender/source/blender/blenlib/BLI_listbase.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!5758 = !DISubroutineType(types: !5759)
!5759 = !{!73, !5760}
!5760 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !5761, size: 64)
!5761 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !44)
!5762 = !DILocalVariable(name: "lb", arg: 1, scope: !5756, file: !5757, line: 88, type: !5760)
!5763 = !DILocation(line: 88, column: 62, scope: !5756)
!5764 = !DILocation(line: 88, column: 76, scope: !5756)
!5765 = !DILocation(line: 88, column: 80, scope: !5756)
!5766 = !DILocation(line: 88, column: 86, scope: !5756)
!5767 = !DILocation(line: 88, column: 75, scope: !5756)
!5768 = !DILocation(line: 88, column: 68, scope: !5756)
!5769 = distinct !DISubprogram(name: "WM_event_fileselect_event", scope: !3, file: !3, line: 2443, type: !5770, scopeLine: 2444, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!5770 = !DISubroutineType(types: !5771)
!5771 = !{null, !1543, !40, !34}
!5772 = !DILocalVariable(name: "wm", arg: 1, scope: !5769, file: !3, line: 2443, type: !1543)
!5773 = !DILocation(line: 2443, column: 49, scope: !5769)
!5774 = !DILocalVariable(name: "ophandle", arg: 2, scope: !5769, file: !3, line: 2443, type: !40)
!5775 = !DILocation(line: 2443, column: 59, scope: !5769)
!5776 = !DILocalVariable(name: "eventval", arg: 3, scope: !5769, file: !3, line: 2443, type: !34)
!5777 = !DILocation(line: 2443, column: 73, scope: !5769)
!5778 = !DILocalVariable(name: "win", scope: !5769, file: !3, line: 2446, type: !2567)
!5779 = !DILocation(line: 2446, column: 12, scope: !5769)
!5780 = !DILocation(line: 2448, column: 13, scope: !5781)
!5781 = distinct !DILexicalBlock(scope: !5769, file: !3, line: 2448, column: 2)
!5782 = !DILocation(line: 2448, column: 17, scope: !5781)
!5783 = !DILocation(line: 2448, column: 25, scope: !5781)
!5784 = !DILocation(line: 2448, column: 11, scope: !5781)
!5785 = !DILocation(line: 2448, column: 7, scope: !5781)
!5786 = !DILocation(line: 2448, column: 32, scope: !5787)
!5787 = distinct !DILexicalBlock(scope: !5781, file: !3, line: 2448, column: 2)
!5788 = !DILocation(line: 2448, column: 2, scope: !5781)
!5789 = !DILocalVariable(name: "event", scope: !5790, file: !3, line: 2449, type: !2553)
!5790 = distinct !DILexicalBlock(scope: !5787, file: !3, line: 2448, column: 54)
!5791 = !DILocation(line: 2449, column: 11, scope: !5790)
!5792 = !DILocation(line: 2449, column: 20, scope: !5790)
!5793 = !DILocation(line: 2449, column: 25, scope: !5790)
!5794 = !DILocation(line: 2449, column: 19, scope: !5790)
!5795 = !DILocation(line: 2451, column: 9, scope: !5790)
!5796 = !DILocation(line: 2451, column: 14, scope: !5790)
!5797 = !DILocation(line: 2452, column: 15, scope: !5790)
!5798 = !DILocation(line: 2452, column: 9, scope: !5790)
!5799 = !DILocation(line: 2452, column: 13, scope: !5790)
!5800 = !DILocation(line: 2453, column: 22, scope: !5790)
!5801 = !DILocation(line: 2453, column: 9, scope: !5790)
!5802 = !DILocation(line: 2453, column: 20, scope: !5790)
!5803 = !DILocation(line: 2455, column: 16, scope: !5790)
!5804 = !DILocation(line: 2455, column: 3, scope: !5790)
!5805 = !DILocation(line: 2456, column: 2, scope: !5790)
!5806 = !DILocation(line: 2448, column: 43, scope: !5787)
!5807 = !DILocation(line: 2448, column: 48, scope: !5787)
!5808 = !DILocation(line: 2448, column: 41, scope: !5787)
!5809 = !DILocation(line: 2448, column: 2, scope: !5787)
!5810 = distinct !{!5810, !5788, !5811}
!5811 = !DILocation(line: 2456, column: 2, scope: !5781)
!5812 = !DILocation(line: 2457, column: 1, scope: !5769)
!5813 = distinct !DISubprogram(name: "WM_event_add_fileselect", scope: !3, file: !3, line: 2467, type: !5814, scopeLine: 2468, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!5814 = !DISubroutineType(types: !5815)
!5815 = !{null, !2402, !6}
!5816 = !DILocalVariable(name: "C", arg: 1, scope: !5813, file: !3, line: 2467, type: !2402)
!5817 = !DILocation(line: 2467, column: 40, scope: !5813)
!5818 = !DILocalVariable(name: "op", arg: 2, scope: !5813, file: !3, line: 2467, type: !6)
!5819 = !DILocation(line: 2467, column: 55, scope: !5813)
!5820 = !DILocalVariable(name: "handler", scope: !5813, file: !3, line: 2469, type: !2404)
!5821 = !DILocation(line: 2469, column: 18, scope: !5813)
!5822 = !DILocalVariable(name: "handlernext", scope: !5813, file: !3, line: 2469, type: !2404)
!5823 = !DILocation(line: 2469, column: 28, scope: !5813)
!5824 = !DILocalVariable(name: "wm", scope: !5813, file: !3, line: 2470, type: !1543)
!5825 = !DILocation(line: 2470, column: 19, scope: !5813)
!5826 = !DILocation(line: 2470, column: 39, scope: !5813)
!5827 = !DILocation(line: 2470, column: 24, scope: !5813)
!5828 = !DILocalVariable(name: "win", scope: !5813, file: !3, line: 2471, type: !2567)
!5829 = !DILocation(line: 2471, column: 12, scope: !5813)
!5830 = !DILocation(line: 2471, column: 32, scope: !5813)
!5831 = !DILocation(line: 2471, column: 18, scope: !5813)
!5832 = !DILocalVariable(name: "full", scope: !5813, file: !3, line: 2472, type: !34)
!5833 = !DILocation(line: 2472, column: 6, scope: !5813)
!5834 = !DILocation(line: 2475, column: 17, scope: !5835)
!5835 = distinct !DILexicalBlock(scope: !5813, file: !3, line: 2475, column: 2)
!5836 = !DILocation(line: 2475, column: 22, scope: !5835)
!5837 = !DILocation(line: 2475, column: 36, scope: !5835)
!5838 = !DILocation(line: 2475, column: 15, scope: !5835)
!5839 = !DILocation(line: 2475, column: 7, scope: !5835)
!5840 = !DILocation(line: 2475, column: 43, scope: !5841)
!5841 = distinct !DILexicalBlock(scope: !5835, file: !3, line: 2475, column: 2)
!5842 = !DILocation(line: 2475, column: 2, scope: !5835)
!5843 = !DILocation(line: 2476, column: 17, scope: !5844)
!5844 = distinct !DILexicalBlock(scope: !5841, file: !3, line: 2475, column: 75)
!5845 = !DILocation(line: 2476, column: 26, scope: !5844)
!5846 = !DILocation(line: 2476, column: 15, scope: !5844)
!5847 = !DILocation(line: 2478, column: 7, scope: !5848)
!5848 = distinct !DILexicalBlock(scope: !5844, file: !3, line: 2478, column: 7)
!5849 = !DILocation(line: 2478, column: 16, scope: !5848)
!5850 = !DILocation(line: 2478, column: 21, scope: !5848)
!5851 = !DILocation(line: 2478, column: 7, scope: !5844)
!5852 = !DILocalVariable(name: "screen", scope: !5853, file: !3, line: 2479, type: !2229)
!5853 = distinct !DILexicalBlock(scope: !5848, file: !3, line: 2478, column: 47)
!5854 = !DILocation(line: 2479, column: 13, scope: !5853)
!5855 = !DILocation(line: 2479, column: 36, scope: !5853)
!5856 = !DILocation(line: 2479, column: 22, scope: !5853)
!5857 = !DILocalVariable(name: "sa", scope: !5853, file: !3, line: 2480, type: !2201)
!5858 = !DILocation(line: 2480, column: 13, scope: !5853)
!5859 = !DILocation(line: 2483, column: 14, scope: !5860)
!5860 = distinct !DILexicalBlock(scope: !5853, file: !3, line: 2483, column: 4)
!5861 = !DILocation(line: 2483, column: 22, scope: !5860)
!5862 = !DILocation(line: 2483, column: 31, scope: !5860)
!5863 = !DILocation(line: 2483, column: 12, scope: !5860)
!5864 = !DILocation(line: 2483, column: 9, scope: !5860)
!5865 = !DILocation(line: 2483, column: 38, scope: !5866)
!5866 = distinct !DILexicalBlock(scope: !5860, file: !3, line: 2483, column: 4)
!5867 = !DILocation(line: 2483, column: 4, scope: !5860)
!5868 = !DILocation(line: 2484, column: 9, scope: !5869)
!5869 = distinct !DILexicalBlock(scope: !5870, file: !3, line: 2484, column: 9)
!5870 = distinct !DILexicalBlock(scope: !5866, file: !3, line: 2483, column: 57)
!5871 = !DILocation(line: 2484, column: 13, scope: !5869)
!5872 = !DILocation(line: 2484, column: 23, scope: !5869)
!5873 = !DILocation(line: 2484, column: 9, scope: !5870)
!5874 = !DILocalVariable(name: "sfile", scope: !5875, file: !3, line: 2485, type: !2325)
!5875 = distinct !DILexicalBlock(scope: !5869, file: !3, line: 2484, column: 38)
!5876 = !DILocation(line: 2485, column: 17, scope: !5875)
!5877 = !DILocation(line: 2485, column: 25, scope: !5875)
!5878 = !DILocation(line: 2485, column: 29, scope: !5875)
!5879 = !DILocation(line: 2485, column: 39, scope: !5875)
!5880 = !DILocation(line: 2487, column: 10, scope: !5881)
!5881 = distinct !DILexicalBlock(scope: !5875, file: !3, line: 2487, column: 10)
!5882 = !DILocation(line: 2487, column: 17, scope: !5881)
!5883 = !DILocation(line: 2487, column: 23, scope: !5881)
!5884 = !DILocation(line: 2487, column: 32, scope: !5881)
!5885 = !DILocation(line: 2487, column: 20, scope: !5881)
!5886 = !DILocation(line: 2487, column: 10, scope: !5875)
!5887 = !DILocation(line: 2488, column: 23, scope: !5888)
!5888 = distinct !DILexicalBlock(scope: !5881, file: !3, line: 2487, column: 36)
!5889 = !DILocation(line: 2488, column: 26, scope: !5888)
!5890 = !DILocation(line: 2488, column: 7, scope: !5888)
!5891 = !DILocation(line: 2489, column: 32, scope: !5888)
!5892 = !DILocation(line: 2489, column: 36, scope: !5888)
!5893 = !DILocation(line: 2489, column: 41, scope: !5888)
!5894 = !DILocation(line: 2489, column: 56, scope: !5888)
!5895 = !DILocation(line: 2489, column: 7, scope: !5888)
!5896 = !DILocation(line: 2490, column: 7, scope: !5888)
!5897 = !DILocation(line: 2492, column: 5, scope: !5875)
!5898 = !DILocation(line: 2493, column: 4, scope: !5870)
!5899 = !DILocation(line: 2483, column: 47, scope: !5866)
!5900 = !DILocation(line: 2483, column: 51, scope: !5866)
!5901 = !DILocation(line: 2483, column: 45, scope: !5866)
!5902 = !DILocation(line: 2483, column: 4, scope: !5866)
!5903 = distinct !{!5903, !5867, !5904}
!5904 = !DILocation(line: 2493, column: 4, scope: !5860)
!5905 = !DILocation(line: 2496, column: 9, scope: !5906)
!5906 = distinct !DILexicalBlock(scope: !5853, file: !3, line: 2496, column: 8)
!5907 = !DILocation(line: 2496, column: 8, scope: !5853)
!5908 = !DILocation(line: 2497, column: 30, scope: !5906)
!5909 = !DILocation(line: 2497, column: 34, scope: !5906)
!5910 = !DILocation(line: 2497, column: 39, scope: !5906)
!5911 = !DILocation(line: 2497, column: 54, scope: !5906)
!5912 = !DILocation(line: 2497, column: 5, scope: !5906)
!5913 = !DILocation(line: 2498, column: 3, scope: !5853)
!5914 = !DILocation(line: 2499, column: 2, scope: !5844)
!5915 = !DILocation(line: 2475, column: 62, scope: !5841)
!5916 = !DILocation(line: 2475, column: 60, scope: !5841)
!5917 = !DILocation(line: 2475, column: 2, scope: !5841)
!5918 = distinct !{!5918, !5842, !5919}
!5919 = !DILocation(line: 2499, column: 2, scope: !5835)
!5920 = !DILocation(line: 2501, column: 12, scope: !5813)
!5921 = !DILocation(line: 2501, column: 10, scope: !5813)
!5922 = !DILocation(line: 2503, column: 2, scope: !5813)
!5923 = !DILocation(line: 2503, column: 11, scope: !5813)
!5924 = !DILocation(line: 2503, column: 16, scope: !5813)
!5925 = !DILocation(line: 2504, column: 16, scope: !5813)
!5926 = !DILocation(line: 2504, column: 2, scope: !5813)
!5927 = !DILocation(line: 2504, column: 11, scope: !5813)
!5928 = !DILocation(line: 2504, column: 14, scope: !5813)
!5929 = !DILocation(line: 2505, column: 33, scope: !5813)
!5930 = !DILocation(line: 2505, column: 21, scope: !5813)
!5931 = !DILocation(line: 2505, column: 2, scope: !5813)
!5932 = !DILocation(line: 2505, column: 11, scope: !5813)
!5933 = !DILocation(line: 2505, column: 19, scope: !5813)
!5934 = !DILocation(line: 2506, column: 37, scope: !5813)
!5935 = !DILocation(line: 2506, column: 23, scope: !5813)
!5936 = !DILocation(line: 2506, column: 2, scope: !5813)
!5937 = !DILocation(line: 2506, column: 11, scope: !5813)
!5938 = !DILocation(line: 2506, column: 21, scope: !5813)
!5939 = !DILocation(line: 2507, column: 38, scope: !5813)
!5940 = !DILocation(line: 2507, column: 24, scope: !5813)
!5941 = !DILocation(line: 2507, column: 2, scope: !5813)
!5942 = !DILocation(line: 2507, column: 11, scope: !5813)
!5943 = !DILocation(line: 2507, column: 22, scope: !5813)
!5944 = !DILocation(line: 2509, column: 15, scope: !5813)
!5945 = !DILocation(line: 2509, column: 20, scope: !5813)
!5946 = !DILocation(line: 2509, column: 35, scope: !5813)
!5947 = !DILocation(line: 2509, column: 2, scope: !5813)
!5948 = !DILocation(line: 2513, column: 6, scope: !5949)
!5949 = distinct !DILexicalBlock(scope: !5813, file: !3, line: 2513, column: 6)
!5950 = !DILocation(line: 2513, column: 10, scope: !5949)
!5951 = !DILocation(line: 2513, column: 16, scope: !5949)
!5952 = !DILocation(line: 2513, column: 6, scope: !5813)
!5953 = !DILocation(line: 2514, column: 3, scope: !5954)
!5954 = distinct !DILexicalBlock(scope: !5949, file: !3, line: 2513, column: 23)
!5955 = !DILocation(line: 2514, column: 7, scope: !5954)
!5956 = !DILocation(line: 2514, column: 13, scope: !5954)
!5957 = !DILocation(line: 2514, column: 19, scope: !5954)
!5958 = !DILocation(line: 2514, column: 22, scope: !5954)
!5959 = !DILocation(line: 2515, column: 2, scope: !5954)
!5960 = !DILocation(line: 2517, column: 28, scope: !5813)
!5961 = !DILocation(line: 2517, column: 32, scope: !5813)
!5962 = !DILocation(line: 2517, column: 36, scope: !5813)
!5963 = !DILocation(line: 2517, column: 2, scope: !5813)
!5964 = !DILocation(line: 2518, column: 1, scope: !5813)
!5965 = distinct !DISubprogram(name: "wm_handler_fileselect_do", scope: !3, file: !3, line: 1659, type: !5966, scopeLine: 1660, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!5966 = !DISubroutineType(types: !5967)
!5967 = !{!34, !2402, !401, !2404, !34}
!5968 = !DILocalVariable(name: "C", arg: 1, scope: !5965, file: !3, line: 1659, type: !2402)
!5969 = !DILocation(line: 1659, column: 47, scope: !5965)
!5970 = !DILocalVariable(name: "handlers", arg: 2, scope: !5965, file: !3, line: 1659, type: !401)
!5971 = !DILocation(line: 1659, column: 60, scope: !5965)
!5972 = !DILocalVariable(name: "handler", arg: 3, scope: !5965, file: !3, line: 1659, type: !2404)
!5973 = !DILocation(line: 1659, column: 86, scope: !5965)
!5974 = !DILocalVariable(name: "val", arg: 4, scope: !5965, file: !3, line: 1659, type: !34)
!5975 = !DILocation(line: 1659, column: 99, scope: !5965)
!5976 = !DILocalVariable(name: "wm", scope: !5965, file: !3, line: 1661, type: !1543)
!5977 = !DILocation(line: 1661, column: 19, scope: !5965)
!5978 = !DILocation(line: 1661, column: 39, scope: !5965)
!5979 = !DILocation(line: 1661, column: 24, scope: !5965)
!5980 = !DILocalVariable(name: "sfile", scope: !5965, file: !3, line: 1662, type: !2325)
!5981 = !DILocation(line: 1662, column: 13, scope: !5965)
!5982 = !DILocalVariable(name: "action", scope: !5965, file: !3, line: 1663, type: !34)
!5983 = !DILocation(line: 1663, column: 6, scope: !5965)
!5984 = !DILocation(line: 1665, column: 10, scope: !5965)
!5985 = !DILocation(line: 1665, column: 2, scope: !5965)
!5986 = !DILocalVariable(name: "sa", scope: !5987, file: !3, line: 1669, type: !2201)
!5987 = distinct !DILexicalBlock(scope: !5988, file: !3, line: 1668, column: 3)
!5988 = distinct !DILexicalBlock(scope: !5965, file: !3, line: 1665, column: 15)
!5989 = !DILocation(line: 1669, column: 13, scope: !5987)
!5990 = !DILocation(line: 1673, column: 8, scope: !5991)
!5991 = distinct !DILexicalBlock(scope: !5987, file: !3, line: 1673, column: 8)
!5992 = !DILocation(line: 1673, column: 17, scope: !5991)
!5993 = !DILocation(line: 1673, column: 25, scope: !5991)
!5994 = !DILocation(line: 1673, column: 8, scope: !5987)
!5995 = !DILocalVariable(name: "screen", scope: !5996, file: !3, line: 1674, type: !2229)
!5996 = distinct !DILexicalBlock(scope: !5991, file: !3, line: 1673, column: 34)
!5997 = !DILocation(line: 1674, column: 14, scope: !5996)
!5998 = !DILocation(line: 1674, column: 37, scope: !5996)
!5999 = !DILocation(line: 1674, column: 23, scope: !5996)
!6000 = !DILocation(line: 1675, column: 21, scope: !5996)
!6001 = !DILocation(line: 1675, column: 29, scope: !5996)
!6002 = !DILocation(line: 1675, column: 38, scope: !5996)
!6003 = !DILocation(line: 1675, column: 10, scope: !5996)
!6004 = !DILocation(line: 1675, column: 8, scope: !5996)
!6005 = !DILocation(line: 1676, column: 4, scope: !5996)
!6006 = !DILocation(line: 1678, column: 10, scope: !6007)
!6007 = distinct !DILexicalBlock(scope: !5991, file: !3, line: 1677, column: 9)
!6008 = !DILocation(line: 1678, column: 19, scope: !6007)
!6009 = !DILocation(line: 1678, column: 8, scope: !6007)
!6010 = !DILocation(line: 1681, column: 8, scope: !6011)
!6011 = distinct !DILexicalBlock(scope: !5987, file: !3, line: 1681, column: 8)
!6012 = !DILocation(line: 1681, column: 12, scope: !6011)
!6013 = !DILocation(line: 1681, column: 8, scope: !5987)
!6014 = !DILocation(line: 1682, column: 22, scope: !6015)
!6015 = distinct !DILexicalBlock(scope: !6011, file: !3, line: 1681, column: 36)
!6016 = !DILocation(line: 1682, column: 25, scope: !6015)
!6017 = !DILocation(line: 1682, column: 5, scope: !6015)
!6018 = !DILocation(line: 1683, column: 4, scope: !6015)
!6019 = !DILocation(line: 1685, column: 34, scope: !6020)
!6020 = distinct !DILexicalBlock(scope: !6011, file: !3, line: 1684, column: 9)
!6021 = !DILocation(line: 1685, column: 37, scope: !6020)
!6022 = !DILocation(line: 1685, column: 10, scope: !6020)
!6023 = !DILocation(line: 1685, column: 8, scope: !6020)
!6024 = !DILocation(line: 1693, column: 25, scope: !5987)
!6025 = !DILocation(line: 1693, column: 29, scope: !5987)
!6026 = !DILocation(line: 1693, column: 39, scope: !5987)
!6027 = !DILocation(line: 1693, column: 12, scope: !5987)
!6028 = !DILocation(line: 1693, column: 10, scope: !5987)
!6029 = !DILocation(line: 1694, column: 16, scope: !5987)
!6030 = !DILocation(line: 1694, column: 25, scope: !5987)
!6031 = !DILocation(line: 1694, column: 4, scope: !5987)
!6032 = !DILocation(line: 1694, column: 11, scope: !5987)
!6033 = !DILocation(line: 1694, column: 14, scope: !5987)
!6034 = !DILocation(line: 1696, column: 29, scope: !5987)
!6035 = !DILocation(line: 1696, column: 4, scope: !5987)
!6036 = !DILocation(line: 1698, column: 11, scope: !5987)
!6037 = !DILocation(line: 1699, column: 4, scope: !5987)
!6038 = !DILocalVariable(name: "screen", scope: !6039, file: !3, line: 1707, type: !2229)
!6039 = distinct !DILexicalBlock(scope: !5988, file: !3, line: 1705, column: 3)
!6040 = !DILocation(line: 1707, column: 13, scope: !6039)
!6041 = !DILocation(line: 1707, column: 36, scope: !6039)
!6042 = !DILocation(line: 1707, column: 22, scope: !6039)
!6043 = !DILocation(line: 1710, column: 16, scope: !6039)
!6044 = !DILocation(line: 1710, column: 26, scope: !6039)
!6045 = !DILocation(line: 1710, column: 4, scope: !6039)
!6046 = !DILocation(line: 1712, column: 8, scope: !6047)
!6047 = distinct !DILexicalBlock(scope: !6039, file: !3, line: 1712, column: 8)
!6048 = !DILocation(line: 1712, column: 12, scope: !6047)
!6049 = !DILocation(line: 1712, column: 8, scope: !6039)
!6050 = !DILocation(line: 1713, column: 9, scope: !6051)
!6051 = distinct !DILexicalBlock(scope: !6052, file: !3, line: 1713, column: 9)
!6052 = distinct !DILexicalBlock(scope: !6047, file: !3, line: 1712, column: 47)
!6053 = !DILocation(line: 1713, column: 19, scope: !6051)
!6054 = !DILocation(line: 1713, column: 28, scope: !6051)
!6055 = !DILocation(line: 1713, column: 16, scope: !6051)
!6056 = !DILocation(line: 1713, column: 9, scope: !6052)
!6057 = !DILocation(line: 1714, column: 31, scope: !6058)
!6058 = distinct !DILexicalBlock(scope: !6051, file: !3, line: 1713, column: 40)
!6059 = !DILocation(line: 1714, column: 46, scope: !6058)
!6060 = !DILocation(line: 1714, column: 34, scope: !6058)
!6061 = !DILocation(line: 1714, column: 6, scope: !6058)
!6062 = !DILocation(line: 1715, column: 5, scope: !6058)
!6063 = !DILocation(line: 1717, column: 24, scope: !6064)
!6064 = distinct !DILexicalBlock(scope: !6051, file: !3, line: 1716, column: 10)
!6065 = !DILocation(line: 1717, column: 39, scope: !6064)
!6066 = !DILocation(line: 1717, column: 27, scope: !6064)
!6067 = !DILocation(line: 1717, column: 6, scope: !6064)
!6068 = !DILocation(line: 1719, column: 4, scope: !6052)
!6069 = !DILocation(line: 1721, column: 26, scope: !6039)
!6070 = !DILocation(line: 1721, column: 29, scope: !6039)
!6071 = !DILocation(line: 1721, column: 4, scope: !6039)
!6072 = !DILocation(line: 1725, column: 8, scope: !6073)
!6073 = distinct !DILexicalBlock(scope: !6039, file: !3, line: 1725, column: 8)
!6074 = !DILocation(line: 1725, column: 12, scope: !6073)
!6075 = !DILocation(line: 1725, column: 8, scope: !6039)
!6076 = !DILocalVariable(name: "retval", scope: !6077, file: !3, line: 1726, type: !34)
!6077 = distinct !DILexicalBlock(scope: !6073, file: !3, line: 1725, column: 36)
!6078 = !DILocation(line: 1726, column: 9, scope: !6077)
!6079 = !DILocation(line: 1728, column: 9, scope: !6080)
!6080 = distinct !DILexicalBlock(scope: !6077, file: !3, line: 1728, column: 9)
!6081 = !DILocation(line: 1728, column: 18, scope: !6080)
!6082 = !DILocation(line: 1728, column: 22, scope: !6080)
!6083 = !DILocation(line: 1728, column: 28, scope: !6080)
!6084 = !DILocation(line: 1728, column: 33, scope: !6080)
!6085 = !DILocation(line: 1728, column: 9, scope: !6077)
!6086 = !DILocation(line: 1729, column: 6, scope: !6080)
!6087 = !DILocation(line: 1729, column: 10, scope: !6080)
!6088 = !DILocation(line: 1729, column: 23, scope: !6080)
!6089 = !DILocation(line: 1731, column: 14, scope: !6077)
!6090 = !DILocation(line: 1731, column: 23, scope: !6077)
!6091 = !DILocation(line: 1731, column: 27, scope: !6077)
!6092 = !DILocation(line: 1731, column: 33, scope: !6077)
!6093 = !DILocation(line: 1731, column: 38, scope: !6077)
!6094 = !DILocation(line: 1731, column: 41, scope: !6077)
!6095 = !DILocation(line: 1731, column: 50, scope: !6077)
!6096 = !DILocation(line: 1731, column: 12, scope: !6077)
!6097 = !DILocation(line: 1734, column: 9, scope: !6098)
!6098 = distinct !DILexicalBlock(scope: !6077, file: !3, line: 1734, column: 9)
!6099 = !DILocation(line: 1734, column: 18, scope: !6098)
!6100 = !DILocation(line: 1734, column: 22, scope: !6098)
!6101 = !DILocation(line: 1734, column: 28, scope: !6098)
!6102 = !DILocation(line: 1734, column: 33, scope: !6098)
!6103 = !DILocation(line: 1734, column: 47, scope: !6098)
!6104 = !DILocation(line: 1734, column: 65, scope: !6098)
!6105 = !DILocation(line: 1734, column: 50, scope: !6098)
!6106 = !DILocation(line: 1734, column: 71, scope: !6098)
!6107 = !DILocation(line: 1734, column: 68, scope: !6098)
!6108 = !DILocation(line: 1734, column: 9, scope: !6077)
!6109 = !DILocation(line: 1735, column: 6, scope: !6098)
!6110 = !DILocation(line: 1735, column: 10, scope: !6098)
!6111 = !DILocation(line: 1735, column: 23, scope: !6098)
!6112 = !DILocation(line: 1738, column: 24, scope: !6113)
!6113 = distinct !DILexicalBlock(scope: !6077, file: !3, line: 1738, column: 9)
!6114 = !DILocation(line: 1738, column: 9, scope: !6113)
!6115 = !DILocation(line: 1738, column: 30, scope: !6113)
!6116 = !DILocation(line: 1738, column: 27, scope: !6113)
!6117 = !DILocation(line: 1738, column: 33, scope: !6113)
!6118 = !DILocation(line: 1738, column: 36, scope: !6113)
!6119 = !DILocation(line: 1738, column: 40, scope: !6113)
!6120 = !DILocation(line: 1738, column: 54, scope: !6113)
!6121 = !DILocation(line: 1738, column: 9, scope: !6077)
!6122 = !DILocation(line: 1739, column: 10, scope: !6123)
!6123 = distinct !DILexicalBlock(scope: !6113, file: !3, line: 1739, column: 10)
!6124 = !DILocation(line: 1739, column: 19, scope: !6123)
!6125 = !DILocation(line: 1739, column: 23, scope: !6123)
!6126 = !DILocation(line: 1739, column: 29, scope: !6123)
!6127 = !DILocation(line: 1739, column: 34, scope: !6123)
!6128 = !DILocation(line: 1739, column: 10, scope: !6113)
!6129 = !DILocation(line: 1740, column: 23, scope: !6123)
!6130 = !DILocation(line: 1740, column: 26, scope: !6123)
!6131 = !DILocation(line: 1740, column: 35, scope: !6123)
!6132 = !DILocation(line: 1740, column: 7, scope: !6123)
!6133 = !DILocation(line: 1739, column: 36, scope: !6123)
!6134 = !DILocation(line: 1742, column: 9, scope: !6135)
!6135 = distinct !DILexicalBlock(scope: !6077, file: !3, line: 1742, column: 9)
!6136 = !DILocation(line: 1742, column: 18, scope: !6135)
!6137 = !DILocation(line: 1742, column: 22, scope: !6135)
!6138 = !DILocation(line: 1742, column: 31, scope: !6135)
!6139 = !DILocation(line: 1742, column: 36, scope: !6135)
!6140 = !DILocation(line: 1742, column: 9, scope: !6077)
!6141 = !DILocalVariable(name: "win_prev", scope: !6142, file: !3, line: 1747, type: !2567)
!6142 = distinct !DILexicalBlock(scope: !6135, file: !3, line: 1742, column: 43)
!6143 = !DILocation(line: 1747, column: 16, scope: !6142)
!6144 = !DILocation(line: 1747, column: 41, scope: !6142)
!6145 = !DILocation(line: 1747, column: 27, scope: !6142)
!6146 = !DILocalVariable(name: "area_prev", scope: !6142, file: !3, line: 1748, type: !2201)
!6147 = !DILocation(line: 1748, column: 15, scope: !6142)
!6148 = !DILocation(line: 1748, column: 39, scope: !6142)
!6149 = !DILocation(line: 1748, column: 27, scope: !6142)
!6150 = !DILocalVariable(name: "ar_prev", scope: !6142, file: !3, line: 1749, type: !2737)
!6151 = !DILocation(line: 1749, column: 15, scope: !6142)
!6152 = !DILocation(line: 1749, column: 39, scope: !6142)
!6153 = !DILocation(line: 1749, column: 25, scope: !6142)
!6154 = !DILocation(line: 1751, column: 10, scope: !6155)
!6155 = distinct !DILexicalBlock(scope: !6142, file: !3, line: 1751, column: 10)
!6156 = !DILocation(line: 1751, column: 19, scope: !6155)
!6157 = !DILocation(line: 1751, column: 10, scope: !6142)
!6158 = !DILocation(line: 1752, column: 25, scope: !6155)
!6159 = !DILocation(line: 1752, column: 43, scope: !6155)
!6160 = !DILocation(line: 1752, column: 28, scope: !6155)
!6161 = !DILocation(line: 1752, column: 47, scope: !6155)
!6162 = !DILocation(line: 1752, column: 55, scope: !6155)
!6163 = !DILocation(line: 1752, column: 7, scope: !6155)
!6164 = !DILocation(line: 1754, column: 33, scope: !6142)
!6165 = !DILocation(line: 1754, column: 42, scope: !6142)
!6166 = !DILocation(line: 1754, column: 46, scope: !6142)
!6167 = !DILocation(line: 1754, column: 6, scope: !6142)
!6168 = !DILocation(line: 1755, column: 23, scope: !6142)
!6169 = !DILocation(line: 1755, column: 26, scope: !6142)
!6170 = !DILocation(line: 1755, column: 35, scope: !6142)
!6171 = !DILocation(line: 1755, column: 39, scope: !6142)
!6172 = !DILocation(line: 1755, column: 6, scope: !6142)
!6173 = !DILocation(line: 1759, column: 41, scope: !6142)
!6174 = !DILocation(line: 1759, column: 26, scope: !6142)
!6175 = !DILocation(line: 1759, column: 45, scope: !6142)
!6176 = !DILocation(line: 1759, column: 52, scope: !6142)
!6177 = !DILocation(line: 1759, column: 61, scope: !6142)
!6178 = !DILocation(line: 1759, column: 65, scope: !6142)
!6179 = !DILocation(line: 1759, column: 74, scope: !6142)
!6180 = !DILocation(line: 1759, column: 6, scope: !6142)
!6181 = !DILocation(line: 1761, column: 24, scope: !6142)
!6182 = !DILocation(line: 1761, column: 27, scope: !6142)
!6183 = !DILocation(line: 1761, column: 6, scope: !6142)
!6184 = !DILocation(line: 1762, column: 22, scope: !6142)
!6185 = !DILocation(line: 1762, column: 25, scope: !6142)
!6186 = !DILocation(line: 1762, column: 6, scope: !6142)
!6187 = !DILocation(line: 1763, column: 24, scope: !6142)
!6188 = !DILocation(line: 1763, column: 27, scope: !6142)
!6189 = !DILocation(line: 1763, column: 6, scope: !6142)
!6190 = !DILocation(line: 1764, column: 5, scope: !6142)
!6191 = !DILocation(line: 1767, column: 25, scope: !6077)
!6192 = !DILocation(line: 1767, column: 28, scope: !6077)
!6193 = !DILocation(line: 1767, column: 37, scope: !6077)
!6194 = !DILocation(line: 1767, column: 41, scope: !6077)
!6195 = !DILocation(line: 1767, column: 5, scope: !6077)
!6196 = !DILocation(line: 1769, column: 9, scope: !6197)
!6197 = distinct !DILexicalBlock(scope: !6077, file: !3, line: 1769, column: 9)
!6198 = !DILocation(line: 1769, column: 16, scope: !6197)
!6199 = !DILocation(line: 1769, column: 9, scope: !6077)
!6200 = !DILocation(line: 1770, column: 40, scope: !6201)
!6201 = distinct !DILexicalBlock(scope: !6197, file: !3, line: 1769, column: 37)
!6202 = !DILocation(line: 1770, column: 49, scope: !6201)
!6203 = !DILocation(line: 1770, column: 6, scope: !6201)
!6204 = !DILocation(line: 1771, column: 5, scope: !6201)
!6205 = !DILocation(line: 1773, column: 22, scope: !6077)
!6206 = !DILocation(line: 1773, column: 31, scope: !6077)
!6207 = !DILocation(line: 1773, column: 5, scope: !6077)
!6208 = !DILocation(line: 1774, column: 4, scope: !6077)
!6209 = !DILocation(line: 1776, column: 9, scope: !6210)
!6210 = distinct !DILexicalBlock(scope: !6211, file: !3, line: 1776, column: 9)
!6211 = distinct !DILexicalBlock(scope: !6073, file: !3, line: 1775, column: 9)
!6212 = !DILocation(line: 1776, column: 18, scope: !6210)
!6213 = !DILocation(line: 1776, column: 22, scope: !6210)
!6214 = !DILocation(line: 1776, column: 28, scope: !6210)
!6215 = !DILocation(line: 1776, column: 9, scope: !6211)
!6216 = !DILocation(line: 1777, column: 10, scope: !6217)
!6217 = distinct !DILexicalBlock(scope: !6218, file: !3, line: 1777, column: 10)
!6218 = distinct !DILexicalBlock(scope: !6210, file: !3, line: 1776, column: 36)
!6219 = !DILocation(line: 1777, column: 19, scope: !6217)
!6220 = !DILocation(line: 1777, column: 23, scope: !6217)
!6221 = !DILocation(line: 1777, column: 29, scope: !6217)
!6222 = !DILocation(line: 1777, column: 34, scope: !6217)
!6223 = !DILocation(line: 1777, column: 10, scope: !6218)
!6224 = !DILocation(line: 1778, column: 7, scope: !6217)
!6225 = !DILocation(line: 1778, column: 11, scope: !6217)
!6226 = !DILocation(line: 1778, column: 24, scope: !6217)
!6227 = !DILocation(line: 1780, column: 6, scope: !6218)
!6228 = !DILocation(line: 1780, column: 15, scope: !6218)
!6229 = !DILocation(line: 1780, column: 19, scope: !6218)
!6230 = !DILocation(line: 1780, column: 25, scope: !6218)
!6231 = !DILocation(line: 1780, column: 32, scope: !6218)
!6232 = !DILocation(line: 1780, column: 35, scope: !6218)
!6233 = !DILocation(line: 1780, column: 44, scope: !6218)
!6234 = !DILocation(line: 1782, column: 10, scope: !6235)
!6235 = distinct !DILexicalBlock(scope: !6218, file: !3, line: 1782, column: 10)
!6236 = !DILocation(line: 1782, column: 19, scope: !6235)
!6237 = !DILocation(line: 1782, column: 23, scope: !6235)
!6238 = !DILocation(line: 1782, column: 29, scope: !6235)
!6239 = !DILocation(line: 1782, column: 34, scope: !6235)
!6240 = !DILocation(line: 1782, column: 10, scope: !6218)
!6241 = !DILocation(line: 1783, column: 7, scope: !6235)
!6242 = !DILocation(line: 1783, column: 11, scope: !6235)
!6243 = !DILocation(line: 1783, column: 24, scope: !6235)
!6244 = !DILocation(line: 1784, column: 5, scope: !6218)
!6245 = !DILocation(line: 1786, column: 22, scope: !6211)
!6246 = !DILocation(line: 1786, column: 31, scope: !6211)
!6247 = !DILocation(line: 1786, column: 5, scope: !6211)
!6248 = !DILocation(line: 1789, column: 20, scope: !6039)
!6249 = !DILocation(line: 1789, column: 4, scope: !6039)
!6250 = !DILocation(line: 1791, column: 26, scope: !6039)
!6251 = !DILocation(line: 1791, column: 4, scope: !6039)
!6252 = !DILocation(line: 1793, column: 11, scope: !6039)
!6253 = !DILocation(line: 1794, column: 4, scope: !6039)
!6254 = !DILocation(line: 1798, column: 9, scope: !5965)
!6255 = !DILocation(line: 1798, column: 2, scope: !5965)
!6256 = distinct !DISubprogram(name: "WM_event_add_modal_handler", scope: !3, file: !3, line: 2528, type: !6257, scopeLine: 2529, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!6257 = !DISubroutineType(types: !6258)
!6258 = !{!2409, !2402, !6}
!6259 = !DILocalVariable(name: "C", arg: 1, scope: !6256, file: !3, line: 2528, type: !2402)
!6260 = !DILocation(line: 2528, column: 54, scope: !6256)
!6261 = !DILocalVariable(name: "op", arg: 2, scope: !6256, file: !3, line: 2528, type: !6)
!6262 = !DILocation(line: 2528, column: 69, scope: !6256)
!6263 = !DILocalVariable(name: "handler", scope: !6256, file: !3, line: 2530, type: !2404)
!6264 = !DILocation(line: 2530, column: 18, scope: !6256)
!6265 = !DILocation(line: 2530, column: 28, scope: !6256)
!6266 = !DILocalVariable(name: "win", scope: !6256, file: !3, line: 2531, type: !2567)
!6267 = !DILocation(line: 2531, column: 12, scope: !6256)
!6268 = !DILocation(line: 2531, column: 32, scope: !6256)
!6269 = !DILocation(line: 2531, column: 18, scope: !6256)
!6270 = !DILocation(line: 2534, column: 6, scope: !6271)
!6271 = distinct !DILexicalBlock(scope: !6256, file: !3, line: 2534, column: 6)
!6272 = !DILocation(line: 2534, column: 10, scope: !6271)
!6273 = !DILocation(line: 2534, column: 6, scope: !6256)
!6274 = !DILocation(line: 2536, column: 17, scope: !6275)
!6275 = distinct !DILexicalBlock(scope: !6271, file: !3, line: 2534, column: 15)
!6276 = !DILocation(line: 2536, column: 21, scope: !6275)
!6277 = !DILocation(line: 2536, column: 3, scope: !6275)
!6278 = !DILocation(line: 2536, column: 12, scope: !6275)
!6279 = !DILocation(line: 2536, column: 15, scope: !6275)
!6280 = !DILocation(line: 2538, column: 22, scope: !6275)
!6281 = !DILocation(line: 2538, column: 3, scope: !6275)
!6282 = !DILocation(line: 2538, column: 12, scope: !6275)
!6283 = !DILocation(line: 2538, column: 16, scope: !6275)
!6284 = !DILocation(line: 2538, column: 20, scope: !6275)
!6285 = !DILocation(line: 2539, column: 2, scope: !6275)
!6286 = !DILocation(line: 2541, column: 17, scope: !6271)
!6287 = !DILocation(line: 2541, column: 3, scope: !6271)
!6288 = !DILocation(line: 2541, column: 12, scope: !6271)
!6289 = !DILocation(line: 2541, column: 15, scope: !6271)
!6290 = !DILocation(line: 2543, column: 33, scope: !6256)
!6291 = !DILocation(line: 2543, column: 21, scope: !6256)
!6292 = !DILocation(line: 2543, column: 2, scope: !6256)
!6293 = !DILocation(line: 2543, column: 11, scope: !6256)
!6294 = !DILocation(line: 2543, column: 19, scope: !6256)
!6295 = !DILocation(line: 2544, column: 37, scope: !6256)
!6296 = !DILocation(line: 2544, column: 23, scope: !6256)
!6297 = !DILocation(line: 2544, column: 2, scope: !6256)
!6298 = !DILocation(line: 2544, column: 11, scope: !6256)
!6299 = !DILocation(line: 2544, column: 21, scope: !6256)
!6300 = !DILocation(line: 2546, column: 15, scope: !6256)
!6301 = !DILocation(line: 2546, column: 20, scope: !6256)
!6302 = !DILocation(line: 2546, column: 35, scope: !6256)
!6303 = !DILocation(line: 2546, column: 2, scope: !6256)
!6304 = !DILocation(line: 2548, column: 9, scope: !6256)
!6305 = !DILocation(line: 2548, column: 2, scope: !6256)
!6306 = distinct !DISubprogram(name: "WM_event_add_keymap_handler", scope: !3, file: !3, line: 2551, type: !6307, scopeLine: 2552, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!6307 = !DISubroutineType(types: !6308)
!6308 = !{!2409, !401, !2414}
!6309 = !DILocalVariable(name: "handlers", arg: 1, scope: !6306, file: !3, line: 2551, type: !401)
!6310 = !DILocation(line: 2551, column: 55, scope: !6306)
!6311 = !DILocalVariable(name: "keymap", arg: 2, scope: !6306, file: !3, line: 2551, type: !2414)
!6312 = !DILocation(line: 2551, column: 75, scope: !6306)
!6313 = !DILocalVariable(name: "handler", scope: !6306, file: !3, line: 2553, type: !2404)
!6314 = !DILocation(line: 2553, column: 18, scope: !6306)
!6315 = !DILocation(line: 2555, column: 7, scope: !6316)
!6316 = distinct !DILexicalBlock(scope: !6306, file: !3, line: 2555, column: 6)
!6317 = !DILocation(line: 2555, column: 6, scope: !6306)
!6318 = !DILocation(line: 2556, column: 3, scope: !6319)
!6319 = distinct !DILexicalBlock(scope: !6316, file: !3, line: 2555, column: 15)
!6320 = !DILocation(line: 2557, column: 3, scope: !6319)
!6321 = !DILocation(line: 2561, column: 17, scope: !6322)
!6322 = distinct !DILexicalBlock(scope: !6306, file: !3, line: 2561, column: 2)
!6323 = !DILocation(line: 2561, column: 27, scope: !6322)
!6324 = !DILocation(line: 2561, column: 15, scope: !6322)
!6325 = !DILocation(line: 2561, column: 7, scope: !6322)
!6326 = !DILocation(line: 2561, column: 34, scope: !6327)
!6327 = distinct !DILexicalBlock(scope: !6322, file: !3, line: 2561, column: 2)
!6328 = !DILocation(line: 2561, column: 2, scope: !6322)
!6329 = !DILocation(line: 2562, column: 7, scope: !6330)
!6330 = distinct !DILexicalBlock(scope: !6327, file: !3, line: 2562, column: 7)
!6331 = !DILocation(line: 2562, column: 16, scope: !6330)
!6332 = !DILocation(line: 2562, column: 26, scope: !6330)
!6333 = !DILocation(line: 2562, column: 23, scope: !6330)
!6334 = !DILocation(line: 2562, column: 7, scope: !6327)
!6335 = !DILocation(line: 2563, column: 11, scope: !6330)
!6336 = !DILocation(line: 2563, column: 4, scope: !6330)
!6337 = !DILocation(line: 2561, column: 53, scope: !6327)
!6338 = !DILocation(line: 2561, column: 62, scope: !6327)
!6339 = !DILocation(line: 2561, column: 51, scope: !6327)
!6340 = !DILocation(line: 2561, column: 2, scope: !6327)
!6341 = distinct !{!6341, !6328, !6342}
!6342 = !DILocation(line: 2563, column: 11, scope: !6322)
!6343 = !DILocation(line: 2565, column: 12, scope: !6306)
!6344 = !DILocation(line: 2565, column: 10, scope: !6306)
!6345 = !DILocation(line: 2566, column: 14, scope: !6306)
!6346 = !DILocation(line: 2566, column: 24, scope: !6306)
!6347 = !DILocation(line: 2566, column: 2, scope: !6306)
!6348 = !DILocation(line: 2567, column: 20, scope: !6306)
!6349 = !DILocation(line: 2567, column: 2, scope: !6306)
!6350 = !DILocation(line: 2567, column: 11, scope: !6306)
!6351 = !DILocation(line: 2567, column: 18, scope: !6306)
!6352 = !DILocation(line: 2569, column: 9, scope: !6306)
!6353 = !DILocation(line: 2569, column: 2, scope: !6306)
!6354 = !DILocation(line: 2570, column: 1, scope: !6306)
!6355 = distinct !DISubprogram(name: "WM_event_add_keymap_handler_priority", scope: !3, file: !3, line: 2573, type: !6356, scopeLine: 2574, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!6356 = !DISubroutineType(types: !6357)
!6357 = !{!2409, !401, !2414, !34}
!6358 = !DILocalVariable(name: "handlers", arg: 1, scope: !6355, file: !3, line: 2573, type: !401)
!6359 = !DILocation(line: 2573, column: 64, scope: !6355)
!6360 = !DILocalVariable(name: "keymap", arg: 2, scope: !6355, file: !3, line: 2573, type: !2414)
!6361 = !DILocation(line: 2573, column: 84, scope: !6355)
!6362 = !DILocalVariable(name: "UNUSED_priority", arg: 3, scope: !6355, file: !3, line: 2573, type: !34)
!6363 = !DILocation(line: 2573, column: 96, scope: !6355)
!6364 = !DILocalVariable(name: "handler", scope: !6355, file: !3, line: 2575, type: !2404)
!6365 = !DILocation(line: 2575, column: 18, scope: !6355)
!6366 = !DILocation(line: 2577, column: 33, scope: !6355)
!6367 = !DILocation(line: 2577, column: 43, scope: !6355)
!6368 = !DILocation(line: 2577, column: 2, scope: !6355)
!6369 = !DILocation(line: 2579, column: 12, scope: !6355)
!6370 = !DILocation(line: 2579, column: 10, scope: !6355)
!6371 = !DILocation(line: 2580, column: 14, scope: !6355)
!6372 = !DILocation(line: 2580, column: 24, scope: !6355)
!6373 = !DILocation(line: 2580, column: 2, scope: !6355)
!6374 = !DILocation(line: 2581, column: 20, scope: !6355)
!6375 = !DILocation(line: 2581, column: 2, scope: !6355)
!6376 = !DILocation(line: 2581, column: 11, scope: !6355)
!6377 = !DILocation(line: 2581, column: 18, scope: !6355)
!6378 = !DILocation(line: 2583, column: 9, scope: !6355)
!6379 = !DILocation(line: 2583, column: 2, scope: !6355)
!6380 = distinct !DISubprogram(name: "WM_event_remove_keymap_handler", scope: !3, file: !3, line: 2597, type: !6381, scopeLine: 2598, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!6381 = !DISubroutineType(types: !6382)
!6382 = !{null, !401, !2414}
!6383 = !DILocalVariable(name: "handlers", arg: 1, scope: !6380, file: !3, line: 2597, type: !401)
!6384 = !DILocation(line: 2597, column: 47, scope: !6380)
!6385 = !DILocalVariable(name: "keymap", arg: 2, scope: !6380, file: !3, line: 2597, type: !2414)
!6386 = !DILocation(line: 2597, column: 67, scope: !6380)
!6387 = !DILocalVariable(name: "handler", scope: !6380, file: !3, line: 2599, type: !2404)
!6388 = !DILocation(line: 2599, column: 18, scope: !6380)
!6389 = !DILocation(line: 2601, column: 17, scope: !6390)
!6390 = distinct !DILexicalBlock(scope: !6380, file: !3, line: 2601, column: 2)
!6391 = !DILocation(line: 2601, column: 27, scope: !6390)
!6392 = !DILocation(line: 2601, column: 15, scope: !6390)
!6393 = !DILocation(line: 2601, column: 7, scope: !6390)
!6394 = !DILocation(line: 2601, column: 34, scope: !6395)
!6395 = distinct !DILexicalBlock(scope: !6390, file: !3, line: 2601, column: 2)
!6396 = !DILocation(line: 2601, column: 2, scope: !6390)
!6397 = !DILocation(line: 2602, column: 7, scope: !6398)
!6398 = distinct !DILexicalBlock(scope: !6399, file: !3, line: 2602, column: 7)
!6399 = distinct !DILexicalBlock(scope: !6395, file: !3, line: 2601, column: 68)
!6400 = !DILocation(line: 2602, column: 16, scope: !6398)
!6401 = !DILocation(line: 2602, column: 26, scope: !6398)
!6402 = !DILocation(line: 2602, column: 23, scope: !6398)
!6403 = !DILocation(line: 2602, column: 7, scope: !6399)
!6404 = !DILocation(line: 2603, column: 16, scope: !6405)
!6405 = distinct !DILexicalBlock(scope: !6398, file: !3, line: 2602, column: 34)
!6406 = !DILocation(line: 2603, column: 26, scope: !6405)
!6407 = !DILocation(line: 2603, column: 4, scope: !6405)
!6408 = !DILocation(line: 2604, column: 26, scope: !6405)
!6409 = !DILocation(line: 2604, column: 4, scope: !6405)
!6410 = !DILocation(line: 2605, column: 4, scope: !6405)
!6411 = !DILocation(line: 2607, column: 2, scope: !6399)
!6412 = !DILocation(line: 2601, column: 53, scope: !6395)
!6413 = !DILocation(line: 2601, column: 62, scope: !6395)
!6414 = !DILocation(line: 2601, column: 51, scope: !6395)
!6415 = !DILocation(line: 2601, column: 2, scope: !6395)
!6416 = distinct !{!6416, !6396, !6417}
!6417 = !DILocation(line: 2607, column: 2, scope: !6390)
!6418 = !DILocation(line: 2608, column: 1, scope: !6380)
!6419 = distinct !DISubprogram(name: "WM_event_add_keymap_handler_bb", scope: !3, file: !3, line: 2586, type: !6420, scopeLine: 2587, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!6420 = !DISubroutineType(types: !6421)
!6421 = !{!2409, !401, !2414, !2417, !2417}
!6422 = !DILocalVariable(name: "handlers", arg: 1, scope: !6419, file: !3, line: 2586, type: !401)
!6423 = !DILocation(line: 2586, column: 58, scope: !6419)
!6424 = !DILocalVariable(name: "keymap", arg: 2, scope: !6419, file: !3, line: 2586, type: !2414)
!6425 = !DILocation(line: 2586, column: 78, scope: !6419)
!6426 = !DILocalVariable(name: "bblocal", arg: 3, scope: !6419, file: !3, line: 2586, type: !2417)
!6427 = !DILocation(line: 2586, column: 98, scope: !6419)
!6428 = !DILocalVariable(name: "bbwin", arg: 4, scope: !6419, file: !3, line: 2586, type: !2417)
!6429 = !DILocation(line: 2586, column: 119, scope: !6419)
!6430 = !DILocalVariable(name: "handler", scope: !6419, file: !3, line: 2588, type: !2404)
!6431 = !DILocation(line: 2588, column: 18, scope: !6419)
!6432 = !DILocation(line: 2588, column: 56, scope: !6419)
!6433 = !DILocation(line: 2588, column: 66, scope: !6419)
!6434 = !DILocation(line: 2588, column: 28, scope: !6419)
!6435 = !DILocation(line: 2590, column: 6, scope: !6436)
!6436 = distinct !DILexicalBlock(scope: !6419, file: !3, line: 2590, column: 6)
!6437 = !DILocation(line: 2590, column: 6, scope: !6419)
!6438 = !DILocation(line: 2591, column: 22, scope: !6439)
!6439 = distinct !DILexicalBlock(scope: !6436, file: !3, line: 2590, column: 15)
!6440 = !DILocation(line: 2591, column: 3, scope: !6439)
!6441 = !DILocation(line: 2591, column: 12, scope: !6439)
!6442 = !DILocation(line: 2591, column: 20, scope: !6439)
!6443 = !DILocation(line: 2592, column: 20, scope: !6439)
!6444 = !DILocation(line: 2592, column: 3, scope: !6439)
!6445 = !DILocation(line: 2592, column: 12, scope: !6439)
!6446 = !DILocation(line: 2592, column: 18, scope: !6439)
!6447 = !DILocation(line: 2593, column: 2, scope: !6439)
!6448 = !DILocation(line: 2594, column: 9, scope: !6419)
!6449 = !DILocation(line: 2594, column: 2, scope: !6419)
!6450 = distinct !DISubprogram(name: "WM_event_add_ui_handler", scope: !3, file: !3, line: 2610, type: !6451, scopeLine: 2614, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!6451 = !DISubroutineType(types: !6452)
!6452 = !{!2409, !2728, !401, !2536, !2542, !40, !3587}
!6453 = !DILocalVariable(name: "C", arg: 1, scope: !6450, file: !3, line: 2611, type: !2728)
!6454 = !DILocation(line: 2611, column: 25, scope: !6450)
!6455 = !DILocalVariable(name: "handlers", arg: 2, scope: !6450, file: !3, line: 2611, type: !401)
!6456 = !DILocation(line: 2611, column: 38, scope: !6450)
!6457 = !DILocalVariable(name: "ui_handle", arg: 3, scope: !6450, file: !3, line: 2612, type: !2536)
!6458 = !DILocation(line: 2612, column: 25, scope: !6450)
!6459 = !DILocalVariable(name: "ui_remove", arg: 4, scope: !6450, file: !3, line: 2612, type: !2542)
!6460 = !DILocation(line: 2612, column: 58, scope: !6450)
!6461 = !DILocalVariable(name: "userdata", arg: 5, scope: !6450, file: !3, line: 2613, type: !40)
!6462 = !DILocation(line: 2613, column: 15, scope: !6450)
!6463 = !DILocalVariable(name: "accept_dbl_click", arg: 6, scope: !6450, file: !3, line: 2613, type: !3587)
!6464 = !DILocation(line: 2613, column: 36, scope: !6450)
!6465 = !DILocalVariable(name: "handler", scope: !6450, file: !3, line: 2615, type: !2404)
!6466 = !DILocation(line: 2615, column: 18, scope: !6450)
!6467 = !DILocation(line: 2615, column: 28, scope: !6450)
!6468 = !DILocation(line: 2616, column: 23, scope: !6450)
!6469 = !DILocation(line: 2616, column: 2, scope: !6450)
!6470 = !DILocation(line: 2616, column: 11, scope: !6450)
!6471 = !DILocation(line: 2616, column: 21, scope: !6450)
!6472 = !DILocation(line: 2617, column: 23, scope: !6450)
!6473 = !DILocation(line: 2617, column: 2, scope: !6450)
!6474 = !DILocation(line: 2617, column: 11, scope: !6450)
!6475 = !DILocation(line: 2617, column: 21, scope: !6450)
!6476 = !DILocation(line: 2618, column: 25, scope: !6450)
!6477 = !DILocation(line: 2618, column: 2, scope: !6450)
!6478 = !DILocation(line: 2618, column: 11, scope: !6450)
!6479 = !DILocation(line: 2618, column: 23, scope: !6450)
!6480 = !DILocation(line: 2619, column: 6, scope: !6481)
!6481 = distinct !DILexicalBlock(scope: !6450, file: !3, line: 2619, column: 6)
!6482 = !DILocation(line: 2619, column: 6, scope: !6450)
!6483 = !DILocation(line: 2620, column: 37, scope: !6484)
!6484 = distinct !DILexicalBlock(scope: !6481, file: !3, line: 2619, column: 9)
!6485 = !DILocation(line: 2620, column: 25, scope: !6484)
!6486 = !DILocation(line: 2620, column: 3, scope: !6484)
!6487 = !DILocation(line: 2620, column: 12, scope: !6484)
!6488 = !DILocation(line: 2620, column: 23, scope: !6484)
!6489 = !DILocation(line: 2621, column: 39, scope: !6484)
!6490 = !DILocation(line: 2621, column: 25, scope: !6484)
!6491 = !DILocation(line: 2621, column: 3, scope: !6484)
!6492 = !DILocation(line: 2621, column: 12, scope: !6484)
!6493 = !DILocation(line: 2621, column: 23, scope: !6484)
!6494 = !DILocation(line: 2622, column: 37, scope: !6484)
!6495 = !DILocation(line: 2622, column: 25, scope: !6484)
!6496 = !DILocation(line: 2622, column: 3, scope: !6484)
!6497 = !DILocation(line: 2622, column: 12, scope: !6484)
!6498 = !DILocation(line: 2622, column: 23, scope: !6484)
!6499 = !DILocation(line: 2623, column: 2, scope: !6484)
!6500 = !DILocation(line: 2625, column: 3, scope: !6501)
!6501 = distinct !DILexicalBlock(scope: !6481, file: !3, line: 2624, column: 7)
!6502 = !DILocation(line: 2625, column: 12, scope: !6501)
!6503 = !DILocation(line: 2625, column: 23, scope: !6501)
!6504 = !DILocation(line: 2626, column: 3, scope: !6501)
!6505 = !DILocation(line: 2626, column: 12, scope: !6501)
!6506 = !DILocation(line: 2626, column: 23, scope: !6501)
!6507 = !DILocation(line: 2627, column: 3, scope: !6501)
!6508 = !DILocation(line: 2627, column: 12, scope: !6501)
!6509 = !DILocation(line: 2627, column: 23, scope: !6501)
!6510 = !DILocation(line: 2630, column: 6, scope: !6511)
!6511 = distinct !DILexicalBlock(scope: !6450, file: !3, line: 2630, column: 6)
!6512 = !DILocation(line: 2630, column: 6, scope: !6450)
!6513 = !DILocation(line: 2631, column: 3, scope: !6514)
!6514 = distinct !DILexicalBlock(scope: !6511, file: !3, line: 2630, column: 24)
!6515 = !DILocation(line: 2631, column: 12, scope: !6514)
!6516 = !DILocation(line: 2631, column: 17, scope: !6514)
!6517 = !DILocation(line: 2632, column: 2, scope: !6514)
!6518 = !DILocation(line: 2634, column: 14, scope: !6450)
!6519 = !DILocation(line: 2634, column: 24, scope: !6450)
!6520 = !DILocation(line: 2634, column: 2, scope: !6450)
!6521 = !DILocation(line: 2636, column: 9, scope: !6450)
!6522 = !DILocation(line: 2636, column: 2, scope: !6450)
!6523 = distinct !DISubprogram(name: "WM_event_remove_ui_handler", scope: !3, file: !3, line: 2640, type: !6524, scopeLine: 2644, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!6524 = !DISubroutineType(types: !6525)
!6525 = !{null, !401, !2536, !2542, !40, !3587}
!6526 = !DILocalVariable(name: "handlers", arg: 1, scope: !6523, file: !3, line: 2641, type: !401)
!6527 = !DILocation(line: 2641, column: 19, scope: !6523)
!6528 = !DILocalVariable(name: "ui_handle", arg: 2, scope: !6523, file: !3, line: 2642, type: !2536)
!6529 = !DILocation(line: 2642, column: 25, scope: !6523)
!6530 = !DILocalVariable(name: "ui_remove", arg: 3, scope: !6523, file: !3, line: 2642, type: !2542)
!6531 = !DILocation(line: 2642, column: 58, scope: !6523)
!6532 = !DILocalVariable(name: "userdata", arg: 4, scope: !6523, file: !3, line: 2643, type: !40)
!6533 = !DILocation(line: 2643, column: 15, scope: !6523)
!6534 = !DILocalVariable(name: "postpone", arg: 5, scope: !6523, file: !3, line: 2643, type: !3587)
!6535 = !DILocation(line: 2643, column: 36, scope: !6523)
!6536 = !DILocalVariable(name: "handler", scope: !6523, file: !3, line: 2645, type: !2404)
!6537 = !DILocation(line: 2645, column: 18, scope: !6523)
!6538 = !DILocation(line: 2647, column: 17, scope: !6539)
!6539 = distinct !DILexicalBlock(scope: !6523, file: !3, line: 2647, column: 2)
!6540 = !DILocation(line: 2647, column: 27, scope: !6539)
!6541 = !DILocation(line: 2647, column: 15, scope: !6539)
!6542 = !DILocation(line: 2647, column: 7, scope: !6539)
!6543 = !DILocation(line: 2647, column: 34, scope: !6544)
!6544 = distinct !DILexicalBlock(scope: !6539, file: !3, line: 2647, column: 2)
!6545 = !DILocation(line: 2647, column: 2, scope: !6539)
!6546 = !DILocation(line: 2648, column: 8, scope: !6547)
!6547 = distinct !DILexicalBlock(scope: !6548, file: !3, line: 2648, column: 7)
!6548 = distinct !DILexicalBlock(scope: !6544, file: !3, line: 2647, column: 68)
!6549 = !DILocation(line: 2648, column: 17, scope: !6547)
!6550 = !DILocation(line: 2648, column: 30, scope: !6547)
!6551 = !DILocation(line: 2648, column: 27, scope: !6547)
!6552 = !DILocation(line: 2648, column: 41, scope: !6547)
!6553 = !DILocation(line: 2649, column: 8, scope: !6547)
!6554 = !DILocation(line: 2649, column: 17, scope: !6547)
!6555 = !DILocation(line: 2649, column: 30, scope: !6547)
!6556 = !DILocation(line: 2649, column: 27, scope: !6547)
!6557 = !DILocation(line: 2649, column: 41, scope: !6547)
!6558 = !DILocation(line: 2650, column: 8, scope: !6547)
!6559 = !DILocation(line: 2650, column: 17, scope: !6547)
!6560 = !DILocation(line: 2650, column: 32, scope: !6547)
!6561 = !DILocation(line: 2650, column: 29, scope: !6547)
!6562 = !DILocation(line: 2648, column: 7, scope: !6548)
!6563 = !DILocation(line: 2653, column: 8, scope: !6564)
!6564 = distinct !DILexicalBlock(scope: !6565, file: !3, line: 2653, column: 8)
!6565 = distinct !DILexicalBlock(scope: !6547, file: !3, line: 2651, column: 3)
!6566 = !DILocation(line: 2653, column: 8, scope: !6565)
!6567 = !DILocation(line: 2654, column: 5, scope: !6568)
!6568 = distinct !DILexicalBlock(scope: !6564, file: !3, line: 2653, column: 18)
!6569 = !DILocation(line: 2654, column: 14, scope: !6568)
!6570 = !DILocation(line: 2654, column: 19, scope: !6568)
!6571 = !DILocation(line: 2655, column: 4, scope: !6568)
!6572 = !DILocation(line: 2657, column: 17, scope: !6573)
!6573 = distinct !DILexicalBlock(scope: !6564, file: !3, line: 2656, column: 9)
!6574 = !DILocation(line: 2657, column: 27, scope: !6573)
!6575 = !DILocation(line: 2657, column: 5, scope: !6573)
!6576 = !DILocation(line: 2658, column: 27, scope: !6573)
!6577 = !DILocation(line: 2658, column: 5, scope: !6573)
!6578 = !DILocation(line: 2660, column: 4, scope: !6565)
!6579 = !DILocation(line: 2662, column: 2, scope: !6548)
!6580 = !DILocation(line: 2647, column: 53, scope: !6544)
!6581 = !DILocation(line: 2647, column: 62, scope: !6544)
!6582 = !DILocation(line: 2647, column: 51, scope: !6544)
!6583 = !DILocation(line: 2647, column: 2, scope: !6544)
!6584 = distinct !{!6584, !6545, !6585}
!6585 = !DILocation(line: 2662, column: 2, scope: !6539)
!6586 = !DILocation(line: 2663, column: 1, scope: !6523)
!6587 = distinct !DISubprogram(name: "WM_event_free_ui_handler_all", scope: !3, file: !3, line: 2665, type: !6588, scopeLine: 2668, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!6588 = !DISubroutineType(types: !6589)
!6589 = !{null, !2402, !401, !2536, !2542}
!6590 = !DILocalVariable(name: "C", arg: 1, scope: !6587, file: !3, line: 2666, type: !2402)
!6591 = !DILocation(line: 2666, column: 19, scope: !6587)
!6592 = !DILocalVariable(name: "handlers", arg: 2, scope: !6587, file: !3, line: 2666, type: !401)
!6593 = !DILocation(line: 2666, column: 32, scope: !6587)
!6594 = !DILocalVariable(name: "ui_handle", arg: 3, scope: !6587, file: !3, line: 2667, type: !2536)
!6595 = !DILocation(line: 2667, column: 25, scope: !6587)
!6596 = !DILocalVariable(name: "ui_remove", arg: 4, scope: !6587, file: !3, line: 2667, type: !2542)
!6597 = !DILocation(line: 2667, column: 58, scope: !6587)
!6598 = !DILocalVariable(name: "handler", scope: !6587, file: !3, line: 2669, type: !2404)
!6599 = !DILocation(line: 2669, column: 18, scope: !6587)
!6600 = !DILocalVariable(name: "handler_next", scope: !6587, file: !3, line: 2669, type: !2404)
!6601 = !DILocation(line: 2669, column: 28, scope: !6587)
!6602 = !DILocation(line: 2671, column: 17, scope: !6603)
!6603 = distinct !DILexicalBlock(scope: !6587, file: !3, line: 2671, column: 2)
!6604 = !DILocation(line: 2671, column: 27, scope: !6603)
!6605 = !DILocation(line: 2671, column: 15, scope: !6603)
!6606 = !DILocation(line: 2671, column: 7, scope: !6603)
!6607 = !DILocation(line: 2671, column: 34, scope: !6608)
!6608 = distinct !DILexicalBlock(scope: !6603, file: !3, line: 2671, column: 2)
!6609 = !DILocation(line: 2671, column: 2, scope: !6603)
!6610 = !DILocation(line: 2672, column: 18, scope: !6611)
!6611 = distinct !DILexicalBlock(scope: !6608, file: !3, line: 2671, column: 67)
!6612 = !DILocation(line: 2672, column: 27, scope: !6611)
!6613 = !DILocation(line: 2672, column: 16, scope: !6611)
!6614 = !DILocation(line: 2673, column: 8, scope: !6615)
!6615 = distinct !DILexicalBlock(scope: !6611, file: !3, line: 2673, column: 7)
!6616 = !DILocation(line: 2673, column: 17, scope: !6615)
!6617 = !DILocation(line: 2673, column: 30, scope: !6615)
!6618 = !DILocation(line: 2673, column: 27, scope: !6615)
!6619 = !DILocation(line: 2673, column: 41, scope: !6615)
!6620 = !DILocation(line: 2674, column: 8, scope: !6615)
!6621 = !DILocation(line: 2674, column: 17, scope: !6615)
!6622 = !DILocation(line: 2674, column: 30, scope: !6615)
!6623 = !DILocation(line: 2674, column: 27, scope: !6615)
!6624 = !DILocation(line: 2673, column: 7, scope: !6611)
!6625 = !DILocation(line: 2676, column: 4, scope: !6626)
!6626 = distinct !DILexicalBlock(scope: !6615, file: !3, line: 2675, column: 3)
!6627 = !DILocation(line: 2676, column: 14, scope: !6626)
!6628 = !DILocation(line: 2676, column: 17, scope: !6626)
!6629 = !DILocation(line: 2676, column: 26, scope: !6626)
!6630 = !DILocation(line: 2677, column: 16, scope: !6626)
!6631 = !DILocation(line: 2677, column: 26, scope: !6626)
!6632 = !DILocation(line: 2677, column: 4, scope: !6626)
!6633 = !DILocation(line: 2678, column: 26, scope: !6626)
!6634 = !DILocation(line: 2678, column: 4, scope: !6626)
!6635 = !DILocation(line: 2679, column: 3, scope: !6626)
!6636 = !DILocation(line: 2680, column: 2, scope: !6611)
!6637 = !DILocation(line: 2671, column: 53, scope: !6608)
!6638 = !DILocation(line: 2671, column: 51, scope: !6608)
!6639 = !DILocation(line: 2671, column: 2, scope: !6608)
!6640 = distinct !{!6640, !6609, !6641}
!6641 = !DILocation(line: 2680, column: 2, scope: !6603)
!6642 = !DILocation(line: 2681, column: 1, scope: !6587)
!6643 = distinct !DISubprogram(name: "WM_event_add_dropbox_handler", scope: !3, file: !3, line: 2683, type: !6644, scopeLine: 2684, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!6644 = !DISubroutineType(types: !6645)
!6645 = !{!2409, !401, !401}
!6646 = !DILocalVariable(name: "handlers", arg: 1, scope: !6643, file: !3, line: 2683, type: !401)
!6647 = !DILocation(line: 2683, column: 56, scope: !6643)
!6648 = !DILocalVariable(name: "dropboxes", arg: 2, scope: !6643, file: !3, line: 2683, type: !401)
!6649 = !DILocation(line: 2683, column: 76, scope: !6643)
!6650 = !DILocalVariable(name: "handler", scope: !6643, file: !3, line: 2685, type: !2404)
!6651 = !DILocation(line: 2685, column: 18, scope: !6643)
!6652 = !DILocation(line: 2688, column: 17, scope: !6653)
!6653 = distinct !DILexicalBlock(scope: !6643, file: !3, line: 2688, column: 2)
!6654 = !DILocation(line: 2688, column: 27, scope: !6653)
!6655 = !DILocation(line: 2688, column: 15, scope: !6653)
!6656 = !DILocation(line: 2688, column: 7, scope: !6653)
!6657 = !DILocation(line: 2688, column: 34, scope: !6658)
!6658 = distinct !DILexicalBlock(scope: !6653, file: !3, line: 2688, column: 2)
!6659 = !DILocation(line: 2688, column: 2, scope: !6653)
!6660 = !DILocation(line: 2689, column: 7, scope: !6661)
!6661 = distinct !DILexicalBlock(scope: !6658, file: !3, line: 2689, column: 7)
!6662 = !DILocation(line: 2689, column: 16, scope: !6661)
!6663 = !DILocation(line: 2689, column: 29, scope: !6661)
!6664 = !DILocation(line: 2689, column: 26, scope: !6661)
!6665 = !DILocation(line: 2689, column: 7, scope: !6658)
!6666 = !DILocation(line: 2690, column: 11, scope: !6661)
!6667 = !DILocation(line: 2690, column: 4, scope: !6661)
!6668 = !DILocation(line: 2688, column: 53, scope: !6658)
!6669 = !DILocation(line: 2688, column: 62, scope: !6658)
!6670 = !DILocation(line: 2688, column: 51, scope: !6658)
!6671 = !DILocation(line: 2688, column: 2, scope: !6658)
!6672 = distinct !{!6672, !6659, !6673}
!6673 = !DILocation(line: 2690, column: 11, scope: !6653)
!6674 = !DILocation(line: 2692, column: 12, scope: !6643)
!6675 = !DILocation(line: 2692, column: 10, scope: !6643)
!6676 = !DILocation(line: 2695, column: 23, scope: !6643)
!6677 = !DILocation(line: 2695, column: 2, scope: !6643)
!6678 = !DILocation(line: 2695, column: 11, scope: !6643)
!6679 = !DILocation(line: 2695, column: 21, scope: !6643)
!6680 = !DILocation(line: 2696, column: 14, scope: !6643)
!6681 = !DILocation(line: 2696, column: 24, scope: !6643)
!6682 = !DILocation(line: 2696, column: 2, scope: !6643)
!6683 = !DILocation(line: 2698, column: 9, scope: !6643)
!6684 = !DILocation(line: 2698, column: 2, scope: !6643)
!6685 = !DILocation(line: 2699, column: 1, scope: !6643)
!6686 = distinct !DISubprogram(name: "WM_event_remove_area_handler", scope: !3, file: !3, line: 2702, type: !6687, scopeLine: 2703, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!6687 = !DISubroutineType(types: !6688)
!6688 = !{null, !401, !40}
!6689 = !DILocalVariable(name: "handlers", arg: 1, scope: !6686, file: !3, line: 2702, type: !401)
!6690 = !DILocation(line: 2702, column: 45, scope: !6686)
!6691 = !DILocalVariable(name: "area", arg: 2, scope: !6686, file: !3, line: 2702, type: !40)
!6692 = !DILocation(line: 2702, column: 61, scope: !6686)
!6693 = !DILocalVariable(name: "handler", scope: !6686, file: !3, line: 2704, type: !2404)
!6694 = !DILocation(line: 2704, column: 18, scope: !6686)
!6695 = !DILocalVariable(name: "nexthandler", scope: !6686, file: !3, line: 2704, type: !2404)
!6696 = !DILocation(line: 2704, column: 28, scope: !6686)
!6697 = !DILocation(line: 2706, column: 17, scope: !6698)
!6698 = distinct !DILexicalBlock(scope: !6686, file: !3, line: 2706, column: 2)
!6699 = !DILocation(line: 2706, column: 27, scope: !6698)
!6700 = !DILocation(line: 2706, column: 15, scope: !6698)
!6701 = !DILocation(line: 2706, column: 7, scope: !6698)
!6702 = !DILocation(line: 2706, column: 34, scope: !6703)
!6703 = distinct !DILexicalBlock(scope: !6698, file: !3, line: 2706, column: 2)
!6704 = !DILocation(line: 2706, column: 2, scope: !6698)
!6705 = !DILocation(line: 2707, column: 17, scope: !6706)
!6706 = distinct !DILexicalBlock(scope: !6703, file: !3, line: 2706, column: 66)
!6707 = !DILocation(line: 2707, column: 26, scope: !6706)
!6708 = !DILocation(line: 2707, column: 15, scope: !6706)
!6709 = !DILocation(line: 2708, column: 7, scope: !6710)
!6710 = distinct !DILexicalBlock(scope: !6706, file: !3, line: 2708, column: 7)
!6711 = !DILocation(line: 2708, column: 16, scope: !6710)
!6712 = !DILocation(line: 2708, column: 21, scope: !6710)
!6713 = !DILocation(line: 2708, column: 7, scope: !6706)
!6714 = !DILocation(line: 2709, column: 8, scope: !6715)
!6715 = distinct !DILexicalBlock(scope: !6716, file: !3, line: 2709, column: 8)
!6716 = distinct !DILexicalBlock(scope: !6710, file: !3, line: 2708, column: 47)
!6717 = !DILocation(line: 2709, column: 17, scope: !6715)
!6718 = !DILocation(line: 2709, column: 28, scope: !6715)
!6719 = !DILocation(line: 2709, column: 25, scope: !6715)
!6720 = !DILocation(line: 2709, column: 8, scope: !6716)
!6721 = !DILocation(line: 2710, column: 17, scope: !6722)
!6722 = distinct !DILexicalBlock(scope: !6715, file: !3, line: 2709, column: 34)
!6723 = !DILocation(line: 2710, column: 27, scope: !6722)
!6724 = !DILocation(line: 2710, column: 5, scope: !6722)
!6725 = !DILocation(line: 2711, column: 27, scope: !6722)
!6726 = !DILocation(line: 2711, column: 5, scope: !6722)
!6727 = !DILocation(line: 2712, column: 4, scope: !6722)
!6728 = !DILocation(line: 2713, column: 3, scope: !6716)
!6729 = !DILocation(line: 2714, column: 2, scope: !6706)
!6730 = !DILocation(line: 2706, column: 53, scope: !6703)
!6731 = !DILocation(line: 2706, column: 51, scope: !6703)
!6732 = !DILocation(line: 2706, column: 2, scope: !6703)
!6733 = distinct !{!6733, !6704, !6734}
!6734 = !DILocation(line: 2714, column: 2, scope: !6698)
!6735 = !DILocation(line: 2715, column: 1, scope: !6686)
!6736 = distinct !DISubprogram(name: "WM_event_add_mousemove", scope: !3, file: !3, line: 2725, type: !3044, scopeLine: 2726, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!6737 = !DILocalVariable(name: "C", arg: 1, scope: !6736, file: !3, line: 2725, type: !2402)
!6738 = !DILocation(line: 2725, column: 39, scope: !6736)
!6739 = !DILocalVariable(name: "window", scope: !6736, file: !3, line: 2727, type: !2567)
!6740 = !DILocation(line: 2727, column: 12, scope: !6736)
!6741 = !DILocation(line: 2727, column: 35, scope: !6736)
!6742 = !DILocation(line: 2727, column: 21, scope: !6736)
!6743 = !DILocation(line: 2729, column: 2, scope: !6736)
!6744 = !DILocation(line: 2729, column: 10, scope: !6736)
!6745 = !DILocation(line: 2729, column: 23, scope: !6736)
!6746 = !DILocation(line: 2730, column: 1, scope: !6736)
!6747 = distinct !DISubprogram(name: "WM_modal_tweak_exit", scope: !3, file: !3, line: 2734, type: !6748, scopeLine: 2735, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!6748 = !DISubroutineType(types: !6749)
!6749 = !{!73, !2569, !34}
!6750 = !DILocalVariable(name: "event", arg: 1, scope: !6747, file: !3, line: 2734, type: !2569)
!6751 = !DILocation(line: 2734, column: 41, scope: !6747)
!6752 = !DILocalVariable(name: "tweak_event", arg: 2, scope: !6747, file: !3, line: 2734, type: !34)
!6753 = !DILocation(line: 2734, column: 52, scope: !6747)
!6754 = !DILocation(line: 2739, column: 8, scope: !6755)
!6755 = distinct !DILexicalBlock(scope: !6747, file: !3, line: 2739, column: 6)
!6756 = !DILocation(line: 2739, column: 13, scope: !6755)
!6757 = !DILocation(line: 2739, column: 6, scope: !6747)
!6758 = !DILocation(line: 2741, column: 7, scope: !6759)
!6759 = distinct !DILexicalBlock(scope: !6760, file: !3, line: 2741, column: 7)
!6760 = distinct !DILexicalBlock(scope: !6755, file: !3, line: 2739, column: 36)
!6761 = !DILocation(line: 2741, column: 14, scope: !6759)
!6762 = !DILocation(line: 2741, column: 18, scope: !6759)
!6763 = !DILocation(line: 2741, column: 7, scope: !6760)
!6764 = !DILocation(line: 2742, column: 12, scope: !6765)
!6765 = distinct !DILexicalBlock(scope: !6759, file: !3, line: 2741, column: 33)
!6766 = !DILocation(line: 2742, column: 4, scope: !6765)
!6767 = !DILocation(line: 2746, column: 6, scope: !6768)
!6768 = distinct !DILexicalBlock(scope: !6765, file: !3, line: 2742, column: 25)
!6769 = !DILocation(line: 2748, column: 3, scope: !6765)
!6770 = !DILocation(line: 2752, column: 8, scope: !6771)
!6771 = distinct !DILexicalBlock(scope: !6772, file: !3, line: 2752, column: 8)
!6772 = distinct !DILexicalBlock(scope: !6759, file: !3, line: 2749, column: 8)
!6773 = !DILocation(line: 2752, column: 65, scope: !6771)
!6774 = !DILocation(line: 2752, column: 8, scope: !6772)
!6775 = !DILocation(line: 2753, column: 5, scope: !6776)
!6776 = distinct !DILexicalBlock(scope: !6771, file: !3, line: 2752, column: 71)
!6777 = !DILocation(line: 2756, column: 2, scope: !6760)
!6778 = !DILocation(line: 2762, column: 7, scope: !6779)
!6779 = distinct !DILexicalBlock(scope: !6780, file: !3, line: 2762, column: 7)
!6780 = distinct !DILexicalBlock(scope: !6755, file: !3, line: 2757, column: 7)
!6781 = !DILocation(line: 2762, column: 14, scope: !6779)
!6782 = !DILocation(line: 2762, column: 18, scope: !6779)
!6783 = !DILocation(line: 2762, column: 7, scope: !6780)
!6784 = !DILocation(line: 2763, column: 4, scope: !6779)
!6785 = !DILocation(line: 2766, column: 2, scope: !6747)
!6786 = !DILocation(line: 2767, column: 1, scope: !6747)
!6787 = distinct !DISubprogram(name: "wm_event_add_ghostevent", scope: !3, file: !3, line: 3063, type: !6788, scopeLine: 3064, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!6788 = !DISubroutineType(types: !6789)
!6789 = !{null, !1543, !2567, !34, !34, !40}
!6790 = !DILocalVariable(name: "wm", arg: 1, scope: !6787, file: !3, line: 3063, type: !1543)
!6791 = !DILocation(line: 3063, column: 47, scope: !6787)
!6792 = !DILocalVariable(name: "win", arg: 2, scope: !6787, file: !3, line: 3063, type: !2567)
!6793 = !DILocation(line: 3063, column: 61, scope: !6787)
!6794 = !DILocalVariable(name: "type", arg: 3, scope: !6787, file: !3, line: 3063, type: !34)
!6795 = !DILocation(line: 3063, column: 70, scope: !6787)
!6796 = !DILocalVariable(name: "UNUSED_time", arg: 4, scope: !6787, file: !3, line: 3063, type: !34)
!6797 = !DILocation(line: 3063, column: 80, scope: !6787)
!6798 = !DILocalVariable(name: "customdata", arg: 5, scope: !6787, file: !3, line: 3063, type: !40)
!6799 = !DILocation(line: 3063, column: 100, scope: !6787)
!6800 = !DILocalVariable(name: "owin", scope: !6787, file: !3, line: 3065, type: !2567)
!6801 = !DILocation(line: 3065, column: 12, scope: !6787)
!6802 = !DILocalVariable(name: "event", scope: !6787, file: !3, line: 3066, type: !2553)
!6803 = !DILocation(line: 3066, column: 10, scope: !6787)
!6804 = !DILocalVariable(name: "evt", scope: !6787, file: !3, line: 3066, type: !2552)
!6805 = !DILocation(line: 3066, column: 18, scope: !6787)
!6806 = !DILocation(line: 3066, column: 24, scope: !6787)
!6807 = !DILocation(line: 3066, column: 29, scope: !6787)
!6808 = !DILocation(line: 3069, column: 11, scope: !6787)
!6809 = !DILocation(line: 3069, column: 10, scope: !6787)
!6810 = !DILocation(line: 3071, column: 10, scope: !6787)
!6811 = !DILocation(line: 3071, column: 2, scope: !6787)
!6812 = !DILocalVariable(name: "cd", scope: !6813, file: !3, line: 3075, type: !6815)
!6813 = distinct !DILexicalBlock(scope: !6814, file: !3, line: 3074, column: 3)
!6814 = distinct !DILexicalBlock(scope: !6787, file: !3, line: 3071, column: 16)
!6815 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6816, size: 64)
!6816 = !DIDerivedType(tag: DW_TAG_typedef, name: "GHOST_TEventCursorData", file: !1969, line: 386, baseType: !6817)
!6817 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1969, line: 381, size: 64, elements: !6818)
!6818 = !{!6819, !6821}
!6819 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !6817, file: !1969, line: 383, baseType: !6820, size: 32)
!6820 = !DIDerivedType(tag: DW_TAG_typedef, name: "GHOST_TInt32", file: !1969, line: 50, baseType: !34)
!6821 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !6817, file: !1969, line: 385, baseType: !6820, size: 32, offset: 32)
!6822 = !DILocation(line: 3075, column: 28, scope: !6813)
!6823 = !DILocation(line: 3075, column: 33, scope: !6813)
!6824 = !DILocation(line: 3077, column: 26, scope: !6813)
!6825 = !DILocation(line: 3077, column: 30, scope: !6813)
!6826 = !DILocation(line: 3077, column: 34, scope: !6813)
!6827 = !DILocation(line: 3077, column: 4, scope: !6813)
!6828 = !DILocation(line: 3078, column: 10, scope: !6813)
!6829 = !DILocation(line: 3078, column: 15, scope: !6813)
!6830 = !DILocation(line: 3079, column: 27, scope: !6813)
!6831 = !DILocation(line: 3079, column: 4, scope: !6813)
!6832 = !DILocation(line: 3080, column: 20, scope: !6813)
!6833 = !DILocation(line: 3080, column: 25, scope: !6813)
!6834 = !DILocation(line: 3080, column: 35, scope: !6813)
!6835 = !DILocation(line: 3080, column: 4, scope: !6813)
!6836 = !DILocation(line: 3084, column: 41, scope: !6813)
!6837 = !DILocation(line: 3084, column: 45, scope: !6813)
!6838 = !DILocation(line: 3084, column: 11, scope: !6813)
!6839 = !DILocation(line: 3084, column: 9, scope: !6813)
!6840 = !DILocation(line: 3085, column: 8, scope: !6841)
!6841 = distinct !DILexicalBlock(scope: !6813, file: !3, line: 3085, column: 8)
!6842 = !DILocation(line: 3085, column: 8, scope: !6813)
!6843 = !DILocalVariable(name: "oevent", scope: !6844, file: !3, line: 3086, type: !2553)
!6844 = distinct !DILexicalBlock(scope: !6841, file: !3, line: 3085, column: 14)
!6845 = !DILocation(line: 3086, column: 13, scope: !6844)
!6846 = !DILocalVariable(name: "oevt", scope: !6844, file: !3, line: 3086, type: !2552)
!6847 = !DILocation(line: 3086, column: 22, scope: !6844)
!6848 = !DILocation(line: 3086, column: 29, scope: !6844)
!6849 = !DILocation(line: 3086, column: 35, scope: !6844)
!6850 = !DILocation(line: 3088, column: 15, scope: !6844)
!6851 = !DILocation(line: 3088, column: 14, scope: !6844)
!6852 = !DILocation(line: 3090, column: 28, scope: !6844)
!6853 = !DILocation(line: 3090, column: 38, scope: !6844)
!6854 = !DILocation(line: 3090, column: 5, scope: !6844)
!6855 = !DILocation(line: 3091, column: 12, scope: !6844)
!6856 = !DILocation(line: 3091, column: 17, scope: !6844)
!6857 = !DILocation(line: 3092, column: 28, scope: !6844)
!6858 = !DILocation(line: 3092, column: 5, scope: !6844)
!6859 = !DILocation(line: 3093, column: 21, scope: !6844)
!6860 = !DILocation(line: 3093, column: 27, scope: !6844)
!6861 = !DILocation(line: 3093, column: 38, scope: !6844)
!6862 = !DILocation(line: 3093, column: 5, scope: !6844)
!6863 = !DILocation(line: 3094, column: 4, scope: !6844)
!6864 = !DILocation(line: 3096, column: 4, scope: !6813)
!6865 = !DILocalVariable(name: "pd", scope: !6866, file: !3, line: 3100, type: !6867)
!6866 = distinct !DILexicalBlock(scope: !6814, file: !3, line: 3099, column: 3)
!6867 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6868, size: 64)
!6868 = !DIDerivedType(tag: DW_TAG_typedef, name: "GHOST_TEventTrackpadData", file: !1969, line: 418, baseType: !6869)
!6869 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1969, line: 407, size: 160, elements: !6870)
!6870 = !{!6871, !6873, !6874, !6875, !6876}
!6871 = !DIDerivedType(tag: DW_TAG_member, name: "subtype", scope: !6869, file: !1969, line: 409, baseType: !6872, size: 32)
!6872 = !DIDerivedType(tag: DW_TAG_typedef, name: "GHOST_TTrackpadEventSubTypes", file: !1969, line: 404, baseType: !1968)
!6873 = !DIDerivedType(tag: DW_TAG_member, name: "x", scope: !6869, file: !1969, line: 411, baseType: !6820, size: 32, offset: 32)
!6874 = !DIDerivedType(tag: DW_TAG_member, name: "y", scope: !6869, file: !1969, line: 413, baseType: !6820, size: 32, offset: 64)
!6875 = !DIDerivedType(tag: DW_TAG_member, name: "deltaX", scope: !6869, file: !1969, line: 415, baseType: !6820, size: 32, offset: 96)
!6876 = !DIDerivedType(tag: DW_TAG_member, name: "deltaY", scope: !6869, file: !1969, line: 417, baseType: !6820, size: 32, offset: 128)
!6877 = !DILocation(line: 3100, column: 30, scope: !6866)
!6878 = !DILocation(line: 3100, column: 35, scope: !6866)
!6879 = !DILocation(line: 3101, column: 12, scope: !6866)
!6880 = !DILocation(line: 3101, column: 16, scope: !6866)
!6881 = !DILocation(line: 3101, column: 4, scope: !6866)
!6882 = !DILocation(line: 3103, column: 12, scope: !6883)
!6883 = distinct !DILexicalBlock(scope: !6866, file: !3, line: 3101, column: 25)
!6884 = !DILocation(line: 3103, column: 17, scope: !6883)
!6885 = !DILocation(line: 3104, column: 20, scope: !6883)
!6886 = !DILocation(line: 3104, column: 24, scope: !6883)
!6887 = !DILocation(line: 3104, column: 19, scope: !6883)
!6888 = !DILocation(line: 3104, column: 6, scope: !6883)
!6889 = !DILocation(line: 3104, column: 10, scope: !6883)
!6890 = !DILocation(line: 3104, column: 17, scope: !6883)
!6891 = !DILocation(line: 3105, column: 20, scope: !6883)
!6892 = !DILocation(line: 3105, column: 24, scope: !6883)
!6893 = !DILocation(line: 3105, column: 19, scope: !6883)
!6894 = !DILocation(line: 3105, column: 6, scope: !6883)
!6895 = !DILocation(line: 3105, column: 10, scope: !6883)
!6896 = !DILocation(line: 3105, column: 17, scope: !6883)
!6897 = !DILocation(line: 3106, column: 6, scope: !6883)
!6898 = !DILocation(line: 3108, column: 12, scope: !6883)
!6899 = !DILocation(line: 3108, column: 17, scope: !6883)
!6900 = !DILocation(line: 3109, column: 6, scope: !6883)
!6901 = !DILocation(line: 3112, column: 12, scope: !6883)
!6902 = !DILocation(line: 3112, column: 17, scope: !6883)
!6903 = !DILocation(line: 3113, column: 6, scope: !6883)
!6904 = !DILocation(line: 3116, column: 23, scope: !6866)
!6905 = !DILocation(line: 3116, column: 27, scope: !6866)
!6906 = !DILocation(line: 3116, column: 14, scope: !6866)
!6907 = !DILocation(line: 3116, column: 19, scope: !6866)
!6908 = !DILocation(line: 3116, column: 21, scope: !6866)
!6909 = !DILocation(line: 3116, column: 10, scope: !6866)
!6910 = !DILocation(line: 3116, column: 12, scope: !6866)
!6911 = !DILocation(line: 3117, column: 23, scope: !6866)
!6912 = !DILocation(line: 3117, column: 27, scope: !6866)
!6913 = !DILocation(line: 3117, column: 14, scope: !6866)
!6914 = !DILocation(line: 3117, column: 19, scope: !6866)
!6915 = !DILocation(line: 3117, column: 21, scope: !6866)
!6916 = !DILocation(line: 3117, column: 10, scope: !6866)
!6917 = !DILocation(line: 3117, column: 12, scope: !6866)
!6918 = !DILocation(line: 3118, column: 10, scope: !6866)
!6919 = !DILocation(line: 3118, column: 14, scope: !6866)
!6920 = !DILocation(line: 3121, column: 24, scope: !6866)
!6921 = !DILocation(line: 3121, column: 28, scope: !6866)
!6922 = !DILocation(line: 3121, column: 32, scope: !6866)
!6923 = !DILocation(line: 3121, column: 26, scope: !6866)
!6924 = !DILocation(line: 3121, column: 10, scope: !6866)
!6925 = !DILocation(line: 3121, column: 16, scope: !6866)
!6926 = !DILocation(line: 3122, column: 24, scope: !6866)
!6927 = !DILocation(line: 3122, column: 30, scope: !6866)
!6928 = !DILocation(line: 3122, column: 34, scope: !6866)
!6929 = !DILocation(line: 3122, column: 29, scope: !6866)
!6930 = !DILocation(line: 3122, column: 26, scope: !6866)
!6931 = !DILocation(line: 3122, column: 10, scope: !6866)
!6932 = !DILocation(line: 3122, column: 16, scope: !6866)
!6933 = !DILocation(line: 3124, column: 17, scope: !6866)
!6934 = !DILocation(line: 3124, column: 4, scope: !6866)
!6935 = !DILocation(line: 3125, column: 4, scope: !6866)
!6936 = !DILocalVariable(name: "bd", scope: !6937, file: !3, line: 3131, type: !6938)
!6937 = distinct !DILexicalBlock(scope: !6814, file: !3, line: 3130, column: 3)
!6938 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !6939, size: 64)
!6939 = !DIDerivedType(tag: DW_TAG_typedef, name: "GHOST_TEventButtonData", file: !1969, line: 391, baseType: !6940)
!6940 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1969, line: 388, size: 32, elements: !6941)
!6941 = !{!6942}
!6942 = !DIDerivedType(tag: DW_TAG_member, name: "button", scope: !6940, file: !1969, line: 390, baseType: !6943, size: 32)
!6943 = !DIDerivedType(tag: DW_TAG_typedef, name: "GHOST_TButtonMask", file: !1969, line: 155, baseType: !1976)
!6944 = !DILocation(line: 3131, column: 28, scope: !6937)
!6945 = !DILocation(line: 3131, column: 33, scope: !6937)
!6946 = !DILocation(line: 3134, column: 17, scope: !6937)
!6947 = !DILocation(line: 3134, column: 22, scope: !6937)
!6948 = !DILocation(line: 3134, column: 16, scope: !6937)
!6949 = !DILocation(line: 3134, column: 10, scope: !6937)
!6950 = !DILocation(line: 3134, column: 14, scope: !6937)
!6951 = !DILocation(line: 3136, column: 8, scope: !6952)
!6952 = distinct !DILexicalBlock(scope: !6937, file: !3, line: 3136, column: 8)
!6953 = !DILocation(line: 3136, column: 12, scope: !6952)
!6954 = !DILocation(line: 3136, column: 19, scope: !6952)
!6955 = !DILocation(line: 3136, column: 8, scope: !6937)
!6956 = !DILocation(line: 3137, column: 11, scope: !6952)
!6957 = !DILocation(line: 3137, column: 16, scope: !6952)
!6958 = !DILocation(line: 3137, column: 5, scope: !6952)
!6959 = !DILocation(line: 3138, column: 13, scope: !6960)
!6960 = distinct !DILexicalBlock(scope: !6952, file: !3, line: 3138, column: 13)
!6961 = !DILocation(line: 3138, column: 17, scope: !6960)
!6962 = !DILocation(line: 3138, column: 24, scope: !6960)
!6963 = !DILocation(line: 3138, column: 13, scope: !6952)
!6964 = !DILocation(line: 3139, column: 11, scope: !6960)
!6965 = !DILocation(line: 3139, column: 16, scope: !6960)
!6966 = !DILocation(line: 3139, column: 5, scope: !6960)
!6967 = !DILocation(line: 3140, column: 13, scope: !6968)
!6968 = distinct !DILexicalBlock(scope: !6960, file: !3, line: 3140, column: 13)
!6969 = !DILocation(line: 3140, column: 17, scope: !6968)
!6970 = !DILocation(line: 3140, column: 24, scope: !6968)
!6971 = !DILocation(line: 3140, column: 13, scope: !6960)
!6972 = !DILocation(line: 3141, column: 11, scope: !6968)
!6973 = !DILocation(line: 3141, column: 16, scope: !6968)
!6974 = !DILocation(line: 3141, column: 5, scope: !6968)
!6975 = !DILocation(line: 3142, column: 13, scope: !6976)
!6976 = distinct !DILexicalBlock(scope: !6968, file: !3, line: 3142, column: 13)
!6977 = !DILocation(line: 3142, column: 17, scope: !6976)
!6978 = !DILocation(line: 3142, column: 24, scope: !6976)
!6979 = !DILocation(line: 3142, column: 13, scope: !6968)
!6980 = !DILocation(line: 3143, column: 11, scope: !6976)
!6981 = !DILocation(line: 3143, column: 16, scope: !6976)
!6982 = !DILocation(line: 3143, column: 5, scope: !6976)
!6983 = !DILocation(line: 3144, column: 13, scope: !6984)
!6984 = distinct !DILexicalBlock(scope: !6976, file: !3, line: 3144, column: 13)
!6985 = !DILocation(line: 3144, column: 17, scope: !6984)
!6986 = !DILocation(line: 3144, column: 24, scope: !6984)
!6987 = !DILocation(line: 3144, column: 13, scope: !6976)
!6988 = !DILocation(line: 3145, column: 11, scope: !6984)
!6989 = !DILocation(line: 3145, column: 16, scope: !6984)
!6990 = !DILocation(line: 3145, column: 5, scope: !6984)
!6991 = !DILocation(line: 3146, column: 13, scope: !6992)
!6992 = distinct !DILexicalBlock(scope: !6984, file: !3, line: 3146, column: 13)
!6993 = !DILocation(line: 3146, column: 17, scope: !6992)
!6994 = !DILocation(line: 3146, column: 24, scope: !6992)
!6995 = !DILocation(line: 3146, column: 13, scope: !6984)
!6996 = !DILocation(line: 3147, column: 11, scope: !6992)
!6997 = !DILocation(line: 3147, column: 16, scope: !6992)
!6998 = !DILocation(line: 3147, column: 5, scope: !6992)
!6999 = !DILocation(line: 3149, column: 11, scope: !6992)
!7000 = !DILocation(line: 3149, column: 16, scope: !6992)
!7001 = !DILocation(line: 3151, column: 4, scope: !6937)
!7002 = !DILocation(line: 3154, column: 19, scope: !6937)
!7003 = !DILocation(line: 3154, column: 24, scope: !6937)
!7004 = !DILocation(line: 3154, column: 4, scope: !6937)
!7005 = !DILocation(line: 3154, column: 9, scope: !6937)
!7006 = !DILocation(line: 3154, column: 17, scope: !6937)
!7007 = !DILocation(line: 3155, column: 20, scope: !6937)
!7008 = !DILocation(line: 3155, column: 25, scope: !6937)
!7009 = !DILocation(line: 3155, column: 4, scope: !6937)
!7010 = !DILocation(line: 3155, column: 9, scope: !6937)
!7011 = !DILocation(line: 3155, column: 18, scope: !6937)
!7012 = !DILocation(line: 3158, column: 21, scope: !6937)
!7013 = !DILocation(line: 3158, column: 4, scope: !6937)
!7014 = !DILocation(line: 3158, column: 9, scope: !6937)
!7015 = !DILocation(line: 3158, column: 13, scope: !6937)
!7016 = !DILocation(line: 3159, column: 22, scope: !6937)
!7017 = !DILocation(line: 3159, column: 4, scope: !6937)
!7018 = !DILocation(line: 3159, column: 9, scope: !6937)
!7019 = !DILocation(line: 3159, column: 14, scope: !6937)
!7020 = !DILocation(line: 3161, column: 8, scope: !7021)
!7021 = distinct !DILexicalBlock(scope: !6937, file: !3, line: 3161, column: 8)
!7022 = !DILocation(line: 3161, column: 13, scope: !7021)
!7023 = !DILocation(line: 3161, column: 20, scope: !7021)
!7024 = !DILocation(line: 3161, column: 8, scope: !6937)
!7025 = !DILocalVariable(name: "cx", scope: !7026, file: !3, line: 3162, type: !34)
!7026 = distinct !DILexicalBlock(scope: !7021, file: !3, line: 3161, column: 26)
!7027 = !DILocation(line: 3162, column: 9, scope: !7026)
!7028 = !DILocalVariable(name: "cy", scope: !7026, file: !3, line: 3162, type: !34)
!7029 = !DILocation(line: 3162, column: 13, scope: !7026)
!7030 = !DILocation(line: 3165, column: 28, scope: !7026)
!7031 = !DILocation(line: 3165, column: 5, scope: !7026)
!7032 = !DILocation(line: 3167, column: 24, scope: !7026)
!7033 = !DILocation(line: 3167, column: 15, scope: !7026)
!7034 = !DILocation(line: 3167, column: 20, scope: !7026)
!7035 = !DILocation(line: 3167, column: 22, scope: !7026)
!7036 = !DILocation(line: 3167, column: 11, scope: !7026)
!7037 = !DILocation(line: 3167, column: 13, scope: !7026)
!7038 = !DILocation(line: 3168, column: 24, scope: !7026)
!7039 = !DILocation(line: 3168, column: 15, scope: !7026)
!7040 = !DILocation(line: 3168, column: 20, scope: !7026)
!7041 = !DILocation(line: 3168, column: 22, scope: !7026)
!7042 = !DILocation(line: 3168, column: 11, scope: !7026)
!7043 = !DILocation(line: 3168, column: 13, scope: !7026)
!7044 = !DILocation(line: 3169, column: 4, scope: !7026)
!7045 = !DILocation(line: 3172, column: 41, scope: !7046)
!7046 = distinct !DILexicalBlock(scope: !6937, file: !3, line: 3172, column: 8)
!7047 = !DILocation(line: 3172, column: 8, scope: !7046)
!7048 = !DILocation(line: 3172, column: 8, scope: !6937)
!7049 = !DILocation(line: 3173, column: 11, scope: !7050)
!7050 = distinct !DILexicalBlock(scope: !7051, file: !3, line: 3173, column: 9)
!7051 = distinct !DILexicalBlock(scope: !7046, file: !3, line: 3172, column: 47)
!7052 = !DILocation(line: 3173, column: 17, scope: !7050)
!7053 = !DILocation(line: 3173, column: 9, scope: !7051)
!7054 = !DILocation(line: 3174, column: 6, scope: !7050)
!7055 = !DILocation(line: 3175, column: 11, scope: !7051)
!7056 = !DILocation(line: 3175, column: 15, scope: !7051)
!7057 = !DILocation(line: 3176, column: 4, scope: !7051)
!7058 = !DILocation(line: 3177, column: 14, scope: !7059)
!7059 = distinct !DILexicalBlock(scope: !6937, file: !3, line: 3177, column: 8)
!7060 = !DILocation(line: 3177, column: 8, scope: !7059)
!7061 = !DILocation(line: 3177, column: 18, scope: !7059)
!7062 = !DILocation(line: 3177, column: 8, scope: !6937)
!7063 = !DILocation(line: 3178, column: 26, scope: !7064)
!7064 = distinct !DILexicalBlock(scope: !7059, file: !3, line: 3177, column: 31)
!7065 = !DILocation(line: 3178, column: 5, scope: !7064)
!7066 = !DILocation(line: 3178, column: 10, scope: !7064)
!7067 = !DILocation(line: 3178, column: 24, scope: !7064)
!7068 = !DILocation(line: 3179, column: 29, scope: !7064)
!7069 = !DILocation(line: 3179, column: 5, scope: !7064)
!7070 = !DILocation(line: 3179, column: 10, scope: !7064)
!7071 = !DILocation(line: 3179, column: 21, scope: !7064)
!7072 = !DILocation(line: 3180, column: 29, scope: !7064)
!7073 = !DILocation(line: 3180, column: 5, scope: !7064)
!7074 = !DILocation(line: 3180, column: 10, scope: !7064)
!7075 = !DILocation(line: 3180, column: 21, scope: !7064)
!7076 = !DILocation(line: 3181, column: 4, scope: !7064)
!7077 = !DILocation(line: 3184, column: 41, scope: !6937)
!7078 = !DILocation(line: 3184, column: 45, scope: !6937)
!7079 = !DILocation(line: 3184, column: 11, scope: !6937)
!7080 = !DILocation(line: 3184, column: 9, scope: !6937)
!7081 = !DILocation(line: 3185, column: 8, scope: !7082)
!7082 = distinct !DILexicalBlock(scope: !6937, file: !3, line: 3185, column: 8)
!7083 = !DILocation(line: 3185, column: 8, scope: !6937)
!7084 = !DILocalVariable(name: "oevent", scope: !7085, file: !3, line: 3186, type: !2553)
!7085 = distinct !DILexicalBlock(scope: !7082, file: !3, line: 3185, column: 14)
!7086 = !DILocation(line: 3186, column: 13, scope: !7085)
!7087 = !DILocation(line: 3186, column: 24, scope: !7085)
!7088 = !DILocation(line: 3186, column: 30, scope: !7085)
!7089 = !DILocation(line: 3186, column: 22, scope: !7085)
!7090 = !DILocation(line: 3188, column: 22, scope: !7085)
!7091 = !DILocation(line: 3188, column: 12, scope: !7085)
!7092 = !DILocation(line: 3188, column: 14, scope: !7085)
!7093 = !DILocation(line: 3189, column: 22, scope: !7085)
!7094 = !DILocation(line: 3189, column: 12, scope: !7085)
!7095 = !DILocation(line: 3189, column: 14, scope: !7085)
!7096 = !DILocation(line: 3190, column: 25, scope: !7085)
!7097 = !DILocation(line: 3190, column: 12, scope: !7085)
!7098 = !DILocation(line: 3190, column: 17, scope: !7085)
!7099 = !DILocation(line: 3191, column: 24, scope: !7085)
!7100 = !DILocation(line: 3191, column: 12, scope: !7085)
!7101 = !DILocation(line: 3191, column: 16, scope: !7085)
!7102 = !DILocation(line: 3193, column: 18, scope: !7085)
!7103 = !DILocation(line: 3193, column: 5, scope: !7085)
!7104 = !DILocation(line: 3194, column: 4, scope: !7085)
!7105 = !DILocation(line: 3196, column: 18, scope: !7106)
!7106 = distinct !DILexicalBlock(scope: !7082, file: !3, line: 3195, column: 9)
!7107 = !DILocation(line: 3196, column: 5, scope: !7106)
!7108 = !DILocation(line: 3199, column: 4, scope: !6937)
!7109 = !DILocalVariable(name: "kd", scope: !7110, file: !3, line: 3205, type: !7111)
!7110 = distinct !DILexicalBlock(scope: !6814, file: !3, line: 3204, column: 3)
!7111 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7112, size: 64)
!7112 = !DIDerivedType(tag: DW_TAG_typedef, name: "GHOST_TEventKeyData", file: !1969, line: 489, baseType: !7113)
!7113 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1969, line: 472, size: 96, elements: !7114)
!7114 = !{!7115, !7117, !7118}
!7115 = !DIDerivedType(tag: DW_TAG_member, name: "key", scope: !7113, file: !1969, line: 474, baseType: !7116, size: 32)
!7116 = !DIDerivedType(tag: DW_TAG_typedef, name: "GHOST_TKey", file: !1969, line: 370, baseType: !2013)
!7117 = !DIDerivedType(tag: DW_TAG_member, name: "ascii", scope: !7113, file: !1969, line: 486, baseType: !16, size: 8, offset: 32)
!7118 = !DIDerivedType(tag: DW_TAG_member, name: "utf8_buf", scope: !7113, file: !1969, line: 488, baseType: !94, size: 48, offset: 40)
!7119 = !DILocation(line: 3205, column: 25, scope: !7110)
!7120 = !DILocation(line: 3205, column: 30, scope: !7110)
!7121 = !DILocation(line: 3206, column: 29, scope: !7110)
!7122 = !DILocation(line: 3206, column: 33, scope: !7110)
!7123 = !DILocation(line: 3206, column: 17, scope: !7110)
!7124 = !DILocation(line: 3206, column: 10, scope: !7110)
!7125 = !DILocation(line: 3206, column: 15, scope: !7110)
!7126 = !DILocation(line: 3207, column: 18, scope: !7110)
!7127 = !DILocation(line: 3207, column: 22, scope: !7110)
!7128 = !DILocation(line: 3207, column: 10, scope: !7110)
!7129 = !DILocation(line: 3207, column: 16, scope: !7110)
!7130 = !DILocation(line: 3208, column: 17, scope: !7110)
!7131 = !DILocation(line: 3208, column: 4, scope: !7110)
!7132 = !DILocation(line: 3208, column: 27, scope: !7110)
!7133 = !DILocation(line: 3208, column: 31, scope: !7110)
!7134 = !DILocation(line: 3209, column: 17, scope: !7110)
!7135 = !DILocation(line: 3209, column: 22, scope: !7110)
!7136 = !DILocation(line: 3209, column: 16, scope: !7110)
!7137 = !DILocation(line: 3209, column: 10, scope: !7110)
!7138 = !DILocation(line: 3209, column: 14, scope: !7110)
!7139 = !DILocation(line: 3211, column: 4, scope: !7110)
!7140 = !DILocation(line: 3214, column: 19, scope: !7110)
!7141 = !DILocation(line: 3214, column: 24, scope: !7110)
!7142 = !DILocation(line: 3214, column: 4, scope: !7110)
!7143 = !DILocation(line: 3214, column: 9, scope: !7110)
!7144 = !DILocation(line: 3214, column: 17, scope: !7110)
!7145 = !DILocation(line: 3215, column: 20, scope: !7110)
!7146 = !DILocation(line: 3215, column: 25, scope: !7110)
!7147 = !DILocation(line: 3215, column: 4, scope: !7110)
!7148 = !DILocation(line: 3215, column: 9, scope: !7110)
!7149 = !DILocation(line: 3215, column: 18, scope: !7110)
!7150 = !DILocation(line: 3218, column: 21, scope: !7110)
!7151 = !DILocation(line: 3218, column: 4, scope: !7110)
!7152 = !DILocation(line: 3218, column: 9, scope: !7110)
!7153 = !DILocation(line: 3218, column: 13, scope: !7110)
!7154 = !DILocation(line: 3219, column: 22, scope: !7110)
!7155 = !DILocation(line: 3219, column: 4, scope: !7110)
!7156 = !DILocation(line: 3219, column: 9, scope: !7110)
!7157 = !DILocation(line: 3219, column: 14, scope: !7110)
!7158 = !DILocation(line: 3222, column: 8, scope: !7159)
!7159 = distinct !DILexicalBlock(scope: !7110, file: !3, line: 3222, column: 8)
!7160 = !DILocation(line: 3222, column: 13, scope: !7159)
!7161 = !DILocation(line: 3222, column: 8, scope: !7110)
!7162 = !DILocation(line: 3223, column: 11, scope: !7163)
!7163 = distinct !DILexicalBlock(scope: !7159, file: !3, line: 3222, column: 35)
!7164 = !DILocation(line: 3223, column: 17, scope: !7163)
!7165 = !DILocation(line: 3226, column: 15, scope: !7166)
!7166 = distinct !DILexicalBlock(scope: !7163, file: !3, line: 3226, column: 9)
!7167 = !DILocation(line: 3226, column: 9, scope: !7166)
!7168 = !DILocation(line: 3226, column: 9, scope: !7163)
!7169 = !DILocation(line: 3227, column: 6, scope: !7170)
!7170 = distinct !DILexicalBlock(scope: !7166, file: !3, line: 3226, column: 28)
!7171 = !DILocation(line: 3228, column: 5, scope: !7170)
!7172 = !DILocation(line: 3229, column: 11, scope: !7163)
!7173 = !DILocation(line: 3229, column: 5, scope: !7163)
!7174 = !DILocation(line: 3229, column: 23, scope: !7163)
!7175 = !DILocation(line: 3230, column: 4, scope: !7163)
!7176 = !DILocation(line: 3232, column: 15, scope: !7177)
!7177 = distinct !DILexicalBlock(scope: !7178, file: !3, line: 3232, column: 9)
!7178 = distinct !DILexicalBlock(scope: !7159, file: !3, line: 3231, column: 9)
!7179 = !DILocation(line: 3232, column: 9, scope: !7177)
!7180 = !DILocation(line: 3232, column: 21, scope: !7177)
!7181 = !DILocation(line: 3232, column: 26, scope: !7177)
!7182 = !DILocation(line: 3232, column: 35, scope: !7177)
!7183 = !DILocation(line: 3232, column: 29, scope: !7177)
!7184 = !DILocation(line: 3232, column: 41, scope: !7177)
!7185 = !DILocation(line: 3232, column: 9, scope: !7178)
!7186 = !DILocation(line: 3233, column: 12, scope: !7177)
!7187 = !DILocation(line: 3233, column: 18, scope: !7177)
!7188 = !DILocation(line: 3233, column: 6, scope: !7177)
!7189 = !DILocation(line: 3234, column: 15, scope: !7190)
!7190 = distinct !DILexicalBlock(scope: !7178, file: !3, line: 3234, column: 9)
!7191 = !DILocation(line: 3234, column: 9, scope: !7190)
!7192 = !DILocation(line: 3234, column: 27, scope: !7190)
!7193 = !DILocation(line: 3234, column: 32, scope: !7190)
!7194 = !DILocation(line: 3234, column: 41, scope: !7190)
!7195 = !DILocation(line: 3234, column: 35, scope: !7190)
!7196 = !DILocation(line: 3234, column: 53, scope: !7190)
!7197 = !DILocation(line: 3234, column: 9, scope: !7178)
!7198 = !DILocation(line: 3235, column: 12, scope: !7190)
!7199 = !DILocation(line: 3235, column: 6, scope: !7190)
!7200 = !DILocation(line: 3235, column: 24, scope: !7190)
!7201 = !DILocation(line: 3238, column: 14, scope: !7202)
!7202 = distinct !DILexicalBlock(scope: !7110, file: !3, line: 3238, column: 8)
!7203 = !DILocation(line: 3238, column: 8, scope: !7202)
!7204 = !DILocation(line: 3238, column: 8, scope: !7110)
!7205 = !DILocation(line: 3239, column: 33, scope: !7206)
!7206 = distinct !DILexicalBlock(scope: !7207, file: !3, line: 3239, column: 9)
!7207 = distinct !DILexicalBlock(scope: !7202, file: !3, line: 3238, column: 27)
!7208 = !DILocation(line: 3239, column: 27, scope: !7206)
!7209 = !DILocation(line: 3239, column: 9, scope: !7206)
!7210 = !DILocation(line: 3239, column: 43, scope: !7206)
!7211 = !DILocation(line: 3239, column: 9, scope: !7207)
!7212 = !DILocation(line: 3241, column: 49, scope: !7213)
!7213 = distinct !DILexicalBlock(scope: !7206, file: !3, line: 3239, column: 50)
!7214 = !DILocation(line: 3241, column: 43, scope: !7213)
!7215 = !DILocation(line: 3241, column: 23, scope: !7213)
!7216 = !DILocation(line: 3240, column: 6, scope: !7213)
!7217 = !DILocation(line: 3242, column: 12, scope: !7213)
!7218 = !DILocation(line: 3242, column: 6, scope: !7213)
!7219 = !DILocation(line: 3242, column: 24, scope: !7213)
!7220 = !DILocation(line: 3243, column: 5, scope: !7213)
!7221 = !DILocation(line: 3244, column: 4, scope: !7207)
!7222 = !DILocation(line: 3248, column: 18, scope: !7110)
!7223 = !DILocation(line: 3248, column: 12, scope: !7110)
!7224 = !DILocation(line: 3248, column: 4, scope: !7110)
!7225 = !DILocation(line: 3250, column: 26, scope: !7226)
!7226 = distinct !DILexicalBlock(scope: !7110, file: !3, line: 3248, column: 24)
!7227 = !DILocation(line: 3250, column: 20, scope: !7226)
!7228 = !DILocation(line: 3250, column: 30, scope: !7226)
!7229 = !DILocation(line: 3250, column: 19, scope: !7226)
!7230 = !DILocation(line: 3251, column: 20, scope: !7226)
!7231 = !DILocation(line: 3251, column: 25, scope: !7226)
!7232 = !DILocation(line: 3251, column: 30, scope: !7226)
!7233 = !DILocation(line: 3251, column: 33, scope: !7226)
!7234 = !DILocation(line: 3251, column: 38, scope: !7226)
!7235 = !DILocation(line: 3251, column: 42, scope: !7226)
!7236 = !DILocation(line: 3251, column: 45, scope: !7226)
!7237 = !DILocation(line: 3251, column: 50, scope: !7226)
!7238 = !DILocation(line: 3251, column: 19, scope: !7226)
!7239 = !DILocation(line: 3250, column: 6, scope: !7226)
!7240 = !DILocation(line: 3250, column: 11, scope: !7226)
!7241 = !DILocation(line: 3250, column: 17, scope: !7226)
!7242 = !DILocation(line: 3253, column: 6, scope: !7226)
!7243 = !DILocation(line: 3255, column: 25, scope: !7226)
!7244 = !DILocation(line: 3255, column: 19, scope: !7226)
!7245 = !DILocation(line: 3255, column: 29, scope: !7226)
!7246 = !DILocation(line: 3255, column: 18, scope: !7226)
!7247 = !DILocation(line: 3256, column: 20, scope: !7226)
!7248 = !DILocation(line: 3256, column: 25, scope: !7226)
!7249 = !DILocation(line: 3256, column: 31, scope: !7226)
!7250 = !DILocation(line: 3256, column: 34, scope: !7226)
!7251 = !DILocation(line: 3256, column: 39, scope: !7226)
!7252 = !DILocation(line: 3256, column: 43, scope: !7226)
!7253 = !DILocation(line: 3256, column: 46, scope: !7226)
!7254 = !DILocation(line: 3256, column: 51, scope: !7226)
!7255 = !DILocation(line: 3256, column: 19, scope: !7226)
!7256 = !DILocation(line: 3255, column: 6, scope: !7226)
!7257 = !DILocation(line: 3255, column: 11, scope: !7226)
!7258 = !DILocation(line: 3255, column: 16, scope: !7226)
!7259 = !DILocation(line: 3258, column: 6, scope: !7226)
!7260 = !DILocation(line: 3260, column: 24, scope: !7226)
!7261 = !DILocation(line: 3260, column: 18, scope: !7226)
!7262 = !DILocation(line: 3260, column: 28, scope: !7226)
!7263 = !DILocation(line: 3260, column: 17, scope: !7226)
!7264 = !DILocation(line: 3261, column: 20, scope: !7226)
!7265 = !DILocation(line: 3261, column: 25, scope: !7226)
!7266 = !DILocation(line: 3261, column: 30, scope: !7226)
!7267 = !DILocation(line: 3261, column: 33, scope: !7226)
!7268 = !DILocation(line: 3261, column: 38, scope: !7226)
!7269 = !DILocation(line: 3261, column: 44, scope: !7226)
!7270 = !DILocation(line: 3261, column: 47, scope: !7226)
!7271 = !DILocation(line: 3261, column: 52, scope: !7226)
!7272 = !DILocation(line: 3261, column: 19, scope: !7226)
!7273 = !DILocation(line: 3260, column: 6, scope: !7226)
!7274 = !DILocation(line: 3260, column: 11, scope: !7226)
!7275 = !DILocation(line: 3260, column: 15, scope: !7226)
!7276 = !DILocation(line: 3263, column: 6, scope: !7226)
!7277 = !DILocation(line: 3265, column: 26, scope: !7226)
!7278 = !DILocation(line: 3265, column: 20, scope: !7226)
!7279 = !DILocation(line: 3265, column: 30, scope: !7226)
!7280 = !DILocation(line: 3265, column: 19, scope: !7226)
!7281 = !DILocation(line: 3266, column: 20, scope: !7226)
!7282 = !DILocation(line: 3266, column: 25, scope: !7226)
!7283 = !DILocation(line: 3266, column: 30, scope: !7226)
!7284 = !DILocation(line: 3266, column: 33, scope: !7226)
!7285 = !DILocation(line: 3266, column: 38, scope: !7226)
!7286 = !DILocation(line: 3266, column: 42, scope: !7226)
!7287 = !DILocation(line: 3266, column: 45, scope: !7226)
!7288 = !DILocation(line: 3266, column: 50, scope: !7226)
!7289 = !DILocation(line: 3266, column: 19, scope: !7226)
!7290 = !DILocation(line: 3265, column: 6, scope: !7226)
!7291 = !DILocation(line: 3265, column: 11, scope: !7226)
!7292 = !DILocation(line: 3265, column: 17, scope: !7226)
!7293 = !DILocation(line: 3268, column: 6, scope: !7226)
!7294 = !DILocation(line: 3270, column: 16, scope: !7295)
!7295 = distinct !DILexicalBlock(scope: !7226, file: !3, line: 3270, column: 10)
!7296 = !DILocation(line: 3270, column: 10, scope: !7295)
!7297 = !DILocation(line: 3270, column: 20, scope: !7295)
!7298 = !DILocation(line: 3270, column: 32, scope: !7295)
!7299 = !DILocation(line: 3270, column: 41, scope: !7295)
!7300 = !DILocation(line: 3270, column: 35, scope: !7295)
!7301 = !DILocation(line: 3270, column: 53, scope: !7295)
!7302 = !DILocation(line: 3270, column: 10, scope: !7226)
!7303 = !DILocation(line: 3271, column: 32, scope: !7295)
!7304 = !DILocation(line: 3271, column: 7, scope: !7295)
!7305 = !DILocation(line: 3271, column: 12, scope: !7295)
!7306 = !DILocation(line: 3271, column: 24, scope: !7295)
!7307 = !DILocation(line: 3272, column: 21, scope: !7308)
!7308 = distinct !DILexicalBlock(scope: !7295, file: !3, line: 3272, column: 15)
!7309 = !DILocation(line: 3272, column: 15, scope: !7308)
!7310 = !DILocation(line: 3272, column: 25, scope: !7308)
!7311 = !DILocation(line: 3272, column: 39, scope: !7308)
!7312 = !DILocation(line: 3272, column: 48, scope: !7308)
!7313 = !DILocation(line: 3272, column: 42, scope: !7308)
!7314 = !DILocation(line: 3272, column: 69, scope: !7308)
!7315 = !DILocation(line: 3272, column: 63, scope: !7308)
!7316 = !DILocation(line: 3272, column: 60, scope: !7308)
!7317 = !DILocation(line: 3272, column: 15, scope: !7295)
!7318 = !DILocation(line: 3273, column: 27, scope: !7308)
!7319 = !DILocation(line: 3273, column: 32, scope: !7308)
!7320 = !DILocation(line: 3273, column: 44, scope: !7308)
!7321 = !DILocation(line: 3273, column: 13, scope: !7308)
!7322 = !DILocation(line: 3273, column: 25, scope: !7308)
!7323 = !DILocation(line: 3273, column: 7, scope: !7308)
!7324 = !DILocation(line: 3274, column: 6, scope: !7226)
!7325 = !DILocation(line: 3279, column: 41, scope: !7326)
!7326 = distinct !DILexicalBlock(scope: !7110, file: !3, line: 3279, column: 8)
!7327 = !DILocation(line: 3279, column: 8, scope: !7326)
!7328 = !DILocation(line: 3279, column: 8, scope: !7110)
!7329 = !DILocation(line: 3280, column: 11, scope: !7330)
!7330 = distinct !DILexicalBlock(scope: !7331, file: !3, line: 3280, column: 9)
!7331 = distinct !DILexicalBlock(scope: !7326, file: !3, line: 3279, column: 47)
!7332 = !DILocation(line: 3280, column: 17, scope: !7330)
!7333 = !DILocation(line: 3280, column: 9, scope: !7331)
!7334 = !DILocation(line: 3281, column: 6, scope: !7330)
!7335 = !DILocation(line: 3282, column: 22, scope: !7331)
!7336 = !DILocation(line: 3282, column: 26, scope: !7331)
!7337 = !DILocation(line: 3282, column: 5, scope: !7331)
!7338 = !DILocation(line: 3282, column: 10, scope: !7331)
!7339 = !DILocation(line: 3282, column: 14, scope: !7331)
!7340 = !DILocation(line: 3283, column: 4, scope: !7331)
!7341 = !DILocation(line: 3287, column: 14, scope: !7342)
!7342 = distinct !DILexicalBlock(scope: !7110, file: !3, line: 3287, column: 8)
!7343 = !DILocation(line: 3287, column: 8, scope: !7342)
!7344 = !DILocation(line: 3287, column: 35, scope: !7342)
!7345 = !DILocation(line: 3287, column: 29, scope: !7342)
!7346 = !DILocation(line: 3287, column: 26, scope: !7342)
!7347 = !DILocation(line: 3287, column: 8, scope: !7110)
!7348 = !DILocation(line: 3288, column: 11, scope: !7342)
!7349 = !DILocation(line: 3288, column: 23, scope: !7342)
!7350 = !DILocation(line: 3288, column: 5, scope: !7342)
!7351 = !DILocation(line: 3293, column: 14, scope: !7352)
!7352 = distinct !DILexicalBlock(scope: !7110, file: !3, line: 3293, column: 8)
!7353 = !DILocation(line: 3293, column: 8, scope: !7352)
!7354 = !DILocation(line: 3293, column: 26, scope: !7352)
!7355 = !DILocation(line: 3293, column: 8, scope: !7110)
!7356 = !DILocation(line: 3294, column: 11, scope: !7352)
!7357 = !DILocation(line: 3294, column: 23, scope: !7352)
!7358 = !DILocation(line: 3294, column: 5, scope: !7352)
!7359 = !DILocation(line: 3297, column: 15, scope: !7360)
!7360 = distinct !DILexicalBlock(scope: !7110, file: !3, line: 3297, column: 8)
!7361 = !DILocation(line: 3297, column: 9, scope: !7360)
!7362 = !DILocation(line: 3297, column: 20, scope: !7360)
!7363 = !DILocation(line: 3297, column: 30, scope: !7360)
!7364 = !DILocation(line: 3297, column: 39, scope: !7360)
!7365 = !DILocation(line: 3297, column: 33, scope: !7360)
!7366 = !DILocation(line: 3297, column: 43, scope: !7360)
!7367 = !DILocation(line: 3297, column: 56, scope: !7360)
!7368 = !DILocation(line: 3299, column: 15, scope: !7360)
!7369 = !DILocation(line: 3299, column: 9, scope: !7360)
!7370 = !DILocation(line: 3299, column: 21, scope: !7360)
!7371 = !DILocation(line: 3299, column: 26, scope: !7360)
!7372 = !DILocation(line: 3299, column: 35, scope: !7360)
!7373 = !DILocation(line: 3299, column: 29, scope: !7360)
!7374 = !DILocation(line: 3299, column: 40, scope: !7360)
!7375 = !DILocation(line: 3299, column: 45, scope: !7360)
!7376 = !DILocation(line: 3299, column: 54, scope: !7360)
!7377 = !DILocation(line: 3299, column: 48, scope: !7360)
!7378 = !DILocation(line: 3299, column: 58, scope: !7360)
!7379 = !DILocation(line: 3297, column: 8, scope: !7110)
!7380 = !DILocation(line: 3301, column: 16, scope: !7381)
!7381 = distinct !DILexicalBlock(scope: !7360, file: !3, line: 3300, column: 4)
!7382 = !DILocation(line: 3302, column: 4, scope: !7381)
!7383 = !DILocation(line: 3305, column: 14, scope: !7384)
!7384 = distinct !DILexicalBlock(scope: !7110, file: !3, line: 3305, column: 8)
!7385 = !DILocation(line: 3305, column: 8, scope: !7384)
!7386 = !DILocation(line: 3305, column: 18, scope: !7384)
!7387 = !DILocation(line: 3305, column: 8, scope: !7110)
!7388 = !DILocation(line: 3306, column: 26, scope: !7389)
!7389 = distinct !DILexicalBlock(scope: !7384, file: !3, line: 3305, column: 31)
!7390 = !DILocation(line: 3306, column: 5, scope: !7389)
!7391 = !DILocation(line: 3306, column: 10, scope: !7389)
!7392 = !DILocation(line: 3306, column: 24, scope: !7389)
!7393 = !DILocation(line: 3307, column: 29, scope: !7389)
!7394 = !DILocation(line: 3307, column: 5, scope: !7389)
!7395 = !DILocation(line: 3307, column: 10, scope: !7389)
!7396 = !DILocation(line: 3307, column: 21, scope: !7389)
!7397 = !DILocation(line: 3308, column: 29, scope: !7389)
!7398 = !DILocation(line: 3308, column: 5, scope: !7389)
!7399 = !DILocation(line: 3308, column: 10, scope: !7389)
!7400 = !DILocation(line: 3308, column: 21, scope: !7389)
!7401 = !DILocation(line: 3309, column: 4, scope: !7389)
!7402 = !DILocation(line: 3311, column: 17, scope: !7110)
!7403 = !DILocation(line: 3311, column: 4, scope: !7110)
!7404 = !DILocation(line: 3313, column: 4, scope: !7110)
!7405 = !DILocalVariable(name: "wheelData", scope: !7406, file: !3, line: 3318, type: !7407)
!7406 = distinct !DILexicalBlock(scope: !6814, file: !3, line: 3317, column: 3)
!7407 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7408, size: 64)
!7408 = !DIDerivedType(tag: DW_TAG_typedef, name: "GHOST_TEventWheelData", file: !1969, line: 396, baseType: !7409)
!7409 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1969, line: 393, size: 32, elements: !7410)
!7410 = !{!7411}
!7411 = !DIDerivedType(tag: DW_TAG_member, name: "z", scope: !7409, file: !1969, line: 395, baseType: !6820, size: 32)
!7412 = !DILocation(line: 3318, column: 27, scope: !7406)
!7413 = !DILocation(line: 3318, column: 39, scope: !7406)
!7414 = !DILocation(line: 3320, column: 8, scope: !7415)
!7415 = distinct !DILexicalBlock(scope: !7406, file: !3, line: 3320, column: 8)
!7416 = !DILocation(line: 3320, column: 19, scope: !7415)
!7417 = !DILocation(line: 3320, column: 21, scope: !7415)
!7418 = !DILocation(line: 3320, column: 8, scope: !7406)
!7419 = !DILocation(line: 3321, column: 11, scope: !7415)
!7420 = !DILocation(line: 3321, column: 16, scope: !7415)
!7421 = !DILocation(line: 3321, column: 5, scope: !7415)
!7422 = !DILocation(line: 3323, column: 11, scope: !7415)
!7423 = !DILocation(line: 3323, column: 16, scope: !7415)
!7424 = !DILocation(line: 3325, column: 10, scope: !7406)
!7425 = !DILocation(line: 3325, column: 14, scope: !7406)
!7426 = !DILocation(line: 3326, column: 17, scope: !7406)
!7427 = !DILocation(line: 3326, column: 4, scope: !7406)
!7428 = !DILocation(line: 3328, column: 4, scope: !7406)
!7429 = !DILocation(line: 3332, column: 10, scope: !7430)
!7430 = distinct !DILexicalBlock(scope: !6814, file: !3, line: 3331, column: 3)
!7431 = !DILocation(line: 3332, column: 15, scope: !7430)
!7432 = !DILocation(line: 3333, column: 10, scope: !7430)
!7433 = !DILocation(line: 3333, column: 17, scope: !7430)
!7434 = !DILocation(line: 3334, column: 23, scope: !7430)
!7435 = !DILocation(line: 3334, column: 10, scope: !7430)
!7436 = !DILocation(line: 3334, column: 21, scope: !7430)
!7437 = !DILocation(line: 3335, column: 10, scope: !7430)
!7438 = !DILocation(line: 3335, column: 14, scope: !7430)
!7439 = !DILocation(line: 3336, column: 10, scope: !7430)
!7440 = !DILocation(line: 3336, column: 22, scope: !7430)
!7441 = !DILocation(line: 3337, column: 17, scope: !7430)
!7442 = !DILocation(line: 3337, column: 4, scope: !7430)
!7443 = !DILocation(line: 3339, column: 4, scope: !7430)
!7444 = !DILocation(line: 3344, column: 10, scope: !7445)
!7445 = distinct !DILexicalBlock(scope: !6814, file: !3, line: 3343, column: 3)
!7446 = !DILocation(line: 3344, column: 15, scope: !7445)
!7447 = !DILocation(line: 3345, column: 10, scope: !7445)
!7448 = !DILocation(line: 3345, column: 14, scope: !7445)
!7449 = !DILocation(line: 3346, column: 29, scope: !7445)
!7450 = !DILocation(line: 3346, column: 4, scope: !7445)
!7451 = !DILocation(line: 3347, column: 17, scope: !7445)
!7452 = !DILocation(line: 3347, column: 4, scope: !7445)
!7453 = !DILocation(line: 3349, column: 10, scope: !7454)
!7454 = distinct !DILexicalBlock(scope: !7445, file: !3, line: 3349, column: 8)
!7455 = !DILocation(line: 3349, column: 16, scope: !7454)
!7456 = !DILocation(line: 3349, column: 8, scope: !7445)
!7457 = !DILocation(line: 3350, column: 70, scope: !7454)
!7458 = !DILocation(line: 3350, column: 79, scope: !7454)
!7459 = !DILocation(line: 3350, column: 5, scope: !7454)
!7460 = !DILocation(line: 3352, column: 4, scope: !7445)
!7461 = !DILocalVariable(name: "e", scope: !7462, file: !3, line: 3357, type: !7463)
!7462 = distinct !DILexicalBlock(scope: !6814, file: !3, line: 3356, column: 3)
!7463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !7464, size: 64)
!7464 = !DIDerivedType(tag: DW_TAG_typedef, name: "GHOST_TEventNDOFButtonData", file: !1969, line: 470, baseType: !7465)
!7465 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1969, line: 467, size: 64, elements: !7466)
!7466 = !{!7467, !7469}
!7467 = !DIDerivedType(tag: DW_TAG_member, name: "action", scope: !7465, file: !1969, line: 468, baseType: !7468, size: 32)
!7468 = !DIDerivedType(tag: DW_TAG_typedef, name: "GHOST_TButtonAction", file: !1969, line: 464, baseType: !2137)
!7469 = !DIDerivedType(tag: DW_TAG_member, name: "button", scope: !7465, file: !1969, line: 469, baseType: !31, size: 16, offset: 32)
!7470 = !DILocation(line: 3357, column: 32, scope: !7462)
!7471 = !DILocation(line: 3357, column: 36, scope: !7462)
!7472 = !DILocation(line: 3359, column: 36, scope: !7462)
!7473 = !DILocation(line: 3359, column: 39, scope: !7462)
!7474 = !DILocation(line: 3359, column: 34, scope: !7462)
!7475 = !DILocation(line: 3359, column: 17, scope: !7462)
!7476 = !DILocation(line: 3359, column: 10, scope: !7462)
!7477 = !DILocation(line: 3359, column: 15, scope: !7462)
!7478 = !DILocation(line: 3361, column: 12, scope: !7462)
!7479 = !DILocation(line: 3361, column: 15, scope: !7462)
!7480 = !DILocation(line: 3361, column: 4, scope: !7462)
!7481 = !DILocation(line: 3363, column: 12, scope: !7482)
!7482 = distinct !DILexicalBlock(scope: !7462, file: !3, line: 3361, column: 23)
!7483 = !DILocation(line: 3363, column: 16, scope: !7482)
!7484 = !DILocation(line: 3364, column: 6, scope: !7482)
!7485 = !DILocation(line: 3366, column: 12, scope: !7482)
!7486 = !DILocation(line: 3366, column: 16, scope: !7482)
!7487 = !DILocation(line: 3367, column: 6, scope: !7482)
!7488 = !DILocation(line: 3370, column: 10, scope: !7462)
!7489 = !DILocation(line: 3370, column: 17, scope: !7462)
!7490 = !DILocation(line: 3371, column: 10, scope: !7462)
!7491 = !DILocation(line: 3371, column: 21, scope: !7462)
!7492 = !DILocation(line: 3373, column: 17, scope: !7462)
!7493 = !DILocation(line: 3373, column: 4, scope: !7462)
!7494 = !DILocation(line: 3375, column: 4, scope: !7462)
!7495 = !DILocation(line: 3380, column: 4, scope: !6814)
!7496 = !DILocation(line: 3384, column: 10, scope: !7497)
!7497 = distinct !DILexicalBlock(scope: !6814, file: !3, line: 3383, column: 3)
!7498 = !DILocation(line: 3384, column: 15, scope: !7497)
!7499 = !DILocation(line: 3385, column: 17, scope: !7497)
!7500 = !DILocation(line: 3385, column: 4, scope: !7497)
!7501 = !DILocation(line: 3387, column: 4, scope: !7497)
!7502 = !DILocation(line: 3395, column: 1, scope: !6787)
!7503 = distinct !DISubprogram(name: "copy_v2_v2_int", scope: !7504, file: !7504, line: 152, type: !7505, scopeLine: 153, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!7504 = !DIFile(filename: "blender/source/blender/blenlib/intern/math_vector_inline.c", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!7505 = !DISubroutineType(types: !7506)
!7506 = !{null, !7507, !5277}
!7507 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !34, size: 64)
!7508 = !DILocalVariable(name: "r", arg: 1, scope: !7503, file: !7504, line: 152, type: !7507)
!7509 = !DILocation(line: 152, column: 33, scope: !7503)
!7510 = !DILocalVariable(name: "a", arg: 2, scope: !7503, file: !7504, line: 152, type: !5277)
!7511 = !DILocation(line: 152, column: 49, scope: !7503)
!7512 = !DILocation(line: 154, column: 9, scope: !7503)
!7513 = !DILocation(line: 154, column: 2, scope: !7503)
!7514 = !DILocation(line: 154, column: 7, scope: !7503)
!7515 = !DILocation(line: 155, column: 9, scope: !7503)
!7516 = !DILocation(line: 155, column: 2, scope: !7503)
!7517 = !DILocation(line: 155, column: 7, scope: !7503)
!7518 = !DILocation(line: 156, column: 1, scope: !7503)
!7519 = distinct !DISubprogram(name: "wm_event_add_mousemove", scope: !3, file: !3, line: 3039, type: !2565, scopeLine: 3040, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!7520 = !DILocalVariable(name: "win", arg: 1, scope: !7519, file: !3, line: 3039, type: !2567)
!7521 = !DILocation(line: 3039, column: 46, scope: !7519)
!7522 = !DILocalVariable(name: "event", arg: 2, scope: !7519, file: !3, line: 3039, type: !2569)
!7523 = !DILocation(line: 3039, column: 66, scope: !7519)
!7524 = !DILocalVariable(name: "event_last", scope: !7519, file: !3, line: 3041, type: !2552)
!7525 = !DILocation(line: 3041, column: 11, scope: !7519)
!7526 = !DILocation(line: 3041, column: 24, scope: !7519)
!7527 = !DILocation(line: 3041, column: 29, scope: !7519)
!7528 = !DILocation(line: 3041, column: 35, scope: !7519)
!7529 = !DILocation(line: 3046, column: 6, scope: !7530)
!7530 = distinct !DILexicalBlock(scope: !7519, file: !3, line: 3046, column: 6)
!7531 = !DILocation(line: 3046, column: 17, scope: !7530)
!7532 = !DILocation(line: 3046, column: 20, scope: !7530)
!7533 = !DILocation(line: 3046, column: 32, scope: !7530)
!7534 = !DILocation(line: 3046, column: 37, scope: !7530)
!7535 = !DILocation(line: 3046, column: 6, scope: !7519)
!7536 = !DILocation(line: 3047, column: 3, scope: !7530)
!7537 = !DILocation(line: 3047, column: 15, scope: !7530)
!7538 = !DILocation(line: 3047, column: 20, scope: !7530)
!7539 = !DILocation(line: 3049, column: 15, scope: !7519)
!7540 = !DILocation(line: 3049, column: 20, scope: !7519)
!7541 = !DILocation(line: 3049, column: 2, scope: !7519)
!7542 = !DILocalVariable(name: "event_new", scope: !7543, file: !3, line: 3052, type: !2552)
!7543 = distinct !DILexicalBlock(scope: !7519, file: !3, line: 3051, column: 2)
!7544 = !DILocation(line: 3052, column: 12, scope: !7543)
!7545 = !DILocation(line: 3052, column: 24, scope: !7543)
!7546 = !DILocation(line: 3052, column: 29, scope: !7543)
!7547 = !DILocation(line: 3052, column: 35, scope: !7543)
!7548 = !DILocation(line: 3053, column: 7, scope: !7549)
!7549 = distinct !DILexicalBlock(scope: !7543, file: !3, line: 3053, column: 7)
!7550 = !DILocation(line: 3053, column: 18, scope: !7549)
!7551 = !DILocation(line: 3053, column: 7, scope: !7543)
!7552 = !DILocation(line: 3054, column: 17, scope: !7553)
!7553 = distinct !DILexicalBlock(scope: !7549, file: !3, line: 3053, column: 27)
!7554 = !DILocation(line: 3054, column: 22, scope: !7553)
!7555 = !DILocation(line: 3054, column: 15, scope: !7553)
!7556 = !DILocation(line: 3055, column: 3, scope: !7553)
!7557 = !DILocation(line: 3057, column: 19, scope: !7543)
!7558 = !DILocation(line: 3057, column: 30, scope: !7543)
!7559 = !DILocation(line: 3057, column: 38, scope: !7543)
!7560 = !DILocation(line: 3057, column: 50, scope: !7543)
!7561 = !DILocation(line: 3057, column: 3, scope: !7543)
!7562 = !DILocation(line: 3059, column: 1, scope: !7519)
!7563 = distinct !DISubprogram(name: "wm_event_cursor_other_windows", scope: !3, file: !3, line: 2976, type: !7564, scopeLine: 2977, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!7564 = !DISubroutineType(types: !7565)
!7565 = !{!2567, !1543, !2567, !2552}
!7566 = !DILocalVariable(name: "wm", arg: 1, scope: !7563, file: !3, line: 2976, type: !1543)
!7567 = !DILocation(line: 2976, column: 65, scope: !7563)
!7568 = !DILocalVariable(name: "win", arg: 2, scope: !7563, file: !3, line: 2976, type: !2567)
!7569 = !DILocation(line: 2976, column: 79, scope: !7563)
!7570 = !DILocalVariable(name: "event", arg: 3, scope: !7563, file: !3, line: 2976, type: !2552)
!7571 = !DILocation(line: 2976, column: 93, scope: !7563)
!7572 = !DILocalVariable(name: "mx", scope: !7563, file: !3, line: 2978, type: !34)
!7573 = !DILocation(line: 2978, column: 6, scope: !7563)
!7574 = !DILocation(line: 2978, column: 11, scope: !7563)
!7575 = !DILocation(line: 2978, column: 18, scope: !7563)
!7576 = !DILocalVariable(name: "my", scope: !7563, file: !3, line: 2978, type: !34)
!7577 = !DILocation(line: 2978, column: 21, scope: !7563)
!7578 = !DILocation(line: 2978, column: 26, scope: !7563)
!7579 = !DILocation(line: 2978, column: 33, scope: !7563)
!7580 = !DILocation(line: 2980, column: 6, scope: !7581)
!7581 = distinct !DILexicalBlock(scope: !7563, file: !3, line: 2980, column: 6)
!7582 = !DILocation(line: 2980, column: 10, scope: !7581)
!7583 = !DILocation(line: 2980, column: 18, scope: !7581)
!7584 = !DILocation(line: 2980, column: 27, scope: !7581)
!7585 = !DILocation(line: 2980, column: 31, scope: !7581)
!7586 = !DILocation(line: 2980, column: 39, scope: !7581)
!7587 = !DILocation(line: 2980, column: 24, scope: !7581)
!7588 = !DILocation(line: 2980, column: 6, scope: !7563)
!7589 = !DILocation(line: 2981, column: 3, scope: !7581)
!7590 = !DILocation(line: 2986, column: 6, scope: !7591)
!7591 = distinct !DILexicalBlock(scope: !7563, file: !3, line: 2986, column: 6)
!7592 = !DILocation(line: 2986, column: 9, scope: !7591)
!7593 = !DILocation(line: 2986, column: 13, scope: !7591)
!7594 = !DILocation(line: 2986, column: 16, scope: !7591)
!7595 = !DILocation(line: 2986, column: 19, scope: !7591)
!7596 = !DILocation(line: 2986, column: 23, scope: !7591)
!7597 = !DILocation(line: 2986, column: 26, scope: !7591)
!7598 = !DILocation(line: 2986, column: 50, scope: !7591)
!7599 = !DILocation(line: 2986, column: 31, scope: !7591)
!7600 = !DILocation(line: 2986, column: 29, scope: !7591)
!7601 = !DILocation(line: 2986, column: 55, scope: !7591)
!7602 = !DILocation(line: 2986, column: 58, scope: !7591)
!7603 = !DILocation(line: 2986, column: 82, scope: !7591)
!7604 = !DILocation(line: 2986, column: 63, scope: !7591)
!7605 = !DILocation(line: 2986, column: 87, scope: !7591)
!7606 = !DILocation(line: 2986, column: 61, scope: !7591)
!7607 = !DILocation(line: 2986, column: 6, scope: !7563)
!7608 = !DILocalVariable(name: "owin", scope: !7609, file: !3, line: 2987, type: !2567)
!7609 = distinct !DILexicalBlock(scope: !7591, file: !3, line: 2986, column: 93)
!7610 = !DILocation(line: 2987, column: 13, scope: !7609)
!7611 = !DILocalVariable(name: "handler", scope: !7609, file: !3, line: 2988, type: !2404)
!7612 = !DILocation(line: 2988, column: 19, scope: !7609)
!7613 = !DILocation(line: 2992, column: 18, scope: !7614)
!7614 = distinct !DILexicalBlock(scope: !7609, file: !3, line: 2992, column: 3)
!7615 = !DILocation(line: 2992, column: 23, scope: !7614)
!7616 = !DILocation(line: 2992, column: 37, scope: !7614)
!7617 = !DILocation(line: 2992, column: 16, scope: !7614)
!7618 = !DILocation(line: 2992, column: 8, scope: !7614)
!7619 = !DILocation(line: 2992, column: 44, scope: !7620)
!7620 = distinct !DILexicalBlock(scope: !7614, file: !3, line: 2992, column: 3)
!7621 = !DILocation(line: 2992, column: 3, scope: !7614)
!7622 = !DILocation(line: 2993, column: 8, scope: !7623)
!7623 = distinct !DILexicalBlock(scope: !7620, file: !3, line: 2993, column: 8)
!7624 = !DILocation(line: 2993, column: 17, scope: !7623)
!7625 = !DILocation(line: 2993, column: 27, scope: !7623)
!7626 = !DILocation(line: 2993, column: 30, scope: !7623)
!7627 = !DILocation(line: 2993, column: 39, scope: !7623)
!7628 = !DILocation(line: 2993, column: 8, scope: !7620)
!7629 = !DILocation(line: 2994, column: 5, scope: !7623)
!7630 = !DILocation(line: 2992, column: 63, scope: !7620)
!7631 = !DILocation(line: 2992, column: 72, scope: !7620)
!7632 = !DILocation(line: 2992, column: 61, scope: !7620)
!7633 = !DILocation(line: 2992, column: 3, scope: !7620)
!7634 = distinct !{!7634, !7621, !7635}
!7635 = !DILocation(line: 2994, column: 12, scope: !7614)
!7636 = !DILocation(line: 2997, column: 18, scope: !7609)
!7637 = !DILocation(line: 2997, column: 30, scope: !7609)
!7638 = !DILocation(line: 2997, column: 35, scope: !7609)
!7639 = !DILocation(line: 2997, column: 28, scope: !7609)
!7640 = !DILocation(line: 2997, column: 9, scope: !7609)
!7641 = !DILocation(line: 2997, column: 6, scope: !7609)
!7642 = !DILocation(line: 2998, column: 18, scope: !7609)
!7643 = !DILocation(line: 2998, column: 30, scope: !7609)
!7644 = !DILocation(line: 2998, column: 35, scope: !7609)
!7645 = !DILocation(line: 2998, column: 28, scope: !7609)
!7646 = !DILocation(line: 2998, column: 9, scope: !7609)
!7647 = !DILocation(line: 2998, column: 6, scope: !7609)
!7648 = !DILocation(line: 3001, column: 15, scope: !7649)
!7649 = distinct !DILexicalBlock(scope: !7609, file: !3, line: 3001, column: 3)
!7650 = !DILocation(line: 3001, column: 19, scope: !7649)
!7651 = !DILocation(line: 3001, column: 27, scope: !7649)
!7652 = !DILocation(line: 3001, column: 13, scope: !7649)
!7653 = !DILocation(line: 3001, column: 8, scope: !7649)
!7654 = !DILocation(line: 3001, column: 34, scope: !7655)
!7655 = distinct !DILexicalBlock(scope: !7649, file: !3, line: 3001, column: 3)
!7656 = !DILocation(line: 3001, column: 3, scope: !7649)
!7657 = !DILocation(line: 3003, column: 8, scope: !7658)
!7658 = distinct !DILexicalBlock(scope: !7659, file: !3, line: 3003, column: 8)
!7659 = distinct !DILexicalBlock(scope: !7655, file: !3, line: 3001, column: 59)
!7660 = !DILocation(line: 3003, column: 16, scope: !7658)
!7661 = !DILocation(line: 3003, column: 13, scope: !7658)
!7662 = !DILocation(line: 3003, column: 8, scope: !7659)
!7663 = !DILocalVariable(name: "posx", scope: !7664, file: !3, line: 3004, type: !34)
!7664 = distinct !DILexicalBlock(scope: !7658, file: !3, line: 3003, column: 21)
!7665 = !DILocation(line: 3004, column: 9, scope: !7664)
!7666 = !DILocation(line: 3004, column: 25, scope: !7664)
!7667 = !DILocation(line: 3004, column: 37, scope: !7664)
!7668 = !DILocation(line: 3004, column: 43, scope: !7664)
!7669 = !DILocation(line: 3004, column: 35, scope: !7664)
!7670 = !DILocation(line: 3004, column: 16, scope: !7664)
!7671 = !DILocalVariable(name: "posy", scope: !7664, file: !3, line: 3005, type: !34)
!7672 = !DILocation(line: 3005, column: 9, scope: !7664)
!7673 = !DILocation(line: 3005, column: 25, scope: !7664)
!7674 = !DILocation(line: 3005, column: 37, scope: !7664)
!7675 = !DILocation(line: 3005, column: 43, scope: !7664)
!7676 = !DILocation(line: 3005, column: 35, scope: !7664)
!7677 = !DILocation(line: 3005, column: 16, scope: !7664)
!7678 = !DILocation(line: 3007, column: 9, scope: !7679)
!7679 = distinct !DILexicalBlock(scope: !7664, file: !3, line: 3007, column: 9)
!7680 = !DILocation(line: 3007, column: 14, scope: !7679)
!7681 = !DILocation(line: 3007, column: 12, scope: !7679)
!7682 = !DILocation(line: 3007, column: 19, scope: !7679)
!7683 = !DILocation(line: 3007, column: 24, scope: !7679)
!7684 = !DILocation(line: 3007, column: 27, scope: !7679)
!7685 = !DILocation(line: 3007, column: 33, scope: !7679)
!7686 = !DILocation(line: 3007, column: 38, scope: !7679)
!7687 = !DILocation(line: 3007, column: 43, scope: !7679)
!7688 = !DILocation(line: 3008, column: 9, scope: !7679)
!7689 = !DILocation(line: 3008, column: 14, scope: !7679)
!7690 = !DILocation(line: 3008, column: 12, scope: !7679)
!7691 = !DILocation(line: 3008, column: 41, scope: !7679)
!7692 = !DILocation(line: 3008, column: 22, scope: !7679)
!7693 = !DILocation(line: 3008, column: 19, scope: !7679)
!7694 = !DILocation(line: 3008, column: 47, scope: !7679)
!7695 = !DILocation(line: 3008, column: 50, scope: !7679)
!7696 = !DILocation(line: 3008, column: 55, scope: !7679)
!7697 = !DILocation(line: 3008, column: 53, scope: !7679)
!7698 = !DILocation(line: 3008, column: 82, scope: !7679)
!7699 = !DILocation(line: 3008, column: 63, scope: !7679)
!7700 = !DILocation(line: 3008, column: 60, scope: !7679)
!7701 = !DILocation(line: 3007, column: 9, scope: !7664)
!7702 = !DILocation(line: 3010, column: 17, scope: !7703)
!7703 = distinct !DILexicalBlock(scope: !7679, file: !3, line: 3009, column: 5)
!7704 = !DILocation(line: 3010, column: 30, scope: !7703)
!7705 = !DILocation(line: 3010, column: 42, scope: !7703)
!7706 = !DILocation(line: 3010, column: 48, scope: !7703)
!7707 = !DILocation(line: 3010, column: 40, scope: !7703)
!7708 = !DILocation(line: 3010, column: 22, scope: !7703)
!7709 = !DILocation(line: 3010, column: 20, scope: !7703)
!7710 = !DILocation(line: 3010, column: 6, scope: !7703)
!7711 = !DILocation(line: 3010, column: 13, scope: !7703)
!7712 = !DILocation(line: 3010, column: 15, scope: !7703)
!7713 = !DILocation(line: 3011, column: 17, scope: !7703)
!7714 = !DILocation(line: 3011, column: 30, scope: !7703)
!7715 = !DILocation(line: 3011, column: 42, scope: !7703)
!7716 = !DILocation(line: 3011, column: 48, scope: !7703)
!7717 = !DILocation(line: 3011, column: 40, scope: !7703)
!7718 = !DILocation(line: 3011, column: 22, scope: !7703)
!7719 = !DILocation(line: 3011, column: 20, scope: !7703)
!7720 = !DILocation(line: 3011, column: 6, scope: !7703)
!7721 = !DILocation(line: 3011, column: 13, scope: !7703)
!7722 = !DILocation(line: 3011, column: 15, scope: !7703)
!7723 = !DILocation(line: 3013, column: 13, scope: !7703)
!7724 = !DILocation(line: 3013, column: 6, scope: !7703)
!7725 = !DILocation(line: 3015, column: 4, scope: !7664)
!7726 = !DILocation(line: 3016, column: 3, scope: !7659)
!7727 = !DILocation(line: 3001, column: 47, scope: !7655)
!7728 = !DILocation(line: 3001, column: 53, scope: !7655)
!7729 = !DILocation(line: 3001, column: 45, scope: !7655)
!7730 = !DILocation(line: 3001, column: 3, scope: !7655)
!7731 = distinct !{!7731, !7656, !7732}
!7732 = !DILocation(line: 3016, column: 3, scope: !7649)
!7733 = !DILocation(line: 3017, column: 2, scope: !7609)
!7734 = !DILocation(line: 3018, column: 2, scope: !7563)
!7735 = !DILocation(line: 3019, column: 1, scope: !7563)
!7736 = !DILocalVariable(name: "event", arg: 1, scope: !2557, file: !3, line: 2856, type: !2552)
!7737 = !DILocation(line: 2856, column: 40, scope: !2557)
!7738 = !DILocation(line: 2862, column: 8, scope: !7739)
!7739 = distinct !DILexicalBlock(scope: !2557, file: !3, line: 2862, column: 6)
!7740 = !DILocation(line: 2862, column: 13, scope: !7739)
!7741 = !DILocation(line: 2862, column: 6, scope: !2557)
!7742 = !DILocation(line: 2863, column: 7, scope: !7743)
!7743 = distinct !DILexicalBlock(scope: !7744, file: !3, line: 2863, column: 7)
!7744 = distinct !DILexicalBlock(scope: !7739, file: !3, line: 2862, column: 36)
!7745 = !DILocation(line: 2863, column: 14, scope: !7743)
!7746 = !DILocation(line: 2863, column: 19, scope: !7743)
!7747 = !DILocation(line: 2863, column: 7, scope: !7744)
!7748 = !DILocation(line: 2865, column: 8, scope: !7749)
!7749 = distinct !DILexicalBlock(scope: !7750, file: !3, line: 2865, column: 8)
!7750 = distinct !DILexicalBlock(scope: !7743, file: !3, line: 2863, column: 33)
!7751 = !DILocation(line: 2865, column: 15, scope: !7749)
!7752 = !DILocation(line: 2865, column: 19, scope: !7749)
!7753 = !DILocation(line: 2865, column: 31, scope: !7749)
!7754 = !DILocation(line: 2865, column: 34, scope: !7749)
!7755 = !DILocation(line: 2865, column: 41, scope: !7749)
!7756 = !DILocation(line: 2865, column: 8, scope: !7750)
!7757 = !DILocation(line: 2866, column: 5, scope: !7758)
!7758 = distinct !DILexicalBlock(scope: !7749, file: !3, line: 2865, column: 46)
!7759 = !DILocation(line: 2866, column: 12, scope: !7758)
!7760 = !DILocation(line: 2866, column: 17, scope: !7758)
!7761 = !DILocation(line: 2867, column: 5, scope: !7758)
!7762 = !DILocation(line: 2867, column: 12, scope: !7758)
!7763 = !DILocation(line: 2867, column: 16, scope: !7758)
!7764 = !DILocation(line: 2868, column: 18, scope: !7758)
!7765 = !DILocation(line: 2869, column: 4, scope: !7758)
!7766 = !DILocation(line: 2870, column: 13, scope: !7767)
!7767 = distinct !DILexicalBlock(scope: !7749, file: !3, line: 2870, column: 13)
!7768 = !DILocation(line: 2870, column: 20, scope: !7767)
!7769 = !DILocation(line: 2870, column: 24, scope: !7767)
!7770 = !DILocation(line: 2870, column: 13, scope: !7749)
!7771 = !DILocation(line: 2872, column: 9, scope: !7772)
!7772 = distinct !DILexicalBlock(scope: !7773, file: !3, line: 2872, column: 9)
!7773 = distinct !DILexicalBlock(scope: !7767, file: !3, line: 2870, column: 39)
!7774 = !DILocation(line: 2872, column: 9, scope: !7773)
!7775 = !DILocation(line: 2873, column: 6, scope: !7776)
!7776 = distinct !DILexicalBlock(scope: !7772, file: !3, line: 2872, column: 23)
!7777 = !DILocation(line: 2873, column: 13, scope: !7776)
!7778 = !DILocation(line: 2873, column: 18, scope: !7776)
!7779 = !DILocation(line: 2874, column: 6, scope: !7776)
!7780 = !DILocation(line: 2874, column: 13, scope: !7776)
!7781 = !DILocation(line: 2874, column: 17, scope: !7776)
!7782 = !DILocation(line: 2875, column: 5, scope: !7776)
!7783 = !DILocation(line: 2876, column: 18, scope: !7773)
!7784 = !DILocation(line: 2877, column: 4, scope: !7773)
!7785 = !DILocation(line: 2878, column: 3, scope: !7750)
!7786 = !DILocation(line: 2880, column: 2, scope: !7744)
!7787 = !DILocation(line: 2906, column: 8, scope: !7788)
!7788 = distinct !DILexicalBlock(scope: !2557, file: !3, line: 2906, column: 6)
!7789 = !DILocation(line: 2906, column: 13, scope: !7788)
!7790 = !DILocation(line: 2906, column: 6, scope: !2557)
!7791 = !DILocation(line: 2907, column: 11, scope: !7792)
!7792 = distinct !DILexicalBlock(scope: !7788, file: !3, line: 2906, column: 30)
!7793 = !DILocation(line: 2907, column: 18, scope: !7792)
!7794 = !DILocation(line: 2907, column: 3, scope: !7792)
!7795 = !DILocation(line: 2908, column: 18, scope: !7796)
!7796 = distinct !DILexicalBlock(scope: !7792, file: !3, line: 2907, column: 24)
!7797 = !DILocation(line: 2908, column: 25, scope: !7796)
!7798 = !DILocation(line: 2908, column: 30, scope: !7796)
!7799 = !DILocation(line: 2908, column: 38, scope: !7796)
!7800 = !DILocation(line: 2909, column: 17, scope: !7796)
!7801 = !DILocation(line: 2909, column: 24, scope: !7796)
!7802 = !DILocation(line: 2909, column: 29, scope: !7796)
!7803 = !DILocation(line: 2909, column: 37, scope: !7796)
!7804 = !DILocation(line: 2910, column: 17, scope: !7796)
!7805 = !DILocation(line: 2910, column: 24, scope: !7796)
!7806 = !DILocation(line: 2910, column: 29, scope: !7796)
!7807 = !DILocation(line: 2910, column: 37, scope: !7796)
!7808 = !DILocation(line: 2911, column: 19, scope: !7796)
!7809 = !DILocation(line: 2911, column: 26, scope: !7796)
!7810 = !DILocation(line: 2911, column: 31, scope: !7796)
!7811 = !DILocation(line: 2911, column: 39, scope: !7796)
!7812 = !DILocation(line: 2912, column: 18, scope: !7796)
!7813 = !DILocation(line: 2912, column: 25, scope: !7796)
!7814 = !DILocation(line: 2912, column: 30, scope: !7796)
!7815 = !DILocation(line: 2912, column: 38, scope: !7796)
!7816 = !DILocation(line: 2913, column: 18, scope: !7796)
!7817 = !DILocation(line: 2913, column: 25, scope: !7796)
!7818 = !DILocation(line: 2913, column: 30, scope: !7796)
!7819 = !DILocation(line: 2913, column: 38, scope: !7796)
!7820 = !DILocation(line: 2914, column: 17, scope: !7796)
!7821 = !DILocation(line: 2914, column: 24, scope: !7796)
!7822 = !DILocation(line: 2914, column: 29, scope: !7796)
!7823 = !DILocation(line: 2914, column: 37, scope: !7796)
!7824 = !DILocation(line: 2915, column: 19, scope: !7796)
!7825 = !DILocation(line: 2915, column: 26, scope: !7796)
!7826 = !DILocation(line: 2915, column: 31, scope: !7796)
!7827 = !DILocation(line: 2915, column: 39, scope: !7796)
!7828 = !DILocation(line: 2916, column: 19, scope: !7796)
!7829 = !DILocation(line: 2916, column: 26, scope: !7796)
!7830 = !DILocation(line: 2916, column: 31, scope: !7796)
!7831 = !DILocation(line: 2916, column: 39, scope: !7796)
!7832 = !DILocation(line: 2917, column: 18, scope: !7796)
!7833 = !DILocation(line: 2917, column: 25, scope: !7796)
!7834 = !DILocation(line: 2917, column: 30, scope: !7796)
!7835 = !DILocation(line: 2917, column: 38, scope: !7796)
!7836 = !DILocation(line: 2918, column: 19, scope: !7796)
!7837 = !DILocation(line: 2918, column: 26, scope: !7796)
!7838 = !DILocation(line: 2918, column: 31, scope: !7796)
!7839 = !DILocation(line: 2918, column: 43, scope: !7796)
!7840 = !DILocation(line: 2919, column: 19, scope: !7796)
!7841 = !DILocation(line: 2919, column: 26, scope: !7796)
!7842 = !DILocation(line: 2919, column: 31, scope: !7796)
!7843 = !DILocation(line: 2919, column: 45, scope: !7796)
!7844 = !DILocation(line: 2920, column: 23, scope: !7796)
!7845 = !DILocation(line: 2920, column: 30, scope: !7796)
!7846 = !DILocation(line: 2920, column: 35, scope: !7796)
!7847 = !DILocation(line: 2920, column: 50, scope: !7796)
!7848 = !DILocation(line: 2922, column: 2, scope: !7792)
!7849 = !DILocation(line: 2923, column: 1, scope: !2557)
!7850 = distinct !DISubprogram(name: "wm_event_is_double_click", scope: !3, file: !3, line: 3021, type: !7851, scopeLine: 3022, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!7851 = !DISubroutineType(types: !7852)
!7852 = !{!73, !2552, !2552}
!7853 = !DILocalVariable(name: "event", arg: 1, scope: !7850, file: !3, line: 3021, type: !2552)
!7854 = !DILocation(line: 3021, column: 47, scope: !7850)
!7855 = !DILocalVariable(name: "event_state", arg: 2, scope: !7850, file: !3, line: 3021, type: !2552)
!7856 = !DILocation(line: 3021, column: 63, scope: !7850)
!7857 = !DILocation(line: 3023, column: 7, scope: !7858)
!7858 = distinct !DILexicalBlock(scope: !7850, file: !3, line: 3023, column: 6)
!7859 = !DILocation(line: 3023, column: 14, scope: !7858)
!7860 = !DILocation(line: 3023, column: 22, scope: !7858)
!7861 = !DILocation(line: 3023, column: 35, scope: !7858)
!7862 = !DILocation(line: 3023, column: 19, scope: !7858)
!7863 = !DILocation(line: 3023, column: 45, scope: !7858)
!7864 = !DILocation(line: 3024, column: 7, scope: !7858)
!7865 = !DILocation(line: 3024, column: 20, scope: !7858)
!7866 = !DILocation(line: 3024, column: 28, scope: !7858)
!7867 = !DILocation(line: 3024, column: 43, scope: !7858)
!7868 = !DILocation(line: 3025, column: 7, scope: !7858)
!7869 = !DILocation(line: 3025, column: 14, scope: !7858)
!7870 = !DILocation(line: 3025, column: 18, scope: !7858)
!7871 = !DILocation(line: 3023, column: 6, scope: !7850)
!7872 = !DILocation(line: 3027, column: 8, scope: !7873)
!7873 = distinct !DILexicalBlock(scope: !7874, file: !3, line: 3027, column: 7)
!7874 = distinct !DILexicalBlock(scope: !7858, file: !3, line: 3026, column: 2)
!7875 = !DILocation(line: 0, scope: !7873)
!7876 = !DILocation(line: 3027, column: 29, scope: !7873)
!7877 = !DILocation(line: 3027, column: 39, scope: !7873)
!7878 = !DILocation(line: 3027, column: 44, scope: !7873)
!7879 = !DILocation(line: 3027, column: 85, scope: !7873)
!7880 = !DILocation(line: 3027, column: 90, scope: !7873)
!7881 = !DILocation(line: 3028, column: 44, scope: !7873)
!7882 = !DILocation(line: 3028, column: 85, scope: !7873)
!7883 = !DILocation(line: 3027, column: 7, scope: !7874)
!7884 = !DILocation(line: 3030, column: 9, scope: !7885)
!7885 = distinct !DILexicalBlock(scope: !7886, file: !3, line: 3030, column: 8)
!7886 = distinct !DILexicalBlock(scope: !7873, file: !3, line: 3029, column: 3)
!7887 = !DILocation(line: 3030, column: 37, scope: !7885)
!7888 = !DILocation(line: 3030, column: 50, scope: !7885)
!7889 = !DILocation(line: 3030, column: 35, scope: !7885)
!7890 = !DILocation(line: 3030, column: 65, scope: !7885)
!7891 = !DILocation(line: 3030, column: 76, scope: !7885)
!7892 = !DILocation(line: 3030, column: 74, scope: !7885)
!7893 = !DILocation(line: 3030, column: 72, scope: !7885)
!7894 = !DILocation(line: 3030, column: 8, scope: !7886)
!7895 = !DILocation(line: 3031, column: 5, scope: !7896)
!7896 = distinct !DILexicalBlock(scope: !7885, file: !3, line: 3030, column: 92)
!7897 = !DILocation(line: 3033, column: 3, scope: !7886)
!7898 = !DILocation(line: 3034, column: 2, scope: !7874)
!7899 = !DILocation(line: 3036, column: 2, scope: !7850)
!7900 = !DILocation(line: 3037, column: 1, scope: !7850)
!7901 = distinct !DISubprogram(name: "convert_key", scope: !3, file: !3, line: 2771, type: !7902, scopeLine: 2772, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!7902 = !DISubroutineType(types: !7903)
!7903 = !{!34, !7116}
!7904 = !DILocalVariable(name: "key", arg: 1, scope: !7901, file: !3, line: 2771, type: !7116)
!7905 = !DILocation(line: 2771, column: 35, scope: !7901)
!7906 = !DILocation(line: 2773, column: 6, scope: !7907)
!7907 = distinct !DILexicalBlock(scope: !7901, file: !3, line: 2773, column: 6)
!7908 = !DILocation(line: 2773, column: 10, scope: !7907)
!7909 = !DILocation(line: 2773, column: 25, scope: !7907)
!7910 = !DILocation(line: 2773, column: 28, scope: !7907)
!7911 = !DILocation(line: 2773, column: 32, scope: !7907)
!7912 = !DILocation(line: 2773, column: 6, scope: !7901)
!7913 = !DILocation(line: 2774, column: 25, scope: !7914)
!7914 = distinct !DILexicalBlock(scope: !7907, file: !3, line: 2773, column: 48)
!7915 = !DILocation(line: 2774, column: 29, scope: !7914)
!7916 = !DILocation(line: 2774, column: 16, scope: !7914)
!7917 = !DILocation(line: 2774, column: 3, scope: !7914)
!7918 = !DILocation(line: 2776, column: 11, scope: !7919)
!7919 = distinct !DILexicalBlock(scope: !7907, file: !3, line: 2776, column: 11)
!7920 = !DILocation(line: 2776, column: 15, scope: !7919)
!7921 = !DILocation(line: 2776, column: 30, scope: !7919)
!7922 = !DILocation(line: 2776, column: 33, scope: !7919)
!7923 = !DILocation(line: 2776, column: 37, scope: !7919)
!7924 = !DILocation(line: 2776, column: 11, scope: !7907)
!7925 = !DILocation(line: 2777, column: 28, scope: !7926)
!7926 = distinct !DILexicalBlock(scope: !7919, file: !3, line: 2776, column: 53)
!7927 = !DILocation(line: 2777, column: 32, scope: !7926)
!7928 = !DILocation(line: 2777, column: 19, scope: !7926)
!7929 = !DILocation(line: 2777, column: 3, scope: !7926)
!7930 = !DILocation(line: 2779, column: 11, scope: !7931)
!7931 = distinct !DILexicalBlock(scope: !7919, file: !3, line: 2779, column: 11)
!7932 = !DILocation(line: 2779, column: 15, scope: !7931)
!7933 = !DILocation(line: 2779, column: 36, scope: !7931)
!7934 = !DILocation(line: 2779, column: 39, scope: !7931)
!7935 = !DILocation(line: 2779, column: 43, scope: !7931)
!7936 = !DILocation(line: 2779, column: 11, scope: !7919)
!7937 = !DILocation(line: 2780, column: 25, scope: !7938)
!7938 = distinct !DILexicalBlock(scope: !7931, file: !3, line: 2779, column: 65)
!7939 = !DILocation(line: 2780, column: 29, scope: !7938)
!7940 = !DILocation(line: 2780, column: 16, scope: !7938)
!7941 = !DILocation(line: 2780, column: 3, scope: !7938)
!7942 = !DILocation(line: 2782, column: 11, scope: !7943)
!7943 = distinct !DILexicalBlock(scope: !7931, file: !3, line: 2782, column: 11)
!7944 = !DILocation(line: 2782, column: 15, scope: !7943)
!7945 = !DILocation(line: 2782, column: 31, scope: !7943)
!7946 = !DILocation(line: 2782, column: 34, scope: !7943)
!7947 = !DILocation(line: 2782, column: 38, scope: !7943)
!7948 = !DILocation(line: 2782, column: 11, scope: !7931)
!7949 = !DILocation(line: 2783, column: 26, scope: !7950)
!7950 = distinct !DILexicalBlock(scope: !7943, file: !3, line: 2782, column: 56)
!7951 = !DILocation(line: 2783, column: 30, scope: !7950)
!7952 = !DILocation(line: 2783, column: 17, scope: !7950)
!7953 = !DILocation(line: 2783, column: 3, scope: !7950)
!7954 = !DILocation(line: 2786, column: 11, scope: !7955)
!7955 = distinct !DILexicalBlock(scope: !7943, file: !3, line: 2785, column: 7)
!7956 = !DILocation(line: 2786, column: 3, scope: !7955)
!7957 = !DILocation(line: 2787, column: 36, scope: !7958)
!7958 = distinct !DILexicalBlock(scope: !7955, file: !3, line: 2786, column: 16)
!7959 = !DILocation(line: 2788, column: 36, scope: !7958)
!7960 = !DILocation(line: 2789, column: 36, scope: !7958)
!7961 = !DILocation(line: 2790, column: 36, scope: !7958)
!7962 = !DILocation(line: 2791, column: 36, scope: !7958)
!7963 = !DILocation(line: 2793, column: 36, scope: !7958)
!7964 = !DILocation(line: 2794, column: 36, scope: !7958)
!7965 = !DILocation(line: 2795, column: 36, scope: !7958)
!7966 = !DILocation(line: 2796, column: 36, scope: !7958)
!7967 = !DILocation(line: 2797, column: 36, scope: !7958)
!7968 = !DILocation(line: 2798, column: 36, scope: !7958)
!7969 = !DILocation(line: 2799, column: 36, scope: !7958)
!7970 = !DILocation(line: 2801, column: 36, scope: !7958)
!7971 = !DILocation(line: 2802, column: 36, scope: !7958)
!7972 = !DILocation(line: 2804, column: 36, scope: !7958)
!7973 = !DILocation(line: 2805, column: 36, scope: !7958)
!7974 = !DILocation(line: 2806, column: 36, scope: !7958)
!7975 = !DILocation(line: 2807, column: 36, scope: !7958)
!7976 = !DILocation(line: 2809, column: 36, scope: !7958)
!7977 = !DILocation(line: 2810, column: 36, scope: !7958)
!7978 = !DILocation(line: 2811, column: 36, scope: !7958)
!7979 = !DILocation(line: 2812, column: 36, scope: !7958)
!7980 = !DILocation(line: 2813, column: 36, scope: !7958)
!7981 = !DILocation(line: 2814, column: 36, scope: !7958)
!7982 = !DILocation(line: 2815, column: 36, scope: !7958)
!7983 = !DILocation(line: 2817, column: 36, scope: !7958)
!7984 = !DILocation(line: 2818, column: 36, scope: !7958)
!7985 = !DILocation(line: 2819, column: 36, scope: !7958)
!7986 = !DILocation(line: 2821, column: 36, scope: !7958)
!7987 = !DILocation(line: 2822, column: 36, scope: !7958)
!7988 = !DILocation(line: 2823, column: 36, scope: !7958)
!7989 = !DILocation(line: 2824, column: 36, scope: !7958)
!7990 = !DILocation(line: 2826, column: 36, scope: !7958)
!7991 = !DILocation(line: 2827, column: 36, scope: !7958)
!7992 = !DILocation(line: 2829, column: 36, scope: !7958)
!7993 = !DILocation(line: 2830, column: 36, scope: !7958)
!7994 = !DILocation(line: 2831, column: 36, scope: !7958)
!7995 = !DILocation(line: 2832, column: 36, scope: !7958)
!7996 = !DILocation(line: 2833, column: 36, scope: !7958)
!7997 = !DILocation(line: 2834, column: 36, scope: !7958)
!7998 = !DILocation(line: 2836, column: 36, scope: !7958)
!7999 = !DILocation(line: 2837, column: 36, scope: !7958)
!8000 = !DILocation(line: 2838, column: 36, scope: !7958)
!8001 = !DILocation(line: 2839, column: 36, scope: !7958)
!8002 = !DILocation(line: 2840, column: 36, scope: !7958)
!8003 = !DILocation(line: 2841, column: 36, scope: !7958)
!8004 = !DILocation(line: 2843, column: 36, scope: !7958)
!8005 = !DILocation(line: 2845, column: 36, scope: !7958)
!8006 = !DILocation(line: 2846, column: 36, scope: !7958)
!8007 = !DILocation(line: 2847, column: 36, scope: !7958)
!8008 = !DILocation(line: 2848, column: 36, scope: !7958)
!8009 = !DILocation(line: 2851, column: 5, scope: !7958)
!8010 = !DILocation(line: 2854, column: 1, scope: !7901)
!8011 = distinct !DISubprogram(name: "attach_ndof_data", scope: !3, file: !3, line: 2949, type: !8012, scopeLine: 2950, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!8012 = !DISubroutineType(types: !8013)
!8013 = !{null, !2552, !8014}
!8014 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8015, size: 64)
!8015 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8016)
!8016 = !DIDerivedType(tag: DW_TAG_typedef, name: "GHOST_TEventNDOFMotionData", file: !1969, line: 462, baseType: !8017)
!8017 = distinct !DICompositeType(tag: DW_TAG_structure_type, file: !1969, line: 452, size: 256, elements: !8018)
!8018 = !{!8019, !8020, !8021, !8022, !8023, !8024, !8025, !8026}
!8019 = !DIDerivedType(tag: DW_TAG_member, name: "tx", scope: !8017, file: !1969, line: 456, baseType: !120, size: 32)
!8020 = !DIDerivedType(tag: DW_TAG_member, name: "ty", scope: !8017, file: !1969, line: 456, baseType: !120, size: 32, offset: 32)
!8021 = !DIDerivedType(tag: DW_TAG_member, name: "tz", scope: !8017, file: !1969, line: 456, baseType: !120, size: 32, offset: 64)
!8022 = !DIDerivedType(tag: DW_TAG_member, name: "rx", scope: !8017, file: !1969, line: 457, baseType: !120, size: 32, offset: 96)
!8023 = !DIDerivedType(tag: DW_TAG_member, name: "ry", scope: !8017, file: !1969, line: 457, baseType: !120, size: 32, offset: 128)
!8024 = !DIDerivedType(tag: DW_TAG_member, name: "rz", scope: !8017, file: !1969, line: 457, baseType: !120, size: 32, offset: 160)
!8025 = !DIDerivedType(tag: DW_TAG_member, name: "dt", scope: !8017, file: !1969, line: 460, baseType: !120, size: 32, offset: 192)
!8026 = !DIDerivedType(tag: DW_TAG_member, name: "progress", scope: !8017, file: !1969, line: 461, baseType: !8027, size: 32, offset: 224)
!8027 = !DIDerivedType(tag: DW_TAG_typedef, name: "GHOST_TProgress", file: !1969, line: 450, baseType: !2193)
!8028 = !DILocalVariable(name: "event", arg: 1, scope: !8011, file: !3, line: 2949, type: !2552)
!8029 = !DILocation(line: 2949, column: 39, scope: !8011)
!8030 = !DILocalVariable(name: "ghost", arg: 2, scope: !8011, file: !3, line: 2949, type: !8014)
!8031 = !DILocation(line: 2949, column: 80, scope: !8011)
!8032 = !DILocalVariable(name: "data", scope: !8011, file: !3, line: 2951, type: !8033)
!8033 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8034, size: 64)
!8034 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmNDOFMotionData", file: !55, line: 488, baseType: !8035)
!8035 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmNDOFMotionData", file: !55, line: 478, size: 256, elements: !8036)
!8036 = !{!8037, !8038, !8039, !8040}
!8037 = !DIDerivedType(tag: DW_TAG_member, name: "tvec", scope: !8035, file: !55, line: 482, baseType: !308, size: 96)
!8038 = !DIDerivedType(tag: DW_TAG_member, name: "rvec", scope: !8035, file: !55, line: 483, baseType: !308, size: 96, offset: 96)
!8039 = !DIDerivedType(tag: DW_TAG_member, name: "dt", scope: !8035, file: !55, line: 486, baseType: !120, size: 32, offset: 192)
!8040 = !DIDerivedType(tag: DW_TAG_member, name: "progress", scope: !8035, file: !55, line: 487, baseType: !2395, size: 32, offset: 224)
!8041 = !DILocation(line: 2951, column: 20, scope: !8011)
!8042 = !DILocation(line: 2951, column: 27, scope: !8011)
!8043 = !DILocalVariable(name: "ts", scope: !8011, file: !3, line: 2953, type: !8044)
!8044 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !120)
!8045 = !DILocation(line: 2953, column: 14, scope: !8011)
!8046 = !DILocation(line: 2953, column: 21, scope: !8011)
!8047 = !DILocalVariable(name: "rs", scope: !8011, file: !3, line: 2954, type: !8044)
!8048 = !DILocation(line: 2954, column: 14, scope: !8011)
!8049 = !DILocation(line: 2954, column: 21, scope: !8011)
!8050 = !DILocation(line: 2956, column: 14, scope: !8011)
!8051 = !DILocation(line: 2956, column: 20, scope: !8011)
!8052 = !DILocation(line: 2956, column: 27, scope: !8011)
!8053 = !DILocation(line: 2956, column: 34, scope: !8011)
!8054 = !DILocation(line: 2956, column: 38, scope: !8011)
!8055 = !DILocation(line: 2956, column: 2, scope: !8011)
!8056 = !DILocation(line: 2957, column: 14, scope: !8011)
!8057 = !DILocation(line: 2957, column: 20, scope: !8011)
!8058 = !DILocation(line: 2957, column: 27, scope: !8011)
!8059 = !DILocation(line: 2957, column: 34, scope: !8011)
!8060 = !DILocation(line: 2957, column: 38, scope: !8011)
!8061 = !DILocation(line: 2957, column: 2, scope: !8011)
!8062 = !DILocation(line: 2959, column: 8, scope: !8063)
!8063 = distinct !DILexicalBlock(scope: !8011, file: !3, line: 2959, column: 6)
!8064 = !DILocation(line: 2959, column: 18, scope: !8063)
!8065 = !DILocation(line: 2959, column: 6, scope: !8011)
!8066 = !DILocalVariable(name: "t", scope: !8067, file: !3, line: 2960, type: !120)
!8067 = distinct !DILexicalBlock(scope: !8063, file: !3, line: 2959, column: 43)
!8068 = !DILocation(line: 2960, column: 9, scope: !8067)
!8069 = !DILocation(line: 2961, column: 8, scope: !8067)
!8070 = !DILocation(line: 2961, column: 14, scope: !8067)
!8071 = !DILocation(line: 2961, column: 5, scope: !8067)
!8072 = !DILocation(line: 2962, column: 20, scope: !8067)
!8073 = !DILocation(line: 2962, column: 26, scope: !8067)
!8074 = !DILocation(line: 2962, column: 19, scope: !8067)
!8075 = !DILocation(line: 2962, column: 3, scope: !8067)
!8076 = !DILocation(line: 2962, column: 9, scope: !8067)
!8077 = !DILocation(line: 2962, column: 17, scope: !8067)
!8078 = !DILocation(line: 2963, column: 19, scope: !8067)
!8079 = !DILocation(line: 2963, column: 3, scope: !8067)
!8080 = !DILocation(line: 2963, column: 9, scope: !8067)
!8081 = !DILocation(line: 2963, column: 17, scope: !8067)
!8082 = !DILocation(line: 2964, column: 2, scope: !8067)
!8083 = !DILocation(line: 2966, column: 13, scope: !8011)
!8084 = !DILocation(line: 2966, column: 20, scope: !8011)
!8085 = !DILocation(line: 2966, column: 2, scope: !8011)
!8086 = !DILocation(line: 2966, column: 8, scope: !8011)
!8087 = !DILocation(line: 2966, column: 11, scope: !8011)
!8088 = !DILocation(line: 2968, column: 32, scope: !8011)
!8089 = !DILocation(line: 2968, column: 39, scope: !8011)
!8090 = !DILocation(line: 2968, column: 2, scope: !8011)
!8091 = !DILocation(line: 2968, column: 8, scope: !8011)
!8092 = !DILocation(line: 2968, column: 17, scope: !8011)
!8093 = !DILocation(line: 2970, column: 2, scope: !8011)
!8094 = !DILocation(line: 2970, column: 9, scope: !8011)
!8095 = !DILocation(line: 2970, column: 16, scope: !8011)
!8096 = !DILocation(line: 2971, column: 22, scope: !8011)
!8097 = !DILocation(line: 2971, column: 2, scope: !8011)
!8098 = !DILocation(line: 2971, column: 9, scope: !8011)
!8099 = !DILocation(line: 2971, column: 20, scope: !8011)
!8100 = !DILocation(line: 2972, column: 2, scope: !8011)
!8101 = !DILocation(line: 2972, column: 9, scope: !8011)
!8102 = !DILocation(line: 2972, column: 24, scope: !8011)
!8103 = !DILocation(line: 2973, column: 1, scope: !8011)
!8104 = distinct !DISubprogram(name: "WM_set_locked_interface", scope: !3, file: !3, line: 3397, type: !8105, scopeLine: 3398, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!8105 = !DISubroutineType(types: !8106)
!8106 = !{null, !1543, !73}
!8107 = !DILocalVariable(name: "wm", arg: 1, scope: !8104, file: !3, line: 3397, type: !1543)
!8108 = !DILocation(line: 3397, column: 47, scope: !8104)
!8109 = !DILocalVariable(name: "lock", arg: 2, scope: !8104, file: !3, line: 3397, type: !73)
!8110 = !DILocation(line: 3397, column: 56, scope: !8104)
!8111 = !DILocation(line: 3406, column: 28, scope: !8104)
!8112 = !DILocation(line: 3406, column: 2, scope: !8104)
!8113 = !DILocation(line: 3406, column: 6, scope: !8104)
!8114 = !DILocation(line: 3406, column: 26, scope: !8104)
!8115 = !DILocation(line: 3415, column: 27, scope: !8104)
!8116 = !DILocation(line: 3415, column: 2, scope: !8104)
!8117 = !DILocation(line: 3416, column: 1, scope: !8104)
!8118 = distinct !DISubprogram(name: "WM_event_ndof_pan_get", scope: !3, file: !3, line: 3426, type: !8119, scopeLine: 3427, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!8119 = !DISubroutineType(types: !8120)
!8120 = !{null, !8121, !2455, !3587}
!8121 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8122, size: 64)
!8122 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8034)
!8123 = !DILocalVariable(name: "ndof", arg: 1, scope: !8118, file: !3, line: 3426, type: !8121)
!8124 = !DILocation(line: 3426, column: 52, scope: !8118)
!8125 = !DILocalVariable(name: "r_pan", arg: 2, scope: !8118, file: !3, line: 3426, type: !2455)
!8126 = !DILocation(line: 3426, column: 64, scope: !8118)
!8127 = !DILocalVariable(name: "use_zoom", arg: 3, scope: !8118, file: !3, line: 3426, type: !3587)
!8128 = !DILocation(line: 3426, column: 85, scope: !8118)
!8129 = !DILocalVariable(name: "z_flag", scope: !8118, file: !3, line: 3428, type: !34)
!8130 = !DILocation(line: 3428, column: 6, scope: !8118)
!8131 = !DILocation(line: 3428, column: 15, scope: !8118)
!8132 = !DILocation(line: 3429, column: 13, scope: !8118)
!8133 = !DILocation(line: 3429, column: 19, scope: !8118)
!8134 = !DILocation(line: 3429, column: 33, scope: !8118)
!8135 = !DILocation(line: 3429, column: 43, scope: !8118)
!8136 = !DILocation(line: 3429, column: 30, scope: !8118)
!8137 = !DILocation(line: 3429, column: 27, scope: !8118)
!8138 = !DILocation(line: 3429, column: 2, scope: !8118)
!8139 = !DILocation(line: 3429, column: 11, scope: !8118)
!8140 = !DILocation(line: 3430, column: 13, scope: !8118)
!8141 = !DILocation(line: 3430, column: 19, scope: !8118)
!8142 = !DILocation(line: 3430, column: 33, scope: !8118)
!8143 = !DILocation(line: 3430, column: 43, scope: !8118)
!8144 = !DILocation(line: 3430, column: 30, scope: !8118)
!8145 = !DILocation(line: 3430, column: 27, scope: !8118)
!8146 = !DILocation(line: 3430, column: 2, scope: !8118)
!8147 = !DILocation(line: 3430, column: 11, scope: !8118)
!8148 = !DILocation(line: 3431, column: 13, scope: !8118)
!8149 = !DILocation(line: 3431, column: 19, scope: !8118)
!8150 = !DILocation(line: 3431, column: 33, scope: !8118)
!8151 = !DILocation(line: 3431, column: 45, scope: !8118)
!8152 = !DILocation(line: 3431, column: 43, scope: !8118)
!8153 = !DILocation(line: 3431, column: 30, scope: !8118)
!8154 = !DILocation(line: 3431, column: 27, scope: !8118)
!8155 = !DILocation(line: 3431, column: 2, scope: !8118)
!8156 = !DILocation(line: 3431, column: 11, scope: !8118)
!8157 = !DILocation(line: 3432, column: 1, scope: !8118)
!8158 = distinct !DISubprogram(name: "WM_event_ndof_rotate_get", scope: !3, file: !3, line: 3434, type: !8159, scopeLine: 3435, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!8159 = !DISubroutineType(types: !8160)
!8160 = !{null, !8121, !2455}
!8161 = !DILocalVariable(name: "ndof", arg: 1, scope: !8158, file: !3, line: 3434, type: !8121)
!8162 = !DILocation(line: 3434, column: 55, scope: !8158)
!8163 = !DILocalVariable(name: "r_rot", arg: 2, scope: !8158, file: !3, line: 3434, type: !2455)
!8164 = !DILocation(line: 3434, column: 67, scope: !8158)
!8165 = !DILocation(line: 3436, column: 13, scope: !8158)
!8166 = !DILocation(line: 3436, column: 19, scope: !8158)
!8167 = !DILocation(line: 3436, column: 33, scope: !8158)
!8168 = !DILocation(line: 3436, column: 43, scope: !8158)
!8169 = !DILocation(line: 3436, column: 30, scope: !8158)
!8170 = !DILocation(line: 3436, column: 27, scope: !8158)
!8171 = !DILocation(line: 3436, column: 2, scope: !8158)
!8172 = !DILocation(line: 3436, column: 11, scope: !8158)
!8173 = !DILocation(line: 3437, column: 13, scope: !8158)
!8174 = !DILocation(line: 3437, column: 19, scope: !8158)
!8175 = !DILocation(line: 3437, column: 33, scope: !8158)
!8176 = !DILocation(line: 3437, column: 43, scope: !8158)
!8177 = !DILocation(line: 3437, column: 30, scope: !8158)
!8178 = !DILocation(line: 3437, column: 27, scope: !8158)
!8179 = !DILocation(line: 3437, column: 2, scope: !8158)
!8180 = !DILocation(line: 3437, column: 11, scope: !8158)
!8181 = !DILocation(line: 3438, column: 13, scope: !8158)
!8182 = !DILocation(line: 3438, column: 19, scope: !8158)
!8183 = !DILocation(line: 3438, column: 33, scope: !8158)
!8184 = !DILocation(line: 3438, column: 43, scope: !8158)
!8185 = !DILocation(line: 3438, column: 30, scope: !8158)
!8186 = !DILocation(line: 3438, column: 27, scope: !8158)
!8187 = !DILocation(line: 3438, column: 2, scope: !8158)
!8188 = !DILocation(line: 3438, column: 11, scope: !8158)
!8189 = !DILocation(line: 3439, column: 1, scope: !8158)
!8190 = distinct !DISubprogram(name: "WM_event_ndof_to_axis_angle", scope: !3, file: !3, line: 3441, type: !8191, scopeLine: 3442, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!8191 = !DISubroutineType(types: !8192)
!8192 = !{!120, !8193, !2455}
!8193 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8194, size: 64)
!8194 = !DIDerivedType(tag: DW_TAG_const_type, baseType: !8035)
!8195 = !DILocalVariable(name: "ndof", arg: 1, scope: !8190, file: !3, line: 3441, type: !8193)
!8196 = !DILocation(line: 3441, column: 66, scope: !8190)
!8197 = !DILocalVariable(name: "axis", arg: 2, scope: !8190, file: !3, line: 3441, type: !2455)
!8198 = !DILocation(line: 3441, column: 78, scope: !8190)
!8199 = !DILocalVariable(name: "angle", scope: !8190, file: !3, line: 3443, type: !120)
!8200 = !DILocation(line: 3443, column: 8, scope: !8190)
!8201 = !DILocation(line: 3444, column: 26, scope: !8190)
!8202 = !DILocation(line: 3444, column: 32, scope: !8190)
!8203 = !DILocation(line: 3444, column: 38, scope: !8190)
!8204 = !DILocation(line: 3444, column: 10, scope: !8190)
!8205 = !DILocation(line: 3444, column: 8, scope: !8190)
!8206 = !DILocation(line: 3446, column: 12, scope: !8190)
!8207 = !DILocation(line: 3446, column: 26, scope: !8190)
!8208 = !DILocation(line: 3446, column: 36, scope: !8190)
!8209 = !DILocation(line: 3446, column: 23, scope: !8190)
!8210 = !DILocation(line: 3446, column: 20, scope: !8190)
!8211 = !DILocation(line: 3446, column: 2, scope: !8190)
!8212 = !DILocation(line: 3446, column: 10, scope: !8190)
!8213 = !DILocation(line: 3447, column: 12, scope: !8190)
!8214 = !DILocation(line: 3447, column: 26, scope: !8190)
!8215 = !DILocation(line: 3447, column: 36, scope: !8190)
!8216 = !DILocation(line: 3447, column: 23, scope: !8190)
!8217 = !DILocation(line: 3447, column: 20, scope: !8190)
!8218 = !DILocation(line: 3447, column: 2, scope: !8190)
!8219 = !DILocation(line: 3447, column: 10, scope: !8190)
!8220 = !DILocation(line: 3448, column: 12, scope: !8190)
!8221 = !DILocation(line: 3448, column: 26, scope: !8190)
!8222 = !DILocation(line: 3448, column: 36, scope: !8190)
!8223 = !DILocation(line: 3448, column: 23, scope: !8190)
!8224 = !DILocation(line: 3448, column: 20, scope: !8190)
!8225 = !DILocation(line: 3448, column: 2, scope: !8190)
!8226 = !DILocation(line: 3448, column: 10, scope: !8190)
!8227 = !DILocation(line: 3450, column: 9, scope: !8190)
!8228 = !DILocation(line: 3450, column: 15, scope: !8190)
!8229 = !DILocation(line: 3450, column: 20, scope: !8190)
!8230 = !DILocation(line: 3450, column: 18, scope: !8190)
!8231 = !DILocation(line: 3450, column: 2, scope: !8190)
!8232 = distinct !DISubprogram(name: "normalize_v3_v3", scope: !7504, file: !7504, line: 788, type: !8233, scopeLine: 789, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!8233 = !DISubroutineType(types: !8234)
!8234 = !{!120, !2455, !8235}
!8235 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8044, size: 64)
!8236 = !DILocalVariable(name: "r", arg: 1, scope: !8232, file: !7504, line: 788, type: !2455)
!8237 = !DILocation(line: 788, column: 37, scope: !8232)
!8238 = !DILocalVariable(name: "a", arg: 2, scope: !8232, file: !7504, line: 788, type: !8235)
!8239 = !DILocation(line: 788, column: 55, scope: !8232)
!8240 = !DILocalVariable(name: "d", scope: !8232, file: !7504, line: 790, type: !120)
!8241 = !DILocation(line: 790, column: 8, scope: !8232)
!8242 = !DILocation(line: 790, column: 21, scope: !8232)
!8243 = !DILocation(line: 790, column: 24, scope: !8232)
!8244 = !DILocation(line: 790, column: 12, scope: !8232)
!8245 = !DILocation(line: 794, column: 6, scope: !8246)
!8246 = distinct !DILexicalBlock(scope: !8232, file: !7504, line: 794, column: 6)
!8247 = !DILocation(line: 794, column: 8, scope: !8246)
!8248 = !DILocation(line: 794, column: 6, scope: !8232)
!8249 = !DILocation(line: 795, column: 13, scope: !8250)
!8250 = distinct !DILexicalBlock(scope: !8246, file: !7504, line: 794, column: 20)
!8251 = !DILocation(line: 795, column: 7, scope: !8250)
!8252 = !DILocation(line: 795, column: 5, scope: !8250)
!8253 = !DILocation(line: 796, column: 15, scope: !8250)
!8254 = !DILocation(line: 796, column: 18, scope: !8250)
!8255 = !DILocation(line: 796, column: 28, scope: !8250)
!8256 = !DILocation(line: 796, column: 26, scope: !8250)
!8257 = !DILocation(line: 796, column: 3, scope: !8250)
!8258 = !DILocation(line: 797, column: 2, scope: !8250)
!8259 = !DILocation(line: 799, column: 11, scope: !8260)
!8260 = distinct !DILexicalBlock(scope: !8246, file: !7504, line: 798, column: 7)
!8261 = !DILocation(line: 799, column: 3, scope: !8260)
!8262 = !DILocation(line: 800, column: 5, scope: !8260)
!8263 = !DILocation(line: 803, column: 9, scope: !8232)
!8264 = !DILocation(line: 803, column: 2, scope: !8232)
!8265 = distinct !DISubprogram(name: "WM_event_ndof_to_quat", scope: !3, file: !3, line: 3453, type: !8266, scopeLine: 3454, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!8266 = !DISubroutineType(types: !8267)
!8267 = !{null, !8193, !2455}
!8268 = !DILocalVariable(name: "ndof", arg: 1, scope: !8265, file: !3, line: 3453, type: !8193)
!8269 = !DILocation(line: 3453, column: 59, scope: !8265)
!8270 = !DILocalVariable(name: "q", arg: 2, scope: !8265, file: !3, line: 3453, type: !2455)
!8271 = !DILocation(line: 3453, column: 71, scope: !8265)
!8272 = !DILocalVariable(name: "axis", scope: !8265, file: !3, line: 3455, type: !308)
!8273 = !DILocation(line: 3455, column: 8, scope: !8265)
!8274 = !DILocalVariable(name: "angle", scope: !8265, file: !3, line: 3456, type: !120)
!8275 = !DILocation(line: 3456, column: 8, scope: !8265)
!8276 = !DILocation(line: 3458, column: 38, scope: !8265)
!8277 = !DILocation(line: 3458, column: 44, scope: !8265)
!8278 = !DILocation(line: 3458, column: 10, scope: !8265)
!8279 = !DILocation(line: 3458, column: 8, scope: !8265)
!8280 = !DILocation(line: 3459, column: 21, scope: !8265)
!8281 = !DILocation(line: 3459, column: 24, scope: !8265)
!8282 = !DILocation(line: 3459, column: 30, scope: !8265)
!8283 = !DILocation(line: 3459, column: 2, scope: !8265)
!8284 = !DILocation(line: 3460, column: 1, scope: !8265)
!8285 = distinct !DISubprogram(name: "WM_event_tablet_data", scope: !3, file: !3, line: 3464, type: !8286, scopeLine: 3465, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!8286 = !DISubroutineType(types: !8287)
!8287 = !{!120, !2569, !7507, !2455}
!8288 = !DILocalVariable(name: "event", arg: 1, scope: !8285, file: !3, line: 3464, type: !2569)
!8289 = !DILocation(line: 3464, column: 43, scope: !8285)
!8290 = !DILocalVariable(name: "pen_flip", arg: 2, scope: !8285, file: !3, line: 3464, type: !7507)
!8291 = !DILocation(line: 3464, column: 55, scope: !8285)
!8292 = !DILocalVariable(name: "tilt", arg: 3, scope: !8285, file: !3, line: 3464, type: !2455)
!8293 = !DILocation(line: 3464, column: 71, scope: !8285)
!8294 = !DILocalVariable(name: "erasor", scope: !8285, file: !3, line: 3466, type: !34)
!8295 = !DILocation(line: 3466, column: 6, scope: !8285)
!8296 = !DILocalVariable(name: "pressure", scope: !8285, file: !3, line: 3467, type: !120)
!8297 = !DILocation(line: 3467, column: 8, scope: !8285)
!8298 = !DILocation(line: 3469, column: 6, scope: !8299)
!8299 = distinct !DILexicalBlock(scope: !8285, file: !3, line: 3469, column: 6)
!8300 = !DILocation(line: 3469, column: 6, scope: !8285)
!8301 = !DILocation(line: 3470, column: 11, scope: !8299)
!8302 = !DILocation(line: 3470, column: 3, scope: !8299)
!8303 = !DILocation(line: 3472, column: 6, scope: !8304)
!8304 = distinct !DILexicalBlock(scope: !8285, file: !3, line: 3472, column: 6)
!8305 = !DILocation(line: 3472, column: 13, scope: !8304)
!8306 = !DILocation(line: 3472, column: 6, scope: !8285)
!8307 = !DILocalVariable(name: "wmtab", scope: !8308, file: !3, line: 3473, type: !8309)
!8308 = distinct !DILexicalBlock(scope: !8304, file: !3, line: 3472, column: 26)
!8309 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !8310, size: 64)
!8310 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmTabletData", file: !55, line: 468, baseType: !116)
!8311 = !DILocation(line: 3473, column: 17, scope: !8308)
!8312 = !DILocation(line: 3473, column: 25, scope: !8308)
!8313 = !DILocation(line: 3473, column: 32, scope: !8308)
!8314 = !DILocation(line: 3475, column: 13, scope: !8308)
!8315 = !DILocation(line: 3475, column: 20, scope: !8308)
!8316 = !DILocation(line: 3475, column: 27, scope: !8308)
!8317 = !DILocation(line: 3475, column: 10, scope: !8308)
!8318 = !DILocation(line: 3476, column: 7, scope: !8319)
!8319 = distinct !DILexicalBlock(scope: !8308, file: !3, line: 3476, column: 7)
!8320 = !DILocation(line: 3476, column: 14, scope: !8319)
!8321 = !DILocation(line: 3476, column: 21, scope: !8319)
!8322 = !DILocation(line: 3476, column: 7, scope: !8308)
!8323 = !DILocation(line: 3477, column: 15, scope: !8324)
!8324 = distinct !DILexicalBlock(scope: !8319, file: !3, line: 3476, column: 41)
!8325 = !DILocation(line: 3477, column: 22, scope: !8324)
!8326 = !DILocation(line: 3477, column: 13, scope: !8324)
!8327 = !DILocation(line: 3478, column: 8, scope: !8328)
!8328 = distinct !DILexicalBlock(scope: !8324, file: !3, line: 3478, column: 8)
!8329 = !DILocation(line: 3478, column: 8, scope: !8324)
!8330 = !DILocation(line: 3479, column: 15, scope: !8331)
!8331 = distinct !DILexicalBlock(scope: !8328, file: !3, line: 3478, column: 14)
!8332 = !DILocation(line: 3479, column: 22, scope: !8331)
!8333 = !DILocation(line: 3479, column: 5, scope: !8331)
!8334 = !DILocation(line: 3479, column: 13, scope: !8331)
!8335 = !DILocation(line: 3480, column: 15, scope: !8331)
!8336 = !DILocation(line: 3480, column: 22, scope: !8331)
!8337 = !DILocation(line: 3480, column: 5, scope: !8331)
!8338 = !DILocation(line: 3480, column: 13, scope: !8331)
!8339 = !DILocation(line: 3481, column: 4, scope: !8331)
!8340 = !DILocation(line: 3482, column: 3, scope: !8324)
!8341 = !DILocation(line: 3483, column: 2, scope: !8308)
!8342 = !DILocation(line: 3485, column: 6, scope: !8343)
!8343 = distinct !DILexicalBlock(scope: !8285, file: !3, line: 3485, column: 6)
!8344 = !DILocation(line: 3485, column: 6, scope: !8285)
!8345 = !DILocation(line: 3486, column: 17, scope: !8343)
!8346 = !DILocation(line: 3486, column: 5, scope: !8343)
!8347 = !DILocation(line: 3486, column: 15, scope: !8343)
!8348 = !DILocation(line: 3486, column: 3, scope: !8343)
!8349 = !DILocation(line: 3488, column: 9, scope: !8285)
!8350 = !DILocation(line: 3488, column: 2, scope: !8285)
!8351 = distinct !DISubprogram(name: "zero_v2", scope: !7504, file: !7504, line: 37, type: !8352, scopeLine: 38, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!8352 = !DISubroutineType(types: !8353)
!8353 = !{null, !2455}
!8354 = !DILocalVariable(name: "r", arg: 1, scope: !8351, file: !7504, line: 37, type: !2455)
!8355 = !DILocation(line: 37, column: 28, scope: !8351)
!8356 = !DILocation(line: 39, column: 2, scope: !8351)
!8357 = !DILocation(line: 39, column: 7, scope: !8351)
!8358 = !DILocation(line: 40, column: 2, scope: !8351)
!8359 = !DILocation(line: 40, column: 7, scope: !8351)
!8360 = !DILocation(line: 41, column: 1, scope: !8351)
!8361 = distinct !DISubprogram(name: "WM_event_is_tablet", scope: !3, file: !3, line: 3491, type: !8362, scopeLine: 3492, flags: DIFlagPrototyped, spFlags: DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!8362 = !DISubroutineType(types: !8363)
!8363 = !{!73, !78}
!8364 = !DILocalVariable(name: "event", arg: 1, scope: !8361, file: !3, line: 3491, type: !78)
!8365 = !DILocation(line: 3491, column: 47, scope: !8361)
!8366 = !DILocation(line: 3493, column: 10, scope: !8361)
!8367 = !DILocation(line: 3493, column: 17, scope: !8361)
!8368 = !DILocation(line: 3493, column: 9, scope: !8361)
!8369 = !DILocation(line: 3493, column: 2, scope: !8361)
!8370 = distinct !DISubprogram(name: "wm_operator_reports", scope: !3, file: !3, line: 620, type: !8371, scopeLine: 621, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!8371 = !DISubroutineType(types: !8372)
!8372 = !{null, !2402, !6, !34, !73}
!8373 = !DILocalVariable(name: "C", arg: 1, scope: !8370, file: !3, line: 620, type: !2402)
!8374 = !DILocation(line: 620, column: 43, scope: !8370)
!8375 = !DILocalVariable(name: "op", arg: 2, scope: !8370, file: !3, line: 620, type: !6)
!8376 = !DILocation(line: 620, column: 58, scope: !8370)
!8377 = !DILocalVariable(name: "retval", arg: 3, scope: !8370, file: !3, line: 620, type: !34)
!8378 = !DILocation(line: 620, column: 66, scope: !8370)
!8379 = !DILocalVariable(name: "caller_owns_reports", arg: 4, scope: !8370, file: !3, line: 620, type: !73)
!8380 = !DILocation(line: 620, column: 79, scope: !8370)
!8381 = !DILocation(line: 622, column: 6, scope: !8382)
!8382 = distinct !DILexicalBlock(scope: !8370, file: !3, line: 622, column: 6)
!8383 = !DILocation(line: 622, column: 26, scope: !8382)
!8384 = !DILocation(line: 622, column: 6, scope: !8370)
!8385 = !DILocation(line: 623, column: 7, scope: !8386)
!8386 = distinct !DILexicalBlock(scope: !8387, file: !3, line: 623, column: 7)
!8387 = distinct !DILexicalBlock(scope: !8382, file: !3, line: 622, column: 36)
!8388 = !DILocation(line: 623, column: 11, scope: !8386)
!8389 = !DILocation(line: 623, column: 20, scope: !8386)
!8390 = !DILocation(line: 623, column: 25, scope: !8386)
!8391 = !DILocation(line: 623, column: 7, scope: !8387)
!8392 = !DILocalVariable(name: "win_prev", scope: !8393, file: !3, line: 625, type: !2567)
!8393 = distinct !DILexicalBlock(scope: !8386, file: !3, line: 623, column: 32)
!8394 = !DILocation(line: 625, column: 14, scope: !8393)
!8395 = !DILocation(line: 625, column: 39, scope: !8393)
!8396 = !DILocation(line: 625, column: 25, scope: !8393)
!8397 = !DILocalVariable(name: "area_prev", scope: !8393, file: !3, line: 626, type: !2201)
!8398 = !DILocation(line: 626, column: 13, scope: !8393)
!8399 = !DILocation(line: 626, column: 37, scope: !8393)
!8400 = !DILocation(line: 626, column: 25, scope: !8393)
!8401 = !DILocalVariable(name: "ar_prev", scope: !8393, file: !3, line: 627, type: !2737)
!8402 = !DILocation(line: 627, column: 13, scope: !8393)
!8403 = !DILocation(line: 627, column: 37, scope: !8393)
!8404 = !DILocation(line: 627, column: 23, scope: !8393)
!8405 = !DILocation(line: 629, column: 8, scope: !8406)
!8406 = distinct !DILexicalBlock(scope: !8393, file: !3, line: 629, column: 8)
!8407 = !DILocation(line: 629, column: 17, scope: !8406)
!8408 = !DILocation(line: 629, column: 8, scope: !8393)
!8409 = !DILocation(line: 630, column: 23, scope: !8406)
!8410 = !DILocation(line: 630, column: 41, scope: !8406)
!8411 = !DILocation(line: 630, column: 26, scope: !8406)
!8412 = !DILocation(line: 630, column: 45, scope: !8406)
!8413 = !DILocation(line: 630, column: 53, scope: !8406)
!8414 = !DILocation(line: 630, column: 5, scope: !8406)
!8415 = !DILocation(line: 632, column: 21, scope: !8393)
!8416 = !DILocation(line: 632, column: 24, scope: !8393)
!8417 = !DILocation(line: 632, column: 28, scope: !8393)
!8418 = !DILocation(line: 632, column: 4, scope: !8393)
!8419 = !DILocation(line: 634, column: 22, scope: !8393)
!8420 = !DILocation(line: 634, column: 25, scope: !8393)
!8421 = !DILocation(line: 634, column: 4, scope: !8393)
!8422 = !DILocation(line: 635, column: 20, scope: !8393)
!8423 = !DILocation(line: 635, column: 23, scope: !8393)
!8424 = !DILocation(line: 635, column: 4, scope: !8393)
!8425 = !DILocation(line: 636, column: 22, scope: !8393)
!8426 = !DILocation(line: 636, column: 25, scope: !8393)
!8427 = !DILocation(line: 636, column: 4, scope: !8393)
!8428 = !DILocation(line: 637, column: 3, scope: !8393)
!8429 = !DILocation(line: 638, column: 2, scope: !8387)
!8430 = !DILocation(line: 640, column: 6, scope: !8431)
!8431 = distinct !DILexicalBlock(scope: !8370, file: !3, line: 640, column: 6)
!8432 = !DILocation(line: 640, column: 13, scope: !8431)
!8433 = !DILocation(line: 640, column: 6, scope: !8370)
!8434 = !DILocation(line: 641, column: 9, scope: !8435)
!8435 = distinct !DILexicalBlock(scope: !8436, file: !3, line: 641, column: 7)
!8436 = distinct !DILexicalBlock(scope: !8431, file: !3, line: 640, column: 34)
!8437 = !DILocation(line: 641, column: 15, scope: !8435)
!8438 = !DILocation(line: 641, column: 7, scope: !8436)
!8439 = !DILocation(line: 643, column: 22, scope: !8440)
!8440 = distinct !DILexicalBlock(scope: !8435, file: !3, line: 641, column: 29)
!8441 = !DILocation(line: 643, column: 25, scope: !8440)
!8442 = !DILocation(line: 643, column: 4, scope: !8440)
!8443 = !DILocation(line: 644, column: 3, scope: !8440)
!8444 = !DILocation(line: 646, column: 7, scope: !8445)
!8445 = distinct !DILexicalBlock(scope: !8436, file: !3, line: 646, column: 7)
!8446 = !DILocation(line: 646, column: 27, scope: !8445)
!8447 = !DILocation(line: 646, column: 7, scope: !8436)
!8448 = !DILocation(line: 647, column: 22, scope: !8449)
!8449 = distinct !DILexicalBlock(scope: !8445, file: !3, line: 646, column: 37)
!8450 = !DILocation(line: 647, column: 26, scope: !8449)
!8451 = !DILocation(line: 647, column: 4, scope: !8449)
!8452 = !DILocation(line: 648, column: 3, scope: !8449)
!8453 = !DILocation(line: 650, column: 7, scope: !8454)
!8454 = distinct !DILexicalBlock(scope: !8436, file: !3, line: 650, column: 7)
!8455 = !DILocation(line: 650, column: 11, scope: !8454)
!8456 = !DILocation(line: 650, column: 17, scope: !8454)
!8457 = !DILocation(line: 650, column: 22, scope: !8454)
!8458 = !DILocation(line: 650, column: 7, scope: !8436)
!8459 = !DILocation(line: 651, column: 10, scope: !8460)
!8460 = distinct !DILexicalBlock(scope: !8461, file: !3, line: 651, column: 8)
!8461 = distinct !DILexicalBlock(scope: !8454, file: !3, line: 650, column: 41)
!8462 = !DILocation(line: 651, column: 8, scope: !8460)
!8463 = !DILocation(line: 651, column: 21, scope: !8460)
!8464 = !DILocation(line: 651, column: 8, scope: !8461)
!8465 = !DILocalVariable(name: "buf", scope: !8466, file: !3, line: 653, type: !385)
!8466 = distinct !DILexicalBlock(scope: !8460, file: !3, line: 651, column: 27)
!8467 = !DILocation(line: 653, column: 11, scope: !8466)
!8468 = !DILocation(line: 653, column: 38, scope: !8466)
!8469 = !DILocation(line: 653, column: 41, scope: !8466)
!8470 = !DILocation(line: 653, column: 17, scope: !8466)
!8471 = !DILocation(line: 654, column: 31, scope: !8466)
!8472 = !DILocation(line: 654, column: 16, scope: !8466)
!8473 = !DILocation(line: 654, column: 49, scope: !8466)
!8474 = !DILocation(line: 654, column: 5, scope: !8466)
!8475 = !DILocation(line: 655, column: 5, scope: !8466)
!8476 = !DILocation(line: 655, column: 15, scope: !8466)
!8477 = !DILocation(line: 656, column: 4, scope: !8466)
!8478 = !DILocation(line: 657, column: 3, scope: !8461)
!8479 = !DILocation(line: 658, column: 2, scope: !8436)
!8480 = !DILocation(line: 661, column: 17, scope: !8370)
!8481 = !DILocation(line: 661, column: 20, scope: !8370)
!8482 = !DILocation(line: 661, column: 24, scope: !8370)
!8483 = !DILocation(line: 661, column: 2, scope: !8370)
!8484 = !DILocation(line: 662, column: 1, scope: !8370)
!8485 = distinct !DISubprogram(name: "wm_operator_finished", scope: !3, file: !3, line: 672, type: !8486, scopeLine: 673, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!8486 = !DISubroutineType(types: !8487)
!8487 = !{null, !2402, !6, !3587}
!8488 = !DILocalVariable(name: "C", arg: 1, scope: !8485, file: !3, line: 672, type: !2402)
!8489 = !DILocation(line: 672, column: 44, scope: !8485)
!8490 = !DILocalVariable(name: "op", arg: 2, scope: !8485, file: !3, line: 672, type: !6)
!8491 = !DILocation(line: 672, column: 59, scope: !8485)
!8492 = !DILocalVariable(name: "repeat", arg: 3, scope: !8485, file: !3, line: 672, type: !3587)
!8493 = !DILocation(line: 672, column: 74, scope: !8485)
!8494 = !DILocalVariable(name: "wm", scope: !8485, file: !3, line: 674, type: !1543)
!8495 = !DILocation(line: 674, column: 19, scope: !8485)
!8496 = !DILocation(line: 674, column: 39, scope: !8485)
!8497 = !DILocation(line: 674, column: 24, scope: !8485)
!8498 = !DILocation(line: 676, column: 2, scope: !8485)
!8499 = !DILocation(line: 676, column: 6, scope: !8485)
!8500 = !DILocation(line: 676, column: 17, scope: !8485)
!8501 = !DILocation(line: 681, column: 6, scope: !8502)
!8502 = distinct !DILexicalBlock(scope: !8485, file: !3, line: 681, column: 6)
!8503 = !DILocation(line: 681, column: 10, scope: !8502)
!8504 = !DILocation(line: 681, column: 24, scope: !8502)
!8505 = !DILocation(line: 681, column: 6, scope: !8485)
!8506 = !DILocation(line: 682, column: 7, scope: !8507)
!8507 = distinct !DILexicalBlock(scope: !8502, file: !3, line: 682, column: 7)
!8508 = !DILocation(line: 682, column: 11, scope: !8507)
!8509 = !DILocation(line: 682, column: 17, scope: !8507)
!8510 = !DILocation(line: 682, column: 22, scope: !8507)
!8511 = !DILocation(line: 682, column: 7, scope: !8502)
!8512 = !DILocation(line: 683, column: 20, scope: !8507)
!8513 = !DILocation(line: 683, column: 23, scope: !8507)
!8514 = !DILocation(line: 683, column: 4, scope: !8507)
!8515 = !DILocation(line: 682, column: 24, scope: !8507)
!8516 = !DILocation(line: 685, column: 6, scope: !8517)
!8517 = distinct !DILexicalBlock(scope: !8485, file: !3, line: 685, column: 6)
!8518 = !DILocation(line: 685, column: 13, scope: !8517)
!8519 = !DILocation(line: 685, column: 6, scope: !8485)
!8520 = !DILocation(line: 686, column: 9, scope: !8521)
!8521 = distinct !DILexicalBlock(scope: !8522, file: !3, line: 686, column: 7)
!8522 = distinct !DILexicalBlock(scope: !8517, file: !3, line: 685, column: 19)
!8523 = !DILocation(line: 686, column: 15, scope: !8521)
!8524 = !DILocation(line: 686, column: 7, scope: !8522)
!8525 = !DILocalVariable(name: "buf", scope: !8526, file: !3, line: 687, type: !385)
!8526 = distinct !DILexicalBlock(scope: !8521, file: !3, line: 686, column: 29)
!8527 = !DILocation(line: 687, column: 10, scope: !8526)
!8528 = !DILocation(line: 687, column: 37, scope: !8526)
!8529 = !DILocation(line: 687, column: 40, scope: !8526)
!8530 = !DILocation(line: 687, column: 16, scope: !8526)
!8531 = !DILocation(line: 688, column: 30, scope: !8526)
!8532 = !DILocation(line: 688, column: 15, scope: !8526)
!8533 = !DILocation(line: 688, column: 48, scope: !8526)
!8534 = !DILocation(line: 688, column: 4, scope: !8526)
!8535 = !DILocation(line: 689, column: 4, scope: !8526)
!8536 = !DILocation(line: 689, column: 14, scope: !8526)
!8537 = !DILocation(line: 690, column: 3, scope: !8526)
!8538 = !DILocation(line: 692, column: 34, scope: !8539)
!8539 = distinct !DILexicalBlock(scope: !8522, file: !3, line: 692, column: 7)
!8540 = !DILocation(line: 692, column: 38, scope: !8539)
!8541 = !DILocation(line: 692, column: 42, scope: !8539)
!8542 = !DILocation(line: 692, column: 7, scope: !8539)
!8543 = !DILocation(line: 692, column: 7, scope: !8522)
!8544 = !DILocation(line: 694, column: 4, scope: !8545)
!8545 = distinct !DILexicalBlock(scope: !8539, file: !3, line: 692, column: 49)
!8546 = !DILocation(line: 694, column: 8, scope: !8545)
!8547 = !DILocation(line: 694, column: 17, scope: !8545)
!8548 = !DILocation(line: 694, column: 22, scope: !8545)
!8549 = !DILocation(line: 696, column: 25, scope: !8545)
!8550 = !DILocation(line: 696, column: 28, scope: !8545)
!8551 = !DILocation(line: 696, column: 4, scope: !8545)
!8552 = !DILocation(line: 697, column: 38, scope: !8545)
!8553 = !DILocation(line: 697, column: 4, scope: !8545)
!8554 = !DILocation(line: 698, column: 3, scope: !8545)
!8555 = !DILocation(line: 700, column: 21, scope: !8556)
!8556 = distinct !DILexicalBlock(scope: !8539, file: !3, line: 699, column: 8)
!8557 = !DILocation(line: 700, column: 4, scope: !8556)
!8558 = !DILocation(line: 702, column: 2, scope: !8522)
!8559 = !DILocation(line: 703, column: 1, scope: !8485)
!8560 = distinct !DISubprogram(name: "wm_operator_print", scope: !3, file: !3, line: 500, type: !5814, scopeLine: 501, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!8561 = !DILocalVariable(name: "C", arg: 1, scope: !8560, file: !3, line: 500, type: !2402)
!8562 = !DILocation(line: 500, column: 41, scope: !8560)
!8563 = !DILocalVariable(name: "op", arg: 2, scope: !8560, file: !3, line: 500, type: !6)
!8564 = !DILocation(line: 500, column: 56, scope: !8560)
!8565 = !DILocalVariable(name: "buf", scope: !8560, file: !3, line: 503, type: !385)
!8566 = !DILocation(line: 503, column: 8, scope: !8560)
!8567 = !DILocation(line: 503, column: 35, scope: !8560)
!8568 = !DILocation(line: 503, column: 38, scope: !8560)
!8569 = !DILocation(line: 503, column: 14, scope: !8560)
!8570 = !DILocation(line: 504, column: 7, scope: !8560)
!8571 = !DILocation(line: 504, column: 2, scope: !8560)
!8572 = !DILocation(line: 505, column: 2, scope: !8560)
!8573 = !DILocation(line: 505, column: 12, scope: !8560)
!8574 = !DILocation(line: 506, column: 1, scope: !8560)
!8575 = distinct !DISubprogram(name: "wm_operator_register_check", scope: !3, file: !3, line: 667, type: !8576, scopeLine: 668, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!8576 = !DISubroutineType(types: !8577)
!8577 = !{!73, !1543, !1578}
!8578 = !DILocalVariable(name: "wm", arg: 1, scope: !8575, file: !3, line: 667, type: !1543)
!8579 = !DILocation(line: 667, column: 57, scope: !8575)
!8580 = !DILocalVariable(name: "ot", arg: 2, scope: !8575, file: !3, line: 667, type: !1578)
!8581 = !DILocation(line: 667, column: 77, scope: !8575)
!8582 = !DILocation(line: 669, column: 9, scope: !8575)
!8583 = !DILocation(line: 669, column: 12, scope: !8575)
!8584 = !DILocation(line: 669, column: 16, scope: !8575)
!8585 = !DILocation(line: 669, column: 20, scope: !8575)
!8586 = !DILocation(line: 669, column: 34, scope: !8575)
!8587 = !DILocation(line: 669, column: 40, scope: !8575)
!8588 = !DILocation(line: 669, column: 44, scope: !8575)
!8589 = !DILocation(line: 669, column: 48, scope: !8575)
!8590 = !DILocation(line: 669, column: 53, scope: !8575)
!8591 = !DILocation(line: 0, scope: !8575)
!8592 = !DILocation(line: 669, column: 2, scope: !8575)
!8593 = distinct !DISubprogram(name: "wm_operator_invoke", scope: !3, file: !3, line: 1005, type: !8594, scopeLine: 1007, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!8594 = !DISubroutineType(types: !8595)
!8595 = !{!34, !2402, !1578, !2552, !1580, !1582, !3587}
!8596 = !DILocalVariable(name: "C", arg: 1, scope: !8593, file: !3, line: 1005, type: !2402)
!8597 = !DILocation(line: 1005, column: 41, scope: !8593)
!8598 = !DILocalVariable(name: "ot", arg: 2, scope: !8593, file: !3, line: 1005, type: !1578)
!8599 = !DILocation(line: 1005, column: 60, scope: !8593)
!8600 = !DILocalVariable(name: "event", arg: 3, scope: !8593, file: !3, line: 1005, type: !2552)
!8601 = !DILocation(line: 1005, column: 73, scope: !8593)
!8602 = !DILocalVariable(name: "properties", arg: 4, scope: !8593, file: !3, line: 1006, type: !1580)
!8603 = !DILocation(line: 1006, column: 43, scope: !8593)
!8604 = !DILocalVariable(name: "reports", arg: 5, scope: !8593, file: !3, line: 1006, type: !1582)
!8605 = !DILocation(line: 1006, column: 67, scope: !8593)
!8606 = !DILocalVariable(name: "poll_only", arg: 6, scope: !8593, file: !3, line: 1006, type: !3587)
!8607 = !DILocation(line: 1006, column: 87, scope: !8593)
!8608 = !DILocalVariable(name: "retval", scope: !8593, file: !3, line: 1008, type: !34)
!8609 = !DILocation(line: 1008, column: 6, scope: !8593)
!8610 = !DILocation(line: 1011, column: 6, scope: !8611)
!8611 = distinct !DILexicalBlock(scope: !8593, file: !3, line: 1011, column: 6)
!8612 = !DILocation(line: 1011, column: 6, scope: !8593)
!8613 = !DILocation(line: 1012, column: 27, scope: !8611)
!8614 = !DILocation(line: 1012, column: 30, scope: !8611)
!8615 = !DILocation(line: 1012, column: 10, scope: !8611)
!8616 = !DILocation(line: 1012, column: 3, scope: !8611)
!8617 = !DILocation(line: 1014, column: 23, scope: !8618)
!8618 = distinct !DILexicalBlock(scope: !8593, file: !3, line: 1014, column: 6)
!8619 = !DILocation(line: 1014, column: 26, scope: !8618)
!8620 = !DILocation(line: 1014, column: 6, scope: !8618)
!8621 = !DILocation(line: 1014, column: 6, scope: !8593)
!8622 = !DILocalVariable(name: "wm", scope: !8623, file: !3, line: 1015, type: !1543)
!8623 = distinct !DILexicalBlock(scope: !8618, file: !3, line: 1014, column: 31)
!8624 = !DILocation(line: 1015, column: 20, scope: !8623)
!8625 = !DILocation(line: 1015, column: 40, scope: !8623)
!8626 = !DILocation(line: 1015, column: 25, scope: !8623)
!8627 = !DILocalVariable(name: "op", scope: !8623, file: !3, line: 1016, type: !6)
!8628 = !DILocation(line: 1016, column: 15, scope: !8623)
!8629 = !DILocation(line: 1016, column: 39, scope: !8623)
!8630 = !DILocation(line: 1016, column: 43, scope: !8623)
!8631 = !DILocation(line: 1016, column: 47, scope: !8623)
!8632 = !DILocation(line: 1016, column: 59, scope: !8623)
!8633 = !DILocation(line: 1016, column: 20, scope: !8623)
!8634 = !DILocalVariable(name: "is_nested_call", scope: !8623, file: !3, line: 1017, type: !3587)
!8635 = !DILocation(line: 1017, column: 14, scope: !8623)
!8636 = !DILocation(line: 1017, column: 32, scope: !8623)
!8637 = !DILocation(line: 1017, column: 36, scope: !8623)
!8638 = !DILocation(line: 1017, column: 50, scope: !8623)
!8639 = !DILocation(line: 1017, column: 31, scope: !8623)
!8640 = !DILocation(line: 1019, column: 3, scope: !8623)
!8641 = !DILocation(line: 1019, column: 7, scope: !8623)
!8642 = !DILocation(line: 1019, column: 12, scope: !8623)
!8643 = !DILocation(line: 1022, column: 8, scope: !8644)
!8644 = distinct !DILexicalBlock(scope: !8623, file: !3, line: 1022, column: 7)
!8645 = !DILocation(line: 1022, column: 7, scope: !8623)
!8646 = !DILocation(line: 1023, column: 37, scope: !8647)
!8647 = distinct !DILexicalBlock(scope: !8644, file: !3, line: 1022, column: 24)
!8648 = !DILocation(line: 1023, column: 4, scope: !8647)
!8649 = !DILocation(line: 1024, column: 3, scope: !8647)
!8650 = !DILocation(line: 1026, column: 10, scope: !8651)
!8651 = distinct !DILexicalBlock(scope: !8623, file: !3, line: 1026, column: 7)
!8652 = !DILocation(line: 1026, column: 16, scope: !8651)
!8653 = !DILocation(line: 1026, column: 36, scope: !8651)
!8654 = !DILocation(line: 1026, column: 41, scope: !8651)
!8655 = !DILocation(line: 1026, column: 47, scope: !8651)
!8656 = !DILocation(line: 1026, column: 56, scope: !8651)
!8657 = !DILocation(line: 1026, column: 60, scope: !8651)
!8658 = !DILocation(line: 1026, column: 67, scope: !8651)
!8659 = !DILocation(line: 1026, column: 72, scope: !8651)
!8660 = !DILocation(line: 1026, column: 7, scope: !8623)
!8661 = !DILocation(line: 1028, column: 21, scope: !8662)
!8662 = distinct !DILexicalBlock(scope: !8651, file: !3, line: 1026, column: 88)
!8663 = !DILocation(line: 1028, column: 29, scope: !8662)
!8664 = !DILocation(line: 1028, column: 36, scope: !8662)
!8665 = !DILocation(line: 1028, column: 60, scope: !8662)
!8666 = !DILocation(line: 1028, column: 46, scope: !8662)
!8667 = !DILocation(line: 1028, column: 64, scope: !8662)
!8668 = !DILocation(line: 1028, column: 78, scope: !8662)
!8669 = !DILocation(line: 1028, column: 82, scope: !8662)
!8670 = !DILocation(line: 1027, column: 4, scope: !8662)
!8671 = !DILocation(line: 1029, column: 3, scope: !8662)
!8672 = !DILocation(line: 1031, column: 7, scope: !8673)
!8673 = distinct !DILexicalBlock(scope: !8623, file: !3, line: 1031, column: 7)
!8674 = !DILocation(line: 1031, column: 11, scope: !8673)
!8675 = !DILocation(line: 1031, column: 17, scope: !8673)
!8676 = !DILocation(line: 1031, column: 24, scope: !8673)
!8677 = !DILocation(line: 1031, column: 27, scope: !8673)
!8678 = !DILocation(line: 1031, column: 7, scope: !8623)
!8679 = !DILocation(line: 1032, column: 23, scope: !8680)
!8680 = distinct !DILexicalBlock(scope: !8673, file: !3, line: 1031, column: 34)
!8681 = !DILocation(line: 1032, column: 26, scope: !8680)
!8682 = !DILocation(line: 1032, column: 4, scope: !8680)
!8683 = !DILocation(line: 1034, column: 8, scope: !8684)
!8684 = distinct !DILexicalBlock(scope: !8680, file: !3, line: 1034, column: 8)
!8685 = !DILocation(line: 1034, column: 12, scope: !8684)
!8686 = !DILocation(line: 1034, column: 18, scope: !8684)
!8687 = !DILocation(line: 1034, column: 23, scope: !8684)
!8688 = !DILocation(line: 1034, column: 8, scope: !8680)
!8689 = !DILocation(line: 1035, column: 5, scope: !8684)
!8690 = !DILocation(line: 1035, column: 9, scope: !8684)
!8691 = !DILocation(line: 1035, column: 22, scope: !8684)
!8692 = !DILocation(line: 1037, column: 13, scope: !8680)
!8693 = !DILocation(line: 1037, column: 17, scope: !8680)
!8694 = !DILocation(line: 1037, column: 23, scope: !8680)
!8695 = !DILocation(line: 1037, column: 30, scope: !8680)
!8696 = !DILocation(line: 1037, column: 33, scope: !8680)
!8697 = !DILocation(line: 1037, column: 37, scope: !8680)
!8698 = !DILocation(line: 1037, column: 11, scope: !8680)
!8699 = !DILocation(line: 1038, column: 4, scope: !8680)
!8700 = !DILocation(line: 1040, column: 8, scope: !8701)
!8701 = distinct !DILexicalBlock(scope: !8680, file: !3, line: 1040, column: 8)
!8702 = !DILocation(line: 1040, column: 12, scope: !8701)
!8703 = !DILocation(line: 1040, column: 18, scope: !8701)
!8704 = !DILocation(line: 1040, column: 23, scope: !8701)
!8705 = !DILocation(line: 1040, column: 37, scope: !8701)
!8706 = !DILocation(line: 1040, column: 55, scope: !8701)
!8707 = !DILocation(line: 1040, column: 40, scope: !8701)
!8708 = !DILocation(line: 1040, column: 61, scope: !8701)
!8709 = !DILocation(line: 1040, column: 58, scope: !8701)
!8710 = !DILocation(line: 1040, column: 8, scope: !8680)
!8711 = !DILocation(line: 1041, column: 5, scope: !8701)
!8712 = !DILocation(line: 1041, column: 9, scope: !8701)
!8713 = !DILocation(line: 1041, column: 22, scope: !8701)
!8714 = !DILocation(line: 1042, column: 3, scope: !8680)
!8715 = !DILocation(line: 1043, column: 12, scope: !8716)
!8716 = distinct !DILexicalBlock(scope: !8673, file: !3, line: 1043, column: 12)
!8717 = !DILocation(line: 1043, column: 16, scope: !8716)
!8718 = !DILocation(line: 1043, column: 22, scope: !8716)
!8719 = !DILocation(line: 1043, column: 12, scope: !8673)
!8720 = !DILocation(line: 1044, column: 8, scope: !8721)
!8721 = distinct !DILexicalBlock(scope: !8722, file: !3, line: 1044, column: 8)
!8722 = distinct !DILexicalBlock(scope: !8716, file: !3, line: 1043, column: 28)
!8723 = !DILocation(line: 1044, column: 12, scope: !8721)
!8724 = !DILocation(line: 1044, column: 18, scope: !8721)
!8725 = !DILocation(line: 1044, column: 23, scope: !8721)
!8726 = !DILocation(line: 1044, column: 8, scope: !8722)
!8727 = !DILocation(line: 1045, column: 5, scope: !8721)
!8728 = !DILocation(line: 1045, column: 9, scope: !8721)
!8729 = !DILocation(line: 1045, column: 22, scope: !8721)
!8730 = !DILocation(line: 1047, column: 13, scope: !8722)
!8731 = !DILocation(line: 1047, column: 17, scope: !8722)
!8732 = !DILocation(line: 1047, column: 23, scope: !8722)
!8733 = !DILocation(line: 1047, column: 28, scope: !8722)
!8734 = !DILocation(line: 1047, column: 31, scope: !8722)
!8735 = !DILocation(line: 1047, column: 11, scope: !8722)
!8736 = !DILocation(line: 1048, column: 4, scope: !8722)
!8737 = !DILocation(line: 1050, column: 8, scope: !8738)
!8738 = distinct !DILexicalBlock(scope: !8722, file: !3, line: 1050, column: 8)
!8739 = !DILocation(line: 1050, column: 12, scope: !8738)
!8740 = !DILocation(line: 1050, column: 18, scope: !8738)
!8741 = !DILocation(line: 1050, column: 23, scope: !8738)
!8742 = !DILocation(line: 1050, column: 37, scope: !8738)
!8743 = !DILocation(line: 1050, column: 55, scope: !8738)
!8744 = !DILocation(line: 1050, column: 40, scope: !8738)
!8745 = !DILocation(line: 1050, column: 61, scope: !8738)
!8746 = !DILocation(line: 1050, column: 58, scope: !8738)
!8747 = !DILocation(line: 1050, column: 8, scope: !8722)
!8748 = !DILocation(line: 1051, column: 5, scope: !8738)
!8749 = !DILocation(line: 1051, column: 9, scope: !8738)
!8750 = !DILocation(line: 1051, column: 22, scope: !8738)
!8751 = !DILocation(line: 1052, column: 3, scope: !8722)
!8752 = !DILocation(line: 1055, column: 57, scope: !8753)
!8753 = distinct !DILexicalBlock(scope: !8716, file: !3, line: 1053, column: 8)
!8754 = !DILocation(line: 1055, column: 61, scope: !8753)
!8755 = !DILocation(line: 1055, column: 4, scope: !8753)
!8756 = !DILocation(line: 1060, column: 9, scope: !8757)
!8757 = distinct !DILexicalBlock(scope: !8623, file: !3, line: 1060, column: 7)
!8758 = !DILocation(line: 1060, column: 16, scope: !8757)
!8759 = !DILocation(line: 1060, column: 36, scope: !8757)
!8760 = !DILocation(line: 1060, column: 40, scope: !8757)
!8761 = !DILocation(line: 1060, column: 47, scope: !8757)
!8762 = !DILocation(line: 1060, column: 7, scope: !8623)
!8763 = !DILocation(line: 1062, column: 24, scope: !8764)
!8764 = distinct !DILexicalBlock(scope: !8757, file: !3, line: 1060, column: 92)
!8765 = !DILocation(line: 1062, column: 27, scope: !8764)
!8766 = !DILocation(line: 1062, column: 31, scope: !8764)
!8767 = !DILocation(line: 1062, column: 40, scope: !8764)
!8768 = !DILocation(line: 1062, column: 48, scope: !8764)
!8769 = !DILocation(line: 1062, column: 39, scope: !8764)
!8770 = !DILocation(line: 1062, column: 4, scope: !8764)
!8771 = !DILocation(line: 1063, column: 3, scope: !8764)
!8772 = !DILocation(line: 1065, column: 7, scope: !8773)
!8773 = distinct !DILexicalBlock(scope: !8623, file: !3, line: 1065, column: 7)
!8774 = !DILocation(line: 1065, column: 14, scope: !8773)
!8775 = !DILocation(line: 1065, column: 7, scope: !8623)
!8776 = !DILocation(line: 1067, column: 3, scope: !8777)
!8777 = distinct !DILexicalBlock(scope: !8773, file: !3, line: 1065, column: 34)
!8778 = !DILocation(line: 1068, column: 12, scope: !8779)
!8779 = distinct !DILexicalBlock(scope: !8773, file: !3, line: 1068, column: 12)
!8780 = !DILocation(line: 1068, column: 19, scope: !8779)
!8781 = !DILocation(line: 1068, column: 12, scope: !8773)
!8782 = !DILocation(line: 1069, column: 9, scope: !8783)
!8783 = distinct !DILexicalBlock(scope: !8784, file: !3, line: 1069, column: 8)
!8784 = distinct !DILexicalBlock(scope: !8779, file: !3, line: 1068, column: 40)
!8785 = !DILocation(line: 1069, column: 8, scope: !8784)
!8786 = !DILocation(line: 1070, column: 39, scope: !8787)
!8787 = distinct !DILexicalBlock(scope: !8783, file: !3, line: 1069, column: 25)
!8788 = !DILocation(line: 1070, column: 5, scope: !8787)
!8789 = !DILocation(line: 1071, column: 4, scope: !8787)
!8790 = !DILocation(line: 1072, column: 25, scope: !8784)
!8791 = !DILocation(line: 1072, column: 28, scope: !8784)
!8792 = !DILocation(line: 1072, column: 4, scope: !8784)
!8793 = !DILocation(line: 1073, column: 3, scope: !8784)
!8794 = !DILocation(line: 1074, column: 12, scope: !8795)
!8795 = distinct !DILexicalBlock(scope: !8779, file: !3, line: 1074, column: 12)
!8796 = !DILocation(line: 1074, column: 19, scope: !8795)
!8797 = !DILocation(line: 1074, column: 12, scope: !8779)
!8798 = !DILocation(line: 1076, column: 4, scope: !8799)
!8799 = distinct !DILexicalBlock(scope: !8795, file: !3, line: 1074, column: 45)
!8800 = !DILocation(line: 1076, column: 8, scope: !8799)
!8801 = !DILocation(line: 1076, column: 17, scope: !8799)
!8802 = !DILocation(line: 1076, column: 22, scope: !8799)
!8803 = !DILocation(line: 1081, column: 8, scope: !8804)
!8804 = distinct !DILexicalBlock(scope: !8799, file: !3, line: 1081, column: 8)
!8805 = !DILocation(line: 1081, column: 12, scope: !8804)
!8806 = !DILocation(line: 1081, column: 17, scope: !8804)
!8807 = !DILocation(line: 1081, column: 35, scope: !8804)
!8808 = !DILocation(line: 1081, column: 39, scope: !8804)
!8809 = !DILocation(line: 1081, column: 43, scope: !8804)
!8810 = !DILocation(line: 1081, column: 47, scope: !8804)
!8811 = !DILocation(line: 1081, column: 50, scope: !8804)
!8812 = !DILocation(line: 1081, column: 54, scope: !8804)
!8813 = !DILocation(line: 1081, column: 59, scope: !8804)
!8814 = !DILocation(line: 1081, column: 65, scope: !8804)
!8815 = !DILocation(line: 1081, column: 70, scope: !8804)
!8816 = !DILocation(line: 1081, column: 8, scope: !8799)
!8817 = !DILocalVariable(name: "bounds", scope: !8818, file: !3, line: 1082, type: !8819)
!8818 = distinct !DILexicalBlock(scope: !8804, file: !3, line: 1081, column: 90)
!8819 = !DICompositeType(tag: DW_TAG_array_type, baseType: !34, size: 128, elements: !746)
!8820 = !DILocation(line: 1082, column: 9, scope: !8818)
!8821 = !DILocalVariable(name: "wrap", scope: !8818, file: !3, line: 1083, type: !73)
!8822 = !DILocation(line: 1083, column: 10, scope: !8818)
!8823 = !DILocation(line: 1085, column: 9, scope: !8824)
!8824 = distinct !DILexicalBlock(scope: !8818, file: !3, line: 1085, column: 9)
!8825 = !DILocation(line: 1085, column: 13, scope: !8824)
!8826 = !DILocation(line: 1085, column: 9, scope: !8818)
!8827 = !DILocation(line: 1086, column: 16, scope: !8828)
!8828 = distinct !DILexicalBlock(scope: !8824, file: !3, line: 1085, column: 18)
!8829 = !DILocation(line: 1086, column: 23, scope: !8828)
!8830 = !DILocation(line: 1086, column: 48, scope: !8828)
!8831 = !DILocation(line: 1087, column: 15, scope: !8828)
!8832 = !DILocation(line: 1087, column: 19, scope: !8828)
!8833 = !DILocation(line: 1087, column: 24, scope: !8828)
!8834 = !DILocation(line: 1087, column: 29, scope: !8828)
!8835 = !DILocation(line: 1087, column: 48, scope: !8828)
!8836 = !DILocation(line: 1087, column: 52, scope: !8828)
!8837 = !DILocation(line: 1087, column: 56, scope: !8828)
!8838 = !DILocation(line: 1087, column: 61, scope: !8828)
!8839 = !DILocation(line: 1087, column: 67, scope: !8828)
!8840 = !DILocation(line: 1087, column: 72, scope: !8828)
!8841 = !DILocation(line: 0, scope: !8828)
!8842 = !DILocation(line: 1086, column: 13, scope: !8828)
!8843 = !DILocation(line: 1086, column: 11, scope: !8828)
!8844 = !DILocation(line: 1088, column: 5, scope: !8828)
!8845 = !DILocation(line: 1090, column: 16, scope: !8846)
!8846 = distinct !DILexicalBlock(scope: !8824, file: !3, line: 1089, column: 10)
!8847 = !DILocation(line: 1090, column: 23, scope: !8846)
!8848 = !DILocation(line: 1090, column: 48, scope: !8846)
!8849 = !DILocation(line: 1091, column: 15, scope: !8846)
!8850 = !DILocation(line: 1091, column: 19, scope: !8846)
!8851 = !DILocation(line: 1091, column: 24, scope: !8846)
!8852 = !DILocation(line: 1091, column: 43, scope: !8846)
!8853 = !DILocation(line: 1091, column: 47, scope: !8846)
!8854 = !DILocation(line: 1091, column: 51, scope: !8846)
!8855 = !DILocation(line: 1091, column: 56, scope: !8846)
!8856 = !DILocation(line: 0, scope: !8846)
!8857 = !DILocation(line: 1090, column: 13, scope: !8846)
!8858 = !DILocation(line: 1090, column: 11, scope: !8846)
!8859 = !DILocation(line: 1095, column: 9, scope: !8860)
!8860 = distinct !DILexicalBlock(scope: !8818, file: !3, line: 1095, column: 9)
!8861 = !DILocation(line: 1095, column: 9, scope: !8818)
!8862 = !DILocalVariable(name: "ar", scope: !8863, file: !3, line: 1096, type: !2737)
!8863 = distinct !DILexicalBlock(scope: !8860, file: !3, line: 1095, column: 15)
!8864 = !DILocation(line: 1096, column: 15, scope: !8863)
!8865 = !DILocation(line: 1096, column: 34, scope: !8863)
!8866 = !DILocation(line: 1096, column: 20, scope: !8863)
!8867 = !DILocation(line: 1097, column: 10, scope: !8868)
!8868 = distinct !DILexicalBlock(scope: !8863, file: !3, line: 1097, column: 10)
!8869 = !DILocation(line: 1097, column: 13, scope: !8868)
!8870 = !DILocation(line: 1097, column: 16, scope: !8868)
!8871 = !DILocation(line: 1097, column: 20, scope: !8868)
!8872 = !DILocation(line: 1097, column: 31, scope: !8868)
!8873 = !DILocation(line: 1097, column: 10, scope: !8863)
!8874 = !DILocation(line: 1098, column: 12, scope: !8875)
!8875 = distinct !DILexicalBlock(scope: !8868, file: !3, line: 1097, column: 51)
!8876 = !DILocation(line: 1099, column: 6, scope: !8875)
!8877 = !DILocation(line: 1100, column: 5, scope: !8863)
!8878 = !DILocation(line: 1102, column: 9, scope: !8879)
!8879 = distinct !DILexicalBlock(scope: !8818, file: !3, line: 1102, column: 9)
!8880 = !DILocation(line: 1102, column: 9, scope: !8818)
!8881 = !DILocalVariable(name: "winrect", scope: !8882, file: !3, line: 1103, type: !5722)
!8882 = distinct !DILexicalBlock(scope: !8879, file: !3, line: 1102, column: 15)
!8883 = !DILocation(line: 1103, column: 12, scope: !8882)
!8884 = !DILocalVariable(name: "ar", scope: !8882, file: !3, line: 1104, type: !2737)
!8885 = !DILocation(line: 1104, column: 15, scope: !8882)
!8886 = !DILocation(line: 1104, column: 34, scope: !8882)
!8887 = !DILocation(line: 1104, column: 20, scope: !8882)
!8888 = !DILocalVariable(name: "sa", scope: !8882, file: !3, line: 1105, type: !2201)
!8889 = !DILocation(line: 1105, column: 15, scope: !8882)
!8890 = !DILocation(line: 1105, column: 32, scope: !8882)
!8891 = !DILocation(line: 1105, column: 20, scope: !8882)
!8892 = !DILocation(line: 1107, column: 10, scope: !8893)
!8893 = distinct !DILexicalBlock(scope: !8882, file: !3, line: 1107, column: 10)
!8894 = !DILocation(line: 1107, column: 13, scope: !8893)
!8895 = !DILocation(line: 1107, column: 16, scope: !8893)
!8896 = !DILocation(line: 1107, column: 20, scope: !8893)
!8897 = !DILocation(line: 1107, column: 31, scope: !8893)
!8898 = !DILocation(line: 1107, column: 50, scope: !8893)
!8899 = !DILocation(line: 1107, column: 53, scope: !8893)
!8900 = !DILocation(line: 1107, column: 59, scope: !8893)
!8901 = !DILocation(line: 1108, column: 31, scope: !8893)
!8902 = !DILocation(line: 1108, column: 35, scope: !8893)
!8903 = !DILocation(line: 1108, column: 44, scope: !8893)
!8904 = !DILocation(line: 1108, column: 51, scope: !8893)
!8905 = !DILocation(line: 1108, column: 10, scope: !8893)
!8906 = !DILocation(line: 1107, column: 10, scope: !8882)
!8907 = !DILocation(line: 1110, column: 18, scope: !8908)
!8908 = distinct !DILexicalBlock(scope: !8893, file: !3, line: 1109, column: 6)
!8909 = !DILocation(line: 1110, column: 22, scope: !8908)
!8910 = !DILocation(line: 1110, column: 15, scope: !8908)
!8911 = !DILocation(line: 1111, column: 6, scope: !8908)
!8912 = !DILocation(line: 1112, column: 15, scope: !8913)
!8913 = distinct !DILexicalBlock(scope: !8893, file: !3, line: 1112, column: 15)
!8914 = !DILocation(line: 1112, column: 15, scope: !8893)
!8915 = !DILocation(line: 1113, column: 18, scope: !8916)
!8916 = distinct !DILexicalBlock(scope: !8913, file: !3, line: 1112, column: 19)
!8917 = !DILocation(line: 1113, column: 22, scope: !8916)
!8918 = !DILocation(line: 1113, column: 15, scope: !8916)
!8919 = !DILocation(line: 1114, column: 6, scope: !8916)
!8920 = !DILocation(line: 1116, column: 10, scope: !8921)
!8921 = distinct !DILexicalBlock(scope: !8882, file: !3, line: 1116, column: 10)
!8922 = !DILocation(line: 1116, column: 10, scope: !8882)
!8923 = !DILocation(line: 1117, column: 19, scope: !8924)
!8924 = distinct !DILexicalBlock(scope: !8921, file: !3, line: 1116, column: 19)
!8925 = !DILocation(line: 1117, column: 28, scope: !8924)
!8926 = !DILocation(line: 1117, column: 7, scope: !8924)
!8927 = !DILocation(line: 1117, column: 17, scope: !8924)
!8928 = !DILocation(line: 1118, column: 19, scope: !8924)
!8929 = !DILocation(line: 1118, column: 28, scope: !8924)
!8930 = !DILocation(line: 1118, column: 7, scope: !8924)
!8931 = !DILocation(line: 1118, column: 17, scope: !8924)
!8932 = !DILocation(line: 1119, column: 19, scope: !8924)
!8933 = !DILocation(line: 1119, column: 28, scope: !8924)
!8934 = !DILocation(line: 1119, column: 7, scope: !8924)
!8935 = !DILocation(line: 1119, column: 17, scope: !8924)
!8936 = !DILocation(line: 1120, column: 19, scope: !8924)
!8937 = !DILocation(line: 1120, column: 28, scope: !8924)
!8938 = !DILocation(line: 1120, column: 7, scope: !8924)
!8939 = !DILocation(line: 1120, column: 17, scope: !8924)
!8940 = !DILocation(line: 1121, column: 6, scope: !8924)
!8941 = !DILocation(line: 1122, column: 5, scope: !8882)
!8942 = !DILocation(line: 1124, column: 41, scope: !8818)
!8943 = !DILocation(line: 1124, column: 27, scope: !8818)
!8944 = !DILocation(line: 1124, column: 45, scope: !8818)
!8945 = !DILocation(line: 1124, column: 58, scope: !8818)
!8946 = !DILocation(line: 1124, column: 5, scope: !8818)
!8947 = !DILocation(line: 1125, column: 4, scope: !8818)
!8948 = !DILocation(line: 1131, column: 25, scope: !8799)
!8949 = !DILocation(line: 1131, column: 4, scope: !8799)
!8950 = !DILocation(line: 1132, column: 3, scope: !8799)
!8951 = !DILocation(line: 1134, column: 21, scope: !8952)
!8952 = distinct !DILexicalBlock(scope: !8795, file: !3, line: 1133, column: 8)
!8953 = !DILocation(line: 1134, column: 4, scope: !8952)
!8954 = !DILocation(line: 1136, column: 2, scope: !8623)
!8955 = !DILocation(line: 1138, column: 9, scope: !8593)
!8956 = !DILocation(line: 1138, column: 2, scope: !8593)
!8957 = !DILocation(line: 1139, column: 1, scope: !8593)
!8958 = !DILocalVariable(name: "wm", arg: 1, scope: !2, file: !3, line: 820, type: !1543)
!8959 = !DILocation(line: 820, column: 56, scope: !2)
!8960 = !DILocalVariable(name: "ot", arg: 2, scope: !2, file: !3, line: 820, type: !1578)
!8961 = !DILocation(line: 820, column: 76, scope: !2)
!8962 = !DILocalVariable(name: "properties", arg: 3, scope: !2, file: !3, line: 821, type: !1580)
!8963 = !DILocation(line: 821, column: 51, scope: !2)
!8964 = !DILocalVariable(name: "reports", arg: 4, scope: !2, file: !3, line: 821, type: !1582)
!8965 = !DILocation(line: 821, column: 75, scope: !2)
!8966 = !DILocalVariable(name: "op", scope: !2, file: !3, line: 824, type: !6)
!8967 = !DILocation(line: 824, column: 14, scope: !2)
!8968 = !DILocation(line: 824, column: 19, scope: !2)
!8969 = !DILocation(line: 824, column: 51, scope: !2)
!8970 = !DILocation(line: 824, column: 55, scope: !2)
!8971 = !DILocation(line: 827, column: 13, scope: !2)
!8972 = !DILocation(line: 827, column: 2, scope: !2)
!8973 = !DILocation(line: 827, column: 6, scope: !2)
!8974 = !DILocation(line: 827, column: 11, scope: !2)
!8975 = !DILocation(line: 828, column: 14, scope: !2)
!8976 = !DILocation(line: 828, column: 18, scope: !2)
!8977 = !DILocation(line: 828, column: 26, scope: !2)
!8978 = !DILocation(line: 828, column: 30, scope: !2)
!8979 = !DILocation(line: 828, column: 2, scope: !2)
!8980 = !DILocation(line: 831, column: 12, scope: !2)
!8981 = !DILocation(line: 831, column: 2, scope: !2)
!8982 = !DILocation(line: 831, column: 6, scope: !2)
!8983 = !DILocation(line: 831, column: 10, scope: !2)
!8984 = !DILocation(line: 832, column: 6, scope: !8985)
!8985 = distinct !DILexicalBlock(scope: !2, file: !3, line: 832, column: 6)
!8986 = !DILocation(line: 832, column: 17, scope: !8985)
!8987 = !DILocation(line: 832, column: 20, scope: !8985)
!8988 = !DILocation(line: 832, column: 32, scope: !8985)
!8989 = !DILocation(line: 832, column: 6, scope: !2)
!8990 = !DILocation(line: 833, column: 37, scope: !8991)
!8991 = distinct !DILexicalBlock(scope: !8985, file: !3, line: 832, column: 38)
!8992 = !DILocation(line: 833, column: 49, scope: !8991)
!8993 = !DILocation(line: 833, column: 20, scope: !8991)
!8994 = !DILocation(line: 833, column: 3, scope: !8991)
!8995 = !DILocation(line: 833, column: 7, scope: !8991)
!8996 = !DILocation(line: 833, column: 18, scope: !8991)
!8997 = !DILocation(line: 834, column: 2, scope: !8991)
!8998 = !DILocalVariable(name: "val", scope: !8999, file: !3, line: 836, type: !4193)
!8999 = distinct !DILexicalBlock(scope: !8985, file: !3, line: 835, column: 7)
!9000 = !DILocation(line: 836, column: 22, scope: !8999)
!9001 = !DILocation(line: 837, column: 20, scope: !8999)
!9002 = !DILocation(line: 837, column: 3, scope: !8999)
!9003 = !DILocation(line: 837, column: 7, scope: !8999)
!9004 = !DILocation(line: 837, column: 18, scope: !8999)
!9005 = !DILocation(line: 839, column: 22, scope: !2)
!9006 = !DILocation(line: 839, column: 26, scope: !2)
!9007 = !DILocation(line: 839, column: 30, scope: !2)
!9008 = !DILocation(line: 839, column: 34, scope: !2)
!9009 = !DILocation(line: 839, column: 40, scope: !2)
!9010 = !DILocation(line: 839, column: 44, scope: !2)
!9011 = !DILocation(line: 839, column: 56, scope: !2)
!9012 = !DILocation(line: 839, column: 60, scope: !2)
!9013 = !DILocation(line: 839, column: 2, scope: !2)
!9014 = !DILocation(line: 842, column: 6, scope: !9015)
!9015 = distinct !DILexicalBlock(scope: !2, file: !3, line: 842, column: 6)
!9016 = !DILocation(line: 842, column: 6, scope: !2)
!9017 = !DILocation(line: 843, column: 17, scope: !9018)
!9018 = distinct !DILexicalBlock(scope: !9015, file: !3, line: 842, column: 15)
!9019 = !DILocation(line: 843, column: 3, scope: !9018)
!9020 = !DILocation(line: 843, column: 7, scope: !9018)
!9021 = !DILocation(line: 843, column: 15, scope: !9018)
!9022 = !DILocation(line: 844, column: 2, scope: !9018)
!9023 = !DILocation(line: 846, column: 17, scope: !9024)
!9024 = distinct !DILexicalBlock(scope: !9015, file: !3, line: 845, column: 7)
!9025 = !DILocation(line: 846, column: 3, scope: !9024)
!9026 = !DILocation(line: 846, column: 7, scope: !9024)
!9027 = !DILocation(line: 846, column: 15, scope: !9024)
!9028 = !DILocation(line: 847, column: 20, scope: !9024)
!9029 = !DILocation(line: 847, column: 24, scope: !9024)
!9030 = !DILocation(line: 847, column: 3, scope: !9024)
!9031 = !DILocation(line: 851, column: 6, scope: !9032)
!9032 = distinct !DILexicalBlock(scope: !2, file: !3, line: 851, column: 6)
!9033 = !DILocation(line: 851, column: 10, scope: !9032)
!9034 = !DILocation(line: 851, column: 16, scope: !9032)
!9035 = !DILocation(line: 851, column: 6, scope: !2)
!9036 = !DILocalVariable(name: "otmacro", scope: !9037, file: !3, line: 853, type: !3510)
!9037 = distinct !DILexicalBlock(scope: !9032, file: !3, line: 851, column: 23)
!9038 = !DILocation(line: 853, column: 24, scope: !9037)
!9039 = !DILocalVariable(name: "root", scope: !9037, file: !3, line: 854, type: !34)
!9040 = !DILocation(line: 854, column: 7, scope: !9037)
!9041 = !DILocation(line: 857, column: 7, scope: !9042)
!9042 = distinct !DILexicalBlock(scope: !9037, file: !3, line: 857, column: 7)
!9043 = !DILocation(line: 857, column: 16, scope: !9042)
!9044 = !DILocation(line: 857, column: 7, scope: !9037)
!9045 = !DILocation(line: 858, column: 15, scope: !9046)
!9046 = distinct !DILexicalBlock(scope: !9042, file: !3, line: 857, column: 25)
!9047 = !DILocation(line: 858, column: 13, scope: !9046)
!9048 = !DILocation(line: 859, column: 9, scope: !9046)
!9049 = !DILocation(line: 860, column: 3, scope: !9046)
!9050 = !DILocation(line: 864, column: 7, scope: !9051)
!9051 = distinct !DILexicalBlock(scope: !9037, file: !3, line: 864, column: 7)
!9052 = !DILocation(line: 864, column: 7, scope: !9037)
!9053 = !DILocation(line: 865, column: 14, scope: !9054)
!9054 = distinct !DILexicalBlock(scope: !9051, file: !3, line: 864, column: 19)
!9055 = !DILocation(line: 865, column: 18, scope: !9054)
!9056 = !DILocation(line: 865, column: 24, scope: !9054)
!9057 = !DILocation(line: 865, column: 12, scope: !9054)
!9058 = !DILocalVariable(name: "rna_macro_iter", scope: !9059, file: !3, line: 867, type: !4240)
!9059 = distinct !DILexicalBlock(scope: !9054, file: !3, line: 867, column: 4)
!9060 = !DILocation(line: 867, column: 4, scope: !9059)
!9061 = !DILocation(line: 867, column: 4, scope: !9062)
!9062 = distinct !DILexicalBlock(scope: !9059, file: !3, line: 867, column: 4)
!9063 = !DILocation(line: 867, column: 4, scope: !9064)
!9064 = distinct !DILexicalBlock(scope: !9062, file: !3, line: 867, column: 4)
!9065 = !DILocalVariable(name: "prop", scope: !9066, file: !3, line: 867, type: !142)
!9066 = distinct !DILexicalBlock(scope: !9064, file: !3, line: 867, column: 4)
!9067 = !DILocation(line: 867, column: 4, scope: !9066)
!9068 = !DILocation(line: 870, column: 9, scope: !9069)
!9069 = distinct !DILexicalBlock(scope: !9070, file: !3, line: 870, column: 9)
!9070 = distinct !DILexicalBlock(scope: !9066, file: !3, line: 868, column: 4)
!9071 = !DILocation(line: 870, column: 17, scope: !9069)
!9072 = !DILocation(line: 870, column: 9, scope: !9070)
!9073 = !DILocation(line: 871, column: 6, scope: !9069)
!9074 = !DILocation(line: 874, column: 40, scope: !9075)
!9075 = distinct !DILexicalBlock(scope: !9070, file: !3, line: 874, column: 9)
!9076 = !DILocation(line: 874, column: 16, scope: !9075)
!9077 = !DILocation(line: 874, column: 47, scope: !9075)
!9078 = !DILocation(line: 874, column: 56, scope: !9075)
!9079 = !DILocation(line: 874, column: 9, scope: !9075)
!9080 = !DILocation(line: 874, column: 64, scope: !9075)
!9081 = !DILocation(line: 874, column: 9, scope: !9070)
!9082 = !DILocalVariable(name: "otm", scope: !9083, file: !3, line: 875, type: !1578)
!9083 = distinct !DILexicalBlock(scope: !9075, file: !3, line: 874, column: 70)
!9084 = !DILocation(line: 875, column: 22, scope: !9083)
!9085 = !DILocation(line: 875, column: 49, scope: !9083)
!9086 = !DILocation(line: 875, column: 58, scope: !9083)
!9087 = !DILocation(line: 875, column: 28, scope: !9083)
!9088 = !DILocalVariable(name: "someptr", scope: !9083, file: !3, line: 876, type: !1581)
!9089 = !DILocation(line: 876, column: 17, scope: !9083)
!9090 = !DILocation(line: 876, column: 52, scope: !9083)
!9091 = !DILocation(line: 876, column: 64, scope: !9083)
!9092 = !DILocation(line: 876, column: 27, scope: !9083)
!9093 = !DILocalVariable(name: "opm", scope: !9083, file: !3, line: 877, type: !6)
!9094 = !DILocation(line: 877, column: 18, scope: !9083)
!9095 = !DILocation(line: 877, column: 43, scope: !9083)
!9096 = !DILocation(line: 877, column: 47, scope: !9083)
!9097 = !DILocation(line: 877, column: 24, scope: !9083)
!9098 = !DILocation(line: 879, column: 30, scope: !9083)
!9099 = !DILocation(line: 879, column: 35, scope: !9083)
!9100 = !DILocation(line: 879, column: 47, scope: !9083)
!9101 = !DILocation(line: 879, column: 56, scope: !9083)
!9102 = !DILocation(line: 879, column: 6, scope: !9083)
!9103 = !DILocation(line: 881, column: 19, scope: !9083)
!9104 = !DILocation(line: 881, column: 29, scope: !9083)
!9105 = !DILocation(line: 881, column: 36, scope: !9083)
!9106 = !DILocation(line: 881, column: 6, scope: !9083)
!9107 = !DILocation(line: 882, column: 17, scope: !9083)
!9108 = !DILocation(line: 882, column: 6, scope: !9083)
!9109 = !DILocation(line: 882, column: 11, scope: !9083)
!9110 = !DILocation(line: 882, column: 15, scope: !9083)
!9111 = !DILocation(line: 884, column: 16, scope: !9083)
!9112 = !DILocation(line: 884, column: 25, scope: !9083)
!9113 = !DILocation(line: 884, column: 14, scope: !9083)
!9114 = !DILocation(line: 885, column: 5, scope: !9083)
!9115 = !DILocation(line: 887, column: 4, scope: !9066)
!9116 = distinct !{!9116, !9061, !9117}
!9117 = !DILocation(line: 887, column: 4, scope: !9062)
!9118 = !DILocation(line: 887, column: 4, scope: !9059)
!9119 = !DILocation(line: 888, column: 3, scope: !9054)
!9120 = !DILocation(line: 890, column: 19, scope: !9121)
!9121 = distinct !DILexicalBlock(scope: !9122, file: !3, line: 890, column: 4)
!9122 = distinct !DILexicalBlock(scope: !9051, file: !3, line: 889, column: 8)
!9123 = !DILocation(line: 890, column: 23, scope: !9121)
!9124 = !DILocation(line: 890, column: 29, scope: !9121)
!9125 = !DILocation(line: 890, column: 17, scope: !9121)
!9126 = !DILocation(line: 890, column: 9, scope: !9121)
!9127 = !DILocation(line: 890, column: 36, scope: !9128)
!9128 = distinct !DILexicalBlock(scope: !9121, file: !3, line: 890, column: 4)
!9129 = !DILocation(line: 890, column: 4, scope: !9121)
!9130 = !DILocalVariable(name: "otm", scope: !9131, file: !3, line: 891, type: !1578)
!9131 = distinct !DILexicalBlock(scope: !9128, file: !3, line: 890, column: 70)
!9132 = !DILocation(line: 891, column: 21, scope: !9131)
!9133 = !DILocation(line: 891, column: 48, scope: !9131)
!9134 = !DILocation(line: 891, column: 57, scope: !9131)
!9135 = !DILocation(line: 891, column: 27, scope: !9131)
!9136 = !DILocalVariable(name: "opm", scope: !9131, file: !3, line: 892, type: !6)
!9137 = !DILocation(line: 892, column: 17, scope: !9131)
!9138 = !DILocation(line: 892, column: 42, scope: !9131)
!9139 = !DILocation(line: 892, column: 46, scope: !9131)
!9140 = !DILocation(line: 892, column: 51, scope: !9131)
!9141 = !DILocation(line: 892, column: 60, scope: !9131)
!9142 = !DILocation(line: 892, column: 23, scope: !9131)
!9143 = !DILocation(line: 894, column: 18, scope: !9131)
!9144 = !DILocation(line: 894, column: 28, scope: !9131)
!9145 = !DILocation(line: 894, column: 35, scope: !9131)
!9146 = !DILocation(line: 894, column: 5, scope: !9131)
!9147 = !DILocation(line: 895, column: 16, scope: !9131)
!9148 = !DILocation(line: 895, column: 5, scope: !9131)
!9149 = !DILocation(line: 895, column: 10, scope: !9131)
!9150 = !DILocation(line: 895, column: 14, scope: !9131)
!9151 = !DILocation(line: 896, column: 4, scope: !9131)
!9152 = !DILocation(line: 890, column: 55, scope: !9128)
!9153 = !DILocation(line: 890, column: 64, scope: !9128)
!9154 = !DILocation(line: 890, column: 53, scope: !9128)
!9155 = !DILocation(line: 890, column: 4, scope: !9128)
!9156 = distinct !{!9156, !9129, !9157}
!9157 = !DILocation(line: 896, column: 4, scope: !9121)
!9158 = !DILocation(line: 899, column: 7, scope: !9159)
!9159 = distinct !DILexicalBlock(scope: !9037, file: !3, line: 899, column: 7)
!9160 = !DILocation(line: 899, column: 7, scope: !9037)
!9161 = !DILocation(line: 900, column: 13, scope: !9159)
!9162 = !DILocation(line: 900, column: 4, scope: !9159)
!9163 = !DILocation(line: 901, column: 2, scope: !9037)
!9164 = !DILocation(line: 903, column: 34, scope: !2)
!9165 = !DILocation(line: 903, column: 38, scope: !2)
!9166 = !DILocation(line: 903, column: 2, scope: !2)
!9167 = !DILocation(line: 905, column: 9, scope: !2)
!9168 = !DILocation(line: 905, column: 2, scope: !2)
!9169 = distinct !DISubprogram(name: "wm_handler_ui_cancel", scope: !3, file: !3, line: 450, type: !3044, scopeLine: 451, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!9170 = !DILocalVariable(name: "C", arg: 1, scope: !9169, file: !3, line: 450, type: !2402)
!9171 = !DILocation(line: 450, column: 44, scope: !9169)
!9172 = !DILocalVariable(name: "win", scope: !9169, file: !3, line: 452, type: !2567)
!9173 = !DILocation(line: 452, column: 12, scope: !9169)
!9174 = !DILocation(line: 452, column: 32, scope: !9169)
!9175 = !DILocation(line: 452, column: 18, scope: !9169)
!9176 = !DILocalVariable(name: "ar", scope: !9169, file: !3, line: 453, type: !2737)
!9177 = !DILocation(line: 453, column: 11, scope: !9169)
!9178 = !DILocation(line: 453, column: 30, scope: !9169)
!9179 = !DILocation(line: 453, column: 16, scope: !9169)
!9180 = !DILocalVariable(name: "handler", scope: !9169, file: !3, line: 454, type: !2404)
!9181 = !DILocation(line: 454, column: 18, scope: !9169)
!9182 = !DILocalVariable(name: "nexthandler", scope: !9169, file: !3, line: 454, type: !2404)
!9183 = !DILocation(line: 454, column: 28, scope: !9169)
!9184 = !DILocation(line: 456, column: 7, scope: !9185)
!9185 = distinct !DILexicalBlock(scope: !9169, file: !3, line: 456, column: 6)
!9186 = !DILocation(line: 456, column: 6, scope: !9169)
!9187 = !DILocation(line: 457, column: 3, scope: !9185)
!9188 = !DILocation(line: 459, column: 17, scope: !9189)
!9189 = distinct !DILexicalBlock(scope: !9169, file: !3, line: 459, column: 2)
!9190 = !DILocation(line: 459, column: 21, scope: !9189)
!9191 = !DILocation(line: 459, column: 30, scope: !9189)
!9192 = !DILocation(line: 459, column: 15, scope: !9189)
!9193 = !DILocation(line: 459, column: 7, scope: !9189)
!9194 = !DILocation(line: 459, column: 37, scope: !9195)
!9195 = distinct !DILexicalBlock(scope: !9189, file: !3, line: 459, column: 2)
!9196 = !DILocation(line: 459, column: 2, scope: !9189)
!9197 = !DILocation(line: 460, column: 17, scope: !9198)
!9198 = distinct !DILexicalBlock(scope: !9195, file: !3, line: 459, column: 69)
!9199 = !DILocation(line: 460, column: 26, scope: !9198)
!9200 = !DILocation(line: 460, column: 15, scope: !9198)
!9201 = !DILocation(line: 462, column: 7, scope: !9202)
!9202 = distinct !DILexicalBlock(scope: !9198, file: !3, line: 462, column: 7)
!9203 = !DILocation(line: 462, column: 16, scope: !9202)
!9204 = !DILocation(line: 462, column: 7, scope: !9198)
!9205 = !DILocalVariable(name: "event", scope: !9206, file: !3, line: 463, type: !2553)
!9206 = distinct !DILexicalBlock(scope: !9202, file: !3, line: 462, column: 27)
!9207 = !DILocation(line: 463, column: 12, scope: !9206)
!9208 = !DILocation(line: 465, column: 30, scope: !9206)
!9209 = !DILocation(line: 465, column: 4, scope: !9206)
!9210 = !DILocation(line: 466, column: 10, scope: !9206)
!9211 = !DILocation(line: 466, column: 15, scope: !9206)
!9212 = !DILocation(line: 467, column: 4, scope: !9206)
!9213 = !DILocation(line: 467, column: 13, scope: !9206)
!9214 = !DILocation(line: 467, column: 23, scope: !9206)
!9215 = !DILocation(line: 467, column: 34, scope: !9206)
!9216 = !DILocation(line: 467, column: 43, scope: !9206)
!9217 = !DILocation(line: 468, column: 3, scope: !9206)
!9218 = !DILocation(line: 469, column: 2, scope: !9198)
!9219 = !DILocation(line: 459, column: 56, scope: !9195)
!9220 = !DILocation(line: 459, column: 54, scope: !9195)
!9221 = !DILocation(line: 459, column: 2, scope: !9195)
!9222 = distinct !{!9222, !9196, !9223}
!9223 = !DILocation(line: 469, column: 2, scope: !9189)
!9224 = !DILocation(line: 470, column: 1, scope: !9169)
!9225 = distinct !DISubprogram(name: "wm_handlers_do_intern", scope: !3, file: !3, line: 1844, type: !5409, scopeLine: 1845, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!9226 = !DILocalVariable(name: "C", arg: 1, scope: !9225, file: !3, line: 1844, type: !2402)
!9227 = !DILocation(line: 1844, column: 44, scope: !9225)
!9228 = !DILocalVariable(name: "event", arg: 2, scope: !9225, file: !3, line: 1844, type: !2552)
!9229 = !DILocation(line: 1844, column: 56, scope: !9225)
!9230 = !DILocalVariable(name: "handlers", arg: 3, scope: !9225, file: !3, line: 1844, type: !401)
!9231 = !DILocation(line: 1844, column: 73, scope: !9225)
!9232 = !DILocalVariable(name: "wm", scope: !9225, file: !3, line: 1856, type: !1543)
!9233 = !DILocation(line: 1856, column: 19, scope: !9225)
!9234 = !DILocation(line: 1856, column: 39, scope: !9225)
!9235 = !DILocation(line: 1856, column: 24, scope: !9225)
!9236 = !DILocalVariable(name: "handler", scope: !9225, file: !3, line: 1857, type: !2404)
!9237 = !DILocation(line: 1857, column: 18, scope: !9225)
!9238 = !DILocalVariable(name: "nexthandler", scope: !9225, file: !3, line: 1857, type: !2404)
!9239 = !DILocation(line: 1857, column: 28, scope: !9225)
!9240 = !DILocalVariable(name: "action", scope: !9225, file: !3, line: 1858, type: !34)
!9241 = !DILocation(line: 1858, column: 6, scope: !9225)
!9242 = !DILocalVariable(name: "always_pass", scope: !9225, file: !3, line: 1859, type: !34)
!9243 = !DILocation(line: 1859, column: 6, scope: !9225)
!9244 = !DILocation(line: 1861, column: 6, scope: !9245)
!9245 = distinct !DILexicalBlock(scope: !9225, file: !3, line: 1861, column: 6)
!9246 = !DILocation(line: 1861, column: 15, scope: !9245)
!9247 = !DILocation(line: 1861, column: 6, scope: !9225)
!9248 = !DILocation(line: 1862, column: 10, scope: !9249)
!9249 = distinct !DILexicalBlock(scope: !9245, file: !3, line: 1861, column: 24)
!9250 = !DILocation(line: 1862, column: 3, scope: !9249)
!9251 = !DILocation(line: 1871, column: 17, scope: !9252)
!9252 = distinct !DILexicalBlock(scope: !9225, file: !3, line: 1871, column: 2)
!9253 = !DILocation(line: 1871, column: 27, scope: !9252)
!9254 = !DILocation(line: 1871, column: 15, scope: !9252)
!9255 = !DILocation(line: 1871, column: 7, scope: !9252)
!9256 = !DILocation(line: 1871, column: 34, scope: !9257)
!9257 = distinct !DILexicalBlock(scope: !9252, file: !3, line: 1871, column: 2)
!9258 = !DILocation(line: 1871, column: 42, scope: !9257)
!9259 = !DILocation(line: 1871, column: 45, scope: !9257)
!9260 = !DILocation(line: 1871, column: 55, scope: !9257)
!9261 = !DILocation(line: 0, scope: !9257)
!9262 = !DILocation(line: 1871, column: 2, scope: !9252)
!9263 = !DILocation(line: 1873, column: 17, scope: !9264)
!9264 = distinct !DILexicalBlock(scope: !9257, file: !3, line: 1871, column: 85)
!9265 = !DILocation(line: 1873, column: 26, scope: !9264)
!9266 = !DILocation(line: 1873, column: 15, scope: !9264)
!9267 = !DILocation(line: 1876, column: 7, scope: !9268)
!9268 = distinct !DILexicalBlock(scope: !9264, file: !3, line: 1876, column: 7)
!9269 = !DILocation(line: 1876, column: 16, scope: !9268)
!9270 = !DILocation(line: 1876, column: 21, scope: !9268)
!9271 = !DILocation(line: 1876, column: 7, scope: !9264)
!9272 = !DILocation(line: 1878, column: 3, scope: !9273)
!9273 = distinct !DILexicalBlock(scope: !9268, file: !3, line: 1876, column: 43)
!9274 = !DILocation(line: 1879, column: 34, scope: !9275)
!9275 = distinct !DILexicalBlock(scope: !9268, file: !3, line: 1879, column: 12)
!9276 = !DILocation(line: 1879, column: 43, scope: !9275)
!9277 = !DILocation(line: 1879, column: 12, scope: !9275)
!9278 = !DILocation(line: 1879, column: 12, scope: !9268)
!9279 = !DILocation(line: 1881, column: 39, scope: !9280)
!9280 = distinct !DILexicalBlock(scope: !9275, file: !3, line: 1879, column: 51)
!9281 = !DILocation(line: 1881, column: 18, scope: !9280)
!9282 = !DILocation(line: 1881, column: 16, scope: !9280)
!9283 = !DILocation(line: 1884, column: 8, scope: !9284)
!9284 = distinct !DILexicalBlock(scope: !9280, file: !3, line: 1884, column: 8)
!9285 = !DILocation(line: 1884, column: 17, scope: !9284)
!9286 = !DILocation(line: 1884, column: 22, scope: !9284)
!9287 = !DILocation(line: 1884, column: 8, scope: !9280)
!9288 = !DILocation(line: 1885, column: 12, scope: !9284)
!9289 = !DILocation(line: 1885, column: 5, scope: !9284)
!9290 = !DILocation(line: 1887, column: 8, scope: !9291)
!9291 = distinct !DILexicalBlock(scope: !9280, file: !3, line: 1887, column: 8)
!9292 = !DILocation(line: 1887, column: 17, scope: !9291)
!9293 = !DILocation(line: 1887, column: 8, scope: !9280)
!9294 = !DILocalVariable(name: "keymap", scope: !9295, file: !3, line: 1888, type: !2414)
!9295 = distinct !DILexicalBlock(scope: !9291, file: !3, line: 1887, column: 25)
!9296 = !DILocation(line: 1888, column: 15, scope: !9295)
!9297 = !DILocation(line: 1888, column: 41, scope: !9295)
!9298 = !DILocation(line: 1888, column: 45, scope: !9295)
!9299 = !DILocation(line: 1888, column: 54, scope: !9295)
!9300 = !DILocation(line: 1888, column: 24, scope: !9295)
!9301 = !DILocalVariable(name: "kmi", scope: !9295, file: !3, line: 1889, type: !9302)
!9302 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9303, size: 64)
!9303 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmKeyMapItem", file: !8, line: 252, baseType: !9304)
!9304 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmKeyMapItem", file: !8, line: 227, size: 1472, elements: !9305)
!9305 = !{!9306, !9308, !9309, !9310, !9311, !9312, !9313, !9314, !9315, !9316, !9317, !9318, !9319, !9320, !9321, !9322, !9323, !9324}
!9306 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9304, file: !8, line: 228, baseType: !9307, size: 64)
!9307 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9304, size: 64)
!9308 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !9304, file: !8, line: 228, baseType: !9307, size: 64, offset: 64)
!9309 = !DIDerivedType(tag: DW_TAG_member, name: "idname", scope: !9304, file: !8, line: 231, baseType: !15, size: 512, offset: 128)
!9310 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !9304, file: !8, line: 232, baseType: !20, size: 64, offset: 640)
!9311 = !DIDerivedType(tag: DW_TAG_member, name: "propvalue_str", scope: !9304, file: !8, line: 235, baseType: !15, size: 512, offset: 704)
!9312 = !DIDerivedType(tag: DW_TAG_member, name: "propvalue", scope: !9304, file: !8, line: 236, baseType: !31, size: 16, offset: 1216)
!9313 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !9304, file: !8, line: 239, baseType: !31, size: 16, offset: 1232)
!9314 = !DIDerivedType(tag: DW_TAG_member, name: "val", scope: !9304, file: !8, line: 240, baseType: !31, size: 16, offset: 1248)
!9315 = !DIDerivedType(tag: DW_TAG_member, name: "shift", scope: !9304, file: !8, line: 241, baseType: !31, size: 16, offset: 1264)
!9316 = !DIDerivedType(tag: DW_TAG_member, name: "ctrl", scope: !9304, file: !8, line: 241, baseType: !31, size: 16, offset: 1280)
!9317 = !DIDerivedType(tag: DW_TAG_member, name: "alt", scope: !9304, file: !8, line: 241, baseType: !31, size: 16, offset: 1296)
!9318 = !DIDerivedType(tag: DW_TAG_member, name: "oskey", scope: !9304, file: !8, line: 241, baseType: !31, size: 16, offset: 1312)
!9319 = !DIDerivedType(tag: DW_TAG_member, name: "keymodifier", scope: !9304, file: !8, line: 242, baseType: !31, size: 16, offset: 1328)
!9320 = !DIDerivedType(tag: DW_TAG_member, name: "flag", scope: !9304, file: !8, line: 245, baseType: !31, size: 16, offset: 1344)
!9321 = !DIDerivedType(tag: DW_TAG_member, name: "maptype", scope: !9304, file: !8, line: 248, baseType: !31, size: 16, offset: 1360)
!9322 = !DIDerivedType(tag: DW_TAG_member, name: "id", scope: !9304, file: !8, line: 249, baseType: !31, size: 16, offset: 1376)
!9323 = !DIDerivedType(tag: DW_TAG_member, name: "pad", scope: !9304, file: !8, line: 250, baseType: !31, size: 16, offset: 1392)
!9324 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !9304, file: !8, line: 251, baseType: !180, size: 64, offset: 1408)
!9325 = !DILocation(line: 1889, column: 19, scope: !9295)
!9326 = !DILocation(line: 1893, column: 10, scope: !9327)
!9327 = distinct !DILexicalBlock(scope: !9295, file: !3, line: 1893, column: 9)
!9328 = !DILocation(line: 1893, column: 18, scope: !9327)
!9329 = !DILocation(line: 1893, column: 23, scope: !9327)
!9330 = !DILocation(line: 1893, column: 26, scope: !9327)
!9331 = !DILocation(line: 1893, column: 34, scope: !9327)
!9332 = !DILocation(line: 1893, column: 39, scope: !9327)
!9333 = !DILocation(line: 1893, column: 9, scope: !9295)
!9334 = !DILocation(line: 1901, column: 17, scope: !9335)
!9335 = distinct !DILexicalBlock(scope: !9336, file: !3, line: 1901, column: 6)
!9336 = distinct !DILexicalBlock(scope: !9327, file: !3, line: 1893, column: 43)
!9337 = !DILocation(line: 1901, column: 25, scope: !9335)
!9338 = !DILocation(line: 1901, column: 31, scope: !9335)
!9339 = !DILocation(line: 1901, column: 15, scope: !9335)
!9340 = !DILocation(line: 1901, column: 11, scope: !9335)
!9341 = !DILocation(line: 1901, column: 38, scope: !9342)
!9342 = distinct !DILexicalBlock(scope: !9335, file: !3, line: 1901, column: 6)
!9343 = !DILocation(line: 1901, column: 6, scope: !9335)
!9344 = !DILocation(line: 1902, column: 25, scope: !9345)
!9345 = distinct !DILexicalBlock(scope: !9346, file: !3, line: 1902, column: 11)
!9346 = distinct !DILexicalBlock(scope: !9342, file: !3, line: 1901, column: 60)
!9347 = !DILocation(line: 1902, column: 32, scope: !9345)
!9348 = !DILocation(line: 1902, column: 11, scope: !9345)
!9349 = !DILocation(line: 1902, column: 11, scope: !9346)
!9350 = !DILocation(line: 1907, column: 31, scope: !9351)
!9351 = distinct !DILexicalBlock(scope: !9345, file: !3, line: 1902, column: 38)
!9352 = !DILocation(line: 1907, column: 36, scope: !9351)
!9353 = !DILocation(line: 1907, column: 8, scope: !9351)
!9354 = !DILocation(line: 1907, column: 15, scope: !9351)
!9355 = !DILocation(line: 1907, column: 29, scope: !9351)
!9356 = !DILocation(line: 1909, column: 43, scope: !9351)
!9357 = !DILocation(line: 1909, column: 46, scope: !9351)
!9358 = !DILocation(line: 1909, column: 56, scope: !9351)
!9359 = !DILocation(line: 1909, column: 65, scope: !9351)
!9360 = !DILocation(line: 1909, column: 72, scope: !9351)
!9361 = !DILocation(line: 1909, column: 77, scope: !9351)
!9362 = !DILocation(line: 1909, column: 18, scope: !9351)
!9363 = !DILocation(line: 1909, column: 15, scope: !9351)
!9364 = !DILocation(line: 1910, column: 12, scope: !9365)
!9365 = distinct !DILexicalBlock(scope: !9351, file: !3, line: 1910, column: 12)
!9366 = !DILocation(line: 1910, column: 19, scope: !9365)
!9367 = !DILocation(line: 1910, column: 12, scope: !9351)
!9368 = !DILocation(line: 1913, column: 15, scope: !9369)
!9369 = distinct !DILexicalBlock(scope: !9370, file: !3, line: 1913, column: 13)
!9370 = distinct !DILexicalBlock(scope: !9365, file: !3, line: 1910, column: 39)
!9371 = !DILocation(line: 1913, column: 21, scope: !9369)
!9372 = !DILocation(line: 1913, column: 13, scope: !9370)
!9373 = !DILocation(line: 1914, column: 56, scope: !9369)
!9374 = !DILocation(line: 1914, column: 61, scope: !9369)
!9375 = !DILocation(line: 1914, column: 10, scope: !9369)
!9376 = !DILocation(line: 1916, column: 9, scope: !9370)
!9377 = !DILocation(line: 1919, column: 13, scope: !9378)
!9378 = distinct !DILexicalBlock(scope: !9379, file: !3, line: 1919, column: 13)
!9379 = distinct !DILexicalBlock(scope: !9365, file: !3, line: 1918, column: 13)
!9380 = !DILocation(line: 1919, column: 20, scope: !9378)
!9381 = !DILocation(line: 1919, column: 13, scope: !9379)
!9382 = !DILocation(line: 1920, column: 16, scope: !9383)
!9383 = distinct !DILexicalBlock(scope: !9378, file: !3, line: 1920, column: 14)
!9384 = !DILocation(line: 1920, column: 22, scope: !9383)
!9385 = !DILocation(line: 1920, column: 14, scope: !9378)
!9386 = !DILocation(line: 1921, column: 71, scope: !9383)
!9387 = !DILocation(line: 1921, column: 76, scope: !9383)
!9388 = !DILocation(line: 1921, column: 11, scope: !9383)
!9389 = !DILocation(line: 1920, column: 58, scope: !9383)
!9390 = !DILocation(line: 1925, column: 7, scope: !9351)
!9391 = !DILocation(line: 1926, column: 6, scope: !9346)
!9392 = !DILocation(line: 1901, column: 49, scope: !9342)
!9393 = !DILocation(line: 1901, column: 54, scope: !9342)
!9394 = !DILocation(line: 1901, column: 47, scope: !9342)
!9395 = !DILocation(line: 1901, column: 6, scope: !9342)
!9396 = distinct !{!9396, !9343, !9397}
!9397 = !DILocation(line: 1926, column: 6, scope: !9335)
!9398 = !DILocation(line: 1927, column: 5, scope: !9336)
!9399 = !DILocation(line: 1935, column: 4, scope: !9295)
!9400 = !DILocation(line: 1936, column: 13, scope: !9401)
!9401 = distinct !DILexicalBlock(scope: !9291, file: !3, line: 1936, column: 13)
!9402 = !DILocation(line: 1936, column: 22, scope: !9401)
!9403 = !DILocation(line: 1936, column: 13, scope: !9291)
!9404 = !DILocation(line: 1937, column: 10, scope: !9405)
!9405 = distinct !DILexicalBlock(scope: !9406, file: !3, line: 1937, column: 9)
!9406 = distinct !DILexicalBlock(scope: !9401, file: !3, line: 1936, column: 33)
!9407 = !DILocation(line: 1937, column: 14, scope: !9405)
!9408 = !DILocation(line: 1937, column: 9, scope: !9406)
!9409 = !DILocation(line: 1938, column: 35, scope: !9410)
!9410 = distinct !DILexicalBlock(scope: !9405, file: !3, line: 1937, column: 35)
!9411 = !DILocation(line: 1938, column: 38, scope: !9410)
!9412 = !DILocation(line: 1938, column: 47, scope: !9410)
!9413 = !DILocation(line: 1938, column: 54, scope: !9410)
!9414 = !DILocation(line: 1938, column: 16, scope: !9410)
!9415 = !DILocation(line: 1938, column: 13, scope: !9410)
!9416 = !DILocation(line: 1939, column: 5, scope: !9410)
!9417 = !DILocation(line: 1940, column: 4, scope: !9406)
!9418 = !DILocation(line: 1941, column: 13, scope: !9419)
!9419 = distinct !DILexicalBlock(scope: !9401, file: !3, line: 1941, column: 13)
!9420 = !DILocation(line: 1941, column: 22, scope: !9419)
!9421 = !DILocation(line: 1941, column: 27, scope: !9419)
!9422 = !DILocation(line: 1941, column: 13, scope: !9401)
!9423 = !DILocation(line: 1942, column: 10, scope: !9424)
!9424 = distinct !DILexicalBlock(scope: !9425, file: !3, line: 1942, column: 9)
!9425 = distinct !DILexicalBlock(scope: !9419, file: !3, line: 1941, column: 53)
!9426 = !DILocation(line: 1942, column: 14, scope: !9424)
!9427 = !DILocation(line: 1942, column: 9, scope: !9425)
!9428 = !DILocation(line: 1944, column: 43, scope: !9429)
!9429 = distinct !DILexicalBlock(scope: !9424, file: !3, line: 1942, column: 35)
!9430 = !DILocation(line: 1944, column: 46, scope: !9429)
!9431 = !DILocation(line: 1944, column: 56, scope: !9429)
!9432 = !DILocation(line: 1944, column: 65, scope: !9429)
!9433 = !DILocation(line: 1944, column: 16, scope: !9429)
!9434 = !DILocation(line: 1944, column: 13, scope: !9429)
!9435 = !DILocation(line: 1945, column: 5, scope: !9429)
!9436 = !DILocation(line: 1946, column: 4, scope: !9425)
!9437 = !DILocation(line: 1947, column: 13, scope: !9438)
!9438 = distinct !DILexicalBlock(scope: !9419, file: !3, line: 1947, column: 13)
!9439 = !DILocation(line: 1947, column: 22, scope: !9438)
!9440 = !DILocation(line: 1947, column: 13, scope: !9419)
!9441 = !DILocation(line: 1948, column: 10, scope: !9442)
!9442 = distinct !DILexicalBlock(scope: !9443, file: !3, line: 1948, column: 9)
!9443 = distinct !DILexicalBlock(scope: !9438, file: !3, line: 1947, column: 33)
!9444 = !DILocation(line: 1948, column: 14, scope: !9442)
!9445 = !DILocation(line: 1948, column: 34, scope: !9442)
!9446 = !DILocation(line: 1948, column: 37, scope: !9442)
!9447 = !DILocation(line: 1948, column: 44, scope: !9442)
!9448 = !DILocation(line: 1948, column: 49, scope: !9442)
!9449 = !DILocation(line: 1948, column: 9, scope: !9443)
!9450 = !DILocalVariable(name: "drop", scope: !9451, file: !3, line: 1949, type: !9452)
!9451 = distinct !DILexicalBlock(scope: !9442, file: !3, line: 1948, column: 62)
!9452 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9453, size: 64)
!9453 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmDropBox", file: !55, line: 645, baseType: !9454)
!9454 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmDropBox", file: !55, line: 628, size: 512, elements: !9455)
!9455 = !{!9456, !9458, !9459, !9484, !9488, !9489, !9490, !9491}
!9456 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9454, file: !55, line: 629, baseType: !9457, size: 64)
!9457 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9454, size: 64)
!9458 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !9454, file: !55, line: 629, baseType: !9457, size: 64, offset: 64)
!9459 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !9454, file: !55, line: 632, baseType: !9460, size: 64, offset: 128)
!9460 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9461, size: 64)
!9461 = !DISubroutineType(types: !9462)
!9462 = !{!34, !67, !9463, !2569}
!9463 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9464, size: 64)
!9464 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmDrag", file: !55, line: 610, size: 10304, elements: !9465)
!9465 = !{!9466, !9467, !9468, !9469, !9470, !9471, !9472, !9473, !9476, !9477, !9478, !9479, !9483}
!9466 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !9464, file: !55, line: 611, baseType: !9463, size: 64)
!9467 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !9464, file: !55, line: 611, baseType: !9463, size: 64, offset: 64)
!9468 = !DIDerivedType(tag: DW_TAG_member, name: "icon", scope: !9464, file: !55, line: 613, baseType: !34, size: 32, offset: 128)
!9469 = !DIDerivedType(tag: DW_TAG_member, name: "type", scope: !9464, file: !55, line: 613, baseType: !34, size: 32, offset: 160)
!9470 = !DIDerivedType(tag: DW_TAG_member, name: "poin", scope: !9464, file: !55, line: 614, baseType: !40, size: 64, offset: 192)
!9471 = !DIDerivedType(tag: DW_TAG_member, name: "path", scope: !9464, file: !55, line: 615, baseType: !255, size: 8192, offset: 256)
!9472 = !DIDerivedType(tag: DW_TAG_member, name: "value", scope: !9464, file: !55, line: 616, baseType: !104, size: 64, offset: 8448)
!9473 = !DIDerivedType(tag: DW_TAG_member, name: "imb", scope: !9464, file: !55, line: 618, baseType: !9474, size: 64, offset: 8512)
!9474 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9475, size: 64)
!9475 = !DICompositeType(tag: DW_TAG_structure_type, name: "ImBuf", file: !504, line: 136, flags: DIFlagFwdDecl)
!9476 = !DIDerivedType(tag: DW_TAG_member, name: "scale", scope: !9464, file: !55, line: 619, baseType: !120, size: 32, offset: 8576)
!9477 = !DIDerivedType(tag: DW_TAG_member, name: "sx", scope: !9464, file: !55, line: 620, baseType: !34, size: 32, offset: 8608)
!9478 = !DIDerivedType(tag: DW_TAG_member, name: "sy", scope: !9464, file: !55, line: 620, baseType: !34, size: 32, offset: 8640)
!9479 = !DIDerivedType(tag: DW_TAG_member, name: "opname", scope: !9464, file: !55, line: 622, baseType: !9480, size: 1600, offset: 8672)
!9480 = !DICompositeType(tag: DW_TAG_array_type, baseType: !16, size: 1600, elements: !9481)
!9481 = !{!9482}
!9482 = !DISubrange(count: 200)
!9483 = !DIDerivedType(tag: DW_TAG_member, name: "flags", scope: !9464, file: !55, line: 623, baseType: !300, size: 32, offset: 10272)
!9484 = !DIDerivedType(tag: DW_TAG_member, name: "copy", scope: !9454, file: !55, line: 635, baseType: !9485, size: 64, offset: 192)
!9485 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9486, size: 64)
!9486 = !DISubroutineType(types: !9487)
!9487 = !{null, !9463, !9457}
!9488 = !DIDerivedType(tag: DW_TAG_member, name: "ot", scope: !9454, file: !55, line: 638, baseType: !1578, size: 64, offset: 256)
!9489 = !DIDerivedType(tag: DW_TAG_member, name: "properties", scope: !9454, file: !55, line: 640, baseType: !26, size: 64, offset: 320)
!9490 = !DIDerivedType(tag: DW_TAG_member, name: "ptr", scope: !9454, file: !55, line: 641, baseType: !180, size: 64, offset: 384)
!9491 = !DIDerivedType(tag: DW_TAG_member, name: "opcontext", scope: !9454, file: !55, line: 643, baseType: !31, size: 16, offset: 448)
!9492 = !DILocation(line: 1949, column: 17, scope: !9451)
!9493 = !DILocation(line: 1949, column: 24, scope: !9451)
!9494 = !DILocation(line: 1949, column: 33, scope: !9451)
!9495 = !DILocation(line: 1949, column: 44, scope: !9451)
!9496 = !DILocation(line: 1950, column: 6, scope: !9451)
!9497 = !DILocation(line: 1950, column: 13, scope: !9498)
!9498 = distinct !DILexicalBlock(scope: !9499, file: !3, line: 1950, column: 6)
!9499 = distinct !DILexicalBlock(scope: !9451, file: !3, line: 1950, column: 6)
!9500 = !DILocation(line: 1950, column: 6, scope: !9499)
!9501 = !DILocation(line: 1952, column: 11, scope: !9502)
!9502 = distinct !DILexicalBlock(scope: !9503, file: !3, line: 1952, column: 11)
!9503 = distinct !DILexicalBlock(scope: !9498, file: !3, line: 1950, column: 38)
!9504 = !DILocation(line: 1952, column: 18, scope: !9502)
!9505 = !DILocation(line: 1952, column: 25, scope: !9502)
!9506 = !DILocation(line: 1952, column: 11, scope: !9503)
!9507 = !DILocalVariable(name: "lb", scope: !9508, file: !3, line: 1953, type: !401)
!9508 = distinct !DILexicalBlock(scope: !9502, file: !3, line: 1952, column: 47)
!9509 = !DILocation(line: 1953, column: 18, scope: !9508)
!9510 = !DILocation(line: 1953, column: 35, scope: !9508)
!9511 = !DILocation(line: 1953, column: 42, scope: !9508)
!9512 = !DILocation(line: 1953, column: 23, scope: !9508)
!9513 = !DILocalVariable(name: "drag", scope: !9508, file: !3, line: 1954, type: !9514)
!9514 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !9515, size: 64)
!9515 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmDrag", file: !55, line: 624, baseType: !9464)
!9516 = !DILocation(line: 1954, column: 16, scope: !9508)
!9517 = !DILocation(line: 1956, column: 20, scope: !9518)
!9518 = distinct !DILexicalBlock(scope: !9508, file: !3, line: 1956, column: 8)
!9519 = !DILocation(line: 1956, column: 24, scope: !9518)
!9520 = !DILocation(line: 1956, column: 18, scope: !9518)
!9521 = !DILocation(line: 1956, column: 13, scope: !9518)
!9522 = !DILocation(line: 1956, column: 31, scope: !9523)
!9523 = distinct !DILexicalBlock(scope: !9518, file: !3, line: 1956, column: 8)
!9524 = !DILocation(line: 1956, column: 8, scope: !9518)
!9525 = !DILocation(line: 1957, column: 13, scope: !9526)
!9526 = distinct !DILexicalBlock(scope: !9527, file: !3, line: 1957, column: 13)
!9527 = distinct !DILexicalBlock(scope: !9523, file: !3, line: 1956, column: 56)
!9528 = !DILocation(line: 1957, column: 19, scope: !9526)
!9529 = !DILocation(line: 1957, column: 24, scope: !9526)
!9530 = !DILocation(line: 1957, column: 27, scope: !9526)
!9531 = !DILocation(line: 1957, column: 33, scope: !9526)
!9532 = !DILocation(line: 1957, column: 13, scope: !9527)
!9533 = !DILocation(line: 1958, column: 10, scope: !9534)
!9534 = distinct !DILexicalBlock(scope: !9526, file: !3, line: 1957, column: 41)
!9535 = !DILocation(line: 1958, column: 16, scope: !9534)
!9536 = !DILocation(line: 1958, column: 21, scope: !9534)
!9537 = !DILocation(line: 1958, column: 27, scope: !9534)
!9538 = !DILocation(line: 1961, column: 28, scope: !9534)
!9539 = !DILocation(line: 1961, column: 10, scope: !9534)
!9540 = !DILocation(line: 1963, column: 10, scope: !9534)
!9541 = !DILocation(line: 1963, column: 17, scope: !9534)
!9542 = !DILocation(line: 1963, column: 28, scope: !9534)
!9543 = !DILocation(line: 1964, column: 10, scope: !9534)
!9544 = !DILocation(line: 1964, column: 17, scope: !9534)
!9545 = !DILocation(line: 1964, column: 24, scope: !9534)
!9546 = !DILocation(line: 1966, column: 32, scope: !9534)
!9547 = !DILocation(line: 1966, column: 35, scope: !9534)
!9548 = !DILocation(line: 1966, column: 41, scope: !9534)
!9549 = !DILocation(line: 1966, column: 45, scope: !9534)
!9550 = !DILocation(line: 1966, column: 53, scope: !9534)
!9551 = !DILocation(line: 1966, column: 59, scope: !9534)
!9552 = !DILocation(line: 1966, column: 70, scope: !9534)
!9553 = !DILocation(line: 1966, column: 76, scope: !9534)
!9554 = !DILocation(line: 1966, column: 10, scope: !9534)
!9555 = !DILocation(line: 1967, column: 17, scope: !9534)
!9556 = !DILocation(line: 1970, column: 28, scope: !9557)
!9557 = distinct !DILexicalBlock(scope: !9534, file: !3, line: 1970, column: 14)
!9558 = !DILocation(line: 1970, column: 14, scope: !9557)
!9559 = !DILocation(line: 1970, column: 31, scope: !9557)
!9560 = !DILocation(line: 1970, column: 14, scope: !9534)
!9561 = !DILocation(line: 1971, column: 18, scope: !9557)
!9562 = !DILocation(line: 1971, column: 11, scope: !9557)
!9563 = !DILocation(line: 1974, column: 10, scope: !9534)
!9564 = !DILocation(line: 1976, column: 8, scope: !9527)
!9565 = !DILocation(line: 1956, column: 44, scope: !9523)
!9566 = !DILocation(line: 1956, column: 50, scope: !9523)
!9567 = !DILocation(line: 1956, column: 42, scope: !9523)
!9568 = !DILocation(line: 1956, column: 8, scope: !9523)
!9569 = distinct !{!9569, !9524, !9570}
!9570 = !DILocation(line: 1976, column: 8, scope: !9518)
!9571 = !DILocation(line: 1977, column: 7, scope: !9508)
!9572 = !DILocation(line: 1978, column: 6, scope: !9503)
!9573 = !DILocation(line: 1950, column: 26, scope: !9498)
!9574 = !DILocation(line: 1950, column: 32, scope: !9498)
!9575 = !DILocation(line: 1950, column: 24, scope: !9498)
!9576 = !DILocation(line: 1950, column: 6, scope: !9498)
!9577 = distinct !{!9577, !9500, !9578}
!9578 = !DILocation(line: 1978, column: 6, scope: !9499)
!9579 = !DILocation(line: 1979, column: 5, scope: !9451)
!9580 = !DILocation(line: 1980, column: 4, scope: !9443)
!9581 = !DILocation(line: 1983, column: 40, scope: !9582)
!9582 = distinct !DILexicalBlock(scope: !9438, file: !3, line: 1981, column: 9)
!9583 = !DILocation(line: 1983, column: 43, scope: !9582)
!9584 = !DILocation(line: 1983, column: 53, scope: !9582)
!9585 = !DILocation(line: 1983, column: 62, scope: !9582)
!9586 = !DILocation(line: 1983, column: 15, scope: !9582)
!9587 = !DILocation(line: 1983, column: 12, scope: !9582)
!9588 = !DILocation(line: 1986, column: 8, scope: !9589)
!9589 = distinct !DILexicalBlock(scope: !9280, file: !3, line: 1986, column: 8)
!9590 = !DILocation(line: 1986, column: 15, scope: !9589)
!9591 = !DILocation(line: 1986, column: 8, scope: !9280)
!9592 = !DILocation(line: 1987, column: 9, scope: !9593)
!9593 = distinct !DILexicalBlock(scope: !9594, file: !3, line: 1987, column: 9)
!9594 = distinct !DILexicalBlock(scope: !9589, file: !3, line: 1986, column: 35)
!9595 = !DILocation(line: 1987, column: 9, scope: !9594)
!9596 = !DILocation(line: 1988, column: 13, scope: !9593)
!9597 = !DILocation(line: 1988, column: 6, scope: !9593)
!9598 = !DILocation(line: 1990, column: 6, scope: !9593)
!9599 = !DILocation(line: 1991, column: 4, scope: !9594)
!9600 = !DILocation(line: 1992, column: 3, scope: !9280)
!9601 = !DILocation(line: 1996, column: 21, scope: !9602)
!9602 = distinct !DILexicalBlock(scope: !9264, file: !3, line: 1996, column: 7)
!9603 = !DILocation(line: 1996, column: 7, scope: !9602)
!9604 = !DILocation(line: 1996, column: 24, scope: !9602)
!9605 = !DILocation(line: 1996, column: 7, scope: !9264)
!9606 = !DILocation(line: 1997, column: 11, scope: !9607)
!9607 = distinct !DILexicalBlock(scope: !9602, file: !3, line: 1996, column: 33)
!9608 = !DILocation(line: 1997, column: 4, scope: !9607)
!9609 = !DILocation(line: 2003, column: 21, scope: !9610)
!9610 = distinct !DILexicalBlock(scope: !9264, file: !3, line: 2003, column: 7)
!9611 = !DILocation(line: 2003, column: 31, scope: !9610)
!9612 = !DILocation(line: 2003, column: 7, scope: !9610)
!9613 = !DILocation(line: 2003, column: 40, scope: !9610)
!9614 = !DILocation(line: 2003, column: 7, scope: !9264)
!9615 = !DILocation(line: 2004, column: 8, scope: !9616)
!9616 = distinct !DILexicalBlock(scope: !9617, file: !3, line: 2004, column: 8)
!9617 = distinct !DILexicalBlock(scope: !9610, file: !3, line: 2003, column: 47)
!9618 = !DILocation(line: 2004, column: 17, scope: !9616)
!9619 = !DILocation(line: 2004, column: 22, scope: !9616)
!9620 = !DILocation(line: 2004, column: 8, scope: !9617)
!9621 = !DILocation(line: 2005, column: 17, scope: !9622)
!9622 = distinct !DILexicalBlock(scope: !9616, file: !3, line: 2004, column: 44)
!9623 = !DILocation(line: 2005, column: 27, scope: !9622)
!9624 = !DILocation(line: 2005, column: 5, scope: !9622)
!9625 = !DILocation(line: 2006, column: 27, scope: !9622)
!9626 = !DILocation(line: 2006, column: 5, scope: !9622)
!9627 = !DILocation(line: 2007, column: 4, scope: !9622)
!9628 = !DILocation(line: 2008, column: 3, scope: !9617)
!9629 = !DILocation(line: 2009, column: 2, scope: !9264)
!9630 = !DILocation(line: 1871, column: 72, scope: !9257)
!9631 = !DILocation(line: 1871, column: 70, scope: !9257)
!9632 = !DILocation(line: 1871, column: 2, scope: !9257)
!9633 = distinct !{!9633, !9262, !9634}
!9634 = !DILocation(line: 2009, column: 2, scope: !9252)
!9635 = !DILocation(line: 2011, column: 6, scope: !9636)
!9636 = distinct !DILexicalBlock(scope: !9225, file: !3, line: 2011, column: 6)
!9637 = !DILocation(line: 2011, column: 13, scope: !9636)
!9638 = !DILocation(line: 2011, column: 6, scope: !9225)
!9639 = !DILocation(line: 2012, column: 38, scope: !9636)
!9640 = !DILocation(line: 2012, column: 24, scope: !9636)
!9641 = !DILocation(line: 2012, column: 42, scope: !9636)
!9642 = !DILocation(line: 2012, column: 3, scope: !9636)
!9643 = !DILocation(line: 2016, column: 9, scope: !9225)
!9644 = !DILocation(line: 2016, column: 2, scope: !9225)
!9645 = !DILocation(line: 2017, column: 1, scope: !9225)
!9646 = distinct !DISubprogram(name: "wm_action_not_handled", scope: !3, file: !3, line: 1839, type: !4749, scopeLine: 1840, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!9647 = !DILocalVariable(name: "action", arg: 1, scope: !9646, file: !3, line: 1839, type: !34)
!9648 = !DILocation(line: 1839, column: 38, scope: !9646)
!9649 = !DILocation(line: 1841, column: 9, scope: !9646)
!9650 = !DILocation(line: 1841, column: 16, scope: !9646)
!9651 = !DILocation(line: 1841, column: 39, scope: !9646)
!9652 = !DILocation(line: 1841, column: 42, scope: !9646)
!9653 = !DILocation(line: 1841, column: 49, scope: !9646)
!9654 = !DILocation(line: 1841, column: 2, scope: !9646)
!9655 = distinct !DISubprogram(name: "handler_boundbox_test", scope: !3, file: !3, line: 1813, type: !9656, scopeLine: 1814, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!9656 = !DISubroutineType(types: !9657)
!9657 = !{!73, !2404, !2552}
!9658 = !DILocalVariable(name: "handler", arg: 1, scope: !9655, file: !3, line: 1813, type: !2404)
!9659 = !DILocation(line: 1813, column: 51, scope: !9655)
!9660 = !DILocalVariable(name: "event", arg: 2, scope: !9655, file: !3, line: 1813, type: !2552)
!9661 = !DILocation(line: 1813, column: 69, scope: !9655)
!9662 = !DILocation(line: 1815, column: 6, scope: !9663)
!9663 = distinct !DILexicalBlock(scope: !9655, file: !3, line: 1815, column: 6)
!9664 = !DILocation(line: 1815, column: 15, scope: !9663)
!9665 = !DILocation(line: 1815, column: 6, scope: !9655)
!9666 = !DILocation(line: 1816, column: 7, scope: !9667)
!9667 = distinct !DILexicalBlock(scope: !9668, file: !3, line: 1816, column: 7)
!9668 = distinct !DILexicalBlock(scope: !9663, file: !3, line: 1815, column: 22)
!9669 = !DILocation(line: 1816, column: 16, scope: !9667)
!9670 = !DILocation(line: 1816, column: 7, scope: !9668)
!9671 = !DILocalVariable(name: "rect", scope: !9672, file: !3, line: 1817, type: !1250)
!9672 = distinct !DILexicalBlock(scope: !9667, file: !3, line: 1816, column: 25)
!9673 = !DILocation(line: 1817, column: 9, scope: !9672)
!9674 = !DILocation(line: 1817, column: 17, scope: !9672)
!9675 = !DILocation(line: 1817, column: 26, scope: !9672)
!9676 = !DILocation(line: 1817, column: 16, scope: !9672)
!9677 = !DILocation(line: 1818, column: 30, scope: !9672)
!9678 = !DILocation(line: 1818, column: 39, scope: !9672)
!9679 = !DILocation(line: 1818, column: 46, scope: !9672)
!9680 = !DILocation(line: 1818, column: 52, scope: !9672)
!9681 = !DILocation(line: 1818, column: 61, scope: !9672)
!9682 = !DILocation(line: 1818, column: 68, scope: !9672)
!9683 = !DILocation(line: 1818, column: 4, scope: !9672)
!9684 = !DILocation(line: 1820, column: 36, scope: !9685)
!9685 = distinct !DILexicalBlock(scope: !9672, file: !3, line: 1820, column: 8)
!9686 = !DILocation(line: 1820, column: 43, scope: !9685)
!9687 = !DILocation(line: 1820, column: 8, scope: !9685)
!9688 = !DILocation(line: 1820, column: 8, scope: !9672)
!9689 = !DILocation(line: 1821, column: 5, scope: !9685)
!9690 = !DILocation(line: 1822, column: 13, scope: !9691)
!9691 = distinct !DILexicalBlock(scope: !9685, file: !3, line: 1822, column: 13)
!9692 = !DILocation(line: 1822, column: 20, scope: !9691)
!9693 = !DILocation(line: 1822, column: 25, scope: !9691)
!9694 = !DILocation(line: 1822, column: 38, scope: !9691)
!9695 = !DILocation(line: 1822, column: 69, scope: !9691)
!9696 = !DILocation(line: 1822, column: 76, scope: !9691)
!9697 = !DILocation(line: 1822, column: 41, scope: !9691)
!9698 = !DILocation(line: 1822, column: 13, scope: !9685)
!9699 = !DILocation(line: 1823, column: 5, scope: !9691)
!9700 = !DILocation(line: 1825, column: 5, scope: !9691)
!9701 = !DILocation(line: 1828, column: 28, scope: !9702)
!9702 = distinct !DILexicalBlock(scope: !9703, file: !3, line: 1828, column: 8)
!9703 = distinct !DILexicalBlock(scope: !9667, file: !3, line: 1827, column: 8)
!9704 = !DILocation(line: 1828, column: 37, scope: !9702)
!9705 = !DILocation(line: 1828, column: 45, scope: !9702)
!9706 = !DILocation(line: 1828, column: 52, scope: !9702)
!9707 = !DILocation(line: 1828, column: 8, scope: !9702)
!9708 = !DILocation(line: 1828, column: 8, scope: !9703)
!9709 = !DILocation(line: 1829, column: 5, scope: !9702)
!9710 = !DILocation(line: 1830, column: 13, scope: !9711)
!9711 = distinct !DILexicalBlock(scope: !9702, file: !3, line: 1830, column: 13)
!9712 = !DILocation(line: 1830, column: 20, scope: !9711)
!9713 = !DILocation(line: 1830, column: 25, scope: !9711)
!9714 = !DILocation(line: 1830, column: 38, scope: !9711)
!9715 = !DILocation(line: 1830, column: 61, scope: !9711)
!9716 = !DILocation(line: 1830, column: 70, scope: !9711)
!9717 = !DILocation(line: 1830, column: 78, scope: !9711)
!9718 = !DILocation(line: 1830, column: 85, scope: !9711)
!9719 = !DILocation(line: 1830, column: 41, scope: !9711)
!9720 = !DILocation(line: 1830, column: 13, scope: !9702)
!9721 = !DILocation(line: 1831, column: 5, scope: !9711)
!9722 = !DILocation(line: 1833, column: 5, scope: !9711)
!9723 = !DILocation(line: 1836, column: 2, scope: !9655)
!9724 = !DILocation(line: 1837, column: 1, scope: !9655)
!9725 = distinct !DISubprogram(name: "wm_event_always_pass", scope: !3, file: !3, line: 385, type: !9726, scopeLine: 386, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!9726 = !DISubroutineType(types: !9727)
!9727 = !{!34, !2552}
!9728 = !DILocalVariable(name: "event", arg: 1, scope: !9725, file: !3, line: 385, type: !2552)
!9729 = !DILocation(line: 385, column: 42, scope: !9725)
!9730 = !DILocation(line: 388, column: 9, scope: !9725)
!9731 = !DILocation(line: 388, column: 30, scope: !9725)
!9732 = !DILocation(line: 388, column: 34, scope: !9725)
!9733 = !DILocation(line: 388, column: 41, scope: !9725)
!9734 = !DILocation(line: 388, column: 46, scope: !9725)
!9735 = !DILocation(line: 388, column: 64, scope: !9725)
!9736 = !DILocation(line: 388, column: 68, scope: !9725)
!9737 = !DILocation(line: 388, column: 75, scope: !9725)
!9738 = !DILocation(line: 388, column: 80, scope: !9725)
!9739 = !DILocation(line: 388, column: 2, scope: !9725)
!9740 = distinct !DISubprogram(name: "wm_eventmatch", scope: !3, file: !3, line: 1444, type: !9741, scopeLine: 1445, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!9741 = !DISubroutineType(types: !9742)
!9742 = !{!34, !2552, !9302}
!9743 = !DILocalVariable(name: "winevent", arg: 1, scope: !9740, file: !3, line: 1444, type: !2552)
!9744 = !DILocation(line: 1444, column: 35, scope: !9740)
!9745 = !DILocalVariable(name: "kmi", arg: 2, scope: !9740, file: !3, line: 1444, type: !9302)
!9746 = !DILocation(line: 1444, column: 59, scope: !9740)
!9747 = !DILocalVariable(name: "kmitype", scope: !9740, file: !3, line: 1446, type: !34)
!9748 = !DILocation(line: 1446, column: 6, scope: !9740)
!9749 = !DILocation(line: 1446, column: 37, scope: !9740)
!9750 = !DILocation(line: 1446, column: 42, scope: !9740)
!9751 = !DILocation(line: 1446, column: 16, scope: !9740)
!9752 = !DILocation(line: 1448, column: 6, scope: !9753)
!9753 = distinct !DILexicalBlock(scope: !9740, file: !3, line: 1448, column: 6)
!9754 = !DILocation(line: 1448, column: 11, scope: !9753)
!9755 = !DILocation(line: 1448, column: 16, scope: !9753)
!9756 = !DILocation(line: 1448, column: 6, scope: !9740)
!9757 = !DILocation(line: 1448, column: 32, scope: !9753)
!9758 = !DILocation(line: 1451, column: 6, scope: !9759)
!9759 = distinct !DILexicalBlock(scope: !9740, file: !3, line: 1451, column: 6)
!9760 = !DILocation(line: 1451, column: 14, scope: !9759)
!9761 = !DILocation(line: 1451, column: 6, scope: !9740)
!9762 = !DILocation(line: 1452, column: 7, scope: !9763)
!9763 = distinct !DILexicalBlock(scope: !9759, file: !3, line: 1452, column: 7)
!9764 = !DILocation(line: 1452, column: 17, scope: !9763)
!9765 = !DILocation(line: 1452, column: 21, scope: !9763)
!9766 = !DILocation(line: 1452, column: 7, scope: !9759)
!9767 = !DILocation(line: 1455, column: 8, scope: !9768)
!9768 = distinct !DILexicalBlock(scope: !9769, file: !3, line: 1455, column: 8)
!9769 = distinct !DILexicalBlock(scope: !9763, file: !3, line: 1452, column: 34)
!9770 = !DILocation(line: 1455, column: 35, scope: !9768)
!9771 = !DILocation(line: 1455, column: 39, scope: !9768)
!9772 = !DILocation(line: 1455, column: 49, scope: !9768)
!9773 = !DILocation(line: 1455, column: 55, scope: !9768)
!9774 = !DILocation(line: 1455, column: 58, scope: !9768)
!9775 = !DILocation(line: 1455, column: 68, scope: !9768)
!9776 = !DILocation(line: 1455, column: 8, scope: !9769)
!9777 = !DILocation(line: 1455, column: 82, scope: !9768)
!9778 = !DILocation(line: 1456, column: 3, scope: !9769)
!9779 = !DILocation(line: 1452, column: 24, scope: !9763)
!9780 = !DILocation(line: 1458, column: 6, scope: !9781)
!9781 = distinct !DILexicalBlock(scope: !9740, file: !3, line: 1458, column: 6)
!9782 = !DILocation(line: 1458, column: 14, scope: !9781)
!9783 = !DILocation(line: 1458, column: 6, scope: !9740)
!9784 = !DILocation(line: 1459, column: 7, scope: !9785)
!9785 = distinct !DILexicalBlock(scope: !9781, file: !3, line: 1459, column: 7)
!9786 = !DILocation(line: 1459, column: 17, scope: !9785)
!9787 = !DILocation(line: 1459, column: 25, scope: !9785)
!9788 = !DILocation(line: 1459, column: 22, scope: !9785)
!9789 = !DILocation(line: 1459, column: 7, scope: !9781)
!9790 = !DILocation(line: 1459, column: 34, scope: !9785)
!9791 = !DILocation(line: 1461, column: 6, scope: !9792)
!9792 = distinct !DILexicalBlock(scope: !9740, file: !3, line: 1461, column: 6)
!9793 = !DILocation(line: 1461, column: 11, scope: !9792)
!9794 = !DILocation(line: 1461, column: 15, scope: !9792)
!9795 = !DILocation(line: 1461, column: 6, scope: !9740)
!9796 = !DILocation(line: 1462, column: 7, scope: !9797)
!9797 = distinct !DILexicalBlock(scope: !9792, file: !3, line: 1462, column: 7)
!9798 = !DILocation(line: 1462, column: 17, scope: !9797)
!9799 = !DILocation(line: 1462, column: 24, scope: !9797)
!9800 = !DILocation(line: 1462, column: 29, scope: !9797)
!9801 = !DILocation(line: 1462, column: 21, scope: !9797)
!9802 = !DILocation(line: 1462, column: 7, scope: !9792)
!9803 = !DILocation(line: 1462, column: 34, scope: !9797)
!9804 = !DILocation(line: 1465, column: 6, scope: !9805)
!9805 = distinct !DILexicalBlock(scope: !9740, file: !3, line: 1465, column: 6)
!9806 = !DILocation(line: 1465, column: 11, scope: !9805)
!9807 = !DILocation(line: 1465, column: 17, scope: !9805)
!9808 = !DILocation(line: 1465, column: 6, scope: !9740)
!9809 = !DILocation(line: 1466, column: 7, scope: !9810)
!9810 = distinct !DILexicalBlock(scope: !9805, file: !3, line: 1466, column: 7)
!9811 = !DILocation(line: 1466, column: 17, scope: !9810)
!9812 = !DILocation(line: 1466, column: 26, scope: !9810)
!9813 = !DILocation(line: 1466, column: 31, scope: !9810)
!9814 = !DILocation(line: 1466, column: 23, scope: !9810)
!9815 = !DILocation(line: 1466, column: 37, scope: !9810)
!9816 = !DILocation(line: 1466, column: 42, scope: !9810)
!9817 = !DILocation(line: 1466, column: 52, scope: !9810)
!9818 = !DILocation(line: 1466, column: 60, scope: !9810)
!9819 = !DILocation(line: 1466, column: 65, scope: !9810)
!9820 = !DILocation(line: 1466, column: 58, scope: !9810)
!9821 = !DILocation(line: 1466, column: 7, scope: !9805)
!9822 = !DILocation(line: 1466, column: 73, scope: !9810)
!9823 = !DILocation(line: 1466, column: 70, scope: !9810)
!9824 = !DILocation(line: 1467, column: 6, scope: !9825)
!9825 = distinct !DILexicalBlock(scope: !9740, file: !3, line: 1467, column: 6)
!9826 = !DILocation(line: 1467, column: 11, scope: !9825)
!9827 = !DILocation(line: 1467, column: 16, scope: !9825)
!9828 = !DILocation(line: 1467, column: 6, scope: !9740)
!9829 = !DILocation(line: 1468, column: 7, scope: !9830)
!9830 = distinct !DILexicalBlock(scope: !9825, file: !3, line: 1468, column: 7)
!9831 = !DILocation(line: 1468, column: 17, scope: !9830)
!9832 = !DILocation(line: 1468, column: 25, scope: !9830)
!9833 = !DILocation(line: 1468, column: 30, scope: !9830)
!9834 = !DILocation(line: 1468, column: 22, scope: !9830)
!9835 = !DILocation(line: 1468, column: 35, scope: !9830)
!9836 = !DILocation(line: 1468, column: 40, scope: !9830)
!9837 = !DILocation(line: 1468, column: 50, scope: !9830)
!9838 = !DILocation(line: 1468, column: 57, scope: !9830)
!9839 = !DILocation(line: 1468, column: 62, scope: !9830)
!9840 = !DILocation(line: 1468, column: 55, scope: !9830)
!9841 = !DILocation(line: 1468, column: 7, scope: !9825)
!9842 = !DILocation(line: 1468, column: 69, scope: !9830)
!9843 = !DILocation(line: 1468, column: 66, scope: !9830)
!9844 = !DILocation(line: 1469, column: 6, scope: !9845)
!9845 = distinct !DILexicalBlock(scope: !9740, file: !3, line: 1469, column: 6)
!9846 = !DILocation(line: 1469, column: 11, scope: !9845)
!9847 = !DILocation(line: 1469, column: 15, scope: !9845)
!9848 = !DILocation(line: 1469, column: 6, scope: !9740)
!9849 = !DILocation(line: 1470, column: 7, scope: !9850)
!9850 = distinct !DILexicalBlock(scope: !9845, file: !3, line: 1470, column: 7)
!9851 = !DILocation(line: 1470, column: 17, scope: !9850)
!9852 = !DILocation(line: 1470, column: 24, scope: !9850)
!9853 = !DILocation(line: 1470, column: 29, scope: !9850)
!9854 = !DILocation(line: 1470, column: 21, scope: !9850)
!9855 = !DILocation(line: 1470, column: 33, scope: !9850)
!9856 = !DILocation(line: 1470, column: 38, scope: !9850)
!9857 = !DILocation(line: 1470, column: 48, scope: !9850)
!9858 = !DILocation(line: 1470, column: 54, scope: !9850)
!9859 = !DILocation(line: 1470, column: 59, scope: !9850)
!9860 = !DILocation(line: 1470, column: 52, scope: !9850)
!9861 = !DILocation(line: 1470, column: 7, scope: !9845)
!9862 = !DILocation(line: 1470, column: 65, scope: !9850)
!9863 = !DILocation(line: 1470, column: 62, scope: !9850)
!9864 = !DILocation(line: 1471, column: 6, scope: !9865)
!9865 = distinct !DILexicalBlock(scope: !9740, file: !3, line: 1471, column: 6)
!9866 = !DILocation(line: 1471, column: 11, scope: !9865)
!9867 = !DILocation(line: 1471, column: 17, scope: !9865)
!9868 = !DILocation(line: 1471, column: 6, scope: !9740)
!9869 = !DILocation(line: 1472, column: 7, scope: !9870)
!9870 = distinct !DILexicalBlock(scope: !9865, file: !3, line: 1472, column: 7)
!9871 = !DILocation(line: 1472, column: 17, scope: !9870)
!9872 = !DILocation(line: 1472, column: 26, scope: !9870)
!9873 = !DILocation(line: 1472, column: 31, scope: !9870)
!9874 = !DILocation(line: 1472, column: 23, scope: !9870)
!9875 = !DILocation(line: 1472, column: 37, scope: !9870)
!9876 = !DILocation(line: 1472, column: 42, scope: !9870)
!9877 = !DILocation(line: 1472, column: 52, scope: !9870)
!9878 = !DILocation(line: 1472, column: 60, scope: !9870)
!9879 = !DILocation(line: 1472, column: 65, scope: !9870)
!9880 = !DILocation(line: 1472, column: 58, scope: !9870)
!9881 = !DILocation(line: 1472, column: 7, scope: !9865)
!9882 = !DILocation(line: 1472, column: 73, scope: !9870)
!9883 = !DILocation(line: 1472, column: 70, scope: !9870)
!9884 = !DILocation(line: 1476, column: 6, scope: !9885)
!9885 = distinct !DILexicalBlock(scope: !9740, file: !3, line: 1476, column: 6)
!9886 = !DILocation(line: 1476, column: 11, scope: !9885)
!9887 = !DILocation(line: 1476, column: 6, scope: !9740)
!9888 = !DILocation(line: 1477, column: 7, scope: !9889)
!9889 = distinct !DILexicalBlock(scope: !9885, file: !3, line: 1477, column: 7)
!9890 = !DILocation(line: 1477, column: 17, scope: !9889)
!9891 = !DILocation(line: 1477, column: 32, scope: !9889)
!9892 = !DILocation(line: 1477, column: 37, scope: !9889)
!9893 = !DILocation(line: 1477, column: 29, scope: !9889)
!9894 = !DILocation(line: 1477, column: 7, scope: !9885)
!9895 = !DILocation(line: 1477, column: 50, scope: !9889)
!9896 = !DILocation(line: 1479, column: 2, scope: !9740)
!9897 = !DILocation(line: 1480, column: 1, scope: !9740)
!9898 = distinct !DISubprogram(name: "wm_handler_operator_call", scope: !3, file: !3, line: 1549, type: !9899, scopeLine: 1551, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!9899 = !DISubroutineType(types: !9900)
!9900 = !{!34, !2402, !401, !2404, !2552, !1580}
!9901 = !DILocalVariable(name: "C", arg: 1, scope: !9898, file: !3, line: 1549, type: !2402)
!9902 = !DILocation(line: 1549, column: 47, scope: !9898)
!9903 = !DILocalVariable(name: "handlers", arg: 2, scope: !9898, file: !3, line: 1549, type: !401)
!9904 = !DILocation(line: 1549, column: 60, scope: !9898)
!9905 = !DILocalVariable(name: "handler", arg: 3, scope: !9898, file: !3, line: 1549, type: !2404)
!9906 = !DILocation(line: 1549, column: 86, scope: !9898)
!9907 = !DILocalVariable(name: "event", arg: 4, scope: !9898, file: !3, line: 1550, type: !2552)
!9908 = !DILocation(line: 1550, column: 46, scope: !9898)
!9909 = !DILocalVariable(name: "properties", arg: 5, scope: !9898, file: !3, line: 1550, type: !1580)
!9910 = !DILocation(line: 1550, column: 65, scope: !9898)
!9911 = !DILocalVariable(name: "retval", scope: !9898, file: !3, line: 1552, type: !34)
!9912 = !DILocation(line: 1552, column: 6, scope: !9898)
!9913 = !DILocation(line: 1555, column: 6, scope: !9914)
!9914 = distinct !DILexicalBlock(scope: !9898, file: !3, line: 1555, column: 6)
!9915 = !DILocation(line: 1555, column: 15, scope: !9914)
!9916 = !DILocation(line: 1555, column: 6, scope: !9898)
!9917 = !DILocalVariable(name: "op", scope: !9918, file: !3, line: 1556, type: !6)
!9918 = distinct !DILexicalBlock(scope: !9914, file: !3, line: 1555, column: 19)
!9919 = !DILocation(line: 1556, column: 15, scope: !9918)
!9920 = !DILocation(line: 1556, column: 20, scope: !9918)
!9921 = !DILocation(line: 1556, column: 29, scope: !9918)
!9922 = !DILocalVariable(name: "ot", scope: !9918, file: !3, line: 1557, type: !1578)
!9923 = !DILocation(line: 1557, column: 19, scope: !9918)
!9924 = !DILocation(line: 1557, column: 24, scope: !9918)
!9925 = !DILocation(line: 1557, column: 28, scope: !9918)
!9926 = !DILocation(line: 1559, column: 43, scope: !9927)
!9927 = distinct !DILexicalBlock(scope: !9918, file: !3, line: 1559, column: 7)
!9928 = !DILocation(line: 1559, column: 46, scope: !9927)
!9929 = !DILocation(line: 1559, column: 8, scope: !9927)
!9930 = !DILocation(line: 1559, column: 7, scope: !9918)
!9931 = !DILocation(line: 1563, column: 3, scope: !9932)
!9932 = distinct !DILexicalBlock(scope: !9927, file: !3, line: 1559, column: 51)
!9933 = !DILocation(line: 1564, column: 12, scope: !9934)
!9934 = distinct !DILexicalBlock(scope: !9927, file: !3, line: 1564, column: 12)
!9935 = !DILocation(line: 1564, column: 16, scope: !9934)
!9936 = !DILocation(line: 1564, column: 12, scope: !9927)
!9937 = !DILocalVariable(name: "wm", scope: !9938, file: !3, line: 1566, type: !1543)
!9938 = distinct !DILexicalBlock(scope: !9934, file: !3, line: 1564, column: 23)
!9939 = !DILocation(line: 1566, column: 21, scope: !9938)
!9940 = !DILocation(line: 1566, column: 41, scope: !9938)
!9941 = !DILocation(line: 1566, column: 26, scope: !9938)
!9942 = !DILocalVariable(name: "area", scope: !9938, file: !3, line: 1567, type: !2201)
!9943 = !DILocation(line: 1567, column: 13, scope: !9938)
!9944 = !DILocation(line: 1567, column: 32, scope: !9938)
!9945 = !DILocation(line: 1567, column: 20, scope: !9938)
!9946 = !DILocalVariable(name: "region", scope: !9938, file: !3, line: 1568, type: !2737)
!9947 = !DILocation(line: 1568, column: 13, scope: !9938)
!9948 = !DILocation(line: 1568, column: 36, scope: !9938)
!9949 = !DILocation(line: 1568, column: 22, scope: !9938)
!9950 = !DILocalVariable(name: "dbl_click_disabled", scope: !9938, file: !3, line: 1569, type: !73)
!9951 = !DILocation(line: 1569, column: 9, scope: !9938)
!9952 = !DILocation(line: 1571, column: 26, scope: !9938)
!9953 = !DILocation(line: 1571, column: 29, scope: !9938)
!9954 = !DILocation(line: 1571, column: 4, scope: !9938)
!9955 = !DILocation(line: 1572, column: 23, scope: !9938)
!9956 = !DILocation(line: 1572, column: 26, scope: !9938)
!9957 = !DILocation(line: 1572, column: 4, scope: !9938)
!9958 = !DILocation(line: 1573, column: 25, scope: !9938)
!9959 = !DILocation(line: 1573, column: 28, scope: !9938)
!9960 = !DILocation(line: 1573, column: 32, scope: !9938)
!9961 = !DILocation(line: 1573, column: 4, scope: !9938)
!9962 = !DILocation(line: 1575, column: 8, scope: !9963)
!9963 = distinct !DILexicalBlock(scope: !9938, file: !3, line: 1575, column: 8)
!9964 = !DILocation(line: 1575, column: 12, scope: !9963)
!9965 = !DILocation(line: 1575, column: 17, scope: !9963)
!9966 = !DILocation(line: 1575, column: 8, scope: !9938)
!9967 = !DILocation(line: 1576, column: 5, scope: !9963)
!9968 = !DILocation(line: 1576, column: 9, scope: !9963)
!9969 = !DILocation(line: 1576, column: 22, scope: !9963)
!9970 = !DILocation(line: 1579, column: 13, scope: !9938)
!9971 = !DILocation(line: 1579, column: 17, scope: !9938)
!9972 = !DILocation(line: 1579, column: 23, scope: !9938)
!9973 = !DILocation(line: 1579, column: 26, scope: !9938)
!9974 = !DILocation(line: 1579, column: 30, scope: !9938)
!9975 = !DILocation(line: 1579, column: 11, scope: !9938)
!9976 = !DILocation(line: 1580, column: 4, scope: !9938)
!9977 = !DILocation(line: 1585, column: 23, scope: !9978)
!9978 = distinct !DILexicalBlock(scope: !9938, file: !3, line: 1585, column: 8)
!9979 = !DILocation(line: 1585, column: 8, scope: !9978)
!9980 = !DILocation(line: 1585, column: 29, scope: !9978)
!9981 = !DILocation(line: 1585, column: 26, scope: !9978)
!9982 = !DILocation(line: 1585, column: 8, scope: !9938)
!9983 = !DILocation(line: 1587, column: 27, scope: !9984)
!9984 = distinct !DILexicalBlock(scope: !9978, file: !3, line: 1585, column: 33)
!9985 = !DILocation(line: 1587, column: 34, scope: !9984)
!9986 = !DILocation(line: 1587, column: 5, scope: !9984)
!9987 = !DILocation(line: 1589, column: 9, scope: !9988)
!9988 = distinct !DILexicalBlock(scope: !9984, file: !3, line: 1589, column: 9)
!9989 = !DILocation(line: 1589, column: 13, scope: !9988)
!9990 = !DILocation(line: 1589, column: 18, scope: !9988)
!9991 = !DILocation(line: 1589, column: 9, scope: !9984)
!9992 = !DILocation(line: 1590, column: 6, scope: !9988)
!9993 = !DILocation(line: 1590, column: 10, scope: !9988)
!9994 = !DILocation(line: 1590, column: 23, scope: !9988)
!9995 = !DILocation(line: 1592, column: 9, scope: !9996)
!9996 = distinct !DILexicalBlock(scope: !9984, file: !3, line: 1592, column: 9)
!9997 = !DILocation(line: 1592, column: 16, scope: !9996)
!9998 = !DILocation(line: 1592, column: 9, scope: !9984)
!9999 = !DILocation(line: 1593, column: 26, scope: !9996)
!10000 = !DILocation(line: 1593, column: 29, scope: !9996)
!10001 = !DILocation(line: 1593, column: 33, scope: !9996)
!10002 = !DILocation(line: 1593, column: 6, scope: !9996)
!10003 = !DILocation(line: 1596, column: 9, scope: !10004)
!10004 = distinct !DILexicalBlock(scope: !9984, file: !3, line: 1596, column: 9)
!10005 = !DILocation(line: 1596, column: 16, scope: !10004)
!10006 = !DILocation(line: 1596, column: 9, scope: !9984)
!10007 = !DILocation(line: 1597, column: 27, scope: !10008)
!10008 = distinct !DILexicalBlock(scope: !10004, file: !3, line: 1596, column: 37)
!10009 = !DILocation(line: 1597, column: 30, scope: !10008)
!10010 = !DILocation(line: 1597, column: 6, scope: !10008)
!10011 = !DILocation(line: 1598, column: 6, scope: !10008)
!10012 = !DILocation(line: 1598, column: 15, scope: !10008)
!10013 = !DILocation(line: 1598, column: 18, scope: !10008)
!10014 = !DILocation(line: 1599, column: 5, scope: !10008)
!10015 = !DILocation(line: 1600, column: 14, scope: !10016)
!10016 = distinct !DILexicalBlock(scope: !10004, file: !3, line: 1600, column: 14)
!10017 = !DILocation(line: 1600, column: 21, scope: !10016)
!10018 = !DILocation(line: 1600, column: 14, scope: !10004)
!10019 = !DILocation(line: 1601, column: 23, scope: !10020)
!10020 = distinct !DILexicalBlock(scope: !10016, file: !3, line: 1600, column: 65)
!10021 = !DILocation(line: 1601, column: 6, scope: !10020)
!10022 = !DILocation(line: 1602, column: 6, scope: !10020)
!10023 = !DILocation(line: 1602, column: 15, scope: !10020)
!10024 = !DILocation(line: 1602, column: 18, scope: !10020)
!10025 = !DILocation(line: 1603, column: 5, scope: !10020)
!10026 = !DILocation(line: 1606, column: 10, scope: !10027)
!10027 = distinct !DILexicalBlock(scope: !9984, file: !3, line: 1606, column: 9)
!10028 = !DILocation(line: 1606, column: 17, scope: !10027)
!10029 = !DILocation(line: 1606, column: 42, scope: !10027)
!10030 = !DILocation(line: 1606, column: 66, scope: !10027)
!10031 = !DILocation(line: 1606, column: 45, scope: !10027)
!10032 = !DILocation(line: 1606, column: 9, scope: !9984)
!10033 = !DILocation(line: 1607, column: 22, scope: !10034)
!10034 = distinct !DILexicalBlock(scope: !10027, file: !3, line: 1606, column: 74)
!10035 = !DILocation(line: 1607, column: 25, scope: !10034)
!10036 = !DILocation(line: 1607, column: 6, scope: !10034)
!10037 = !DILocation(line: 1608, column: 24, scope: !10034)
!10038 = !DILocation(line: 1608, column: 27, scope: !10034)
!10039 = !DILocation(line: 1608, column: 6, scope: !10034)
!10040 = !DILocation(line: 1609, column: 5, scope: !10034)
!10041 = !DILocation(line: 1612, column: 22, scope: !10042)
!10042 = distinct !DILexicalBlock(scope: !10027, file: !3, line: 1610, column: 10)
!10043 = !DILocation(line: 1612, column: 6, scope: !10042)
!10044 = !DILocation(line: 1613, column: 24, scope: !10042)
!10045 = !DILocation(line: 1613, column: 6, scope: !10042)
!10046 = !DILocation(line: 1617, column: 9, scope: !10047)
!10047 = distinct !DILexicalBlock(scope: !9984, file: !3, line: 1617, column: 9)
!10048 = !DILocation(line: 1617, column: 16, scope: !10047)
!10049 = !DILocation(line: 1617, column: 9, scope: !9984)
!10050 = !DILocation(line: 1618, column: 43, scope: !10051)
!10051 = distinct !DILexicalBlock(scope: !10047, file: !3, line: 1617, column: 60)
!10052 = !DILocation(line: 1618, column: 29, scope: !10051)
!10053 = !DILocation(line: 1618, column: 6, scope: !10051)
!10054 = !DILocation(line: 1620, column: 18, scope: !10051)
!10055 = !DILocation(line: 1620, column: 28, scope: !10051)
!10056 = !DILocation(line: 1620, column: 6, scope: !10051)
!10057 = !DILocation(line: 1621, column: 28, scope: !10051)
!10058 = !DILocation(line: 1621, column: 6, scope: !10051)
!10059 = !DILocation(line: 1625, column: 5, scope: !10051)
!10060 = !DILocation(line: 1626, column: 4, scope: !9984)
!10061 = !DILocation(line: 1628, column: 3, scope: !9938)
!10062 = !DILocation(line: 1630, column: 55, scope: !10063)
!10063 = distinct !DILexicalBlock(scope: !9934, file: !3, line: 1629, column: 8)
!10064 = !DILocation(line: 1630, column: 59, scope: !10063)
!10065 = !DILocation(line: 1630, column: 4, scope: !10063)
!10066 = !DILocation(line: 1632, column: 2, scope: !9918)
!10067 = !DILocalVariable(name: "ot", scope: !10068, file: !3, line: 1634, type: !1578)
!10068 = distinct !DILexicalBlock(scope: !9914, file: !3, line: 1633, column: 7)
!10069 = !DILocation(line: 1634, column: 19, scope: !10068)
!10070 = !DILocation(line: 1634, column: 45, scope: !10068)
!10071 = !DILocation(line: 1634, column: 52, scope: !10068)
!10072 = !DILocation(line: 1634, column: 24, scope: !10068)
!10073 = !DILocation(line: 1636, column: 7, scope: !10074)
!10074 = distinct !DILexicalBlock(scope: !10068, file: !3, line: 1636, column: 7)
!10075 = !DILocation(line: 1636, column: 7, scope: !10068)
!10076 = !DILocation(line: 1637, column: 43, scope: !10077)
!10077 = distinct !DILexicalBlock(scope: !10078, file: !3, line: 1637, column: 8)
!10078 = distinct !DILexicalBlock(scope: !10074, file: !3, line: 1636, column: 11)
!10079 = !DILocation(line: 1637, column: 46, scope: !10077)
!10080 = !DILocation(line: 1637, column: 8, scope: !10077)
!10081 = !DILocation(line: 1637, column: 8, scope: !10078)
!10082 = !DILocation(line: 1638, column: 33, scope: !10083)
!10083 = distinct !DILexicalBlock(scope: !10077, file: !3, line: 1637, column: 51)
!10084 = !DILocation(line: 1638, column: 36, scope: !10083)
!10085 = !DILocation(line: 1638, column: 40, scope: !10083)
!10086 = !DILocation(line: 1638, column: 47, scope: !10083)
!10087 = !DILocation(line: 1638, column: 14, scope: !10083)
!10088 = !DILocation(line: 1638, column: 12, scope: !10083)
!10089 = !DILocation(line: 1639, column: 4, scope: !10083)
!10090 = !DILocation(line: 1640, column: 3, scope: !10078)
!10091 = !DILocation(line: 1645, column: 6, scope: !10092)
!10092 = distinct !DILexicalBlock(scope: !9898, file: !3, line: 1645, column: 6)
!10093 = !DILocation(line: 1645, column: 13, scope: !10092)
!10094 = !DILocation(line: 1645, column: 6, scope: !9898)
!10095 = !DILocation(line: 1646, column: 3, scope: !10092)
!10096 = !DILocation(line: 1649, column: 6, scope: !10097)
!10097 = distinct !DILexicalBlock(scope: !9898, file: !3, line: 1649, column: 6)
!10098 = !DILocation(line: 1649, column: 13, scope: !10097)
!10099 = !DILocation(line: 1649, column: 6, scope: !9898)
!10100 = !DILocation(line: 1650, column: 3, scope: !10097)
!10101 = !DILocation(line: 1652, column: 6, scope: !10102)
!10102 = distinct !DILexicalBlock(scope: !9898, file: !3, line: 1652, column: 6)
!10103 = !DILocation(line: 1652, column: 13, scope: !10102)
!10104 = !DILocation(line: 1652, column: 6, scope: !9898)
!10105 = !DILocation(line: 1653, column: 3, scope: !10102)
!10106 = !DILocation(line: 1655, column: 2, scope: !9898)
!10107 = !DILocation(line: 1656, column: 1, scope: !9898)
!10108 = !DILocalVariable(name: "C", arg: 1, scope: !2399, file: !3, line: 393, type: !2402)
!10109 = !DILocation(line: 393, column: 41, scope: !2399)
!10110 = !DILocalVariable(name: "handler", arg: 2, scope: !2399, file: !3, line: 393, type: !2404)
!10111 = !DILocation(line: 393, column: 60, scope: !2399)
!10112 = !DILocalVariable(name: "event", arg: 3, scope: !2399, file: !3, line: 393, type: !2552)
!10113 = !DILocation(line: 393, column: 78, scope: !2399)
!10114 = !DILocalVariable(name: "always_pass", arg: 4, scope: !2399, file: !3, line: 393, type: !34)
!10115 = !DILocation(line: 393, column: 89, scope: !2399)
!10116 = !DILocalVariable(name: "area", scope: !2399, file: !3, line: 395, type: !2201)
!10117 = !DILocation(line: 395, column: 11, scope: !2399)
!10118 = !DILocation(line: 395, column: 30, scope: !2399)
!10119 = !DILocation(line: 395, column: 18, scope: !2399)
!10120 = !DILocalVariable(name: "region", scope: !2399, file: !3, line: 396, type: !2737)
!10121 = !DILocation(line: 396, column: 11, scope: !2399)
!10122 = !DILocation(line: 396, column: 34, scope: !2399)
!10123 = !DILocation(line: 396, column: 20, scope: !2399)
!10124 = !DILocalVariable(name: "menu", scope: !2399, file: !3, line: 397, type: !2737)
!10125 = !DILocation(line: 397, column: 11, scope: !2399)
!10126 = !DILocation(line: 397, column: 30, scope: !2399)
!10127 = !DILocation(line: 397, column: 18, scope: !2399)
!10128 = !DILocalVariable(name: "is_wheel", scope: !2399, file: !3, line: 399, type: !3587)
!10129 = !DILocation(line: 399, column: 13, scope: !2399)
!10130 = !DILocation(line: 399, column: 24, scope: !2399)
!10131 = !DILocalVariable(name: "retval", scope: !2399, file: !3, line: 400, type: !34)
!10132 = !DILocation(line: 400, column: 6, scope: !2399)
!10133 = !DILocation(line: 404, column: 8, scope: !10134)
!10134 = distinct !DILexicalBlock(scope: !2399, file: !3, line: 404, column: 6)
!10135 = !DILocation(line: 404, column: 17, scope: !10134)
!10136 = !DILocation(line: 404, column: 22, scope: !10134)
!10137 = !DILocation(line: 404, column: 53, scope: !10134)
!10138 = !DILocation(line: 404, column: 59, scope: !10134)
!10139 = !DILocation(line: 405, column: 7, scope: !10134)
!10140 = !DILocation(line: 405, column: 14, scope: !10134)
!10141 = !DILocation(line: 405, column: 19, scope: !10134)
!10142 = !DILocation(line: 405, column: 33, scope: !10134)
!10143 = !DILocation(line: 406, column: 7, scope: !10134)
!10144 = !DILocation(line: 406, column: 14, scope: !10134)
!10145 = !DILocation(line: 406, column: 18, scope: !10134)
!10146 = !DILocation(line: 404, column: 6, scope: !2399)
!10147 = !DILocation(line: 408, column: 3, scope: !10148)
!10148 = distinct !DILexicalBlock(scope: !10134, file: !3, line: 407, column: 2)
!10149 = !DILocation(line: 413, column: 6, scope: !10150)
!10150 = distinct !DILexicalBlock(scope: !2399, file: !3, line: 413, column: 6)
!10151 = !DILocation(line: 413, column: 18, scope: !10150)
!10152 = !DILocation(line: 413, column: 6, scope: !2399)
!10153 = !DILocation(line: 414, column: 7, scope: !10154)
!10154 = distinct !DILexicalBlock(scope: !10155, file: !3, line: 414, column: 7)
!10155 = distinct !DILexicalBlock(scope: !10150, file: !3, line: 413, column: 28)
!10156 = !DILocation(line: 414, column: 7, scope: !10155)
!10157 = !DILocation(line: 415, column: 4, scope: !10154)
!10158 = !DILocation(line: 416, column: 33, scope: !10159)
!10159 = distinct !DILexicalBlock(scope: !10154, file: !3, line: 416, column: 12)
!10160 = !DILocation(line: 416, column: 12, scope: !10159)
!10161 = !DILocation(line: 416, column: 40, scope: !10159)
!10162 = !DILocation(line: 416, column: 12, scope: !10154)
!10163 = !DILocation(line: 417, column: 16, scope: !10159)
!10164 = !DILocation(line: 417, column: 4, scope: !10159)
!10165 = !DILocation(line: 418, column: 2, scope: !10155)
!10166 = !DILocation(line: 421, column: 6, scope: !10167)
!10167 = distinct !DILexicalBlock(scope: !2399, file: !3, line: 421, column: 6)
!10168 = !DILocation(line: 421, column: 15, scope: !10167)
!10169 = !DILocation(line: 421, column: 6, scope: !2399)
!10170 = !DILocation(line: 421, column: 40, scope: !10167)
!10171 = !DILocation(line: 421, column: 43, scope: !10167)
!10172 = !DILocation(line: 421, column: 52, scope: !10167)
!10173 = !DILocation(line: 421, column: 24, scope: !10167)
!10174 = !DILocation(line: 422, column: 6, scope: !10175)
!10175 = distinct !DILexicalBlock(scope: !2399, file: !3, line: 422, column: 6)
!10176 = !DILocation(line: 422, column: 15, scope: !10175)
!10177 = !DILocation(line: 422, column: 6, scope: !2399)
!10178 = !DILocation(line: 422, column: 44, scope: !10175)
!10179 = !DILocation(line: 422, column: 47, scope: !10175)
!10180 = !DILocation(line: 422, column: 56, scope: !10175)
!10181 = !DILocation(line: 422, column: 26, scope: !10175)
!10182 = !DILocation(line: 423, column: 6, scope: !10183)
!10183 = distinct !DILexicalBlock(scope: !2399, file: !3, line: 423, column: 6)
!10184 = !DILocation(line: 423, column: 15, scope: !10183)
!10185 = !DILocation(line: 423, column: 6, scope: !2399)
!10186 = !DILocation(line: 423, column: 40, scope: !10183)
!10187 = !DILocation(line: 423, column: 43, scope: !10183)
!10188 = !DILocation(line: 423, column: 52, scope: !10183)
!10189 = !DILocation(line: 423, column: 24, scope: !10183)
!10190 = !DILocation(line: 425, column: 11, scope: !2399)
!10191 = !DILocation(line: 425, column: 20, scope: !2399)
!10192 = !DILocation(line: 425, column: 30, scope: !2399)
!10193 = !DILocation(line: 425, column: 33, scope: !2399)
!10194 = !DILocation(line: 425, column: 40, scope: !2399)
!10195 = !DILocation(line: 425, column: 49, scope: !2399)
!10196 = !DILocation(line: 425, column: 9, scope: !2399)
!10197 = !DILocation(line: 428, column: 7, scope: !10198)
!10198 = distinct !DILexicalBlock(scope: !2399, file: !3, line: 428, column: 6)
!10199 = !DILocation(line: 428, column: 14, scope: !10198)
!10200 = !DILocation(line: 428, column: 38, scope: !10198)
!10201 = !DILocation(line: 428, column: 41, scope: !10198)
!10202 = !DILocation(line: 428, column: 6, scope: !2399)
!10203 = !DILocation(line: 429, column: 19, scope: !10204)
!10204 = distinct !DILexicalBlock(scope: !10198, file: !3, line: 428, column: 54)
!10205 = !DILocation(line: 429, column: 22, scope: !10204)
!10206 = !DILocation(line: 429, column: 3, scope: !10204)
!10207 = !DILocation(line: 430, column: 21, scope: !10204)
!10208 = !DILocation(line: 430, column: 24, scope: !10204)
!10209 = !DILocation(line: 430, column: 3, scope: !10204)
!10210 = !DILocation(line: 431, column: 19, scope: !10204)
!10211 = !DILocation(line: 431, column: 22, scope: !10204)
!10212 = !DILocation(line: 431, column: 3, scope: !10204)
!10213 = !DILocation(line: 432, column: 2, scope: !10204)
!10214 = !DILocation(line: 435, column: 19, scope: !10215)
!10215 = distinct !DILexicalBlock(scope: !10198, file: !3, line: 433, column: 7)
!10216 = !DILocation(line: 435, column: 3, scope: !10215)
!10217 = !DILocation(line: 436, column: 21, scope: !10215)
!10218 = !DILocation(line: 436, column: 3, scope: !10215)
!10219 = !DILocation(line: 437, column: 19, scope: !10215)
!10220 = !DILocation(line: 437, column: 3, scope: !10215)
!10221 = !DILocation(line: 440, column: 6, scope: !10222)
!10222 = distinct !DILexicalBlock(scope: !2399, file: !3, line: 440, column: 6)
!10223 = !DILocation(line: 440, column: 13, scope: !10222)
!10224 = !DILocation(line: 440, column: 6, scope: !2399)
!10225 = !DILocation(line: 441, column: 3, scope: !10222)
!10226 = !DILocation(line: 444, column: 6, scope: !10227)
!10227 = distinct !DILexicalBlock(scope: !2399, file: !3, line: 444, column: 6)
!10228 = !DILocation(line: 444, column: 6, scope: !2399)
!10229 = !DILocation(line: 445, column: 15, scope: !10227)
!10230 = !DILocation(line: 445, column: 3, scope: !10227)
!10231 = !DILocation(line: 447, column: 2, scope: !2399)
!10232 = !DILocation(line: 448, column: 1, scope: !2399)
!10233 = distinct !DISubprogram(name: "wm_handler_fileselect_call", scope: !3, file: !3, line: 1801, type: !10234, scopeLine: 1802, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!10234 = !DISubroutineType(types: !10235)
!10235 = !{!34, !2402, !401, !2404, !2552}
!10236 = !DILocalVariable(name: "C", arg: 1, scope: !10233, file: !3, line: 1801, type: !2402)
!10237 = !DILocation(line: 1801, column: 49, scope: !10233)
!10238 = !DILocalVariable(name: "handlers", arg: 2, scope: !10233, file: !3, line: 1801, type: !401)
!10239 = !DILocation(line: 1801, column: 62, scope: !10233)
!10240 = !DILocalVariable(name: "handler", arg: 3, scope: !10233, file: !3, line: 1801, type: !2404)
!10241 = !DILocation(line: 1801, column: 88, scope: !10233)
!10242 = !DILocalVariable(name: "event", arg: 4, scope: !10233, file: !3, line: 1801, type: !2552)
!10243 = !DILocation(line: 1801, column: 106, scope: !10233)
!10244 = !DILocalVariable(name: "action", scope: !10233, file: !3, line: 1803, type: !34)
!10245 = !DILocation(line: 1803, column: 6, scope: !10233)
!10246 = !DILocation(line: 1805, column: 6, scope: !10247)
!10247 = distinct !DILexicalBlock(scope: !10233, file: !3, line: 1805, column: 6)
!10248 = !DILocation(line: 1805, column: 13, scope: !10247)
!10249 = !DILocation(line: 1805, column: 18, scope: !10247)
!10250 = !DILocation(line: 1805, column: 6, scope: !10233)
!10251 = !DILocation(line: 1806, column: 10, scope: !10247)
!10252 = !DILocation(line: 1806, column: 3, scope: !10247)
!10253 = !DILocation(line: 1807, column: 6, scope: !10254)
!10254 = distinct !DILexicalBlock(scope: !10233, file: !3, line: 1807, column: 6)
!10255 = !DILocation(line: 1807, column: 15, scope: !10254)
!10256 = !DILocation(line: 1807, column: 35, scope: !10254)
!10257 = !DILocation(line: 1807, column: 42, scope: !10254)
!10258 = !DILocation(line: 1807, column: 21, scope: !10254)
!10259 = !DILocation(line: 1807, column: 18, scope: !10254)
!10260 = !DILocation(line: 1807, column: 6, scope: !10233)
!10261 = !DILocation(line: 1808, column: 10, scope: !10254)
!10262 = !DILocation(line: 1808, column: 3, scope: !10254)
!10263 = !DILocation(line: 1810, column: 34, scope: !10233)
!10264 = !DILocation(line: 1810, column: 37, scope: !10233)
!10265 = !DILocation(line: 1810, column: 47, scope: !10233)
!10266 = !DILocation(line: 1810, column: 56, scope: !10233)
!10267 = !DILocation(line: 1810, column: 63, scope: !10233)
!10268 = !DILocation(line: 1810, column: 9, scope: !10233)
!10269 = !DILocation(line: 1810, column: 2, scope: !10233)
!10270 = !DILocation(line: 1811, column: 1, scope: !10233)
!10271 = distinct !DISubprogram(name: "wm_operator_check_locked_interface", scope: !3, file: !3, line: 1520, type: !10272, scopeLine: 1521, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!10272 = !DISubroutineType(types: !10273)
!10273 = !{!73, !2402, !1578}
!10274 = !DILocalVariable(name: "C", arg: 1, scope: !10271, file: !3, line: 1520, type: !2402)
!10275 = !DILocation(line: 1520, column: 58, scope: !10271)
!10276 = !DILocalVariable(name: "ot", arg: 2, scope: !10271, file: !3, line: 1520, type: !1578)
!10277 = !DILocation(line: 1520, column: 77, scope: !10271)
!10278 = !DILocalVariable(name: "wm", scope: !10271, file: !3, line: 1522, type: !1543)
!10279 = !DILocation(line: 1522, column: 19, scope: !10271)
!10280 = !DILocation(line: 1522, column: 39, scope: !10271)
!10281 = !DILocation(line: 1522, column: 24, scope: !10271)
!10282 = !DILocation(line: 1524, column: 6, scope: !10283)
!10283 = distinct !DILexicalBlock(scope: !10271, file: !3, line: 1524, column: 6)
!10284 = !DILocation(line: 1524, column: 10, scope: !10283)
!10285 = !DILocation(line: 1524, column: 6, scope: !10271)
!10286 = !DILocation(line: 1525, column: 8, scope: !10287)
!10287 = distinct !DILexicalBlock(scope: !10288, file: !3, line: 1525, column: 7)
!10288 = distinct !DILexicalBlock(scope: !10283, file: !3, line: 1524, column: 31)
!10289 = !DILocation(line: 1525, column: 12, scope: !10287)
!10290 = !DILocation(line: 1525, column: 17, scope: !10287)
!10291 = !DILocation(line: 1525, column: 39, scope: !10287)
!10292 = !DILocation(line: 1525, column: 7, scope: !10288)
!10293 = !DILocation(line: 1526, column: 4, scope: !10294)
!10294 = distinct !DILexicalBlock(scope: !10287, file: !3, line: 1525, column: 45)
!10295 = !DILocation(line: 1528, column: 2, scope: !10288)
!10296 = !DILocation(line: 1530, column: 2, scope: !10271)
!10297 = !DILocation(line: 1531, column: 1, scope: !10271)
!10298 = distinct !DISubprogram(name: "wm_event_modalkeymap", scope: !3, file: !3, line: 1484, type: !10299, scopeLine: 1485, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!10299 = !DISubroutineType(types: !10300)
!10300 = !{null, !2728, !6, !2552, !10301}
!10301 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !73, size: 64)
!10302 = !DILocalVariable(name: "C", arg: 1, scope: !10298, file: !3, line: 1484, type: !2728)
!10303 = !DILocation(line: 1484, column: 50, scope: !10298)
!10304 = !DILocalVariable(name: "op", arg: 2, scope: !10298, file: !3, line: 1484, type: !6)
!10305 = !DILocation(line: 1484, column: 65, scope: !10298)
!10306 = !DILocalVariable(name: "event", arg: 3, scope: !10298, file: !3, line: 1484, type: !2552)
!10307 = !DILocation(line: 1484, column: 78, scope: !10298)
!10308 = !DILocalVariable(name: "dbl_click_disabled", arg: 4, scope: !10298, file: !3, line: 1484, type: !10301)
!10309 = !DILocation(line: 1484, column: 91, scope: !10298)
!10310 = !DILocation(line: 1487, column: 6, scope: !10311)
!10311 = distinct !DILexicalBlock(scope: !10298, file: !3, line: 1487, column: 6)
!10312 = !DILocation(line: 1487, column: 10, scope: !10311)
!10313 = !DILocation(line: 1487, column: 6, scope: !10298)
!10314 = !DILocation(line: 1488, column: 8, scope: !10311)
!10315 = !DILocation(line: 1488, column: 12, scope: !10311)
!10316 = !DILocation(line: 1488, column: 6, scope: !10311)
!10317 = !DILocation(line: 1488, column: 3, scope: !10311)
!10318 = !DILocation(line: 1490, column: 6, scope: !10319)
!10319 = distinct !DILexicalBlock(scope: !10298, file: !3, line: 1490, column: 6)
!10320 = !DILocation(line: 1490, column: 10, scope: !10319)
!10321 = !DILocation(line: 1490, column: 16, scope: !10319)
!10322 = !DILocation(line: 1490, column: 6, scope: !10298)
!10323 = !DILocalVariable(name: "keymap", scope: !10324, file: !3, line: 1491, type: !2414)
!10324 = distinct !DILexicalBlock(scope: !10319, file: !3, line: 1490, column: 29)
!10325 = !DILocation(line: 1491, column: 13, scope: !10324)
!10326 = !DILocation(line: 1491, column: 54, scope: !10324)
!10327 = !DILocation(line: 1491, column: 39, scope: !10324)
!10328 = !DILocation(line: 1491, column: 58, scope: !10324)
!10329 = !DILocation(line: 1491, column: 62, scope: !10324)
!10330 = !DILocation(line: 1491, column: 68, scope: !10324)
!10331 = !DILocation(line: 1491, column: 22, scope: !10324)
!10332 = !DILocalVariable(name: "kmi", scope: !10324, file: !3, line: 1492, type: !9302)
!10333 = !DILocation(line: 1492, column: 17, scope: !10324)
!10334 = !DILocation(line: 1494, column: 14, scope: !10335)
!10335 = distinct !DILexicalBlock(scope: !10324, file: !3, line: 1494, column: 3)
!10336 = !DILocation(line: 1494, column: 22, scope: !10335)
!10337 = !DILocation(line: 1494, column: 28, scope: !10335)
!10338 = !DILocation(line: 1494, column: 12, scope: !10335)
!10339 = !DILocation(line: 1494, column: 8, scope: !10335)
!10340 = !DILocation(line: 1494, column: 35, scope: !10341)
!10341 = distinct !DILexicalBlock(scope: !10335, file: !3, line: 1494, column: 3)
!10342 = !DILocation(line: 1494, column: 3, scope: !10335)
!10343 = !DILocation(line: 1495, column: 22, scope: !10344)
!10344 = distinct !DILexicalBlock(scope: !10345, file: !3, line: 1495, column: 8)
!10345 = distinct !DILexicalBlock(scope: !10341, file: !3, line: 1494, column: 57)
!10346 = !DILocation(line: 1495, column: 29, scope: !10344)
!10347 = !DILocation(line: 1495, column: 8, scope: !10344)
!10348 = !DILocation(line: 1495, column: 8, scope: !10345)
!10349 = !DILocation(line: 1497, column: 23, scope: !10350)
!10350 = distinct !DILexicalBlock(scope: !10344, file: !3, line: 1495, column: 35)
!10351 = !DILocation(line: 1497, column: 30, scope: !10350)
!10352 = !DILocation(line: 1497, column: 5, scope: !10350)
!10353 = !DILocation(line: 1497, column: 12, scope: !10350)
!10354 = !DILocation(line: 1497, column: 21, scope: !10350)
!10355 = !DILocation(line: 1498, column: 22, scope: !10350)
!10356 = !DILocation(line: 1498, column: 29, scope: !10350)
!10357 = !DILocation(line: 1498, column: 5, scope: !10350)
!10358 = !DILocation(line: 1498, column: 12, scope: !10350)
!10359 = !DILocation(line: 1498, column: 20, scope: !10350)
!10360 = !DILocation(line: 1499, column: 5, scope: !10350)
!10361 = !DILocation(line: 1499, column: 12, scope: !10350)
!10362 = !DILocation(line: 1499, column: 17, scope: !10350)
!10363 = !DILocation(line: 1500, column: 18, scope: !10350)
!10364 = !DILocation(line: 1500, column: 23, scope: !10350)
!10365 = !DILocation(line: 1500, column: 5, scope: !10350)
!10366 = !DILocation(line: 1500, column: 12, scope: !10350)
!10367 = !DILocation(line: 1500, column: 16, scope: !10350)
!10368 = !DILocation(line: 1502, column: 5, scope: !10350)
!10369 = !DILocation(line: 1504, column: 3, scope: !10345)
!10370 = !DILocation(line: 1494, column: 46, scope: !10341)
!10371 = !DILocation(line: 1494, column: 51, scope: !10341)
!10372 = !DILocation(line: 1494, column: 44, scope: !10341)
!10373 = !DILocation(line: 1494, column: 3, scope: !10341)
!10374 = distinct !{!10374, !10342, !10375}
!10375 = !DILocation(line: 1504, column: 3, scope: !10335)
!10376 = !DILocation(line: 1505, column: 2, scope: !10324)
!10377 = !DILocation(line: 1510, column: 7, scope: !10378)
!10378 = distinct !DILexicalBlock(scope: !10379, file: !3, line: 1510, column: 7)
!10379 = distinct !DILexicalBlock(scope: !10319, file: !3, line: 1506, column: 7)
!10380 = !DILocation(line: 1510, column: 14, scope: !10378)
!10381 = !DILocation(line: 1510, column: 18, scope: !10378)
!10382 = !DILocation(line: 1510, column: 7, scope: !10379)
!10383 = !DILocation(line: 1511, column: 4, scope: !10384)
!10384 = distinct !DILexicalBlock(scope: !10378, file: !3, line: 1510, column: 35)
!10385 = !DILocation(line: 1511, column: 11, scope: !10384)
!10386 = !DILocation(line: 1511, column: 15, scope: !10384)
!10387 = !DILocation(line: 1512, column: 5, scope: !10384)
!10388 = !DILocation(line: 1512, column: 24, scope: !10384)
!10389 = !DILocation(line: 1513, column: 3, scope: !10384)
!10390 = !DILocation(line: 1515, column: 1, scope: !10298)
!10391 = distinct !DISubprogram(name: "wm_event_modalmap_end", scope: !3, file: !3, line: 1535, type: !10392, scopeLine: 1536, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!10392 = !DISubroutineType(types: !10393)
!10393 = !{null, !2552, !73}
!10394 = !DILocalVariable(name: "event", arg: 1, scope: !10391, file: !3, line: 1535, type: !2552)
!10395 = !DILocation(line: 1535, column: 44, scope: !10391)
!10396 = !DILocalVariable(name: "dbl_click_disabled", arg: 2, scope: !10391, file: !3, line: 1535, type: !73)
!10397 = !DILocation(line: 1535, column: 56, scope: !10391)
!10398 = !DILocation(line: 1537, column: 6, scope: !10399)
!10399 = distinct !DILexicalBlock(scope: !10391, file: !3, line: 1537, column: 6)
!10400 = !DILocation(line: 1537, column: 13, scope: !10399)
!10401 = !DILocation(line: 1537, column: 18, scope: !10399)
!10402 = !DILocation(line: 1537, column: 6, scope: !10391)
!10403 = !DILocation(line: 1538, column: 17, scope: !10404)
!10404 = distinct !DILexicalBlock(scope: !10399, file: !3, line: 1537, column: 36)
!10405 = !DILocation(line: 1538, column: 24, scope: !10404)
!10406 = !DILocation(line: 1538, column: 3, scope: !10404)
!10407 = !DILocation(line: 1538, column: 10, scope: !10404)
!10408 = !DILocation(line: 1538, column: 15, scope: !10404)
!10409 = !DILocation(line: 1539, column: 3, scope: !10404)
!10410 = !DILocation(line: 1539, column: 10, scope: !10404)
!10411 = !DILocation(line: 1539, column: 19, scope: !10404)
!10412 = !DILocation(line: 1540, column: 16, scope: !10404)
!10413 = !DILocation(line: 1540, column: 23, scope: !10404)
!10414 = !DILocation(line: 1540, column: 3, scope: !10404)
!10415 = !DILocation(line: 1540, column: 10, scope: !10404)
!10416 = !DILocation(line: 1540, column: 14, scope: !10404)
!10417 = !DILocation(line: 1541, column: 3, scope: !10404)
!10418 = !DILocation(line: 1541, column: 10, scope: !10404)
!10419 = !DILocation(line: 1541, column: 18, scope: !10404)
!10420 = !DILocation(line: 1542, column: 2, scope: !10404)
!10421 = !DILocation(line: 1543, column: 11, scope: !10422)
!10422 = distinct !DILexicalBlock(scope: !10399, file: !3, line: 1543, column: 11)
!10423 = !DILocation(line: 1543, column: 11, scope: !10399)
!10424 = !DILocation(line: 1544, column: 3, scope: !10422)
!10425 = !DILocation(line: 1544, column: 10, scope: !10422)
!10426 = !DILocation(line: 1544, column: 14, scope: !10422)
!10427 = !DILocation(line: 1546, column: 1, scope: !10391)
!10428 = distinct !DISubprogram(name: "wm_paintcursor_tag", scope: !3, file: !3, line: 2119, type: !10429, scopeLine: 2120, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!10429 = !DISubroutineType(types: !10430)
!10430 = !{null, !2402, !10431, !2737}
!10431 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10432, size: 64)
!10432 = !DIDerivedType(tag: DW_TAG_typedef, name: "wmPaintCursor", file: !10433, line: 44, baseType: !10434)
!10433 = !DIFile(filename: "blender/source/blender/windowmanager/wm.h", directory: "/home/venkat/IF-DV/spec_build_release/CPU_2017/benchspec/CPU/526.blender_r/build/build_base_ld-loop-ext-m64.0000")
!10434 = distinct !DICompositeType(tag: DW_TAG_structure_type, name: "wmPaintCursor", file: !10433, line: 37, size: 320, elements: !10435)
!10435 = !{!10436, !10438, !10439, !10440, !10441}
!10436 = !DIDerivedType(tag: DW_TAG_member, name: "next", scope: !10434, file: !10433, line: 38, baseType: !10437, size: 64)
!10437 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10434, size: 64)
!10438 = !DIDerivedType(tag: DW_TAG_member, name: "prev", scope: !10434, file: !10433, line: 38, baseType: !10437, size: 64, offset: 64)
!10439 = !DIDerivedType(tag: DW_TAG_member, name: "customdata", scope: !10434, file: !10433, line: 40, baseType: !40, size: 64, offset: 128)
!10440 = !DIDerivedType(tag: DW_TAG_member, name: "poll", scope: !10434, file: !10433, line: 42, baseType: !133, size: 64, offset: 192)
!10441 = !DIDerivedType(tag: DW_TAG_member, name: "draw", scope: !10434, file: !10433, line: 43, baseType: !10442, size: 64, offset: 256)
!10442 = !DIDerivedType(tag: DW_TAG_pointer_type, baseType: !10443, size: 64)
!10443 = !DISubroutineType(types: !10444)
!10444 = !{null, !2402, !34, !34, !40}
!10445 = !DILocalVariable(name: "C", arg: 1, scope: !10428, file: !3, line: 2119, type: !2402)
!10446 = !DILocation(line: 2119, column: 42, scope: !10428)
!10447 = !DILocalVariable(name: "pc", arg: 2, scope: !10428, file: !3, line: 2119, type: !10431)
!10448 = !DILocation(line: 2119, column: 60, scope: !10428)
!10449 = !DILocalVariable(name: "ar", arg: 3, scope: !10428, file: !3, line: 2119, type: !2737)
!10450 = !DILocation(line: 2119, column: 73, scope: !10428)
!10451 = !DILocation(line: 2121, column: 6, scope: !10452)
!10452 = distinct !DILexicalBlock(scope: !10428, file: !3, line: 2121, column: 6)
!10453 = !DILocation(line: 2121, column: 6, scope: !10428)
!10454 = !DILocation(line: 2122, column: 3, scope: !10455)
!10455 = distinct !DILexicalBlock(scope: !10452, file: !3, line: 2121, column: 10)
!10456 = !DILocation(line: 2122, column: 10, scope: !10457)
!10457 = distinct !DILexicalBlock(scope: !10458, file: !3, line: 2122, column: 3)
!10458 = distinct !DILexicalBlock(scope: !10455, file: !3, line: 2122, column: 3)
!10459 = !DILocation(line: 2122, column: 3, scope: !10458)
!10460 = !DILocation(line: 2123, column: 8, scope: !10461)
!10461 = distinct !DILexicalBlock(scope: !10462, file: !3, line: 2123, column: 8)
!10462 = distinct !DILexicalBlock(scope: !10457, file: !3, line: 2122, column: 29)
!10463 = !DILocation(line: 2123, column: 12, scope: !10461)
!10464 = !DILocation(line: 2123, column: 17, scope: !10461)
!10465 = !DILocation(line: 2123, column: 25, scope: !10461)
!10466 = !DILocation(line: 2123, column: 28, scope: !10461)
!10467 = !DILocation(line: 2123, column: 32, scope: !10461)
!10468 = !DILocation(line: 2123, column: 37, scope: !10461)
!10469 = !DILocation(line: 2123, column: 8, scope: !10462)
!10470 = !DILocalVariable(name: "win", scope: !10471, file: !3, line: 2124, type: !2567)
!10471 = distinct !DILexicalBlock(scope: !10461, file: !3, line: 2123, column: 41)
!10472 = !DILocation(line: 2124, column: 15, scope: !10471)
!10473 = !DILocation(line: 2124, column: 35, scope: !10471)
!10474 = !DILocation(line: 2124, column: 21, scope: !10471)
!10475 = !DILocation(line: 2125, column: 32, scope: !10471)
!10476 = !DILocation(line: 2125, column: 37, scope: !10471)
!10477 = !DILocation(line: 2125, column: 5, scope: !10471)
!10478 = !DILocation(line: 2126, column: 4, scope: !10471)
!10479 = !DILocation(line: 2127, column: 3, scope: !10462)
!10480 = !DILocation(line: 2122, column: 19, scope: !10457)
!10481 = !DILocation(line: 2122, column: 23, scope: !10457)
!10482 = !DILocation(line: 2122, column: 17, scope: !10457)
!10483 = !DILocation(line: 2122, column: 3, scope: !10457)
!10484 = distinct !{!10484, !10459, !10485}
!10485 = !DILocation(line: 2127, column: 3, scope: !10458)
!10486 = !DILocation(line: 2128, column: 2, scope: !10455)
!10487 = !DILocation(line: 2129, column: 1, scope: !10428)
!10488 = distinct !DISubprogram(name: "mul_v3_v3fl", scope: !7504, file: !7504, line: 399, type: !10489, scopeLine: 400, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!10489 = !DISubroutineType(types: !10490)
!10490 = !{null, !2455, !8235, !120}
!10491 = !DILocalVariable(name: "r", arg: 1, scope: !10488, file: !7504, line: 399, type: !2455)
!10492 = !DILocation(line: 399, column: 32, scope: !10488)
!10493 = !DILocalVariable(name: "a", arg: 2, scope: !10488, file: !7504, line: 399, type: !8235)
!10494 = !DILocation(line: 399, column: 50, scope: !10488)
!10495 = !DILocalVariable(name: "f", arg: 3, scope: !10488, file: !7504, line: 399, type: !120)
!10496 = !DILocation(line: 399, column: 62, scope: !10488)
!10497 = !DILocation(line: 401, column: 9, scope: !10488)
!10498 = !DILocation(line: 401, column: 16, scope: !10488)
!10499 = !DILocation(line: 401, column: 14, scope: !10488)
!10500 = !DILocation(line: 401, column: 2, scope: !10488)
!10501 = !DILocation(line: 401, column: 7, scope: !10488)
!10502 = !DILocation(line: 402, column: 9, scope: !10488)
!10503 = !DILocation(line: 402, column: 16, scope: !10488)
!10504 = !DILocation(line: 402, column: 14, scope: !10488)
!10505 = !DILocation(line: 402, column: 2, scope: !10488)
!10506 = !DILocation(line: 402, column: 7, scope: !10488)
!10507 = !DILocation(line: 403, column: 9, scope: !10488)
!10508 = !DILocation(line: 403, column: 16, scope: !10488)
!10509 = !DILocation(line: 403, column: 14, scope: !10488)
!10510 = !DILocation(line: 403, column: 2, scope: !10488)
!10511 = !DILocation(line: 403, column: 7, scope: !10488)
!10512 = !DILocation(line: 404, column: 1, scope: !10488)
!10513 = distinct !DISubprogram(name: "dot_v3v3", scope: !7504, file: !7504, line: 619, type: !10514, scopeLine: 620, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!10514 = !DISubroutineType(types: !10515)
!10515 = !{!120, !8235, !8235}
!10516 = !DILocalVariable(name: "a", arg: 1, scope: !10513, file: !7504, line: 619, type: !8235)
!10517 = !DILocation(line: 619, column: 36, scope: !10513)
!10518 = !DILocalVariable(name: "b", arg: 2, scope: !10513, file: !7504, line: 619, type: !8235)
!10519 = !DILocation(line: 619, column: 54, scope: !10513)
!10520 = !DILocation(line: 621, column: 9, scope: !10513)
!10521 = !DILocation(line: 621, column: 16, scope: !10513)
!10522 = !DILocation(line: 621, column: 14, scope: !10513)
!10523 = !DILocation(line: 621, column: 23, scope: !10513)
!10524 = !DILocation(line: 621, column: 30, scope: !10513)
!10525 = !DILocation(line: 621, column: 28, scope: !10513)
!10526 = !DILocation(line: 621, column: 21, scope: !10513)
!10527 = !DILocation(line: 621, column: 37, scope: !10513)
!10528 = !DILocation(line: 621, column: 44, scope: !10513)
!10529 = !DILocation(line: 621, column: 42, scope: !10513)
!10530 = !DILocation(line: 621, column: 35, scope: !10513)
!10531 = !DILocation(line: 621, column: 2, scope: !10513)
!10532 = distinct !DISubprogram(name: "zero_v3", scope: !7504, file: !7504, line: 43, type: !8352, scopeLine: 44, flags: DIFlagPrototyped, spFlags: DISPFlagLocalToUnit | DISPFlagDefinition, unit: !1584, retainedNodes: !2554)
!10533 = !DILocalVariable(name: "r", arg: 1, scope: !10532, file: !7504, line: 43, type: !2455)
!10534 = !DILocation(line: 43, column: 28, scope: !10532)
!10535 = !DILocation(line: 45, column: 2, scope: !10532)
!10536 = !DILocation(line: 45, column: 7, scope: !10532)
!10537 = !DILocation(line: 46, column: 2, scope: !10532)
!10538 = !DILocation(line: 46, column: 7, scope: !10532)
!10539 = !DILocation(line: 47, column: 2, scope: !10532)
!10540 = !DILocation(line: 47, column: 7, scope: !10532)
!10541 = !DILocation(line: 48, column: 1, scope: !10532)
